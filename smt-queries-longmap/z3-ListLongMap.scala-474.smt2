; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!9426 () Bool)

(assert start!9426)

(declare-fun b!68229 () Bool)

(declare-fun b_free!2077 () Bool)

(declare-fun b_next!2077 () Bool)

(assert (=> b!68229 (= b_free!2077 (not b_next!2077))))

(declare-fun tp!8392 () Bool)

(declare-fun b_and!4185 () Bool)

(assert (=> b!68229 (= tp!8392 b_and!4185)))

(declare-fun b!68221 () Bool)

(declare-fun b_free!2079 () Bool)

(declare-fun b_next!2079 () Bool)

(assert (=> b!68221 (= b_free!2079 (not b_next!2079))))

(declare-fun tp!8391 () Bool)

(declare-fun b_and!4187 () Bool)

(assert (=> b!68221 (= tp!8391 b_and!4187)))

(declare-fun b!68211 () Bool)

(declare-fun e!44694 () Bool)

(declare-fun e!44699 () Bool)

(declare-fun mapRes!3095 () Bool)

(assert (=> b!68211 (= e!44694 (and e!44699 mapRes!3095))))

(declare-fun condMapEmpty!3095 () Bool)

(declare-datatypes ((V!2921 0))(
  ( (V!2922 (val!1272 Int)) )
))
(declare-datatypes ((array!3831 0))(
  ( (array!3832 (arr!1828 (Array (_ BitVec 32) (_ BitVec 64))) (size!2065 (_ BitVec 32))) )
))
(declare-datatypes ((ValueCell!884 0))(
  ( (ValueCellFull!884 (v!2484 V!2921)) (EmptyCell!884) )
))
(declare-datatypes ((array!3833 0))(
  ( (array!3834 (arr!1829 (Array (_ BitVec 32) ValueCell!884)) (size!2066 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!676 0))(
  ( (LongMapFixedSize!677 (defaultEntry!2167 Int) (mask!6111 (_ BitVec 32)) (extraKeys!2034 (_ BitVec 32)) (zeroValue!2073 V!2921) (minValue!2073 V!2921) (_size!387 (_ BitVec 32)) (_keys!3810 array!3831) (_values!2150 array!3833) (_vacant!387 (_ BitVec 32))) )
))
(declare-fun newMap!16 () LongMapFixedSize!676)

(declare-fun mapDefault!3096 () ValueCell!884)

(assert (=> b!68211 (= condMapEmpty!3095 (= (arr!1829 (_values!2150 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!884)) mapDefault!3096)))))

(declare-fun b!68213 () Bool)

(declare-fun e!44705 () Bool)

(declare-datatypes ((Cell!472 0))(
  ( (Cell!473 (v!2485 LongMapFixedSize!676)) )
))
(declare-datatypes ((LongMap!472 0))(
  ( (LongMap!473 (underlying!247 Cell!472)) )
))
(declare-fun thiss!992 () LongMap!472)

(assert (=> b!68213 (= e!44705 (or (not (= (size!2066 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 (mask!6111 (v!2485 (underlying!247 thiss!992)))))) (= (size!2065 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (size!2066 (_values!2150 (v!2485 (underlying!247 thiss!992)))))))))

(declare-fun b!68214 () Bool)

(declare-fun res!36724 () Bool)

(declare-fun e!44703 () Bool)

(assert (=> b!68214 (=> (not res!36724) (not e!44703))))

(assert (=> b!68214 (= res!36724 (bvsge (bvadd #b00000000000000000000000000000001 (mask!6111 newMap!16)) (_size!387 (v!2485 (underlying!247 thiss!992)))))))

(declare-fun mapIsEmpty!3095 () Bool)

(declare-fun mapRes!3096 () Bool)

(assert (=> mapIsEmpty!3095 mapRes!3096))

(declare-fun mapNonEmpty!3095 () Bool)

(declare-fun tp!8394 () Bool)

(declare-fun e!44700 () Bool)

(assert (=> mapNonEmpty!3095 (= mapRes!3095 (and tp!8394 e!44700))))

(declare-fun mapValue!3095 () ValueCell!884)

(declare-fun mapRest!3096 () (Array (_ BitVec 32) ValueCell!884))

(declare-fun mapKey!3096 () (_ BitVec 32))

(assert (=> mapNonEmpty!3095 (= (arr!1829 (_values!2150 newMap!16)) (store mapRest!3096 mapKey!3096 mapValue!3095))))

(declare-fun b!68215 () Bool)

(declare-fun e!44704 () Bool)

(declare-fun tp_is_empty!2455 () Bool)

(assert (=> b!68215 (= e!44704 tp_is_empty!2455)))

(declare-fun b!68216 () Bool)

(declare-fun e!44688 () Bool)

(assert (=> b!68216 (= e!44703 e!44688)))

(declare-fun res!36729 () Bool)

(assert (=> b!68216 (=> (not res!36729) (not e!44688))))

(declare-datatypes ((tuple2!2090 0))(
  ( (tuple2!2091 (_1!1056 (_ BitVec 64)) (_2!1056 V!2921)) )
))
(declare-datatypes ((List!1470 0))(
  ( (Nil!1467) (Cons!1466 (h!2051 tuple2!2090) (t!4964 List!1470)) )
))
(declare-datatypes ((ListLongMap!1385 0))(
  ( (ListLongMap!1386 (toList!708 List!1470)) )
))
(declare-fun lt!29674 () ListLongMap!1385)

(declare-fun lt!29677 () ListLongMap!1385)

(assert (=> b!68216 (= res!36729 (= lt!29674 lt!29677))))

(declare-fun map!1137 (LongMapFixedSize!676) ListLongMap!1385)

(assert (=> b!68216 (= lt!29677 (map!1137 newMap!16))))

(declare-fun from!355 () (_ BitVec 32))

(declare-fun getCurrentListMap!403 (array!3831 array!3833 (_ BitVec 32) (_ BitVec 32) V!2921 V!2921 (_ BitVec 32) Int) ListLongMap!1385)

(assert (=> b!68216 (= lt!29674 (getCurrentListMap!403 (_keys!3810 (v!2485 (underlying!247 thiss!992))) (_values!2150 (v!2485 (underlying!247 thiss!992))) (mask!6111 (v!2485 (underlying!247 thiss!992))) (extraKeys!2034 (v!2485 (underlying!247 thiss!992))) (zeroValue!2073 (v!2485 (underlying!247 thiss!992))) (minValue!2073 (v!2485 (underlying!247 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2167 (v!2485 (underlying!247 thiss!992)))))))

(declare-fun b!68217 () Bool)

(declare-fun res!36730 () Bool)

(assert (=> b!68217 (=> (not res!36730) (not e!44703))))

(declare-fun valid!289 (LongMapFixedSize!676) Bool)

(assert (=> b!68217 (= res!36730 (valid!289 newMap!16))))

(declare-fun b!68218 () Bool)

(declare-fun e!44695 () Bool)

(assert (=> b!68218 (= e!44688 e!44695)))

(declare-fun res!36728 () Bool)

(assert (=> b!68218 (=> (not res!36728) (not e!44695))))

(assert (=> b!68218 (= res!36728 (and (not (= (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!29673 () V!2921)

(declare-fun get!1126 (ValueCell!884 V!2921) V!2921)

(declare-fun dynLambda!321 (Int (_ BitVec 64)) V!2921)

(assert (=> b!68218 (= lt!29673 (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) from!355) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!68219 () Bool)

(declare-datatypes ((Unit!1898 0))(
  ( (Unit!1899) )
))
(declare-fun e!44702 () Unit!1898)

(declare-fun Unit!1900 () Unit!1898)

(assert (=> b!68219 (= e!44702 Unit!1900)))

(declare-fun lt!29678 () Unit!1898)

(declare-fun lemmaListMapContainsThenArrayContainsFrom!44 (array!3831 array!3833 (_ BitVec 32) (_ BitVec 32) V!2921 V!2921 (_ BitVec 64) (_ BitVec 32) Int) Unit!1898)

(assert (=> b!68219 (= lt!29678 (lemmaListMapContainsThenArrayContainsFrom!44 (_keys!3810 (v!2485 (underlying!247 thiss!992))) (_values!2150 (v!2485 (underlying!247 thiss!992))) (mask!6111 (v!2485 (underlying!247 thiss!992))) (extraKeys!2034 (v!2485 (underlying!247 thiss!992))) (zeroValue!2073 (v!2485 (underlying!247 thiss!992))) (minValue!2073 (v!2485 (underlying!247 thiss!992))) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2167 (v!2485 (underlying!247 thiss!992)))))))

(declare-fun arrayContainsKey!0 (array!3831 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> b!68219 (arrayContainsKey!0 (_keys!3810 (v!2485 (underlying!247 thiss!992))) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355))))

(declare-fun lt!29679 () Unit!1898)

(declare-fun lemmaNoDuplicateFromThenFromBigger!0 (array!3831 (_ BitVec 32) (_ BitVec 32)) Unit!1898)

(assert (=> b!68219 (= lt!29679 (lemmaNoDuplicateFromThenFromBigger!0 (_keys!3810 (v!2485 (underlying!247 thiss!992))) #b00000000000000000000000000000000 from!355))))

(declare-datatypes ((List!1471 0))(
  ( (Nil!1468) (Cons!1467 (h!2052 (_ BitVec 64)) (t!4965 List!1471)) )
))
(declare-fun arrayNoDuplicates!0 (array!3831 (_ BitVec 32) List!1471) Bool)

(assert (=> b!68219 (arrayNoDuplicates!0 (_keys!3810 (v!2485 (underlying!247 thiss!992))) from!355 Nil!1468)))

(declare-fun lt!29672 () Unit!1898)

(declare-fun lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (array!3831 (_ BitVec 32) (_ BitVec 64) List!1471) Unit!1898)

(assert (=> b!68219 (= lt!29672 (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!3810 (v!2485 (underlying!247 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (Cons!1467 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) Nil!1468)))))

(assert (=> b!68219 false))

(declare-fun b!68220 () Bool)

(declare-fun e!44690 () Bool)

(assert (=> b!68220 (= e!44690 tp_is_empty!2455)))

(declare-fun e!44697 () Bool)

(declare-fun array_inv!1141 (array!3831) Bool)

(declare-fun array_inv!1142 (array!3833) Bool)

(assert (=> b!68221 (= e!44697 (and tp!8391 tp_is_empty!2455 (array_inv!1141 (_keys!3810 newMap!16)) (array_inv!1142 (_values!2150 newMap!16)) e!44694))))

(declare-fun mapNonEmpty!3096 () Bool)

(declare-fun tp!8393 () Bool)

(assert (=> mapNonEmpty!3096 (= mapRes!3096 (and tp!8393 e!44690))))

(declare-fun mapRest!3095 () (Array (_ BitVec 32) ValueCell!884))

(declare-fun mapValue!3096 () ValueCell!884)

(declare-fun mapKey!3095 () (_ BitVec 32))

(assert (=> mapNonEmpty!3096 (= (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (store mapRest!3095 mapKey!3095 mapValue!3096))))

(declare-fun b!68222 () Bool)

(declare-fun res!36725 () Bool)

(assert (=> b!68222 (=> (not res!36725) (not e!44703))))

(assert (=> b!68222 (= res!36725 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2065 (_keys!3810 (v!2485 (underlying!247 thiss!992)))))))))

(declare-fun b!68223 () Bool)

(declare-fun e!44701 () Bool)

(assert (=> b!68223 (= e!44701 (and e!44704 mapRes!3096))))

(declare-fun condMapEmpty!3096 () Bool)

(declare-fun mapDefault!3095 () ValueCell!884)

(assert (=> b!68223 (= condMapEmpty!3096 (= (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!884)) mapDefault!3095)))))

(declare-fun b!68224 () Bool)

(assert (=> b!68224 (= e!44700 tp_is_empty!2455)))

(declare-fun res!36726 () Bool)

(assert (=> start!9426 (=> (not res!36726) (not e!44703))))

(declare-fun valid!290 (LongMap!472) Bool)

(assert (=> start!9426 (= res!36726 (valid!290 thiss!992))))

(assert (=> start!9426 e!44703))

(declare-fun e!44696 () Bool)

(assert (=> start!9426 e!44696))

(assert (=> start!9426 true))

(assert (=> start!9426 e!44697))

(declare-fun b!68212 () Bool)

(declare-fun e!44698 () Bool)

(assert (=> b!68212 (= e!44695 e!44698)))

(declare-fun res!36723 () Bool)

(assert (=> b!68212 (=> (not res!36723) (not e!44698))))

(declare-datatypes ((tuple2!2092 0))(
  ( (tuple2!2093 (_1!1057 Bool) (_2!1057 LongMapFixedSize!676)) )
))
(declare-fun lt!29676 () tuple2!2092)

(assert (=> b!68212 (= res!36723 (and (_1!1057 lt!29676) (bvsgt from!355 #b00000000000000000000000000000000)))))

(declare-fun lt!29671 () Unit!1898)

(assert (=> b!68212 (= lt!29671 e!44702)))

(declare-fun c!9629 () Bool)

(declare-fun contains!709 (ListLongMap!1385 (_ BitVec 64)) Bool)

(assert (=> b!68212 (= c!9629 (contains!709 lt!29677 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))

(declare-fun update!97 (LongMapFixedSize!676 (_ BitVec 64) V!2921) tuple2!2092)

(assert (=> b!68212 (= lt!29676 (update!97 newMap!16 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))

(declare-fun b!68225 () Bool)

(assert (=> b!68225 (= e!44699 tp_is_empty!2455)))

(declare-fun b!68226 () Bool)

(declare-fun e!44692 () Bool)

(declare-fun e!44689 () Bool)

(assert (=> b!68226 (= e!44692 e!44689)))

(declare-fun b!68227 () Bool)

(declare-fun Unit!1901 () Unit!1898)

(assert (=> b!68227 (= e!44702 Unit!1901)))

(declare-fun mapIsEmpty!3096 () Bool)

(assert (=> mapIsEmpty!3096 mapRes!3095))

(declare-fun b!68228 () Bool)

(assert (=> b!68228 (= e!44698 (not e!44705))))

(declare-fun res!36727 () Bool)

(assert (=> b!68228 (=> res!36727 e!44705)))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> b!68228 (= res!36727 (not (validMask!0 (mask!6111 (v!2485 (underlying!247 thiss!992))))))))

(declare-fun lt!29682 () ListLongMap!1385)

(declare-fun lt!29680 () tuple2!2090)

(declare-fun lt!29675 () tuple2!2090)

(declare-fun +!89 (ListLongMap!1385 tuple2!2090) ListLongMap!1385)

(assert (=> b!68228 (= (+!89 (+!89 lt!29682 lt!29680) lt!29675) (+!89 (+!89 lt!29682 lt!29675) lt!29680))))

(assert (=> b!68228 (= lt!29675 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))

(assert (=> b!68228 (= lt!29680 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))

(declare-fun lt!29681 () Unit!1898)

(declare-fun addCommutativeForDiffKeys!8 (ListLongMap!1385 (_ BitVec 64) V!2921 (_ BitVec 64) V!2921) Unit!1898)

(assert (=> b!68228 (= lt!29681 (addCommutativeForDiffKeys!8 lt!29682 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))

(declare-fun getCurrentListMapNoExtraKeys!53 (array!3831 array!3833 (_ BitVec 32) (_ BitVec 32) V!2921 V!2921 (_ BitVec 32) Int) ListLongMap!1385)

(assert (=> b!68228 (= lt!29682 (getCurrentListMapNoExtraKeys!53 (_keys!3810 (v!2485 (underlying!247 thiss!992))) (_values!2150 (v!2485 (underlying!247 thiss!992))) (mask!6111 (v!2485 (underlying!247 thiss!992))) (extraKeys!2034 (v!2485 (underlying!247 thiss!992))) (zeroValue!2073 (v!2485 (underlying!247 thiss!992))) (minValue!2073 (v!2485 (underlying!247 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2167 (v!2485 (underlying!247 thiss!992)))))))

(assert (=> b!68229 (= e!44689 (and tp!8392 tp_is_empty!2455 (array_inv!1141 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (array_inv!1142 (_values!2150 (v!2485 (underlying!247 thiss!992)))) e!44701))))

(declare-fun b!68230 () Bool)

(assert (=> b!68230 (= e!44696 e!44692)))

(assert (= (and start!9426 res!36726) b!68222))

(assert (= (and b!68222 res!36725) b!68217))

(assert (= (and b!68217 res!36730) b!68214))

(assert (= (and b!68214 res!36724) b!68216))

(assert (= (and b!68216 res!36729) b!68218))

(assert (= (and b!68218 res!36728) b!68212))

(assert (= (and b!68212 c!9629) b!68219))

(assert (= (and b!68212 (not c!9629)) b!68227))

(assert (= (and b!68212 res!36723) b!68228))

(assert (= (and b!68228 (not res!36727)) b!68213))

(assert (= (and b!68223 condMapEmpty!3096) mapIsEmpty!3095))

(assert (= (and b!68223 (not condMapEmpty!3096)) mapNonEmpty!3096))

(get-info :version)

(assert (= (and mapNonEmpty!3096 ((_ is ValueCellFull!884) mapValue!3096)) b!68220))

(assert (= (and b!68223 ((_ is ValueCellFull!884) mapDefault!3095)) b!68215))

(assert (= b!68229 b!68223))

(assert (= b!68226 b!68229))

(assert (= b!68230 b!68226))

(assert (= start!9426 b!68230))

(assert (= (and b!68211 condMapEmpty!3095) mapIsEmpty!3096))

(assert (= (and b!68211 (not condMapEmpty!3095)) mapNonEmpty!3095))

(assert (= (and mapNonEmpty!3095 ((_ is ValueCellFull!884) mapValue!3095)) b!68224))

(assert (= (and b!68211 ((_ is ValueCellFull!884) mapDefault!3096)) b!68225))

(assert (= b!68221 b!68211))

(assert (= start!9426 b!68221))

(declare-fun b_lambda!3049 () Bool)

(assert (=> (not b_lambda!3049) (not b!68218)))

(declare-fun t!4961 () Bool)

(declare-fun tb!1469 () Bool)

(assert (=> (and b!68229 (= (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) (defaultEntry!2167 (v!2485 (underlying!247 thiss!992)))) t!4961) tb!1469))

(declare-fun result!2595 () Bool)

(assert (=> tb!1469 (= result!2595 tp_is_empty!2455)))

(assert (=> b!68218 t!4961))

(declare-fun b_and!4189 () Bool)

(assert (= b_and!4185 (and (=> t!4961 result!2595) b_and!4189)))

(declare-fun tb!1471 () Bool)

(declare-fun t!4963 () Bool)

(assert (=> (and b!68221 (= (defaultEntry!2167 newMap!16) (defaultEntry!2167 (v!2485 (underlying!247 thiss!992)))) t!4963) tb!1471))

(declare-fun result!2599 () Bool)

(assert (= result!2599 result!2595))

(assert (=> b!68218 t!4963))

(declare-fun b_and!4191 () Bool)

(assert (= b_and!4187 (and (=> t!4963 result!2599) b_and!4191)))

(declare-fun m!63767 () Bool)

(assert (=> b!68218 m!63767))

(declare-fun m!63769 () Bool)

(assert (=> b!68218 m!63769))

(declare-fun m!63771 () Bool)

(assert (=> b!68218 m!63771))

(assert (=> b!68218 m!63769))

(assert (=> b!68218 m!63771))

(declare-fun m!63773 () Bool)

(assert (=> b!68218 m!63773))

(declare-fun m!63775 () Bool)

(assert (=> mapNonEmpty!3095 m!63775))

(declare-fun m!63777 () Bool)

(assert (=> b!68221 m!63777))

(declare-fun m!63779 () Bool)

(assert (=> b!68221 m!63779))

(declare-fun m!63781 () Bool)

(assert (=> b!68216 m!63781))

(declare-fun m!63783 () Bool)

(assert (=> b!68216 m!63783))

(declare-fun m!63785 () Bool)

(assert (=> start!9426 m!63785))

(declare-fun m!63787 () Bool)

(assert (=> b!68228 m!63787))

(declare-fun m!63789 () Bool)

(assert (=> b!68228 m!63789))

(assert (=> b!68228 m!63767))

(assert (=> b!68228 m!63789))

(declare-fun m!63791 () Bool)

(assert (=> b!68228 m!63791))

(declare-fun m!63793 () Bool)

(assert (=> b!68228 m!63793))

(assert (=> b!68228 m!63767))

(declare-fun m!63795 () Bool)

(assert (=> b!68228 m!63795))

(declare-fun m!63797 () Bool)

(assert (=> b!68228 m!63797))

(declare-fun m!63799 () Bool)

(assert (=> b!68228 m!63799))

(assert (=> b!68228 m!63797))

(declare-fun m!63801 () Bool)

(assert (=> mapNonEmpty!3096 m!63801))

(declare-fun m!63803 () Bool)

(assert (=> b!68229 m!63803))

(declare-fun m!63805 () Bool)

(assert (=> b!68229 m!63805))

(declare-fun m!63807 () Bool)

(assert (=> b!68217 m!63807))

(declare-fun m!63809 () Bool)

(assert (=> b!68219 m!63809))

(declare-fun m!63811 () Bool)

(assert (=> b!68219 m!63811))

(assert (=> b!68219 m!63767))

(declare-fun m!63813 () Bool)

(assert (=> b!68219 m!63813))

(assert (=> b!68219 m!63767))

(assert (=> b!68219 m!63767))

(declare-fun m!63815 () Bool)

(assert (=> b!68219 m!63815))

(assert (=> b!68219 m!63767))

(declare-fun m!63817 () Bool)

(assert (=> b!68219 m!63817))

(assert (=> b!68212 m!63767))

(assert (=> b!68212 m!63767))

(declare-fun m!63819 () Bool)

(assert (=> b!68212 m!63819))

(assert (=> b!68212 m!63767))

(declare-fun m!63821 () Bool)

(assert (=> b!68212 m!63821))

(check-sat (not b!68216) (not b!68217) (not b_next!2077) (not b_next!2079) (not b!68221) (not b!68212) (not b!68219) b_and!4191 (not b!68229) (not b_lambda!3049) (not b!68228) (not mapNonEmpty!3096) tp_is_empty!2455 (not mapNonEmpty!3095) (not start!9426) (not b!68218) b_and!4189)
(check-sat b_and!4189 b_and!4191 (not b_next!2077) (not b_next!2079))
(get-model)

(declare-fun b_lambda!3055 () Bool)

(assert (= b_lambda!3049 (or (and b!68229 b_free!2077) (and b!68221 b_free!2079 (= (defaultEntry!2167 newMap!16) (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))))) b_lambda!3055)))

(check-sat (not b!68216) (not b!68217) (not b_next!2077) (not b_next!2079) (not b!68221) (not b_lambda!3055) (not b!68212) (not b!68219) b_and!4191 (not b!68229) (not b!68228) (not mapNonEmpty!3096) tp_is_empty!2455 (not mapNonEmpty!3095) (not start!9426) (not b!68218) b_and!4189)
(check-sat b_and!4189 b_and!4191 (not b_next!2077) (not b_next!2079))
(get-model)

(declare-fun d!14651 () Bool)

(declare-fun res!36785 () Bool)

(declare-fun e!44816 () Bool)

(assert (=> d!14651 (=> (not res!36785) (not e!44816))))

(declare-fun simpleValid!49 (LongMapFixedSize!676) Bool)

(assert (=> d!14651 (= res!36785 (simpleValid!49 newMap!16))))

(assert (=> d!14651 (= (valid!289 newMap!16) e!44816)))

(declare-fun b!68363 () Bool)

(declare-fun res!36786 () Bool)

(assert (=> b!68363 (=> (not res!36786) (not e!44816))))

(declare-fun arrayCountValidKeys!0 (array!3831 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!68363 (= res!36786 (= (arrayCountValidKeys!0 (_keys!3810 newMap!16) #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))) (_size!387 newMap!16)))))

(declare-fun b!68364 () Bool)

(declare-fun res!36787 () Bool)

(assert (=> b!68364 (=> (not res!36787) (not e!44816))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!3831 (_ BitVec 32)) Bool)

(assert (=> b!68364 (= res!36787 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3810 newMap!16) (mask!6111 newMap!16)))))

(declare-fun b!68365 () Bool)

(assert (=> b!68365 (= e!44816 (arrayNoDuplicates!0 (_keys!3810 newMap!16) #b00000000000000000000000000000000 Nil!1468))))

(assert (= (and d!14651 res!36785) b!68363))

(assert (= (and b!68363 res!36786) b!68364))

(assert (= (and b!68364 res!36787) b!68365))

(declare-fun m!63935 () Bool)

(assert (=> d!14651 m!63935))

(declare-fun m!63937 () Bool)

(assert (=> b!68363 m!63937))

(declare-fun m!63939 () Bool)

(assert (=> b!68364 m!63939))

(declare-fun m!63941 () Bool)

(assert (=> b!68365 m!63941))

(assert (=> b!68217 d!14651))

(declare-fun d!14653 () Bool)

(assert (=> d!14653 (= (valid!290 thiss!992) (valid!289 (v!2485 (underlying!247 thiss!992))))))

(declare-fun bs!2932 () Bool)

(assert (= bs!2932 d!14653))

(declare-fun m!63943 () Bool)

(assert (=> bs!2932 m!63943))

(assert (=> start!9426 d!14653))

(declare-fun d!14655 () Bool)

(assert (=> d!14655 (= (map!1137 newMap!16) (getCurrentListMap!403 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun bs!2933 () Bool)

(assert (= bs!2933 d!14655))

(declare-fun m!63945 () Bool)

(assert (=> bs!2933 m!63945))

(assert (=> b!68216 d!14655))

(declare-fun b!68408 () Bool)

(declare-fun e!44853 () ListLongMap!1385)

(declare-fun call!5758 () ListLongMap!1385)

(assert (=> b!68408 (= e!44853 call!5758)))

(declare-fun b!68409 () Bool)

(declare-fun e!44850 () Bool)

(declare-fun e!44845 () Bool)

(assert (=> b!68409 (= e!44850 e!44845)))

(declare-fun res!36813 () Bool)

(declare-fun call!5759 () Bool)

(assert (=> b!68409 (= res!36813 call!5759)))

(assert (=> b!68409 (=> (not res!36813) (not e!44845))))

(declare-fun b!68411 () Bool)

(declare-fun e!44851 () Bool)

(declare-fun call!5764 () Bool)

(assert (=> b!68411 (= e!44851 (not call!5764))))

(declare-fun bm!5755 () Bool)

(declare-fun lt!29805 () ListLongMap!1385)

(assert (=> bm!5755 (= call!5759 (contains!709 lt!29805 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!68412 () Bool)

(declare-fun c!9649 () Bool)

(assert (=> b!68412 (= c!9649 (and (not (= (bvand (extraKeys!2034 (v!2485 (underlying!247 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2034 (v!2485 (underlying!247 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!44849 () ListLongMap!1385)

(assert (=> b!68412 (= e!44849 e!44853)))

(declare-fun call!5762 () ListLongMap!1385)

(declare-fun call!5763 () ListLongMap!1385)

(declare-fun bm!5756 () Bool)

(declare-fun call!5760 () ListLongMap!1385)

(declare-fun c!9651 () Bool)

(declare-fun c!9648 () Bool)

(assert (=> bm!5756 (= call!5762 (+!89 (ite c!9651 call!5763 (ite c!9648 call!5760 call!5758)) (ite (or c!9651 c!9648) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(declare-fun b!68413 () Bool)

(declare-fun e!44847 () Bool)

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!68413 (= e!44847 (validKeyInArray!0 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!68414 () Bool)

(declare-fun res!36811 () Bool)

(declare-fun e!44844 () Bool)

(assert (=> b!68414 (=> (not res!36811) (not e!44844))))

(declare-fun e!44854 () Bool)

(assert (=> b!68414 (= res!36811 e!44854)))

(declare-fun res!36807 () Bool)

(assert (=> b!68414 (=> res!36807 e!44854)))

(assert (=> b!68414 (= res!36807 (not e!44847))))

(declare-fun res!36808 () Bool)

(assert (=> b!68414 (=> (not res!36808) (not e!44847))))

(assert (=> b!68414 (= res!36808 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2065 (_keys!3810 (v!2485 (underlying!247 thiss!992))))))))

(declare-fun b!68415 () Bool)

(declare-fun e!44848 () ListLongMap!1385)

(assert (=> b!68415 (= e!44848 e!44849)))

(assert (=> b!68415 (= c!9648 (and (not (= (bvand (extraKeys!2034 (v!2485 (underlying!247 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2034 (v!2485 (underlying!247 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!68416 () Bool)

(declare-fun e!44846 () Bool)

(assert (=> b!68416 (= e!44851 e!44846)))

(declare-fun res!36809 () Bool)

(assert (=> b!68416 (= res!36809 call!5764)))

(assert (=> b!68416 (=> (not res!36809) (not e!44846))))

(declare-fun bm!5757 () Bool)

(assert (=> bm!5757 (= call!5760 call!5763)))

(declare-fun b!68417 () Bool)

(declare-fun call!5761 () ListLongMap!1385)

(assert (=> b!68417 (= e!44849 call!5761)))

(declare-fun bm!5758 () Bool)

(assert (=> bm!5758 (= call!5761 call!5762)))

(declare-fun b!68418 () Bool)

(assert (=> b!68418 (= e!44853 call!5761)))

(declare-fun b!68419 () Bool)

(declare-fun res!36812 () Bool)

(assert (=> b!68419 (=> (not res!36812) (not e!44844))))

(assert (=> b!68419 (= res!36812 e!44851)))

(declare-fun c!9652 () Bool)

(assert (=> b!68419 (= c!9652 (not (= (bvand (extraKeys!2034 (v!2485 (underlying!247 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!68420 () Bool)

(declare-fun apply!73 (ListLongMap!1385 (_ BitVec 64)) V!2921)

(assert (=> b!68420 (= e!44846 (= (apply!73 lt!29805 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))

(declare-fun bm!5759 () Bool)

(assert (=> bm!5759 (= call!5763 (getCurrentListMapNoExtraKeys!53 (_keys!3810 (v!2485 (underlying!247 thiss!992))) (_values!2150 (v!2485 (underlying!247 thiss!992))) (mask!6111 (v!2485 (underlying!247 thiss!992))) (extraKeys!2034 (v!2485 (underlying!247 thiss!992))) (zeroValue!2073 (v!2485 (underlying!247 thiss!992))) (minValue!2073 (v!2485 (underlying!247 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2167 (v!2485 (underlying!247 thiss!992)))))))

(declare-fun b!68421 () Bool)

(assert (=> b!68421 (= e!44845 (= (apply!73 lt!29805 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))

(declare-fun e!44843 () Bool)

(declare-fun b!68422 () Bool)

(assert (=> b!68422 (= e!44843 (= (apply!73 lt!29805 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!68422 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2066 (_values!2150 (v!2485 (underlying!247 thiss!992))))))))

(assert (=> b!68422 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2065 (_keys!3810 (v!2485 (underlying!247 thiss!992))))))))

(declare-fun bm!5760 () Bool)

(assert (=> bm!5760 (= call!5758 call!5760)))

(declare-fun d!14657 () Bool)

(assert (=> d!14657 e!44844))

(declare-fun res!36814 () Bool)

(assert (=> d!14657 (=> (not res!36814) (not e!44844))))

(assert (=> d!14657 (= res!36814 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2065 (_keys!3810 (v!2485 (underlying!247 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2065 (_keys!3810 (v!2485 (underlying!247 thiss!992))))))))))

(declare-fun lt!29807 () ListLongMap!1385)

(assert (=> d!14657 (= lt!29805 lt!29807)))

(declare-fun lt!29817 () Unit!1898)

(declare-fun e!44855 () Unit!1898)

(assert (=> d!14657 (= lt!29817 e!44855)))

(declare-fun c!9653 () Bool)

(declare-fun e!44852 () Bool)

(assert (=> d!14657 (= c!9653 e!44852)))

(declare-fun res!36806 () Bool)

(assert (=> d!14657 (=> (not res!36806) (not e!44852))))

(assert (=> d!14657 (= res!36806 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2065 (_keys!3810 (v!2485 (underlying!247 thiss!992))))))))

(assert (=> d!14657 (= lt!29807 e!44848)))

(assert (=> d!14657 (= c!9651 (and (not (= (bvand (extraKeys!2034 (v!2485 (underlying!247 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2034 (v!2485 (underlying!247 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!14657 (validMask!0 (mask!6111 (v!2485 (underlying!247 thiss!992))))))

(assert (=> d!14657 (= (getCurrentListMap!403 (_keys!3810 (v!2485 (underlying!247 thiss!992))) (_values!2150 (v!2485 (underlying!247 thiss!992))) (mask!6111 (v!2485 (underlying!247 thiss!992))) (extraKeys!2034 (v!2485 (underlying!247 thiss!992))) (zeroValue!2073 (v!2485 (underlying!247 thiss!992))) (minValue!2073 (v!2485 (underlying!247 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2167 (v!2485 (underlying!247 thiss!992)))) lt!29805)))

(declare-fun b!68410 () Bool)

(assert (=> b!68410 (= e!44852 (validKeyInArray!0 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!68423 () Bool)

(assert (=> b!68423 (= e!44844 e!44850)))

(declare-fun c!9650 () Bool)

(assert (=> b!68423 (= c!9650 (not (= (bvand (extraKeys!2034 (v!2485 (underlying!247 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!68424 () Bool)

(assert (=> b!68424 (= e!44854 e!44843)))

(declare-fun res!36810 () Bool)

(assert (=> b!68424 (=> (not res!36810) (not e!44843))))

(assert (=> b!68424 (= res!36810 (contains!709 lt!29805 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!68424 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2065 (_keys!3810 (v!2485 (underlying!247 thiss!992))))))))

(declare-fun b!68425 () Bool)

(assert (=> b!68425 (= e!44848 (+!89 call!5762 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))))

(declare-fun b!68426 () Bool)

(assert (=> b!68426 (= e!44850 (not call!5759))))

(declare-fun bm!5761 () Bool)

(assert (=> bm!5761 (= call!5764 (contains!709 lt!29805 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!68427 () Bool)

(declare-fun Unit!1906 () Unit!1898)

(assert (=> b!68427 (= e!44855 Unit!1906)))

(declare-fun b!68428 () Bool)

(declare-fun lt!29816 () Unit!1898)

(assert (=> b!68428 (= e!44855 lt!29816)))

(declare-fun lt!29799 () ListLongMap!1385)

(assert (=> b!68428 (= lt!29799 (getCurrentListMapNoExtraKeys!53 (_keys!3810 (v!2485 (underlying!247 thiss!992))) (_values!2150 (v!2485 (underlying!247 thiss!992))) (mask!6111 (v!2485 (underlying!247 thiss!992))) (extraKeys!2034 (v!2485 (underlying!247 thiss!992))) (zeroValue!2073 (v!2485 (underlying!247 thiss!992))) (minValue!2073 (v!2485 (underlying!247 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2167 (v!2485 (underlying!247 thiss!992)))))))

(declare-fun lt!29803 () (_ BitVec 64))

(assert (=> b!68428 (= lt!29803 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29802 () (_ BitVec 64))

(assert (=> b!68428 (= lt!29802 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!29819 () Unit!1898)

(declare-fun addStillContains!49 (ListLongMap!1385 (_ BitVec 64) V!2921 (_ BitVec 64)) Unit!1898)

(assert (=> b!68428 (= lt!29819 (addStillContains!49 lt!29799 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))) lt!29802))))

(assert (=> b!68428 (contains!709 (+!89 lt!29799 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))) lt!29802)))

(declare-fun lt!29813 () Unit!1898)

(assert (=> b!68428 (= lt!29813 lt!29819)))

(declare-fun lt!29814 () ListLongMap!1385)

(assert (=> b!68428 (= lt!29814 (getCurrentListMapNoExtraKeys!53 (_keys!3810 (v!2485 (underlying!247 thiss!992))) (_values!2150 (v!2485 (underlying!247 thiss!992))) (mask!6111 (v!2485 (underlying!247 thiss!992))) (extraKeys!2034 (v!2485 (underlying!247 thiss!992))) (zeroValue!2073 (v!2485 (underlying!247 thiss!992))) (minValue!2073 (v!2485 (underlying!247 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2167 (v!2485 (underlying!247 thiss!992)))))))

(declare-fun lt!29804 () (_ BitVec 64))

(assert (=> b!68428 (= lt!29804 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29801 () (_ BitVec 64))

(assert (=> b!68428 (= lt!29801 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!29808 () Unit!1898)

(declare-fun addApplyDifferent!49 (ListLongMap!1385 (_ BitVec 64) V!2921 (_ BitVec 64)) Unit!1898)

(assert (=> b!68428 (= lt!29808 (addApplyDifferent!49 lt!29814 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992))) lt!29801))))

(assert (=> b!68428 (= (apply!73 (+!89 lt!29814 (tuple2!2091 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992))))) lt!29801) (apply!73 lt!29814 lt!29801))))

(declare-fun lt!29820 () Unit!1898)

(assert (=> b!68428 (= lt!29820 lt!29808)))

(declare-fun lt!29800 () ListLongMap!1385)

(assert (=> b!68428 (= lt!29800 (getCurrentListMapNoExtraKeys!53 (_keys!3810 (v!2485 (underlying!247 thiss!992))) (_values!2150 (v!2485 (underlying!247 thiss!992))) (mask!6111 (v!2485 (underlying!247 thiss!992))) (extraKeys!2034 (v!2485 (underlying!247 thiss!992))) (zeroValue!2073 (v!2485 (underlying!247 thiss!992))) (minValue!2073 (v!2485 (underlying!247 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2167 (v!2485 (underlying!247 thiss!992)))))))

(declare-fun lt!29812 () (_ BitVec 64))

(assert (=> b!68428 (= lt!29812 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29809 () (_ BitVec 64))

(assert (=> b!68428 (= lt!29809 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!29811 () Unit!1898)

(assert (=> b!68428 (= lt!29811 (addApplyDifferent!49 lt!29800 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))) lt!29809))))

(assert (=> b!68428 (= (apply!73 (+!89 lt!29800 (tuple2!2091 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))) lt!29809) (apply!73 lt!29800 lt!29809))))

(declare-fun lt!29806 () Unit!1898)

(assert (=> b!68428 (= lt!29806 lt!29811)))

(declare-fun lt!29818 () ListLongMap!1385)

(assert (=> b!68428 (= lt!29818 (getCurrentListMapNoExtraKeys!53 (_keys!3810 (v!2485 (underlying!247 thiss!992))) (_values!2150 (v!2485 (underlying!247 thiss!992))) (mask!6111 (v!2485 (underlying!247 thiss!992))) (extraKeys!2034 (v!2485 (underlying!247 thiss!992))) (zeroValue!2073 (v!2485 (underlying!247 thiss!992))) (minValue!2073 (v!2485 (underlying!247 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2167 (v!2485 (underlying!247 thiss!992)))))))

(declare-fun lt!29815 () (_ BitVec 64))

(assert (=> b!68428 (= lt!29815 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29810 () (_ BitVec 64))

(assert (=> b!68428 (= lt!29810 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!68428 (= lt!29816 (addApplyDifferent!49 lt!29818 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992))) lt!29810))))

(assert (=> b!68428 (= (apply!73 (+!89 lt!29818 (tuple2!2091 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992))))) lt!29810) (apply!73 lt!29818 lt!29810))))

(assert (= (and d!14657 c!9651) b!68425))

(assert (= (and d!14657 (not c!9651)) b!68415))

(assert (= (and b!68415 c!9648) b!68417))

(assert (= (and b!68415 (not c!9648)) b!68412))

(assert (= (and b!68412 c!9649) b!68418))

(assert (= (and b!68412 (not c!9649)) b!68408))

(assert (= (or b!68418 b!68408) bm!5760))

(assert (= (or b!68417 bm!5760) bm!5757))

(assert (= (or b!68417 b!68418) bm!5758))

(assert (= (or b!68425 bm!5757) bm!5759))

(assert (= (or b!68425 bm!5758) bm!5756))

(assert (= (and d!14657 res!36806) b!68410))

(assert (= (and d!14657 c!9653) b!68428))

(assert (= (and d!14657 (not c!9653)) b!68427))

(assert (= (and d!14657 res!36814) b!68414))

(assert (= (and b!68414 res!36808) b!68413))

(assert (= (and b!68414 (not res!36807)) b!68424))

(assert (= (and b!68424 res!36810) b!68422))

(assert (= (and b!68414 res!36811) b!68419))

(assert (= (and b!68419 c!9652) b!68416))

(assert (= (and b!68419 (not c!9652)) b!68411))

(assert (= (and b!68416 res!36809) b!68420))

(assert (= (or b!68416 b!68411) bm!5761))

(assert (= (and b!68419 res!36812) b!68423))

(assert (= (and b!68423 c!9650) b!68409))

(assert (= (and b!68423 (not c!9650)) b!68426))

(assert (= (and b!68409 res!36813) b!68421))

(assert (= (or b!68409 b!68426) bm!5755))

(declare-fun b_lambda!3057 () Bool)

(assert (=> (not b_lambda!3057) (not b!68422)))

(assert (=> b!68422 t!4961))

(declare-fun b_and!4209 () Bool)

(assert (= b_and!4189 (and (=> t!4961 result!2595) b_and!4209)))

(assert (=> b!68422 t!4963))

(declare-fun b_and!4211 () Bool)

(assert (= b_and!4191 (and (=> t!4963 result!2599) b_and!4211)))

(declare-fun m!63947 () Bool)

(assert (=> b!68425 m!63947))

(declare-fun m!63949 () Bool)

(assert (=> bm!5756 m!63949))

(assert (=> bm!5759 m!63793))

(declare-fun m!63951 () Bool)

(assert (=> b!68422 m!63951))

(declare-fun m!63953 () Bool)

(assert (=> b!68422 m!63953))

(assert (=> b!68422 m!63951))

(declare-fun m!63955 () Bool)

(assert (=> b!68422 m!63955))

(assert (=> b!68422 m!63771))

(assert (=> b!68422 m!63953))

(assert (=> b!68422 m!63771))

(declare-fun m!63957 () Bool)

(assert (=> b!68422 m!63957))

(assert (=> b!68410 m!63951))

(assert (=> b!68410 m!63951))

(declare-fun m!63959 () Bool)

(assert (=> b!68410 m!63959))

(assert (=> b!68413 m!63951))

(assert (=> b!68413 m!63951))

(assert (=> b!68413 m!63959))

(declare-fun m!63961 () Bool)

(assert (=> bm!5755 m!63961))

(declare-fun m!63963 () Bool)

(assert (=> b!68421 m!63963))

(declare-fun m!63965 () Bool)

(assert (=> bm!5761 m!63965))

(declare-fun m!63967 () Bool)

(assert (=> b!68428 m!63967))

(declare-fun m!63969 () Bool)

(assert (=> b!68428 m!63969))

(declare-fun m!63971 () Bool)

(assert (=> b!68428 m!63971))

(assert (=> b!68428 m!63969))

(assert (=> b!68428 m!63967))

(declare-fun m!63973 () Bool)

(assert (=> b!68428 m!63973))

(declare-fun m!63975 () Bool)

(assert (=> b!68428 m!63975))

(declare-fun m!63977 () Bool)

(assert (=> b!68428 m!63977))

(declare-fun m!63979 () Bool)

(assert (=> b!68428 m!63979))

(declare-fun m!63981 () Bool)

(assert (=> b!68428 m!63981))

(declare-fun m!63983 () Bool)

(assert (=> b!68428 m!63983))

(declare-fun m!63985 () Bool)

(assert (=> b!68428 m!63985))

(assert (=> b!68428 m!63793))

(declare-fun m!63987 () Bool)

(assert (=> b!68428 m!63987))

(declare-fun m!63989 () Bool)

(assert (=> b!68428 m!63989))

(assert (=> b!68428 m!63951))

(declare-fun m!63991 () Bool)

(assert (=> b!68428 m!63991))

(declare-fun m!63993 () Bool)

(assert (=> b!68428 m!63993))

(assert (=> b!68428 m!63979))

(assert (=> b!68428 m!63991))

(declare-fun m!63995 () Bool)

(assert (=> b!68428 m!63995))

(assert (=> b!68424 m!63951))

(assert (=> b!68424 m!63951))

(declare-fun m!63997 () Bool)

(assert (=> b!68424 m!63997))

(declare-fun m!63999 () Bool)

(assert (=> b!68420 m!63999))

(assert (=> d!14657 m!63787))

(assert (=> b!68216 d!14657))

(declare-fun d!14659 () Bool)

(declare-fun c!9656 () Bool)

(assert (=> d!14659 (= c!9656 ((_ is ValueCellFull!884) (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) from!355)))))

(declare-fun e!44858 () V!2921)

(assert (=> d!14659 (= (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) from!355) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!44858)))

(declare-fun b!68433 () Bool)

(declare-fun get!1127 (ValueCell!884 V!2921) V!2921)

(assert (=> b!68433 (= e!44858 (get!1127 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) from!355) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!68434 () Bool)

(declare-fun get!1128 (ValueCell!884 V!2921) V!2921)

(assert (=> b!68434 (= e!44858 (get!1128 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) from!355) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14659 c!9656) b!68433))

(assert (= (and d!14659 (not c!9656)) b!68434))

(assert (=> b!68433 m!63769))

(assert (=> b!68433 m!63771))

(declare-fun m!64001 () Bool)

(assert (=> b!68433 m!64001))

(assert (=> b!68434 m!63769))

(assert (=> b!68434 m!63771))

(declare-fun m!64003 () Bool)

(assert (=> b!68434 m!64003))

(assert (=> b!68218 d!14659))

(declare-fun b!68459 () Bool)

(declare-fun e!44878 () Bool)

(declare-fun lt!29835 () ListLongMap!1385)

(declare-fun isEmpty!314 (ListLongMap!1385) Bool)

(assert (=> b!68459 (= e!44878 (isEmpty!314 lt!29835))))

(declare-fun b!68460 () Bool)

(declare-fun e!44876 () Bool)

(declare-fun e!44874 () Bool)

(assert (=> b!68460 (= e!44876 e!44874)))

(assert (=> b!68460 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2065 (_keys!3810 (v!2485 (underlying!247 thiss!992))))))))

(declare-fun res!36824 () Bool)

(assert (=> b!68460 (= res!36824 (contains!709 lt!29835 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!68460 (=> (not res!36824) (not e!44874))))

(declare-fun b!68461 () Bool)

(declare-fun e!44877 () ListLongMap!1385)

(declare-fun e!44875 () ListLongMap!1385)

(assert (=> b!68461 (= e!44877 e!44875)))

(declare-fun c!9668 () Bool)

(assert (=> b!68461 (= c!9668 (validKeyInArray!0 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!68462 () Bool)

(declare-fun lt!29840 () Unit!1898)

(declare-fun lt!29841 () Unit!1898)

(assert (=> b!68462 (= lt!29840 lt!29841)))

(declare-fun lt!29836 () V!2921)

(declare-fun lt!29837 () (_ BitVec 64))

(declare-fun lt!29838 () ListLongMap!1385)

(declare-fun lt!29839 () (_ BitVec 64))

(assert (=> b!68462 (not (contains!709 (+!89 lt!29838 (tuple2!2091 lt!29837 lt!29836)) lt!29839))))

(declare-fun addStillNotContains!23 (ListLongMap!1385 (_ BitVec 64) V!2921 (_ BitVec 64)) Unit!1898)

(assert (=> b!68462 (= lt!29841 (addStillNotContains!23 lt!29838 lt!29837 lt!29836 lt!29839))))

(assert (=> b!68462 (= lt!29839 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!68462 (= lt!29836 (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!68462 (= lt!29837 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun call!5767 () ListLongMap!1385)

(assert (=> b!68462 (= lt!29838 call!5767)))

(assert (=> b!68462 (= e!44875 (+!89 call!5767 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!68463 () Bool)

(assert (=> b!68463 (= e!44878 (= lt!29835 (getCurrentListMapNoExtraKeys!53 (_keys!3810 (v!2485 (underlying!247 thiss!992))) (_values!2150 (v!2485 (underlying!247 thiss!992))) (mask!6111 (v!2485 (underlying!247 thiss!992))) (extraKeys!2034 (v!2485 (underlying!247 thiss!992))) (zeroValue!2073 (v!2485 (underlying!247 thiss!992))) (minValue!2073 (v!2485 (underlying!247 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))))))))

(declare-fun b!68464 () Bool)

(assert (=> b!68464 (= e!44877 (ListLongMap!1386 Nil!1467))))

(declare-fun b!68465 () Bool)

(declare-fun e!44873 () Bool)

(assert (=> b!68465 (= e!44873 e!44876)))

(declare-fun c!9665 () Bool)

(declare-fun e!44879 () Bool)

(assert (=> b!68465 (= c!9665 e!44879)))

(declare-fun res!36826 () Bool)

(assert (=> b!68465 (=> (not res!36826) (not e!44879))))

(assert (=> b!68465 (= res!36826 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2065 (_keys!3810 (v!2485 (underlying!247 thiss!992))))))))

(declare-fun b!68466 () Bool)

(declare-fun res!36823 () Bool)

(assert (=> b!68466 (=> (not res!36823) (not e!44873))))

(assert (=> b!68466 (= res!36823 (not (contains!709 lt!29835 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!68467 () Bool)

(assert (=> b!68467 (= e!44876 e!44878)))

(declare-fun c!9666 () Bool)

(assert (=> b!68467 (= c!9666 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2065 (_keys!3810 (v!2485 (underlying!247 thiss!992))))))))

(declare-fun d!14661 () Bool)

(assert (=> d!14661 e!44873))

(declare-fun res!36825 () Bool)

(assert (=> d!14661 (=> (not res!36825) (not e!44873))))

(assert (=> d!14661 (= res!36825 (not (contains!709 lt!29835 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!14661 (= lt!29835 e!44877)))

(declare-fun c!9667 () Bool)

(assert (=> d!14661 (= c!9667 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2065 (_keys!3810 (v!2485 (underlying!247 thiss!992))))))))

(assert (=> d!14661 (validMask!0 (mask!6111 (v!2485 (underlying!247 thiss!992))))))

(assert (=> d!14661 (= (getCurrentListMapNoExtraKeys!53 (_keys!3810 (v!2485 (underlying!247 thiss!992))) (_values!2150 (v!2485 (underlying!247 thiss!992))) (mask!6111 (v!2485 (underlying!247 thiss!992))) (extraKeys!2034 (v!2485 (underlying!247 thiss!992))) (zeroValue!2073 (v!2485 (underlying!247 thiss!992))) (minValue!2073 (v!2485 (underlying!247 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2167 (v!2485 (underlying!247 thiss!992)))) lt!29835)))

(declare-fun bm!5764 () Bool)

(assert (=> bm!5764 (= call!5767 (getCurrentListMapNoExtraKeys!53 (_keys!3810 (v!2485 (underlying!247 thiss!992))) (_values!2150 (v!2485 (underlying!247 thiss!992))) (mask!6111 (v!2485 (underlying!247 thiss!992))) (extraKeys!2034 (v!2485 (underlying!247 thiss!992))) (zeroValue!2073 (v!2485 (underlying!247 thiss!992))) (minValue!2073 (v!2485 (underlying!247 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2167 (v!2485 (underlying!247 thiss!992)))))))

(declare-fun b!68468 () Bool)

(assert (=> b!68468 (= e!44875 call!5767)))

(declare-fun b!68469 () Bool)

(assert (=> b!68469 (= e!44879 (validKeyInArray!0 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!68469 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(declare-fun b!68470 () Bool)

(assert (=> b!68470 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2065 (_keys!3810 (v!2485 (underlying!247 thiss!992))))))))

(assert (=> b!68470 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2066 (_values!2150 (v!2485 (underlying!247 thiss!992))))))))

(assert (=> b!68470 (= e!44874 (= (apply!73 lt!29835 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!14661 c!9667) b!68464))

(assert (= (and d!14661 (not c!9667)) b!68461))

(assert (= (and b!68461 c!9668) b!68462))

(assert (= (and b!68461 (not c!9668)) b!68468))

(assert (= (or b!68462 b!68468) bm!5764))

(assert (= (and d!14661 res!36825) b!68466))

(assert (= (and b!68466 res!36823) b!68465))

(assert (= (and b!68465 res!36826) b!68469))

(assert (= (and b!68465 c!9665) b!68460))

(assert (= (and b!68465 (not c!9665)) b!68467))

(assert (= (and b!68460 res!36824) b!68470))

(assert (= (and b!68467 c!9666) b!68463))

(assert (= (and b!68467 (not c!9666)) b!68459))

(declare-fun b_lambda!3059 () Bool)

(assert (=> (not b_lambda!3059) (not b!68462)))

(assert (=> b!68462 t!4961))

(declare-fun b_and!4213 () Bool)

(assert (= b_and!4209 (and (=> t!4961 result!2595) b_and!4213)))

(assert (=> b!68462 t!4963))

(declare-fun b_and!4215 () Bool)

(assert (= b_and!4211 (and (=> t!4963 result!2599) b_and!4215)))

(declare-fun b_lambda!3061 () Bool)

(assert (=> (not b_lambda!3061) (not b!68470)))

(assert (=> b!68470 t!4961))

(declare-fun b_and!4217 () Bool)

(assert (= b_and!4213 (and (=> t!4961 result!2595) b_and!4217)))

(assert (=> b!68470 t!4963))

(declare-fun b_and!4219 () Bool)

(assert (= b_and!4215 (and (=> t!4963 result!2599) b_and!4219)))

(assert (=> b!68469 m!63951))

(assert (=> b!68469 m!63951))

(assert (=> b!68469 m!63959))

(assert (=> b!68461 m!63951))

(assert (=> b!68461 m!63951))

(assert (=> b!68461 m!63959))

(declare-fun m!64005 () Bool)

(assert (=> bm!5764 m!64005))

(assert (=> b!68463 m!64005))

(assert (=> b!68460 m!63951))

(assert (=> b!68460 m!63951))

(declare-fun m!64007 () Bool)

(assert (=> b!68460 m!64007))

(assert (=> b!68470 m!63953))

(assert (=> b!68470 m!63771))

(assert (=> b!68470 m!63957))

(assert (=> b!68470 m!63951))

(declare-fun m!64009 () Bool)

(assert (=> b!68470 m!64009))

(assert (=> b!68470 m!63771))

(assert (=> b!68470 m!63953))

(assert (=> b!68470 m!63951))

(declare-fun m!64011 () Bool)

(assert (=> b!68459 m!64011))

(declare-fun m!64013 () Bool)

(assert (=> b!68462 m!64013))

(assert (=> b!68462 m!63953))

(assert (=> b!68462 m!63771))

(assert (=> b!68462 m!63957))

(assert (=> b!68462 m!63771))

(declare-fun m!64015 () Bool)

(assert (=> b!68462 m!64015))

(declare-fun m!64017 () Bool)

(assert (=> b!68462 m!64017))

(assert (=> b!68462 m!63953))

(assert (=> b!68462 m!64015))

(declare-fun m!64019 () Bool)

(assert (=> b!68462 m!64019))

(assert (=> b!68462 m!63951))

(declare-fun m!64021 () Bool)

(assert (=> d!14661 m!64021))

(assert (=> d!14661 m!63787))

(declare-fun m!64023 () Bool)

(assert (=> b!68466 m!64023))

(assert (=> b!68228 d!14661))

(declare-fun d!14663 () Bool)

(declare-fun e!44882 () Bool)

(assert (=> d!14663 e!44882))

(declare-fun res!36831 () Bool)

(assert (=> d!14663 (=> (not res!36831) (not e!44882))))

(declare-fun lt!29853 () ListLongMap!1385)

(assert (=> d!14663 (= res!36831 (contains!709 lt!29853 (_1!1056 lt!29680)))))

(declare-fun lt!29851 () List!1470)

(assert (=> d!14663 (= lt!29853 (ListLongMap!1386 lt!29851))))

(declare-fun lt!29850 () Unit!1898)

(declare-fun lt!29852 () Unit!1898)

(assert (=> d!14663 (= lt!29850 lt!29852)))

(declare-datatypes ((Option!135 0))(
  ( (Some!134 (v!2491 V!2921)) (None!133) )
))
(declare-fun getValueByKey!129 (List!1470 (_ BitVec 64)) Option!135)

(assert (=> d!14663 (= (getValueByKey!129 lt!29851 (_1!1056 lt!29680)) (Some!134 (_2!1056 lt!29680)))))

(declare-fun lemmaContainsTupThenGetReturnValue!49 (List!1470 (_ BitVec 64) V!2921) Unit!1898)

(assert (=> d!14663 (= lt!29852 (lemmaContainsTupThenGetReturnValue!49 lt!29851 (_1!1056 lt!29680) (_2!1056 lt!29680)))))

(declare-fun insertStrictlySorted!52 (List!1470 (_ BitVec 64) V!2921) List!1470)

(assert (=> d!14663 (= lt!29851 (insertStrictlySorted!52 (toList!708 lt!29682) (_1!1056 lt!29680) (_2!1056 lt!29680)))))

(assert (=> d!14663 (= (+!89 lt!29682 lt!29680) lt!29853)))

(declare-fun b!68475 () Bool)

(declare-fun res!36832 () Bool)

(assert (=> b!68475 (=> (not res!36832) (not e!44882))))

(assert (=> b!68475 (= res!36832 (= (getValueByKey!129 (toList!708 lt!29853) (_1!1056 lt!29680)) (Some!134 (_2!1056 lt!29680))))))

(declare-fun b!68476 () Bool)

(declare-fun contains!711 (List!1470 tuple2!2090) Bool)

(assert (=> b!68476 (= e!44882 (contains!711 (toList!708 lt!29853) lt!29680))))

(assert (= (and d!14663 res!36831) b!68475))

(assert (= (and b!68475 res!36832) b!68476))

(declare-fun m!64025 () Bool)

(assert (=> d!14663 m!64025))

(declare-fun m!64027 () Bool)

(assert (=> d!14663 m!64027))

(declare-fun m!64029 () Bool)

(assert (=> d!14663 m!64029))

(declare-fun m!64031 () Bool)

(assert (=> d!14663 m!64031))

(declare-fun m!64033 () Bool)

(assert (=> b!68475 m!64033))

(declare-fun m!64035 () Bool)

(assert (=> b!68476 m!64035))

(assert (=> b!68228 d!14663))

(declare-fun d!14665 () Bool)

(declare-fun e!44883 () Bool)

(assert (=> d!14665 e!44883))

(declare-fun res!36833 () Bool)

(assert (=> d!14665 (=> (not res!36833) (not e!44883))))

(declare-fun lt!29857 () ListLongMap!1385)

(assert (=> d!14665 (= res!36833 (contains!709 lt!29857 (_1!1056 lt!29675)))))

(declare-fun lt!29855 () List!1470)

(assert (=> d!14665 (= lt!29857 (ListLongMap!1386 lt!29855))))

(declare-fun lt!29854 () Unit!1898)

(declare-fun lt!29856 () Unit!1898)

(assert (=> d!14665 (= lt!29854 lt!29856)))

(assert (=> d!14665 (= (getValueByKey!129 lt!29855 (_1!1056 lt!29675)) (Some!134 (_2!1056 lt!29675)))))

(assert (=> d!14665 (= lt!29856 (lemmaContainsTupThenGetReturnValue!49 lt!29855 (_1!1056 lt!29675) (_2!1056 lt!29675)))))

(assert (=> d!14665 (= lt!29855 (insertStrictlySorted!52 (toList!708 lt!29682) (_1!1056 lt!29675) (_2!1056 lt!29675)))))

(assert (=> d!14665 (= (+!89 lt!29682 lt!29675) lt!29857)))

(declare-fun b!68477 () Bool)

(declare-fun res!36834 () Bool)

(assert (=> b!68477 (=> (not res!36834) (not e!44883))))

(assert (=> b!68477 (= res!36834 (= (getValueByKey!129 (toList!708 lt!29857) (_1!1056 lt!29675)) (Some!134 (_2!1056 lt!29675))))))

(declare-fun b!68478 () Bool)

(assert (=> b!68478 (= e!44883 (contains!711 (toList!708 lt!29857) lt!29675))))

(assert (= (and d!14665 res!36833) b!68477))

(assert (= (and b!68477 res!36834) b!68478))

(declare-fun m!64037 () Bool)

(assert (=> d!14665 m!64037))

(declare-fun m!64039 () Bool)

(assert (=> d!14665 m!64039))

(declare-fun m!64041 () Bool)

(assert (=> d!14665 m!64041))

(declare-fun m!64043 () Bool)

(assert (=> d!14665 m!64043))

(declare-fun m!64045 () Bool)

(assert (=> b!68477 m!64045))

(declare-fun m!64047 () Bool)

(assert (=> b!68478 m!64047))

(assert (=> b!68228 d!14665))

(declare-fun d!14667 () Bool)

(declare-fun e!44884 () Bool)

(assert (=> d!14667 e!44884))

(declare-fun res!36835 () Bool)

(assert (=> d!14667 (=> (not res!36835) (not e!44884))))

(declare-fun lt!29861 () ListLongMap!1385)

(assert (=> d!14667 (= res!36835 (contains!709 lt!29861 (_1!1056 lt!29675)))))

(declare-fun lt!29859 () List!1470)

(assert (=> d!14667 (= lt!29861 (ListLongMap!1386 lt!29859))))

(declare-fun lt!29858 () Unit!1898)

(declare-fun lt!29860 () Unit!1898)

(assert (=> d!14667 (= lt!29858 lt!29860)))

(assert (=> d!14667 (= (getValueByKey!129 lt!29859 (_1!1056 lt!29675)) (Some!134 (_2!1056 lt!29675)))))

(assert (=> d!14667 (= lt!29860 (lemmaContainsTupThenGetReturnValue!49 lt!29859 (_1!1056 lt!29675) (_2!1056 lt!29675)))))

(assert (=> d!14667 (= lt!29859 (insertStrictlySorted!52 (toList!708 (+!89 lt!29682 lt!29680)) (_1!1056 lt!29675) (_2!1056 lt!29675)))))

(assert (=> d!14667 (= (+!89 (+!89 lt!29682 lt!29680) lt!29675) lt!29861)))

(declare-fun b!68479 () Bool)

(declare-fun res!36836 () Bool)

(assert (=> b!68479 (=> (not res!36836) (not e!44884))))

(assert (=> b!68479 (= res!36836 (= (getValueByKey!129 (toList!708 lt!29861) (_1!1056 lt!29675)) (Some!134 (_2!1056 lt!29675))))))

(declare-fun b!68480 () Bool)

(assert (=> b!68480 (= e!44884 (contains!711 (toList!708 lt!29861) lt!29675))))

(assert (= (and d!14667 res!36835) b!68479))

(assert (= (and b!68479 res!36836) b!68480))

(declare-fun m!64049 () Bool)

(assert (=> d!14667 m!64049))

(declare-fun m!64051 () Bool)

(assert (=> d!14667 m!64051))

(declare-fun m!64053 () Bool)

(assert (=> d!14667 m!64053))

(declare-fun m!64055 () Bool)

(assert (=> d!14667 m!64055))

(declare-fun m!64057 () Bool)

(assert (=> b!68479 m!64057))

(declare-fun m!64059 () Bool)

(assert (=> b!68480 m!64059))

(assert (=> b!68228 d!14667))

(declare-fun d!14669 () Bool)

(assert (=> d!14669 (= (validMask!0 (mask!6111 (v!2485 (underlying!247 thiss!992)))) (and (or (= (mask!6111 (v!2485 (underlying!247 thiss!992))) #b00000000000000000000000000000111) (= (mask!6111 (v!2485 (underlying!247 thiss!992))) #b00000000000000000000000000001111) (= (mask!6111 (v!2485 (underlying!247 thiss!992))) #b00000000000000000000000000011111) (= (mask!6111 (v!2485 (underlying!247 thiss!992))) #b00000000000000000000000000111111) (= (mask!6111 (v!2485 (underlying!247 thiss!992))) #b00000000000000000000000001111111) (= (mask!6111 (v!2485 (underlying!247 thiss!992))) #b00000000000000000000000011111111) (= (mask!6111 (v!2485 (underlying!247 thiss!992))) #b00000000000000000000000111111111) (= (mask!6111 (v!2485 (underlying!247 thiss!992))) #b00000000000000000000001111111111) (= (mask!6111 (v!2485 (underlying!247 thiss!992))) #b00000000000000000000011111111111) (= (mask!6111 (v!2485 (underlying!247 thiss!992))) #b00000000000000000000111111111111) (= (mask!6111 (v!2485 (underlying!247 thiss!992))) #b00000000000000000001111111111111) (= (mask!6111 (v!2485 (underlying!247 thiss!992))) #b00000000000000000011111111111111) (= (mask!6111 (v!2485 (underlying!247 thiss!992))) #b00000000000000000111111111111111) (= (mask!6111 (v!2485 (underlying!247 thiss!992))) #b00000000000000001111111111111111) (= (mask!6111 (v!2485 (underlying!247 thiss!992))) #b00000000000000011111111111111111) (= (mask!6111 (v!2485 (underlying!247 thiss!992))) #b00000000000000111111111111111111) (= (mask!6111 (v!2485 (underlying!247 thiss!992))) #b00000000000001111111111111111111) (= (mask!6111 (v!2485 (underlying!247 thiss!992))) #b00000000000011111111111111111111) (= (mask!6111 (v!2485 (underlying!247 thiss!992))) #b00000000000111111111111111111111) (= (mask!6111 (v!2485 (underlying!247 thiss!992))) #b00000000001111111111111111111111) (= (mask!6111 (v!2485 (underlying!247 thiss!992))) #b00000000011111111111111111111111) (= (mask!6111 (v!2485 (underlying!247 thiss!992))) #b00000000111111111111111111111111) (= (mask!6111 (v!2485 (underlying!247 thiss!992))) #b00000001111111111111111111111111) (= (mask!6111 (v!2485 (underlying!247 thiss!992))) #b00000011111111111111111111111111) (= (mask!6111 (v!2485 (underlying!247 thiss!992))) #b00000111111111111111111111111111) (= (mask!6111 (v!2485 (underlying!247 thiss!992))) #b00001111111111111111111111111111) (= (mask!6111 (v!2485 (underlying!247 thiss!992))) #b00011111111111111111111111111111) (= (mask!6111 (v!2485 (underlying!247 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!6111 (v!2485 (underlying!247 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> b!68228 d!14669))

(declare-fun d!14671 () Bool)

(assert (=> d!14671 (= (+!89 (+!89 lt!29682 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))) (+!89 (+!89 lt!29682 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))))

(declare-fun lt!29864 () Unit!1898)

(declare-fun choose!387 (ListLongMap!1385 (_ BitVec 64) V!2921 (_ BitVec 64) V!2921) Unit!1898)

(assert (=> d!14671 (= lt!29864 (choose!387 lt!29682 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))

(assert (=> d!14671 (not (= (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!14671 (= (addCommutativeForDiffKeys!8 lt!29682 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))) lt!29864)))

(declare-fun bs!2934 () Bool)

(assert (= bs!2934 d!14671))

(declare-fun m!64061 () Bool)

(assert (=> bs!2934 m!64061))

(declare-fun m!64063 () Bool)

(assert (=> bs!2934 m!64063))

(assert (=> bs!2934 m!63767))

(declare-fun m!64065 () Bool)

(assert (=> bs!2934 m!64065))

(assert (=> bs!2934 m!64061))

(declare-fun m!64067 () Bool)

(assert (=> bs!2934 m!64067))

(declare-fun m!64069 () Bool)

(assert (=> bs!2934 m!64069))

(assert (=> bs!2934 m!64067))

(assert (=> b!68228 d!14671))

(declare-fun d!14673 () Bool)

(declare-fun e!44885 () Bool)

(assert (=> d!14673 e!44885))

(declare-fun res!36837 () Bool)

(assert (=> d!14673 (=> (not res!36837) (not e!44885))))

(declare-fun lt!29868 () ListLongMap!1385)

(assert (=> d!14673 (= res!36837 (contains!709 lt!29868 (_1!1056 lt!29680)))))

(declare-fun lt!29866 () List!1470)

(assert (=> d!14673 (= lt!29868 (ListLongMap!1386 lt!29866))))

(declare-fun lt!29865 () Unit!1898)

(declare-fun lt!29867 () Unit!1898)

(assert (=> d!14673 (= lt!29865 lt!29867)))

(assert (=> d!14673 (= (getValueByKey!129 lt!29866 (_1!1056 lt!29680)) (Some!134 (_2!1056 lt!29680)))))

(assert (=> d!14673 (= lt!29867 (lemmaContainsTupThenGetReturnValue!49 lt!29866 (_1!1056 lt!29680) (_2!1056 lt!29680)))))

(assert (=> d!14673 (= lt!29866 (insertStrictlySorted!52 (toList!708 (+!89 lt!29682 lt!29675)) (_1!1056 lt!29680) (_2!1056 lt!29680)))))

(assert (=> d!14673 (= (+!89 (+!89 lt!29682 lt!29675) lt!29680) lt!29868)))

(declare-fun b!68481 () Bool)

(declare-fun res!36838 () Bool)

(assert (=> b!68481 (=> (not res!36838) (not e!44885))))

(assert (=> b!68481 (= res!36838 (= (getValueByKey!129 (toList!708 lt!29868) (_1!1056 lt!29680)) (Some!134 (_2!1056 lt!29680))))))

(declare-fun b!68482 () Bool)

(assert (=> b!68482 (= e!44885 (contains!711 (toList!708 lt!29868) lt!29680))))

(assert (= (and d!14673 res!36837) b!68481))

(assert (= (and b!68481 res!36838) b!68482))

(declare-fun m!64071 () Bool)

(assert (=> d!14673 m!64071))

(declare-fun m!64073 () Bool)

(assert (=> d!14673 m!64073))

(declare-fun m!64075 () Bool)

(assert (=> d!14673 m!64075))

(declare-fun m!64077 () Bool)

(assert (=> d!14673 m!64077))

(declare-fun m!64079 () Bool)

(assert (=> b!68481 m!64079))

(declare-fun m!64081 () Bool)

(assert (=> b!68482 m!64081))

(assert (=> b!68228 d!14673))

(declare-fun d!14675 () Bool)

(assert (=> d!14675 (not (arrayContainsKey!0 (_keys!3810 (v!2485 (underlying!247 thiss!992))) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!29871 () Unit!1898)

(declare-fun choose!68 (array!3831 (_ BitVec 32) (_ BitVec 64) List!1471) Unit!1898)

(assert (=> d!14675 (= lt!29871 (choose!68 (_keys!3810 (v!2485 (underlying!247 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (Cons!1467 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) Nil!1468)))))

(assert (=> d!14675 (bvslt (size!2065 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!14675 (= (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!3810 (v!2485 (underlying!247 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (Cons!1467 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) Nil!1468)) lt!29871)))

(declare-fun bs!2935 () Bool)

(assert (= bs!2935 d!14675))

(assert (=> bs!2935 m!63767))

(assert (=> bs!2935 m!63815))

(assert (=> bs!2935 m!63767))

(declare-fun m!64083 () Bool)

(assert (=> bs!2935 m!64083))

(assert (=> b!68219 d!14675))

(declare-fun d!14677 () Bool)

(assert (=> d!14677 (arrayNoDuplicates!0 (_keys!3810 (v!2485 (underlying!247 thiss!992))) from!355 Nil!1468)))

(declare-fun lt!29874 () Unit!1898)

(declare-fun choose!39 (array!3831 (_ BitVec 32) (_ BitVec 32)) Unit!1898)

(assert (=> d!14677 (= lt!29874 (choose!39 (_keys!3810 (v!2485 (underlying!247 thiss!992))) #b00000000000000000000000000000000 from!355))))

(assert (=> d!14677 (bvslt (size!2065 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!14677 (= (lemmaNoDuplicateFromThenFromBigger!0 (_keys!3810 (v!2485 (underlying!247 thiss!992))) #b00000000000000000000000000000000 from!355) lt!29874)))

(declare-fun bs!2936 () Bool)

(assert (= bs!2936 d!14677))

(assert (=> bs!2936 m!63811))

(declare-fun m!64085 () Bool)

(assert (=> bs!2936 m!64085))

(assert (=> b!68219 d!14677))

(declare-fun d!14679 () Bool)

(declare-fun res!36843 () Bool)

(declare-fun e!44890 () Bool)

(assert (=> d!14679 (=> res!36843 e!44890)))

(assert (=> d!14679 (= res!36843 (= (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))

(assert (=> d!14679 (= (arrayContainsKey!0 (_keys!3810 (v!2485 (underlying!247 thiss!992))) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)) e!44890)))

(declare-fun b!68487 () Bool)

(declare-fun e!44891 () Bool)

(assert (=> b!68487 (= e!44890 e!44891)))

(declare-fun res!36844 () Bool)

(assert (=> b!68487 (=> (not res!36844) (not e!44891))))

(assert (=> b!68487 (= res!36844 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2065 (_keys!3810 (v!2485 (underlying!247 thiss!992))))))))

(declare-fun b!68488 () Bool)

(assert (=> b!68488 (= e!44891 (arrayContainsKey!0 (_keys!3810 (v!2485 (underlying!247 thiss!992))) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (= (and d!14679 (not res!36843)) b!68487))

(assert (= (and b!68487 res!36844) b!68488))

(assert (=> d!14679 m!63951))

(assert (=> b!68488 m!63767))

(declare-fun m!64087 () Bool)

(assert (=> b!68488 m!64087))

(assert (=> b!68219 d!14679))

(declare-fun d!14681 () Bool)

(declare-fun e!44894 () Bool)

(assert (=> d!14681 e!44894))

(declare-fun c!9671 () Bool)

(assert (=> d!14681 (= c!9671 (and (not (= (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!29877 () Unit!1898)

(declare-fun choose!388 (array!3831 array!3833 (_ BitVec 32) (_ BitVec 32) V!2921 V!2921 (_ BitVec 64) (_ BitVec 32) Int) Unit!1898)

(assert (=> d!14681 (= lt!29877 (choose!388 (_keys!3810 (v!2485 (underlying!247 thiss!992))) (_values!2150 (v!2485 (underlying!247 thiss!992))) (mask!6111 (v!2485 (underlying!247 thiss!992))) (extraKeys!2034 (v!2485 (underlying!247 thiss!992))) (zeroValue!2073 (v!2485 (underlying!247 thiss!992))) (minValue!2073 (v!2485 (underlying!247 thiss!992))) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2167 (v!2485 (underlying!247 thiss!992)))))))

(assert (=> d!14681 (validMask!0 (mask!6111 (v!2485 (underlying!247 thiss!992))))))

(assert (=> d!14681 (= (lemmaListMapContainsThenArrayContainsFrom!44 (_keys!3810 (v!2485 (underlying!247 thiss!992))) (_values!2150 (v!2485 (underlying!247 thiss!992))) (mask!6111 (v!2485 (underlying!247 thiss!992))) (extraKeys!2034 (v!2485 (underlying!247 thiss!992))) (zeroValue!2073 (v!2485 (underlying!247 thiss!992))) (minValue!2073 (v!2485 (underlying!247 thiss!992))) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2167 (v!2485 (underlying!247 thiss!992)))) lt!29877)))

(declare-fun b!68493 () Bool)

(assert (=> b!68493 (= e!44894 (arrayContainsKey!0 (_keys!3810 (v!2485 (underlying!247 thiss!992))) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!68494 () Bool)

(assert (=> b!68494 (= e!44894 (ite (= (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2034 (v!2485 (underlying!247 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2034 (v!2485 (underlying!247 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!14681 c!9671) b!68493))

(assert (= (and d!14681 (not c!9671)) b!68494))

(assert (=> d!14681 m!63767))

(declare-fun m!64089 () Bool)

(assert (=> d!14681 m!64089))

(assert (=> d!14681 m!63787))

(assert (=> b!68493 m!63767))

(assert (=> b!68493 m!63815))

(assert (=> b!68219 d!14681))

(declare-fun d!14683 () Bool)

(declare-fun res!36853 () Bool)

(declare-fun e!44903 () Bool)

(assert (=> d!14683 (=> res!36853 e!44903)))

(assert (=> d!14683 (= res!36853 (bvsge from!355 (size!2065 (_keys!3810 (v!2485 (underlying!247 thiss!992))))))))

(assert (=> d!14683 (= (arrayNoDuplicates!0 (_keys!3810 (v!2485 (underlying!247 thiss!992))) from!355 Nil!1468) e!44903)))

(declare-fun b!68505 () Bool)

(declare-fun e!44906 () Bool)

(declare-fun call!5770 () Bool)

(assert (=> b!68505 (= e!44906 call!5770)))

(declare-fun b!68506 () Bool)

(declare-fun e!44905 () Bool)

(declare-fun contains!712 (List!1471 (_ BitVec 64)) Bool)

(assert (=> b!68506 (= e!44905 (contains!712 Nil!1468 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))

(declare-fun bm!5767 () Bool)

(declare-fun c!9674 () Bool)

(assert (=> bm!5767 (= call!5770 (arrayNoDuplicates!0 (_keys!3810 (v!2485 (underlying!247 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!9674 (Cons!1467 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) Nil!1468) Nil!1468)))))

(declare-fun b!68507 () Bool)

(declare-fun e!44904 () Bool)

(assert (=> b!68507 (= e!44903 e!44904)))

(declare-fun res!36852 () Bool)

(assert (=> b!68507 (=> (not res!36852) (not e!44904))))

(assert (=> b!68507 (= res!36852 (not e!44905))))

(declare-fun res!36851 () Bool)

(assert (=> b!68507 (=> (not res!36851) (not e!44905))))

(assert (=> b!68507 (= res!36851 (validKeyInArray!0 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))

(declare-fun b!68508 () Bool)

(assert (=> b!68508 (= e!44904 e!44906)))

(assert (=> b!68508 (= c!9674 (validKeyInArray!0 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))

(declare-fun b!68509 () Bool)

(assert (=> b!68509 (= e!44906 call!5770)))

(assert (= (and d!14683 (not res!36853)) b!68507))

(assert (= (and b!68507 res!36851) b!68506))

(assert (= (and b!68507 res!36852) b!68508))

(assert (= (and b!68508 c!9674) b!68505))

(assert (= (and b!68508 (not c!9674)) b!68509))

(assert (= (or b!68505 b!68509) bm!5767))

(assert (=> b!68506 m!63767))

(assert (=> b!68506 m!63767))

(declare-fun m!64091 () Bool)

(assert (=> b!68506 m!64091))

(assert (=> bm!5767 m!63767))

(declare-fun m!64093 () Bool)

(assert (=> bm!5767 m!64093))

(assert (=> b!68507 m!63767))

(assert (=> b!68507 m!63767))

(declare-fun m!64095 () Bool)

(assert (=> b!68507 m!64095))

(assert (=> b!68508 m!63767))

(assert (=> b!68508 m!63767))

(assert (=> b!68508 m!64095))

(assert (=> b!68219 d!14683))

(declare-fun d!14685 () Bool)

(declare-fun e!44912 () Bool)

(assert (=> d!14685 e!44912))

(declare-fun res!36856 () Bool)

(assert (=> d!14685 (=> res!36856 e!44912)))

(declare-fun lt!29889 () Bool)

(assert (=> d!14685 (= res!36856 (not lt!29889))))

(declare-fun lt!29888 () Bool)

(assert (=> d!14685 (= lt!29889 lt!29888)))

(declare-fun lt!29887 () Unit!1898)

(declare-fun e!44911 () Unit!1898)

(assert (=> d!14685 (= lt!29887 e!44911)))

(declare-fun c!9677 () Bool)

(assert (=> d!14685 (= c!9677 lt!29888)))

(declare-fun containsKey!133 (List!1470 (_ BitVec 64)) Bool)

(assert (=> d!14685 (= lt!29888 (containsKey!133 (toList!708 lt!29677) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))

(assert (=> d!14685 (= (contains!709 lt!29677 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) lt!29889)))

(declare-fun b!68516 () Bool)

(declare-fun lt!29886 () Unit!1898)

(assert (=> b!68516 (= e!44911 lt!29886)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!82 (List!1470 (_ BitVec 64)) Unit!1898)

(assert (=> b!68516 (= lt!29886 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 lt!29677) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))

(declare-fun isDefined!83 (Option!135) Bool)

(assert (=> b!68516 (isDefined!83 (getValueByKey!129 (toList!708 lt!29677) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))

(declare-fun b!68517 () Bool)

(declare-fun Unit!1907 () Unit!1898)

(assert (=> b!68517 (= e!44911 Unit!1907)))

(declare-fun b!68518 () Bool)

(assert (=> b!68518 (= e!44912 (isDefined!83 (getValueByKey!129 (toList!708 lt!29677) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355))))))

(assert (= (and d!14685 c!9677) b!68516))

(assert (= (and d!14685 (not c!9677)) b!68517))

(assert (= (and d!14685 (not res!36856)) b!68518))

(assert (=> d!14685 m!63767))

(declare-fun m!64097 () Bool)

(assert (=> d!14685 m!64097))

(assert (=> b!68516 m!63767))

(declare-fun m!64099 () Bool)

(assert (=> b!68516 m!64099))

(assert (=> b!68516 m!63767))

(declare-fun m!64101 () Bool)

(assert (=> b!68516 m!64101))

(assert (=> b!68516 m!64101))

(declare-fun m!64103 () Bool)

(assert (=> b!68516 m!64103))

(assert (=> b!68518 m!63767))

(assert (=> b!68518 m!64101))

(assert (=> b!68518 m!64101))

(assert (=> b!68518 m!64103))

(assert (=> b!68212 d!14685))

(declare-fun b!68599 () Bool)

(declare-fun call!5832 () ListLongMap!1385)

(declare-fun e!44969 () Bool)

(declare-fun call!5827 () ListLongMap!1385)

(assert (=> b!68599 (= e!44969 (= call!5832 (+!89 call!5827 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))

(declare-fun b!68600 () Bool)

(declare-fun e!44959 () Bool)

(declare-datatypes ((SeekEntryResult!237 0))(
  ( (MissingZero!237 (index!3077 (_ BitVec 32))) (Found!237 (index!3078 (_ BitVec 32))) (Intermediate!237 (undefined!1049 Bool) (index!3079 (_ BitVec 32)) (x!10850 (_ BitVec 32))) (Undefined!237) (MissingVacant!237 (index!3080 (_ BitVec 32))) )
))
(declare-fun lt!29969 () SeekEntryResult!237)

(assert (=> b!68600 (= e!44959 ((_ is Undefined!237) lt!29969))))

(declare-fun b!68601 () Bool)

(declare-fun c!9706 () Bool)

(declare-fun lt!29944 () SeekEntryResult!237)

(assert (=> b!68601 (= c!9706 ((_ is MissingVacant!237) lt!29944))))

(declare-fun e!44962 () tuple2!2092)

(declare-fun e!44957 () tuple2!2092)

(assert (=> b!68601 (= e!44962 e!44957)))

(declare-fun b!68602 () Bool)

(declare-fun e!44955 () ListLongMap!1385)

(declare-fun call!5819 () ListLongMap!1385)

(assert (=> b!68602 (= e!44955 call!5819)))

(declare-fun bm!5816 () Bool)

(declare-fun call!5840 () Bool)

(declare-fun call!5836 () Bool)

(assert (=> bm!5816 (= call!5840 call!5836)))

(declare-fun b!68603 () Bool)

(declare-fun lt!29958 () tuple2!2092)

(assert (=> b!68603 (= e!44957 (tuple2!2093 (_1!1057 lt!29958) (_2!1057 lt!29958)))))

(declare-fun call!5826 () tuple2!2092)

(assert (=> b!68603 (= lt!29958 call!5826)))

(declare-fun b!68604 () Bool)

(declare-fun res!36893 () Bool)

(declare-fun e!44960 () Bool)

(assert (=> b!68604 (=> (not res!36893) (not e!44960))))

(assert (=> b!68604 (= res!36893 (= (select (arr!1828 (_keys!3810 newMap!16)) (index!3077 lt!29969)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!68605 () Bool)

(declare-fun call!5821 () Bool)

(assert (=> b!68605 (= e!44960 (not call!5821))))

(declare-fun bm!5817 () Bool)

(declare-fun lt!29959 () tuple2!2092)

(assert (=> bm!5817 (= call!5832 (map!1137 (_2!1057 lt!29959)))))

(declare-fun bm!5818 () Bool)

(declare-fun call!5825 () ListLongMap!1385)

(declare-fun call!5830 () ListLongMap!1385)

(assert (=> bm!5818 (= call!5825 call!5830)))

(declare-fun b!68606 () Bool)

(declare-fun res!36896 () Bool)

(assert (=> b!68606 (=> (not res!36896) (not e!44960))))

(declare-fun call!5837 () Bool)

(assert (=> b!68606 (= res!36896 call!5837)))

(declare-fun e!44966 () Bool)

(assert (=> b!68606 (= e!44966 e!44960)))

(declare-fun bm!5819 () Bool)

(declare-fun call!5839 () Bool)

(declare-fun call!5842 () Bool)

(assert (=> bm!5819 (= call!5839 call!5842)))

(declare-fun e!44974 () Bool)

(declare-fun b!68607 () Bool)

(declare-fun lt!29948 () SeekEntryResult!237)

(assert (=> b!68607 (= e!44974 (= (select (arr!1828 (_keys!3810 newMap!16)) (index!3078 lt!29948)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))

(declare-fun bm!5820 () Bool)

(declare-fun call!5838 () ListLongMap!1385)

(assert (=> bm!5820 (= call!5819 call!5838)))

(declare-fun b!68608 () Bool)

(declare-fun e!44975 () Bool)

(declare-fun e!44963 () Bool)

(assert (=> b!68608 (= e!44975 e!44963)))

(declare-fun c!9710 () Bool)

(assert (=> b!68608 (= c!9710 (_1!1057 lt!29959))))

(declare-fun bm!5821 () Bool)

(declare-fun call!5824 () ListLongMap!1385)

(declare-fun call!5829 () ListLongMap!1385)

(assert (=> bm!5821 (= call!5824 call!5829)))

(declare-fun b!68609 () Bool)

(declare-fun lt!29960 () array!3833)

(assert (=> b!68609 (= e!44955 (getCurrentListMap!403 (_keys!3810 newMap!16) lt!29960 (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun b!68610 () Bool)

(declare-fun res!36886 () Bool)

(assert (=> b!68610 (= res!36886 call!5839)))

(assert (=> b!68610 (=> (not res!36886) (not e!44974))))

(declare-fun b!68611 () Bool)

(declare-fun e!44972 () tuple2!2092)

(assert (=> b!68611 (= e!44972 e!44962)))

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!3831 (_ BitVec 32)) SeekEntryResult!237)

(assert (=> b!68611 (= lt!29944 (seekEntryOrOpen!0 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (_keys!3810 newMap!16) (mask!6111 newMap!16)))))

(declare-fun c!9713 () Bool)

(assert (=> b!68611 (= c!9713 ((_ is Undefined!237) lt!29944))))

(declare-fun b!68612 () Bool)

(declare-fun res!36890 () Bool)

(assert (=> b!68612 (= res!36890 (= (select (arr!1828 (_keys!3810 newMap!16)) (index!3080 lt!29969)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!44964 () Bool)

(assert (=> b!68612 (=> (not res!36890) (not e!44964))))

(declare-fun bm!5822 () Bool)

(declare-fun call!5831 () Bool)

(assert (=> bm!5822 (= call!5821 call!5831)))

(declare-fun d!14687 () Bool)

(assert (=> d!14687 e!44975))

(declare-fun res!36889 () Bool)

(assert (=> d!14687 (=> (not res!36889) (not e!44975))))

(assert (=> d!14687 (= res!36889 (valid!289 (_2!1057 lt!29959)))))

(assert (=> d!14687 (= lt!29959 e!44972)))

(declare-fun c!9716 () Bool)

(assert (=> d!14687 (= c!9716 (= (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (bvneg (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355))))))

(assert (=> d!14687 (valid!289 newMap!16)))

(assert (=> d!14687 (= (update!97 newMap!16 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673) lt!29959)))

(declare-fun b!68613 () Bool)

(declare-fun e!44970 () Bool)

(declare-fun call!5841 () Bool)

(assert (=> b!68613 (= e!44970 (not call!5841))))

(declare-fun call!5820 () ListLongMap!1385)

(declare-fun c!9712 () Bool)

(declare-fun bm!5823 () Bool)

(assert (=> bm!5823 (= call!5829 (+!89 (ite c!9716 call!5820 call!5830) (ite c!9716 (ite c!9712 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))

(declare-fun b!68614 () Bool)

(declare-fun res!36894 () Bool)

(declare-fun lt!29956 () SeekEntryResult!237)

(assert (=> b!68614 (= res!36894 (= (select (arr!1828 (_keys!3810 newMap!16)) (index!3080 lt!29956)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!68614 (=> (not res!36894) (not e!44970))))

(declare-fun bm!5824 () Bool)

(assert (=> bm!5824 (= call!5837 call!5839)))

(declare-fun c!9704 () Bool)

(declare-fun c!9707 () Bool)

(declare-fun bm!5825 () Bool)

(declare-fun c!9709 () Bool)

(declare-fun c!9715 () Bool)

(declare-fun lt!29970 () SeekEntryResult!237)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!5825 (= call!5842 (inRange!0 (ite c!9713 (ite c!9704 (index!3078 lt!29970) (ite c!9707 (index!3077 lt!29956) (index!3080 lt!29956))) (ite c!9715 (index!3078 lt!29948) (ite c!9709 (index!3077 lt!29969) (index!3080 lt!29969)))) (mask!6111 newMap!16)))))

(declare-fun b!68615 () Bool)

(declare-fun e!44956 () Bool)

(assert (=> b!68615 (= e!44956 ((_ is Undefined!237) lt!29956))))

(declare-fun bm!5826 () Bool)

(assert (=> bm!5826 (= call!5836 call!5842)))

(declare-fun b!68616 () Bool)

(assert (=> b!68616 (= e!44964 (not call!5821))))

(declare-fun b!68617 () Bool)

(declare-fun e!44965 () Unit!1898)

(declare-fun Unit!1908 () Unit!1898)

(assert (=> b!68617 (= e!44965 Unit!1908)))

(declare-fun lt!29968 () Unit!1898)

(declare-fun call!5823 () Unit!1898)

(assert (=> b!68617 (= lt!29968 call!5823)))

(declare-fun call!5822 () SeekEntryResult!237)

(assert (=> b!68617 (= lt!29969 call!5822)))

(assert (=> b!68617 (= c!9709 ((_ is MissingZero!237) lt!29969))))

(assert (=> b!68617 e!44966))

(declare-fun lt!29946 () Unit!1898)

(assert (=> b!68617 (= lt!29946 lt!29968)))

(assert (=> b!68617 false))

(declare-fun bm!5827 () Bool)

(assert (=> bm!5827 (= call!5841 call!5831)))

(declare-fun b!68618 () Bool)

(declare-fun lt!29952 () Unit!1898)

(declare-fun e!44961 () Unit!1898)

(assert (=> b!68618 (= lt!29952 e!44961)))

(declare-fun call!5834 () Bool)

(assert (=> b!68618 (= c!9704 call!5834)))

(assert (=> b!68618 (= e!44962 (tuple2!2093 false newMap!16))))

(declare-fun b!68619 () Bool)

(declare-fun res!36891 () Bool)

(declare-fun e!44971 () Bool)

(assert (=> b!68619 (=> (not res!36891) (not e!44971))))

(assert (=> b!68619 (= res!36891 call!5840)))

(declare-fun e!44973 () Bool)

(assert (=> b!68619 (= e!44973 e!44971)))

(declare-fun bm!5828 () Bool)

(assert (=> bm!5828 (= call!5827 (map!1137 newMap!16))))

(declare-fun bm!5829 () Bool)

(declare-fun call!5833 () Unit!1898)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!22 (array!3831 array!3833 (_ BitVec 32) (_ BitVec 32) V!2921 V!2921 (_ BitVec 64) Int) Unit!1898)

(assert (=> bm!5829 (= call!5833 (lemmaInListMapThenSeekEntryOrOpenFindsIt!22 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (defaultEntry!2167 newMap!16)))))

(declare-fun b!68620 () Bool)

(declare-fun e!44968 () tuple2!2092)

(assert (=> b!68620 (= e!44957 e!44968)))

(declare-fun c!9714 () Bool)

(assert (=> b!68620 (= c!9714 ((_ is MissingZero!237) lt!29944))))

(declare-fun b!68621 () Bool)

(declare-fun c!9705 () Bool)

(assert (=> b!68621 (= c!9705 ((_ is MissingVacant!237) lt!29969))))

(assert (=> b!68621 (= e!44966 e!44959)))

(declare-fun bm!5830 () Bool)

(declare-fun lt!29963 () (_ BitVec 32))

(declare-fun lt!29953 () (_ BitVec 32))

(assert (=> bm!5830 (= call!5830 (getCurrentListMap!403 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (ite c!9716 (ite c!9712 lt!29963 lt!29953) (extraKeys!2034 newMap!16)) (ite (and c!9716 c!9712) lt!29673 (zeroValue!2073 newMap!16)) (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun bm!5831 () Bool)

(assert (=> bm!5831 (= call!5831 (arrayContainsKey!0 (_keys!3810 newMap!16) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!68622 () Bool)

(declare-fun e!44967 () tuple2!2092)

(assert (=> b!68622 (= e!44972 e!44967)))

(assert (=> b!68622 (= c!9712 (= (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!68623 () Bool)

(declare-fun res!36888 () Bool)

(assert (=> b!68623 (=> (not res!36888) (not e!44971))))

(assert (=> b!68623 (= res!36888 (= (select (arr!1828 (_keys!3810 newMap!16)) (index!3077 lt!29956)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!68624 () Bool)

(declare-fun c!9708 () Bool)

(assert (=> b!68624 (= c!9708 ((_ is MissingVacant!237) lt!29956))))

(assert (=> b!68624 (= e!44973 e!44956)))

(declare-fun bm!5832 () Bool)

(declare-fun call!5828 () SeekEntryResult!237)

(declare-fun call!5835 () SeekEntryResult!237)

(assert (=> bm!5832 (= call!5828 call!5835)))

(declare-fun bm!5833 () Bool)

(assert (=> bm!5833 (= call!5822 call!5835)))

(declare-fun b!68625 () Bool)

(declare-fun lt!29961 () tuple2!2092)

(assert (=> b!68625 (= lt!29961 call!5826)))

(assert (=> b!68625 (= e!44968 (tuple2!2093 (_1!1057 lt!29961) (_2!1057 lt!29961)))))

(declare-fun b!68626 () Bool)

(assert (=> b!68626 (= e!44963 (= call!5832 call!5827))))

(declare-fun b!68627 () Bool)

(declare-fun Unit!1909 () Unit!1898)

(assert (=> b!68627 (= e!44961 Unit!1909)))

(declare-fun lt!29945 () Unit!1898)

(assert (=> b!68627 (= lt!29945 call!5833)))

(assert (=> b!68627 (= lt!29970 call!5828)))

(declare-fun res!36885 () Bool)

(assert (=> b!68627 (= res!36885 ((_ is Found!237) lt!29970))))

(declare-fun e!44958 () Bool)

(assert (=> b!68627 (=> (not res!36885) (not e!44958))))

(assert (=> b!68627 e!44958))

(declare-fun lt!29947 () Unit!1898)

(assert (=> b!68627 (= lt!29947 lt!29945)))

(assert (=> b!68627 false))

(declare-fun b!68628 () Bool)

(declare-fun res!36887 () Bool)

(assert (=> b!68628 (= res!36887 call!5836)))

(assert (=> b!68628 (=> (not res!36887) (not e!44958))))

(declare-fun bm!5834 () Bool)

(declare-fun c!9711 () Bool)

(assert (=> bm!5834 (= c!9711 c!9713)))

(assert (=> bm!5834 (= call!5834 (contains!709 e!44955 (ite c!9713 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (select (arr!1828 (_keys!3810 newMap!16)) (index!3078 lt!29944)))))))

(declare-fun b!68629 () Bool)

(declare-fun lt!29965 () Unit!1898)

(assert (=> b!68629 (= e!44965 lt!29965)))

(assert (=> b!68629 (= lt!29965 call!5833)))

(assert (=> b!68629 (= lt!29948 call!5822)))

(declare-fun res!36898 () Bool)

(assert (=> b!68629 (= res!36898 ((_ is Found!237) lt!29948))))

(assert (=> b!68629 (=> (not res!36898) (not e!44974))))

(assert (=> b!68629 e!44974))

(declare-fun b!68630 () Bool)

(assert (=> b!68630 (= e!44956 e!44970)))

(declare-fun res!36892 () Bool)

(assert (=> b!68630 (= res!36892 call!5840)))

(assert (=> b!68630 (=> (not res!36892) (not e!44970))))

(declare-fun b!68631 () Bool)

(assert (=> b!68631 (= e!44963 e!44969)))

(declare-fun res!36897 () Bool)

(assert (=> b!68631 (= res!36897 (contains!709 call!5832 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))

(assert (=> b!68631 (=> (not res!36897) (not e!44969))))

(declare-fun b!68632 () Bool)

(assert (=> b!68632 (= e!44971 (not call!5841))))

(declare-fun bm!5835 () Bool)

(declare-fun updateHelperNewKey!22 (LongMapFixedSize!676 (_ BitVec 64) V!2921 (_ BitVec 32)) tuple2!2092)

(assert (=> bm!5835 (= call!5826 (updateHelperNewKey!22 newMap!16 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673 (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944))))))

(declare-fun bm!5836 () Bool)

(assert (=> bm!5836 (= call!5820 call!5838)))

(declare-fun b!68633 () Bool)

(declare-fun lt!29964 () Unit!1898)

(assert (=> b!68633 (= e!44961 lt!29964)))

(assert (=> b!68633 (= lt!29964 call!5823)))

(assert (=> b!68633 (= lt!29956 call!5828)))

(assert (=> b!68633 (= c!9707 ((_ is MissingZero!237) lt!29956))))

(assert (=> b!68633 e!44973))

(declare-fun bm!5837 () Bool)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!22 (array!3831 array!3833 (_ BitVec 32) (_ BitVec 32) V!2921 V!2921 (_ BitVec 64) Int) Unit!1898)

(assert (=> bm!5837 (= call!5823 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!22 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (defaultEntry!2167 newMap!16)))))

(declare-fun b!68634 () Bool)

(declare-fun lt!29966 () Unit!1898)

(declare-fun lt!29957 () Unit!1898)

(assert (=> b!68634 (= lt!29966 lt!29957)))

(assert (=> b!68634 call!5834))

(declare-fun lemmaValidKeyInArrayIsInListMap!81 (array!3831 array!3833 (_ BitVec 32) (_ BitVec 32) V!2921 V!2921 (_ BitVec 32) Int) Unit!1898)

(assert (=> b!68634 (= lt!29957 (lemmaValidKeyInArrayIsInListMap!81 (_keys!3810 newMap!16) lt!29960 (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (index!3078 lt!29944) (defaultEntry!2167 newMap!16)))))

(assert (=> b!68634 (= lt!29960 (array!3834 (store (arr!1829 (_values!2150 newMap!16)) (index!3078 lt!29944) (ValueCellFull!884 lt!29673)) (size!2066 (_values!2150 newMap!16))))))

(declare-fun lt!29949 () Unit!1898)

(declare-fun lt!29955 () Unit!1898)

(assert (=> b!68634 (= lt!29949 lt!29955)))

(assert (=> b!68634 (= call!5829 call!5819)))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!22 (array!3831 array!3833 (_ BitVec 32) (_ BitVec 32) V!2921 V!2921 (_ BitVec 32) (_ BitVec 64) V!2921 Int) Unit!1898)

(assert (=> b!68634 (= lt!29955 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!22 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (index!3078 lt!29944) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!29967 () Unit!1898)

(assert (=> b!68634 (= lt!29967 e!44965)))

(assert (=> b!68634 (= c!9715 (contains!709 call!5830 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))

(assert (=> b!68634 (= e!44968 (tuple2!2093 true (LongMapFixedSize!677 (defaultEntry!2167 newMap!16) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (_size!387 newMap!16) (_keys!3810 newMap!16) (array!3834 (store (arr!1829 (_values!2150 newMap!16)) (index!3078 lt!29944) (ValueCellFull!884 lt!29673)) (size!2066 (_values!2150 newMap!16))) (_vacant!387 newMap!16))))))

(declare-fun b!68635 () Bool)

(declare-fun lt!29962 () Unit!1898)

(declare-fun lt!29951 () Unit!1898)

(assert (=> b!68635 (= lt!29962 lt!29951)))

(assert (=> b!68635 (= call!5824 call!5825)))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!22 (array!3831 array!3833 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2921 V!2921 V!2921 Int) Unit!1898)

(assert (=> b!68635 (= lt!29951 (lemmaChangeLongMinValueKeyThenAddPairToListMap!22 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) lt!29953 (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) lt!29673 (defaultEntry!2167 newMap!16)))))

(assert (=> b!68635 (= lt!29953 (bvor (extraKeys!2034 newMap!16) #b00000000000000000000000000000010))))

(assert (=> b!68635 (= e!44967 (tuple2!2093 true (LongMapFixedSize!677 (defaultEntry!2167 newMap!16) (mask!6111 newMap!16) (bvor (extraKeys!2034 newMap!16) #b00000000000000000000000000000010) (zeroValue!2073 newMap!16) lt!29673 (_size!387 newMap!16) (_keys!3810 newMap!16) (_values!2150 newMap!16) (_vacant!387 newMap!16))))))

(declare-fun bm!5838 () Bool)

(assert (=> bm!5838 (= call!5835 (seekEntryOrOpen!0 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (_keys!3810 newMap!16) (mask!6111 newMap!16)))))

(declare-fun b!68636 () Bool)

(assert (=> b!68636 (= e!44958 (= (select (arr!1828 (_keys!3810 newMap!16)) (index!3078 lt!29970)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))

(declare-fun bm!5839 () Bool)

(assert (=> bm!5839 (= call!5838 (getCurrentListMap!403 (_keys!3810 newMap!16) (ite (or c!9716 c!9713) (_values!2150 newMap!16) (array!3834 (store (arr!1829 (_values!2150 newMap!16)) (index!3078 lt!29944) (ValueCellFull!884 lt!29673)) (size!2066 (_values!2150 newMap!16)))) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun b!68637 () Bool)

(assert (=> b!68637 (= e!44959 e!44964)))

(declare-fun res!36895 () Bool)

(assert (=> b!68637 (= res!36895 call!5837)))

(assert (=> b!68637 (=> (not res!36895) (not e!44964))))

(declare-fun b!68638 () Bool)

(declare-fun lt!29954 () Unit!1898)

(declare-fun lt!29950 () Unit!1898)

(assert (=> b!68638 (= lt!29954 lt!29950)))

(assert (=> b!68638 (= call!5824 call!5825)))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!22 (array!3831 array!3833 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2921 V!2921 V!2921 Int) Unit!1898)

(assert (=> b!68638 (= lt!29950 (lemmaChangeZeroKeyThenAddPairToListMap!22 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) lt!29963 (zeroValue!2073 newMap!16) lt!29673 (minValue!2073 newMap!16) (defaultEntry!2167 newMap!16)))))

(assert (=> b!68638 (= lt!29963 (bvor (extraKeys!2034 newMap!16) #b00000000000000000000000000000001))))

(assert (=> b!68638 (= e!44967 (tuple2!2093 true (LongMapFixedSize!677 (defaultEntry!2167 newMap!16) (mask!6111 newMap!16) (bvor (extraKeys!2034 newMap!16) #b00000000000000000000000000000001) lt!29673 (minValue!2073 newMap!16) (_size!387 newMap!16) (_keys!3810 newMap!16) (_values!2150 newMap!16) (_vacant!387 newMap!16))))))

(assert (= (and d!14687 c!9716) b!68622))

(assert (= (and d!14687 (not c!9716)) b!68611))

(assert (= (and b!68622 c!9712) b!68638))

(assert (= (and b!68622 (not c!9712)) b!68635))

(assert (= (or b!68638 b!68635) bm!5818))

(assert (= (or b!68638 b!68635) bm!5836))

(assert (= (or b!68638 b!68635) bm!5821))

(assert (= (and b!68611 c!9713) b!68618))

(assert (= (and b!68611 (not c!9713)) b!68601))

(assert (= (and b!68618 c!9704) b!68627))

(assert (= (and b!68618 (not c!9704)) b!68633))

(assert (= (and b!68627 res!36885) b!68628))

(assert (= (and b!68628 res!36887) b!68636))

(assert (= (and b!68633 c!9707) b!68619))

(assert (= (and b!68633 (not c!9707)) b!68624))

(assert (= (and b!68619 res!36891) b!68623))

(assert (= (and b!68623 res!36888) b!68632))

(assert (= (and b!68624 c!9708) b!68630))

(assert (= (and b!68624 (not c!9708)) b!68615))

(assert (= (and b!68630 res!36892) b!68614))

(assert (= (and b!68614 res!36894) b!68613))

(assert (= (or b!68619 b!68630) bm!5816))

(assert (= (or b!68632 b!68613) bm!5827))

(assert (= (or b!68628 bm!5816) bm!5826))

(assert (= (or b!68627 b!68633) bm!5832))

(assert (= (and b!68601 c!9706) b!68603))

(assert (= (and b!68601 (not c!9706)) b!68620))

(assert (= (and b!68620 c!9714) b!68625))

(assert (= (and b!68620 (not c!9714)) b!68634))

(assert (= (and b!68634 c!9715) b!68629))

(assert (= (and b!68634 (not c!9715)) b!68617))

(assert (= (and b!68629 res!36898) b!68610))

(assert (= (and b!68610 res!36886) b!68607))

(assert (= (and b!68617 c!9709) b!68606))

(assert (= (and b!68617 (not c!9709)) b!68621))

(assert (= (and b!68606 res!36896) b!68604))

(assert (= (and b!68604 res!36893) b!68605))

(assert (= (and b!68621 c!9705) b!68637))

(assert (= (and b!68621 (not c!9705)) b!68600))

(assert (= (and b!68637 res!36895) b!68612))

(assert (= (and b!68612 res!36890) b!68616))

(assert (= (or b!68606 b!68637) bm!5824))

(assert (= (or b!68605 b!68616) bm!5822))

(assert (= (or b!68610 bm!5824) bm!5819))

(assert (= (or b!68629 b!68617) bm!5833))

(assert (= (or b!68603 b!68625) bm!5835))

(assert (= (or b!68618 b!68634) bm!5820))

(assert (= (or bm!5832 bm!5833) bm!5838))

(assert (= (or bm!5827 bm!5822) bm!5831))

(assert (= (or bm!5826 bm!5819) bm!5825))

(assert (= (or b!68633 b!68617) bm!5837))

(assert (= (or b!68627 b!68629) bm!5829))

(assert (= (or b!68618 b!68634) bm!5834))

(assert (= (and bm!5834 c!9711) b!68602))

(assert (= (and bm!5834 (not c!9711)) b!68609))

(assert (= (or bm!5836 bm!5820) bm!5839))

(assert (= (or bm!5818 b!68634) bm!5830))

(assert (= (or bm!5821 b!68634) bm!5823))

(assert (= (and d!14687 res!36889) b!68608))

(assert (= (and b!68608 c!9710) b!68631))

(assert (= (and b!68608 (not c!9710)) b!68626))

(assert (= (and b!68631 res!36897) b!68599))

(assert (= (or b!68631 b!68599 b!68626) bm!5817))

(assert (= (or b!68599 b!68626) bm!5828))

(declare-fun m!64105 () Bool)

(assert (=> bm!5834 m!64105))

(declare-fun m!64107 () Bool)

(assert (=> bm!5834 m!64107))

(declare-fun m!64109 () Bool)

(assert (=> b!68634 m!64109))

(declare-fun m!64111 () Bool)

(assert (=> b!68634 m!64111))

(assert (=> b!68634 m!63767))

(declare-fun m!64113 () Bool)

(assert (=> b!68634 m!64113))

(assert (=> b!68634 m!63767))

(declare-fun m!64115 () Bool)

(assert (=> b!68634 m!64115))

(declare-fun m!64117 () Bool)

(assert (=> bm!5830 m!64117))

(declare-fun m!64119 () Bool)

(assert (=> bm!5825 m!64119))

(assert (=> bm!5838 m!63767))

(declare-fun m!64121 () Bool)

(assert (=> bm!5838 m!64121))

(assert (=> bm!5835 m!63767))

(declare-fun m!64123 () Bool)

(assert (=> bm!5835 m!64123))

(assert (=> b!68611 m!63767))

(assert (=> b!68611 m!64121))

(declare-fun m!64125 () Bool)

(assert (=> b!68635 m!64125))

(assert (=> b!68631 m!63767))

(declare-fun m!64127 () Bool)

(assert (=> b!68631 m!64127))

(declare-fun m!64129 () Bool)

(assert (=> bm!5817 m!64129))

(assert (=> bm!5837 m!63767))

(declare-fun m!64131 () Bool)

(assert (=> bm!5837 m!64131))

(declare-fun m!64133 () Bool)

(assert (=> b!68623 m!64133))

(assert (=> bm!5829 m!63767))

(declare-fun m!64135 () Bool)

(assert (=> bm!5829 m!64135))

(declare-fun m!64137 () Bool)

(assert (=> b!68607 m!64137))

(declare-fun m!64139 () Bool)

(assert (=> d!14687 m!64139))

(assert (=> d!14687 m!63807))

(assert (=> bm!5831 m!63767))

(declare-fun m!64141 () Bool)

(assert (=> bm!5831 m!64141))

(assert (=> bm!5839 m!64111))

(declare-fun m!64143 () Bool)

(assert (=> bm!5839 m!64143))

(declare-fun m!64145 () Bool)

(assert (=> b!68614 m!64145))

(declare-fun m!64147 () Bool)

(assert (=> b!68636 m!64147))

(assert (=> bm!5828 m!63781))

(declare-fun m!64149 () Bool)

(assert (=> b!68604 m!64149))

(declare-fun m!64151 () Bool)

(assert (=> b!68612 m!64151))

(declare-fun m!64153 () Bool)

(assert (=> b!68638 m!64153))

(declare-fun m!64155 () Bool)

(assert (=> b!68609 m!64155))

(declare-fun m!64157 () Bool)

(assert (=> b!68599 m!64157))

(declare-fun m!64159 () Bool)

(assert (=> bm!5823 m!64159))

(assert (=> b!68212 d!14687))

(declare-fun d!14689 () Bool)

(assert (=> d!14689 (= (array_inv!1141 (_keys!3810 newMap!16)) (bvsge (size!2065 (_keys!3810 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!68221 d!14689))

(declare-fun d!14691 () Bool)

(assert (=> d!14691 (= (array_inv!1142 (_values!2150 newMap!16)) (bvsge (size!2066 (_values!2150 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!68221 d!14691))

(declare-fun d!14693 () Bool)

(assert (=> d!14693 (= (array_inv!1141 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvsge (size!2065 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!68229 d!14693))

(declare-fun d!14695 () Bool)

(assert (=> d!14695 (= (array_inv!1142 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvsge (size!2066 (_values!2150 (v!2485 (underlying!247 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!68229 d!14695))

(declare-fun mapIsEmpty!3111 () Bool)

(declare-fun mapRes!3111 () Bool)

(assert (=> mapIsEmpty!3111 mapRes!3111))

(declare-fun condMapEmpty!3111 () Bool)

(declare-fun mapDefault!3111 () ValueCell!884)

(assert (=> mapNonEmpty!3096 (= condMapEmpty!3111 (= mapRest!3095 ((as const (Array (_ BitVec 32) ValueCell!884)) mapDefault!3111)))))

(declare-fun e!44981 () Bool)

(assert (=> mapNonEmpty!3096 (= tp!8393 (and e!44981 mapRes!3111))))

(declare-fun mapNonEmpty!3111 () Bool)

(declare-fun tp!8421 () Bool)

(declare-fun e!44980 () Bool)

(assert (=> mapNonEmpty!3111 (= mapRes!3111 (and tp!8421 e!44980))))

(declare-fun mapKey!3111 () (_ BitVec 32))

(declare-fun mapRest!3111 () (Array (_ BitVec 32) ValueCell!884))

(declare-fun mapValue!3111 () ValueCell!884)

(assert (=> mapNonEmpty!3111 (= mapRest!3095 (store mapRest!3111 mapKey!3111 mapValue!3111))))

(declare-fun b!68645 () Bool)

(assert (=> b!68645 (= e!44980 tp_is_empty!2455)))

(declare-fun b!68646 () Bool)

(assert (=> b!68646 (= e!44981 tp_is_empty!2455)))

(assert (= (and mapNonEmpty!3096 condMapEmpty!3111) mapIsEmpty!3111))

(assert (= (and mapNonEmpty!3096 (not condMapEmpty!3111)) mapNonEmpty!3111))

(assert (= (and mapNonEmpty!3111 ((_ is ValueCellFull!884) mapValue!3111)) b!68645))

(assert (= (and mapNonEmpty!3096 ((_ is ValueCellFull!884) mapDefault!3111)) b!68646))

(declare-fun m!64161 () Bool)

(assert (=> mapNonEmpty!3111 m!64161))

(declare-fun mapIsEmpty!3112 () Bool)

(declare-fun mapRes!3112 () Bool)

(assert (=> mapIsEmpty!3112 mapRes!3112))

(declare-fun condMapEmpty!3112 () Bool)

(declare-fun mapDefault!3112 () ValueCell!884)

(assert (=> mapNonEmpty!3095 (= condMapEmpty!3112 (= mapRest!3096 ((as const (Array (_ BitVec 32) ValueCell!884)) mapDefault!3112)))))

(declare-fun e!44983 () Bool)

(assert (=> mapNonEmpty!3095 (= tp!8394 (and e!44983 mapRes!3112))))

(declare-fun mapNonEmpty!3112 () Bool)

(declare-fun tp!8422 () Bool)

(declare-fun e!44982 () Bool)

(assert (=> mapNonEmpty!3112 (= mapRes!3112 (and tp!8422 e!44982))))

(declare-fun mapValue!3112 () ValueCell!884)

(declare-fun mapRest!3112 () (Array (_ BitVec 32) ValueCell!884))

(declare-fun mapKey!3112 () (_ BitVec 32))

(assert (=> mapNonEmpty!3112 (= mapRest!3096 (store mapRest!3112 mapKey!3112 mapValue!3112))))

(declare-fun b!68647 () Bool)

(assert (=> b!68647 (= e!44982 tp_is_empty!2455)))

(declare-fun b!68648 () Bool)

(assert (=> b!68648 (= e!44983 tp_is_empty!2455)))

(assert (= (and mapNonEmpty!3095 condMapEmpty!3112) mapIsEmpty!3112))

(assert (= (and mapNonEmpty!3095 (not condMapEmpty!3112)) mapNonEmpty!3112))

(assert (= (and mapNonEmpty!3112 ((_ is ValueCellFull!884) mapValue!3112)) b!68647))

(assert (= (and mapNonEmpty!3095 ((_ is ValueCellFull!884) mapDefault!3112)) b!68648))

(declare-fun m!64163 () Bool)

(assert (=> mapNonEmpty!3112 m!64163))

(declare-fun b_lambda!3063 () Bool)

(assert (= b_lambda!3059 (or (and b!68229 b_free!2077) (and b!68221 b_free!2079 (= (defaultEntry!2167 newMap!16) (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))))) b_lambda!3063)))

(declare-fun b_lambda!3065 () Bool)

(assert (= b_lambda!3061 (or (and b!68229 b_free!2077) (and b!68221 b_free!2079 (= (defaultEntry!2167 newMap!16) (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))))) b_lambda!3065)))

(declare-fun b_lambda!3067 () Bool)

(assert (= b_lambda!3057 (or (and b!68229 b_free!2077) (and b!68221 b_free!2079 (= (defaultEntry!2167 newMap!16) (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))))) b_lambda!3067)))

(check-sat (not b!68631) (not bm!5764) (not b!68462) (not b!68635) (not d!14677) (not b_lambda!3065) (not bm!5837) (not b!68493) (not bm!5828) (not d!14687) (not d!14663) (not bm!5755) (not d!14653) (not bm!5759) (not mapNonEmpty!3112) (not b!68463) b_and!4217 (not b_next!2077) (not b!68413) (not b_next!2079) (not b!68363) (not b!68410) (not b!68364) b_and!4219 (not b_lambda!3063) (not bm!5829) (not b!68470) (not b!68599) (not d!14665) (not b!68466) (not b!68475) (not d!14675) (not d!14651) tp_is_empty!2455 (not bm!5756) (not b!68421) (not b!68476) (not bm!5823) (not b!68424) (not b!68609) (not b!68460) (not b!68469) (not b_lambda!3055) (not b!68482) (not d!14671) (not b!68459) (not b!68611) (not d!14661) (not b!68425) (not b!68507) (not b!68508) (not b!68488) (not b!68433) (not b!68478) (not bm!5839) (not b!68638) (not d!14673) (not b!68477) (not b!68479) (not b!68506) (not bm!5838) (not b!68516) (not b!68422) (not b!68420) (not b!68428) (not b!68365) (not bm!5831) (not b!68634) (not bm!5825) (not bm!5761) (not d!14681) (not bm!5835) (not mapNonEmpty!3111) (not b!68518) (not bm!5834) (not d!14685) (not b!68481) (not d!14657) (not d!14667) (not d!14655) (not bm!5767) (not bm!5830) (not bm!5817) (not b!68461) (not b!68480) (not b!68434) (not b_lambda!3067))
(check-sat b_and!4217 b_and!4219 (not b_next!2077) (not b_next!2079))
(get-model)

(assert (=> bm!5828 d!14655))

(declare-fun d!14697 () Bool)

(declare-fun get!1129 (Option!135) V!2921)

(assert (=> d!14697 (= (apply!73 lt!29805 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1129 (getValueByKey!129 (toList!708 lt!29805) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2937 () Bool)

(assert (= bs!2937 d!14697))

(declare-fun m!64165 () Bool)

(assert (=> bs!2937 m!64165))

(assert (=> bs!2937 m!64165))

(declare-fun m!64167 () Bool)

(assert (=> bs!2937 m!64167))

(assert (=> b!68420 d!14697))

(declare-fun d!14699 () Bool)

(assert (=> d!14699 (= (apply!73 lt!29835 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1129 (getValueByKey!129 (toList!708 lt!29835) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!2938 () Bool)

(assert (= bs!2938 d!14699))

(assert (=> bs!2938 m!63951))

(declare-fun m!64169 () Bool)

(assert (=> bs!2938 m!64169))

(assert (=> bs!2938 m!64169))

(declare-fun m!64171 () Bool)

(assert (=> bs!2938 m!64171))

(assert (=> b!68470 d!14699))

(declare-fun d!14701 () Bool)

(declare-fun c!9717 () Bool)

(assert (=> d!14701 (= c!9717 ((_ is ValueCellFull!884) (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!44984 () V!2921)

(assert (=> d!14701 (= (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!44984)))

(declare-fun b!68649 () Bool)

(assert (=> b!68649 (= e!44984 (get!1127 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!68650 () Bool)

(assert (=> b!68650 (= e!44984 (get!1128 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14701 c!9717) b!68649))

(assert (= (and d!14701 (not c!9717)) b!68650))

(assert (=> b!68649 m!63953))

(assert (=> b!68649 m!63771))

(declare-fun m!64173 () Bool)

(assert (=> b!68649 m!64173))

(assert (=> b!68650 m!63953))

(assert (=> b!68650 m!63771))

(declare-fun m!64175 () Bool)

(assert (=> b!68650 m!64175))

(assert (=> b!68470 d!14701))

(declare-fun b!68659 () Bool)

(declare-fun e!44991 () Bool)

(declare-fun call!5845 () Bool)

(assert (=> b!68659 (= e!44991 call!5845)))

(declare-fun b!68660 () Bool)

(declare-fun e!44993 () Bool)

(assert (=> b!68660 (= e!44993 e!44991)))

(declare-fun lt!29979 () (_ BitVec 64))

(assert (=> b!68660 (= lt!29979 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!29978 () Unit!1898)

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!3831 (_ BitVec 64) (_ BitVec 32)) Unit!1898)

(assert (=> b!68660 (= lt!29978 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3810 newMap!16) lt!29979 #b00000000000000000000000000000000))))

(assert (=> b!68660 (arrayContainsKey!0 (_keys!3810 newMap!16) lt!29979 #b00000000000000000000000000000000)))

(declare-fun lt!29977 () Unit!1898)

(assert (=> b!68660 (= lt!29977 lt!29978)))

(declare-fun res!36903 () Bool)

(assert (=> b!68660 (= res!36903 (= (seekEntryOrOpen!0 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000) (_keys!3810 newMap!16) (mask!6111 newMap!16)) (Found!237 #b00000000000000000000000000000000)))))

(assert (=> b!68660 (=> (not res!36903) (not e!44991))))

(declare-fun bm!5842 () Bool)

(assert (=> bm!5842 (= call!5845 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3810 newMap!16) (mask!6111 newMap!16)))))

(declare-fun b!68661 () Bool)

(assert (=> b!68661 (= e!44993 call!5845)))

(declare-fun b!68662 () Bool)

(declare-fun e!44992 () Bool)

(assert (=> b!68662 (= e!44992 e!44993)))

(declare-fun c!9720 () Bool)

(assert (=> b!68662 (= c!9720 (validKeyInArray!0 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!14703 () Bool)

(declare-fun res!36904 () Bool)

(assert (=> d!14703 (=> res!36904 e!44992)))

(assert (=> d!14703 (= res!36904 (bvsge #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))))))

(assert (=> d!14703 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3810 newMap!16) (mask!6111 newMap!16)) e!44992)))

(assert (= (and d!14703 (not res!36904)) b!68662))

(assert (= (and b!68662 c!9720) b!68660))

(assert (= (and b!68662 (not c!9720)) b!68661))

(assert (= (and b!68660 res!36903) b!68659))

(assert (= (or b!68659 b!68661) bm!5842))

(declare-fun m!64177 () Bool)

(assert (=> b!68660 m!64177))

(declare-fun m!64179 () Bool)

(assert (=> b!68660 m!64179))

(declare-fun m!64181 () Bool)

(assert (=> b!68660 m!64181))

(assert (=> b!68660 m!64177))

(declare-fun m!64183 () Bool)

(assert (=> b!68660 m!64183))

(declare-fun m!64185 () Bool)

(assert (=> bm!5842 m!64185))

(assert (=> b!68662 m!64177))

(assert (=> b!68662 m!64177))

(declare-fun m!64187 () Bool)

(assert (=> b!68662 m!64187))

(assert (=> b!68364 d!14703))

(declare-fun b!68679 () Bool)

(declare-fun e!45003 () Bool)

(declare-fun lt!29985 () SeekEntryResult!237)

(assert (=> b!68679 (= e!45003 ((_ is Undefined!237) lt!29985))))

(declare-fun b!68680 () Bool)

(declare-fun e!45004 () Bool)

(declare-fun call!5850 () Bool)

(assert (=> b!68680 (= e!45004 (not call!5850))))

(declare-fun b!68681 () Bool)

(declare-fun res!36915 () Bool)

(assert (=> b!68681 (=> (not res!36915) (not e!45004))))

(assert (=> b!68681 (= res!36915 (= (select (arr!1828 (_keys!3810 newMap!16)) (index!3080 lt!29985)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!68681 (and (bvsge (index!3080 lt!29985) #b00000000000000000000000000000000) (bvslt (index!3080 lt!29985) (size!2065 (_keys!3810 newMap!16))))))

(declare-fun bm!5847 () Bool)

(assert (=> bm!5847 (= call!5850 (arrayContainsKey!0 (_keys!3810 newMap!16) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!68682 () Bool)

(declare-fun res!36916 () Bool)

(assert (=> b!68682 (=> (not res!36916) (not e!45004))))

(declare-fun call!5851 () Bool)

(assert (=> b!68682 (= res!36916 call!5851)))

(assert (=> b!68682 (= e!45003 e!45004)))

(declare-fun b!68683 () Bool)

(declare-fun e!45005 () Bool)

(declare-fun e!45002 () Bool)

(assert (=> b!68683 (= e!45005 e!45002)))

(declare-fun res!36913 () Bool)

(assert (=> b!68683 (= res!36913 call!5851)))

(assert (=> b!68683 (=> (not res!36913) (not e!45002))))

(declare-fun d!14705 () Bool)

(assert (=> d!14705 e!45005))

(declare-fun c!9726 () Bool)

(assert (=> d!14705 (= c!9726 ((_ is MissingZero!237) lt!29985))))

(assert (=> d!14705 (= lt!29985 (seekEntryOrOpen!0 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (_keys!3810 newMap!16) (mask!6111 newMap!16)))))

(declare-fun lt!29984 () Unit!1898)

(declare-fun choose!389 (array!3831 array!3833 (_ BitVec 32) (_ BitVec 32) V!2921 V!2921 (_ BitVec 64) Int) Unit!1898)

(assert (=> d!14705 (= lt!29984 (choose!389 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (defaultEntry!2167 newMap!16)))))

(assert (=> d!14705 (validMask!0 (mask!6111 newMap!16))))

(assert (=> d!14705 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!22 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (defaultEntry!2167 newMap!16)) lt!29984)))

(declare-fun b!68684 () Bool)

(assert (=> b!68684 (= e!45002 (not call!5850))))

(declare-fun b!68685 () Bool)

(assert (=> b!68685 (= e!45005 e!45003)))

(declare-fun c!9725 () Bool)

(assert (=> b!68685 (= c!9725 ((_ is MissingVacant!237) lt!29985))))

(declare-fun b!68686 () Bool)

(assert (=> b!68686 (and (bvsge (index!3077 lt!29985) #b00000000000000000000000000000000) (bvslt (index!3077 lt!29985) (size!2065 (_keys!3810 newMap!16))))))

(declare-fun res!36914 () Bool)

(assert (=> b!68686 (= res!36914 (= (select (arr!1828 (_keys!3810 newMap!16)) (index!3077 lt!29985)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!68686 (=> (not res!36914) (not e!45002))))

(declare-fun bm!5848 () Bool)

(assert (=> bm!5848 (= call!5851 (inRange!0 (ite c!9726 (index!3077 lt!29985) (index!3080 lt!29985)) (mask!6111 newMap!16)))))

(assert (= (and d!14705 c!9726) b!68683))

(assert (= (and d!14705 (not c!9726)) b!68685))

(assert (= (and b!68683 res!36913) b!68686))

(assert (= (and b!68686 res!36914) b!68684))

(assert (= (and b!68685 c!9725) b!68682))

(assert (= (and b!68685 (not c!9725)) b!68679))

(assert (= (and b!68682 res!36916) b!68681))

(assert (= (and b!68681 res!36915) b!68680))

(assert (= (or b!68683 b!68682) bm!5848))

(assert (= (or b!68684 b!68680) bm!5847))

(declare-fun m!64189 () Bool)

(assert (=> b!68681 m!64189))

(assert (=> d!14705 m!63767))

(assert (=> d!14705 m!64121))

(assert (=> d!14705 m!63767))

(declare-fun m!64191 () Bool)

(assert (=> d!14705 m!64191))

(declare-fun m!64193 () Bool)

(assert (=> d!14705 m!64193))

(declare-fun m!64195 () Bool)

(assert (=> bm!5848 m!64195))

(assert (=> bm!5847 m!63767))

(assert (=> bm!5847 m!64141))

(declare-fun m!64197 () Bool)

(assert (=> b!68686 m!64197))

(assert (=> bm!5837 d!14705))

(declare-fun d!14707 () Bool)

(declare-fun e!45007 () Bool)

(assert (=> d!14707 e!45007))

(declare-fun res!36917 () Bool)

(assert (=> d!14707 (=> res!36917 e!45007)))

(declare-fun lt!29989 () Bool)

(assert (=> d!14707 (= res!36917 (not lt!29989))))

(declare-fun lt!29988 () Bool)

(assert (=> d!14707 (= lt!29989 lt!29988)))

(declare-fun lt!29987 () Unit!1898)

(declare-fun e!45006 () Unit!1898)

(assert (=> d!14707 (= lt!29987 e!45006)))

(declare-fun c!9727 () Bool)

(assert (=> d!14707 (= c!9727 lt!29988)))

(assert (=> d!14707 (= lt!29988 (containsKey!133 (toList!708 lt!29868) (_1!1056 lt!29680)))))

(assert (=> d!14707 (= (contains!709 lt!29868 (_1!1056 lt!29680)) lt!29989)))

(declare-fun b!68687 () Bool)

(declare-fun lt!29986 () Unit!1898)

(assert (=> b!68687 (= e!45006 lt!29986)))

(assert (=> b!68687 (= lt!29986 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 lt!29868) (_1!1056 lt!29680)))))

(assert (=> b!68687 (isDefined!83 (getValueByKey!129 (toList!708 lt!29868) (_1!1056 lt!29680)))))

(declare-fun b!68688 () Bool)

(declare-fun Unit!1910 () Unit!1898)

(assert (=> b!68688 (= e!45006 Unit!1910)))

(declare-fun b!68689 () Bool)

(assert (=> b!68689 (= e!45007 (isDefined!83 (getValueByKey!129 (toList!708 lt!29868) (_1!1056 lt!29680))))))

(assert (= (and d!14707 c!9727) b!68687))

(assert (= (and d!14707 (not c!9727)) b!68688))

(assert (= (and d!14707 (not res!36917)) b!68689))

(declare-fun m!64199 () Bool)

(assert (=> d!14707 m!64199))

(declare-fun m!64201 () Bool)

(assert (=> b!68687 m!64201))

(assert (=> b!68687 m!64079))

(assert (=> b!68687 m!64079))

(declare-fun m!64203 () Bool)

(assert (=> b!68687 m!64203))

(assert (=> b!68689 m!64079))

(assert (=> b!68689 m!64079))

(assert (=> b!68689 m!64203))

(assert (=> d!14673 d!14707))

(declare-fun b!68700 () Bool)

(declare-fun e!45013 () Option!135)

(assert (=> b!68700 (= e!45013 (getValueByKey!129 (t!4964 lt!29866) (_1!1056 lt!29680)))))

(declare-fun b!68698 () Bool)

(declare-fun e!45012 () Option!135)

(assert (=> b!68698 (= e!45012 (Some!134 (_2!1056 (h!2051 lt!29866))))))

(declare-fun b!68701 () Bool)

(assert (=> b!68701 (= e!45013 None!133)))

(declare-fun d!14709 () Bool)

(declare-fun c!9732 () Bool)

(assert (=> d!14709 (= c!9732 (and ((_ is Cons!1466) lt!29866) (= (_1!1056 (h!2051 lt!29866)) (_1!1056 lt!29680))))))

(assert (=> d!14709 (= (getValueByKey!129 lt!29866 (_1!1056 lt!29680)) e!45012)))

(declare-fun b!68699 () Bool)

(assert (=> b!68699 (= e!45012 e!45013)))

(declare-fun c!9733 () Bool)

(assert (=> b!68699 (= c!9733 (and ((_ is Cons!1466) lt!29866) (not (= (_1!1056 (h!2051 lt!29866)) (_1!1056 lt!29680)))))))

(assert (= (and d!14709 c!9732) b!68698))

(assert (= (and d!14709 (not c!9732)) b!68699))

(assert (= (and b!68699 c!9733) b!68700))

(assert (= (and b!68699 (not c!9733)) b!68701))

(declare-fun m!64205 () Bool)

(assert (=> b!68700 m!64205))

(assert (=> d!14673 d!14709))

(declare-fun d!14711 () Bool)

(assert (=> d!14711 (= (getValueByKey!129 lt!29866 (_1!1056 lt!29680)) (Some!134 (_2!1056 lt!29680)))))

(declare-fun lt!29992 () Unit!1898)

(declare-fun choose!390 (List!1470 (_ BitVec 64) V!2921) Unit!1898)

(assert (=> d!14711 (= lt!29992 (choose!390 lt!29866 (_1!1056 lt!29680) (_2!1056 lt!29680)))))

(declare-fun e!45016 () Bool)

(assert (=> d!14711 e!45016))

(declare-fun res!36922 () Bool)

(assert (=> d!14711 (=> (not res!36922) (not e!45016))))

(declare-fun isStrictlySorted!285 (List!1470) Bool)

(assert (=> d!14711 (= res!36922 (isStrictlySorted!285 lt!29866))))

(assert (=> d!14711 (= (lemmaContainsTupThenGetReturnValue!49 lt!29866 (_1!1056 lt!29680) (_2!1056 lt!29680)) lt!29992)))

(declare-fun b!68706 () Bool)

(declare-fun res!36923 () Bool)

(assert (=> b!68706 (=> (not res!36923) (not e!45016))))

(assert (=> b!68706 (= res!36923 (containsKey!133 lt!29866 (_1!1056 lt!29680)))))

(declare-fun b!68707 () Bool)

(assert (=> b!68707 (= e!45016 (contains!711 lt!29866 (tuple2!2091 (_1!1056 lt!29680) (_2!1056 lt!29680))))))

(assert (= (and d!14711 res!36922) b!68706))

(assert (= (and b!68706 res!36923) b!68707))

(assert (=> d!14711 m!64073))

(declare-fun m!64207 () Bool)

(assert (=> d!14711 m!64207))

(declare-fun m!64209 () Bool)

(assert (=> d!14711 m!64209))

(declare-fun m!64211 () Bool)

(assert (=> b!68706 m!64211))

(declare-fun m!64213 () Bool)

(assert (=> b!68707 m!64213))

(assert (=> d!14673 d!14711))

(declare-fun b!68728 () Bool)

(declare-fun e!45030 () List!1470)

(declare-fun call!5859 () List!1470)

(assert (=> b!68728 (= e!45030 call!5859)))

(declare-fun b!68729 () Bool)

(declare-fun c!9742 () Bool)

(assert (=> b!68729 (= c!9742 (and ((_ is Cons!1466) (toList!708 (+!89 lt!29682 lt!29675))) (bvsgt (_1!1056 (h!2051 (toList!708 (+!89 lt!29682 lt!29675)))) (_1!1056 lt!29680))))))

(declare-fun e!45028 () List!1470)

(assert (=> b!68729 (= e!45028 e!45030)))

(declare-fun b!68730 () Bool)

(assert (=> b!68730 (= e!45030 call!5859)))

(declare-fun b!68732 () Bool)

(declare-fun call!5858 () List!1470)

(assert (=> b!68732 (= e!45028 call!5858)))

(declare-fun bm!5855 () Bool)

(declare-fun call!5860 () List!1470)

(assert (=> bm!5855 (= call!5858 call!5860)))

(declare-fun bm!5856 () Bool)

(assert (=> bm!5856 (= call!5859 call!5858)))

(declare-fun b!68733 () Bool)

(declare-fun e!45027 () List!1470)

(assert (=> b!68733 (= e!45027 e!45028)))

(declare-fun c!9743 () Bool)

(assert (=> b!68733 (= c!9743 (and ((_ is Cons!1466) (toList!708 (+!89 lt!29682 lt!29675))) (= (_1!1056 (h!2051 (toList!708 (+!89 lt!29682 lt!29675)))) (_1!1056 lt!29680))))))

(declare-fun e!45029 () List!1470)

(declare-fun bm!5857 () Bool)

(declare-fun c!9745 () Bool)

(declare-fun $colon$colon!63 (List!1470 tuple2!2090) List!1470)

(assert (=> bm!5857 (= call!5860 ($colon$colon!63 e!45029 (ite c!9745 (h!2051 (toList!708 (+!89 lt!29682 lt!29675))) (tuple2!2091 (_1!1056 lt!29680) (_2!1056 lt!29680)))))))

(declare-fun c!9744 () Bool)

(assert (=> bm!5857 (= c!9744 c!9745)))

(declare-fun b!68734 () Bool)

(declare-fun res!36929 () Bool)

(declare-fun e!45031 () Bool)

(assert (=> b!68734 (=> (not res!36929) (not e!45031))))

(declare-fun lt!29995 () List!1470)

(assert (=> b!68734 (= res!36929 (containsKey!133 lt!29995 (_1!1056 lt!29680)))))

(declare-fun b!68735 () Bool)

(assert (=> b!68735 (= e!45031 (contains!711 lt!29995 (tuple2!2091 (_1!1056 lt!29680) (_2!1056 lt!29680))))))

(declare-fun b!68736 () Bool)

(assert (=> b!68736 (= e!45029 (ite c!9743 (t!4964 (toList!708 (+!89 lt!29682 lt!29675))) (ite c!9742 (Cons!1466 (h!2051 (toList!708 (+!89 lt!29682 lt!29675))) (t!4964 (toList!708 (+!89 lt!29682 lt!29675)))) Nil!1467)))))

(declare-fun b!68737 () Bool)

(assert (=> b!68737 (= e!45027 call!5860)))

(declare-fun d!14713 () Bool)

(assert (=> d!14713 e!45031))

(declare-fun res!36928 () Bool)

(assert (=> d!14713 (=> (not res!36928) (not e!45031))))

(assert (=> d!14713 (= res!36928 (isStrictlySorted!285 lt!29995))))

(assert (=> d!14713 (= lt!29995 e!45027)))

(assert (=> d!14713 (= c!9745 (and ((_ is Cons!1466) (toList!708 (+!89 lt!29682 lt!29675))) (bvslt (_1!1056 (h!2051 (toList!708 (+!89 lt!29682 lt!29675)))) (_1!1056 lt!29680))))))

(assert (=> d!14713 (isStrictlySorted!285 (toList!708 (+!89 lt!29682 lt!29675)))))

(assert (=> d!14713 (= (insertStrictlySorted!52 (toList!708 (+!89 lt!29682 lt!29675)) (_1!1056 lt!29680) (_2!1056 lt!29680)) lt!29995)))

(declare-fun b!68731 () Bool)

(assert (=> b!68731 (= e!45029 (insertStrictlySorted!52 (t!4964 (toList!708 (+!89 lt!29682 lt!29675))) (_1!1056 lt!29680) (_2!1056 lt!29680)))))

(assert (= (and d!14713 c!9745) b!68737))

(assert (= (and d!14713 (not c!9745)) b!68733))

(assert (= (and b!68733 c!9743) b!68732))

(assert (= (and b!68733 (not c!9743)) b!68729))

(assert (= (and b!68729 c!9742) b!68730))

(assert (= (and b!68729 (not c!9742)) b!68728))

(assert (= (or b!68730 b!68728) bm!5856))

(assert (= (or b!68732 bm!5856) bm!5855))

(assert (= (or b!68737 bm!5855) bm!5857))

(assert (= (and bm!5857 c!9744) b!68731))

(assert (= (and bm!5857 (not c!9744)) b!68736))

(assert (= (and d!14713 res!36928) b!68734))

(assert (= (and b!68734 res!36929) b!68735))

(declare-fun m!64215 () Bool)

(assert (=> d!14713 m!64215))

(declare-fun m!64217 () Bool)

(assert (=> d!14713 m!64217))

(declare-fun m!64219 () Bool)

(assert (=> b!68735 m!64219))

(declare-fun m!64221 () Bool)

(assert (=> b!68734 m!64221))

(declare-fun m!64223 () Bool)

(assert (=> bm!5857 m!64223))

(declare-fun m!64225 () Bool)

(assert (=> b!68731 m!64225))

(assert (=> d!14673 d!14713))

(declare-fun d!14715 () Bool)

(declare-fun lt!29998 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!73 (List!1470) (InoxSet tuple2!2090))

(assert (=> d!14715 (= lt!29998 (select (content!73 (toList!708 lt!29861)) lt!29675))))

(declare-fun e!45037 () Bool)

(assert (=> d!14715 (= lt!29998 e!45037)))

(declare-fun res!36935 () Bool)

(assert (=> d!14715 (=> (not res!36935) (not e!45037))))

(assert (=> d!14715 (= res!36935 ((_ is Cons!1466) (toList!708 lt!29861)))))

(assert (=> d!14715 (= (contains!711 (toList!708 lt!29861) lt!29675) lt!29998)))

(declare-fun b!68742 () Bool)

(declare-fun e!45036 () Bool)

(assert (=> b!68742 (= e!45037 e!45036)))

(declare-fun res!36934 () Bool)

(assert (=> b!68742 (=> res!36934 e!45036)))

(assert (=> b!68742 (= res!36934 (= (h!2051 (toList!708 lt!29861)) lt!29675))))

(declare-fun b!68743 () Bool)

(assert (=> b!68743 (= e!45036 (contains!711 (t!4964 (toList!708 lt!29861)) lt!29675))))

(assert (= (and d!14715 res!36935) b!68742))

(assert (= (and b!68742 (not res!36934)) b!68743))

(declare-fun m!64227 () Bool)

(assert (=> d!14715 m!64227))

(declare-fun m!64229 () Bool)

(assert (=> d!14715 m!64229))

(declare-fun m!64231 () Bool)

(assert (=> b!68743 m!64231))

(assert (=> b!68480 d!14715))

(declare-fun b!68744 () Bool)

(declare-fun e!45048 () ListLongMap!1385)

(declare-fun call!5861 () ListLongMap!1385)

(assert (=> b!68744 (= e!45048 call!5861)))

(declare-fun b!68745 () Bool)

(declare-fun e!45045 () Bool)

(declare-fun e!45040 () Bool)

(assert (=> b!68745 (= e!45045 e!45040)))

(declare-fun res!36943 () Bool)

(declare-fun call!5862 () Bool)

(assert (=> b!68745 (= res!36943 call!5862)))

(assert (=> b!68745 (=> (not res!36943) (not e!45040))))

(declare-fun b!68747 () Bool)

(declare-fun e!45046 () Bool)

(declare-fun call!5867 () Bool)

(assert (=> b!68747 (= e!45046 (not call!5867))))

(declare-fun bm!5858 () Bool)

(declare-fun lt!30005 () ListLongMap!1385)

(assert (=> bm!5858 (= call!5862 (contains!709 lt!30005 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!68748 () Bool)

(declare-fun c!9747 () Bool)

(assert (=> b!68748 (= c!9747 (and (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!45044 () ListLongMap!1385)

(assert (=> b!68748 (= e!45044 e!45048)))

(declare-fun c!9749 () Bool)

(declare-fun call!5863 () ListLongMap!1385)

(declare-fun c!9746 () Bool)

(declare-fun bm!5859 () Bool)

(declare-fun call!5865 () ListLongMap!1385)

(declare-fun call!5866 () ListLongMap!1385)

(assert (=> bm!5859 (= call!5865 (+!89 (ite c!9749 call!5866 (ite c!9746 call!5863 call!5861)) (ite (or c!9749 c!9746) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))))))

(declare-fun b!68749 () Bool)

(declare-fun e!45042 () Bool)

(assert (=> b!68749 (= e!45042 (validKeyInArray!0 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!68750 () Bool)

(declare-fun res!36941 () Bool)

(declare-fun e!45039 () Bool)

(assert (=> b!68750 (=> (not res!36941) (not e!45039))))

(declare-fun e!45049 () Bool)

(assert (=> b!68750 (= res!36941 e!45049)))

(declare-fun res!36937 () Bool)

(assert (=> b!68750 (=> res!36937 e!45049)))

(assert (=> b!68750 (= res!36937 (not e!45042))))

(declare-fun res!36938 () Bool)

(assert (=> b!68750 (=> (not res!36938) (not e!45042))))

(assert (=> b!68750 (= res!36938 (bvslt #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))))))

(declare-fun b!68751 () Bool)

(declare-fun e!45043 () ListLongMap!1385)

(assert (=> b!68751 (= e!45043 e!45044)))

(assert (=> b!68751 (= c!9746 (and (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!68752 () Bool)

(declare-fun e!45041 () Bool)

(assert (=> b!68752 (= e!45046 e!45041)))

(declare-fun res!36939 () Bool)

(assert (=> b!68752 (= res!36939 call!5867)))

(assert (=> b!68752 (=> (not res!36939) (not e!45041))))

(declare-fun bm!5860 () Bool)

(assert (=> bm!5860 (= call!5863 call!5866)))

(declare-fun b!68753 () Bool)

(declare-fun call!5864 () ListLongMap!1385)

(assert (=> b!68753 (= e!45044 call!5864)))

(declare-fun bm!5861 () Bool)

(assert (=> bm!5861 (= call!5864 call!5865)))

(declare-fun b!68754 () Bool)

(assert (=> b!68754 (= e!45048 call!5864)))

(declare-fun b!68755 () Bool)

(declare-fun res!36942 () Bool)

(assert (=> b!68755 (=> (not res!36942) (not e!45039))))

(assert (=> b!68755 (= res!36942 e!45046)))

(declare-fun c!9750 () Bool)

(assert (=> b!68755 (= c!9750 (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!68756 () Bool)

(assert (=> b!68756 (= e!45041 (= (apply!73 lt!30005 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2073 newMap!16)))))

(declare-fun bm!5862 () Bool)

(assert (=> bm!5862 (= call!5866 (getCurrentListMapNoExtraKeys!53 (_keys!3810 newMap!16) lt!29960 (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun b!68757 () Bool)

(assert (=> b!68757 (= e!45040 (= (apply!73 lt!30005 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2073 newMap!16)))))

(declare-fun b!68758 () Bool)

(declare-fun e!45038 () Bool)

(assert (=> b!68758 (= e!45038 (= (apply!73 lt!30005 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)) (get!1126 (select (arr!1829 lt!29960) #b00000000000000000000000000000000) (dynLambda!321 (defaultEntry!2167 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!68758 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2066 lt!29960)))))

(assert (=> b!68758 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))))))

(declare-fun bm!5863 () Bool)

(assert (=> bm!5863 (= call!5861 call!5863)))

(declare-fun d!14717 () Bool)

(assert (=> d!14717 e!45039))

(declare-fun res!36944 () Bool)

(assert (=> d!14717 (=> (not res!36944) (not e!45039))))

(assert (=> d!14717 (= res!36944 (or (bvsge #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))))))))

(declare-fun lt!30007 () ListLongMap!1385)

(assert (=> d!14717 (= lt!30005 lt!30007)))

(declare-fun lt!30017 () Unit!1898)

(declare-fun e!45050 () Unit!1898)

(assert (=> d!14717 (= lt!30017 e!45050)))

(declare-fun c!9751 () Bool)

(declare-fun e!45047 () Bool)

(assert (=> d!14717 (= c!9751 e!45047)))

(declare-fun res!36936 () Bool)

(assert (=> d!14717 (=> (not res!36936) (not e!45047))))

(assert (=> d!14717 (= res!36936 (bvslt #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))))))

(assert (=> d!14717 (= lt!30007 e!45043)))

(assert (=> d!14717 (= c!9749 (and (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!14717 (validMask!0 (mask!6111 newMap!16))))

(assert (=> d!14717 (= (getCurrentListMap!403 (_keys!3810 newMap!16) lt!29960 (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) lt!30005)))

(declare-fun b!68746 () Bool)

(assert (=> b!68746 (= e!45047 (validKeyInArray!0 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!68759 () Bool)

(assert (=> b!68759 (= e!45039 e!45045)))

(declare-fun c!9748 () Bool)

(assert (=> b!68759 (= c!9748 (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!68760 () Bool)

(assert (=> b!68760 (= e!45049 e!45038)))

(declare-fun res!36940 () Bool)

(assert (=> b!68760 (=> (not res!36940) (not e!45038))))

(assert (=> b!68760 (= res!36940 (contains!709 lt!30005 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!68760 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))))))

(declare-fun b!68761 () Bool)

(assert (=> b!68761 (= e!45043 (+!89 call!5865 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))))))

(declare-fun b!68762 () Bool)

(assert (=> b!68762 (= e!45045 (not call!5862))))

(declare-fun bm!5864 () Bool)

(assert (=> bm!5864 (= call!5867 (contains!709 lt!30005 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!68763 () Bool)

(declare-fun Unit!1911 () Unit!1898)

(assert (=> b!68763 (= e!45050 Unit!1911)))

(declare-fun b!68764 () Bool)

(declare-fun lt!30016 () Unit!1898)

(assert (=> b!68764 (= e!45050 lt!30016)))

(declare-fun lt!29999 () ListLongMap!1385)

(assert (=> b!68764 (= lt!29999 (getCurrentListMapNoExtraKeys!53 (_keys!3810 newMap!16) lt!29960 (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30003 () (_ BitVec 64))

(assert (=> b!68764 (= lt!30003 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30002 () (_ BitVec 64))

(assert (=> b!68764 (= lt!30002 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30019 () Unit!1898)

(assert (=> b!68764 (= lt!30019 (addStillContains!49 lt!29999 lt!30003 (zeroValue!2073 newMap!16) lt!30002))))

(assert (=> b!68764 (contains!709 (+!89 lt!29999 (tuple2!2091 lt!30003 (zeroValue!2073 newMap!16))) lt!30002)))

(declare-fun lt!30013 () Unit!1898)

(assert (=> b!68764 (= lt!30013 lt!30019)))

(declare-fun lt!30014 () ListLongMap!1385)

(assert (=> b!68764 (= lt!30014 (getCurrentListMapNoExtraKeys!53 (_keys!3810 newMap!16) lt!29960 (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30004 () (_ BitVec 64))

(assert (=> b!68764 (= lt!30004 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30001 () (_ BitVec 64))

(assert (=> b!68764 (= lt!30001 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30008 () Unit!1898)

(assert (=> b!68764 (= lt!30008 (addApplyDifferent!49 lt!30014 lt!30004 (minValue!2073 newMap!16) lt!30001))))

(assert (=> b!68764 (= (apply!73 (+!89 lt!30014 (tuple2!2091 lt!30004 (minValue!2073 newMap!16))) lt!30001) (apply!73 lt!30014 lt!30001))))

(declare-fun lt!30020 () Unit!1898)

(assert (=> b!68764 (= lt!30020 lt!30008)))

(declare-fun lt!30000 () ListLongMap!1385)

(assert (=> b!68764 (= lt!30000 (getCurrentListMapNoExtraKeys!53 (_keys!3810 newMap!16) lt!29960 (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30012 () (_ BitVec 64))

(assert (=> b!68764 (= lt!30012 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30009 () (_ BitVec 64))

(assert (=> b!68764 (= lt!30009 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30011 () Unit!1898)

(assert (=> b!68764 (= lt!30011 (addApplyDifferent!49 lt!30000 lt!30012 (zeroValue!2073 newMap!16) lt!30009))))

(assert (=> b!68764 (= (apply!73 (+!89 lt!30000 (tuple2!2091 lt!30012 (zeroValue!2073 newMap!16))) lt!30009) (apply!73 lt!30000 lt!30009))))

(declare-fun lt!30006 () Unit!1898)

(assert (=> b!68764 (= lt!30006 lt!30011)))

(declare-fun lt!30018 () ListLongMap!1385)

(assert (=> b!68764 (= lt!30018 (getCurrentListMapNoExtraKeys!53 (_keys!3810 newMap!16) lt!29960 (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30015 () (_ BitVec 64))

(assert (=> b!68764 (= lt!30015 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30010 () (_ BitVec 64))

(assert (=> b!68764 (= lt!30010 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!68764 (= lt!30016 (addApplyDifferent!49 lt!30018 lt!30015 (minValue!2073 newMap!16) lt!30010))))

(assert (=> b!68764 (= (apply!73 (+!89 lt!30018 (tuple2!2091 lt!30015 (minValue!2073 newMap!16))) lt!30010) (apply!73 lt!30018 lt!30010))))

(assert (= (and d!14717 c!9749) b!68761))

(assert (= (and d!14717 (not c!9749)) b!68751))

(assert (= (and b!68751 c!9746) b!68753))

(assert (= (and b!68751 (not c!9746)) b!68748))

(assert (= (and b!68748 c!9747) b!68754))

(assert (= (and b!68748 (not c!9747)) b!68744))

(assert (= (or b!68754 b!68744) bm!5863))

(assert (= (or b!68753 bm!5863) bm!5860))

(assert (= (or b!68753 b!68754) bm!5861))

(assert (= (or b!68761 bm!5860) bm!5862))

(assert (= (or b!68761 bm!5861) bm!5859))

(assert (= (and d!14717 res!36936) b!68746))

(assert (= (and d!14717 c!9751) b!68764))

(assert (= (and d!14717 (not c!9751)) b!68763))

(assert (= (and d!14717 res!36944) b!68750))

(assert (= (and b!68750 res!36938) b!68749))

(assert (= (and b!68750 (not res!36937)) b!68760))

(assert (= (and b!68760 res!36940) b!68758))

(assert (= (and b!68750 res!36941) b!68755))

(assert (= (and b!68755 c!9750) b!68752))

(assert (= (and b!68755 (not c!9750)) b!68747))

(assert (= (and b!68752 res!36939) b!68756))

(assert (= (or b!68752 b!68747) bm!5864))

(assert (= (and b!68755 res!36942) b!68759))

(assert (= (and b!68759 c!9748) b!68745))

(assert (= (and b!68759 (not c!9748)) b!68762))

(assert (= (and b!68745 res!36943) b!68757))

(assert (= (or b!68745 b!68762) bm!5858))

(declare-fun b_lambda!3069 () Bool)

(assert (=> (not b_lambda!3069) (not b!68758)))

(declare-fun t!4978 () Bool)

(declare-fun tb!1481 () Bool)

(assert (=> (and b!68229 (= (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) (defaultEntry!2167 newMap!16)) t!4978) tb!1481))

(declare-fun result!2615 () Bool)

(assert (=> tb!1481 (= result!2615 tp_is_empty!2455)))

(assert (=> b!68758 t!4978))

(declare-fun b_and!4221 () Bool)

(assert (= b_and!4217 (and (=> t!4978 result!2615) b_and!4221)))

(declare-fun t!4980 () Bool)

(declare-fun tb!1483 () Bool)

(assert (=> (and b!68221 (= (defaultEntry!2167 newMap!16) (defaultEntry!2167 newMap!16)) t!4980) tb!1483))

(declare-fun result!2617 () Bool)

(assert (= result!2617 result!2615))

(assert (=> b!68758 t!4980))

(declare-fun b_and!4223 () Bool)

(assert (= b_and!4219 (and (=> t!4980 result!2617) b_and!4223)))

(declare-fun m!64233 () Bool)

(assert (=> b!68761 m!64233))

(declare-fun m!64235 () Bool)

(assert (=> bm!5859 m!64235))

(declare-fun m!64237 () Bool)

(assert (=> bm!5862 m!64237))

(assert (=> b!68758 m!64177))

(declare-fun m!64239 () Bool)

(assert (=> b!68758 m!64239))

(assert (=> b!68758 m!64177))

(declare-fun m!64241 () Bool)

(assert (=> b!68758 m!64241))

(declare-fun m!64243 () Bool)

(assert (=> b!68758 m!64243))

(assert (=> b!68758 m!64239))

(assert (=> b!68758 m!64243))

(declare-fun m!64245 () Bool)

(assert (=> b!68758 m!64245))

(assert (=> b!68746 m!64177))

(assert (=> b!68746 m!64177))

(assert (=> b!68746 m!64187))

(assert (=> b!68749 m!64177))

(assert (=> b!68749 m!64177))

(assert (=> b!68749 m!64187))

(declare-fun m!64247 () Bool)

(assert (=> bm!5858 m!64247))

(declare-fun m!64249 () Bool)

(assert (=> b!68757 m!64249))

(declare-fun m!64251 () Bool)

(assert (=> bm!5864 m!64251))

(declare-fun m!64253 () Bool)

(assert (=> b!68764 m!64253))

(declare-fun m!64255 () Bool)

(assert (=> b!68764 m!64255))

(declare-fun m!64257 () Bool)

(assert (=> b!68764 m!64257))

(assert (=> b!68764 m!64255))

(assert (=> b!68764 m!64253))

(declare-fun m!64259 () Bool)

(assert (=> b!68764 m!64259))

(declare-fun m!64261 () Bool)

(assert (=> b!68764 m!64261))

(declare-fun m!64263 () Bool)

(assert (=> b!68764 m!64263))

(declare-fun m!64265 () Bool)

(assert (=> b!68764 m!64265))

(declare-fun m!64267 () Bool)

(assert (=> b!68764 m!64267))

(declare-fun m!64269 () Bool)

(assert (=> b!68764 m!64269))

(declare-fun m!64271 () Bool)

(assert (=> b!68764 m!64271))

(assert (=> b!68764 m!64237))

(declare-fun m!64273 () Bool)

(assert (=> b!68764 m!64273))

(declare-fun m!64275 () Bool)

(assert (=> b!68764 m!64275))

(assert (=> b!68764 m!64177))

(declare-fun m!64277 () Bool)

(assert (=> b!68764 m!64277))

(declare-fun m!64279 () Bool)

(assert (=> b!68764 m!64279))

(assert (=> b!68764 m!64265))

(assert (=> b!68764 m!64277))

(declare-fun m!64281 () Bool)

(assert (=> b!68764 m!64281))

(assert (=> b!68760 m!64177))

(assert (=> b!68760 m!64177))

(declare-fun m!64283 () Bool)

(assert (=> b!68760 m!64283))

(declare-fun m!64285 () Bool)

(assert (=> b!68756 m!64285))

(assert (=> d!14717 m!64193))

(assert (=> b!68609 d!14717))

(declare-fun b!68765 () Bool)

(declare-fun e!45061 () ListLongMap!1385)

(declare-fun call!5868 () ListLongMap!1385)

(assert (=> b!68765 (= e!45061 call!5868)))

(declare-fun b!68766 () Bool)

(declare-fun e!45058 () Bool)

(declare-fun e!45053 () Bool)

(assert (=> b!68766 (= e!45058 e!45053)))

(declare-fun res!36952 () Bool)

(declare-fun call!5869 () Bool)

(assert (=> b!68766 (= res!36952 call!5869)))

(assert (=> b!68766 (=> (not res!36952) (not e!45053))))

(declare-fun b!68768 () Bool)

(declare-fun e!45059 () Bool)

(declare-fun call!5874 () Bool)

(assert (=> b!68768 (= e!45059 (not call!5874))))

(declare-fun bm!5865 () Bool)

(declare-fun lt!30027 () ListLongMap!1385)

(assert (=> bm!5865 (= call!5869 (contains!709 lt!30027 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun c!9753 () Bool)

(declare-fun b!68769 () Bool)

(assert (=> b!68769 (= c!9753 (and (not (= (bvand (ite c!9716 (ite c!9712 lt!29963 lt!29953) (extraKeys!2034 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!9716 (ite c!9712 lt!29963 lt!29953) (extraKeys!2034 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!45057 () ListLongMap!1385)

(assert (=> b!68769 (= e!45057 e!45061)))

(declare-fun call!5870 () ListLongMap!1385)

(declare-fun call!5872 () ListLongMap!1385)

(declare-fun c!9755 () Bool)

(declare-fun call!5873 () ListLongMap!1385)

(declare-fun bm!5866 () Bool)

(declare-fun c!9752 () Bool)

(assert (=> bm!5866 (= call!5872 (+!89 (ite c!9755 call!5873 (ite c!9752 call!5870 call!5868)) (ite (or c!9755 c!9752) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9716 c!9712) lt!29673 (zeroValue!2073 newMap!16))) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16))))))))

(declare-fun b!68770 () Bool)

(declare-fun e!45055 () Bool)

(assert (=> b!68770 (= e!45055 (validKeyInArray!0 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!68771 () Bool)

(declare-fun res!36950 () Bool)

(declare-fun e!45052 () Bool)

(assert (=> b!68771 (=> (not res!36950) (not e!45052))))

(declare-fun e!45062 () Bool)

(assert (=> b!68771 (= res!36950 e!45062)))

(declare-fun res!36946 () Bool)

(assert (=> b!68771 (=> res!36946 e!45062)))

(assert (=> b!68771 (= res!36946 (not e!45055))))

(declare-fun res!36947 () Bool)

(assert (=> b!68771 (=> (not res!36947) (not e!45055))))

(assert (=> b!68771 (= res!36947 (bvslt #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))))))

(declare-fun b!68772 () Bool)

(declare-fun e!45056 () ListLongMap!1385)

(assert (=> b!68772 (= e!45056 e!45057)))

(assert (=> b!68772 (= c!9752 (and (not (= (bvand (ite c!9716 (ite c!9712 lt!29963 lt!29953) (extraKeys!2034 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!9716 (ite c!9712 lt!29963 lt!29953) (extraKeys!2034 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!68773 () Bool)

(declare-fun e!45054 () Bool)

(assert (=> b!68773 (= e!45059 e!45054)))

(declare-fun res!36948 () Bool)

(assert (=> b!68773 (= res!36948 call!5874)))

(assert (=> b!68773 (=> (not res!36948) (not e!45054))))

(declare-fun bm!5867 () Bool)

(assert (=> bm!5867 (= call!5870 call!5873)))

(declare-fun b!68774 () Bool)

(declare-fun call!5871 () ListLongMap!1385)

(assert (=> b!68774 (= e!45057 call!5871)))

(declare-fun bm!5868 () Bool)

(assert (=> bm!5868 (= call!5871 call!5872)))

(declare-fun b!68775 () Bool)

(assert (=> b!68775 (= e!45061 call!5871)))

(declare-fun b!68776 () Bool)

(declare-fun res!36951 () Bool)

(assert (=> b!68776 (=> (not res!36951) (not e!45052))))

(assert (=> b!68776 (= res!36951 e!45059)))

(declare-fun c!9756 () Bool)

(assert (=> b!68776 (= c!9756 (not (= (bvand (ite c!9716 (ite c!9712 lt!29963 lt!29953) (extraKeys!2034 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!68777 () Bool)

(assert (=> b!68777 (= e!45054 (= (apply!73 lt!30027 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!9716 c!9712) lt!29673 (zeroValue!2073 newMap!16))))))

(declare-fun bm!5869 () Bool)

(assert (=> bm!5869 (= call!5873 (getCurrentListMapNoExtraKeys!53 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (ite c!9716 (ite c!9712 lt!29963 lt!29953) (extraKeys!2034 newMap!16)) (ite (and c!9716 c!9712) lt!29673 (zeroValue!2073 newMap!16)) (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun b!68778 () Bool)

(assert (=> b!68778 (= e!45053 (= (apply!73 lt!30027 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16))))))

(declare-fun b!68779 () Bool)

(declare-fun e!45051 () Bool)

(assert (=> b!68779 (= e!45051 (= (apply!73 lt!30027 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)) (get!1126 (select (arr!1829 (_values!2150 newMap!16)) #b00000000000000000000000000000000) (dynLambda!321 (defaultEntry!2167 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!68779 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2066 (_values!2150 newMap!16))))))

(assert (=> b!68779 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))))))

(declare-fun bm!5870 () Bool)

(assert (=> bm!5870 (= call!5868 call!5870)))

(declare-fun d!14719 () Bool)

(assert (=> d!14719 e!45052))

(declare-fun res!36953 () Bool)

(assert (=> d!14719 (=> (not res!36953) (not e!45052))))

(assert (=> d!14719 (= res!36953 (or (bvsge #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))))))))

(declare-fun lt!30029 () ListLongMap!1385)

(assert (=> d!14719 (= lt!30027 lt!30029)))

(declare-fun lt!30039 () Unit!1898)

(declare-fun e!45063 () Unit!1898)

(assert (=> d!14719 (= lt!30039 e!45063)))

(declare-fun c!9757 () Bool)

(declare-fun e!45060 () Bool)

(assert (=> d!14719 (= c!9757 e!45060)))

(declare-fun res!36945 () Bool)

(assert (=> d!14719 (=> (not res!36945) (not e!45060))))

(assert (=> d!14719 (= res!36945 (bvslt #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))))))

(assert (=> d!14719 (= lt!30029 e!45056)))

(assert (=> d!14719 (= c!9755 (and (not (= (bvand (ite c!9716 (ite c!9712 lt!29963 lt!29953) (extraKeys!2034 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!9716 (ite c!9712 lt!29963 lt!29953) (extraKeys!2034 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!14719 (validMask!0 (mask!6111 newMap!16))))

(assert (=> d!14719 (= (getCurrentListMap!403 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (ite c!9716 (ite c!9712 lt!29963 lt!29953) (extraKeys!2034 newMap!16)) (ite (and c!9716 c!9712) lt!29673 (zeroValue!2073 newMap!16)) (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) lt!30027)))

(declare-fun b!68767 () Bool)

(assert (=> b!68767 (= e!45060 (validKeyInArray!0 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!68780 () Bool)

(assert (=> b!68780 (= e!45052 e!45058)))

(declare-fun c!9754 () Bool)

(assert (=> b!68780 (= c!9754 (not (= (bvand (ite c!9716 (ite c!9712 lt!29963 lt!29953) (extraKeys!2034 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!68781 () Bool)

(assert (=> b!68781 (= e!45062 e!45051)))

(declare-fun res!36949 () Bool)

(assert (=> b!68781 (=> (not res!36949) (not e!45051))))

(assert (=> b!68781 (= res!36949 (contains!709 lt!30027 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!68781 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))))))

(declare-fun b!68782 () Bool)

(assert (=> b!68782 (= e!45056 (+!89 call!5872 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16)))))))

(declare-fun b!68783 () Bool)

(assert (=> b!68783 (= e!45058 (not call!5869))))

(declare-fun bm!5871 () Bool)

(assert (=> bm!5871 (= call!5874 (contains!709 lt!30027 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!68784 () Bool)

(declare-fun Unit!1912 () Unit!1898)

(assert (=> b!68784 (= e!45063 Unit!1912)))

(declare-fun b!68785 () Bool)

(declare-fun lt!30038 () Unit!1898)

(assert (=> b!68785 (= e!45063 lt!30038)))

(declare-fun lt!30021 () ListLongMap!1385)

(assert (=> b!68785 (= lt!30021 (getCurrentListMapNoExtraKeys!53 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (ite c!9716 (ite c!9712 lt!29963 lt!29953) (extraKeys!2034 newMap!16)) (ite (and c!9716 c!9712) lt!29673 (zeroValue!2073 newMap!16)) (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30025 () (_ BitVec 64))

(assert (=> b!68785 (= lt!30025 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30024 () (_ BitVec 64))

(assert (=> b!68785 (= lt!30024 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30041 () Unit!1898)

(assert (=> b!68785 (= lt!30041 (addStillContains!49 lt!30021 lt!30025 (ite (and c!9716 c!9712) lt!29673 (zeroValue!2073 newMap!16)) lt!30024))))

(assert (=> b!68785 (contains!709 (+!89 lt!30021 (tuple2!2091 lt!30025 (ite (and c!9716 c!9712) lt!29673 (zeroValue!2073 newMap!16)))) lt!30024)))

(declare-fun lt!30035 () Unit!1898)

(assert (=> b!68785 (= lt!30035 lt!30041)))

(declare-fun lt!30036 () ListLongMap!1385)

(assert (=> b!68785 (= lt!30036 (getCurrentListMapNoExtraKeys!53 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (ite c!9716 (ite c!9712 lt!29963 lt!29953) (extraKeys!2034 newMap!16)) (ite (and c!9716 c!9712) lt!29673 (zeroValue!2073 newMap!16)) (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30026 () (_ BitVec 64))

(assert (=> b!68785 (= lt!30026 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30023 () (_ BitVec 64))

(assert (=> b!68785 (= lt!30023 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30030 () Unit!1898)

(assert (=> b!68785 (= lt!30030 (addApplyDifferent!49 lt!30036 lt!30026 (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16)) lt!30023))))

(assert (=> b!68785 (= (apply!73 (+!89 lt!30036 (tuple2!2091 lt!30026 (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16)))) lt!30023) (apply!73 lt!30036 lt!30023))))

(declare-fun lt!30042 () Unit!1898)

(assert (=> b!68785 (= lt!30042 lt!30030)))

(declare-fun lt!30022 () ListLongMap!1385)

(assert (=> b!68785 (= lt!30022 (getCurrentListMapNoExtraKeys!53 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (ite c!9716 (ite c!9712 lt!29963 lt!29953) (extraKeys!2034 newMap!16)) (ite (and c!9716 c!9712) lt!29673 (zeroValue!2073 newMap!16)) (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30034 () (_ BitVec 64))

(assert (=> b!68785 (= lt!30034 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30031 () (_ BitVec 64))

(assert (=> b!68785 (= lt!30031 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30033 () Unit!1898)

(assert (=> b!68785 (= lt!30033 (addApplyDifferent!49 lt!30022 lt!30034 (ite (and c!9716 c!9712) lt!29673 (zeroValue!2073 newMap!16)) lt!30031))))

(assert (=> b!68785 (= (apply!73 (+!89 lt!30022 (tuple2!2091 lt!30034 (ite (and c!9716 c!9712) lt!29673 (zeroValue!2073 newMap!16)))) lt!30031) (apply!73 lt!30022 lt!30031))))

(declare-fun lt!30028 () Unit!1898)

(assert (=> b!68785 (= lt!30028 lt!30033)))

(declare-fun lt!30040 () ListLongMap!1385)

(assert (=> b!68785 (= lt!30040 (getCurrentListMapNoExtraKeys!53 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (ite c!9716 (ite c!9712 lt!29963 lt!29953) (extraKeys!2034 newMap!16)) (ite (and c!9716 c!9712) lt!29673 (zeroValue!2073 newMap!16)) (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30037 () (_ BitVec 64))

(assert (=> b!68785 (= lt!30037 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30032 () (_ BitVec 64))

(assert (=> b!68785 (= lt!30032 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!68785 (= lt!30038 (addApplyDifferent!49 lt!30040 lt!30037 (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16)) lt!30032))))

(assert (=> b!68785 (= (apply!73 (+!89 lt!30040 (tuple2!2091 lt!30037 (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16)))) lt!30032) (apply!73 lt!30040 lt!30032))))

(assert (= (and d!14719 c!9755) b!68782))

(assert (= (and d!14719 (not c!9755)) b!68772))

(assert (= (and b!68772 c!9752) b!68774))

(assert (= (and b!68772 (not c!9752)) b!68769))

(assert (= (and b!68769 c!9753) b!68775))

(assert (= (and b!68769 (not c!9753)) b!68765))

(assert (= (or b!68775 b!68765) bm!5870))

(assert (= (or b!68774 bm!5870) bm!5867))

(assert (= (or b!68774 b!68775) bm!5868))

(assert (= (or b!68782 bm!5867) bm!5869))

(assert (= (or b!68782 bm!5868) bm!5866))

(assert (= (and d!14719 res!36945) b!68767))

(assert (= (and d!14719 c!9757) b!68785))

(assert (= (and d!14719 (not c!9757)) b!68784))

(assert (= (and d!14719 res!36953) b!68771))

(assert (= (and b!68771 res!36947) b!68770))

(assert (= (and b!68771 (not res!36946)) b!68781))

(assert (= (and b!68781 res!36949) b!68779))

(assert (= (and b!68771 res!36950) b!68776))

(assert (= (and b!68776 c!9756) b!68773))

(assert (= (and b!68776 (not c!9756)) b!68768))

(assert (= (and b!68773 res!36948) b!68777))

(assert (= (or b!68773 b!68768) bm!5871))

(assert (= (and b!68776 res!36951) b!68780))

(assert (= (and b!68780 c!9754) b!68766))

(assert (= (and b!68780 (not c!9754)) b!68783))

(assert (= (and b!68766 res!36952) b!68778))

(assert (= (or b!68766 b!68783) bm!5865))

(declare-fun b_lambda!3071 () Bool)

(assert (=> (not b_lambda!3071) (not b!68779)))

(assert (=> b!68779 t!4978))

(declare-fun b_and!4225 () Bool)

(assert (= b_and!4221 (and (=> t!4978 result!2615) b_and!4225)))

(assert (=> b!68779 t!4980))

(declare-fun b_and!4227 () Bool)

(assert (= b_and!4223 (and (=> t!4980 result!2617) b_and!4227)))

(declare-fun m!64287 () Bool)

(assert (=> b!68782 m!64287))

(declare-fun m!64289 () Bool)

(assert (=> bm!5866 m!64289))

(declare-fun m!64291 () Bool)

(assert (=> bm!5869 m!64291))

(assert (=> b!68779 m!64177))

(declare-fun m!64293 () Bool)

(assert (=> b!68779 m!64293))

(assert (=> b!68779 m!64177))

(declare-fun m!64295 () Bool)

(assert (=> b!68779 m!64295))

(assert (=> b!68779 m!64243))

(assert (=> b!68779 m!64293))

(assert (=> b!68779 m!64243))

(declare-fun m!64297 () Bool)

(assert (=> b!68779 m!64297))

(assert (=> b!68767 m!64177))

(assert (=> b!68767 m!64177))

(assert (=> b!68767 m!64187))

(assert (=> b!68770 m!64177))

(assert (=> b!68770 m!64177))

(assert (=> b!68770 m!64187))

(declare-fun m!64299 () Bool)

(assert (=> bm!5865 m!64299))

(declare-fun m!64301 () Bool)

(assert (=> b!68778 m!64301))

(declare-fun m!64303 () Bool)

(assert (=> bm!5871 m!64303))

(declare-fun m!64305 () Bool)

(assert (=> b!68785 m!64305))

(declare-fun m!64307 () Bool)

(assert (=> b!68785 m!64307))

(declare-fun m!64309 () Bool)

(assert (=> b!68785 m!64309))

(assert (=> b!68785 m!64307))

(assert (=> b!68785 m!64305))

(declare-fun m!64311 () Bool)

(assert (=> b!68785 m!64311))

(declare-fun m!64313 () Bool)

(assert (=> b!68785 m!64313))

(declare-fun m!64315 () Bool)

(assert (=> b!68785 m!64315))

(declare-fun m!64317 () Bool)

(assert (=> b!68785 m!64317))

(declare-fun m!64319 () Bool)

(assert (=> b!68785 m!64319))

(declare-fun m!64321 () Bool)

(assert (=> b!68785 m!64321))

(declare-fun m!64323 () Bool)

(assert (=> b!68785 m!64323))

(assert (=> b!68785 m!64291))

(declare-fun m!64325 () Bool)

(assert (=> b!68785 m!64325))

(declare-fun m!64327 () Bool)

(assert (=> b!68785 m!64327))

(assert (=> b!68785 m!64177))

(declare-fun m!64329 () Bool)

(assert (=> b!68785 m!64329))

(declare-fun m!64331 () Bool)

(assert (=> b!68785 m!64331))

(assert (=> b!68785 m!64317))

(assert (=> b!68785 m!64329))

(declare-fun m!64333 () Bool)

(assert (=> b!68785 m!64333))

(assert (=> b!68781 m!64177))

(assert (=> b!68781 m!64177))

(declare-fun m!64335 () Bool)

(assert (=> b!68781 m!64335))

(declare-fun m!64337 () Bool)

(assert (=> b!68777 m!64337))

(assert (=> d!14719 m!64193))

(assert (=> bm!5830 d!14719))

(declare-fun d!14721 () Bool)

(assert (=> d!14721 (= (+!89 (getCurrentListMap!403 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673)) (getCurrentListMap!403 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) lt!29953 (zeroValue!2073 newMap!16) lt!29673 #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30045 () Unit!1898)

(declare-fun choose!391 (array!3831 array!3833 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2921 V!2921 V!2921 Int) Unit!1898)

(assert (=> d!14721 (= lt!30045 (choose!391 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) lt!29953 (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) lt!29673 (defaultEntry!2167 newMap!16)))))

(assert (=> d!14721 (validMask!0 (mask!6111 newMap!16))))

(assert (=> d!14721 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!22 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) lt!29953 (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) lt!29673 (defaultEntry!2167 newMap!16)) lt!30045)))

(declare-fun bs!2939 () Bool)

(assert (= bs!2939 d!14721))

(assert (=> bs!2939 m!63945))

(declare-fun m!64339 () Bool)

(assert (=> bs!2939 m!64339))

(declare-fun m!64341 () Bool)

(assert (=> bs!2939 m!64341))

(declare-fun m!64343 () Bool)

(assert (=> bs!2939 m!64343))

(assert (=> bs!2939 m!64193))

(assert (=> bs!2939 m!63945))

(assert (=> b!68635 d!14721))

(assert (=> d!14675 d!14679))

(declare-fun d!14723 () Bool)

(assert (=> d!14723 (not (arrayContainsKey!0 (_keys!3810 (v!2485 (underlying!247 thiss!992))) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> d!14723 true))

(declare-fun _$68!49 () Unit!1898)

(assert (=> d!14723 (= (choose!68 (_keys!3810 (v!2485 (underlying!247 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (Cons!1467 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) Nil!1468)) _$68!49)))

(declare-fun bs!2940 () Bool)

(assert (= bs!2940 d!14723))

(assert (=> bs!2940 m!63767))

(assert (=> bs!2940 m!63815))

(assert (=> d!14675 d!14723))

(declare-fun d!14725 () Bool)

(declare-fun e!45065 () Bool)

(assert (=> d!14725 e!45065))

(declare-fun res!36954 () Bool)

(assert (=> d!14725 (=> res!36954 e!45065)))

(declare-fun lt!30049 () Bool)

(assert (=> d!14725 (= res!36954 (not lt!30049))))

(declare-fun lt!30048 () Bool)

(assert (=> d!14725 (= lt!30049 lt!30048)))

(declare-fun lt!30047 () Unit!1898)

(declare-fun e!45064 () Unit!1898)

(assert (=> d!14725 (= lt!30047 e!45064)))

(declare-fun c!9758 () Bool)

(assert (=> d!14725 (= c!9758 lt!30048)))

(assert (=> d!14725 (= lt!30048 (containsKey!133 (toList!708 lt!29805) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!14725 (= (contains!709 lt!29805 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!30049)))

(declare-fun b!68786 () Bool)

(declare-fun lt!30046 () Unit!1898)

(assert (=> b!68786 (= e!45064 lt!30046)))

(assert (=> b!68786 (= lt!30046 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 lt!29805) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!68786 (isDefined!83 (getValueByKey!129 (toList!708 lt!29805) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!68787 () Bool)

(declare-fun Unit!1913 () Unit!1898)

(assert (=> b!68787 (= e!45064 Unit!1913)))

(declare-fun b!68788 () Bool)

(assert (=> b!68788 (= e!45065 (isDefined!83 (getValueByKey!129 (toList!708 lt!29805) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!14725 c!9758) b!68786))

(assert (= (and d!14725 (not c!9758)) b!68787))

(assert (= (and d!14725 (not res!36954)) b!68788))

(assert (=> d!14725 m!63951))

(declare-fun m!64345 () Bool)

(assert (=> d!14725 m!64345))

(assert (=> b!68786 m!63951))

(declare-fun m!64347 () Bool)

(assert (=> b!68786 m!64347))

(assert (=> b!68786 m!63951))

(declare-fun m!64349 () Bool)

(assert (=> b!68786 m!64349))

(assert (=> b!68786 m!64349))

(declare-fun m!64351 () Bool)

(assert (=> b!68786 m!64351))

(assert (=> b!68788 m!63951))

(assert (=> b!68788 m!64349))

(assert (=> b!68788 m!64349))

(assert (=> b!68788 m!64351))

(assert (=> b!68424 d!14725))

(assert (=> d!14657 d!14669))

(declare-fun d!14727 () Bool)

(declare-fun lt!30050 () Bool)

(assert (=> d!14727 (= lt!30050 (select (content!73 (toList!708 lt!29853)) lt!29680))))

(declare-fun e!45067 () Bool)

(assert (=> d!14727 (= lt!30050 e!45067)))

(declare-fun res!36956 () Bool)

(assert (=> d!14727 (=> (not res!36956) (not e!45067))))

(assert (=> d!14727 (= res!36956 ((_ is Cons!1466) (toList!708 lt!29853)))))

(assert (=> d!14727 (= (contains!711 (toList!708 lt!29853) lt!29680) lt!30050)))

(declare-fun b!68789 () Bool)

(declare-fun e!45066 () Bool)

(assert (=> b!68789 (= e!45067 e!45066)))

(declare-fun res!36955 () Bool)

(assert (=> b!68789 (=> res!36955 e!45066)))

(assert (=> b!68789 (= res!36955 (= (h!2051 (toList!708 lt!29853)) lt!29680))))

(declare-fun b!68790 () Bool)

(assert (=> b!68790 (= e!45066 (contains!711 (t!4964 (toList!708 lt!29853)) lt!29680))))

(assert (= (and d!14727 res!36956) b!68789))

(assert (= (and b!68789 (not res!36955)) b!68790))

(declare-fun m!64353 () Bool)

(assert (=> d!14727 m!64353))

(declare-fun m!64355 () Bool)

(assert (=> d!14727 m!64355))

(declare-fun m!64357 () Bool)

(assert (=> b!68790 m!64357))

(assert (=> b!68476 d!14727))

(declare-fun d!14729 () Bool)

(assert (=> d!14729 (= (apply!73 lt!29805 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1129 (getValueByKey!129 (toList!708 lt!29805) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2941 () Bool)

(assert (= bs!2941 d!14729))

(declare-fun m!64359 () Bool)

(assert (=> bs!2941 m!64359))

(assert (=> bs!2941 m!64359))

(declare-fun m!64361 () Bool)

(assert (=> bs!2941 m!64361))

(assert (=> b!68421 d!14729))

(declare-fun d!14731 () Bool)

(declare-fun e!45068 () Bool)

(assert (=> d!14731 e!45068))

(declare-fun res!36957 () Bool)

(assert (=> d!14731 (=> (not res!36957) (not e!45068))))

(declare-fun lt!30054 () ListLongMap!1385)

(assert (=> d!14731 (= res!36957 (contains!709 lt!30054 (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(declare-fun lt!30052 () List!1470)

(assert (=> d!14731 (= lt!30054 (ListLongMap!1386 lt!30052))))

(declare-fun lt!30051 () Unit!1898)

(declare-fun lt!30053 () Unit!1898)

(assert (=> d!14731 (= lt!30051 lt!30053)))

(assert (=> d!14731 (= (getValueByKey!129 lt!30052 (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))) (Some!134 (_2!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(assert (=> d!14731 (= lt!30053 (lemmaContainsTupThenGetReturnValue!49 lt!30052 (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))) (_2!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(assert (=> d!14731 (= lt!30052 (insertStrictlySorted!52 (toList!708 (+!89 lt!29682 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))) (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))) (_2!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(assert (=> d!14731 (= (+!89 (+!89 lt!29682 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))) lt!30054)))

(declare-fun b!68791 () Bool)

(declare-fun res!36958 () Bool)

(assert (=> b!68791 (=> (not res!36958) (not e!45068))))

(assert (=> b!68791 (= res!36958 (= (getValueByKey!129 (toList!708 lt!30054) (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))) (Some!134 (_2!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(declare-fun b!68792 () Bool)

(assert (=> b!68792 (= e!45068 (contains!711 (toList!708 lt!30054) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))))

(assert (= (and d!14731 res!36957) b!68791))

(assert (= (and b!68791 res!36958) b!68792))

(declare-fun m!64363 () Bool)

(assert (=> d!14731 m!64363))

(declare-fun m!64365 () Bool)

(assert (=> d!14731 m!64365))

(declare-fun m!64367 () Bool)

(assert (=> d!14731 m!64367))

(declare-fun m!64369 () Bool)

(assert (=> d!14731 m!64369))

(declare-fun m!64371 () Bool)

(assert (=> b!68791 m!64371))

(declare-fun m!64373 () Bool)

(assert (=> b!68792 m!64373))

(assert (=> d!14671 d!14731))

(declare-fun d!14733 () Bool)

(declare-fun e!45069 () Bool)

(assert (=> d!14733 e!45069))

(declare-fun res!36959 () Bool)

(assert (=> d!14733 (=> (not res!36959) (not e!45069))))

(declare-fun lt!30058 () ListLongMap!1385)

(assert (=> d!14733 (= res!36959 (contains!709 lt!30058 (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))

(declare-fun lt!30056 () List!1470)

(assert (=> d!14733 (= lt!30058 (ListLongMap!1386 lt!30056))))

(declare-fun lt!30055 () Unit!1898)

(declare-fun lt!30057 () Unit!1898)

(assert (=> d!14733 (= lt!30055 lt!30057)))

(assert (=> d!14733 (= (getValueByKey!129 lt!30056 (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))) (Some!134 (_2!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))

(assert (=> d!14733 (= lt!30057 (lemmaContainsTupThenGetReturnValue!49 lt!30056 (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)) (_2!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))

(assert (=> d!14733 (= lt!30056 (insertStrictlySorted!52 (toList!708 lt!29682) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)) (_2!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))

(assert (=> d!14733 (= (+!89 lt!29682 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)) lt!30058)))

(declare-fun b!68793 () Bool)

(declare-fun res!36960 () Bool)

(assert (=> b!68793 (=> (not res!36960) (not e!45069))))

(assert (=> b!68793 (= res!36960 (= (getValueByKey!129 (toList!708 lt!30058) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))) (Some!134 (_2!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))))))

(declare-fun b!68794 () Bool)

(assert (=> b!68794 (= e!45069 (contains!711 (toList!708 lt!30058) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))))

(assert (= (and d!14733 res!36959) b!68793))

(assert (= (and b!68793 res!36960) b!68794))

(declare-fun m!64375 () Bool)

(assert (=> d!14733 m!64375))

(declare-fun m!64377 () Bool)

(assert (=> d!14733 m!64377))

(declare-fun m!64379 () Bool)

(assert (=> d!14733 m!64379))

(declare-fun m!64381 () Bool)

(assert (=> d!14733 m!64381))

(declare-fun m!64383 () Bool)

(assert (=> b!68793 m!64383))

(declare-fun m!64385 () Bool)

(assert (=> b!68794 m!64385))

(assert (=> d!14671 d!14733))

(declare-fun d!14735 () Bool)

(declare-fun e!45070 () Bool)

(assert (=> d!14735 e!45070))

(declare-fun res!36961 () Bool)

(assert (=> d!14735 (=> (not res!36961) (not e!45070))))

(declare-fun lt!30062 () ListLongMap!1385)

(assert (=> d!14735 (= res!36961 (contains!709 lt!30062 (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))

(declare-fun lt!30060 () List!1470)

(assert (=> d!14735 (= lt!30062 (ListLongMap!1386 lt!30060))))

(declare-fun lt!30059 () Unit!1898)

(declare-fun lt!30061 () Unit!1898)

(assert (=> d!14735 (= lt!30059 lt!30061)))

(assert (=> d!14735 (= (getValueByKey!129 lt!30060 (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))) (Some!134 (_2!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))

(assert (=> d!14735 (= lt!30061 (lemmaContainsTupThenGetReturnValue!49 lt!30060 (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)) (_2!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))

(assert (=> d!14735 (= lt!30060 (insertStrictlySorted!52 (toList!708 (+!89 lt!29682 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)) (_2!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))

(assert (=> d!14735 (= (+!89 (+!89 lt!29682 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)) lt!30062)))

(declare-fun b!68795 () Bool)

(declare-fun res!36962 () Bool)

(assert (=> b!68795 (=> (not res!36962) (not e!45070))))

(assert (=> b!68795 (= res!36962 (= (getValueByKey!129 (toList!708 lt!30062) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))) (Some!134 (_2!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))))))

(declare-fun b!68796 () Bool)

(assert (=> b!68796 (= e!45070 (contains!711 (toList!708 lt!30062) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))))

(assert (= (and d!14735 res!36961) b!68795))

(assert (= (and b!68795 res!36962) b!68796))

(declare-fun m!64387 () Bool)

(assert (=> d!14735 m!64387))

(declare-fun m!64389 () Bool)

(assert (=> d!14735 m!64389))

(declare-fun m!64391 () Bool)

(assert (=> d!14735 m!64391))

(declare-fun m!64393 () Bool)

(assert (=> d!14735 m!64393))

(declare-fun m!64395 () Bool)

(assert (=> b!68795 m!64395))

(declare-fun m!64397 () Bool)

(assert (=> b!68796 m!64397))

(assert (=> d!14671 d!14735))

(declare-fun d!14737 () Bool)

(declare-fun e!45071 () Bool)

(assert (=> d!14737 e!45071))

(declare-fun res!36963 () Bool)

(assert (=> d!14737 (=> (not res!36963) (not e!45071))))

(declare-fun lt!30066 () ListLongMap!1385)

(assert (=> d!14737 (= res!36963 (contains!709 lt!30066 (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(declare-fun lt!30064 () List!1470)

(assert (=> d!14737 (= lt!30066 (ListLongMap!1386 lt!30064))))

(declare-fun lt!30063 () Unit!1898)

(declare-fun lt!30065 () Unit!1898)

(assert (=> d!14737 (= lt!30063 lt!30065)))

(assert (=> d!14737 (= (getValueByKey!129 lt!30064 (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))) (Some!134 (_2!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(assert (=> d!14737 (= lt!30065 (lemmaContainsTupThenGetReturnValue!49 lt!30064 (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))) (_2!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(assert (=> d!14737 (= lt!30064 (insertStrictlySorted!52 (toList!708 lt!29682) (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))) (_2!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(assert (=> d!14737 (= (+!89 lt!29682 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))) lt!30066)))

(declare-fun b!68797 () Bool)

(declare-fun res!36964 () Bool)

(assert (=> b!68797 (=> (not res!36964) (not e!45071))))

(assert (=> b!68797 (= res!36964 (= (getValueByKey!129 (toList!708 lt!30066) (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))) (Some!134 (_2!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(declare-fun b!68798 () Bool)

(assert (=> b!68798 (= e!45071 (contains!711 (toList!708 lt!30066) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))))

(assert (= (and d!14737 res!36963) b!68797))

(assert (= (and b!68797 res!36964) b!68798))

(declare-fun m!64399 () Bool)

(assert (=> d!14737 m!64399))

(declare-fun m!64401 () Bool)

(assert (=> d!14737 m!64401))

(declare-fun m!64403 () Bool)

(assert (=> d!14737 m!64403))

(declare-fun m!64405 () Bool)

(assert (=> d!14737 m!64405))

(declare-fun m!64407 () Bool)

(assert (=> b!68797 m!64407))

(declare-fun m!64409 () Bool)

(assert (=> b!68798 m!64409))

(assert (=> d!14671 d!14737))

(declare-fun d!14739 () Bool)

(assert (=> d!14739 (= (+!89 (+!89 lt!29682 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))) (+!89 (+!89 lt!29682 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))))

(assert (=> d!14739 true))

(declare-fun _$28!115 () Unit!1898)

(assert (=> d!14739 (= (choose!387 lt!29682 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))) _$28!115)))

(declare-fun bs!2942 () Bool)

(assert (= bs!2942 d!14739))

(assert (=> bs!2942 m!64061))

(assert (=> bs!2942 m!64061))

(assert (=> bs!2942 m!64063))

(assert (=> bs!2942 m!64067))

(assert (=> bs!2942 m!64067))

(assert (=> bs!2942 m!64069))

(assert (=> d!14671 d!14739))

(declare-fun d!14741 () Bool)

(assert (=> d!14741 (= (get!1127 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) from!355) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2484 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) from!355)))))

(assert (=> b!68433 d!14741))

(declare-fun d!14743 () Bool)

(declare-fun res!36965 () Bool)

(declare-fun e!45072 () Bool)

(assert (=> d!14743 (=> (not res!36965) (not e!45072))))

(assert (=> d!14743 (= res!36965 (simpleValid!49 (_2!1057 lt!29959)))))

(assert (=> d!14743 (= (valid!289 (_2!1057 lt!29959)) e!45072)))

(declare-fun b!68799 () Bool)

(declare-fun res!36966 () Bool)

(assert (=> b!68799 (=> (not res!36966) (not e!45072))))

(assert (=> b!68799 (= res!36966 (= (arrayCountValidKeys!0 (_keys!3810 (_2!1057 lt!29959)) #b00000000000000000000000000000000 (size!2065 (_keys!3810 (_2!1057 lt!29959)))) (_size!387 (_2!1057 lt!29959))))))

(declare-fun b!68800 () Bool)

(declare-fun res!36967 () Bool)

(assert (=> b!68800 (=> (not res!36967) (not e!45072))))

(assert (=> b!68800 (= res!36967 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3810 (_2!1057 lt!29959)) (mask!6111 (_2!1057 lt!29959))))))

(declare-fun b!68801 () Bool)

(assert (=> b!68801 (= e!45072 (arrayNoDuplicates!0 (_keys!3810 (_2!1057 lt!29959)) #b00000000000000000000000000000000 Nil!1468))))

(assert (= (and d!14743 res!36965) b!68799))

(assert (= (and b!68799 res!36966) b!68800))

(assert (= (and b!68800 res!36967) b!68801))

(declare-fun m!64411 () Bool)

(assert (=> d!14743 m!64411))

(declare-fun m!64413 () Bool)

(assert (=> b!68799 m!64413))

(declare-fun m!64415 () Bool)

(assert (=> b!68800 m!64415))

(declare-fun m!64417 () Bool)

(assert (=> b!68801 m!64417))

(assert (=> d!14687 d!14743))

(assert (=> d!14687 d!14651))

(declare-fun b!68814 () Bool)

(declare-fun e!45081 () SeekEntryResult!237)

(declare-fun e!45079 () SeekEntryResult!237)

(assert (=> b!68814 (= e!45081 e!45079)))

(declare-fun lt!30075 () (_ BitVec 64))

(declare-fun lt!30074 () SeekEntryResult!237)

(assert (=> b!68814 (= lt!30075 (select (arr!1828 (_keys!3810 newMap!16)) (index!3079 lt!30074)))))

(declare-fun c!9767 () Bool)

(assert (=> b!68814 (= c!9767 (= lt!30075 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))

(declare-fun b!68815 () Bool)

(assert (=> b!68815 (= e!45079 (Found!237 (index!3079 lt!30074)))))

(declare-fun b!68816 () Bool)

(declare-fun c!9765 () Bool)

(assert (=> b!68816 (= c!9765 (= lt!30075 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!45080 () SeekEntryResult!237)

(assert (=> b!68816 (= e!45079 e!45080)))

(declare-fun b!68817 () Bool)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!3831 (_ BitVec 32)) SeekEntryResult!237)

(assert (=> b!68817 (= e!45080 (seekKeyOrZeroReturnVacant!0 (x!10850 lt!30074) (index!3079 lt!30074) (index!3079 lt!30074) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (_keys!3810 newMap!16) (mask!6111 newMap!16)))))

(declare-fun b!68818 () Bool)

(assert (=> b!68818 (= e!45080 (MissingZero!237 (index!3079 lt!30074)))))

(declare-fun b!68819 () Bool)

(assert (=> b!68819 (= e!45081 Undefined!237)))

(declare-fun lt!30073 () SeekEntryResult!237)

(declare-fun d!14745 () Bool)

(assert (=> d!14745 (and (or ((_ is Undefined!237) lt!30073) (not ((_ is Found!237) lt!30073)) (and (bvsge (index!3078 lt!30073) #b00000000000000000000000000000000) (bvslt (index!3078 lt!30073) (size!2065 (_keys!3810 newMap!16))))) (or ((_ is Undefined!237) lt!30073) ((_ is Found!237) lt!30073) (not ((_ is MissingZero!237) lt!30073)) (and (bvsge (index!3077 lt!30073) #b00000000000000000000000000000000) (bvslt (index!3077 lt!30073) (size!2065 (_keys!3810 newMap!16))))) (or ((_ is Undefined!237) lt!30073) ((_ is Found!237) lt!30073) ((_ is MissingZero!237) lt!30073) (not ((_ is MissingVacant!237) lt!30073)) (and (bvsge (index!3080 lt!30073) #b00000000000000000000000000000000) (bvslt (index!3080 lt!30073) (size!2065 (_keys!3810 newMap!16))))) (or ((_ is Undefined!237) lt!30073) (ite ((_ is Found!237) lt!30073) (= (select (arr!1828 (_keys!3810 newMap!16)) (index!3078 lt!30073)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) (ite ((_ is MissingZero!237) lt!30073) (= (select (arr!1828 (_keys!3810 newMap!16)) (index!3077 lt!30073)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!237) lt!30073) (= (select (arr!1828 (_keys!3810 newMap!16)) (index!3080 lt!30073)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!14745 (= lt!30073 e!45081)))

(declare-fun c!9766 () Bool)

(assert (=> d!14745 (= c!9766 (and ((_ is Intermediate!237) lt!30074) (undefined!1049 lt!30074)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!3831 (_ BitVec 32)) SeekEntryResult!237)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!14745 (= lt!30074 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (mask!6111 newMap!16)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (_keys!3810 newMap!16) (mask!6111 newMap!16)))))

(assert (=> d!14745 (validMask!0 (mask!6111 newMap!16))))

(assert (=> d!14745 (= (seekEntryOrOpen!0 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (_keys!3810 newMap!16) (mask!6111 newMap!16)) lt!30073)))

(assert (= (and d!14745 c!9766) b!68819))

(assert (= (and d!14745 (not c!9766)) b!68814))

(assert (= (and b!68814 c!9767) b!68815))

(assert (= (and b!68814 (not c!9767)) b!68816))

(assert (= (and b!68816 c!9765) b!68818))

(assert (= (and b!68816 (not c!9765)) b!68817))

(declare-fun m!64419 () Bool)

(assert (=> b!68814 m!64419))

(assert (=> b!68817 m!63767))

(declare-fun m!64421 () Bool)

(assert (=> b!68817 m!64421))

(declare-fun m!64423 () Bool)

(assert (=> d!14745 m!64423))

(assert (=> d!14745 m!63767))

(declare-fun m!64425 () Bool)

(assert (=> d!14745 m!64425))

(declare-fun m!64427 () Bool)

(assert (=> d!14745 m!64427))

(assert (=> d!14745 m!63767))

(assert (=> d!14745 m!64423))

(assert (=> d!14745 m!64193))

(declare-fun m!64429 () Bool)

(assert (=> d!14745 m!64429))

(declare-fun m!64431 () Bool)

(assert (=> d!14745 m!64431))

(assert (=> b!68611 d!14745))

(declare-fun d!14747 () Bool)

(declare-fun lt!30076 () Bool)

(assert (=> d!14747 (= lt!30076 (select (content!73 (toList!708 lt!29857)) lt!29675))))

(declare-fun e!45083 () Bool)

(assert (=> d!14747 (= lt!30076 e!45083)))

(declare-fun res!36969 () Bool)

(assert (=> d!14747 (=> (not res!36969) (not e!45083))))

(assert (=> d!14747 (= res!36969 ((_ is Cons!1466) (toList!708 lt!29857)))))

(assert (=> d!14747 (= (contains!711 (toList!708 lt!29857) lt!29675) lt!30076)))

(declare-fun b!68820 () Bool)

(declare-fun e!45082 () Bool)

(assert (=> b!68820 (= e!45083 e!45082)))

(declare-fun res!36968 () Bool)

(assert (=> b!68820 (=> res!36968 e!45082)))

(assert (=> b!68820 (= res!36968 (= (h!2051 (toList!708 lt!29857)) lt!29675))))

(declare-fun b!68821 () Bool)

(assert (=> b!68821 (= e!45082 (contains!711 (t!4964 (toList!708 lt!29857)) lt!29675))))

(assert (= (and d!14747 res!36969) b!68820))

(assert (= (and b!68820 (not res!36968)) b!68821))

(declare-fun m!64433 () Bool)

(assert (=> d!14747 m!64433))

(declare-fun m!64435 () Bool)

(assert (=> d!14747 m!64435))

(declare-fun m!64437 () Bool)

(assert (=> b!68821 m!64437))

(assert (=> b!68478 d!14747))

(declare-fun d!14749 () Bool)

(declare-fun e!45084 () Bool)

(assert (=> d!14749 e!45084))

(declare-fun res!36970 () Bool)

(assert (=> d!14749 (=> (not res!36970) (not e!45084))))

(declare-fun lt!30080 () ListLongMap!1385)

(assert (=> d!14749 (= res!36970 (contains!709 lt!30080 (_1!1056 (ite c!9716 (ite c!9712 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))))))

(declare-fun lt!30078 () List!1470)

(assert (=> d!14749 (= lt!30080 (ListLongMap!1386 lt!30078))))

(declare-fun lt!30077 () Unit!1898)

(declare-fun lt!30079 () Unit!1898)

(assert (=> d!14749 (= lt!30077 lt!30079)))

(assert (=> d!14749 (= (getValueByKey!129 lt!30078 (_1!1056 (ite c!9716 (ite c!9712 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))) (Some!134 (_2!1056 (ite c!9716 (ite c!9712 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))))))

(assert (=> d!14749 (= lt!30079 (lemmaContainsTupThenGetReturnValue!49 lt!30078 (_1!1056 (ite c!9716 (ite c!9712 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))) (_2!1056 (ite c!9716 (ite c!9712 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))))))

(assert (=> d!14749 (= lt!30078 (insertStrictlySorted!52 (toList!708 (ite c!9716 call!5820 call!5830)) (_1!1056 (ite c!9716 (ite c!9712 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))) (_2!1056 (ite c!9716 (ite c!9712 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))))))

(assert (=> d!14749 (= (+!89 (ite c!9716 call!5820 call!5830) (ite c!9716 (ite c!9712 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))) lt!30080)))

(declare-fun b!68822 () Bool)

(declare-fun res!36971 () Bool)

(assert (=> b!68822 (=> (not res!36971) (not e!45084))))

(assert (=> b!68822 (= res!36971 (= (getValueByKey!129 (toList!708 lt!30080) (_1!1056 (ite c!9716 (ite c!9712 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))) (Some!134 (_2!1056 (ite c!9716 (ite c!9712 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))))

(declare-fun b!68823 () Bool)

(assert (=> b!68823 (= e!45084 (contains!711 (toList!708 lt!30080) (ite c!9716 (ite c!9712 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))

(assert (= (and d!14749 res!36970) b!68822))

(assert (= (and b!68822 res!36971) b!68823))

(declare-fun m!64439 () Bool)

(assert (=> d!14749 m!64439))

(declare-fun m!64441 () Bool)

(assert (=> d!14749 m!64441))

(declare-fun m!64443 () Bool)

(assert (=> d!14749 m!64443))

(declare-fun m!64445 () Bool)

(assert (=> d!14749 m!64445))

(declare-fun m!64447 () Bool)

(assert (=> b!68822 m!64447))

(declare-fun m!64449 () Bool)

(assert (=> b!68823 m!64449))

(assert (=> bm!5823 d!14749))

(declare-fun d!14751 () Bool)

(assert (=> d!14751 (= (validKeyInArray!0 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) (and (not (= (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!68507 d!14751))

(declare-fun d!14753 () Bool)

(declare-fun e!45086 () Bool)

(assert (=> d!14753 e!45086))

(declare-fun res!36972 () Bool)

(assert (=> d!14753 (=> res!36972 e!45086)))

(declare-fun lt!30084 () Bool)

(assert (=> d!14753 (= res!36972 (not lt!30084))))

(declare-fun lt!30083 () Bool)

(assert (=> d!14753 (= lt!30084 lt!30083)))

(declare-fun lt!30082 () Unit!1898)

(declare-fun e!45085 () Unit!1898)

(assert (=> d!14753 (= lt!30082 e!45085)))

(declare-fun c!9768 () Bool)

(assert (=> d!14753 (= c!9768 lt!30083)))

(assert (=> d!14753 (= lt!30083 (containsKey!133 (toList!708 lt!29835) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!14753 (= (contains!709 lt!29835 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!30084)))

(declare-fun b!68824 () Bool)

(declare-fun lt!30081 () Unit!1898)

(assert (=> b!68824 (= e!45085 lt!30081)))

(assert (=> b!68824 (= lt!30081 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 lt!29835) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!68824 (isDefined!83 (getValueByKey!129 (toList!708 lt!29835) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!68825 () Bool)

(declare-fun Unit!1914 () Unit!1898)

(assert (=> b!68825 (= e!45085 Unit!1914)))

(declare-fun b!68826 () Bool)

(assert (=> b!68826 (= e!45086 (isDefined!83 (getValueByKey!129 (toList!708 lt!29835) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!14753 c!9768) b!68824))

(assert (= (and d!14753 (not c!9768)) b!68825))

(assert (= (and d!14753 (not res!36972)) b!68826))

(assert (=> d!14753 m!63951))

(declare-fun m!64451 () Bool)

(assert (=> d!14753 m!64451))

(assert (=> b!68824 m!63951))

(declare-fun m!64453 () Bool)

(assert (=> b!68824 m!64453))

(assert (=> b!68824 m!63951))

(assert (=> b!68824 m!64169))

(assert (=> b!68824 m!64169))

(declare-fun m!64455 () Bool)

(assert (=> b!68824 m!64455))

(assert (=> b!68826 m!63951))

(assert (=> b!68826 m!64169))

(assert (=> b!68826 m!64169))

(assert (=> b!68826 m!64455))

(assert (=> b!68460 d!14753))

(declare-fun d!14755 () Bool)

(declare-fun lt!30087 () Bool)

(declare-fun content!74 (List!1471) (InoxSet (_ BitVec 64)))

(assert (=> d!14755 (= lt!30087 (select (content!74 Nil!1468) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))

(declare-fun e!45091 () Bool)

(assert (=> d!14755 (= lt!30087 e!45091)))

(declare-fun res!36977 () Bool)

(assert (=> d!14755 (=> (not res!36977) (not e!45091))))

(assert (=> d!14755 (= res!36977 ((_ is Cons!1467) Nil!1468))))

(assert (=> d!14755 (= (contains!712 Nil!1468 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) lt!30087)))

(declare-fun b!68831 () Bool)

(declare-fun e!45092 () Bool)

(assert (=> b!68831 (= e!45091 e!45092)))

(declare-fun res!36978 () Bool)

(assert (=> b!68831 (=> res!36978 e!45092)))

(assert (=> b!68831 (= res!36978 (= (h!2052 Nil!1468) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))

(declare-fun b!68832 () Bool)

(assert (=> b!68832 (= e!45092 (contains!712 (t!4965 Nil!1468) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))

(assert (= (and d!14755 res!36977) b!68831))

(assert (= (and b!68831 (not res!36978)) b!68832))

(declare-fun m!64457 () Bool)

(assert (=> d!14755 m!64457))

(assert (=> d!14755 m!63767))

(declare-fun m!64459 () Bool)

(assert (=> d!14755 m!64459))

(assert (=> b!68832 m!63767))

(declare-fun m!64461 () Bool)

(assert (=> b!68832 m!64461))

(assert (=> b!68506 d!14755))

(declare-fun d!14757 () Bool)

(declare-fun e!45094 () Bool)

(assert (=> d!14757 e!45094))

(declare-fun res!36979 () Bool)

(assert (=> d!14757 (=> res!36979 e!45094)))

(declare-fun lt!30091 () Bool)

(assert (=> d!14757 (= res!36979 (not lt!30091))))

(declare-fun lt!30090 () Bool)

(assert (=> d!14757 (= lt!30091 lt!30090)))

(declare-fun lt!30089 () Unit!1898)

(declare-fun e!45093 () Unit!1898)

(assert (=> d!14757 (= lt!30089 e!45093)))

(declare-fun c!9769 () Bool)

(assert (=> d!14757 (= c!9769 lt!30090)))

(assert (=> d!14757 (= lt!30090 (containsKey!133 (toList!708 lt!29857) (_1!1056 lt!29675)))))

(assert (=> d!14757 (= (contains!709 lt!29857 (_1!1056 lt!29675)) lt!30091)))

(declare-fun b!68833 () Bool)

(declare-fun lt!30088 () Unit!1898)

(assert (=> b!68833 (= e!45093 lt!30088)))

(assert (=> b!68833 (= lt!30088 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 lt!29857) (_1!1056 lt!29675)))))

(assert (=> b!68833 (isDefined!83 (getValueByKey!129 (toList!708 lt!29857) (_1!1056 lt!29675)))))

(declare-fun b!68834 () Bool)

(declare-fun Unit!1915 () Unit!1898)

(assert (=> b!68834 (= e!45093 Unit!1915)))

(declare-fun b!68835 () Bool)

(assert (=> b!68835 (= e!45094 (isDefined!83 (getValueByKey!129 (toList!708 lt!29857) (_1!1056 lt!29675))))))

(assert (= (and d!14757 c!9769) b!68833))

(assert (= (and d!14757 (not c!9769)) b!68834))

(assert (= (and d!14757 (not res!36979)) b!68835))

(declare-fun m!64463 () Bool)

(assert (=> d!14757 m!64463))

(declare-fun m!64465 () Bool)

(assert (=> b!68833 m!64465))

(assert (=> b!68833 m!64045))

(assert (=> b!68833 m!64045))

(declare-fun m!64467 () Bool)

(assert (=> b!68833 m!64467))

(assert (=> b!68835 m!64045))

(assert (=> b!68835 m!64045))

(assert (=> b!68835 m!64467))

(assert (=> d!14665 d!14757))

(declare-fun b!68838 () Bool)

(declare-fun e!45096 () Option!135)

(assert (=> b!68838 (= e!45096 (getValueByKey!129 (t!4964 lt!29855) (_1!1056 lt!29675)))))

(declare-fun b!68836 () Bool)

(declare-fun e!45095 () Option!135)

(assert (=> b!68836 (= e!45095 (Some!134 (_2!1056 (h!2051 lt!29855))))))

(declare-fun b!68839 () Bool)

(assert (=> b!68839 (= e!45096 None!133)))

(declare-fun d!14759 () Bool)

(declare-fun c!9770 () Bool)

(assert (=> d!14759 (= c!9770 (and ((_ is Cons!1466) lt!29855) (= (_1!1056 (h!2051 lt!29855)) (_1!1056 lt!29675))))))

(assert (=> d!14759 (= (getValueByKey!129 lt!29855 (_1!1056 lt!29675)) e!45095)))

(declare-fun b!68837 () Bool)

(assert (=> b!68837 (= e!45095 e!45096)))

(declare-fun c!9771 () Bool)

(assert (=> b!68837 (= c!9771 (and ((_ is Cons!1466) lt!29855) (not (= (_1!1056 (h!2051 lt!29855)) (_1!1056 lt!29675)))))))

(assert (= (and d!14759 c!9770) b!68836))

(assert (= (and d!14759 (not c!9770)) b!68837))

(assert (= (and b!68837 c!9771) b!68838))

(assert (= (and b!68837 (not c!9771)) b!68839))

(declare-fun m!64469 () Bool)

(assert (=> b!68838 m!64469))

(assert (=> d!14665 d!14759))

(declare-fun d!14761 () Bool)

(assert (=> d!14761 (= (getValueByKey!129 lt!29855 (_1!1056 lt!29675)) (Some!134 (_2!1056 lt!29675)))))

(declare-fun lt!30092 () Unit!1898)

(assert (=> d!14761 (= lt!30092 (choose!390 lt!29855 (_1!1056 lt!29675) (_2!1056 lt!29675)))))

(declare-fun e!45097 () Bool)

(assert (=> d!14761 e!45097))

(declare-fun res!36980 () Bool)

(assert (=> d!14761 (=> (not res!36980) (not e!45097))))

(assert (=> d!14761 (= res!36980 (isStrictlySorted!285 lt!29855))))

(assert (=> d!14761 (= (lemmaContainsTupThenGetReturnValue!49 lt!29855 (_1!1056 lt!29675) (_2!1056 lt!29675)) lt!30092)))

(declare-fun b!68840 () Bool)

(declare-fun res!36981 () Bool)

(assert (=> b!68840 (=> (not res!36981) (not e!45097))))

(assert (=> b!68840 (= res!36981 (containsKey!133 lt!29855 (_1!1056 lt!29675)))))

(declare-fun b!68841 () Bool)

(assert (=> b!68841 (= e!45097 (contains!711 lt!29855 (tuple2!2091 (_1!1056 lt!29675) (_2!1056 lt!29675))))))

(assert (= (and d!14761 res!36980) b!68840))

(assert (= (and b!68840 res!36981) b!68841))

(assert (=> d!14761 m!64039))

(declare-fun m!64471 () Bool)

(assert (=> d!14761 m!64471))

(declare-fun m!64473 () Bool)

(assert (=> d!14761 m!64473))

(declare-fun m!64475 () Bool)

(assert (=> b!68840 m!64475))

(declare-fun m!64477 () Bool)

(assert (=> b!68841 m!64477))

(assert (=> d!14665 d!14761))

(declare-fun b!68842 () Bool)

(declare-fun e!45101 () List!1470)

(declare-fun call!5876 () List!1470)

(assert (=> b!68842 (= e!45101 call!5876)))

(declare-fun b!68843 () Bool)

(declare-fun c!9772 () Bool)

(assert (=> b!68843 (= c!9772 (and ((_ is Cons!1466) (toList!708 lt!29682)) (bvsgt (_1!1056 (h!2051 (toList!708 lt!29682))) (_1!1056 lt!29675))))))

(declare-fun e!45099 () List!1470)

(assert (=> b!68843 (= e!45099 e!45101)))

(declare-fun b!68844 () Bool)

(assert (=> b!68844 (= e!45101 call!5876)))

(declare-fun b!68846 () Bool)

(declare-fun call!5875 () List!1470)

(assert (=> b!68846 (= e!45099 call!5875)))

(declare-fun bm!5872 () Bool)

(declare-fun call!5877 () List!1470)

(assert (=> bm!5872 (= call!5875 call!5877)))

(declare-fun bm!5873 () Bool)

(assert (=> bm!5873 (= call!5876 call!5875)))

(declare-fun b!68847 () Bool)

(declare-fun e!45098 () List!1470)

(assert (=> b!68847 (= e!45098 e!45099)))

(declare-fun c!9773 () Bool)

(assert (=> b!68847 (= c!9773 (and ((_ is Cons!1466) (toList!708 lt!29682)) (= (_1!1056 (h!2051 (toList!708 lt!29682))) (_1!1056 lt!29675))))))

(declare-fun bm!5874 () Bool)

(declare-fun e!45100 () List!1470)

(declare-fun c!9775 () Bool)

(assert (=> bm!5874 (= call!5877 ($colon$colon!63 e!45100 (ite c!9775 (h!2051 (toList!708 lt!29682)) (tuple2!2091 (_1!1056 lt!29675) (_2!1056 lt!29675)))))))

(declare-fun c!9774 () Bool)

(assert (=> bm!5874 (= c!9774 c!9775)))

(declare-fun b!68848 () Bool)

(declare-fun res!36983 () Bool)

(declare-fun e!45102 () Bool)

(assert (=> b!68848 (=> (not res!36983) (not e!45102))))

(declare-fun lt!30093 () List!1470)

(assert (=> b!68848 (= res!36983 (containsKey!133 lt!30093 (_1!1056 lt!29675)))))

(declare-fun b!68849 () Bool)

(assert (=> b!68849 (= e!45102 (contains!711 lt!30093 (tuple2!2091 (_1!1056 lt!29675) (_2!1056 lt!29675))))))

(declare-fun b!68850 () Bool)

(assert (=> b!68850 (= e!45100 (ite c!9773 (t!4964 (toList!708 lt!29682)) (ite c!9772 (Cons!1466 (h!2051 (toList!708 lt!29682)) (t!4964 (toList!708 lt!29682))) Nil!1467)))))

(declare-fun b!68851 () Bool)

(assert (=> b!68851 (= e!45098 call!5877)))

(declare-fun d!14763 () Bool)

(assert (=> d!14763 e!45102))

(declare-fun res!36982 () Bool)

(assert (=> d!14763 (=> (not res!36982) (not e!45102))))

(assert (=> d!14763 (= res!36982 (isStrictlySorted!285 lt!30093))))

(assert (=> d!14763 (= lt!30093 e!45098)))

(assert (=> d!14763 (= c!9775 (and ((_ is Cons!1466) (toList!708 lt!29682)) (bvslt (_1!1056 (h!2051 (toList!708 lt!29682))) (_1!1056 lt!29675))))))

(assert (=> d!14763 (isStrictlySorted!285 (toList!708 lt!29682))))

(assert (=> d!14763 (= (insertStrictlySorted!52 (toList!708 lt!29682) (_1!1056 lt!29675) (_2!1056 lt!29675)) lt!30093)))

(declare-fun b!68845 () Bool)

(assert (=> b!68845 (= e!45100 (insertStrictlySorted!52 (t!4964 (toList!708 lt!29682)) (_1!1056 lt!29675) (_2!1056 lt!29675)))))

(assert (= (and d!14763 c!9775) b!68851))

(assert (= (and d!14763 (not c!9775)) b!68847))

(assert (= (and b!68847 c!9773) b!68846))

(assert (= (and b!68847 (not c!9773)) b!68843))

(assert (= (and b!68843 c!9772) b!68844))

(assert (= (and b!68843 (not c!9772)) b!68842))

(assert (= (or b!68844 b!68842) bm!5873))

(assert (= (or b!68846 bm!5873) bm!5872))

(assert (= (or b!68851 bm!5872) bm!5874))

(assert (= (and bm!5874 c!9774) b!68845))

(assert (= (and bm!5874 (not c!9774)) b!68850))

(assert (= (and d!14763 res!36982) b!68848))

(assert (= (and b!68848 res!36983) b!68849))

(declare-fun m!64479 () Bool)

(assert (=> d!14763 m!64479))

(declare-fun m!64481 () Bool)

(assert (=> d!14763 m!64481))

(declare-fun m!64483 () Bool)

(assert (=> b!68849 m!64483))

(declare-fun m!64485 () Bool)

(assert (=> b!68848 m!64485))

(declare-fun m!64487 () Bool)

(assert (=> bm!5874 m!64487))

(declare-fun m!64489 () Bool)

(assert (=> b!68845 m!64489))

(assert (=> d!14665 d!14763))

(declare-fun d!14765 () Bool)

(declare-fun lt!30096 () (_ BitVec 32))

(assert (=> d!14765 (and (bvsge lt!30096 #b00000000000000000000000000000000) (bvsle lt!30096 (bvsub (size!2065 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!45107 () (_ BitVec 32))

(assert (=> d!14765 (= lt!30096 e!45107)))

(declare-fun c!9781 () Bool)

(assert (=> d!14765 (= c!9781 (bvsge #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))))))

(assert (=> d!14765 (and (bvsle #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2065 (_keys!3810 newMap!16)) (size!2065 (_keys!3810 newMap!16))))))

(assert (=> d!14765 (= (arrayCountValidKeys!0 (_keys!3810 newMap!16) #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))) lt!30096)))

(declare-fun bm!5877 () Bool)

(declare-fun call!5880 () (_ BitVec 32))

(assert (=> bm!5877 (= call!5880 (arrayCountValidKeys!0 (_keys!3810 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2065 (_keys!3810 newMap!16))))))

(declare-fun b!68860 () Bool)

(declare-fun e!45108 () (_ BitVec 32))

(assert (=> b!68860 (= e!45108 (bvadd #b00000000000000000000000000000001 call!5880))))

(declare-fun b!68861 () Bool)

(assert (=> b!68861 (= e!45107 e!45108)))

(declare-fun c!9780 () Bool)

(assert (=> b!68861 (= c!9780 (validKeyInArray!0 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!68862 () Bool)

(assert (=> b!68862 (= e!45108 call!5880)))

(declare-fun b!68863 () Bool)

(assert (=> b!68863 (= e!45107 #b00000000000000000000000000000000)))

(assert (= (and d!14765 c!9781) b!68863))

(assert (= (and d!14765 (not c!9781)) b!68861))

(assert (= (and b!68861 c!9780) b!68860))

(assert (= (and b!68861 (not c!9780)) b!68862))

(assert (= (or b!68860 b!68862) bm!5877))

(declare-fun m!64491 () Bool)

(assert (=> bm!5877 m!64491))

(assert (=> b!68861 m!64177))

(assert (=> b!68861 m!64177))

(assert (=> b!68861 m!64187))

(assert (=> b!68363 d!14765))

(declare-fun b!68866 () Bool)

(declare-fun e!45110 () Option!135)

(assert (=> b!68866 (= e!45110 (getValueByKey!129 (t!4964 (toList!708 lt!29868)) (_1!1056 lt!29680)))))

(declare-fun b!68864 () Bool)

(declare-fun e!45109 () Option!135)

(assert (=> b!68864 (= e!45109 (Some!134 (_2!1056 (h!2051 (toList!708 lt!29868)))))))

(declare-fun b!68867 () Bool)

(assert (=> b!68867 (= e!45110 None!133)))

(declare-fun d!14767 () Bool)

(declare-fun c!9782 () Bool)

(assert (=> d!14767 (= c!9782 (and ((_ is Cons!1466) (toList!708 lt!29868)) (= (_1!1056 (h!2051 (toList!708 lt!29868))) (_1!1056 lt!29680))))))

(assert (=> d!14767 (= (getValueByKey!129 (toList!708 lt!29868) (_1!1056 lt!29680)) e!45109)))

(declare-fun b!68865 () Bool)

(assert (=> b!68865 (= e!45109 e!45110)))

(declare-fun c!9783 () Bool)

(assert (=> b!68865 (= c!9783 (and ((_ is Cons!1466) (toList!708 lt!29868)) (not (= (_1!1056 (h!2051 (toList!708 lt!29868))) (_1!1056 lt!29680)))))))

(assert (= (and d!14767 c!9782) b!68864))

(assert (= (and d!14767 (not c!9782)) b!68865))

(assert (= (and b!68865 c!9783) b!68866))

(assert (= (and b!68865 (not c!9783)) b!68867))

(declare-fun m!64493 () Bool)

(assert (=> b!68866 m!64493))

(assert (=> b!68481 d!14767))

(declare-fun d!14769 () Bool)

(assert (=> d!14769 (= (validKeyInArray!0 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!68413 d!14769))

(declare-fun d!14771 () Bool)

(declare-fun e!45112 () Bool)

(assert (=> d!14771 e!45112))

(declare-fun res!36984 () Bool)

(assert (=> d!14771 (=> res!36984 e!45112)))

(declare-fun lt!30100 () Bool)

(assert (=> d!14771 (= res!36984 (not lt!30100))))

(declare-fun lt!30099 () Bool)

(assert (=> d!14771 (= lt!30100 lt!30099)))

(declare-fun lt!30098 () Unit!1898)

(declare-fun e!45111 () Unit!1898)

(assert (=> d!14771 (= lt!30098 e!45111)))

(declare-fun c!9784 () Bool)

(assert (=> d!14771 (= c!9784 lt!30099)))

(assert (=> d!14771 (= lt!30099 (containsKey!133 (toList!708 call!5832) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))

(assert (=> d!14771 (= (contains!709 call!5832 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) lt!30100)))

(declare-fun b!68868 () Bool)

(declare-fun lt!30097 () Unit!1898)

(assert (=> b!68868 (= e!45111 lt!30097)))

(assert (=> b!68868 (= lt!30097 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 call!5832) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))

(assert (=> b!68868 (isDefined!83 (getValueByKey!129 (toList!708 call!5832) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))

(declare-fun b!68869 () Bool)

(declare-fun Unit!1916 () Unit!1898)

(assert (=> b!68869 (= e!45111 Unit!1916)))

(declare-fun b!68870 () Bool)

(assert (=> b!68870 (= e!45112 (isDefined!83 (getValueByKey!129 (toList!708 call!5832) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355))))))

(assert (= (and d!14771 c!9784) b!68868))

(assert (= (and d!14771 (not c!9784)) b!68869))

(assert (= (and d!14771 (not res!36984)) b!68870))

(assert (=> d!14771 m!63767))

(declare-fun m!64495 () Bool)

(assert (=> d!14771 m!64495))

(assert (=> b!68868 m!63767))

(declare-fun m!64497 () Bool)

(assert (=> b!68868 m!64497))

(assert (=> b!68868 m!63767))

(declare-fun m!64499 () Bool)

(assert (=> b!68868 m!64499))

(assert (=> b!68868 m!64499))

(declare-fun m!64501 () Bool)

(assert (=> b!68868 m!64501))

(assert (=> b!68870 m!63767))

(assert (=> b!68870 m!64499))

(assert (=> b!68870 m!64499))

(assert (=> b!68870 m!64501))

(assert (=> b!68631 d!14771))

(assert (=> b!68462 d!14701))

(declare-fun d!14773 () Bool)

(declare-fun e!45114 () Bool)

(assert (=> d!14773 e!45114))

(declare-fun res!36985 () Bool)

(assert (=> d!14773 (=> res!36985 e!45114)))

(declare-fun lt!30104 () Bool)

(assert (=> d!14773 (= res!36985 (not lt!30104))))

(declare-fun lt!30103 () Bool)

(assert (=> d!14773 (= lt!30104 lt!30103)))

(declare-fun lt!30102 () Unit!1898)

(declare-fun e!45113 () Unit!1898)

(assert (=> d!14773 (= lt!30102 e!45113)))

(declare-fun c!9785 () Bool)

(assert (=> d!14773 (= c!9785 lt!30103)))

(assert (=> d!14773 (= lt!30103 (containsKey!133 (toList!708 (+!89 lt!29838 (tuple2!2091 lt!29837 lt!29836))) lt!29839))))

(assert (=> d!14773 (= (contains!709 (+!89 lt!29838 (tuple2!2091 lt!29837 lt!29836)) lt!29839) lt!30104)))

(declare-fun b!68871 () Bool)

(declare-fun lt!30101 () Unit!1898)

(assert (=> b!68871 (= e!45113 lt!30101)))

(assert (=> b!68871 (= lt!30101 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 (+!89 lt!29838 (tuple2!2091 lt!29837 lt!29836))) lt!29839))))

(assert (=> b!68871 (isDefined!83 (getValueByKey!129 (toList!708 (+!89 lt!29838 (tuple2!2091 lt!29837 lt!29836))) lt!29839))))

(declare-fun b!68872 () Bool)

(declare-fun Unit!1917 () Unit!1898)

(assert (=> b!68872 (= e!45113 Unit!1917)))

(declare-fun b!68873 () Bool)

(assert (=> b!68873 (= e!45114 (isDefined!83 (getValueByKey!129 (toList!708 (+!89 lt!29838 (tuple2!2091 lt!29837 lt!29836))) lt!29839)))))

(assert (= (and d!14773 c!9785) b!68871))

(assert (= (and d!14773 (not c!9785)) b!68872))

(assert (= (and d!14773 (not res!36985)) b!68873))

(declare-fun m!64503 () Bool)

(assert (=> d!14773 m!64503))

(declare-fun m!64505 () Bool)

(assert (=> b!68871 m!64505))

(declare-fun m!64507 () Bool)

(assert (=> b!68871 m!64507))

(assert (=> b!68871 m!64507))

(declare-fun m!64509 () Bool)

(assert (=> b!68871 m!64509))

(assert (=> b!68873 m!64507))

(assert (=> b!68873 m!64507))

(assert (=> b!68873 m!64509))

(assert (=> b!68462 d!14773))

(declare-fun d!14775 () Bool)

(assert (=> d!14775 (not (contains!709 (+!89 lt!29838 (tuple2!2091 lt!29837 lt!29836)) lt!29839))))

(declare-fun lt!30107 () Unit!1898)

(declare-fun choose!392 (ListLongMap!1385 (_ BitVec 64) V!2921 (_ BitVec 64)) Unit!1898)

(assert (=> d!14775 (= lt!30107 (choose!392 lt!29838 lt!29837 lt!29836 lt!29839))))

(declare-fun e!45117 () Bool)

(assert (=> d!14775 e!45117))

(declare-fun res!36988 () Bool)

(assert (=> d!14775 (=> (not res!36988) (not e!45117))))

(assert (=> d!14775 (= res!36988 (not (contains!709 lt!29838 lt!29839)))))

(assert (=> d!14775 (= (addStillNotContains!23 lt!29838 lt!29837 lt!29836 lt!29839) lt!30107)))

(declare-fun b!68877 () Bool)

(assert (=> b!68877 (= e!45117 (not (= lt!29837 lt!29839)))))

(assert (= (and d!14775 res!36988) b!68877))

(assert (=> d!14775 m!64015))

(assert (=> d!14775 m!64015))

(assert (=> d!14775 m!64017))

(declare-fun m!64511 () Bool)

(assert (=> d!14775 m!64511))

(declare-fun m!64513 () Bool)

(assert (=> d!14775 m!64513))

(assert (=> b!68462 d!14775))

(declare-fun d!14777 () Bool)

(declare-fun e!45118 () Bool)

(assert (=> d!14777 e!45118))

(declare-fun res!36989 () Bool)

(assert (=> d!14777 (=> (not res!36989) (not e!45118))))

(declare-fun lt!30111 () ListLongMap!1385)

(assert (=> d!14777 (= res!36989 (contains!709 lt!30111 (_1!1056 (tuple2!2091 lt!29837 lt!29836))))))

(declare-fun lt!30109 () List!1470)

(assert (=> d!14777 (= lt!30111 (ListLongMap!1386 lt!30109))))

(declare-fun lt!30108 () Unit!1898)

(declare-fun lt!30110 () Unit!1898)

(assert (=> d!14777 (= lt!30108 lt!30110)))

(assert (=> d!14777 (= (getValueByKey!129 lt!30109 (_1!1056 (tuple2!2091 lt!29837 lt!29836))) (Some!134 (_2!1056 (tuple2!2091 lt!29837 lt!29836))))))

(assert (=> d!14777 (= lt!30110 (lemmaContainsTupThenGetReturnValue!49 lt!30109 (_1!1056 (tuple2!2091 lt!29837 lt!29836)) (_2!1056 (tuple2!2091 lt!29837 lt!29836))))))

(assert (=> d!14777 (= lt!30109 (insertStrictlySorted!52 (toList!708 lt!29838) (_1!1056 (tuple2!2091 lt!29837 lt!29836)) (_2!1056 (tuple2!2091 lt!29837 lt!29836))))))

(assert (=> d!14777 (= (+!89 lt!29838 (tuple2!2091 lt!29837 lt!29836)) lt!30111)))

(declare-fun b!68878 () Bool)

(declare-fun res!36990 () Bool)

(assert (=> b!68878 (=> (not res!36990) (not e!45118))))

(assert (=> b!68878 (= res!36990 (= (getValueByKey!129 (toList!708 lt!30111) (_1!1056 (tuple2!2091 lt!29837 lt!29836))) (Some!134 (_2!1056 (tuple2!2091 lt!29837 lt!29836)))))))

(declare-fun b!68879 () Bool)

(assert (=> b!68879 (= e!45118 (contains!711 (toList!708 lt!30111) (tuple2!2091 lt!29837 lt!29836)))))

(assert (= (and d!14777 res!36989) b!68878))

(assert (= (and b!68878 res!36990) b!68879))

(declare-fun m!64515 () Bool)

(assert (=> d!14777 m!64515))

(declare-fun m!64517 () Bool)

(assert (=> d!14777 m!64517))

(declare-fun m!64519 () Bool)

(assert (=> d!14777 m!64519))

(declare-fun m!64521 () Bool)

(assert (=> d!14777 m!64521))

(declare-fun m!64523 () Bool)

(assert (=> b!68878 m!64523))

(declare-fun m!64525 () Bool)

(assert (=> b!68879 m!64525))

(assert (=> b!68462 d!14777))

(declare-fun d!14779 () Bool)

(declare-fun e!45119 () Bool)

(assert (=> d!14779 e!45119))

(declare-fun res!36991 () Bool)

(assert (=> d!14779 (=> (not res!36991) (not e!45119))))

(declare-fun lt!30115 () ListLongMap!1385)

(assert (=> d!14779 (= res!36991 (contains!709 lt!30115 (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!30113 () List!1470)

(assert (=> d!14779 (= lt!30115 (ListLongMap!1386 lt!30113))))

(declare-fun lt!30112 () Unit!1898)

(declare-fun lt!30114 () Unit!1898)

(assert (=> d!14779 (= lt!30112 lt!30114)))

(assert (=> d!14779 (= (getValueByKey!129 lt!30113 (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!134 (_2!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!14779 (= lt!30114 (lemmaContainsTupThenGetReturnValue!49 lt!30113 (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!14779 (= lt!30113 (insertStrictlySorted!52 (toList!708 call!5767) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!14779 (= (+!89 call!5767 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!30115)))

(declare-fun b!68880 () Bool)

(declare-fun res!36992 () Bool)

(assert (=> b!68880 (=> (not res!36992) (not e!45119))))

(assert (=> b!68880 (= res!36992 (= (getValueByKey!129 (toList!708 lt!30115) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!134 (_2!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!68881 () Bool)

(assert (=> b!68881 (= e!45119 (contains!711 (toList!708 lt!30115) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!14779 res!36991) b!68880))

(assert (= (and b!68880 res!36992) b!68881))

(declare-fun m!64527 () Bool)

(assert (=> d!14779 m!64527))

(declare-fun m!64529 () Bool)

(assert (=> d!14779 m!64529))

(declare-fun m!64531 () Bool)

(assert (=> d!14779 m!64531))

(declare-fun m!64533 () Bool)

(assert (=> d!14779 m!64533))

(declare-fun m!64535 () Bool)

(assert (=> b!68880 m!64535))

(declare-fun m!64537 () Bool)

(assert (=> b!68881 m!64537))

(assert (=> b!68462 d!14779))

(declare-fun d!14781 () Bool)

(declare-fun res!36993 () Bool)

(declare-fun e!45120 () Bool)

(assert (=> d!14781 (=> res!36993 e!45120)))

(assert (=> d!14781 (= res!36993 (= (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))

(assert (=> d!14781 (= (arrayContainsKey!0 (_keys!3810 (v!2485 (underlying!247 thiss!992))) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) e!45120)))

(declare-fun b!68882 () Bool)

(declare-fun e!45121 () Bool)

(assert (=> b!68882 (= e!45120 e!45121)))

(declare-fun res!36994 () Bool)

(assert (=> b!68882 (=> (not res!36994) (not e!45121))))

(assert (=> b!68882 (= res!36994 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2065 (_keys!3810 (v!2485 (underlying!247 thiss!992))))))))

(declare-fun b!68883 () Bool)

(assert (=> b!68883 (= e!45121 (arrayContainsKey!0 (_keys!3810 (v!2485 (underlying!247 thiss!992))) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!14781 (not res!36993)) b!68882))

(assert (= (and b!68882 res!36994) b!68883))

(declare-fun m!64539 () Bool)

(assert (=> d!14781 m!64539))

(assert (=> b!68883 m!63767))

(declare-fun m!64541 () Bool)

(assert (=> b!68883 m!64541))

(assert (=> b!68488 d!14781))

(declare-fun d!14783 () Bool)

(declare-fun res!36999 () Bool)

(declare-fun e!45126 () Bool)

(assert (=> d!14783 (=> res!36999 e!45126)))

(assert (=> d!14783 (= res!36999 (and ((_ is Cons!1466) (toList!708 lt!29677)) (= (_1!1056 (h!2051 (toList!708 lt!29677))) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355))))))

(assert (=> d!14783 (= (containsKey!133 (toList!708 lt!29677) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) e!45126)))

(declare-fun b!68888 () Bool)

(declare-fun e!45127 () Bool)

(assert (=> b!68888 (= e!45126 e!45127)))

(declare-fun res!37000 () Bool)

(assert (=> b!68888 (=> (not res!37000) (not e!45127))))

(assert (=> b!68888 (= res!37000 (and (or (not ((_ is Cons!1466) (toList!708 lt!29677))) (bvsle (_1!1056 (h!2051 (toList!708 lt!29677))) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355))) ((_ is Cons!1466) (toList!708 lt!29677)) (bvslt (_1!1056 (h!2051 (toList!708 lt!29677))) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355))))))

(declare-fun b!68889 () Bool)

(assert (=> b!68889 (= e!45127 (containsKey!133 (t!4964 (toList!708 lt!29677)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))

(assert (= (and d!14783 (not res!36999)) b!68888))

(assert (= (and b!68888 res!37000) b!68889))

(assert (=> b!68889 m!63767))

(declare-fun m!64543 () Bool)

(assert (=> b!68889 m!64543))

(assert (=> d!14685 d!14783))

(assert (=> d!14677 d!14683))

(declare-fun d!14785 () Bool)

(assert (=> d!14785 (arrayNoDuplicates!0 (_keys!3810 (v!2485 (underlying!247 thiss!992))) from!355 Nil!1468)))

(assert (=> d!14785 true))

(declare-fun _$71!90 () Unit!1898)

(assert (=> d!14785 (= (choose!39 (_keys!3810 (v!2485 (underlying!247 thiss!992))) #b00000000000000000000000000000000 from!355) _$71!90)))

(declare-fun bs!2943 () Bool)

(assert (= bs!2943 d!14785))

(assert (=> bs!2943 m!63811))

(assert (=> d!14677 d!14785))

(assert (=> b!68493 d!14679))

(assert (=> b!68469 d!14769))

(declare-fun b!68924 () Bool)

(declare-fun e!45149 () Bool)

(declare-fun e!45147 () Bool)

(assert (=> b!68924 (= e!45149 e!45147)))

(declare-fun res!37020 () Bool)

(declare-fun call!5891 () Bool)

(assert (=> b!68924 (= res!37020 call!5891)))

(assert (=> b!68924 (=> (not res!37020) (not e!45147))))

(declare-fun b!68925 () Bool)

(declare-fun lt!30202 () SeekEntryResult!237)

(assert (=> b!68925 (= e!45149 ((_ is Undefined!237) lt!30202))))

(declare-fun lt!30181 () SeekEntryResult!237)

(declare-fun c!9795 () Bool)

(declare-fun call!5889 () Bool)

(declare-fun c!9796 () Bool)

(declare-fun bm!5886 () Bool)

(assert (=> bm!5886 (= call!5889 (inRange!0 (ite c!9795 (index!3078 lt!30181) (ite c!9796 (index!3077 lt!30202) (index!3080 lt!30202))) (mask!6111 newMap!16)))))

(declare-fun b!68926 () Bool)

(declare-fun call!5890 () Bool)

(assert (=> b!68926 (= e!45147 (not call!5890))))

(declare-fun bm!5887 () Bool)

(assert (=> bm!5887 (= call!5890 (arrayContainsKey!0 (_keys!3810 newMap!16) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!68927 () Bool)

(declare-fun c!9794 () Bool)

(assert (=> b!68927 (= c!9794 ((_ is MissingVacant!237) lt!30202))))

(declare-fun e!45146 () Bool)

(assert (=> b!68927 (= e!45146 e!45149)))

(declare-fun b!68928 () Bool)

(declare-fun e!45145 () Bool)

(assert (=> b!68928 (= e!45145 (= (select (arr!1828 (_keys!3810 newMap!16)) (index!3078 lt!30181)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))

(declare-fun d!14787 () Bool)

(declare-fun e!45150 () Bool)

(assert (=> d!14787 e!45150))

(declare-fun res!37021 () Bool)

(assert (=> d!14787 (=> (not res!37021) (not e!45150))))

(declare-fun lt!30176 () tuple2!2092)

(assert (=> d!14787 (= res!37021 (_1!1057 lt!30176))))

(assert (=> d!14787 (= lt!30176 (tuple2!2093 true (LongMapFixedSize!677 (defaultEntry!2167 newMap!16) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (bvadd (_size!387 newMap!16) #b00000000000000000000000000000001) (array!3832 (store (arr!1828 (_keys!3810 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) (size!2065 (_keys!3810 newMap!16))) (array!3834 (store (arr!1829 (_values!2150 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (ValueCellFull!884 lt!29673)) (size!2066 (_values!2150 newMap!16))) (_vacant!387 newMap!16))))))

(declare-fun lt!30189 () Unit!1898)

(declare-fun lt!30183 () Unit!1898)

(assert (=> d!14787 (= lt!30189 lt!30183)))

(declare-fun lt!30200 () array!3831)

(declare-fun lt!30191 () array!3833)

(assert (=> d!14787 (contains!709 (getCurrentListMap!403 lt!30200 lt!30191 (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) (select (store (arr!1828 (_keys!3810 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944))))))

(assert (=> d!14787 (= lt!30183 (lemmaValidKeyInArrayIsInListMap!81 lt!30200 lt!30191 (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (defaultEntry!2167 newMap!16)))))

(assert (=> d!14787 (= lt!30191 (array!3834 (store (arr!1829 (_values!2150 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (ValueCellFull!884 lt!29673)) (size!2066 (_values!2150 newMap!16))))))

(assert (=> d!14787 (= lt!30200 (array!3832 (store (arr!1828 (_keys!3810 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) (size!2065 (_keys!3810 newMap!16))))))

(declare-fun lt!30194 () Unit!1898)

(declare-fun lt!30195 () Unit!1898)

(assert (=> d!14787 (= lt!30194 lt!30195)))

(declare-fun lt!30190 () array!3831)

(assert (=> d!14787 (= (arrayCountValidKeys!0 lt!30190 (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (bvadd (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!3831 (_ BitVec 32)) Unit!1898)

(assert (=> d!14787 (= lt!30195 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!30190 (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944))))))

(assert (=> d!14787 (= lt!30190 (array!3832 (store (arr!1828 (_keys!3810 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) (size!2065 (_keys!3810 newMap!16))))))

(declare-fun lt!30186 () Unit!1898)

(declare-fun lt!30205 () Unit!1898)

(assert (=> d!14787 (= lt!30186 lt!30205)))

(declare-fun lt!30199 () array!3831)

(assert (=> d!14787 (arrayContainsKey!0 lt!30199 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(assert (=> d!14787 (= lt!30205 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!30199 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944))))))

(assert (=> d!14787 (= lt!30199 (array!3832 (store (arr!1828 (_keys!3810 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) (size!2065 (_keys!3810 newMap!16))))))

(declare-fun lt!30193 () Unit!1898)

(declare-fun lt!30187 () Unit!1898)

(assert (=> d!14787 (= lt!30193 lt!30187)))

(assert (=> d!14787 (= (+!89 (getCurrentListMap!403 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)) (getCurrentListMap!403 (array!3832 (store (arr!1828 (_keys!3810 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) (size!2065 (_keys!3810 newMap!16))) (array!3834 (store (arr!1829 (_values!2150 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (ValueCellFull!884 lt!29673)) (size!2066 (_values!2150 newMap!16))) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!11 (array!3831 array!3833 (_ BitVec 32) (_ BitVec 32) V!2921 V!2921 (_ BitVec 32) (_ BitVec 64) V!2921 Int) Unit!1898)

(assert (=> d!14787 (= lt!30187 (lemmaAddValidKeyToArrayThenAddPairToListMap!11 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30203 () Unit!1898)

(declare-fun lt!30188 () Unit!1898)

(assert (=> d!14787 (= lt!30203 lt!30188)))

(assert (=> d!14787 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3832 (store (arr!1828 (_keys!3810 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) (size!2065 (_keys!3810 newMap!16))) (mask!6111 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!3831 (_ BitVec 32) (_ BitVec 32)) Unit!1898)

(assert (=> d!14787 (= lt!30188 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (_keys!3810 newMap!16) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (mask!6111 newMap!16)))))

(declare-fun lt!30196 () Unit!1898)

(declare-fun lt!30204 () Unit!1898)

(assert (=> d!14787 (= lt!30196 lt!30204)))

(assert (=> d!14787 (= (arrayCountValidKeys!0 (array!3832 (store (arr!1828 (_keys!3810 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) (size!2065 (_keys!3810 newMap!16))) #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!3810 newMap!16) #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!3831 (_ BitVec 32) (_ BitVec 64)) Unit!1898)

(assert (=> d!14787 (= lt!30204 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3810 newMap!16) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))

(declare-fun lt!30182 () Unit!1898)

(declare-fun lt!30197 () Unit!1898)

(assert (=> d!14787 (= lt!30182 lt!30197)))

(declare-fun lt!30184 () List!1471)

(declare-fun lt!30180 () (_ BitVec 32))

(assert (=> d!14787 (arrayNoDuplicates!0 (array!3832 (store (arr!1828 (_keys!3810 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) (size!2065 (_keys!3810 newMap!16))) lt!30180 lt!30184)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!3831 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1471) Unit!1898)

(assert (=> d!14787 (= lt!30197 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3810 newMap!16) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) lt!30180 lt!30184))))

(assert (=> d!14787 (= lt!30184 Nil!1468)))

(assert (=> d!14787 (= lt!30180 #b00000000000000000000000000000000)))

(declare-fun lt!30198 () Unit!1898)

(declare-fun e!45151 () Unit!1898)

(assert (=> d!14787 (= lt!30198 e!45151)))

(declare-fun c!9797 () Bool)

(assert (=> d!14787 (= c!9797 (arrayContainsKey!0 (_keys!3810 newMap!16) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!30178 () Unit!1898)

(declare-fun e!45144 () Unit!1898)

(assert (=> d!14787 (= lt!30178 e!45144)))

(assert (=> d!14787 (= c!9795 (contains!709 (getCurrentListMap!403 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))

(assert (=> d!14787 (valid!289 newMap!16)))

(assert (=> d!14787 (= (updateHelperNewKey!22 newMap!16 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673 (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944))) lt!30176)))

(declare-fun bm!5888 () Bool)

(assert (=> bm!5888 (= call!5891 call!5889)))

(declare-fun b!68929 () Bool)

(declare-fun res!37026 () Bool)

(assert (=> b!68929 (= res!37026 call!5889)))

(assert (=> b!68929 (=> (not res!37026) (not e!45145))))

(declare-fun b!68930 () Bool)

(declare-fun res!37023 () Bool)

(assert (=> b!68930 (=> (not res!37023) (not e!45150))))

(assert (=> b!68930 (= res!37023 (contains!709 (map!1137 (_2!1057 lt!30176)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))

(declare-fun b!68931 () Bool)

(declare-fun Unit!1918 () Unit!1898)

(assert (=> b!68931 (= e!45151 Unit!1918)))

(declare-fun b!68932 () Bool)

(declare-fun Unit!1919 () Unit!1898)

(assert (=> b!68932 (= e!45151 Unit!1919)))

(declare-fun lt!30201 () Unit!1898)

(declare-fun lemmaArrayContainsKeyThenInListMap!11 (array!3831 array!3833 (_ BitVec 32) (_ BitVec 32) V!2921 V!2921 (_ BitVec 64) (_ BitVec 32) Int) Unit!1898)

(assert (=> b!68932 (= lt!30201 (lemmaArrayContainsKeyThenInListMap!11 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(assert (=> b!68932 (contains!709 (getCurrentListMap!403 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355))))

(declare-fun lt!30177 () Unit!1898)

(assert (=> b!68932 (= lt!30177 lt!30201)))

(assert (=> b!68932 false))

(declare-fun call!5892 () SeekEntryResult!237)

(declare-fun bm!5889 () Bool)

(assert (=> bm!5889 (= call!5892 (seekEntryOrOpen!0 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (_keys!3810 newMap!16) (mask!6111 newMap!16)))))

(declare-fun b!68933 () Bool)

(declare-fun res!37024 () Bool)

(declare-fun e!45148 () Bool)

(assert (=> b!68933 (=> (not res!37024) (not e!45148))))

(assert (=> b!68933 (= res!37024 call!5891)))

(assert (=> b!68933 (= e!45146 e!45148)))

(declare-fun b!68934 () Bool)

(declare-fun res!37022 () Bool)

(assert (=> b!68934 (=> (not res!37022) (not e!45148))))

(assert (=> b!68934 (= res!37022 (= (select (arr!1828 (_keys!3810 newMap!16)) (index!3077 lt!30202)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!68935 () Bool)

(declare-fun res!37027 () Bool)

(assert (=> b!68935 (= res!37027 (= (select (arr!1828 (_keys!3810 newMap!16)) (index!3080 lt!30202)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!68935 (=> (not res!37027) (not e!45147))))

(declare-fun b!68936 () Bool)

(declare-fun lt!30179 () Unit!1898)

(assert (=> b!68936 (= e!45144 lt!30179)))

(assert (=> b!68936 (= lt!30179 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!22 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (defaultEntry!2167 newMap!16)))))

(assert (=> b!68936 (= lt!30202 call!5892)))

(assert (=> b!68936 (= c!9796 ((_ is MissingZero!237) lt!30202))))

(assert (=> b!68936 e!45146))

(declare-fun b!68937 () Bool)

(declare-fun res!37025 () Bool)

(assert (=> b!68937 (=> (not res!37025) (not e!45150))))

(assert (=> b!68937 (= res!37025 (valid!289 (_2!1057 lt!30176)))))

(declare-fun b!68938 () Bool)

(assert (=> b!68938 (= e!45148 (not call!5890))))

(declare-fun b!68939 () Bool)

(assert (=> b!68939 (= e!45150 (= (map!1137 (_2!1057 lt!30176)) (+!89 (map!1137 newMap!16) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))

(declare-fun b!68940 () Bool)

(declare-fun Unit!1920 () Unit!1898)

(assert (=> b!68940 (= e!45144 Unit!1920)))

(declare-fun lt!30192 () Unit!1898)

(assert (=> b!68940 (= lt!30192 (lemmaInListMapThenSeekEntryOrOpenFindsIt!22 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (defaultEntry!2167 newMap!16)))))

(assert (=> b!68940 (= lt!30181 call!5892)))

(declare-fun res!37019 () Bool)

(assert (=> b!68940 (= res!37019 ((_ is Found!237) lt!30181))))

(assert (=> b!68940 (=> (not res!37019) (not e!45145))))

(assert (=> b!68940 e!45145))

(declare-fun lt!30185 () Unit!1898)

(assert (=> b!68940 (= lt!30185 lt!30192)))

(assert (=> b!68940 false))

(assert (= (and d!14787 c!9795) b!68940))

(assert (= (and d!14787 (not c!9795)) b!68936))

(assert (= (and b!68940 res!37019) b!68929))

(assert (= (and b!68929 res!37026) b!68928))

(assert (= (and b!68936 c!9796) b!68933))

(assert (= (and b!68936 (not c!9796)) b!68927))

(assert (= (and b!68933 res!37024) b!68934))

(assert (= (and b!68934 res!37022) b!68938))

(assert (= (and b!68927 c!9794) b!68924))

(assert (= (and b!68927 (not c!9794)) b!68925))

(assert (= (and b!68924 res!37020) b!68935))

(assert (= (and b!68935 res!37027) b!68926))

(assert (= (or b!68933 b!68924) bm!5888))

(assert (= (or b!68938 b!68926) bm!5887))

(assert (= (or b!68929 bm!5888) bm!5886))

(assert (= (or b!68940 b!68936) bm!5889))

(assert (= (and d!14787 c!9797) b!68932))

(assert (= (and d!14787 (not c!9797)) b!68931))

(assert (= (and d!14787 res!37021) b!68937))

(assert (= (and b!68937 res!37025) b!68930))

(assert (= (and b!68930 res!37023) b!68939))

(declare-fun m!64545 () Bool)

(assert (=> b!68937 m!64545))

(assert (=> b!68940 m!63767))

(assert (=> b!68940 m!64135))

(assert (=> d!14787 m!63937))

(declare-fun m!64547 () Bool)

(assert (=> d!14787 m!64547))

(declare-fun m!64549 () Bool)

(assert (=> d!14787 m!64549))

(assert (=> d!14787 m!63767))

(declare-fun m!64551 () Bool)

(assert (=> d!14787 m!64551))

(assert (=> d!14787 m!63767))

(declare-fun m!64553 () Bool)

(assert (=> d!14787 m!64553))

(declare-fun m!64555 () Bool)

(assert (=> d!14787 m!64555))

(assert (=> d!14787 m!63767))

(assert (=> d!14787 m!64141))

(assert (=> d!14787 m!63767))

(declare-fun m!64557 () Bool)

(assert (=> d!14787 m!64557))

(assert (=> d!14787 m!63807))

(assert (=> d!14787 m!63767))

(declare-fun m!64559 () Bool)

(assert (=> d!14787 m!64559))

(declare-fun m!64561 () Bool)

(assert (=> d!14787 m!64561))

(declare-fun m!64563 () Bool)

(assert (=> d!14787 m!64563))

(declare-fun m!64565 () Bool)

(assert (=> d!14787 m!64565))

(assert (=> d!14787 m!63767))

(declare-fun m!64567 () Bool)

(assert (=> d!14787 m!64567))

(declare-fun m!64569 () Bool)

(assert (=> d!14787 m!64569))

(declare-fun m!64571 () Bool)

(assert (=> d!14787 m!64571))

(assert (=> d!14787 m!63767))

(declare-fun m!64573 () Bool)

(assert (=> d!14787 m!64573))

(declare-fun m!64575 () Bool)

(assert (=> d!14787 m!64575))

(assert (=> d!14787 m!64549))

(declare-fun m!64577 () Bool)

(assert (=> d!14787 m!64577))

(declare-fun m!64579 () Bool)

(assert (=> d!14787 m!64579))

(assert (=> d!14787 m!63945))

(assert (=> d!14787 m!63945))

(assert (=> d!14787 m!63767))

(declare-fun m!64581 () Bool)

(assert (=> d!14787 m!64581))

(assert (=> d!14787 m!63945))

(declare-fun m!64583 () Bool)

(assert (=> d!14787 m!64583))

(assert (=> d!14787 m!64577))

(declare-fun m!64585 () Bool)

(assert (=> d!14787 m!64585))

(assert (=> bm!5889 m!63767))

(assert (=> bm!5889 m!64121))

(assert (=> b!68932 m!63767))

(declare-fun m!64587 () Bool)

(assert (=> b!68932 m!64587))

(assert (=> b!68932 m!63945))

(assert (=> b!68932 m!63945))

(assert (=> b!68932 m!63767))

(assert (=> b!68932 m!64581))

(declare-fun m!64589 () Bool)

(assert (=> bm!5886 m!64589))

(declare-fun m!64591 () Bool)

(assert (=> b!68935 m!64591))

(declare-fun m!64593 () Bool)

(assert (=> b!68934 m!64593))

(declare-fun m!64595 () Bool)

(assert (=> b!68930 m!64595))

(assert (=> b!68930 m!64595))

(assert (=> b!68930 m!63767))

(declare-fun m!64597 () Bool)

(assert (=> b!68930 m!64597))

(assert (=> b!68939 m!64595))

(assert (=> b!68939 m!63781))

(assert (=> b!68939 m!63781))

(declare-fun m!64599 () Bool)

(assert (=> b!68939 m!64599))

(assert (=> b!68936 m!63767))

(assert (=> b!68936 m!64131))

(assert (=> bm!5887 m!63767))

(assert (=> bm!5887 m!64141))

(declare-fun m!64601 () Bool)

(assert (=> b!68928 m!64601))

(assert (=> bm!5835 d!14787))

(declare-fun b!68943 () Bool)

(declare-fun e!45153 () Option!135)

(assert (=> b!68943 (= e!45153 (getValueByKey!129 (t!4964 (toList!708 lt!29853)) (_1!1056 lt!29680)))))

(declare-fun b!68941 () Bool)

(declare-fun e!45152 () Option!135)

(assert (=> b!68941 (= e!45152 (Some!134 (_2!1056 (h!2051 (toList!708 lt!29853)))))))

(declare-fun b!68944 () Bool)

(assert (=> b!68944 (= e!45153 None!133)))

(declare-fun d!14789 () Bool)

(declare-fun c!9798 () Bool)

(assert (=> d!14789 (= c!9798 (and ((_ is Cons!1466) (toList!708 lt!29853)) (= (_1!1056 (h!2051 (toList!708 lt!29853))) (_1!1056 lt!29680))))))

(assert (=> d!14789 (= (getValueByKey!129 (toList!708 lt!29853) (_1!1056 lt!29680)) e!45152)))

(declare-fun b!68942 () Bool)

(assert (=> b!68942 (= e!45152 e!45153)))

(declare-fun c!9799 () Bool)

(assert (=> b!68942 (= c!9799 (and ((_ is Cons!1466) (toList!708 lt!29853)) (not (= (_1!1056 (h!2051 (toList!708 lt!29853))) (_1!1056 lt!29680)))))))

(assert (= (and d!14789 c!9798) b!68941))

(assert (= (and d!14789 (not c!9798)) b!68942))

(assert (= (and b!68942 c!9799) b!68943))

(assert (= (and b!68942 (not c!9799)) b!68944))

(declare-fun m!64603 () Bool)

(assert (=> b!68943 m!64603))

(assert (=> b!68475 d!14789))

(declare-fun d!14791 () Bool)

(declare-fun e!45155 () Bool)

(assert (=> d!14791 e!45155))

(declare-fun res!37028 () Bool)

(assert (=> d!14791 (=> res!37028 e!45155)))

(declare-fun lt!30209 () Bool)

(assert (=> d!14791 (= res!37028 (not lt!30209))))

(declare-fun lt!30208 () Bool)

(assert (=> d!14791 (= lt!30209 lt!30208)))

(declare-fun lt!30207 () Unit!1898)

(declare-fun e!45154 () Unit!1898)

(assert (=> d!14791 (= lt!30207 e!45154)))

(declare-fun c!9800 () Bool)

(assert (=> d!14791 (= c!9800 lt!30208)))

(assert (=> d!14791 (= lt!30208 (containsKey!133 (toList!708 lt!29835) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!14791 (= (contains!709 lt!29835 #b1000000000000000000000000000000000000000000000000000000000000000) lt!30209)))

(declare-fun b!68945 () Bool)

(declare-fun lt!30206 () Unit!1898)

(assert (=> b!68945 (= e!45154 lt!30206)))

(assert (=> b!68945 (= lt!30206 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 lt!29835) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!68945 (isDefined!83 (getValueByKey!129 (toList!708 lt!29835) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!68946 () Bool)

(declare-fun Unit!1921 () Unit!1898)

(assert (=> b!68946 (= e!45154 Unit!1921)))

(declare-fun b!68947 () Bool)

(assert (=> b!68947 (= e!45155 (isDefined!83 (getValueByKey!129 (toList!708 lt!29835) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14791 c!9800) b!68945))

(assert (= (and d!14791 (not c!9800)) b!68946))

(assert (= (and d!14791 (not res!37028)) b!68947))

(declare-fun m!64605 () Bool)

(assert (=> d!14791 m!64605))

(declare-fun m!64607 () Bool)

(assert (=> b!68945 m!64607))

(declare-fun m!64609 () Bool)

(assert (=> b!68945 m!64609))

(assert (=> b!68945 m!64609))

(declare-fun m!64611 () Bool)

(assert (=> b!68945 m!64611))

(assert (=> b!68947 m!64609))

(assert (=> b!68947 m!64609))

(assert (=> b!68947 m!64611))

(assert (=> b!68466 d!14791))

(declare-fun d!14793 () Bool)

(declare-fun e!45157 () Bool)

(assert (=> d!14793 e!45157))

(declare-fun res!37029 () Bool)

(assert (=> d!14793 (=> res!37029 e!45157)))

(declare-fun lt!30213 () Bool)

(assert (=> d!14793 (= res!37029 (not lt!30213))))

(declare-fun lt!30212 () Bool)

(assert (=> d!14793 (= lt!30213 lt!30212)))

(declare-fun lt!30211 () Unit!1898)

(declare-fun e!45156 () Unit!1898)

(assert (=> d!14793 (= lt!30211 e!45156)))

(declare-fun c!9801 () Bool)

(assert (=> d!14793 (= c!9801 lt!30212)))

(assert (=> d!14793 (= lt!30212 (containsKey!133 (toList!708 lt!29861) (_1!1056 lt!29675)))))

(assert (=> d!14793 (= (contains!709 lt!29861 (_1!1056 lt!29675)) lt!30213)))

(declare-fun b!68948 () Bool)

(declare-fun lt!30210 () Unit!1898)

(assert (=> b!68948 (= e!45156 lt!30210)))

(assert (=> b!68948 (= lt!30210 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 lt!29861) (_1!1056 lt!29675)))))

(assert (=> b!68948 (isDefined!83 (getValueByKey!129 (toList!708 lt!29861) (_1!1056 lt!29675)))))

(declare-fun b!68949 () Bool)

(declare-fun Unit!1922 () Unit!1898)

(assert (=> b!68949 (= e!45156 Unit!1922)))

(declare-fun b!68950 () Bool)

(assert (=> b!68950 (= e!45157 (isDefined!83 (getValueByKey!129 (toList!708 lt!29861) (_1!1056 lt!29675))))))

(assert (= (and d!14793 c!9801) b!68948))

(assert (= (and d!14793 (not c!9801)) b!68949))

(assert (= (and d!14793 (not res!37029)) b!68950))

(declare-fun m!64613 () Bool)

(assert (=> d!14793 m!64613))

(declare-fun m!64615 () Bool)

(assert (=> b!68948 m!64615))

(assert (=> b!68948 m!64057))

(assert (=> b!68948 m!64057))

(declare-fun m!64617 () Bool)

(assert (=> b!68948 m!64617))

(assert (=> b!68950 m!64057))

(assert (=> b!68950 m!64057))

(assert (=> b!68950 m!64617))

(assert (=> d!14667 d!14793))

(declare-fun b!68953 () Bool)

(declare-fun e!45159 () Option!135)

(assert (=> b!68953 (= e!45159 (getValueByKey!129 (t!4964 lt!29859) (_1!1056 lt!29675)))))

(declare-fun b!68951 () Bool)

(declare-fun e!45158 () Option!135)

(assert (=> b!68951 (= e!45158 (Some!134 (_2!1056 (h!2051 lt!29859))))))

(declare-fun b!68954 () Bool)

(assert (=> b!68954 (= e!45159 None!133)))

(declare-fun d!14795 () Bool)

(declare-fun c!9802 () Bool)

(assert (=> d!14795 (= c!9802 (and ((_ is Cons!1466) lt!29859) (= (_1!1056 (h!2051 lt!29859)) (_1!1056 lt!29675))))))

(assert (=> d!14795 (= (getValueByKey!129 lt!29859 (_1!1056 lt!29675)) e!45158)))

(declare-fun b!68952 () Bool)

(assert (=> b!68952 (= e!45158 e!45159)))

(declare-fun c!9803 () Bool)

(assert (=> b!68952 (= c!9803 (and ((_ is Cons!1466) lt!29859) (not (= (_1!1056 (h!2051 lt!29859)) (_1!1056 lt!29675)))))))

(assert (= (and d!14795 c!9802) b!68951))

(assert (= (and d!14795 (not c!9802)) b!68952))

(assert (= (and b!68952 c!9803) b!68953))

(assert (= (and b!68952 (not c!9803)) b!68954))

(declare-fun m!64619 () Bool)

(assert (=> b!68953 m!64619))

(assert (=> d!14667 d!14795))

(declare-fun d!14797 () Bool)

(assert (=> d!14797 (= (getValueByKey!129 lt!29859 (_1!1056 lt!29675)) (Some!134 (_2!1056 lt!29675)))))

(declare-fun lt!30214 () Unit!1898)

(assert (=> d!14797 (= lt!30214 (choose!390 lt!29859 (_1!1056 lt!29675) (_2!1056 lt!29675)))))

(declare-fun e!45160 () Bool)

(assert (=> d!14797 e!45160))

(declare-fun res!37030 () Bool)

(assert (=> d!14797 (=> (not res!37030) (not e!45160))))

(assert (=> d!14797 (= res!37030 (isStrictlySorted!285 lt!29859))))

(assert (=> d!14797 (= (lemmaContainsTupThenGetReturnValue!49 lt!29859 (_1!1056 lt!29675) (_2!1056 lt!29675)) lt!30214)))

(declare-fun b!68955 () Bool)

(declare-fun res!37031 () Bool)

(assert (=> b!68955 (=> (not res!37031) (not e!45160))))

(assert (=> b!68955 (= res!37031 (containsKey!133 lt!29859 (_1!1056 lt!29675)))))

(declare-fun b!68956 () Bool)

(assert (=> b!68956 (= e!45160 (contains!711 lt!29859 (tuple2!2091 (_1!1056 lt!29675) (_2!1056 lt!29675))))))

(assert (= (and d!14797 res!37030) b!68955))

(assert (= (and b!68955 res!37031) b!68956))

(assert (=> d!14797 m!64051))

(declare-fun m!64621 () Bool)

(assert (=> d!14797 m!64621))

(declare-fun m!64623 () Bool)

(assert (=> d!14797 m!64623))

(declare-fun m!64625 () Bool)

(assert (=> b!68955 m!64625))

(declare-fun m!64627 () Bool)

(assert (=> b!68956 m!64627))

(assert (=> d!14667 d!14797))

(declare-fun b!68957 () Bool)

(declare-fun e!45164 () List!1470)

(declare-fun call!5894 () List!1470)

(assert (=> b!68957 (= e!45164 call!5894)))

(declare-fun c!9804 () Bool)

(declare-fun b!68958 () Bool)

(assert (=> b!68958 (= c!9804 (and ((_ is Cons!1466) (toList!708 (+!89 lt!29682 lt!29680))) (bvsgt (_1!1056 (h!2051 (toList!708 (+!89 lt!29682 lt!29680)))) (_1!1056 lt!29675))))))

(declare-fun e!45162 () List!1470)

(assert (=> b!68958 (= e!45162 e!45164)))

(declare-fun b!68959 () Bool)

(assert (=> b!68959 (= e!45164 call!5894)))

(declare-fun b!68961 () Bool)

(declare-fun call!5893 () List!1470)

(assert (=> b!68961 (= e!45162 call!5893)))

(declare-fun bm!5890 () Bool)

(declare-fun call!5895 () List!1470)

(assert (=> bm!5890 (= call!5893 call!5895)))

(declare-fun bm!5891 () Bool)

(assert (=> bm!5891 (= call!5894 call!5893)))

(declare-fun b!68962 () Bool)

(declare-fun e!45161 () List!1470)

(assert (=> b!68962 (= e!45161 e!45162)))

(declare-fun c!9805 () Bool)

(assert (=> b!68962 (= c!9805 (and ((_ is Cons!1466) (toList!708 (+!89 lt!29682 lt!29680))) (= (_1!1056 (h!2051 (toList!708 (+!89 lt!29682 lt!29680)))) (_1!1056 lt!29675))))))

(declare-fun e!45163 () List!1470)

(declare-fun bm!5892 () Bool)

(declare-fun c!9807 () Bool)

(assert (=> bm!5892 (= call!5895 ($colon$colon!63 e!45163 (ite c!9807 (h!2051 (toList!708 (+!89 lt!29682 lt!29680))) (tuple2!2091 (_1!1056 lt!29675) (_2!1056 lt!29675)))))))

(declare-fun c!9806 () Bool)

(assert (=> bm!5892 (= c!9806 c!9807)))

(declare-fun b!68963 () Bool)

(declare-fun res!37033 () Bool)

(declare-fun e!45165 () Bool)

(assert (=> b!68963 (=> (not res!37033) (not e!45165))))

(declare-fun lt!30215 () List!1470)

(assert (=> b!68963 (= res!37033 (containsKey!133 lt!30215 (_1!1056 lt!29675)))))

(declare-fun b!68964 () Bool)

(assert (=> b!68964 (= e!45165 (contains!711 lt!30215 (tuple2!2091 (_1!1056 lt!29675) (_2!1056 lt!29675))))))

(declare-fun b!68965 () Bool)

(assert (=> b!68965 (= e!45163 (ite c!9805 (t!4964 (toList!708 (+!89 lt!29682 lt!29680))) (ite c!9804 (Cons!1466 (h!2051 (toList!708 (+!89 lt!29682 lt!29680))) (t!4964 (toList!708 (+!89 lt!29682 lt!29680)))) Nil!1467)))))

(declare-fun b!68966 () Bool)

(assert (=> b!68966 (= e!45161 call!5895)))

(declare-fun d!14799 () Bool)

(assert (=> d!14799 e!45165))

(declare-fun res!37032 () Bool)

(assert (=> d!14799 (=> (not res!37032) (not e!45165))))

(assert (=> d!14799 (= res!37032 (isStrictlySorted!285 lt!30215))))

(assert (=> d!14799 (= lt!30215 e!45161)))

(assert (=> d!14799 (= c!9807 (and ((_ is Cons!1466) (toList!708 (+!89 lt!29682 lt!29680))) (bvslt (_1!1056 (h!2051 (toList!708 (+!89 lt!29682 lt!29680)))) (_1!1056 lt!29675))))))

(assert (=> d!14799 (isStrictlySorted!285 (toList!708 (+!89 lt!29682 lt!29680)))))

(assert (=> d!14799 (= (insertStrictlySorted!52 (toList!708 (+!89 lt!29682 lt!29680)) (_1!1056 lt!29675) (_2!1056 lt!29675)) lt!30215)))

(declare-fun b!68960 () Bool)

(assert (=> b!68960 (= e!45163 (insertStrictlySorted!52 (t!4964 (toList!708 (+!89 lt!29682 lt!29680))) (_1!1056 lt!29675) (_2!1056 lt!29675)))))

(assert (= (and d!14799 c!9807) b!68966))

(assert (= (and d!14799 (not c!9807)) b!68962))

(assert (= (and b!68962 c!9805) b!68961))

(assert (= (and b!68962 (not c!9805)) b!68958))

(assert (= (and b!68958 c!9804) b!68959))

(assert (= (and b!68958 (not c!9804)) b!68957))

(assert (= (or b!68959 b!68957) bm!5891))

(assert (= (or b!68961 bm!5891) bm!5890))

(assert (= (or b!68966 bm!5890) bm!5892))

(assert (= (and bm!5892 c!9806) b!68960))

(assert (= (and bm!5892 (not c!9806)) b!68965))

(assert (= (and d!14799 res!37032) b!68963))

(assert (= (and b!68963 res!37033) b!68964))

(declare-fun m!64629 () Bool)

(assert (=> d!14799 m!64629))

(declare-fun m!64631 () Bool)

(assert (=> d!14799 m!64631))

(declare-fun m!64633 () Bool)

(assert (=> b!68964 m!64633))

(declare-fun m!64635 () Bool)

(assert (=> b!68963 m!64635))

(declare-fun m!64637 () Bool)

(assert (=> bm!5892 m!64637))

(declare-fun m!64639 () Bool)

(assert (=> b!68960 m!64639))

(assert (=> d!14667 d!14799))

(declare-fun d!14801 () Bool)

(declare-fun e!45168 () Bool)

(assert (=> d!14801 e!45168))

(declare-fun c!9810 () Bool)

(assert (=> d!14801 (= c!9810 (and (not (= (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!14801 true))

(declare-fun _$29!84 () Unit!1898)

(assert (=> d!14801 (= (choose!388 (_keys!3810 (v!2485 (underlying!247 thiss!992))) (_values!2150 (v!2485 (underlying!247 thiss!992))) (mask!6111 (v!2485 (underlying!247 thiss!992))) (extraKeys!2034 (v!2485 (underlying!247 thiss!992))) (zeroValue!2073 (v!2485 (underlying!247 thiss!992))) (minValue!2073 (v!2485 (underlying!247 thiss!992))) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2167 (v!2485 (underlying!247 thiss!992)))) _$29!84)))

(declare-fun b!68971 () Bool)

(assert (=> b!68971 (= e!45168 (arrayContainsKey!0 (_keys!3810 (v!2485 (underlying!247 thiss!992))) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!68972 () Bool)

(assert (=> b!68972 (= e!45168 (ite (= (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2034 (v!2485 (underlying!247 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2034 (v!2485 (underlying!247 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!14801 c!9810) b!68971))

(assert (= (and d!14801 (not c!9810)) b!68972))

(assert (=> b!68971 m!63767))

(assert (=> b!68971 m!63815))

(assert (=> d!14681 d!14801))

(assert (=> d!14681 d!14669))

(declare-fun d!14803 () Bool)

(declare-fun e!45171 () Bool)

(assert (=> d!14803 e!45171))

(declare-fun res!37036 () Bool)

(assert (=> d!14803 (=> (not res!37036) (not e!45171))))

(assert (=> d!14803 (= res!37036 (and (bvsge (index!3078 lt!29944) #b00000000000000000000000000000000) (bvslt (index!3078 lt!29944) (size!2065 (_keys!3810 newMap!16)))))))

(declare-fun lt!30218 () Unit!1898)

(declare-fun choose!393 (array!3831 array!3833 (_ BitVec 32) (_ BitVec 32) V!2921 V!2921 (_ BitVec 32) Int) Unit!1898)

(assert (=> d!14803 (= lt!30218 (choose!393 (_keys!3810 newMap!16) lt!29960 (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (index!3078 lt!29944) (defaultEntry!2167 newMap!16)))))

(assert (=> d!14803 (validMask!0 (mask!6111 newMap!16))))

(assert (=> d!14803 (= (lemmaValidKeyInArrayIsInListMap!81 (_keys!3810 newMap!16) lt!29960 (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (index!3078 lt!29944) (defaultEntry!2167 newMap!16)) lt!30218)))

(declare-fun b!68975 () Bool)

(assert (=> b!68975 (= e!45171 (contains!709 (getCurrentListMap!403 (_keys!3810 newMap!16) lt!29960 (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) (select (arr!1828 (_keys!3810 newMap!16)) (index!3078 lt!29944))))))

(assert (= (and d!14803 res!37036) b!68975))

(declare-fun m!64641 () Bool)

(assert (=> d!14803 m!64641))

(assert (=> d!14803 m!64193))

(assert (=> b!68975 m!64155))

(assert (=> b!68975 m!64105))

(assert (=> b!68975 m!64155))

(assert (=> b!68975 m!64105))

(declare-fun m!64643 () Bool)

(assert (=> b!68975 m!64643))

(assert (=> b!68634 d!14803))

(declare-fun d!14805 () Bool)

(declare-fun e!45174 () Bool)

(assert (=> d!14805 e!45174))

(declare-fun res!37039 () Bool)

(assert (=> d!14805 (=> (not res!37039) (not e!45174))))

(assert (=> d!14805 (= res!37039 (and (bvsge (index!3078 lt!29944) #b00000000000000000000000000000000) (bvslt (index!3078 lt!29944) (size!2066 (_values!2150 newMap!16)))))))

(declare-fun lt!30221 () Unit!1898)

(declare-fun choose!394 (array!3831 array!3833 (_ BitVec 32) (_ BitVec 32) V!2921 V!2921 (_ BitVec 32) (_ BitVec 64) V!2921 Int) Unit!1898)

(assert (=> d!14805 (= lt!30221 (choose!394 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (index!3078 lt!29944) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673 (defaultEntry!2167 newMap!16)))))

(assert (=> d!14805 (validMask!0 (mask!6111 newMap!16))))

(assert (=> d!14805 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!22 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (index!3078 lt!29944) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673 (defaultEntry!2167 newMap!16)) lt!30221)))

(declare-fun b!68978 () Bool)

(assert (=> b!68978 (= e!45174 (= (+!89 (getCurrentListMap!403 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)) (getCurrentListMap!403 (_keys!3810 newMap!16) (array!3834 (store (arr!1829 (_values!2150 newMap!16)) (index!3078 lt!29944) (ValueCellFull!884 lt!29673)) (size!2066 (_values!2150 newMap!16))) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16))))))

(assert (= (and d!14805 res!37039) b!68978))

(assert (=> d!14805 m!63767))

(declare-fun m!64645 () Bool)

(assert (=> d!14805 m!64645))

(assert (=> d!14805 m!64193))

(assert (=> b!68978 m!63945))

(assert (=> b!68978 m!63945))

(assert (=> b!68978 m!64583))

(assert (=> b!68978 m!64111))

(declare-fun m!64647 () Bool)

(assert (=> b!68978 m!64647))

(assert (=> b!68634 d!14805))

(declare-fun d!14807 () Bool)

(declare-fun e!45176 () Bool)

(assert (=> d!14807 e!45176))

(declare-fun res!37040 () Bool)

(assert (=> d!14807 (=> res!37040 e!45176)))

(declare-fun lt!30225 () Bool)

(assert (=> d!14807 (= res!37040 (not lt!30225))))

(declare-fun lt!30224 () Bool)

(assert (=> d!14807 (= lt!30225 lt!30224)))

(declare-fun lt!30223 () Unit!1898)

(declare-fun e!45175 () Unit!1898)

(assert (=> d!14807 (= lt!30223 e!45175)))

(declare-fun c!9811 () Bool)

(assert (=> d!14807 (= c!9811 lt!30224)))

(assert (=> d!14807 (= lt!30224 (containsKey!133 (toList!708 call!5830) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))

(assert (=> d!14807 (= (contains!709 call!5830 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) lt!30225)))

(declare-fun b!68979 () Bool)

(declare-fun lt!30222 () Unit!1898)

(assert (=> b!68979 (= e!45175 lt!30222)))

(assert (=> b!68979 (= lt!30222 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 call!5830) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))

(assert (=> b!68979 (isDefined!83 (getValueByKey!129 (toList!708 call!5830) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))

(declare-fun b!68980 () Bool)

(declare-fun Unit!1923 () Unit!1898)

(assert (=> b!68980 (= e!45175 Unit!1923)))

(declare-fun b!68981 () Bool)

(assert (=> b!68981 (= e!45176 (isDefined!83 (getValueByKey!129 (toList!708 call!5830) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355))))))

(assert (= (and d!14807 c!9811) b!68979))

(assert (= (and d!14807 (not c!9811)) b!68980))

(assert (= (and d!14807 (not res!37040)) b!68981))

(assert (=> d!14807 m!63767))

(declare-fun m!64649 () Bool)

(assert (=> d!14807 m!64649))

(assert (=> b!68979 m!63767))

(declare-fun m!64651 () Bool)

(assert (=> b!68979 m!64651))

(assert (=> b!68979 m!63767))

(declare-fun m!64653 () Bool)

(assert (=> b!68979 m!64653))

(assert (=> b!68979 m!64653))

(declare-fun m!64655 () Bool)

(assert (=> b!68979 m!64655))

(assert (=> b!68981 m!63767))

(assert (=> b!68981 m!64653))

(assert (=> b!68981 m!64653))

(assert (=> b!68981 m!64655))

(assert (=> b!68634 d!14807))

(declare-fun d!14809 () Bool)

(declare-fun res!37043 () Bool)

(declare-fun e!45177 () Bool)

(assert (=> d!14809 (=> res!37043 e!45177)))

(assert (=> d!14809 (= res!37043 (bvsge #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))))))

(assert (=> d!14809 (= (arrayNoDuplicates!0 (_keys!3810 newMap!16) #b00000000000000000000000000000000 Nil!1468) e!45177)))

(declare-fun b!68982 () Bool)

(declare-fun e!45180 () Bool)

(declare-fun call!5896 () Bool)

(assert (=> b!68982 (= e!45180 call!5896)))

(declare-fun b!68983 () Bool)

(declare-fun e!45179 () Bool)

(assert (=> b!68983 (= e!45179 (contains!712 Nil!1468 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!5893 () Bool)

(declare-fun c!9812 () Bool)

(assert (=> bm!5893 (= call!5896 (arrayNoDuplicates!0 (_keys!3810 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!9812 (Cons!1467 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000) Nil!1468) Nil!1468)))))

(declare-fun b!68984 () Bool)

(declare-fun e!45178 () Bool)

(assert (=> b!68984 (= e!45177 e!45178)))

(declare-fun res!37042 () Bool)

(assert (=> b!68984 (=> (not res!37042) (not e!45178))))

(assert (=> b!68984 (= res!37042 (not e!45179))))

(declare-fun res!37041 () Bool)

(assert (=> b!68984 (=> (not res!37041) (not e!45179))))

(assert (=> b!68984 (= res!37041 (validKeyInArray!0 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!68985 () Bool)

(assert (=> b!68985 (= e!45178 e!45180)))

(assert (=> b!68985 (= c!9812 (validKeyInArray!0 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!68986 () Bool)

(assert (=> b!68986 (= e!45180 call!5896)))

(assert (= (and d!14809 (not res!37043)) b!68984))

(assert (= (and b!68984 res!37041) b!68983))

(assert (= (and b!68984 res!37042) b!68985))

(assert (= (and b!68985 c!9812) b!68982))

(assert (= (and b!68985 (not c!9812)) b!68986))

(assert (= (or b!68982 b!68986) bm!5893))

(assert (=> b!68983 m!64177))

(assert (=> b!68983 m!64177))

(declare-fun m!64657 () Bool)

(assert (=> b!68983 m!64657))

(assert (=> bm!5893 m!64177))

(declare-fun m!64659 () Bool)

(assert (=> bm!5893 m!64659))

(assert (=> b!68984 m!64177))

(assert (=> b!68984 m!64177))

(assert (=> b!68984 m!64187))

(assert (=> b!68985 m!64177))

(assert (=> b!68985 m!64177))

(assert (=> b!68985 m!64187))

(assert (=> b!68365 d!14809))

(declare-fun b!68987 () Bool)

(declare-fun e!45186 () Bool)

(declare-fun lt!30226 () ListLongMap!1385)

(assert (=> b!68987 (= e!45186 (isEmpty!314 lt!30226))))

(declare-fun b!68988 () Bool)

(declare-fun e!45184 () Bool)

(declare-fun e!45182 () Bool)

(assert (=> b!68988 (= e!45184 e!45182)))

(assert (=> b!68988 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2065 (_keys!3810 (v!2485 (underlying!247 thiss!992))))))))

(declare-fun res!37045 () Bool)

(assert (=> b!68988 (= res!37045 (contains!709 lt!30226 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!68988 (=> (not res!37045) (not e!45182))))

(declare-fun b!68989 () Bool)

(declare-fun e!45185 () ListLongMap!1385)

(declare-fun e!45183 () ListLongMap!1385)

(assert (=> b!68989 (= e!45185 e!45183)))

(declare-fun c!9816 () Bool)

(assert (=> b!68989 (= c!9816 (validKeyInArray!0 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!68990 () Bool)

(declare-fun lt!30231 () Unit!1898)

(declare-fun lt!30232 () Unit!1898)

(assert (=> b!68990 (= lt!30231 lt!30232)))

(declare-fun lt!30230 () (_ BitVec 64))

(declare-fun lt!30229 () ListLongMap!1385)

(declare-fun lt!30227 () V!2921)

(declare-fun lt!30228 () (_ BitVec 64))

(assert (=> b!68990 (not (contains!709 (+!89 lt!30229 (tuple2!2091 lt!30228 lt!30227)) lt!30230))))

(assert (=> b!68990 (= lt!30232 (addStillNotContains!23 lt!30229 lt!30228 lt!30227 lt!30230))))

(assert (=> b!68990 (= lt!30230 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!68990 (= lt!30227 (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!68990 (= lt!30228 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(declare-fun call!5897 () ListLongMap!1385)

(assert (=> b!68990 (= lt!30229 call!5897)))

(assert (=> b!68990 (= e!45183 (+!89 call!5897 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!68991 () Bool)

(assert (=> b!68991 (= e!45186 (= lt!30226 (getCurrentListMapNoExtraKeys!53 (_keys!3810 (v!2485 (underlying!247 thiss!992))) (_values!2150 (v!2485 (underlying!247 thiss!992))) (mask!6111 (v!2485 (underlying!247 thiss!992))) (extraKeys!2034 (v!2485 (underlying!247 thiss!992))) (zeroValue!2073 (v!2485 (underlying!247 thiss!992))) (minValue!2073 (v!2485 (underlying!247 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))))))))

(declare-fun b!68992 () Bool)

(assert (=> b!68992 (= e!45185 (ListLongMap!1386 Nil!1467))))

(declare-fun b!68993 () Bool)

(declare-fun e!45181 () Bool)

(assert (=> b!68993 (= e!45181 e!45184)))

(declare-fun c!9813 () Bool)

(declare-fun e!45187 () Bool)

(assert (=> b!68993 (= c!9813 e!45187)))

(declare-fun res!37047 () Bool)

(assert (=> b!68993 (=> (not res!37047) (not e!45187))))

(assert (=> b!68993 (= res!37047 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2065 (_keys!3810 (v!2485 (underlying!247 thiss!992))))))))

(declare-fun b!68994 () Bool)

(declare-fun res!37044 () Bool)

(assert (=> b!68994 (=> (not res!37044) (not e!45181))))

(assert (=> b!68994 (= res!37044 (not (contains!709 lt!30226 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!68995 () Bool)

(assert (=> b!68995 (= e!45184 e!45186)))

(declare-fun c!9814 () Bool)

(assert (=> b!68995 (= c!9814 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2065 (_keys!3810 (v!2485 (underlying!247 thiss!992))))))))

(declare-fun d!14811 () Bool)

(assert (=> d!14811 e!45181))

(declare-fun res!37046 () Bool)

(assert (=> d!14811 (=> (not res!37046) (not e!45181))))

(assert (=> d!14811 (= res!37046 (not (contains!709 lt!30226 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!14811 (= lt!30226 e!45185)))

(declare-fun c!9815 () Bool)

(assert (=> d!14811 (= c!9815 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2065 (_keys!3810 (v!2485 (underlying!247 thiss!992))))))))

(assert (=> d!14811 (validMask!0 (mask!6111 (v!2485 (underlying!247 thiss!992))))))

(assert (=> d!14811 (= (getCurrentListMapNoExtraKeys!53 (_keys!3810 (v!2485 (underlying!247 thiss!992))) (_values!2150 (v!2485 (underlying!247 thiss!992))) (mask!6111 (v!2485 (underlying!247 thiss!992))) (extraKeys!2034 (v!2485 (underlying!247 thiss!992))) (zeroValue!2073 (v!2485 (underlying!247 thiss!992))) (minValue!2073 (v!2485 (underlying!247 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2167 (v!2485 (underlying!247 thiss!992)))) lt!30226)))

(declare-fun bm!5894 () Bool)

(assert (=> bm!5894 (= call!5897 (getCurrentListMapNoExtraKeys!53 (_keys!3810 (v!2485 (underlying!247 thiss!992))) (_values!2150 (v!2485 (underlying!247 thiss!992))) (mask!6111 (v!2485 (underlying!247 thiss!992))) (extraKeys!2034 (v!2485 (underlying!247 thiss!992))) (zeroValue!2073 (v!2485 (underlying!247 thiss!992))) (minValue!2073 (v!2485 (underlying!247 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2167 (v!2485 (underlying!247 thiss!992)))))))

(declare-fun b!68996 () Bool)

(assert (=> b!68996 (= e!45183 call!5897)))

(declare-fun b!68997 () Bool)

(assert (=> b!68997 (= e!45187 (validKeyInArray!0 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!68997 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!68998 () Bool)

(assert (=> b!68998 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2065 (_keys!3810 (v!2485 (underlying!247 thiss!992))))))))

(assert (=> b!68998 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2066 (_values!2150 (v!2485 (underlying!247 thiss!992))))))))

(assert (=> b!68998 (= e!45182 (= (apply!73 lt!30226 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!14811 c!9815) b!68992))

(assert (= (and d!14811 (not c!9815)) b!68989))

(assert (= (and b!68989 c!9816) b!68990))

(assert (= (and b!68989 (not c!9816)) b!68996))

(assert (= (or b!68990 b!68996) bm!5894))

(assert (= (and d!14811 res!37046) b!68994))

(assert (= (and b!68994 res!37044) b!68993))

(assert (= (and b!68993 res!37047) b!68997))

(assert (= (and b!68993 c!9813) b!68988))

(assert (= (and b!68993 (not c!9813)) b!68995))

(assert (= (and b!68988 res!37045) b!68998))

(assert (= (and b!68995 c!9814) b!68991))

(assert (= (and b!68995 (not c!9814)) b!68987))

(declare-fun b_lambda!3073 () Bool)

(assert (=> (not b_lambda!3073) (not b!68990)))

(assert (=> b!68990 t!4961))

(declare-fun b_and!4229 () Bool)

(assert (= b_and!4225 (and (=> t!4961 result!2595) b_and!4229)))

(assert (=> b!68990 t!4963))

(declare-fun b_and!4231 () Bool)

(assert (= b_and!4227 (and (=> t!4963 result!2599) b_and!4231)))

(declare-fun b_lambda!3075 () Bool)

(assert (=> (not b_lambda!3075) (not b!68998)))

(assert (=> b!68998 t!4961))

(declare-fun b_and!4233 () Bool)

(assert (= b_and!4229 (and (=> t!4961 result!2595) b_and!4233)))

(assert (=> b!68998 t!4963))

(declare-fun b_and!4235 () Bool)

(assert (= b_and!4231 (and (=> t!4963 result!2599) b_and!4235)))

(assert (=> b!68997 m!64539))

(assert (=> b!68997 m!64539))

(declare-fun m!64661 () Bool)

(assert (=> b!68997 m!64661))

(assert (=> b!68989 m!64539))

(assert (=> b!68989 m!64539))

(assert (=> b!68989 m!64661))

(declare-fun m!64663 () Bool)

(assert (=> bm!5894 m!64663))

(assert (=> b!68991 m!64663))

(assert (=> b!68988 m!64539))

(assert (=> b!68988 m!64539))

(declare-fun m!64665 () Bool)

(assert (=> b!68988 m!64665))

(declare-fun m!64667 () Bool)

(assert (=> b!68998 m!64667))

(assert (=> b!68998 m!63771))

(declare-fun m!64669 () Bool)

(assert (=> b!68998 m!64669))

(assert (=> b!68998 m!64539))

(declare-fun m!64671 () Bool)

(assert (=> b!68998 m!64671))

(assert (=> b!68998 m!63771))

(assert (=> b!68998 m!64667))

(assert (=> b!68998 m!64539))

(declare-fun m!64673 () Bool)

(assert (=> b!68987 m!64673))

(declare-fun m!64675 () Bool)

(assert (=> b!68990 m!64675))

(assert (=> b!68990 m!64667))

(assert (=> b!68990 m!63771))

(assert (=> b!68990 m!64669))

(assert (=> b!68990 m!63771))

(declare-fun m!64677 () Bool)

(assert (=> b!68990 m!64677))

(declare-fun m!64679 () Bool)

(assert (=> b!68990 m!64679))

(assert (=> b!68990 m!64667))

(assert (=> b!68990 m!64677))

(declare-fun m!64681 () Bool)

(assert (=> b!68990 m!64681))

(assert (=> b!68990 m!64539))

(declare-fun m!64683 () Bool)

(assert (=> d!14811 m!64683))

(assert (=> d!14811 m!63787))

(declare-fun m!64685 () Bool)

(assert (=> b!68994 m!64685))

(assert (=> bm!5764 d!14811))

(declare-fun d!14813 () Bool)

(declare-fun e!45190 () Bool)

(assert (=> d!14813 e!45190))

(declare-fun res!37052 () Bool)

(assert (=> d!14813 (=> (not res!37052) (not e!45190))))

(declare-fun lt!30237 () SeekEntryResult!237)

(assert (=> d!14813 (= res!37052 ((_ is Found!237) lt!30237))))

(assert (=> d!14813 (= lt!30237 (seekEntryOrOpen!0 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (_keys!3810 newMap!16) (mask!6111 newMap!16)))))

(declare-fun lt!30238 () Unit!1898)

(declare-fun choose!395 (array!3831 array!3833 (_ BitVec 32) (_ BitVec 32) V!2921 V!2921 (_ BitVec 64) Int) Unit!1898)

(assert (=> d!14813 (= lt!30238 (choose!395 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (defaultEntry!2167 newMap!16)))))

(assert (=> d!14813 (validMask!0 (mask!6111 newMap!16))))

(assert (=> d!14813 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!22 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (defaultEntry!2167 newMap!16)) lt!30238)))

(declare-fun b!69003 () Bool)

(declare-fun res!37053 () Bool)

(assert (=> b!69003 (=> (not res!37053) (not e!45190))))

(assert (=> b!69003 (= res!37053 (inRange!0 (index!3078 lt!30237) (mask!6111 newMap!16)))))

(declare-fun b!69004 () Bool)

(assert (=> b!69004 (= e!45190 (= (select (arr!1828 (_keys!3810 newMap!16)) (index!3078 lt!30237)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))

(assert (=> b!69004 (and (bvsge (index!3078 lt!30237) #b00000000000000000000000000000000) (bvslt (index!3078 lt!30237) (size!2065 (_keys!3810 newMap!16))))))

(assert (= (and d!14813 res!37052) b!69003))

(assert (= (and b!69003 res!37053) b!69004))

(assert (=> d!14813 m!63767))

(assert (=> d!14813 m!64121))

(assert (=> d!14813 m!63767))

(declare-fun m!64687 () Bool)

(assert (=> d!14813 m!64687))

(assert (=> d!14813 m!64193))

(declare-fun m!64689 () Bool)

(assert (=> b!69003 m!64689))

(declare-fun m!64691 () Bool)

(assert (=> b!69004 m!64691))

(assert (=> bm!5829 d!14813))

(declare-fun d!14815 () Bool)

(assert (=> d!14815 (= (get!1128 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) from!355) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!68434 d!14815))

(declare-fun b!69007 () Bool)

(declare-fun e!45192 () Option!135)

(assert (=> b!69007 (= e!45192 (getValueByKey!129 (t!4964 (toList!708 lt!29861)) (_1!1056 lt!29675)))))

(declare-fun b!69005 () Bool)

(declare-fun e!45191 () Option!135)

(assert (=> b!69005 (= e!45191 (Some!134 (_2!1056 (h!2051 (toList!708 lt!29861)))))))

(declare-fun b!69008 () Bool)

(assert (=> b!69008 (= e!45192 None!133)))

(declare-fun d!14817 () Bool)

(declare-fun c!9817 () Bool)

(assert (=> d!14817 (= c!9817 (and ((_ is Cons!1466) (toList!708 lt!29861)) (= (_1!1056 (h!2051 (toList!708 lt!29861))) (_1!1056 lt!29675))))))

(assert (=> d!14817 (= (getValueByKey!129 (toList!708 lt!29861) (_1!1056 lt!29675)) e!45191)))

(declare-fun b!69006 () Bool)

(assert (=> b!69006 (= e!45191 e!45192)))

(declare-fun c!9818 () Bool)

(assert (=> b!69006 (= c!9818 (and ((_ is Cons!1466) (toList!708 lt!29861)) (not (= (_1!1056 (h!2051 (toList!708 lt!29861))) (_1!1056 lt!29675)))))))

(assert (= (and d!14817 c!9817) b!69005))

(assert (= (and d!14817 (not c!9817)) b!69006))

(assert (= (and b!69006 c!9818) b!69007))

(assert (= (and b!69006 (not c!9818)) b!69008))

(declare-fun m!64693 () Bool)

(assert (=> b!69007 m!64693))

(assert (=> b!68479 d!14817))

(declare-fun d!14819 () Bool)

(declare-fun res!37054 () Bool)

(declare-fun e!45193 () Bool)

(assert (=> d!14819 (=> res!37054 e!45193)))

(assert (=> d!14819 (= res!37054 (= (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))

(assert (=> d!14819 (= (arrayContainsKey!0 (_keys!3810 newMap!16) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) #b00000000000000000000000000000000) e!45193)))

(declare-fun b!69009 () Bool)

(declare-fun e!45194 () Bool)

(assert (=> b!69009 (= e!45193 e!45194)))

(declare-fun res!37055 () Bool)

(assert (=> b!69009 (=> (not res!37055) (not e!45194))))

(assert (=> b!69009 (= res!37055 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2065 (_keys!3810 newMap!16))))))

(declare-fun b!69010 () Bool)

(assert (=> b!69010 (= e!45194 (arrayContainsKey!0 (_keys!3810 newMap!16) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!14819 (not res!37054)) b!69009))

(assert (= (and b!69009 res!37055) b!69010))

(assert (=> d!14819 m!64177))

(assert (=> b!69010 m!63767))

(declare-fun m!64695 () Bool)

(assert (=> b!69010 m!64695))

(assert (=> bm!5831 d!14819))

(assert (=> bm!5838 d!14745))

(assert (=> bm!5759 d!14661))

(declare-fun b!69013 () Bool)

(declare-fun e!45196 () Option!135)

(assert (=> b!69013 (= e!45196 (getValueByKey!129 (t!4964 (toList!708 lt!29857)) (_1!1056 lt!29675)))))

(declare-fun b!69011 () Bool)

(declare-fun e!45195 () Option!135)

(assert (=> b!69011 (= e!45195 (Some!134 (_2!1056 (h!2051 (toList!708 lt!29857)))))))

(declare-fun b!69014 () Bool)

(assert (=> b!69014 (= e!45196 None!133)))

(declare-fun d!14821 () Bool)

(declare-fun c!9819 () Bool)

(assert (=> d!14821 (= c!9819 (and ((_ is Cons!1466) (toList!708 lt!29857)) (= (_1!1056 (h!2051 (toList!708 lt!29857))) (_1!1056 lt!29675))))))

(assert (=> d!14821 (= (getValueByKey!129 (toList!708 lt!29857) (_1!1056 lt!29675)) e!45195)))

(declare-fun b!69012 () Bool)

(assert (=> b!69012 (= e!45195 e!45196)))

(declare-fun c!9820 () Bool)

(assert (=> b!69012 (= c!9820 (and ((_ is Cons!1466) (toList!708 lt!29857)) (not (= (_1!1056 (h!2051 (toList!708 lt!29857))) (_1!1056 lt!29675)))))))

(assert (= (and d!14821 c!9819) b!69011))

(assert (= (and d!14821 (not c!9819)) b!69012))

(assert (= (and b!69012 c!9820) b!69013))

(assert (= (and b!69012 (not c!9820)) b!69014))

(declare-fun m!64697 () Bool)

(assert (=> b!69013 m!64697))

(assert (=> b!68477 d!14821))

(declare-fun b!69015 () Bool)

(declare-fun e!45207 () ListLongMap!1385)

(declare-fun call!5898 () ListLongMap!1385)

(assert (=> b!69015 (= e!45207 call!5898)))

(declare-fun b!69016 () Bool)

(declare-fun e!45204 () Bool)

(declare-fun e!45199 () Bool)

(assert (=> b!69016 (= e!45204 e!45199)))

(declare-fun res!37063 () Bool)

(declare-fun call!5899 () Bool)

(assert (=> b!69016 (= res!37063 call!5899)))

(assert (=> b!69016 (=> (not res!37063) (not e!45199))))

(declare-fun b!69018 () Bool)

(declare-fun e!45205 () Bool)

(declare-fun call!5904 () Bool)

(assert (=> b!69018 (= e!45205 (not call!5904))))

(declare-fun bm!5895 () Bool)

(declare-fun lt!30245 () ListLongMap!1385)

(assert (=> bm!5895 (= call!5899 (contains!709 lt!30245 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69019 () Bool)

(declare-fun c!9822 () Bool)

(assert (=> b!69019 (= c!9822 (and (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!45203 () ListLongMap!1385)

(assert (=> b!69019 (= e!45203 e!45207)))

(declare-fun call!5902 () ListLongMap!1385)

(declare-fun bm!5896 () Bool)

(declare-fun call!5903 () ListLongMap!1385)

(declare-fun c!9821 () Bool)

(declare-fun call!5900 () ListLongMap!1385)

(declare-fun c!9824 () Bool)

(assert (=> bm!5896 (= call!5902 (+!89 (ite c!9824 call!5903 (ite c!9821 call!5900 call!5898)) (ite (or c!9824 c!9821) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))))))

(declare-fun b!69020 () Bool)

(declare-fun e!45201 () Bool)

(assert (=> b!69020 (= e!45201 (validKeyInArray!0 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!69021 () Bool)

(declare-fun res!37061 () Bool)

(declare-fun e!45198 () Bool)

(assert (=> b!69021 (=> (not res!37061) (not e!45198))))

(declare-fun e!45208 () Bool)

(assert (=> b!69021 (= res!37061 e!45208)))

(declare-fun res!37057 () Bool)

(assert (=> b!69021 (=> res!37057 e!45208)))

(assert (=> b!69021 (= res!37057 (not e!45201))))

(declare-fun res!37058 () Bool)

(assert (=> b!69021 (=> (not res!37058) (not e!45201))))

(assert (=> b!69021 (= res!37058 (bvslt #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))))))

(declare-fun b!69022 () Bool)

(declare-fun e!45202 () ListLongMap!1385)

(assert (=> b!69022 (= e!45202 e!45203)))

(assert (=> b!69022 (= c!9821 (and (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!69023 () Bool)

(declare-fun e!45200 () Bool)

(assert (=> b!69023 (= e!45205 e!45200)))

(declare-fun res!37059 () Bool)

(assert (=> b!69023 (= res!37059 call!5904)))

(assert (=> b!69023 (=> (not res!37059) (not e!45200))))

(declare-fun bm!5897 () Bool)

(assert (=> bm!5897 (= call!5900 call!5903)))

(declare-fun b!69024 () Bool)

(declare-fun call!5901 () ListLongMap!1385)

(assert (=> b!69024 (= e!45203 call!5901)))

(declare-fun bm!5898 () Bool)

(assert (=> bm!5898 (= call!5901 call!5902)))

(declare-fun b!69025 () Bool)

(assert (=> b!69025 (= e!45207 call!5901)))

(declare-fun b!69026 () Bool)

(declare-fun res!37062 () Bool)

(assert (=> b!69026 (=> (not res!37062) (not e!45198))))

(assert (=> b!69026 (= res!37062 e!45205)))

(declare-fun c!9825 () Bool)

(assert (=> b!69026 (= c!9825 (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!69027 () Bool)

(assert (=> b!69027 (= e!45200 (= (apply!73 lt!30245 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2073 newMap!16)))))

(declare-fun bm!5899 () Bool)

(assert (=> bm!5899 (= call!5903 (getCurrentListMapNoExtraKeys!53 (_keys!3810 newMap!16) (ite (or c!9716 c!9713) (_values!2150 newMap!16) (array!3834 (store (arr!1829 (_values!2150 newMap!16)) (index!3078 lt!29944) (ValueCellFull!884 lt!29673)) (size!2066 (_values!2150 newMap!16)))) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun b!69028 () Bool)

(assert (=> b!69028 (= e!45199 (= (apply!73 lt!30245 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2073 newMap!16)))))

(declare-fun b!69029 () Bool)

(declare-fun e!45197 () Bool)

(assert (=> b!69029 (= e!45197 (= (apply!73 lt!30245 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)) (get!1126 (select (arr!1829 (ite (or c!9716 c!9713) (_values!2150 newMap!16) (array!3834 (store (arr!1829 (_values!2150 newMap!16)) (index!3078 lt!29944) (ValueCellFull!884 lt!29673)) (size!2066 (_values!2150 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!321 (defaultEntry!2167 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!69029 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2066 (ite (or c!9716 c!9713) (_values!2150 newMap!16) (array!3834 (store (arr!1829 (_values!2150 newMap!16)) (index!3078 lt!29944) (ValueCellFull!884 lt!29673)) (size!2066 (_values!2150 newMap!16)))))))))

(assert (=> b!69029 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))))))

(declare-fun bm!5900 () Bool)

(assert (=> bm!5900 (= call!5898 call!5900)))

(declare-fun d!14823 () Bool)

(assert (=> d!14823 e!45198))

(declare-fun res!37064 () Bool)

(assert (=> d!14823 (=> (not res!37064) (not e!45198))))

(assert (=> d!14823 (= res!37064 (or (bvsge #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))))))))

(declare-fun lt!30247 () ListLongMap!1385)

(assert (=> d!14823 (= lt!30245 lt!30247)))

(declare-fun lt!30257 () Unit!1898)

(declare-fun e!45209 () Unit!1898)

(assert (=> d!14823 (= lt!30257 e!45209)))

(declare-fun c!9826 () Bool)

(declare-fun e!45206 () Bool)

(assert (=> d!14823 (= c!9826 e!45206)))

(declare-fun res!37056 () Bool)

(assert (=> d!14823 (=> (not res!37056) (not e!45206))))

(assert (=> d!14823 (= res!37056 (bvslt #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))))))

(assert (=> d!14823 (= lt!30247 e!45202)))

(assert (=> d!14823 (= c!9824 (and (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!14823 (validMask!0 (mask!6111 newMap!16))))

(assert (=> d!14823 (= (getCurrentListMap!403 (_keys!3810 newMap!16) (ite (or c!9716 c!9713) (_values!2150 newMap!16) (array!3834 (store (arr!1829 (_values!2150 newMap!16)) (index!3078 lt!29944) (ValueCellFull!884 lt!29673)) (size!2066 (_values!2150 newMap!16)))) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) lt!30245)))

(declare-fun b!69017 () Bool)

(assert (=> b!69017 (= e!45206 (validKeyInArray!0 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!69030 () Bool)

(assert (=> b!69030 (= e!45198 e!45204)))

(declare-fun c!9823 () Bool)

(assert (=> b!69030 (= c!9823 (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!69031 () Bool)

(assert (=> b!69031 (= e!45208 e!45197)))

(declare-fun res!37060 () Bool)

(assert (=> b!69031 (=> (not res!37060) (not e!45197))))

(assert (=> b!69031 (= res!37060 (contains!709 lt!30245 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!69031 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))))))

(declare-fun b!69032 () Bool)

(assert (=> b!69032 (= e!45202 (+!89 call!5902 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))))))

(declare-fun b!69033 () Bool)

(assert (=> b!69033 (= e!45204 (not call!5899))))

(declare-fun bm!5901 () Bool)

(assert (=> bm!5901 (= call!5904 (contains!709 lt!30245 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69034 () Bool)

(declare-fun Unit!1924 () Unit!1898)

(assert (=> b!69034 (= e!45209 Unit!1924)))

(declare-fun b!69035 () Bool)

(declare-fun lt!30256 () Unit!1898)

(assert (=> b!69035 (= e!45209 lt!30256)))

(declare-fun lt!30239 () ListLongMap!1385)

(assert (=> b!69035 (= lt!30239 (getCurrentListMapNoExtraKeys!53 (_keys!3810 newMap!16) (ite (or c!9716 c!9713) (_values!2150 newMap!16) (array!3834 (store (arr!1829 (_values!2150 newMap!16)) (index!3078 lt!29944) (ValueCellFull!884 lt!29673)) (size!2066 (_values!2150 newMap!16)))) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30243 () (_ BitVec 64))

(assert (=> b!69035 (= lt!30243 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30242 () (_ BitVec 64))

(assert (=> b!69035 (= lt!30242 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30259 () Unit!1898)

(assert (=> b!69035 (= lt!30259 (addStillContains!49 lt!30239 lt!30243 (zeroValue!2073 newMap!16) lt!30242))))

(assert (=> b!69035 (contains!709 (+!89 lt!30239 (tuple2!2091 lt!30243 (zeroValue!2073 newMap!16))) lt!30242)))

(declare-fun lt!30253 () Unit!1898)

(assert (=> b!69035 (= lt!30253 lt!30259)))

(declare-fun lt!30254 () ListLongMap!1385)

(assert (=> b!69035 (= lt!30254 (getCurrentListMapNoExtraKeys!53 (_keys!3810 newMap!16) (ite (or c!9716 c!9713) (_values!2150 newMap!16) (array!3834 (store (arr!1829 (_values!2150 newMap!16)) (index!3078 lt!29944) (ValueCellFull!884 lt!29673)) (size!2066 (_values!2150 newMap!16)))) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30244 () (_ BitVec 64))

(assert (=> b!69035 (= lt!30244 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30241 () (_ BitVec 64))

(assert (=> b!69035 (= lt!30241 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30248 () Unit!1898)

(assert (=> b!69035 (= lt!30248 (addApplyDifferent!49 lt!30254 lt!30244 (minValue!2073 newMap!16) lt!30241))))

(assert (=> b!69035 (= (apply!73 (+!89 lt!30254 (tuple2!2091 lt!30244 (minValue!2073 newMap!16))) lt!30241) (apply!73 lt!30254 lt!30241))))

(declare-fun lt!30260 () Unit!1898)

(assert (=> b!69035 (= lt!30260 lt!30248)))

(declare-fun lt!30240 () ListLongMap!1385)

(assert (=> b!69035 (= lt!30240 (getCurrentListMapNoExtraKeys!53 (_keys!3810 newMap!16) (ite (or c!9716 c!9713) (_values!2150 newMap!16) (array!3834 (store (arr!1829 (_values!2150 newMap!16)) (index!3078 lt!29944) (ValueCellFull!884 lt!29673)) (size!2066 (_values!2150 newMap!16)))) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30252 () (_ BitVec 64))

(assert (=> b!69035 (= lt!30252 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30249 () (_ BitVec 64))

(assert (=> b!69035 (= lt!30249 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30251 () Unit!1898)

(assert (=> b!69035 (= lt!30251 (addApplyDifferent!49 lt!30240 lt!30252 (zeroValue!2073 newMap!16) lt!30249))))

(assert (=> b!69035 (= (apply!73 (+!89 lt!30240 (tuple2!2091 lt!30252 (zeroValue!2073 newMap!16))) lt!30249) (apply!73 lt!30240 lt!30249))))

(declare-fun lt!30246 () Unit!1898)

(assert (=> b!69035 (= lt!30246 lt!30251)))

(declare-fun lt!30258 () ListLongMap!1385)

(assert (=> b!69035 (= lt!30258 (getCurrentListMapNoExtraKeys!53 (_keys!3810 newMap!16) (ite (or c!9716 c!9713) (_values!2150 newMap!16) (array!3834 (store (arr!1829 (_values!2150 newMap!16)) (index!3078 lt!29944) (ValueCellFull!884 lt!29673)) (size!2066 (_values!2150 newMap!16)))) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30255 () (_ BitVec 64))

(assert (=> b!69035 (= lt!30255 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30250 () (_ BitVec 64))

(assert (=> b!69035 (= lt!30250 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!69035 (= lt!30256 (addApplyDifferent!49 lt!30258 lt!30255 (minValue!2073 newMap!16) lt!30250))))

(assert (=> b!69035 (= (apply!73 (+!89 lt!30258 (tuple2!2091 lt!30255 (minValue!2073 newMap!16))) lt!30250) (apply!73 lt!30258 lt!30250))))

(assert (= (and d!14823 c!9824) b!69032))

(assert (= (and d!14823 (not c!9824)) b!69022))

(assert (= (and b!69022 c!9821) b!69024))

(assert (= (and b!69022 (not c!9821)) b!69019))

(assert (= (and b!69019 c!9822) b!69025))

(assert (= (and b!69019 (not c!9822)) b!69015))

(assert (= (or b!69025 b!69015) bm!5900))

(assert (= (or b!69024 bm!5900) bm!5897))

(assert (= (or b!69024 b!69025) bm!5898))

(assert (= (or b!69032 bm!5897) bm!5899))

(assert (= (or b!69032 bm!5898) bm!5896))

(assert (= (and d!14823 res!37056) b!69017))

(assert (= (and d!14823 c!9826) b!69035))

(assert (= (and d!14823 (not c!9826)) b!69034))

(assert (= (and d!14823 res!37064) b!69021))

(assert (= (and b!69021 res!37058) b!69020))

(assert (= (and b!69021 (not res!37057)) b!69031))

(assert (= (and b!69031 res!37060) b!69029))

(assert (= (and b!69021 res!37061) b!69026))

(assert (= (and b!69026 c!9825) b!69023))

(assert (= (and b!69026 (not c!9825)) b!69018))

(assert (= (and b!69023 res!37059) b!69027))

(assert (= (or b!69023 b!69018) bm!5901))

(assert (= (and b!69026 res!37062) b!69030))

(assert (= (and b!69030 c!9823) b!69016))

(assert (= (and b!69030 (not c!9823)) b!69033))

(assert (= (and b!69016 res!37063) b!69028))

(assert (= (or b!69016 b!69033) bm!5895))

(declare-fun b_lambda!3077 () Bool)

(assert (=> (not b_lambda!3077) (not b!69029)))

(assert (=> b!69029 t!4978))

(declare-fun b_and!4237 () Bool)

(assert (= b_and!4233 (and (=> t!4978 result!2615) b_and!4237)))

(assert (=> b!69029 t!4980))

(declare-fun b_and!4239 () Bool)

(assert (= b_and!4235 (and (=> t!4980 result!2617) b_and!4239)))

(declare-fun m!64699 () Bool)

(assert (=> b!69032 m!64699))

(declare-fun m!64701 () Bool)

(assert (=> bm!5896 m!64701))

(declare-fun m!64703 () Bool)

(assert (=> bm!5899 m!64703))

(assert (=> b!69029 m!64177))

(declare-fun m!64705 () Bool)

(assert (=> b!69029 m!64705))

(assert (=> b!69029 m!64177))

(declare-fun m!64707 () Bool)

(assert (=> b!69029 m!64707))

(assert (=> b!69029 m!64243))

(assert (=> b!69029 m!64705))

(assert (=> b!69029 m!64243))

(declare-fun m!64709 () Bool)

(assert (=> b!69029 m!64709))

(assert (=> b!69017 m!64177))

(assert (=> b!69017 m!64177))

(assert (=> b!69017 m!64187))

(assert (=> b!69020 m!64177))

(assert (=> b!69020 m!64177))

(assert (=> b!69020 m!64187))

(declare-fun m!64711 () Bool)

(assert (=> bm!5895 m!64711))

(declare-fun m!64713 () Bool)

(assert (=> b!69028 m!64713))

(declare-fun m!64715 () Bool)

(assert (=> bm!5901 m!64715))

(declare-fun m!64717 () Bool)

(assert (=> b!69035 m!64717))

(declare-fun m!64719 () Bool)

(assert (=> b!69035 m!64719))

(declare-fun m!64721 () Bool)

(assert (=> b!69035 m!64721))

(assert (=> b!69035 m!64719))

(assert (=> b!69035 m!64717))

(declare-fun m!64723 () Bool)

(assert (=> b!69035 m!64723))

(declare-fun m!64725 () Bool)

(assert (=> b!69035 m!64725))

(declare-fun m!64727 () Bool)

(assert (=> b!69035 m!64727))

(declare-fun m!64729 () Bool)

(assert (=> b!69035 m!64729))

(declare-fun m!64731 () Bool)

(assert (=> b!69035 m!64731))

(declare-fun m!64733 () Bool)

(assert (=> b!69035 m!64733))

(declare-fun m!64735 () Bool)

(assert (=> b!69035 m!64735))

(assert (=> b!69035 m!64703))

(declare-fun m!64737 () Bool)

(assert (=> b!69035 m!64737))

(declare-fun m!64739 () Bool)

(assert (=> b!69035 m!64739))

(assert (=> b!69035 m!64177))

(declare-fun m!64741 () Bool)

(assert (=> b!69035 m!64741))

(declare-fun m!64743 () Bool)

(assert (=> b!69035 m!64743))

(assert (=> b!69035 m!64729))

(assert (=> b!69035 m!64741))

(declare-fun m!64745 () Bool)

(assert (=> b!69035 m!64745))

(assert (=> b!69031 m!64177))

(assert (=> b!69031 m!64177))

(declare-fun m!64747 () Bool)

(assert (=> b!69031 m!64747))

(declare-fun m!64749 () Bool)

(assert (=> b!69027 m!64749))

(assert (=> d!14823 m!64193))

(assert (=> bm!5839 d!14823))

(declare-fun d!14825 () Bool)

(assert (=> d!14825 (= (apply!73 lt!29805 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1129 (getValueByKey!129 (toList!708 lt!29805) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!2944 () Bool)

(assert (= bs!2944 d!14825))

(assert (=> bs!2944 m!63951))

(assert (=> bs!2944 m!64349))

(assert (=> bs!2944 m!64349))

(declare-fun m!64751 () Bool)

(assert (=> bs!2944 m!64751))

(assert (=> b!68422 d!14825))

(assert (=> b!68422 d!14701))

(declare-fun d!14827 () Bool)

(declare-fun res!37067 () Bool)

(declare-fun e!45210 () Bool)

(assert (=> d!14827 (=> res!37067 e!45210)))

(assert (=> d!14827 (= res!37067 (bvsge (bvadd from!355 #b00000000000000000000000000000001) (size!2065 (_keys!3810 (v!2485 (underlying!247 thiss!992))))))))

(assert (=> d!14827 (= (arrayNoDuplicates!0 (_keys!3810 (v!2485 (underlying!247 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!9674 (Cons!1467 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) Nil!1468) Nil!1468)) e!45210)))

(declare-fun b!69036 () Bool)

(declare-fun e!45213 () Bool)

(declare-fun call!5905 () Bool)

(assert (=> b!69036 (= e!45213 call!5905)))

(declare-fun b!69037 () Bool)

(declare-fun e!45212 () Bool)

(assert (=> b!69037 (= e!45212 (contains!712 (ite c!9674 (Cons!1467 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) Nil!1468) Nil!1468) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun c!9827 () Bool)

(declare-fun bm!5902 () Bool)

(assert (=> bm!5902 (= call!5905 (arrayNoDuplicates!0 (_keys!3810 (v!2485 (underlying!247 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!9827 (Cons!1467 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!9674 (Cons!1467 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) Nil!1468) Nil!1468)) (ite c!9674 (Cons!1467 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) Nil!1468) Nil!1468))))))

(declare-fun b!69038 () Bool)

(declare-fun e!45211 () Bool)

(assert (=> b!69038 (= e!45210 e!45211)))

(declare-fun res!37066 () Bool)

(assert (=> b!69038 (=> (not res!37066) (not e!45211))))

(assert (=> b!69038 (= res!37066 (not e!45212))))

(declare-fun res!37065 () Bool)

(assert (=> b!69038 (=> (not res!37065) (not e!45212))))

(assert (=> b!69038 (= res!37065 (validKeyInArray!0 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!69039 () Bool)

(assert (=> b!69039 (= e!45211 e!45213)))

(assert (=> b!69039 (= c!9827 (validKeyInArray!0 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!69040 () Bool)

(assert (=> b!69040 (= e!45213 call!5905)))

(assert (= (and d!14827 (not res!37067)) b!69038))

(assert (= (and b!69038 res!37065) b!69037))

(assert (= (and b!69038 res!37066) b!69039))

(assert (= (and b!69039 c!9827) b!69036))

(assert (= (and b!69039 (not c!9827)) b!69040))

(assert (= (or b!69036 b!69040) bm!5902))

(declare-fun m!64753 () Bool)

(assert (=> b!69037 m!64753))

(assert (=> b!69037 m!64753))

(declare-fun m!64755 () Bool)

(assert (=> b!69037 m!64755))

(assert (=> bm!5902 m!64753))

(declare-fun m!64757 () Bool)

(assert (=> bm!5902 m!64757))

(assert (=> b!69038 m!64753))

(assert (=> b!69038 m!64753))

(declare-fun m!64759 () Bool)

(assert (=> b!69038 m!64759))

(assert (=> b!69039 m!64753))

(assert (=> b!69039 m!64753))

(assert (=> b!69039 m!64759))

(assert (=> bm!5767 d!14827))

(declare-fun d!14829 () Bool)

(declare-fun e!45215 () Bool)

(assert (=> d!14829 e!45215))

(declare-fun res!37068 () Bool)

(assert (=> d!14829 (=> res!37068 e!45215)))

(declare-fun lt!30264 () Bool)

(assert (=> d!14829 (= res!37068 (not lt!30264))))

(declare-fun lt!30263 () Bool)

(assert (=> d!14829 (= lt!30264 lt!30263)))

(declare-fun lt!30262 () Unit!1898)

(declare-fun e!45214 () Unit!1898)

(assert (=> d!14829 (= lt!30262 e!45214)))

(declare-fun c!9828 () Bool)

(assert (=> d!14829 (= c!9828 lt!30263)))

(assert (=> d!14829 (= lt!30263 (containsKey!133 (toList!708 lt!29805) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!14829 (= (contains!709 lt!29805 #b0000000000000000000000000000000000000000000000000000000000000000) lt!30264)))

(declare-fun b!69041 () Bool)

(declare-fun lt!30261 () Unit!1898)

(assert (=> b!69041 (= e!45214 lt!30261)))

(assert (=> b!69041 (= lt!30261 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 lt!29805) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!69041 (isDefined!83 (getValueByKey!129 (toList!708 lt!29805) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69042 () Bool)

(declare-fun Unit!1925 () Unit!1898)

(assert (=> b!69042 (= e!45214 Unit!1925)))

(declare-fun b!69043 () Bool)

(assert (=> b!69043 (= e!45215 (isDefined!83 (getValueByKey!129 (toList!708 lt!29805) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14829 c!9828) b!69041))

(assert (= (and d!14829 (not c!9828)) b!69042))

(assert (= (and d!14829 (not res!37068)) b!69043))

(declare-fun m!64761 () Bool)

(assert (=> d!14829 m!64761))

(declare-fun m!64763 () Bool)

(assert (=> b!69041 m!64763))

(assert (=> b!69041 m!64165))

(assert (=> b!69041 m!64165))

(declare-fun m!64765 () Bool)

(assert (=> b!69041 m!64765))

(assert (=> b!69043 m!64165))

(assert (=> b!69043 m!64165))

(assert (=> b!69043 m!64765))

(assert (=> bm!5761 d!14829))

(declare-fun d!14831 () Bool)

(declare-fun e!45217 () Bool)

(assert (=> d!14831 e!45217))

(declare-fun res!37069 () Bool)

(assert (=> d!14831 (=> res!37069 e!45217)))

(declare-fun lt!30268 () Bool)

(assert (=> d!14831 (= res!37069 (not lt!30268))))

(declare-fun lt!30267 () Bool)

(assert (=> d!14831 (= lt!30268 lt!30267)))

(declare-fun lt!30266 () Unit!1898)

(declare-fun e!45216 () Unit!1898)

(assert (=> d!14831 (= lt!30266 e!45216)))

(declare-fun c!9829 () Bool)

(assert (=> d!14831 (= c!9829 lt!30267)))

(assert (=> d!14831 (= lt!30267 (containsKey!133 (toList!708 lt!29805) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!14831 (= (contains!709 lt!29805 #b1000000000000000000000000000000000000000000000000000000000000000) lt!30268)))

(declare-fun b!69044 () Bool)

(declare-fun lt!30265 () Unit!1898)

(assert (=> b!69044 (= e!45216 lt!30265)))

(assert (=> b!69044 (= lt!30265 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 lt!29805) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!69044 (isDefined!83 (getValueByKey!129 (toList!708 lt!29805) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69045 () Bool)

(declare-fun Unit!1926 () Unit!1898)

(assert (=> b!69045 (= e!45216 Unit!1926)))

(declare-fun b!69046 () Bool)

(assert (=> b!69046 (= e!45217 (isDefined!83 (getValueByKey!129 (toList!708 lt!29805) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14831 c!9829) b!69044))

(assert (= (and d!14831 (not c!9829)) b!69045))

(assert (= (and d!14831 (not res!37069)) b!69046))

(declare-fun m!64767 () Bool)

(assert (=> d!14831 m!64767))

(declare-fun m!64769 () Bool)

(assert (=> b!69044 m!64769))

(assert (=> b!69044 m!64359))

(assert (=> b!69044 m!64359))

(declare-fun m!64771 () Bool)

(assert (=> b!69044 m!64771))

(assert (=> b!69046 m!64359))

(assert (=> b!69046 m!64359))

(assert (=> b!69046 m!64771))

(assert (=> bm!5755 d!14831))

(declare-fun d!14833 () Bool)

(declare-fun e!45219 () Bool)

(assert (=> d!14833 e!45219))

(declare-fun res!37070 () Bool)

(assert (=> d!14833 (=> res!37070 e!45219)))

(declare-fun lt!30272 () Bool)

(assert (=> d!14833 (= res!37070 (not lt!30272))))

(declare-fun lt!30271 () Bool)

(assert (=> d!14833 (= lt!30272 lt!30271)))

(declare-fun lt!30270 () Unit!1898)

(declare-fun e!45218 () Unit!1898)

(assert (=> d!14833 (= lt!30270 e!45218)))

(declare-fun c!9830 () Bool)

(assert (=> d!14833 (= c!9830 lt!30271)))

(assert (=> d!14833 (= lt!30271 (containsKey!133 (toList!708 lt!29835) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!14833 (= (contains!709 lt!29835 #b0000000000000000000000000000000000000000000000000000000000000000) lt!30272)))

(declare-fun b!69047 () Bool)

(declare-fun lt!30269 () Unit!1898)

(assert (=> b!69047 (= e!45218 lt!30269)))

(assert (=> b!69047 (= lt!30269 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 lt!29835) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!69047 (isDefined!83 (getValueByKey!129 (toList!708 lt!29835) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69048 () Bool)

(declare-fun Unit!1927 () Unit!1898)

(assert (=> b!69048 (= e!45218 Unit!1927)))

(declare-fun b!69049 () Bool)

(assert (=> b!69049 (= e!45219 (isDefined!83 (getValueByKey!129 (toList!708 lt!29835) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14833 c!9830) b!69047))

(assert (= (and d!14833 (not c!9830)) b!69048))

(assert (= (and d!14833 (not res!37070)) b!69049))

(declare-fun m!64773 () Bool)

(assert (=> d!14833 m!64773))

(declare-fun m!64775 () Bool)

(assert (=> b!69047 m!64775))

(declare-fun m!64777 () Bool)

(assert (=> b!69047 m!64777))

(assert (=> b!69047 m!64777))

(declare-fun m!64779 () Bool)

(assert (=> b!69047 m!64779))

(assert (=> b!69049 m!64777))

(assert (=> b!69049 m!64777))

(assert (=> b!69049 m!64779))

(assert (=> d!14661 d!14833))

(assert (=> d!14661 d!14669))

(declare-fun d!14835 () Bool)

(declare-fun isEmpty!315 (List!1470) Bool)

(assert (=> d!14835 (= (isEmpty!314 lt!29835) (isEmpty!315 (toList!708 lt!29835)))))

(declare-fun bs!2945 () Bool)

(assert (= bs!2945 d!14835))

(declare-fun m!64781 () Bool)

(assert (=> bs!2945 m!64781))

(assert (=> b!68459 d!14835))

(declare-fun d!14837 () Bool)

(declare-fun e!45220 () Bool)

(assert (=> d!14837 e!45220))

(declare-fun res!37071 () Bool)

(assert (=> d!14837 (=> (not res!37071) (not e!45220))))

(declare-fun lt!30276 () ListLongMap!1385)

(assert (=> d!14837 (= res!37071 (contains!709 lt!30276 (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))

(declare-fun lt!30274 () List!1470)

(assert (=> d!14837 (= lt!30276 (ListLongMap!1386 lt!30274))))

(declare-fun lt!30273 () Unit!1898)

(declare-fun lt!30275 () Unit!1898)

(assert (=> d!14837 (= lt!30273 lt!30275)))

(assert (=> d!14837 (= (getValueByKey!129 lt!30274 (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))) (Some!134 (_2!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))

(assert (=> d!14837 (= lt!30275 (lemmaContainsTupThenGetReturnValue!49 lt!30274 (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)) (_2!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))

(assert (=> d!14837 (= lt!30274 (insertStrictlySorted!52 (toList!708 call!5827) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)) (_2!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))

(assert (=> d!14837 (= (+!89 call!5827 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)) lt!30276)))

(declare-fun b!69050 () Bool)

(declare-fun res!37072 () Bool)

(assert (=> b!69050 (=> (not res!37072) (not e!45220))))

(assert (=> b!69050 (= res!37072 (= (getValueByKey!129 (toList!708 lt!30276) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))) (Some!134 (_2!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))))))

(declare-fun b!69051 () Bool)

(assert (=> b!69051 (= e!45220 (contains!711 (toList!708 lt!30276) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))))

(assert (= (and d!14837 res!37071) b!69050))

(assert (= (and b!69050 res!37072) b!69051))

(declare-fun m!64783 () Bool)

(assert (=> d!14837 m!64783))

(declare-fun m!64785 () Bool)

(assert (=> d!14837 m!64785))

(declare-fun m!64787 () Bool)

(assert (=> d!14837 m!64787))

(declare-fun m!64789 () Bool)

(assert (=> d!14837 m!64789))

(declare-fun m!64791 () Bool)

(assert (=> b!69050 m!64791))

(declare-fun m!64793 () Bool)

(assert (=> b!69051 m!64793))

(assert (=> b!68599 d!14837))

(assert (=> b!68508 d!14751))

(declare-fun d!14839 () Bool)

(declare-fun e!45221 () Bool)

(assert (=> d!14839 e!45221))

(declare-fun res!37073 () Bool)

(assert (=> d!14839 (=> (not res!37073) (not e!45221))))

(declare-fun lt!30280 () ListLongMap!1385)

(assert (=> d!14839 (= res!37073 (contains!709 lt!30280 (_1!1056 (tuple2!2091 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(declare-fun lt!30278 () List!1470)

(assert (=> d!14839 (= lt!30280 (ListLongMap!1386 lt!30278))))

(declare-fun lt!30277 () Unit!1898)

(declare-fun lt!30279 () Unit!1898)

(assert (=> d!14839 (= lt!30277 lt!30279)))

(assert (=> d!14839 (= (getValueByKey!129 lt!30278 (_1!1056 (tuple2!2091 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))) (Some!134 (_2!1056 (tuple2!2091 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(assert (=> d!14839 (= lt!30279 (lemmaContainsTupThenGetReturnValue!49 lt!30278 (_1!1056 (tuple2!2091 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992))))) (_2!1056 (tuple2!2091 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(assert (=> d!14839 (= lt!30278 (insertStrictlySorted!52 (toList!708 lt!29818) (_1!1056 (tuple2!2091 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992))))) (_2!1056 (tuple2!2091 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(assert (=> d!14839 (= (+!89 lt!29818 (tuple2!2091 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992))))) lt!30280)))

(declare-fun b!69052 () Bool)

(declare-fun res!37074 () Bool)

(assert (=> b!69052 (=> (not res!37074) (not e!45221))))

(assert (=> b!69052 (= res!37074 (= (getValueByKey!129 (toList!708 lt!30280) (_1!1056 (tuple2!2091 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))) (Some!134 (_2!1056 (tuple2!2091 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(declare-fun b!69053 () Bool)

(assert (=> b!69053 (= e!45221 (contains!711 (toList!708 lt!30280) (tuple2!2091 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))))

(assert (= (and d!14839 res!37073) b!69052))

(assert (= (and b!69052 res!37074) b!69053))

(declare-fun m!64795 () Bool)

(assert (=> d!14839 m!64795))

(declare-fun m!64797 () Bool)

(assert (=> d!14839 m!64797))

(declare-fun m!64799 () Bool)

(assert (=> d!14839 m!64799))

(declare-fun m!64801 () Bool)

(assert (=> d!14839 m!64801))

(declare-fun m!64803 () Bool)

(assert (=> b!69052 m!64803))

(declare-fun m!64805 () Bool)

(assert (=> b!69053 m!64805))

(assert (=> b!68428 d!14839))

(declare-fun d!14841 () Bool)

(declare-fun e!45222 () Bool)

(assert (=> d!14841 e!45222))

(declare-fun res!37075 () Bool)

(assert (=> d!14841 (=> (not res!37075) (not e!45222))))

(declare-fun lt!30284 () ListLongMap!1385)

(assert (=> d!14841 (= res!37075 (contains!709 lt!30284 (_1!1056 (tuple2!2091 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(declare-fun lt!30282 () List!1470)

(assert (=> d!14841 (= lt!30284 (ListLongMap!1386 lt!30282))))

(declare-fun lt!30281 () Unit!1898)

(declare-fun lt!30283 () Unit!1898)

(assert (=> d!14841 (= lt!30281 lt!30283)))

(assert (=> d!14841 (= (getValueByKey!129 lt!30282 (_1!1056 (tuple2!2091 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))) (Some!134 (_2!1056 (tuple2!2091 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(assert (=> d!14841 (= lt!30283 (lemmaContainsTupThenGetReturnValue!49 lt!30282 (_1!1056 (tuple2!2091 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992))))) (_2!1056 (tuple2!2091 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(assert (=> d!14841 (= lt!30282 (insertStrictlySorted!52 (toList!708 lt!29814) (_1!1056 (tuple2!2091 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992))))) (_2!1056 (tuple2!2091 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(assert (=> d!14841 (= (+!89 lt!29814 (tuple2!2091 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992))))) lt!30284)))

(declare-fun b!69054 () Bool)

(declare-fun res!37076 () Bool)

(assert (=> b!69054 (=> (not res!37076) (not e!45222))))

(assert (=> b!69054 (= res!37076 (= (getValueByKey!129 (toList!708 lt!30284) (_1!1056 (tuple2!2091 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))) (Some!134 (_2!1056 (tuple2!2091 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(declare-fun b!69055 () Bool)

(assert (=> b!69055 (= e!45222 (contains!711 (toList!708 lt!30284) (tuple2!2091 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))))

(assert (= (and d!14841 res!37075) b!69054))

(assert (= (and b!69054 res!37076) b!69055))

(declare-fun m!64807 () Bool)

(assert (=> d!14841 m!64807))

(declare-fun m!64809 () Bool)

(assert (=> d!14841 m!64809))

(declare-fun m!64811 () Bool)

(assert (=> d!14841 m!64811))

(declare-fun m!64813 () Bool)

(assert (=> d!14841 m!64813))

(declare-fun m!64815 () Bool)

(assert (=> b!69054 m!64815))

(declare-fun m!64817 () Bool)

(assert (=> b!69055 m!64817))

(assert (=> b!68428 d!14841))

(assert (=> b!68428 d!14661))

(declare-fun d!14843 () Bool)

(assert (=> d!14843 (= (apply!73 lt!29814 lt!29801) (get!1129 (getValueByKey!129 (toList!708 lt!29814) lt!29801)))))

(declare-fun bs!2946 () Bool)

(assert (= bs!2946 d!14843))

(declare-fun m!64819 () Bool)

(assert (=> bs!2946 m!64819))

(assert (=> bs!2946 m!64819))

(declare-fun m!64821 () Bool)

(assert (=> bs!2946 m!64821))

(assert (=> b!68428 d!14843))

(declare-fun d!14845 () Bool)

(assert (=> d!14845 (= (apply!73 (+!89 lt!29814 (tuple2!2091 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992))))) lt!29801) (get!1129 (getValueByKey!129 (toList!708 (+!89 lt!29814 (tuple2!2091 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))) lt!29801)))))

(declare-fun bs!2947 () Bool)

(assert (= bs!2947 d!14845))

(declare-fun m!64823 () Bool)

(assert (=> bs!2947 m!64823))

(assert (=> bs!2947 m!64823))

(declare-fun m!64825 () Bool)

(assert (=> bs!2947 m!64825))

(assert (=> b!68428 d!14845))

(declare-fun d!14847 () Bool)

(declare-fun e!45223 () Bool)

(assert (=> d!14847 e!45223))

(declare-fun res!37077 () Bool)

(assert (=> d!14847 (=> (not res!37077) (not e!45223))))

(declare-fun lt!30288 () ListLongMap!1385)

(assert (=> d!14847 (= res!37077 (contains!709 lt!30288 (_1!1056 (tuple2!2091 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(declare-fun lt!30286 () List!1470)

(assert (=> d!14847 (= lt!30288 (ListLongMap!1386 lt!30286))))

(declare-fun lt!30285 () Unit!1898)

(declare-fun lt!30287 () Unit!1898)

(assert (=> d!14847 (= lt!30285 lt!30287)))

(assert (=> d!14847 (= (getValueByKey!129 lt!30286 (_1!1056 (tuple2!2091 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))) (Some!134 (_2!1056 (tuple2!2091 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(assert (=> d!14847 (= lt!30287 (lemmaContainsTupThenGetReturnValue!49 lt!30286 (_1!1056 (tuple2!2091 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))) (_2!1056 (tuple2!2091 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(assert (=> d!14847 (= lt!30286 (insertStrictlySorted!52 (toList!708 lt!29800) (_1!1056 (tuple2!2091 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))) (_2!1056 (tuple2!2091 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(assert (=> d!14847 (= (+!89 lt!29800 (tuple2!2091 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))) lt!30288)))

(declare-fun b!69056 () Bool)

(declare-fun res!37078 () Bool)

(assert (=> b!69056 (=> (not res!37078) (not e!45223))))

(assert (=> b!69056 (= res!37078 (= (getValueByKey!129 (toList!708 lt!30288) (_1!1056 (tuple2!2091 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))) (Some!134 (_2!1056 (tuple2!2091 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(declare-fun b!69057 () Bool)

(assert (=> b!69057 (= e!45223 (contains!711 (toList!708 lt!30288) (tuple2!2091 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))))

(assert (= (and d!14847 res!37077) b!69056))

(assert (= (and b!69056 res!37078) b!69057))

(declare-fun m!64827 () Bool)

(assert (=> d!14847 m!64827))

(declare-fun m!64829 () Bool)

(assert (=> d!14847 m!64829))

(declare-fun m!64831 () Bool)

(assert (=> d!14847 m!64831))

(declare-fun m!64833 () Bool)

(assert (=> d!14847 m!64833))

(declare-fun m!64835 () Bool)

(assert (=> b!69056 m!64835))

(declare-fun m!64837 () Bool)

(assert (=> b!69057 m!64837))

(assert (=> b!68428 d!14847))

(declare-fun d!14849 () Bool)

(assert (=> d!14849 (= (apply!73 (+!89 lt!29814 (tuple2!2091 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992))))) lt!29801) (apply!73 lt!29814 lt!29801))))

(declare-fun lt!30291 () Unit!1898)

(declare-fun choose!396 (ListLongMap!1385 (_ BitVec 64) V!2921 (_ BitVec 64)) Unit!1898)

(assert (=> d!14849 (= lt!30291 (choose!396 lt!29814 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992))) lt!29801))))

(declare-fun e!45226 () Bool)

(assert (=> d!14849 e!45226))

(declare-fun res!37081 () Bool)

(assert (=> d!14849 (=> (not res!37081) (not e!45226))))

(assert (=> d!14849 (= res!37081 (contains!709 lt!29814 lt!29801))))

(assert (=> d!14849 (= (addApplyDifferent!49 lt!29814 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992))) lt!29801) lt!30291)))

(declare-fun b!69061 () Bool)

(assert (=> b!69061 (= e!45226 (not (= lt!29801 lt!29804)))))

(assert (= (and d!14849 res!37081) b!69061))

(declare-fun m!64839 () Bool)

(assert (=> d!14849 m!64839))

(assert (=> d!14849 m!63979))

(assert (=> d!14849 m!63987))

(declare-fun m!64841 () Bool)

(assert (=> d!14849 m!64841))

(assert (=> d!14849 m!63979))

(assert (=> d!14849 m!63981))

(assert (=> b!68428 d!14849))

(declare-fun d!14851 () Bool)

(assert (=> d!14851 (= (apply!73 lt!29818 lt!29810) (get!1129 (getValueByKey!129 (toList!708 lt!29818) lt!29810)))))

(declare-fun bs!2948 () Bool)

(assert (= bs!2948 d!14851))

(declare-fun m!64843 () Bool)

(assert (=> bs!2948 m!64843))

(assert (=> bs!2948 m!64843))

(declare-fun m!64845 () Bool)

(assert (=> bs!2948 m!64845))

(assert (=> b!68428 d!14851))

(declare-fun d!14853 () Bool)

(assert (=> d!14853 (= (apply!73 (+!89 lt!29818 (tuple2!2091 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992))))) lt!29810) (get!1129 (getValueByKey!129 (toList!708 (+!89 lt!29818 (tuple2!2091 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))) lt!29810)))))

(declare-fun bs!2949 () Bool)

(assert (= bs!2949 d!14853))

(declare-fun m!64847 () Bool)

(assert (=> bs!2949 m!64847))

(assert (=> bs!2949 m!64847))

(declare-fun m!64849 () Bool)

(assert (=> bs!2949 m!64849))

(assert (=> b!68428 d!14853))

(declare-fun d!14855 () Bool)

(assert (=> d!14855 (= (apply!73 (+!89 lt!29800 (tuple2!2091 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))) lt!29809) (get!1129 (getValueByKey!129 (toList!708 (+!89 lt!29800 (tuple2!2091 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))) lt!29809)))))

(declare-fun bs!2950 () Bool)

(assert (= bs!2950 d!14855))

(declare-fun m!64851 () Bool)

(assert (=> bs!2950 m!64851))

(assert (=> bs!2950 m!64851))

(declare-fun m!64853 () Bool)

(assert (=> bs!2950 m!64853))

(assert (=> b!68428 d!14855))

(declare-fun d!14857 () Bool)

(assert (=> d!14857 (= (apply!73 lt!29800 lt!29809) (get!1129 (getValueByKey!129 (toList!708 lt!29800) lt!29809)))))

(declare-fun bs!2951 () Bool)

(assert (= bs!2951 d!14857))

(declare-fun m!64855 () Bool)

(assert (=> bs!2951 m!64855))

(assert (=> bs!2951 m!64855))

(declare-fun m!64857 () Bool)

(assert (=> bs!2951 m!64857))

(assert (=> b!68428 d!14857))

(declare-fun d!14859 () Bool)

(assert (=> d!14859 (= (apply!73 (+!89 lt!29818 (tuple2!2091 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992))))) lt!29810) (apply!73 lt!29818 lt!29810))))

(declare-fun lt!30292 () Unit!1898)

(assert (=> d!14859 (= lt!30292 (choose!396 lt!29818 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992))) lt!29810))))

(declare-fun e!45227 () Bool)

(assert (=> d!14859 e!45227))

(declare-fun res!37082 () Bool)

(assert (=> d!14859 (=> (not res!37082) (not e!45227))))

(assert (=> d!14859 (= res!37082 (contains!709 lt!29818 lt!29810))))

(assert (=> d!14859 (= (addApplyDifferent!49 lt!29818 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992))) lt!29810) lt!30292)))

(declare-fun b!69062 () Bool)

(assert (=> b!69062 (= e!45227 (not (= lt!29810 lt!29815)))))

(assert (= (and d!14859 res!37082) b!69062))

(declare-fun m!64859 () Bool)

(assert (=> d!14859 m!64859))

(assert (=> d!14859 m!63969))

(assert (=> d!14859 m!63993))

(declare-fun m!64861 () Bool)

(assert (=> d!14859 m!64861))

(assert (=> d!14859 m!63969))

(assert (=> d!14859 m!63971))

(assert (=> b!68428 d!14859))

(declare-fun d!14861 () Bool)

(assert (=> d!14861 (= (apply!73 (+!89 lt!29800 (tuple2!2091 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))) lt!29809) (apply!73 lt!29800 lt!29809))))

(declare-fun lt!30293 () Unit!1898)

(assert (=> d!14861 (= lt!30293 (choose!396 lt!29800 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))) lt!29809))))

(declare-fun e!45228 () Bool)

(assert (=> d!14861 e!45228))

(declare-fun res!37083 () Bool)

(assert (=> d!14861 (=> (not res!37083) (not e!45228))))

(assert (=> d!14861 (= res!37083 (contains!709 lt!29800 lt!29809))))

(assert (=> d!14861 (= (addApplyDifferent!49 lt!29800 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))) lt!29809) lt!30293)))

(declare-fun b!69063 () Bool)

(assert (=> b!69063 (= e!45228 (not (= lt!29809 lt!29812)))))

(assert (= (and d!14861 res!37083) b!69063))

(declare-fun m!64863 () Bool)

(assert (=> d!14861 m!64863))

(assert (=> d!14861 m!63967))

(assert (=> d!14861 m!63989))

(declare-fun m!64865 () Bool)

(assert (=> d!14861 m!64865))

(assert (=> d!14861 m!63967))

(assert (=> d!14861 m!63973))

(assert (=> b!68428 d!14861))

(declare-fun d!14863 () Bool)

(assert (=> d!14863 (contains!709 (+!89 lt!29799 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))) lt!29802)))

(declare-fun lt!30296 () Unit!1898)

(declare-fun choose!397 (ListLongMap!1385 (_ BitVec 64) V!2921 (_ BitVec 64)) Unit!1898)

(assert (=> d!14863 (= lt!30296 (choose!397 lt!29799 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))) lt!29802))))

(assert (=> d!14863 (contains!709 lt!29799 lt!29802)))

(assert (=> d!14863 (= (addStillContains!49 lt!29799 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))) lt!29802) lt!30296)))

(declare-fun bs!2952 () Bool)

(assert (= bs!2952 d!14863))

(assert (=> bs!2952 m!63991))

(assert (=> bs!2952 m!63991))

(assert (=> bs!2952 m!63995))

(declare-fun m!64867 () Bool)

(assert (=> bs!2952 m!64867))

(declare-fun m!64869 () Bool)

(assert (=> bs!2952 m!64869))

(assert (=> b!68428 d!14863))

(declare-fun d!14865 () Bool)

(declare-fun e!45230 () Bool)

(assert (=> d!14865 e!45230))

(declare-fun res!37084 () Bool)

(assert (=> d!14865 (=> res!37084 e!45230)))

(declare-fun lt!30300 () Bool)

(assert (=> d!14865 (= res!37084 (not lt!30300))))

(declare-fun lt!30299 () Bool)

(assert (=> d!14865 (= lt!30300 lt!30299)))

(declare-fun lt!30298 () Unit!1898)

(declare-fun e!45229 () Unit!1898)

(assert (=> d!14865 (= lt!30298 e!45229)))

(declare-fun c!9831 () Bool)

(assert (=> d!14865 (= c!9831 lt!30299)))

(assert (=> d!14865 (= lt!30299 (containsKey!133 (toList!708 (+!89 lt!29799 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))) lt!29802))))

(assert (=> d!14865 (= (contains!709 (+!89 lt!29799 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))) lt!29802) lt!30300)))

(declare-fun b!69065 () Bool)

(declare-fun lt!30297 () Unit!1898)

(assert (=> b!69065 (= e!45229 lt!30297)))

(assert (=> b!69065 (= lt!30297 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 (+!89 lt!29799 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))) lt!29802))))

(assert (=> b!69065 (isDefined!83 (getValueByKey!129 (toList!708 (+!89 lt!29799 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))) lt!29802))))

(declare-fun b!69066 () Bool)

(declare-fun Unit!1928 () Unit!1898)

(assert (=> b!69066 (= e!45229 Unit!1928)))

(declare-fun b!69067 () Bool)

(assert (=> b!69067 (= e!45230 (isDefined!83 (getValueByKey!129 (toList!708 (+!89 lt!29799 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))) lt!29802)))))

(assert (= (and d!14865 c!9831) b!69065))

(assert (= (and d!14865 (not c!9831)) b!69066))

(assert (= (and d!14865 (not res!37084)) b!69067))

(declare-fun m!64871 () Bool)

(assert (=> d!14865 m!64871))

(declare-fun m!64873 () Bool)

(assert (=> b!69065 m!64873))

(declare-fun m!64875 () Bool)

(assert (=> b!69065 m!64875))

(assert (=> b!69065 m!64875))

(declare-fun m!64877 () Bool)

(assert (=> b!69065 m!64877))

(assert (=> b!69067 m!64875))

(assert (=> b!69067 m!64875))

(assert (=> b!69067 m!64877))

(assert (=> b!68428 d!14865))

(declare-fun d!14867 () Bool)

(declare-fun e!45231 () Bool)

(assert (=> d!14867 e!45231))

(declare-fun res!37085 () Bool)

(assert (=> d!14867 (=> (not res!37085) (not e!45231))))

(declare-fun lt!30304 () ListLongMap!1385)

(assert (=> d!14867 (= res!37085 (contains!709 lt!30304 (_1!1056 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(declare-fun lt!30302 () List!1470)

(assert (=> d!14867 (= lt!30304 (ListLongMap!1386 lt!30302))))

(declare-fun lt!30301 () Unit!1898)

(declare-fun lt!30303 () Unit!1898)

(assert (=> d!14867 (= lt!30301 lt!30303)))

(assert (=> d!14867 (= (getValueByKey!129 lt!30302 (_1!1056 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))) (Some!134 (_2!1056 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(assert (=> d!14867 (= lt!30303 (lemmaContainsTupThenGetReturnValue!49 lt!30302 (_1!1056 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))) (_2!1056 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(assert (=> d!14867 (= lt!30302 (insertStrictlySorted!52 (toList!708 lt!29799) (_1!1056 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))) (_2!1056 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(assert (=> d!14867 (= (+!89 lt!29799 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))) lt!30304)))

(declare-fun b!69068 () Bool)

(declare-fun res!37086 () Bool)

(assert (=> b!69068 (=> (not res!37086) (not e!45231))))

(assert (=> b!69068 (= res!37086 (= (getValueByKey!129 (toList!708 lt!30304) (_1!1056 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))) (Some!134 (_2!1056 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(declare-fun b!69069 () Bool)

(assert (=> b!69069 (= e!45231 (contains!711 (toList!708 lt!30304) (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))))

(assert (= (and d!14867 res!37085) b!69068))

(assert (= (and b!69068 res!37086) b!69069))

(declare-fun m!64879 () Bool)

(assert (=> d!14867 m!64879))

(declare-fun m!64881 () Bool)

(assert (=> d!14867 m!64881))

(declare-fun m!64883 () Bool)

(assert (=> d!14867 m!64883))

(declare-fun m!64885 () Bool)

(assert (=> d!14867 m!64885))

(declare-fun m!64887 () Bool)

(assert (=> b!69068 m!64887))

(declare-fun m!64889 () Bool)

(assert (=> b!69069 m!64889))

(assert (=> b!68428 d!14867))

(declare-fun d!14869 () Bool)

(declare-fun e!45232 () Bool)

(assert (=> d!14869 e!45232))

(declare-fun res!37087 () Bool)

(assert (=> d!14869 (=> (not res!37087) (not e!45232))))

(declare-fun lt!30308 () ListLongMap!1385)

(assert (=> d!14869 (= res!37087 (contains!709 lt!30308 (_1!1056 (ite (or c!9651 c!9648) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(declare-fun lt!30306 () List!1470)

(assert (=> d!14869 (= lt!30308 (ListLongMap!1386 lt!30306))))

(declare-fun lt!30305 () Unit!1898)

(declare-fun lt!30307 () Unit!1898)

(assert (=> d!14869 (= lt!30305 lt!30307)))

(assert (=> d!14869 (= (getValueByKey!129 lt!30306 (_1!1056 (ite (or c!9651 c!9648) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))) (Some!134 (_2!1056 (ite (or c!9651 c!9648) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(assert (=> d!14869 (= lt!30307 (lemmaContainsTupThenGetReturnValue!49 lt!30306 (_1!1056 (ite (or c!9651 c!9648) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))) (_2!1056 (ite (or c!9651 c!9648) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(assert (=> d!14869 (= lt!30306 (insertStrictlySorted!52 (toList!708 (ite c!9651 call!5763 (ite c!9648 call!5760 call!5758))) (_1!1056 (ite (or c!9651 c!9648) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))) (_2!1056 (ite (or c!9651 c!9648) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(assert (=> d!14869 (= (+!89 (ite c!9651 call!5763 (ite c!9648 call!5760 call!5758)) (ite (or c!9651 c!9648) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))) lt!30308)))

(declare-fun b!69070 () Bool)

(declare-fun res!37088 () Bool)

(assert (=> b!69070 (=> (not res!37088) (not e!45232))))

(assert (=> b!69070 (= res!37088 (= (getValueByKey!129 (toList!708 lt!30308) (_1!1056 (ite (or c!9651 c!9648) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))) (Some!134 (_2!1056 (ite (or c!9651 c!9648) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))))

(declare-fun b!69071 () Bool)

(assert (=> b!69071 (= e!45232 (contains!711 (toList!708 lt!30308) (ite (or c!9651 c!9648) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(assert (= (and d!14869 res!37087) b!69070))

(assert (= (and b!69070 res!37088) b!69071))

(declare-fun m!64891 () Bool)

(assert (=> d!14869 m!64891))

(declare-fun m!64893 () Bool)

(assert (=> d!14869 m!64893))

(declare-fun m!64895 () Bool)

(assert (=> d!14869 m!64895))

(declare-fun m!64897 () Bool)

(assert (=> d!14869 m!64897))

(declare-fun m!64899 () Bool)

(assert (=> b!69070 m!64899))

(declare-fun m!64901 () Bool)

(assert (=> b!69071 m!64901))

(assert (=> bm!5756 d!14869))

(declare-fun d!14871 () Bool)

(assert (=> d!14871 (= (+!89 (getCurrentListMap!403 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673)) (getCurrentListMap!403 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) lt!29963 lt!29673 (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30311 () Unit!1898)

(declare-fun choose!398 (array!3831 array!3833 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2921 V!2921 V!2921 Int) Unit!1898)

(assert (=> d!14871 (= lt!30311 (choose!398 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) lt!29963 (zeroValue!2073 newMap!16) lt!29673 (minValue!2073 newMap!16) (defaultEntry!2167 newMap!16)))))

(assert (=> d!14871 (validMask!0 (mask!6111 newMap!16))))

(assert (=> d!14871 (= (lemmaChangeZeroKeyThenAddPairToListMap!22 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) lt!29963 (zeroValue!2073 newMap!16) lt!29673 (minValue!2073 newMap!16) (defaultEntry!2167 newMap!16)) lt!30311)))

(declare-fun bs!2953 () Bool)

(assert (= bs!2953 d!14871))

(assert (=> bs!2953 m!63945))

(declare-fun m!64903 () Bool)

(assert (=> bs!2953 m!64903))

(declare-fun m!64905 () Bool)

(assert (=> bs!2953 m!64905))

(assert (=> bs!2953 m!64193))

(assert (=> bs!2953 m!63945))

(declare-fun m!64907 () Bool)

(assert (=> bs!2953 m!64907))

(assert (=> b!68638 d!14871))

(declare-fun d!14873 () Bool)

(assert (=> d!14873 (= (inRange!0 (ite c!9713 (ite c!9704 (index!3078 lt!29970) (ite c!9707 (index!3077 lt!29956) (index!3080 lt!29956))) (ite c!9715 (index!3078 lt!29948) (ite c!9709 (index!3077 lt!29969) (index!3080 lt!29969)))) (mask!6111 newMap!16)) (and (bvsge (ite c!9713 (ite c!9704 (index!3078 lt!29970) (ite c!9707 (index!3077 lt!29956) (index!3080 lt!29956))) (ite c!9715 (index!3078 lt!29948) (ite c!9709 (index!3077 lt!29969) (index!3080 lt!29969)))) #b00000000000000000000000000000000) (bvslt (ite c!9713 (ite c!9704 (index!3078 lt!29970) (ite c!9707 (index!3077 lt!29956) (index!3080 lt!29956))) (ite c!9715 (index!3078 lt!29948) (ite c!9709 (index!3077 lt!29969) (index!3080 lt!29969)))) (bvadd (mask!6111 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!5825 d!14873))

(declare-fun d!14875 () Bool)

(declare-fun res!37089 () Bool)

(declare-fun e!45233 () Bool)

(assert (=> d!14875 (=> (not res!37089) (not e!45233))))

(assert (=> d!14875 (= res!37089 (simpleValid!49 (v!2485 (underlying!247 thiss!992))))))

(assert (=> d!14875 (= (valid!289 (v!2485 (underlying!247 thiss!992))) e!45233)))

(declare-fun b!69072 () Bool)

(declare-fun res!37090 () Bool)

(assert (=> b!69072 (=> (not res!37090) (not e!45233))))

(assert (=> b!69072 (= res!37090 (= (arrayCountValidKeys!0 (_keys!3810 (v!2485 (underlying!247 thiss!992))) #b00000000000000000000000000000000 (size!2065 (_keys!3810 (v!2485 (underlying!247 thiss!992))))) (_size!387 (v!2485 (underlying!247 thiss!992)))))))

(declare-fun b!69073 () Bool)

(declare-fun res!37091 () Bool)

(assert (=> b!69073 (=> (not res!37091) (not e!45233))))

(assert (=> b!69073 (= res!37091 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3810 (v!2485 (underlying!247 thiss!992))) (mask!6111 (v!2485 (underlying!247 thiss!992)))))))

(declare-fun b!69074 () Bool)

(assert (=> b!69074 (= e!45233 (arrayNoDuplicates!0 (_keys!3810 (v!2485 (underlying!247 thiss!992))) #b00000000000000000000000000000000 Nil!1468))))

(assert (= (and d!14875 res!37089) b!69072))

(assert (= (and b!69072 res!37090) b!69073))

(assert (= (and b!69073 res!37091) b!69074))

(declare-fun m!64909 () Bool)

(assert (=> d!14875 m!64909))

(declare-fun m!64911 () Bool)

(assert (=> b!69072 m!64911))

(declare-fun m!64913 () Bool)

(assert (=> b!69073 m!64913))

(declare-fun m!64915 () Bool)

(assert (=> b!69074 m!64915))

(assert (=> d!14653 d!14875))

(declare-fun d!14877 () Bool)

(declare-fun e!45234 () Bool)

(assert (=> d!14877 e!45234))

(declare-fun res!37092 () Bool)

(assert (=> d!14877 (=> (not res!37092) (not e!45234))))

(declare-fun lt!30315 () ListLongMap!1385)

(assert (=> d!14877 (= res!37092 (contains!709 lt!30315 (_1!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(declare-fun lt!30313 () List!1470)

(assert (=> d!14877 (= lt!30315 (ListLongMap!1386 lt!30313))))

(declare-fun lt!30312 () Unit!1898)

(declare-fun lt!30314 () Unit!1898)

(assert (=> d!14877 (= lt!30312 lt!30314)))

(assert (=> d!14877 (= (getValueByKey!129 lt!30313 (_1!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))) (Some!134 (_2!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(assert (=> d!14877 (= lt!30314 (lemmaContainsTupThenGetReturnValue!49 lt!30313 (_1!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992))))) (_2!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(assert (=> d!14877 (= lt!30313 (insertStrictlySorted!52 (toList!708 call!5762) (_1!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992))))) (_2!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(assert (=> d!14877 (= (+!89 call!5762 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992))))) lt!30315)))

(declare-fun b!69075 () Bool)

(declare-fun res!37093 () Bool)

(assert (=> b!69075 (=> (not res!37093) (not e!45234))))

(assert (=> b!69075 (= res!37093 (= (getValueByKey!129 (toList!708 lt!30315) (_1!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))) (Some!134 (_2!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(declare-fun b!69076 () Bool)

(assert (=> b!69076 (= e!45234 (contains!711 (toList!708 lt!30315) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))))

(assert (= (and d!14877 res!37092) b!69075))

(assert (= (and b!69075 res!37093) b!69076))

(declare-fun m!64917 () Bool)

(assert (=> d!14877 m!64917))

(declare-fun m!64919 () Bool)

(assert (=> d!14877 m!64919))

(declare-fun m!64921 () Bool)

(assert (=> d!14877 m!64921))

(declare-fun m!64923 () Bool)

(assert (=> d!14877 m!64923))

(declare-fun m!64925 () Bool)

(assert (=> b!69075 m!64925))

(declare-fun m!64927 () Bool)

(assert (=> b!69076 m!64927))

(assert (=> b!68425 d!14877))

(assert (=> b!68410 d!14769))

(declare-fun d!14879 () Bool)

(declare-fun isEmpty!316 (Option!135) Bool)

(assert (=> d!14879 (= (isDefined!83 (getValueByKey!129 (toList!708 lt!29677) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355))) (not (isEmpty!316 (getValueByKey!129 (toList!708 lt!29677) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))))

(declare-fun bs!2954 () Bool)

(assert (= bs!2954 d!14879))

(assert (=> bs!2954 m!64101))

(declare-fun m!64929 () Bool)

(assert (=> bs!2954 m!64929))

(assert (=> b!68518 d!14879))

(declare-fun b!69079 () Bool)

(declare-fun e!45236 () Option!135)

(assert (=> b!69079 (= e!45236 (getValueByKey!129 (t!4964 (toList!708 lt!29677)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))

(declare-fun b!69077 () Bool)

(declare-fun e!45235 () Option!135)

(assert (=> b!69077 (= e!45235 (Some!134 (_2!1056 (h!2051 (toList!708 lt!29677)))))))

(declare-fun b!69080 () Bool)

(assert (=> b!69080 (= e!45236 None!133)))

(declare-fun c!9832 () Bool)

(declare-fun d!14881 () Bool)

(assert (=> d!14881 (= c!9832 (and ((_ is Cons!1466) (toList!708 lt!29677)) (= (_1!1056 (h!2051 (toList!708 lt!29677))) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355))))))

(assert (=> d!14881 (= (getValueByKey!129 (toList!708 lt!29677) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) e!45235)))

(declare-fun b!69078 () Bool)

(assert (=> b!69078 (= e!45235 e!45236)))

(declare-fun c!9833 () Bool)

(assert (=> b!69078 (= c!9833 (and ((_ is Cons!1466) (toList!708 lt!29677)) (not (= (_1!1056 (h!2051 (toList!708 lt!29677))) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))))

(assert (= (and d!14881 c!9832) b!69077))

(assert (= (and d!14881 (not c!9832)) b!69078))

(assert (= (and b!69078 c!9833) b!69079))

(assert (= (and b!69078 (not c!9833)) b!69080))

(assert (=> b!69079 m!63767))

(declare-fun m!64931 () Bool)

(assert (=> b!69079 m!64931))

(assert (=> b!68518 d!14881))

(declare-fun b!69081 () Bool)

(declare-fun e!45247 () ListLongMap!1385)

(declare-fun call!5906 () ListLongMap!1385)

(assert (=> b!69081 (= e!45247 call!5906)))

(declare-fun b!69082 () Bool)

(declare-fun e!45244 () Bool)

(declare-fun e!45239 () Bool)

(assert (=> b!69082 (= e!45244 e!45239)))

(declare-fun res!37101 () Bool)

(declare-fun call!5907 () Bool)

(assert (=> b!69082 (= res!37101 call!5907)))

(assert (=> b!69082 (=> (not res!37101) (not e!45239))))

(declare-fun b!69084 () Bool)

(declare-fun e!45245 () Bool)

(declare-fun call!5912 () Bool)

(assert (=> b!69084 (= e!45245 (not call!5912))))

(declare-fun bm!5903 () Bool)

(declare-fun lt!30322 () ListLongMap!1385)

(assert (=> bm!5903 (= call!5907 (contains!709 lt!30322 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69085 () Bool)

(declare-fun c!9835 () Bool)

(assert (=> b!69085 (= c!9835 (and (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!45243 () ListLongMap!1385)

(assert (=> b!69085 (= e!45243 e!45247)))

(declare-fun call!5910 () ListLongMap!1385)

(declare-fun c!9837 () Bool)

(declare-fun c!9834 () Bool)

(declare-fun call!5911 () ListLongMap!1385)

(declare-fun call!5908 () ListLongMap!1385)

(declare-fun bm!5904 () Bool)

(assert (=> bm!5904 (= call!5910 (+!89 (ite c!9837 call!5911 (ite c!9834 call!5908 call!5906)) (ite (or c!9837 c!9834) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))))))

(declare-fun b!69086 () Bool)

(declare-fun e!45241 () Bool)

(assert (=> b!69086 (= e!45241 (validKeyInArray!0 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!69087 () Bool)

(declare-fun res!37099 () Bool)

(declare-fun e!45238 () Bool)

(assert (=> b!69087 (=> (not res!37099) (not e!45238))))

(declare-fun e!45248 () Bool)

(assert (=> b!69087 (= res!37099 e!45248)))

(declare-fun res!37095 () Bool)

(assert (=> b!69087 (=> res!37095 e!45248)))

(assert (=> b!69087 (= res!37095 (not e!45241))))

(declare-fun res!37096 () Bool)

(assert (=> b!69087 (=> (not res!37096) (not e!45241))))

(assert (=> b!69087 (= res!37096 (bvslt #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))))))

(declare-fun b!69088 () Bool)

(declare-fun e!45242 () ListLongMap!1385)

(assert (=> b!69088 (= e!45242 e!45243)))

(assert (=> b!69088 (= c!9834 (and (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!69089 () Bool)

(declare-fun e!45240 () Bool)

(assert (=> b!69089 (= e!45245 e!45240)))

(declare-fun res!37097 () Bool)

(assert (=> b!69089 (= res!37097 call!5912)))

(assert (=> b!69089 (=> (not res!37097) (not e!45240))))

(declare-fun bm!5905 () Bool)

(assert (=> bm!5905 (= call!5908 call!5911)))

(declare-fun b!69090 () Bool)

(declare-fun call!5909 () ListLongMap!1385)

(assert (=> b!69090 (= e!45243 call!5909)))

(declare-fun bm!5906 () Bool)

(assert (=> bm!5906 (= call!5909 call!5910)))

(declare-fun b!69091 () Bool)

(assert (=> b!69091 (= e!45247 call!5909)))

(declare-fun b!69092 () Bool)

(declare-fun res!37100 () Bool)

(assert (=> b!69092 (=> (not res!37100) (not e!45238))))

(assert (=> b!69092 (= res!37100 e!45245)))

(declare-fun c!9838 () Bool)

(assert (=> b!69092 (= c!9838 (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!69093 () Bool)

(assert (=> b!69093 (= e!45240 (= (apply!73 lt!30322 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2073 newMap!16)))))

(declare-fun bm!5907 () Bool)

(assert (=> bm!5907 (= call!5911 (getCurrentListMapNoExtraKeys!53 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun b!69094 () Bool)

(assert (=> b!69094 (= e!45239 (= (apply!73 lt!30322 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2073 newMap!16)))))

(declare-fun b!69095 () Bool)

(declare-fun e!45237 () Bool)

(assert (=> b!69095 (= e!45237 (= (apply!73 lt!30322 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)) (get!1126 (select (arr!1829 (_values!2150 newMap!16)) #b00000000000000000000000000000000) (dynLambda!321 (defaultEntry!2167 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!69095 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2066 (_values!2150 newMap!16))))))

(assert (=> b!69095 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))))))

(declare-fun bm!5908 () Bool)

(assert (=> bm!5908 (= call!5906 call!5908)))

(declare-fun d!14883 () Bool)

(assert (=> d!14883 e!45238))

(declare-fun res!37102 () Bool)

(assert (=> d!14883 (=> (not res!37102) (not e!45238))))

(assert (=> d!14883 (= res!37102 (or (bvsge #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))))))))

(declare-fun lt!30324 () ListLongMap!1385)

(assert (=> d!14883 (= lt!30322 lt!30324)))

(declare-fun lt!30334 () Unit!1898)

(declare-fun e!45249 () Unit!1898)

(assert (=> d!14883 (= lt!30334 e!45249)))

(declare-fun c!9839 () Bool)

(declare-fun e!45246 () Bool)

(assert (=> d!14883 (= c!9839 e!45246)))

(declare-fun res!37094 () Bool)

(assert (=> d!14883 (=> (not res!37094) (not e!45246))))

(assert (=> d!14883 (= res!37094 (bvslt #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))))))

(assert (=> d!14883 (= lt!30324 e!45242)))

(assert (=> d!14883 (= c!9837 (and (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!14883 (validMask!0 (mask!6111 newMap!16))))

(assert (=> d!14883 (= (getCurrentListMap!403 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) lt!30322)))

(declare-fun b!69083 () Bool)

(assert (=> b!69083 (= e!45246 (validKeyInArray!0 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!69096 () Bool)

(assert (=> b!69096 (= e!45238 e!45244)))

(declare-fun c!9836 () Bool)

(assert (=> b!69096 (= c!9836 (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!69097 () Bool)

(assert (=> b!69097 (= e!45248 e!45237)))

(declare-fun res!37098 () Bool)

(assert (=> b!69097 (=> (not res!37098) (not e!45237))))

(assert (=> b!69097 (= res!37098 (contains!709 lt!30322 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!69097 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))))))

(declare-fun b!69098 () Bool)

(assert (=> b!69098 (= e!45242 (+!89 call!5910 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))))))

(declare-fun b!69099 () Bool)

(assert (=> b!69099 (= e!45244 (not call!5907))))

(declare-fun bm!5909 () Bool)

(assert (=> bm!5909 (= call!5912 (contains!709 lt!30322 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69100 () Bool)

(declare-fun Unit!1929 () Unit!1898)

(assert (=> b!69100 (= e!45249 Unit!1929)))

(declare-fun b!69101 () Bool)

(declare-fun lt!30333 () Unit!1898)

(assert (=> b!69101 (= e!45249 lt!30333)))

(declare-fun lt!30316 () ListLongMap!1385)

(assert (=> b!69101 (= lt!30316 (getCurrentListMapNoExtraKeys!53 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30320 () (_ BitVec 64))

(assert (=> b!69101 (= lt!30320 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30319 () (_ BitVec 64))

(assert (=> b!69101 (= lt!30319 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30336 () Unit!1898)

(assert (=> b!69101 (= lt!30336 (addStillContains!49 lt!30316 lt!30320 (zeroValue!2073 newMap!16) lt!30319))))

(assert (=> b!69101 (contains!709 (+!89 lt!30316 (tuple2!2091 lt!30320 (zeroValue!2073 newMap!16))) lt!30319)))

(declare-fun lt!30330 () Unit!1898)

(assert (=> b!69101 (= lt!30330 lt!30336)))

(declare-fun lt!30331 () ListLongMap!1385)

(assert (=> b!69101 (= lt!30331 (getCurrentListMapNoExtraKeys!53 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30321 () (_ BitVec 64))

(assert (=> b!69101 (= lt!30321 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30318 () (_ BitVec 64))

(assert (=> b!69101 (= lt!30318 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30325 () Unit!1898)

(assert (=> b!69101 (= lt!30325 (addApplyDifferent!49 lt!30331 lt!30321 (minValue!2073 newMap!16) lt!30318))))

(assert (=> b!69101 (= (apply!73 (+!89 lt!30331 (tuple2!2091 lt!30321 (minValue!2073 newMap!16))) lt!30318) (apply!73 lt!30331 lt!30318))))

(declare-fun lt!30337 () Unit!1898)

(assert (=> b!69101 (= lt!30337 lt!30325)))

(declare-fun lt!30317 () ListLongMap!1385)

(assert (=> b!69101 (= lt!30317 (getCurrentListMapNoExtraKeys!53 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30329 () (_ BitVec 64))

(assert (=> b!69101 (= lt!30329 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30326 () (_ BitVec 64))

(assert (=> b!69101 (= lt!30326 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30328 () Unit!1898)

(assert (=> b!69101 (= lt!30328 (addApplyDifferent!49 lt!30317 lt!30329 (zeroValue!2073 newMap!16) lt!30326))))

(assert (=> b!69101 (= (apply!73 (+!89 lt!30317 (tuple2!2091 lt!30329 (zeroValue!2073 newMap!16))) lt!30326) (apply!73 lt!30317 lt!30326))))

(declare-fun lt!30323 () Unit!1898)

(assert (=> b!69101 (= lt!30323 lt!30328)))

(declare-fun lt!30335 () ListLongMap!1385)

(assert (=> b!69101 (= lt!30335 (getCurrentListMapNoExtraKeys!53 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30332 () (_ BitVec 64))

(assert (=> b!69101 (= lt!30332 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30327 () (_ BitVec 64))

(assert (=> b!69101 (= lt!30327 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!69101 (= lt!30333 (addApplyDifferent!49 lt!30335 lt!30332 (minValue!2073 newMap!16) lt!30327))))

(assert (=> b!69101 (= (apply!73 (+!89 lt!30335 (tuple2!2091 lt!30332 (minValue!2073 newMap!16))) lt!30327) (apply!73 lt!30335 lt!30327))))

(assert (= (and d!14883 c!9837) b!69098))

(assert (= (and d!14883 (not c!9837)) b!69088))

(assert (= (and b!69088 c!9834) b!69090))

(assert (= (and b!69088 (not c!9834)) b!69085))

(assert (= (and b!69085 c!9835) b!69091))

(assert (= (and b!69085 (not c!9835)) b!69081))

(assert (= (or b!69091 b!69081) bm!5908))

(assert (= (or b!69090 bm!5908) bm!5905))

(assert (= (or b!69090 b!69091) bm!5906))

(assert (= (or b!69098 bm!5905) bm!5907))

(assert (= (or b!69098 bm!5906) bm!5904))

(assert (= (and d!14883 res!37094) b!69083))

(assert (= (and d!14883 c!9839) b!69101))

(assert (= (and d!14883 (not c!9839)) b!69100))

(assert (= (and d!14883 res!37102) b!69087))

(assert (= (and b!69087 res!37096) b!69086))

(assert (= (and b!69087 (not res!37095)) b!69097))

(assert (= (and b!69097 res!37098) b!69095))

(assert (= (and b!69087 res!37099) b!69092))

(assert (= (and b!69092 c!9838) b!69089))

(assert (= (and b!69092 (not c!9838)) b!69084))

(assert (= (and b!69089 res!37097) b!69093))

(assert (= (or b!69089 b!69084) bm!5909))

(assert (= (and b!69092 res!37100) b!69096))

(assert (= (and b!69096 c!9836) b!69082))

(assert (= (and b!69096 (not c!9836)) b!69099))

(assert (= (and b!69082 res!37101) b!69094))

(assert (= (or b!69082 b!69099) bm!5903))

(declare-fun b_lambda!3079 () Bool)

(assert (=> (not b_lambda!3079) (not b!69095)))

(assert (=> b!69095 t!4978))

(declare-fun b_and!4241 () Bool)

(assert (= b_and!4237 (and (=> t!4978 result!2615) b_and!4241)))

(assert (=> b!69095 t!4980))

(declare-fun b_and!4243 () Bool)

(assert (= b_and!4239 (and (=> t!4980 result!2617) b_and!4243)))

(declare-fun m!64933 () Bool)

(assert (=> b!69098 m!64933))

(declare-fun m!64935 () Bool)

(assert (=> bm!5904 m!64935))

(declare-fun m!64937 () Bool)

(assert (=> bm!5907 m!64937))

(assert (=> b!69095 m!64177))

(assert (=> b!69095 m!64293))

(assert (=> b!69095 m!64177))

(declare-fun m!64939 () Bool)

(assert (=> b!69095 m!64939))

(assert (=> b!69095 m!64243))

(assert (=> b!69095 m!64293))

(assert (=> b!69095 m!64243))

(assert (=> b!69095 m!64297))

(assert (=> b!69083 m!64177))

(assert (=> b!69083 m!64177))

(assert (=> b!69083 m!64187))

(assert (=> b!69086 m!64177))

(assert (=> b!69086 m!64177))

(assert (=> b!69086 m!64187))

(declare-fun m!64941 () Bool)

(assert (=> bm!5903 m!64941))

(declare-fun m!64943 () Bool)

(assert (=> b!69094 m!64943))

(declare-fun m!64945 () Bool)

(assert (=> bm!5909 m!64945))

(declare-fun m!64947 () Bool)

(assert (=> b!69101 m!64947))

(declare-fun m!64949 () Bool)

(assert (=> b!69101 m!64949))

(declare-fun m!64951 () Bool)

(assert (=> b!69101 m!64951))

(assert (=> b!69101 m!64949))

(assert (=> b!69101 m!64947))

(declare-fun m!64953 () Bool)

(assert (=> b!69101 m!64953))

(declare-fun m!64955 () Bool)

(assert (=> b!69101 m!64955))

(declare-fun m!64957 () Bool)

(assert (=> b!69101 m!64957))

(declare-fun m!64959 () Bool)

(assert (=> b!69101 m!64959))

(declare-fun m!64961 () Bool)

(assert (=> b!69101 m!64961))

(declare-fun m!64963 () Bool)

(assert (=> b!69101 m!64963))

(declare-fun m!64965 () Bool)

(assert (=> b!69101 m!64965))

(assert (=> b!69101 m!64937))

(declare-fun m!64967 () Bool)

(assert (=> b!69101 m!64967))

(declare-fun m!64969 () Bool)

(assert (=> b!69101 m!64969))

(assert (=> b!69101 m!64177))

(declare-fun m!64971 () Bool)

(assert (=> b!69101 m!64971))

(declare-fun m!64973 () Bool)

(assert (=> b!69101 m!64973))

(assert (=> b!69101 m!64959))

(assert (=> b!69101 m!64971))

(declare-fun m!64975 () Bool)

(assert (=> b!69101 m!64975))

(assert (=> b!69097 m!64177))

(assert (=> b!69097 m!64177))

(declare-fun m!64977 () Bool)

(assert (=> b!69097 m!64977))

(declare-fun m!64979 () Bool)

(assert (=> b!69093 m!64979))

(assert (=> d!14883 m!64193))

(assert (=> d!14655 d!14883))

(declare-fun b!69110 () Bool)

(declare-fun res!37113 () Bool)

(declare-fun e!45252 () Bool)

(assert (=> b!69110 (=> (not res!37113) (not e!45252))))

(assert (=> b!69110 (= res!37113 (and (= (size!2066 (_values!2150 newMap!16)) (bvadd (mask!6111 newMap!16) #b00000000000000000000000000000001)) (= (size!2065 (_keys!3810 newMap!16)) (size!2066 (_values!2150 newMap!16))) (bvsge (_size!387 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!387 newMap!16) (bvadd (mask!6111 newMap!16) #b00000000000000000000000000000001))))))

(declare-fun d!14885 () Bool)

(declare-fun res!37114 () Bool)

(assert (=> d!14885 (=> (not res!37114) (not e!45252))))

(assert (=> d!14885 (= res!37114 (validMask!0 (mask!6111 newMap!16)))))

(assert (=> d!14885 (= (simpleValid!49 newMap!16) e!45252)))

(declare-fun b!69113 () Bool)

(assert (=> b!69113 (= e!45252 (and (bvsge (extraKeys!2034 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!2034 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!387 newMap!16) #b00000000000000000000000000000000)))))

(declare-fun b!69112 () Bool)

(declare-fun res!37112 () Bool)

(assert (=> b!69112 (=> (not res!37112) (not e!45252))))

(declare-fun size!2071 (LongMapFixedSize!676) (_ BitVec 32))

(assert (=> b!69112 (= res!37112 (= (size!2071 newMap!16) (bvadd (_size!387 newMap!16) (bvsdiv (bvadd (extraKeys!2034 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!69111 () Bool)

(declare-fun res!37111 () Bool)

(assert (=> b!69111 (=> (not res!37111) (not e!45252))))

(assert (=> b!69111 (= res!37111 (bvsge (size!2071 newMap!16) (_size!387 newMap!16)))))

(assert (= (and d!14885 res!37114) b!69110))

(assert (= (and b!69110 res!37113) b!69111))

(assert (= (and b!69111 res!37111) b!69112))

(assert (= (and b!69112 res!37112) b!69113))

(assert (=> d!14885 m!64193))

(declare-fun m!64981 () Bool)

(assert (=> b!69112 m!64981))

(assert (=> b!69111 m!64981))

(assert (=> d!14651 d!14885))

(declare-fun d!14887 () Bool)

(declare-fun e!45254 () Bool)

(assert (=> d!14887 e!45254))

(declare-fun res!37115 () Bool)

(assert (=> d!14887 (=> res!37115 e!45254)))

(declare-fun lt!30341 () Bool)

(assert (=> d!14887 (= res!37115 (not lt!30341))))

(declare-fun lt!30340 () Bool)

(assert (=> d!14887 (= lt!30341 lt!30340)))

(declare-fun lt!30339 () Unit!1898)

(declare-fun e!45253 () Unit!1898)

(assert (=> d!14887 (= lt!30339 e!45253)))

(declare-fun c!9840 () Bool)

(assert (=> d!14887 (= c!9840 lt!30340)))

(assert (=> d!14887 (= lt!30340 (containsKey!133 (toList!708 e!44955) (ite c!9713 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (select (arr!1828 (_keys!3810 newMap!16)) (index!3078 lt!29944)))))))

(assert (=> d!14887 (= (contains!709 e!44955 (ite c!9713 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (select (arr!1828 (_keys!3810 newMap!16)) (index!3078 lt!29944)))) lt!30341)))

(declare-fun b!69114 () Bool)

(declare-fun lt!30338 () Unit!1898)

(assert (=> b!69114 (= e!45253 lt!30338)))

(assert (=> b!69114 (= lt!30338 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 e!44955) (ite c!9713 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (select (arr!1828 (_keys!3810 newMap!16)) (index!3078 lt!29944)))))))

(assert (=> b!69114 (isDefined!83 (getValueByKey!129 (toList!708 e!44955) (ite c!9713 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (select (arr!1828 (_keys!3810 newMap!16)) (index!3078 lt!29944)))))))

(declare-fun b!69115 () Bool)

(declare-fun Unit!1930 () Unit!1898)

(assert (=> b!69115 (= e!45253 Unit!1930)))

(declare-fun b!69116 () Bool)

(assert (=> b!69116 (= e!45254 (isDefined!83 (getValueByKey!129 (toList!708 e!44955) (ite c!9713 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (select (arr!1828 (_keys!3810 newMap!16)) (index!3078 lt!29944))))))))

(assert (= (and d!14887 c!9840) b!69114))

(assert (= (and d!14887 (not c!9840)) b!69115))

(assert (= (and d!14887 (not res!37115)) b!69116))

(declare-fun m!64983 () Bool)

(assert (=> d!14887 m!64983))

(declare-fun m!64985 () Bool)

(assert (=> b!69114 m!64985))

(declare-fun m!64987 () Bool)

(assert (=> b!69114 m!64987))

(assert (=> b!69114 m!64987))

(declare-fun m!64989 () Bool)

(assert (=> b!69114 m!64989))

(assert (=> b!69116 m!64987))

(assert (=> b!69116 m!64987))

(assert (=> b!69116 m!64989))

(assert (=> bm!5834 d!14887))

(assert (=> b!68461 d!14769))

(declare-fun d!14889 () Bool)

(assert (=> d!14889 (isDefined!83 (getValueByKey!129 (toList!708 lt!29677) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))

(declare-fun lt!30344 () Unit!1898)

(declare-fun choose!399 (List!1470 (_ BitVec 64)) Unit!1898)

(assert (=> d!14889 (= lt!30344 (choose!399 (toList!708 lt!29677) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))

(declare-fun e!45257 () Bool)

(assert (=> d!14889 e!45257))

(declare-fun res!37118 () Bool)

(assert (=> d!14889 (=> (not res!37118) (not e!45257))))

(assert (=> d!14889 (= res!37118 (isStrictlySorted!285 (toList!708 lt!29677)))))

(assert (=> d!14889 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 lt!29677) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) lt!30344)))

(declare-fun b!69119 () Bool)

(assert (=> b!69119 (= e!45257 (containsKey!133 (toList!708 lt!29677) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))

(assert (= (and d!14889 res!37118) b!69119))

(assert (=> d!14889 m!63767))

(assert (=> d!14889 m!64101))

(assert (=> d!14889 m!64101))

(assert (=> d!14889 m!64103))

(assert (=> d!14889 m!63767))

(declare-fun m!64991 () Bool)

(assert (=> d!14889 m!64991))

(declare-fun m!64993 () Bool)

(assert (=> d!14889 m!64993))

(assert (=> b!69119 m!63767))

(assert (=> b!69119 m!64097))

(assert (=> b!68516 d!14889))

(assert (=> b!68516 d!14879))

(assert (=> b!68516 d!14881))

(declare-fun d!14891 () Bool)

(assert (=> d!14891 (= (map!1137 (_2!1057 lt!29959)) (getCurrentListMap!403 (_keys!3810 (_2!1057 lt!29959)) (_values!2150 (_2!1057 lt!29959)) (mask!6111 (_2!1057 lt!29959)) (extraKeys!2034 (_2!1057 lt!29959)) (zeroValue!2073 (_2!1057 lt!29959)) (minValue!2073 (_2!1057 lt!29959)) #b00000000000000000000000000000000 (defaultEntry!2167 (_2!1057 lt!29959))))))

(declare-fun bs!2955 () Bool)

(assert (= bs!2955 d!14891))

(declare-fun m!64995 () Bool)

(assert (=> bs!2955 m!64995))

(assert (=> bm!5817 d!14891))

(declare-fun d!14893 () Bool)

(declare-fun lt!30345 () Bool)

(assert (=> d!14893 (= lt!30345 (select (content!73 (toList!708 lt!29868)) lt!29680))))

(declare-fun e!45259 () Bool)

(assert (=> d!14893 (= lt!30345 e!45259)))

(declare-fun res!37120 () Bool)

(assert (=> d!14893 (=> (not res!37120) (not e!45259))))

(assert (=> d!14893 (= res!37120 ((_ is Cons!1466) (toList!708 lt!29868)))))

(assert (=> d!14893 (= (contains!711 (toList!708 lt!29868) lt!29680) lt!30345)))

(declare-fun b!69120 () Bool)

(declare-fun e!45258 () Bool)

(assert (=> b!69120 (= e!45259 e!45258)))

(declare-fun res!37119 () Bool)

(assert (=> b!69120 (=> res!37119 e!45258)))

(assert (=> b!69120 (= res!37119 (= (h!2051 (toList!708 lt!29868)) lt!29680))))

(declare-fun b!69121 () Bool)

(assert (=> b!69121 (= e!45258 (contains!711 (t!4964 (toList!708 lt!29868)) lt!29680))))

(assert (= (and d!14893 res!37120) b!69120))

(assert (= (and b!69120 (not res!37119)) b!69121))

(declare-fun m!64997 () Bool)

(assert (=> d!14893 m!64997))

(declare-fun m!64999 () Bool)

(assert (=> d!14893 m!64999))

(declare-fun m!65001 () Bool)

(assert (=> b!69121 m!65001))

(assert (=> b!68482 d!14893))

(declare-fun d!14895 () Bool)

(declare-fun e!45261 () Bool)

(assert (=> d!14895 e!45261))

(declare-fun res!37121 () Bool)

(assert (=> d!14895 (=> res!37121 e!45261)))

(declare-fun lt!30349 () Bool)

(assert (=> d!14895 (= res!37121 (not lt!30349))))

(declare-fun lt!30348 () Bool)

(assert (=> d!14895 (= lt!30349 lt!30348)))

(declare-fun lt!30347 () Unit!1898)

(declare-fun e!45260 () Unit!1898)

(assert (=> d!14895 (= lt!30347 e!45260)))

(declare-fun c!9841 () Bool)

(assert (=> d!14895 (= c!9841 lt!30348)))

(assert (=> d!14895 (= lt!30348 (containsKey!133 (toList!708 lt!29853) (_1!1056 lt!29680)))))

(assert (=> d!14895 (= (contains!709 lt!29853 (_1!1056 lt!29680)) lt!30349)))

(declare-fun b!69122 () Bool)

(declare-fun lt!30346 () Unit!1898)

(assert (=> b!69122 (= e!45260 lt!30346)))

(assert (=> b!69122 (= lt!30346 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 lt!29853) (_1!1056 lt!29680)))))

(assert (=> b!69122 (isDefined!83 (getValueByKey!129 (toList!708 lt!29853) (_1!1056 lt!29680)))))

(declare-fun b!69123 () Bool)

(declare-fun Unit!1931 () Unit!1898)

(assert (=> b!69123 (= e!45260 Unit!1931)))

(declare-fun b!69124 () Bool)

(assert (=> b!69124 (= e!45261 (isDefined!83 (getValueByKey!129 (toList!708 lt!29853) (_1!1056 lt!29680))))))

(assert (= (and d!14895 c!9841) b!69122))

(assert (= (and d!14895 (not c!9841)) b!69123))

(assert (= (and d!14895 (not res!37121)) b!69124))

(declare-fun m!65003 () Bool)

(assert (=> d!14895 m!65003))

(declare-fun m!65005 () Bool)

(assert (=> b!69122 m!65005))

(assert (=> b!69122 m!64033))

(assert (=> b!69122 m!64033))

(declare-fun m!65007 () Bool)

(assert (=> b!69122 m!65007))

(assert (=> b!69124 m!64033))

(assert (=> b!69124 m!64033))

(assert (=> b!69124 m!65007))

(assert (=> d!14663 d!14895))

(declare-fun b!69127 () Bool)

(declare-fun e!45263 () Option!135)

(assert (=> b!69127 (= e!45263 (getValueByKey!129 (t!4964 lt!29851) (_1!1056 lt!29680)))))

(declare-fun b!69125 () Bool)

(declare-fun e!45262 () Option!135)

(assert (=> b!69125 (= e!45262 (Some!134 (_2!1056 (h!2051 lt!29851))))))

(declare-fun b!69128 () Bool)

(assert (=> b!69128 (= e!45263 None!133)))

(declare-fun d!14897 () Bool)

(declare-fun c!9842 () Bool)

(assert (=> d!14897 (= c!9842 (and ((_ is Cons!1466) lt!29851) (= (_1!1056 (h!2051 lt!29851)) (_1!1056 lt!29680))))))

(assert (=> d!14897 (= (getValueByKey!129 lt!29851 (_1!1056 lt!29680)) e!45262)))

(declare-fun b!69126 () Bool)

(assert (=> b!69126 (= e!45262 e!45263)))

(declare-fun c!9843 () Bool)

(assert (=> b!69126 (= c!9843 (and ((_ is Cons!1466) lt!29851) (not (= (_1!1056 (h!2051 lt!29851)) (_1!1056 lt!29680)))))))

(assert (= (and d!14897 c!9842) b!69125))

(assert (= (and d!14897 (not c!9842)) b!69126))

(assert (= (and b!69126 c!9843) b!69127))

(assert (= (and b!69126 (not c!9843)) b!69128))

(declare-fun m!65009 () Bool)

(assert (=> b!69127 m!65009))

(assert (=> d!14663 d!14897))

(declare-fun d!14899 () Bool)

(assert (=> d!14899 (= (getValueByKey!129 lt!29851 (_1!1056 lt!29680)) (Some!134 (_2!1056 lt!29680)))))

(declare-fun lt!30350 () Unit!1898)

(assert (=> d!14899 (= lt!30350 (choose!390 lt!29851 (_1!1056 lt!29680) (_2!1056 lt!29680)))))

(declare-fun e!45264 () Bool)

(assert (=> d!14899 e!45264))

(declare-fun res!37122 () Bool)

(assert (=> d!14899 (=> (not res!37122) (not e!45264))))

(assert (=> d!14899 (= res!37122 (isStrictlySorted!285 lt!29851))))

(assert (=> d!14899 (= (lemmaContainsTupThenGetReturnValue!49 lt!29851 (_1!1056 lt!29680) (_2!1056 lt!29680)) lt!30350)))

(declare-fun b!69129 () Bool)

(declare-fun res!37123 () Bool)

(assert (=> b!69129 (=> (not res!37123) (not e!45264))))

(assert (=> b!69129 (= res!37123 (containsKey!133 lt!29851 (_1!1056 lt!29680)))))

(declare-fun b!69130 () Bool)

(assert (=> b!69130 (= e!45264 (contains!711 lt!29851 (tuple2!2091 (_1!1056 lt!29680) (_2!1056 lt!29680))))))

(assert (= (and d!14899 res!37122) b!69129))

(assert (= (and b!69129 res!37123) b!69130))

(assert (=> d!14899 m!64027))

(declare-fun m!65011 () Bool)

(assert (=> d!14899 m!65011))

(declare-fun m!65013 () Bool)

(assert (=> d!14899 m!65013))

(declare-fun m!65015 () Bool)

(assert (=> b!69129 m!65015))

(declare-fun m!65017 () Bool)

(assert (=> b!69130 m!65017))

(assert (=> d!14663 d!14899))

(declare-fun b!69131 () Bool)

(declare-fun e!45268 () List!1470)

(declare-fun call!5914 () List!1470)

(assert (=> b!69131 (= e!45268 call!5914)))

(declare-fun b!69132 () Bool)

(declare-fun c!9844 () Bool)

(assert (=> b!69132 (= c!9844 (and ((_ is Cons!1466) (toList!708 lt!29682)) (bvsgt (_1!1056 (h!2051 (toList!708 lt!29682))) (_1!1056 lt!29680))))))

(declare-fun e!45266 () List!1470)

(assert (=> b!69132 (= e!45266 e!45268)))

(declare-fun b!69133 () Bool)

(assert (=> b!69133 (= e!45268 call!5914)))

(declare-fun b!69135 () Bool)

(declare-fun call!5913 () List!1470)

(assert (=> b!69135 (= e!45266 call!5913)))

(declare-fun bm!5910 () Bool)

(declare-fun call!5915 () List!1470)

(assert (=> bm!5910 (= call!5913 call!5915)))

(declare-fun bm!5911 () Bool)

(assert (=> bm!5911 (= call!5914 call!5913)))

(declare-fun b!69136 () Bool)

(declare-fun e!45265 () List!1470)

(assert (=> b!69136 (= e!45265 e!45266)))

(declare-fun c!9845 () Bool)

(assert (=> b!69136 (= c!9845 (and ((_ is Cons!1466) (toList!708 lt!29682)) (= (_1!1056 (h!2051 (toList!708 lt!29682))) (_1!1056 lt!29680))))))

(declare-fun e!45267 () List!1470)

(declare-fun c!9847 () Bool)

(declare-fun bm!5912 () Bool)

(assert (=> bm!5912 (= call!5915 ($colon$colon!63 e!45267 (ite c!9847 (h!2051 (toList!708 lt!29682)) (tuple2!2091 (_1!1056 lt!29680) (_2!1056 lt!29680)))))))

(declare-fun c!9846 () Bool)

(assert (=> bm!5912 (= c!9846 c!9847)))

(declare-fun b!69137 () Bool)

(declare-fun res!37125 () Bool)

(declare-fun e!45269 () Bool)

(assert (=> b!69137 (=> (not res!37125) (not e!45269))))

(declare-fun lt!30351 () List!1470)

(assert (=> b!69137 (= res!37125 (containsKey!133 lt!30351 (_1!1056 lt!29680)))))

(declare-fun b!69138 () Bool)

(assert (=> b!69138 (= e!45269 (contains!711 lt!30351 (tuple2!2091 (_1!1056 lt!29680) (_2!1056 lt!29680))))))

(declare-fun b!69139 () Bool)

(assert (=> b!69139 (= e!45267 (ite c!9845 (t!4964 (toList!708 lt!29682)) (ite c!9844 (Cons!1466 (h!2051 (toList!708 lt!29682)) (t!4964 (toList!708 lt!29682))) Nil!1467)))))

(declare-fun b!69140 () Bool)

(assert (=> b!69140 (= e!45265 call!5915)))

(declare-fun d!14901 () Bool)

(assert (=> d!14901 e!45269))

(declare-fun res!37124 () Bool)

(assert (=> d!14901 (=> (not res!37124) (not e!45269))))

(assert (=> d!14901 (= res!37124 (isStrictlySorted!285 lt!30351))))

(assert (=> d!14901 (= lt!30351 e!45265)))

(assert (=> d!14901 (= c!9847 (and ((_ is Cons!1466) (toList!708 lt!29682)) (bvslt (_1!1056 (h!2051 (toList!708 lt!29682))) (_1!1056 lt!29680))))))

(assert (=> d!14901 (isStrictlySorted!285 (toList!708 lt!29682))))

(assert (=> d!14901 (= (insertStrictlySorted!52 (toList!708 lt!29682) (_1!1056 lt!29680) (_2!1056 lt!29680)) lt!30351)))

(declare-fun b!69134 () Bool)

(assert (=> b!69134 (= e!45267 (insertStrictlySorted!52 (t!4964 (toList!708 lt!29682)) (_1!1056 lt!29680) (_2!1056 lt!29680)))))

(assert (= (and d!14901 c!9847) b!69140))

(assert (= (and d!14901 (not c!9847)) b!69136))

(assert (= (and b!69136 c!9845) b!69135))

(assert (= (and b!69136 (not c!9845)) b!69132))

(assert (= (and b!69132 c!9844) b!69133))

(assert (= (and b!69132 (not c!9844)) b!69131))

(assert (= (or b!69133 b!69131) bm!5911))

(assert (= (or b!69135 bm!5911) bm!5910))

(assert (= (or b!69140 bm!5910) bm!5912))

(assert (= (and bm!5912 c!9846) b!69134))

(assert (= (and bm!5912 (not c!9846)) b!69139))

(assert (= (and d!14901 res!37124) b!69137))

(assert (= (and b!69137 res!37125) b!69138))

(declare-fun m!65019 () Bool)

(assert (=> d!14901 m!65019))

(assert (=> d!14901 m!64481))

(declare-fun m!65021 () Bool)

(assert (=> b!69138 m!65021))

(declare-fun m!65023 () Bool)

(assert (=> b!69137 m!65023))

(declare-fun m!65025 () Bool)

(assert (=> bm!5912 m!65025))

(declare-fun m!65027 () Bool)

(assert (=> b!69134 m!65027))

(assert (=> d!14663 d!14901))

(assert (=> b!68463 d!14811))

(declare-fun mapIsEmpty!3113 () Bool)

(declare-fun mapRes!3113 () Bool)

(assert (=> mapIsEmpty!3113 mapRes!3113))

(declare-fun condMapEmpty!3113 () Bool)

(declare-fun mapDefault!3113 () ValueCell!884)

(assert (=> mapNonEmpty!3111 (= condMapEmpty!3113 (= mapRest!3111 ((as const (Array (_ BitVec 32) ValueCell!884)) mapDefault!3113)))))

(declare-fun e!45271 () Bool)

(assert (=> mapNonEmpty!3111 (= tp!8421 (and e!45271 mapRes!3113))))

(declare-fun mapNonEmpty!3113 () Bool)

(declare-fun tp!8423 () Bool)

(declare-fun e!45270 () Bool)

(assert (=> mapNonEmpty!3113 (= mapRes!3113 (and tp!8423 e!45270))))

(declare-fun mapRest!3113 () (Array (_ BitVec 32) ValueCell!884))

(declare-fun mapKey!3113 () (_ BitVec 32))

(declare-fun mapValue!3113 () ValueCell!884)

(assert (=> mapNonEmpty!3113 (= mapRest!3111 (store mapRest!3113 mapKey!3113 mapValue!3113))))

(declare-fun b!69141 () Bool)

(assert (=> b!69141 (= e!45270 tp_is_empty!2455)))

(declare-fun b!69142 () Bool)

(assert (=> b!69142 (= e!45271 tp_is_empty!2455)))

(assert (= (and mapNonEmpty!3111 condMapEmpty!3113) mapIsEmpty!3113))

(assert (= (and mapNonEmpty!3111 (not condMapEmpty!3113)) mapNonEmpty!3113))

(assert (= (and mapNonEmpty!3113 ((_ is ValueCellFull!884) mapValue!3113)) b!69141))

(assert (= (and mapNonEmpty!3111 ((_ is ValueCellFull!884) mapDefault!3113)) b!69142))

(declare-fun m!65029 () Bool)

(assert (=> mapNonEmpty!3113 m!65029))

(declare-fun mapIsEmpty!3114 () Bool)

(declare-fun mapRes!3114 () Bool)

(assert (=> mapIsEmpty!3114 mapRes!3114))

(declare-fun condMapEmpty!3114 () Bool)

(declare-fun mapDefault!3114 () ValueCell!884)

(assert (=> mapNonEmpty!3112 (= condMapEmpty!3114 (= mapRest!3112 ((as const (Array (_ BitVec 32) ValueCell!884)) mapDefault!3114)))))

(declare-fun e!45273 () Bool)

(assert (=> mapNonEmpty!3112 (= tp!8422 (and e!45273 mapRes!3114))))

(declare-fun mapNonEmpty!3114 () Bool)

(declare-fun tp!8424 () Bool)

(declare-fun e!45272 () Bool)

(assert (=> mapNonEmpty!3114 (= mapRes!3114 (and tp!8424 e!45272))))

(declare-fun mapRest!3114 () (Array (_ BitVec 32) ValueCell!884))

(declare-fun mapValue!3114 () ValueCell!884)

(declare-fun mapKey!3114 () (_ BitVec 32))

(assert (=> mapNonEmpty!3114 (= mapRest!3112 (store mapRest!3114 mapKey!3114 mapValue!3114))))

(declare-fun b!69143 () Bool)

(assert (=> b!69143 (= e!45272 tp_is_empty!2455)))

(declare-fun b!69144 () Bool)

(assert (=> b!69144 (= e!45273 tp_is_empty!2455)))

(assert (= (and mapNonEmpty!3112 condMapEmpty!3114) mapIsEmpty!3114))

(assert (= (and mapNonEmpty!3112 (not condMapEmpty!3114)) mapNonEmpty!3114))

(assert (= (and mapNonEmpty!3114 ((_ is ValueCellFull!884) mapValue!3114)) b!69143))

(assert (= (and mapNonEmpty!3112 ((_ is ValueCellFull!884) mapDefault!3114)) b!69144))

(declare-fun m!65031 () Bool)

(assert (=> mapNonEmpty!3114 m!65031))

(declare-fun b_lambda!3081 () Bool)

(assert (= b_lambda!3073 (or (and b!68229 b_free!2077) (and b!68221 b_free!2079 (= (defaultEntry!2167 newMap!16) (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))))) b_lambda!3081)))

(declare-fun b_lambda!3083 () Bool)

(assert (= b_lambda!3071 (or (and b!68229 b_free!2077 (= (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) (defaultEntry!2167 newMap!16))) (and b!68221 b_free!2079) b_lambda!3083)))

(declare-fun b_lambda!3085 () Bool)

(assert (= b_lambda!3069 (or (and b!68229 b_free!2077 (= (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) (defaultEntry!2167 newMap!16))) (and b!68221 b_free!2079) b_lambda!3085)))

(declare-fun b_lambda!3087 () Bool)

(assert (= b_lambda!3077 (or (and b!68229 b_free!2077 (= (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) (defaultEntry!2167 newMap!16))) (and b!68221 b_free!2079) b_lambda!3087)))

(declare-fun b_lambda!3089 () Bool)

(assert (= b_lambda!3075 (or (and b!68229 b_free!2077) (and b!68221 b_free!2079 (= (defaultEntry!2167 newMap!16) (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))))) b_lambda!3089)))

(declare-fun b_lambda!3091 () Bool)

(assert (= b_lambda!3079 (or (and b!68229 b_free!2077 (= (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) (defaultEntry!2167 newMap!16))) (and b!68221 b_free!2079) b_lambda!3091)))

(check-sat (not d!14723) (not b!68870) (not b!69074) (not b!69129) (not b!68687) (not b!69039) (not b!68881) (not b!68785) (not b!68930) (not d!14865) (not b!68979) (not b!69010) (not b!68849) (not d!14851) (not d!14867) (not b!68945) (not bm!5869) (not d!14877) (not b!68947) (not d!14803) (not b!68943) (not b!68756) (not b!69134) (not b!69121) (not b!68868) (not bm!5904) (not b!68964) (not d!14699) (not b!69130) (not b!68936) (not b!68689) (not b!68649) (not d!14825) (not b!68975) (not b!68798) (not b!69065) (not d!14761) (not bm!5889) (not d!14849) (not d!14901) (not b!68760) (not b!68963) (not b!68948) (not b!69055) (not b!68950) (not b_lambda!3083) (not b_next!2077) (not b!69112) (not d!14717) (not b!69098) (not d!14785) (not b_next!2079) (not b!69097) (not b!68790) (not b!69137) (not b!68937) (not b!69095) (not b!69020) b_and!4241 (not b!68735) (not d!14811) (not d!14733) (not b!68932) (not b!69053) (not d!14837) (not b!69138) (not b!69127) (not b!68971) (not b!69050) (not d!14859) (not bm!5902) (not b!68799) (not d!14807) (not b!69124) (not d!14823) (not d!14697) (not b_lambda!3063) (not b!68889) (not b!69086) (not b!68662) (not b!68700) (not d!14749) (not b!68832) (not d!14725) (not b!69007) (not b!68707) (not b!68822) (not b!68821) (not d!14889) (not b!68800) (not d!14871) (not b_lambda!3081) (not d!14833) (not bm!5899) (not d!14793) (not d!14719) (not d!14711) (not b!68879) (not b!68823) (not d!14777) (not bm!5894) (not d!14883) (not b!68801) (not d!14885) tp_is_empty!2455 (not b!69032) (not bm!5896) (not d!14715) (not b!69101) (not b!68824) (not d!14841) (not b!68861) (not b!69083) (not d!14899) (not b!68817) (not d!14755) (not b!68838) (not b!69067) (not b!68650) (not mapNonEmpty!3114) (not b!68991) (not b!68883) (not b!69051) (not bm!5865) (not d!14753) (not bm!5866) (not b!68764) (not b_lambda!3091) (not b_lambda!3085) (not b!69049) (not b!68731) (not d!14835) (not b!68795) (not b!68781) (not b!69046) (not b!69122) (not b!69069) (not b!68848) (not b!69041) (not d!14855) (not bm!5874) (not b_lambda!3055) (not b!68871) (not b!68940) (not bm!5909) (not b!68734) (not b!68786) (not b!69070) (not d!14893) (not d!14843) (not d!14847) (not mapNonEmpty!3113) (not b!68767) (not b!68880) (not d!14813) (not d!14831) (not b!69047) (not b!69037) (not d!14845) (not d!14891) (not d!14727) (not b!68990) (not d!14863) (not bm!5864) (not b!68777) (not b!69057) (not b!68983) (not b!68792) (not b!68998) (not b!68866) (not b_lambda!3089) (not bm!5907) (not b!68953) (not d!14799) (not d!14791) (not b!68956) (not bm!5877) (not d!14775) (not b!68939) (not b!68797) (not b!69116) (not b!69075) (not b!68878) (not b!69028) (not b!68978) (not b!68840) (not b!69114) (not d!14797) (not b!69017) (not d!14739) (not d!14895) (not d!14869) (not d!14763) (not bm!5862) (not d!14771) (not b!68873) (not b!69029) (not b!68833) (not b!69043) (not d!14729) (not bm!5859) (not b!68955) (not b!68793) (not bm!5871) (not b!68779) (not bm!5893) (not b!69056) (not d!14757) (not b!69031) (not d!14735) (not b!69094) (not d!14829) (not b!69003) (not b!69027) (not bm!5847) (not b_lambda!3065) (not b!68845) (not d!14721) (not b!69038) (not b!68987) (not b!68835) (not b!68981) (not b!69119) (not b!68841) (not b!69054) (not b!69035) (not b!68788) (not b!68989) (not b!68794) (not bm!5886) (not d!14853) (not b!68757) (not b!68984) (not bm!5848) (not bm!5857) (not b!68770) (not d!14779) (not b!68706) b_and!4243 (not d!14875) (not d!14705) (not bm!5858) (not b!69072) (not d!14713) (not bm!5912) (not b!68782) (not b_lambda!3087) (not b!69013) (not b!68997) (not b!69093) (not b!68746) (not d!14805) (not b!68778) (not b!69111) (not b!68826) (not d!14839) (not bm!5842) (not b!68758) (not d!14857) (not d!14731) (not b!68994) (not d!14745) (not d!14747) (not b!69071) (not b!69076) (not b!69052) (not b!68761) (not b!68960) (not d!14887) (not d!14787) (not d!14743) (not d!14879) (not bm!5887) (not b!68985) (not b!69068) (not d!14707) (not b!69044) (not b!68796) (not b!68743) (not d!14861) (not b!69073) (not b!68749) (not b!68791) (not bm!5892) (not b!68988) (not b!68660) (not d!14737) (not b_lambda!3067) (not bm!5895) (not bm!5901) (not d!14773) (not b!69079) (not bm!5903))
(check-sat b_and!4241 b_and!4243 (not b_next!2077) (not b_next!2079))
(get-model)

(declare-fun d!14903 () Bool)

(assert (=> d!14903 (= (inRange!0 (index!3078 lt!30237) (mask!6111 newMap!16)) (and (bvsge (index!3078 lt!30237) #b00000000000000000000000000000000) (bvslt (index!3078 lt!30237) (bvadd (mask!6111 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!69003 d!14903))

(declare-fun d!14905 () Bool)

(assert (=> d!14905 (= (isDefined!83 (getValueByKey!129 (toList!708 lt!29805) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!316 (getValueByKey!129 (toList!708 lt!29805) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!2956 () Bool)

(assert (= bs!2956 d!14905))

(assert (=> bs!2956 m!64165))

(declare-fun m!65033 () Bool)

(assert (=> bs!2956 m!65033))

(assert (=> b!69043 d!14905))

(declare-fun b!69147 () Bool)

(declare-fun e!45275 () Option!135)

(assert (=> b!69147 (= e!45275 (getValueByKey!129 (t!4964 (toList!708 lt!29805)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69145 () Bool)

(declare-fun e!45274 () Option!135)

(assert (=> b!69145 (= e!45274 (Some!134 (_2!1056 (h!2051 (toList!708 lt!29805)))))))

(declare-fun b!69148 () Bool)

(assert (=> b!69148 (= e!45275 None!133)))

(declare-fun d!14907 () Bool)

(declare-fun c!9848 () Bool)

(assert (=> d!14907 (= c!9848 (and ((_ is Cons!1466) (toList!708 lt!29805)) (= (_1!1056 (h!2051 (toList!708 lt!29805))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!14907 (= (getValueByKey!129 (toList!708 lt!29805) #b0000000000000000000000000000000000000000000000000000000000000000) e!45274)))

(declare-fun b!69146 () Bool)

(assert (=> b!69146 (= e!45274 e!45275)))

(declare-fun c!9849 () Bool)

(assert (=> b!69146 (= c!9849 (and ((_ is Cons!1466) (toList!708 lt!29805)) (not (= (_1!1056 (h!2051 (toList!708 lt!29805))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!14907 c!9848) b!69145))

(assert (= (and d!14907 (not c!9848)) b!69146))

(assert (= (and b!69146 c!9849) b!69147))

(assert (= (and b!69146 (not c!9849)) b!69148))

(declare-fun m!65035 () Bool)

(assert (=> b!69147 m!65035))

(assert (=> b!69043 d!14907))

(declare-fun d!14909 () Bool)

(declare-fun res!37130 () Bool)

(declare-fun e!45280 () Bool)

(assert (=> d!14909 (=> res!37130 e!45280)))

(assert (=> d!14909 (= res!37130 (or ((_ is Nil!1467) lt!30215) ((_ is Nil!1467) (t!4964 lt!30215))))))

(assert (=> d!14909 (= (isStrictlySorted!285 lt!30215) e!45280)))

(declare-fun b!69153 () Bool)

(declare-fun e!45281 () Bool)

(assert (=> b!69153 (= e!45280 e!45281)))

(declare-fun res!37131 () Bool)

(assert (=> b!69153 (=> (not res!37131) (not e!45281))))

(assert (=> b!69153 (= res!37131 (bvslt (_1!1056 (h!2051 lt!30215)) (_1!1056 (h!2051 (t!4964 lt!30215)))))))

(declare-fun b!69154 () Bool)

(assert (=> b!69154 (= e!45281 (isStrictlySorted!285 (t!4964 lt!30215)))))

(assert (= (and d!14909 (not res!37130)) b!69153))

(assert (= (and b!69153 res!37131) b!69154))

(declare-fun m!65037 () Bool)

(assert (=> b!69154 m!65037))

(assert (=> d!14799 d!14909))

(declare-fun d!14911 () Bool)

(declare-fun res!37132 () Bool)

(declare-fun e!45282 () Bool)

(assert (=> d!14911 (=> res!37132 e!45282)))

(assert (=> d!14911 (= res!37132 (or ((_ is Nil!1467) (toList!708 (+!89 lt!29682 lt!29680))) ((_ is Nil!1467) (t!4964 (toList!708 (+!89 lt!29682 lt!29680))))))))

(assert (=> d!14911 (= (isStrictlySorted!285 (toList!708 (+!89 lt!29682 lt!29680))) e!45282)))

(declare-fun b!69155 () Bool)

(declare-fun e!45283 () Bool)

(assert (=> b!69155 (= e!45282 e!45283)))

(declare-fun res!37133 () Bool)

(assert (=> b!69155 (=> (not res!37133) (not e!45283))))

(assert (=> b!69155 (= res!37133 (bvslt (_1!1056 (h!2051 (toList!708 (+!89 lt!29682 lt!29680)))) (_1!1056 (h!2051 (t!4964 (toList!708 (+!89 lt!29682 lt!29680)))))))))

(declare-fun b!69156 () Bool)

(assert (=> b!69156 (= e!45283 (isStrictlySorted!285 (t!4964 (toList!708 (+!89 lt!29682 lt!29680)))))))

(assert (= (and d!14911 (not res!37132)) b!69155))

(assert (= (and b!69155 res!37133) b!69156))

(declare-fun m!65039 () Bool)

(assert (=> b!69156 m!65039))

(assert (=> d!14799 d!14911))

(declare-fun d!14913 () Bool)

(declare-fun lt!30352 () Bool)

(assert (=> d!14913 (= lt!30352 (select (content!73 (toList!708 lt!30058)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))))

(declare-fun e!45285 () Bool)

(assert (=> d!14913 (= lt!30352 e!45285)))

(declare-fun res!37135 () Bool)

(assert (=> d!14913 (=> (not res!37135) (not e!45285))))

(assert (=> d!14913 (= res!37135 ((_ is Cons!1466) (toList!708 lt!30058)))))

(assert (=> d!14913 (= (contains!711 (toList!708 lt!30058) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)) lt!30352)))

(declare-fun b!69157 () Bool)

(declare-fun e!45284 () Bool)

(assert (=> b!69157 (= e!45285 e!45284)))

(declare-fun res!37134 () Bool)

(assert (=> b!69157 (=> res!37134 e!45284)))

(assert (=> b!69157 (= res!37134 (= (h!2051 (toList!708 lt!30058)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))))

(declare-fun b!69158 () Bool)

(assert (=> b!69158 (= e!45284 (contains!711 (t!4964 (toList!708 lt!30058)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))))

(assert (= (and d!14913 res!37135) b!69157))

(assert (= (and b!69157 (not res!37134)) b!69158))

(declare-fun m!65041 () Bool)

(assert (=> d!14913 m!65041))

(declare-fun m!65043 () Bool)

(assert (=> d!14913 m!65043))

(declare-fun m!65045 () Bool)

(assert (=> b!69158 m!65045))

(assert (=> b!68794 d!14913))

(declare-fun b!69159 () Bool)

(declare-fun e!45289 () List!1470)

(declare-fun call!5917 () List!1470)

(assert (=> b!69159 (= e!45289 call!5917)))

(declare-fun b!69160 () Bool)

(declare-fun c!9850 () Bool)

(assert (=> b!69160 (= c!9850 (and ((_ is Cons!1466) (t!4964 (toList!708 (+!89 lt!29682 lt!29675)))) (bvsgt (_1!1056 (h!2051 (t!4964 (toList!708 (+!89 lt!29682 lt!29675))))) (_1!1056 lt!29680))))))

(declare-fun e!45287 () List!1470)

(assert (=> b!69160 (= e!45287 e!45289)))

(declare-fun b!69161 () Bool)

(assert (=> b!69161 (= e!45289 call!5917)))

(declare-fun b!69163 () Bool)

(declare-fun call!5916 () List!1470)

(assert (=> b!69163 (= e!45287 call!5916)))

(declare-fun bm!5913 () Bool)

(declare-fun call!5918 () List!1470)

(assert (=> bm!5913 (= call!5916 call!5918)))

(declare-fun bm!5914 () Bool)

(assert (=> bm!5914 (= call!5917 call!5916)))

(declare-fun b!69164 () Bool)

(declare-fun e!45286 () List!1470)

(assert (=> b!69164 (= e!45286 e!45287)))

(declare-fun c!9851 () Bool)

(assert (=> b!69164 (= c!9851 (and ((_ is Cons!1466) (t!4964 (toList!708 (+!89 lt!29682 lt!29675)))) (= (_1!1056 (h!2051 (t!4964 (toList!708 (+!89 lt!29682 lt!29675))))) (_1!1056 lt!29680))))))

(declare-fun c!9853 () Bool)

(declare-fun bm!5915 () Bool)

(declare-fun e!45288 () List!1470)

(assert (=> bm!5915 (= call!5918 ($colon$colon!63 e!45288 (ite c!9853 (h!2051 (t!4964 (toList!708 (+!89 lt!29682 lt!29675)))) (tuple2!2091 (_1!1056 lt!29680) (_2!1056 lt!29680)))))))

(declare-fun c!9852 () Bool)

(assert (=> bm!5915 (= c!9852 c!9853)))

(declare-fun b!69165 () Bool)

(declare-fun res!37137 () Bool)

(declare-fun e!45290 () Bool)

(assert (=> b!69165 (=> (not res!37137) (not e!45290))))

(declare-fun lt!30353 () List!1470)

(assert (=> b!69165 (= res!37137 (containsKey!133 lt!30353 (_1!1056 lt!29680)))))

(declare-fun b!69166 () Bool)

(assert (=> b!69166 (= e!45290 (contains!711 lt!30353 (tuple2!2091 (_1!1056 lt!29680) (_2!1056 lt!29680))))))

(declare-fun b!69167 () Bool)

(assert (=> b!69167 (= e!45288 (ite c!9851 (t!4964 (t!4964 (toList!708 (+!89 lt!29682 lt!29675)))) (ite c!9850 (Cons!1466 (h!2051 (t!4964 (toList!708 (+!89 lt!29682 lt!29675)))) (t!4964 (t!4964 (toList!708 (+!89 lt!29682 lt!29675))))) Nil!1467)))))

(declare-fun b!69168 () Bool)

(assert (=> b!69168 (= e!45286 call!5918)))

(declare-fun d!14915 () Bool)

(assert (=> d!14915 e!45290))

(declare-fun res!37136 () Bool)

(assert (=> d!14915 (=> (not res!37136) (not e!45290))))

(assert (=> d!14915 (= res!37136 (isStrictlySorted!285 lt!30353))))

(assert (=> d!14915 (= lt!30353 e!45286)))

(assert (=> d!14915 (= c!9853 (and ((_ is Cons!1466) (t!4964 (toList!708 (+!89 lt!29682 lt!29675)))) (bvslt (_1!1056 (h!2051 (t!4964 (toList!708 (+!89 lt!29682 lt!29675))))) (_1!1056 lt!29680))))))

(assert (=> d!14915 (isStrictlySorted!285 (t!4964 (toList!708 (+!89 lt!29682 lt!29675))))))

(assert (=> d!14915 (= (insertStrictlySorted!52 (t!4964 (toList!708 (+!89 lt!29682 lt!29675))) (_1!1056 lt!29680) (_2!1056 lt!29680)) lt!30353)))

(declare-fun b!69162 () Bool)

(assert (=> b!69162 (= e!45288 (insertStrictlySorted!52 (t!4964 (t!4964 (toList!708 (+!89 lt!29682 lt!29675)))) (_1!1056 lt!29680) (_2!1056 lt!29680)))))

(assert (= (and d!14915 c!9853) b!69168))

(assert (= (and d!14915 (not c!9853)) b!69164))

(assert (= (and b!69164 c!9851) b!69163))

(assert (= (and b!69164 (not c!9851)) b!69160))

(assert (= (and b!69160 c!9850) b!69161))

(assert (= (and b!69160 (not c!9850)) b!69159))

(assert (= (or b!69161 b!69159) bm!5914))

(assert (= (or b!69163 bm!5914) bm!5913))

(assert (= (or b!69168 bm!5913) bm!5915))

(assert (= (and bm!5915 c!9852) b!69162))

(assert (= (and bm!5915 (not c!9852)) b!69167))

(assert (= (and d!14915 res!37136) b!69165))

(assert (= (and b!69165 res!37137) b!69166))

(declare-fun m!65047 () Bool)

(assert (=> d!14915 m!65047))

(declare-fun m!65049 () Bool)

(assert (=> d!14915 m!65049))

(declare-fun m!65051 () Bool)

(assert (=> b!69166 m!65051))

(declare-fun m!65053 () Bool)

(assert (=> b!69165 m!65053))

(declare-fun m!65055 () Bool)

(assert (=> bm!5915 m!65055))

(declare-fun m!65057 () Bool)

(assert (=> b!69162 m!65057))

(assert (=> b!68731 d!14915))

(declare-fun d!14917 () Bool)

(declare-fun e!45292 () Bool)

(assert (=> d!14917 e!45292))

(declare-fun res!37138 () Bool)

(assert (=> d!14917 (=> res!37138 e!45292)))

(declare-fun lt!30357 () Bool)

(assert (=> d!14917 (= res!37138 (not lt!30357))))

(declare-fun lt!30356 () Bool)

(assert (=> d!14917 (= lt!30357 lt!30356)))

(declare-fun lt!30355 () Unit!1898)

(declare-fun e!45291 () Unit!1898)

(assert (=> d!14917 (= lt!30355 e!45291)))

(declare-fun c!9854 () Bool)

(assert (=> d!14917 (= c!9854 lt!30356)))

(assert (=> d!14917 (= lt!30356 (containsKey!133 (toList!708 (map!1137 (_2!1057 lt!30176))) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))

(assert (=> d!14917 (= (contains!709 (map!1137 (_2!1057 lt!30176)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) lt!30357)))

(declare-fun b!69169 () Bool)

(declare-fun lt!30354 () Unit!1898)

(assert (=> b!69169 (= e!45291 lt!30354)))

(assert (=> b!69169 (= lt!30354 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 (map!1137 (_2!1057 lt!30176))) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))

(assert (=> b!69169 (isDefined!83 (getValueByKey!129 (toList!708 (map!1137 (_2!1057 lt!30176))) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))

(declare-fun b!69170 () Bool)

(declare-fun Unit!1932 () Unit!1898)

(assert (=> b!69170 (= e!45291 Unit!1932)))

(declare-fun b!69171 () Bool)

(assert (=> b!69171 (= e!45292 (isDefined!83 (getValueByKey!129 (toList!708 (map!1137 (_2!1057 lt!30176))) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355))))))

(assert (= (and d!14917 c!9854) b!69169))

(assert (= (and d!14917 (not c!9854)) b!69170))

(assert (= (and d!14917 (not res!37138)) b!69171))

(assert (=> d!14917 m!63767))

(declare-fun m!65059 () Bool)

(assert (=> d!14917 m!65059))

(assert (=> b!69169 m!63767))

(declare-fun m!65061 () Bool)

(assert (=> b!69169 m!65061))

(assert (=> b!69169 m!63767))

(declare-fun m!65063 () Bool)

(assert (=> b!69169 m!65063))

(assert (=> b!69169 m!65063))

(declare-fun m!65065 () Bool)

(assert (=> b!69169 m!65065))

(assert (=> b!69171 m!63767))

(assert (=> b!69171 m!65063))

(assert (=> b!69171 m!65063))

(assert (=> b!69171 m!65065))

(assert (=> b!68930 d!14917))

(declare-fun d!14919 () Bool)

(assert (=> d!14919 (= (map!1137 (_2!1057 lt!30176)) (getCurrentListMap!403 (_keys!3810 (_2!1057 lt!30176)) (_values!2150 (_2!1057 lt!30176)) (mask!6111 (_2!1057 lt!30176)) (extraKeys!2034 (_2!1057 lt!30176)) (zeroValue!2073 (_2!1057 lt!30176)) (minValue!2073 (_2!1057 lt!30176)) #b00000000000000000000000000000000 (defaultEntry!2167 (_2!1057 lt!30176))))))

(declare-fun bs!2957 () Bool)

(assert (= bs!2957 d!14919))

(declare-fun m!65067 () Bool)

(assert (=> bs!2957 m!65067))

(assert (=> b!68930 d!14919))

(declare-fun d!14921 () Bool)

(declare-fun res!37139 () Bool)

(declare-fun e!45293 () Bool)

(assert (=> d!14921 (=> res!37139 e!45293)))

(assert (=> d!14921 (= res!37139 (and ((_ is Cons!1466) (toList!708 lt!29857)) (= (_1!1056 (h!2051 (toList!708 lt!29857))) (_1!1056 lt!29675))))))

(assert (=> d!14921 (= (containsKey!133 (toList!708 lt!29857) (_1!1056 lt!29675)) e!45293)))

(declare-fun b!69172 () Bool)

(declare-fun e!45294 () Bool)

(assert (=> b!69172 (= e!45293 e!45294)))

(declare-fun res!37140 () Bool)

(assert (=> b!69172 (=> (not res!37140) (not e!45294))))

(assert (=> b!69172 (= res!37140 (and (or (not ((_ is Cons!1466) (toList!708 lt!29857))) (bvsle (_1!1056 (h!2051 (toList!708 lt!29857))) (_1!1056 lt!29675))) ((_ is Cons!1466) (toList!708 lt!29857)) (bvslt (_1!1056 (h!2051 (toList!708 lt!29857))) (_1!1056 lt!29675))))))

(declare-fun b!69173 () Bool)

(assert (=> b!69173 (= e!45294 (containsKey!133 (t!4964 (toList!708 lt!29857)) (_1!1056 lt!29675)))))

(assert (= (and d!14921 (not res!37139)) b!69172))

(assert (= (and b!69172 res!37140) b!69173))

(declare-fun m!65069 () Bool)

(assert (=> b!69173 m!65069))

(assert (=> d!14757 d!14921))

(declare-fun d!14923 () Bool)

(assert (=> d!14923 (= (isEmpty!316 (getValueByKey!129 (toList!708 lt!29677) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355))) (not ((_ is Some!134) (getValueByKey!129 (toList!708 lt!29677) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))))

(assert (=> d!14879 d!14923))

(declare-fun d!14925 () Bool)

(assert (=> d!14925 (= (validKeyInArray!0 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!69017 d!14925))

(assert (=> b!68971 d!14679))

(declare-fun d!14927 () Bool)

(assert (=> d!14927 (= (get!1129 (getValueByKey!129 (toList!708 (+!89 lt!29818 (tuple2!2091 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))) lt!29810)) (v!2491 (getValueByKey!129 (toList!708 (+!89 lt!29818 (tuple2!2091 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))) lt!29810)))))

(assert (=> d!14853 d!14927))

(declare-fun b!69176 () Bool)

(declare-fun e!45296 () Option!135)

(assert (=> b!69176 (= e!45296 (getValueByKey!129 (t!4964 (toList!708 (+!89 lt!29818 (tuple2!2091 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))) lt!29810))))

(declare-fun b!69174 () Bool)

(declare-fun e!45295 () Option!135)

(assert (=> b!69174 (= e!45295 (Some!134 (_2!1056 (h!2051 (toList!708 (+!89 lt!29818 (tuple2!2091 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))))))))

(declare-fun b!69177 () Bool)

(assert (=> b!69177 (= e!45296 None!133)))

(declare-fun d!14929 () Bool)

(declare-fun c!9855 () Bool)

(assert (=> d!14929 (= c!9855 (and ((_ is Cons!1466) (toList!708 (+!89 lt!29818 (tuple2!2091 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))) (= (_1!1056 (h!2051 (toList!708 (+!89 lt!29818 (tuple2!2091 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))) lt!29810)))))

(assert (=> d!14929 (= (getValueByKey!129 (toList!708 (+!89 lt!29818 (tuple2!2091 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))) lt!29810) e!45295)))

(declare-fun b!69175 () Bool)

(assert (=> b!69175 (= e!45295 e!45296)))

(declare-fun c!9856 () Bool)

(assert (=> b!69175 (= c!9856 (and ((_ is Cons!1466) (toList!708 (+!89 lt!29818 (tuple2!2091 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))) (not (= (_1!1056 (h!2051 (toList!708 (+!89 lt!29818 (tuple2!2091 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))) lt!29810))))))

(assert (= (and d!14929 c!9855) b!69174))

(assert (= (and d!14929 (not c!9855)) b!69175))

(assert (= (and b!69175 c!9856) b!69176))

(assert (= (and b!69175 (not c!9856)) b!69177))

(declare-fun m!65071 () Bool)

(assert (=> b!69176 m!65071))

(assert (=> d!14853 d!14929))

(declare-fun d!14931 () Bool)

(declare-fun e!45297 () Bool)

(assert (=> d!14931 e!45297))

(declare-fun res!37141 () Bool)

(assert (=> d!14931 (=> (not res!37141) (not e!45297))))

(declare-fun lt!30361 () ListLongMap!1385)

(assert (=> d!14931 (= res!37141 (contains!709 lt!30361 (_1!1056 (ite (or c!9837 c!9834) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))))))))

(declare-fun lt!30359 () List!1470)

(assert (=> d!14931 (= lt!30361 (ListLongMap!1386 lt!30359))))

(declare-fun lt!30358 () Unit!1898)

(declare-fun lt!30360 () Unit!1898)

(assert (=> d!14931 (= lt!30358 lt!30360)))

(assert (=> d!14931 (= (getValueByKey!129 lt!30359 (_1!1056 (ite (or c!9837 c!9834) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))))) (Some!134 (_2!1056 (ite (or c!9837 c!9834) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))))))))

(assert (=> d!14931 (= lt!30360 (lemmaContainsTupThenGetReturnValue!49 lt!30359 (_1!1056 (ite (or c!9837 c!9834) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))) (_2!1056 (ite (or c!9837 c!9834) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))))))))

(assert (=> d!14931 (= lt!30359 (insertStrictlySorted!52 (toList!708 (ite c!9837 call!5911 (ite c!9834 call!5908 call!5906))) (_1!1056 (ite (or c!9837 c!9834) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))) (_2!1056 (ite (or c!9837 c!9834) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))))))))

(assert (=> d!14931 (= (+!89 (ite c!9837 call!5911 (ite c!9834 call!5908 call!5906)) (ite (or c!9837 c!9834) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))) lt!30361)))

(declare-fun b!69178 () Bool)

(declare-fun res!37142 () Bool)

(assert (=> b!69178 (=> (not res!37142) (not e!45297))))

(assert (=> b!69178 (= res!37142 (= (getValueByKey!129 (toList!708 lt!30361) (_1!1056 (ite (or c!9837 c!9834) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))))) (Some!134 (_2!1056 (ite (or c!9837 c!9834) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))))))))

(declare-fun b!69179 () Bool)

(assert (=> b!69179 (= e!45297 (contains!711 (toList!708 lt!30361) (ite (or c!9837 c!9834) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))))))

(assert (= (and d!14931 res!37141) b!69178))

(assert (= (and b!69178 res!37142) b!69179))

(declare-fun m!65073 () Bool)

(assert (=> d!14931 m!65073))

(declare-fun m!65075 () Bool)

(assert (=> d!14931 m!65075))

(declare-fun m!65077 () Bool)

(assert (=> d!14931 m!65077))

(declare-fun m!65079 () Bool)

(assert (=> d!14931 m!65079))

(declare-fun m!65081 () Bool)

(assert (=> b!69178 m!65081))

(declare-fun m!65083 () Bool)

(assert (=> b!69179 m!65083))

(assert (=> bm!5904 d!14931))

(declare-fun d!14933 () Bool)

(assert (=> d!14933 (isDefined!83 (getValueByKey!129 (toList!708 lt!29835) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!30362 () Unit!1898)

(assert (=> d!14933 (= lt!30362 (choose!399 (toList!708 lt!29835) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!45298 () Bool)

(assert (=> d!14933 e!45298))

(declare-fun res!37143 () Bool)

(assert (=> d!14933 (=> (not res!37143) (not e!45298))))

(assert (=> d!14933 (= res!37143 (isStrictlySorted!285 (toList!708 lt!29835)))))

(assert (=> d!14933 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 lt!29835) #b1000000000000000000000000000000000000000000000000000000000000000) lt!30362)))

(declare-fun b!69180 () Bool)

(assert (=> b!69180 (= e!45298 (containsKey!133 (toList!708 lt!29835) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!14933 res!37143) b!69180))

(assert (=> d!14933 m!64609))

(assert (=> d!14933 m!64609))

(assert (=> d!14933 m!64611))

(declare-fun m!65085 () Bool)

(assert (=> d!14933 m!65085))

(declare-fun m!65087 () Bool)

(assert (=> d!14933 m!65087))

(assert (=> b!69180 m!64605))

(assert (=> b!68945 d!14933))

(declare-fun d!14935 () Bool)

(assert (=> d!14935 (= (isDefined!83 (getValueByKey!129 (toList!708 lt!29835) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!316 (getValueByKey!129 (toList!708 lt!29835) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!2958 () Bool)

(assert (= bs!2958 d!14935))

(assert (=> bs!2958 m!64609))

(declare-fun m!65089 () Bool)

(assert (=> bs!2958 m!65089))

(assert (=> b!68945 d!14935))

(declare-fun b!69183 () Bool)

(declare-fun e!45300 () Option!135)

(assert (=> b!69183 (= e!45300 (getValueByKey!129 (t!4964 (toList!708 lt!29835)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69181 () Bool)

(declare-fun e!45299 () Option!135)

(assert (=> b!69181 (= e!45299 (Some!134 (_2!1056 (h!2051 (toList!708 lt!29835)))))))

(declare-fun b!69184 () Bool)

(assert (=> b!69184 (= e!45300 None!133)))

(declare-fun d!14937 () Bool)

(declare-fun c!9857 () Bool)

(assert (=> d!14937 (= c!9857 (and ((_ is Cons!1466) (toList!708 lt!29835)) (= (_1!1056 (h!2051 (toList!708 lt!29835))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!14937 (= (getValueByKey!129 (toList!708 lt!29835) #b1000000000000000000000000000000000000000000000000000000000000000) e!45299)))

(declare-fun b!69182 () Bool)

(assert (=> b!69182 (= e!45299 e!45300)))

(declare-fun c!9858 () Bool)

(assert (=> b!69182 (= c!9858 (and ((_ is Cons!1466) (toList!708 lt!29835)) (not (= (_1!1056 (h!2051 (toList!708 lt!29835))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!14937 c!9857) b!69181))

(assert (= (and d!14937 (not c!9857)) b!69182))

(assert (= (and b!69182 c!9858) b!69183))

(assert (= (and b!69182 (not c!9858)) b!69184))

(declare-fun m!65091 () Bool)

(assert (=> b!69183 m!65091))

(assert (=> b!68945 d!14937))

(declare-fun d!14939 () Bool)

(assert (=> d!14939 (= (apply!73 (+!89 lt!30254 (tuple2!2091 lt!30244 (minValue!2073 newMap!16))) lt!30241) (apply!73 lt!30254 lt!30241))))

(declare-fun lt!30363 () Unit!1898)

(assert (=> d!14939 (= lt!30363 (choose!396 lt!30254 lt!30244 (minValue!2073 newMap!16) lt!30241))))

(declare-fun e!45301 () Bool)

(assert (=> d!14939 e!45301))

(declare-fun res!37144 () Bool)

(assert (=> d!14939 (=> (not res!37144) (not e!45301))))

(assert (=> d!14939 (= res!37144 (contains!709 lt!30254 lt!30241))))

(assert (=> d!14939 (= (addApplyDifferent!49 lt!30254 lt!30244 (minValue!2073 newMap!16) lt!30241) lt!30363)))

(declare-fun b!69185 () Bool)

(assert (=> b!69185 (= e!45301 (not (= lt!30241 lt!30244)))))

(assert (= (and d!14939 res!37144) b!69185))

(declare-fun m!65093 () Bool)

(assert (=> d!14939 m!65093))

(assert (=> d!14939 m!64729))

(assert (=> d!14939 m!64737))

(declare-fun m!65095 () Bool)

(assert (=> d!14939 m!65095))

(assert (=> d!14939 m!64729))

(assert (=> d!14939 m!64731))

(assert (=> b!69035 d!14939))

(declare-fun b!69186 () Bool)

(declare-fun e!45307 () Bool)

(declare-fun lt!30364 () ListLongMap!1385)

(assert (=> b!69186 (= e!45307 (isEmpty!314 lt!30364))))

(declare-fun b!69187 () Bool)

(declare-fun e!45305 () Bool)

(declare-fun e!45303 () Bool)

(assert (=> b!69187 (= e!45305 e!45303)))

(assert (=> b!69187 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))))))

(declare-fun res!37146 () Bool)

(assert (=> b!69187 (= res!37146 (contains!709 lt!30364 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!69187 (=> (not res!37146) (not e!45303))))

(declare-fun b!69188 () Bool)

(declare-fun e!45306 () ListLongMap!1385)

(declare-fun e!45304 () ListLongMap!1385)

(assert (=> b!69188 (= e!45306 e!45304)))

(declare-fun c!9862 () Bool)

(assert (=> b!69188 (= c!9862 (validKeyInArray!0 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!69189 () Bool)

(declare-fun lt!30369 () Unit!1898)

(declare-fun lt!30370 () Unit!1898)

(assert (=> b!69189 (= lt!30369 lt!30370)))

(declare-fun lt!30366 () (_ BitVec 64))

(declare-fun lt!30365 () V!2921)

(declare-fun lt!30367 () ListLongMap!1385)

(declare-fun lt!30368 () (_ BitVec 64))

(assert (=> b!69189 (not (contains!709 (+!89 lt!30367 (tuple2!2091 lt!30366 lt!30365)) lt!30368))))

(assert (=> b!69189 (= lt!30370 (addStillNotContains!23 lt!30367 lt!30366 lt!30365 lt!30368))))

(assert (=> b!69189 (= lt!30368 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!69189 (= lt!30365 (get!1126 (select (arr!1829 (ite (or c!9716 c!9713) (_values!2150 newMap!16) (array!3834 (store (arr!1829 (_values!2150 newMap!16)) (index!3078 lt!29944) (ValueCellFull!884 lt!29673)) (size!2066 (_values!2150 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!321 (defaultEntry!2167 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!69189 (= lt!30366 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!5919 () ListLongMap!1385)

(assert (=> b!69189 (= lt!30367 call!5919)))

(assert (=> b!69189 (= e!45304 (+!89 call!5919 (tuple2!2091 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000) (get!1126 (select (arr!1829 (ite (or c!9716 c!9713) (_values!2150 newMap!16) (array!3834 (store (arr!1829 (_values!2150 newMap!16)) (index!3078 lt!29944) (ValueCellFull!884 lt!29673)) (size!2066 (_values!2150 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!321 (defaultEntry!2167 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!69190 () Bool)

(assert (=> b!69190 (= e!45307 (= lt!30364 (getCurrentListMapNoExtraKeys!53 (_keys!3810 newMap!16) (ite (or c!9716 c!9713) (_values!2150 newMap!16) (array!3834 (store (arr!1829 (_values!2150 newMap!16)) (index!3078 lt!29944) (ValueCellFull!884 lt!29673)) (size!2066 (_values!2150 newMap!16)))) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2167 newMap!16))))))

(declare-fun b!69191 () Bool)

(assert (=> b!69191 (= e!45306 (ListLongMap!1386 Nil!1467))))

(declare-fun b!69192 () Bool)

(declare-fun e!45302 () Bool)

(assert (=> b!69192 (= e!45302 e!45305)))

(declare-fun c!9859 () Bool)

(declare-fun e!45308 () Bool)

(assert (=> b!69192 (= c!9859 e!45308)))

(declare-fun res!37148 () Bool)

(assert (=> b!69192 (=> (not res!37148) (not e!45308))))

(assert (=> b!69192 (= res!37148 (bvslt #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))))))

(declare-fun b!69193 () Bool)

(declare-fun res!37145 () Bool)

(assert (=> b!69193 (=> (not res!37145) (not e!45302))))

(assert (=> b!69193 (= res!37145 (not (contains!709 lt!30364 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!69194 () Bool)

(assert (=> b!69194 (= e!45305 e!45307)))

(declare-fun c!9860 () Bool)

(assert (=> b!69194 (= c!9860 (bvslt #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))))))

(declare-fun d!14941 () Bool)

(assert (=> d!14941 e!45302))

(declare-fun res!37147 () Bool)

(assert (=> d!14941 (=> (not res!37147) (not e!45302))))

(assert (=> d!14941 (= res!37147 (not (contains!709 lt!30364 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!14941 (= lt!30364 e!45306)))

(declare-fun c!9861 () Bool)

(assert (=> d!14941 (= c!9861 (bvsge #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))))))

(assert (=> d!14941 (validMask!0 (mask!6111 newMap!16))))

(assert (=> d!14941 (= (getCurrentListMapNoExtraKeys!53 (_keys!3810 newMap!16) (ite (or c!9716 c!9713) (_values!2150 newMap!16) (array!3834 (store (arr!1829 (_values!2150 newMap!16)) (index!3078 lt!29944) (ValueCellFull!884 lt!29673)) (size!2066 (_values!2150 newMap!16)))) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) lt!30364)))

(declare-fun bm!5916 () Bool)

(assert (=> bm!5916 (= call!5919 (getCurrentListMapNoExtraKeys!53 (_keys!3810 newMap!16) (ite (or c!9716 c!9713) (_values!2150 newMap!16) (array!3834 (store (arr!1829 (_values!2150 newMap!16)) (index!3078 lt!29944) (ValueCellFull!884 lt!29673)) (size!2066 (_values!2150 newMap!16)))) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2167 newMap!16)))))

(declare-fun b!69195 () Bool)

(assert (=> b!69195 (= e!45304 call!5919)))

(declare-fun b!69196 () Bool)

(assert (=> b!69196 (= e!45308 (validKeyInArray!0 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!69196 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!69197 () Bool)

(assert (=> b!69197 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))))))

(assert (=> b!69197 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2066 (ite (or c!9716 c!9713) (_values!2150 newMap!16) (array!3834 (store (arr!1829 (_values!2150 newMap!16)) (index!3078 lt!29944) (ValueCellFull!884 lt!29673)) (size!2066 (_values!2150 newMap!16)))))))))

(assert (=> b!69197 (= e!45303 (= (apply!73 lt!30364 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)) (get!1126 (select (arr!1829 (ite (or c!9716 c!9713) (_values!2150 newMap!16) (array!3834 (store (arr!1829 (_values!2150 newMap!16)) (index!3078 lt!29944) (ValueCellFull!884 lt!29673)) (size!2066 (_values!2150 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!321 (defaultEntry!2167 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!14941 c!9861) b!69191))

(assert (= (and d!14941 (not c!9861)) b!69188))

(assert (= (and b!69188 c!9862) b!69189))

(assert (= (and b!69188 (not c!9862)) b!69195))

(assert (= (or b!69189 b!69195) bm!5916))

(assert (= (and d!14941 res!37147) b!69193))

(assert (= (and b!69193 res!37145) b!69192))

(assert (= (and b!69192 res!37148) b!69196))

(assert (= (and b!69192 c!9859) b!69187))

(assert (= (and b!69192 (not c!9859)) b!69194))

(assert (= (and b!69187 res!37146) b!69197))

(assert (= (and b!69194 c!9860) b!69190))

(assert (= (and b!69194 (not c!9860)) b!69186))

(declare-fun b_lambda!3093 () Bool)

(assert (=> (not b_lambda!3093) (not b!69189)))

(assert (=> b!69189 t!4978))

(declare-fun b_and!4245 () Bool)

(assert (= b_and!4241 (and (=> t!4978 result!2615) b_and!4245)))

(assert (=> b!69189 t!4980))

(declare-fun b_and!4247 () Bool)

(assert (= b_and!4243 (and (=> t!4980 result!2617) b_and!4247)))

(declare-fun b_lambda!3095 () Bool)

(assert (=> (not b_lambda!3095) (not b!69197)))

(assert (=> b!69197 t!4978))

(declare-fun b_and!4249 () Bool)

(assert (= b_and!4245 (and (=> t!4978 result!2615) b_and!4249)))

(assert (=> b!69197 t!4980))

(declare-fun b_and!4251 () Bool)

(assert (= b_and!4247 (and (=> t!4980 result!2617) b_and!4251)))

(assert (=> b!69196 m!64177))

(assert (=> b!69196 m!64177))

(assert (=> b!69196 m!64187))

(assert (=> b!69188 m!64177))

(assert (=> b!69188 m!64177))

(assert (=> b!69188 m!64187))

(declare-fun m!65097 () Bool)

(assert (=> bm!5916 m!65097))

(assert (=> b!69190 m!65097))

(assert (=> b!69187 m!64177))

(assert (=> b!69187 m!64177))

(declare-fun m!65099 () Bool)

(assert (=> b!69187 m!65099))

(assert (=> b!69197 m!64705))

(assert (=> b!69197 m!64243))

(assert (=> b!69197 m!64709))

(assert (=> b!69197 m!64177))

(declare-fun m!65101 () Bool)

(assert (=> b!69197 m!65101))

(assert (=> b!69197 m!64243))

(assert (=> b!69197 m!64705))

(assert (=> b!69197 m!64177))

(declare-fun m!65103 () Bool)

(assert (=> b!69186 m!65103))

(declare-fun m!65105 () Bool)

(assert (=> b!69189 m!65105))

(assert (=> b!69189 m!64705))

(assert (=> b!69189 m!64243))

(assert (=> b!69189 m!64709))

(assert (=> b!69189 m!64243))

(declare-fun m!65107 () Bool)

(assert (=> b!69189 m!65107))

(declare-fun m!65109 () Bool)

(assert (=> b!69189 m!65109))

(assert (=> b!69189 m!64705))

(assert (=> b!69189 m!65107))

(declare-fun m!65111 () Bool)

(assert (=> b!69189 m!65111))

(assert (=> b!69189 m!64177))

(declare-fun m!65113 () Bool)

(assert (=> d!14941 m!65113))

(assert (=> d!14941 m!64193))

(declare-fun m!65115 () Bool)

(assert (=> b!69193 m!65115))

(assert (=> b!69035 d!14941))

(declare-fun d!14943 () Bool)

(assert (=> d!14943 (= (apply!73 (+!89 lt!30240 (tuple2!2091 lt!30252 (zeroValue!2073 newMap!16))) lt!30249) (get!1129 (getValueByKey!129 (toList!708 (+!89 lt!30240 (tuple2!2091 lt!30252 (zeroValue!2073 newMap!16)))) lt!30249)))))

(declare-fun bs!2959 () Bool)

(assert (= bs!2959 d!14943))

(declare-fun m!65117 () Bool)

(assert (=> bs!2959 m!65117))

(assert (=> bs!2959 m!65117))

(declare-fun m!65119 () Bool)

(assert (=> bs!2959 m!65119))

(assert (=> b!69035 d!14943))

(declare-fun d!14945 () Bool)

(assert (=> d!14945 (= (apply!73 (+!89 lt!30258 (tuple2!2091 lt!30255 (minValue!2073 newMap!16))) lt!30250) (apply!73 lt!30258 lt!30250))))

(declare-fun lt!30371 () Unit!1898)

(assert (=> d!14945 (= lt!30371 (choose!396 lt!30258 lt!30255 (minValue!2073 newMap!16) lt!30250))))

(declare-fun e!45309 () Bool)

(assert (=> d!14945 e!45309))

(declare-fun res!37149 () Bool)

(assert (=> d!14945 (=> (not res!37149) (not e!45309))))

(assert (=> d!14945 (= res!37149 (contains!709 lt!30258 lt!30250))))

(assert (=> d!14945 (= (addApplyDifferent!49 lt!30258 lt!30255 (minValue!2073 newMap!16) lt!30250) lt!30371)))

(declare-fun b!69198 () Bool)

(assert (=> b!69198 (= e!45309 (not (= lt!30250 lt!30255)))))

(assert (= (and d!14945 res!37149) b!69198))

(declare-fun m!65121 () Bool)

(assert (=> d!14945 m!65121))

(assert (=> d!14945 m!64719))

(assert (=> d!14945 m!64743))

(declare-fun m!65123 () Bool)

(assert (=> d!14945 m!65123))

(assert (=> d!14945 m!64719))

(assert (=> d!14945 m!64721))

(assert (=> b!69035 d!14945))

(declare-fun d!14947 () Bool)

(assert (=> d!14947 (= (apply!73 lt!30258 lt!30250) (get!1129 (getValueByKey!129 (toList!708 lt!30258) lt!30250)))))

(declare-fun bs!2960 () Bool)

(assert (= bs!2960 d!14947))

(declare-fun m!65125 () Bool)

(assert (=> bs!2960 m!65125))

(assert (=> bs!2960 m!65125))

(declare-fun m!65127 () Bool)

(assert (=> bs!2960 m!65127))

(assert (=> b!69035 d!14947))

(declare-fun d!14949 () Bool)

(assert (=> d!14949 (= (apply!73 (+!89 lt!30240 (tuple2!2091 lt!30252 (zeroValue!2073 newMap!16))) lt!30249) (apply!73 lt!30240 lt!30249))))

(declare-fun lt!30372 () Unit!1898)

(assert (=> d!14949 (= lt!30372 (choose!396 lt!30240 lt!30252 (zeroValue!2073 newMap!16) lt!30249))))

(declare-fun e!45310 () Bool)

(assert (=> d!14949 e!45310))

(declare-fun res!37150 () Bool)

(assert (=> d!14949 (=> (not res!37150) (not e!45310))))

(assert (=> d!14949 (= res!37150 (contains!709 lt!30240 lt!30249))))

(assert (=> d!14949 (= (addApplyDifferent!49 lt!30240 lt!30252 (zeroValue!2073 newMap!16) lt!30249) lt!30372)))

(declare-fun b!69199 () Bool)

(assert (=> b!69199 (= e!45310 (not (= lt!30249 lt!30252)))))

(assert (= (and d!14949 res!37150) b!69199))

(declare-fun m!65129 () Bool)

(assert (=> d!14949 m!65129))

(assert (=> d!14949 m!64717))

(assert (=> d!14949 m!64739))

(declare-fun m!65131 () Bool)

(assert (=> d!14949 m!65131))

(assert (=> d!14949 m!64717))

(assert (=> d!14949 m!64723))

(assert (=> b!69035 d!14949))

(declare-fun d!14951 () Bool)

(assert (=> d!14951 (= (apply!73 lt!30240 lt!30249) (get!1129 (getValueByKey!129 (toList!708 lt!30240) lt!30249)))))

(declare-fun bs!2961 () Bool)

(assert (= bs!2961 d!14951))

(declare-fun m!65133 () Bool)

(assert (=> bs!2961 m!65133))

(assert (=> bs!2961 m!65133))

(declare-fun m!65135 () Bool)

(assert (=> bs!2961 m!65135))

(assert (=> b!69035 d!14951))

(declare-fun d!14953 () Bool)

(assert (=> d!14953 (= (apply!73 (+!89 lt!30254 (tuple2!2091 lt!30244 (minValue!2073 newMap!16))) lt!30241) (get!1129 (getValueByKey!129 (toList!708 (+!89 lt!30254 (tuple2!2091 lt!30244 (minValue!2073 newMap!16)))) lt!30241)))))

(declare-fun bs!2962 () Bool)

(assert (= bs!2962 d!14953))

(declare-fun m!65137 () Bool)

(assert (=> bs!2962 m!65137))

(assert (=> bs!2962 m!65137))

(declare-fun m!65139 () Bool)

(assert (=> bs!2962 m!65139))

(assert (=> b!69035 d!14953))

(declare-fun d!14955 () Bool)

(declare-fun e!45311 () Bool)

(assert (=> d!14955 e!45311))

(declare-fun res!37151 () Bool)

(assert (=> d!14955 (=> (not res!37151) (not e!45311))))

(declare-fun lt!30376 () ListLongMap!1385)

(assert (=> d!14955 (= res!37151 (contains!709 lt!30376 (_1!1056 (tuple2!2091 lt!30243 (zeroValue!2073 newMap!16)))))))

(declare-fun lt!30374 () List!1470)

(assert (=> d!14955 (= lt!30376 (ListLongMap!1386 lt!30374))))

(declare-fun lt!30373 () Unit!1898)

(declare-fun lt!30375 () Unit!1898)

(assert (=> d!14955 (= lt!30373 lt!30375)))

(assert (=> d!14955 (= (getValueByKey!129 lt!30374 (_1!1056 (tuple2!2091 lt!30243 (zeroValue!2073 newMap!16)))) (Some!134 (_2!1056 (tuple2!2091 lt!30243 (zeroValue!2073 newMap!16)))))))

(assert (=> d!14955 (= lt!30375 (lemmaContainsTupThenGetReturnValue!49 lt!30374 (_1!1056 (tuple2!2091 lt!30243 (zeroValue!2073 newMap!16))) (_2!1056 (tuple2!2091 lt!30243 (zeroValue!2073 newMap!16)))))))

(assert (=> d!14955 (= lt!30374 (insertStrictlySorted!52 (toList!708 lt!30239) (_1!1056 (tuple2!2091 lt!30243 (zeroValue!2073 newMap!16))) (_2!1056 (tuple2!2091 lt!30243 (zeroValue!2073 newMap!16)))))))

(assert (=> d!14955 (= (+!89 lt!30239 (tuple2!2091 lt!30243 (zeroValue!2073 newMap!16))) lt!30376)))

(declare-fun b!69200 () Bool)

(declare-fun res!37152 () Bool)

(assert (=> b!69200 (=> (not res!37152) (not e!45311))))

(assert (=> b!69200 (= res!37152 (= (getValueByKey!129 (toList!708 lt!30376) (_1!1056 (tuple2!2091 lt!30243 (zeroValue!2073 newMap!16)))) (Some!134 (_2!1056 (tuple2!2091 lt!30243 (zeroValue!2073 newMap!16))))))))

(declare-fun b!69201 () Bool)

(assert (=> b!69201 (= e!45311 (contains!711 (toList!708 lt!30376) (tuple2!2091 lt!30243 (zeroValue!2073 newMap!16))))))

(assert (= (and d!14955 res!37151) b!69200))

(assert (= (and b!69200 res!37152) b!69201))

(declare-fun m!65141 () Bool)

(assert (=> d!14955 m!65141))

(declare-fun m!65143 () Bool)

(assert (=> d!14955 m!65143))

(declare-fun m!65145 () Bool)

(assert (=> d!14955 m!65145))

(declare-fun m!65147 () Bool)

(assert (=> d!14955 m!65147))

(declare-fun m!65149 () Bool)

(assert (=> b!69200 m!65149))

(declare-fun m!65151 () Bool)

(assert (=> b!69201 m!65151))

(assert (=> b!69035 d!14955))

(declare-fun d!14957 () Bool)

(declare-fun e!45312 () Bool)

(assert (=> d!14957 e!45312))

(declare-fun res!37153 () Bool)

(assert (=> d!14957 (=> (not res!37153) (not e!45312))))

(declare-fun lt!30380 () ListLongMap!1385)

(assert (=> d!14957 (= res!37153 (contains!709 lt!30380 (_1!1056 (tuple2!2091 lt!30252 (zeroValue!2073 newMap!16)))))))

(declare-fun lt!30378 () List!1470)

(assert (=> d!14957 (= lt!30380 (ListLongMap!1386 lt!30378))))

(declare-fun lt!30377 () Unit!1898)

(declare-fun lt!30379 () Unit!1898)

(assert (=> d!14957 (= lt!30377 lt!30379)))

(assert (=> d!14957 (= (getValueByKey!129 lt!30378 (_1!1056 (tuple2!2091 lt!30252 (zeroValue!2073 newMap!16)))) (Some!134 (_2!1056 (tuple2!2091 lt!30252 (zeroValue!2073 newMap!16)))))))

(assert (=> d!14957 (= lt!30379 (lemmaContainsTupThenGetReturnValue!49 lt!30378 (_1!1056 (tuple2!2091 lt!30252 (zeroValue!2073 newMap!16))) (_2!1056 (tuple2!2091 lt!30252 (zeroValue!2073 newMap!16)))))))

(assert (=> d!14957 (= lt!30378 (insertStrictlySorted!52 (toList!708 lt!30240) (_1!1056 (tuple2!2091 lt!30252 (zeroValue!2073 newMap!16))) (_2!1056 (tuple2!2091 lt!30252 (zeroValue!2073 newMap!16)))))))

(assert (=> d!14957 (= (+!89 lt!30240 (tuple2!2091 lt!30252 (zeroValue!2073 newMap!16))) lt!30380)))

(declare-fun b!69202 () Bool)

(declare-fun res!37154 () Bool)

(assert (=> b!69202 (=> (not res!37154) (not e!45312))))

(assert (=> b!69202 (= res!37154 (= (getValueByKey!129 (toList!708 lt!30380) (_1!1056 (tuple2!2091 lt!30252 (zeroValue!2073 newMap!16)))) (Some!134 (_2!1056 (tuple2!2091 lt!30252 (zeroValue!2073 newMap!16))))))))

(declare-fun b!69203 () Bool)

(assert (=> b!69203 (= e!45312 (contains!711 (toList!708 lt!30380) (tuple2!2091 lt!30252 (zeroValue!2073 newMap!16))))))

(assert (= (and d!14957 res!37153) b!69202))

(assert (= (and b!69202 res!37154) b!69203))

(declare-fun m!65153 () Bool)

(assert (=> d!14957 m!65153))

(declare-fun m!65155 () Bool)

(assert (=> d!14957 m!65155))

(declare-fun m!65157 () Bool)

(assert (=> d!14957 m!65157))

(declare-fun m!65159 () Bool)

(assert (=> d!14957 m!65159))

(declare-fun m!65161 () Bool)

(assert (=> b!69202 m!65161))

(declare-fun m!65163 () Bool)

(assert (=> b!69203 m!65163))

(assert (=> b!69035 d!14957))

(declare-fun d!14959 () Bool)

(declare-fun e!45313 () Bool)

(assert (=> d!14959 e!45313))

(declare-fun res!37155 () Bool)

(assert (=> d!14959 (=> (not res!37155) (not e!45313))))

(declare-fun lt!30384 () ListLongMap!1385)

(assert (=> d!14959 (= res!37155 (contains!709 lt!30384 (_1!1056 (tuple2!2091 lt!30255 (minValue!2073 newMap!16)))))))

(declare-fun lt!30382 () List!1470)

(assert (=> d!14959 (= lt!30384 (ListLongMap!1386 lt!30382))))

(declare-fun lt!30381 () Unit!1898)

(declare-fun lt!30383 () Unit!1898)

(assert (=> d!14959 (= lt!30381 lt!30383)))

(assert (=> d!14959 (= (getValueByKey!129 lt!30382 (_1!1056 (tuple2!2091 lt!30255 (minValue!2073 newMap!16)))) (Some!134 (_2!1056 (tuple2!2091 lt!30255 (minValue!2073 newMap!16)))))))

(assert (=> d!14959 (= lt!30383 (lemmaContainsTupThenGetReturnValue!49 lt!30382 (_1!1056 (tuple2!2091 lt!30255 (minValue!2073 newMap!16))) (_2!1056 (tuple2!2091 lt!30255 (minValue!2073 newMap!16)))))))

(assert (=> d!14959 (= lt!30382 (insertStrictlySorted!52 (toList!708 lt!30258) (_1!1056 (tuple2!2091 lt!30255 (minValue!2073 newMap!16))) (_2!1056 (tuple2!2091 lt!30255 (minValue!2073 newMap!16)))))))

(assert (=> d!14959 (= (+!89 lt!30258 (tuple2!2091 lt!30255 (minValue!2073 newMap!16))) lt!30384)))

(declare-fun b!69204 () Bool)

(declare-fun res!37156 () Bool)

(assert (=> b!69204 (=> (not res!37156) (not e!45313))))

(assert (=> b!69204 (= res!37156 (= (getValueByKey!129 (toList!708 lt!30384) (_1!1056 (tuple2!2091 lt!30255 (minValue!2073 newMap!16)))) (Some!134 (_2!1056 (tuple2!2091 lt!30255 (minValue!2073 newMap!16))))))))

(declare-fun b!69205 () Bool)

(assert (=> b!69205 (= e!45313 (contains!711 (toList!708 lt!30384) (tuple2!2091 lt!30255 (minValue!2073 newMap!16))))))

(assert (= (and d!14959 res!37155) b!69204))

(assert (= (and b!69204 res!37156) b!69205))

(declare-fun m!65165 () Bool)

(assert (=> d!14959 m!65165))

(declare-fun m!65167 () Bool)

(assert (=> d!14959 m!65167))

(declare-fun m!65169 () Bool)

(assert (=> d!14959 m!65169))

(declare-fun m!65171 () Bool)

(assert (=> d!14959 m!65171))

(declare-fun m!65173 () Bool)

(assert (=> b!69204 m!65173))

(declare-fun m!65175 () Bool)

(assert (=> b!69205 m!65175))

(assert (=> b!69035 d!14959))

(declare-fun d!14961 () Bool)

(assert (=> d!14961 (= (apply!73 lt!30254 lt!30241) (get!1129 (getValueByKey!129 (toList!708 lt!30254) lt!30241)))))

(declare-fun bs!2963 () Bool)

(assert (= bs!2963 d!14961))

(declare-fun m!65177 () Bool)

(assert (=> bs!2963 m!65177))

(assert (=> bs!2963 m!65177))

(declare-fun m!65179 () Bool)

(assert (=> bs!2963 m!65179))

(assert (=> b!69035 d!14961))

(declare-fun d!14963 () Bool)

(assert (=> d!14963 (= (apply!73 (+!89 lt!30258 (tuple2!2091 lt!30255 (minValue!2073 newMap!16))) lt!30250) (get!1129 (getValueByKey!129 (toList!708 (+!89 lt!30258 (tuple2!2091 lt!30255 (minValue!2073 newMap!16)))) lt!30250)))))

(declare-fun bs!2964 () Bool)

(assert (= bs!2964 d!14963))

(declare-fun m!65181 () Bool)

(assert (=> bs!2964 m!65181))

(assert (=> bs!2964 m!65181))

(declare-fun m!65183 () Bool)

(assert (=> bs!2964 m!65183))

(assert (=> b!69035 d!14963))

(declare-fun d!14965 () Bool)

(declare-fun e!45314 () Bool)

(assert (=> d!14965 e!45314))

(declare-fun res!37157 () Bool)

(assert (=> d!14965 (=> (not res!37157) (not e!45314))))

(declare-fun lt!30388 () ListLongMap!1385)

(assert (=> d!14965 (= res!37157 (contains!709 lt!30388 (_1!1056 (tuple2!2091 lt!30244 (minValue!2073 newMap!16)))))))

(declare-fun lt!30386 () List!1470)

(assert (=> d!14965 (= lt!30388 (ListLongMap!1386 lt!30386))))

(declare-fun lt!30385 () Unit!1898)

(declare-fun lt!30387 () Unit!1898)

(assert (=> d!14965 (= lt!30385 lt!30387)))

(assert (=> d!14965 (= (getValueByKey!129 lt!30386 (_1!1056 (tuple2!2091 lt!30244 (minValue!2073 newMap!16)))) (Some!134 (_2!1056 (tuple2!2091 lt!30244 (minValue!2073 newMap!16)))))))

(assert (=> d!14965 (= lt!30387 (lemmaContainsTupThenGetReturnValue!49 lt!30386 (_1!1056 (tuple2!2091 lt!30244 (minValue!2073 newMap!16))) (_2!1056 (tuple2!2091 lt!30244 (minValue!2073 newMap!16)))))))

(assert (=> d!14965 (= lt!30386 (insertStrictlySorted!52 (toList!708 lt!30254) (_1!1056 (tuple2!2091 lt!30244 (minValue!2073 newMap!16))) (_2!1056 (tuple2!2091 lt!30244 (minValue!2073 newMap!16)))))))

(assert (=> d!14965 (= (+!89 lt!30254 (tuple2!2091 lt!30244 (minValue!2073 newMap!16))) lt!30388)))

(declare-fun b!69206 () Bool)

(declare-fun res!37158 () Bool)

(assert (=> b!69206 (=> (not res!37158) (not e!45314))))

(assert (=> b!69206 (= res!37158 (= (getValueByKey!129 (toList!708 lt!30388) (_1!1056 (tuple2!2091 lt!30244 (minValue!2073 newMap!16)))) (Some!134 (_2!1056 (tuple2!2091 lt!30244 (minValue!2073 newMap!16))))))))

(declare-fun b!69207 () Bool)

(assert (=> b!69207 (= e!45314 (contains!711 (toList!708 lt!30388) (tuple2!2091 lt!30244 (minValue!2073 newMap!16))))))

(assert (= (and d!14965 res!37157) b!69206))

(assert (= (and b!69206 res!37158) b!69207))

(declare-fun m!65185 () Bool)

(assert (=> d!14965 m!65185))

(declare-fun m!65187 () Bool)

(assert (=> d!14965 m!65187))

(declare-fun m!65189 () Bool)

(assert (=> d!14965 m!65189))

(declare-fun m!65191 () Bool)

(assert (=> d!14965 m!65191))

(declare-fun m!65193 () Bool)

(assert (=> b!69206 m!65193))

(declare-fun m!65195 () Bool)

(assert (=> b!69207 m!65195))

(assert (=> b!69035 d!14965))

(declare-fun d!14967 () Bool)

(declare-fun e!45316 () Bool)

(assert (=> d!14967 e!45316))

(declare-fun res!37159 () Bool)

(assert (=> d!14967 (=> res!37159 e!45316)))

(declare-fun lt!30392 () Bool)

(assert (=> d!14967 (= res!37159 (not lt!30392))))

(declare-fun lt!30391 () Bool)

(assert (=> d!14967 (= lt!30392 lt!30391)))

(declare-fun lt!30390 () Unit!1898)

(declare-fun e!45315 () Unit!1898)

(assert (=> d!14967 (= lt!30390 e!45315)))

(declare-fun c!9863 () Bool)

(assert (=> d!14967 (= c!9863 lt!30391)))

(assert (=> d!14967 (= lt!30391 (containsKey!133 (toList!708 (+!89 lt!30239 (tuple2!2091 lt!30243 (zeroValue!2073 newMap!16)))) lt!30242))))

(assert (=> d!14967 (= (contains!709 (+!89 lt!30239 (tuple2!2091 lt!30243 (zeroValue!2073 newMap!16))) lt!30242) lt!30392)))

(declare-fun b!69208 () Bool)

(declare-fun lt!30389 () Unit!1898)

(assert (=> b!69208 (= e!45315 lt!30389)))

(assert (=> b!69208 (= lt!30389 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 (+!89 lt!30239 (tuple2!2091 lt!30243 (zeroValue!2073 newMap!16)))) lt!30242))))

(assert (=> b!69208 (isDefined!83 (getValueByKey!129 (toList!708 (+!89 lt!30239 (tuple2!2091 lt!30243 (zeroValue!2073 newMap!16)))) lt!30242))))

(declare-fun b!69209 () Bool)

(declare-fun Unit!1933 () Unit!1898)

(assert (=> b!69209 (= e!45315 Unit!1933)))

(declare-fun b!69210 () Bool)

(assert (=> b!69210 (= e!45316 (isDefined!83 (getValueByKey!129 (toList!708 (+!89 lt!30239 (tuple2!2091 lt!30243 (zeroValue!2073 newMap!16)))) lt!30242)))))

(assert (= (and d!14967 c!9863) b!69208))

(assert (= (and d!14967 (not c!9863)) b!69209))

(assert (= (and d!14967 (not res!37159)) b!69210))

(declare-fun m!65197 () Bool)

(assert (=> d!14967 m!65197))

(declare-fun m!65199 () Bool)

(assert (=> b!69208 m!65199))

(declare-fun m!65201 () Bool)

(assert (=> b!69208 m!65201))

(assert (=> b!69208 m!65201))

(declare-fun m!65203 () Bool)

(assert (=> b!69208 m!65203))

(assert (=> b!69210 m!65201))

(assert (=> b!69210 m!65201))

(assert (=> b!69210 m!65203))

(assert (=> b!69035 d!14967))

(declare-fun d!14969 () Bool)

(assert (=> d!14969 (contains!709 (+!89 lt!30239 (tuple2!2091 lt!30243 (zeroValue!2073 newMap!16))) lt!30242)))

(declare-fun lt!30393 () Unit!1898)

(assert (=> d!14969 (= lt!30393 (choose!397 lt!30239 lt!30243 (zeroValue!2073 newMap!16) lt!30242))))

(assert (=> d!14969 (contains!709 lt!30239 lt!30242)))

(assert (=> d!14969 (= (addStillContains!49 lt!30239 lt!30243 (zeroValue!2073 newMap!16) lt!30242) lt!30393)))

(declare-fun bs!2965 () Bool)

(assert (= bs!2965 d!14969))

(assert (=> bs!2965 m!64741))

(assert (=> bs!2965 m!64741))

(assert (=> bs!2965 m!64745))

(declare-fun m!65205 () Bool)

(assert (=> bs!2965 m!65205))

(declare-fun m!65207 () Bool)

(assert (=> bs!2965 m!65207))

(assert (=> b!69035 d!14969))

(declare-fun d!14971 () Bool)

(declare-fun res!37160 () Bool)

(declare-fun e!45317 () Bool)

(assert (=> d!14971 (=> res!37160 e!45317)))

(assert (=> d!14971 (= res!37160 (and ((_ is Cons!1466) lt!30215) (= (_1!1056 (h!2051 lt!30215)) (_1!1056 lt!29675))))))

(assert (=> d!14971 (= (containsKey!133 lt!30215 (_1!1056 lt!29675)) e!45317)))

(declare-fun b!69211 () Bool)

(declare-fun e!45318 () Bool)

(assert (=> b!69211 (= e!45317 e!45318)))

(declare-fun res!37161 () Bool)

(assert (=> b!69211 (=> (not res!37161) (not e!45318))))

(assert (=> b!69211 (= res!37161 (and (or (not ((_ is Cons!1466) lt!30215)) (bvsle (_1!1056 (h!2051 lt!30215)) (_1!1056 lt!29675))) ((_ is Cons!1466) lt!30215) (bvslt (_1!1056 (h!2051 lt!30215)) (_1!1056 lt!29675))))))

(declare-fun b!69212 () Bool)

(assert (=> b!69212 (= e!45318 (containsKey!133 (t!4964 lt!30215) (_1!1056 lt!29675)))))

(assert (= (and d!14971 (not res!37160)) b!69211))

(assert (= (and b!69211 res!37161) b!69212))

(declare-fun m!65209 () Bool)

(assert (=> b!69212 m!65209))

(assert (=> b!68963 d!14971))

(declare-fun b!69215 () Bool)

(declare-fun e!45320 () Option!135)

(assert (=> b!69215 (= e!45320 (getValueByKey!129 (t!4964 (toList!708 lt!30308)) (_1!1056 (ite (or c!9651 c!9648) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(declare-fun b!69213 () Bool)

(declare-fun e!45319 () Option!135)

(assert (=> b!69213 (= e!45319 (Some!134 (_2!1056 (h!2051 (toList!708 lt!30308)))))))

(declare-fun b!69216 () Bool)

(assert (=> b!69216 (= e!45320 None!133)))

(declare-fun c!9864 () Bool)

(declare-fun d!14973 () Bool)

(assert (=> d!14973 (= c!9864 (and ((_ is Cons!1466) (toList!708 lt!30308)) (= (_1!1056 (h!2051 (toList!708 lt!30308))) (_1!1056 (ite (or c!9651 c!9648) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))))

(assert (=> d!14973 (= (getValueByKey!129 (toList!708 lt!30308) (_1!1056 (ite (or c!9651 c!9648) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))) e!45319)))

(declare-fun b!69214 () Bool)

(assert (=> b!69214 (= e!45319 e!45320)))

(declare-fun c!9865 () Bool)

(assert (=> b!69214 (= c!9865 (and ((_ is Cons!1466) (toList!708 lt!30308)) (not (= (_1!1056 (h!2051 (toList!708 lt!30308))) (_1!1056 (ite (or c!9651 c!9648) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))))))))

(assert (= (and d!14973 c!9864) b!69213))

(assert (= (and d!14973 (not c!9864)) b!69214))

(assert (= (and b!69214 c!9865) b!69215))

(assert (= (and b!69214 (not c!9865)) b!69216))

(declare-fun m!65211 () Bool)

(assert (=> b!69215 m!65211))

(assert (=> b!69070 d!14973))

(declare-fun b!69219 () Bool)

(declare-fun e!45322 () Option!135)

(assert (=> b!69219 (= e!45322 (getValueByKey!129 (t!4964 (t!4964 lt!29866)) (_1!1056 lt!29680)))))

(declare-fun b!69217 () Bool)

(declare-fun e!45321 () Option!135)

(assert (=> b!69217 (= e!45321 (Some!134 (_2!1056 (h!2051 (t!4964 lt!29866)))))))

(declare-fun b!69220 () Bool)

(assert (=> b!69220 (= e!45322 None!133)))

(declare-fun d!14975 () Bool)

(declare-fun c!9866 () Bool)

(assert (=> d!14975 (= c!9866 (and ((_ is Cons!1466) (t!4964 lt!29866)) (= (_1!1056 (h!2051 (t!4964 lt!29866))) (_1!1056 lt!29680))))))

(assert (=> d!14975 (= (getValueByKey!129 (t!4964 lt!29866) (_1!1056 lt!29680)) e!45321)))

(declare-fun b!69218 () Bool)

(assert (=> b!69218 (= e!45321 e!45322)))

(declare-fun c!9867 () Bool)

(assert (=> b!69218 (= c!9867 (and ((_ is Cons!1466) (t!4964 lt!29866)) (not (= (_1!1056 (h!2051 (t!4964 lt!29866))) (_1!1056 lt!29680)))))))

(assert (= (and d!14975 c!9866) b!69217))

(assert (= (and d!14975 (not c!9866)) b!69218))

(assert (= (and b!69218 c!9867) b!69219))

(assert (= (and b!69218 (not c!9867)) b!69220))

(declare-fun m!65213 () Bool)

(assert (=> b!69219 m!65213))

(assert (=> b!68700 d!14975))

(declare-fun d!14977 () Bool)

(declare-fun res!37162 () Bool)

(declare-fun e!45323 () Bool)

(assert (=> d!14977 (=> res!37162 e!45323)))

(assert (=> d!14977 (= res!37162 (and ((_ is Cons!1466) (toList!708 lt!29805)) (= (_1!1056 (h!2051 (toList!708 lt!29805))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!14977 (= (containsKey!133 (toList!708 lt!29805) #b1000000000000000000000000000000000000000000000000000000000000000) e!45323)))

(declare-fun b!69221 () Bool)

(declare-fun e!45324 () Bool)

(assert (=> b!69221 (= e!45323 e!45324)))

(declare-fun res!37163 () Bool)

(assert (=> b!69221 (=> (not res!37163) (not e!45324))))

(assert (=> b!69221 (= res!37163 (and (or (not ((_ is Cons!1466) (toList!708 lt!29805))) (bvsle (_1!1056 (h!2051 (toList!708 lt!29805))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1466) (toList!708 lt!29805)) (bvslt (_1!1056 (h!2051 (toList!708 lt!29805))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!69222 () Bool)

(assert (=> b!69222 (= e!45324 (containsKey!133 (t!4964 (toList!708 lt!29805)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!14977 (not res!37162)) b!69221))

(assert (= (and b!69221 res!37163) b!69222))

(declare-fun m!65215 () Bool)

(assert (=> b!69222 m!65215))

(assert (=> d!14831 d!14977))

(declare-fun d!14979 () Bool)

(declare-fun res!37164 () Bool)

(declare-fun e!45325 () Bool)

(assert (=> d!14979 (=> (not res!37164) (not e!45325))))

(assert (=> d!14979 (= res!37164 (simpleValid!49 (_2!1057 lt!30176)))))

(assert (=> d!14979 (= (valid!289 (_2!1057 lt!30176)) e!45325)))

(declare-fun b!69223 () Bool)

(declare-fun res!37165 () Bool)

(assert (=> b!69223 (=> (not res!37165) (not e!45325))))

(assert (=> b!69223 (= res!37165 (= (arrayCountValidKeys!0 (_keys!3810 (_2!1057 lt!30176)) #b00000000000000000000000000000000 (size!2065 (_keys!3810 (_2!1057 lt!30176)))) (_size!387 (_2!1057 lt!30176))))))

(declare-fun b!69224 () Bool)

(declare-fun res!37166 () Bool)

(assert (=> b!69224 (=> (not res!37166) (not e!45325))))

(assert (=> b!69224 (= res!37166 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3810 (_2!1057 lt!30176)) (mask!6111 (_2!1057 lt!30176))))))

(declare-fun b!69225 () Bool)

(assert (=> b!69225 (= e!45325 (arrayNoDuplicates!0 (_keys!3810 (_2!1057 lt!30176)) #b00000000000000000000000000000000 Nil!1468))))

(assert (= (and d!14979 res!37164) b!69223))

(assert (= (and b!69223 res!37165) b!69224))

(assert (= (and b!69224 res!37166) b!69225))

(declare-fun m!65217 () Bool)

(assert (=> d!14979 m!65217))

(declare-fun m!65219 () Bool)

(assert (=> b!69223 m!65219))

(declare-fun m!65221 () Bool)

(assert (=> b!69224 m!65221))

(declare-fun m!65223 () Bool)

(assert (=> b!69225 m!65223))

(assert (=> b!68937 d!14979))

(declare-fun d!14981 () Bool)

(declare-fun e!45327 () Bool)

(assert (=> d!14981 e!45327))

(declare-fun res!37167 () Bool)

(assert (=> d!14981 (=> res!37167 e!45327)))

(declare-fun lt!30397 () Bool)

(assert (=> d!14981 (= res!37167 (not lt!30397))))

(declare-fun lt!30396 () Bool)

(assert (=> d!14981 (= lt!30397 lt!30396)))

(declare-fun lt!30395 () Unit!1898)

(declare-fun e!45326 () Unit!1898)

(assert (=> d!14981 (= lt!30395 e!45326)))

(declare-fun c!9868 () Bool)

(assert (=> d!14981 (= c!9868 lt!30396)))

(assert (=> d!14981 (= lt!30396 (containsKey!133 (toList!708 (getCurrentListMap!403 (_keys!3810 newMap!16) lt!29960 (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16))) (select (arr!1828 (_keys!3810 newMap!16)) (index!3078 lt!29944))))))

(assert (=> d!14981 (= (contains!709 (getCurrentListMap!403 (_keys!3810 newMap!16) lt!29960 (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) (select (arr!1828 (_keys!3810 newMap!16)) (index!3078 lt!29944))) lt!30397)))

(declare-fun b!69226 () Bool)

(declare-fun lt!30394 () Unit!1898)

(assert (=> b!69226 (= e!45326 lt!30394)))

(assert (=> b!69226 (= lt!30394 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 (getCurrentListMap!403 (_keys!3810 newMap!16) lt!29960 (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16))) (select (arr!1828 (_keys!3810 newMap!16)) (index!3078 lt!29944))))))

(assert (=> b!69226 (isDefined!83 (getValueByKey!129 (toList!708 (getCurrentListMap!403 (_keys!3810 newMap!16) lt!29960 (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16))) (select (arr!1828 (_keys!3810 newMap!16)) (index!3078 lt!29944))))))

(declare-fun b!69227 () Bool)

(declare-fun Unit!1934 () Unit!1898)

(assert (=> b!69227 (= e!45326 Unit!1934)))

(declare-fun b!69228 () Bool)

(assert (=> b!69228 (= e!45327 (isDefined!83 (getValueByKey!129 (toList!708 (getCurrentListMap!403 (_keys!3810 newMap!16) lt!29960 (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16))) (select (arr!1828 (_keys!3810 newMap!16)) (index!3078 lt!29944)))))))

(assert (= (and d!14981 c!9868) b!69226))

(assert (= (and d!14981 (not c!9868)) b!69227))

(assert (= (and d!14981 (not res!37167)) b!69228))

(assert (=> d!14981 m!64105))

(declare-fun m!65225 () Bool)

(assert (=> d!14981 m!65225))

(assert (=> b!69226 m!64105))

(declare-fun m!65227 () Bool)

(assert (=> b!69226 m!65227))

(assert (=> b!69226 m!64105))

(declare-fun m!65229 () Bool)

(assert (=> b!69226 m!65229))

(assert (=> b!69226 m!65229))

(declare-fun m!65231 () Bool)

(assert (=> b!69226 m!65231))

(assert (=> b!69228 m!64105))

(assert (=> b!69228 m!65229))

(assert (=> b!69228 m!65229))

(assert (=> b!69228 m!65231))

(assert (=> b!68975 d!14981))

(assert (=> b!68975 d!14717))

(declare-fun lt!30398 () Bool)

(declare-fun d!14983 () Bool)

(assert (=> d!14983 (= lt!30398 (select (content!73 (toList!708 lt!30115)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!45329 () Bool)

(assert (=> d!14983 (= lt!30398 e!45329)))

(declare-fun res!37169 () Bool)

(assert (=> d!14983 (=> (not res!37169) (not e!45329))))

(assert (=> d!14983 (= res!37169 ((_ is Cons!1466) (toList!708 lt!30115)))))

(assert (=> d!14983 (= (contains!711 (toList!708 lt!30115) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!30398)))

(declare-fun b!69229 () Bool)

(declare-fun e!45328 () Bool)

(assert (=> b!69229 (= e!45329 e!45328)))

(declare-fun res!37168 () Bool)

(assert (=> b!69229 (=> res!37168 e!45328)))

(assert (=> b!69229 (= res!37168 (= (h!2051 (toList!708 lt!30115)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!69230 () Bool)

(assert (=> b!69230 (= e!45328 (contains!711 (t!4964 (toList!708 lt!30115)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!14983 res!37169) b!69229))

(assert (= (and b!69229 (not res!37168)) b!69230))

(declare-fun m!65233 () Bool)

(assert (=> d!14983 m!65233))

(declare-fun m!65235 () Bool)

(assert (=> d!14983 m!65235))

(declare-fun m!65237 () Bool)

(assert (=> b!69230 m!65237))

(assert (=> b!68881 d!14983))

(declare-fun d!14985 () Bool)

(declare-fun e!45331 () Bool)

(assert (=> d!14985 e!45331))

(declare-fun res!37170 () Bool)

(assert (=> d!14985 (=> res!37170 e!45331)))

(declare-fun lt!30402 () Bool)

(assert (=> d!14985 (= res!37170 (not lt!30402))))

(declare-fun lt!30401 () Bool)

(assert (=> d!14985 (= lt!30402 lt!30401)))

(declare-fun lt!30400 () Unit!1898)

(declare-fun e!45330 () Unit!1898)

(assert (=> d!14985 (= lt!30400 e!45330)))

(declare-fun c!9869 () Bool)

(assert (=> d!14985 (= c!9869 lt!30401)))

(assert (=> d!14985 (= lt!30401 (containsKey!133 (toList!708 lt!30058) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))

(assert (=> d!14985 (= (contains!709 lt!30058 (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))) lt!30402)))

(declare-fun b!69231 () Bool)

(declare-fun lt!30399 () Unit!1898)

(assert (=> b!69231 (= e!45330 lt!30399)))

(assert (=> b!69231 (= lt!30399 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 lt!30058) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))

(assert (=> b!69231 (isDefined!83 (getValueByKey!129 (toList!708 lt!30058) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))

(declare-fun b!69232 () Bool)

(declare-fun Unit!1935 () Unit!1898)

(assert (=> b!69232 (= e!45330 Unit!1935)))

(declare-fun b!69233 () Bool)

(assert (=> b!69233 (= e!45331 (isDefined!83 (getValueByKey!129 (toList!708 lt!30058) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))))))

(assert (= (and d!14985 c!9869) b!69231))

(assert (= (and d!14985 (not c!9869)) b!69232))

(assert (= (and d!14985 (not res!37170)) b!69233))

(declare-fun m!65239 () Bool)

(assert (=> d!14985 m!65239))

(declare-fun m!65241 () Bool)

(assert (=> b!69231 m!65241))

(assert (=> b!69231 m!64383))

(assert (=> b!69231 m!64383))

(declare-fun m!65243 () Bool)

(assert (=> b!69231 m!65243))

(assert (=> b!69233 m!64383))

(assert (=> b!69233 m!64383))

(assert (=> b!69233 m!65243))

(assert (=> d!14733 d!14985))

(declare-fun b!69236 () Bool)

(declare-fun e!45333 () Option!135)

(assert (=> b!69236 (= e!45333 (getValueByKey!129 (t!4964 lt!30056) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))

(declare-fun b!69234 () Bool)

(declare-fun e!45332 () Option!135)

(assert (=> b!69234 (= e!45332 (Some!134 (_2!1056 (h!2051 lt!30056))))))

(declare-fun b!69237 () Bool)

(assert (=> b!69237 (= e!45333 None!133)))

(declare-fun d!14987 () Bool)

(declare-fun c!9870 () Bool)

(assert (=> d!14987 (= c!9870 (and ((_ is Cons!1466) lt!30056) (= (_1!1056 (h!2051 lt!30056)) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))))))

(assert (=> d!14987 (= (getValueByKey!129 lt!30056 (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))) e!45332)))

(declare-fun b!69235 () Bool)

(assert (=> b!69235 (= e!45332 e!45333)))

(declare-fun c!9871 () Bool)

(assert (=> b!69235 (= c!9871 (and ((_ is Cons!1466) lt!30056) (not (= (_1!1056 (h!2051 lt!30056)) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))))

(assert (= (and d!14987 c!9870) b!69234))

(assert (= (and d!14987 (not c!9870)) b!69235))

(assert (= (and b!69235 c!9871) b!69236))

(assert (= (and b!69235 (not c!9871)) b!69237))

(declare-fun m!65245 () Bool)

(assert (=> b!69236 m!65245))

(assert (=> d!14733 d!14987))

(declare-fun d!14989 () Bool)

(assert (=> d!14989 (= (getValueByKey!129 lt!30056 (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))) (Some!134 (_2!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))

(declare-fun lt!30403 () Unit!1898)

(assert (=> d!14989 (= lt!30403 (choose!390 lt!30056 (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)) (_2!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))

(declare-fun e!45334 () Bool)

(assert (=> d!14989 e!45334))

(declare-fun res!37171 () Bool)

(assert (=> d!14989 (=> (not res!37171) (not e!45334))))

(assert (=> d!14989 (= res!37171 (isStrictlySorted!285 lt!30056))))

(assert (=> d!14989 (= (lemmaContainsTupThenGetReturnValue!49 lt!30056 (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)) (_2!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))) lt!30403)))

(declare-fun b!69238 () Bool)

(declare-fun res!37172 () Bool)

(assert (=> b!69238 (=> (not res!37172) (not e!45334))))

(assert (=> b!69238 (= res!37172 (containsKey!133 lt!30056 (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))

(declare-fun b!69239 () Bool)

(assert (=> b!69239 (= e!45334 (contains!711 lt!30056 (tuple2!2091 (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)) (_2!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))))))

(assert (= (and d!14989 res!37171) b!69238))

(assert (= (and b!69238 res!37172) b!69239))

(assert (=> d!14989 m!64377))

(declare-fun m!65247 () Bool)

(assert (=> d!14989 m!65247))

(declare-fun m!65249 () Bool)

(assert (=> d!14989 m!65249))

(declare-fun m!65251 () Bool)

(assert (=> b!69238 m!65251))

(declare-fun m!65253 () Bool)

(assert (=> b!69239 m!65253))

(assert (=> d!14733 d!14989))

(declare-fun b!69240 () Bool)

(declare-fun e!45338 () List!1470)

(declare-fun call!5921 () List!1470)

(assert (=> b!69240 (= e!45338 call!5921)))

(declare-fun c!9872 () Bool)

(declare-fun b!69241 () Bool)

(assert (=> b!69241 (= c!9872 (and ((_ is Cons!1466) (toList!708 lt!29682)) (bvsgt (_1!1056 (h!2051 (toList!708 lt!29682))) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))))))

(declare-fun e!45336 () List!1470)

(assert (=> b!69241 (= e!45336 e!45338)))

(declare-fun b!69242 () Bool)

(assert (=> b!69242 (= e!45338 call!5921)))

(declare-fun b!69244 () Bool)

(declare-fun call!5920 () List!1470)

(assert (=> b!69244 (= e!45336 call!5920)))

(declare-fun bm!5917 () Bool)

(declare-fun call!5922 () List!1470)

(assert (=> bm!5917 (= call!5920 call!5922)))

(declare-fun bm!5918 () Bool)

(assert (=> bm!5918 (= call!5921 call!5920)))

(declare-fun b!69245 () Bool)

(declare-fun e!45335 () List!1470)

(assert (=> b!69245 (= e!45335 e!45336)))

(declare-fun c!9873 () Bool)

(assert (=> b!69245 (= c!9873 (and ((_ is Cons!1466) (toList!708 lt!29682)) (= (_1!1056 (h!2051 (toList!708 lt!29682))) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))))))

(declare-fun c!9875 () Bool)

(declare-fun bm!5919 () Bool)

(declare-fun e!45337 () List!1470)

(assert (=> bm!5919 (= call!5922 ($colon$colon!63 e!45337 (ite c!9875 (h!2051 (toList!708 lt!29682)) (tuple2!2091 (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)) (_2!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))))

(declare-fun c!9874 () Bool)

(assert (=> bm!5919 (= c!9874 c!9875)))

(declare-fun b!69246 () Bool)

(declare-fun res!37174 () Bool)

(declare-fun e!45339 () Bool)

(assert (=> b!69246 (=> (not res!37174) (not e!45339))))

(declare-fun lt!30404 () List!1470)

(assert (=> b!69246 (= res!37174 (containsKey!133 lt!30404 (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))

(declare-fun b!69247 () Bool)

(assert (=> b!69247 (= e!45339 (contains!711 lt!30404 (tuple2!2091 (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)) (_2!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))))))

(declare-fun b!69248 () Bool)

(assert (=> b!69248 (= e!45337 (ite c!9873 (t!4964 (toList!708 lt!29682)) (ite c!9872 (Cons!1466 (h!2051 (toList!708 lt!29682)) (t!4964 (toList!708 lt!29682))) Nil!1467)))))

(declare-fun b!69249 () Bool)

(assert (=> b!69249 (= e!45335 call!5922)))

(declare-fun d!14991 () Bool)

(assert (=> d!14991 e!45339))

(declare-fun res!37173 () Bool)

(assert (=> d!14991 (=> (not res!37173) (not e!45339))))

(assert (=> d!14991 (= res!37173 (isStrictlySorted!285 lt!30404))))

(assert (=> d!14991 (= lt!30404 e!45335)))

(assert (=> d!14991 (= c!9875 (and ((_ is Cons!1466) (toList!708 lt!29682)) (bvslt (_1!1056 (h!2051 (toList!708 lt!29682))) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))))))

(assert (=> d!14991 (isStrictlySorted!285 (toList!708 lt!29682))))

(assert (=> d!14991 (= (insertStrictlySorted!52 (toList!708 lt!29682) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)) (_2!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))) lt!30404)))

(declare-fun b!69243 () Bool)

(assert (=> b!69243 (= e!45337 (insertStrictlySorted!52 (t!4964 (toList!708 lt!29682)) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)) (_2!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))

(assert (= (and d!14991 c!9875) b!69249))

(assert (= (and d!14991 (not c!9875)) b!69245))

(assert (= (and b!69245 c!9873) b!69244))

(assert (= (and b!69245 (not c!9873)) b!69241))

(assert (= (and b!69241 c!9872) b!69242))

(assert (= (and b!69241 (not c!9872)) b!69240))

(assert (= (or b!69242 b!69240) bm!5918))

(assert (= (or b!69244 bm!5918) bm!5917))

(assert (= (or b!69249 bm!5917) bm!5919))

(assert (= (and bm!5919 c!9874) b!69243))

(assert (= (and bm!5919 (not c!9874)) b!69248))

(assert (= (and d!14991 res!37173) b!69246))

(assert (= (and b!69246 res!37174) b!69247))

(declare-fun m!65255 () Bool)

(assert (=> d!14991 m!65255))

(assert (=> d!14991 m!64481))

(declare-fun m!65257 () Bool)

(assert (=> b!69247 m!65257))

(declare-fun m!65259 () Bool)

(assert (=> b!69246 m!65259))

(declare-fun m!65261 () Bool)

(assert (=> bm!5919 m!65261))

(declare-fun m!65263 () Bool)

(assert (=> b!69243 m!65263))

(assert (=> d!14733 d!14991))

(declare-fun d!14993 () Bool)

(declare-fun c!9878 () Bool)

(assert (=> d!14993 (= c!9878 ((_ is Nil!1467) (toList!708 lt!29868)))))

(declare-fun e!45342 () (InoxSet tuple2!2090))

(assert (=> d!14993 (= (content!73 (toList!708 lt!29868)) e!45342)))

(declare-fun b!69254 () Bool)

(assert (=> b!69254 (= e!45342 ((as const (Array tuple2!2090 Bool)) false))))

(declare-fun b!69255 () Bool)

(assert (=> b!69255 (= e!45342 ((_ map or) (store ((as const (Array tuple2!2090 Bool)) false) (h!2051 (toList!708 lt!29868)) true) (content!73 (t!4964 (toList!708 lt!29868)))))))

(assert (= (and d!14993 c!9878) b!69254))

(assert (= (and d!14993 (not c!9878)) b!69255))

(declare-fun m!65265 () Bool)

(assert (=> b!69255 m!65265))

(declare-fun m!65267 () Bool)

(assert (=> b!69255 m!65267))

(assert (=> d!14893 d!14993))

(declare-fun b!69256 () Bool)

(declare-fun e!45343 () Bool)

(declare-fun call!5923 () Bool)

(assert (=> b!69256 (= e!45343 call!5923)))

(declare-fun b!69257 () Bool)

(declare-fun e!45345 () Bool)

(assert (=> b!69257 (= e!45345 e!45343)))

(declare-fun lt!30407 () (_ BitVec 64))

(assert (=> b!69257 (= lt!30407 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!30406 () Unit!1898)

(assert (=> b!69257 (= lt!30406 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3810 (v!2485 (underlying!247 thiss!992))) lt!30407 #b00000000000000000000000000000000))))

(assert (=> b!69257 (arrayContainsKey!0 (_keys!3810 (v!2485 (underlying!247 thiss!992))) lt!30407 #b00000000000000000000000000000000)))

(declare-fun lt!30405 () Unit!1898)

(assert (=> b!69257 (= lt!30405 lt!30406)))

(declare-fun res!37175 () Bool)

(assert (=> b!69257 (= res!37175 (= (seekEntryOrOpen!0 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) #b00000000000000000000000000000000) (_keys!3810 (v!2485 (underlying!247 thiss!992))) (mask!6111 (v!2485 (underlying!247 thiss!992)))) (Found!237 #b00000000000000000000000000000000)))))

(assert (=> b!69257 (=> (not res!37175) (not e!45343))))

(declare-fun bm!5920 () Bool)

(assert (=> bm!5920 (= call!5923 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3810 (v!2485 (underlying!247 thiss!992))) (mask!6111 (v!2485 (underlying!247 thiss!992)))))))

(declare-fun b!69258 () Bool)

(assert (=> b!69258 (= e!45345 call!5923)))

(declare-fun b!69259 () Bool)

(declare-fun e!45344 () Bool)

(assert (=> b!69259 (= e!45344 e!45345)))

(declare-fun c!9879 () Bool)

(assert (=> b!69259 (= c!9879 (validKeyInArray!0 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun d!14995 () Bool)

(declare-fun res!37176 () Bool)

(assert (=> d!14995 (=> res!37176 e!45344)))

(assert (=> d!14995 (= res!37176 (bvsge #b00000000000000000000000000000000 (size!2065 (_keys!3810 (v!2485 (underlying!247 thiss!992))))))))

(assert (=> d!14995 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3810 (v!2485 (underlying!247 thiss!992))) (mask!6111 (v!2485 (underlying!247 thiss!992)))) e!45344)))

(assert (= (and d!14995 (not res!37176)) b!69259))

(assert (= (and b!69259 c!9879) b!69257))

(assert (= (and b!69259 (not c!9879)) b!69258))

(assert (= (and b!69257 res!37175) b!69256))

(assert (= (or b!69256 b!69258) bm!5920))

(declare-fun m!65269 () Bool)

(assert (=> b!69257 m!65269))

(declare-fun m!65271 () Bool)

(assert (=> b!69257 m!65271))

(declare-fun m!65273 () Bool)

(assert (=> b!69257 m!65273))

(assert (=> b!69257 m!65269))

(declare-fun m!65275 () Bool)

(assert (=> b!69257 m!65275))

(declare-fun m!65277 () Bool)

(assert (=> bm!5920 m!65277))

(assert (=> b!69259 m!65269))

(assert (=> b!69259 m!65269))

(declare-fun m!65279 () Bool)

(assert (=> b!69259 m!65279))

(assert (=> b!69073 d!14995))

(declare-fun d!14997 () Bool)

(declare-fun res!37177 () Bool)

(declare-fun e!45346 () Bool)

(assert (=> d!14997 (=> res!37177 e!45346)))

(assert (=> d!14997 (= res!37177 (= (select (arr!1828 (_keys!3810 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))

(assert (=> d!14997 (= (arrayContainsKey!0 (_keys!3810 newMap!16) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!45346)))

(declare-fun b!69260 () Bool)

(declare-fun e!45347 () Bool)

(assert (=> b!69260 (= e!45346 e!45347)))

(declare-fun res!37178 () Bool)

(assert (=> b!69260 (=> (not res!37178) (not e!45347))))

(assert (=> b!69260 (= res!37178 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2065 (_keys!3810 newMap!16))))))

(declare-fun b!69261 () Bool)

(assert (=> b!69261 (= e!45347 (arrayContainsKey!0 (_keys!3810 newMap!16) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!14997 (not res!37177)) b!69260))

(assert (= (and b!69260 res!37178) b!69261))

(declare-fun m!65281 () Bool)

(assert (=> d!14997 m!65281))

(assert (=> b!69261 m!63767))

(declare-fun m!65283 () Bool)

(assert (=> b!69261 m!65283))

(assert (=> b!69010 d!14997))

(declare-fun d!14999 () Bool)

(assert (=> d!14999 (= (get!1128 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!68650 d!14999))

(declare-fun d!15001 () Bool)

(assert (=> d!15001 (= (get!1129 (getValueByKey!129 (toList!708 lt!29814) lt!29801)) (v!2491 (getValueByKey!129 (toList!708 lt!29814) lt!29801)))))

(assert (=> d!14843 d!15001))

(declare-fun b!69264 () Bool)

(declare-fun e!45349 () Option!135)

(assert (=> b!69264 (= e!45349 (getValueByKey!129 (t!4964 (toList!708 lt!29814)) lt!29801))))

(declare-fun b!69262 () Bool)

(declare-fun e!45348 () Option!135)

(assert (=> b!69262 (= e!45348 (Some!134 (_2!1056 (h!2051 (toList!708 lt!29814)))))))

(declare-fun b!69265 () Bool)

(assert (=> b!69265 (= e!45349 None!133)))

(declare-fun d!15003 () Bool)

(declare-fun c!9880 () Bool)

(assert (=> d!15003 (= c!9880 (and ((_ is Cons!1466) (toList!708 lt!29814)) (= (_1!1056 (h!2051 (toList!708 lt!29814))) lt!29801)))))

(assert (=> d!15003 (= (getValueByKey!129 (toList!708 lt!29814) lt!29801) e!45348)))

(declare-fun b!69263 () Bool)

(assert (=> b!69263 (= e!45348 e!45349)))

(declare-fun c!9881 () Bool)

(assert (=> b!69263 (= c!9881 (and ((_ is Cons!1466) (toList!708 lt!29814)) (not (= (_1!1056 (h!2051 (toList!708 lt!29814))) lt!29801))))))

(assert (= (and d!15003 c!9880) b!69262))

(assert (= (and d!15003 (not c!9880)) b!69263))

(assert (= (and b!69263 c!9881) b!69264))

(assert (= (and b!69263 (not c!9881)) b!69265))

(declare-fun m!65285 () Bool)

(assert (=> b!69264 m!65285))

(assert (=> d!14843 d!15003))

(declare-fun b!69268 () Bool)

(declare-fun e!45351 () Option!135)

(assert (=> b!69268 (= e!45351 (getValueByKey!129 (t!4964 (toList!708 lt!30058)) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))

(declare-fun b!69266 () Bool)

(declare-fun e!45350 () Option!135)

(assert (=> b!69266 (= e!45350 (Some!134 (_2!1056 (h!2051 (toList!708 lt!30058)))))))

(declare-fun b!69269 () Bool)

(assert (=> b!69269 (= e!45351 None!133)))

(declare-fun d!15005 () Bool)

(declare-fun c!9882 () Bool)

(assert (=> d!15005 (= c!9882 (and ((_ is Cons!1466) (toList!708 lt!30058)) (= (_1!1056 (h!2051 (toList!708 lt!30058))) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))))))

(assert (=> d!15005 (= (getValueByKey!129 (toList!708 lt!30058) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))) e!45350)))

(declare-fun b!69267 () Bool)

(assert (=> b!69267 (= e!45350 e!45351)))

(declare-fun c!9883 () Bool)

(assert (=> b!69267 (= c!9883 (and ((_ is Cons!1466) (toList!708 lt!30058)) (not (= (_1!1056 (h!2051 (toList!708 lt!30058))) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))))

(assert (= (and d!15005 c!9882) b!69266))

(assert (= (and d!15005 (not c!9882)) b!69267))

(assert (= (and b!69267 c!9883) b!69268))

(assert (= (and b!69267 (not c!9883)) b!69269))

(declare-fun m!65287 () Bool)

(assert (=> b!69268 m!65287))

(assert (=> b!68793 d!15005))

(declare-fun d!15007 () Bool)

(assert (=> d!15007 (= (apply!73 lt!30245 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1129 (getValueByKey!129 (toList!708 lt!30245) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2966 () Bool)

(assert (= bs!2966 d!15007))

(declare-fun m!65289 () Bool)

(assert (=> bs!2966 m!65289))

(assert (=> bs!2966 m!65289))

(declare-fun m!65291 () Bool)

(assert (=> bs!2966 m!65291))

(assert (=> b!69028 d!15007))

(declare-fun d!15009 () Bool)

(declare-fun e!45353 () Bool)

(assert (=> d!15009 e!45353))

(declare-fun res!37179 () Bool)

(assert (=> d!15009 (=> res!37179 e!45353)))

(declare-fun lt!30411 () Bool)

(assert (=> d!15009 (= res!37179 (not lt!30411))))

(declare-fun lt!30410 () Bool)

(assert (=> d!15009 (= lt!30411 lt!30410)))

(declare-fun lt!30409 () Unit!1898)

(declare-fun e!45352 () Unit!1898)

(assert (=> d!15009 (= lt!30409 e!45352)))

(declare-fun c!9884 () Bool)

(assert (=> d!15009 (= c!9884 lt!30410)))

(assert (=> d!15009 (= lt!30410 (containsKey!133 (toList!708 lt!30322) (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!15009 (= (contains!709 lt!30322 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)) lt!30411)))

(declare-fun b!69270 () Bool)

(declare-fun lt!30408 () Unit!1898)

(assert (=> b!69270 (= e!45352 lt!30408)))

(assert (=> b!69270 (= lt!30408 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 lt!30322) (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!69270 (isDefined!83 (getValueByKey!129 (toList!708 lt!30322) (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!69271 () Bool)

(declare-fun Unit!1936 () Unit!1898)

(assert (=> b!69271 (= e!45352 Unit!1936)))

(declare-fun b!69272 () Bool)

(assert (=> b!69272 (= e!45353 (isDefined!83 (getValueByKey!129 (toList!708 lt!30322) (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!15009 c!9884) b!69270))

(assert (= (and d!15009 (not c!9884)) b!69271))

(assert (= (and d!15009 (not res!37179)) b!69272))

(assert (=> d!15009 m!64177))

(declare-fun m!65293 () Bool)

(assert (=> d!15009 m!65293))

(assert (=> b!69270 m!64177))

(declare-fun m!65295 () Bool)

(assert (=> b!69270 m!65295))

(assert (=> b!69270 m!64177))

(declare-fun m!65297 () Bool)

(assert (=> b!69270 m!65297))

(assert (=> b!69270 m!65297))

(declare-fun m!65299 () Bool)

(assert (=> b!69270 m!65299))

(assert (=> b!69272 m!64177))

(assert (=> b!69272 m!65297))

(assert (=> b!69272 m!65297))

(assert (=> b!69272 m!65299))

(assert (=> b!69097 d!15009))

(assert (=> d!14721 d!14883))

(declare-fun b!69273 () Bool)

(declare-fun e!45364 () ListLongMap!1385)

(declare-fun call!5924 () ListLongMap!1385)

(assert (=> b!69273 (= e!45364 call!5924)))

(declare-fun b!69274 () Bool)

(declare-fun e!45361 () Bool)

(declare-fun e!45356 () Bool)

(assert (=> b!69274 (= e!45361 e!45356)))

(declare-fun res!37187 () Bool)

(declare-fun call!5925 () Bool)

(assert (=> b!69274 (= res!37187 call!5925)))

(assert (=> b!69274 (=> (not res!37187) (not e!45356))))

(declare-fun b!69276 () Bool)

(declare-fun e!45362 () Bool)

(declare-fun call!5930 () Bool)

(assert (=> b!69276 (= e!45362 (not call!5930))))

(declare-fun bm!5921 () Bool)

(declare-fun lt!30418 () ListLongMap!1385)

(assert (=> bm!5921 (= call!5925 (contains!709 lt!30418 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69277 () Bool)

(declare-fun c!9886 () Bool)

(assert (=> b!69277 (= c!9886 (and (not (= (bvand lt!29953 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!29953 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!45360 () ListLongMap!1385)

(assert (=> b!69277 (= e!45360 e!45364)))

(declare-fun c!9888 () Bool)

(declare-fun c!9885 () Bool)

(declare-fun call!5926 () ListLongMap!1385)

(declare-fun call!5929 () ListLongMap!1385)

(declare-fun call!5928 () ListLongMap!1385)

(declare-fun bm!5922 () Bool)

(assert (=> bm!5922 (= call!5928 (+!89 (ite c!9888 call!5929 (ite c!9885 call!5926 call!5924)) (ite (or c!9888 c!9885) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673))))))

(declare-fun b!69278 () Bool)

(declare-fun e!45358 () Bool)

(assert (=> b!69278 (= e!45358 (validKeyInArray!0 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!69279 () Bool)

(declare-fun res!37185 () Bool)

(declare-fun e!45355 () Bool)

(assert (=> b!69279 (=> (not res!37185) (not e!45355))))

(declare-fun e!45365 () Bool)

(assert (=> b!69279 (= res!37185 e!45365)))

(declare-fun res!37181 () Bool)

(assert (=> b!69279 (=> res!37181 e!45365)))

(assert (=> b!69279 (= res!37181 (not e!45358))))

(declare-fun res!37182 () Bool)

(assert (=> b!69279 (=> (not res!37182) (not e!45358))))

(assert (=> b!69279 (= res!37182 (bvslt #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))))))

(declare-fun b!69280 () Bool)

(declare-fun e!45359 () ListLongMap!1385)

(assert (=> b!69280 (= e!45359 e!45360)))

(assert (=> b!69280 (= c!9885 (and (not (= (bvand lt!29953 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!29953 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!69281 () Bool)

(declare-fun e!45357 () Bool)

(assert (=> b!69281 (= e!45362 e!45357)))

(declare-fun res!37183 () Bool)

(assert (=> b!69281 (= res!37183 call!5930)))

(assert (=> b!69281 (=> (not res!37183) (not e!45357))))

(declare-fun bm!5923 () Bool)

(assert (=> bm!5923 (= call!5926 call!5929)))

(declare-fun b!69282 () Bool)

(declare-fun call!5927 () ListLongMap!1385)

(assert (=> b!69282 (= e!45360 call!5927)))

(declare-fun bm!5924 () Bool)

(assert (=> bm!5924 (= call!5927 call!5928)))

(declare-fun b!69283 () Bool)

(assert (=> b!69283 (= e!45364 call!5927)))

(declare-fun b!69284 () Bool)

(declare-fun res!37186 () Bool)

(assert (=> b!69284 (=> (not res!37186) (not e!45355))))

(assert (=> b!69284 (= res!37186 e!45362)))

(declare-fun c!9889 () Bool)

(assert (=> b!69284 (= c!9889 (not (= (bvand lt!29953 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!69285 () Bool)

(assert (=> b!69285 (= e!45357 (= (apply!73 lt!30418 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2073 newMap!16)))))

(declare-fun bm!5925 () Bool)

(assert (=> bm!5925 (= call!5929 (getCurrentListMapNoExtraKeys!53 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) lt!29953 (zeroValue!2073 newMap!16) lt!29673 #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun b!69286 () Bool)

(assert (=> b!69286 (= e!45356 (= (apply!73 lt!30418 #b1000000000000000000000000000000000000000000000000000000000000000) lt!29673))))

(declare-fun b!69287 () Bool)

(declare-fun e!45354 () Bool)

(assert (=> b!69287 (= e!45354 (= (apply!73 lt!30418 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)) (get!1126 (select (arr!1829 (_values!2150 newMap!16)) #b00000000000000000000000000000000) (dynLambda!321 (defaultEntry!2167 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!69287 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2066 (_values!2150 newMap!16))))))

(assert (=> b!69287 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))))))

(declare-fun bm!5926 () Bool)

(assert (=> bm!5926 (= call!5924 call!5926)))

(declare-fun d!15011 () Bool)

(assert (=> d!15011 e!45355))

(declare-fun res!37188 () Bool)

(assert (=> d!15011 (=> (not res!37188) (not e!45355))))

(assert (=> d!15011 (= res!37188 (or (bvsge #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))))))))

(declare-fun lt!30420 () ListLongMap!1385)

(assert (=> d!15011 (= lt!30418 lt!30420)))

(declare-fun lt!30430 () Unit!1898)

(declare-fun e!45366 () Unit!1898)

(assert (=> d!15011 (= lt!30430 e!45366)))

(declare-fun c!9890 () Bool)

(declare-fun e!45363 () Bool)

(assert (=> d!15011 (= c!9890 e!45363)))

(declare-fun res!37180 () Bool)

(assert (=> d!15011 (=> (not res!37180) (not e!45363))))

(assert (=> d!15011 (= res!37180 (bvslt #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))))))

(assert (=> d!15011 (= lt!30420 e!45359)))

(assert (=> d!15011 (= c!9888 (and (not (= (bvand lt!29953 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!29953 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!15011 (validMask!0 (mask!6111 newMap!16))))

(assert (=> d!15011 (= (getCurrentListMap!403 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) lt!29953 (zeroValue!2073 newMap!16) lt!29673 #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) lt!30418)))

(declare-fun b!69275 () Bool)

(assert (=> b!69275 (= e!45363 (validKeyInArray!0 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!69288 () Bool)

(assert (=> b!69288 (= e!45355 e!45361)))

(declare-fun c!9887 () Bool)

(assert (=> b!69288 (= c!9887 (not (= (bvand lt!29953 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!69289 () Bool)

(assert (=> b!69289 (= e!45365 e!45354)))

(declare-fun res!37184 () Bool)

(assert (=> b!69289 (=> (not res!37184) (not e!45354))))

(assert (=> b!69289 (= res!37184 (contains!709 lt!30418 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!69289 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))))))

(declare-fun b!69290 () Bool)

(assert (=> b!69290 (= e!45359 (+!89 call!5928 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673)))))

(declare-fun b!69291 () Bool)

(assert (=> b!69291 (= e!45361 (not call!5925))))

(declare-fun bm!5927 () Bool)

(assert (=> bm!5927 (= call!5930 (contains!709 lt!30418 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69292 () Bool)

(declare-fun Unit!1937 () Unit!1898)

(assert (=> b!69292 (= e!45366 Unit!1937)))

(declare-fun b!69293 () Bool)

(declare-fun lt!30429 () Unit!1898)

(assert (=> b!69293 (= e!45366 lt!30429)))

(declare-fun lt!30412 () ListLongMap!1385)

(assert (=> b!69293 (= lt!30412 (getCurrentListMapNoExtraKeys!53 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) lt!29953 (zeroValue!2073 newMap!16) lt!29673 #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30416 () (_ BitVec 64))

(assert (=> b!69293 (= lt!30416 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30415 () (_ BitVec 64))

(assert (=> b!69293 (= lt!30415 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30432 () Unit!1898)

(assert (=> b!69293 (= lt!30432 (addStillContains!49 lt!30412 lt!30416 (zeroValue!2073 newMap!16) lt!30415))))

(assert (=> b!69293 (contains!709 (+!89 lt!30412 (tuple2!2091 lt!30416 (zeroValue!2073 newMap!16))) lt!30415)))

(declare-fun lt!30426 () Unit!1898)

(assert (=> b!69293 (= lt!30426 lt!30432)))

(declare-fun lt!30427 () ListLongMap!1385)

(assert (=> b!69293 (= lt!30427 (getCurrentListMapNoExtraKeys!53 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) lt!29953 (zeroValue!2073 newMap!16) lt!29673 #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30417 () (_ BitVec 64))

(assert (=> b!69293 (= lt!30417 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30414 () (_ BitVec 64))

(assert (=> b!69293 (= lt!30414 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30421 () Unit!1898)

(assert (=> b!69293 (= lt!30421 (addApplyDifferent!49 lt!30427 lt!30417 lt!29673 lt!30414))))

(assert (=> b!69293 (= (apply!73 (+!89 lt!30427 (tuple2!2091 lt!30417 lt!29673)) lt!30414) (apply!73 lt!30427 lt!30414))))

(declare-fun lt!30433 () Unit!1898)

(assert (=> b!69293 (= lt!30433 lt!30421)))

(declare-fun lt!30413 () ListLongMap!1385)

(assert (=> b!69293 (= lt!30413 (getCurrentListMapNoExtraKeys!53 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) lt!29953 (zeroValue!2073 newMap!16) lt!29673 #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30425 () (_ BitVec 64))

(assert (=> b!69293 (= lt!30425 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30422 () (_ BitVec 64))

(assert (=> b!69293 (= lt!30422 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30424 () Unit!1898)

(assert (=> b!69293 (= lt!30424 (addApplyDifferent!49 lt!30413 lt!30425 (zeroValue!2073 newMap!16) lt!30422))))

(assert (=> b!69293 (= (apply!73 (+!89 lt!30413 (tuple2!2091 lt!30425 (zeroValue!2073 newMap!16))) lt!30422) (apply!73 lt!30413 lt!30422))))

(declare-fun lt!30419 () Unit!1898)

(assert (=> b!69293 (= lt!30419 lt!30424)))

(declare-fun lt!30431 () ListLongMap!1385)

(assert (=> b!69293 (= lt!30431 (getCurrentListMapNoExtraKeys!53 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) lt!29953 (zeroValue!2073 newMap!16) lt!29673 #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30428 () (_ BitVec 64))

(assert (=> b!69293 (= lt!30428 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30423 () (_ BitVec 64))

(assert (=> b!69293 (= lt!30423 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!69293 (= lt!30429 (addApplyDifferent!49 lt!30431 lt!30428 lt!29673 lt!30423))))

(assert (=> b!69293 (= (apply!73 (+!89 lt!30431 (tuple2!2091 lt!30428 lt!29673)) lt!30423) (apply!73 lt!30431 lt!30423))))

(assert (= (and d!15011 c!9888) b!69290))

(assert (= (and d!15011 (not c!9888)) b!69280))

(assert (= (and b!69280 c!9885) b!69282))

(assert (= (and b!69280 (not c!9885)) b!69277))

(assert (= (and b!69277 c!9886) b!69283))

(assert (= (and b!69277 (not c!9886)) b!69273))

(assert (= (or b!69283 b!69273) bm!5926))

(assert (= (or b!69282 bm!5926) bm!5923))

(assert (= (or b!69282 b!69283) bm!5924))

(assert (= (or b!69290 bm!5923) bm!5925))

(assert (= (or b!69290 bm!5924) bm!5922))

(assert (= (and d!15011 res!37180) b!69275))

(assert (= (and d!15011 c!9890) b!69293))

(assert (= (and d!15011 (not c!9890)) b!69292))

(assert (= (and d!15011 res!37188) b!69279))

(assert (= (and b!69279 res!37182) b!69278))

(assert (= (and b!69279 (not res!37181)) b!69289))

(assert (= (and b!69289 res!37184) b!69287))

(assert (= (and b!69279 res!37185) b!69284))

(assert (= (and b!69284 c!9889) b!69281))

(assert (= (and b!69284 (not c!9889)) b!69276))

(assert (= (and b!69281 res!37183) b!69285))

(assert (= (or b!69281 b!69276) bm!5927))

(assert (= (and b!69284 res!37186) b!69288))

(assert (= (and b!69288 c!9887) b!69274))

(assert (= (and b!69288 (not c!9887)) b!69291))

(assert (= (and b!69274 res!37187) b!69286))

(assert (= (or b!69274 b!69291) bm!5921))

(declare-fun b_lambda!3097 () Bool)

(assert (=> (not b_lambda!3097) (not b!69287)))

(assert (=> b!69287 t!4978))

(declare-fun b_and!4253 () Bool)

(assert (= b_and!4249 (and (=> t!4978 result!2615) b_and!4253)))

(assert (=> b!69287 t!4980))

(declare-fun b_and!4255 () Bool)

(assert (= b_and!4251 (and (=> t!4980 result!2617) b_and!4255)))

(declare-fun m!65301 () Bool)

(assert (=> b!69290 m!65301))

(declare-fun m!65303 () Bool)

(assert (=> bm!5922 m!65303))

(declare-fun m!65305 () Bool)

(assert (=> bm!5925 m!65305))

(assert (=> b!69287 m!64177))

(assert (=> b!69287 m!64293))

(assert (=> b!69287 m!64177))

(declare-fun m!65307 () Bool)

(assert (=> b!69287 m!65307))

(assert (=> b!69287 m!64243))

(assert (=> b!69287 m!64293))

(assert (=> b!69287 m!64243))

(assert (=> b!69287 m!64297))

(assert (=> b!69275 m!64177))

(assert (=> b!69275 m!64177))

(assert (=> b!69275 m!64187))

(assert (=> b!69278 m!64177))

(assert (=> b!69278 m!64177))

(assert (=> b!69278 m!64187))

(declare-fun m!65309 () Bool)

(assert (=> bm!5921 m!65309))

(declare-fun m!65311 () Bool)

(assert (=> b!69286 m!65311))

(declare-fun m!65313 () Bool)

(assert (=> bm!5927 m!65313))

(declare-fun m!65315 () Bool)

(assert (=> b!69293 m!65315))

(declare-fun m!65317 () Bool)

(assert (=> b!69293 m!65317))

(declare-fun m!65319 () Bool)

(assert (=> b!69293 m!65319))

(assert (=> b!69293 m!65317))

(assert (=> b!69293 m!65315))

(declare-fun m!65321 () Bool)

(assert (=> b!69293 m!65321))

(declare-fun m!65323 () Bool)

(assert (=> b!69293 m!65323))

(declare-fun m!65325 () Bool)

(assert (=> b!69293 m!65325))

(declare-fun m!65327 () Bool)

(assert (=> b!69293 m!65327))

(declare-fun m!65329 () Bool)

(assert (=> b!69293 m!65329))

(declare-fun m!65331 () Bool)

(assert (=> b!69293 m!65331))

(declare-fun m!65333 () Bool)

(assert (=> b!69293 m!65333))

(assert (=> b!69293 m!65305))

(declare-fun m!65335 () Bool)

(assert (=> b!69293 m!65335))

(declare-fun m!65337 () Bool)

(assert (=> b!69293 m!65337))

(assert (=> b!69293 m!64177))

(declare-fun m!65339 () Bool)

(assert (=> b!69293 m!65339))

(declare-fun m!65341 () Bool)

(assert (=> b!69293 m!65341))

(assert (=> b!69293 m!65327))

(assert (=> b!69293 m!65339))

(declare-fun m!65343 () Bool)

(assert (=> b!69293 m!65343))

(assert (=> b!69289 m!64177))

(assert (=> b!69289 m!64177))

(declare-fun m!65345 () Bool)

(assert (=> b!69289 m!65345))

(declare-fun m!65347 () Bool)

(assert (=> b!69285 m!65347))

(assert (=> d!15011 m!64193))

(assert (=> d!14721 d!15011))

(declare-fun d!15013 () Bool)

(declare-fun e!45367 () Bool)

(assert (=> d!15013 e!45367))

(declare-fun res!37189 () Bool)

(assert (=> d!15013 (=> (not res!37189) (not e!45367))))

(declare-fun lt!30437 () ListLongMap!1385)

(assert (=> d!15013 (= res!37189 (contains!709 lt!30437 (_1!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673))))))

(declare-fun lt!30435 () List!1470)

(assert (=> d!15013 (= lt!30437 (ListLongMap!1386 lt!30435))))

(declare-fun lt!30434 () Unit!1898)

(declare-fun lt!30436 () Unit!1898)

(assert (=> d!15013 (= lt!30434 lt!30436)))

(assert (=> d!15013 (= (getValueByKey!129 lt!30435 (_1!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673))) (Some!134 (_2!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673))))))

(assert (=> d!15013 (= lt!30436 (lemmaContainsTupThenGetReturnValue!49 lt!30435 (_1!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673)) (_2!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673))))))

(assert (=> d!15013 (= lt!30435 (insertStrictlySorted!52 (toList!708 (getCurrentListMap!403 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16))) (_1!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673)) (_2!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673))))))

(assert (=> d!15013 (= (+!89 (getCurrentListMap!403 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673)) lt!30437)))

(declare-fun b!69294 () Bool)

(declare-fun res!37190 () Bool)

(assert (=> b!69294 (=> (not res!37190) (not e!45367))))

(assert (=> b!69294 (= res!37190 (= (getValueByKey!129 (toList!708 lt!30437) (_1!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673))) (Some!134 (_2!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673)))))))

(declare-fun b!69295 () Bool)

(assert (=> b!69295 (= e!45367 (contains!711 (toList!708 lt!30437) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673)))))

(assert (= (and d!15013 res!37189) b!69294))

(assert (= (and b!69294 res!37190) b!69295))

(declare-fun m!65349 () Bool)

(assert (=> d!15013 m!65349))

(declare-fun m!65351 () Bool)

(assert (=> d!15013 m!65351))

(declare-fun m!65353 () Bool)

(assert (=> d!15013 m!65353))

(declare-fun m!65355 () Bool)

(assert (=> d!15013 m!65355))

(declare-fun m!65357 () Bool)

(assert (=> b!69294 m!65357))

(declare-fun m!65359 () Bool)

(assert (=> b!69295 m!65359))

(assert (=> d!14721 d!15013))

(declare-fun d!15015 () Bool)

(assert (=> d!15015 (= (+!89 (getCurrentListMap!403 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673)) (getCurrentListMap!403 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) lt!29953 (zeroValue!2073 newMap!16) lt!29673 #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(assert (=> d!15015 true))

(declare-fun _$8!58 () Unit!1898)

(assert (=> d!15015 (= (choose!391 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) lt!29953 (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) lt!29673 (defaultEntry!2167 newMap!16)) _$8!58)))

(declare-fun bs!2967 () Bool)

(assert (= bs!2967 d!15015))

(assert (=> bs!2967 m!63945))

(assert (=> bs!2967 m!63945))

(assert (=> bs!2967 m!64339))

(assert (=> bs!2967 m!64341))

(assert (=> d!14721 d!15015))

(declare-fun d!15017 () Bool)

(assert (=> d!15017 (= (validMask!0 (mask!6111 newMap!16)) (and (or (= (mask!6111 newMap!16) #b00000000000000000000000000000111) (= (mask!6111 newMap!16) #b00000000000000000000000000001111) (= (mask!6111 newMap!16) #b00000000000000000000000000011111) (= (mask!6111 newMap!16) #b00000000000000000000000000111111) (= (mask!6111 newMap!16) #b00000000000000000000000001111111) (= (mask!6111 newMap!16) #b00000000000000000000000011111111) (= (mask!6111 newMap!16) #b00000000000000000000000111111111) (= (mask!6111 newMap!16) #b00000000000000000000001111111111) (= (mask!6111 newMap!16) #b00000000000000000000011111111111) (= (mask!6111 newMap!16) #b00000000000000000000111111111111) (= (mask!6111 newMap!16) #b00000000000000000001111111111111) (= (mask!6111 newMap!16) #b00000000000000000011111111111111) (= (mask!6111 newMap!16) #b00000000000000000111111111111111) (= (mask!6111 newMap!16) #b00000000000000001111111111111111) (= (mask!6111 newMap!16) #b00000000000000011111111111111111) (= (mask!6111 newMap!16) #b00000000000000111111111111111111) (= (mask!6111 newMap!16) #b00000000000001111111111111111111) (= (mask!6111 newMap!16) #b00000000000011111111111111111111) (= (mask!6111 newMap!16) #b00000000000111111111111111111111) (= (mask!6111 newMap!16) #b00000000001111111111111111111111) (= (mask!6111 newMap!16) #b00000000011111111111111111111111) (= (mask!6111 newMap!16) #b00000000111111111111111111111111) (= (mask!6111 newMap!16) #b00000001111111111111111111111111) (= (mask!6111 newMap!16) #b00000011111111111111111111111111) (= (mask!6111 newMap!16) #b00000111111111111111111111111111) (= (mask!6111 newMap!16) #b00001111111111111111111111111111) (= (mask!6111 newMap!16) #b00011111111111111111111111111111) (= (mask!6111 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!6111 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!14721 d!15017))

(declare-fun d!15019 () Bool)

(declare-fun res!37191 () Bool)

(declare-fun e!45368 () Bool)

(assert (=> d!15019 (=> res!37191 e!45368)))

(assert (=> d!15019 (= res!37191 (and ((_ is Cons!1466) (toList!708 lt!29835)) (= (_1!1056 (h!2051 (toList!708 lt!29835))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!15019 (= (containsKey!133 (toList!708 lt!29835) #b1000000000000000000000000000000000000000000000000000000000000000) e!45368)))

(declare-fun b!69296 () Bool)

(declare-fun e!45369 () Bool)

(assert (=> b!69296 (= e!45368 e!45369)))

(declare-fun res!37192 () Bool)

(assert (=> b!69296 (=> (not res!37192) (not e!45369))))

(assert (=> b!69296 (= res!37192 (and (or (not ((_ is Cons!1466) (toList!708 lt!29835))) (bvsle (_1!1056 (h!2051 (toList!708 lt!29835))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1466) (toList!708 lt!29835)) (bvslt (_1!1056 (h!2051 (toList!708 lt!29835))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!69297 () Bool)

(assert (=> b!69297 (= e!45369 (containsKey!133 (t!4964 (toList!708 lt!29835)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!15019 (not res!37191)) b!69296))

(assert (= (and b!69296 res!37192) b!69297))

(declare-fun m!65361 () Bool)

(assert (=> b!69297 m!65361))

(assert (=> d!14791 d!15019))

(assert (=> d!14863 d!14865))

(assert (=> d!14863 d!14867))

(declare-fun d!15021 () Bool)

(assert (=> d!15021 (contains!709 (+!89 lt!29799 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))) lt!29802)))

(assert (=> d!15021 true))

(declare-fun _$35!312 () Unit!1898)

(assert (=> d!15021 (= (choose!397 lt!29799 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))) lt!29802) _$35!312)))

(declare-fun bs!2968 () Bool)

(assert (= bs!2968 d!15021))

(assert (=> bs!2968 m!63991))

(assert (=> bs!2968 m!63991))

(assert (=> bs!2968 m!63995))

(assert (=> d!14863 d!15021))

(declare-fun d!15023 () Bool)

(declare-fun e!45371 () Bool)

(assert (=> d!15023 e!45371))

(declare-fun res!37193 () Bool)

(assert (=> d!15023 (=> res!37193 e!45371)))

(declare-fun lt!30441 () Bool)

(assert (=> d!15023 (= res!37193 (not lt!30441))))

(declare-fun lt!30440 () Bool)

(assert (=> d!15023 (= lt!30441 lt!30440)))

(declare-fun lt!30439 () Unit!1898)

(declare-fun e!45370 () Unit!1898)

(assert (=> d!15023 (= lt!30439 e!45370)))

(declare-fun c!9891 () Bool)

(assert (=> d!15023 (= c!9891 lt!30440)))

(assert (=> d!15023 (= lt!30440 (containsKey!133 (toList!708 lt!29799) lt!29802))))

(assert (=> d!15023 (= (contains!709 lt!29799 lt!29802) lt!30441)))

(declare-fun b!69299 () Bool)

(declare-fun lt!30438 () Unit!1898)

(assert (=> b!69299 (= e!45370 lt!30438)))

(assert (=> b!69299 (= lt!30438 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 lt!29799) lt!29802))))

(assert (=> b!69299 (isDefined!83 (getValueByKey!129 (toList!708 lt!29799) lt!29802))))

(declare-fun b!69300 () Bool)

(declare-fun Unit!1938 () Unit!1898)

(assert (=> b!69300 (= e!45370 Unit!1938)))

(declare-fun b!69301 () Bool)

(assert (=> b!69301 (= e!45371 (isDefined!83 (getValueByKey!129 (toList!708 lt!29799) lt!29802)))))

(assert (= (and d!15023 c!9891) b!69299))

(assert (= (and d!15023 (not c!9891)) b!69300))

(assert (= (and d!15023 (not res!37193)) b!69301))

(declare-fun m!65363 () Bool)

(assert (=> d!15023 m!65363))

(declare-fun m!65365 () Bool)

(assert (=> b!69299 m!65365))

(declare-fun m!65367 () Bool)

(assert (=> b!69299 m!65367))

(assert (=> b!69299 m!65367))

(declare-fun m!65369 () Bool)

(assert (=> b!69299 m!65369))

(assert (=> b!69301 m!65367))

(assert (=> b!69301 m!65367))

(assert (=> b!69301 m!65369))

(assert (=> d!14863 d!15023))

(assert (=> b!68861 d!14925))

(declare-fun d!15025 () Bool)

(assert (=> d!15025 (= (apply!73 lt!30005 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)) (get!1129 (getValueByKey!129 (toList!708 lt!30005) (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!2969 () Bool)

(assert (= bs!2969 d!15025))

(assert (=> bs!2969 m!64177))

(declare-fun m!65371 () Bool)

(assert (=> bs!2969 m!65371))

(assert (=> bs!2969 m!65371))

(declare-fun m!65373 () Bool)

(assert (=> bs!2969 m!65373))

(assert (=> b!68758 d!15025))

(declare-fun d!15027 () Bool)

(declare-fun c!9892 () Bool)

(assert (=> d!15027 (= c!9892 ((_ is ValueCellFull!884) (select (arr!1829 lt!29960) #b00000000000000000000000000000000)))))

(declare-fun e!45372 () V!2921)

(assert (=> d!15027 (= (get!1126 (select (arr!1829 lt!29960) #b00000000000000000000000000000000) (dynLambda!321 (defaultEntry!2167 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!45372)))

(declare-fun b!69302 () Bool)

(assert (=> b!69302 (= e!45372 (get!1127 (select (arr!1829 lt!29960) #b00000000000000000000000000000000) (dynLambda!321 (defaultEntry!2167 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!69303 () Bool)

(assert (=> b!69303 (= e!45372 (get!1128 (select (arr!1829 lt!29960) #b00000000000000000000000000000000) (dynLambda!321 (defaultEntry!2167 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15027 c!9892) b!69302))

(assert (= (and d!15027 (not c!9892)) b!69303))

(assert (=> b!69302 m!64239))

(assert (=> b!69302 m!64243))

(declare-fun m!65375 () Bool)

(assert (=> b!69302 m!65375))

(assert (=> b!69303 m!64239))

(assert (=> b!69303 m!64243))

(declare-fun m!65377 () Bool)

(assert (=> b!69303 m!65377))

(assert (=> b!68758 d!15027))

(declare-fun d!15029 () Bool)

(declare-fun e!45374 () Bool)

(assert (=> d!15029 e!45374))

(declare-fun res!37194 () Bool)

(assert (=> d!15029 (=> res!37194 e!45374)))

(declare-fun lt!30445 () Bool)

(assert (=> d!15029 (= res!37194 (not lt!30445))))

(declare-fun lt!30444 () Bool)

(assert (=> d!15029 (= lt!30445 lt!30444)))

(declare-fun lt!30443 () Unit!1898)

(declare-fun e!45373 () Unit!1898)

(assert (=> d!15029 (= lt!30443 e!45373)))

(declare-fun c!9893 () Bool)

(assert (=> d!15029 (= c!9893 lt!30444)))

(assert (=> d!15029 (= lt!30444 (containsKey!133 (toList!708 lt!30115) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!15029 (= (contains!709 lt!30115 (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!30445)))

(declare-fun b!69304 () Bool)

(declare-fun lt!30442 () Unit!1898)

(assert (=> b!69304 (= e!45373 lt!30442)))

(assert (=> b!69304 (= lt!30442 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 lt!30115) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!69304 (isDefined!83 (getValueByKey!129 (toList!708 lt!30115) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!69305 () Bool)

(declare-fun Unit!1939 () Unit!1898)

(assert (=> b!69305 (= e!45373 Unit!1939)))

(declare-fun b!69306 () Bool)

(assert (=> b!69306 (= e!45374 (isDefined!83 (getValueByKey!129 (toList!708 lt!30115) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!15029 c!9893) b!69304))

(assert (= (and d!15029 (not c!9893)) b!69305))

(assert (= (and d!15029 (not res!37194)) b!69306))

(declare-fun m!65379 () Bool)

(assert (=> d!15029 m!65379))

(declare-fun m!65381 () Bool)

(assert (=> b!69304 m!65381))

(assert (=> b!69304 m!64535))

(assert (=> b!69304 m!64535))

(declare-fun m!65383 () Bool)

(assert (=> b!69304 m!65383))

(assert (=> b!69306 m!64535))

(assert (=> b!69306 m!64535))

(assert (=> b!69306 m!65383))

(assert (=> d!14779 d!15029))

(declare-fun b!69309 () Bool)

(declare-fun e!45376 () Option!135)

(assert (=> b!69309 (= e!45376 (getValueByKey!129 (t!4964 lt!30113) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!69307 () Bool)

(declare-fun e!45375 () Option!135)

(assert (=> b!69307 (= e!45375 (Some!134 (_2!1056 (h!2051 lt!30113))))))

(declare-fun b!69310 () Bool)

(assert (=> b!69310 (= e!45376 None!133)))

(declare-fun d!15031 () Bool)

(declare-fun c!9894 () Bool)

(assert (=> d!15031 (= c!9894 (and ((_ is Cons!1466) lt!30113) (= (_1!1056 (h!2051 lt!30113)) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!15031 (= (getValueByKey!129 lt!30113 (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!45375)))

(declare-fun b!69308 () Bool)

(assert (=> b!69308 (= e!45375 e!45376)))

(declare-fun c!9895 () Bool)

(assert (=> b!69308 (= c!9895 (and ((_ is Cons!1466) lt!30113) (not (= (_1!1056 (h!2051 lt!30113)) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!15031 c!9894) b!69307))

(assert (= (and d!15031 (not c!9894)) b!69308))

(assert (= (and b!69308 c!9895) b!69309))

(assert (= (and b!69308 (not c!9895)) b!69310))

(declare-fun m!65385 () Bool)

(assert (=> b!69309 m!65385))

(assert (=> d!14779 d!15031))

(declare-fun d!15033 () Bool)

(assert (=> d!15033 (= (getValueByKey!129 lt!30113 (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!134 (_2!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!30446 () Unit!1898)

(assert (=> d!15033 (= lt!30446 (choose!390 lt!30113 (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!45377 () Bool)

(assert (=> d!15033 e!45377))

(declare-fun res!37195 () Bool)

(assert (=> d!15033 (=> (not res!37195) (not e!45377))))

(assert (=> d!15033 (= res!37195 (isStrictlySorted!285 lt!30113))))

(assert (=> d!15033 (= (lemmaContainsTupThenGetReturnValue!49 lt!30113 (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!30446)))

(declare-fun b!69311 () Bool)

(declare-fun res!37196 () Bool)

(assert (=> b!69311 (=> (not res!37196) (not e!45377))))

(assert (=> b!69311 (= res!37196 (containsKey!133 lt!30113 (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!69312 () Bool)

(assert (=> b!69312 (= e!45377 (contains!711 lt!30113 (tuple2!2091 (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!15033 res!37195) b!69311))

(assert (= (and b!69311 res!37196) b!69312))

(assert (=> d!15033 m!64529))

(declare-fun m!65387 () Bool)

(assert (=> d!15033 m!65387))

(declare-fun m!65389 () Bool)

(assert (=> d!15033 m!65389))

(declare-fun m!65391 () Bool)

(assert (=> b!69311 m!65391))

(declare-fun m!65393 () Bool)

(assert (=> b!69312 m!65393))

(assert (=> d!14779 d!15033))

(declare-fun b!69313 () Bool)

(declare-fun e!45381 () List!1470)

(declare-fun call!5932 () List!1470)

(assert (=> b!69313 (= e!45381 call!5932)))

(declare-fun b!69314 () Bool)

(declare-fun c!9896 () Bool)

(assert (=> b!69314 (= c!9896 (and ((_ is Cons!1466) (toList!708 call!5767)) (bvsgt (_1!1056 (h!2051 (toList!708 call!5767))) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!45379 () List!1470)

(assert (=> b!69314 (= e!45379 e!45381)))

(declare-fun b!69315 () Bool)

(assert (=> b!69315 (= e!45381 call!5932)))

(declare-fun b!69317 () Bool)

(declare-fun call!5931 () List!1470)

(assert (=> b!69317 (= e!45379 call!5931)))

(declare-fun bm!5928 () Bool)

(declare-fun call!5933 () List!1470)

(assert (=> bm!5928 (= call!5931 call!5933)))

(declare-fun bm!5929 () Bool)

(assert (=> bm!5929 (= call!5932 call!5931)))

(declare-fun b!69318 () Bool)

(declare-fun e!45378 () List!1470)

(assert (=> b!69318 (= e!45378 e!45379)))

(declare-fun c!9897 () Bool)

(assert (=> b!69318 (= c!9897 (and ((_ is Cons!1466) (toList!708 call!5767)) (= (_1!1056 (h!2051 (toList!708 call!5767))) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun bm!5930 () Bool)

(declare-fun c!9899 () Bool)

(declare-fun e!45380 () List!1470)

(assert (=> bm!5930 (= call!5933 ($colon$colon!63 e!45380 (ite c!9899 (h!2051 (toList!708 call!5767)) (tuple2!2091 (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!9898 () Bool)

(assert (=> bm!5930 (= c!9898 c!9899)))

(declare-fun b!69319 () Bool)

(declare-fun res!37198 () Bool)

(declare-fun e!45382 () Bool)

(assert (=> b!69319 (=> (not res!37198) (not e!45382))))

(declare-fun lt!30447 () List!1470)

(assert (=> b!69319 (= res!37198 (containsKey!133 lt!30447 (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!69320 () Bool)

(assert (=> b!69320 (= e!45382 (contains!711 lt!30447 (tuple2!2091 (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!69321 () Bool)

(assert (=> b!69321 (= e!45380 (ite c!9897 (t!4964 (toList!708 call!5767)) (ite c!9896 (Cons!1466 (h!2051 (toList!708 call!5767)) (t!4964 (toList!708 call!5767))) Nil!1467)))))

(declare-fun b!69322 () Bool)

(assert (=> b!69322 (= e!45378 call!5933)))

(declare-fun d!15035 () Bool)

(assert (=> d!15035 e!45382))

(declare-fun res!37197 () Bool)

(assert (=> d!15035 (=> (not res!37197) (not e!45382))))

(assert (=> d!15035 (= res!37197 (isStrictlySorted!285 lt!30447))))

(assert (=> d!15035 (= lt!30447 e!45378)))

(assert (=> d!15035 (= c!9899 (and ((_ is Cons!1466) (toList!708 call!5767)) (bvslt (_1!1056 (h!2051 (toList!708 call!5767))) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!15035 (isStrictlySorted!285 (toList!708 call!5767))))

(assert (=> d!15035 (= (insertStrictlySorted!52 (toList!708 call!5767) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!30447)))

(declare-fun b!69316 () Bool)

(assert (=> b!69316 (= e!45380 (insertStrictlySorted!52 (t!4964 (toList!708 call!5767)) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!15035 c!9899) b!69322))

(assert (= (and d!15035 (not c!9899)) b!69318))

(assert (= (and b!69318 c!9897) b!69317))

(assert (= (and b!69318 (not c!9897)) b!69314))

(assert (= (and b!69314 c!9896) b!69315))

(assert (= (and b!69314 (not c!9896)) b!69313))

(assert (= (or b!69315 b!69313) bm!5929))

(assert (= (or b!69317 bm!5929) bm!5928))

(assert (= (or b!69322 bm!5928) bm!5930))

(assert (= (and bm!5930 c!9898) b!69316))

(assert (= (and bm!5930 (not c!9898)) b!69321))

(assert (= (and d!15035 res!37197) b!69319))

(assert (= (and b!69319 res!37198) b!69320))

(declare-fun m!65395 () Bool)

(assert (=> d!15035 m!65395))

(declare-fun m!65397 () Bool)

(assert (=> d!15035 m!65397))

(declare-fun m!65399 () Bool)

(assert (=> b!69320 m!65399))

(declare-fun m!65401 () Bool)

(assert (=> b!69319 m!65401))

(declare-fun m!65403 () Bool)

(assert (=> bm!5930 m!65403))

(declare-fun m!65405 () Bool)

(assert (=> b!69316 m!65405))

(assert (=> d!14779 d!15035))

(declare-fun d!15037 () Bool)

(assert (=> d!15037 (isDefined!83 (getValueByKey!129 (toList!708 (+!89 lt!29799 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))) lt!29802))))

(declare-fun lt!30448 () Unit!1898)

(assert (=> d!15037 (= lt!30448 (choose!399 (toList!708 (+!89 lt!29799 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))) lt!29802))))

(declare-fun e!45383 () Bool)

(assert (=> d!15037 e!45383))

(declare-fun res!37199 () Bool)

(assert (=> d!15037 (=> (not res!37199) (not e!45383))))

(assert (=> d!15037 (= res!37199 (isStrictlySorted!285 (toList!708 (+!89 lt!29799 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(assert (=> d!15037 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 (+!89 lt!29799 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))) lt!29802) lt!30448)))

(declare-fun b!69323 () Bool)

(assert (=> b!69323 (= e!45383 (containsKey!133 (toList!708 (+!89 lt!29799 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))) lt!29802))))

(assert (= (and d!15037 res!37199) b!69323))

(assert (=> d!15037 m!64875))

(assert (=> d!15037 m!64875))

(assert (=> d!15037 m!64877))

(declare-fun m!65407 () Bool)

(assert (=> d!15037 m!65407))

(declare-fun m!65409 () Bool)

(assert (=> d!15037 m!65409))

(assert (=> b!69323 m!64871))

(assert (=> b!69065 d!15037))

(declare-fun d!15039 () Bool)

(assert (=> d!15039 (= (isDefined!83 (getValueByKey!129 (toList!708 (+!89 lt!29799 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))) lt!29802)) (not (isEmpty!316 (getValueByKey!129 (toList!708 (+!89 lt!29799 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))) lt!29802))))))

(declare-fun bs!2970 () Bool)

(assert (= bs!2970 d!15039))

(assert (=> bs!2970 m!64875))

(declare-fun m!65411 () Bool)

(assert (=> bs!2970 m!65411))

(assert (=> b!69065 d!15039))

(declare-fun b!69326 () Bool)

(declare-fun e!45385 () Option!135)

(assert (=> b!69326 (= e!45385 (getValueByKey!129 (t!4964 (toList!708 (+!89 lt!29799 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))) lt!29802))))

(declare-fun b!69324 () Bool)

(declare-fun e!45384 () Option!135)

(assert (=> b!69324 (= e!45384 (Some!134 (_2!1056 (h!2051 (toList!708 (+!89 lt!29799 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))))))))

(declare-fun b!69327 () Bool)

(assert (=> b!69327 (= e!45385 None!133)))

(declare-fun d!15041 () Bool)

(declare-fun c!9900 () Bool)

(assert (=> d!15041 (= c!9900 (and ((_ is Cons!1466) (toList!708 (+!89 lt!29799 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))) (= (_1!1056 (h!2051 (toList!708 (+!89 lt!29799 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))) lt!29802)))))

(assert (=> d!15041 (= (getValueByKey!129 (toList!708 (+!89 lt!29799 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))) lt!29802) e!45384)))

(declare-fun b!69325 () Bool)

(assert (=> b!69325 (= e!45384 e!45385)))

(declare-fun c!9901 () Bool)

(assert (=> b!69325 (= c!9901 (and ((_ is Cons!1466) (toList!708 (+!89 lt!29799 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))) (not (= (_1!1056 (h!2051 (toList!708 (+!89 lt!29799 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))) lt!29802))))))

(assert (= (and d!15041 c!9900) b!69324))

(assert (= (and d!15041 (not c!9900)) b!69325))

(assert (= (and b!69325 c!9901) b!69326))

(assert (= (and b!69325 (not c!9901)) b!69327))

(declare-fun m!65413 () Bool)

(assert (=> b!69326 m!65413))

(assert (=> b!69065 d!15041))

(declare-fun d!15043 () Bool)

(assert (=> d!15043 (isDefined!83 (getValueByKey!129 (toList!708 lt!29835) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!30449 () Unit!1898)

(assert (=> d!15043 (= lt!30449 (choose!399 (toList!708 lt!29835) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!45386 () Bool)

(assert (=> d!15043 e!45386))

(declare-fun res!37200 () Bool)

(assert (=> d!15043 (=> (not res!37200) (not e!45386))))

(assert (=> d!15043 (= res!37200 (isStrictlySorted!285 (toList!708 lt!29835)))))

(assert (=> d!15043 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 lt!29835) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!30449)))

(declare-fun b!69328 () Bool)

(assert (=> b!69328 (= e!45386 (containsKey!133 (toList!708 lt!29835) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!15043 res!37200) b!69328))

(assert (=> d!15043 m!63951))

(assert (=> d!15043 m!64169))

(assert (=> d!15043 m!64169))

(assert (=> d!15043 m!64455))

(assert (=> d!15043 m!63951))

(declare-fun m!65415 () Bool)

(assert (=> d!15043 m!65415))

(assert (=> d!15043 m!65087))

(assert (=> b!69328 m!63951))

(assert (=> b!69328 m!64451))

(assert (=> b!68824 d!15043))

(declare-fun d!15045 () Bool)

(assert (=> d!15045 (= (isDefined!83 (getValueByKey!129 (toList!708 lt!29835) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!316 (getValueByKey!129 (toList!708 lt!29835) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!2971 () Bool)

(assert (= bs!2971 d!15045))

(assert (=> bs!2971 m!64169))

(declare-fun m!65417 () Bool)

(assert (=> bs!2971 m!65417))

(assert (=> b!68824 d!15045))

(declare-fun b!69331 () Bool)

(declare-fun e!45388 () Option!135)

(assert (=> b!69331 (= e!45388 (getValueByKey!129 (t!4964 (toList!708 lt!29835)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!69329 () Bool)

(declare-fun e!45387 () Option!135)

(assert (=> b!69329 (= e!45387 (Some!134 (_2!1056 (h!2051 (toList!708 lt!29835)))))))

(declare-fun b!69332 () Bool)

(assert (=> b!69332 (= e!45388 None!133)))

(declare-fun c!9902 () Bool)

(declare-fun d!15047 () Bool)

(assert (=> d!15047 (= c!9902 (and ((_ is Cons!1466) (toList!708 lt!29835)) (= (_1!1056 (h!2051 (toList!708 lt!29835))) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!15047 (= (getValueByKey!129 (toList!708 lt!29835) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!45387)))

(declare-fun b!69330 () Bool)

(assert (=> b!69330 (= e!45387 e!45388)))

(declare-fun c!9903 () Bool)

(assert (=> b!69330 (= c!9903 (and ((_ is Cons!1466) (toList!708 lt!29835)) (not (= (_1!1056 (h!2051 (toList!708 lt!29835))) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(assert (= (and d!15047 c!9902) b!69329))

(assert (= (and d!15047 (not c!9902)) b!69330))

(assert (= (and b!69330 c!9903) b!69331))

(assert (= (and b!69330 (not c!9903)) b!69332))

(assert (=> b!69331 m!63951))

(declare-fun m!65419 () Bool)

(assert (=> b!69331 m!65419))

(assert (=> b!68824 d!15047))

(declare-fun d!15049 () Bool)

(assert (=> d!15049 (= ($colon$colon!63 e!45163 (ite c!9807 (h!2051 (toList!708 (+!89 lt!29682 lt!29680))) (tuple2!2091 (_1!1056 lt!29675) (_2!1056 lt!29675)))) (Cons!1466 (ite c!9807 (h!2051 (toList!708 (+!89 lt!29682 lt!29680))) (tuple2!2091 (_1!1056 lt!29675) (_2!1056 lt!29675))) e!45163))))

(assert (=> bm!5892 d!15049))

(assert (=> b!68936 d!14705))

(declare-fun d!15051 () Bool)

(declare-fun lt!30450 () Bool)

(assert (=> d!15051 (= lt!30450 (select (content!73 lt!29995) (tuple2!2091 (_1!1056 lt!29680) (_2!1056 lt!29680))))))

(declare-fun e!45390 () Bool)

(assert (=> d!15051 (= lt!30450 e!45390)))

(declare-fun res!37202 () Bool)

(assert (=> d!15051 (=> (not res!37202) (not e!45390))))

(assert (=> d!15051 (= res!37202 ((_ is Cons!1466) lt!29995))))

(assert (=> d!15051 (= (contains!711 lt!29995 (tuple2!2091 (_1!1056 lt!29680) (_2!1056 lt!29680))) lt!30450)))

(declare-fun b!69333 () Bool)

(declare-fun e!45389 () Bool)

(assert (=> b!69333 (= e!45390 e!45389)))

(declare-fun res!37201 () Bool)

(assert (=> b!69333 (=> res!37201 e!45389)))

(assert (=> b!69333 (= res!37201 (= (h!2051 lt!29995) (tuple2!2091 (_1!1056 lt!29680) (_2!1056 lt!29680))))))

(declare-fun b!69334 () Bool)

(assert (=> b!69334 (= e!45389 (contains!711 (t!4964 lt!29995) (tuple2!2091 (_1!1056 lt!29680) (_2!1056 lt!29680))))))

(assert (= (and d!15051 res!37202) b!69333))

(assert (= (and b!69333 (not res!37201)) b!69334))

(declare-fun m!65421 () Bool)

(assert (=> d!15051 m!65421))

(declare-fun m!65423 () Bool)

(assert (=> d!15051 m!65423))

(declare-fun m!65425 () Bool)

(assert (=> b!69334 m!65425))

(assert (=> b!68735 d!15051))

(declare-fun b!69335 () Bool)

(declare-fun e!45394 () List!1470)

(declare-fun call!5935 () List!1470)

(assert (=> b!69335 (= e!45394 call!5935)))

(declare-fun b!69336 () Bool)

(declare-fun c!9904 () Bool)

(assert (=> b!69336 (= c!9904 (and ((_ is Cons!1466) (t!4964 (toList!708 lt!29682))) (bvsgt (_1!1056 (h!2051 (t!4964 (toList!708 lt!29682)))) (_1!1056 lt!29675))))))

(declare-fun e!45392 () List!1470)

(assert (=> b!69336 (= e!45392 e!45394)))

(declare-fun b!69337 () Bool)

(assert (=> b!69337 (= e!45394 call!5935)))

(declare-fun b!69339 () Bool)

(declare-fun call!5934 () List!1470)

(assert (=> b!69339 (= e!45392 call!5934)))

(declare-fun bm!5931 () Bool)

(declare-fun call!5936 () List!1470)

(assert (=> bm!5931 (= call!5934 call!5936)))

(declare-fun bm!5932 () Bool)

(assert (=> bm!5932 (= call!5935 call!5934)))

(declare-fun b!69340 () Bool)

(declare-fun e!45391 () List!1470)

(assert (=> b!69340 (= e!45391 e!45392)))

(declare-fun c!9905 () Bool)

(assert (=> b!69340 (= c!9905 (and ((_ is Cons!1466) (t!4964 (toList!708 lt!29682))) (= (_1!1056 (h!2051 (t!4964 (toList!708 lt!29682)))) (_1!1056 lt!29675))))))

(declare-fun e!45393 () List!1470)

(declare-fun c!9907 () Bool)

(declare-fun bm!5933 () Bool)

(assert (=> bm!5933 (= call!5936 ($colon$colon!63 e!45393 (ite c!9907 (h!2051 (t!4964 (toList!708 lt!29682))) (tuple2!2091 (_1!1056 lt!29675) (_2!1056 lt!29675)))))))

(declare-fun c!9906 () Bool)

(assert (=> bm!5933 (= c!9906 c!9907)))

(declare-fun b!69341 () Bool)

(declare-fun res!37204 () Bool)

(declare-fun e!45395 () Bool)

(assert (=> b!69341 (=> (not res!37204) (not e!45395))))

(declare-fun lt!30451 () List!1470)

(assert (=> b!69341 (= res!37204 (containsKey!133 lt!30451 (_1!1056 lt!29675)))))

(declare-fun b!69342 () Bool)

(assert (=> b!69342 (= e!45395 (contains!711 lt!30451 (tuple2!2091 (_1!1056 lt!29675) (_2!1056 lt!29675))))))

(declare-fun b!69343 () Bool)

(assert (=> b!69343 (= e!45393 (ite c!9905 (t!4964 (t!4964 (toList!708 lt!29682))) (ite c!9904 (Cons!1466 (h!2051 (t!4964 (toList!708 lt!29682))) (t!4964 (t!4964 (toList!708 lt!29682)))) Nil!1467)))))

(declare-fun b!69344 () Bool)

(assert (=> b!69344 (= e!45391 call!5936)))

(declare-fun d!15053 () Bool)

(assert (=> d!15053 e!45395))

(declare-fun res!37203 () Bool)

(assert (=> d!15053 (=> (not res!37203) (not e!45395))))

(assert (=> d!15053 (= res!37203 (isStrictlySorted!285 lt!30451))))

(assert (=> d!15053 (= lt!30451 e!45391)))

(assert (=> d!15053 (= c!9907 (and ((_ is Cons!1466) (t!4964 (toList!708 lt!29682))) (bvslt (_1!1056 (h!2051 (t!4964 (toList!708 lt!29682)))) (_1!1056 lt!29675))))))

(assert (=> d!15053 (isStrictlySorted!285 (t!4964 (toList!708 lt!29682)))))

(assert (=> d!15053 (= (insertStrictlySorted!52 (t!4964 (toList!708 lt!29682)) (_1!1056 lt!29675) (_2!1056 lt!29675)) lt!30451)))

(declare-fun b!69338 () Bool)

(assert (=> b!69338 (= e!45393 (insertStrictlySorted!52 (t!4964 (t!4964 (toList!708 lt!29682))) (_1!1056 lt!29675) (_2!1056 lt!29675)))))

(assert (= (and d!15053 c!9907) b!69344))

(assert (= (and d!15053 (not c!9907)) b!69340))

(assert (= (and b!69340 c!9905) b!69339))

(assert (= (and b!69340 (not c!9905)) b!69336))

(assert (= (and b!69336 c!9904) b!69337))

(assert (= (and b!69336 (not c!9904)) b!69335))

(assert (= (or b!69337 b!69335) bm!5932))

(assert (= (or b!69339 bm!5932) bm!5931))

(assert (= (or b!69344 bm!5931) bm!5933))

(assert (= (and bm!5933 c!9906) b!69338))

(assert (= (and bm!5933 (not c!9906)) b!69343))

(assert (= (and d!15053 res!37203) b!69341))

(assert (= (and b!69341 res!37204) b!69342))

(declare-fun m!65427 () Bool)

(assert (=> d!15053 m!65427))

(declare-fun m!65429 () Bool)

(assert (=> d!15053 m!65429))

(declare-fun m!65431 () Bool)

(assert (=> b!69342 m!65431))

(declare-fun m!65433 () Bool)

(assert (=> b!69341 m!65433))

(declare-fun m!65435 () Bool)

(assert (=> bm!5933 m!65435))

(declare-fun m!65437 () Bool)

(assert (=> b!69338 m!65437))

(assert (=> b!68845 d!15053))

(assert (=> b!68746 d!14925))

(declare-fun d!15055 () Bool)

(assert (=> d!15055 (= (get!1129 (getValueByKey!129 (toList!708 (+!89 lt!29800 (tuple2!2091 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))) lt!29809)) (v!2491 (getValueByKey!129 (toList!708 (+!89 lt!29800 (tuple2!2091 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))) lt!29809)))))

(assert (=> d!14855 d!15055))

(declare-fun e!45397 () Option!135)

(declare-fun b!69347 () Bool)

(assert (=> b!69347 (= e!45397 (getValueByKey!129 (t!4964 (toList!708 (+!89 lt!29800 (tuple2!2091 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))) lt!29809))))

(declare-fun e!45396 () Option!135)

(declare-fun b!69345 () Bool)

(assert (=> b!69345 (= e!45396 (Some!134 (_2!1056 (h!2051 (toList!708 (+!89 lt!29800 (tuple2!2091 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))))))))

(declare-fun b!69348 () Bool)

(assert (=> b!69348 (= e!45397 None!133)))

(declare-fun c!9908 () Bool)

(declare-fun d!15057 () Bool)

(assert (=> d!15057 (= c!9908 (and ((_ is Cons!1466) (toList!708 (+!89 lt!29800 (tuple2!2091 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))) (= (_1!1056 (h!2051 (toList!708 (+!89 lt!29800 (tuple2!2091 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))) lt!29809)))))

(assert (=> d!15057 (= (getValueByKey!129 (toList!708 (+!89 lt!29800 (tuple2!2091 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))) lt!29809) e!45396)))

(declare-fun b!69346 () Bool)

(assert (=> b!69346 (= e!45396 e!45397)))

(declare-fun c!9909 () Bool)

(assert (=> b!69346 (= c!9909 (and ((_ is Cons!1466) (toList!708 (+!89 lt!29800 (tuple2!2091 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))) (not (= (_1!1056 (h!2051 (toList!708 (+!89 lt!29800 (tuple2!2091 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))) lt!29809))))))

(assert (= (and d!15057 c!9908) b!69345))

(assert (= (and d!15057 (not c!9908)) b!69346))

(assert (= (and b!69346 c!9909) b!69347))

(assert (= (and b!69346 (not c!9909)) b!69348))

(declare-fun m!65439 () Bool)

(assert (=> b!69347 m!65439))

(assert (=> d!14855 d!15057))

(declare-fun d!15059 () Bool)

(assert (=> d!15059 (isDefined!83 (getValueByKey!129 (toList!708 (+!89 lt!29838 (tuple2!2091 lt!29837 lt!29836))) lt!29839))))

(declare-fun lt!30452 () Unit!1898)

(assert (=> d!15059 (= lt!30452 (choose!399 (toList!708 (+!89 lt!29838 (tuple2!2091 lt!29837 lt!29836))) lt!29839))))

(declare-fun e!45398 () Bool)

(assert (=> d!15059 e!45398))

(declare-fun res!37205 () Bool)

(assert (=> d!15059 (=> (not res!37205) (not e!45398))))

(assert (=> d!15059 (= res!37205 (isStrictlySorted!285 (toList!708 (+!89 lt!29838 (tuple2!2091 lt!29837 lt!29836)))))))

(assert (=> d!15059 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 (+!89 lt!29838 (tuple2!2091 lt!29837 lt!29836))) lt!29839) lt!30452)))

(declare-fun b!69349 () Bool)

(assert (=> b!69349 (= e!45398 (containsKey!133 (toList!708 (+!89 lt!29838 (tuple2!2091 lt!29837 lt!29836))) lt!29839))))

(assert (= (and d!15059 res!37205) b!69349))

(assert (=> d!15059 m!64507))

(assert (=> d!15059 m!64507))

(assert (=> d!15059 m!64509))

(declare-fun m!65441 () Bool)

(assert (=> d!15059 m!65441))

(declare-fun m!65443 () Bool)

(assert (=> d!15059 m!65443))

(assert (=> b!69349 m!64503))

(assert (=> b!68871 d!15059))

(declare-fun d!15061 () Bool)

(assert (=> d!15061 (= (isDefined!83 (getValueByKey!129 (toList!708 (+!89 lt!29838 (tuple2!2091 lt!29837 lt!29836))) lt!29839)) (not (isEmpty!316 (getValueByKey!129 (toList!708 (+!89 lt!29838 (tuple2!2091 lt!29837 lt!29836))) lt!29839))))))

(declare-fun bs!2972 () Bool)

(assert (= bs!2972 d!15061))

(assert (=> bs!2972 m!64507))

(declare-fun m!65445 () Bool)

(assert (=> bs!2972 m!65445))

(assert (=> b!68871 d!15061))

(declare-fun e!45400 () Option!135)

(declare-fun b!69352 () Bool)

(assert (=> b!69352 (= e!45400 (getValueByKey!129 (t!4964 (toList!708 (+!89 lt!29838 (tuple2!2091 lt!29837 lt!29836)))) lt!29839))))

(declare-fun b!69350 () Bool)

(declare-fun e!45399 () Option!135)

(assert (=> b!69350 (= e!45399 (Some!134 (_2!1056 (h!2051 (toList!708 (+!89 lt!29838 (tuple2!2091 lt!29837 lt!29836)))))))))

(declare-fun b!69353 () Bool)

(assert (=> b!69353 (= e!45400 None!133)))

(declare-fun d!15063 () Bool)

(declare-fun c!9910 () Bool)

(assert (=> d!15063 (= c!9910 (and ((_ is Cons!1466) (toList!708 (+!89 lt!29838 (tuple2!2091 lt!29837 lt!29836)))) (= (_1!1056 (h!2051 (toList!708 (+!89 lt!29838 (tuple2!2091 lt!29837 lt!29836))))) lt!29839)))))

(assert (=> d!15063 (= (getValueByKey!129 (toList!708 (+!89 lt!29838 (tuple2!2091 lt!29837 lt!29836))) lt!29839) e!45399)))

(declare-fun b!69351 () Bool)

(assert (=> b!69351 (= e!45399 e!45400)))

(declare-fun c!9911 () Bool)

(assert (=> b!69351 (= c!9911 (and ((_ is Cons!1466) (toList!708 (+!89 lt!29838 (tuple2!2091 lt!29837 lt!29836)))) (not (= (_1!1056 (h!2051 (toList!708 (+!89 lt!29838 (tuple2!2091 lt!29837 lt!29836))))) lt!29839))))))

(assert (= (and d!15063 c!9910) b!69350))

(assert (= (and d!15063 (not c!9910)) b!69351))

(assert (= (and b!69351 c!9911) b!69352))

(assert (= (and b!69351 (not c!9911)) b!69353))

(declare-fun m!65447 () Bool)

(assert (=> b!69352 m!65447))

(assert (=> b!68871 d!15063))

(assert (=> d!14823 d!15017))

(declare-fun d!15065 () Bool)

(declare-fun e!45402 () Bool)

(assert (=> d!15065 e!45402))

(declare-fun res!37206 () Bool)

(assert (=> d!15065 (=> res!37206 e!45402)))

(declare-fun lt!30456 () Bool)

(assert (=> d!15065 (= res!37206 (not lt!30456))))

(declare-fun lt!30455 () Bool)

(assert (=> d!15065 (= lt!30456 lt!30455)))

(declare-fun lt!30454 () Unit!1898)

(declare-fun e!45401 () Unit!1898)

(assert (=> d!15065 (= lt!30454 e!45401)))

(declare-fun c!9912 () Bool)

(assert (=> d!15065 (= c!9912 lt!30455)))

(assert (=> d!15065 (= lt!30455 (containsKey!133 (toList!708 (+!89 lt!29999 (tuple2!2091 lt!30003 (zeroValue!2073 newMap!16)))) lt!30002))))

(assert (=> d!15065 (= (contains!709 (+!89 lt!29999 (tuple2!2091 lt!30003 (zeroValue!2073 newMap!16))) lt!30002) lt!30456)))

(declare-fun b!69354 () Bool)

(declare-fun lt!30453 () Unit!1898)

(assert (=> b!69354 (= e!45401 lt!30453)))

(assert (=> b!69354 (= lt!30453 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 (+!89 lt!29999 (tuple2!2091 lt!30003 (zeroValue!2073 newMap!16)))) lt!30002))))

(assert (=> b!69354 (isDefined!83 (getValueByKey!129 (toList!708 (+!89 lt!29999 (tuple2!2091 lt!30003 (zeroValue!2073 newMap!16)))) lt!30002))))

(declare-fun b!69355 () Bool)

(declare-fun Unit!1940 () Unit!1898)

(assert (=> b!69355 (= e!45401 Unit!1940)))

(declare-fun b!69356 () Bool)

(assert (=> b!69356 (= e!45402 (isDefined!83 (getValueByKey!129 (toList!708 (+!89 lt!29999 (tuple2!2091 lt!30003 (zeroValue!2073 newMap!16)))) lt!30002)))))

(assert (= (and d!15065 c!9912) b!69354))

(assert (= (and d!15065 (not c!9912)) b!69355))

(assert (= (and d!15065 (not res!37206)) b!69356))

(declare-fun m!65449 () Bool)

(assert (=> d!15065 m!65449))

(declare-fun m!65451 () Bool)

(assert (=> b!69354 m!65451))

(declare-fun m!65453 () Bool)

(assert (=> b!69354 m!65453))

(assert (=> b!69354 m!65453))

(declare-fun m!65455 () Bool)

(assert (=> b!69354 m!65455))

(assert (=> b!69356 m!65453))

(assert (=> b!69356 m!65453))

(assert (=> b!69356 m!65455))

(assert (=> b!68764 d!15065))

(declare-fun d!15067 () Bool)

(assert (=> d!15067 (= (apply!73 (+!89 lt!30018 (tuple2!2091 lt!30015 (minValue!2073 newMap!16))) lt!30010) (get!1129 (getValueByKey!129 (toList!708 (+!89 lt!30018 (tuple2!2091 lt!30015 (minValue!2073 newMap!16)))) lt!30010)))))

(declare-fun bs!2973 () Bool)

(assert (= bs!2973 d!15067))

(declare-fun m!65457 () Bool)

(assert (=> bs!2973 m!65457))

(assert (=> bs!2973 m!65457))

(declare-fun m!65459 () Bool)

(assert (=> bs!2973 m!65459))

(assert (=> b!68764 d!15067))

(declare-fun d!15069 () Bool)

(declare-fun e!45403 () Bool)

(assert (=> d!15069 e!45403))

(declare-fun res!37207 () Bool)

(assert (=> d!15069 (=> (not res!37207) (not e!45403))))

(declare-fun lt!30460 () ListLongMap!1385)

(assert (=> d!15069 (= res!37207 (contains!709 lt!30460 (_1!1056 (tuple2!2091 lt!30012 (zeroValue!2073 newMap!16)))))))

(declare-fun lt!30458 () List!1470)

(assert (=> d!15069 (= lt!30460 (ListLongMap!1386 lt!30458))))

(declare-fun lt!30457 () Unit!1898)

(declare-fun lt!30459 () Unit!1898)

(assert (=> d!15069 (= lt!30457 lt!30459)))

(assert (=> d!15069 (= (getValueByKey!129 lt!30458 (_1!1056 (tuple2!2091 lt!30012 (zeroValue!2073 newMap!16)))) (Some!134 (_2!1056 (tuple2!2091 lt!30012 (zeroValue!2073 newMap!16)))))))

(assert (=> d!15069 (= lt!30459 (lemmaContainsTupThenGetReturnValue!49 lt!30458 (_1!1056 (tuple2!2091 lt!30012 (zeroValue!2073 newMap!16))) (_2!1056 (tuple2!2091 lt!30012 (zeroValue!2073 newMap!16)))))))

(assert (=> d!15069 (= lt!30458 (insertStrictlySorted!52 (toList!708 lt!30000) (_1!1056 (tuple2!2091 lt!30012 (zeroValue!2073 newMap!16))) (_2!1056 (tuple2!2091 lt!30012 (zeroValue!2073 newMap!16)))))))

(assert (=> d!15069 (= (+!89 lt!30000 (tuple2!2091 lt!30012 (zeroValue!2073 newMap!16))) lt!30460)))

(declare-fun b!69357 () Bool)

(declare-fun res!37208 () Bool)

(assert (=> b!69357 (=> (not res!37208) (not e!45403))))

(assert (=> b!69357 (= res!37208 (= (getValueByKey!129 (toList!708 lt!30460) (_1!1056 (tuple2!2091 lt!30012 (zeroValue!2073 newMap!16)))) (Some!134 (_2!1056 (tuple2!2091 lt!30012 (zeroValue!2073 newMap!16))))))))

(declare-fun b!69358 () Bool)

(assert (=> b!69358 (= e!45403 (contains!711 (toList!708 lt!30460) (tuple2!2091 lt!30012 (zeroValue!2073 newMap!16))))))

(assert (= (and d!15069 res!37207) b!69357))

(assert (= (and b!69357 res!37208) b!69358))

(declare-fun m!65461 () Bool)

(assert (=> d!15069 m!65461))

(declare-fun m!65463 () Bool)

(assert (=> d!15069 m!65463))

(declare-fun m!65465 () Bool)

(assert (=> d!15069 m!65465))

(declare-fun m!65467 () Bool)

(assert (=> d!15069 m!65467))

(declare-fun m!65469 () Bool)

(assert (=> b!69357 m!65469))

(declare-fun m!65471 () Bool)

(assert (=> b!69358 m!65471))

(assert (=> b!68764 d!15069))

(declare-fun d!15071 () Bool)

(assert (=> d!15071 (= (apply!73 (+!89 lt!30014 (tuple2!2091 lt!30004 (minValue!2073 newMap!16))) lt!30001) (get!1129 (getValueByKey!129 (toList!708 (+!89 lt!30014 (tuple2!2091 lt!30004 (minValue!2073 newMap!16)))) lt!30001)))))

(declare-fun bs!2974 () Bool)

(assert (= bs!2974 d!15071))

(declare-fun m!65473 () Bool)

(assert (=> bs!2974 m!65473))

(assert (=> bs!2974 m!65473))

(declare-fun m!65475 () Bool)

(assert (=> bs!2974 m!65475))

(assert (=> b!68764 d!15071))

(declare-fun d!15073 () Bool)

(assert (=> d!15073 (= (apply!73 lt!30014 lt!30001) (get!1129 (getValueByKey!129 (toList!708 lt!30014) lt!30001)))))

(declare-fun bs!2975 () Bool)

(assert (= bs!2975 d!15073))

(declare-fun m!65477 () Bool)

(assert (=> bs!2975 m!65477))

(assert (=> bs!2975 m!65477))

(declare-fun m!65479 () Bool)

(assert (=> bs!2975 m!65479))

(assert (=> b!68764 d!15073))

(declare-fun d!15075 () Bool)

(assert (=> d!15075 (= (apply!73 (+!89 lt!30018 (tuple2!2091 lt!30015 (minValue!2073 newMap!16))) lt!30010) (apply!73 lt!30018 lt!30010))))

(declare-fun lt!30461 () Unit!1898)

(assert (=> d!15075 (= lt!30461 (choose!396 lt!30018 lt!30015 (minValue!2073 newMap!16) lt!30010))))

(declare-fun e!45404 () Bool)

(assert (=> d!15075 e!45404))

(declare-fun res!37209 () Bool)

(assert (=> d!15075 (=> (not res!37209) (not e!45404))))

(assert (=> d!15075 (= res!37209 (contains!709 lt!30018 lt!30010))))

(assert (=> d!15075 (= (addApplyDifferent!49 lt!30018 lt!30015 (minValue!2073 newMap!16) lt!30010) lt!30461)))

(declare-fun b!69359 () Bool)

(assert (=> b!69359 (= e!45404 (not (= lt!30010 lt!30015)))))

(assert (= (and d!15075 res!37209) b!69359))

(declare-fun m!65481 () Bool)

(assert (=> d!15075 m!65481))

(assert (=> d!15075 m!64255))

(assert (=> d!15075 m!64279))

(declare-fun m!65483 () Bool)

(assert (=> d!15075 m!65483))

(assert (=> d!15075 m!64255))

(assert (=> d!15075 m!64257))

(assert (=> b!68764 d!15075))

(declare-fun d!15077 () Bool)

(assert (=> d!15077 (= (apply!73 lt!30018 lt!30010) (get!1129 (getValueByKey!129 (toList!708 lt!30018) lt!30010)))))

(declare-fun bs!2976 () Bool)

(assert (= bs!2976 d!15077))

(declare-fun m!65485 () Bool)

(assert (=> bs!2976 m!65485))

(assert (=> bs!2976 m!65485))

(declare-fun m!65487 () Bool)

(assert (=> bs!2976 m!65487))

(assert (=> b!68764 d!15077))

(declare-fun d!15079 () Bool)

(assert (=> d!15079 (= (apply!73 lt!30000 lt!30009) (get!1129 (getValueByKey!129 (toList!708 lt!30000) lt!30009)))))

(declare-fun bs!2977 () Bool)

(assert (= bs!2977 d!15079))

(declare-fun m!65489 () Bool)

(assert (=> bs!2977 m!65489))

(assert (=> bs!2977 m!65489))

(declare-fun m!65491 () Bool)

(assert (=> bs!2977 m!65491))

(assert (=> b!68764 d!15079))

(declare-fun d!15081 () Bool)

(declare-fun e!45405 () Bool)

(assert (=> d!15081 e!45405))

(declare-fun res!37210 () Bool)

(assert (=> d!15081 (=> (not res!37210) (not e!45405))))

(declare-fun lt!30465 () ListLongMap!1385)

(assert (=> d!15081 (= res!37210 (contains!709 lt!30465 (_1!1056 (tuple2!2091 lt!30015 (minValue!2073 newMap!16)))))))

(declare-fun lt!30463 () List!1470)

(assert (=> d!15081 (= lt!30465 (ListLongMap!1386 lt!30463))))

(declare-fun lt!30462 () Unit!1898)

(declare-fun lt!30464 () Unit!1898)

(assert (=> d!15081 (= lt!30462 lt!30464)))

(assert (=> d!15081 (= (getValueByKey!129 lt!30463 (_1!1056 (tuple2!2091 lt!30015 (minValue!2073 newMap!16)))) (Some!134 (_2!1056 (tuple2!2091 lt!30015 (minValue!2073 newMap!16)))))))

(assert (=> d!15081 (= lt!30464 (lemmaContainsTupThenGetReturnValue!49 lt!30463 (_1!1056 (tuple2!2091 lt!30015 (minValue!2073 newMap!16))) (_2!1056 (tuple2!2091 lt!30015 (minValue!2073 newMap!16)))))))

(assert (=> d!15081 (= lt!30463 (insertStrictlySorted!52 (toList!708 lt!30018) (_1!1056 (tuple2!2091 lt!30015 (minValue!2073 newMap!16))) (_2!1056 (tuple2!2091 lt!30015 (minValue!2073 newMap!16)))))))

(assert (=> d!15081 (= (+!89 lt!30018 (tuple2!2091 lt!30015 (minValue!2073 newMap!16))) lt!30465)))

(declare-fun b!69360 () Bool)

(declare-fun res!37211 () Bool)

(assert (=> b!69360 (=> (not res!37211) (not e!45405))))

(assert (=> b!69360 (= res!37211 (= (getValueByKey!129 (toList!708 lt!30465) (_1!1056 (tuple2!2091 lt!30015 (minValue!2073 newMap!16)))) (Some!134 (_2!1056 (tuple2!2091 lt!30015 (minValue!2073 newMap!16))))))))

(declare-fun b!69361 () Bool)

(assert (=> b!69361 (= e!45405 (contains!711 (toList!708 lt!30465) (tuple2!2091 lt!30015 (minValue!2073 newMap!16))))))

(assert (= (and d!15081 res!37210) b!69360))

(assert (= (and b!69360 res!37211) b!69361))

(declare-fun m!65493 () Bool)

(assert (=> d!15081 m!65493))

(declare-fun m!65495 () Bool)

(assert (=> d!15081 m!65495))

(declare-fun m!65497 () Bool)

(assert (=> d!15081 m!65497))

(declare-fun m!65499 () Bool)

(assert (=> d!15081 m!65499))

(declare-fun m!65501 () Bool)

(assert (=> b!69360 m!65501))

(declare-fun m!65503 () Bool)

(assert (=> b!69361 m!65503))

(assert (=> b!68764 d!15081))

(declare-fun d!15083 () Bool)

(declare-fun e!45406 () Bool)

(assert (=> d!15083 e!45406))

(declare-fun res!37212 () Bool)

(assert (=> d!15083 (=> (not res!37212) (not e!45406))))

(declare-fun lt!30469 () ListLongMap!1385)

(assert (=> d!15083 (= res!37212 (contains!709 lt!30469 (_1!1056 (tuple2!2091 lt!30004 (minValue!2073 newMap!16)))))))

(declare-fun lt!30467 () List!1470)

(assert (=> d!15083 (= lt!30469 (ListLongMap!1386 lt!30467))))

(declare-fun lt!30466 () Unit!1898)

(declare-fun lt!30468 () Unit!1898)

(assert (=> d!15083 (= lt!30466 lt!30468)))

(assert (=> d!15083 (= (getValueByKey!129 lt!30467 (_1!1056 (tuple2!2091 lt!30004 (minValue!2073 newMap!16)))) (Some!134 (_2!1056 (tuple2!2091 lt!30004 (minValue!2073 newMap!16)))))))

(assert (=> d!15083 (= lt!30468 (lemmaContainsTupThenGetReturnValue!49 lt!30467 (_1!1056 (tuple2!2091 lt!30004 (minValue!2073 newMap!16))) (_2!1056 (tuple2!2091 lt!30004 (minValue!2073 newMap!16)))))))

(assert (=> d!15083 (= lt!30467 (insertStrictlySorted!52 (toList!708 lt!30014) (_1!1056 (tuple2!2091 lt!30004 (minValue!2073 newMap!16))) (_2!1056 (tuple2!2091 lt!30004 (minValue!2073 newMap!16)))))))

(assert (=> d!15083 (= (+!89 lt!30014 (tuple2!2091 lt!30004 (minValue!2073 newMap!16))) lt!30469)))

(declare-fun b!69362 () Bool)

(declare-fun res!37213 () Bool)

(assert (=> b!69362 (=> (not res!37213) (not e!45406))))

(assert (=> b!69362 (= res!37213 (= (getValueByKey!129 (toList!708 lt!30469) (_1!1056 (tuple2!2091 lt!30004 (minValue!2073 newMap!16)))) (Some!134 (_2!1056 (tuple2!2091 lt!30004 (minValue!2073 newMap!16))))))))

(declare-fun b!69363 () Bool)

(assert (=> b!69363 (= e!45406 (contains!711 (toList!708 lt!30469) (tuple2!2091 lt!30004 (minValue!2073 newMap!16))))))

(assert (= (and d!15083 res!37212) b!69362))

(assert (= (and b!69362 res!37213) b!69363))

(declare-fun m!65505 () Bool)

(assert (=> d!15083 m!65505))

(declare-fun m!65507 () Bool)

(assert (=> d!15083 m!65507))

(declare-fun m!65509 () Bool)

(assert (=> d!15083 m!65509))

(declare-fun m!65511 () Bool)

(assert (=> d!15083 m!65511))

(declare-fun m!65513 () Bool)

(assert (=> b!69362 m!65513))

(declare-fun m!65515 () Bool)

(assert (=> b!69363 m!65515))

(assert (=> b!68764 d!15083))

(declare-fun d!15085 () Bool)

(assert (=> d!15085 (= (apply!73 (+!89 lt!30000 (tuple2!2091 lt!30012 (zeroValue!2073 newMap!16))) lt!30009) (get!1129 (getValueByKey!129 (toList!708 (+!89 lt!30000 (tuple2!2091 lt!30012 (zeroValue!2073 newMap!16)))) lt!30009)))))

(declare-fun bs!2978 () Bool)

(assert (= bs!2978 d!15085))

(declare-fun m!65517 () Bool)

(assert (=> bs!2978 m!65517))

(assert (=> bs!2978 m!65517))

(declare-fun m!65519 () Bool)

(assert (=> bs!2978 m!65519))

(assert (=> b!68764 d!15085))

(declare-fun d!15087 () Bool)

(assert (=> d!15087 (contains!709 (+!89 lt!29999 (tuple2!2091 lt!30003 (zeroValue!2073 newMap!16))) lt!30002)))

(declare-fun lt!30470 () Unit!1898)

(assert (=> d!15087 (= lt!30470 (choose!397 lt!29999 lt!30003 (zeroValue!2073 newMap!16) lt!30002))))

(assert (=> d!15087 (contains!709 lt!29999 lt!30002)))

(assert (=> d!15087 (= (addStillContains!49 lt!29999 lt!30003 (zeroValue!2073 newMap!16) lt!30002) lt!30470)))

(declare-fun bs!2979 () Bool)

(assert (= bs!2979 d!15087))

(assert (=> bs!2979 m!64277))

(assert (=> bs!2979 m!64277))

(assert (=> bs!2979 m!64281))

(declare-fun m!65521 () Bool)

(assert (=> bs!2979 m!65521))

(declare-fun m!65523 () Bool)

(assert (=> bs!2979 m!65523))

(assert (=> b!68764 d!15087))

(declare-fun b!69364 () Bool)

(declare-fun e!45412 () Bool)

(declare-fun lt!30471 () ListLongMap!1385)

(assert (=> b!69364 (= e!45412 (isEmpty!314 lt!30471))))

(declare-fun b!69365 () Bool)

(declare-fun e!45410 () Bool)

(declare-fun e!45408 () Bool)

(assert (=> b!69365 (= e!45410 e!45408)))

(assert (=> b!69365 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))))))

(declare-fun res!37215 () Bool)

(assert (=> b!69365 (= res!37215 (contains!709 lt!30471 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!69365 (=> (not res!37215) (not e!45408))))

(declare-fun b!69366 () Bool)

(declare-fun e!45411 () ListLongMap!1385)

(declare-fun e!45409 () ListLongMap!1385)

(assert (=> b!69366 (= e!45411 e!45409)))

(declare-fun c!9916 () Bool)

(assert (=> b!69366 (= c!9916 (validKeyInArray!0 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!69367 () Bool)

(declare-fun lt!30476 () Unit!1898)

(declare-fun lt!30477 () Unit!1898)

(assert (=> b!69367 (= lt!30476 lt!30477)))

(declare-fun lt!30473 () (_ BitVec 64))

(declare-fun lt!30472 () V!2921)

(declare-fun lt!30475 () (_ BitVec 64))

(declare-fun lt!30474 () ListLongMap!1385)

(assert (=> b!69367 (not (contains!709 (+!89 lt!30474 (tuple2!2091 lt!30473 lt!30472)) lt!30475))))

(assert (=> b!69367 (= lt!30477 (addStillNotContains!23 lt!30474 lt!30473 lt!30472 lt!30475))))

(assert (=> b!69367 (= lt!30475 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!69367 (= lt!30472 (get!1126 (select (arr!1829 lt!29960) #b00000000000000000000000000000000) (dynLambda!321 (defaultEntry!2167 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!69367 (= lt!30473 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!5937 () ListLongMap!1385)

(assert (=> b!69367 (= lt!30474 call!5937)))

(assert (=> b!69367 (= e!45409 (+!89 call!5937 (tuple2!2091 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000) (get!1126 (select (arr!1829 lt!29960) #b00000000000000000000000000000000) (dynLambda!321 (defaultEntry!2167 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!69368 () Bool)

(assert (=> b!69368 (= e!45412 (= lt!30471 (getCurrentListMapNoExtraKeys!53 (_keys!3810 newMap!16) lt!29960 (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2167 newMap!16))))))

(declare-fun b!69369 () Bool)

(assert (=> b!69369 (= e!45411 (ListLongMap!1386 Nil!1467))))

(declare-fun b!69370 () Bool)

(declare-fun e!45407 () Bool)

(assert (=> b!69370 (= e!45407 e!45410)))

(declare-fun c!9913 () Bool)

(declare-fun e!45413 () Bool)

(assert (=> b!69370 (= c!9913 e!45413)))

(declare-fun res!37217 () Bool)

(assert (=> b!69370 (=> (not res!37217) (not e!45413))))

(assert (=> b!69370 (= res!37217 (bvslt #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))))))

(declare-fun b!69371 () Bool)

(declare-fun res!37214 () Bool)

(assert (=> b!69371 (=> (not res!37214) (not e!45407))))

(assert (=> b!69371 (= res!37214 (not (contains!709 lt!30471 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!69372 () Bool)

(assert (=> b!69372 (= e!45410 e!45412)))

(declare-fun c!9914 () Bool)

(assert (=> b!69372 (= c!9914 (bvslt #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))))))

(declare-fun d!15089 () Bool)

(assert (=> d!15089 e!45407))

(declare-fun res!37216 () Bool)

(assert (=> d!15089 (=> (not res!37216) (not e!45407))))

(assert (=> d!15089 (= res!37216 (not (contains!709 lt!30471 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!15089 (= lt!30471 e!45411)))

(declare-fun c!9915 () Bool)

(assert (=> d!15089 (= c!9915 (bvsge #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))))))

(assert (=> d!15089 (validMask!0 (mask!6111 newMap!16))))

(assert (=> d!15089 (= (getCurrentListMapNoExtraKeys!53 (_keys!3810 newMap!16) lt!29960 (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) lt!30471)))

(declare-fun bm!5934 () Bool)

(assert (=> bm!5934 (= call!5937 (getCurrentListMapNoExtraKeys!53 (_keys!3810 newMap!16) lt!29960 (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2167 newMap!16)))))

(declare-fun b!69373 () Bool)

(assert (=> b!69373 (= e!45409 call!5937)))

(declare-fun b!69374 () Bool)

(assert (=> b!69374 (= e!45413 (validKeyInArray!0 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!69374 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!69375 () Bool)

(assert (=> b!69375 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))))))

(assert (=> b!69375 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2066 lt!29960)))))

(assert (=> b!69375 (= e!45408 (= (apply!73 lt!30471 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)) (get!1126 (select (arr!1829 lt!29960) #b00000000000000000000000000000000) (dynLambda!321 (defaultEntry!2167 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!15089 c!9915) b!69369))

(assert (= (and d!15089 (not c!9915)) b!69366))

(assert (= (and b!69366 c!9916) b!69367))

(assert (= (and b!69366 (not c!9916)) b!69373))

(assert (= (or b!69367 b!69373) bm!5934))

(assert (= (and d!15089 res!37216) b!69371))

(assert (= (and b!69371 res!37214) b!69370))

(assert (= (and b!69370 res!37217) b!69374))

(assert (= (and b!69370 c!9913) b!69365))

(assert (= (and b!69370 (not c!9913)) b!69372))

(assert (= (and b!69365 res!37215) b!69375))

(assert (= (and b!69372 c!9914) b!69368))

(assert (= (and b!69372 (not c!9914)) b!69364))

(declare-fun b_lambda!3099 () Bool)

(assert (=> (not b_lambda!3099) (not b!69367)))

(assert (=> b!69367 t!4978))

(declare-fun b_and!4257 () Bool)

(assert (= b_and!4253 (and (=> t!4978 result!2615) b_and!4257)))

(assert (=> b!69367 t!4980))

(declare-fun b_and!4259 () Bool)

(assert (= b_and!4255 (and (=> t!4980 result!2617) b_and!4259)))

(declare-fun b_lambda!3101 () Bool)

(assert (=> (not b_lambda!3101) (not b!69375)))

(assert (=> b!69375 t!4978))

(declare-fun b_and!4261 () Bool)

(assert (= b_and!4257 (and (=> t!4978 result!2615) b_and!4261)))

(assert (=> b!69375 t!4980))

(declare-fun b_and!4263 () Bool)

(assert (= b_and!4259 (and (=> t!4980 result!2617) b_and!4263)))

(assert (=> b!69374 m!64177))

(assert (=> b!69374 m!64177))

(assert (=> b!69374 m!64187))

(assert (=> b!69366 m!64177))

(assert (=> b!69366 m!64177))

(assert (=> b!69366 m!64187))

(declare-fun m!65525 () Bool)

(assert (=> bm!5934 m!65525))

(assert (=> b!69368 m!65525))

(assert (=> b!69365 m!64177))

(assert (=> b!69365 m!64177))

(declare-fun m!65527 () Bool)

(assert (=> b!69365 m!65527))

(assert (=> b!69375 m!64239))

(assert (=> b!69375 m!64243))

(assert (=> b!69375 m!64245))

(assert (=> b!69375 m!64177))

(declare-fun m!65529 () Bool)

(assert (=> b!69375 m!65529))

(assert (=> b!69375 m!64243))

(assert (=> b!69375 m!64239))

(assert (=> b!69375 m!64177))

(declare-fun m!65531 () Bool)

(assert (=> b!69364 m!65531))

(declare-fun m!65533 () Bool)

(assert (=> b!69367 m!65533))

(assert (=> b!69367 m!64239))

(assert (=> b!69367 m!64243))

(assert (=> b!69367 m!64245))

(assert (=> b!69367 m!64243))

(declare-fun m!65535 () Bool)

(assert (=> b!69367 m!65535))

(declare-fun m!65537 () Bool)

(assert (=> b!69367 m!65537))

(assert (=> b!69367 m!64239))

(assert (=> b!69367 m!65535))

(declare-fun m!65539 () Bool)

(assert (=> b!69367 m!65539))

(assert (=> b!69367 m!64177))

(declare-fun m!65541 () Bool)

(assert (=> d!15089 m!65541))

(assert (=> d!15089 m!64193))

(declare-fun m!65543 () Bool)

(assert (=> b!69371 m!65543))

(assert (=> b!68764 d!15089))

(declare-fun d!15091 () Bool)

(assert (=> d!15091 (= (apply!73 (+!89 lt!30000 (tuple2!2091 lt!30012 (zeroValue!2073 newMap!16))) lt!30009) (apply!73 lt!30000 lt!30009))))

(declare-fun lt!30478 () Unit!1898)

(assert (=> d!15091 (= lt!30478 (choose!396 lt!30000 lt!30012 (zeroValue!2073 newMap!16) lt!30009))))

(declare-fun e!45414 () Bool)

(assert (=> d!15091 e!45414))

(declare-fun res!37218 () Bool)

(assert (=> d!15091 (=> (not res!37218) (not e!45414))))

(assert (=> d!15091 (= res!37218 (contains!709 lt!30000 lt!30009))))

(assert (=> d!15091 (= (addApplyDifferent!49 lt!30000 lt!30012 (zeroValue!2073 newMap!16) lt!30009) lt!30478)))

(declare-fun b!69376 () Bool)

(assert (=> b!69376 (= e!45414 (not (= lt!30009 lt!30012)))))

(assert (= (and d!15091 res!37218) b!69376))

(declare-fun m!65545 () Bool)

(assert (=> d!15091 m!65545))

(assert (=> d!15091 m!64253))

(assert (=> d!15091 m!64275))

(declare-fun m!65547 () Bool)

(assert (=> d!15091 m!65547))

(assert (=> d!15091 m!64253))

(assert (=> d!15091 m!64259))

(assert (=> b!68764 d!15091))

(declare-fun d!15093 () Bool)

(assert (=> d!15093 (= (apply!73 (+!89 lt!30014 (tuple2!2091 lt!30004 (minValue!2073 newMap!16))) lt!30001) (apply!73 lt!30014 lt!30001))))

(declare-fun lt!30479 () Unit!1898)

(assert (=> d!15093 (= lt!30479 (choose!396 lt!30014 lt!30004 (minValue!2073 newMap!16) lt!30001))))

(declare-fun e!45415 () Bool)

(assert (=> d!15093 e!45415))

(declare-fun res!37219 () Bool)

(assert (=> d!15093 (=> (not res!37219) (not e!45415))))

(assert (=> d!15093 (= res!37219 (contains!709 lt!30014 lt!30001))))

(assert (=> d!15093 (= (addApplyDifferent!49 lt!30014 lt!30004 (minValue!2073 newMap!16) lt!30001) lt!30479)))

(declare-fun b!69377 () Bool)

(assert (=> b!69377 (= e!45415 (not (= lt!30001 lt!30004)))))

(assert (= (and d!15093 res!37219) b!69377))

(declare-fun m!65549 () Bool)

(assert (=> d!15093 m!65549))

(assert (=> d!15093 m!64265))

(assert (=> d!15093 m!64273))

(declare-fun m!65551 () Bool)

(assert (=> d!15093 m!65551))

(assert (=> d!15093 m!64265))

(assert (=> d!15093 m!64267))

(assert (=> b!68764 d!15093))

(declare-fun d!15095 () Bool)

(declare-fun e!45416 () Bool)

(assert (=> d!15095 e!45416))

(declare-fun res!37220 () Bool)

(assert (=> d!15095 (=> (not res!37220) (not e!45416))))

(declare-fun lt!30483 () ListLongMap!1385)

(assert (=> d!15095 (= res!37220 (contains!709 lt!30483 (_1!1056 (tuple2!2091 lt!30003 (zeroValue!2073 newMap!16)))))))

(declare-fun lt!30481 () List!1470)

(assert (=> d!15095 (= lt!30483 (ListLongMap!1386 lt!30481))))

(declare-fun lt!30480 () Unit!1898)

(declare-fun lt!30482 () Unit!1898)

(assert (=> d!15095 (= lt!30480 lt!30482)))

(assert (=> d!15095 (= (getValueByKey!129 lt!30481 (_1!1056 (tuple2!2091 lt!30003 (zeroValue!2073 newMap!16)))) (Some!134 (_2!1056 (tuple2!2091 lt!30003 (zeroValue!2073 newMap!16)))))))

(assert (=> d!15095 (= lt!30482 (lemmaContainsTupThenGetReturnValue!49 lt!30481 (_1!1056 (tuple2!2091 lt!30003 (zeroValue!2073 newMap!16))) (_2!1056 (tuple2!2091 lt!30003 (zeroValue!2073 newMap!16)))))))

(assert (=> d!15095 (= lt!30481 (insertStrictlySorted!52 (toList!708 lt!29999) (_1!1056 (tuple2!2091 lt!30003 (zeroValue!2073 newMap!16))) (_2!1056 (tuple2!2091 lt!30003 (zeroValue!2073 newMap!16)))))))

(assert (=> d!15095 (= (+!89 lt!29999 (tuple2!2091 lt!30003 (zeroValue!2073 newMap!16))) lt!30483)))

(declare-fun b!69378 () Bool)

(declare-fun res!37221 () Bool)

(assert (=> b!69378 (=> (not res!37221) (not e!45416))))

(assert (=> b!69378 (= res!37221 (= (getValueByKey!129 (toList!708 lt!30483) (_1!1056 (tuple2!2091 lt!30003 (zeroValue!2073 newMap!16)))) (Some!134 (_2!1056 (tuple2!2091 lt!30003 (zeroValue!2073 newMap!16))))))))

(declare-fun b!69379 () Bool)

(assert (=> b!69379 (= e!45416 (contains!711 (toList!708 lt!30483) (tuple2!2091 lt!30003 (zeroValue!2073 newMap!16))))))

(assert (= (and d!15095 res!37220) b!69378))

(assert (= (and b!69378 res!37221) b!69379))

(declare-fun m!65553 () Bool)

(assert (=> d!15095 m!65553))

(declare-fun m!65555 () Bool)

(assert (=> d!15095 m!65555))

(declare-fun m!65557 () Bool)

(assert (=> d!15095 m!65557))

(declare-fun m!65559 () Bool)

(assert (=> d!15095 m!65559))

(declare-fun m!65561 () Bool)

(assert (=> b!69378 m!65561))

(declare-fun m!65563 () Bool)

(assert (=> b!69379 m!65563))

(assert (=> b!68764 d!15095))

(declare-fun d!15097 () Bool)

(assert (=> d!15097 (= (get!1127 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2484 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!68649 d!15097))

(declare-fun b!69382 () Bool)

(declare-fun e!45418 () Option!135)

(assert (=> b!69382 (= e!45418 (getValueByKey!129 (t!4964 (toList!708 lt!30115)) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!69380 () Bool)

(declare-fun e!45417 () Option!135)

(assert (=> b!69380 (= e!45417 (Some!134 (_2!1056 (h!2051 (toList!708 lt!30115)))))))

(declare-fun b!69383 () Bool)

(assert (=> b!69383 (= e!45418 None!133)))

(declare-fun d!15099 () Bool)

(declare-fun c!9917 () Bool)

(assert (=> d!15099 (= c!9917 (and ((_ is Cons!1466) (toList!708 lt!30115)) (= (_1!1056 (h!2051 (toList!708 lt!30115))) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!15099 (= (getValueByKey!129 (toList!708 lt!30115) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!45417)))

(declare-fun b!69381 () Bool)

(assert (=> b!69381 (= e!45417 e!45418)))

(declare-fun c!9918 () Bool)

(assert (=> b!69381 (= c!9918 (and ((_ is Cons!1466) (toList!708 lt!30115)) (not (= (_1!1056 (h!2051 (toList!708 lt!30115))) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!15099 c!9917) b!69380))

(assert (= (and d!15099 (not c!9917)) b!69381))

(assert (= (and b!69381 c!9918) b!69382))

(assert (= (and b!69381 (not c!9918)) b!69383))

(declare-fun m!65565 () Bool)

(assert (=> b!69382 m!65565))

(assert (=> b!68880 d!15099))

(declare-fun b!69386 () Bool)

(declare-fun e!45420 () Option!135)

(assert (=> b!69386 (= e!45420 (getValueByKey!129 (t!4964 (t!4964 lt!29851)) (_1!1056 lt!29680)))))

(declare-fun b!69384 () Bool)

(declare-fun e!45419 () Option!135)

(assert (=> b!69384 (= e!45419 (Some!134 (_2!1056 (h!2051 (t!4964 lt!29851)))))))

(declare-fun b!69387 () Bool)

(assert (=> b!69387 (= e!45420 None!133)))

(declare-fun d!15101 () Bool)

(declare-fun c!9919 () Bool)

(assert (=> d!15101 (= c!9919 (and ((_ is Cons!1466) (t!4964 lt!29851)) (= (_1!1056 (h!2051 (t!4964 lt!29851))) (_1!1056 lt!29680))))))

(assert (=> d!15101 (= (getValueByKey!129 (t!4964 lt!29851) (_1!1056 lt!29680)) e!45419)))

(declare-fun b!69385 () Bool)

(assert (=> b!69385 (= e!45419 e!45420)))

(declare-fun c!9920 () Bool)

(assert (=> b!69385 (= c!9920 (and ((_ is Cons!1466) (t!4964 lt!29851)) (not (= (_1!1056 (h!2051 (t!4964 lt!29851))) (_1!1056 lt!29680)))))))

(assert (= (and d!15101 c!9919) b!69384))

(assert (= (and d!15101 (not c!9919)) b!69385))

(assert (= (and b!69385 c!9920) b!69386))

(assert (= (and b!69385 (not c!9920)) b!69387))

(declare-fun m!65567 () Bool)

(assert (=> b!69386 m!65567))

(assert (=> b!69127 d!15101))

(declare-fun d!15103 () Bool)

(declare-fun lt!30484 () (_ BitVec 32))

(assert (=> d!15103 (and (bvsge lt!30484 #b00000000000000000000000000000000) (bvsle lt!30484 (bvsub (size!2065 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun e!45421 () (_ BitVec 32))

(assert (=> d!15103 (= lt!30484 e!45421)))

(declare-fun c!9922 () Bool)

(assert (=> d!15103 (= c!9922 (bvsge #b00000000000000000000000000000000 (size!2065 (_keys!3810 (v!2485 (underlying!247 thiss!992))))))))

(assert (=> d!15103 (and (bvsle #b00000000000000000000000000000000 (size!2065 (_keys!3810 (v!2485 (underlying!247 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2065 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (size!2065 (_keys!3810 (v!2485 (underlying!247 thiss!992))))))))

(assert (=> d!15103 (= (arrayCountValidKeys!0 (_keys!3810 (v!2485 (underlying!247 thiss!992))) #b00000000000000000000000000000000 (size!2065 (_keys!3810 (v!2485 (underlying!247 thiss!992))))) lt!30484)))

(declare-fun bm!5935 () Bool)

(declare-fun call!5938 () (_ BitVec 32))

(assert (=> bm!5935 (= call!5938 (arrayCountValidKeys!0 (_keys!3810 (v!2485 (underlying!247 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2065 (_keys!3810 (v!2485 (underlying!247 thiss!992))))))))

(declare-fun b!69388 () Bool)

(declare-fun e!45422 () (_ BitVec 32))

(assert (=> b!69388 (= e!45422 (bvadd #b00000000000000000000000000000001 call!5938))))

(declare-fun b!69389 () Bool)

(assert (=> b!69389 (= e!45421 e!45422)))

(declare-fun c!9921 () Bool)

(assert (=> b!69389 (= c!9921 (validKeyInArray!0 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!69390 () Bool)

(assert (=> b!69390 (= e!45422 call!5938)))

(declare-fun b!69391 () Bool)

(assert (=> b!69391 (= e!45421 #b00000000000000000000000000000000)))

(assert (= (and d!15103 c!9922) b!69391))

(assert (= (and d!15103 (not c!9922)) b!69389))

(assert (= (and b!69389 c!9921) b!69388))

(assert (= (and b!69389 (not c!9921)) b!69390))

(assert (= (or b!69388 b!69390) bm!5935))

(declare-fun m!65569 () Bool)

(assert (=> bm!5935 m!65569))

(assert (=> b!69389 m!65269))

(assert (=> b!69389 m!65269))

(assert (=> b!69389 m!65279))

(assert (=> b!69072 d!15103))

(declare-fun d!15105 () Bool)

(assert (=> d!15105 (isDefined!83 (getValueByKey!129 (toList!708 lt!29853) (_1!1056 lt!29680)))))

(declare-fun lt!30485 () Unit!1898)

(assert (=> d!15105 (= lt!30485 (choose!399 (toList!708 lt!29853) (_1!1056 lt!29680)))))

(declare-fun e!45423 () Bool)

(assert (=> d!15105 e!45423))

(declare-fun res!37222 () Bool)

(assert (=> d!15105 (=> (not res!37222) (not e!45423))))

(assert (=> d!15105 (= res!37222 (isStrictlySorted!285 (toList!708 lt!29853)))))

(assert (=> d!15105 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 lt!29853) (_1!1056 lt!29680)) lt!30485)))

(declare-fun b!69392 () Bool)

(assert (=> b!69392 (= e!45423 (containsKey!133 (toList!708 lt!29853) (_1!1056 lt!29680)))))

(assert (= (and d!15105 res!37222) b!69392))

(assert (=> d!15105 m!64033))

(assert (=> d!15105 m!64033))

(assert (=> d!15105 m!65007))

(declare-fun m!65571 () Bool)

(assert (=> d!15105 m!65571))

(declare-fun m!65573 () Bool)

(assert (=> d!15105 m!65573))

(assert (=> b!69392 m!65003))

(assert (=> b!69122 d!15105))

(declare-fun d!15107 () Bool)

(assert (=> d!15107 (= (isDefined!83 (getValueByKey!129 (toList!708 lt!29853) (_1!1056 lt!29680))) (not (isEmpty!316 (getValueByKey!129 (toList!708 lt!29853) (_1!1056 lt!29680)))))))

(declare-fun bs!2980 () Bool)

(assert (= bs!2980 d!15107))

(assert (=> bs!2980 m!64033))

(declare-fun m!65575 () Bool)

(assert (=> bs!2980 m!65575))

(assert (=> b!69122 d!15107))

(assert (=> b!69122 d!14789))

(declare-fun d!15109 () Bool)

(assert (=> d!15109 (= (apply!73 lt!30027 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)) (get!1129 (getValueByKey!129 (toList!708 lt!30027) (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!2981 () Bool)

(assert (= bs!2981 d!15109))

(assert (=> bs!2981 m!64177))

(declare-fun m!65577 () Bool)

(assert (=> bs!2981 m!65577))

(assert (=> bs!2981 m!65577))

(declare-fun m!65579 () Bool)

(assert (=> bs!2981 m!65579))

(assert (=> b!68779 d!15109))

(declare-fun d!15111 () Bool)

(declare-fun c!9923 () Bool)

(assert (=> d!15111 (= c!9923 ((_ is ValueCellFull!884) (select (arr!1829 (_values!2150 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!45424 () V!2921)

(assert (=> d!15111 (= (get!1126 (select (arr!1829 (_values!2150 newMap!16)) #b00000000000000000000000000000000) (dynLambda!321 (defaultEntry!2167 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!45424)))

(declare-fun b!69393 () Bool)

(assert (=> b!69393 (= e!45424 (get!1127 (select (arr!1829 (_values!2150 newMap!16)) #b00000000000000000000000000000000) (dynLambda!321 (defaultEntry!2167 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!69394 () Bool)

(assert (=> b!69394 (= e!45424 (get!1128 (select (arr!1829 (_values!2150 newMap!16)) #b00000000000000000000000000000000) (dynLambda!321 (defaultEntry!2167 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15111 c!9923) b!69393))

(assert (= (and d!15111 (not c!9923)) b!69394))

(assert (=> b!69393 m!64293))

(assert (=> b!69393 m!64243))

(declare-fun m!65581 () Bool)

(assert (=> b!69393 m!65581))

(assert (=> b!69394 m!64293))

(assert (=> b!69394 m!64243))

(declare-fun m!65583 () Bool)

(assert (=> b!69394 m!65583))

(assert (=> b!68779 d!15111))

(declare-fun d!15113 () Bool)

(declare-fun lt!30486 () Bool)

(assert (=> d!15113 (= lt!30486 (select (content!73 lt!29859) (tuple2!2091 (_1!1056 lt!29675) (_2!1056 lt!29675))))))

(declare-fun e!45426 () Bool)

(assert (=> d!15113 (= lt!30486 e!45426)))

(declare-fun res!37224 () Bool)

(assert (=> d!15113 (=> (not res!37224) (not e!45426))))

(assert (=> d!15113 (= res!37224 ((_ is Cons!1466) lt!29859))))

(assert (=> d!15113 (= (contains!711 lt!29859 (tuple2!2091 (_1!1056 lt!29675) (_2!1056 lt!29675))) lt!30486)))

(declare-fun b!69395 () Bool)

(declare-fun e!45425 () Bool)

(assert (=> b!69395 (= e!45426 e!45425)))

(declare-fun res!37223 () Bool)

(assert (=> b!69395 (=> res!37223 e!45425)))

(assert (=> b!69395 (= res!37223 (= (h!2051 lt!29859) (tuple2!2091 (_1!1056 lt!29675) (_2!1056 lt!29675))))))

(declare-fun b!69396 () Bool)

(assert (=> b!69396 (= e!45425 (contains!711 (t!4964 lt!29859) (tuple2!2091 (_1!1056 lt!29675) (_2!1056 lt!29675))))))

(assert (= (and d!15113 res!37224) b!69395))

(assert (= (and b!69395 (not res!37223)) b!69396))

(declare-fun m!65585 () Bool)

(assert (=> d!15113 m!65585))

(declare-fun m!65587 () Bool)

(assert (=> d!15113 m!65587))

(declare-fun m!65589 () Bool)

(assert (=> b!69396 m!65589))

(assert (=> b!68956 d!15113))

(declare-fun d!15115 () Bool)

(declare-fun res!37225 () Bool)

(declare-fun e!45427 () Bool)

(assert (=> d!15115 (=> res!37225 e!45427)))

(assert (=> d!15115 (= res!37225 (and ((_ is Cons!1466) (toList!708 (+!89 lt!29799 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))) (= (_1!1056 (h!2051 (toList!708 (+!89 lt!29799 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))) lt!29802)))))

(assert (=> d!15115 (= (containsKey!133 (toList!708 (+!89 lt!29799 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))) lt!29802) e!45427)))

(declare-fun b!69397 () Bool)

(declare-fun e!45428 () Bool)

(assert (=> b!69397 (= e!45427 e!45428)))

(declare-fun res!37226 () Bool)

(assert (=> b!69397 (=> (not res!37226) (not e!45428))))

(assert (=> b!69397 (= res!37226 (and (or (not ((_ is Cons!1466) (toList!708 (+!89 lt!29799 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))) (bvsle (_1!1056 (h!2051 (toList!708 (+!89 lt!29799 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))) lt!29802)) ((_ is Cons!1466) (toList!708 (+!89 lt!29799 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))) (bvslt (_1!1056 (h!2051 (toList!708 (+!89 lt!29799 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))) lt!29802)))))

(declare-fun b!69398 () Bool)

(assert (=> b!69398 (= e!45428 (containsKey!133 (t!4964 (toList!708 (+!89 lt!29799 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))) lt!29802))))

(assert (= (and d!15115 (not res!37225)) b!69397))

(assert (= (and b!69397 res!37226) b!69398))

(declare-fun m!65591 () Bool)

(assert (=> b!69398 m!65591))

(assert (=> d!14865 d!15115))

(declare-fun d!15117 () Bool)

(assert (=> d!15117 (= (isDefined!83 (getValueByKey!129 (toList!708 lt!29868) (_1!1056 lt!29680))) (not (isEmpty!316 (getValueByKey!129 (toList!708 lt!29868) (_1!1056 lt!29680)))))))

(declare-fun bs!2982 () Bool)

(assert (= bs!2982 d!15117))

(assert (=> bs!2982 m!64079))

(declare-fun m!65593 () Bool)

(assert (=> bs!2982 m!65593))

(assert (=> b!68689 d!15117))

(assert (=> b!68689 d!14767))

(declare-fun d!15119 () Bool)

(declare-fun res!37227 () Bool)

(declare-fun e!45429 () Bool)

(assert (=> d!15119 (=> res!37227 e!45429)))

(assert (=> d!15119 (= res!37227 (and ((_ is Cons!1466) (toList!708 lt!29835)) (= (_1!1056 (h!2051 (toList!708 lt!29835))) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!15119 (= (containsKey!133 (toList!708 lt!29835) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!45429)))

(declare-fun b!69399 () Bool)

(declare-fun e!45430 () Bool)

(assert (=> b!69399 (= e!45429 e!45430)))

(declare-fun res!37228 () Bool)

(assert (=> b!69399 (=> (not res!37228) (not e!45430))))

(assert (=> b!69399 (= res!37228 (and (or (not ((_ is Cons!1466) (toList!708 lt!29835))) (bvsle (_1!1056 (h!2051 (toList!708 lt!29835))) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1466) (toList!708 lt!29835)) (bvslt (_1!1056 (h!2051 (toList!708 lt!29835))) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!69400 () Bool)

(assert (=> b!69400 (= e!45430 (containsKey!133 (t!4964 (toList!708 lt!29835)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!15119 (not res!37227)) b!69399))

(assert (= (and b!69399 res!37228) b!69400))

(assert (=> b!69400 m!63951))

(declare-fun m!65595 () Bool)

(assert (=> b!69400 m!65595))

(assert (=> d!14753 d!15119))

(assert (=> d!14871 d!14883))

(declare-fun b!69401 () Bool)

(declare-fun e!45441 () ListLongMap!1385)

(declare-fun call!5939 () ListLongMap!1385)

(assert (=> b!69401 (= e!45441 call!5939)))

(declare-fun b!69402 () Bool)

(declare-fun e!45438 () Bool)

(declare-fun e!45433 () Bool)

(assert (=> b!69402 (= e!45438 e!45433)))

(declare-fun res!37236 () Bool)

(declare-fun call!5940 () Bool)

(assert (=> b!69402 (= res!37236 call!5940)))

(assert (=> b!69402 (=> (not res!37236) (not e!45433))))

(declare-fun b!69404 () Bool)

(declare-fun e!45439 () Bool)

(declare-fun call!5945 () Bool)

(assert (=> b!69404 (= e!45439 (not call!5945))))

(declare-fun bm!5936 () Bool)

(declare-fun lt!30493 () ListLongMap!1385)

(assert (=> bm!5936 (= call!5940 (contains!709 lt!30493 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69405 () Bool)

(declare-fun c!9925 () Bool)

(assert (=> b!69405 (= c!9925 (and (not (= (bvand lt!29963 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!29963 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!45437 () ListLongMap!1385)

(assert (=> b!69405 (= e!45437 e!45441)))

(declare-fun call!5944 () ListLongMap!1385)

(declare-fun call!5943 () ListLongMap!1385)

(declare-fun c!9927 () Bool)

(declare-fun bm!5937 () Bool)

(declare-fun c!9924 () Bool)

(declare-fun call!5941 () ListLongMap!1385)

(assert (=> bm!5937 (= call!5943 (+!89 (ite c!9927 call!5944 (ite c!9924 call!5941 call!5939)) (ite (or c!9927 c!9924) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))))))

(declare-fun b!69406 () Bool)

(declare-fun e!45435 () Bool)

(assert (=> b!69406 (= e!45435 (validKeyInArray!0 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!69407 () Bool)

(declare-fun res!37234 () Bool)

(declare-fun e!45432 () Bool)

(assert (=> b!69407 (=> (not res!37234) (not e!45432))))

(declare-fun e!45442 () Bool)

(assert (=> b!69407 (= res!37234 e!45442)))

(declare-fun res!37230 () Bool)

(assert (=> b!69407 (=> res!37230 e!45442)))

(assert (=> b!69407 (= res!37230 (not e!45435))))

(declare-fun res!37231 () Bool)

(assert (=> b!69407 (=> (not res!37231) (not e!45435))))

(assert (=> b!69407 (= res!37231 (bvslt #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))))))

(declare-fun b!69408 () Bool)

(declare-fun e!45436 () ListLongMap!1385)

(assert (=> b!69408 (= e!45436 e!45437)))

(assert (=> b!69408 (= c!9924 (and (not (= (bvand lt!29963 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!29963 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!69409 () Bool)

(declare-fun e!45434 () Bool)

(assert (=> b!69409 (= e!45439 e!45434)))

(declare-fun res!37232 () Bool)

(assert (=> b!69409 (= res!37232 call!5945)))

(assert (=> b!69409 (=> (not res!37232) (not e!45434))))

(declare-fun bm!5938 () Bool)

(assert (=> bm!5938 (= call!5941 call!5944)))

(declare-fun b!69410 () Bool)

(declare-fun call!5942 () ListLongMap!1385)

(assert (=> b!69410 (= e!45437 call!5942)))

(declare-fun bm!5939 () Bool)

(assert (=> bm!5939 (= call!5942 call!5943)))

(declare-fun b!69411 () Bool)

(assert (=> b!69411 (= e!45441 call!5942)))

(declare-fun b!69412 () Bool)

(declare-fun res!37235 () Bool)

(assert (=> b!69412 (=> (not res!37235) (not e!45432))))

(assert (=> b!69412 (= res!37235 e!45439)))

(declare-fun c!9928 () Bool)

(assert (=> b!69412 (= c!9928 (not (= (bvand lt!29963 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!69413 () Bool)

(assert (=> b!69413 (= e!45434 (= (apply!73 lt!30493 #b0000000000000000000000000000000000000000000000000000000000000000) lt!29673))))

(declare-fun bm!5940 () Bool)

(assert (=> bm!5940 (= call!5944 (getCurrentListMapNoExtraKeys!53 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) lt!29963 lt!29673 (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun b!69414 () Bool)

(assert (=> b!69414 (= e!45433 (= (apply!73 lt!30493 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2073 newMap!16)))))

(declare-fun b!69415 () Bool)

(declare-fun e!45431 () Bool)

(assert (=> b!69415 (= e!45431 (= (apply!73 lt!30493 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)) (get!1126 (select (arr!1829 (_values!2150 newMap!16)) #b00000000000000000000000000000000) (dynLambda!321 (defaultEntry!2167 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!69415 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2066 (_values!2150 newMap!16))))))

(assert (=> b!69415 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))))))

(declare-fun bm!5941 () Bool)

(assert (=> bm!5941 (= call!5939 call!5941)))

(declare-fun d!15121 () Bool)

(assert (=> d!15121 e!45432))

(declare-fun res!37237 () Bool)

(assert (=> d!15121 (=> (not res!37237) (not e!45432))))

(assert (=> d!15121 (= res!37237 (or (bvsge #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))))))))

(declare-fun lt!30495 () ListLongMap!1385)

(assert (=> d!15121 (= lt!30493 lt!30495)))

(declare-fun lt!30505 () Unit!1898)

(declare-fun e!45443 () Unit!1898)

(assert (=> d!15121 (= lt!30505 e!45443)))

(declare-fun c!9929 () Bool)

(declare-fun e!45440 () Bool)

(assert (=> d!15121 (= c!9929 e!45440)))

(declare-fun res!37229 () Bool)

(assert (=> d!15121 (=> (not res!37229) (not e!45440))))

(assert (=> d!15121 (= res!37229 (bvslt #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))))))

(assert (=> d!15121 (= lt!30495 e!45436)))

(assert (=> d!15121 (= c!9927 (and (not (= (bvand lt!29963 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!29963 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!15121 (validMask!0 (mask!6111 newMap!16))))

(assert (=> d!15121 (= (getCurrentListMap!403 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) lt!29963 lt!29673 (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) lt!30493)))

(declare-fun b!69403 () Bool)

(assert (=> b!69403 (= e!45440 (validKeyInArray!0 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!69416 () Bool)

(assert (=> b!69416 (= e!45432 e!45438)))

(declare-fun c!9926 () Bool)

(assert (=> b!69416 (= c!9926 (not (= (bvand lt!29963 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!69417 () Bool)

(assert (=> b!69417 (= e!45442 e!45431)))

(declare-fun res!37233 () Bool)

(assert (=> b!69417 (=> (not res!37233) (not e!45431))))

(assert (=> b!69417 (= res!37233 (contains!709 lt!30493 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!69417 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))))))

(declare-fun b!69418 () Bool)

(assert (=> b!69418 (= e!45436 (+!89 call!5943 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))))))

(declare-fun b!69419 () Bool)

(assert (=> b!69419 (= e!45438 (not call!5940))))

(declare-fun bm!5942 () Bool)

(assert (=> bm!5942 (= call!5945 (contains!709 lt!30493 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69420 () Bool)

(declare-fun Unit!1941 () Unit!1898)

(assert (=> b!69420 (= e!45443 Unit!1941)))

(declare-fun b!69421 () Bool)

(declare-fun lt!30504 () Unit!1898)

(assert (=> b!69421 (= e!45443 lt!30504)))

(declare-fun lt!30487 () ListLongMap!1385)

(assert (=> b!69421 (= lt!30487 (getCurrentListMapNoExtraKeys!53 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) lt!29963 lt!29673 (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30491 () (_ BitVec 64))

(assert (=> b!69421 (= lt!30491 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30490 () (_ BitVec 64))

(assert (=> b!69421 (= lt!30490 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30507 () Unit!1898)

(assert (=> b!69421 (= lt!30507 (addStillContains!49 lt!30487 lt!30491 lt!29673 lt!30490))))

(assert (=> b!69421 (contains!709 (+!89 lt!30487 (tuple2!2091 lt!30491 lt!29673)) lt!30490)))

(declare-fun lt!30501 () Unit!1898)

(assert (=> b!69421 (= lt!30501 lt!30507)))

(declare-fun lt!30502 () ListLongMap!1385)

(assert (=> b!69421 (= lt!30502 (getCurrentListMapNoExtraKeys!53 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) lt!29963 lt!29673 (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30492 () (_ BitVec 64))

(assert (=> b!69421 (= lt!30492 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30489 () (_ BitVec 64))

(assert (=> b!69421 (= lt!30489 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30496 () Unit!1898)

(assert (=> b!69421 (= lt!30496 (addApplyDifferent!49 lt!30502 lt!30492 (minValue!2073 newMap!16) lt!30489))))

(assert (=> b!69421 (= (apply!73 (+!89 lt!30502 (tuple2!2091 lt!30492 (minValue!2073 newMap!16))) lt!30489) (apply!73 lt!30502 lt!30489))))

(declare-fun lt!30508 () Unit!1898)

(assert (=> b!69421 (= lt!30508 lt!30496)))

(declare-fun lt!30488 () ListLongMap!1385)

(assert (=> b!69421 (= lt!30488 (getCurrentListMapNoExtraKeys!53 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) lt!29963 lt!29673 (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30500 () (_ BitVec 64))

(assert (=> b!69421 (= lt!30500 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30497 () (_ BitVec 64))

(assert (=> b!69421 (= lt!30497 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30499 () Unit!1898)

(assert (=> b!69421 (= lt!30499 (addApplyDifferent!49 lt!30488 lt!30500 lt!29673 lt!30497))))

(assert (=> b!69421 (= (apply!73 (+!89 lt!30488 (tuple2!2091 lt!30500 lt!29673)) lt!30497) (apply!73 lt!30488 lt!30497))))

(declare-fun lt!30494 () Unit!1898)

(assert (=> b!69421 (= lt!30494 lt!30499)))

(declare-fun lt!30506 () ListLongMap!1385)

(assert (=> b!69421 (= lt!30506 (getCurrentListMapNoExtraKeys!53 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) lt!29963 lt!29673 (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30503 () (_ BitVec 64))

(assert (=> b!69421 (= lt!30503 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30498 () (_ BitVec 64))

(assert (=> b!69421 (= lt!30498 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!69421 (= lt!30504 (addApplyDifferent!49 lt!30506 lt!30503 (minValue!2073 newMap!16) lt!30498))))

(assert (=> b!69421 (= (apply!73 (+!89 lt!30506 (tuple2!2091 lt!30503 (minValue!2073 newMap!16))) lt!30498) (apply!73 lt!30506 lt!30498))))

(assert (= (and d!15121 c!9927) b!69418))

(assert (= (and d!15121 (not c!9927)) b!69408))

(assert (= (and b!69408 c!9924) b!69410))

(assert (= (and b!69408 (not c!9924)) b!69405))

(assert (= (and b!69405 c!9925) b!69411))

(assert (= (and b!69405 (not c!9925)) b!69401))

(assert (= (or b!69411 b!69401) bm!5941))

(assert (= (or b!69410 bm!5941) bm!5938))

(assert (= (or b!69410 b!69411) bm!5939))

(assert (= (or b!69418 bm!5938) bm!5940))

(assert (= (or b!69418 bm!5939) bm!5937))

(assert (= (and d!15121 res!37229) b!69403))

(assert (= (and d!15121 c!9929) b!69421))

(assert (= (and d!15121 (not c!9929)) b!69420))

(assert (= (and d!15121 res!37237) b!69407))

(assert (= (and b!69407 res!37231) b!69406))

(assert (= (and b!69407 (not res!37230)) b!69417))

(assert (= (and b!69417 res!37233) b!69415))

(assert (= (and b!69407 res!37234) b!69412))

(assert (= (and b!69412 c!9928) b!69409))

(assert (= (and b!69412 (not c!9928)) b!69404))

(assert (= (and b!69409 res!37232) b!69413))

(assert (= (or b!69409 b!69404) bm!5942))

(assert (= (and b!69412 res!37235) b!69416))

(assert (= (and b!69416 c!9926) b!69402))

(assert (= (and b!69416 (not c!9926)) b!69419))

(assert (= (and b!69402 res!37236) b!69414))

(assert (= (or b!69402 b!69419) bm!5936))

(declare-fun b_lambda!3103 () Bool)

(assert (=> (not b_lambda!3103) (not b!69415)))

(assert (=> b!69415 t!4978))

(declare-fun b_and!4265 () Bool)

(assert (= b_and!4261 (and (=> t!4978 result!2615) b_and!4265)))

(assert (=> b!69415 t!4980))

(declare-fun b_and!4267 () Bool)

(assert (= b_and!4263 (and (=> t!4980 result!2617) b_and!4267)))

(declare-fun m!65597 () Bool)

(assert (=> b!69418 m!65597))

(declare-fun m!65599 () Bool)

(assert (=> bm!5937 m!65599))

(declare-fun m!65601 () Bool)

(assert (=> bm!5940 m!65601))

(assert (=> b!69415 m!64177))

(assert (=> b!69415 m!64293))

(assert (=> b!69415 m!64177))

(declare-fun m!65603 () Bool)

(assert (=> b!69415 m!65603))

(assert (=> b!69415 m!64243))

(assert (=> b!69415 m!64293))

(assert (=> b!69415 m!64243))

(assert (=> b!69415 m!64297))

(assert (=> b!69403 m!64177))

(assert (=> b!69403 m!64177))

(assert (=> b!69403 m!64187))

(assert (=> b!69406 m!64177))

(assert (=> b!69406 m!64177))

(assert (=> b!69406 m!64187))

(declare-fun m!65605 () Bool)

(assert (=> bm!5936 m!65605))

(declare-fun m!65607 () Bool)

(assert (=> b!69414 m!65607))

(declare-fun m!65609 () Bool)

(assert (=> bm!5942 m!65609))

(declare-fun m!65611 () Bool)

(assert (=> b!69421 m!65611))

(declare-fun m!65613 () Bool)

(assert (=> b!69421 m!65613))

(declare-fun m!65615 () Bool)

(assert (=> b!69421 m!65615))

(assert (=> b!69421 m!65613))

(assert (=> b!69421 m!65611))

(declare-fun m!65617 () Bool)

(assert (=> b!69421 m!65617))

(declare-fun m!65619 () Bool)

(assert (=> b!69421 m!65619))

(declare-fun m!65621 () Bool)

(assert (=> b!69421 m!65621))

(declare-fun m!65623 () Bool)

(assert (=> b!69421 m!65623))

(declare-fun m!65625 () Bool)

(assert (=> b!69421 m!65625))

(declare-fun m!65627 () Bool)

(assert (=> b!69421 m!65627))

(declare-fun m!65629 () Bool)

(assert (=> b!69421 m!65629))

(assert (=> b!69421 m!65601))

(declare-fun m!65631 () Bool)

(assert (=> b!69421 m!65631))

(declare-fun m!65633 () Bool)

(assert (=> b!69421 m!65633))

(assert (=> b!69421 m!64177))

(declare-fun m!65635 () Bool)

(assert (=> b!69421 m!65635))

(declare-fun m!65637 () Bool)

(assert (=> b!69421 m!65637))

(assert (=> b!69421 m!65623))

(assert (=> b!69421 m!65635))

(declare-fun m!65639 () Bool)

(assert (=> b!69421 m!65639))

(assert (=> b!69417 m!64177))

(assert (=> b!69417 m!64177))

(declare-fun m!65641 () Bool)

(assert (=> b!69417 m!65641))

(declare-fun m!65643 () Bool)

(assert (=> b!69413 m!65643))

(assert (=> d!15121 m!64193))

(assert (=> d!14871 d!15121))

(declare-fun d!15123 () Bool)

(declare-fun e!45444 () Bool)

(assert (=> d!15123 e!45444))

(declare-fun res!37238 () Bool)

(assert (=> d!15123 (=> (not res!37238) (not e!45444))))

(declare-fun lt!30512 () ListLongMap!1385)

(assert (=> d!15123 (= res!37238 (contains!709 lt!30512 (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673))))))

(declare-fun lt!30510 () List!1470)

(assert (=> d!15123 (= lt!30512 (ListLongMap!1386 lt!30510))))

(declare-fun lt!30509 () Unit!1898)

(declare-fun lt!30511 () Unit!1898)

(assert (=> d!15123 (= lt!30509 lt!30511)))

(assert (=> d!15123 (= (getValueByKey!129 lt!30510 (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673))) (Some!134 (_2!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673))))))

(assert (=> d!15123 (= lt!30511 (lemmaContainsTupThenGetReturnValue!49 lt!30510 (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673)) (_2!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673))))))

(assert (=> d!15123 (= lt!30510 (insertStrictlySorted!52 (toList!708 (getCurrentListMap!403 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16))) (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673)) (_2!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673))))))

(assert (=> d!15123 (= (+!89 (getCurrentListMap!403 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673)) lt!30512)))

(declare-fun b!69422 () Bool)

(declare-fun res!37239 () Bool)

(assert (=> b!69422 (=> (not res!37239) (not e!45444))))

(assert (=> b!69422 (= res!37239 (= (getValueByKey!129 (toList!708 lt!30512) (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673))) (Some!134 (_2!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673)))))))

(declare-fun b!69423 () Bool)

(assert (=> b!69423 (= e!45444 (contains!711 (toList!708 lt!30512) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673)))))

(assert (= (and d!15123 res!37238) b!69422))

(assert (= (and b!69422 res!37239) b!69423))

(declare-fun m!65645 () Bool)

(assert (=> d!15123 m!65645))

(declare-fun m!65647 () Bool)

(assert (=> d!15123 m!65647))

(declare-fun m!65649 () Bool)

(assert (=> d!15123 m!65649))

(declare-fun m!65651 () Bool)

(assert (=> d!15123 m!65651))

(declare-fun m!65653 () Bool)

(assert (=> b!69422 m!65653))

(declare-fun m!65655 () Bool)

(assert (=> b!69423 m!65655))

(assert (=> d!14871 d!15123))

(assert (=> d!14871 d!15017))

(declare-fun d!15125 () Bool)

(assert (=> d!15125 (= (+!89 (getCurrentListMap!403 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673)) (getCurrentListMap!403 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) lt!29963 lt!29673 (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(assert (=> d!15125 true))

(declare-fun _$7!56 () Unit!1898)

(assert (=> d!15125 (= (choose!398 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) lt!29963 (zeroValue!2073 newMap!16) lt!29673 (minValue!2073 newMap!16) (defaultEntry!2167 newMap!16)) _$7!56)))

(declare-fun bs!2983 () Bool)

(assert (= bs!2983 d!15125))

(assert (=> bs!2983 m!63945))

(assert (=> bs!2983 m!63945))

(assert (=> bs!2983 m!64903))

(assert (=> bs!2983 m!64907))

(assert (=> d!14871 d!15125))

(declare-fun e!45446 () Option!135)

(declare-fun b!69426 () Bool)

(assert (=> b!69426 (= e!45446 (getValueByKey!129 (t!4964 (t!4964 (toList!708 lt!29677))) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))

(declare-fun b!69424 () Bool)

(declare-fun e!45445 () Option!135)

(assert (=> b!69424 (= e!45445 (Some!134 (_2!1056 (h!2051 (t!4964 (toList!708 lt!29677))))))))

(declare-fun b!69427 () Bool)

(assert (=> b!69427 (= e!45446 None!133)))

(declare-fun c!9930 () Bool)

(declare-fun d!15127 () Bool)

(assert (=> d!15127 (= c!9930 (and ((_ is Cons!1466) (t!4964 (toList!708 lt!29677))) (= (_1!1056 (h!2051 (t!4964 (toList!708 lt!29677)))) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355))))))

(assert (=> d!15127 (= (getValueByKey!129 (t!4964 (toList!708 lt!29677)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) e!45445)))

(declare-fun b!69425 () Bool)

(assert (=> b!69425 (= e!45445 e!45446)))

(declare-fun c!9931 () Bool)

(assert (=> b!69425 (= c!9931 (and ((_ is Cons!1466) (t!4964 (toList!708 lt!29677))) (not (= (_1!1056 (h!2051 (t!4964 (toList!708 lt!29677)))) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))))

(assert (= (and d!15127 c!9930) b!69424))

(assert (= (and d!15127 (not c!9930)) b!69425))

(assert (= (and b!69425 c!9931) b!69426))

(assert (= (and b!69425 (not c!9931)) b!69427))

(assert (=> b!69426 m!63767))

(declare-fun m!65657 () Bool)

(assert (=> b!69426 m!65657))

(assert (=> b!69079 d!15127))

(assert (=> bm!5899 d!14941))

(declare-fun d!15129 () Bool)

(declare-fun lt!30513 () Bool)

(assert (=> d!15129 (= lt!30513 (select (content!73 (t!4964 (toList!708 lt!29868))) lt!29680))))

(declare-fun e!45448 () Bool)

(assert (=> d!15129 (= lt!30513 e!45448)))

(declare-fun res!37241 () Bool)

(assert (=> d!15129 (=> (not res!37241) (not e!45448))))

(assert (=> d!15129 (= res!37241 ((_ is Cons!1466) (t!4964 (toList!708 lt!29868))))))

(assert (=> d!15129 (= (contains!711 (t!4964 (toList!708 lt!29868)) lt!29680) lt!30513)))

(declare-fun b!69428 () Bool)

(declare-fun e!45447 () Bool)

(assert (=> b!69428 (= e!45448 e!45447)))

(declare-fun res!37240 () Bool)

(assert (=> b!69428 (=> res!37240 e!45447)))

(assert (=> b!69428 (= res!37240 (= (h!2051 (t!4964 (toList!708 lt!29868))) lt!29680))))

(declare-fun b!69429 () Bool)

(assert (=> b!69429 (= e!45447 (contains!711 (t!4964 (t!4964 (toList!708 lt!29868))) lt!29680))))

(assert (= (and d!15129 res!37241) b!69428))

(assert (= (and b!69428 (not res!37240)) b!69429))

(assert (=> d!15129 m!65267))

(declare-fun m!65659 () Bool)

(assert (=> d!15129 m!65659))

(declare-fun m!65661 () Bool)

(assert (=> b!69429 m!65661))

(assert (=> b!69121 d!15129))

(assert (=> b!68767 d!14925))

(declare-fun d!15131 () Bool)

(declare-fun lt!30514 () Bool)

(assert (=> d!15131 (= lt!30514 (select (content!73 (toList!708 lt!30062)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))))

(declare-fun e!45450 () Bool)

(assert (=> d!15131 (= lt!30514 e!45450)))

(declare-fun res!37243 () Bool)

(assert (=> d!15131 (=> (not res!37243) (not e!45450))))

(assert (=> d!15131 (= res!37243 ((_ is Cons!1466) (toList!708 lt!30062)))))

(assert (=> d!15131 (= (contains!711 (toList!708 lt!30062) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)) lt!30514)))

(declare-fun b!69430 () Bool)

(declare-fun e!45449 () Bool)

(assert (=> b!69430 (= e!45450 e!45449)))

(declare-fun res!37242 () Bool)

(assert (=> b!69430 (=> res!37242 e!45449)))

(assert (=> b!69430 (= res!37242 (= (h!2051 (toList!708 lt!30062)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))))

(declare-fun b!69431 () Bool)

(assert (=> b!69431 (= e!45449 (contains!711 (t!4964 (toList!708 lt!30062)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))))

(assert (= (and d!15131 res!37243) b!69430))

(assert (= (and b!69430 (not res!37242)) b!69431))

(declare-fun m!65663 () Bool)

(assert (=> d!15131 m!65663))

(declare-fun m!65665 () Bool)

(assert (=> d!15131 m!65665))

(declare-fun m!65667 () Bool)

(assert (=> b!69431 m!65667))

(assert (=> b!68796 d!15131))

(declare-fun d!15133 () Bool)

(declare-fun c!9932 () Bool)

(assert (=> d!15133 (= c!9932 ((_ is Nil!1467) (toList!708 lt!29861)))))

(declare-fun e!45451 () (InoxSet tuple2!2090))

(assert (=> d!15133 (= (content!73 (toList!708 lt!29861)) e!45451)))

(declare-fun b!69432 () Bool)

(assert (=> b!69432 (= e!45451 ((as const (Array tuple2!2090 Bool)) false))))

(declare-fun b!69433 () Bool)

(assert (=> b!69433 (= e!45451 ((_ map or) (store ((as const (Array tuple2!2090 Bool)) false) (h!2051 (toList!708 lt!29861)) true) (content!73 (t!4964 (toList!708 lt!29861)))))))

(assert (= (and d!15133 c!9932) b!69432))

(assert (= (and d!15133 (not c!9932)) b!69433))

(declare-fun m!65669 () Bool)

(assert (=> b!69433 m!65669))

(declare-fun m!65671 () Bool)

(assert (=> b!69433 m!65671))

(assert (=> d!14715 d!15133))

(declare-fun d!15135 () Bool)

(declare-fun e!45452 () Bool)

(assert (=> d!15135 e!45452))

(declare-fun res!37244 () Bool)

(assert (=> d!15135 (=> (not res!37244) (not e!45452))))

(declare-fun lt!30518 () ListLongMap!1385)

(assert (=> d!15135 (= res!37244 (contains!709 lt!30518 (_1!1056 (tuple2!2091 lt!30025 (ite (and c!9716 c!9712) lt!29673 (zeroValue!2073 newMap!16))))))))

(declare-fun lt!30516 () List!1470)

(assert (=> d!15135 (= lt!30518 (ListLongMap!1386 lt!30516))))

(declare-fun lt!30515 () Unit!1898)

(declare-fun lt!30517 () Unit!1898)

(assert (=> d!15135 (= lt!30515 lt!30517)))

(assert (=> d!15135 (= (getValueByKey!129 lt!30516 (_1!1056 (tuple2!2091 lt!30025 (ite (and c!9716 c!9712) lt!29673 (zeroValue!2073 newMap!16))))) (Some!134 (_2!1056 (tuple2!2091 lt!30025 (ite (and c!9716 c!9712) lt!29673 (zeroValue!2073 newMap!16))))))))

(assert (=> d!15135 (= lt!30517 (lemmaContainsTupThenGetReturnValue!49 lt!30516 (_1!1056 (tuple2!2091 lt!30025 (ite (and c!9716 c!9712) lt!29673 (zeroValue!2073 newMap!16)))) (_2!1056 (tuple2!2091 lt!30025 (ite (and c!9716 c!9712) lt!29673 (zeroValue!2073 newMap!16))))))))

(assert (=> d!15135 (= lt!30516 (insertStrictlySorted!52 (toList!708 lt!30021) (_1!1056 (tuple2!2091 lt!30025 (ite (and c!9716 c!9712) lt!29673 (zeroValue!2073 newMap!16)))) (_2!1056 (tuple2!2091 lt!30025 (ite (and c!9716 c!9712) lt!29673 (zeroValue!2073 newMap!16))))))))

(assert (=> d!15135 (= (+!89 lt!30021 (tuple2!2091 lt!30025 (ite (and c!9716 c!9712) lt!29673 (zeroValue!2073 newMap!16)))) lt!30518)))

(declare-fun b!69434 () Bool)

(declare-fun res!37245 () Bool)

(assert (=> b!69434 (=> (not res!37245) (not e!45452))))

(assert (=> b!69434 (= res!37245 (= (getValueByKey!129 (toList!708 lt!30518) (_1!1056 (tuple2!2091 lt!30025 (ite (and c!9716 c!9712) lt!29673 (zeroValue!2073 newMap!16))))) (Some!134 (_2!1056 (tuple2!2091 lt!30025 (ite (and c!9716 c!9712) lt!29673 (zeroValue!2073 newMap!16)))))))))

(declare-fun b!69435 () Bool)

(assert (=> b!69435 (= e!45452 (contains!711 (toList!708 lt!30518) (tuple2!2091 lt!30025 (ite (and c!9716 c!9712) lt!29673 (zeroValue!2073 newMap!16)))))))

(assert (= (and d!15135 res!37244) b!69434))

(assert (= (and b!69434 res!37245) b!69435))

(declare-fun m!65673 () Bool)

(assert (=> d!15135 m!65673))

(declare-fun m!65675 () Bool)

(assert (=> d!15135 m!65675))

(declare-fun m!65677 () Bool)

(assert (=> d!15135 m!65677))

(declare-fun m!65679 () Bool)

(assert (=> d!15135 m!65679))

(declare-fun m!65681 () Bool)

(assert (=> b!69434 m!65681))

(declare-fun m!65683 () Bool)

(assert (=> b!69435 m!65683))

(assert (=> b!68785 d!15135))

(declare-fun d!15137 () Bool)

(assert (=> d!15137 (= (apply!73 (+!89 lt!30040 (tuple2!2091 lt!30037 (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16)))) lt!30032) (apply!73 lt!30040 lt!30032))))

(declare-fun lt!30519 () Unit!1898)

(assert (=> d!15137 (= lt!30519 (choose!396 lt!30040 lt!30037 (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16)) lt!30032))))

(declare-fun e!45453 () Bool)

(assert (=> d!15137 e!45453))

(declare-fun res!37246 () Bool)

(assert (=> d!15137 (=> (not res!37246) (not e!45453))))

(assert (=> d!15137 (= res!37246 (contains!709 lt!30040 lt!30032))))

(assert (=> d!15137 (= (addApplyDifferent!49 lt!30040 lt!30037 (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16)) lt!30032) lt!30519)))

(declare-fun b!69436 () Bool)

(assert (=> b!69436 (= e!45453 (not (= lt!30032 lt!30037)))))

(assert (= (and d!15137 res!37246) b!69436))

(declare-fun m!65685 () Bool)

(assert (=> d!15137 m!65685))

(assert (=> d!15137 m!64307))

(assert (=> d!15137 m!64331))

(declare-fun m!65687 () Bool)

(assert (=> d!15137 m!65687))

(assert (=> d!15137 m!64307))

(assert (=> d!15137 m!64309))

(assert (=> b!68785 d!15137))

(declare-fun d!15139 () Bool)

(declare-fun e!45454 () Bool)

(assert (=> d!15139 e!45454))

(declare-fun res!37247 () Bool)

(assert (=> d!15139 (=> (not res!37247) (not e!45454))))

(declare-fun lt!30523 () ListLongMap!1385)

(assert (=> d!15139 (= res!37247 (contains!709 lt!30523 (_1!1056 (tuple2!2091 lt!30034 (ite (and c!9716 c!9712) lt!29673 (zeroValue!2073 newMap!16))))))))

(declare-fun lt!30521 () List!1470)

(assert (=> d!15139 (= lt!30523 (ListLongMap!1386 lt!30521))))

(declare-fun lt!30520 () Unit!1898)

(declare-fun lt!30522 () Unit!1898)

(assert (=> d!15139 (= lt!30520 lt!30522)))

(assert (=> d!15139 (= (getValueByKey!129 lt!30521 (_1!1056 (tuple2!2091 lt!30034 (ite (and c!9716 c!9712) lt!29673 (zeroValue!2073 newMap!16))))) (Some!134 (_2!1056 (tuple2!2091 lt!30034 (ite (and c!9716 c!9712) lt!29673 (zeroValue!2073 newMap!16))))))))

(assert (=> d!15139 (= lt!30522 (lemmaContainsTupThenGetReturnValue!49 lt!30521 (_1!1056 (tuple2!2091 lt!30034 (ite (and c!9716 c!9712) lt!29673 (zeroValue!2073 newMap!16)))) (_2!1056 (tuple2!2091 lt!30034 (ite (and c!9716 c!9712) lt!29673 (zeroValue!2073 newMap!16))))))))

(assert (=> d!15139 (= lt!30521 (insertStrictlySorted!52 (toList!708 lt!30022) (_1!1056 (tuple2!2091 lt!30034 (ite (and c!9716 c!9712) lt!29673 (zeroValue!2073 newMap!16)))) (_2!1056 (tuple2!2091 lt!30034 (ite (and c!9716 c!9712) lt!29673 (zeroValue!2073 newMap!16))))))))

(assert (=> d!15139 (= (+!89 lt!30022 (tuple2!2091 lt!30034 (ite (and c!9716 c!9712) lt!29673 (zeroValue!2073 newMap!16)))) lt!30523)))

(declare-fun b!69437 () Bool)

(declare-fun res!37248 () Bool)

(assert (=> b!69437 (=> (not res!37248) (not e!45454))))

(assert (=> b!69437 (= res!37248 (= (getValueByKey!129 (toList!708 lt!30523) (_1!1056 (tuple2!2091 lt!30034 (ite (and c!9716 c!9712) lt!29673 (zeroValue!2073 newMap!16))))) (Some!134 (_2!1056 (tuple2!2091 lt!30034 (ite (and c!9716 c!9712) lt!29673 (zeroValue!2073 newMap!16)))))))))

(declare-fun b!69438 () Bool)

(assert (=> b!69438 (= e!45454 (contains!711 (toList!708 lt!30523) (tuple2!2091 lt!30034 (ite (and c!9716 c!9712) lt!29673 (zeroValue!2073 newMap!16)))))))

(assert (= (and d!15139 res!37247) b!69437))

(assert (= (and b!69437 res!37248) b!69438))

(declare-fun m!65689 () Bool)

(assert (=> d!15139 m!65689))

(declare-fun m!65691 () Bool)

(assert (=> d!15139 m!65691))

(declare-fun m!65693 () Bool)

(assert (=> d!15139 m!65693))

(declare-fun m!65695 () Bool)

(assert (=> d!15139 m!65695))

(declare-fun m!65697 () Bool)

(assert (=> b!69437 m!65697))

(declare-fun m!65699 () Bool)

(assert (=> b!69438 m!65699))

(assert (=> b!68785 d!15139))

(declare-fun d!15141 () Bool)

(declare-fun e!45455 () Bool)

(assert (=> d!15141 e!45455))

(declare-fun res!37249 () Bool)

(assert (=> d!15141 (=> (not res!37249) (not e!45455))))

(declare-fun lt!30527 () ListLongMap!1385)

(assert (=> d!15141 (= res!37249 (contains!709 lt!30527 (_1!1056 (tuple2!2091 lt!30026 (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16))))))))

(declare-fun lt!30525 () List!1470)

(assert (=> d!15141 (= lt!30527 (ListLongMap!1386 lt!30525))))

(declare-fun lt!30524 () Unit!1898)

(declare-fun lt!30526 () Unit!1898)

(assert (=> d!15141 (= lt!30524 lt!30526)))

(assert (=> d!15141 (= (getValueByKey!129 lt!30525 (_1!1056 (tuple2!2091 lt!30026 (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16))))) (Some!134 (_2!1056 (tuple2!2091 lt!30026 (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16))))))))

(assert (=> d!15141 (= lt!30526 (lemmaContainsTupThenGetReturnValue!49 lt!30525 (_1!1056 (tuple2!2091 lt!30026 (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16)))) (_2!1056 (tuple2!2091 lt!30026 (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16))))))))

(assert (=> d!15141 (= lt!30525 (insertStrictlySorted!52 (toList!708 lt!30036) (_1!1056 (tuple2!2091 lt!30026 (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16)))) (_2!1056 (tuple2!2091 lt!30026 (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16))))))))

(assert (=> d!15141 (= (+!89 lt!30036 (tuple2!2091 lt!30026 (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16)))) lt!30527)))

(declare-fun b!69439 () Bool)

(declare-fun res!37250 () Bool)

(assert (=> b!69439 (=> (not res!37250) (not e!45455))))

(assert (=> b!69439 (= res!37250 (= (getValueByKey!129 (toList!708 lt!30527) (_1!1056 (tuple2!2091 lt!30026 (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16))))) (Some!134 (_2!1056 (tuple2!2091 lt!30026 (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16)))))))))

(declare-fun b!69440 () Bool)

(assert (=> b!69440 (= e!45455 (contains!711 (toList!708 lt!30527) (tuple2!2091 lt!30026 (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16)))))))

(assert (= (and d!15141 res!37249) b!69439))

(assert (= (and b!69439 res!37250) b!69440))

(declare-fun m!65701 () Bool)

(assert (=> d!15141 m!65701))

(declare-fun m!65703 () Bool)

(assert (=> d!15141 m!65703))

(declare-fun m!65705 () Bool)

(assert (=> d!15141 m!65705))

(declare-fun m!65707 () Bool)

(assert (=> d!15141 m!65707))

(declare-fun m!65709 () Bool)

(assert (=> b!69439 m!65709))

(declare-fun m!65711 () Bool)

(assert (=> b!69440 m!65711))

(assert (=> b!68785 d!15141))

(declare-fun d!15143 () Bool)

(assert (=> d!15143 (= (apply!73 lt!30040 lt!30032) (get!1129 (getValueByKey!129 (toList!708 lt!30040) lt!30032)))))

(declare-fun bs!2984 () Bool)

(assert (= bs!2984 d!15143))

(declare-fun m!65713 () Bool)

(assert (=> bs!2984 m!65713))

(assert (=> bs!2984 m!65713))

(declare-fun m!65715 () Bool)

(assert (=> bs!2984 m!65715))

(assert (=> b!68785 d!15143))

(declare-fun d!15145 () Bool)

(assert (=> d!15145 (= (apply!73 (+!89 lt!30022 (tuple2!2091 lt!30034 (ite (and c!9716 c!9712) lt!29673 (zeroValue!2073 newMap!16)))) lt!30031) (get!1129 (getValueByKey!129 (toList!708 (+!89 lt!30022 (tuple2!2091 lt!30034 (ite (and c!9716 c!9712) lt!29673 (zeroValue!2073 newMap!16))))) lt!30031)))))

(declare-fun bs!2985 () Bool)

(assert (= bs!2985 d!15145))

(declare-fun m!65717 () Bool)

(assert (=> bs!2985 m!65717))

(assert (=> bs!2985 m!65717))

(declare-fun m!65719 () Bool)

(assert (=> bs!2985 m!65719))

(assert (=> b!68785 d!15145))

(declare-fun d!15147 () Bool)

(assert (=> d!15147 (= (apply!73 (+!89 lt!30036 (tuple2!2091 lt!30026 (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16)))) lt!30023) (apply!73 lt!30036 lt!30023))))

(declare-fun lt!30528 () Unit!1898)

(assert (=> d!15147 (= lt!30528 (choose!396 lt!30036 lt!30026 (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16)) lt!30023))))

(declare-fun e!45456 () Bool)

(assert (=> d!15147 e!45456))

(declare-fun res!37251 () Bool)

(assert (=> d!15147 (=> (not res!37251) (not e!45456))))

(assert (=> d!15147 (= res!37251 (contains!709 lt!30036 lt!30023))))

(assert (=> d!15147 (= (addApplyDifferent!49 lt!30036 lt!30026 (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16)) lt!30023) lt!30528)))

(declare-fun b!69441 () Bool)

(assert (=> b!69441 (= e!45456 (not (= lt!30023 lt!30026)))))

(assert (= (and d!15147 res!37251) b!69441))

(declare-fun m!65721 () Bool)

(assert (=> d!15147 m!65721))

(assert (=> d!15147 m!64317))

(assert (=> d!15147 m!64325))

(declare-fun m!65723 () Bool)

(assert (=> d!15147 m!65723))

(assert (=> d!15147 m!64317))

(assert (=> d!15147 m!64319))

(assert (=> b!68785 d!15147))

(declare-fun d!15149 () Bool)

(declare-fun e!45457 () Bool)

(assert (=> d!15149 e!45457))

(declare-fun res!37252 () Bool)

(assert (=> d!15149 (=> (not res!37252) (not e!45457))))

(declare-fun lt!30532 () ListLongMap!1385)

(assert (=> d!15149 (= res!37252 (contains!709 lt!30532 (_1!1056 (tuple2!2091 lt!30037 (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16))))))))

(declare-fun lt!30530 () List!1470)

(assert (=> d!15149 (= lt!30532 (ListLongMap!1386 lt!30530))))

(declare-fun lt!30529 () Unit!1898)

(declare-fun lt!30531 () Unit!1898)

(assert (=> d!15149 (= lt!30529 lt!30531)))

(assert (=> d!15149 (= (getValueByKey!129 lt!30530 (_1!1056 (tuple2!2091 lt!30037 (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16))))) (Some!134 (_2!1056 (tuple2!2091 lt!30037 (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16))))))))

(assert (=> d!15149 (= lt!30531 (lemmaContainsTupThenGetReturnValue!49 lt!30530 (_1!1056 (tuple2!2091 lt!30037 (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16)))) (_2!1056 (tuple2!2091 lt!30037 (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16))))))))

(assert (=> d!15149 (= lt!30530 (insertStrictlySorted!52 (toList!708 lt!30040) (_1!1056 (tuple2!2091 lt!30037 (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16)))) (_2!1056 (tuple2!2091 lt!30037 (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16))))))))

(assert (=> d!15149 (= (+!89 lt!30040 (tuple2!2091 lt!30037 (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16)))) lt!30532)))

(declare-fun b!69442 () Bool)

(declare-fun res!37253 () Bool)

(assert (=> b!69442 (=> (not res!37253) (not e!45457))))

(assert (=> b!69442 (= res!37253 (= (getValueByKey!129 (toList!708 lt!30532) (_1!1056 (tuple2!2091 lt!30037 (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16))))) (Some!134 (_2!1056 (tuple2!2091 lt!30037 (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16)))))))))

(declare-fun b!69443 () Bool)

(assert (=> b!69443 (= e!45457 (contains!711 (toList!708 lt!30532) (tuple2!2091 lt!30037 (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16)))))))

(assert (= (and d!15149 res!37252) b!69442))

(assert (= (and b!69442 res!37253) b!69443))

(declare-fun m!65725 () Bool)

(assert (=> d!15149 m!65725))

(declare-fun m!65727 () Bool)

(assert (=> d!15149 m!65727))

(declare-fun m!65729 () Bool)

(assert (=> d!15149 m!65729))

(declare-fun m!65731 () Bool)

(assert (=> d!15149 m!65731))

(declare-fun m!65733 () Bool)

(assert (=> b!69442 m!65733))

(declare-fun m!65735 () Bool)

(assert (=> b!69443 m!65735))

(assert (=> b!68785 d!15149))

(declare-fun b!69444 () Bool)

(declare-fun e!45463 () Bool)

(declare-fun lt!30533 () ListLongMap!1385)

(assert (=> b!69444 (= e!45463 (isEmpty!314 lt!30533))))

(declare-fun b!69445 () Bool)

(declare-fun e!45461 () Bool)

(declare-fun e!45459 () Bool)

(assert (=> b!69445 (= e!45461 e!45459)))

(assert (=> b!69445 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))))))

(declare-fun res!37255 () Bool)

(assert (=> b!69445 (= res!37255 (contains!709 lt!30533 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!69445 (=> (not res!37255) (not e!45459))))

(declare-fun b!69446 () Bool)

(declare-fun e!45462 () ListLongMap!1385)

(declare-fun e!45460 () ListLongMap!1385)

(assert (=> b!69446 (= e!45462 e!45460)))

(declare-fun c!9936 () Bool)

(assert (=> b!69446 (= c!9936 (validKeyInArray!0 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!69447 () Bool)

(declare-fun lt!30538 () Unit!1898)

(declare-fun lt!30539 () Unit!1898)

(assert (=> b!69447 (= lt!30538 lt!30539)))

(declare-fun lt!30535 () (_ BitVec 64))

(declare-fun lt!30534 () V!2921)

(declare-fun lt!30536 () ListLongMap!1385)

(declare-fun lt!30537 () (_ BitVec 64))

(assert (=> b!69447 (not (contains!709 (+!89 lt!30536 (tuple2!2091 lt!30535 lt!30534)) lt!30537))))

(assert (=> b!69447 (= lt!30539 (addStillNotContains!23 lt!30536 lt!30535 lt!30534 lt!30537))))

(assert (=> b!69447 (= lt!30537 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!69447 (= lt!30534 (get!1126 (select (arr!1829 (_values!2150 newMap!16)) #b00000000000000000000000000000000) (dynLambda!321 (defaultEntry!2167 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!69447 (= lt!30535 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!5946 () ListLongMap!1385)

(assert (=> b!69447 (= lt!30536 call!5946)))

(assert (=> b!69447 (= e!45460 (+!89 call!5946 (tuple2!2091 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000) (get!1126 (select (arr!1829 (_values!2150 newMap!16)) #b00000000000000000000000000000000) (dynLambda!321 (defaultEntry!2167 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!69448 () Bool)

(assert (=> b!69448 (= e!45463 (= lt!30533 (getCurrentListMapNoExtraKeys!53 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (ite c!9716 (ite c!9712 lt!29963 lt!29953) (extraKeys!2034 newMap!16)) (ite (and c!9716 c!9712) lt!29673 (zeroValue!2073 newMap!16)) (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2167 newMap!16))))))

(declare-fun b!69449 () Bool)

(assert (=> b!69449 (= e!45462 (ListLongMap!1386 Nil!1467))))

(declare-fun b!69450 () Bool)

(declare-fun e!45458 () Bool)

(assert (=> b!69450 (= e!45458 e!45461)))

(declare-fun c!9933 () Bool)

(declare-fun e!45464 () Bool)

(assert (=> b!69450 (= c!9933 e!45464)))

(declare-fun res!37257 () Bool)

(assert (=> b!69450 (=> (not res!37257) (not e!45464))))

(assert (=> b!69450 (= res!37257 (bvslt #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))))))

(declare-fun b!69451 () Bool)

(declare-fun res!37254 () Bool)

(assert (=> b!69451 (=> (not res!37254) (not e!45458))))

(assert (=> b!69451 (= res!37254 (not (contains!709 lt!30533 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!69452 () Bool)

(assert (=> b!69452 (= e!45461 e!45463)))

(declare-fun c!9934 () Bool)

(assert (=> b!69452 (= c!9934 (bvslt #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))))))

(declare-fun d!15151 () Bool)

(assert (=> d!15151 e!45458))

(declare-fun res!37256 () Bool)

(assert (=> d!15151 (=> (not res!37256) (not e!45458))))

(assert (=> d!15151 (= res!37256 (not (contains!709 lt!30533 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!15151 (= lt!30533 e!45462)))

(declare-fun c!9935 () Bool)

(assert (=> d!15151 (= c!9935 (bvsge #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))))))

(assert (=> d!15151 (validMask!0 (mask!6111 newMap!16))))

(assert (=> d!15151 (= (getCurrentListMapNoExtraKeys!53 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (ite c!9716 (ite c!9712 lt!29963 lt!29953) (extraKeys!2034 newMap!16)) (ite (and c!9716 c!9712) lt!29673 (zeroValue!2073 newMap!16)) (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) lt!30533)))

(declare-fun bm!5943 () Bool)

(assert (=> bm!5943 (= call!5946 (getCurrentListMapNoExtraKeys!53 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (ite c!9716 (ite c!9712 lt!29963 lt!29953) (extraKeys!2034 newMap!16)) (ite (and c!9716 c!9712) lt!29673 (zeroValue!2073 newMap!16)) (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2167 newMap!16)))))

(declare-fun b!69453 () Bool)

(assert (=> b!69453 (= e!45460 call!5946)))

(declare-fun b!69454 () Bool)

(assert (=> b!69454 (= e!45464 (validKeyInArray!0 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!69454 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!69455 () Bool)

(assert (=> b!69455 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))))))

(assert (=> b!69455 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2066 (_values!2150 newMap!16))))))

(assert (=> b!69455 (= e!45459 (= (apply!73 lt!30533 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)) (get!1126 (select (arr!1829 (_values!2150 newMap!16)) #b00000000000000000000000000000000) (dynLambda!321 (defaultEntry!2167 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!15151 c!9935) b!69449))

(assert (= (and d!15151 (not c!9935)) b!69446))

(assert (= (and b!69446 c!9936) b!69447))

(assert (= (and b!69446 (not c!9936)) b!69453))

(assert (= (or b!69447 b!69453) bm!5943))

(assert (= (and d!15151 res!37256) b!69451))

(assert (= (and b!69451 res!37254) b!69450))

(assert (= (and b!69450 res!37257) b!69454))

(assert (= (and b!69450 c!9933) b!69445))

(assert (= (and b!69450 (not c!9933)) b!69452))

(assert (= (and b!69445 res!37255) b!69455))

(assert (= (and b!69452 c!9934) b!69448))

(assert (= (and b!69452 (not c!9934)) b!69444))

(declare-fun b_lambda!3105 () Bool)

(assert (=> (not b_lambda!3105) (not b!69447)))

(assert (=> b!69447 t!4978))

(declare-fun b_and!4269 () Bool)

(assert (= b_and!4265 (and (=> t!4978 result!2615) b_and!4269)))

(assert (=> b!69447 t!4980))

(declare-fun b_and!4271 () Bool)

(assert (= b_and!4267 (and (=> t!4980 result!2617) b_and!4271)))

(declare-fun b_lambda!3107 () Bool)

(assert (=> (not b_lambda!3107) (not b!69455)))

(assert (=> b!69455 t!4978))

(declare-fun b_and!4273 () Bool)

(assert (= b_and!4269 (and (=> t!4978 result!2615) b_and!4273)))

(assert (=> b!69455 t!4980))

(declare-fun b_and!4275 () Bool)

(assert (= b_and!4271 (and (=> t!4980 result!2617) b_and!4275)))

(assert (=> b!69454 m!64177))

(assert (=> b!69454 m!64177))

(assert (=> b!69454 m!64187))

(assert (=> b!69446 m!64177))

(assert (=> b!69446 m!64177))

(assert (=> b!69446 m!64187))

(declare-fun m!65737 () Bool)

(assert (=> bm!5943 m!65737))

(assert (=> b!69448 m!65737))

(assert (=> b!69445 m!64177))

(assert (=> b!69445 m!64177))

(declare-fun m!65739 () Bool)

(assert (=> b!69445 m!65739))

(assert (=> b!69455 m!64293))

(assert (=> b!69455 m!64243))

(assert (=> b!69455 m!64297))

(assert (=> b!69455 m!64177))

(declare-fun m!65741 () Bool)

(assert (=> b!69455 m!65741))

(assert (=> b!69455 m!64243))

(assert (=> b!69455 m!64293))

(assert (=> b!69455 m!64177))

(declare-fun m!65743 () Bool)

(assert (=> b!69444 m!65743))

(declare-fun m!65745 () Bool)

(assert (=> b!69447 m!65745))

(assert (=> b!69447 m!64293))

(assert (=> b!69447 m!64243))

(assert (=> b!69447 m!64297))

(assert (=> b!69447 m!64243))

(declare-fun m!65747 () Bool)

(assert (=> b!69447 m!65747))

(declare-fun m!65749 () Bool)

(assert (=> b!69447 m!65749))

(assert (=> b!69447 m!64293))

(assert (=> b!69447 m!65747))

(declare-fun m!65751 () Bool)

(assert (=> b!69447 m!65751))

(assert (=> b!69447 m!64177))

(declare-fun m!65753 () Bool)

(assert (=> d!15151 m!65753))

(assert (=> d!15151 m!64193))

(declare-fun m!65755 () Bool)

(assert (=> b!69451 m!65755))

(assert (=> b!68785 d!15151))

(declare-fun d!15153 () Bool)

(assert (=> d!15153 (= (apply!73 lt!30022 lt!30031) (get!1129 (getValueByKey!129 (toList!708 lt!30022) lt!30031)))))

(declare-fun bs!2986 () Bool)

(assert (= bs!2986 d!15153))

(declare-fun m!65757 () Bool)

(assert (=> bs!2986 m!65757))

(assert (=> bs!2986 m!65757))

(declare-fun m!65759 () Bool)

(assert (=> bs!2986 m!65759))

(assert (=> b!68785 d!15153))

(declare-fun d!15155 () Bool)

(assert (=> d!15155 (= (apply!73 lt!30036 lt!30023) (get!1129 (getValueByKey!129 (toList!708 lt!30036) lt!30023)))))

(declare-fun bs!2987 () Bool)

(assert (= bs!2987 d!15155))

(declare-fun m!65761 () Bool)

(assert (=> bs!2987 m!65761))

(assert (=> bs!2987 m!65761))

(declare-fun m!65763 () Bool)

(assert (=> bs!2987 m!65763))

(assert (=> b!68785 d!15155))

(declare-fun d!15157 () Bool)

(assert (=> d!15157 (= (apply!73 (+!89 lt!30036 (tuple2!2091 lt!30026 (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16)))) lt!30023) (get!1129 (getValueByKey!129 (toList!708 (+!89 lt!30036 (tuple2!2091 lt!30026 (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16))))) lt!30023)))))

(declare-fun bs!2988 () Bool)

(assert (= bs!2988 d!15157))

(declare-fun m!65765 () Bool)

(assert (=> bs!2988 m!65765))

(assert (=> bs!2988 m!65765))

(declare-fun m!65767 () Bool)

(assert (=> bs!2988 m!65767))

(assert (=> b!68785 d!15157))

(declare-fun d!15159 () Bool)

(assert (=> d!15159 (contains!709 (+!89 lt!30021 (tuple2!2091 lt!30025 (ite (and c!9716 c!9712) lt!29673 (zeroValue!2073 newMap!16)))) lt!30024)))

(declare-fun lt!30540 () Unit!1898)

(assert (=> d!15159 (= lt!30540 (choose!397 lt!30021 lt!30025 (ite (and c!9716 c!9712) lt!29673 (zeroValue!2073 newMap!16)) lt!30024))))

(assert (=> d!15159 (contains!709 lt!30021 lt!30024)))

(assert (=> d!15159 (= (addStillContains!49 lt!30021 lt!30025 (ite (and c!9716 c!9712) lt!29673 (zeroValue!2073 newMap!16)) lt!30024) lt!30540)))

(declare-fun bs!2989 () Bool)

(assert (= bs!2989 d!15159))

(assert (=> bs!2989 m!64329))

(assert (=> bs!2989 m!64329))

(assert (=> bs!2989 m!64333))

(declare-fun m!65769 () Bool)

(assert (=> bs!2989 m!65769))

(declare-fun m!65771 () Bool)

(assert (=> bs!2989 m!65771))

(assert (=> b!68785 d!15159))

(declare-fun d!15161 () Bool)

(assert (=> d!15161 (= (apply!73 (+!89 lt!30040 (tuple2!2091 lt!30037 (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16)))) lt!30032) (get!1129 (getValueByKey!129 (toList!708 (+!89 lt!30040 (tuple2!2091 lt!30037 (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16))))) lt!30032)))))

(declare-fun bs!2990 () Bool)

(assert (= bs!2990 d!15161))

(declare-fun m!65773 () Bool)

(assert (=> bs!2990 m!65773))

(assert (=> bs!2990 m!65773))

(declare-fun m!65775 () Bool)

(assert (=> bs!2990 m!65775))

(assert (=> b!68785 d!15161))

(declare-fun d!15163 () Bool)

(assert (=> d!15163 (= (apply!73 (+!89 lt!30022 (tuple2!2091 lt!30034 (ite (and c!9716 c!9712) lt!29673 (zeroValue!2073 newMap!16)))) lt!30031) (apply!73 lt!30022 lt!30031))))

(declare-fun lt!30541 () Unit!1898)

(assert (=> d!15163 (= lt!30541 (choose!396 lt!30022 lt!30034 (ite (and c!9716 c!9712) lt!29673 (zeroValue!2073 newMap!16)) lt!30031))))

(declare-fun e!45465 () Bool)

(assert (=> d!15163 e!45465))

(declare-fun res!37258 () Bool)

(assert (=> d!15163 (=> (not res!37258) (not e!45465))))

(assert (=> d!15163 (= res!37258 (contains!709 lt!30022 lt!30031))))

(assert (=> d!15163 (= (addApplyDifferent!49 lt!30022 lt!30034 (ite (and c!9716 c!9712) lt!29673 (zeroValue!2073 newMap!16)) lt!30031) lt!30541)))

(declare-fun b!69456 () Bool)

(assert (=> b!69456 (= e!45465 (not (= lt!30031 lt!30034)))))

(assert (= (and d!15163 res!37258) b!69456))

(declare-fun m!65777 () Bool)

(assert (=> d!15163 m!65777))

(assert (=> d!15163 m!64305))

(assert (=> d!15163 m!64327))

(declare-fun m!65779 () Bool)

(assert (=> d!15163 m!65779))

(assert (=> d!15163 m!64305))

(assert (=> d!15163 m!64311))

(assert (=> b!68785 d!15163))

(declare-fun d!15165 () Bool)

(declare-fun e!45467 () Bool)

(assert (=> d!15165 e!45467))

(declare-fun res!37259 () Bool)

(assert (=> d!15165 (=> res!37259 e!45467)))

(declare-fun lt!30545 () Bool)

(assert (=> d!15165 (= res!37259 (not lt!30545))))

(declare-fun lt!30544 () Bool)

(assert (=> d!15165 (= lt!30545 lt!30544)))

(declare-fun lt!30543 () Unit!1898)

(declare-fun e!45466 () Unit!1898)

(assert (=> d!15165 (= lt!30543 e!45466)))

(declare-fun c!9937 () Bool)

(assert (=> d!15165 (= c!9937 lt!30544)))

(assert (=> d!15165 (= lt!30544 (containsKey!133 (toList!708 (+!89 lt!30021 (tuple2!2091 lt!30025 (ite (and c!9716 c!9712) lt!29673 (zeroValue!2073 newMap!16))))) lt!30024))))

(assert (=> d!15165 (= (contains!709 (+!89 lt!30021 (tuple2!2091 lt!30025 (ite (and c!9716 c!9712) lt!29673 (zeroValue!2073 newMap!16)))) lt!30024) lt!30545)))

(declare-fun b!69457 () Bool)

(declare-fun lt!30542 () Unit!1898)

(assert (=> b!69457 (= e!45466 lt!30542)))

(assert (=> b!69457 (= lt!30542 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 (+!89 lt!30021 (tuple2!2091 lt!30025 (ite (and c!9716 c!9712) lt!29673 (zeroValue!2073 newMap!16))))) lt!30024))))

(assert (=> b!69457 (isDefined!83 (getValueByKey!129 (toList!708 (+!89 lt!30021 (tuple2!2091 lt!30025 (ite (and c!9716 c!9712) lt!29673 (zeroValue!2073 newMap!16))))) lt!30024))))

(declare-fun b!69458 () Bool)

(declare-fun Unit!1942 () Unit!1898)

(assert (=> b!69458 (= e!45466 Unit!1942)))

(declare-fun b!69459 () Bool)

(assert (=> b!69459 (= e!45467 (isDefined!83 (getValueByKey!129 (toList!708 (+!89 lt!30021 (tuple2!2091 lt!30025 (ite (and c!9716 c!9712) lt!29673 (zeroValue!2073 newMap!16))))) lt!30024)))))

(assert (= (and d!15165 c!9937) b!69457))

(assert (= (and d!15165 (not c!9937)) b!69458))

(assert (= (and d!15165 (not res!37259)) b!69459))

(declare-fun m!65781 () Bool)

(assert (=> d!15165 m!65781))

(declare-fun m!65783 () Bool)

(assert (=> b!69457 m!65783))

(declare-fun m!65785 () Bool)

(assert (=> b!69457 m!65785))

(assert (=> b!69457 m!65785))

(declare-fun m!65787 () Bool)

(assert (=> b!69457 m!65787))

(assert (=> b!69459 m!65785))

(assert (=> b!69459 m!65785))

(assert (=> b!69459 m!65787))

(assert (=> b!68785 d!15165))

(declare-fun d!15167 () Bool)

(assert (=> d!15167 (isDefined!83 (getValueByKey!129 (toList!708 lt!29805) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!30546 () Unit!1898)

(assert (=> d!15167 (= lt!30546 (choose!399 (toList!708 lt!29805) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!45468 () Bool)

(assert (=> d!15167 e!45468))

(declare-fun res!37260 () Bool)

(assert (=> d!15167 (=> (not res!37260) (not e!45468))))

(assert (=> d!15167 (= res!37260 (isStrictlySorted!285 (toList!708 lt!29805)))))

(assert (=> d!15167 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 lt!29805) #b0000000000000000000000000000000000000000000000000000000000000000) lt!30546)))

(declare-fun b!69460 () Bool)

(assert (=> b!69460 (= e!45468 (containsKey!133 (toList!708 lt!29805) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!15167 res!37260) b!69460))

(assert (=> d!15167 m!64165))

(assert (=> d!15167 m!64165))

(assert (=> d!15167 m!64765))

(declare-fun m!65789 () Bool)

(assert (=> d!15167 m!65789))

(declare-fun m!65791 () Bool)

(assert (=> d!15167 m!65791))

(assert (=> b!69460 m!64761))

(assert (=> b!69041 d!15167))

(assert (=> b!69041 d!14905))

(assert (=> b!69041 d!14907))

(declare-fun d!15169 () Bool)

(declare-fun res!37261 () Bool)

(declare-fun e!45469 () Bool)

(assert (=> d!15169 (=> res!37261 e!45469)))

(assert (=> d!15169 (= res!37261 (and ((_ is Cons!1466) (toList!708 (+!89 lt!29838 (tuple2!2091 lt!29837 lt!29836)))) (= (_1!1056 (h!2051 (toList!708 (+!89 lt!29838 (tuple2!2091 lt!29837 lt!29836))))) lt!29839)))))

(assert (=> d!15169 (= (containsKey!133 (toList!708 (+!89 lt!29838 (tuple2!2091 lt!29837 lt!29836))) lt!29839) e!45469)))

(declare-fun b!69461 () Bool)

(declare-fun e!45470 () Bool)

(assert (=> b!69461 (= e!45469 e!45470)))

(declare-fun res!37262 () Bool)

(assert (=> b!69461 (=> (not res!37262) (not e!45470))))

(assert (=> b!69461 (= res!37262 (and (or (not ((_ is Cons!1466) (toList!708 (+!89 lt!29838 (tuple2!2091 lt!29837 lt!29836))))) (bvsle (_1!1056 (h!2051 (toList!708 (+!89 lt!29838 (tuple2!2091 lt!29837 lt!29836))))) lt!29839)) ((_ is Cons!1466) (toList!708 (+!89 lt!29838 (tuple2!2091 lt!29837 lt!29836)))) (bvslt (_1!1056 (h!2051 (toList!708 (+!89 lt!29838 (tuple2!2091 lt!29837 lt!29836))))) lt!29839)))))

(declare-fun b!69462 () Bool)

(assert (=> b!69462 (= e!45470 (containsKey!133 (t!4964 (toList!708 (+!89 lt!29838 (tuple2!2091 lt!29837 lt!29836)))) lt!29839))))

(assert (= (and d!15169 (not res!37261)) b!69461))

(assert (= (and b!69461 res!37262) b!69462))

(declare-fun m!65793 () Bool)

(assert (=> b!69462 m!65793))

(assert (=> d!14773 d!15169))

(declare-fun d!15171 () Bool)

(declare-fun e!45472 () Bool)

(assert (=> d!15171 e!45472))

(declare-fun res!37263 () Bool)

(assert (=> d!15171 (=> res!37263 e!45472)))

(declare-fun lt!30550 () Bool)

(assert (=> d!15171 (= res!37263 (not lt!30550))))

(declare-fun lt!30549 () Bool)

(assert (=> d!15171 (= lt!30550 lt!30549)))

(declare-fun lt!30548 () Unit!1898)

(declare-fun e!45471 () Unit!1898)

(assert (=> d!15171 (= lt!30548 e!45471)))

(declare-fun c!9938 () Bool)

(assert (=> d!15171 (= c!9938 lt!30549)))

(assert (=> d!15171 (= lt!30549 (containsKey!133 (toList!708 lt!30322) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!15171 (= (contains!709 lt!30322 #b1000000000000000000000000000000000000000000000000000000000000000) lt!30550)))

(declare-fun b!69463 () Bool)

(declare-fun lt!30547 () Unit!1898)

(assert (=> b!69463 (= e!45471 lt!30547)))

(assert (=> b!69463 (= lt!30547 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 lt!30322) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!69463 (isDefined!83 (getValueByKey!129 (toList!708 lt!30322) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69464 () Bool)

(declare-fun Unit!1943 () Unit!1898)

(assert (=> b!69464 (= e!45471 Unit!1943)))

(declare-fun b!69465 () Bool)

(assert (=> b!69465 (= e!45472 (isDefined!83 (getValueByKey!129 (toList!708 lt!30322) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15171 c!9938) b!69463))

(assert (= (and d!15171 (not c!9938)) b!69464))

(assert (= (and d!15171 (not res!37263)) b!69465))

(declare-fun m!65795 () Bool)

(assert (=> d!15171 m!65795))

(declare-fun m!65797 () Bool)

(assert (=> b!69463 m!65797))

(declare-fun m!65799 () Bool)

(assert (=> b!69463 m!65799))

(assert (=> b!69463 m!65799))

(declare-fun m!65801 () Bool)

(assert (=> b!69463 m!65801))

(assert (=> b!69465 m!65799))

(assert (=> b!69465 m!65799))

(assert (=> b!69465 m!65801))

(assert (=> bm!5903 d!15171))

(declare-fun d!15173 () Bool)

(assert (=> d!15173 (= (apply!73 lt!30005 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1129 (getValueByKey!129 (toList!708 lt!30005) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2991 () Bool)

(assert (= bs!2991 d!15173))

(declare-fun m!65803 () Bool)

(assert (=> bs!2991 m!65803))

(assert (=> bs!2991 m!65803))

(declare-fun m!65805 () Bool)

(assert (=> bs!2991 m!65805))

(assert (=> b!68757 d!15173))

(declare-fun d!15175 () Bool)

(declare-fun lt!30551 () Bool)

(assert (=> d!15175 (= lt!30551 (select (content!73 (toList!708 lt!30276)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))))

(declare-fun e!45474 () Bool)

(assert (=> d!15175 (= lt!30551 e!45474)))

(declare-fun res!37265 () Bool)

(assert (=> d!15175 (=> (not res!37265) (not e!45474))))

(assert (=> d!15175 (= res!37265 ((_ is Cons!1466) (toList!708 lt!30276)))))

(assert (=> d!15175 (= (contains!711 (toList!708 lt!30276) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)) lt!30551)))

(declare-fun b!69466 () Bool)

(declare-fun e!45473 () Bool)

(assert (=> b!69466 (= e!45474 e!45473)))

(declare-fun res!37264 () Bool)

(assert (=> b!69466 (=> res!37264 e!45473)))

(assert (=> b!69466 (= res!37264 (= (h!2051 (toList!708 lt!30276)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))))

(declare-fun b!69467 () Bool)

(assert (=> b!69467 (= e!45473 (contains!711 (t!4964 (toList!708 lt!30276)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))))

(assert (= (and d!15175 res!37265) b!69466))

(assert (= (and b!69466 (not res!37264)) b!69467))

(declare-fun m!65807 () Bool)

(assert (=> d!15175 m!65807))

(declare-fun m!65809 () Bool)

(assert (=> d!15175 m!65809))

(declare-fun m!65811 () Bool)

(assert (=> b!69467 m!65811))

(assert (=> b!69051 d!15175))

(assert (=> d!14889 d!14879))

(assert (=> d!14889 d!14881))

(declare-fun d!15177 () Bool)

(assert (=> d!15177 (isDefined!83 (getValueByKey!129 (toList!708 lt!29677) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))

(assert (=> d!15177 true))

(declare-fun _$12!317 () Unit!1898)

(assert (=> d!15177 (= (choose!399 (toList!708 lt!29677) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) _$12!317)))

(declare-fun bs!2992 () Bool)

(assert (= bs!2992 d!15177))

(assert (=> bs!2992 m!63767))

(assert (=> bs!2992 m!64101))

(assert (=> bs!2992 m!64101))

(assert (=> bs!2992 m!64103))

(assert (=> d!14889 d!15177))

(declare-fun d!15179 () Bool)

(declare-fun res!37266 () Bool)

(declare-fun e!45475 () Bool)

(assert (=> d!15179 (=> res!37266 e!45475)))

(assert (=> d!15179 (= res!37266 (or ((_ is Nil!1467) (toList!708 lt!29677)) ((_ is Nil!1467) (t!4964 (toList!708 lt!29677)))))))

(assert (=> d!15179 (= (isStrictlySorted!285 (toList!708 lt!29677)) e!45475)))

(declare-fun b!69468 () Bool)

(declare-fun e!45476 () Bool)

(assert (=> b!69468 (= e!45475 e!45476)))

(declare-fun res!37267 () Bool)

(assert (=> b!69468 (=> (not res!37267) (not e!45476))))

(assert (=> b!69468 (= res!37267 (bvslt (_1!1056 (h!2051 (toList!708 lt!29677))) (_1!1056 (h!2051 (t!4964 (toList!708 lt!29677))))))))

(declare-fun b!69469 () Bool)

(assert (=> b!69469 (= e!45476 (isStrictlySorted!285 (t!4964 (toList!708 lt!29677))))))

(assert (= (and d!15179 (not res!37266)) b!69468))

(assert (= (and b!69468 res!37267) b!69469))

(declare-fun m!65813 () Bool)

(assert (=> b!69469 m!65813))

(assert (=> d!14889 d!15179))

(declare-fun d!15181 () Bool)

(assert (=> d!15181 (= (isEmpty!315 (toList!708 lt!29835)) ((_ is Nil!1467) (toList!708 lt!29835)))))

(assert (=> d!14835 d!15181))

(declare-fun d!15183 () Bool)

(declare-fun e!45478 () Bool)

(assert (=> d!15183 e!45478))

(declare-fun res!37268 () Bool)

(assert (=> d!15183 (=> res!37268 e!45478)))

(declare-fun lt!30555 () Bool)

(assert (=> d!15183 (= res!37268 (not lt!30555))))

(declare-fun lt!30554 () Bool)

(assert (=> d!15183 (= lt!30555 lt!30554)))

(declare-fun lt!30553 () Unit!1898)

(declare-fun e!45477 () Unit!1898)

(assert (=> d!15183 (= lt!30553 e!45477)))

(declare-fun c!9939 () Bool)

(assert (=> d!15183 (= c!9939 lt!30554)))

(assert (=> d!15183 (= lt!30554 (containsKey!133 (toList!708 lt!30245) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!15183 (= (contains!709 lt!30245 #b0000000000000000000000000000000000000000000000000000000000000000) lt!30555)))

(declare-fun b!69470 () Bool)

(declare-fun lt!30552 () Unit!1898)

(assert (=> b!69470 (= e!45477 lt!30552)))

(assert (=> b!69470 (= lt!30552 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 lt!30245) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!69470 (isDefined!83 (getValueByKey!129 (toList!708 lt!30245) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69471 () Bool)

(declare-fun Unit!1944 () Unit!1898)

(assert (=> b!69471 (= e!45477 Unit!1944)))

(declare-fun b!69472 () Bool)

(assert (=> b!69472 (= e!45478 (isDefined!83 (getValueByKey!129 (toList!708 lt!30245) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15183 c!9939) b!69470))

(assert (= (and d!15183 (not c!9939)) b!69471))

(assert (= (and d!15183 (not res!37268)) b!69472))

(declare-fun m!65815 () Bool)

(assert (=> d!15183 m!65815))

(declare-fun m!65817 () Bool)

(assert (=> b!69470 m!65817))

(declare-fun m!65819 () Bool)

(assert (=> b!69470 m!65819))

(assert (=> b!69470 m!65819))

(declare-fun m!65821 () Bool)

(assert (=> b!69470 m!65821))

(assert (=> b!69472 m!65819))

(assert (=> b!69472 m!65819))

(assert (=> b!69472 m!65821))

(assert (=> bm!5901 d!15183))

(declare-fun d!15185 () Bool)

(declare-fun res!37269 () Bool)

(declare-fun e!45479 () Bool)

(assert (=> d!15185 (=> res!37269 e!45479)))

(assert (=> d!15185 (= res!37269 (and ((_ is Cons!1466) lt!29995) (= (_1!1056 (h!2051 lt!29995)) (_1!1056 lt!29680))))))

(assert (=> d!15185 (= (containsKey!133 lt!29995 (_1!1056 lt!29680)) e!45479)))

(declare-fun b!69473 () Bool)

(declare-fun e!45480 () Bool)

(assert (=> b!69473 (= e!45479 e!45480)))

(declare-fun res!37270 () Bool)

(assert (=> b!69473 (=> (not res!37270) (not e!45480))))

(assert (=> b!69473 (= res!37270 (and (or (not ((_ is Cons!1466) lt!29995)) (bvsle (_1!1056 (h!2051 lt!29995)) (_1!1056 lt!29680))) ((_ is Cons!1466) lt!29995) (bvslt (_1!1056 (h!2051 lt!29995)) (_1!1056 lt!29680))))))

(declare-fun b!69474 () Bool)

(assert (=> b!69474 (= e!45480 (containsKey!133 (t!4964 lt!29995) (_1!1056 lt!29680)))))

(assert (= (and d!15185 (not res!37269)) b!69473))

(assert (= (and b!69473 res!37270) b!69474))

(declare-fun m!65823 () Bool)

(assert (=> b!69474 m!65823))

(assert (=> b!68734 d!15185))

(declare-fun d!15187 () Bool)

(declare-fun res!37271 () Bool)

(declare-fun e!45481 () Bool)

(assert (=> d!15187 (=> res!37271 e!45481)))

(assert (=> d!15187 (= res!37271 (and ((_ is Cons!1466) (toList!708 lt!29853)) (= (_1!1056 (h!2051 (toList!708 lt!29853))) (_1!1056 lt!29680))))))

(assert (=> d!15187 (= (containsKey!133 (toList!708 lt!29853) (_1!1056 lt!29680)) e!45481)))

(declare-fun b!69475 () Bool)

(declare-fun e!45482 () Bool)

(assert (=> b!69475 (= e!45481 e!45482)))

(declare-fun res!37272 () Bool)

(assert (=> b!69475 (=> (not res!37272) (not e!45482))))

(assert (=> b!69475 (= res!37272 (and (or (not ((_ is Cons!1466) (toList!708 lt!29853))) (bvsle (_1!1056 (h!2051 (toList!708 lt!29853))) (_1!1056 lt!29680))) ((_ is Cons!1466) (toList!708 lt!29853)) (bvslt (_1!1056 (h!2051 (toList!708 lt!29853))) (_1!1056 lt!29680))))))

(declare-fun b!69476 () Bool)

(assert (=> b!69476 (= e!45482 (containsKey!133 (t!4964 (toList!708 lt!29853)) (_1!1056 lt!29680)))))

(assert (= (and d!15187 (not res!37271)) b!69475))

(assert (= (and b!69475 res!37272) b!69476))

(declare-fun m!65825 () Bool)

(assert (=> b!69476 m!65825))

(assert (=> d!14895 d!15187))

(declare-fun d!15189 () Bool)

(declare-fun lt!30556 () Bool)

(assert (=> d!15189 (= lt!30556 (select (content!73 (t!4964 (toList!708 lt!29861))) lt!29675))))

(declare-fun e!45484 () Bool)

(assert (=> d!15189 (= lt!30556 e!45484)))

(declare-fun res!37274 () Bool)

(assert (=> d!15189 (=> (not res!37274) (not e!45484))))

(assert (=> d!15189 (= res!37274 ((_ is Cons!1466) (t!4964 (toList!708 lt!29861))))))

(assert (=> d!15189 (= (contains!711 (t!4964 (toList!708 lt!29861)) lt!29675) lt!30556)))

(declare-fun b!69477 () Bool)

(declare-fun e!45483 () Bool)

(assert (=> b!69477 (= e!45484 e!45483)))

(declare-fun res!37273 () Bool)

(assert (=> b!69477 (=> res!37273 e!45483)))

(assert (=> b!69477 (= res!37273 (= (h!2051 (t!4964 (toList!708 lt!29861))) lt!29675))))

(declare-fun b!69478 () Bool)

(assert (=> b!69478 (= e!45483 (contains!711 (t!4964 (t!4964 (toList!708 lt!29861))) lt!29675))))

(assert (= (and d!15189 res!37274) b!69477))

(assert (= (and b!69477 (not res!37273)) b!69478))

(assert (=> d!15189 m!65671))

(declare-fun m!65827 () Bool)

(assert (=> d!15189 m!65827))

(declare-fun m!65829 () Bool)

(assert (=> b!69478 m!65829))

(assert (=> b!68743 d!15189))

(declare-fun d!15191 () Bool)

(assert (=> d!15191 (= (get!1129 (getValueByKey!129 (toList!708 (+!89 lt!29814 (tuple2!2091 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))) lt!29801)) (v!2491 (getValueByKey!129 (toList!708 (+!89 lt!29814 (tuple2!2091 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))) lt!29801)))))

(assert (=> d!14845 d!15191))

(declare-fun e!45486 () Option!135)

(declare-fun b!69481 () Bool)

(assert (=> b!69481 (= e!45486 (getValueByKey!129 (t!4964 (toList!708 (+!89 lt!29814 (tuple2!2091 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))) lt!29801))))

(declare-fun b!69479 () Bool)

(declare-fun e!45485 () Option!135)

(assert (=> b!69479 (= e!45485 (Some!134 (_2!1056 (h!2051 (toList!708 (+!89 lt!29814 (tuple2!2091 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))))))))

(declare-fun b!69482 () Bool)

(assert (=> b!69482 (= e!45486 None!133)))

(declare-fun d!15193 () Bool)

(declare-fun c!9940 () Bool)

(assert (=> d!15193 (= c!9940 (and ((_ is Cons!1466) (toList!708 (+!89 lt!29814 (tuple2!2091 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))) (= (_1!1056 (h!2051 (toList!708 (+!89 lt!29814 (tuple2!2091 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))) lt!29801)))))

(assert (=> d!15193 (= (getValueByKey!129 (toList!708 (+!89 lt!29814 (tuple2!2091 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))) lt!29801) e!45485)))

(declare-fun b!69480 () Bool)

(assert (=> b!69480 (= e!45485 e!45486)))

(declare-fun c!9941 () Bool)

(assert (=> b!69480 (= c!9941 (and ((_ is Cons!1466) (toList!708 (+!89 lt!29814 (tuple2!2091 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))) (not (= (_1!1056 (h!2051 (toList!708 (+!89 lt!29814 (tuple2!2091 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))) lt!29801))))))

(assert (= (and d!15193 c!9940) b!69479))

(assert (= (and d!15193 (not c!9940)) b!69480))

(assert (= (and b!69480 c!9941) b!69481))

(assert (= (and b!69480 (not c!9941)) b!69482))

(declare-fun m!65831 () Bool)

(assert (=> b!69481 m!65831))

(assert (=> d!14845 d!15193))

(declare-fun b!69483 () Bool)

(declare-fun e!45492 () Bool)

(declare-fun lt!30557 () ListLongMap!1385)

(assert (=> b!69483 (= e!45492 (isEmpty!314 lt!30557))))

(declare-fun b!69484 () Bool)

(declare-fun e!45490 () Bool)

(declare-fun e!45488 () Bool)

(assert (=> b!69484 (= e!45490 e!45488)))

(assert (=> b!69484 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2065 (_keys!3810 (v!2485 (underlying!247 thiss!992))))))))

(declare-fun res!37276 () Bool)

(assert (=> b!69484 (= res!37276 (contains!709 lt!30557 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!69484 (=> (not res!37276) (not e!45488))))

(declare-fun b!69485 () Bool)

(declare-fun e!45491 () ListLongMap!1385)

(declare-fun e!45489 () ListLongMap!1385)

(assert (=> b!69485 (= e!45491 e!45489)))

(declare-fun c!9945 () Bool)

(assert (=> b!69485 (= c!9945 (validKeyInArray!0 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!69486 () Bool)

(declare-fun lt!30562 () Unit!1898)

(declare-fun lt!30563 () Unit!1898)

(assert (=> b!69486 (= lt!30562 lt!30563)))

(declare-fun lt!30560 () ListLongMap!1385)

(declare-fun lt!30559 () (_ BitVec 64))

(declare-fun lt!30561 () (_ BitVec 64))

(declare-fun lt!30558 () V!2921)

(assert (=> b!69486 (not (contains!709 (+!89 lt!30560 (tuple2!2091 lt!30559 lt!30558)) lt!30561))))

(assert (=> b!69486 (= lt!30563 (addStillNotContains!23 lt!30560 lt!30559 lt!30558 lt!30561))))

(assert (=> b!69486 (= lt!30561 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!69486 (= lt!30558 (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!69486 (= lt!30559 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(declare-fun call!5947 () ListLongMap!1385)

(assert (=> b!69486 (= lt!30560 call!5947)))

(assert (=> b!69486 (= e!45489 (+!89 call!5947 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!69487 () Bool)

(assert (=> b!69487 (= e!45492 (= lt!30557 (getCurrentListMapNoExtraKeys!53 (_keys!3810 (v!2485 (underlying!247 thiss!992))) (_values!2150 (v!2485 (underlying!247 thiss!992))) (mask!6111 (v!2485 (underlying!247 thiss!992))) (extraKeys!2034 (v!2485 (underlying!247 thiss!992))) (zeroValue!2073 (v!2485 (underlying!247 thiss!992))) (minValue!2073 (v!2485 (underlying!247 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))))))))

(declare-fun b!69488 () Bool)

(assert (=> b!69488 (= e!45491 (ListLongMap!1386 Nil!1467))))

(declare-fun b!69489 () Bool)

(declare-fun e!45487 () Bool)

(assert (=> b!69489 (= e!45487 e!45490)))

(declare-fun c!9942 () Bool)

(declare-fun e!45493 () Bool)

(assert (=> b!69489 (= c!9942 e!45493)))

(declare-fun res!37278 () Bool)

(assert (=> b!69489 (=> (not res!37278) (not e!45493))))

(assert (=> b!69489 (= res!37278 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2065 (_keys!3810 (v!2485 (underlying!247 thiss!992))))))))

(declare-fun b!69490 () Bool)

(declare-fun res!37275 () Bool)

(assert (=> b!69490 (=> (not res!37275) (not e!45487))))

(assert (=> b!69490 (= res!37275 (not (contains!709 lt!30557 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!69491 () Bool)

(assert (=> b!69491 (= e!45490 e!45492)))

(declare-fun c!9943 () Bool)

(assert (=> b!69491 (= c!9943 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2065 (_keys!3810 (v!2485 (underlying!247 thiss!992))))))))

(declare-fun d!15195 () Bool)

(assert (=> d!15195 e!45487))

(declare-fun res!37277 () Bool)

(assert (=> d!15195 (=> (not res!37277) (not e!45487))))

(assert (=> d!15195 (= res!37277 (not (contains!709 lt!30557 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!15195 (= lt!30557 e!45491)))

(declare-fun c!9944 () Bool)

(assert (=> d!15195 (= c!9944 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2065 (_keys!3810 (v!2485 (underlying!247 thiss!992))))))))

(assert (=> d!15195 (validMask!0 (mask!6111 (v!2485 (underlying!247 thiss!992))))))

(assert (=> d!15195 (= (getCurrentListMapNoExtraKeys!53 (_keys!3810 (v!2485 (underlying!247 thiss!992))) (_values!2150 (v!2485 (underlying!247 thiss!992))) (mask!6111 (v!2485 (underlying!247 thiss!992))) (extraKeys!2034 (v!2485 (underlying!247 thiss!992))) (zeroValue!2073 (v!2485 (underlying!247 thiss!992))) (minValue!2073 (v!2485 (underlying!247 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2167 (v!2485 (underlying!247 thiss!992)))) lt!30557)))

(declare-fun bm!5944 () Bool)

(assert (=> bm!5944 (= call!5947 (getCurrentListMapNoExtraKeys!53 (_keys!3810 (v!2485 (underlying!247 thiss!992))) (_values!2150 (v!2485 (underlying!247 thiss!992))) (mask!6111 (v!2485 (underlying!247 thiss!992))) (extraKeys!2034 (v!2485 (underlying!247 thiss!992))) (zeroValue!2073 (v!2485 (underlying!247 thiss!992))) (minValue!2073 (v!2485 (underlying!247 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2167 (v!2485 (underlying!247 thiss!992)))))))

(declare-fun b!69492 () Bool)

(assert (=> b!69492 (= e!45489 call!5947)))

(declare-fun b!69493 () Bool)

(assert (=> b!69493 (= e!45493 (validKeyInArray!0 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!69493 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!69494 () Bool)

(assert (=> b!69494 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2065 (_keys!3810 (v!2485 (underlying!247 thiss!992))))))))

(assert (=> b!69494 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2066 (_values!2150 (v!2485 (underlying!247 thiss!992))))))))

(assert (=> b!69494 (= e!45488 (= (apply!73 lt!30557 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!15195 c!9944) b!69488))

(assert (= (and d!15195 (not c!9944)) b!69485))

(assert (= (and b!69485 c!9945) b!69486))

(assert (= (and b!69485 (not c!9945)) b!69492))

(assert (= (or b!69486 b!69492) bm!5944))

(assert (= (and d!15195 res!37277) b!69490))

(assert (= (and b!69490 res!37275) b!69489))

(assert (= (and b!69489 res!37278) b!69493))

(assert (= (and b!69489 c!9942) b!69484))

(assert (= (and b!69489 (not c!9942)) b!69491))

(assert (= (and b!69484 res!37276) b!69494))

(assert (= (and b!69491 c!9943) b!69487))

(assert (= (and b!69491 (not c!9943)) b!69483))

(declare-fun b_lambda!3109 () Bool)

(assert (=> (not b_lambda!3109) (not b!69486)))

(assert (=> b!69486 t!4961))

(declare-fun b_and!4277 () Bool)

(assert (= b_and!4273 (and (=> t!4961 result!2595) b_and!4277)))

(assert (=> b!69486 t!4963))

(declare-fun b_and!4279 () Bool)

(assert (= b_and!4275 (and (=> t!4963 result!2599) b_and!4279)))

(declare-fun b_lambda!3111 () Bool)

(assert (=> (not b_lambda!3111) (not b!69494)))

(assert (=> b!69494 t!4961))

(declare-fun b_and!4281 () Bool)

(assert (= b_and!4277 (and (=> t!4961 result!2595) b_and!4281)))

(assert (=> b!69494 t!4963))

(declare-fun b_and!4283 () Bool)

(assert (= b_and!4279 (and (=> t!4963 result!2599) b_and!4283)))

(declare-fun m!65833 () Bool)

(assert (=> b!69493 m!65833))

(assert (=> b!69493 m!65833))

(declare-fun m!65835 () Bool)

(assert (=> b!69493 m!65835))

(assert (=> b!69485 m!65833))

(assert (=> b!69485 m!65833))

(assert (=> b!69485 m!65835))

(declare-fun m!65837 () Bool)

(assert (=> bm!5944 m!65837))

(assert (=> b!69487 m!65837))

(assert (=> b!69484 m!65833))

(assert (=> b!69484 m!65833))

(declare-fun m!65839 () Bool)

(assert (=> b!69484 m!65839))

(declare-fun m!65841 () Bool)

(assert (=> b!69494 m!65841))

(assert (=> b!69494 m!63771))

(declare-fun m!65843 () Bool)

(assert (=> b!69494 m!65843))

(assert (=> b!69494 m!65833))

(declare-fun m!65845 () Bool)

(assert (=> b!69494 m!65845))

(assert (=> b!69494 m!63771))

(assert (=> b!69494 m!65841))

(assert (=> b!69494 m!65833))

(declare-fun m!65847 () Bool)

(assert (=> b!69483 m!65847))

(declare-fun m!65849 () Bool)

(assert (=> b!69486 m!65849))

(assert (=> b!69486 m!65841))

(assert (=> b!69486 m!63771))

(assert (=> b!69486 m!65843))

(assert (=> b!69486 m!63771))

(declare-fun m!65851 () Bool)

(assert (=> b!69486 m!65851))

(declare-fun m!65853 () Bool)

(assert (=> b!69486 m!65853))

(assert (=> b!69486 m!65841))

(assert (=> b!69486 m!65851))

(declare-fun m!65855 () Bool)

(assert (=> b!69486 m!65855))

(assert (=> b!69486 m!65833))

(declare-fun m!65857 () Bool)

(assert (=> d!15195 m!65857))

(assert (=> d!15195 m!63787))

(declare-fun m!65859 () Bool)

(assert (=> b!69490 m!65859))

(assert (=> b!68991 d!15195))

(declare-fun d!15197 () Bool)

(assert (=> d!15197 (= (isDefined!83 (getValueByKey!129 (toList!708 lt!29861) (_1!1056 lt!29675))) (not (isEmpty!316 (getValueByKey!129 (toList!708 lt!29861) (_1!1056 lt!29675)))))))

(declare-fun bs!2993 () Bool)

(assert (= bs!2993 d!15197))

(assert (=> bs!2993 m!64057))

(declare-fun m!65861 () Bool)

(assert (=> bs!2993 m!65861))

(assert (=> b!68950 d!15197))

(assert (=> b!68950 d!14817))

(declare-fun d!15199 () Bool)

(declare-fun res!37279 () Bool)

(declare-fun e!45494 () Bool)

(assert (=> d!15199 (=> res!37279 e!45494)))

(assert (=> d!15199 (= res!37279 (and ((_ is Cons!1466) (toList!708 lt!29805)) (= (_1!1056 (h!2051 (toList!708 lt!29805))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!15199 (= (containsKey!133 (toList!708 lt!29805) #b0000000000000000000000000000000000000000000000000000000000000000) e!45494)))

(declare-fun b!69495 () Bool)

(declare-fun e!45495 () Bool)

(assert (=> b!69495 (= e!45494 e!45495)))

(declare-fun res!37280 () Bool)

(assert (=> b!69495 (=> (not res!37280) (not e!45495))))

(assert (=> b!69495 (= res!37280 (and (or (not ((_ is Cons!1466) (toList!708 lt!29805))) (bvsle (_1!1056 (h!2051 (toList!708 lt!29805))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1466) (toList!708 lt!29805)) (bvslt (_1!1056 (h!2051 (toList!708 lt!29805))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!69496 () Bool)

(assert (=> b!69496 (= e!45495 (containsKey!133 (t!4964 (toList!708 lt!29805)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!15199 (not res!37279)) b!69495))

(assert (= (and b!69495 res!37280) b!69496))

(declare-fun m!65863 () Bool)

(assert (=> b!69496 m!65863))

(assert (=> d!14829 d!15199))

(declare-fun d!15201 () Bool)

(declare-fun res!37281 () Bool)

(declare-fun e!45496 () Bool)

(assert (=> d!15201 (=> res!37281 e!45496)))

(assert (=> d!15201 (= res!37281 (and ((_ is Cons!1466) lt!29859) (= (_1!1056 (h!2051 lt!29859)) (_1!1056 lt!29675))))))

(assert (=> d!15201 (= (containsKey!133 lt!29859 (_1!1056 lt!29675)) e!45496)))

(declare-fun b!69497 () Bool)

(declare-fun e!45497 () Bool)

(assert (=> b!69497 (= e!45496 e!45497)))

(declare-fun res!37282 () Bool)

(assert (=> b!69497 (=> (not res!37282) (not e!45497))))

(assert (=> b!69497 (= res!37282 (and (or (not ((_ is Cons!1466) lt!29859)) (bvsle (_1!1056 (h!2051 lt!29859)) (_1!1056 lt!29675))) ((_ is Cons!1466) lt!29859) (bvslt (_1!1056 (h!2051 lt!29859)) (_1!1056 lt!29675))))))

(declare-fun b!69498 () Bool)

(assert (=> b!69498 (= e!45497 (containsKey!133 (t!4964 lt!29859) (_1!1056 lt!29675)))))

(assert (= (and d!15201 (not res!37281)) b!69497))

(assert (= (and b!69497 res!37282) b!69498))

(declare-fun m!65865 () Bool)

(assert (=> b!69498 m!65865))

(assert (=> b!68955 d!15201))

(assert (=> d!14861 d!14857))

(assert (=> d!14861 d!14847))

(declare-fun d!15203 () Bool)

(declare-fun e!45499 () Bool)

(assert (=> d!15203 e!45499))

(declare-fun res!37283 () Bool)

(assert (=> d!15203 (=> res!37283 e!45499)))

(declare-fun lt!30567 () Bool)

(assert (=> d!15203 (= res!37283 (not lt!30567))))

(declare-fun lt!30566 () Bool)

(assert (=> d!15203 (= lt!30567 lt!30566)))

(declare-fun lt!30565 () Unit!1898)

(declare-fun e!45498 () Unit!1898)

(assert (=> d!15203 (= lt!30565 e!45498)))

(declare-fun c!9946 () Bool)

(assert (=> d!15203 (= c!9946 lt!30566)))

(assert (=> d!15203 (= lt!30566 (containsKey!133 (toList!708 lt!29800) lt!29809))))

(assert (=> d!15203 (= (contains!709 lt!29800 lt!29809) lt!30567)))

(declare-fun b!69499 () Bool)

(declare-fun lt!30564 () Unit!1898)

(assert (=> b!69499 (= e!45498 lt!30564)))

(assert (=> b!69499 (= lt!30564 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 lt!29800) lt!29809))))

(assert (=> b!69499 (isDefined!83 (getValueByKey!129 (toList!708 lt!29800) lt!29809))))

(declare-fun b!69500 () Bool)

(declare-fun Unit!1945 () Unit!1898)

(assert (=> b!69500 (= e!45498 Unit!1945)))

(declare-fun b!69501 () Bool)

(assert (=> b!69501 (= e!45499 (isDefined!83 (getValueByKey!129 (toList!708 lt!29800) lt!29809)))))

(assert (= (and d!15203 c!9946) b!69499))

(assert (= (and d!15203 (not c!9946)) b!69500))

(assert (= (and d!15203 (not res!37283)) b!69501))

(declare-fun m!65867 () Bool)

(assert (=> d!15203 m!65867))

(declare-fun m!65869 () Bool)

(assert (=> b!69499 m!65869))

(assert (=> b!69499 m!64855))

(assert (=> b!69499 m!64855))

(declare-fun m!65871 () Bool)

(assert (=> b!69499 m!65871))

(assert (=> b!69501 m!64855))

(assert (=> b!69501 m!64855))

(assert (=> b!69501 m!65871))

(assert (=> d!14861 d!15203))

(assert (=> d!14861 d!14855))

(declare-fun d!15205 () Bool)

(assert (=> d!15205 (= (apply!73 (+!89 lt!29800 (tuple2!2091 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))) lt!29809) (apply!73 lt!29800 lt!29809))))

(assert (=> d!15205 true))

(declare-fun _$34!791 () Unit!1898)

(assert (=> d!15205 (= (choose!396 lt!29800 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))) lt!29809) _$34!791)))

(declare-fun bs!2994 () Bool)

(assert (= bs!2994 d!15205))

(assert (=> bs!2994 m!63967))

(assert (=> bs!2994 m!63967))

(assert (=> bs!2994 m!63973))

(assert (=> bs!2994 m!63989))

(assert (=> d!14861 d!15205))

(declare-fun d!15207 () Bool)

(assert (=> d!15207 (= (+!89 (getCurrentListMap!403 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)) (getCurrentListMap!403 (_keys!3810 newMap!16) (array!3834 (store (arr!1829 (_values!2150 newMap!16)) (index!3078 lt!29944) (ValueCellFull!884 lt!29673)) (size!2066 (_values!2150 newMap!16))) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(assert (=> d!15207 true))

(declare-fun _$5!74 () Unit!1898)

(assert (=> d!15207 (= (choose!394 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (index!3078 lt!29944) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673 (defaultEntry!2167 newMap!16)) _$5!74)))

(declare-fun bs!2995 () Bool)

(assert (= bs!2995 d!15207))

(assert (=> bs!2995 m!63945))

(assert (=> bs!2995 m!63945))

(assert (=> bs!2995 m!64583))

(assert (=> bs!2995 m!64111))

(assert (=> bs!2995 m!64647))

(assert (=> d!14805 d!15207))

(assert (=> d!14805 d!15017))

(declare-fun d!15209 () Bool)

(declare-fun e!45501 () Bool)

(assert (=> d!15209 e!45501))

(declare-fun res!37284 () Bool)

(assert (=> d!15209 (=> res!37284 e!45501)))

(declare-fun lt!30571 () Bool)

(assert (=> d!15209 (= res!37284 (not lt!30571))))

(declare-fun lt!30570 () Bool)

(assert (=> d!15209 (= lt!30571 lt!30570)))

(declare-fun lt!30569 () Unit!1898)

(declare-fun e!45500 () Unit!1898)

(assert (=> d!15209 (= lt!30569 e!45500)))

(declare-fun c!9947 () Bool)

(assert (=> d!15209 (= c!9947 lt!30570)))

(assert (=> d!15209 (= lt!30570 (containsKey!133 (toList!708 lt!30062) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))

(assert (=> d!15209 (= (contains!709 lt!30062 (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))) lt!30571)))

(declare-fun b!69503 () Bool)

(declare-fun lt!30568 () Unit!1898)

(assert (=> b!69503 (= e!45500 lt!30568)))

(assert (=> b!69503 (= lt!30568 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 lt!30062) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))

(assert (=> b!69503 (isDefined!83 (getValueByKey!129 (toList!708 lt!30062) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))

(declare-fun b!69504 () Bool)

(declare-fun Unit!1946 () Unit!1898)

(assert (=> b!69504 (= e!45500 Unit!1946)))

(declare-fun b!69505 () Bool)

(assert (=> b!69505 (= e!45501 (isDefined!83 (getValueByKey!129 (toList!708 lt!30062) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))))))

(assert (= (and d!15209 c!9947) b!69503))

(assert (= (and d!15209 (not c!9947)) b!69504))

(assert (= (and d!15209 (not res!37284)) b!69505))

(declare-fun m!65873 () Bool)

(assert (=> d!15209 m!65873))

(declare-fun m!65875 () Bool)

(assert (=> b!69503 m!65875))

(assert (=> b!69503 m!64395))

(assert (=> b!69503 m!64395))

(declare-fun m!65877 () Bool)

(assert (=> b!69503 m!65877))

(assert (=> b!69505 m!64395))

(assert (=> b!69505 m!64395))

(assert (=> b!69505 m!65877))

(assert (=> d!14735 d!15209))

(declare-fun b!69508 () Bool)

(declare-fun e!45503 () Option!135)

(assert (=> b!69508 (= e!45503 (getValueByKey!129 (t!4964 lt!30060) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))

(declare-fun b!69506 () Bool)

(declare-fun e!45502 () Option!135)

(assert (=> b!69506 (= e!45502 (Some!134 (_2!1056 (h!2051 lt!30060))))))

(declare-fun b!69509 () Bool)

(assert (=> b!69509 (= e!45503 None!133)))

(declare-fun d!15211 () Bool)

(declare-fun c!9948 () Bool)

(assert (=> d!15211 (= c!9948 (and ((_ is Cons!1466) lt!30060) (= (_1!1056 (h!2051 lt!30060)) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))))))

(assert (=> d!15211 (= (getValueByKey!129 lt!30060 (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))) e!45502)))

(declare-fun b!69507 () Bool)

(assert (=> b!69507 (= e!45502 e!45503)))

(declare-fun c!9949 () Bool)

(assert (=> b!69507 (= c!9949 (and ((_ is Cons!1466) lt!30060) (not (= (_1!1056 (h!2051 lt!30060)) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))))

(assert (= (and d!15211 c!9948) b!69506))

(assert (= (and d!15211 (not c!9948)) b!69507))

(assert (= (and b!69507 c!9949) b!69508))

(assert (= (and b!69507 (not c!9949)) b!69509))

(declare-fun m!65879 () Bool)

(assert (=> b!69508 m!65879))

(assert (=> d!14735 d!15211))

(declare-fun d!15213 () Bool)

(assert (=> d!15213 (= (getValueByKey!129 lt!30060 (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))) (Some!134 (_2!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))

(declare-fun lt!30572 () Unit!1898)

(assert (=> d!15213 (= lt!30572 (choose!390 lt!30060 (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)) (_2!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))

(declare-fun e!45504 () Bool)

(assert (=> d!15213 e!45504))

(declare-fun res!37285 () Bool)

(assert (=> d!15213 (=> (not res!37285) (not e!45504))))

(assert (=> d!15213 (= res!37285 (isStrictlySorted!285 lt!30060))))

(assert (=> d!15213 (= (lemmaContainsTupThenGetReturnValue!49 lt!30060 (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)) (_2!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))) lt!30572)))

(declare-fun b!69510 () Bool)

(declare-fun res!37286 () Bool)

(assert (=> b!69510 (=> (not res!37286) (not e!45504))))

(assert (=> b!69510 (= res!37286 (containsKey!133 lt!30060 (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))

(declare-fun b!69511 () Bool)

(assert (=> b!69511 (= e!45504 (contains!711 lt!30060 (tuple2!2091 (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)) (_2!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))))))

(assert (= (and d!15213 res!37285) b!69510))

(assert (= (and b!69510 res!37286) b!69511))

(assert (=> d!15213 m!64389))

(declare-fun m!65881 () Bool)

(assert (=> d!15213 m!65881))

(declare-fun m!65883 () Bool)

(assert (=> d!15213 m!65883))

(declare-fun m!65885 () Bool)

(assert (=> b!69510 m!65885))

(declare-fun m!65887 () Bool)

(assert (=> b!69511 m!65887))

(assert (=> d!14735 d!15213))

(declare-fun b!69512 () Bool)

(declare-fun e!45508 () List!1470)

(declare-fun call!5949 () List!1470)

(assert (=> b!69512 (= e!45508 call!5949)))

(declare-fun c!9950 () Bool)

(declare-fun b!69513 () Bool)

(assert (=> b!69513 (= c!9950 (and ((_ is Cons!1466) (toList!708 (+!89 lt!29682 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))) (bvsgt (_1!1056 (h!2051 (toList!708 (+!89 lt!29682 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))))))

(declare-fun e!45506 () List!1470)

(assert (=> b!69513 (= e!45506 e!45508)))

(declare-fun b!69514 () Bool)

(assert (=> b!69514 (= e!45508 call!5949)))

(declare-fun b!69516 () Bool)

(declare-fun call!5948 () List!1470)

(assert (=> b!69516 (= e!45506 call!5948)))

(declare-fun bm!5945 () Bool)

(declare-fun call!5950 () List!1470)

(assert (=> bm!5945 (= call!5948 call!5950)))

(declare-fun bm!5946 () Bool)

(assert (=> bm!5946 (= call!5949 call!5948)))

(declare-fun b!69517 () Bool)

(declare-fun e!45505 () List!1470)

(assert (=> b!69517 (= e!45505 e!45506)))

(declare-fun c!9951 () Bool)

(assert (=> b!69517 (= c!9951 (and ((_ is Cons!1466) (toList!708 (+!89 lt!29682 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))) (= (_1!1056 (h!2051 (toList!708 (+!89 lt!29682 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))))))

(declare-fun bm!5947 () Bool)

(declare-fun c!9953 () Bool)

(declare-fun e!45507 () List!1470)

(assert (=> bm!5947 (= call!5950 ($colon$colon!63 e!45507 (ite c!9953 (h!2051 (toList!708 (+!89 lt!29682 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))) (tuple2!2091 (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)) (_2!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))))

(declare-fun c!9952 () Bool)

(assert (=> bm!5947 (= c!9952 c!9953)))

(declare-fun b!69518 () Bool)

(declare-fun res!37288 () Bool)

(declare-fun e!45509 () Bool)

(assert (=> b!69518 (=> (not res!37288) (not e!45509))))

(declare-fun lt!30573 () List!1470)

(assert (=> b!69518 (= res!37288 (containsKey!133 lt!30573 (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))

(declare-fun b!69519 () Bool)

(assert (=> b!69519 (= e!45509 (contains!711 lt!30573 (tuple2!2091 (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)) (_2!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))))))

(declare-fun b!69520 () Bool)

(assert (=> b!69520 (= e!45507 (ite c!9951 (t!4964 (toList!708 (+!89 lt!29682 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))) (ite c!9950 (Cons!1466 (h!2051 (toList!708 (+!89 lt!29682 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))) (t!4964 (toList!708 (+!89 lt!29682 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))) Nil!1467)))))

(declare-fun b!69521 () Bool)

(assert (=> b!69521 (= e!45505 call!5950)))

(declare-fun d!15215 () Bool)

(assert (=> d!15215 e!45509))

(declare-fun res!37287 () Bool)

(assert (=> d!15215 (=> (not res!37287) (not e!45509))))

(assert (=> d!15215 (= res!37287 (isStrictlySorted!285 lt!30573))))

(assert (=> d!15215 (= lt!30573 e!45505)))

(assert (=> d!15215 (= c!9953 (and ((_ is Cons!1466) (toList!708 (+!89 lt!29682 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))) (bvslt (_1!1056 (h!2051 (toList!708 (+!89 lt!29682 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))))))

(assert (=> d!15215 (isStrictlySorted!285 (toList!708 (+!89 lt!29682 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(assert (=> d!15215 (= (insertStrictlySorted!52 (toList!708 (+!89 lt!29682 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)) (_2!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))) lt!30573)))

(declare-fun b!69515 () Bool)

(assert (=> b!69515 (= e!45507 (insertStrictlySorted!52 (t!4964 (toList!708 (+!89 lt!29682 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)) (_2!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))

(assert (= (and d!15215 c!9953) b!69521))

(assert (= (and d!15215 (not c!9953)) b!69517))

(assert (= (and b!69517 c!9951) b!69516))

(assert (= (and b!69517 (not c!9951)) b!69513))

(assert (= (and b!69513 c!9950) b!69514))

(assert (= (and b!69513 (not c!9950)) b!69512))

(assert (= (or b!69514 b!69512) bm!5946))

(assert (= (or b!69516 bm!5946) bm!5945))

(assert (= (or b!69521 bm!5945) bm!5947))

(assert (= (and bm!5947 c!9952) b!69515))

(assert (= (and bm!5947 (not c!9952)) b!69520))

(assert (= (and d!15215 res!37287) b!69518))

(assert (= (and b!69518 res!37288) b!69519))

(declare-fun m!65889 () Bool)

(assert (=> d!15215 m!65889))

(declare-fun m!65891 () Bool)

(assert (=> d!15215 m!65891))

(declare-fun m!65893 () Bool)

(assert (=> b!69519 m!65893))

(declare-fun m!65895 () Bool)

(assert (=> b!69518 m!65895))

(declare-fun m!65897 () Bool)

(assert (=> bm!5947 m!65897))

(declare-fun m!65899 () Bool)

(assert (=> b!69515 m!65899))

(assert (=> d!14735 d!15215))

(declare-fun d!15217 () Bool)

(declare-fun e!45511 () Bool)

(assert (=> d!15217 e!45511))

(declare-fun res!37289 () Bool)

(assert (=> d!15217 (=> res!37289 e!45511)))

(declare-fun lt!30577 () Bool)

(assert (=> d!15217 (= res!37289 (not lt!30577))))

(declare-fun lt!30576 () Bool)

(assert (=> d!15217 (= lt!30577 lt!30576)))

(declare-fun lt!30575 () Unit!1898)

(declare-fun e!45510 () Unit!1898)

(assert (=> d!15217 (= lt!30575 e!45510)))

(declare-fun c!9954 () Bool)

(assert (=> d!15217 (= c!9954 lt!30576)))

(assert (=> d!15217 (= lt!30576 (containsKey!133 (toList!708 lt!30276) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))

(assert (=> d!15217 (= (contains!709 lt!30276 (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))) lt!30577)))

(declare-fun b!69522 () Bool)

(declare-fun lt!30574 () Unit!1898)

(assert (=> b!69522 (= e!45510 lt!30574)))

(assert (=> b!69522 (= lt!30574 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 lt!30276) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))

(assert (=> b!69522 (isDefined!83 (getValueByKey!129 (toList!708 lt!30276) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))

(declare-fun b!69523 () Bool)

(declare-fun Unit!1947 () Unit!1898)

(assert (=> b!69523 (= e!45510 Unit!1947)))

(declare-fun b!69524 () Bool)

(assert (=> b!69524 (= e!45511 (isDefined!83 (getValueByKey!129 (toList!708 lt!30276) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))))))

(assert (= (and d!15217 c!9954) b!69522))

(assert (= (and d!15217 (not c!9954)) b!69523))

(assert (= (and d!15217 (not res!37289)) b!69524))

(declare-fun m!65901 () Bool)

(assert (=> d!15217 m!65901))

(declare-fun m!65903 () Bool)

(assert (=> b!69522 m!65903))

(assert (=> b!69522 m!64791))

(assert (=> b!69522 m!64791))

(declare-fun m!65905 () Bool)

(assert (=> b!69522 m!65905))

(assert (=> b!69524 m!64791))

(assert (=> b!69524 m!64791))

(assert (=> b!69524 m!65905))

(assert (=> d!14837 d!15217))

(declare-fun e!45513 () Option!135)

(declare-fun b!69527 () Bool)

(assert (=> b!69527 (= e!45513 (getValueByKey!129 (t!4964 lt!30274) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))

(declare-fun b!69525 () Bool)

(declare-fun e!45512 () Option!135)

(assert (=> b!69525 (= e!45512 (Some!134 (_2!1056 (h!2051 lt!30274))))))

(declare-fun b!69528 () Bool)

(assert (=> b!69528 (= e!45513 None!133)))

(declare-fun c!9955 () Bool)

(declare-fun d!15219 () Bool)

(assert (=> d!15219 (= c!9955 (and ((_ is Cons!1466) lt!30274) (= (_1!1056 (h!2051 lt!30274)) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))))))

(assert (=> d!15219 (= (getValueByKey!129 lt!30274 (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))) e!45512)))

(declare-fun b!69526 () Bool)

(assert (=> b!69526 (= e!45512 e!45513)))

(declare-fun c!9956 () Bool)

(assert (=> b!69526 (= c!9956 (and ((_ is Cons!1466) lt!30274) (not (= (_1!1056 (h!2051 lt!30274)) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))))

(assert (= (and d!15219 c!9955) b!69525))

(assert (= (and d!15219 (not c!9955)) b!69526))

(assert (= (and b!69526 c!9956) b!69527))

(assert (= (and b!69526 (not c!9956)) b!69528))

(declare-fun m!65907 () Bool)

(assert (=> b!69527 m!65907))

(assert (=> d!14837 d!15219))

(declare-fun d!15221 () Bool)

(assert (=> d!15221 (= (getValueByKey!129 lt!30274 (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))) (Some!134 (_2!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))

(declare-fun lt!30578 () Unit!1898)

(assert (=> d!15221 (= lt!30578 (choose!390 lt!30274 (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)) (_2!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))

(declare-fun e!45514 () Bool)

(assert (=> d!15221 e!45514))

(declare-fun res!37290 () Bool)

(assert (=> d!15221 (=> (not res!37290) (not e!45514))))

(assert (=> d!15221 (= res!37290 (isStrictlySorted!285 lt!30274))))

(assert (=> d!15221 (= (lemmaContainsTupThenGetReturnValue!49 lt!30274 (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)) (_2!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))) lt!30578)))

(declare-fun b!69529 () Bool)

(declare-fun res!37291 () Bool)

(assert (=> b!69529 (=> (not res!37291) (not e!45514))))

(assert (=> b!69529 (= res!37291 (containsKey!133 lt!30274 (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))

(declare-fun b!69530 () Bool)

(assert (=> b!69530 (= e!45514 (contains!711 lt!30274 (tuple2!2091 (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)) (_2!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))))))

(assert (= (and d!15221 res!37290) b!69529))

(assert (= (and b!69529 res!37291) b!69530))

(assert (=> d!15221 m!64785))

(declare-fun m!65909 () Bool)

(assert (=> d!15221 m!65909))

(declare-fun m!65911 () Bool)

(assert (=> d!15221 m!65911))

(declare-fun m!65913 () Bool)

(assert (=> b!69529 m!65913))

(declare-fun m!65915 () Bool)

(assert (=> b!69530 m!65915))

(assert (=> d!14837 d!15221))

(declare-fun b!69531 () Bool)

(declare-fun e!45518 () List!1470)

(declare-fun call!5952 () List!1470)

(assert (=> b!69531 (= e!45518 call!5952)))

(declare-fun c!9957 () Bool)

(declare-fun b!69532 () Bool)

(assert (=> b!69532 (= c!9957 (and ((_ is Cons!1466) (toList!708 call!5827)) (bvsgt (_1!1056 (h!2051 (toList!708 call!5827))) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))))))

(declare-fun e!45516 () List!1470)

(assert (=> b!69532 (= e!45516 e!45518)))

(declare-fun b!69533 () Bool)

(assert (=> b!69533 (= e!45518 call!5952)))

(declare-fun b!69535 () Bool)

(declare-fun call!5951 () List!1470)

(assert (=> b!69535 (= e!45516 call!5951)))

(declare-fun bm!5948 () Bool)

(declare-fun call!5953 () List!1470)

(assert (=> bm!5948 (= call!5951 call!5953)))

(declare-fun bm!5949 () Bool)

(assert (=> bm!5949 (= call!5952 call!5951)))

(declare-fun b!69536 () Bool)

(declare-fun e!45515 () List!1470)

(assert (=> b!69536 (= e!45515 e!45516)))

(declare-fun c!9958 () Bool)

(assert (=> b!69536 (= c!9958 (and ((_ is Cons!1466) (toList!708 call!5827)) (= (_1!1056 (h!2051 (toList!708 call!5827))) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))))))

(declare-fun e!45517 () List!1470)

(declare-fun c!9960 () Bool)

(declare-fun bm!5950 () Bool)

(assert (=> bm!5950 (= call!5953 ($colon$colon!63 e!45517 (ite c!9960 (h!2051 (toList!708 call!5827)) (tuple2!2091 (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)) (_2!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))))

(declare-fun c!9959 () Bool)

(assert (=> bm!5950 (= c!9959 c!9960)))

(declare-fun b!69537 () Bool)

(declare-fun res!37293 () Bool)

(declare-fun e!45519 () Bool)

(assert (=> b!69537 (=> (not res!37293) (not e!45519))))

(declare-fun lt!30579 () List!1470)

(assert (=> b!69537 (= res!37293 (containsKey!133 lt!30579 (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))

(declare-fun b!69538 () Bool)

(assert (=> b!69538 (= e!45519 (contains!711 lt!30579 (tuple2!2091 (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)) (_2!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))))))

(declare-fun b!69539 () Bool)

(assert (=> b!69539 (= e!45517 (ite c!9958 (t!4964 (toList!708 call!5827)) (ite c!9957 (Cons!1466 (h!2051 (toList!708 call!5827)) (t!4964 (toList!708 call!5827))) Nil!1467)))))

(declare-fun b!69540 () Bool)

(assert (=> b!69540 (= e!45515 call!5953)))

(declare-fun d!15223 () Bool)

(assert (=> d!15223 e!45519))

(declare-fun res!37292 () Bool)

(assert (=> d!15223 (=> (not res!37292) (not e!45519))))

(assert (=> d!15223 (= res!37292 (isStrictlySorted!285 lt!30579))))

(assert (=> d!15223 (= lt!30579 e!45515)))

(assert (=> d!15223 (= c!9960 (and ((_ is Cons!1466) (toList!708 call!5827)) (bvslt (_1!1056 (h!2051 (toList!708 call!5827))) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))))))

(assert (=> d!15223 (isStrictlySorted!285 (toList!708 call!5827))))

(assert (=> d!15223 (= (insertStrictlySorted!52 (toList!708 call!5827) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)) (_2!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))) lt!30579)))

(declare-fun b!69534 () Bool)

(assert (=> b!69534 (= e!45517 (insertStrictlySorted!52 (t!4964 (toList!708 call!5827)) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)) (_2!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))

(assert (= (and d!15223 c!9960) b!69540))

(assert (= (and d!15223 (not c!9960)) b!69536))

(assert (= (and b!69536 c!9958) b!69535))

(assert (= (and b!69536 (not c!9958)) b!69532))

(assert (= (and b!69532 c!9957) b!69533))

(assert (= (and b!69532 (not c!9957)) b!69531))

(assert (= (or b!69533 b!69531) bm!5949))

(assert (= (or b!69535 bm!5949) bm!5948))

(assert (= (or b!69540 bm!5948) bm!5950))

(assert (= (and bm!5950 c!9959) b!69534))

(assert (= (and bm!5950 (not c!9959)) b!69539))

(assert (= (and d!15223 res!37292) b!69537))

(assert (= (and b!69537 res!37293) b!69538))

(declare-fun m!65917 () Bool)

(assert (=> d!15223 m!65917))

(declare-fun m!65919 () Bool)

(assert (=> d!15223 m!65919))

(declare-fun m!65921 () Bool)

(assert (=> b!69538 m!65921))

(declare-fun m!65923 () Bool)

(assert (=> b!69537 m!65923))

(declare-fun m!65925 () Bool)

(assert (=> bm!5950 m!65925))

(declare-fun m!65927 () Bool)

(assert (=> b!69534 m!65927))

(assert (=> d!14837 d!15223))

(assert (=> d!14761 d!14759))

(declare-fun d!15225 () Bool)

(assert (=> d!15225 (= (getValueByKey!129 lt!29855 (_1!1056 lt!29675)) (Some!134 (_2!1056 lt!29675)))))

(assert (=> d!15225 true))

(declare-fun _$22!373 () Unit!1898)

(assert (=> d!15225 (= (choose!390 lt!29855 (_1!1056 lt!29675) (_2!1056 lt!29675)) _$22!373)))

(declare-fun bs!2996 () Bool)

(assert (= bs!2996 d!15225))

(assert (=> bs!2996 m!64039))

(assert (=> d!14761 d!15225))

(declare-fun d!15227 () Bool)

(declare-fun res!37294 () Bool)

(declare-fun e!45520 () Bool)

(assert (=> d!15227 (=> res!37294 e!45520)))

(assert (=> d!15227 (= res!37294 (or ((_ is Nil!1467) lt!29855) ((_ is Nil!1467) (t!4964 lt!29855))))))

(assert (=> d!15227 (= (isStrictlySorted!285 lt!29855) e!45520)))

(declare-fun b!69541 () Bool)

(declare-fun e!45521 () Bool)

(assert (=> b!69541 (= e!45520 e!45521)))

(declare-fun res!37295 () Bool)

(assert (=> b!69541 (=> (not res!37295) (not e!45521))))

(assert (=> b!69541 (= res!37295 (bvslt (_1!1056 (h!2051 lt!29855)) (_1!1056 (h!2051 (t!4964 lt!29855)))))))

(declare-fun b!69542 () Bool)

(assert (=> b!69542 (= e!45521 (isStrictlySorted!285 (t!4964 lt!29855)))))

(assert (= (and d!15227 (not res!37294)) b!69541))

(assert (= (and b!69541 res!37295) b!69542))

(declare-fun m!65929 () Bool)

(assert (=> b!69542 m!65929))

(assert (=> d!14761 d!15227))

(assert (=> d!14717 d!15017))

(declare-fun d!15229 () Bool)

(declare-fun lt!30580 () Bool)

(assert (=> d!15229 (= lt!30580 (select (content!73 lt!30093) (tuple2!2091 (_1!1056 lt!29675) (_2!1056 lt!29675))))))

(declare-fun e!45523 () Bool)

(assert (=> d!15229 (= lt!30580 e!45523)))

(declare-fun res!37297 () Bool)

(assert (=> d!15229 (=> (not res!37297) (not e!45523))))

(assert (=> d!15229 (= res!37297 ((_ is Cons!1466) lt!30093))))

(assert (=> d!15229 (= (contains!711 lt!30093 (tuple2!2091 (_1!1056 lt!29675) (_2!1056 lt!29675))) lt!30580)))

(declare-fun b!69543 () Bool)

(declare-fun e!45522 () Bool)

(assert (=> b!69543 (= e!45523 e!45522)))

(declare-fun res!37296 () Bool)

(assert (=> b!69543 (=> res!37296 e!45522)))

(assert (=> b!69543 (= res!37296 (= (h!2051 lt!30093) (tuple2!2091 (_1!1056 lt!29675) (_2!1056 lt!29675))))))

(declare-fun b!69544 () Bool)

(assert (=> b!69544 (= e!45522 (contains!711 (t!4964 lt!30093) (tuple2!2091 (_1!1056 lt!29675) (_2!1056 lt!29675))))))

(assert (= (and d!15229 res!37297) b!69543))

(assert (= (and b!69543 (not res!37296)) b!69544))

(declare-fun m!65931 () Bool)

(assert (=> d!15229 m!65931))

(declare-fun m!65933 () Bool)

(assert (=> d!15229 m!65933))

(declare-fun m!65935 () Bool)

(assert (=> b!69544 m!65935))

(assert (=> b!68849 d!15229))

(declare-fun d!15231 () Bool)

(assert (=> d!15231 (= (apply!73 lt!30027 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1129 (getValueByKey!129 (toList!708 lt!30027) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2997 () Bool)

(assert (= bs!2997 d!15231))

(declare-fun m!65937 () Bool)

(assert (=> bs!2997 m!65937))

(assert (=> bs!2997 m!65937))

(declare-fun m!65939 () Bool)

(assert (=> bs!2997 m!65939))

(assert (=> b!68778 d!15231))

(declare-fun d!15233 () Bool)

(assert (=> d!15233 (= (isDefined!83 (getValueByKey!129 (toList!708 call!5830) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355))) (not (isEmpty!316 (getValueByKey!129 (toList!708 call!5830) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))))

(declare-fun bs!2998 () Bool)

(assert (= bs!2998 d!15233))

(assert (=> bs!2998 m!64653))

(declare-fun m!65941 () Bool)

(assert (=> bs!2998 m!65941))

(assert (=> b!68981 d!15233))

(declare-fun e!45525 () Option!135)

(declare-fun b!69547 () Bool)

(assert (=> b!69547 (= e!45525 (getValueByKey!129 (t!4964 (toList!708 call!5830)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))

(declare-fun b!69545 () Bool)

(declare-fun e!45524 () Option!135)

(assert (=> b!69545 (= e!45524 (Some!134 (_2!1056 (h!2051 (toList!708 call!5830)))))))

(declare-fun b!69548 () Bool)

(assert (=> b!69548 (= e!45525 None!133)))

(declare-fun c!9961 () Bool)

(declare-fun d!15235 () Bool)

(assert (=> d!15235 (= c!9961 (and ((_ is Cons!1466) (toList!708 call!5830)) (= (_1!1056 (h!2051 (toList!708 call!5830))) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355))))))

(assert (=> d!15235 (= (getValueByKey!129 (toList!708 call!5830) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) e!45524)))

(declare-fun b!69546 () Bool)

(assert (=> b!69546 (= e!45524 e!45525)))

(declare-fun c!9962 () Bool)

(assert (=> b!69546 (= c!9962 (and ((_ is Cons!1466) (toList!708 call!5830)) (not (= (_1!1056 (h!2051 (toList!708 call!5830))) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))))

(assert (= (and d!15235 c!9961) b!69545))

(assert (= (and d!15235 (not c!9961)) b!69546))

(assert (= (and b!69546 c!9962) b!69547))

(assert (= (and b!69546 (not c!9962)) b!69548))

(assert (=> b!69547 m!63767))

(declare-fun m!65943 () Bool)

(assert (=> b!69547 m!65943))

(assert (=> b!68981 d!15235))

(declare-fun d!15237 () Bool)

(declare-fun res!37298 () Bool)

(declare-fun e!45526 () Bool)

(assert (=> d!15237 (=> res!37298 e!45526)))

(assert (=> d!15237 (= res!37298 (and ((_ is Cons!1466) (t!4964 (toList!708 lt!29677))) (= (_1!1056 (h!2051 (t!4964 (toList!708 lt!29677)))) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355))))))

(assert (=> d!15237 (= (containsKey!133 (t!4964 (toList!708 lt!29677)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) e!45526)))

(declare-fun b!69549 () Bool)

(declare-fun e!45527 () Bool)

(assert (=> b!69549 (= e!45526 e!45527)))

(declare-fun res!37299 () Bool)

(assert (=> b!69549 (=> (not res!37299) (not e!45527))))

(assert (=> b!69549 (= res!37299 (and (or (not ((_ is Cons!1466) (t!4964 (toList!708 lt!29677)))) (bvsle (_1!1056 (h!2051 (t!4964 (toList!708 lt!29677)))) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355))) ((_ is Cons!1466) (t!4964 (toList!708 lt!29677))) (bvslt (_1!1056 (h!2051 (t!4964 (toList!708 lt!29677)))) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355))))))

(declare-fun b!69550 () Bool)

(assert (=> b!69550 (= e!45527 (containsKey!133 (t!4964 (t!4964 (toList!708 lt!29677))) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))

(assert (= (and d!15237 (not res!37298)) b!69549))

(assert (= (and b!69549 res!37299) b!69550))

(assert (=> b!69550 m!63767))

(declare-fun m!65945 () Bool)

(assert (=> b!69550 m!65945))

(assert (=> b!68889 d!15237))

(declare-fun d!15239 () Bool)

(declare-fun e!45528 () Bool)

(assert (=> d!15239 e!45528))

(declare-fun res!37300 () Bool)

(assert (=> d!15239 (=> (not res!37300) (not e!45528))))

(declare-fun lt!30584 () ListLongMap!1385)

(assert (=> d!15239 (= res!37300 (contains!709 lt!30584 (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))

(declare-fun lt!30582 () List!1470)

(assert (=> d!15239 (= lt!30584 (ListLongMap!1386 lt!30582))))

(declare-fun lt!30581 () Unit!1898)

(declare-fun lt!30583 () Unit!1898)

(assert (=> d!15239 (= lt!30581 lt!30583)))

(assert (=> d!15239 (= (getValueByKey!129 lt!30582 (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))) (Some!134 (_2!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))

(assert (=> d!15239 (= lt!30583 (lemmaContainsTupThenGetReturnValue!49 lt!30582 (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)) (_2!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))

(assert (=> d!15239 (= lt!30582 (insertStrictlySorted!52 (toList!708 (getCurrentListMap!403 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16))) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)) (_2!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))

(assert (=> d!15239 (= (+!89 (getCurrentListMap!403 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)) lt!30584)))

(declare-fun b!69551 () Bool)

(declare-fun res!37301 () Bool)

(assert (=> b!69551 (=> (not res!37301) (not e!45528))))

(assert (=> b!69551 (= res!37301 (= (getValueByKey!129 (toList!708 lt!30584) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))) (Some!134 (_2!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))))))

(declare-fun b!69552 () Bool)

(assert (=> b!69552 (= e!45528 (contains!711 (toList!708 lt!30584) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))))

(assert (= (and d!15239 res!37300) b!69551))

(assert (= (and b!69551 res!37301) b!69552))

(declare-fun m!65947 () Bool)

(assert (=> d!15239 m!65947))

(declare-fun m!65949 () Bool)

(assert (=> d!15239 m!65949))

(declare-fun m!65951 () Bool)

(assert (=> d!15239 m!65951))

(declare-fun m!65953 () Bool)

(assert (=> d!15239 m!65953))

(declare-fun m!65955 () Bool)

(assert (=> b!69551 m!65955))

(declare-fun m!65957 () Bool)

(assert (=> b!69552 m!65957))

(assert (=> b!68978 d!15239))

(assert (=> b!68978 d!14883))

(declare-fun b!69553 () Bool)

(declare-fun e!45539 () ListLongMap!1385)

(declare-fun call!5954 () ListLongMap!1385)

(assert (=> b!69553 (= e!45539 call!5954)))

(declare-fun b!69554 () Bool)

(declare-fun e!45536 () Bool)

(declare-fun e!45531 () Bool)

(assert (=> b!69554 (= e!45536 e!45531)))

(declare-fun res!37309 () Bool)

(declare-fun call!5955 () Bool)

(assert (=> b!69554 (= res!37309 call!5955)))

(assert (=> b!69554 (=> (not res!37309) (not e!45531))))

(declare-fun b!69556 () Bool)

(declare-fun e!45537 () Bool)

(declare-fun call!5960 () Bool)

(assert (=> b!69556 (= e!45537 (not call!5960))))

(declare-fun bm!5951 () Bool)

(declare-fun lt!30591 () ListLongMap!1385)

(assert (=> bm!5951 (= call!5955 (contains!709 lt!30591 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69557 () Bool)

(declare-fun c!9964 () Bool)

(assert (=> b!69557 (= c!9964 (and (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!45535 () ListLongMap!1385)

(assert (=> b!69557 (= e!45535 e!45539)))

(declare-fun call!5956 () ListLongMap!1385)

(declare-fun c!9963 () Bool)

(declare-fun call!5959 () ListLongMap!1385)

(declare-fun c!9966 () Bool)

(declare-fun call!5958 () ListLongMap!1385)

(declare-fun bm!5952 () Bool)

(assert (=> bm!5952 (= call!5958 (+!89 (ite c!9966 call!5959 (ite c!9963 call!5956 call!5954)) (ite (or c!9966 c!9963) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))))))

(declare-fun b!69558 () Bool)

(declare-fun e!45533 () Bool)

(assert (=> b!69558 (= e!45533 (validKeyInArray!0 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!69559 () Bool)

(declare-fun res!37307 () Bool)

(declare-fun e!45530 () Bool)

(assert (=> b!69559 (=> (not res!37307) (not e!45530))))

(declare-fun e!45540 () Bool)

(assert (=> b!69559 (= res!37307 e!45540)))

(declare-fun res!37303 () Bool)

(assert (=> b!69559 (=> res!37303 e!45540)))

(assert (=> b!69559 (= res!37303 (not e!45533))))

(declare-fun res!37304 () Bool)

(assert (=> b!69559 (=> (not res!37304) (not e!45533))))

(assert (=> b!69559 (= res!37304 (bvslt #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))))))

(declare-fun b!69560 () Bool)

(declare-fun e!45534 () ListLongMap!1385)

(assert (=> b!69560 (= e!45534 e!45535)))

(assert (=> b!69560 (= c!9963 (and (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!69561 () Bool)

(declare-fun e!45532 () Bool)

(assert (=> b!69561 (= e!45537 e!45532)))

(declare-fun res!37305 () Bool)

(assert (=> b!69561 (= res!37305 call!5960)))

(assert (=> b!69561 (=> (not res!37305) (not e!45532))))

(declare-fun bm!5953 () Bool)

(assert (=> bm!5953 (= call!5956 call!5959)))

(declare-fun b!69562 () Bool)

(declare-fun call!5957 () ListLongMap!1385)

(assert (=> b!69562 (= e!45535 call!5957)))

(declare-fun bm!5954 () Bool)

(assert (=> bm!5954 (= call!5957 call!5958)))

(declare-fun b!69563 () Bool)

(assert (=> b!69563 (= e!45539 call!5957)))

(declare-fun b!69564 () Bool)

(declare-fun res!37308 () Bool)

(assert (=> b!69564 (=> (not res!37308) (not e!45530))))

(assert (=> b!69564 (= res!37308 e!45537)))

(declare-fun c!9967 () Bool)

(assert (=> b!69564 (= c!9967 (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!69565 () Bool)

(assert (=> b!69565 (= e!45532 (= (apply!73 lt!30591 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2073 newMap!16)))))

(declare-fun bm!5955 () Bool)

(assert (=> bm!5955 (= call!5959 (getCurrentListMapNoExtraKeys!53 (_keys!3810 newMap!16) (array!3834 (store (arr!1829 (_values!2150 newMap!16)) (index!3078 lt!29944) (ValueCellFull!884 lt!29673)) (size!2066 (_values!2150 newMap!16))) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun b!69566 () Bool)

(assert (=> b!69566 (= e!45531 (= (apply!73 lt!30591 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2073 newMap!16)))))

(declare-fun b!69567 () Bool)

(declare-fun e!45529 () Bool)

(assert (=> b!69567 (= e!45529 (= (apply!73 lt!30591 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)) (get!1126 (select (arr!1829 (array!3834 (store (arr!1829 (_values!2150 newMap!16)) (index!3078 lt!29944) (ValueCellFull!884 lt!29673)) (size!2066 (_values!2150 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!321 (defaultEntry!2167 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!69567 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2066 (array!3834 (store (arr!1829 (_values!2150 newMap!16)) (index!3078 lt!29944) (ValueCellFull!884 lt!29673)) (size!2066 (_values!2150 newMap!16))))))))

(assert (=> b!69567 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))))))

(declare-fun bm!5956 () Bool)

(assert (=> bm!5956 (= call!5954 call!5956)))

(declare-fun d!15241 () Bool)

(assert (=> d!15241 e!45530))

(declare-fun res!37310 () Bool)

(assert (=> d!15241 (=> (not res!37310) (not e!45530))))

(assert (=> d!15241 (= res!37310 (or (bvsge #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))))))))

(declare-fun lt!30593 () ListLongMap!1385)

(assert (=> d!15241 (= lt!30591 lt!30593)))

(declare-fun lt!30603 () Unit!1898)

(declare-fun e!45541 () Unit!1898)

(assert (=> d!15241 (= lt!30603 e!45541)))

(declare-fun c!9968 () Bool)

(declare-fun e!45538 () Bool)

(assert (=> d!15241 (= c!9968 e!45538)))

(declare-fun res!37302 () Bool)

(assert (=> d!15241 (=> (not res!37302) (not e!45538))))

(assert (=> d!15241 (= res!37302 (bvslt #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))))))

(assert (=> d!15241 (= lt!30593 e!45534)))

(assert (=> d!15241 (= c!9966 (and (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!15241 (validMask!0 (mask!6111 newMap!16))))

(assert (=> d!15241 (= (getCurrentListMap!403 (_keys!3810 newMap!16) (array!3834 (store (arr!1829 (_values!2150 newMap!16)) (index!3078 lt!29944) (ValueCellFull!884 lt!29673)) (size!2066 (_values!2150 newMap!16))) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) lt!30591)))

(declare-fun b!69555 () Bool)

(assert (=> b!69555 (= e!45538 (validKeyInArray!0 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!69568 () Bool)

(assert (=> b!69568 (= e!45530 e!45536)))

(declare-fun c!9965 () Bool)

(assert (=> b!69568 (= c!9965 (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!69569 () Bool)

(assert (=> b!69569 (= e!45540 e!45529)))

(declare-fun res!37306 () Bool)

(assert (=> b!69569 (=> (not res!37306) (not e!45529))))

(assert (=> b!69569 (= res!37306 (contains!709 lt!30591 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!69569 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))))))

(declare-fun b!69570 () Bool)

(assert (=> b!69570 (= e!45534 (+!89 call!5958 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))))))

(declare-fun b!69571 () Bool)

(assert (=> b!69571 (= e!45536 (not call!5955))))

(declare-fun bm!5957 () Bool)

(assert (=> bm!5957 (= call!5960 (contains!709 lt!30591 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69572 () Bool)

(declare-fun Unit!1948 () Unit!1898)

(assert (=> b!69572 (= e!45541 Unit!1948)))

(declare-fun b!69573 () Bool)

(declare-fun lt!30602 () Unit!1898)

(assert (=> b!69573 (= e!45541 lt!30602)))

(declare-fun lt!30585 () ListLongMap!1385)

(assert (=> b!69573 (= lt!30585 (getCurrentListMapNoExtraKeys!53 (_keys!3810 newMap!16) (array!3834 (store (arr!1829 (_values!2150 newMap!16)) (index!3078 lt!29944) (ValueCellFull!884 lt!29673)) (size!2066 (_values!2150 newMap!16))) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30589 () (_ BitVec 64))

(assert (=> b!69573 (= lt!30589 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30588 () (_ BitVec 64))

(assert (=> b!69573 (= lt!30588 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30605 () Unit!1898)

(assert (=> b!69573 (= lt!30605 (addStillContains!49 lt!30585 lt!30589 (zeroValue!2073 newMap!16) lt!30588))))

(assert (=> b!69573 (contains!709 (+!89 lt!30585 (tuple2!2091 lt!30589 (zeroValue!2073 newMap!16))) lt!30588)))

(declare-fun lt!30599 () Unit!1898)

(assert (=> b!69573 (= lt!30599 lt!30605)))

(declare-fun lt!30600 () ListLongMap!1385)

(assert (=> b!69573 (= lt!30600 (getCurrentListMapNoExtraKeys!53 (_keys!3810 newMap!16) (array!3834 (store (arr!1829 (_values!2150 newMap!16)) (index!3078 lt!29944) (ValueCellFull!884 lt!29673)) (size!2066 (_values!2150 newMap!16))) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30590 () (_ BitVec 64))

(assert (=> b!69573 (= lt!30590 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30587 () (_ BitVec 64))

(assert (=> b!69573 (= lt!30587 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30594 () Unit!1898)

(assert (=> b!69573 (= lt!30594 (addApplyDifferent!49 lt!30600 lt!30590 (minValue!2073 newMap!16) lt!30587))))

(assert (=> b!69573 (= (apply!73 (+!89 lt!30600 (tuple2!2091 lt!30590 (minValue!2073 newMap!16))) lt!30587) (apply!73 lt!30600 lt!30587))))

(declare-fun lt!30606 () Unit!1898)

(assert (=> b!69573 (= lt!30606 lt!30594)))

(declare-fun lt!30586 () ListLongMap!1385)

(assert (=> b!69573 (= lt!30586 (getCurrentListMapNoExtraKeys!53 (_keys!3810 newMap!16) (array!3834 (store (arr!1829 (_values!2150 newMap!16)) (index!3078 lt!29944) (ValueCellFull!884 lt!29673)) (size!2066 (_values!2150 newMap!16))) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30598 () (_ BitVec 64))

(assert (=> b!69573 (= lt!30598 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30595 () (_ BitVec 64))

(assert (=> b!69573 (= lt!30595 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30597 () Unit!1898)

(assert (=> b!69573 (= lt!30597 (addApplyDifferent!49 lt!30586 lt!30598 (zeroValue!2073 newMap!16) lt!30595))))

(assert (=> b!69573 (= (apply!73 (+!89 lt!30586 (tuple2!2091 lt!30598 (zeroValue!2073 newMap!16))) lt!30595) (apply!73 lt!30586 lt!30595))))

(declare-fun lt!30592 () Unit!1898)

(assert (=> b!69573 (= lt!30592 lt!30597)))

(declare-fun lt!30604 () ListLongMap!1385)

(assert (=> b!69573 (= lt!30604 (getCurrentListMapNoExtraKeys!53 (_keys!3810 newMap!16) (array!3834 (store (arr!1829 (_values!2150 newMap!16)) (index!3078 lt!29944) (ValueCellFull!884 lt!29673)) (size!2066 (_values!2150 newMap!16))) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30601 () (_ BitVec 64))

(assert (=> b!69573 (= lt!30601 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30596 () (_ BitVec 64))

(assert (=> b!69573 (= lt!30596 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!69573 (= lt!30602 (addApplyDifferent!49 lt!30604 lt!30601 (minValue!2073 newMap!16) lt!30596))))

(assert (=> b!69573 (= (apply!73 (+!89 lt!30604 (tuple2!2091 lt!30601 (minValue!2073 newMap!16))) lt!30596) (apply!73 lt!30604 lt!30596))))

(assert (= (and d!15241 c!9966) b!69570))

(assert (= (and d!15241 (not c!9966)) b!69560))

(assert (= (and b!69560 c!9963) b!69562))

(assert (= (and b!69560 (not c!9963)) b!69557))

(assert (= (and b!69557 c!9964) b!69563))

(assert (= (and b!69557 (not c!9964)) b!69553))

(assert (= (or b!69563 b!69553) bm!5956))

(assert (= (or b!69562 bm!5956) bm!5953))

(assert (= (or b!69562 b!69563) bm!5954))

(assert (= (or b!69570 bm!5953) bm!5955))

(assert (= (or b!69570 bm!5954) bm!5952))

(assert (= (and d!15241 res!37302) b!69555))

(assert (= (and d!15241 c!9968) b!69573))

(assert (= (and d!15241 (not c!9968)) b!69572))

(assert (= (and d!15241 res!37310) b!69559))

(assert (= (and b!69559 res!37304) b!69558))

(assert (= (and b!69559 (not res!37303)) b!69569))

(assert (= (and b!69569 res!37306) b!69567))

(assert (= (and b!69559 res!37307) b!69564))

(assert (= (and b!69564 c!9967) b!69561))

(assert (= (and b!69564 (not c!9967)) b!69556))

(assert (= (and b!69561 res!37305) b!69565))

(assert (= (or b!69561 b!69556) bm!5957))

(assert (= (and b!69564 res!37308) b!69568))

(assert (= (and b!69568 c!9965) b!69554))

(assert (= (and b!69568 (not c!9965)) b!69571))

(assert (= (and b!69554 res!37309) b!69566))

(assert (= (or b!69554 b!69571) bm!5951))

(declare-fun b_lambda!3113 () Bool)

(assert (=> (not b_lambda!3113) (not b!69567)))

(assert (=> b!69567 t!4978))

(declare-fun b_and!4285 () Bool)

(assert (= b_and!4281 (and (=> t!4978 result!2615) b_and!4285)))

(assert (=> b!69567 t!4980))

(declare-fun b_and!4287 () Bool)

(assert (= b_and!4283 (and (=> t!4980 result!2617) b_and!4287)))

(declare-fun m!65959 () Bool)

(assert (=> b!69570 m!65959))

(declare-fun m!65961 () Bool)

(assert (=> bm!5952 m!65961))

(declare-fun m!65963 () Bool)

(assert (=> bm!5955 m!65963))

(assert (=> b!69567 m!64177))

(declare-fun m!65965 () Bool)

(assert (=> b!69567 m!65965))

(assert (=> b!69567 m!64177))

(declare-fun m!65967 () Bool)

(assert (=> b!69567 m!65967))

(assert (=> b!69567 m!64243))

(assert (=> b!69567 m!65965))

(assert (=> b!69567 m!64243))

(declare-fun m!65969 () Bool)

(assert (=> b!69567 m!65969))

(assert (=> b!69555 m!64177))

(assert (=> b!69555 m!64177))

(assert (=> b!69555 m!64187))

(assert (=> b!69558 m!64177))

(assert (=> b!69558 m!64177))

(assert (=> b!69558 m!64187))

(declare-fun m!65971 () Bool)

(assert (=> bm!5951 m!65971))

(declare-fun m!65973 () Bool)

(assert (=> b!69566 m!65973))

(declare-fun m!65975 () Bool)

(assert (=> bm!5957 m!65975))

(declare-fun m!65977 () Bool)

(assert (=> b!69573 m!65977))

(declare-fun m!65979 () Bool)

(assert (=> b!69573 m!65979))

(declare-fun m!65981 () Bool)

(assert (=> b!69573 m!65981))

(assert (=> b!69573 m!65979))

(assert (=> b!69573 m!65977))

(declare-fun m!65983 () Bool)

(assert (=> b!69573 m!65983))

(declare-fun m!65985 () Bool)

(assert (=> b!69573 m!65985))

(declare-fun m!65987 () Bool)

(assert (=> b!69573 m!65987))

(declare-fun m!65989 () Bool)

(assert (=> b!69573 m!65989))

(declare-fun m!65991 () Bool)

(assert (=> b!69573 m!65991))

(declare-fun m!65993 () Bool)

(assert (=> b!69573 m!65993))

(declare-fun m!65995 () Bool)

(assert (=> b!69573 m!65995))

(assert (=> b!69573 m!65963))

(declare-fun m!65997 () Bool)

(assert (=> b!69573 m!65997))

(declare-fun m!65999 () Bool)

(assert (=> b!69573 m!65999))

(assert (=> b!69573 m!64177))

(declare-fun m!66001 () Bool)

(assert (=> b!69573 m!66001))

(declare-fun m!66003 () Bool)

(assert (=> b!69573 m!66003))

(assert (=> b!69573 m!65989))

(assert (=> b!69573 m!66001))

(declare-fun m!66005 () Bool)

(assert (=> b!69573 m!66005))

(assert (=> b!69569 m!64177))

(assert (=> b!69569 m!64177))

(declare-fun m!66007 () Bool)

(assert (=> b!69569 m!66007))

(declare-fun m!66009 () Bool)

(assert (=> b!69565 m!66009))

(assert (=> d!15241 m!64193))

(assert (=> b!68978 d!15241))

(declare-fun d!15243 () Bool)

(assert (=> d!15243 (= (apply!73 lt!30245 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1129 (getValueByKey!129 (toList!708 lt!30245) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2999 () Bool)

(assert (= bs!2999 d!15243))

(assert (=> bs!2999 m!65819))

(assert (=> bs!2999 m!65819))

(declare-fun m!66011 () Bool)

(assert (=> bs!2999 m!66011))

(assert (=> b!69027 d!15243))

(declare-fun d!15245 () Bool)

(assert (=> d!15245 (= (get!1129 (getValueByKey!129 (toList!708 lt!29800) lt!29809)) (v!2491 (getValueByKey!129 (toList!708 lt!29800) lt!29809)))))

(assert (=> d!14857 d!15245))

(declare-fun b!69576 () Bool)

(declare-fun e!45543 () Option!135)

(assert (=> b!69576 (= e!45543 (getValueByKey!129 (t!4964 (toList!708 lt!29800)) lt!29809))))

(declare-fun b!69574 () Bool)

(declare-fun e!45542 () Option!135)

(assert (=> b!69574 (= e!45542 (Some!134 (_2!1056 (h!2051 (toList!708 lt!29800)))))))

(declare-fun b!69577 () Bool)

(assert (=> b!69577 (= e!45543 None!133)))

(declare-fun d!15247 () Bool)

(declare-fun c!9969 () Bool)

(assert (=> d!15247 (= c!9969 (and ((_ is Cons!1466) (toList!708 lt!29800)) (= (_1!1056 (h!2051 (toList!708 lt!29800))) lt!29809)))))

(assert (=> d!15247 (= (getValueByKey!129 (toList!708 lt!29800) lt!29809) e!45542)))

(declare-fun b!69575 () Bool)

(assert (=> b!69575 (= e!45542 e!45543)))

(declare-fun c!9970 () Bool)

(assert (=> b!69575 (= c!9970 (and ((_ is Cons!1466) (toList!708 lt!29800)) (not (= (_1!1056 (h!2051 (toList!708 lt!29800))) lt!29809))))))

(assert (= (and d!15247 c!9969) b!69574))

(assert (= (and d!15247 (not c!9969)) b!69575))

(assert (= (and b!69575 c!9970) b!69576))

(assert (= (and b!69575 (not c!9970)) b!69577))

(declare-fun m!66013 () Bool)

(assert (=> b!69576 m!66013))

(assert (=> d!14857 d!15247))

(declare-fun d!15249 () Bool)

(assert (=> d!15249 (= (apply!73 lt!30226 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1129 (getValueByKey!129 (toList!708 lt!30226) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(declare-fun bs!3000 () Bool)

(assert (= bs!3000 d!15249))

(assert (=> bs!3000 m!64539))

(declare-fun m!66015 () Bool)

(assert (=> bs!3000 m!66015))

(assert (=> bs!3000 m!66015))

(declare-fun m!66017 () Bool)

(assert (=> bs!3000 m!66017))

(assert (=> b!68998 d!15249))

(declare-fun d!15251 () Bool)

(declare-fun c!9971 () Bool)

(assert (=> d!15251 (= c!9971 ((_ is ValueCellFull!884) (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun e!45544 () V!2921)

(assert (=> d!15251 (= (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!45544)))

(declare-fun b!69578 () Bool)

(assert (=> b!69578 (= e!45544 (get!1127 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!69579 () Bool)

(assert (=> b!69579 (= e!45544 (get!1128 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15251 c!9971) b!69578))

(assert (= (and d!15251 (not c!9971)) b!69579))

(assert (=> b!69578 m!64667))

(assert (=> b!69578 m!63771))

(declare-fun m!66019 () Bool)

(assert (=> b!69578 m!66019))

(assert (=> b!69579 m!64667))

(assert (=> b!69579 m!63771))

(declare-fun m!66021 () Bool)

(assert (=> b!69579 m!66021))

(assert (=> b!68998 d!15251))

(declare-fun d!15253 () Bool)

(declare-fun c!9972 () Bool)

(assert (=> d!15253 (= c!9972 ((_ is Nil!1467) (toList!708 lt!29857)))))

(declare-fun e!45545 () (InoxSet tuple2!2090))

(assert (=> d!15253 (= (content!73 (toList!708 lt!29857)) e!45545)))

(declare-fun b!69580 () Bool)

(assert (=> b!69580 (= e!45545 ((as const (Array tuple2!2090 Bool)) false))))

(declare-fun b!69581 () Bool)

(assert (=> b!69581 (= e!45545 ((_ map or) (store ((as const (Array tuple2!2090 Bool)) false) (h!2051 (toList!708 lt!29857)) true) (content!73 (t!4964 (toList!708 lt!29857)))))))

(assert (= (and d!15253 c!9972) b!69580))

(assert (= (and d!15253 (not c!9972)) b!69581))

(declare-fun m!66023 () Bool)

(assert (=> b!69581 m!66023))

(declare-fun m!66025 () Bool)

(assert (=> b!69581 m!66025))

(assert (=> d!14747 d!15253))

(declare-fun d!15255 () Bool)

(declare-fun lt!30607 () (_ BitVec 32))

(assert (=> d!15255 (and (bvsge lt!30607 #b00000000000000000000000000000000) (bvsle lt!30607 (bvsub (size!2065 (_keys!3810 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun e!45546 () (_ BitVec 32))

(assert (=> d!15255 (= lt!30607 e!45546)))

(declare-fun c!9974 () Bool)

(assert (=> d!15255 (= c!9974 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2065 (_keys!3810 newMap!16))))))

(assert (=> d!15255 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2065 (_keys!3810 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2065 (_keys!3810 newMap!16)) (size!2065 (_keys!3810 newMap!16))))))

(assert (=> d!15255 (= (arrayCountValidKeys!0 (_keys!3810 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2065 (_keys!3810 newMap!16))) lt!30607)))

(declare-fun bm!5958 () Bool)

(declare-fun call!5961 () (_ BitVec 32))

(assert (=> bm!5958 (= call!5961 (arrayCountValidKeys!0 (_keys!3810 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2065 (_keys!3810 newMap!16))))))

(declare-fun b!69582 () Bool)

(declare-fun e!45547 () (_ BitVec 32))

(assert (=> b!69582 (= e!45547 (bvadd #b00000000000000000000000000000001 call!5961))))

(declare-fun b!69583 () Bool)

(assert (=> b!69583 (= e!45546 e!45547)))

(declare-fun c!9973 () Bool)

(assert (=> b!69583 (= c!9973 (validKeyInArray!0 (select (arr!1828 (_keys!3810 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!69584 () Bool)

(assert (=> b!69584 (= e!45547 call!5961)))

(declare-fun b!69585 () Bool)

(assert (=> b!69585 (= e!45546 #b00000000000000000000000000000000)))

(assert (= (and d!15255 c!9974) b!69585))

(assert (= (and d!15255 (not c!9974)) b!69583))

(assert (= (and b!69583 c!9973) b!69582))

(assert (= (and b!69583 (not c!9973)) b!69584))

(assert (= (or b!69582 b!69584) bm!5958))

(declare-fun m!66027 () Bool)

(assert (=> bm!5958 m!66027))

(assert (=> b!69583 m!65281))

(assert (=> b!69583 m!65281))

(declare-fun m!66029 () Bool)

(assert (=> b!69583 m!66029))

(assert (=> bm!5877 d!15255))

(assert (=> d!14723 d!14679))

(declare-fun d!15257 () Bool)

(assert (=> d!15257 (= (get!1129 (getValueByKey!129 (toList!708 lt!29835) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2491 (getValueByKey!129 (toList!708 lt!29835) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!14699 d!15257))

(assert (=> d!14699 d!15047))

(assert (=> b!69119 d!14783))

(assert (=> d!14719 d!15017))

(declare-fun b!69588 () Bool)

(declare-fun e!45549 () Option!135)

(assert (=> b!69588 (= e!45549 (getValueByKey!129 (t!4964 (toList!708 lt!30062)) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))

(declare-fun b!69586 () Bool)

(declare-fun e!45548 () Option!135)

(assert (=> b!69586 (= e!45548 (Some!134 (_2!1056 (h!2051 (toList!708 lt!30062)))))))

(declare-fun b!69589 () Bool)

(assert (=> b!69589 (= e!45549 None!133)))

(declare-fun c!9975 () Bool)

(declare-fun d!15259 () Bool)

(assert (=> d!15259 (= c!9975 (and ((_ is Cons!1466) (toList!708 lt!30062)) (= (_1!1056 (h!2051 (toList!708 lt!30062))) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))))))

(assert (=> d!15259 (= (getValueByKey!129 (toList!708 lt!30062) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))) e!45548)))

(declare-fun b!69587 () Bool)

(assert (=> b!69587 (= e!45548 e!45549)))

(declare-fun c!9976 () Bool)

(assert (=> b!69587 (= c!9976 (and ((_ is Cons!1466) (toList!708 lt!30062)) (not (= (_1!1056 (h!2051 (toList!708 lt!30062))) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))))

(assert (= (and d!15259 c!9975) b!69586))

(assert (= (and d!15259 (not c!9975)) b!69587))

(assert (= (and b!69587 c!9976) b!69588))

(assert (= (and b!69587 (not c!9976)) b!69589))

(declare-fun m!66031 () Bool)

(assert (=> b!69588 m!66031))

(assert (=> b!68795 d!15259))

(declare-fun b!69592 () Bool)

(declare-fun e!45551 () Option!135)

(assert (=> b!69592 (= e!45551 (getValueByKey!129 (t!4964 (t!4964 (toList!708 lt!29861))) (_1!1056 lt!29675)))))

(declare-fun b!69590 () Bool)

(declare-fun e!45550 () Option!135)

(assert (=> b!69590 (= e!45550 (Some!134 (_2!1056 (h!2051 (t!4964 (toList!708 lt!29861))))))))

(declare-fun b!69593 () Bool)

(assert (=> b!69593 (= e!45551 None!133)))

(declare-fun d!15261 () Bool)

(declare-fun c!9977 () Bool)

(assert (=> d!15261 (= c!9977 (and ((_ is Cons!1466) (t!4964 (toList!708 lt!29861))) (= (_1!1056 (h!2051 (t!4964 (toList!708 lt!29861)))) (_1!1056 lt!29675))))))

(assert (=> d!15261 (= (getValueByKey!129 (t!4964 (toList!708 lt!29861)) (_1!1056 lt!29675)) e!45550)))

(declare-fun b!69591 () Bool)

(assert (=> b!69591 (= e!45550 e!45551)))

(declare-fun c!9978 () Bool)

(assert (=> b!69591 (= c!9978 (and ((_ is Cons!1466) (t!4964 (toList!708 lt!29861))) (not (= (_1!1056 (h!2051 (t!4964 (toList!708 lt!29861)))) (_1!1056 lt!29675)))))))

(assert (= (and d!15261 c!9977) b!69590))

(assert (= (and d!15261 (not c!9977)) b!69591))

(assert (= (and b!69591 c!9978) b!69592))

(assert (= (and b!69591 (not c!9978)) b!69593))

(declare-fun m!66033 () Bool)

(assert (=> b!69592 m!66033))

(assert (=> b!69007 d!15261))

(declare-fun d!15263 () Bool)

(assert (=> d!15263 (= (size!2071 newMap!16) (bvadd (_size!387 newMap!16) (bvsdiv (bvadd (extraKeys!2034 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!69112 d!15263))

(declare-fun e!45553 () Option!135)

(declare-fun b!69596 () Bool)

(assert (=> b!69596 (= e!45553 (getValueByKey!129 (t!4964 (toList!708 lt!30276)) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))

(declare-fun b!69594 () Bool)

(declare-fun e!45552 () Option!135)

(assert (=> b!69594 (= e!45552 (Some!134 (_2!1056 (h!2051 (toList!708 lt!30276)))))))

(declare-fun b!69597 () Bool)

(assert (=> b!69597 (= e!45553 None!133)))

(declare-fun c!9979 () Bool)

(declare-fun d!15265 () Bool)

(assert (=> d!15265 (= c!9979 (and ((_ is Cons!1466) (toList!708 lt!30276)) (= (_1!1056 (h!2051 (toList!708 lt!30276))) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))))))

(assert (=> d!15265 (= (getValueByKey!129 (toList!708 lt!30276) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))) e!45552)))

(declare-fun b!69595 () Bool)

(assert (=> b!69595 (= e!45552 e!45553)))

(declare-fun c!9980 () Bool)

(assert (=> b!69595 (= c!9980 (and ((_ is Cons!1466) (toList!708 lt!30276)) (not (= (_1!1056 (h!2051 (toList!708 lt!30276))) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))))

(assert (= (and d!15265 c!9979) b!69594))

(assert (= (and d!15265 (not c!9979)) b!69595))

(assert (= (and b!69595 c!9980) b!69596))

(assert (= (and b!69595 (not c!9980)) b!69597))

(declare-fun m!66035 () Bool)

(assert (=> b!69596 m!66035))

(assert (=> b!69050 d!15265))

(declare-fun lt!30608 () Bool)

(declare-fun d!15267 () Bool)

(assert (=> d!15267 (= lt!30608 (select (content!73 (toList!708 lt!30288)) (tuple2!2091 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))))

(declare-fun e!45555 () Bool)

(assert (=> d!15267 (= lt!30608 e!45555)))

(declare-fun res!37312 () Bool)

(assert (=> d!15267 (=> (not res!37312) (not e!45555))))

(assert (=> d!15267 (= res!37312 ((_ is Cons!1466) (toList!708 lt!30288)))))

(assert (=> d!15267 (= (contains!711 (toList!708 lt!30288) (tuple2!2091 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))) lt!30608)))

(declare-fun b!69598 () Bool)

(declare-fun e!45554 () Bool)

(assert (=> b!69598 (= e!45555 e!45554)))

(declare-fun res!37311 () Bool)

(assert (=> b!69598 (=> res!37311 e!45554)))

(assert (=> b!69598 (= res!37311 (= (h!2051 (toList!708 lt!30288)) (tuple2!2091 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))))

(declare-fun b!69599 () Bool)

(assert (=> b!69599 (= e!45554 (contains!711 (t!4964 (toList!708 lt!30288)) (tuple2!2091 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))))

(assert (= (and d!15267 res!37312) b!69598))

(assert (= (and b!69598 (not res!37311)) b!69599))

(declare-fun m!66037 () Bool)

(assert (=> d!15267 m!66037))

(declare-fun m!66039 () Bool)

(assert (=> d!15267 m!66039))

(declare-fun m!66041 () Bool)

(assert (=> b!69599 m!66041))

(assert (=> b!69057 d!15267))

(declare-fun d!15269 () Bool)

(assert (=> d!15269 (= ($colon$colon!63 e!45029 (ite c!9745 (h!2051 (toList!708 (+!89 lt!29682 lt!29675))) (tuple2!2091 (_1!1056 lt!29680) (_2!1056 lt!29680)))) (Cons!1466 (ite c!9745 (h!2051 (toList!708 (+!89 lt!29682 lt!29675))) (tuple2!2091 (_1!1056 lt!29680) (_2!1056 lt!29680))) e!45029))))

(assert (=> bm!5857 d!15269))

(assert (=> bm!5862 d!15089))

(assert (=> b!68662 d!14925))

(declare-fun b!69600 () Bool)

(declare-fun e!45559 () List!1470)

(declare-fun call!5963 () List!1470)

(assert (=> b!69600 (= e!45559 call!5963)))

(declare-fun b!69601 () Bool)

(declare-fun c!9981 () Bool)

(assert (=> b!69601 (= c!9981 (and ((_ is Cons!1466) (t!4964 (toList!708 lt!29682))) (bvsgt (_1!1056 (h!2051 (t!4964 (toList!708 lt!29682)))) (_1!1056 lt!29680))))))

(declare-fun e!45557 () List!1470)

(assert (=> b!69601 (= e!45557 e!45559)))

(declare-fun b!69602 () Bool)

(assert (=> b!69602 (= e!45559 call!5963)))

(declare-fun b!69604 () Bool)

(declare-fun call!5962 () List!1470)

(assert (=> b!69604 (= e!45557 call!5962)))

(declare-fun bm!5959 () Bool)

(declare-fun call!5964 () List!1470)

(assert (=> bm!5959 (= call!5962 call!5964)))

(declare-fun bm!5960 () Bool)

(assert (=> bm!5960 (= call!5963 call!5962)))

(declare-fun b!69605 () Bool)

(declare-fun e!45556 () List!1470)

(assert (=> b!69605 (= e!45556 e!45557)))

(declare-fun c!9982 () Bool)

(assert (=> b!69605 (= c!9982 (and ((_ is Cons!1466) (t!4964 (toList!708 lt!29682))) (= (_1!1056 (h!2051 (t!4964 (toList!708 lt!29682)))) (_1!1056 lt!29680))))))

(declare-fun bm!5961 () Bool)

(declare-fun c!9984 () Bool)

(declare-fun e!45558 () List!1470)

(assert (=> bm!5961 (= call!5964 ($colon$colon!63 e!45558 (ite c!9984 (h!2051 (t!4964 (toList!708 lt!29682))) (tuple2!2091 (_1!1056 lt!29680) (_2!1056 lt!29680)))))))

(declare-fun c!9983 () Bool)

(assert (=> bm!5961 (= c!9983 c!9984)))

(declare-fun b!69606 () Bool)

(declare-fun res!37314 () Bool)

(declare-fun e!45560 () Bool)

(assert (=> b!69606 (=> (not res!37314) (not e!45560))))

(declare-fun lt!30609 () List!1470)

(assert (=> b!69606 (= res!37314 (containsKey!133 lt!30609 (_1!1056 lt!29680)))))

(declare-fun b!69607 () Bool)

(assert (=> b!69607 (= e!45560 (contains!711 lt!30609 (tuple2!2091 (_1!1056 lt!29680) (_2!1056 lt!29680))))))

(declare-fun b!69608 () Bool)

(assert (=> b!69608 (= e!45558 (ite c!9982 (t!4964 (t!4964 (toList!708 lt!29682))) (ite c!9981 (Cons!1466 (h!2051 (t!4964 (toList!708 lt!29682))) (t!4964 (t!4964 (toList!708 lt!29682)))) Nil!1467)))))

(declare-fun b!69609 () Bool)

(assert (=> b!69609 (= e!45556 call!5964)))

(declare-fun d!15271 () Bool)

(assert (=> d!15271 e!45560))

(declare-fun res!37313 () Bool)

(assert (=> d!15271 (=> (not res!37313) (not e!45560))))

(assert (=> d!15271 (= res!37313 (isStrictlySorted!285 lt!30609))))

(assert (=> d!15271 (= lt!30609 e!45556)))

(assert (=> d!15271 (= c!9984 (and ((_ is Cons!1466) (t!4964 (toList!708 lt!29682))) (bvslt (_1!1056 (h!2051 (t!4964 (toList!708 lt!29682)))) (_1!1056 lt!29680))))))

(assert (=> d!15271 (isStrictlySorted!285 (t!4964 (toList!708 lt!29682)))))

(assert (=> d!15271 (= (insertStrictlySorted!52 (t!4964 (toList!708 lt!29682)) (_1!1056 lt!29680) (_2!1056 lt!29680)) lt!30609)))

(declare-fun b!69603 () Bool)

(assert (=> b!69603 (= e!45558 (insertStrictlySorted!52 (t!4964 (t!4964 (toList!708 lt!29682))) (_1!1056 lt!29680) (_2!1056 lt!29680)))))

(assert (= (and d!15271 c!9984) b!69609))

(assert (= (and d!15271 (not c!9984)) b!69605))

(assert (= (and b!69605 c!9982) b!69604))

(assert (= (and b!69605 (not c!9982)) b!69601))

(assert (= (and b!69601 c!9981) b!69602))

(assert (= (and b!69601 (not c!9981)) b!69600))

(assert (= (or b!69602 b!69600) bm!5960))

(assert (= (or b!69604 bm!5960) bm!5959))

(assert (= (or b!69609 bm!5959) bm!5961))

(assert (= (and bm!5961 c!9983) b!69603))

(assert (= (and bm!5961 (not c!9983)) b!69608))

(assert (= (and d!15271 res!37313) b!69606))

(assert (= (and b!69606 res!37314) b!69607))

(declare-fun m!66043 () Bool)

(assert (=> d!15271 m!66043))

(assert (=> d!15271 m!65429))

(declare-fun m!66045 () Bool)

(assert (=> b!69607 m!66045))

(declare-fun m!66047 () Bool)

(assert (=> b!69606 m!66047))

(declare-fun m!66049 () Bool)

(assert (=> bm!5961 m!66049))

(declare-fun m!66051 () Bool)

(assert (=> b!69603 m!66051))

(assert (=> b!69134 d!15271))

(declare-fun d!15273 () Bool)

(declare-fun res!37315 () Bool)

(declare-fun e!45561 () Bool)

(assert (=> d!15273 (=> res!37315 e!45561)))

(assert (=> d!15273 (= res!37315 (or ((_ is Nil!1467) lt!30093) ((_ is Nil!1467) (t!4964 lt!30093))))))

(assert (=> d!15273 (= (isStrictlySorted!285 lt!30093) e!45561)))

(declare-fun b!69610 () Bool)

(declare-fun e!45562 () Bool)

(assert (=> b!69610 (= e!45561 e!45562)))

(declare-fun res!37316 () Bool)

(assert (=> b!69610 (=> (not res!37316) (not e!45562))))

(assert (=> b!69610 (= res!37316 (bvslt (_1!1056 (h!2051 lt!30093)) (_1!1056 (h!2051 (t!4964 lt!30093)))))))

(declare-fun b!69611 () Bool)

(assert (=> b!69611 (= e!45562 (isStrictlySorted!285 (t!4964 lt!30093)))))

(assert (= (and d!15273 (not res!37315)) b!69610))

(assert (= (and b!69610 res!37316) b!69611))

(declare-fun m!66053 () Bool)

(assert (=> b!69611 m!66053))

(assert (=> d!14763 d!15273))

(declare-fun d!15275 () Bool)

(declare-fun res!37317 () Bool)

(declare-fun e!45563 () Bool)

(assert (=> d!15275 (=> res!37317 e!45563)))

(assert (=> d!15275 (= res!37317 (or ((_ is Nil!1467) (toList!708 lt!29682)) ((_ is Nil!1467) (t!4964 (toList!708 lt!29682)))))))

(assert (=> d!15275 (= (isStrictlySorted!285 (toList!708 lt!29682)) e!45563)))

(declare-fun b!69612 () Bool)

(declare-fun e!45564 () Bool)

(assert (=> b!69612 (= e!45563 e!45564)))

(declare-fun res!37318 () Bool)

(assert (=> b!69612 (=> (not res!37318) (not e!45564))))

(assert (=> b!69612 (= res!37318 (bvslt (_1!1056 (h!2051 (toList!708 lt!29682))) (_1!1056 (h!2051 (t!4964 (toList!708 lt!29682))))))))

(declare-fun b!69613 () Bool)

(assert (=> b!69613 (= e!45564 (isStrictlySorted!285 (t!4964 (toList!708 lt!29682))))))

(assert (= (and d!15275 (not res!37317)) b!69612))

(assert (= (and b!69612 res!37318) b!69613))

(assert (=> b!69613 m!65429))

(assert (=> d!14763 d!15275))

(declare-fun d!15277 () Bool)

(declare-fun e!45565 () Bool)

(assert (=> d!15277 e!45565))

(declare-fun res!37319 () Bool)

(assert (=> d!15277 (=> (not res!37319) (not e!45565))))

(declare-fun lt!30613 () ListLongMap!1385)

(assert (=> d!15277 (= res!37319 (contains!709 lt!30613 (_1!1056 (tuple2!2091 lt!30228 lt!30227))))))

(declare-fun lt!30611 () List!1470)

(assert (=> d!15277 (= lt!30613 (ListLongMap!1386 lt!30611))))

(declare-fun lt!30610 () Unit!1898)

(declare-fun lt!30612 () Unit!1898)

(assert (=> d!15277 (= lt!30610 lt!30612)))

(assert (=> d!15277 (= (getValueByKey!129 lt!30611 (_1!1056 (tuple2!2091 lt!30228 lt!30227))) (Some!134 (_2!1056 (tuple2!2091 lt!30228 lt!30227))))))

(assert (=> d!15277 (= lt!30612 (lemmaContainsTupThenGetReturnValue!49 lt!30611 (_1!1056 (tuple2!2091 lt!30228 lt!30227)) (_2!1056 (tuple2!2091 lt!30228 lt!30227))))))

(assert (=> d!15277 (= lt!30611 (insertStrictlySorted!52 (toList!708 lt!30229) (_1!1056 (tuple2!2091 lt!30228 lt!30227)) (_2!1056 (tuple2!2091 lt!30228 lt!30227))))))

(assert (=> d!15277 (= (+!89 lt!30229 (tuple2!2091 lt!30228 lt!30227)) lt!30613)))

(declare-fun b!69614 () Bool)

(declare-fun res!37320 () Bool)

(assert (=> b!69614 (=> (not res!37320) (not e!45565))))

(assert (=> b!69614 (= res!37320 (= (getValueByKey!129 (toList!708 lt!30613) (_1!1056 (tuple2!2091 lt!30228 lt!30227))) (Some!134 (_2!1056 (tuple2!2091 lt!30228 lt!30227)))))))

(declare-fun b!69615 () Bool)

(assert (=> b!69615 (= e!45565 (contains!711 (toList!708 lt!30613) (tuple2!2091 lt!30228 lt!30227)))))

(assert (= (and d!15277 res!37319) b!69614))

(assert (= (and b!69614 res!37320) b!69615))

(declare-fun m!66055 () Bool)

(assert (=> d!15277 m!66055))

(declare-fun m!66057 () Bool)

(assert (=> d!15277 m!66057))

(declare-fun m!66059 () Bool)

(assert (=> d!15277 m!66059))

(declare-fun m!66061 () Bool)

(assert (=> d!15277 m!66061))

(declare-fun m!66063 () Bool)

(assert (=> b!69614 m!66063))

(declare-fun m!66065 () Bool)

(assert (=> b!69615 m!66065))

(assert (=> b!68990 d!15277))

(declare-fun d!15279 () Bool)

(declare-fun e!45566 () Bool)

(assert (=> d!15279 e!45566))

(declare-fun res!37321 () Bool)

(assert (=> d!15279 (=> (not res!37321) (not e!45566))))

(declare-fun lt!30617 () ListLongMap!1385)

(assert (=> d!15279 (= res!37321 (contains!709 lt!30617 (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!30615 () List!1470)

(assert (=> d!15279 (= lt!30617 (ListLongMap!1386 lt!30615))))

(declare-fun lt!30614 () Unit!1898)

(declare-fun lt!30616 () Unit!1898)

(assert (=> d!15279 (= lt!30614 lt!30616)))

(assert (=> d!15279 (= (getValueByKey!129 lt!30615 (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!134 (_2!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!15279 (= lt!30616 (lemmaContainsTupThenGetReturnValue!49 lt!30615 (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!15279 (= lt!30615 (insertStrictlySorted!52 (toList!708 call!5897) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!15279 (= (+!89 call!5897 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!30617)))

(declare-fun b!69616 () Bool)

(declare-fun res!37322 () Bool)

(assert (=> b!69616 (=> (not res!37322) (not e!45566))))

(assert (=> b!69616 (= res!37322 (= (getValueByKey!129 (toList!708 lt!30617) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!134 (_2!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!69617 () Bool)

(assert (=> b!69617 (= e!45566 (contains!711 (toList!708 lt!30617) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1126 (select (arr!1829 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!321 (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!15279 res!37321) b!69616))

(assert (= (and b!69616 res!37322) b!69617))

(declare-fun m!66067 () Bool)

(assert (=> d!15279 m!66067))

(declare-fun m!66069 () Bool)

(assert (=> d!15279 m!66069))

(declare-fun m!66071 () Bool)

(assert (=> d!15279 m!66071))

(declare-fun m!66073 () Bool)

(assert (=> d!15279 m!66073))

(declare-fun m!66075 () Bool)

(assert (=> b!69616 m!66075))

(declare-fun m!66077 () Bool)

(assert (=> b!69617 m!66077))

(assert (=> b!68990 d!15279))

(assert (=> b!68990 d!15251))

(declare-fun d!15281 () Bool)

(declare-fun e!45568 () Bool)

(assert (=> d!15281 e!45568))

(declare-fun res!37323 () Bool)

(assert (=> d!15281 (=> res!37323 e!45568)))

(declare-fun lt!30621 () Bool)

(assert (=> d!15281 (= res!37323 (not lt!30621))))

(declare-fun lt!30620 () Bool)

(assert (=> d!15281 (= lt!30621 lt!30620)))

(declare-fun lt!30619 () Unit!1898)

(declare-fun e!45567 () Unit!1898)

(assert (=> d!15281 (= lt!30619 e!45567)))

(declare-fun c!9985 () Bool)

(assert (=> d!15281 (= c!9985 lt!30620)))

(assert (=> d!15281 (= lt!30620 (containsKey!133 (toList!708 (+!89 lt!30229 (tuple2!2091 lt!30228 lt!30227))) lt!30230))))

(assert (=> d!15281 (= (contains!709 (+!89 lt!30229 (tuple2!2091 lt!30228 lt!30227)) lt!30230) lt!30621)))

(declare-fun b!69618 () Bool)

(declare-fun lt!30618 () Unit!1898)

(assert (=> b!69618 (= e!45567 lt!30618)))

(assert (=> b!69618 (= lt!30618 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 (+!89 lt!30229 (tuple2!2091 lt!30228 lt!30227))) lt!30230))))

(assert (=> b!69618 (isDefined!83 (getValueByKey!129 (toList!708 (+!89 lt!30229 (tuple2!2091 lt!30228 lt!30227))) lt!30230))))

(declare-fun b!69619 () Bool)

(declare-fun Unit!1949 () Unit!1898)

(assert (=> b!69619 (= e!45567 Unit!1949)))

(declare-fun b!69620 () Bool)

(assert (=> b!69620 (= e!45568 (isDefined!83 (getValueByKey!129 (toList!708 (+!89 lt!30229 (tuple2!2091 lt!30228 lt!30227))) lt!30230)))))

(assert (= (and d!15281 c!9985) b!69618))

(assert (= (and d!15281 (not c!9985)) b!69619))

(assert (= (and d!15281 (not res!37323)) b!69620))

(declare-fun m!66079 () Bool)

(assert (=> d!15281 m!66079))

(declare-fun m!66081 () Bool)

(assert (=> b!69618 m!66081))

(declare-fun m!66083 () Bool)

(assert (=> b!69618 m!66083))

(assert (=> b!69618 m!66083))

(declare-fun m!66085 () Bool)

(assert (=> b!69618 m!66085))

(assert (=> b!69620 m!66083))

(assert (=> b!69620 m!66083))

(assert (=> b!69620 m!66085))

(assert (=> b!68990 d!15281))

(declare-fun d!15283 () Bool)

(assert (=> d!15283 (not (contains!709 (+!89 lt!30229 (tuple2!2091 lt!30228 lt!30227)) lt!30230))))

(declare-fun lt!30622 () Unit!1898)

(assert (=> d!15283 (= lt!30622 (choose!392 lt!30229 lt!30228 lt!30227 lt!30230))))

(declare-fun e!45569 () Bool)

(assert (=> d!15283 e!45569))

(declare-fun res!37324 () Bool)

(assert (=> d!15283 (=> (not res!37324) (not e!45569))))

(assert (=> d!15283 (= res!37324 (not (contains!709 lt!30229 lt!30230)))))

(assert (=> d!15283 (= (addStillNotContains!23 lt!30229 lt!30228 lt!30227 lt!30230) lt!30622)))

(declare-fun b!69621 () Bool)

(assert (=> b!69621 (= e!45569 (not (= lt!30228 lt!30230)))))

(assert (= (and d!15283 res!37324) b!69621))

(assert (=> d!15283 m!64677))

(assert (=> d!15283 m!64677))

(assert (=> d!15283 m!64679))

(declare-fun m!66087 () Bool)

(assert (=> d!15283 m!66087))

(declare-fun m!66089 () Bool)

(assert (=> d!15283 m!66089))

(assert (=> b!68990 d!15283))

(assert (=> b!69020 d!14925))

(declare-fun d!15285 () Bool)

(declare-fun res!37325 () Bool)

(declare-fun e!45570 () Bool)

(assert (=> d!15285 (=> res!37325 e!45570)))

(assert (=> d!15285 (= res!37325 (and ((_ is Cons!1466) lt!30093) (= (_1!1056 (h!2051 lt!30093)) (_1!1056 lt!29675))))))

(assert (=> d!15285 (= (containsKey!133 lt!30093 (_1!1056 lt!29675)) e!45570)))

(declare-fun b!69622 () Bool)

(declare-fun e!45571 () Bool)

(assert (=> b!69622 (= e!45570 e!45571)))

(declare-fun res!37326 () Bool)

(assert (=> b!69622 (=> (not res!37326) (not e!45571))))

(assert (=> b!69622 (= res!37326 (and (or (not ((_ is Cons!1466) lt!30093)) (bvsle (_1!1056 (h!2051 lt!30093)) (_1!1056 lt!29675))) ((_ is Cons!1466) lt!30093) (bvslt (_1!1056 (h!2051 lt!30093)) (_1!1056 lt!29675))))))

(declare-fun b!69623 () Bool)

(assert (=> b!69623 (= e!45571 (containsKey!133 (t!4964 lt!30093) (_1!1056 lt!29675)))))

(assert (= (and d!15285 (not res!37325)) b!69622))

(assert (= (and b!69622 res!37326) b!69623))

(declare-fun m!66091 () Bool)

(assert (=> b!69623 m!66091))

(assert (=> b!68848 d!15285))

(assert (=> bm!5869 d!15151))

(declare-fun d!15287 () Bool)

(declare-fun e!45573 () Bool)

(assert (=> d!15287 e!45573))

(declare-fun res!37327 () Bool)

(assert (=> d!15287 (=> res!37327 e!45573)))

(declare-fun lt!30626 () Bool)

(assert (=> d!15287 (= res!37327 (not lt!30626))))

(declare-fun lt!30625 () Bool)

(assert (=> d!15287 (= lt!30626 lt!30625)))

(declare-fun lt!30624 () Unit!1898)

(declare-fun e!45572 () Unit!1898)

(assert (=> d!15287 (= lt!30624 e!45572)))

(declare-fun c!9986 () Bool)

(assert (=> d!15287 (= c!9986 lt!30625)))

(assert (=> d!15287 (= lt!30625 (containsKey!133 (toList!708 lt!30288) (_1!1056 (tuple2!2091 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(assert (=> d!15287 (= (contains!709 lt!30288 (_1!1056 (tuple2!2091 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))) lt!30626)))

(declare-fun b!69624 () Bool)

(declare-fun lt!30623 () Unit!1898)

(assert (=> b!69624 (= e!45572 lt!30623)))

(assert (=> b!69624 (= lt!30623 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 lt!30288) (_1!1056 (tuple2!2091 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(assert (=> b!69624 (isDefined!83 (getValueByKey!129 (toList!708 lt!30288) (_1!1056 (tuple2!2091 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(declare-fun b!69625 () Bool)

(declare-fun Unit!1950 () Unit!1898)

(assert (=> b!69625 (= e!45572 Unit!1950)))

(declare-fun b!69626 () Bool)

(assert (=> b!69626 (= e!45573 (isDefined!83 (getValueByKey!129 (toList!708 lt!30288) (_1!1056 (tuple2!2091 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(assert (= (and d!15287 c!9986) b!69624))

(assert (= (and d!15287 (not c!9986)) b!69625))

(assert (= (and d!15287 (not res!37327)) b!69626))

(declare-fun m!66093 () Bool)

(assert (=> d!15287 m!66093))

(declare-fun m!66095 () Bool)

(assert (=> b!69624 m!66095))

(assert (=> b!69624 m!64835))

(assert (=> b!69624 m!64835))

(declare-fun m!66097 () Bool)

(assert (=> b!69624 m!66097))

(assert (=> b!69626 m!64835))

(assert (=> b!69626 m!64835))

(assert (=> b!69626 m!66097))

(assert (=> d!14847 d!15287))

(declare-fun e!45575 () Option!135)

(declare-fun b!69629 () Bool)

(assert (=> b!69629 (= e!45575 (getValueByKey!129 (t!4964 lt!30286) (_1!1056 (tuple2!2091 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(declare-fun b!69627 () Bool)

(declare-fun e!45574 () Option!135)

(assert (=> b!69627 (= e!45574 (Some!134 (_2!1056 (h!2051 lt!30286))))))

(declare-fun b!69630 () Bool)

(assert (=> b!69630 (= e!45575 None!133)))

(declare-fun c!9987 () Bool)

(declare-fun d!15289 () Bool)

(assert (=> d!15289 (= c!9987 (and ((_ is Cons!1466) lt!30286) (= (_1!1056 (h!2051 lt!30286)) (_1!1056 (tuple2!2091 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(assert (=> d!15289 (= (getValueByKey!129 lt!30286 (_1!1056 (tuple2!2091 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))) e!45574)))

(declare-fun b!69628 () Bool)

(assert (=> b!69628 (= e!45574 e!45575)))

(declare-fun c!9988 () Bool)

(assert (=> b!69628 (= c!9988 (and ((_ is Cons!1466) lt!30286) (not (= (_1!1056 (h!2051 lt!30286)) (_1!1056 (tuple2!2091 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))))

(assert (= (and d!15289 c!9987) b!69627))

(assert (= (and d!15289 (not c!9987)) b!69628))

(assert (= (and b!69628 c!9988) b!69629))

(assert (= (and b!69628 (not c!9988)) b!69630))

(declare-fun m!66099 () Bool)

(assert (=> b!69629 m!66099))

(assert (=> d!14847 d!15289))

(declare-fun d!15291 () Bool)

(assert (=> d!15291 (= (getValueByKey!129 lt!30286 (_1!1056 (tuple2!2091 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))) (Some!134 (_2!1056 (tuple2!2091 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(declare-fun lt!30627 () Unit!1898)

(assert (=> d!15291 (= lt!30627 (choose!390 lt!30286 (_1!1056 (tuple2!2091 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))) (_2!1056 (tuple2!2091 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(declare-fun e!45576 () Bool)

(assert (=> d!15291 e!45576))

(declare-fun res!37328 () Bool)

(assert (=> d!15291 (=> (not res!37328) (not e!45576))))

(assert (=> d!15291 (= res!37328 (isStrictlySorted!285 lt!30286))))

(assert (=> d!15291 (= (lemmaContainsTupThenGetReturnValue!49 lt!30286 (_1!1056 (tuple2!2091 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))) (_2!1056 (tuple2!2091 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))) lt!30627)))

(declare-fun b!69631 () Bool)

(declare-fun res!37329 () Bool)

(assert (=> b!69631 (=> (not res!37329) (not e!45576))))

(assert (=> b!69631 (= res!37329 (containsKey!133 lt!30286 (_1!1056 (tuple2!2091 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(declare-fun b!69632 () Bool)

(assert (=> b!69632 (= e!45576 (contains!711 lt!30286 (tuple2!2091 (_1!1056 (tuple2!2091 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))) (_2!1056 (tuple2!2091 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(assert (= (and d!15291 res!37328) b!69631))

(assert (= (and b!69631 res!37329) b!69632))

(assert (=> d!15291 m!64829))

(declare-fun m!66101 () Bool)

(assert (=> d!15291 m!66101))

(declare-fun m!66103 () Bool)

(assert (=> d!15291 m!66103))

(declare-fun m!66105 () Bool)

(assert (=> b!69631 m!66105))

(declare-fun m!66107 () Bool)

(assert (=> b!69632 m!66107))

(assert (=> d!14847 d!15291))

(declare-fun b!69633 () Bool)

(declare-fun e!45580 () List!1470)

(declare-fun call!5966 () List!1470)

(assert (=> b!69633 (= e!45580 call!5966)))

(declare-fun c!9989 () Bool)

(declare-fun b!69634 () Bool)

(assert (=> b!69634 (= c!9989 (and ((_ is Cons!1466) (toList!708 lt!29800)) (bvsgt (_1!1056 (h!2051 (toList!708 lt!29800))) (_1!1056 (tuple2!2091 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(declare-fun e!45578 () List!1470)

(assert (=> b!69634 (= e!45578 e!45580)))

(declare-fun b!69635 () Bool)

(assert (=> b!69635 (= e!45580 call!5966)))

(declare-fun b!69637 () Bool)

(declare-fun call!5965 () List!1470)

(assert (=> b!69637 (= e!45578 call!5965)))

(declare-fun bm!5962 () Bool)

(declare-fun call!5967 () List!1470)

(assert (=> bm!5962 (= call!5965 call!5967)))

(declare-fun bm!5963 () Bool)

(assert (=> bm!5963 (= call!5966 call!5965)))

(declare-fun b!69638 () Bool)

(declare-fun e!45577 () List!1470)

(assert (=> b!69638 (= e!45577 e!45578)))

(declare-fun c!9990 () Bool)

(assert (=> b!69638 (= c!9990 (and ((_ is Cons!1466) (toList!708 lt!29800)) (= (_1!1056 (h!2051 (toList!708 lt!29800))) (_1!1056 (tuple2!2091 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(declare-fun bm!5964 () Bool)

(declare-fun e!45579 () List!1470)

(declare-fun c!9992 () Bool)

(assert (=> bm!5964 (= call!5967 ($colon$colon!63 e!45579 (ite c!9992 (h!2051 (toList!708 lt!29800)) (tuple2!2091 (_1!1056 (tuple2!2091 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))) (_2!1056 (tuple2!2091 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))))

(declare-fun c!9991 () Bool)

(assert (=> bm!5964 (= c!9991 c!9992)))

(declare-fun b!69639 () Bool)

(declare-fun res!37331 () Bool)

(declare-fun e!45581 () Bool)

(assert (=> b!69639 (=> (not res!37331) (not e!45581))))

(declare-fun lt!30628 () List!1470)

(assert (=> b!69639 (= res!37331 (containsKey!133 lt!30628 (_1!1056 (tuple2!2091 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(declare-fun b!69640 () Bool)

(assert (=> b!69640 (= e!45581 (contains!711 lt!30628 (tuple2!2091 (_1!1056 (tuple2!2091 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))) (_2!1056 (tuple2!2091 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(declare-fun b!69641 () Bool)

(assert (=> b!69641 (= e!45579 (ite c!9990 (t!4964 (toList!708 lt!29800)) (ite c!9989 (Cons!1466 (h!2051 (toList!708 lt!29800)) (t!4964 (toList!708 lt!29800))) Nil!1467)))))

(declare-fun b!69642 () Bool)

(assert (=> b!69642 (= e!45577 call!5967)))

(declare-fun d!15293 () Bool)

(assert (=> d!15293 e!45581))

(declare-fun res!37330 () Bool)

(assert (=> d!15293 (=> (not res!37330) (not e!45581))))

(assert (=> d!15293 (= res!37330 (isStrictlySorted!285 lt!30628))))

(assert (=> d!15293 (= lt!30628 e!45577)))

(assert (=> d!15293 (= c!9992 (and ((_ is Cons!1466) (toList!708 lt!29800)) (bvslt (_1!1056 (h!2051 (toList!708 lt!29800))) (_1!1056 (tuple2!2091 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(assert (=> d!15293 (isStrictlySorted!285 (toList!708 lt!29800))))

(assert (=> d!15293 (= (insertStrictlySorted!52 (toList!708 lt!29800) (_1!1056 (tuple2!2091 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))) (_2!1056 (tuple2!2091 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))) lt!30628)))

(declare-fun b!69636 () Bool)

(assert (=> b!69636 (= e!45579 (insertStrictlySorted!52 (t!4964 (toList!708 lt!29800)) (_1!1056 (tuple2!2091 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))) (_2!1056 (tuple2!2091 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(assert (= (and d!15293 c!9992) b!69642))

(assert (= (and d!15293 (not c!9992)) b!69638))

(assert (= (and b!69638 c!9990) b!69637))

(assert (= (and b!69638 (not c!9990)) b!69634))

(assert (= (and b!69634 c!9989) b!69635))

(assert (= (and b!69634 (not c!9989)) b!69633))

(assert (= (or b!69635 b!69633) bm!5963))

(assert (= (or b!69637 bm!5963) bm!5962))

(assert (= (or b!69642 bm!5962) bm!5964))

(assert (= (and bm!5964 c!9991) b!69636))

(assert (= (and bm!5964 (not c!9991)) b!69641))

(assert (= (and d!15293 res!37330) b!69639))

(assert (= (and b!69639 res!37331) b!69640))

(declare-fun m!66109 () Bool)

(assert (=> d!15293 m!66109))

(declare-fun m!66111 () Bool)

(assert (=> d!15293 m!66111))

(declare-fun m!66113 () Bool)

(assert (=> b!69640 m!66113))

(declare-fun m!66115 () Bool)

(assert (=> b!69639 m!66115))

(declare-fun m!66117 () Bool)

(assert (=> bm!5964 m!66117))

(declare-fun m!66119 () Bool)

(assert (=> b!69636 m!66119))

(assert (=> d!14847 d!15293))

(declare-fun d!15295 () Bool)

(assert (=> d!15295 (= (isDefined!83 (getValueByKey!129 (toList!708 call!5832) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355))) (not (isEmpty!316 (getValueByKey!129 (toList!708 call!5832) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))))

(declare-fun bs!3001 () Bool)

(assert (= bs!3001 d!15295))

(assert (=> bs!3001 m!64499))

(declare-fun m!66121 () Bool)

(assert (=> bs!3001 m!66121))

(assert (=> b!68870 d!15295))

(declare-fun b!69645 () Bool)

(declare-fun e!45583 () Option!135)

(assert (=> b!69645 (= e!45583 (getValueByKey!129 (t!4964 (toList!708 call!5832)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))

(declare-fun b!69643 () Bool)

(declare-fun e!45582 () Option!135)

(assert (=> b!69643 (= e!45582 (Some!134 (_2!1056 (h!2051 (toList!708 call!5832)))))))

(declare-fun b!69646 () Bool)

(assert (=> b!69646 (= e!45583 None!133)))

(declare-fun d!15297 () Bool)

(declare-fun c!9993 () Bool)

(assert (=> d!15297 (= c!9993 (and ((_ is Cons!1466) (toList!708 call!5832)) (= (_1!1056 (h!2051 (toList!708 call!5832))) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355))))))

(assert (=> d!15297 (= (getValueByKey!129 (toList!708 call!5832) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) e!45582)))

(declare-fun b!69644 () Bool)

(assert (=> b!69644 (= e!45582 e!45583)))

(declare-fun c!9994 () Bool)

(assert (=> b!69644 (= c!9994 (and ((_ is Cons!1466) (toList!708 call!5832)) (not (= (_1!1056 (h!2051 (toList!708 call!5832))) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))))

(assert (= (and d!15297 c!9993) b!69643))

(assert (= (and d!15297 (not c!9993)) b!69644))

(assert (= (and b!69644 c!9994) b!69645))

(assert (= (and b!69644 (not c!9994)) b!69646))

(assert (=> b!69645 m!63767))

(declare-fun m!66123 () Bool)

(assert (=> b!69645 m!66123))

(assert (=> b!68870 d!15297))

(declare-fun d!15299 () Bool)

(declare-fun e!45585 () Bool)

(assert (=> d!15299 e!45585))

(declare-fun res!37332 () Bool)

(assert (=> d!15299 (=> res!37332 e!45585)))

(declare-fun lt!30632 () Bool)

(assert (=> d!15299 (= res!37332 (not lt!30632))))

(declare-fun lt!30631 () Bool)

(assert (=> d!15299 (= lt!30632 lt!30631)))

(declare-fun lt!30630 () Unit!1898)

(declare-fun e!45584 () Unit!1898)

(assert (=> d!15299 (= lt!30630 e!45584)))

(declare-fun c!9995 () Bool)

(assert (=> d!15299 (= c!9995 lt!30631)))

(assert (=> d!15299 (= lt!30631 (containsKey!133 (toList!708 lt!30005) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!15299 (= (contains!709 lt!30005 #b0000000000000000000000000000000000000000000000000000000000000000) lt!30632)))

(declare-fun b!69647 () Bool)

(declare-fun lt!30629 () Unit!1898)

(assert (=> b!69647 (= e!45584 lt!30629)))

(assert (=> b!69647 (= lt!30629 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 lt!30005) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!69647 (isDefined!83 (getValueByKey!129 (toList!708 lt!30005) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69648 () Bool)

(declare-fun Unit!1951 () Unit!1898)

(assert (=> b!69648 (= e!45584 Unit!1951)))

(declare-fun b!69649 () Bool)

(assert (=> b!69649 (= e!45585 (isDefined!83 (getValueByKey!129 (toList!708 lt!30005) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15299 c!9995) b!69647))

(assert (= (and d!15299 (not c!9995)) b!69648))

(assert (= (and d!15299 (not res!37332)) b!69649))

(declare-fun m!66125 () Bool)

(assert (=> d!15299 m!66125))

(declare-fun m!66127 () Bool)

(assert (=> b!69647 m!66127))

(declare-fun m!66129 () Bool)

(assert (=> b!69647 m!66129))

(assert (=> b!69647 m!66129))

(declare-fun m!66131 () Bool)

(assert (=> b!69647 m!66131))

(assert (=> b!69649 m!66129))

(assert (=> b!69649 m!66129))

(assert (=> b!69649 m!66131))

(assert (=> bm!5864 d!15299))

(declare-fun d!15301 () Bool)

(declare-fun c!9996 () Bool)

(assert (=> d!15301 (= c!9996 ((_ is Nil!1467) (toList!708 lt!29853)))))

(declare-fun e!45586 () (InoxSet tuple2!2090))

(assert (=> d!15301 (= (content!73 (toList!708 lt!29853)) e!45586)))

(declare-fun b!69650 () Bool)

(assert (=> b!69650 (= e!45586 ((as const (Array tuple2!2090 Bool)) false))))

(declare-fun b!69651 () Bool)

(assert (=> b!69651 (= e!45586 ((_ map or) (store ((as const (Array tuple2!2090 Bool)) false) (h!2051 (toList!708 lt!29853)) true) (content!73 (t!4964 (toList!708 lt!29853)))))))

(assert (= (and d!15301 c!9996) b!69650))

(assert (= (and d!15301 (not c!9996)) b!69651))

(declare-fun m!66133 () Bool)

(assert (=> b!69651 m!66133))

(declare-fun m!66135 () Bool)

(assert (=> b!69651 m!66135))

(assert (=> d!14727 d!15301))

(declare-fun d!15303 () Bool)

(assert (=> d!15303 (isDefined!83 (getValueByKey!129 (toList!708 lt!29868) (_1!1056 lt!29680)))))

(declare-fun lt!30633 () Unit!1898)

(assert (=> d!15303 (= lt!30633 (choose!399 (toList!708 lt!29868) (_1!1056 lt!29680)))))

(declare-fun e!45587 () Bool)

(assert (=> d!15303 e!45587))

(declare-fun res!37333 () Bool)

(assert (=> d!15303 (=> (not res!37333) (not e!45587))))

(assert (=> d!15303 (= res!37333 (isStrictlySorted!285 (toList!708 lt!29868)))))

(assert (=> d!15303 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 lt!29868) (_1!1056 lt!29680)) lt!30633)))

(declare-fun b!69652 () Bool)

(assert (=> b!69652 (= e!45587 (containsKey!133 (toList!708 lt!29868) (_1!1056 lt!29680)))))

(assert (= (and d!15303 res!37333) b!69652))

(assert (=> d!15303 m!64079))

(assert (=> d!15303 m!64079))

(assert (=> d!15303 m!64203))

(declare-fun m!66137 () Bool)

(assert (=> d!15303 m!66137))

(declare-fun m!66139 () Bool)

(assert (=> d!15303 m!66139))

(assert (=> b!69652 m!64199))

(assert (=> b!68687 d!15303))

(assert (=> b!68687 d!15117))

(assert (=> b!68687 d!14767))

(assert (=> d!14711 d!14709))

(declare-fun d!15305 () Bool)

(assert (=> d!15305 (= (getValueByKey!129 lt!29866 (_1!1056 lt!29680)) (Some!134 (_2!1056 lt!29680)))))

(assert (=> d!15305 true))

(declare-fun _$22!374 () Unit!1898)

(assert (=> d!15305 (= (choose!390 lt!29866 (_1!1056 lt!29680) (_2!1056 lt!29680)) _$22!374)))

(declare-fun bs!3002 () Bool)

(assert (= bs!3002 d!15305))

(assert (=> bs!3002 m!64073))

(assert (=> d!14711 d!15305))

(declare-fun d!15307 () Bool)

(declare-fun res!37334 () Bool)

(declare-fun e!45588 () Bool)

(assert (=> d!15307 (=> res!37334 e!45588)))

(assert (=> d!15307 (= res!37334 (or ((_ is Nil!1467) lt!29866) ((_ is Nil!1467) (t!4964 lt!29866))))))

(assert (=> d!15307 (= (isStrictlySorted!285 lt!29866) e!45588)))

(declare-fun b!69653 () Bool)

(declare-fun e!45589 () Bool)

(assert (=> b!69653 (= e!45588 e!45589)))

(declare-fun res!37335 () Bool)

(assert (=> b!69653 (=> (not res!37335) (not e!45589))))

(assert (=> b!69653 (= res!37335 (bvslt (_1!1056 (h!2051 lt!29866)) (_1!1056 (h!2051 (t!4964 lt!29866)))))))

(declare-fun b!69654 () Bool)

(assert (=> b!69654 (= e!45589 (isStrictlySorted!285 (t!4964 lt!29866)))))

(assert (= (and d!15307 (not res!37334)) b!69653))

(assert (= (and b!69653 res!37335) b!69654))

(declare-fun m!66141 () Bool)

(assert (=> b!69654 m!66141))

(assert (=> d!14711 d!15307))

(declare-fun d!15309 () Bool)

(assert (=> d!15309 (= (apply!73 lt!30322 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)) (get!1129 (getValueByKey!129 (toList!708 lt!30322) (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3003 () Bool)

(assert (= bs!3003 d!15309))

(assert (=> bs!3003 m!64177))

(assert (=> bs!3003 m!65297))

(assert (=> bs!3003 m!65297))

(declare-fun m!66143 () Bool)

(assert (=> bs!3003 m!66143))

(assert (=> b!69095 d!15309))

(assert (=> b!69095 d!15111))

(declare-fun d!15311 () Bool)

(assert (=> d!15311 (= (isDefined!83 (getValueByKey!129 (toList!708 e!44955) (ite c!9713 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (select (arr!1828 (_keys!3810 newMap!16)) (index!3078 lt!29944))))) (not (isEmpty!316 (getValueByKey!129 (toList!708 e!44955) (ite c!9713 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (select (arr!1828 (_keys!3810 newMap!16)) (index!3078 lt!29944)))))))))

(declare-fun bs!3004 () Bool)

(assert (= bs!3004 d!15311))

(assert (=> bs!3004 m!64987))

(declare-fun m!66145 () Bool)

(assert (=> bs!3004 m!66145))

(assert (=> b!69116 d!15311))

(declare-fun e!45591 () Option!135)

(declare-fun b!69657 () Bool)

(assert (=> b!69657 (= e!45591 (getValueByKey!129 (t!4964 (toList!708 e!44955)) (ite c!9713 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (select (arr!1828 (_keys!3810 newMap!16)) (index!3078 lt!29944)))))))

(declare-fun b!69655 () Bool)

(declare-fun e!45590 () Option!135)

(assert (=> b!69655 (= e!45590 (Some!134 (_2!1056 (h!2051 (toList!708 e!44955)))))))

(declare-fun b!69658 () Bool)

(assert (=> b!69658 (= e!45591 None!133)))

(declare-fun d!15313 () Bool)

(declare-fun c!9997 () Bool)

(assert (=> d!15313 (= c!9997 (and ((_ is Cons!1466) (toList!708 e!44955)) (= (_1!1056 (h!2051 (toList!708 e!44955))) (ite c!9713 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (select (arr!1828 (_keys!3810 newMap!16)) (index!3078 lt!29944))))))))

(assert (=> d!15313 (= (getValueByKey!129 (toList!708 e!44955) (ite c!9713 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (select (arr!1828 (_keys!3810 newMap!16)) (index!3078 lt!29944)))) e!45590)))

(declare-fun b!69656 () Bool)

(assert (=> b!69656 (= e!45590 e!45591)))

(declare-fun c!9998 () Bool)

(assert (=> b!69656 (= c!9998 (and ((_ is Cons!1466) (toList!708 e!44955)) (not (= (_1!1056 (h!2051 (toList!708 e!44955))) (ite c!9713 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (select (arr!1828 (_keys!3810 newMap!16)) (index!3078 lt!29944)))))))))

(assert (= (and d!15313 c!9997) b!69655))

(assert (= (and d!15313 (not c!9997)) b!69656))

(assert (= (and b!69656 c!9998) b!69657))

(assert (= (and b!69656 (not c!9998)) b!69658))

(declare-fun m!66147 () Bool)

(assert (=> b!69657 m!66147))

(assert (=> b!69116 d!15313))

(declare-fun d!15315 () Bool)

(assert (=> d!15315 (= (validKeyInArray!0 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!68997 d!15315))

(assert (=> b!68985 d!14925))

(declare-fun d!15317 () Bool)

(declare-fun e!45593 () Bool)

(assert (=> d!15317 e!45593))

(declare-fun res!37336 () Bool)

(assert (=> d!15317 (=> res!37336 e!45593)))

(declare-fun lt!30637 () Bool)

(assert (=> d!15317 (= res!37336 (not lt!30637))))

(declare-fun lt!30636 () Bool)

(assert (=> d!15317 (= lt!30637 lt!30636)))

(declare-fun lt!30635 () Unit!1898)

(declare-fun e!45592 () Unit!1898)

(assert (=> d!15317 (= lt!30635 e!45592)))

(declare-fun c!9999 () Bool)

(assert (=> d!15317 (= c!9999 lt!30636)))

(assert (=> d!15317 (= lt!30636 (containsKey!133 (toList!708 lt!30027) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!15317 (= (contains!709 lt!30027 #b0000000000000000000000000000000000000000000000000000000000000000) lt!30637)))

(declare-fun b!69659 () Bool)

(declare-fun lt!30634 () Unit!1898)

(assert (=> b!69659 (= e!45592 lt!30634)))

(assert (=> b!69659 (= lt!30634 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 lt!30027) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!69659 (isDefined!83 (getValueByKey!129 (toList!708 lt!30027) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69660 () Bool)

(declare-fun Unit!1952 () Unit!1898)

(assert (=> b!69660 (= e!45592 Unit!1952)))

(declare-fun b!69661 () Bool)

(assert (=> b!69661 (= e!45593 (isDefined!83 (getValueByKey!129 (toList!708 lt!30027) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15317 c!9999) b!69659))

(assert (= (and d!15317 (not c!9999)) b!69660))

(assert (= (and d!15317 (not res!37336)) b!69661))

(declare-fun m!66149 () Bool)

(assert (=> d!15317 m!66149))

(declare-fun m!66151 () Bool)

(assert (=> b!69659 m!66151))

(declare-fun m!66153 () Bool)

(assert (=> b!69659 m!66153))

(assert (=> b!69659 m!66153))

(declare-fun m!66155 () Bool)

(assert (=> b!69659 m!66155))

(assert (=> b!69661 m!66153))

(assert (=> b!69661 m!66153))

(assert (=> b!69661 m!66155))

(assert (=> bm!5871 d!15317))

(assert (=> b!69083 d!14925))

(declare-fun e!45595 () Option!135)

(declare-fun b!69664 () Bool)

(assert (=> b!69664 (= e!45595 (getValueByKey!129 (t!4964 (toList!708 lt!30288)) (_1!1056 (tuple2!2091 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(declare-fun b!69662 () Bool)

(declare-fun e!45594 () Option!135)

(assert (=> b!69662 (= e!45594 (Some!134 (_2!1056 (h!2051 (toList!708 lt!30288)))))))

(declare-fun b!69665 () Bool)

(assert (=> b!69665 (= e!45595 None!133)))

(declare-fun c!10000 () Bool)

(declare-fun d!15319 () Bool)

(assert (=> d!15319 (= c!10000 (and ((_ is Cons!1466) (toList!708 lt!30288)) (= (_1!1056 (h!2051 (toList!708 lt!30288))) (_1!1056 (tuple2!2091 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(assert (=> d!15319 (= (getValueByKey!129 (toList!708 lt!30288) (_1!1056 (tuple2!2091 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))) e!45594)))

(declare-fun b!69663 () Bool)

(assert (=> b!69663 (= e!45594 e!45595)))

(declare-fun c!10001 () Bool)

(assert (=> b!69663 (= c!10001 (and ((_ is Cons!1466) (toList!708 lt!30288)) (not (= (_1!1056 (h!2051 (toList!708 lt!30288))) (_1!1056 (tuple2!2091 lt!29812 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))))

(assert (= (and d!15319 c!10000) b!69662))

(assert (= (and d!15319 (not c!10000)) b!69663))

(assert (= (and b!69663 c!10001) b!69664))

(assert (= (and b!69663 (not c!10001)) b!69665))

(declare-fun m!66157 () Bool)

(assert (=> b!69664 m!66157))

(assert (=> b!69056 d!15319))

(declare-fun b!69678 () Bool)

(declare-fun c!10009 () Bool)

(declare-fun lt!30642 () (_ BitVec 64))

(assert (=> b!69678 (= c!10009 (= lt!30642 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!45602 () SeekEntryResult!237)

(declare-fun e!45603 () SeekEntryResult!237)

(assert (=> b!69678 (= e!45602 e!45603)))

(declare-fun b!69679 () Bool)

(assert (=> b!69679 (= e!45603 (MissingVacant!237 (index!3079 lt!30074)))))

(declare-fun b!69680 () Bool)

(declare-fun e!45604 () SeekEntryResult!237)

(assert (=> b!69680 (= e!45604 e!45602)))

(declare-fun c!10008 () Bool)

(assert (=> b!69680 (= c!10008 (= lt!30642 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))

(declare-fun b!69681 () Bool)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!69681 (= e!45603 (seekKeyOrZeroReturnVacant!0 (bvadd (x!10850 lt!30074) #b00000000000000000000000000000001) (nextIndex!0 (index!3079 lt!30074) (x!10850 lt!30074) (mask!6111 newMap!16)) (index!3079 lt!30074) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (_keys!3810 newMap!16) (mask!6111 newMap!16)))))

(declare-fun b!69682 () Bool)

(assert (=> b!69682 (= e!45604 Undefined!237)))

(declare-fun d!15321 () Bool)

(declare-fun lt!30643 () SeekEntryResult!237)

(assert (=> d!15321 (and (or ((_ is Undefined!237) lt!30643) (not ((_ is Found!237) lt!30643)) (and (bvsge (index!3078 lt!30643) #b00000000000000000000000000000000) (bvslt (index!3078 lt!30643) (size!2065 (_keys!3810 newMap!16))))) (or ((_ is Undefined!237) lt!30643) ((_ is Found!237) lt!30643) (not ((_ is MissingVacant!237) lt!30643)) (not (= (index!3080 lt!30643) (index!3079 lt!30074))) (and (bvsge (index!3080 lt!30643) #b00000000000000000000000000000000) (bvslt (index!3080 lt!30643) (size!2065 (_keys!3810 newMap!16))))) (or ((_ is Undefined!237) lt!30643) (ite ((_ is Found!237) lt!30643) (= (select (arr!1828 (_keys!3810 newMap!16)) (index!3078 lt!30643)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) (and ((_ is MissingVacant!237) lt!30643) (= (index!3080 lt!30643) (index!3079 lt!30074)) (= (select (arr!1828 (_keys!3810 newMap!16)) (index!3080 lt!30643)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!15321 (= lt!30643 e!45604)))

(declare-fun c!10010 () Bool)

(assert (=> d!15321 (= c!10010 (bvsge (x!10850 lt!30074) #b01111111111111111111111111111110))))

(assert (=> d!15321 (= lt!30642 (select (arr!1828 (_keys!3810 newMap!16)) (index!3079 lt!30074)))))

(assert (=> d!15321 (validMask!0 (mask!6111 newMap!16))))

(assert (=> d!15321 (= (seekKeyOrZeroReturnVacant!0 (x!10850 lt!30074) (index!3079 lt!30074) (index!3079 lt!30074) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (_keys!3810 newMap!16) (mask!6111 newMap!16)) lt!30643)))

(declare-fun b!69683 () Bool)

(assert (=> b!69683 (= e!45602 (Found!237 (index!3079 lt!30074)))))

(assert (= (and d!15321 c!10010) b!69682))

(assert (= (and d!15321 (not c!10010)) b!69680))

(assert (= (and b!69680 c!10008) b!69683))

(assert (= (and b!69680 (not c!10008)) b!69678))

(assert (= (and b!69678 c!10009) b!69679))

(assert (= (and b!69678 (not c!10009)) b!69681))

(declare-fun m!66159 () Bool)

(assert (=> b!69681 m!66159))

(assert (=> b!69681 m!66159))

(assert (=> b!69681 m!63767))

(declare-fun m!66161 () Bool)

(assert (=> b!69681 m!66161))

(declare-fun m!66163 () Bool)

(assert (=> d!15321 m!66163))

(declare-fun m!66165 () Bool)

(assert (=> d!15321 m!66165))

(assert (=> d!15321 m!64419))

(assert (=> d!15321 m!64193))

(assert (=> b!68817 d!15321))

(declare-fun d!15323 () Bool)

(assert (=> d!15323 (= (isDefined!83 (getValueByKey!129 (toList!708 lt!29835) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!316 (getValueByKey!129 (toList!708 lt!29835) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3005 () Bool)

(assert (= bs!3005 d!15323))

(assert (=> bs!3005 m!64777))

(declare-fun m!66167 () Bool)

(assert (=> bs!3005 m!66167))

(assert (=> b!69049 d!15323))

(declare-fun b!69686 () Bool)

(declare-fun e!45606 () Option!135)

(assert (=> b!69686 (= e!45606 (getValueByKey!129 (t!4964 (toList!708 lt!29835)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69684 () Bool)

(declare-fun e!45605 () Option!135)

(assert (=> b!69684 (= e!45605 (Some!134 (_2!1056 (h!2051 (toList!708 lt!29835)))))))

(declare-fun b!69687 () Bool)

(assert (=> b!69687 (= e!45606 None!133)))

(declare-fun d!15325 () Bool)

(declare-fun c!10011 () Bool)

(assert (=> d!15325 (= c!10011 (and ((_ is Cons!1466) (toList!708 lt!29835)) (= (_1!1056 (h!2051 (toList!708 lt!29835))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!15325 (= (getValueByKey!129 (toList!708 lt!29835) #b0000000000000000000000000000000000000000000000000000000000000000) e!45605)))

(declare-fun b!69685 () Bool)

(assert (=> b!69685 (= e!45605 e!45606)))

(declare-fun c!10012 () Bool)

(assert (=> b!69685 (= c!10012 (and ((_ is Cons!1466) (toList!708 lt!29835)) (not (= (_1!1056 (h!2051 (toList!708 lt!29835))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!15325 c!10011) b!69684))

(assert (= (and d!15325 (not c!10011)) b!69685))

(assert (= (and b!69685 c!10012) b!69686))

(assert (= (and b!69685 (not c!10012)) b!69687))

(declare-fun m!66169 () Bool)

(assert (=> b!69686 m!66169))

(assert (=> b!69049 d!15325))

(declare-fun lt!30644 () Bool)

(declare-fun d!15327 () Bool)

(assert (=> d!15327 (= lt!30644 (select (content!73 (toList!708 lt!30080)) (ite c!9716 (ite c!9712 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))

(declare-fun e!45608 () Bool)

(assert (=> d!15327 (= lt!30644 e!45608)))

(declare-fun res!37338 () Bool)

(assert (=> d!15327 (=> (not res!37338) (not e!45608))))

(assert (=> d!15327 (= res!37338 ((_ is Cons!1466) (toList!708 lt!30080)))))

(assert (=> d!15327 (= (contains!711 (toList!708 lt!30080) (ite c!9716 (ite c!9712 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))) lt!30644)))

(declare-fun b!69688 () Bool)

(declare-fun e!45607 () Bool)

(assert (=> b!69688 (= e!45608 e!45607)))

(declare-fun res!37337 () Bool)

(assert (=> b!69688 (=> res!37337 e!45607)))

(assert (=> b!69688 (= res!37337 (= (h!2051 (toList!708 lt!30080)) (ite c!9716 (ite c!9712 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))

(declare-fun b!69689 () Bool)

(assert (=> b!69689 (= e!45607 (contains!711 (t!4964 (toList!708 lt!30080)) (ite c!9716 (ite c!9712 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))

(assert (= (and d!15327 res!37338) b!69688))

(assert (= (and b!69688 (not res!37337)) b!69689))

(declare-fun m!66171 () Bool)

(assert (=> d!15327 m!66171))

(declare-fun m!66173 () Bool)

(assert (=> d!15327 m!66173))

(declare-fun m!66175 () Bool)

(assert (=> b!69689 m!66175))

(assert (=> b!68823 d!15327))

(declare-fun d!15329 () Bool)

(declare-fun lt!30645 () Bool)

(assert (=> d!15329 (= lt!30645 (select (content!73 (t!4964 (toList!708 lt!29857))) lt!29675))))

(declare-fun e!45610 () Bool)

(assert (=> d!15329 (= lt!30645 e!45610)))

(declare-fun res!37340 () Bool)

(assert (=> d!15329 (=> (not res!37340) (not e!45610))))

(assert (=> d!15329 (= res!37340 ((_ is Cons!1466) (t!4964 (toList!708 lt!29857))))))

(assert (=> d!15329 (= (contains!711 (t!4964 (toList!708 lt!29857)) lt!29675) lt!30645)))

(declare-fun b!69690 () Bool)

(declare-fun e!45609 () Bool)

(assert (=> b!69690 (= e!45610 e!45609)))

(declare-fun res!37339 () Bool)

(assert (=> b!69690 (=> res!37339 e!45609)))

(assert (=> b!69690 (= res!37339 (= (h!2051 (t!4964 (toList!708 lt!29857))) lt!29675))))

(declare-fun b!69691 () Bool)

(assert (=> b!69691 (= e!45609 (contains!711 (t!4964 (t!4964 (toList!708 lt!29857))) lt!29675))))

(assert (= (and d!15329 res!37340) b!69690))

(assert (= (and b!69690 (not res!37339)) b!69691))

(assert (=> d!15329 m!66025))

(declare-fun m!66177 () Bool)

(assert (=> d!15329 m!66177))

(declare-fun m!66179 () Bool)

(assert (=> b!69691 m!66179))

(assert (=> b!68821 d!15329))

(declare-fun d!15331 () Bool)

(assert (=> d!15331 (= (apply!73 lt!30005 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1129 (getValueByKey!129 (toList!708 lt!30005) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3006 () Bool)

(assert (= bs!3006 d!15331))

(assert (=> bs!3006 m!66129))

(assert (=> bs!3006 m!66129))

(declare-fun m!66181 () Bool)

(assert (=> bs!3006 m!66181))

(assert (=> b!68756 d!15331))

(declare-fun b!69694 () Bool)

(declare-fun e!45612 () Option!135)

(assert (=> b!69694 (= e!45612 (getValueByKey!129 (t!4964 (t!4964 lt!29859)) (_1!1056 lt!29675)))))

(declare-fun b!69692 () Bool)

(declare-fun e!45611 () Option!135)

(assert (=> b!69692 (= e!45611 (Some!134 (_2!1056 (h!2051 (t!4964 lt!29859)))))))

(declare-fun b!69695 () Bool)

(assert (=> b!69695 (= e!45612 None!133)))

(declare-fun d!15333 () Bool)

(declare-fun c!10013 () Bool)

(assert (=> d!15333 (= c!10013 (and ((_ is Cons!1466) (t!4964 lt!29859)) (= (_1!1056 (h!2051 (t!4964 lt!29859))) (_1!1056 lt!29675))))))

(assert (=> d!15333 (= (getValueByKey!129 (t!4964 lt!29859) (_1!1056 lt!29675)) e!45611)))

(declare-fun b!69693 () Bool)

(assert (=> b!69693 (= e!45611 e!45612)))

(declare-fun c!10014 () Bool)

(assert (=> b!69693 (= c!10014 (and ((_ is Cons!1466) (t!4964 lt!29859)) (not (= (_1!1056 (h!2051 (t!4964 lt!29859))) (_1!1056 lt!29675)))))))

(assert (= (and d!15333 c!10013) b!69692))

(assert (= (and d!15333 (not c!10013)) b!69693))

(assert (= (and b!69693 c!10014) b!69694))

(assert (= (and b!69693 (not c!10014)) b!69695))

(declare-fun m!66183 () Bool)

(assert (=> b!69694 m!66183))

(assert (=> b!68953 d!15333))

(declare-fun d!15335 () Bool)

(assert (=> d!15335 (= (apply!73 (+!89 lt!30335 (tuple2!2091 lt!30332 (minValue!2073 newMap!16))) lt!30327) (get!1129 (getValueByKey!129 (toList!708 (+!89 lt!30335 (tuple2!2091 lt!30332 (minValue!2073 newMap!16)))) lt!30327)))))

(declare-fun bs!3007 () Bool)

(assert (= bs!3007 d!15335))

(declare-fun m!66185 () Bool)

(assert (=> bs!3007 m!66185))

(assert (=> bs!3007 m!66185))

(declare-fun m!66187 () Bool)

(assert (=> bs!3007 m!66187))

(assert (=> b!69101 d!15335))

(declare-fun d!15337 () Bool)

(assert (=> d!15337 (= (apply!73 lt!30331 lt!30318) (get!1129 (getValueByKey!129 (toList!708 lt!30331) lt!30318)))))

(declare-fun bs!3008 () Bool)

(assert (= bs!3008 d!15337))

(declare-fun m!66189 () Bool)

(assert (=> bs!3008 m!66189))

(assert (=> bs!3008 m!66189))

(declare-fun m!66191 () Bool)

(assert (=> bs!3008 m!66191))

(assert (=> b!69101 d!15337))

(declare-fun d!15339 () Bool)

(assert (=> d!15339 (contains!709 (+!89 lt!30316 (tuple2!2091 lt!30320 (zeroValue!2073 newMap!16))) lt!30319)))

(declare-fun lt!30646 () Unit!1898)

(assert (=> d!15339 (= lt!30646 (choose!397 lt!30316 lt!30320 (zeroValue!2073 newMap!16) lt!30319))))

(assert (=> d!15339 (contains!709 lt!30316 lt!30319)))

(assert (=> d!15339 (= (addStillContains!49 lt!30316 lt!30320 (zeroValue!2073 newMap!16) lt!30319) lt!30646)))

(declare-fun bs!3009 () Bool)

(assert (= bs!3009 d!15339))

(assert (=> bs!3009 m!64971))

(assert (=> bs!3009 m!64971))

(assert (=> bs!3009 m!64975))

(declare-fun m!66193 () Bool)

(assert (=> bs!3009 m!66193))

(declare-fun m!66195 () Bool)

(assert (=> bs!3009 m!66195))

(assert (=> b!69101 d!15339))

(declare-fun d!15341 () Bool)

(declare-fun e!45614 () Bool)

(assert (=> d!15341 e!45614))

(declare-fun res!37341 () Bool)

(assert (=> d!15341 (=> res!37341 e!45614)))

(declare-fun lt!30650 () Bool)

(assert (=> d!15341 (= res!37341 (not lt!30650))))

(declare-fun lt!30649 () Bool)

(assert (=> d!15341 (= lt!30650 lt!30649)))

(declare-fun lt!30648 () Unit!1898)

(declare-fun e!45613 () Unit!1898)

(assert (=> d!15341 (= lt!30648 e!45613)))

(declare-fun c!10015 () Bool)

(assert (=> d!15341 (= c!10015 lt!30649)))

(assert (=> d!15341 (= lt!30649 (containsKey!133 (toList!708 (+!89 lt!30316 (tuple2!2091 lt!30320 (zeroValue!2073 newMap!16)))) lt!30319))))

(assert (=> d!15341 (= (contains!709 (+!89 lt!30316 (tuple2!2091 lt!30320 (zeroValue!2073 newMap!16))) lt!30319) lt!30650)))

(declare-fun b!69696 () Bool)

(declare-fun lt!30647 () Unit!1898)

(assert (=> b!69696 (= e!45613 lt!30647)))

(assert (=> b!69696 (= lt!30647 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 (+!89 lt!30316 (tuple2!2091 lt!30320 (zeroValue!2073 newMap!16)))) lt!30319))))

(assert (=> b!69696 (isDefined!83 (getValueByKey!129 (toList!708 (+!89 lt!30316 (tuple2!2091 lt!30320 (zeroValue!2073 newMap!16)))) lt!30319))))

(declare-fun b!69697 () Bool)

(declare-fun Unit!1953 () Unit!1898)

(assert (=> b!69697 (= e!45613 Unit!1953)))

(declare-fun b!69698 () Bool)

(assert (=> b!69698 (= e!45614 (isDefined!83 (getValueByKey!129 (toList!708 (+!89 lt!30316 (tuple2!2091 lt!30320 (zeroValue!2073 newMap!16)))) lt!30319)))))

(assert (= (and d!15341 c!10015) b!69696))

(assert (= (and d!15341 (not c!10015)) b!69697))

(assert (= (and d!15341 (not res!37341)) b!69698))

(declare-fun m!66197 () Bool)

(assert (=> d!15341 m!66197))

(declare-fun m!66199 () Bool)

(assert (=> b!69696 m!66199))

(declare-fun m!66201 () Bool)

(assert (=> b!69696 m!66201))

(assert (=> b!69696 m!66201))

(declare-fun m!66203 () Bool)

(assert (=> b!69696 m!66203))

(assert (=> b!69698 m!66201))

(assert (=> b!69698 m!66201))

(assert (=> b!69698 m!66203))

(assert (=> b!69101 d!15341))

(declare-fun d!15343 () Bool)

(declare-fun e!45615 () Bool)

(assert (=> d!15343 e!45615))

(declare-fun res!37342 () Bool)

(assert (=> d!15343 (=> (not res!37342) (not e!45615))))

(declare-fun lt!30654 () ListLongMap!1385)

(assert (=> d!15343 (= res!37342 (contains!709 lt!30654 (_1!1056 (tuple2!2091 lt!30320 (zeroValue!2073 newMap!16)))))))

(declare-fun lt!30652 () List!1470)

(assert (=> d!15343 (= lt!30654 (ListLongMap!1386 lt!30652))))

(declare-fun lt!30651 () Unit!1898)

(declare-fun lt!30653 () Unit!1898)

(assert (=> d!15343 (= lt!30651 lt!30653)))

(assert (=> d!15343 (= (getValueByKey!129 lt!30652 (_1!1056 (tuple2!2091 lt!30320 (zeroValue!2073 newMap!16)))) (Some!134 (_2!1056 (tuple2!2091 lt!30320 (zeroValue!2073 newMap!16)))))))

(assert (=> d!15343 (= lt!30653 (lemmaContainsTupThenGetReturnValue!49 lt!30652 (_1!1056 (tuple2!2091 lt!30320 (zeroValue!2073 newMap!16))) (_2!1056 (tuple2!2091 lt!30320 (zeroValue!2073 newMap!16)))))))

(assert (=> d!15343 (= lt!30652 (insertStrictlySorted!52 (toList!708 lt!30316) (_1!1056 (tuple2!2091 lt!30320 (zeroValue!2073 newMap!16))) (_2!1056 (tuple2!2091 lt!30320 (zeroValue!2073 newMap!16)))))))

(assert (=> d!15343 (= (+!89 lt!30316 (tuple2!2091 lt!30320 (zeroValue!2073 newMap!16))) lt!30654)))

(declare-fun b!69699 () Bool)

(declare-fun res!37343 () Bool)

(assert (=> b!69699 (=> (not res!37343) (not e!45615))))

(assert (=> b!69699 (= res!37343 (= (getValueByKey!129 (toList!708 lt!30654) (_1!1056 (tuple2!2091 lt!30320 (zeroValue!2073 newMap!16)))) (Some!134 (_2!1056 (tuple2!2091 lt!30320 (zeroValue!2073 newMap!16))))))))

(declare-fun b!69700 () Bool)

(assert (=> b!69700 (= e!45615 (contains!711 (toList!708 lt!30654) (tuple2!2091 lt!30320 (zeroValue!2073 newMap!16))))))

(assert (= (and d!15343 res!37342) b!69699))

(assert (= (and b!69699 res!37343) b!69700))

(declare-fun m!66205 () Bool)

(assert (=> d!15343 m!66205))

(declare-fun m!66207 () Bool)

(assert (=> d!15343 m!66207))

(declare-fun m!66209 () Bool)

(assert (=> d!15343 m!66209))

(declare-fun m!66211 () Bool)

(assert (=> d!15343 m!66211))

(declare-fun m!66213 () Bool)

(assert (=> b!69699 m!66213))

(declare-fun m!66215 () Bool)

(assert (=> b!69700 m!66215))

(assert (=> b!69101 d!15343))

(declare-fun d!15345 () Bool)

(assert (=> d!15345 (= (apply!73 (+!89 lt!30331 (tuple2!2091 lt!30321 (minValue!2073 newMap!16))) lt!30318) (apply!73 lt!30331 lt!30318))))

(declare-fun lt!30655 () Unit!1898)

(assert (=> d!15345 (= lt!30655 (choose!396 lt!30331 lt!30321 (minValue!2073 newMap!16) lt!30318))))

(declare-fun e!45616 () Bool)

(assert (=> d!15345 e!45616))

(declare-fun res!37344 () Bool)

(assert (=> d!15345 (=> (not res!37344) (not e!45616))))

(assert (=> d!15345 (= res!37344 (contains!709 lt!30331 lt!30318))))

(assert (=> d!15345 (= (addApplyDifferent!49 lt!30331 lt!30321 (minValue!2073 newMap!16) lt!30318) lt!30655)))

(declare-fun b!69701 () Bool)

(assert (=> b!69701 (= e!45616 (not (= lt!30318 lt!30321)))))

(assert (= (and d!15345 res!37344) b!69701))

(declare-fun m!66217 () Bool)

(assert (=> d!15345 m!66217))

(assert (=> d!15345 m!64959))

(assert (=> d!15345 m!64967))

(declare-fun m!66219 () Bool)

(assert (=> d!15345 m!66219))

(assert (=> d!15345 m!64959))

(assert (=> d!15345 m!64961))

(assert (=> b!69101 d!15345))

(declare-fun d!15347 () Bool)

(assert (=> d!15347 (= (apply!73 (+!89 lt!30335 (tuple2!2091 lt!30332 (minValue!2073 newMap!16))) lt!30327) (apply!73 lt!30335 lt!30327))))

(declare-fun lt!30656 () Unit!1898)

(assert (=> d!15347 (= lt!30656 (choose!396 lt!30335 lt!30332 (minValue!2073 newMap!16) lt!30327))))

(declare-fun e!45617 () Bool)

(assert (=> d!15347 e!45617))

(declare-fun res!37345 () Bool)

(assert (=> d!15347 (=> (not res!37345) (not e!45617))))

(assert (=> d!15347 (= res!37345 (contains!709 lt!30335 lt!30327))))

(assert (=> d!15347 (= (addApplyDifferent!49 lt!30335 lt!30332 (minValue!2073 newMap!16) lt!30327) lt!30656)))

(declare-fun b!69702 () Bool)

(assert (=> b!69702 (= e!45617 (not (= lt!30327 lt!30332)))))

(assert (= (and d!15347 res!37345) b!69702))

(declare-fun m!66221 () Bool)

(assert (=> d!15347 m!66221))

(assert (=> d!15347 m!64949))

(assert (=> d!15347 m!64973))

(declare-fun m!66223 () Bool)

(assert (=> d!15347 m!66223))

(assert (=> d!15347 m!64949))

(assert (=> d!15347 m!64951))

(assert (=> b!69101 d!15347))

(declare-fun d!15349 () Bool)

(assert (=> d!15349 (= (apply!73 lt!30317 lt!30326) (get!1129 (getValueByKey!129 (toList!708 lt!30317) lt!30326)))))

(declare-fun bs!3010 () Bool)

(assert (= bs!3010 d!15349))

(declare-fun m!66225 () Bool)

(assert (=> bs!3010 m!66225))

(assert (=> bs!3010 m!66225))

(declare-fun m!66227 () Bool)

(assert (=> bs!3010 m!66227))

(assert (=> b!69101 d!15349))

(declare-fun d!15351 () Bool)

(assert (=> d!15351 (= (apply!73 (+!89 lt!30317 (tuple2!2091 lt!30329 (zeroValue!2073 newMap!16))) lt!30326) (apply!73 lt!30317 lt!30326))))

(declare-fun lt!30657 () Unit!1898)

(assert (=> d!15351 (= lt!30657 (choose!396 lt!30317 lt!30329 (zeroValue!2073 newMap!16) lt!30326))))

(declare-fun e!45618 () Bool)

(assert (=> d!15351 e!45618))

(declare-fun res!37346 () Bool)

(assert (=> d!15351 (=> (not res!37346) (not e!45618))))

(assert (=> d!15351 (= res!37346 (contains!709 lt!30317 lt!30326))))

(assert (=> d!15351 (= (addApplyDifferent!49 lt!30317 lt!30329 (zeroValue!2073 newMap!16) lt!30326) lt!30657)))

(declare-fun b!69703 () Bool)

(assert (=> b!69703 (= e!45618 (not (= lt!30326 lt!30329)))))

(assert (= (and d!15351 res!37346) b!69703))

(declare-fun m!66229 () Bool)

(assert (=> d!15351 m!66229))

(assert (=> d!15351 m!64947))

(assert (=> d!15351 m!64969))

(declare-fun m!66231 () Bool)

(assert (=> d!15351 m!66231))

(assert (=> d!15351 m!64947))

(assert (=> d!15351 m!64953))

(assert (=> b!69101 d!15351))

(declare-fun d!15353 () Bool)

(declare-fun e!45619 () Bool)

(assert (=> d!15353 e!45619))

(declare-fun res!37347 () Bool)

(assert (=> d!15353 (=> (not res!37347) (not e!45619))))

(declare-fun lt!30661 () ListLongMap!1385)

(assert (=> d!15353 (= res!37347 (contains!709 lt!30661 (_1!1056 (tuple2!2091 lt!30329 (zeroValue!2073 newMap!16)))))))

(declare-fun lt!30659 () List!1470)

(assert (=> d!15353 (= lt!30661 (ListLongMap!1386 lt!30659))))

(declare-fun lt!30658 () Unit!1898)

(declare-fun lt!30660 () Unit!1898)

(assert (=> d!15353 (= lt!30658 lt!30660)))

(assert (=> d!15353 (= (getValueByKey!129 lt!30659 (_1!1056 (tuple2!2091 lt!30329 (zeroValue!2073 newMap!16)))) (Some!134 (_2!1056 (tuple2!2091 lt!30329 (zeroValue!2073 newMap!16)))))))

(assert (=> d!15353 (= lt!30660 (lemmaContainsTupThenGetReturnValue!49 lt!30659 (_1!1056 (tuple2!2091 lt!30329 (zeroValue!2073 newMap!16))) (_2!1056 (tuple2!2091 lt!30329 (zeroValue!2073 newMap!16)))))))

(assert (=> d!15353 (= lt!30659 (insertStrictlySorted!52 (toList!708 lt!30317) (_1!1056 (tuple2!2091 lt!30329 (zeroValue!2073 newMap!16))) (_2!1056 (tuple2!2091 lt!30329 (zeroValue!2073 newMap!16)))))))

(assert (=> d!15353 (= (+!89 lt!30317 (tuple2!2091 lt!30329 (zeroValue!2073 newMap!16))) lt!30661)))

(declare-fun b!69704 () Bool)

(declare-fun res!37348 () Bool)

(assert (=> b!69704 (=> (not res!37348) (not e!45619))))

(assert (=> b!69704 (= res!37348 (= (getValueByKey!129 (toList!708 lt!30661) (_1!1056 (tuple2!2091 lt!30329 (zeroValue!2073 newMap!16)))) (Some!134 (_2!1056 (tuple2!2091 lt!30329 (zeroValue!2073 newMap!16))))))))

(declare-fun b!69705 () Bool)

(assert (=> b!69705 (= e!45619 (contains!711 (toList!708 lt!30661) (tuple2!2091 lt!30329 (zeroValue!2073 newMap!16))))))

(assert (= (and d!15353 res!37347) b!69704))

(assert (= (and b!69704 res!37348) b!69705))

(declare-fun m!66233 () Bool)

(assert (=> d!15353 m!66233))

(declare-fun m!66235 () Bool)

(assert (=> d!15353 m!66235))

(declare-fun m!66237 () Bool)

(assert (=> d!15353 m!66237))

(declare-fun m!66239 () Bool)

(assert (=> d!15353 m!66239))

(declare-fun m!66241 () Bool)

(assert (=> b!69704 m!66241))

(declare-fun m!66243 () Bool)

(assert (=> b!69705 m!66243))

(assert (=> b!69101 d!15353))

(declare-fun d!15355 () Bool)

(assert (=> d!15355 (= (apply!73 lt!30335 lt!30327) (get!1129 (getValueByKey!129 (toList!708 lt!30335) lt!30327)))))

(declare-fun bs!3011 () Bool)

(assert (= bs!3011 d!15355))

(declare-fun m!66245 () Bool)

(assert (=> bs!3011 m!66245))

(assert (=> bs!3011 m!66245))

(declare-fun m!66247 () Bool)

(assert (=> bs!3011 m!66247))

(assert (=> b!69101 d!15355))

(declare-fun d!15357 () Bool)

(declare-fun e!45620 () Bool)

(assert (=> d!15357 e!45620))

(declare-fun res!37349 () Bool)

(assert (=> d!15357 (=> (not res!37349) (not e!45620))))

(declare-fun lt!30665 () ListLongMap!1385)

(assert (=> d!15357 (= res!37349 (contains!709 lt!30665 (_1!1056 (tuple2!2091 lt!30321 (minValue!2073 newMap!16)))))))

(declare-fun lt!30663 () List!1470)

(assert (=> d!15357 (= lt!30665 (ListLongMap!1386 lt!30663))))

(declare-fun lt!30662 () Unit!1898)

(declare-fun lt!30664 () Unit!1898)

(assert (=> d!15357 (= lt!30662 lt!30664)))

(assert (=> d!15357 (= (getValueByKey!129 lt!30663 (_1!1056 (tuple2!2091 lt!30321 (minValue!2073 newMap!16)))) (Some!134 (_2!1056 (tuple2!2091 lt!30321 (minValue!2073 newMap!16)))))))

(assert (=> d!15357 (= lt!30664 (lemmaContainsTupThenGetReturnValue!49 lt!30663 (_1!1056 (tuple2!2091 lt!30321 (minValue!2073 newMap!16))) (_2!1056 (tuple2!2091 lt!30321 (minValue!2073 newMap!16)))))))

(assert (=> d!15357 (= lt!30663 (insertStrictlySorted!52 (toList!708 lt!30331) (_1!1056 (tuple2!2091 lt!30321 (minValue!2073 newMap!16))) (_2!1056 (tuple2!2091 lt!30321 (minValue!2073 newMap!16)))))))

(assert (=> d!15357 (= (+!89 lt!30331 (tuple2!2091 lt!30321 (minValue!2073 newMap!16))) lt!30665)))

(declare-fun b!69706 () Bool)

(declare-fun res!37350 () Bool)

(assert (=> b!69706 (=> (not res!37350) (not e!45620))))

(assert (=> b!69706 (= res!37350 (= (getValueByKey!129 (toList!708 lt!30665) (_1!1056 (tuple2!2091 lt!30321 (minValue!2073 newMap!16)))) (Some!134 (_2!1056 (tuple2!2091 lt!30321 (minValue!2073 newMap!16))))))))

(declare-fun b!69707 () Bool)

(assert (=> b!69707 (= e!45620 (contains!711 (toList!708 lt!30665) (tuple2!2091 lt!30321 (minValue!2073 newMap!16))))))

(assert (= (and d!15357 res!37349) b!69706))

(assert (= (and b!69706 res!37350) b!69707))

(declare-fun m!66249 () Bool)

(assert (=> d!15357 m!66249))

(declare-fun m!66251 () Bool)

(assert (=> d!15357 m!66251))

(declare-fun m!66253 () Bool)

(assert (=> d!15357 m!66253))

(declare-fun m!66255 () Bool)

(assert (=> d!15357 m!66255))

(declare-fun m!66257 () Bool)

(assert (=> b!69706 m!66257))

(declare-fun m!66259 () Bool)

(assert (=> b!69707 m!66259))

(assert (=> b!69101 d!15357))

(declare-fun b!69708 () Bool)

(declare-fun e!45626 () Bool)

(declare-fun lt!30666 () ListLongMap!1385)

(assert (=> b!69708 (= e!45626 (isEmpty!314 lt!30666))))

(declare-fun b!69709 () Bool)

(declare-fun e!45624 () Bool)

(declare-fun e!45622 () Bool)

(assert (=> b!69709 (= e!45624 e!45622)))

(assert (=> b!69709 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))))))

(declare-fun res!37352 () Bool)

(assert (=> b!69709 (= res!37352 (contains!709 lt!30666 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!69709 (=> (not res!37352) (not e!45622))))

(declare-fun b!69710 () Bool)

(declare-fun e!45625 () ListLongMap!1385)

(declare-fun e!45623 () ListLongMap!1385)

(assert (=> b!69710 (= e!45625 e!45623)))

(declare-fun c!10019 () Bool)

(assert (=> b!69710 (= c!10019 (validKeyInArray!0 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!69711 () Bool)

(declare-fun lt!30671 () Unit!1898)

(declare-fun lt!30672 () Unit!1898)

(assert (=> b!69711 (= lt!30671 lt!30672)))

(declare-fun lt!30669 () ListLongMap!1385)

(declare-fun lt!30667 () V!2921)

(declare-fun lt!30668 () (_ BitVec 64))

(declare-fun lt!30670 () (_ BitVec 64))

(assert (=> b!69711 (not (contains!709 (+!89 lt!30669 (tuple2!2091 lt!30668 lt!30667)) lt!30670))))

(assert (=> b!69711 (= lt!30672 (addStillNotContains!23 lt!30669 lt!30668 lt!30667 lt!30670))))

(assert (=> b!69711 (= lt!30670 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!69711 (= lt!30667 (get!1126 (select (arr!1829 (_values!2150 newMap!16)) #b00000000000000000000000000000000) (dynLambda!321 (defaultEntry!2167 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!69711 (= lt!30668 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!5968 () ListLongMap!1385)

(assert (=> b!69711 (= lt!30669 call!5968)))

(assert (=> b!69711 (= e!45623 (+!89 call!5968 (tuple2!2091 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000) (get!1126 (select (arr!1829 (_values!2150 newMap!16)) #b00000000000000000000000000000000) (dynLambda!321 (defaultEntry!2167 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!69712 () Bool)

(assert (=> b!69712 (= e!45626 (= lt!30666 (getCurrentListMapNoExtraKeys!53 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2167 newMap!16))))))

(declare-fun b!69713 () Bool)

(assert (=> b!69713 (= e!45625 (ListLongMap!1386 Nil!1467))))

(declare-fun b!69714 () Bool)

(declare-fun e!45621 () Bool)

(assert (=> b!69714 (= e!45621 e!45624)))

(declare-fun c!10016 () Bool)

(declare-fun e!45627 () Bool)

(assert (=> b!69714 (= c!10016 e!45627)))

(declare-fun res!37354 () Bool)

(assert (=> b!69714 (=> (not res!37354) (not e!45627))))

(assert (=> b!69714 (= res!37354 (bvslt #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))))))

(declare-fun b!69715 () Bool)

(declare-fun res!37351 () Bool)

(assert (=> b!69715 (=> (not res!37351) (not e!45621))))

(assert (=> b!69715 (= res!37351 (not (contains!709 lt!30666 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!69716 () Bool)

(assert (=> b!69716 (= e!45624 e!45626)))

(declare-fun c!10017 () Bool)

(assert (=> b!69716 (= c!10017 (bvslt #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))))))

(declare-fun d!15359 () Bool)

(assert (=> d!15359 e!45621))

(declare-fun res!37353 () Bool)

(assert (=> d!15359 (=> (not res!37353) (not e!45621))))

(assert (=> d!15359 (= res!37353 (not (contains!709 lt!30666 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!15359 (= lt!30666 e!45625)))

(declare-fun c!10018 () Bool)

(assert (=> d!15359 (= c!10018 (bvsge #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))))))

(assert (=> d!15359 (validMask!0 (mask!6111 newMap!16))))

(assert (=> d!15359 (= (getCurrentListMapNoExtraKeys!53 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) lt!30666)))

(declare-fun bm!5965 () Bool)

(assert (=> bm!5965 (= call!5968 (getCurrentListMapNoExtraKeys!53 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2167 newMap!16)))))

(declare-fun b!69717 () Bool)

(assert (=> b!69717 (= e!45623 call!5968)))

(declare-fun b!69718 () Bool)

(assert (=> b!69718 (= e!45627 (validKeyInArray!0 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!69718 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!69719 () Bool)

(assert (=> b!69719 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))))))

(assert (=> b!69719 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2066 (_values!2150 newMap!16))))))

(assert (=> b!69719 (= e!45622 (= (apply!73 lt!30666 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)) (get!1126 (select (arr!1829 (_values!2150 newMap!16)) #b00000000000000000000000000000000) (dynLambda!321 (defaultEntry!2167 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!15359 c!10018) b!69713))

(assert (= (and d!15359 (not c!10018)) b!69710))

(assert (= (and b!69710 c!10019) b!69711))

(assert (= (and b!69710 (not c!10019)) b!69717))

(assert (= (or b!69711 b!69717) bm!5965))

(assert (= (and d!15359 res!37353) b!69715))

(assert (= (and b!69715 res!37351) b!69714))

(assert (= (and b!69714 res!37354) b!69718))

(assert (= (and b!69714 c!10016) b!69709))

(assert (= (and b!69714 (not c!10016)) b!69716))

(assert (= (and b!69709 res!37352) b!69719))

(assert (= (and b!69716 c!10017) b!69712))

(assert (= (and b!69716 (not c!10017)) b!69708))

(declare-fun b_lambda!3115 () Bool)

(assert (=> (not b_lambda!3115) (not b!69711)))

(assert (=> b!69711 t!4978))

(declare-fun b_and!4289 () Bool)

(assert (= b_and!4285 (and (=> t!4978 result!2615) b_and!4289)))

(assert (=> b!69711 t!4980))

(declare-fun b_and!4291 () Bool)

(assert (= b_and!4287 (and (=> t!4980 result!2617) b_and!4291)))

(declare-fun b_lambda!3117 () Bool)

(assert (=> (not b_lambda!3117) (not b!69719)))

(assert (=> b!69719 t!4978))

(declare-fun b_and!4293 () Bool)

(assert (= b_and!4289 (and (=> t!4978 result!2615) b_and!4293)))

(assert (=> b!69719 t!4980))

(declare-fun b_and!4295 () Bool)

(assert (= b_and!4291 (and (=> t!4980 result!2617) b_and!4295)))

(assert (=> b!69718 m!64177))

(assert (=> b!69718 m!64177))

(assert (=> b!69718 m!64187))

(assert (=> b!69710 m!64177))

(assert (=> b!69710 m!64177))

(assert (=> b!69710 m!64187))

(declare-fun m!66261 () Bool)

(assert (=> bm!5965 m!66261))

(assert (=> b!69712 m!66261))

(assert (=> b!69709 m!64177))

(assert (=> b!69709 m!64177))

(declare-fun m!66263 () Bool)

(assert (=> b!69709 m!66263))

(assert (=> b!69719 m!64293))

(assert (=> b!69719 m!64243))

(assert (=> b!69719 m!64297))

(assert (=> b!69719 m!64177))

(declare-fun m!66265 () Bool)

(assert (=> b!69719 m!66265))

(assert (=> b!69719 m!64243))

(assert (=> b!69719 m!64293))

(assert (=> b!69719 m!64177))

(declare-fun m!66267 () Bool)

(assert (=> b!69708 m!66267))

(declare-fun m!66269 () Bool)

(assert (=> b!69711 m!66269))

(assert (=> b!69711 m!64293))

(assert (=> b!69711 m!64243))

(assert (=> b!69711 m!64297))

(assert (=> b!69711 m!64243))

(declare-fun m!66271 () Bool)

(assert (=> b!69711 m!66271))

(declare-fun m!66273 () Bool)

(assert (=> b!69711 m!66273))

(assert (=> b!69711 m!64293))

(assert (=> b!69711 m!66271))

(declare-fun m!66275 () Bool)

(assert (=> b!69711 m!66275))

(assert (=> b!69711 m!64177))

(declare-fun m!66277 () Bool)

(assert (=> d!15359 m!66277))

(assert (=> d!15359 m!64193))

(declare-fun m!66279 () Bool)

(assert (=> b!69715 m!66279))

(assert (=> b!69101 d!15359))

(declare-fun d!15361 () Bool)

(assert (=> d!15361 (= (apply!73 (+!89 lt!30317 (tuple2!2091 lt!30329 (zeroValue!2073 newMap!16))) lt!30326) (get!1129 (getValueByKey!129 (toList!708 (+!89 lt!30317 (tuple2!2091 lt!30329 (zeroValue!2073 newMap!16)))) lt!30326)))))

(declare-fun bs!3012 () Bool)

(assert (= bs!3012 d!15361))

(declare-fun m!66281 () Bool)

(assert (=> bs!3012 m!66281))

(assert (=> bs!3012 m!66281))

(declare-fun m!66283 () Bool)

(assert (=> bs!3012 m!66283))

(assert (=> b!69101 d!15361))

(declare-fun d!15363 () Bool)

(declare-fun e!45628 () Bool)

(assert (=> d!15363 e!45628))

(declare-fun res!37355 () Bool)

(assert (=> d!15363 (=> (not res!37355) (not e!45628))))

(declare-fun lt!30676 () ListLongMap!1385)

(assert (=> d!15363 (= res!37355 (contains!709 lt!30676 (_1!1056 (tuple2!2091 lt!30332 (minValue!2073 newMap!16)))))))

(declare-fun lt!30674 () List!1470)

(assert (=> d!15363 (= lt!30676 (ListLongMap!1386 lt!30674))))

(declare-fun lt!30673 () Unit!1898)

(declare-fun lt!30675 () Unit!1898)

(assert (=> d!15363 (= lt!30673 lt!30675)))

(assert (=> d!15363 (= (getValueByKey!129 lt!30674 (_1!1056 (tuple2!2091 lt!30332 (minValue!2073 newMap!16)))) (Some!134 (_2!1056 (tuple2!2091 lt!30332 (minValue!2073 newMap!16)))))))

(assert (=> d!15363 (= lt!30675 (lemmaContainsTupThenGetReturnValue!49 lt!30674 (_1!1056 (tuple2!2091 lt!30332 (minValue!2073 newMap!16))) (_2!1056 (tuple2!2091 lt!30332 (minValue!2073 newMap!16)))))))

(assert (=> d!15363 (= lt!30674 (insertStrictlySorted!52 (toList!708 lt!30335) (_1!1056 (tuple2!2091 lt!30332 (minValue!2073 newMap!16))) (_2!1056 (tuple2!2091 lt!30332 (minValue!2073 newMap!16)))))))

(assert (=> d!15363 (= (+!89 lt!30335 (tuple2!2091 lt!30332 (minValue!2073 newMap!16))) lt!30676)))

(declare-fun b!69720 () Bool)

(declare-fun res!37356 () Bool)

(assert (=> b!69720 (=> (not res!37356) (not e!45628))))

(assert (=> b!69720 (= res!37356 (= (getValueByKey!129 (toList!708 lt!30676) (_1!1056 (tuple2!2091 lt!30332 (minValue!2073 newMap!16)))) (Some!134 (_2!1056 (tuple2!2091 lt!30332 (minValue!2073 newMap!16))))))))

(declare-fun b!69721 () Bool)

(assert (=> b!69721 (= e!45628 (contains!711 (toList!708 lt!30676) (tuple2!2091 lt!30332 (minValue!2073 newMap!16))))))

(assert (= (and d!15363 res!37355) b!69720))

(assert (= (and b!69720 res!37356) b!69721))

(declare-fun m!66285 () Bool)

(assert (=> d!15363 m!66285))

(declare-fun m!66287 () Bool)

(assert (=> d!15363 m!66287))

(declare-fun m!66289 () Bool)

(assert (=> d!15363 m!66289))

(declare-fun m!66291 () Bool)

(assert (=> d!15363 m!66291))

(declare-fun m!66293 () Bool)

(assert (=> b!69720 m!66293))

(declare-fun m!66295 () Bool)

(assert (=> b!69721 m!66295))

(assert (=> b!69101 d!15363))

(declare-fun d!15365 () Bool)

(assert (=> d!15365 (= (apply!73 (+!89 lt!30331 (tuple2!2091 lt!30321 (minValue!2073 newMap!16))) lt!30318) (get!1129 (getValueByKey!129 (toList!708 (+!89 lt!30331 (tuple2!2091 lt!30321 (minValue!2073 newMap!16)))) lt!30318)))))

(declare-fun bs!3013 () Bool)

(assert (= bs!3013 d!15365))

(declare-fun m!66297 () Bool)

(assert (=> bs!3013 m!66297))

(assert (=> bs!3013 m!66297))

(declare-fun m!66299 () Bool)

(assert (=> bs!3013 m!66299))

(assert (=> b!69101 d!15365))

(assert (=> b!69111 d!15263))

(declare-fun d!15367 () Bool)

(declare-fun lt!30677 () Bool)

(assert (=> d!15367 (= lt!30677 (select (content!73 (toList!708 lt!30066)) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))))

(declare-fun e!45630 () Bool)

(assert (=> d!15367 (= lt!30677 e!45630)))

(declare-fun res!37358 () Bool)

(assert (=> d!15367 (=> (not res!37358) (not e!45630))))

(assert (=> d!15367 (= res!37358 ((_ is Cons!1466) (toList!708 lt!30066)))))

(assert (=> d!15367 (= (contains!711 (toList!708 lt!30066) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))) lt!30677)))

(declare-fun b!69722 () Bool)

(declare-fun e!45629 () Bool)

(assert (=> b!69722 (= e!45630 e!45629)))

(declare-fun res!37357 () Bool)

(assert (=> b!69722 (=> res!37357 e!45629)))

(assert (=> b!69722 (= res!37357 (= (h!2051 (toList!708 lt!30066)) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))))

(declare-fun b!69723 () Bool)

(assert (=> b!69723 (= e!45629 (contains!711 (t!4964 (toList!708 lt!30066)) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))))

(assert (= (and d!15367 res!37358) b!69722))

(assert (= (and b!69722 (not res!37357)) b!69723))

(declare-fun m!66301 () Bool)

(assert (=> d!15367 m!66301))

(declare-fun m!66303 () Bool)

(assert (=> d!15367 m!66303))

(declare-fun m!66305 () Bool)

(assert (=> b!69723 m!66305))

(assert (=> b!68798 d!15367))

(declare-fun lt!30678 () Bool)

(declare-fun d!15369 () Bool)

(assert (=> d!15369 (= lt!30678 (select (content!73 (toList!708 lt!30280)) (tuple2!2091 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))))

(declare-fun e!45632 () Bool)

(assert (=> d!15369 (= lt!30678 e!45632)))

(declare-fun res!37360 () Bool)

(assert (=> d!15369 (=> (not res!37360) (not e!45632))))

(assert (=> d!15369 (= res!37360 ((_ is Cons!1466) (toList!708 lt!30280)))))

(assert (=> d!15369 (= (contains!711 (toList!708 lt!30280) (tuple2!2091 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992))))) lt!30678)))

(declare-fun b!69724 () Bool)

(declare-fun e!45631 () Bool)

(assert (=> b!69724 (= e!45632 e!45631)))

(declare-fun res!37359 () Bool)

(assert (=> b!69724 (=> res!37359 e!45631)))

(assert (=> b!69724 (= res!37359 (= (h!2051 (toList!708 lt!30280)) (tuple2!2091 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))))

(declare-fun b!69725 () Bool)

(assert (=> b!69725 (= e!45631 (contains!711 (t!4964 (toList!708 lt!30280)) (tuple2!2091 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))))

(assert (= (and d!15369 res!37360) b!69724))

(assert (= (and b!69724 (not res!37359)) b!69725))

(declare-fun m!66307 () Bool)

(assert (=> d!15369 m!66307))

(declare-fun m!66309 () Bool)

(assert (=> d!15369 m!66309))

(declare-fun m!66311 () Bool)

(assert (=> b!69725 m!66311))

(assert (=> b!69053 d!15369))

(assert (=> d!14859 d!14839))

(assert (=> d!14859 d!14851))

(declare-fun d!15371 () Bool)

(assert (=> d!15371 (= (apply!73 (+!89 lt!29818 (tuple2!2091 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992))))) lt!29810) (apply!73 lt!29818 lt!29810))))

(assert (=> d!15371 true))

(declare-fun _$34!792 () Unit!1898)

(assert (=> d!15371 (= (choose!396 lt!29818 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992))) lt!29810) _$34!792)))

(declare-fun bs!3014 () Bool)

(assert (= bs!3014 d!15371))

(assert (=> bs!3014 m!63969))

(assert (=> bs!3014 m!63969))

(assert (=> bs!3014 m!63971))

(assert (=> bs!3014 m!63993))

(assert (=> d!14859 d!15371))

(assert (=> d!14859 d!14853))

(declare-fun d!15373 () Bool)

(declare-fun e!45634 () Bool)

(assert (=> d!15373 e!45634))

(declare-fun res!37361 () Bool)

(assert (=> d!15373 (=> res!37361 e!45634)))

(declare-fun lt!30682 () Bool)

(assert (=> d!15373 (= res!37361 (not lt!30682))))

(declare-fun lt!30681 () Bool)

(assert (=> d!15373 (= lt!30682 lt!30681)))

(declare-fun lt!30680 () Unit!1898)

(declare-fun e!45633 () Unit!1898)

(assert (=> d!15373 (= lt!30680 e!45633)))

(declare-fun c!10020 () Bool)

(assert (=> d!15373 (= c!10020 lt!30681)))

(assert (=> d!15373 (= lt!30681 (containsKey!133 (toList!708 lt!29818) lt!29810))))

(assert (=> d!15373 (= (contains!709 lt!29818 lt!29810) lt!30682)))

(declare-fun b!69726 () Bool)

(declare-fun lt!30679 () Unit!1898)

(assert (=> b!69726 (= e!45633 lt!30679)))

(assert (=> b!69726 (= lt!30679 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 lt!29818) lt!29810))))

(assert (=> b!69726 (isDefined!83 (getValueByKey!129 (toList!708 lt!29818) lt!29810))))

(declare-fun b!69727 () Bool)

(declare-fun Unit!1954 () Unit!1898)

(assert (=> b!69727 (= e!45633 Unit!1954)))

(declare-fun b!69728 () Bool)

(assert (=> b!69728 (= e!45634 (isDefined!83 (getValueByKey!129 (toList!708 lt!29818) lt!29810)))))

(assert (= (and d!15373 c!10020) b!69726))

(assert (= (and d!15373 (not c!10020)) b!69727))

(assert (= (and d!15373 (not res!37361)) b!69728))

(declare-fun m!66313 () Bool)

(assert (=> d!15373 m!66313))

(declare-fun m!66315 () Bool)

(assert (=> b!69726 m!66315))

(assert (=> b!69726 m!64843))

(assert (=> b!69726 m!64843))

(declare-fun m!66317 () Bool)

(assert (=> b!69726 m!66317))

(assert (=> b!69728 m!64843))

(assert (=> b!69728 m!64843))

(assert (=> b!69728 m!66317))

(assert (=> d!14859 d!15373))

(declare-fun d!15375 () Bool)

(declare-fun e!45635 () Bool)

(assert (=> d!15375 e!45635))

(declare-fun res!37362 () Bool)

(assert (=> d!15375 (=> (not res!37362) (not e!45635))))

(declare-fun lt!30686 () ListLongMap!1385)

(assert (=> d!15375 (= res!37362 (contains!709 lt!30686 (_1!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))))))

(declare-fun lt!30684 () List!1470)

(assert (=> d!15375 (= lt!30686 (ListLongMap!1386 lt!30684))))

(declare-fun lt!30683 () Unit!1898)

(declare-fun lt!30685 () Unit!1898)

(assert (=> d!15375 (= lt!30683 lt!30685)))

(assert (=> d!15375 (= (getValueByKey!129 lt!30684 (_1!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))) (Some!134 (_2!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))))))

(assert (=> d!15375 (= lt!30685 (lemmaContainsTupThenGetReturnValue!49 lt!30684 (_1!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))) (_2!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))))))

(assert (=> d!15375 (= lt!30684 (insertStrictlySorted!52 (toList!708 call!5902) (_1!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))) (_2!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))))))

(assert (=> d!15375 (= (+!89 call!5902 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))) lt!30686)))

(declare-fun b!69729 () Bool)

(declare-fun res!37363 () Bool)

(assert (=> b!69729 (=> (not res!37363) (not e!45635))))

(assert (=> b!69729 (= res!37363 (= (getValueByKey!129 (toList!708 lt!30686) (_1!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))) (Some!134 (_2!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))))))))

(declare-fun b!69730 () Bool)

(assert (=> b!69730 (= e!45635 (contains!711 (toList!708 lt!30686) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))))))

(assert (= (and d!15375 res!37362) b!69729))

(assert (= (and b!69729 res!37363) b!69730))

(declare-fun m!66319 () Bool)

(assert (=> d!15375 m!66319))

(declare-fun m!66321 () Bool)

(assert (=> d!15375 m!66321))

(declare-fun m!66323 () Bool)

(assert (=> d!15375 m!66323))

(declare-fun m!66325 () Bool)

(assert (=> d!15375 m!66325))

(declare-fun m!66327 () Bool)

(assert (=> b!69729 m!66327))

(declare-fun m!66329 () Bool)

(assert (=> b!69730 m!66329))

(assert (=> b!69032 d!15375))

(assert (=> b!68989 d!15315))

(declare-fun d!15377 () Bool)

(assert (=> d!15377 (isDefined!83 (getValueByKey!129 (toList!708 lt!29861) (_1!1056 lt!29675)))))

(declare-fun lt!30687 () Unit!1898)

(assert (=> d!15377 (= lt!30687 (choose!399 (toList!708 lt!29861) (_1!1056 lt!29675)))))

(declare-fun e!45636 () Bool)

(assert (=> d!15377 e!45636))

(declare-fun res!37364 () Bool)

(assert (=> d!15377 (=> (not res!37364) (not e!45636))))

(assert (=> d!15377 (= res!37364 (isStrictlySorted!285 (toList!708 lt!29861)))))

(assert (=> d!15377 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 lt!29861) (_1!1056 lt!29675)) lt!30687)))

(declare-fun b!69731 () Bool)

(assert (=> b!69731 (= e!45636 (containsKey!133 (toList!708 lt!29861) (_1!1056 lt!29675)))))

(assert (= (and d!15377 res!37364) b!69731))

(assert (=> d!15377 m!64057))

(assert (=> d!15377 m!64057))

(assert (=> d!15377 m!64617))

(declare-fun m!66331 () Bool)

(assert (=> d!15377 m!66331))

(declare-fun m!66333 () Bool)

(assert (=> d!15377 m!66333))

(assert (=> b!69731 m!64613))

(assert (=> b!68948 d!15377))

(assert (=> b!68948 d!15197))

(assert (=> b!68948 d!14817))

(declare-fun d!15379 () Bool)

(declare-fun res!37365 () Bool)

(declare-fun e!45637 () Bool)

(assert (=> d!15379 (=> res!37365 e!45637)))

(assert (=> d!15379 (= res!37365 (and ((_ is Cons!1466) (toList!708 lt!29868)) (= (_1!1056 (h!2051 (toList!708 lt!29868))) (_1!1056 lt!29680))))))

(assert (=> d!15379 (= (containsKey!133 (toList!708 lt!29868) (_1!1056 lt!29680)) e!45637)))

(declare-fun b!69732 () Bool)

(declare-fun e!45638 () Bool)

(assert (=> b!69732 (= e!45637 e!45638)))

(declare-fun res!37366 () Bool)

(assert (=> b!69732 (=> (not res!37366) (not e!45638))))

(assert (=> b!69732 (= res!37366 (and (or (not ((_ is Cons!1466) (toList!708 lt!29868))) (bvsle (_1!1056 (h!2051 (toList!708 lt!29868))) (_1!1056 lt!29680))) ((_ is Cons!1466) (toList!708 lt!29868)) (bvslt (_1!1056 (h!2051 (toList!708 lt!29868))) (_1!1056 lt!29680))))))

(declare-fun b!69733 () Bool)

(assert (=> b!69733 (= e!45638 (containsKey!133 (t!4964 (toList!708 lt!29868)) (_1!1056 lt!29680)))))

(assert (= (and d!15379 (not res!37365)) b!69732))

(assert (= (and b!69732 res!37366) b!69733))

(declare-fun m!66335 () Bool)

(assert (=> b!69733 m!66335))

(assert (=> d!14707 d!15379))

(declare-fun d!15381 () Bool)

(declare-fun res!37367 () Bool)

(declare-fun e!45639 () Bool)

(assert (=> d!15381 (=> res!37367 e!45639)))

(assert (=> d!15381 (= res!37367 (or ((_ is Nil!1467) lt!29995) ((_ is Nil!1467) (t!4964 lt!29995))))))

(assert (=> d!15381 (= (isStrictlySorted!285 lt!29995) e!45639)))

(declare-fun b!69734 () Bool)

(declare-fun e!45640 () Bool)

(assert (=> b!69734 (= e!45639 e!45640)))

(declare-fun res!37368 () Bool)

(assert (=> b!69734 (=> (not res!37368) (not e!45640))))

(assert (=> b!69734 (= res!37368 (bvslt (_1!1056 (h!2051 lt!29995)) (_1!1056 (h!2051 (t!4964 lt!29995)))))))

(declare-fun b!69735 () Bool)

(assert (=> b!69735 (= e!45640 (isStrictlySorted!285 (t!4964 lt!29995)))))

(assert (= (and d!15381 (not res!37367)) b!69734))

(assert (= (and b!69734 res!37368) b!69735))

(declare-fun m!66337 () Bool)

(assert (=> b!69735 m!66337))

(assert (=> d!14713 d!15381))

(declare-fun d!15383 () Bool)

(declare-fun res!37369 () Bool)

(declare-fun e!45641 () Bool)

(assert (=> d!15383 (=> res!37369 e!45641)))

(assert (=> d!15383 (= res!37369 (or ((_ is Nil!1467) (toList!708 (+!89 lt!29682 lt!29675))) ((_ is Nil!1467) (t!4964 (toList!708 (+!89 lt!29682 lt!29675))))))))

(assert (=> d!15383 (= (isStrictlySorted!285 (toList!708 (+!89 lt!29682 lt!29675))) e!45641)))

(declare-fun b!69736 () Bool)

(declare-fun e!45642 () Bool)

(assert (=> b!69736 (= e!45641 e!45642)))

(declare-fun res!37370 () Bool)

(assert (=> b!69736 (=> (not res!37370) (not e!45642))))

(assert (=> b!69736 (= res!37370 (bvslt (_1!1056 (h!2051 (toList!708 (+!89 lt!29682 lt!29675)))) (_1!1056 (h!2051 (t!4964 (toList!708 (+!89 lt!29682 lt!29675)))))))))

(declare-fun b!69737 () Bool)

(assert (=> b!69737 (= e!45642 (isStrictlySorted!285 (t!4964 (toList!708 (+!89 lt!29682 lt!29675)))))))

(assert (= (and d!15383 (not res!37369)) b!69736))

(assert (= (and b!69736 res!37370) b!69737))

(assert (=> b!69737 m!65049))

(assert (=> d!14713 d!15383))

(declare-fun d!15385 () Bool)

(declare-fun e!45644 () Bool)

(assert (=> d!15385 e!45644))

(declare-fun res!37371 () Bool)

(assert (=> d!15385 (=> res!37371 e!45644)))

(declare-fun lt!30691 () Bool)

(assert (=> d!15385 (= res!37371 (not lt!30691))))

(declare-fun lt!30690 () Bool)

(assert (=> d!15385 (= lt!30691 lt!30690)))

(declare-fun lt!30689 () Unit!1898)

(declare-fun e!45643 () Unit!1898)

(assert (=> d!15385 (= lt!30689 e!45643)))

(declare-fun c!10021 () Bool)

(assert (=> d!15385 (= c!10021 lt!30690)))

(assert (=> d!15385 (= lt!30690 (containsKey!133 (toList!708 lt!30080) (_1!1056 (ite c!9716 (ite c!9712 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))))))

(assert (=> d!15385 (= (contains!709 lt!30080 (_1!1056 (ite c!9716 (ite c!9712 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))) lt!30691)))

(declare-fun b!69738 () Bool)

(declare-fun lt!30688 () Unit!1898)

(assert (=> b!69738 (= e!45643 lt!30688)))

(assert (=> b!69738 (= lt!30688 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 lt!30080) (_1!1056 (ite c!9716 (ite c!9712 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))))))

(assert (=> b!69738 (isDefined!83 (getValueByKey!129 (toList!708 lt!30080) (_1!1056 (ite c!9716 (ite c!9712 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))))))

(declare-fun b!69739 () Bool)

(declare-fun Unit!1955 () Unit!1898)

(assert (=> b!69739 (= e!45643 Unit!1955)))

(declare-fun b!69740 () Bool)

(assert (=> b!69740 (= e!45644 (isDefined!83 (getValueByKey!129 (toList!708 lt!30080) (_1!1056 (ite c!9716 (ite c!9712 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))))

(assert (= (and d!15385 c!10021) b!69738))

(assert (= (and d!15385 (not c!10021)) b!69739))

(assert (= (and d!15385 (not res!37371)) b!69740))

(declare-fun m!66339 () Bool)

(assert (=> d!15385 m!66339))

(declare-fun m!66341 () Bool)

(assert (=> b!69738 m!66341))

(assert (=> b!69738 m!64447))

(assert (=> b!69738 m!64447))

(declare-fun m!66343 () Bool)

(assert (=> b!69738 m!66343))

(assert (=> b!69740 m!64447))

(assert (=> b!69740 m!64447))

(assert (=> b!69740 m!66343))

(assert (=> d!14749 d!15385))

(declare-fun b!69743 () Bool)

(declare-fun e!45646 () Option!135)

(assert (=> b!69743 (= e!45646 (getValueByKey!129 (t!4964 lt!30078) (_1!1056 (ite c!9716 (ite c!9712 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))))))

(declare-fun b!69741 () Bool)

(declare-fun e!45645 () Option!135)

(assert (=> b!69741 (= e!45645 (Some!134 (_2!1056 (h!2051 lt!30078))))))

(declare-fun b!69744 () Bool)

(assert (=> b!69744 (= e!45646 None!133)))

(declare-fun c!10022 () Bool)

(declare-fun d!15387 () Bool)

(assert (=> d!15387 (= c!10022 (and ((_ is Cons!1466) lt!30078) (= (_1!1056 (h!2051 lt!30078)) (_1!1056 (ite c!9716 (ite c!9712 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))))

(assert (=> d!15387 (= (getValueByKey!129 lt!30078 (_1!1056 (ite c!9716 (ite c!9712 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))) e!45645)))

(declare-fun b!69742 () Bool)

(assert (=> b!69742 (= e!45645 e!45646)))

(declare-fun c!10023 () Bool)

(assert (=> b!69742 (= c!10023 (and ((_ is Cons!1466) lt!30078) (not (= (_1!1056 (h!2051 lt!30078)) (_1!1056 (ite c!9716 (ite c!9712 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))))))))

(assert (= (and d!15387 c!10022) b!69741))

(assert (= (and d!15387 (not c!10022)) b!69742))

(assert (= (and b!69742 c!10023) b!69743))

(assert (= (and b!69742 (not c!10023)) b!69744))

(declare-fun m!66345 () Bool)

(assert (=> b!69743 m!66345))

(assert (=> d!14749 d!15387))

(declare-fun d!15389 () Bool)

(assert (=> d!15389 (= (getValueByKey!129 lt!30078 (_1!1056 (ite c!9716 (ite c!9712 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))) (Some!134 (_2!1056 (ite c!9716 (ite c!9712 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))))))

(declare-fun lt!30692 () Unit!1898)

(assert (=> d!15389 (= lt!30692 (choose!390 lt!30078 (_1!1056 (ite c!9716 (ite c!9712 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))) (_2!1056 (ite c!9716 (ite c!9712 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))))))

(declare-fun e!45647 () Bool)

(assert (=> d!15389 e!45647))

(declare-fun res!37372 () Bool)

(assert (=> d!15389 (=> (not res!37372) (not e!45647))))

(assert (=> d!15389 (= res!37372 (isStrictlySorted!285 lt!30078))))

(assert (=> d!15389 (= (lemmaContainsTupThenGetReturnValue!49 lt!30078 (_1!1056 (ite c!9716 (ite c!9712 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))) (_2!1056 (ite c!9716 (ite c!9712 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))) lt!30692)))

(declare-fun b!69745 () Bool)

(declare-fun res!37373 () Bool)

(assert (=> b!69745 (=> (not res!37373) (not e!45647))))

(assert (=> b!69745 (= res!37373 (containsKey!133 lt!30078 (_1!1056 (ite c!9716 (ite c!9712 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))))))

(declare-fun b!69746 () Bool)

(assert (=> b!69746 (= e!45647 (contains!711 lt!30078 (tuple2!2091 (_1!1056 (ite c!9716 (ite c!9712 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))) (_2!1056 (ite c!9716 (ite c!9712 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))))

(assert (= (and d!15389 res!37372) b!69745))

(assert (= (and b!69745 res!37373) b!69746))

(assert (=> d!15389 m!64441))

(declare-fun m!66347 () Bool)

(assert (=> d!15389 m!66347))

(declare-fun m!66349 () Bool)

(assert (=> d!15389 m!66349))

(declare-fun m!66351 () Bool)

(assert (=> b!69745 m!66351))

(declare-fun m!66353 () Bool)

(assert (=> b!69746 m!66353))

(assert (=> d!14749 d!15389))

(declare-fun b!69747 () Bool)

(declare-fun e!45651 () List!1470)

(declare-fun call!5970 () List!1470)

(assert (=> b!69747 (= e!45651 call!5970)))

(declare-fun c!10024 () Bool)

(declare-fun b!69748 () Bool)

(assert (=> b!69748 (= c!10024 (and ((_ is Cons!1466) (toList!708 (ite c!9716 call!5820 call!5830))) (bvsgt (_1!1056 (h!2051 (toList!708 (ite c!9716 call!5820 call!5830)))) (_1!1056 (ite c!9716 (ite c!9712 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))))

(declare-fun e!45649 () List!1470)

(assert (=> b!69748 (= e!45649 e!45651)))

(declare-fun b!69749 () Bool)

(assert (=> b!69749 (= e!45651 call!5970)))

(declare-fun b!69751 () Bool)

(declare-fun call!5969 () List!1470)

(assert (=> b!69751 (= e!45649 call!5969)))

(declare-fun bm!5966 () Bool)

(declare-fun call!5971 () List!1470)

(assert (=> bm!5966 (= call!5969 call!5971)))

(declare-fun bm!5967 () Bool)

(assert (=> bm!5967 (= call!5970 call!5969)))

(declare-fun b!69752 () Bool)

(declare-fun e!45648 () List!1470)

(assert (=> b!69752 (= e!45648 e!45649)))

(declare-fun c!10025 () Bool)

(assert (=> b!69752 (= c!10025 (and ((_ is Cons!1466) (toList!708 (ite c!9716 call!5820 call!5830))) (= (_1!1056 (h!2051 (toList!708 (ite c!9716 call!5820 call!5830)))) (_1!1056 (ite c!9716 (ite c!9712 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))))

(declare-fun bm!5968 () Bool)

(declare-fun c!10027 () Bool)

(declare-fun e!45650 () List!1470)

(assert (=> bm!5968 (= call!5971 ($colon$colon!63 e!45650 (ite c!10027 (h!2051 (toList!708 (ite c!9716 call!5820 call!5830))) (tuple2!2091 (_1!1056 (ite c!9716 (ite c!9712 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))) (_2!1056 (ite c!9716 (ite c!9712 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))))))))

(declare-fun c!10026 () Bool)

(assert (=> bm!5968 (= c!10026 c!10027)))

(declare-fun b!69753 () Bool)

(declare-fun res!37375 () Bool)

(declare-fun e!45652 () Bool)

(assert (=> b!69753 (=> (not res!37375) (not e!45652))))

(declare-fun lt!30693 () List!1470)

(assert (=> b!69753 (= res!37375 (containsKey!133 lt!30693 (_1!1056 (ite c!9716 (ite c!9712 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))))))

(declare-fun b!69754 () Bool)

(assert (=> b!69754 (= e!45652 (contains!711 lt!30693 (tuple2!2091 (_1!1056 (ite c!9716 (ite c!9712 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))) (_2!1056 (ite c!9716 (ite c!9712 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))))

(declare-fun b!69755 () Bool)

(assert (=> b!69755 (= e!45650 (ite c!10025 (t!4964 (toList!708 (ite c!9716 call!5820 call!5830))) (ite c!10024 (Cons!1466 (h!2051 (toList!708 (ite c!9716 call!5820 call!5830))) (t!4964 (toList!708 (ite c!9716 call!5820 call!5830)))) Nil!1467)))))

(declare-fun b!69756 () Bool)

(assert (=> b!69756 (= e!45648 call!5971)))

(declare-fun d!15391 () Bool)

(assert (=> d!15391 e!45652))

(declare-fun res!37374 () Bool)

(assert (=> d!15391 (=> (not res!37374) (not e!45652))))

(assert (=> d!15391 (= res!37374 (isStrictlySorted!285 lt!30693))))

(assert (=> d!15391 (= lt!30693 e!45648)))

(assert (=> d!15391 (= c!10027 (and ((_ is Cons!1466) (toList!708 (ite c!9716 call!5820 call!5830))) (bvslt (_1!1056 (h!2051 (toList!708 (ite c!9716 call!5820 call!5830)))) (_1!1056 (ite c!9716 (ite c!9712 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))))

(assert (=> d!15391 (isStrictlySorted!285 (toList!708 (ite c!9716 call!5820 call!5830)))))

(assert (=> d!15391 (= (insertStrictlySorted!52 (toList!708 (ite c!9716 call!5820 call!5830)) (_1!1056 (ite c!9716 (ite c!9712 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))) (_2!1056 (ite c!9716 (ite c!9712 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))) lt!30693)))

(declare-fun b!69750 () Bool)

(assert (=> b!69750 (= e!45650 (insertStrictlySorted!52 (t!4964 (toList!708 (ite c!9716 call!5820 call!5830))) (_1!1056 (ite c!9716 (ite c!9712 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))) (_2!1056 (ite c!9716 (ite c!9712 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))))))

(assert (= (and d!15391 c!10027) b!69756))

(assert (= (and d!15391 (not c!10027)) b!69752))

(assert (= (and b!69752 c!10025) b!69751))

(assert (= (and b!69752 (not c!10025)) b!69748))

(assert (= (and b!69748 c!10024) b!69749))

(assert (= (and b!69748 (not c!10024)) b!69747))

(assert (= (or b!69749 b!69747) bm!5967))

(assert (= (or b!69751 bm!5967) bm!5966))

(assert (= (or b!69756 bm!5966) bm!5968))

(assert (= (and bm!5968 c!10026) b!69750))

(assert (= (and bm!5968 (not c!10026)) b!69755))

(assert (= (and d!15391 res!37374) b!69753))

(assert (= (and b!69753 res!37375) b!69754))

(declare-fun m!66355 () Bool)

(assert (=> d!15391 m!66355))

(declare-fun m!66357 () Bool)

(assert (=> d!15391 m!66357))

(declare-fun m!66359 () Bool)

(assert (=> b!69754 m!66359))

(declare-fun m!66361 () Bool)

(assert (=> b!69753 m!66361))

(declare-fun m!66363 () Bool)

(assert (=> bm!5968 m!66363))

(declare-fun m!66365 () Bool)

(assert (=> b!69750 m!66365))

(assert (=> d!14749 d!15391))

(declare-fun d!15393 () Bool)

(declare-fun e!45653 () Bool)

(assert (=> d!15393 e!45653))

(declare-fun res!37376 () Bool)

(assert (=> d!15393 (=> (not res!37376) (not e!45653))))

(declare-fun lt!30697 () ListLongMap!1385)

(assert (=> d!15393 (= res!37376 (contains!709 lt!30697 (_1!1056 (ite (or c!9824 c!9821) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))))))))

(declare-fun lt!30695 () List!1470)

(assert (=> d!15393 (= lt!30697 (ListLongMap!1386 lt!30695))))

(declare-fun lt!30694 () Unit!1898)

(declare-fun lt!30696 () Unit!1898)

(assert (=> d!15393 (= lt!30694 lt!30696)))

(assert (=> d!15393 (= (getValueByKey!129 lt!30695 (_1!1056 (ite (or c!9824 c!9821) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))))) (Some!134 (_2!1056 (ite (or c!9824 c!9821) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))))))))

(assert (=> d!15393 (= lt!30696 (lemmaContainsTupThenGetReturnValue!49 lt!30695 (_1!1056 (ite (or c!9824 c!9821) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))) (_2!1056 (ite (or c!9824 c!9821) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))))))))

(assert (=> d!15393 (= lt!30695 (insertStrictlySorted!52 (toList!708 (ite c!9824 call!5903 (ite c!9821 call!5900 call!5898))) (_1!1056 (ite (or c!9824 c!9821) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))) (_2!1056 (ite (or c!9824 c!9821) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))))))))

(assert (=> d!15393 (= (+!89 (ite c!9824 call!5903 (ite c!9821 call!5900 call!5898)) (ite (or c!9824 c!9821) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))) lt!30697)))

(declare-fun b!69757 () Bool)

(declare-fun res!37377 () Bool)

(assert (=> b!69757 (=> (not res!37377) (not e!45653))))

(assert (=> b!69757 (= res!37377 (= (getValueByKey!129 (toList!708 lt!30697) (_1!1056 (ite (or c!9824 c!9821) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))))) (Some!134 (_2!1056 (ite (or c!9824 c!9821) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))))))))

(declare-fun b!69758 () Bool)

(assert (=> b!69758 (= e!45653 (contains!711 (toList!708 lt!30697) (ite (or c!9824 c!9821) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))))))

(assert (= (and d!15393 res!37376) b!69757))

(assert (= (and b!69757 res!37377) b!69758))

(declare-fun m!66367 () Bool)

(assert (=> d!15393 m!66367))

(declare-fun m!66369 () Bool)

(assert (=> d!15393 m!66369))

(declare-fun m!66371 () Bool)

(assert (=> d!15393 m!66371))

(declare-fun m!66373 () Bool)

(assert (=> d!15393 m!66373))

(declare-fun m!66375 () Bool)

(assert (=> b!69757 m!66375))

(declare-fun m!66377 () Bool)

(assert (=> b!69758 m!66377))

(assert (=> bm!5896 d!15393))

(declare-fun d!15395 () Bool)

(assert (=> d!15395 (isDefined!83 (getValueByKey!129 (toList!708 call!5830) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))

(declare-fun lt!30698 () Unit!1898)

(assert (=> d!15395 (= lt!30698 (choose!399 (toList!708 call!5830) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))

(declare-fun e!45654 () Bool)

(assert (=> d!15395 e!45654))

(declare-fun res!37378 () Bool)

(assert (=> d!15395 (=> (not res!37378) (not e!45654))))

(assert (=> d!15395 (= res!37378 (isStrictlySorted!285 (toList!708 call!5830)))))

(assert (=> d!15395 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 call!5830) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) lt!30698)))

(declare-fun b!69759 () Bool)

(assert (=> b!69759 (= e!45654 (containsKey!133 (toList!708 call!5830) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))

(assert (= (and d!15395 res!37378) b!69759))

(assert (=> d!15395 m!63767))

(assert (=> d!15395 m!64653))

(assert (=> d!15395 m!64653))

(assert (=> d!15395 m!64655))

(assert (=> d!15395 m!63767))

(declare-fun m!66379 () Bool)

(assert (=> d!15395 m!66379))

(declare-fun m!66381 () Bool)

(assert (=> d!15395 m!66381))

(assert (=> b!69759 m!63767))

(assert (=> b!69759 m!64649))

(assert (=> b!68979 d!15395))

(assert (=> b!68979 d!15233))

(assert (=> b!68979 d!15235))

(declare-fun b!69760 () Bool)

(declare-fun e!45665 () ListLongMap!1385)

(declare-fun call!5972 () ListLongMap!1385)

(assert (=> b!69760 (= e!45665 call!5972)))

(declare-fun b!69761 () Bool)

(declare-fun e!45662 () Bool)

(declare-fun e!45657 () Bool)

(assert (=> b!69761 (= e!45662 e!45657)))

(declare-fun res!37386 () Bool)

(declare-fun call!5973 () Bool)

(assert (=> b!69761 (= res!37386 call!5973)))

(assert (=> b!69761 (=> (not res!37386) (not e!45657))))

(declare-fun b!69763 () Bool)

(declare-fun e!45663 () Bool)

(declare-fun call!5978 () Bool)

(assert (=> b!69763 (= e!45663 (not call!5978))))

(declare-fun bm!5969 () Bool)

(declare-fun lt!30705 () ListLongMap!1385)

(assert (=> bm!5969 (= call!5973 (contains!709 lt!30705 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69764 () Bool)

(declare-fun c!10029 () Bool)

(assert (=> b!69764 (= c!10029 (and (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!45661 () ListLongMap!1385)

(assert (=> b!69764 (= e!45661 e!45665)))

(declare-fun c!10028 () Bool)

(declare-fun c!10031 () Bool)

(declare-fun call!5974 () ListLongMap!1385)

(declare-fun bm!5970 () Bool)

(declare-fun call!5976 () ListLongMap!1385)

(declare-fun call!5977 () ListLongMap!1385)

(assert (=> bm!5970 (= call!5976 (+!89 (ite c!10031 call!5977 (ite c!10028 call!5974 call!5972)) (ite (or c!10031 c!10028) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))))))

(declare-fun b!69765 () Bool)

(declare-fun e!45659 () Bool)

(assert (=> b!69765 (= e!45659 (validKeyInArray!0 (select (arr!1828 lt!30200) #b00000000000000000000000000000000)))))

(declare-fun b!69766 () Bool)

(declare-fun res!37384 () Bool)

(declare-fun e!45656 () Bool)

(assert (=> b!69766 (=> (not res!37384) (not e!45656))))

(declare-fun e!45666 () Bool)

(assert (=> b!69766 (= res!37384 e!45666)))

(declare-fun res!37380 () Bool)

(assert (=> b!69766 (=> res!37380 e!45666)))

(assert (=> b!69766 (= res!37380 (not e!45659))))

(declare-fun res!37381 () Bool)

(assert (=> b!69766 (=> (not res!37381) (not e!45659))))

(assert (=> b!69766 (= res!37381 (bvslt #b00000000000000000000000000000000 (size!2065 lt!30200)))))

(declare-fun b!69767 () Bool)

(declare-fun e!45660 () ListLongMap!1385)

(assert (=> b!69767 (= e!45660 e!45661)))

(assert (=> b!69767 (= c!10028 (and (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!69768 () Bool)

(declare-fun e!45658 () Bool)

(assert (=> b!69768 (= e!45663 e!45658)))

(declare-fun res!37382 () Bool)

(assert (=> b!69768 (= res!37382 call!5978)))

(assert (=> b!69768 (=> (not res!37382) (not e!45658))))

(declare-fun bm!5971 () Bool)

(assert (=> bm!5971 (= call!5974 call!5977)))

(declare-fun b!69769 () Bool)

(declare-fun call!5975 () ListLongMap!1385)

(assert (=> b!69769 (= e!45661 call!5975)))

(declare-fun bm!5972 () Bool)

(assert (=> bm!5972 (= call!5975 call!5976)))

(declare-fun b!69770 () Bool)

(assert (=> b!69770 (= e!45665 call!5975)))

(declare-fun b!69771 () Bool)

(declare-fun res!37385 () Bool)

(assert (=> b!69771 (=> (not res!37385) (not e!45656))))

(assert (=> b!69771 (= res!37385 e!45663)))

(declare-fun c!10032 () Bool)

(assert (=> b!69771 (= c!10032 (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!69772 () Bool)

(assert (=> b!69772 (= e!45658 (= (apply!73 lt!30705 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2073 newMap!16)))))

(declare-fun bm!5973 () Bool)

(assert (=> bm!5973 (= call!5977 (getCurrentListMapNoExtraKeys!53 lt!30200 lt!30191 (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun b!69773 () Bool)

(assert (=> b!69773 (= e!45657 (= (apply!73 lt!30705 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2073 newMap!16)))))

(declare-fun b!69774 () Bool)

(declare-fun e!45655 () Bool)

(assert (=> b!69774 (= e!45655 (= (apply!73 lt!30705 (select (arr!1828 lt!30200) #b00000000000000000000000000000000)) (get!1126 (select (arr!1829 lt!30191) #b00000000000000000000000000000000) (dynLambda!321 (defaultEntry!2167 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!69774 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2066 lt!30191)))))

(assert (=> b!69774 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2065 lt!30200)))))

(declare-fun bm!5974 () Bool)

(assert (=> bm!5974 (= call!5972 call!5974)))

(declare-fun d!15397 () Bool)

(assert (=> d!15397 e!45656))

(declare-fun res!37387 () Bool)

(assert (=> d!15397 (=> (not res!37387) (not e!45656))))

(assert (=> d!15397 (= res!37387 (or (bvsge #b00000000000000000000000000000000 (size!2065 lt!30200)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2065 lt!30200)))))))

(declare-fun lt!30707 () ListLongMap!1385)

(assert (=> d!15397 (= lt!30705 lt!30707)))

(declare-fun lt!30717 () Unit!1898)

(declare-fun e!45667 () Unit!1898)

(assert (=> d!15397 (= lt!30717 e!45667)))

(declare-fun c!10033 () Bool)

(declare-fun e!45664 () Bool)

(assert (=> d!15397 (= c!10033 e!45664)))

(declare-fun res!37379 () Bool)

(assert (=> d!15397 (=> (not res!37379) (not e!45664))))

(assert (=> d!15397 (= res!37379 (bvslt #b00000000000000000000000000000000 (size!2065 lt!30200)))))

(assert (=> d!15397 (= lt!30707 e!45660)))

(assert (=> d!15397 (= c!10031 (and (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!15397 (validMask!0 (mask!6111 newMap!16))))

(assert (=> d!15397 (= (getCurrentListMap!403 lt!30200 lt!30191 (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) lt!30705)))

(declare-fun b!69762 () Bool)

(assert (=> b!69762 (= e!45664 (validKeyInArray!0 (select (arr!1828 lt!30200) #b00000000000000000000000000000000)))))

(declare-fun b!69775 () Bool)

(assert (=> b!69775 (= e!45656 e!45662)))

(declare-fun c!10030 () Bool)

(assert (=> b!69775 (= c!10030 (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!69776 () Bool)

(assert (=> b!69776 (= e!45666 e!45655)))

(declare-fun res!37383 () Bool)

(assert (=> b!69776 (=> (not res!37383) (not e!45655))))

(assert (=> b!69776 (= res!37383 (contains!709 lt!30705 (select (arr!1828 lt!30200) #b00000000000000000000000000000000)))))

(assert (=> b!69776 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2065 lt!30200)))))

(declare-fun b!69777 () Bool)

(assert (=> b!69777 (= e!45660 (+!89 call!5976 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))))))

(declare-fun b!69778 () Bool)

(assert (=> b!69778 (= e!45662 (not call!5973))))

(declare-fun bm!5975 () Bool)

(assert (=> bm!5975 (= call!5978 (contains!709 lt!30705 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69779 () Bool)

(declare-fun Unit!1956 () Unit!1898)

(assert (=> b!69779 (= e!45667 Unit!1956)))

(declare-fun b!69780 () Bool)

(declare-fun lt!30716 () Unit!1898)

(assert (=> b!69780 (= e!45667 lt!30716)))

(declare-fun lt!30699 () ListLongMap!1385)

(assert (=> b!69780 (= lt!30699 (getCurrentListMapNoExtraKeys!53 lt!30200 lt!30191 (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30703 () (_ BitVec 64))

(assert (=> b!69780 (= lt!30703 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30702 () (_ BitVec 64))

(assert (=> b!69780 (= lt!30702 (select (arr!1828 lt!30200) #b00000000000000000000000000000000))))

(declare-fun lt!30719 () Unit!1898)

(assert (=> b!69780 (= lt!30719 (addStillContains!49 lt!30699 lt!30703 (zeroValue!2073 newMap!16) lt!30702))))

(assert (=> b!69780 (contains!709 (+!89 lt!30699 (tuple2!2091 lt!30703 (zeroValue!2073 newMap!16))) lt!30702)))

(declare-fun lt!30713 () Unit!1898)

(assert (=> b!69780 (= lt!30713 lt!30719)))

(declare-fun lt!30714 () ListLongMap!1385)

(assert (=> b!69780 (= lt!30714 (getCurrentListMapNoExtraKeys!53 lt!30200 lt!30191 (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30704 () (_ BitVec 64))

(assert (=> b!69780 (= lt!30704 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30701 () (_ BitVec 64))

(assert (=> b!69780 (= lt!30701 (select (arr!1828 lt!30200) #b00000000000000000000000000000000))))

(declare-fun lt!30708 () Unit!1898)

(assert (=> b!69780 (= lt!30708 (addApplyDifferent!49 lt!30714 lt!30704 (minValue!2073 newMap!16) lt!30701))))

(assert (=> b!69780 (= (apply!73 (+!89 lt!30714 (tuple2!2091 lt!30704 (minValue!2073 newMap!16))) lt!30701) (apply!73 lt!30714 lt!30701))))

(declare-fun lt!30720 () Unit!1898)

(assert (=> b!69780 (= lt!30720 lt!30708)))

(declare-fun lt!30700 () ListLongMap!1385)

(assert (=> b!69780 (= lt!30700 (getCurrentListMapNoExtraKeys!53 lt!30200 lt!30191 (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30712 () (_ BitVec 64))

(assert (=> b!69780 (= lt!30712 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30709 () (_ BitVec 64))

(assert (=> b!69780 (= lt!30709 (select (arr!1828 lt!30200) #b00000000000000000000000000000000))))

(declare-fun lt!30711 () Unit!1898)

(assert (=> b!69780 (= lt!30711 (addApplyDifferent!49 lt!30700 lt!30712 (zeroValue!2073 newMap!16) lt!30709))))

(assert (=> b!69780 (= (apply!73 (+!89 lt!30700 (tuple2!2091 lt!30712 (zeroValue!2073 newMap!16))) lt!30709) (apply!73 lt!30700 lt!30709))))

(declare-fun lt!30706 () Unit!1898)

(assert (=> b!69780 (= lt!30706 lt!30711)))

(declare-fun lt!30718 () ListLongMap!1385)

(assert (=> b!69780 (= lt!30718 (getCurrentListMapNoExtraKeys!53 lt!30200 lt!30191 (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30715 () (_ BitVec 64))

(assert (=> b!69780 (= lt!30715 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30710 () (_ BitVec 64))

(assert (=> b!69780 (= lt!30710 (select (arr!1828 lt!30200) #b00000000000000000000000000000000))))

(assert (=> b!69780 (= lt!30716 (addApplyDifferent!49 lt!30718 lt!30715 (minValue!2073 newMap!16) lt!30710))))

(assert (=> b!69780 (= (apply!73 (+!89 lt!30718 (tuple2!2091 lt!30715 (minValue!2073 newMap!16))) lt!30710) (apply!73 lt!30718 lt!30710))))

(assert (= (and d!15397 c!10031) b!69777))

(assert (= (and d!15397 (not c!10031)) b!69767))

(assert (= (and b!69767 c!10028) b!69769))

(assert (= (and b!69767 (not c!10028)) b!69764))

(assert (= (and b!69764 c!10029) b!69770))

(assert (= (and b!69764 (not c!10029)) b!69760))

(assert (= (or b!69770 b!69760) bm!5974))

(assert (= (or b!69769 bm!5974) bm!5971))

(assert (= (or b!69769 b!69770) bm!5972))

(assert (= (or b!69777 bm!5971) bm!5973))

(assert (= (or b!69777 bm!5972) bm!5970))

(assert (= (and d!15397 res!37379) b!69762))

(assert (= (and d!15397 c!10033) b!69780))

(assert (= (and d!15397 (not c!10033)) b!69779))

(assert (= (and d!15397 res!37387) b!69766))

(assert (= (and b!69766 res!37381) b!69765))

(assert (= (and b!69766 (not res!37380)) b!69776))

(assert (= (and b!69776 res!37383) b!69774))

(assert (= (and b!69766 res!37384) b!69771))

(assert (= (and b!69771 c!10032) b!69768))

(assert (= (and b!69771 (not c!10032)) b!69763))

(assert (= (and b!69768 res!37382) b!69772))

(assert (= (or b!69768 b!69763) bm!5975))

(assert (= (and b!69771 res!37385) b!69775))

(assert (= (and b!69775 c!10030) b!69761))

(assert (= (and b!69775 (not c!10030)) b!69778))

(assert (= (and b!69761 res!37386) b!69773))

(assert (= (or b!69761 b!69778) bm!5969))

(declare-fun b_lambda!3119 () Bool)

(assert (=> (not b_lambda!3119) (not b!69774)))

(assert (=> b!69774 t!4978))

(declare-fun b_and!4297 () Bool)

(assert (= b_and!4293 (and (=> t!4978 result!2615) b_and!4297)))

(assert (=> b!69774 t!4980))

(declare-fun b_and!4299 () Bool)

(assert (= b_and!4295 (and (=> t!4980 result!2617) b_and!4299)))

(declare-fun m!66383 () Bool)

(assert (=> b!69777 m!66383))

(declare-fun m!66385 () Bool)

(assert (=> bm!5970 m!66385))

(declare-fun m!66387 () Bool)

(assert (=> bm!5973 m!66387))

(declare-fun m!66389 () Bool)

(assert (=> b!69774 m!66389))

(declare-fun m!66391 () Bool)

(assert (=> b!69774 m!66391))

(assert (=> b!69774 m!66389))

(declare-fun m!66393 () Bool)

(assert (=> b!69774 m!66393))

(assert (=> b!69774 m!64243))

(assert (=> b!69774 m!66391))

(assert (=> b!69774 m!64243))

(declare-fun m!66395 () Bool)

(assert (=> b!69774 m!66395))

(assert (=> b!69762 m!66389))

(assert (=> b!69762 m!66389))

(declare-fun m!66397 () Bool)

(assert (=> b!69762 m!66397))

(assert (=> b!69765 m!66389))

(assert (=> b!69765 m!66389))

(assert (=> b!69765 m!66397))

(declare-fun m!66399 () Bool)

(assert (=> bm!5969 m!66399))

(declare-fun m!66401 () Bool)

(assert (=> b!69773 m!66401))

(declare-fun m!66403 () Bool)

(assert (=> bm!5975 m!66403))

(declare-fun m!66405 () Bool)

(assert (=> b!69780 m!66405))

(declare-fun m!66407 () Bool)

(assert (=> b!69780 m!66407))

(declare-fun m!66409 () Bool)

(assert (=> b!69780 m!66409))

(assert (=> b!69780 m!66407))

(assert (=> b!69780 m!66405))

(declare-fun m!66411 () Bool)

(assert (=> b!69780 m!66411))

(declare-fun m!66413 () Bool)

(assert (=> b!69780 m!66413))

(declare-fun m!66415 () Bool)

(assert (=> b!69780 m!66415))

(declare-fun m!66417 () Bool)

(assert (=> b!69780 m!66417))

(declare-fun m!66419 () Bool)

(assert (=> b!69780 m!66419))

(declare-fun m!66421 () Bool)

(assert (=> b!69780 m!66421))

(declare-fun m!66423 () Bool)

(assert (=> b!69780 m!66423))

(assert (=> b!69780 m!66387))

(declare-fun m!66425 () Bool)

(assert (=> b!69780 m!66425))

(declare-fun m!66427 () Bool)

(assert (=> b!69780 m!66427))

(assert (=> b!69780 m!66389))

(declare-fun m!66429 () Bool)

(assert (=> b!69780 m!66429))

(declare-fun m!66431 () Bool)

(assert (=> b!69780 m!66431))

(assert (=> b!69780 m!66417))

(assert (=> b!69780 m!66429))

(declare-fun m!66433 () Bool)

(assert (=> b!69780 m!66433))

(assert (=> b!69776 m!66389))

(assert (=> b!69776 m!66389))

(declare-fun m!66435 () Bool)

(assert (=> b!69776 m!66435))

(declare-fun m!66437 () Bool)

(assert (=> b!69772 m!66437))

(assert (=> d!15397 m!64193))

(assert (=> d!14787 d!15397))

(declare-fun d!15399 () Bool)

(declare-fun e!45673 () Bool)

(assert (=> d!15399 e!45673))

(declare-fun res!37399 () Bool)

(assert (=> d!15399 (=> (not res!37399) (not e!45673))))

(assert (=> d!15399 (= res!37399 (and (bvsge (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) #b00000000000000000000000000000000) (bvslt (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (size!2065 (_keys!3810 newMap!16)))))))

(declare-fun lt!30723 () Unit!1898)

(declare-fun choose!1 (array!3831 (_ BitVec 32) (_ BitVec 64)) Unit!1898)

(assert (=> d!15399 (= lt!30723 (choose!1 (_keys!3810 newMap!16) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))

(declare-fun e!45672 () Bool)

(assert (=> d!15399 e!45672))

(declare-fun res!37398 () Bool)

(assert (=> d!15399 (=> (not res!37398) (not e!45672))))

(assert (=> d!15399 (= res!37398 (and (bvsge (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) #b00000000000000000000000000000000) (bvslt (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (size!2065 (_keys!3810 newMap!16)))))))

(assert (=> d!15399 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3810 newMap!16) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) lt!30723)))

(declare-fun b!69790 () Bool)

(declare-fun res!37397 () Bool)

(assert (=> b!69790 (=> (not res!37397) (not e!45672))))

(assert (=> b!69790 (= res!37397 (validKeyInArray!0 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))

(declare-fun b!69792 () Bool)

(assert (=> b!69792 (= e!45673 (= (arrayCountValidKeys!0 (array!3832 (store (arr!1828 (_keys!3810 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) (size!2065 (_keys!3810 newMap!16))) #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!3810 newMap!16) #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))) #b00000000000000000000000000000001)))))

(declare-fun b!69789 () Bool)

(declare-fun res!37396 () Bool)

(assert (=> b!69789 (=> (not res!37396) (not e!45672))))

(assert (=> b!69789 (= res!37396 (not (validKeyInArray!0 (select (arr!1828 (_keys!3810 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944))))))))

(declare-fun b!69791 () Bool)

(assert (=> b!69791 (= e!45672 (bvslt (size!2065 (_keys!3810 newMap!16)) #b01111111111111111111111111111111))))

(assert (= (and d!15399 res!37398) b!69789))

(assert (= (and b!69789 res!37396) b!69790))

(assert (= (and b!69790 res!37397) b!69791))

(assert (= (and d!15399 res!37399) b!69792))

(assert (=> d!15399 m!63767))

(declare-fun m!66439 () Bool)

(assert (=> d!15399 m!66439))

(assert (=> b!69790 m!63767))

(assert (=> b!69790 m!64095))

(assert (=> b!69792 m!64547))

(assert (=> b!69792 m!64585))

(assert (=> b!69792 m!63937))

(declare-fun m!66441 () Bool)

(assert (=> b!69789 m!66441))

(assert (=> b!69789 m!66441))

(declare-fun m!66443 () Bool)

(assert (=> b!69789 m!66443))

(assert (=> d!14787 d!15399))

(assert (=> d!14787 d!15239))

(declare-fun d!15401 () Bool)

(declare-fun res!37402 () Bool)

(declare-fun e!45674 () Bool)

(assert (=> d!15401 (=> res!37402 e!45674)))

(assert (=> d!15401 (= res!37402 (bvsge lt!30180 (size!2065 (array!3832 (store (arr!1828 (_keys!3810 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) (size!2065 (_keys!3810 newMap!16))))))))

(assert (=> d!15401 (= (arrayNoDuplicates!0 (array!3832 (store (arr!1828 (_keys!3810 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) (size!2065 (_keys!3810 newMap!16))) lt!30180 lt!30184) e!45674)))

(declare-fun b!69793 () Bool)

(declare-fun e!45677 () Bool)

(declare-fun call!5979 () Bool)

(assert (=> b!69793 (= e!45677 call!5979)))

(declare-fun e!45676 () Bool)

(declare-fun b!69794 () Bool)

(assert (=> b!69794 (= e!45676 (contains!712 lt!30184 (select (arr!1828 (array!3832 (store (arr!1828 (_keys!3810 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) (size!2065 (_keys!3810 newMap!16)))) lt!30180)))))

(declare-fun bm!5976 () Bool)

(declare-fun c!10034 () Bool)

(assert (=> bm!5976 (= call!5979 (arrayNoDuplicates!0 (array!3832 (store (arr!1828 (_keys!3810 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) (size!2065 (_keys!3810 newMap!16))) (bvadd lt!30180 #b00000000000000000000000000000001) (ite c!10034 (Cons!1467 (select (arr!1828 (array!3832 (store (arr!1828 (_keys!3810 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) (size!2065 (_keys!3810 newMap!16)))) lt!30180) lt!30184) lt!30184)))))

(declare-fun b!69795 () Bool)

(declare-fun e!45675 () Bool)

(assert (=> b!69795 (= e!45674 e!45675)))

(declare-fun res!37401 () Bool)

(assert (=> b!69795 (=> (not res!37401) (not e!45675))))

(assert (=> b!69795 (= res!37401 (not e!45676))))

(declare-fun res!37400 () Bool)

(assert (=> b!69795 (=> (not res!37400) (not e!45676))))

(assert (=> b!69795 (= res!37400 (validKeyInArray!0 (select (arr!1828 (array!3832 (store (arr!1828 (_keys!3810 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) (size!2065 (_keys!3810 newMap!16)))) lt!30180)))))

(declare-fun b!69796 () Bool)

(assert (=> b!69796 (= e!45675 e!45677)))

(assert (=> b!69796 (= c!10034 (validKeyInArray!0 (select (arr!1828 (array!3832 (store (arr!1828 (_keys!3810 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) (size!2065 (_keys!3810 newMap!16)))) lt!30180)))))

(declare-fun b!69797 () Bool)

(assert (=> b!69797 (= e!45677 call!5979)))

(assert (= (and d!15401 (not res!37402)) b!69795))

(assert (= (and b!69795 res!37400) b!69794))

(assert (= (and b!69795 res!37401) b!69796))

(assert (= (and b!69796 c!10034) b!69793))

(assert (= (and b!69796 (not c!10034)) b!69797))

(assert (= (or b!69793 b!69797) bm!5976))

(declare-fun m!66445 () Bool)

(assert (=> b!69794 m!66445))

(assert (=> b!69794 m!66445))

(declare-fun m!66447 () Bool)

(assert (=> b!69794 m!66447))

(assert (=> bm!5976 m!66445))

(declare-fun m!66449 () Bool)

(assert (=> bm!5976 m!66449))

(assert (=> b!69795 m!66445))

(assert (=> b!69795 m!66445))

(declare-fun m!66451 () Bool)

(assert (=> b!69795 m!66451))

(assert (=> b!69796 m!66445))

(assert (=> b!69796 m!66445))

(assert (=> b!69796 m!66451))

(assert (=> d!14787 d!15401))

(declare-fun d!15403 () Bool)

(declare-fun e!45679 () Bool)

(assert (=> d!15403 e!45679))

(declare-fun res!37403 () Bool)

(assert (=> d!15403 (=> res!37403 e!45679)))

(declare-fun lt!30727 () Bool)

(assert (=> d!15403 (= res!37403 (not lt!30727))))

(declare-fun lt!30726 () Bool)

(assert (=> d!15403 (= lt!30727 lt!30726)))

(declare-fun lt!30725 () Unit!1898)

(declare-fun e!45678 () Unit!1898)

(assert (=> d!15403 (= lt!30725 e!45678)))

(declare-fun c!10035 () Bool)

(assert (=> d!15403 (= c!10035 lt!30726)))

(assert (=> d!15403 (= lt!30726 (containsKey!133 (toList!708 (getCurrentListMap!403 lt!30200 lt!30191 (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16))) (select (store (arr!1828 (_keys!3810 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)))))))

(assert (=> d!15403 (= (contains!709 (getCurrentListMap!403 lt!30200 lt!30191 (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) (select (store (arr!1828 (_keys!3810 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)))) lt!30727)))

(declare-fun b!69798 () Bool)

(declare-fun lt!30724 () Unit!1898)

(assert (=> b!69798 (= e!45678 lt!30724)))

(assert (=> b!69798 (= lt!30724 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 (getCurrentListMap!403 lt!30200 lt!30191 (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16))) (select (store (arr!1828 (_keys!3810 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)))))))

(assert (=> b!69798 (isDefined!83 (getValueByKey!129 (toList!708 (getCurrentListMap!403 lt!30200 lt!30191 (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16))) (select (store (arr!1828 (_keys!3810 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)))))))

(declare-fun b!69799 () Bool)

(declare-fun Unit!1957 () Unit!1898)

(assert (=> b!69799 (= e!45678 Unit!1957)))

(declare-fun b!69800 () Bool)

(assert (=> b!69800 (= e!45679 (isDefined!83 (getValueByKey!129 (toList!708 (getCurrentListMap!403 lt!30200 lt!30191 (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16))) (select (store (arr!1828 (_keys!3810 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944))))))))

(assert (= (and d!15403 c!10035) b!69798))

(assert (= (and d!15403 (not c!10035)) b!69799))

(assert (= (and d!15403 (not res!37403)) b!69800))

(assert (=> d!15403 m!64577))

(declare-fun m!66453 () Bool)

(assert (=> d!15403 m!66453))

(assert (=> b!69798 m!64577))

(declare-fun m!66455 () Bool)

(assert (=> b!69798 m!66455))

(assert (=> b!69798 m!64577))

(declare-fun m!66457 () Bool)

(assert (=> b!69798 m!66457))

(assert (=> b!69798 m!66457))

(declare-fun m!66459 () Bool)

(assert (=> b!69798 m!66459))

(assert (=> b!69800 m!64577))

(assert (=> b!69800 m!66457))

(assert (=> b!69800 m!66457))

(assert (=> b!69800 m!66459))

(assert (=> d!14787 d!15403))

(assert (=> d!14787 d!14883))

(assert (=> d!14787 d!14651))

(declare-fun b!69801 () Bool)

(declare-fun e!45690 () ListLongMap!1385)

(declare-fun call!5980 () ListLongMap!1385)

(assert (=> b!69801 (= e!45690 call!5980)))

(declare-fun b!69802 () Bool)

(declare-fun e!45687 () Bool)

(declare-fun e!45682 () Bool)

(assert (=> b!69802 (= e!45687 e!45682)))

(declare-fun res!37411 () Bool)

(declare-fun call!5981 () Bool)

(assert (=> b!69802 (= res!37411 call!5981)))

(assert (=> b!69802 (=> (not res!37411) (not e!45682))))

(declare-fun b!69804 () Bool)

(declare-fun e!45688 () Bool)

(declare-fun call!5986 () Bool)

(assert (=> b!69804 (= e!45688 (not call!5986))))

(declare-fun bm!5977 () Bool)

(declare-fun lt!30734 () ListLongMap!1385)

(assert (=> bm!5977 (= call!5981 (contains!709 lt!30734 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69805 () Bool)

(declare-fun c!10037 () Bool)

(assert (=> b!69805 (= c!10037 (and (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!45686 () ListLongMap!1385)

(assert (=> b!69805 (= e!45686 e!45690)))

(declare-fun call!5982 () ListLongMap!1385)

(declare-fun call!5984 () ListLongMap!1385)

(declare-fun c!10036 () Bool)

(declare-fun call!5985 () ListLongMap!1385)

(declare-fun c!10039 () Bool)

(declare-fun bm!5978 () Bool)

(assert (=> bm!5978 (= call!5984 (+!89 (ite c!10039 call!5985 (ite c!10036 call!5982 call!5980)) (ite (or c!10039 c!10036) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))))))

(declare-fun e!45684 () Bool)

(declare-fun b!69806 () Bool)

(assert (=> b!69806 (= e!45684 (validKeyInArray!0 (select (arr!1828 (array!3832 (store (arr!1828 (_keys!3810 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) (size!2065 (_keys!3810 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!69807 () Bool)

(declare-fun res!37409 () Bool)

(declare-fun e!45681 () Bool)

(assert (=> b!69807 (=> (not res!37409) (not e!45681))))

(declare-fun e!45691 () Bool)

(assert (=> b!69807 (= res!37409 e!45691)))

(declare-fun res!37405 () Bool)

(assert (=> b!69807 (=> res!37405 e!45691)))

(assert (=> b!69807 (= res!37405 (not e!45684))))

(declare-fun res!37406 () Bool)

(assert (=> b!69807 (=> (not res!37406) (not e!45684))))

(assert (=> b!69807 (= res!37406 (bvslt #b00000000000000000000000000000000 (size!2065 (array!3832 (store (arr!1828 (_keys!3810 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) (size!2065 (_keys!3810 newMap!16))))))))

(declare-fun b!69808 () Bool)

(declare-fun e!45685 () ListLongMap!1385)

(assert (=> b!69808 (= e!45685 e!45686)))

(assert (=> b!69808 (= c!10036 (and (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!69809 () Bool)

(declare-fun e!45683 () Bool)

(assert (=> b!69809 (= e!45688 e!45683)))

(declare-fun res!37407 () Bool)

(assert (=> b!69809 (= res!37407 call!5986)))

(assert (=> b!69809 (=> (not res!37407) (not e!45683))))

(declare-fun bm!5979 () Bool)

(assert (=> bm!5979 (= call!5982 call!5985)))

(declare-fun b!69810 () Bool)

(declare-fun call!5983 () ListLongMap!1385)

(assert (=> b!69810 (= e!45686 call!5983)))

(declare-fun bm!5980 () Bool)

(assert (=> bm!5980 (= call!5983 call!5984)))

(declare-fun b!69811 () Bool)

(assert (=> b!69811 (= e!45690 call!5983)))

(declare-fun b!69812 () Bool)

(declare-fun res!37410 () Bool)

(assert (=> b!69812 (=> (not res!37410) (not e!45681))))

(assert (=> b!69812 (= res!37410 e!45688)))

(declare-fun c!10040 () Bool)

(assert (=> b!69812 (= c!10040 (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!69813 () Bool)

(assert (=> b!69813 (= e!45683 (= (apply!73 lt!30734 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2073 newMap!16)))))

(declare-fun bm!5981 () Bool)

(assert (=> bm!5981 (= call!5985 (getCurrentListMapNoExtraKeys!53 (array!3832 (store (arr!1828 (_keys!3810 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) (size!2065 (_keys!3810 newMap!16))) (array!3834 (store (arr!1829 (_values!2150 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (ValueCellFull!884 lt!29673)) (size!2066 (_values!2150 newMap!16))) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun b!69814 () Bool)

(assert (=> b!69814 (= e!45682 (= (apply!73 lt!30734 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2073 newMap!16)))))

(declare-fun e!45680 () Bool)

(declare-fun b!69815 () Bool)

(assert (=> b!69815 (= e!45680 (= (apply!73 lt!30734 (select (arr!1828 (array!3832 (store (arr!1828 (_keys!3810 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) (size!2065 (_keys!3810 newMap!16)))) #b00000000000000000000000000000000)) (get!1126 (select (arr!1829 (array!3834 (store (arr!1829 (_values!2150 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (ValueCellFull!884 lt!29673)) (size!2066 (_values!2150 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!321 (defaultEntry!2167 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!69815 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2066 (array!3834 (store (arr!1829 (_values!2150 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (ValueCellFull!884 lt!29673)) (size!2066 (_values!2150 newMap!16))))))))

(assert (=> b!69815 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2065 (array!3832 (store (arr!1828 (_keys!3810 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) (size!2065 (_keys!3810 newMap!16))))))))

(declare-fun bm!5982 () Bool)

(assert (=> bm!5982 (= call!5980 call!5982)))

(declare-fun d!15405 () Bool)

(assert (=> d!15405 e!45681))

(declare-fun res!37412 () Bool)

(assert (=> d!15405 (=> (not res!37412) (not e!45681))))

(assert (=> d!15405 (= res!37412 (or (bvsge #b00000000000000000000000000000000 (size!2065 (array!3832 (store (arr!1828 (_keys!3810 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) (size!2065 (_keys!3810 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2065 (array!3832 (store (arr!1828 (_keys!3810 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) (size!2065 (_keys!3810 newMap!16))))))))))

(declare-fun lt!30736 () ListLongMap!1385)

(assert (=> d!15405 (= lt!30734 lt!30736)))

(declare-fun lt!30746 () Unit!1898)

(declare-fun e!45692 () Unit!1898)

(assert (=> d!15405 (= lt!30746 e!45692)))

(declare-fun c!10041 () Bool)

(declare-fun e!45689 () Bool)

(assert (=> d!15405 (= c!10041 e!45689)))

(declare-fun res!37404 () Bool)

(assert (=> d!15405 (=> (not res!37404) (not e!45689))))

(assert (=> d!15405 (= res!37404 (bvslt #b00000000000000000000000000000000 (size!2065 (array!3832 (store (arr!1828 (_keys!3810 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) (size!2065 (_keys!3810 newMap!16))))))))

(assert (=> d!15405 (= lt!30736 e!45685)))

(assert (=> d!15405 (= c!10039 (and (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!15405 (validMask!0 (mask!6111 newMap!16))))

(assert (=> d!15405 (= (getCurrentListMap!403 (array!3832 (store (arr!1828 (_keys!3810 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) (size!2065 (_keys!3810 newMap!16))) (array!3834 (store (arr!1829 (_values!2150 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (ValueCellFull!884 lt!29673)) (size!2066 (_values!2150 newMap!16))) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) lt!30734)))

(declare-fun b!69803 () Bool)

(assert (=> b!69803 (= e!45689 (validKeyInArray!0 (select (arr!1828 (array!3832 (store (arr!1828 (_keys!3810 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) (size!2065 (_keys!3810 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!69816 () Bool)

(assert (=> b!69816 (= e!45681 e!45687)))

(declare-fun c!10038 () Bool)

(assert (=> b!69816 (= c!10038 (not (= (bvand (extraKeys!2034 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!69817 () Bool)

(assert (=> b!69817 (= e!45691 e!45680)))

(declare-fun res!37408 () Bool)

(assert (=> b!69817 (=> (not res!37408) (not e!45680))))

(assert (=> b!69817 (= res!37408 (contains!709 lt!30734 (select (arr!1828 (array!3832 (store (arr!1828 (_keys!3810 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) (size!2065 (_keys!3810 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!69817 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2065 (array!3832 (store (arr!1828 (_keys!3810 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) (size!2065 (_keys!3810 newMap!16))))))))

(declare-fun b!69818 () Bool)

(assert (=> b!69818 (= e!45685 (+!89 call!5984 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))))))

(declare-fun b!69819 () Bool)

(assert (=> b!69819 (= e!45687 (not call!5981))))

(declare-fun bm!5983 () Bool)

(assert (=> bm!5983 (= call!5986 (contains!709 lt!30734 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69820 () Bool)

(declare-fun Unit!1958 () Unit!1898)

(assert (=> b!69820 (= e!45692 Unit!1958)))

(declare-fun b!69821 () Bool)

(declare-fun lt!30745 () Unit!1898)

(assert (=> b!69821 (= e!45692 lt!30745)))

(declare-fun lt!30728 () ListLongMap!1385)

(assert (=> b!69821 (= lt!30728 (getCurrentListMapNoExtraKeys!53 (array!3832 (store (arr!1828 (_keys!3810 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) (size!2065 (_keys!3810 newMap!16))) (array!3834 (store (arr!1829 (_values!2150 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (ValueCellFull!884 lt!29673)) (size!2066 (_values!2150 newMap!16))) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30732 () (_ BitVec 64))

(assert (=> b!69821 (= lt!30732 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30731 () (_ BitVec 64))

(assert (=> b!69821 (= lt!30731 (select (arr!1828 (array!3832 (store (arr!1828 (_keys!3810 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) (size!2065 (_keys!3810 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!30748 () Unit!1898)

(assert (=> b!69821 (= lt!30748 (addStillContains!49 lt!30728 lt!30732 (zeroValue!2073 newMap!16) lt!30731))))

(assert (=> b!69821 (contains!709 (+!89 lt!30728 (tuple2!2091 lt!30732 (zeroValue!2073 newMap!16))) lt!30731)))

(declare-fun lt!30742 () Unit!1898)

(assert (=> b!69821 (= lt!30742 lt!30748)))

(declare-fun lt!30743 () ListLongMap!1385)

(assert (=> b!69821 (= lt!30743 (getCurrentListMapNoExtraKeys!53 (array!3832 (store (arr!1828 (_keys!3810 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) (size!2065 (_keys!3810 newMap!16))) (array!3834 (store (arr!1829 (_values!2150 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (ValueCellFull!884 lt!29673)) (size!2066 (_values!2150 newMap!16))) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30733 () (_ BitVec 64))

(assert (=> b!69821 (= lt!30733 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30730 () (_ BitVec 64))

(assert (=> b!69821 (= lt!30730 (select (arr!1828 (array!3832 (store (arr!1828 (_keys!3810 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) (size!2065 (_keys!3810 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!30737 () Unit!1898)

(assert (=> b!69821 (= lt!30737 (addApplyDifferent!49 lt!30743 lt!30733 (minValue!2073 newMap!16) lt!30730))))

(assert (=> b!69821 (= (apply!73 (+!89 lt!30743 (tuple2!2091 lt!30733 (minValue!2073 newMap!16))) lt!30730) (apply!73 lt!30743 lt!30730))))

(declare-fun lt!30749 () Unit!1898)

(assert (=> b!69821 (= lt!30749 lt!30737)))

(declare-fun lt!30729 () ListLongMap!1385)

(assert (=> b!69821 (= lt!30729 (getCurrentListMapNoExtraKeys!53 (array!3832 (store (arr!1828 (_keys!3810 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) (size!2065 (_keys!3810 newMap!16))) (array!3834 (store (arr!1829 (_values!2150 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (ValueCellFull!884 lt!29673)) (size!2066 (_values!2150 newMap!16))) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30741 () (_ BitVec 64))

(assert (=> b!69821 (= lt!30741 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30738 () (_ BitVec 64))

(assert (=> b!69821 (= lt!30738 (select (arr!1828 (array!3832 (store (arr!1828 (_keys!3810 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) (size!2065 (_keys!3810 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!30740 () Unit!1898)

(assert (=> b!69821 (= lt!30740 (addApplyDifferent!49 lt!30729 lt!30741 (zeroValue!2073 newMap!16) lt!30738))))

(assert (=> b!69821 (= (apply!73 (+!89 lt!30729 (tuple2!2091 lt!30741 (zeroValue!2073 newMap!16))) lt!30738) (apply!73 lt!30729 lt!30738))))

(declare-fun lt!30735 () Unit!1898)

(assert (=> b!69821 (= lt!30735 lt!30740)))

(declare-fun lt!30747 () ListLongMap!1385)

(assert (=> b!69821 (= lt!30747 (getCurrentListMapNoExtraKeys!53 (array!3832 (store (arr!1828 (_keys!3810 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) (size!2065 (_keys!3810 newMap!16))) (array!3834 (store (arr!1829 (_values!2150 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (ValueCellFull!884 lt!29673)) (size!2066 (_values!2150 newMap!16))) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(declare-fun lt!30744 () (_ BitVec 64))

(assert (=> b!69821 (= lt!30744 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30739 () (_ BitVec 64))

(assert (=> b!69821 (= lt!30739 (select (arr!1828 (array!3832 (store (arr!1828 (_keys!3810 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) (size!2065 (_keys!3810 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!69821 (= lt!30745 (addApplyDifferent!49 lt!30747 lt!30744 (minValue!2073 newMap!16) lt!30739))))

(assert (=> b!69821 (= (apply!73 (+!89 lt!30747 (tuple2!2091 lt!30744 (minValue!2073 newMap!16))) lt!30739) (apply!73 lt!30747 lt!30739))))

(assert (= (and d!15405 c!10039) b!69818))

(assert (= (and d!15405 (not c!10039)) b!69808))

(assert (= (and b!69808 c!10036) b!69810))

(assert (= (and b!69808 (not c!10036)) b!69805))

(assert (= (and b!69805 c!10037) b!69811))

(assert (= (and b!69805 (not c!10037)) b!69801))

(assert (= (or b!69811 b!69801) bm!5982))

(assert (= (or b!69810 bm!5982) bm!5979))

(assert (= (or b!69810 b!69811) bm!5980))

(assert (= (or b!69818 bm!5979) bm!5981))

(assert (= (or b!69818 bm!5980) bm!5978))

(assert (= (and d!15405 res!37404) b!69803))

(assert (= (and d!15405 c!10041) b!69821))

(assert (= (and d!15405 (not c!10041)) b!69820))

(assert (= (and d!15405 res!37412) b!69807))

(assert (= (and b!69807 res!37406) b!69806))

(assert (= (and b!69807 (not res!37405)) b!69817))

(assert (= (and b!69817 res!37408) b!69815))

(assert (= (and b!69807 res!37409) b!69812))

(assert (= (and b!69812 c!10040) b!69809))

(assert (= (and b!69812 (not c!10040)) b!69804))

(assert (= (and b!69809 res!37407) b!69813))

(assert (= (or b!69809 b!69804) bm!5983))

(assert (= (and b!69812 res!37410) b!69816))

(assert (= (and b!69816 c!10038) b!69802))

(assert (= (and b!69816 (not c!10038)) b!69819))

(assert (= (and b!69802 res!37411) b!69814))

(assert (= (or b!69802 b!69819) bm!5977))

(declare-fun b_lambda!3121 () Bool)

(assert (=> (not b_lambda!3121) (not b!69815)))

(assert (=> b!69815 t!4978))

(declare-fun b_and!4301 () Bool)

(assert (= b_and!4297 (and (=> t!4978 result!2615) b_and!4301)))

(assert (=> b!69815 t!4980))

(declare-fun b_and!4303 () Bool)

(assert (= b_and!4299 (and (=> t!4980 result!2617) b_and!4303)))

(declare-fun m!66461 () Bool)

(assert (=> b!69818 m!66461))

(declare-fun m!66463 () Bool)

(assert (=> bm!5978 m!66463))

(declare-fun m!66465 () Bool)

(assert (=> bm!5981 m!66465))

(declare-fun m!66467 () Bool)

(assert (=> b!69815 m!66467))

(declare-fun m!66469 () Bool)

(assert (=> b!69815 m!66469))

(assert (=> b!69815 m!66467))

(declare-fun m!66471 () Bool)

(assert (=> b!69815 m!66471))

(assert (=> b!69815 m!64243))

(assert (=> b!69815 m!66469))

(assert (=> b!69815 m!64243))

(declare-fun m!66473 () Bool)

(assert (=> b!69815 m!66473))

(assert (=> b!69803 m!66467))

(assert (=> b!69803 m!66467))

(declare-fun m!66475 () Bool)

(assert (=> b!69803 m!66475))

(assert (=> b!69806 m!66467))

(assert (=> b!69806 m!66467))

(assert (=> b!69806 m!66475))

(declare-fun m!66477 () Bool)

(assert (=> bm!5977 m!66477))

(declare-fun m!66479 () Bool)

(assert (=> b!69814 m!66479))

(declare-fun m!66481 () Bool)

(assert (=> bm!5983 m!66481))

(declare-fun m!66483 () Bool)

(assert (=> b!69821 m!66483))

(declare-fun m!66485 () Bool)

(assert (=> b!69821 m!66485))

(declare-fun m!66487 () Bool)

(assert (=> b!69821 m!66487))

(assert (=> b!69821 m!66485))

(assert (=> b!69821 m!66483))

(declare-fun m!66489 () Bool)

(assert (=> b!69821 m!66489))

(declare-fun m!66491 () Bool)

(assert (=> b!69821 m!66491))

(declare-fun m!66493 () Bool)

(assert (=> b!69821 m!66493))

(declare-fun m!66495 () Bool)

(assert (=> b!69821 m!66495))

(declare-fun m!66497 () Bool)

(assert (=> b!69821 m!66497))

(declare-fun m!66499 () Bool)

(assert (=> b!69821 m!66499))

(declare-fun m!66501 () Bool)

(assert (=> b!69821 m!66501))

(assert (=> b!69821 m!66465))

(declare-fun m!66503 () Bool)

(assert (=> b!69821 m!66503))

(declare-fun m!66505 () Bool)

(assert (=> b!69821 m!66505))

(assert (=> b!69821 m!66467))

(declare-fun m!66507 () Bool)

(assert (=> b!69821 m!66507))

(declare-fun m!66509 () Bool)

(assert (=> b!69821 m!66509))

(assert (=> b!69821 m!66495))

(assert (=> b!69821 m!66507))

(declare-fun m!66511 () Bool)

(assert (=> b!69821 m!66511))

(assert (=> b!69817 m!66467))

(assert (=> b!69817 m!66467))

(declare-fun m!66513 () Bool)

(assert (=> b!69817 m!66513))

(declare-fun m!66515 () Bool)

(assert (=> b!69813 m!66515))

(assert (=> d!15405 m!64193))

(assert (=> d!14787 d!15405))

(declare-fun d!15407 () Bool)

(declare-fun e!45693 () Bool)

(assert (=> d!15407 e!45693))

(declare-fun res!37413 () Bool)

(assert (=> d!15407 (=> (not res!37413) (not e!45693))))

(assert (=> d!15407 (= res!37413 (and (bvsge (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) #b00000000000000000000000000000000) (bvslt (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (size!2065 lt!30200))))))

(declare-fun lt!30750 () Unit!1898)

(assert (=> d!15407 (= lt!30750 (choose!393 lt!30200 lt!30191 (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (defaultEntry!2167 newMap!16)))))

(assert (=> d!15407 (validMask!0 (mask!6111 newMap!16))))

(assert (=> d!15407 (= (lemmaValidKeyInArrayIsInListMap!81 lt!30200 lt!30191 (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (defaultEntry!2167 newMap!16)) lt!30750)))

(declare-fun b!69822 () Bool)

(assert (=> b!69822 (= e!45693 (contains!709 (getCurrentListMap!403 lt!30200 lt!30191 (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) (select (arr!1828 lt!30200) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)))))))

(assert (= (and d!15407 res!37413) b!69822))

(declare-fun m!66517 () Bool)

(assert (=> d!15407 m!66517))

(assert (=> d!15407 m!64193))

(assert (=> b!69822 m!64549))

(declare-fun m!66519 () Bool)

(assert (=> b!69822 m!66519))

(assert (=> b!69822 m!64549))

(assert (=> b!69822 m!66519))

(declare-fun m!66521 () Bool)

(assert (=> b!69822 m!66521))

(assert (=> d!14787 d!15407))

(declare-fun lt!30751 () (_ BitVec 32))

(declare-fun d!15409 () Bool)

(assert (=> d!15409 (and (bvsge lt!30751 #b00000000000000000000000000000000) (bvsle lt!30751 (bvsub (size!2065 (array!3832 (store (arr!1828 (_keys!3810 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) (size!2065 (_keys!3810 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun e!45694 () (_ BitVec 32))

(assert (=> d!15409 (= lt!30751 e!45694)))

(declare-fun c!10043 () Bool)

(assert (=> d!15409 (= c!10043 (bvsge #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))))))

(assert (=> d!15409 (and (bvsle #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2065 (_keys!3810 newMap!16)) (size!2065 (array!3832 (store (arr!1828 (_keys!3810 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) (size!2065 (_keys!3810 newMap!16))))))))

(assert (=> d!15409 (= (arrayCountValidKeys!0 (array!3832 (store (arr!1828 (_keys!3810 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) (size!2065 (_keys!3810 newMap!16))) #b00000000000000000000000000000000 (size!2065 (_keys!3810 newMap!16))) lt!30751)))

(declare-fun bm!5984 () Bool)

(declare-fun call!5987 () (_ BitVec 32))

(assert (=> bm!5984 (= call!5987 (arrayCountValidKeys!0 (array!3832 (store (arr!1828 (_keys!3810 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) (size!2065 (_keys!3810 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2065 (_keys!3810 newMap!16))))))

(declare-fun b!69823 () Bool)

(declare-fun e!45695 () (_ BitVec 32))

(assert (=> b!69823 (= e!45695 (bvadd #b00000000000000000000000000000001 call!5987))))

(declare-fun b!69824 () Bool)

(assert (=> b!69824 (= e!45694 e!45695)))

(declare-fun c!10042 () Bool)

(assert (=> b!69824 (= c!10042 (validKeyInArray!0 (select (arr!1828 (array!3832 (store (arr!1828 (_keys!3810 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) (size!2065 (_keys!3810 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!69825 () Bool)

(assert (=> b!69825 (= e!45695 call!5987)))

(declare-fun b!69826 () Bool)

(assert (=> b!69826 (= e!45694 #b00000000000000000000000000000000)))

(assert (= (and d!15409 c!10043) b!69826))

(assert (= (and d!15409 (not c!10043)) b!69824))

(assert (= (and b!69824 c!10042) b!69823))

(assert (= (and b!69824 (not c!10042)) b!69825))

(assert (= (or b!69823 b!69825) bm!5984))

(declare-fun m!66523 () Bool)

(assert (=> bm!5984 m!66523))

(assert (=> b!69824 m!66467))

(assert (=> b!69824 m!66467))

(assert (=> b!69824 m!66475))

(assert (=> d!14787 d!15409))

(declare-fun d!15411 () Bool)

(assert (=> d!15411 (arrayContainsKey!0 lt!30199 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!30754 () Unit!1898)

(declare-fun choose!13 (array!3831 (_ BitVec 64) (_ BitVec 32)) Unit!1898)

(assert (=> d!15411 (= lt!30754 (choose!13 lt!30199 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944))))))

(assert (=> d!15411 (bvsge (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) #b00000000000000000000000000000000)))

(assert (=> d!15411 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!30199 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944))) lt!30754)))

(declare-fun bs!3015 () Bool)

(assert (= bs!3015 d!15411))

(assert (=> bs!3015 m!63767))

(assert (=> bs!3015 m!64559))

(assert (=> bs!3015 m!63767))

(declare-fun m!66525 () Bool)

(assert (=> bs!3015 m!66525))

(assert (=> d!14787 d!15411))

(declare-fun b!69827 () Bool)

(declare-fun e!45696 () Bool)

(declare-fun call!5988 () Bool)

(assert (=> b!69827 (= e!45696 call!5988)))

(declare-fun b!69828 () Bool)

(declare-fun e!45698 () Bool)

(assert (=> b!69828 (= e!45698 e!45696)))

(declare-fun lt!30757 () (_ BitVec 64))

(assert (=> b!69828 (= lt!30757 (select (arr!1828 (array!3832 (store (arr!1828 (_keys!3810 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) (size!2065 (_keys!3810 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!30756 () Unit!1898)

(assert (=> b!69828 (= lt!30756 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!3832 (store (arr!1828 (_keys!3810 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) (size!2065 (_keys!3810 newMap!16))) lt!30757 #b00000000000000000000000000000000))))

(assert (=> b!69828 (arrayContainsKey!0 (array!3832 (store (arr!1828 (_keys!3810 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) (size!2065 (_keys!3810 newMap!16))) lt!30757 #b00000000000000000000000000000000)))

(declare-fun lt!30755 () Unit!1898)

(assert (=> b!69828 (= lt!30755 lt!30756)))

(declare-fun res!37414 () Bool)

(assert (=> b!69828 (= res!37414 (= (seekEntryOrOpen!0 (select (arr!1828 (array!3832 (store (arr!1828 (_keys!3810 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) (size!2065 (_keys!3810 newMap!16)))) #b00000000000000000000000000000000) (array!3832 (store (arr!1828 (_keys!3810 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) (size!2065 (_keys!3810 newMap!16))) (mask!6111 newMap!16)) (Found!237 #b00000000000000000000000000000000)))))

(assert (=> b!69828 (=> (not res!37414) (not e!45696))))

(declare-fun bm!5985 () Bool)

(assert (=> bm!5985 (= call!5988 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!3832 (store (arr!1828 (_keys!3810 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) (size!2065 (_keys!3810 newMap!16))) (mask!6111 newMap!16)))))

(declare-fun b!69829 () Bool)

(assert (=> b!69829 (= e!45698 call!5988)))

(declare-fun b!69830 () Bool)

(declare-fun e!45697 () Bool)

(assert (=> b!69830 (= e!45697 e!45698)))

(declare-fun c!10044 () Bool)

(assert (=> b!69830 (= c!10044 (validKeyInArray!0 (select (arr!1828 (array!3832 (store (arr!1828 (_keys!3810 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) (size!2065 (_keys!3810 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun d!15413 () Bool)

(declare-fun res!37415 () Bool)

(assert (=> d!15413 (=> res!37415 e!45697)))

(assert (=> d!15413 (= res!37415 (bvsge #b00000000000000000000000000000000 (size!2065 (array!3832 (store (arr!1828 (_keys!3810 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) (size!2065 (_keys!3810 newMap!16))))))))

(assert (=> d!15413 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3832 (store (arr!1828 (_keys!3810 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) (size!2065 (_keys!3810 newMap!16))) (mask!6111 newMap!16)) e!45697)))

(assert (= (and d!15413 (not res!37415)) b!69830))

(assert (= (and b!69830 c!10044) b!69828))

(assert (= (and b!69830 (not c!10044)) b!69829))

(assert (= (and b!69828 res!37414) b!69827))

(assert (= (or b!69827 b!69829) bm!5985))

(assert (=> b!69828 m!66467))

(declare-fun m!66527 () Bool)

(assert (=> b!69828 m!66527))

(declare-fun m!66529 () Bool)

(assert (=> b!69828 m!66529))

(assert (=> b!69828 m!66467))

(declare-fun m!66531 () Bool)

(assert (=> b!69828 m!66531))

(declare-fun m!66533 () Bool)

(assert (=> bm!5985 m!66533))

(assert (=> b!69830 m!66467))

(assert (=> b!69830 m!66467))

(assert (=> b!69830 m!66475))

(assert (=> d!14787 d!15413))

(declare-fun d!15415 () Bool)

(declare-fun e!45701 () Bool)

(assert (=> d!15415 e!45701))

(declare-fun res!37418 () Bool)

(assert (=> d!15415 (=> (not res!37418) (not e!45701))))

(assert (=> d!15415 (= res!37418 (and (bvsge (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) #b00000000000000000000000000000000) (bvslt (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (size!2065 (_keys!3810 newMap!16)))))))

(declare-fun lt!30760 () Unit!1898)

(declare-fun choose!102 ((_ BitVec 64) array!3831 (_ BitVec 32) (_ BitVec 32)) Unit!1898)

(assert (=> d!15415 (= lt!30760 (choose!102 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (_keys!3810 newMap!16) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (mask!6111 newMap!16)))))

(assert (=> d!15415 (validMask!0 (mask!6111 newMap!16))))

(assert (=> d!15415 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (_keys!3810 newMap!16) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (mask!6111 newMap!16)) lt!30760)))

(declare-fun b!69833 () Bool)

(assert (=> b!69833 (= e!45701 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3832 (store (arr!1828 (_keys!3810 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) (size!2065 (_keys!3810 newMap!16))) (mask!6111 newMap!16)))))

(assert (= (and d!15415 res!37418) b!69833))

(assert (=> d!15415 m!63767))

(declare-fun m!66535 () Bool)

(assert (=> d!15415 m!66535))

(assert (=> d!15415 m!64193))

(assert (=> b!69833 m!64547))

(assert (=> b!69833 m!64561))

(assert (=> d!14787 d!15415))

(declare-fun d!15417 () Bool)

(declare-fun e!45703 () Bool)

(assert (=> d!15417 e!45703))

(declare-fun res!37419 () Bool)

(assert (=> d!15417 (=> res!37419 e!45703)))

(declare-fun lt!30764 () Bool)

(assert (=> d!15417 (= res!37419 (not lt!30764))))

(declare-fun lt!30763 () Bool)

(assert (=> d!15417 (= lt!30764 lt!30763)))

(declare-fun lt!30762 () Unit!1898)

(declare-fun e!45702 () Unit!1898)

(assert (=> d!15417 (= lt!30762 e!45702)))

(declare-fun c!10045 () Bool)

(assert (=> d!15417 (= c!10045 lt!30763)))

(assert (=> d!15417 (= lt!30763 (containsKey!133 (toList!708 (getCurrentListMap!403 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16))) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))

(assert (=> d!15417 (= (contains!709 (getCurrentListMap!403 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) lt!30764)))

(declare-fun b!69834 () Bool)

(declare-fun lt!30761 () Unit!1898)

(assert (=> b!69834 (= e!45702 lt!30761)))

(assert (=> b!69834 (= lt!30761 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 (getCurrentListMap!403 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16))) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))

(assert (=> b!69834 (isDefined!83 (getValueByKey!129 (toList!708 (getCurrentListMap!403 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16))) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))

(declare-fun b!69835 () Bool)

(declare-fun Unit!1959 () Unit!1898)

(assert (=> b!69835 (= e!45702 Unit!1959)))

(declare-fun b!69836 () Bool)

(assert (=> b!69836 (= e!45703 (isDefined!83 (getValueByKey!129 (toList!708 (getCurrentListMap!403 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16))) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355))))))

(assert (= (and d!15417 c!10045) b!69834))

(assert (= (and d!15417 (not c!10045)) b!69835))

(assert (= (and d!15417 (not res!37419)) b!69836))

(assert (=> d!15417 m!63767))

(declare-fun m!66537 () Bool)

(assert (=> d!15417 m!66537))

(assert (=> b!69834 m!63767))

(declare-fun m!66539 () Bool)

(assert (=> b!69834 m!66539))

(assert (=> b!69834 m!63767))

(declare-fun m!66541 () Bool)

(assert (=> b!69834 m!66541))

(assert (=> b!69834 m!66541))

(declare-fun m!66543 () Bool)

(assert (=> b!69834 m!66543))

(assert (=> b!69836 m!63767))

(assert (=> b!69836 m!66541))

(assert (=> b!69836 m!66541))

(assert (=> b!69836 m!66543))

(assert (=> d!14787 d!15417))

(assert (=> d!14787 d!14819))

(declare-fun d!15419 () Bool)

(declare-fun lt!30765 () (_ BitVec 32))

(assert (=> d!15419 (and (bvsge lt!30765 #b00000000000000000000000000000000) (bvsle lt!30765 (bvsub (size!2065 lt!30190) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)))))))

(declare-fun e!45704 () (_ BitVec 32))

(assert (=> d!15419 (= lt!30765 e!45704)))

(declare-fun c!10047 () Bool)

(assert (=> d!15419 (= c!10047 (bvsge (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (bvadd (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) #b00000000000000000000000000000001)))))

(assert (=> d!15419 (and (bvsle (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (bvadd (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) #b00000000000000000000000000000001)) (bvsge (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) #b00000000000000000000000000000001) (size!2065 lt!30190)))))

(assert (=> d!15419 (= (arrayCountValidKeys!0 lt!30190 (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (bvadd (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) #b00000000000000000000000000000001)) lt!30765)))

(declare-fun bm!5986 () Bool)

(declare-fun call!5989 () (_ BitVec 32))

(assert (=> bm!5986 (= call!5989 (arrayCountValidKeys!0 lt!30190 (bvadd (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) #b00000000000000000000000000000001) (bvadd (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) #b00000000000000000000000000000001)))))

(declare-fun b!69837 () Bool)

(declare-fun e!45705 () (_ BitVec 32))

(assert (=> b!69837 (= e!45705 (bvadd #b00000000000000000000000000000001 call!5989))))

(declare-fun b!69838 () Bool)

(assert (=> b!69838 (= e!45704 e!45705)))

(declare-fun c!10046 () Bool)

(assert (=> b!69838 (= c!10046 (validKeyInArray!0 (select (arr!1828 lt!30190) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)))))))

(declare-fun b!69839 () Bool)

(assert (=> b!69839 (= e!45705 call!5989)))

(declare-fun b!69840 () Bool)

(assert (=> b!69840 (= e!45704 #b00000000000000000000000000000000)))

(assert (= (and d!15419 c!10047) b!69840))

(assert (= (and d!15419 (not c!10047)) b!69838))

(assert (= (and b!69838 c!10046) b!69837))

(assert (= (and b!69838 (not c!10046)) b!69839))

(assert (= (or b!69837 b!69839) bm!5986))

(declare-fun m!66545 () Bool)

(assert (=> bm!5986 m!66545))

(declare-fun m!66547 () Bool)

(assert (=> b!69838 m!66547))

(assert (=> b!69838 m!66547))

(declare-fun m!66549 () Bool)

(assert (=> b!69838 m!66549))

(assert (=> d!14787 d!15419))

(declare-fun d!15421 () Bool)

(assert (=> d!15421 (= (arrayCountValidKeys!0 lt!30190 (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (bvadd (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!30768 () Unit!1898)

(declare-fun choose!2 (array!3831 (_ BitVec 32)) Unit!1898)

(assert (=> d!15421 (= lt!30768 (choose!2 lt!30190 (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944))))))

(declare-fun e!45708 () Bool)

(assert (=> d!15421 e!45708))

(declare-fun res!37424 () Bool)

(assert (=> d!15421 (=> (not res!37424) (not e!45708))))

(assert (=> d!15421 (= res!37424 (and (bvsge (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) #b00000000000000000000000000000000) (bvslt (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (size!2065 lt!30190))))))

(assert (=> d!15421 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!30190 (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944))) lt!30768)))

(declare-fun b!69845 () Bool)

(declare-fun res!37425 () Bool)

(assert (=> b!69845 (=> (not res!37425) (not e!45708))))

(assert (=> b!69845 (= res!37425 (validKeyInArray!0 (select (arr!1828 lt!30190) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)))))))

(declare-fun b!69846 () Bool)

(assert (=> b!69846 (= e!45708 (bvslt (size!2065 lt!30190) #b01111111111111111111111111111111))))

(assert (= (and d!15421 res!37424) b!69845))

(assert (= (and b!69845 res!37425) b!69846))

(assert (=> d!15421 m!64571))

(declare-fun m!66551 () Bool)

(assert (=> d!15421 m!66551))

(assert (=> b!69845 m!66547))

(assert (=> b!69845 m!66547))

(assert (=> b!69845 m!66549))

(assert (=> d!14787 d!15421))

(assert (=> d!14787 d!14765))

(declare-fun d!15423 () Bool)

(declare-fun res!37426 () Bool)

(declare-fun e!45709 () Bool)

(assert (=> d!15423 (=> res!37426 e!45709)))

(assert (=> d!15423 (= res!37426 (= (select (arr!1828 lt!30199) #b00000000000000000000000000000000) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))

(assert (=> d!15423 (= (arrayContainsKey!0 lt!30199 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) #b00000000000000000000000000000000) e!45709)))

(declare-fun b!69847 () Bool)

(declare-fun e!45710 () Bool)

(assert (=> b!69847 (= e!45709 e!45710)))

(declare-fun res!37427 () Bool)

(assert (=> b!69847 (=> (not res!37427) (not e!45710))))

(assert (=> b!69847 (= res!37427 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2065 lt!30199)))))

(declare-fun b!69848 () Bool)

(assert (=> b!69848 (= e!45710 (arrayContainsKey!0 lt!30199 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!15423 (not res!37426)) b!69847))

(assert (= (and b!69847 res!37427) b!69848))

(declare-fun m!66553 () Bool)

(assert (=> d!15423 m!66553))

(assert (=> b!69848 m!63767))

(declare-fun m!66555 () Bool)

(assert (=> b!69848 m!66555))

(assert (=> d!14787 d!15423))

(declare-fun d!15425 () Bool)

(declare-fun e!45713 () Bool)

(assert (=> d!15425 e!45713))

(declare-fun res!37430 () Bool)

(assert (=> d!15425 (=> (not res!37430) (not e!45713))))

(assert (=> d!15425 (= res!37430 (and (bvsge (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) #b00000000000000000000000000000000) (bvslt (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (size!2065 (_keys!3810 newMap!16)))))))

(declare-fun lt!30771 () Unit!1898)

(declare-fun choose!41 (array!3831 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1471) Unit!1898)

(assert (=> d!15425 (= lt!30771 (choose!41 (_keys!3810 newMap!16) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) lt!30180 lt!30184))))

(assert (=> d!15425 (bvslt (size!2065 (_keys!3810 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!15425 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3810 newMap!16) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) lt!30180 lt!30184) lt!30771)))

(declare-fun b!69851 () Bool)

(assert (=> b!69851 (= e!45713 (arrayNoDuplicates!0 (array!3832 (store (arr!1828 (_keys!3810 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) (size!2065 (_keys!3810 newMap!16))) lt!30180 lt!30184))))

(assert (= (and d!15425 res!37430) b!69851))

(assert (=> d!15425 m!63767))

(declare-fun m!66557 () Bool)

(assert (=> d!15425 m!66557))

(assert (=> b!69851 m!64547))

(assert (=> b!69851 m!64569))

(assert (=> d!14787 d!15425))

(declare-fun d!15427 () Bool)

(declare-fun e!45716 () Bool)

(assert (=> d!15427 e!45716))

(declare-fun res!37433 () Bool)

(assert (=> d!15427 (=> (not res!37433) (not e!45716))))

(assert (=> d!15427 (= res!37433 (and (bvsge (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) #b00000000000000000000000000000000) (bvslt (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (size!2065 (_keys!3810 newMap!16))) (bvslt (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (size!2066 (_values!2150 newMap!16)))))))

(declare-fun lt!30774 () Unit!1898)

(declare-fun choose!400 (array!3831 array!3833 (_ BitVec 32) (_ BitVec 32) V!2921 V!2921 (_ BitVec 32) (_ BitVec 64) V!2921 Int) Unit!1898)

(assert (=> d!15427 (= lt!30774 (choose!400 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673 (defaultEntry!2167 newMap!16)))))

(assert (=> d!15427 (validMask!0 (mask!6111 newMap!16))))

(assert (=> d!15427 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!11 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673 (defaultEntry!2167 newMap!16)) lt!30774)))

(declare-fun b!69854 () Bool)

(assert (=> b!69854 (= e!45716 (= (+!89 (getCurrentListMap!403 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)) (getCurrentListMap!403 (array!3832 (store (arr!1828 (_keys!3810 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) (size!2065 (_keys!3810 newMap!16))) (array!3834 (store (arr!1829 (_values!2150 newMap!16)) (ite c!9706 (index!3080 lt!29944) (index!3077 lt!29944)) (ValueCellFull!884 lt!29673)) (size!2066 (_values!2150 newMap!16))) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16))))))

(assert (= (and d!15427 res!37433) b!69854))

(assert (=> d!15427 m!63767))

(declare-fun m!66559 () Bool)

(assert (=> d!15427 m!66559))

(assert (=> d!15427 m!64193))

(assert (=> b!69854 m!64565))

(assert (=> b!69854 m!64547))

(assert (=> b!69854 m!64555))

(assert (=> b!69854 m!63945))

(assert (=> b!69854 m!64583))

(assert (=> b!69854 m!63945))

(assert (=> d!14787 d!15427))

(declare-fun b!69873 () Bool)

(declare-fun lt!30779 () SeekEntryResult!237)

(assert (=> b!69873 (and (bvsge (index!3079 lt!30779) #b00000000000000000000000000000000) (bvslt (index!3079 lt!30779) (size!2065 (_keys!3810 newMap!16))))))

(declare-fun e!45727 () Bool)

(assert (=> b!69873 (= e!45727 (= (select (arr!1828 (_keys!3810 newMap!16)) (index!3079 lt!30779)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!45728 () SeekEntryResult!237)

(declare-fun b!69874 () Bool)

(assert (=> b!69874 (= e!45728 (Intermediate!237 false (toIndex!0 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (mask!6111 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!69875 () Bool)

(assert (=> b!69875 (and (bvsge (index!3079 lt!30779) #b00000000000000000000000000000000) (bvslt (index!3079 lt!30779) (size!2065 (_keys!3810 newMap!16))))))

(declare-fun res!37441 () Bool)

(assert (=> b!69875 (= res!37441 (= (select (arr!1828 (_keys!3810 newMap!16)) (index!3079 lt!30779)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))

(assert (=> b!69875 (=> res!37441 e!45727)))

(declare-fun e!45730 () Bool)

(assert (=> b!69875 (= e!45730 e!45727)))

(declare-fun b!69876 () Bool)

(assert (=> b!69876 (and (bvsge (index!3079 lt!30779) #b00000000000000000000000000000000) (bvslt (index!3079 lt!30779) (size!2065 (_keys!3810 newMap!16))))))

(declare-fun res!37440 () Bool)

(assert (=> b!69876 (= res!37440 (= (select (arr!1828 (_keys!3810 newMap!16)) (index!3079 lt!30779)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!69876 (=> res!37440 e!45727)))

(declare-fun e!45729 () SeekEntryResult!237)

(declare-fun b!69877 () Bool)

(assert (=> b!69877 (= e!45729 (Intermediate!237 true (toIndex!0 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (mask!6111 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!69878 () Bool)

(assert (=> b!69878 (= e!45728 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (mask!6111 newMap!16)) #b00000000000000000000000000000000 (mask!6111 newMap!16)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (_keys!3810 newMap!16) (mask!6111 newMap!16)))))

(declare-fun b!69879 () Bool)

(declare-fun e!45731 () Bool)

(assert (=> b!69879 (= e!45731 (bvsge (x!10850 lt!30779) #b01111111111111111111111111111110))))

(declare-fun b!69881 () Bool)

(assert (=> b!69881 (= e!45729 e!45728)))

(declare-fun lt!30780 () (_ BitVec 64))

(declare-fun c!10056 () Bool)

(assert (=> b!69881 (= c!10056 (or (= lt!30780 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) (= (bvadd lt!30780 lt!30780) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!69880 () Bool)

(assert (=> b!69880 (= e!45731 e!45730)))

(declare-fun res!37442 () Bool)

(assert (=> b!69880 (= res!37442 (and ((_ is Intermediate!237) lt!30779) (not (undefined!1049 lt!30779)) (bvslt (x!10850 lt!30779) #b01111111111111111111111111111110) (bvsge (x!10850 lt!30779) #b00000000000000000000000000000000) (bvsge (x!10850 lt!30779) #b00000000000000000000000000000000)))))

(assert (=> b!69880 (=> (not res!37442) (not e!45730))))

(declare-fun d!15429 () Bool)

(assert (=> d!15429 e!45731))

(declare-fun c!10055 () Bool)

(assert (=> d!15429 (= c!10055 (and ((_ is Intermediate!237) lt!30779) (undefined!1049 lt!30779)))))

(assert (=> d!15429 (= lt!30779 e!45729)))

(declare-fun c!10054 () Bool)

(assert (=> d!15429 (= c!10054 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(assert (=> d!15429 (= lt!30780 (select (arr!1828 (_keys!3810 newMap!16)) (toIndex!0 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (mask!6111 newMap!16))))))

(assert (=> d!15429 (validMask!0 (mask!6111 newMap!16))))

(assert (=> d!15429 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (mask!6111 newMap!16)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (_keys!3810 newMap!16) (mask!6111 newMap!16)) lt!30779)))

(assert (= (and d!15429 c!10054) b!69877))

(assert (= (and d!15429 (not c!10054)) b!69881))

(assert (= (and b!69881 c!10056) b!69874))

(assert (= (and b!69881 (not c!10056)) b!69878))

(assert (= (and d!15429 c!10055) b!69879))

(assert (= (and d!15429 (not c!10055)) b!69880))

(assert (= (and b!69880 res!37442) b!69875))

(assert (= (and b!69875 (not res!37441)) b!69876))

(assert (= (and b!69876 (not res!37440)) b!69873))

(assert (=> b!69878 m!64423))

(declare-fun m!66561 () Bool)

(assert (=> b!69878 m!66561))

(assert (=> b!69878 m!66561))

(assert (=> b!69878 m!63767))

(declare-fun m!66563 () Bool)

(assert (=> b!69878 m!66563))

(assert (=> d!15429 m!64423))

(declare-fun m!66565 () Bool)

(assert (=> d!15429 m!66565))

(assert (=> d!15429 m!64193))

(declare-fun m!66567 () Bool)

(assert (=> b!69875 m!66567))

(assert (=> b!69876 m!66567))

(assert (=> b!69873 m!66567))

(assert (=> d!14745 d!15429))

(declare-fun d!15431 () Bool)

(declare-fun lt!30786 () (_ BitVec 32))

(declare-fun lt!30785 () (_ BitVec 32))

(assert (=> d!15431 (= lt!30786 (bvmul (bvxor lt!30785 (bvlshr lt!30785 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!15431 (= lt!30785 ((_ extract 31 0) (bvand (bvxor (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (bvlshr (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!15431 (and (bvsge (mask!6111 newMap!16) #b00000000000000000000000000000000) (let ((res!37443 (let ((h!2056 ((_ extract 31 0) (bvand (bvxor (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (bvlshr (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!10953 (bvmul (bvxor h!2056 (bvlshr h!2056 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!10953 (bvlshr x!10953 #b00000000000000000000000000001101)) (mask!6111 newMap!16)))))) (and (bvslt res!37443 (bvadd (mask!6111 newMap!16) #b00000000000000000000000000000001)) (bvsge res!37443 #b00000000000000000000000000000000))))))

(assert (=> d!15431 (= (toIndex!0 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (mask!6111 newMap!16)) (bvand (bvxor lt!30786 (bvlshr lt!30786 #b00000000000000000000000000001101)) (mask!6111 newMap!16)))))

(assert (=> d!14745 d!15431))

(assert (=> d!14745 d!15017))

(declare-fun d!15433 () Bool)

(assert (=> d!15433 (= ($colon$colon!63 e!45100 (ite c!9775 (h!2051 (toList!708 lt!29682)) (tuple2!2091 (_1!1056 lt!29675) (_2!1056 lt!29675)))) (Cons!1466 (ite c!9775 (h!2051 (toList!708 lt!29682)) (tuple2!2091 (_1!1056 lt!29675) (_2!1056 lt!29675))) e!45100))))

(assert (=> bm!5874 d!15433))

(declare-fun d!15435 () Bool)

(assert (=> d!15435 (= (apply!73 lt!30027 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1129 (getValueByKey!129 (toList!708 lt!30027) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3016 () Bool)

(assert (= bs!3016 d!15435))

(assert (=> bs!3016 m!66153))

(assert (=> bs!3016 m!66153))

(declare-fun m!66569 () Bool)

(assert (=> bs!3016 m!66569))

(assert (=> b!68777 d!15435))

(declare-fun d!15437 () Bool)

(assert (=> d!15437 (= (apply!73 lt!30322 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1129 (getValueByKey!129 (toList!708 lt!30322) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3017 () Bool)

(assert (= bs!3017 d!15437))

(assert (=> bs!3017 m!65799))

(assert (=> bs!3017 m!65799))

(declare-fun m!66571 () Bool)

(assert (=> bs!3017 m!66571))

(assert (=> b!69094 d!15437))

(declare-fun b!69882 () Bool)

(declare-fun res!37446 () Bool)

(declare-fun e!45732 () Bool)

(assert (=> b!69882 (=> (not res!37446) (not e!45732))))

(assert (=> b!69882 (= res!37446 (and (= (size!2066 (_values!2150 (_2!1057 lt!29959))) (bvadd (mask!6111 (_2!1057 lt!29959)) #b00000000000000000000000000000001)) (= (size!2065 (_keys!3810 (_2!1057 lt!29959))) (size!2066 (_values!2150 (_2!1057 lt!29959)))) (bvsge (_size!387 (_2!1057 lt!29959)) #b00000000000000000000000000000000) (bvsle (_size!387 (_2!1057 lt!29959)) (bvadd (mask!6111 (_2!1057 lt!29959)) #b00000000000000000000000000000001))))))

(declare-fun d!15439 () Bool)

(declare-fun res!37447 () Bool)

(assert (=> d!15439 (=> (not res!37447) (not e!45732))))

(assert (=> d!15439 (= res!37447 (validMask!0 (mask!6111 (_2!1057 lt!29959))))))

(assert (=> d!15439 (= (simpleValid!49 (_2!1057 lt!29959)) e!45732)))

(declare-fun b!69885 () Bool)

(assert (=> b!69885 (= e!45732 (and (bvsge (extraKeys!2034 (_2!1057 lt!29959)) #b00000000000000000000000000000000) (bvsle (extraKeys!2034 (_2!1057 lt!29959)) #b00000000000000000000000000000011) (bvsge (_vacant!387 (_2!1057 lt!29959)) #b00000000000000000000000000000000)))))

(declare-fun b!69884 () Bool)

(declare-fun res!37445 () Bool)

(assert (=> b!69884 (=> (not res!37445) (not e!45732))))

(assert (=> b!69884 (= res!37445 (= (size!2071 (_2!1057 lt!29959)) (bvadd (_size!387 (_2!1057 lt!29959)) (bvsdiv (bvadd (extraKeys!2034 (_2!1057 lt!29959)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!69883 () Bool)

(declare-fun res!37444 () Bool)

(assert (=> b!69883 (=> (not res!37444) (not e!45732))))

(assert (=> b!69883 (= res!37444 (bvsge (size!2071 (_2!1057 lt!29959)) (_size!387 (_2!1057 lt!29959))))))

(assert (= (and d!15439 res!37447) b!69882))

(assert (= (and b!69882 res!37446) b!69883))

(assert (= (and b!69883 res!37444) b!69884))

(assert (= (and b!69884 res!37445) b!69885))

(declare-fun m!66573 () Bool)

(assert (=> d!15439 m!66573))

(declare-fun m!66575 () Bool)

(assert (=> b!69884 m!66575))

(assert (=> b!69883 m!66575))

(assert (=> d!14743 d!15439))

(declare-fun d!15441 () Bool)

(declare-fun lt!30787 () Bool)

(assert (=> d!15441 (= lt!30787 (select (content!73 lt!30351) (tuple2!2091 (_1!1056 lt!29680) (_2!1056 lt!29680))))))

(declare-fun e!45734 () Bool)

(assert (=> d!15441 (= lt!30787 e!45734)))

(declare-fun res!37449 () Bool)

(assert (=> d!15441 (=> (not res!37449) (not e!45734))))

(assert (=> d!15441 (= res!37449 ((_ is Cons!1466) lt!30351))))

(assert (=> d!15441 (= (contains!711 lt!30351 (tuple2!2091 (_1!1056 lt!29680) (_2!1056 lt!29680))) lt!30787)))

(declare-fun b!69886 () Bool)

(declare-fun e!45733 () Bool)

(assert (=> b!69886 (= e!45734 e!45733)))

(declare-fun res!37448 () Bool)

(assert (=> b!69886 (=> res!37448 e!45733)))

(assert (=> b!69886 (= res!37448 (= (h!2051 lt!30351) (tuple2!2091 (_1!1056 lt!29680) (_2!1056 lt!29680))))))

(declare-fun b!69887 () Bool)

(assert (=> b!69887 (= e!45733 (contains!711 (t!4964 lt!30351) (tuple2!2091 (_1!1056 lt!29680) (_2!1056 lt!29680))))))

(assert (= (and d!15441 res!37449) b!69886))

(assert (= (and b!69886 (not res!37448)) b!69887))

(declare-fun m!66577 () Bool)

(assert (=> d!15441 m!66577))

(declare-fun m!66579 () Bool)

(assert (=> d!15441 m!66579))

(declare-fun m!66581 () Bool)

(assert (=> b!69887 m!66581))

(assert (=> b!69138 d!15441))

(declare-fun b!69890 () Bool)

(declare-fun e!45736 () Option!135)

(assert (=> b!69890 (= e!45736 (getValueByKey!129 (t!4964 (t!4964 (toList!708 lt!29868))) (_1!1056 lt!29680)))))

(declare-fun b!69888 () Bool)

(declare-fun e!45735 () Option!135)

(assert (=> b!69888 (= e!45735 (Some!134 (_2!1056 (h!2051 (t!4964 (toList!708 lt!29868))))))))

(declare-fun b!69891 () Bool)

(assert (=> b!69891 (= e!45736 None!133)))

(declare-fun d!15443 () Bool)

(declare-fun c!10057 () Bool)

(assert (=> d!15443 (= c!10057 (and ((_ is Cons!1466) (t!4964 (toList!708 lt!29868))) (= (_1!1056 (h!2051 (t!4964 (toList!708 lt!29868)))) (_1!1056 lt!29680))))))

(assert (=> d!15443 (= (getValueByKey!129 (t!4964 (toList!708 lt!29868)) (_1!1056 lt!29680)) e!45735)))

(declare-fun b!69889 () Bool)

(assert (=> b!69889 (= e!45735 e!45736)))

(declare-fun c!10058 () Bool)

(assert (=> b!69889 (= c!10058 (and ((_ is Cons!1466) (t!4964 (toList!708 lt!29868))) (not (= (_1!1056 (h!2051 (t!4964 (toList!708 lt!29868)))) (_1!1056 lt!29680)))))))

(assert (= (and d!15443 c!10057) b!69888))

(assert (= (and d!15443 (not c!10057)) b!69889))

(assert (= (and b!69889 c!10058) b!69890))

(assert (= (and b!69889 (not c!10058)) b!69891))

(declare-fun m!66583 () Bool)

(assert (=> b!69890 m!66583))

(assert (=> b!68866 d!15443))

(assert (=> b!68984 d!14925))

(assert (=> d!14899 d!14897))

(declare-fun d!15445 () Bool)

(assert (=> d!15445 (= (getValueByKey!129 lt!29851 (_1!1056 lt!29680)) (Some!134 (_2!1056 lt!29680)))))

(assert (=> d!15445 true))

(declare-fun _$22!375 () Unit!1898)

(assert (=> d!15445 (= (choose!390 lt!29851 (_1!1056 lt!29680) (_2!1056 lt!29680)) _$22!375)))

(declare-fun bs!3018 () Bool)

(assert (= bs!3018 d!15445))

(assert (=> bs!3018 m!64027))

(assert (=> d!14899 d!15445))

(declare-fun d!15447 () Bool)

(declare-fun res!37450 () Bool)

(declare-fun e!45737 () Bool)

(assert (=> d!15447 (=> res!37450 e!45737)))

(assert (=> d!15447 (= res!37450 (or ((_ is Nil!1467) lt!29851) ((_ is Nil!1467) (t!4964 lt!29851))))))

(assert (=> d!15447 (= (isStrictlySorted!285 lt!29851) e!45737)))

(declare-fun b!69892 () Bool)

(declare-fun e!45738 () Bool)

(assert (=> b!69892 (= e!45737 e!45738)))

(declare-fun res!37451 () Bool)

(assert (=> b!69892 (=> (not res!37451) (not e!45738))))

(assert (=> b!69892 (= res!37451 (bvslt (_1!1056 (h!2051 lt!29851)) (_1!1056 (h!2051 (t!4964 lt!29851)))))))

(declare-fun b!69893 () Bool)

(assert (=> b!69893 (= e!45738 (isStrictlySorted!285 (t!4964 lt!29851)))))

(assert (= (and d!15447 (not res!37450)) b!69892))

(assert (= (and b!69892 res!37451) b!69893))

(declare-fun m!66585 () Bool)

(assert (=> b!69893 m!66585))

(assert (=> d!14899 d!15447))

(assert (=> b!68749 d!14925))

(assert (=> d!14813 d!14745))

(declare-fun d!15449 () Bool)

(declare-fun e!45741 () Bool)

(assert (=> d!15449 e!45741))

(declare-fun res!37456 () Bool)

(assert (=> d!15449 (=> (not res!37456) (not e!45741))))

(declare-fun lt!30790 () SeekEntryResult!237)

(assert (=> d!15449 (= res!37456 ((_ is Found!237) lt!30790))))

(assert (=> d!15449 (= lt!30790 (seekEntryOrOpen!0 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (_keys!3810 newMap!16) (mask!6111 newMap!16)))))

(assert (=> d!15449 true))

(declare-fun _$33!54 () Unit!1898)

(assert (=> d!15449 (= (choose!395 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (defaultEntry!2167 newMap!16)) _$33!54)))

(declare-fun b!69898 () Bool)

(declare-fun res!37457 () Bool)

(assert (=> b!69898 (=> (not res!37457) (not e!45741))))

(assert (=> b!69898 (= res!37457 (inRange!0 (index!3078 lt!30790) (mask!6111 newMap!16)))))

(declare-fun b!69899 () Bool)

(assert (=> b!69899 (= e!45741 (= (select (arr!1828 (_keys!3810 newMap!16)) (index!3078 lt!30790)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))

(assert (= (and d!15449 res!37456) b!69898))

(assert (= (and b!69898 res!37457) b!69899))

(assert (=> d!15449 m!63767))

(assert (=> d!15449 m!64121))

(declare-fun m!66587 () Bool)

(assert (=> b!69898 m!66587))

(declare-fun m!66589 () Bool)

(assert (=> b!69899 m!66589))

(assert (=> d!14813 d!15449))

(assert (=> d!14813 d!15017))

(declare-fun e!45743 () Option!135)

(declare-fun b!69902 () Bool)

(assert (=> b!69902 (= e!45743 (getValueByKey!129 (t!4964 (toList!708 lt!30080)) (_1!1056 (ite c!9716 (ite c!9712 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))))))

(declare-fun b!69900 () Bool)

(declare-fun e!45742 () Option!135)

(assert (=> b!69900 (= e!45742 (Some!134 (_2!1056 (h!2051 (toList!708 lt!30080)))))))

(declare-fun b!69903 () Bool)

(assert (=> b!69903 (= e!45743 None!133)))

(declare-fun c!10059 () Bool)

(declare-fun d!15451 () Bool)

(assert (=> d!15451 (= c!10059 (and ((_ is Cons!1466) (toList!708 lt!30080)) (= (_1!1056 (h!2051 (toList!708 lt!30080))) (_1!1056 (ite c!9716 (ite c!9712 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))))

(assert (=> d!15451 (= (getValueByKey!129 (toList!708 lt!30080) (_1!1056 (ite c!9716 (ite c!9712 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))) e!45742)))

(declare-fun b!69901 () Bool)

(assert (=> b!69901 (= e!45742 e!45743)))

(declare-fun c!10060 () Bool)

(assert (=> b!69901 (= c!10060 (and ((_ is Cons!1466) (toList!708 lt!30080)) (not (= (_1!1056 (h!2051 (toList!708 lt!30080))) (_1!1056 (ite c!9716 (ite c!9712 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29673) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29673)) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))))))))

(assert (= (and d!15451 c!10059) b!69900))

(assert (= (and d!15451 (not c!10059)) b!69901))

(assert (= (and b!69901 c!10060) b!69902))

(assert (= (and b!69901 (not c!10060)) b!69903))

(declare-fun m!66591 () Bool)

(assert (=> b!69902 m!66591))

(assert (=> b!68822 d!15451))

(declare-fun d!15453 () Bool)

(declare-fun lt!30791 () Bool)

(assert (=> d!15453 (= lt!30791 (select (content!73 (t!4964 (toList!708 lt!29853))) lt!29680))))

(declare-fun e!45745 () Bool)

(assert (=> d!15453 (= lt!30791 e!45745)))

(declare-fun res!37459 () Bool)

(assert (=> d!15453 (=> (not res!37459) (not e!45745))))

(assert (=> d!15453 (= res!37459 ((_ is Cons!1466) (t!4964 (toList!708 lt!29853))))))

(assert (=> d!15453 (= (contains!711 (t!4964 (toList!708 lt!29853)) lt!29680) lt!30791)))

(declare-fun b!69904 () Bool)

(declare-fun e!45744 () Bool)

(assert (=> b!69904 (= e!45745 e!45744)))

(declare-fun res!37458 () Bool)

(assert (=> b!69904 (=> res!37458 e!45744)))

(assert (=> b!69904 (= res!37458 (= (h!2051 (t!4964 (toList!708 lt!29853))) lt!29680))))

(declare-fun b!69905 () Bool)

(assert (=> b!69905 (= e!45744 (contains!711 (t!4964 (t!4964 (toList!708 lt!29853))) lt!29680))))

(assert (= (and d!15453 res!37459) b!69904))

(assert (= (and b!69904 (not res!37458)) b!69905))

(assert (=> d!15453 m!66135))

(declare-fun m!66593 () Bool)

(assert (=> d!15453 m!66593))

(declare-fun m!66595 () Bool)

(assert (=> b!69905 m!66595))

(assert (=> b!68790 d!15453))

(assert (=> bm!5887 d!14819))

(declare-fun d!15455 () Bool)

(declare-fun e!45747 () Bool)

(assert (=> d!15455 e!45747))

(declare-fun res!37460 () Bool)

(assert (=> d!15455 (=> res!37460 e!45747)))

(declare-fun lt!30795 () Bool)

(assert (=> d!15455 (= res!37460 (not lt!30795))))

(declare-fun lt!30794 () Bool)

(assert (=> d!15455 (= lt!30795 lt!30794)))

(declare-fun lt!30793 () Unit!1898)

(declare-fun e!45746 () Unit!1898)

(assert (=> d!15455 (= lt!30793 e!45746)))

(declare-fun c!10061 () Bool)

(assert (=> d!15455 (= c!10061 lt!30794)))

(assert (=> d!15455 (= lt!30794 (containsKey!133 (toList!708 lt!30280) (_1!1056 (tuple2!2091 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(assert (=> d!15455 (= (contains!709 lt!30280 (_1!1056 (tuple2!2091 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))) lt!30795)))

(declare-fun b!69906 () Bool)

(declare-fun lt!30792 () Unit!1898)

(assert (=> b!69906 (= e!45746 lt!30792)))

(assert (=> b!69906 (= lt!30792 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 lt!30280) (_1!1056 (tuple2!2091 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(assert (=> b!69906 (isDefined!83 (getValueByKey!129 (toList!708 lt!30280) (_1!1056 (tuple2!2091 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(declare-fun b!69907 () Bool)

(declare-fun Unit!1960 () Unit!1898)

(assert (=> b!69907 (= e!45746 Unit!1960)))

(declare-fun b!69908 () Bool)

(assert (=> b!69908 (= e!45747 (isDefined!83 (getValueByKey!129 (toList!708 lt!30280) (_1!1056 (tuple2!2091 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(assert (= (and d!15455 c!10061) b!69906))

(assert (= (and d!15455 (not c!10061)) b!69907))

(assert (= (and d!15455 (not res!37460)) b!69908))

(declare-fun m!66597 () Bool)

(assert (=> d!15455 m!66597))

(declare-fun m!66599 () Bool)

(assert (=> b!69906 m!66599))

(assert (=> b!69906 m!64803))

(assert (=> b!69906 m!64803))

(declare-fun m!66601 () Bool)

(assert (=> b!69906 m!66601))

(assert (=> b!69908 m!64803))

(assert (=> b!69908 m!64803))

(assert (=> b!69908 m!66601))

(assert (=> d!14839 d!15455))

(declare-fun e!45749 () Option!135)

(declare-fun b!69911 () Bool)

(assert (=> b!69911 (= e!45749 (getValueByKey!129 (t!4964 lt!30278) (_1!1056 (tuple2!2091 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(declare-fun b!69909 () Bool)

(declare-fun e!45748 () Option!135)

(assert (=> b!69909 (= e!45748 (Some!134 (_2!1056 (h!2051 lt!30278))))))

(declare-fun b!69912 () Bool)

(assert (=> b!69912 (= e!45749 None!133)))

(declare-fun d!15457 () Bool)

(declare-fun c!10062 () Bool)

(assert (=> d!15457 (= c!10062 (and ((_ is Cons!1466) lt!30278) (= (_1!1056 (h!2051 lt!30278)) (_1!1056 (tuple2!2091 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(assert (=> d!15457 (= (getValueByKey!129 lt!30278 (_1!1056 (tuple2!2091 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))) e!45748)))

(declare-fun b!69910 () Bool)

(assert (=> b!69910 (= e!45748 e!45749)))

(declare-fun c!10063 () Bool)

(assert (=> b!69910 (= c!10063 (and ((_ is Cons!1466) lt!30278) (not (= (_1!1056 (h!2051 lt!30278)) (_1!1056 (tuple2!2091 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))))

(assert (= (and d!15457 c!10062) b!69909))

(assert (= (and d!15457 (not c!10062)) b!69910))

(assert (= (and b!69910 c!10063) b!69911))

(assert (= (and b!69910 (not c!10063)) b!69912))

(declare-fun m!66603 () Bool)

(assert (=> b!69911 m!66603))

(assert (=> d!14839 d!15457))

(declare-fun d!15459 () Bool)

(assert (=> d!15459 (= (getValueByKey!129 lt!30278 (_1!1056 (tuple2!2091 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))) (Some!134 (_2!1056 (tuple2!2091 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(declare-fun lt!30796 () Unit!1898)

(assert (=> d!15459 (= lt!30796 (choose!390 lt!30278 (_1!1056 (tuple2!2091 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992))))) (_2!1056 (tuple2!2091 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(declare-fun e!45750 () Bool)

(assert (=> d!15459 e!45750))

(declare-fun res!37461 () Bool)

(assert (=> d!15459 (=> (not res!37461) (not e!45750))))

(assert (=> d!15459 (= res!37461 (isStrictlySorted!285 lt!30278))))

(assert (=> d!15459 (= (lemmaContainsTupThenGetReturnValue!49 lt!30278 (_1!1056 (tuple2!2091 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992))))) (_2!1056 (tuple2!2091 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))) lt!30796)))

(declare-fun b!69913 () Bool)

(declare-fun res!37462 () Bool)

(assert (=> b!69913 (=> (not res!37462) (not e!45750))))

(assert (=> b!69913 (= res!37462 (containsKey!133 lt!30278 (_1!1056 (tuple2!2091 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(declare-fun b!69914 () Bool)

(assert (=> b!69914 (= e!45750 (contains!711 lt!30278 (tuple2!2091 (_1!1056 (tuple2!2091 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992))))) (_2!1056 (tuple2!2091 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(assert (= (and d!15459 res!37461) b!69913))

(assert (= (and b!69913 res!37462) b!69914))

(assert (=> d!15459 m!64797))

(declare-fun m!66605 () Bool)

(assert (=> d!15459 m!66605))

(declare-fun m!66607 () Bool)

(assert (=> d!15459 m!66607))

(declare-fun m!66609 () Bool)

(assert (=> b!69913 m!66609))

(declare-fun m!66611 () Bool)

(assert (=> b!69914 m!66611))

(assert (=> d!14839 d!15459))

(declare-fun b!69915 () Bool)

(declare-fun e!45754 () List!1470)

(declare-fun call!5991 () List!1470)

(assert (=> b!69915 (= e!45754 call!5991)))

(declare-fun c!10064 () Bool)

(declare-fun b!69916 () Bool)

(assert (=> b!69916 (= c!10064 (and ((_ is Cons!1466) (toList!708 lt!29818)) (bvsgt (_1!1056 (h!2051 (toList!708 lt!29818))) (_1!1056 (tuple2!2091 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(declare-fun e!45752 () List!1470)

(assert (=> b!69916 (= e!45752 e!45754)))

(declare-fun b!69917 () Bool)

(assert (=> b!69917 (= e!45754 call!5991)))

(declare-fun b!69919 () Bool)

(declare-fun call!5990 () List!1470)

(assert (=> b!69919 (= e!45752 call!5990)))

(declare-fun bm!5987 () Bool)

(declare-fun call!5992 () List!1470)

(assert (=> bm!5987 (= call!5990 call!5992)))

(declare-fun bm!5988 () Bool)

(assert (=> bm!5988 (= call!5991 call!5990)))

(declare-fun b!69920 () Bool)

(declare-fun e!45751 () List!1470)

(assert (=> b!69920 (= e!45751 e!45752)))

(declare-fun c!10065 () Bool)

(assert (=> b!69920 (= c!10065 (and ((_ is Cons!1466) (toList!708 lt!29818)) (= (_1!1056 (h!2051 (toList!708 lt!29818))) (_1!1056 (tuple2!2091 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(declare-fun e!45753 () List!1470)

(declare-fun bm!5989 () Bool)

(declare-fun c!10067 () Bool)

(assert (=> bm!5989 (= call!5992 ($colon$colon!63 e!45753 (ite c!10067 (h!2051 (toList!708 lt!29818)) (tuple2!2091 (_1!1056 (tuple2!2091 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992))))) (_2!1056 (tuple2!2091 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))))

(declare-fun c!10066 () Bool)

(assert (=> bm!5989 (= c!10066 c!10067)))

(declare-fun b!69921 () Bool)

(declare-fun res!37464 () Bool)

(declare-fun e!45755 () Bool)

(assert (=> b!69921 (=> (not res!37464) (not e!45755))))

(declare-fun lt!30797 () List!1470)

(assert (=> b!69921 (= res!37464 (containsKey!133 lt!30797 (_1!1056 (tuple2!2091 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(declare-fun b!69922 () Bool)

(assert (=> b!69922 (= e!45755 (contains!711 lt!30797 (tuple2!2091 (_1!1056 (tuple2!2091 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992))))) (_2!1056 (tuple2!2091 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(declare-fun b!69923 () Bool)

(assert (=> b!69923 (= e!45753 (ite c!10065 (t!4964 (toList!708 lt!29818)) (ite c!10064 (Cons!1466 (h!2051 (toList!708 lt!29818)) (t!4964 (toList!708 lt!29818))) Nil!1467)))))

(declare-fun b!69924 () Bool)

(assert (=> b!69924 (= e!45751 call!5992)))

(declare-fun d!15461 () Bool)

(assert (=> d!15461 e!45755))

(declare-fun res!37463 () Bool)

(assert (=> d!15461 (=> (not res!37463) (not e!45755))))

(assert (=> d!15461 (= res!37463 (isStrictlySorted!285 lt!30797))))

(assert (=> d!15461 (= lt!30797 e!45751)))

(assert (=> d!15461 (= c!10067 (and ((_ is Cons!1466) (toList!708 lt!29818)) (bvslt (_1!1056 (h!2051 (toList!708 lt!29818))) (_1!1056 (tuple2!2091 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(assert (=> d!15461 (isStrictlySorted!285 (toList!708 lt!29818))))

(assert (=> d!15461 (= (insertStrictlySorted!52 (toList!708 lt!29818) (_1!1056 (tuple2!2091 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992))))) (_2!1056 (tuple2!2091 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))) lt!30797)))

(declare-fun b!69918 () Bool)

(assert (=> b!69918 (= e!45753 (insertStrictlySorted!52 (t!4964 (toList!708 lt!29818)) (_1!1056 (tuple2!2091 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992))))) (_2!1056 (tuple2!2091 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(assert (= (and d!15461 c!10067) b!69924))

(assert (= (and d!15461 (not c!10067)) b!69920))

(assert (= (and b!69920 c!10065) b!69919))

(assert (= (and b!69920 (not c!10065)) b!69916))

(assert (= (and b!69916 c!10064) b!69917))

(assert (= (and b!69916 (not c!10064)) b!69915))

(assert (= (or b!69917 b!69915) bm!5988))

(assert (= (or b!69919 bm!5988) bm!5987))

(assert (= (or b!69924 bm!5987) bm!5989))

(assert (= (and bm!5989 c!10066) b!69918))

(assert (= (and bm!5989 (not c!10066)) b!69923))

(assert (= (and d!15461 res!37463) b!69921))

(assert (= (and b!69921 res!37464) b!69922))

(declare-fun m!66613 () Bool)

(assert (=> d!15461 m!66613))

(declare-fun m!66615 () Bool)

(assert (=> d!15461 m!66615))

(declare-fun m!66617 () Bool)

(assert (=> b!69922 m!66617))

(declare-fun m!66619 () Bool)

(assert (=> b!69921 m!66619))

(declare-fun m!66621 () Bool)

(assert (=> bm!5989 m!66621))

(declare-fun m!66623 () Bool)

(assert (=> b!69918 m!66623))

(assert (=> d!14839 d!15461))

(declare-fun d!15463 () Bool)

(declare-fun e!45757 () Bool)

(assert (=> d!15463 e!45757))

(declare-fun res!37465 () Bool)

(assert (=> d!15463 (=> res!37465 e!45757)))

(declare-fun lt!30801 () Bool)

(assert (=> d!15463 (= res!37465 (not lt!30801))))

(declare-fun lt!30800 () Bool)

(assert (=> d!15463 (= lt!30801 lt!30800)))

(declare-fun lt!30799 () Unit!1898)

(declare-fun e!45756 () Unit!1898)

(assert (=> d!15463 (= lt!30799 e!45756)))

(declare-fun c!10068 () Bool)

(assert (=> d!15463 (= c!10068 lt!30800)))

(assert (=> d!15463 (= lt!30800 (containsKey!133 (toList!708 lt!30066) (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(assert (=> d!15463 (= (contains!709 lt!30066 (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))) lt!30801)))

(declare-fun b!69925 () Bool)

(declare-fun lt!30798 () Unit!1898)

(assert (=> b!69925 (= e!45756 lt!30798)))

(assert (=> b!69925 (= lt!30798 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 lt!30066) (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(assert (=> b!69925 (isDefined!83 (getValueByKey!129 (toList!708 lt!30066) (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(declare-fun b!69926 () Bool)

(declare-fun Unit!1961 () Unit!1898)

(assert (=> b!69926 (= e!45756 Unit!1961)))

(declare-fun b!69927 () Bool)

(assert (=> b!69927 (= e!45757 (isDefined!83 (getValueByKey!129 (toList!708 lt!30066) (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(assert (= (and d!15463 c!10068) b!69925))

(assert (= (and d!15463 (not c!10068)) b!69926))

(assert (= (and d!15463 (not res!37465)) b!69927))

(declare-fun m!66625 () Bool)

(assert (=> d!15463 m!66625))

(declare-fun m!66627 () Bool)

(assert (=> b!69925 m!66627))

(assert (=> b!69925 m!64407))

(assert (=> b!69925 m!64407))

(declare-fun m!66629 () Bool)

(assert (=> b!69925 m!66629))

(assert (=> b!69927 m!64407))

(assert (=> b!69927 m!64407))

(assert (=> b!69927 m!66629))

(assert (=> d!14737 d!15463))

(declare-fun b!69930 () Bool)

(declare-fun e!45759 () Option!135)

(assert (=> b!69930 (= e!45759 (getValueByKey!129 (t!4964 lt!30064) (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(declare-fun b!69928 () Bool)

(declare-fun e!45758 () Option!135)

(assert (=> b!69928 (= e!45758 (Some!134 (_2!1056 (h!2051 lt!30064))))))

(declare-fun b!69931 () Bool)

(assert (=> b!69931 (= e!45759 None!133)))

(declare-fun d!15465 () Bool)

(declare-fun c!10069 () Bool)

(assert (=> d!15465 (= c!10069 (and ((_ is Cons!1466) lt!30064) (= (_1!1056 (h!2051 lt!30064)) (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(assert (=> d!15465 (= (getValueByKey!129 lt!30064 (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))) e!45758)))

(declare-fun b!69929 () Bool)

(assert (=> b!69929 (= e!45758 e!45759)))

(declare-fun c!10070 () Bool)

(assert (=> b!69929 (= c!10070 (and ((_ is Cons!1466) lt!30064) (not (= (_1!1056 (h!2051 lt!30064)) (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))))

(assert (= (and d!15465 c!10069) b!69928))

(assert (= (and d!15465 (not c!10069)) b!69929))

(assert (= (and b!69929 c!10070) b!69930))

(assert (= (and b!69929 (not c!10070)) b!69931))

(declare-fun m!66631 () Bool)

(assert (=> b!69930 m!66631))

(assert (=> d!14737 d!15465))

(declare-fun d!15467 () Bool)

(assert (=> d!15467 (= (getValueByKey!129 lt!30064 (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))) (Some!134 (_2!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(declare-fun lt!30802 () Unit!1898)

(assert (=> d!15467 (= lt!30802 (choose!390 lt!30064 (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))) (_2!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(declare-fun e!45760 () Bool)

(assert (=> d!15467 e!45760))

(declare-fun res!37466 () Bool)

(assert (=> d!15467 (=> (not res!37466) (not e!45760))))

(assert (=> d!15467 (= res!37466 (isStrictlySorted!285 lt!30064))))

(assert (=> d!15467 (= (lemmaContainsTupThenGetReturnValue!49 lt!30064 (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))) (_2!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))) lt!30802)))

(declare-fun b!69932 () Bool)

(declare-fun res!37467 () Bool)

(assert (=> b!69932 (=> (not res!37467) (not e!45760))))

(assert (=> b!69932 (= res!37467 (containsKey!133 lt!30064 (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(declare-fun b!69933 () Bool)

(assert (=> b!69933 (= e!45760 (contains!711 lt!30064 (tuple2!2091 (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))) (_2!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(assert (= (and d!15467 res!37466) b!69932))

(assert (= (and b!69932 res!37467) b!69933))

(assert (=> d!15467 m!64401))

(declare-fun m!66633 () Bool)

(assert (=> d!15467 m!66633))

(declare-fun m!66635 () Bool)

(assert (=> d!15467 m!66635))

(declare-fun m!66637 () Bool)

(assert (=> b!69932 m!66637))

(declare-fun m!66639 () Bool)

(assert (=> b!69933 m!66639))

(assert (=> d!14737 d!15467))

(declare-fun b!69934 () Bool)

(declare-fun e!45764 () List!1470)

(declare-fun call!5994 () List!1470)

(assert (=> b!69934 (= e!45764 call!5994)))

(declare-fun b!69935 () Bool)

(declare-fun c!10071 () Bool)

(assert (=> b!69935 (= c!10071 (and ((_ is Cons!1466) (toList!708 lt!29682)) (bvsgt (_1!1056 (h!2051 (toList!708 lt!29682))) (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(declare-fun e!45762 () List!1470)

(assert (=> b!69935 (= e!45762 e!45764)))

(declare-fun b!69936 () Bool)

(assert (=> b!69936 (= e!45764 call!5994)))

(declare-fun b!69938 () Bool)

(declare-fun call!5993 () List!1470)

(assert (=> b!69938 (= e!45762 call!5993)))

(declare-fun bm!5990 () Bool)

(declare-fun call!5995 () List!1470)

(assert (=> bm!5990 (= call!5993 call!5995)))

(declare-fun bm!5991 () Bool)

(assert (=> bm!5991 (= call!5994 call!5993)))

(declare-fun b!69939 () Bool)

(declare-fun e!45761 () List!1470)

(assert (=> b!69939 (= e!45761 e!45762)))

(declare-fun c!10072 () Bool)

(assert (=> b!69939 (= c!10072 (and ((_ is Cons!1466) (toList!708 lt!29682)) (= (_1!1056 (h!2051 (toList!708 lt!29682))) (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(declare-fun bm!5992 () Bool)

(declare-fun c!10074 () Bool)

(declare-fun e!45763 () List!1470)

(assert (=> bm!5992 (= call!5995 ($colon$colon!63 e!45763 (ite c!10074 (h!2051 (toList!708 lt!29682)) (tuple2!2091 (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))) (_2!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))))

(declare-fun c!10073 () Bool)

(assert (=> bm!5992 (= c!10073 c!10074)))

(declare-fun b!69940 () Bool)

(declare-fun res!37469 () Bool)

(declare-fun e!45765 () Bool)

(assert (=> b!69940 (=> (not res!37469) (not e!45765))))

(declare-fun lt!30803 () List!1470)

(assert (=> b!69940 (= res!37469 (containsKey!133 lt!30803 (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(declare-fun b!69941 () Bool)

(assert (=> b!69941 (= e!45765 (contains!711 lt!30803 (tuple2!2091 (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))) (_2!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(declare-fun b!69942 () Bool)

(assert (=> b!69942 (= e!45763 (ite c!10072 (t!4964 (toList!708 lt!29682)) (ite c!10071 (Cons!1466 (h!2051 (toList!708 lt!29682)) (t!4964 (toList!708 lt!29682))) Nil!1467)))))

(declare-fun b!69943 () Bool)

(assert (=> b!69943 (= e!45761 call!5995)))

(declare-fun d!15469 () Bool)

(assert (=> d!15469 e!45765))

(declare-fun res!37468 () Bool)

(assert (=> d!15469 (=> (not res!37468) (not e!45765))))

(assert (=> d!15469 (= res!37468 (isStrictlySorted!285 lt!30803))))

(assert (=> d!15469 (= lt!30803 e!45761)))

(assert (=> d!15469 (= c!10074 (and ((_ is Cons!1466) (toList!708 lt!29682)) (bvslt (_1!1056 (h!2051 (toList!708 lt!29682))) (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(assert (=> d!15469 (isStrictlySorted!285 (toList!708 lt!29682))))

(assert (=> d!15469 (= (insertStrictlySorted!52 (toList!708 lt!29682) (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))) (_2!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))) lt!30803)))

(declare-fun b!69937 () Bool)

(assert (=> b!69937 (= e!45763 (insertStrictlySorted!52 (t!4964 (toList!708 lt!29682)) (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))) (_2!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(assert (= (and d!15469 c!10074) b!69943))

(assert (= (and d!15469 (not c!10074)) b!69939))

(assert (= (and b!69939 c!10072) b!69938))

(assert (= (and b!69939 (not c!10072)) b!69935))

(assert (= (and b!69935 c!10071) b!69936))

(assert (= (and b!69935 (not c!10071)) b!69934))

(assert (= (or b!69936 b!69934) bm!5991))

(assert (= (or b!69938 bm!5991) bm!5990))

(assert (= (or b!69943 bm!5990) bm!5992))

(assert (= (and bm!5992 c!10073) b!69937))

(assert (= (and bm!5992 (not c!10073)) b!69942))

(assert (= (and d!15469 res!37468) b!69940))

(assert (= (and b!69940 res!37469) b!69941))

(declare-fun m!66641 () Bool)

(assert (=> d!15469 m!66641))

(assert (=> d!15469 m!64481))

(declare-fun m!66643 () Bool)

(assert (=> b!69941 m!66643))

(declare-fun m!66645 () Bool)

(assert (=> b!69940 m!66645))

(declare-fun m!66647 () Bool)

(assert (=> bm!5992 m!66647))

(declare-fun m!66649 () Bool)

(assert (=> b!69937 m!66649))

(assert (=> d!14737 d!15469))

(declare-fun d!15471 () Bool)

(declare-fun lt!30804 () Bool)

(assert (=> d!15471 (= lt!30804 (select (content!73 lt!29855) (tuple2!2091 (_1!1056 lt!29675) (_2!1056 lt!29675))))))

(declare-fun e!45767 () Bool)

(assert (=> d!15471 (= lt!30804 e!45767)))

(declare-fun res!37471 () Bool)

(assert (=> d!15471 (=> (not res!37471) (not e!45767))))

(assert (=> d!15471 (= res!37471 ((_ is Cons!1466) lt!29855))))

(assert (=> d!15471 (= (contains!711 lt!29855 (tuple2!2091 (_1!1056 lt!29675) (_2!1056 lt!29675))) lt!30804)))

(declare-fun b!69944 () Bool)

(declare-fun e!45766 () Bool)

(assert (=> b!69944 (= e!45767 e!45766)))

(declare-fun res!37470 () Bool)

(assert (=> b!69944 (=> res!37470 e!45766)))

(assert (=> b!69944 (= res!37470 (= (h!2051 lt!29855) (tuple2!2091 (_1!1056 lt!29675) (_2!1056 lt!29675))))))

(declare-fun b!69945 () Bool)

(assert (=> b!69945 (= e!45766 (contains!711 (t!4964 lt!29855) (tuple2!2091 (_1!1056 lt!29675) (_2!1056 lt!29675))))))

(assert (= (and d!15471 res!37471) b!69944))

(assert (= (and b!69944 (not res!37470)) b!69945))

(declare-fun m!66651 () Bool)

(assert (=> d!15471 m!66651))

(declare-fun m!66653 () Bool)

(assert (=> d!15471 m!66653))

(declare-fun m!66655 () Bool)

(assert (=> b!69945 m!66655))

(assert (=> b!68841 d!15471))

(declare-fun d!15473 () Bool)

(declare-fun res!37472 () Bool)

(declare-fun e!45768 () Bool)

(assert (=> d!15473 (=> res!37472 e!45768)))

(assert (=> d!15473 (= res!37472 (and ((_ is Cons!1466) (toList!708 lt!29861)) (= (_1!1056 (h!2051 (toList!708 lt!29861))) (_1!1056 lt!29675))))))

(assert (=> d!15473 (= (containsKey!133 (toList!708 lt!29861) (_1!1056 lt!29675)) e!45768)))

(declare-fun b!69946 () Bool)

(declare-fun e!45769 () Bool)

(assert (=> b!69946 (= e!45768 e!45769)))

(declare-fun res!37473 () Bool)

(assert (=> b!69946 (=> (not res!37473) (not e!45769))))

(assert (=> b!69946 (= res!37473 (and (or (not ((_ is Cons!1466) (toList!708 lt!29861))) (bvsle (_1!1056 (h!2051 (toList!708 lt!29861))) (_1!1056 lt!29675))) ((_ is Cons!1466) (toList!708 lt!29861)) (bvslt (_1!1056 (h!2051 (toList!708 lt!29861))) (_1!1056 lt!29675))))))

(declare-fun b!69947 () Bool)

(assert (=> b!69947 (= e!45769 (containsKey!133 (t!4964 (toList!708 lt!29861)) (_1!1056 lt!29675)))))

(assert (= (and d!15473 (not res!37472)) b!69946))

(assert (= (and b!69946 res!37473) b!69947))

(declare-fun m!66657 () Bool)

(assert (=> b!69947 m!66657))

(assert (=> d!14793 d!15473))

(declare-fun d!15475 () Bool)

(assert (=> d!15475 (= (validKeyInArray!0 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!69039 d!15475))

(declare-fun d!15477 () Bool)

(declare-fun e!45771 () Bool)

(assert (=> d!15477 e!45771))

(declare-fun res!37474 () Bool)

(assert (=> d!15477 (=> res!37474 e!45771)))

(declare-fun lt!30808 () Bool)

(assert (=> d!15477 (= res!37474 (not lt!30808))))

(declare-fun lt!30807 () Bool)

(assert (=> d!15477 (= lt!30808 lt!30807)))

(declare-fun lt!30806 () Unit!1898)

(declare-fun e!45770 () Unit!1898)

(assert (=> d!15477 (= lt!30806 e!45770)))

(declare-fun c!10075 () Bool)

(assert (=> d!15477 (= c!10075 lt!30807)))

(assert (=> d!15477 (= lt!30807 (containsKey!133 (toList!708 lt!30226) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!15477 (= (contains!709 lt!30226 #b0000000000000000000000000000000000000000000000000000000000000000) lt!30808)))

(declare-fun b!69948 () Bool)

(declare-fun lt!30805 () Unit!1898)

(assert (=> b!69948 (= e!45770 lt!30805)))

(assert (=> b!69948 (= lt!30805 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 lt!30226) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!69948 (isDefined!83 (getValueByKey!129 (toList!708 lt!30226) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69949 () Bool)

(declare-fun Unit!1962 () Unit!1898)

(assert (=> b!69949 (= e!45770 Unit!1962)))

(declare-fun b!69950 () Bool)

(assert (=> b!69950 (= e!45771 (isDefined!83 (getValueByKey!129 (toList!708 lt!30226) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15477 c!10075) b!69948))

(assert (= (and d!15477 (not c!10075)) b!69949))

(assert (= (and d!15477 (not res!37474)) b!69950))

(declare-fun m!66659 () Bool)

(assert (=> d!15477 m!66659))

(declare-fun m!66661 () Bool)

(assert (=> b!69948 m!66661))

(declare-fun m!66663 () Bool)

(assert (=> b!69948 m!66663))

(assert (=> b!69948 m!66663))

(declare-fun m!66665 () Bool)

(assert (=> b!69948 m!66665))

(assert (=> b!69950 m!66663))

(assert (=> b!69950 m!66663))

(assert (=> b!69950 m!66665))

(assert (=> d!14811 d!15477))

(assert (=> d!14811 d!14669))

(declare-fun d!15479 () Bool)

(assert (=> d!15479 (= (isDefined!83 (getValueByKey!129 (toList!708 lt!29805) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!316 (getValueByKey!129 (toList!708 lt!29805) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!3019 () Bool)

(assert (= bs!3019 d!15479))

(assert (=> bs!3019 m!64349))

(declare-fun m!66667 () Bool)

(assert (=> bs!3019 m!66667))

(assert (=> b!68788 d!15479))

(declare-fun b!69953 () Bool)

(declare-fun e!45773 () Option!135)

(assert (=> b!69953 (= e!45773 (getValueByKey!129 (t!4964 (toList!708 lt!29805)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!69951 () Bool)

(declare-fun e!45772 () Option!135)

(assert (=> b!69951 (= e!45772 (Some!134 (_2!1056 (h!2051 (toList!708 lt!29805)))))))

(declare-fun b!69954 () Bool)

(assert (=> b!69954 (= e!45773 None!133)))

(declare-fun d!15481 () Bool)

(declare-fun c!10076 () Bool)

(assert (=> d!15481 (= c!10076 (and ((_ is Cons!1466) (toList!708 lt!29805)) (= (_1!1056 (h!2051 (toList!708 lt!29805))) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!15481 (= (getValueByKey!129 (toList!708 lt!29805) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!45772)))

(declare-fun b!69952 () Bool)

(assert (=> b!69952 (= e!45772 e!45773)))

(declare-fun c!10077 () Bool)

(assert (=> b!69952 (= c!10077 (and ((_ is Cons!1466) (toList!708 lt!29805)) (not (= (_1!1056 (h!2051 (toList!708 lt!29805))) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(assert (= (and d!15481 c!10076) b!69951))

(assert (= (and d!15481 (not c!10076)) b!69952))

(assert (= (and b!69952 c!10077) b!69953))

(assert (= (and b!69952 (not c!10077)) b!69954))

(assert (=> b!69953 m!63951))

(declare-fun m!66669 () Bool)

(assert (=> b!69953 m!66669))

(assert (=> b!68788 d!15481))

(declare-fun d!15483 () Bool)

(assert (=> d!15483 (= (get!1129 (getValueByKey!129 (toList!708 lt!29805) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!2491 (getValueByKey!129 (toList!708 lt!29805) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!14729 d!15483))

(declare-fun b!69957 () Bool)

(declare-fun e!45775 () Option!135)

(assert (=> b!69957 (= e!45775 (getValueByKey!129 (t!4964 (toList!708 lt!29805)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69955 () Bool)

(declare-fun e!45774 () Option!135)

(assert (=> b!69955 (= e!45774 (Some!134 (_2!1056 (h!2051 (toList!708 lt!29805)))))))

(declare-fun b!69958 () Bool)

(assert (=> b!69958 (= e!45775 None!133)))

(declare-fun d!15485 () Bool)

(declare-fun c!10078 () Bool)

(assert (=> d!15485 (= c!10078 (and ((_ is Cons!1466) (toList!708 lt!29805)) (= (_1!1056 (h!2051 (toList!708 lt!29805))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!15485 (= (getValueByKey!129 (toList!708 lt!29805) #b1000000000000000000000000000000000000000000000000000000000000000) e!45774)))

(declare-fun b!69956 () Bool)

(assert (=> b!69956 (= e!45774 e!45775)))

(declare-fun c!10079 () Bool)

(assert (=> b!69956 (= c!10079 (and ((_ is Cons!1466) (toList!708 lt!29805)) (not (= (_1!1056 (h!2051 (toList!708 lt!29805))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!15485 c!10078) b!69955))

(assert (= (and d!15485 (not c!10078)) b!69956))

(assert (= (and b!69956 c!10079) b!69957))

(assert (= (and b!69956 (not c!10079)) b!69958))

(declare-fun m!66671 () Bool)

(assert (=> b!69957 m!66671))

(assert (=> d!14729 d!15485))

(declare-fun d!15487 () Bool)

(declare-fun lt!30809 () Bool)

(assert (=> d!15487 (= lt!30809 (select (content!73 (toList!708 lt!30304)) (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))))

(declare-fun e!45777 () Bool)

(assert (=> d!15487 (= lt!30809 e!45777)))

(declare-fun res!37476 () Bool)

(assert (=> d!15487 (=> (not res!37476) (not e!45777))))

(assert (=> d!15487 (= res!37476 ((_ is Cons!1466) (toList!708 lt!30304)))))

(assert (=> d!15487 (= (contains!711 (toList!708 lt!30304) (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))) lt!30809)))

(declare-fun b!69959 () Bool)

(declare-fun e!45776 () Bool)

(assert (=> b!69959 (= e!45777 e!45776)))

(declare-fun res!37475 () Bool)

(assert (=> b!69959 (=> res!37475 e!45776)))

(assert (=> b!69959 (= res!37475 (= (h!2051 (toList!708 lt!30304)) (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))))

(declare-fun b!69960 () Bool)

(assert (=> b!69960 (= e!45776 (contains!711 (t!4964 (toList!708 lt!30304)) (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))))

(assert (= (and d!15487 res!37476) b!69959))

(assert (= (and b!69959 (not res!37475)) b!69960))

(declare-fun m!66673 () Bool)

(assert (=> d!15487 m!66673))

(declare-fun m!66675 () Bool)

(assert (=> d!15487 m!66675))

(declare-fun m!66677 () Bool)

(assert (=> b!69960 m!66677))

(assert (=> b!69069 d!15487))

(assert (=> bm!5889 d!14745))

(declare-fun d!15489 () Bool)

(declare-fun res!37477 () Bool)

(declare-fun e!45778 () Bool)

(assert (=> d!15489 (=> res!37477 e!45778)))

(assert (=> d!15489 (= res!37477 (and ((_ is Cons!1466) (toList!708 call!5830)) (= (_1!1056 (h!2051 (toList!708 call!5830))) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355))))))

(assert (=> d!15489 (= (containsKey!133 (toList!708 call!5830) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) e!45778)))

(declare-fun b!69961 () Bool)

(declare-fun e!45779 () Bool)

(assert (=> b!69961 (= e!45778 e!45779)))

(declare-fun res!37478 () Bool)

(assert (=> b!69961 (=> (not res!37478) (not e!45779))))

(assert (=> b!69961 (= res!37478 (and (or (not ((_ is Cons!1466) (toList!708 call!5830))) (bvsle (_1!1056 (h!2051 (toList!708 call!5830))) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355))) ((_ is Cons!1466) (toList!708 call!5830)) (bvslt (_1!1056 (h!2051 (toList!708 call!5830))) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355))))))

(declare-fun b!69962 () Bool)

(assert (=> b!69962 (= e!45779 (containsKey!133 (t!4964 (toList!708 call!5830)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))

(assert (= (and d!15489 (not res!37477)) b!69961))

(assert (= (and b!69961 res!37478) b!69962))

(assert (=> b!69962 m!63767))

(declare-fun m!66679 () Bool)

(assert (=> b!69962 m!66679))

(assert (=> d!14807 d!15489))

(declare-fun b!69963 () Bool)

(declare-fun e!45780 () Bool)

(declare-fun call!5996 () Bool)

(assert (=> b!69963 (= e!45780 call!5996)))

(declare-fun b!69964 () Bool)

(declare-fun e!45782 () Bool)

(assert (=> b!69964 (= e!45782 e!45780)))

(declare-fun lt!30812 () (_ BitVec 64))

(assert (=> b!69964 (= lt!30812 (select (arr!1828 (_keys!3810 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!30811 () Unit!1898)

(assert (=> b!69964 (= lt!30811 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3810 newMap!16) lt!30812 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!69964 (arrayContainsKey!0 (_keys!3810 newMap!16) lt!30812 #b00000000000000000000000000000000)))

(declare-fun lt!30810 () Unit!1898)

(assert (=> b!69964 (= lt!30810 lt!30811)))

(declare-fun res!37479 () Bool)

(assert (=> b!69964 (= res!37479 (= (seekEntryOrOpen!0 (select (arr!1828 (_keys!3810 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!3810 newMap!16) (mask!6111 newMap!16)) (Found!237 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!69964 (=> (not res!37479) (not e!45780))))

(declare-fun bm!5993 () Bool)

(assert (=> bm!5993 (= call!5996 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!3810 newMap!16) (mask!6111 newMap!16)))))

(declare-fun b!69965 () Bool)

(assert (=> b!69965 (= e!45782 call!5996)))

(declare-fun b!69966 () Bool)

(declare-fun e!45781 () Bool)

(assert (=> b!69966 (= e!45781 e!45782)))

(declare-fun c!10080 () Bool)

(assert (=> b!69966 (= c!10080 (validKeyInArray!0 (select (arr!1828 (_keys!3810 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun d!15491 () Bool)

(declare-fun res!37480 () Bool)

(assert (=> d!15491 (=> res!37480 e!45781)))

(assert (=> d!15491 (= res!37480 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2065 (_keys!3810 newMap!16))))))

(assert (=> d!15491 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3810 newMap!16) (mask!6111 newMap!16)) e!45781)))

(assert (= (and d!15491 (not res!37480)) b!69966))

(assert (= (and b!69966 c!10080) b!69964))

(assert (= (and b!69966 (not c!10080)) b!69965))

(assert (= (and b!69964 res!37479) b!69963))

(assert (= (or b!69963 b!69965) bm!5993))

(assert (=> b!69964 m!65281))

(declare-fun m!66681 () Bool)

(assert (=> b!69964 m!66681))

(declare-fun m!66683 () Bool)

(assert (=> b!69964 m!66683))

(assert (=> b!69964 m!65281))

(declare-fun m!66685 () Bool)

(assert (=> b!69964 m!66685))

(declare-fun m!66687 () Bool)

(assert (=> bm!5993 m!66687))

(assert (=> b!69966 m!65281))

(assert (=> b!69966 m!65281))

(assert (=> b!69966 m!66029))

(assert (=> bm!5842 d!15491))

(assert (=> d!14883 d!15017))

(declare-fun d!15493 () Bool)

(declare-fun e!45784 () Bool)

(assert (=> d!15493 e!45784))

(declare-fun res!37481 () Bool)

(assert (=> d!15493 (=> res!37481 e!45784)))

(declare-fun lt!30816 () Bool)

(assert (=> d!15493 (= res!37481 (not lt!30816))))

(declare-fun lt!30815 () Bool)

(assert (=> d!15493 (= lt!30816 lt!30815)))

(declare-fun lt!30814 () Unit!1898)

(declare-fun e!45783 () Unit!1898)

(assert (=> d!15493 (= lt!30814 e!45783)))

(declare-fun c!10081 () Bool)

(assert (=> d!15493 (= c!10081 lt!30815)))

(assert (=> d!15493 (= lt!30815 (containsKey!133 (toList!708 lt!30245) (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!15493 (= (contains!709 lt!30245 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)) lt!30816)))

(declare-fun b!69967 () Bool)

(declare-fun lt!30813 () Unit!1898)

(assert (=> b!69967 (= e!45783 lt!30813)))

(assert (=> b!69967 (= lt!30813 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 lt!30245) (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!69967 (isDefined!83 (getValueByKey!129 (toList!708 lt!30245) (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!69968 () Bool)

(declare-fun Unit!1963 () Unit!1898)

(assert (=> b!69968 (= e!45783 Unit!1963)))

(declare-fun b!69969 () Bool)

(assert (=> b!69969 (= e!45784 (isDefined!83 (getValueByKey!129 (toList!708 lt!30245) (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!15493 c!10081) b!69967))

(assert (= (and d!15493 (not c!10081)) b!69968))

(assert (= (and d!15493 (not res!37481)) b!69969))

(assert (=> d!15493 m!64177))

(declare-fun m!66689 () Bool)

(assert (=> d!15493 m!66689))

(assert (=> b!69967 m!64177))

(declare-fun m!66691 () Bool)

(assert (=> b!69967 m!66691))

(assert (=> b!69967 m!64177))

(declare-fun m!66693 () Bool)

(assert (=> b!69967 m!66693))

(assert (=> b!69967 m!66693))

(declare-fun m!66695 () Bool)

(assert (=> b!69967 m!66695))

(assert (=> b!69969 m!64177))

(assert (=> b!69969 m!66693))

(assert (=> b!69969 m!66693))

(assert (=> b!69969 m!66695))

(assert (=> b!69031 d!15493))

(assert (=> b!68770 d!14925))

(declare-fun e!45786 () Option!135)

(declare-fun b!69972 () Bool)

(assert (=> b!69972 (= e!45786 (getValueByKey!129 (t!4964 (toList!708 lt!30280)) (_1!1056 (tuple2!2091 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(declare-fun b!69970 () Bool)

(declare-fun e!45785 () Option!135)

(assert (=> b!69970 (= e!45785 (Some!134 (_2!1056 (h!2051 (toList!708 lt!30280)))))))

(declare-fun b!69973 () Bool)

(assert (=> b!69973 (= e!45786 None!133)))

(declare-fun d!15495 () Bool)

(declare-fun c!10082 () Bool)

(assert (=> d!15495 (= c!10082 (and ((_ is Cons!1466) (toList!708 lt!30280)) (= (_1!1056 (h!2051 (toList!708 lt!30280))) (_1!1056 (tuple2!2091 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(assert (=> d!15495 (= (getValueByKey!129 (toList!708 lt!30280) (_1!1056 (tuple2!2091 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))) e!45785)))

(declare-fun b!69971 () Bool)

(assert (=> b!69971 (= e!45785 e!45786)))

(declare-fun c!10083 () Bool)

(assert (=> b!69971 (= c!10083 (and ((_ is Cons!1466) (toList!708 lt!30280)) (not (= (_1!1056 (h!2051 (toList!708 lt!30280))) (_1!1056 (tuple2!2091 lt!29815 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))))

(assert (= (and d!15495 c!10082) b!69970))

(assert (= (and d!15495 (not c!10082)) b!69971))

(assert (= (and b!69971 c!10083) b!69972))

(assert (= (and b!69971 (not c!10083)) b!69973))

(declare-fun m!66697 () Bool)

(assert (=> b!69972 m!66697))

(assert (=> b!69052 d!15495))

(declare-fun b!69976 () Bool)

(declare-fun e!45788 () Option!135)

(assert (=> b!69976 (= e!45788 (getValueByKey!129 (t!4964 (toList!708 lt!30066)) (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(declare-fun b!69974 () Bool)

(declare-fun e!45787 () Option!135)

(assert (=> b!69974 (= e!45787 (Some!134 (_2!1056 (h!2051 (toList!708 lt!30066)))))))

(declare-fun b!69977 () Bool)

(assert (=> b!69977 (= e!45788 None!133)))

(declare-fun d!15497 () Bool)

(declare-fun c!10084 () Bool)

(assert (=> d!15497 (= c!10084 (and ((_ is Cons!1466) (toList!708 lt!30066)) (= (_1!1056 (h!2051 (toList!708 lt!30066))) (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(assert (=> d!15497 (= (getValueByKey!129 (toList!708 lt!30066) (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))) e!45787)))

(declare-fun b!69975 () Bool)

(assert (=> b!69975 (= e!45787 e!45788)))

(declare-fun c!10085 () Bool)

(assert (=> b!69975 (= c!10085 (and ((_ is Cons!1466) (toList!708 lt!30066)) (not (= (_1!1056 (h!2051 (toList!708 lt!30066))) (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))))

(assert (= (and d!15497 c!10084) b!69974))

(assert (= (and d!15497 (not c!10084)) b!69975))

(assert (= (and b!69975 c!10085) b!69976))

(assert (= (and b!69975 (not c!10085)) b!69977))

(declare-fun m!66699 () Bool)

(assert (=> b!69976 m!66699))

(assert (=> b!68797 d!15497))

(declare-fun b!69978 () Bool)

(declare-fun e!45799 () ListLongMap!1385)

(declare-fun call!5997 () ListLongMap!1385)

(assert (=> b!69978 (= e!45799 call!5997)))

(declare-fun b!69979 () Bool)

(declare-fun e!45796 () Bool)

(declare-fun e!45791 () Bool)

(assert (=> b!69979 (= e!45796 e!45791)))

(declare-fun res!37489 () Bool)

(declare-fun call!5998 () Bool)

(assert (=> b!69979 (= res!37489 call!5998)))

(assert (=> b!69979 (=> (not res!37489) (not e!45791))))

(declare-fun b!69981 () Bool)

(declare-fun e!45797 () Bool)

(declare-fun call!6003 () Bool)

(assert (=> b!69981 (= e!45797 (not call!6003))))

(declare-fun bm!5994 () Bool)

(declare-fun lt!30823 () ListLongMap!1385)

(assert (=> bm!5994 (= call!5998 (contains!709 lt!30823 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69982 () Bool)

(declare-fun c!10087 () Bool)

(assert (=> b!69982 (= c!10087 (and (not (= (bvand (extraKeys!2034 (_2!1057 lt!29959)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2034 (_2!1057 lt!29959)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!45795 () ListLongMap!1385)

(assert (=> b!69982 (= e!45795 e!45799)))

(declare-fun bm!5995 () Bool)

(declare-fun c!10089 () Bool)

(declare-fun call!6001 () ListLongMap!1385)

(declare-fun call!6002 () ListLongMap!1385)

(declare-fun call!5999 () ListLongMap!1385)

(declare-fun c!10086 () Bool)

(assert (=> bm!5995 (= call!6001 (+!89 (ite c!10089 call!6002 (ite c!10086 call!5999 call!5997)) (ite (or c!10089 c!10086) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (_2!1057 lt!29959))) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (_2!1057 lt!29959))))))))

(declare-fun b!69983 () Bool)

(declare-fun e!45793 () Bool)

(assert (=> b!69983 (= e!45793 (validKeyInArray!0 (select (arr!1828 (_keys!3810 (_2!1057 lt!29959))) #b00000000000000000000000000000000)))))

(declare-fun b!69984 () Bool)

(declare-fun res!37487 () Bool)

(declare-fun e!45790 () Bool)

(assert (=> b!69984 (=> (not res!37487) (not e!45790))))

(declare-fun e!45800 () Bool)

(assert (=> b!69984 (= res!37487 e!45800)))

(declare-fun res!37483 () Bool)

(assert (=> b!69984 (=> res!37483 e!45800)))

(assert (=> b!69984 (= res!37483 (not e!45793))))

(declare-fun res!37484 () Bool)

(assert (=> b!69984 (=> (not res!37484) (not e!45793))))

(assert (=> b!69984 (= res!37484 (bvslt #b00000000000000000000000000000000 (size!2065 (_keys!3810 (_2!1057 lt!29959)))))))

(declare-fun b!69985 () Bool)

(declare-fun e!45794 () ListLongMap!1385)

(assert (=> b!69985 (= e!45794 e!45795)))

(assert (=> b!69985 (= c!10086 (and (not (= (bvand (extraKeys!2034 (_2!1057 lt!29959)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2034 (_2!1057 lt!29959)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!69986 () Bool)

(declare-fun e!45792 () Bool)

(assert (=> b!69986 (= e!45797 e!45792)))

(declare-fun res!37485 () Bool)

(assert (=> b!69986 (= res!37485 call!6003)))

(assert (=> b!69986 (=> (not res!37485) (not e!45792))))

(declare-fun bm!5996 () Bool)

(assert (=> bm!5996 (= call!5999 call!6002)))

(declare-fun b!69987 () Bool)

(declare-fun call!6000 () ListLongMap!1385)

(assert (=> b!69987 (= e!45795 call!6000)))

(declare-fun bm!5997 () Bool)

(assert (=> bm!5997 (= call!6000 call!6001)))

(declare-fun b!69988 () Bool)

(assert (=> b!69988 (= e!45799 call!6000)))

(declare-fun b!69989 () Bool)

(declare-fun res!37488 () Bool)

(assert (=> b!69989 (=> (not res!37488) (not e!45790))))

(assert (=> b!69989 (= res!37488 e!45797)))

(declare-fun c!10090 () Bool)

(assert (=> b!69989 (= c!10090 (not (= (bvand (extraKeys!2034 (_2!1057 lt!29959)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!69990 () Bool)

(assert (=> b!69990 (= e!45792 (= (apply!73 lt!30823 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2073 (_2!1057 lt!29959))))))

(declare-fun bm!5998 () Bool)

(assert (=> bm!5998 (= call!6002 (getCurrentListMapNoExtraKeys!53 (_keys!3810 (_2!1057 lt!29959)) (_values!2150 (_2!1057 lt!29959)) (mask!6111 (_2!1057 lt!29959)) (extraKeys!2034 (_2!1057 lt!29959)) (zeroValue!2073 (_2!1057 lt!29959)) (minValue!2073 (_2!1057 lt!29959)) #b00000000000000000000000000000000 (defaultEntry!2167 (_2!1057 lt!29959))))))

(declare-fun b!69991 () Bool)

(assert (=> b!69991 (= e!45791 (= (apply!73 lt!30823 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2073 (_2!1057 lt!29959))))))

(declare-fun b!69992 () Bool)

(declare-fun e!45789 () Bool)

(assert (=> b!69992 (= e!45789 (= (apply!73 lt!30823 (select (arr!1828 (_keys!3810 (_2!1057 lt!29959))) #b00000000000000000000000000000000)) (get!1126 (select (arr!1829 (_values!2150 (_2!1057 lt!29959))) #b00000000000000000000000000000000) (dynLambda!321 (defaultEntry!2167 (_2!1057 lt!29959)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!69992 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2066 (_values!2150 (_2!1057 lt!29959)))))))

(assert (=> b!69992 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2065 (_keys!3810 (_2!1057 lt!29959)))))))

(declare-fun bm!5999 () Bool)

(assert (=> bm!5999 (= call!5997 call!5999)))

(declare-fun d!15499 () Bool)

(assert (=> d!15499 e!45790))

(declare-fun res!37490 () Bool)

(assert (=> d!15499 (=> (not res!37490) (not e!45790))))

(assert (=> d!15499 (= res!37490 (or (bvsge #b00000000000000000000000000000000 (size!2065 (_keys!3810 (_2!1057 lt!29959)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2065 (_keys!3810 (_2!1057 lt!29959)))))))))

(declare-fun lt!30825 () ListLongMap!1385)

(assert (=> d!15499 (= lt!30823 lt!30825)))

(declare-fun lt!30835 () Unit!1898)

(declare-fun e!45801 () Unit!1898)

(assert (=> d!15499 (= lt!30835 e!45801)))

(declare-fun c!10091 () Bool)

(declare-fun e!45798 () Bool)

(assert (=> d!15499 (= c!10091 e!45798)))

(declare-fun res!37482 () Bool)

(assert (=> d!15499 (=> (not res!37482) (not e!45798))))

(assert (=> d!15499 (= res!37482 (bvslt #b00000000000000000000000000000000 (size!2065 (_keys!3810 (_2!1057 lt!29959)))))))

(assert (=> d!15499 (= lt!30825 e!45794)))

(assert (=> d!15499 (= c!10089 (and (not (= (bvand (extraKeys!2034 (_2!1057 lt!29959)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2034 (_2!1057 lt!29959)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!15499 (validMask!0 (mask!6111 (_2!1057 lt!29959)))))

(assert (=> d!15499 (= (getCurrentListMap!403 (_keys!3810 (_2!1057 lt!29959)) (_values!2150 (_2!1057 lt!29959)) (mask!6111 (_2!1057 lt!29959)) (extraKeys!2034 (_2!1057 lt!29959)) (zeroValue!2073 (_2!1057 lt!29959)) (minValue!2073 (_2!1057 lt!29959)) #b00000000000000000000000000000000 (defaultEntry!2167 (_2!1057 lt!29959))) lt!30823)))

(declare-fun b!69980 () Bool)

(assert (=> b!69980 (= e!45798 (validKeyInArray!0 (select (arr!1828 (_keys!3810 (_2!1057 lt!29959))) #b00000000000000000000000000000000)))))

(declare-fun b!69993 () Bool)

(assert (=> b!69993 (= e!45790 e!45796)))

(declare-fun c!10088 () Bool)

(assert (=> b!69993 (= c!10088 (not (= (bvand (extraKeys!2034 (_2!1057 lt!29959)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!69994 () Bool)

(assert (=> b!69994 (= e!45800 e!45789)))

(declare-fun res!37486 () Bool)

(assert (=> b!69994 (=> (not res!37486) (not e!45789))))

(assert (=> b!69994 (= res!37486 (contains!709 lt!30823 (select (arr!1828 (_keys!3810 (_2!1057 lt!29959))) #b00000000000000000000000000000000)))))

(assert (=> b!69994 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2065 (_keys!3810 (_2!1057 lt!29959)))))))

(declare-fun b!69995 () Bool)

(assert (=> b!69995 (= e!45794 (+!89 call!6001 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (_2!1057 lt!29959)))))))

(declare-fun b!69996 () Bool)

(assert (=> b!69996 (= e!45796 (not call!5998))))

(declare-fun bm!6000 () Bool)

(assert (=> bm!6000 (= call!6003 (contains!709 lt!30823 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69997 () Bool)

(declare-fun Unit!1964 () Unit!1898)

(assert (=> b!69997 (= e!45801 Unit!1964)))

(declare-fun b!69998 () Bool)

(declare-fun lt!30834 () Unit!1898)

(assert (=> b!69998 (= e!45801 lt!30834)))

(declare-fun lt!30817 () ListLongMap!1385)

(assert (=> b!69998 (= lt!30817 (getCurrentListMapNoExtraKeys!53 (_keys!3810 (_2!1057 lt!29959)) (_values!2150 (_2!1057 lt!29959)) (mask!6111 (_2!1057 lt!29959)) (extraKeys!2034 (_2!1057 lt!29959)) (zeroValue!2073 (_2!1057 lt!29959)) (minValue!2073 (_2!1057 lt!29959)) #b00000000000000000000000000000000 (defaultEntry!2167 (_2!1057 lt!29959))))))

(declare-fun lt!30821 () (_ BitVec 64))

(assert (=> b!69998 (= lt!30821 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30820 () (_ BitVec 64))

(assert (=> b!69998 (= lt!30820 (select (arr!1828 (_keys!3810 (_2!1057 lt!29959))) #b00000000000000000000000000000000))))

(declare-fun lt!30837 () Unit!1898)

(assert (=> b!69998 (= lt!30837 (addStillContains!49 lt!30817 lt!30821 (zeroValue!2073 (_2!1057 lt!29959)) lt!30820))))

(assert (=> b!69998 (contains!709 (+!89 lt!30817 (tuple2!2091 lt!30821 (zeroValue!2073 (_2!1057 lt!29959)))) lt!30820)))

(declare-fun lt!30831 () Unit!1898)

(assert (=> b!69998 (= lt!30831 lt!30837)))

(declare-fun lt!30832 () ListLongMap!1385)

(assert (=> b!69998 (= lt!30832 (getCurrentListMapNoExtraKeys!53 (_keys!3810 (_2!1057 lt!29959)) (_values!2150 (_2!1057 lt!29959)) (mask!6111 (_2!1057 lt!29959)) (extraKeys!2034 (_2!1057 lt!29959)) (zeroValue!2073 (_2!1057 lt!29959)) (minValue!2073 (_2!1057 lt!29959)) #b00000000000000000000000000000000 (defaultEntry!2167 (_2!1057 lt!29959))))))

(declare-fun lt!30822 () (_ BitVec 64))

(assert (=> b!69998 (= lt!30822 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30819 () (_ BitVec 64))

(assert (=> b!69998 (= lt!30819 (select (arr!1828 (_keys!3810 (_2!1057 lt!29959))) #b00000000000000000000000000000000))))

(declare-fun lt!30826 () Unit!1898)

(assert (=> b!69998 (= lt!30826 (addApplyDifferent!49 lt!30832 lt!30822 (minValue!2073 (_2!1057 lt!29959)) lt!30819))))

(assert (=> b!69998 (= (apply!73 (+!89 lt!30832 (tuple2!2091 lt!30822 (minValue!2073 (_2!1057 lt!29959)))) lt!30819) (apply!73 lt!30832 lt!30819))))

(declare-fun lt!30838 () Unit!1898)

(assert (=> b!69998 (= lt!30838 lt!30826)))

(declare-fun lt!30818 () ListLongMap!1385)

(assert (=> b!69998 (= lt!30818 (getCurrentListMapNoExtraKeys!53 (_keys!3810 (_2!1057 lt!29959)) (_values!2150 (_2!1057 lt!29959)) (mask!6111 (_2!1057 lt!29959)) (extraKeys!2034 (_2!1057 lt!29959)) (zeroValue!2073 (_2!1057 lt!29959)) (minValue!2073 (_2!1057 lt!29959)) #b00000000000000000000000000000000 (defaultEntry!2167 (_2!1057 lt!29959))))))

(declare-fun lt!30830 () (_ BitVec 64))

(assert (=> b!69998 (= lt!30830 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30827 () (_ BitVec 64))

(assert (=> b!69998 (= lt!30827 (select (arr!1828 (_keys!3810 (_2!1057 lt!29959))) #b00000000000000000000000000000000))))

(declare-fun lt!30829 () Unit!1898)

(assert (=> b!69998 (= lt!30829 (addApplyDifferent!49 lt!30818 lt!30830 (zeroValue!2073 (_2!1057 lt!29959)) lt!30827))))

(assert (=> b!69998 (= (apply!73 (+!89 lt!30818 (tuple2!2091 lt!30830 (zeroValue!2073 (_2!1057 lt!29959)))) lt!30827) (apply!73 lt!30818 lt!30827))))

(declare-fun lt!30824 () Unit!1898)

(assert (=> b!69998 (= lt!30824 lt!30829)))

(declare-fun lt!30836 () ListLongMap!1385)

(assert (=> b!69998 (= lt!30836 (getCurrentListMapNoExtraKeys!53 (_keys!3810 (_2!1057 lt!29959)) (_values!2150 (_2!1057 lt!29959)) (mask!6111 (_2!1057 lt!29959)) (extraKeys!2034 (_2!1057 lt!29959)) (zeroValue!2073 (_2!1057 lt!29959)) (minValue!2073 (_2!1057 lt!29959)) #b00000000000000000000000000000000 (defaultEntry!2167 (_2!1057 lt!29959))))))

(declare-fun lt!30833 () (_ BitVec 64))

(assert (=> b!69998 (= lt!30833 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30828 () (_ BitVec 64))

(assert (=> b!69998 (= lt!30828 (select (arr!1828 (_keys!3810 (_2!1057 lt!29959))) #b00000000000000000000000000000000))))

(assert (=> b!69998 (= lt!30834 (addApplyDifferent!49 lt!30836 lt!30833 (minValue!2073 (_2!1057 lt!29959)) lt!30828))))

(assert (=> b!69998 (= (apply!73 (+!89 lt!30836 (tuple2!2091 lt!30833 (minValue!2073 (_2!1057 lt!29959)))) lt!30828) (apply!73 lt!30836 lt!30828))))

(assert (= (and d!15499 c!10089) b!69995))

(assert (= (and d!15499 (not c!10089)) b!69985))

(assert (= (and b!69985 c!10086) b!69987))

(assert (= (and b!69985 (not c!10086)) b!69982))

(assert (= (and b!69982 c!10087) b!69988))

(assert (= (and b!69982 (not c!10087)) b!69978))

(assert (= (or b!69988 b!69978) bm!5999))

(assert (= (or b!69987 bm!5999) bm!5996))

(assert (= (or b!69987 b!69988) bm!5997))

(assert (= (or b!69995 bm!5996) bm!5998))

(assert (= (or b!69995 bm!5997) bm!5995))

(assert (= (and d!15499 res!37482) b!69980))

(assert (= (and d!15499 c!10091) b!69998))

(assert (= (and d!15499 (not c!10091)) b!69997))

(assert (= (and d!15499 res!37490) b!69984))

(assert (= (and b!69984 res!37484) b!69983))

(assert (= (and b!69984 (not res!37483)) b!69994))

(assert (= (and b!69994 res!37486) b!69992))

(assert (= (and b!69984 res!37487) b!69989))

(assert (= (and b!69989 c!10090) b!69986))

(assert (= (and b!69989 (not c!10090)) b!69981))

(assert (= (and b!69986 res!37485) b!69990))

(assert (= (or b!69986 b!69981) bm!6000))

(assert (= (and b!69989 res!37488) b!69993))

(assert (= (and b!69993 c!10088) b!69979))

(assert (= (and b!69993 (not c!10088)) b!69996))

(assert (= (and b!69979 res!37489) b!69991))

(assert (= (or b!69979 b!69996) bm!5994))

(declare-fun b_lambda!3123 () Bool)

(assert (=> (not b_lambda!3123) (not b!69992)))

(declare-fun t!4983 () Bool)

(declare-fun tb!1485 () Bool)

(assert (=> (and b!68229 (= (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) (defaultEntry!2167 (_2!1057 lt!29959))) t!4983) tb!1485))

(declare-fun result!2619 () Bool)

(assert (=> tb!1485 (= result!2619 tp_is_empty!2455)))

(assert (=> b!69992 t!4983))

(declare-fun b_and!4305 () Bool)

(assert (= b_and!4301 (and (=> t!4983 result!2619) b_and!4305)))

(declare-fun t!4985 () Bool)

(declare-fun tb!1487 () Bool)

(assert (=> (and b!68221 (= (defaultEntry!2167 newMap!16) (defaultEntry!2167 (_2!1057 lt!29959))) t!4985) tb!1487))

(declare-fun result!2621 () Bool)

(assert (= result!2621 result!2619))

(assert (=> b!69992 t!4985))

(declare-fun b_and!4307 () Bool)

(assert (= b_and!4303 (and (=> t!4985 result!2621) b_and!4307)))

(declare-fun m!66701 () Bool)

(assert (=> b!69995 m!66701))

(declare-fun m!66703 () Bool)

(assert (=> bm!5995 m!66703))

(declare-fun m!66705 () Bool)

(assert (=> bm!5998 m!66705))

(declare-fun m!66707 () Bool)

(assert (=> b!69992 m!66707))

(declare-fun m!66709 () Bool)

(assert (=> b!69992 m!66709))

(assert (=> b!69992 m!66707))

(declare-fun m!66711 () Bool)

(assert (=> b!69992 m!66711))

(declare-fun m!66713 () Bool)

(assert (=> b!69992 m!66713))

(assert (=> b!69992 m!66709))

(assert (=> b!69992 m!66713))

(declare-fun m!66715 () Bool)

(assert (=> b!69992 m!66715))

(assert (=> b!69980 m!66707))

(assert (=> b!69980 m!66707))

(declare-fun m!66717 () Bool)

(assert (=> b!69980 m!66717))

(assert (=> b!69983 m!66707))

(assert (=> b!69983 m!66707))

(assert (=> b!69983 m!66717))

(declare-fun m!66719 () Bool)

(assert (=> bm!5994 m!66719))

(declare-fun m!66721 () Bool)

(assert (=> b!69991 m!66721))

(declare-fun m!66723 () Bool)

(assert (=> bm!6000 m!66723))

(declare-fun m!66725 () Bool)

(assert (=> b!69998 m!66725))

(declare-fun m!66727 () Bool)

(assert (=> b!69998 m!66727))

(declare-fun m!66729 () Bool)

(assert (=> b!69998 m!66729))

(assert (=> b!69998 m!66727))

(assert (=> b!69998 m!66725))

(declare-fun m!66731 () Bool)

(assert (=> b!69998 m!66731))

(declare-fun m!66733 () Bool)

(assert (=> b!69998 m!66733))

(declare-fun m!66735 () Bool)

(assert (=> b!69998 m!66735))

(declare-fun m!66737 () Bool)

(assert (=> b!69998 m!66737))

(declare-fun m!66739 () Bool)

(assert (=> b!69998 m!66739))

(declare-fun m!66741 () Bool)

(assert (=> b!69998 m!66741))

(declare-fun m!66743 () Bool)

(assert (=> b!69998 m!66743))

(assert (=> b!69998 m!66705))

(declare-fun m!66745 () Bool)

(assert (=> b!69998 m!66745))

(declare-fun m!66747 () Bool)

(assert (=> b!69998 m!66747))

(assert (=> b!69998 m!66707))

(declare-fun m!66749 () Bool)

(assert (=> b!69998 m!66749))

(declare-fun m!66751 () Bool)

(assert (=> b!69998 m!66751))

(assert (=> b!69998 m!66737))

(assert (=> b!69998 m!66749))

(declare-fun m!66753 () Bool)

(assert (=> b!69998 m!66753))

(assert (=> b!69994 m!66707))

(assert (=> b!69994 m!66707))

(declare-fun m!66755 () Bool)

(assert (=> b!69994 m!66755))

(declare-fun m!66757 () Bool)

(assert (=> b!69990 m!66757))

(assert (=> d!15499 m!66573))

(assert (=> d!14891 d!15499))

(declare-fun d!15501 () Bool)

(declare-fun e!45803 () Bool)

(assert (=> d!15501 e!45803))

(declare-fun res!37491 () Bool)

(assert (=> d!15501 (=> res!37491 e!45803)))

(declare-fun lt!30842 () Bool)

(assert (=> d!15501 (= res!37491 (not lt!30842))))

(declare-fun lt!30841 () Bool)

(assert (=> d!15501 (= lt!30842 lt!30841)))

(declare-fun lt!30840 () Unit!1898)

(declare-fun e!45802 () Unit!1898)

(assert (=> d!15501 (= lt!30840 e!45802)))

(declare-fun c!10092 () Bool)

(assert (=> d!15501 (= c!10092 lt!30841)))

(assert (=> d!15501 (= lt!30841 (containsKey!133 (toList!708 lt!30226) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> d!15501 (= (contains!709 lt!30226 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) lt!30842)))

(declare-fun b!69999 () Bool)

(declare-fun lt!30839 () Unit!1898)

(assert (=> b!69999 (= e!45802 lt!30839)))

(assert (=> b!69999 (= lt!30839 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 lt!30226) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!69999 (isDefined!83 (getValueByKey!129 (toList!708 lt!30226) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!70000 () Bool)

(declare-fun Unit!1965 () Unit!1898)

(assert (=> b!70000 (= e!45802 Unit!1965)))

(declare-fun b!70001 () Bool)

(assert (=> b!70001 (= e!45803 (isDefined!83 (getValueByKey!129 (toList!708 lt!30226) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(assert (= (and d!15501 c!10092) b!69999))

(assert (= (and d!15501 (not c!10092)) b!70000))

(assert (= (and d!15501 (not res!37491)) b!70001))

(assert (=> d!15501 m!64539))

(declare-fun m!66759 () Bool)

(assert (=> d!15501 m!66759))

(assert (=> b!69999 m!64539))

(declare-fun m!66761 () Bool)

(assert (=> b!69999 m!66761))

(assert (=> b!69999 m!64539))

(assert (=> b!69999 m!66015))

(assert (=> b!69999 m!66015))

(declare-fun m!66763 () Bool)

(assert (=> b!69999 m!66763))

(assert (=> b!70001 m!64539))

(assert (=> b!70001 m!66015))

(assert (=> b!70001 m!66015))

(assert (=> b!70001 m!66763))

(assert (=> b!68988 d!15501))

(assert (=> bm!5847 d!14819))

(declare-fun d!15503 () Bool)

(assert (=> d!15503 (isDefined!83 (getValueByKey!129 (toList!708 call!5832) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))

(declare-fun lt!30843 () Unit!1898)

(assert (=> d!15503 (= lt!30843 (choose!399 (toList!708 call!5832) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))

(declare-fun e!45804 () Bool)

(assert (=> d!15503 e!45804))

(declare-fun res!37492 () Bool)

(assert (=> d!15503 (=> (not res!37492) (not e!45804))))

(assert (=> d!15503 (= res!37492 (isStrictlySorted!285 (toList!708 call!5832)))))

(assert (=> d!15503 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 call!5832) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) lt!30843)))

(declare-fun b!70002 () Bool)

(assert (=> b!70002 (= e!45804 (containsKey!133 (toList!708 call!5832) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))

(assert (= (and d!15503 res!37492) b!70002))

(assert (=> d!15503 m!63767))

(assert (=> d!15503 m!64499))

(assert (=> d!15503 m!64499))

(assert (=> d!15503 m!64501))

(assert (=> d!15503 m!63767))

(declare-fun m!66765 () Bool)

(assert (=> d!15503 m!66765))

(declare-fun m!66767 () Bool)

(assert (=> d!15503 m!66767))

(assert (=> b!70002 m!63767))

(assert (=> b!70002 m!64495))

(assert (=> b!68868 d!15503))

(assert (=> b!68868 d!15295))

(assert (=> b!68868 d!15297))

(declare-fun d!15505 () Bool)

(declare-fun res!37493 () Bool)

(declare-fun e!45805 () Bool)

(assert (=> d!15505 (=> res!37493 e!45805)))

(assert (=> d!15505 (= res!37493 (or ((_ is Nil!1467) lt!30351) ((_ is Nil!1467) (t!4964 lt!30351))))))

(assert (=> d!15505 (= (isStrictlySorted!285 lt!30351) e!45805)))

(declare-fun b!70003 () Bool)

(declare-fun e!45806 () Bool)

(assert (=> b!70003 (= e!45805 e!45806)))

(declare-fun res!37494 () Bool)

(assert (=> b!70003 (=> (not res!37494) (not e!45806))))

(assert (=> b!70003 (= res!37494 (bvslt (_1!1056 (h!2051 lt!30351)) (_1!1056 (h!2051 (t!4964 lt!30351)))))))

(declare-fun b!70004 () Bool)

(assert (=> b!70004 (= e!45806 (isStrictlySorted!285 (t!4964 lt!30351)))))

(assert (= (and d!15505 (not res!37493)) b!70003))

(assert (= (and b!70003 res!37494) b!70004))

(declare-fun m!66769 () Bool)

(assert (=> b!70004 m!66769))

(assert (=> d!14901 d!15505))

(assert (=> d!14901 d!15275))

(declare-fun d!15507 () Bool)

(declare-fun e!45807 () Bool)

(assert (=> d!15507 e!45807))

(declare-fun res!37495 () Bool)

(assert (=> d!15507 (=> (not res!37495) (not e!45807))))

(declare-fun lt!30847 () ListLongMap!1385)

(assert (=> d!15507 (= res!37495 (contains!709 lt!30847 (_1!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))))))

(declare-fun lt!30845 () List!1470)

(assert (=> d!15507 (= lt!30847 (ListLongMap!1386 lt!30845))))

(declare-fun lt!30844 () Unit!1898)

(declare-fun lt!30846 () Unit!1898)

(assert (=> d!15507 (= lt!30844 lt!30846)))

(assert (=> d!15507 (= (getValueByKey!129 lt!30845 (_1!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))) (Some!134 (_2!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))))))

(assert (=> d!15507 (= lt!30846 (lemmaContainsTupThenGetReturnValue!49 lt!30845 (_1!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))) (_2!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))))))

(assert (=> d!15507 (= lt!30845 (insertStrictlySorted!52 (toList!708 call!5865) (_1!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))) (_2!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))))))

(assert (=> d!15507 (= (+!89 call!5865 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))) lt!30847)))

(declare-fun b!70005 () Bool)

(declare-fun res!37496 () Bool)

(assert (=> b!70005 (=> (not res!37496) (not e!45807))))

(assert (=> b!70005 (= res!37496 (= (getValueByKey!129 (toList!708 lt!30847) (_1!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))) (Some!134 (_2!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))))))))

(declare-fun b!70006 () Bool)

(assert (=> b!70006 (= e!45807 (contains!711 (toList!708 lt!30847) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))))))

(assert (= (and d!15507 res!37495) b!70005))

(assert (= (and b!70005 res!37496) b!70006))

(declare-fun m!66771 () Bool)

(assert (=> d!15507 m!66771))

(declare-fun m!66773 () Bool)

(assert (=> d!15507 m!66773))

(declare-fun m!66775 () Bool)

(assert (=> d!15507 m!66775))

(declare-fun m!66777 () Bool)

(assert (=> d!15507 m!66777))

(declare-fun m!66779 () Bool)

(assert (=> b!70005 m!66779))

(declare-fun m!66781 () Bool)

(assert (=> b!70006 m!66781))

(assert (=> b!68761 d!15507))

(declare-fun d!15509 () Bool)

(assert (=> d!15509 (contains!709 (getCurrentListMap!403 (_keys!3810 newMap!16) lt!29960 (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) (select (arr!1828 (_keys!3810 newMap!16)) (index!3078 lt!29944)))))

(assert (=> d!15509 true))

(declare-fun _$16!90 () Unit!1898)

(assert (=> d!15509 (= (choose!393 (_keys!3810 newMap!16) lt!29960 (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (index!3078 lt!29944) (defaultEntry!2167 newMap!16)) _$16!90)))

(declare-fun bs!3020 () Bool)

(assert (= bs!3020 d!15509))

(assert (=> bs!3020 m!64155))

(assert (=> bs!3020 m!64105))

(assert (=> bs!3020 m!64155))

(assert (=> bs!3020 m!64105))

(assert (=> bs!3020 m!64643))

(assert (=> d!14803 d!15509))

(assert (=> d!14803 d!15017))

(declare-fun d!15511 () Bool)

(assert (=> d!15511 (= (get!1129 (getValueByKey!129 (toList!708 lt!29805) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2491 (getValueByKey!129 (toList!708 lt!29805) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!14697 d!15511))

(assert (=> d!14697 d!14907))

(assert (=> b!68940 d!14813))

(declare-fun d!15513 () Bool)

(declare-fun res!37497 () Bool)

(declare-fun e!45808 () Bool)

(assert (=> d!15513 (=> res!37497 e!45808)))

(assert (=> d!15513 (= res!37497 (= (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))

(assert (=> d!15513 (= (arrayContainsKey!0 (_keys!3810 (v!2485 (underlying!247 thiss!992))) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!45808)))

(declare-fun b!70007 () Bool)

(declare-fun e!45809 () Bool)

(assert (=> b!70007 (= e!45808 e!45809)))

(declare-fun res!37498 () Bool)

(assert (=> b!70007 (=> (not res!37498) (not e!45809))))

(assert (=> b!70007 (= res!37498 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2065 (_keys!3810 (v!2485 (underlying!247 thiss!992))))))))

(declare-fun b!70008 () Bool)

(assert (=> b!70008 (= e!45809 (arrayContainsKey!0 (_keys!3810 (v!2485 (underlying!247 thiss!992))) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!15513 (not res!37497)) b!70007))

(assert (= (and b!70007 res!37498) b!70008))

(assert (=> d!15513 m!65833))

(assert (=> b!70008 m!63767))

(declare-fun m!66783 () Bool)

(assert (=> b!70008 m!66783))

(assert (=> b!68883 d!15513))

(declare-fun d!15515 () Bool)

(declare-fun lt!30848 () Bool)

(assert (=> d!15515 (= lt!30848 (select (content!73 (toList!708 lt!30315)) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))))

(declare-fun e!45811 () Bool)

(assert (=> d!15515 (= lt!30848 e!45811)))

(declare-fun res!37500 () Bool)

(assert (=> d!15515 (=> (not res!37500) (not e!45811))))

(assert (=> d!15515 (= res!37500 ((_ is Cons!1466) (toList!708 lt!30315)))))

(assert (=> d!15515 (= (contains!711 (toList!708 lt!30315) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992))))) lt!30848)))

(declare-fun b!70009 () Bool)

(declare-fun e!45810 () Bool)

(assert (=> b!70009 (= e!45811 e!45810)))

(declare-fun res!37499 () Bool)

(assert (=> b!70009 (=> res!37499 e!45810)))

(assert (=> b!70009 (= res!37499 (= (h!2051 (toList!708 lt!30315)) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))))

(declare-fun b!70010 () Bool)

(assert (=> b!70010 (= e!45810 (contains!711 (t!4964 (toList!708 lt!30315)) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))))

(assert (= (and d!15515 res!37500) b!70009))

(assert (= (and b!70009 (not res!37499)) b!70010))

(declare-fun m!66785 () Bool)

(assert (=> d!15515 m!66785))

(declare-fun m!66787 () Bool)

(assert (=> d!15515 m!66787))

(declare-fun m!66789 () Bool)

(assert (=> b!70010 m!66789))

(assert (=> b!69076 d!15515))

(declare-fun d!15517 () Bool)

(assert (=> d!15517 (= (isDefined!83 (getValueByKey!129 (toList!708 lt!29857) (_1!1056 lt!29675))) (not (isEmpty!316 (getValueByKey!129 (toList!708 lt!29857) (_1!1056 lt!29675)))))))

(declare-fun bs!3021 () Bool)

(assert (= bs!3021 d!15517))

(assert (=> bs!3021 m!64045))

(declare-fun m!66791 () Bool)

(assert (=> bs!3021 m!66791))

(assert (=> b!68835 d!15517))

(assert (=> b!68835 d!14821))

(declare-fun d!15519 () Bool)

(declare-fun e!45813 () Bool)

(assert (=> d!15519 e!45813))

(declare-fun res!37501 () Bool)

(assert (=> d!15519 (=> res!37501 e!45813)))

(declare-fun lt!30852 () Bool)

(assert (=> d!15519 (= res!37501 (not lt!30852))))

(declare-fun lt!30851 () Bool)

(assert (=> d!15519 (= lt!30852 lt!30851)))

(declare-fun lt!30850 () Unit!1898)

(declare-fun e!45812 () Unit!1898)

(assert (=> d!15519 (= lt!30850 e!45812)))

(declare-fun c!10093 () Bool)

(assert (=> d!15519 (= c!10093 lt!30851)))

(assert (=> d!15519 (= lt!30851 (containsKey!133 (toList!708 lt!29814) lt!29801))))

(assert (=> d!15519 (= (contains!709 lt!29814 lt!29801) lt!30852)))

(declare-fun b!70011 () Bool)

(declare-fun lt!30849 () Unit!1898)

(assert (=> b!70011 (= e!45812 lt!30849)))

(assert (=> b!70011 (= lt!30849 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 lt!29814) lt!29801))))

(assert (=> b!70011 (isDefined!83 (getValueByKey!129 (toList!708 lt!29814) lt!29801))))

(declare-fun b!70012 () Bool)

(declare-fun Unit!1966 () Unit!1898)

(assert (=> b!70012 (= e!45812 Unit!1966)))

(declare-fun b!70013 () Bool)

(assert (=> b!70013 (= e!45813 (isDefined!83 (getValueByKey!129 (toList!708 lt!29814) lt!29801)))))

(assert (= (and d!15519 c!10093) b!70011))

(assert (= (and d!15519 (not c!10093)) b!70012))

(assert (= (and d!15519 (not res!37501)) b!70013))

(declare-fun m!66793 () Bool)

(assert (=> d!15519 m!66793))

(declare-fun m!66795 () Bool)

(assert (=> b!70011 m!66795))

(assert (=> b!70011 m!64819))

(assert (=> b!70011 m!64819))

(declare-fun m!66797 () Bool)

(assert (=> b!70011 m!66797))

(assert (=> b!70013 m!64819))

(assert (=> b!70013 m!64819))

(assert (=> b!70013 m!66797))

(assert (=> d!14849 d!15519))

(assert (=> d!14849 d!14841))

(assert (=> d!14849 d!14843))

(assert (=> d!14849 d!14845))

(declare-fun d!15521 () Bool)

(assert (=> d!15521 (= (apply!73 (+!89 lt!29814 (tuple2!2091 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992))))) lt!29801) (apply!73 lt!29814 lt!29801))))

(assert (=> d!15521 true))

(declare-fun _$34!793 () Unit!1898)

(assert (=> d!15521 (= (choose!396 lt!29814 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992))) lt!29801) _$34!793)))

(declare-fun bs!3022 () Bool)

(assert (= bs!3022 d!15521))

(assert (=> bs!3022 m!63979))

(assert (=> bs!3022 m!63979))

(assert (=> bs!3022 m!63981))

(assert (=> bs!3022 m!63987))

(assert (=> d!14849 d!15521))

(declare-fun d!15523 () Bool)

(declare-fun res!37504 () Bool)

(declare-fun e!45814 () Bool)

(assert (=> d!15523 (=> res!37504 e!45814)))

(assert (=> d!15523 (= res!37504 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2065 (_keys!3810 newMap!16))))))

(assert (=> d!15523 (= (arrayNoDuplicates!0 (_keys!3810 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!9812 (Cons!1467 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000) Nil!1468) Nil!1468)) e!45814)))

(declare-fun b!70014 () Bool)

(declare-fun e!45817 () Bool)

(declare-fun call!6004 () Bool)

(assert (=> b!70014 (= e!45817 call!6004)))

(declare-fun b!70015 () Bool)

(declare-fun e!45816 () Bool)

(assert (=> b!70015 (= e!45816 (contains!712 (ite c!9812 (Cons!1467 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000) Nil!1468) Nil!1468) (select (arr!1828 (_keys!3810 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun bm!6001 () Bool)

(declare-fun c!10094 () Bool)

(assert (=> bm!6001 (= call!6004 (arrayNoDuplicates!0 (_keys!3810 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!10094 (Cons!1467 (select (arr!1828 (_keys!3810 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!9812 (Cons!1467 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000) Nil!1468) Nil!1468)) (ite c!9812 (Cons!1467 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000) Nil!1468) Nil!1468))))))

(declare-fun b!70016 () Bool)

(declare-fun e!45815 () Bool)

(assert (=> b!70016 (= e!45814 e!45815)))

(declare-fun res!37503 () Bool)

(assert (=> b!70016 (=> (not res!37503) (not e!45815))))

(assert (=> b!70016 (= res!37503 (not e!45816))))

(declare-fun res!37502 () Bool)

(assert (=> b!70016 (=> (not res!37502) (not e!45816))))

(assert (=> b!70016 (= res!37502 (validKeyInArray!0 (select (arr!1828 (_keys!3810 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!70017 () Bool)

(assert (=> b!70017 (= e!45815 e!45817)))

(assert (=> b!70017 (= c!10094 (validKeyInArray!0 (select (arr!1828 (_keys!3810 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!70018 () Bool)

(assert (=> b!70018 (= e!45817 call!6004)))

(assert (= (and d!15523 (not res!37504)) b!70016))

(assert (= (and b!70016 res!37502) b!70015))

(assert (= (and b!70016 res!37503) b!70017))

(assert (= (and b!70017 c!10094) b!70014))

(assert (= (and b!70017 (not c!10094)) b!70018))

(assert (= (or b!70014 b!70018) bm!6001))

(assert (=> b!70015 m!65281))

(assert (=> b!70015 m!65281))

(declare-fun m!66799 () Bool)

(assert (=> b!70015 m!66799))

(assert (=> bm!6001 m!65281))

(declare-fun m!66801 () Bool)

(assert (=> bm!6001 m!66801))

(assert (=> b!70016 m!65281))

(assert (=> b!70016 m!65281))

(assert (=> b!70016 m!66029))

(assert (=> b!70017 m!65281))

(assert (=> b!70017 m!65281))

(assert (=> b!70017 m!66029))

(assert (=> bm!5893 d!15523))

(assert (=> bm!5907 d!15359))

(declare-fun b!70021 () Bool)

(declare-fun e!45819 () Option!135)

(assert (=> b!70021 (= e!45819 (getValueByKey!129 (t!4964 (t!4964 (toList!708 lt!29853))) (_1!1056 lt!29680)))))

(declare-fun b!70019 () Bool)

(declare-fun e!45818 () Option!135)

(assert (=> b!70019 (= e!45818 (Some!134 (_2!1056 (h!2051 (t!4964 (toList!708 lt!29853))))))))

(declare-fun b!70022 () Bool)

(assert (=> b!70022 (= e!45819 None!133)))

(declare-fun d!15525 () Bool)

(declare-fun c!10095 () Bool)

(assert (=> d!15525 (= c!10095 (and ((_ is Cons!1466) (t!4964 (toList!708 lt!29853))) (= (_1!1056 (h!2051 (t!4964 (toList!708 lt!29853)))) (_1!1056 lt!29680))))))

(assert (=> d!15525 (= (getValueByKey!129 (t!4964 (toList!708 lt!29853)) (_1!1056 lt!29680)) e!45818)))

(declare-fun b!70020 () Bool)

(assert (=> b!70020 (= e!45818 e!45819)))

(declare-fun c!10096 () Bool)

(assert (=> b!70020 (= c!10096 (and ((_ is Cons!1466) (t!4964 (toList!708 lt!29853))) (not (= (_1!1056 (h!2051 (t!4964 (toList!708 lt!29853)))) (_1!1056 lt!29680)))))))

(assert (= (and d!15525 c!10095) b!70019))

(assert (= (and d!15525 (not c!10095)) b!70020))

(assert (= (and b!70020 c!10096) b!70021))

(assert (= (and b!70020 (not c!10096)) b!70022))

(declare-fun m!66803 () Bool)

(assert (=> b!70021 m!66803))

(assert (=> b!68943 d!15525))

(declare-fun d!15527 () Bool)

(declare-fun res!37505 () Bool)

(declare-fun e!45820 () Bool)

(assert (=> d!15527 (=> res!37505 e!45820)))

(assert (=> d!15527 (= res!37505 (and ((_ is Cons!1466) lt!30351) (= (_1!1056 (h!2051 lt!30351)) (_1!1056 lt!29680))))))

(assert (=> d!15527 (= (containsKey!133 lt!30351 (_1!1056 lt!29680)) e!45820)))

(declare-fun b!70023 () Bool)

(declare-fun e!45821 () Bool)

(assert (=> b!70023 (= e!45820 e!45821)))

(declare-fun res!37506 () Bool)

(assert (=> b!70023 (=> (not res!37506) (not e!45821))))

(assert (=> b!70023 (= res!37506 (and (or (not ((_ is Cons!1466) lt!30351)) (bvsle (_1!1056 (h!2051 lt!30351)) (_1!1056 lt!29680))) ((_ is Cons!1466) lt!30351) (bvslt (_1!1056 (h!2051 lt!30351)) (_1!1056 lt!29680))))))

(declare-fun b!70024 () Bool)

(assert (=> b!70024 (= e!45821 (containsKey!133 (t!4964 lt!30351) (_1!1056 lt!29680)))))

(assert (= (and d!15527 (not res!37505)) b!70023))

(assert (= (and b!70023 res!37506) b!70024))

(declare-fun m!66805 () Bool)

(assert (=> b!70024 m!66805))

(assert (=> b!69137 d!15527))

(declare-fun d!15529 () Bool)

(declare-fun e!45822 () Bool)

(assert (=> d!15529 e!45822))

(declare-fun res!37507 () Bool)

(assert (=> d!15529 (=> (not res!37507) (not e!45822))))

(declare-fun lt!30856 () ListLongMap!1385)

(assert (=> d!15529 (= res!37507 (contains!709 lt!30856 (_1!1056 (ite (or c!9749 c!9746) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))))))))

(declare-fun lt!30854 () List!1470)

(assert (=> d!15529 (= lt!30856 (ListLongMap!1386 lt!30854))))

(declare-fun lt!30853 () Unit!1898)

(declare-fun lt!30855 () Unit!1898)

(assert (=> d!15529 (= lt!30853 lt!30855)))

(assert (=> d!15529 (= (getValueByKey!129 lt!30854 (_1!1056 (ite (or c!9749 c!9746) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))))) (Some!134 (_2!1056 (ite (or c!9749 c!9746) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))))))))

(assert (=> d!15529 (= lt!30855 (lemmaContainsTupThenGetReturnValue!49 lt!30854 (_1!1056 (ite (or c!9749 c!9746) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))) (_2!1056 (ite (or c!9749 c!9746) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))))))))

(assert (=> d!15529 (= lt!30854 (insertStrictlySorted!52 (toList!708 (ite c!9749 call!5866 (ite c!9746 call!5863 call!5861))) (_1!1056 (ite (or c!9749 c!9746) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))) (_2!1056 (ite (or c!9749 c!9746) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))))))))

(assert (=> d!15529 (= (+!89 (ite c!9749 call!5866 (ite c!9746 call!5863 call!5861)) (ite (or c!9749 c!9746) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))) lt!30856)))

(declare-fun b!70025 () Bool)

(declare-fun res!37508 () Bool)

(assert (=> b!70025 (=> (not res!37508) (not e!45822))))

(assert (=> b!70025 (= res!37508 (= (getValueByKey!129 (toList!708 lt!30856) (_1!1056 (ite (or c!9749 c!9746) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))))) (Some!134 (_2!1056 (ite (or c!9749 c!9746) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))))))))

(declare-fun b!70026 () Bool)

(assert (=> b!70026 (= e!45822 (contains!711 (toList!708 lt!30856) (ite (or c!9749 c!9746) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 newMap!16)) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))))))

(assert (= (and d!15529 res!37507) b!70025))

(assert (= (and b!70025 res!37508) b!70026))

(declare-fun m!66807 () Bool)

(assert (=> d!15529 m!66807))

(declare-fun m!66809 () Bool)

(assert (=> d!15529 m!66809))

(declare-fun m!66811 () Bool)

(assert (=> d!15529 m!66811))

(declare-fun m!66813 () Bool)

(assert (=> d!15529 m!66813))

(declare-fun m!66815 () Bool)

(assert (=> b!70025 m!66815))

(declare-fun m!66817 () Bool)

(assert (=> b!70026 m!66817))

(assert (=> bm!5859 d!15529))

(assert (=> bm!5894 d!15195))

(declare-fun d!15531 () Bool)

(assert (=> d!15531 (isDefined!83 (getValueByKey!129 (toList!708 e!44955) (ite c!9713 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (select (arr!1828 (_keys!3810 newMap!16)) (index!3078 lt!29944)))))))

(declare-fun lt!30857 () Unit!1898)

(assert (=> d!15531 (= lt!30857 (choose!399 (toList!708 e!44955) (ite c!9713 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (select (arr!1828 (_keys!3810 newMap!16)) (index!3078 lt!29944)))))))

(declare-fun e!45823 () Bool)

(assert (=> d!15531 e!45823))

(declare-fun res!37509 () Bool)

(assert (=> d!15531 (=> (not res!37509) (not e!45823))))

(assert (=> d!15531 (= res!37509 (isStrictlySorted!285 (toList!708 e!44955)))))

(assert (=> d!15531 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 e!44955) (ite c!9713 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (select (arr!1828 (_keys!3810 newMap!16)) (index!3078 lt!29944)))) lt!30857)))

(declare-fun b!70027 () Bool)

(assert (=> b!70027 (= e!45823 (containsKey!133 (toList!708 e!44955) (ite c!9713 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (select (arr!1828 (_keys!3810 newMap!16)) (index!3078 lt!29944)))))))

(assert (= (and d!15531 res!37509) b!70027))

(assert (=> d!15531 m!64987))

(assert (=> d!15531 m!64987))

(assert (=> d!15531 m!64989))

(declare-fun m!66819 () Bool)

(assert (=> d!15531 m!66819))

(declare-fun m!66821 () Bool)

(assert (=> d!15531 m!66821))

(assert (=> b!70027 m!64983))

(assert (=> b!69114 d!15531))

(assert (=> b!69114 d!15311))

(assert (=> b!69114 d!15313))

(declare-fun d!15533 () Bool)

(declare-fun lt!30858 () Bool)

(assert (=> d!15533 (= lt!30858 (select (content!73 lt!29866) (tuple2!2091 (_1!1056 lt!29680) (_2!1056 lt!29680))))))

(declare-fun e!45825 () Bool)

(assert (=> d!15533 (= lt!30858 e!45825)))

(declare-fun res!37511 () Bool)

(assert (=> d!15533 (=> (not res!37511) (not e!45825))))

(assert (=> d!15533 (= res!37511 ((_ is Cons!1466) lt!29866))))

(assert (=> d!15533 (= (contains!711 lt!29866 (tuple2!2091 (_1!1056 lt!29680) (_2!1056 lt!29680))) lt!30858)))

(declare-fun b!70028 () Bool)

(declare-fun e!45824 () Bool)

(assert (=> b!70028 (= e!45825 e!45824)))

(declare-fun res!37510 () Bool)

(assert (=> b!70028 (=> res!37510 e!45824)))

(assert (=> b!70028 (= res!37510 (= (h!2051 lt!29866) (tuple2!2091 (_1!1056 lt!29680) (_2!1056 lt!29680))))))

(declare-fun b!70029 () Bool)

(assert (=> b!70029 (= e!45824 (contains!711 (t!4964 lt!29866) (tuple2!2091 (_1!1056 lt!29680) (_2!1056 lt!29680))))))

(assert (= (and d!15533 res!37511) b!70028))

(assert (= (and b!70028 (not res!37510)) b!70029))

(declare-fun m!66823 () Bool)

(assert (=> d!15533 m!66823))

(declare-fun m!66825 () Bool)

(assert (=> d!15533 m!66825))

(declare-fun m!66827 () Bool)

(assert (=> b!70029 m!66827))

(assert (=> b!68707 d!15533))

(declare-fun d!15535 () Bool)

(declare-fun e!45827 () Bool)

(assert (=> d!15535 e!45827))

(declare-fun res!37512 () Bool)

(assert (=> d!15535 (=> res!37512 e!45827)))

(declare-fun lt!30862 () Bool)

(assert (=> d!15535 (= res!37512 (not lt!30862))))

(declare-fun lt!30861 () Bool)

(assert (=> d!15535 (= lt!30862 lt!30861)))

(declare-fun lt!30860 () Unit!1898)

(declare-fun e!45826 () Unit!1898)

(assert (=> d!15535 (= lt!30860 e!45826)))

(declare-fun c!10097 () Bool)

(assert (=> d!15535 (= c!10097 lt!30861)))

(assert (=> d!15535 (= lt!30861 (containsKey!133 (toList!708 lt!30304) (_1!1056 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(assert (=> d!15535 (= (contains!709 lt!30304 (_1!1056 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))) lt!30862)))

(declare-fun b!70030 () Bool)

(declare-fun lt!30859 () Unit!1898)

(assert (=> b!70030 (= e!45826 lt!30859)))

(assert (=> b!70030 (= lt!30859 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 lt!30304) (_1!1056 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(assert (=> b!70030 (isDefined!83 (getValueByKey!129 (toList!708 lt!30304) (_1!1056 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(declare-fun b!70031 () Bool)

(declare-fun Unit!1967 () Unit!1898)

(assert (=> b!70031 (= e!45826 Unit!1967)))

(declare-fun b!70032 () Bool)

(assert (=> b!70032 (= e!45827 (isDefined!83 (getValueByKey!129 (toList!708 lt!30304) (_1!1056 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(assert (= (and d!15535 c!10097) b!70030))

(assert (= (and d!15535 (not c!10097)) b!70031))

(assert (= (and d!15535 (not res!37512)) b!70032))

(declare-fun m!66829 () Bool)

(assert (=> d!15535 m!66829))

(declare-fun m!66831 () Bool)

(assert (=> b!70030 m!66831))

(assert (=> b!70030 m!64887))

(assert (=> b!70030 m!64887))

(declare-fun m!66833 () Bool)

(assert (=> b!70030 m!66833))

(assert (=> b!70032 m!64887))

(assert (=> b!70032 m!64887))

(assert (=> b!70032 m!66833))

(assert (=> d!14867 d!15535))

(declare-fun b!70035 () Bool)

(declare-fun e!45829 () Option!135)

(assert (=> b!70035 (= e!45829 (getValueByKey!129 (t!4964 lt!30302) (_1!1056 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(declare-fun b!70033 () Bool)

(declare-fun e!45828 () Option!135)

(assert (=> b!70033 (= e!45828 (Some!134 (_2!1056 (h!2051 lt!30302))))))

(declare-fun b!70036 () Bool)

(assert (=> b!70036 (= e!45829 None!133)))

(declare-fun c!10098 () Bool)

(declare-fun d!15537 () Bool)

(assert (=> d!15537 (= c!10098 (and ((_ is Cons!1466) lt!30302) (= (_1!1056 (h!2051 lt!30302)) (_1!1056 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(assert (=> d!15537 (= (getValueByKey!129 lt!30302 (_1!1056 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))) e!45828)))

(declare-fun b!70034 () Bool)

(assert (=> b!70034 (= e!45828 e!45829)))

(declare-fun c!10099 () Bool)

(assert (=> b!70034 (= c!10099 (and ((_ is Cons!1466) lt!30302) (not (= (_1!1056 (h!2051 lt!30302)) (_1!1056 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))))

(assert (= (and d!15537 c!10098) b!70033))

(assert (= (and d!15537 (not c!10098)) b!70034))

(assert (= (and b!70034 c!10099) b!70035))

(assert (= (and b!70034 (not c!10099)) b!70036))

(declare-fun m!66835 () Bool)

(assert (=> b!70035 m!66835))

(assert (=> d!14867 d!15537))

(declare-fun d!15539 () Bool)

(assert (=> d!15539 (= (getValueByKey!129 lt!30302 (_1!1056 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))) (Some!134 (_2!1056 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(declare-fun lt!30863 () Unit!1898)

(assert (=> d!15539 (= lt!30863 (choose!390 lt!30302 (_1!1056 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))) (_2!1056 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(declare-fun e!45830 () Bool)

(assert (=> d!15539 e!45830))

(declare-fun res!37513 () Bool)

(assert (=> d!15539 (=> (not res!37513) (not e!45830))))

(assert (=> d!15539 (= res!37513 (isStrictlySorted!285 lt!30302))))

(assert (=> d!15539 (= (lemmaContainsTupThenGetReturnValue!49 lt!30302 (_1!1056 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))) (_2!1056 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))) lt!30863)))

(declare-fun b!70037 () Bool)

(declare-fun res!37514 () Bool)

(assert (=> b!70037 (=> (not res!37514) (not e!45830))))

(assert (=> b!70037 (= res!37514 (containsKey!133 lt!30302 (_1!1056 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(declare-fun b!70038 () Bool)

(assert (=> b!70038 (= e!45830 (contains!711 lt!30302 (tuple2!2091 (_1!1056 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))) (_2!1056 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(assert (= (and d!15539 res!37513) b!70037))

(assert (= (and b!70037 res!37514) b!70038))

(assert (=> d!15539 m!64881))

(declare-fun m!66837 () Bool)

(assert (=> d!15539 m!66837))

(declare-fun m!66839 () Bool)

(assert (=> d!15539 m!66839))

(declare-fun m!66841 () Bool)

(assert (=> b!70037 m!66841))

(declare-fun m!66843 () Bool)

(assert (=> b!70038 m!66843))

(assert (=> d!14867 d!15539))

(declare-fun b!70039 () Bool)

(declare-fun e!45834 () List!1470)

(declare-fun call!6006 () List!1470)

(assert (=> b!70039 (= e!45834 call!6006)))

(declare-fun c!10100 () Bool)

(declare-fun b!70040 () Bool)

(assert (=> b!70040 (= c!10100 (and ((_ is Cons!1466) (toList!708 lt!29799)) (bvsgt (_1!1056 (h!2051 (toList!708 lt!29799))) (_1!1056 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(declare-fun e!45832 () List!1470)

(assert (=> b!70040 (= e!45832 e!45834)))

(declare-fun b!70041 () Bool)

(assert (=> b!70041 (= e!45834 call!6006)))

(declare-fun b!70043 () Bool)

(declare-fun call!6005 () List!1470)

(assert (=> b!70043 (= e!45832 call!6005)))

(declare-fun bm!6002 () Bool)

(declare-fun call!6007 () List!1470)

(assert (=> bm!6002 (= call!6005 call!6007)))

(declare-fun bm!6003 () Bool)

(assert (=> bm!6003 (= call!6006 call!6005)))

(declare-fun b!70044 () Bool)

(declare-fun e!45831 () List!1470)

(assert (=> b!70044 (= e!45831 e!45832)))

(declare-fun c!10101 () Bool)

(assert (=> b!70044 (= c!10101 (and ((_ is Cons!1466) (toList!708 lt!29799)) (= (_1!1056 (h!2051 (toList!708 lt!29799))) (_1!1056 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(declare-fun e!45833 () List!1470)

(declare-fun bm!6004 () Bool)

(declare-fun c!10103 () Bool)

(assert (=> bm!6004 (= call!6007 ($colon$colon!63 e!45833 (ite c!10103 (h!2051 (toList!708 lt!29799)) (tuple2!2091 (_1!1056 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))) (_2!1056 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))))

(declare-fun c!10102 () Bool)

(assert (=> bm!6004 (= c!10102 c!10103)))

(declare-fun b!70045 () Bool)

(declare-fun res!37516 () Bool)

(declare-fun e!45835 () Bool)

(assert (=> b!70045 (=> (not res!37516) (not e!45835))))

(declare-fun lt!30864 () List!1470)

(assert (=> b!70045 (= res!37516 (containsKey!133 lt!30864 (_1!1056 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(declare-fun b!70046 () Bool)

(assert (=> b!70046 (= e!45835 (contains!711 lt!30864 (tuple2!2091 (_1!1056 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))) (_2!1056 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(declare-fun b!70047 () Bool)

(assert (=> b!70047 (= e!45833 (ite c!10101 (t!4964 (toList!708 lt!29799)) (ite c!10100 (Cons!1466 (h!2051 (toList!708 lt!29799)) (t!4964 (toList!708 lt!29799))) Nil!1467)))))

(declare-fun b!70048 () Bool)

(assert (=> b!70048 (= e!45831 call!6007)))

(declare-fun d!15541 () Bool)

(assert (=> d!15541 e!45835))

(declare-fun res!37515 () Bool)

(assert (=> d!15541 (=> (not res!37515) (not e!45835))))

(assert (=> d!15541 (= res!37515 (isStrictlySorted!285 lt!30864))))

(assert (=> d!15541 (= lt!30864 e!45831)))

(assert (=> d!15541 (= c!10103 (and ((_ is Cons!1466) (toList!708 lt!29799)) (bvslt (_1!1056 (h!2051 (toList!708 lt!29799))) (_1!1056 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(assert (=> d!15541 (isStrictlySorted!285 (toList!708 lt!29799))))

(assert (=> d!15541 (= (insertStrictlySorted!52 (toList!708 lt!29799) (_1!1056 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))) (_2!1056 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))) lt!30864)))

(declare-fun b!70042 () Bool)

(assert (=> b!70042 (= e!45833 (insertStrictlySorted!52 (t!4964 (toList!708 lt!29799)) (_1!1056 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))) (_2!1056 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(assert (= (and d!15541 c!10103) b!70048))

(assert (= (and d!15541 (not c!10103)) b!70044))

(assert (= (and b!70044 c!10101) b!70043))

(assert (= (and b!70044 (not c!10101)) b!70040))

(assert (= (and b!70040 c!10100) b!70041))

(assert (= (and b!70040 (not c!10100)) b!70039))

(assert (= (or b!70041 b!70039) bm!6003))

(assert (= (or b!70043 bm!6003) bm!6002))

(assert (= (or b!70048 bm!6002) bm!6004))

(assert (= (and bm!6004 c!10102) b!70042))

(assert (= (and bm!6004 (not c!10102)) b!70047))

(assert (= (and d!15541 res!37515) b!70045))

(assert (= (and b!70045 res!37516) b!70046))

(declare-fun m!66845 () Bool)

(assert (=> d!15541 m!66845))

(declare-fun m!66847 () Bool)

(assert (=> d!15541 m!66847))

(declare-fun m!66849 () Bool)

(assert (=> b!70046 m!66849))

(declare-fun m!66851 () Bool)

(assert (=> b!70045 m!66851))

(declare-fun m!66853 () Bool)

(assert (=> bm!6004 m!66853))

(declare-fun m!66855 () Bool)

(assert (=> b!70042 m!66855))

(assert (=> d!14867 d!15541))

(declare-fun d!15543 () Bool)

(assert (=> d!15543 (isDefined!83 (getValueByKey!129 (toList!708 lt!29835) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!30865 () Unit!1898)

(assert (=> d!15543 (= lt!30865 (choose!399 (toList!708 lt!29835) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!45836 () Bool)

(assert (=> d!15543 e!45836))

(declare-fun res!37517 () Bool)

(assert (=> d!15543 (=> (not res!37517) (not e!45836))))

(assert (=> d!15543 (= res!37517 (isStrictlySorted!285 (toList!708 lt!29835)))))

(assert (=> d!15543 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 lt!29835) #b0000000000000000000000000000000000000000000000000000000000000000) lt!30865)))

(declare-fun b!70049 () Bool)

(assert (=> b!70049 (= e!45836 (containsKey!133 (toList!708 lt!29835) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!15543 res!37517) b!70049))

(assert (=> d!15543 m!64777))

(assert (=> d!15543 m!64777))

(assert (=> d!15543 m!64779))

(declare-fun m!66857 () Bool)

(assert (=> d!15543 m!66857))

(assert (=> d!15543 m!65087))

(assert (=> b!70049 m!64773))

(assert (=> b!69047 d!15543))

(assert (=> b!69047 d!15323))

(assert (=> b!69047 d!15325))

(assert (=> d!14775 d!14773))

(assert (=> d!14775 d!14777))

(declare-fun d!15545 () Bool)

(assert (=> d!15545 (not (contains!709 (+!89 lt!29838 (tuple2!2091 lt!29837 lt!29836)) lt!29839))))

(assert (=> d!15545 true))

(declare-fun _$36!295 () Unit!1898)

(assert (=> d!15545 (= (choose!392 lt!29838 lt!29837 lt!29836 lt!29839) _$36!295)))

(declare-fun bs!3023 () Bool)

(assert (= bs!3023 d!15545))

(assert (=> bs!3023 m!64015))

(assert (=> bs!3023 m!64015))

(assert (=> bs!3023 m!64017))

(assert (=> d!14775 d!15545))

(declare-fun d!15547 () Bool)

(declare-fun e!45838 () Bool)

(assert (=> d!15547 e!45838))

(declare-fun res!37518 () Bool)

(assert (=> d!15547 (=> res!37518 e!45838)))

(declare-fun lt!30869 () Bool)

(assert (=> d!15547 (= res!37518 (not lt!30869))))

(declare-fun lt!30868 () Bool)

(assert (=> d!15547 (= lt!30869 lt!30868)))

(declare-fun lt!30867 () Unit!1898)

(declare-fun e!45837 () Unit!1898)

(assert (=> d!15547 (= lt!30867 e!45837)))

(declare-fun c!10104 () Bool)

(assert (=> d!15547 (= c!10104 lt!30868)))

(assert (=> d!15547 (= lt!30868 (containsKey!133 (toList!708 lt!29838) lt!29839))))

(assert (=> d!15547 (= (contains!709 lt!29838 lt!29839) lt!30869)))

(declare-fun b!70051 () Bool)

(declare-fun lt!30866 () Unit!1898)

(assert (=> b!70051 (= e!45837 lt!30866)))

(assert (=> b!70051 (= lt!30866 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 lt!29838) lt!29839))))

(assert (=> b!70051 (isDefined!83 (getValueByKey!129 (toList!708 lt!29838) lt!29839))))

(declare-fun b!70052 () Bool)

(declare-fun Unit!1968 () Unit!1898)

(assert (=> b!70052 (= e!45837 Unit!1968)))

(declare-fun b!70053 () Bool)

(assert (=> b!70053 (= e!45838 (isDefined!83 (getValueByKey!129 (toList!708 lt!29838) lt!29839)))))

(assert (= (and d!15547 c!10104) b!70051))

(assert (= (and d!15547 (not c!10104)) b!70052))

(assert (= (and d!15547 (not res!37518)) b!70053))

(declare-fun m!66859 () Bool)

(assert (=> d!15547 m!66859))

(declare-fun m!66861 () Bool)

(assert (=> b!70051 m!66861))

(declare-fun m!66863 () Bool)

(assert (=> b!70051 m!66863))

(assert (=> b!70051 m!66863))

(declare-fun m!66865 () Bool)

(assert (=> b!70051 m!66865))

(assert (=> b!70053 m!66863))

(assert (=> b!70053 m!66863))

(assert (=> b!70053 m!66865))

(assert (=> d!14775 d!15547))

(declare-fun d!15549 () Bool)

(assert (=> d!15549 (= (isDefined!83 (getValueByKey!129 (toList!708 lt!29805) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!316 (getValueByKey!129 (toList!708 lt!29805) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3024 () Bool)

(assert (= bs!3024 d!15549))

(assert (=> bs!3024 m!64359))

(declare-fun m!66867 () Bool)

(assert (=> bs!3024 m!66867))

(assert (=> b!69046 d!15549))

(assert (=> b!69046 d!15485))

(declare-fun b!70054 () Bool)

(declare-fun e!45842 () List!1470)

(declare-fun call!6009 () List!1470)

(assert (=> b!70054 (= e!45842 call!6009)))

(declare-fun b!70055 () Bool)

(declare-fun c!10105 () Bool)

(assert (=> b!70055 (= c!10105 (and ((_ is Cons!1466) (t!4964 (toList!708 (+!89 lt!29682 lt!29680)))) (bvsgt (_1!1056 (h!2051 (t!4964 (toList!708 (+!89 lt!29682 lt!29680))))) (_1!1056 lt!29675))))))

(declare-fun e!45840 () List!1470)

(assert (=> b!70055 (= e!45840 e!45842)))

(declare-fun b!70056 () Bool)

(assert (=> b!70056 (= e!45842 call!6009)))

(declare-fun b!70058 () Bool)

(declare-fun call!6008 () List!1470)

(assert (=> b!70058 (= e!45840 call!6008)))

(declare-fun bm!6005 () Bool)

(declare-fun call!6010 () List!1470)

(assert (=> bm!6005 (= call!6008 call!6010)))

(declare-fun bm!6006 () Bool)

(assert (=> bm!6006 (= call!6009 call!6008)))

(declare-fun b!70059 () Bool)

(declare-fun e!45839 () List!1470)

(assert (=> b!70059 (= e!45839 e!45840)))

(declare-fun c!10106 () Bool)

(assert (=> b!70059 (= c!10106 (and ((_ is Cons!1466) (t!4964 (toList!708 (+!89 lt!29682 lt!29680)))) (= (_1!1056 (h!2051 (t!4964 (toList!708 (+!89 lt!29682 lt!29680))))) (_1!1056 lt!29675))))))

(declare-fun e!45841 () List!1470)

(declare-fun bm!6007 () Bool)

(declare-fun c!10108 () Bool)

(assert (=> bm!6007 (= call!6010 ($colon$colon!63 e!45841 (ite c!10108 (h!2051 (t!4964 (toList!708 (+!89 lt!29682 lt!29680)))) (tuple2!2091 (_1!1056 lt!29675) (_2!1056 lt!29675)))))))

(declare-fun c!10107 () Bool)

(assert (=> bm!6007 (= c!10107 c!10108)))

(declare-fun b!70060 () Bool)

(declare-fun res!37520 () Bool)

(declare-fun e!45843 () Bool)

(assert (=> b!70060 (=> (not res!37520) (not e!45843))))

(declare-fun lt!30870 () List!1470)

(assert (=> b!70060 (= res!37520 (containsKey!133 lt!30870 (_1!1056 lt!29675)))))

(declare-fun b!70061 () Bool)

(assert (=> b!70061 (= e!45843 (contains!711 lt!30870 (tuple2!2091 (_1!1056 lt!29675) (_2!1056 lt!29675))))))

(declare-fun b!70062 () Bool)

(assert (=> b!70062 (= e!45841 (ite c!10106 (t!4964 (t!4964 (toList!708 (+!89 lt!29682 lt!29680)))) (ite c!10105 (Cons!1466 (h!2051 (t!4964 (toList!708 (+!89 lt!29682 lt!29680)))) (t!4964 (t!4964 (toList!708 (+!89 lt!29682 lt!29680))))) Nil!1467)))))

(declare-fun b!70063 () Bool)

(assert (=> b!70063 (= e!45839 call!6010)))

(declare-fun d!15551 () Bool)

(assert (=> d!15551 e!45843))

(declare-fun res!37519 () Bool)

(assert (=> d!15551 (=> (not res!37519) (not e!45843))))

(assert (=> d!15551 (= res!37519 (isStrictlySorted!285 lt!30870))))

(assert (=> d!15551 (= lt!30870 e!45839)))

(assert (=> d!15551 (= c!10108 (and ((_ is Cons!1466) (t!4964 (toList!708 (+!89 lt!29682 lt!29680)))) (bvslt (_1!1056 (h!2051 (t!4964 (toList!708 (+!89 lt!29682 lt!29680))))) (_1!1056 lt!29675))))))

(assert (=> d!15551 (isStrictlySorted!285 (t!4964 (toList!708 (+!89 lt!29682 lt!29680))))))

(assert (=> d!15551 (= (insertStrictlySorted!52 (t!4964 (toList!708 (+!89 lt!29682 lt!29680))) (_1!1056 lt!29675) (_2!1056 lt!29675)) lt!30870)))

(declare-fun b!70057 () Bool)

(assert (=> b!70057 (= e!45841 (insertStrictlySorted!52 (t!4964 (t!4964 (toList!708 (+!89 lt!29682 lt!29680)))) (_1!1056 lt!29675) (_2!1056 lt!29675)))))

(assert (= (and d!15551 c!10108) b!70063))

(assert (= (and d!15551 (not c!10108)) b!70059))

(assert (= (and b!70059 c!10106) b!70058))

(assert (= (and b!70059 (not c!10106)) b!70055))

(assert (= (and b!70055 c!10105) b!70056))

(assert (= (and b!70055 (not c!10105)) b!70054))

(assert (= (or b!70056 b!70054) bm!6006))

(assert (= (or b!70058 bm!6006) bm!6005))

(assert (= (or b!70063 bm!6005) bm!6007))

(assert (= (and bm!6007 c!10107) b!70057))

(assert (= (and bm!6007 (not c!10107)) b!70062))

(assert (= (and d!15551 res!37519) b!70060))

(assert (= (and b!70060 res!37520) b!70061))

(declare-fun m!66869 () Bool)

(assert (=> d!15551 m!66869))

(assert (=> d!15551 m!65039))

(declare-fun m!66871 () Bool)

(assert (=> b!70061 m!66871))

(declare-fun m!66873 () Bool)

(assert (=> b!70060 m!66873))

(declare-fun m!66875 () Bool)

(assert (=> bm!6007 m!66875))

(declare-fun m!66877 () Bool)

(assert (=> b!70057 m!66877))

(assert (=> b!68960 d!15551))

(declare-fun d!15553 () Bool)

(declare-fun lt!30871 () Bool)

(assert (=> d!15553 (= lt!30871 (select (content!73 (toList!708 lt!30054)) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))))

(declare-fun e!45845 () Bool)

(assert (=> d!15553 (= lt!30871 e!45845)))

(declare-fun res!37522 () Bool)

(assert (=> d!15553 (=> (not res!37522) (not e!45845))))

(assert (=> d!15553 (= res!37522 ((_ is Cons!1466) (toList!708 lt!30054)))))

(assert (=> d!15553 (= (contains!711 (toList!708 lt!30054) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))) lt!30871)))

(declare-fun b!70064 () Bool)

(declare-fun e!45844 () Bool)

(assert (=> b!70064 (= e!45845 e!45844)))

(declare-fun res!37521 () Bool)

(assert (=> b!70064 (=> res!37521 e!45844)))

(assert (=> b!70064 (= res!37521 (= (h!2051 (toList!708 lt!30054)) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))))

(declare-fun b!70065 () Bool)

(assert (=> b!70065 (= e!45844 (contains!711 (t!4964 (toList!708 lt!30054)) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))))

(assert (= (and d!15553 res!37522) b!70064))

(assert (= (and b!70064 (not res!37521)) b!70065))

(declare-fun m!66879 () Bool)

(assert (=> d!15553 m!66879))

(declare-fun m!66881 () Bool)

(assert (=> d!15553 m!66881))

(declare-fun m!66883 () Bool)

(assert (=> b!70065 m!66883))

(assert (=> b!68792 d!15553))

(declare-fun d!15555 () Bool)

(declare-fun res!37523 () Bool)

(declare-fun e!45846 () Bool)

(assert (=> d!15555 (=> res!37523 e!45846)))

(assert (=> d!15555 (= res!37523 (and ((_ is Cons!1466) lt!29855) (= (_1!1056 (h!2051 lt!29855)) (_1!1056 lt!29675))))))

(assert (=> d!15555 (= (containsKey!133 lt!29855 (_1!1056 lt!29675)) e!45846)))

(declare-fun b!70066 () Bool)

(declare-fun e!45847 () Bool)

(assert (=> b!70066 (= e!45846 e!45847)))

(declare-fun res!37524 () Bool)

(assert (=> b!70066 (=> (not res!37524) (not e!45847))))

(assert (=> b!70066 (= res!37524 (and (or (not ((_ is Cons!1466) lt!29855)) (bvsle (_1!1056 (h!2051 lt!29855)) (_1!1056 lt!29675))) ((_ is Cons!1466) lt!29855) (bvslt (_1!1056 (h!2051 lt!29855)) (_1!1056 lt!29675))))))

(declare-fun b!70067 () Bool)

(assert (=> b!70067 (= e!45847 (containsKey!133 (t!4964 lt!29855) (_1!1056 lt!29675)))))

(assert (= (and d!15555 (not res!37523)) b!70066))

(assert (= (and b!70066 res!37524) b!70067))

(declare-fun m!66885 () Bool)

(assert (=> b!70067 m!66885))

(assert (=> b!68840 d!15555))

(assert (=> d!14705 d!14745))

(declare-fun b!70084 () Bool)

(declare-fun res!37536 () Bool)

(declare-fun lt!30874 () SeekEntryResult!237)

(assert (=> b!70084 (= res!37536 (= (select (arr!1828 (_keys!3810 newMap!16)) (index!3077 lt!30874)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!45856 () Bool)

(assert (=> b!70084 (=> (not res!37536) (not e!45856))))

(declare-fun b!70085 () Bool)

(declare-fun res!37533 () Bool)

(declare-fun e!45857 () Bool)

(assert (=> b!70085 (=> (not res!37533) (not e!45857))))

(declare-fun call!6015 () Bool)

(assert (=> b!70085 (= res!37533 call!6015)))

(declare-fun e!45859 () Bool)

(assert (=> b!70085 (= e!45859 e!45857)))

(declare-fun b!70086 () Bool)

(declare-fun call!6016 () Bool)

(assert (=> b!70086 (= e!45857 (not call!6016))))

(declare-fun b!70087 () Bool)

(assert (=> b!70087 (= e!45856 (not call!6016))))

(declare-fun b!70088 () Bool)

(declare-fun e!45858 () Bool)

(assert (=> b!70088 (= e!45858 e!45859)))

(declare-fun c!10113 () Bool)

(assert (=> b!70088 (= c!10113 ((_ is MissingVacant!237) lt!30874))))

(declare-fun bm!6012 () Bool)

(assert (=> bm!6012 (= call!6016 (arrayContainsKey!0 (_keys!3810 newMap!16) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun bm!6013 () Bool)

(declare-fun c!10114 () Bool)

(assert (=> bm!6013 (= call!6015 (inRange!0 (ite c!10114 (index!3077 lt!30874) (index!3080 lt!30874)) (mask!6111 newMap!16)))))

(declare-fun b!70089 () Bool)

(assert (=> b!70089 (= e!45859 ((_ is Undefined!237) lt!30874))))

(declare-fun d!15557 () Bool)

(assert (=> d!15557 e!45858))

(assert (=> d!15557 (= c!10114 ((_ is MissingZero!237) lt!30874))))

(assert (=> d!15557 (= lt!30874 (seekEntryOrOpen!0 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (_keys!3810 newMap!16) (mask!6111 newMap!16)))))

(assert (=> d!15557 true))

(declare-fun _$34!796 () Unit!1898)

(assert (=> d!15557 (= (choose!389 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (defaultEntry!2167 newMap!16)) _$34!796)))

(declare-fun b!70090 () Bool)

(assert (=> b!70090 (= e!45858 e!45856)))

(declare-fun res!37534 () Bool)

(assert (=> b!70090 (= res!37534 call!6015)))

(assert (=> b!70090 (=> (not res!37534) (not e!45856))))

(declare-fun b!70091 () Bool)

(declare-fun res!37535 () Bool)

(assert (=> b!70091 (=> (not res!37535) (not e!45857))))

(assert (=> b!70091 (= res!37535 (= (select (arr!1828 (_keys!3810 newMap!16)) (index!3080 lt!30874)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!15557 c!10114) b!70090))

(assert (= (and d!15557 (not c!10114)) b!70088))

(assert (= (and b!70090 res!37534) b!70084))

(assert (= (and b!70084 res!37536) b!70087))

(assert (= (and b!70088 c!10113) b!70085))

(assert (= (and b!70088 (not c!10113)) b!70089))

(assert (= (and b!70085 res!37533) b!70091))

(assert (= (and b!70091 res!37535) b!70086))

(assert (= (or b!70090 b!70085) bm!6013))

(assert (= (or b!70087 b!70086) bm!6012))

(assert (=> d!15557 m!63767))

(assert (=> d!15557 m!64121))

(declare-fun m!66887 () Bool)

(assert (=> b!70091 m!66887))

(declare-fun m!66889 () Bool)

(assert (=> b!70084 m!66889))

(declare-fun m!66891 () Bool)

(assert (=> bm!6013 m!66891))

(assert (=> bm!6012 m!63767))

(assert (=> bm!6012 m!64141))

(assert (=> d!14705 d!15557))

(assert (=> d!14705 d!15017))

(declare-fun d!15559 () Bool)

(declare-fun e!45860 () Bool)

(assert (=> d!15559 e!45860))

(declare-fun res!37537 () Bool)

(assert (=> d!15559 (=> (not res!37537) (not e!45860))))

(declare-fun lt!30878 () ListLongMap!1385)

(assert (=> d!15559 (= res!37537 (contains!709 lt!30878 (_1!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16))))))))

(declare-fun lt!30876 () List!1470)

(assert (=> d!15559 (= lt!30878 (ListLongMap!1386 lt!30876))))

(declare-fun lt!30875 () Unit!1898)

(declare-fun lt!30877 () Unit!1898)

(assert (=> d!15559 (= lt!30875 lt!30877)))

(assert (=> d!15559 (= (getValueByKey!129 lt!30876 (_1!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16))))) (Some!134 (_2!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16))))))))

(assert (=> d!15559 (= lt!30877 (lemmaContainsTupThenGetReturnValue!49 lt!30876 (_1!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16)))) (_2!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16))))))))

(assert (=> d!15559 (= lt!30876 (insertStrictlySorted!52 (toList!708 call!5872) (_1!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16)))) (_2!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16))))))))

(assert (=> d!15559 (= (+!89 call!5872 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16)))) lt!30878)))

(declare-fun b!70092 () Bool)

(declare-fun res!37538 () Bool)

(assert (=> b!70092 (=> (not res!37538) (not e!45860))))

(assert (=> b!70092 (= res!37538 (= (getValueByKey!129 (toList!708 lt!30878) (_1!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16))))) (Some!134 (_2!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16)))))))))

(declare-fun b!70093 () Bool)

(assert (=> b!70093 (= e!45860 (contains!711 (toList!708 lt!30878) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16)))))))

(assert (= (and d!15559 res!37537) b!70092))

(assert (= (and b!70092 res!37538) b!70093))

(declare-fun m!66893 () Bool)

(assert (=> d!15559 m!66893))

(declare-fun m!66895 () Bool)

(assert (=> d!15559 m!66895))

(declare-fun m!66897 () Bool)

(assert (=> d!15559 m!66897))

(declare-fun m!66899 () Bool)

(assert (=> d!15559 m!66899))

(declare-fun m!66901 () Bool)

(assert (=> b!70092 m!66901))

(declare-fun m!66903 () Bool)

(assert (=> b!70093 m!66903))

(assert (=> b!68782 d!15559))

(declare-fun d!15561 () Bool)

(assert (=> d!15561 (arrayContainsKey!0 (_keys!3810 newMap!16) lt!29979 #b00000000000000000000000000000000)))

(declare-fun lt!30879 () Unit!1898)

(assert (=> d!15561 (= lt!30879 (choose!13 (_keys!3810 newMap!16) lt!29979 #b00000000000000000000000000000000))))

(assert (=> d!15561 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!15561 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3810 newMap!16) lt!29979 #b00000000000000000000000000000000) lt!30879)))

(declare-fun bs!3025 () Bool)

(assert (= bs!3025 d!15561))

(assert (=> bs!3025 m!64181))

(declare-fun m!66905 () Bool)

(assert (=> bs!3025 m!66905))

(assert (=> b!68660 d!15561))

(declare-fun d!15563 () Bool)

(declare-fun res!37539 () Bool)

(declare-fun e!45861 () Bool)

(assert (=> d!15563 (=> res!37539 e!45861)))

(assert (=> d!15563 (= res!37539 (= (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000) lt!29979))))

(assert (=> d!15563 (= (arrayContainsKey!0 (_keys!3810 newMap!16) lt!29979 #b00000000000000000000000000000000) e!45861)))

(declare-fun b!70094 () Bool)

(declare-fun e!45862 () Bool)

(assert (=> b!70094 (= e!45861 e!45862)))

(declare-fun res!37540 () Bool)

(assert (=> b!70094 (=> (not res!37540) (not e!45862))))

(assert (=> b!70094 (= res!37540 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2065 (_keys!3810 newMap!16))))))

(declare-fun b!70095 () Bool)

(assert (=> b!70095 (= e!45862 (arrayContainsKey!0 (_keys!3810 newMap!16) lt!29979 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!15563 (not res!37539)) b!70094))

(assert (= (and b!70094 res!37540) b!70095))

(assert (=> d!15563 m!64177))

(declare-fun m!66907 () Bool)

(assert (=> b!70095 m!66907))

(assert (=> b!68660 d!15563))

(declare-fun b!70096 () Bool)

(declare-fun e!45865 () SeekEntryResult!237)

(declare-fun e!45863 () SeekEntryResult!237)

(assert (=> b!70096 (= e!45865 e!45863)))

(declare-fun lt!30882 () (_ BitVec 64))

(declare-fun lt!30881 () SeekEntryResult!237)

(assert (=> b!70096 (= lt!30882 (select (arr!1828 (_keys!3810 newMap!16)) (index!3079 lt!30881)))))

(declare-fun c!10117 () Bool)

(assert (=> b!70096 (= c!10117 (= lt!30882 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!70097 () Bool)

(assert (=> b!70097 (= e!45863 (Found!237 (index!3079 lt!30881)))))

(declare-fun b!70098 () Bool)

(declare-fun c!10115 () Bool)

(assert (=> b!70098 (= c!10115 (= lt!30882 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!45864 () SeekEntryResult!237)

(assert (=> b!70098 (= e!45863 e!45864)))

(declare-fun b!70099 () Bool)

(assert (=> b!70099 (= e!45864 (seekKeyOrZeroReturnVacant!0 (x!10850 lt!30881) (index!3079 lt!30881) (index!3079 lt!30881) (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000) (_keys!3810 newMap!16) (mask!6111 newMap!16)))))

(declare-fun b!70100 () Bool)

(assert (=> b!70100 (= e!45864 (MissingZero!237 (index!3079 lt!30881)))))

(declare-fun b!70101 () Bool)

(assert (=> b!70101 (= e!45865 Undefined!237)))

(declare-fun d!15565 () Bool)

(declare-fun lt!30880 () SeekEntryResult!237)

(assert (=> d!15565 (and (or ((_ is Undefined!237) lt!30880) (not ((_ is Found!237) lt!30880)) (and (bvsge (index!3078 lt!30880) #b00000000000000000000000000000000) (bvslt (index!3078 lt!30880) (size!2065 (_keys!3810 newMap!16))))) (or ((_ is Undefined!237) lt!30880) ((_ is Found!237) lt!30880) (not ((_ is MissingZero!237) lt!30880)) (and (bvsge (index!3077 lt!30880) #b00000000000000000000000000000000) (bvslt (index!3077 lt!30880) (size!2065 (_keys!3810 newMap!16))))) (or ((_ is Undefined!237) lt!30880) ((_ is Found!237) lt!30880) ((_ is MissingZero!237) lt!30880) (not ((_ is MissingVacant!237) lt!30880)) (and (bvsge (index!3080 lt!30880) #b00000000000000000000000000000000) (bvslt (index!3080 lt!30880) (size!2065 (_keys!3810 newMap!16))))) (or ((_ is Undefined!237) lt!30880) (ite ((_ is Found!237) lt!30880) (= (select (arr!1828 (_keys!3810 newMap!16)) (index!3078 lt!30880)) (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!237) lt!30880) (= (select (arr!1828 (_keys!3810 newMap!16)) (index!3077 lt!30880)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!237) lt!30880) (= (select (arr!1828 (_keys!3810 newMap!16)) (index!3080 lt!30880)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!15565 (= lt!30880 e!45865)))

(declare-fun c!10116 () Bool)

(assert (=> d!15565 (= c!10116 (and ((_ is Intermediate!237) lt!30881) (undefined!1049 lt!30881)))))

(assert (=> d!15565 (= lt!30881 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000) (mask!6111 newMap!16)) (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000) (_keys!3810 newMap!16) (mask!6111 newMap!16)))))

(assert (=> d!15565 (validMask!0 (mask!6111 newMap!16))))

(assert (=> d!15565 (= (seekEntryOrOpen!0 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000) (_keys!3810 newMap!16) (mask!6111 newMap!16)) lt!30880)))

(assert (= (and d!15565 c!10116) b!70101))

(assert (= (and d!15565 (not c!10116)) b!70096))

(assert (= (and b!70096 c!10117) b!70097))

(assert (= (and b!70096 (not c!10117)) b!70098))

(assert (= (and b!70098 c!10115) b!70100))

(assert (= (and b!70098 (not c!10115)) b!70099))

(declare-fun m!66909 () Bool)

(assert (=> b!70096 m!66909))

(assert (=> b!70099 m!64177))

(declare-fun m!66911 () Bool)

(assert (=> b!70099 m!66911))

(declare-fun m!66913 () Bool)

(assert (=> d!15565 m!66913))

(assert (=> d!15565 m!64177))

(declare-fun m!66915 () Bool)

(assert (=> d!15565 m!66915))

(declare-fun m!66917 () Bool)

(assert (=> d!15565 m!66917))

(assert (=> d!15565 m!64177))

(assert (=> d!15565 m!66913))

(assert (=> d!15565 m!64193))

(declare-fun m!66919 () Bool)

(assert (=> d!15565 m!66919))

(declare-fun m!66921 () Bool)

(assert (=> d!15565 m!66921))

(assert (=> b!68660 d!15565))

(declare-fun d!15567 () Bool)

(assert (=> d!15567 (contains!709 (getCurrentListMap!403 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355))))

(declare-fun lt!30885 () Unit!1898)

(declare-fun choose!401 (array!3831 array!3833 (_ BitVec 32) (_ BitVec 32) V!2921 V!2921 (_ BitVec 64) (_ BitVec 32) Int) Unit!1898)

(assert (=> d!15567 (= lt!30885 (choose!401 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)))))

(assert (=> d!15567 (validMask!0 (mask!6111 newMap!16))))

(assert (=> d!15567 (= (lemmaArrayContainsKeyThenInListMap!11 (_keys!3810 newMap!16) (_values!2150 newMap!16) (mask!6111 newMap!16) (extraKeys!2034 newMap!16) (zeroValue!2073 newMap!16) (minValue!2073 newMap!16) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2167 newMap!16)) lt!30885)))

(declare-fun bs!3026 () Bool)

(assert (= bs!3026 d!15567))

(assert (=> bs!3026 m!63945))

(assert (=> bs!3026 m!63945))

(assert (=> bs!3026 m!63767))

(assert (=> bs!3026 m!64581))

(assert (=> bs!3026 m!63767))

(declare-fun m!66923 () Bool)

(assert (=> bs!3026 m!66923))

(assert (=> bs!3026 m!64193))

(assert (=> b!68932 d!15567))

(assert (=> b!68932 d!15417))

(assert (=> b!68932 d!14883))

(declare-fun d!15569 () Bool)

(declare-fun res!37543 () Bool)

(declare-fun e!45866 () Bool)

(assert (=> d!15569 (=> res!37543 e!45866)))

(assert (=> d!15569 (= res!37543 (bvsge #b00000000000000000000000000000000 (size!2065 (_keys!3810 (_2!1057 lt!29959)))))))

(assert (=> d!15569 (= (arrayNoDuplicates!0 (_keys!3810 (_2!1057 lt!29959)) #b00000000000000000000000000000000 Nil!1468) e!45866)))

(declare-fun b!70102 () Bool)

(declare-fun e!45869 () Bool)

(declare-fun call!6017 () Bool)

(assert (=> b!70102 (= e!45869 call!6017)))

(declare-fun b!70103 () Bool)

(declare-fun e!45868 () Bool)

(assert (=> b!70103 (= e!45868 (contains!712 Nil!1468 (select (arr!1828 (_keys!3810 (_2!1057 lt!29959))) #b00000000000000000000000000000000)))))

(declare-fun bm!6014 () Bool)

(declare-fun c!10118 () Bool)

(assert (=> bm!6014 (= call!6017 (arrayNoDuplicates!0 (_keys!3810 (_2!1057 lt!29959)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!10118 (Cons!1467 (select (arr!1828 (_keys!3810 (_2!1057 lt!29959))) #b00000000000000000000000000000000) Nil!1468) Nil!1468)))))

(declare-fun b!70104 () Bool)

(declare-fun e!45867 () Bool)

(assert (=> b!70104 (= e!45866 e!45867)))

(declare-fun res!37542 () Bool)

(assert (=> b!70104 (=> (not res!37542) (not e!45867))))

(assert (=> b!70104 (= res!37542 (not e!45868))))

(declare-fun res!37541 () Bool)

(assert (=> b!70104 (=> (not res!37541) (not e!45868))))

(assert (=> b!70104 (= res!37541 (validKeyInArray!0 (select (arr!1828 (_keys!3810 (_2!1057 lt!29959))) #b00000000000000000000000000000000)))))

(declare-fun b!70105 () Bool)

(assert (=> b!70105 (= e!45867 e!45869)))

(assert (=> b!70105 (= c!10118 (validKeyInArray!0 (select (arr!1828 (_keys!3810 (_2!1057 lt!29959))) #b00000000000000000000000000000000)))))

(declare-fun b!70106 () Bool)

(assert (=> b!70106 (= e!45869 call!6017)))

(assert (= (and d!15569 (not res!37543)) b!70104))

(assert (= (and b!70104 res!37541) b!70103))

(assert (= (and b!70104 res!37542) b!70105))

(assert (= (and b!70105 c!10118) b!70102))

(assert (= (and b!70105 (not c!10118)) b!70106))

(assert (= (or b!70102 b!70106) bm!6014))

(assert (=> b!70103 m!66707))

(assert (=> b!70103 m!66707))

(declare-fun m!66925 () Bool)

(assert (=> b!70103 m!66925))

(assert (=> bm!6014 m!66707))

(declare-fun m!66927 () Bool)

(assert (=> bm!6014 m!66927))

(assert (=> b!70104 m!66707))

(assert (=> b!70104 m!66707))

(assert (=> b!70104 m!66717))

(assert (=> b!70105 m!66707))

(assert (=> b!70105 m!66707))

(assert (=> b!70105 m!66717))

(assert (=> b!68801 d!15569))

(declare-fun d!15571 () Bool)

(declare-fun e!45871 () Bool)

(assert (=> d!15571 e!45871))

(declare-fun res!37544 () Bool)

(assert (=> d!15571 (=> res!37544 e!45871)))

(declare-fun lt!30889 () Bool)

(assert (=> d!15571 (= res!37544 (not lt!30889))))

(declare-fun lt!30888 () Bool)

(assert (=> d!15571 (= lt!30889 lt!30888)))

(declare-fun lt!30887 () Unit!1898)

(declare-fun e!45870 () Unit!1898)

(assert (=> d!15571 (= lt!30887 e!45870)))

(declare-fun c!10119 () Bool)

(assert (=> d!15571 (= c!10119 lt!30888)))

(assert (=> d!15571 (= lt!30888 (containsKey!133 (toList!708 lt!30315) (_1!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(assert (=> d!15571 (= (contains!709 lt!30315 (_1!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))) lt!30889)))

(declare-fun b!70107 () Bool)

(declare-fun lt!30886 () Unit!1898)

(assert (=> b!70107 (= e!45870 lt!30886)))

(assert (=> b!70107 (= lt!30886 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 lt!30315) (_1!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(assert (=> b!70107 (isDefined!83 (getValueByKey!129 (toList!708 lt!30315) (_1!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(declare-fun b!70108 () Bool)

(declare-fun Unit!1969 () Unit!1898)

(assert (=> b!70108 (= e!45870 Unit!1969)))

(declare-fun b!70109 () Bool)

(assert (=> b!70109 (= e!45871 (isDefined!83 (getValueByKey!129 (toList!708 lt!30315) (_1!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(assert (= (and d!15571 c!10119) b!70107))

(assert (= (and d!15571 (not c!10119)) b!70108))

(assert (= (and d!15571 (not res!37544)) b!70109))

(declare-fun m!66929 () Bool)

(assert (=> d!15571 m!66929))

(declare-fun m!66931 () Bool)

(assert (=> b!70107 m!66931))

(assert (=> b!70107 m!64925))

(assert (=> b!70107 m!64925))

(declare-fun m!66933 () Bool)

(assert (=> b!70107 m!66933))

(assert (=> b!70109 m!64925))

(assert (=> b!70109 m!64925))

(assert (=> b!70109 m!66933))

(assert (=> d!14877 d!15571))

(declare-fun b!70112 () Bool)

(declare-fun e!45873 () Option!135)

(assert (=> b!70112 (= e!45873 (getValueByKey!129 (t!4964 lt!30313) (_1!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(declare-fun b!70110 () Bool)

(declare-fun e!45872 () Option!135)

(assert (=> b!70110 (= e!45872 (Some!134 (_2!1056 (h!2051 lt!30313))))))

(declare-fun b!70113 () Bool)

(assert (=> b!70113 (= e!45873 None!133)))

(declare-fun d!15573 () Bool)

(declare-fun c!10120 () Bool)

(assert (=> d!15573 (= c!10120 (and ((_ is Cons!1466) lt!30313) (= (_1!1056 (h!2051 lt!30313)) (_1!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(assert (=> d!15573 (= (getValueByKey!129 lt!30313 (_1!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))) e!45872)))

(declare-fun b!70111 () Bool)

(assert (=> b!70111 (= e!45872 e!45873)))

(declare-fun c!10121 () Bool)

(assert (=> b!70111 (= c!10121 (and ((_ is Cons!1466) lt!30313) (not (= (_1!1056 (h!2051 lt!30313)) (_1!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))))

(assert (= (and d!15573 c!10120) b!70110))

(assert (= (and d!15573 (not c!10120)) b!70111))

(assert (= (and b!70111 c!10121) b!70112))

(assert (= (and b!70111 (not c!10121)) b!70113))

(declare-fun m!66935 () Bool)

(assert (=> b!70112 m!66935))

(assert (=> d!14877 d!15573))

(declare-fun d!15575 () Bool)

(assert (=> d!15575 (= (getValueByKey!129 lt!30313 (_1!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))) (Some!134 (_2!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(declare-fun lt!30890 () Unit!1898)

(assert (=> d!15575 (= lt!30890 (choose!390 lt!30313 (_1!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992))))) (_2!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(declare-fun e!45874 () Bool)

(assert (=> d!15575 e!45874))

(declare-fun res!37545 () Bool)

(assert (=> d!15575 (=> (not res!37545) (not e!45874))))

(assert (=> d!15575 (= res!37545 (isStrictlySorted!285 lt!30313))))

(assert (=> d!15575 (= (lemmaContainsTupThenGetReturnValue!49 lt!30313 (_1!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992))))) (_2!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))) lt!30890)))

(declare-fun b!70114 () Bool)

(declare-fun res!37546 () Bool)

(assert (=> b!70114 (=> (not res!37546) (not e!45874))))

(assert (=> b!70114 (= res!37546 (containsKey!133 lt!30313 (_1!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(declare-fun b!70115 () Bool)

(assert (=> b!70115 (= e!45874 (contains!711 lt!30313 (tuple2!2091 (_1!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992))))) (_2!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(assert (= (and d!15575 res!37545) b!70114))

(assert (= (and b!70114 res!37546) b!70115))

(assert (=> d!15575 m!64919))

(declare-fun m!66937 () Bool)

(assert (=> d!15575 m!66937))

(declare-fun m!66939 () Bool)

(assert (=> d!15575 m!66939))

(declare-fun m!66941 () Bool)

(assert (=> b!70114 m!66941))

(declare-fun m!66943 () Bool)

(assert (=> b!70115 m!66943))

(assert (=> d!14877 d!15575))

(declare-fun b!70116 () Bool)

(declare-fun e!45878 () List!1470)

(declare-fun call!6019 () List!1470)

(assert (=> b!70116 (= e!45878 call!6019)))

(declare-fun b!70117 () Bool)

(declare-fun c!10122 () Bool)

(assert (=> b!70117 (= c!10122 (and ((_ is Cons!1466) (toList!708 call!5762)) (bvsgt (_1!1056 (h!2051 (toList!708 call!5762))) (_1!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(declare-fun e!45876 () List!1470)

(assert (=> b!70117 (= e!45876 e!45878)))

(declare-fun b!70118 () Bool)

(assert (=> b!70118 (= e!45878 call!6019)))

(declare-fun b!70120 () Bool)

(declare-fun call!6018 () List!1470)

(assert (=> b!70120 (= e!45876 call!6018)))

(declare-fun bm!6015 () Bool)

(declare-fun call!6020 () List!1470)

(assert (=> bm!6015 (= call!6018 call!6020)))

(declare-fun bm!6016 () Bool)

(assert (=> bm!6016 (= call!6019 call!6018)))

(declare-fun b!70121 () Bool)

(declare-fun e!45875 () List!1470)

(assert (=> b!70121 (= e!45875 e!45876)))

(declare-fun c!10123 () Bool)

(assert (=> b!70121 (= c!10123 (and ((_ is Cons!1466) (toList!708 call!5762)) (= (_1!1056 (h!2051 (toList!708 call!5762))) (_1!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(declare-fun c!10125 () Bool)

(declare-fun bm!6017 () Bool)

(declare-fun e!45877 () List!1470)

(assert (=> bm!6017 (= call!6020 ($colon$colon!63 e!45877 (ite c!10125 (h!2051 (toList!708 call!5762)) (tuple2!2091 (_1!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992))))) (_2!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))))

(declare-fun c!10124 () Bool)

(assert (=> bm!6017 (= c!10124 c!10125)))

(declare-fun b!70122 () Bool)

(declare-fun res!37548 () Bool)

(declare-fun e!45879 () Bool)

(assert (=> b!70122 (=> (not res!37548) (not e!45879))))

(declare-fun lt!30891 () List!1470)

(assert (=> b!70122 (= res!37548 (containsKey!133 lt!30891 (_1!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(declare-fun b!70123 () Bool)

(assert (=> b!70123 (= e!45879 (contains!711 lt!30891 (tuple2!2091 (_1!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992))))) (_2!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(declare-fun b!70124 () Bool)

(assert (=> b!70124 (= e!45877 (ite c!10123 (t!4964 (toList!708 call!5762)) (ite c!10122 (Cons!1466 (h!2051 (toList!708 call!5762)) (t!4964 (toList!708 call!5762))) Nil!1467)))))

(declare-fun b!70125 () Bool)

(assert (=> b!70125 (= e!45875 call!6020)))

(declare-fun d!15577 () Bool)

(assert (=> d!15577 e!45879))

(declare-fun res!37547 () Bool)

(assert (=> d!15577 (=> (not res!37547) (not e!45879))))

(assert (=> d!15577 (= res!37547 (isStrictlySorted!285 lt!30891))))

(assert (=> d!15577 (= lt!30891 e!45875)))

(assert (=> d!15577 (= c!10125 (and ((_ is Cons!1466) (toList!708 call!5762)) (bvslt (_1!1056 (h!2051 (toList!708 call!5762))) (_1!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(assert (=> d!15577 (isStrictlySorted!285 (toList!708 call!5762))))

(assert (=> d!15577 (= (insertStrictlySorted!52 (toList!708 call!5762) (_1!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992))))) (_2!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))) lt!30891)))

(declare-fun b!70119 () Bool)

(assert (=> b!70119 (= e!45877 (insertStrictlySorted!52 (t!4964 (toList!708 call!5762)) (_1!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992))))) (_2!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(assert (= (and d!15577 c!10125) b!70125))

(assert (= (and d!15577 (not c!10125)) b!70121))

(assert (= (and b!70121 c!10123) b!70120))

(assert (= (and b!70121 (not c!10123)) b!70117))

(assert (= (and b!70117 c!10122) b!70118))

(assert (= (and b!70117 (not c!10122)) b!70116))

(assert (= (or b!70118 b!70116) bm!6016))

(assert (= (or b!70120 bm!6016) bm!6015))

(assert (= (or b!70125 bm!6015) bm!6017))

(assert (= (and bm!6017 c!10124) b!70119))

(assert (= (and bm!6017 (not c!10124)) b!70124))

(assert (= (and d!15577 res!37547) b!70122))

(assert (= (and b!70122 res!37548) b!70123))

(declare-fun m!66945 () Bool)

(assert (=> d!15577 m!66945))

(declare-fun m!66947 () Bool)

(assert (=> d!15577 m!66947))

(declare-fun m!66949 () Bool)

(assert (=> b!70123 m!66949))

(declare-fun m!66951 () Bool)

(assert (=> b!70122 m!66951))

(declare-fun m!66953 () Bool)

(assert (=> bm!6017 m!66953))

(declare-fun m!66955 () Bool)

(assert (=> b!70119 m!66955))

(assert (=> d!14877 d!15577))

(declare-fun d!15579 () Bool)

(declare-fun e!45880 () Bool)

(assert (=> d!15579 e!45880))

(declare-fun res!37549 () Bool)

(assert (=> d!15579 (=> (not res!37549) (not e!45880))))

(declare-fun lt!30895 () ListLongMap!1385)

(assert (=> d!15579 (= res!37549 (contains!709 lt!30895 (_1!1056 (ite (or c!9755 c!9752) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9716 c!9712) lt!29673 (zeroValue!2073 newMap!16))) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16)))))))))

(declare-fun lt!30893 () List!1470)

(assert (=> d!15579 (= lt!30895 (ListLongMap!1386 lt!30893))))

(declare-fun lt!30892 () Unit!1898)

(declare-fun lt!30894 () Unit!1898)

(assert (=> d!15579 (= lt!30892 lt!30894)))

(assert (=> d!15579 (= (getValueByKey!129 lt!30893 (_1!1056 (ite (or c!9755 c!9752) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9716 c!9712) lt!29673 (zeroValue!2073 newMap!16))) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16)))))) (Some!134 (_2!1056 (ite (or c!9755 c!9752) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9716 c!9712) lt!29673 (zeroValue!2073 newMap!16))) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16)))))))))

(assert (=> d!15579 (= lt!30894 (lemmaContainsTupThenGetReturnValue!49 lt!30893 (_1!1056 (ite (or c!9755 c!9752) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9716 c!9712) lt!29673 (zeroValue!2073 newMap!16))) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16))))) (_2!1056 (ite (or c!9755 c!9752) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9716 c!9712) lt!29673 (zeroValue!2073 newMap!16))) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16)))))))))

(assert (=> d!15579 (= lt!30893 (insertStrictlySorted!52 (toList!708 (ite c!9755 call!5873 (ite c!9752 call!5870 call!5868))) (_1!1056 (ite (or c!9755 c!9752) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9716 c!9712) lt!29673 (zeroValue!2073 newMap!16))) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16))))) (_2!1056 (ite (or c!9755 c!9752) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9716 c!9712) lt!29673 (zeroValue!2073 newMap!16))) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16)))))))))

(assert (=> d!15579 (= (+!89 (ite c!9755 call!5873 (ite c!9752 call!5870 call!5868)) (ite (or c!9755 c!9752) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9716 c!9712) lt!29673 (zeroValue!2073 newMap!16))) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16))))) lt!30895)))

(declare-fun b!70126 () Bool)

(declare-fun res!37550 () Bool)

(assert (=> b!70126 (=> (not res!37550) (not e!45880))))

(assert (=> b!70126 (= res!37550 (= (getValueByKey!129 (toList!708 lt!30895) (_1!1056 (ite (or c!9755 c!9752) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9716 c!9712) lt!29673 (zeroValue!2073 newMap!16))) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16)))))) (Some!134 (_2!1056 (ite (or c!9755 c!9752) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9716 c!9712) lt!29673 (zeroValue!2073 newMap!16))) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16))))))))))

(declare-fun b!70127 () Bool)

(assert (=> b!70127 (= e!45880 (contains!711 (toList!708 lt!30895) (ite (or c!9755 c!9752) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9716 c!9712) lt!29673 (zeroValue!2073 newMap!16))) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9716 (ite c!9712 (minValue!2073 newMap!16) lt!29673) (minValue!2073 newMap!16))))))))

(assert (= (and d!15579 res!37549) b!70126))

(assert (= (and b!70126 res!37550) b!70127))

(declare-fun m!66957 () Bool)

(assert (=> d!15579 m!66957))

(declare-fun m!66959 () Bool)

(assert (=> d!15579 m!66959))

(declare-fun m!66961 () Bool)

(assert (=> d!15579 m!66961))

(declare-fun m!66963 () Bool)

(assert (=> d!15579 m!66963))

(declare-fun m!66965 () Bool)

(assert (=> b!70126 m!66965))

(declare-fun m!66967 () Bool)

(assert (=> b!70127 m!66967))

(assert (=> bm!5866 d!15579))

(assert (=> b!69038 d!15475))

(declare-fun d!15581 () Bool)

(declare-fun e!45882 () Bool)

(assert (=> d!15581 e!45882))

(declare-fun res!37551 () Bool)

(assert (=> d!15581 (=> res!37551 e!45882)))

(declare-fun lt!30899 () Bool)

(assert (=> d!15581 (= res!37551 (not lt!30899))))

(declare-fun lt!30898 () Bool)

(assert (=> d!15581 (= lt!30899 lt!30898)))

(declare-fun lt!30897 () Unit!1898)

(declare-fun e!45881 () Unit!1898)

(assert (=> d!15581 (= lt!30897 e!45881)))

(declare-fun c!10126 () Bool)

(assert (=> d!15581 (= c!10126 lt!30898)))

(assert (=> d!15581 (= lt!30898 (containsKey!133 (toList!708 lt!30322) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!15581 (= (contains!709 lt!30322 #b0000000000000000000000000000000000000000000000000000000000000000) lt!30899)))

(declare-fun b!70128 () Bool)

(declare-fun lt!30896 () Unit!1898)

(assert (=> b!70128 (= e!45881 lt!30896)))

(assert (=> b!70128 (= lt!30896 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 lt!30322) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!70128 (isDefined!83 (getValueByKey!129 (toList!708 lt!30322) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!70129 () Bool)

(declare-fun Unit!1970 () Unit!1898)

(assert (=> b!70129 (= e!45881 Unit!1970)))

(declare-fun b!70130 () Bool)

(assert (=> b!70130 (= e!45882 (isDefined!83 (getValueByKey!129 (toList!708 lt!30322) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15581 c!10126) b!70128))

(assert (= (and d!15581 (not c!10126)) b!70129))

(assert (= (and d!15581 (not res!37551)) b!70130))

(declare-fun m!66969 () Bool)

(assert (=> d!15581 m!66969))

(declare-fun m!66971 () Bool)

(assert (=> b!70128 m!66971))

(declare-fun m!66973 () Bool)

(assert (=> b!70128 m!66973))

(assert (=> b!70128 m!66973))

(declare-fun m!66975 () Bool)

(assert (=> b!70128 m!66975))

(assert (=> b!70130 m!66973))

(assert (=> b!70130 m!66973))

(assert (=> b!70130 m!66975))

(assert (=> bm!5909 d!15581))

(declare-fun d!15583 () Bool)

(declare-fun res!37552 () Bool)

(declare-fun e!45883 () Bool)

(assert (=> d!15583 (=> res!37552 e!45883)))

(assert (=> d!15583 (= res!37552 (and ((_ is Cons!1466) (toList!708 call!5832)) (= (_1!1056 (h!2051 (toList!708 call!5832))) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355))))))

(assert (=> d!15583 (= (containsKey!133 (toList!708 call!5832) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)) e!45883)))

(declare-fun b!70131 () Bool)

(declare-fun e!45884 () Bool)

(assert (=> b!70131 (= e!45883 e!45884)))

(declare-fun res!37553 () Bool)

(assert (=> b!70131 (=> (not res!37553) (not e!45884))))

(assert (=> b!70131 (= res!37553 (and (or (not ((_ is Cons!1466) (toList!708 call!5832))) (bvsle (_1!1056 (h!2051 (toList!708 call!5832))) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355))) ((_ is Cons!1466) (toList!708 call!5832)) (bvslt (_1!1056 (h!2051 (toList!708 call!5832))) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355))))))

(declare-fun b!70132 () Bool)

(assert (=> b!70132 (= e!45884 (containsKey!133 (t!4964 (toList!708 call!5832)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355)))))

(assert (= (and d!15583 (not res!37552)) b!70131))

(assert (= (and b!70131 res!37553) b!70132))

(assert (=> b!70132 m!63767))

(declare-fun m!66977 () Bool)

(assert (=> b!70132 m!66977))

(assert (=> d!14771 d!15583))

(declare-fun d!15585 () Bool)

(assert (=> d!15585 (= (isEmpty!314 lt!30226) (isEmpty!315 (toList!708 lt!30226)))))

(declare-fun bs!3027 () Bool)

(assert (= bs!3027 d!15585))

(declare-fun m!66979 () Bool)

(assert (=> bs!3027 m!66979))

(assert (=> b!68987 d!15585))

(declare-fun b!70135 () Bool)

(declare-fun e!45886 () Option!135)

(assert (=> b!70135 (= e!45886 (getValueByKey!129 (t!4964 (t!4964 (toList!708 lt!29857))) (_1!1056 lt!29675)))))

(declare-fun b!70133 () Bool)

(declare-fun e!45885 () Option!135)

(assert (=> b!70133 (= e!45885 (Some!134 (_2!1056 (h!2051 (t!4964 (toList!708 lt!29857))))))))

(declare-fun b!70136 () Bool)

(assert (=> b!70136 (= e!45886 None!133)))

(declare-fun d!15587 () Bool)

(declare-fun c!10127 () Bool)

(assert (=> d!15587 (= c!10127 (and ((_ is Cons!1466) (t!4964 (toList!708 lt!29857))) (= (_1!1056 (h!2051 (t!4964 (toList!708 lt!29857)))) (_1!1056 lt!29675))))))

(assert (=> d!15587 (= (getValueByKey!129 (t!4964 (toList!708 lt!29857)) (_1!1056 lt!29675)) e!45885)))

(declare-fun b!70134 () Bool)

(assert (=> b!70134 (= e!45885 e!45886)))

(declare-fun c!10128 () Bool)

(assert (=> b!70134 (= c!10128 (and ((_ is Cons!1466) (t!4964 (toList!708 lt!29857))) (not (= (_1!1056 (h!2051 (t!4964 (toList!708 lt!29857)))) (_1!1056 lt!29675)))))))

(assert (= (and d!15587 c!10127) b!70133))

(assert (= (and d!15587 (not c!10127)) b!70134))

(assert (= (and b!70134 c!10128) b!70135))

(assert (= (and b!70134 (not c!10128)) b!70136))

(declare-fun m!66981 () Bool)

(assert (=> b!70135 m!66981))

(assert (=> b!69013 d!15587))

(declare-fun b!70139 () Bool)

(declare-fun e!45888 () Option!135)

(assert (=> b!70139 (= e!45888 (getValueByKey!129 (t!4964 (toList!708 lt!30304)) (_1!1056 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(declare-fun b!70137 () Bool)

(declare-fun e!45887 () Option!135)

(assert (=> b!70137 (= e!45887 (Some!134 (_2!1056 (h!2051 (toList!708 lt!30304)))))))

(declare-fun b!70140 () Bool)

(assert (=> b!70140 (= e!45888 None!133)))

(declare-fun d!15589 () Bool)

(declare-fun c!10129 () Bool)

(assert (=> d!15589 (= c!10129 (and ((_ is Cons!1466) (toList!708 lt!30304)) (= (_1!1056 (h!2051 (toList!708 lt!30304))) (_1!1056 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(assert (=> d!15589 (= (getValueByKey!129 (toList!708 lt!30304) (_1!1056 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))) e!45887)))

(declare-fun b!70138 () Bool)

(assert (=> b!70138 (= e!45887 e!45888)))

(declare-fun c!10130 () Bool)

(assert (=> b!70138 (= c!10130 (and ((_ is Cons!1466) (toList!708 lt!30304)) (not (= (_1!1056 (h!2051 (toList!708 lt!30304))) (_1!1056 (tuple2!2091 lt!29803 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))))

(assert (= (and d!15589 c!10129) b!70137))

(assert (= (and d!15589 (not c!10129)) b!70138))

(assert (= (and b!70138 c!10130) b!70139))

(assert (= (and b!70138 (not c!10130)) b!70140))

(declare-fun m!66983 () Bool)

(assert (=> b!70139 m!66983))

(assert (=> b!69068 d!15589))

(declare-fun b!70141 () Bool)

(declare-fun res!37556 () Bool)

(declare-fun e!45889 () Bool)

(assert (=> b!70141 (=> (not res!37556) (not e!45889))))

(assert (=> b!70141 (= res!37556 (and (= (size!2066 (_values!2150 (v!2485 (underlying!247 thiss!992)))) (bvadd (mask!6111 (v!2485 (underlying!247 thiss!992))) #b00000000000000000000000000000001)) (= (size!2065 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (size!2066 (_values!2150 (v!2485 (underlying!247 thiss!992))))) (bvsge (_size!387 (v!2485 (underlying!247 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!387 (v!2485 (underlying!247 thiss!992))) (bvadd (mask!6111 (v!2485 (underlying!247 thiss!992))) #b00000000000000000000000000000001))))))

(declare-fun d!15591 () Bool)

(declare-fun res!37557 () Bool)

(assert (=> d!15591 (=> (not res!37557) (not e!45889))))

(assert (=> d!15591 (= res!37557 (validMask!0 (mask!6111 (v!2485 (underlying!247 thiss!992)))))))

(assert (=> d!15591 (= (simpleValid!49 (v!2485 (underlying!247 thiss!992))) e!45889)))

(declare-fun b!70144 () Bool)

(assert (=> b!70144 (= e!45889 (and (bvsge (extraKeys!2034 (v!2485 (underlying!247 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2034 (v!2485 (underlying!247 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!387 (v!2485 (underlying!247 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun b!70143 () Bool)

(declare-fun res!37555 () Bool)

(assert (=> b!70143 (=> (not res!37555) (not e!45889))))

(assert (=> b!70143 (= res!37555 (= (size!2071 (v!2485 (underlying!247 thiss!992))) (bvadd (_size!387 (v!2485 (underlying!247 thiss!992))) (bvsdiv (bvadd (extraKeys!2034 (v!2485 (underlying!247 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!70142 () Bool)

(declare-fun res!37554 () Bool)

(assert (=> b!70142 (=> (not res!37554) (not e!45889))))

(assert (=> b!70142 (= res!37554 (bvsge (size!2071 (v!2485 (underlying!247 thiss!992))) (_size!387 (v!2485 (underlying!247 thiss!992)))))))

(assert (= (and d!15591 res!37557) b!70141))

(assert (= (and b!70141 res!37556) b!70142))

(assert (= (and b!70142 res!37554) b!70143))

(assert (= (and b!70143 res!37555) b!70144))

(assert (=> d!15591 m!63787))

(declare-fun m!66985 () Bool)

(assert (=> b!70143 m!66985))

(assert (=> b!70142 m!66985))

(assert (=> d!14875 d!15591))

(declare-fun d!15593 () Bool)

(declare-fun res!37558 () Bool)

(declare-fun e!45890 () Bool)

(assert (=> d!15593 (=> res!37558 e!45890)))

(assert (=> d!15593 (= res!37558 (and ((_ is Cons!1466) (toList!708 e!44955)) (= (_1!1056 (h!2051 (toList!708 e!44955))) (ite c!9713 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (select (arr!1828 (_keys!3810 newMap!16)) (index!3078 lt!29944))))))))

(assert (=> d!15593 (= (containsKey!133 (toList!708 e!44955) (ite c!9713 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (select (arr!1828 (_keys!3810 newMap!16)) (index!3078 lt!29944)))) e!45890)))

(declare-fun b!70145 () Bool)

(declare-fun e!45891 () Bool)

(assert (=> b!70145 (= e!45890 e!45891)))

(declare-fun res!37559 () Bool)

(assert (=> b!70145 (=> (not res!37559) (not e!45891))))

(assert (=> b!70145 (= res!37559 (and (or (not ((_ is Cons!1466) (toList!708 e!44955))) (bvsle (_1!1056 (h!2051 (toList!708 e!44955))) (ite c!9713 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (select (arr!1828 (_keys!3810 newMap!16)) (index!3078 lt!29944))))) ((_ is Cons!1466) (toList!708 e!44955)) (bvslt (_1!1056 (h!2051 (toList!708 e!44955))) (ite c!9713 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (select (arr!1828 (_keys!3810 newMap!16)) (index!3078 lt!29944))))))))

(declare-fun b!70146 () Bool)

(assert (=> b!70146 (= e!45891 (containsKey!133 (t!4964 (toList!708 e!44955)) (ite c!9713 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) (select (arr!1828 (_keys!3810 newMap!16)) (index!3078 lt!29944)))))))

(assert (= (and d!15593 (not res!37558)) b!70145))

(assert (= (and b!70145 res!37559) b!70146))

(declare-fun m!66987 () Bool)

(assert (=> b!70146 m!66987))

(assert (=> d!14887 d!15593))

(declare-fun d!15595 () Bool)

(declare-fun res!37560 () Bool)

(declare-fun e!45892 () Bool)

(assert (=> d!15595 (=> res!37560 e!45892)))

(assert (=> d!15595 (= res!37560 (and ((_ is Cons!1466) (toList!708 lt!29835)) (= (_1!1056 (h!2051 (toList!708 lt!29835))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!15595 (= (containsKey!133 (toList!708 lt!29835) #b0000000000000000000000000000000000000000000000000000000000000000) e!45892)))

(declare-fun b!70147 () Bool)

(declare-fun e!45893 () Bool)

(assert (=> b!70147 (= e!45892 e!45893)))

(declare-fun res!37561 () Bool)

(assert (=> b!70147 (=> (not res!37561) (not e!45893))))

(assert (=> b!70147 (= res!37561 (and (or (not ((_ is Cons!1466) (toList!708 lt!29835))) (bvsle (_1!1056 (h!2051 (toList!708 lt!29835))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1466) (toList!708 lt!29835)) (bvslt (_1!1056 (h!2051 (toList!708 lt!29835))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!70148 () Bool)

(assert (=> b!70148 (= e!45893 (containsKey!133 (t!4964 (toList!708 lt!29835)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!15595 (not res!37560)) b!70147))

(assert (= (and b!70147 res!37561) b!70148))

(declare-fun m!66989 () Bool)

(assert (=> b!70148 m!66989))

(assert (=> d!14833 d!15595))

(declare-fun lt!30900 () Bool)

(declare-fun d!15597 () Bool)

(assert (=> d!15597 (= lt!30900 (select (content!73 (toList!708 lt!30284)) (tuple2!2091 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))))

(declare-fun e!45895 () Bool)

(assert (=> d!15597 (= lt!30900 e!45895)))

(declare-fun res!37563 () Bool)

(assert (=> d!15597 (=> (not res!37563) (not e!45895))))

(assert (=> d!15597 (= res!37563 ((_ is Cons!1466) (toList!708 lt!30284)))))

(assert (=> d!15597 (= (contains!711 (toList!708 lt!30284) (tuple2!2091 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992))))) lt!30900)))

(declare-fun b!70149 () Bool)

(declare-fun e!45894 () Bool)

(assert (=> b!70149 (= e!45895 e!45894)))

(declare-fun res!37562 () Bool)

(assert (=> b!70149 (=> res!37562 e!45894)))

(assert (=> b!70149 (= res!37562 (= (h!2051 (toList!708 lt!30284)) (tuple2!2091 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))))

(declare-fun b!70150 () Bool)

(assert (=> b!70150 (= e!45894 (contains!711 (t!4964 (toList!708 lt!30284)) (tuple2!2091 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))))

(assert (= (and d!15597 res!37563) b!70149))

(assert (= (and b!70149 (not res!37562)) b!70150))

(declare-fun m!66991 () Bool)

(assert (=> d!15597 m!66991))

(declare-fun m!66993 () Bool)

(assert (=> d!15597 m!66993))

(declare-fun m!66995 () Bool)

(assert (=> b!70150 m!66995))

(assert (=> b!69055 d!15597))

(declare-fun d!15599 () Bool)

(declare-fun e!45897 () Bool)

(assert (=> d!15599 e!45897))

(declare-fun res!37564 () Bool)

(assert (=> d!15599 (=> res!37564 e!45897)))

(declare-fun lt!30904 () Bool)

(assert (=> d!15599 (= res!37564 (not lt!30904))))

(declare-fun lt!30903 () Bool)

(assert (=> d!15599 (= lt!30904 lt!30903)))

(declare-fun lt!30902 () Unit!1898)

(declare-fun e!45896 () Unit!1898)

(assert (=> d!15599 (= lt!30902 e!45896)))

(declare-fun c!10131 () Bool)

(assert (=> d!15599 (= c!10131 lt!30903)))

(assert (=> d!15599 (= lt!30903 (containsKey!133 (toList!708 lt!30245) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!15599 (= (contains!709 lt!30245 #b1000000000000000000000000000000000000000000000000000000000000000) lt!30904)))

(declare-fun b!70151 () Bool)

(declare-fun lt!30901 () Unit!1898)

(assert (=> b!70151 (= e!45896 lt!30901)))

(assert (=> b!70151 (= lt!30901 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 lt!30245) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!70151 (isDefined!83 (getValueByKey!129 (toList!708 lt!30245) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!70152 () Bool)

(declare-fun Unit!1971 () Unit!1898)

(assert (=> b!70152 (= e!45896 Unit!1971)))

(declare-fun b!70153 () Bool)

(assert (=> b!70153 (= e!45897 (isDefined!83 (getValueByKey!129 (toList!708 lt!30245) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15599 c!10131) b!70151))

(assert (= (and d!15599 (not c!10131)) b!70152))

(assert (= (and d!15599 (not res!37564)) b!70153))

(declare-fun m!66997 () Bool)

(assert (=> d!15599 m!66997))

(declare-fun m!66999 () Bool)

(assert (=> b!70151 m!66999))

(assert (=> b!70151 m!65289))

(assert (=> b!70151 m!65289))

(declare-fun m!67001 () Bool)

(assert (=> b!70151 m!67001))

(assert (=> b!70153 m!65289))

(assert (=> b!70153 m!65289))

(assert (=> b!70153 m!67001))

(assert (=> bm!5895 d!15599))

(assert (=> b!68939 d!14919))

(declare-fun d!15601 () Bool)

(declare-fun e!45898 () Bool)

(assert (=> d!15601 e!45898))

(declare-fun res!37565 () Bool)

(assert (=> d!15601 (=> (not res!37565) (not e!45898))))

(declare-fun lt!30908 () ListLongMap!1385)

(assert (=> d!15601 (= res!37565 (contains!709 lt!30908 (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))

(declare-fun lt!30906 () List!1470)

(assert (=> d!15601 (= lt!30908 (ListLongMap!1386 lt!30906))))

(declare-fun lt!30905 () Unit!1898)

(declare-fun lt!30907 () Unit!1898)

(assert (=> d!15601 (= lt!30905 lt!30907)))

(assert (=> d!15601 (= (getValueByKey!129 lt!30906 (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))) (Some!134 (_2!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))

(assert (=> d!15601 (= lt!30907 (lemmaContainsTupThenGetReturnValue!49 lt!30906 (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)) (_2!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))

(assert (=> d!15601 (= lt!30906 (insertStrictlySorted!52 (toList!708 (map!1137 newMap!16)) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)) (_2!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))

(assert (=> d!15601 (= (+!89 (map!1137 newMap!16) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)) lt!30908)))

(declare-fun b!70154 () Bool)

(declare-fun res!37566 () Bool)

(assert (=> b!70154 (=> (not res!37566) (not e!45898))))

(assert (=> b!70154 (= res!37566 (= (getValueByKey!129 (toList!708 lt!30908) (_1!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))) (Some!134 (_2!1056 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))))))

(declare-fun b!70155 () Bool)

(assert (=> b!70155 (= e!45898 (contains!711 (toList!708 lt!30908) (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))))

(assert (= (and d!15601 res!37565) b!70154))

(assert (= (and b!70154 res!37566) b!70155))

(declare-fun m!67003 () Bool)

(assert (=> d!15601 m!67003))

(declare-fun m!67005 () Bool)

(assert (=> d!15601 m!67005))

(declare-fun m!67007 () Bool)

(assert (=> d!15601 m!67007))

(declare-fun m!67009 () Bool)

(assert (=> d!15601 m!67009))

(declare-fun m!67011 () Bool)

(assert (=> b!70154 m!67011))

(declare-fun m!67013 () Bool)

(assert (=> b!70155 m!67013))

(assert (=> b!68939 d!15601))

(assert (=> b!68939 d!14655))

(declare-fun b!70158 () Bool)

(declare-fun e!45900 () Option!135)

(assert (=> b!70158 (= e!45900 (getValueByKey!129 (t!4964 (toList!708 lt!30315)) (_1!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(declare-fun b!70156 () Bool)

(declare-fun e!45899 () Option!135)

(assert (=> b!70156 (= e!45899 (Some!134 (_2!1056 (h!2051 (toList!708 lt!30315)))))))

(declare-fun b!70159 () Bool)

(assert (=> b!70159 (= e!45900 None!133)))

(declare-fun d!15603 () Bool)

(declare-fun c!10132 () Bool)

(assert (=> d!15603 (= c!10132 (and ((_ is Cons!1466) (toList!708 lt!30315)) (= (_1!1056 (h!2051 (toList!708 lt!30315))) (_1!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(assert (=> d!15603 (= (getValueByKey!129 (toList!708 lt!30315) (_1!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))) e!45899)))

(declare-fun b!70157 () Bool)

(assert (=> b!70157 (= e!45899 e!45900)))

(declare-fun c!10133 () Bool)

(assert (=> b!70157 (= c!10133 (and ((_ is Cons!1466) (toList!708 lt!30315)) (not (= (_1!1056 (h!2051 (toList!708 lt!30315))) (_1!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))))

(assert (= (and d!15603 c!10132) b!70156))

(assert (= (and d!15603 (not c!10132)) b!70157))

(assert (= (and b!70157 c!10133) b!70158))

(assert (= (and b!70157 (not c!10133)) b!70159))

(declare-fun m!67015 () Bool)

(assert (=> b!70158 m!67015))

(assert (=> b!69075 d!15603))

(assert (=> b!68947 d!14935))

(assert (=> b!68947 d!14937))

(declare-fun d!15605 () Bool)

(declare-fun e!45902 () Bool)

(assert (=> d!15605 e!45902))

(declare-fun res!37567 () Bool)

(assert (=> d!15605 (=> res!37567 e!45902)))

(declare-fun lt!30912 () Bool)

(assert (=> d!15605 (= res!37567 (not lt!30912))))

(declare-fun lt!30911 () Bool)

(assert (=> d!15605 (= lt!30912 lt!30911)))

(declare-fun lt!30910 () Unit!1898)

(declare-fun e!45901 () Unit!1898)

(assert (=> d!15605 (= lt!30910 e!45901)))

(declare-fun c!10134 () Bool)

(assert (=> d!15605 (= c!10134 lt!30911)))

(assert (=> d!15605 (= lt!30911 (containsKey!133 (toList!708 lt!30005) (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!15605 (= (contains!709 lt!30005 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)) lt!30912)))

(declare-fun b!70160 () Bool)

(declare-fun lt!30909 () Unit!1898)

(assert (=> b!70160 (= e!45901 lt!30909)))

(assert (=> b!70160 (= lt!30909 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 lt!30005) (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!70160 (isDefined!83 (getValueByKey!129 (toList!708 lt!30005) (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!70161 () Bool)

(declare-fun Unit!1972 () Unit!1898)

(assert (=> b!70161 (= e!45901 Unit!1972)))

(declare-fun b!70162 () Bool)

(assert (=> b!70162 (= e!45902 (isDefined!83 (getValueByKey!129 (toList!708 lt!30005) (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!15605 c!10134) b!70160))

(assert (= (and d!15605 (not c!10134)) b!70161))

(assert (= (and d!15605 (not res!37567)) b!70162))

(assert (=> d!15605 m!64177))

(declare-fun m!67017 () Bool)

(assert (=> d!15605 m!67017))

(assert (=> b!70160 m!64177))

(declare-fun m!67019 () Bool)

(assert (=> b!70160 m!67019))

(assert (=> b!70160 m!64177))

(assert (=> b!70160 m!65371))

(assert (=> b!70160 m!65371))

(declare-fun m!67021 () Bool)

(assert (=> b!70160 m!67021))

(assert (=> b!70162 m!64177))

(assert (=> b!70162 m!65371))

(assert (=> b!70162 m!65371))

(assert (=> b!70162 m!67021))

(assert (=> b!68760 d!15605))

(declare-fun d!15607 () Bool)

(assert (=> d!15607 (= (apply!73 lt!30322 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1129 (getValueByKey!129 (toList!708 lt!30322) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3028 () Bool)

(assert (= bs!3028 d!15607))

(assert (=> bs!3028 m!66973))

(assert (=> bs!3028 m!66973))

(declare-fun m!67023 () Bool)

(assert (=> bs!3028 m!67023))

(assert (=> b!69093 d!15607))

(declare-fun d!15609 () Bool)

(assert (=> d!15609 (= ($colon$colon!63 e!45267 (ite c!9847 (h!2051 (toList!708 lt!29682)) (tuple2!2091 (_1!1056 lt!29680) (_2!1056 lt!29680)))) (Cons!1466 (ite c!9847 (h!2051 (toList!708 lt!29682)) (tuple2!2091 (_1!1056 lt!29680) (_2!1056 lt!29680))) e!45267))))

(assert (=> bm!5912 d!15609))

(declare-fun d!15611 () Bool)

(declare-fun lt!30913 () Bool)

(assert (=> d!15611 (= lt!30913 (select (content!73 (toList!708 lt!30111)) (tuple2!2091 lt!29837 lt!29836)))))

(declare-fun e!45904 () Bool)

(assert (=> d!15611 (= lt!30913 e!45904)))

(declare-fun res!37569 () Bool)

(assert (=> d!15611 (=> (not res!37569) (not e!45904))))

(assert (=> d!15611 (= res!37569 ((_ is Cons!1466) (toList!708 lt!30111)))))

(assert (=> d!15611 (= (contains!711 (toList!708 lt!30111) (tuple2!2091 lt!29837 lt!29836)) lt!30913)))

(declare-fun b!70163 () Bool)

(declare-fun e!45903 () Bool)

(assert (=> b!70163 (= e!45904 e!45903)))

(declare-fun res!37568 () Bool)

(assert (=> b!70163 (=> res!37568 e!45903)))

(assert (=> b!70163 (= res!37568 (= (h!2051 (toList!708 lt!30111)) (tuple2!2091 lt!29837 lt!29836)))))

(declare-fun b!70164 () Bool)

(assert (=> b!70164 (= e!45903 (contains!711 (t!4964 (toList!708 lt!30111)) (tuple2!2091 lt!29837 lt!29836)))))

(assert (= (and d!15611 res!37569) b!70163))

(assert (= (and b!70163 (not res!37568)) b!70164))

(declare-fun m!67025 () Bool)

(assert (=> d!15611 m!67025))

(declare-fun m!67027 () Bool)

(assert (=> d!15611 m!67027))

(declare-fun m!67029 () Bool)

(assert (=> b!70164 m!67029))

(assert (=> b!68879 d!15611))

(declare-fun d!15613 () Bool)

(declare-fun e!45906 () Bool)

(assert (=> d!15613 e!45906))

(declare-fun res!37570 () Bool)

(assert (=> d!15613 (=> res!37570 e!45906)))

(declare-fun lt!30917 () Bool)

(assert (=> d!15613 (= res!37570 (not lt!30917))))

(declare-fun lt!30916 () Bool)

(assert (=> d!15613 (= lt!30917 lt!30916)))

(declare-fun lt!30915 () Unit!1898)

(declare-fun e!45905 () Unit!1898)

(assert (=> d!15613 (= lt!30915 e!45905)))

(declare-fun c!10135 () Bool)

(assert (=> d!15613 (= c!10135 lt!30916)))

(assert (=> d!15613 (= lt!30916 (containsKey!133 (toList!708 lt!30054) (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(assert (=> d!15613 (= (contains!709 lt!30054 (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))) lt!30917)))

(declare-fun b!70165 () Bool)

(declare-fun lt!30914 () Unit!1898)

(assert (=> b!70165 (= e!45905 lt!30914)))

(assert (=> b!70165 (= lt!30914 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 lt!30054) (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(assert (=> b!70165 (isDefined!83 (getValueByKey!129 (toList!708 lt!30054) (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(declare-fun b!70166 () Bool)

(declare-fun Unit!1973 () Unit!1898)

(assert (=> b!70166 (= e!45905 Unit!1973)))

(declare-fun b!70167 () Bool)

(assert (=> b!70167 (= e!45906 (isDefined!83 (getValueByKey!129 (toList!708 lt!30054) (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(assert (= (and d!15613 c!10135) b!70165))

(assert (= (and d!15613 (not c!10135)) b!70166))

(assert (= (and d!15613 (not res!37570)) b!70167))

(declare-fun m!67031 () Bool)

(assert (=> d!15613 m!67031))

(declare-fun m!67033 () Bool)

(assert (=> b!70165 m!67033))

(assert (=> b!70165 m!64371))

(assert (=> b!70165 m!64371))

(declare-fun m!67035 () Bool)

(assert (=> b!70165 m!67035))

(assert (=> b!70167 m!64371))

(assert (=> b!70167 m!64371))

(assert (=> b!70167 m!67035))

(assert (=> d!14731 d!15613))

(declare-fun b!70170 () Bool)

(declare-fun e!45908 () Option!135)

(assert (=> b!70170 (= e!45908 (getValueByKey!129 (t!4964 lt!30052) (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(declare-fun b!70168 () Bool)

(declare-fun e!45907 () Option!135)

(assert (=> b!70168 (= e!45907 (Some!134 (_2!1056 (h!2051 lt!30052))))))

(declare-fun b!70171 () Bool)

(assert (=> b!70171 (= e!45908 None!133)))

(declare-fun d!15615 () Bool)

(declare-fun c!10136 () Bool)

(assert (=> d!15615 (= c!10136 (and ((_ is Cons!1466) lt!30052) (= (_1!1056 (h!2051 lt!30052)) (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(assert (=> d!15615 (= (getValueByKey!129 lt!30052 (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))) e!45907)))

(declare-fun b!70169 () Bool)

(assert (=> b!70169 (= e!45907 e!45908)))

(declare-fun c!10137 () Bool)

(assert (=> b!70169 (= c!10137 (and ((_ is Cons!1466) lt!30052) (not (= (_1!1056 (h!2051 lt!30052)) (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))))

(assert (= (and d!15615 c!10136) b!70168))

(assert (= (and d!15615 (not c!10136)) b!70169))

(assert (= (and b!70169 c!10137) b!70170))

(assert (= (and b!70169 (not c!10137)) b!70171))

(declare-fun m!67037 () Bool)

(assert (=> b!70170 m!67037))

(assert (=> d!14731 d!15615))

(declare-fun d!15617 () Bool)

(assert (=> d!15617 (= (getValueByKey!129 lt!30052 (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))) (Some!134 (_2!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(declare-fun lt!30918 () Unit!1898)

(assert (=> d!15617 (= lt!30918 (choose!390 lt!30052 (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))) (_2!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(declare-fun e!45909 () Bool)

(assert (=> d!15617 e!45909))

(declare-fun res!37571 () Bool)

(assert (=> d!15617 (=> (not res!37571) (not e!45909))))

(assert (=> d!15617 (= res!37571 (isStrictlySorted!285 lt!30052))))

(assert (=> d!15617 (= (lemmaContainsTupThenGetReturnValue!49 lt!30052 (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))) (_2!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))) lt!30918)))

(declare-fun b!70172 () Bool)

(declare-fun res!37572 () Bool)

(assert (=> b!70172 (=> (not res!37572) (not e!45909))))

(assert (=> b!70172 (= res!37572 (containsKey!133 lt!30052 (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(declare-fun b!70173 () Bool)

(assert (=> b!70173 (= e!45909 (contains!711 lt!30052 (tuple2!2091 (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))) (_2!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(assert (= (and d!15617 res!37571) b!70172))

(assert (= (and b!70172 res!37572) b!70173))

(assert (=> d!15617 m!64365))

(declare-fun m!67039 () Bool)

(assert (=> d!15617 m!67039))

(declare-fun m!67041 () Bool)

(assert (=> d!15617 m!67041))

(declare-fun m!67043 () Bool)

(assert (=> b!70172 m!67043))

(declare-fun m!67045 () Bool)

(assert (=> b!70173 m!67045))

(assert (=> d!14731 d!15617))

(declare-fun b!70174 () Bool)

(declare-fun e!45913 () List!1470)

(declare-fun call!6022 () List!1470)

(assert (=> b!70174 (= e!45913 call!6022)))

(declare-fun c!10138 () Bool)

(declare-fun b!70175 () Bool)

(assert (=> b!70175 (= c!10138 (and ((_ is Cons!1466) (toList!708 (+!89 lt!29682 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))) (bvsgt (_1!1056 (h!2051 (toList!708 (+!89 lt!29682 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))) (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(declare-fun e!45911 () List!1470)

(assert (=> b!70175 (= e!45911 e!45913)))

(declare-fun b!70176 () Bool)

(assert (=> b!70176 (= e!45913 call!6022)))

(declare-fun b!70178 () Bool)

(declare-fun call!6021 () List!1470)

(assert (=> b!70178 (= e!45911 call!6021)))

(declare-fun bm!6018 () Bool)

(declare-fun call!6023 () List!1470)

(assert (=> bm!6018 (= call!6021 call!6023)))

(declare-fun bm!6019 () Bool)

(assert (=> bm!6019 (= call!6022 call!6021)))

(declare-fun b!70179 () Bool)

(declare-fun e!45910 () List!1470)

(assert (=> b!70179 (= e!45910 e!45911)))

(declare-fun c!10139 () Bool)

(assert (=> b!70179 (= c!10139 (and ((_ is Cons!1466) (toList!708 (+!89 lt!29682 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))) (= (_1!1056 (h!2051 (toList!708 (+!89 lt!29682 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))) (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(declare-fun e!45912 () List!1470)

(declare-fun c!10141 () Bool)

(declare-fun bm!6020 () Bool)

(assert (=> bm!6020 (= call!6023 ($colon$colon!63 e!45912 (ite c!10141 (h!2051 (toList!708 (+!89 lt!29682 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))) (tuple2!2091 (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))) (_2!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))))

(declare-fun c!10140 () Bool)

(assert (=> bm!6020 (= c!10140 c!10141)))

(declare-fun b!70180 () Bool)

(declare-fun res!37574 () Bool)

(declare-fun e!45914 () Bool)

(assert (=> b!70180 (=> (not res!37574) (not e!45914))))

(declare-fun lt!30919 () List!1470)

(assert (=> b!70180 (= res!37574 (containsKey!133 lt!30919 (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(declare-fun b!70181 () Bool)

(assert (=> b!70181 (= e!45914 (contains!711 lt!30919 (tuple2!2091 (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))) (_2!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(declare-fun b!70182 () Bool)

(assert (=> b!70182 (= e!45912 (ite c!10139 (t!4964 (toList!708 (+!89 lt!29682 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))) (ite c!10138 (Cons!1466 (h!2051 (toList!708 (+!89 lt!29682 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))) (t!4964 (toList!708 (+!89 lt!29682 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))) Nil!1467)))))

(declare-fun b!70183 () Bool)

(assert (=> b!70183 (= e!45910 call!6023)))

(declare-fun d!15619 () Bool)

(assert (=> d!15619 e!45914))

(declare-fun res!37573 () Bool)

(assert (=> d!15619 (=> (not res!37573) (not e!45914))))

(assert (=> d!15619 (= res!37573 (isStrictlySorted!285 lt!30919))))

(assert (=> d!15619 (= lt!30919 e!45910)))

(assert (=> d!15619 (= c!10141 (and ((_ is Cons!1466) (toList!708 (+!89 lt!29682 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))) (bvslt (_1!1056 (h!2051 (toList!708 (+!89 lt!29682 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))) (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(assert (=> d!15619 (isStrictlySorted!285 (toList!708 (+!89 lt!29682 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))))))

(assert (=> d!15619 (= (insertStrictlySorted!52 (toList!708 (+!89 lt!29682 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673))) (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))) (_2!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))) lt!30919)))

(declare-fun b!70177 () Bool)

(assert (=> b!70177 (= e!45912 (insertStrictlySorted!52 (t!4964 (toList!708 (+!89 lt!29682 (tuple2!2091 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) lt!29673)))) (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))) (_2!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(assert (= (and d!15619 c!10141) b!70183))

(assert (= (and d!15619 (not c!10141)) b!70179))

(assert (= (and b!70179 c!10139) b!70178))

(assert (= (and b!70179 (not c!10139)) b!70175))

(assert (= (and b!70175 c!10138) b!70176))

(assert (= (and b!70175 (not c!10138)) b!70174))

(assert (= (or b!70176 b!70174) bm!6019))

(assert (= (or b!70178 bm!6019) bm!6018))

(assert (= (or b!70183 bm!6018) bm!6020))

(assert (= (and bm!6020 c!10140) b!70177))

(assert (= (and bm!6020 (not c!10140)) b!70182))

(assert (= (and d!15619 res!37573) b!70180))

(assert (= (and b!70180 res!37574) b!70181))

(declare-fun m!67047 () Bool)

(assert (=> d!15619 m!67047))

(declare-fun m!67049 () Bool)

(assert (=> d!15619 m!67049))

(declare-fun m!67051 () Bool)

(assert (=> b!70181 m!67051))

(declare-fun m!67053 () Bool)

(assert (=> b!70180 m!67053))

(declare-fun m!67055 () Bool)

(assert (=> bm!6020 m!67055))

(declare-fun m!67057 () Bool)

(assert (=> b!70177 m!67057))

(assert (=> d!14731 d!15619))

(declare-fun d!15621 () Bool)

(declare-fun res!37575 () Bool)

(declare-fun e!45915 () Bool)

(assert (=> d!15621 (=> res!37575 e!45915)))

(assert (=> d!15621 (= res!37575 (and ((_ is Cons!1466) lt!29866) (= (_1!1056 (h!2051 lt!29866)) (_1!1056 lt!29680))))))

(assert (=> d!15621 (= (containsKey!133 lt!29866 (_1!1056 lt!29680)) e!45915)))

(declare-fun b!70184 () Bool)

(declare-fun e!45916 () Bool)

(assert (=> b!70184 (= e!45915 e!45916)))

(declare-fun res!37576 () Bool)

(assert (=> b!70184 (=> (not res!37576) (not e!45916))))

(assert (=> b!70184 (= res!37576 (and (or (not ((_ is Cons!1466) lt!29866)) (bvsle (_1!1056 (h!2051 lt!29866)) (_1!1056 lt!29680))) ((_ is Cons!1466) lt!29866) (bvslt (_1!1056 (h!2051 lt!29866)) (_1!1056 lt!29680))))))

(declare-fun b!70185 () Bool)

(assert (=> b!70185 (= e!45916 (containsKey!133 (t!4964 lt!29866) (_1!1056 lt!29680)))))

(assert (= (and d!15621 (not res!37575)) b!70184))

(assert (= (and b!70184 res!37576) b!70185))

(declare-fun m!67059 () Bool)

(assert (=> b!70185 m!67059))

(assert (=> b!68706 d!15621))

(declare-fun d!15623 () Bool)

(assert (=> d!15623 (= (inRange!0 (ite c!9795 (index!3078 lt!30181) (ite c!9796 (index!3077 lt!30202) (index!3080 lt!30202))) (mask!6111 newMap!16)) (and (bvsge (ite c!9795 (index!3078 lt!30181) (ite c!9796 (index!3077 lt!30202) (index!3080 lt!30202))) #b00000000000000000000000000000000) (bvslt (ite c!9795 (index!3078 lt!30181) (ite c!9796 (index!3077 lt!30202) (index!3080 lt!30202))) (bvadd (mask!6111 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!5886 d!15623))

(assert (=> d!14885 d!15017))

(declare-fun d!15625 () Bool)

(declare-fun lt!30920 () Bool)

(assert (=> d!15625 (= lt!30920 (select (content!74 Nil!1468) (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!45917 () Bool)

(assert (=> d!15625 (= lt!30920 e!45917)))

(declare-fun res!37577 () Bool)

(assert (=> d!15625 (=> (not res!37577) (not e!45917))))

(assert (=> d!15625 (= res!37577 ((_ is Cons!1467) Nil!1468))))

(assert (=> d!15625 (= (contains!712 Nil!1468 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)) lt!30920)))

(declare-fun b!70186 () Bool)

(declare-fun e!45918 () Bool)

(assert (=> b!70186 (= e!45917 e!45918)))

(declare-fun res!37578 () Bool)

(assert (=> b!70186 (=> res!37578 e!45918)))

(assert (=> b!70186 (= res!37578 (= (h!2052 Nil!1468) (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!70187 () Bool)

(assert (=> b!70187 (= e!45918 (contains!712 (t!4965 Nil!1468) (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!15625 res!37577) b!70186))

(assert (= (and b!70186 (not res!37578)) b!70187))

(assert (=> d!15625 m!64457))

(assert (=> d!15625 m!64177))

(declare-fun m!67061 () Bool)

(assert (=> d!15625 m!67061))

(assert (=> b!70187 m!64177))

(declare-fun m!67063 () Bool)

(assert (=> b!70187 m!67063))

(assert (=> b!68983 d!15625))

(assert (=> d!14739 d!14731))

(assert (=> d!14739 d!14733))

(assert (=> d!14739 d!14735))

(assert (=> d!14739 d!14737))

(declare-fun d!15627 () Bool)

(assert (=> d!15627 (= (get!1129 (getValueByKey!129 (toList!708 lt!29818) lt!29810)) (v!2491 (getValueByKey!129 (toList!708 lt!29818) lt!29810)))))

(assert (=> d!14851 d!15627))

(declare-fun b!70190 () Bool)

(declare-fun e!45920 () Option!135)

(assert (=> b!70190 (= e!45920 (getValueByKey!129 (t!4964 (toList!708 lt!29818)) lt!29810))))

(declare-fun b!70188 () Bool)

(declare-fun e!45919 () Option!135)

(assert (=> b!70188 (= e!45919 (Some!134 (_2!1056 (h!2051 (toList!708 lt!29818)))))))

(declare-fun b!70191 () Bool)

(assert (=> b!70191 (= e!45920 None!133)))

(declare-fun d!15629 () Bool)

(declare-fun c!10142 () Bool)

(assert (=> d!15629 (= c!10142 (and ((_ is Cons!1466) (toList!708 lt!29818)) (= (_1!1056 (h!2051 (toList!708 lt!29818))) lt!29810)))))

(assert (=> d!15629 (= (getValueByKey!129 (toList!708 lt!29818) lt!29810) e!45919)))

(declare-fun b!70189 () Bool)

(assert (=> b!70189 (= e!45919 e!45920)))

(declare-fun c!10143 () Bool)

(assert (=> b!70189 (= c!10143 (and ((_ is Cons!1466) (toList!708 lt!29818)) (not (= (_1!1056 (h!2051 (toList!708 lt!29818))) lt!29810))))))

(assert (= (and d!15629 c!10142) b!70188))

(assert (= (and d!15629 (not c!10142)) b!70189))

(assert (= (and b!70189 c!10143) b!70190))

(assert (= (and b!70189 (not c!10143)) b!70191))

(declare-fun m!67065 () Bool)

(assert (=> b!70190 m!67065))

(assert (=> d!14851 d!15629))

(declare-fun d!15631 () Bool)

(declare-fun e!45922 () Bool)

(assert (=> d!15631 e!45922))

(declare-fun res!37579 () Bool)

(assert (=> d!15631 (=> res!37579 e!45922)))

(declare-fun lt!30924 () Bool)

(assert (=> d!15631 (= res!37579 (not lt!30924))))

(declare-fun lt!30923 () Bool)

(assert (=> d!15631 (= lt!30924 lt!30923)))

(declare-fun lt!30922 () Unit!1898)

(declare-fun e!45921 () Unit!1898)

(assert (=> d!15631 (= lt!30922 e!45921)))

(declare-fun c!10144 () Bool)

(assert (=> d!15631 (= c!10144 lt!30923)))

(assert (=> d!15631 (= lt!30923 (containsKey!133 (toList!708 lt!30027) (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!15631 (= (contains!709 lt!30027 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)) lt!30924)))

(declare-fun b!70192 () Bool)

(declare-fun lt!30921 () Unit!1898)

(assert (=> b!70192 (= e!45921 lt!30921)))

(assert (=> b!70192 (= lt!30921 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 lt!30027) (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!70192 (isDefined!83 (getValueByKey!129 (toList!708 lt!30027) (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!70193 () Bool)

(declare-fun Unit!1974 () Unit!1898)

(assert (=> b!70193 (= e!45921 Unit!1974)))

(declare-fun b!70194 () Bool)

(assert (=> b!70194 (= e!45922 (isDefined!83 (getValueByKey!129 (toList!708 lt!30027) (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!15631 c!10144) b!70192))

(assert (= (and d!15631 (not c!10144)) b!70193))

(assert (= (and d!15631 (not res!37579)) b!70194))

(assert (=> d!15631 m!64177))

(declare-fun m!67067 () Bool)

(assert (=> d!15631 m!67067))

(assert (=> b!70192 m!64177))

(declare-fun m!67069 () Bool)

(assert (=> b!70192 m!67069))

(assert (=> b!70192 m!64177))

(assert (=> b!70192 m!65577))

(assert (=> b!70192 m!65577))

(declare-fun m!67071 () Bool)

(assert (=> b!70192 m!67071))

(assert (=> b!70194 m!64177))

(assert (=> b!70194 m!65577))

(assert (=> b!70194 m!65577))

(assert (=> b!70194 m!67071))

(assert (=> b!68781 d!15631))

(declare-fun d!15633 () Bool)

(assert (=> d!15633 (isDefined!83 (getValueByKey!129 (toList!708 lt!29805) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!30925 () Unit!1898)

(assert (=> d!15633 (= lt!30925 (choose!399 (toList!708 lt!29805) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!45923 () Bool)

(assert (=> d!15633 e!45923))

(declare-fun res!37580 () Bool)

(assert (=> d!15633 (=> (not res!37580) (not e!45923))))

(assert (=> d!15633 (= res!37580 (isStrictlySorted!285 (toList!708 lt!29805)))))

(assert (=> d!15633 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 lt!29805) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!30925)))

(declare-fun b!70195 () Bool)

(assert (=> b!70195 (= e!45923 (containsKey!133 (toList!708 lt!29805) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!15633 res!37580) b!70195))

(assert (=> d!15633 m!63951))

(assert (=> d!15633 m!64349))

(assert (=> d!15633 m!64349))

(assert (=> d!15633 m!64351))

(assert (=> d!15633 m!63951))

(declare-fun m!67073 () Bool)

(assert (=> d!15633 m!67073))

(assert (=> d!15633 m!65791))

(assert (=> b!70195 m!63951))

(assert (=> b!70195 m!64345))

(assert (=> b!68786 d!15633))

(assert (=> b!68786 d!15479))

(assert (=> b!68786 d!15481))

(declare-fun d!15635 () Bool)

(declare-fun res!37583 () Bool)

(declare-fun e!45924 () Bool)

(assert (=> d!15635 (=> res!37583 e!45924)))

(assert (=> d!15635 (= res!37583 (bvsge (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2065 (_keys!3810 (v!2485 (underlying!247 thiss!992))))))))

(assert (=> d!15635 (= (arrayNoDuplicates!0 (_keys!3810 (v!2485 (underlying!247 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!9827 (Cons!1467 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!9674 (Cons!1467 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) Nil!1468) Nil!1468)) (ite c!9674 (Cons!1467 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) Nil!1468) Nil!1468))) e!45924)))

(declare-fun b!70196 () Bool)

(declare-fun e!45927 () Bool)

(declare-fun call!6024 () Bool)

(assert (=> b!70196 (= e!45927 call!6024)))

(declare-fun b!70197 () Bool)

(declare-fun e!45926 () Bool)

(assert (=> b!70197 (= e!45926 (contains!712 (ite c!9827 (Cons!1467 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!9674 (Cons!1467 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) Nil!1468) Nil!1468)) (ite c!9674 (Cons!1467 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) Nil!1468) Nil!1468)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun c!10145 () Bool)

(declare-fun bm!6021 () Bool)

(assert (=> bm!6021 (= call!6024 (arrayNoDuplicates!0 (_keys!3810 (v!2485 (underlying!247 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!10145 (Cons!1467 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!9827 (Cons!1467 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!9674 (Cons!1467 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) Nil!1468) Nil!1468)) (ite c!9674 (Cons!1467 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) Nil!1468) Nil!1468))) (ite c!9827 (Cons!1467 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!9674 (Cons!1467 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) Nil!1468) Nil!1468)) (ite c!9674 (Cons!1467 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) Nil!1468) Nil!1468)))))))

(declare-fun b!70198 () Bool)

(declare-fun e!45925 () Bool)

(assert (=> b!70198 (= e!45924 e!45925)))

(declare-fun res!37582 () Bool)

(assert (=> b!70198 (=> (not res!37582) (not e!45925))))

(assert (=> b!70198 (= res!37582 (not e!45926))))

(declare-fun res!37581 () Bool)

(assert (=> b!70198 (=> (not res!37581) (not e!45926))))

(assert (=> b!70198 (= res!37581 (validKeyInArray!0 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!70199 () Bool)

(assert (=> b!70199 (= e!45925 e!45927)))

(assert (=> b!70199 (= c!10145 (validKeyInArray!0 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!70200 () Bool)

(assert (=> b!70200 (= e!45927 call!6024)))

(assert (= (and d!15635 (not res!37583)) b!70198))

(assert (= (and b!70198 res!37581) b!70197))

(assert (= (and b!70198 res!37582) b!70199))

(assert (= (and b!70199 c!10145) b!70196))

(assert (= (and b!70199 (not c!10145)) b!70200))

(assert (= (or b!70196 b!70200) bm!6021))

(declare-fun m!67075 () Bool)

(assert (=> b!70197 m!67075))

(assert (=> b!70197 m!67075))

(declare-fun m!67077 () Bool)

(assert (=> b!70197 m!67077))

(assert (=> bm!6021 m!67075))

(declare-fun m!67079 () Bool)

(assert (=> bm!6021 m!67079))

(assert (=> b!70198 m!67075))

(assert (=> b!70198 m!67075))

(declare-fun m!67081 () Bool)

(assert (=> b!70198 m!67081))

(assert (=> b!70199 m!67075))

(assert (=> b!70199 m!67075))

(assert (=> b!70199 m!67081))

(assert (=> bm!5902 d!15635))

(declare-fun b!70203 () Bool)

(declare-fun e!45929 () Option!135)

(assert (=> b!70203 (= e!45929 (getValueByKey!129 (t!4964 (toList!708 lt!30054)) (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(declare-fun b!70201 () Bool)

(declare-fun e!45928 () Option!135)

(assert (=> b!70201 (= e!45928 (Some!134 (_2!1056 (h!2051 (toList!708 lt!30054)))))))

(declare-fun b!70204 () Bool)

(assert (=> b!70204 (= e!45929 None!133)))

(declare-fun d!15637 () Bool)

(declare-fun c!10146 () Bool)

(assert (=> d!15637 (= c!10146 (and ((_ is Cons!1466) (toList!708 lt!30054)) (= (_1!1056 (h!2051 (toList!708 lt!30054))) (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(assert (=> d!15637 (= (getValueByKey!129 (toList!708 lt!30054) (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))) e!45928)))

(declare-fun b!70202 () Bool)

(assert (=> b!70202 (= e!45928 e!45929)))

(declare-fun c!10147 () Bool)

(assert (=> b!70202 (= c!10147 (and ((_ is Cons!1466) (toList!708 lt!30054)) (not (= (_1!1056 (h!2051 (toList!708 lt!30054))) (_1!1056 (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))))))))))

(assert (= (and d!15637 c!10146) b!70201))

(assert (= (and d!15637 (not c!10146)) b!70202))

(assert (= (and b!70202 c!10147) b!70203))

(assert (= (and b!70202 (not c!10147)) b!70204))

(declare-fun m!67083 () Bool)

(assert (=> b!70203 m!67083))

(assert (=> b!68791 d!15637))

(declare-fun d!15639 () Bool)

(declare-fun e!45931 () Bool)

(assert (=> d!15639 e!45931))

(declare-fun res!37584 () Bool)

(assert (=> d!15639 (=> res!37584 e!45931)))

(declare-fun lt!30929 () Bool)

(assert (=> d!15639 (= res!37584 (not lt!30929))))

(declare-fun lt!30928 () Bool)

(assert (=> d!15639 (= lt!30929 lt!30928)))

(declare-fun lt!30927 () Unit!1898)

(declare-fun e!45930 () Unit!1898)

(assert (=> d!15639 (= lt!30927 e!45930)))

(declare-fun c!10148 () Bool)

(assert (=> d!15639 (= c!10148 lt!30928)))

(assert (=> d!15639 (= lt!30928 (containsKey!133 (toList!708 lt!30284) (_1!1056 (tuple2!2091 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(assert (=> d!15639 (= (contains!709 lt!30284 (_1!1056 (tuple2!2091 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))) lt!30929)))

(declare-fun b!70205 () Bool)

(declare-fun lt!30926 () Unit!1898)

(assert (=> b!70205 (= e!45930 lt!30926)))

(assert (=> b!70205 (= lt!30926 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 lt!30284) (_1!1056 (tuple2!2091 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(assert (=> b!70205 (isDefined!83 (getValueByKey!129 (toList!708 lt!30284) (_1!1056 (tuple2!2091 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(declare-fun b!70206 () Bool)

(declare-fun Unit!1975 () Unit!1898)

(assert (=> b!70206 (= e!45930 Unit!1975)))

(declare-fun b!70207 () Bool)

(assert (=> b!70207 (= e!45931 (isDefined!83 (getValueByKey!129 (toList!708 lt!30284) (_1!1056 (tuple2!2091 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(assert (= (and d!15639 c!10148) b!70205))

(assert (= (and d!15639 (not c!10148)) b!70206))

(assert (= (and d!15639 (not res!37584)) b!70207))

(declare-fun m!67085 () Bool)

(assert (=> d!15639 m!67085))

(declare-fun m!67087 () Bool)

(assert (=> b!70205 m!67087))

(assert (=> b!70205 m!64815))

(assert (=> b!70205 m!64815))

(declare-fun m!67089 () Bool)

(assert (=> b!70205 m!67089))

(assert (=> b!70207 m!64815))

(assert (=> b!70207 m!64815))

(assert (=> b!70207 m!67089))

(assert (=> d!14841 d!15639))

(declare-fun b!70210 () Bool)

(declare-fun e!45933 () Option!135)

(assert (=> b!70210 (= e!45933 (getValueByKey!129 (t!4964 lt!30282) (_1!1056 (tuple2!2091 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(declare-fun b!70208 () Bool)

(declare-fun e!45932 () Option!135)

(assert (=> b!70208 (= e!45932 (Some!134 (_2!1056 (h!2051 lt!30282))))))

(declare-fun b!70211 () Bool)

(assert (=> b!70211 (= e!45933 None!133)))

(declare-fun d!15641 () Bool)

(declare-fun c!10149 () Bool)

(assert (=> d!15641 (= c!10149 (and ((_ is Cons!1466) lt!30282) (= (_1!1056 (h!2051 lt!30282)) (_1!1056 (tuple2!2091 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(assert (=> d!15641 (= (getValueByKey!129 lt!30282 (_1!1056 (tuple2!2091 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))) e!45932)))

(declare-fun b!70209 () Bool)

(assert (=> b!70209 (= e!45932 e!45933)))

(declare-fun c!10150 () Bool)

(assert (=> b!70209 (= c!10150 (and ((_ is Cons!1466) lt!30282) (not (= (_1!1056 (h!2051 lt!30282)) (_1!1056 (tuple2!2091 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))))

(assert (= (and d!15641 c!10149) b!70208))

(assert (= (and d!15641 (not c!10149)) b!70209))

(assert (= (and b!70209 c!10150) b!70210))

(assert (= (and b!70209 (not c!10150)) b!70211))

(declare-fun m!67091 () Bool)

(assert (=> b!70210 m!67091))

(assert (=> d!14841 d!15641))

(declare-fun d!15643 () Bool)

(assert (=> d!15643 (= (getValueByKey!129 lt!30282 (_1!1056 (tuple2!2091 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))) (Some!134 (_2!1056 (tuple2!2091 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(declare-fun lt!30930 () Unit!1898)

(assert (=> d!15643 (= lt!30930 (choose!390 lt!30282 (_1!1056 (tuple2!2091 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992))))) (_2!1056 (tuple2!2091 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(declare-fun e!45934 () Bool)

(assert (=> d!15643 e!45934))

(declare-fun res!37585 () Bool)

(assert (=> d!15643 (=> (not res!37585) (not e!45934))))

(assert (=> d!15643 (= res!37585 (isStrictlySorted!285 lt!30282))))

(assert (=> d!15643 (= (lemmaContainsTupThenGetReturnValue!49 lt!30282 (_1!1056 (tuple2!2091 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992))))) (_2!1056 (tuple2!2091 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))) lt!30930)))

(declare-fun b!70212 () Bool)

(declare-fun res!37586 () Bool)

(assert (=> b!70212 (=> (not res!37586) (not e!45934))))

(assert (=> b!70212 (= res!37586 (containsKey!133 lt!30282 (_1!1056 (tuple2!2091 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(declare-fun b!70213 () Bool)

(assert (=> b!70213 (= e!45934 (contains!711 lt!30282 (tuple2!2091 (_1!1056 (tuple2!2091 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992))))) (_2!1056 (tuple2!2091 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(assert (= (and d!15643 res!37585) b!70212))

(assert (= (and b!70212 res!37586) b!70213))

(assert (=> d!15643 m!64809))

(declare-fun m!67093 () Bool)

(assert (=> d!15643 m!67093))

(declare-fun m!67095 () Bool)

(assert (=> d!15643 m!67095))

(declare-fun m!67097 () Bool)

(assert (=> b!70212 m!67097))

(declare-fun m!67099 () Bool)

(assert (=> b!70213 m!67099))

(assert (=> d!14841 d!15643))

(declare-fun b!70214 () Bool)

(declare-fun e!45938 () List!1470)

(declare-fun call!6026 () List!1470)

(assert (=> b!70214 (= e!45938 call!6026)))

(declare-fun c!10151 () Bool)

(declare-fun b!70215 () Bool)

(assert (=> b!70215 (= c!10151 (and ((_ is Cons!1466) (toList!708 lt!29814)) (bvsgt (_1!1056 (h!2051 (toList!708 lt!29814))) (_1!1056 (tuple2!2091 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(declare-fun e!45936 () List!1470)

(assert (=> b!70215 (= e!45936 e!45938)))

(declare-fun b!70216 () Bool)

(assert (=> b!70216 (= e!45938 call!6026)))

(declare-fun b!70218 () Bool)

(declare-fun call!6025 () List!1470)

(assert (=> b!70218 (= e!45936 call!6025)))

(declare-fun bm!6022 () Bool)

(declare-fun call!6027 () List!1470)

(assert (=> bm!6022 (= call!6025 call!6027)))

(declare-fun bm!6023 () Bool)

(assert (=> bm!6023 (= call!6026 call!6025)))

(declare-fun b!70219 () Bool)

(declare-fun e!45935 () List!1470)

(assert (=> b!70219 (= e!45935 e!45936)))

(declare-fun c!10152 () Bool)

(assert (=> b!70219 (= c!10152 (and ((_ is Cons!1466) (toList!708 lt!29814)) (= (_1!1056 (h!2051 (toList!708 lt!29814))) (_1!1056 (tuple2!2091 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(declare-fun bm!6024 () Bool)

(declare-fun c!10154 () Bool)

(declare-fun e!45937 () List!1470)

(assert (=> bm!6024 (= call!6027 ($colon$colon!63 e!45937 (ite c!10154 (h!2051 (toList!708 lt!29814)) (tuple2!2091 (_1!1056 (tuple2!2091 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992))))) (_2!1056 (tuple2!2091 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))))

(declare-fun c!10153 () Bool)

(assert (=> bm!6024 (= c!10153 c!10154)))

(declare-fun b!70220 () Bool)

(declare-fun res!37588 () Bool)

(declare-fun e!45939 () Bool)

(assert (=> b!70220 (=> (not res!37588) (not e!45939))))

(declare-fun lt!30931 () List!1470)

(assert (=> b!70220 (= res!37588 (containsKey!133 lt!30931 (_1!1056 (tuple2!2091 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(declare-fun b!70221 () Bool)

(assert (=> b!70221 (= e!45939 (contains!711 lt!30931 (tuple2!2091 (_1!1056 (tuple2!2091 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992))))) (_2!1056 (tuple2!2091 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(declare-fun b!70222 () Bool)

(assert (=> b!70222 (= e!45937 (ite c!10152 (t!4964 (toList!708 lt!29814)) (ite c!10151 (Cons!1466 (h!2051 (toList!708 lt!29814)) (t!4964 (toList!708 lt!29814))) Nil!1467)))))

(declare-fun b!70223 () Bool)

(assert (=> b!70223 (= e!45935 call!6027)))

(declare-fun d!15645 () Bool)

(assert (=> d!15645 e!45939))

(declare-fun res!37587 () Bool)

(assert (=> d!15645 (=> (not res!37587) (not e!45939))))

(assert (=> d!15645 (= res!37587 (isStrictlySorted!285 lt!30931))))

(assert (=> d!15645 (= lt!30931 e!45935)))

(assert (=> d!15645 (= c!10154 (and ((_ is Cons!1466) (toList!708 lt!29814)) (bvslt (_1!1056 (h!2051 (toList!708 lt!29814))) (_1!1056 (tuple2!2091 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(assert (=> d!15645 (isStrictlySorted!285 (toList!708 lt!29814))))

(assert (=> d!15645 (= (insertStrictlySorted!52 (toList!708 lt!29814) (_1!1056 (tuple2!2091 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992))))) (_2!1056 (tuple2!2091 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))) lt!30931)))

(declare-fun b!70217 () Bool)

(assert (=> b!70217 (= e!45937 (insertStrictlySorted!52 (t!4964 (toList!708 lt!29814)) (_1!1056 (tuple2!2091 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992))))) (_2!1056 (tuple2!2091 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(assert (= (and d!15645 c!10154) b!70223))

(assert (= (and d!15645 (not c!10154)) b!70219))

(assert (= (and b!70219 c!10152) b!70218))

(assert (= (and b!70219 (not c!10152)) b!70215))

(assert (= (and b!70215 c!10151) b!70216))

(assert (= (and b!70215 (not c!10151)) b!70214))

(assert (= (or b!70216 b!70214) bm!6023))

(assert (= (or b!70218 bm!6023) bm!6022))

(assert (= (or b!70223 bm!6022) bm!6024))

(assert (= (and bm!6024 c!10153) b!70217))

(assert (= (and bm!6024 (not c!10153)) b!70222))

(assert (= (and d!15645 res!37587) b!70220))

(assert (= (and b!70220 res!37588) b!70221))

(declare-fun m!67101 () Bool)

(assert (=> d!15645 m!67101))

(declare-fun m!67103 () Bool)

(assert (=> d!15645 m!67103))

(declare-fun m!67105 () Bool)

(assert (=> b!70221 m!67105))

(declare-fun m!67107 () Bool)

(assert (=> b!70220 m!67107))

(declare-fun m!67109 () Bool)

(assert (=> bm!6024 m!67109))

(declare-fun m!67111 () Bool)

(assert (=> b!70217 m!67111))

(assert (=> d!14841 d!15645))

(declare-fun d!15647 () Bool)

(declare-fun e!45941 () Bool)

(assert (=> d!15647 e!45941))

(declare-fun res!37589 () Bool)

(assert (=> d!15647 (=> res!37589 e!45941)))

(declare-fun lt!30935 () Bool)

(assert (=> d!15647 (= res!37589 (not lt!30935))))

(declare-fun lt!30934 () Bool)

(assert (=> d!15647 (= lt!30935 lt!30934)))

(declare-fun lt!30933 () Unit!1898)

(declare-fun e!45940 () Unit!1898)

(assert (=> d!15647 (= lt!30933 e!45940)))

(declare-fun c!10155 () Bool)

(assert (=> d!15647 (= c!10155 lt!30934)))

(assert (=> d!15647 (= lt!30934 (containsKey!133 (toList!708 lt!30111) (_1!1056 (tuple2!2091 lt!29837 lt!29836))))))

(assert (=> d!15647 (= (contains!709 lt!30111 (_1!1056 (tuple2!2091 lt!29837 lt!29836))) lt!30935)))

(declare-fun b!70224 () Bool)

(declare-fun lt!30932 () Unit!1898)

(assert (=> b!70224 (= e!45940 lt!30932)))

(assert (=> b!70224 (= lt!30932 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 lt!30111) (_1!1056 (tuple2!2091 lt!29837 lt!29836))))))

(assert (=> b!70224 (isDefined!83 (getValueByKey!129 (toList!708 lt!30111) (_1!1056 (tuple2!2091 lt!29837 lt!29836))))))

(declare-fun b!70225 () Bool)

(declare-fun Unit!1976 () Unit!1898)

(assert (=> b!70225 (= e!45940 Unit!1976)))

(declare-fun b!70226 () Bool)

(assert (=> b!70226 (= e!45941 (isDefined!83 (getValueByKey!129 (toList!708 lt!30111) (_1!1056 (tuple2!2091 lt!29837 lt!29836)))))))

(assert (= (and d!15647 c!10155) b!70224))

(assert (= (and d!15647 (not c!10155)) b!70225))

(assert (= (and d!15647 (not res!37589)) b!70226))

(declare-fun m!67113 () Bool)

(assert (=> d!15647 m!67113))

(declare-fun m!67115 () Bool)

(assert (=> b!70224 m!67115))

(assert (=> b!70224 m!64523))

(assert (=> b!70224 m!64523))

(declare-fun m!67117 () Bool)

(assert (=> b!70224 m!67117))

(assert (=> b!70226 m!64523))

(assert (=> b!70226 m!64523))

(assert (=> b!70226 m!67117))

(assert (=> d!14777 d!15647))

(declare-fun e!45943 () Option!135)

(declare-fun b!70229 () Bool)

(assert (=> b!70229 (= e!45943 (getValueByKey!129 (t!4964 lt!30109) (_1!1056 (tuple2!2091 lt!29837 lt!29836))))))

(declare-fun b!70227 () Bool)

(declare-fun e!45942 () Option!135)

(assert (=> b!70227 (= e!45942 (Some!134 (_2!1056 (h!2051 lt!30109))))))

(declare-fun b!70230 () Bool)

(assert (=> b!70230 (= e!45943 None!133)))

(declare-fun d!15649 () Bool)

(declare-fun c!10156 () Bool)

(assert (=> d!15649 (= c!10156 (and ((_ is Cons!1466) lt!30109) (= (_1!1056 (h!2051 lt!30109)) (_1!1056 (tuple2!2091 lt!29837 lt!29836)))))))

(assert (=> d!15649 (= (getValueByKey!129 lt!30109 (_1!1056 (tuple2!2091 lt!29837 lt!29836))) e!45942)))

(declare-fun b!70228 () Bool)

(assert (=> b!70228 (= e!45942 e!45943)))

(declare-fun c!10157 () Bool)

(assert (=> b!70228 (= c!10157 (and ((_ is Cons!1466) lt!30109) (not (= (_1!1056 (h!2051 lt!30109)) (_1!1056 (tuple2!2091 lt!29837 lt!29836))))))))

(assert (= (and d!15649 c!10156) b!70227))

(assert (= (and d!15649 (not c!10156)) b!70228))

(assert (= (and b!70228 c!10157) b!70229))

(assert (= (and b!70228 (not c!10157)) b!70230))

(declare-fun m!67119 () Bool)

(assert (=> b!70229 m!67119))

(assert (=> d!14777 d!15649))

(declare-fun d!15651 () Bool)

(assert (=> d!15651 (= (getValueByKey!129 lt!30109 (_1!1056 (tuple2!2091 lt!29837 lt!29836))) (Some!134 (_2!1056 (tuple2!2091 lt!29837 lt!29836))))))

(declare-fun lt!30936 () Unit!1898)

(assert (=> d!15651 (= lt!30936 (choose!390 lt!30109 (_1!1056 (tuple2!2091 lt!29837 lt!29836)) (_2!1056 (tuple2!2091 lt!29837 lt!29836))))))

(declare-fun e!45944 () Bool)

(assert (=> d!15651 e!45944))

(declare-fun res!37590 () Bool)

(assert (=> d!15651 (=> (not res!37590) (not e!45944))))

(assert (=> d!15651 (= res!37590 (isStrictlySorted!285 lt!30109))))

(assert (=> d!15651 (= (lemmaContainsTupThenGetReturnValue!49 lt!30109 (_1!1056 (tuple2!2091 lt!29837 lt!29836)) (_2!1056 (tuple2!2091 lt!29837 lt!29836))) lt!30936)))

(declare-fun b!70231 () Bool)

(declare-fun res!37591 () Bool)

(assert (=> b!70231 (=> (not res!37591) (not e!45944))))

(assert (=> b!70231 (= res!37591 (containsKey!133 lt!30109 (_1!1056 (tuple2!2091 lt!29837 lt!29836))))))

(declare-fun b!70232 () Bool)

(assert (=> b!70232 (= e!45944 (contains!711 lt!30109 (tuple2!2091 (_1!1056 (tuple2!2091 lt!29837 lt!29836)) (_2!1056 (tuple2!2091 lt!29837 lt!29836)))))))

(assert (= (and d!15651 res!37590) b!70231))

(assert (= (and b!70231 res!37591) b!70232))

(assert (=> d!15651 m!64517))

(declare-fun m!67121 () Bool)

(assert (=> d!15651 m!67121))

(declare-fun m!67123 () Bool)

(assert (=> d!15651 m!67123))

(declare-fun m!67125 () Bool)

(assert (=> b!70231 m!67125))

(declare-fun m!67127 () Bool)

(assert (=> b!70232 m!67127))

(assert (=> d!14777 d!15651))

(declare-fun b!70233 () Bool)

(declare-fun e!45948 () List!1470)

(declare-fun call!6029 () List!1470)

(assert (=> b!70233 (= e!45948 call!6029)))

(declare-fun b!70234 () Bool)

(declare-fun c!10158 () Bool)

(assert (=> b!70234 (= c!10158 (and ((_ is Cons!1466) (toList!708 lt!29838)) (bvsgt (_1!1056 (h!2051 (toList!708 lt!29838))) (_1!1056 (tuple2!2091 lt!29837 lt!29836)))))))

(declare-fun e!45946 () List!1470)

(assert (=> b!70234 (= e!45946 e!45948)))

(declare-fun b!70235 () Bool)

(assert (=> b!70235 (= e!45948 call!6029)))

(declare-fun b!70237 () Bool)

(declare-fun call!6028 () List!1470)

(assert (=> b!70237 (= e!45946 call!6028)))

(declare-fun bm!6025 () Bool)

(declare-fun call!6030 () List!1470)

(assert (=> bm!6025 (= call!6028 call!6030)))

(declare-fun bm!6026 () Bool)

(assert (=> bm!6026 (= call!6029 call!6028)))

(declare-fun b!70238 () Bool)

(declare-fun e!45945 () List!1470)

(assert (=> b!70238 (= e!45945 e!45946)))

(declare-fun c!10159 () Bool)

(assert (=> b!70238 (= c!10159 (and ((_ is Cons!1466) (toList!708 lt!29838)) (= (_1!1056 (h!2051 (toList!708 lt!29838))) (_1!1056 (tuple2!2091 lt!29837 lt!29836)))))))

(declare-fun bm!6027 () Bool)

(declare-fun e!45947 () List!1470)

(declare-fun c!10161 () Bool)

(assert (=> bm!6027 (= call!6030 ($colon$colon!63 e!45947 (ite c!10161 (h!2051 (toList!708 lt!29838)) (tuple2!2091 (_1!1056 (tuple2!2091 lt!29837 lt!29836)) (_2!1056 (tuple2!2091 lt!29837 lt!29836))))))))

(declare-fun c!10160 () Bool)

(assert (=> bm!6027 (= c!10160 c!10161)))

(declare-fun b!70239 () Bool)

(declare-fun res!37593 () Bool)

(declare-fun e!45949 () Bool)

(assert (=> b!70239 (=> (not res!37593) (not e!45949))))

(declare-fun lt!30937 () List!1470)

(assert (=> b!70239 (= res!37593 (containsKey!133 lt!30937 (_1!1056 (tuple2!2091 lt!29837 lt!29836))))))

(declare-fun b!70240 () Bool)

(assert (=> b!70240 (= e!45949 (contains!711 lt!30937 (tuple2!2091 (_1!1056 (tuple2!2091 lt!29837 lt!29836)) (_2!1056 (tuple2!2091 lt!29837 lt!29836)))))))

(declare-fun b!70241 () Bool)

(assert (=> b!70241 (= e!45947 (ite c!10159 (t!4964 (toList!708 lt!29838)) (ite c!10158 (Cons!1466 (h!2051 (toList!708 lt!29838)) (t!4964 (toList!708 lt!29838))) Nil!1467)))))

(declare-fun b!70242 () Bool)

(assert (=> b!70242 (= e!45945 call!6030)))

(declare-fun d!15653 () Bool)

(assert (=> d!15653 e!45949))

(declare-fun res!37592 () Bool)

(assert (=> d!15653 (=> (not res!37592) (not e!45949))))

(assert (=> d!15653 (= res!37592 (isStrictlySorted!285 lt!30937))))

(assert (=> d!15653 (= lt!30937 e!45945)))

(assert (=> d!15653 (= c!10161 (and ((_ is Cons!1466) (toList!708 lt!29838)) (bvslt (_1!1056 (h!2051 (toList!708 lt!29838))) (_1!1056 (tuple2!2091 lt!29837 lt!29836)))))))

(assert (=> d!15653 (isStrictlySorted!285 (toList!708 lt!29838))))

(assert (=> d!15653 (= (insertStrictlySorted!52 (toList!708 lt!29838) (_1!1056 (tuple2!2091 lt!29837 lt!29836)) (_2!1056 (tuple2!2091 lt!29837 lt!29836))) lt!30937)))

(declare-fun b!70236 () Bool)

(assert (=> b!70236 (= e!45947 (insertStrictlySorted!52 (t!4964 (toList!708 lt!29838)) (_1!1056 (tuple2!2091 lt!29837 lt!29836)) (_2!1056 (tuple2!2091 lt!29837 lt!29836))))))

(assert (= (and d!15653 c!10161) b!70242))

(assert (= (and d!15653 (not c!10161)) b!70238))

(assert (= (and b!70238 c!10159) b!70237))

(assert (= (and b!70238 (not c!10159)) b!70234))

(assert (= (and b!70234 c!10158) b!70235))

(assert (= (and b!70234 (not c!10158)) b!70233))

(assert (= (or b!70235 b!70233) bm!6026))

(assert (= (or b!70237 bm!6026) bm!6025))

(assert (= (or b!70242 bm!6025) bm!6027))

(assert (= (and bm!6027 c!10160) b!70236))

(assert (= (and bm!6027 (not c!10160)) b!70241))

(assert (= (and d!15653 res!37592) b!70239))

(assert (= (and b!70239 res!37593) b!70240))

(declare-fun m!67129 () Bool)

(assert (=> d!15653 m!67129))

(declare-fun m!67131 () Bool)

(assert (=> d!15653 m!67131))

(declare-fun m!67133 () Bool)

(assert (=> b!70240 m!67133))

(declare-fun m!67135 () Bool)

(assert (=> b!70239 m!67135))

(declare-fun m!67137 () Bool)

(assert (=> bm!6027 m!67137))

(declare-fun m!67139 () Bool)

(assert (=> b!70236 m!67139))

(assert (=> d!14777 d!15653))

(assert (=> d!14785 d!14683))

(declare-fun d!15655 () Bool)

(declare-fun lt!30938 () Bool)

(assert (=> d!15655 (= lt!30938 (select (content!73 lt!29851) (tuple2!2091 (_1!1056 lt!29680) (_2!1056 lt!29680))))))

(declare-fun e!45951 () Bool)

(assert (=> d!15655 (= lt!30938 e!45951)))

(declare-fun res!37595 () Bool)

(assert (=> d!15655 (=> (not res!37595) (not e!45951))))

(assert (=> d!15655 (= res!37595 ((_ is Cons!1466) lt!29851))))

(assert (=> d!15655 (= (contains!711 lt!29851 (tuple2!2091 (_1!1056 lt!29680) (_2!1056 lt!29680))) lt!30938)))

(declare-fun b!70243 () Bool)

(declare-fun e!45950 () Bool)

(assert (=> b!70243 (= e!45951 e!45950)))

(declare-fun res!37594 () Bool)

(assert (=> b!70243 (=> res!37594 e!45950)))

(assert (=> b!70243 (= res!37594 (= (h!2051 lt!29851) (tuple2!2091 (_1!1056 lt!29680) (_2!1056 lt!29680))))))

(declare-fun b!70244 () Bool)

(assert (=> b!70244 (= e!45950 (contains!711 (t!4964 lt!29851) (tuple2!2091 (_1!1056 lt!29680) (_2!1056 lt!29680))))))

(assert (= (and d!15655 res!37595) b!70243))

(assert (= (and b!70243 (not res!37594)) b!70244))

(declare-fun m!67141 () Bool)

(assert (=> d!15655 m!67141))

(declare-fun m!67143 () Bool)

(assert (=> d!15655 m!67143))

(declare-fun m!67145 () Bool)

(assert (=> b!70244 m!67145))

(assert (=> b!69130 d!15655))

(declare-fun b!70245 () Bool)

(declare-fun e!45952 () Bool)

(declare-fun call!6031 () Bool)

(assert (=> b!70245 (= e!45952 call!6031)))

(declare-fun b!70246 () Bool)

(declare-fun e!45954 () Bool)

(assert (=> b!70246 (= e!45954 e!45952)))

(declare-fun lt!30941 () (_ BitVec 64))

(assert (=> b!70246 (= lt!30941 (select (arr!1828 (_keys!3810 (_2!1057 lt!29959))) #b00000000000000000000000000000000))))

(declare-fun lt!30940 () Unit!1898)

(assert (=> b!70246 (= lt!30940 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3810 (_2!1057 lt!29959)) lt!30941 #b00000000000000000000000000000000))))

(assert (=> b!70246 (arrayContainsKey!0 (_keys!3810 (_2!1057 lt!29959)) lt!30941 #b00000000000000000000000000000000)))

(declare-fun lt!30939 () Unit!1898)

(assert (=> b!70246 (= lt!30939 lt!30940)))

(declare-fun res!37596 () Bool)

(assert (=> b!70246 (= res!37596 (= (seekEntryOrOpen!0 (select (arr!1828 (_keys!3810 (_2!1057 lt!29959))) #b00000000000000000000000000000000) (_keys!3810 (_2!1057 lt!29959)) (mask!6111 (_2!1057 lt!29959))) (Found!237 #b00000000000000000000000000000000)))))

(assert (=> b!70246 (=> (not res!37596) (not e!45952))))

(declare-fun bm!6028 () Bool)

(assert (=> bm!6028 (= call!6031 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3810 (_2!1057 lt!29959)) (mask!6111 (_2!1057 lt!29959))))))

(declare-fun b!70247 () Bool)

(assert (=> b!70247 (= e!45954 call!6031)))

(declare-fun b!70248 () Bool)

(declare-fun e!45953 () Bool)

(assert (=> b!70248 (= e!45953 e!45954)))

(declare-fun c!10162 () Bool)

(assert (=> b!70248 (= c!10162 (validKeyInArray!0 (select (arr!1828 (_keys!3810 (_2!1057 lt!29959))) #b00000000000000000000000000000000)))))

(declare-fun d!15657 () Bool)

(declare-fun res!37597 () Bool)

(assert (=> d!15657 (=> res!37597 e!45953)))

(assert (=> d!15657 (= res!37597 (bvsge #b00000000000000000000000000000000 (size!2065 (_keys!3810 (_2!1057 lt!29959)))))))

(assert (=> d!15657 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3810 (_2!1057 lt!29959)) (mask!6111 (_2!1057 lt!29959))) e!45953)))

(assert (= (and d!15657 (not res!37597)) b!70248))

(assert (= (and b!70248 c!10162) b!70246))

(assert (= (and b!70248 (not c!10162)) b!70247))

(assert (= (and b!70246 res!37596) b!70245))

(assert (= (or b!70245 b!70247) bm!6028))

(assert (=> b!70246 m!66707))

(declare-fun m!67147 () Bool)

(assert (=> b!70246 m!67147))

(declare-fun m!67149 () Bool)

(assert (=> b!70246 m!67149))

(assert (=> b!70246 m!66707))

(declare-fun m!67151 () Bool)

(assert (=> b!70246 m!67151))

(declare-fun m!67153 () Bool)

(assert (=> bm!6028 m!67153))

(assert (=> b!70248 m!66707))

(assert (=> b!70248 m!66707))

(assert (=> b!70248 m!66717))

(assert (=> b!68800 d!15657))

(declare-fun d!15659 () Bool)

(assert (=> d!15659 (= (get!1129 (getValueByKey!129 (toList!708 lt!29805) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2491 (getValueByKey!129 (toList!708 lt!29805) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!14825 d!15659))

(assert (=> d!14825 d!15481))

(assert (=> b!69086 d!14925))

(assert (=> b!69067 d!15039))

(assert (=> b!69067 d!15041))

(declare-fun d!15661 () Bool)

(declare-fun lt!30942 () Bool)

(assert (=> d!15661 (= lt!30942 (select (content!73 lt!30215) (tuple2!2091 (_1!1056 lt!29675) (_2!1056 lt!29675))))))

(declare-fun e!45956 () Bool)

(assert (=> d!15661 (= lt!30942 e!45956)))

(declare-fun res!37599 () Bool)

(assert (=> d!15661 (=> (not res!37599) (not e!45956))))

(assert (=> d!15661 (= res!37599 ((_ is Cons!1466) lt!30215))))

(assert (=> d!15661 (= (contains!711 lt!30215 (tuple2!2091 (_1!1056 lt!29675) (_2!1056 lt!29675))) lt!30942)))

(declare-fun b!70249 () Bool)

(declare-fun e!45955 () Bool)

(assert (=> b!70249 (= e!45956 e!45955)))

(declare-fun res!37598 () Bool)

(assert (=> b!70249 (=> res!37598 e!45955)))

(assert (=> b!70249 (= res!37598 (= (h!2051 lt!30215) (tuple2!2091 (_1!1056 lt!29675) (_2!1056 lt!29675))))))

(declare-fun b!70250 () Bool)

(assert (=> b!70250 (= e!45955 (contains!711 (t!4964 lt!30215) (tuple2!2091 (_1!1056 lt!29675) (_2!1056 lt!29675))))))

(assert (= (and d!15661 res!37599) b!70249))

(assert (= (and b!70249 (not res!37598)) b!70250))

(declare-fun m!67155 () Bool)

(assert (=> d!15661 m!67155))

(declare-fun m!67157 () Bool)

(assert (=> d!15661 m!67157))

(declare-fun m!67159 () Bool)

(assert (=> b!70250 m!67159))

(assert (=> b!68964 d!15661))

(assert (=> d!14797 d!14795))

(declare-fun d!15663 () Bool)

(assert (=> d!15663 (= (getValueByKey!129 lt!29859 (_1!1056 lt!29675)) (Some!134 (_2!1056 lt!29675)))))

(assert (=> d!15663 true))

(declare-fun _$22!376 () Unit!1898)

(assert (=> d!15663 (= (choose!390 lt!29859 (_1!1056 lt!29675) (_2!1056 lt!29675)) _$22!376)))

(declare-fun bs!3029 () Bool)

(assert (= bs!3029 d!15663))

(assert (=> bs!3029 m!64051))

(assert (=> d!14797 d!15663))

(declare-fun d!15665 () Bool)

(declare-fun res!37600 () Bool)

(declare-fun e!45957 () Bool)

(assert (=> d!15665 (=> res!37600 e!45957)))

(assert (=> d!15665 (= res!37600 (or ((_ is Nil!1467) lt!29859) ((_ is Nil!1467) (t!4964 lt!29859))))))

(assert (=> d!15665 (= (isStrictlySorted!285 lt!29859) e!45957)))

(declare-fun b!70251 () Bool)

(declare-fun e!45958 () Bool)

(assert (=> b!70251 (= e!45957 e!45958)))

(declare-fun res!37601 () Bool)

(assert (=> b!70251 (=> (not res!37601) (not e!45958))))

(assert (=> b!70251 (= res!37601 (bvslt (_1!1056 (h!2051 lt!29859)) (_1!1056 (h!2051 (t!4964 lt!29859)))))))

(declare-fun b!70252 () Bool)

(assert (=> b!70252 (= e!45958 (isStrictlySorted!285 (t!4964 lt!29859)))))

(assert (= (and d!15665 (not res!37600)) b!70251))

(assert (= (and b!70251 res!37601) b!70252))

(declare-fun m!67161 () Bool)

(assert (=> b!70252 m!67161))

(assert (=> d!14797 d!15665))

(assert (=> b!68826 d!15045))

(assert (=> b!68826 d!15047))

(declare-fun b!70255 () Bool)

(declare-fun e!45960 () Option!135)

(assert (=> b!70255 (= e!45960 (getValueByKey!129 (t!4964 (toList!708 lt!30284)) (_1!1056 (tuple2!2091 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(declare-fun b!70253 () Bool)

(declare-fun e!45959 () Option!135)

(assert (=> b!70253 (= e!45959 (Some!134 (_2!1056 (h!2051 (toList!708 lt!30284)))))))

(declare-fun b!70256 () Bool)

(assert (=> b!70256 (= e!45960 None!133)))

(declare-fun c!10163 () Bool)

(declare-fun d!15667 () Bool)

(assert (=> d!15667 (= c!10163 (and ((_ is Cons!1466) (toList!708 lt!30284)) (= (_1!1056 (h!2051 (toList!708 lt!30284))) (_1!1056 (tuple2!2091 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(assert (=> d!15667 (= (getValueByKey!129 (toList!708 lt!30284) (_1!1056 (tuple2!2091 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))) e!45959)))

(declare-fun b!70254 () Bool)

(assert (=> b!70254 (= e!45959 e!45960)))

(declare-fun c!10164 () Bool)

(assert (=> b!70254 (= c!10164 (and ((_ is Cons!1466) (toList!708 lt!30284)) (not (= (_1!1056 (h!2051 (toList!708 lt!30284))) (_1!1056 (tuple2!2091 lt!29804 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))))

(assert (= (and d!15667 c!10163) b!70253))

(assert (= (and d!15667 (not c!10163)) b!70254))

(assert (= (and b!70254 c!10164) b!70255))

(assert (= (and b!70254 (not c!10164)) b!70256))

(declare-fun m!67163 () Bool)

(assert (=> b!70255 m!67163))

(assert (=> b!69054 d!15667))

(declare-fun lt!30943 () Bool)

(declare-fun d!15669 () Bool)

(assert (=> d!15669 (= lt!30943 (select (content!73 (toList!708 lt!30308)) (ite (or c!9651 c!9648) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(declare-fun e!45962 () Bool)

(assert (=> d!15669 (= lt!30943 e!45962)))

(declare-fun res!37603 () Bool)

(assert (=> d!15669 (=> (not res!37603) (not e!45962))))

(assert (=> d!15669 (= res!37603 ((_ is Cons!1466) (toList!708 lt!30308)))))

(assert (=> d!15669 (= (contains!711 (toList!708 lt!30308) (ite (or c!9651 c!9648) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))) lt!30943)))

(declare-fun b!70257 () Bool)

(declare-fun e!45961 () Bool)

(assert (=> b!70257 (= e!45962 e!45961)))

(declare-fun res!37602 () Bool)

(assert (=> b!70257 (=> res!37602 e!45961)))

(assert (=> b!70257 (= res!37602 (= (h!2051 (toList!708 lt!30308)) (ite (or c!9651 c!9648) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(declare-fun b!70258 () Bool)

(assert (=> b!70258 (= e!45961 (contains!711 (t!4964 (toList!708 lt!30308)) (ite (or c!9651 c!9648) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))

(assert (= (and d!15669 res!37603) b!70257))

(assert (= (and b!70257 (not res!37602)) b!70258))

(declare-fun m!67165 () Bool)

(assert (=> d!15669 m!67165))

(declare-fun m!67167 () Bool)

(assert (=> d!15669 m!67167))

(declare-fun m!67169 () Bool)

(assert (=> b!70258 m!67169))

(assert (=> b!69071 d!15669))

(declare-fun b!70261 () Bool)

(declare-fun e!45964 () Option!135)

(assert (=> b!70261 (= e!45964 (getValueByKey!129 (t!4964 (toList!708 lt!30111)) (_1!1056 (tuple2!2091 lt!29837 lt!29836))))))

(declare-fun b!70259 () Bool)

(declare-fun e!45963 () Option!135)

(assert (=> b!70259 (= e!45963 (Some!134 (_2!1056 (h!2051 (toList!708 lt!30111)))))))

(declare-fun b!70262 () Bool)

(assert (=> b!70262 (= e!45964 None!133)))

(declare-fun c!10165 () Bool)

(declare-fun d!15671 () Bool)

(assert (=> d!15671 (= c!10165 (and ((_ is Cons!1466) (toList!708 lt!30111)) (= (_1!1056 (h!2051 (toList!708 lt!30111))) (_1!1056 (tuple2!2091 lt!29837 lt!29836)))))))

(assert (=> d!15671 (= (getValueByKey!129 (toList!708 lt!30111) (_1!1056 (tuple2!2091 lt!29837 lt!29836))) e!45963)))

(declare-fun b!70260 () Bool)

(assert (=> b!70260 (= e!45963 e!45964)))

(declare-fun c!10166 () Bool)

(assert (=> b!70260 (= c!10166 (and ((_ is Cons!1466) (toList!708 lt!30111)) (not (= (_1!1056 (h!2051 (toList!708 lt!30111))) (_1!1056 (tuple2!2091 lt!29837 lt!29836))))))))

(assert (= (and d!15671 c!10165) b!70259))

(assert (= (and d!15671 (not c!10165)) b!70260))

(assert (= (and b!70260 c!10166) b!70261))

(assert (= (and b!70260 (not c!10166)) b!70262))

(declare-fun m!67171 () Bool)

(assert (=> b!70261 m!67171))

(assert (=> b!68878 d!15671))

(declare-fun b!70265 () Bool)

(declare-fun e!45966 () Option!135)

(assert (=> b!70265 (= e!45966 (getValueByKey!129 (t!4964 (t!4964 lt!29855)) (_1!1056 lt!29675)))))

(declare-fun b!70263 () Bool)

(declare-fun e!45965 () Option!135)

(assert (=> b!70263 (= e!45965 (Some!134 (_2!1056 (h!2051 (t!4964 lt!29855)))))))

(declare-fun b!70266 () Bool)

(assert (=> b!70266 (= e!45966 None!133)))

(declare-fun d!15673 () Bool)

(declare-fun c!10167 () Bool)

(assert (=> d!15673 (= c!10167 (and ((_ is Cons!1466) (t!4964 lt!29855)) (= (_1!1056 (h!2051 (t!4964 lt!29855))) (_1!1056 lt!29675))))))

(assert (=> d!15673 (= (getValueByKey!129 (t!4964 lt!29855) (_1!1056 lt!29675)) e!45965)))

(declare-fun b!70264 () Bool)

(assert (=> b!70264 (= e!45965 e!45966)))

(declare-fun c!10168 () Bool)

(assert (=> b!70264 (= c!10168 (and ((_ is Cons!1466) (t!4964 lt!29855)) (not (= (_1!1056 (h!2051 (t!4964 lt!29855))) (_1!1056 lt!29675)))))))

(assert (= (and d!15673 c!10167) b!70263))

(assert (= (and d!15673 (not c!10167)) b!70264))

(assert (= (and b!70264 c!10168) b!70265))

(assert (= (and b!70264 (not c!10168)) b!70266))

(declare-fun m!67173 () Bool)

(assert (=> b!70265 m!67173))

(assert (=> b!68838 d!15673))

(declare-fun d!15675 () Bool)

(declare-fun e!45968 () Bool)

(assert (=> d!15675 e!45968))

(declare-fun res!37604 () Bool)

(assert (=> d!15675 (=> res!37604 e!45968)))

(declare-fun lt!30947 () Bool)

(assert (=> d!15675 (= res!37604 (not lt!30947))))

(declare-fun lt!30946 () Bool)

(assert (=> d!15675 (= lt!30947 lt!30946)))

(declare-fun lt!30945 () Unit!1898)

(declare-fun e!45967 () Unit!1898)

(assert (=> d!15675 (= lt!30945 e!45967)))

(declare-fun c!10169 () Bool)

(assert (=> d!15675 (= c!10169 lt!30946)))

(assert (=> d!15675 (= lt!30946 (containsKey!133 (toList!708 lt!30226) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!15675 (= (contains!709 lt!30226 #b1000000000000000000000000000000000000000000000000000000000000000) lt!30947)))

(declare-fun b!70267 () Bool)

(declare-fun lt!30944 () Unit!1898)

(assert (=> b!70267 (= e!45967 lt!30944)))

(assert (=> b!70267 (= lt!30944 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 lt!30226) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!70267 (isDefined!83 (getValueByKey!129 (toList!708 lt!30226) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!70268 () Bool)

(declare-fun Unit!1977 () Unit!1898)

(assert (=> b!70268 (= e!45967 Unit!1977)))

(declare-fun b!70269 () Bool)

(assert (=> b!70269 (= e!45968 (isDefined!83 (getValueByKey!129 (toList!708 lt!30226) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15675 c!10169) b!70267))

(assert (= (and d!15675 (not c!10169)) b!70268))

(assert (= (and d!15675 (not res!37604)) b!70269))

(declare-fun m!67175 () Bool)

(assert (=> d!15675 m!67175))

(declare-fun m!67177 () Bool)

(assert (=> b!70267 m!67177))

(declare-fun m!67179 () Bool)

(assert (=> b!70267 m!67179))

(assert (=> b!70267 m!67179))

(declare-fun m!67181 () Bool)

(assert (=> b!70267 m!67181))

(assert (=> b!70269 m!67179))

(assert (=> b!70269 m!67179))

(assert (=> b!70269 m!67181))

(assert (=> b!68994 d!15675))

(declare-fun d!15677 () Bool)

(declare-fun e!45970 () Bool)

(assert (=> d!15677 e!45970))

(declare-fun res!37605 () Bool)

(assert (=> d!15677 (=> res!37605 e!45970)))

(declare-fun lt!30951 () Bool)

(assert (=> d!15677 (= res!37605 (not lt!30951))))

(declare-fun lt!30950 () Bool)

(assert (=> d!15677 (= lt!30951 lt!30950)))

(declare-fun lt!30949 () Unit!1898)

(declare-fun e!45969 () Unit!1898)

(assert (=> d!15677 (= lt!30949 e!45969)))

(declare-fun c!10170 () Bool)

(assert (=> d!15677 (= c!10170 lt!30950)))

(assert (=> d!15677 (= lt!30950 (containsKey!133 (toList!708 lt!30005) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!15677 (= (contains!709 lt!30005 #b1000000000000000000000000000000000000000000000000000000000000000) lt!30951)))

(declare-fun b!70270 () Bool)

(declare-fun lt!30948 () Unit!1898)

(assert (=> b!70270 (= e!45969 lt!30948)))

(assert (=> b!70270 (= lt!30948 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 lt!30005) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!70270 (isDefined!83 (getValueByKey!129 (toList!708 lt!30005) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!70271 () Bool)

(declare-fun Unit!1978 () Unit!1898)

(assert (=> b!70271 (= e!45969 Unit!1978)))

(declare-fun b!70272 () Bool)

(assert (=> b!70272 (= e!45970 (isDefined!83 (getValueByKey!129 (toList!708 lt!30005) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15677 c!10170) b!70270))

(assert (= (and d!15677 (not c!10170)) b!70271))

(assert (= (and d!15677 (not res!37605)) b!70272))

(declare-fun m!67183 () Bool)

(assert (=> d!15677 m!67183))

(declare-fun m!67185 () Bool)

(assert (=> b!70270 m!67185))

(assert (=> b!70270 m!65803))

(assert (=> b!70270 m!65803))

(declare-fun m!67187 () Bool)

(assert (=> b!70270 m!67187))

(assert (=> b!70272 m!65803))

(assert (=> b!70272 m!65803))

(assert (=> b!70272 m!67187))

(assert (=> bm!5858 d!15677))

(assert (=> b!68873 d!15061))

(assert (=> b!68873 d!15063))

(declare-fun d!15679 () Bool)

(declare-fun res!37606 () Bool)

(declare-fun e!45971 () Bool)

(assert (=> d!15679 (=> res!37606 e!45971)))

(assert (=> d!15679 (= res!37606 (and ((_ is Cons!1466) (toList!708 lt!29805)) (= (_1!1056 (h!2051 (toList!708 lt!29805))) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!15679 (= (containsKey!133 (toList!708 lt!29805) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!45971)))

(declare-fun b!70273 () Bool)

(declare-fun e!45972 () Bool)

(assert (=> b!70273 (= e!45971 e!45972)))

(declare-fun res!37607 () Bool)

(assert (=> b!70273 (=> (not res!37607) (not e!45972))))

(assert (=> b!70273 (= res!37607 (and (or (not ((_ is Cons!1466) (toList!708 lt!29805))) (bvsle (_1!1056 (h!2051 (toList!708 lt!29805))) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1466) (toList!708 lt!29805)) (bvslt (_1!1056 (h!2051 (toList!708 lt!29805))) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!70274 () Bool)

(assert (=> b!70274 (= e!45972 (containsKey!133 (t!4964 (toList!708 lt!29805)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!15679 (not res!37606)) b!70273))

(assert (= (and b!70273 res!37607) b!70274))

(assert (=> b!70274 m!63951))

(declare-fun m!67189 () Bool)

(assert (=> b!70274 m!67189))

(assert (=> d!14725 d!15679))

(declare-fun d!15681 () Bool)

(declare-fun res!37610 () Bool)

(declare-fun e!45973 () Bool)

(assert (=> d!15681 (=> res!37610 e!45973)))

(assert (=> d!15681 (= res!37610 (bvsge #b00000000000000000000000000000000 (size!2065 (_keys!3810 (v!2485 (underlying!247 thiss!992))))))))

(assert (=> d!15681 (= (arrayNoDuplicates!0 (_keys!3810 (v!2485 (underlying!247 thiss!992))) #b00000000000000000000000000000000 Nil!1468) e!45973)))

(declare-fun b!70275 () Bool)

(declare-fun e!45976 () Bool)

(declare-fun call!6032 () Bool)

(assert (=> b!70275 (= e!45976 call!6032)))

(declare-fun b!70276 () Bool)

(declare-fun e!45975 () Bool)

(assert (=> b!70276 (= e!45975 (contains!712 Nil!1468 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun bm!6029 () Bool)

(declare-fun c!10171 () Bool)

(assert (=> bm!6029 (= call!6032 (arrayNoDuplicates!0 (_keys!3810 (v!2485 (underlying!247 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!10171 (Cons!1467 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) #b00000000000000000000000000000000) Nil!1468) Nil!1468)))))

(declare-fun b!70277 () Bool)

(declare-fun e!45974 () Bool)

(assert (=> b!70277 (= e!45973 e!45974)))

(declare-fun res!37609 () Bool)

(assert (=> b!70277 (=> (not res!37609) (not e!45974))))

(assert (=> b!70277 (= res!37609 (not e!45975))))

(declare-fun res!37608 () Bool)

(assert (=> b!70277 (=> (not res!37608) (not e!45975))))

(assert (=> b!70277 (= res!37608 (validKeyInArray!0 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!70278 () Bool)

(assert (=> b!70278 (= e!45974 e!45976)))

(assert (=> b!70278 (= c!10171 (validKeyInArray!0 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!70279 () Bool)

(assert (=> b!70279 (= e!45976 call!6032)))

(assert (= (and d!15681 (not res!37610)) b!70277))

(assert (= (and b!70277 res!37608) b!70276))

(assert (= (and b!70277 res!37609) b!70278))

(assert (= (and b!70278 c!10171) b!70275))

(assert (= (and b!70278 (not c!10171)) b!70279))

(assert (= (or b!70275 b!70279) bm!6029))

(assert (=> b!70276 m!65269))

(assert (=> b!70276 m!65269))

(declare-fun m!67191 () Bool)

(assert (=> b!70276 m!67191))

(assert (=> bm!6029 m!65269))

(declare-fun m!67193 () Bool)

(assert (=> bm!6029 m!67193))

(assert (=> b!70277 m!65269))

(assert (=> b!70277 m!65269))

(assert (=> b!70277 m!65279))

(assert (=> b!70278 m!65269))

(assert (=> b!70278 m!65269))

(assert (=> b!70278 m!65279))

(assert (=> b!69074 d!15681))

(declare-fun d!15683 () Bool)

(assert (=> d!15683 (= (content!74 Nil!1468) ((as const (Array (_ BitVec 64) Bool)) false))))

(assert (=> d!14755 d!15683))

(declare-fun d!15685 () Bool)

(assert (=> d!15685 (isDefined!83 (getValueByKey!129 (toList!708 lt!29857) (_1!1056 lt!29675)))))

(declare-fun lt!30952 () Unit!1898)

(assert (=> d!15685 (= lt!30952 (choose!399 (toList!708 lt!29857) (_1!1056 lt!29675)))))

(declare-fun e!45977 () Bool)

(assert (=> d!15685 e!45977))

(declare-fun res!37611 () Bool)

(assert (=> d!15685 (=> (not res!37611) (not e!45977))))

(assert (=> d!15685 (= res!37611 (isStrictlySorted!285 (toList!708 lt!29857)))))

(assert (=> d!15685 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 lt!29857) (_1!1056 lt!29675)) lt!30952)))

(declare-fun b!70280 () Bool)

(assert (=> b!70280 (= e!45977 (containsKey!133 (toList!708 lt!29857) (_1!1056 lt!29675)))))

(assert (= (and d!15685 res!37611) b!70280))

(assert (=> d!15685 m!64045))

(assert (=> d!15685 m!64045))

(assert (=> d!15685 m!64467))

(declare-fun m!67195 () Bool)

(assert (=> d!15685 m!67195))

(declare-fun m!67197 () Bool)

(assert (=> d!15685 m!67197))

(assert (=> b!70280 m!64463))

(assert (=> b!68833 d!15685))

(assert (=> b!68833 d!15517))

(assert (=> b!68833 d!14821))

(declare-fun d!15687 () Bool)

(assert (not d!15687))

(assert (=> b!68832 d!15687))

(declare-fun d!15689 () Bool)

(assert (=> d!15689 (= (inRange!0 (ite c!9726 (index!3077 lt!29985) (index!3080 lt!29985)) (mask!6111 newMap!16)) (and (bvsge (ite c!9726 (index!3077 lt!29985) (index!3080 lt!29985)) #b00000000000000000000000000000000) (bvslt (ite c!9726 (index!3077 lt!29985) (index!3080 lt!29985)) (bvadd (mask!6111 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!5848 d!15689))

(assert (=> b!69124 d!15107))

(assert (=> b!69124 d!14789))

(declare-fun d!15691 () Bool)

(declare-fun lt!30953 () (_ BitVec 32))

(assert (=> d!15691 (and (bvsge lt!30953 #b00000000000000000000000000000000) (bvsle lt!30953 (bvsub (size!2065 (_keys!3810 (_2!1057 lt!29959))) #b00000000000000000000000000000000)))))

(declare-fun e!45978 () (_ BitVec 32))

(assert (=> d!15691 (= lt!30953 e!45978)))

(declare-fun c!10173 () Bool)

(assert (=> d!15691 (= c!10173 (bvsge #b00000000000000000000000000000000 (size!2065 (_keys!3810 (_2!1057 lt!29959)))))))

(assert (=> d!15691 (and (bvsle #b00000000000000000000000000000000 (size!2065 (_keys!3810 (_2!1057 lt!29959)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2065 (_keys!3810 (_2!1057 lt!29959))) (size!2065 (_keys!3810 (_2!1057 lt!29959)))))))

(assert (=> d!15691 (= (arrayCountValidKeys!0 (_keys!3810 (_2!1057 lt!29959)) #b00000000000000000000000000000000 (size!2065 (_keys!3810 (_2!1057 lt!29959)))) lt!30953)))

(declare-fun bm!6030 () Bool)

(declare-fun call!6033 () (_ BitVec 32))

(assert (=> bm!6030 (= call!6033 (arrayCountValidKeys!0 (_keys!3810 (_2!1057 lt!29959)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2065 (_keys!3810 (_2!1057 lt!29959)))))))

(declare-fun b!70281 () Bool)

(declare-fun e!45979 () (_ BitVec 32))

(assert (=> b!70281 (= e!45979 (bvadd #b00000000000000000000000000000001 call!6033))))

(declare-fun b!70282 () Bool)

(assert (=> b!70282 (= e!45978 e!45979)))

(declare-fun c!10172 () Bool)

(assert (=> b!70282 (= c!10172 (validKeyInArray!0 (select (arr!1828 (_keys!3810 (_2!1057 lt!29959))) #b00000000000000000000000000000000)))))

(declare-fun b!70283 () Bool)

(assert (=> b!70283 (= e!45979 call!6033)))

(declare-fun b!70284 () Bool)

(assert (=> b!70284 (= e!45978 #b00000000000000000000000000000000)))

(assert (= (and d!15691 c!10173) b!70284))

(assert (= (and d!15691 (not c!10173)) b!70282))

(assert (= (and b!70282 c!10172) b!70281))

(assert (= (and b!70282 (not c!10172)) b!70283))

(assert (= (or b!70281 b!70283) bm!6030))

(declare-fun m!67199 () Bool)

(assert (=> bm!6030 m!67199))

(assert (=> b!70282 m!66707))

(assert (=> b!70282 m!66707))

(assert (=> b!70282 m!66717))

(assert (=> b!68799 d!15691))

(declare-fun d!15693 () Bool)

(declare-fun e!45981 () Bool)

(assert (=> d!15693 e!45981))

(declare-fun res!37612 () Bool)

(assert (=> d!15693 (=> res!37612 e!45981)))

(declare-fun lt!30957 () Bool)

(assert (=> d!15693 (= res!37612 (not lt!30957))))

(declare-fun lt!30956 () Bool)

(assert (=> d!15693 (= lt!30957 lt!30956)))

(declare-fun lt!30955 () Unit!1898)

(declare-fun e!45980 () Unit!1898)

(assert (=> d!15693 (= lt!30955 e!45980)))

(declare-fun c!10174 () Bool)

(assert (=> d!15693 (= c!10174 lt!30956)))

(assert (=> d!15693 (= lt!30956 (containsKey!133 (toList!708 lt!30027) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!15693 (= (contains!709 lt!30027 #b1000000000000000000000000000000000000000000000000000000000000000) lt!30957)))

(declare-fun b!70285 () Bool)

(declare-fun lt!30954 () Unit!1898)

(assert (=> b!70285 (= e!45980 lt!30954)))

(assert (=> b!70285 (= lt!30954 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 lt!30027) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!70285 (isDefined!83 (getValueByKey!129 (toList!708 lt!30027) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!70286 () Bool)

(declare-fun Unit!1979 () Unit!1898)

(assert (=> b!70286 (= e!45980 Unit!1979)))

(declare-fun b!70287 () Bool)

(assert (=> b!70287 (= e!45981 (isDefined!83 (getValueByKey!129 (toList!708 lt!30027) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15693 c!10174) b!70285))

(assert (= (and d!15693 (not c!10174)) b!70286))

(assert (= (and d!15693 (not res!37612)) b!70287))

(declare-fun m!67201 () Bool)

(assert (=> d!15693 m!67201))

(declare-fun m!67203 () Bool)

(assert (=> b!70285 m!67203))

(assert (=> b!70285 m!65937))

(assert (=> b!70285 m!65937))

(declare-fun m!67205 () Bool)

(assert (=> b!70285 m!67205))

(assert (=> b!70287 m!65937))

(assert (=> b!70287 m!65937))

(assert (=> b!70287 m!67205))

(assert (=> bm!5865 d!15693))

(declare-fun d!15695 () Bool)

(assert (=> d!15695 (= (apply!73 lt!30245 (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000)) (get!1129 (getValueByKey!129 (toList!708 lt!30245) (select (arr!1828 (_keys!3810 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3030 () Bool)

(assert (= bs!3030 d!15695))

(assert (=> bs!3030 m!64177))

(assert (=> bs!3030 m!66693))

(assert (=> bs!3030 m!66693))

(declare-fun m!67207 () Bool)

(assert (=> bs!3030 m!67207))

(assert (=> b!69029 d!15695))

(declare-fun d!15697 () Bool)

(declare-fun c!10175 () Bool)

(assert (=> d!15697 (= c!10175 ((_ is ValueCellFull!884) (select (arr!1829 (ite (or c!9716 c!9713) (_values!2150 newMap!16) (array!3834 (store (arr!1829 (_values!2150 newMap!16)) (index!3078 lt!29944) (ValueCellFull!884 lt!29673)) (size!2066 (_values!2150 newMap!16))))) #b00000000000000000000000000000000)))))

(declare-fun e!45982 () V!2921)

(assert (=> d!15697 (= (get!1126 (select (arr!1829 (ite (or c!9716 c!9713) (_values!2150 newMap!16) (array!3834 (store (arr!1829 (_values!2150 newMap!16)) (index!3078 lt!29944) (ValueCellFull!884 lt!29673)) (size!2066 (_values!2150 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!321 (defaultEntry!2167 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!45982)))

(declare-fun b!70288 () Bool)

(assert (=> b!70288 (= e!45982 (get!1127 (select (arr!1829 (ite (or c!9716 c!9713) (_values!2150 newMap!16) (array!3834 (store (arr!1829 (_values!2150 newMap!16)) (index!3078 lt!29944) (ValueCellFull!884 lt!29673)) (size!2066 (_values!2150 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!321 (defaultEntry!2167 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!70289 () Bool)

(assert (=> b!70289 (= e!45982 (get!1128 (select (arr!1829 (ite (or c!9716 c!9713) (_values!2150 newMap!16) (array!3834 (store (arr!1829 (_values!2150 newMap!16)) (index!3078 lt!29944) (ValueCellFull!884 lt!29673)) (size!2066 (_values!2150 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!321 (defaultEntry!2167 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15697 c!10175) b!70288))

(assert (= (and d!15697 (not c!10175)) b!70289))

(assert (=> b!70288 m!64705))

(assert (=> b!70288 m!64243))

(declare-fun m!67209 () Bool)

(assert (=> b!70288 m!67209))

(assert (=> b!70289 m!64705))

(assert (=> b!70289 m!64243))

(declare-fun m!67211 () Bool)

(assert (=> b!70289 m!67211))

(assert (=> b!69029 d!15697))

(declare-fun d!15699 () Bool)

(declare-fun res!37613 () Bool)

(declare-fun e!45983 () Bool)

(assert (=> d!15699 (=> res!37613 e!45983)))

(assert (=> d!15699 (= res!37613 (and ((_ is Cons!1466) lt!29851) (= (_1!1056 (h!2051 lt!29851)) (_1!1056 lt!29680))))))

(assert (=> d!15699 (= (containsKey!133 lt!29851 (_1!1056 lt!29680)) e!45983)))

(declare-fun b!70290 () Bool)

(declare-fun e!45984 () Bool)

(assert (=> b!70290 (= e!45983 e!45984)))

(declare-fun res!37614 () Bool)

(assert (=> b!70290 (=> (not res!37614) (not e!45984))))

(assert (=> b!70290 (= res!37614 (and (or (not ((_ is Cons!1466) lt!29851)) (bvsle (_1!1056 (h!2051 lt!29851)) (_1!1056 lt!29680))) ((_ is Cons!1466) lt!29851) (bvslt (_1!1056 (h!2051 lt!29851)) (_1!1056 lt!29680))))))

(declare-fun b!70291 () Bool)

(assert (=> b!70291 (= e!45984 (containsKey!133 (t!4964 lt!29851) (_1!1056 lt!29680)))))

(assert (= (and d!15699 (not res!37613)) b!70290))

(assert (= (and b!70290 res!37614) b!70291))

(declare-fun m!67213 () Bool)

(assert (=> b!70291 m!67213))

(assert (=> b!69129 d!15699))

(declare-fun d!15701 () Bool)

(assert (=> d!15701 (isDefined!83 (getValueByKey!129 (toList!708 lt!29805) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!30958 () Unit!1898)

(assert (=> d!15701 (= lt!30958 (choose!399 (toList!708 lt!29805) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!45985 () Bool)

(assert (=> d!15701 e!45985))

(declare-fun res!37615 () Bool)

(assert (=> d!15701 (=> (not res!37615) (not e!45985))))

(assert (=> d!15701 (= res!37615 (isStrictlySorted!285 (toList!708 lt!29805)))))

(assert (=> d!15701 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 lt!29805) #b1000000000000000000000000000000000000000000000000000000000000000) lt!30958)))

(declare-fun b!70292 () Bool)

(assert (=> b!70292 (= e!45985 (containsKey!133 (toList!708 lt!29805) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!15701 res!37615) b!70292))

(assert (=> d!15701 m!64359))

(assert (=> d!15701 m!64359))

(assert (=> d!15701 m!64771))

(declare-fun m!67215 () Bool)

(assert (=> d!15701 m!67215))

(assert (=> d!15701 m!65791))

(assert (=> b!70292 m!64767))

(assert (=> b!69044 d!15701))

(assert (=> b!69044 d!15549))

(assert (=> b!69044 d!15485))

(declare-fun d!15703 () Bool)

(declare-fun e!45987 () Bool)

(assert (=> d!15703 e!45987))

(declare-fun res!37616 () Bool)

(assert (=> d!15703 (=> res!37616 e!45987)))

(declare-fun lt!30962 () Bool)

(assert (=> d!15703 (= res!37616 (not lt!30962))))

(declare-fun lt!30961 () Bool)

(assert (=> d!15703 (= lt!30962 lt!30961)))

(declare-fun lt!30960 () Unit!1898)

(declare-fun e!45986 () Unit!1898)

(assert (=> d!15703 (= lt!30960 e!45986)))

(declare-fun c!10176 () Bool)

(assert (=> d!15703 (= c!10176 lt!30961)))

(assert (=> d!15703 (= lt!30961 (containsKey!133 (toList!708 lt!30308) (_1!1056 (ite (or c!9651 c!9648) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(assert (=> d!15703 (= (contains!709 lt!30308 (_1!1056 (ite (or c!9651 c!9648) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))) lt!30962)))

(declare-fun b!70293 () Bool)

(declare-fun lt!30959 () Unit!1898)

(assert (=> b!70293 (= e!45986 lt!30959)))

(assert (=> b!70293 (= lt!30959 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!708 lt!30308) (_1!1056 (ite (or c!9651 c!9648) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(assert (=> b!70293 (isDefined!83 (getValueByKey!129 (toList!708 lt!30308) (_1!1056 (ite (or c!9651 c!9648) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(declare-fun b!70294 () Bool)

(declare-fun Unit!1980 () Unit!1898)

(assert (=> b!70294 (= e!45986 Unit!1980)))

(declare-fun b!70295 () Bool)

(assert (=> b!70295 (= e!45987 (isDefined!83 (getValueByKey!129 (toList!708 lt!30308) (_1!1056 (ite (or c!9651 c!9648) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))))

(assert (= (and d!15703 c!10176) b!70293))

(assert (= (and d!15703 (not c!10176)) b!70294))

(assert (= (and d!15703 (not res!37616)) b!70295))

(declare-fun m!67217 () Bool)

(assert (=> d!15703 m!67217))

(declare-fun m!67219 () Bool)

(assert (=> b!70293 m!67219))

(assert (=> b!70293 m!64899))

(assert (=> b!70293 m!64899))

(declare-fun m!67221 () Bool)

(assert (=> b!70293 m!67221))

(assert (=> b!70295 m!64899))

(assert (=> b!70295 m!64899))

(assert (=> b!70295 m!67221))

(assert (=> d!14869 d!15703))

(declare-fun b!70298 () Bool)

(declare-fun e!45989 () Option!135)

(assert (=> b!70298 (= e!45989 (getValueByKey!129 (t!4964 lt!30306) (_1!1056 (ite (or c!9651 c!9648) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(declare-fun b!70296 () Bool)

(declare-fun e!45988 () Option!135)

(assert (=> b!70296 (= e!45988 (Some!134 (_2!1056 (h!2051 lt!30306))))))

(declare-fun b!70299 () Bool)

(assert (=> b!70299 (= e!45989 None!133)))

(declare-fun c!10177 () Bool)

(declare-fun d!15705 () Bool)

(assert (=> d!15705 (= c!10177 (and ((_ is Cons!1466) lt!30306) (= (_1!1056 (h!2051 lt!30306)) (_1!1056 (ite (or c!9651 c!9648) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))))

(assert (=> d!15705 (= (getValueByKey!129 lt!30306 (_1!1056 (ite (or c!9651 c!9648) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))) e!45988)))

(declare-fun b!70297 () Bool)

(assert (=> b!70297 (= e!45988 e!45989)))

(declare-fun c!10178 () Bool)

(assert (=> b!70297 (= c!10178 (and ((_ is Cons!1466) lt!30306) (not (= (_1!1056 (h!2051 lt!30306)) (_1!1056 (ite (or c!9651 c!9648) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))))))))

(assert (= (and d!15705 c!10177) b!70296))

(assert (= (and d!15705 (not c!10177)) b!70297))

(assert (= (and b!70297 c!10178) b!70298))

(assert (= (and b!70297 (not c!10178)) b!70299))

(declare-fun m!67223 () Bool)

(assert (=> b!70298 m!67223))

(assert (=> d!14869 d!15705))

(declare-fun d!15707 () Bool)

(assert (=> d!15707 (= (getValueByKey!129 lt!30306 (_1!1056 (ite (or c!9651 c!9648) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))) (Some!134 (_2!1056 (ite (or c!9651 c!9648) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(declare-fun lt!30963 () Unit!1898)

(assert (=> d!15707 (= lt!30963 (choose!390 lt!30306 (_1!1056 (ite (or c!9651 c!9648) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))) (_2!1056 (ite (or c!9651 c!9648) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(declare-fun e!45990 () Bool)

(assert (=> d!15707 e!45990))

(declare-fun res!37617 () Bool)

(assert (=> d!15707 (=> (not res!37617) (not e!45990))))

(assert (=> d!15707 (= res!37617 (isStrictlySorted!285 lt!30306))))

(assert (=> d!15707 (= (lemmaContainsTupThenGetReturnValue!49 lt!30306 (_1!1056 (ite (or c!9651 c!9648) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))) (_2!1056 (ite (or c!9651 c!9648) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))) lt!30963)))

(declare-fun b!70300 () Bool)

(declare-fun res!37618 () Bool)

(assert (=> b!70300 (=> (not res!37618) (not e!45990))))

(assert (=> b!70300 (= res!37618 (containsKey!133 lt!30306 (_1!1056 (ite (or c!9651 c!9648) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(declare-fun b!70301 () Bool)

(assert (=> b!70301 (= e!45990 (contains!711 lt!30306 (tuple2!2091 (_1!1056 (ite (or c!9651 c!9648) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))) (_2!1056 (ite (or c!9651 c!9648) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))))

(assert (= (and d!15707 res!37617) b!70300))

(assert (= (and b!70300 res!37618) b!70301))

(assert (=> d!15707 m!64893))

(declare-fun m!67225 () Bool)

(assert (=> d!15707 m!67225))

(declare-fun m!67227 () Bool)

(assert (=> d!15707 m!67227))

(declare-fun m!67229 () Bool)

(assert (=> b!70300 m!67229))

(declare-fun m!67231 () Bool)

(assert (=> b!70301 m!67231))

(assert (=> d!14869 d!15707))

(declare-fun b!70302 () Bool)

(declare-fun e!45994 () List!1470)

(declare-fun call!6035 () List!1470)

(assert (=> b!70302 (= e!45994 call!6035)))

(declare-fun c!10179 () Bool)

(declare-fun b!70303 () Bool)

(assert (=> b!70303 (= c!10179 (and ((_ is Cons!1466) (toList!708 (ite c!9651 call!5763 (ite c!9648 call!5760 call!5758)))) (bvsgt (_1!1056 (h!2051 (toList!708 (ite c!9651 call!5763 (ite c!9648 call!5760 call!5758))))) (_1!1056 (ite (or c!9651 c!9648) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))))

(declare-fun e!45992 () List!1470)

(assert (=> b!70303 (= e!45992 e!45994)))

(declare-fun b!70304 () Bool)

(assert (=> b!70304 (= e!45994 call!6035)))

(declare-fun b!70306 () Bool)

(declare-fun call!6034 () List!1470)

(assert (=> b!70306 (= e!45992 call!6034)))

(declare-fun bm!6031 () Bool)

(declare-fun call!6036 () List!1470)

(assert (=> bm!6031 (= call!6034 call!6036)))

(declare-fun bm!6032 () Bool)

(assert (=> bm!6032 (= call!6035 call!6034)))

(declare-fun b!70307 () Bool)

(declare-fun e!45991 () List!1470)

(assert (=> b!70307 (= e!45991 e!45992)))

(declare-fun c!10180 () Bool)

(assert (=> b!70307 (= c!10180 (and ((_ is Cons!1466) (toList!708 (ite c!9651 call!5763 (ite c!9648 call!5760 call!5758)))) (= (_1!1056 (h!2051 (toList!708 (ite c!9651 call!5763 (ite c!9648 call!5760 call!5758))))) (_1!1056 (ite (or c!9651 c!9648) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))))

(declare-fun bm!6033 () Bool)

(declare-fun c!10182 () Bool)

(declare-fun e!45993 () List!1470)

(assert (=> bm!6033 (= call!6036 ($colon$colon!63 e!45993 (ite c!10182 (h!2051 (toList!708 (ite c!9651 call!5763 (ite c!9648 call!5760 call!5758)))) (tuple2!2091 (_1!1056 (ite (or c!9651 c!9648) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))) (_2!1056 (ite (or c!9651 c!9648) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))))))))

(declare-fun c!10181 () Bool)

(assert (=> bm!6033 (= c!10181 c!10182)))

(declare-fun b!70308 () Bool)

(declare-fun res!37620 () Bool)

(declare-fun e!45995 () Bool)

(assert (=> b!70308 (=> (not res!37620) (not e!45995))))

(declare-fun lt!30964 () List!1470)

(assert (=> b!70308 (= res!37620 (containsKey!133 lt!30964 (_1!1056 (ite (or c!9651 c!9648) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(declare-fun b!70309 () Bool)

(assert (=> b!70309 (= e!45995 (contains!711 lt!30964 (tuple2!2091 (_1!1056 (ite (or c!9651 c!9648) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))) (_2!1056 (ite (or c!9651 c!9648) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))))

(declare-fun b!70310 () Bool)

(assert (=> b!70310 (= e!45993 (ite c!10180 (t!4964 (toList!708 (ite c!9651 call!5763 (ite c!9648 call!5760 call!5758)))) (ite c!10179 (Cons!1466 (h!2051 (toList!708 (ite c!9651 call!5763 (ite c!9648 call!5760 call!5758)))) (t!4964 (toList!708 (ite c!9651 call!5763 (ite c!9648 call!5760 call!5758))))) Nil!1467)))))

(declare-fun b!70311 () Bool)

(assert (=> b!70311 (= e!45991 call!6036)))

(declare-fun d!15709 () Bool)

(assert (=> d!15709 e!45995))

(declare-fun res!37619 () Bool)

(assert (=> d!15709 (=> (not res!37619) (not e!45995))))

(assert (=> d!15709 (= res!37619 (isStrictlySorted!285 lt!30964))))

(assert (=> d!15709 (= lt!30964 e!45991)))

(assert (=> d!15709 (= c!10182 (and ((_ is Cons!1466) (toList!708 (ite c!9651 call!5763 (ite c!9648 call!5760 call!5758)))) (bvslt (_1!1056 (h!2051 (toList!708 (ite c!9651 call!5763 (ite c!9648 call!5760 call!5758))))) (_1!1056 (ite (or c!9651 c!9648) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))))))))

(assert (=> d!15709 (isStrictlySorted!285 (toList!708 (ite c!9651 call!5763 (ite c!9648 call!5760 call!5758))))))

(assert (=> d!15709 (= (insertStrictlySorted!52 (toList!708 (ite c!9651 call!5763 (ite c!9648 call!5760 call!5758))) (_1!1056 (ite (or c!9651 c!9648) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))) (_2!1056 (ite (or c!9651 c!9648) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))) lt!30964)))

(declare-fun b!70305 () Bool)

(assert (=> b!70305 (= e!45993 (insertStrictlySorted!52 (t!4964 (toList!708 (ite c!9651 call!5763 (ite c!9648 call!5760 call!5758)))) (_1!1056 (ite (or c!9651 c!9648) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992)))))) (_2!1056 (ite (or c!9651 c!9648) (tuple2!2091 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2073 (v!2485 (underlying!247 thiss!992)))) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 (v!2485 (underlying!247 thiss!992))))))))))

(assert (= (and d!15709 c!10182) b!70311))

(assert (= (and d!15709 (not c!10182)) b!70307))

(assert (= (and b!70307 c!10180) b!70306))

(assert (= (and b!70307 (not c!10180)) b!70303))

(assert (= (and b!70303 c!10179) b!70304))

(assert (= (and b!70303 (not c!10179)) b!70302))

(assert (= (or b!70304 b!70302) bm!6032))

(assert (= (or b!70306 bm!6032) bm!6031))

(assert (= (or b!70311 bm!6031) bm!6033))

(assert (= (and bm!6033 c!10181) b!70305))

(assert (= (and bm!6033 (not c!10181)) b!70310))

(assert (= (and d!15709 res!37619) b!70308))

(assert (= (and b!70308 res!37620) b!70309))

(declare-fun m!67233 () Bool)

(assert (=> d!15709 m!67233))

(declare-fun m!67235 () Bool)

(assert (=> d!15709 m!67235))

(declare-fun m!67237 () Bool)

(assert (=> b!70309 m!67237))

(declare-fun m!67239 () Bool)

(assert (=> b!70308 m!67239))

(declare-fun m!67241 () Bool)

(assert (=> bm!6033 m!67241))

(declare-fun m!67243 () Bool)

(assert (=> b!70305 m!67243))

(assert (=> d!14869 d!15709))

(declare-fun lt!30965 () Bool)

(declare-fun d!15711 () Bool)

(assert (=> d!15711 (= lt!30965 (select (content!74 (ite c!9674 (Cons!1467 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) Nil!1468) Nil!1468)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!45996 () Bool)

(assert (=> d!15711 (= lt!30965 e!45996)))

(declare-fun res!37621 () Bool)

(assert (=> d!15711 (=> (not res!37621) (not e!45996))))

(assert (=> d!15711 (= res!37621 ((_ is Cons!1467) (ite c!9674 (Cons!1467 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) Nil!1468) Nil!1468)))))

(assert (=> d!15711 (= (contains!712 (ite c!9674 (Cons!1467 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) Nil!1468) Nil!1468) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) lt!30965)))

(declare-fun b!70312 () Bool)

(declare-fun e!45997 () Bool)

(assert (=> b!70312 (= e!45996 e!45997)))

(declare-fun res!37622 () Bool)

(assert (=> b!70312 (=> res!37622 e!45997)))

(assert (=> b!70312 (= res!37622 (= (h!2052 (ite c!9674 (Cons!1467 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) Nil!1468) Nil!1468)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!70313 () Bool)

(assert (=> b!70313 (= e!45997 (contains!712 (t!4965 (ite c!9674 (Cons!1467 (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) from!355) Nil!1468) Nil!1468)) (select (arr!1828 (_keys!3810 (v!2485 (underlying!247 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!15711 res!37621) b!70312))

(assert (= (and b!70312 (not res!37622)) b!70313))

(declare-fun m!67245 () Bool)

(assert (=> d!15711 m!67245))

(assert (=> d!15711 m!64753))

(declare-fun m!67247 () Bool)

(assert (=> d!15711 m!67247))

(assert (=> b!70313 m!64753))

(declare-fun m!67249 () Bool)

(assert (=> b!70313 m!67249))

(assert (=> b!69037 d!15711))

(declare-fun d!15713 () Bool)

(declare-fun e!45998 () Bool)

(assert (=> d!15713 e!45998))

(declare-fun res!37623 () Bool)

(assert (=> d!15713 (=> (not res!37623) (not e!45998))))

(declare-fun lt!30969 () ListLongMap!1385)

(assert (=> d!15713 (= res!37623 (contains!709 lt!30969 (_1!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))))))

(declare-fun lt!30967 () List!1470)

(assert (=> d!15713 (= lt!30969 (ListLongMap!1386 lt!30967))))

(declare-fun lt!30966 () Unit!1898)

(declare-fun lt!30968 () Unit!1898)

(assert (=> d!15713 (= lt!30966 lt!30968)))

(assert (=> d!15713 (= (getValueByKey!129 lt!30967 (_1!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))) (Some!134 (_2!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))))))

(assert (=> d!15713 (= lt!30968 (lemmaContainsTupThenGetReturnValue!49 lt!30967 (_1!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))) (_2!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))))))

(assert (=> d!15713 (= lt!30967 (insertStrictlySorted!52 (toList!708 call!5910) (_1!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))) (_2!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))))))

(assert (=> d!15713 (= (+!89 call!5910 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))) lt!30969)))

(declare-fun b!70314 () Bool)

(declare-fun res!37624 () Bool)

(assert (=> b!70314 (=> (not res!37624) (not e!45998))))

(assert (=> b!70314 (= res!37624 (= (getValueByKey!129 (toList!708 lt!30969) (_1!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16)))) (Some!134 (_2!1056 (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))))))))

(declare-fun b!70315 () Bool)

(assert (=> b!70315 (= e!45998 (contains!711 (toList!708 lt!30969) (tuple2!2091 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2073 newMap!16))))))

(assert (= (and d!15713 res!37623) b!70314))

(assert (= (and b!70314 res!37624) b!70315))

(declare-fun m!67251 () Bool)

(assert (=> d!15713 m!67251))

(declare-fun m!67253 () Bool)

(assert (=> d!15713 m!67253))

(declare-fun m!67255 () Bool)

(assert (=> d!15713 m!67255))

(declare-fun m!67257 () Bool)

(assert (=> d!15713 m!67257))

(declare-fun m!67259 () Bool)

(assert (=> b!70314 m!67259))

(declare-fun m!67261 () Bool)

(assert (=> b!70315 m!67261))

(assert (=> b!69098 d!15713))

(declare-fun mapIsEmpty!3115 () Bool)

(declare-fun mapRes!3115 () Bool)

(assert (=> mapIsEmpty!3115 mapRes!3115))

(declare-fun condMapEmpty!3115 () Bool)

(declare-fun mapDefault!3115 () ValueCell!884)

(assert (=> mapNonEmpty!3113 (= condMapEmpty!3115 (= mapRest!3113 ((as const (Array (_ BitVec 32) ValueCell!884)) mapDefault!3115)))))

(declare-fun e!46000 () Bool)

(assert (=> mapNonEmpty!3113 (= tp!8423 (and e!46000 mapRes!3115))))

(declare-fun mapNonEmpty!3115 () Bool)

(declare-fun tp!8425 () Bool)

(declare-fun e!45999 () Bool)

(assert (=> mapNonEmpty!3115 (= mapRes!3115 (and tp!8425 e!45999))))

(declare-fun mapKey!3115 () (_ BitVec 32))

(declare-fun mapRest!3115 () (Array (_ BitVec 32) ValueCell!884))

(declare-fun mapValue!3115 () ValueCell!884)

(assert (=> mapNonEmpty!3115 (= mapRest!3113 (store mapRest!3115 mapKey!3115 mapValue!3115))))

(declare-fun b!70316 () Bool)

(assert (=> b!70316 (= e!45999 tp_is_empty!2455)))

(declare-fun b!70317 () Bool)

(assert (=> b!70317 (= e!46000 tp_is_empty!2455)))

(assert (= (and mapNonEmpty!3113 condMapEmpty!3115) mapIsEmpty!3115))

(assert (= (and mapNonEmpty!3113 (not condMapEmpty!3115)) mapNonEmpty!3115))

(assert (= (and mapNonEmpty!3115 ((_ is ValueCellFull!884) mapValue!3115)) b!70316))

(assert (= (and mapNonEmpty!3113 ((_ is ValueCellFull!884) mapDefault!3115)) b!70317))

(declare-fun m!67263 () Bool)

(assert (=> mapNonEmpty!3115 m!67263))

(declare-fun mapIsEmpty!3116 () Bool)

(declare-fun mapRes!3116 () Bool)

(assert (=> mapIsEmpty!3116 mapRes!3116))

(declare-fun condMapEmpty!3116 () Bool)

(declare-fun mapDefault!3116 () ValueCell!884)

(assert (=> mapNonEmpty!3114 (= condMapEmpty!3116 (= mapRest!3114 ((as const (Array (_ BitVec 32) ValueCell!884)) mapDefault!3116)))))

(declare-fun e!46002 () Bool)

(assert (=> mapNonEmpty!3114 (= tp!8424 (and e!46002 mapRes!3116))))

(declare-fun mapNonEmpty!3116 () Bool)

(declare-fun tp!8426 () Bool)

(declare-fun e!46001 () Bool)

(assert (=> mapNonEmpty!3116 (= mapRes!3116 (and tp!8426 e!46001))))

(declare-fun mapRest!3116 () (Array (_ BitVec 32) ValueCell!884))

(declare-fun mapValue!3116 () ValueCell!884)

(declare-fun mapKey!3116 () (_ BitVec 32))

(assert (=> mapNonEmpty!3116 (= mapRest!3114 (store mapRest!3116 mapKey!3116 mapValue!3116))))

(declare-fun b!70318 () Bool)

(assert (=> b!70318 (= e!46001 tp_is_empty!2455)))

(declare-fun b!70319 () Bool)

(assert (=> b!70319 (= e!46002 tp_is_empty!2455)))

(assert (= (and mapNonEmpty!3114 condMapEmpty!3116) mapIsEmpty!3116))

(assert (= (and mapNonEmpty!3114 (not condMapEmpty!3116)) mapNonEmpty!3116))

(assert (= (and mapNonEmpty!3116 ((_ is ValueCellFull!884) mapValue!3116)) b!70318))

(assert (= (and mapNonEmpty!3114 ((_ is ValueCellFull!884) mapDefault!3116)) b!70319))

(declare-fun m!67265 () Bool)

(assert (=> mapNonEmpty!3116 m!67265))

(declare-fun b_lambda!3125 () Bool)

(assert (= b_lambda!3095 (or (and b!68229 b_free!2077 (= (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) (defaultEntry!2167 newMap!16))) (and b!68221 b_free!2079) b_lambda!3125)))

(declare-fun b_lambda!3127 () Bool)

(assert (= b_lambda!3113 (or (and b!68229 b_free!2077 (= (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) (defaultEntry!2167 newMap!16))) (and b!68221 b_free!2079) b_lambda!3127)))

(declare-fun b_lambda!3129 () Bool)

(assert (= b_lambda!3115 (or (and b!68229 b_free!2077 (= (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) (defaultEntry!2167 newMap!16))) (and b!68221 b_free!2079) b_lambda!3129)))

(declare-fun b_lambda!3131 () Bool)

(assert (= b_lambda!3119 (or (and b!68229 b_free!2077 (= (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) (defaultEntry!2167 newMap!16))) (and b!68221 b_free!2079) b_lambda!3131)))

(declare-fun b_lambda!3133 () Bool)

(assert (= b_lambda!3111 (or (and b!68229 b_free!2077) (and b!68221 b_free!2079 (= (defaultEntry!2167 newMap!16) (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))))) b_lambda!3133)))

(declare-fun b_lambda!3135 () Bool)

(assert (= b_lambda!3109 (or (and b!68229 b_free!2077) (and b!68221 b_free!2079 (= (defaultEntry!2167 newMap!16) (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))))) b_lambda!3135)))

(declare-fun b_lambda!3137 () Bool)

(assert (= b_lambda!3107 (or (and b!68229 b_free!2077 (= (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) (defaultEntry!2167 newMap!16))) (and b!68221 b_free!2079) b_lambda!3137)))

(declare-fun b_lambda!3139 () Bool)

(assert (= b_lambda!3099 (or (and b!68229 b_free!2077 (= (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) (defaultEntry!2167 newMap!16))) (and b!68221 b_free!2079) b_lambda!3139)))

(declare-fun b_lambda!3141 () Bool)

(assert (= b_lambda!3093 (or (and b!68229 b_free!2077 (= (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) (defaultEntry!2167 newMap!16))) (and b!68221 b_free!2079) b_lambda!3141)))

(declare-fun b_lambda!3143 () Bool)

(assert (= b_lambda!3105 (or (and b!68229 b_free!2077 (= (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) (defaultEntry!2167 newMap!16))) (and b!68221 b_free!2079) b_lambda!3143)))

(declare-fun b_lambda!3145 () Bool)

(assert (= b_lambda!3117 (or (and b!68229 b_free!2077 (= (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) (defaultEntry!2167 newMap!16))) (and b!68221 b_free!2079) b_lambda!3145)))

(declare-fun b_lambda!3147 () Bool)

(assert (= b_lambda!3101 (or (and b!68229 b_free!2077 (= (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) (defaultEntry!2167 newMap!16))) (and b!68221 b_free!2079) b_lambda!3147)))

(declare-fun b_lambda!3149 () Bool)

(assert (= b_lambda!3121 (or (and b!68229 b_free!2077 (= (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) (defaultEntry!2167 newMap!16))) (and b!68221 b_free!2079) b_lambda!3149)))

(declare-fun b_lambda!3151 () Bool)

(assert (= b_lambda!3103 (or (and b!68229 b_free!2077 (= (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) (defaultEntry!2167 newMap!16))) (and b!68221 b_free!2079) b_lambda!3151)))

(declare-fun b_lambda!3153 () Bool)

(assert (= b_lambda!3097 (or (and b!68229 b_free!2077 (= (defaultEntry!2167 (v!2485 (underlying!247 thiss!992))) (defaultEntry!2167 newMap!16))) (and b!68221 b_free!2079) b_lambda!3153)))

(check-sat (not b!69654) (not b!69780) (not b!69704) (not d!14983) (not bm!5925) (not b!69664) (not b!69854) (not b!69423) (not b!69386) (not b!69738) (not b!69696) (not b!69730) (not b!69222) (not d!14935) (not b!69686) (not b!70270) (not d!15053) (not b!70250) (not b_lambda!3123) (not d!15059) (not bm!5955) (not b!69757) (not b!70293) (not bm!5986) (not b!70065) (not bm!5981) (not bm!5965) (not b!69178) (not d!15209) (not d!15535) (not b!69834) (not b!69215) (not b!70229) (not b!70272) (not d!15229) (not b!69723) (not d!14913) (not d!15109) (not b!70150) (not b!69223) (not b!69616) (not b!69992) (not d!15203) (not b!69434) (not bm!5922) (not d!15077) (not d!15051) (not b!70282) (not b!69794) (not b!70067) (not bm!5969) (not d!15323) (not b!69579) (not b!70177) (not d!15355) (not b!70240) (not b!69777) (not b!69459) (not d!15453) (not b!70220) (not d!15071) (not b!70103) (not b!69569) (not d!15597) (not d!15065) (not b!69180) (not d!15159) (not b!70309) (not d!15507) (not d!15605) (not d!15545) (not d!15655) (not d!14953) (not d!15033) (not d!15267) (not d!15183) (not b!69914) (not bm!5984) (not d!14967) (not b!69270) (not d!15011) (not d!15395) (not b!69962) (not b!69624) (not d!15501) (not b!69631) (not b!70162) (not b!69538) (not d!15221) (not b!69947) (not d!15471) (not b!69396) (not b!69524) (not d!15135) (not b!70181) (not d!15091) (not d!15283) (not d!15085) (not b!69393) (not b!69371) (not b!69203) (not d!15703) (not b!70155) (not b!69623) (not b!69647) (not d!15421) (not b!69224) (not d!15393) (not b!69442) (not b!69375) (not d!15359) (not d!15107) (not b!70192) (not b!69261) (not b!70221) (not bm!6012) b_and!4307 (not b!69342) (not b!69510) (not d!15631) (not b!70173) (not b!69208) (not b!69505) (not b!70045) (not d!15189) (not b!70298) (not b!69323) (not d!15407) (not d!15309) (not b!69700) (not bm!5919) (not b!69652) (not b!70092) (not b!69960) (not d!15577) (not b_next!2077) (not mapNonEmpty!3116) (not b!69617) (not bm!6017) (not b!69552) (not b!69421) (not b!69645) (not b!70109) (not b!69718) (not b!69542) (not b_lambda!3083) (not b!69465) (not b!69573) (not b!70248) (not b!69238) (not b!70001) (not b!69567) (not bm!6013) (not b!69721) (not b!69454) (not b!70130) (not bm!6027) (not b!69200) (not b_lambda!3131) (not d!15385) (not d!15173) (not d!15567) (not b!69708) (not b!69772) (not b!69950) (not b_next!2079) (not b!69969) (not b!69983) (not b!69264) (not d!15361) (not d!15487) (not d!15675) (not d!15651) (not d!15155) (not b!69720) (not d!14979) (not b!69596) (not b_lambda!3063) (not bm!5964) (not b!69945) (not d!15541) (not bm!5930) (not d!15223) (not b!70035) (not b!69657) (not b!69851) (not d!15271) (not b!69511) (not d!15633) (not b!69759) (not b!70305) (not b!70005) (not d!15601) (not b!69445) (not b!69930) (not b!69933) (not b!69403) (not b!70158) (not b!69457) (not d!15677) (not bm!5995) (not d!15177) (not b!69320) (not b!70046) (not b!69626) (not b!69233) (not b!69481) (not b!69255) (not b!70315) (not b!69290) (not d!14919) (not d!15061) (not b!70313) (not d!15613) (not b_lambda!3133) (not b!69921) (not b!69319) (not bm!5934) (not b!69285) (not bm!5927) (not b!69147) (not b!69583) (not b!69789) (not b!69206) (not b!69659) (not b!69186) (not bm!5950) (not b!70032) (not b_lambda!3081) (not b!69189) (not d!14941) (not b!69908) (not b!69731) (not d!15075) (not b!69219) (not b!69754) (not b!70146) (not d!15375) (not d!15499) (not b!69179) (not d!14981) (not b!69225) (not d!15317) (not d!15347) (not b!69941) (not b!69906) (not bm!5958) (not b!69990) (not d!15117) (not d!15095) (not b!69815) (not d!15521) (not b!69478) (not d!15089) (not b!69614) (not d!15009) (not d!15113) (not d!15435) (not d!15369) (not b!69188) (not b!69699) (not b!70224) (not bm!6020) (not b!70143) (not b!70148) (not d!15549) (not b!69994) (not d!15441) (not b!69349) (not bm!6021) (not b!69746) tp_is_empty!2455 (not d!15243) (not d!15171) (not b!69462) (not b!69576) (not b!69485) (not b!69415) (not d!15519) (not d!15083) (not b!69429) (not d!15439) (not b_lambda!3145) (not b!69792) (not b!70021) (not b!69469) (not d!15399) (not d!15007) (not b!69440) (not b!70127) (not b!69558) (not d!15367) (not b!69272) (not b!69581) (not b!69845) (not b!69814) (not b!69287) (not d!15013) (not d!15147) (not d!15145) (not b_lambda!3151) (not b!69275) (not b!69361) (not b!70170) (not b!69484) (not b!69446) (not b!69640) (not b!70203) (not d!15073) (not b!69547) (not b!70114) (not b!69649) (not bm!6001) (not b!69190) (not b!69483) (not d!15371) (not bm!5940) (not b!69565) (not d!14949) (not b!69508) (not b!70093) (not d!15397) (not d!14959) (not b!69243) (not bm!5952) (not b!70194) (not d!15517) (not d!15143) (not b!70197) (not b!69303) (not d!15351) (not b!70172) (not bm!5993) (not b!69719) (not d!14985) (not b!69530) (not d!15121) (not d!15165) (not b!69599) (not b!69566) (not b!69358) (not d!15599) (not bm!6007) (not b!70205) (not b_lambda!3091) (not b_lambda!3085) (not b!70231) (not d!14939) (not d!15707) (not b!69817) (not b!69824) (not b!69932) (not b!69689) (not bm!5970) (not b!69796) (not b!69467) (not d!15455) (not b!70239) (not d!15515) (not b!69347) (not d!15467) (not b!69883) (not d!15067) (not b!70123) (not d!15295) (not mapNonEmpty!3115) (not b!69551) (not b!69496) (not b!69259) (not d!15557) (not d!15241) (not b!69311) b_and!4305 (not d!15335) (not b!69363) (not b!70004) (not b!69611) (not b!70013) (not b!69833) (not d!15087) (not bm!5978) (not b!70164) (not d!15617) (not b!69555) (not b!69328) (not b_lambda!3055) (not b_lambda!3139) (not b!69158) (not d!15445) (not d!15151) (not b!70042) (not bm!6004) (not d!14969) (not d!15461) (not d!15553) (not b!70244) (not d!15149) (not b!69364) (not b!69257) (not b!70212) (not b!70267) (not d!15639) (not b!70252) (not d!15713) (not b!69414) (not d!15591) (not d!15327) (not b!69463) (not bm!5994) (not b!69706) (not d!15415) (not b!70153) (not d!15207) (not d!15175) (not b!69460) (not b!69613) (not b!69362) (not b!69394) (not d!15137) (not b!69707) (not b!69737) (not b!70015) (not b!69439) (not b!69925) (not b!69493) (not d!15079) (not b!69202) (not b!69435) (not bm!5933) (not b!69999) (not b!69681) (not b!70027) (not bm!5992) (not d!15249) (not b!69790) (not d!15539) (not d!15213) (not b!69618) (not b!69762) (not d!15611) (not b!69356) (not b!69246) (not d!15503) (not d!15509) (not b!69171) (not b!70099) (not b!69309) (not b!69733) (not d!15139) (not b_lambda!3137) (not b!70217) (not b!69338) (not b!69544) (not b!69302) (not b!69729) (not b!69615) (not b!69966) (not d!14989) (not d!15195) (not b!69294) (not d!15469) (not b!69451) (not d!15337) (not bm!6014) (not d!15437) (not b!69828) (not b!70255) (not b!69286) (not d!15463) (not d!15217) (not d!15341) (not b!69169) (not d!14945) (not d!15391) (not b!69306) (not bm!6028) (not b!69972) (not b!69316) (not d!15645) (not b!70289) (not b!69444) (not b!70198) (not b!69354) (not b!69661) (not b!69953) (not b!69304) (not b!69709) (not b!69226) (not b!69957) (not d!15575) (not d!15331) (not b!69187) (not bm!5976) (not b!70026) (not b!69501) (not d!15125) (not b!70195) (not d!14931) (not d!15029) (not b_lambda!3089) (not d!15279) (not b!70017) (not d!14915) (not d!15153) (not d!15405) (not d!15581) (not b!69490) (not b!69620) (not b!70104) (not b!69470) (not b!70128) (not b_lambda!3127) (not b!70151) (not b!69301) (not b!70287) (not d!15293) (not b!69448) (not b!70008) (not b!70051) (not b!70057) (not d!15305) (not b!69691) (not b!69406) (not b!69922) (not b!69948) (not d!15287) (not b!69236) (not d!15167) (not b!69228) (not b!70291) (not d!15197) (not b!69806) (not d!15695) (not d!15353) (not d!15701) (not d!14933) (not b!70180) (not b!69629) (not b!69239) (not b!69836) (not b!69426) (not bm!5989) (not d!15025) (not b!70258) (not d!15373) (not b!69201) (not d!15277) (not b!69603) (not bm!5943) (not b!69498) (not d!15663) (not b!69166) (not d!15281) (not b!70280) (not d!15427) (not b!69331) (not b!69694) (not b!69518) (not b!69725) (not d!15643) (not b!70010) (not b!69980) (not b_lambda!3149) (not bm!5968) (not bm!5975) (not b!69998) (not b!69798) (not b!70142) (not b!69494) (not b!69698) (not d!15311) (not d!15123) (not b!69735) (not b!69639) (not b!70210) (not d!15163) (not b!70122) (not b!69527) (not b!70277) (not b!70185) (not b!69417) (not b!69297) (not d!15037) (not b!69400) (not bm!5944) (not b!69230) (not d!15543) (not b!69534) (not b!69154) (not b!69352) (not bm!5998) (not d!14943) (not b_lambda!3143) (not d!15669) (not b!69312) (not b!70139) (not d!15425) (not b!69976) (not b!69918) (not b!70167) (not b!70030) (not bm!5921) (not b!70285) (not bm!6000) (not d!14917) (not b!70132) (not b!69247) (not b!69795) (not bm!6030) (not b!69365) (not b!70016) (not b!69289) (not d!14965) (not b!69278) (not d!15479) (not b!69890) (not b!69476) (not d!15205) (not b!70246) (not b!69813) (not d!15141) (not b_lambda!3065) (not d!15389) (not b!69165) (not b!69902) (not b!69197) (not b!69740) (not d!14963) (not b!70292) (not bm!6033) (not b!69803) (not d!15339) (not b!69636) (not b!69326) (not b!69382) (not b!69437) (not d!15661) (not d!15231) (not b!69937) (not b!69366) (not b!70135) (not bm!5973) (not b!70207) (not b!69204) (not b!69606) (not d!15329) (not b!69991) (not b!69848) (not b!69715) (not d!14957) (not d!15377) (not d!15043) (not b!70126) (not b!69753) (not b!69418) (not d!15403) (not d!15081) (not b!69392) (not d!15711) (not b!69728) (not b!69196) (not b!70107) (not b!69341) (not b_lambda!3125) (not b!69360) (not b_lambda!3135) (not b!69712) (not b!69413) (not b!69268) (not d!15363) (not b!69726) (not b!69588) (not b!69822) (not b!69207) (not bm!5937) (not b!69550) (not b!70060) (not b!69499) (not b!69995) (not b!70308) (not d!15533) (not b!69821) (not d!15321) (not b!70011) (not d!15299) (not b!69486) (not b!69472) (not d!15449) (not b!69745) (not b!70261) (not b!69443) (not b!70029) (not b!69515) (not d!15625) (not d!14947) (not b!70160) (not b!69830) (not b!70049) (not d!15551) (not b!69293) (not b!69334) (not b!69964) (not b!70105) (not d!15303) (not d!15045) (not d!15161) (not d!15215) (not b!70269) (not d!15607) (not d!14991) (not b!70038) (not d!14961) (not b!70232) (not d!15531) (not b!69183) (not b!69940) (not b!69705) (not b!69299) (not d!15619) (not b!70112) (not b!69447) (not bm!5947) (not b!70199) (not b!69295) (not b_lambda!3087) (not d!15021) (not b!69431) (not b!69743) (not b!69905) (not d!15357) (not d!15343) (not b!69176) (not d!15561) (not b!70037) (not bm!5916) (not d!14905) (not b!69368) (not d!15571) (not d!15579) (not bm!5961) (not b!70024) (not b!69911) (not b!70165) (not d!15239) (not d!15015) (not b!69212) (not b!69887) (not d!15093) (not b!70278) (not b!69765) (not b!69367) (not b!70119) (not b!69967) (not b!69776) (not b!69607) (not d!15565) (not b!70095) (not b!70115) (not b!69193) (not b!69711) (not d!15417) (not b!69884) (not b_lambda!3141) (not b!69893) (not b!70301) (not d!15039) (not b!69710) (not b!69422) (not bm!5985) (not d!15131) (not d!14955) (not b_lambda!3153) (not bm!5983) (not bm!5942) (not b!70314) (not bm!6024) (not b!69374) (not b!70187) (not b!69529) (not b!69838) (not d!15547) (not b!69378) (not b!69398) (not d!15529) (not b!70295) (not b_lambda!3147) (not b!70265) (not d!15035) (not b!70276) (not d!15105) (not b!69162) (not b!69438) (not d!15653) (not b!69800) (not d!15157) (not b!69818) (not d!15709) (not b!69522) (not b_lambda!3129) (not bm!5951) (not bm!5957) (not b!69570) (not b!69389) (not b!70236) (not b!69156) (not b!69231) (not b!70288) (not b!69503) (not d!15429) (not d!15233) (not d!15345) (not d!15459) (not b!69578) (not b!69898) (not b!70226) (not b!69878) (not b!69433) (not d!15559) (not b!70002) (not d!15129) (not b!69774) (not d!15365) (not b!70300) (not bm!5935) (not b!69913) (not b!69519) (not bm!5977) (not d!15225) (not d!15493) (not b!69487) (not bm!5915) (not d!15411) (not b!69773) (not b!70274) (not b!69651) (not b!69758) (not b!69379) (not b!69592) (not d!15349) (not d!14951) (not b!69173) (not b!69357) (not b!69455) (not b!70213) (not bm!6029) (not b!70025) (not b!70053) (not b!69537) (not b!69205) (not d!15685) (not b!69474) (not b!70190) (not bm!5936) (not b!69927) (not d!15647) (not d!15291) (not b!70061) (not d!15069) (not d!15693) (not d!15023) (not b!69210) (not bm!5920) (not b!70006) (not d!15477) (not b_lambda!3067) (not d!15585) (not b!70154) (not b!69632) (not b!69750))
(check-sat b_and!4305 b_and!4307 (not b_next!2077) (not b_next!2079))
