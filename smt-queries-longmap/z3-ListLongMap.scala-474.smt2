; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!9424 () Bool)

(assert start!9424)

(declare-fun b!68478 () Bool)

(declare-fun b_free!2081 () Bool)

(declare-fun b_next!2081 () Bool)

(assert (=> b!68478 (= b_free!2081 (not b_next!2081))))

(declare-fun tp!8403 () Bool)

(declare-fun b_and!4219 () Bool)

(assert (=> b!68478 (= tp!8403 b_and!4219)))

(declare-fun b!68465 () Bool)

(declare-fun b_free!2083 () Bool)

(declare-fun b_next!2083 () Bool)

(assert (=> b!68465 (= b_free!2083 (not b_next!2083))))

(declare-fun tp!8406 () Bool)

(declare-fun b_and!4221 () Bool)

(assert (=> b!68465 (= tp!8406 b_and!4221)))

(declare-fun tp_is_empty!2457 () Bool)

(declare-fun e!44870 () Bool)

(declare-fun e!44867 () Bool)

(declare-datatypes ((V!2923 0))(
  ( (V!2924 (val!1273 Int)) )
))
(declare-datatypes ((array!3855 0))(
  ( (array!3856 (arr!1841 (Array (_ BitVec 32) (_ BitVec 64))) (size!2077 (_ BitVec 32))) )
))
(declare-datatypes ((ValueCell!885 0))(
  ( (ValueCellFull!885 (v!2493 V!2923)) (EmptyCell!885) )
))
(declare-datatypes ((array!3857 0))(
  ( (array!3858 (arr!1842 (Array (_ BitVec 32) ValueCell!885)) (size!2078 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!678 0))(
  ( (LongMapFixedSize!679 (defaultEntry!2168 Int) (mask!6113 (_ BitVec 32)) (extraKeys!2035 (_ BitVec 32)) (zeroValue!2074 V!2923) (minValue!2074 V!2923) (_size!388 (_ BitVec 32)) (_keys!3812 array!3855) (_values!2151 array!3857) (_vacant!388 (_ BitVec 32))) )
))
(declare-fun newMap!16 () LongMapFixedSize!678)

(declare-fun array_inv!1135 (array!3855) Bool)

(declare-fun array_inv!1136 (array!3857) Bool)

(assert (=> b!68465 (= e!44870 (and tp!8406 tp_is_empty!2457 (array_inv!1135 (_keys!3812 newMap!16)) (array_inv!1136 (_values!2151 newMap!16)) e!44867))))

(declare-fun b!68466 () Bool)

(declare-fun e!44881 () Bool)

(assert (=> b!68466 (= e!44881 tp_is_empty!2457)))

(declare-fun mapNonEmpty!3101 () Bool)

(declare-fun mapRes!3102 () Bool)

(declare-fun tp!8404 () Bool)

(assert (=> mapNonEmpty!3101 (= mapRes!3102 (and tp!8404 e!44881))))

(declare-datatypes ((Cell!484 0))(
  ( (Cell!485 (v!2494 LongMapFixedSize!678)) )
))
(declare-datatypes ((LongMap!484 0))(
  ( (LongMap!485 (underlying!253 Cell!484)) )
))
(declare-fun thiss!992 () LongMap!484)

(declare-fun mapValue!3101 () ValueCell!885)

(declare-fun mapKey!3101 () (_ BitVec 32))

(declare-fun mapRest!3101 () (Array (_ BitVec 32) ValueCell!885))

(assert (=> mapNonEmpty!3101 (= (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (store mapRest!3101 mapKey!3101 mapValue!3101))))

(declare-fun b!68467 () Bool)

(declare-fun e!44865 () Bool)

(declare-fun mapRes!3101 () Bool)

(assert (=> b!68467 (= e!44867 (and e!44865 mapRes!3101))))

(declare-fun condMapEmpty!3102 () Bool)

(declare-fun mapDefault!3101 () ValueCell!885)

(assert (=> b!68467 (= condMapEmpty!3102 (= (arr!1842 (_values!2151 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!885)) mapDefault!3101)))))

(declare-fun b!68468 () Bool)

(declare-fun e!44872 () Bool)

(declare-fun e!44877 () Bool)

(assert (=> b!68468 (= e!44872 e!44877)))

(declare-fun mapIsEmpty!3101 () Bool)

(assert (=> mapIsEmpty!3101 mapRes!3102))

(declare-fun b!68469 () Bool)

(declare-fun e!44875 () Bool)

(declare-fun e!44880 () Bool)

(assert (=> b!68469 (= e!44875 e!44880)))

(declare-fun res!36840 () Bool)

(assert (=> b!68469 (=> (not res!36840) (not e!44880))))

(declare-datatypes ((tuple2!2100 0))(
  ( (tuple2!2101 (_1!1061 Bool) (_2!1061 LongMapFixedSize!678)) )
))
(declare-fun lt!29896 () tuple2!2100)

(declare-fun from!355 () (_ BitVec 32))

(assert (=> b!68469 (= res!36840 (and (_1!1061 lt!29896) (bvsgt from!355 #b00000000000000000000000000000000)))))

(declare-datatypes ((Unit!1919 0))(
  ( (Unit!1920) )
))
(declare-fun lt!29898 () Unit!1919)

(declare-fun e!44871 () Unit!1919)

(assert (=> b!68469 (= lt!29898 e!44871)))

(declare-fun c!9682 () Bool)

(declare-datatypes ((tuple2!2102 0))(
  ( (tuple2!2103 (_1!1062 (_ BitVec 64)) (_2!1062 V!2923)) )
))
(declare-datatypes ((List!1469 0))(
  ( (Nil!1466) (Cons!1465 (h!2050 tuple2!2102) (t!4972 List!1469)) )
))
(declare-datatypes ((ListLongMap!1407 0))(
  ( (ListLongMap!1408 (toList!719 List!1469)) )
))
(declare-fun lt!29895 () ListLongMap!1407)

(declare-fun contains!714 (ListLongMap!1407 (_ BitVec 64)) Bool)

(assert (=> b!68469 (= c!9682 (contains!714 lt!29895 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(declare-fun lt!29897 () V!2923)

(declare-fun update!91 (LongMapFixedSize!678 (_ BitVec 64) V!2923) tuple2!2100)

(assert (=> b!68469 (= lt!29896 (update!91 newMap!16 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))

(declare-fun res!36845 () Bool)

(declare-fun e!44878 () Bool)

(assert (=> start!9424 (=> (not res!36845) (not e!44878))))

(declare-fun valid!282 (LongMap!484) Bool)

(assert (=> start!9424 (= res!36845 (valid!282 thiss!992))))

(assert (=> start!9424 e!44878))

(assert (=> start!9424 e!44872))

(assert (=> start!9424 true))

(assert (=> start!9424 e!44870))

(declare-fun b!68470 () Bool)

(declare-fun Unit!1921 () Unit!1919)

(assert (=> b!68470 (= e!44871 Unit!1921)))

(declare-fun b!68471 () Bool)

(declare-fun e!44879 () Bool)

(assert (=> b!68471 (= e!44878 e!44879)))

(declare-fun res!36843 () Bool)

(assert (=> b!68471 (=> (not res!36843) (not e!44879))))

(declare-fun lt!29888 () ListLongMap!1407)

(assert (=> b!68471 (= res!36843 (= lt!29888 lt!29895))))

(declare-fun map!1140 (LongMapFixedSize!678) ListLongMap!1407)

(assert (=> b!68471 (= lt!29895 (map!1140 newMap!16))))

(declare-fun getCurrentListMap!417 (array!3855 array!3857 (_ BitVec 32) (_ BitVec 32) V!2923 V!2923 (_ BitVec 32) Int) ListLongMap!1407)

(assert (=> b!68471 (= lt!29888 (getCurrentListMap!417 (_keys!3812 (v!2494 (underlying!253 thiss!992))) (_values!2151 (v!2494 (underlying!253 thiss!992))) (mask!6113 (v!2494 (underlying!253 thiss!992))) (extraKeys!2035 (v!2494 (underlying!253 thiss!992))) (zeroValue!2074 (v!2494 (underlying!253 thiss!992))) (minValue!2074 (v!2494 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2168 (v!2494 (underlying!253 thiss!992)))))))

(declare-fun b!68472 () Bool)

(assert (=> b!68472 (= e!44865 tp_is_empty!2457)))

(declare-fun b!68473 () Bool)

(declare-fun res!36841 () Bool)

(assert (=> b!68473 (=> (not res!36841) (not e!44878))))

(assert (=> b!68473 (= res!36841 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2077 (_keys!3812 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!68474 () Bool)

(declare-fun e!44876 () Bool)

(assert (=> b!68474 (= e!44876 tp_is_empty!2457)))

(declare-fun b!68475 () Bool)

(assert (=> b!68475 (= e!44879 e!44875)))

(declare-fun res!36842 () Bool)

(assert (=> b!68475 (=> (not res!36842) (not e!44875))))

(assert (=> b!68475 (= res!36842 (and (not (= (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun get!1124 (ValueCell!885 V!2923) V!2923)

(declare-fun dynLambda!322 (Int (_ BitVec 64)) V!2923)

(assert (=> b!68475 (= lt!29897 (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) from!355) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!68476 () Bool)

(declare-fun e!44868 () Bool)

(assert (=> b!68476 (= e!44868 tp_is_empty!2457)))

(declare-fun b!68477 () Bool)

(declare-fun e!44866 () Bool)

(assert (=> b!68477 (= e!44877 e!44866)))

(declare-fun e!44864 () Bool)

(assert (=> b!68478 (= e!44866 (and tp!8403 tp_is_empty!2457 (array_inv!1135 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (array_inv!1136 (_values!2151 (v!2494 (underlying!253 thiss!992)))) e!44864))))

(declare-fun b!68479 () Bool)

(declare-fun e!44873 () Bool)

(assert (=> b!68479 (= e!44873 (or (not (= (size!2078 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 (mask!6113 (v!2494 (underlying!253 thiss!992)))))) (= (size!2077 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (size!2078 (_values!2151 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun mapIsEmpty!3102 () Bool)

(assert (=> mapIsEmpty!3102 mapRes!3101))

(declare-fun b!68480 () Bool)

(declare-fun res!36839 () Bool)

(assert (=> b!68480 (=> (not res!36839) (not e!44878))))

(declare-fun valid!283 (LongMapFixedSize!678) Bool)

(assert (=> b!68480 (= res!36839 (valid!283 newMap!16))))

(declare-fun b!68481 () Bool)

(assert (=> b!68481 (= e!44864 (and e!44868 mapRes!3102))))

(declare-fun condMapEmpty!3101 () Bool)

(declare-fun mapDefault!3102 () ValueCell!885)

(assert (=> b!68481 (= condMapEmpty!3101 (= (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!885)) mapDefault!3102)))))

(declare-fun b!68482 () Bool)

(declare-fun Unit!1922 () Unit!1919)

(assert (=> b!68482 (= e!44871 Unit!1922)))

(declare-fun lt!29890 () Unit!1919)

(declare-fun lemmaListMapContainsThenArrayContainsFrom!46 (array!3855 array!3857 (_ BitVec 32) (_ BitVec 32) V!2923 V!2923 (_ BitVec 64) (_ BitVec 32) Int) Unit!1919)

(assert (=> b!68482 (= lt!29890 (lemmaListMapContainsThenArrayContainsFrom!46 (_keys!3812 (v!2494 (underlying!253 thiss!992))) (_values!2151 (v!2494 (underlying!253 thiss!992))) (mask!6113 (v!2494 (underlying!253 thiss!992))) (extraKeys!2035 (v!2494 (underlying!253 thiss!992))) (zeroValue!2074 (v!2494 (underlying!253 thiss!992))) (minValue!2074 (v!2494 (underlying!253 thiss!992))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2168 (v!2494 (underlying!253 thiss!992)))))))

(declare-fun arrayContainsKey!0 (array!3855 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> b!68482 (arrayContainsKey!0 (_keys!3812 (v!2494 (underlying!253 thiss!992))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355))))

(declare-fun lt!29891 () Unit!1919)

(declare-fun lemmaNoDuplicateFromThenFromBigger!0 (array!3855 (_ BitVec 32) (_ BitVec 32)) Unit!1919)

(assert (=> b!68482 (= lt!29891 (lemmaNoDuplicateFromThenFromBigger!0 (_keys!3812 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000000000000 from!355))))

(declare-datatypes ((List!1470 0))(
  ( (Nil!1467) (Cons!1466 (h!2051 (_ BitVec 64)) (t!4973 List!1470)) )
))
(declare-fun arrayNoDuplicates!0 (array!3855 (_ BitVec 32) List!1470) Bool)

(assert (=> b!68482 (arrayNoDuplicates!0 (_keys!3812 (v!2494 (underlying!253 thiss!992))) from!355 Nil!1467)))

(declare-fun lt!29887 () Unit!1919)

(declare-fun lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (array!3855 (_ BitVec 32) (_ BitVec 64) List!1470) Unit!1919)

(assert (=> b!68482 (= lt!29887 (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!3812 (v!2494 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (Cons!1466 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) Nil!1467)))))

(assert (=> b!68482 false))

(declare-fun mapNonEmpty!3102 () Bool)

(declare-fun tp!8405 () Bool)

(assert (=> mapNonEmpty!3102 (= mapRes!3101 (and tp!8405 e!44876))))

(declare-fun mapValue!3102 () ValueCell!885)

(declare-fun mapRest!3102 () (Array (_ BitVec 32) ValueCell!885))

(declare-fun mapKey!3102 () (_ BitVec 32))

(assert (=> mapNonEmpty!3102 (= (arr!1842 (_values!2151 newMap!16)) (store mapRest!3102 mapKey!3102 mapValue!3102))))

(declare-fun b!68483 () Bool)

(assert (=> b!68483 (= e!44880 (not e!44873))))

(declare-fun res!36846 () Bool)

(assert (=> b!68483 (=> res!36846 e!44873)))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> b!68483 (= res!36846 (not (validMask!0 (mask!6113 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun lt!29889 () ListLongMap!1407)

(declare-fun lt!29892 () tuple2!2102)

(declare-fun lt!29893 () tuple2!2102)

(declare-fun +!90 (ListLongMap!1407 tuple2!2102) ListLongMap!1407)

(assert (=> b!68483 (= (+!90 (+!90 lt!29889 lt!29892) lt!29893) (+!90 (+!90 lt!29889 lt!29893) lt!29892))))

(assert (=> b!68483 (= lt!29893 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))

(assert (=> b!68483 (= lt!29892 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))

(declare-fun lt!29894 () Unit!1919)

(declare-fun addCommutativeForDiffKeys!9 (ListLongMap!1407 (_ BitVec 64) V!2923 (_ BitVec 64) V!2923) Unit!1919)

(assert (=> b!68483 (= lt!29894 (addCommutativeForDiffKeys!9 lt!29889 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))

(declare-fun getCurrentListMapNoExtraKeys!55 (array!3855 array!3857 (_ BitVec 32) (_ BitVec 32) V!2923 V!2923 (_ BitVec 32) Int) ListLongMap!1407)

(assert (=> b!68483 (= lt!29889 (getCurrentListMapNoExtraKeys!55 (_keys!3812 (v!2494 (underlying!253 thiss!992))) (_values!2151 (v!2494 (underlying!253 thiss!992))) (mask!6113 (v!2494 (underlying!253 thiss!992))) (extraKeys!2035 (v!2494 (underlying!253 thiss!992))) (zeroValue!2074 (v!2494 (underlying!253 thiss!992))) (minValue!2074 (v!2494 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2168 (v!2494 (underlying!253 thiss!992)))))))

(declare-fun b!68484 () Bool)

(declare-fun res!36844 () Bool)

(assert (=> b!68484 (=> (not res!36844) (not e!44878))))

(assert (=> b!68484 (= res!36844 (bvsge (bvadd #b00000000000000000000000000000001 (mask!6113 newMap!16)) (_size!388 (v!2494 (underlying!253 thiss!992)))))))

(assert (= (and start!9424 res!36845) b!68473))

(assert (= (and b!68473 res!36841) b!68480))

(assert (= (and b!68480 res!36839) b!68484))

(assert (= (and b!68484 res!36844) b!68471))

(assert (= (and b!68471 res!36843) b!68475))

(assert (= (and b!68475 res!36842) b!68469))

(assert (= (and b!68469 c!9682) b!68482))

(assert (= (and b!68469 (not c!9682)) b!68470))

(assert (= (and b!68469 res!36840) b!68483))

(assert (= (and b!68483 (not res!36846)) b!68479))

(assert (= (and b!68481 condMapEmpty!3101) mapIsEmpty!3101))

(assert (= (and b!68481 (not condMapEmpty!3101)) mapNonEmpty!3101))

(get-info :version)

(assert (= (and mapNonEmpty!3101 ((_ is ValueCellFull!885) mapValue!3101)) b!68466))

(assert (= (and b!68481 ((_ is ValueCellFull!885) mapDefault!3102)) b!68476))

(assert (= b!68478 b!68481))

(assert (= b!68477 b!68478))

(assert (= b!68468 b!68477))

(assert (= start!9424 b!68468))

(assert (= (and b!68467 condMapEmpty!3102) mapIsEmpty!3102))

(assert (= (and b!68467 (not condMapEmpty!3102)) mapNonEmpty!3102))

(assert (= (and mapNonEmpty!3102 ((_ is ValueCellFull!885) mapValue!3102)) b!68474))

(assert (= (and b!68467 ((_ is ValueCellFull!885) mapDefault!3101)) b!68472))

(assert (= b!68465 b!68467))

(assert (= start!9424 b!68465))

(declare-fun b_lambda!3073 () Bool)

(assert (=> (not b_lambda!3073) (not b!68475)))

(declare-fun t!4969 () Bool)

(declare-fun tb!1477 () Bool)

(assert (=> (and b!68478 (= (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) (defaultEntry!2168 (v!2494 (underlying!253 thiss!992)))) t!4969) tb!1477))

(declare-fun result!2605 () Bool)

(assert (=> tb!1477 (= result!2605 tp_is_empty!2457)))

(assert (=> b!68475 t!4969))

(declare-fun b_and!4223 () Bool)

(assert (= b_and!4219 (and (=> t!4969 result!2605) b_and!4223)))

(declare-fun t!4971 () Bool)

(declare-fun tb!1479 () Bool)

(assert (=> (and b!68465 (= (defaultEntry!2168 newMap!16) (defaultEntry!2168 (v!2494 (underlying!253 thiss!992)))) t!4971) tb!1479))

(declare-fun result!2609 () Bool)

(assert (= result!2609 result!2605))

(assert (=> b!68475 t!4971))

(declare-fun b_and!4225 () Bool)

(assert (= b_and!4221 (and (=> t!4971 result!2609) b_and!4225)))

(declare-fun m!64399 () Bool)

(assert (=> mapNonEmpty!3102 m!64399))

(declare-fun m!64401 () Bool)

(assert (=> b!68480 m!64401))

(declare-fun m!64403 () Bool)

(assert (=> b!68471 m!64403))

(declare-fun m!64405 () Bool)

(assert (=> b!68471 m!64405))

(declare-fun m!64407 () Bool)

(assert (=> b!68475 m!64407))

(declare-fun m!64409 () Bool)

(assert (=> b!68475 m!64409))

(declare-fun m!64411 () Bool)

(assert (=> b!68475 m!64411))

(assert (=> b!68475 m!64409))

(assert (=> b!68475 m!64411))

(declare-fun m!64413 () Bool)

(assert (=> b!68475 m!64413))

(declare-fun m!64415 () Bool)

(assert (=> start!9424 m!64415))

(declare-fun m!64417 () Bool)

(assert (=> b!68478 m!64417))

(declare-fun m!64419 () Bool)

(assert (=> b!68478 m!64419))

(assert (=> b!68469 m!64407))

(assert (=> b!68469 m!64407))

(declare-fun m!64421 () Bool)

(assert (=> b!68469 m!64421))

(assert (=> b!68469 m!64407))

(declare-fun m!64423 () Bool)

(assert (=> b!68469 m!64423))

(declare-fun m!64425 () Bool)

(assert (=> mapNonEmpty!3101 m!64425))

(declare-fun m!64427 () Bool)

(assert (=> b!68482 m!64427))

(declare-fun m!64429 () Bool)

(assert (=> b!68482 m!64429))

(assert (=> b!68482 m!64407))

(declare-fun m!64431 () Bool)

(assert (=> b!68482 m!64431))

(assert (=> b!68482 m!64407))

(assert (=> b!68482 m!64407))

(declare-fun m!64433 () Bool)

(assert (=> b!68482 m!64433))

(assert (=> b!68482 m!64407))

(declare-fun m!64435 () Bool)

(assert (=> b!68482 m!64435))

(declare-fun m!64437 () Bool)

(assert (=> b!68483 m!64437))

(declare-fun m!64439 () Bool)

(assert (=> b!68483 m!64439))

(declare-fun m!64441 () Bool)

(assert (=> b!68483 m!64441))

(declare-fun m!64443 () Bool)

(assert (=> b!68483 m!64443))

(declare-fun m!64445 () Bool)

(assert (=> b!68483 m!64445))

(assert (=> b!68483 m!64407))

(assert (=> b!68483 m!64443))

(assert (=> b!68483 m!64407))

(declare-fun m!64447 () Bool)

(assert (=> b!68483 m!64447))

(assert (=> b!68483 m!64437))

(declare-fun m!64449 () Bool)

(assert (=> b!68483 m!64449))

(declare-fun m!64451 () Bool)

(assert (=> b!68465 m!64451))

(declare-fun m!64453 () Bool)

(assert (=> b!68465 m!64453))

(check-sat (not b!68483) (not b!68469) (not b!68475) (not b!68478) (not b_lambda!3073) b_and!4225 (not b!68465) (not b_next!2081) b_and!4223 (not b!68471) (not start!9424) (not b!68482) (not b!68480) (not mapNonEmpty!3102) tp_is_empty!2457 (not mapNonEmpty!3101) (not b_next!2083))
(check-sat b_and!4223 b_and!4225 (not b_next!2081) (not b_next!2083))
(get-model)

(declare-fun b_lambda!3077 () Bool)

(assert (= b_lambda!3073 (or (and b!68478 b_free!2081) (and b!68465 b_free!2083 (= (defaultEntry!2168 newMap!16) (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))))) b_lambda!3077)))

(check-sat (not b!68483) (not b!68469) (not b!68475) (not b_lambda!3077) (not b!68478) b_and!4225 (not b!68465) (not b_next!2081) b_and!4223 (not b!68471) (not start!9424) (not b!68482) (not b!68480) (not mapNonEmpty!3102) tp_is_empty!2457 (not mapNonEmpty!3101) (not b_next!2083))
(check-sat b_and!4223 b_and!4225 (not b_next!2081) (not b_next!2083))
(get-model)

(declare-fun d!14777 () Bool)

(assert (=> d!14777 (= (map!1140 newMap!16) (getCurrentListMap!417 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun bs!2954 () Bool)

(assert (= bs!2954 d!14777))

(declare-fun m!64511 () Bool)

(assert (=> bs!2954 m!64511))

(assert (=> b!68471 d!14777))

(declare-fun b!68591 () Bool)

(declare-fun lt!29996 () ListLongMap!1407)

(declare-fun e!44968 () Bool)

(declare-fun apply!73 (ListLongMap!1407 (_ BitVec 64)) V!2923)

(assert (=> b!68591 (= e!44968 (= (apply!73 lt!29996 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!68591 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2078 (_values!2151 (v!2494 (underlying!253 thiss!992))))))))

(assert (=> b!68591 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2077 (_keys!3812 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun b!68592 () Bool)

(declare-fun e!44974 () Unit!1919)

(declare-fun lt!29995 () Unit!1919)

(assert (=> b!68592 (= e!44974 lt!29995)))

(declare-fun lt!29988 () ListLongMap!1407)

(assert (=> b!68592 (= lt!29988 (getCurrentListMapNoExtraKeys!55 (_keys!3812 (v!2494 (underlying!253 thiss!992))) (_values!2151 (v!2494 (underlying!253 thiss!992))) (mask!6113 (v!2494 (underlying!253 thiss!992))) (extraKeys!2035 (v!2494 (underlying!253 thiss!992))) (zeroValue!2074 (v!2494 (underlying!253 thiss!992))) (minValue!2074 (v!2494 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2168 (v!2494 (underlying!253 thiss!992)))))))

(declare-fun lt!29991 () (_ BitVec 64))

(assert (=> b!68592 (= lt!29991 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29979 () (_ BitVec 64))

(assert (=> b!68592 (= lt!29979 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!29993 () Unit!1919)

(declare-fun addStillContains!49 (ListLongMap!1407 (_ BitVec 64) V!2923 (_ BitVec 64)) Unit!1919)

(assert (=> b!68592 (= lt!29993 (addStillContains!49 lt!29988 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))) lt!29979))))

(assert (=> b!68592 (contains!714 (+!90 lt!29988 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))) lt!29979)))

(declare-fun lt!29989 () Unit!1919)

(assert (=> b!68592 (= lt!29989 lt!29993)))

(declare-fun lt!29981 () ListLongMap!1407)

(assert (=> b!68592 (= lt!29981 (getCurrentListMapNoExtraKeys!55 (_keys!3812 (v!2494 (underlying!253 thiss!992))) (_values!2151 (v!2494 (underlying!253 thiss!992))) (mask!6113 (v!2494 (underlying!253 thiss!992))) (extraKeys!2035 (v!2494 (underlying!253 thiss!992))) (zeroValue!2074 (v!2494 (underlying!253 thiss!992))) (minValue!2074 (v!2494 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2168 (v!2494 (underlying!253 thiss!992)))))))

(declare-fun lt!29992 () (_ BitVec 64))

(assert (=> b!68592 (= lt!29992 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29983 () (_ BitVec 64))

(assert (=> b!68592 (= lt!29983 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!29980 () Unit!1919)

(declare-fun addApplyDifferent!49 (ListLongMap!1407 (_ BitVec 64) V!2923 (_ BitVec 64)) Unit!1919)

(assert (=> b!68592 (= lt!29980 (addApplyDifferent!49 lt!29981 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992))) lt!29983))))

(assert (=> b!68592 (= (apply!73 (+!90 lt!29981 (tuple2!2103 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992))))) lt!29983) (apply!73 lt!29981 lt!29983))))

(declare-fun lt!29998 () Unit!1919)

(assert (=> b!68592 (= lt!29998 lt!29980)))

(declare-fun lt!29987 () ListLongMap!1407)

(assert (=> b!68592 (= lt!29987 (getCurrentListMapNoExtraKeys!55 (_keys!3812 (v!2494 (underlying!253 thiss!992))) (_values!2151 (v!2494 (underlying!253 thiss!992))) (mask!6113 (v!2494 (underlying!253 thiss!992))) (extraKeys!2035 (v!2494 (underlying!253 thiss!992))) (zeroValue!2074 (v!2494 (underlying!253 thiss!992))) (minValue!2074 (v!2494 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2168 (v!2494 (underlying!253 thiss!992)))))))

(declare-fun lt!29982 () (_ BitVec 64))

(assert (=> b!68592 (= lt!29982 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29990 () (_ BitVec 64))

(assert (=> b!68592 (= lt!29990 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!30000 () Unit!1919)

(assert (=> b!68592 (= lt!30000 (addApplyDifferent!49 lt!29987 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))) lt!29990))))

(assert (=> b!68592 (= (apply!73 (+!90 lt!29987 (tuple2!2103 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))) lt!29990) (apply!73 lt!29987 lt!29990))))

(declare-fun lt!29997 () Unit!1919)

(assert (=> b!68592 (= lt!29997 lt!30000)))

(declare-fun lt!29984 () ListLongMap!1407)

(assert (=> b!68592 (= lt!29984 (getCurrentListMapNoExtraKeys!55 (_keys!3812 (v!2494 (underlying!253 thiss!992))) (_values!2151 (v!2494 (underlying!253 thiss!992))) (mask!6113 (v!2494 (underlying!253 thiss!992))) (extraKeys!2035 (v!2494 (underlying!253 thiss!992))) (zeroValue!2074 (v!2494 (underlying!253 thiss!992))) (minValue!2074 (v!2494 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2168 (v!2494 (underlying!253 thiss!992)))))))

(declare-fun lt!29999 () (_ BitVec 64))

(assert (=> b!68592 (= lt!29999 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29994 () (_ BitVec 64))

(assert (=> b!68592 (= lt!29994 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!68592 (= lt!29995 (addApplyDifferent!49 lt!29984 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992))) lt!29994))))

(assert (=> b!68592 (= (apply!73 (+!90 lt!29984 (tuple2!2103 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992))))) lt!29994) (apply!73 lt!29984 lt!29994))))

(declare-fun b!68593 () Bool)

(declare-fun e!44967 () Bool)

(declare-fun e!44964 () Bool)

(assert (=> b!68593 (= e!44967 e!44964)))

(declare-fun res!36895 () Bool)

(declare-fun call!5783 () Bool)

(assert (=> b!68593 (= res!36895 call!5783)))

(assert (=> b!68593 (=> (not res!36895) (not e!44964))))

(declare-fun d!14779 () Bool)

(declare-fun e!44972 () Bool)

(assert (=> d!14779 e!44972))

(declare-fun res!36891 () Bool)

(assert (=> d!14779 (=> (not res!36891) (not e!44972))))

(assert (=> d!14779 (= res!36891 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2077 (_keys!3812 (v!2494 (underlying!253 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2077 (_keys!3812 (v!2494 (underlying!253 thiss!992))))))))))

(declare-fun lt!29985 () ListLongMap!1407)

(assert (=> d!14779 (= lt!29996 lt!29985)))

(declare-fun lt!29986 () Unit!1919)

(assert (=> d!14779 (= lt!29986 e!44974)))

(declare-fun c!9703 () Bool)

(declare-fun e!44963 () Bool)

(assert (=> d!14779 (= c!9703 e!44963)))

(declare-fun res!36892 () Bool)

(assert (=> d!14779 (=> (not res!36892) (not e!44963))))

(assert (=> d!14779 (= res!36892 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2077 (_keys!3812 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun e!44973 () ListLongMap!1407)

(assert (=> d!14779 (= lt!29985 e!44973)))

(declare-fun c!9699 () Bool)

(assert (=> d!14779 (= c!9699 (and (not (= (bvand (extraKeys!2035 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2035 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!14779 (validMask!0 (mask!6113 (v!2494 (underlying!253 thiss!992))))))

(assert (=> d!14779 (= (getCurrentListMap!417 (_keys!3812 (v!2494 (underlying!253 thiss!992))) (_values!2151 (v!2494 (underlying!253 thiss!992))) (mask!6113 (v!2494 (underlying!253 thiss!992))) (extraKeys!2035 (v!2494 (underlying!253 thiss!992))) (zeroValue!2074 (v!2494 (underlying!253 thiss!992))) (minValue!2074 (v!2494 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2168 (v!2494 (underlying!253 thiss!992)))) lt!29996)))

(declare-fun bm!5779 () Bool)

(assert (=> bm!5779 (= call!5783 (contains!714 lt!29996 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!5780 () Bool)

(declare-fun c!9702 () Bool)

(declare-fun call!5782 () ListLongMap!1407)

(declare-fun call!5788 () ListLongMap!1407)

(declare-fun call!5787 () ListLongMap!1407)

(declare-fun call!5784 () ListLongMap!1407)

(assert (=> bm!5780 (= call!5787 (+!90 (ite c!9699 call!5788 (ite c!9702 call!5782 call!5784)) (ite (or c!9699 c!9702) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun bm!5781 () Bool)

(assert (=> bm!5781 (= call!5788 (getCurrentListMapNoExtraKeys!55 (_keys!3812 (v!2494 (underlying!253 thiss!992))) (_values!2151 (v!2494 (underlying!253 thiss!992))) (mask!6113 (v!2494 (underlying!253 thiss!992))) (extraKeys!2035 (v!2494 (underlying!253 thiss!992))) (zeroValue!2074 (v!2494 (underlying!253 thiss!992))) (minValue!2074 (v!2494 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2168 (v!2494 (underlying!253 thiss!992)))))))

(declare-fun bm!5782 () Bool)

(assert (=> bm!5782 (= call!5782 call!5788)))

(declare-fun b!68594 () Bool)

(declare-fun e!44970 () ListLongMap!1407)

(assert (=> b!68594 (= e!44970 call!5784)))

(declare-fun b!68595 () Bool)

(declare-fun e!44962 () Bool)

(declare-fun e!44965 () Bool)

(assert (=> b!68595 (= e!44962 e!44965)))

(declare-fun res!36890 () Bool)

(declare-fun call!5786 () Bool)

(assert (=> b!68595 (= res!36890 call!5786)))

(assert (=> b!68595 (=> (not res!36890) (not e!44965))))

(declare-fun b!68596 () Bool)

(declare-fun Unit!1926 () Unit!1919)

(assert (=> b!68596 (= e!44974 Unit!1926)))

(declare-fun b!68597 () Bool)

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!68597 (= e!44963 (validKeyInArray!0 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!68598 () Bool)

(assert (=> b!68598 (= e!44965 (= (apply!73 lt!29996 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))

(declare-fun b!68599 () Bool)

(assert (=> b!68599 (= e!44964 (= (apply!73 lt!29996 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))

(declare-fun b!68600 () Bool)

(declare-fun res!36893 () Bool)

(assert (=> b!68600 (=> (not res!36893) (not e!44972))))

(assert (=> b!68600 (= res!36893 e!44962)))

(declare-fun c!9700 () Bool)

(assert (=> b!68600 (= c!9700 (not (= (bvand (extraKeys!2035 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!68601 () Bool)

(declare-fun e!44966 () ListLongMap!1407)

(assert (=> b!68601 (= e!44973 e!44966)))

(assert (=> b!68601 (= c!9702 (and (not (= (bvand (extraKeys!2035 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2035 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!68602 () Bool)

(assert (=> b!68602 (= e!44972 e!44967)))

(declare-fun c!9698 () Bool)

(assert (=> b!68602 (= c!9698 (not (= (bvand (extraKeys!2035 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!68603 () Bool)

(assert (=> b!68603 (= e!44973 (+!90 call!5787 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun b!68604 () Bool)

(declare-fun c!9701 () Bool)

(assert (=> b!68604 (= c!9701 (and (not (= (bvand (extraKeys!2035 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2035 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!68604 (= e!44966 e!44970)))

(declare-fun b!68605 () Bool)

(declare-fun e!44971 () Bool)

(assert (=> b!68605 (= e!44971 (validKeyInArray!0 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!68606 () Bool)

(assert (=> b!68606 (= e!44967 (not call!5783))))

(declare-fun b!68607 () Bool)

(declare-fun res!36896 () Bool)

(assert (=> b!68607 (=> (not res!36896) (not e!44972))))

(declare-fun e!44969 () Bool)

(assert (=> b!68607 (= res!36896 e!44969)))

(declare-fun res!36894 () Bool)

(assert (=> b!68607 (=> res!36894 e!44969)))

(assert (=> b!68607 (= res!36894 (not e!44971))))

(declare-fun res!36889 () Bool)

(assert (=> b!68607 (=> (not res!36889) (not e!44971))))

(assert (=> b!68607 (= res!36889 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2077 (_keys!3812 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun b!68608 () Bool)

(declare-fun call!5785 () ListLongMap!1407)

(assert (=> b!68608 (= e!44970 call!5785)))

(declare-fun bm!5783 () Bool)

(assert (=> bm!5783 (= call!5785 call!5787)))

(declare-fun bm!5784 () Bool)

(assert (=> bm!5784 (= call!5784 call!5782)))

(declare-fun b!68609 () Bool)

(assert (=> b!68609 (= e!44966 call!5785)))

(declare-fun b!68610 () Bool)

(assert (=> b!68610 (= e!44969 e!44968)))

(declare-fun res!36897 () Bool)

(assert (=> b!68610 (=> (not res!36897) (not e!44968))))

(assert (=> b!68610 (= res!36897 (contains!714 lt!29996 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!68610 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2077 (_keys!3812 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun bm!5785 () Bool)

(assert (=> bm!5785 (= call!5786 (contains!714 lt!29996 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!68611 () Bool)

(assert (=> b!68611 (= e!44962 (not call!5786))))

(assert (= (and d!14779 c!9699) b!68603))

(assert (= (and d!14779 (not c!9699)) b!68601))

(assert (= (and b!68601 c!9702) b!68609))

(assert (= (and b!68601 (not c!9702)) b!68604))

(assert (= (and b!68604 c!9701) b!68608))

(assert (= (and b!68604 (not c!9701)) b!68594))

(assert (= (or b!68608 b!68594) bm!5784))

(assert (= (or b!68609 bm!5784) bm!5782))

(assert (= (or b!68609 b!68608) bm!5783))

(assert (= (or b!68603 bm!5782) bm!5781))

(assert (= (or b!68603 bm!5783) bm!5780))

(assert (= (and d!14779 res!36892) b!68597))

(assert (= (and d!14779 c!9703) b!68592))

(assert (= (and d!14779 (not c!9703)) b!68596))

(assert (= (and d!14779 res!36891) b!68607))

(assert (= (and b!68607 res!36889) b!68605))

(assert (= (and b!68607 (not res!36894)) b!68610))

(assert (= (and b!68610 res!36897) b!68591))

(assert (= (and b!68607 res!36896) b!68600))

(assert (= (and b!68600 c!9700) b!68595))

(assert (= (and b!68600 (not c!9700)) b!68611))

(assert (= (and b!68595 res!36890) b!68598))

(assert (= (or b!68595 b!68611) bm!5785))

(assert (= (and b!68600 res!36893) b!68602))

(assert (= (and b!68602 c!9698) b!68593))

(assert (= (and b!68602 (not c!9698)) b!68606))

(assert (= (and b!68593 res!36895) b!68599))

(assert (= (or b!68593 b!68606) bm!5779))

(declare-fun b_lambda!3079 () Bool)

(assert (=> (not b_lambda!3079) (not b!68591)))

(assert (=> b!68591 t!4969))

(declare-fun b_and!4235 () Bool)

(assert (= b_and!4223 (and (=> t!4969 result!2605) b_and!4235)))

(assert (=> b!68591 t!4971))

(declare-fun b_and!4237 () Bool)

(assert (= b_and!4225 (and (=> t!4971 result!2609) b_and!4237)))

(declare-fun m!64513 () Bool)

(assert (=> bm!5785 m!64513))

(declare-fun m!64515 () Bool)

(assert (=> bm!5780 m!64515))

(declare-fun m!64517 () Bool)

(assert (=> b!68603 m!64517))

(declare-fun m!64519 () Bool)

(assert (=> bm!5779 m!64519))

(declare-fun m!64521 () Bool)

(assert (=> b!68597 m!64521))

(assert (=> b!68597 m!64521))

(declare-fun m!64523 () Bool)

(assert (=> b!68597 m!64523))

(assert (=> b!68610 m!64521))

(assert (=> b!68610 m!64521))

(declare-fun m!64525 () Bool)

(assert (=> b!68610 m!64525))

(declare-fun m!64527 () Bool)

(assert (=> b!68598 m!64527))

(declare-fun m!64529 () Bool)

(assert (=> b!68599 m!64529))

(assert (=> b!68591 m!64411))

(declare-fun m!64531 () Bool)

(assert (=> b!68591 m!64531))

(assert (=> b!68591 m!64411))

(declare-fun m!64533 () Bool)

(assert (=> b!68591 m!64533))

(assert (=> b!68591 m!64531))

(assert (=> b!68591 m!64521))

(declare-fun m!64535 () Bool)

(assert (=> b!68591 m!64535))

(assert (=> b!68591 m!64521))

(assert (=> d!14779 m!64441))

(assert (=> bm!5781 m!64449))

(assert (=> b!68605 m!64521))

(assert (=> b!68605 m!64521))

(assert (=> b!68605 m!64523))

(declare-fun m!64537 () Bool)

(assert (=> b!68592 m!64537))

(declare-fun m!64539 () Bool)

(assert (=> b!68592 m!64539))

(declare-fun m!64541 () Bool)

(assert (=> b!68592 m!64541))

(declare-fun m!64543 () Bool)

(assert (=> b!68592 m!64543))

(declare-fun m!64545 () Bool)

(assert (=> b!68592 m!64545))

(declare-fun m!64547 () Bool)

(assert (=> b!68592 m!64547))

(declare-fun m!64549 () Bool)

(assert (=> b!68592 m!64549))

(declare-fun m!64551 () Bool)

(assert (=> b!68592 m!64551))

(assert (=> b!68592 m!64545))

(declare-fun m!64553 () Bool)

(assert (=> b!68592 m!64553))

(assert (=> b!68592 m!64521))

(declare-fun m!64555 () Bool)

(assert (=> b!68592 m!64555))

(declare-fun m!64557 () Bool)

(assert (=> b!68592 m!64557))

(declare-fun m!64559 () Bool)

(assert (=> b!68592 m!64559))

(assert (=> b!68592 m!64547))

(declare-fun m!64561 () Bool)

(assert (=> b!68592 m!64561))

(assert (=> b!68592 m!64555))

(assert (=> b!68592 m!64539))

(declare-fun m!64563 () Bool)

(assert (=> b!68592 m!64563))

(assert (=> b!68592 m!64449))

(declare-fun m!64565 () Bool)

(assert (=> b!68592 m!64565))

(assert (=> b!68471 d!14779))

(declare-fun d!14781 () Bool)

(assert (=> d!14781 (= (valid!282 thiss!992) (valid!283 (v!2494 (underlying!253 thiss!992))))))

(declare-fun bs!2955 () Bool)

(assert (= bs!2955 d!14781))

(declare-fun m!64567 () Bool)

(assert (=> bs!2955 m!64567))

(assert (=> start!9424 d!14781))

(declare-fun d!14783 () Bool)

(assert (=> d!14783 (not (arrayContainsKey!0 (_keys!3812 (v!2494 (underlying!253 thiss!992))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!30003 () Unit!1919)

(declare-fun choose!68 (array!3855 (_ BitVec 32) (_ BitVec 64) List!1470) Unit!1919)

(assert (=> d!14783 (= lt!30003 (choose!68 (_keys!3812 (v!2494 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (Cons!1466 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) Nil!1467)))))

(assert (=> d!14783 (bvslt (size!2077 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!14783 (= (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!3812 (v!2494 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (Cons!1466 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) Nil!1467)) lt!30003)))

(declare-fun bs!2956 () Bool)

(assert (= bs!2956 d!14783))

(assert (=> bs!2956 m!64407))

(assert (=> bs!2956 m!64433))

(assert (=> bs!2956 m!64407))

(declare-fun m!64569 () Bool)

(assert (=> bs!2956 m!64569))

(assert (=> b!68482 d!14783))

(declare-fun d!14785 () Bool)

(assert (=> d!14785 (arrayNoDuplicates!0 (_keys!3812 (v!2494 (underlying!253 thiss!992))) from!355 Nil!1467)))

(declare-fun lt!30006 () Unit!1919)

(declare-fun choose!39 (array!3855 (_ BitVec 32) (_ BitVec 32)) Unit!1919)

(assert (=> d!14785 (= lt!30006 (choose!39 (_keys!3812 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000000000000 from!355))))

(assert (=> d!14785 (bvslt (size!2077 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!14785 (= (lemmaNoDuplicateFromThenFromBigger!0 (_keys!3812 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000000000000 from!355) lt!30006)))

(declare-fun bs!2957 () Bool)

(assert (= bs!2957 d!14785))

(assert (=> bs!2957 m!64429))

(declare-fun m!64571 () Bool)

(assert (=> bs!2957 m!64571))

(assert (=> b!68482 d!14785))

(declare-fun d!14787 () Bool)

(declare-fun res!36902 () Bool)

(declare-fun e!44979 () Bool)

(assert (=> d!14787 (=> res!36902 e!44979)))

(assert (=> d!14787 (= res!36902 (= (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(assert (=> d!14787 (= (arrayContainsKey!0 (_keys!3812 (v!2494 (underlying!253 thiss!992))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)) e!44979)))

(declare-fun b!68616 () Bool)

(declare-fun e!44980 () Bool)

(assert (=> b!68616 (= e!44979 e!44980)))

(declare-fun res!36903 () Bool)

(assert (=> b!68616 (=> (not res!36903) (not e!44980))))

(assert (=> b!68616 (= res!36903 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2077 (_keys!3812 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun b!68617 () Bool)

(assert (=> b!68617 (= e!44980 (arrayContainsKey!0 (_keys!3812 (v!2494 (underlying!253 thiss!992))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (= (and d!14787 (not res!36902)) b!68616))

(assert (= (and b!68616 res!36903) b!68617))

(assert (=> d!14787 m!64521))

(assert (=> b!68617 m!64407))

(declare-fun m!64573 () Bool)

(assert (=> b!68617 m!64573))

(assert (=> b!68482 d!14787))

(declare-fun d!14789 () Bool)

(declare-fun e!44983 () Bool)

(assert (=> d!14789 e!44983))

(declare-fun c!9706 () Bool)

(assert (=> d!14789 (= c!9706 (and (not (= (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!30009 () Unit!1919)

(declare-fun choose!380 (array!3855 array!3857 (_ BitVec 32) (_ BitVec 32) V!2923 V!2923 (_ BitVec 64) (_ BitVec 32) Int) Unit!1919)

(assert (=> d!14789 (= lt!30009 (choose!380 (_keys!3812 (v!2494 (underlying!253 thiss!992))) (_values!2151 (v!2494 (underlying!253 thiss!992))) (mask!6113 (v!2494 (underlying!253 thiss!992))) (extraKeys!2035 (v!2494 (underlying!253 thiss!992))) (zeroValue!2074 (v!2494 (underlying!253 thiss!992))) (minValue!2074 (v!2494 (underlying!253 thiss!992))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2168 (v!2494 (underlying!253 thiss!992)))))))

(assert (=> d!14789 (validMask!0 (mask!6113 (v!2494 (underlying!253 thiss!992))))))

(assert (=> d!14789 (= (lemmaListMapContainsThenArrayContainsFrom!46 (_keys!3812 (v!2494 (underlying!253 thiss!992))) (_values!2151 (v!2494 (underlying!253 thiss!992))) (mask!6113 (v!2494 (underlying!253 thiss!992))) (extraKeys!2035 (v!2494 (underlying!253 thiss!992))) (zeroValue!2074 (v!2494 (underlying!253 thiss!992))) (minValue!2074 (v!2494 (underlying!253 thiss!992))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2168 (v!2494 (underlying!253 thiss!992)))) lt!30009)))

(declare-fun b!68622 () Bool)

(assert (=> b!68622 (= e!44983 (arrayContainsKey!0 (_keys!3812 (v!2494 (underlying!253 thiss!992))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!68623 () Bool)

(assert (=> b!68623 (= e!44983 (ite (= (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2035 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2035 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!14789 c!9706) b!68622))

(assert (= (and d!14789 (not c!9706)) b!68623))

(assert (=> d!14789 m!64407))

(declare-fun m!64575 () Bool)

(assert (=> d!14789 m!64575))

(assert (=> d!14789 m!64441))

(assert (=> b!68622 m!64407))

(assert (=> b!68622 m!64433))

(assert (=> b!68482 d!14789))

(declare-fun b!68634 () Bool)

(declare-fun e!44995 () Bool)

(declare-fun e!44994 () Bool)

(assert (=> b!68634 (= e!44995 e!44994)))

(declare-fun c!9709 () Bool)

(assert (=> b!68634 (= c!9709 (validKeyInArray!0 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(declare-fun b!68635 () Bool)

(declare-fun call!5791 () Bool)

(assert (=> b!68635 (= e!44994 call!5791)))

(declare-fun b!68636 () Bool)

(declare-fun e!44992 () Bool)

(assert (=> b!68636 (= e!44992 e!44995)))

(declare-fun res!36912 () Bool)

(assert (=> b!68636 (=> (not res!36912) (not e!44995))))

(declare-fun e!44993 () Bool)

(assert (=> b!68636 (= res!36912 (not e!44993))))

(declare-fun res!36910 () Bool)

(assert (=> b!68636 (=> (not res!36910) (not e!44993))))

(assert (=> b!68636 (= res!36910 (validKeyInArray!0 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(declare-fun d!14791 () Bool)

(declare-fun res!36911 () Bool)

(assert (=> d!14791 (=> res!36911 e!44992)))

(assert (=> d!14791 (= res!36911 (bvsge from!355 (size!2077 (_keys!3812 (v!2494 (underlying!253 thiss!992))))))))

(assert (=> d!14791 (= (arrayNoDuplicates!0 (_keys!3812 (v!2494 (underlying!253 thiss!992))) from!355 Nil!1467) e!44992)))

(declare-fun b!68637 () Bool)

(assert (=> b!68637 (= e!44994 call!5791)))

(declare-fun b!68638 () Bool)

(declare-fun contains!715 (List!1470 (_ BitVec 64)) Bool)

(assert (=> b!68638 (= e!44993 (contains!715 Nil!1467 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(declare-fun bm!5788 () Bool)

(assert (=> bm!5788 (= call!5791 (arrayNoDuplicates!0 (_keys!3812 (v!2494 (underlying!253 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!9709 (Cons!1466 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) Nil!1467) Nil!1467)))))

(assert (= (and d!14791 (not res!36911)) b!68636))

(assert (= (and b!68636 res!36910) b!68638))

(assert (= (and b!68636 res!36912) b!68634))

(assert (= (and b!68634 c!9709) b!68635))

(assert (= (and b!68634 (not c!9709)) b!68637))

(assert (= (or b!68635 b!68637) bm!5788))

(assert (=> b!68634 m!64407))

(assert (=> b!68634 m!64407))

(declare-fun m!64577 () Bool)

(assert (=> b!68634 m!64577))

(assert (=> b!68636 m!64407))

(assert (=> b!68636 m!64407))

(assert (=> b!68636 m!64577))

(assert (=> b!68638 m!64407))

(assert (=> b!68638 m!64407))

(declare-fun m!64579 () Bool)

(assert (=> b!68638 m!64579))

(assert (=> bm!5788 m!64407))

(declare-fun m!64581 () Bool)

(assert (=> bm!5788 m!64581))

(assert (=> b!68482 d!14791))

(declare-fun d!14793 () Bool)

(assert (=> d!14793 (= (array_inv!1135 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvsge (size!2077 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!68478 d!14793))

(declare-fun d!14795 () Bool)

(assert (=> d!14795 (= (array_inv!1136 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvsge (size!2078 (_values!2151 (v!2494 (underlying!253 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!68478 d!14795))

(declare-fun d!14797 () Bool)

(assert (=> d!14797 (= (array_inv!1135 (_keys!3812 newMap!16)) (bvsge (size!2077 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!68465 d!14797))

(declare-fun d!14799 () Bool)

(assert (=> d!14799 (= (array_inv!1136 (_values!2151 newMap!16)) (bvsge (size!2078 (_values!2151 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!68465 d!14799))

(declare-fun e!45012 () Bool)

(declare-fun lt!30029 () ListLongMap!1407)

(declare-fun b!68663 () Bool)

(assert (=> b!68663 (= e!45012 (= lt!30029 (getCurrentListMapNoExtraKeys!55 (_keys!3812 (v!2494 (underlying!253 thiss!992))) (_values!2151 (v!2494 (underlying!253 thiss!992))) (mask!6113 (v!2494 (underlying!253 thiss!992))) (extraKeys!2035 (v!2494 (underlying!253 thiss!992))) (zeroValue!2074 (v!2494 (underlying!253 thiss!992))) (minValue!2074 (v!2494 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun b!68664 () Bool)

(declare-fun e!45015 () Bool)

(declare-fun e!45011 () Bool)

(assert (=> b!68664 (= e!45015 e!45011)))

(declare-fun c!9719 () Bool)

(declare-fun e!45014 () Bool)

(assert (=> b!68664 (= c!9719 e!45014)))

(declare-fun res!36924 () Bool)

(assert (=> b!68664 (=> (not res!36924) (not e!45014))))

(assert (=> b!68664 (= res!36924 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2077 (_keys!3812 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun b!68665 () Bool)

(assert (=> b!68665 (= e!45011 e!45012)))

(declare-fun c!9721 () Bool)

(assert (=> b!68665 (= c!9721 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2077 (_keys!3812 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun b!68666 () Bool)

(declare-fun e!45016 () ListLongMap!1407)

(declare-fun call!5794 () ListLongMap!1407)

(assert (=> b!68666 (= e!45016 call!5794)))

(declare-fun b!68667 () Bool)

(declare-fun e!45013 () ListLongMap!1407)

(assert (=> b!68667 (= e!45013 (ListLongMap!1408 Nil!1466))))

(declare-fun b!68669 () Bool)

(declare-fun lt!30027 () Unit!1919)

(declare-fun lt!30026 () Unit!1919)

(assert (=> b!68669 (= lt!30027 lt!30026)))

(declare-fun lt!30028 () ListLongMap!1407)

(declare-fun lt!30030 () (_ BitVec 64))

(declare-fun lt!30024 () V!2923)

(declare-fun lt!30025 () (_ BitVec 64))

(assert (=> b!68669 (not (contains!714 (+!90 lt!30028 (tuple2!2103 lt!30025 lt!30024)) lt!30030))))

(declare-fun addStillNotContains!22 (ListLongMap!1407 (_ BitVec 64) V!2923 (_ BitVec 64)) Unit!1919)

(assert (=> b!68669 (= lt!30026 (addStillNotContains!22 lt!30028 lt!30025 lt!30024 lt!30030))))

(assert (=> b!68669 (= lt!30030 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!68669 (= lt!30024 (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!68669 (= lt!30025 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!68669 (= lt!30028 call!5794)))

(assert (=> b!68669 (= e!45016 (+!90 call!5794 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun bm!5791 () Bool)

(assert (=> bm!5791 (= call!5794 (getCurrentListMapNoExtraKeys!55 (_keys!3812 (v!2494 (underlying!253 thiss!992))) (_values!2151 (v!2494 (underlying!253 thiss!992))) (mask!6113 (v!2494 (underlying!253 thiss!992))) (extraKeys!2035 (v!2494 (underlying!253 thiss!992))) (zeroValue!2074 (v!2494 (underlying!253 thiss!992))) (minValue!2074 (v!2494 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2168 (v!2494 (underlying!253 thiss!992)))))))

(declare-fun b!68670 () Bool)

(assert (=> b!68670 (= e!45014 (validKeyInArray!0 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!68670 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(declare-fun b!68671 () Bool)

(declare-fun e!45010 () Bool)

(assert (=> b!68671 (= e!45011 e!45010)))

(assert (=> b!68671 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2077 (_keys!3812 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun res!36921 () Bool)

(assert (=> b!68671 (= res!36921 (contains!714 lt!30029 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!68671 (=> (not res!36921) (not e!45010))))

(declare-fun b!68672 () Bool)

(assert (=> b!68672 (= e!45013 e!45016)))

(declare-fun c!9718 () Bool)

(assert (=> b!68672 (= c!9718 (validKeyInArray!0 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!68673 () Bool)

(assert (=> b!68673 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2077 (_keys!3812 (v!2494 (underlying!253 thiss!992))))))))

(assert (=> b!68673 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2078 (_values!2151 (v!2494 (underlying!253 thiss!992))))))))

(assert (=> b!68673 (= e!45010 (= (apply!73 lt!30029 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!68674 () Bool)

(declare-fun res!36923 () Bool)

(assert (=> b!68674 (=> (not res!36923) (not e!45015))))

(assert (=> b!68674 (= res!36923 (not (contains!714 lt!30029 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun d!14801 () Bool)

(assert (=> d!14801 e!45015))

(declare-fun res!36922 () Bool)

(assert (=> d!14801 (=> (not res!36922) (not e!45015))))

(assert (=> d!14801 (= res!36922 (not (contains!714 lt!30029 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!14801 (= lt!30029 e!45013)))

(declare-fun c!9720 () Bool)

(assert (=> d!14801 (= c!9720 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2077 (_keys!3812 (v!2494 (underlying!253 thiss!992))))))))

(assert (=> d!14801 (validMask!0 (mask!6113 (v!2494 (underlying!253 thiss!992))))))

(assert (=> d!14801 (= (getCurrentListMapNoExtraKeys!55 (_keys!3812 (v!2494 (underlying!253 thiss!992))) (_values!2151 (v!2494 (underlying!253 thiss!992))) (mask!6113 (v!2494 (underlying!253 thiss!992))) (extraKeys!2035 (v!2494 (underlying!253 thiss!992))) (zeroValue!2074 (v!2494 (underlying!253 thiss!992))) (minValue!2074 (v!2494 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2168 (v!2494 (underlying!253 thiss!992)))) lt!30029)))

(declare-fun b!68668 () Bool)

(declare-fun isEmpty!310 (ListLongMap!1407) Bool)

(assert (=> b!68668 (= e!45012 (isEmpty!310 lt!30029))))

(assert (= (and d!14801 c!9720) b!68667))

(assert (= (and d!14801 (not c!9720)) b!68672))

(assert (= (and b!68672 c!9718) b!68669))

(assert (= (and b!68672 (not c!9718)) b!68666))

(assert (= (or b!68669 b!68666) bm!5791))

(assert (= (and d!14801 res!36922) b!68674))

(assert (= (and b!68674 res!36923) b!68664))

(assert (= (and b!68664 res!36924) b!68670))

(assert (= (and b!68664 c!9719) b!68671))

(assert (= (and b!68664 (not c!9719)) b!68665))

(assert (= (and b!68671 res!36921) b!68673))

(assert (= (and b!68665 c!9721) b!68663))

(assert (= (and b!68665 (not c!9721)) b!68668))

(declare-fun b_lambda!3081 () Bool)

(assert (=> (not b_lambda!3081) (not b!68669)))

(assert (=> b!68669 t!4969))

(declare-fun b_and!4239 () Bool)

(assert (= b_and!4235 (and (=> t!4969 result!2605) b_and!4239)))

(assert (=> b!68669 t!4971))

(declare-fun b_and!4241 () Bool)

(assert (= b_and!4237 (and (=> t!4971 result!2609) b_and!4241)))

(declare-fun b_lambda!3083 () Bool)

(assert (=> (not b_lambda!3083) (not b!68673)))

(assert (=> b!68673 t!4969))

(declare-fun b_and!4243 () Bool)

(assert (= b_and!4239 (and (=> t!4969 result!2605) b_and!4243)))

(assert (=> b!68673 t!4971))

(declare-fun b_and!4245 () Bool)

(assert (= b_and!4241 (and (=> t!4971 result!2609) b_and!4245)))

(assert (=> b!68671 m!64521))

(assert (=> b!68671 m!64521))

(declare-fun m!64583 () Bool)

(assert (=> b!68671 m!64583))

(declare-fun m!64585 () Bool)

(assert (=> b!68668 m!64585))

(assert (=> b!68673 m!64411))

(assert (=> b!68673 m!64531))

(assert (=> b!68673 m!64521))

(assert (=> b!68673 m!64531))

(assert (=> b!68673 m!64411))

(assert (=> b!68673 m!64533))

(assert (=> b!68673 m!64521))

(declare-fun m!64587 () Bool)

(assert (=> b!68673 m!64587))

(declare-fun m!64589 () Bool)

(assert (=> d!14801 m!64589))

(assert (=> d!14801 m!64441))

(assert (=> b!68669 m!64411))

(declare-fun m!64591 () Bool)

(assert (=> b!68669 m!64591))

(declare-fun m!64593 () Bool)

(assert (=> b!68669 m!64593))

(declare-fun m!64595 () Bool)

(assert (=> b!68669 m!64595))

(assert (=> b!68669 m!64591))

(declare-fun m!64597 () Bool)

(assert (=> b!68669 m!64597))

(assert (=> b!68669 m!64531))

(assert (=> b!68669 m!64521))

(assert (=> b!68669 m!64531))

(assert (=> b!68669 m!64411))

(assert (=> b!68669 m!64533))

(declare-fun m!64599 () Bool)

(assert (=> bm!5791 m!64599))

(assert (=> b!68663 m!64599))

(assert (=> b!68670 m!64521))

(assert (=> b!68670 m!64521))

(assert (=> b!68670 m!64523))

(declare-fun m!64601 () Bool)

(assert (=> b!68674 m!64601))

(assert (=> b!68672 m!64521))

(assert (=> b!68672 m!64521))

(assert (=> b!68672 m!64523))

(assert (=> b!68483 d!14801))

(declare-fun d!14803 () Bool)

(declare-fun e!45019 () Bool)

(assert (=> d!14803 e!45019))

(declare-fun res!36930 () Bool)

(assert (=> d!14803 (=> (not res!36930) (not e!45019))))

(declare-fun lt!30041 () ListLongMap!1407)

(assert (=> d!14803 (= res!36930 (contains!714 lt!30041 (_1!1062 lt!29892)))))

(declare-fun lt!30042 () List!1469)

(assert (=> d!14803 (= lt!30041 (ListLongMap!1408 lt!30042))))

(declare-fun lt!30039 () Unit!1919)

(declare-fun lt!30040 () Unit!1919)

(assert (=> d!14803 (= lt!30039 lt!30040)))

(declare-datatypes ((Option!137 0))(
  ( (Some!136 (v!2498 V!2923)) (None!135) )
))
(declare-fun getValueByKey!131 (List!1469 (_ BitVec 64)) Option!137)

(assert (=> d!14803 (= (getValueByKey!131 lt!30042 (_1!1062 lt!29892)) (Some!136 (_2!1062 lt!29892)))))

(declare-fun lemmaContainsTupThenGetReturnValue!48 (List!1469 (_ BitVec 64) V!2923) Unit!1919)

(assert (=> d!14803 (= lt!30040 (lemmaContainsTupThenGetReturnValue!48 lt!30042 (_1!1062 lt!29892) (_2!1062 lt!29892)))))

(declare-fun insertStrictlySorted!51 (List!1469 (_ BitVec 64) V!2923) List!1469)

(assert (=> d!14803 (= lt!30042 (insertStrictlySorted!51 (toList!719 (+!90 lt!29889 lt!29893)) (_1!1062 lt!29892) (_2!1062 lt!29892)))))

(assert (=> d!14803 (= (+!90 (+!90 lt!29889 lt!29893) lt!29892) lt!30041)))

(declare-fun b!68679 () Bool)

(declare-fun res!36929 () Bool)

(assert (=> b!68679 (=> (not res!36929) (not e!45019))))

(assert (=> b!68679 (= res!36929 (= (getValueByKey!131 (toList!719 lt!30041) (_1!1062 lt!29892)) (Some!136 (_2!1062 lt!29892))))))

(declare-fun b!68680 () Bool)

(declare-fun contains!716 (List!1469 tuple2!2102) Bool)

(assert (=> b!68680 (= e!45019 (contains!716 (toList!719 lt!30041) lt!29892))))

(assert (= (and d!14803 res!36930) b!68679))

(assert (= (and b!68679 res!36929) b!68680))

(declare-fun m!64603 () Bool)

(assert (=> d!14803 m!64603))

(declare-fun m!64605 () Bool)

(assert (=> d!14803 m!64605))

(declare-fun m!64607 () Bool)

(assert (=> d!14803 m!64607))

(declare-fun m!64609 () Bool)

(assert (=> d!14803 m!64609))

(declare-fun m!64611 () Bool)

(assert (=> b!68679 m!64611))

(declare-fun m!64613 () Bool)

(assert (=> b!68680 m!64613))

(assert (=> b!68483 d!14803))

(declare-fun d!14805 () Bool)

(declare-fun e!45020 () Bool)

(assert (=> d!14805 e!45020))

(declare-fun res!36932 () Bool)

(assert (=> d!14805 (=> (not res!36932) (not e!45020))))

(declare-fun lt!30045 () ListLongMap!1407)

(assert (=> d!14805 (= res!36932 (contains!714 lt!30045 (_1!1062 lt!29892)))))

(declare-fun lt!30046 () List!1469)

(assert (=> d!14805 (= lt!30045 (ListLongMap!1408 lt!30046))))

(declare-fun lt!30043 () Unit!1919)

(declare-fun lt!30044 () Unit!1919)

(assert (=> d!14805 (= lt!30043 lt!30044)))

(assert (=> d!14805 (= (getValueByKey!131 lt!30046 (_1!1062 lt!29892)) (Some!136 (_2!1062 lt!29892)))))

(assert (=> d!14805 (= lt!30044 (lemmaContainsTupThenGetReturnValue!48 lt!30046 (_1!1062 lt!29892) (_2!1062 lt!29892)))))

(assert (=> d!14805 (= lt!30046 (insertStrictlySorted!51 (toList!719 lt!29889) (_1!1062 lt!29892) (_2!1062 lt!29892)))))

(assert (=> d!14805 (= (+!90 lt!29889 lt!29892) lt!30045)))

(declare-fun b!68681 () Bool)

(declare-fun res!36931 () Bool)

(assert (=> b!68681 (=> (not res!36931) (not e!45020))))

(assert (=> b!68681 (= res!36931 (= (getValueByKey!131 (toList!719 lt!30045) (_1!1062 lt!29892)) (Some!136 (_2!1062 lt!29892))))))

(declare-fun b!68682 () Bool)

(assert (=> b!68682 (= e!45020 (contains!716 (toList!719 lt!30045) lt!29892))))

(assert (= (and d!14805 res!36932) b!68681))

(assert (= (and b!68681 res!36931) b!68682))

(declare-fun m!64615 () Bool)

(assert (=> d!14805 m!64615))

(declare-fun m!64617 () Bool)

(assert (=> d!14805 m!64617))

(declare-fun m!64619 () Bool)

(assert (=> d!14805 m!64619))

(declare-fun m!64621 () Bool)

(assert (=> d!14805 m!64621))

(declare-fun m!64623 () Bool)

(assert (=> b!68681 m!64623))

(declare-fun m!64625 () Bool)

(assert (=> b!68682 m!64625))

(assert (=> b!68483 d!14805))

(declare-fun d!14807 () Bool)

(declare-fun e!45021 () Bool)

(assert (=> d!14807 e!45021))

(declare-fun res!36934 () Bool)

(assert (=> d!14807 (=> (not res!36934) (not e!45021))))

(declare-fun lt!30049 () ListLongMap!1407)

(assert (=> d!14807 (= res!36934 (contains!714 lt!30049 (_1!1062 lt!29893)))))

(declare-fun lt!30050 () List!1469)

(assert (=> d!14807 (= lt!30049 (ListLongMap!1408 lt!30050))))

(declare-fun lt!30047 () Unit!1919)

(declare-fun lt!30048 () Unit!1919)

(assert (=> d!14807 (= lt!30047 lt!30048)))

(assert (=> d!14807 (= (getValueByKey!131 lt!30050 (_1!1062 lt!29893)) (Some!136 (_2!1062 lt!29893)))))

(assert (=> d!14807 (= lt!30048 (lemmaContainsTupThenGetReturnValue!48 lt!30050 (_1!1062 lt!29893) (_2!1062 lt!29893)))))

(assert (=> d!14807 (= lt!30050 (insertStrictlySorted!51 (toList!719 (+!90 lt!29889 lt!29892)) (_1!1062 lt!29893) (_2!1062 lt!29893)))))

(assert (=> d!14807 (= (+!90 (+!90 lt!29889 lt!29892) lt!29893) lt!30049)))

(declare-fun b!68683 () Bool)

(declare-fun res!36933 () Bool)

(assert (=> b!68683 (=> (not res!36933) (not e!45021))))

(assert (=> b!68683 (= res!36933 (= (getValueByKey!131 (toList!719 lt!30049) (_1!1062 lt!29893)) (Some!136 (_2!1062 lt!29893))))))

(declare-fun b!68684 () Bool)

(assert (=> b!68684 (= e!45021 (contains!716 (toList!719 lt!30049) lt!29893))))

(assert (= (and d!14807 res!36934) b!68683))

(assert (= (and b!68683 res!36933) b!68684))

(declare-fun m!64627 () Bool)

(assert (=> d!14807 m!64627))

(declare-fun m!64629 () Bool)

(assert (=> d!14807 m!64629))

(declare-fun m!64631 () Bool)

(assert (=> d!14807 m!64631))

(declare-fun m!64633 () Bool)

(assert (=> d!14807 m!64633))

(declare-fun m!64635 () Bool)

(assert (=> b!68683 m!64635))

(declare-fun m!64637 () Bool)

(assert (=> b!68684 m!64637))

(assert (=> b!68483 d!14807))

(declare-fun d!14809 () Bool)

(assert (=> d!14809 (= (+!90 (+!90 lt!29889 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))) (+!90 (+!90 lt!29889 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))))

(declare-fun lt!30053 () Unit!1919)

(declare-fun choose!381 (ListLongMap!1407 (_ BitVec 64) V!2923 (_ BitVec 64) V!2923) Unit!1919)

(assert (=> d!14809 (= lt!30053 (choose!381 lt!29889 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))

(assert (=> d!14809 (not (= (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!14809 (= (addCommutativeForDiffKeys!9 lt!29889 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))) lt!30053)))

(declare-fun bs!2958 () Bool)

(assert (= bs!2958 d!14809))

(declare-fun m!64639 () Bool)

(assert (=> bs!2958 m!64639))

(declare-fun m!64641 () Bool)

(assert (=> bs!2958 m!64641))

(declare-fun m!64643 () Bool)

(assert (=> bs!2958 m!64643))

(assert (=> bs!2958 m!64407))

(declare-fun m!64645 () Bool)

(assert (=> bs!2958 m!64645))

(assert (=> bs!2958 m!64639))

(assert (=> bs!2958 m!64643))

(declare-fun m!64647 () Bool)

(assert (=> bs!2958 m!64647))

(assert (=> b!68483 d!14809))

(declare-fun d!14811 () Bool)

(declare-fun e!45022 () Bool)

(assert (=> d!14811 e!45022))

(declare-fun res!36936 () Bool)

(assert (=> d!14811 (=> (not res!36936) (not e!45022))))

(declare-fun lt!30056 () ListLongMap!1407)

(assert (=> d!14811 (= res!36936 (contains!714 lt!30056 (_1!1062 lt!29893)))))

(declare-fun lt!30057 () List!1469)

(assert (=> d!14811 (= lt!30056 (ListLongMap!1408 lt!30057))))

(declare-fun lt!30054 () Unit!1919)

(declare-fun lt!30055 () Unit!1919)

(assert (=> d!14811 (= lt!30054 lt!30055)))

(assert (=> d!14811 (= (getValueByKey!131 lt!30057 (_1!1062 lt!29893)) (Some!136 (_2!1062 lt!29893)))))

(assert (=> d!14811 (= lt!30055 (lemmaContainsTupThenGetReturnValue!48 lt!30057 (_1!1062 lt!29893) (_2!1062 lt!29893)))))

(assert (=> d!14811 (= lt!30057 (insertStrictlySorted!51 (toList!719 lt!29889) (_1!1062 lt!29893) (_2!1062 lt!29893)))))

(assert (=> d!14811 (= (+!90 lt!29889 lt!29893) lt!30056)))

(declare-fun b!68685 () Bool)

(declare-fun res!36935 () Bool)

(assert (=> b!68685 (=> (not res!36935) (not e!45022))))

(assert (=> b!68685 (= res!36935 (= (getValueByKey!131 (toList!719 lt!30056) (_1!1062 lt!29893)) (Some!136 (_2!1062 lt!29893))))))

(declare-fun b!68686 () Bool)

(assert (=> b!68686 (= e!45022 (contains!716 (toList!719 lt!30056) lt!29893))))

(assert (= (and d!14811 res!36936) b!68685))

(assert (= (and b!68685 res!36935) b!68686))

(declare-fun m!64649 () Bool)

(assert (=> d!14811 m!64649))

(declare-fun m!64651 () Bool)

(assert (=> d!14811 m!64651))

(declare-fun m!64653 () Bool)

(assert (=> d!14811 m!64653))

(declare-fun m!64655 () Bool)

(assert (=> d!14811 m!64655))

(declare-fun m!64657 () Bool)

(assert (=> b!68685 m!64657))

(declare-fun m!64659 () Bool)

(assert (=> b!68686 m!64659))

(assert (=> b!68483 d!14811))

(declare-fun d!14813 () Bool)

(assert (=> d!14813 (= (validMask!0 (mask!6113 (v!2494 (underlying!253 thiss!992)))) (and (or (= (mask!6113 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000000000111) (= (mask!6113 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000000001111) (= (mask!6113 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000000011111) (= (mask!6113 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000000111111) (= (mask!6113 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000001111111) (= (mask!6113 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000011111111) (= (mask!6113 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000111111111) (= (mask!6113 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000001111111111) (= (mask!6113 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000011111111111) (= (mask!6113 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000111111111111) (= (mask!6113 (v!2494 (underlying!253 thiss!992))) #b00000000000000000001111111111111) (= (mask!6113 (v!2494 (underlying!253 thiss!992))) #b00000000000000000011111111111111) (= (mask!6113 (v!2494 (underlying!253 thiss!992))) #b00000000000000000111111111111111) (= (mask!6113 (v!2494 (underlying!253 thiss!992))) #b00000000000000001111111111111111) (= (mask!6113 (v!2494 (underlying!253 thiss!992))) #b00000000000000011111111111111111) (= (mask!6113 (v!2494 (underlying!253 thiss!992))) #b00000000000000111111111111111111) (= (mask!6113 (v!2494 (underlying!253 thiss!992))) #b00000000000001111111111111111111) (= (mask!6113 (v!2494 (underlying!253 thiss!992))) #b00000000000011111111111111111111) (= (mask!6113 (v!2494 (underlying!253 thiss!992))) #b00000000000111111111111111111111) (= (mask!6113 (v!2494 (underlying!253 thiss!992))) #b00000000001111111111111111111111) (= (mask!6113 (v!2494 (underlying!253 thiss!992))) #b00000000011111111111111111111111) (= (mask!6113 (v!2494 (underlying!253 thiss!992))) #b00000000111111111111111111111111) (= (mask!6113 (v!2494 (underlying!253 thiss!992))) #b00000001111111111111111111111111) (= (mask!6113 (v!2494 (underlying!253 thiss!992))) #b00000011111111111111111111111111) (= (mask!6113 (v!2494 (underlying!253 thiss!992))) #b00000111111111111111111111111111) (= (mask!6113 (v!2494 (underlying!253 thiss!992))) #b00001111111111111111111111111111) (= (mask!6113 (v!2494 (underlying!253 thiss!992))) #b00011111111111111111111111111111) (= (mask!6113 (v!2494 (underlying!253 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!6113 (v!2494 (underlying!253 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> b!68483 d!14813))

(declare-fun d!14815 () Bool)

(declare-fun e!45027 () Bool)

(assert (=> d!14815 e!45027))

(declare-fun res!36939 () Bool)

(assert (=> d!14815 (=> res!36939 e!45027)))

(declare-fun lt!30067 () Bool)

(assert (=> d!14815 (= res!36939 (not lt!30067))))

(declare-fun lt!30066 () Bool)

(assert (=> d!14815 (= lt!30067 lt!30066)))

(declare-fun lt!30068 () Unit!1919)

(declare-fun e!45028 () Unit!1919)

(assert (=> d!14815 (= lt!30068 e!45028)))

(declare-fun c!9724 () Bool)

(assert (=> d!14815 (= c!9724 lt!30066)))

(declare-fun containsKey!135 (List!1469 (_ BitVec 64)) Bool)

(assert (=> d!14815 (= lt!30066 (containsKey!135 (toList!719 lt!29895) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(assert (=> d!14815 (= (contains!714 lt!29895 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) lt!30067)))

(declare-fun b!68693 () Bool)

(declare-fun lt!30069 () Unit!1919)

(assert (=> b!68693 (= e!45028 lt!30069)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!83 (List!1469 (_ BitVec 64)) Unit!1919)

(assert (=> b!68693 (= lt!30069 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 lt!29895) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(declare-fun isDefined!84 (Option!137) Bool)

(assert (=> b!68693 (isDefined!84 (getValueByKey!131 (toList!719 lt!29895) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(declare-fun b!68694 () Bool)

(declare-fun Unit!1927 () Unit!1919)

(assert (=> b!68694 (= e!45028 Unit!1927)))

(declare-fun b!68695 () Bool)

(assert (=> b!68695 (= e!45027 (isDefined!84 (getValueByKey!131 (toList!719 lt!29895) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355))))))

(assert (= (and d!14815 c!9724) b!68693))

(assert (= (and d!14815 (not c!9724)) b!68694))

(assert (= (and d!14815 (not res!36939)) b!68695))

(assert (=> d!14815 m!64407))

(declare-fun m!64661 () Bool)

(assert (=> d!14815 m!64661))

(assert (=> b!68693 m!64407))

(declare-fun m!64663 () Bool)

(assert (=> b!68693 m!64663))

(assert (=> b!68693 m!64407))

(declare-fun m!64665 () Bool)

(assert (=> b!68693 m!64665))

(assert (=> b!68693 m!64665))

(declare-fun m!64667 () Bool)

(assert (=> b!68693 m!64667))

(assert (=> b!68695 m!64407))

(assert (=> b!68695 m!64665))

(assert (=> b!68695 m!64665))

(assert (=> b!68695 m!64667))

(assert (=> b!68469 d!14815))

(declare-fun bm!5840 () Bool)

(declare-fun call!5856 () ListLongMap!1407)

(declare-fun lt!30148 () tuple2!2100)

(assert (=> bm!5840 (= call!5856 (map!1140 (_2!1061 lt!30148)))))

(declare-fun call!5853 () ListLongMap!1407)

(declare-fun call!5844 () ListLongMap!1407)

(declare-fun c!9756 () Bool)

(declare-fun b!68776 () Bool)

(declare-fun e!45078 () ListLongMap!1407)

(assert (=> b!68776 (= e!45078 (ite c!9756 call!5853 call!5844))))

(declare-fun b!68777 () Bool)

(declare-fun e!45081 () tuple2!2100)

(declare-fun e!45071 () tuple2!2100)

(assert (=> b!68777 (= e!45081 e!45071)))

(declare-fun c!9763 () Bool)

(declare-datatypes ((SeekEntryResult!234 0))(
  ( (MissingZero!234 (index!3065 (_ BitVec 32))) (Found!234 (index!3066 (_ BitVec 32))) (Intermediate!234 (undefined!1046 Bool) (index!3067 (_ BitVec 32)) (x!10848 (_ BitVec 32))) (Undefined!234) (MissingVacant!234 (index!3068 (_ BitVec 32))) )
))
(declare-fun lt!30149 () SeekEntryResult!234)

(assert (=> b!68777 (= c!9763 ((_ is MissingZero!234) lt!30149))))

(declare-fun c!9761 () Bool)

(declare-fun call!5847 () tuple2!2100)

(declare-fun bm!5841 () Bool)

(declare-fun updateHelperNewKey!22 (LongMapFixedSize!678 (_ BitVec 64) V!2923 (_ BitVec 32)) tuple2!2100)

(assert (=> bm!5841 (= call!5847 (updateHelperNewKey!22 newMap!16 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897 (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149))))))

(declare-fun b!68778 () Bool)

(declare-fun e!45088 () Bool)

(declare-fun call!5861 () Bool)

(assert (=> b!68778 (= e!45088 (not call!5861))))

(declare-fun bm!5842 () Bool)

(declare-fun call!5846 () ListLongMap!1407)

(declare-fun lt!30124 () (_ BitVec 32))

(declare-fun c!9754 () Bool)

(assert (=> bm!5842 (= call!5846 (getCurrentListMap!417 (_keys!3812 newMap!16) (ite c!9754 (_values!2151 newMap!16) (array!3858 (store (arr!1842 (_values!2151 newMap!16)) (index!3066 lt!30149) (ValueCellFull!885 lt!29897)) (size!2078 (_values!2151 newMap!16)))) (mask!6113 newMap!16) (ite (and c!9754 c!9756) lt!30124 (extraKeys!2035 newMap!16)) (ite (and c!9754 c!9756) lt!29897 (zeroValue!2074 newMap!16)) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun b!68779 () Bool)

(declare-fun e!45077 () Unit!1919)

(declare-fun Unit!1928 () Unit!1919)

(assert (=> b!68779 (= e!45077 Unit!1928)))

(declare-fun lt!30143 () Unit!1919)

(declare-fun call!5858 () Unit!1919)

(assert (=> b!68779 (= lt!30143 call!5858)))

(declare-fun lt!30150 () SeekEntryResult!234)

(declare-fun call!5848 () SeekEntryResult!234)

(assert (=> b!68779 (= lt!30150 call!5848)))

(declare-fun c!9760 () Bool)

(assert (=> b!68779 (= c!9760 ((_ is MissingZero!234) lt!30150))))

(declare-fun e!45075 () Bool)

(assert (=> b!68779 e!45075))

(declare-fun lt!30129 () Unit!1919)

(assert (=> b!68779 (= lt!30129 lt!30143)))

(assert (=> b!68779 false))

(declare-fun b!68780 () Bool)

(declare-fun e!45091 () tuple2!2100)

(declare-fun e!45083 () tuple2!2100)

(assert (=> b!68780 (= e!45091 e!45083)))

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!3855 (_ BitVec 32)) SeekEntryResult!234)

(assert (=> b!68780 (= lt!30149 (seekEntryOrOpen!0 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (_keys!3812 newMap!16) (mask!6113 newMap!16)))))

(declare-fun c!9759 () Bool)

(assert (=> b!68780 (= c!9759 ((_ is Undefined!234) lt!30149))))

(declare-fun call!5849 () Bool)

(declare-fun bm!5843 () Bool)

(assert (=> bm!5843 (= call!5849 (arrayContainsKey!0 (_keys!3812 newMap!16) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!68781 () Bool)

(declare-fun lt!30136 () Unit!1919)

(declare-fun e!45079 () Unit!1919)

(assert (=> b!68781 (= lt!30136 e!45079)))

(declare-fun c!9753 () Bool)

(declare-fun call!5843 () Bool)

(assert (=> b!68781 (= c!9753 call!5843)))

(assert (=> b!68781 (= e!45083 (tuple2!2101 false newMap!16))))

(declare-fun bm!5844 () Bool)

(declare-fun call!5863 () ListLongMap!1407)

(assert (=> bm!5844 (= call!5863 (map!1140 newMap!16))))

(declare-fun b!68782 () Bool)

(declare-fun e!45086 () tuple2!2100)

(assert (=> b!68782 (= e!45091 e!45086)))

(assert (=> b!68782 (= c!9756 (= (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!68783 () Bool)

(declare-fun e!45080 () Bool)

(declare-fun call!5862 () Bool)

(assert (=> b!68783 (= e!45080 (not call!5862))))

(declare-fun bm!5845 () Bool)

(declare-fun call!5851 () Bool)

(declare-fun call!5845 () Bool)

(assert (=> bm!5845 (= call!5851 call!5845)))

(declare-fun bm!5846 () Bool)

(assert (=> bm!5846 (= call!5861 call!5849)))

(declare-fun b!68784 () Bool)

(declare-fun e!45074 () Bool)

(assert (=> b!68784 (= e!45074 (not call!5861))))

(declare-fun call!5865 () ListLongMap!1407)

(declare-fun bm!5847 () Bool)

(assert (=> bm!5847 (= call!5865 (+!90 e!45078 (ite c!9754 (ite c!9756 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))

(declare-fun c!9751 () Bool)

(assert (=> bm!5847 (= c!9751 c!9754)))

(declare-fun b!68785 () Bool)

(declare-fun e!45073 () Bool)

(assert (=> b!68785 (= e!45073 e!45088)))

(declare-fun res!36974 () Bool)

(assert (=> b!68785 (= res!36974 call!5851)))

(assert (=> b!68785 (=> (not res!36974) (not e!45088))))

(declare-fun bm!5848 () Bool)

(declare-fun call!5860 () Bool)

(assert (=> bm!5848 (= call!5845 call!5860)))

(declare-fun b!68786 () Bool)

(declare-fun e!45087 () Bool)

(assert (=> b!68786 (= e!45087 (= call!5856 call!5863))))

(declare-fun b!68787 () Bool)

(declare-fun res!36969 () Bool)

(declare-fun lt!30139 () SeekEntryResult!234)

(assert (=> b!68787 (= res!36969 (= (select (arr!1841 (_keys!3812 newMap!16)) (index!3068 lt!30139)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!68787 (=> (not res!36969) (not e!45080))))

(declare-fun lt!30133 () SeekEntryResult!234)

(declare-fun bm!5849 () Bool)

(declare-fun c!9752 () Bool)

(declare-fun c!9755 () Bool)

(declare-fun lt!30146 () SeekEntryResult!234)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!5849 (= call!5860 (inRange!0 (ite c!9759 (ite c!9753 (index!3066 lt!30133) (ite c!9752 (index!3065 lt!30139) (index!3068 lt!30139))) (ite c!9755 (index!3066 lt!30146) (ite c!9760 (index!3065 lt!30150) (index!3068 lt!30150)))) (mask!6113 newMap!16)))))

(declare-fun bm!5850 () Bool)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!22 (array!3855 array!3857 (_ BitVec 32) (_ BitVec 32) V!2923 V!2923 (_ BitVec 64) Int) Unit!1919)

(assert (=> bm!5850 (= call!5858 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!22 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (defaultEntry!2168 newMap!16)))))

(declare-fun b!68788 () Bool)

(declare-fun res!36980 () Bool)

(declare-fun e!45072 () Bool)

(assert (=> b!68788 (=> (not res!36980) (not e!45072))))

(assert (=> b!68788 (= res!36980 (= (select (arr!1841 (_keys!3812 newMap!16)) (index!3065 lt!30139)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!5851 () Bool)

(declare-fun call!5855 () SeekEntryResult!234)

(assert (=> bm!5851 (= call!5848 call!5855)))

(declare-fun b!68789 () Bool)

(declare-fun e!45076 () Bool)

(assert (=> b!68789 (= e!45076 e!45080)))

(declare-fun res!36978 () Bool)

(declare-fun call!5859 () Bool)

(assert (=> b!68789 (= res!36978 call!5859)))

(assert (=> b!68789 (=> (not res!36978) (not e!45080))))

(declare-fun b!68790 () Bool)

(declare-fun lt!30142 () tuple2!2100)

(assert (=> b!68790 (= lt!30142 call!5847)))

(assert (=> b!68790 (= e!45071 (tuple2!2101 (_1!1061 lt!30142) (_2!1061 lt!30142)))))

(declare-fun b!68791 () Bool)

(declare-fun lt!30138 () tuple2!2100)

(assert (=> b!68791 (= e!45081 (tuple2!2101 (_1!1061 lt!30138) (_2!1061 lt!30138)))))

(assert (=> b!68791 (= lt!30138 call!5847)))

(declare-fun b!68792 () Bool)

(declare-fun c!9762 () Bool)

(assert (=> b!68792 (= c!9762 ((_ is MissingVacant!234) lt!30150))))

(assert (=> b!68792 (= e!45075 e!45073)))

(declare-fun bm!5852 () Bool)

(declare-fun call!5854 () ListLongMap!1407)

(assert (=> bm!5852 (= call!5854 call!5865)))

(declare-fun bm!5853 () Bool)

(assert (=> bm!5853 (= call!5844 call!5846)))

(declare-fun lt!30125 () array!3857)

(declare-fun call!5852 () ListLongMap!1407)

(declare-fun lt!30140 () (_ BitVec 32))

(declare-fun bm!5854 () Bool)

(assert (=> bm!5854 (= call!5852 (getCurrentListMap!417 (_keys!3812 newMap!16) (ite (or c!9754 c!9759) (_values!2151 newMap!16) lt!30125) (mask!6113 newMap!16) (ite c!9754 (ite c!9756 (extraKeys!2035 newMap!16) lt!30140) (extraKeys!2035 newMap!16)) (zeroValue!2074 newMap!16) (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun b!68793 () Bool)

(declare-fun res!36971 () Bool)

(assert (=> b!68793 (= res!36971 call!5845)))

(declare-fun e!45084 () Bool)

(assert (=> b!68793 (=> (not res!36971) (not e!45084))))

(declare-fun bm!5855 () Bool)

(declare-fun call!5850 () Bool)

(assert (=> bm!5855 (= call!5850 call!5860)))

(declare-fun bm!5856 () Bool)

(assert (=> bm!5856 (= call!5859 call!5850)))

(declare-fun b!68794 () Bool)

(declare-fun res!36973 () Bool)

(assert (=> b!68794 (=> (not res!36973) (not e!45074))))

(assert (=> b!68794 (= res!36973 (= (select (arr!1841 (_keys!3812 newMap!16)) (index!3065 lt!30150)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!68795 () Bool)

(assert (=> b!68795 (= e!45072 (not call!5862))))

(declare-fun b!68796 () Bool)

(assert (=> b!68796 (= e!45084 (= (select (arr!1841 (_keys!3812 newMap!16)) (index!3066 lt!30146)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(declare-fun b!68797 () Bool)

(declare-fun lt!30145 () Unit!1919)

(declare-fun lt!30130 () Unit!1919)

(assert (=> b!68797 (= lt!30145 lt!30130)))

(assert (=> b!68797 call!5843))

(declare-fun lemmaValidKeyInArrayIsInListMap!83 (array!3855 array!3857 (_ BitVec 32) (_ BitVec 32) V!2923 V!2923 (_ BitVec 32) Int) Unit!1919)

(assert (=> b!68797 (= lt!30130 (lemmaValidKeyInArrayIsInListMap!83 (_keys!3812 newMap!16) lt!30125 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (index!3066 lt!30149) (defaultEntry!2168 newMap!16)))))

(assert (=> b!68797 (= lt!30125 (array!3858 (store (arr!1842 (_values!2151 newMap!16)) (index!3066 lt!30149) (ValueCellFull!885 lt!29897)) (size!2078 (_values!2151 newMap!16))))))

(declare-fun lt!30135 () Unit!1919)

(declare-fun lt!30141 () Unit!1919)

(assert (=> b!68797 (= lt!30135 lt!30141)))

(assert (=> b!68797 (= call!5865 call!5846)))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!22 (array!3855 array!3857 (_ BitVec 32) (_ BitVec 32) V!2923 V!2923 (_ BitVec 32) (_ BitVec 64) V!2923 Int) Unit!1919)

(assert (=> b!68797 (= lt!30141 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!22 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (index!3066 lt!30149) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30131 () Unit!1919)

(assert (=> b!68797 (= lt!30131 e!45077)))

(assert (=> b!68797 (= c!9755 (contains!714 (getCurrentListMap!417 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(assert (=> b!68797 (= e!45071 (tuple2!2101 true (LongMapFixedSize!679 (defaultEntry!2168 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (_size!388 newMap!16) (_keys!3812 newMap!16) (array!3858 (store (arr!1842 (_values!2151 newMap!16)) (index!3066 lt!30149) (ValueCellFull!885 lt!29897)) (size!2078 (_values!2151 newMap!16))) (_vacant!388 newMap!16))))))

(declare-fun b!68798 () Bool)

(declare-fun e!45082 () Bool)

(assert (=> b!68798 (= e!45082 (= (select (arr!1841 (_keys!3812 newMap!16)) (index!3066 lt!30133)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(declare-fun call!5857 () Unit!1919)

(declare-fun bm!5857 () Bool)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!22 (array!3855 array!3857 (_ BitVec 32) (_ BitVec 32) V!2923 V!2923 (_ BitVec 64) Int) Unit!1919)

(assert (=> bm!5857 (= call!5857 (lemmaInListMapThenSeekEntryOrOpenFindsIt!22 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (defaultEntry!2168 newMap!16)))))

(declare-fun b!68799 () Bool)

(declare-fun e!45090 () Bool)

(assert (=> b!68799 (= e!45090 (= call!5856 (+!90 call!5863 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))

(declare-fun bm!5858 () Bool)

(assert (=> bm!5858 (= call!5855 (seekEntryOrOpen!0 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (_keys!3812 newMap!16) (mask!6113 newMap!16)))))

(declare-fun b!68800 () Bool)

(declare-fun lt!30134 () Unit!1919)

(assert (=> b!68800 (= e!45079 lt!30134)))

(assert (=> b!68800 (= lt!30134 call!5858)))

(declare-fun call!5864 () SeekEntryResult!234)

(assert (=> b!68800 (= lt!30139 call!5864)))

(assert (=> b!68800 (= c!9752 ((_ is MissingZero!234) lt!30139))))

(declare-fun e!45085 () Bool)

(assert (=> b!68800 e!45085))

(declare-fun b!68801 () Bool)

(declare-fun lt!30137 () Unit!1919)

(declare-fun lt!30127 () Unit!1919)

(assert (=> b!68801 (= lt!30137 lt!30127)))

(assert (=> b!68801 (= call!5854 call!5853)))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!22 (array!3855 array!3857 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2923 V!2923 V!2923 Int) Unit!1919)

(assert (=> b!68801 (= lt!30127 (lemmaChangeLongMinValueKeyThenAddPairToListMap!22 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) lt!30140 (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) lt!29897 (defaultEntry!2168 newMap!16)))))

(assert (=> b!68801 (= lt!30140 (bvor (extraKeys!2035 newMap!16) #b00000000000000000000000000000010))))

(assert (=> b!68801 (= e!45086 (tuple2!2101 true (LongMapFixedSize!679 (defaultEntry!2168 newMap!16) (mask!6113 newMap!16) (bvor (extraKeys!2035 newMap!16) #b00000000000000000000000000000010) (zeroValue!2074 newMap!16) lt!29897 (_size!388 newMap!16) (_keys!3812 newMap!16) (_values!2151 newMap!16) (_vacant!388 newMap!16))))))

(declare-fun b!68802 () Bool)

(declare-fun lt!30126 () Unit!1919)

(declare-fun lt!30128 () Unit!1919)

(assert (=> b!68802 (= lt!30126 lt!30128)))

(assert (=> b!68802 (= call!5854 call!5844)))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!22 (array!3855 array!3857 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2923 V!2923 V!2923 Int) Unit!1919)

(assert (=> b!68802 (= lt!30128 (lemmaChangeZeroKeyThenAddPairToListMap!22 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) lt!30124 (zeroValue!2074 newMap!16) lt!29897 (minValue!2074 newMap!16) (defaultEntry!2168 newMap!16)))))

(assert (=> b!68802 (= lt!30124 (bvor (extraKeys!2035 newMap!16) #b00000000000000000000000000000001))))

(assert (=> b!68802 (= e!45086 (tuple2!2101 true (LongMapFixedSize!679 (defaultEntry!2168 newMap!16) (mask!6113 newMap!16) (bvor (extraKeys!2035 newMap!16) #b00000000000000000000000000000001) lt!29897 (minValue!2074 newMap!16) (_size!388 newMap!16) (_keys!3812 newMap!16) (_values!2151 newMap!16) (_vacant!388 newMap!16))))))

(declare-fun b!68803 () Bool)

(declare-fun res!36970 () Bool)

(assert (=> b!68803 (= res!36970 (= (select (arr!1841 (_keys!3812 newMap!16)) (index!3068 lt!30150)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!68803 (=> (not res!36970) (not e!45088))))

(declare-fun bm!5859 () Bool)

(declare-fun call!5866 () ListLongMap!1407)

(assert (=> bm!5859 (= call!5866 call!5852)))

(declare-fun b!68804 () Bool)

(declare-fun Unit!1929 () Unit!1919)

(assert (=> b!68804 (= e!45079 Unit!1929)))

(declare-fun lt!30132 () Unit!1919)

(assert (=> b!68804 (= lt!30132 call!5857)))

(assert (=> b!68804 (= lt!30133 call!5864)))

(declare-fun res!36972 () Bool)

(assert (=> b!68804 (= res!36972 ((_ is Found!234) lt!30133))))

(assert (=> b!68804 (=> (not res!36972) (not e!45082))))

(assert (=> b!68804 e!45082))

(declare-fun lt!30144 () Unit!1919)

(assert (=> b!68804 (= lt!30144 lt!30132)))

(assert (=> b!68804 false))

(declare-fun bm!5860 () Bool)

(assert (=> bm!5860 (= call!5843 (contains!714 call!5866 (ite c!9759 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (select (arr!1841 (_keys!3812 newMap!16)) (index!3066 lt!30149)))))))

(declare-fun b!68805 () Bool)

(declare-fun res!36979 () Bool)

(assert (=> b!68805 (=> (not res!36979) (not e!45072))))

(assert (=> b!68805 (= res!36979 call!5859)))

(assert (=> b!68805 (= e!45085 e!45072)))

(declare-fun bm!5861 () Bool)

(assert (=> bm!5861 (= call!5862 call!5849)))

(declare-fun d!14817 () Bool)

(declare-fun e!45089 () Bool)

(assert (=> d!14817 e!45089))

(declare-fun res!36981 () Bool)

(assert (=> d!14817 (=> (not res!36981) (not e!45089))))

(assert (=> d!14817 (= res!36981 (valid!283 (_2!1061 lt!30148)))))

(assert (=> d!14817 (= lt!30148 e!45091)))

(assert (=> d!14817 (= c!9754 (= (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (bvneg (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355))))))

(assert (=> d!14817 (valid!283 newMap!16)))

(assert (=> d!14817 (= (update!91 newMap!16 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897) lt!30148)))

(declare-fun bm!5862 () Bool)

(assert (=> bm!5862 (= call!5864 call!5855)))

(declare-fun b!68806 () Bool)

(declare-fun res!36968 () Bool)

(assert (=> b!68806 (=> (not res!36968) (not e!45074))))

(assert (=> b!68806 (= res!36968 call!5851)))

(assert (=> b!68806 (= e!45075 e!45074)))

(declare-fun b!68807 () Bool)

(assert (=> b!68807 (= e!45089 e!45087)))

(declare-fun c!9757 () Bool)

(assert (=> b!68807 (= c!9757 (_1!1061 lt!30148))))

(declare-fun b!68808 () Bool)

(assert (=> b!68808 (= c!9761 ((_ is MissingVacant!234) lt!30149))))

(assert (=> b!68808 (= e!45083 e!45081)))

(declare-fun bm!5863 () Bool)

(assert (=> bm!5863 (= call!5853 call!5852)))

(declare-fun b!68809 () Bool)

(assert (=> b!68809 (= e!45073 ((_ is Undefined!234) lt!30150))))

(declare-fun b!68810 () Bool)

(assert (=> b!68810 (= e!45087 e!45090)))

(declare-fun res!36975 () Bool)

(assert (=> b!68810 (= res!36975 (contains!714 call!5856 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(assert (=> b!68810 (=> (not res!36975) (not e!45090))))

(declare-fun b!68811 () Bool)

(declare-fun lt!30147 () Unit!1919)

(assert (=> b!68811 (= e!45077 lt!30147)))

(assert (=> b!68811 (= lt!30147 call!5857)))

(assert (=> b!68811 (= lt!30146 call!5848)))

(declare-fun res!36977 () Bool)

(assert (=> b!68811 (= res!36977 ((_ is Found!234) lt!30146))))

(assert (=> b!68811 (=> (not res!36977) (not e!45084))))

(assert (=> b!68811 e!45084))

(declare-fun b!68812 () Bool)

(declare-fun res!36976 () Bool)

(assert (=> b!68812 (= res!36976 call!5850)))

(assert (=> b!68812 (=> (not res!36976) (not e!45082))))

(declare-fun b!68813 () Bool)

(assert (=> b!68813 (= e!45078 (getCurrentListMap!417 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun b!68814 () Bool)

(declare-fun c!9758 () Bool)

(assert (=> b!68814 (= c!9758 ((_ is MissingVacant!234) lt!30139))))

(assert (=> b!68814 (= e!45085 e!45076)))

(declare-fun b!68815 () Bool)

(assert (=> b!68815 (= e!45076 ((_ is Undefined!234) lt!30139))))

(assert (= (and d!14817 c!9754) b!68782))

(assert (= (and d!14817 (not c!9754)) b!68780))

(assert (= (and b!68782 c!9756) b!68802))

(assert (= (and b!68782 (not c!9756)) b!68801))

(assert (= (or b!68802 b!68801) bm!5853))

(assert (= (or b!68802 b!68801) bm!5863))

(assert (= (or b!68802 b!68801) bm!5852))

(assert (= (and b!68780 c!9759) b!68781))

(assert (= (and b!68780 (not c!9759)) b!68808))

(assert (= (and b!68781 c!9753) b!68804))

(assert (= (and b!68781 (not c!9753)) b!68800))

(assert (= (and b!68804 res!36972) b!68812))

(assert (= (and b!68812 res!36976) b!68798))

(assert (= (and b!68800 c!9752) b!68805))

(assert (= (and b!68800 (not c!9752)) b!68814))

(assert (= (and b!68805 res!36979) b!68788))

(assert (= (and b!68788 res!36980) b!68795))

(assert (= (and b!68814 c!9758) b!68789))

(assert (= (and b!68814 (not c!9758)) b!68815))

(assert (= (and b!68789 res!36978) b!68787))

(assert (= (and b!68787 res!36969) b!68783))

(assert (= (or b!68805 b!68789) bm!5856))

(assert (= (or b!68795 b!68783) bm!5861))

(assert (= (or b!68812 bm!5856) bm!5855))

(assert (= (or b!68804 b!68800) bm!5862))

(assert (= (and b!68808 c!9761) b!68791))

(assert (= (and b!68808 (not c!9761)) b!68777))

(assert (= (and b!68777 c!9763) b!68790))

(assert (= (and b!68777 (not c!9763)) b!68797))

(assert (= (and b!68797 c!9755) b!68811))

(assert (= (and b!68797 (not c!9755)) b!68779))

(assert (= (and b!68811 res!36977) b!68793))

(assert (= (and b!68793 res!36971) b!68796))

(assert (= (and b!68779 c!9760) b!68806))

(assert (= (and b!68779 (not c!9760)) b!68792))

(assert (= (and b!68806 res!36968) b!68794))

(assert (= (and b!68794 res!36973) b!68784))

(assert (= (and b!68792 c!9762) b!68785))

(assert (= (and b!68792 (not c!9762)) b!68809))

(assert (= (and b!68785 res!36974) b!68803))

(assert (= (and b!68803 res!36970) b!68778))

(assert (= (or b!68806 b!68785) bm!5845))

(assert (= (or b!68784 b!68778) bm!5846))

(assert (= (or b!68793 bm!5845) bm!5848))

(assert (= (or b!68811 b!68779) bm!5851))

(assert (= (or b!68791 b!68790) bm!5841))

(assert (= (or bm!5862 bm!5851) bm!5858))

(assert (= (or b!68781 b!68797) bm!5859))

(assert (= (or bm!5861 bm!5846) bm!5843))

(assert (= (or bm!5855 bm!5848) bm!5849))

(assert (= (or b!68800 b!68779) bm!5850))

(assert (= (or b!68804 b!68811) bm!5857))

(assert (= (or b!68781 b!68797) bm!5860))

(assert (= (or bm!5853 b!68797) bm!5842))

(assert (= (or bm!5863 bm!5859) bm!5854))

(assert (= (or bm!5852 b!68797) bm!5847))

(assert (= (and bm!5847 c!9751) b!68776))

(assert (= (and bm!5847 (not c!9751)) b!68813))

(assert (= (and d!14817 res!36981) b!68807))

(assert (= (and b!68807 c!9757) b!68810))

(assert (= (and b!68807 (not c!9757)) b!68786))

(assert (= (and b!68810 res!36975) b!68799))

(assert (= (or b!68799 b!68786) bm!5844))

(assert (= (or b!68810 b!68799 b!68786) bm!5840))

(declare-fun m!64669 () Bool)

(assert (=> b!68801 m!64669))

(declare-fun m!64671 () Bool)

(assert (=> b!68788 m!64671))

(declare-fun m!64673 () Bool)

(assert (=> b!68798 m!64673))

(assert (=> b!68813 m!64511))

(assert (=> bm!5841 m!64407))

(declare-fun m!64675 () Bool)

(assert (=> bm!5841 m!64675))

(declare-fun m!64677 () Bool)

(assert (=> b!68799 m!64677))

(assert (=> bm!5844 m!64403))

(declare-fun m!64679 () Bool)

(assert (=> b!68794 m!64679))

(declare-fun m!64681 () Bool)

(assert (=> bm!5860 m!64681))

(declare-fun m!64683 () Bool)

(assert (=> bm!5860 m!64683))

(declare-fun m!64685 () Bool)

(assert (=> bm!5849 m!64685))

(assert (=> b!68810 m!64407))

(declare-fun m!64687 () Bool)

(assert (=> b!68810 m!64687))

(assert (=> bm!5843 m!64407))

(declare-fun m!64689 () Bool)

(assert (=> bm!5843 m!64689))

(declare-fun m!64691 () Bool)

(assert (=> bm!5847 m!64691))

(declare-fun m!64693 () Bool)

(assert (=> b!68796 m!64693))

(assert (=> bm!5858 m!64407))

(declare-fun m!64695 () Bool)

(assert (=> bm!5858 m!64695))

(declare-fun m!64697 () Bool)

(assert (=> bm!5840 m!64697))

(declare-fun m!64699 () Bool)

(assert (=> bm!5854 m!64699))

(assert (=> bm!5857 m!64407))

(declare-fun m!64701 () Bool)

(assert (=> bm!5857 m!64701))

(declare-fun m!64703 () Bool)

(assert (=> bm!5842 m!64703))

(declare-fun m!64705 () Bool)

(assert (=> bm!5842 m!64705))

(declare-fun m!64707 () Bool)

(assert (=> b!68803 m!64707))

(assert (=> bm!5850 m!64407))

(declare-fun m!64709 () Bool)

(assert (=> bm!5850 m!64709))

(declare-fun m!64711 () Bool)

(assert (=> b!68802 m!64711))

(declare-fun m!64713 () Bool)

(assert (=> b!68787 m!64713))

(assert (=> b!68797 m!64511))

(assert (=> b!68797 m!64703))

(declare-fun m!64715 () Bool)

(assert (=> b!68797 m!64715))

(assert (=> b!68797 m!64511))

(assert (=> b!68797 m!64407))

(declare-fun m!64717 () Bool)

(assert (=> b!68797 m!64717))

(assert (=> b!68797 m!64407))

(declare-fun m!64719 () Bool)

(assert (=> b!68797 m!64719))

(declare-fun m!64721 () Bool)

(assert (=> d!14817 m!64721))

(assert (=> d!14817 m!64401))

(assert (=> b!68780 m!64407))

(assert (=> b!68780 m!64695))

(assert (=> b!68469 d!14817))

(declare-fun d!14819 () Bool)

(declare-fun c!9766 () Bool)

(assert (=> d!14819 (= c!9766 ((_ is ValueCellFull!885) (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(declare-fun e!45094 () V!2923)

(assert (=> d!14819 (= (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) from!355) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!45094)))

(declare-fun b!68820 () Bool)

(declare-fun get!1125 (ValueCell!885 V!2923) V!2923)

(assert (=> b!68820 (= e!45094 (get!1125 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) from!355) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!68821 () Bool)

(declare-fun get!1126 (ValueCell!885 V!2923) V!2923)

(assert (=> b!68821 (= e!45094 (get!1126 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) from!355) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14819 c!9766) b!68820))

(assert (= (and d!14819 (not c!9766)) b!68821))

(assert (=> b!68820 m!64409))

(assert (=> b!68820 m!64411))

(declare-fun m!64723 () Bool)

(assert (=> b!68820 m!64723))

(assert (=> b!68821 m!64409))

(assert (=> b!68821 m!64411))

(declare-fun m!64725 () Bool)

(assert (=> b!68821 m!64725))

(assert (=> b!68475 d!14819))

(declare-fun d!14821 () Bool)

(declare-fun res!36988 () Bool)

(declare-fun e!45097 () Bool)

(assert (=> d!14821 (=> (not res!36988) (not e!45097))))

(declare-fun simpleValid!49 (LongMapFixedSize!678) Bool)

(assert (=> d!14821 (= res!36988 (simpleValid!49 newMap!16))))

(assert (=> d!14821 (= (valid!283 newMap!16) e!45097)))

(declare-fun b!68828 () Bool)

(declare-fun res!36989 () Bool)

(assert (=> b!68828 (=> (not res!36989) (not e!45097))))

(declare-fun arrayCountValidKeys!0 (array!3855 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!68828 (= res!36989 (= (arrayCountValidKeys!0 (_keys!3812 newMap!16) #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))) (_size!388 newMap!16)))))

(declare-fun b!68829 () Bool)

(declare-fun res!36990 () Bool)

(assert (=> b!68829 (=> (not res!36990) (not e!45097))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!3855 (_ BitVec 32)) Bool)

(assert (=> b!68829 (= res!36990 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3812 newMap!16) (mask!6113 newMap!16)))))

(declare-fun b!68830 () Bool)

(assert (=> b!68830 (= e!45097 (arrayNoDuplicates!0 (_keys!3812 newMap!16) #b00000000000000000000000000000000 Nil!1467))))

(assert (= (and d!14821 res!36988) b!68828))

(assert (= (and b!68828 res!36989) b!68829))

(assert (= (and b!68829 res!36990) b!68830))

(declare-fun m!64727 () Bool)

(assert (=> d!14821 m!64727))

(declare-fun m!64729 () Bool)

(assert (=> b!68828 m!64729))

(declare-fun m!64731 () Bool)

(assert (=> b!68829 m!64731))

(declare-fun m!64733 () Bool)

(assert (=> b!68830 m!64733))

(assert (=> b!68480 d!14821))

(declare-fun b!68837 () Bool)

(declare-fun e!45102 () Bool)

(assert (=> b!68837 (= e!45102 tp_is_empty!2457)))

(declare-fun mapNonEmpty!3111 () Bool)

(declare-fun mapRes!3111 () Bool)

(declare-fun tp!8421 () Bool)

(assert (=> mapNonEmpty!3111 (= mapRes!3111 (and tp!8421 e!45102))))

(declare-fun mapKey!3111 () (_ BitVec 32))

(declare-fun mapRest!3111 () (Array (_ BitVec 32) ValueCell!885))

(declare-fun mapValue!3111 () ValueCell!885)

(assert (=> mapNonEmpty!3111 (= mapRest!3102 (store mapRest!3111 mapKey!3111 mapValue!3111))))

(declare-fun mapIsEmpty!3111 () Bool)

(assert (=> mapIsEmpty!3111 mapRes!3111))

(declare-fun b!68838 () Bool)

(declare-fun e!45103 () Bool)

(assert (=> b!68838 (= e!45103 tp_is_empty!2457)))

(declare-fun condMapEmpty!3111 () Bool)

(declare-fun mapDefault!3111 () ValueCell!885)

(assert (=> mapNonEmpty!3102 (= condMapEmpty!3111 (= mapRest!3102 ((as const (Array (_ BitVec 32) ValueCell!885)) mapDefault!3111)))))

(assert (=> mapNonEmpty!3102 (= tp!8405 (and e!45103 mapRes!3111))))

(assert (= (and mapNonEmpty!3102 condMapEmpty!3111) mapIsEmpty!3111))

(assert (= (and mapNonEmpty!3102 (not condMapEmpty!3111)) mapNonEmpty!3111))

(assert (= (and mapNonEmpty!3111 ((_ is ValueCellFull!885) mapValue!3111)) b!68837))

(assert (= (and mapNonEmpty!3102 ((_ is ValueCellFull!885) mapDefault!3111)) b!68838))

(declare-fun m!64735 () Bool)

(assert (=> mapNonEmpty!3111 m!64735))

(declare-fun b!68839 () Bool)

(declare-fun e!45104 () Bool)

(assert (=> b!68839 (= e!45104 tp_is_empty!2457)))

(declare-fun mapNonEmpty!3112 () Bool)

(declare-fun mapRes!3112 () Bool)

(declare-fun tp!8422 () Bool)

(assert (=> mapNonEmpty!3112 (= mapRes!3112 (and tp!8422 e!45104))))

(declare-fun mapKey!3112 () (_ BitVec 32))

(declare-fun mapRest!3112 () (Array (_ BitVec 32) ValueCell!885))

(declare-fun mapValue!3112 () ValueCell!885)

(assert (=> mapNonEmpty!3112 (= mapRest!3101 (store mapRest!3112 mapKey!3112 mapValue!3112))))

(declare-fun mapIsEmpty!3112 () Bool)

(assert (=> mapIsEmpty!3112 mapRes!3112))

(declare-fun b!68840 () Bool)

(declare-fun e!45105 () Bool)

(assert (=> b!68840 (= e!45105 tp_is_empty!2457)))

(declare-fun condMapEmpty!3112 () Bool)

(declare-fun mapDefault!3112 () ValueCell!885)

(assert (=> mapNonEmpty!3101 (= condMapEmpty!3112 (= mapRest!3101 ((as const (Array (_ BitVec 32) ValueCell!885)) mapDefault!3112)))))

(assert (=> mapNonEmpty!3101 (= tp!8404 (and e!45105 mapRes!3112))))

(assert (= (and mapNonEmpty!3101 condMapEmpty!3112) mapIsEmpty!3112))

(assert (= (and mapNonEmpty!3101 (not condMapEmpty!3112)) mapNonEmpty!3112))

(assert (= (and mapNonEmpty!3112 ((_ is ValueCellFull!885) mapValue!3112)) b!68839))

(assert (= (and mapNonEmpty!3101 ((_ is ValueCellFull!885) mapDefault!3112)) b!68840))

(declare-fun m!64737 () Bool)

(assert (=> mapNonEmpty!3112 m!64737))

(declare-fun b_lambda!3085 () Bool)

(assert (= b_lambda!3083 (or (and b!68478 b_free!2081) (and b!68465 b_free!2083 (= (defaultEntry!2168 newMap!16) (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))))) b_lambda!3085)))

(declare-fun b_lambda!3087 () Bool)

(assert (= b_lambda!3081 (or (and b!68478 b_free!2081) (and b!68465 b_free!2083 (= (defaultEntry!2168 newMap!16) (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))))) b_lambda!3087)))

(declare-fun b_lambda!3089 () Bool)

(assert (= b_lambda!3079 (or (and b!68478 b_free!2081) (and b!68465 b_free!2083 (= (defaultEntry!2168 newMap!16) (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))))) b_lambda!3089)))

(check-sat (not bm!5840) (not d!14805) (not b!68780) (not b!68674) (not b!68695) (not d!14801) (not b!68821) (not b_next!2081) (not b!68810) (not b!68599) (not b!68617) (not b_lambda!3089) (not d!14815) (not b!68673) (not b!68680) (not b!68638) (not b!68597) (not d!14817) (not bm!5850) b_and!4243 (not mapNonEmpty!3112) (not b!68605) (not bm!5849) (not d!14821) (not bm!5857) (not b!68693) (not b!68668) (not b!68802) (not b!68672) (not b!68684) (not d!14777) (not bm!5858) (not d!14781) (not bm!5788) (not b!68603) (not b_lambda!3085) tp_is_empty!2457 (not bm!5791) (not b!68634) (not bm!5842) (not d!14811) (not bm!5854) (not b!68828) (not bm!5841) (not b!68671) (not b!68610) (not d!14809) (not d!14783) (not b!68686) (not b!68799) (not b_lambda!3077) (not b!68681) (not b!68830) (not b!68663) (not b!68801) (not d!14803) (not b!68685) (not b!68670) (not d!14789) (not mapNonEmpty!3111) (not b!68813) (not b!68829) b_and!4245 (not b!68669) (not bm!5844) (not d!14807) (not b!68679) (not bm!5781) (not d!14779) (not bm!5860) (not bm!5780) (not b!68591) (not b_next!2083) (not b!68683) (not d!14785) (not b_lambda!3087) (not bm!5785) (not b!68598) (not bm!5843) (not b!68820) (not b!68797) (not bm!5779) (not bm!5847) (not b!68636) (not b!68592) (not b!68682) (not b!68622))
(check-sat b_and!4243 b_and!4245 (not b_next!2081) (not b_next!2083))
(get-model)

(declare-fun d!14823 () Bool)

(declare-fun lt!30153 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!73 (List!1469) (InoxSet tuple2!2102))

(assert (=> d!14823 (= lt!30153 (select (content!73 (toList!719 lt!30045)) lt!29892))))

(declare-fun e!45111 () Bool)

(assert (=> d!14823 (= lt!30153 e!45111)))

(declare-fun res!36995 () Bool)

(assert (=> d!14823 (=> (not res!36995) (not e!45111))))

(assert (=> d!14823 (= res!36995 ((_ is Cons!1465) (toList!719 lt!30045)))))

(assert (=> d!14823 (= (contains!716 (toList!719 lt!30045) lt!29892) lt!30153)))

(declare-fun b!68845 () Bool)

(declare-fun e!45110 () Bool)

(assert (=> b!68845 (= e!45111 e!45110)))

(declare-fun res!36996 () Bool)

(assert (=> b!68845 (=> res!36996 e!45110)))

(assert (=> b!68845 (= res!36996 (= (h!2050 (toList!719 lt!30045)) lt!29892))))

(declare-fun b!68846 () Bool)

(assert (=> b!68846 (= e!45110 (contains!716 (t!4972 (toList!719 lt!30045)) lt!29892))))

(assert (= (and d!14823 res!36995) b!68845))

(assert (= (and b!68845 (not res!36996)) b!68846))

(declare-fun m!64739 () Bool)

(assert (=> d!14823 m!64739))

(declare-fun m!64741 () Bool)

(assert (=> d!14823 m!64741))

(declare-fun m!64743 () Bool)

(assert (=> b!68846 m!64743))

(assert (=> b!68682 d!14823))

(assert (=> d!14783 d!14787))

(declare-fun d!14825 () Bool)

(assert (=> d!14825 (not (arrayContainsKey!0 (_keys!3812 (v!2494 (underlying!253 thiss!992))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> d!14825 true))

(declare-fun _$68!49 () Unit!1919)

(assert (=> d!14825 (= (choose!68 (_keys!3812 (v!2494 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (Cons!1466 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) Nil!1467)) _$68!49)))

(declare-fun bs!2959 () Bool)

(assert (= bs!2959 d!14825))

(assert (=> bs!2959 m!64407))

(assert (=> bs!2959 m!64433))

(assert (=> d!14783 d!14825))

(declare-fun d!14827 () Bool)

(declare-fun get!1127 (Option!137) V!2923)

(assert (=> d!14827 (= (apply!73 lt!29996 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1127 (getValueByKey!131 (toList!719 lt!29996) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2960 () Bool)

(assert (= bs!2960 d!14827))

(declare-fun m!64745 () Bool)

(assert (=> bs!2960 m!64745))

(assert (=> bs!2960 m!64745))

(declare-fun m!64747 () Bool)

(assert (=> bs!2960 m!64747))

(assert (=> b!68598 d!14827))

(declare-fun d!14829 () Bool)

(declare-fun lt!30154 () Bool)

(assert (=> d!14829 (= lt!30154 (select (content!73 (toList!719 lt!30041)) lt!29892))))

(declare-fun e!45113 () Bool)

(assert (=> d!14829 (= lt!30154 e!45113)))

(declare-fun res!36997 () Bool)

(assert (=> d!14829 (=> (not res!36997) (not e!45113))))

(assert (=> d!14829 (= res!36997 ((_ is Cons!1465) (toList!719 lt!30041)))))

(assert (=> d!14829 (= (contains!716 (toList!719 lt!30041) lt!29892) lt!30154)))

(declare-fun b!68847 () Bool)

(declare-fun e!45112 () Bool)

(assert (=> b!68847 (= e!45113 e!45112)))

(declare-fun res!36998 () Bool)

(assert (=> b!68847 (=> res!36998 e!45112)))

(assert (=> b!68847 (= res!36998 (= (h!2050 (toList!719 lt!30041)) lt!29892))))

(declare-fun b!68848 () Bool)

(assert (=> b!68848 (= e!45112 (contains!716 (t!4972 (toList!719 lt!30041)) lt!29892))))

(assert (= (and d!14829 res!36997) b!68847))

(assert (= (and b!68847 (not res!36998)) b!68848))

(declare-fun m!64749 () Bool)

(assert (=> d!14829 m!64749))

(declare-fun m!64751 () Bool)

(assert (=> d!14829 m!64751))

(declare-fun m!64753 () Bool)

(assert (=> b!68848 m!64753))

(assert (=> b!68680 d!14829))

(declare-fun d!14831 () Bool)

(declare-fun res!37003 () Bool)

(declare-fun e!45118 () Bool)

(assert (=> d!14831 (=> res!37003 e!45118)))

(assert (=> d!14831 (= res!37003 (and ((_ is Cons!1465) (toList!719 lt!29895)) (= (_1!1062 (h!2050 (toList!719 lt!29895))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355))))))

(assert (=> d!14831 (= (containsKey!135 (toList!719 lt!29895) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) e!45118)))

(declare-fun b!68853 () Bool)

(declare-fun e!45119 () Bool)

(assert (=> b!68853 (= e!45118 e!45119)))

(declare-fun res!37004 () Bool)

(assert (=> b!68853 (=> (not res!37004) (not e!45119))))

(assert (=> b!68853 (= res!37004 (and (or (not ((_ is Cons!1465) (toList!719 lt!29895))) (bvsle (_1!1062 (h!2050 (toList!719 lt!29895))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355))) ((_ is Cons!1465) (toList!719 lt!29895)) (bvslt (_1!1062 (h!2050 (toList!719 lt!29895))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355))))))

(declare-fun b!68854 () Bool)

(assert (=> b!68854 (= e!45119 (containsKey!135 (t!4972 (toList!719 lt!29895)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(assert (= (and d!14831 (not res!37003)) b!68853))

(assert (= (and b!68853 res!37004) b!68854))

(assert (=> b!68854 m!64407))

(declare-fun m!64755 () Bool)

(assert (=> b!68854 m!64755))

(assert (=> d!14815 d!14831))

(declare-fun b!68865 () Bool)

(declare-fun res!37015 () Bool)

(declare-fun e!45122 () Bool)

(assert (=> b!68865 (=> (not res!37015) (not e!45122))))

(declare-fun size!2081 (LongMapFixedSize!678) (_ BitVec 32))

(assert (=> b!68865 (= res!37015 (= (size!2081 newMap!16) (bvadd (_size!388 newMap!16) (bvsdiv (bvadd (extraKeys!2035 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun d!14833 () Bool)

(declare-fun res!37013 () Bool)

(assert (=> d!14833 (=> (not res!37013) (not e!45122))))

(assert (=> d!14833 (= res!37013 (validMask!0 (mask!6113 newMap!16)))))

(assert (=> d!14833 (= (simpleValid!49 newMap!16) e!45122)))

(declare-fun b!68864 () Bool)

(declare-fun res!37016 () Bool)

(assert (=> b!68864 (=> (not res!37016) (not e!45122))))

(assert (=> b!68864 (= res!37016 (bvsge (size!2081 newMap!16) (_size!388 newMap!16)))))

(declare-fun b!68866 () Bool)

(assert (=> b!68866 (= e!45122 (and (bvsge (extraKeys!2035 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!2035 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!388 newMap!16) #b00000000000000000000000000000000)))))

(declare-fun b!68863 () Bool)

(declare-fun res!37014 () Bool)

(assert (=> b!68863 (=> (not res!37014) (not e!45122))))

(assert (=> b!68863 (= res!37014 (and (= (size!2078 (_values!2151 newMap!16)) (bvadd (mask!6113 newMap!16) #b00000000000000000000000000000001)) (= (size!2077 (_keys!3812 newMap!16)) (size!2078 (_values!2151 newMap!16))) (bvsge (_size!388 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!388 newMap!16) (bvadd (mask!6113 newMap!16) #b00000000000000000000000000000001))))))

(assert (= (and d!14833 res!37013) b!68863))

(assert (= (and b!68863 res!37014) b!68864))

(assert (= (and b!68864 res!37016) b!68865))

(assert (= (and b!68865 res!37015) b!68866))

(declare-fun m!64757 () Bool)

(assert (=> b!68865 m!64757))

(declare-fun m!64759 () Bool)

(assert (=> d!14833 m!64759))

(assert (=> b!68864 m!64757))

(assert (=> d!14821 d!14833))

(declare-fun d!14835 () Bool)

(declare-fun lt!30155 () Bool)

(assert (=> d!14835 (= lt!30155 (select (content!73 (toList!719 lt!30049)) lt!29893))))

(declare-fun e!45124 () Bool)

(assert (=> d!14835 (= lt!30155 e!45124)))

(declare-fun res!37017 () Bool)

(assert (=> d!14835 (=> (not res!37017) (not e!45124))))

(assert (=> d!14835 (= res!37017 ((_ is Cons!1465) (toList!719 lt!30049)))))

(assert (=> d!14835 (= (contains!716 (toList!719 lt!30049) lt!29893) lt!30155)))

(declare-fun b!68867 () Bool)

(declare-fun e!45123 () Bool)

(assert (=> b!68867 (= e!45124 e!45123)))

(declare-fun res!37018 () Bool)

(assert (=> b!68867 (=> res!37018 e!45123)))

(assert (=> b!68867 (= res!37018 (= (h!2050 (toList!719 lt!30049)) lt!29893))))

(declare-fun b!68868 () Bool)

(assert (=> b!68868 (= e!45123 (contains!716 (t!4972 (toList!719 lt!30049)) lt!29893))))

(assert (= (and d!14835 res!37017) b!68867))

(assert (= (and b!68867 (not res!37018)) b!68868))

(declare-fun m!64761 () Bool)

(assert (=> d!14835 m!64761))

(declare-fun m!64763 () Bool)

(assert (=> d!14835 m!64763))

(declare-fun m!64765 () Bool)

(assert (=> b!68868 m!64765))

(assert (=> b!68684 d!14835))

(declare-fun b!68869 () Bool)

(declare-fun e!45128 () Bool)

(declare-fun e!45127 () Bool)

(assert (=> b!68869 (= e!45128 e!45127)))

(declare-fun c!9767 () Bool)

(assert (=> b!68869 (= c!9767 (validKeyInArray!0 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!68870 () Bool)

(declare-fun call!5867 () Bool)

(assert (=> b!68870 (= e!45127 call!5867)))

(declare-fun b!68871 () Bool)

(declare-fun e!45125 () Bool)

(assert (=> b!68871 (= e!45125 e!45128)))

(declare-fun res!37021 () Bool)

(assert (=> b!68871 (=> (not res!37021) (not e!45128))))

(declare-fun e!45126 () Bool)

(assert (=> b!68871 (= res!37021 (not e!45126))))

(declare-fun res!37019 () Bool)

(assert (=> b!68871 (=> (not res!37019) (not e!45126))))

(assert (=> b!68871 (= res!37019 (validKeyInArray!0 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun d!14837 () Bool)

(declare-fun res!37020 () Bool)

(assert (=> d!14837 (=> res!37020 e!45125)))

(assert (=> d!14837 (= res!37020 (bvsge (bvadd from!355 #b00000000000000000000000000000001) (size!2077 (_keys!3812 (v!2494 (underlying!253 thiss!992))))))))

(assert (=> d!14837 (= (arrayNoDuplicates!0 (_keys!3812 (v!2494 (underlying!253 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!9709 (Cons!1466 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) Nil!1467) Nil!1467)) e!45125)))

(declare-fun b!68872 () Bool)

(assert (=> b!68872 (= e!45127 call!5867)))

(declare-fun b!68873 () Bool)

(assert (=> b!68873 (= e!45126 (contains!715 (ite c!9709 (Cons!1466 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) Nil!1467) Nil!1467) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun bm!5864 () Bool)

(assert (=> bm!5864 (= call!5867 (arrayNoDuplicates!0 (_keys!3812 (v!2494 (underlying!253 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!9767 (Cons!1466 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!9709 (Cons!1466 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) Nil!1467) Nil!1467)) (ite c!9709 (Cons!1466 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) Nil!1467) Nil!1467))))))

(assert (= (and d!14837 (not res!37020)) b!68871))

(assert (= (and b!68871 res!37019) b!68873))

(assert (= (and b!68871 res!37021) b!68869))

(assert (= (and b!68869 c!9767) b!68870))

(assert (= (and b!68869 (not c!9767)) b!68872))

(assert (= (or b!68870 b!68872) bm!5864))

(declare-fun m!64767 () Bool)

(assert (=> b!68869 m!64767))

(assert (=> b!68869 m!64767))

(declare-fun m!64769 () Bool)

(assert (=> b!68869 m!64769))

(assert (=> b!68871 m!64767))

(assert (=> b!68871 m!64767))

(assert (=> b!68871 m!64769))

(assert (=> b!68873 m!64767))

(assert (=> b!68873 m!64767))

(declare-fun m!64771 () Bool)

(assert (=> b!68873 m!64771))

(assert (=> bm!5864 m!64767))

(declare-fun m!64773 () Bool)

(assert (=> bm!5864 m!64773))

(assert (=> bm!5788 d!14837))

(declare-fun b!68882 () Bool)

(declare-fun e!45135 () Bool)

(declare-fun e!45136 () Bool)

(assert (=> b!68882 (= e!45135 e!45136)))

(declare-fun c!9770 () Bool)

(assert (=> b!68882 (= c!9770 (validKeyInArray!0 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!68883 () Bool)

(declare-fun e!45137 () Bool)

(assert (=> b!68883 (= e!45136 e!45137)))

(declare-fun lt!30162 () (_ BitVec 64))

(assert (=> b!68883 (= lt!30162 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30163 () Unit!1919)

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!3855 (_ BitVec 64) (_ BitVec 32)) Unit!1919)

(assert (=> b!68883 (= lt!30163 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3812 newMap!16) lt!30162 #b00000000000000000000000000000000))))

(assert (=> b!68883 (arrayContainsKey!0 (_keys!3812 newMap!16) lt!30162 #b00000000000000000000000000000000)))

(declare-fun lt!30164 () Unit!1919)

(assert (=> b!68883 (= lt!30164 lt!30163)))

(declare-fun res!37027 () Bool)

(assert (=> b!68883 (= res!37027 (= (seekEntryOrOpen!0 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000) (_keys!3812 newMap!16) (mask!6113 newMap!16)) (Found!234 #b00000000000000000000000000000000)))))

(assert (=> b!68883 (=> (not res!37027) (not e!45137))))

(declare-fun b!68884 () Bool)

(declare-fun call!5870 () Bool)

(assert (=> b!68884 (= e!45136 call!5870)))

(declare-fun b!68885 () Bool)

(assert (=> b!68885 (= e!45137 call!5870)))

(declare-fun bm!5867 () Bool)

(assert (=> bm!5867 (= call!5870 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3812 newMap!16) (mask!6113 newMap!16)))))

(declare-fun d!14839 () Bool)

(declare-fun res!37026 () Bool)

(assert (=> d!14839 (=> res!37026 e!45135)))

(assert (=> d!14839 (= res!37026 (bvsge #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))))))

(assert (=> d!14839 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3812 newMap!16) (mask!6113 newMap!16)) e!45135)))

(assert (= (and d!14839 (not res!37026)) b!68882))

(assert (= (and b!68882 c!9770) b!68883))

(assert (= (and b!68882 (not c!9770)) b!68884))

(assert (= (and b!68883 res!37027) b!68885))

(assert (= (or b!68885 b!68884) bm!5867))

(declare-fun m!64775 () Bool)

(assert (=> b!68882 m!64775))

(assert (=> b!68882 m!64775))

(declare-fun m!64777 () Bool)

(assert (=> b!68882 m!64777))

(assert (=> b!68883 m!64775))

(declare-fun m!64779 () Bool)

(assert (=> b!68883 m!64779))

(declare-fun m!64781 () Bool)

(assert (=> b!68883 m!64781))

(assert (=> b!68883 m!64775))

(declare-fun m!64783 () Bool)

(assert (=> b!68883 m!64783))

(declare-fun m!64785 () Bool)

(assert (=> bm!5867 m!64785))

(assert (=> b!68829 d!14839))

(declare-fun d!14841 () Bool)

(declare-fun lt!30165 () Bool)

(assert (=> d!14841 (= lt!30165 (select (content!73 (toList!719 lt!30056)) lt!29893))))

(declare-fun e!45139 () Bool)

(assert (=> d!14841 (= lt!30165 e!45139)))

(declare-fun res!37028 () Bool)

(assert (=> d!14841 (=> (not res!37028) (not e!45139))))

(assert (=> d!14841 (= res!37028 ((_ is Cons!1465) (toList!719 lt!30056)))))

(assert (=> d!14841 (= (contains!716 (toList!719 lt!30056) lt!29893) lt!30165)))

(declare-fun b!68886 () Bool)

(declare-fun e!45138 () Bool)

(assert (=> b!68886 (= e!45139 e!45138)))

(declare-fun res!37029 () Bool)

(assert (=> b!68886 (=> res!37029 e!45138)))

(assert (=> b!68886 (= res!37029 (= (h!2050 (toList!719 lt!30056)) lt!29893))))

(declare-fun b!68887 () Bool)

(assert (=> b!68887 (= e!45138 (contains!716 (t!4972 (toList!719 lt!30056)) lt!29893))))

(assert (= (and d!14841 res!37028) b!68886))

(assert (= (and b!68886 (not res!37029)) b!68887))

(declare-fun m!64787 () Bool)

(assert (=> d!14841 m!64787))

(declare-fun m!64789 () Bool)

(assert (=> d!14841 m!64789))

(declare-fun m!64791 () Bool)

(assert (=> b!68887 m!64791))

(assert (=> b!68686 d!14841))

(declare-fun b!68888 () Bool)

(declare-fun e!45146 () Bool)

(declare-fun lt!30183 () ListLongMap!1407)

(assert (=> b!68888 (= e!45146 (= (apply!73 lt!30183 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)) (get!1124 (select (arr!1842 (_values!2151 newMap!16)) #b00000000000000000000000000000000) (dynLambda!322 (defaultEntry!2168 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!68888 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2078 (_values!2151 newMap!16))))))

(assert (=> b!68888 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))))))

(declare-fun b!68889 () Bool)

(declare-fun e!45152 () Unit!1919)

(declare-fun lt!30182 () Unit!1919)

(assert (=> b!68889 (= e!45152 lt!30182)))

(declare-fun lt!30175 () ListLongMap!1407)

(assert (=> b!68889 (= lt!30175 (getCurrentListMapNoExtraKeys!55 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30178 () (_ BitVec 64))

(assert (=> b!68889 (= lt!30178 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30166 () (_ BitVec 64))

(assert (=> b!68889 (= lt!30166 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30180 () Unit!1919)

(assert (=> b!68889 (= lt!30180 (addStillContains!49 lt!30175 lt!30178 (zeroValue!2074 newMap!16) lt!30166))))

(assert (=> b!68889 (contains!714 (+!90 lt!30175 (tuple2!2103 lt!30178 (zeroValue!2074 newMap!16))) lt!30166)))

(declare-fun lt!30176 () Unit!1919)

(assert (=> b!68889 (= lt!30176 lt!30180)))

(declare-fun lt!30168 () ListLongMap!1407)

(assert (=> b!68889 (= lt!30168 (getCurrentListMapNoExtraKeys!55 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30179 () (_ BitVec 64))

(assert (=> b!68889 (= lt!30179 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30170 () (_ BitVec 64))

(assert (=> b!68889 (= lt!30170 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30167 () Unit!1919)

(assert (=> b!68889 (= lt!30167 (addApplyDifferent!49 lt!30168 lt!30179 (minValue!2074 newMap!16) lt!30170))))

(assert (=> b!68889 (= (apply!73 (+!90 lt!30168 (tuple2!2103 lt!30179 (minValue!2074 newMap!16))) lt!30170) (apply!73 lt!30168 lt!30170))))

(declare-fun lt!30185 () Unit!1919)

(assert (=> b!68889 (= lt!30185 lt!30167)))

(declare-fun lt!30174 () ListLongMap!1407)

(assert (=> b!68889 (= lt!30174 (getCurrentListMapNoExtraKeys!55 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30169 () (_ BitVec 64))

(assert (=> b!68889 (= lt!30169 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30177 () (_ BitVec 64))

(assert (=> b!68889 (= lt!30177 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30187 () Unit!1919)

(assert (=> b!68889 (= lt!30187 (addApplyDifferent!49 lt!30174 lt!30169 (zeroValue!2074 newMap!16) lt!30177))))

(assert (=> b!68889 (= (apply!73 (+!90 lt!30174 (tuple2!2103 lt!30169 (zeroValue!2074 newMap!16))) lt!30177) (apply!73 lt!30174 lt!30177))))

(declare-fun lt!30184 () Unit!1919)

(assert (=> b!68889 (= lt!30184 lt!30187)))

(declare-fun lt!30171 () ListLongMap!1407)

(assert (=> b!68889 (= lt!30171 (getCurrentListMapNoExtraKeys!55 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30186 () (_ BitVec 64))

(assert (=> b!68889 (= lt!30186 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30181 () (_ BitVec 64))

(assert (=> b!68889 (= lt!30181 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!68889 (= lt!30182 (addApplyDifferent!49 lt!30171 lt!30186 (minValue!2074 newMap!16) lt!30181))))

(assert (=> b!68889 (= (apply!73 (+!90 lt!30171 (tuple2!2103 lt!30186 (minValue!2074 newMap!16))) lt!30181) (apply!73 lt!30171 lt!30181))))

(declare-fun b!68890 () Bool)

(declare-fun e!45145 () Bool)

(declare-fun e!45142 () Bool)

(assert (=> b!68890 (= e!45145 e!45142)))

(declare-fun res!37036 () Bool)

(declare-fun call!5872 () Bool)

(assert (=> b!68890 (= res!37036 call!5872)))

(assert (=> b!68890 (=> (not res!37036) (not e!45142))))

(declare-fun d!14843 () Bool)

(declare-fun e!45150 () Bool)

(assert (=> d!14843 e!45150))

(declare-fun res!37032 () Bool)

(assert (=> d!14843 (=> (not res!37032) (not e!45150))))

(assert (=> d!14843 (= res!37032 (or (bvsge #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))))))))

(declare-fun lt!30172 () ListLongMap!1407)

(assert (=> d!14843 (= lt!30183 lt!30172)))

(declare-fun lt!30173 () Unit!1919)

(assert (=> d!14843 (= lt!30173 e!45152)))

(declare-fun c!9776 () Bool)

(declare-fun e!45141 () Bool)

(assert (=> d!14843 (= c!9776 e!45141)))

(declare-fun res!37033 () Bool)

(assert (=> d!14843 (=> (not res!37033) (not e!45141))))

(assert (=> d!14843 (= res!37033 (bvslt #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))))))

(declare-fun e!45151 () ListLongMap!1407)

(assert (=> d!14843 (= lt!30172 e!45151)))

(declare-fun c!9772 () Bool)

(assert (=> d!14843 (= c!9772 (and (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!14843 (validMask!0 (mask!6113 newMap!16))))

(assert (=> d!14843 (= (getCurrentListMap!417 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) lt!30183)))

(declare-fun bm!5868 () Bool)

(assert (=> bm!5868 (= call!5872 (contains!714 lt!30183 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun call!5873 () ListLongMap!1407)

(declare-fun bm!5869 () Bool)

(declare-fun c!9775 () Bool)

(declare-fun call!5877 () ListLongMap!1407)

(declare-fun call!5871 () ListLongMap!1407)

(declare-fun call!5876 () ListLongMap!1407)

(assert (=> bm!5869 (= call!5876 (+!90 (ite c!9772 call!5877 (ite c!9775 call!5871 call!5873)) (ite (or c!9772 c!9775) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))))))

(declare-fun bm!5870 () Bool)

(assert (=> bm!5870 (= call!5877 (getCurrentListMapNoExtraKeys!55 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun bm!5871 () Bool)

(assert (=> bm!5871 (= call!5871 call!5877)))

(declare-fun b!68891 () Bool)

(declare-fun e!45148 () ListLongMap!1407)

(assert (=> b!68891 (= e!45148 call!5873)))

(declare-fun b!68892 () Bool)

(declare-fun e!45140 () Bool)

(declare-fun e!45143 () Bool)

(assert (=> b!68892 (= e!45140 e!45143)))

(declare-fun res!37031 () Bool)

(declare-fun call!5875 () Bool)

(assert (=> b!68892 (= res!37031 call!5875)))

(assert (=> b!68892 (=> (not res!37031) (not e!45143))))

(declare-fun b!68893 () Bool)

(declare-fun Unit!1930 () Unit!1919)

(assert (=> b!68893 (= e!45152 Unit!1930)))

(declare-fun b!68894 () Bool)

(assert (=> b!68894 (= e!45141 (validKeyInArray!0 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!68895 () Bool)

(assert (=> b!68895 (= e!45143 (= (apply!73 lt!30183 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2074 newMap!16)))))

(declare-fun b!68896 () Bool)

(assert (=> b!68896 (= e!45142 (= (apply!73 lt!30183 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2074 newMap!16)))))

(declare-fun b!68897 () Bool)

(declare-fun res!37034 () Bool)

(assert (=> b!68897 (=> (not res!37034) (not e!45150))))

(assert (=> b!68897 (= res!37034 e!45140)))

(declare-fun c!9773 () Bool)

(assert (=> b!68897 (= c!9773 (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!68898 () Bool)

(declare-fun e!45144 () ListLongMap!1407)

(assert (=> b!68898 (= e!45151 e!45144)))

(assert (=> b!68898 (= c!9775 (and (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!68899 () Bool)

(assert (=> b!68899 (= e!45150 e!45145)))

(declare-fun c!9771 () Bool)

(assert (=> b!68899 (= c!9771 (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!68900 () Bool)

(assert (=> b!68900 (= e!45151 (+!90 call!5876 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))))))

(declare-fun b!68901 () Bool)

(declare-fun c!9774 () Bool)

(assert (=> b!68901 (= c!9774 (and (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!68901 (= e!45144 e!45148)))

(declare-fun b!68902 () Bool)

(declare-fun e!45149 () Bool)

(assert (=> b!68902 (= e!45149 (validKeyInArray!0 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!68903 () Bool)

(assert (=> b!68903 (= e!45145 (not call!5872))))

(declare-fun b!68904 () Bool)

(declare-fun res!37037 () Bool)

(assert (=> b!68904 (=> (not res!37037) (not e!45150))))

(declare-fun e!45147 () Bool)

(assert (=> b!68904 (= res!37037 e!45147)))

(declare-fun res!37035 () Bool)

(assert (=> b!68904 (=> res!37035 e!45147)))

(assert (=> b!68904 (= res!37035 (not e!45149))))

(declare-fun res!37030 () Bool)

(assert (=> b!68904 (=> (not res!37030) (not e!45149))))

(assert (=> b!68904 (= res!37030 (bvslt #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))))))

(declare-fun b!68905 () Bool)

(declare-fun call!5874 () ListLongMap!1407)

(assert (=> b!68905 (= e!45148 call!5874)))

(declare-fun bm!5872 () Bool)

(assert (=> bm!5872 (= call!5874 call!5876)))

(declare-fun bm!5873 () Bool)

(assert (=> bm!5873 (= call!5873 call!5871)))

(declare-fun b!68906 () Bool)

(assert (=> b!68906 (= e!45144 call!5874)))

(declare-fun b!68907 () Bool)

(assert (=> b!68907 (= e!45147 e!45146)))

(declare-fun res!37038 () Bool)

(assert (=> b!68907 (=> (not res!37038) (not e!45146))))

(assert (=> b!68907 (= res!37038 (contains!714 lt!30183 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!68907 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))))))

(declare-fun bm!5874 () Bool)

(assert (=> bm!5874 (= call!5875 (contains!714 lt!30183 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!68908 () Bool)

(assert (=> b!68908 (= e!45140 (not call!5875))))

(assert (= (and d!14843 c!9772) b!68900))

(assert (= (and d!14843 (not c!9772)) b!68898))

(assert (= (and b!68898 c!9775) b!68906))

(assert (= (and b!68898 (not c!9775)) b!68901))

(assert (= (and b!68901 c!9774) b!68905))

(assert (= (and b!68901 (not c!9774)) b!68891))

(assert (= (or b!68905 b!68891) bm!5873))

(assert (= (or b!68906 bm!5873) bm!5871))

(assert (= (or b!68906 b!68905) bm!5872))

(assert (= (or b!68900 bm!5871) bm!5870))

(assert (= (or b!68900 bm!5872) bm!5869))

(assert (= (and d!14843 res!37033) b!68894))

(assert (= (and d!14843 c!9776) b!68889))

(assert (= (and d!14843 (not c!9776)) b!68893))

(assert (= (and d!14843 res!37032) b!68904))

(assert (= (and b!68904 res!37030) b!68902))

(assert (= (and b!68904 (not res!37035)) b!68907))

(assert (= (and b!68907 res!37038) b!68888))

(assert (= (and b!68904 res!37037) b!68897))

(assert (= (and b!68897 c!9773) b!68892))

(assert (= (and b!68897 (not c!9773)) b!68908))

(assert (= (and b!68892 res!37031) b!68895))

(assert (= (or b!68892 b!68908) bm!5874))

(assert (= (and b!68897 res!37034) b!68899))

(assert (= (and b!68899 c!9771) b!68890))

(assert (= (and b!68899 (not c!9771)) b!68903))

(assert (= (and b!68890 res!37036) b!68896))

(assert (= (or b!68890 b!68903) bm!5868))

(declare-fun b_lambda!3091 () Bool)

(assert (=> (not b_lambda!3091) (not b!68888)))

(declare-fun tb!1485 () Bool)

(declare-fun t!4980 () Bool)

(assert (=> (and b!68478 (= (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) (defaultEntry!2168 newMap!16)) t!4980) tb!1485))

(declare-fun result!2619 () Bool)

(assert (=> tb!1485 (= result!2619 tp_is_empty!2457)))

(assert (=> b!68888 t!4980))

(declare-fun b_and!4247 () Bool)

(assert (= b_and!4243 (and (=> t!4980 result!2619) b_and!4247)))

(declare-fun t!4982 () Bool)

(declare-fun tb!1487 () Bool)

(assert (=> (and b!68465 (= (defaultEntry!2168 newMap!16) (defaultEntry!2168 newMap!16)) t!4982) tb!1487))

(declare-fun result!2621 () Bool)

(assert (= result!2621 result!2619))

(assert (=> b!68888 t!4982))

(declare-fun b_and!4249 () Bool)

(assert (= b_and!4245 (and (=> t!4982 result!2621) b_and!4249)))

(declare-fun m!64793 () Bool)

(assert (=> bm!5874 m!64793))

(declare-fun m!64795 () Bool)

(assert (=> bm!5869 m!64795))

(declare-fun m!64797 () Bool)

(assert (=> b!68900 m!64797))

(declare-fun m!64799 () Bool)

(assert (=> bm!5868 m!64799))

(assert (=> b!68894 m!64775))

(assert (=> b!68894 m!64775))

(assert (=> b!68894 m!64777))

(assert (=> b!68907 m!64775))

(assert (=> b!68907 m!64775))

(declare-fun m!64801 () Bool)

(assert (=> b!68907 m!64801))

(declare-fun m!64803 () Bool)

(assert (=> b!68895 m!64803))

(declare-fun m!64805 () Bool)

(assert (=> b!68896 m!64805))

(declare-fun m!64807 () Bool)

(assert (=> b!68888 m!64807))

(declare-fun m!64809 () Bool)

(assert (=> b!68888 m!64809))

(assert (=> b!68888 m!64807))

(declare-fun m!64811 () Bool)

(assert (=> b!68888 m!64811))

(assert (=> b!68888 m!64809))

(assert (=> b!68888 m!64775))

(declare-fun m!64813 () Bool)

(assert (=> b!68888 m!64813))

(assert (=> b!68888 m!64775))

(assert (=> d!14843 m!64759))

(declare-fun m!64815 () Bool)

(assert (=> bm!5870 m!64815))

(assert (=> b!68902 m!64775))

(assert (=> b!68902 m!64775))

(assert (=> b!68902 m!64777))

(declare-fun m!64817 () Bool)

(assert (=> b!68889 m!64817))

(declare-fun m!64819 () Bool)

(assert (=> b!68889 m!64819))

(declare-fun m!64821 () Bool)

(assert (=> b!68889 m!64821))

(declare-fun m!64823 () Bool)

(assert (=> b!68889 m!64823))

(declare-fun m!64825 () Bool)

(assert (=> b!68889 m!64825))

(declare-fun m!64827 () Bool)

(assert (=> b!68889 m!64827))

(declare-fun m!64829 () Bool)

(assert (=> b!68889 m!64829))

(declare-fun m!64831 () Bool)

(assert (=> b!68889 m!64831))

(assert (=> b!68889 m!64825))

(declare-fun m!64833 () Bool)

(assert (=> b!68889 m!64833))

(assert (=> b!68889 m!64775))

(declare-fun m!64835 () Bool)

(assert (=> b!68889 m!64835))

(declare-fun m!64837 () Bool)

(assert (=> b!68889 m!64837))

(declare-fun m!64839 () Bool)

(assert (=> b!68889 m!64839))

(assert (=> b!68889 m!64827))

(declare-fun m!64841 () Bool)

(assert (=> b!68889 m!64841))

(assert (=> b!68889 m!64835))

(assert (=> b!68889 m!64819))

(declare-fun m!64843 () Bool)

(assert (=> b!68889 m!64843))

(assert (=> b!68889 m!64815))

(declare-fun m!64845 () Bool)

(assert (=> b!68889 m!64845))

(assert (=> b!68813 d!14843))

(declare-fun d!14845 () Bool)

(declare-fun res!37039 () Bool)

(declare-fun e!45153 () Bool)

(assert (=> d!14845 (=> res!37039 e!45153)))

(assert (=> d!14845 (= res!37039 (= (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(assert (=> d!14845 (= (arrayContainsKey!0 (_keys!3812 (v!2494 (underlying!253 thiss!992))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) e!45153)))

(declare-fun b!68909 () Bool)

(declare-fun e!45154 () Bool)

(assert (=> b!68909 (= e!45153 e!45154)))

(declare-fun res!37040 () Bool)

(assert (=> b!68909 (=> (not res!37040) (not e!45154))))

(assert (=> b!68909 (= res!37040 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2077 (_keys!3812 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun b!68910 () Bool)

(assert (=> b!68910 (= e!45154 (arrayContainsKey!0 (_keys!3812 (v!2494 (underlying!253 thiss!992))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!14845 (not res!37039)) b!68909))

(assert (= (and b!68909 res!37040) b!68910))

(declare-fun m!64847 () Bool)

(assert (=> d!14845 m!64847))

(assert (=> b!68910 m!64407))

(declare-fun m!64849 () Bool)

(assert (=> b!68910 m!64849))

(assert (=> b!68617 d!14845))

(declare-fun d!14847 () Bool)

(declare-fun e!45157 () Bool)

(assert (=> d!14847 e!45157))

(declare-fun res!37043 () Bool)

(assert (=> d!14847 (=> (not res!37043) (not e!45157))))

(assert (=> d!14847 (= res!37043 (and (bvsge (index!3066 lt!30149) #b00000000000000000000000000000000) (bvslt (index!3066 lt!30149) (size!2077 (_keys!3812 newMap!16)))))))

(declare-fun lt!30190 () Unit!1919)

(declare-fun choose!382 (array!3855 array!3857 (_ BitVec 32) (_ BitVec 32) V!2923 V!2923 (_ BitVec 32) Int) Unit!1919)

(assert (=> d!14847 (= lt!30190 (choose!382 (_keys!3812 newMap!16) lt!30125 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (index!3066 lt!30149) (defaultEntry!2168 newMap!16)))))

(assert (=> d!14847 (validMask!0 (mask!6113 newMap!16))))

(assert (=> d!14847 (= (lemmaValidKeyInArrayIsInListMap!83 (_keys!3812 newMap!16) lt!30125 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (index!3066 lt!30149) (defaultEntry!2168 newMap!16)) lt!30190)))

(declare-fun b!68913 () Bool)

(assert (=> b!68913 (= e!45157 (contains!714 (getCurrentListMap!417 (_keys!3812 newMap!16) lt!30125 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) (select (arr!1841 (_keys!3812 newMap!16)) (index!3066 lt!30149))))))

(assert (= (and d!14847 res!37043) b!68913))

(declare-fun m!64851 () Bool)

(assert (=> d!14847 m!64851))

(assert (=> d!14847 m!64759))

(declare-fun m!64853 () Bool)

(assert (=> b!68913 m!64853))

(assert (=> b!68913 m!64681))

(assert (=> b!68913 m!64853))

(assert (=> b!68913 m!64681))

(declare-fun m!64855 () Bool)

(assert (=> b!68913 m!64855))

(assert (=> b!68797 d!14847))

(declare-fun d!14849 () Bool)

(declare-fun e!45160 () Bool)

(assert (=> d!14849 e!45160))

(declare-fun res!37046 () Bool)

(assert (=> d!14849 (=> (not res!37046) (not e!45160))))

(assert (=> d!14849 (= res!37046 (and (bvsge (index!3066 lt!30149) #b00000000000000000000000000000000) (bvslt (index!3066 lt!30149) (size!2078 (_values!2151 newMap!16)))))))

(declare-fun lt!30193 () Unit!1919)

(declare-fun choose!383 (array!3855 array!3857 (_ BitVec 32) (_ BitVec 32) V!2923 V!2923 (_ BitVec 32) (_ BitVec 64) V!2923 Int) Unit!1919)

(assert (=> d!14849 (= lt!30193 (choose!383 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (index!3066 lt!30149) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897 (defaultEntry!2168 newMap!16)))))

(assert (=> d!14849 (validMask!0 (mask!6113 newMap!16))))

(assert (=> d!14849 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!22 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (index!3066 lt!30149) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897 (defaultEntry!2168 newMap!16)) lt!30193)))

(declare-fun b!68916 () Bool)

(assert (=> b!68916 (= e!45160 (= (+!90 (getCurrentListMap!417 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)) (getCurrentListMap!417 (_keys!3812 newMap!16) (array!3858 (store (arr!1842 (_values!2151 newMap!16)) (index!3066 lt!30149) (ValueCellFull!885 lt!29897)) (size!2078 (_values!2151 newMap!16))) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16))))))

(assert (= (and d!14849 res!37046) b!68916))

(assert (=> d!14849 m!64407))

(declare-fun m!64857 () Bool)

(assert (=> d!14849 m!64857))

(assert (=> d!14849 m!64759))

(assert (=> b!68916 m!64511))

(assert (=> b!68916 m!64511))

(declare-fun m!64859 () Bool)

(assert (=> b!68916 m!64859))

(assert (=> b!68916 m!64703))

(declare-fun m!64861 () Bool)

(assert (=> b!68916 m!64861))

(assert (=> b!68797 d!14849))

(declare-fun d!14851 () Bool)

(declare-fun e!45161 () Bool)

(assert (=> d!14851 e!45161))

(declare-fun res!37047 () Bool)

(assert (=> d!14851 (=> res!37047 e!45161)))

(declare-fun lt!30195 () Bool)

(assert (=> d!14851 (= res!37047 (not lt!30195))))

(declare-fun lt!30194 () Bool)

(assert (=> d!14851 (= lt!30195 lt!30194)))

(declare-fun lt!30196 () Unit!1919)

(declare-fun e!45162 () Unit!1919)

(assert (=> d!14851 (= lt!30196 e!45162)))

(declare-fun c!9777 () Bool)

(assert (=> d!14851 (= c!9777 lt!30194)))

(assert (=> d!14851 (= lt!30194 (containsKey!135 (toList!719 (getCurrentListMap!417 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(assert (=> d!14851 (= (contains!714 (getCurrentListMap!417 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) lt!30195)))

(declare-fun b!68917 () Bool)

(declare-fun lt!30197 () Unit!1919)

(assert (=> b!68917 (= e!45162 lt!30197)))

(assert (=> b!68917 (= lt!30197 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 (getCurrentListMap!417 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(assert (=> b!68917 (isDefined!84 (getValueByKey!131 (toList!719 (getCurrentListMap!417 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(declare-fun b!68918 () Bool)

(declare-fun Unit!1931 () Unit!1919)

(assert (=> b!68918 (= e!45162 Unit!1931)))

(declare-fun b!68919 () Bool)

(assert (=> b!68919 (= e!45161 (isDefined!84 (getValueByKey!131 (toList!719 (getCurrentListMap!417 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355))))))

(assert (= (and d!14851 c!9777) b!68917))

(assert (= (and d!14851 (not c!9777)) b!68918))

(assert (= (and d!14851 (not res!37047)) b!68919))

(assert (=> d!14851 m!64407))

(declare-fun m!64863 () Bool)

(assert (=> d!14851 m!64863))

(assert (=> b!68917 m!64407))

(declare-fun m!64865 () Bool)

(assert (=> b!68917 m!64865))

(assert (=> b!68917 m!64407))

(declare-fun m!64867 () Bool)

(assert (=> b!68917 m!64867))

(assert (=> b!68917 m!64867))

(declare-fun m!64869 () Bool)

(assert (=> b!68917 m!64869))

(assert (=> b!68919 m!64407))

(assert (=> b!68919 m!64867))

(assert (=> b!68919 m!64867))

(assert (=> b!68919 m!64869))

(assert (=> b!68797 d!14851))

(assert (=> b!68797 d!14843))

(declare-fun d!14853 () Bool)

(declare-fun e!45165 () Bool)

(assert (=> d!14853 e!45165))

(declare-fun c!9780 () Bool)

(assert (=> d!14853 (= c!9780 (and (not (= (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!14853 true))

(declare-fun _$29!84 () Unit!1919)

(assert (=> d!14853 (= (choose!380 (_keys!3812 (v!2494 (underlying!253 thiss!992))) (_values!2151 (v!2494 (underlying!253 thiss!992))) (mask!6113 (v!2494 (underlying!253 thiss!992))) (extraKeys!2035 (v!2494 (underlying!253 thiss!992))) (zeroValue!2074 (v!2494 (underlying!253 thiss!992))) (minValue!2074 (v!2494 (underlying!253 thiss!992))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2168 (v!2494 (underlying!253 thiss!992)))) _$29!84)))

(declare-fun b!68924 () Bool)

(assert (=> b!68924 (= e!45165 (arrayContainsKey!0 (_keys!3812 (v!2494 (underlying!253 thiss!992))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!68925 () Bool)

(assert (=> b!68925 (= e!45165 (ite (= (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2035 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2035 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!14853 c!9780) b!68924))

(assert (= (and d!14853 (not c!9780)) b!68925))

(assert (=> b!68924 m!64407))

(assert (=> b!68924 m!64433))

(assert (=> d!14789 d!14853))

(assert (=> d!14789 d!14813))

(declare-fun b!68938 () Bool)

(declare-fun e!45174 () SeekEntryResult!234)

(assert (=> b!68938 (= e!45174 Undefined!234)))

(declare-fun e!45172 () SeekEntryResult!234)

(declare-fun lt!30204 () SeekEntryResult!234)

(declare-fun b!68939 () Bool)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!3855 (_ BitVec 32)) SeekEntryResult!234)

(assert (=> b!68939 (= e!45172 (seekKeyOrZeroReturnVacant!0 (x!10848 lt!30204) (index!3067 lt!30204) (index!3067 lt!30204) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (_keys!3812 newMap!16) (mask!6113 newMap!16)))))

(declare-fun b!68940 () Bool)

(declare-fun c!9788 () Bool)

(declare-fun lt!30205 () (_ BitVec 64))

(assert (=> b!68940 (= c!9788 (= lt!30205 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!45173 () SeekEntryResult!234)

(assert (=> b!68940 (= e!45173 e!45172)))

(declare-fun lt!30206 () SeekEntryResult!234)

(declare-fun d!14855 () Bool)

(assert (=> d!14855 (and (or ((_ is Undefined!234) lt!30206) (not ((_ is Found!234) lt!30206)) (and (bvsge (index!3066 lt!30206) #b00000000000000000000000000000000) (bvslt (index!3066 lt!30206) (size!2077 (_keys!3812 newMap!16))))) (or ((_ is Undefined!234) lt!30206) ((_ is Found!234) lt!30206) (not ((_ is MissingZero!234) lt!30206)) (and (bvsge (index!3065 lt!30206) #b00000000000000000000000000000000) (bvslt (index!3065 lt!30206) (size!2077 (_keys!3812 newMap!16))))) (or ((_ is Undefined!234) lt!30206) ((_ is Found!234) lt!30206) ((_ is MissingZero!234) lt!30206) (not ((_ is MissingVacant!234) lt!30206)) (and (bvsge (index!3068 lt!30206) #b00000000000000000000000000000000) (bvslt (index!3068 lt!30206) (size!2077 (_keys!3812 newMap!16))))) (or ((_ is Undefined!234) lt!30206) (ite ((_ is Found!234) lt!30206) (= (select (arr!1841 (_keys!3812 newMap!16)) (index!3066 lt!30206)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) (ite ((_ is MissingZero!234) lt!30206) (= (select (arr!1841 (_keys!3812 newMap!16)) (index!3065 lt!30206)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!234) lt!30206) (= (select (arr!1841 (_keys!3812 newMap!16)) (index!3068 lt!30206)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!14855 (= lt!30206 e!45174)))

(declare-fun c!9787 () Bool)

(assert (=> d!14855 (= c!9787 (and ((_ is Intermediate!234) lt!30204) (undefined!1046 lt!30204)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!3855 (_ BitVec 32)) SeekEntryResult!234)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!14855 (= lt!30204 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (mask!6113 newMap!16)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (_keys!3812 newMap!16) (mask!6113 newMap!16)))))

(assert (=> d!14855 (validMask!0 (mask!6113 newMap!16))))

(assert (=> d!14855 (= (seekEntryOrOpen!0 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (_keys!3812 newMap!16) (mask!6113 newMap!16)) lt!30206)))

(declare-fun b!68941 () Bool)

(assert (=> b!68941 (= e!45172 (MissingZero!234 (index!3067 lt!30204)))))

(declare-fun b!68942 () Bool)

(assert (=> b!68942 (= e!45174 e!45173)))

(assert (=> b!68942 (= lt!30205 (select (arr!1841 (_keys!3812 newMap!16)) (index!3067 lt!30204)))))

(declare-fun c!9789 () Bool)

(assert (=> b!68942 (= c!9789 (= lt!30205 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(declare-fun b!68943 () Bool)

(assert (=> b!68943 (= e!45173 (Found!234 (index!3067 lt!30204)))))

(assert (= (and d!14855 c!9787) b!68938))

(assert (= (and d!14855 (not c!9787)) b!68942))

(assert (= (and b!68942 c!9789) b!68943))

(assert (= (and b!68942 (not c!9789)) b!68940))

(assert (= (and b!68940 c!9788) b!68941))

(assert (= (and b!68940 (not c!9788)) b!68939))

(assert (=> b!68939 m!64407))

(declare-fun m!64871 () Bool)

(assert (=> b!68939 m!64871))

(declare-fun m!64873 () Bool)

(assert (=> d!14855 m!64873))

(declare-fun m!64875 () Bool)

(assert (=> d!14855 m!64875))

(declare-fun m!64877 () Bool)

(assert (=> d!14855 m!64877))

(assert (=> d!14855 m!64407))

(declare-fun m!64879 () Bool)

(assert (=> d!14855 m!64879))

(declare-fun m!64881 () Bool)

(assert (=> d!14855 m!64881))

(assert (=> d!14855 m!64759))

(assert (=> d!14855 m!64407))

(assert (=> d!14855 m!64877))

(declare-fun m!64883 () Bool)

(assert (=> b!68942 m!64883))

(assert (=> bm!5858 d!14855))

(declare-fun d!14857 () Bool)

(assert (=> d!14857 (= (inRange!0 (ite c!9759 (ite c!9753 (index!3066 lt!30133) (ite c!9752 (index!3065 lt!30139) (index!3068 lt!30139))) (ite c!9755 (index!3066 lt!30146) (ite c!9760 (index!3065 lt!30150) (index!3068 lt!30150)))) (mask!6113 newMap!16)) (and (bvsge (ite c!9759 (ite c!9753 (index!3066 lt!30133) (ite c!9752 (index!3065 lt!30139) (index!3068 lt!30139))) (ite c!9755 (index!3066 lt!30146) (ite c!9760 (index!3065 lt!30150) (index!3068 lt!30150)))) #b00000000000000000000000000000000) (bvslt (ite c!9759 (ite c!9753 (index!3066 lt!30133) (ite c!9752 (index!3065 lt!30139) (index!3068 lt!30139))) (ite c!9755 (index!3066 lt!30146) (ite c!9760 (index!3065 lt!30150) (index!3068 lt!30150)))) (bvadd (mask!6113 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!5849 d!14857))

(declare-fun d!14859 () Bool)

(assert (=> d!14859 (= (apply!73 lt!29996 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1127 (getValueByKey!131 (toList!719 lt!29996) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!2961 () Bool)

(assert (= bs!2961 d!14859))

(assert (=> bs!2961 m!64521))

(declare-fun m!64885 () Bool)

(assert (=> bs!2961 m!64885))

(assert (=> bs!2961 m!64885))

(declare-fun m!64887 () Bool)

(assert (=> bs!2961 m!64887))

(assert (=> b!68591 d!14859))

(declare-fun d!14861 () Bool)

(declare-fun c!9790 () Bool)

(assert (=> d!14861 (= c!9790 ((_ is ValueCellFull!885) (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!45175 () V!2923)

(assert (=> d!14861 (= (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!45175)))

(declare-fun b!68944 () Bool)

(assert (=> b!68944 (= e!45175 (get!1125 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!68945 () Bool)

(assert (=> b!68945 (= e!45175 (get!1126 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14861 c!9790) b!68944))

(assert (= (and d!14861 (not c!9790)) b!68945))

(assert (=> b!68944 m!64531))

(assert (=> b!68944 m!64411))

(declare-fun m!64889 () Bool)

(assert (=> b!68944 m!64889))

(assert (=> b!68945 m!64531))

(assert (=> b!68945 m!64411))

(declare-fun m!64891 () Bool)

(assert (=> b!68945 m!64891))

(assert (=> b!68591 d!14861))

(declare-fun d!14863 () Bool)

(declare-fun e!45178 () Bool)

(assert (=> d!14863 e!45178))

(declare-fun res!37052 () Bool)

(assert (=> d!14863 (=> (not res!37052) (not e!45178))))

(declare-fun lt!30212 () SeekEntryResult!234)

(assert (=> d!14863 (= res!37052 ((_ is Found!234) lt!30212))))

(assert (=> d!14863 (= lt!30212 (seekEntryOrOpen!0 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (_keys!3812 newMap!16) (mask!6113 newMap!16)))))

(declare-fun lt!30211 () Unit!1919)

(declare-fun choose!384 (array!3855 array!3857 (_ BitVec 32) (_ BitVec 32) V!2923 V!2923 (_ BitVec 64) Int) Unit!1919)

(assert (=> d!14863 (= lt!30211 (choose!384 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (defaultEntry!2168 newMap!16)))))

(assert (=> d!14863 (validMask!0 (mask!6113 newMap!16))))

(assert (=> d!14863 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!22 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (defaultEntry!2168 newMap!16)) lt!30211)))

(declare-fun b!68950 () Bool)

(declare-fun res!37053 () Bool)

(assert (=> b!68950 (=> (not res!37053) (not e!45178))))

(assert (=> b!68950 (= res!37053 (inRange!0 (index!3066 lt!30212) (mask!6113 newMap!16)))))

(declare-fun b!68951 () Bool)

(assert (=> b!68951 (= e!45178 (= (select (arr!1841 (_keys!3812 newMap!16)) (index!3066 lt!30212)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(assert (=> b!68951 (and (bvsge (index!3066 lt!30212) #b00000000000000000000000000000000) (bvslt (index!3066 lt!30212) (size!2077 (_keys!3812 newMap!16))))))

(assert (= (and d!14863 res!37052) b!68950))

(assert (= (and b!68950 res!37053) b!68951))

(assert (=> d!14863 m!64407))

(assert (=> d!14863 m!64695))

(assert (=> d!14863 m!64407))

(declare-fun m!64893 () Bool)

(assert (=> d!14863 m!64893))

(assert (=> d!14863 m!64759))

(declare-fun m!64895 () Bool)

(assert (=> b!68950 m!64895))

(declare-fun m!64897 () Bool)

(assert (=> b!68951 m!64897))

(assert (=> bm!5857 d!14863))

(declare-fun lt!30218 () ListLongMap!1407)

(declare-fun b!68952 () Bool)

(declare-fun e!45181 () Bool)

(assert (=> b!68952 (= e!45181 (= lt!30218 (getCurrentListMapNoExtraKeys!55 (_keys!3812 (v!2494 (underlying!253 thiss!992))) (_values!2151 (v!2494 (underlying!253 thiss!992))) (mask!6113 (v!2494 (underlying!253 thiss!992))) (extraKeys!2035 (v!2494 (underlying!253 thiss!992))) (zeroValue!2074 (v!2494 (underlying!253 thiss!992))) (minValue!2074 (v!2494 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun b!68953 () Bool)

(declare-fun e!45184 () Bool)

(declare-fun e!45180 () Bool)

(assert (=> b!68953 (= e!45184 e!45180)))

(declare-fun c!9792 () Bool)

(declare-fun e!45183 () Bool)

(assert (=> b!68953 (= c!9792 e!45183)))

(declare-fun res!37057 () Bool)

(assert (=> b!68953 (=> (not res!37057) (not e!45183))))

(assert (=> b!68953 (= res!37057 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2077 (_keys!3812 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun b!68954 () Bool)

(assert (=> b!68954 (= e!45180 e!45181)))

(declare-fun c!9794 () Bool)

(assert (=> b!68954 (= c!9794 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2077 (_keys!3812 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun b!68955 () Bool)

(declare-fun e!45185 () ListLongMap!1407)

(declare-fun call!5878 () ListLongMap!1407)

(assert (=> b!68955 (= e!45185 call!5878)))

(declare-fun b!68956 () Bool)

(declare-fun e!45182 () ListLongMap!1407)

(assert (=> b!68956 (= e!45182 (ListLongMap!1408 Nil!1466))))

(declare-fun b!68958 () Bool)

(declare-fun lt!30216 () Unit!1919)

(declare-fun lt!30215 () Unit!1919)

(assert (=> b!68958 (= lt!30216 lt!30215)))

(declare-fun lt!30213 () V!2923)

(declare-fun lt!30217 () ListLongMap!1407)

(declare-fun lt!30214 () (_ BitVec 64))

(declare-fun lt!30219 () (_ BitVec 64))

(assert (=> b!68958 (not (contains!714 (+!90 lt!30217 (tuple2!2103 lt!30214 lt!30213)) lt!30219))))

(assert (=> b!68958 (= lt!30215 (addStillNotContains!22 lt!30217 lt!30214 lt!30213 lt!30219))))

(assert (=> b!68958 (= lt!30219 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!68958 (= lt!30213 (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!68958 (= lt!30214 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (=> b!68958 (= lt!30217 call!5878)))

(assert (=> b!68958 (= e!45185 (+!90 call!5878 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun bm!5875 () Bool)

(assert (=> bm!5875 (= call!5878 (getCurrentListMapNoExtraKeys!55 (_keys!3812 (v!2494 (underlying!253 thiss!992))) (_values!2151 (v!2494 (underlying!253 thiss!992))) (mask!6113 (v!2494 (underlying!253 thiss!992))) (extraKeys!2035 (v!2494 (underlying!253 thiss!992))) (zeroValue!2074 (v!2494 (underlying!253 thiss!992))) (minValue!2074 (v!2494 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2168 (v!2494 (underlying!253 thiss!992)))))))

(declare-fun b!68959 () Bool)

(assert (=> b!68959 (= e!45183 (validKeyInArray!0 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!68959 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!68960 () Bool)

(declare-fun e!45179 () Bool)

(assert (=> b!68960 (= e!45180 e!45179)))

(assert (=> b!68960 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2077 (_keys!3812 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun res!37054 () Bool)

(assert (=> b!68960 (= res!37054 (contains!714 lt!30218 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!68960 (=> (not res!37054) (not e!45179))))

(declare-fun b!68961 () Bool)

(assert (=> b!68961 (= e!45182 e!45185)))

(declare-fun c!9791 () Bool)

(assert (=> b!68961 (= c!9791 (validKeyInArray!0 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!68962 () Bool)

(assert (=> b!68962 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2077 (_keys!3812 (v!2494 (underlying!253 thiss!992))))))))

(assert (=> b!68962 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2078 (_values!2151 (v!2494 (underlying!253 thiss!992))))))))

(assert (=> b!68962 (= e!45179 (= (apply!73 lt!30218 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!68963 () Bool)

(declare-fun res!37056 () Bool)

(assert (=> b!68963 (=> (not res!37056) (not e!45184))))

(assert (=> b!68963 (= res!37056 (not (contains!714 lt!30218 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun d!14865 () Bool)

(assert (=> d!14865 e!45184))

(declare-fun res!37055 () Bool)

(assert (=> d!14865 (=> (not res!37055) (not e!45184))))

(assert (=> d!14865 (= res!37055 (not (contains!714 lt!30218 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!14865 (= lt!30218 e!45182)))

(declare-fun c!9793 () Bool)

(assert (=> d!14865 (= c!9793 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2077 (_keys!3812 (v!2494 (underlying!253 thiss!992))))))))

(assert (=> d!14865 (validMask!0 (mask!6113 (v!2494 (underlying!253 thiss!992))))))

(assert (=> d!14865 (= (getCurrentListMapNoExtraKeys!55 (_keys!3812 (v!2494 (underlying!253 thiss!992))) (_values!2151 (v!2494 (underlying!253 thiss!992))) (mask!6113 (v!2494 (underlying!253 thiss!992))) (extraKeys!2035 (v!2494 (underlying!253 thiss!992))) (zeroValue!2074 (v!2494 (underlying!253 thiss!992))) (minValue!2074 (v!2494 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2168 (v!2494 (underlying!253 thiss!992)))) lt!30218)))

(declare-fun b!68957 () Bool)

(assert (=> b!68957 (= e!45181 (isEmpty!310 lt!30218))))

(assert (= (and d!14865 c!9793) b!68956))

(assert (= (and d!14865 (not c!9793)) b!68961))

(assert (= (and b!68961 c!9791) b!68958))

(assert (= (and b!68961 (not c!9791)) b!68955))

(assert (= (or b!68958 b!68955) bm!5875))

(assert (= (and d!14865 res!37055) b!68963))

(assert (= (and b!68963 res!37056) b!68953))

(assert (= (and b!68953 res!37057) b!68959))

(assert (= (and b!68953 c!9792) b!68960))

(assert (= (and b!68953 (not c!9792)) b!68954))

(assert (= (and b!68960 res!37054) b!68962))

(assert (= (and b!68954 c!9794) b!68952))

(assert (= (and b!68954 (not c!9794)) b!68957))

(declare-fun b_lambda!3093 () Bool)

(assert (=> (not b_lambda!3093) (not b!68958)))

(assert (=> b!68958 t!4969))

(declare-fun b_and!4251 () Bool)

(assert (= b_and!4247 (and (=> t!4969 result!2605) b_and!4251)))

(assert (=> b!68958 t!4971))

(declare-fun b_and!4253 () Bool)

(assert (= b_and!4249 (and (=> t!4971 result!2609) b_and!4253)))

(declare-fun b_lambda!3095 () Bool)

(assert (=> (not b_lambda!3095) (not b!68962)))

(assert (=> b!68962 t!4969))

(declare-fun b_and!4255 () Bool)

(assert (= b_and!4251 (and (=> t!4969 result!2605) b_and!4255)))

(assert (=> b!68962 t!4971))

(declare-fun b_and!4257 () Bool)

(assert (= b_and!4253 (and (=> t!4971 result!2609) b_and!4257)))

(assert (=> b!68960 m!64847))

(assert (=> b!68960 m!64847))

(declare-fun m!64899 () Bool)

(assert (=> b!68960 m!64899))

(declare-fun m!64901 () Bool)

(assert (=> b!68957 m!64901))

(assert (=> b!68962 m!64411))

(declare-fun m!64903 () Bool)

(assert (=> b!68962 m!64903))

(assert (=> b!68962 m!64847))

(assert (=> b!68962 m!64903))

(assert (=> b!68962 m!64411))

(declare-fun m!64905 () Bool)

(assert (=> b!68962 m!64905))

(assert (=> b!68962 m!64847))

(declare-fun m!64907 () Bool)

(assert (=> b!68962 m!64907))

(declare-fun m!64909 () Bool)

(assert (=> d!14865 m!64909))

(assert (=> d!14865 m!64441))

(assert (=> b!68958 m!64411))

(declare-fun m!64911 () Bool)

(assert (=> b!68958 m!64911))

(declare-fun m!64913 () Bool)

(assert (=> b!68958 m!64913))

(declare-fun m!64915 () Bool)

(assert (=> b!68958 m!64915))

(assert (=> b!68958 m!64911))

(declare-fun m!64917 () Bool)

(assert (=> b!68958 m!64917))

(assert (=> b!68958 m!64903))

(assert (=> b!68958 m!64847))

(assert (=> b!68958 m!64903))

(assert (=> b!68958 m!64411))

(assert (=> b!68958 m!64905))

(declare-fun m!64919 () Bool)

(assert (=> bm!5875 m!64919))

(assert (=> b!68952 m!64919))

(assert (=> b!68959 m!64847))

(assert (=> b!68959 m!64847))

(declare-fun m!64921 () Bool)

(assert (=> b!68959 m!64921))

(declare-fun m!64923 () Bool)

(assert (=> b!68963 m!64923))

(assert (=> b!68961 m!64847))

(assert (=> b!68961 m!64847))

(assert (=> b!68961 m!64921))

(assert (=> bm!5791 d!14865))

(assert (=> d!14785 d!14791))

(declare-fun d!14867 () Bool)

(assert (=> d!14867 (arrayNoDuplicates!0 (_keys!3812 (v!2494 (underlying!253 thiss!992))) from!355 Nil!1467)))

(assert (=> d!14867 true))

(declare-fun _$71!90 () Unit!1919)

(assert (=> d!14867 (= (choose!39 (_keys!3812 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000000000000 from!355) _$71!90)))

(declare-fun bs!2962 () Bool)

(assert (= bs!2962 d!14867))

(assert (=> bs!2962 m!64429))

(assert (=> d!14785 d!14867))

(declare-fun d!14869 () Bool)

(declare-fun e!45186 () Bool)

(assert (=> d!14869 e!45186))

(declare-fun res!37059 () Bool)

(assert (=> d!14869 (=> (not res!37059) (not e!45186))))

(declare-fun lt!30222 () ListLongMap!1407)

(assert (=> d!14869 (= res!37059 (contains!714 lt!30222 (_1!1062 (ite (or c!9699 c!9702) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(declare-fun lt!30223 () List!1469)

(assert (=> d!14869 (= lt!30222 (ListLongMap!1408 lt!30223))))

(declare-fun lt!30220 () Unit!1919)

(declare-fun lt!30221 () Unit!1919)

(assert (=> d!14869 (= lt!30220 lt!30221)))

(assert (=> d!14869 (= (getValueByKey!131 lt!30223 (_1!1062 (ite (or c!9699 c!9702) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))) (Some!136 (_2!1062 (ite (or c!9699 c!9702) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> d!14869 (= lt!30221 (lemmaContainsTupThenGetReturnValue!48 lt!30223 (_1!1062 (ite (or c!9699 c!9702) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))) (_2!1062 (ite (or c!9699 c!9702) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> d!14869 (= lt!30223 (insertStrictlySorted!51 (toList!719 (ite c!9699 call!5788 (ite c!9702 call!5782 call!5784))) (_1!1062 (ite (or c!9699 c!9702) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))) (_2!1062 (ite (or c!9699 c!9702) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> d!14869 (= (+!90 (ite c!9699 call!5788 (ite c!9702 call!5782 call!5784)) (ite (or c!9699 c!9702) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))) lt!30222)))

(declare-fun b!68964 () Bool)

(declare-fun res!37058 () Bool)

(assert (=> b!68964 (=> (not res!37058) (not e!45186))))

(assert (=> b!68964 (= res!37058 (= (getValueByKey!131 (toList!719 lt!30222) (_1!1062 (ite (or c!9699 c!9702) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))) (Some!136 (_2!1062 (ite (or c!9699 c!9702) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))))

(declare-fun b!68965 () Bool)

(assert (=> b!68965 (= e!45186 (contains!716 (toList!719 lt!30222) (ite (or c!9699 c!9702) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(assert (= (and d!14869 res!37059) b!68964))

(assert (= (and b!68964 res!37058) b!68965))

(declare-fun m!64925 () Bool)

(assert (=> d!14869 m!64925))

(declare-fun m!64927 () Bool)

(assert (=> d!14869 m!64927))

(declare-fun m!64929 () Bool)

(assert (=> d!14869 m!64929))

(declare-fun m!64931 () Bool)

(assert (=> d!14869 m!64931))

(declare-fun m!64933 () Bool)

(assert (=> b!68964 m!64933))

(declare-fun m!64935 () Bool)

(assert (=> b!68965 m!64935))

(assert (=> bm!5780 d!14869))

(declare-fun d!14871 () Bool)

(declare-fun e!45187 () Bool)

(assert (=> d!14871 e!45187))

(declare-fun res!37060 () Bool)

(assert (=> d!14871 (=> res!37060 e!45187)))

(declare-fun lt!30225 () Bool)

(assert (=> d!14871 (= res!37060 (not lt!30225))))

(declare-fun lt!30224 () Bool)

(assert (=> d!14871 (= lt!30225 lt!30224)))

(declare-fun lt!30226 () Unit!1919)

(declare-fun e!45188 () Unit!1919)

(assert (=> d!14871 (= lt!30226 e!45188)))

(declare-fun c!9795 () Bool)

(assert (=> d!14871 (= c!9795 lt!30224)))

(assert (=> d!14871 (= lt!30224 (containsKey!135 (toList!719 lt!29996) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!14871 (= (contains!714 lt!29996 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!30225)))

(declare-fun b!68966 () Bool)

(declare-fun lt!30227 () Unit!1919)

(assert (=> b!68966 (= e!45188 lt!30227)))

(assert (=> b!68966 (= lt!30227 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 lt!29996) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!68966 (isDefined!84 (getValueByKey!131 (toList!719 lt!29996) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!68967 () Bool)

(declare-fun Unit!1932 () Unit!1919)

(assert (=> b!68967 (= e!45188 Unit!1932)))

(declare-fun b!68968 () Bool)

(assert (=> b!68968 (= e!45187 (isDefined!84 (getValueByKey!131 (toList!719 lt!29996) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!14871 c!9795) b!68966))

(assert (= (and d!14871 (not c!9795)) b!68967))

(assert (= (and d!14871 (not res!37060)) b!68968))

(assert (=> d!14871 m!64521))

(declare-fun m!64937 () Bool)

(assert (=> d!14871 m!64937))

(assert (=> b!68966 m!64521))

(declare-fun m!64939 () Bool)

(assert (=> b!68966 m!64939))

(assert (=> b!68966 m!64521))

(assert (=> b!68966 m!64885))

(assert (=> b!68966 m!64885))

(declare-fun m!64941 () Bool)

(assert (=> b!68966 m!64941))

(assert (=> b!68968 m!64521))

(assert (=> b!68968 m!64885))

(assert (=> b!68968 m!64885))

(assert (=> b!68968 m!64941))

(assert (=> b!68610 d!14871))

(declare-fun d!14873 () Bool)

(assert (=> d!14873 (= (+!90 (getCurrentListMap!417 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897)) (getCurrentListMap!417 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) lt!30140 (zeroValue!2074 newMap!16) lt!29897 #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30230 () Unit!1919)

(declare-fun choose!385 (array!3855 array!3857 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2923 V!2923 V!2923 Int) Unit!1919)

(assert (=> d!14873 (= lt!30230 (choose!385 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) lt!30140 (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) lt!29897 (defaultEntry!2168 newMap!16)))))

(assert (=> d!14873 (validMask!0 (mask!6113 newMap!16))))

(assert (=> d!14873 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!22 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) lt!30140 (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) lt!29897 (defaultEntry!2168 newMap!16)) lt!30230)))

(declare-fun bs!2963 () Bool)

(assert (= bs!2963 d!14873))

(assert (=> bs!2963 m!64511))

(declare-fun m!64943 () Bool)

(assert (=> bs!2963 m!64943))

(assert (=> bs!2963 m!64759))

(declare-fun m!64945 () Bool)

(assert (=> bs!2963 m!64945))

(assert (=> bs!2963 m!64511))

(declare-fun m!64947 () Bool)

(assert (=> bs!2963 m!64947))

(assert (=> b!68801 d!14873))

(declare-fun d!14875 () Bool)

(declare-fun e!45189 () Bool)

(assert (=> d!14875 e!45189))

(declare-fun res!37061 () Bool)

(assert (=> d!14875 (=> res!37061 e!45189)))

(declare-fun lt!30232 () Bool)

(assert (=> d!14875 (= res!37061 (not lt!30232))))

(declare-fun lt!30231 () Bool)

(assert (=> d!14875 (= lt!30232 lt!30231)))

(declare-fun lt!30233 () Unit!1919)

(declare-fun e!45190 () Unit!1919)

(assert (=> d!14875 (= lt!30233 e!45190)))

(declare-fun c!9796 () Bool)

(assert (=> d!14875 (= c!9796 lt!30231)))

(assert (=> d!14875 (= lt!30231 (containsKey!135 (toList!719 lt!30045) (_1!1062 lt!29892)))))

(assert (=> d!14875 (= (contains!714 lt!30045 (_1!1062 lt!29892)) lt!30232)))

(declare-fun b!68969 () Bool)

(declare-fun lt!30234 () Unit!1919)

(assert (=> b!68969 (= e!45190 lt!30234)))

(assert (=> b!68969 (= lt!30234 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 lt!30045) (_1!1062 lt!29892)))))

(assert (=> b!68969 (isDefined!84 (getValueByKey!131 (toList!719 lt!30045) (_1!1062 lt!29892)))))

(declare-fun b!68970 () Bool)

(declare-fun Unit!1933 () Unit!1919)

(assert (=> b!68970 (= e!45190 Unit!1933)))

(declare-fun b!68971 () Bool)

(assert (=> b!68971 (= e!45189 (isDefined!84 (getValueByKey!131 (toList!719 lt!30045) (_1!1062 lt!29892))))))

(assert (= (and d!14875 c!9796) b!68969))

(assert (= (and d!14875 (not c!9796)) b!68970))

(assert (= (and d!14875 (not res!37061)) b!68971))

(declare-fun m!64949 () Bool)

(assert (=> d!14875 m!64949))

(declare-fun m!64951 () Bool)

(assert (=> b!68969 m!64951))

(assert (=> b!68969 m!64623))

(assert (=> b!68969 m!64623))

(declare-fun m!64953 () Bool)

(assert (=> b!68969 m!64953))

(assert (=> b!68971 m!64623))

(assert (=> b!68971 m!64623))

(assert (=> b!68971 m!64953))

(assert (=> d!14805 d!14875))

(declare-fun b!68982 () Bool)

(declare-fun e!45196 () Option!137)

(assert (=> b!68982 (= e!45196 (getValueByKey!131 (t!4972 lt!30046) (_1!1062 lt!29892)))))

(declare-fun b!68981 () Bool)

(declare-fun e!45195 () Option!137)

(assert (=> b!68981 (= e!45195 e!45196)))

(declare-fun c!9802 () Bool)

(assert (=> b!68981 (= c!9802 (and ((_ is Cons!1465) lt!30046) (not (= (_1!1062 (h!2050 lt!30046)) (_1!1062 lt!29892)))))))

(declare-fun b!68983 () Bool)

(assert (=> b!68983 (= e!45196 None!135)))

(declare-fun b!68980 () Bool)

(assert (=> b!68980 (= e!45195 (Some!136 (_2!1062 (h!2050 lt!30046))))))

(declare-fun d!14877 () Bool)

(declare-fun c!9801 () Bool)

(assert (=> d!14877 (= c!9801 (and ((_ is Cons!1465) lt!30046) (= (_1!1062 (h!2050 lt!30046)) (_1!1062 lt!29892))))))

(assert (=> d!14877 (= (getValueByKey!131 lt!30046 (_1!1062 lt!29892)) e!45195)))

(assert (= (and d!14877 c!9801) b!68980))

(assert (= (and d!14877 (not c!9801)) b!68981))

(assert (= (and b!68981 c!9802) b!68982))

(assert (= (and b!68981 (not c!9802)) b!68983))

(declare-fun m!64955 () Bool)

(assert (=> b!68982 m!64955))

(assert (=> d!14805 d!14877))

(declare-fun d!14879 () Bool)

(assert (=> d!14879 (= (getValueByKey!131 lt!30046 (_1!1062 lt!29892)) (Some!136 (_2!1062 lt!29892)))))

(declare-fun lt!30237 () Unit!1919)

(declare-fun choose!386 (List!1469 (_ BitVec 64) V!2923) Unit!1919)

(assert (=> d!14879 (= lt!30237 (choose!386 lt!30046 (_1!1062 lt!29892) (_2!1062 lt!29892)))))

(declare-fun e!45199 () Bool)

(assert (=> d!14879 e!45199))

(declare-fun res!37066 () Bool)

(assert (=> d!14879 (=> (not res!37066) (not e!45199))))

(declare-fun isStrictlySorted!290 (List!1469) Bool)

(assert (=> d!14879 (= res!37066 (isStrictlySorted!290 lt!30046))))

(assert (=> d!14879 (= (lemmaContainsTupThenGetReturnValue!48 lt!30046 (_1!1062 lt!29892) (_2!1062 lt!29892)) lt!30237)))

(declare-fun b!68988 () Bool)

(declare-fun res!37067 () Bool)

(assert (=> b!68988 (=> (not res!37067) (not e!45199))))

(assert (=> b!68988 (= res!37067 (containsKey!135 lt!30046 (_1!1062 lt!29892)))))

(declare-fun b!68989 () Bool)

(assert (=> b!68989 (= e!45199 (contains!716 lt!30046 (tuple2!2103 (_1!1062 lt!29892) (_2!1062 lt!29892))))))

(assert (= (and d!14879 res!37066) b!68988))

(assert (= (and b!68988 res!37067) b!68989))

(assert (=> d!14879 m!64617))

(declare-fun m!64957 () Bool)

(assert (=> d!14879 m!64957))

(declare-fun m!64959 () Bool)

(assert (=> d!14879 m!64959))

(declare-fun m!64961 () Bool)

(assert (=> b!68988 m!64961))

(declare-fun m!64963 () Bool)

(assert (=> b!68989 m!64963))

(assert (=> d!14805 d!14879))

(declare-fun b!69010 () Bool)

(declare-fun e!45212 () List!1469)

(assert (=> b!69010 (= e!45212 (insertStrictlySorted!51 (t!4972 (toList!719 lt!29889)) (_1!1062 lt!29892) (_2!1062 lt!29892)))))

(declare-fun d!14881 () Bool)

(declare-fun e!45210 () Bool)

(assert (=> d!14881 e!45210))

(declare-fun res!37073 () Bool)

(assert (=> d!14881 (=> (not res!37073) (not e!45210))))

(declare-fun lt!30240 () List!1469)

(assert (=> d!14881 (= res!37073 (isStrictlySorted!290 lt!30240))))

(declare-fun e!45214 () List!1469)

(assert (=> d!14881 (= lt!30240 e!45214)))

(declare-fun c!9811 () Bool)

(assert (=> d!14881 (= c!9811 (and ((_ is Cons!1465) (toList!719 lt!29889)) (bvslt (_1!1062 (h!2050 (toList!719 lt!29889))) (_1!1062 lt!29892))))))

(assert (=> d!14881 (isStrictlySorted!290 (toList!719 lt!29889))))

(assert (=> d!14881 (= (insertStrictlySorted!51 (toList!719 lt!29889) (_1!1062 lt!29892) (_2!1062 lt!29892)) lt!30240)))

(declare-fun b!69011 () Bool)

(declare-fun c!9813 () Bool)

(declare-fun c!9814 () Bool)

(assert (=> b!69011 (= e!45212 (ite c!9814 (t!4972 (toList!719 lt!29889)) (ite c!9813 (Cons!1465 (h!2050 (toList!719 lt!29889)) (t!4972 (toList!719 lt!29889))) Nil!1466)))))

(declare-fun bm!5882 () Bool)

(declare-fun call!5887 () List!1469)

(declare-fun call!5886 () List!1469)

(assert (=> bm!5882 (= call!5887 call!5886)))

(declare-fun b!69012 () Bool)

(declare-fun e!45213 () List!1469)

(assert (=> b!69012 (= e!45213 call!5887)))

(declare-fun bm!5883 () Bool)

(declare-fun call!5885 () List!1469)

(assert (=> bm!5883 (= call!5886 call!5885)))

(declare-fun bm!5884 () Bool)

(declare-fun $colon$colon!64 (List!1469 tuple2!2102) List!1469)

(assert (=> bm!5884 (= call!5885 ($colon$colon!64 e!45212 (ite c!9811 (h!2050 (toList!719 lt!29889)) (tuple2!2103 (_1!1062 lt!29892) (_2!1062 lt!29892)))))))

(declare-fun c!9812 () Bool)

(assert (=> bm!5884 (= c!9812 c!9811)))

(declare-fun b!69013 () Bool)

(declare-fun e!45211 () List!1469)

(assert (=> b!69013 (= e!45214 e!45211)))

(assert (=> b!69013 (= c!9814 (and ((_ is Cons!1465) (toList!719 lt!29889)) (= (_1!1062 (h!2050 (toList!719 lt!29889))) (_1!1062 lt!29892))))))

(declare-fun b!69014 () Bool)

(assert (=> b!69014 (= e!45210 (contains!716 lt!30240 (tuple2!2103 (_1!1062 lt!29892) (_2!1062 lt!29892))))))

(declare-fun b!69015 () Bool)

(assert (=> b!69015 (= e!45214 call!5885)))

(declare-fun b!69016 () Bool)

(assert (=> b!69016 (= e!45213 call!5887)))

(declare-fun b!69017 () Bool)

(declare-fun res!37072 () Bool)

(assert (=> b!69017 (=> (not res!37072) (not e!45210))))

(assert (=> b!69017 (= res!37072 (containsKey!135 lt!30240 (_1!1062 lt!29892)))))

(declare-fun b!69018 () Bool)

(assert (=> b!69018 (= e!45211 call!5886)))

(declare-fun b!69019 () Bool)

(assert (=> b!69019 (= c!9813 (and ((_ is Cons!1465) (toList!719 lt!29889)) (bvsgt (_1!1062 (h!2050 (toList!719 lt!29889))) (_1!1062 lt!29892))))))

(assert (=> b!69019 (= e!45211 e!45213)))

(assert (= (and d!14881 c!9811) b!69015))

(assert (= (and d!14881 (not c!9811)) b!69013))

(assert (= (and b!69013 c!9814) b!69018))

(assert (= (and b!69013 (not c!9814)) b!69019))

(assert (= (and b!69019 c!9813) b!69012))

(assert (= (and b!69019 (not c!9813)) b!69016))

(assert (= (or b!69012 b!69016) bm!5882))

(assert (= (or b!69018 bm!5882) bm!5883))

(assert (= (or b!69015 bm!5883) bm!5884))

(assert (= (and bm!5884 c!9812) b!69010))

(assert (= (and bm!5884 (not c!9812)) b!69011))

(assert (= (and d!14881 res!37073) b!69017))

(assert (= (and b!69017 res!37072) b!69014))

(declare-fun m!64965 () Bool)

(assert (=> b!69014 m!64965))

(declare-fun m!64967 () Bool)

(assert (=> d!14881 m!64967))

(declare-fun m!64969 () Bool)

(assert (=> d!14881 m!64969))

(declare-fun m!64971 () Bool)

(assert (=> b!69010 m!64971))

(declare-fun m!64973 () Bool)

(assert (=> bm!5884 m!64973))

(declare-fun m!64975 () Bool)

(assert (=> b!69017 m!64975))

(assert (=> d!14805 d!14881))

(declare-fun d!14883 () Bool)

(declare-fun isEmpty!311 (List!1469) Bool)

(assert (=> d!14883 (= (isEmpty!310 lt!30029) (isEmpty!311 (toList!719 lt!30029)))))

(declare-fun bs!2964 () Bool)

(assert (= bs!2964 d!14883))

(declare-fun m!64977 () Bool)

(assert (=> bs!2964 m!64977))

(assert (=> b!68668 d!14883))

(declare-fun d!14885 () Bool)

(assert (=> d!14885 (= (map!1140 (_2!1061 lt!30148)) (getCurrentListMap!417 (_keys!3812 (_2!1061 lt!30148)) (_values!2151 (_2!1061 lt!30148)) (mask!6113 (_2!1061 lt!30148)) (extraKeys!2035 (_2!1061 lt!30148)) (zeroValue!2074 (_2!1061 lt!30148)) (minValue!2074 (_2!1061 lt!30148)) #b00000000000000000000000000000000 (defaultEntry!2168 (_2!1061 lt!30148))))))

(declare-fun bs!2965 () Bool)

(assert (= bs!2965 d!14885))

(declare-fun m!64979 () Bool)

(assert (=> bs!2965 m!64979))

(assert (=> bm!5840 d!14885))

(declare-fun d!14887 () Bool)

(assert (=> d!14887 (isDefined!84 (getValueByKey!131 (toList!719 lt!29895) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(declare-fun lt!30243 () Unit!1919)

(declare-fun choose!387 (List!1469 (_ BitVec 64)) Unit!1919)

(assert (=> d!14887 (= lt!30243 (choose!387 (toList!719 lt!29895) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(declare-fun e!45217 () Bool)

(assert (=> d!14887 e!45217))

(declare-fun res!37076 () Bool)

(assert (=> d!14887 (=> (not res!37076) (not e!45217))))

(assert (=> d!14887 (= res!37076 (isStrictlySorted!290 (toList!719 lt!29895)))))

(assert (=> d!14887 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 lt!29895) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) lt!30243)))

(declare-fun b!69022 () Bool)

(assert (=> b!69022 (= e!45217 (containsKey!135 (toList!719 lt!29895) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(assert (= (and d!14887 res!37076) b!69022))

(assert (=> d!14887 m!64407))

(assert (=> d!14887 m!64665))

(assert (=> d!14887 m!64665))

(assert (=> d!14887 m!64667))

(assert (=> d!14887 m!64407))

(declare-fun m!64981 () Bool)

(assert (=> d!14887 m!64981))

(declare-fun m!64983 () Bool)

(assert (=> d!14887 m!64983))

(assert (=> b!69022 m!64407))

(assert (=> b!69022 m!64661))

(assert (=> b!68693 d!14887))

(declare-fun d!14889 () Bool)

(declare-fun isEmpty!312 (Option!137) Bool)

(assert (=> d!14889 (= (isDefined!84 (getValueByKey!131 (toList!719 lt!29895) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355))) (not (isEmpty!312 (getValueByKey!131 (toList!719 lt!29895) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))))

(declare-fun bs!2966 () Bool)

(assert (= bs!2966 d!14889))

(assert (=> bs!2966 m!64665))

(declare-fun m!64985 () Bool)

(assert (=> bs!2966 m!64985))

(assert (=> b!68693 d!14889))

(declare-fun b!69025 () Bool)

(declare-fun e!45219 () Option!137)

(assert (=> b!69025 (= e!45219 (getValueByKey!131 (t!4972 (toList!719 lt!29895)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(declare-fun b!69024 () Bool)

(declare-fun e!45218 () Option!137)

(assert (=> b!69024 (= e!45218 e!45219)))

(declare-fun c!9816 () Bool)

(assert (=> b!69024 (= c!9816 (and ((_ is Cons!1465) (toList!719 lt!29895)) (not (= (_1!1062 (h!2050 (toList!719 lt!29895))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))))

(declare-fun b!69026 () Bool)

(assert (=> b!69026 (= e!45219 None!135)))

(declare-fun b!69023 () Bool)

(assert (=> b!69023 (= e!45218 (Some!136 (_2!1062 (h!2050 (toList!719 lt!29895)))))))

(declare-fun c!9815 () Bool)

(declare-fun d!14891 () Bool)

(assert (=> d!14891 (= c!9815 (and ((_ is Cons!1465) (toList!719 lt!29895)) (= (_1!1062 (h!2050 (toList!719 lt!29895))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355))))))

(assert (=> d!14891 (= (getValueByKey!131 (toList!719 lt!29895) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) e!45218)))

(assert (= (and d!14891 c!9815) b!69023))

(assert (= (and d!14891 (not c!9815)) b!69024))

(assert (= (and b!69024 c!9816) b!69025))

(assert (= (and b!69024 (not c!9816)) b!69026))

(assert (=> b!69025 m!64407))

(declare-fun m!64987 () Bool)

(assert (=> b!69025 m!64987))

(assert (=> b!68693 d!14891))

(declare-fun d!14893 () Bool)

(declare-fun e!45220 () Bool)

(assert (=> d!14893 e!45220))

(declare-fun res!37077 () Bool)

(assert (=> d!14893 (=> res!37077 e!45220)))

(declare-fun lt!30245 () Bool)

(assert (=> d!14893 (= res!37077 (not lt!30245))))

(declare-fun lt!30244 () Bool)

(assert (=> d!14893 (= lt!30245 lt!30244)))

(declare-fun lt!30246 () Unit!1919)

(declare-fun e!45221 () Unit!1919)

(assert (=> d!14893 (= lt!30246 e!45221)))

(declare-fun c!9817 () Bool)

(assert (=> d!14893 (= c!9817 lt!30244)))

(assert (=> d!14893 (= lt!30244 (containsKey!135 (toList!719 lt!30029) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!14893 (= (contains!714 lt!30029 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!30245)))

(declare-fun b!69027 () Bool)

(declare-fun lt!30247 () Unit!1919)

(assert (=> b!69027 (= e!45221 lt!30247)))

(assert (=> b!69027 (= lt!30247 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 lt!30029) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!69027 (isDefined!84 (getValueByKey!131 (toList!719 lt!30029) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!69028 () Bool)

(declare-fun Unit!1934 () Unit!1919)

(assert (=> b!69028 (= e!45221 Unit!1934)))

(declare-fun b!69029 () Bool)

(assert (=> b!69029 (= e!45220 (isDefined!84 (getValueByKey!131 (toList!719 lt!30029) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!14893 c!9817) b!69027))

(assert (= (and d!14893 (not c!9817)) b!69028))

(assert (= (and d!14893 (not res!37077)) b!69029))

(assert (=> d!14893 m!64521))

(declare-fun m!64989 () Bool)

(assert (=> d!14893 m!64989))

(assert (=> b!69027 m!64521))

(declare-fun m!64991 () Bool)

(assert (=> b!69027 m!64991))

(assert (=> b!69027 m!64521))

(declare-fun m!64993 () Bool)

(assert (=> b!69027 m!64993))

(assert (=> b!69027 m!64993))

(declare-fun m!64995 () Bool)

(assert (=> b!69027 m!64995))

(assert (=> b!69029 m!64521))

(assert (=> b!69029 m!64993))

(assert (=> b!69029 m!64993))

(assert (=> b!69029 m!64995))

(assert (=> b!68671 d!14893))

(declare-fun d!14895 () Bool)

(assert (=> d!14895 (= (+!90 (+!90 lt!29889 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))) (+!90 (+!90 lt!29889 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))))

(assert (=> d!14895 true))

(declare-fun _$28!115 () Unit!1919)

(assert (=> d!14895 (= (choose!381 lt!29889 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))) _$28!115)))

(declare-fun bs!2967 () Bool)

(assert (= bs!2967 d!14895))

(assert (=> bs!2967 m!64643))

(assert (=> bs!2967 m!64643))

(assert (=> bs!2967 m!64647))

(assert (=> bs!2967 m!64639))

(assert (=> bs!2967 m!64639))

(assert (=> bs!2967 m!64641))

(assert (=> d!14809 d!14895))

(declare-fun d!14897 () Bool)

(declare-fun e!45222 () Bool)

(assert (=> d!14897 e!45222))

(declare-fun res!37079 () Bool)

(assert (=> d!14897 (=> (not res!37079) (not e!45222))))

(declare-fun lt!30250 () ListLongMap!1407)

(assert (=> d!14897 (= res!37079 (contains!714 lt!30250 (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))

(declare-fun lt!30251 () List!1469)

(assert (=> d!14897 (= lt!30250 (ListLongMap!1408 lt!30251))))

(declare-fun lt!30248 () Unit!1919)

(declare-fun lt!30249 () Unit!1919)

(assert (=> d!14897 (= lt!30248 lt!30249)))

(assert (=> d!14897 (= (getValueByKey!131 lt!30251 (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))) (Some!136 (_2!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))

(assert (=> d!14897 (= lt!30249 (lemmaContainsTupThenGetReturnValue!48 lt!30251 (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)) (_2!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))

(assert (=> d!14897 (= lt!30251 (insertStrictlySorted!51 (toList!719 lt!29889) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)) (_2!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))

(assert (=> d!14897 (= (+!90 lt!29889 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)) lt!30250)))

(declare-fun b!69030 () Bool)

(declare-fun res!37078 () Bool)

(assert (=> b!69030 (=> (not res!37078) (not e!45222))))

(assert (=> b!69030 (= res!37078 (= (getValueByKey!131 (toList!719 lt!30250) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))) (Some!136 (_2!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))))))

(declare-fun b!69031 () Bool)

(assert (=> b!69031 (= e!45222 (contains!716 (toList!719 lt!30250) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))))

(assert (= (and d!14897 res!37079) b!69030))

(assert (= (and b!69030 res!37078) b!69031))

(declare-fun m!64997 () Bool)

(assert (=> d!14897 m!64997))

(declare-fun m!64999 () Bool)

(assert (=> d!14897 m!64999))

(declare-fun m!65001 () Bool)

(assert (=> d!14897 m!65001))

(declare-fun m!65003 () Bool)

(assert (=> d!14897 m!65003))

(declare-fun m!65005 () Bool)

(assert (=> b!69030 m!65005))

(declare-fun m!65007 () Bool)

(assert (=> b!69031 m!65007))

(assert (=> d!14809 d!14897))

(declare-fun d!14899 () Bool)

(declare-fun e!45223 () Bool)

(assert (=> d!14899 e!45223))

(declare-fun res!37081 () Bool)

(assert (=> d!14899 (=> (not res!37081) (not e!45223))))

(declare-fun lt!30254 () ListLongMap!1407)

(assert (=> d!14899 (= res!37081 (contains!714 lt!30254 (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))

(declare-fun lt!30255 () List!1469)

(assert (=> d!14899 (= lt!30254 (ListLongMap!1408 lt!30255))))

(declare-fun lt!30252 () Unit!1919)

(declare-fun lt!30253 () Unit!1919)

(assert (=> d!14899 (= lt!30252 lt!30253)))

(assert (=> d!14899 (= (getValueByKey!131 lt!30255 (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))) (Some!136 (_2!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))

(assert (=> d!14899 (= lt!30253 (lemmaContainsTupThenGetReturnValue!48 lt!30255 (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)) (_2!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))

(assert (=> d!14899 (= lt!30255 (insertStrictlySorted!51 (toList!719 (+!90 lt!29889 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)) (_2!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))

(assert (=> d!14899 (= (+!90 (+!90 lt!29889 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)) lt!30254)))

(declare-fun b!69032 () Bool)

(declare-fun res!37080 () Bool)

(assert (=> b!69032 (=> (not res!37080) (not e!45223))))

(assert (=> b!69032 (= res!37080 (= (getValueByKey!131 (toList!719 lt!30254) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))) (Some!136 (_2!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))))))

(declare-fun b!69033 () Bool)

(assert (=> b!69033 (= e!45223 (contains!716 (toList!719 lt!30254) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))))

(assert (= (and d!14899 res!37081) b!69032))

(assert (= (and b!69032 res!37080) b!69033))

(declare-fun m!65009 () Bool)

(assert (=> d!14899 m!65009))

(declare-fun m!65011 () Bool)

(assert (=> d!14899 m!65011))

(declare-fun m!65013 () Bool)

(assert (=> d!14899 m!65013))

(declare-fun m!65015 () Bool)

(assert (=> d!14899 m!65015))

(declare-fun m!65017 () Bool)

(assert (=> b!69032 m!65017))

(declare-fun m!65019 () Bool)

(assert (=> b!69033 m!65019))

(assert (=> d!14809 d!14899))

(declare-fun d!14901 () Bool)

(declare-fun e!45224 () Bool)

(assert (=> d!14901 e!45224))

(declare-fun res!37083 () Bool)

(assert (=> d!14901 (=> (not res!37083) (not e!45224))))

(declare-fun lt!30258 () ListLongMap!1407)

(assert (=> d!14901 (= res!37083 (contains!714 lt!30258 (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun lt!30259 () List!1469)

(assert (=> d!14901 (= lt!30258 (ListLongMap!1408 lt!30259))))

(declare-fun lt!30256 () Unit!1919)

(declare-fun lt!30257 () Unit!1919)

(assert (=> d!14901 (= lt!30256 lt!30257)))

(assert (=> d!14901 (= (getValueByKey!131 lt!30259 (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))) (Some!136 (_2!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> d!14901 (= lt!30257 (lemmaContainsTupThenGetReturnValue!48 lt!30259 (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))) (_2!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> d!14901 (= lt!30259 (insertStrictlySorted!51 (toList!719 lt!29889) (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))) (_2!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> d!14901 (= (+!90 lt!29889 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))) lt!30258)))

(declare-fun b!69034 () Bool)

(declare-fun res!37082 () Bool)

(assert (=> b!69034 (=> (not res!37082) (not e!45224))))

(assert (=> b!69034 (= res!37082 (= (getValueByKey!131 (toList!719 lt!30258) (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))) (Some!136 (_2!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(declare-fun b!69035 () Bool)

(assert (=> b!69035 (= e!45224 (contains!716 (toList!719 lt!30258) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))))

(assert (= (and d!14901 res!37083) b!69034))

(assert (= (and b!69034 res!37082) b!69035))

(declare-fun m!65021 () Bool)

(assert (=> d!14901 m!65021))

(declare-fun m!65023 () Bool)

(assert (=> d!14901 m!65023))

(declare-fun m!65025 () Bool)

(assert (=> d!14901 m!65025))

(declare-fun m!65027 () Bool)

(assert (=> d!14901 m!65027))

(declare-fun m!65029 () Bool)

(assert (=> b!69034 m!65029))

(declare-fun m!65031 () Bool)

(assert (=> b!69035 m!65031))

(assert (=> d!14809 d!14901))

(declare-fun d!14903 () Bool)

(declare-fun e!45225 () Bool)

(assert (=> d!14903 e!45225))

(declare-fun res!37085 () Bool)

(assert (=> d!14903 (=> (not res!37085) (not e!45225))))

(declare-fun lt!30262 () ListLongMap!1407)

(assert (=> d!14903 (= res!37085 (contains!714 lt!30262 (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun lt!30263 () List!1469)

(assert (=> d!14903 (= lt!30262 (ListLongMap!1408 lt!30263))))

(declare-fun lt!30260 () Unit!1919)

(declare-fun lt!30261 () Unit!1919)

(assert (=> d!14903 (= lt!30260 lt!30261)))

(assert (=> d!14903 (= (getValueByKey!131 lt!30263 (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))) (Some!136 (_2!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> d!14903 (= lt!30261 (lemmaContainsTupThenGetReturnValue!48 lt!30263 (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))) (_2!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> d!14903 (= lt!30263 (insertStrictlySorted!51 (toList!719 (+!90 lt!29889 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))) (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))) (_2!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> d!14903 (= (+!90 (+!90 lt!29889 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))) lt!30262)))

(declare-fun b!69036 () Bool)

(declare-fun res!37084 () Bool)

(assert (=> b!69036 (=> (not res!37084) (not e!45225))))

(assert (=> b!69036 (= res!37084 (= (getValueByKey!131 (toList!719 lt!30262) (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))) (Some!136 (_2!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(declare-fun b!69037 () Bool)

(assert (=> b!69037 (= e!45225 (contains!716 (toList!719 lt!30262) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))))

(assert (= (and d!14903 res!37085) b!69036))

(assert (= (and b!69036 res!37084) b!69037))

(declare-fun m!65033 () Bool)

(assert (=> d!14903 m!65033))

(declare-fun m!65035 () Bool)

(assert (=> d!14903 m!65035))

(declare-fun m!65037 () Bool)

(assert (=> d!14903 m!65037))

(declare-fun m!65039 () Bool)

(assert (=> d!14903 m!65039))

(declare-fun m!65041 () Bool)

(assert (=> b!69036 m!65041))

(declare-fun m!65043 () Bool)

(assert (=> b!69037 m!65043))

(assert (=> d!14809 d!14903))

(assert (=> b!68622 d!14787))

(declare-fun d!14905 () Bool)

(declare-fun e!45226 () Bool)

(assert (=> d!14905 e!45226))

(declare-fun res!37086 () Bool)

(assert (=> d!14905 (=> res!37086 e!45226)))

(declare-fun lt!30265 () Bool)

(assert (=> d!14905 (= res!37086 (not lt!30265))))

(declare-fun lt!30264 () Bool)

(assert (=> d!14905 (= lt!30265 lt!30264)))

(declare-fun lt!30266 () Unit!1919)

(declare-fun e!45227 () Unit!1919)

(assert (=> d!14905 (= lt!30266 e!45227)))

(declare-fun c!9818 () Bool)

(assert (=> d!14905 (= c!9818 lt!30264)))

(assert (=> d!14905 (= lt!30264 (containsKey!135 (toList!719 lt!30049) (_1!1062 lt!29893)))))

(assert (=> d!14905 (= (contains!714 lt!30049 (_1!1062 lt!29893)) lt!30265)))

(declare-fun b!69038 () Bool)

(declare-fun lt!30267 () Unit!1919)

(assert (=> b!69038 (= e!45227 lt!30267)))

(assert (=> b!69038 (= lt!30267 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 lt!30049) (_1!1062 lt!29893)))))

(assert (=> b!69038 (isDefined!84 (getValueByKey!131 (toList!719 lt!30049) (_1!1062 lt!29893)))))

(declare-fun b!69039 () Bool)

(declare-fun Unit!1935 () Unit!1919)

(assert (=> b!69039 (= e!45227 Unit!1935)))

(declare-fun b!69040 () Bool)

(assert (=> b!69040 (= e!45226 (isDefined!84 (getValueByKey!131 (toList!719 lt!30049) (_1!1062 lt!29893))))))

(assert (= (and d!14905 c!9818) b!69038))

(assert (= (and d!14905 (not c!9818)) b!69039))

(assert (= (and d!14905 (not res!37086)) b!69040))

(declare-fun m!65045 () Bool)

(assert (=> d!14905 m!65045))

(declare-fun m!65047 () Bool)

(assert (=> b!69038 m!65047))

(assert (=> b!69038 m!64635))

(assert (=> b!69038 m!64635))

(declare-fun m!65049 () Bool)

(assert (=> b!69038 m!65049))

(assert (=> b!69040 m!64635))

(assert (=> b!69040 m!64635))

(assert (=> b!69040 m!65049))

(assert (=> d!14807 d!14905))

(declare-fun b!69043 () Bool)

(declare-fun e!45229 () Option!137)

(assert (=> b!69043 (= e!45229 (getValueByKey!131 (t!4972 lt!30050) (_1!1062 lt!29893)))))

(declare-fun b!69042 () Bool)

(declare-fun e!45228 () Option!137)

(assert (=> b!69042 (= e!45228 e!45229)))

(declare-fun c!9820 () Bool)

(assert (=> b!69042 (= c!9820 (and ((_ is Cons!1465) lt!30050) (not (= (_1!1062 (h!2050 lt!30050)) (_1!1062 lt!29893)))))))

(declare-fun b!69044 () Bool)

(assert (=> b!69044 (= e!45229 None!135)))

(declare-fun b!69041 () Bool)

(assert (=> b!69041 (= e!45228 (Some!136 (_2!1062 (h!2050 lt!30050))))))

(declare-fun d!14907 () Bool)

(declare-fun c!9819 () Bool)

(assert (=> d!14907 (= c!9819 (and ((_ is Cons!1465) lt!30050) (= (_1!1062 (h!2050 lt!30050)) (_1!1062 lt!29893))))))

(assert (=> d!14907 (= (getValueByKey!131 lt!30050 (_1!1062 lt!29893)) e!45228)))

(assert (= (and d!14907 c!9819) b!69041))

(assert (= (and d!14907 (not c!9819)) b!69042))

(assert (= (and b!69042 c!9820) b!69043))

(assert (= (and b!69042 (not c!9820)) b!69044))

(declare-fun m!65051 () Bool)

(assert (=> b!69043 m!65051))

(assert (=> d!14807 d!14907))

(declare-fun d!14909 () Bool)

(assert (=> d!14909 (= (getValueByKey!131 lt!30050 (_1!1062 lt!29893)) (Some!136 (_2!1062 lt!29893)))))

(declare-fun lt!30268 () Unit!1919)

(assert (=> d!14909 (= lt!30268 (choose!386 lt!30050 (_1!1062 lt!29893) (_2!1062 lt!29893)))))

(declare-fun e!45230 () Bool)

(assert (=> d!14909 e!45230))

(declare-fun res!37087 () Bool)

(assert (=> d!14909 (=> (not res!37087) (not e!45230))))

(assert (=> d!14909 (= res!37087 (isStrictlySorted!290 lt!30050))))

(assert (=> d!14909 (= (lemmaContainsTupThenGetReturnValue!48 lt!30050 (_1!1062 lt!29893) (_2!1062 lt!29893)) lt!30268)))

(declare-fun b!69045 () Bool)

(declare-fun res!37088 () Bool)

(assert (=> b!69045 (=> (not res!37088) (not e!45230))))

(assert (=> b!69045 (= res!37088 (containsKey!135 lt!30050 (_1!1062 lt!29893)))))

(declare-fun b!69046 () Bool)

(assert (=> b!69046 (= e!45230 (contains!716 lt!30050 (tuple2!2103 (_1!1062 lt!29893) (_2!1062 lt!29893))))))

(assert (= (and d!14909 res!37087) b!69045))

(assert (= (and b!69045 res!37088) b!69046))

(assert (=> d!14909 m!64629))

(declare-fun m!65053 () Bool)

(assert (=> d!14909 m!65053))

(declare-fun m!65055 () Bool)

(assert (=> d!14909 m!65055))

(declare-fun m!65057 () Bool)

(assert (=> b!69045 m!65057))

(declare-fun m!65059 () Bool)

(assert (=> b!69046 m!65059))

(assert (=> d!14807 d!14909))

(declare-fun e!45233 () List!1469)

(declare-fun b!69047 () Bool)

(assert (=> b!69047 (= e!45233 (insertStrictlySorted!51 (t!4972 (toList!719 (+!90 lt!29889 lt!29892))) (_1!1062 lt!29893) (_2!1062 lt!29893)))))

(declare-fun d!14911 () Bool)

(declare-fun e!45231 () Bool)

(assert (=> d!14911 e!45231))

(declare-fun res!37090 () Bool)

(assert (=> d!14911 (=> (not res!37090) (not e!45231))))

(declare-fun lt!30269 () List!1469)

(assert (=> d!14911 (= res!37090 (isStrictlySorted!290 lt!30269))))

(declare-fun e!45235 () List!1469)

(assert (=> d!14911 (= lt!30269 e!45235)))

(declare-fun c!9821 () Bool)

(assert (=> d!14911 (= c!9821 (and ((_ is Cons!1465) (toList!719 (+!90 lt!29889 lt!29892))) (bvslt (_1!1062 (h!2050 (toList!719 (+!90 lt!29889 lt!29892)))) (_1!1062 lt!29893))))))

(assert (=> d!14911 (isStrictlySorted!290 (toList!719 (+!90 lt!29889 lt!29892)))))

(assert (=> d!14911 (= (insertStrictlySorted!51 (toList!719 (+!90 lt!29889 lt!29892)) (_1!1062 lt!29893) (_2!1062 lt!29893)) lt!30269)))

(declare-fun b!69048 () Bool)

(declare-fun c!9823 () Bool)

(declare-fun c!9824 () Bool)

(assert (=> b!69048 (= e!45233 (ite c!9824 (t!4972 (toList!719 (+!90 lt!29889 lt!29892))) (ite c!9823 (Cons!1465 (h!2050 (toList!719 (+!90 lt!29889 lt!29892))) (t!4972 (toList!719 (+!90 lt!29889 lt!29892)))) Nil!1466)))))

(declare-fun bm!5885 () Bool)

(declare-fun call!5890 () List!1469)

(declare-fun call!5889 () List!1469)

(assert (=> bm!5885 (= call!5890 call!5889)))

(declare-fun b!69049 () Bool)

(declare-fun e!45234 () List!1469)

(assert (=> b!69049 (= e!45234 call!5890)))

(declare-fun bm!5886 () Bool)

(declare-fun call!5888 () List!1469)

(assert (=> bm!5886 (= call!5889 call!5888)))

(declare-fun bm!5887 () Bool)

(assert (=> bm!5887 (= call!5888 ($colon$colon!64 e!45233 (ite c!9821 (h!2050 (toList!719 (+!90 lt!29889 lt!29892))) (tuple2!2103 (_1!1062 lt!29893) (_2!1062 lt!29893)))))))

(declare-fun c!9822 () Bool)

(assert (=> bm!5887 (= c!9822 c!9821)))

(declare-fun b!69050 () Bool)

(declare-fun e!45232 () List!1469)

(assert (=> b!69050 (= e!45235 e!45232)))

(assert (=> b!69050 (= c!9824 (and ((_ is Cons!1465) (toList!719 (+!90 lt!29889 lt!29892))) (= (_1!1062 (h!2050 (toList!719 (+!90 lt!29889 lt!29892)))) (_1!1062 lt!29893))))))

(declare-fun b!69051 () Bool)

(assert (=> b!69051 (= e!45231 (contains!716 lt!30269 (tuple2!2103 (_1!1062 lt!29893) (_2!1062 lt!29893))))))

(declare-fun b!69052 () Bool)

(assert (=> b!69052 (= e!45235 call!5888)))

(declare-fun b!69053 () Bool)

(assert (=> b!69053 (= e!45234 call!5890)))

(declare-fun b!69054 () Bool)

(declare-fun res!37089 () Bool)

(assert (=> b!69054 (=> (not res!37089) (not e!45231))))

(assert (=> b!69054 (= res!37089 (containsKey!135 lt!30269 (_1!1062 lt!29893)))))

(declare-fun b!69055 () Bool)

(assert (=> b!69055 (= e!45232 call!5889)))

(declare-fun b!69056 () Bool)

(assert (=> b!69056 (= c!9823 (and ((_ is Cons!1465) (toList!719 (+!90 lt!29889 lt!29892))) (bvsgt (_1!1062 (h!2050 (toList!719 (+!90 lt!29889 lt!29892)))) (_1!1062 lt!29893))))))

(assert (=> b!69056 (= e!45232 e!45234)))

(assert (= (and d!14911 c!9821) b!69052))

(assert (= (and d!14911 (not c!9821)) b!69050))

(assert (= (and b!69050 c!9824) b!69055))

(assert (= (and b!69050 (not c!9824)) b!69056))

(assert (= (and b!69056 c!9823) b!69049))

(assert (= (and b!69056 (not c!9823)) b!69053))

(assert (= (or b!69049 b!69053) bm!5885))

(assert (= (or b!69055 bm!5885) bm!5886))

(assert (= (or b!69052 bm!5886) bm!5887))

(assert (= (and bm!5887 c!9822) b!69047))

(assert (= (and bm!5887 (not c!9822)) b!69048))

(assert (= (and d!14911 res!37090) b!69054))

(assert (= (and b!69054 res!37089) b!69051))

(declare-fun m!65061 () Bool)

(assert (=> b!69051 m!65061))

(declare-fun m!65063 () Bool)

(assert (=> d!14911 m!65063))

(declare-fun m!65065 () Bool)

(assert (=> d!14911 m!65065))

(declare-fun m!65067 () Bool)

(assert (=> b!69047 m!65067))

(declare-fun m!65069 () Bool)

(assert (=> bm!5887 m!65069))

(declare-fun m!65071 () Bool)

(assert (=> b!69054 m!65071))

(assert (=> d!14807 d!14911))

(declare-fun b!69059 () Bool)

(declare-fun e!45237 () Option!137)

(assert (=> b!69059 (= e!45237 (getValueByKey!131 (t!4972 (toList!719 lt!30041)) (_1!1062 lt!29892)))))

(declare-fun b!69058 () Bool)

(declare-fun e!45236 () Option!137)

(assert (=> b!69058 (= e!45236 e!45237)))

(declare-fun c!9826 () Bool)

(assert (=> b!69058 (= c!9826 (and ((_ is Cons!1465) (toList!719 lt!30041)) (not (= (_1!1062 (h!2050 (toList!719 lt!30041))) (_1!1062 lt!29892)))))))

(declare-fun b!69060 () Bool)

(assert (=> b!69060 (= e!45237 None!135)))

(declare-fun b!69057 () Bool)

(assert (=> b!69057 (= e!45236 (Some!136 (_2!1062 (h!2050 (toList!719 lt!30041)))))))

(declare-fun d!14913 () Bool)

(declare-fun c!9825 () Bool)

(assert (=> d!14913 (= c!9825 (and ((_ is Cons!1465) (toList!719 lt!30041)) (= (_1!1062 (h!2050 (toList!719 lt!30041))) (_1!1062 lt!29892))))))

(assert (=> d!14913 (= (getValueByKey!131 (toList!719 lt!30041) (_1!1062 lt!29892)) e!45236)))

(assert (= (and d!14913 c!9825) b!69057))

(assert (= (and d!14913 (not c!9825)) b!69058))

(assert (= (and b!69058 c!9826) b!69059))

(assert (= (and b!69058 (not c!9826)) b!69060))

(declare-fun m!65073 () Bool)

(assert (=> b!69059 m!65073))

(assert (=> b!68679 d!14913))

(assert (=> b!68695 d!14889))

(assert (=> b!68695 d!14891))

(declare-fun d!14915 () Bool)

(assert (=> d!14915 (= (apply!73 lt!30029 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1127 (getValueByKey!131 (toList!719 lt!30029) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!2968 () Bool)

(assert (= bs!2968 d!14915))

(assert (=> bs!2968 m!64521))

(assert (=> bs!2968 m!64993))

(assert (=> bs!2968 m!64993))

(declare-fun m!65075 () Bool)

(assert (=> bs!2968 m!65075))

(assert (=> b!68673 d!14915))

(assert (=> b!68673 d!14861))

(declare-fun d!14917 () Bool)

(assert (=> d!14917 (= (get!1125 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) from!355) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2493 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(assert (=> b!68820 d!14917))

(declare-fun d!14919 () Bool)

(declare-fun e!45238 () Bool)

(assert (=> d!14919 e!45238))

(declare-fun res!37091 () Bool)

(assert (=> d!14919 (=> res!37091 e!45238)))

(declare-fun lt!30271 () Bool)

(assert (=> d!14919 (= res!37091 (not lt!30271))))

(declare-fun lt!30270 () Bool)

(assert (=> d!14919 (= lt!30271 lt!30270)))

(declare-fun lt!30272 () Unit!1919)

(declare-fun e!45239 () Unit!1919)

(assert (=> d!14919 (= lt!30272 e!45239)))

(declare-fun c!9827 () Bool)

(assert (=> d!14919 (= c!9827 lt!30270)))

(assert (=> d!14919 (= lt!30270 (containsKey!135 (toList!719 lt!30056) (_1!1062 lt!29893)))))

(assert (=> d!14919 (= (contains!714 lt!30056 (_1!1062 lt!29893)) lt!30271)))

(declare-fun b!69061 () Bool)

(declare-fun lt!30273 () Unit!1919)

(assert (=> b!69061 (= e!45239 lt!30273)))

(assert (=> b!69061 (= lt!30273 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 lt!30056) (_1!1062 lt!29893)))))

(assert (=> b!69061 (isDefined!84 (getValueByKey!131 (toList!719 lt!30056) (_1!1062 lt!29893)))))

(declare-fun b!69062 () Bool)

(declare-fun Unit!1936 () Unit!1919)

(assert (=> b!69062 (= e!45239 Unit!1936)))

(declare-fun b!69063 () Bool)

(assert (=> b!69063 (= e!45238 (isDefined!84 (getValueByKey!131 (toList!719 lt!30056) (_1!1062 lt!29893))))))

(assert (= (and d!14919 c!9827) b!69061))

(assert (= (and d!14919 (not c!9827)) b!69062))

(assert (= (and d!14919 (not res!37091)) b!69063))

(declare-fun m!65077 () Bool)

(assert (=> d!14919 m!65077))

(declare-fun m!65079 () Bool)

(assert (=> b!69061 m!65079))

(assert (=> b!69061 m!64657))

(assert (=> b!69061 m!64657))

(declare-fun m!65081 () Bool)

(assert (=> b!69061 m!65081))

(assert (=> b!69063 m!64657))

(assert (=> b!69063 m!64657))

(assert (=> b!69063 m!65081))

(assert (=> d!14811 d!14919))

(declare-fun b!69066 () Bool)

(declare-fun e!45241 () Option!137)

(assert (=> b!69066 (= e!45241 (getValueByKey!131 (t!4972 lt!30057) (_1!1062 lt!29893)))))

(declare-fun b!69065 () Bool)

(declare-fun e!45240 () Option!137)

(assert (=> b!69065 (= e!45240 e!45241)))

(declare-fun c!9829 () Bool)

(assert (=> b!69065 (= c!9829 (and ((_ is Cons!1465) lt!30057) (not (= (_1!1062 (h!2050 lt!30057)) (_1!1062 lt!29893)))))))

(declare-fun b!69067 () Bool)

(assert (=> b!69067 (= e!45241 None!135)))

(declare-fun b!69064 () Bool)

(assert (=> b!69064 (= e!45240 (Some!136 (_2!1062 (h!2050 lt!30057))))))

(declare-fun d!14921 () Bool)

(declare-fun c!9828 () Bool)

(assert (=> d!14921 (= c!9828 (and ((_ is Cons!1465) lt!30057) (= (_1!1062 (h!2050 lt!30057)) (_1!1062 lt!29893))))))

(assert (=> d!14921 (= (getValueByKey!131 lt!30057 (_1!1062 lt!29893)) e!45240)))

(assert (= (and d!14921 c!9828) b!69064))

(assert (= (and d!14921 (not c!9828)) b!69065))

(assert (= (and b!69065 c!9829) b!69066))

(assert (= (and b!69065 (not c!9829)) b!69067))

(declare-fun m!65083 () Bool)

(assert (=> b!69066 m!65083))

(assert (=> d!14811 d!14921))

(declare-fun d!14923 () Bool)

(assert (=> d!14923 (= (getValueByKey!131 lt!30057 (_1!1062 lt!29893)) (Some!136 (_2!1062 lt!29893)))))

(declare-fun lt!30274 () Unit!1919)

(assert (=> d!14923 (= lt!30274 (choose!386 lt!30057 (_1!1062 lt!29893) (_2!1062 lt!29893)))))

(declare-fun e!45242 () Bool)

(assert (=> d!14923 e!45242))

(declare-fun res!37092 () Bool)

(assert (=> d!14923 (=> (not res!37092) (not e!45242))))

(assert (=> d!14923 (= res!37092 (isStrictlySorted!290 lt!30057))))

(assert (=> d!14923 (= (lemmaContainsTupThenGetReturnValue!48 lt!30057 (_1!1062 lt!29893) (_2!1062 lt!29893)) lt!30274)))

(declare-fun b!69068 () Bool)

(declare-fun res!37093 () Bool)

(assert (=> b!69068 (=> (not res!37093) (not e!45242))))

(assert (=> b!69068 (= res!37093 (containsKey!135 lt!30057 (_1!1062 lt!29893)))))

(declare-fun b!69069 () Bool)

(assert (=> b!69069 (= e!45242 (contains!716 lt!30057 (tuple2!2103 (_1!1062 lt!29893) (_2!1062 lt!29893))))))

(assert (= (and d!14923 res!37092) b!69068))

(assert (= (and b!69068 res!37093) b!69069))

(assert (=> d!14923 m!64651))

(declare-fun m!65085 () Bool)

(assert (=> d!14923 m!65085))

(declare-fun m!65087 () Bool)

(assert (=> d!14923 m!65087))

(declare-fun m!65089 () Bool)

(assert (=> b!69068 m!65089))

(declare-fun m!65091 () Bool)

(assert (=> b!69069 m!65091))

(assert (=> d!14811 d!14923))

(declare-fun b!69070 () Bool)

(declare-fun e!45245 () List!1469)

(assert (=> b!69070 (= e!45245 (insertStrictlySorted!51 (t!4972 (toList!719 lt!29889)) (_1!1062 lt!29893) (_2!1062 lt!29893)))))

(declare-fun d!14925 () Bool)

(declare-fun e!45243 () Bool)

(assert (=> d!14925 e!45243))

(declare-fun res!37095 () Bool)

(assert (=> d!14925 (=> (not res!37095) (not e!45243))))

(declare-fun lt!30275 () List!1469)

(assert (=> d!14925 (= res!37095 (isStrictlySorted!290 lt!30275))))

(declare-fun e!45247 () List!1469)

(assert (=> d!14925 (= lt!30275 e!45247)))

(declare-fun c!9830 () Bool)

(assert (=> d!14925 (= c!9830 (and ((_ is Cons!1465) (toList!719 lt!29889)) (bvslt (_1!1062 (h!2050 (toList!719 lt!29889))) (_1!1062 lt!29893))))))

(assert (=> d!14925 (isStrictlySorted!290 (toList!719 lt!29889))))

(assert (=> d!14925 (= (insertStrictlySorted!51 (toList!719 lt!29889) (_1!1062 lt!29893) (_2!1062 lt!29893)) lt!30275)))

(declare-fun c!9833 () Bool)

(declare-fun c!9832 () Bool)

(declare-fun b!69071 () Bool)

(assert (=> b!69071 (= e!45245 (ite c!9833 (t!4972 (toList!719 lt!29889)) (ite c!9832 (Cons!1465 (h!2050 (toList!719 lt!29889)) (t!4972 (toList!719 lt!29889))) Nil!1466)))))

(declare-fun bm!5888 () Bool)

(declare-fun call!5893 () List!1469)

(declare-fun call!5892 () List!1469)

(assert (=> bm!5888 (= call!5893 call!5892)))

(declare-fun b!69072 () Bool)

(declare-fun e!45246 () List!1469)

(assert (=> b!69072 (= e!45246 call!5893)))

(declare-fun bm!5889 () Bool)

(declare-fun call!5891 () List!1469)

(assert (=> bm!5889 (= call!5892 call!5891)))

(declare-fun bm!5890 () Bool)

(assert (=> bm!5890 (= call!5891 ($colon$colon!64 e!45245 (ite c!9830 (h!2050 (toList!719 lt!29889)) (tuple2!2103 (_1!1062 lt!29893) (_2!1062 lt!29893)))))))

(declare-fun c!9831 () Bool)

(assert (=> bm!5890 (= c!9831 c!9830)))

(declare-fun b!69073 () Bool)

(declare-fun e!45244 () List!1469)

(assert (=> b!69073 (= e!45247 e!45244)))

(assert (=> b!69073 (= c!9833 (and ((_ is Cons!1465) (toList!719 lt!29889)) (= (_1!1062 (h!2050 (toList!719 lt!29889))) (_1!1062 lt!29893))))))

(declare-fun b!69074 () Bool)

(assert (=> b!69074 (= e!45243 (contains!716 lt!30275 (tuple2!2103 (_1!1062 lt!29893) (_2!1062 lt!29893))))))

(declare-fun b!69075 () Bool)

(assert (=> b!69075 (= e!45247 call!5891)))

(declare-fun b!69076 () Bool)

(assert (=> b!69076 (= e!45246 call!5893)))

(declare-fun b!69077 () Bool)

(declare-fun res!37094 () Bool)

(assert (=> b!69077 (=> (not res!37094) (not e!45243))))

(assert (=> b!69077 (= res!37094 (containsKey!135 lt!30275 (_1!1062 lt!29893)))))

(declare-fun b!69078 () Bool)

(assert (=> b!69078 (= e!45244 call!5892)))

(declare-fun b!69079 () Bool)

(assert (=> b!69079 (= c!9832 (and ((_ is Cons!1465) (toList!719 lt!29889)) (bvsgt (_1!1062 (h!2050 (toList!719 lt!29889))) (_1!1062 lt!29893))))))

(assert (=> b!69079 (= e!45244 e!45246)))

(assert (= (and d!14925 c!9830) b!69075))

(assert (= (and d!14925 (not c!9830)) b!69073))

(assert (= (and b!69073 c!9833) b!69078))

(assert (= (and b!69073 (not c!9833)) b!69079))

(assert (= (and b!69079 c!9832) b!69072))

(assert (= (and b!69079 (not c!9832)) b!69076))

(assert (= (or b!69072 b!69076) bm!5888))

(assert (= (or b!69078 bm!5888) bm!5889))

(assert (= (or b!69075 bm!5889) bm!5890))

(assert (= (and bm!5890 c!9831) b!69070))

(assert (= (and bm!5890 (not c!9831)) b!69071))

(assert (= (and d!14925 res!37095) b!69077))

(assert (= (and b!69077 res!37094) b!69074))

(declare-fun m!65093 () Bool)

(assert (=> b!69074 m!65093))

(declare-fun m!65095 () Bool)

(assert (=> d!14925 m!65095))

(assert (=> d!14925 m!64969))

(declare-fun m!65097 () Bool)

(assert (=> b!69070 m!65097))

(declare-fun m!65099 () Bool)

(assert (=> bm!5890 m!65099))

(declare-fun m!65101 () Bool)

(assert (=> b!69077 m!65101))

(assert (=> d!14811 d!14925))

(assert (=> bm!5844 d!14777))

(declare-fun d!14927 () Bool)

(assert (=> d!14927 (= (apply!73 lt!29996 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1127 (getValueByKey!131 (toList!719 lt!29996) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2969 () Bool)

(assert (= bs!2969 d!14927))

(declare-fun m!65103 () Bool)

(assert (=> bs!2969 m!65103))

(assert (=> bs!2969 m!65103))

(declare-fun m!65105 () Bool)

(assert (=> bs!2969 m!65105))

(assert (=> b!68599 d!14927))

(declare-fun b!69080 () Bool)

(declare-fun e!45254 () Bool)

(declare-fun lt!30293 () ListLongMap!1407)

(assert (=> b!69080 (= e!45254 (= (apply!73 lt!30293 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)) (get!1124 (select (arr!1842 (ite (or c!9754 c!9759) (_values!2151 newMap!16) lt!30125)) #b00000000000000000000000000000000) (dynLambda!322 (defaultEntry!2168 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!69080 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2078 (ite (or c!9754 c!9759) (_values!2151 newMap!16) lt!30125))))))

(assert (=> b!69080 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))))))

(declare-fun b!69081 () Bool)

(declare-fun e!45260 () Unit!1919)

(declare-fun lt!30292 () Unit!1919)

(assert (=> b!69081 (= e!45260 lt!30292)))

(declare-fun lt!30285 () ListLongMap!1407)

(assert (=> b!69081 (= lt!30285 (getCurrentListMapNoExtraKeys!55 (_keys!3812 newMap!16) (ite (or c!9754 c!9759) (_values!2151 newMap!16) lt!30125) (mask!6113 newMap!16) (ite c!9754 (ite c!9756 (extraKeys!2035 newMap!16) lt!30140) (extraKeys!2035 newMap!16)) (zeroValue!2074 newMap!16) (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30288 () (_ BitVec 64))

(assert (=> b!69081 (= lt!30288 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30276 () (_ BitVec 64))

(assert (=> b!69081 (= lt!30276 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30290 () Unit!1919)

(assert (=> b!69081 (= lt!30290 (addStillContains!49 lt!30285 lt!30288 (zeroValue!2074 newMap!16) lt!30276))))

(assert (=> b!69081 (contains!714 (+!90 lt!30285 (tuple2!2103 lt!30288 (zeroValue!2074 newMap!16))) lt!30276)))

(declare-fun lt!30286 () Unit!1919)

(assert (=> b!69081 (= lt!30286 lt!30290)))

(declare-fun lt!30278 () ListLongMap!1407)

(assert (=> b!69081 (= lt!30278 (getCurrentListMapNoExtraKeys!55 (_keys!3812 newMap!16) (ite (or c!9754 c!9759) (_values!2151 newMap!16) lt!30125) (mask!6113 newMap!16) (ite c!9754 (ite c!9756 (extraKeys!2035 newMap!16) lt!30140) (extraKeys!2035 newMap!16)) (zeroValue!2074 newMap!16) (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30289 () (_ BitVec 64))

(assert (=> b!69081 (= lt!30289 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30280 () (_ BitVec 64))

(assert (=> b!69081 (= lt!30280 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30277 () Unit!1919)

(assert (=> b!69081 (= lt!30277 (addApplyDifferent!49 lt!30278 lt!30289 (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16)) lt!30280))))

(assert (=> b!69081 (= (apply!73 (+!90 lt!30278 (tuple2!2103 lt!30289 (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16)))) lt!30280) (apply!73 lt!30278 lt!30280))))

(declare-fun lt!30295 () Unit!1919)

(assert (=> b!69081 (= lt!30295 lt!30277)))

(declare-fun lt!30284 () ListLongMap!1407)

(assert (=> b!69081 (= lt!30284 (getCurrentListMapNoExtraKeys!55 (_keys!3812 newMap!16) (ite (or c!9754 c!9759) (_values!2151 newMap!16) lt!30125) (mask!6113 newMap!16) (ite c!9754 (ite c!9756 (extraKeys!2035 newMap!16) lt!30140) (extraKeys!2035 newMap!16)) (zeroValue!2074 newMap!16) (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30279 () (_ BitVec 64))

(assert (=> b!69081 (= lt!30279 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30287 () (_ BitVec 64))

(assert (=> b!69081 (= lt!30287 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30297 () Unit!1919)

(assert (=> b!69081 (= lt!30297 (addApplyDifferent!49 lt!30284 lt!30279 (zeroValue!2074 newMap!16) lt!30287))))

(assert (=> b!69081 (= (apply!73 (+!90 lt!30284 (tuple2!2103 lt!30279 (zeroValue!2074 newMap!16))) lt!30287) (apply!73 lt!30284 lt!30287))))

(declare-fun lt!30294 () Unit!1919)

(assert (=> b!69081 (= lt!30294 lt!30297)))

(declare-fun lt!30281 () ListLongMap!1407)

(assert (=> b!69081 (= lt!30281 (getCurrentListMapNoExtraKeys!55 (_keys!3812 newMap!16) (ite (or c!9754 c!9759) (_values!2151 newMap!16) lt!30125) (mask!6113 newMap!16) (ite c!9754 (ite c!9756 (extraKeys!2035 newMap!16) lt!30140) (extraKeys!2035 newMap!16)) (zeroValue!2074 newMap!16) (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30296 () (_ BitVec 64))

(assert (=> b!69081 (= lt!30296 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30291 () (_ BitVec 64))

(assert (=> b!69081 (= lt!30291 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!69081 (= lt!30292 (addApplyDifferent!49 lt!30281 lt!30296 (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16)) lt!30291))))

(assert (=> b!69081 (= (apply!73 (+!90 lt!30281 (tuple2!2103 lt!30296 (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16)))) lt!30291) (apply!73 lt!30281 lt!30291))))

(declare-fun b!69082 () Bool)

(declare-fun e!45253 () Bool)

(declare-fun e!45250 () Bool)

(assert (=> b!69082 (= e!45253 e!45250)))

(declare-fun res!37102 () Bool)

(declare-fun call!5895 () Bool)

(assert (=> b!69082 (= res!37102 call!5895)))

(assert (=> b!69082 (=> (not res!37102) (not e!45250))))

(declare-fun d!14929 () Bool)

(declare-fun e!45258 () Bool)

(assert (=> d!14929 e!45258))

(declare-fun res!37098 () Bool)

(assert (=> d!14929 (=> (not res!37098) (not e!45258))))

(assert (=> d!14929 (= res!37098 (or (bvsge #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))))))))

(declare-fun lt!30282 () ListLongMap!1407)

(assert (=> d!14929 (= lt!30293 lt!30282)))

(declare-fun lt!30283 () Unit!1919)

(assert (=> d!14929 (= lt!30283 e!45260)))

(declare-fun c!9839 () Bool)

(declare-fun e!45249 () Bool)

(assert (=> d!14929 (= c!9839 e!45249)))

(declare-fun res!37099 () Bool)

(assert (=> d!14929 (=> (not res!37099) (not e!45249))))

(assert (=> d!14929 (= res!37099 (bvslt #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))))))

(declare-fun e!45259 () ListLongMap!1407)

(assert (=> d!14929 (= lt!30282 e!45259)))

(declare-fun c!9835 () Bool)

(assert (=> d!14929 (= c!9835 (and (not (= (bvand (ite c!9754 (ite c!9756 (extraKeys!2035 newMap!16) lt!30140) (extraKeys!2035 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!9754 (ite c!9756 (extraKeys!2035 newMap!16) lt!30140) (extraKeys!2035 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!14929 (validMask!0 (mask!6113 newMap!16))))

(assert (=> d!14929 (= (getCurrentListMap!417 (_keys!3812 newMap!16) (ite (or c!9754 c!9759) (_values!2151 newMap!16) lt!30125) (mask!6113 newMap!16) (ite c!9754 (ite c!9756 (extraKeys!2035 newMap!16) lt!30140) (extraKeys!2035 newMap!16)) (zeroValue!2074 newMap!16) (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) lt!30293)))

(declare-fun bm!5891 () Bool)

(assert (=> bm!5891 (= call!5895 (contains!714 lt!30293 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!5892 () Bool)

(declare-fun c!9838 () Bool)

(declare-fun call!5894 () ListLongMap!1407)

(declare-fun call!5896 () ListLongMap!1407)

(declare-fun call!5899 () ListLongMap!1407)

(declare-fun call!5900 () ListLongMap!1407)

(assert (=> bm!5892 (= call!5899 (+!90 (ite c!9835 call!5900 (ite c!9838 call!5894 call!5896)) (ite (or c!9835 c!9838) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16))))))))

(declare-fun bm!5893 () Bool)

(assert (=> bm!5893 (= call!5900 (getCurrentListMapNoExtraKeys!55 (_keys!3812 newMap!16) (ite (or c!9754 c!9759) (_values!2151 newMap!16) lt!30125) (mask!6113 newMap!16) (ite c!9754 (ite c!9756 (extraKeys!2035 newMap!16) lt!30140) (extraKeys!2035 newMap!16)) (zeroValue!2074 newMap!16) (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun bm!5894 () Bool)

(assert (=> bm!5894 (= call!5894 call!5900)))

(declare-fun b!69083 () Bool)

(declare-fun e!45256 () ListLongMap!1407)

(assert (=> b!69083 (= e!45256 call!5896)))

(declare-fun b!69084 () Bool)

(declare-fun e!45248 () Bool)

(declare-fun e!45251 () Bool)

(assert (=> b!69084 (= e!45248 e!45251)))

(declare-fun res!37097 () Bool)

(declare-fun call!5898 () Bool)

(assert (=> b!69084 (= res!37097 call!5898)))

(assert (=> b!69084 (=> (not res!37097) (not e!45251))))

(declare-fun b!69085 () Bool)

(declare-fun Unit!1937 () Unit!1919)

(assert (=> b!69085 (= e!45260 Unit!1937)))

(declare-fun b!69086 () Bool)

(assert (=> b!69086 (= e!45249 (validKeyInArray!0 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!69087 () Bool)

(assert (=> b!69087 (= e!45251 (= (apply!73 lt!30293 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2074 newMap!16)))))

(declare-fun b!69088 () Bool)

(assert (=> b!69088 (= e!45250 (= (apply!73 lt!30293 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16))))))

(declare-fun b!69089 () Bool)

(declare-fun res!37100 () Bool)

(assert (=> b!69089 (=> (not res!37100) (not e!45258))))

(assert (=> b!69089 (= res!37100 e!45248)))

(declare-fun c!9836 () Bool)

(assert (=> b!69089 (= c!9836 (not (= (bvand (ite c!9754 (ite c!9756 (extraKeys!2035 newMap!16) lt!30140) (extraKeys!2035 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!69090 () Bool)

(declare-fun e!45252 () ListLongMap!1407)

(assert (=> b!69090 (= e!45259 e!45252)))

(assert (=> b!69090 (= c!9838 (and (not (= (bvand (ite c!9754 (ite c!9756 (extraKeys!2035 newMap!16) lt!30140) (extraKeys!2035 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!9754 (ite c!9756 (extraKeys!2035 newMap!16) lt!30140) (extraKeys!2035 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!69091 () Bool)

(assert (=> b!69091 (= e!45258 e!45253)))

(declare-fun c!9834 () Bool)

(assert (=> b!69091 (= c!9834 (not (= (bvand (ite c!9754 (ite c!9756 (extraKeys!2035 newMap!16) lt!30140) (extraKeys!2035 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!69092 () Bool)

(assert (=> b!69092 (= e!45259 (+!90 call!5899 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16)))))))

(declare-fun b!69093 () Bool)

(declare-fun c!9837 () Bool)

(assert (=> b!69093 (= c!9837 (and (not (= (bvand (ite c!9754 (ite c!9756 (extraKeys!2035 newMap!16) lt!30140) (extraKeys!2035 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!9754 (ite c!9756 (extraKeys!2035 newMap!16) lt!30140) (extraKeys!2035 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!69093 (= e!45252 e!45256)))

(declare-fun b!69094 () Bool)

(declare-fun e!45257 () Bool)

(assert (=> b!69094 (= e!45257 (validKeyInArray!0 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!69095 () Bool)

(assert (=> b!69095 (= e!45253 (not call!5895))))

(declare-fun b!69096 () Bool)

(declare-fun res!37103 () Bool)

(assert (=> b!69096 (=> (not res!37103) (not e!45258))))

(declare-fun e!45255 () Bool)

(assert (=> b!69096 (= res!37103 e!45255)))

(declare-fun res!37101 () Bool)

(assert (=> b!69096 (=> res!37101 e!45255)))

(assert (=> b!69096 (= res!37101 (not e!45257))))

(declare-fun res!37096 () Bool)

(assert (=> b!69096 (=> (not res!37096) (not e!45257))))

(assert (=> b!69096 (= res!37096 (bvslt #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))))))

(declare-fun b!69097 () Bool)

(declare-fun call!5897 () ListLongMap!1407)

(assert (=> b!69097 (= e!45256 call!5897)))

(declare-fun bm!5895 () Bool)

(assert (=> bm!5895 (= call!5897 call!5899)))

(declare-fun bm!5896 () Bool)

(assert (=> bm!5896 (= call!5896 call!5894)))

(declare-fun b!69098 () Bool)

(assert (=> b!69098 (= e!45252 call!5897)))

(declare-fun b!69099 () Bool)

(assert (=> b!69099 (= e!45255 e!45254)))

(declare-fun res!37104 () Bool)

(assert (=> b!69099 (=> (not res!37104) (not e!45254))))

(assert (=> b!69099 (= res!37104 (contains!714 lt!30293 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!69099 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))))))

(declare-fun bm!5897 () Bool)

(assert (=> bm!5897 (= call!5898 (contains!714 lt!30293 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69100 () Bool)

(assert (=> b!69100 (= e!45248 (not call!5898))))

(assert (= (and d!14929 c!9835) b!69092))

(assert (= (and d!14929 (not c!9835)) b!69090))

(assert (= (and b!69090 c!9838) b!69098))

(assert (= (and b!69090 (not c!9838)) b!69093))

(assert (= (and b!69093 c!9837) b!69097))

(assert (= (and b!69093 (not c!9837)) b!69083))

(assert (= (or b!69097 b!69083) bm!5896))

(assert (= (or b!69098 bm!5896) bm!5894))

(assert (= (or b!69098 b!69097) bm!5895))

(assert (= (or b!69092 bm!5894) bm!5893))

(assert (= (or b!69092 bm!5895) bm!5892))

(assert (= (and d!14929 res!37099) b!69086))

(assert (= (and d!14929 c!9839) b!69081))

(assert (= (and d!14929 (not c!9839)) b!69085))

(assert (= (and d!14929 res!37098) b!69096))

(assert (= (and b!69096 res!37096) b!69094))

(assert (= (and b!69096 (not res!37101)) b!69099))

(assert (= (and b!69099 res!37104) b!69080))

(assert (= (and b!69096 res!37103) b!69089))

(assert (= (and b!69089 c!9836) b!69084))

(assert (= (and b!69089 (not c!9836)) b!69100))

(assert (= (and b!69084 res!37097) b!69087))

(assert (= (or b!69084 b!69100) bm!5897))

(assert (= (and b!69089 res!37100) b!69091))

(assert (= (and b!69091 c!9834) b!69082))

(assert (= (and b!69091 (not c!9834)) b!69095))

(assert (= (and b!69082 res!37102) b!69088))

(assert (= (or b!69082 b!69095) bm!5891))

(declare-fun b_lambda!3097 () Bool)

(assert (=> (not b_lambda!3097) (not b!69080)))

(assert (=> b!69080 t!4980))

(declare-fun b_and!4259 () Bool)

(assert (= b_and!4255 (and (=> t!4980 result!2619) b_and!4259)))

(assert (=> b!69080 t!4982))

(declare-fun b_and!4261 () Bool)

(assert (= b_and!4257 (and (=> t!4982 result!2621) b_and!4261)))

(declare-fun m!65107 () Bool)

(assert (=> bm!5897 m!65107))

(declare-fun m!65109 () Bool)

(assert (=> bm!5892 m!65109))

(declare-fun m!65111 () Bool)

(assert (=> b!69092 m!65111))

(declare-fun m!65113 () Bool)

(assert (=> bm!5891 m!65113))

(assert (=> b!69086 m!64775))

(assert (=> b!69086 m!64775))

(assert (=> b!69086 m!64777))

(assert (=> b!69099 m!64775))

(assert (=> b!69099 m!64775))

(declare-fun m!65115 () Bool)

(assert (=> b!69099 m!65115))

(declare-fun m!65117 () Bool)

(assert (=> b!69087 m!65117))

(declare-fun m!65119 () Bool)

(assert (=> b!69088 m!65119))

(assert (=> b!69080 m!64807))

(declare-fun m!65121 () Bool)

(assert (=> b!69080 m!65121))

(assert (=> b!69080 m!64807))

(declare-fun m!65123 () Bool)

(assert (=> b!69080 m!65123))

(assert (=> b!69080 m!65121))

(assert (=> b!69080 m!64775))

(declare-fun m!65125 () Bool)

(assert (=> b!69080 m!65125))

(assert (=> b!69080 m!64775))

(assert (=> d!14929 m!64759))

(declare-fun m!65127 () Bool)

(assert (=> bm!5893 m!65127))

(assert (=> b!69094 m!64775))

(assert (=> b!69094 m!64775))

(assert (=> b!69094 m!64777))

(declare-fun m!65129 () Bool)

(assert (=> b!69081 m!65129))

(declare-fun m!65131 () Bool)

(assert (=> b!69081 m!65131))

(declare-fun m!65133 () Bool)

(assert (=> b!69081 m!65133))

(declare-fun m!65135 () Bool)

(assert (=> b!69081 m!65135))

(declare-fun m!65137 () Bool)

(assert (=> b!69081 m!65137))

(declare-fun m!65139 () Bool)

(assert (=> b!69081 m!65139))

(declare-fun m!65141 () Bool)

(assert (=> b!69081 m!65141))

(declare-fun m!65143 () Bool)

(assert (=> b!69081 m!65143))

(assert (=> b!69081 m!65137))

(declare-fun m!65145 () Bool)

(assert (=> b!69081 m!65145))

(assert (=> b!69081 m!64775))

(declare-fun m!65147 () Bool)

(assert (=> b!69081 m!65147))

(declare-fun m!65149 () Bool)

(assert (=> b!69081 m!65149))

(declare-fun m!65151 () Bool)

(assert (=> b!69081 m!65151))

(assert (=> b!69081 m!65139))

(declare-fun m!65153 () Bool)

(assert (=> b!69081 m!65153))

(assert (=> b!69081 m!65147))

(assert (=> b!69081 m!65131))

(declare-fun m!65155 () Bool)

(assert (=> b!69081 m!65155))

(assert (=> b!69081 m!65127))

(declare-fun m!65157 () Bool)

(assert (=> b!69081 m!65157))

(assert (=> bm!5854 d!14929))

(declare-fun b!69103 () Bool)

(declare-fun e!45262 () Option!137)

(assert (=> b!69103 (= e!45262 (getValueByKey!131 (t!4972 (toList!719 lt!30045)) (_1!1062 lt!29892)))))

(declare-fun b!69102 () Bool)

(declare-fun e!45261 () Option!137)

(assert (=> b!69102 (= e!45261 e!45262)))

(declare-fun c!9841 () Bool)

(assert (=> b!69102 (= c!9841 (and ((_ is Cons!1465) (toList!719 lt!30045)) (not (= (_1!1062 (h!2050 (toList!719 lt!30045))) (_1!1062 lt!29892)))))))

(declare-fun b!69104 () Bool)

(assert (=> b!69104 (= e!45262 None!135)))

(declare-fun b!69101 () Bool)

(assert (=> b!69101 (= e!45261 (Some!136 (_2!1062 (h!2050 (toList!719 lt!30045)))))))

(declare-fun d!14931 () Bool)

(declare-fun c!9840 () Bool)

(assert (=> d!14931 (= c!9840 (and ((_ is Cons!1465) (toList!719 lt!30045)) (= (_1!1062 (h!2050 (toList!719 lt!30045))) (_1!1062 lt!29892))))))

(assert (=> d!14931 (= (getValueByKey!131 (toList!719 lt!30045) (_1!1062 lt!29892)) e!45261)))

(assert (= (and d!14931 c!9840) b!69101))

(assert (= (and d!14931 (not c!9840)) b!69102))

(assert (= (and b!69102 c!9841) b!69103))

(assert (= (and b!69102 (not c!9841)) b!69104))

(declare-fun m!65159 () Bool)

(assert (=> b!69103 m!65159))

(assert (=> b!68681 d!14931))

(declare-fun d!14933 () Bool)

(declare-fun res!37105 () Bool)

(declare-fun e!45263 () Bool)

(assert (=> d!14933 (=> res!37105 e!45263)))

(assert (=> d!14933 (= res!37105 (= (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(assert (=> d!14933 (= (arrayContainsKey!0 (_keys!3812 newMap!16) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) #b00000000000000000000000000000000) e!45263)))

(declare-fun b!69105 () Bool)

(declare-fun e!45264 () Bool)

(assert (=> b!69105 (= e!45263 e!45264)))

(declare-fun res!37106 () Bool)

(assert (=> b!69105 (=> (not res!37106) (not e!45264))))

(assert (=> b!69105 (= res!37106 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2077 (_keys!3812 newMap!16))))))

(declare-fun b!69106 () Bool)

(assert (=> b!69106 (= e!45264 (arrayContainsKey!0 (_keys!3812 newMap!16) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!14933 (not res!37105)) b!69105))

(assert (= (and b!69105 res!37106) b!69106))

(assert (=> d!14933 m!64775))

(assert (=> b!69106 m!64407))

(declare-fun m!65161 () Bool)

(assert (=> b!69106 m!65161))

(assert (=> bm!5843 d!14933))

(declare-fun d!14935 () Bool)

(assert (=> d!14935 (= (validKeyInArray!0 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!68597 d!14935))

(assert (=> d!14777 d!14843))

(declare-fun d!14937 () Bool)

(assert (=> d!14937 (= (validKeyInArray!0 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) (and (not (= (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!68636 d!14937))

(declare-fun b!69109 () Bool)

(declare-fun e!45266 () Option!137)

(assert (=> b!69109 (= e!45266 (getValueByKey!131 (t!4972 (toList!719 lt!30049)) (_1!1062 lt!29893)))))

(declare-fun b!69108 () Bool)

(declare-fun e!45265 () Option!137)

(assert (=> b!69108 (= e!45265 e!45266)))

(declare-fun c!9843 () Bool)

(assert (=> b!69108 (= c!9843 (and ((_ is Cons!1465) (toList!719 lt!30049)) (not (= (_1!1062 (h!2050 (toList!719 lt!30049))) (_1!1062 lt!29893)))))))

(declare-fun b!69110 () Bool)

(assert (=> b!69110 (= e!45266 None!135)))

(declare-fun b!69107 () Bool)

(assert (=> b!69107 (= e!45265 (Some!136 (_2!1062 (h!2050 (toList!719 lt!30049)))))))

(declare-fun d!14939 () Bool)

(declare-fun c!9842 () Bool)

(assert (=> d!14939 (= c!9842 (and ((_ is Cons!1465) (toList!719 lt!30049)) (= (_1!1062 (h!2050 (toList!719 lt!30049))) (_1!1062 lt!29893))))))

(assert (=> d!14939 (= (getValueByKey!131 (toList!719 lt!30049) (_1!1062 lt!29893)) e!45265)))

(assert (= (and d!14939 c!9842) b!69107))

(assert (= (and d!14939 (not c!9842)) b!69108))

(assert (= (and b!69108 c!9843) b!69109))

(assert (= (and b!69108 (not c!9843)) b!69110))

(declare-fun m!65163 () Bool)

(assert (=> b!69109 m!65163))

(assert (=> b!68683 d!14939))

(assert (=> b!68634 d!14937))

(declare-fun d!14941 () Bool)

(declare-fun e!45267 () Bool)

(assert (=> d!14941 e!45267))

(declare-fun res!37107 () Bool)

(assert (=> d!14941 (=> res!37107 e!45267)))

(declare-fun lt!30299 () Bool)

(assert (=> d!14941 (= res!37107 (not lt!30299))))

(declare-fun lt!30298 () Bool)

(assert (=> d!14941 (= lt!30299 lt!30298)))

(declare-fun lt!30300 () Unit!1919)

(declare-fun e!45268 () Unit!1919)

(assert (=> d!14941 (= lt!30300 e!45268)))

(declare-fun c!9844 () Bool)

(assert (=> d!14941 (= c!9844 lt!30298)))

(assert (=> d!14941 (= lt!30298 (containsKey!135 (toList!719 call!5856) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(assert (=> d!14941 (= (contains!714 call!5856 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) lt!30299)))

(declare-fun b!69111 () Bool)

(declare-fun lt!30301 () Unit!1919)

(assert (=> b!69111 (= e!45268 lt!30301)))

(assert (=> b!69111 (= lt!30301 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 call!5856) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(assert (=> b!69111 (isDefined!84 (getValueByKey!131 (toList!719 call!5856) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(declare-fun b!69112 () Bool)

(declare-fun Unit!1938 () Unit!1919)

(assert (=> b!69112 (= e!45268 Unit!1938)))

(declare-fun b!69113 () Bool)

(assert (=> b!69113 (= e!45267 (isDefined!84 (getValueByKey!131 (toList!719 call!5856) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355))))))

(assert (= (and d!14941 c!9844) b!69111))

(assert (= (and d!14941 (not c!9844)) b!69112))

(assert (= (and d!14941 (not res!37107)) b!69113))

(assert (=> d!14941 m!64407))

(declare-fun m!65165 () Bool)

(assert (=> d!14941 m!65165))

(assert (=> b!69111 m!64407))

(declare-fun m!65167 () Bool)

(assert (=> b!69111 m!65167))

(assert (=> b!69111 m!64407))

(declare-fun m!65169 () Bool)

(assert (=> b!69111 m!65169))

(assert (=> b!69111 m!65169))

(declare-fun m!65171 () Bool)

(assert (=> b!69111 m!65171))

(assert (=> b!69113 m!64407))

(assert (=> b!69113 m!65169))

(assert (=> b!69113 m!65169))

(assert (=> b!69113 m!65171))

(assert (=> b!68810 d!14941))

(declare-fun b!69114 () Bool)

(declare-fun e!45272 () Bool)

(declare-fun e!45271 () Bool)

(assert (=> b!69114 (= e!45272 e!45271)))

(declare-fun c!9845 () Bool)

(assert (=> b!69114 (= c!9845 (validKeyInArray!0 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!69115 () Bool)

(declare-fun call!5901 () Bool)

(assert (=> b!69115 (= e!45271 call!5901)))

(declare-fun b!69116 () Bool)

(declare-fun e!45269 () Bool)

(assert (=> b!69116 (= e!45269 e!45272)))

(declare-fun res!37110 () Bool)

(assert (=> b!69116 (=> (not res!37110) (not e!45272))))

(declare-fun e!45270 () Bool)

(assert (=> b!69116 (= res!37110 (not e!45270))))

(declare-fun res!37108 () Bool)

(assert (=> b!69116 (=> (not res!37108) (not e!45270))))

(assert (=> b!69116 (= res!37108 (validKeyInArray!0 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!14943 () Bool)

(declare-fun res!37109 () Bool)

(assert (=> d!14943 (=> res!37109 e!45269)))

(assert (=> d!14943 (= res!37109 (bvsge #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))))))

(assert (=> d!14943 (= (arrayNoDuplicates!0 (_keys!3812 newMap!16) #b00000000000000000000000000000000 Nil!1467) e!45269)))

(declare-fun b!69117 () Bool)

(assert (=> b!69117 (= e!45271 call!5901)))

(declare-fun b!69118 () Bool)

(assert (=> b!69118 (= e!45270 (contains!715 Nil!1467 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!5898 () Bool)

(assert (=> bm!5898 (= call!5901 (arrayNoDuplicates!0 (_keys!3812 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!9845 (Cons!1466 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000) Nil!1467) Nil!1467)))))

(assert (= (and d!14943 (not res!37109)) b!69116))

(assert (= (and b!69116 res!37108) b!69118))

(assert (= (and b!69116 res!37110) b!69114))

(assert (= (and b!69114 c!9845) b!69115))

(assert (= (and b!69114 (not c!9845)) b!69117))

(assert (= (or b!69115 b!69117) bm!5898))

(assert (=> b!69114 m!64775))

(assert (=> b!69114 m!64775))

(assert (=> b!69114 m!64777))

(assert (=> b!69116 m!64775))

(assert (=> b!69116 m!64775))

(assert (=> b!69116 m!64777))

(assert (=> b!69118 m!64775))

(assert (=> b!69118 m!64775))

(declare-fun m!65173 () Bool)

(assert (=> b!69118 m!65173))

(assert (=> bm!5898 m!64775))

(declare-fun m!65175 () Bool)

(assert (=> bm!5898 m!65175))

(assert (=> b!68830 d!14943))

(declare-fun d!14945 () Bool)

(declare-fun lt!30304 () Bool)

(declare-fun content!74 (List!1470) (InoxSet (_ BitVec 64)))

(assert (=> d!14945 (= lt!30304 (select (content!74 Nil!1467) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(declare-fun e!45278 () Bool)

(assert (=> d!14945 (= lt!30304 e!45278)))

(declare-fun res!37115 () Bool)

(assert (=> d!14945 (=> (not res!37115) (not e!45278))))

(assert (=> d!14945 (= res!37115 ((_ is Cons!1466) Nil!1467))))

(assert (=> d!14945 (= (contains!715 Nil!1467 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) lt!30304)))

(declare-fun b!69123 () Bool)

(declare-fun e!45277 () Bool)

(assert (=> b!69123 (= e!45278 e!45277)))

(declare-fun res!37116 () Bool)

(assert (=> b!69123 (=> res!37116 e!45277)))

(assert (=> b!69123 (= res!37116 (= (h!2051 Nil!1467) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(declare-fun b!69124 () Bool)

(assert (=> b!69124 (= e!45277 (contains!715 (t!4973 Nil!1467) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(assert (= (and d!14945 res!37115) b!69123))

(assert (= (and b!69123 (not res!37116)) b!69124))

(declare-fun m!65177 () Bool)

(assert (=> d!14945 m!65177))

(assert (=> d!14945 m!64407))

(declare-fun m!65179 () Bool)

(assert (=> d!14945 m!65179))

(assert (=> b!69124 m!64407))

(declare-fun m!65181 () Bool)

(assert (=> b!69124 m!65181))

(assert (=> b!68638 d!14945))

(declare-fun b!69127 () Bool)

(declare-fun e!45280 () Option!137)

(assert (=> b!69127 (= e!45280 (getValueByKey!131 (t!4972 (toList!719 lt!30056)) (_1!1062 lt!29893)))))

(declare-fun b!69126 () Bool)

(declare-fun e!45279 () Option!137)

(assert (=> b!69126 (= e!45279 e!45280)))

(declare-fun c!9847 () Bool)

(assert (=> b!69126 (= c!9847 (and ((_ is Cons!1465) (toList!719 lt!30056)) (not (= (_1!1062 (h!2050 (toList!719 lt!30056))) (_1!1062 lt!29893)))))))

(declare-fun b!69128 () Bool)

(assert (=> b!69128 (= e!45280 None!135)))

(declare-fun b!69125 () Bool)

(assert (=> b!69125 (= e!45279 (Some!136 (_2!1062 (h!2050 (toList!719 lt!30056)))))))

(declare-fun d!14947 () Bool)

(declare-fun c!9846 () Bool)

(assert (=> d!14947 (= c!9846 (and ((_ is Cons!1465) (toList!719 lt!30056)) (= (_1!1062 (h!2050 (toList!719 lt!30056))) (_1!1062 lt!29893))))))

(assert (=> d!14947 (= (getValueByKey!131 (toList!719 lt!30056) (_1!1062 lt!29893)) e!45279)))

(assert (= (and d!14947 c!9846) b!69125))

(assert (= (and d!14947 (not c!9846)) b!69126))

(assert (= (and b!69126 c!9847) b!69127))

(assert (= (and b!69126 (not c!9847)) b!69128))

(declare-fun m!65183 () Bool)

(assert (=> b!69127 m!65183))

(assert (=> b!68685 d!14947))

(declare-fun d!14949 () Bool)

(declare-fun e!45281 () Bool)

(assert (=> d!14949 e!45281))

(declare-fun res!37118 () Bool)

(assert (=> d!14949 (=> (not res!37118) (not e!45281))))

(declare-fun lt!30307 () ListLongMap!1407)

(assert (=> d!14949 (= res!37118 (contains!714 lt!30307 (_1!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun lt!30308 () List!1469)

(assert (=> d!14949 (= lt!30307 (ListLongMap!1408 lt!30308))))

(declare-fun lt!30305 () Unit!1919)

(declare-fun lt!30306 () Unit!1919)

(assert (=> d!14949 (= lt!30305 lt!30306)))

(assert (=> d!14949 (= (getValueByKey!131 lt!30308 (_1!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))) (Some!136 (_2!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> d!14949 (= lt!30306 (lemmaContainsTupThenGetReturnValue!48 lt!30308 (_1!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992))))) (_2!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> d!14949 (= lt!30308 (insertStrictlySorted!51 (toList!719 call!5787) (_1!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992))))) (_2!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> d!14949 (= (+!90 call!5787 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992))))) lt!30307)))

(declare-fun b!69129 () Bool)

(declare-fun res!37117 () Bool)

(assert (=> b!69129 (=> (not res!37117) (not e!45281))))

(assert (=> b!69129 (= res!37117 (= (getValueByKey!131 (toList!719 lt!30307) (_1!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))) (Some!136 (_2!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(declare-fun b!69130 () Bool)

(assert (=> b!69130 (= e!45281 (contains!716 (toList!719 lt!30307) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))))

(assert (= (and d!14949 res!37118) b!69129))

(assert (= (and b!69129 res!37117) b!69130))

(declare-fun m!65185 () Bool)

(assert (=> d!14949 m!65185))

(declare-fun m!65187 () Bool)

(assert (=> d!14949 m!65187))

(declare-fun m!65189 () Bool)

(assert (=> d!14949 m!65189))

(declare-fun m!65191 () Bool)

(assert (=> d!14949 m!65191))

(declare-fun m!65193 () Bool)

(assert (=> b!69129 m!65193))

(declare-fun m!65195 () Bool)

(assert (=> b!69130 m!65195))

(assert (=> b!68603 d!14949))

(declare-fun b!69139 () Bool)

(declare-fun e!45287 () (_ BitVec 32))

(declare-fun call!5904 () (_ BitVec 32))

(assert (=> b!69139 (= e!45287 (bvadd #b00000000000000000000000000000001 call!5904))))

(declare-fun bm!5901 () Bool)

(assert (=> bm!5901 (= call!5904 (arrayCountValidKeys!0 (_keys!3812 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2077 (_keys!3812 newMap!16))))))

(declare-fun d!14951 () Bool)

(declare-fun lt!30311 () (_ BitVec 32))

(assert (=> d!14951 (and (bvsge lt!30311 #b00000000000000000000000000000000) (bvsle lt!30311 (bvsub (size!2077 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!45286 () (_ BitVec 32))

(assert (=> d!14951 (= lt!30311 e!45286)))

(declare-fun c!9853 () Bool)

(assert (=> d!14951 (= c!9853 (bvsge #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))))))

(assert (=> d!14951 (and (bvsle #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2077 (_keys!3812 newMap!16)) (size!2077 (_keys!3812 newMap!16))))))

(assert (=> d!14951 (= (arrayCountValidKeys!0 (_keys!3812 newMap!16) #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))) lt!30311)))

(declare-fun b!69140 () Bool)

(assert (=> b!69140 (= e!45287 call!5904)))

(declare-fun b!69141 () Bool)

(assert (=> b!69141 (= e!45286 #b00000000000000000000000000000000)))

(declare-fun b!69142 () Bool)

(assert (=> b!69142 (= e!45286 e!45287)))

(declare-fun c!9852 () Bool)

(assert (=> b!69142 (= c!9852 (validKeyInArray!0 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!14951 c!9853) b!69141))

(assert (= (and d!14951 (not c!9853)) b!69142))

(assert (= (and b!69142 c!9852) b!69139))

(assert (= (and b!69142 (not c!9852)) b!69140))

(assert (= (or b!69139 b!69140) bm!5901))

(declare-fun m!65197 () Bool)

(assert (=> bm!5901 m!65197))

(assert (=> b!69142 m!64775))

(assert (=> b!69142 m!64775))

(assert (=> b!69142 m!64777))

(assert (=> b!68828 d!14951))

(assert (=> b!68663 d!14865))

(declare-fun d!14953 () Bool)

(declare-fun res!37119 () Bool)

(declare-fun e!45288 () Bool)

(assert (=> d!14953 (=> (not res!37119) (not e!45288))))

(assert (=> d!14953 (= res!37119 (simpleValid!49 (_2!1061 lt!30148)))))

(assert (=> d!14953 (= (valid!283 (_2!1061 lt!30148)) e!45288)))

(declare-fun b!69143 () Bool)

(declare-fun res!37120 () Bool)

(assert (=> b!69143 (=> (not res!37120) (not e!45288))))

(assert (=> b!69143 (= res!37120 (= (arrayCountValidKeys!0 (_keys!3812 (_2!1061 lt!30148)) #b00000000000000000000000000000000 (size!2077 (_keys!3812 (_2!1061 lt!30148)))) (_size!388 (_2!1061 lt!30148))))))

(declare-fun b!69144 () Bool)

(declare-fun res!37121 () Bool)

(assert (=> b!69144 (=> (not res!37121) (not e!45288))))

(assert (=> b!69144 (= res!37121 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3812 (_2!1061 lt!30148)) (mask!6113 (_2!1061 lt!30148))))))

(declare-fun b!69145 () Bool)

(assert (=> b!69145 (= e!45288 (arrayNoDuplicates!0 (_keys!3812 (_2!1061 lt!30148)) #b00000000000000000000000000000000 Nil!1467))))

(assert (= (and d!14953 res!37119) b!69143))

(assert (= (and b!69143 res!37120) b!69144))

(assert (= (and b!69144 res!37121) b!69145))

(declare-fun m!65199 () Bool)

(assert (=> d!14953 m!65199))

(declare-fun m!65201 () Bool)

(assert (=> b!69143 m!65201))

(declare-fun m!65203 () Bool)

(assert (=> b!69144 m!65203))

(declare-fun m!65205 () Bool)

(assert (=> b!69145 m!65205))

(assert (=> d!14817 d!14953))

(assert (=> d!14817 d!14821))

(declare-fun d!14955 () Bool)

(declare-fun e!45289 () Bool)

(assert (=> d!14955 e!45289))

(declare-fun res!37122 () Bool)

(assert (=> d!14955 (=> res!37122 e!45289)))

(declare-fun lt!30313 () Bool)

(assert (=> d!14955 (= res!37122 (not lt!30313))))

(declare-fun lt!30312 () Bool)

(assert (=> d!14955 (= lt!30313 lt!30312)))

(declare-fun lt!30314 () Unit!1919)

(declare-fun e!45290 () Unit!1919)

(assert (=> d!14955 (= lt!30314 e!45290)))

(declare-fun c!9854 () Bool)

(assert (=> d!14955 (= c!9854 lt!30312)))

(assert (=> d!14955 (= lt!30312 (containsKey!135 (toList!719 lt!30029) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!14955 (= (contains!714 lt!30029 #b0000000000000000000000000000000000000000000000000000000000000000) lt!30313)))

(declare-fun b!69146 () Bool)

(declare-fun lt!30315 () Unit!1919)

(assert (=> b!69146 (= e!45290 lt!30315)))

(assert (=> b!69146 (= lt!30315 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 lt!30029) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!69146 (isDefined!84 (getValueByKey!131 (toList!719 lt!30029) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69147 () Bool)

(declare-fun Unit!1939 () Unit!1919)

(assert (=> b!69147 (= e!45290 Unit!1939)))

(declare-fun b!69148 () Bool)

(assert (=> b!69148 (= e!45289 (isDefined!84 (getValueByKey!131 (toList!719 lt!30029) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14955 c!9854) b!69146))

(assert (= (and d!14955 (not c!9854)) b!69147))

(assert (= (and d!14955 (not res!37122)) b!69148))

(declare-fun m!65207 () Bool)

(assert (=> d!14955 m!65207))

(declare-fun m!65209 () Bool)

(assert (=> b!69146 m!65209))

(declare-fun m!65211 () Bool)

(assert (=> b!69146 m!65211))

(assert (=> b!69146 m!65211))

(declare-fun m!65213 () Bool)

(assert (=> b!69146 m!65213))

(assert (=> b!69148 m!65211))

(assert (=> b!69148 m!65211))

(assert (=> b!69148 m!65213))

(assert (=> d!14801 d!14955))

(assert (=> d!14801 d!14813))

(declare-fun d!14957 () Bool)

(declare-fun e!45291 () Bool)

(assert (=> d!14957 e!45291))

(declare-fun res!37124 () Bool)

(assert (=> d!14957 (=> (not res!37124) (not e!45291))))

(declare-fun lt!30318 () ListLongMap!1407)

(assert (=> d!14957 (= res!37124 (contains!714 lt!30318 (_1!1062 (ite c!9754 (ite c!9756 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))))))

(declare-fun lt!30319 () List!1469)

(assert (=> d!14957 (= lt!30318 (ListLongMap!1408 lt!30319))))

(declare-fun lt!30316 () Unit!1919)

(declare-fun lt!30317 () Unit!1919)

(assert (=> d!14957 (= lt!30316 lt!30317)))

(assert (=> d!14957 (= (getValueByKey!131 lt!30319 (_1!1062 (ite c!9754 (ite c!9756 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))) (Some!136 (_2!1062 (ite c!9754 (ite c!9756 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))))))

(assert (=> d!14957 (= lt!30317 (lemmaContainsTupThenGetReturnValue!48 lt!30319 (_1!1062 (ite c!9754 (ite c!9756 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))) (_2!1062 (ite c!9754 (ite c!9756 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))))))

(assert (=> d!14957 (= lt!30319 (insertStrictlySorted!51 (toList!719 e!45078) (_1!1062 (ite c!9754 (ite c!9756 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))) (_2!1062 (ite c!9754 (ite c!9756 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))))))

(assert (=> d!14957 (= (+!90 e!45078 (ite c!9754 (ite c!9756 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))) lt!30318)))

(declare-fun b!69149 () Bool)

(declare-fun res!37123 () Bool)

(assert (=> b!69149 (=> (not res!37123) (not e!45291))))

(assert (=> b!69149 (= res!37123 (= (getValueByKey!131 (toList!719 lt!30318) (_1!1062 (ite c!9754 (ite c!9756 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))) (Some!136 (_2!1062 (ite c!9754 (ite c!9756 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))))

(declare-fun b!69150 () Bool)

(assert (=> b!69150 (= e!45291 (contains!716 (toList!719 lt!30318) (ite c!9754 (ite c!9756 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))

(assert (= (and d!14957 res!37124) b!69149))

(assert (= (and b!69149 res!37123) b!69150))

(declare-fun m!65215 () Bool)

(assert (=> d!14957 m!65215))

(declare-fun m!65217 () Bool)

(assert (=> d!14957 m!65217))

(declare-fun m!65219 () Bool)

(assert (=> d!14957 m!65219))

(declare-fun m!65221 () Bool)

(assert (=> d!14957 m!65221))

(declare-fun m!65223 () Bool)

(assert (=> b!69149 m!65223))

(declare-fun m!65225 () Bool)

(assert (=> b!69150 m!65225))

(assert (=> bm!5847 d!14957))

(assert (=> b!68605 d!14935))

(assert (=> d!14779 d!14813))

(declare-fun d!14959 () Bool)

(assert (=> d!14959 (= (apply!73 (+!90 lt!29987 (tuple2!2103 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))) lt!29990) (apply!73 lt!29987 lt!29990))))

(declare-fun lt!30322 () Unit!1919)

(declare-fun choose!388 (ListLongMap!1407 (_ BitVec 64) V!2923 (_ BitVec 64)) Unit!1919)

(assert (=> d!14959 (= lt!30322 (choose!388 lt!29987 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))) lt!29990))))

(declare-fun e!45294 () Bool)

(assert (=> d!14959 e!45294))

(declare-fun res!37127 () Bool)

(assert (=> d!14959 (=> (not res!37127) (not e!45294))))

(assert (=> d!14959 (= res!37127 (contains!714 lt!29987 lt!29990))))

(assert (=> d!14959 (= (addApplyDifferent!49 lt!29987 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))) lt!29990) lt!30322)))

(declare-fun b!69154 () Bool)

(assert (=> b!69154 (= e!45294 (not (= lt!29990 lt!29982)))))

(assert (= (and d!14959 res!37127) b!69154))

(assert (=> d!14959 m!64547))

(declare-fun m!65227 () Bool)

(assert (=> d!14959 m!65227))

(declare-fun m!65229 () Bool)

(assert (=> d!14959 m!65229))

(assert (=> d!14959 m!64565))

(assert (=> d!14959 m!64547))

(assert (=> d!14959 m!64549))

(assert (=> b!68592 d!14959))

(declare-fun d!14961 () Bool)

(assert (=> d!14961 (= (apply!73 lt!29981 lt!29983) (get!1127 (getValueByKey!131 (toList!719 lt!29981) lt!29983)))))

(declare-fun bs!2970 () Bool)

(assert (= bs!2970 d!14961))

(declare-fun m!65231 () Bool)

(assert (=> bs!2970 m!65231))

(assert (=> bs!2970 m!65231))

(declare-fun m!65233 () Bool)

(assert (=> bs!2970 m!65233))

(assert (=> b!68592 d!14961))

(declare-fun d!14963 () Bool)

(assert (=> d!14963 (= (apply!73 (+!90 lt!29981 (tuple2!2103 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992))))) lt!29983) (apply!73 lt!29981 lt!29983))))

(declare-fun lt!30323 () Unit!1919)

(assert (=> d!14963 (= lt!30323 (choose!388 lt!29981 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992))) lt!29983))))

(declare-fun e!45295 () Bool)

(assert (=> d!14963 e!45295))

(declare-fun res!37128 () Bool)

(assert (=> d!14963 (=> (not res!37128) (not e!45295))))

(assert (=> d!14963 (= res!37128 (contains!714 lt!29981 lt!29983))))

(assert (=> d!14963 (= (addApplyDifferent!49 lt!29981 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992))) lt!29983) lt!30323)))

(declare-fun b!69155 () Bool)

(assert (=> b!69155 (= e!45295 (not (= lt!29983 lt!29992)))))

(assert (= (and d!14963 res!37128) b!69155))

(assert (=> d!14963 m!64545))

(declare-fun m!65235 () Bool)

(assert (=> d!14963 m!65235))

(declare-fun m!65237 () Bool)

(assert (=> d!14963 m!65237))

(assert (=> d!14963 m!64561))

(assert (=> d!14963 m!64545))

(assert (=> d!14963 m!64553))

(assert (=> b!68592 d!14963))

(assert (=> b!68592 d!14801))

(declare-fun d!14965 () Bool)

(declare-fun e!45296 () Bool)

(assert (=> d!14965 e!45296))

(declare-fun res!37130 () Bool)

(assert (=> d!14965 (=> (not res!37130) (not e!45296))))

(declare-fun lt!30326 () ListLongMap!1407)

(assert (=> d!14965 (= res!37130 (contains!714 lt!30326 (_1!1062 (tuple2!2103 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun lt!30327 () List!1469)

(assert (=> d!14965 (= lt!30326 (ListLongMap!1408 lt!30327))))

(declare-fun lt!30324 () Unit!1919)

(declare-fun lt!30325 () Unit!1919)

(assert (=> d!14965 (= lt!30324 lt!30325)))

(assert (=> d!14965 (= (getValueByKey!131 lt!30327 (_1!1062 (tuple2!2103 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))) (Some!136 (_2!1062 (tuple2!2103 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> d!14965 (= lt!30325 (lemmaContainsTupThenGetReturnValue!48 lt!30327 (_1!1062 (tuple2!2103 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992))))) (_2!1062 (tuple2!2103 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> d!14965 (= lt!30327 (insertStrictlySorted!51 (toList!719 lt!29981) (_1!1062 (tuple2!2103 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992))))) (_2!1062 (tuple2!2103 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> d!14965 (= (+!90 lt!29981 (tuple2!2103 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992))))) lt!30326)))

(declare-fun b!69156 () Bool)

(declare-fun res!37129 () Bool)

(assert (=> b!69156 (=> (not res!37129) (not e!45296))))

(assert (=> b!69156 (= res!37129 (= (getValueByKey!131 (toList!719 lt!30326) (_1!1062 (tuple2!2103 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))) (Some!136 (_2!1062 (tuple2!2103 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(declare-fun b!69157 () Bool)

(assert (=> b!69157 (= e!45296 (contains!716 (toList!719 lt!30326) (tuple2!2103 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))))

(assert (= (and d!14965 res!37130) b!69156))

(assert (= (and b!69156 res!37129) b!69157))

(declare-fun m!65239 () Bool)

(assert (=> d!14965 m!65239))

(declare-fun m!65241 () Bool)

(assert (=> d!14965 m!65241))

(declare-fun m!65243 () Bool)

(assert (=> d!14965 m!65243))

(declare-fun m!65245 () Bool)

(assert (=> d!14965 m!65245))

(declare-fun m!65247 () Bool)

(assert (=> b!69156 m!65247))

(declare-fun m!65249 () Bool)

(assert (=> b!69157 m!65249))

(assert (=> b!68592 d!14965))

(declare-fun d!14967 () Bool)

(declare-fun e!45297 () Bool)

(assert (=> d!14967 e!45297))

(declare-fun res!37132 () Bool)

(assert (=> d!14967 (=> (not res!37132) (not e!45297))))

(declare-fun lt!30330 () ListLongMap!1407)

(assert (=> d!14967 (= res!37132 (contains!714 lt!30330 (_1!1062 (tuple2!2103 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun lt!30331 () List!1469)

(assert (=> d!14967 (= lt!30330 (ListLongMap!1408 lt!30331))))

(declare-fun lt!30328 () Unit!1919)

(declare-fun lt!30329 () Unit!1919)

(assert (=> d!14967 (= lt!30328 lt!30329)))

(assert (=> d!14967 (= (getValueByKey!131 lt!30331 (_1!1062 (tuple2!2103 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))) (Some!136 (_2!1062 (tuple2!2103 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> d!14967 (= lt!30329 (lemmaContainsTupThenGetReturnValue!48 lt!30331 (_1!1062 (tuple2!2103 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992))))) (_2!1062 (tuple2!2103 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> d!14967 (= lt!30331 (insertStrictlySorted!51 (toList!719 lt!29984) (_1!1062 (tuple2!2103 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992))))) (_2!1062 (tuple2!2103 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> d!14967 (= (+!90 lt!29984 (tuple2!2103 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992))))) lt!30330)))

(declare-fun b!69158 () Bool)

(declare-fun res!37131 () Bool)

(assert (=> b!69158 (=> (not res!37131) (not e!45297))))

(assert (=> b!69158 (= res!37131 (= (getValueByKey!131 (toList!719 lt!30330) (_1!1062 (tuple2!2103 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))) (Some!136 (_2!1062 (tuple2!2103 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(declare-fun b!69159 () Bool)

(assert (=> b!69159 (= e!45297 (contains!716 (toList!719 lt!30330) (tuple2!2103 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))))

(assert (= (and d!14967 res!37132) b!69158))

(assert (= (and b!69158 res!37131) b!69159))

(declare-fun m!65251 () Bool)

(assert (=> d!14967 m!65251))

(declare-fun m!65253 () Bool)

(assert (=> d!14967 m!65253))

(declare-fun m!65255 () Bool)

(assert (=> d!14967 m!65255))

(declare-fun m!65257 () Bool)

(assert (=> d!14967 m!65257))

(declare-fun m!65259 () Bool)

(assert (=> b!69158 m!65259))

(declare-fun m!65261 () Bool)

(assert (=> b!69159 m!65261))

(assert (=> b!68592 d!14967))

(declare-fun d!14969 () Bool)

(declare-fun e!45298 () Bool)

(assert (=> d!14969 e!45298))

(declare-fun res!37134 () Bool)

(assert (=> d!14969 (=> (not res!37134) (not e!45298))))

(declare-fun lt!30334 () ListLongMap!1407)

(assert (=> d!14969 (= res!37134 (contains!714 lt!30334 (_1!1062 (tuple2!2103 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun lt!30335 () List!1469)

(assert (=> d!14969 (= lt!30334 (ListLongMap!1408 lt!30335))))

(declare-fun lt!30332 () Unit!1919)

(declare-fun lt!30333 () Unit!1919)

(assert (=> d!14969 (= lt!30332 lt!30333)))

(assert (=> d!14969 (= (getValueByKey!131 lt!30335 (_1!1062 (tuple2!2103 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))) (Some!136 (_2!1062 (tuple2!2103 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> d!14969 (= lt!30333 (lemmaContainsTupThenGetReturnValue!48 lt!30335 (_1!1062 (tuple2!2103 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))) (_2!1062 (tuple2!2103 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> d!14969 (= lt!30335 (insertStrictlySorted!51 (toList!719 lt!29987) (_1!1062 (tuple2!2103 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))) (_2!1062 (tuple2!2103 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> d!14969 (= (+!90 lt!29987 (tuple2!2103 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))) lt!30334)))

(declare-fun b!69160 () Bool)

(declare-fun res!37133 () Bool)

(assert (=> b!69160 (=> (not res!37133) (not e!45298))))

(assert (=> b!69160 (= res!37133 (= (getValueByKey!131 (toList!719 lt!30334) (_1!1062 (tuple2!2103 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))) (Some!136 (_2!1062 (tuple2!2103 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(declare-fun b!69161 () Bool)

(assert (=> b!69161 (= e!45298 (contains!716 (toList!719 lt!30334) (tuple2!2103 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))))

(assert (= (and d!14969 res!37134) b!69160))

(assert (= (and b!69160 res!37133) b!69161))

(declare-fun m!65263 () Bool)

(assert (=> d!14969 m!65263))

(declare-fun m!65265 () Bool)

(assert (=> d!14969 m!65265))

(declare-fun m!65267 () Bool)

(assert (=> d!14969 m!65267))

(declare-fun m!65269 () Bool)

(assert (=> d!14969 m!65269))

(declare-fun m!65271 () Bool)

(assert (=> b!69160 m!65271))

(declare-fun m!65273 () Bool)

(assert (=> b!69161 m!65273))

(assert (=> b!68592 d!14969))

(declare-fun d!14971 () Bool)

(assert (=> d!14971 (= (apply!73 (+!90 lt!29984 (tuple2!2103 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992))))) lt!29994) (apply!73 lt!29984 lt!29994))))

(declare-fun lt!30336 () Unit!1919)

(assert (=> d!14971 (= lt!30336 (choose!388 lt!29984 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992))) lt!29994))))

(declare-fun e!45299 () Bool)

(assert (=> d!14971 e!45299))

(declare-fun res!37135 () Bool)

(assert (=> d!14971 (=> (not res!37135) (not e!45299))))

(assert (=> d!14971 (= res!37135 (contains!714 lt!29984 lt!29994))))

(assert (=> d!14971 (= (addApplyDifferent!49 lt!29984 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992))) lt!29994) lt!30336)))

(declare-fun b!69162 () Bool)

(assert (=> b!69162 (= e!45299 (not (= lt!29994 lt!29999)))))

(assert (= (and d!14971 res!37135) b!69162))

(assert (=> d!14971 m!64539))

(declare-fun m!65275 () Bool)

(assert (=> d!14971 m!65275))

(declare-fun m!65277 () Bool)

(assert (=> d!14971 m!65277))

(assert (=> d!14971 m!64563))

(assert (=> d!14971 m!64539))

(assert (=> d!14971 m!64541))

(assert (=> b!68592 d!14971))

(declare-fun d!14973 () Bool)

(assert (=> d!14973 (= (apply!73 lt!29987 lt!29990) (get!1127 (getValueByKey!131 (toList!719 lt!29987) lt!29990)))))

(declare-fun bs!2971 () Bool)

(assert (= bs!2971 d!14973))

(declare-fun m!65279 () Bool)

(assert (=> bs!2971 m!65279))

(assert (=> bs!2971 m!65279))

(declare-fun m!65281 () Bool)

(assert (=> bs!2971 m!65281))

(assert (=> b!68592 d!14973))

(declare-fun d!14975 () Bool)

(assert (=> d!14975 (= (apply!73 (+!90 lt!29987 (tuple2!2103 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))) lt!29990) (get!1127 (getValueByKey!131 (toList!719 (+!90 lt!29987 (tuple2!2103 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))) lt!29990)))))

(declare-fun bs!2972 () Bool)

(assert (= bs!2972 d!14975))

(declare-fun m!65283 () Bool)

(assert (=> bs!2972 m!65283))

(assert (=> bs!2972 m!65283))

(declare-fun m!65285 () Bool)

(assert (=> bs!2972 m!65285))

(assert (=> b!68592 d!14975))

(declare-fun d!14977 () Bool)

(assert (=> d!14977 (contains!714 (+!90 lt!29988 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))) lt!29979)))

(declare-fun lt!30339 () Unit!1919)

(declare-fun choose!389 (ListLongMap!1407 (_ BitVec 64) V!2923 (_ BitVec 64)) Unit!1919)

(assert (=> d!14977 (= lt!30339 (choose!389 lt!29988 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))) lt!29979))))

(assert (=> d!14977 (contains!714 lt!29988 lt!29979)))

(assert (=> d!14977 (= (addStillContains!49 lt!29988 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))) lt!29979) lt!30339)))

(declare-fun bs!2973 () Bool)

(assert (= bs!2973 d!14977))

(assert (=> bs!2973 m!64555))

(assert (=> bs!2973 m!64555))

(assert (=> bs!2973 m!64557))

(declare-fun m!65287 () Bool)

(assert (=> bs!2973 m!65287))

(declare-fun m!65289 () Bool)

(assert (=> bs!2973 m!65289))

(assert (=> b!68592 d!14977))

(declare-fun d!14979 () Bool)

(assert (=> d!14979 (= (apply!73 lt!29984 lt!29994) (get!1127 (getValueByKey!131 (toList!719 lt!29984) lt!29994)))))

(declare-fun bs!2974 () Bool)

(assert (= bs!2974 d!14979))

(declare-fun m!65291 () Bool)

(assert (=> bs!2974 m!65291))

(assert (=> bs!2974 m!65291))

(declare-fun m!65293 () Bool)

(assert (=> bs!2974 m!65293))

(assert (=> b!68592 d!14979))

(declare-fun d!14981 () Bool)

(declare-fun e!45300 () Bool)

(assert (=> d!14981 e!45300))

(declare-fun res!37137 () Bool)

(assert (=> d!14981 (=> (not res!37137) (not e!45300))))

(declare-fun lt!30342 () ListLongMap!1407)

(assert (=> d!14981 (= res!37137 (contains!714 lt!30342 (_1!1062 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun lt!30343 () List!1469)

(assert (=> d!14981 (= lt!30342 (ListLongMap!1408 lt!30343))))

(declare-fun lt!30340 () Unit!1919)

(declare-fun lt!30341 () Unit!1919)

(assert (=> d!14981 (= lt!30340 lt!30341)))

(assert (=> d!14981 (= (getValueByKey!131 lt!30343 (_1!1062 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))) (Some!136 (_2!1062 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> d!14981 (= lt!30341 (lemmaContainsTupThenGetReturnValue!48 lt!30343 (_1!1062 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))) (_2!1062 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> d!14981 (= lt!30343 (insertStrictlySorted!51 (toList!719 lt!29988) (_1!1062 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))) (_2!1062 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> d!14981 (= (+!90 lt!29988 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))) lt!30342)))

(declare-fun b!69164 () Bool)

(declare-fun res!37136 () Bool)

(assert (=> b!69164 (=> (not res!37136) (not e!45300))))

(assert (=> b!69164 (= res!37136 (= (getValueByKey!131 (toList!719 lt!30342) (_1!1062 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))) (Some!136 (_2!1062 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(declare-fun b!69165 () Bool)

(assert (=> b!69165 (= e!45300 (contains!716 (toList!719 lt!30342) (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))))

(assert (= (and d!14981 res!37137) b!69164))

(assert (= (and b!69164 res!37136) b!69165))

(declare-fun m!65295 () Bool)

(assert (=> d!14981 m!65295))

(declare-fun m!65297 () Bool)

(assert (=> d!14981 m!65297))

(declare-fun m!65299 () Bool)

(assert (=> d!14981 m!65299))

(declare-fun m!65301 () Bool)

(assert (=> d!14981 m!65301))

(declare-fun m!65303 () Bool)

(assert (=> b!69164 m!65303))

(declare-fun m!65305 () Bool)

(assert (=> b!69165 m!65305))

(assert (=> b!68592 d!14981))

(declare-fun d!14983 () Bool)

(assert (=> d!14983 (= (apply!73 (+!90 lt!29981 (tuple2!2103 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992))))) lt!29983) (get!1127 (getValueByKey!131 (toList!719 (+!90 lt!29981 (tuple2!2103 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))) lt!29983)))))

(declare-fun bs!2975 () Bool)

(assert (= bs!2975 d!14983))

(declare-fun m!65307 () Bool)

(assert (=> bs!2975 m!65307))

(assert (=> bs!2975 m!65307))

(declare-fun m!65309 () Bool)

(assert (=> bs!2975 m!65309))

(assert (=> b!68592 d!14983))

(declare-fun d!14985 () Bool)

(declare-fun e!45301 () Bool)

(assert (=> d!14985 e!45301))

(declare-fun res!37138 () Bool)

(assert (=> d!14985 (=> res!37138 e!45301)))

(declare-fun lt!30345 () Bool)

(assert (=> d!14985 (= res!37138 (not lt!30345))))

(declare-fun lt!30344 () Bool)

(assert (=> d!14985 (= lt!30345 lt!30344)))

(declare-fun lt!30346 () Unit!1919)

(declare-fun e!45302 () Unit!1919)

(assert (=> d!14985 (= lt!30346 e!45302)))

(declare-fun c!9855 () Bool)

(assert (=> d!14985 (= c!9855 lt!30344)))

(assert (=> d!14985 (= lt!30344 (containsKey!135 (toList!719 (+!90 lt!29988 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))) lt!29979))))

(assert (=> d!14985 (= (contains!714 (+!90 lt!29988 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))) lt!29979) lt!30345)))

(declare-fun b!69166 () Bool)

(declare-fun lt!30347 () Unit!1919)

(assert (=> b!69166 (= e!45302 lt!30347)))

(assert (=> b!69166 (= lt!30347 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 (+!90 lt!29988 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))) lt!29979))))

(assert (=> b!69166 (isDefined!84 (getValueByKey!131 (toList!719 (+!90 lt!29988 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))) lt!29979))))

(declare-fun b!69167 () Bool)

(declare-fun Unit!1940 () Unit!1919)

(assert (=> b!69167 (= e!45302 Unit!1940)))

(declare-fun b!69168 () Bool)

(assert (=> b!69168 (= e!45301 (isDefined!84 (getValueByKey!131 (toList!719 (+!90 lt!29988 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))) lt!29979)))))

(assert (= (and d!14985 c!9855) b!69166))

(assert (= (and d!14985 (not c!9855)) b!69167))

(assert (= (and d!14985 (not res!37138)) b!69168))

(declare-fun m!65311 () Bool)

(assert (=> d!14985 m!65311))

(declare-fun m!65313 () Bool)

(assert (=> b!69166 m!65313))

(declare-fun m!65315 () Bool)

(assert (=> b!69166 m!65315))

(assert (=> b!69166 m!65315))

(declare-fun m!65317 () Bool)

(assert (=> b!69166 m!65317))

(assert (=> b!69168 m!65315))

(assert (=> b!69168 m!65315))

(assert (=> b!69168 m!65317))

(assert (=> b!68592 d!14985))

(declare-fun d!14987 () Bool)

(assert (=> d!14987 (= (apply!73 (+!90 lt!29984 (tuple2!2103 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992))))) lt!29994) (get!1127 (getValueByKey!131 (toList!719 (+!90 lt!29984 (tuple2!2103 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))) lt!29994)))))

(declare-fun bs!2976 () Bool)

(assert (= bs!2976 d!14987))

(declare-fun m!65319 () Bool)

(assert (=> bs!2976 m!65319))

(assert (=> bs!2976 m!65319))

(declare-fun m!65321 () Bool)

(assert (=> bs!2976 m!65321))

(assert (=> b!68592 d!14987))

(declare-fun d!14989 () Bool)

(declare-fun e!45303 () Bool)

(assert (=> d!14989 e!45303))

(declare-fun res!37139 () Bool)

(assert (=> d!14989 (=> res!37139 e!45303)))

(declare-fun lt!30349 () Bool)

(assert (=> d!14989 (= res!37139 (not lt!30349))))

(declare-fun lt!30348 () Bool)

(assert (=> d!14989 (= lt!30349 lt!30348)))

(declare-fun lt!30350 () Unit!1919)

(declare-fun e!45304 () Unit!1919)

(assert (=> d!14989 (= lt!30350 e!45304)))

(declare-fun c!9856 () Bool)

(assert (=> d!14989 (= c!9856 lt!30348)))

(assert (=> d!14989 (= lt!30348 (containsKey!135 (toList!719 lt!30041) (_1!1062 lt!29892)))))

(assert (=> d!14989 (= (contains!714 lt!30041 (_1!1062 lt!29892)) lt!30349)))

(declare-fun b!69169 () Bool)

(declare-fun lt!30351 () Unit!1919)

(assert (=> b!69169 (= e!45304 lt!30351)))

(assert (=> b!69169 (= lt!30351 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 lt!30041) (_1!1062 lt!29892)))))

(assert (=> b!69169 (isDefined!84 (getValueByKey!131 (toList!719 lt!30041) (_1!1062 lt!29892)))))

(declare-fun b!69170 () Bool)

(declare-fun Unit!1941 () Unit!1919)

(assert (=> b!69170 (= e!45304 Unit!1941)))

(declare-fun b!69171 () Bool)

(assert (=> b!69171 (= e!45303 (isDefined!84 (getValueByKey!131 (toList!719 lt!30041) (_1!1062 lt!29892))))))

(assert (= (and d!14989 c!9856) b!69169))

(assert (= (and d!14989 (not c!9856)) b!69170))

(assert (= (and d!14989 (not res!37139)) b!69171))

(declare-fun m!65323 () Bool)

(assert (=> d!14989 m!65323))

(declare-fun m!65325 () Bool)

(assert (=> b!69169 m!65325))

(assert (=> b!69169 m!64611))

(assert (=> b!69169 m!64611))

(declare-fun m!65327 () Bool)

(assert (=> b!69169 m!65327))

(assert (=> b!69171 m!64611))

(assert (=> b!69171 m!64611))

(assert (=> b!69171 m!65327))

(assert (=> d!14803 d!14989))

(declare-fun b!69174 () Bool)

(declare-fun e!45306 () Option!137)

(assert (=> b!69174 (= e!45306 (getValueByKey!131 (t!4972 lt!30042) (_1!1062 lt!29892)))))

(declare-fun b!69173 () Bool)

(declare-fun e!45305 () Option!137)

(assert (=> b!69173 (= e!45305 e!45306)))

(declare-fun c!9858 () Bool)

(assert (=> b!69173 (= c!9858 (and ((_ is Cons!1465) lt!30042) (not (= (_1!1062 (h!2050 lt!30042)) (_1!1062 lt!29892)))))))

(declare-fun b!69175 () Bool)

(assert (=> b!69175 (= e!45306 None!135)))

(declare-fun b!69172 () Bool)

(assert (=> b!69172 (= e!45305 (Some!136 (_2!1062 (h!2050 lt!30042))))))

(declare-fun d!14991 () Bool)

(declare-fun c!9857 () Bool)

(assert (=> d!14991 (= c!9857 (and ((_ is Cons!1465) lt!30042) (= (_1!1062 (h!2050 lt!30042)) (_1!1062 lt!29892))))))

(assert (=> d!14991 (= (getValueByKey!131 lt!30042 (_1!1062 lt!29892)) e!45305)))

(assert (= (and d!14991 c!9857) b!69172))

(assert (= (and d!14991 (not c!9857)) b!69173))

(assert (= (and b!69173 c!9858) b!69174))

(assert (= (and b!69173 (not c!9858)) b!69175))

(declare-fun m!65329 () Bool)

(assert (=> b!69174 m!65329))

(assert (=> d!14803 d!14991))

(declare-fun d!14993 () Bool)

(assert (=> d!14993 (= (getValueByKey!131 lt!30042 (_1!1062 lt!29892)) (Some!136 (_2!1062 lt!29892)))))

(declare-fun lt!30352 () Unit!1919)

(assert (=> d!14993 (= lt!30352 (choose!386 lt!30042 (_1!1062 lt!29892) (_2!1062 lt!29892)))))

(declare-fun e!45307 () Bool)

(assert (=> d!14993 e!45307))

(declare-fun res!37140 () Bool)

(assert (=> d!14993 (=> (not res!37140) (not e!45307))))

(assert (=> d!14993 (= res!37140 (isStrictlySorted!290 lt!30042))))

(assert (=> d!14993 (= (lemmaContainsTupThenGetReturnValue!48 lt!30042 (_1!1062 lt!29892) (_2!1062 lt!29892)) lt!30352)))

(declare-fun b!69176 () Bool)

(declare-fun res!37141 () Bool)

(assert (=> b!69176 (=> (not res!37141) (not e!45307))))

(assert (=> b!69176 (= res!37141 (containsKey!135 lt!30042 (_1!1062 lt!29892)))))

(declare-fun b!69177 () Bool)

(assert (=> b!69177 (= e!45307 (contains!716 lt!30042 (tuple2!2103 (_1!1062 lt!29892) (_2!1062 lt!29892))))))

(assert (= (and d!14993 res!37140) b!69176))

(assert (= (and b!69176 res!37141) b!69177))

(assert (=> d!14993 m!64605))

(declare-fun m!65331 () Bool)

(assert (=> d!14993 m!65331))

(declare-fun m!65333 () Bool)

(assert (=> d!14993 m!65333))

(declare-fun m!65335 () Bool)

(assert (=> b!69176 m!65335))

(declare-fun m!65337 () Bool)

(assert (=> b!69177 m!65337))

(assert (=> d!14803 d!14993))

(declare-fun e!45310 () List!1469)

(declare-fun b!69178 () Bool)

(assert (=> b!69178 (= e!45310 (insertStrictlySorted!51 (t!4972 (toList!719 (+!90 lt!29889 lt!29893))) (_1!1062 lt!29892) (_2!1062 lt!29892)))))

(declare-fun d!14995 () Bool)

(declare-fun e!45308 () Bool)

(assert (=> d!14995 e!45308))

(declare-fun res!37143 () Bool)

(assert (=> d!14995 (=> (not res!37143) (not e!45308))))

(declare-fun lt!30353 () List!1469)

(assert (=> d!14995 (= res!37143 (isStrictlySorted!290 lt!30353))))

(declare-fun e!45312 () List!1469)

(assert (=> d!14995 (= lt!30353 e!45312)))

(declare-fun c!9859 () Bool)

(assert (=> d!14995 (= c!9859 (and ((_ is Cons!1465) (toList!719 (+!90 lt!29889 lt!29893))) (bvslt (_1!1062 (h!2050 (toList!719 (+!90 lt!29889 lt!29893)))) (_1!1062 lt!29892))))))

(assert (=> d!14995 (isStrictlySorted!290 (toList!719 (+!90 lt!29889 lt!29893)))))

(assert (=> d!14995 (= (insertStrictlySorted!51 (toList!719 (+!90 lt!29889 lt!29893)) (_1!1062 lt!29892) (_2!1062 lt!29892)) lt!30353)))

(declare-fun c!9861 () Bool)

(declare-fun c!9862 () Bool)

(declare-fun b!69179 () Bool)

(assert (=> b!69179 (= e!45310 (ite c!9862 (t!4972 (toList!719 (+!90 lt!29889 lt!29893))) (ite c!9861 (Cons!1465 (h!2050 (toList!719 (+!90 lt!29889 lt!29893))) (t!4972 (toList!719 (+!90 lt!29889 lt!29893)))) Nil!1466)))))

(declare-fun bm!5902 () Bool)

(declare-fun call!5907 () List!1469)

(declare-fun call!5906 () List!1469)

(assert (=> bm!5902 (= call!5907 call!5906)))

(declare-fun b!69180 () Bool)

(declare-fun e!45311 () List!1469)

(assert (=> b!69180 (= e!45311 call!5907)))

(declare-fun bm!5903 () Bool)

(declare-fun call!5905 () List!1469)

(assert (=> bm!5903 (= call!5906 call!5905)))

(declare-fun bm!5904 () Bool)

(assert (=> bm!5904 (= call!5905 ($colon$colon!64 e!45310 (ite c!9859 (h!2050 (toList!719 (+!90 lt!29889 lt!29893))) (tuple2!2103 (_1!1062 lt!29892) (_2!1062 lt!29892)))))))

(declare-fun c!9860 () Bool)

(assert (=> bm!5904 (= c!9860 c!9859)))

(declare-fun b!69181 () Bool)

(declare-fun e!45309 () List!1469)

(assert (=> b!69181 (= e!45312 e!45309)))

(assert (=> b!69181 (= c!9862 (and ((_ is Cons!1465) (toList!719 (+!90 lt!29889 lt!29893))) (= (_1!1062 (h!2050 (toList!719 (+!90 lt!29889 lt!29893)))) (_1!1062 lt!29892))))))

(declare-fun b!69182 () Bool)

(assert (=> b!69182 (= e!45308 (contains!716 lt!30353 (tuple2!2103 (_1!1062 lt!29892) (_2!1062 lt!29892))))))

(declare-fun b!69183 () Bool)

(assert (=> b!69183 (= e!45312 call!5905)))

(declare-fun b!69184 () Bool)

(assert (=> b!69184 (= e!45311 call!5907)))

(declare-fun b!69185 () Bool)

(declare-fun res!37142 () Bool)

(assert (=> b!69185 (=> (not res!37142) (not e!45308))))

(assert (=> b!69185 (= res!37142 (containsKey!135 lt!30353 (_1!1062 lt!29892)))))

(declare-fun b!69186 () Bool)

(assert (=> b!69186 (= e!45309 call!5906)))

(declare-fun b!69187 () Bool)

(assert (=> b!69187 (= c!9861 (and ((_ is Cons!1465) (toList!719 (+!90 lt!29889 lt!29893))) (bvsgt (_1!1062 (h!2050 (toList!719 (+!90 lt!29889 lt!29893)))) (_1!1062 lt!29892))))))

(assert (=> b!69187 (= e!45309 e!45311)))

(assert (= (and d!14995 c!9859) b!69183))

(assert (= (and d!14995 (not c!9859)) b!69181))

(assert (= (and b!69181 c!9862) b!69186))

(assert (= (and b!69181 (not c!9862)) b!69187))

(assert (= (and b!69187 c!9861) b!69180))

(assert (= (and b!69187 (not c!9861)) b!69184))

(assert (= (or b!69180 b!69184) bm!5902))

(assert (= (or b!69186 bm!5902) bm!5903))

(assert (= (or b!69183 bm!5903) bm!5904))

(assert (= (and bm!5904 c!9860) b!69178))

(assert (= (and bm!5904 (not c!9860)) b!69179))

(assert (= (and d!14995 res!37143) b!69185))

(assert (= (and b!69185 res!37142) b!69182))

(declare-fun m!65339 () Bool)

(assert (=> b!69182 m!65339))

(declare-fun m!65341 () Bool)

(assert (=> d!14995 m!65341))

(declare-fun m!65343 () Bool)

(assert (=> d!14995 m!65343))

(declare-fun m!65345 () Bool)

(assert (=> b!69178 m!65345))

(declare-fun m!65347 () Bool)

(assert (=> bm!5904 m!65347))

(declare-fun m!65349 () Bool)

(assert (=> b!69185 m!65349))

(assert (=> d!14803 d!14995))

(declare-fun d!14997 () Bool)

(declare-fun e!45313 () Bool)

(assert (=> d!14997 e!45313))

(declare-fun res!37145 () Bool)

(assert (=> d!14997 (=> (not res!37145) (not e!45313))))

(declare-fun lt!30356 () ListLongMap!1407)

(assert (=> d!14997 (= res!37145 (contains!714 lt!30356 (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))

(declare-fun lt!30357 () List!1469)

(assert (=> d!14997 (= lt!30356 (ListLongMap!1408 lt!30357))))

(declare-fun lt!30354 () Unit!1919)

(declare-fun lt!30355 () Unit!1919)

(assert (=> d!14997 (= lt!30354 lt!30355)))

(assert (=> d!14997 (= (getValueByKey!131 lt!30357 (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))) (Some!136 (_2!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))

(assert (=> d!14997 (= lt!30355 (lemmaContainsTupThenGetReturnValue!48 lt!30357 (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)) (_2!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))

(assert (=> d!14997 (= lt!30357 (insertStrictlySorted!51 (toList!719 call!5863) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)) (_2!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))

(assert (=> d!14997 (= (+!90 call!5863 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)) lt!30356)))

(declare-fun b!69188 () Bool)

(declare-fun res!37144 () Bool)

(assert (=> b!69188 (=> (not res!37144) (not e!45313))))

(assert (=> b!69188 (= res!37144 (= (getValueByKey!131 (toList!719 lt!30356) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))) (Some!136 (_2!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))))))

(declare-fun b!69189 () Bool)

(assert (=> b!69189 (= e!45313 (contains!716 (toList!719 lt!30356) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))))

(assert (= (and d!14997 res!37145) b!69188))

(assert (= (and b!69188 res!37144) b!69189))

(declare-fun m!65351 () Bool)

(assert (=> d!14997 m!65351))

(declare-fun m!65353 () Bool)

(assert (=> d!14997 m!65353))

(declare-fun m!65355 () Bool)

(assert (=> d!14997 m!65355))

(declare-fun m!65357 () Bool)

(assert (=> d!14997 m!65357))

(declare-fun m!65359 () Bool)

(assert (=> b!69188 m!65359))

(declare-fun m!65361 () Bool)

(assert (=> b!69189 m!65361))

(assert (=> b!68799 d!14997))

(declare-fun d!14999 () Bool)

(assert (=> d!14999 (= (+!90 (getCurrentListMap!417 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897)) (getCurrentListMap!417 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) lt!30124 lt!29897 (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30360 () Unit!1919)

(declare-fun choose!390 (array!3855 array!3857 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2923 V!2923 V!2923 Int) Unit!1919)

(assert (=> d!14999 (= lt!30360 (choose!390 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) lt!30124 (zeroValue!2074 newMap!16) lt!29897 (minValue!2074 newMap!16) (defaultEntry!2168 newMap!16)))))

(assert (=> d!14999 (validMask!0 (mask!6113 newMap!16))))

(assert (=> d!14999 (= (lemmaChangeZeroKeyThenAddPairToListMap!22 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) lt!30124 (zeroValue!2074 newMap!16) lt!29897 (minValue!2074 newMap!16) (defaultEntry!2168 newMap!16)) lt!30360)))

(declare-fun bs!2977 () Bool)

(assert (= bs!2977 d!14999))

(declare-fun m!65363 () Bool)

(assert (=> bs!2977 m!65363))

(assert (=> bs!2977 m!64511))

(assert (=> bs!2977 m!64511))

(declare-fun m!65365 () Bool)

(assert (=> bs!2977 m!65365))

(assert (=> bs!2977 m!64759))

(declare-fun m!65367 () Bool)

(assert (=> bs!2977 m!65367))

(assert (=> b!68802 d!14999))

(declare-fun d!15001 () Bool)

(declare-fun res!37146 () Bool)

(declare-fun e!45314 () Bool)

(assert (=> d!15001 (=> (not res!37146) (not e!45314))))

(assert (=> d!15001 (= res!37146 (simpleValid!49 (v!2494 (underlying!253 thiss!992))))))

(assert (=> d!15001 (= (valid!283 (v!2494 (underlying!253 thiss!992))) e!45314)))

(declare-fun b!69190 () Bool)

(declare-fun res!37147 () Bool)

(assert (=> b!69190 (=> (not res!37147) (not e!45314))))

(assert (=> b!69190 (= res!37147 (= (arrayCountValidKeys!0 (_keys!3812 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000000000000 (size!2077 (_keys!3812 (v!2494 (underlying!253 thiss!992))))) (_size!388 (v!2494 (underlying!253 thiss!992)))))))

(declare-fun b!69191 () Bool)

(declare-fun res!37148 () Bool)

(assert (=> b!69191 (=> (not res!37148) (not e!45314))))

(assert (=> b!69191 (= res!37148 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3812 (v!2494 (underlying!253 thiss!992))) (mask!6113 (v!2494 (underlying!253 thiss!992)))))))

(declare-fun b!69192 () Bool)

(assert (=> b!69192 (= e!45314 (arrayNoDuplicates!0 (_keys!3812 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000000000000 Nil!1467))))

(assert (= (and d!15001 res!37146) b!69190))

(assert (= (and b!69190 res!37147) b!69191))

(assert (= (and b!69191 res!37148) b!69192))

(declare-fun m!65369 () Bool)

(assert (=> d!15001 m!65369))

(declare-fun m!65371 () Bool)

(assert (=> b!69190 m!65371))

(declare-fun m!65373 () Bool)

(assert (=> b!69191 m!65373))

(declare-fun m!65375 () Bool)

(assert (=> b!69192 m!65375))

(assert (=> d!14781 d!15001))

(declare-fun d!15003 () Bool)

(declare-fun e!45315 () Bool)

(assert (=> d!15003 e!45315))

(declare-fun res!37150 () Bool)

(assert (=> d!15003 (=> (not res!37150) (not e!45315))))

(declare-fun lt!30363 () ListLongMap!1407)

(assert (=> d!15003 (= res!37150 (contains!714 lt!30363 (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!30364 () List!1469)

(assert (=> d!15003 (= lt!30363 (ListLongMap!1408 lt!30364))))

(declare-fun lt!30361 () Unit!1919)

(declare-fun lt!30362 () Unit!1919)

(assert (=> d!15003 (= lt!30361 lt!30362)))

(assert (=> d!15003 (= (getValueByKey!131 lt!30364 (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!136 (_2!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!15003 (= lt!30362 (lemmaContainsTupThenGetReturnValue!48 lt!30364 (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!15003 (= lt!30364 (insertStrictlySorted!51 (toList!719 call!5794) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!15003 (= (+!90 call!5794 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!30363)))

(declare-fun b!69193 () Bool)

(declare-fun res!37149 () Bool)

(assert (=> b!69193 (=> (not res!37149) (not e!45315))))

(assert (=> b!69193 (= res!37149 (= (getValueByKey!131 (toList!719 lt!30363) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!136 (_2!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!69194 () Bool)

(assert (=> b!69194 (= e!45315 (contains!716 (toList!719 lt!30363) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!15003 res!37150) b!69193))

(assert (= (and b!69193 res!37149) b!69194))

(declare-fun m!65377 () Bool)

(assert (=> d!15003 m!65377))

(declare-fun m!65379 () Bool)

(assert (=> d!15003 m!65379))

(declare-fun m!65381 () Bool)

(assert (=> d!15003 m!65381))

(declare-fun m!65383 () Bool)

(assert (=> d!15003 m!65383))

(declare-fun m!65385 () Bool)

(assert (=> b!69193 m!65385))

(declare-fun m!65387 () Bool)

(assert (=> b!69194 m!65387))

(assert (=> b!68669 d!15003))

(assert (=> b!68669 d!14861))

(declare-fun d!15005 () Bool)

(declare-fun e!45316 () Bool)

(assert (=> d!15005 e!45316))

(declare-fun res!37151 () Bool)

(assert (=> d!15005 (=> res!37151 e!45316)))

(declare-fun lt!30366 () Bool)

(assert (=> d!15005 (= res!37151 (not lt!30366))))

(declare-fun lt!30365 () Bool)

(assert (=> d!15005 (= lt!30366 lt!30365)))

(declare-fun lt!30367 () Unit!1919)

(declare-fun e!45317 () Unit!1919)

(assert (=> d!15005 (= lt!30367 e!45317)))

(declare-fun c!9863 () Bool)

(assert (=> d!15005 (= c!9863 lt!30365)))

(assert (=> d!15005 (= lt!30365 (containsKey!135 (toList!719 (+!90 lt!30028 (tuple2!2103 lt!30025 lt!30024))) lt!30030))))

(assert (=> d!15005 (= (contains!714 (+!90 lt!30028 (tuple2!2103 lt!30025 lt!30024)) lt!30030) lt!30366)))

(declare-fun b!69195 () Bool)

(declare-fun lt!30368 () Unit!1919)

(assert (=> b!69195 (= e!45317 lt!30368)))

(assert (=> b!69195 (= lt!30368 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 (+!90 lt!30028 (tuple2!2103 lt!30025 lt!30024))) lt!30030))))

(assert (=> b!69195 (isDefined!84 (getValueByKey!131 (toList!719 (+!90 lt!30028 (tuple2!2103 lt!30025 lt!30024))) lt!30030))))

(declare-fun b!69196 () Bool)

(declare-fun Unit!1942 () Unit!1919)

(assert (=> b!69196 (= e!45317 Unit!1942)))

(declare-fun b!69197 () Bool)

(assert (=> b!69197 (= e!45316 (isDefined!84 (getValueByKey!131 (toList!719 (+!90 lt!30028 (tuple2!2103 lt!30025 lt!30024))) lt!30030)))))

(assert (= (and d!15005 c!9863) b!69195))

(assert (= (and d!15005 (not c!9863)) b!69196))

(assert (= (and d!15005 (not res!37151)) b!69197))

(declare-fun m!65389 () Bool)

(assert (=> d!15005 m!65389))

(declare-fun m!65391 () Bool)

(assert (=> b!69195 m!65391))

(declare-fun m!65393 () Bool)

(assert (=> b!69195 m!65393))

(assert (=> b!69195 m!65393))

(declare-fun m!65395 () Bool)

(assert (=> b!69195 m!65395))

(assert (=> b!69197 m!65393))

(assert (=> b!69197 m!65393))

(assert (=> b!69197 m!65395))

(assert (=> b!68669 d!15005))

(declare-fun d!15007 () Bool)

(assert (=> d!15007 (not (contains!714 (+!90 lt!30028 (tuple2!2103 lt!30025 lt!30024)) lt!30030))))

(declare-fun lt!30371 () Unit!1919)

(declare-fun choose!391 (ListLongMap!1407 (_ BitVec 64) V!2923 (_ BitVec 64)) Unit!1919)

(assert (=> d!15007 (= lt!30371 (choose!391 lt!30028 lt!30025 lt!30024 lt!30030))))

(declare-fun e!45320 () Bool)

(assert (=> d!15007 e!45320))

(declare-fun res!37154 () Bool)

(assert (=> d!15007 (=> (not res!37154) (not e!45320))))

(assert (=> d!15007 (= res!37154 (not (contains!714 lt!30028 lt!30030)))))

(assert (=> d!15007 (= (addStillNotContains!22 lt!30028 lt!30025 lt!30024 lt!30030) lt!30371)))

(declare-fun b!69201 () Bool)

(assert (=> b!69201 (= e!45320 (not (= lt!30025 lt!30030)))))

(assert (= (and d!15007 res!37154) b!69201))

(assert (=> d!15007 m!64591))

(assert (=> d!15007 m!64591))

(assert (=> d!15007 m!64593))

(declare-fun m!65397 () Bool)

(assert (=> d!15007 m!65397))

(declare-fun m!65399 () Bool)

(assert (=> d!15007 m!65399))

(assert (=> b!68669 d!15007))

(declare-fun d!15009 () Bool)

(declare-fun e!45321 () Bool)

(assert (=> d!15009 e!45321))

(declare-fun res!37156 () Bool)

(assert (=> d!15009 (=> (not res!37156) (not e!45321))))

(declare-fun lt!30374 () ListLongMap!1407)

(assert (=> d!15009 (= res!37156 (contains!714 lt!30374 (_1!1062 (tuple2!2103 lt!30025 lt!30024))))))

(declare-fun lt!30375 () List!1469)

(assert (=> d!15009 (= lt!30374 (ListLongMap!1408 lt!30375))))

(declare-fun lt!30372 () Unit!1919)

(declare-fun lt!30373 () Unit!1919)

(assert (=> d!15009 (= lt!30372 lt!30373)))

(assert (=> d!15009 (= (getValueByKey!131 lt!30375 (_1!1062 (tuple2!2103 lt!30025 lt!30024))) (Some!136 (_2!1062 (tuple2!2103 lt!30025 lt!30024))))))

(assert (=> d!15009 (= lt!30373 (lemmaContainsTupThenGetReturnValue!48 lt!30375 (_1!1062 (tuple2!2103 lt!30025 lt!30024)) (_2!1062 (tuple2!2103 lt!30025 lt!30024))))))

(assert (=> d!15009 (= lt!30375 (insertStrictlySorted!51 (toList!719 lt!30028) (_1!1062 (tuple2!2103 lt!30025 lt!30024)) (_2!1062 (tuple2!2103 lt!30025 lt!30024))))))

(assert (=> d!15009 (= (+!90 lt!30028 (tuple2!2103 lt!30025 lt!30024)) lt!30374)))

(declare-fun b!69202 () Bool)

(declare-fun res!37155 () Bool)

(assert (=> b!69202 (=> (not res!37155) (not e!45321))))

(assert (=> b!69202 (= res!37155 (= (getValueByKey!131 (toList!719 lt!30374) (_1!1062 (tuple2!2103 lt!30025 lt!30024))) (Some!136 (_2!1062 (tuple2!2103 lt!30025 lt!30024)))))))

(declare-fun b!69203 () Bool)

(assert (=> b!69203 (= e!45321 (contains!716 (toList!719 lt!30374) (tuple2!2103 lt!30025 lt!30024)))))

(assert (= (and d!15009 res!37156) b!69202))

(assert (= (and b!69202 res!37155) b!69203))

(declare-fun m!65401 () Bool)

(assert (=> d!15009 m!65401))

(declare-fun m!65403 () Bool)

(assert (=> d!15009 m!65403))

(declare-fun m!65405 () Bool)

(assert (=> d!15009 m!65405))

(declare-fun m!65407 () Bool)

(assert (=> d!15009 m!65407))

(declare-fun m!65409 () Bool)

(assert (=> b!69202 m!65409))

(declare-fun m!65411 () Bool)

(assert (=> b!69203 m!65411))

(assert (=> b!68669 d!15009))

(declare-fun d!15011 () Bool)

(declare-fun e!45322 () Bool)

(assert (=> d!15011 e!45322))

(declare-fun res!37157 () Bool)

(assert (=> d!15011 (=> res!37157 e!45322)))

(declare-fun lt!30377 () Bool)

(assert (=> d!15011 (= res!37157 (not lt!30377))))

(declare-fun lt!30376 () Bool)

(assert (=> d!15011 (= lt!30377 lt!30376)))

(declare-fun lt!30378 () Unit!1919)

(declare-fun e!45323 () Unit!1919)

(assert (=> d!15011 (= lt!30378 e!45323)))

(declare-fun c!9864 () Bool)

(assert (=> d!15011 (= c!9864 lt!30376)))

(assert (=> d!15011 (= lt!30376 (containsKey!135 (toList!719 lt!29996) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!15011 (= (contains!714 lt!29996 #b1000000000000000000000000000000000000000000000000000000000000000) lt!30377)))

(declare-fun b!69204 () Bool)

(declare-fun lt!30379 () Unit!1919)

(assert (=> b!69204 (= e!45323 lt!30379)))

(assert (=> b!69204 (= lt!30379 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 lt!29996) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!69204 (isDefined!84 (getValueByKey!131 (toList!719 lt!29996) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69205 () Bool)

(declare-fun Unit!1943 () Unit!1919)

(assert (=> b!69205 (= e!45323 Unit!1943)))

(declare-fun b!69206 () Bool)

(assert (=> b!69206 (= e!45322 (isDefined!84 (getValueByKey!131 (toList!719 lt!29996) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15011 c!9864) b!69204))

(assert (= (and d!15011 (not c!9864)) b!69205))

(assert (= (and d!15011 (not res!37157)) b!69206))

(declare-fun m!65413 () Bool)

(assert (=> d!15011 m!65413))

(declare-fun m!65415 () Bool)

(assert (=> b!69204 m!65415))

(assert (=> b!69204 m!65103))

(assert (=> b!69204 m!65103))

(declare-fun m!65417 () Bool)

(assert (=> b!69204 m!65417))

(assert (=> b!69206 m!65103))

(assert (=> b!69206 m!65103))

(assert (=> b!69206 m!65417))

(assert (=> bm!5779 d!15011))

(declare-fun b!69223 () Bool)

(declare-fun lt!30385 () SeekEntryResult!234)

(assert (=> b!69223 (and (bvsge (index!3065 lt!30385) #b00000000000000000000000000000000) (bvslt (index!3065 lt!30385) (size!2077 (_keys!3812 newMap!16))))))

(declare-fun res!37167 () Bool)

(assert (=> b!69223 (= res!37167 (= (select (arr!1841 (_keys!3812 newMap!16)) (index!3065 lt!30385)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!45334 () Bool)

(assert (=> b!69223 (=> (not res!37167) (not e!45334))))

(declare-fun b!69224 () Bool)

(declare-fun e!45333 () Bool)

(declare-fun call!5912 () Bool)

(assert (=> b!69224 (= e!45333 (not call!5912))))

(declare-fun b!69225 () Bool)

(assert (=> b!69225 (= e!45334 (not call!5912))))

(declare-fun d!15013 () Bool)

(declare-fun e!45335 () Bool)

(assert (=> d!15013 e!45335))

(declare-fun c!9870 () Bool)

(assert (=> d!15013 (= c!9870 ((_ is MissingZero!234) lt!30385))))

(assert (=> d!15013 (= lt!30385 (seekEntryOrOpen!0 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (_keys!3812 newMap!16) (mask!6113 newMap!16)))))

(declare-fun lt!30384 () Unit!1919)

(declare-fun choose!392 (array!3855 array!3857 (_ BitVec 32) (_ BitVec 32) V!2923 V!2923 (_ BitVec 64) Int) Unit!1919)

(assert (=> d!15013 (= lt!30384 (choose!392 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (defaultEntry!2168 newMap!16)))))

(assert (=> d!15013 (validMask!0 (mask!6113 newMap!16))))

(assert (=> d!15013 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!22 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (defaultEntry!2168 newMap!16)) lt!30384)))

(declare-fun b!69226 () Bool)

(declare-fun res!37169 () Bool)

(assert (=> b!69226 (=> (not res!37169) (not e!45333))))

(assert (=> b!69226 (= res!37169 (= (select (arr!1841 (_keys!3812 newMap!16)) (index!3068 lt!30385)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!69226 (and (bvsge (index!3068 lt!30385) #b00000000000000000000000000000000) (bvslt (index!3068 lt!30385) (size!2077 (_keys!3812 newMap!16))))))

(declare-fun call!5913 () Bool)

(declare-fun bm!5909 () Bool)

(assert (=> bm!5909 (= call!5913 (inRange!0 (ite c!9870 (index!3065 lt!30385) (index!3068 lt!30385)) (mask!6113 newMap!16)))))

(declare-fun bm!5910 () Bool)

(assert (=> bm!5910 (= call!5912 (arrayContainsKey!0 (_keys!3812 newMap!16) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!69227 () Bool)

(declare-fun e!45332 () Bool)

(assert (=> b!69227 (= e!45332 ((_ is Undefined!234) lt!30385))))

(declare-fun b!69228 () Bool)

(declare-fun res!37166 () Bool)

(assert (=> b!69228 (=> (not res!37166) (not e!45333))))

(assert (=> b!69228 (= res!37166 call!5913)))

(assert (=> b!69228 (= e!45332 e!45333)))

(declare-fun b!69229 () Bool)

(assert (=> b!69229 (= e!45335 e!45334)))

(declare-fun res!37168 () Bool)

(assert (=> b!69229 (= res!37168 call!5913)))

(assert (=> b!69229 (=> (not res!37168) (not e!45334))))

(declare-fun b!69230 () Bool)

(assert (=> b!69230 (= e!45335 e!45332)))

(declare-fun c!9869 () Bool)

(assert (=> b!69230 (= c!9869 ((_ is MissingVacant!234) lt!30385))))

(assert (= (and d!15013 c!9870) b!69229))

(assert (= (and d!15013 (not c!9870)) b!69230))

(assert (= (and b!69229 res!37168) b!69223))

(assert (= (and b!69223 res!37167) b!69225))

(assert (= (and b!69230 c!9869) b!69228))

(assert (= (and b!69230 (not c!9869)) b!69227))

(assert (= (and b!69228 res!37166) b!69226))

(assert (= (and b!69226 res!37169) b!69224))

(assert (= (or b!69229 b!69228) bm!5909))

(assert (= (or b!69225 b!69224) bm!5910))

(declare-fun m!65419 () Bool)

(assert (=> b!69223 m!65419))

(declare-fun m!65421 () Bool)

(assert (=> bm!5909 m!65421))

(declare-fun m!65423 () Bool)

(assert (=> b!69226 m!65423))

(assert (=> d!15013 m!64407))

(assert (=> d!15013 m!64695))

(assert (=> d!15013 m!64407))

(declare-fun m!65425 () Bool)

(assert (=> d!15013 m!65425))

(assert (=> d!15013 m!64759))

(assert (=> bm!5910 m!64407))

(assert (=> bm!5910 m!64689))

(assert (=> bm!5850 d!15013))

(declare-fun b!69231 () Bool)

(declare-fun lt!30403 () ListLongMap!1407)

(declare-fun e!45342 () Bool)

(assert (=> b!69231 (= e!45342 (= (apply!73 lt!30403 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)) (get!1124 (select (arr!1842 (ite c!9754 (_values!2151 newMap!16) (array!3858 (store (arr!1842 (_values!2151 newMap!16)) (index!3066 lt!30149) (ValueCellFull!885 lt!29897)) (size!2078 (_values!2151 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!322 (defaultEntry!2168 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!69231 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2078 (ite c!9754 (_values!2151 newMap!16) (array!3858 (store (arr!1842 (_values!2151 newMap!16)) (index!3066 lt!30149) (ValueCellFull!885 lt!29897)) (size!2078 (_values!2151 newMap!16)))))))))

(assert (=> b!69231 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))))))

(declare-fun b!69232 () Bool)

(declare-fun e!45348 () Unit!1919)

(declare-fun lt!30402 () Unit!1919)

(assert (=> b!69232 (= e!45348 lt!30402)))

(declare-fun lt!30395 () ListLongMap!1407)

(assert (=> b!69232 (= lt!30395 (getCurrentListMapNoExtraKeys!55 (_keys!3812 newMap!16) (ite c!9754 (_values!2151 newMap!16) (array!3858 (store (arr!1842 (_values!2151 newMap!16)) (index!3066 lt!30149) (ValueCellFull!885 lt!29897)) (size!2078 (_values!2151 newMap!16)))) (mask!6113 newMap!16) (ite (and c!9754 c!9756) lt!30124 (extraKeys!2035 newMap!16)) (ite (and c!9754 c!9756) lt!29897 (zeroValue!2074 newMap!16)) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30398 () (_ BitVec 64))

(assert (=> b!69232 (= lt!30398 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30386 () (_ BitVec 64))

(assert (=> b!69232 (= lt!30386 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30400 () Unit!1919)

(assert (=> b!69232 (= lt!30400 (addStillContains!49 lt!30395 lt!30398 (ite (and c!9754 c!9756) lt!29897 (zeroValue!2074 newMap!16)) lt!30386))))

(assert (=> b!69232 (contains!714 (+!90 lt!30395 (tuple2!2103 lt!30398 (ite (and c!9754 c!9756) lt!29897 (zeroValue!2074 newMap!16)))) lt!30386)))

(declare-fun lt!30396 () Unit!1919)

(assert (=> b!69232 (= lt!30396 lt!30400)))

(declare-fun lt!30388 () ListLongMap!1407)

(assert (=> b!69232 (= lt!30388 (getCurrentListMapNoExtraKeys!55 (_keys!3812 newMap!16) (ite c!9754 (_values!2151 newMap!16) (array!3858 (store (arr!1842 (_values!2151 newMap!16)) (index!3066 lt!30149) (ValueCellFull!885 lt!29897)) (size!2078 (_values!2151 newMap!16)))) (mask!6113 newMap!16) (ite (and c!9754 c!9756) lt!30124 (extraKeys!2035 newMap!16)) (ite (and c!9754 c!9756) lt!29897 (zeroValue!2074 newMap!16)) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30399 () (_ BitVec 64))

(assert (=> b!69232 (= lt!30399 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30390 () (_ BitVec 64))

(assert (=> b!69232 (= lt!30390 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30387 () Unit!1919)

(assert (=> b!69232 (= lt!30387 (addApplyDifferent!49 lt!30388 lt!30399 (minValue!2074 newMap!16) lt!30390))))

(assert (=> b!69232 (= (apply!73 (+!90 lt!30388 (tuple2!2103 lt!30399 (minValue!2074 newMap!16))) lt!30390) (apply!73 lt!30388 lt!30390))))

(declare-fun lt!30405 () Unit!1919)

(assert (=> b!69232 (= lt!30405 lt!30387)))

(declare-fun lt!30394 () ListLongMap!1407)

(assert (=> b!69232 (= lt!30394 (getCurrentListMapNoExtraKeys!55 (_keys!3812 newMap!16) (ite c!9754 (_values!2151 newMap!16) (array!3858 (store (arr!1842 (_values!2151 newMap!16)) (index!3066 lt!30149) (ValueCellFull!885 lt!29897)) (size!2078 (_values!2151 newMap!16)))) (mask!6113 newMap!16) (ite (and c!9754 c!9756) lt!30124 (extraKeys!2035 newMap!16)) (ite (and c!9754 c!9756) lt!29897 (zeroValue!2074 newMap!16)) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30389 () (_ BitVec 64))

(assert (=> b!69232 (= lt!30389 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30397 () (_ BitVec 64))

(assert (=> b!69232 (= lt!30397 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30407 () Unit!1919)

(assert (=> b!69232 (= lt!30407 (addApplyDifferent!49 lt!30394 lt!30389 (ite (and c!9754 c!9756) lt!29897 (zeroValue!2074 newMap!16)) lt!30397))))

(assert (=> b!69232 (= (apply!73 (+!90 lt!30394 (tuple2!2103 lt!30389 (ite (and c!9754 c!9756) lt!29897 (zeroValue!2074 newMap!16)))) lt!30397) (apply!73 lt!30394 lt!30397))))

(declare-fun lt!30404 () Unit!1919)

(assert (=> b!69232 (= lt!30404 lt!30407)))

(declare-fun lt!30391 () ListLongMap!1407)

(assert (=> b!69232 (= lt!30391 (getCurrentListMapNoExtraKeys!55 (_keys!3812 newMap!16) (ite c!9754 (_values!2151 newMap!16) (array!3858 (store (arr!1842 (_values!2151 newMap!16)) (index!3066 lt!30149) (ValueCellFull!885 lt!29897)) (size!2078 (_values!2151 newMap!16)))) (mask!6113 newMap!16) (ite (and c!9754 c!9756) lt!30124 (extraKeys!2035 newMap!16)) (ite (and c!9754 c!9756) lt!29897 (zeroValue!2074 newMap!16)) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30406 () (_ BitVec 64))

(assert (=> b!69232 (= lt!30406 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30401 () (_ BitVec 64))

(assert (=> b!69232 (= lt!30401 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!69232 (= lt!30402 (addApplyDifferent!49 lt!30391 lt!30406 (minValue!2074 newMap!16) lt!30401))))

(assert (=> b!69232 (= (apply!73 (+!90 lt!30391 (tuple2!2103 lt!30406 (minValue!2074 newMap!16))) lt!30401) (apply!73 lt!30391 lt!30401))))

(declare-fun b!69233 () Bool)

(declare-fun e!45341 () Bool)

(declare-fun e!45338 () Bool)

(assert (=> b!69233 (= e!45341 e!45338)))

(declare-fun res!37176 () Bool)

(declare-fun call!5915 () Bool)

(assert (=> b!69233 (= res!37176 call!5915)))

(assert (=> b!69233 (=> (not res!37176) (not e!45338))))

(declare-fun d!15015 () Bool)

(declare-fun e!45346 () Bool)

(assert (=> d!15015 e!45346))

(declare-fun res!37172 () Bool)

(assert (=> d!15015 (=> (not res!37172) (not e!45346))))

(assert (=> d!15015 (= res!37172 (or (bvsge #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))))))))

(declare-fun lt!30392 () ListLongMap!1407)

(assert (=> d!15015 (= lt!30403 lt!30392)))

(declare-fun lt!30393 () Unit!1919)

(assert (=> d!15015 (= lt!30393 e!45348)))

(declare-fun c!9876 () Bool)

(declare-fun e!45337 () Bool)

(assert (=> d!15015 (= c!9876 e!45337)))

(declare-fun res!37173 () Bool)

(assert (=> d!15015 (=> (not res!37173) (not e!45337))))

(assert (=> d!15015 (= res!37173 (bvslt #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))))))

(declare-fun e!45347 () ListLongMap!1407)

(assert (=> d!15015 (= lt!30392 e!45347)))

(declare-fun c!9872 () Bool)

(assert (=> d!15015 (= c!9872 (and (not (= (bvand (ite (and c!9754 c!9756) lt!30124 (extraKeys!2035 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite (and c!9754 c!9756) lt!30124 (extraKeys!2035 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!15015 (validMask!0 (mask!6113 newMap!16))))

(assert (=> d!15015 (= (getCurrentListMap!417 (_keys!3812 newMap!16) (ite c!9754 (_values!2151 newMap!16) (array!3858 (store (arr!1842 (_values!2151 newMap!16)) (index!3066 lt!30149) (ValueCellFull!885 lt!29897)) (size!2078 (_values!2151 newMap!16)))) (mask!6113 newMap!16) (ite (and c!9754 c!9756) lt!30124 (extraKeys!2035 newMap!16)) (ite (and c!9754 c!9756) lt!29897 (zeroValue!2074 newMap!16)) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) lt!30403)))

(declare-fun bm!5911 () Bool)

(assert (=> bm!5911 (= call!5915 (contains!714 lt!30403 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!5912 () Bool)

(declare-fun call!5916 () ListLongMap!1407)

(declare-fun call!5920 () ListLongMap!1407)

(declare-fun call!5919 () ListLongMap!1407)

(declare-fun call!5914 () ListLongMap!1407)

(declare-fun c!9875 () Bool)

(assert (=> bm!5912 (= call!5919 (+!90 (ite c!9872 call!5920 (ite c!9875 call!5914 call!5916)) (ite (or c!9872 c!9875) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9754 c!9756) lt!29897 (zeroValue!2074 newMap!16))) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))))))

(declare-fun bm!5913 () Bool)

(assert (=> bm!5913 (= call!5920 (getCurrentListMapNoExtraKeys!55 (_keys!3812 newMap!16) (ite c!9754 (_values!2151 newMap!16) (array!3858 (store (arr!1842 (_values!2151 newMap!16)) (index!3066 lt!30149) (ValueCellFull!885 lt!29897)) (size!2078 (_values!2151 newMap!16)))) (mask!6113 newMap!16) (ite (and c!9754 c!9756) lt!30124 (extraKeys!2035 newMap!16)) (ite (and c!9754 c!9756) lt!29897 (zeroValue!2074 newMap!16)) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun bm!5914 () Bool)

(assert (=> bm!5914 (= call!5914 call!5920)))

(declare-fun b!69234 () Bool)

(declare-fun e!45344 () ListLongMap!1407)

(assert (=> b!69234 (= e!45344 call!5916)))

(declare-fun b!69235 () Bool)

(declare-fun e!45336 () Bool)

(declare-fun e!45339 () Bool)

(assert (=> b!69235 (= e!45336 e!45339)))

(declare-fun res!37171 () Bool)

(declare-fun call!5918 () Bool)

(assert (=> b!69235 (= res!37171 call!5918)))

(assert (=> b!69235 (=> (not res!37171) (not e!45339))))

(declare-fun b!69236 () Bool)

(declare-fun Unit!1944 () Unit!1919)

(assert (=> b!69236 (= e!45348 Unit!1944)))

(declare-fun b!69237 () Bool)

(assert (=> b!69237 (= e!45337 (validKeyInArray!0 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!69238 () Bool)

(assert (=> b!69238 (= e!45339 (= (apply!73 lt!30403 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!9754 c!9756) lt!29897 (zeroValue!2074 newMap!16))))))

(declare-fun b!69239 () Bool)

(assert (=> b!69239 (= e!45338 (= (apply!73 lt!30403 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2074 newMap!16)))))

(declare-fun b!69240 () Bool)

(declare-fun res!37174 () Bool)

(assert (=> b!69240 (=> (not res!37174) (not e!45346))))

(assert (=> b!69240 (= res!37174 e!45336)))

(declare-fun c!9873 () Bool)

(assert (=> b!69240 (= c!9873 (not (= (bvand (ite (and c!9754 c!9756) lt!30124 (extraKeys!2035 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!69241 () Bool)

(declare-fun e!45340 () ListLongMap!1407)

(assert (=> b!69241 (= e!45347 e!45340)))

(assert (=> b!69241 (= c!9875 (and (not (= (bvand (ite (and c!9754 c!9756) lt!30124 (extraKeys!2035 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite (and c!9754 c!9756) lt!30124 (extraKeys!2035 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!69242 () Bool)

(assert (=> b!69242 (= e!45346 e!45341)))

(declare-fun c!9871 () Bool)

(assert (=> b!69242 (= c!9871 (not (= (bvand (ite (and c!9754 c!9756) lt!30124 (extraKeys!2035 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!69243 () Bool)

(assert (=> b!69243 (= e!45347 (+!90 call!5919 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))))))

(declare-fun b!69244 () Bool)

(declare-fun c!9874 () Bool)

(assert (=> b!69244 (= c!9874 (and (not (= (bvand (ite (and c!9754 c!9756) lt!30124 (extraKeys!2035 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite (and c!9754 c!9756) lt!30124 (extraKeys!2035 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!69244 (= e!45340 e!45344)))

(declare-fun b!69245 () Bool)

(declare-fun e!45345 () Bool)

(assert (=> b!69245 (= e!45345 (validKeyInArray!0 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!69246 () Bool)

(assert (=> b!69246 (= e!45341 (not call!5915))))

(declare-fun b!69247 () Bool)

(declare-fun res!37177 () Bool)

(assert (=> b!69247 (=> (not res!37177) (not e!45346))))

(declare-fun e!45343 () Bool)

(assert (=> b!69247 (= res!37177 e!45343)))

(declare-fun res!37175 () Bool)

(assert (=> b!69247 (=> res!37175 e!45343)))

(assert (=> b!69247 (= res!37175 (not e!45345))))

(declare-fun res!37170 () Bool)

(assert (=> b!69247 (=> (not res!37170) (not e!45345))))

(assert (=> b!69247 (= res!37170 (bvslt #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))))))

(declare-fun b!69248 () Bool)

(declare-fun call!5917 () ListLongMap!1407)

(assert (=> b!69248 (= e!45344 call!5917)))

(declare-fun bm!5915 () Bool)

(assert (=> bm!5915 (= call!5917 call!5919)))

(declare-fun bm!5916 () Bool)

(assert (=> bm!5916 (= call!5916 call!5914)))

(declare-fun b!69249 () Bool)

(assert (=> b!69249 (= e!45340 call!5917)))

(declare-fun b!69250 () Bool)

(assert (=> b!69250 (= e!45343 e!45342)))

(declare-fun res!37178 () Bool)

(assert (=> b!69250 (=> (not res!37178) (not e!45342))))

(assert (=> b!69250 (= res!37178 (contains!714 lt!30403 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!69250 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))))))

(declare-fun bm!5917 () Bool)

(assert (=> bm!5917 (= call!5918 (contains!714 lt!30403 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69251 () Bool)

(assert (=> b!69251 (= e!45336 (not call!5918))))

(assert (= (and d!15015 c!9872) b!69243))

(assert (= (and d!15015 (not c!9872)) b!69241))

(assert (= (and b!69241 c!9875) b!69249))

(assert (= (and b!69241 (not c!9875)) b!69244))

(assert (= (and b!69244 c!9874) b!69248))

(assert (= (and b!69244 (not c!9874)) b!69234))

(assert (= (or b!69248 b!69234) bm!5916))

(assert (= (or b!69249 bm!5916) bm!5914))

(assert (= (or b!69249 b!69248) bm!5915))

(assert (= (or b!69243 bm!5914) bm!5913))

(assert (= (or b!69243 bm!5915) bm!5912))

(assert (= (and d!15015 res!37173) b!69237))

(assert (= (and d!15015 c!9876) b!69232))

(assert (= (and d!15015 (not c!9876)) b!69236))

(assert (= (and d!15015 res!37172) b!69247))

(assert (= (and b!69247 res!37170) b!69245))

(assert (= (and b!69247 (not res!37175)) b!69250))

(assert (= (and b!69250 res!37178) b!69231))

(assert (= (and b!69247 res!37177) b!69240))

(assert (= (and b!69240 c!9873) b!69235))

(assert (= (and b!69240 (not c!9873)) b!69251))

(assert (= (and b!69235 res!37171) b!69238))

(assert (= (or b!69235 b!69251) bm!5917))

(assert (= (and b!69240 res!37174) b!69242))

(assert (= (and b!69242 c!9871) b!69233))

(assert (= (and b!69242 (not c!9871)) b!69246))

(assert (= (and b!69233 res!37176) b!69239))

(assert (= (or b!69233 b!69246) bm!5911))

(declare-fun b_lambda!3099 () Bool)

(assert (=> (not b_lambda!3099) (not b!69231)))

(assert (=> b!69231 t!4980))

(declare-fun b_and!4263 () Bool)

(assert (= b_and!4259 (and (=> t!4980 result!2619) b_and!4263)))

(assert (=> b!69231 t!4982))

(declare-fun b_and!4265 () Bool)

(assert (= b_and!4261 (and (=> t!4982 result!2621) b_and!4265)))

(declare-fun m!65427 () Bool)

(assert (=> bm!5917 m!65427))

(declare-fun m!65429 () Bool)

(assert (=> bm!5912 m!65429))

(declare-fun m!65431 () Bool)

(assert (=> b!69243 m!65431))

(declare-fun m!65433 () Bool)

(assert (=> bm!5911 m!65433))

(assert (=> b!69237 m!64775))

(assert (=> b!69237 m!64775))

(assert (=> b!69237 m!64777))

(assert (=> b!69250 m!64775))

(assert (=> b!69250 m!64775))

(declare-fun m!65435 () Bool)

(assert (=> b!69250 m!65435))

(declare-fun m!65437 () Bool)

(assert (=> b!69238 m!65437))

(declare-fun m!65439 () Bool)

(assert (=> b!69239 m!65439))

(assert (=> b!69231 m!64807))

(declare-fun m!65441 () Bool)

(assert (=> b!69231 m!65441))

(assert (=> b!69231 m!64807))

(declare-fun m!65443 () Bool)

(assert (=> b!69231 m!65443))

(assert (=> b!69231 m!65441))

(assert (=> b!69231 m!64775))

(declare-fun m!65445 () Bool)

(assert (=> b!69231 m!65445))

(assert (=> b!69231 m!64775))

(assert (=> d!15015 m!64759))

(declare-fun m!65447 () Bool)

(assert (=> bm!5913 m!65447))

(assert (=> b!69245 m!64775))

(assert (=> b!69245 m!64775))

(assert (=> b!69245 m!64777))

(declare-fun m!65449 () Bool)

(assert (=> b!69232 m!65449))

(declare-fun m!65451 () Bool)

(assert (=> b!69232 m!65451))

(declare-fun m!65453 () Bool)

(assert (=> b!69232 m!65453))

(declare-fun m!65455 () Bool)

(assert (=> b!69232 m!65455))

(declare-fun m!65457 () Bool)

(assert (=> b!69232 m!65457))

(declare-fun m!65459 () Bool)

(assert (=> b!69232 m!65459))

(declare-fun m!65461 () Bool)

(assert (=> b!69232 m!65461))

(declare-fun m!65463 () Bool)

(assert (=> b!69232 m!65463))

(assert (=> b!69232 m!65457))

(declare-fun m!65465 () Bool)

(assert (=> b!69232 m!65465))

(assert (=> b!69232 m!64775))

(declare-fun m!65467 () Bool)

(assert (=> b!69232 m!65467))

(declare-fun m!65469 () Bool)

(assert (=> b!69232 m!65469))

(declare-fun m!65471 () Bool)

(assert (=> b!69232 m!65471))

(assert (=> b!69232 m!65459))

(declare-fun m!65473 () Bool)

(assert (=> b!69232 m!65473))

(assert (=> b!69232 m!65467))

(assert (=> b!69232 m!65451))

(declare-fun m!65475 () Bool)

(assert (=> b!69232 m!65475))

(assert (=> b!69232 m!65447))

(declare-fun m!65477 () Bool)

(assert (=> b!69232 m!65477))

(assert (=> bm!5842 d!15015))

(assert (=> b!68670 d!14935))

(assert (=> bm!5781 d!14801))

(declare-fun d!15017 () Bool)

(declare-fun e!45349 () Bool)

(assert (=> d!15017 e!45349))

(declare-fun res!37179 () Bool)

(assert (=> d!15017 (=> res!37179 e!45349)))

(declare-fun lt!30409 () Bool)

(assert (=> d!15017 (= res!37179 (not lt!30409))))

(declare-fun lt!30408 () Bool)

(assert (=> d!15017 (= lt!30409 lt!30408)))

(declare-fun lt!30410 () Unit!1919)

(declare-fun e!45350 () Unit!1919)

(assert (=> d!15017 (= lt!30410 e!45350)))

(declare-fun c!9877 () Bool)

(assert (=> d!15017 (= c!9877 lt!30408)))

(assert (=> d!15017 (= lt!30408 (containsKey!135 (toList!719 lt!29996) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!15017 (= (contains!714 lt!29996 #b0000000000000000000000000000000000000000000000000000000000000000) lt!30409)))

(declare-fun b!69252 () Bool)

(declare-fun lt!30411 () Unit!1919)

(assert (=> b!69252 (= e!45350 lt!30411)))

(assert (=> b!69252 (= lt!30411 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 lt!29996) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!69252 (isDefined!84 (getValueByKey!131 (toList!719 lt!29996) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69253 () Bool)

(declare-fun Unit!1945 () Unit!1919)

(assert (=> b!69253 (= e!45350 Unit!1945)))

(declare-fun b!69254 () Bool)

(assert (=> b!69254 (= e!45349 (isDefined!84 (getValueByKey!131 (toList!719 lt!29996) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15017 c!9877) b!69252))

(assert (= (and d!15017 (not c!9877)) b!69253))

(assert (= (and d!15017 (not res!37179)) b!69254))

(declare-fun m!65479 () Bool)

(assert (=> d!15017 m!65479))

(declare-fun m!65481 () Bool)

(assert (=> b!69252 m!65481))

(assert (=> b!69252 m!64745))

(assert (=> b!69252 m!64745))

(declare-fun m!65483 () Bool)

(assert (=> b!69252 m!65483))

(assert (=> b!69254 m!64745))

(assert (=> b!69254 m!64745))

(assert (=> b!69254 m!65483))

(assert (=> bm!5785 d!15017))

(declare-fun b!69289 () Bool)

(declare-fun res!37206 () Bool)

(declare-fun e!45367 () Bool)

(assert (=> b!69289 (=> (not res!37206) (not e!45367))))

(declare-fun lt!30497 () tuple2!2100)

(assert (=> b!69289 (= res!37206 (valid!283 (_2!1061 lt!30497)))))

(declare-fun call!5932 () Bool)

(declare-fun bm!5926 () Bool)

(assert (=> bm!5926 (= call!5932 (arrayContainsKey!0 (_keys!3812 newMap!16) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!69290 () Bool)

(declare-fun res!37202 () Bool)

(declare-fun lt!30490 () SeekEntryResult!234)

(assert (=> b!69290 (= res!37202 (= (select (arr!1841 (_keys!3812 newMap!16)) (index!3068 lt!30490)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!45368 () Bool)

(assert (=> b!69290 (=> (not res!37202) (not e!45368))))

(declare-fun b!69291 () Bool)

(assert (=> b!69291 (= e!45368 (not call!5932))))

(declare-fun c!9886 () Bool)

(declare-fun lt!30489 () SeekEntryResult!234)

(declare-fun c!9888 () Bool)

(declare-fun call!5929 () Bool)

(declare-fun bm!5927 () Bool)

(assert (=> bm!5927 (= call!5929 (inRange!0 (ite c!9888 (index!3066 lt!30489) (ite c!9886 (index!3065 lt!30490) (index!3068 lt!30490))) (mask!6113 newMap!16)))))

(declare-fun b!69292 () Bool)

(declare-fun res!37204 () Bool)

(declare-fun e!45369 () Bool)

(assert (=> b!69292 (=> (not res!37204) (not e!45369))))

(assert (=> b!69292 (= res!37204 (= (select (arr!1841 (_keys!3812 newMap!16)) (index!3065 lt!30490)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69293 () Bool)

(declare-fun e!45373 () Unit!1919)

(declare-fun Unit!1946 () Unit!1919)

(assert (=> b!69293 (= e!45373 Unit!1946)))

(declare-fun lt!30496 () Unit!1919)

(assert (=> b!69293 (= lt!30496 (lemmaInListMapThenSeekEntryOrOpenFindsIt!22 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (defaultEntry!2168 newMap!16)))))

(declare-fun call!5931 () SeekEntryResult!234)

(assert (=> b!69293 (= lt!30489 call!5931)))

(declare-fun res!37201 () Bool)

(assert (=> b!69293 (= res!37201 ((_ is Found!234) lt!30489))))

(declare-fun e!45374 () Bool)

(assert (=> b!69293 (=> (not res!37201) (not e!45374))))

(assert (=> b!69293 e!45374))

(declare-fun lt!30498 () Unit!1919)

(assert (=> b!69293 (= lt!30498 lt!30496)))

(assert (=> b!69293 false))

(declare-fun d!15019 () Bool)

(assert (=> d!15019 e!45367))

(declare-fun res!37198 () Bool)

(assert (=> d!15019 (=> (not res!37198) (not e!45367))))

(assert (=> d!15019 (= res!37198 (_1!1061 lt!30497))))

(assert (=> d!15019 (= lt!30497 (tuple2!2101 true (LongMapFixedSize!679 (defaultEntry!2168 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (bvadd (_size!388 newMap!16) #b00000000000000000000000000000001) (array!3856 (store (arr!1841 (_keys!3812 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2077 (_keys!3812 newMap!16))) (array!3858 (store (arr!1842 (_values!2151 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (ValueCellFull!885 lt!29897)) (size!2078 (_values!2151 newMap!16))) (_vacant!388 newMap!16))))))

(declare-fun lt!30491 () Unit!1919)

(declare-fun lt!30493 () Unit!1919)

(assert (=> d!15019 (= lt!30491 lt!30493)))

(declare-fun lt!30481 () array!3857)

(declare-fun lt!30499 () array!3855)

(assert (=> d!15019 (contains!714 (getCurrentListMap!417 lt!30499 lt!30481 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) (select (store (arr!1841 (_keys!3812 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149))))))

(assert (=> d!15019 (= lt!30493 (lemmaValidKeyInArrayIsInListMap!83 lt!30499 lt!30481 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (defaultEntry!2168 newMap!16)))))

(assert (=> d!15019 (= lt!30481 (array!3858 (store (arr!1842 (_values!2151 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (ValueCellFull!885 lt!29897)) (size!2078 (_values!2151 newMap!16))))))

(assert (=> d!15019 (= lt!30499 (array!3856 (store (arr!1841 (_keys!3812 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2077 (_keys!3812 newMap!16))))))

(declare-fun lt!30487 () Unit!1919)

(declare-fun lt!30484 () Unit!1919)

(assert (=> d!15019 (= lt!30487 lt!30484)))

(declare-fun lt!30473 () array!3855)

(assert (=> d!15019 (= (arrayCountValidKeys!0 lt!30473 (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (bvadd (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!3855 (_ BitVec 32)) Unit!1919)

(assert (=> d!15019 (= lt!30484 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!30473 (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149))))))

(assert (=> d!15019 (= lt!30473 (array!3856 (store (arr!1841 (_keys!3812 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2077 (_keys!3812 newMap!16))))))

(declare-fun lt!30488 () Unit!1919)

(declare-fun lt!30472 () Unit!1919)

(assert (=> d!15019 (= lt!30488 lt!30472)))

(declare-fun lt!30474 () array!3855)

(assert (=> d!15019 (arrayContainsKey!0 lt!30474 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(assert (=> d!15019 (= lt!30472 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!30474 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149))))))

(assert (=> d!15019 (= lt!30474 (array!3856 (store (arr!1841 (_keys!3812 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2077 (_keys!3812 newMap!16))))))

(declare-fun lt!30480 () Unit!1919)

(declare-fun lt!30482 () Unit!1919)

(assert (=> d!15019 (= lt!30480 lt!30482)))

(assert (=> d!15019 (= (+!90 (getCurrentListMap!417 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)) (getCurrentListMap!417 (array!3856 (store (arr!1841 (_keys!3812 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2077 (_keys!3812 newMap!16))) (array!3858 (store (arr!1842 (_values!2151 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (ValueCellFull!885 lt!29897)) (size!2078 (_values!2151 newMap!16))) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!11 (array!3855 array!3857 (_ BitVec 32) (_ BitVec 32) V!2923 V!2923 (_ BitVec 32) (_ BitVec 64) V!2923 Int) Unit!1919)

(assert (=> d!15019 (= lt!30482 (lemmaAddValidKeyToArrayThenAddPairToListMap!11 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30494 () Unit!1919)

(declare-fun lt!30486 () Unit!1919)

(assert (=> d!15019 (= lt!30494 lt!30486)))

(assert (=> d!15019 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3856 (store (arr!1841 (_keys!3812 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2077 (_keys!3812 newMap!16))) (mask!6113 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!3855 (_ BitVec 32) (_ BitVec 32)) Unit!1919)

(assert (=> d!15019 (= lt!30486 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (_keys!3812 newMap!16) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (mask!6113 newMap!16)))))

(declare-fun lt!30479 () Unit!1919)

(declare-fun lt!30501 () Unit!1919)

(assert (=> d!15019 (= lt!30479 lt!30501)))

(assert (=> d!15019 (= (arrayCountValidKeys!0 (array!3856 (store (arr!1841 (_keys!3812 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2077 (_keys!3812 newMap!16))) #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!3812 newMap!16) #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!3855 (_ BitVec 32) (_ BitVec 64)) Unit!1919)

(assert (=> d!15019 (= lt!30501 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3812 newMap!16) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(declare-fun lt!30495 () Unit!1919)

(declare-fun lt!30476 () Unit!1919)

(assert (=> d!15019 (= lt!30495 lt!30476)))

(declare-fun lt!30475 () List!1470)

(declare-fun lt!30492 () (_ BitVec 32))

(assert (=> d!15019 (arrayNoDuplicates!0 (array!3856 (store (arr!1841 (_keys!3812 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2077 (_keys!3812 newMap!16))) lt!30492 lt!30475)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!3855 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1470) Unit!1919)

(assert (=> d!15019 (= lt!30476 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3812 newMap!16) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) lt!30492 lt!30475))))

(assert (=> d!15019 (= lt!30475 Nil!1467)))

(assert (=> d!15019 (= lt!30492 #b00000000000000000000000000000000)))

(declare-fun lt!30477 () Unit!1919)

(declare-fun e!45372 () Unit!1919)

(assert (=> d!15019 (= lt!30477 e!45372)))

(declare-fun c!9889 () Bool)

(assert (=> d!15019 (= c!9889 (arrayContainsKey!0 (_keys!3812 newMap!16) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!30483 () Unit!1919)

(assert (=> d!15019 (= lt!30483 e!45373)))

(assert (=> d!15019 (= c!9888 (contains!714 (getCurrentListMap!417 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(assert (=> d!15019 (valid!283 newMap!16)))

(assert (=> d!15019 (= (updateHelperNewKey!22 newMap!16 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897 (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149))) lt!30497)))

(declare-fun b!69294 () Bool)

(declare-fun res!37199 () Bool)

(assert (=> b!69294 (=> (not res!37199) (not e!45367))))

(assert (=> b!69294 (= res!37199 (contains!714 (map!1140 (_2!1061 lt!30497)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(declare-fun b!69295 () Bool)

(assert (=> b!69295 (= e!45369 (not call!5932))))

(declare-fun b!69296 () Bool)

(assert (=> b!69296 (= e!45374 (= (select (arr!1841 (_keys!3812 newMap!16)) (index!3066 lt!30489)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(declare-fun b!69297 () Bool)

(assert (=> b!69297 (= e!45367 (= (map!1140 (_2!1061 lt!30497)) (+!90 (map!1140 newMap!16) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))

(declare-fun bm!5928 () Bool)

(declare-fun call!5930 () Bool)

(assert (=> bm!5928 (= call!5930 call!5929)))

(declare-fun b!69298 () Bool)

(declare-fun res!37200 () Bool)

(assert (=> b!69298 (=> (not res!37200) (not e!45369))))

(assert (=> b!69298 (= res!37200 call!5930)))

(declare-fun e!45371 () Bool)

(assert (=> b!69298 (= e!45371 e!45369)))

(declare-fun b!69299 () Bool)

(declare-fun Unit!1947 () Unit!1919)

(assert (=> b!69299 (= e!45372 Unit!1947)))

(declare-fun b!69300 () Bool)

(declare-fun e!45370 () Bool)

(assert (=> b!69300 (= e!45370 ((_ is Undefined!234) lt!30490))))

(declare-fun b!69301 () Bool)

(declare-fun Unit!1948 () Unit!1919)

(assert (=> b!69301 (= e!45372 Unit!1948)))

(declare-fun lt!30485 () Unit!1919)

(declare-fun lemmaArrayContainsKeyThenInListMap!11 (array!3855 array!3857 (_ BitVec 32) (_ BitVec 32) V!2923 V!2923 (_ BitVec 64) (_ BitVec 32) Int) Unit!1919)

(assert (=> b!69301 (= lt!30485 (lemmaArrayContainsKeyThenInListMap!11 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(assert (=> b!69301 (contains!714 (getCurrentListMap!417 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355))))

(declare-fun lt!30500 () Unit!1919)

(assert (=> b!69301 (= lt!30500 lt!30485)))

(assert (=> b!69301 false))

(declare-fun b!69302 () Bool)

(declare-fun c!9887 () Bool)

(assert (=> b!69302 (= c!9887 ((_ is MissingVacant!234) lt!30490))))

(assert (=> b!69302 (= e!45371 e!45370)))

(declare-fun b!69303 () Bool)

(declare-fun lt!30478 () Unit!1919)

(assert (=> b!69303 (= e!45373 lt!30478)))

(assert (=> b!69303 (= lt!30478 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!22 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (defaultEntry!2168 newMap!16)))))

(assert (=> b!69303 (= lt!30490 call!5931)))

(assert (=> b!69303 (= c!9886 ((_ is MissingZero!234) lt!30490))))

(assert (=> b!69303 e!45371))

(declare-fun bm!5929 () Bool)

(assert (=> bm!5929 (= call!5931 (seekEntryOrOpen!0 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (_keys!3812 newMap!16) (mask!6113 newMap!16)))))

(declare-fun b!69304 () Bool)

(assert (=> b!69304 (= e!45370 e!45368)))

(declare-fun res!37203 () Bool)

(assert (=> b!69304 (= res!37203 call!5930)))

(assert (=> b!69304 (=> (not res!37203) (not e!45368))))

(declare-fun b!69305 () Bool)

(declare-fun res!37205 () Bool)

(assert (=> b!69305 (= res!37205 call!5929)))

(assert (=> b!69305 (=> (not res!37205) (not e!45374))))

(assert (= (and d!15019 c!9888) b!69293))

(assert (= (and d!15019 (not c!9888)) b!69303))

(assert (= (and b!69293 res!37201) b!69305))

(assert (= (and b!69305 res!37205) b!69296))

(assert (= (and b!69303 c!9886) b!69298))

(assert (= (and b!69303 (not c!9886)) b!69302))

(assert (= (and b!69298 res!37200) b!69292))

(assert (= (and b!69292 res!37204) b!69295))

(assert (= (and b!69302 c!9887) b!69304))

(assert (= (and b!69302 (not c!9887)) b!69300))

(assert (= (and b!69304 res!37203) b!69290))

(assert (= (and b!69290 res!37202) b!69291))

(assert (= (or b!69298 b!69304) bm!5928))

(assert (= (or b!69295 b!69291) bm!5926))

(assert (= (or b!69305 bm!5928) bm!5927))

(assert (= (or b!69293 b!69303) bm!5929))

(assert (= (and d!15019 c!9889) b!69301))

(assert (= (and d!15019 (not c!9889)) b!69299))

(assert (= (and d!15019 res!37198) b!69289))

(assert (= (and b!69289 res!37206) b!69294))

(assert (= (and b!69294 res!37199) b!69297))

(assert (=> b!69303 m!64407))

(assert (=> b!69303 m!64709))

(assert (=> b!69293 m!64407))

(assert (=> b!69293 m!64701))

(assert (=> bm!5926 m!64407))

(assert (=> bm!5926 m!64689))

(declare-fun m!65485 () Bool)

(assert (=> b!69294 m!65485))

(assert (=> b!69294 m!65485))

(assert (=> b!69294 m!64407))

(declare-fun m!65487 () Bool)

(assert (=> b!69294 m!65487))

(declare-fun m!65489 () Bool)

(assert (=> b!69292 m!65489))

(declare-fun m!65491 () Bool)

(assert (=> b!69289 m!65491))

(assert (=> b!69297 m!65485))

(assert (=> b!69297 m!64403))

(assert (=> b!69297 m!64403))

(declare-fun m!65493 () Bool)

(assert (=> b!69297 m!65493))

(declare-fun m!65495 () Bool)

(assert (=> d!15019 m!65495))

(assert (=> d!15019 m!64407))

(declare-fun m!65497 () Bool)

(assert (=> d!15019 m!65497))

(declare-fun m!65499 () Bool)

(assert (=> d!15019 m!65499))

(assert (=> d!15019 m!64407))

(declare-fun m!65501 () Bool)

(assert (=> d!15019 m!65501))

(assert (=> d!15019 m!64511))

(assert (=> d!15019 m!64859))

(declare-fun m!65503 () Bool)

(assert (=> d!15019 m!65503))

(declare-fun m!65505 () Bool)

(assert (=> d!15019 m!65505))

(assert (=> d!15019 m!64401))

(declare-fun m!65507 () Bool)

(assert (=> d!15019 m!65507))

(assert (=> d!15019 m!64407))

(declare-fun m!65509 () Bool)

(assert (=> d!15019 m!65509))

(declare-fun m!65511 () Bool)

(assert (=> d!15019 m!65511))

(declare-fun m!65513 () Bool)

(assert (=> d!15019 m!65513))

(declare-fun m!65515 () Bool)

(assert (=> d!15019 m!65515))

(declare-fun m!65517 () Bool)

(assert (=> d!15019 m!65517))

(assert (=> d!15019 m!65513))

(declare-fun m!65519 () Bool)

(assert (=> d!15019 m!65519))

(assert (=> d!15019 m!64729))

(assert (=> d!15019 m!64407))

(assert (=> d!15019 m!64689))

(assert (=> d!15019 m!65515))

(assert (=> d!15019 m!64407))

(declare-fun m!65521 () Bool)

(assert (=> d!15019 m!65521))

(declare-fun m!65523 () Bool)

(assert (=> d!15019 m!65523))

(assert (=> d!15019 m!64407))

(declare-fun m!65525 () Bool)

(assert (=> d!15019 m!65525))

(assert (=> d!15019 m!64511))

(assert (=> d!15019 m!64407))

(assert (=> d!15019 m!64717))

(declare-fun m!65527 () Bool)

(assert (=> d!15019 m!65527))

(assert (=> d!15019 m!64407))

(declare-fun m!65529 () Bool)

(assert (=> d!15019 m!65529))

(assert (=> d!15019 m!64511))

(declare-fun m!65531 () Bool)

(assert (=> b!69296 m!65531))

(assert (=> b!69301 m!64407))

(declare-fun m!65533 () Bool)

(assert (=> b!69301 m!65533))

(assert (=> b!69301 m!64511))

(assert (=> b!69301 m!64511))

(assert (=> b!69301 m!64407))

(assert (=> b!69301 m!64717))

(assert (=> bm!5929 m!64407))

(assert (=> bm!5929 m!64695))

(declare-fun m!65535 () Bool)

(assert (=> b!69290 m!65535))

(declare-fun m!65537 () Bool)

(assert (=> bm!5927 m!65537))

(assert (=> bm!5841 d!15019))

(declare-fun d!15021 () Bool)

(declare-fun e!45375 () Bool)

(assert (=> d!15021 e!45375))

(declare-fun res!37207 () Bool)

(assert (=> d!15021 (=> res!37207 e!45375)))

(declare-fun lt!30503 () Bool)

(assert (=> d!15021 (= res!37207 (not lt!30503))))

(declare-fun lt!30502 () Bool)

(assert (=> d!15021 (= lt!30503 lt!30502)))

(declare-fun lt!30504 () Unit!1919)

(declare-fun e!45376 () Unit!1919)

(assert (=> d!15021 (= lt!30504 e!45376)))

(declare-fun c!9890 () Bool)

(assert (=> d!15021 (= c!9890 lt!30502)))

(assert (=> d!15021 (= lt!30502 (containsKey!135 (toList!719 lt!30029) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!15021 (= (contains!714 lt!30029 #b1000000000000000000000000000000000000000000000000000000000000000) lt!30503)))

(declare-fun b!69306 () Bool)

(declare-fun lt!30505 () Unit!1919)

(assert (=> b!69306 (= e!45376 lt!30505)))

(assert (=> b!69306 (= lt!30505 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 lt!30029) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!69306 (isDefined!84 (getValueByKey!131 (toList!719 lt!30029) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69307 () Bool)

(declare-fun Unit!1949 () Unit!1919)

(assert (=> b!69307 (= e!45376 Unit!1949)))

(declare-fun b!69308 () Bool)

(assert (=> b!69308 (= e!45375 (isDefined!84 (getValueByKey!131 (toList!719 lt!30029) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15021 c!9890) b!69306))

(assert (= (and d!15021 (not c!9890)) b!69307))

(assert (= (and d!15021 (not res!37207)) b!69308))

(declare-fun m!65539 () Bool)

(assert (=> d!15021 m!65539))

(declare-fun m!65541 () Bool)

(assert (=> b!69306 m!65541))

(declare-fun m!65543 () Bool)

(assert (=> b!69306 m!65543))

(assert (=> b!69306 m!65543))

(declare-fun m!65545 () Bool)

(assert (=> b!69306 m!65545))

(assert (=> b!69308 m!65543))

(assert (=> b!69308 m!65543))

(assert (=> b!69308 m!65545))

(assert (=> b!68674 d!15021))

(declare-fun d!15023 () Bool)

(assert (=> d!15023 (= (get!1126 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) from!355) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!68821 d!15023))

(assert (=> b!68780 d!14855))

(declare-fun d!15025 () Bool)

(declare-fun e!45377 () Bool)

(assert (=> d!15025 e!45377))

(declare-fun res!37208 () Bool)

(assert (=> d!15025 (=> res!37208 e!45377)))

(declare-fun lt!30507 () Bool)

(assert (=> d!15025 (= res!37208 (not lt!30507))))

(declare-fun lt!30506 () Bool)

(assert (=> d!15025 (= lt!30507 lt!30506)))

(declare-fun lt!30508 () Unit!1919)

(declare-fun e!45378 () Unit!1919)

(assert (=> d!15025 (= lt!30508 e!45378)))

(declare-fun c!9891 () Bool)

(assert (=> d!15025 (= c!9891 lt!30506)))

(assert (=> d!15025 (= lt!30506 (containsKey!135 (toList!719 call!5866) (ite c!9759 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (select (arr!1841 (_keys!3812 newMap!16)) (index!3066 lt!30149)))))))

(assert (=> d!15025 (= (contains!714 call!5866 (ite c!9759 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (select (arr!1841 (_keys!3812 newMap!16)) (index!3066 lt!30149)))) lt!30507)))

(declare-fun b!69309 () Bool)

(declare-fun lt!30509 () Unit!1919)

(assert (=> b!69309 (= e!45378 lt!30509)))

(assert (=> b!69309 (= lt!30509 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 call!5866) (ite c!9759 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (select (arr!1841 (_keys!3812 newMap!16)) (index!3066 lt!30149)))))))

(assert (=> b!69309 (isDefined!84 (getValueByKey!131 (toList!719 call!5866) (ite c!9759 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (select (arr!1841 (_keys!3812 newMap!16)) (index!3066 lt!30149)))))))

(declare-fun b!69310 () Bool)

(declare-fun Unit!1950 () Unit!1919)

(assert (=> b!69310 (= e!45378 Unit!1950)))

(declare-fun b!69311 () Bool)

(assert (=> b!69311 (= e!45377 (isDefined!84 (getValueByKey!131 (toList!719 call!5866) (ite c!9759 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (select (arr!1841 (_keys!3812 newMap!16)) (index!3066 lt!30149))))))))

(assert (= (and d!15025 c!9891) b!69309))

(assert (= (and d!15025 (not c!9891)) b!69310))

(assert (= (and d!15025 (not res!37208)) b!69311))

(declare-fun m!65547 () Bool)

(assert (=> d!15025 m!65547))

(declare-fun m!65549 () Bool)

(assert (=> b!69309 m!65549))

(declare-fun m!65551 () Bool)

(assert (=> b!69309 m!65551))

(assert (=> b!69309 m!65551))

(declare-fun m!65553 () Bool)

(assert (=> b!69309 m!65553))

(assert (=> b!69311 m!65551))

(assert (=> b!69311 m!65551))

(assert (=> b!69311 m!65553))

(assert (=> bm!5860 d!15025))

(assert (=> b!68672 d!14935))

(declare-fun b!69312 () Bool)

(declare-fun e!45379 () Bool)

(assert (=> b!69312 (= e!45379 tp_is_empty!2457)))

(declare-fun mapNonEmpty!3113 () Bool)

(declare-fun mapRes!3113 () Bool)

(declare-fun tp!8423 () Bool)

(assert (=> mapNonEmpty!3113 (= mapRes!3113 (and tp!8423 e!45379))))

(declare-fun mapKey!3113 () (_ BitVec 32))

(declare-fun mapRest!3113 () (Array (_ BitVec 32) ValueCell!885))

(declare-fun mapValue!3113 () ValueCell!885)

(assert (=> mapNonEmpty!3113 (= mapRest!3111 (store mapRest!3113 mapKey!3113 mapValue!3113))))

(declare-fun mapIsEmpty!3113 () Bool)

(assert (=> mapIsEmpty!3113 mapRes!3113))

(declare-fun b!69313 () Bool)

(declare-fun e!45380 () Bool)

(assert (=> b!69313 (= e!45380 tp_is_empty!2457)))

(declare-fun condMapEmpty!3113 () Bool)

(declare-fun mapDefault!3113 () ValueCell!885)

(assert (=> mapNonEmpty!3111 (= condMapEmpty!3113 (= mapRest!3111 ((as const (Array (_ BitVec 32) ValueCell!885)) mapDefault!3113)))))

(assert (=> mapNonEmpty!3111 (= tp!8421 (and e!45380 mapRes!3113))))

(assert (= (and mapNonEmpty!3111 condMapEmpty!3113) mapIsEmpty!3113))

(assert (= (and mapNonEmpty!3111 (not condMapEmpty!3113)) mapNonEmpty!3113))

(assert (= (and mapNonEmpty!3113 ((_ is ValueCellFull!885) mapValue!3113)) b!69312))

(assert (= (and mapNonEmpty!3111 ((_ is ValueCellFull!885) mapDefault!3113)) b!69313))

(declare-fun m!65555 () Bool)

(assert (=> mapNonEmpty!3113 m!65555))

(declare-fun b!69314 () Bool)

(declare-fun e!45381 () Bool)

(assert (=> b!69314 (= e!45381 tp_is_empty!2457)))

(declare-fun mapNonEmpty!3114 () Bool)

(declare-fun mapRes!3114 () Bool)

(declare-fun tp!8424 () Bool)

(assert (=> mapNonEmpty!3114 (= mapRes!3114 (and tp!8424 e!45381))))

(declare-fun mapKey!3114 () (_ BitVec 32))

(declare-fun mapValue!3114 () ValueCell!885)

(declare-fun mapRest!3114 () (Array (_ BitVec 32) ValueCell!885))

(assert (=> mapNonEmpty!3114 (= mapRest!3112 (store mapRest!3114 mapKey!3114 mapValue!3114))))

(declare-fun mapIsEmpty!3114 () Bool)

(assert (=> mapIsEmpty!3114 mapRes!3114))

(declare-fun b!69315 () Bool)

(declare-fun e!45382 () Bool)

(assert (=> b!69315 (= e!45382 tp_is_empty!2457)))

(declare-fun condMapEmpty!3114 () Bool)

(declare-fun mapDefault!3114 () ValueCell!885)

(assert (=> mapNonEmpty!3112 (= condMapEmpty!3114 (= mapRest!3112 ((as const (Array (_ BitVec 32) ValueCell!885)) mapDefault!3114)))))

(assert (=> mapNonEmpty!3112 (= tp!8422 (and e!45382 mapRes!3114))))

(assert (= (and mapNonEmpty!3112 condMapEmpty!3114) mapIsEmpty!3114))

(assert (= (and mapNonEmpty!3112 (not condMapEmpty!3114)) mapNonEmpty!3114))

(assert (= (and mapNonEmpty!3114 ((_ is ValueCellFull!885) mapValue!3114)) b!69314))

(assert (= (and mapNonEmpty!3112 ((_ is ValueCellFull!885) mapDefault!3114)) b!69315))

(declare-fun m!65557 () Bool)

(assert (=> mapNonEmpty!3114 m!65557))

(declare-fun b_lambda!3101 () Bool)

(assert (= b_lambda!3099 (or (and b!68478 b_free!2081 (= (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) (defaultEntry!2168 newMap!16))) (and b!68465 b_free!2083) b_lambda!3101)))

(declare-fun b_lambda!3103 () Bool)

(assert (= b_lambda!3097 (or (and b!68478 b_free!2081 (= (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) (defaultEntry!2168 newMap!16))) (and b!68465 b_free!2083) b_lambda!3103)))

(declare-fun b_lambda!3105 () Bool)

(assert (= b_lambda!3093 (or (and b!68478 b_free!2081) (and b!68465 b_free!2083 (= (defaultEntry!2168 newMap!16) (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))))) b_lambda!3105)))

(declare-fun b_lambda!3107 () Bool)

(assert (= b_lambda!3091 (or (and b!68478 b_free!2081 (= (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) (defaultEntry!2168 newMap!16))) (and b!68465 b_free!2083) b_lambda!3107)))

(declare-fun b_lambda!3109 () Bool)

(assert (= b_lambda!3095 (or (and b!68478 b_free!2081) (and b!68465 b_free!2083 (= (defaultEntry!2168 newMap!16) (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))))) b_lambda!3109)))

(check-sat (not d!14945) (not d!14841) (not b!69081) (not b!69035) (not b!69099) (not b_next!2081) (not b!69113) (not b!69165) (not d!14865) (not b!68869) (not b!68871) (not b!69130) (not b!68944) (not d!14855) (not d!14927) (not d!15003) (not b!69297) (not b!69311) (not b_lambda!3089) (not b!68848) (not d!14903) (not b!69204) (not b!69156) (not b_lambda!3109) (not b!68882) (not b!69185) (not b!68864) (not d!15007) (not bm!5910) b_and!4265 (not b!69063) (not b!69237) (not b!68883) (not d!14989) (not b!69074) (not b!69178) (not b!68958) (not b!69197) (not d!14953) (not b!69143) (not b!69014) (not b!69176) (not b!69034) (not d!14859) (not b!69150) (not d!14905) (not b!68924) (not b!69171) (not b!69061) (not b!69038) (not b!69086) (not d!15013) (not b!69192) (not d!15019) (not d!14977) (not b!69066) (not b!69111) (not b!69103) (not b!69032) (not bm!5901) (not d!14911) (not bm!5887) (not b!69037) (not b!69031) (not b!69046) (not b!69022) (not b!68873) (not bm!5891) (not b!69303) (not b!68982) (not b!69142) (not b!69190) (not d!14919) (not bm!5912) (not bm!5929) (not d!14929) (not bm!5892) (not b!69045) (not d!15001) (not d!14867) (not mapNonEmpty!3113) (not b!69182) (not b!69195) (not b!68960) (not b!69168) (not b!69231) (not b!69109) (not b!68854) (not b!69146) (not d!14827) (not b!69309) (not b!68989) (not b!69238) (not b_lambda!3101) (not b!68895) (not b!68962) (not d!14961) (not d!14825) (not b_lambda!3085) (not d!14875) (not b!69030) (not b!68889) tp_is_empty!2457 (not b!69116) (not b!69148) (not d!14881) (not b!68971) (not bm!5893) (not bm!5875) (not b!69094) (not b!69029) (not d!14999) (not d!14965) (not b!69054) (not b!68945) (not d!14869) (not mapNonEmpty!3114) (not b!68966) (not d!14967) (not b!69293) (not d!14895) (not b!69206) (not b!69193) (not d!14823) (not d!14887) (not bm!5864) (not b!69289) (not b!68939) (not b!69306) (not bm!5890) (not b!69232) (not b_lambda!3077) (not d!15009) (not d!14851) (not d!14925) (not b!68894) (not d!14955) (not b!69059) (not b!69070) (not b!69118) (not b!69160) (not d!14879) (not bm!5870) (not bm!5904) (not d!14847) (not b!69158) (not b!69149) (not d!14899) (not bm!5868) (not b!68952) (not b!69203) (not b!69294) (not d!14971) (not d!14873) (not d!14923) (not d!14987) (not d!14863) (not b!68968) (not d!14843) (not b!69159) (not bm!5867) (not bm!5884) (not d!14963) (not b!69017) (not b!69036) (not b!69189) (not d!15005) (not d!15011) (not d!14915) (not b!68950) (not bm!5913) (not b!68900) (not b!69252) (not bm!5897) (not b!68910) (not b!68965) (not b!69010) (not d!14975) (not b!69080) (not b!69188) (not b!68888) (not d!15015) (not b!69025) (not d!14997) (not d!14979) (not bm!5926) (not b!69068) (not b!69144) (not d!14893) (not b!68907) (not d!14849) (not d!14949) (not b_lambda!3103) (not b!69250) (not b!69164) (not bm!5909) (not d!14985) (not b!69254) (not b!69088) (not b_lambda!3107) (not d!14835) (not bm!5911) (not d!15017) (not b!69145) (not bm!5898) (not d!15025) (not b!68896) (not b_next!2083) (not b!69174) (not d!14885) (not b!68919) (not b!69127) (not b!69243) (not b_lambda!3087) (not b!68963) (not b!68868) (not b!69129) (not bm!5869) (not b!69051) (not b!69177) (not d!14995) (not b!69169) (not d!14973) (not b!69157) (not d!14833) (not d!14871) (not b!69124) (not b!68916) (not d!14909) (not b!68988) (not b!68902) (not d!14959) (not b!68969) (not b!69087) (not bm!5927) b_and!4263 (not b!68959) (not d!14883) (not b!69166) (not b!68964) (not b!69191) (not d!14981) (not b!69047) (not d!14901) (not b!69161) (not b_lambda!3105) (not b!69301) (not b!68917) (not d!14941) (not d!14889) (not b!68961) (not d!14993) (not b!69033) (not b!68887) (not b!69040) (not b!69114) (not b!69245) (not bm!5874) (not b!68913) (not b!69092) (not b!68957) (not d!14829) (not d!14897) (not b!69308) (not b!68846) (not b!68865) (not b!69069) (not d!14957) (not d!14969) (not d!15021) (not b!69202) (not b!69194) (not d!14983) (not b!69027) (not bm!5917) (not b!69077) (not b!69106) (not b!69043) (not b!69239))
(check-sat b_and!4263 b_and!4265 (not b_next!2081) (not b_next!2083))
(get-model)

(declare-fun b!69316 () Bool)

(declare-fun e!45385 () List!1469)

(assert (=> b!69316 (= e!45385 (insertStrictlySorted!51 (t!4972 (t!4972 (toList!719 (+!90 lt!29889 lt!29892)))) (_1!1062 lt!29893) (_2!1062 lt!29893)))))

(declare-fun d!15027 () Bool)

(declare-fun e!45383 () Bool)

(assert (=> d!15027 e!45383))

(declare-fun res!37210 () Bool)

(assert (=> d!15027 (=> (not res!37210) (not e!45383))))

(declare-fun lt!30510 () List!1469)

(assert (=> d!15027 (= res!37210 (isStrictlySorted!290 lt!30510))))

(declare-fun e!45387 () List!1469)

(assert (=> d!15027 (= lt!30510 e!45387)))

(declare-fun c!9892 () Bool)

(assert (=> d!15027 (= c!9892 (and ((_ is Cons!1465) (t!4972 (toList!719 (+!90 lt!29889 lt!29892)))) (bvslt (_1!1062 (h!2050 (t!4972 (toList!719 (+!90 lt!29889 lt!29892))))) (_1!1062 lt!29893))))))

(assert (=> d!15027 (isStrictlySorted!290 (t!4972 (toList!719 (+!90 lt!29889 lt!29892))))))

(assert (=> d!15027 (= (insertStrictlySorted!51 (t!4972 (toList!719 (+!90 lt!29889 lt!29892))) (_1!1062 lt!29893) (_2!1062 lt!29893)) lt!30510)))

(declare-fun c!9894 () Bool)

(declare-fun b!69317 () Bool)

(declare-fun c!9895 () Bool)

(assert (=> b!69317 (= e!45385 (ite c!9895 (t!4972 (t!4972 (toList!719 (+!90 lt!29889 lt!29892)))) (ite c!9894 (Cons!1465 (h!2050 (t!4972 (toList!719 (+!90 lt!29889 lt!29892)))) (t!4972 (t!4972 (toList!719 (+!90 lt!29889 lt!29892))))) Nil!1466)))))

(declare-fun bm!5930 () Bool)

(declare-fun call!5935 () List!1469)

(declare-fun call!5934 () List!1469)

(assert (=> bm!5930 (= call!5935 call!5934)))

(declare-fun b!69318 () Bool)

(declare-fun e!45386 () List!1469)

(assert (=> b!69318 (= e!45386 call!5935)))

(declare-fun bm!5931 () Bool)

(declare-fun call!5933 () List!1469)

(assert (=> bm!5931 (= call!5934 call!5933)))

(declare-fun bm!5932 () Bool)

(assert (=> bm!5932 (= call!5933 ($colon$colon!64 e!45385 (ite c!9892 (h!2050 (t!4972 (toList!719 (+!90 lt!29889 lt!29892)))) (tuple2!2103 (_1!1062 lt!29893) (_2!1062 lt!29893)))))))

(declare-fun c!9893 () Bool)

(assert (=> bm!5932 (= c!9893 c!9892)))

(declare-fun b!69319 () Bool)

(declare-fun e!45384 () List!1469)

(assert (=> b!69319 (= e!45387 e!45384)))

(assert (=> b!69319 (= c!9895 (and ((_ is Cons!1465) (t!4972 (toList!719 (+!90 lt!29889 lt!29892)))) (= (_1!1062 (h!2050 (t!4972 (toList!719 (+!90 lt!29889 lt!29892))))) (_1!1062 lt!29893))))))

(declare-fun b!69320 () Bool)

(assert (=> b!69320 (= e!45383 (contains!716 lt!30510 (tuple2!2103 (_1!1062 lt!29893) (_2!1062 lt!29893))))))

(declare-fun b!69321 () Bool)

(assert (=> b!69321 (= e!45387 call!5933)))

(declare-fun b!69322 () Bool)

(assert (=> b!69322 (= e!45386 call!5935)))

(declare-fun b!69323 () Bool)

(declare-fun res!37209 () Bool)

(assert (=> b!69323 (=> (not res!37209) (not e!45383))))

(assert (=> b!69323 (= res!37209 (containsKey!135 lt!30510 (_1!1062 lt!29893)))))

(declare-fun b!69324 () Bool)

(assert (=> b!69324 (= e!45384 call!5934)))

(declare-fun b!69325 () Bool)

(assert (=> b!69325 (= c!9894 (and ((_ is Cons!1465) (t!4972 (toList!719 (+!90 lt!29889 lt!29892)))) (bvsgt (_1!1062 (h!2050 (t!4972 (toList!719 (+!90 lt!29889 lt!29892))))) (_1!1062 lt!29893))))))

(assert (=> b!69325 (= e!45384 e!45386)))

(assert (= (and d!15027 c!9892) b!69321))

(assert (= (and d!15027 (not c!9892)) b!69319))

(assert (= (and b!69319 c!9895) b!69324))

(assert (= (and b!69319 (not c!9895)) b!69325))

(assert (= (and b!69325 c!9894) b!69318))

(assert (= (and b!69325 (not c!9894)) b!69322))

(assert (= (or b!69318 b!69322) bm!5930))

(assert (= (or b!69324 bm!5930) bm!5931))

(assert (= (or b!69321 bm!5931) bm!5932))

(assert (= (and bm!5932 c!9893) b!69316))

(assert (= (and bm!5932 (not c!9893)) b!69317))

(assert (= (and d!15027 res!37210) b!69323))

(assert (= (and b!69323 res!37209) b!69320))

(declare-fun m!65559 () Bool)

(assert (=> b!69320 m!65559))

(declare-fun m!65561 () Bool)

(assert (=> d!15027 m!65561))

(declare-fun m!65563 () Bool)

(assert (=> d!15027 m!65563))

(declare-fun m!65565 () Bool)

(assert (=> b!69316 m!65565))

(declare-fun m!65567 () Bool)

(assert (=> bm!5932 m!65567))

(declare-fun m!65569 () Bool)

(assert (=> b!69323 m!65569))

(assert (=> b!69047 d!15027))

(declare-fun lt!30511 () Bool)

(declare-fun d!15029 () Bool)

(assert (=> d!15029 (= lt!30511 (select (content!73 (toList!719 lt!30334)) (tuple2!2103 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun e!45389 () Bool)

(assert (=> d!15029 (= lt!30511 e!45389)))

(declare-fun res!37211 () Bool)

(assert (=> d!15029 (=> (not res!37211) (not e!45389))))

(assert (=> d!15029 (= res!37211 ((_ is Cons!1465) (toList!719 lt!30334)))))

(assert (=> d!15029 (= (contains!716 (toList!719 lt!30334) (tuple2!2103 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))) lt!30511)))

(declare-fun b!69326 () Bool)

(declare-fun e!45388 () Bool)

(assert (=> b!69326 (= e!45389 e!45388)))

(declare-fun res!37212 () Bool)

(assert (=> b!69326 (=> res!37212 e!45388)))

(assert (=> b!69326 (= res!37212 (= (h!2050 (toList!719 lt!30334)) (tuple2!2103 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun b!69327 () Bool)

(assert (=> b!69327 (= e!45388 (contains!716 (t!4972 (toList!719 lt!30334)) (tuple2!2103 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))))

(assert (= (and d!15029 res!37211) b!69326))

(assert (= (and b!69326 (not res!37212)) b!69327))

(declare-fun m!65571 () Bool)

(assert (=> d!15029 m!65571))

(declare-fun m!65573 () Bool)

(assert (=> d!15029 m!65573))

(declare-fun m!65575 () Bool)

(assert (=> b!69327 m!65575))

(assert (=> b!69161 d!15029))

(declare-fun b!69328 () Bool)

(declare-fun e!45390 () Bool)

(declare-fun e!45391 () Bool)

(assert (=> b!69328 (= e!45390 e!45391)))

(declare-fun c!9896 () Bool)

(assert (=> b!69328 (= c!9896 (validKeyInArray!0 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!69329 () Bool)

(declare-fun e!45392 () Bool)

(assert (=> b!69329 (= e!45391 e!45392)))

(declare-fun lt!30512 () (_ BitVec 64))

(assert (=> b!69329 (= lt!30512 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!30513 () Unit!1919)

(assert (=> b!69329 (= lt!30513 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3812 (v!2494 (underlying!253 thiss!992))) lt!30512 #b00000000000000000000000000000000))))

(assert (=> b!69329 (arrayContainsKey!0 (_keys!3812 (v!2494 (underlying!253 thiss!992))) lt!30512 #b00000000000000000000000000000000)))

(declare-fun lt!30514 () Unit!1919)

(assert (=> b!69329 (= lt!30514 lt!30513)))

(declare-fun res!37214 () Bool)

(assert (=> b!69329 (= res!37214 (= (seekEntryOrOpen!0 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) #b00000000000000000000000000000000) (_keys!3812 (v!2494 (underlying!253 thiss!992))) (mask!6113 (v!2494 (underlying!253 thiss!992)))) (Found!234 #b00000000000000000000000000000000)))))

(assert (=> b!69329 (=> (not res!37214) (not e!45392))))

(declare-fun b!69330 () Bool)

(declare-fun call!5936 () Bool)

(assert (=> b!69330 (= e!45391 call!5936)))

(declare-fun b!69331 () Bool)

(assert (=> b!69331 (= e!45392 call!5936)))

(declare-fun bm!5933 () Bool)

(assert (=> bm!5933 (= call!5936 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3812 (v!2494 (underlying!253 thiss!992))) (mask!6113 (v!2494 (underlying!253 thiss!992)))))))

(declare-fun d!15031 () Bool)

(declare-fun res!37213 () Bool)

(assert (=> d!15031 (=> res!37213 e!45390)))

(assert (=> d!15031 (= res!37213 (bvsge #b00000000000000000000000000000000 (size!2077 (_keys!3812 (v!2494 (underlying!253 thiss!992))))))))

(assert (=> d!15031 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3812 (v!2494 (underlying!253 thiss!992))) (mask!6113 (v!2494 (underlying!253 thiss!992)))) e!45390)))

(assert (= (and d!15031 (not res!37213)) b!69328))

(assert (= (and b!69328 c!9896) b!69329))

(assert (= (and b!69328 (not c!9896)) b!69330))

(assert (= (and b!69329 res!37214) b!69331))

(assert (= (or b!69331 b!69330) bm!5933))

(declare-fun m!65577 () Bool)

(assert (=> b!69328 m!65577))

(assert (=> b!69328 m!65577))

(declare-fun m!65579 () Bool)

(assert (=> b!69328 m!65579))

(assert (=> b!69329 m!65577))

(declare-fun m!65581 () Bool)

(assert (=> b!69329 m!65581))

(declare-fun m!65583 () Bool)

(assert (=> b!69329 m!65583))

(assert (=> b!69329 m!65577))

(declare-fun m!65585 () Bool)

(assert (=> b!69329 m!65585))

(declare-fun m!65587 () Bool)

(assert (=> bm!5933 m!65587))

(assert (=> b!69191 d!15031))

(assert (=> d!14895 d!14903))

(assert (=> d!14895 d!14897))

(assert (=> d!14895 d!14899))

(assert (=> d!14895 d!14901))

(declare-fun d!15033 () Bool)

(assert (=> d!15033 (= (isDefined!84 (getValueByKey!131 (toList!719 call!5866) (ite c!9759 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (select (arr!1841 (_keys!3812 newMap!16)) (index!3066 lt!30149))))) (not (isEmpty!312 (getValueByKey!131 (toList!719 call!5866) (ite c!9759 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (select (arr!1841 (_keys!3812 newMap!16)) (index!3066 lt!30149)))))))))

(declare-fun bs!2978 () Bool)

(assert (= bs!2978 d!15033))

(assert (=> bs!2978 m!65551))

(declare-fun m!65589 () Bool)

(assert (=> bs!2978 m!65589))

(assert (=> b!69311 d!15033))

(declare-fun b!69334 () Bool)

(declare-fun e!45394 () Option!137)

(assert (=> b!69334 (= e!45394 (getValueByKey!131 (t!4972 (toList!719 call!5866)) (ite c!9759 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (select (arr!1841 (_keys!3812 newMap!16)) (index!3066 lt!30149)))))))

(declare-fun b!69333 () Bool)

(declare-fun e!45393 () Option!137)

(assert (=> b!69333 (= e!45393 e!45394)))

(declare-fun c!9898 () Bool)

(assert (=> b!69333 (= c!9898 (and ((_ is Cons!1465) (toList!719 call!5866)) (not (= (_1!1062 (h!2050 (toList!719 call!5866))) (ite c!9759 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (select (arr!1841 (_keys!3812 newMap!16)) (index!3066 lt!30149)))))))))

(declare-fun b!69335 () Bool)

(assert (=> b!69335 (= e!45394 None!135)))

(declare-fun b!69332 () Bool)

(assert (=> b!69332 (= e!45393 (Some!136 (_2!1062 (h!2050 (toList!719 call!5866)))))))

(declare-fun c!9897 () Bool)

(declare-fun d!15035 () Bool)

(assert (=> d!15035 (= c!9897 (and ((_ is Cons!1465) (toList!719 call!5866)) (= (_1!1062 (h!2050 (toList!719 call!5866))) (ite c!9759 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (select (arr!1841 (_keys!3812 newMap!16)) (index!3066 lt!30149))))))))

(assert (=> d!15035 (= (getValueByKey!131 (toList!719 call!5866) (ite c!9759 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (select (arr!1841 (_keys!3812 newMap!16)) (index!3066 lt!30149)))) e!45393)))

(assert (= (and d!15035 c!9897) b!69332))

(assert (= (and d!15035 (not c!9897)) b!69333))

(assert (= (and b!69333 c!9898) b!69334))

(assert (= (and b!69333 (not c!9898)) b!69335))

(declare-fun m!65591 () Bool)

(assert (=> b!69334 m!65591))

(assert (=> b!69311 d!15035))

(declare-fun d!15037 () Bool)

(assert (=> d!15037 (= (isEmpty!310 lt!30218) (isEmpty!311 (toList!719 lt!30218)))))

(declare-fun bs!2979 () Bool)

(assert (= bs!2979 d!15037))

(declare-fun m!65593 () Bool)

(assert (=> bs!2979 m!65593))

(assert (=> b!68957 d!15037))

(declare-fun b!69338 () Bool)

(declare-fun e!45396 () Option!137)

(assert (=> b!69338 (= e!45396 (getValueByKey!131 (t!4972 (toList!719 lt!30258)) (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!69337 () Bool)

(declare-fun e!45395 () Option!137)

(assert (=> b!69337 (= e!45395 e!45396)))

(declare-fun c!9900 () Bool)

(assert (=> b!69337 (= c!9900 (and ((_ is Cons!1465) (toList!719 lt!30258)) (not (= (_1!1062 (h!2050 (toList!719 lt!30258))) (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))))

(declare-fun b!69339 () Bool)

(assert (=> b!69339 (= e!45396 None!135)))

(declare-fun b!69336 () Bool)

(assert (=> b!69336 (= e!45395 (Some!136 (_2!1062 (h!2050 (toList!719 lt!30258)))))))

(declare-fun d!15039 () Bool)

(declare-fun c!9899 () Bool)

(assert (=> d!15039 (= c!9899 (and ((_ is Cons!1465) (toList!719 lt!30258)) (= (_1!1062 (h!2050 (toList!719 lt!30258))) (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> d!15039 (= (getValueByKey!131 (toList!719 lt!30258) (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))) e!45395)))

(assert (= (and d!15039 c!9899) b!69336))

(assert (= (and d!15039 (not c!9899)) b!69337))

(assert (= (and b!69337 c!9900) b!69338))

(assert (= (and b!69337 (not c!9900)) b!69339))

(declare-fun m!65595 () Bool)

(assert (=> b!69338 m!65595))

(assert (=> b!69034 d!15039))

(declare-fun b!69342 () Bool)

(declare-fun e!45398 () Option!137)

(assert (=> b!69342 (= e!45398 (getValueByKey!131 (t!4972 (t!4972 (toList!719 lt!30056))) (_1!1062 lt!29893)))))

(declare-fun b!69341 () Bool)

(declare-fun e!45397 () Option!137)

(assert (=> b!69341 (= e!45397 e!45398)))

(declare-fun c!9902 () Bool)

(assert (=> b!69341 (= c!9902 (and ((_ is Cons!1465) (t!4972 (toList!719 lt!30056))) (not (= (_1!1062 (h!2050 (t!4972 (toList!719 lt!30056)))) (_1!1062 lt!29893)))))))

(declare-fun b!69343 () Bool)

(assert (=> b!69343 (= e!45398 None!135)))

(declare-fun b!69340 () Bool)

(assert (=> b!69340 (= e!45397 (Some!136 (_2!1062 (h!2050 (t!4972 (toList!719 lt!30056))))))))

(declare-fun d!15041 () Bool)

(declare-fun c!9901 () Bool)

(assert (=> d!15041 (= c!9901 (and ((_ is Cons!1465) (t!4972 (toList!719 lt!30056))) (= (_1!1062 (h!2050 (t!4972 (toList!719 lt!30056)))) (_1!1062 lt!29893))))))

(assert (=> d!15041 (= (getValueByKey!131 (t!4972 (toList!719 lt!30056)) (_1!1062 lt!29893)) e!45397)))

(assert (= (and d!15041 c!9901) b!69340))

(assert (= (and d!15041 (not c!9901)) b!69341))

(assert (= (and b!69341 c!9902) b!69342))

(assert (= (and b!69341 (not c!9902)) b!69343))

(declare-fun m!65597 () Bool)

(assert (=> b!69342 m!65597))

(assert (=> b!69127 d!15041))

(declare-fun d!15043 () Bool)

(declare-fun lt!30515 () Bool)

(assert (=> d!15043 (= lt!30515 (select (content!73 (toList!719 lt!30222)) (ite (or c!9699 c!9702) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun e!45400 () Bool)

(assert (=> d!15043 (= lt!30515 e!45400)))

(declare-fun res!37215 () Bool)

(assert (=> d!15043 (=> (not res!37215) (not e!45400))))

(assert (=> d!15043 (= res!37215 ((_ is Cons!1465) (toList!719 lt!30222)))))

(assert (=> d!15043 (= (contains!716 (toList!719 lt!30222) (ite (or c!9699 c!9702) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))) lt!30515)))

(declare-fun b!69344 () Bool)

(declare-fun e!45399 () Bool)

(assert (=> b!69344 (= e!45400 e!45399)))

(declare-fun res!37216 () Bool)

(assert (=> b!69344 (=> res!37216 e!45399)))

(assert (=> b!69344 (= res!37216 (= (h!2050 (toList!719 lt!30222)) (ite (or c!9699 c!9702) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!69345 () Bool)

(assert (=> b!69345 (= e!45399 (contains!716 (t!4972 (toList!719 lt!30222)) (ite (or c!9699 c!9702) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(assert (= (and d!15043 res!37215) b!69344))

(assert (= (and b!69344 (not res!37216)) b!69345))

(declare-fun m!65599 () Bool)

(assert (=> d!15043 m!65599))

(declare-fun m!65601 () Bool)

(assert (=> d!15043 m!65601))

(declare-fun m!65603 () Bool)

(assert (=> b!69345 m!65603))

(assert (=> b!68965 d!15043))

(declare-fun d!15045 () Bool)

(assert (=> d!15045 (= (isDefined!84 (getValueByKey!131 (toList!719 lt!29996) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!312 (getValueByKey!131 (toList!719 lt!29996) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!2980 () Bool)

(assert (= bs!2980 d!15045))

(assert (=> bs!2980 m!64885))

(declare-fun m!65605 () Bool)

(assert (=> bs!2980 m!65605))

(assert (=> b!68968 d!15045))

(declare-fun b!69348 () Bool)

(declare-fun e!45402 () Option!137)

(assert (=> b!69348 (= e!45402 (getValueByKey!131 (t!4972 (toList!719 lt!29996)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!69347 () Bool)

(declare-fun e!45401 () Option!137)

(assert (=> b!69347 (= e!45401 e!45402)))

(declare-fun c!9904 () Bool)

(assert (=> b!69347 (= c!9904 (and ((_ is Cons!1465) (toList!719 lt!29996)) (not (= (_1!1062 (h!2050 (toList!719 lt!29996))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!69349 () Bool)

(assert (=> b!69349 (= e!45402 None!135)))

(declare-fun b!69346 () Bool)

(assert (=> b!69346 (= e!45401 (Some!136 (_2!1062 (h!2050 (toList!719 lt!29996)))))))

(declare-fun c!9903 () Bool)

(declare-fun d!15047 () Bool)

(assert (=> d!15047 (= c!9903 (and ((_ is Cons!1465) (toList!719 lt!29996)) (= (_1!1062 (h!2050 (toList!719 lt!29996))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!15047 (= (getValueByKey!131 (toList!719 lt!29996) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!45401)))

(assert (= (and d!15047 c!9903) b!69346))

(assert (= (and d!15047 (not c!9903)) b!69347))

(assert (= (and b!69347 c!9904) b!69348))

(assert (= (and b!69347 (not c!9904)) b!69349))

(assert (=> b!69348 m!64521))

(declare-fun m!65607 () Bool)

(assert (=> b!69348 m!65607))

(assert (=> b!68968 d!15047))

(declare-fun d!15049 () Bool)

(assert (=> d!15049 (= (isDefined!84 (getValueByKey!131 (toList!719 lt!29996) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!312 (getValueByKey!131 (toList!719 lt!29996) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!2981 () Bool)

(assert (= bs!2981 d!15049))

(assert (=> bs!2981 m!64745))

(declare-fun m!65609 () Bool)

(assert (=> bs!2981 m!65609))

(assert (=> b!69254 d!15049))

(declare-fun b!69352 () Bool)

(declare-fun e!45404 () Option!137)

(assert (=> b!69352 (= e!45404 (getValueByKey!131 (t!4972 (toList!719 lt!29996)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69351 () Bool)

(declare-fun e!45403 () Option!137)

(assert (=> b!69351 (= e!45403 e!45404)))

(declare-fun c!9906 () Bool)

(assert (=> b!69351 (= c!9906 (and ((_ is Cons!1465) (toList!719 lt!29996)) (not (= (_1!1062 (h!2050 (toList!719 lt!29996))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!69353 () Bool)

(assert (=> b!69353 (= e!45404 None!135)))

(declare-fun b!69350 () Bool)

(assert (=> b!69350 (= e!45403 (Some!136 (_2!1062 (h!2050 (toList!719 lt!29996)))))))

(declare-fun d!15051 () Bool)

(declare-fun c!9905 () Bool)

(assert (=> d!15051 (= c!9905 (and ((_ is Cons!1465) (toList!719 lt!29996)) (= (_1!1062 (h!2050 (toList!719 lt!29996))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!15051 (= (getValueByKey!131 (toList!719 lt!29996) #b0000000000000000000000000000000000000000000000000000000000000000) e!45403)))

(assert (= (and d!15051 c!9905) b!69350))

(assert (= (and d!15051 (not c!9905)) b!69351))

(assert (= (and b!69351 c!9906) b!69352))

(assert (= (and b!69351 (not c!9906)) b!69353))

(declare-fun m!65611 () Bool)

(assert (=> b!69352 m!65611))

(assert (=> b!69254 d!15051))

(declare-fun d!15053 () Bool)

(assert (=> d!15053 (= (isDefined!84 (getValueByKey!131 (toList!719 lt!30045) (_1!1062 lt!29892))) (not (isEmpty!312 (getValueByKey!131 (toList!719 lt!30045) (_1!1062 lt!29892)))))))

(declare-fun bs!2982 () Bool)

(assert (= bs!2982 d!15053))

(assert (=> bs!2982 m!64623))

(declare-fun m!65613 () Bool)

(assert (=> bs!2982 m!65613))

(assert (=> b!68971 d!15053))

(assert (=> b!68971 d!14931))

(declare-fun d!15055 () Bool)

(declare-fun e!45405 () Bool)

(assert (=> d!15055 e!45405))

(declare-fun res!37217 () Bool)

(assert (=> d!15055 (=> res!37217 e!45405)))

(declare-fun lt!30517 () Bool)

(assert (=> d!15055 (= res!37217 (not lt!30517))))

(declare-fun lt!30516 () Bool)

(assert (=> d!15055 (= lt!30517 lt!30516)))

(declare-fun lt!30518 () Unit!1919)

(declare-fun e!45406 () Unit!1919)

(assert (=> d!15055 (= lt!30518 e!45406)))

(declare-fun c!9907 () Bool)

(assert (=> d!15055 (= c!9907 lt!30516)))

(assert (=> d!15055 (= lt!30516 (containsKey!135 (toList!719 lt!30334) (_1!1062 (tuple2!2103 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> d!15055 (= (contains!714 lt!30334 (_1!1062 (tuple2!2103 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))) lt!30517)))

(declare-fun b!69354 () Bool)

(declare-fun lt!30519 () Unit!1919)

(assert (=> b!69354 (= e!45406 lt!30519)))

(assert (=> b!69354 (= lt!30519 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 lt!30334) (_1!1062 (tuple2!2103 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> b!69354 (isDefined!84 (getValueByKey!131 (toList!719 lt!30334) (_1!1062 (tuple2!2103 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!69355 () Bool)

(declare-fun Unit!1951 () Unit!1919)

(assert (=> b!69355 (= e!45406 Unit!1951)))

(declare-fun b!69356 () Bool)

(assert (=> b!69356 (= e!45405 (isDefined!84 (getValueByKey!131 (toList!719 lt!30334) (_1!1062 (tuple2!2103 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(assert (= (and d!15055 c!9907) b!69354))

(assert (= (and d!15055 (not c!9907)) b!69355))

(assert (= (and d!15055 (not res!37217)) b!69356))

(declare-fun m!65615 () Bool)

(assert (=> d!15055 m!65615))

(declare-fun m!65617 () Bool)

(assert (=> b!69354 m!65617))

(assert (=> b!69354 m!65271))

(assert (=> b!69354 m!65271))

(declare-fun m!65619 () Bool)

(assert (=> b!69354 m!65619))

(assert (=> b!69356 m!65271))

(assert (=> b!69356 m!65271))

(assert (=> b!69356 m!65619))

(assert (=> d!14969 d!15055))

(declare-fun b!69359 () Bool)

(declare-fun e!45408 () Option!137)

(assert (=> b!69359 (= e!45408 (getValueByKey!131 (t!4972 lt!30335) (_1!1062 (tuple2!2103 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!69358 () Bool)

(declare-fun e!45407 () Option!137)

(assert (=> b!69358 (= e!45407 e!45408)))

(declare-fun c!9909 () Bool)

(assert (=> b!69358 (= c!9909 (and ((_ is Cons!1465) lt!30335) (not (= (_1!1062 (h!2050 lt!30335)) (_1!1062 (tuple2!2103 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))))

(declare-fun b!69360 () Bool)

(assert (=> b!69360 (= e!45408 None!135)))

(declare-fun b!69357 () Bool)

(assert (=> b!69357 (= e!45407 (Some!136 (_2!1062 (h!2050 lt!30335))))))

(declare-fun d!15057 () Bool)

(declare-fun c!9908 () Bool)

(assert (=> d!15057 (= c!9908 (and ((_ is Cons!1465) lt!30335) (= (_1!1062 (h!2050 lt!30335)) (_1!1062 (tuple2!2103 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> d!15057 (= (getValueByKey!131 lt!30335 (_1!1062 (tuple2!2103 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))) e!45407)))

(assert (= (and d!15057 c!9908) b!69357))

(assert (= (and d!15057 (not c!9908)) b!69358))

(assert (= (and b!69358 c!9909) b!69359))

(assert (= (and b!69358 (not c!9909)) b!69360))

(declare-fun m!65621 () Bool)

(assert (=> b!69359 m!65621))

(assert (=> d!14969 d!15057))

(declare-fun d!15059 () Bool)

(assert (=> d!15059 (= (getValueByKey!131 lt!30335 (_1!1062 (tuple2!2103 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))) (Some!136 (_2!1062 (tuple2!2103 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun lt!30520 () Unit!1919)

(assert (=> d!15059 (= lt!30520 (choose!386 lt!30335 (_1!1062 (tuple2!2103 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))) (_2!1062 (tuple2!2103 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun e!45409 () Bool)

(assert (=> d!15059 e!45409))

(declare-fun res!37218 () Bool)

(assert (=> d!15059 (=> (not res!37218) (not e!45409))))

(assert (=> d!15059 (= res!37218 (isStrictlySorted!290 lt!30335))))

(assert (=> d!15059 (= (lemmaContainsTupThenGetReturnValue!48 lt!30335 (_1!1062 (tuple2!2103 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))) (_2!1062 (tuple2!2103 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))) lt!30520)))

(declare-fun b!69361 () Bool)

(declare-fun res!37219 () Bool)

(assert (=> b!69361 (=> (not res!37219) (not e!45409))))

(assert (=> b!69361 (= res!37219 (containsKey!135 lt!30335 (_1!1062 (tuple2!2103 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!69362 () Bool)

(assert (=> b!69362 (= e!45409 (contains!716 lt!30335 (tuple2!2103 (_1!1062 (tuple2!2103 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))) (_2!1062 (tuple2!2103 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(assert (= (and d!15059 res!37218) b!69361))

(assert (= (and b!69361 res!37219) b!69362))

(assert (=> d!15059 m!65265))

(declare-fun m!65623 () Bool)

(assert (=> d!15059 m!65623))

(declare-fun m!65625 () Bool)

(assert (=> d!15059 m!65625))

(declare-fun m!65627 () Bool)

(assert (=> b!69361 m!65627))

(declare-fun m!65629 () Bool)

(assert (=> b!69362 m!65629))

(assert (=> d!14969 d!15059))

(declare-fun e!45412 () List!1469)

(declare-fun b!69363 () Bool)

(assert (=> b!69363 (= e!45412 (insertStrictlySorted!51 (t!4972 (toList!719 lt!29987)) (_1!1062 (tuple2!2103 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))) (_2!1062 (tuple2!2103 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun d!15061 () Bool)

(declare-fun e!45410 () Bool)

(assert (=> d!15061 e!45410))

(declare-fun res!37221 () Bool)

(assert (=> d!15061 (=> (not res!37221) (not e!45410))))

(declare-fun lt!30521 () List!1469)

(assert (=> d!15061 (= res!37221 (isStrictlySorted!290 lt!30521))))

(declare-fun e!45414 () List!1469)

(assert (=> d!15061 (= lt!30521 e!45414)))

(declare-fun c!9910 () Bool)

(assert (=> d!15061 (= c!9910 (and ((_ is Cons!1465) (toList!719 lt!29987)) (bvslt (_1!1062 (h!2050 (toList!719 lt!29987))) (_1!1062 (tuple2!2103 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> d!15061 (isStrictlySorted!290 (toList!719 lt!29987))))

(assert (=> d!15061 (= (insertStrictlySorted!51 (toList!719 lt!29987) (_1!1062 (tuple2!2103 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))) (_2!1062 (tuple2!2103 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))) lt!30521)))

(declare-fun b!69364 () Bool)

(declare-fun c!9913 () Bool)

(declare-fun c!9912 () Bool)

(assert (=> b!69364 (= e!45412 (ite c!9913 (t!4972 (toList!719 lt!29987)) (ite c!9912 (Cons!1465 (h!2050 (toList!719 lt!29987)) (t!4972 (toList!719 lt!29987))) Nil!1466)))))

(declare-fun bm!5934 () Bool)

(declare-fun call!5939 () List!1469)

(declare-fun call!5938 () List!1469)

(assert (=> bm!5934 (= call!5939 call!5938)))

(declare-fun b!69365 () Bool)

(declare-fun e!45413 () List!1469)

(assert (=> b!69365 (= e!45413 call!5939)))

(declare-fun bm!5935 () Bool)

(declare-fun call!5937 () List!1469)

(assert (=> bm!5935 (= call!5938 call!5937)))

(declare-fun bm!5936 () Bool)

(assert (=> bm!5936 (= call!5937 ($colon$colon!64 e!45412 (ite c!9910 (h!2050 (toList!719 lt!29987)) (tuple2!2103 (_1!1062 (tuple2!2103 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))) (_2!1062 (tuple2!2103 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))))

(declare-fun c!9911 () Bool)

(assert (=> bm!5936 (= c!9911 c!9910)))

(declare-fun b!69366 () Bool)

(declare-fun e!45411 () List!1469)

(assert (=> b!69366 (= e!45414 e!45411)))

(assert (=> b!69366 (= c!9913 (and ((_ is Cons!1465) (toList!719 lt!29987)) (= (_1!1062 (h!2050 (toList!719 lt!29987))) (_1!1062 (tuple2!2103 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(declare-fun b!69367 () Bool)

(assert (=> b!69367 (= e!45410 (contains!716 lt!30521 (tuple2!2103 (_1!1062 (tuple2!2103 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))) (_2!1062 (tuple2!2103 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(declare-fun b!69368 () Bool)

(assert (=> b!69368 (= e!45414 call!5937)))

(declare-fun b!69369 () Bool)

(assert (=> b!69369 (= e!45413 call!5939)))

(declare-fun b!69370 () Bool)

(declare-fun res!37220 () Bool)

(assert (=> b!69370 (=> (not res!37220) (not e!45410))))

(assert (=> b!69370 (= res!37220 (containsKey!135 lt!30521 (_1!1062 (tuple2!2103 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!69371 () Bool)

(assert (=> b!69371 (= e!45411 call!5938)))

(declare-fun b!69372 () Bool)

(assert (=> b!69372 (= c!9912 (and ((_ is Cons!1465) (toList!719 lt!29987)) (bvsgt (_1!1062 (h!2050 (toList!719 lt!29987))) (_1!1062 (tuple2!2103 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> b!69372 (= e!45411 e!45413)))

(assert (= (and d!15061 c!9910) b!69368))

(assert (= (and d!15061 (not c!9910)) b!69366))

(assert (= (and b!69366 c!9913) b!69371))

(assert (= (and b!69366 (not c!9913)) b!69372))

(assert (= (and b!69372 c!9912) b!69365))

(assert (= (and b!69372 (not c!9912)) b!69369))

(assert (= (or b!69365 b!69369) bm!5934))

(assert (= (or b!69371 bm!5934) bm!5935))

(assert (= (or b!69368 bm!5935) bm!5936))

(assert (= (and bm!5936 c!9911) b!69363))

(assert (= (and bm!5936 (not c!9911)) b!69364))

(assert (= (and d!15061 res!37221) b!69370))

(assert (= (and b!69370 res!37220) b!69367))

(declare-fun m!65631 () Bool)

(assert (=> b!69367 m!65631))

(declare-fun m!65633 () Bool)

(assert (=> d!15061 m!65633))

(declare-fun m!65635 () Bool)

(assert (=> d!15061 m!65635))

(declare-fun m!65637 () Bool)

(assert (=> b!69363 m!65637))

(declare-fun m!65639 () Bool)

(assert (=> bm!5936 m!65639))

(declare-fun m!65641 () Bool)

(assert (=> b!69370 m!65641))

(assert (=> d!14969 d!15061))

(declare-fun d!15063 () Bool)

(assert (=> d!15063 (= ($colon$colon!64 e!45245 (ite c!9830 (h!2050 (toList!719 lt!29889)) (tuple2!2103 (_1!1062 lt!29893) (_2!1062 lt!29893)))) (Cons!1465 (ite c!9830 (h!2050 (toList!719 lt!29889)) (tuple2!2103 (_1!1062 lt!29893) (_2!1062 lt!29893))) e!45245))))

(assert (=> bm!5890 d!15063))

(declare-fun b!69375 () Bool)

(declare-fun e!45416 () Option!137)

(assert (=> b!69375 (= e!45416 (getValueByKey!131 (t!4972 (t!4972 lt!30057)) (_1!1062 lt!29893)))))

(declare-fun b!69374 () Bool)

(declare-fun e!45415 () Option!137)

(assert (=> b!69374 (= e!45415 e!45416)))

(declare-fun c!9915 () Bool)

(assert (=> b!69374 (= c!9915 (and ((_ is Cons!1465) (t!4972 lt!30057)) (not (= (_1!1062 (h!2050 (t!4972 lt!30057))) (_1!1062 lt!29893)))))))

(declare-fun b!69376 () Bool)

(assert (=> b!69376 (= e!45416 None!135)))

(declare-fun b!69373 () Bool)

(assert (=> b!69373 (= e!45415 (Some!136 (_2!1062 (h!2050 (t!4972 lt!30057)))))))

(declare-fun d!15065 () Bool)

(declare-fun c!9914 () Bool)

(assert (=> d!15065 (= c!9914 (and ((_ is Cons!1465) (t!4972 lt!30057)) (= (_1!1062 (h!2050 (t!4972 lt!30057))) (_1!1062 lt!29893))))))

(assert (=> d!15065 (= (getValueByKey!131 (t!4972 lt!30057) (_1!1062 lt!29893)) e!45415)))

(assert (= (and d!15065 c!9914) b!69373))

(assert (= (and d!15065 (not c!9914)) b!69374))

(assert (= (and b!69374 c!9915) b!69375))

(assert (= (and b!69374 (not c!9915)) b!69376))

(declare-fun m!65643 () Bool)

(assert (=> b!69375 m!65643))

(assert (=> b!69066 d!15065))

(declare-fun d!15067 () Bool)

(assert (=> d!15067 (= (apply!73 lt!30293 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)) (get!1127 (getValueByKey!131 (toList!719 lt!30293) (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!2983 () Bool)

(assert (= bs!2983 d!15067))

(assert (=> bs!2983 m!64775))

(declare-fun m!65645 () Bool)

(assert (=> bs!2983 m!65645))

(assert (=> bs!2983 m!65645))

(declare-fun m!65647 () Bool)

(assert (=> bs!2983 m!65647))

(assert (=> b!69080 d!15067))

(declare-fun c!9916 () Bool)

(declare-fun d!15069 () Bool)

(assert (=> d!15069 (= c!9916 ((_ is ValueCellFull!885) (select (arr!1842 (ite (or c!9754 c!9759) (_values!2151 newMap!16) lt!30125)) #b00000000000000000000000000000000)))))

(declare-fun e!45417 () V!2923)

(assert (=> d!15069 (= (get!1124 (select (arr!1842 (ite (or c!9754 c!9759) (_values!2151 newMap!16) lt!30125)) #b00000000000000000000000000000000) (dynLambda!322 (defaultEntry!2168 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!45417)))

(declare-fun b!69377 () Bool)

(assert (=> b!69377 (= e!45417 (get!1125 (select (arr!1842 (ite (or c!9754 c!9759) (_values!2151 newMap!16) lt!30125)) #b00000000000000000000000000000000) (dynLambda!322 (defaultEntry!2168 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!69378 () Bool)

(assert (=> b!69378 (= e!45417 (get!1126 (select (arr!1842 (ite (or c!9754 c!9759) (_values!2151 newMap!16) lt!30125)) #b00000000000000000000000000000000) (dynLambda!322 (defaultEntry!2168 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15069 c!9916) b!69377))

(assert (= (and d!15069 (not c!9916)) b!69378))

(assert (=> b!69377 m!65121))

(assert (=> b!69377 m!64807))

(declare-fun m!65649 () Bool)

(assert (=> b!69377 m!65649))

(assert (=> b!69378 m!65121))

(assert (=> b!69378 m!64807))

(declare-fun m!65651 () Bool)

(assert (=> b!69378 m!65651))

(assert (=> b!69080 d!15069))

(declare-fun d!15071 () Bool)

(assert (=> d!15071 (isDefined!84 (getValueByKey!131 (toList!719 (+!90 lt!29988 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))) lt!29979))))

(declare-fun lt!30522 () Unit!1919)

(assert (=> d!15071 (= lt!30522 (choose!387 (toList!719 (+!90 lt!29988 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))) lt!29979))))

(declare-fun e!45418 () Bool)

(assert (=> d!15071 e!45418))

(declare-fun res!37222 () Bool)

(assert (=> d!15071 (=> (not res!37222) (not e!45418))))

(assert (=> d!15071 (= res!37222 (isStrictlySorted!290 (toList!719 (+!90 lt!29988 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> d!15071 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 (+!90 lt!29988 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))) lt!29979) lt!30522)))

(declare-fun b!69379 () Bool)

(assert (=> b!69379 (= e!45418 (containsKey!135 (toList!719 (+!90 lt!29988 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))) lt!29979))))

(assert (= (and d!15071 res!37222) b!69379))

(assert (=> d!15071 m!65315))

(assert (=> d!15071 m!65315))

(assert (=> d!15071 m!65317))

(declare-fun m!65653 () Bool)

(assert (=> d!15071 m!65653))

(declare-fun m!65655 () Bool)

(assert (=> d!15071 m!65655))

(assert (=> b!69379 m!65311))

(assert (=> b!69166 d!15071))

(declare-fun d!15073 () Bool)

(assert (=> d!15073 (= (isDefined!84 (getValueByKey!131 (toList!719 (+!90 lt!29988 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))) lt!29979)) (not (isEmpty!312 (getValueByKey!131 (toList!719 (+!90 lt!29988 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))) lt!29979))))))

(declare-fun bs!2984 () Bool)

(assert (= bs!2984 d!15073))

(assert (=> bs!2984 m!65315))

(declare-fun m!65657 () Bool)

(assert (=> bs!2984 m!65657))

(assert (=> b!69166 d!15073))

(declare-fun e!45420 () Option!137)

(declare-fun b!69382 () Bool)

(assert (=> b!69382 (= e!45420 (getValueByKey!131 (t!4972 (toList!719 (+!90 lt!29988 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))) lt!29979))))

(declare-fun b!69381 () Bool)

(declare-fun e!45419 () Option!137)

(assert (=> b!69381 (= e!45419 e!45420)))

(declare-fun c!9918 () Bool)

(assert (=> b!69381 (= c!9918 (and ((_ is Cons!1465) (toList!719 (+!90 lt!29988 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))) (not (= (_1!1062 (h!2050 (toList!719 (+!90 lt!29988 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))) lt!29979))))))

(declare-fun b!69383 () Bool)

(assert (=> b!69383 (= e!45420 None!135)))

(declare-fun b!69380 () Bool)

(assert (=> b!69380 (= e!45419 (Some!136 (_2!1062 (h!2050 (toList!719 (+!90 lt!29988 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))))))))

(declare-fun c!9917 () Bool)

(declare-fun d!15075 () Bool)

(assert (=> d!15075 (= c!9917 (and ((_ is Cons!1465) (toList!719 (+!90 lt!29988 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))) (= (_1!1062 (h!2050 (toList!719 (+!90 lt!29988 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))) lt!29979)))))

(assert (=> d!15075 (= (getValueByKey!131 (toList!719 (+!90 lt!29988 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))) lt!29979) e!45419)))

(assert (= (and d!15075 c!9917) b!69380))

(assert (= (and d!15075 (not c!9917)) b!69381))

(assert (= (and b!69381 c!9918) b!69382))

(assert (= (and b!69381 (not c!9918)) b!69383))

(declare-fun m!65659 () Bool)

(assert (=> b!69382 m!65659))

(assert (=> b!69166 d!15075))

(declare-fun d!15077 () Bool)

(declare-fun e!45421 () Bool)

(assert (=> d!15077 e!45421))

(declare-fun res!37223 () Bool)

(assert (=> d!15077 (=> res!37223 e!45421)))

(declare-fun lt!30524 () Bool)

(assert (=> d!15077 (= res!37223 (not lt!30524))))

(declare-fun lt!30523 () Bool)

(assert (=> d!15077 (= lt!30524 lt!30523)))

(declare-fun lt!30525 () Unit!1919)

(declare-fun e!45422 () Unit!1919)

(assert (=> d!15077 (= lt!30525 e!45422)))

(declare-fun c!9919 () Bool)

(assert (=> d!15077 (= c!9919 lt!30523)))

(assert (=> d!15077 (= lt!30523 (containsKey!135 (toList!719 lt!30293) (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!15077 (= (contains!714 lt!30293 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)) lt!30524)))

(declare-fun b!69384 () Bool)

(declare-fun lt!30526 () Unit!1919)

(assert (=> b!69384 (= e!45422 lt!30526)))

(assert (=> b!69384 (= lt!30526 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 lt!30293) (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!69384 (isDefined!84 (getValueByKey!131 (toList!719 lt!30293) (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!69385 () Bool)

(declare-fun Unit!1952 () Unit!1919)

(assert (=> b!69385 (= e!45422 Unit!1952)))

(declare-fun b!69386 () Bool)

(assert (=> b!69386 (= e!45421 (isDefined!84 (getValueByKey!131 (toList!719 lt!30293) (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!15077 c!9919) b!69384))

(assert (= (and d!15077 (not c!9919)) b!69385))

(assert (= (and d!15077 (not res!37223)) b!69386))

(assert (=> d!15077 m!64775))

(declare-fun m!65661 () Bool)

(assert (=> d!15077 m!65661))

(assert (=> b!69384 m!64775))

(declare-fun m!65663 () Bool)

(assert (=> b!69384 m!65663))

(assert (=> b!69384 m!64775))

(assert (=> b!69384 m!65645))

(assert (=> b!69384 m!65645))

(declare-fun m!65665 () Bool)

(assert (=> b!69384 m!65665))

(assert (=> b!69386 m!64775))

(assert (=> b!69386 m!65645))

(assert (=> b!69386 m!65645))

(assert (=> b!69386 m!65665))

(assert (=> b!69099 d!15077))

(declare-fun b!69405 () Bool)

(declare-fun e!45435 () SeekEntryResult!234)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!69405 (= e!45435 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (mask!6113 newMap!16)) #b00000000000000000000000000000000 (mask!6113 newMap!16)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (_keys!3812 newMap!16) (mask!6113 newMap!16)))))

(declare-fun b!69407 () Bool)

(assert (=> b!69407 (= e!45435 (Intermediate!234 false (toIndex!0 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (mask!6113 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!69408 () Bool)

(declare-fun e!45436 () Bool)

(declare-fun lt!30532 () SeekEntryResult!234)

(assert (=> b!69408 (= e!45436 (bvsge (x!10848 lt!30532) #b01111111111111111111111111111110))))

(declare-fun e!45433 () SeekEntryResult!234)

(declare-fun b!69409 () Bool)

(assert (=> b!69409 (= e!45433 (Intermediate!234 true (toIndex!0 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (mask!6113 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!69410 () Bool)

(declare-fun e!45434 () Bool)

(assert (=> b!69410 (= e!45436 e!45434)))

(declare-fun res!37232 () Bool)

(assert (=> b!69410 (= res!37232 (and ((_ is Intermediate!234) lt!30532) (not (undefined!1046 lt!30532)) (bvslt (x!10848 lt!30532) #b01111111111111111111111111111110) (bvsge (x!10848 lt!30532) #b00000000000000000000000000000000) (bvsge (x!10848 lt!30532) #b00000000000000000000000000000000)))))

(assert (=> b!69410 (=> (not res!37232) (not e!45434))))

(declare-fun b!69411 () Bool)

(assert (=> b!69411 (= e!45433 e!45435)))

(declare-fun lt!30531 () (_ BitVec 64))

(declare-fun c!9927 () Bool)

(assert (=> b!69411 (= c!9927 (or (= lt!30531 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) (= (bvadd lt!30531 lt!30531) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!69412 () Bool)

(assert (=> b!69412 (and (bvsge (index!3067 lt!30532) #b00000000000000000000000000000000) (bvslt (index!3067 lt!30532) (size!2077 (_keys!3812 newMap!16))))))

(declare-fun res!37230 () Bool)

(assert (=> b!69412 (= res!37230 (= (select (arr!1841 (_keys!3812 newMap!16)) (index!3067 lt!30532)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!45437 () Bool)

(assert (=> b!69412 (=> res!37230 e!45437)))

(declare-fun b!69413 () Bool)

(assert (=> b!69413 (and (bvsge (index!3067 lt!30532) #b00000000000000000000000000000000) (bvslt (index!3067 lt!30532) (size!2077 (_keys!3812 newMap!16))))))

(declare-fun res!37231 () Bool)

(assert (=> b!69413 (= res!37231 (= (select (arr!1841 (_keys!3812 newMap!16)) (index!3067 lt!30532)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(assert (=> b!69413 (=> res!37231 e!45437)))

(assert (=> b!69413 (= e!45434 e!45437)))

(declare-fun b!69406 () Bool)

(assert (=> b!69406 (and (bvsge (index!3067 lt!30532) #b00000000000000000000000000000000) (bvslt (index!3067 lt!30532) (size!2077 (_keys!3812 newMap!16))))))

(assert (=> b!69406 (= e!45437 (= (select (arr!1841 (_keys!3812 newMap!16)) (index!3067 lt!30532)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!15079 () Bool)

(assert (=> d!15079 e!45436))

(declare-fun c!9928 () Bool)

(assert (=> d!15079 (= c!9928 (and ((_ is Intermediate!234) lt!30532) (undefined!1046 lt!30532)))))

(assert (=> d!15079 (= lt!30532 e!45433)))

(declare-fun c!9926 () Bool)

(assert (=> d!15079 (= c!9926 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(assert (=> d!15079 (= lt!30531 (select (arr!1841 (_keys!3812 newMap!16)) (toIndex!0 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (mask!6113 newMap!16))))))

(assert (=> d!15079 (validMask!0 (mask!6113 newMap!16))))

(assert (=> d!15079 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (mask!6113 newMap!16)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (_keys!3812 newMap!16) (mask!6113 newMap!16)) lt!30532)))

(assert (= (and d!15079 c!9926) b!69409))

(assert (= (and d!15079 (not c!9926)) b!69411))

(assert (= (and b!69411 c!9927) b!69407))

(assert (= (and b!69411 (not c!9927)) b!69405))

(assert (= (and d!15079 c!9928) b!69408))

(assert (= (and d!15079 (not c!9928)) b!69410))

(assert (= (and b!69410 res!37232) b!69413))

(assert (= (and b!69413 (not res!37231)) b!69412))

(assert (= (and b!69412 (not res!37230)) b!69406))

(declare-fun m!65667 () Bool)

(assert (=> b!69406 m!65667))

(assert (=> d!15079 m!64877))

(declare-fun m!65669 () Bool)

(assert (=> d!15079 m!65669))

(assert (=> d!15079 m!64759))

(assert (=> b!69412 m!65667))

(assert (=> b!69405 m!64877))

(declare-fun m!65671 () Bool)

(assert (=> b!69405 m!65671))

(assert (=> b!69405 m!65671))

(assert (=> b!69405 m!64407))

(declare-fun m!65673 () Bool)

(assert (=> b!69405 m!65673))

(assert (=> b!69413 m!65667))

(assert (=> d!14855 d!15079))

(declare-fun d!15081 () Bool)

(declare-fun lt!30538 () (_ BitVec 32))

(declare-fun lt!30537 () (_ BitVec 32))

(assert (=> d!15081 (= lt!30538 (bvmul (bvxor lt!30537 (bvlshr lt!30537 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!15081 (= lt!30537 ((_ extract 31 0) (bvand (bvxor (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (bvlshr (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!15081 (and (bvsge (mask!6113 newMap!16) #b00000000000000000000000000000000) (let ((res!37233 (let ((h!2053 ((_ extract 31 0) (bvand (bvxor (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (bvlshr (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!10950 (bvmul (bvxor h!2053 (bvlshr h!2053 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!10950 (bvlshr x!10950 #b00000000000000000000000000001101)) (mask!6113 newMap!16)))))) (and (bvslt res!37233 (bvadd (mask!6113 newMap!16) #b00000000000000000000000000000001)) (bvsge res!37233 #b00000000000000000000000000000000))))))

(assert (=> d!15081 (= (toIndex!0 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (mask!6113 newMap!16)) (bvand (bvxor lt!30538 (bvlshr lt!30538 #b00000000000000000000000000001101)) (mask!6113 newMap!16)))))

(assert (=> d!14855 d!15081))

(declare-fun d!15083 () Bool)

(assert (=> d!15083 (= (validMask!0 (mask!6113 newMap!16)) (and (or (= (mask!6113 newMap!16) #b00000000000000000000000000000111) (= (mask!6113 newMap!16) #b00000000000000000000000000001111) (= (mask!6113 newMap!16) #b00000000000000000000000000011111) (= (mask!6113 newMap!16) #b00000000000000000000000000111111) (= (mask!6113 newMap!16) #b00000000000000000000000001111111) (= (mask!6113 newMap!16) #b00000000000000000000000011111111) (= (mask!6113 newMap!16) #b00000000000000000000000111111111) (= (mask!6113 newMap!16) #b00000000000000000000001111111111) (= (mask!6113 newMap!16) #b00000000000000000000011111111111) (= (mask!6113 newMap!16) #b00000000000000000000111111111111) (= (mask!6113 newMap!16) #b00000000000000000001111111111111) (= (mask!6113 newMap!16) #b00000000000000000011111111111111) (= (mask!6113 newMap!16) #b00000000000000000111111111111111) (= (mask!6113 newMap!16) #b00000000000000001111111111111111) (= (mask!6113 newMap!16) #b00000000000000011111111111111111) (= (mask!6113 newMap!16) #b00000000000000111111111111111111) (= (mask!6113 newMap!16) #b00000000000001111111111111111111) (= (mask!6113 newMap!16) #b00000000000011111111111111111111) (= (mask!6113 newMap!16) #b00000000000111111111111111111111) (= (mask!6113 newMap!16) #b00000000001111111111111111111111) (= (mask!6113 newMap!16) #b00000000011111111111111111111111) (= (mask!6113 newMap!16) #b00000000111111111111111111111111) (= (mask!6113 newMap!16) #b00000001111111111111111111111111) (= (mask!6113 newMap!16) #b00000011111111111111111111111111) (= (mask!6113 newMap!16) #b00000111111111111111111111111111) (= (mask!6113 newMap!16) #b00001111111111111111111111111111) (= (mask!6113 newMap!16) #b00011111111111111111111111111111) (= (mask!6113 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!6113 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!14855 d!15083))

(declare-fun b!69416 () Bool)

(declare-fun e!45439 () Option!137)

(assert (=> b!69416 (= e!45439 (getValueByKey!131 (t!4972 (t!4972 (toList!719 lt!30041))) (_1!1062 lt!29892)))))

(declare-fun b!69415 () Bool)

(declare-fun e!45438 () Option!137)

(assert (=> b!69415 (= e!45438 e!45439)))

(declare-fun c!9930 () Bool)

(assert (=> b!69415 (= c!9930 (and ((_ is Cons!1465) (t!4972 (toList!719 lt!30041))) (not (= (_1!1062 (h!2050 (t!4972 (toList!719 lt!30041)))) (_1!1062 lt!29892)))))))

(declare-fun b!69417 () Bool)

(assert (=> b!69417 (= e!45439 None!135)))

(declare-fun b!69414 () Bool)

(assert (=> b!69414 (= e!45438 (Some!136 (_2!1062 (h!2050 (t!4972 (toList!719 lt!30041))))))))

(declare-fun d!15085 () Bool)

(declare-fun c!9929 () Bool)

(assert (=> d!15085 (= c!9929 (and ((_ is Cons!1465) (t!4972 (toList!719 lt!30041))) (= (_1!1062 (h!2050 (t!4972 (toList!719 lt!30041)))) (_1!1062 lt!29892))))))

(assert (=> d!15085 (= (getValueByKey!131 (t!4972 (toList!719 lt!30041)) (_1!1062 lt!29892)) e!45438)))

(assert (= (and d!15085 c!9929) b!69414))

(assert (= (and d!15085 (not c!9929)) b!69415))

(assert (= (and b!69415 c!9930) b!69416))

(assert (= (and b!69415 (not c!9930)) b!69417))

(declare-fun m!65675 () Bool)

(assert (=> b!69416 m!65675))

(assert (=> b!69059 d!15085))

(declare-fun d!15087 () Bool)

(assert (=> d!15087 (= (isEmpty!311 (toList!719 lt!30029)) ((_ is Nil!1466) (toList!719 lt!30029)))))

(assert (=> d!14883 d!15087))

(declare-fun d!15089 () Bool)

(assert (=> d!15089 (isDefined!84 (getValueByKey!131 (toList!719 lt!30056) (_1!1062 lt!29893)))))

(declare-fun lt!30539 () Unit!1919)

(assert (=> d!15089 (= lt!30539 (choose!387 (toList!719 lt!30056) (_1!1062 lt!29893)))))

(declare-fun e!45440 () Bool)

(assert (=> d!15089 e!45440))

(declare-fun res!37234 () Bool)

(assert (=> d!15089 (=> (not res!37234) (not e!45440))))

(assert (=> d!15089 (= res!37234 (isStrictlySorted!290 (toList!719 lt!30056)))))

(assert (=> d!15089 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 lt!30056) (_1!1062 lt!29893)) lt!30539)))

(declare-fun b!69418 () Bool)

(assert (=> b!69418 (= e!45440 (containsKey!135 (toList!719 lt!30056) (_1!1062 lt!29893)))))

(assert (= (and d!15089 res!37234) b!69418))

(assert (=> d!15089 m!64657))

(assert (=> d!15089 m!64657))

(assert (=> d!15089 m!65081))

(declare-fun m!65677 () Bool)

(assert (=> d!15089 m!65677))

(declare-fun m!65679 () Bool)

(assert (=> d!15089 m!65679))

(assert (=> b!69418 m!65077))

(assert (=> b!69061 d!15089))

(declare-fun d!15091 () Bool)

(assert (=> d!15091 (= (isDefined!84 (getValueByKey!131 (toList!719 lt!30056) (_1!1062 lt!29893))) (not (isEmpty!312 (getValueByKey!131 (toList!719 lt!30056) (_1!1062 lt!29893)))))))

(declare-fun bs!2985 () Bool)

(assert (= bs!2985 d!15091))

(assert (=> bs!2985 m!64657))

(declare-fun m!65681 () Bool)

(assert (=> bs!2985 m!65681))

(assert (=> b!69061 d!15091))

(assert (=> b!69061 d!14947))

(assert (=> d!14873 d!14843))

(assert (=> d!14873 d!15083))

(declare-fun d!15093 () Bool)

(assert (=> d!15093 (= (+!90 (getCurrentListMap!417 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897)) (getCurrentListMap!417 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) lt!30140 (zeroValue!2074 newMap!16) lt!29897 #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(assert (=> d!15093 true))

(declare-fun _$8!58 () Unit!1919)

(assert (=> d!15093 (= (choose!385 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) lt!30140 (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) lt!29897 (defaultEntry!2168 newMap!16)) _$8!58)))

(declare-fun bs!2986 () Bool)

(assert (= bs!2986 d!15093))

(assert (=> bs!2986 m!64511))

(assert (=> bs!2986 m!64511))

(assert (=> bs!2986 m!64943))

(assert (=> bs!2986 m!64947))

(assert (=> d!14873 d!15093))

(declare-fun d!15095 () Bool)

(declare-fun e!45441 () Bool)

(assert (=> d!15095 e!45441))

(declare-fun res!37236 () Bool)

(assert (=> d!15095 (=> (not res!37236) (not e!45441))))

(declare-fun lt!30542 () ListLongMap!1407)

(assert (=> d!15095 (= res!37236 (contains!714 lt!30542 (_1!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897))))))

(declare-fun lt!30543 () List!1469)

(assert (=> d!15095 (= lt!30542 (ListLongMap!1408 lt!30543))))

(declare-fun lt!30540 () Unit!1919)

(declare-fun lt!30541 () Unit!1919)

(assert (=> d!15095 (= lt!30540 lt!30541)))

(assert (=> d!15095 (= (getValueByKey!131 lt!30543 (_1!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897))) (Some!136 (_2!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897))))))

(assert (=> d!15095 (= lt!30541 (lemmaContainsTupThenGetReturnValue!48 lt!30543 (_1!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897)) (_2!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897))))))

(assert (=> d!15095 (= lt!30543 (insertStrictlySorted!51 (toList!719 (getCurrentListMap!417 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16))) (_1!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897)) (_2!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897))))))

(assert (=> d!15095 (= (+!90 (getCurrentListMap!417 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897)) lt!30542)))

(declare-fun b!69419 () Bool)

(declare-fun res!37235 () Bool)

(assert (=> b!69419 (=> (not res!37235) (not e!45441))))

(assert (=> b!69419 (= res!37235 (= (getValueByKey!131 (toList!719 lt!30542) (_1!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897))) (Some!136 (_2!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897)))))))

(declare-fun b!69420 () Bool)

(assert (=> b!69420 (= e!45441 (contains!716 (toList!719 lt!30542) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897)))))

(assert (= (and d!15095 res!37236) b!69419))

(assert (= (and b!69419 res!37235) b!69420))

(declare-fun m!65683 () Bool)

(assert (=> d!15095 m!65683))

(declare-fun m!65685 () Bool)

(assert (=> d!15095 m!65685))

(declare-fun m!65687 () Bool)

(assert (=> d!15095 m!65687))

(declare-fun m!65689 () Bool)

(assert (=> d!15095 m!65689))

(declare-fun m!65691 () Bool)

(assert (=> b!69419 m!65691))

(declare-fun m!65693 () Bool)

(assert (=> b!69420 m!65693))

(assert (=> d!14873 d!15095))

(declare-fun b!69421 () Bool)

(declare-fun e!45448 () Bool)

(declare-fun lt!30561 () ListLongMap!1407)

(assert (=> b!69421 (= e!45448 (= (apply!73 lt!30561 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)) (get!1124 (select (arr!1842 (_values!2151 newMap!16)) #b00000000000000000000000000000000) (dynLambda!322 (defaultEntry!2168 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!69421 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2078 (_values!2151 newMap!16))))))

(assert (=> b!69421 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))))))

(declare-fun b!69422 () Bool)

(declare-fun e!45454 () Unit!1919)

(declare-fun lt!30560 () Unit!1919)

(assert (=> b!69422 (= e!45454 lt!30560)))

(declare-fun lt!30553 () ListLongMap!1407)

(assert (=> b!69422 (= lt!30553 (getCurrentListMapNoExtraKeys!55 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) lt!30140 (zeroValue!2074 newMap!16) lt!29897 #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30556 () (_ BitVec 64))

(assert (=> b!69422 (= lt!30556 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30544 () (_ BitVec 64))

(assert (=> b!69422 (= lt!30544 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30558 () Unit!1919)

(assert (=> b!69422 (= lt!30558 (addStillContains!49 lt!30553 lt!30556 (zeroValue!2074 newMap!16) lt!30544))))

(assert (=> b!69422 (contains!714 (+!90 lt!30553 (tuple2!2103 lt!30556 (zeroValue!2074 newMap!16))) lt!30544)))

(declare-fun lt!30554 () Unit!1919)

(assert (=> b!69422 (= lt!30554 lt!30558)))

(declare-fun lt!30546 () ListLongMap!1407)

(assert (=> b!69422 (= lt!30546 (getCurrentListMapNoExtraKeys!55 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) lt!30140 (zeroValue!2074 newMap!16) lt!29897 #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30557 () (_ BitVec 64))

(assert (=> b!69422 (= lt!30557 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30548 () (_ BitVec 64))

(assert (=> b!69422 (= lt!30548 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30545 () Unit!1919)

(assert (=> b!69422 (= lt!30545 (addApplyDifferent!49 lt!30546 lt!30557 lt!29897 lt!30548))))

(assert (=> b!69422 (= (apply!73 (+!90 lt!30546 (tuple2!2103 lt!30557 lt!29897)) lt!30548) (apply!73 lt!30546 lt!30548))))

(declare-fun lt!30563 () Unit!1919)

(assert (=> b!69422 (= lt!30563 lt!30545)))

(declare-fun lt!30552 () ListLongMap!1407)

(assert (=> b!69422 (= lt!30552 (getCurrentListMapNoExtraKeys!55 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) lt!30140 (zeroValue!2074 newMap!16) lt!29897 #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30547 () (_ BitVec 64))

(assert (=> b!69422 (= lt!30547 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30555 () (_ BitVec 64))

(assert (=> b!69422 (= lt!30555 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30565 () Unit!1919)

(assert (=> b!69422 (= lt!30565 (addApplyDifferent!49 lt!30552 lt!30547 (zeroValue!2074 newMap!16) lt!30555))))

(assert (=> b!69422 (= (apply!73 (+!90 lt!30552 (tuple2!2103 lt!30547 (zeroValue!2074 newMap!16))) lt!30555) (apply!73 lt!30552 lt!30555))))

(declare-fun lt!30562 () Unit!1919)

(assert (=> b!69422 (= lt!30562 lt!30565)))

(declare-fun lt!30549 () ListLongMap!1407)

(assert (=> b!69422 (= lt!30549 (getCurrentListMapNoExtraKeys!55 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) lt!30140 (zeroValue!2074 newMap!16) lt!29897 #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30564 () (_ BitVec 64))

(assert (=> b!69422 (= lt!30564 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30559 () (_ BitVec 64))

(assert (=> b!69422 (= lt!30559 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!69422 (= lt!30560 (addApplyDifferent!49 lt!30549 lt!30564 lt!29897 lt!30559))))

(assert (=> b!69422 (= (apply!73 (+!90 lt!30549 (tuple2!2103 lt!30564 lt!29897)) lt!30559) (apply!73 lt!30549 lt!30559))))

(declare-fun b!69423 () Bool)

(declare-fun e!45447 () Bool)

(declare-fun e!45444 () Bool)

(assert (=> b!69423 (= e!45447 e!45444)))

(declare-fun res!37243 () Bool)

(declare-fun call!5941 () Bool)

(assert (=> b!69423 (= res!37243 call!5941)))

(assert (=> b!69423 (=> (not res!37243) (not e!45444))))

(declare-fun d!15097 () Bool)

(declare-fun e!45452 () Bool)

(assert (=> d!15097 e!45452))

(declare-fun res!37239 () Bool)

(assert (=> d!15097 (=> (not res!37239) (not e!45452))))

(assert (=> d!15097 (= res!37239 (or (bvsge #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))))))))

(declare-fun lt!30550 () ListLongMap!1407)

(assert (=> d!15097 (= lt!30561 lt!30550)))

(declare-fun lt!30551 () Unit!1919)

(assert (=> d!15097 (= lt!30551 e!45454)))

(declare-fun c!9936 () Bool)

(declare-fun e!45443 () Bool)

(assert (=> d!15097 (= c!9936 e!45443)))

(declare-fun res!37240 () Bool)

(assert (=> d!15097 (=> (not res!37240) (not e!45443))))

(assert (=> d!15097 (= res!37240 (bvslt #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))))))

(declare-fun e!45453 () ListLongMap!1407)

(assert (=> d!15097 (= lt!30550 e!45453)))

(declare-fun c!9932 () Bool)

(assert (=> d!15097 (= c!9932 (and (not (= (bvand lt!30140 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!30140 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!15097 (validMask!0 (mask!6113 newMap!16))))

(assert (=> d!15097 (= (getCurrentListMap!417 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) lt!30140 (zeroValue!2074 newMap!16) lt!29897 #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) lt!30561)))

(declare-fun bm!5937 () Bool)

(assert (=> bm!5937 (= call!5941 (contains!714 lt!30561 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!5938 () Bool)

(declare-fun call!5940 () ListLongMap!1407)

(declare-fun call!5945 () ListLongMap!1407)

(declare-fun c!9935 () Bool)

(declare-fun call!5946 () ListLongMap!1407)

(declare-fun call!5942 () ListLongMap!1407)

(assert (=> bm!5938 (= call!5945 (+!90 (ite c!9932 call!5946 (ite c!9935 call!5940 call!5942)) (ite (or c!9932 c!9935) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897))))))

(declare-fun bm!5939 () Bool)

(assert (=> bm!5939 (= call!5946 (getCurrentListMapNoExtraKeys!55 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) lt!30140 (zeroValue!2074 newMap!16) lt!29897 #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun bm!5940 () Bool)

(assert (=> bm!5940 (= call!5940 call!5946)))

(declare-fun b!69424 () Bool)

(declare-fun e!45450 () ListLongMap!1407)

(assert (=> b!69424 (= e!45450 call!5942)))

(declare-fun b!69425 () Bool)

(declare-fun e!45442 () Bool)

(declare-fun e!45445 () Bool)

(assert (=> b!69425 (= e!45442 e!45445)))

(declare-fun res!37238 () Bool)

(declare-fun call!5944 () Bool)

(assert (=> b!69425 (= res!37238 call!5944)))

(assert (=> b!69425 (=> (not res!37238) (not e!45445))))

(declare-fun b!69426 () Bool)

(declare-fun Unit!1953 () Unit!1919)

(assert (=> b!69426 (= e!45454 Unit!1953)))

(declare-fun b!69427 () Bool)

(assert (=> b!69427 (= e!45443 (validKeyInArray!0 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!69428 () Bool)

(assert (=> b!69428 (= e!45445 (= (apply!73 lt!30561 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2074 newMap!16)))))

(declare-fun b!69429 () Bool)

(assert (=> b!69429 (= e!45444 (= (apply!73 lt!30561 #b1000000000000000000000000000000000000000000000000000000000000000) lt!29897))))

(declare-fun b!69430 () Bool)

(declare-fun res!37241 () Bool)

(assert (=> b!69430 (=> (not res!37241) (not e!45452))))

(assert (=> b!69430 (= res!37241 e!45442)))

(declare-fun c!9933 () Bool)

(assert (=> b!69430 (= c!9933 (not (= (bvand lt!30140 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!69431 () Bool)

(declare-fun e!45446 () ListLongMap!1407)

(assert (=> b!69431 (= e!45453 e!45446)))

(assert (=> b!69431 (= c!9935 (and (not (= (bvand lt!30140 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!30140 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!69432 () Bool)

(assert (=> b!69432 (= e!45452 e!45447)))

(declare-fun c!9931 () Bool)

(assert (=> b!69432 (= c!9931 (not (= (bvand lt!30140 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!69433 () Bool)

(assert (=> b!69433 (= e!45453 (+!90 call!5945 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897)))))

(declare-fun b!69434 () Bool)

(declare-fun c!9934 () Bool)

(assert (=> b!69434 (= c!9934 (and (not (= (bvand lt!30140 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!30140 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!69434 (= e!45446 e!45450)))

(declare-fun b!69435 () Bool)

(declare-fun e!45451 () Bool)

(assert (=> b!69435 (= e!45451 (validKeyInArray!0 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!69436 () Bool)

(assert (=> b!69436 (= e!45447 (not call!5941))))

(declare-fun b!69437 () Bool)

(declare-fun res!37244 () Bool)

(assert (=> b!69437 (=> (not res!37244) (not e!45452))))

(declare-fun e!45449 () Bool)

(assert (=> b!69437 (= res!37244 e!45449)))

(declare-fun res!37242 () Bool)

(assert (=> b!69437 (=> res!37242 e!45449)))

(assert (=> b!69437 (= res!37242 (not e!45451))))

(declare-fun res!37237 () Bool)

(assert (=> b!69437 (=> (not res!37237) (not e!45451))))

(assert (=> b!69437 (= res!37237 (bvslt #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))))))

(declare-fun b!69438 () Bool)

(declare-fun call!5943 () ListLongMap!1407)

(assert (=> b!69438 (= e!45450 call!5943)))

(declare-fun bm!5941 () Bool)

(assert (=> bm!5941 (= call!5943 call!5945)))

(declare-fun bm!5942 () Bool)

(assert (=> bm!5942 (= call!5942 call!5940)))

(declare-fun b!69439 () Bool)

(assert (=> b!69439 (= e!45446 call!5943)))

(declare-fun b!69440 () Bool)

(assert (=> b!69440 (= e!45449 e!45448)))

(declare-fun res!37245 () Bool)

(assert (=> b!69440 (=> (not res!37245) (not e!45448))))

(assert (=> b!69440 (= res!37245 (contains!714 lt!30561 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!69440 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))))))

(declare-fun bm!5943 () Bool)

(assert (=> bm!5943 (= call!5944 (contains!714 lt!30561 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69441 () Bool)

(assert (=> b!69441 (= e!45442 (not call!5944))))

(assert (= (and d!15097 c!9932) b!69433))

(assert (= (and d!15097 (not c!9932)) b!69431))

(assert (= (and b!69431 c!9935) b!69439))

(assert (= (and b!69431 (not c!9935)) b!69434))

(assert (= (and b!69434 c!9934) b!69438))

(assert (= (and b!69434 (not c!9934)) b!69424))

(assert (= (or b!69438 b!69424) bm!5942))

(assert (= (or b!69439 bm!5942) bm!5940))

(assert (= (or b!69439 b!69438) bm!5941))

(assert (= (or b!69433 bm!5940) bm!5939))

(assert (= (or b!69433 bm!5941) bm!5938))

(assert (= (and d!15097 res!37240) b!69427))

(assert (= (and d!15097 c!9936) b!69422))

(assert (= (and d!15097 (not c!9936)) b!69426))

(assert (= (and d!15097 res!37239) b!69437))

(assert (= (and b!69437 res!37237) b!69435))

(assert (= (and b!69437 (not res!37242)) b!69440))

(assert (= (and b!69440 res!37245) b!69421))

(assert (= (and b!69437 res!37244) b!69430))

(assert (= (and b!69430 c!9933) b!69425))

(assert (= (and b!69430 (not c!9933)) b!69441))

(assert (= (and b!69425 res!37238) b!69428))

(assert (= (or b!69425 b!69441) bm!5943))

(assert (= (and b!69430 res!37241) b!69432))

(assert (= (and b!69432 c!9931) b!69423))

(assert (= (and b!69432 (not c!9931)) b!69436))

(assert (= (and b!69423 res!37243) b!69429))

(assert (= (or b!69423 b!69436) bm!5937))

(declare-fun b_lambda!3111 () Bool)

(assert (=> (not b_lambda!3111) (not b!69421)))

(assert (=> b!69421 t!4980))

(declare-fun b_and!4267 () Bool)

(assert (= b_and!4263 (and (=> t!4980 result!2619) b_and!4267)))

(assert (=> b!69421 t!4982))

(declare-fun b_and!4269 () Bool)

(assert (= b_and!4265 (and (=> t!4982 result!2621) b_and!4269)))

(declare-fun m!65695 () Bool)

(assert (=> bm!5943 m!65695))

(declare-fun m!65697 () Bool)

(assert (=> bm!5938 m!65697))

(declare-fun m!65699 () Bool)

(assert (=> b!69433 m!65699))

(declare-fun m!65701 () Bool)

(assert (=> bm!5937 m!65701))

(assert (=> b!69427 m!64775))

(assert (=> b!69427 m!64775))

(assert (=> b!69427 m!64777))

(assert (=> b!69440 m!64775))

(assert (=> b!69440 m!64775))

(declare-fun m!65703 () Bool)

(assert (=> b!69440 m!65703))

(declare-fun m!65705 () Bool)

(assert (=> b!69428 m!65705))

(declare-fun m!65707 () Bool)

(assert (=> b!69429 m!65707))

(assert (=> b!69421 m!64807))

(assert (=> b!69421 m!64809))

(assert (=> b!69421 m!64807))

(assert (=> b!69421 m!64811))

(assert (=> b!69421 m!64809))

(assert (=> b!69421 m!64775))

(declare-fun m!65709 () Bool)

(assert (=> b!69421 m!65709))

(assert (=> b!69421 m!64775))

(assert (=> d!15097 m!64759))

(declare-fun m!65711 () Bool)

(assert (=> bm!5939 m!65711))

(assert (=> b!69435 m!64775))

(assert (=> b!69435 m!64775))

(assert (=> b!69435 m!64777))

(declare-fun m!65713 () Bool)

(assert (=> b!69422 m!65713))

(declare-fun m!65715 () Bool)

(assert (=> b!69422 m!65715))

(declare-fun m!65717 () Bool)

(assert (=> b!69422 m!65717))

(declare-fun m!65719 () Bool)

(assert (=> b!69422 m!65719))

(declare-fun m!65721 () Bool)

(assert (=> b!69422 m!65721))

(declare-fun m!65723 () Bool)

(assert (=> b!69422 m!65723))

(declare-fun m!65725 () Bool)

(assert (=> b!69422 m!65725))

(declare-fun m!65727 () Bool)

(assert (=> b!69422 m!65727))

(assert (=> b!69422 m!65721))

(declare-fun m!65729 () Bool)

(assert (=> b!69422 m!65729))

(assert (=> b!69422 m!64775))

(declare-fun m!65731 () Bool)

(assert (=> b!69422 m!65731))

(declare-fun m!65733 () Bool)

(assert (=> b!69422 m!65733))

(declare-fun m!65735 () Bool)

(assert (=> b!69422 m!65735))

(assert (=> b!69422 m!65723))

(declare-fun m!65737 () Bool)

(assert (=> b!69422 m!65737))

(assert (=> b!69422 m!65731))

(assert (=> b!69422 m!65715))

(declare-fun m!65739 () Bool)

(assert (=> b!69422 m!65739))

(assert (=> b!69422 m!65711))

(declare-fun m!65741 () Bool)

(assert (=> b!69422 m!65741))

(assert (=> d!14873 d!15097))

(declare-fun d!15099 () Bool)

(declare-fun lt!30566 () Bool)

(assert (=> d!15099 (= lt!30566 (select (content!73 (toList!719 lt!30318)) (ite c!9754 (ite c!9756 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))

(declare-fun e!45456 () Bool)

(assert (=> d!15099 (= lt!30566 e!45456)))

(declare-fun res!37246 () Bool)

(assert (=> d!15099 (=> (not res!37246) (not e!45456))))

(assert (=> d!15099 (= res!37246 ((_ is Cons!1465) (toList!719 lt!30318)))))

(assert (=> d!15099 (= (contains!716 (toList!719 lt!30318) (ite c!9754 (ite c!9756 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))) lt!30566)))

(declare-fun b!69442 () Bool)

(declare-fun e!45455 () Bool)

(assert (=> b!69442 (= e!45456 e!45455)))

(declare-fun res!37247 () Bool)

(assert (=> b!69442 (=> res!37247 e!45455)))

(assert (=> b!69442 (= res!37247 (= (h!2050 (toList!719 lt!30318)) (ite c!9754 (ite c!9756 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))

(declare-fun b!69443 () Bool)

(assert (=> b!69443 (= e!45455 (contains!716 (t!4972 (toList!719 lt!30318)) (ite c!9754 (ite c!9756 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))

(assert (= (and d!15099 res!37246) b!69442))

(assert (= (and b!69442 (not res!37247)) b!69443))

(declare-fun m!65743 () Bool)

(assert (=> d!15099 m!65743))

(declare-fun m!65745 () Bool)

(assert (=> d!15099 m!65745))

(declare-fun m!65747 () Bool)

(assert (=> b!69443 m!65747))

(assert (=> b!69150 d!15099))

(declare-fun d!15101 () Bool)

(declare-fun e!45457 () Bool)

(assert (=> d!15101 e!45457))

(declare-fun res!37248 () Bool)

(assert (=> d!15101 (=> res!37248 e!45457)))

(declare-fun lt!30568 () Bool)

(assert (=> d!15101 (= res!37248 (not lt!30568))))

(declare-fun lt!30567 () Bool)

(assert (=> d!15101 (= lt!30568 lt!30567)))

(declare-fun lt!30569 () Unit!1919)

(declare-fun e!45458 () Unit!1919)

(assert (=> d!15101 (= lt!30569 e!45458)))

(declare-fun c!9937 () Bool)

(assert (=> d!15101 (= c!9937 lt!30567)))

(assert (=> d!15101 (= lt!30567 (containsKey!135 (toList!719 lt!30222) (_1!1062 (ite (or c!9699 c!9702) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> d!15101 (= (contains!714 lt!30222 (_1!1062 (ite (or c!9699 c!9702) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))) lt!30568)))

(declare-fun b!69444 () Bool)

(declare-fun lt!30570 () Unit!1919)

(assert (=> b!69444 (= e!45458 lt!30570)))

(assert (=> b!69444 (= lt!30570 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 lt!30222) (_1!1062 (ite (or c!9699 c!9702) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> b!69444 (isDefined!84 (getValueByKey!131 (toList!719 lt!30222) (_1!1062 (ite (or c!9699 c!9702) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(declare-fun b!69445 () Bool)

(declare-fun Unit!1954 () Unit!1919)

(assert (=> b!69445 (= e!45458 Unit!1954)))

(declare-fun b!69446 () Bool)

(assert (=> b!69446 (= e!45457 (isDefined!84 (getValueByKey!131 (toList!719 lt!30222) (_1!1062 (ite (or c!9699 c!9702) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))))

(assert (= (and d!15101 c!9937) b!69444))

(assert (= (and d!15101 (not c!9937)) b!69445))

(assert (= (and d!15101 (not res!37248)) b!69446))

(declare-fun m!65749 () Bool)

(assert (=> d!15101 m!65749))

(declare-fun m!65751 () Bool)

(assert (=> b!69444 m!65751))

(assert (=> b!69444 m!64933))

(assert (=> b!69444 m!64933))

(declare-fun m!65753 () Bool)

(assert (=> b!69444 m!65753))

(assert (=> b!69446 m!64933))

(assert (=> b!69446 m!64933))

(assert (=> b!69446 m!65753))

(assert (=> d!14869 d!15101))

(declare-fun e!45460 () Option!137)

(declare-fun b!69449 () Bool)

(assert (=> b!69449 (= e!45460 (getValueByKey!131 (t!4972 lt!30223) (_1!1062 (ite (or c!9699 c!9702) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(declare-fun b!69448 () Bool)

(declare-fun e!45459 () Option!137)

(assert (=> b!69448 (= e!45459 e!45460)))

(declare-fun c!9939 () Bool)

(assert (=> b!69448 (= c!9939 (and ((_ is Cons!1465) lt!30223) (not (= (_1!1062 (h!2050 lt!30223)) (_1!1062 (ite (or c!9699 c!9702) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))))))))

(declare-fun b!69450 () Bool)

(assert (=> b!69450 (= e!45460 None!135)))

(declare-fun b!69447 () Bool)

(assert (=> b!69447 (= e!45459 (Some!136 (_2!1062 (h!2050 lt!30223))))))

(declare-fun d!15103 () Bool)

(declare-fun c!9938 () Bool)

(assert (=> d!15103 (= c!9938 (and ((_ is Cons!1465) lt!30223) (= (_1!1062 (h!2050 lt!30223)) (_1!1062 (ite (or c!9699 c!9702) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))))

(assert (=> d!15103 (= (getValueByKey!131 lt!30223 (_1!1062 (ite (or c!9699 c!9702) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))) e!45459)))

(assert (= (and d!15103 c!9938) b!69447))

(assert (= (and d!15103 (not c!9938)) b!69448))

(assert (= (and b!69448 c!9939) b!69449))

(assert (= (and b!69448 (not c!9939)) b!69450))

(declare-fun m!65755 () Bool)

(assert (=> b!69449 m!65755))

(assert (=> d!14869 d!15103))

(declare-fun d!15105 () Bool)

(assert (=> d!15105 (= (getValueByKey!131 lt!30223 (_1!1062 (ite (or c!9699 c!9702) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))) (Some!136 (_2!1062 (ite (or c!9699 c!9702) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(declare-fun lt!30571 () Unit!1919)

(assert (=> d!15105 (= lt!30571 (choose!386 lt!30223 (_1!1062 (ite (or c!9699 c!9702) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))) (_2!1062 (ite (or c!9699 c!9702) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(declare-fun e!45461 () Bool)

(assert (=> d!15105 e!45461))

(declare-fun res!37249 () Bool)

(assert (=> d!15105 (=> (not res!37249) (not e!45461))))

(assert (=> d!15105 (= res!37249 (isStrictlySorted!290 lt!30223))))

(assert (=> d!15105 (= (lemmaContainsTupThenGetReturnValue!48 lt!30223 (_1!1062 (ite (or c!9699 c!9702) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))) (_2!1062 (ite (or c!9699 c!9702) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))) lt!30571)))

(declare-fun b!69451 () Bool)

(declare-fun res!37250 () Bool)

(assert (=> b!69451 (=> (not res!37250) (not e!45461))))

(assert (=> b!69451 (= res!37250 (containsKey!135 lt!30223 (_1!1062 (ite (or c!9699 c!9702) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(declare-fun b!69452 () Bool)

(assert (=> b!69452 (= e!45461 (contains!716 lt!30223 (tuple2!2103 (_1!1062 (ite (or c!9699 c!9702) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))) (_2!1062 (ite (or c!9699 c!9702) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))))

(assert (= (and d!15105 res!37249) b!69451))

(assert (= (and b!69451 res!37250) b!69452))

(assert (=> d!15105 m!64927))

(declare-fun m!65757 () Bool)

(assert (=> d!15105 m!65757))

(declare-fun m!65759 () Bool)

(assert (=> d!15105 m!65759))

(declare-fun m!65761 () Bool)

(assert (=> b!69451 m!65761))

(declare-fun m!65763 () Bool)

(assert (=> b!69452 m!65763))

(assert (=> d!14869 d!15105))

(declare-fun b!69453 () Bool)

(declare-fun e!45464 () List!1469)

(assert (=> b!69453 (= e!45464 (insertStrictlySorted!51 (t!4972 (toList!719 (ite c!9699 call!5788 (ite c!9702 call!5782 call!5784)))) (_1!1062 (ite (or c!9699 c!9702) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))) (_2!1062 (ite (or c!9699 c!9702) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(declare-fun d!15107 () Bool)

(declare-fun e!45462 () Bool)

(assert (=> d!15107 e!45462))

(declare-fun res!37252 () Bool)

(assert (=> d!15107 (=> (not res!37252) (not e!45462))))

(declare-fun lt!30572 () List!1469)

(assert (=> d!15107 (= res!37252 (isStrictlySorted!290 lt!30572))))

(declare-fun e!45466 () List!1469)

(assert (=> d!15107 (= lt!30572 e!45466)))

(declare-fun c!9940 () Bool)

(assert (=> d!15107 (= c!9940 (and ((_ is Cons!1465) (toList!719 (ite c!9699 call!5788 (ite c!9702 call!5782 call!5784)))) (bvslt (_1!1062 (h!2050 (toList!719 (ite c!9699 call!5788 (ite c!9702 call!5782 call!5784))))) (_1!1062 (ite (or c!9699 c!9702) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))))

(assert (=> d!15107 (isStrictlySorted!290 (toList!719 (ite c!9699 call!5788 (ite c!9702 call!5782 call!5784))))))

(assert (=> d!15107 (= (insertStrictlySorted!51 (toList!719 (ite c!9699 call!5788 (ite c!9702 call!5782 call!5784))) (_1!1062 (ite (or c!9699 c!9702) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))) (_2!1062 (ite (or c!9699 c!9702) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))) lt!30572)))

(declare-fun c!9942 () Bool)

(declare-fun c!9943 () Bool)

(declare-fun b!69454 () Bool)

(assert (=> b!69454 (= e!45464 (ite c!9943 (t!4972 (toList!719 (ite c!9699 call!5788 (ite c!9702 call!5782 call!5784)))) (ite c!9942 (Cons!1465 (h!2050 (toList!719 (ite c!9699 call!5788 (ite c!9702 call!5782 call!5784)))) (t!4972 (toList!719 (ite c!9699 call!5788 (ite c!9702 call!5782 call!5784))))) Nil!1466)))))

(declare-fun bm!5944 () Bool)

(declare-fun call!5949 () List!1469)

(declare-fun call!5948 () List!1469)

(assert (=> bm!5944 (= call!5949 call!5948)))

(declare-fun b!69455 () Bool)

(declare-fun e!45465 () List!1469)

(assert (=> b!69455 (= e!45465 call!5949)))

(declare-fun bm!5945 () Bool)

(declare-fun call!5947 () List!1469)

(assert (=> bm!5945 (= call!5948 call!5947)))

(declare-fun bm!5946 () Bool)

(assert (=> bm!5946 (= call!5947 ($colon$colon!64 e!45464 (ite c!9940 (h!2050 (toList!719 (ite c!9699 call!5788 (ite c!9702 call!5782 call!5784)))) (tuple2!2103 (_1!1062 (ite (or c!9699 c!9702) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))) (_2!1062 (ite (or c!9699 c!9702) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))))))))

(declare-fun c!9941 () Bool)

(assert (=> bm!5946 (= c!9941 c!9940)))

(declare-fun b!69456 () Bool)

(declare-fun e!45463 () List!1469)

(assert (=> b!69456 (= e!45466 e!45463)))

(assert (=> b!69456 (= c!9943 (and ((_ is Cons!1465) (toList!719 (ite c!9699 call!5788 (ite c!9702 call!5782 call!5784)))) (= (_1!1062 (h!2050 (toList!719 (ite c!9699 call!5788 (ite c!9702 call!5782 call!5784))))) (_1!1062 (ite (or c!9699 c!9702) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))))

(declare-fun b!69457 () Bool)

(assert (=> b!69457 (= e!45462 (contains!716 lt!30572 (tuple2!2103 (_1!1062 (ite (or c!9699 c!9702) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))) (_2!1062 (ite (or c!9699 c!9702) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))))

(declare-fun b!69458 () Bool)

(assert (=> b!69458 (= e!45466 call!5947)))

(declare-fun b!69459 () Bool)

(assert (=> b!69459 (= e!45465 call!5949)))

(declare-fun b!69460 () Bool)

(declare-fun res!37251 () Bool)

(assert (=> b!69460 (=> (not res!37251) (not e!45462))))

(assert (=> b!69460 (= res!37251 (containsKey!135 lt!30572 (_1!1062 (ite (or c!9699 c!9702) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(declare-fun b!69461 () Bool)

(assert (=> b!69461 (= e!45463 call!5948)))

(declare-fun b!69462 () Bool)

(assert (=> b!69462 (= c!9942 (and ((_ is Cons!1465) (toList!719 (ite c!9699 call!5788 (ite c!9702 call!5782 call!5784)))) (bvsgt (_1!1062 (h!2050 (toList!719 (ite c!9699 call!5788 (ite c!9702 call!5782 call!5784))))) (_1!1062 (ite (or c!9699 c!9702) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))))

(assert (=> b!69462 (= e!45463 e!45465)))

(assert (= (and d!15107 c!9940) b!69458))

(assert (= (and d!15107 (not c!9940)) b!69456))

(assert (= (and b!69456 c!9943) b!69461))

(assert (= (and b!69456 (not c!9943)) b!69462))

(assert (= (and b!69462 c!9942) b!69455))

(assert (= (and b!69462 (not c!9942)) b!69459))

(assert (= (or b!69455 b!69459) bm!5944))

(assert (= (or b!69461 bm!5944) bm!5945))

(assert (= (or b!69458 bm!5945) bm!5946))

(assert (= (and bm!5946 c!9941) b!69453))

(assert (= (and bm!5946 (not c!9941)) b!69454))

(assert (= (and d!15107 res!37252) b!69460))

(assert (= (and b!69460 res!37251) b!69457))

(declare-fun m!65765 () Bool)

(assert (=> b!69457 m!65765))

(declare-fun m!65767 () Bool)

(assert (=> d!15107 m!65767))

(declare-fun m!65769 () Bool)

(assert (=> d!15107 m!65769))

(declare-fun m!65771 () Bool)

(assert (=> b!69453 m!65771))

(declare-fun m!65773 () Bool)

(assert (=> bm!5946 m!65773))

(declare-fun m!65775 () Bool)

(assert (=> b!69460 m!65775))

(assert (=> d!14869 d!15107))

(declare-fun b!69463 () Bool)

(declare-fun e!45467 () Bool)

(declare-fun e!45468 () Bool)

(assert (=> b!69463 (= e!45467 e!45468)))

(declare-fun c!9944 () Bool)

(assert (=> b!69463 (= c!9944 (validKeyInArray!0 (select (arr!1841 (array!3856 (store (arr!1841 (_keys!3812 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2077 (_keys!3812 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!69464 () Bool)

(declare-fun e!45469 () Bool)

(assert (=> b!69464 (= e!45468 e!45469)))

(declare-fun lt!30573 () (_ BitVec 64))

(assert (=> b!69464 (= lt!30573 (select (arr!1841 (array!3856 (store (arr!1841 (_keys!3812 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2077 (_keys!3812 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!30574 () Unit!1919)

(assert (=> b!69464 (= lt!30574 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!3856 (store (arr!1841 (_keys!3812 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2077 (_keys!3812 newMap!16))) lt!30573 #b00000000000000000000000000000000))))

(assert (=> b!69464 (arrayContainsKey!0 (array!3856 (store (arr!1841 (_keys!3812 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2077 (_keys!3812 newMap!16))) lt!30573 #b00000000000000000000000000000000)))

(declare-fun lt!30575 () Unit!1919)

(assert (=> b!69464 (= lt!30575 lt!30574)))

(declare-fun res!37254 () Bool)

(assert (=> b!69464 (= res!37254 (= (seekEntryOrOpen!0 (select (arr!1841 (array!3856 (store (arr!1841 (_keys!3812 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2077 (_keys!3812 newMap!16)))) #b00000000000000000000000000000000) (array!3856 (store (arr!1841 (_keys!3812 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2077 (_keys!3812 newMap!16))) (mask!6113 newMap!16)) (Found!234 #b00000000000000000000000000000000)))))

(assert (=> b!69464 (=> (not res!37254) (not e!45469))))

(declare-fun b!69465 () Bool)

(declare-fun call!5950 () Bool)

(assert (=> b!69465 (= e!45468 call!5950)))

(declare-fun b!69466 () Bool)

(assert (=> b!69466 (= e!45469 call!5950)))

(declare-fun bm!5947 () Bool)

(assert (=> bm!5947 (= call!5950 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!3856 (store (arr!1841 (_keys!3812 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2077 (_keys!3812 newMap!16))) (mask!6113 newMap!16)))))

(declare-fun d!15109 () Bool)

(declare-fun res!37253 () Bool)

(assert (=> d!15109 (=> res!37253 e!45467)))

(assert (=> d!15109 (= res!37253 (bvsge #b00000000000000000000000000000000 (size!2077 (array!3856 (store (arr!1841 (_keys!3812 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2077 (_keys!3812 newMap!16))))))))

(assert (=> d!15109 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3856 (store (arr!1841 (_keys!3812 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2077 (_keys!3812 newMap!16))) (mask!6113 newMap!16)) e!45467)))

(assert (= (and d!15109 (not res!37253)) b!69463))

(assert (= (and b!69463 c!9944) b!69464))

(assert (= (and b!69463 (not c!9944)) b!69465))

(assert (= (and b!69464 res!37254) b!69466))

(assert (= (or b!69466 b!69465) bm!5947))

(declare-fun m!65777 () Bool)

(assert (=> b!69463 m!65777))

(assert (=> b!69463 m!65777))

(declare-fun m!65779 () Bool)

(assert (=> b!69463 m!65779))

(assert (=> b!69464 m!65777))

(declare-fun m!65781 () Bool)

(assert (=> b!69464 m!65781))

(declare-fun m!65783 () Bool)

(assert (=> b!69464 m!65783))

(assert (=> b!69464 m!65777))

(declare-fun m!65785 () Bool)

(assert (=> b!69464 m!65785))

(declare-fun m!65787 () Bool)

(assert (=> bm!5947 m!65787))

(assert (=> d!15019 d!15109))

(declare-fun d!15111 () Bool)

(declare-fun e!45472 () Bool)

(assert (=> d!15111 e!45472))

(declare-fun res!37257 () Bool)

(assert (=> d!15111 (=> (not res!37257) (not e!45472))))

(assert (=> d!15111 (= res!37257 (and (bvsge (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) #b00000000000000000000000000000000) (bvslt (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (size!2077 (_keys!3812 newMap!16))) (bvslt (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (size!2078 (_values!2151 newMap!16)))))))

(declare-fun lt!30578 () Unit!1919)

(declare-fun choose!393 (array!3855 array!3857 (_ BitVec 32) (_ BitVec 32) V!2923 V!2923 (_ BitVec 32) (_ BitVec 64) V!2923 Int) Unit!1919)

(assert (=> d!15111 (= lt!30578 (choose!393 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897 (defaultEntry!2168 newMap!16)))))

(assert (=> d!15111 (validMask!0 (mask!6113 newMap!16))))

(assert (=> d!15111 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!11 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897 (defaultEntry!2168 newMap!16)) lt!30578)))

(declare-fun b!69469 () Bool)

(assert (=> b!69469 (= e!45472 (= (+!90 (getCurrentListMap!417 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)) (getCurrentListMap!417 (array!3856 (store (arr!1841 (_keys!3812 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2077 (_keys!3812 newMap!16))) (array!3858 (store (arr!1842 (_values!2151 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (ValueCellFull!885 lt!29897)) (size!2078 (_values!2151 newMap!16))) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16))))))

(assert (= (and d!15111 res!37257) b!69469))

(assert (=> d!15111 m!64407))

(declare-fun m!65789 () Bool)

(assert (=> d!15111 m!65789))

(assert (=> d!15111 m!64759))

(assert (=> b!69469 m!65507))

(assert (=> b!69469 m!64511))

(assert (=> b!69469 m!64511))

(assert (=> b!69469 m!64859))

(assert (=> b!69469 m!65511))

(assert (=> b!69469 m!65495))

(assert (=> d!15019 d!15111))

(declare-fun lt!30596 () ListLongMap!1407)

(declare-fun b!69470 () Bool)

(declare-fun e!45479 () Bool)

(assert (=> b!69470 (= e!45479 (= (apply!73 lt!30596 (select (arr!1841 lt!30499) #b00000000000000000000000000000000)) (get!1124 (select (arr!1842 lt!30481) #b00000000000000000000000000000000) (dynLambda!322 (defaultEntry!2168 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!69470 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2078 lt!30481)))))

(assert (=> b!69470 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2077 lt!30499)))))

(declare-fun b!69471 () Bool)

(declare-fun e!45485 () Unit!1919)

(declare-fun lt!30595 () Unit!1919)

(assert (=> b!69471 (= e!45485 lt!30595)))

(declare-fun lt!30588 () ListLongMap!1407)

(assert (=> b!69471 (= lt!30588 (getCurrentListMapNoExtraKeys!55 lt!30499 lt!30481 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30591 () (_ BitVec 64))

(assert (=> b!69471 (= lt!30591 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30579 () (_ BitVec 64))

(assert (=> b!69471 (= lt!30579 (select (arr!1841 lt!30499) #b00000000000000000000000000000000))))

(declare-fun lt!30593 () Unit!1919)

(assert (=> b!69471 (= lt!30593 (addStillContains!49 lt!30588 lt!30591 (zeroValue!2074 newMap!16) lt!30579))))

(assert (=> b!69471 (contains!714 (+!90 lt!30588 (tuple2!2103 lt!30591 (zeroValue!2074 newMap!16))) lt!30579)))

(declare-fun lt!30589 () Unit!1919)

(assert (=> b!69471 (= lt!30589 lt!30593)))

(declare-fun lt!30581 () ListLongMap!1407)

(assert (=> b!69471 (= lt!30581 (getCurrentListMapNoExtraKeys!55 lt!30499 lt!30481 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30592 () (_ BitVec 64))

(assert (=> b!69471 (= lt!30592 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30583 () (_ BitVec 64))

(assert (=> b!69471 (= lt!30583 (select (arr!1841 lt!30499) #b00000000000000000000000000000000))))

(declare-fun lt!30580 () Unit!1919)

(assert (=> b!69471 (= lt!30580 (addApplyDifferent!49 lt!30581 lt!30592 (minValue!2074 newMap!16) lt!30583))))

(assert (=> b!69471 (= (apply!73 (+!90 lt!30581 (tuple2!2103 lt!30592 (minValue!2074 newMap!16))) lt!30583) (apply!73 lt!30581 lt!30583))))

(declare-fun lt!30598 () Unit!1919)

(assert (=> b!69471 (= lt!30598 lt!30580)))

(declare-fun lt!30587 () ListLongMap!1407)

(assert (=> b!69471 (= lt!30587 (getCurrentListMapNoExtraKeys!55 lt!30499 lt!30481 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30582 () (_ BitVec 64))

(assert (=> b!69471 (= lt!30582 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30590 () (_ BitVec 64))

(assert (=> b!69471 (= lt!30590 (select (arr!1841 lt!30499) #b00000000000000000000000000000000))))

(declare-fun lt!30600 () Unit!1919)

(assert (=> b!69471 (= lt!30600 (addApplyDifferent!49 lt!30587 lt!30582 (zeroValue!2074 newMap!16) lt!30590))))

(assert (=> b!69471 (= (apply!73 (+!90 lt!30587 (tuple2!2103 lt!30582 (zeroValue!2074 newMap!16))) lt!30590) (apply!73 lt!30587 lt!30590))))

(declare-fun lt!30597 () Unit!1919)

(assert (=> b!69471 (= lt!30597 lt!30600)))

(declare-fun lt!30584 () ListLongMap!1407)

(assert (=> b!69471 (= lt!30584 (getCurrentListMapNoExtraKeys!55 lt!30499 lt!30481 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30599 () (_ BitVec 64))

(assert (=> b!69471 (= lt!30599 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30594 () (_ BitVec 64))

(assert (=> b!69471 (= lt!30594 (select (arr!1841 lt!30499) #b00000000000000000000000000000000))))

(assert (=> b!69471 (= lt!30595 (addApplyDifferent!49 lt!30584 lt!30599 (minValue!2074 newMap!16) lt!30594))))

(assert (=> b!69471 (= (apply!73 (+!90 lt!30584 (tuple2!2103 lt!30599 (minValue!2074 newMap!16))) lt!30594) (apply!73 lt!30584 lt!30594))))

(declare-fun b!69472 () Bool)

(declare-fun e!45478 () Bool)

(declare-fun e!45475 () Bool)

(assert (=> b!69472 (= e!45478 e!45475)))

(declare-fun res!37264 () Bool)

(declare-fun call!5952 () Bool)

(assert (=> b!69472 (= res!37264 call!5952)))

(assert (=> b!69472 (=> (not res!37264) (not e!45475))))

(declare-fun d!15113 () Bool)

(declare-fun e!45483 () Bool)

(assert (=> d!15113 e!45483))

(declare-fun res!37260 () Bool)

(assert (=> d!15113 (=> (not res!37260) (not e!45483))))

(assert (=> d!15113 (= res!37260 (or (bvsge #b00000000000000000000000000000000 (size!2077 lt!30499)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2077 lt!30499)))))))

(declare-fun lt!30585 () ListLongMap!1407)

(assert (=> d!15113 (= lt!30596 lt!30585)))

(declare-fun lt!30586 () Unit!1919)

(assert (=> d!15113 (= lt!30586 e!45485)))

(declare-fun c!9950 () Bool)

(declare-fun e!45474 () Bool)

(assert (=> d!15113 (= c!9950 e!45474)))

(declare-fun res!37261 () Bool)

(assert (=> d!15113 (=> (not res!37261) (not e!45474))))

(assert (=> d!15113 (= res!37261 (bvslt #b00000000000000000000000000000000 (size!2077 lt!30499)))))

(declare-fun e!45484 () ListLongMap!1407)

(assert (=> d!15113 (= lt!30585 e!45484)))

(declare-fun c!9946 () Bool)

(assert (=> d!15113 (= c!9946 (and (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!15113 (validMask!0 (mask!6113 newMap!16))))

(assert (=> d!15113 (= (getCurrentListMap!417 lt!30499 lt!30481 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) lt!30596)))

(declare-fun bm!5948 () Bool)

(assert (=> bm!5948 (= call!5952 (contains!714 lt!30596 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun call!5951 () ListLongMap!1407)

(declare-fun call!5957 () ListLongMap!1407)

(declare-fun call!5953 () ListLongMap!1407)

(declare-fun c!9949 () Bool)

(declare-fun bm!5949 () Bool)

(declare-fun call!5956 () ListLongMap!1407)

(assert (=> bm!5949 (= call!5956 (+!90 (ite c!9946 call!5957 (ite c!9949 call!5951 call!5953)) (ite (or c!9946 c!9949) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))))))

(declare-fun bm!5950 () Bool)

(assert (=> bm!5950 (= call!5957 (getCurrentListMapNoExtraKeys!55 lt!30499 lt!30481 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun bm!5951 () Bool)

(assert (=> bm!5951 (= call!5951 call!5957)))

(declare-fun b!69473 () Bool)

(declare-fun e!45481 () ListLongMap!1407)

(assert (=> b!69473 (= e!45481 call!5953)))

(declare-fun b!69474 () Bool)

(declare-fun e!45473 () Bool)

(declare-fun e!45476 () Bool)

(assert (=> b!69474 (= e!45473 e!45476)))

(declare-fun res!37259 () Bool)

(declare-fun call!5955 () Bool)

(assert (=> b!69474 (= res!37259 call!5955)))

(assert (=> b!69474 (=> (not res!37259) (not e!45476))))

(declare-fun b!69475 () Bool)

(declare-fun Unit!1955 () Unit!1919)

(assert (=> b!69475 (= e!45485 Unit!1955)))

(declare-fun b!69476 () Bool)

(assert (=> b!69476 (= e!45474 (validKeyInArray!0 (select (arr!1841 lt!30499) #b00000000000000000000000000000000)))))

(declare-fun b!69477 () Bool)

(assert (=> b!69477 (= e!45476 (= (apply!73 lt!30596 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2074 newMap!16)))))

(declare-fun b!69478 () Bool)

(assert (=> b!69478 (= e!45475 (= (apply!73 lt!30596 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2074 newMap!16)))))

(declare-fun b!69479 () Bool)

(declare-fun res!37262 () Bool)

(assert (=> b!69479 (=> (not res!37262) (not e!45483))))

(assert (=> b!69479 (= res!37262 e!45473)))

(declare-fun c!9947 () Bool)

(assert (=> b!69479 (= c!9947 (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!69480 () Bool)

(declare-fun e!45477 () ListLongMap!1407)

(assert (=> b!69480 (= e!45484 e!45477)))

(assert (=> b!69480 (= c!9949 (and (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!69481 () Bool)

(assert (=> b!69481 (= e!45483 e!45478)))

(declare-fun c!9945 () Bool)

(assert (=> b!69481 (= c!9945 (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!69482 () Bool)

(assert (=> b!69482 (= e!45484 (+!90 call!5956 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))))))

(declare-fun b!69483 () Bool)

(declare-fun c!9948 () Bool)

(assert (=> b!69483 (= c!9948 (and (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!69483 (= e!45477 e!45481)))

(declare-fun b!69484 () Bool)

(declare-fun e!45482 () Bool)

(assert (=> b!69484 (= e!45482 (validKeyInArray!0 (select (arr!1841 lt!30499) #b00000000000000000000000000000000)))))

(declare-fun b!69485 () Bool)

(assert (=> b!69485 (= e!45478 (not call!5952))))

(declare-fun b!69486 () Bool)

(declare-fun res!37265 () Bool)

(assert (=> b!69486 (=> (not res!37265) (not e!45483))))

(declare-fun e!45480 () Bool)

(assert (=> b!69486 (= res!37265 e!45480)))

(declare-fun res!37263 () Bool)

(assert (=> b!69486 (=> res!37263 e!45480)))

(assert (=> b!69486 (= res!37263 (not e!45482))))

(declare-fun res!37258 () Bool)

(assert (=> b!69486 (=> (not res!37258) (not e!45482))))

(assert (=> b!69486 (= res!37258 (bvslt #b00000000000000000000000000000000 (size!2077 lt!30499)))))

(declare-fun b!69487 () Bool)

(declare-fun call!5954 () ListLongMap!1407)

(assert (=> b!69487 (= e!45481 call!5954)))

(declare-fun bm!5952 () Bool)

(assert (=> bm!5952 (= call!5954 call!5956)))

(declare-fun bm!5953 () Bool)

(assert (=> bm!5953 (= call!5953 call!5951)))

(declare-fun b!69488 () Bool)

(assert (=> b!69488 (= e!45477 call!5954)))

(declare-fun b!69489 () Bool)

(assert (=> b!69489 (= e!45480 e!45479)))

(declare-fun res!37266 () Bool)

(assert (=> b!69489 (=> (not res!37266) (not e!45479))))

(assert (=> b!69489 (= res!37266 (contains!714 lt!30596 (select (arr!1841 lt!30499) #b00000000000000000000000000000000)))))

(assert (=> b!69489 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2077 lt!30499)))))

(declare-fun bm!5954 () Bool)

(assert (=> bm!5954 (= call!5955 (contains!714 lt!30596 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69490 () Bool)

(assert (=> b!69490 (= e!45473 (not call!5955))))

(assert (= (and d!15113 c!9946) b!69482))

(assert (= (and d!15113 (not c!9946)) b!69480))

(assert (= (and b!69480 c!9949) b!69488))

(assert (= (and b!69480 (not c!9949)) b!69483))

(assert (= (and b!69483 c!9948) b!69487))

(assert (= (and b!69483 (not c!9948)) b!69473))

(assert (= (or b!69487 b!69473) bm!5953))

(assert (= (or b!69488 bm!5953) bm!5951))

(assert (= (or b!69488 b!69487) bm!5952))

(assert (= (or b!69482 bm!5951) bm!5950))

(assert (= (or b!69482 bm!5952) bm!5949))

(assert (= (and d!15113 res!37261) b!69476))

(assert (= (and d!15113 c!9950) b!69471))

(assert (= (and d!15113 (not c!9950)) b!69475))

(assert (= (and d!15113 res!37260) b!69486))

(assert (= (and b!69486 res!37258) b!69484))

(assert (= (and b!69486 (not res!37263)) b!69489))

(assert (= (and b!69489 res!37266) b!69470))

(assert (= (and b!69486 res!37265) b!69479))

(assert (= (and b!69479 c!9947) b!69474))

(assert (= (and b!69479 (not c!9947)) b!69490))

(assert (= (and b!69474 res!37259) b!69477))

(assert (= (or b!69474 b!69490) bm!5954))

(assert (= (and b!69479 res!37262) b!69481))

(assert (= (and b!69481 c!9945) b!69472))

(assert (= (and b!69481 (not c!9945)) b!69485))

(assert (= (and b!69472 res!37264) b!69478))

(assert (= (or b!69472 b!69485) bm!5948))

(declare-fun b_lambda!3113 () Bool)

(assert (=> (not b_lambda!3113) (not b!69470)))

(assert (=> b!69470 t!4980))

(declare-fun b_and!4271 () Bool)

(assert (= b_and!4267 (and (=> t!4980 result!2619) b_and!4271)))

(assert (=> b!69470 t!4982))

(declare-fun b_and!4273 () Bool)

(assert (= b_and!4269 (and (=> t!4982 result!2621) b_and!4273)))

(declare-fun m!65791 () Bool)

(assert (=> bm!5954 m!65791))

(declare-fun m!65793 () Bool)

(assert (=> bm!5949 m!65793))

(declare-fun m!65795 () Bool)

(assert (=> b!69482 m!65795))

(declare-fun m!65797 () Bool)

(assert (=> bm!5948 m!65797))

(declare-fun m!65799 () Bool)

(assert (=> b!69476 m!65799))

(assert (=> b!69476 m!65799))

(declare-fun m!65801 () Bool)

(assert (=> b!69476 m!65801))

(assert (=> b!69489 m!65799))

(assert (=> b!69489 m!65799))

(declare-fun m!65803 () Bool)

(assert (=> b!69489 m!65803))

(declare-fun m!65805 () Bool)

(assert (=> b!69477 m!65805))

(declare-fun m!65807 () Bool)

(assert (=> b!69478 m!65807))

(assert (=> b!69470 m!64807))

(declare-fun m!65809 () Bool)

(assert (=> b!69470 m!65809))

(assert (=> b!69470 m!64807))

(declare-fun m!65811 () Bool)

(assert (=> b!69470 m!65811))

(assert (=> b!69470 m!65809))

(assert (=> b!69470 m!65799))

(declare-fun m!65813 () Bool)

(assert (=> b!69470 m!65813))

(assert (=> b!69470 m!65799))

(assert (=> d!15113 m!64759))

(declare-fun m!65815 () Bool)

(assert (=> bm!5950 m!65815))

(assert (=> b!69484 m!65799))

(assert (=> b!69484 m!65799))

(assert (=> b!69484 m!65801))

(declare-fun m!65817 () Bool)

(assert (=> b!69471 m!65817))

(declare-fun m!65819 () Bool)

(assert (=> b!69471 m!65819))

(declare-fun m!65821 () Bool)

(assert (=> b!69471 m!65821))

(declare-fun m!65823 () Bool)

(assert (=> b!69471 m!65823))

(declare-fun m!65825 () Bool)

(assert (=> b!69471 m!65825))

(declare-fun m!65827 () Bool)

(assert (=> b!69471 m!65827))

(declare-fun m!65829 () Bool)

(assert (=> b!69471 m!65829))

(declare-fun m!65831 () Bool)

(assert (=> b!69471 m!65831))

(assert (=> b!69471 m!65825))

(declare-fun m!65833 () Bool)

(assert (=> b!69471 m!65833))

(assert (=> b!69471 m!65799))

(declare-fun m!65835 () Bool)

(assert (=> b!69471 m!65835))

(declare-fun m!65837 () Bool)

(assert (=> b!69471 m!65837))

(declare-fun m!65839 () Bool)

(assert (=> b!69471 m!65839))

(assert (=> b!69471 m!65827))

(declare-fun m!65841 () Bool)

(assert (=> b!69471 m!65841))

(assert (=> b!69471 m!65835))

(assert (=> b!69471 m!65819))

(declare-fun m!65843 () Bool)

(assert (=> b!69471 m!65843))

(assert (=> b!69471 m!65815))

(declare-fun m!65845 () Bool)

(assert (=> b!69471 m!65845))

(assert (=> d!15019 d!15113))

(declare-fun b!69491 () Bool)

(declare-fun e!45487 () (_ BitVec 32))

(declare-fun call!5958 () (_ BitVec 32))

(assert (=> b!69491 (= e!45487 (bvadd #b00000000000000000000000000000001 call!5958))))

(declare-fun bm!5955 () Bool)

(assert (=> bm!5955 (= call!5958 (arrayCountValidKeys!0 (array!3856 (store (arr!1841 (_keys!3812 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2077 (_keys!3812 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2077 (_keys!3812 newMap!16))))))

(declare-fun lt!30601 () (_ BitVec 32))

(declare-fun d!15115 () Bool)

(assert (=> d!15115 (and (bvsge lt!30601 #b00000000000000000000000000000000) (bvsle lt!30601 (bvsub (size!2077 (array!3856 (store (arr!1841 (_keys!3812 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2077 (_keys!3812 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun e!45486 () (_ BitVec 32))

(assert (=> d!15115 (= lt!30601 e!45486)))

(declare-fun c!9952 () Bool)

(assert (=> d!15115 (= c!9952 (bvsge #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))))))

(assert (=> d!15115 (and (bvsle #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2077 (_keys!3812 newMap!16)) (size!2077 (array!3856 (store (arr!1841 (_keys!3812 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2077 (_keys!3812 newMap!16))))))))

(assert (=> d!15115 (= (arrayCountValidKeys!0 (array!3856 (store (arr!1841 (_keys!3812 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2077 (_keys!3812 newMap!16))) #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))) lt!30601)))

(declare-fun b!69492 () Bool)

(assert (=> b!69492 (= e!45487 call!5958)))

(declare-fun b!69493 () Bool)

(assert (=> b!69493 (= e!45486 #b00000000000000000000000000000000)))

(declare-fun b!69494 () Bool)

(assert (=> b!69494 (= e!45486 e!45487)))

(declare-fun c!9951 () Bool)

(assert (=> b!69494 (= c!9951 (validKeyInArray!0 (select (arr!1841 (array!3856 (store (arr!1841 (_keys!3812 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2077 (_keys!3812 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (= (and d!15115 c!9952) b!69493))

(assert (= (and d!15115 (not c!9952)) b!69494))

(assert (= (and b!69494 c!9951) b!69491))

(assert (= (and b!69494 (not c!9951)) b!69492))

(assert (= (or b!69491 b!69492) bm!5955))

(declare-fun m!65847 () Bool)

(assert (=> bm!5955 m!65847))

(assert (=> b!69494 m!65777))

(assert (=> b!69494 m!65777))

(assert (=> b!69494 m!65779))

(assert (=> d!15019 d!15115))

(assert (=> d!15019 d!14851))

(assert (=> d!15019 d!14843))

(assert (=> d!15019 d!14821))

(declare-fun d!15117 () Bool)

(assert (=> d!15117 (= (arrayCountValidKeys!0 lt!30473 (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (bvadd (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!30604 () Unit!1919)

(declare-fun choose!2 (array!3855 (_ BitVec 32)) Unit!1919)

(assert (=> d!15117 (= lt!30604 (choose!2 lt!30473 (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149))))))

(declare-fun e!45490 () Bool)

(assert (=> d!15117 e!45490))

(declare-fun res!37271 () Bool)

(assert (=> d!15117 (=> (not res!37271) (not e!45490))))

(assert (=> d!15117 (= res!37271 (and (bvsge (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) #b00000000000000000000000000000000) (bvslt (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (size!2077 lt!30473))))))

(assert (=> d!15117 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!30473 (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149))) lt!30604)))

(declare-fun b!69499 () Bool)

(declare-fun res!37272 () Bool)

(assert (=> b!69499 (=> (not res!37272) (not e!45490))))

(assert (=> b!69499 (= res!37272 (validKeyInArray!0 (select (arr!1841 lt!30473) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)))))))

(declare-fun b!69500 () Bool)

(assert (=> b!69500 (= e!45490 (bvslt (size!2077 lt!30473) #b01111111111111111111111111111111))))

(assert (= (and d!15117 res!37271) b!69499))

(assert (= (and b!69499 res!37272) b!69500))

(assert (=> d!15117 m!65499))

(declare-fun m!65849 () Bool)

(assert (=> d!15117 m!65849))

(declare-fun m!65851 () Bool)

(assert (=> b!69499 m!65851))

(assert (=> b!69499 m!65851))

(declare-fun m!65853 () Bool)

(assert (=> b!69499 m!65853))

(assert (=> d!15019 d!15117))

(declare-fun d!15119 () Bool)

(declare-fun e!45491 () Bool)

(assert (=> d!15119 e!45491))

(declare-fun res!37273 () Bool)

(assert (=> d!15119 (=> res!37273 e!45491)))

(declare-fun lt!30606 () Bool)

(assert (=> d!15119 (= res!37273 (not lt!30606))))

(declare-fun lt!30605 () Bool)

(assert (=> d!15119 (= lt!30606 lt!30605)))

(declare-fun lt!30607 () Unit!1919)

(declare-fun e!45492 () Unit!1919)

(assert (=> d!15119 (= lt!30607 e!45492)))

(declare-fun c!9953 () Bool)

(assert (=> d!15119 (= c!9953 lt!30605)))

(assert (=> d!15119 (= lt!30605 (containsKey!135 (toList!719 (getCurrentListMap!417 lt!30499 lt!30481 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16))) (select (store (arr!1841 (_keys!3812 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)))))))

(assert (=> d!15119 (= (contains!714 (getCurrentListMap!417 lt!30499 lt!30481 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) (select (store (arr!1841 (_keys!3812 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)))) lt!30606)))

(declare-fun b!69501 () Bool)

(declare-fun lt!30608 () Unit!1919)

(assert (=> b!69501 (= e!45492 lt!30608)))

(assert (=> b!69501 (= lt!30608 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 (getCurrentListMap!417 lt!30499 lt!30481 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16))) (select (store (arr!1841 (_keys!3812 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)))))))

(assert (=> b!69501 (isDefined!84 (getValueByKey!131 (toList!719 (getCurrentListMap!417 lt!30499 lt!30481 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16))) (select (store (arr!1841 (_keys!3812 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)))))))

(declare-fun b!69502 () Bool)

(declare-fun Unit!1956 () Unit!1919)

(assert (=> b!69502 (= e!45492 Unit!1956)))

(declare-fun b!69503 () Bool)

(assert (=> b!69503 (= e!45491 (isDefined!84 (getValueByKey!131 (toList!719 (getCurrentListMap!417 lt!30499 lt!30481 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16))) (select (store (arr!1841 (_keys!3812 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149))))))))

(assert (= (and d!15119 c!9953) b!69501))

(assert (= (and d!15119 (not c!9953)) b!69502))

(assert (= (and d!15119 (not res!37273)) b!69503))

(assert (=> d!15119 m!65515))

(declare-fun m!65855 () Bool)

(assert (=> d!15119 m!65855))

(assert (=> b!69501 m!65515))

(declare-fun m!65857 () Bool)

(assert (=> b!69501 m!65857))

(assert (=> b!69501 m!65515))

(declare-fun m!65859 () Bool)

(assert (=> b!69501 m!65859))

(assert (=> b!69501 m!65859))

(declare-fun m!65861 () Bool)

(assert (=> b!69501 m!65861))

(assert (=> b!69503 m!65515))

(assert (=> b!69503 m!65859))

(assert (=> b!69503 m!65859))

(assert (=> b!69503 m!65861))

(assert (=> d!15019 d!15119))

(declare-fun d!15121 () Bool)

(declare-fun e!45493 () Bool)

(assert (=> d!15121 e!45493))

(declare-fun res!37274 () Bool)

(assert (=> d!15121 (=> (not res!37274) (not e!45493))))

(assert (=> d!15121 (= res!37274 (and (bvsge (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) #b00000000000000000000000000000000) (bvslt (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (size!2077 lt!30499))))))

(declare-fun lt!30609 () Unit!1919)

(assert (=> d!15121 (= lt!30609 (choose!382 lt!30499 lt!30481 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (defaultEntry!2168 newMap!16)))))

(assert (=> d!15121 (validMask!0 (mask!6113 newMap!16))))

(assert (=> d!15121 (= (lemmaValidKeyInArrayIsInListMap!83 lt!30499 lt!30481 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (defaultEntry!2168 newMap!16)) lt!30609)))

(declare-fun b!69504 () Bool)

(assert (=> b!69504 (= e!45493 (contains!714 (getCurrentListMap!417 lt!30499 lt!30481 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) (select (arr!1841 lt!30499) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)))))))

(assert (= (and d!15121 res!37274) b!69504))

(declare-fun m!65863 () Bool)

(assert (=> d!15121 m!65863))

(assert (=> d!15121 m!64759))

(assert (=> b!69504 m!65513))

(declare-fun m!65865 () Bool)

(assert (=> b!69504 m!65865))

(assert (=> b!69504 m!65513))

(assert (=> b!69504 m!65865))

(declare-fun m!65867 () Bool)

(assert (=> b!69504 m!65867))

(assert (=> d!15019 d!15121))

(declare-fun b!69513 () Bool)

(declare-fun res!37283 () Bool)

(declare-fun e!45498 () Bool)

(assert (=> b!69513 (=> (not res!37283) (not e!45498))))

(assert (=> b!69513 (= res!37283 (not (validKeyInArray!0 (select (arr!1841 (_keys!3812 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149))))))))

(declare-fun b!69514 () Bool)

(declare-fun res!37286 () Bool)

(assert (=> b!69514 (=> (not res!37286) (not e!45498))))

(assert (=> b!69514 (= res!37286 (validKeyInArray!0 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(declare-fun d!15123 () Bool)

(declare-fun e!45499 () Bool)

(assert (=> d!15123 e!45499))

(declare-fun res!37284 () Bool)

(assert (=> d!15123 (=> (not res!37284) (not e!45499))))

(assert (=> d!15123 (= res!37284 (and (bvsge (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) #b00000000000000000000000000000000) (bvslt (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (size!2077 (_keys!3812 newMap!16)))))))

(declare-fun lt!30612 () Unit!1919)

(declare-fun choose!1 (array!3855 (_ BitVec 32) (_ BitVec 64)) Unit!1919)

(assert (=> d!15123 (= lt!30612 (choose!1 (_keys!3812 newMap!16) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(assert (=> d!15123 e!45498))

(declare-fun res!37285 () Bool)

(assert (=> d!15123 (=> (not res!37285) (not e!45498))))

(assert (=> d!15123 (= res!37285 (and (bvsge (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) #b00000000000000000000000000000000) (bvslt (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (size!2077 (_keys!3812 newMap!16)))))))

(assert (=> d!15123 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3812 newMap!16) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) lt!30612)))

(declare-fun b!69516 () Bool)

(assert (=> b!69516 (= e!45499 (= (arrayCountValidKeys!0 (array!3856 (store (arr!1841 (_keys!3812 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2077 (_keys!3812 newMap!16))) #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!3812 newMap!16) #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))) #b00000000000000000000000000000001)))))

(declare-fun b!69515 () Bool)

(assert (=> b!69515 (= e!45498 (bvslt (size!2077 (_keys!3812 newMap!16)) #b01111111111111111111111111111111))))

(assert (= (and d!15123 res!37285) b!69513))

(assert (= (and b!69513 res!37283) b!69514))

(assert (= (and b!69514 res!37286) b!69515))

(assert (= (and d!15123 res!37284) b!69516))

(declare-fun m!65869 () Bool)

(assert (=> b!69513 m!65869))

(assert (=> b!69513 m!65869))

(declare-fun m!65871 () Bool)

(assert (=> b!69513 m!65871))

(assert (=> b!69514 m!64407))

(assert (=> b!69514 m!64577))

(assert (=> d!15123 m!64407))

(declare-fun m!65873 () Bool)

(assert (=> d!15123 m!65873))

(assert (=> b!69516 m!65495))

(assert (=> b!69516 m!65523))

(assert (=> b!69516 m!64729))

(assert (=> d!15019 d!15123))

(declare-fun d!15125 () Bool)

(assert (=> d!15125 (arrayContainsKey!0 lt!30474 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!30615 () Unit!1919)

(declare-fun choose!13 (array!3855 (_ BitVec 64) (_ BitVec 32)) Unit!1919)

(assert (=> d!15125 (= lt!30615 (choose!13 lt!30474 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149))))))

(assert (=> d!15125 (bvsge (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) #b00000000000000000000000000000000)))

(assert (=> d!15125 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!30474 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149))) lt!30615)))

(declare-fun bs!2987 () Bool)

(assert (= bs!2987 d!15125))

(assert (=> bs!2987 m!64407))

(assert (=> bs!2987 m!65497))

(assert (=> bs!2987 m!64407))

(declare-fun m!65875 () Bool)

(assert (=> bs!2987 m!65875))

(assert (=> d!15019 d!15125))

(assert (=> d!15019 d!14933))

(declare-fun b!69517 () Bool)

(declare-fun e!45503 () Bool)

(declare-fun e!45502 () Bool)

(assert (=> b!69517 (= e!45503 e!45502)))

(declare-fun c!9954 () Bool)

(assert (=> b!69517 (= c!9954 (validKeyInArray!0 (select (arr!1841 (array!3856 (store (arr!1841 (_keys!3812 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2077 (_keys!3812 newMap!16)))) lt!30492)))))

(declare-fun b!69518 () Bool)

(declare-fun call!5959 () Bool)

(assert (=> b!69518 (= e!45502 call!5959)))

(declare-fun b!69519 () Bool)

(declare-fun e!45500 () Bool)

(assert (=> b!69519 (= e!45500 e!45503)))

(declare-fun res!37289 () Bool)

(assert (=> b!69519 (=> (not res!37289) (not e!45503))))

(declare-fun e!45501 () Bool)

(assert (=> b!69519 (= res!37289 (not e!45501))))

(declare-fun res!37287 () Bool)

(assert (=> b!69519 (=> (not res!37287) (not e!45501))))

(assert (=> b!69519 (= res!37287 (validKeyInArray!0 (select (arr!1841 (array!3856 (store (arr!1841 (_keys!3812 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2077 (_keys!3812 newMap!16)))) lt!30492)))))

(declare-fun d!15127 () Bool)

(declare-fun res!37288 () Bool)

(assert (=> d!15127 (=> res!37288 e!45500)))

(assert (=> d!15127 (= res!37288 (bvsge lt!30492 (size!2077 (array!3856 (store (arr!1841 (_keys!3812 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2077 (_keys!3812 newMap!16))))))))

(assert (=> d!15127 (= (arrayNoDuplicates!0 (array!3856 (store (arr!1841 (_keys!3812 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2077 (_keys!3812 newMap!16))) lt!30492 lt!30475) e!45500)))

(declare-fun b!69520 () Bool)

(assert (=> b!69520 (= e!45502 call!5959)))

(declare-fun b!69521 () Bool)

(assert (=> b!69521 (= e!45501 (contains!715 lt!30475 (select (arr!1841 (array!3856 (store (arr!1841 (_keys!3812 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2077 (_keys!3812 newMap!16)))) lt!30492)))))

(declare-fun bm!5956 () Bool)

(assert (=> bm!5956 (= call!5959 (arrayNoDuplicates!0 (array!3856 (store (arr!1841 (_keys!3812 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2077 (_keys!3812 newMap!16))) (bvadd lt!30492 #b00000000000000000000000000000001) (ite c!9954 (Cons!1466 (select (arr!1841 (array!3856 (store (arr!1841 (_keys!3812 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2077 (_keys!3812 newMap!16)))) lt!30492) lt!30475) lt!30475)))))

(assert (= (and d!15127 (not res!37288)) b!69519))

(assert (= (and b!69519 res!37287) b!69521))

(assert (= (and b!69519 res!37289) b!69517))

(assert (= (and b!69517 c!9954) b!69518))

(assert (= (and b!69517 (not c!9954)) b!69520))

(assert (= (or b!69518 b!69520) bm!5956))

(declare-fun m!65877 () Bool)

(assert (=> b!69517 m!65877))

(assert (=> b!69517 m!65877))

(declare-fun m!65879 () Bool)

(assert (=> b!69517 m!65879))

(assert (=> b!69519 m!65877))

(assert (=> b!69519 m!65877))

(assert (=> b!69519 m!65879))

(assert (=> b!69521 m!65877))

(assert (=> b!69521 m!65877))

(declare-fun m!65881 () Bool)

(assert (=> b!69521 m!65881))

(assert (=> bm!5956 m!65877))

(declare-fun m!65883 () Bool)

(assert (=> bm!5956 m!65883))

(assert (=> d!15019 d!15127))

(declare-fun d!15129 () Bool)

(declare-fun e!45504 () Bool)

(assert (=> d!15129 e!45504))

(declare-fun res!37291 () Bool)

(assert (=> d!15129 (=> (not res!37291) (not e!45504))))

(declare-fun lt!30618 () ListLongMap!1407)

(assert (=> d!15129 (= res!37291 (contains!714 lt!30618 (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))

(declare-fun lt!30619 () List!1469)

(assert (=> d!15129 (= lt!30618 (ListLongMap!1408 lt!30619))))

(declare-fun lt!30616 () Unit!1919)

(declare-fun lt!30617 () Unit!1919)

(assert (=> d!15129 (= lt!30616 lt!30617)))

(assert (=> d!15129 (= (getValueByKey!131 lt!30619 (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))) (Some!136 (_2!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))

(assert (=> d!15129 (= lt!30617 (lemmaContainsTupThenGetReturnValue!48 lt!30619 (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)) (_2!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))

(assert (=> d!15129 (= lt!30619 (insertStrictlySorted!51 (toList!719 (getCurrentListMap!417 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16))) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)) (_2!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))

(assert (=> d!15129 (= (+!90 (getCurrentListMap!417 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)) lt!30618)))

(declare-fun b!69522 () Bool)

(declare-fun res!37290 () Bool)

(assert (=> b!69522 (=> (not res!37290) (not e!45504))))

(assert (=> b!69522 (= res!37290 (= (getValueByKey!131 (toList!719 lt!30618) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))) (Some!136 (_2!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))))))

(declare-fun b!69523 () Bool)

(assert (=> b!69523 (= e!45504 (contains!716 (toList!719 lt!30618) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))))

(assert (= (and d!15129 res!37291) b!69522))

(assert (= (and b!69522 res!37290) b!69523))

(declare-fun m!65885 () Bool)

(assert (=> d!15129 m!65885))

(declare-fun m!65887 () Bool)

(assert (=> d!15129 m!65887))

(declare-fun m!65889 () Bool)

(assert (=> d!15129 m!65889))

(declare-fun m!65891 () Bool)

(assert (=> d!15129 m!65891))

(declare-fun m!65893 () Bool)

(assert (=> b!69522 m!65893))

(declare-fun m!65895 () Bool)

(assert (=> b!69523 m!65895))

(assert (=> d!15019 d!15129))

(declare-fun d!15131 () Bool)

(declare-fun e!45507 () Bool)

(assert (=> d!15131 e!45507))

(declare-fun res!37294 () Bool)

(assert (=> d!15131 (=> (not res!37294) (not e!45507))))

(assert (=> d!15131 (= res!37294 (and (bvsge (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) #b00000000000000000000000000000000) (bvslt (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (size!2077 (_keys!3812 newMap!16)))))))

(declare-fun lt!30622 () Unit!1919)

(declare-fun choose!102 ((_ BitVec 64) array!3855 (_ BitVec 32) (_ BitVec 32)) Unit!1919)

(assert (=> d!15131 (= lt!30622 (choose!102 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (_keys!3812 newMap!16) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (mask!6113 newMap!16)))))

(assert (=> d!15131 (validMask!0 (mask!6113 newMap!16))))

(assert (=> d!15131 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (_keys!3812 newMap!16) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (mask!6113 newMap!16)) lt!30622)))

(declare-fun b!69526 () Bool)

(assert (=> b!69526 (= e!45507 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3856 (store (arr!1841 (_keys!3812 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2077 (_keys!3812 newMap!16))) (mask!6113 newMap!16)))))

(assert (= (and d!15131 res!37294) b!69526))

(assert (=> d!15131 m!64407))

(declare-fun m!65897 () Bool)

(assert (=> d!15131 m!65897))

(assert (=> d!15131 m!64759))

(assert (=> b!69526 m!65495))

(assert (=> b!69526 m!65519))

(assert (=> d!15019 d!15131))

(assert (=> d!15019 d!14951))

(declare-fun b!69527 () Bool)

(declare-fun e!45514 () Bool)

(declare-fun lt!30640 () ListLongMap!1407)

(assert (=> b!69527 (= e!45514 (= (apply!73 lt!30640 (select (arr!1841 (array!3856 (store (arr!1841 (_keys!3812 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2077 (_keys!3812 newMap!16)))) #b00000000000000000000000000000000)) (get!1124 (select (arr!1842 (array!3858 (store (arr!1842 (_values!2151 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (ValueCellFull!885 lt!29897)) (size!2078 (_values!2151 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!322 (defaultEntry!2168 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!69527 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2078 (array!3858 (store (arr!1842 (_values!2151 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (ValueCellFull!885 lt!29897)) (size!2078 (_values!2151 newMap!16))))))))

(assert (=> b!69527 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2077 (array!3856 (store (arr!1841 (_keys!3812 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2077 (_keys!3812 newMap!16))))))))

(declare-fun b!69528 () Bool)

(declare-fun e!45520 () Unit!1919)

(declare-fun lt!30639 () Unit!1919)

(assert (=> b!69528 (= e!45520 lt!30639)))

(declare-fun lt!30632 () ListLongMap!1407)

(assert (=> b!69528 (= lt!30632 (getCurrentListMapNoExtraKeys!55 (array!3856 (store (arr!1841 (_keys!3812 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2077 (_keys!3812 newMap!16))) (array!3858 (store (arr!1842 (_values!2151 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (ValueCellFull!885 lt!29897)) (size!2078 (_values!2151 newMap!16))) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30635 () (_ BitVec 64))

(assert (=> b!69528 (= lt!30635 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30623 () (_ BitVec 64))

(assert (=> b!69528 (= lt!30623 (select (arr!1841 (array!3856 (store (arr!1841 (_keys!3812 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2077 (_keys!3812 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!30637 () Unit!1919)

(assert (=> b!69528 (= lt!30637 (addStillContains!49 lt!30632 lt!30635 (zeroValue!2074 newMap!16) lt!30623))))

(assert (=> b!69528 (contains!714 (+!90 lt!30632 (tuple2!2103 lt!30635 (zeroValue!2074 newMap!16))) lt!30623)))

(declare-fun lt!30633 () Unit!1919)

(assert (=> b!69528 (= lt!30633 lt!30637)))

(declare-fun lt!30625 () ListLongMap!1407)

(assert (=> b!69528 (= lt!30625 (getCurrentListMapNoExtraKeys!55 (array!3856 (store (arr!1841 (_keys!3812 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2077 (_keys!3812 newMap!16))) (array!3858 (store (arr!1842 (_values!2151 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (ValueCellFull!885 lt!29897)) (size!2078 (_values!2151 newMap!16))) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30636 () (_ BitVec 64))

(assert (=> b!69528 (= lt!30636 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30627 () (_ BitVec 64))

(assert (=> b!69528 (= lt!30627 (select (arr!1841 (array!3856 (store (arr!1841 (_keys!3812 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2077 (_keys!3812 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!30624 () Unit!1919)

(assert (=> b!69528 (= lt!30624 (addApplyDifferent!49 lt!30625 lt!30636 (minValue!2074 newMap!16) lt!30627))))

(assert (=> b!69528 (= (apply!73 (+!90 lt!30625 (tuple2!2103 lt!30636 (minValue!2074 newMap!16))) lt!30627) (apply!73 lt!30625 lt!30627))))

(declare-fun lt!30642 () Unit!1919)

(assert (=> b!69528 (= lt!30642 lt!30624)))

(declare-fun lt!30631 () ListLongMap!1407)

(assert (=> b!69528 (= lt!30631 (getCurrentListMapNoExtraKeys!55 (array!3856 (store (arr!1841 (_keys!3812 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2077 (_keys!3812 newMap!16))) (array!3858 (store (arr!1842 (_values!2151 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (ValueCellFull!885 lt!29897)) (size!2078 (_values!2151 newMap!16))) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30626 () (_ BitVec 64))

(assert (=> b!69528 (= lt!30626 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30634 () (_ BitVec 64))

(assert (=> b!69528 (= lt!30634 (select (arr!1841 (array!3856 (store (arr!1841 (_keys!3812 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2077 (_keys!3812 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!30644 () Unit!1919)

(assert (=> b!69528 (= lt!30644 (addApplyDifferent!49 lt!30631 lt!30626 (zeroValue!2074 newMap!16) lt!30634))))

(assert (=> b!69528 (= (apply!73 (+!90 lt!30631 (tuple2!2103 lt!30626 (zeroValue!2074 newMap!16))) lt!30634) (apply!73 lt!30631 lt!30634))))

(declare-fun lt!30641 () Unit!1919)

(assert (=> b!69528 (= lt!30641 lt!30644)))

(declare-fun lt!30628 () ListLongMap!1407)

(assert (=> b!69528 (= lt!30628 (getCurrentListMapNoExtraKeys!55 (array!3856 (store (arr!1841 (_keys!3812 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2077 (_keys!3812 newMap!16))) (array!3858 (store (arr!1842 (_values!2151 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (ValueCellFull!885 lt!29897)) (size!2078 (_values!2151 newMap!16))) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30643 () (_ BitVec 64))

(assert (=> b!69528 (= lt!30643 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30638 () (_ BitVec 64))

(assert (=> b!69528 (= lt!30638 (select (arr!1841 (array!3856 (store (arr!1841 (_keys!3812 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2077 (_keys!3812 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!69528 (= lt!30639 (addApplyDifferent!49 lt!30628 lt!30643 (minValue!2074 newMap!16) lt!30638))))

(assert (=> b!69528 (= (apply!73 (+!90 lt!30628 (tuple2!2103 lt!30643 (minValue!2074 newMap!16))) lt!30638) (apply!73 lt!30628 lt!30638))))

(declare-fun b!69529 () Bool)

(declare-fun e!45513 () Bool)

(declare-fun e!45510 () Bool)

(assert (=> b!69529 (= e!45513 e!45510)))

(declare-fun res!37301 () Bool)

(declare-fun call!5961 () Bool)

(assert (=> b!69529 (= res!37301 call!5961)))

(assert (=> b!69529 (=> (not res!37301) (not e!45510))))

(declare-fun d!15133 () Bool)

(declare-fun e!45518 () Bool)

(assert (=> d!15133 e!45518))

(declare-fun res!37297 () Bool)

(assert (=> d!15133 (=> (not res!37297) (not e!45518))))

(assert (=> d!15133 (= res!37297 (or (bvsge #b00000000000000000000000000000000 (size!2077 (array!3856 (store (arr!1841 (_keys!3812 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2077 (_keys!3812 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2077 (array!3856 (store (arr!1841 (_keys!3812 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2077 (_keys!3812 newMap!16))))))))))

(declare-fun lt!30629 () ListLongMap!1407)

(assert (=> d!15133 (= lt!30640 lt!30629)))

(declare-fun lt!30630 () Unit!1919)

(assert (=> d!15133 (= lt!30630 e!45520)))

(declare-fun c!9960 () Bool)

(declare-fun e!45509 () Bool)

(assert (=> d!15133 (= c!9960 e!45509)))

(declare-fun res!37298 () Bool)

(assert (=> d!15133 (=> (not res!37298) (not e!45509))))

(assert (=> d!15133 (= res!37298 (bvslt #b00000000000000000000000000000000 (size!2077 (array!3856 (store (arr!1841 (_keys!3812 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2077 (_keys!3812 newMap!16))))))))

(declare-fun e!45519 () ListLongMap!1407)

(assert (=> d!15133 (= lt!30629 e!45519)))

(declare-fun c!9956 () Bool)

(assert (=> d!15133 (= c!9956 (and (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!15133 (validMask!0 (mask!6113 newMap!16))))

(assert (=> d!15133 (= (getCurrentListMap!417 (array!3856 (store (arr!1841 (_keys!3812 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2077 (_keys!3812 newMap!16))) (array!3858 (store (arr!1842 (_values!2151 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (ValueCellFull!885 lt!29897)) (size!2078 (_values!2151 newMap!16))) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) lt!30640)))

(declare-fun bm!5957 () Bool)

(assert (=> bm!5957 (= call!5961 (contains!714 lt!30640 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun c!9959 () Bool)

(declare-fun call!5960 () ListLongMap!1407)

(declare-fun bm!5958 () Bool)

(declare-fun call!5965 () ListLongMap!1407)

(declare-fun call!5966 () ListLongMap!1407)

(declare-fun call!5962 () ListLongMap!1407)

(assert (=> bm!5958 (= call!5965 (+!90 (ite c!9956 call!5966 (ite c!9959 call!5960 call!5962)) (ite (or c!9956 c!9959) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))))))

(declare-fun bm!5959 () Bool)

(assert (=> bm!5959 (= call!5966 (getCurrentListMapNoExtraKeys!55 (array!3856 (store (arr!1841 (_keys!3812 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2077 (_keys!3812 newMap!16))) (array!3858 (store (arr!1842 (_values!2151 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (ValueCellFull!885 lt!29897)) (size!2078 (_values!2151 newMap!16))) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun bm!5960 () Bool)

(assert (=> bm!5960 (= call!5960 call!5966)))

(declare-fun b!69530 () Bool)

(declare-fun e!45516 () ListLongMap!1407)

(assert (=> b!69530 (= e!45516 call!5962)))

(declare-fun b!69531 () Bool)

(declare-fun e!45508 () Bool)

(declare-fun e!45511 () Bool)

(assert (=> b!69531 (= e!45508 e!45511)))

(declare-fun res!37296 () Bool)

(declare-fun call!5964 () Bool)

(assert (=> b!69531 (= res!37296 call!5964)))

(assert (=> b!69531 (=> (not res!37296) (not e!45511))))

(declare-fun b!69532 () Bool)

(declare-fun Unit!1957 () Unit!1919)

(assert (=> b!69532 (= e!45520 Unit!1957)))

(declare-fun b!69533 () Bool)

(assert (=> b!69533 (= e!45509 (validKeyInArray!0 (select (arr!1841 (array!3856 (store (arr!1841 (_keys!3812 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2077 (_keys!3812 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!69534 () Bool)

(assert (=> b!69534 (= e!45511 (= (apply!73 lt!30640 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2074 newMap!16)))))

(declare-fun b!69535 () Bool)

(assert (=> b!69535 (= e!45510 (= (apply!73 lt!30640 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2074 newMap!16)))))

(declare-fun b!69536 () Bool)

(declare-fun res!37299 () Bool)

(assert (=> b!69536 (=> (not res!37299) (not e!45518))))

(assert (=> b!69536 (= res!37299 e!45508)))

(declare-fun c!9957 () Bool)

(assert (=> b!69536 (= c!9957 (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!69537 () Bool)

(declare-fun e!45512 () ListLongMap!1407)

(assert (=> b!69537 (= e!45519 e!45512)))

(assert (=> b!69537 (= c!9959 (and (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!69538 () Bool)

(assert (=> b!69538 (= e!45518 e!45513)))

(declare-fun c!9955 () Bool)

(assert (=> b!69538 (= c!9955 (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!69539 () Bool)

(assert (=> b!69539 (= e!45519 (+!90 call!5965 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))))))

(declare-fun b!69540 () Bool)

(declare-fun c!9958 () Bool)

(assert (=> b!69540 (= c!9958 (and (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!69540 (= e!45512 e!45516)))

(declare-fun b!69541 () Bool)

(declare-fun e!45517 () Bool)

(assert (=> b!69541 (= e!45517 (validKeyInArray!0 (select (arr!1841 (array!3856 (store (arr!1841 (_keys!3812 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2077 (_keys!3812 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!69542 () Bool)

(assert (=> b!69542 (= e!45513 (not call!5961))))

(declare-fun b!69543 () Bool)

(declare-fun res!37302 () Bool)

(assert (=> b!69543 (=> (not res!37302) (not e!45518))))

(declare-fun e!45515 () Bool)

(assert (=> b!69543 (= res!37302 e!45515)))

(declare-fun res!37300 () Bool)

(assert (=> b!69543 (=> res!37300 e!45515)))

(assert (=> b!69543 (= res!37300 (not e!45517))))

(declare-fun res!37295 () Bool)

(assert (=> b!69543 (=> (not res!37295) (not e!45517))))

(assert (=> b!69543 (= res!37295 (bvslt #b00000000000000000000000000000000 (size!2077 (array!3856 (store (arr!1841 (_keys!3812 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2077 (_keys!3812 newMap!16))))))))

(declare-fun b!69544 () Bool)

(declare-fun call!5963 () ListLongMap!1407)

(assert (=> b!69544 (= e!45516 call!5963)))

(declare-fun bm!5961 () Bool)

(assert (=> bm!5961 (= call!5963 call!5965)))

(declare-fun bm!5962 () Bool)

(assert (=> bm!5962 (= call!5962 call!5960)))

(declare-fun b!69545 () Bool)

(assert (=> b!69545 (= e!45512 call!5963)))

(declare-fun b!69546 () Bool)

(assert (=> b!69546 (= e!45515 e!45514)))

(declare-fun res!37303 () Bool)

(assert (=> b!69546 (=> (not res!37303) (not e!45514))))

(assert (=> b!69546 (= res!37303 (contains!714 lt!30640 (select (arr!1841 (array!3856 (store (arr!1841 (_keys!3812 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2077 (_keys!3812 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!69546 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2077 (array!3856 (store (arr!1841 (_keys!3812 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2077 (_keys!3812 newMap!16))))))))

(declare-fun bm!5963 () Bool)

(assert (=> bm!5963 (= call!5964 (contains!714 lt!30640 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69547 () Bool)

(assert (=> b!69547 (= e!45508 (not call!5964))))

(assert (= (and d!15133 c!9956) b!69539))

(assert (= (and d!15133 (not c!9956)) b!69537))

(assert (= (and b!69537 c!9959) b!69545))

(assert (= (and b!69537 (not c!9959)) b!69540))

(assert (= (and b!69540 c!9958) b!69544))

(assert (= (and b!69540 (not c!9958)) b!69530))

(assert (= (or b!69544 b!69530) bm!5962))

(assert (= (or b!69545 bm!5962) bm!5960))

(assert (= (or b!69545 b!69544) bm!5961))

(assert (= (or b!69539 bm!5960) bm!5959))

(assert (= (or b!69539 bm!5961) bm!5958))

(assert (= (and d!15133 res!37298) b!69533))

(assert (= (and d!15133 c!9960) b!69528))

(assert (= (and d!15133 (not c!9960)) b!69532))

(assert (= (and d!15133 res!37297) b!69543))

(assert (= (and b!69543 res!37295) b!69541))

(assert (= (and b!69543 (not res!37300)) b!69546))

(assert (= (and b!69546 res!37303) b!69527))

(assert (= (and b!69543 res!37302) b!69536))

(assert (= (and b!69536 c!9957) b!69531))

(assert (= (and b!69536 (not c!9957)) b!69547))

(assert (= (and b!69531 res!37296) b!69534))

(assert (= (or b!69531 b!69547) bm!5963))

(assert (= (and b!69536 res!37299) b!69538))

(assert (= (and b!69538 c!9955) b!69529))

(assert (= (and b!69538 (not c!9955)) b!69542))

(assert (= (and b!69529 res!37301) b!69535))

(assert (= (or b!69529 b!69542) bm!5957))

(declare-fun b_lambda!3115 () Bool)

(assert (=> (not b_lambda!3115) (not b!69527)))

(assert (=> b!69527 t!4980))

(declare-fun b_and!4275 () Bool)

(assert (= b_and!4271 (and (=> t!4980 result!2619) b_and!4275)))

(assert (=> b!69527 t!4982))

(declare-fun b_and!4277 () Bool)

(assert (= b_and!4273 (and (=> t!4982 result!2621) b_and!4277)))

(declare-fun m!65899 () Bool)

(assert (=> bm!5963 m!65899))

(declare-fun m!65901 () Bool)

(assert (=> bm!5958 m!65901))

(declare-fun m!65903 () Bool)

(assert (=> b!69539 m!65903))

(declare-fun m!65905 () Bool)

(assert (=> bm!5957 m!65905))

(assert (=> b!69533 m!65777))

(assert (=> b!69533 m!65777))

(assert (=> b!69533 m!65779))

(assert (=> b!69546 m!65777))

(assert (=> b!69546 m!65777))

(declare-fun m!65907 () Bool)

(assert (=> b!69546 m!65907))

(declare-fun m!65909 () Bool)

(assert (=> b!69534 m!65909))

(declare-fun m!65911 () Bool)

(assert (=> b!69535 m!65911))

(assert (=> b!69527 m!64807))

(declare-fun m!65913 () Bool)

(assert (=> b!69527 m!65913))

(assert (=> b!69527 m!64807))

(declare-fun m!65915 () Bool)

(assert (=> b!69527 m!65915))

(assert (=> b!69527 m!65913))

(assert (=> b!69527 m!65777))

(declare-fun m!65917 () Bool)

(assert (=> b!69527 m!65917))

(assert (=> b!69527 m!65777))

(assert (=> d!15133 m!64759))

(declare-fun m!65919 () Bool)

(assert (=> bm!5959 m!65919))

(assert (=> b!69541 m!65777))

(assert (=> b!69541 m!65777))

(assert (=> b!69541 m!65779))

(declare-fun m!65921 () Bool)

(assert (=> b!69528 m!65921))

(declare-fun m!65923 () Bool)

(assert (=> b!69528 m!65923))

(declare-fun m!65925 () Bool)

(assert (=> b!69528 m!65925))

(declare-fun m!65927 () Bool)

(assert (=> b!69528 m!65927))

(declare-fun m!65929 () Bool)

(assert (=> b!69528 m!65929))

(declare-fun m!65931 () Bool)

(assert (=> b!69528 m!65931))

(declare-fun m!65933 () Bool)

(assert (=> b!69528 m!65933))

(declare-fun m!65935 () Bool)

(assert (=> b!69528 m!65935))

(assert (=> b!69528 m!65929))

(declare-fun m!65937 () Bool)

(assert (=> b!69528 m!65937))

(assert (=> b!69528 m!65777))

(declare-fun m!65939 () Bool)

(assert (=> b!69528 m!65939))

(declare-fun m!65941 () Bool)

(assert (=> b!69528 m!65941))

(declare-fun m!65943 () Bool)

(assert (=> b!69528 m!65943))

(assert (=> b!69528 m!65931))

(declare-fun m!65945 () Bool)

(assert (=> b!69528 m!65945))

(assert (=> b!69528 m!65939))

(assert (=> b!69528 m!65923))

(declare-fun m!65947 () Bool)

(assert (=> b!69528 m!65947))

(assert (=> b!69528 m!65919))

(declare-fun m!65949 () Bool)

(assert (=> b!69528 m!65949))

(assert (=> d!15019 d!15133))

(declare-fun d!15135 () Bool)

(declare-fun res!37304 () Bool)

(declare-fun e!45521 () Bool)

(assert (=> d!15135 (=> res!37304 e!45521)))

(assert (=> d!15135 (= res!37304 (= (select (arr!1841 lt!30474) #b00000000000000000000000000000000) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(assert (=> d!15135 (= (arrayContainsKey!0 lt!30474 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) #b00000000000000000000000000000000) e!45521)))

(declare-fun b!69548 () Bool)

(declare-fun e!45522 () Bool)

(assert (=> b!69548 (= e!45521 e!45522)))

(declare-fun res!37305 () Bool)

(assert (=> b!69548 (=> (not res!37305) (not e!45522))))

(assert (=> b!69548 (= res!37305 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2077 lt!30474)))))

(declare-fun b!69549 () Bool)

(assert (=> b!69549 (= e!45522 (arrayContainsKey!0 lt!30474 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!15135 (not res!37304)) b!69548))

(assert (= (and b!69548 res!37305) b!69549))

(declare-fun m!65951 () Bool)

(assert (=> d!15135 m!65951))

(assert (=> b!69549 m!64407))

(declare-fun m!65953 () Bool)

(assert (=> b!69549 m!65953))

(assert (=> d!15019 d!15135))

(declare-fun b!69550 () Bool)

(declare-fun e!45524 () (_ BitVec 32))

(declare-fun call!5967 () (_ BitVec 32))

(assert (=> b!69550 (= e!45524 (bvadd #b00000000000000000000000000000001 call!5967))))

(declare-fun bm!5964 () Bool)

(assert (=> bm!5964 (= call!5967 (arrayCountValidKeys!0 lt!30473 (bvadd (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) #b00000000000000000000000000000001) (bvadd (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) #b00000000000000000000000000000001)))))

(declare-fun lt!30645 () (_ BitVec 32))

(declare-fun d!15137 () Bool)

(assert (=> d!15137 (and (bvsge lt!30645 #b00000000000000000000000000000000) (bvsle lt!30645 (bvsub (size!2077 lt!30473) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)))))))

(declare-fun e!45523 () (_ BitVec 32))

(assert (=> d!15137 (= lt!30645 e!45523)))

(declare-fun c!9962 () Bool)

(assert (=> d!15137 (= c!9962 (bvsge (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (bvadd (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) #b00000000000000000000000000000001)))))

(assert (=> d!15137 (and (bvsle (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (bvadd (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) #b00000000000000000000000000000001)) (bvsge (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) #b00000000000000000000000000000001) (size!2077 lt!30473)))))

(assert (=> d!15137 (= (arrayCountValidKeys!0 lt!30473 (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (bvadd (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) #b00000000000000000000000000000001)) lt!30645)))

(declare-fun b!69551 () Bool)

(assert (=> b!69551 (= e!45524 call!5967)))

(declare-fun b!69552 () Bool)

(assert (=> b!69552 (= e!45523 #b00000000000000000000000000000000)))

(declare-fun b!69553 () Bool)

(assert (=> b!69553 (= e!45523 e!45524)))

(declare-fun c!9961 () Bool)

(assert (=> b!69553 (= c!9961 (validKeyInArray!0 (select (arr!1841 lt!30473) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)))))))

(assert (= (and d!15137 c!9962) b!69552))

(assert (= (and d!15137 (not c!9962)) b!69553))

(assert (= (and b!69553 c!9961) b!69550))

(assert (= (and b!69553 (not c!9961)) b!69551))

(assert (= (or b!69550 b!69551) bm!5964))

(declare-fun m!65955 () Bool)

(assert (=> bm!5964 m!65955))

(assert (=> b!69553 m!65851))

(assert (=> b!69553 m!65851))

(assert (=> b!69553 m!65853))

(assert (=> d!15019 d!15137))

(declare-fun d!15139 () Bool)

(declare-fun e!45527 () Bool)

(assert (=> d!15139 e!45527))

(declare-fun res!37308 () Bool)

(assert (=> d!15139 (=> (not res!37308) (not e!45527))))

(assert (=> d!15139 (= res!37308 (and (bvsge (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) #b00000000000000000000000000000000) (bvslt (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (size!2077 (_keys!3812 newMap!16)))))))

(declare-fun lt!30648 () Unit!1919)

(declare-fun choose!41 (array!3855 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1470) Unit!1919)

(assert (=> d!15139 (= lt!30648 (choose!41 (_keys!3812 newMap!16) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) lt!30492 lt!30475))))

(assert (=> d!15139 (bvslt (size!2077 (_keys!3812 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!15139 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3812 newMap!16) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) lt!30492 lt!30475) lt!30648)))

(declare-fun b!69556 () Bool)

(assert (=> b!69556 (= e!45527 (arrayNoDuplicates!0 (array!3856 (store (arr!1841 (_keys!3812 newMap!16)) (ite c!9761 (index!3068 lt!30149) (index!3065 lt!30149)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) (size!2077 (_keys!3812 newMap!16))) lt!30492 lt!30475))))

(assert (= (and d!15139 res!37308) b!69556))

(assert (=> d!15139 m!64407))

(declare-fun m!65957 () Bool)

(assert (=> d!15139 m!65957))

(assert (=> b!69556 m!65495))

(assert (=> b!69556 m!65503))

(assert (=> d!15019 d!15139))

(assert (=> d!14863 d!14855))

(declare-fun d!15141 () Bool)

(declare-fun e!45530 () Bool)

(assert (=> d!15141 e!45530))

(declare-fun res!37313 () Bool)

(assert (=> d!15141 (=> (not res!37313) (not e!45530))))

(declare-fun lt!30651 () SeekEntryResult!234)

(assert (=> d!15141 (= res!37313 ((_ is Found!234) lt!30651))))

(assert (=> d!15141 (= lt!30651 (seekEntryOrOpen!0 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (_keys!3812 newMap!16) (mask!6113 newMap!16)))))

(assert (=> d!15141 true))

(declare-fun _$33!54 () Unit!1919)

(assert (=> d!15141 (= (choose!384 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (defaultEntry!2168 newMap!16)) _$33!54)))

(declare-fun b!69561 () Bool)

(declare-fun res!37314 () Bool)

(assert (=> b!69561 (=> (not res!37314) (not e!45530))))

(assert (=> b!69561 (= res!37314 (inRange!0 (index!3066 lt!30651) (mask!6113 newMap!16)))))

(declare-fun b!69562 () Bool)

(assert (=> b!69562 (= e!45530 (= (select (arr!1841 (_keys!3812 newMap!16)) (index!3066 lt!30651)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(assert (= (and d!15141 res!37313) b!69561))

(assert (= (and b!69561 res!37314) b!69562))

(assert (=> d!15141 m!64407))

(assert (=> d!15141 m!64695))

(declare-fun m!65959 () Bool)

(assert (=> b!69561 m!65959))

(declare-fun m!65961 () Bool)

(assert (=> b!69562 m!65961))

(assert (=> d!14863 d!15141))

(assert (=> d!14863 d!15083))

(declare-fun b!69565 () Bool)

(declare-fun e!45532 () Option!137)

(assert (=> b!69565 (= e!45532 (getValueByKey!131 (t!4972 (toList!719 lt!30334)) (_1!1062 (tuple2!2103 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!69564 () Bool)

(declare-fun e!45531 () Option!137)

(assert (=> b!69564 (= e!45531 e!45532)))

(declare-fun c!9964 () Bool)

(assert (=> b!69564 (= c!9964 (and ((_ is Cons!1465) (toList!719 lt!30334)) (not (= (_1!1062 (h!2050 (toList!719 lt!30334))) (_1!1062 (tuple2!2103 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))))

(declare-fun b!69566 () Bool)

(assert (=> b!69566 (= e!45532 None!135)))

(declare-fun b!69563 () Bool)

(assert (=> b!69563 (= e!45531 (Some!136 (_2!1062 (h!2050 (toList!719 lt!30334)))))))

(declare-fun d!15143 () Bool)

(declare-fun c!9963 () Bool)

(assert (=> d!15143 (= c!9963 (and ((_ is Cons!1465) (toList!719 lt!30334)) (= (_1!1062 (h!2050 (toList!719 lt!30334))) (_1!1062 (tuple2!2103 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> d!15143 (= (getValueByKey!131 (toList!719 lt!30334) (_1!1062 (tuple2!2103 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))) e!45531)))

(assert (= (and d!15143 c!9963) b!69563))

(assert (= (and d!15143 (not c!9963)) b!69564))

(assert (= (and b!69564 c!9964) b!69565))

(assert (= (and b!69564 (not c!9964)) b!69566))

(declare-fun m!65963 () Bool)

(assert (=> b!69565 m!65963))

(assert (=> b!69160 d!15143))

(declare-fun d!15145 () Bool)

(assert (=> d!15145 (= (validKeyInArray!0 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!69114 d!15145))

(declare-fun b!69567 () Bool)

(declare-fun e!45534 () (_ BitVec 32))

(declare-fun call!5968 () (_ BitVec 32))

(assert (=> b!69567 (= e!45534 (bvadd #b00000000000000000000000000000001 call!5968))))

(declare-fun bm!5965 () Bool)

(assert (=> bm!5965 (= call!5968 (arrayCountValidKeys!0 (_keys!3812 (_2!1061 lt!30148)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2077 (_keys!3812 (_2!1061 lt!30148)))))))

(declare-fun d!15147 () Bool)

(declare-fun lt!30652 () (_ BitVec 32))

(assert (=> d!15147 (and (bvsge lt!30652 #b00000000000000000000000000000000) (bvsle lt!30652 (bvsub (size!2077 (_keys!3812 (_2!1061 lt!30148))) #b00000000000000000000000000000000)))))

(declare-fun e!45533 () (_ BitVec 32))

(assert (=> d!15147 (= lt!30652 e!45533)))

(declare-fun c!9966 () Bool)

(assert (=> d!15147 (= c!9966 (bvsge #b00000000000000000000000000000000 (size!2077 (_keys!3812 (_2!1061 lt!30148)))))))

(assert (=> d!15147 (and (bvsle #b00000000000000000000000000000000 (size!2077 (_keys!3812 (_2!1061 lt!30148)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2077 (_keys!3812 (_2!1061 lt!30148))) (size!2077 (_keys!3812 (_2!1061 lt!30148)))))))

(assert (=> d!15147 (= (arrayCountValidKeys!0 (_keys!3812 (_2!1061 lt!30148)) #b00000000000000000000000000000000 (size!2077 (_keys!3812 (_2!1061 lt!30148)))) lt!30652)))

(declare-fun b!69568 () Bool)

(assert (=> b!69568 (= e!45534 call!5968)))

(declare-fun b!69569 () Bool)

(assert (=> b!69569 (= e!45533 #b00000000000000000000000000000000)))

(declare-fun b!69570 () Bool)

(assert (=> b!69570 (= e!45533 e!45534)))

(declare-fun c!9965 () Bool)

(assert (=> b!69570 (= c!9965 (validKeyInArray!0 (select (arr!1841 (_keys!3812 (_2!1061 lt!30148))) #b00000000000000000000000000000000)))))

(assert (= (and d!15147 c!9966) b!69569))

(assert (= (and d!15147 (not c!9966)) b!69570))

(assert (= (and b!69570 c!9965) b!69567))

(assert (= (and b!69570 (not c!9965)) b!69568))

(assert (= (or b!69567 b!69568) bm!5965))

(declare-fun m!65965 () Bool)

(assert (=> bm!5965 m!65965))

(declare-fun m!65967 () Bool)

(assert (=> b!69570 m!65967))

(assert (=> b!69570 m!65967))

(declare-fun m!65969 () Bool)

(assert (=> b!69570 m!65969))

(assert (=> b!69143 d!15147))

(declare-fun d!15149 () Bool)

(declare-fun lt!30653 () Bool)

(assert (=> d!15149 (= lt!30653 (select (content!73 lt!30050) (tuple2!2103 (_1!1062 lt!29893) (_2!1062 lt!29893))))))

(declare-fun e!45536 () Bool)

(assert (=> d!15149 (= lt!30653 e!45536)))

(declare-fun res!37315 () Bool)

(assert (=> d!15149 (=> (not res!37315) (not e!45536))))

(assert (=> d!15149 (= res!37315 ((_ is Cons!1465) lt!30050))))

(assert (=> d!15149 (= (contains!716 lt!30050 (tuple2!2103 (_1!1062 lt!29893) (_2!1062 lt!29893))) lt!30653)))

(declare-fun b!69571 () Bool)

(declare-fun e!45535 () Bool)

(assert (=> b!69571 (= e!45536 e!45535)))

(declare-fun res!37316 () Bool)

(assert (=> b!69571 (=> res!37316 e!45535)))

(assert (=> b!69571 (= res!37316 (= (h!2050 lt!30050) (tuple2!2103 (_1!1062 lt!29893) (_2!1062 lt!29893))))))

(declare-fun b!69572 () Bool)

(assert (=> b!69572 (= e!45535 (contains!716 (t!4972 lt!30050) (tuple2!2103 (_1!1062 lt!29893) (_2!1062 lt!29893))))))

(assert (= (and d!15149 res!37315) b!69571))

(assert (= (and b!69571 (not res!37316)) b!69572))

(declare-fun m!65971 () Bool)

(assert (=> d!15149 m!65971))

(declare-fun m!65973 () Bool)

(assert (=> d!15149 m!65973))

(declare-fun m!65975 () Bool)

(assert (=> b!69572 m!65975))

(assert (=> b!69046 d!15149))

(declare-fun d!15151 () Bool)

(declare-fun lt!30654 () Bool)

(assert (=> d!15151 (= lt!30654 (select (content!73 (t!4972 (toList!719 lt!30049))) lt!29893))))

(declare-fun e!45538 () Bool)

(assert (=> d!15151 (= lt!30654 e!45538)))

(declare-fun res!37317 () Bool)

(assert (=> d!15151 (=> (not res!37317) (not e!45538))))

(assert (=> d!15151 (= res!37317 ((_ is Cons!1465) (t!4972 (toList!719 lt!30049))))))

(assert (=> d!15151 (= (contains!716 (t!4972 (toList!719 lt!30049)) lt!29893) lt!30654)))

(declare-fun b!69573 () Bool)

(declare-fun e!45537 () Bool)

(assert (=> b!69573 (= e!45538 e!45537)))

(declare-fun res!37318 () Bool)

(assert (=> b!69573 (=> res!37318 e!45537)))

(assert (=> b!69573 (= res!37318 (= (h!2050 (t!4972 (toList!719 lt!30049))) lt!29893))))

(declare-fun b!69574 () Bool)

(assert (=> b!69574 (= e!45537 (contains!716 (t!4972 (t!4972 (toList!719 lt!30049))) lt!29893))))

(assert (= (and d!15151 res!37317) b!69573))

(assert (= (and b!69573 (not res!37318)) b!69574))

(declare-fun m!65977 () Bool)

(assert (=> d!15151 m!65977))

(declare-fun m!65979 () Bool)

(assert (=> d!15151 m!65979))

(declare-fun m!65981 () Bool)

(assert (=> b!69574 m!65981))

(assert (=> b!68868 d!15151))

(declare-fun d!15153 () Bool)

(declare-fun res!37319 () Bool)

(declare-fun e!45539 () Bool)

(assert (=> d!15153 (=> res!37319 e!45539)))

(assert (=> d!15153 (= res!37319 (= (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(assert (=> d!15153 (= (arrayContainsKey!0 (_keys!3812 (v!2494 (underlying!253 thiss!992))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!45539)))

(declare-fun b!69575 () Bool)

(declare-fun e!45540 () Bool)

(assert (=> b!69575 (= e!45539 e!45540)))

(declare-fun res!37320 () Bool)

(assert (=> b!69575 (=> (not res!37320) (not e!45540))))

(assert (=> b!69575 (= res!37320 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2077 (_keys!3812 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun b!69576 () Bool)

(assert (=> b!69576 (= e!45540 (arrayContainsKey!0 (_keys!3812 (v!2494 (underlying!253 thiss!992))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!15153 (not res!37319)) b!69575))

(assert (= (and b!69575 res!37320) b!69576))

(declare-fun m!65983 () Bool)

(assert (=> d!15153 m!65983))

(assert (=> b!69576 m!64407))

(declare-fun m!65985 () Bool)

(assert (=> b!69576 m!65985))

(assert (=> b!68910 d!15153))

(declare-fun d!15155 () Bool)

(declare-fun res!37321 () Bool)

(declare-fun e!45541 () Bool)

(assert (=> d!15155 (=> res!37321 e!45541)))

(assert (=> d!15155 (= res!37321 (and ((_ is Cons!1465) lt!30353) (= (_1!1062 (h!2050 lt!30353)) (_1!1062 lt!29892))))))

(assert (=> d!15155 (= (containsKey!135 lt!30353 (_1!1062 lt!29892)) e!45541)))

(declare-fun b!69577 () Bool)

(declare-fun e!45542 () Bool)

(assert (=> b!69577 (= e!45541 e!45542)))

(declare-fun res!37322 () Bool)

(assert (=> b!69577 (=> (not res!37322) (not e!45542))))

(assert (=> b!69577 (= res!37322 (and (or (not ((_ is Cons!1465) lt!30353)) (bvsle (_1!1062 (h!2050 lt!30353)) (_1!1062 lt!29892))) ((_ is Cons!1465) lt!30353) (bvslt (_1!1062 (h!2050 lt!30353)) (_1!1062 lt!29892))))))

(declare-fun b!69578 () Bool)

(assert (=> b!69578 (= e!45542 (containsKey!135 (t!4972 lt!30353) (_1!1062 lt!29892)))))

(assert (= (and d!15155 (not res!37321)) b!69577))

(assert (= (and b!69577 res!37322) b!69578))

(declare-fun m!65987 () Bool)

(assert (=> b!69578 m!65987))

(assert (=> b!69185 d!15155))

(declare-fun e!45544 () Option!137)

(declare-fun b!69581 () Bool)

(assert (=> b!69581 (= e!45544 (getValueByKey!131 (t!4972 (t!4972 (toList!719 lt!29895))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(declare-fun b!69580 () Bool)

(declare-fun e!45543 () Option!137)

(assert (=> b!69580 (= e!45543 e!45544)))

(declare-fun c!9968 () Bool)

(assert (=> b!69580 (= c!9968 (and ((_ is Cons!1465) (t!4972 (toList!719 lt!29895))) (not (= (_1!1062 (h!2050 (t!4972 (toList!719 lt!29895)))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))))

(declare-fun b!69582 () Bool)

(assert (=> b!69582 (= e!45544 None!135)))

(declare-fun b!69579 () Bool)

(assert (=> b!69579 (= e!45543 (Some!136 (_2!1062 (h!2050 (t!4972 (toList!719 lt!29895))))))))

(declare-fun c!9967 () Bool)

(declare-fun d!15157 () Bool)

(assert (=> d!15157 (= c!9967 (and ((_ is Cons!1465) (t!4972 (toList!719 lt!29895))) (= (_1!1062 (h!2050 (t!4972 (toList!719 lt!29895)))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355))))))

(assert (=> d!15157 (= (getValueByKey!131 (t!4972 (toList!719 lt!29895)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) e!45543)))

(assert (= (and d!15157 c!9967) b!69579))

(assert (= (and d!15157 (not c!9967)) b!69580))

(assert (= (and b!69580 c!9968) b!69581))

(assert (= (and b!69580 (not c!9968)) b!69582))

(assert (=> b!69581 m!64407))

(declare-fun m!65989 () Bool)

(assert (=> b!69581 m!65989))

(assert (=> b!69025 d!15157))

(assert (=> d!14993 d!14991))

(declare-fun d!15159 () Bool)

(assert (=> d!15159 (= (getValueByKey!131 lt!30042 (_1!1062 lt!29892)) (Some!136 (_2!1062 lt!29892)))))

(assert (=> d!15159 true))

(declare-fun _$22!373 () Unit!1919)

(assert (=> d!15159 (= (choose!386 lt!30042 (_1!1062 lt!29892) (_2!1062 lt!29892)) _$22!373)))

(declare-fun bs!2988 () Bool)

(assert (= bs!2988 d!15159))

(assert (=> bs!2988 m!64605))

(assert (=> d!14993 d!15159))

(declare-fun d!15161 () Bool)

(declare-fun res!37327 () Bool)

(declare-fun e!45549 () Bool)

(assert (=> d!15161 (=> res!37327 e!45549)))

(assert (=> d!15161 (= res!37327 (or ((_ is Nil!1466) lt!30042) ((_ is Nil!1466) (t!4972 lt!30042))))))

(assert (=> d!15161 (= (isStrictlySorted!290 lt!30042) e!45549)))

(declare-fun b!69587 () Bool)

(declare-fun e!45550 () Bool)

(assert (=> b!69587 (= e!45549 e!45550)))

(declare-fun res!37328 () Bool)

(assert (=> b!69587 (=> (not res!37328) (not e!45550))))

(assert (=> b!69587 (= res!37328 (bvslt (_1!1062 (h!2050 lt!30042)) (_1!1062 (h!2050 (t!4972 lt!30042)))))))

(declare-fun b!69588 () Bool)

(assert (=> b!69588 (= e!45550 (isStrictlySorted!290 (t!4972 lt!30042)))))

(assert (= (and d!15161 (not res!37327)) b!69587))

(assert (= (and b!69587 res!37328) b!69588))

(declare-fun m!65991 () Bool)

(assert (=> b!69588 m!65991))

(assert (=> d!14993 d!15161))

(declare-fun d!15163 () Bool)

(assert (=> d!15163 (= (inRange!0 (ite c!9888 (index!3066 lt!30489) (ite c!9886 (index!3065 lt!30490) (index!3068 lt!30490))) (mask!6113 newMap!16)) (and (bvsge (ite c!9888 (index!3066 lt!30489) (ite c!9886 (index!3065 lt!30490) (index!3068 lt!30490))) #b00000000000000000000000000000000) (bvslt (ite c!9888 (index!3066 lt!30489) (ite c!9886 (index!3065 lt!30490) (index!3068 lt!30490))) (bvadd (mask!6113 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!5927 d!15163))

(declare-fun b!69589 () Bool)

(declare-fun e!45557 () Bool)

(declare-fun lt!30672 () ListLongMap!1407)

(assert (=> b!69589 (= e!45557 (= (apply!73 lt!30672 (select (arr!1841 (_keys!3812 (_2!1061 lt!30148))) #b00000000000000000000000000000000)) (get!1124 (select (arr!1842 (_values!2151 (_2!1061 lt!30148))) #b00000000000000000000000000000000) (dynLambda!322 (defaultEntry!2168 (_2!1061 lt!30148)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!69589 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2078 (_values!2151 (_2!1061 lt!30148)))))))

(assert (=> b!69589 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2077 (_keys!3812 (_2!1061 lt!30148)))))))

(declare-fun b!69590 () Bool)

(declare-fun e!45563 () Unit!1919)

(declare-fun lt!30671 () Unit!1919)

(assert (=> b!69590 (= e!45563 lt!30671)))

(declare-fun lt!30664 () ListLongMap!1407)

(assert (=> b!69590 (= lt!30664 (getCurrentListMapNoExtraKeys!55 (_keys!3812 (_2!1061 lt!30148)) (_values!2151 (_2!1061 lt!30148)) (mask!6113 (_2!1061 lt!30148)) (extraKeys!2035 (_2!1061 lt!30148)) (zeroValue!2074 (_2!1061 lt!30148)) (minValue!2074 (_2!1061 lt!30148)) #b00000000000000000000000000000000 (defaultEntry!2168 (_2!1061 lt!30148))))))

(declare-fun lt!30667 () (_ BitVec 64))

(assert (=> b!69590 (= lt!30667 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30655 () (_ BitVec 64))

(assert (=> b!69590 (= lt!30655 (select (arr!1841 (_keys!3812 (_2!1061 lt!30148))) #b00000000000000000000000000000000))))

(declare-fun lt!30669 () Unit!1919)

(assert (=> b!69590 (= lt!30669 (addStillContains!49 lt!30664 lt!30667 (zeroValue!2074 (_2!1061 lt!30148)) lt!30655))))

(assert (=> b!69590 (contains!714 (+!90 lt!30664 (tuple2!2103 lt!30667 (zeroValue!2074 (_2!1061 lt!30148)))) lt!30655)))

(declare-fun lt!30665 () Unit!1919)

(assert (=> b!69590 (= lt!30665 lt!30669)))

(declare-fun lt!30657 () ListLongMap!1407)

(assert (=> b!69590 (= lt!30657 (getCurrentListMapNoExtraKeys!55 (_keys!3812 (_2!1061 lt!30148)) (_values!2151 (_2!1061 lt!30148)) (mask!6113 (_2!1061 lt!30148)) (extraKeys!2035 (_2!1061 lt!30148)) (zeroValue!2074 (_2!1061 lt!30148)) (minValue!2074 (_2!1061 lt!30148)) #b00000000000000000000000000000000 (defaultEntry!2168 (_2!1061 lt!30148))))))

(declare-fun lt!30668 () (_ BitVec 64))

(assert (=> b!69590 (= lt!30668 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30659 () (_ BitVec 64))

(assert (=> b!69590 (= lt!30659 (select (arr!1841 (_keys!3812 (_2!1061 lt!30148))) #b00000000000000000000000000000000))))

(declare-fun lt!30656 () Unit!1919)

(assert (=> b!69590 (= lt!30656 (addApplyDifferent!49 lt!30657 lt!30668 (minValue!2074 (_2!1061 lt!30148)) lt!30659))))

(assert (=> b!69590 (= (apply!73 (+!90 lt!30657 (tuple2!2103 lt!30668 (minValue!2074 (_2!1061 lt!30148)))) lt!30659) (apply!73 lt!30657 lt!30659))))

(declare-fun lt!30674 () Unit!1919)

(assert (=> b!69590 (= lt!30674 lt!30656)))

(declare-fun lt!30663 () ListLongMap!1407)

(assert (=> b!69590 (= lt!30663 (getCurrentListMapNoExtraKeys!55 (_keys!3812 (_2!1061 lt!30148)) (_values!2151 (_2!1061 lt!30148)) (mask!6113 (_2!1061 lt!30148)) (extraKeys!2035 (_2!1061 lt!30148)) (zeroValue!2074 (_2!1061 lt!30148)) (minValue!2074 (_2!1061 lt!30148)) #b00000000000000000000000000000000 (defaultEntry!2168 (_2!1061 lt!30148))))))

(declare-fun lt!30658 () (_ BitVec 64))

(assert (=> b!69590 (= lt!30658 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30666 () (_ BitVec 64))

(assert (=> b!69590 (= lt!30666 (select (arr!1841 (_keys!3812 (_2!1061 lt!30148))) #b00000000000000000000000000000000))))

(declare-fun lt!30676 () Unit!1919)

(assert (=> b!69590 (= lt!30676 (addApplyDifferent!49 lt!30663 lt!30658 (zeroValue!2074 (_2!1061 lt!30148)) lt!30666))))

(assert (=> b!69590 (= (apply!73 (+!90 lt!30663 (tuple2!2103 lt!30658 (zeroValue!2074 (_2!1061 lt!30148)))) lt!30666) (apply!73 lt!30663 lt!30666))))

(declare-fun lt!30673 () Unit!1919)

(assert (=> b!69590 (= lt!30673 lt!30676)))

(declare-fun lt!30660 () ListLongMap!1407)

(assert (=> b!69590 (= lt!30660 (getCurrentListMapNoExtraKeys!55 (_keys!3812 (_2!1061 lt!30148)) (_values!2151 (_2!1061 lt!30148)) (mask!6113 (_2!1061 lt!30148)) (extraKeys!2035 (_2!1061 lt!30148)) (zeroValue!2074 (_2!1061 lt!30148)) (minValue!2074 (_2!1061 lt!30148)) #b00000000000000000000000000000000 (defaultEntry!2168 (_2!1061 lt!30148))))))

(declare-fun lt!30675 () (_ BitVec 64))

(assert (=> b!69590 (= lt!30675 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30670 () (_ BitVec 64))

(assert (=> b!69590 (= lt!30670 (select (arr!1841 (_keys!3812 (_2!1061 lt!30148))) #b00000000000000000000000000000000))))

(assert (=> b!69590 (= lt!30671 (addApplyDifferent!49 lt!30660 lt!30675 (minValue!2074 (_2!1061 lt!30148)) lt!30670))))

(assert (=> b!69590 (= (apply!73 (+!90 lt!30660 (tuple2!2103 lt!30675 (minValue!2074 (_2!1061 lt!30148)))) lt!30670) (apply!73 lt!30660 lt!30670))))

(declare-fun b!69591 () Bool)

(declare-fun e!45556 () Bool)

(declare-fun e!45553 () Bool)

(assert (=> b!69591 (= e!45556 e!45553)))

(declare-fun res!37335 () Bool)

(declare-fun call!5970 () Bool)

(assert (=> b!69591 (= res!37335 call!5970)))

(assert (=> b!69591 (=> (not res!37335) (not e!45553))))

(declare-fun d!15165 () Bool)

(declare-fun e!45561 () Bool)

(assert (=> d!15165 e!45561))

(declare-fun res!37331 () Bool)

(assert (=> d!15165 (=> (not res!37331) (not e!45561))))

(assert (=> d!15165 (= res!37331 (or (bvsge #b00000000000000000000000000000000 (size!2077 (_keys!3812 (_2!1061 lt!30148)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2077 (_keys!3812 (_2!1061 lt!30148)))))))))

(declare-fun lt!30661 () ListLongMap!1407)

(assert (=> d!15165 (= lt!30672 lt!30661)))

(declare-fun lt!30662 () Unit!1919)

(assert (=> d!15165 (= lt!30662 e!45563)))

(declare-fun c!9974 () Bool)

(declare-fun e!45552 () Bool)

(assert (=> d!15165 (= c!9974 e!45552)))

(declare-fun res!37332 () Bool)

(assert (=> d!15165 (=> (not res!37332) (not e!45552))))

(assert (=> d!15165 (= res!37332 (bvslt #b00000000000000000000000000000000 (size!2077 (_keys!3812 (_2!1061 lt!30148)))))))

(declare-fun e!45562 () ListLongMap!1407)

(assert (=> d!15165 (= lt!30661 e!45562)))

(declare-fun c!9970 () Bool)

(assert (=> d!15165 (= c!9970 (and (not (= (bvand (extraKeys!2035 (_2!1061 lt!30148)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2035 (_2!1061 lt!30148)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!15165 (validMask!0 (mask!6113 (_2!1061 lt!30148)))))

(assert (=> d!15165 (= (getCurrentListMap!417 (_keys!3812 (_2!1061 lt!30148)) (_values!2151 (_2!1061 lt!30148)) (mask!6113 (_2!1061 lt!30148)) (extraKeys!2035 (_2!1061 lt!30148)) (zeroValue!2074 (_2!1061 lt!30148)) (minValue!2074 (_2!1061 lt!30148)) #b00000000000000000000000000000000 (defaultEntry!2168 (_2!1061 lt!30148))) lt!30672)))

(declare-fun bm!5966 () Bool)

(assert (=> bm!5966 (= call!5970 (contains!714 lt!30672 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun call!5974 () ListLongMap!1407)

(declare-fun call!5969 () ListLongMap!1407)

(declare-fun call!5975 () ListLongMap!1407)

(declare-fun c!9973 () Bool)

(declare-fun bm!5967 () Bool)

(declare-fun call!5971 () ListLongMap!1407)

(assert (=> bm!5967 (= call!5974 (+!90 (ite c!9970 call!5975 (ite c!9973 call!5969 call!5971)) (ite (or c!9970 c!9973) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (_2!1061 lt!30148))) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (_2!1061 lt!30148))))))))

(declare-fun bm!5968 () Bool)

(assert (=> bm!5968 (= call!5975 (getCurrentListMapNoExtraKeys!55 (_keys!3812 (_2!1061 lt!30148)) (_values!2151 (_2!1061 lt!30148)) (mask!6113 (_2!1061 lt!30148)) (extraKeys!2035 (_2!1061 lt!30148)) (zeroValue!2074 (_2!1061 lt!30148)) (minValue!2074 (_2!1061 lt!30148)) #b00000000000000000000000000000000 (defaultEntry!2168 (_2!1061 lt!30148))))))

(declare-fun bm!5969 () Bool)

(assert (=> bm!5969 (= call!5969 call!5975)))

(declare-fun b!69592 () Bool)

(declare-fun e!45559 () ListLongMap!1407)

(assert (=> b!69592 (= e!45559 call!5971)))

(declare-fun b!69593 () Bool)

(declare-fun e!45551 () Bool)

(declare-fun e!45554 () Bool)

(assert (=> b!69593 (= e!45551 e!45554)))

(declare-fun res!37330 () Bool)

(declare-fun call!5973 () Bool)

(assert (=> b!69593 (= res!37330 call!5973)))

(assert (=> b!69593 (=> (not res!37330) (not e!45554))))

(declare-fun b!69594 () Bool)

(declare-fun Unit!1958 () Unit!1919)

(assert (=> b!69594 (= e!45563 Unit!1958)))

(declare-fun b!69595 () Bool)

(assert (=> b!69595 (= e!45552 (validKeyInArray!0 (select (arr!1841 (_keys!3812 (_2!1061 lt!30148))) #b00000000000000000000000000000000)))))

(declare-fun b!69596 () Bool)

(assert (=> b!69596 (= e!45554 (= (apply!73 lt!30672 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2074 (_2!1061 lt!30148))))))

(declare-fun b!69597 () Bool)

(assert (=> b!69597 (= e!45553 (= (apply!73 lt!30672 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2074 (_2!1061 lt!30148))))))

(declare-fun b!69598 () Bool)

(declare-fun res!37333 () Bool)

(assert (=> b!69598 (=> (not res!37333) (not e!45561))))

(assert (=> b!69598 (= res!37333 e!45551)))

(declare-fun c!9971 () Bool)

(assert (=> b!69598 (= c!9971 (not (= (bvand (extraKeys!2035 (_2!1061 lt!30148)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!69599 () Bool)

(declare-fun e!45555 () ListLongMap!1407)

(assert (=> b!69599 (= e!45562 e!45555)))

(assert (=> b!69599 (= c!9973 (and (not (= (bvand (extraKeys!2035 (_2!1061 lt!30148)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2035 (_2!1061 lt!30148)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!69600 () Bool)

(assert (=> b!69600 (= e!45561 e!45556)))

(declare-fun c!9969 () Bool)

(assert (=> b!69600 (= c!9969 (not (= (bvand (extraKeys!2035 (_2!1061 lt!30148)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!69601 () Bool)

(assert (=> b!69601 (= e!45562 (+!90 call!5974 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (_2!1061 lt!30148)))))))

(declare-fun b!69602 () Bool)

(declare-fun c!9972 () Bool)

(assert (=> b!69602 (= c!9972 (and (not (= (bvand (extraKeys!2035 (_2!1061 lt!30148)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2035 (_2!1061 lt!30148)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!69602 (= e!45555 e!45559)))

(declare-fun b!69603 () Bool)

(declare-fun e!45560 () Bool)

(assert (=> b!69603 (= e!45560 (validKeyInArray!0 (select (arr!1841 (_keys!3812 (_2!1061 lt!30148))) #b00000000000000000000000000000000)))))

(declare-fun b!69604 () Bool)

(assert (=> b!69604 (= e!45556 (not call!5970))))

(declare-fun b!69605 () Bool)

(declare-fun res!37336 () Bool)

(assert (=> b!69605 (=> (not res!37336) (not e!45561))))

(declare-fun e!45558 () Bool)

(assert (=> b!69605 (= res!37336 e!45558)))

(declare-fun res!37334 () Bool)

(assert (=> b!69605 (=> res!37334 e!45558)))

(assert (=> b!69605 (= res!37334 (not e!45560))))

(declare-fun res!37329 () Bool)

(assert (=> b!69605 (=> (not res!37329) (not e!45560))))

(assert (=> b!69605 (= res!37329 (bvslt #b00000000000000000000000000000000 (size!2077 (_keys!3812 (_2!1061 lt!30148)))))))

(declare-fun b!69606 () Bool)

(declare-fun call!5972 () ListLongMap!1407)

(assert (=> b!69606 (= e!45559 call!5972)))

(declare-fun bm!5970 () Bool)

(assert (=> bm!5970 (= call!5972 call!5974)))

(declare-fun bm!5971 () Bool)

(assert (=> bm!5971 (= call!5971 call!5969)))

(declare-fun b!69607 () Bool)

(assert (=> b!69607 (= e!45555 call!5972)))

(declare-fun b!69608 () Bool)

(assert (=> b!69608 (= e!45558 e!45557)))

(declare-fun res!37337 () Bool)

(assert (=> b!69608 (=> (not res!37337) (not e!45557))))

(assert (=> b!69608 (= res!37337 (contains!714 lt!30672 (select (arr!1841 (_keys!3812 (_2!1061 lt!30148))) #b00000000000000000000000000000000)))))

(assert (=> b!69608 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2077 (_keys!3812 (_2!1061 lt!30148)))))))

(declare-fun bm!5972 () Bool)

(assert (=> bm!5972 (= call!5973 (contains!714 lt!30672 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69609 () Bool)

(assert (=> b!69609 (= e!45551 (not call!5973))))

(assert (= (and d!15165 c!9970) b!69601))

(assert (= (and d!15165 (not c!9970)) b!69599))

(assert (= (and b!69599 c!9973) b!69607))

(assert (= (and b!69599 (not c!9973)) b!69602))

(assert (= (and b!69602 c!9972) b!69606))

(assert (= (and b!69602 (not c!9972)) b!69592))

(assert (= (or b!69606 b!69592) bm!5971))

(assert (= (or b!69607 bm!5971) bm!5969))

(assert (= (or b!69607 b!69606) bm!5970))

(assert (= (or b!69601 bm!5969) bm!5968))

(assert (= (or b!69601 bm!5970) bm!5967))

(assert (= (and d!15165 res!37332) b!69595))

(assert (= (and d!15165 c!9974) b!69590))

(assert (= (and d!15165 (not c!9974)) b!69594))

(assert (= (and d!15165 res!37331) b!69605))

(assert (= (and b!69605 res!37329) b!69603))

(assert (= (and b!69605 (not res!37334)) b!69608))

(assert (= (and b!69608 res!37337) b!69589))

(assert (= (and b!69605 res!37336) b!69598))

(assert (= (and b!69598 c!9971) b!69593))

(assert (= (and b!69598 (not c!9971)) b!69609))

(assert (= (and b!69593 res!37330) b!69596))

(assert (= (or b!69593 b!69609) bm!5972))

(assert (= (and b!69598 res!37333) b!69600))

(assert (= (and b!69600 c!9969) b!69591))

(assert (= (and b!69600 (not c!9969)) b!69604))

(assert (= (and b!69591 res!37335) b!69597))

(assert (= (or b!69591 b!69604) bm!5966))

(declare-fun b_lambda!3117 () Bool)

(assert (=> (not b_lambda!3117) (not b!69589)))

(declare-fun tb!1489 () Bool)

(declare-fun t!4985 () Bool)

(assert (=> (and b!68478 (= (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) (defaultEntry!2168 (_2!1061 lt!30148))) t!4985) tb!1489))

(declare-fun result!2623 () Bool)

(assert (=> tb!1489 (= result!2623 tp_is_empty!2457)))

(assert (=> b!69589 t!4985))

(declare-fun b_and!4279 () Bool)

(assert (= b_and!4275 (and (=> t!4985 result!2623) b_and!4279)))

(declare-fun t!4987 () Bool)

(declare-fun tb!1491 () Bool)

(assert (=> (and b!68465 (= (defaultEntry!2168 newMap!16) (defaultEntry!2168 (_2!1061 lt!30148))) t!4987) tb!1491))

(declare-fun result!2625 () Bool)

(assert (= result!2625 result!2623))

(assert (=> b!69589 t!4987))

(declare-fun b_and!4281 () Bool)

(assert (= b_and!4277 (and (=> t!4987 result!2625) b_and!4281)))

(declare-fun m!65993 () Bool)

(assert (=> bm!5972 m!65993))

(declare-fun m!65995 () Bool)

(assert (=> bm!5967 m!65995))

(declare-fun m!65997 () Bool)

(assert (=> b!69601 m!65997))

(declare-fun m!65999 () Bool)

(assert (=> bm!5966 m!65999))

(assert (=> b!69595 m!65967))

(assert (=> b!69595 m!65967))

(assert (=> b!69595 m!65969))

(assert (=> b!69608 m!65967))

(assert (=> b!69608 m!65967))

(declare-fun m!66001 () Bool)

(assert (=> b!69608 m!66001))

(declare-fun m!66003 () Bool)

(assert (=> b!69596 m!66003))

(declare-fun m!66005 () Bool)

(assert (=> b!69597 m!66005))

(declare-fun m!66007 () Bool)

(assert (=> b!69589 m!66007))

(declare-fun m!66009 () Bool)

(assert (=> b!69589 m!66009))

(assert (=> b!69589 m!66007))

(declare-fun m!66011 () Bool)

(assert (=> b!69589 m!66011))

(assert (=> b!69589 m!66009))

(assert (=> b!69589 m!65967))

(declare-fun m!66013 () Bool)

(assert (=> b!69589 m!66013))

(assert (=> b!69589 m!65967))

(declare-fun m!66015 () Bool)

(assert (=> d!15165 m!66015))

(declare-fun m!66017 () Bool)

(assert (=> bm!5968 m!66017))

(assert (=> b!69603 m!65967))

(assert (=> b!69603 m!65967))

(assert (=> b!69603 m!65969))

(declare-fun m!66019 () Bool)

(assert (=> b!69590 m!66019))

(declare-fun m!66021 () Bool)

(assert (=> b!69590 m!66021))

(declare-fun m!66023 () Bool)

(assert (=> b!69590 m!66023))

(declare-fun m!66025 () Bool)

(assert (=> b!69590 m!66025))

(declare-fun m!66027 () Bool)

(assert (=> b!69590 m!66027))

(declare-fun m!66029 () Bool)

(assert (=> b!69590 m!66029))

(declare-fun m!66031 () Bool)

(assert (=> b!69590 m!66031))

(declare-fun m!66033 () Bool)

(assert (=> b!69590 m!66033))

(assert (=> b!69590 m!66027))

(declare-fun m!66035 () Bool)

(assert (=> b!69590 m!66035))

(assert (=> b!69590 m!65967))

(declare-fun m!66037 () Bool)

(assert (=> b!69590 m!66037))

(declare-fun m!66039 () Bool)

(assert (=> b!69590 m!66039))

(declare-fun m!66041 () Bool)

(assert (=> b!69590 m!66041))

(assert (=> b!69590 m!66029))

(declare-fun m!66043 () Bool)

(assert (=> b!69590 m!66043))

(assert (=> b!69590 m!66037))

(assert (=> b!69590 m!66021))

(declare-fun m!66045 () Bool)

(assert (=> b!69590 m!66045))

(assert (=> b!69590 m!66017))

(declare-fun m!66047 () Bool)

(assert (=> b!69590 m!66047))

(assert (=> d!14885 d!15165))

(declare-fun b!69612 () Bool)

(declare-fun e!45565 () Option!137)

(assert (=> b!69612 (= e!45565 (getValueByKey!131 (t!4972 (toList!719 lt!30222)) (_1!1062 (ite (or c!9699 c!9702) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(declare-fun b!69611 () Bool)

(declare-fun e!45564 () Option!137)

(assert (=> b!69611 (= e!45564 e!45565)))

(declare-fun c!9976 () Bool)

(assert (=> b!69611 (= c!9976 (and ((_ is Cons!1465) (toList!719 lt!30222)) (not (= (_1!1062 (h!2050 (toList!719 lt!30222))) (_1!1062 (ite (or c!9699 c!9702) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))))))))

(declare-fun b!69613 () Bool)

(assert (=> b!69613 (= e!45565 None!135)))

(declare-fun b!69610 () Bool)

(assert (=> b!69610 (= e!45564 (Some!136 (_2!1062 (h!2050 (toList!719 lt!30222)))))))

(declare-fun c!9975 () Bool)

(declare-fun d!15167 () Bool)

(assert (=> d!15167 (= c!9975 (and ((_ is Cons!1465) (toList!719 lt!30222)) (= (_1!1062 (h!2050 (toList!719 lt!30222))) (_1!1062 (ite (or c!9699 c!9702) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))))

(assert (=> d!15167 (= (getValueByKey!131 (toList!719 lt!30222) (_1!1062 (ite (or c!9699 c!9702) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))) e!45564)))

(assert (= (and d!15167 c!9975) b!69610))

(assert (= (and d!15167 (not c!9975)) b!69611))

(assert (= (and b!69611 c!9976) b!69612))

(assert (= (and b!69611 (not c!9976)) b!69613))

(declare-fun m!66049 () Bool)

(assert (=> b!69612 m!66049))

(assert (=> b!68964 d!15167))

(declare-fun lt!30682 () ListLongMap!1407)

(declare-fun b!69614 () Bool)

(declare-fun e!45568 () Bool)

(assert (=> b!69614 (= e!45568 (= lt!30682 (getCurrentListMapNoExtraKeys!55 (_keys!3812 newMap!16) (ite c!9754 (_values!2151 newMap!16) (array!3858 (store (arr!1842 (_values!2151 newMap!16)) (index!3066 lt!30149) (ValueCellFull!885 lt!29897)) (size!2078 (_values!2151 newMap!16)))) (mask!6113 newMap!16) (ite (and c!9754 c!9756) lt!30124 (extraKeys!2035 newMap!16)) (ite (and c!9754 c!9756) lt!29897 (zeroValue!2074 newMap!16)) (minValue!2074 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2168 newMap!16))))))

(declare-fun b!69615 () Bool)

(declare-fun e!45571 () Bool)

(declare-fun e!45567 () Bool)

(assert (=> b!69615 (= e!45571 e!45567)))

(declare-fun c!9978 () Bool)

(declare-fun e!45570 () Bool)

(assert (=> b!69615 (= c!9978 e!45570)))

(declare-fun res!37341 () Bool)

(assert (=> b!69615 (=> (not res!37341) (not e!45570))))

(assert (=> b!69615 (= res!37341 (bvslt #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))))))

(declare-fun b!69616 () Bool)

(assert (=> b!69616 (= e!45567 e!45568)))

(declare-fun c!9980 () Bool)

(assert (=> b!69616 (= c!9980 (bvslt #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))))))

(declare-fun b!69617 () Bool)

(declare-fun e!45572 () ListLongMap!1407)

(declare-fun call!5976 () ListLongMap!1407)

(assert (=> b!69617 (= e!45572 call!5976)))

(declare-fun b!69618 () Bool)

(declare-fun e!45569 () ListLongMap!1407)

(assert (=> b!69618 (= e!45569 (ListLongMap!1408 Nil!1466))))

(declare-fun b!69620 () Bool)

(declare-fun lt!30680 () Unit!1919)

(declare-fun lt!30679 () Unit!1919)

(assert (=> b!69620 (= lt!30680 lt!30679)))

(declare-fun lt!30681 () ListLongMap!1407)

(declare-fun lt!30683 () (_ BitVec 64))

(declare-fun lt!30677 () V!2923)

(declare-fun lt!30678 () (_ BitVec 64))

(assert (=> b!69620 (not (contains!714 (+!90 lt!30681 (tuple2!2103 lt!30678 lt!30677)) lt!30683))))

(assert (=> b!69620 (= lt!30679 (addStillNotContains!22 lt!30681 lt!30678 lt!30677 lt!30683))))

(assert (=> b!69620 (= lt!30683 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!69620 (= lt!30677 (get!1124 (select (arr!1842 (ite c!9754 (_values!2151 newMap!16) (array!3858 (store (arr!1842 (_values!2151 newMap!16)) (index!3066 lt!30149) (ValueCellFull!885 lt!29897)) (size!2078 (_values!2151 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!322 (defaultEntry!2168 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!69620 (= lt!30678 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!69620 (= lt!30681 call!5976)))

(assert (=> b!69620 (= e!45572 (+!90 call!5976 (tuple2!2103 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000) (get!1124 (select (arr!1842 (ite c!9754 (_values!2151 newMap!16) (array!3858 (store (arr!1842 (_values!2151 newMap!16)) (index!3066 lt!30149) (ValueCellFull!885 lt!29897)) (size!2078 (_values!2151 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!322 (defaultEntry!2168 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun bm!5973 () Bool)

(assert (=> bm!5973 (= call!5976 (getCurrentListMapNoExtraKeys!55 (_keys!3812 newMap!16) (ite c!9754 (_values!2151 newMap!16) (array!3858 (store (arr!1842 (_values!2151 newMap!16)) (index!3066 lt!30149) (ValueCellFull!885 lt!29897)) (size!2078 (_values!2151 newMap!16)))) (mask!6113 newMap!16) (ite (and c!9754 c!9756) lt!30124 (extraKeys!2035 newMap!16)) (ite (and c!9754 c!9756) lt!29897 (zeroValue!2074 newMap!16)) (minValue!2074 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2168 newMap!16)))))

(declare-fun b!69621 () Bool)

(assert (=> b!69621 (= e!45570 (validKeyInArray!0 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!69621 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!69622 () Bool)

(declare-fun e!45566 () Bool)

(assert (=> b!69622 (= e!45567 e!45566)))

(assert (=> b!69622 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))))))

(declare-fun res!37338 () Bool)

(assert (=> b!69622 (= res!37338 (contains!714 lt!30682 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!69622 (=> (not res!37338) (not e!45566))))

(declare-fun b!69623 () Bool)

(assert (=> b!69623 (= e!45569 e!45572)))

(declare-fun c!9977 () Bool)

(assert (=> b!69623 (= c!9977 (validKeyInArray!0 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!69624 () Bool)

(assert (=> b!69624 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))))))

(assert (=> b!69624 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2078 (ite c!9754 (_values!2151 newMap!16) (array!3858 (store (arr!1842 (_values!2151 newMap!16)) (index!3066 lt!30149) (ValueCellFull!885 lt!29897)) (size!2078 (_values!2151 newMap!16)))))))))

(assert (=> b!69624 (= e!45566 (= (apply!73 lt!30682 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)) (get!1124 (select (arr!1842 (ite c!9754 (_values!2151 newMap!16) (array!3858 (store (arr!1842 (_values!2151 newMap!16)) (index!3066 lt!30149) (ValueCellFull!885 lt!29897)) (size!2078 (_values!2151 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!322 (defaultEntry!2168 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!69625 () Bool)

(declare-fun res!37340 () Bool)

(assert (=> b!69625 (=> (not res!37340) (not e!45571))))

(assert (=> b!69625 (= res!37340 (not (contains!714 lt!30682 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun d!15169 () Bool)

(assert (=> d!15169 e!45571))

(declare-fun res!37339 () Bool)

(assert (=> d!15169 (=> (not res!37339) (not e!45571))))

(assert (=> d!15169 (= res!37339 (not (contains!714 lt!30682 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!15169 (= lt!30682 e!45569)))

(declare-fun c!9979 () Bool)

(assert (=> d!15169 (= c!9979 (bvsge #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))))))

(assert (=> d!15169 (validMask!0 (mask!6113 newMap!16))))

(assert (=> d!15169 (= (getCurrentListMapNoExtraKeys!55 (_keys!3812 newMap!16) (ite c!9754 (_values!2151 newMap!16) (array!3858 (store (arr!1842 (_values!2151 newMap!16)) (index!3066 lt!30149) (ValueCellFull!885 lt!29897)) (size!2078 (_values!2151 newMap!16)))) (mask!6113 newMap!16) (ite (and c!9754 c!9756) lt!30124 (extraKeys!2035 newMap!16)) (ite (and c!9754 c!9756) lt!29897 (zeroValue!2074 newMap!16)) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) lt!30682)))

(declare-fun b!69619 () Bool)

(assert (=> b!69619 (= e!45568 (isEmpty!310 lt!30682))))

(assert (= (and d!15169 c!9979) b!69618))

(assert (= (and d!15169 (not c!9979)) b!69623))

(assert (= (and b!69623 c!9977) b!69620))

(assert (= (and b!69623 (not c!9977)) b!69617))

(assert (= (or b!69620 b!69617) bm!5973))

(assert (= (and d!15169 res!37339) b!69625))

(assert (= (and b!69625 res!37340) b!69615))

(assert (= (and b!69615 res!37341) b!69621))

(assert (= (and b!69615 c!9978) b!69622))

(assert (= (and b!69615 (not c!9978)) b!69616))

(assert (= (and b!69622 res!37338) b!69624))

(assert (= (and b!69616 c!9980) b!69614))

(assert (= (and b!69616 (not c!9980)) b!69619))

(declare-fun b_lambda!3119 () Bool)

(assert (=> (not b_lambda!3119) (not b!69620)))

(assert (=> b!69620 t!4980))

(declare-fun b_and!4283 () Bool)

(assert (= b_and!4279 (and (=> t!4980 result!2619) b_and!4283)))

(assert (=> b!69620 t!4982))

(declare-fun b_and!4285 () Bool)

(assert (= b_and!4281 (and (=> t!4982 result!2621) b_and!4285)))

(declare-fun b_lambda!3121 () Bool)

(assert (=> (not b_lambda!3121) (not b!69624)))

(assert (=> b!69624 t!4980))

(declare-fun b_and!4287 () Bool)

(assert (= b_and!4283 (and (=> t!4980 result!2619) b_and!4287)))

(assert (=> b!69624 t!4982))

(declare-fun b_and!4289 () Bool)

(assert (= b_and!4285 (and (=> t!4982 result!2621) b_and!4289)))

(assert (=> b!69622 m!64775))

(assert (=> b!69622 m!64775))

(declare-fun m!66051 () Bool)

(assert (=> b!69622 m!66051))

(declare-fun m!66053 () Bool)

(assert (=> b!69619 m!66053))

(assert (=> b!69624 m!64807))

(assert (=> b!69624 m!65441))

(assert (=> b!69624 m!64775))

(assert (=> b!69624 m!65441))

(assert (=> b!69624 m!64807))

(assert (=> b!69624 m!65443))

(assert (=> b!69624 m!64775))

(declare-fun m!66055 () Bool)

(assert (=> b!69624 m!66055))

(declare-fun m!66057 () Bool)

(assert (=> d!15169 m!66057))

(assert (=> d!15169 m!64759))

(assert (=> b!69620 m!64807))

(declare-fun m!66059 () Bool)

(assert (=> b!69620 m!66059))

(declare-fun m!66061 () Bool)

(assert (=> b!69620 m!66061))

(declare-fun m!66063 () Bool)

(assert (=> b!69620 m!66063))

(assert (=> b!69620 m!66059))

(declare-fun m!66065 () Bool)

(assert (=> b!69620 m!66065))

(assert (=> b!69620 m!65441))

(assert (=> b!69620 m!64775))

(assert (=> b!69620 m!65441))

(assert (=> b!69620 m!64807))

(assert (=> b!69620 m!65443))

(declare-fun m!66067 () Bool)

(assert (=> bm!5973 m!66067))

(assert (=> b!69614 m!66067))

(assert (=> b!69621 m!64775))

(assert (=> b!69621 m!64775))

(assert (=> b!69621 m!64777))

(declare-fun m!66069 () Bool)

(assert (=> b!69625 m!66069))

(assert (=> b!69623 m!64775))

(assert (=> b!69623 m!64775))

(assert (=> b!69623 m!64777))

(assert (=> bm!5913 d!15169))

(declare-fun d!15171 () Bool)

(assert (=> d!15171 (= (get!1127 (getValueByKey!131 (toList!719 lt!29996) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2498 (getValueByKey!131 (toList!719 lt!29996) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!14859 d!15171))

(assert (=> d!14859 d!15047))

(declare-fun d!15173 () Bool)

(assert (=> d!15173 (= (get!1127 (getValueByKey!131 (toList!719 lt!29987) lt!29990)) (v!2498 (getValueByKey!131 (toList!719 lt!29987) lt!29990)))))

(assert (=> d!14973 d!15173))

(declare-fun b!69628 () Bool)

(declare-fun e!45574 () Option!137)

(assert (=> b!69628 (= e!45574 (getValueByKey!131 (t!4972 (toList!719 lt!29987)) lt!29990))))

(declare-fun b!69627 () Bool)

(declare-fun e!45573 () Option!137)

(assert (=> b!69627 (= e!45573 e!45574)))

(declare-fun c!9982 () Bool)

(assert (=> b!69627 (= c!9982 (and ((_ is Cons!1465) (toList!719 lt!29987)) (not (= (_1!1062 (h!2050 (toList!719 lt!29987))) lt!29990))))))

(declare-fun b!69629 () Bool)

(assert (=> b!69629 (= e!45574 None!135)))

(declare-fun b!69626 () Bool)

(assert (=> b!69626 (= e!45573 (Some!136 (_2!1062 (h!2050 (toList!719 lt!29987)))))))

(declare-fun d!15175 () Bool)

(declare-fun c!9981 () Bool)

(assert (=> d!15175 (= c!9981 (and ((_ is Cons!1465) (toList!719 lt!29987)) (= (_1!1062 (h!2050 (toList!719 lt!29987))) lt!29990)))))

(assert (=> d!15175 (= (getValueByKey!131 (toList!719 lt!29987) lt!29990) e!45573)))

(assert (= (and d!15175 c!9981) b!69626))

(assert (= (and d!15175 (not c!9981)) b!69627))

(assert (= (and b!69627 c!9982) b!69628))

(assert (= (and b!69627 (not c!9982)) b!69629))

(declare-fun m!66071 () Bool)

(assert (=> b!69628 m!66071))

(assert (=> d!14973 d!15175))

(declare-fun d!15177 () Bool)

(declare-fun c!9985 () Bool)

(assert (=> d!15177 (= c!9985 ((_ is Nil!1466) (toList!719 lt!30041)))))

(declare-fun e!45577 () (InoxSet tuple2!2102))

(assert (=> d!15177 (= (content!73 (toList!719 lt!30041)) e!45577)))

(declare-fun b!69634 () Bool)

(assert (=> b!69634 (= e!45577 ((as const (Array tuple2!2102 Bool)) false))))

(declare-fun b!69635 () Bool)

(assert (=> b!69635 (= e!45577 ((_ map or) (store ((as const (Array tuple2!2102 Bool)) false) (h!2050 (toList!719 lt!30041)) true) (content!73 (t!4972 (toList!719 lt!30041)))))))

(assert (= (and d!15177 c!9985) b!69634))

(assert (= (and d!15177 (not c!9985)) b!69635))

(declare-fun m!66073 () Bool)

(assert (=> b!69635 m!66073))

(declare-fun m!66075 () Bool)

(assert (=> b!69635 m!66075))

(assert (=> d!14829 d!15177))

(declare-fun b!69636 () Bool)

(declare-fun e!45579 () (_ BitVec 32))

(declare-fun call!5977 () (_ BitVec 32))

(assert (=> b!69636 (= e!45579 (bvadd #b00000000000000000000000000000001 call!5977))))

(declare-fun bm!5974 () Bool)

(assert (=> bm!5974 (= call!5977 (arrayCountValidKeys!0 (_keys!3812 (v!2494 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2077 (_keys!3812 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun d!15179 () Bool)

(declare-fun lt!30684 () (_ BitVec 32))

(assert (=> d!15179 (and (bvsge lt!30684 #b00000000000000000000000000000000) (bvsle lt!30684 (bvsub (size!2077 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun e!45578 () (_ BitVec 32))

(assert (=> d!15179 (= lt!30684 e!45578)))

(declare-fun c!9987 () Bool)

(assert (=> d!15179 (= c!9987 (bvsge #b00000000000000000000000000000000 (size!2077 (_keys!3812 (v!2494 (underlying!253 thiss!992))))))))

(assert (=> d!15179 (and (bvsle #b00000000000000000000000000000000 (size!2077 (_keys!3812 (v!2494 (underlying!253 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2077 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (size!2077 (_keys!3812 (v!2494 (underlying!253 thiss!992))))))))

(assert (=> d!15179 (= (arrayCountValidKeys!0 (_keys!3812 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000000000000 (size!2077 (_keys!3812 (v!2494 (underlying!253 thiss!992))))) lt!30684)))

(declare-fun b!69637 () Bool)

(assert (=> b!69637 (= e!45579 call!5977)))

(declare-fun b!69638 () Bool)

(assert (=> b!69638 (= e!45578 #b00000000000000000000000000000000)))

(declare-fun b!69639 () Bool)

(assert (=> b!69639 (= e!45578 e!45579)))

(declare-fun c!9986 () Bool)

(assert (=> b!69639 (= c!9986 (validKeyInArray!0 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (= (and d!15179 c!9987) b!69638))

(assert (= (and d!15179 (not c!9987)) b!69639))

(assert (= (and b!69639 c!9986) b!69636))

(assert (= (and b!69639 (not c!9986)) b!69637))

(assert (= (or b!69636 b!69637) bm!5974))

(declare-fun m!66077 () Bool)

(assert (=> bm!5974 m!66077))

(assert (=> b!69639 m!65577))

(assert (=> b!69639 m!65577))

(assert (=> b!69639 m!65579))

(assert (=> b!69190 d!15179))

(declare-fun lt!30685 () Bool)

(declare-fun d!15181 () Bool)

(assert (=> d!15181 (= lt!30685 (select (content!73 (toList!719 lt!30356)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))))

(declare-fun e!45581 () Bool)

(assert (=> d!15181 (= lt!30685 e!45581)))

(declare-fun res!37342 () Bool)

(assert (=> d!15181 (=> (not res!37342) (not e!45581))))

(assert (=> d!15181 (= res!37342 ((_ is Cons!1465) (toList!719 lt!30356)))))

(assert (=> d!15181 (= (contains!716 (toList!719 lt!30356) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)) lt!30685)))

(declare-fun b!69640 () Bool)

(declare-fun e!45580 () Bool)

(assert (=> b!69640 (= e!45581 e!45580)))

(declare-fun res!37343 () Bool)

(assert (=> b!69640 (=> res!37343 e!45580)))

(assert (=> b!69640 (= res!37343 (= (h!2050 (toList!719 lt!30356)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))))

(declare-fun b!69641 () Bool)

(assert (=> b!69641 (= e!45580 (contains!716 (t!4972 (toList!719 lt!30356)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))))

(assert (= (and d!15181 res!37342) b!69640))

(assert (= (and b!69640 (not res!37343)) b!69641))

(declare-fun m!66079 () Bool)

(assert (=> d!15181 m!66079))

(declare-fun m!66081 () Bool)

(assert (=> d!15181 m!66081))

(declare-fun m!66083 () Bool)

(assert (=> b!69641 m!66083))

(assert (=> b!69189 d!15181))

(declare-fun d!15183 () Bool)

(declare-fun res!37344 () Bool)

(declare-fun e!45582 () Bool)

(assert (=> d!15183 (=> res!37344 e!45582)))

(assert (=> d!15183 (= res!37344 (and ((_ is Cons!1465) (toList!719 (+!90 lt!29988 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))) (= (_1!1062 (h!2050 (toList!719 (+!90 lt!29988 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))) lt!29979)))))

(assert (=> d!15183 (= (containsKey!135 (toList!719 (+!90 lt!29988 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))) lt!29979) e!45582)))

(declare-fun b!69642 () Bool)

(declare-fun e!45583 () Bool)

(assert (=> b!69642 (= e!45582 e!45583)))

(declare-fun res!37345 () Bool)

(assert (=> b!69642 (=> (not res!37345) (not e!45583))))

(assert (=> b!69642 (= res!37345 (and (or (not ((_ is Cons!1465) (toList!719 (+!90 lt!29988 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))) (bvsle (_1!1062 (h!2050 (toList!719 (+!90 lt!29988 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))) lt!29979)) ((_ is Cons!1465) (toList!719 (+!90 lt!29988 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))) (bvslt (_1!1062 (h!2050 (toList!719 (+!90 lt!29988 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))) lt!29979)))))

(declare-fun b!69643 () Bool)

(assert (=> b!69643 (= e!45583 (containsKey!135 (t!4972 (toList!719 (+!90 lt!29988 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))) lt!29979))))

(assert (= (and d!15183 (not res!37344)) b!69642))

(assert (= (and b!69642 res!37345) b!69643))

(declare-fun m!66085 () Bool)

(assert (=> b!69643 m!66085))

(assert (=> d!14985 d!15183))

(declare-fun d!15185 () Bool)

(declare-fun e!45584 () Bool)

(assert (=> d!15185 e!45584))

(declare-fun res!37347 () Bool)

(assert (=> d!15185 (=> (not res!37347) (not e!45584))))

(declare-fun lt!30688 () ListLongMap!1407)

(assert (=> d!15185 (= res!37347 (contains!714 lt!30688 (_1!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16))))))))

(declare-fun lt!30689 () List!1469)

(assert (=> d!15185 (= lt!30688 (ListLongMap!1408 lt!30689))))

(declare-fun lt!30686 () Unit!1919)

(declare-fun lt!30687 () Unit!1919)

(assert (=> d!15185 (= lt!30686 lt!30687)))

(assert (=> d!15185 (= (getValueByKey!131 lt!30689 (_1!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16))))) (Some!136 (_2!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16))))))))

(assert (=> d!15185 (= lt!30687 (lemmaContainsTupThenGetReturnValue!48 lt!30689 (_1!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16)))) (_2!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16))))))))

(assert (=> d!15185 (= lt!30689 (insertStrictlySorted!51 (toList!719 call!5899) (_1!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16)))) (_2!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16))))))))

(assert (=> d!15185 (= (+!90 call!5899 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16)))) lt!30688)))

(declare-fun b!69644 () Bool)

(declare-fun res!37346 () Bool)

(assert (=> b!69644 (=> (not res!37346) (not e!45584))))

(assert (=> b!69644 (= res!37346 (= (getValueByKey!131 (toList!719 lt!30688) (_1!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16))))) (Some!136 (_2!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16)))))))))

(declare-fun b!69645 () Bool)

(assert (=> b!69645 (= e!45584 (contains!716 (toList!719 lt!30688) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16)))))))

(assert (= (and d!15185 res!37347) b!69644))

(assert (= (and b!69644 res!37346) b!69645))

(declare-fun m!66087 () Bool)

(assert (=> d!15185 m!66087))

(declare-fun m!66089 () Bool)

(assert (=> d!15185 m!66089))

(declare-fun m!66091 () Bool)

(assert (=> d!15185 m!66091))

(declare-fun m!66093 () Bool)

(assert (=> d!15185 m!66093))

(declare-fun m!66095 () Bool)

(assert (=> b!69644 m!66095))

(declare-fun m!66097 () Bool)

(assert (=> b!69645 m!66097))

(assert (=> b!69092 d!15185))

(declare-fun d!15187 () Bool)

(declare-fun e!45585 () Bool)

(assert (=> d!15187 e!45585))

(declare-fun res!37348 () Bool)

(assert (=> d!15187 (=> res!37348 e!45585)))

(declare-fun lt!30691 () Bool)

(assert (=> d!15187 (= res!37348 (not lt!30691))))

(declare-fun lt!30690 () Bool)

(assert (=> d!15187 (= lt!30691 lt!30690)))

(declare-fun lt!30692 () Unit!1919)

(declare-fun e!45586 () Unit!1919)

(assert (=> d!15187 (= lt!30692 e!45586)))

(declare-fun c!9988 () Bool)

(assert (=> d!15187 (= c!9988 lt!30690)))

(assert (=> d!15187 (= lt!30690 (containsKey!135 (toList!719 lt!30218) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!15187 (= (contains!714 lt!30218 #b1000000000000000000000000000000000000000000000000000000000000000) lt!30691)))

(declare-fun b!69646 () Bool)

(declare-fun lt!30693 () Unit!1919)

(assert (=> b!69646 (= e!45586 lt!30693)))

(assert (=> b!69646 (= lt!30693 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 lt!30218) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!69646 (isDefined!84 (getValueByKey!131 (toList!719 lt!30218) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69647 () Bool)

(declare-fun Unit!1959 () Unit!1919)

(assert (=> b!69647 (= e!45586 Unit!1959)))

(declare-fun b!69648 () Bool)

(assert (=> b!69648 (= e!45585 (isDefined!84 (getValueByKey!131 (toList!719 lt!30218) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15187 c!9988) b!69646))

(assert (= (and d!15187 (not c!9988)) b!69647))

(assert (= (and d!15187 (not res!37348)) b!69648))

(declare-fun m!66099 () Bool)

(assert (=> d!15187 m!66099))

(declare-fun m!66101 () Bool)

(assert (=> b!69646 m!66101))

(declare-fun m!66103 () Bool)

(assert (=> b!69646 m!66103))

(assert (=> b!69646 m!66103))

(declare-fun m!66105 () Bool)

(assert (=> b!69646 m!66105))

(assert (=> b!69648 m!66103))

(assert (=> b!69648 m!66103))

(assert (=> b!69648 m!66105))

(assert (=> b!68963 d!15187))

(declare-fun b!69649 () Bool)

(declare-fun e!45589 () List!1469)

(assert (=> b!69649 (= e!45589 (insertStrictlySorted!51 (t!4972 (t!4972 (toList!719 lt!29889))) (_1!1062 lt!29892) (_2!1062 lt!29892)))))

(declare-fun d!15189 () Bool)

(declare-fun e!45587 () Bool)

(assert (=> d!15189 e!45587))

(declare-fun res!37350 () Bool)

(assert (=> d!15189 (=> (not res!37350) (not e!45587))))

(declare-fun lt!30694 () List!1469)

(assert (=> d!15189 (= res!37350 (isStrictlySorted!290 lt!30694))))

(declare-fun e!45591 () List!1469)

(assert (=> d!15189 (= lt!30694 e!45591)))

(declare-fun c!9989 () Bool)

(assert (=> d!15189 (= c!9989 (and ((_ is Cons!1465) (t!4972 (toList!719 lt!29889))) (bvslt (_1!1062 (h!2050 (t!4972 (toList!719 lt!29889)))) (_1!1062 lt!29892))))))

(assert (=> d!15189 (isStrictlySorted!290 (t!4972 (toList!719 lt!29889)))))

(assert (=> d!15189 (= (insertStrictlySorted!51 (t!4972 (toList!719 lt!29889)) (_1!1062 lt!29892) (_2!1062 lt!29892)) lt!30694)))

(declare-fun c!9991 () Bool)

(declare-fun b!69650 () Bool)

(declare-fun c!9992 () Bool)

(assert (=> b!69650 (= e!45589 (ite c!9992 (t!4972 (t!4972 (toList!719 lt!29889))) (ite c!9991 (Cons!1465 (h!2050 (t!4972 (toList!719 lt!29889))) (t!4972 (t!4972 (toList!719 lt!29889)))) Nil!1466)))))

(declare-fun bm!5975 () Bool)

(declare-fun call!5980 () List!1469)

(declare-fun call!5979 () List!1469)

(assert (=> bm!5975 (= call!5980 call!5979)))

(declare-fun b!69651 () Bool)

(declare-fun e!45590 () List!1469)

(assert (=> b!69651 (= e!45590 call!5980)))

(declare-fun bm!5976 () Bool)

(declare-fun call!5978 () List!1469)

(assert (=> bm!5976 (= call!5979 call!5978)))

(declare-fun bm!5977 () Bool)

(assert (=> bm!5977 (= call!5978 ($colon$colon!64 e!45589 (ite c!9989 (h!2050 (t!4972 (toList!719 lt!29889))) (tuple2!2103 (_1!1062 lt!29892) (_2!1062 lt!29892)))))))

(declare-fun c!9990 () Bool)

(assert (=> bm!5977 (= c!9990 c!9989)))

(declare-fun b!69652 () Bool)

(declare-fun e!45588 () List!1469)

(assert (=> b!69652 (= e!45591 e!45588)))

(assert (=> b!69652 (= c!9992 (and ((_ is Cons!1465) (t!4972 (toList!719 lt!29889))) (= (_1!1062 (h!2050 (t!4972 (toList!719 lt!29889)))) (_1!1062 lt!29892))))))

(declare-fun b!69653 () Bool)

(assert (=> b!69653 (= e!45587 (contains!716 lt!30694 (tuple2!2103 (_1!1062 lt!29892) (_2!1062 lt!29892))))))

(declare-fun b!69654 () Bool)

(assert (=> b!69654 (= e!45591 call!5978)))

(declare-fun b!69655 () Bool)

(assert (=> b!69655 (= e!45590 call!5980)))

(declare-fun b!69656 () Bool)

(declare-fun res!37349 () Bool)

(assert (=> b!69656 (=> (not res!37349) (not e!45587))))

(assert (=> b!69656 (= res!37349 (containsKey!135 lt!30694 (_1!1062 lt!29892)))))

(declare-fun b!69657 () Bool)

(assert (=> b!69657 (= e!45588 call!5979)))

(declare-fun b!69658 () Bool)

(assert (=> b!69658 (= c!9991 (and ((_ is Cons!1465) (t!4972 (toList!719 lt!29889))) (bvsgt (_1!1062 (h!2050 (t!4972 (toList!719 lt!29889)))) (_1!1062 lt!29892))))))

(assert (=> b!69658 (= e!45588 e!45590)))

(assert (= (and d!15189 c!9989) b!69654))

(assert (= (and d!15189 (not c!9989)) b!69652))

(assert (= (and b!69652 c!9992) b!69657))

(assert (= (and b!69652 (not c!9992)) b!69658))

(assert (= (and b!69658 c!9991) b!69651))

(assert (= (and b!69658 (not c!9991)) b!69655))

(assert (= (or b!69651 b!69655) bm!5975))

(assert (= (or b!69657 bm!5975) bm!5976))

(assert (= (or b!69654 bm!5976) bm!5977))

(assert (= (and bm!5977 c!9990) b!69649))

(assert (= (and bm!5977 (not c!9990)) b!69650))

(assert (= (and d!15189 res!37350) b!69656))

(assert (= (and b!69656 res!37349) b!69653))

(declare-fun m!66107 () Bool)

(assert (=> b!69653 m!66107))

(declare-fun m!66109 () Bool)

(assert (=> d!15189 m!66109))

(declare-fun m!66111 () Bool)

(assert (=> d!15189 m!66111))

(declare-fun m!66113 () Bool)

(assert (=> b!69649 m!66113))

(declare-fun m!66115 () Bool)

(assert (=> bm!5977 m!66115))

(declare-fun m!66117 () Bool)

(assert (=> b!69656 m!66117))

(assert (=> b!69010 d!15189))

(assert (=> b!69142 d!15145))

(declare-fun d!15191 () Bool)

(declare-fun lt!30695 () Bool)

(assert (=> d!15191 (= lt!30695 (select (content!73 (toList!719 lt!30262)) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun e!45593 () Bool)

(assert (=> d!15191 (= lt!30695 e!45593)))

(declare-fun res!37351 () Bool)

(assert (=> d!15191 (=> (not res!37351) (not e!45593))))

(assert (=> d!15191 (= res!37351 ((_ is Cons!1465) (toList!719 lt!30262)))))

(assert (=> d!15191 (= (contains!716 (toList!719 lt!30262) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))) lt!30695)))

(declare-fun b!69659 () Bool)

(declare-fun e!45592 () Bool)

(assert (=> b!69659 (= e!45593 e!45592)))

(declare-fun res!37352 () Bool)

(assert (=> b!69659 (=> res!37352 e!45592)))

(assert (=> b!69659 (= res!37352 (= (h!2050 (toList!719 lt!30262)) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun b!69660 () Bool)

(assert (=> b!69660 (= e!45592 (contains!716 (t!4972 (toList!719 lt!30262)) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))))

(assert (= (and d!15191 res!37351) b!69659))

(assert (= (and b!69659 (not res!37352)) b!69660))

(declare-fun m!66119 () Bool)

(assert (=> d!15191 m!66119))

(declare-fun m!66121 () Bool)

(assert (=> d!15191 m!66121))

(declare-fun m!66123 () Bool)

(assert (=> b!69660 m!66123))

(assert (=> b!69037 d!15191))

(declare-fun d!15193 () Bool)

(declare-fun res!37353 () Bool)

(declare-fun e!45594 () Bool)

(assert (=> d!15193 (=> res!37353 e!45594)))

(assert (=> d!15193 (= res!37353 (and ((_ is Cons!1465) (toList!719 lt!30056)) (= (_1!1062 (h!2050 (toList!719 lt!30056))) (_1!1062 lt!29893))))))

(assert (=> d!15193 (= (containsKey!135 (toList!719 lt!30056) (_1!1062 lt!29893)) e!45594)))

(declare-fun b!69661 () Bool)

(declare-fun e!45595 () Bool)

(assert (=> b!69661 (= e!45594 e!45595)))

(declare-fun res!37354 () Bool)

(assert (=> b!69661 (=> (not res!37354) (not e!45595))))

(assert (=> b!69661 (= res!37354 (and (or (not ((_ is Cons!1465) (toList!719 lt!30056))) (bvsle (_1!1062 (h!2050 (toList!719 lt!30056))) (_1!1062 lt!29893))) ((_ is Cons!1465) (toList!719 lt!30056)) (bvslt (_1!1062 (h!2050 (toList!719 lt!30056))) (_1!1062 lt!29893))))))

(declare-fun b!69662 () Bool)

(assert (=> b!69662 (= e!45595 (containsKey!135 (t!4972 (toList!719 lt!30056)) (_1!1062 lt!29893)))))

(assert (= (and d!15193 (not res!37353)) b!69661))

(assert (= (and b!69661 res!37354) b!69662))

(declare-fun m!66125 () Bool)

(assert (=> b!69662 m!66125))

(assert (=> d!14919 d!15193))

(declare-fun d!15195 () Bool)

(declare-fun e!45596 () Bool)

(assert (=> d!15195 e!45596))

(declare-fun res!37355 () Bool)

(assert (=> d!15195 (=> res!37355 e!45596)))

(declare-fun lt!30697 () Bool)

(assert (=> d!15195 (= res!37355 (not lt!30697))))

(declare-fun lt!30696 () Bool)

(assert (=> d!15195 (= lt!30697 lt!30696)))

(declare-fun lt!30698 () Unit!1919)

(declare-fun e!45597 () Unit!1919)

(assert (=> d!15195 (= lt!30698 e!45597)))

(declare-fun c!9993 () Bool)

(assert (=> d!15195 (= c!9993 lt!30696)))

(assert (=> d!15195 (= lt!30696 (containsKey!135 (toList!719 lt!30318) (_1!1062 (ite c!9754 (ite c!9756 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))))))

(assert (=> d!15195 (= (contains!714 lt!30318 (_1!1062 (ite c!9754 (ite c!9756 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))) lt!30697)))

(declare-fun b!69663 () Bool)

(declare-fun lt!30699 () Unit!1919)

(assert (=> b!69663 (= e!45597 lt!30699)))

(assert (=> b!69663 (= lt!30699 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 lt!30318) (_1!1062 (ite c!9754 (ite c!9756 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))))))

(assert (=> b!69663 (isDefined!84 (getValueByKey!131 (toList!719 lt!30318) (_1!1062 (ite c!9754 (ite c!9756 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))))))

(declare-fun b!69664 () Bool)

(declare-fun Unit!1960 () Unit!1919)

(assert (=> b!69664 (= e!45597 Unit!1960)))

(declare-fun b!69665 () Bool)

(assert (=> b!69665 (= e!45596 (isDefined!84 (getValueByKey!131 (toList!719 lt!30318) (_1!1062 (ite c!9754 (ite c!9756 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))))

(assert (= (and d!15195 c!9993) b!69663))

(assert (= (and d!15195 (not c!9993)) b!69664))

(assert (= (and d!15195 (not res!37355)) b!69665))

(declare-fun m!66127 () Bool)

(assert (=> d!15195 m!66127))

(declare-fun m!66129 () Bool)

(assert (=> b!69663 m!66129))

(assert (=> b!69663 m!65223))

(assert (=> b!69663 m!65223))

(declare-fun m!66131 () Bool)

(assert (=> b!69663 m!66131))

(assert (=> b!69665 m!65223))

(assert (=> b!69665 m!65223))

(assert (=> b!69665 m!66131))

(assert (=> d!14957 d!15195))

(declare-fun e!45599 () Option!137)

(declare-fun b!69668 () Bool)

(assert (=> b!69668 (= e!45599 (getValueByKey!131 (t!4972 lt!30319) (_1!1062 (ite c!9754 (ite c!9756 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))))))

(declare-fun b!69667 () Bool)

(declare-fun e!45598 () Option!137)

(assert (=> b!69667 (= e!45598 e!45599)))

(declare-fun c!9995 () Bool)

(assert (=> b!69667 (= c!9995 (and ((_ is Cons!1465) lt!30319) (not (= (_1!1062 (h!2050 lt!30319)) (_1!1062 (ite c!9754 (ite c!9756 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))))))))

(declare-fun b!69669 () Bool)

(assert (=> b!69669 (= e!45599 None!135)))

(declare-fun b!69666 () Bool)

(assert (=> b!69666 (= e!45598 (Some!136 (_2!1062 (h!2050 lt!30319))))))

(declare-fun c!9994 () Bool)

(declare-fun d!15197 () Bool)

(assert (=> d!15197 (= c!9994 (and ((_ is Cons!1465) lt!30319) (= (_1!1062 (h!2050 lt!30319)) (_1!1062 (ite c!9754 (ite c!9756 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))))

(assert (=> d!15197 (= (getValueByKey!131 lt!30319 (_1!1062 (ite c!9754 (ite c!9756 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))) e!45598)))

(assert (= (and d!15197 c!9994) b!69666))

(assert (= (and d!15197 (not c!9994)) b!69667))

(assert (= (and b!69667 c!9995) b!69668))

(assert (= (and b!69667 (not c!9995)) b!69669))

(declare-fun m!66133 () Bool)

(assert (=> b!69668 m!66133))

(assert (=> d!14957 d!15197))

(declare-fun d!15199 () Bool)

(assert (=> d!15199 (= (getValueByKey!131 lt!30319 (_1!1062 (ite c!9754 (ite c!9756 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))) (Some!136 (_2!1062 (ite c!9754 (ite c!9756 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))))))

(declare-fun lt!30700 () Unit!1919)

(assert (=> d!15199 (= lt!30700 (choose!386 lt!30319 (_1!1062 (ite c!9754 (ite c!9756 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))) (_2!1062 (ite c!9754 (ite c!9756 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))))))

(declare-fun e!45600 () Bool)

(assert (=> d!15199 e!45600))

(declare-fun res!37356 () Bool)

(assert (=> d!15199 (=> (not res!37356) (not e!45600))))

(assert (=> d!15199 (= res!37356 (isStrictlySorted!290 lt!30319))))

(assert (=> d!15199 (= (lemmaContainsTupThenGetReturnValue!48 lt!30319 (_1!1062 (ite c!9754 (ite c!9756 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))) (_2!1062 (ite c!9754 (ite c!9756 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))) lt!30700)))

(declare-fun b!69670 () Bool)

(declare-fun res!37357 () Bool)

(assert (=> b!69670 (=> (not res!37357) (not e!45600))))

(assert (=> b!69670 (= res!37357 (containsKey!135 lt!30319 (_1!1062 (ite c!9754 (ite c!9756 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))))))

(declare-fun b!69671 () Bool)

(assert (=> b!69671 (= e!45600 (contains!716 lt!30319 (tuple2!2103 (_1!1062 (ite c!9754 (ite c!9756 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))) (_2!1062 (ite c!9754 (ite c!9756 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))))

(assert (= (and d!15199 res!37356) b!69670))

(assert (= (and b!69670 res!37357) b!69671))

(assert (=> d!15199 m!65217))

(declare-fun m!66135 () Bool)

(assert (=> d!15199 m!66135))

(declare-fun m!66137 () Bool)

(assert (=> d!15199 m!66137))

(declare-fun m!66139 () Bool)

(assert (=> b!69670 m!66139))

(declare-fun m!66141 () Bool)

(assert (=> b!69671 m!66141))

(assert (=> d!14957 d!15199))

(declare-fun b!69672 () Bool)

(declare-fun e!45603 () List!1469)

(assert (=> b!69672 (= e!45603 (insertStrictlySorted!51 (t!4972 (toList!719 e!45078)) (_1!1062 (ite c!9754 (ite c!9756 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))) (_2!1062 (ite c!9754 (ite c!9756 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))))))

(declare-fun d!15201 () Bool)

(declare-fun e!45601 () Bool)

(assert (=> d!15201 e!45601))

(declare-fun res!37359 () Bool)

(assert (=> d!15201 (=> (not res!37359) (not e!45601))))

(declare-fun lt!30701 () List!1469)

(assert (=> d!15201 (= res!37359 (isStrictlySorted!290 lt!30701))))

(declare-fun e!45605 () List!1469)

(assert (=> d!15201 (= lt!30701 e!45605)))

(declare-fun c!9996 () Bool)

(assert (=> d!15201 (= c!9996 (and ((_ is Cons!1465) (toList!719 e!45078)) (bvslt (_1!1062 (h!2050 (toList!719 e!45078))) (_1!1062 (ite c!9754 (ite c!9756 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))))

(assert (=> d!15201 (isStrictlySorted!290 (toList!719 e!45078))))

(assert (=> d!15201 (= (insertStrictlySorted!51 (toList!719 e!45078) (_1!1062 (ite c!9754 (ite c!9756 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))) (_2!1062 (ite c!9754 (ite c!9756 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))) lt!30701)))

(declare-fun c!9999 () Bool)

(declare-fun b!69673 () Bool)

(declare-fun c!9998 () Bool)

(assert (=> b!69673 (= e!45603 (ite c!9999 (t!4972 (toList!719 e!45078)) (ite c!9998 (Cons!1465 (h!2050 (toList!719 e!45078)) (t!4972 (toList!719 e!45078))) Nil!1466)))))

(declare-fun bm!5978 () Bool)

(declare-fun call!5983 () List!1469)

(declare-fun call!5982 () List!1469)

(assert (=> bm!5978 (= call!5983 call!5982)))

(declare-fun b!69674 () Bool)

(declare-fun e!45604 () List!1469)

(assert (=> b!69674 (= e!45604 call!5983)))

(declare-fun bm!5979 () Bool)

(declare-fun call!5981 () List!1469)

(assert (=> bm!5979 (= call!5982 call!5981)))

(declare-fun bm!5980 () Bool)

(assert (=> bm!5980 (= call!5981 ($colon$colon!64 e!45603 (ite c!9996 (h!2050 (toList!719 e!45078)) (tuple2!2103 (_1!1062 (ite c!9754 (ite c!9756 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))) (_2!1062 (ite c!9754 (ite c!9756 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))))))))

(declare-fun c!9997 () Bool)

(assert (=> bm!5980 (= c!9997 c!9996)))

(declare-fun b!69675 () Bool)

(declare-fun e!45602 () List!1469)

(assert (=> b!69675 (= e!45605 e!45602)))

(assert (=> b!69675 (= c!9999 (and ((_ is Cons!1465) (toList!719 e!45078)) (= (_1!1062 (h!2050 (toList!719 e!45078))) (_1!1062 (ite c!9754 (ite c!9756 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))))

(declare-fun b!69676 () Bool)

(assert (=> b!69676 (= e!45601 (contains!716 lt!30701 (tuple2!2103 (_1!1062 (ite c!9754 (ite c!9756 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))) (_2!1062 (ite c!9754 (ite c!9756 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))))

(declare-fun b!69677 () Bool)

(assert (=> b!69677 (= e!45605 call!5981)))

(declare-fun b!69678 () Bool)

(assert (=> b!69678 (= e!45604 call!5983)))

(declare-fun b!69679 () Bool)

(declare-fun res!37358 () Bool)

(assert (=> b!69679 (=> (not res!37358) (not e!45601))))

(assert (=> b!69679 (= res!37358 (containsKey!135 lt!30701 (_1!1062 (ite c!9754 (ite c!9756 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))))))

(declare-fun b!69680 () Bool)

(assert (=> b!69680 (= e!45602 call!5982)))

(declare-fun b!69681 () Bool)

(assert (=> b!69681 (= c!9998 (and ((_ is Cons!1465) (toList!719 e!45078)) (bvsgt (_1!1062 (h!2050 (toList!719 e!45078))) (_1!1062 (ite c!9754 (ite c!9756 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))))

(assert (=> b!69681 (= e!45602 e!45604)))

(assert (= (and d!15201 c!9996) b!69677))

(assert (= (and d!15201 (not c!9996)) b!69675))

(assert (= (and b!69675 c!9999) b!69680))

(assert (= (and b!69675 (not c!9999)) b!69681))

(assert (= (and b!69681 c!9998) b!69674))

(assert (= (and b!69681 (not c!9998)) b!69678))

(assert (= (or b!69674 b!69678) bm!5978))

(assert (= (or b!69680 bm!5978) bm!5979))

(assert (= (or b!69677 bm!5979) bm!5980))

(assert (= (and bm!5980 c!9997) b!69672))

(assert (= (and bm!5980 (not c!9997)) b!69673))

(assert (= (and d!15201 res!37359) b!69679))

(assert (= (and b!69679 res!37358) b!69676))

(declare-fun m!66143 () Bool)

(assert (=> b!69676 m!66143))

(declare-fun m!66145 () Bool)

(assert (=> d!15201 m!66145))

(declare-fun m!66147 () Bool)

(assert (=> d!15201 m!66147))

(declare-fun m!66149 () Bool)

(assert (=> b!69672 m!66149))

(declare-fun m!66151 () Bool)

(assert (=> bm!5980 m!66151))

(declare-fun m!66153 () Bool)

(assert (=> b!69679 m!66153))

(assert (=> d!14957 d!15201))

(declare-fun d!15203 () Bool)

(declare-fun lt!30702 () Bool)

(assert (=> d!15203 (= lt!30702 (select (content!73 lt!30269) (tuple2!2103 (_1!1062 lt!29893) (_2!1062 lt!29893))))))

(declare-fun e!45607 () Bool)

(assert (=> d!15203 (= lt!30702 e!45607)))

(declare-fun res!37360 () Bool)

(assert (=> d!15203 (=> (not res!37360) (not e!45607))))

(assert (=> d!15203 (= res!37360 ((_ is Cons!1465) lt!30269))))

(assert (=> d!15203 (= (contains!716 lt!30269 (tuple2!2103 (_1!1062 lt!29893) (_2!1062 lt!29893))) lt!30702)))

(declare-fun b!69682 () Bool)

(declare-fun e!45606 () Bool)

(assert (=> b!69682 (= e!45607 e!45606)))

(declare-fun res!37361 () Bool)

(assert (=> b!69682 (=> res!37361 e!45606)))

(assert (=> b!69682 (= res!37361 (= (h!2050 lt!30269) (tuple2!2103 (_1!1062 lt!29893) (_2!1062 lt!29893))))))

(declare-fun b!69683 () Bool)

(assert (=> b!69683 (= e!45606 (contains!716 (t!4972 lt!30269) (tuple2!2103 (_1!1062 lt!29893) (_2!1062 lt!29893))))))

(assert (= (and d!15203 res!37360) b!69682))

(assert (= (and b!69682 (not res!37361)) b!69683))

(declare-fun m!66155 () Bool)

(assert (=> d!15203 m!66155))

(declare-fun m!66157 () Bool)

(assert (=> d!15203 m!66157))

(declare-fun m!66159 () Bool)

(assert (=> b!69683 m!66159))

(assert (=> b!69051 d!15203))

(declare-fun d!15205 () Bool)

(assert (=> d!15205 (= (isDefined!84 (getValueByKey!131 (toList!719 lt!30049) (_1!1062 lt!29893))) (not (isEmpty!312 (getValueByKey!131 (toList!719 lt!30049) (_1!1062 lt!29893)))))))

(declare-fun bs!2989 () Bool)

(assert (= bs!2989 d!15205))

(assert (=> bs!2989 m!64635))

(declare-fun m!66161 () Bool)

(assert (=> bs!2989 m!66161))

(assert (=> b!69040 d!15205))

(assert (=> b!69040 d!14939))

(declare-fun d!15207 () Bool)

(declare-fun res!37362 () Bool)

(declare-fun e!45608 () Bool)

(assert (=> d!15207 (=> res!37362 e!45608)))

(assert (=> d!15207 (= res!37362 (and ((_ is Cons!1465) lt!30050) (= (_1!1062 (h!2050 lt!30050)) (_1!1062 lt!29893))))))

(assert (=> d!15207 (= (containsKey!135 lt!30050 (_1!1062 lt!29893)) e!45608)))

(declare-fun b!69684 () Bool)

(declare-fun e!45609 () Bool)

(assert (=> b!69684 (= e!45608 e!45609)))

(declare-fun res!37363 () Bool)

(assert (=> b!69684 (=> (not res!37363) (not e!45609))))

(assert (=> b!69684 (= res!37363 (and (or (not ((_ is Cons!1465) lt!30050)) (bvsle (_1!1062 (h!2050 lt!30050)) (_1!1062 lt!29893))) ((_ is Cons!1465) lt!30050) (bvslt (_1!1062 (h!2050 lt!30050)) (_1!1062 lt!29893))))))

(declare-fun b!69685 () Bool)

(assert (=> b!69685 (= e!45609 (containsKey!135 (t!4972 lt!30050) (_1!1062 lt!29893)))))

(assert (= (and d!15207 (not res!37362)) b!69684))

(assert (= (and b!69684 res!37363) b!69685))

(declare-fun m!66163 () Bool)

(assert (=> b!69685 m!66163))

(assert (=> b!69045 d!15207))

(declare-fun d!15209 () Bool)

(declare-fun e!45610 () Bool)

(assert (=> d!15209 e!45610))

(declare-fun res!37364 () Bool)

(assert (=> d!15209 (=> res!37364 e!45610)))

(declare-fun lt!30704 () Bool)

(assert (=> d!15209 (= res!37364 (not lt!30704))))

(declare-fun lt!30703 () Bool)

(assert (=> d!15209 (= lt!30704 lt!30703)))

(declare-fun lt!30705 () Unit!1919)

(declare-fun e!45611 () Unit!1919)

(assert (=> d!15209 (= lt!30705 e!45611)))

(declare-fun c!10000 () Bool)

(assert (=> d!15209 (= c!10000 lt!30703)))

(assert (=> d!15209 (= lt!30703 (containsKey!135 (toList!719 lt!30356) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))

(assert (=> d!15209 (= (contains!714 lt!30356 (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))) lt!30704)))

(declare-fun b!69686 () Bool)

(declare-fun lt!30706 () Unit!1919)

(assert (=> b!69686 (= e!45611 lt!30706)))

(assert (=> b!69686 (= lt!30706 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 lt!30356) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))

(assert (=> b!69686 (isDefined!84 (getValueByKey!131 (toList!719 lt!30356) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))

(declare-fun b!69687 () Bool)

(declare-fun Unit!1961 () Unit!1919)

(assert (=> b!69687 (= e!45611 Unit!1961)))

(declare-fun b!69688 () Bool)

(assert (=> b!69688 (= e!45610 (isDefined!84 (getValueByKey!131 (toList!719 lt!30356) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))))))

(assert (= (and d!15209 c!10000) b!69686))

(assert (= (and d!15209 (not c!10000)) b!69687))

(assert (= (and d!15209 (not res!37364)) b!69688))

(declare-fun m!66165 () Bool)

(assert (=> d!15209 m!66165))

(declare-fun m!66167 () Bool)

(assert (=> b!69686 m!66167))

(assert (=> b!69686 m!65359))

(assert (=> b!69686 m!65359))

(declare-fun m!66169 () Bool)

(assert (=> b!69686 m!66169))

(assert (=> b!69688 m!65359))

(assert (=> b!69688 m!65359))

(assert (=> b!69688 m!66169))

(assert (=> d!14997 d!15209))

(declare-fun e!45613 () Option!137)

(declare-fun b!69691 () Bool)

(assert (=> b!69691 (= e!45613 (getValueByKey!131 (t!4972 lt!30357) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))

(declare-fun b!69690 () Bool)

(declare-fun e!45612 () Option!137)

(assert (=> b!69690 (= e!45612 e!45613)))

(declare-fun c!10002 () Bool)

(assert (=> b!69690 (= c!10002 (and ((_ is Cons!1465) lt!30357) (not (= (_1!1062 (h!2050 lt!30357)) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))))

(declare-fun b!69692 () Bool)

(assert (=> b!69692 (= e!45613 None!135)))

(declare-fun b!69689 () Bool)

(assert (=> b!69689 (= e!45612 (Some!136 (_2!1062 (h!2050 lt!30357))))))

(declare-fun c!10001 () Bool)

(declare-fun d!15211 () Bool)

(assert (=> d!15211 (= c!10001 (and ((_ is Cons!1465) lt!30357) (= (_1!1062 (h!2050 lt!30357)) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))))))

(assert (=> d!15211 (= (getValueByKey!131 lt!30357 (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))) e!45612)))

(assert (= (and d!15211 c!10001) b!69689))

(assert (= (and d!15211 (not c!10001)) b!69690))

(assert (= (and b!69690 c!10002) b!69691))

(assert (= (and b!69690 (not c!10002)) b!69692))

(declare-fun m!66171 () Bool)

(assert (=> b!69691 m!66171))

(assert (=> d!14997 d!15211))

(declare-fun d!15213 () Bool)

(assert (=> d!15213 (= (getValueByKey!131 lt!30357 (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))) (Some!136 (_2!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))

(declare-fun lt!30707 () Unit!1919)

(assert (=> d!15213 (= lt!30707 (choose!386 lt!30357 (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)) (_2!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))

(declare-fun e!45614 () Bool)

(assert (=> d!15213 e!45614))

(declare-fun res!37365 () Bool)

(assert (=> d!15213 (=> (not res!37365) (not e!45614))))

(assert (=> d!15213 (= res!37365 (isStrictlySorted!290 lt!30357))))

(assert (=> d!15213 (= (lemmaContainsTupThenGetReturnValue!48 lt!30357 (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)) (_2!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))) lt!30707)))

(declare-fun b!69693 () Bool)

(declare-fun res!37366 () Bool)

(assert (=> b!69693 (=> (not res!37366) (not e!45614))))

(assert (=> b!69693 (= res!37366 (containsKey!135 lt!30357 (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))

(declare-fun b!69694 () Bool)

(assert (=> b!69694 (= e!45614 (contains!716 lt!30357 (tuple2!2103 (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)) (_2!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))))))

(assert (= (and d!15213 res!37365) b!69693))

(assert (= (and b!69693 res!37366) b!69694))

(assert (=> d!15213 m!65353))

(declare-fun m!66173 () Bool)

(assert (=> d!15213 m!66173))

(declare-fun m!66175 () Bool)

(assert (=> d!15213 m!66175))

(declare-fun m!66177 () Bool)

(assert (=> b!69693 m!66177))

(declare-fun m!66179 () Bool)

(assert (=> b!69694 m!66179))

(assert (=> d!14997 d!15213))

(declare-fun b!69695 () Bool)

(declare-fun e!45617 () List!1469)

(assert (=> b!69695 (= e!45617 (insertStrictlySorted!51 (t!4972 (toList!719 call!5863)) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)) (_2!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))

(declare-fun d!15215 () Bool)

(declare-fun e!45615 () Bool)

(assert (=> d!15215 e!45615))

(declare-fun res!37368 () Bool)

(assert (=> d!15215 (=> (not res!37368) (not e!45615))))

(declare-fun lt!30708 () List!1469)

(assert (=> d!15215 (= res!37368 (isStrictlySorted!290 lt!30708))))

(declare-fun e!45619 () List!1469)

(assert (=> d!15215 (= lt!30708 e!45619)))

(declare-fun c!10003 () Bool)

(assert (=> d!15215 (= c!10003 (and ((_ is Cons!1465) (toList!719 call!5863)) (bvslt (_1!1062 (h!2050 (toList!719 call!5863))) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))))))

(assert (=> d!15215 (isStrictlySorted!290 (toList!719 call!5863))))

(assert (=> d!15215 (= (insertStrictlySorted!51 (toList!719 call!5863) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)) (_2!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))) lt!30708)))

(declare-fun c!10005 () Bool)

(declare-fun b!69696 () Bool)

(declare-fun c!10006 () Bool)

(assert (=> b!69696 (= e!45617 (ite c!10006 (t!4972 (toList!719 call!5863)) (ite c!10005 (Cons!1465 (h!2050 (toList!719 call!5863)) (t!4972 (toList!719 call!5863))) Nil!1466)))))

(declare-fun bm!5981 () Bool)

(declare-fun call!5986 () List!1469)

(declare-fun call!5985 () List!1469)

(assert (=> bm!5981 (= call!5986 call!5985)))

(declare-fun b!69697 () Bool)

(declare-fun e!45618 () List!1469)

(assert (=> b!69697 (= e!45618 call!5986)))

(declare-fun bm!5982 () Bool)

(declare-fun call!5984 () List!1469)

(assert (=> bm!5982 (= call!5985 call!5984)))

(declare-fun bm!5983 () Bool)

(assert (=> bm!5983 (= call!5984 ($colon$colon!64 e!45617 (ite c!10003 (h!2050 (toList!719 call!5863)) (tuple2!2103 (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)) (_2!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))))

(declare-fun c!10004 () Bool)

(assert (=> bm!5983 (= c!10004 c!10003)))

(declare-fun b!69698 () Bool)

(declare-fun e!45616 () List!1469)

(assert (=> b!69698 (= e!45619 e!45616)))

(assert (=> b!69698 (= c!10006 (and ((_ is Cons!1465) (toList!719 call!5863)) (= (_1!1062 (h!2050 (toList!719 call!5863))) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))))))

(declare-fun b!69699 () Bool)

(assert (=> b!69699 (= e!45615 (contains!716 lt!30708 (tuple2!2103 (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)) (_2!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))))))

(declare-fun b!69700 () Bool)

(assert (=> b!69700 (= e!45619 call!5984)))

(declare-fun b!69701 () Bool)

(assert (=> b!69701 (= e!45618 call!5986)))

(declare-fun b!69702 () Bool)

(declare-fun res!37367 () Bool)

(assert (=> b!69702 (=> (not res!37367) (not e!45615))))

(assert (=> b!69702 (= res!37367 (containsKey!135 lt!30708 (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))

(declare-fun b!69703 () Bool)

(assert (=> b!69703 (= e!45616 call!5985)))

(declare-fun b!69704 () Bool)

(assert (=> b!69704 (= c!10005 (and ((_ is Cons!1465) (toList!719 call!5863)) (bvsgt (_1!1062 (h!2050 (toList!719 call!5863))) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))))))

(assert (=> b!69704 (= e!45616 e!45618)))

(assert (= (and d!15215 c!10003) b!69700))

(assert (= (and d!15215 (not c!10003)) b!69698))

(assert (= (and b!69698 c!10006) b!69703))

(assert (= (and b!69698 (not c!10006)) b!69704))

(assert (= (and b!69704 c!10005) b!69697))

(assert (= (and b!69704 (not c!10005)) b!69701))

(assert (= (or b!69697 b!69701) bm!5981))

(assert (= (or b!69703 bm!5981) bm!5982))

(assert (= (or b!69700 bm!5982) bm!5983))

(assert (= (and bm!5983 c!10004) b!69695))

(assert (= (and bm!5983 (not c!10004)) b!69696))

(assert (= (and d!15215 res!37368) b!69702))

(assert (= (and b!69702 res!37367) b!69699))

(declare-fun m!66181 () Bool)

(assert (=> b!69699 m!66181))

(declare-fun m!66183 () Bool)

(assert (=> d!15215 m!66183))

(declare-fun m!66185 () Bool)

(assert (=> d!15215 m!66185))

(declare-fun m!66187 () Bool)

(assert (=> b!69695 m!66187))

(declare-fun m!66189 () Bool)

(assert (=> bm!5983 m!66189))

(declare-fun m!66191 () Bool)

(assert (=> b!69702 m!66191))

(assert (=> d!14997 d!15215))

(declare-fun d!15217 () Bool)

(assert (=> d!15217 (= (isDefined!84 (getValueByKey!131 (toList!719 lt!30029) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!312 (getValueByKey!131 (toList!719 lt!30029) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!2990 () Bool)

(assert (= bs!2990 d!15217))

(assert (=> bs!2990 m!64993))

(declare-fun m!66193 () Bool)

(assert (=> bs!2990 m!66193))

(assert (=> b!69029 d!15217))

(declare-fun e!45621 () Option!137)

(declare-fun b!69707 () Bool)

(assert (=> b!69707 (= e!45621 (getValueByKey!131 (t!4972 (toList!719 lt!30029)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!69706 () Bool)

(declare-fun e!45620 () Option!137)

(assert (=> b!69706 (= e!45620 e!45621)))

(declare-fun c!10008 () Bool)

(assert (=> b!69706 (= c!10008 (and ((_ is Cons!1465) (toList!719 lt!30029)) (not (= (_1!1062 (h!2050 (toList!719 lt!30029))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!69708 () Bool)

(assert (=> b!69708 (= e!45621 None!135)))

(declare-fun b!69705 () Bool)

(assert (=> b!69705 (= e!45620 (Some!136 (_2!1062 (h!2050 (toList!719 lt!30029)))))))

(declare-fun c!10007 () Bool)

(declare-fun d!15219 () Bool)

(assert (=> d!15219 (= c!10007 (and ((_ is Cons!1465) (toList!719 lt!30029)) (= (_1!1062 (h!2050 (toList!719 lt!30029))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!15219 (= (getValueByKey!131 (toList!719 lt!30029) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!45620)))

(assert (= (and d!15219 c!10007) b!69705))

(assert (= (and d!15219 (not c!10007)) b!69706))

(assert (= (and b!69706 c!10008) b!69707))

(assert (= (and b!69706 (not c!10008)) b!69708))

(assert (=> b!69707 m!64521))

(declare-fun m!66195 () Bool)

(assert (=> b!69707 m!66195))

(assert (=> b!69029 d!15219))

(declare-fun d!15221 () Bool)

(declare-fun res!37369 () Bool)

(declare-fun e!45622 () Bool)

(assert (=> d!15221 (=> res!37369 e!45622)))

(assert (=> d!15221 (= res!37369 (or ((_ is Nil!1466) lt!30353) ((_ is Nil!1466) (t!4972 lt!30353))))))

(assert (=> d!15221 (= (isStrictlySorted!290 lt!30353) e!45622)))

(declare-fun b!69709 () Bool)

(declare-fun e!45623 () Bool)

(assert (=> b!69709 (= e!45622 e!45623)))

(declare-fun res!37370 () Bool)

(assert (=> b!69709 (=> (not res!37370) (not e!45623))))

(assert (=> b!69709 (= res!37370 (bvslt (_1!1062 (h!2050 lt!30353)) (_1!1062 (h!2050 (t!4972 lt!30353)))))))

(declare-fun b!69710 () Bool)

(assert (=> b!69710 (= e!45623 (isStrictlySorted!290 (t!4972 lt!30353)))))

(assert (= (and d!15221 (not res!37369)) b!69709))

(assert (= (and b!69709 res!37370) b!69710))

(declare-fun m!66197 () Bool)

(assert (=> b!69710 m!66197))

(assert (=> d!14995 d!15221))

(declare-fun d!15223 () Bool)

(declare-fun res!37371 () Bool)

(declare-fun e!45624 () Bool)

(assert (=> d!15223 (=> res!37371 e!45624)))

(assert (=> d!15223 (= res!37371 (or ((_ is Nil!1466) (toList!719 (+!90 lt!29889 lt!29893))) ((_ is Nil!1466) (t!4972 (toList!719 (+!90 lt!29889 lt!29893))))))))

(assert (=> d!15223 (= (isStrictlySorted!290 (toList!719 (+!90 lt!29889 lt!29893))) e!45624)))

(declare-fun b!69711 () Bool)

(declare-fun e!45625 () Bool)

(assert (=> b!69711 (= e!45624 e!45625)))

(declare-fun res!37372 () Bool)

(assert (=> b!69711 (=> (not res!37372) (not e!45625))))

(assert (=> b!69711 (= res!37372 (bvslt (_1!1062 (h!2050 (toList!719 (+!90 lt!29889 lt!29893)))) (_1!1062 (h!2050 (t!4972 (toList!719 (+!90 lt!29889 lt!29893)))))))))

(declare-fun b!69712 () Bool)

(assert (=> b!69712 (= e!45625 (isStrictlySorted!290 (t!4972 (toList!719 (+!90 lt!29889 lt!29893)))))))

(assert (= (and d!15223 (not res!37371)) b!69711))

(assert (= (and b!69711 res!37372) b!69712))

(declare-fun m!66199 () Bool)

(assert (=> b!69712 m!66199))

(assert (=> d!14995 d!15223))

(declare-fun e!45627 () Option!137)

(declare-fun b!69715 () Bool)

(assert (=> b!69715 (= e!45627 (getValueByKey!131 (t!4972 (toList!719 lt!30318)) (_1!1062 (ite c!9754 (ite c!9756 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))))))

(declare-fun b!69714 () Bool)

(declare-fun e!45626 () Option!137)

(assert (=> b!69714 (= e!45626 e!45627)))

(declare-fun c!10010 () Bool)

(assert (=> b!69714 (= c!10010 (and ((_ is Cons!1465) (toList!719 lt!30318)) (not (= (_1!1062 (h!2050 (toList!719 lt!30318))) (_1!1062 (ite c!9754 (ite c!9756 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))))))))

(declare-fun b!69716 () Bool)

(assert (=> b!69716 (= e!45627 None!135)))

(declare-fun b!69713 () Bool)

(assert (=> b!69713 (= e!45626 (Some!136 (_2!1062 (h!2050 (toList!719 lt!30318)))))))

(declare-fun c!10009 () Bool)

(declare-fun d!15225 () Bool)

(assert (=> d!15225 (= c!10009 (and ((_ is Cons!1465) (toList!719 lt!30318)) (= (_1!1062 (h!2050 (toList!719 lt!30318))) (_1!1062 (ite c!9754 (ite c!9756 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))))

(assert (=> d!15225 (= (getValueByKey!131 (toList!719 lt!30318) (_1!1062 (ite c!9754 (ite c!9756 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 lt!29897)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))) e!45626)))

(assert (= (and d!15225 c!10009) b!69713))

(assert (= (and d!15225 (not c!10009)) b!69714))

(assert (= (and b!69714 c!10010) b!69715))

(assert (= (and b!69714 (not c!10010)) b!69716))

(declare-fun m!66201 () Bool)

(assert (=> b!69715 m!66201))

(assert (=> b!69149 d!15225))

(declare-fun d!15227 () Bool)

(assert (=> d!15227 (= (isDefined!84 (getValueByKey!131 (toList!719 lt!30029) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!312 (getValueByKey!131 (toList!719 lt!30029) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!2991 () Bool)

(assert (= bs!2991 d!15227))

(assert (=> bs!2991 m!65543))

(declare-fun m!66203 () Bool)

(assert (=> bs!2991 m!66203))

(assert (=> b!69308 d!15227))

(declare-fun b!69719 () Bool)

(declare-fun e!45629 () Option!137)

(assert (=> b!69719 (= e!45629 (getValueByKey!131 (t!4972 (toList!719 lt!30029)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69718 () Bool)

(declare-fun e!45628 () Option!137)

(assert (=> b!69718 (= e!45628 e!45629)))

(declare-fun c!10012 () Bool)

(assert (=> b!69718 (= c!10012 (and ((_ is Cons!1465) (toList!719 lt!30029)) (not (= (_1!1062 (h!2050 (toList!719 lt!30029))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!69720 () Bool)

(assert (=> b!69720 (= e!45629 None!135)))

(declare-fun b!69717 () Bool)

(assert (=> b!69717 (= e!45628 (Some!136 (_2!1062 (h!2050 (toList!719 lt!30029)))))))

(declare-fun d!15229 () Bool)

(declare-fun c!10011 () Bool)

(assert (=> d!15229 (= c!10011 (and ((_ is Cons!1465) (toList!719 lt!30029)) (= (_1!1062 (h!2050 (toList!719 lt!30029))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!15229 (= (getValueByKey!131 (toList!719 lt!30029) #b1000000000000000000000000000000000000000000000000000000000000000) e!45628)))

(assert (= (and d!15229 c!10011) b!69717))

(assert (= (and d!15229 (not c!10011)) b!69718))

(assert (= (and b!69718 c!10012) b!69719))

(assert (= (and b!69718 (not c!10012)) b!69720))

(declare-fun m!66205 () Bool)

(assert (=> b!69719 m!66205))

(assert (=> b!69308 d!15229))

(declare-fun b!69733 () Bool)

(declare-fun c!10020 () Bool)

(declare-fun lt!30714 () (_ BitVec 64))

(assert (=> b!69733 (= c!10020 (= lt!30714 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!45636 () SeekEntryResult!234)

(declare-fun e!45638 () SeekEntryResult!234)

(assert (=> b!69733 (= e!45636 e!45638)))

(declare-fun b!69734 () Bool)

(declare-fun e!45637 () SeekEntryResult!234)

(assert (=> b!69734 (= e!45637 e!45636)))

(declare-fun c!10019 () Bool)

(assert (=> b!69734 (= c!10019 (= lt!30714 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(declare-fun b!69735 () Bool)

(assert (=> b!69735 (= e!45638 (MissingVacant!234 (index!3067 lt!30204)))))

(declare-fun lt!30713 () SeekEntryResult!234)

(declare-fun d!15231 () Bool)

(assert (=> d!15231 (and (or ((_ is Undefined!234) lt!30713) (not ((_ is Found!234) lt!30713)) (and (bvsge (index!3066 lt!30713) #b00000000000000000000000000000000) (bvslt (index!3066 lt!30713) (size!2077 (_keys!3812 newMap!16))))) (or ((_ is Undefined!234) lt!30713) ((_ is Found!234) lt!30713) (not ((_ is MissingVacant!234) lt!30713)) (not (= (index!3068 lt!30713) (index!3067 lt!30204))) (and (bvsge (index!3068 lt!30713) #b00000000000000000000000000000000) (bvslt (index!3068 lt!30713) (size!2077 (_keys!3812 newMap!16))))) (or ((_ is Undefined!234) lt!30713) (ite ((_ is Found!234) lt!30713) (= (select (arr!1841 (_keys!3812 newMap!16)) (index!3066 lt!30713)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) (and ((_ is MissingVacant!234) lt!30713) (= (index!3068 lt!30713) (index!3067 lt!30204)) (= (select (arr!1841 (_keys!3812 newMap!16)) (index!3068 lt!30713)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!15231 (= lt!30713 e!45637)))

(declare-fun c!10021 () Bool)

(assert (=> d!15231 (= c!10021 (bvsge (x!10848 lt!30204) #b01111111111111111111111111111110))))

(assert (=> d!15231 (= lt!30714 (select (arr!1841 (_keys!3812 newMap!16)) (index!3067 lt!30204)))))

(assert (=> d!15231 (validMask!0 (mask!6113 newMap!16))))

(assert (=> d!15231 (= (seekKeyOrZeroReturnVacant!0 (x!10848 lt!30204) (index!3067 lt!30204) (index!3067 lt!30204) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (_keys!3812 newMap!16) (mask!6113 newMap!16)) lt!30713)))

(declare-fun b!69736 () Bool)

(assert (=> b!69736 (= e!45637 Undefined!234)))

(declare-fun b!69737 () Bool)

(assert (=> b!69737 (= e!45636 (Found!234 (index!3067 lt!30204)))))

(declare-fun b!69738 () Bool)

(assert (=> b!69738 (= e!45638 (seekKeyOrZeroReturnVacant!0 (bvadd (x!10848 lt!30204) #b00000000000000000000000000000001) (nextIndex!0 (index!3067 lt!30204) (x!10848 lt!30204) (mask!6113 newMap!16)) (index!3067 lt!30204) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (_keys!3812 newMap!16) (mask!6113 newMap!16)))))

(assert (= (and d!15231 c!10021) b!69736))

(assert (= (and d!15231 (not c!10021)) b!69734))

(assert (= (and b!69734 c!10019) b!69737))

(assert (= (and b!69734 (not c!10019)) b!69733))

(assert (= (and b!69733 c!10020) b!69735))

(assert (= (and b!69733 (not c!10020)) b!69738))

(declare-fun m!66207 () Bool)

(assert (=> d!15231 m!66207))

(declare-fun m!66209 () Bool)

(assert (=> d!15231 m!66209))

(assert (=> d!15231 m!64883))

(assert (=> d!15231 m!64759))

(declare-fun m!66211 () Bool)

(assert (=> b!69738 m!66211))

(assert (=> b!69738 m!66211))

(assert (=> b!69738 m!64407))

(declare-fun m!66213 () Bool)

(assert (=> b!69738 m!66213))

(assert (=> b!68939 d!15231))

(assert (=> d!14833 d!15083))

(declare-fun d!15233 () Bool)

(declare-fun e!45639 () Bool)

(assert (=> d!15233 e!45639))

(declare-fun res!37373 () Bool)

(assert (=> d!15233 (=> res!37373 e!45639)))

(declare-fun lt!30716 () Bool)

(assert (=> d!15233 (= res!37373 (not lt!30716))))

(declare-fun lt!30715 () Bool)

(assert (=> d!15233 (= lt!30716 lt!30715)))

(declare-fun lt!30717 () Unit!1919)

(declare-fun e!45640 () Unit!1919)

(assert (=> d!15233 (= lt!30717 e!45640)))

(declare-fun c!10022 () Bool)

(assert (=> d!15233 (= c!10022 lt!30715)))

(assert (=> d!15233 (= lt!30715 (containsKey!135 (toList!719 lt!30262) (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> d!15233 (= (contains!714 lt!30262 (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))) lt!30716)))

(declare-fun b!69739 () Bool)

(declare-fun lt!30718 () Unit!1919)

(assert (=> b!69739 (= e!45640 lt!30718)))

(assert (=> b!69739 (= lt!30718 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 lt!30262) (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> b!69739 (isDefined!84 (getValueByKey!131 (toList!719 lt!30262) (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!69740 () Bool)

(declare-fun Unit!1962 () Unit!1919)

(assert (=> b!69740 (= e!45640 Unit!1962)))

(declare-fun b!69741 () Bool)

(assert (=> b!69741 (= e!45639 (isDefined!84 (getValueByKey!131 (toList!719 lt!30262) (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(assert (= (and d!15233 c!10022) b!69739))

(assert (= (and d!15233 (not c!10022)) b!69740))

(assert (= (and d!15233 (not res!37373)) b!69741))

(declare-fun m!66215 () Bool)

(assert (=> d!15233 m!66215))

(declare-fun m!66217 () Bool)

(assert (=> b!69739 m!66217))

(assert (=> b!69739 m!65041))

(assert (=> b!69739 m!65041))

(declare-fun m!66219 () Bool)

(assert (=> b!69739 m!66219))

(assert (=> b!69741 m!65041))

(assert (=> b!69741 m!65041))

(assert (=> b!69741 m!66219))

(assert (=> d!14903 d!15233))

(declare-fun b!69744 () Bool)

(declare-fun e!45642 () Option!137)

(assert (=> b!69744 (= e!45642 (getValueByKey!131 (t!4972 lt!30263) (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!69743 () Bool)

(declare-fun e!45641 () Option!137)

(assert (=> b!69743 (= e!45641 e!45642)))

(declare-fun c!10024 () Bool)

(assert (=> b!69743 (= c!10024 (and ((_ is Cons!1465) lt!30263) (not (= (_1!1062 (h!2050 lt!30263)) (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))))

(declare-fun b!69745 () Bool)

(assert (=> b!69745 (= e!45642 None!135)))

(declare-fun b!69742 () Bool)

(assert (=> b!69742 (= e!45641 (Some!136 (_2!1062 (h!2050 lt!30263))))))

(declare-fun d!15235 () Bool)

(declare-fun c!10023 () Bool)

(assert (=> d!15235 (= c!10023 (and ((_ is Cons!1465) lt!30263) (= (_1!1062 (h!2050 lt!30263)) (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> d!15235 (= (getValueByKey!131 lt!30263 (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))) e!45641)))

(assert (= (and d!15235 c!10023) b!69742))

(assert (= (and d!15235 (not c!10023)) b!69743))

(assert (= (and b!69743 c!10024) b!69744))

(assert (= (and b!69743 (not c!10024)) b!69745))

(declare-fun m!66221 () Bool)

(assert (=> b!69744 m!66221))

(assert (=> d!14903 d!15235))

(declare-fun d!15237 () Bool)

(assert (=> d!15237 (= (getValueByKey!131 lt!30263 (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))) (Some!136 (_2!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun lt!30719 () Unit!1919)

(assert (=> d!15237 (= lt!30719 (choose!386 lt!30263 (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))) (_2!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun e!45643 () Bool)

(assert (=> d!15237 e!45643))

(declare-fun res!37374 () Bool)

(assert (=> d!15237 (=> (not res!37374) (not e!45643))))

(assert (=> d!15237 (= res!37374 (isStrictlySorted!290 lt!30263))))

(assert (=> d!15237 (= (lemmaContainsTupThenGetReturnValue!48 lt!30263 (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))) (_2!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))) lt!30719)))

(declare-fun b!69746 () Bool)

(declare-fun res!37375 () Bool)

(assert (=> b!69746 (=> (not res!37375) (not e!45643))))

(assert (=> b!69746 (= res!37375 (containsKey!135 lt!30263 (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!69747 () Bool)

(assert (=> b!69747 (= e!45643 (contains!716 lt!30263 (tuple2!2103 (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))) (_2!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(assert (= (and d!15237 res!37374) b!69746))

(assert (= (and b!69746 res!37375) b!69747))

(assert (=> d!15237 m!65035))

(declare-fun m!66223 () Bool)

(assert (=> d!15237 m!66223))

(declare-fun m!66225 () Bool)

(assert (=> d!15237 m!66225))

(declare-fun m!66227 () Bool)

(assert (=> b!69746 m!66227))

(declare-fun m!66229 () Bool)

(assert (=> b!69747 m!66229))

(assert (=> d!14903 d!15237))

(declare-fun b!69748 () Bool)

(declare-fun e!45646 () List!1469)

(assert (=> b!69748 (= e!45646 (insertStrictlySorted!51 (t!4972 (toList!719 (+!90 lt!29889 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))) (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))) (_2!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun d!15239 () Bool)

(declare-fun e!45644 () Bool)

(assert (=> d!15239 e!45644))

(declare-fun res!37377 () Bool)

(assert (=> d!15239 (=> (not res!37377) (not e!45644))))

(declare-fun lt!30720 () List!1469)

(assert (=> d!15239 (= res!37377 (isStrictlySorted!290 lt!30720))))

(declare-fun e!45648 () List!1469)

(assert (=> d!15239 (= lt!30720 e!45648)))

(declare-fun c!10025 () Bool)

(assert (=> d!15239 (= c!10025 (and ((_ is Cons!1465) (toList!719 (+!90 lt!29889 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))) (bvslt (_1!1062 (h!2050 (toList!719 (+!90 lt!29889 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))) (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> d!15239 (isStrictlySorted!290 (toList!719 (+!90 lt!29889 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))

(assert (=> d!15239 (= (insertStrictlySorted!51 (toList!719 (+!90 lt!29889 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))) (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))) (_2!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))) lt!30720)))

(declare-fun b!69749 () Bool)

(declare-fun c!10027 () Bool)

(declare-fun c!10028 () Bool)

(assert (=> b!69749 (= e!45646 (ite c!10028 (t!4972 (toList!719 (+!90 lt!29889 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))) (ite c!10027 (Cons!1465 (h!2050 (toList!719 (+!90 lt!29889 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))) (t!4972 (toList!719 (+!90 lt!29889 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))) Nil!1466)))))

(declare-fun bm!5984 () Bool)

(declare-fun call!5989 () List!1469)

(declare-fun call!5988 () List!1469)

(assert (=> bm!5984 (= call!5989 call!5988)))

(declare-fun b!69750 () Bool)

(declare-fun e!45647 () List!1469)

(assert (=> b!69750 (= e!45647 call!5989)))

(declare-fun bm!5985 () Bool)

(declare-fun call!5987 () List!1469)

(assert (=> bm!5985 (= call!5988 call!5987)))

(declare-fun bm!5986 () Bool)

(assert (=> bm!5986 (= call!5987 ($colon$colon!64 e!45646 (ite c!10025 (h!2050 (toList!719 (+!90 lt!29889 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))) (tuple2!2103 (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))) (_2!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))))

(declare-fun c!10026 () Bool)

(assert (=> bm!5986 (= c!10026 c!10025)))

(declare-fun b!69751 () Bool)

(declare-fun e!45645 () List!1469)

(assert (=> b!69751 (= e!45648 e!45645)))

(assert (=> b!69751 (= c!10028 (and ((_ is Cons!1465) (toList!719 (+!90 lt!29889 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))) (= (_1!1062 (h!2050 (toList!719 (+!90 lt!29889 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))) (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(declare-fun b!69752 () Bool)

(assert (=> b!69752 (= e!45644 (contains!716 lt!30720 (tuple2!2103 (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))) (_2!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(declare-fun b!69753 () Bool)

(assert (=> b!69753 (= e!45648 call!5987)))

(declare-fun b!69754 () Bool)

(assert (=> b!69754 (= e!45647 call!5989)))

(declare-fun b!69755 () Bool)

(declare-fun res!37376 () Bool)

(assert (=> b!69755 (=> (not res!37376) (not e!45644))))

(assert (=> b!69755 (= res!37376 (containsKey!135 lt!30720 (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!69756 () Bool)

(assert (=> b!69756 (= e!45645 call!5988)))

(declare-fun b!69757 () Bool)

(assert (=> b!69757 (= c!10027 (and ((_ is Cons!1465) (toList!719 (+!90 lt!29889 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))) (bvsgt (_1!1062 (h!2050 (toList!719 (+!90 lt!29889 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))) (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> b!69757 (= e!45645 e!45647)))

(assert (= (and d!15239 c!10025) b!69753))

(assert (= (and d!15239 (not c!10025)) b!69751))

(assert (= (and b!69751 c!10028) b!69756))

(assert (= (and b!69751 (not c!10028)) b!69757))

(assert (= (and b!69757 c!10027) b!69750))

(assert (= (and b!69757 (not c!10027)) b!69754))

(assert (= (or b!69750 b!69754) bm!5984))

(assert (= (or b!69756 bm!5984) bm!5985))

(assert (= (or b!69753 bm!5985) bm!5986))

(assert (= (and bm!5986 c!10026) b!69748))

(assert (= (and bm!5986 (not c!10026)) b!69749))

(assert (= (and d!15239 res!37377) b!69755))

(assert (= (and b!69755 res!37376) b!69752))

(declare-fun m!66231 () Bool)

(assert (=> b!69752 m!66231))

(declare-fun m!66233 () Bool)

(assert (=> d!15239 m!66233))

(declare-fun m!66235 () Bool)

(assert (=> d!15239 m!66235))

(declare-fun m!66237 () Bool)

(assert (=> b!69748 m!66237))

(declare-fun m!66239 () Bool)

(assert (=> bm!5986 m!66239))

(declare-fun m!66241 () Bool)

(assert (=> b!69755 m!66241))

(assert (=> d!14903 d!15239))

(declare-fun b!69758 () Bool)

(declare-fun e!45649 () Bool)

(declare-fun e!45650 () Bool)

(assert (=> b!69758 (= e!45649 e!45650)))

(declare-fun c!10029 () Bool)

(assert (=> b!69758 (= c!10029 (validKeyInArray!0 (select (arr!1841 (_keys!3812 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!69759 () Bool)

(declare-fun e!45651 () Bool)

(assert (=> b!69759 (= e!45650 e!45651)))

(declare-fun lt!30721 () (_ BitVec 64))

(assert (=> b!69759 (= lt!30721 (select (arr!1841 (_keys!3812 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!30722 () Unit!1919)

(assert (=> b!69759 (= lt!30722 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3812 newMap!16) lt!30721 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!69759 (arrayContainsKey!0 (_keys!3812 newMap!16) lt!30721 #b00000000000000000000000000000000)))

(declare-fun lt!30723 () Unit!1919)

(assert (=> b!69759 (= lt!30723 lt!30722)))

(declare-fun res!37379 () Bool)

(assert (=> b!69759 (= res!37379 (= (seekEntryOrOpen!0 (select (arr!1841 (_keys!3812 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!3812 newMap!16) (mask!6113 newMap!16)) (Found!234 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!69759 (=> (not res!37379) (not e!45651))))

(declare-fun b!69760 () Bool)

(declare-fun call!5990 () Bool)

(assert (=> b!69760 (= e!45650 call!5990)))

(declare-fun b!69761 () Bool)

(assert (=> b!69761 (= e!45651 call!5990)))

(declare-fun bm!5987 () Bool)

(assert (=> bm!5987 (= call!5990 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!3812 newMap!16) (mask!6113 newMap!16)))))

(declare-fun d!15241 () Bool)

(declare-fun res!37378 () Bool)

(assert (=> d!15241 (=> res!37378 e!45649)))

(assert (=> d!15241 (= res!37378 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2077 (_keys!3812 newMap!16))))))

(assert (=> d!15241 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3812 newMap!16) (mask!6113 newMap!16)) e!45649)))

(assert (= (and d!15241 (not res!37378)) b!69758))

(assert (= (and b!69758 c!10029) b!69759))

(assert (= (and b!69758 (not c!10029)) b!69760))

(assert (= (and b!69759 res!37379) b!69761))

(assert (= (or b!69761 b!69760) bm!5987))

(declare-fun m!66243 () Bool)

(assert (=> b!69758 m!66243))

(assert (=> b!69758 m!66243))

(declare-fun m!66245 () Bool)

(assert (=> b!69758 m!66245))

(assert (=> b!69759 m!66243))

(declare-fun m!66247 () Bool)

(assert (=> b!69759 m!66247))

(declare-fun m!66249 () Bool)

(assert (=> b!69759 m!66249))

(assert (=> b!69759 m!66243))

(declare-fun m!66251 () Bool)

(assert (=> b!69759 m!66251))

(declare-fun m!66253 () Bool)

(assert (=> bm!5987 m!66253))

(assert (=> bm!5867 d!15241))

(declare-fun d!15243 () Bool)

(declare-fun e!45652 () Bool)

(assert (=> d!15243 e!45652))

(declare-fun res!37381 () Bool)

(assert (=> d!15243 (=> (not res!37381) (not e!45652))))

(declare-fun lt!30726 () ListLongMap!1407)

(assert (=> d!15243 (= res!37381 (contains!714 lt!30726 (_1!1062 (ite (or c!9872 c!9875) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9754 c!9756) lt!29897 (zeroValue!2074 newMap!16))) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))))))))

(declare-fun lt!30727 () List!1469)

(assert (=> d!15243 (= lt!30726 (ListLongMap!1408 lt!30727))))

(declare-fun lt!30724 () Unit!1919)

(declare-fun lt!30725 () Unit!1919)

(assert (=> d!15243 (= lt!30724 lt!30725)))

(assert (=> d!15243 (= (getValueByKey!131 lt!30727 (_1!1062 (ite (or c!9872 c!9875) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9754 c!9756) lt!29897 (zeroValue!2074 newMap!16))) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))))) (Some!136 (_2!1062 (ite (or c!9872 c!9875) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9754 c!9756) lt!29897 (zeroValue!2074 newMap!16))) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))))))))

(assert (=> d!15243 (= lt!30725 (lemmaContainsTupThenGetReturnValue!48 lt!30727 (_1!1062 (ite (or c!9872 c!9875) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9754 c!9756) lt!29897 (zeroValue!2074 newMap!16))) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))) (_2!1062 (ite (or c!9872 c!9875) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9754 c!9756) lt!29897 (zeroValue!2074 newMap!16))) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))))))))

(assert (=> d!15243 (= lt!30727 (insertStrictlySorted!51 (toList!719 (ite c!9872 call!5920 (ite c!9875 call!5914 call!5916))) (_1!1062 (ite (or c!9872 c!9875) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9754 c!9756) lt!29897 (zeroValue!2074 newMap!16))) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))) (_2!1062 (ite (or c!9872 c!9875) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9754 c!9756) lt!29897 (zeroValue!2074 newMap!16))) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))))))))

(assert (=> d!15243 (= (+!90 (ite c!9872 call!5920 (ite c!9875 call!5914 call!5916)) (ite (or c!9872 c!9875) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9754 c!9756) lt!29897 (zeroValue!2074 newMap!16))) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))) lt!30726)))

(declare-fun b!69762 () Bool)

(declare-fun res!37380 () Bool)

(assert (=> b!69762 (=> (not res!37380) (not e!45652))))

(assert (=> b!69762 (= res!37380 (= (getValueByKey!131 (toList!719 lt!30726) (_1!1062 (ite (or c!9872 c!9875) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9754 c!9756) lt!29897 (zeroValue!2074 newMap!16))) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))))) (Some!136 (_2!1062 (ite (or c!9872 c!9875) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9754 c!9756) lt!29897 (zeroValue!2074 newMap!16))) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))))))))

(declare-fun b!69763 () Bool)

(assert (=> b!69763 (= e!45652 (contains!716 (toList!719 lt!30726) (ite (or c!9872 c!9875) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9754 c!9756) lt!29897 (zeroValue!2074 newMap!16))) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))))))

(assert (= (and d!15243 res!37381) b!69762))

(assert (= (and b!69762 res!37380) b!69763))

(declare-fun m!66255 () Bool)

(assert (=> d!15243 m!66255))

(declare-fun m!66257 () Bool)

(assert (=> d!15243 m!66257))

(declare-fun m!66259 () Bool)

(assert (=> d!15243 m!66259))

(declare-fun m!66261 () Bool)

(assert (=> d!15243 m!66261))

(declare-fun m!66263 () Bool)

(assert (=> b!69762 m!66263))

(declare-fun m!66265 () Bool)

(assert (=> b!69763 m!66265))

(assert (=> bm!5912 d!15243))

(declare-fun d!15245 () Bool)

(assert (=> d!15245 (isDefined!84 (getValueByKey!131 (toList!719 call!5866) (ite c!9759 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (select (arr!1841 (_keys!3812 newMap!16)) (index!3066 lt!30149)))))))

(declare-fun lt!30728 () Unit!1919)

(assert (=> d!15245 (= lt!30728 (choose!387 (toList!719 call!5866) (ite c!9759 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (select (arr!1841 (_keys!3812 newMap!16)) (index!3066 lt!30149)))))))

(declare-fun e!45653 () Bool)

(assert (=> d!15245 e!45653))

(declare-fun res!37382 () Bool)

(assert (=> d!15245 (=> (not res!37382) (not e!45653))))

(assert (=> d!15245 (= res!37382 (isStrictlySorted!290 (toList!719 call!5866)))))

(assert (=> d!15245 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 call!5866) (ite c!9759 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (select (arr!1841 (_keys!3812 newMap!16)) (index!3066 lt!30149)))) lt!30728)))

(declare-fun b!69764 () Bool)

(assert (=> b!69764 (= e!45653 (containsKey!135 (toList!719 call!5866) (ite c!9759 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (select (arr!1841 (_keys!3812 newMap!16)) (index!3066 lt!30149)))))))

(assert (= (and d!15245 res!37382) b!69764))

(assert (=> d!15245 m!65551))

(assert (=> d!15245 m!65551))

(assert (=> d!15245 m!65553))

(declare-fun m!66267 () Bool)

(assert (=> d!15245 m!66267))

(declare-fun m!66269 () Bool)

(assert (=> d!15245 m!66269))

(assert (=> b!69764 m!65547))

(assert (=> b!69309 d!15245))

(assert (=> b!69309 d!15033))

(assert (=> b!69309 d!15035))

(declare-fun b!69767 () Bool)

(declare-fun e!45655 () Option!137)

(assert (=> b!69767 (= e!45655 (getValueByKey!131 (t!4972 (toList!719 lt!30356)) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))

(declare-fun b!69766 () Bool)

(declare-fun e!45654 () Option!137)

(assert (=> b!69766 (= e!45654 e!45655)))

(declare-fun c!10031 () Bool)

(assert (=> b!69766 (= c!10031 (and ((_ is Cons!1465) (toList!719 lt!30356)) (not (= (_1!1062 (h!2050 (toList!719 lt!30356))) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))))

(declare-fun b!69768 () Bool)

(assert (=> b!69768 (= e!45655 None!135)))

(declare-fun b!69765 () Bool)

(assert (=> b!69765 (= e!45654 (Some!136 (_2!1062 (h!2050 (toList!719 lt!30356)))))))

(declare-fun d!15247 () Bool)

(declare-fun c!10030 () Bool)

(assert (=> d!15247 (= c!10030 (and ((_ is Cons!1465) (toList!719 lt!30356)) (= (_1!1062 (h!2050 (toList!719 lt!30356))) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))))))

(assert (=> d!15247 (= (getValueByKey!131 (toList!719 lt!30356) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))) e!45654)))

(assert (= (and d!15247 c!10030) b!69765))

(assert (= (and d!15247 (not c!10030)) b!69766))

(assert (= (and b!69766 c!10031) b!69767))

(assert (= (and b!69766 (not c!10031)) b!69768))

(declare-fun m!66271 () Bool)

(assert (=> b!69767 m!66271))

(assert (=> b!69188 d!15247))

(declare-fun d!15249 () Bool)

(assert (=> d!15249 (isDefined!84 (getValueByKey!131 (toList!719 lt!30045) (_1!1062 lt!29892)))))

(declare-fun lt!30729 () Unit!1919)

(assert (=> d!15249 (= lt!30729 (choose!387 (toList!719 lt!30045) (_1!1062 lt!29892)))))

(declare-fun e!45656 () Bool)

(assert (=> d!15249 e!45656))

(declare-fun res!37383 () Bool)

(assert (=> d!15249 (=> (not res!37383) (not e!45656))))

(assert (=> d!15249 (= res!37383 (isStrictlySorted!290 (toList!719 lt!30045)))))

(assert (=> d!15249 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 lt!30045) (_1!1062 lt!29892)) lt!30729)))

(declare-fun b!69769 () Bool)

(assert (=> b!69769 (= e!45656 (containsKey!135 (toList!719 lt!30045) (_1!1062 lt!29892)))))

(assert (= (and d!15249 res!37383) b!69769))

(assert (=> d!15249 m!64623))

(assert (=> d!15249 m!64623))

(assert (=> d!15249 m!64953))

(declare-fun m!66273 () Bool)

(assert (=> d!15249 m!66273))

(declare-fun m!66275 () Bool)

(assert (=> d!15249 m!66275))

(assert (=> b!69769 m!64949))

(assert (=> b!68969 d!15249))

(assert (=> b!68969 d!15053))

(assert (=> b!68969 d!14931))

(declare-fun b!69770 () Bool)

(declare-fun e!45659 () Bool)

(declare-fun lt!30735 () ListLongMap!1407)

(assert (=> b!69770 (= e!45659 (= lt!30735 (getCurrentListMapNoExtraKeys!55 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2168 newMap!16))))))

(declare-fun b!69771 () Bool)

(declare-fun e!45662 () Bool)

(declare-fun e!45658 () Bool)

(assert (=> b!69771 (= e!45662 e!45658)))

(declare-fun c!10033 () Bool)

(declare-fun e!45661 () Bool)

(assert (=> b!69771 (= c!10033 e!45661)))

(declare-fun res!37387 () Bool)

(assert (=> b!69771 (=> (not res!37387) (not e!45661))))

(assert (=> b!69771 (= res!37387 (bvslt #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))))))

(declare-fun b!69772 () Bool)

(assert (=> b!69772 (= e!45658 e!45659)))

(declare-fun c!10035 () Bool)

(assert (=> b!69772 (= c!10035 (bvslt #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))))))

(declare-fun b!69773 () Bool)

(declare-fun e!45663 () ListLongMap!1407)

(declare-fun call!5991 () ListLongMap!1407)

(assert (=> b!69773 (= e!45663 call!5991)))

(declare-fun b!69774 () Bool)

(declare-fun e!45660 () ListLongMap!1407)

(assert (=> b!69774 (= e!45660 (ListLongMap!1408 Nil!1466))))

(declare-fun b!69776 () Bool)

(declare-fun lt!30733 () Unit!1919)

(declare-fun lt!30732 () Unit!1919)

(assert (=> b!69776 (= lt!30733 lt!30732)))

(declare-fun lt!30734 () ListLongMap!1407)

(declare-fun lt!30730 () V!2923)

(declare-fun lt!30736 () (_ BitVec 64))

(declare-fun lt!30731 () (_ BitVec 64))

(assert (=> b!69776 (not (contains!714 (+!90 lt!30734 (tuple2!2103 lt!30731 lt!30730)) lt!30736))))

(assert (=> b!69776 (= lt!30732 (addStillNotContains!22 lt!30734 lt!30731 lt!30730 lt!30736))))

(assert (=> b!69776 (= lt!30736 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!69776 (= lt!30730 (get!1124 (select (arr!1842 (_values!2151 newMap!16)) #b00000000000000000000000000000000) (dynLambda!322 (defaultEntry!2168 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!69776 (= lt!30731 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!69776 (= lt!30734 call!5991)))

(assert (=> b!69776 (= e!45663 (+!90 call!5991 (tuple2!2103 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000) (get!1124 (select (arr!1842 (_values!2151 newMap!16)) #b00000000000000000000000000000000) (dynLambda!322 (defaultEntry!2168 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun bm!5988 () Bool)

(assert (=> bm!5988 (= call!5991 (getCurrentListMapNoExtraKeys!55 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2168 newMap!16)))))

(declare-fun b!69777 () Bool)

(assert (=> b!69777 (= e!45661 (validKeyInArray!0 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!69777 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!69778 () Bool)

(declare-fun e!45657 () Bool)

(assert (=> b!69778 (= e!45658 e!45657)))

(assert (=> b!69778 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))))))

(declare-fun res!37384 () Bool)

(assert (=> b!69778 (= res!37384 (contains!714 lt!30735 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!69778 (=> (not res!37384) (not e!45657))))

(declare-fun b!69779 () Bool)

(assert (=> b!69779 (= e!45660 e!45663)))

(declare-fun c!10032 () Bool)

(assert (=> b!69779 (= c!10032 (validKeyInArray!0 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!69780 () Bool)

(assert (=> b!69780 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))))))

(assert (=> b!69780 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2078 (_values!2151 newMap!16))))))

(assert (=> b!69780 (= e!45657 (= (apply!73 lt!30735 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)) (get!1124 (select (arr!1842 (_values!2151 newMap!16)) #b00000000000000000000000000000000) (dynLambda!322 (defaultEntry!2168 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!69781 () Bool)

(declare-fun res!37386 () Bool)

(assert (=> b!69781 (=> (not res!37386) (not e!45662))))

(assert (=> b!69781 (= res!37386 (not (contains!714 lt!30735 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun d!15251 () Bool)

(assert (=> d!15251 e!45662))

(declare-fun res!37385 () Bool)

(assert (=> d!15251 (=> (not res!37385) (not e!45662))))

(assert (=> d!15251 (= res!37385 (not (contains!714 lt!30735 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!15251 (= lt!30735 e!45660)))

(declare-fun c!10034 () Bool)

(assert (=> d!15251 (= c!10034 (bvsge #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))))))

(assert (=> d!15251 (validMask!0 (mask!6113 newMap!16))))

(assert (=> d!15251 (= (getCurrentListMapNoExtraKeys!55 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) lt!30735)))

(declare-fun b!69775 () Bool)

(assert (=> b!69775 (= e!45659 (isEmpty!310 lt!30735))))

(assert (= (and d!15251 c!10034) b!69774))

(assert (= (and d!15251 (not c!10034)) b!69779))

(assert (= (and b!69779 c!10032) b!69776))

(assert (= (and b!69779 (not c!10032)) b!69773))

(assert (= (or b!69776 b!69773) bm!5988))

(assert (= (and d!15251 res!37385) b!69781))

(assert (= (and b!69781 res!37386) b!69771))

(assert (= (and b!69771 res!37387) b!69777))

(assert (= (and b!69771 c!10033) b!69778))

(assert (= (and b!69771 (not c!10033)) b!69772))

(assert (= (and b!69778 res!37384) b!69780))

(assert (= (and b!69772 c!10035) b!69770))

(assert (= (and b!69772 (not c!10035)) b!69775))

(declare-fun b_lambda!3123 () Bool)

(assert (=> (not b_lambda!3123) (not b!69776)))

(assert (=> b!69776 t!4980))

(declare-fun b_and!4291 () Bool)

(assert (= b_and!4287 (and (=> t!4980 result!2619) b_and!4291)))

(assert (=> b!69776 t!4982))

(declare-fun b_and!4293 () Bool)

(assert (= b_and!4289 (and (=> t!4982 result!2621) b_and!4293)))

(declare-fun b_lambda!3125 () Bool)

(assert (=> (not b_lambda!3125) (not b!69780)))

(assert (=> b!69780 t!4980))

(declare-fun b_and!4295 () Bool)

(assert (= b_and!4291 (and (=> t!4980 result!2619) b_and!4295)))

(assert (=> b!69780 t!4982))

(declare-fun b_and!4297 () Bool)

(assert (= b_and!4293 (and (=> t!4982 result!2621) b_and!4297)))

(assert (=> b!69778 m!64775))

(assert (=> b!69778 m!64775))

(declare-fun m!66277 () Bool)

(assert (=> b!69778 m!66277))

(declare-fun m!66279 () Bool)

(assert (=> b!69775 m!66279))

(assert (=> b!69780 m!64807))

(assert (=> b!69780 m!64809))

(assert (=> b!69780 m!64775))

(assert (=> b!69780 m!64809))

(assert (=> b!69780 m!64807))

(assert (=> b!69780 m!64811))

(assert (=> b!69780 m!64775))

(declare-fun m!66281 () Bool)

(assert (=> b!69780 m!66281))

(declare-fun m!66283 () Bool)

(assert (=> d!15251 m!66283))

(assert (=> d!15251 m!64759))

(assert (=> b!69776 m!64807))

(declare-fun m!66285 () Bool)

(assert (=> b!69776 m!66285))

(declare-fun m!66287 () Bool)

(assert (=> b!69776 m!66287))

(declare-fun m!66289 () Bool)

(assert (=> b!69776 m!66289))

(assert (=> b!69776 m!66285))

(declare-fun m!66291 () Bool)

(assert (=> b!69776 m!66291))

(assert (=> b!69776 m!64809))

(assert (=> b!69776 m!64775))

(assert (=> b!69776 m!64809))

(assert (=> b!69776 m!64807))

(assert (=> b!69776 m!64811))

(declare-fun m!66293 () Bool)

(assert (=> bm!5988 m!66293))

(assert (=> b!69770 m!66293))

(assert (=> b!69777 m!64775))

(assert (=> b!69777 m!64775))

(assert (=> b!69777 m!64777))

(declare-fun m!66295 () Bool)

(assert (=> b!69781 m!66295))

(assert (=> b!69779 m!64775))

(assert (=> b!69779 m!64775))

(assert (=> b!69779 m!64777))

(assert (=> bm!5870 d!15251))

(declare-fun d!15253 () Bool)

(assert (=> d!15253 (isDefined!84 (getValueByKey!131 (toList!719 lt!29996) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!30737 () Unit!1919)

(assert (=> d!15253 (= lt!30737 (choose!387 (toList!719 lt!29996) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!45664 () Bool)

(assert (=> d!15253 e!45664))

(declare-fun res!37388 () Bool)

(assert (=> d!15253 (=> (not res!37388) (not e!45664))))

(assert (=> d!15253 (= res!37388 (isStrictlySorted!290 (toList!719 lt!29996)))))

(assert (=> d!15253 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 lt!29996) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!30737)))

(declare-fun b!69782 () Bool)

(assert (=> b!69782 (= e!45664 (containsKey!135 (toList!719 lt!29996) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!15253 res!37388) b!69782))

(assert (=> d!15253 m!64521))

(assert (=> d!15253 m!64885))

(assert (=> d!15253 m!64885))

(assert (=> d!15253 m!64941))

(assert (=> d!15253 m!64521))

(declare-fun m!66297 () Bool)

(assert (=> d!15253 m!66297))

(declare-fun m!66299 () Bool)

(assert (=> d!15253 m!66299))

(assert (=> b!69782 m!64521))

(assert (=> b!69782 m!64937))

(assert (=> b!68966 d!15253))

(assert (=> b!68966 d!15045))

(assert (=> b!68966 d!15047))

(assert (=> d!14879 d!14877))

(declare-fun d!15255 () Bool)

(assert (=> d!15255 (= (getValueByKey!131 lt!30046 (_1!1062 lt!29892)) (Some!136 (_2!1062 lt!29892)))))

(assert (=> d!15255 true))

(declare-fun _$22!374 () Unit!1919)

(assert (=> d!15255 (= (choose!386 lt!30046 (_1!1062 lt!29892) (_2!1062 lt!29892)) _$22!374)))

(declare-fun bs!2992 () Bool)

(assert (= bs!2992 d!15255))

(assert (=> bs!2992 m!64617))

(assert (=> d!14879 d!15255))

(declare-fun d!15257 () Bool)

(declare-fun res!37389 () Bool)

(declare-fun e!45665 () Bool)

(assert (=> d!15257 (=> res!37389 e!45665)))

(assert (=> d!15257 (= res!37389 (or ((_ is Nil!1466) lt!30046) ((_ is Nil!1466) (t!4972 lt!30046))))))

(assert (=> d!15257 (= (isStrictlySorted!290 lt!30046) e!45665)))

(declare-fun b!69783 () Bool)

(declare-fun e!45666 () Bool)

(assert (=> b!69783 (= e!45665 e!45666)))

(declare-fun res!37390 () Bool)

(assert (=> b!69783 (=> (not res!37390) (not e!45666))))

(assert (=> b!69783 (= res!37390 (bvslt (_1!1062 (h!2050 lt!30046)) (_1!1062 (h!2050 (t!4972 lt!30046)))))))

(declare-fun b!69784 () Bool)

(assert (=> b!69784 (= e!45666 (isStrictlySorted!290 (t!4972 lt!30046)))))

(assert (= (and d!15257 (not res!37389)) b!69783))

(assert (= (and b!69783 res!37390) b!69784))

(declare-fun m!66301 () Bool)

(assert (=> b!69784 m!66301))

(assert (=> d!14879 d!15257))

(declare-fun b!69787 () Bool)

(declare-fun e!45668 () Option!137)

(assert (=> b!69787 (= e!45668 (getValueByKey!131 (t!4972 (toList!719 lt!30262)) (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!69786 () Bool)

(declare-fun e!45667 () Option!137)

(assert (=> b!69786 (= e!45667 e!45668)))

(declare-fun c!10037 () Bool)

(assert (=> b!69786 (= c!10037 (and ((_ is Cons!1465) (toList!719 lt!30262)) (not (= (_1!1062 (h!2050 (toList!719 lt!30262))) (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))))

(declare-fun b!69788 () Bool)

(assert (=> b!69788 (= e!45668 None!135)))

(declare-fun b!69785 () Bool)

(assert (=> b!69785 (= e!45667 (Some!136 (_2!1062 (h!2050 (toList!719 lt!30262)))))))

(declare-fun d!15259 () Bool)

(declare-fun c!10036 () Bool)

(assert (=> d!15259 (= c!10036 (and ((_ is Cons!1465) (toList!719 lt!30262)) (= (_1!1062 (h!2050 (toList!719 lt!30262))) (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> d!15259 (= (getValueByKey!131 (toList!719 lt!30262) (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))) e!45667)))

(assert (= (and d!15259 c!10036) b!69785))

(assert (= (and d!15259 (not c!10036)) b!69786))

(assert (= (and b!69786 c!10037) b!69787))

(assert (= (and b!69786 (not c!10037)) b!69788))

(declare-fun m!66303 () Bool)

(assert (=> b!69787 m!66303))

(assert (=> b!69036 d!15259))

(declare-fun d!15261 () Bool)

(assert (=> d!15261 (= (get!1127 (getValueByKey!131 (toList!719 (+!90 lt!29987 (tuple2!2103 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))) lt!29990)) (v!2498 (getValueByKey!131 (toList!719 (+!90 lt!29987 (tuple2!2103 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))) lt!29990)))))

(assert (=> d!14975 d!15261))

(declare-fun e!45670 () Option!137)

(declare-fun b!69791 () Bool)

(assert (=> b!69791 (= e!45670 (getValueByKey!131 (t!4972 (toList!719 (+!90 lt!29987 (tuple2!2103 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))) lt!29990))))

(declare-fun b!69790 () Bool)

(declare-fun e!45669 () Option!137)

(assert (=> b!69790 (= e!45669 e!45670)))

(declare-fun c!10039 () Bool)

(assert (=> b!69790 (= c!10039 (and ((_ is Cons!1465) (toList!719 (+!90 lt!29987 (tuple2!2103 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))) (not (= (_1!1062 (h!2050 (toList!719 (+!90 lt!29987 (tuple2!2103 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))) lt!29990))))))

(declare-fun b!69792 () Bool)

(assert (=> b!69792 (= e!45670 None!135)))

(declare-fun b!69789 () Bool)

(assert (=> b!69789 (= e!45669 (Some!136 (_2!1062 (h!2050 (toList!719 (+!90 lt!29987 (tuple2!2103 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))))))))

(declare-fun c!10038 () Bool)

(declare-fun d!15263 () Bool)

(assert (=> d!15263 (= c!10038 (and ((_ is Cons!1465) (toList!719 (+!90 lt!29987 (tuple2!2103 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))) (= (_1!1062 (h!2050 (toList!719 (+!90 lt!29987 (tuple2!2103 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))) lt!29990)))))

(assert (=> d!15263 (= (getValueByKey!131 (toList!719 (+!90 lt!29987 (tuple2!2103 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))) lt!29990) e!45669)))

(assert (= (and d!15263 c!10038) b!69789))

(assert (= (and d!15263 (not c!10038)) b!69790))

(assert (= (and b!69790 c!10039) b!69791))

(assert (= (and b!69790 (not c!10039)) b!69792))

(declare-fun m!66305 () Bool)

(assert (=> b!69791 m!66305))

(assert (=> d!14975 d!15263))

(declare-fun d!15265 () Bool)

(assert (=> d!15265 (isDefined!84 (getValueByKey!131 (toList!719 lt!29996) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!30738 () Unit!1919)

(assert (=> d!15265 (= lt!30738 (choose!387 (toList!719 lt!29996) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!45671 () Bool)

(assert (=> d!15265 e!45671))

(declare-fun res!37391 () Bool)

(assert (=> d!15265 (=> (not res!37391) (not e!45671))))

(assert (=> d!15265 (= res!37391 (isStrictlySorted!290 (toList!719 lt!29996)))))

(assert (=> d!15265 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 lt!29996) #b0000000000000000000000000000000000000000000000000000000000000000) lt!30738)))

(declare-fun b!69793 () Bool)

(assert (=> b!69793 (= e!45671 (containsKey!135 (toList!719 lt!29996) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!15265 res!37391) b!69793))

(assert (=> d!15265 m!64745))

(assert (=> d!15265 m!64745))

(assert (=> d!15265 m!65483))

(declare-fun m!66307 () Bool)

(assert (=> d!15265 m!66307))

(assert (=> d!15265 m!66299))

(assert (=> b!69793 m!65479))

(assert (=> b!69252 d!15265))

(assert (=> b!69252 d!15049))

(assert (=> b!69252 d!15051))

(declare-fun d!15267 () Bool)

(assert (=> d!15267 (= (apply!73 lt!30403 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1127 (getValueByKey!131 (toList!719 lt!30403) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2993 () Bool)

(assert (= bs!2993 d!15267))

(declare-fun m!66309 () Bool)

(assert (=> bs!2993 m!66309))

(assert (=> bs!2993 m!66309))

(declare-fun m!66311 () Bool)

(assert (=> bs!2993 m!66311))

(assert (=> b!69239 d!15267))

(declare-fun d!15269 () Bool)

(assert (=> d!15269 (= (apply!73 lt!30218 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1127 (getValueByKey!131 (toList!719 lt!30218) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(declare-fun bs!2994 () Bool)

(assert (= bs!2994 d!15269))

(assert (=> bs!2994 m!64847))

(declare-fun m!66313 () Bool)

(assert (=> bs!2994 m!66313))

(assert (=> bs!2994 m!66313))

(declare-fun m!66315 () Bool)

(assert (=> bs!2994 m!66315))

(assert (=> b!68962 d!15269))

(declare-fun d!15271 () Bool)

(declare-fun c!10040 () Bool)

(assert (=> d!15271 (= c!10040 ((_ is ValueCellFull!885) (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun e!45672 () V!2923)

(assert (=> d!15271 (= (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!45672)))

(declare-fun b!69794 () Bool)

(assert (=> b!69794 (= e!45672 (get!1125 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!69795 () Bool)

(assert (=> b!69795 (= e!45672 (get!1126 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15271 c!10040) b!69794))

(assert (= (and d!15271 (not c!10040)) b!69795))

(assert (=> b!69794 m!64903))

(assert (=> b!69794 m!64411))

(declare-fun m!66317 () Bool)

(assert (=> b!69794 m!66317))

(assert (=> b!69795 m!64903))

(assert (=> b!69795 m!64411))

(declare-fun m!66319 () Bool)

(assert (=> b!69795 m!66319))

(assert (=> b!68962 d!15271))

(assert (=> bm!5910 d!14933))

(declare-fun d!15273 () Bool)

(declare-fun lt!30739 () Bool)

(assert (=> d!15273 (= lt!30739 (select (content!73 (t!4972 (toList!719 lt!30041))) lt!29892))))

(declare-fun e!45674 () Bool)

(assert (=> d!15273 (= lt!30739 e!45674)))

(declare-fun res!37392 () Bool)

(assert (=> d!15273 (=> (not res!37392) (not e!45674))))

(assert (=> d!15273 (= res!37392 ((_ is Cons!1465) (t!4972 (toList!719 lt!30041))))))

(assert (=> d!15273 (= (contains!716 (t!4972 (toList!719 lt!30041)) lt!29892) lt!30739)))

(declare-fun b!69796 () Bool)

(declare-fun e!45673 () Bool)

(assert (=> b!69796 (= e!45674 e!45673)))

(declare-fun res!37393 () Bool)

(assert (=> b!69796 (=> res!37393 e!45673)))

(assert (=> b!69796 (= res!37393 (= (h!2050 (t!4972 (toList!719 lt!30041))) lt!29892))))

(declare-fun b!69797 () Bool)

(assert (=> b!69797 (= e!45673 (contains!716 (t!4972 (t!4972 (toList!719 lt!30041))) lt!29892))))

(assert (= (and d!15273 res!37392) b!69796))

(assert (= (and b!69796 (not res!37393)) b!69797))

(assert (=> d!15273 m!66075))

(declare-fun m!66321 () Bool)

(assert (=> d!15273 m!66321))

(declare-fun m!66323 () Bool)

(assert (=> b!69797 m!66323))

(assert (=> b!68848 d!15273))

(declare-fun b!69798 () Bool)

(declare-fun e!45677 () List!1469)

(assert (=> b!69798 (= e!45677 (insertStrictlySorted!51 (t!4972 (t!4972 (toList!719 (+!90 lt!29889 lt!29893)))) (_1!1062 lt!29892) (_2!1062 lt!29892)))))

(declare-fun d!15275 () Bool)

(declare-fun e!45675 () Bool)

(assert (=> d!15275 e!45675))

(declare-fun res!37395 () Bool)

(assert (=> d!15275 (=> (not res!37395) (not e!45675))))

(declare-fun lt!30740 () List!1469)

(assert (=> d!15275 (= res!37395 (isStrictlySorted!290 lt!30740))))

(declare-fun e!45679 () List!1469)

(assert (=> d!15275 (= lt!30740 e!45679)))

(declare-fun c!10041 () Bool)

(assert (=> d!15275 (= c!10041 (and ((_ is Cons!1465) (t!4972 (toList!719 (+!90 lt!29889 lt!29893)))) (bvslt (_1!1062 (h!2050 (t!4972 (toList!719 (+!90 lt!29889 lt!29893))))) (_1!1062 lt!29892))))))

(assert (=> d!15275 (isStrictlySorted!290 (t!4972 (toList!719 (+!90 lt!29889 lt!29893))))))

(assert (=> d!15275 (= (insertStrictlySorted!51 (t!4972 (toList!719 (+!90 lt!29889 lt!29893))) (_1!1062 lt!29892) (_2!1062 lt!29892)) lt!30740)))

(declare-fun c!10043 () Bool)

(declare-fun c!10044 () Bool)

(declare-fun b!69799 () Bool)

(assert (=> b!69799 (= e!45677 (ite c!10044 (t!4972 (t!4972 (toList!719 (+!90 lt!29889 lt!29893)))) (ite c!10043 (Cons!1465 (h!2050 (t!4972 (toList!719 (+!90 lt!29889 lt!29893)))) (t!4972 (t!4972 (toList!719 (+!90 lt!29889 lt!29893))))) Nil!1466)))))

(declare-fun bm!5989 () Bool)

(declare-fun call!5994 () List!1469)

(declare-fun call!5993 () List!1469)

(assert (=> bm!5989 (= call!5994 call!5993)))

(declare-fun b!69800 () Bool)

(declare-fun e!45678 () List!1469)

(assert (=> b!69800 (= e!45678 call!5994)))

(declare-fun bm!5990 () Bool)

(declare-fun call!5992 () List!1469)

(assert (=> bm!5990 (= call!5993 call!5992)))

(declare-fun bm!5991 () Bool)

(assert (=> bm!5991 (= call!5992 ($colon$colon!64 e!45677 (ite c!10041 (h!2050 (t!4972 (toList!719 (+!90 lt!29889 lt!29893)))) (tuple2!2103 (_1!1062 lt!29892) (_2!1062 lt!29892)))))))

(declare-fun c!10042 () Bool)

(assert (=> bm!5991 (= c!10042 c!10041)))

(declare-fun b!69801 () Bool)

(declare-fun e!45676 () List!1469)

(assert (=> b!69801 (= e!45679 e!45676)))

(assert (=> b!69801 (= c!10044 (and ((_ is Cons!1465) (t!4972 (toList!719 (+!90 lt!29889 lt!29893)))) (= (_1!1062 (h!2050 (t!4972 (toList!719 (+!90 lt!29889 lt!29893))))) (_1!1062 lt!29892))))))

(declare-fun b!69802 () Bool)

(assert (=> b!69802 (= e!45675 (contains!716 lt!30740 (tuple2!2103 (_1!1062 lt!29892) (_2!1062 lt!29892))))))

(declare-fun b!69803 () Bool)

(assert (=> b!69803 (= e!45679 call!5992)))

(declare-fun b!69804 () Bool)

(assert (=> b!69804 (= e!45678 call!5994)))

(declare-fun b!69805 () Bool)

(declare-fun res!37394 () Bool)

(assert (=> b!69805 (=> (not res!37394) (not e!45675))))

(assert (=> b!69805 (= res!37394 (containsKey!135 lt!30740 (_1!1062 lt!29892)))))

(declare-fun b!69806 () Bool)

(assert (=> b!69806 (= e!45676 call!5993)))

(declare-fun b!69807 () Bool)

(assert (=> b!69807 (= c!10043 (and ((_ is Cons!1465) (t!4972 (toList!719 (+!90 lt!29889 lt!29893)))) (bvsgt (_1!1062 (h!2050 (t!4972 (toList!719 (+!90 lt!29889 lt!29893))))) (_1!1062 lt!29892))))))

(assert (=> b!69807 (= e!45676 e!45678)))

(assert (= (and d!15275 c!10041) b!69803))

(assert (= (and d!15275 (not c!10041)) b!69801))

(assert (= (and b!69801 c!10044) b!69806))

(assert (= (and b!69801 (not c!10044)) b!69807))

(assert (= (and b!69807 c!10043) b!69800))

(assert (= (and b!69807 (not c!10043)) b!69804))

(assert (= (or b!69800 b!69804) bm!5989))

(assert (= (or b!69806 bm!5989) bm!5990))

(assert (= (or b!69803 bm!5990) bm!5991))

(assert (= (and bm!5991 c!10042) b!69798))

(assert (= (and bm!5991 (not c!10042)) b!69799))

(assert (= (and d!15275 res!37395) b!69805))

(assert (= (and b!69805 res!37394) b!69802))

(declare-fun m!66325 () Bool)

(assert (=> b!69802 m!66325))

(declare-fun m!66327 () Bool)

(assert (=> d!15275 m!66327))

(assert (=> d!15275 m!66199))

(declare-fun m!66329 () Bool)

(assert (=> b!69798 m!66329))

(declare-fun m!66331 () Bool)

(assert (=> bm!5991 m!66331))

(declare-fun m!66333 () Bool)

(assert (=> b!69805 m!66333))

(assert (=> b!69178 d!15275))

(declare-fun d!15277 () Bool)

(declare-fun res!37396 () Bool)

(declare-fun e!45680 () Bool)

(assert (=> d!15277 (=> res!37396 e!45680)))

(assert (=> d!15277 (= res!37396 (and ((_ is Cons!1465) (toList!719 call!5866)) (= (_1!1062 (h!2050 (toList!719 call!5866))) (ite c!9759 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (select (arr!1841 (_keys!3812 newMap!16)) (index!3066 lt!30149))))))))

(assert (=> d!15277 (= (containsKey!135 (toList!719 call!5866) (ite c!9759 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (select (arr!1841 (_keys!3812 newMap!16)) (index!3066 lt!30149)))) e!45680)))

(declare-fun b!69808 () Bool)

(declare-fun e!45681 () Bool)

(assert (=> b!69808 (= e!45680 e!45681)))

(declare-fun res!37397 () Bool)

(assert (=> b!69808 (=> (not res!37397) (not e!45681))))

(assert (=> b!69808 (= res!37397 (and (or (not ((_ is Cons!1465) (toList!719 call!5866))) (bvsle (_1!1062 (h!2050 (toList!719 call!5866))) (ite c!9759 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (select (arr!1841 (_keys!3812 newMap!16)) (index!3066 lt!30149))))) ((_ is Cons!1465) (toList!719 call!5866)) (bvslt (_1!1062 (h!2050 (toList!719 call!5866))) (ite c!9759 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (select (arr!1841 (_keys!3812 newMap!16)) (index!3066 lt!30149))))))))

(declare-fun b!69809 () Bool)

(assert (=> b!69809 (= e!45681 (containsKey!135 (t!4972 (toList!719 call!5866)) (ite c!9759 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (select (arr!1841 (_keys!3812 newMap!16)) (index!3066 lt!30149)))))))

(assert (= (and d!15277 (not res!37396)) b!69808))

(assert (= (and b!69808 res!37397) b!69809))

(declare-fun m!66335 () Bool)

(assert (=> b!69809 m!66335))

(assert (=> d!15025 d!15277))

(declare-fun d!15279 () Bool)

(declare-fun e!45682 () Bool)

(assert (=> d!15279 e!45682))

(declare-fun res!37398 () Bool)

(assert (=> d!15279 (=> res!37398 e!45682)))

(declare-fun lt!30742 () Bool)

(assert (=> d!15279 (= res!37398 (not lt!30742))))

(declare-fun lt!30741 () Bool)

(assert (=> d!15279 (= lt!30742 lt!30741)))

(declare-fun lt!30743 () Unit!1919)

(declare-fun e!45683 () Unit!1919)

(assert (=> d!15279 (= lt!30743 e!45683)))

(declare-fun c!10045 () Bool)

(assert (=> d!15279 (= c!10045 lt!30741)))

(assert (=> d!15279 (= lt!30741 (containsKey!135 (toList!719 lt!29984) lt!29994))))

(assert (=> d!15279 (= (contains!714 lt!29984 lt!29994) lt!30742)))

(declare-fun b!69810 () Bool)

(declare-fun lt!30744 () Unit!1919)

(assert (=> b!69810 (= e!45683 lt!30744)))

(assert (=> b!69810 (= lt!30744 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 lt!29984) lt!29994))))

(assert (=> b!69810 (isDefined!84 (getValueByKey!131 (toList!719 lt!29984) lt!29994))))

(declare-fun b!69811 () Bool)

(declare-fun Unit!1963 () Unit!1919)

(assert (=> b!69811 (= e!45683 Unit!1963)))

(declare-fun b!69812 () Bool)

(assert (=> b!69812 (= e!45682 (isDefined!84 (getValueByKey!131 (toList!719 lt!29984) lt!29994)))))

(assert (= (and d!15279 c!10045) b!69810))

(assert (= (and d!15279 (not c!10045)) b!69811))

(assert (= (and d!15279 (not res!37398)) b!69812))

(declare-fun m!66337 () Bool)

(assert (=> d!15279 m!66337))

(declare-fun m!66339 () Bool)

(assert (=> b!69810 m!66339))

(assert (=> b!69810 m!65291))

(assert (=> b!69810 m!65291))

(declare-fun m!66341 () Bool)

(assert (=> b!69810 m!66341))

(assert (=> b!69812 m!65291))

(assert (=> b!69812 m!65291))

(assert (=> b!69812 m!66341))

(assert (=> d!14971 d!15279))

(assert (=> d!14971 d!14967))

(declare-fun d!15281 () Bool)

(assert (=> d!15281 (= (apply!73 (+!90 lt!29984 (tuple2!2103 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992))))) lt!29994) (apply!73 lt!29984 lt!29994))))

(assert (=> d!15281 true))

(declare-fun _$34!791 () Unit!1919)

(assert (=> d!15281 (= (choose!388 lt!29984 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992))) lt!29994) _$34!791)))

(declare-fun bs!2995 () Bool)

(assert (= bs!2995 d!15281))

(assert (=> bs!2995 m!64539))

(assert (=> bs!2995 m!64539))

(assert (=> bs!2995 m!64541))

(assert (=> bs!2995 m!64563))

(assert (=> d!14971 d!15281))

(assert (=> d!14971 d!14987))

(assert (=> d!14971 d!14979))

(declare-fun d!15283 () Bool)

(declare-fun res!37399 () Bool)

(declare-fun e!45684 () Bool)

(assert (=> d!15283 (=> res!37399 e!45684)))

(assert (=> d!15283 (= res!37399 (or ((_ is Nil!1466) lt!30240) ((_ is Nil!1466) (t!4972 lt!30240))))))

(assert (=> d!15283 (= (isStrictlySorted!290 lt!30240) e!45684)))

(declare-fun b!69814 () Bool)

(declare-fun e!45685 () Bool)

(assert (=> b!69814 (= e!45684 e!45685)))

(declare-fun res!37400 () Bool)

(assert (=> b!69814 (=> (not res!37400) (not e!45685))))

(assert (=> b!69814 (= res!37400 (bvslt (_1!1062 (h!2050 lt!30240)) (_1!1062 (h!2050 (t!4972 lt!30240)))))))

(declare-fun b!69815 () Bool)

(assert (=> b!69815 (= e!45685 (isStrictlySorted!290 (t!4972 lt!30240)))))

(assert (= (and d!15283 (not res!37399)) b!69814))

(assert (= (and b!69814 res!37400) b!69815))

(declare-fun m!66343 () Bool)

(assert (=> b!69815 m!66343))

(assert (=> d!14881 d!15283))

(declare-fun d!15285 () Bool)

(declare-fun res!37401 () Bool)

(declare-fun e!45686 () Bool)

(assert (=> d!15285 (=> res!37401 e!45686)))

(assert (=> d!15285 (= res!37401 (or ((_ is Nil!1466) (toList!719 lt!29889)) ((_ is Nil!1466) (t!4972 (toList!719 lt!29889)))))))

(assert (=> d!15285 (= (isStrictlySorted!290 (toList!719 lt!29889)) e!45686)))

(declare-fun b!69816 () Bool)

(declare-fun e!45687 () Bool)

(assert (=> b!69816 (= e!45686 e!45687)))

(declare-fun res!37402 () Bool)

(assert (=> b!69816 (=> (not res!37402) (not e!45687))))

(assert (=> b!69816 (= res!37402 (bvslt (_1!1062 (h!2050 (toList!719 lt!29889))) (_1!1062 (h!2050 (t!4972 (toList!719 lt!29889))))))))

(declare-fun b!69817 () Bool)

(assert (=> b!69817 (= e!45687 (isStrictlySorted!290 (t!4972 (toList!719 lt!29889))))))

(assert (= (and d!15285 (not res!37401)) b!69816))

(assert (= (and b!69816 res!37402) b!69817))

(assert (=> b!69817 m!66111))

(assert (=> d!14881 d!15285))

(declare-fun d!15287 () Bool)

(declare-fun lt!30745 () Bool)

(assert (=> d!15287 (= lt!30745 (select (content!73 lt!30240) (tuple2!2103 (_1!1062 lt!29892) (_2!1062 lt!29892))))))

(declare-fun e!45689 () Bool)

(assert (=> d!15287 (= lt!30745 e!45689)))

(declare-fun res!37403 () Bool)

(assert (=> d!15287 (=> (not res!37403) (not e!45689))))

(assert (=> d!15287 (= res!37403 ((_ is Cons!1465) lt!30240))))

(assert (=> d!15287 (= (contains!716 lt!30240 (tuple2!2103 (_1!1062 lt!29892) (_2!1062 lt!29892))) lt!30745)))

(declare-fun b!69818 () Bool)

(declare-fun e!45688 () Bool)

(assert (=> b!69818 (= e!45689 e!45688)))

(declare-fun res!37404 () Bool)

(assert (=> b!69818 (=> res!37404 e!45688)))

(assert (=> b!69818 (= res!37404 (= (h!2050 lt!30240) (tuple2!2103 (_1!1062 lt!29892) (_2!1062 lt!29892))))))

(declare-fun b!69819 () Bool)

(assert (=> b!69819 (= e!45688 (contains!716 (t!4972 lt!30240) (tuple2!2103 (_1!1062 lt!29892) (_2!1062 lt!29892))))))

(assert (= (and d!15287 res!37403) b!69818))

(assert (= (and b!69818 (not res!37404)) b!69819))

(declare-fun m!66345 () Bool)

(assert (=> d!15287 m!66345))

(declare-fun m!66347 () Bool)

(assert (=> d!15287 m!66347))

(declare-fun m!66349 () Bool)

(assert (=> b!69819 m!66349))

(assert (=> b!69014 d!15287))

(declare-fun d!15289 () Bool)

(assert (=> d!15289 (= (isDefined!84 (getValueByKey!131 (toList!719 lt!30029) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!312 (getValueByKey!131 (toList!719 lt!30029) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!2996 () Bool)

(assert (= bs!2996 d!15289))

(assert (=> bs!2996 m!65211))

(declare-fun m!66351 () Bool)

(assert (=> bs!2996 m!66351))

(assert (=> b!69148 d!15289))

(declare-fun b!69822 () Bool)

(declare-fun e!45691 () Option!137)

(assert (=> b!69822 (= e!45691 (getValueByKey!131 (t!4972 (toList!719 lt!30029)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69821 () Bool)

(declare-fun e!45690 () Option!137)

(assert (=> b!69821 (= e!45690 e!45691)))

(declare-fun c!10047 () Bool)

(assert (=> b!69821 (= c!10047 (and ((_ is Cons!1465) (toList!719 lt!30029)) (not (= (_1!1062 (h!2050 (toList!719 lt!30029))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!69823 () Bool)

(assert (=> b!69823 (= e!45691 None!135)))

(declare-fun b!69820 () Bool)

(assert (=> b!69820 (= e!45690 (Some!136 (_2!1062 (h!2050 (toList!719 lt!30029)))))))

(declare-fun d!15291 () Bool)

(declare-fun c!10046 () Bool)

(assert (=> d!15291 (= c!10046 (and ((_ is Cons!1465) (toList!719 lt!30029)) (= (_1!1062 (h!2050 (toList!719 lt!30029))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!15291 (= (getValueByKey!131 (toList!719 lt!30029) #b0000000000000000000000000000000000000000000000000000000000000000) e!45690)))

(assert (= (and d!15291 c!10046) b!69820))

(assert (= (and d!15291 (not c!10046)) b!69821))

(assert (= (and b!69821 c!10047) b!69822))

(assert (= (and b!69821 (not c!10047)) b!69823))

(declare-fun m!66353 () Bool)

(assert (=> b!69822 m!66353))

(assert (=> b!69148 d!15291))

(declare-fun d!15293 () Bool)

(declare-fun res!37405 () Bool)

(declare-fun e!45692 () Bool)

(assert (=> d!15293 (=> res!37405 e!45692)))

(assert (=> d!15293 (= res!37405 (and ((_ is Cons!1465) (toList!719 lt!30045)) (= (_1!1062 (h!2050 (toList!719 lt!30045))) (_1!1062 lt!29892))))))

(assert (=> d!15293 (= (containsKey!135 (toList!719 lt!30045) (_1!1062 lt!29892)) e!45692)))

(declare-fun b!69824 () Bool)

(declare-fun e!45693 () Bool)

(assert (=> b!69824 (= e!45692 e!45693)))

(declare-fun res!37406 () Bool)

(assert (=> b!69824 (=> (not res!37406) (not e!45693))))

(assert (=> b!69824 (= res!37406 (and (or (not ((_ is Cons!1465) (toList!719 lt!30045))) (bvsle (_1!1062 (h!2050 (toList!719 lt!30045))) (_1!1062 lt!29892))) ((_ is Cons!1465) (toList!719 lt!30045)) (bvslt (_1!1062 (h!2050 (toList!719 lt!30045))) (_1!1062 lt!29892))))))

(declare-fun b!69825 () Bool)

(assert (=> b!69825 (= e!45693 (containsKey!135 (t!4972 (toList!719 lt!30045)) (_1!1062 lt!29892)))))

(assert (= (and d!15293 (not res!37405)) b!69824))

(assert (= (and b!69824 res!37406) b!69825))

(declare-fun m!66355 () Bool)

(assert (=> b!69825 m!66355))

(assert (=> d!14875 d!15293))

(declare-fun d!15295 () Bool)

(declare-fun res!37407 () Bool)

(declare-fun e!45694 () Bool)

(assert (=> d!15295 (=> res!37407 e!45694)))

(assert (=> d!15295 (= res!37407 (and ((_ is Cons!1465) (toList!719 lt!29996)) (= (_1!1062 (h!2050 (toList!719 lt!29996))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!15295 (= (containsKey!135 (toList!719 lt!29996) #b0000000000000000000000000000000000000000000000000000000000000000) e!45694)))

(declare-fun b!69826 () Bool)

(declare-fun e!45695 () Bool)

(assert (=> b!69826 (= e!45694 e!45695)))

(declare-fun res!37408 () Bool)

(assert (=> b!69826 (=> (not res!37408) (not e!45695))))

(assert (=> b!69826 (= res!37408 (and (or (not ((_ is Cons!1465) (toList!719 lt!29996))) (bvsle (_1!1062 (h!2050 (toList!719 lt!29996))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1465) (toList!719 lt!29996)) (bvslt (_1!1062 (h!2050 (toList!719 lt!29996))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!69827 () Bool)

(assert (=> b!69827 (= e!45695 (containsKey!135 (t!4972 (toList!719 lt!29996)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!15295 (not res!37407)) b!69826))

(assert (= (and b!69826 res!37408) b!69827))

(declare-fun m!66357 () Bool)

(assert (=> b!69827 m!66357))

(assert (=> d!15017 d!15295))

(declare-fun d!15297 () Bool)

(declare-fun res!37409 () Bool)

(declare-fun e!45696 () Bool)

(assert (=> d!15297 (=> res!37409 e!45696)))

(assert (=> d!15297 (= res!37409 (and ((_ is Cons!1465) (toList!719 lt!29996)) (= (_1!1062 (h!2050 (toList!719 lt!29996))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!15297 (= (containsKey!135 (toList!719 lt!29996) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!45696)))

(declare-fun b!69828 () Bool)

(declare-fun e!45697 () Bool)

(assert (=> b!69828 (= e!45696 e!45697)))

(declare-fun res!37410 () Bool)

(assert (=> b!69828 (=> (not res!37410) (not e!45697))))

(assert (=> b!69828 (= res!37410 (and (or (not ((_ is Cons!1465) (toList!719 lt!29996))) (bvsle (_1!1062 (h!2050 (toList!719 lt!29996))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1465) (toList!719 lt!29996)) (bvslt (_1!1062 (h!2050 (toList!719 lt!29996))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!69829 () Bool)

(assert (=> b!69829 (= e!45697 (containsKey!135 (t!4972 (toList!719 lt!29996)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!15297 (not res!37409)) b!69828))

(assert (= (and b!69828 res!37410) b!69829))

(assert (=> b!69829 m!64521))

(declare-fun m!66359 () Bool)

(assert (=> b!69829 m!66359))

(assert (=> d!14871 d!15297))

(declare-fun d!15299 () Bool)

(declare-fun e!45698 () Bool)

(assert (=> d!15299 e!45698))

(declare-fun res!37411 () Bool)

(assert (=> d!15299 (=> res!37411 e!45698)))

(declare-fun lt!30747 () Bool)

(assert (=> d!15299 (= res!37411 (not lt!30747))))

(declare-fun lt!30746 () Bool)

(assert (=> d!15299 (= lt!30747 lt!30746)))

(declare-fun lt!30748 () Unit!1919)

(declare-fun e!45699 () Unit!1919)

(assert (=> d!15299 (= lt!30748 e!45699)))

(declare-fun c!10048 () Bool)

(assert (=> d!15299 (= c!10048 lt!30746)))

(assert (=> d!15299 (= lt!30746 (containsKey!135 (toList!719 lt!30403) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!15299 (= (contains!714 lt!30403 #b1000000000000000000000000000000000000000000000000000000000000000) lt!30747)))

(declare-fun b!69830 () Bool)

(declare-fun lt!30749 () Unit!1919)

(assert (=> b!69830 (= e!45699 lt!30749)))

(assert (=> b!69830 (= lt!30749 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 lt!30403) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!69830 (isDefined!84 (getValueByKey!131 (toList!719 lt!30403) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69831 () Bool)

(declare-fun Unit!1964 () Unit!1919)

(assert (=> b!69831 (= e!45699 Unit!1964)))

(declare-fun b!69832 () Bool)

(assert (=> b!69832 (= e!45698 (isDefined!84 (getValueByKey!131 (toList!719 lt!30403) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15299 c!10048) b!69830))

(assert (= (and d!15299 (not c!10048)) b!69831))

(assert (= (and d!15299 (not res!37411)) b!69832))

(declare-fun m!66361 () Bool)

(assert (=> d!15299 m!66361))

(declare-fun m!66363 () Bool)

(assert (=> b!69830 m!66363))

(assert (=> b!69830 m!66309))

(assert (=> b!69830 m!66309))

(declare-fun m!66365 () Bool)

(assert (=> b!69830 m!66365))

(assert (=> b!69832 m!66309))

(assert (=> b!69832 m!66309))

(assert (=> b!69832 m!66365))

(assert (=> bm!5911 d!15299))

(declare-fun d!15301 () Bool)

(declare-fun lt!30750 () Bool)

(assert (=> d!15301 (= lt!30750 (select (content!73 (toList!719 lt!30307)) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun e!45701 () Bool)

(assert (=> d!15301 (= lt!30750 e!45701)))

(declare-fun res!37412 () Bool)

(assert (=> d!15301 (=> (not res!37412) (not e!45701))))

(assert (=> d!15301 (= res!37412 ((_ is Cons!1465) (toList!719 lt!30307)))))

(assert (=> d!15301 (= (contains!716 (toList!719 lt!30307) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992))))) lt!30750)))

(declare-fun b!69833 () Bool)

(declare-fun e!45700 () Bool)

(assert (=> b!69833 (= e!45701 e!45700)))

(declare-fun res!37413 () Bool)

(assert (=> b!69833 (=> res!37413 e!45700)))

(assert (=> b!69833 (= res!37413 (= (h!2050 (toList!719 lt!30307)) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun b!69834 () Bool)

(assert (=> b!69834 (= e!45700 (contains!716 (t!4972 (toList!719 lt!30307)) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))))

(assert (= (and d!15301 res!37412) b!69833))

(assert (= (and b!69833 (not res!37413)) b!69834))

(declare-fun m!66367 () Bool)

(assert (=> d!15301 m!66367))

(declare-fun m!66369 () Bool)

(assert (=> d!15301 m!66369))

(declare-fun m!66371 () Bool)

(assert (=> b!69834 m!66371))

(assert (=> b!69130 d!15301))

(declare-fun b!69835 () Bool)

(declare-fun e!45705 () Bool)

(declare-fun e!45704 () Bool)

(assert (=> b!69835 (= e!45705 e!45704)))

(declare-fun c!10049 () Bool)

(assert (=> b!69835 (= c!10049 (validKeyInArray!0 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!69836 () Bool)

(declare-fun call!5995 () Bool)

(assert (=> b!69836 (= e!45704 call!5995)))

(declare-fun b!69837 () Bool)

(declare-fun e!45702 () Bool)

(assert (=> b!69837 (= e!45702 e!45705)))

(declare-fun res!37416 () Bool)

(assert (=> b!69837 (=> (not res!37416) (not e!45705))))

(declare-fun e!45703 () Bool)

(assert (=> b!69837 (= res!37416 (not e!45703))))

(declare-fun res!37414 () Bool)

(assert (=> b!69837 (=> (not res!37414) (not e!45703))))

(assert (=> b!69837 (= res!37414 (validKeyInArray!0 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun d!15303 () Bool)

(declare-fun res!37415 () Bool)

(assert (=> d!15303 (=> res!37415 e!45702)))

(assert (=> d!15303 (= res!37415 (bvsge (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2077 (_keys!3812 (v!2494 (underlying!253 thiss!992))))))))

(assert (=> d!15303 (= (arrayNoDuplicates!0 (_keys!3812 (v!2494 (underlying!253 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!9767 (Cons!1466 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!9709 (Cons!1466 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) Nil!1467) Nil!1467)) (ite c!9709 (Cons!1466 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) Nil!1467) Nil!1467))) e!45702)))

(declare-fun b!69838 () Bool)

(assert (=> b!69838 (= e!45704 call!5995)))

(declare-fun b!69839 () Bool)

(assert (=> b!69839 (= e!45703 (contains!715 (ite c!9767 (Cons!1466 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!9709 (Cons!1466 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) Nil!1467) Nil!1467)) (ite c!9709 (Cons!1466 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) Nil!1467) Nil!1467)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun bm!5992 () Bool)

(assert (=> bm!5992 (= call!5995 (arrayNoDuplicates!0 (_keys!3812 (v!2494 (underlying!253 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!10049 (Cons!1466 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!9767 (Cons!1466 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!9709 (Cons!1466 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) Nil!1467) Nil!1467)) (ite c!9709 (Cons!1466 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) Nil!1467) Nil!1467))) (ite c!9767 (Cons!1466 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!9709 (Cons!1466 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) Nil!1467) Nil!1467)) (ite c!9709 (Cons!1466 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) Nil!1467) Nil!1467)))))))

(assert (= (and d!15303 (not res!37415)) b!69837))

(assert (= (and b!69837 res!37414) b!69839))

(assert (= (and b!69837 res!37416) b!69835))

(assert (= (and b!69835 c!10049) b!69836))

(assert (= (and b!69835 (not c!10049)) b!69838))

(assert (= (or b!69836 b!69838) bm!5992))

(declare-fun m!66373 () Bool)

(assert (=> b!69835 m!66373))

(assert (=> b!69835 m!66373))

(declare-fun m!66375 () Bool)

(assert (=> b!69835 m!66375))

(assert (=> b!69837 m!66373))

(assert (=> b!69837 m!66373))

(assert (=> b!69837 m!66375))

(assert (=> b!69839 m!66373))

(assert (=> b!69839 m!66373))

(declare-fun m!66377 () Bool)

(assert (=> b!69839 m!66377))

(assert (=> bm!5992 m!66373))

(declare-fun m!66379 () Bool)

(assert (=> bm!5992 m!66379))

(assert (=> bm!5864 d!15303))

(assert (=> d!14867 d!14791))

(declare-fun d!15305 () Bool)

(declare-fun lt!30751 () Bool)

(assert (=> d!15305 (= lt!30751 (select (content!73 lt!30042) (tuple2!2103 (_1!1062 lt!29892) (_2!1062 lt!29892))))))

(declare-fun e!45707 () Bool)

(assert (=> d!15305 (= lt!30751 e!45707)))

(declare-fun res!37417 () Bool)

(assert (=> d!15305 (=> (not res!37417) (not e!45707))))

(assert (=> d!15305 (= res!37417 ((_ is Cons!1465) lt!30042))))

(assert (=> d!15305 (= (contains!716 lt!30042 (tuple2!2103 (_1!1062 lt!29892) (_2!1062 lt!29892))) lt!30751)))

(declare-fun b!69840 () Bool)

(declare-fun e!45706 () Bool)

(assert (=> b!69840 (= e!45707 e!45706)))

(declare-fun res!37418 () Bool)

(assert (=> b!69840 (=> res!37418 e!45706)))

(assert (=> b!69840 (= res!37418 (= (h!2050 lt!30042) (tuple2!2103 (_1!1062 lt!29892) (_2!1062 lt!29892))))))

(declare-fun b!69841 () Bool)

(assert (=> b!69841 (= e!45706 (contains!716 (t!4972 lt!30042) (tuple2!2103 (_1!1062 lt!29892) (_2!1062 lt!29892))))))

(assert (= (and d!15305 res!37417) b!69840))

(assert (= (and b!69840 (not res!37418)) b!69841))

(declare-fun m!66381 () Bool)

(assert (=> d!15305 m!66381))

(declare-fun m!66383 () Bool)

(assert (=> d!15305 m!66383))

(declare-fun m!66385 () Bool)

(assert (=> b!69841 m!66385))

(assert (=> b!69177 d!15305))

(declare-fun d!15307 () Bool)

(assert (=> d!15307 (= ($colon$colon!64 e!45233 (ite c!9821 (h!2050 (toList!719 (+!90 lt!29889 lt!29892))) (tuple2!2103 (_1!1062 lt!29893) (_2!1062 lt!29893)))) (Cons!1465 (ite c!9821 (h!2050 (toList!719 (+!90 lt!29889 lt!29892))) (tuple2!2103 (_1!1062 lt!29893) (_2!1062 lt!29893))) e!45233))))

(assert (=> bm!5887 d!15307))

(declare-fun d!15309 () Bool)

(assert (=> d!15309 (= (validKeyInArray!0 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!68961 d!15309))

(declare-fun b!69844 () Bool)

(declare-fun e!45709 () Option!137)

(assert (=> b!69844 (= e!45709 (getValueByKey!131 (t!4972 (t!4972 lt!30050)) (_1!1062 lt!29893)))))

(declare-fun b!69843 () Bool)

(declare-fun e!45708 () Option!137)

(assert (=> b!69843 (= e!45708 e!45709)))

(declare-fun c!10051 () Bool)

(assert (=> b!69843 (= c!10051 (and ((_ is Cons!1465) (t!4972 lt!30050)) (not (= (_1!1062 (h!2050 (t!4972 lt!30050))) (_1!1062 lt!29893)))))))

(declare-fun b!69845 () Bool)

(assert (=> b!69845 (= e!45709 None!135)))

(declare-fun b!69842 () Bool)

(assert (=> b!69842 (= e!45708 (Some!136 (_2!1062 (h!2050 (t!4972 lt!30050)))))))

(declare-fun d!15311 () Bool)

(declare-fun c!10050 () Bool)

(assert (=> d!15311 (= c!10050 (and ((_ is Cons!1465) (t!4972 lt!30050)) (= (_1!1062 (h!2050 (t!4972 lt!30050))) (_1!1062 lt!29893))))))

(assert (=> d!15311 (= (getValueByKey!131 (t!4972 lt!30050) (_1!1062 lt!29893)) e!45708)))

(assert (= (and d!15311 c!10050) b!69842))

(assert (= (and d!15311 (not c!10050)) b!69843))

(assert (= (and b!69843 c!10051) b!69844))

(assert (= (and b!69843 (not c!10051)) b!69845))

(declare-fun m!66387 () Bool)

(assert (=> b!69844 m!66387))

(assert (=> b!69043 d!15311))

(declare-fun d!15313 () Bool)

(declare-fun e!45710 () Bool)

(assert (=> d!15313 e!45710))

(declare-fun res!37420 () Bool)

(assert (=> d!15313 (=> (not res!37420) (not e!45710))))

(declare-fun lt!30754 () ListLongMap!1407)

(assert (=> d!15313 (= res!37420 (contains!714 lt!30754 (_1!1062 (ite (or c!9772 c!9775) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))))))))

(declare-fun lt!30755 () List!1469)

(assert (=> d!15313 (= lt!30754 (ListLongMap!1408 lt!30755))))

(declare-fun lt!30752 () Unit!1919)

(declare-fun lt!30753 () Unit!1919)

(assert (=> d!15313 (= lt!30752 lt!30753)))

(assert (=> d!15313 (= (getValueByKey!131 lt!30755 (_1!1062 (ite (or c!9772 c!9775) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))))) (Some!136 (_2!1062 (ite (or c!9772 c!9775) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))))))))

(assert (=> d!15313 (= lt!30753 (lemmaContainsTupThenGetReturnValue!48 lt!30755 (_1!1062 (ite (or c!9772 c!9775) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))) (_2!1062 (ite (or c!9772 c!9775) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))))))))

(assert (=> d!15313 (= lt!30755 (insertStrictlySorted!51 (toList!719 (ite c!9772 call!5877 (ite c!9775 call!5871 call!5873))) (_1!1062 (ite (or c!9772 c!9775) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))) (_2!1062 (ite (or c!9772 c!9775) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))))))))

(assert (=> d!15313 (= (+!90 (ite c!9772 call!5877 (ite c!9775 call!5871 call!5873)) (ite (or c!9772 c!9775) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))) lt!30754)))

(declare-fun b!69846 () Bool)

(declare-fun res!37419 () Bool)

(assert (=> b!69846 (=> (not res!37419) (not e!45710))))

(assert (=> b!69846 (= res!37419 (= (getValueByKey!131 (toList!719 lt!30754) (_1!1062 (ite (or c!9772 c!9775) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))))) (Some!136 (_2!1062 (ite (or c!9772 c!9775) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))))))))

(declare-fun b!69847 () Bool)

(assert (=> b!69847 (= e!45710 (contains!716 (toList!719 lt!30754) (ite (or c!9772 c!9775) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))))))

(assert (= (and d!15313 res!37420) b!69846))

(assert (= (and b!69846 res!37419) b!69847))

(declare-fun m!66389 () Bool)

(assert (=> d!15313 m!66389))

(declare-fun m!66391 () Bool)

(assert (=> d!15313 m!66391))

(declare-fun m!66393 () Bool)

(assert (=> d!15313 m!66393))

(declare-fun m!66395 () Bool)

(assert (=> d!15313 m!66395))

(declare-fun m!66397 () Bool)

(assert (=> b!69846 m!66397))

(declare-fun m!66399 () Bool)

(assert (=> b!69847 m!66399))

(assert (=> bm!5869 d!15313))

(declare-fun d!15315 () Bool)

(assert (=> d!15315 (= (map!1140 (_2!1061 lt!30497)) (getCurrentListMap!417 (_keys!3812 (_2!1061 lt!30497)) (_values!2151 (_2!1061 lt!30497)) (mask!6113 (_2!1061 lt!30497)) (extraKeys!2035 (_2!1061 lt!30497)) (zeroValue!2074 (_2!1061 lt!30497)) (minValue!2074 (_2!1061 lt!30497)) #b00000000000000000000000000000000 (defaultEntry!2168 (_2!1061 lt!30497))))))

(declare-fun bs!2997 () Bool)

(assert (= bs!2997 d!15315))

(declare-fun m!66401 () Bool)

(assert (=> bs!2997 m!66401))

(assert (=> b!69297 d!15315))

(declare-fun d!15317 () Bool)

(declare-fun e!45711 () Bool)

(assert (=> d!15317 e!45711))

(declare-fun res!37422 () Bool)

(assert (=> d!15317 (=> (not res!37422) (not e!45711))))

(declare-fun lt!30758 () ListLongMap!1407)

(assert (=> d!15317 (= res!37422 (contains!714 lt!30758 (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))

(declare-fun lt!30759 () List!1469)

(assert (=> d!15317 (= lt!30758 (ListLongMap!1408 lt!30759))))

(declare-fun lt!30756 () Unit!1919)

(declare-fun lt!30757 () Unit!1919)

(assert (=> d!15317 (= lt!30756 lt!30757)))

(assert (=> d!15317 (= (getValueByKey!131 lt!30759 (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))) (Some!136 (_2!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))

(assert (=> d!15317 (= lt!30757 (lemmaContainsTupThenGetReturnValue!48 lt!30759 (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)) (_2!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))

(assert (=> d!15317 (= lt!30759 (insertStrictlySorted!51 (toList!719 (map!1140 newMap!16)) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)) (_2!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))

(assert (=> d!15317 (= (+!90 (map!1140 newMap!16) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)) lt!30758)))

(declare-fun b!69848 () Bool)

(declare-fun res!37421 () Bool)

(assert (=> b!69848 (=> (not res!37421) (not e!45711))))

(assert (=> b!69848 (= res!37421 (= (getValueByKey!131 (toList!719 lt!30758) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))) (Some!136 (_2!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))))))

(declare-fun b!69849 () Bool)

(assert (=> b!69849 (= e!45711 (contains!716 (toList!719 lt!30758) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))))

(assert (= (and d!15317 res!37422) b!69848))

(assert (= (and b!69848 res!37421) b!69849))

(declare-fun m!66403 () Bool)

(assert (=> d!15317 m!66403))

(declare-fun m!66405 () Bool)

(assert (=> d!15317 m!66405))

(declare-fun m!66407 () Bool)

(assert (=> d!15317 m!66407))

(declare-fun m!66409 () Bool)

(assert (=> d!15317 m!66409))

(declare-fun m!66411 () Bool)

(assert (=> b!69848 m!66411))

(declare-fun m!66413 () Bool)

(assert (=> b!69849 m!66413))

(assert (=> b!69297 d!15317))

(assert (=> b!69297 d!14777))

(declare-fun lt!30760 () Bool)

(declare-fun d!15319 () Bool)

(assert (=> d!15319 (= lt!30760 (select (content!73 (toList!719 lt!30250)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))))

(declare-fun e!45713 () Bool)

(assert (=> d!15319 (= lt!30760 e!45713)))

(declare-fun res!37423 () Bool)

(assert (=> d!15319 (=> (not res!37423) (not e!45713))))

(assert (=> d!15319 (= res!37423 ((_ is Cons!1465) (toList!719 lt!30250)))))

(assert (=> d!15319 (= (contains!716 (toList!719 lt!30250) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)) lt!30760)))

(declare-fun b!69850 () Bool)

(declare-fun e!45712 () Bool)

(assert (=> b!69850 (= e!45713 e!45712)))

(declare-fun res!37424 () Bool)

(assert (=> b!69850 (=> res!37424 e!45712)))

(assert (=> b!69850 (= res!37424 (= (h!2050 (toList!719 lt!30250)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))))

(declare-fun b!69851 () Bool)

(assert (=> b!69851 (= e!45712 (contains!716 (t!4972 (toList!719 lt!30250)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))))

(assert (= (and d!15319 res!37423) b!69850))

(assert (= (and b!69850 (not res!37424)) b!69851))

(declare-fun m!66415 () Bool)

(assert (=> d!15319 m!66415))

(declare-fun m!66417 () Bool)

(assert (=> d!15319 m!66417))

(declare-fun m!66419 () Bool)

(assert (=> b!69851 m!66419))

(assert (=> b!69031 d!15319))

(declare-fun b!69854 () Bool)

(declare-fun e!45715 () Option!137)

(assert (=> b!69854 (= e!45715 (getValueByKey!131 (t!4972 (t!4972 (toList!719 lt!30049))) (_1!1062 lt!29893)))))

(declare-fun b!69853 () Bool)

(declare-fun e!45714 () Option!137)

(assert (=> b!69853 (= e!45714 e!45715)))

(declare-fun c!10053 () Bool)

(assert (=> b!69853 (= c!10053 (and ((_ is Cons!1465) (t!4972 (toList!719 lt!30049))) (not (= (_1!1062 (h!2050 (t!4972 (toList!719 lt!30049)))) (_1!1062 lt!29893)))))))

(declare-fun b!69855 () Bool)

(assert (=> b!69855 (= e!45715 None!135)))

(declare-fun b!69852 () Bool)

(assert (=> b!69852 (= e!45714 (Some!136 (_2!1062 (h!2050 (t!4972 (toList!719 lt!30049))))))))

(declare-fun d!15321 () Bool)

(declare-fun c!10052 () Bool)

(assert (=> d!15321 (= c!10052 (and ((_ is Cons!1465) (t!4972 (toList!719 lt!30049))) (= (_1!1062 (h!2050 (t!4972 (toList!719 lt!30049)))) (_1!1062 lt!29893))))))

(assert (=> d!15321 (= (getValueByKey!131 (t!4972 (toList!719 lt!30049)) (_1!1062 lt!29893)) e!45714)))

(assert (= (and d!15321 c!10052) b!69852))

(assert (= (and d!15321 (not c!10052)) b!69853))

(assert (= (and b!69853 c!10053) b!69854))

(assert (= (and b!69853 (not c!10053)) b!69855))

(declare-fun m!66421 () Bool)

(assert (=> b!69854 m!66421))

(assert (=> b!69109 d!15321))

(declare-fun d!15323 () Bool)

(assert (=> d!15323 (= (apply!73 lt!30403 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1127 (getValueByKey!131 (toList!719 lt!30403) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2998 () Bool)

(assert (= bs!2998 d!15323))

(declare-fun m!66423 () Bool)

(assert (=> bs!2998 m!66423))

(assert (=> bs!2998 m!66423))

(declare-fun m!66425 () Bool)

(assert (=> bs!2998 m!66425))

(assert (=> b!69238 d!15323))

(assert (=> b!68924 d!14787))

(declare-fun d!15325 () Bool)

(assert (=> d!15325 (contains!714 (getCurrentListMap!417 (_keys!3812 newMap!16) lt!30125 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) (select (arr!1841 (_keys!3812 newMap!16)) (index!3066 lt!30149)))))

(assert (=> d!15325 true))

(declare-fun _$16!90 () Unit!1919)

(assert (=> d!15325 (= (choose!382 (_keys!3812 newMap!16) lt!30125 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (index!3066 lt!30149) (defaultEntry!2168 newMap!16)) _$16!90)))

(declare-fun bs!2999 () Bool)

(assert (= bs!2999 d!15325))

(assert (=> bs!2999 m!64853))

(assert (=> bs!2999 m!64681))

(assert (=> bs!2999 m!64853))

(assert (=> bs!2999 m!64681))

(assert (=> bs!2999 m!64855))

(assert (=> d!14847 d!15325))

(assert (=> d!14847 d!15083))

(declare-fun d!15327 () Bool)

(assert (=> d!15327 (= (inRange!0 (ite c!9870 (index!3065 lt!30385) (index!3068 lt!30385)) (mask!6113 newMap!16)) (and (bvsge (ite c!9870 (index!3065 lt!30385) (index!3068 lt!30385)) #b00000000000000000000000000000000) (bvslt (ite c!9870 (index!3065 lt!30385) (index!3068 lt!30385)) (bvadd (mask!6113 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!5909 d!15327))

(declare-fun d!15329 () Bool)

(assert (=> d!15329 (isDefined!84 (getValueByKey!131 (toList!719 lt!30049) (_1!1062 lt!29893)))))

(declare-fun lt!30761 () Unit!1919)

(assert (=> d!15329 (= lt!30761 (choose!387 (toList!719 lt!30049) (_1!1062 lt!29893)))))

(declare-fun e!45716 () Bool)

(assert (=> d!15329 e!45716))

(declare-fun res!37425 () Bool)

(assert (=> d!15329 (=> (not res!37425) (not e!45716))))

(assert (=> d!15329 (= res!37425 (isStrictlySorted!290 (toList!719 lt!30049)))))

(assert (=> d!15329 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 lt!30049) (_1!1062 lt!29893)) lt!30761)))

(declare-fun b!69856 () Bool)

(assert (=> b!69856 (= e!45716 (containsKey!135 (toList!719 lt!30049) (_1!1062 lt!29893)))))

(assert (= (and d!15329 res!37425) b!69856))

(assert (=> d!15329 m!64635))

(assert (=> d!15329 m!64635))

(assert (=> d!15329 m!65049))

(declare-fun m!66427 () Bool)

(assert (=> d!15329 m!66427))

(declare-fun m!66429 () Bool)

(assert (=> d!15329 m!66429))

(assert (=> b!69856 m!65045))

(assert (=> b!69038 d!15329))

(assert (=> b!69038 d!15205))

(assert (=> b!69038 d!14939))

(declare-fun d!15331 () Bool)

(declare-fun e!45717 () Bool)

(assert (=> d!15331 e!45717))

(declare-fun res!37426 () Bool)

(assert (=> d!15331 (=> res!37426 e!45717)))

(declare-fun lt!30763 () Bool)

(assert (=> d!15331 (= res!37426 (not lt!30763))))

(declare-fun lt!30762 () Bool)

(assert (=> d!15331 (= lt!30763 lt!30762)))

(declare-fun lt!30764 () Unit!1919)

(declare-fun e!45718 () Unit!1919)

(assert (=> d!15331 (= lt!30764 e!45718)))

(declare-fun c!10054 () Bool)

(assert (=> d!15331 (= c!10054 lt!30762)))

(assert (=> d!15331 (= lt!30762 (containsKey!135 (toList!719 lt!30307) (_1!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> d!15331 (= (contains!714 lt!30307 (_1!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))) lt!30763)))

(declare-fun b!69857 () Bool)

(declare-fun lt!30765 () Unit!1919)

(assert (=> b!69857 (= e!45718 lt!30765)))

(assert (=> b!69857 (= lt!30765 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 lt!30307) (_1!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> b!69857 (isDefined!84 (getValueByKey!131 (toList!719 lt!30307) (_1!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!69858 () Bool)

(declare-fun Unit!1965 () Unit!1919)

(assert (=> b!69858 (= e!45718 Unit!1965)))

(declare-fun b!69859 () Bool)

(assert (=> b!69859 (= e!45717 (isDefined!84 (getValueByKey!131 (toList!719 lt!30307) (_1!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(assert (= (and d!15331 c!10054) b!69857))

(assert (= (and d!15331 (not c!10054)) b!69858))

(assert (= (and d!15331 (not res!37426)) b!69859))

(declare-fun m!66431 () Bool)

(assert (=> d!15331 m!66431))

(declare-fun m!66433 () Bool)

(assert (=> b!69857 m!66433))

(assert (=> b!69857 m!65193))

(assert (=> b!69857 m!65193))

(declare-fun m!66435 () Bool)

(assert (=> b!69857 m!66435))

(assert (=> b!69859 m!65193))

(assert (=> b!69859 m!65193))

(assert (=> b!69859 m!66435))

(assert (=> d!14949 d!15331))

(declare-fun b!69862 () Bool)

(declare-fun e!45720 () Option!137)

(assert (=> b!69862 (= e!45720 (getValueByKey!131 (t!4972 lt!30308) (_1!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!69861 () Bool)

(declare-fun e!45719 () Option!137)

(assert (=> b!69861 (= e!45719 e!45720)))

(declare-fun c!10056 () Bool)

(assert (=> b!69861 (= c!10056 (and ((_ is Cons!1465) lt!30308) (not (= (_1!1062 (h!2050 lt!30308)) (_1!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))))

(declare-fun b!69863 () Bool)

(assert (=> b!69863 (= e!45720 None!135)))

(declare-fun b!69860 () Bool)

(assert (=> b!69860 (= e!45719 (Some!136 (_2!1062 (h!2050 lt!30308))))))

(declare-fun d!15333 () Bool)

(declare-fun c!10055 () Bool)

(assert (=> d!15333 (= c!10055 (and ((_ is Cons!1465) lt!30308) (= (_1!1062 (h!2050 lt!30308)) (_1!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> d!15333 (= (getValueByKey!131 lt!30308 (_1!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))) e!45719)))

(assert (= (and d!15333 c!10055) b!69860))

(assert (= (and d!15333 (not c!10055)) b!69861))

(assert (= (and b!69861 c!10056) b!69862))

(assert (= (and b!69861 (not c!10056)) b!69863))

(declare-fun m!66437 () Bool)

(assert (=> b!69862 m!66437))

(assert (=> d!14949 d!15333))

(declare-fun d!15335 () Bool)

(assert (=> d!15335 (= (getValueByKey!131 lt!30308 (_1!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))) (Some!136 (_2!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun lt!30766 () Unit!1919)

(assert (=> d!15335 (= lt!30766 (choose!386 lt!30308 (_1!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992))))) (_2!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun e!45721 () Bool)

(assert (=> d!15335 e!45721))

(declare-fun res!37427 () Bool)

(assert (=> d!15335 (=> (not res!37427) (not e!45721))))

(assert (=> d!15335 (= res!37427 (isStrictlySorted!290 lt!30308))))

(assert (=> d!15335 (= (lemmaContainsTupThenGetReturnValue!48 lt!30308 (_1!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992))))) (_2!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))) lt!30766)))

(declare-fun b!69864 () Bool)

(declare-fun res!37428 () Bool)

(assert (=> b!69864 (=> (not res!37428) (not e!45721))))

(assert (=> b!69864 (= res!37428 (containsKey!135 lt!30308 (_1!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!69865 () Bool)

(assert (=> b!69865 (= e!45721 (contains!716 lt!30308 (tuple2!2103 (_1!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992))))) (_2!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(assert (= (and d!15335 res!37427) b!69864))

(assert (= (and b!69864 res!37428) b!69865))

(assert (=> d!15335 m!65187))

(declare-fun m!66439 () Bool)

(assert (=> d!15335 m!66439))

(declare-fun m!66441 () Bool)

(assert (=> d!15335 m!66441))

(declare-fun m!66443 () Bool)

(assert (=> b!69864 m!66443))

(declare-fun m!66445 () Bool)

(assert (=> b!69865 m!66445))

(assert (=> d!14949 d!15335))

(declare-fun b!69866 () Bool)

(declare-fun e!45724 () List!1469)

(assert (=> b!69866 (= e!45724 (insertStrictlySorted!51 (t!4972 (toList!719 call!5787)) (_1!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992))))) (_2!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun d!15337 () Bool)

(declare-fun e!45722 () Bool)

(assert (=> d!15337 e!45722))

(declare-fun res!37430 () Bool)

(assert (=> d!15337 (=> (not res!37430) (not e!45722))))

(declare-fun lt!30767 () List!1469)

(assert (=> d!15337 (= res!37430 (isStrictlySorted!290 lt!30767))))

(declare-fun e!45726 () List!1469)

(assert (=> d!15337 (= lt!30767 e!45726)))

(declare-fun c!10057 () Bool)

(assert (=> d!15337 (= c!10057 (and ((_ is Cons!1465) (toList!719 call!5787)) (bvslt (_1!1062 (h!2050 (toList!719 call!5787))) (_1!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> d!15337 (isStrictlySorted!290 (toList!719 call!5787))))

(assert (=> d!15337 (= (insertStrictlySorted!51 (toList!719 call!5787) (_1!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992))))) (_2!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))) lt!30767)))

(declare-fun c!10059 () Bool)

(declare-fun c!10060 () Bool)

(declare-fun b!69867 () Bool)

(assert (=> b!69867 (= e!45724 (ite c!10060 (t!4972 (toList!719 call!5787)) (ite c!10059 (Cons!1465 (h!2050 (toList!719 call!5787)) (t!4972 (toList!719 call!5787))) Nil!1466)))))

(declare-fun bm!5993 () Bool)

(declare-fun call!5998 () List!1469)

(declare-fun call!5997 () List!1469)

(assert (=> bm!5993 (= call!5998 call!5997)))

(declare-fun b!69868 () Bool)

(declare-fun e!45725 () List!1469)

(assert (=> b!69868 (= e!45725 call!5998)))

(declare-fun bm!5994 () Bool)

(declare-fun call!5996 () List!1469)

(assert (=> bm!5994 (= call!5997 call!5996)))

(declare-fun bm!5995 () Bool)

(assert (=> bm!5995 (= call!5996 ($colon$colon!64 e!45724 (ite c!10057 (h!2050 (toList!719 call!5787)) (tuple2!2103 (_1!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992))))) (_2!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))))

(declare-fun c!10058 () Bool)

(assert (=> bm!5995 (= c!10058 c!10057)))

(declare-fun b!69869 () Bool)

(declare-fun e!45723 () List!1469)

(assert (=> b!69869 (= e!45726 e!45723)))

(assert (=> b!69869 (= c!10060 (and ((_ is Cons!1465) (toList!719 call!5787)) (= (_1!1062 (h!2050 (toList!719 call!5787))) (_1!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(declare-fun b!69870 () Bool)

(assert (=> b!69870 (= e!45722 (contains!716 lt!30767 (tuple2!2103 (_1!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992))))) (_2!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(declare-fun b!69871 () Bool)

(assert (=> b!69871 (= e!45726 call!5996)))

(declare-fun b!69872 () Bool)

(assert (=> b!69872 (= e!45725 call!5998)))

(declare-fun b!69873 () Bool)

(declare-fun res!37429 () Bool)

(assert (=> b!69873 (=> (not res!37429) (not e!45722))))

(assert (=> b!69873 (= res!37429 (containsKey!135 lt!30767 (_1!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!69874 () Bool)

(assert (=> b!69874 (= e!45723 call!5997)))

(declare-fun b!69875 () Bool)

(assert (=> b!69875 (= c!10059 (and ((_ is Cons!1465) (toList!719 call!5787)) (bvsgt (_1!1062 (h!2050 (toList!719 call!5787))) (_1!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> b!69875 (= e!45723 e!45725)))

(assert (= (and d!15337 c!10057) b!69871))

(assert (= (and d!15337 (not c!10057)) b!69869))

(assert (= (and b!69869 c!10060) b!69874))

(assert (= (and b!69869 (not c!10060)) b!69875))

(assert (= (and b!69875 c!10059) b!69868))

(assert (= (and b!69875 (not c!10059)) b!69872))

(assert (= (or b!69868 b!69872) bm!5993))

(assert (= (or b!69874 bm!5993) bm!5994))

(assert (= (or b!69871 bm!5994) bm!5995))

(assert (= (and bm!5995 c!10058) b!69866))

(assert (= (and bm!5995 (not c!10058)) b!69867))

(assert (= (and d!15337 res!37430) b!69873))

(assert (= (and b!69873 res!37429) b!69870))

(declare-fun m!66447 () Bool)

(assert (=> b!69870 m!66447))

(declare-fun m!66449 () Bool)

(assert (=> d!15337 m!66449))

(declare-fun m!66451 () Bool)

(assert (=> d!15337 m!66451))

(declare-fun m!66453 () Bool)

(assert (=> b!69866 m!66453))

(declare-fun m!66455 () Bool)

(assert (=> bm!5995 m!66455))

(declare-fun m!66457 () Bool)

(assert (=> b!69873 m!66457))

(assert (=> d!14949 d!15337))

(declare-fun d!15339 () Bool)

(declare-fun e!45727 () Bool)

(assert (=> d!15339 e!45727))

(declare-fun res!37431 () Bool)

(assert (=> d!15339 (=> res!37431 e!45727)))

(declare-fun lt!30769 () Bool)

(assert (=> d!15339 (= res!37431 (not lt!30769))))

(declare-fun lt!30768 () Bool)

(assert (=> d!15339 (= lt!30769 lt!30768)))

(declare-fun lt!30770 () Unit!1919)

(declare-fun e!45728 () Unit!1919)

(assert (=> d!15339 (= lt!30770 e!45728)))

(declare-fun c!10061 () Bool)

(assert (=> d!15339 (= c!10061 lt!30768)))

(assert (=> d!15339 (= lt!30768 (containsKey!135 (toList!719 lt!29987) lt!29990))))

(assert (=> d!15339 (= (contains!714 lt!29987 lt!29990) lt!30769)))

(declare-fun b!69876 () Bool)

(declare-fun lt!30771 () Unit!1919)

(assert (=> b!69876 (= e!45728 lt!30771)))

(assert (=> b!69876 (= lt!30771 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 lt!29987) lt!29990))))

(assert (=> b!69876 (isDefined!84 (getValueByKey!131 (toList!719 lt!29987) lt!29990))))

(declare-fun b!69877 () Bool)

(declare-fun Unit!1966 () Unit!1919)

(assert (=> b!69877 (= e!45728 Unit!1966)))

(declare-fun b!69878 () Bool)

(assert (=> b!69878 (= e!45727 (isDefined!84 (getValueByKey!131 (toList!719 lt!29987) lt!29990)))))

(assert (= (and d!15339 c!10061) b!69876))

(assert (= (and d!15339 (not c!10061)) b!69877))

(assert (= (and d!15339 (not res!37431)) b!69878))

(declare-fun m!66459 () Bool)

(assert (=> d!15339 m!66459))

(declare-fun m!66461 () Bool)

(assert (=> b!69876 m!66461))

(assert (=> b!69876 m!65279))

(assert (=> b!69876 m!65279))

(declare-fun m!66463 () Bool)

(assert (=> b!69876 m!66463))

(assert (=> b!69878 m!65279))

(assert (=> b!69878 m!65279))

(assert (=> b!69878 m!66463))

(assert (=> d!14959 d!15339))

(declare-fun d!15341 () Bool)

(assert (=> d!15341 (= (apply!73 (+!90 lt!29987 (tuple2!2103 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))) lt!29990) (apply!73 lt!29987 lt!29990))))

(assert (=> d!15341 true))

(declare-fun _$34!792 () Unit!1919)

(assert (=> d!15341 (= (choose!388 lt!29987 lt!29982 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))) lt!29990) _$34!792)))

(declare-fun bs!3000 () Bool)

(assert (= bs!3000 d!15341))

(assert (=> bs!3000 m!64547))

(assert (=> bs!3000 m!64547))

(assert (=> bs!3000 m!64549))

(assert (=> bs!3000 m!64565))

(assert (=> d!14959 d!15341))

(assert (=> d!14959 d!14969))

(assert (=> d!14959 d!14973))

(assert (=> d!14959 d!14975))

(declare-fun d!15343 () Bool)

(assert (=> d!15343 (= (get!1127 (getValueByKey!131 (toList!719 lt!29996) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2498 (getValueByKey!131 (toList!719 lt!29996) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!14827 d!15343))

(assert (=> d!14827 d!15051))

(declare-fun d!15345 () Bool)

(assert (=> d!15345 (= (apply!73 lt!30183 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1127 (getValueByKey!131 (toList!719 lt!30183) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3001 () Bool)

(assert (= bs!3001 d!15345))

(declare-fun m!66465 () Bool)

(assert (=> bs!3001 m!66465))

(assert (=> bs!3001 m!66465))

(declare-fun m!66467 () Bool)

(assert (=> bs!3001 m!66467))

(assert (=> b!68896 d!15345))

(assert (=> bm!5929 d!14855))

(declare-fun d!15347 () Bool)

(assert (=> d!15347 (isDefined!84 (getValueByKey!131 (toList!719 lt!30029) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!30772 () Unit!1919)

(assert (=> d!15347 (= lt!30772 (choose!387 (toList!719 lt!30029) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!45729 () Bool)

(assert (=> d!15347 e!45729))

(declare-fun res!37432 () Bool)

(assert (=> d!15347 (=> (not res!37432) (not e!45729))))

(assert (=> d!15347 (= res!37432 (isStrictlySorted!290 (toList!719 lt!30029)))))

(assert (=> d!15347 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 lt!30029) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!30772)))

(declare-fun b!69879 () Bool)

(assert (=> b!69879 (= e!45729 (containsKey!135 (toList!719 lt!30029) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!15347 res!37432) b!69879))

(assert (=> d!15347 m!64521))

(assert (=> d!15347 m!64993))

(assert (=> d!15347 m!64993))

(assert (=> d!15347 m!64995))

(assert (=> d!15347 m!64521))

(declare-fun m!66469 () Bool)

(assert (=> d!15347 m!66469))

(declare-fun m!66471 () Bool)

(assert (=> d!15347 m!66471))

(assert (=> b!69879 m!64521))

(assert (=> b!69879 m!64989))

(assert (=> b!69027 d!15347))

(assert (=> b!69027 d!15217))

(assert (=> b!69027 d!15219))

(declare-fun d!15349 () Bool)

(declare-fun e!45730 () Bool)

(assert (=> d!15349 e!45730))

(declare-fun res!37433 () Bool)

(assert (=> d!15349 (=> res!37433 e!45730)))

(declare-fun lt!30774 () Bool)

(assert (=> d!15349 (= res!37433 (not lt!30774))))

(declare-fun lt!30773 () Bool)

(assert (=> d!15349 (= lt!30774 lt!30773)))

(declare-fun lt!30775 () Unit!1919)

(declare-fun e!45731 () Unit!1919)

(assert (=> d!15349 (= lt!30775 e!45731)))

(declare-fun c!10062 () Bool)

(assert (=> d!15349 (= c!10062 lt!30773)))

(assert (=> d!15349 (= lt!30773 (containsKey!135 (toList!719 lt!30250) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))

(assert (=> d!15349 (= (contains!714 lt!30250 (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))) lt!30774)))

(declare-fun b!69880 () Bool)

(declare-fun lt!30776 () Unit!1919)

(assert (=> b!69880 (= e!45731 lt!30776)))

(assert (=> b!69880 (= lt!30776 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 lt!30250) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))

(assert (=> b!69880 (isDefined!84 (getValueByKey!131 (toList!719 lt!30250) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))

(declare-fun b!69881 () Bool)

(declare-fun Unit!1967 () Unit!1919)

(assert (=> b!69881 (= e!45731 Unit!1967)))

(declare-fun b!69882 () Bool)

(assert (=> b!69882 (= e!45730 (isDefined!84 (getValueByKey!131 (toList!719 lt!30250) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))))))

(assert (= (and d!15349 c!10062) b!69880))

(assert (= (and d!15349 (not c!10062)) b!69881))

(assert (= (and d!15349 (not res!37433)) b!69882))

(declare-fun m!66473 () Bool)

(assert (=> d!15349 m!66473))

(declare-fun m!66475 () Bool)

(assert (=> b!69880 m!66475))

(assert (=> b!69880 m!65005))

(assert (=> b!69880 m!65005))

(declare-fun m!66477 () Bool)

(assert (=> b!69880 m!66477))

(assert (=> b!69882 m!65005))

(assert (=> b!69882 m!65005))

(assert (=> b!69882 m!66477))

(assert (=> d!14897 d!15349))

(declare-fun e!45733 () Option!137)

(declare-fun b!69885 () Bool)

(assert (=> b!69885 (= e!45733 (getValueByKey!131 (t!4972 lt!30251) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))

(declare-fun b!69884 () Bool)

(declare-fun e!45732 () Option!137)

(assert (=> b!69884 (= e!45732 e!45733)))

(declare-fun c!10064 () Bool)

(assert (=> b!69884 (= c!10064 (and ((_ is Cons!1465) lt!30251) (not (= (_1!1062 (h!2050 lt!30251)) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))))

(declare-fun b!69886 () Bool)

(assert (=> b!69886 (= e!45733 None!135)))

(declare-fun b!69883 () Bool)

(assert (=> b!69883 (= e!45732 (Some!136 (_2!1062 (h!2050 lt!30251))))))

(declare-fun c!10063 () Bool)

(declare-fun d!15351 () Bool)

(assert (=> d!15351 (= c!10063 (and ((_ is Cons!1465) lt!30251) (= (_1!1062 (h!2050 lt!30251)) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))))))

(assert (=> d!15351 (= (getValueByKey!131 lt!30251 (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))) e!45732)))

(assert (= (and d!15351 c!10063) b!69883))

(assert (= (and d!15351 (not c!10063)) b!69884))

(assert (= (and b!69884 c!10064) b!69885))

(assert (= (and b!69884 (not c!10064)) b!69886))

(declare-fun m!66479 () Bool)

(assert (=> b!69885 m!66479))

(assert (=> d!14897 d!15351))

(declare-fun d!15353 () Bool)

(assert (=> d!15353 (= (getValueByKey!131 lt!30251 (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))) (Some!136 (_2!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))

(declare-fun lt!30777 () Unit!1919)

(assert (=> d!15353 (= lt!30777 (choose!386 lt!30251 (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)) (_2!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))

(declare-fun e!45734 () Bool)

(assert (=> d!15353 e!45734))

(declare-fun res!37434 () Bool)

(assert (=> d!15353 (=> (not res!37434) (not e!45734))))

(assert (=> d!15353 (= res!37434 (isStrictlySorted!290 lt!30251))))

(assert (=> d!15353 (= (lemmaContainsTupThenGetReturnValue!48 lt!30251 (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)) (_2!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))) lt!30777)))

(declare-fun b!69887 () Bool)

(declare-fun res!37435 () Bool)

(assert (=> b!69887 (=> (not res!37435) (not e!45734))))

(assert (=> b!69887 (= res!37435 (containsKey!135 lt!30251 (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))

(declare-fun b!69888 () Bool)

(assert (=> b!69888 (= e!45734 (contains!716 lt!30251 (tuple2!2103 (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)) (_2!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))))))

(assert (= (and d!15353 res!37434) b!69887))

(assert (= (and b!69887 res!37435) b!69888))

(assert (=> d!15353 m!64999))

(declare-fun m!66481 () Bool)

(assert (=> d!15353 m!66481))

(declare-fun m!66483 () Bool)

(assert (=> d!15353 m!66483))

(declare-fun m!66485 () Bool)

(assert (=> b!69887 m!66485))

(declare-fun m!66487 () Bool)

(assert (=> b!69888 m!66487))

(assert (=> d!14897 d!15353))

(declare-fun e!45737 () List!1469)

(declare-fun b!69889 () Bool)

(assert (=> b!69889 (= e!45737 (insertStrictlySorted!51 (t!4972 (toList!719 lt!29889)) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)) (_2!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))

(declare-fun d!15355 () Bool)

(declare-fun e!45735 () Bool)

(assert (=> d!15355 e!45735))

(declare-fun res!37437 () Bool)

(assert (=> d!15355 (=> (not res!37437) (not e!45735))))

(declare-fun lt!30778 () List!1469)

(assert (=> d!15355 (= res!37437 (isStrictlySorted!290 lt!30778))))

(declare-fun e!45739 () List!1469)

(assert (=> d!15355 (= lt!30778 e!45739)))

(declare-fun c!10065 () Bool)

(assert (=> d!15355 (= c!10065 (and ((_ is Cons!1465) (toList!719 lt!29889)) (bvslt (_1!1062 (h!2050 (toList!719 lt!29889))) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))))))

(assert (=> d!15355 (isStrictlySorted!290 (toList!719 lt!29889))))

(assert (=> d!15355 (= (insertStrictlySorted!51 (toList!719 lt!29889) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)) (_2!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))) lt!30778)))

(declare-fun b!69890 () Bool)

(declare-fun c!10067 () Bool)

(declare-fun c!10068 () Bool)

(assert (=> b!69890 (= e!45737 (ite c!10068 (t!4972 (toList!719 lt!29889)) (ite c!10067 (Cons!1465 (h!2050 (toList!719 lt!29889)) (t!4972 (toList!719 lt!29889))) Nil!1466)))))

(declare-fun bm!5996 () Bool)

(declare-fun call!6001 () List!1469)

(declare-fun call!6000 () List!1469)

(assert (=> bm!5996 (= call!6001 call!6000)))

(declare-fun b!69891 () Bool)

(declare-fun e!45738 () List!1469)

(assert (=> b!69891 (= e!45738 call!6001)))

(declare-fun bm!5997 () Bool)

(declare-fun call!5999 () List!1469)

(assert (=> bm!5997 (= call!6000 call!5999)))

(declare-fun bm!5998 () Bool)

(assert (=> bm!5998 (= call!5999 ($colon$colon!64 e!45737 (ite c!10065 (h!2050 (toList!719 lt!29889)) (tuple2!2103 (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)) (_2!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))))

(declare-fun c!10066 () Bool)

(assert (=> bm!5998 (= c!10066 c!10065)))

(declare-fun b!69892 () Bool)

(declare-fun e!45736 () List!1469)

(assert (=> b!69892 (= e!45739 e!45736)))

(assert (=> b!69892 (= c!10068 (and ((_ is Cons!1465) (toList!719 lt!29889)) (= (_1!1062 (h!2050 (toList!719 lt!29889))) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))))))

(declare-fun b!69893 () Bool)

(assert (=> b!69893 (= e!45735 (contains!716 lt!30778 (tuple2!2103 (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)) (_2!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))))))

(declare-fun b!69894 () Bool)

(assert (=> b!69894 (= e!45739 call!5999)))

(declare-fun b!69895 () Bool)

(assert (=> b!69895 (= e!45738 call!6001)))

(declare-fun b!69896 () Bool)

(declare-fun res!37436 () Bool)

(assert (=> b!69896 (=> (not res!37436) (not e!45735))))

(assert (=> b!69896 (= res!37436 (containsKey!135 lt!30778 (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))

(declare-fun b!69897 () Bool)

(assert (=> b!69897 (= e!45736 call!6000)))

(declare-fun b!69898 () Bool)

(assert (=> b!69898 (= c!10067 (and ((_ is Cons!1465) (toList!719 lt!29889)) (bvsgt (_1!1062 (h!2050 (toList!719 lt!29889))) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))))))

(assert (=> b!69898 (= e!45736 e!45738)))

(assert (= (and d!15355 c!10065) b!69894))

(assert (= (and d!15355 (not c!10065)) b!69892))

(assert (= (and b!69892 c!10068) b!69897))

(assert (= (and b!69892 (not c!10068)) b!69898))

(assert (= (and b!69898 c!10067) b!69891))

(assert (= (and b!69898 (not c!10067)) b!69895))

(assert (= (or b!69891 b!69895) bm!5996))

(assert (= (or b!69897 bm!5996) bm!5997))

(assert (= (or b!69894 bm!5997) bm!5998))

(assert (= (and bm!5998 c!10066) b!69889))

(assert (= (and bm!5998 (not c!10066)) b!69890))

(assert (= (and d!15355 res!37437) b!69896))

(assert (= (and b!69896 res!37436) b!69893))

(declare-fun m!66489 () Bool)

(assert (=> b!69893 m!66489))

(declare-fun m!66491 () Bool)

(assert (=> d!15355 m!66491))

(assert (=> d!15355 m!64969))

(declare-fun m!66493 () Bool)

(assert (=> b!69889 m!66493))

(declare-fun m!66495 () Bool)

(assert (=> bm!5998 m!66495))

(declare-fun m!66497 () Bool)

(assert (=> b!69896 m!66497))

(assert (=> d!14897 d!15355))

(declare-fun d!15357 () Bool)

(declare-fun res!37438 () Bool)

(declare-fun e!45740 () Bool)

(assert (=> d!15357 (=> res!37438 e!45740)))

(assert (=> d!15357 (= res!37438 (and ((_ is Cons!1465) lt!30275) (= (_1!1062 (h!2050 lt!30275)) (_1!1062 lt!29893))))))

(assert (=> d!15357 (= (containsKey!135 lt!30275 (_1!1062 lt!29893)) e!45740)))

(declare-fun b!69899 () Bool)

(declare-fun e!45741 () Bool)

(assert (=> b!69899 (= e!45740 e!45741)))

(declare-fun res!37439 () Bool)

(assert (=> b!69899 (=> (not res!37439) (not e!45741))))

(assert (=> b!69899 (= res!37439 (and (or (not ((_ is Cons!1465) lt!30275)) (bvsle (_1!1062 (h!2050 lt!30275)) (_1!1062 lt!29893))) ((_ is Cons!1465) lt!30275) (bvslt (_1!1062 (h!2050 lt!30275)) (_1!1062 lt!29893))))))

(declare-fun b!69900 () Bool)

(assert (=> b!69900 (= e!45741 (containsKey!135 (t!4972 lt!30275) (_1!1062 lt!29893)))))

(assert (= (and d!15357 (not res!37438)) b!69899))

(assert (= (and b!69899 res!37439) b!69900))

(declare-fun m!66499 () Bool)

(assert (=> b!69900 m!66499))

(assert (=> b!69077 d!15357))

(declare-fun d!15359 () Bool)

(assert (=> d!15359 (= (+!90 (getCurrentListMap!417 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897)) (getCurrentListMap!417 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) lt!30124 lt!29897 (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(assert (=> d!15359 true))

(declare-fun _$7!56 () Unit!1919)

(assert (=> d!15359 (= (choose!390 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) lt!30124 (zeroValue!2074 newMap!16) lt!29897 (minValue!2074 newMap!16) (defaultEntry!2168 newMap!16)) _$7!56)))

(declare-fun bs!3002 () Bool)

(assert (= bs!3002 d!15359))

(assert (=> bs!3002 m!64511))

(assert (=> bs!3002 m!64511))

(assert (=> bs!3002 m!65365))

(assert (=> bs!3002 m!65367))

(assert (=> d!14999 d!15359))

(declare-fun b!69901 () Bool)

(declare-fun e!45748 () Bool)

(declare-fun lt!30796 () ListLongMap!1407)

(assert (=> b!69901 (= e!45748 (= (apply!73 lt!30796 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)) (get!1124 (select (arr!1842 (_values!2151 newMap!16)) #b00000000000000000000000000000000) (dynLambda!322 (defaultEntry!2168 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!69901 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2078 (_values!2151 newMap!16))))))

(assert (=> b!69901 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))))))

(declare-fun b!69902 () Bool)

(declare-fun e!45754 () Unit!1919)

(declare-fun lt!30795 () Unit!1919)

(assert (=> b!69902 (= e!45754 lt!30795)))

(declare-fun lt!30788 () ListLongMap!1407)

(assert (=> b!69902 (= lt!30788 (getCurrentListMapNoExtraKeys!55 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) lt!30124 lt!29897 (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30791 () (_ BitVec 64))

(assert (=> b!69902 (= lt!30791 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30779 () (_ BitVec 64))

(assert (=> b!69902 (= lt!30779 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30793 () Unit!1919)

(assert (=> b!69902 (= lt!30793 (addStillContains!49 lt!30788 lt!30791 lt!29897 lt!30779))))

(assert (=> b!69902 (contains!714 (+!90 lt!30788 (tuple2!2103 lt!30791 lt!29897)) lt!30779)))

(declare-fun lt!30789 () Unit!1919)

(assert (=> b!69902 (= lt!30789 lt!30793)))

(declare-fun lt!30781 () ListLongMap!1407)

(assert (=> b!69902 (= lt!30781 (getCurrentListMapNoExtraKeys!55 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) lt!30124 lt!29897 (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30792 () (_ BitVec 64))

(assert (=> b!69902 (= lt!30792 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30783 () (_ BitVec 64))

(assert (=> b!69902 (= lt!30783 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30780 () Unit!1919)

(assert (=> b!69902 (= lt!30780 (addApplyDifferent!49 lt!30781 lt!30792 (minValue!2074 newMap!16) lt!30783))))

(assert (=> b!69902 (= (apply!73 (+!90 lt!30781 (tuple2!2103 lt!30792 (minValue!2074 newMap!16))) lt!30783) (apply!73 lt!30781 lt!30783))))

(declare-fun lt!30798 () Unit!1919)

(assert (=> b!69902 (= lt!30798 lt!30780)))

(declare-fun lt!30787 () ListLongMap!1407)

(assert (=> b!69902 (= lt!30787 (getCurrentListMapNoExtraKeys!55 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) lt!30124 lt!29897 (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30782 () (_ BitVec 64))

(assert (=> b!69902 (= lt!30782 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30790 () (_ BitVec 64))

(assert (=> b!69902 (= lt!30790 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30800 () Unit!1919)

(assert (=> b!69902 (= lt!30800 (addApplyDifferent!49 lt!30787 lt!30782 lt!29897 lt!30790))))

(assert (=> b!69902 (= (apply!73 (+!90 lt!30787 (tuple2!2103 lt!30782 lt!29897)) lt!30790) (apply!73 lt!30787 lt!30790))))

(declare-fun lt!30797 () Unit!1919)

(assert (=> b!69902 (= lt!30797 lt!30800)))

(declare-fun lt!30784 () ListLongMap!1407)

(assert (=> b!69902 (= lt!30784 (getCurrentListMapNoExtraKeys!55 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) lt!30124 lt!29897 (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30799 () (_ BitVec 64))

(assert (=> b!69902 (= lt!30799 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30794 () (_ BitVec 64))

(assert (=> b!69902 (= lt!30794 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!69902 (= lt!30795 (addApplyDifferent!49 lt!30784 lt!30799 (minValue!2074 newMap!16) lt!30794))))

(assert (=> b!69902 (= (apply!73 (+!90 lt!30784 (tuple2!2103 lt!30799 (minValue!2074 newMap!16))) lt!30794) (apply!73 lt!30784 lt!30794))))

(declare-fun b!69903 () Bool)

(declare-fun e!45747 () Bool)

(declare-fun e!45744 () Bool)

(assert (=> b!69903 (= e!45747 e!45744)))

(declare-fun res!37446 () Bool)

(declare-fun call!6003 () Bool)

(assert (=> b!69903 (= res!37446 call!6003)))

(assert (=> b!69903 (=> (not res!37446) (not e!45744))))

(declare-fun d!15361 () Bool)

(declare-fun e!45752 () Bool)

(assert (=> d!15361 e!45752))

(declare-fun res!37442 () Bool)

(assert (=> d!15361 (=> (not res!37442) (not e!45752))))

(assert (=> d!15361 (= res!37442 (or (bvsge #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))))))))

(declare-fun lt!30785 () ListLongMap!1407)

(assert (=> d!15361 (= lt!30796 lt!30785)))

(declare-fun lt!30786 () Unit!1919)

(assert (=> d!15361 (= lt!30786 e!45754)))

(declare-fun c!10074 () Bool)

(declare-fun e!45743 () Bool)

(assert (=> d!15361 (= c!10074 e!45743)))

(declare-fun res!37443 () Bool)

(assert (=> d!15361 (=> (not res!37443) (not e!45743))))

(assert (=> d!15361 (= res!37443 (bvslt #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))))))

(declare-fun e!45753 () ListLongMap!1407)

(assert (=> d!15361 (= lt!30785 e!45753)))

(declare-fun c!10070 () Bool)

(assert (=> d!15361 (= c!10070 (and (not (= (bvand lt!30124 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!30124 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!15361 (validMask!0 (mask!6113 newMap!16))))

(assert (=> d!15361 (= (getCurrentListMap!417 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) lt!30124 lt!29897 (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) lt!30796)))

(declare-fun bm!5999 () Bool)

(assert (=> bm!5999 (= call!6003 (contains!714 lt!30796 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun c!10073 () Bool)

(declare-fun bm!6000 () Bool)

(declare-fun call!6007 () ListLongMap!1407)

(declare-fun call!6002 () ListLongMap!1407)

(declare-fun call!6004 () ListLongMap!1407)

(declare-fun call!6008 () ListLongMap!1407)

(assert (=> bm!6000 (= call!6007 (+!90 (ite c!10070 call!6008 (ite c!10073 call!6002 call!6004)) (ite (or c!10070 c!10073) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))))))

(declare-fun bm!6001 () Bool)

(assert (=> bm!6001 (= call!6008 (getCurrentListMapNoExtraKeys!55 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) lt!30124 lt!29897 (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun bm!6002 () Bool)

(assert (=> bm!6002 (= call!6002 call!6008)))

(declare-fun b!69904 () Bool)

(declare-fun e!45750 () ListLongMap!1407)

(assert (=> b!69904 (= e!45750 call!6004)))

(declare-fun b!69905 () Bool)

(declare-fun e!45742 () Bool)

(declare-fun e!45745 () Bool)

(assert (=> b!69905 (= e!45742 e!45745)))

(declare-fun res!37441 () Bool)

(declare-fun call!6006 () Bool)

(assert (=> b!69905 (= res!37441 call!6006)))

(assert (=> b!69905 (=> (not res!37441) (not e!45745))))

(declare-fun b!69906 () Bool)

(declare-fun Unit!1968 () Unit!1919)

(assert (=> b!69906 (= e!45754 Unit!1968)))

(declare-fun b!69907 () Bool)

(assert (=> b!69907 (= e!45743 (validKeyInArray!0 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!69908 () Bool)

(assert (=> b!69908 (= e!45745 (= (apply!73 lt!30796 #b0000000000000000000000000000000000000000000000000000000000000000) lt!29897))))

(declare-fun b!69909 () Bool)

(assert (=> b!69909 (= e!45744 (= (apply!73 lt!30796 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2074 newMap!16)))))

(declare-fun b!69910 () Bool)

(declare-fun res!37444 () Bool)

(assert (=> b!69910 (=> (not res!37444) (not e!45752))))

(assert (=> b!69910 (= res!37444 e!45742)))

(declare-fun c!10071 () Bool)

(assert (=> b!69910 (= c!10071 (not (= (bvand lt!30124 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!69911 () Bool)

(declare-fun e!45746 () ListLongMap!1407)

(assert (=> b!69911 (= e!45753 e!45746)))

(assert (=> b!69911 (= c!10073 (and (not (= (bvand lt!30124 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!30124 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!69912 () Bool)

(assert (=> b!69912 (= e!45752 e!45747)))

(declare-fun c!10069 () Bool)

(assert (=> b!69912 (= c!10069 (not (= (bvand lt!30124 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!69913 () Bool)

(assert (=> b!69913 (= e!45753 (+!90 call!6007 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))))))

(declare-fun b!69914 () Bool)

(declare-fun c!10072 () Bool)

(assert (=> b!69914 (= c!10072 (and (not (= (bvand lt!30124 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!30124 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!69914 (= e!45746 e!45750)))

(declare-fun b!69915 () Bool)

(declare-fun e!45751 () Bool)

(assert (=> b!69915 (= e!45751 (validKeyInArray!0 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!69916 () Bool)

(assert (=> b!69916 (= e!45747 (not call!6003))))

(declare-fun b!69917 () Bool)

(declare-fun res!37447 () Bool)

(assert (=> b!69917 (=> (not res!37447) (not e!45752))))

(declare-fun e!45749 () Bool)

(assert (=> b!69917 (= res!37447 e!45749)))

(declare-fun res!37445 () Bool)

(assert (=> b!69917 (=> res!37445 e!45749)))

(assert (=> b!69917 (= res!37445 (not e!45751))))

(declare-fun res!37440 () Bool)

(assert (=> b!69917 (=> (not res!37440) (not e!45751))))

(assert (=> b!69917 (= res!37440 (bvslt #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))))))

(declare-fun b!69918 () Bool)

(declare-fun call!6005 () ListLongMap!1407)

(assert (=> b!69918 (= e!45750 call!6005)))

(declare-fun bm!6003 () Bool)

(assert (=> bm!6003 (= call!6005 call!6007)))

(declare-fun bm!6004 () Bool)

(assert (=> bm!6004 (= call!6004 call!6002)))

(declare-fun b!69919 () Bool)

(assert (=> b!69919 (= e!45746 call!6005)))

(declare-fun b!69920 () Bool)

(assert (=> b!69920 (= e!45749 e!45748)))

(declare-fun res!37448 () Bool)

(assert (=> b!69920 (=> (not res!37448) (not e!45748))))

(assert (=> b!69920 (= res!37448 (contains!714 lt!30796 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!69920 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))))))

(declare-fun bm!6005 () Bool)

(assert (=> bm!6005 (= call!6006 (contains!714 lt!30796 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69921 () Bool)

(assert (=> b!69921 (= e!45742 (not call!6006))))

(assert (= (and d!15361 c!10070) b!69913))

(assert (= (and d!15361 (not c!10070)) b!69911))

(assert (= (and b!69911 c!10073) b!69919))

(assert (= (and b!69911 (not c!10073)) b!69914))

(assert (= (and b!69914 c!10072) b!69918))

(assert (= (and b!69914 (not c!10072)) b!69904))

(assert (= (or b!69918 b!69904) bm!6004))

(assert (= (or b!69919 bm!6004) bm!6002))

(assert (= (or b!69919 b!69918) bm!6003))

(assert (= (or b!69913 bm!6002) bm!6001))

(assert (= (or b!69913 bm!6003) bm!6000))

(assert (= (and d!15361 res!37443) b!69907))

(assert (= (and d!15361 c!10074) b!69902))

(assert (= (and d!15361 (not c!10074)) b!69906))

(assert (= (and d!15361 res!37442) b!69917))

(assert (= (and b!69917 res!37440) b!69915))

(assert (= (and b!69917 (not res!37445)) b!69920))

(assert (= (and b!69920 res!37448) b!69901))

(assert (= (and b!69917 res!37447) b!69910))

(assert (= (and b!69910 c!10071) b!69905))

(assert (= (and b!69910 (not c!10071)) b!69921))

(assert (= (and b!69905 res!37441) b!69908))

(assert (= (or b!69905 b!69921) bm!6005))

(assert (= (and b!69910 res!37444) b!69912))

(assert (= (and b!69912 c!10069) b!69903))

(assert (= (and b!69912 (not c!10069)) b!69916))

(assert (= (and b!69903 res!37446) b!69909))

(assert (= (or b!69903 b!69916) bm!5999))

(declare-fun b_lambda!3127 () Bool)

(assert (=> (not b_lambda!3127) (not b!69901)))

(assert (=> b!69901 t!4980))

(declare-fun b_and!4299 () Bool)

(assert (= b_and!4295 (and (=> t!4980 result!2619) b_and!4299)))

(assert (=> b!69901 t!4982))

(declare-fun b_and!4301 () Bool)

(assert (= b_and!4297 (and (=> t!4982 result!2621) b_and!4301)))

(declare-fun m!66501 () Bool)

(assert (=> bm!6005 m!66501))

(declare-fun m!66503 () Bool)

(assert (=> bm!6000 m!66503))

(declare-fun m!66505 () Bool)

(assert (=> b!69913 m!66505))

(declare-fun m!66507 () Bool)

(assert (=> bm!5999 m!66507))

(assert (=> b!69907 m!64775))

(assert (=> b!69907 m!64775))

(assert (=> b!69907 m!64777))

(assert (=> b!69920 m!64775))

(assert (=> b!69920 m!64775))

(declare-fun m!66509 () Bool)

(assert (=> b!69920 m!66509))

(declare-fun m!66511 () Bool)

(assert (=> b!69908 m!66511))

(declare-fun m!66513 () Bool)

(assert (=> b!69909 m!66513))

(assert (=> b!69901 m!64807))

(assert (=> b!69901 m!64809))

(assert (=> b!69901 m!64807))

(assert (=> b!69901 m!64811))

(assert (=> b!69901 m!64809))

(assert (=> b!69901 m!64775))

(declare-fun m!66515 () Bool)

(assert (=> b!69901 m!66515))

(assert (=> b!69901 m!64775))

(assert (=> d!15361 m!64759))

(declare-fun m!66517 () Bool)

(assert (=> bm!6001 m!66517))

(assert (=> b!69915 m!64775))

(assert (=> b!69915 m!64775))

(assert (=> b!69915 m!64777))

(declare-fun m!66519 () Bool)

(assert (=> b!69902 m!66519))

(declare-fun m!66521 () Bool)

(assert (=> b!69902 m!66521))

(declare-fun m!66523 () Bool)

(assert (=> b!69902 m!66523))

(declare-fun m!66525 () Bool)

(assert (=> b!69902 m!66525))

(declare-fun m!66527 () Bool)

(assert (=> b!69902 m!66527))

(declare-fun m!66529 () Bool)

(assert (=> b!69902 m!66529))

(declare-fun m!66531 () Bool)

(assert (=> b!69902 m!66531))

(declare-fun m!66533 () Bool)

(assert (=> b!69902 m!66533))

(assert (=> b!69902 m!66527))

(declare-fun m!66535 () Bool)

(assert (=> b!69902 m!66535))

(assert (=> b!69902 m!64775))

(declare-fun m!66537 () Bool)

(assert (=> b!69902 m!66537))

(declare-fun m!66539 () Bool)

(assert (=> b!69902 m!66539))

(declare-fun m!66541 () Bool)

(assert (=> b!69902 m!66541))

(assert (=> b!69902 m!66529))

(declare-fun m!66543 () Bool)

(assert (=> b!69902 m!66543))

(assert (=> b!69902 m!66537))

(assert (=> b!69902 m!66521))

(declare-fun m!66545 () Bool)

(assert (=> b!69902 m!66545))

(assert (=> b!69902 m!66517))

(declare-fun m!66547 () Bool)

(assert (=> b!69902 m!66547))

(assert (=> d!14999 d!15361))

(assert (=> d!14999 d!14843))

(assert (=> d!14999 d!15083))

(declare-fun d!15363 () Bool)

(declare-fun e!45755 () Bool)

(assert (=> d!15363 e!45755))

(declare-fun res!37450 () Bool)

(assert (=> d!15363 (=> (not res!37450) (not e!45755))))

(declare-fun lt!30803 () ListLongMap!1407)

(assert (=> d!15363 (= res!37450 (contains!714 lt!30803 (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897))))))

(declare-fun lt!30804 () List!1469)

(assert (=> d!15363 (= lt!30803 (ListLongMap!1408 lt!30804))))

(declare-fun lt!30801 () Unit!1919)

(declare-fun lt!30802 () Unit!1919)

(assert (=> d!15363 (= lt!30801 lt!30802)))

(assert (=> d!15363 (= (getValueByKey!131 lt!30804 (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897))) (Some!136 (_2!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897))))))

(assert (=> d!15363 (= lt!30802 (lemmaContainsTupThenGetReturnValue!48 lt!30804 (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897)) (_2!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897))))))

(assert (=> d!15363 (= lt!30804 (insertStrictlySorted!51 (toList!719 (getCurrentListMap!417 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16))) (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897)) (_2!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897))))))

(assert (=> d!15363 (= (+!90 (getCurrentListMap!417 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897)) lt!30803)))

(declare-fun b!69922 () Bool)

(declare-fun res!37449 () Bool)

(assert (=> b!69922 (=> (not res!37449) (not e!45755))))

(assert (=> b!69922 (= res!37449 (= (getValueByKey!131 (toList!719 lt!30803) (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897))) (Some!136 (_2!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897)))))))

(declare-fun b!69923 () Bool)

(assert (=> b!69923 (= e!45755 (contains!716 (toList!719 lt!30803) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 lt!29897)))))

(assert (= (and d!15363 res!37450) b!69922))

(assert (= (and b!69922 res!37449) b!69923))

(declare-fun m!66549 () Bool)

(assert (=> d!15363 m!66549))

(declare-fun m!66551 () Bool)

(assert (=> d!15363 m!66551))

(declare-fun m!66553 () Bool)

(assert (=> d!15363 m!66553))

(declare-fun m!66555 () Bool)

(assert (=> d!15363 m!66555))

(declare-fun m!66557 () Bool)

(assert (=> b!69922 m!66557))

(declare-fun m!66559 () Bool)

(assert (=> b!69923 m!66559))

(assert (=> d!14999 d!15363))

(declare-fun d!15365 () Bool)

(declare-fun lt!30805 () Bool)

(assert (=> d!15365 (= lt!30805 (select (content!73 (toList!719 lt!30326)) (tuple2!2103 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun e!45757 () Bool)

(assert (=> d!15365 (= lt!30805 e!45757)))

(declare-fun res!37451 () Bool)

(assert (=> d!15365 (=> (not res!37451) (not e!45757))))

(assert (=> d!15365 (= res!37451 ((_ is Cons!1465) (toList!719 lt!30326)))))

(assert (=> d!15365 (= (contains!716 (toList!719 lt!30326) (tuple2!2103 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992))))) lt!30805)))

(declare-fun b!69924 () Bool)

(declare-fun e!45756 () Bool)

(assert (=> b!69924 (= e!45757 e!45756)))

(declare-fun res!37452 () Bool)

(assert (=> b!69924 (=> res!37452 e!45756)))

(assert (=> b!69924 (= res!37452 (= (h!2050 (toList!719 lt!30326)) (tuple2!2103 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun b!69925 () Bool)

(assert (=> b!69925 (= e!45756 (contains!716 (t!4972 (toList!719 lt!30326)) (tuple2!2103 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))))

(assert (= (and d!15365 res!37451) b!69924))

(assert (= (and b!69924 (not res!37452)) b!69925))

(declare-fun m!66561 () Bool)

(assert (=> d!15365 m!66561))

(declare-fun m!66563 () Bool)

(assert (=> d!15365 m!66563))

(declare-fun m!66565 () Bool)

(assert (=> b!69925 m!66565))

(assert (=> b!69157 d!15365))

(assert (=> d!14923 d!14921))

(declare-fun d!15367 () Bool)

(assert (=> d!15367 (= (getValueByKey!131 lt!30057 (_1!1062 lt!29893)) (Some!136 (_2!1062 lt!29893)))))

(assert (=> d!15367 true))

(declare-fun _$22!375 () Unit!1919)

(assert (=> d!15367 (= (choose!386 lt!30057 (_1!1062 lt!29893) (_2!1062 lt!29893)) _$22!375)))

(declare-fun bs!3003 () Bool)

(assert (= bs!3003 d!15367))

(assert (=> bs!3003 m!64651))

(assert (=> d!14923 d!15367))

(declare-fun d!15369 () Bool)

(declare-fun res!37453 () Bool)

(declare-fun e!45758 () Bool)

(assert (=> d!15369 (=> res!37453 e!45758)))

(assert (=> d!15369 (= res!37453 (or ((_ is Nil!1466) lt!30057) ((_ is Nil!1466) (t!4972 lt!30057))))))

(assert (=> d!15369 (= (isStrictlySorted!290 lt!30057) e!45758)))

(declare-fun b!69926 () Bool)

(declare-fun e!45759 () Bool)

(assert (=> b!69926 (= e!45758 e!45759)))

(declare-fun res!37454 () Bool)

(assert (=> b!69926 (=> (not res!37454) (not e!45759))))

(assert (=> b!69926 (= res!37454 (bvslt (_1!1062 (h!2050 lt!30057)) (_1!1062 (h!2050 (t!4972 lt!30057)))))))

(declare-fun b!69927 () Bool)

(assert (=> b!69927 (= e!45759 (isStrictlySorted!290 (t!4972 lt!30057)))))

(assert (= (and d!15369 (not res!37453)) b!69926))

(assert (= (and b!69926 res!37454) b!69927))

(declare-fun m!66567 () Bool)

(assert (=> b!69927 m!66567))

(assert (=> d!14923 d!15369))

(declare-fun d!15371 () Bool)

(declare-fun lt!30806 () Bool)

(assert (=> d!15371 (= lt!30806 (select (content!73 lt!30353) (tuple2!2103 (_1!1062 lt!29892) (_2!1062 lt!29892))))))

(declare-fun e!45761 () Bool)

(assert (=> d!15371 (= lt!30806 e!45761)))

(declare-fun res!37455 () Bool)

(assert (=> d!15371 (=> (not res!37455) (not e!45761))))

(assert (=> d!15371 (= res!37455 ((_ is Cons!1465) lt!30353))))

(assert (=> d!15371 (= (contains!716 lt!30353 (tuple2!2103 (_1!1062 lt!29892) (_2!1062 lt!29892))) lt!30806)))

(declare-fun b!69928 () Bool)

(declare-fun e!45760 () Bool)

(assert (=> b!69928 (= e!45761 e!45760)))

(declare-fun res!37456 () Bool)

(assert (=> b!69928 (=> res!37456 e!45760)))

(assert (=> b!69928 (= res!37456 (= (h!2050 lt!30353) (tuple2!2103 (_1!1062 lt!29892) (_2!1062 lt!29892))))))

(declare-fun b!69929 () Bool)

(assert (=> b!69929 (= e!45760 (contains!716 (t!4972 lt!30353) (tuple2!2103 (_1!1062 lt!29892) (_2!1062 lt!29892))))))

(assert (= (and d!15371 res!37455) b!69928))

(assert (= (and b!69928 (not res!37456)) b!69929))

(declare-fun m!66569 () Bool)

(assert (=> d!15371 m!66569))

(declare-fun m!66571 () Bool)

(assert (=> d!15371 m!66571))

(declare-fun m!66573 () Bool)

(assert (=> b!69929 m!66573))

(assert (=> b!69182 d!15371))

(declare-fun d!15373 () Bool)

(declare-fun e!45762 () Bool)

(assert (=> d!15373 e!45762))

(declare-fun res!37457 () Bool)

(assert (=> d!15373 (=> res!37457 e!45762)))

(declare-fun lt!30808 () Bool)

(assert (=> d!15373 (= res!37457 (not lt!30808))))

(declare-fun lt!30807 () Bool)

(assert (=> d!15373 (= lt!30808 lt!30807)))

(declare-fun lt!30809 () Unit!1919)

(declare-fun e!45763 () Unit!1919)

(assert (=> d!15373 (= lt!30809 e!45763)))

(declare-fun c!10075 () Bool)

(assert (=> d!15373 (= c!10075 lt!30807)))

(assert (=> d!15373 (= lt!30807 (containsKey!135 (toList!719 lt!30218) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!15373 (= (contains!714 lt!30218 #b0000000000000000000000000000000000000000000000000000000000000000) lt!30808)))

(declare-fun b!69930 () Bool)

(declare-fun lt!30810 () Unit!1919)

(assert (=> b!69930 (= e!45763 lt!30810)))

(assert (=> b!69930 (= lt!30810 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 lt!30218) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!69930 (isDefined!84 (getValueByKey!131 (toList!719 lt!30218) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69931 () Bool)

(declare-fun Unit!1969 () Unit!1919)

(assert (=> b!69931 (= e!45763 Unit!1969)))

(declare-fun b!69932 () Bool)

(assert (=> b!69932 (= e!45762 (isDefined!84 (getValueByKey!131 (toList!719 lt!30218) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15373 c!10075) b!69930))

(assert (= (and d!15373 (not c!10075)) b!69931))

(assert (= (and d!15373 (not res!37457)) b!69932))

(declare-fun m!66575 () Bool)

(assert (=> d!15373 m!66575))

(declare-fun m!66577 () Bool)

(assert (=> b!69930 m!66577))

(declare-fun m!66579 () Bool)

(assert (=> b!69930 m!66579))

(assert (=> b!69930 m!66579))

(declare-fun m!66581 () Bool)

(assert (=> b!69930 m!66581))

(assert (=> b!69932 m!66579))

(assert (=> b!69932 m!66579))

(assert (=> b!69932 m!66581))

(assert (=> d!14865 d!15373))

(assert (=> d!14865 d!14813))

(declare-fun b!69933 () Bool)

(declare-fun e!45766 () Bool)

(declare-fun lt!30816 () ListLongMap!1407)

(assert (=> b!69933 (= e!45766 (= lt!30816 (getCurrentListMapNoExtraKeys!55 (_keys!3812 newMap!16) (ite (or c!9754 c!9759) (_values!2151 newMap!16) lt!30125) (mask!6113 newMap!16) (ite c!9754 (ite c!9756 (extraKeys!2035 newMap!16) lt!30140) (extraKeys!2035 newMap!16)) (zeroValue!2074 newMap!16) (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2168 newMap!16))))))

(declare-fun b!69934 () Bool)

(declare-fun e!45769 () Bool)

(declare-fun e!45765 () Bool)

(assert (=> b!69934 (= e!45769 e!45765)))

(declare-fun c!10077 () Bool)

(declare-fun e!45768 () Bool)

(assert (=> b!69934 (= c!10077 e!45768)))

(declare-fun res!37461 () Bool)

(assert (=> b!69934 (=> (not res!37461) (not e!45768))))

(assert (=> b!69934 (= res!37461 (bvslt #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))))))

(declare-fun b!69935 () Bool)

(assert (=> b!69935 (= e!45765 e!45766)))

(declare-fun c!10079 () Bool)

(assert (=> b!69935 (= c!10079 (bvslt #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))))))

(declare-fun b!69936 () Bool)

(declare-fun e!45770 () ListLongMap!1407)

(declare-fun call!6009 () ListLongMap!1407)

(assert (=> b!69936 (= e!45770 call!6009)))

(declare-fun b!69937 () Bool)

(declare-fun e!45767 () ListLongMap!1407)

(assert (=> b!69937 (= e!45767 (ListLongMap!1408 Nil!1466))))

(declare-fun b!69939 () Bool)

(declare-fun lt!30814 () Unit!1919)

(declare-fun lt!30813 () Unit!1919)

(assert (=> b!69939 (= lt!30814 lt!30813)))

(declare-fun lt!30815 () ListLongMap!1407)

(declare-fun lt!30812 () (_ BitVec 64))

(declare-fun lt!30811 () V!2923)

(declare-fun lt!30817 () (_ BitVec 64))

(assert (=> b!69939 (not (contains!714 (+!90 lt!30815 (tuple2!2103 lt!30812 lt!30811)) lt!30817))))

(assert (=> b!69939 (= lt!30813 (addStillNotContains!22 lt!30815 lt!30812 lt!30811 lt!30817))))

(assert (=> b!69939 (= lt!30817 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!69939 (= lt!30811 (get!1124 (select (arr!1842 (ite (or c!9754 c!9759) (_values!2151 newMap!16) lt!30125)) #b00000000000000000000000000000000) (dynLambda!322 (defaultEntry!2168 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!69939 (= lt!30812 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!69939 (= lt!30815 call!6009)))

(assert (=> b!69939 (= e!45770 (+!90 call!6009 (tuple2!2103 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000) (get!1124 (select (arr!1842 (ite (or c!9754 c!9759) (_values!2151 newMap!16) lt!30125)) #b00000000000000000000000000000000) (dynLambda!322 (defaultEntry!2168 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun bm!6006 () Bool)

(assert (=> bm!6006 (= call!6009 (getCurrentListMapNoExtraKeys!55 (_keys!3812 newMap!16) (ite (or c!9754 c!9759) (_values!2151 newMap!16) lt!30125) (mask!6113 newMap!16) (ite c!9754 (ite c!9756 (extraKeys!2035 newMap!16) lt!30140) (extraKeys!2035 newMap!16)) (zeroValue!2074 newMap!16) (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2168 newMap!16)))))

(declare-fun b!69940 () Bool)

(assert (=> b!69940 (= e!45768 (validKeyInArray!0 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!69940 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!69941 () Bool)

(declare-fun e!45764 () Bool)

(assert (=> b!69941 (= e!45765 e!45764)))

(assert (=> b!69941 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))))))

(declare-fun res!37458 () Bool)

(assert (=> b!69941 (= res!37458 (contains!714 lt!30816 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!69941 (=> (not res!37458) (not e!45764))))

(declare-fun b!69942 () Bool)

(assert (=> b!69942 (= e!45767 e!45770)))

(declare-fun c!10076 () Bool)

(assert (=> b!69942 (= c!10076 (validKeyInArray!0 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!69943 () Bool)

(assert (=> b!69943 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))))))

(assert (=> b!69943 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2078 (ite (or c!9754 c!9759) (_values!2151 newMap!16) lt!30125))))))

(assert (=> b!69943 (= e!45764 (= (apply!73 lt!30816 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)) (get!1124 (select (arr!1842 (ite (or c!9754 c!9759) (_values!2151 newMap!16) lt!30125)) #b00000000000000000000000000000000) (dynLambda!322 (defaultEntry!2168 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!69944 () Bool)

(declare-fun res!37460 () Bool)

(assert (=> b!69944 (=> (not res!37460) (not e!45769))))

(assert (=> b!69944 (= res!37460 (not (contains!714 lt!30816 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun d!15375 () Bool)

(assert (=> d!15375 e!45769))

(declare-fun res!37459 () Bool)

(assert (=> d!15375 (=> (not res!37459) (not e!45769))))

(assert (=> d!15375 (= res!37459 (not (contains!714 lt!30816 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!15375 (= lt!30816 e!45767)))

(declare-fun c!10078 () Bool)

(assert (=> d!15375 (= c!10078 (bvsge #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))))))

(assert (=> d!15375 (validMask!0 (mask!6113 newMap!16))))

(assert (=> d!15375 (= (getCurrentListMapNoExtraKeys!55 (_keys!3812 newMap!16) (ite (or c!9754 c!9759) (_values!2151 newMap!16) lt!30125) (mask!6113 newMap!16) (ite c!9754 (ite c!9756 (extraKeys!2035 newMap!16) lt!30140) (extraKeys!2035 newMap!16)) (zeroValue!2074 newMap!16) (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) lt!30816)))

(declare-fun b!69938 () Bool)

(assert (=> b!69938 (= e!45766 (isEmpty!310 lt!30816))))

(assert (= (and d!15375 c!10078) b!69937))

(assert (= (and d!15375 (not c!10078)) b!69942))

(assert (= (and b!69942 c!10076) b!69939))

(assert (= (and b!69942 (not c!10076)) b!69936))

(assert (= (or b!69939 b!69936) bm!6006))

(assert (= (and d!15375 res!37459) b!69944))

(assert (= (and b!69944 res!37460) b!69934))

(assert (= (and b!69934 res!37461) b!69940))

(assert (= (and b!69934 c!10077) b!69941))

(assert (= (and b!69934 (not c!10077)) b!69935))

(assert (= (and b!69941 res!37458) b!69943))

(assert (= (and b!69935 c!10079) b!69933))

(assert (= (and b!69935 (not c!10079)) b!69938))

(declare-fun b_lambda!3129 () Bool)

(assert (=> (not b_lambda!3129) (not b!69939)))

(assert (=> b!69939 t!4980))

(declare-fun b_and!4303 () Bool)

(assert (= b_and!4299 (and (=> t!4980 result!2619) b_and!4303)))

(assert (=> b!69939 t!4982))

(declare-fun b_and!4305 () Bool)

(assert (= b_and!4301 (and (=> t!4982 result!2621) b_and!4305)))

(declare-fun b_lambda!3131 () Bool)

(assert (=> (not b_lambda!3131) (not b!69943)))

(assert (=> b!69943 t!4980))

(declare-fun b_and!4307 () Bool)

(assert (= b_and!4303 (and (=> t!4980 result!2619) b_and!4307)))

(assert (=> b!69943 t!4982))

(declare-fun b_and!4309 () Bool)

(assert (= b_and!4305 (and (=> t!4982 result!2621) b_and!4309)))

(assert (=> b!69941 m!64775))

(assert (=> b!69941 m!64775))

(declare-fun m!66583 () Bool)

(assert (=> b!69941 m!66583))

(declare-fun m!66585 () Bool)

(assert (=> b!69938 m!66585))

(assert (=> b!69943 m!64807))

(assert (=> b!69943 m!65121))

(assert (=> b!69943 m!64775))

(assert (=> b!69943 m!65121))

(assert (=> b!69943 m!64807))

(assert (=> b!69943 m!65123))

(assert (=> b!69943 m!64775))

(declare-fun m!66587 () Bool)

(assert (=> b!69943 m!66587))

(declare-fun m!66589 () Bool)

(assert (=> d!15375 m!66589))

(assert (=> d!15375 m!64759))

(assert (=> b!69939 m!64807))

(declare-fun m!66591 () Bool)

(assert (=> b!69939 m!66591))

(declare-fun m!66593 () Bool)

(assert (=> b!69939 m!66593))

(declare-fun m!66595 () Bool)

(assert (=> b!69939 m!66595))

(assert (=> b!69939 m!66591))

(declare-fun m!66597 () Bool)

(assert (=> b!69939 m!66597))

(assert (=> b!69939 m!65121))

(assert (=> b!69939 m!64775))

(assert (=> b!69939 m!65121))

(assert (=> b!69939 m!64807))

(assert (=> b!69939 m!65123))

(declare-fun m!66599 () Bool)

(assert (=> bm!6006 m!66599))

(assert (=> b!69933 m!66599))

(assert (=> b!69940 m!64775))

(assert (=> b!69940 m!64775))

(assert (=> b!69940 m!64777))

(declare-fun m!66601 () Bool)

(assert (=> b!69944 m!66601))

(assert (=> b!69942 m!64775))

(assert (=> b!69942 m!64775))

(assert (=> b!69942 m!64777))

(assert (=> bm!5893 d!15375))

(assert (=> d!15007 d!15005))

(assert (=> d!15007 d!15009))

(declare-fun d!15377 () Bool)

(assert (=> d!15377 (not (contains!714 (+!90 lt!30028 (tuple2!2103 lt!30025 lt!30024)) lt!30030))))

(assert (=> d!15377 true))

(declare-fun _$36!295 () Unit!1919)

(assert (=> d!15377 (= (choose!391 lt!30028 lt!30025 lt!30024 lt!30030) _$36!295)))

(declare-fun bs!3004 () Bool)

(assert (= bs!3004 d!15377))

(assert (=> bs!3004 m!64591))

(assert (=> bs!3004 m!64591))

(assert (=> bs!3004 m!64593))

(assert (=> d!15007 d!15377))

(declare-fun d!15379 () Bool)

(declare-fun e!45771 () Bool)

(assert (=> d!15379 e!45771))

(declare-fun res!37462 () Bool)

(assert (=> d!15379 (=> res!37462 e!45771)))

(declare-fun lt!30819 () Bool)

(assert (=> d!15379 (= res!37462 (not lt!30819))))

(declare-fun lt!30818 () Bool)

(assert (=> d!15379 (= lt!30819 lt!30818)))

(declare-fun lt!30820 () Unit!1919)

(declare-fun e!45772 () Unit!1919)

(assert (=> d!15379 (= lt!30820 e!45772)))

(declare-fun c!10080 () Bool)

(assert (=> d!15379 (= c!10080 lt!30818)))

(assert (=> d!15379 (= lt!30818 (containsKey!135 (toList!719 lt!30028) lt!30030))))

(assert (=> d!15379 (= (contains!714 lt!30028 lt!30030) lt!30819)))

(declare-fun b!69946 () Bool)

(declare-fun lt!30821 () Unit!1919)

(assert (=> b!69946 (= e!45772 lt!30821)))

(assert (=> b!69946 (= lt!30821 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 lt!30028) lt!30030))))

(assert (=> b!69946 (isDefined!84 (getValueByKey!131 (toList!719 lt!30028) lt!30030))))

(declare-fun b!69947 () Bool)

(declare-fun Unit!1970 () Unit!1919)

(assert (=> b!69947 (= e!45772 Unit!1970)))

(declare-fun b!69948 () Bool)

(assert (=> b!69948 (= e!45771 (isDefined!84 (getValueByKey!131 (toList!719 lt!30028) lt!30030)))))

(assert (= (and d!15379 c!10080) b!69946))

(assert (= (and d!15379 (not c!10080)) b!69947))

(assert (= (and d!15379 (not res!37462)) b!69948))

(declare-fun m!66603 () Bool)

(assert (=> d!15379 m!66603))

(declare-fun m!66605 () Bool)

(assert (=> b!69946 m!66605))

(declare-fun m!66607 () Bool)

(assert (=> b!69946 m!66607))

(assert (=> b!69946 m!66607))

(declare-fun m!66609 () Bool)

(assert (=> b!69946 m!66609))

(assert (=> b!69948 m!66607))

(assert (=> b!69948 m!66607))

(assert (=> b!69948 m!66609))

(assert (=> d!15007 d!15379))

(assert (=> d!14977 d!14985))

(assert (=> d!14977 d!14981))

(declare-fun d!15381 () Bool)

(assert (=> d!15381 (contains!714 (+!90 lt!29988 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))) lt!29979)))

(assert (=> d!15381 true))

(declare-fun _$35!312 () Unit!1919)

(assert (=> d!15381 (= (choose!389 lt!29988 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))) lt!29979) _$35!312)))

(declare-fun bs!3005 () Bool)

(assert (= bs!3005 d!15381))

(assert (=> bs!3005 m!64555))

(assert (=> bs!3005 m!64555))

(assert (=> bs!3005 m!64557))

(assert (=> d!14977 d!15381))

(declare-fun d!15383 () Bool)

(declare-fun e!45773 () Bool)

(assert (=> d!15383 e!45773))

(declare-fun res!37463 () Bool)

(assert (=> d!15383 (=> res!37463 e!45773)))

(declare-fun lt!30823 () Bool)

(assert (=> d!15383 (= res!37463 (not lt!30823))))

(declare-fun lt!30822 () Bool)

(assert (=> d!15383 (= lt!30823 lt!30822)))

(declare-fun lt!30824 () Unit!1919)

(declare-fun e!45774 () Unit!1919)

(assert (=> d!15383 (= lt!30824 e!45774)))

(declare-fun c!10081 () Bool)

(assert (=> d!15383 (= c!10081 lt!30822)))

(assert (=> d!15383 (= lt!30822 (containsKey!135 (toList!719 lt!29988) lt!29979))))

(assert (=> d!15383 (= (contains!714 lt!29988 lt!29979) lt!30823)))

(declare-fun b!69950 () Bool)

(declare-fun lt!30825 () Unit!1919)

(assert (=> b!69950 (= e!45774 lt!30825)))

(assert (=> b!69950 (= lt!30825 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 lt!29988) lt!29979))))

(assert (=> b!69950 (isDefined!84 (getValueByKey!131 (toList!719 lt!29988) lt!29979))))

(declare-fun b!69951 () Bool)

(declare-fun Unit!1971 () Unit!1919)

(assert (=> b!69951 (= e!45774 Unit!1971)))

(declare-fun b!69952 () Bool)

(assert (=> b!69952 (= e!45773 (isDefined!84 (getValueByKey!131 (toList!719 lt!29988) lt!29979)))))

(assert (= (and d!15383 c!10081) b!69950))

(assert (= (and d!15383 (not c!10081)) b!69951))

(assert (= (and d!15383 (not res!37463)) b!69952))

(declare-fun m!66611 () Bool)

(assert (=> d!15383 m!66611))

(declare-fun m!66613 () Bool)

(assert (=> b!69950 m!66613))

(declare-fun m!66615 () Bool)

(assert (=> b!69950 m!66615))

(assert (=> b!69950 m!66615))

(declare-fun m!66617 () Bool)

(assert (=> b!69950 m!66617))

(assert (=> b!69952 m!66615))

(assert (=> b!69952 m!66615))

(assert (=> b!69952 m!66617))

(assert (=> d!14977 d!15383))

(declare-fun b!69955 () Bool)

(declare-fun e!45776 () Option!137)

(assert (=> b!69955 (= e!45776 (getValueByKey!131 (t!4972 (toList!719 lt!30307)) (_1!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!69954 () Bool)

(declare-fun e!45775 () Option!137)

(assert (=> b!69954 (= e!45775 e!45776)))

(declare-fun c!10083 () Bool)

(assert (=> b!69954 (= c!10083 (and ((_ is Cons!1465) (toList!719 lt!30307)) (not (= (_1!1062 (h!2050 (toList!719 lt!30307))) (_1!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))))

(declare-fun b!69956 () Bool)

(assert (=> b!69956 (= e!45776 None!135)))

(declare-fun b!69953 () Bool)

(assert (=> b!69953 (= e!45775 (Some!136 (_2!1062 (h!2050 (toList!719 lt!30307)))))))

(declare-fun d!15385 () Bool)

(declare-fun c!10082 () Bool)

(assert (=> d!15385 (= c!10082 (and ((_ is Cons!1465) (toList!719 lt!30307)) (= (_1!1062 (h!2050 (toList!719 lt!30307))) (_1!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> d!15385 (= (getValueByKey!131 (toList!719 lt!30307) (_1!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))) e!45775)))

(assert (= (and d!15385 c!10082) b!69953))

(assert (= (and d!15385 (not c!10082)) b!69954))

(assert (= (and b!69954 c!10083) b!69955))

(assert (= (and b!69954 (not c!10083)) b!69956))

(declare-fun m!66619 () Bool)

(assert (=> b!69955 m!66619))

(assert (=> b!69129 d!15385))

(declare-fun d!15387 () Bool)

(assert (=> d!15387 (isDefined!84 (getValueByKey!131 (toList!719 lt!30029) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!30826 () Unit!1919)

(assert (=> d!15387 (= lt!30826 (choose!387 (toList!719 lt!30029) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!45777 () Bool)

(assert (=> d!15387 e!45777))

(declare-fun res!37464 () Bool)

(assert (=> d!15387 (=> (not res!37464) (not e!45777))))

(assert (=> d!15387 (= res!37464 (isStrictlySorted!290 (toList!719 lt!30029)))))

(assert (=> d!15387 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 lt!30029) #b1000000000000000000000000000000000000000000000000000000000000000) lt!30826)))

(declare-fun b!69957 () Bool)

(assert (=> b!69957 (= e!45777 (containsKey!135 (toList!719 lt!30029) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!15387 res!37464) b!69957))

(assert (=> d!15387 m!65543))

(assert (=> d!15387 m!65543))

(assert (=> d!15387 m!65545))

(declare-fun m!66621 () Bool)

(assert (=> d!15387 m!66621))

(assert (=> d!15387 m!66471))

(assert (=> b!69957 m!65539))

(assert (=> b!69306 d!15387))

(assert (=> b!69306 d!15227))

(assert (=> b!69306 d!15229))

(declare-fun d!15389 () Bool)

(assert (=> d!15389 (= (get!1127 (getValueByKey!131 (toList!719 lt!30029) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2498 (getValueByKey!131 (toList!719 lt!30029) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!14915 d!15389))

(assert (=> d!14915 d!15219))

(assert (=> bm!5926 d!14933))

(declare-fun d!15391 () Bool)

(assert (=> d!15391 (= (isDefined!84 (getValueByKey!131 (toList!719 lt!30041) (_1!1062 lt!29892))) (not (isEmpty!312 (getValueByKey!131 (toList!719 lt!30041) (_1!1062 lt!29892)))))))

(declare-fun bs!3006 () Bool)

(assert (= bs!3006 d!15391))

(assert (=> bs!3006 m!64611))

(declare-fun m!66623 () Bool)

(assert (=> bs!3006 m!66623))

(assert (=> b!69171 d!15391))

(assert (=> b!69171 d!14913))

(declare-fun d!15393 () Bool)

(assert (=> d!15393 (= (isDefined!84 (getValueByKey!131 (toList!719 call!5856) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355))) (not (isEmpty!312 (getValueByKey!131 (toList!719 call!5856) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))))

(declare-fun bs!3007 () Bool)

(assert (= bs!3007 d!15393))

(assert (=> bs!3007 m!65169))

(declare-fun m!66625 () Bool)

(assert (=> bs!3007 m!66625))

(assert (=> b!69113 d!15393))

(declare-fun b!69960 () Bool)

(declare-fun e!45779 () Option!137)

(assert (=> b!69960 (= e!45779 (getValueByKey!131 (t!4972 (toList!719 call!5856)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(declare-fun b!69959 () Bool)

(declare-fun e!45778 () Option!137)

(assert (=> b!69959 (= e!45778 e!45779)))

(declare-fun c!10085 () Bool)

(assert (=> b!69959 (= c!10085 (and ((_ is Cons!1465) (toList!719 call!5856)) (not (= (_1!1062 (h!2050 (toList!719 call!5856))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))))

(declare-fun b!69961 () Bool)

(assert (=> b!69961 (= e!45779 None!135)))

(declare-fun b!69958 () Bool)

(assert (=> b!69958 (= e!45778 (Some!136 (_2!1062 (h!2050 (toList!719 call!5856)))))))

(declare-fun d!15395 () Bool)

(declare-fun c!10084 () Bool)

(assert (=> d!15395 (= c!10084 (and ((_ is Cons!1465) (toList!719 call!5856)) (= (_1!1062 (h!2050 (toList!719 call!5856))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355))))))

(assert (=> d!15395 (= (getValueByKey!131 (toList!719 call!5856) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) e!45778)))

(assert (= (and d!15395 c!10084) b!69958))

(assert (= (and d!15395 (not c!10084)) b!69959))

(assert (= (and b!69959 c!10085) b!69960))

(assert (= (and b!69959 (not c!10085)) b!69961))

(assert (=> b!69960 m!64407))

(declare-fun m!66627 () Bool)

(assert (=> b!69960 m!66627))

(assert (=> b!69113 d!15395))

(declare-fun e!45781 () Option!137)

(declare-fun b!69964 () Bool)

(assert (=> b!69964 (= e!45781 (getValueByKey!131 (t!4972 (toList!719 lt!30250)) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))

(declare-fun b!69963 () Bool)

(declare-fun e!45780 () Option!137)

(assert (=> b!69963 (= e!45780 e!45781)))

(declare-fun c!10087 () Bool)

(assert (=> b!69963 (= c!10087 (and ((_ is Cons!1465) (toList!719 lt!30250)) (not (= (_1!1062 (h!2050 (toList!719 lt!30250))) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))))

(declare-fun b!69965 () Bool)

(assert (=> b!69965 (= e!45781 None!135)))

(declare-fun b!69962 () Bool)

(assert (=> b!69962 (= e!45780 (Some!136 (_2!1062 (h!2050 (toList!719 lt!30250)))))))

(declare-fun c!10086 () Bool)

(declare-fun d!15397 () Bool)

(assert (=> d!15397 (= c!10086 (and ((_ is Cons!1465) (toList!719 lt!30250)) (= (_1!1062 (h!2050 (toList!719 lt!30250))) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))))))

(assert (=> d!15397 (= (getValueByKey!131 (toList!719 lt!30250) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))) e!45780)))

(assert (= (and d!15397 c!10086) b!69962))

(assert (= (and d!15397 (not c!10086)) b!69963))

(assert (= (and b!69963 c!10087) b!69964))

(assert (= (and b!69963 (not c!10087)) b!69965))

(declare-fun m!66629 () Bool)

(assert (=> b!69964 m!66629))

(assert (=> b!69030 d!15397))

(declare-fun b!69966 () Bool)

(declare-fun e!45785 () Bool)

(declare-fun e!45784 () Bool)

(assert (=> b!69966 (= e!45785 e!45784)))

(declare-fun c!10088 () Bool)

(assert (=> b!69966 (= c!10088 (validKeyInArray!0 (select (arr!1841 (_keys!3812 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!69967 () Bool)

(declare-fun call!6010 () Bool)

(assert (=> b!69967 (= e!45784 call!6010)))

(declare-fun b!69968 () Bool)

(declare-fun e!45782 () Bool)

(assert (=> b!69968 (= e!45782 e!45785)))

(declare-fun res!37467 () Bool)

(assert (=> b!69968 (=> (not res!37467) (not e!45785))))

(declare-fun e!45783 () Bool)

(assert (=> b!69968 (= res!37467 (not e!45783))))

(declare-fun res!37465 () Bool)

(assert (=> b!69968 (=> (not res!37465) (not e!45783))))

(assert (=> b!69968 (= res!37465 (validKeyInArray!0 (select (arr!1841 (_keys!3812 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun d!15399 () Bool)

(declare-fun res!37466 () Bool)

(assert (=> d!15399 (=> res!37466 e!45782)))

(assert (=> d!15399 (= res!37466 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2077 (_keys!3812 newMap!16))))))

(assert (=> d!15399 (= (arrayNoDuplicates!0 (_keys!3812 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!9845 (Cons!1466 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000) Nil!1467) Nil!1467)) e!45782)))

(declare-fun b!69969 () Bool)

(assert (=> b!69969 (= e!45784 call!6010)))

(declare-fun b!69970 () Bool)

(assert (=> b!69970 (= e!45783 (contains!715 (ite c!9845 (Cons!1466 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000) Nil!1467) Nil!1467) (select (arr!1841 (_keys!3812 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun bm!6007 () Bool)

(assert (=> bm!6007 (= call!6010 (arrayNoDuplicates!0 (_keys!3812 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!10088 (Cons!1466 (select (arr!1841 (_keys!3812 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!9845 (Cons!1466 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000) Nil!1467) Nil!1467)) (ite c!9845 (Cons!1466 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000) Nil!1467) Nil!1467))))))

(assert (= (and d!15399 (not res!37466)) b!69968))

(assert (= (and b!69968 res!37465) b!69970))

(assert (= (and b!69968 res!37467) b!69966))

(assert (= (and b!69966 c!10088) b!69967))

(assert (= (and b!69966 (not c!10088)) b!69969))

(assert (= (or b!69967 b!69969) bm!6007))

(assert (=> b!69966 m!66243))

(assert (=> b!69966 m!66243))

(assert (=> b!69966 m!66245))

(assert (=> b!69968 m!66243))

(assert (=> b!69968 m!66243))

(assert (=> b!69968 m!66245))

(assert (=> b!69970 m!66243))

(assert (=> b!69970 m!66243))

(declare-fun m!66631 () Bool)

(assert (=> b!69970 m!66631))

(assert (=> bm!6007 m!66243))

(declare-fun m!66633 () Bool)

(assert (=> bm!6007 m!66633))

(assert (=> bm!5898 d!15399))

(declare-fun d!15401 () Bool)

(declare-fun res!37468 () Bool)

(declare-fun e!45786 () Bool)

(assert (=> d!15401 (=> res!37468 e!45786)))

(assert (=> d!15401 (= res!37468 (and ((_ is Cons!1465) (toList!719 lt!30029)) (= (_1!1062 (h!2050 (toList!719 lt!30029))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!15401 (= (containsKey!135 (toList!719 lt!30029) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!45786)))

(declare-fun b!69971 () Bool)

(declare-fun e!45787 () Bool)

(assert (=> b!69971 (= e!45786 e!45787)))

(declare-fun res!37469 () Bool)

(assert (=> b!69971 (=> (not res!37469) (not e!45787))))

(assert (=> b!69971 (= res!37469 (and (or (not ((_ is Cons!1465) (toList!719 lt!30029))) (bvsle (_1!1062 (h!2050 (toList!719 lt!30029))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1465) (toList!719 lt!30029)) (bvslt (_1!1062 (h!2050 (toList!719 lt!30029))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!69972 () Bool)

(assert (=> b!69972 (= e!45787 (containsKey!135 (t!4972 (toList!719 lt!30029)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!15401 (not res!37468)) b!69971))

(assert (= (and b!69971 res!37469) b!69972))

(assert (=> b!69972 m!64521))

(declare-fun m!66635 () Bool)

(assert (=> b!69972 m!66635))

(assert (=> d!14893 d!15401))

(declare-fun d!15403 () Bool)

(declare-fun e!45788 () Bool)

(assert (=> d!15403 e!45788))

(declare-fun res!37470 () Bool)

(assert (=> d!15403 (=> res!37470 e!45788)))

(declare-fun lt!30828 () Bool)

(assert (=> d!15403 (= res!37470 (not lt!30828))))

(declare-fun lt!30827 () Bool)

(assert (=> d!15403 (= lt!30828 lt!30827)))

(declare-fun lt!30829 () Unit!1919)

(declare-fun e!45789 () Unit!1919)

(assert (=> d!15403 (= lt!30829 e!45789)))

(declare-fun c!10089 () Bool)

(assert (=> d!15403 (= c!10089 lt!30827)))

(assert (=> d!15403 (= lt!30827 (containsKey!135 (toList!719 lt!30183) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!15403 (= (contains!714 lt!30183 #b1000000000000000000000000000000000000000000000000000000000000000) lt!30828)))

(declare-fun b!69973 () Bool)

(declare-fun lt!30830 () Unit!1919)

(assert (=> b!69973 (= e!45789 lt!30830)))

(assert (=> b!69973 (= lt!30830 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 lt!30183) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!69973 (isDefined!84 (getValueByKey!131 (toList!719 lt!30183) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69974 () Bool)

(declare-fun Unit!1972 () Unit!1919)

(assert (=> b!69974 (= e!45789 Unit!1972)))

(declare-fun b!69975 () Bool)

(assert (=> b!69975 (= e!45788 (isDefined!84 (getValueByKey!131 (toList!719 lt!30183) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15403 c!10089) b!69973))

(assert (= (and d!15403 (not c!10089)) b!69974))

(assert (= (and d!15403 (not res!37470)) b!69975))

(declare-fun m!66637 () Bool)

(assert (=> d!15403 m!66637))

(declare-fun m!66639 () Bool)

(assert (=> b!69973 m!66639))

(assert (=> b!69973 m!66465))

(assert (=> b!69973 m!66465))

(declare-fun m!66641 () Bool)

(assert (=> b!69973 m!66641))

(assert (=> b!69975 m!66465))

(assert (=> b!69975 m!66465))

(assert (=> b!69975 m!66641))

(assert (=> bm!5868 d!15403))

(declare-fun d!15405 () Bool)

(declare-fun res!37471 () Bool)

(declare-fun e!45790 () Bool)

(assert (=> d!15405 (=> res!37471 e!45790)))

(assert (=> d!15405 (= res!37471 (and ((_ is Cons!1465) (toList!719 lt!30049)) (= (_1!1062 (h!2050 (toList!719 lt!30049))) (_1!1062 lt!29893))))))

(assert (=> d!15405 (= (containsKey!135 (toList!719 lt!30049) (_1!1062 lt!29893)) e!45790)))

(declare-fun b!69976 () Bool)

(declare-fun e!45791 () Bool)

(assert (=> b!69976 (= e!45790 e!45791)))

(declare-fun res!37472 () Bool)

(assert (=> b!69976 (=> (not res!37472) (not e!45791))))

(assert (=> b!69976 (= res!37472 (and (or (not ((_ is Cons!1465) (toList!719 lt!30049))) (bvsle (_1!1062 (h!2050 (toList!719 lt!30049))) (_1!1062 lt!29893))) ((_ is Cons!1465) (toList!719 lt!30049)) (bvslt (_1!1062 (h!2050 (toList!719 lt!30049))) (_1!1062 lt!29893))))))

(declare-fun b!69977 () Bool)

(assert (=> b!69977 (= e!45791 (containsKey!135 (t!4972 (toList!719 lt!30049)) (_1!1062 lt!29893)))))

(assert (= (and d!15405 (not res!37471)) b!69976))

(assert (= (and b!69976 res!37472) b!69977))

(declare-fun m!66643 () Bool)

(assert (=> b!69977 m!66643))

(assert (=> d!14905 d!15405))

(declare-fun lt!30831 () Bool)

(declare-fun d!15407 () Bool)

(assert (=> d!15407 (= lt!30831 (select (content!74 (ite c!9709 (Cons!1466 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) Nil!1467) Nil!1467)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!45793 () Bool)

(assert (=> d!15407 (= lt!30831 e!45793)))

(declare-fun res!37473 () Bool)

(assert (=> d!15407 (=> (not res!37473) (not e!45793))))

(assert (=> d!15407 (= res!37473 ((_ is Cons!1466) (ite c!9709 (Cons!1466 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) Nil!1467) Nil!1467)))))

(assert (=> d!15407 (= (contains!715 (ite c!9709 (Cons!1466 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) Nil!1467) Nil!1467) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) lt!30831)))

(declare-fun b!69978 () Bool)

(declare-fun e!45792 () Bool)

(assert (=> b!69978 (= e!45793 e!45792)))

(declare-fun res!37474 () Bool)

(assert (=> b!69978 (=> res!37474 e!45792)))

(assert (=> b!69978 (= res!37474 (= (h!2051 (ite c!9709 (Cons!1466 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) Nil!1467) Nil!1467)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!69979 () Bool)

(assert (=> b!69979 (= e!45792 (contains!715 (t!4973 (ite c!9709 (Cons!1466 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) Nil!1467) Nil!1467)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!15407 res!37473) b!69978))

(assert (= (and b!69978 (not res!37474)) b!69979))

(declare-fun m!66645 () Bool)

(assert (=> d!15407 m!66645))

(assert (=> d!15407 m!64767))

(declare-fun m!66647 () Bool)

(assert (=> d!15407 m!66647))

(assert (=> b!69979 m!64767))

(declare-fun m!66649 () Bool)

(assert (=> b!69979 m!66649))

(assert (=> b!68873 d!15407))

(declare-fun lt!30832 () Bool)

(declare-fun d!15409 () Bool)

(assert (=> d!15409 (= lt!30832 (select (content!73 (toList!719 lt!30374)) (tuple2!2103 lt!30025 lt!30024)))))

(declare-fun e!45795 () Bool)

(assert (=> d!15409 (= lt!30832 e!45795)))

(declare-fun res!37475 () Bool)

(assert (=> d!15409 (=> (not res!37475) (not e!45795))))

(assert (=> d!15409 (= res!37475 ((_ is Cons!1465) (toList!719 lt!30374)))))

(assert (=> d!15409 (= (contains!716 (toList!719 lt!30374) (tuple2!2103 lt!30025 lt!30024)) lt!30832)))

(declare-fun b!69980 () Bool)

(declare-fun e!45794 () Bool)

(assert (=> b!69980 (= e!45795 e!45794)))

(declare-fun res!37476 () Bool)

(assert (=> b!69980 (=> res!37476 e!45794)))

(assert (=> b!69980 (= res!37476 (= (h!2050 (toList!719 lt!30374)) (tuple2!2103 lt!30025 lt!30024)))))

(declare-fun b!69981 () Bool)

(assert (=> b!69981 (= e!45794 (contains!716 (t!4972 (toList!719 lt!30374)) (tuple2!2103 lt!30025 lt!30024)))))

(assert (= (and d!15409 res!37475) b!69980))

(assert (= (and b!69980 (not res!37476)) b!69981))

(declare-fun m!66651 () Bool)

(assert (=> d!15409 m!66651))

(declare-fun m!66653 () Bool)

(assert (=> d!15409 m!66653))

(declare-fun m!66655 () Bool)

(assert (=> b!69981 m!66655))

(assert (=> b!69203 d!15409))

(declare-fun b!69982 () Bool)

(declare-fun e!45797 () (_ BitVec 32))

(declare-fun call!6011 () (_ BitVec 32))

(assert (=> b!69982 (= e!45797 (bvadd #b00000000000000000000000000000001 call!6011))))

(declare-fun bm!6008 () Bool)

(assert (=> bm!6008 (= call!6011 (arrayCountValidKeys!0 (_keys!3812 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2077 (_keys!3812 newMap!16))))))

(declare-fun d!15411 () Bool)

(declare-fun lt!30833 () (_ BitVec 32))

(assert (=> d!15411 (and (bvsge lt!30833 #b00000000000000000000000000000000) (bvsle lt!30833 (bvsub (size!2077 (_keys!3812 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun e!45796 () (_ BitVec 32))

(assert (=> d!15411 (= lt!30833 e!45796)))

(declare-fun c!10091 () Bool)

(assert (=> d!15411 (= c!10091 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2077 (_keys!3812 newMap!16))))))

(assert (=> d!15411 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2077 (_keys!3812 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2077 (_keys!3812 newMap!16)) (size!2077 (_keys!3812 newMap!16))))))

(assert (=> d!15411 (= (arrayCountValidKeys!0 (_keys!3812 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2077 (_keys!3812 newMap!16))) lt!30833)))

(declare-fun b!69983 () Bool)

(assert (=> b!69983 (= e!45797 call!6011)))

(declare-fun b!69984 () Bool)

(assert (=> b!69984 (= e!45796 #b00000000000000000000000000000000)))

(declare-fun b!69985 () Bool)

(assert (=> b!69985 (= e!45796 e!45797)))

(declare-fun c!10090 () Bool)

(assert (=> b!69985 (= c!10090 (validKeyInArray!0 (select (arr!1841 (_keys!3812 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!15411 c!10091) b!69984))

(assert (= (and d!15411 (not c!10091)) b!69985))

(assert (= (and b!69985 c!10090) b!69982))

(assert (= (and b!69985 (not c!10090)) b!69983))

(assert (= (or b!69982 b!69983) bm!6008))

(declare-fun m!66657 () Bool)

(assert (=> bm!6008 m!66657))

(assert (=> b!69985 m!66243))

(assert (=> b!69985 m!66243))

(assert (=> b!69985 m!66245))

(assert (=> bm!5901 d!15411))

(declare-fun d!15413 () Bool)

(declare-fun e!45798 () Bool)

(assert (=> d!15413 e!45798))

(declare-fun res!37477 () Bool)

(assert (=> d!15413 (=> res!37477 e!45798)))

(declare-fun lt!30835 () Bool)

(assert (=> d!15413 (= res!37477 (not lt!30835))))

(declare-fun lt!30834 () Bool)

(assert (=> d!15413 (= lt!30835 lt!30834)))

(declare-fun lt!30836 () Unit!1919)

(declare-fun e!45799 () Unit!1919)

(assert (=> d!15413 (= lt!30836 e!45799)))

(declare-fun c!10092 () Bool)

(assert (=> d!15413 (= c!10092 lt!30834)))

(assert (=> d!15413 (= lt!30834 (containsKey!135 (toList!719 lt!30218) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> d!15413 (= (contains!714 lt!30218 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) lt!30835)))

(declare-fun b!69986 () Bool)

(declare-fun lt!30837 () Unit!1919)

(assert (=> b!69986 (= e!45799 lt!30837)))

(assert (=> b!69986 (= lt!30837 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 lt!30218) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!69986 (isDefined!84 (getValueByKey!131 (toList!719 lt!30218) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!69987 () Bool)

(declare-fun Unit!1973 () Unit!1919)

(assert (=> b!69987 (= e!45799 Unit!1973)))

(declare-fun b!69988 () Bool)

(assert (=> b!69988 (= e!45798 (isDefined!84 (getValueByKey!131 (toList!719 lt!30218) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(assert (= (and d!15413 c!10092) b!69986))

(assert (= (and d!15413 (not c!10092)) b!69987))

(assert (= (and d!15413 (not res!37477)) b!69988))

(assert (=> d!15413 m!64847))

(declare-fun m!66659 () Bool)

(assert (=> d!15413 m!66659))

(assert (=> b!69986 m!64847))

(declare-fun m!66661 () Bool)

(assert (=> b!69986 m!66661))

(assert (=> b!69986 m!64847))

(assert (=> b!69986 m!66313))

(assert (=> b!69986 m!66313))

(declare-fun m!66663 () Bool)

(assert (=> b!69986 m!66663))

(assert (=> b!69988 m!64847))

(assert (=> b!69988 m!66313))

(assert (=> b!69988 m!66313))

(assert (=> b!69988 m!66663))

(assert (=> b!68960 d!15413))

(declare-fun d!15415 () Bool)

(declare-fun lt!30838 () Bool)

(assert (=> d!15415 (= lt!30838 (select (content!73 lt!30046) (tuple2!2103 (_1!1062 lt!29892) (_2!1062 lt!29892))))))

(declare-fun e!45801 () Bool)

(assert (=> d!15415 (= lt!30838 e!45801)))

(declare-fun res!37478 () Bool)

(assert (=> d!15415 (=> (not res!37478) (not e!45801))))

(assert (=> d!15415 (= res!37478 ((_ is Cons!1465) lt!30046))))

(assert (=> d!15415 (= (contains!716 lt!30046 (tuple2!2103 (_1!1062 lt!29892) (_2!1062 lt!29892))) lt!30838)))

(declare-fun b!69989 () Bool)

(declare-fun e!45800 () Bool)

(assert (=> b!69989 (= e!45801 e!45800)))

(declare-fun res!37479 () Bool)

(assert (=> b!69989 (=> res!37479 e!45800)))

(assert (=> b!69989 (= res!37479 (= (h!2050 lt!30046) (tuple2!2103 (_1!1062 lt!29892) (_2!1062 lt!29892))))))

(declare-fun b!69990 () Bool)

(assert (=> b!69990 (= e!45800 (contains!716 (t!4972 lt!30046) (tuple2!2103 (_1!1062 lt!29892) (_2!1062 lt!29892))))))

(assert (= (and d!15415 res!37478) b!69989))

(assert (= (and b!69989 (not res!37479)) b!69990))

(declare-fun m!66665 () Bool)

(assert (=> d!15415 m!66665))

(declare-fun m!66667 () Bool)

(assert (=> d!15415 m!66667))

(declare-fun m!66669 () Bool)

(assert (=> b!69990 m!66669))

(assert (=> b!68989 d!15415))

(declare-fun d!15417 () Bool)

(assert (=> d!15417 (= (inRange!0 (index!3066 lt!30212) (mask!6113 newMap!16)) (and (bvsge (index!3066 lt!30212) #b00000000000000000000000000000000) (bvslt (index!3066 lt!30212) (bvadd (mask!6113 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!68950 d!15417))

(assert (=> d!14887 d!14889))

(assert (=> d!14887 d!14891))

(declare-fun d!15419 () Bool)

(assert (=> d!15419 (isDefined!84 (getValueByKey!131 (toList!719 lt!29895) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(assert (=> d!15419 true))

(declare-fun _$12!317 () Unit!1919)

(assert (=> d!15419 (= (choose!387 (toList!719 lt!29895) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) _$12!317)))

(declare-fun bs!3008 () Bool)

(assert (= bs!3008 d!15419))

(assert (=> bs!3008 m!64407))

(assert (=> bs!3008 m!64665))

(assert (=> bs!3008 m!64665))

(assert (=> bs!3008 m!64667))

(assert (=> d!14887 d!15419))

(declare-fun d!15421 () Bool)

(declare-fun res!37480 () Bool)

(declare-fun e!45802 () Bool)

(assert (=> d!15421 (=> res!37480 e!45802)))

(assert (=> d!15421 (= res!37480 (or ((_ is Nil!1466) (toList!719 lt!29895)) ((_ is Nil!1466) (t!4972 (toList!719 lt!29895)))))))

(assert (=> d!15421 (= (isStrictlySorted!290 (toList!719 lt!29895)) e!45802)))

(declare-fun b!69991 () Bool)

(declare-fun e!45803 () Bool)

(assert (=> b!69991 (= e!45802 e!45803)))

(declare-fun res!37481 () Bool)

(assert (=> b!69991 (=> (not res!37481) (not e!45803))))

(assert (=> b!69991 (= res!37481 (bvslt (_1!1062 (h!2050 (toList!719 lt!29895))) (_1!1062 (h!2050 (t!4972 (toList!719 lt!29895))))))))

(declare-fun b!69992 () Bool)

(assert (=> b!69992 (= e!45803 (isStrictlySorted!290 (t!4972 (toList!719 lt!29895))))))

(assert (= (and d!15421 (not res!37480)) b!69991))

(assert (= (and b!69991 res!37481) b!69992))

(declare-fun m!66671 () Bool)

(assert (=> b!69992 m!66671))

(assert (=> d!14887 d!15421))

(assert (=> b!69237 d!15145))

(declare-fun d!15423 () Bool)

(declare-fun res!37482 () Bool)

(declare-fun e!45804 () Bool)

(assert (=> d!15423 (=> res!37482 e!45804)))

(assert (=> d!15423 (= res!37482 (and ((_ is Cons!1465) lt!30042) (= (_1!1062 (h!2050 lt!30042)) (_1!1062 lt!29892))))))

(assert (=> d!15423 (= (containsKey!135 lt!30042 (_1!1062 lt!29892)) e!45804)))

(declare-fun b!69993 () Bool)

(declare-fun e!45805 () Bool)

(assert (=> b!69993 (= e!45804 e!45805)))

(declare-fun res!37483 () Bool)

(assert (=> b!69993 (=> (not res!37483) (not e!45805))))

(assert (=> b!69993 (= res!37483 (and (or (not ((_ is Cons!1465) lt!30042)) (bvsle (_1!1062 (h!2050 lt!30042)) (_1!1062 lt!29892))) ((_ is Cons!1465) lt!30042) (bvslt (_1!1062 (h!2050 lt!30042)) (_1!1062 lt!29892))))))

(declare-fun b!69994 () Bool)

(assert (=> b!69994 (= e!45805 (containsKey!135 (t!4972 lt!30042) (_1!1062 lt!29892)))))

(assert (= (and d!15423 (not res!37482)) b!69993))

(assert (= (and b!69993 res!37483) b!69994))

(declare-fun m!66673 () Bool)

(assert (=> b!69994 m!66673))

(assert (=> b!69176 d!15423))

(declare-fun d!15425 () Bool)

(declare-fun res!37484 () Bool)

(declare-fun e!45806 () Bool)

(assert (=> d!15425 (=> res!37484 e!45806)))

(assert (=> d!15425 (= res!37484 (= (select (arr!1841 (_keys!3812 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(assert (=> d!15425 (= (arrayContainsKey!0 (_keys!3812 newMap!16) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!45806)))

(declare-fun b!69995 () Bool)

(declare-fun e!45807 () Bool)

(assert (=> b!69995 (= e!45806 e!45807)))

(declare-fun res!37485 () Bool)

(assert (=> b!69995 (=> (not res!37485) (not e!45807))))

(assert (=> b!69995 (= res!37485 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2077 (_keys!3812 newMap!16))))))

(declare-fun b!69996 () Bool)

(assert (=> b!69996 (= e!45807 (arrayContainsKey!0 (_keys!3812 newMap!16) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!15425 (not res!37484)) b!69995))

(assert (= (and b!69995 res!37485) b!69996))

(assert (=> d!15425 m!66243))

(assert (=> b!69996 m!64407))

(declare-fun m!66675 () Bool)

(assert (=> b!69996 m!66675))

(assert (=> b!69106 d!15425))

(declare-fun d!15427 () Bool)

(assert (=> d!15427 (= (isDefined!84 (getValueByKey!131 (toList!719 lt!29996) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!312 (getValueByKey!131 (toList!719 lt!29996) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3009 () Bool)

(assert (= bs!3009 d!15427))

(assert (=> bs!3009 m!65103))

(declare-fun m!66677 () Bool)

(assert (=> bs!3009 m!66677))

(assert (=> b!69206 d!15427))

(declare-fun b!69999 () Bool)

(declare-fun e!45809 () Option!137)

(assert (=> b!69999 (= e!45809 (getValueByKey!131 (t!4972 (toList!719 lt!29996)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!69998 () Bool)

(declare-fun e!45808 () Option!137)

(assert (=> b!69998 (= e!45808 e!45809)))

(declare-fun c!10094 () Bool)

(assert (=> b!69998 (= c!10094 (and ((_ is Cons!1465) (toList!719 lt!29996)) (not (= (_1!1062 (h!2050 (toList!719 lt!29996))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!70000 () Bool)

(assert (=> b!70000 (= e!45809 None!135)))

(declare-fun b!69997 () Bool)

(assert (=> b!69997 (= e!45808 (Some!136 (_2!1062 (h!2050 (toList!719 lt!29996)))))))

(declare-fun d!15429 () Bool)

(declare-fun c!10093 () Bool)

(assert (=> d!15429 (= c!10093 (and ((_ is Cons!1465) (toList!719 lt!29996)) (= (_1!1062 (h!2050 (toList!719 lt!29996))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!15429 (= (getValueByKey!131 (toList!719 lt!29996) #b1000000000000000000000000000000000000000000000000000000000000000) e!45808)))

(assert (= (and d!15429 c!10093) b!69997))

(assert (= (and d!15429 (not c!10093)) b!69998))

(assert (= (and b!69998 c!10094) b!69999))

(assert (= (and b!69998 (not c!10094)) b!70000))

(declare-fun m!66679 () Bool)

(assert (=> b!69999 m!66679))

(assert (=> b!69206 d!15429))

(declare-fun d!15431 () Bool)

(declare-fun res!37486 () Bool)

(declare-fun e!45810 () Bool)

(assert (=> d!15431 (=> res!37486 e!45810)))

(assert (=> d!15431 (= res!37486 (and ((_ is Cons!1465) (toList!719 lt!30029)) (= (_1!1062 (h!2050 (toList!719 lt!30029))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!15431 (= (containsKey!135 (toList!719 lt!30029) #b1000000000000000000000000000000000000000000000000000000000000000) e!45810)))

(declare-fun b!70001 () Bool)

(declare-fun e!45811 () Bool)

(assert (=> b!70001 (= e!45810 e!45811)))

(declare-fun res!37487 () Bool)

(assert (=> b!70001 (=> (not res!37487) (not e!45811))))

(assert (=> b!70001 (= res!37487 (and (or (not ((_ is Cons!1465) (toList!719 lt!30029))) (bvsle (_1!1062 (h!2050 (toList!719 lt!30029))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1465) (toList!719 lt!30029)) (bvslt (_1!1062 (h!2050 (toList!719 lt!30029))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!70002 () Bool)

(assert (=> b!70002 (= e!45811 (containsKey!135 (t!4972 (toList!719 lt!30029)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!15431 (not res!37486)) b!70001))

(assert (= (and b!70001 res!37487) b!70002))

(declare-fun m!66681 () Bool)

(assert (=> b!70002 m!66681))

(assert (=> d!15021 d!15431))

(declare-fun d!15433 () Bool)

(declare-fun e!45812 () Bool)

(assert (=> d!15433 e!45812))

(declare-fun res!37488 () Bool)

(assert (=> d!15433 (=> res!37488 e!45812)))

(declare-fun lt!30840 () Bool)

(assert (=> d!15433 (= res!37488 (not lt!30840))))

(declare-fun lt!30839 () Bool)

(assert (=> d!15433 (= lt!30840 lt!30839)))

(declare-fun lt!30841 () Unit!1919)

(declare-fun e!45813 () Unit!1919)

(assert (=> d!15433 (= lt!30841 e!45813)))

(declare-fun c!10095 () Bool)

(assert (=> d!15433 (= c!10095 lt!30839)))

(assert (=> d!15433 (= lt!30839 (containsKey!135 (toList!719 lt!30326) (_1!1062 (tuple2!2103 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> d!15433 (= (contains!714 lt!30326 (_1!1062 (tuple2!2103 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))) lt!30840)))

(declare-fun b!70003 () Bool)

(declare-fun lt!30842 () Unit!1919)

(assert (=> b!70003 (= e!45813 lt!30842)))

(assert (=> b!70003 (= lt!30842 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 lt!30326) (_1!1062 (tuple2!2103 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> b!70003 (isDefined!84 (getValueByKey!131 (toList!719 lt!30326) (_1!1062 (tuple2!2103 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!70004 () Bool)

(declare-fun Unit!1974 () Unit!1919)

(assert (=> b!70004 (= e!45813 Unit!1974)))

(declare-fun b!70005 () Bool)

(assert (=> b!70005 (= e!45812 (isDefined!84 (getValueByKey!131 (toList!719 lt!30326) (_1!1062 (tuple2!2103 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(assert (= (and d!15433 c!10095) b!70003))

(assert (= (and d!15433 (not c!10095)) b!70004))

(assert (= (and d!15433 (not res!37488)) b!70005))

(declare-fun m!66683 () Bool)

(assert (=> d!15433 m!66683))

(declare-fun m!66685 () Bool)

(assert (=> b!70003 m!66685))

(assert (=> b!70003 m!65247))

(assert (=> b!70003 m!65247))

(declare-fun m!66687 () Bool)

(assert (=> b!70003 m!66687))

(assert (=> b!70005 m!65247))

(assert (=> b!70005 m!65247))

(assert (=> b!70005 m!66687))

(assert (=> d!14965 d!15433))

(declare-fun e!45815 () Option!137)

(declare-fun b!70008 () Bool)

(assert (=> b!70008 (= e!45815 (getValueByKey!131 (t!4972 lt!30327) (_1!1062 (tuple2!2103 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!70007 () Bool)

(declare-fun e!45814 () Option!137)

(assert (=> b!70007 (= e!45814 e!45815)))

(declare-fun c!10097 () Bool)

(assert (=> b!70007 (= c!10097 (and ((_ is Cons!1465) lt!30327) (not (= (_1!1062 (h!2050 lt!30327)) (_1!1062 (tuple2!2103 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))))

(declare-fun b!70009 () Bool)

(assert (=> b!70009 (= e!45815 None!135)))

(declare-fun b!70006 () Bool)

(assert (=> b!70006 (= e!45814 (Some!136 (_2!1062 (h!2050 lt!30327))))))

(declare-fun d!15435 () Bool)

(declare-fun c!10096 () Bool)

(assert (=> d!15435 (= c!10096 (and ((_ is Cons!1465) lt!30327) (= (_1!1062 (h!2050 lt!30327)) (_1!1062 (tuple2!2103 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> d!15435 (= (getValueByKey!131 lt!30327 (_1!1062 (tuple2!2103 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))) e!45814)))

(assert (= (and d!15435 c!10096) b!70006))

(assert (= (and d!15435 (not c!10096)) b!70007))

(assert (= (and b!70007 c!10097) b!70008))

(assert (= (and b!70007 (not c!10097)) b!70009))

(declare-fun m!66689 () Bool)

(assert (=> b!70008 m!66689))

(assert (=> d!14965 d!15435))

(declare-fun d!15437 () Bool)

(assert (=> d!15437 (= (getValueByKey!131 lt!30327 (_1!1062 (tuple2!2103 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))) (Some!136 (_2!1062 (tuple2!2103 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun lt!30843 () Unit!1919)

(assert (=> d!15437 (= lt!30843 (choose!386 lt!30327 (_1!1062 (tuple2!2103 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992))))) (_2!1062 (tuple2!2103 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun e!45816 () Bool)

(assert (=> d!15437 e!45816))

(declare-fun res!37489 () Bool)

(assert (=> d!15437 (=> (not res!37489) (not e!45816))))

(assert (=> d!15437 (= res!37489 (isStrictlySorted!290 lt!30327))))

(assert (=> d!15437 (= (lemmaContainsTupThenGetReturnValue!48 lt!30327 (_1!1062 (tuple2!2103 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992))))) (_2!1062 (tuple2!2103 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))) lt!30843)))

(declare-fun b!70010 () Bool)

(declare-fun res!37490 () Bool)

(assert (=> b!70010 (=> (not res!37490) (not e!45816))))

(assert (=> b!70010 (= res!37490 (containsKey!135 lt!30327 (_1!1062 (tuple2!2103 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!70011 () Bool)

(assert (=> b!70011 (= e!45816 (contains!716 lt!30327 (tuple2!2103 (_1!1062 (tuple2!2103 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992))))) (_2!1062 (tuple2!2103 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(assert (= (and d!15437 res!37489) b!70010))

(assert (= (and b!70010 res!37490) b!70011))

(assert (=> d!15437 m!65241))

(declare-fun m!66691 () Bool)

(assert (=> d!15437 m!66691))

(declare-fun m!66693 () Bool)

(assert (=> d!15437 m!66693))

(declare-fun m!66695 () Bool)

(assert (=> b!70010 m!66695))

(declare-fun m!66697 () Bool)

(assert (=> b!70011 m!66697))

(assert (=> d!14965 d!15437))

(declare-fun e!45819 () List!1469)

(declare-fun b!70012 () Bool)

(assert (=> b!70012 (= e!45819 (insertStrictlySorted!51 (t!4972 (toList!719 lt!29981)) (_1!1062 (tuple2!2103 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992))))) (_2!1062 (tuple2!2103 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun d!15439 () Bool)

(declare-fun e!45817 () Bool)

(assert (=> d!15439 e!45817))

(declare-fun res!37492 () Bool)

(assert (=> d!15439 (=> (not res!37492) (not e!45817))))

(declare-fun lt!30844 () List!1469)

(assert (=> d!15439 (= res!37492 (isStrictlySorted!290 lt!30844))))

(declare-fun e!45821 () List!1469)

(assert (=> d!15439 (= lt!30844 e!45821)))

(declare-fun c!10098 () Bool)

(assert (=> d!15439 (= c!10098 (and ((_ is Cons!1465) (toList!719 lt!29981)) (bvslt (_1!1062 (h!2050 (toList!719 lt!29981))) (_1!1062 (tuple2!2103 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> d!15439 (isStrictlySorted!290 (toList!719 lt!29981))))

(assert (=> d!15439 (= (insertStrictlySorted!51 (toList!719 lt!29981) (_1!1062 (tuple2!2103 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992))))) (_2!1062 (tuple2!2103 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))) lt!30844)))

(declare-fun c!10100 () Bool)

(declare-fun c!10101 () Bool)

(declare-fun b!70013 () Bool)

(assert (=> b!70013 (= e!45819 (ite c!10101 (t!4972 (toList!719 lt!29981)) (ite c!10100 (Cons!1465 (h!2050 (toList!719 lt!29981)) (t!4972 (toList!719 lt!29981))) Nil!1466)))))

(declare-fun bm!6009 () Bool)

(declare-fun call!6014 () List!1469)

(declare-fun call!6013 () List!1469)

(assert (=> bm!6009 (= call!6014 call!6013)))

(declare-fun b!70014 () Bool)

(declare-fun e!45820 () List!1469)

(assert (=> b!70014 (= e!45820 call!6014)))

(declare-fun bm!6010 () Bool)

(declare-fun call!6012 () List!1469)

(assert (=> bm!6010 (= call!6013 call!6012)))

(declare-fun bm!6011 () Bool)

(assert (=> bm!6011 (= call!6012 ($colon$colon!64 e!45819 (ite c!10098 (h!2050 (toList!719 lt!29981)) (tuple2!2103 (_1!1062 (tuple2!2103 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992))))) (_2!1062 (tuple2!2103 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))))

(declare-fun c!10099 () Bool)

(assert (=> bm!6011 (= c!10099 c!10098)))

(declare-fun b!70015 () Bool)

(declare-fun e!45818 () List!1469)

(assert (=> b!70015 (= e!45821 e!45818)))

(assert (=> b!70015 (= c!10101 (and ((_ is Cons!1465) (toList!719 lt!29981)) (= (_1!1062 (h!2050 (toList!719 lt!29981))) (_1!1062 (tuple2!2103 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(declare-fun b!70016 () Bool)

(assert (=> b!70016 (= e!45817 (contains!716 lt!30844 (tuple2!2103 (_1!1062 (tuple2!2103 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992))))) (_2!1062 (tuple2!2103 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(declare-fun b!70017 () Bool)

(assert (=> b!70017 (= e!45821 call!6012)))

(declare-fun b!70018 () Bool)

(assert (=> b!70018 (= e!45820 call!6014)))

(declare-fun b!70019 () Bool)

(declare-fun res!37491 () Bool)

(assert (=> b!70019 (=> (not res!37491) (not e!45817))))

(assert (=> b!70019 (= res!37491 (containsKey!135 lt!30844 (_1!1062 (tuple2!2103 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!70020 () Bool)

(assert (=> b!70020 (= e!45818 call!6013)))

(declare-fun b!70021 () Bool)

(assert (=> b!70021 (= c!10100 (and ((_ is Cons!1465) (toList!719 lt!29981)) (bvsgt (_1!1062 (h!2050 (toList!719 lt!29981))) (_1!1062 (tuple2!2103 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> b!70021 (= e!45818 e!45820)))

(assert (= (and d!15439 c!10098) b!70017))

(assert (= (and d!15439 (not c!10098)) b!70015))

(assert (= (and b!70015 c!10101) b!70020))

(assert (= (and b!70015 (not c!10101)) b!70021))

(assert (= (and b!70021 c!10100) b!70014))

(assert (= (and b!70021 (not c!10100)) b!70018))

(assert (= (or b!70014 b!70018) bm!6009))

(assert (= (or b!70020 bm!6009) bm!6010))

(assert (= (or b!70017 bm!6010) bm!6011))

(assert (= (and bm!6011 c!10099) b!70012))

(assert (= (and bm!6011 (not c!10099)) b!70013))

(assert (= (and d!15439 res!37492) b!70019))

(assert (= (and b!70019 res!37491) b!70016))

(declare-fun m!66699 () Bool)

(assert (=> b!70016 m!66699))

(declare-fun m!66701 () Bool)

(assert (=> d!15439 m!66701))

(declare-fun m!66703 () Bool)

(assert (=> d!15439 m!66703))

(declare-fun m!66705 () Bool)

(assert (=> b!70012 m!66705))

(declare-fun m!66707 () Bool)

(assert (=> bm!6011 m!66707))

(declare-fun m!66709 () Bool)

(assert (=> b!70019 m!66709))

(assert (=> d!14965 d!15439))

(declare-fun d!15441 () Bool)

(declare-fun res!37493 () Bool)

(declare-fun e!45822 () Bool)

(assert (=> d!15441 (=> res!37493 e!45822)))

(assert (=> d!15441 (= res!37493 (or ((_ is Nil!1466) lt!30275) ((_ is Nil!1466) (t!4972 lt!30275))))))

(assert (=> d!15441 (= (isStrictlySorted!290 lt!30275) e!45822)))

(declare-fun b!70022 () Bool)

(declare-fun e!45823 () Bool)

(assert (=> b!70022 (= e!45822 e!45823)))

(declare-fun res!37494 () Bool)

(assert (=> b!70022 (=> (not res!37494) (not e!45823))))

(assert (=> b!70022 (= res!37494 (bvslt (_1!1062 (h!2050 lt!30275)) (_1!1062 (h!2050 (t!4972 lt!30275)))))))

(declare-fun b!70023 () Bool)

(assert (=> b!70023 (= e!45823 (isStrictlySorted!290 (t!4972 lt!30275)))))

(assert (= (and d!15441 (not res!37493)) b!70022))

(assert (= (and b!70022 res!37494) b!70023))

(declare-fun m!66711 () Bool)

(assert (=> b!70023 m!66711))

(assert (=> d!14925 d!15441))

(assert (=> d!14925 d!15285))

(declare-fun d!15443 () Bool)

(assert (=> d!15443 (= (apply!73 lt!30183 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1127 (getValueByKey!131 (toList!719 lt!30183) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3010 () Bool)

(assert (= bs!3010 d!15443))

(declare-fun m!66713 () Bool)

(assert (=> bs!3010 m!66713))

(assert (=> bs!3010 m!66713))

(declare-fun m!66715 () Bool)

(assert (=> bs!3010 m!66715))

(assert (=> b!68895 d!15443))

(declare-fun d!15445 () Bool)

(assert (=> d!15445 (= (get!1127 (getValueByKey!131 (toList!719 lt!29984) lt!29994)) (v!2498 (getValueByKey!131 (toList!719 lt!29984) lt!29994)))))

(assert (=> d!14979 d!15445))

(declare-fun b!70026 () Bool)

(declare-fun e!45825 () Option!137)

(assert (=> b!70026 (= e!45825 (getValueByKey!131 (t!4972 (toList!719 lt!29984)) lt!29994))))

(declare-fun b!70025 () Bool)

(declare-fun e!45824 () Option!137)

(assert (=> b!70025 (= e!45824 e!45825)))

(declare-fun c!10103 () Bool)

(assert (=> b!70025 (= c!10103 (and ((_ is Cons!1465) (toList!719 lt!29984)) (not (= (_1!1062 (h!2050 (toList!719 lt!29984))) lt!29994))))))

(declare-fun b!70027 () Bool)

(assert (=> b!70027 (= e!45825 None!135)))

(declare-fun b!70024 () Bool)

(assert (=> b!70024 (= e!45824 (Some!136 (_2!1062 (h!2050 (toList!719 lt!29984)))))))

(declare-fun d!15447 () Bool)

(declare-fun c!10102 () Bool)

(assert (=> d!15447 (= c!10102 (and ((_ is Cons!1465) (toList!719 lt!29984)) (= (_1!1062 (h!2050 (toList!719 lt!29984))) lt!29994)))))

(assert (=> d!15447 (= (getValueByKey!131 (toList!719 lt!29984) lt!29994) e!45824)))

(assert (= (and d!15447 c!10102) b!70024))

(assert (= (and d!15447 (not c!10102)) b!70025))

(assert (= (and b!70025 c!10103) b!70026))

(assert (= (and b!70025 (not c!10103)) b!70027))

(declare-fun m!66717 () Bool)

(assert (=> b!70026 m!66717))

(assert (=> d!14979 d!15447))

(declare-fun d!15449 () Bool)

(declare-fun e!45826 () Bool)

(assert (=> d!15449 e!45826))

(declare-fun res!37496 () Bool)

(assert (=> d!15449 (=> (not res!37496) (not e!45826))))

(declare-fun lt!30847 () ListLongMap!1407)

(assert (=> d!15449 (= res!37496 (contains!714 lt!30847 (_1!1062 (ite (or c!9835 c!9838) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16)))))))))

(declare-fun lt!30848 () List!1469)

(assert (=> d!15449 (= lt!30847 (ListLongMap!1408 lt!30848))))

(declare-fun lt!30845 () Unit!1919)

(declare-fun lt!30846 () Unit!1919)

(assert (=> d!15449 (= lt!30845 lt!30846)))

(assert (=> d!15449 (= (getValueByKey!131 lt!30848 (_1!1062 (ite (or c!9835 c!9838) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16)))))) (Some!136 (_2!1062 (ite (or c!9835 c!9838) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16)))))))))

(assert (=> d!15449 (= lt!30846 (lemmaContainsTupThenGetReturnValue!48 lt!30848 (_1!1062 (ite (or c!9835 c!9838) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16))))) (_2!1062 (ite (or c!9835 c!9838) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16)))))))))

(assert (=> d!15449 (= lt!30848 (insertStrictlySorted!51 (toList!719 (ite c!9835 call!5900 (ite c!9838 call!5894 call!5896))) (_1!1062 (ite (or c!9835 c!9838) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16))))) (_2!1062 (ite (or c!9835 c!9838) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16)))))))))

(assert (=> d!15449 (= (+!90 (ite c!9835 call!5900 (ite c!9838 call!5894 call!5896)) (ite (or c!9835 c!9838) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16))))) lt!30847)))

(declare-fun b!70028 () Bool)

(declare-fun res!37495 () Bool)

(assert (=> b!70028 (=> (not res!37495) (not e!45826))))

(assert (=> b!70028 (= res!37495 (= (getValueByKey!131 (toList!719 lt!30847) (_1!1062 (ite (or c!9835 c!9838) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16)))))) (Some!136 (_2!1062 (ite (or c!9835 c!9838) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16))))))))))

(declare-fun b!70029 () Bool)

(assert (=> b!70029 (= e!45826 (contains!716 (toList!719 lt!30847) (ite (or c!9835 c!9838) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16))))))))

(assert (= (and d!15449 res!37496) b!70028))

(assert (= (and b!70028 res!37495) b!70029))

(declare-fun m!66719 () Bool)

(assert (=> d!15449 m!66719))

(declare-fun m!66721 () Bool)

(assert (=> d!15449 m!66721))

(declare-fun m!66723 () Bool)

(assert (=> d!15449 m!66723))

(declare-fun m!66725 () Bool)

(assert (=> d!15449 m!66725))

(declare-fun m!66727 () Bool)

(assert (=> b!70028 m!66727))

(declare-fun m!66729 () Bool)

(assert (=> b!70029 m!66729))

(assert (=> bm!5892 d!15449))

(declare-fun d!15451 () Bool)

(assert (=> d!15451 (= (get!1127 (getValueByKey!131 (toList!719 lt!29981) lt!29983)) (v!2498 (getValueByKey!131 (toList!719 lt!29981) lt!29983)))))

(assert (=> d!14961 d!15451))

(declare-fun b!70032 () Bool)

(declare-fun e!45828 () Option!137)

(assert (=> b!70032 (= e!45828 (getValueByKey!131 (t!4972 (toList!719 lt!29981)) lt!29983))))

(declare-fun b!70031 () Bool)

(declare-fun e!45827 () Option!137)

(assert (=> b!70031 (= e!45827 e!45828)))

(declare-fun c!10105 () Bool)

(assert (=> b!70031 (= c!10105 (and ((_ is Cons!1465) (toList!719 lt!29981)) (not (= (_1!1062 (h!2050 (toList!719 lt!29981))) lt!29983))))))

(declare-fun b!70033 () Bool)

(assert (=> b!70033 (= e!45828 None!135)))

(declare-fun b!70030 () Bool)

(assert (=> b!70030 (= e!45827 (Some!136 (_2!1062 (h!2050 (toList!719 lt!29981)))))))

(declare-fun d!15453 () Bool)

(declare-fun c!10104 () Bool)

(assert (=> d!15453 (= c!10104 (and ((_ is Cons!1465) (toList!719 lt!29981)) (= (_1!1062 (h!2050 (toList!719 lt!29981))) lt!29983)))))

(assert (=> d!15453 (= (getValueByKey!131 (toList!719 lt!29981) lt!29983) e!45827)))

(assert (= (and d!15453 c!10104) b!70030))

(assert (= (and d!15453 (not c!10104)) b!70031))

(assert (= (and b!70031 c!10105) b!70032))

(assert (= (and b!70031 (not c!10105)) b!70033))

(declare-fun m!66731 () Bool)

(assert (=> b!70032 m!66731))

(assert (=> d!14961 d!15453))

(assert (=> b!69245 d!15145))

(declare-fun d!15455 () Bool)

(assert (=> d!15455 (= ($colon$colon!64 e!45212 (ite c!9811 (h!2050 (toList!719 lt!29889)) (tuple2!2103 (_1!1062 lt!29892) (_2!1062 lt!29892)))) (Cons!1465 (ite c!9811 (h!2050 (toList!719 lt!29889)) (tuple2!2103 (_1!1062 lt!29892) (_2!1062 lt!29892))) e!45212))))

(assert (=> bm!5884 d!15455))

(declare-fun d!15457 () Bool)

(declare-fun c!10106 () Bool)

(assert (=> d!15457 (= c!10106 ((_ is Nil!1466) (toList!719 lt!30056)))))

(declare-fun e!45829 () (InoxSet tuple2!2102))

(assert (=> d!15457 (= (content!73 (toList!719 lt!30056)) e!45829)))

(declare-fun b!70034 () Bool)

(assert (=> b!70034 (= e!45829 ((as const (Array tuple2!2102 Bool)) false))))

(declare-fun b!70035 () Bool)

(assert (=> b!70035 (= e!45829 ((_ map or) (store ((as const (Array tuple2!2102 Bool)) false) (h!2050 (toList!719 lt!30056)) true) (content!73 (t!4972 (toList!719 lt!30056)))))))

(assert (= (and d!15457 c!10106) b!70034))

(assert (= (and d!15457 (not c!10106)) b!70035))

(declare-fun m!66733 () Bool)

(assert (=> b!70035 m!66733))

(declare-fun m!66735 () Bool)

(assert (=> b!70035 m!66735))

(assert (=> d!14841 d!15457))

(assert (=> b!69303 d!15013))

(declare-fun d!15459 () Bool)

(assert (=> d!15459 (arrayContainsKey!0 (_keys!3812 newMap!16) lt!30162 #b00000000000000000000000000000000)))

(declare-fun lt!30849 () Unit!1919)

(assert (=> d!15459 (= lt!30849 (choose!13 (_keys!3812 newMap!16) lt!30162 #b00000000000000000000000000000000))))

(assert (=> d!15459 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!15459 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3812 newMap!16) lt!30162 #b00000000000000000000000000000000) lt!30849)))

(declare-fun bs!3011 () Bool)

(assert (= bs!3011 d!15459))

(assert (=> bs!3011 m!64781))

(declare-fun m!66737 () Bool)

(assert (=> bs!3011 m!66737))

(assert (=> b!68883 d!15459))

(declare-fun d!15461 () Bool)

(declare-fun res!37497 () Bool)

(declare-fun e!45830 () Bool)

(assert (=> d!15461 (=> res!37497 e!45830)))

(assert (=> d!15461 (= res!37497 (= (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000) lt!30162))))

(assert (=> d!15461 (= (arrayContainsKey!0 (_keys!3812 newMap!16) lt!30162 #b00000000000000000000000000000000) e!45830)))

(declare-fun b!70036 () Bool)

(declare-fun e!45831 () Bool)

(assert (=> b!70036 (= e!45830 e!45831)))

(declare-fun res!37498 () Bool)

(assert (=> b!70036 (=> (not res!37498) (not e!45831))))

(assert (=> b!70036 (= res!37498 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2077 (_keys!3812 newMap!16))))))

(declare-fun b!70037 () Bool)

(assert (=> b!70037 (= e!45831 (arrayContainsKey!0 (_keys!3812 newMap!16) lt!30162 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!15461 (not res!37497)) b!70036))

(assert (= (and b!70036 res!37498) b!70037))

(assert (=> d!15461 m!64775))

(declare-fun m!66739 () Bool)

(assert (=> b!70037 m!66739))

(assert (=> b!68883 d!15461))

(declare-fun b!70038 () Bool)

(declare-fun e!45834 () SeekEntryResult!234)

(assert (=> b!70038 (= e!45834 Undefined!234)))

(declare-fun b!70039 () Bool)

(declare-fun e!45832 () SeekEntryResult!234)

(declare-fun lt!30850 () SeekEntryResult!234)

(assert (=> b!70039 (= e!45832 (seekKeyOrZeroReturnVacant!0 (x!10848 lt!30850) (index!3067 lt!30850) (index!3067 lt!30850) (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000) (_keys!3812 newMap!16) (mask!6113 newMap!16)))))

(declare-fun b!70040 () Bool)

(declare-fun c!10108 () Bool)

(declare-fun lt!30851 () (_ BitVec 64))

(assert (=> b!70040 (= c!10108 (= lt!30851 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!45833 () SeekEntryResult!234)

(assert (=> b!70040 (= e!45833 e!45832)))

(declare-fun d!15463 () Bool)

(declare-fun lt!30852 () SeekEntryResult!234)

(assert (=> d!15463 (and (or ((_ is Undefined!234) lt!30852) (not ((_ is Found!234) lt!30852)) (and (bvsge (index!3066 lt!30852) #b00000000000000000000000000000000) (bvslt (index!3066 lt!30852) (size!2077 (_keys!3812 newMap!16))))) (or ((_ is Undefined!234) lt!30852) ((_ is Found!234) lt!30852) (not ((_ is MissingZero!234) lt!30852)) (and (bvsge (index!3065 lt!30852) #b00000000000000000000000000000000) (bvslt (index!3065 lt!30852) (size!2077 (_keys!3812 newMap!16))))) (or ((_ is Undefined!234) lt!30852) ((_ is Found!234) lt!30852) ((_ is MissingZero!234) lt!30852) (not ((_ is MissingVacant!234) lt!30852)) (and (bvsge (index!3068 lt!30852) #b00000000000000000000000000000000) (bvslt (index!3068 lt!30852) (size!2077 (_keys!3812 newMap!16))))) (or ((_ is Undefined!234) lt!30852) (ite ((_ is Found!234) lt!30852) (= (select (arr!1841 (_keys!3812 newMap!16)) (index!3066 lt!30852)) (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!234) lt!30852) (= (select (arr!1841 (_keys!3812 newMap!16)) (index!3065 lt!30852)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!234) lt!30852) (= (select (arr!1841 (_keys!3812 newMap!16)) (index!3068 lt!30852)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!15463 (= lt!30852 e!45834)))

(declare-fun c!10107 () Bool)

(assert (=> d!15463 (= c!10107 (and ((_ is Intermediate!234) lt!30850) (undefined!1046 lt!30850)))))

(assert (=> d!15463 (= lt!30850 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000) (mask!6113 newMap!16)) (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000) (_keys!3812 newMap!16) (mask!6113 newMap!16)))))

(assert (=> d!15463 (validMask!0 (mask!6113 newMap!16))))

(assert (=> d!15463 (= (seekEntryOrOpen!0 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000) (_keys!3812 newMap!16) (mask!6113 newMap!16)) lt!30852)))

(declare-fun b!70041 () Bool)

(assert (=> b!70041 (= e!45832 (MissingZero!234 (index!3067 lt!30850)))))

(declare-fun b!70042 () Bool)

(assert (=> b!70042 (= e!45834 e!45833)))

(assert (=> b!70042 (= lt!30851 (select (arr!1841 (_keys!3812 newMap!16)) (index!3067 lt!30850)))))

(declare-fun c!10109 () Bool)

(assert (=> b!70042 (= c!10109 (= lt!30851 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!70043 () Bool)

(assert (=> b!70043 (= e!45833 (Found!234 (index!3067 lt!30850)))))

(assert (= (and d!15463 c!10107) b!70038))

(assert (= (and d!15463 (not c!10107)) b!70042))

(assert (= (and b!70042 c!10109) b!70043))

(assert (= (and b!70042 (not c!10109)) b!70040))

(assert (= (and b!70040 c!10108) b!70041))

(assert (= (and b!70040 (not c!10108)) b!70039))

(assert (=> b!70039 m!64775))

(declare-fun m!66741 () Bool)

(assert (=> b!70039 m!66741))

(declare-fun m!66743 () Bool)

(assert (=> d!15463 m!66743))

(declare-fun m!66745 () Bool)

(assert (=> d!15463 m!66745))

(declare-fun m!66747 () Bool)

(assert (=> d!15463 m!66747))

(assert (=> d!15463 m!64775))

(declare-fun m!66749 () Bool)

(assert (=> d!15463 m!66749))

(declare-fun m!66751 () Bool)

(assert (=> d!15463 m!66751))

(assert (=> d!15463 m!64759))

(assert (=> d!15463 m!64775))

(assert (=> d!15463 m!66747))

(declare-fun m!66753 () Bool)

(assert (=> b!70042 m!66753))

(assert (=> b!68883 d!15463))

(declare-fun d!15465 () Bool)

(assert (=> d!15465 (= (isDefined!84 (getValueByKey!131 (toList!719 (getCurrentListMap!417 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355))) (not (isEmpty!312 (getValueByKey!131 (toList!719 (getCurrentListMap!417 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))))

(declare-fun bs!3012 () Bool)

(assert (= bs!3012 d!15465))

(assert (=> bs!3012 m!64867))

(declare-fun m!66755 () Bool)

(assert (=> bs!3012 m!66755))

(assert (=> b!68919 d!15465))

(declare-fun b!70046 () Bool)

(declare-fun e!45836 () Option!137)

(assert (=> b!70046 (= e!45836 (getValueByKey!131 (t!4972 (toList!719 (getCurrentListMap!417 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(declare-fun b!70045 () Bool)

(declare-fun e!45835 () Option!137)

(assert (=> b!70045 (= e!45835 e!45836)))

(declare-fun c!10111 () Bool)

(assert (=> b!70045 (= c!10111 (and ((_ is Cons!1465) (toList!719 (getCurrentListMap!417 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))) (not (= (_1!1062 (h!2050 (toList!719 (getCurrentListMap!417 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16))))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))))

(declare-fun b!70047 () Bool)

(assert (=> b!70047 (= e!45836 None!135)))

(declare-fun b!70044 () Bool)

(assert (=> b!70044 (= e!45835 (Some!136 (_2!1062 (h!2050 (toList!719 (getCurrentListMap!417 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))))))

(declare-fun c!10110 () Bool)

(declare-fun d!15467 () Bool)

(assert (=> d!15467 (= c!10110 (and ((_ is Cons!1465) (toList!719 (getCurrentListMap!417 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))) (= (_1!1062 (h!2050 (toList!719 (getCurrentListMap!417 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16))))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355))))))

(assert (=> d!15467 (= (getValueByKey!131 (toList!719 (getCurrentListMap!417 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) e!45835)))

(assert (= (and d!15467 c!10110) b!70044))

(assert (= (and d!15467 (not c!10110)) b!70045))

(assert (= (and b!70045 c!10111) b!70046))

(assert (= (and b!70045 (not c!10111)) b!70047))

(assert (=> b!70046 m!64407))

(declare-fun m!66757 () Bool)

(assert (=> b!70046 m!66757))

(assert (=> b!68919 d!15467))

(assert (=> d!15013 d!14855))

(declare-fun d!15469 () Bool)

(declare-fun e!45845 () Bool)

(assert (=> d!15469 e!45845))

(declare-fun c!10117 () Bool)

(declare-fun lt!30855 () SeekEntryResult!234)

(assert (=> d!15469 (= c!10117 ((_ is MissingZero!234) lt!30855))))

(assert (=> d!15469 (= lt!30855 (seekEntryOrOpen!0 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (_keys!3812 newMap!16) (mask!6113 newMap!16)))))

(assert (=> d!15469 true))

(declare-fun _$34!795 () Unit!1919)

(assert (=> d!15469 (= (choose!392 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) (defaultEntry!2168 newMap!16)) _$34!795)))

(declare-fun b!70064 () Bool)

(declare-fun e!45846 () Bool)

(assert (=> b!70064 (= e!45846 ((_ is Undefined!234) lt!30855))))

(declare-fun b!70065 () Bool)

(declare-fun res!37508 () Bool)

(assert (=> b!70065 (= res!37508 (= (select (arr!1841 (_keys!3812 newMap!16)) (index!3065 lt!30855)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!45848 () Bool)

(assert (=> b!70065 (=> (not res!37508) (not e!45848))))

(declare-fun b!70066 () Bool)

(declare-fun res!37510 () Bool)

(declare-fun e!45847 () Bool)

(assert (=> b!70066 (=> (not res!37510) (not e!45847))))

(declare-fun call!6020 () Bool)

(assert (=> b!70066 (= res!37510 call!6020)))

(assert (=> b!70066 (= e!45846 e!45847)))

(declare-fun b!70067 () Bool)

(declare-fun call!6019 () Bool)

(assert (=> b!70067 (= e!45847 (not call!6019))))

(declare-fun b!70068 () Bool)

(declare-fun res!37509 () Bool)

(assert (=> b!70068 (=> (not res!37509) (not e!45847))))

(assert (=> b!70068 (= res!37509 (= (select (arr!1841 (_keys!3812 newMap!16)) (index!3068 lt!30855)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!70069 () Bool)

(assert (=> b!70069 (= e!45848 (not call!6019))))

(declare-fun b!70070 () Bool)

(assert (=> b!70070 (= e!45845 e!45846)))

(declare-fun c!10116 () Bool)

(assert (=> b!70070 (= c!10116 ((_ is MissingVacant!234) lt!30855))))

(declare-fun bm!6016 () Bool)

(assert (=> bm!6016 (= call!6020 (inRange!0 (ite c!10117 (index!3065 lt!30855) (index!3068 lt!30855)) (mask!6113 newMap!16)))))

(declare-fun b!70071 () Bool)

(assert (=> b!70071 (= e!45845 e!45848)))

(declare-fun res!37507 () Bool)

(assert (=> b!70071 (= res!37507 call!6020)))

(assert (=> b!70071 (=> (not res!37507) (not e!45848))))

(declare-fun bm!6017 () Bool)

(assert (=> bm!6017 (= call!6019 (arrayContainsKey!0 (_keys!3812 newMap!16) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(assert (= (and d!15469 c!10117) b!70071))

(assert (= (and d!15469 (not c!10117)) b!70070))

(assert (= (and b!70071 res!37507) b!70065))

(assert (= (and b!70065 res!37508) b!70069))

(assert (= (and b!70070 c!10116) b!70066))

(assert (= (and b!70070 (not c!10116)) b!70064))

(assert (= (and b!70066 res!37510) b!70068))

(assert (= (and b!70068 res!37509) b!70067))

(assert (= (or b!70071 b!70066) bm!6016))

(assert (= (or b!70069 b!70067) bm!6017))

(declare-fun m!66759 () Bool)

(assert (=> bm!6016 m!66759))

(assert (=> d!15469 m!64407))

(assert (=> d!15469 m!64695))

(declare-fun m!66761 () Bool)

(assert (=> b!70068 m!66761))

(declare-fun m!66763 () Bool)

(assert (=> b!70065 m!66763))

(assert (=> bm!6017 m!64407))

(assert (=> bm!6017 m!64689))

(assert (=> d!15013 d!15469))

(assert (=> d!15013 d!15083))

(declare-fun d!15471 () Bool)

(assert (=> d!15471 (isDefined!84 (getValueByKey!131 (toList!719 lt!30029) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!30856 () Unit!1919)

(assert (=> d!15471 (= lt!30856 (choose!387 (toList!719 lt!30029) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!45849 () Bool)

(assert (=> d!15471 e!45849))

(declare-fun res!37511 () Bool)

(assert (=> d!15471 (=> (not res!37511) (not e!45849))))

(assert (=> d!15471 (= res!37511 (isStrictlySorted!290 (toList!719 lt!30029)))))

(assert (=> d!15471 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 lt!30029) #b0000000000000000000000000000000000000000000000000000000000000000) lt!30856)))

(declare-fun b!70072 () Bool)

(assert (=> b!70072 (= e!45849 (containsKey!135 (toList!719 lt!30029) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!15471 res!37511) b!70072))

(assert (=> d!15471 m!65211))

(assert (=> d!15471 m!65211))

(assert (=> d!15471 m!65213))

(declare-fun m!66765 () Bool)

(assert (=> d!15471 m!66765))

(assert (=> d!15471 m!66471))

(assert (=> b!70072 m!65207))

(assert (=> b!69146 d!15471))

(assert (=> b!69146 d!15289))

(assert (=> b!69146 d!15291))

(declare-fun e!45851 () Option!137)

(declare-fun b!70075 () Bool)

(assert (=> b!70075 (= e!45851 (getValueByKey!131 (t!4972 (toList!719 lt!30326)) (_1!1062 (tuple2!2103 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!70074 () Bool)

(declare-fun e!45850 () Option!137)

(assert (=> b!70074 (= e!45850 e!45851)))

(declare-fun c!10119 () Bool)

(assert (=> b!70074 (= c!10119 (and ((_ is Cons!1465) (toList!719 lt!30326)) (not (= (_1!1062 (h!2050 (toList!719 lt!30326))) (_1!1062 (tuple2!2103 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))))

(declare-fun b!70076 () Bool)

(assert (=> b!70076 (= e!45851 None!135)))

(declare-fun b!70073 () Bool)

(assert (=> b!70073 (= e!45850 (Some!136 (_2!1062 (h!2050 (toList!719 lt!30326)))))))

(declare-fun c!10118 () Bool)

(declare-fun d!15473 () Bool)

(assert (=> d!15473 (= c!10118 (and ((_ is Cons!1465) (toList!719 lt!30326)) (= (_1!1062 (h!2050 (toList!719 lt!30326))) (_1!1062 (tuple2!2103 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> d!15473 (= (getValueByKey!131 (toList!719 lt!30326) (_1!1062 (tuple2!2103 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))) e!45850)))

(assert (= (and d!15473 c!10118) b!70073))

(assert (= (and d!15473 (not c!10118)) b!70074))

(assert (= (and b!70074 c!10119) b!70075))

(assert (= (and b!70074 (not c!10119)) b!70076))

(declare-fun m!66767 () Bool)

(assert (=> b!70075 m!66767))

(assert (=> b!69156 d!15473))

(declare-fun d!15475 () Bool)

(declare-fun res!37512 () Bool)

(declare-fun e!45852 () Bool)

(assert (=> d!15475 (=> (not res!37512) (not e!45852))))

(assert (=> d!15475 (= res!37512 (simpleValid!49 (_2!1061 lt!30497)))))

(assert (=> d!15475 (= (valid!283 (_2!1061 lt!30497)) e!45852)))

(declare-fun b!70077 () Bool)

(declare-fun res!37513 () Bool)

(assert (=> b!70077 (=> (not res!37513) (not e!45852))))

(assert (=> b!70077 (= res!37513 (= (arrayCountValidKeys!0 (_keys!3812 (_2!1061 lt!30497)) #b00000000000000000000000000000000 (size!2077 (_keys!3812 (_2!1061 lt!30497)))) (_size!388 (_2!1061 lt!30497))))))

(declare-fun b!70078 () Bool)

(declare-fun res!37514 () Bool)

(assert (=> b!70078 (=> (not res!37514) (not e!45852))))

(assert (=> b!70078 (= res!37514 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3812 (_2!1061 lt!30497)) (mask!6113 (_2!1061 lt!30497))))))

(declare-fun b!70079 () Bool)

(assert (=> b!70079 (= e!45852 (arrayNoDuplicates!0 (_keys!3812 (_2!1061 lt!30497)) #b00000000000000000000000000000000 Nil!1467))))

(assert (= (and d!15475 res!37512) b!70077))

(assert (= (and b!70077 res!37513) b!70078))

(assert (= (and b!70078 res!37514) b!70079))

(declare-fun m!66769 () Bool)

(assert (=> d!15475 m!66769))

(declare-fun m!66771 () Bool)

(assert (=> b!70077 m!66771))

(declare-fun m!66773 () Bool)

(assert (=> b!70078 m!66773))

(declare-fun m!66775 () Bool)

(assert (=> b!70079 m!66775))

(assert (=> b!69289 d!15475))

(declare-fun e!45855 () Bool)

(declare-fun b!70080 () Bool)

(declare-fun lt!30862 () ListLongMap!1407)

(assert (=> b!70080 (= e!45855 (= lt!30862 (getCurrentListMapNoExtraKeys!55 (_keys!3812 (v!2494 (underlying!253 thiss!992))) (_values!2151 (v!2494 (underlying!253 thiss!992))) (mask!6113 (v!2494 (underlying!253 thiss!992))) (extraKeys!2035 (v!2494 (underlying!253 thiss!992))) (zeroValue!2074 (v!2494 (underlying!253 thiss!992))) (minValue!2074 (v!2494 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun b!70081 () Bool)

(declare-fun e!45858 () Bool)

(declare-fun e!45854 () Bool)

(assert (=> b!70081 (= e!45858 e!45854)))

(declare-fun c!10121 () Bool)

(declare-fun e!45857 () Bool)

(assert (=> b!70081 (= c!10121 e!45857)))

(declare-fun res!37518 () Bool)

(assert (=> b!70081 (=> (not res!37518) (not e!45857))))

(assert (=> b!70081 (= res!37518 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2077 (_keys!3812 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun b!70082 () Bool)

(assert (=> b!70082 (= e!45854 e!45855)))

(declare-fun c!10123 () Bool)

(assert (=> b!70082 (= c!10123 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2077 (_keys!3812 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun b!70083 () Bool)

(declare-fun e!45859 () ListLongMap!1407)

(declare-fun call!6021 () ListLongMap!1407)

(assert (=> b!70083 (= e!45859 call!6021)))

(declare-fun b!70084 () Bool)

(declare-fun e!45856 () ListLongMap!1407)

(assert (=> b!70084 (= e!45856 (ListLongMap!1408 Nil!1466))))

(declare-fun b!70086 () Bool)

(declare-fun lt!30860 () Unit!1919)

(declare-fun lt!30859 () Unit!1919)

(assert (=> b!70086 (= lt!30860 lt!30859)))

(declare-fun lt!30858 () (_ BitVec 64))

(declare-fun lt!30861 () ListLongMap!1407)

(declare-fun lt!30857 () V!2923)

(declare-fun lt!30863 () (_ BitVec 64))

(assert (=> b!70086 (not (contains!714 (+!90 lt!30861 (tuple2!2103 lt!30858 lt!30857)) lt!30863))))

(assert (=> b!70086 (= lt!30859 (addStillNotContains!22 lt!30861 lt!30858 lt!30857 lt!30863))))

(assert (=> b!70086 (= lt!30863 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!70086 (= lt!30857 (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!70086 (= lt!30858 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (=> b!70086 (= lt!30861 call!6021)))

(assert (=> b!70086 (= e!45859 (+!90 call!6021 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun bm!6018 () Bool)

(assert (=> bm!6018 (= call!6021 (getCurrentListMapNoExtraKeys!55 (_keys!3812 (v!2494 (underlying!253 thiss!992))) (_values!2151 (v!2494 (underlying!253 thiss!992))) (mask!6113 (v!2494 (underlying!253 thiss!992))) (extraKeys!2035 (v!2494 (underlying!253 thiss!992))) (zeroValue!2074 (v!2494 (underlying!253 thiss!992))) (minValue!2074 (v!2494 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2168 (v!2494 (underlying!253 thiss!992)))))))

(declare-fun b!70087 () Bool)

(assert (=> b!70087 (= e!45857 (validKeyInArray!0 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!70087 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!70088 () Bool)

(declare-fun e!45853 () Bool)

(assert (=> b!70088 (= e!45854 e!45853)))

(assert (=> b!70088 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2077 (_keys!3812 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun res!37515 () Bool)

(assert (=> b!70088 (= res!37515 (contains!714 lt!30862 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!70088 (=> (not res!37515) (not e!45853))))

(declare-fun b!70089 () Bool)

(assert (=> b!70089 (= e!45856 e!45859)))

(declare-fun c!10120 () Bool)

(assert (=> b!70089 (= c!10120 (validKeyInArray!0 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!70090 () Bool)

(assert (=> b!70090 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2077 (_keys!3812 (v!2494 (underlying!253 thiss!992))))))))

(assert (=> b!70090 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2078 (_values!2151 (v!2494 (underlying!253 thiss!992))))))))

(assert (=> b!70090 (= e!45853 (= (apply!73 lt!30862 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!70091 () Bool)

(declare-fun res!37517 () Bool)

(assert (=> b!70091 (=> (not res!37517) (not e!45858))))

(assert (=> b!70091 (= res!37517 (not (contains!714 lt!30862 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun d!15477 () Bool)

(assert (=> d!15477 e!45858))

(declare-fun res!37516 () Bool)

(assert (=> d!15477 (=> (not res!37516) (not e!45858))))

(assert (=> d!15477 (= res!37516 (not (contains!714 lt!30862 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!15477 (= lt!30862 e!45856)))

(declare-fun c!10122 () Bool)

(assert (=> d!15477 (= c!10122 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2077 (_keys!3812 (v!2494 (underlying!253 thiss!992))))))))

(assert (=> d!15477 (validMask!0 (mask!6113 (v!2494 (underlying!253 thiss!992))))))

(assert (=> d!15477 (= (getCurrentListMapNoExtraKeys!55 (_keys!3812 (v!2494 (underlying!253 thiss!992))) (_values!2151 (v!2494 (underlying!253 thiss!992))) (mask!6113 (v!2494 (underlying!253 thiss!992))) (extraKeys!2035 (v!2494 (underlying!253 thiss!992))) (zeroValue!2074 (v!2494 (underlying!253 thiss!992))) (minValue!2074 (v!2494 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2168 (v!2494 (underlying!253 thiss!992)))) lt!30862)))

(declare-fun b!70085 () Bool)

(assert (=> b!70085 (= e!45855 (isEmpty!310 lt!30862))))

(assert (= (and d!15477 c!10122) b!70084))

(assert (= (and d!15477 (not c!10122)) b!70089))

(assert (= (and b!70089 c!10120) b!70086))

(assert (= (and b!70089 (not c!10120)) b!70083))

(assert (= (or b!70086 b!70083) bm!6018))

(assert (= (and d!15477 res!37516) b!70091))

(assert (= (and b!70091 res!37517) b!70081))

(assert (= (and b!70081 res!37518) b!70087))

(assert (= (and b!70081 c!10121) b!70088))

(assert (= (and b!70081 (not c!10121)) b!70082))

(assert (= (and b!70088 res!37515) b!70090))

(assert (= (and b!70082 c!10123) b!70080))

(assert (= (and b!70082 (not c!10123)) b!70085))

(declare-fun b_lambda!3133 () Bool)

(assert (=> (not b_lambda!3133) (not b!70086)))

(assert (=> b!70086 t!4969))

(declare-fun b_and!4311 () Bool)

(assert (= b_and!4307 (and (=> t!4969 result!2605) b_and!4311)))

(assert (=> b!70086 t!4971))

(declare-fun b_and!4313 () Bool)

(assert (= b_and!4309 (and (=> t!4971 result!2609) b_and!4313)))

(declare-fun b_lambda!3135 () Bool)

(assert (=> (not b_lambda!3135) (not b!70090)))

(assert (=> b!70090 t!4969))

(declare-fun b_and!4315 () Bool)

(assert (= b_and!4311 (and (=> t!4969 result!2605) b_and!4315)))

(assert (=> b!70090 t!4971))

(declare-fun b_and!4317 () Bool)

(assert (= b_and!4313 (and (=> t!4971 result!2609) b_and!4317)))

(assert (=> b!70088 m!65983))

(assert (=> b!70088 m!65983))

(declare-fun m!66777 () Bool)

(assert (=> b!70088 m!66777))

(declare-fun m!66779 () Bool)

(assert (=> b!70085 m!66779))

(assert (=> b!70090 m!64411))

(declare-fun m!66781 () Bool)

(assert (=> b!70090 m!66781))

(assert (=> b!70090 m!65983))

(assert (=> b!70090 m!66781))

(assert (=> b!70090 m!64411))

(declare-fun m!66783 () Bool)

(assert (=> b!70090 m!66783))

(assert (=> b!70090 m!65983))

(declare-fun m!66785 () Bool)

(assert (=> b!70090 m!66785))

(declare-fun m!66787 () Bool)

(assert (=> d!15477 m!66787))

(assert (=> d!15477 m!64441))

(assert (=> b!70086 m!64411))

(declare-fun m!66789 () Bool)

(assert (=> b!70086 m!66789))

(declare-fun m!66791 () Bool)

(assert (=> b!70086 m!66791))

(declare-fun m!66793 () Bool)

(assert (=> b!70086 m!66793))

(assert (=> b!70086 m!66789))

(declare-fun m!66795 () Bool)

(assert (=> b!70086 m!66795))

(assert (=> b!70086 m!66781))

(assert (=> b!70086 m!65983))

(assert (=> b!70086 m!66781))

(assert (=> b!70086 m!64411))

(assert (=> b!70086 m!66783))

(declare-fun m!66797 () Bool)

(assert (=> bm!6018 m!66797))

(assert (=> b!70080 m!66797))

(assert (=> b!70087 m!65983))

(assert (=> b!70087 m!65983))

(declare-fun m!66799 () Bool)

(assert (=> b!70087 m!66799))

(declare-fun m!66801 () Bool)

(assert (=> b!70091 m!66801))

(assert (=> b!70089 m!65983))

(assert (=> b!70089 m!65983))

(assert (=> b!70089 m!66799))

(assert (=> b!68952 d!15477))

(declare-fun d!15479 () Bool)

(declare-fun e!45860 () Bool)

(assert (=> d!15479 e!45860))

(declare-fun res!37519 () Bool)

(assert (=> d!15479 (=> res!37519 e!45860)))

(declare-fun lt!30865 () Bool)

(assert (=> d!15479 (= res!37519 (not lt!30865))))

(declare-fun lt!30864 () Bool)

(assert (=> d!15479 (= lt!30865 lt!30864)))

(declare-fun lt!30866 () Unit!1919)

(declare-fun e!45861 () Unit!1919)

(assert (=> d!15479 (= lt!30866 e!45861)))

(declare-fun c!10124 () Bool)

(assert (=> d!15479 (= c!10124 lt!30864)))

(assert (=> d!15479 (= lt!30864 (containsKey!135 (toList!719 lt!30374) (_1!1062 (tuple2!2103 lt!30025 lt!30024))))))

(assert (=> d!15479 (= (contains!714 lt!30374 (_1!1062 (tuple2!2103 lt!30025 lt!30024))) lt!30865)))

(declare-fun b!70092 () Bool)

(declare-fun lt!30867 () Unit!1919)

(assert (=> b!70092 (= e!45861 lt!30867)))

(assert (=> b!70092 (= lt!30867 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 lt!30374) (_1!1062 (tuple2!2103 lt!30025 lt!30024))))))

(assert (=> b!70092 (isDefined!84 (getValueByKey!131 (toList!719 lt!30374) (_1!1062 (tuple2!2103 lt!30025 lt!30024))))))

(declare-fun b!70093 () Bool)

(declare-fun Unit!1975 () Unit!1919)

(assert (=> b!70093 (= e!45861 Unit!1975)))

(declare-fun b!70094 () Bool)

(assert (=> b!70094 (= e!45860 (isDefined!84 (getValueByKey!131 (toList!719 lt!30374) (_1!1062 (tuple2!2103 lt!30025 lt!30024)))))))

(assert (= (and d!15479 c!10124) b!70092))

(assert (= (and d!15479 (not c!10124)) b!70093))

(assert (= (and d!15479 (not res!37519)) b!70094))

(declare-fun m!66803 () Bool)

(assert (=> d!15479 m!66803))

(declare-fun m!66805 () Bool)

(assert (=> b!70092 m!66805))

(assert (=> b!70092 m!65409))

(assert (=> b!70092 m!65409))

(declare-fun m!66807 () Bool)

(assert (=> b!70092 m!66807))

(assert (=> b!70094 m!65409))

(assert (=> b!70094 m!65409))

(assert (=> b!70094 m!66807))

(assert (=> d!15009 d!15479))

(declare-fun e!45863 () Option!137)

(declare-fun b!70097 () Bool)

(assert (=> b!70097 (= e!45863 (getValueByKey!131 (t!4972 lt!30375) (_1!1062 (tuple2!2103 lt!30025 lt!30024))))))

(declare-fun b!70096 () Bool)

(declare-fun e!45862 () Option!137)

(assert (=> b!70096 (= e!45862 e!45863)))

(declare-fun c!10126 () Bool)

(assert (=> b!70096 (= c!10126 (and ((_ is Cons!1465) lt!30375) (not (= (_1!1062 (h!2050 lt!30375)) (_1!1062 (tuple2!2103 lt!30025 lt!30024))))))))

(declare-fun b!70098 () Bool)

(assert (=> b!70098 (= e!45863 None!135)))

(declare-fun b!70095 () Bool)

(assert (=> b!70095 (= e!45862 (Some!136 (_2!1062 (h!2050 lt!30375))))))

(declare-fun d!15481 () Bool)

(declare-fun c!10125 () Bool)

(assert (=> d!15481 (= c!10125 (and ((_ is Cons!1465) lt!30375) (= (_1!1062 (h!2050 lt!30375)) (_1!1062 (tuple2!2103 lt!30025 lt!30024)))))))

(assert (=> d!15481 (= (getValueByKey!131 lt!30375 (_1!1062 (tuple2!2103 lt!30025 lt!30024))) e!45862)))

(assert (= (and d!15481 c!10125) b!70095))

(assert (= (and d!15481 (not c!10125)) b!70096))

(assert (= (and b!70096 c!10126) b!70097))

(assert (= (and b!70096 (not c!10126)) b!70098))

(declare-fun m!66809 () Bool)

(assert (=> b!70097 m!66809))

(assert (=> d!15009 d!15481))

(declare-fun d!15483 () Bool)

(assert (=> d!15483 (= (getValueByKey!131 lt!30375 (_1!1062 (tuple2!2103 lt!30025 lt!30024))) (Some!136 (_2!1062 (tuple2!2103 lt!30025 lt!30024))))))

(declare-fun lt!30868 () Unit!1919)

(assert (=> d!15483 (= lt!30868 (choose!386 lt!30375 (_1!1062 (tuple2!2103 lt!30025 lt!30024)) (_2!1062 (tuple2!2103 lt!30025 lt!30024))))))

(declare-fun e!45864 () Bool)

(assert (=> d!15483 e!45864))

(declare-fun res!37520 () Bool)

(assert (=> d!15483 (=> (not res!37520) (not e!45864))))

(assert (=> d!15483 (= res!37520 (isStrictlySorted!290 lt!30375))))

(assert (=> d!15483 (= (lemmaContainsTupThenGetReturnValue!48 lt!30375 (_1!1062 (tuple2!2103 lt!30025 lt!30024)) (_2!1062 (tuple2!2103 lt!30025 lt!30024))) lt!30868)))

(declare-fun b!70099 () Bool)

(declare-fun res!37521 () Bool)

(assert (=> b!70099 (=> (not res!37521) (not e!45864))))

(assert (=> b!70099 (= res!37521 (containsKey!135 lt!30375 (_1!1062 (tuple2!2103 lt!30025 lt!30024))))))

(declare-fun b!70100 () Bool)

(assert (=> b!70100 (= e!45864 (contains!716 lt!30375 (tuple2!2103 (_1!1062 (tuple2!2103 lt!30025 lt!30024)) (_2!1062 (tuple2!2103 lt!30025 lt!30024)))))))

(assert (= (and d!15483 res!37520) b!70099))

(assert (= (and b!70099 res!37521) b!70100))

(assert (=> d!15483 m!65403))

(declare-fun m!66811 () Bool)

(assert (=> d!15483 m!66811))

(declare-fun m!66813 () Bool)

(assert (=> d!15483 m!66813))

(declare-fun m!66815 () Bool)

(assert (=> b!70099 m!66815))

(declare-fun m!66817 () Bool)

(assert (=> b!70100 m!66817))

(assert (=> d!15009 d!15483))

(declare-fun e!45867 () List!1469)

(declare-fun b!70101 () Bool)

(assert (=> b!70101 (= e!45867 (insertStrictlySorted!51 (t!4972 (toList!719 lt!30028)) (_1!1062 (tuple2!2103 lt!30025 lt!30024)) (_2!1062 (tuple2!2103 lt!30025 lt!30024))))))

(declare-fun d!15485 () Bool)

(declare-fun e!45865 () Bool)

(assert (=> d!15485 e!45865))

(declare-fun res!37523 () Bool)

(assert (=> d!15485 (=> (not res!37523) (not e!45865))))

(declare-fun lt!30869 () List!1469)

(assert (=> d!15485 (= res!37523 (isStrictlySorted!290 lt!30869))))

(declare-fun e!45869 () List!1469)

(assert (=> d!15485 (= lt!30869 e!45869)))

(declare-fun c!10127 () Bool)

(assert (=> d!15485 (= c!10127 (and ((_ is Cons!1465) (toList!719 lt!30028)) (bvslt (_1!1062 (h!2050 (toList!719 lt!30028))) (_1!1062 (tuple2!2103 lt!30025 lt!30024)))))))

(assert (=> d!15485 (isStrictlySorted!290 (toList!719 lt!30028))))

(assert (=> d!15485 (= (insertStrictlySorted!51 (toList!719 lt!30028) (_1!1062 (tuple2!2103 lt!30025 lt!30024)) (_2!1062 (tuple2!2103 lt!30025 lt!30024))) lt!30869)))

(declare-fun b!70102 () Bool)

(declare-fun c!10130 () Bool)

(declare-fun c!10129 () Bool)

(assert (=> b!70102 (= e!45867 (ite c!10130 (t!4972 (toList!719 lt!30028)) (ite c!10129 (Cons!1465 (h!2050 (toList!719 lt!30028)) (t!4972 (toList!719 lt!30028))) Nil!1466)))))

(declare-fun bm!6019 () Bool)

(declare-fun call!6024 () List!1469)

(declare-fun call!6023 () List!1469)

(assert (=> bm!6019 (= call!6024 call!6023)))

(declare-fun b!70103 () Bool)

(declare-fun e!45868 () List!1469)

(assert (=> b!70103 (= e!45868 call!6024)))

(declare-fun bm!6020 () Bool)

(declare-fun call!6022 () List!1469)

(assert (=> bm!6020 (= call!6023 call!6022)))

(declare-fun bm!6021 () Bool)

(assert (=> bm!6021 (= call!6022 ($colon$colon!64 e!45867 (ite c!10127 (h!2050 (toList!719 lt!30028)) (tuple2!2103 (_1!1062 (tuple2!2103 lt!30025 lt!30024)) (_2!1062 (tuple2!2103 lt!30025 lt!30024))))))))

(declare-fun c!10128 () Bool)

(assert (=> bm!6021 (= c!10128 c!10127)))

(declare-fun b!70104 () Bool)

(declare-fun e!45866 () List!1469)

(assert (=> b!70104 (= e!45869 e!45866)))

(assert (=> b!70104 (= c!10130 (and ((_ is Cons!1465) (toList!719 lt!30028)) (= (_1!1062 (h!2050 (toList!719 lt!30028))) (_1!1062 (tuple2!2103 lt!30025 lt!30024)))))))

(declare-fun b!70105 () Bool)

(assert (=> b!70105 (= e!45865 (contains!716 lt!30869 (tuple2!2103 (_1!1062 (tuple2!2103 lt!30025 lt!30024)) (_2!1062 (tuple2!2103 lt!30025 lt!30024)))))))

(declare-fun b!70106 () Bool)

(assert (=> b!70106 (= e!45869 call!6022)))

(declare-fun b!70107 () Bool)

(assert (=> b!70107 (= e!45868 call!6024)))

(declare-fun b!70108 () Bool)

(declare-fun res!37522 () Bool)

(assert (=> b!70108 (=> (not res!37522) (not e!45865))))

(assert (=> b!70108 (= res!37522 (containsKey!135 lt!30869 (_1!1062 (tuple2!2103 lt!30025 lt!30024))))))

(declare-fun b!70109 () Bool)

(assert (=> b!70109 (= e!45866 call!6023)))

(declare-fun b!70110 () Bool)

(assert (=> b!70110 (= c!10129 (and ((_ is Cons!1465) (toList!719 lt!30028)) (bvsgt (_1!1062 (h!2050 (toList!719 lt!30028))) (_1!1062 (tuple2!2103 lt!30025 lt!30024)))))))

(assert (=> b!70110 (= e!45866 e!45868)))

(assert (= (and d!15485 c!10127) b!70106))

(assert (= (and d!15485 (not c!10127)) b!70104))

(assert (= (and b!70104 c!10130) b!70109))

(assert (= (and b!70104 (not c!10130)) b!70110))

(assert (= (and b!70110 c!10129) b!70103))

(assert (= (and b!70110 (not c!10129)) b!70107))

(assert (= (or b!70103 b!70107) bm!6019))

(assert (= (or b!70109 bm!6019) bm!6020))

(assert (= (or b!70106 bm!6020) bm!6021))

(assert (= (and bm!6021 c!10128) b!70101))

(assert (= (and bm!6021 (not c!10128)) b!70102))

(assert (= (and d!15485 res!37523) b!70108))

(assert (= (and b!70108 res!37522) b!70105))

(declare-fun m!66819 () Bool)

(assert (=> b!70105 m!66819))

(declare-fun m!66821 () Bool)

(assert (=> d!15485 m!66821))

(declare-fun m!66823 () Bool)

(assert (=> d!15485 m!66823))

(declare-fun m!66825 () Bool)

(assert (=> b!70101 m!66825))

(declare-fun m!66827 () Bool)

(assert (=> bm!6021 m!66827))

(declare-fun m!66829 () Bool)

(assert (=> b!70108 m!66829))

(assert (=> d!15009 d!15485))

(declare-fun d!15487 () Bool)

(assert (=> d!15487 (= (apply!73 lt!30391 lt!30401) (get!1127 (getValueByKey!131 (toList!719 lt!30391) lt!30401)))))

(declare-fun bs!3013 () Bool)

(assert (= bs!3013 d!15487))

(declare-fun m!66831 () Bool)

(assert (=> bs!3013 m!66831))

(assert (=> bs!3013 m!66831))

(declare-fun m!66833 () Bool)

(assert (=> bs!3013 m!66833))

(assert (=> b!69232 d!15487))

(declare-fun d!15489 () Bool)

(assert (=> d!15489 (= (apply!73 (+!90 lt!30394 (tuple2!2103 lt!30389 (ite (and c!9754 c!9756) lt!29897 (zeroValue!2074 newMap!16)))) lt!30397) (get!1127 (getValueByKey!131 (toList!719 (+!90 lt!30394 (tuple2!2103 lt!30389 (ite (and c!9754 c!9756) lt!29897 (zeroValue!2074 newMap!16))))) lt!30397)))))

(declare-fun bs!3014 () Bool)

(assert (= bs!3014 d!15489))

(declare-fun m!66835 () Bool)

(assert (=> bs!3014 m!66835))

(assert (=> bs!3014 m!66835))

(declare-fun m!66837 () Bool)

(assert (=> bs!3014 m!66837))

(assert (=> b!69232 d!15489))

(declare-fun d!15491 () Bool)

(declare-fun e!45870 () Bool)

(assert (=> d!15491 e!45870))

(declare-fun res!37524 () Bool)

(assert (=> d!15491 (=> res!37524 e!45870)))

(declare-fun lt!30871 () Bool)

(assert (=> d!15491 (= res!37524 (not lt!30871))))

(declare-fun lt!30870 () Bool)

(assert (=> d!15491 (= lt!30871 lt!30870)))

(declare-fun lt!30872 () Unit!1919)

(declare-fun e!45871 () Unit!1919)

(assert (=> d!15491 (= lt!30872 e!45871)))

(declare-fun c!10131 () Bool)

(assert (=> d!15491 (= c!10131 lt!30870)))

(assert (=> d!15491 (= lt!30870 (containsKey!135 (toList!719 (+!90 lt!30395 (tuple2!2103 lt!30398 (ite (and c!9754 c!9756) lt!29897 (zeroValue!2074 newMap!16))))) lt!30386))))

(assert (=> d!15491 (= (contains!714 (+!90 lt!30395 (tuple2!2103 lt!30398 (ite (and c!9754 c!9756) lt!29897 (zeroValue!2074 newMap!16)))) lt!30386) lt!30871)))

(declare-fun b!70111 () Bool)

(declare-fun lt!30873 () Unit!1919)

(assert (=> b!70111 (= e!45871 lt!30873)))

(assert (=> b!70111 (= lt!30873 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 (+!90 lt!30395 (tuple2!2103 lt!30398 (ite (and c!9754 c!9756) lt!29897 (zeroValue!2074 newMap!16))))) lt!30386))))

(assert (=> b!70111 (isDefined!84 (getValueByKey!131 (toList!719 (+!90 lt!30395 (tuple2!2103 lt!30398 (ite (and c!9754 c!9756) lt!29897 (zeroValue!2074 newMap!16))))) lt!30386))))

(declare-fun b!70112 () Bool)

(declare-fun Unit!1976 () Unit!1919)

(assert (=> b!70112 (= e!45871 Unit!1976)))

(declare-fun b!70113 () Bool)

(assert (=> b!70113 (= e!45870 (isDefined!84 (getValueByKey!131 (toList!719 (+!90 lt!30395 (tuple2!2103 lt!30398 (ite (and c!9754 c!9756) lt!29897 (zeroValue!2074 newMap!16))))) lt!30386)))))

(assert (= (and d!15491 c!10131) b!70111))

(assert (= (and d!15491 (not c!10131)) b!70112))

(assert (= (and d!15491 (not res!37524)) b!70113))

(declare-fun m!66839 () Bool)

(assert (=> d!15491 m!66839))

(declare-fun m!66841 () Bool)

(assert (=> b!70111 m!66841))

(declare-fun m!66843 () Bool)

(assert (=> b!70111 m!66843))

(assert (=> b!70111 m!66843))

(declare-fun m!66845 () Bool)

(assert (=> b!70111 m!66845))

(assert (=> b!70113 m!66843))

(assert (=> b!70113 m!66843))

(assert (=> b!70113 m!66845))

(assert (=> b!69232 d!15491))

(declare-fun d!15493 () Bool)

(assert (=> d!15493 (= (apply!73 (+!90 lt!30388 (tuple2!2103 lt!30399 (minValue!2074 newMap!16))) lt!30390) (get!1127 (getValueByKey!131 (toList!719 (+!90 lt!30388 (tuple2!2103 lt!30399 (minValue!2074 newMap!16)))) lt!30390)))))

(declare-fun bs!3015 () Bool)

(assert (= bs!3015 d!15493))

(declare-fun m!66847 () Bool)

(assert (=> bs!3015 m!66847))

(assert (=> bs!3015 m!66847))

(declare-fun m!66849 () Bool)

(assert (=> bs!3015 m!66849))

(assert (=> b!69232 d!15493))

(declare-fun d!15495 () Bool)

(assert (=> d!15495 (= (apply!73 (+!90 lt!30391 (tuple2!2103 lt!30406 (minValue!2074 newMap!16))) lt!30401) (get!1127 (getValueByKey!131 (toList!719 (+!90 lt!30391 (tuple2!2103 lt!30406 (minValue!2074 newMap!16)))) lt!30401)))))

(declare-fun bs!3016 () Bool)

(assert (= bs!3016 d!15495))

(declare-fun m!66851 () Bool)

(assert (=> bs!3016 m!66851))

(assert (=> bs!3016 m!66851))

(declare-fun m!66853 () Bool)

(assert (=> bs!3016 m!66853))

(assert (=> b!69232 d!15495))

(declare-fun d!15497 () Bool)

(declare-fun e!45872 () Bool)

(assert (=> d!15497 e!45872))

(declare-fun res!37526 () Bool)

(assert (=> d!15497 (=> (not res!37526) (not e!45872))))

(declare-fun lt!30876 () ListLongMap!1407)

(assert (=> d!15497 (= res!37526 (contains!714 lt!30876 (_1!1062 (tuple2!2103 lt!30406 (minValue!2074 newMap!16)))))))

(declare-fun lt!30877 () List!1469)

(assert (=> d!15497 (= lt!30876 (ListLongMap!1408 lt!30877))))

(declare-fun lt!30874 () Unit!1919)

(declare-fun lt!30875 () Unit!1919)

(assert (=> d!15497 (= lt!30874 lt!30875)))

(assert (=> d!15497 (= (getValueByKey!131 lt!30877 (_1!1062 (tuple2!2103 lt!30406 (minValue!2074 newMap!16)))) (Some!136 (_2!1062 (tuple2!2103 lt!30406 (minValue!2074 newMap!16)))))))

(assert (=> d!15497 (= lt!30875 (lemmaContainsTupThenGetReturnValue!48 lt!30877 (_1!1062 (tuple2!2103 lt!30406 (minValue!2074 newMap!16))) (_2!1062 (tuple2!2103 lt!30406 (minValue!2074 newMap!16)))))))

(assert (=> d!15497 (= lt!30877 (insertStrictlySorted!51 (toList!719 lt!30391) (_1!1062 (tuple2!2103 lt!30406 (minValue!2074 newMap!16))) (_2!1062 (tuple2!2103 lt!30406 (minValue!2074 newMap!16)))))))

(assert (=> d!15497 (= (+!90 lt!30391 (tuple2!2103 lt!30406 (minValue!2074 newMap!16))) lt!30876)))

(declare-fun b!70114 () Bool)

(declare-fun res!37525 () Bool)

(assert (=> b!70114 (=> (not res!37525) (not e!45872))))

(assert (=> b!70114 (= res!37525 (= (getValueByKey!131 (toList!719 lt!30876) (_1!1062 (tuple2!2103 lt!30406 (minValue!2074 newMap!16)))) (Some!136 (_2!1062 (tuple2!2103 lt!30406 (minValue!2074 newMap!16))))))))

(declare-fun b!70115 () Bool)

(assert (=> b!70115 (= e!45872 (contains!716 (toList!719 lt!30876) (tuple2!2103 lt!30406 (minValue!2074 newMap!16))))))

(assert (= (and d!15497 res!37526) b!70114))

(assert (= (and b!70114 res!37525) b!70115))

(declare-fun m!66855 () Bool)

(assert (=> d!15497 m!66855))

(declare-fun m!66857 () Bool)

(assert (=> d!15497 m!66857))

(declare-fun m!66859 () Bool)

(assert (=> d!15497 m!66859))

(declare-fun m!66861 () Bool)

(assert (=> d!15497 m!66861))

(declare-fun m!66863 () Bool)

(assert (=> b!70114 m!66863))

(declare-fun m!66865 () Bool)

(assert (=> b!70115 m!66865))

(assert (=> b!69232 d!15497))

(declare-fun d!15499 () Bool)

(assert (=> d!15499 (= (apply!73 lt!30388 lt!30390) (get!1127 (getValueByKey!131 (toList!719 lt!30388) lt!30390)))))

(declare-fun bs!3017 () Bool)

(assert (= bs!3017 d!15499))

(declare-fun m!66867 () Bool)

(assert (=> bs!3017 m!66867))

(assert (=> bs!3017 m!66867))

(declare-fun m!66869 () Bool)

(assert (=> bs!3017 m!66869))

(assert (=> b!69232 d!15499))

(declare-fun d!15501 () Bool)

(assert (=> d!15501 (= (apply!73 lt!30394 lt!30397) (get!1127 (getValueByKey!131 (toList!719 lt!30394) lt!30397)))))

(declare-fun bs!3018 () Bool)

(assert (= bs!3018 d!15501))

(declare-fun m!66871 () Bool)

(assert (=> bs!3018 m!66871))

(assert (=> bs!3018 m!66871))

(declare-fun m!66873 () Bool)

(assert (=> bs!3018 m!66873))

(assert (=> b!69232 d!15501))

(declare-fun d!15503 () Bool)

(declare-fun e!45873 () Bool)

(assert (=> d!15503 e!45873))

(declare-fun res!37528 () Bool)

(assert (=> d!15503 (=> (not res!37528) (not e!45873))))

(declare-fun lt!30880 () ListLongMap!1407)

(assert (=> d!15503 (= res!37528 (contains!714 lt!30880 (_1!1062 (tuple2!2103 lt!30398 (ite (and c!9754 c!9756) lt!29897 (zeroValue!2074 newMap!16))))))))

(declare-fun lt!30881 () List!1469)

(assert (=> d!15503 (= lt!30880 (ListLongMap!1408 lt!30881))))

(declare-fun lt!30878 () Unit!1919)

(declare-fun lt!30879 () Unit!1919)

(assert (=> d!15503 (= lt!30878 lt!30879)))

(assert (=> d!15503 (= (getValueByKey!131 lt!30881 (_1!1062 (tuple2!2103 lt!30398 (ite (and c!9754 c!9756) lt!29897 (zeroValue!2074 newMap!16))))) (Some!136 (_2!1062 (tuple2!2103 lt!30398 (ite (and c!9754 c!9756) lt!29897 (zeroValue!2074 newMap!16))))))))

(assert (=> d!15503 (= lt!30879 (lemmaContainsTupThenGetReturnValue!48 lt!30881 (_1!1062 (tuple2!2103 lt!30398 (ite (and c!9754 c!9756) lt!29897 (zeroValue!2074 newMap!16)))) (_2!1062 (tuple2!2103 lt!30398 (ite (and c!9754 c!9756) lt!29897 (zeroValue!2074 newMap!16))))))))

(assert (=> d!15503 (= lt!30881 (insertStrictlySorted!51 (toList!719 lt!30395) (_1!1062 (tuple2!2103 lt!30398 (ite (and c!9754 c!9756) lt!29897 (zeroValue!2074 newMap!16)))) (_2!1062 (tuple2!2103 lt!30398 (ite (and c!9754 c!9756) lt!29897 (zeroValue!2074 newMap!16))))))))

(assert (=> d!15503 (= (+!90 lt!30395 (tuple2!2103 lt!30398 (ite (and c!9754 c!9756) lt!29897 (zeroValue!2074 newMap!16)))) lt!30880)))

(declare-fun b!70116 () Bool)

(declare-fun res!37527 () Bool)

(assert (=> b!70116 (=> (not res!37527) (not e!45873))))

(assert (=> b!70116 (= res!37527 (= (getValueByKey!131 (toList!719 lt!30880) (_1!1062 (tuple2!2103 lt!30398 (ite (and c!9754 c!9756) lt!29897 (zeroValue!2074 newMap!16))))) (Some!136 (_2!1062 (tuple2!2103 lt!30398 (ite (and c!9754 c!9756) lt!29897 (zeroValue!2074 newMap!16)))))))))

(declare-fun b!70117 () Bool)

(assert (=> b!70117 (= e!45873 (contains!716 (toList!719 lt!30880) (tuple2!2103 lt!30398 (ite (and c!9754 c!9756) lt!29897 (zeroValue!2074 newMap!16)))))))

(assert (= (and d!15503 res!37528) b!70116))

(assert (= (and b!70116 res!37527) b!70117))

(declare-fun m!66875 () Bool)

(assert (=> d!15503 m!66875))

(declare-fun m!66877 () Bool)

(assert (=> d!15503 m!66877))

(declare-fun m!66879 () Bool)

(assert (=> d!15503 m!66879))

(declare-fun m!66881 () Bool)

(assert (=> d!15503 m!66881))

(declare-fun m!66883 () Bool)

(assert (=> b!70116 m!66883))

(declare-fun m!66885 () Bool)

(assert (=> b!70117 m!66885))

(assert (=> b!69232 d!15503))

(declare-fun d!15505 () Bool)

(assert (=> d!15505 (contains!714 (+!90 lt!30395 (tuple2!2103 lt!30398 (ite (and c!9754 c!9756) lt!29897 (zeroValue!2074 newMap!16)))) lt!30386)))

(declare-fun lt!30882 () Unit!1919)

(assert (=> d!15505 (= lt!30882 (choose!389 lt!30395 lt!30398 (ite (and c!9754 c!9756) lt!29897 (zeroValue!2074 newMap!16)) lt!30386))))

(assert (=> d!15505 (contains!714 lt!30395 lt!30386)))

(assert (=> d!15505 (= (addStillContains!49 lt!30395 lt!30398 (ite (and c!9754 c!9756) lt!29897 (zeroValue!2074 newMap!16)) lt!30386) lt!30882)))

(declare-fun bs!3019 () Bool)

(assert (= bs!3019 d!15505))

(assert (=> bs!3019 m!65467))

(assert (=> bs!3019 m!65467))

(assert (=> bs!3019 m!65469))

(declare-fun m!66887 () Bool)

(assert (=> bs!3019 m!66887))

(declare-fun m!66889 () Bool)

(assert (=> bs!3019 m!66889))

(assert (=> b!69232 d!15505))

(declare-fun d!15507 () Bool)

(declare-fun e!45874 () Bool)

(assert (=> d!15507 e!45874))

(declare-fun res!37530 () Bool)

(assert (=> d!15507 (=> (not res!37530) (not e!45874))))

(declare-fun lt!30885 () ListLongMap!1407)

(assert (=> d!15507 (= res!37530 (contains!714 lt!30885 (_1!1062 (tuple2!2103 lt!30389 (ite (and c!9754 c!9756) lt!29897 (zeroValue!2074 newMap!16))))))))

(declare-fun lt!30886 () List!1469)

(assert (=> d!15507 (= lt!30885 (ListLongMap!1408 lt!30886))))

(declare-fun lt!30883 () Unit!1919)

(declare-fun lt!30884 () Unit!1919)

(assert (=> d!15507 (= lt!30883 lt!30884)))

(assert (=> d!15507 (= (getValueByKey!131 lt!30886 (_1!1062 (tuple2!2103 lt!30389 (ite (and c!9754 c!9756) lt!29897 (zeroValue!2074 newMap!16))))) (Some!136 (_2!1062 (tuple2!2103 lt!30389 (ite (and c!9754 c!9756) lt!29897 (zeroValue!2074 newMap!16))))))))

(assert (=> d!15507 (= lt!30884 (lemmaContainsTupThenGetReturnValue!48 lt!30886 (_1!1062 (tuple2!2103 lt!30389 (ite (and c!9754 c!9756) lt!29897 (zeroValue!2074 newMap!16)))) (_2!1062 (tuple2!2103 lt!30389 (ite (and c!9754 c!9756) lt!29897 (zeroValue!2074 newMap!16))))))))

(assert (=> d!15507 (= lt!30886 (insertStrictlySorted!51 (toList!719 lt!30394) (_1!1062 (tuple2!2103 lt!30389 (ite (and c!9754 c!9756) lt!29897 (zeroValue!2074 newMap!16)))) (_2!1062 (tuple2!2103 lt!30389 (ite (and c!9754 c!9756) lt!29897 (zeroValue!2074 newMap!16))))))))

(assert (=> d!15507 (= (+!90 lt!30394 (tuple2!2103 lt!30389 (ite (and c!9754 c!9756) lt!29897 (zeroValue!2074 newMap!16)))) lt!30885)))

(declare-fun b!70118 () Bool)

(declare-fun res!37529 () Bool)

(assert (=> b!70118 (=> (not res!37529) (not e!45874))))

(assert (=> b!70118 (= res!37529 (= (getValueByKey!131 (toList!719 lt!30885) (_1!1062 (tuple2!2103 lt!30389 (ite (and c!9754 c!9756) lt!29897 (zeroValue!2074 newMap!16))))) (Some!136 (_2!1062 (tuple2!2103 lt!30389 (ite (and c!9754 c!9756) lt!29897 (zeroValue!2074 newMap!16)))))))))

(declare-fun b!70119 () Bool)

(assert (=> b!70119 (= e!45874 (contains!716 (toList!719 lt!30885) (tuple2!2103 lt!30389 (ite (and c!9754 c!9756) lt!29897 (zeroValue!2074 newMap!16)))))))

(assert (= (and d!15507 res!37530) b!70118))

(assert (= (and b!70118 res!37529) b!70119))

(declare-fun m!66891 () Bool)

(assert (=> d!15507 m!66891))

(declare-fun m!66893 () Bool)

(assert (=> d!15507 m!66893))

(declare-fun m!66895 () Bool)

(assert (=> d!15507 m!66895))

(declare-fun m!66897 () Bool)

(assert (=> d!15507 m!66897))

(declare-fun m!66899 () Bool)

(assert (=> b!70118 m!66899))

(declare-fun m!66901 () Bool)

(assert (=> b!70119 m!66901))

(assert (=> b!69232 d!15507))

(assert (=> b!69232 d!15169))

(declare-fun d!15509 () Bool)

(assert (=> d!15509 (= (apply!73 (+!90 lt!30394 (tuple2!2103 lt!30389 (ite (and c!9754 c!9756) lt!29897 (zeroValue!2074 newMap!16)))) lt!30397) (apply!73 lt!30394 lt!30397))))

(declare-fun lt!30887 () Unit!1919)

(assert (=> d!15509 (= lt!30887 (choose!388 lt!30394 lt!30389 (ite (and c!9754 c!9756) lt!29897 (zeroValue!2074 newMap!16)) lt!30397))))

(declare-fun e!45875 () Bool)

(assert (=> d!15509 e!45875))

(declare-fun res!37531 () Bool)

(assert (=> d!15509 (=> (not res!37531) (not e!45875))))

(assert (=> d!15509 (= res!37531 (contains!714 lt!30394 lt!30397))))

(assert (=> d!15509 (= (addApplyDifferent!49 lt!30394 lt!30389 (ite (and c!9754 c!9756) lt!29897 (zeroValue!2074 newMap!16)) lt!30397) lt!30887)))

(declare-fun b!70120 () Bool)

(assert (=> b!70120 (= e!45875 (not (= lt!30397 lt!30389)))))

(assert (= (and d!15509 res!37531) b!70120))

(assert (=> d!15509 m!65459))

(declare-fun m!66903 () Bool)

(assert (=> d!15509 m!66903))

(declare-fun m!66905 () Bool)

(assert (=> d!15509 m!66905))

(assert (=> d!15509 m!65477))

(assert (=> d!15509 m!65459))

(assert (=> d!15509 m!65461))

(assert (=> b!69232 d!15509))

(declare-fun d!15511 () Bool)

(assert (=> d!15511 (= (apply!73 (+!90 lt!30388 (tuple2!2103 lt!30399 (minValue!2074 newMap!16))) lt!30390) (apply!73 lt!30388 lt!30390))))

(declare-fun lt!30888 () Unit!1919)

(assert (=> d!15511 (= lt!30888 (choose!388 lt!30388 lt!30399 (minValue!2074 newMap!16) lt!30390))))

(declare-fun e!45876 () Bool)

(assert (=> d!15511 e!45876))

(declare-fun res!37532 () Bool)

(assert (=> d!15511 (=> (not res!37532) (not e!45876))))

(assert (=> d!15511 (= res!37532 (contains!714 lt!30388 lt!30390))))

(assert (=> d!15511 (= (addApplyDifferent!49 lt!30388 lt!30399 (minValue!2074 newMap!16) lt!30390) lt!30888)))

(declare-fun b!70121 () Bool)

(assert (=> b!70121 (= e!45876 (not (= lt!30390 lt!30399)))))

(assert (= (and d!15511 res!37532) b!70121))

(assert (=> d!15511 m!65457))

(declare-fun m!66907 () Bool)

(assert (=> d!15511 m!66907))

(declare-fun m!66909 () Bool)

(assert (=> d!15511 m!66909))

(assert (=> d!15511 m!65473))

(assert (=> d!15511 m!65457))

(assert (=> d!15511 m!65465))

(assert (=> b!69232 d!15511))

(declare-fun d!15513 () Bool)

(declare-fun e!45877 () Bool)

(assert (=> d!15513 e!45877))

(declare-fun res!37534 () Bool)

(assert (=> d!15513 (=> (not res!37534) (not e!45877))))

(declare-fun lt!30891 () ListLongMap!1407)

(assert (=> d!15513 (= res!37534 (contains!714 lt!30891 (_1!1062 (tuple2!2103 lt!30399 (minValue!2074 newMap!16)))))))

(declare-fun lt!30892 () List!1469)

(assert (=> d!15513 (= lt!30891 (ListLongMap!1408 lt!30892))))

(declare-fun lt!30889 () Unit!1919)

(declare-fun lt!30890 () Unit!1919)

(assert (=> d!15513 (= lt!30889 lt!30890)))

(assert (=> d!15513 (= (getValueByKey!131 lt!30892 (_1!1062 (tuple2!2103 lt!30399 (minValue!2074 newMap!16)))) (Some!136 (_2!1062 (tuple2!2103 lt!30399 (minValue!2074 newMap!16)))))))

(assert (=> d!15513 (= lt!30890 (lemmaContainsTupThenGetReturnValue!48 lt!30892 (_1!1062 (tuple2!2103 lt!30399 (minValue!2074 newMap!16))) (_2!1062 (tuple2!2103 lt!30399 (minValue!2074 newMap!16)))))))

(assert (=> d!15513 (= lt!30892 (insertStrictlySorted!51 (toList!719 lt!30388) (_1!1062 (tuple2!2103 lt!30399 (minValue!2074 newMap!16))) (_2!1062 (tuple2!2103 lt!30399 (minValue!2074 newMap!16)))))))

(assert (=> d!15513 (= (+!90 lt!30388 (tuple2!2103 lt!30399 (minValue!2074 newMap!16))) lt!30891)))

(declare-fun b!70122 () Bool)

(declare-fun res!37533 () Bool)

(assert (=> b!70122 (=> (not res!37533) (not e!45877))))

(assert (=> b!70122 (= res!37533 (= (getValueByKey!131 (toList!719 lt!30891) (_1!1062 (tuple2!2103 lt!30399 (minValue!2074 newMap!16)))) (Some!136 (_2!1062 (tuple2!2103 lt!30399 (minValue!2074 newMap!16))))))))

(declare-fun b!70123 () Bool)

(assert (=> b!70123 (= e!45877 (contains!716 (toList!719 lt!30891) (tuple2!2103 lt!30399 (minValue!2074 newMap!16))))))

(assert (= (and d!15513 res!37534) b!70122))

(assert (= (and b!70122 res!37533) b!70123))

(declare-fun m!66911 () Bool)

(assert (=> d!15513 m!66911))

(declare-fun m!66913 () Bool)

(assert (=> d!15513 m!66913))

(declare-fun m!66915 () Bool)

(assert (=> d!15513 m!66915))

(declare-fun m!66917 () Bool)

(assert (=> d!15513 m!66917))

(declare-fun m!66919 () Bool)

(assert (=> b!70122 m!66919))

(declare-fun m!66921 () Bool)

(assert (=> b!70123 m!66921))

(assert (=> b!69232 d!15513))

(declare-fun d!15515 () Bool)

(assert (=> d!15515 (= (apply!73 (+!90 lt!30391 (tuple2!2103 lt!30406 (minValue!2074 newMap!16))) lt!30401) (apply!73 lt!30391 lt!30401))))

(declare-fun lt!30893 () Unit!1919)

(assert (=> d!15515 (= lt!30893 (choose!388 lt!30391 lt!30406 (minValue!2074 newMap!16) lt!30401))))

(declare-fun e!45878 () Bool)

(assert (=> d!15515 e!45878))

(declare-fun res!37535 () Bool)

(assert (=> d!15515 (=> (not res!37535) (not e!45878))))

(assert (=> d!15515 (= res!37535 (contains!714 lt!30391 lt!30401))))

(assert (=> d!15515 (= (addApplyDifferent!49 lt!30391 lt!30406 (minValue!2074 newMap!16) lt!30401) lt!30893)))

(declare-fun b!70124 () Bool)

(assert (=> b!70124 (= e!45878 (not (= lt!30401 lt!30406)))))

(assert (= (and d!15515 res!37535) b!70124))

(assert (=> d!15515 m!65451))

(declare-fun m!66923 () Bool)

(assert (=> d!15515 m!66923))

(declare-fun m!66925 () Bool)

(assert (=> d!15515 m!66925))

(assert (=> d!15515 m!65475))

(assert (=> d!15515 m!65451))

(assert (=> d!15515 m!65453))

(assert (=> b!69232 d!15515))

(declare-fun d!15517 () Bool)

(assert (=> d!15517 (= (apply!73 lt!30293 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1127 (getValueByKey!131 (toList!719 lt!30293) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3020 () Bool)

(assert (= bs!3020 d!15517))

(declare-fun m!66927 () Bool)

(assert (=> bs!3020 m!66927))

(assert (=> bs!3020 m!66927))

(declare-fun m!66929 () Bool)

(assert (=> bs!3020 m!66929))

(assert (=> b!69088 d!15517))

(assert (=> b!69022 d!14831))

(declare-fun d!15519 () Bool)

(declare-fun e!45879 () Bool)

(assert (=> d!15519 e!45879))

(declare-fun res!37536 () Bool)

(assert (=> d!15519 (=> res!37536 e!45879)))

(declare-fun lt!30895 () Bool)

(assert (=> d!15519 (= res!37536 (not lt!30895))))

(declare-fun lt!30894 () Bool)

(assert (=> d!15519 (= lt!30895 lt!30894)))

(declare-fun lt!30896 () Unit!1919)

(declare-fun e!45880 () Unit!1919)

(assert (=> d!15519 (= lt!30896 e!45880)))

(declare-fun c!10132 () Bool)

(assert (=> d!15519 (= c!10132 lt!30894)))

(assert (=> d!15519 (= lt!30894 (containsKey!135 (toList!719 lt!30403) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!15519 (= (contains!714 lt!30403 #b0000000000000000000000000000000000000000000000000000000000000000) lt!30895)))

(declare-fun b!70125 () Bool)

(declare-fun lt!30897 () Unit!1919)

(assert (=> b!70125 (= e!45880 lt!30897)))

(assert (=> b!70125 (= lt!30897 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 lt!30403) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!70125 (isDefined!84 (getValueByKey!131 (toList!719 lt!30403) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!70126 () Bool)

(declare-fun Unit!1977 () Unit!1919)

(assert (=> b!70126 (= e!45880 Unit!1977)))

(declare-fun b!70127 () Bool)

(assert (=> b!70127 (= e!45879 (isDefined!84 (getValueByKey!131 (toList!719 lt!30403) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15519 c!10132) b!70125))

(assert (= (and d!15519 (not c!10132)) b!70126))

(assert (= (and d!15519 (not res!37536)) b!70127))

(declare-fun m!66931 () Bool)

(assert (=> d!15519 m!66931))

(declare-fun m!66933 () Bool)

(assert (=> b!70125 m!66933))

(assert (=> b!70125 m!66423))

(assert (=> b!70125 m!66423))

(declare-fun m!66935 () Bool)

(assert (=> b!70125 m!66935))

(assert (=> b!70127 m!66423))

(assert (=> b!70127 m!66423))

(assert (=> b!70127 m!66935))

(assert (=> bm!5917 d!15519))

(assert (=> d!15015 d!15083))

(declare-fun d!15521 () Bool)

(declare-fun lt!30898 () Bool)

(assert (=> d!15521 (= lt!30898 (select (content!73 (toList!719 lt!30363)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!45882 () Bool)

(assert (=> d!15521 (= lt!30898 e!45882)))

(declare-fun res!37537 () Bool)

(assert (=> d!15521 (=> (not res!37537) (not e!45882))))

(assert (=> d!15521 (= res!37537 ((_ is Cons!1465) (toList!719 lt!30363)))))

(assert (=> d!15521 (= (contains!716 (toList!719 lt!30363) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!30898)))

(declare-fun b!70128 () Bool)

(declare-fun e!45881 () Bool)

(assert (=> b!70128 (= e!45882 e!45881)))

(declare-fun res!37538 () Bool)

(assert (=> b!70128 (=> res!37538 e!45881)))

(assert (=> b!70128 (= res!37538 (= (h!2050 (toList!719 lt!30363)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!70129 () Bool)

(assert (=> b!70129 (= e!45881 (contains!716 (t!4972 (toList!719 lt!30363)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!15521 res!37537) b!70128))

(assert (= (and b!70128 (not res!37538)) b!70129))

(declare-fun m!66937 () Bool)

(assert (=> d!15521 m!66937))

(declare-fun m!66939 () Bool)

(assert (=> d!15521 m!66939))

(declare-fun m!66941 () Bool)

(assert (=> b!70129 m!66941))

(assert (=> b!69194 d!15521))

(declare-fun d!15523 () Bool)

(declare-fun lt!30899 () Bool)

(assert (=> d!15523 (= lt!30899 (select (content!74 Nil!1467) (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!45884 () Bool)

(assert (=> d!15523 (= lt!30899 e!45884)))

(declare-fun res!37539 () Bool)

(assert (=> d!15523 (=> (not res!37539) (not e!45884))))

(assert (=> d!15523 (= res!37539 ((_ is Cons!1466) Nil!1467))))

(assert (=> d!15523 (= (contains!715 Nil!1467 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)) lt!30899)))

(declare-fun b!70130 () Bool)

(declare-fun e!45883 () Bool)

(assert (=> b!70130 (= e!45884 e!45883)))

(declare-fun res!37540 () Bool)

(assert (=> b!70130 (=> res!37540 e!45883)))

(assert (=> b!70130 (= res!37540 (= (h!2051 Nil!1467) (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!70131 () Bool)

(assert (=> b!70131 (= e!45883 (contains!715 (t!4973 Nil!1467) (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!15523 res!37539) b!70130))

(assert (= (and b!70130 (not res!37540)) b!70131))

(assert (=> d!15523 m!65177))

(assert (=> d!15523 m!64775))

(declare-fun m!66943 () Bool)

(assert (=> d!15523 m!66943))

(assert (=> b!70131 m!64775))

(declare-fun m!66945 () Bool)

(assert (=> b!70131 m!66945))

(assert (=> b!69118 d!15523))

(declare-fun lt!30900 () Bool)

(declare-fun d!15525 () Bool)

(assert (=> d!15525 (= lt!30900 (select (content!73 (toList!719 lt!30254)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))))

(declare-fun e!45886 () Bool)

(assert (=> d!15525 (= lt!30900 e!45886)))

(declare-fun res!37541 () Bool)

(assert (=> d!15525 (=> (not res!37541) (not e!45886))))

(assert (=> d!15525 (= res!37541 ((_ is Cons!1465) (toList!719 lt!30254)))))

(assert (=> d!15525 (= (contains!716 (toList!719 lt!30254) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)) lt!30900)))

(declare-fun b!70132 () Bool)

(declare-fun e!45885 () Bool)

(assert (=> b!70132 (= e!45886 e!45885)))

(declare-fun res!37542 () Bool)

(assert (=> b!70132 (=> res!37542 e!45885)))

(assert (=> b!70132 (= res!37542 (= (h!2050 (toList!719 lt!30254)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))))

(declare-fun b!70133 () Bool)

(assert (=> b!70133 (= e!45885 (contains!716 (t!4972 (toList!719 lt!30254)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))))

(assert (= (and d!15525 res!37541) b!70132))

(assert (= (and b!70132 (not res!37542)) b!70133))

(declare-fun m!66947 () Bool)

(assert (=> d!15525 m!66947))

(declare-fun m!66949 () Bool)

(assert (=> d!15525 m!66949))

(declare-fun m!66951 () Bool)

(assert (=> b!70133 m!66951))

(assert (=> b!69033 d!15525))

(declare-fun d!15527 () Bool)

(declare-fun res!37543 () Bool)

(declare-fun e!45887 () Bool)

(assert (=> d!15527 (=> res!37543 e!45887)))

(assert (=> d!15527 (= res!37543 (and ((_ is Cons!1465) lt!30046) (= (_1!1062 (h!2050 lt!30046)) (_1!1062 lt!29892))))))

(assert (=> d!15527 (= (containsKey!135 lt!30046 (_1!1062 lt!29892)) e!45887)))

(declare-fun b!70134 () Bool)

(declare-fun e!45888 () Bool)

(assert (=> b!70134 (= e!45887 e!45888)))

(declare-fun res!37544 () Bool)

(assert (=> b!70134 (=> (not res!37544) (not e!45888))))

(assert (=> b!70134 (= res!37544 (and (or (not ((_ is Cons!1465) lt!30046)) (bvsle (_1!1062 (h!2050 lt!30046)) (_1!1062 lt!29892))) ((_ is Cons!1465) lt!30046) (bvslt (_1!1062 (h!2050 lt!30046)) (_1!1062 lt!29892))))))

(declare-fun b!70135 () Bool)

(assert (=> b!70135 (= e!45888 (containsKey!135 (t!4972 lt!30046) (_1!1062 lt!29892)))))

(assert (= (and d!15527 (not res!37543)) b!70134))

(assert (= (and b!70134 res!37544) b!70135))

(declare-fun m!66953 () Bool)

(assert (=> b!70135 m!66953))

(assert (=> b!68988 d!15527))

(declare-fun b!70136 () Bool)

(declare-fun e!45891 () List!1469)

(assert (=> b!70136 (= e!45891 (insertStrictlySorted!51 (t!4972 (t!4972 (toList!719 lt!29889))) (_1!1062 lt!29893) (_2!1062 lt!29893)))))

(declare-fun d!15529 () Bool)

(declare-fun e!45889 () Bool)

(assert (=> d!15529 e!45889))

(declare-fun res!37546 () Bool)

(assert (=> d!15529 (=> (not res!37546) (not e!45889))))

(declare-fun lt!30901 () List!1469)

(assert (=> d!15529 (= res!37546 (isStrictlySorted!290 lt!30901))))

(declare-fun e!45893 () List!1469)

(assert (=> d!15529 (= lt!30901 e!45893)))

(declare-fun c!10133 () Bool)

(assert (=> d!15529 (= c!10133 (and ((_ is Cons!1465) (t!4972 (toList!719 lt!29889))) (bvslt (_1!1062 (h!2050 (t!4972 (toList!719 lt!29889)))) (_1!1062 lt!29893))))))

(assert (=> d!15529 (isStrictlySorted!290 (t!4972 (toList!719 lt!29889)))))

(assert (=> d!15529 (= (insertStrictlySorted!51 (t!4972 (toList!719 lt!29889)) (_1!1062 lt!29893) (_2!1062 lt!29893)) lt!30901)))

(declare-fun b!70137 () Bool)

(declare-fun c!10135 () Bool)

(declare-fun c!10136 () Bool)

(assert (=> b!70137 (= e!45891 (ite c!10136 (t!4972 (t!4972 (toList!719 lt!29889))) (ite c!10135 (Cons!1465 (h!2050 (t!4972 (toList!719 lt!29889))) (t!4972 (t!4972 (toList!719 lt!29889)))) Nil!1466)))))

(declare-fun bm!6022 () Bool)

(declare-fun call!6027 () List!1469)

(declare-fun call!6026 () List!1469)

(assert (=> bm!6022 (= call!6027 call!6026)))

(declare-fun b!70138 () Bool)

(declare-fun e!45892 () List!1469)

(assert (=> b!70138 (= e!45892 call!6027)))

(declare-fun bm!6023 () Bool)

(declare-fun call!6025 () List!1469)

(assert (=> bm!6023 (= call!6026 call!6025)))

(declare-fun bm!6024 () Bool)

(assert (=> bm!6024 (= call!6025 ($colon$colon!64 e!45891 (ite c!10133 (h!2050 (t!4972 (toList!719 lt!29889))) (tuple2!2103 (_1!1062 lt!29893) (_2!1062 lt!29893)))))))

(declare-fun c!10134 () Bool)

(assert (=> bm!6024 (= c!10134 c!10133)))

(declare-fun b!70139 () Bool)

(declare-fun e!45890 () List!1469)

(assert (=> b!70139 (= e!45893 e!45890)))

(assert (=> b!70139 (= c!10136 (and ((_ is Cons!1465) (t!4972 (toList!719 lt!29889))) (= (_1!1062 (h!2050 (t!4972 (toList!719 lt!29889)))) (_1!1062 lt!29893))))))

(declare-fun b!70140 () Bool)

(assert (=> b!70140 (= e!45889 (contains!716 lt!30901 (tuple2!2103 (_1!1062 lt!29893) (_2!1062 lt!29893))))))

(declare-fun b!70141 () Bool)

(assert (=> b!70141 (= e!45893 call!6025)))

(declare-fun b!70142 () Bool)

(assert (=> b!70142 (= e!45892 call!6027)))

(declare-fun b!70143 () Bool)

(declare-fun res!37545 () Bool)

(assert (=> b!70143 (=> (not res!37545) (not e!45889))))

(assert (=> b!70143 (= res!37545 (containsKey!135 lt!30901 (_1!1062 lt!29893)))))

(declare-fun b!70144 () Bool)

(assert (=> b!70144 (= e!45890 call!6026)))

(declare-fun b!70145 () Bool)

(assert (=> b!70145 (= c!10135 (and ((_ is Cons!1465) (t!4972 (toList!719 lt!29889))) (bvsgt (_1!1062 (h!2050 (t!4972 (toList!719 lt!29889)))) (_1!1062 lt!29893))))))

(assert (=> b!70145 (= e!45890 e!45892)))

(assert (= (and d!15529 c!10133) b!70141))

(assert (= (and d!15529 (not c!10133)) b!70139))

(assert (= (and b!70139 c!10136) b!70144))

(assert (= (and b!70139 (not c!10136)) b!70145))

(assert (= (and b!70145 c!10135) b!70138))

(assert (= (and b!70145 (not c!10135)) b!70142))

(assert (= (or b!70138 b!70142) bm!6022))

(assert (= (or b!70144 bm!6022) bm!6023))

(assert (= (or b!70141 bm!6023) bm!6024))

(assert (= (and bm!6024 c!10134) b!70136))

(assert (= (and bm!6024 (not c!10134)) b!70137))

(assert (= (and d!15529 res!37546) b!70143))

(assert (= (and b!70143 res!37545) b!70140))

(declare-fun m!66955 () Bool)

(assert (=> b!70140 m!66955))

(declare-fun m!66957 () Bool)

(assert (=> d!15529 m!66957))

(assert (=> d!15529 m!66111))

(declare-fun m!66959 () Bool)

(assert (=> b!70136 m!66959))

(declare-fun m!66961 () Bool)

(assert (=> bm!6024 m!66961))

(declare-fun m!66963 () Bool)

(assert (=> b!70143 m!66963))

(assert (=> b!69070 d!15529))

(assert (=> b!68959 d!15309))

(declare-fun d!15531 () Bool)

(assert (=> d!15531 (= (get!1127 (getValueByKey!131 (toList!719 (+!90 lt!29984 (tuple2!2103 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))) lt!29994)) (v!2498 (getValueByKey!131 (toList!719 (+!90 lt!29984 (tuple2!2103 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))) lt!29994)))))

(assert (=> d!14987 d!15531))

(declare-fun e!45895 () Option!137)

(declare-fun b!70148 () Bool)

(assert (=> b!70148 (= e!45895 (getValueByKey!131 (t!4972 (toList!719 (+!90 lt!29984 (tuple2!2103 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))) lt!29994))))

(declare-fun b!70147 () Bool)

(declare-fun e!45894 () Option!137)

(assert (=> b!70147 (= e!45894 e!45895)))

(declare-fun c!10138 () Bool)

(assert (=> b!70147 (= c!10138 (and ((_ is Cons!1465) (toList!719 (+!90 lt!29984 (tuple2!2103 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))) (not (= (_1!1062 (h!2050 (toList!719 (+!90 lt!29984 (tuple2!2103 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))) lt!29994))))))

(declare-fun b!70149 () Bool)

(assert (=> b!70149 (= e!45895 None!135)))

(declare-fun b!70146 () Bool)

(assert (=> b!70146 (= e!45894 (Some!136 (_2!1062 (h!2050 (toList!719 (+!90 lt!29984 (tuple2!2103 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))))))))

(declare-fun c!10137 () Bool)

(declare-fun d!15533 () Bool)

(assert (=> d!15533 (= c!10137 (and ((_ is Cons!1465) (toList!719 (+!90 lt!29984 (tuple2!2103 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))) (= (_1!1062 (h!2050 (toList!719 (+!90 lt!29984 (tuple2!2103 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))) lt!29994)))))

(assert (=> d!15533 (= (getValueByKey!131 (toList!719 (+!90 lt!29984 (tuple2!2103 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))) lt!29994) e!45894)))

(assert (= (and d!15533 c!10137) b!70146))

(assert (= (and d!15533 (not c!10137)) b!70147))

(assert (= (and b!70147 c!10138) b!70148))

(assert (= (and b!70147 (not c!10138)) b!70149))

(declare-fun m!66965 () Bool)

(assert (=> b!70148 m!66965))

(assert (=> d!14987 d!15533))

(declare-fun e!45897 () Option!137)

(declare-fun b!70152 () Bool)

(assert (=> b!70152 (= e!45897 (getValueByKey!131 (t!4972 (toList!719 lt!30374)) (_1!1062 (tuple2!2103 lt!30025 lt!30024))))))

(declare-fun b!70151 () Bool)

(declare-fun e!45896 () Option!137)

(assert (=> b!70151 (= e!45896 e!45897)))

(declare-fun c!10140 () Bool)

(assert (=> b!70151 (= c!10140 (and ((_ is Cons!1465) (toList!719 lt!30374)) (not (= (_1!1062 (h!2050 (toList!719 lt!30374))) (_1!1062 (tuple2!2103 lt!30025 lt!30024))))))))

(declare-fun b!70153 () Bool)

(assert (=> b!70153 (= e!45897 None!135)))

(declare-fun b!70150 () Bool)

(assert (=> b!70150 (= e!45896 (Some!136 (_2!1062 (h!2050 (toList!719 lt!30374)))))))

(declare-fun d!15535 () Bool)

(declare-fun c!10139 () Bool)

(assert (=> d!15535 (= c!10139 (and ((_ is Cons!1465) (toList!719 lt!30374)) (= (_1!1062 (h!2050 (toList!719 lt!30374))) (_1!1062 (tuple2!2103 lt!30025 lt!30024)))))))

(assert (=> d!15535 (= (getValueByKey!131 (toList!719 lt!30374) (_1!1062 (tuple2!2103 lt!30025 lt!30024))) e!45896)))

(assert (= (and d!15535 c!10139) b!70150))

(assert (= (and d!15535 (not c!10139)) b!70151))

(assert (= (and b!70151 c!10140) b!70152))

(assert (= (and b!70151 (not c!10140)) b!70153))

(declare-fun m!66967 () Bool)

(assert (=> b!70152 m!66967))

(assert (=> b!69202 d!15535))

(declare-fun lt!30902 () Bool)

(declare-fun d!15537 () Bool)

(assert (=> d!15537 (= lt!30902 (select (content!73 (toList!719 lt!30342)) (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun e!45899 () Bool)

(assert (=> d!15537 (= lt!30902 e!45899)))

(declare-fun res!37547 () Bool)

(assert (=> d!15537 (=> (not res!37547) (not e!45899))))

(assert (=> d!15537 (= res!37547 ((_ is Cons!1465) (toList!719 lt!30342)))))

(assert (=> d!15537 (= (contains!716 (toList!719 lt!30342) (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))) lt!30902)))

(declare-fun b!70154 () Bool)

(declare-fun e!45898 () Bool)

(assert (=> b!70154 (= e!45899 e!45898)))

(declare-fun res!37548 () Bool)

(assert (=> b!70154 (=> res!37548 e!45898)))

(assert (=> b!70154 (= res!37548 (= (h!2050 (toList!719 lt!30342)) (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun b!70155 () Bool)

(assert (=> b!70155 (= e!45898 (contains!716 (t!4972 (toList!719 lt!30342)) (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))))

(assert (= (and d!15537 res!37547) b!70154))

(assert (= (and b!70154 (not res!37548)) b!70155))

(declare-fun m!66969 () Bool)

(assert (=> d!15537 m!66969))

(declare-fun m!66971 () Bool)

(assert (=> d!15537 m!66971))

(declare-fun m!66973 () Bool)

(assert (=> b!70155 m!66973))

(assert (=> b!69165 d!15537))

(declare-fun d!15539 () Bool)

(assert (=> d!15539 (= (isDefined!84 (getValueByKey!131 (toList!719 (+!90 lt!30028 (tuple2!2103 lt!30025 lt!30024))) lt!30030)) (not (isEmpty!312 (getValueByKey!131 (toList!719 (+!90 lt!30028 (tuple2!2103 lt!30025 lt!30024))) lt!30030))))))

(declare-fun bs!3021 () Bool)

(assert (= bs!3021 d!15539))

(assert (=> bs!3021 m!65393))

(declare-fun m!66975 () Bool)

(assert (=> bs!3021 m!66975))

(assert (=> b!69197 d!15539))

(declare-fun b!70158 () Bool)

(declare-fun e!45901 () Option!137)

(assert (=> b!70158 (= e!45901 (getValueByKey!131 (t!4972 (toList!719 (+!90 lt!30028 (tuple2!2103 lt!30025 lt!30024)))) lt!30030))))

(declare-fun b!70157 () Bool)

(declare-fun e!45900 () Option!137)

(assert (=> b!70157 (= e!45900 e!45901)))

(declare-fun c!10142 () Bool)

(assert (=> b!70157 (= c!10142 (and ((_ is Cons!1465) (toList!719 (+!90 lt!30028 (tuple2!2103 lt!30025 lt!30024)))) (not (= (_1!1062 (h!2050 (toList!719 (+!90 lt!30028 (tuple2!2103 lt!30025 lt!30024))))) lt!30030))))))

(declare-fun b!70159 () Bool)

(assert (=> b!70159 (= e!45901 None!135)))

(declare-fun b!70156 () Bool)

(assert (=> b!70156 (= e!45900 (Some!136 (_2!1062 (h!2050 (toList!719 (+!90 lt!30028 (tuple2!2103 lt!30025 lt!30024)))))))))

(declare-fun d!15541 () Bool)

(declare-fun c!10141 () Bool)

(assert (=> d!15541 (= c!10141 (and ((_ is Cons!1465) (toList!719 (+!90 lt!30028 (tuple2!2103 lt!30025 lt!30024)))) (= (_1!1062 (h!2050 (toList!719 (+!90 lt!30028 (tuple2!2103 lt!30025 lt!30024))))) lt!30030)))))

(assert (=> d!15541 (= (getValueByKey!131 (toList!719 (+!90 lt!30028 (tuple2!2103 lt!30025 lt!30024))) lt!30030) e!45900)))

(assert (= (and d!15541 c!10141) b!70156))

(assert (= (and d!15541 (not c!10141)) b!70157))

(assert (= (and b!70157 c!10142) b!70158))

(assert (= (and b!70157 (not c!10142)) b!70159))

(declare-fun m!66977 () Bool)

(assert (=> b!70158 m!66977))

(assert (=> b!69197 d!15541))

(declare-fun d!15543 () Bool)

(declare-fun res!37549 () Bool)

(declare-fun e!45902 () Bool)

(assert (=> d!15543 (=> res!37549 e!45902)))

(assert (=> d!15543 (= res!37549 (and ((_ is Cons!1465) (toList!719 lt!30029)) (= (_1!1062 (h!2050 (toList!719 lt!30029))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!15543 (= (containsKey!135 (toList!719 lt!30029) #b0000000000000000000000000000000000000000000000000000000000000000) e!45902)))

(declare-fun b!70160 () Bool)

(declare-fun e!45903 () Bool)

(assert (=> b!70160 (= e!45902 e!45903)))

(declare-fun res!37550 () Bool)

(assert (=> b!70160 (=> (not res!37550) (not e!45903))))

(assert (=> b!70160 (= res!37550 (and (or (not ((_ is Cons!1465) (toList!719 lt!30029))) (bvsle (_1!1062 (h!2050 (toList!719 lt!30029))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1465) (toList!719 lt!30029)) (bvslt (_1!1062 (h!2050 (toList!719 lt!30029))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!70161 () Bool)

(assert (=> b!70161 (= e!45903 (containsKey!135 (t!4972 (toList!719 lt!30029)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!15543 (not res!37549)) b!70160))

(assert (= (and b!70160 res!37550) b!70161))

(declare-fun m!66979 () Bool)

(assert (=> b!70161 m!66979))

(assert (=> d!14955 d!15543))

(assert (=> b!68894 d!15145))

(declare-fun d!15545 () Bool)

(declare-fun e!45904 () Bool)

(assert (=> d!15545 e!45904))

(declare-fun res!37551 () Bool)

(assert (=> d!15545 (=> res!37551 e!45904)))

(declare-fun lt!30904 () Bool)

(assert (=> d!15545 (= res!37551 (not lt!30904))))

(declare-fun lt!30903 () Bool)

(assert (=> d!15545 (= lt!30904 lt!30903)))

(declare-fun lt!30905 () Unit!1919)

(declare-fun e!45905 () Unit!1919)

(assert (=> d!15545 (= lt!30905 e!45905)))

(declare-fun c!10143 () Bool)

(assert (=> d!15545 (= c!10143 lt!30903)))

(assert (=> d!15545 (= lt!30903 (containsKey!135 (toList!719 lt!30363) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!15545 (= (contains!714 lt!30363 (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!30904)))

(declare-fun b!70162 () Bool)

(declare-fun lt!30906 () Unit!1919)

(assert (=> b!70162 (= e!45905 lt!30906)))

(assert (=> b!70162 (= lt!30906 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 lt!30363) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!70162 (isDefined!84 (getValueByKey!131 (toList!719 lt!30363) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!70163 () Bool)

(declare-fun Unit!1978 () Unit!1919)

(assert (=> b!70163 (= e!45905 Unit!1978)))

(declare-fun b!70164 () Bool)

(assert (=> b!70164 (= e!45904 (isDefined!84 (getValueByKey!131 (toList!719 lt!30363) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!15545 c!10143) b!70162))

(assert (= (and d!15545 (not c!10143)) b!70163))

(assert (= (and d!15545 (not res!37551)) b!70164))

(declare-fun m!66981 () Bool)

(assert (=> d!15545 m!66981))

(declare-fun m!66983 () Bool)

(assert (=> b!70162 m!66983))

(assert (=> b!70162 m!65385))

(assert (=> b!70162 m!65385))

(declare-fun m!66985 () Bool)

(assert (=> b!70162 m!66985))

(assert (=> b!70164 m!65385))

(assert (=> b!70164 m!65385))

(assert (=> b!70164 m!66985))

(assert (=> d!15003 d!15545))

(declare-fun e!45907 () Option!137)

(declare-fun b!70167 () Bool)

(assert (=> b!70167 (= e!45907 (getValueByKey!131 (t!4972 lt!30364) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!70166 () Bool)

(declare-fun e!45906 () Option!137)

(assert (=> b!70166 (= e!45906 e!45907)))

(declare-fun c!10145 () Bool)

(assert (=> b!70166 (= c!10145 (and ((_ is Cons!1465) lt!30364) (not (= (_1!1062 (h!2050 lt!30364)) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!70168 () Bool)

(assert (=> b!70168 (= e!45907 None!135)))

(declare-fun b!70165 () Bool)

(assert (=> b!70165 (= e!45906 (Some!136 (_2!1062 (h!2050 lt!30364))))))

(declare-fun c!10144 () Bool)

(declare-fun d!15547 () Bool)

(assert (=> d!15547 (= c!10144 (and ((_ is Cons!1465) lt!30364) (= (_1!1062 (h!2050 lt!30364)) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!15547 (= (getValueByKey!131 lt!30364 (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!45906)))

(assert (= (and d!15547 c!10144) b!70165))

(assert (= (and d!15547 (not c!10144)) b!70166))

(assert (= (and b!70166 c!10145) b!70167))

(assert (= (and b!70166 (not c!10145)) b!70168))

(declare-fun m!66987 () Bool)

(assert (=> b!70167 m!66987))

(assert (=> d!15003 d!15547))

(declare-fun d!15549 () Bool)

(assert (=> d!15549 (= (getValueByKey!131 lt!30364 (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!136 (_2!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!30907 () Unit!1919)

(assert (=> d!15549 (= lt!30907 (choose!386 lt!30364 (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!45908 () Bool)

(assert (=> d!15549 e!45908))

(declare-fun res!37552 () Bool)

(assert (=> d!15549 (=> (not res!37552) (not e!45908))))

(assert (=> d!15549 (= res!37552 (isStrictlySorted!290 lt!30364))))

(assert (=> d!15549 (= (lemmaContainsTupThenGetReturnValue!48 lt!30364 (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!30907)))

(declare-fun b!70169 () Bool)

(declare-fun res!37553 () Bool)

(assert (=> b!70169 (=> (not res!37553) (not e!45908))))

(assert (=> b!70169 (= res!37553 (containsKey!135 lt!30364 (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!70170 () Bool)

(assert (=> b!70170 (= e!45908 (contains!716 lt!30364 (tuple2!2103 (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!15549 res!37552) b!70169))

(assert (= (and b!70169 res!37553) b!70170))

(assert (=> d!15549 m!65379))

(declare-fun m!66989 () Bool)

(assert (=> d!15549 m!66989))

(declare-fun m!66991 () Bool)

(assert (=> d!15549 m!66991))

(declare-fun m!66993 () Bool)

(assert (=> b!70169 m!66993))

(declare-fun m!66995 () Bool)

(assert (=> b!70170 m!66995))

(assert (=> d!15003 d!15549))

(declare-fun e!45911 () List!1469)

(declare-fun b!70171 () Bool)

(assert (=> b!70171 (= e!45911 (insertStrictlySorted!51 (t!4972 (toList!719 call!5794)) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun d!15551 () Bool)

(declare-fun e!45909 () Bool)

(assert (=> d!15551 e!45909))

(declare-fun res!37555 () Bool)

(assert (=> d!15551 (=> (not res!37555) (not e!45909))))

(declare-fun lt!30908 () List!1469)

(assert (=> d!15551 (= res!37555 (isStrictlySorted!290 lt!30908))))

(declare-fun e!45913 () List!1469)

(assert (=> d!15551 (= lt!30908 e!45913)))

(declare-fun c!10146 () Bool)

(assert (=> d!15551 (= c!10146 (and ((_ is Cons!1465) (toList!719 call!5794)) (bvslt (_1!1062 (h!2050 (toList!719 call!5794))) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!15551 (isStrictlySorted!290 (toList!719 call!5794))))

(assert (=> d!15551 (= (insertStrictlySorted!51 (toList!719 call!5794) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!30908)))

(declare-fun c!10149 () Bool)

(declare-fun c!10148 () Bool)

(declare-fun b!70172 () Bool)

(assert (=> b!70172 (= e!45911 (ite c!10149 (t!4972 (toList!719 call!5794)) (ite c!10148 (Cons!1465 (h!2050 (toList!719 call!5794)) (t!4972 (toList!719 call!5794))) Nil!1466)))))

(declare-fun bm!6025 () Bool)

(declare-fun call!6030 () List!1469)

(declare-fun call!6029 () List!1469)

(assert (=> bm!6025 (= call!6030 call!6029)))

(declare-fun b!70173 () Bool)

(declare-fun e!45912 () List!1469)

(assert (=> b!70173 (= e!45912 call!6030)))

(declare-fun bm!6026 () Bool)

(declare-fun call!6028 () List!1469)

(assert (=> bm!6026 (= call!6029 call!6028)))

(declare-fun bm!6027 () Bool)

(assert (=> bm!6027 (= call!6028 ($colon$colon!64 e!45911 (ite c!10146 (h!2050 (toList!719 call!5794)) (tuple2!2103 (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!10147 () Bool)

(assert (=> bm!6027 (= c!10147 c!10146)))

(declare-fun b!70174 () Bool)

(declare-fun e!45910 () List!1469)

(assert (=> b!70174 (= e!45913 e!45910)))

(assert (=> b!70174 (= c!10149 (and ((_ is Cons!1465) (toList!719 call!5794)) (= (_1!1062 (h!2050 (toList!719 call!5794))) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!70175 () Bool)

(assert (=> b!70175 (= e!45909 (contains!716 lt!30908 (tuple2!2103 (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!70176 () Bool)

(assert (=> b!70176 (= e!45913 call!6028)))

(declare-fun b!70177 () Bool)

(assert (=> b!70177 (= e!45912 call!6030)))

(declare-fun b!70178 () Bool)

(declare-fun res!37554 () Bool)

(assert (=> b!70178 (=> (not res!37554) (not e!45909))))

(assert (=> b!70178 (= res!37554 (containsKey!135 lt!30908 (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!70179 () Bool)

(assert (=> b!70179 (= e!45910 call!6029)))

(declare-fun b!70180 () Bool)

(assert (=> b!70180 (= c!10148 (and ((_ is Cons!1465) (toList!719 call!5794)) (bvsgt (_1!1062 (h!2050 (toList!719 call!5794))) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!70180 (= e!45910 e!45912)))

(assert (= (and d!15551 c!10146) b!70176))

(assert (= (and d!15551 (not c!10146)) b!70174))

(assert (= (and b!70174 c!10149) b!70179))

(assert (= (and b!70174 (not c!10149)) b!70180))

(assert (= (and b!70180 c!10148) b!70173))

(assert (= (and b!70180 (not c!10148)) b!70177))

(assert (= (or b!70173 b!70177) bm!6025))

(assert (= (or b!70179 bm!6025) bm!6026))

(assert (= (or b!70176 bm!6026) bm!6027))

(assert (= (and bm!6027 c!10147) b!70171))

(assert (= (and bm!6027 (not c!10147)) b!70172))

(assert (= (and d!15551 res!37555) b!70178))

(assert (= (and b!70178 res!37554) b!70175))

(declare-fun m!66997 () Bool)

(assert (=> b!70175 m!66997))

(declare-fun m!66999 () Bool)

(assert (=> d!15551 m!66999))

(declare-fun m!67001 () Bool)

(assert (=> d!15551 m!67001))

(declare-fun m!67003 () Bool)

(assert (=> b!70171 m!67003))

(declare-fun m!67005 () Bool)

(assert (=> bm!6027 m!67005))

(declare-fun m!67007 () Bool)

(assert (=> b!70178 m!67007))

(assert (=> d!15003 d!15551))

(declare-fun b!70183 () Bool)

(declare-fun res!37558 () Bool)

(declare-fun e!45914 () Bool)

(assert (=> b!70183 (=> (not res!37558) (not e!45914))))

(assert (=> b!70183 (= res!37558 (= (size!2081 (_2!1061 lt!30148)) (bvadd (_size!388 (_2!1061 lt!30148)) (bvsdiv (bvadd (extraKeys!2035 (_2!1061 lt!30148)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun d!15553 () Bool)

(declare-fun res!37556 () Bool)

(assert (=> d!15553 (=> (not res!37556) (not e!45914))))

(assert (=> d!15553 (= res!37556 (validMask!0 (mask!6113 (_2!1061 lt!30148))))))

(assert (=> d!15553 (= (simpleValid!49 (_2!1061 lt!30148)) e!45914)))

(declare-fun b!70182 () Bool)

(declare-fun res!37559 () Bool)

(assert (=> b!70182 (=> (not res!37559) (not e!45914))))

(assert (=> b!70182 (= res!37559 (bvsge (size!2081 (_2!1061 lt!30148)) (_size!388 (_2!1061 lt!30148))))))

(declare-fun b!70184 () Bool)

(assert (=> b!70184 (= e!45914 (and (bvsge (extraKeys!2035 (_2!1061 lt!30148)) #b00000000000000000000000000000000) (bvsle (extraKeys!2035 (_2!1061 lt!30148)) #b00000000000000000000000000000011) (bvsge (_vacant!388 (_2!1061 lt!30148)) #b00000000000000000000000000000000)))))

(declare-fun b!70181 () Bool)

(declare-fun res!37557 () Bool)

(assert (=> b!70181 (=> (not res!37557) (not e!45914))))

(assert (=> b!70181 (= res!37557 (and (= (size!2078 (_values!2151 (_2!1061 lt!30148))) (bvadd (mask!6113 (_2!1061 lt!30148)) #b00000000000000000000000000000001)) (= (size!2077 (_keys!3812 (_2!1061 lt!30148))) (size!2078 (_values!2151 (_2!1061 lt!30148)))) (bvsge (_size!388 (_2!1061 lt!30148)) #b00000000000000000000000000000000) (bvsle (_size!388 (_2!1061 lt!30148)) (bvadd (mask!6113 (_2!1061 lt!30148)) #b00000000000000000000000000000001))))))

(assert (= (and d!15553 res!37556) b!70181))

(assert (= (and b!70181 res!37557) b!70182))

(assert (= (and b!70182 res!37559) b!70183))

(assert (= (and b!70183 res!37558) b!70184))

(declare-fun m!67009 () Bool)

(assert (=> b!70183 m!67009))

(assert (=> d!15553 m!66015))

(assert (=> b!70182 m!67009))

(assert (=> d!14953 d!15553))

(declare-fun d!15555 () Bool)

(declare-fun e!45915 () Bool)

(assert (=> d!15555 e!45915))

(declare-fun res!37560 () Bool)

(assert (=> d!15555 (=> res!37560 e!45915)))

(declare-fun lt!30910 () Bool)

(assert (=> d!15555 (= res!37560 (not lt!30910))))

(declare-fun lt!30909 () Bool)

(assert (=> d!15555 (= lt!30910 lt!30909)))

(declare-fun lt!30911 () Unit!1919)

(declare-fun e!45916 () Unit!1919)

(assert (=> d!15555 (= lt!30911 e!45916)))

(declare-fun c!10150 () Bool)

(assert (=> d!15555 (= c!10150 lt!30909)))

(assert (=> d!15555 (= lt!30909 (containsKey!135 (toList!719 lt!30293) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!15555 (= (contains!714 lt!30293 #b1000000000000000000000000000000000000000000000000000000000000000) lt!30910)))

(declare-fun b!70185 () Bool)

(declare-fun lt!30912 () Unit!1919)

(assert (=> b!70185 (= e!45916 lt!30912)))

(assert (=> b!70185 (= lt!30912 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 lt!30293) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!70185 (isDefined!84 (getValueByKey!131 (toList!719 lt!30293) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!70186 () Bool)

(declare-fun Unit!1979 () Unit!1919)

(assert (=> b!70186 (= e!45916 Unit!1979)))

(declare-fun b!70187 () Bool)

(assert (=> b!70187 (= e!45915 (isDefined!84 (getValueByKey!131 (toList!719 lt!30293) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15555 c!10150) b!70185))

(assert (= (and d!15555 (not c!10150)) b!70186))

(assert (= (and d!15555 (not res!37560)) b!70187))

(declare-fun m!67011 () Bool)

(assert (=> d!15555 m!67011))

(declare-fun m!67013 () Bool)

(assert (=> b!70185 m!67013))

(assert (=> b!70185 m!66927))

(assert (=> b!70185 m!66927))

(declare-fun m!67015 () Bool)

(assert (=> b!70185 m!67015))

(assert (=> b!70187 m!66927))

(assert (=> b!70187 m!66927))

(assert (=> b!70187 m!67015))

(assert (=> bm!5891 d!15555))

(assert (=> b!68882 d!15145))

(declare-fun d!15557 () Bool)

(declare-fun e!45917 () Bool)

(assert (=> d!15557 e!45917))

(declare-fun res!37561 () Bool)

(assert (=> d!15557 (=> res!37561 e!45917)))

(declare-fun lt!30914 () Bool)

(assert (=> d!15557 (= res!37561 (not lt!30914))))

(declare-fun lt!30913 () Bool)

(assert (=> d!15557 (= lt!30914 lt!30913)))

(declare-fun lt!30915 () Unit!1919)

(declare-fun e!45918 () Unit!1919)

(assert (=> d!15557 (= lt!30915 e!45918)))

(declare-fun c!10151 () Bool)

(assert (=> d!15557 (= c!10151 lt!30913)))

(assert (=> d!15557 (= lt!30913 (containsKey!135 (toList!719 lt!30342) (_1!1062 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> d!15557 (= (contains!714 lt!30342 (_1!1062 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))) lt!30914)))

(declare-fun b!70188 () Bool)

(declare-fun lt!30916 () Unit!1919)

(assert (=> b!70188 (= e!45918 lt!30916)))

(assert (=> b!70188 (= lt!30916 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 lt!30342) (_1!1062 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> b!70188 (isDefined!84 (getValueByKey!131 (toList!719 lt!30342) (_1!1062 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!70189 () Bool)

(declare-fun Unit!1980 () Unit!1919)

(assert (=> b!70189 (= e!45918 Unit!1980)))

(declare-fun b!70190 () Bool)

(assert (=> b!70190 (= e!45917 (isDefined!84 (getValueByKey!131 (toList!719 lt!30342) (_1!1062 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(assert (= (and d!15557 c!10151) b!70188))

(assert (= (and d!15557 (not c!10151)) b!70189))

(assert (= (and d!15557 (not res!37561)) b!70190))

(declare-fun m!67017 () Bool)

(assert (=> d!15557 m!67017))

(declare-fun m!67019 () Bool)

(assert (=> b!70188 m!67019))

(assert (=> b!70188 m!65303))

(assert (=> b!70188 m!65303))

(declare-fun m!67021 () Bool)

(assert (=> b!70188 m!67021))

(assert (=> b!70190 m!65303))

(assert (=> b!70190 m!65303))

(assert (=> b!70190 m!67021))

(assert (=> d!14981 d!15557))

(declare-fun b!70193 () Bool)

(declare-fun e!45920 () Option!137)

(assert (=> b!70193 (= e!45920 (getValueByKey!131 (t!4972 lt!30343) (_1!1062 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!70192 () Bool)

(declare-fun e!45919 () Option!137)

(assert (=> b!70192 (= e!45919 e!45920)))

(declare-fun c!10153 () Bool)

(assert (=> b!70192 (= c!10153 (and ((_ is Cons!1465) lt!30343) (not (= (_1!1062 (h!2050 lt!30343)) (_1!1062 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))))

(declare-fun b!70194 () Bool)

(assert (=> b!70194 (= e!45920 None!135)))

(declare-fun b!70191 () Bool)

(assert (=> b!70191 (= e!45919 (Some!136 (_2!1062 (h!2050 lt!30343))))))

(declare-fun d!15559 () Bool)

(declare-fun c!10152 () Bool)

(assert (=> d!15559 (= c!10152 (and ((_ is Cons!1465) lt!30343) (= (_1!1062 (h!2050 lt!30343)) (_1!1062 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> d!15559 (= (getValueByKey!131 lt!30343 (_1!1062 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))) e!45919)))

(assert (= (and d!15559 c!10152) b!70191))

(assert (= (and d!15559 (not c!10152)) b!70192))

(assert (= (and b!70192 c!10153) b!70193))

(assert (= (and b!70192 (not c!10153)) b!70194))

(declare-fun m!67023 () Bool)

(assert (=> b!70193 m!67023))

(assert (=> d!14981 d!15559))

(declare-fun d!15561 () Bool)

(assert (=> d!15561 (= (getValueByKey!131 lt!30343 (_1!1062 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))) (Some!136 (_2!1062 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun lt!30917 () Unit!1919)

(assert (=> d!15561 (= lt!30917 (choose!386 lt!30343 (_1!1062 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))) (_2!1062 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun e!45921 () Bool)

(assert (=> d!15561 e!45921))

(declare-fun res!37562 () Bool)

(assert (=> d!15561 (=> (not res!37562) (not e!45921))))

(assert (=> d!15561 (= res!37562 (isStrictlySorted!290 lt!30343))))

(assert (=> d!15561 (= (lemmaContainsTupThenGetReturnValue!48 lt!30343 (_1!1062 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))) (_2!1062 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))) lt!30917)))

(declare-fun b!70195 () Bool)

(declare-fun res!37563 () Bool)

(assert (=> b!70195 (=> (not res!37563) (not e!45921))))

(assert (=> b!70195 (= res!37563 (containsKey!135 lt!30343 (_1!1062 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!70196 () Bool)

(assert (=> b!70196 (= e!45921 (contains!716 lt!30343 (tuple2!2103 (_1!1062 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))) (_2!1062 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(assert (= (and d!15561 res!37562) b!70195))

(assert (= (and b!70195 res!37563) b!70196))

(assert (=> d!15561 m!65297))

(declare-fun m!67025 () Bool)

(assert (=> d!15561 m!67025))

(declare-fun m!67027 () Bool)

(assert (=> d!15561 m!67027))

(declare-fun m!67029 () Bool)

(assert (=> b!70195 m!67029))

(declare-fun m!67031 () Bool)

(assert (=> b!70196 m!67031))

(assert (=> d!14981 d!15561))

(declare-fun e!45924 () List!1469)

(declare-fun b!70197 () Bool)

(assert (=> b!70197 (= e!45924 (insertStrictlySorted!51 (t!4972 (toList!719 lt!29988)) (_1!1062 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))) (_2!1062 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun d!15563 () Bool)

(declare-fun e!45922 () Bool)

(assert (=> d!15563 e!45922))

(declare-fun res!37565 () Bool)

(assert (=> d!15563 (=> (not res!37565) (not e!45922))))

(declare-fun lt!30918 () List!1469)

(assert (=> d!15563 (= res!37565 (isStrictlySorted!290 lt!30918))))

(declare-fun e!45926 () List!1469)

(assert (=> d!15563 (= lt!30918 e!45926)))

(declare-fun c!10154 () Bool)

(assert (=> d!15563 (= c!10154 (and ((_ is Cons!1465) (toList!719 lt!29988)) (bvslt (_1!1062 (h!2050 (toList!719 lt!29988))) (_1!1062 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> d!15563 (isStrictlySorted!290 (toList!719 lt!29988))))

(assert (=> d!15563 (= (insertStrictlySorted!51 (toList!719 lt!29988) (_1!1062 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))) (_2!1062 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))) lt!30918)))

(declare-fun b!70198 () Bool)

(declare-fun c!10156 () Bool)

(declare-fun c!10157 () Bool)

(assert (=> b!70198 (= e!45924 (ite c!10157 (t!4972 (toList!719 lt!29988)) (ite c!10156 (Cons!1465 (h!2050 (toList!719 lt!29988)) (t!4972 (toList!719 lt!29988))) Nil!1466)))))

(declare-fun bm!6028 () Bool)

(declare-fun call!6033 () List!1469)

(declare-fun call!6032 () List!1469)

(assert (=> bm!6028 (= call!6033 call!6032)))

(declare-fun b!70199 () Bool)

(declare-fun e!45925 () List!1469)

(assert (=> b!70199 (= e!45925 call!6033)))

(declare-fun bm!6029 () Bool)

(declare-fun call!6031 () List!1469)

(assert (=> bm!6029 (= call!6032 call!6031)))

(declare-fun bm!6030 () Bool)

(assert (=> bm!6030 (= call!6031 ($colon$colon!64 e!45924 (ite c!10154 (h!2050 (toList!719 lt!29988)) (tuple2!2103 (_1!1062 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))) (_2!1062 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))))

(declare-fun c!10155 () Bool)

(assert (=> bm!6030 (= c!10155 c!10154)))

(declare-fun b!70200 () Bool)

(declare-fun e!45923 () List!1469)

(assert (=> b!70200 (= e!45926 e!45923)))

(assert (=> b!70200 (= c!10157 (and ((_ is Cons!1465) (toList!719 lt!29988)) (= (_1!1062 (h!2050 (toList!719 lt!29988))) (_1!1062 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(declare-fun b!70201 () Bool)

(assert (=> b!70201 (= e!45922 (contains!716 lt!30918 (tuple2!2103 (_1!1062 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))) (_2!1062 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(declare-fun b!70202 () Bool)

(assert (=> b!70202 (= e!45926 call!6031)))

(declare-fun b!70203 () Bool)

(assert (=> b!70203 (= e!45925 call!6033)))

(declare-fun b!70204 () Bool)

(declare-fun res!37564 () Bool)

(assert (=> b!70204 (=> (not res!37564) (not e!45922))))

(assert (=> b!70204 (= res!37564 (containsKey!135 lt!30918 (_1!1062 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!70205 () Bool)

(assert (=> b!70205 (= e!45923 call!6032)))

(declare-fun b!70206 () Bool)

(assert (=> b!70206 (= c!10156 (and ((_ is Cons!1465) (toList!719 lt!29988)) (bvsgt (_1!1062 (h!2050 (toList!719 lt!29988))) (_1!1062 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> b!70206 (= e!45923 e!45925)))

(assert (= (and d!15563 c!10154) b!70202))

(assert (= (and d!15563 (not c!10154)) b!70200))

(assert (= (and b!70200 c!10157) b!70205))

(assert (= (and b!70200 (not c!10157)) b!70206))

(assert (= (and b!70206 c!10156) b!70199))

(assert (= (and b!70206 (not c!10156)) b!70203))

(assert (= (or b!70199 b!70203) bm!6028))

(assert (= (or b!70205 bm!6028) bm!6029))

(assert (= (or b!70202 bm!6029) bm!6030))

(assert (= (and bm!6030 c!10155) b!70197))

(assert (= (and bm!6030 (not c!10155)) b!70198))

(assert (= (and d!15563 res!37565) b!70204))

(assert (= (and b!70204 res!37564) b!70201))

(declare-fun m!67033 () Bool)

(assert (=> b!70201 m!67033))

(declare-fun m!67035 () Bool)

(assert (=> d!15563 m!67035))

(declare-fun m!67037 () Bool)

(assert (=> d!15563 m!67037))

(declare-fun m!67039 () Bool)

(assert (=> b!70197 m!67039))

(declare-fun m!67041 () Bool)

(assert (=> bm!6030 m!67041))

(declare-fun m!67043 () Bool)

(assert (=> b!70204 m!67043))

(assert (=> d!14981 d!15563))

(declare-fun d!15565 () Bool)

(assert (=> d!15565 (= ($colon$colon!64 e!45310 (ite c!9859 (h!2050 (toList!719 (+!90 lt!29889 lt!29893))) (tuple2!2103 (_1!1062 lt!29892) (_2!1062 lt!29892)))) (Cons!1465 (ite c!9859 (h!2050 (toList!719 (+!90 lt!29889 lt!29893))) (tuple2!2103 (_1!1062 lt!29892) (_2!1062 lt!29892))) e!45310))))

(assert (=> bm!5904 d!15565))

(declare-fun b!70209 () Bool)

(declare-fun e!45928 () Option!137)

(assert (=> b!70209 (= e!45928 (getValueByKey!131 (t!4972 (t!4972 lt!30042)) (_1!1062 lt!29892)))))

(declare-fun b!70208 () Bool)

(declare-fun e!45927 () Option!137)

(assert (=> b!70208 (= e!45927 e!45928)))

(declare-fun c!10159 () Bool)

(assert (=> b!70208 (= c!10159 (and ((_ is Cons!1465) (t!4972 lt!30042)) (not (= (_1!1062 (h!2050 (t!4972 lt!30042))) (_1!1062 lt!29892)))))))

(declare-fun b!70210 () Bool)

(assert (=> b!70210 (= e!45928 None!135)))

(declare-fun b!70207 () Bool)

(assert (=> b!70207 (= e!45927 (Some!136 (_2!1062 (h!2050 (t!4972 lt!30042)))))))

(declare-fun d!15567 () Bool)

(declare-fun c!10158 () Bool)

(assert (=> d!15567 (= c!10158 (and ((_ is Cons!1465) (t!4972 lt!30042)) (= (_1!1062 (h!2050 (t!4972 lt!30042))) (_1!1062 lt!29892))))))

(assert (=> d!15567 (= (getValueByKey!131 (t!4972 lt!30042) (_1!1062 lt!29892)) e!45927)))

(assert (= (and d!15567 c!10158) b!70207))

(assert (= (and d!15567 (not c!10158)) b!70208))

(assert (= (and b!70208 c!10159) b!70209))

(assert (= (and b!70208 (not c!10159)) b!70210))

(declare-fun m!67045 () Bool)

(assert (=> b!70209 m!67045))

(assert (=> b!69174 d!15567))

(declare-fun d!15569 () Bool)

(assert (=> d!15569 (isDefined!84 (getValueByKey!131 (toList!719 call!5856) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(declare-fun lt!30919 () Unit!1919)

(assert (=> d!15569 (= lt!30919 (choose!387 (toList!719 call!5856) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(declare-fun e!45929 () Bool)

(assert (=> d!15569 e!45929))

(declare-fun res!37566 () Bool)

(assert (=> d!15569 (=> (not res!37566) (not e!45929))))

(assert (=> d!15569 (= res!37566 (isStrictlySorted!290 (toList!719 call!5856)))))

(assert (=> d!15569 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 call!5856) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) lt!30919)))

(declare-fun b!70211 () Bool)

(assert (=> b!70211 (= e!45929 (containsKey!135 (toList!719 call!5856) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(assert (= (and d!15569 res!37566) b!70211))

(assert (=> d!15569 m!64407))

(assert (=> d!15569 m!65169))

(assert (=> d!15569 m!65169))

(assert (=> d!15569 m!65171))

(assert (=> d!15569 m!64407))

(declare-fun m!67047 () Bool)

(assert (=> d!15569 m!67047))

(declare-fun m!67049 () Bool)

(assert (=> d!15569 m!67049))

(assert (=> b!70211 m!64407))

(assert (=> b!70211 m!65165))

(assert (=> b!69111 d!15569))

(assert (=> b!69111 d!15393))

(assert (=> b!69111 d!15395))

(assert (=> d!14963 d!14983))

(assert (=> d!14963 d!14961))

(assert (=> d!14963 d!14965))

(declare-fun d!15571 () Bool)

(declare-fun e!45930 () Bool)

(assert (=> d!15571 e!45930))

(declare-fun res!37567 () Bool)

(assert (=> d!15571 (=> res!37567 e!45930)))

(declare-fun lt!30921 () Bool)

(assert (=> d!15571 (= res!37567 (not lt!30921))))

(declare-fun lt!30920 () Bool)

(assert (=> d!15571 (= lt!30921 lt!30920)))

(declare-fun lt!30922 () Unit!1919)

(declare-fun e!45931 () Unit!1919)

(assert (=> d!15571 (= lt!30922 e!45931)))

(declare-fun c!10160 () Bool)

(assert (=> d!15571 (= c!10160 lt!30920)))

(assert (=> d!15571 (= lt!30920 (containsKey!135 (toList!719 lt!29981) lt!29983))))

(assert (=> d!15571 (= (contains!714 lt!29981 lt!29983) lt!30921)))

(declare-fun b!70212 () Bool)

(declare-fun lt!30923 () Unit!1919)

(assert (=> b!70212 (= e!45931 lt!30923)))

(assert (=> b!70212 (= lt!30923 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 lt!29981) lt!29983))))

(assert (=> b!70212 (isDefined!84 (getValueByKey!131 (toList!719 lt!29981) lt!29983))))

(declare-fun b!70213 () Bool)

(declare-fun Unit!1981 () Unit!1919)

(assert (=> b!70213 (= e!45931 Unit!1981)))

(declare-fun b!70214 () Bool)

(assert (=> b!70214 (= e!45930 (isDefined!84 (getValueByKey!131 (toList!719 lt!29981) lt!29983)))))

(assert (= (and d!15571 c!10160) b!70212))

(assert (= (and d!15571 (not c!10160)) b!70213))

(assert (= (and d!15571 (not res!37567)) b!70214))

(declare-fun m!67051 () Bool)

(assert (=> d!15571 m!67051))

(declare-fun m!67053 () Bool)

(assert (=> b!70212 m!67053))

(assert (=> b!70212 m!65231))

(assert (=> b!70212 m!65231))

(declare-fun m!67055 () Bool)

(assert (=> b!70212 m!67055))

(assert (=> b!70214 m!65231))

(assert (=> b!70214 m!65231))

(assert (=> b!70214 m!67055))

(assert (=> d!14963 d!15571))

(declare-fun d!15573 () Bool)

(assert (=> d!15573 (= (apply!73 (+!90 lt!29981 (tuple2!2103 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992))))) lt!29983) (apply!73 lt!29981 lt!29983))))

(assert (=> d!15573 true))

(declare-fun _$34!796 () Unit!1919)

(assert (=> d!15573 (= (choose!388 lt!29981 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992))) lt!29983) _$34!796)))

(declare-fun bs!3022 () Bool)

(assert (= bs!3022 d!15573))

(assert (=> bs!3022 m!64545))

(assert (=> bs!3022 m!64545))

(assert (=> bs!3022 m!64553))

(assert (=> bs!3022 m!64561))

(assert (=> d!14963 d!15573))

(declare-fun d!15575 () Bool)

(declare-fun lt!30924 () Bool)

(assert (=> d!15575 (= lt!30924 (select (content!73 (t!4972 (toList!719 lt!30056))) lt!29893))))

(declare-fun e!45933 () Bool)

(assert (=> d!15575 (= lt!30924 e!45933)))

(declare-fun res!37568 () Bool)

(assert (=> d!15575 (=> (not res!37568) (not e!45933))))

(assert (=> d!15575 (= res!37568 ((_ is Cons!1465) (t!4972 (toList!719 lt!30056))))))

(assert (=> d!15575 (= (contains!716 (t!4972 (toList!719 lt!30056)) lt!29893) lt!30924)))

(declare-fun b!70215 () Bool)

(declare-fun e!45932 () Bool)

(assert (=> b!70215 (= e!45933 e!45932)))

(declare-fun res!37569 () Bool)

(assert (=> b!70215 (=> res!37569 e!45932)))

(assert (=> b!70215 (= res!37569 (= (h!2050 (t!4972 (toList!719 lt!30056))) lt!29893))))

(declare-fun b!70216 () Bool)

(assert (=> b!70216 (= e!45932 (contains!716 (t!4972 (t!4972 (toList!719 lt!30056))) lt!29893))))

(assert (= (and d!15575 res!37568) b!70215))

(assert (= (and b!70215 (not res!37569)) b!70216))

(assert (=> d!15575 m!66735))

(declare-fun m!67057 () Bool)

(assert (=> d!15575 m!67057))

(declare-fun m!67059 () Bool)

(assert (=> b!70216 m!67059))

(assert (=> b!68887 d!15575))

(declare-fun d!15577 () Bool)

(assert (=> d!15577 (= (apply!73 lt!30403 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)) (get!1127 (getValueByKey!131 (toList!719 lt!30403) (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3023 () Bool)

(assert (= bs!3023 d!15577))

(assert (=> bs!3023 m!64775))

(declare-fun m!67061 () Bool)

(assert (=> bs!3023 m!67061))

(assert (=> bs!3023 m!67061))

(declare-fun m!67063 () Bool)

(assert (=> bs!3023 m!67063))

(assert (=> b!69231 d!15577))

(declare-fun c!10161 () Bool)

(declare-fun d!15579 () Bool)

(assert (=> d!15579 (= c!10161 ((_ is ValueCellFull!885) (select (arr!1842 (ite c!9754 (_values!2151 newMap!16) (array!3858 (store (arr!1842 (_values!2151 newMap!16)) (index!3066 lt!30149) (ValueCellFull!885 lt!29897)) (size!2078 (_values!2151 newMap!16))))) #b00000000000000000000000000000000)))))

(declare-fun e!45934 () V!2923)

(assert (=> d!15579 (= (get!1124 (select (arr!1842 (ite c!9754 (_values!2151 newMap!16) (array!3858 (store (arr!1842 (_values!2151 newMap!16)) (index!3066 lt!30149) (ValueCellFull!885 lt!29897)) (size!2078 (_values!2151 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!322 (defaultEntry!2168 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!45934)))

(declare-fun b!70217 () Bool)

(assert (=> b!70217 (= e!45934 (get!1125 (select (arr!1842 (ite c!9754 (_values!2151 newMap!16) (array!3858 (store (arr!1842 (_values!2151 newMap!16)) (index!3066 lt!30149) (ValueCellFull!885 lt!29897)) (size!2078 (_values!2151 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!322 (defaultEntry!2168 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!70218 () Bool)

(assert (=> b!70218 (= e!45934 (get!1126 (select (arr!1842 (ite c!9754 (_values!2151 newMap!16) (array!3858 (store (arr!1842 (_values!2151 newMap!16)) (index!3066 lt!30149) (ValueCellFull!885 lt!29897)) (size!2078 (_values!2151 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!322 (defaultEntry!2168 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15579 c!10161) b!70217))

(assert (= (and d!15579 (not c!10161)) b!70218))

(assert (=> b!70217 m!65441))

(assert (=> b!70217 m!64807))

(declare-fun m!67065 () Bool)

(assert (=> b!70217 m!67065))

(assert (=> b!70218 m!65441))

(assert (=> b!70218 m!64807))

(declare-fun m!67067 () Bool)

(assert (=> b!70218 m!67067))

(assert (=> b!69231 d!15579))

(declare-fun d!15581 () Bool)

(declare-fun res!37570 () Bool)

(declare-fun e!45935 () Bool)

(assert (=> d!15581 (=> res!37570 e!45935)))

(assert (=> d!15581 (= res!37570 (and ((_ is Cons!1465) (t!4972 (toList!719 lt!29895))) (= (_1!1062 (h!2050 (t!4972 (toList!719 lt!29895)))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355))))))

(assert (=> d!15581 (= (containsKey!135 (t!4972 (toList!719 lt!29895)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) e!45935)))

(declare-fun b!70219 () Bool)

(declare-fun e!45936 () Bool)

(assert (=> b!70219 (= e!45935 e!45936)))

(declare-fun res!37571 () Bool)

(assert (=> b!70219 (=> (not res!37571) (not e!45936))))

(assert (=> b!70219 (= res!37571 (and (or (not ((_ is Cons!1465) (t!4972 (toList!719 lt!29895)))) (bvsle (_1!1062 (h!2050 (t!4972 (toList!719 lt!29895)))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355))) ((_ is Cons!1465) (t!4972 (toList!719 lt!29895))) (bvslt (_1!1062 (h!2050 (t!4972 (toList!719 lt!29895)))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355))))))

(declare-fun b!70220 () Bool)

(assert (=> b!70220 (= e!45936 (containsKey!135 (t!4972 (t!4972 (toList!719 lt!29895))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(assert (= (and d!15581 (not res!37570)) b!70219))

(assert (= (and b!70219 res!37571) b!70220))

(assert (=> b!70220 m!64407))

(declare-fun m!67069 () Bool)

(assert (=> b!70220 m!67069))

(assert (=> b!68854 d!15581))

(assert (=> b!68902 d!15145))

(declare-fun b!70223 () Bool)

(declare-fun res!37574 () Bool)

(declare-fun e!45937 () Bool)

(assert (=> b!70223 (=> (not res!37574) (not e!45937))))

(assert (=> b!70223 (= res!37574 (= (size!2081 (v!2494 (underlying!253 thiss!992))) (bvadd (_size!388 (v!2494 (underlying!253 thiss!992))) (bvsdiv (bvadd (extraKeys!2035 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun d!15583 () Bool)

(declare-fun res!37572 () Bool)

(assert (=> d!15583 (=> (not res!37572) (not e!45937))))

(assert (=> d!15583 (= res!37572 (validMask!0 (mask!6113 (v!2494 (underlying!253 thiss!992)))))))

(assert (=> d!15583 (= (simpleValid!49 (v!2494 (underlying!253 thiss!992))) e!45937)))

(declare-fun b!70222 () Bool)

(declare-fun res!37575 () Bool)

(assert (=> b!70222 (=> (not res!37575) (not e!45937))))

(assert (=> b!70222 (= res!37575 (bvsge (size!2081 (v!2494 (underlying!253 thiss!992))) (_size!388 (v!2494 (underlying!253 thiss!992)))))))

(declare-fun b!70224 () Bool)

(assert (=> b!70224 (= e!45937 (and (bvsge (extraKeys!2035 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2035 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!388 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun b!70221 () Bool)

(declare-fun res!37573 () Bool)

(assert (=> b!70221 (=> (not res!37573) (not e!45937))))

(assert (=> b!70221 (= res!37573 (and (= (size!2078 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd (mask!6113 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000000000001)) (= (size!2077 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (size!2078 (_values!2151 (v!2494 (underlying!253 thiss!992))))) (bvsge (_size!388 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!388 (v!2494 (underlying!253 thiss!992))) (bvadd (mask!6113 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000000000001))))))

(assert (= (and d!15583 res!37572) b!70221))

(assert (= (and b!70221 res!37573) b!70222))

(assert (= (and b!70222 res!37575) b!70223))

(assert (= (and b!70223 res!37574) b!70224))

(declare-fun m!67071 () Bool)

(assert (=> b!70223 m!67071))

(assert (=> d!15583 m!64441))

(assert (=> b!70222 m!67071))

(assert (=> d!15001 d!15583))

(declare-fun d!15585 () Bool)

(declare-fun e!45938 () Bool)

(assert (=> d!15585 e!45938))

(declare-fun res!37576 () Bool)

(assert (=> d!15585 (=> res!37576 e!45938)))

(declare-fun lt!30926 () Bool)

(assert (=> d!15585 (= res!37576 (not lt!30926))))

(declare-fun lt!30925 () Bool)

(assert (=> d!15585 (= lt!30926 lt!30925)))

(declare-fun lt!30927 () Unit!1919)

(declare-fun e!45939 () Unit!1919)

(assert (=> d!15585 (= lt!30927 e!45939)))

(declare-fun c!10162 () Bool)

(assert (=> d!15585 (= c!10162 lt!30925)))

(assert (=> d!15585 (= lt!30925 (containsKey!135 (toList!719 lt!30254) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))

(assert (=> d!15585 (= (contains!714 lt!30254 (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))) lt!30926)))

(declare-fun b!70225 () Bool)

(declare-fun lt!30928 () Unit!1919)

(assert (=> b!70225 (= e!45939 lt!30928)))

(assert (=> b!70225 (= lt!30928 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 lt!30254) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))

(assert (=> b!70225 (isDefined!84 (getValueByKey!131 (toList!719 lt!30254) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))

(declare-fun b!70226 () Bool)

(declare-fun Unit!1982 () Unit!1919)

(assert (=> b!70226 (= e!45939 Unit!1982)))

(declare-fun b!70227 () Bool)

(assert (=> b!70227 (= e!45938 (isDefined!84 (getValueByKey!131 (toList!719 lt!30254) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))))))

(assert (= (and d!15585 c!10162) b!70225))

(assert (= (and d!15585 (not c!10162)) b!70226))

(assert (= (and d!15585 (not res!37576)) b!70227))

(declare-fun m!67073 () Bool)

(assert (=> d!15585 m!67073))

(declare-fun m!67075 () Bool)

(assert (=> b!70225 m!67075))

(assert (=> b!70225 m!65017))

(assert (=> b!70225 m!65017))

(declare-fun m!67077 () Bool)

(assert (=> b!70225 m!67077))

(assert (=> b!70227 m!65017))

(assert (=> b!70227 m!65017))

(assert (=> b!70227 m!67077))

(assert (=> d!14899 d!15585))

(declare-fun e!45941 () Option!137)

(declare-fun b!70230 () Bool)

(assert (=> b!70230 (= e!45941 (getValueByKey!131 (t!4972 lt!30255) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))

(declare-fun b!70229 () Bool)

(declare-fun e!45940 () Option!137)

(assert (=> b!70229 (= e!45940 e!45941)))

(declare-fun c!10164 () Bool)

(assert (=> b!70229 (= c!10164 (and ((_ is Cons!1465) lt!30255) (not (= (_1!1062 (h!2050 lt!30255)) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))))

(declare-fun b!70231 () Bool)

(assert (=> b!70231 (= e!45941 None!135)))

(declare-fun b!70228 () Bool)

(assert (=> b!70228 (= e!45940 (Some!136 (_2!1062 (h!2050 lt!30255))))))

(declare-fun c!10163 () Bool)

(declare-fun d!15587 () Bool)

(assert (=> d!15587 (= c!10163 (and ((_ is Cons!1465) lt!30255) (= (_1!1062 (h!2050 lt!30255)) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))))))

(assert (=> d!15587 (= (getValueByKey!131 lt!30255 (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))) e!45940)))

(assert (= (and d!15587 c!10163) b!70228))

(assert (= (and d!15587 (not c!10163)) b!70229))

(assert (= (and b!70229 c!10164) b!70230))

(assert (= (and b!70229 (not c!10164)) b!70231))

(declare-fun m!67079 () Bool)

(assert (=> b!70230 m!67079))

(assert (=> d!14899 d!15587))

(declare-fun d!15589 () Bool)

(assert (=> d!15589 (= (getValueByKey!131 lt!30255 (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))) (Some!136 (_2!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))

(declare-fun lt!30929 () Unit!1919)

(assert (=> d!15589 (= lt!30929 (choose!386 lt!30255 (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)) (_2!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))

(declare-fun e!45942 () Bool)

(assert (=> d!15589 e!45942))

(declare-fun res!37577 () Bool)

(assert (=> d!15589 (=> (not res!37577) (not e!45942))))

(assert (=> d!15589 (= res!37577 (isStrictlySorted!290 lt!30255))))

(assert (=> d!15589 (= (lemmaContainsTupThenGetReturnValue!48 lt!30255 (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)) (_2!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))) lt!30929)))

(declare-fun b!70232 () Bool)

(declare-fun res!37578 () Bool)

(assert (=> b!70232 (=> (not res!37578) (not e!45942))))

(assert (=> b!70232 (= res!37578 (containsKey!135 lt!30255 (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))

(declare-fun b!70233 () Bool)

(assert (=> b!70233 (= e!45942 (contains!716 lt!30255 (tuple2!2103 (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)) (_2!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))))))

(assert (= (and d!15589 res!37577) b!70232))

(assert (= (and b!70232 res!37578) b!70233))

(assert (=> d!15589 m!65011))

(declare-fun m!67081 () Bool)

(assert (=> d!15589 m!67081))

(declare-fun m!67083 () Bool)

(assert (=> d!15589 m!67083))

(declare-fun m!67085 () Bool)

(assert (=> b!70232 m!67085))

(declare-fun m!67087 () Bool)

(assert (=> b!70233 m!67087))

(assert (=> d!14899 d!15589))

(declare-fun b!70234 () Bool)

(declare-fun e!45945 () List!1469)

(assert (=> b!70234 (= e!45945 (insertStrictlySorted!51 (t!4972 (toList!719 (+!90 lt!29889 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)) (_2!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))

(declare-fun d!15591 () Bool)

(declare-fun e!45943 () Bool)

(assert (=> d!15591 e!45943))

(declare-fun res!37580 () Bool)

(assert (=> d!15591 (=> (not res!37580) (not e!45943))))

(declare-fun lt!30930 () List!1469)

(assert (=> d!15591 (= res!37580 (isStrictlySorted!290 lt!30930))))

(declare-fun e!45947 () List!1469)

(assert (=> d!15591 (= lt!30930 e!45947)))

(declare-fun c!10165 () Bool)

(assert (=> d!15591 (= c!10165 (and ((_ is Cons!1465) (toList!719 (+!90 lt!29889 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))) (bvslt (_1!1062 (h!2050 (toList!719 (+!90 lt!29889 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))))))

(assert (=> d!15591 (isStrictlySorted!290 (toList!719 (+!90 lt!29889 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> d!15591 (= (insertStrictlySorted!51 (toList!719 (+!90 lt!29889 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)) (_2!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))) lt!30930)))

(declare-fun b!70235 () Bool)

(declare-fun c!10167 () Bool)

(declare-fun c!10168 () Bool)

(assert (=> b!70235 (= e!45945 (ite c!10168 (t!4972 (toList!719 (+!90 lt!29889 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))) (ite c!10167 (Cons!1465 (h!2050 (toList!719 (+!90 lt!29889 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))) (t!4972 (toList!719 (+!90 lt!29889 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))) Nil!1466)))))

(declare-fun bm!6031 () Bool)

(declare-fun call!6036 () List!1469)

(declare-fun call!6035 () List!1469)

(assert (=> bm!6031 (= call!6036 call!6035)))

(declare-fun b!70236 () Bool)

(declare-fun e!45946 () List!1469)

(assert (=> b!70236 (= e!45946 call!6036)))

(declare-fun bm!6032 () Bool)

(declare-fun call!6034 () List!1469)

(assert (=> bm!6032 (= call!6035 call!6034)))

(declare-fun bm!6033 () Bool)

(assert (=> bm!6033 (= call!6034 ($colon$colon!64 e!45945 (ite c!10165 (h!2050 (toList!719 (+!90 lt!29889 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))) (tuple2!2103 (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)) (_2!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))))

(declare-fun c!10166 () Bool)

(assert (=> bm!6033 (= c!10166 c!10165)))

(declare-fun b!70237 () Bool)

(declare-fun e!45944 () List!1469)

(assert (=> b!70237 (= e!45947 e!45944)))

(assert (=> b!70237 (= c!10168 (and ((_ is Cons!1465) (toList!719 (+!90 lt!29889 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))) (= (_1!1062 (h!2050 (toList!719 (+!90 lt!29889 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))))))

(declare-fun b!70238 () Bool)

(assert (=> b!70238 (= e!45943 (contains!716 lt!30930 (tuple2!2103 (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)) (_2!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))))))

(declare-fun b!70239 () Bool)

(assert (=> b!70239 (= e!45947 call!6034)))

(declare-fun b!70240 () Bool)

(assert (=> b!70240 (= e!45946 call!6036)))

(declare-fun b!70241 () Bool)

(declare-fun res!37579 () Bool)

(assert (=> b!70241 (=> (not res!37579) (not e!45943))))

(assert (=> b!70241 (= res!37579 (containsKey!135 lt!30930 (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))

(declare-fun b!70242 () Bool)

(assert (=> b!70242 (= e!45944 call!6035)))

(declare-fun b!70243 () Bool)

(assert (=> b!70243 (= c!10167 (and ((_ is Cons!1465) (toList!719 (+!90 lt!29889 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))) (bvsgt (_1!1062 (h!2050 (toList!719 (+!90 lt!29889 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))))))

(assert (=> b!70243 (= e!45944 e!45946)))

(assert (= (and d!15591 c!10165) b!70239))

(assert (= (and d!15591 (not c!10165)) b!70237))

(assert (= (and b!70237 c!10168) b!70242))

(assert (= (and b!70237 (not c!10168)) b!70243))

(assert (= (and b!70243 c!10167) b!70236))

(assert (= (and b!70243 (not c!10167)) b!70240))

(assert (= (or b!70236 b!70240) bm!6031))

(assert (= (or b!70242 bm!6031) bm!6032))

(assert (= (or b!70239 bm!6032) bm!6033))

(assert (= (and bm!6033 c!10166) b!70234))

(assert (= (and bm!6033 (not c!10166)) b!70235))

(assert (= (and d!15591 res!37580) b!70241))

(assert (= (and b!70241 res!37579) b!70238))

(declare-fun m!67089 () Bool)

(assert (=> b!70238 m!67089))

(declare-fun m!67091 () Bool)

(assert (=> d!15591 m!67091))

(declare-fun m!67093 () Bool)

(assert (=> d!15591 m!67093))

(declare-fun m!67095 () Bool)

(assert (=> b!70234 m!67095))

(declare-fun m!67097 () Bool)

(assert (=> bm!6033 m!67097))

(declare-fun m!67099 () Bool)

(assert (=> b!70241 m!67099))

(assert (=> d!14899 d!15591))

(declare-fun lt!30931 () Bool)

(declare-fun d!15593 () Bool)

(assert (=> d!15593 (= lt!30931 (select (content!73 (toList!719 lt!30330)) (tuple2!2103 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun e!45949 () Bool)

(assert (=> d!15593 (= lt!30931 e!45949)))

(declare-fun res!37581 () Bool)

(assert (=> d!15593 (=> (not res!37581) (not e!45949))))

(assert (=> d!15593 (= res!37581 ((_ is Cons!1465) (toList!719 lt!30330)))))

(assert (=> d!15593 (= (contains!716 (toList!719 lt!30330) (tuple2!2103 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992))))) lt!30931)))

(declare-fun b!70244 () Bool)

(declare-fun e!45948 () Bool)

(assert (=> b!70244 (= e!45949 e!45948)))

(declare-fun res!37582 () Bool)

(assert (=> b!70244 (=> res!37582 e!45948)))

(assert (=> b!70244 (= res!37582 (= (h!2050 (toList!719 lt!30330)) (tuple2!2103 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun b!70245 () Bool)

(assert (=> b!70245 (= e!45948 (contains!716 (t!4972 (toList!719 lt!30330)) (tuple2!2103 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))))

(assert (= (and d!15593 res!37581) b!70244))

(assert (= (and b!70244 (not res!37582)) b!70245))

(declare-fun m!67101 () Bool)

(assert (=> d!15593 m!67101))

(declare-fun m!67103 () Bool)

(assert (=> d!15593 m!67103))

(declare-fun m!67105 () Bool)

(assert (=> b!70245 m!67105))

(assert (=> b!69159 d!15593))

(declare-fun b!70248 () Bool)

(declare-fun e!45951 () Option!137)

(assert (=> b!70248 (= e!45951 (getValueByKey!131 (t!4972 (toList!719 lt!30363)) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!70247 () Bool)

(declare-fun e!45950 () Option!137)

(assert (=> b!70247 (= e!45950 e!45951)))

(declare-fun c!10170 () Bool)

(assert (=> b!70247 (= c!10170 (and ((_ is Cons!1465) (toList!719 lt!30363)) (not (= (_1!1062 (h!2050 (toList!719 lt!30363))) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!70249 () Bool)

(assert (=> b!70249 (= e!45951 None!135)))

(declare-fun b!70246 () Bool)

(assert (=> b!70246 (= e!45950 (Some!136 (_2!1062 (h!2050 (toList!719 lt!30363)))))))

(declare-fun c!10169 () Bool)

(declare-fun d!15595 () Bool)

(assert (=> d!15595 (= c!10169 (and ((_ is Cons!1465) (toList!719 lt!30363)) (= (_1!1062 (h!2050 (toList!719 lt!30363))) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!15595 (= (getValueByKey!131 (toList!719 lt!30363) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!45950)))

(assert (= (and d!15595 c!10169) b!70246))

(assert (= (and d!15595 (not c!10169)) b!70247))

(assert (= (and b!70247 c!10170) b!70248))

(assert (= (and b!70247 (not c!10170)) b!70249))

(declare-fun m!67107 () Bool)

(assert (=> b!70248 m!67107))

(assert (=> b!69193 d!15595))

(declare-fun d!15597 () Bool)

(assert (=> d!15597 (isDefined!84 (getValueByKey!131 (toList!719 lt!30041) (_1!1062 lt!29892)))))

(declare-fun lt!30932 () Unit!1919)

(assert (=> d!15597 (= lt!30932 (choose!387 (toList!719 lt!30041) (_1!1062 lt!29892)))))

(declare-fun e!45952 () Bool)

(assert (=> d!15597 e!45952))

(declare-fun res!37583 () Bool)

(assert (=> d!15597 (=> (not res!37583) (not e!45952))))

(assert (=> d!15597 (= res!37583 (isStrictlySorted!290 (toList!719 lt!30041)))))

(assert (=> d!15597 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 lt!30041) (_1!1062 lt!29892)) lt!30932)))

(declare-fun b!70250 () Bool)

(assert (=> b!70250 (= e!45952 (containsKey!135 (toList!719 lt!30041) (_1!1062 lt!29892)))))

(assert (= (and d!15597 res!37583) b!70250))

(assert (=> d!15597 m!64611))

(assert (=> d!15597 m!64611))

(assert (=> d!15597 m!65327))

(declare-fun m!67109 () Bool)

(assert (=> d!15597 m!67109))

(declare-fun m!67111 () Bool)

(assert (=> d!15597 m!67111))

(assert (=> b!70250 m!65323))

(assert (=> b!69169 d!15597))

(assert (=> b!69169 d!15391))

(assert (=> b!69169 d!14913))

(declare-fun d!15599 () Bool)

(assert (=> d!15599 (= (validKeyInArray!0 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!68871 d!15599))

(declare-fun d!15601 () Bool)

(assert (=> d!15601 (= (apply!73 lt!30293 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1127 (getValueByKey!131 (toList!719 lt!30293) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3024 () Bool)

(assert (= bs!3024 d!15601))

(declare-fun m!67113 () Bool)

(assert (=> bs!3024 m!67113))

(assert (=> bs!3024 m!67113))

(declare-fun m!67115 () Bool)

(assert (=> bs!3024 m!67115))

(assert (=> b!69087 d!15601))

(declare-fun d!15603 () Bool)

(declare-fun e!45953 () Bool)

(assert (=> d!15603 e!45953))

(declare-fun res!37584 () Bool)

(assert (=> d!15603 (=> res!37584 e!45953)))

(declare-fun lt!30934 () Bool)

(assert (=> d!15603 (= res!37584 (not lt!30934))))

(declare-fun lt!30933 () Bool)

(assert (=> d!15603 (= lt!30934 lt!30933)))

(declare-fun lt!30935 () Unit!1919)

(declare-fun e!45954 () Unit!1919)

(assert (=> d!15603 (= lt!30935 e!45954)))

(declare-fun c!10171 () Bool)

(assert (=> d!15603 (= c!10171 lt!30933)))

(assert (=> d!15603 (= lt!30933 (containsKey!135 (toList!719 lt!30403) (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!15603 (= (contains!714 lt!30403 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)) lt!30934)))

(declare-fun b!70251 () Bool)

(declare-fun lt!30936 () Unit!1919)

(assert (=> b!70251 (= e!45954 lt!30936)))

(assert (=> b!70251 (= lt!30936 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 lt!30403) (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!70251 (isDefined!84 (getValueByKey!131 (toList!719 lt!30403) (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!70252 () Bool)

(declare-fun Unit!1983 () Unit!1919)

(assert (=> b!70252 (= e!45954 Unit!1983)))

(declare-fun b!70253 () Bool)

(assert (=> b!70253 (= e!45953 (isDefined!84 (getValueByKey!131 (toList!719 lt!30403) (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!15603 c!10171) b!70251))

(assert (= (and d!15603 (not c!10171)) b!70252))

(assert (= (and d!15603 (not res!37584)) b!70253))

(assert (=> d!15603 m!64775))

(declare-fun m!67117 () Bool)

(assert (=> d!15603 m!67117))

(assert (=> b!70251 m!64775))

(declare-fun m!67119 () Bool)

(assert (=> b!70251 m!67119))

(assert (=> b!70251 m!64775))

(assert (=> b!70251 m!67061))

(assert (=> b!70251 m!67061))

(declare-fun m!67121 () Bool)

(assert (=> b!70251 m!67121))

(assert (=> b!70253 m!64775))

(assert (=> b!70253 m!67061))

(assert (=> b!70253 m!67061))

(assert (=> b!70253 m!67121))

(assert (=> b!69250 d!15603))

(assert (=> bm!5875 d!15477))

(declare-fun b!70256 () Bool)

(declare-fun e!45956 () Option!137)

(assert (=> b!70256 (= e!45956 (getValueByKey!131 (t!4972 (toList!719 lt!30342)) (_1!1062 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!70255 () Bool)

(declare-fun e!45955 () Option!137)

(assert (=> b!70255 (= e!45955 e!45956)))

(declare-fun c!10173 () Bool)

(assert (=> b!70255 (= c!10173 (and ((_ is Cons!1465) (toList!719 lt!30342)) (not (= (_1!1062 (h!2050 (toList!719 lt!30342))) (_1!1062 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))))

(declare-fun b!70257 () Bool)

(assert (=> b!70257 (= e!45956 None!135)))

(declare-fun b!70254 () Bool)

(assert (=> b!70254 (= e!45955 (Some!136 (_2!1062 (h!2050 (toList!719 lt!30342)))))))

(declare-fun d!15605 () Bool)

(declare-fun c!10172 () Bool)

(assert (=> d!15605 (= c!10172 (and ((_ is Cons!1465) (toList!719 lt!30342)) (= (_1!1062 (h!2050 (toList!719 lt!30342))) (_1!1062 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> d!15605 (= (getValueByKey!131 (toList!719 lt!30342) (_1!1062 (tuple2!2103 lt!29991 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))) e!45955)))

(assert (= (and d!15605 c!10172) b!70254))

(assert (= (and d!15605 (not c!10172)) b!70255))

(assert (= (and b!70255 c!10173) b!70256))

(assert (= (and b!70255 (not c!10173)) b!70257))

(declare-fun m!67123 () Bool)

(assert (=> b!70256 m!67123))

(assert (=> b!69164 d!15605))

(declare-fun d!15607 () Bool)

(declare-fun lt!30937 () Bool)

(assert (=> d!15607 (= lt!30937 (select (content!73 lt!30057) (tuple2!2103 (_1!1062 lt!29893) (_2!1062 lt!29893))))))

(declare-fun e!45958 () Bool)

(assert (=> d!15607 (= lt!30937 e!45958)))

(declare-fun res!37585 () Bool)

(assert (=> d!15607 (=> (not res!37585) (not e!45958))))

(assert (=> d!15607 (= res!37585 ((_ is Cons!1465) lt!30057))))

(assert (=> d!15607 (= (contains!716 lt!30057 (tuple2!2103 (_1!1062 lt!29893) (_2!1062 lt!29893))) lt!30937)))

(declare-fun b!70258 () Bool)

(declare-fun e!45957 () Bool)

(assert (=> b!70258 (= e!45958 e!45957)))

(declare-fun res!37586 () Bool)

(assert (=> b!70258 (=> res!37586 e!45957)))

(assert (=> b!70258 (= res!37586 (= (h!2050 lt!30057) (tuple2!2103 (_1!1062 lt!29893) (_2!1062 lt!29893))))))

(declare-fun b!70259 () Bool)

(assert (=> b!70259 (= e!45957 (contains!716 (t!4972 lt!30057) (tuple2!2103 (_1!1062 lt!29893) (_2!1062 lt!29893))))))

(assert (= (and d!15607 res!37585) b!70258))

(assert (= (and b!70258 (not res!37586)) b!70259))

(declare-fun m!67125 () Bool)

(assert (=> d!15607 m!67125))

(declare-fun m!67127 () Bool)

(assert (=> d!15607 m!67127))

(declare-fun m!67129 () Bool)

(assert (=> b!70259 m!67129))

(assert (=> b!69069 d!15607))

(declare-fun d!15609 () Bool)

(assert (=> d!15609 (= (apply!73 (+!90 lt!30171 (tuple2!2103 lt!30186 (minValue!2074 newMap!16))) lt!30181) (get!1127 (getValueByKey!131 (toList!719 (+!90 lt!30171 (tuple2!2103 lt!30186 (minValue!2074 newMap!16)))) lt!30181)))))

(declare-fun bs!3025 () Bool)

(assert (= bs!3025 d!15609))

(declare-fun m!67131 () Bool)

(assert (=> bs!3025 m!67131))

(assert (=> bs!3025 m!67131))

(declare-fun m!67133 () Bool)

(assert (=> bs!3025 m!67133))

(assert (=> b!68889 d!15609))

(declare-fun d!15611 () Bool)

(assert (=> d!15611 (= (apply!73 (+!90 lt!30174 (tuple2!2103 lt!30169 (zeroValue!2074 newMap!16))) lt!30177) (get!1127 (getValueByKey!131 (toList!719 (+!90 lt!30174 (tuple2!2103 lt!30169 (zeroValue!2074 newMap!16)))) lt!30177)))))

(declare-fun bs!3026 () Bool)

(assert (= bs!3026 d!15611))

(declare-fun m!67135 () Bool)

(assert (=> bs!3026 m!67135))

(assert (=> bs!3026 m!67135))

(declare-fun m!67137 () Bool)

(assert (=> bs!3026 m!67137))

(assert (=> b!68889 d!15611))

(declare-fun d!15613 () Bool)

(declare-fun e!45959 () Bool)

(assert (=> d!15613 e!45959))

(declare-fun res!37588 () Bool)

(assert (=> d!15613 (=> (not res!37588) (not e!45959))))

(declare-fun lt!30940 () ListLongMap!1407)

(assert (=> d!15613 (= res!37588 (contains!714 lt!30940 (_1!1062 (tuple2!2103 lt!30186 (minValue!2074 newMap!16)))))))

(declare-fun lt!30941 () List!1469)

(assert (=> d!15613 (= lt!30940 (ListLongMap!1408 lt!30941))))

(declare-fun lt!30938 () Unit!1919)

(declare-fun lt!30939 () Unit!1919)

(assert (=> d!15613 (= lt!30938 lt!30939)))

(assert (=> d!15613 (= (getValueByKey!131 lt!30941 (_1!1062 (tuple2!2103 lt!30186 (minValue!2074 newMap!16)))) (Some!136 (_2!1062 (tuple2!2103 lt!30186 (minValue!2074 newMap!16)))))))

(assert (=> d!15613 (= lt!30939 (lemmaContainsTupThenGetReturnValue!48 lt!30941 (_1!1062 (tuple2!2103 lt!30186 (minValue!2074 newMap!16))) (_2!1062 (tuple2!2103 lt!30186 (minValue!2074 newMap!16)))))))

(assert (=> d!15613 (= lt!30941 (insertStrictlySorted!51 (toList!719 lt!30171) (_1!1062 (tuple2!2103 lt!30186 (minValue!2074 newMap!16))) (_2!1062 (tuple2!2103 lt!30186 (minValue!2074 newMap!16)))))))

(assert (=> d!15613 (= (+!90 lt!30171 (tuple2!2103 lt!30186 (minValue!2074 newMap!16))) lt!30940)))

(declare-fun b!70260 () Bool)

(declare-fun res!37587 () Bool)

(assert (=> b!70260 (=> (not res!37587) (not e!45959))))

(assert (=> b!70260 (= res!37587 (= (getValueByKey!131 (toList!719 lt!30940) (_1!1062 (tuple2!2103 lt!30186 (minValue!2074 newMap!16)))) (Some!136 (_2!1062 (tuple2!2103 lt!30186 (minValue!2074 newMap!16))))))))

(declare-fun b!70261 () Bool)

(assert (=> b!70261 (= e!45959 (contains!716 (toList!719 lt!30940) (tuple2!2103 lt!30186 (minValue!2074 newMap!16))))))

(assert (= (and d!15613 res!37588) b!70260))

(assert (= (and b!70260 res!37587) b!70261))

(declare-fun m!67139 () Bool)

(assert (=> d!15613 m!67139))

(declare-fun m!67141 () Bool)

(assert (=> d!15613 m!67141))

(declare-fun m!67143 () Bool)

(assert (=> d!15613 m!67143))

(declare-fun m!67145 () Bool)

(assert (=> d!15613 m!67145))

(declare-fun m!67147 () Bool)

(assert (=> b!70260 m!67147))

(declare-fun m!67149 () Bool)

(assert (=> b!70261 m!67149))

(assert (=> b!68889 d!15613))

(declare-fun d!15615 () Bool)

(assert (=> d!15615 (= (apply!73 lt!30174 lt!30177) (get!1127 (getValueByKey!131 (toList!719 lt!30174) lt!30177)))))

(declare-fun bs!3027 () Bool)

(assert (= bs!3027 d!15615))

(declare-fun m!67151 () Bool)

(assert (=> bs!3027 m!67151))

(assert (=> bs!3027 m!67151))

(declare-fun m!67153 () Bool)

(assert (=> bs!3027 m!67153))

(assert (=> b!68889 d!15615))

(declare-fun d!15617 () Bool)

(assert (=> d!15617 (= (apply!73 (+!90 lt!30168 (tuple2!2103 lt!30179 (minValue!2074 newMap!16))) lt!30170) (apply!73 lt!30168 lt!30170))))

(declare-fun lt!30942 () Unit!1919)

(assert (=> d!15617 (= lt!30942 (choose!388 lt!30168 lt!30179 (minValue!2074 newMap!16) lt!30170))))

(declare-fun e!45960 () Bool)

(assert (=> d!15617 e!45960))

(declare-fun res!37589 () Bool)

(assert (=> d!15617 (=> (not res!37589) (not e!45960))))

(assert (=> d!15617 (= res!37589 (contains!714 lt!30168 lt!30170))))

(assert (=> d!15617 (= (addApplyDifferent!49 lt!30168 lt!30179 (minValue!2074 newMap!16) lt!30170) lt!30942)))

(declare-fun b!70262 () Bool)

(assert (=> b!70262 (= e!45960 (not (= lt!30170 lt!30179)))))

(assert (= (and d!15617 res!37589) b!70262))

(assert (=> d!15617 m!64825))

(declare-fun m!67155 () Bool)

(assert (=> d!15617 m!67155))

(declare-fun m!67157 () Bool)

(assert (=> d!15617 m!67157))

(assert (=> d!15617 m!64841))

(assert (=> d!15617 m!64825))

(assert (=> d!15617 m!64833))

(assert (=> b!68889 d!15617))

(declare-fun d!15619 () Bool)

(assert (=> d!15619 (= (apply!73 (+!90 lt!30168 (tuple2!2103 lt!30179 (minValue!2074 newMap!16))) lt!30170) (get!1127 (getValueByKey!131 (toList!719 (+!90 lt!30168 (tuple2!2103 lt!30179 (minValue!2074 newMap!16)))) lt!30170)))))

(declare-fun bs!3028 () Bool)

(assert (= bs!3028 d!15619))

(declare-fun m!67159 () Bool)

(assert (=> bs!3028 m!67159))

(assert (=> bs!3028 m!67159))

(declare-fun m!67161 () Bool)

(assert (=> bs!3028 m!67161))

(assert (=> b!68889 d!15619))

(assert (=> b!68889 d!15251))

(declare-fun d!15621 () Bool)

(assert (=> d!15621 (= (apply!73 lt!30171 lt!30181) (get!1127 (getValueByKey!131 (toList!719 lt!30171) lt!30181)))))

(declare-fun bs!3029 () Bool)

(assert (= bs!3029 d!15621))

(declare-fun m!67163 () Bool)

(assert (=> bs!3029 m!67163))

(assert (=> bs!3029 m!67163))

(declare-fun m!67165 () Bool)

(assert (=> bs!3029 m!67165))

(assert (=> b!68889 d!15621))

(declare-fun d!15623 () Bool)

(assert (=> d!15623 (contains!714 (+!90 lt!30175 (tuple2!2103 lt!30178 (zeroValue!2074 newMap!16))) lt!30166)))

(declare-fun lt!30943 () Unit!1919)

(assert (=> d!15623 (= lt!30943 (choose!389 lt!30175 lt!30178 (zeroValue!2074 newMap!16) lt!30166))))

(assert (=> d!15623 (contains!714 lt!30175 lt!30166)))

(assert (=> d!15623 (= (addStillContains!49 lt!30175 lt!30178 (zeroValue!2074 newMap!16) lt!30166) lt!30943)))

(declare-fun bs!3030 () Bool)

(assert (= bs!3030 d!15623))

(assert (=> bs!3030 m!64835))

(assert (=> bs!3030 m!64835))

(assert (=> bs!3030 m!64837))

(declare-fun m!67167 () Bool)

(assert (=> bs!3030 m!67167))

(declare-fun m!67169 () Bool)

(assert (=> bs!3030 m!67169))

(assert (=> b!68889 d!15623))

(declare-fun d!15625 () Bool)

(declare-fun e!45961 () Bool)

(assert (=> d!15625 e!45961))

(declare-fun res!37591 () Bool)

(assert (=> d!15625 (=> (not res!37591) (not e!45961))))

(declare-fun lt!30946 () ListLongMap!1407)

(assert (=> d!15625 (= res!37591 (contains!714 lt!30946 (_1!1062 (tuple2!2103 lt!30179 (minValue!2074 newMap!16)))))))

(declare-fun lt!30947 () List!1469)

(assert (=> d!15625 (= lt!30946 (ListLongMap!1408 lt!30947))))

(declare-fun lt!30944 () Unit!1919)

(declare-fun lt!30945 () Unit!1919)

(assert (=> d!15625 (= lt!30944 lt!30945)))

(assert (=> d!15625 (= (getValueByKey!131 lt!30947 (_1!1062 (tuple2!2103 lt!30179 (minValue!2074 newMap!16)))) (Some!136 (_2!1062 (tuple2!2103 lt!30179 (minValue!2074 newMap!16)))))))

(assert (=> d!15625 (= lt!30945 (lemmaContainsTupThenGetReturnValue!48 lt!30947 (_1!1062 (tuple2!2103 lt!30179 (minValue!2074 newMap!16))) (_2!1062 (tuple2!2103 lt!30179 (minValue!2074 newMap!16)))))))

(assert (=> d!15625 (= lt!30947 (insertStrictlySorted!51 (toList!719 lt!30168) (_1!1062 (tuple2!2103 lt!30179 (minValue!2074 newMap!16))) (_2!1062 (tuple2!2103 lt!30179 (minValue!2074 newMap!16)))))))

(assert (=> d!15625 (= (+!90 lt!30168 (tuple2!2103 lt!30179 (minValue!2074 newMap!16))) lt!30946)))

(declare-fun b!70263 () Bool)

(declare-fun res!37590 () Bool)

(assert (=> b!70263 (=> (not res!37590) (not e!45961))))

(assert (=> b!70263 (= res!37590 (= (getValueByKey!131 (toList!719 lt!30946) (_1!1062 (tuple2!2103 lt!30179 (minValue!2074 newMap!16)))) (Some!136 (_2!1062 (tuple2!2103 lt!30179 (minValue!2074 newMap!16))))))))

(declare-fun b!70264 () Bool)

(assert (=> b!70264 (= e!45961 (contains!716 (toList!719 lt!30946) (tuple2!2103 lt!30179 (minValue!2074 newMap!16))))))

(assert (= (and d!15625 res!37591) b!70263))

(assert (= (and b!70263 res!37590) b!70264))

(declare-fun m!67171 () Bool)

(assert (=> d!15625 m!67171))

(declare-fun m!67173 () Bool)

(assert (=> d!15625 m!67173))

(declare-fun m!67175 () Bool)

(assert (=> d!15625 m!67175))

(declare-fun m!67177 () Bool)

(assert (=> d!15625 m!67177))

(declare-fun m!67179 () Bool)

(assert (=> b!70263 m!67179))

(declare-fun m!67181 () Bool)

(assert (=> b!70264 m!67181))

(assert (=> b!68889 d!15625))

(declare-fun d!15627 () Bool)

(declare-fun e!45962 () Bool)

(assert (=> d!15627 e!45962))

(declare-fun res!37593 () Bool)

(assert (=> d!15627 (=> (not res!37593) (not e!45962))))

(declare-fun lt!30950 () ListLongMap!1407)

(assert (=> d!15627 (= res!37593 (contains!714 lt!30950 (_1!1062 (tuple2!2103 lt!30169 (zeroValue!2074 newMap!16)))))))

(declare-fun lt!30951 () List!1469)

(assert (=> d!15627 (= lt!30950 (ListLongMap!1408 lt!30951))))

(declare-fun lt!30948 () Unit!1919)

(declare-fun lt!30949 () Unit!1919)

(assert (=> d!15627 (= lt!30948 lt!30949)))

(assert (=> d!15627 (= (getValueByKey!131 lt!30951 (_1!1062 (tuple2!2103 lt!30169 (zeroValue!2074 newMap!16)))) (Some!136 (_2!1062 (tuple2!2103 lt!30169 (zeroValue!2074 newMap!16)))))))

(assert (=> d!15627 (= lt!30949 (lemmaContainsTupThenGetReturnValue!48 lt!30951 (_1!1062 (tuple2!2103 lt!30169 (zeroValue!2074 newMap!16))) (_2!1062 (tuple2!2103 lt!30169 (zeroValue!2074 newMap!16)))))))

(assert (=> d!15627 (= lt!30951 (insertStrictlySorted!51 (toList!719 lt!30174) (_1!1062 (tuple2!2103 lt!30169 (zeroValue!2074 newMap!16))) (_2!1062 (tuple2!2103 lt!30169 (zeroValue!2074 newMap!16)))))))

(assert (=> d!15627 (= (+!90 lt!30174 (tuple2!2103 lt!30169 (zeroValue!2074 newMap!16))) lt!30950)))

(declare-fun b!70265 () Bool)

(declare-fun res!37592 () Bool)

(assert (=> b!70265 (=> (not res!37592) (not e!45962))))

(assert (=> b!70265 (= res!37592 (= (getValueByKey!131 (toList!719 lt!30950) (_1!1062 (tuple2!2103 lt!30169 (zeroValue!2074 newMap!16)))) (Some!136 (_2!1062 (tuple2!2103 lt!30169 (zeroValue!2074 newMap!16))))))))

(declare-fun b!70266 () Bool)

(assert (=> b!70266 (= e!45962 (contains!716 (toList!719 lt!30950) (tuple2!2103 lt!30169 (zeroValue!2074 newMap!16))))))

(assert (= (and d!15627 res!37593) b!70265))

(assert (= (and b!70265 res!37592) b!70266))

(declare-fun m!67183 () Bool)

(assert (=> d!15627 m!67183))

(declare-fun m!67185 () Bool)

(assert (=> d!15627 m!67185))

(declare-fun m!67187 () Bool)

(assert (=> d!15627 m!67187))

(declare-fun m!67189 () Bool)

(assert (=> d!15627 m!67189))

(declare-fun m!67191 () Bool)

(assert (=> b!70265 m!67191))

(declare-fun m!67193 () Bool)

(assert (=> b!70266 m!67193))

(assert (=> b!68889 d!15627))

(declare-fun d!15629 () Bool)

(declare-fun e!45963 () Bool)

(assert (=> d!15629 e!45963))

(declare-fun res!37594 () Bool)

(assert (=> d!15629 (=> res!37594 e!45963)))

(declare-fun lt!30953 () Bool)

(assert (=> d!15629 (= res!37594 (not lt!30953))))

(declare-fun lt!30952 () Bool)

(assert (=> d!15629 (= lt!30953 lt!30952)))

(declare-fun lt!30954 () Unit!1919)

(declare-fun e!45964 () Unit!1919)

(assert (=> d!15629 (= lt!30954 e!45964)))

(declare-fun c!10174 () Bool)

(assert (=> d!15629 (= c!10174 lt!30952)))

(assert (=> d!15629 (= lt!30952 (containsKey!135 (toList!719 (+!90 lt!30175 (tuple2!2103 lt!30178 (zeroValue!2074 newMap!16)))) lt!30166))))

(assert (=> d!15629 (= (contains!714 (+!90 lt!30175 (tuple2!2103 lt!30178 (zeroValue!2074 newMap!16))) lt!30166) lt!30953)))

(declare-fun b!70267 () Bool)

(declare-fun lt!30955 () Unit!1919)

(assert (=> b!70267 (= e!45964 lt!30955)))

(assert (=> b!70267 (= lt!30955 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 (+!90 lt!30175 (tuple2!2103 lt!30178 (zeroValue!2074 newMap!16)))) lt!30166))))

(assert (=> b!70267 (isDefined!84 (getValueByKey!131 (toList!719 (+!90 lt!30175 (tuple2!2103 lt!30178 (zeroValue!2074 newMap!16)))) lt!30166))))

(declare-fun b!70268 () Bool)

(declare-fun Unit!1984 () Unit!1919)

(assert (=> b!70268 (= e!45964 Unit!1984)))

(declare-fun b!70269 () Bool)

(assert (=> b!70269 (= e!45963 (isDefined!84 (getValueByKey!131 (toList!719 (+!90 lt!30175 (tuple2!2103 lt!30178 (zeroValue!2074 newMap!16)))) lt!30166)))))

(assert (= (and d!15629 c!10174) b!70267))

(assert (= (and d!15629 (not c!10174)) b!70268))

(assert (= (and d!15629 (not res!37594)) b!70269))

(declare-fun m!67195 () Bool)

(assert (=> d!15629 m!67195))

(declare-fun m!67197 () Bool)

(assert (=> b!70267 m!67197))

(declare-fun m!67199 () Bool)

(assert (=> b!70267 m!67199))

(assert (=> b!70267 m!67199))

(declare-fun m!67201 () Bool)

(assert (=> b!70267 m!67201))

(assert (=> b!70269 m!67199))

(assert (=> b!70269 m!67199))

(assert (=> b!70269 m!67201))

(assert (=> b!68889 d!15629))

(declare-fun d!15631 () Bool)

(declare-fun e!45965 () Bool)

(assert (=> d!15631 e!45965))

(declare-fun res!37596 () Bool)

(assert (=> d!15631 (=> (not res!37596) (not e!45965))))

(declare-fun lt!30958 () ListLongMap!1407)

(assert (=> d!15631 (= res!37596 (contains!714 lt!30958 (_1!1062 (tuple2!2103 lt!30178 (zeroValue!2074 newMap!16)))))))

(declare-fun lt!30959 () List!1469)

(assert (=> d!15631 (= lt!30958 (ListLongMap!1408 lt!30959))))

(declare-fun lt!30956 () Unit!1919)

(declare-fun lt!30957 () Unit!1919)

(assert (=> d!15631 (= lt!30956 lt!30957)))

(assert (=> d!15631 (= (getValueByKey!131 lt!30959 (_1!1062 (tuple2!2103 lt!30178 (zeroValue!2074 newMap!16)))) (Some!136 (_2!1062 (tuple2!2103 lt!30178 (zeroValue!2074 newMap!16)))))))

(assert (=> d!15631 (= lt!30957 (lemmaContainsTupThenGetReturnValue!48 lt!30959 (_1!1062 (tuple2!2103 lt!30178 (zeroValue!2074 newMap!16))) (_2!1062 (tuple2!2103 lt!30178 (zeroValue!2074 newMap!16)))))))

(assert (=> d!15631 (= lt!30959 (insertStrictlySorted!51 (toList!719 lt!30175) (_1!1062 (tuple2!2103 lt!30178 (zeroValue!2074 newMap!16))) (_2!1062 (tuple2!2103 lt!30178 (zeroValue!2074 newMap!16)))))))

(assert (=> d!15631 (= (+!90 lt!30175 (tuple2!2103 lt!30178 (zeroValue!2074 newMap!16))) lt!30958)))

(declare-fun b!70270 () Bool)

(declare-fun res!37595 () Bool)

(assert (=> b!70270 (=> (not res!37595) (not e!45965))))

(assert (=> b!70270 (= res!37595 (= (getValueByKey!131 (toList!719 lt!30958) (_1!1062 (tuple2!2103 lt!30178 (zeroValue!2074 newMap!16)))) (Some!136 (_2!1062 (tuple2!2103 lt!30178 (zeroValue!2074 newMap!16))))))))

(declare-fun b!70271 () Bool)

(assert (=> b!70271 (= e!45965 (contains!716 (toList!719 lt!30958) (tuple2!2103 lt!30178 (zeroValue!2074 newMap!16))))))

(assert (= (and d!15631 res!37596) b!70270))

(assert (= (and b!70270 res!37595) b!70271))

(declare-fun m!67203 () Bool)

(assert (=> d!15631 m!67203))

(declare-fun m!67205 () Bool)

(assert (=> d!15631 m!67205))

(declare-fun m!67207 () Bool)

(assert (=> d!15631 m!67207))

(declare-fun m!67209 () Bool)

(assert (=> d!15631 m!67209))

(declare-fun m!67211 () Bool)

(assert (=> b!70270 m!67211))

(declare-fun m!67213 () Bool)

(assert (=> b!70271 m!67213))

(assert (=> b!68889 d!15631))

(declare-fun d!15633 () Bool)

(assert (=> d!15633 (= (apply!73 (+!90 lt!30174 (tuple2!2103 lt!30169 (zeroValue!2074 newMap!16))) lt!30177) (apply!73 lt!30174 lt!30177))))

(declare-fun lt!30960 () Unit!1919)

(assert (=> d!15633 (= lt!30960 (choose!388 lt!30174 lt!30169 (zeroValue!2074 newMap!16) lt!30177))))

(declare-fun e!45966 () Bool)

(assert (=> d!15633 e!45966))

(declare-fun res!37597 () Bool)

(assert (=> d!15633 (=> (not res!37597) (not e!45966))))

(assert (=> d!15633 (= res!37597 (contains!714 lt!30174 lt!30177))))

(assert (=> d!15633 (= (addApplyDifferent!49 lt!30174 lt!30169 (zeroValue!2074 newMap!16) lt!30177) lt!30960)))

(declare-fun b!70272 () Bool)

(assert (=> b!70272 (= e!45966 (not (= lt!30177 lt!30169)))))

(assert (= (and d!15633 res!37597) b!70272))

(assert (=> d!15633 m!64827))

(declare-fun m!67215 () Bool)

(assert (=> d!15633 m!67215))

(declare-fun m!67217 () Bool)

(assert (=> d!15633 m!67217))

(assert (=> d!15633 m!64845))

(assert (=> d!15633 m!64827))

(assert (=> d!15633 m!64829))

(assert (=> b!68889 d!15633))

(declare-fun d!15635 () Bool)

(assert (=> d!15635 (= (apply!73 (+!90 lt!30171 (tuple2!2103 lt!30186 (minValue!2074 newMap!16))) lt!30181) (apply!73 lt!30171 lt!30181))))

(declare-fun lt!30961 () Unit!1919)

(assert (=> d!15635 (= lt!30961 (choose!388 lt!30171 lt!30186 (minValue!2074 newMap!16) lt!30181))))

(declare-fun e!45967 () Bool)

(assert (=> d!15635 e!45967))

(declare-fun res!37598 () Bool)

(assert (=> d!15635 (=> (not res!37598) (not e!45967))))

(assert (=> d!15635 (= res!37598 (contains!714 lt!30171 lt!30181))))

(assert (=> d!15635 (= (addApplyDifferent!49 lt!30171 lt!30186 (minValue!2074 newMap!16) lt!30181) lt!30961)))

(declare-fun b!70273 () Bool)

(assert (=> b!70273 (= e!45967 (not (= lt!30181 lt!30186)))))

(assert (= (and d!15635 res!37598) b!70273))

(assert (=> d!15635 m!64819))

(declare-fun m!67219 () Bool)

(assert (=> d!15635 m!67219))

(declare-fun m!67221 () Bool)

(assert (=> d!15635 m!67221))

(assert (=> d!15635 m!64843))

(assert (=> d!15635 m!64819))

(assert (=> d!15635 m!64821))

(assert (=> b!68889 d!15635))

(declare-fun d!15637 () Bool)

(assert (=> d!15637 (= (apply!73 lt!30168 lt!30170) (get!1127 (getValueByKey!131 (toList!719 lt!30168) lt!30170)))))

(declare-fun bs!3031 () Bool)

(assert (= bs!3031 d!15637))

(declare-fun m!67223 () Bool)

(assert (=> bs!3031 m!67223))

(assert (=> bs!3031 m!67223))

(declare-fun m!67225 () Bool)

(assert (=> bs!3031 m!67225))

(assert (=> b!68889 d!15637))

(declare-fun d!15639 () Bool)

(declare-fun e!45968 () Bool)

(assert (=> d!15639 e!45968))

(declare-fun res!37599 () Bool)

(assert (=> d!15639 (=> res!37599 e!45968)))

(declare-fun lt!30963 () Bool)

(assert (=> d!15639 (= res!37599 (not lt!30963))))

(declare-fun lt!30962 () Bool)

(assert (=> d!15639 (= lt!30963 lt!30962)))

(declare-fun lt!30964 () Unit!1919)

(declare-fun e!45969 () Unit!1919)

(assert (=> d!15639 (= lt!30964 e!45969)))

(declare-fun c!10175 () Bool)

(assert (=> d!15639 (= c!10175 lt!30962)))

(assert (=> d!15639 (= lt!30962 (containsKey!135 (toList!719 (map!1140 (_2!1061 lt!30497))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(assert (=> d!15639 (= (contains!714 (map!1140 (_2!1061 lt!30497)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) lt!30963)))

(declare-fun b!70274 () Bool)

(declare-fun lt!30965 () Unit!1919)

(assert (=> b!70274 (= e!45969 lt!30965)))

(assert (=> b!70274 (= lt!30965 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 (map!1140 (_2!1061 lt!30497))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(assert (=> b!70274 (isDefined!84 (getValueByKey!131 (toList!719 (map!1140 (_2!1061 lt!30497))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(declare-fun b!70275 () Bool)

(declare-fun Unit!1985 () Unit!1919)

(assert (=> b!70275 (= e!45969 Unit!1985)))

(declare-fun b!70276 () Bool)

(assert (=> b!70276 (= e!45968 (isDefined!84 (getValueByKey!131 (toList!719 (map!1140 (_2!1061 lt!30497))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355))))))

(assert (= (and d!15639 c!10175) b!70274))

(assert (= (and d!15639 (not c!10175)) b!70275))

(assert (= (and d!15639 (not res!37599)) b!70276))

(assert (=> d!15639 m!64407))

(declare-fun m!67227 () Bool)

(assert (=> d!15639 m!67227))

(assert (=> b!70274 m!64407))

(declare-fun m!67229 () Bool)

(assert (=> b!70274 m!67229))

(assert (=> b!70274 m!64407))

(declare-fun m!67231 () Bool)

(assert (=> b!70274 m!67231))

(assert (=> b!70274 m!67231))

(declare-fun m!67233 () Bool)

(assert (=> b!70274 m!67233))

(assert (=> b!70276 m!64407))

(assert (=> b!70276 m!67231))

(assert (=> b!70276 m!67231))

(assert (=> b!70276 m!67233))

(assert (=> b!69294 d!15639))

(assert (=> b!69294 d!15315))

(assert (=> d!14843 d!15083))

(declare-fun d!15641 () Bool)

(declare-fun e!45970 () Bool)

(assert (=> d!15641 e!45970))

(declare-fun res!37600 () Bool)

(assert (=> d!15641 (=> res!37600 e!45970)))

(declare-fun lt!30967 () Bool)

(assert (=> d!15641 (= res!37600 (not lt!30967))))

(declare-fun lt!30966 () Bool)

(assert (=> d!15641 (= lt!30967 lt!30966)))

(declare-fun lt!30968 () Unit!1919)

(declare-fun e!45971 () Unit!1919)

(assert (=> d!15641 (= lt!30968 e!45971)))

(declare-fun c!10176 () Bool)

(assert (=> d!15641 (= c!10176 lt!30966)))

(assert (=> d!15641 (= lt!30966 (containsKey!135 (toList!719 lt!30183) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!15641 (= (contains!714 lt!30183 #b0000000000000000000000000000000000000000000000000000000000000000) lt!30967)))

(declare-fun b!70277 () Bool)

(declare-fun lt!30969 () Unit!1919)

(assert (=> b!70277 (= e!45971 lt!30969)))

(assert (=> b!70277 (= lt!30969 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 lt!30183) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!70277 (isDefined!84 (getValueByKey!131 (toList!719 lt!30183) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!70278 () Bool)

(declare-fun Unit!1986 () Unit!1919)

(assert (=> b!70278 (= e!45971 Unit!1986)))

(declare-fun b!70279 () Bool)

(assert (=> b!70279 (= e!45970 (isDefined!84 (getValueByKey!131 (toList!719 lt!30183) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15641 c!10176) b!70277))

(assert (= (and d!15641 (not c!10176)) b!70278))

(assert (= (and d!15641 (not res!37600)) b!70279))

(declare-fun m!67235 () Bool)

(assert (=> d!15641 m!67235))

(declare-fun m!67237 () Bool)

(assert (=> b!70277 m!67237))

(assert (=> b!70277 m!66713))

(assert (=> b!70277 m!66713))

(declare-fun m!67239 () Bool)

(assert (=> b!70277 m!67239))

(assert (=> b!70279 m!66713))

(assert (=> b!70279 m!66713))

(assert (=> b!70279 m!67239))

(assert (=> bm!5874 d!15641))

(declare-fun b!70282 () Bool)

(declare-fun e!45973 () Option!137)

(assert (=> b!70282 (= e!45973 (getValueByKey!131 (t!4972 (toList!719 lt!30254)) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))

(declare-fun b!70281 () Bool)

(declare-fun e!45972 () Option!137)

(assert (=> b!70281 (= e!45972 e!45973)))

(declare-fun c!10178 () Bool)

(assert (=> b!70281 (= c!10178 (and ((_ is Cons!1465) (toList!719 lt!30254)) (not (= (_1!1062 (h!2050 (toList!719 lt!30254))) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))))))))

(declare-fun b!70283 () Bool)

(assert (=> b!70283 (= e!45973 None!135)))

(declare-fun b!70280 () Bool)

(assert (=> b!70280 (= e!45972 (Some!136 (_2!1062 (h!2050 (toList!719 lt!30254)))))))

(declare-fun d!15643 () Bool)

(declare-fun c!10177 () Bool)

(assert (=> d!15643 (= c!10177 (and ((_ is Cons!1465) (toList!719 lt!30254)) (= (_1!1062 (h!2050 (toList!719 lt!30254))) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)))))))

(assert (=> d!15643 (= (getValueByKey!131 (toList!719 lt!30254) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897))) e!45972)))

(assert (= (and d!15643 c!10177) b!70280))

(assert (= (and d!15643 (not c!10177)) b!70281))

(assert (= (and b!70281 c!10178) b!70282))

(assert (= (and b!70281 (not c!10178)) b!70283))

(declare-fun m!67241 () Bool)

(assert (=> b!70282 m!67241))

(assert (=> b!69032 d!15643))

(declare-fun d!15645 () Bool)

(assert (=> d!15645 (= (get!1127 (getValueByKey!131 (toList!719 lt!29996) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!2498 (getValueByKey!131 (toList!719 lt!29996) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!14927 d!15645))

(assert (=> d!14927 d!15429))

(declare-fun d!15647 () Bool)

(assert (=> d!15647 (= (size!2081 newMap!16) (bvadd (_size!388 newMap!16) (bvsdiv (bvadd (extraKeys!2035 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!68865 d!15647))

(declare-fun d!15649 () Bool)

(assert (=> d!15649 (= (content!74 Nil!1467) ((as const (Array (_ BitVec 64) Bool)) false))))

(assert (=> d!14945 d!15649))

(declare-fun d!15651 () Bool)

(assert (=> d!15651 (isDefined!84 (getValueByKey!131 (toList!719 lt!29996) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!30970 () Unit!1919)

(assert (=> d!15651 (= lt!30970 (choose!387 (toList!719 lt!29996) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!45974 () Bool)

(assert (=> d!15651 e!45974))

(declare-fun res!37601 () Bool)

(assert (=> d!15651 (=> (not res!37601) (not e!45974))))

(assert (=> d!15651 (= res!37601 (isStrictlySorted!290 (toList!719 lt!29996)))))

(assert (=> d!15651 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 lt!29996) #b1000000000000000000000000000000000000000000000000000000000000000) lt!30970)))

(declare-fun b!70284 () Bool)

(assert (=> b!70284 (= e!45974 (containsKey!135 (toList!719 lt!29996) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!15651 res!37601) b!70284))

(assert (=> d!15651 m!65103))

(assert (=> d!15651 m!65103))

(assert (=> d!15651 m!65417))

(declare-fun m!67243 () Bool)

(assert (=> d!15651 m!67243))

(assert (=> d!15651 m!66299))

(assert (=> b!70284 m!65413))

(assert (=> b!69204 d!15651))

(assert (=> b!69204 d!15427))

(assert (=> b!69204 d!15429))

(declare-fun d!15653 () Bool)

(declare-fun e!45975 () Bool)

(assert (=> d!15653 e!45975))

(declare-fun res!37602 () Bool)

(assert (=> d!15653 (=> res!37602 e!45975)))

(declare-fun lt!30972 () Bool)

(assert (=> d!15653 (= res!37602 (not lt!30972))))

(declare-fun lt!30971 () Bool)

(assert (=> d!15653 (= lt!30972 lt!30971)))

(declare-fun lt!30973 () Unit!1919)

(declare-fun e!45976 () Unit!1919)

(assert (=> d!15653 (= lt!30973 e!45976)))

(declare-fun c!10179 () Bool)

(assert (=> d!15653 (= c!10179 lt!30971)))

(assert (=> d!15653 (= lt!30971 (containsKey!135 (toList!719 (getCurrentListMap!417 (_keys!3812 newMap!16) lt!30125 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16))) (select (arr!1841 (_keys!3812 newMap!16)) (index!3066 lt!30149))))))

(assert (=> d!15653 (= (contains!714 (getCurrentListMap!417 (_keys!3812 newMap!16) lt!30125 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) (select (arr!1841 (_keys!3812 newMap!16)) (index!3066 lt!30149))) lt!30972)))

(declare-fun b!70285 () Bool)

(declare-fun lt!30974 () Unit!1919)

(assert (=> b!70285 (= e!45976 lt!30974)))

(assert (=> b!70285 (= lt!30974 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 (getCurrentListMap!417 (_keys!3812 newMap!16) lt!30125 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16))) (select (arr!1841 (_keys!3812 newMap!16)) (index!3066 lt!30149))))))

(assert (=> b!70285 (isDefined!84 (getValueByKey!131 (toList!719 (getCurrentListMap!417 (_keys!3812 newMap!16) lt!30125 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16))) (select (arr!1841 (_keys!3812 newMap!16)) (index!3066 lt!30149))))))

(declare-fun b!70286 () Bool)

(declare-fun Unit!1987 () Unit!1919)

(assert (=> b!70286 (= e!45976 Unit!1987)))

(declare-fun b!70287 () Bool)

(assert (=> b!70287 (= e!45975 (isDefined!84 (getValueByKey!131 (toList!719 (getCurrentListMap!417 (_keys!3812 newMap!16) lt!30125 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16))) (select (arr!1841 (_keys!3812 newMap!16)) (index!3066 lt!30149)))))))

(assert (= (and d!15653 c!10179) b!70285))

(assert (= (and d!15653 (not c!10179)) b!70286))

(assert (= (and d!15653 (not res!37602)) b!70287))

(assert (=> d!15653 m!64681))

(declare-fun m!67245 () Bool)

(assert (=> d!15653 m!67245))

(assert (=> b!70285 m!64681))

(declare-fun m!67247 () Bool)

(assert (=> b!70285 m!67247))

(assert (=> b!70285 m!64681))

(declare-fun m!67249 () Bool)

(assert (=> b!70285 m!67249))

(assert (=> b!70285 m!67249))

(declare-fun m!67251 () Bool)

(assert (=> b!70285 m!67251))

(assert (=> b!70287 m!64681))

(assert (=> b!70287 m!67249))

(assert (=> b!70287 m!67249))

(assert (=> b!70287 m!67251))

(assert (=> b!68913 d!15653))

(declare-fun b!70288 () Bool)

(declare-fun lt!30992 () ListLongMap!1407)

(declare-fun e!45983 () Bool)

(assert (=> b!70288 (= e!45983 (= (apply!73 lt!30992 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)) (get!1124 (select (arr!1842 lt!30125) #b00000000000000000000000000000000) (dynLambda!322 (defaultEntry!2168 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!70288 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2078 lt!30125)))))

(assert (=> b!70288 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))))))

(declare-fun b!70289 () Bool)

(declare-fun e!45989 () Unit!1919)

(declare-fun lt!30991 () Unit!1919)

(assert (=> b!70289 (= e!45989 lt!30991)))

(declare-fun lt!30984 () ListLongMap!1407)

(assert (=> b!70289 (= lt!30984 (getCurrentListMapNoExtraKeys!55 (_keys!3812 newMap!16) lt!30125 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30987 () (_ BitVec 64))

(assert (=> b!70289 (= lt!30987 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30975 () (_ BitVec 64))

(assert (=> b!70289 (= lt!30975 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30989 () Unit!1919)

(assert (=> b!70289 (= lt!30989 (addStillContains!49 lt!30984 lt!30987 (zeroValue!2074 newMap!16) lt!30975))))

(assert (=> b!70289 (contains!714 (+!90 lt!30984 (tuple2!2103 lt!30987 (zeroValue!2074 newMap!16))) lt!30975)))

(declare-fun lt!30985 () Unit!1919)

(assert (=> b!70289 (= lt!30985 lt!30989)))

(declare-fun lt!30977 () ListLongMap!1407)

(assert (=> b!70289 (= lt!30977 (getCurrentListMapNoExtraKeys!55 (_keys!3812 newMap!16) lt!30125 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30988 () (_ BitVec 64))

(assert (=> b!70289 (= lt!30988 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30979 () (_ BitVec 64))

(assert (=> b!70289 (= lt!30979 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30976 () Unit!1919)

(assert (=> b!70289 (= lt!30976 (addApplyDifferent!49 lt!30977 lt!30988 (minValue!2074 newMap!16) lt!30979))))

(assert (=> b!70289 (= (apply!73 (+!90 lt!30977 (tuple2!2103 lt!30988 (minValue!2074 newMap!16))) lt!30979) (apply!73 lt!30977 lt!30979))))

(declare-fun lt!30994 () Unit!1919)

(assert (=> b!70289 (= lt!30994 lt!30976)))

(declare-fun lt!30983 () ListLongMap!1407)

(assert (=> b!70289 (= lt!30983 (getCurrentListMapNoExtraKeys!55 (_keys!3812 newMap!16) lt!30125 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30978 () (_ BitVec 64))

(assert (=> b!70289 (= lt!30978 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30986 () (_ BitVec 64))

(assert (=> b!70289 (= lt!30986 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!30996 () Unit!1919)

(assert (=> b!70289 (= lt!30996 (addApplyDifferent!49 lt!30983 lt!30978 (zeroValue!2074 newMap!16) lt!30986))))

(assert (=> b!70289 (= (apply!73 (+!90 lt!30983 (tuple2!2103 lt!30978 (zeroValue!2074 newMap!16))) lt!30986) (apply!73 lt!30983 lt!30986))))

(declare-fun lt!30993 () Unit!1919)

(assert (=> b!70289 (= lt!30993 lt!30996)))

(declare-fun lt!30980 () ListLongMap!1407)

(assert (=> b!70289 (= lt!30980 (getCurrentListMapNoExtraKeys!55 (_keys!3812 newMap!16) lt!30125 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!30995 () (_ BitVec 64))

(assert (=> b!70289 (= lt!30995 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!30990 () (_ BitVec 64))

(assert (=> b!70289 (= lt!30990 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!70289 (= lt!30991 (addApplyDifferent!49 lt!30980 lt!30995 (minValue!2074 newMap!16) lt!30990))))

(assert (=> b!70289 (= (apply!73 (+!90 lt!30980 (tuple2!2103 lt!30995 (minValue!2074 newMap!16))) lt!30990) (apply!73 lt!30980 lt!30990))))

(declare-fun b!70290 () Bool)

(declare-fun e!45982 () Bool)

(declare-fun e!45979 () Bool)

(assert (=> b!70290 (= e!45982 e!45979)))

(declare-fun res!37609 () Bool)

(declare-fun call!6038 () Bool)

(assert (=> b!70290 (= res!37609 call!6038)))

(assert (=> b!70290 (=> (not res!37609) (not e!45979))))

(declare-fun d!15655 () Bool)

(declare-fun e!45987 () Bool)

(assert (=> d!15655 e!45987))

(declare-fun res!37605 () Bool)

(assert (=> d!15655 (=> (not res!37605) (not e!45987))))

(assert (=> d!15655 (= res!37605 (or (bvsge #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))))))))

(declare-fun lt!30981 () ListLongMap!1407)

(assert (=> d!15655 (= lt!30992 lt!30981)))

(declare-fun lt!30982 () Unit!1919)

(assert (=> d!15655 (= lt!30982 e!45989)))

(declare-fun c!10185 () Bool)

(declare-fun e!45978 () Bool)

(assert (=> d!15655 (= c!10185 e!45978)))

(declare-fun res!37606 () Bool)

(assert (=> d!15655 (=> (not res!37606) (not e!45978))))

(assert (=> d!15655 (= res!37606 (bvslt #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))))))

(declare-fun e!45988 () ListLongMap!1407)

(assert (=> d!15655 (= lt!30981 e!45988)))

(declare-fun c!10181 () Bool)

(assert (=> d!15655 (= c!10181 (and (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!15655 (validMask!0 (mask!6113 newMap!16))))

(assert (=> d!15655 (= (getCurrentListMap!417 (_keys!3812 newMap!16) lt!30125 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) lt!30992)))

(declare-fun bm!6034 () Bool)

(assert (=> bm!6034 (= call!6038 (contains!714 lt!30992 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun call!6042 () ListLongMap!1407)

(declare-fun call!6043 () ListLongMap!1407)

(declare-fun bm!6035 () Bool)

(declare-fun call!6039 () ListLongMap!1407)

(declare-fun c!10184 () Bool)

(declare-fun call!6037 () ListLongMap!1407)

(assert (=> bm!6035 (= call!6042 (+!90 (ite c!10181 call!6043 (ite c!10184 call!6037 call!6039)) (ite (or c!10181 c!10184) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))))))

(declare-fun bm!6036 () Bool)

(assert (=> bm!6036 (= call!6043 (getCurrentListMapNoExtraKeys!55 (_keys!3812 newMap!16) lt!30125 (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun bm!6037 () Bool)

(assert (=> bm!6037 (= call!6037 call!6043)))

(declare-fun b!70291 () Bool)

(declare-fun e!45985 () ListLongMap!1407)

(assert (=> b!70291 (= e!45985 call!6039)))

(declare-fun b!70292 () Bool)

(declare-fun e!45977 () Bool)

(declare-fun e!45980 () Bool)

(assert (=> b!70292 (= e!45977 e!45980)))

(declare-fun res!37604 () Bool)

(declare-fun call!6041 () Bool)

(assert (=> b!70292 (= res!37604 call!6041)))

(assert (=> b!70292 (=> (not res!37604) (not e!45980))))

(declare-fun b!70293 () Bool)

(declare-fun Unit!1988 () Unit!1919)

(assert (=> b!70293 (= e!45989 Unit!1988)))

(declare-fun b!70294 () Bool)

(assert (=> b!70294 (= e!45978 (validKeyInArray!0 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!70295 () Bool)

(assert (=> b!70295 (= e!45980 (= (apply!73 lt!30992 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2074 newMap!16)))))

(declare-fun b!70296 () Bool)

(assert (=> b!70296 (= e!45979 (= (apply!73 lt!30992 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2074 newMap!16)))))

(declare-fun b!70297 () Bool)

(declare-fun res!37607 () Bool)

(assert (=> b!70297 (=> (not res!37607) (not e!45987))))

(assert (=> b!70297 (= res!37607 e!45977)))

(declare-fun c!10182 () Bool)

(assert (=> b!70297 (= c!10182 (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!70298 () Bool)

(declare-fun e!45981 () ListLongMap!1407)

(assert (=> b!70298 (= e!45988 e!45981)))

(assert (=> b!70298 (= c!10184 (and (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!70299 () Bool)

(assert (=> b!70299 (= e!45987 e!45982)))

(declare-fun c!10180 () Bool)

(assert (=> b!70299 (= c!10180 (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!70300 () Bool)

(assert (=> b!70300 (= e!45988 (+!90 call!6042 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))))))

(declare-fun b!70301 () Bool)

(declare-fun c!10183 () Bool)

(assert (=> b!70301 (= c!10183 (and (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!70301 (= e!45981 e!45985)))

(declare-fun b!70302 () Bool)

(declare-fun e!45986 () Bool)

(assert (=> b!70302 (= e!45986 (validKeyInArray!0 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!70303 () Bool)

(assert (=> b!70303 (= e!45982 (not call!6038))))

(declare-fun b!70304 () Bool)

(declare-fun res!37610 () Bool)

(assert (=> b!70304 (=> (not res!37610) (not e!45987))))

(declare-fun e!45984 () Bool)

(assert (=> b!70304 (= res!37610 e!45984)))

(declare-fun res!37608 () Bool)

(assert (=> b!70304 (=> res!37608 e!45984)))

(assert (=> b!70304 (= res!37608 (not e!45986))))

(declare-fun res!37603 () Bool)

(assert (=> b!70304 (=> (not res!37603) (not e!45986))))

(assert (=> b!70304 (= res!37603 (bvslt #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))))))

(declare-fun b!70305 () Bool)

(declare-fun call!6040 () ListLongMap!1407)

(assert (=> b!70305 (= e!45985 call!6040)))

(declare-fun bm!6038 () Bool)

(assert (=> bm!6038 (= call!6040 call!6042)))

(declare-fun bm!6039 () Bool)

(assert (=> bm!6039 (= call!6039 call!6037)))

(declare-fun b!70306 () Bool)

(assert (=> b!70306 (= e!45981 call!6040)))

(declare-fun b!70307 () Bool)

(assert (=> b!70307 (= e!45984 e!45983)))

(declare-fun res!37611 () Bool)

(assert (=> b!70307 (=> (not res!37611) (not e!45983))))

(assert (=> b!70307 (= res!37611 (contains!714 lt!30992 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!70307 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))))))

(declare-fun bm!6040 () Bool)

(assert (=> bm!6040 (= call!6041 (contains!714 lt!30992 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!70308 () Bool)

(assert (=> b!70308 (= e!45977 (not call!6041))))

(assert (= (and d!15655 c!10181) b!70300))

(assert (= (and d!15655 (not c!10181)) b!70298))

(assert (= (and b!70298 c!10184) b!70306))

(assert (= (and b!70298 (not c!10184)) b!70301))

(assert (= (and b!70301 c!10183) b!70305))

(assert (= (and b!70301 (not c!10183)) b!70291))

(assert (= (or b!70305 b!70291) bm!6039))

(assert (= (or b!70306 bm!6039) bm!6037))

(assert (= (or b!70306 b!70305) bm!6038))

(assert (= (or b!70300 bm!6037) bm!6036))

(assert (= (or b!70300 bm!6038) bm!6035))

(assert (= (and d!15655 res!37606) b!70294))

(assert (= (and d!15655 c!10185) b!70289))

(assert (= (and d!15655 (not c!10185)) b!70293))

(assert (= (and d!15655 res!37605) b!70304))

(assert (= (and b!70304 res!37603) b!70302))

(assert (= (and b!70304 (not res!37608)) b!70307))

(assert (= (and b!70307 res!37611) b!70288))

(assert (= (and b!70304 res!37610) b!70297))

(assert (= (and b!70297 c!10182) b!70292))

(assert (= (and b!70297 (not c!10182)) b!70308))

(assert (= (and b!70292 res!37604) b!70295))

(assert (= (or b!70292 b!70308) bm!6040))

(assert (= (and b!70297 res!37607) b!70299))

(assert (= (and b!70299 c!10180) b!70290))

(assert (= (and b!70299 (not c!10180)) b!70303))

(assert (= (and b!70290 res!37609) b!70296))

(assert (= (or b!70290 b!70303) bm!6034))

(declare-fun b_lambda!3137 () Bool)

(assert (=> (not b_lambda!3137) (not b!70288)))

(assert (=> b!70288 t!4980))

(declare-fun b_and!4319 () Bool)

(assert (= b_and!4315 (and (=> t!4980 result!2619) b_and!4319)))

(assert (=> b!70288 t!4982))

(declare-fun b_and!4321 () Bool)

(assert (= b_and!4317 (and (=> t!4982 result!2621) b_and!4321)))

(declare-fun m!67253 () Bool)

(assert (=> bm!6040 m!67253))

(declare-fun m!67255 () Bool)

(assert (=> bm!6035 m!67255))

(declare-fun m!67257 () Bool)

(assert (=> b!70300 m!67257))

(declare-fun m!67259 () Bool)

(assert (=> bm!6034 m!67259))

(assert (=> b!70294 m!64775))

(assert (=> b!70294 m!64775))

(assert (=> b!70294 m!64777))

(assert (=> b!70307 m!64775))

(assert (=> b!70307 m!64775))

(declare-fun m!67261 () Bool)

(assert (=> b!70307 m!67261))

(declare-fun m!67263 () Bool)

(assert (=> b!70295 m!67263))

(declare-fun m!67265 () Bool)

(assert (=> b!70296 m!67265))

(assert (=> b!70288 m!64807))

(declare-fun m!67267 () Bool)

(assert (=> b!70288 m!67267))

(assert (=> b!70288 m!64807))

(declare-fun m!67269 () Bool)

(assert (=> b!70288 m!67269))

(assert (=> b!70288 m!67267))

(assert (=> b!70288 m!64775))

(declare-fun m!67271 () Bool)

(assert (=> b!70288 m!67271))

(assert (=> b!70288 m!64775))

(assert (=> d!15655 m!64759))

(declare-fun m!67273 () Bool)

(assert (=> bm!6036 m!67273))

(assert (=> b!70302 m!64775))

(assert (=> b!70302 m!64775))

(assert (=> b!70302 m!64777))

(declare-fun m!67275 () Bool)

(assert (=> b!70289 m!67275))

(declare-fun m!67277 () Bool)

(assert (=> b!70289 m!67277))

(declare-fun m!67279 () Bool)

(assert (=> b!70289 m!67279))

(declare-fun m!67281 () Bool)

(assert (=> b!70289 m!67281))

(declare-fun m!67283 () Bool)

(assert (=> b!70289 m!67283))

(declare-fun m!67285 () Bool)

(assert (=> b!70289 m!67285))

(declare-fun m!67287 () Bool)

(assert (=> b!70289 m!67287))

(declare-fun m!67289 () Bool)

(assert (=> b!70289 m!67289))

(assert (=> b!70289 m!67283))

(declare-fun m!67291 () Bool)

(assert (=> b!70289 m!67291))

(assert (=> b!70289 m!64775))

(declare-fun m!67293 () Bool)

(assert (=> b!70289 m!67293))

(declare-fun m!67295 () Bool)

(assert (=> b!70289 m!67295))

(declare-fun m!67297 () Bool)

(assert (=> b!70289 m!67297))

(assert (=> b!70289 m!67285))

(declare-fun m!67299 () Bool)

(assert (=> b!70289 m!67299))

(assert (=> b!70289 m!67293))

(assert (=> b!70289 m!67277))

(declare-fun m!67301 () Bool)

(assert (=> b!70289 m!67301))

(assert (=> b!70289 m!67273))

(declare-fun m!67303 () Bool)

(assert (=> b!70289 m!67303))

(assert (=> b!68913 d!15655))

(declare-fun d!15657 () Bool)

(declare-fun res!37612 () Bool)

(declare-fun e!45990 () Bool)

(assert (=> d!15657 (=> res!37612 e!45990)))

(assert (=> d!15657 (= res!37612 (and ((_ is Cons!1465) lt!30269) (= (_1!1062 (h!2050 lt!30269)) (_1!1062 lt!29893))))))

(assert (=> d!15657 (= (containsKey!135 lt!30269 (_1!1062 lt!29893)) e!45990)))

(declare-fun b!70309 () Bool)

(declare-fun e!45991 () Bool)

(assert (=> b!70309 (= e!45990 e!45991)))

(declare-fun res!37613 () Bool)

(assert (=> b!70309 (=> (not res!37613) (not e!45991))))

(assert (=> b!70309 (= res!37613 (and (or (not ((_ is Cons!1465) lt!30269)) (bvsle (_1!1062 (h!2050 lt!30269)) (_1!1062 lt!29893))) ((_ is Cons!1465) lt!30269) (bvslt (_1!1062 (h!2050 lt!30269)) (_1!1062 lt!29893))))))

(declare-fun b!70310 () Bool)

(assert (=> b!70310 (= e!45991 (containsKey!135 (t!4972 lt!30269) (_1!1062 lt!29893)))))

(assert (= (and d!15657 (not res!37612)) b!70309))

(assert (= (and b!70309 res!37613) b!70310))

(declare-fun m!67305 () Bool)

(assert (=> b!70310 m!67305))

(assert (=> b!69054 d!15657))

(declare-fun d!15659 () Bool)

(declare-fun res!37614 () Bool)

(declare-fun e!45992 () Bool)

(assert (=> d!15659 (=> res!37614 e!45992)))

(assert (=> d!15659 (= res!37614 (and ((_ is Cons!1465) (toList!719 lt!30041)) (= (_1!1062 (h!2050 (toList!719 lt!30041))) (_1!1062 lt!29892))))))

(assert (=> d!15659 (= (containsKey!135 (toList!719 lt!30041) (_1!1062 lt!29892)) e!45992)))

(declare-fun b!70311 () Bool)

(declare-fun e!45993 () Bool)

(assert (=> b!70311 (= e!45992 e!45993)))

(declare-fun res!37615 () Bool)

(assert (=> b!70311 (=> (not res!37615) (not e!45993))))

(assert (=> b!70311 (= res!37615 (and (or (not ((_ is Cons!1465) (toList!719 lt!30041))) (bvsle (_1!1062 (h!2050 (toList!719 lt!30041))) (_1!1062 lt!29892))) ((_ is Cons!1465) (toList!719 lt!30041)) (bvslt (_1!1062 (h!2050 (toList!719 lt!30041))) (_1!1062 lt!29892))))))

(declare-fun b!70312 () Bool)

(assert (=> b!70312 (= e!45993 (containsKey!135 (t!4972 (toList!719 lt!30041)) (_1!1062 lt!29892)))))

(assert (= (and d!15659 (not res!37614)) b!70311))

(assert (= (and b!70311 res!37615) b!70312))

(declare-fun m!67307 () Bool)

(assert (=> b!70312 m!67307))

(assert (=> d!14989 d!15659))

(assert (=> d!14909 d!14907))

(declare-fun d!15661 () Bool)

(assert (=> d!15661 (= (getValueByKey!131 lt!30050 (_1!1062 lt!29893)) (Some!136 (_2!1062 lt!29893)))))

(assert (=> d!15661 true))

(declare-fun _$22!376 () Unit!1919)

(assert (=> d!15661 (= (choose!386 lt!30050 (_1!1062 lt!29893) (_2!1062 lt!29893)) _$22!376)))

(declare-fun bs!3032 () Bool)

(assert (= bs!3032 d!15661))

(assert (=> bs!3032 m!64629))

(assert (=> d!14909 d!15661))

(declare-fun d!15663 () Bool)

(declare-fun res!37616 () Bool)

(declare-fun e!45994 () Bool)

(assert (=> d!15663 (=> res!37616 e!45994)))

(assert (=> d!15663 (= res!37616 (or ((_ is Nil!1466) lt!30050) ((_ is Nil!1466) (t!4972 lt!30050))))))

(assert (=> d!15663 (= (isStrictlySorted!290 lt!30050) e!45994)))

(declare-fun b!70313 () Bool)

(declare-fun e!45995 () Bool)

(assert (=> b!70313 (= e!45994 e!45995)))

(declare-fun res!37617 () Bool)

(assert (=> b!70313 (=> (not res!37617) (not e!45995))))

(assert (=> b!70313 (= res!37617 (bvslt (_1!1062 (h!2050 lt!30050)) (_1!1062 (h!2050 (t!4972 lt!30050)))))))

(declare-fun b!70314 () Bool)

(assert (=> b!70314 (= e!45995 (isStrictlySorted!290 (t!4972 lt!30050)))))

(assert (= (and d!15663 (not res!37616)) b!70313))

(assert (= (and b!70313 res!37617) b!70314))

(declare-fun m!67309 () Bool)

(assert (=> b!70314 m!67309))

(assert (=> d!14909 d!15663))

(declare-fun d!15665 () Bool)

(declare-fun e!45996 () Bool)

(assert (=> d!15665 e!45996))

(declare-fun res!37618 () Bool)

(assert (=> d!15665 (=> res!37618 e!45996)))

(declare-fun lt!30998 () Bool)

(assert (=> d!15665 (= res!37618 (not lt!30998))))

(declare-fun lt!30997 () Bool)

(assert (=> d!15665 (= lt!30998 lt!30997)))

(declare-fun lt!30999 () Unit!1919)

(declare-fun e!45997 () Unit!1919)

(assert (=> d!15665 (= lt!30999 e!45997)))

(declare-fun c!10186 () Bool)

(assert (=> d!15665 (= c!10186 lt!30997)))

(assert (=> d!15665 (= lt!30997 (containsKey!135 (toList!719 lt!30330) (_1!1062 (tuple2!2103 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> d!15665 (= (contains!714 lt!30330 (_1!1062 (tuple2!2103 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))) lt!30998)))

(declare-fun b!70315 () Bool)

(declare-fun lt!31000 () Unit!1919)

(assert (=> b!70315 (= e!45997 lt!31000)))

(assert (=> b!70315 (= lt!31000 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 lt!30330) (_1!1062 (tuple2!2103 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> b!70315 (isDefined!84 (getValueByKey!131 (toList!719 lt!30330) (_1!1062 (tuple2!2103 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!70316 () Bool)

(declare-fun Unit!1989 () Unit!1919)

(assert (=> b!70316 (= e!45997 Unit!1989)))

(declare-fun b!70317 () Bool)

(assert (=> b!70317 (= e!45996 (isDefined!84 (getValueByKey!131 (toList!719 lt!30330) (_1!1062 (tuple2!2103 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(assert (= (and d!15665 c!10186) b!70315))

(assert (= (and d!15665 (not c!10186)) b!70316))

(assert (= (and d!15665 (not res!37618)) b!70317))

(declare-fun m!67311 () Bool)

(assert (=> d!15665 m!67311))

(declare-fun m!67313 () Bool)

(assert (=> b!70315 m!67313))

(assert (=> b!70315 m!65259))

(assert (=> b!70315 m!65259))

(declare-fun m!67315 () Bool)

(assert (=> b!70315 m!67315))

(assert (=> b!70317 m!65259))

(assert (=> b!70317 m!65259))

(assert (=> b!70317 m!67315))

(assert (=> d!14967 d!15665))

(declare-fun b!70320 () Bool)

(declare-fun e!45999 () Option!137)

(assert (=> b!70320 (= e!45999 (getValueByKey!131 (t!4972 lt!30331) (_1!1062 (tuple2!2103 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!70319 () Bool)

(declare-fun e!45998 () Option!137)

(assert (=> b!70319 (= e!45998 e!45999)))

(declare-fun c!10188 () Bool)

(assert (=> b!70319 (= c!10188 (and ((_ is Cons!1465) lt!30331) (not (= (_1!1062 (h!2050 lt!30331)) (_1!1062 (tuple2!2103 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))))

(declare-fun b!70321 () Bool)

(assert (=> b!70321 (= e!45999 None!135)))

(declare-fun b!70318 () Bool)

(assert (=> b!70318 (= e!45998 (Some!136 (_2!1062 (h!2050 lt!30331))))))

(declare-fun d!15667 () Bool)

(declare-fun c!10187 () Bool)

(assert (=> d!15667 (= c!10187 (and ((_ is Cons!1465) lt!30331) (= (_1!1062 (h!2050 lt!30331)) (_1!1062 (tuple2!2103 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> d!15667 (= (getValueByKey!131 lt!30331 (_1!1062 (tuple2!2103 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))) e!45998)))

(assert (= (and d!15667 c!10187) b!70318))

(assert (= (and d!15667 (not c!10187)) b!70319))

(assert (= (and b!70319 c!10188) b!70320))

(assert (= (and b!70319 (not c!10188)) b!70321))

(declare-fun m!67317 () Bool)

(assert (=> b!70320 m!67317))

(assert (=> d!14967 d!15667))

(declare-fun d!15669 () Bool)

(assert (=> d!15669 (= (getValueByKey!131 lt!30331 (_1!1062 (tuple2!2103 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))) (Some!136 (_2!1062 (tuple2!2103 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun lt!31001 () Unit!1919)

(assert (=> d!15669 (= lt!31001 (choose!386 lt!30331 (_1!1062 (tuple2!2103 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992))))) (_2!1062 (tuple2!2103 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun e!46000 () Bool)

(assert (=> d!15669 e!46000))

(declare-fun res!37619 () Bool)

(assert (=> d!15669 (=> (not res!37619) (not e!46000))))

(assert (=> d!15669 (= res!37619 (isStrictlySorted!290 lt!30331))))

(assert (=> d!15669 (= (lemmaContainsTupThenGetReturnValue!48 lt!30331 (_1!1062 (tuple2!2103 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992))))) (_2!1062 (tuple2!2103 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))) lt!31001)))

(declare-fun b!70322 () Bool)

(declare-fun res!37620 () Bool)

(assert (=> b!70322 (=> (not res!37620) (not e!46000))))

(assert (=> b!70322 (= res!37620 (containsKey!135 lt!30331 (_1!1062 (tuple2!2103 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!70323 () Bool)

(assert (=> b!70323 (= e!46000 (contains!716 lt!30331 (tuple2!2103 (_1!1062 (tuple2!2103 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992))))) (_2!1062 (tuple2!2103 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(assert (= (and d!15669 res!37619) b!70322))

(assert (= (and b!70322 res!37620) b!70323))

(assert (=> d!15669 m!65253))

(declare-fun m!67319 () Bool)

(assert (=> d!15669 m!67319))

(declare-fun m!67321 () Bool)

(assert (=> d!15669 m!67321))

(declare-fun m!67323 () Bool)

(assert (=> b!70322 m!67323))

(declare-fun m!67325 () Bool)

(assert (=> b!70323 m!67325))

(assert (=> d!14967 d!15669))

(declare-fun b!70324 () Bool)

(declare-fun e!46003 () List!1469)

(assert (=> b!70324 (= e!46003 (insertStrictlySorted!51 (t!4972 (toList!719 lt!29984)) (_1!1062 (tuple2!2103 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992))))) (_2!1062 (tuple2!2103 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun d!15671 () Bool)

(declare-fun e!46001 () Bool)

(assert (=> d!15671 e!46001))

(declare-fun res!37622 () Bool)

(assert (=> d!15671 (=> (not res!37622) (not e!46001))))

(declare-fun lt!31002 () List!1469)

(assert (=> d!15671 (= res!37622 (isStrictlySorted!290 lt!31002))))

(declare-fun e!46005 () List!1469)

(assert (=> d!15671 (= lt!31002 e!46005)))

(declare-fun c!10189 () Bool)

(assert (=> d!15671 (= c!10189 (and ((_ is Cons!1465) (toList!719 lt!29984)) (bvslt (_1!1062 (h!2050 (toList!719 lt!29984))) (_1!1062 (tuple2!2103 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> d!15671 (isStrictlySorted!290 (toList!719 lt!29984))))

(assert (=> d!15671 (= (insertStrictlySorted!51 (toList!719 lt!29984) (_1!1062 (tuple2!2103 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992))))) (_2!1062 (tuple2!2103 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))) lt!31002)))

(declare-fun c!10191 () Bool)

(declare-fun c!10192 () Bool)

(declare-fun b!70325 () Bool)

(assert (=> b!70325 (= e!46003 (ite c!10192 (t!4972 (toList!719 lt!29984)) (ite c!10191 (Cons!1465 (h!2050 (toList!719 lt!29984)) (t!4972 (toList!719 lt!29984))) Nil!1466)))))

(declare-fun bm!6041 () Bool)

(declare-fun call!6046 () List!1469)

(declare-fun call!6045 () List!1469)

(assert (=> bm!6041 (= call!6046 call!6045)))

(declare-fun b!70326 () Bool)

(declare-fun e!46004 () List!1469)

(assert (=> b!70326 (= e!46004 call!6046)))

(declare-fun bm!6042 () Bool)

(declare-fun call!6044 () List!1469)

(assert (=> bm!6042 (= call!6045 call!6044)))

(declare-fun bm!6043 () Bool)

(assert (=> bm!6043 (= call!6044 ($colon$colon!64 e!46003 (ite c!10189 (h!2050 (toList!719 lt!29984)) (tuple2!2103 (_1!1062 (tuple2!2103 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992))))) (_2!1062 (tuple2!2103 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))))

(declare-fun c!10190 () Bool)

(assert (=> bm!6043 (= c!10190 c!10189)))

(declare-fun b!70327 () Bool)

(declare-fun e!46002 () List!1469)

(assert (=> b!70327 (= e!46005 e!46002)))

(assert (=> b!70327 (= c!10192 (and ((_ is Cons!1465) (toList!719 lt!29984)) (= (_1!1062 (h!2050 (toList!719 lt!29984))) (_1!1062 (tuple2!2103 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(declare-fun b!70328 () Bool)

(assert (=> b!70328 (= e!46001 (contains!716 lt!31002 (tuple2!2103 (_1!1062 (tuple2!2103 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992))))) (_2!1062 (tuple2!2103 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(declare-fun b!70329 () Bool)

(assert (=> b!70329 (= e!46005 call!6044)))

(declare-fun b!70330 () Bool)

(assert (=> b!70330 (= e!46004 call!6046)))

(declare-fun b!70331 () Bool)

(declare-fun res!37621 () Bool)

(assert (=> b!70331 (=> (not res!37621) (not e!46001))))

(assert (=> b!70331 (= res!37621 (containsKey!135 lt!31002 (_1!1062 (tuple2!2103 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!70332 () Bool)

(assert (=> b!70332 (= e!46002 call!6045)))

(declare-fun b!70333 () Bool)

(assert (=> b!70333 (= c!10191 (and ((_ is Cons!1465) (toList!719 lt!29984)) (bvsgt (_1!1062 (h!2050 (toList!719 lt!29984))) (_1!1062 (tuple2!2103 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> b!70333 (= e!46002 e!46004)))

(assert (= (and d!15671 c!10189) b!70329))

(assert (= (and d!15671 (not c!10189)) b!70327))

(assert (= (and b!70327 c!10192) b!70332))

(assert (= (and b!70327 (not c!10192)) b!70333))

(assert (= (and b!70333 c!10191) b!70326))

(assert (= (and b!70333 (not c!10191)) b!70330))

(assert (= (or b!70326 b!70330) bm!6041))

(assert (= (or b!70332 bm!6041) bm!6042))

(assert (= (or b!70329 bm!6042) bm!6043))

(assert (= (and bm!6043 c!10190) b!70324))

(assert (= (and bm!6043 (not c!10190)) b!70325))

(assert (= (and d!15671 res!37622) b!70331))

(assert (= (and b!70331 res!37621) b!70328))

(declare-fun m!67327 () Bool)

(assert (=> b!70328 m!67327))

(declare-fun m!67329 () Bool)

(assert (=> d!15671 m!67329))

(declare-fun m!67331 () Bool)

(assert (=> d!15671 m!67331))

(declare-fun m!67333 () Bool)

(assert (=> b!70324 m!67333))

(declare-fun m!67335 () Bool)

(assert (=> bm!6043 m!67335))

(declare-fun m!67337 () Bool)

(assert (=> b!70331 m!67337))

(assert (=> d!14967 d!15671))

(declare-fun d!15673 () Bool)

(declare-fun c!10193 () Bool)

(assert (=> d!15673 (= c!10193 ((_ is Nil!1466) (toList!719 lt!30045)))))

(declare-fun e!46006 () (InoxSet tuple2!2102))

(assert (=> d!15673 (= (content!73 (toList!719 lt!30045)) e!46006)))

(declare-fun b!70334 () Bool)

(assert (=> b!70334 (= e!46006 ((as const (Array tuple2!2102 Bool)) false))))

(declare-fun b!70335 () Bool)

(assert (=> b!70335 (= e!46006 ((_ map or) (store ((as const (Array tuple2!2102 Bool)) false) (h!2050 (toList!719 lt!30045)) true) (content!73 (t!4972 (toList!719 lt!30045)))))))

(assert (= (and d!15673 c!10193) b!70334))

(assert (= (and d!15673 (not c!10193)) b!70335))

(declare-fun m!67339 () Bool)

(assert (=> b!70335 m!67339))

(declare-fun m!67341 () Bool)

(assert (=> b!70335 m!67341))

(assert (=> d!14823 d!15673))

(declare-fun d!15675 () Bool)

(declare-fun res!37623 () Bool)

(declare-fun e!46007 () Bool)

(assert (=> d!15675 (=> res!37623 e!46007)))

(assert (=> d!15675 (= res!37623 (and ((_ is Cons!1465) (toList!719 call!5856)) (= (_1!1062 (h!2050 (toList!719 call!5856))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355))))))

(assert (=> d!15675 (= (containsKey!135 (toList!719 call!5856) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) e!46007)))

(declare-fun b!70336 () Bool)

(declare-fun e!46008 () Bool)

(assert (=> b!70336 (= e!46007 e!46008)))

(declare-fun res!37624 () Bool)

(assert (=> b!70336 (=> (not res!37624) (not e!46008))))

(assert (=> b!70336 (= res!37624 (and (or (not ((_ is Cons!1465) (toList!719 call!5856))) (bvsle (_1!1062 (h!2050 (toList!719 call!5856))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355))) ((_ is Cons!1465) (toList!719 call!5856)) (bvslt (_1!1062 (h!2050 (toList!719 call!5856))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355))))))

(declare-fun b!70337 () Bool)

(assert (=> b!70337 (= e!46008 (containsKey!135 (t!4972 (toList!719 call!5856)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(assert (= (and d!15675 (not res!37623)) b!70336))

(assert (= (and b!70336 res!37624) b!70337))

(assert (=> b!70337 m!64407))

(declare-fun m!67343 () Bool)

(assert (=> b!70337 m!67343))

(assert (=> d!14941 d!15675))

(declare-fun d!15677 () Bool)

(assert (=> d!15677 (contains!714 (getCurrentListMap!417 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355))))

(declare-fun lt!31005 () Unit!1919)

(declare-fun choose!394 (array!3855 array!3857 (_ BitVec 32) (_ BitVec 32) V!2923 V!2923 (_ BitVec 64) (_ BitVec 32) Int) Unit!1919)

(assert (=> d!15677 (= lt!31005 (choose!394 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(assert (=> d!15677 (validMask!0 (mask!6113 newMap!16))))

(assert (=> d!15677 (= (lemmaArrayContainsKeyThenInListMap!11 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) lt!31005)))

(declare-fun bs!3033 () Bool)

(assert (= bs!3033 d!15677))

(assert (=> bs!3033 m!64511))

(assert (=> bs!3033 m!64511))

(assert (=> bs!3033 m!64407))

(assert (=> bs!3033 m!64717))

(assert (=> bs!3033 m!64407))

(declare-fun m!67345 () Bool)

(assert (=> bs!3033 m!67345))

(assert (=> bs!3033 m!64759))

(assert (=> b!69301 d!15677))

(assert (=> b!69301 d!14851))

(assert (=> b!69301 d!14843))

(declare-fun d!15679 () Bool)

(declare-fun lt!31006 () Bool)

(assert (=> d!15679 (= lt!31006 (select (content!73 (t!4972 (toList!719 lt!30045))) lt!29892))))

(declare-fun e!46010 () Bool)

(assert (=> d!15679 (= lt!31006 e!46010)))

(declare-fun res!37625 () Bool)

(assert (=> d!15679 (=> (not res!37625) (not e!46010))))

(assert (=> d!15679 (= res!37625 ((_ is Cons!1465) (t!4972 (toList!719 lt!30045))))))

(assert (=> d!15679 (= (contains!716 (t!4972 (toList!719 lt!30045)) lt!29892) lt!31006)))

(declare-fun b!70338 () Bool)

(declare-fun e!46009 () Bool)

(assert (=> b!70338 (= e!46010 e!46009)))

(declare-fun res!37626 () Bool)

(assert (=> b!70338 (=> res!37626 e!46009)))

(assert (=> b!70338 (= res!37626 (= (h!2050 (t!4972 (toList!719 lt!30045))) lt!29892))))

(declare-fun b!70339 () Bool)

(assert (=> b!70339 (= e!46009 (contains!716 (t!4972 (t!4972 (toList!719 lt!30045))) lt!29892))))

(assert (= (and d!15679 res!37625) b!70338))

(assert (= (and b!70338 (not res!37626)) b!70339))

(assert (=> d!15679 m!67341))

(declare-fun m!67347 () Bool)

(assert (=> d!15679 m!67347))

(declare-fun m!67349 () Bool)

(assert (=> b!70339 m!67349))

(assert (=> b!68846 d!15679))

(declare-fun d!15681 () Bool)

(declare-fun e!46011 () Bool)

(assert (=> d!15681 e!46011))

(declare-fun res!37628 () Bool)

(assert (=> d!15681 (=> (not res!37628) (not e!46011))))

(declare-fun lt!31009 () ListLongMap!1407)

(assert (=> d!15681 (= res!37628 (contains!714 lt!31009 (_1!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))))))

(declare-fun lt!31010 () List!1469)

(assert (=> d!15681 (= lt!31009 (ListLongMap!1408 lt!31010))))

(declare-fun lt!31007 () Unit!1919)

(declare-fun lt!31008 () Unit!1919)

(assert (=> d!15681 (= lt!31007 lt!31008)))

(assert (=> d!15681 (= (getValueByKey!131 lt!31010 (_1!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))) (Some!136 (_2!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))))))

(assert (=> d!15681 (= lt!31008 (lemmaContainsTupThenGetReturnValue!48 lt!31010 (_1!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))) (_2!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))))))

(assert (=> d!15681 (= lt!31010 (insertStrictlySorted!51 (toList!719 call!5919) (_1!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))) (_2!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))))))

(assert (=> d!15681 (= (+!90 call!5919 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))) lt!31009)))

(declare-fun b!70340 () Bool)

(declare-fun res!37627 () Bool)

(assert (=> b!70340 (=> (not res!37627) (not e!46011))))

(assert (=> b!70340 (= res!37627 (= (getValueByKey!131 (toList!719 lt!31009) (_1!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))) (Some!136 (_2!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))))))))

(declare-fun b!70341 () Bool)

(assert (=> b!70341 (= e!46011 (contains!716 (toList!719 lt!31009) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))))))

(assert (= (and d!15681 res!37628) b!70340))

(assert (= (and b!70340 res!37627) b!70341))

(declare-fun m!67351 () Bool)

(assert (=> d!15681 m!67351))

(declare-fun m!67353 () Bool)

(assert (=> d!15681 m!67353))

(declare-fun m!67355 () Bool)

(assert (=> d!15681 m!67355))

(declare-fun m!67357 () Bool)

(assert (=> d!15681 m!67357))

(declare-fun m!67359 () Bool)

(assert (=> b!70340 m!67359))

(declare-fun m!67361 () Bool)

(assert (=> b!70341 m!67361))

(assert (=> b!69243 d!15681))

(declare-fun d!15683 () Bool)

(assert (not d!15683))

(assert (=> b!69124 d!15683))

(declare-fun d!15685 () Bool)

(assert (=> d!15685 (= (get!1126 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!68945 d!15685))

(declare-fun d!15687 () Bool)

(declare-fun lt!31011 () Bool)

(assert (=> d!15687 (= lt!31011 (select (content!73 lt!30275) (tuple2!2103 (_1!1062 lt!29893) (_2!1062 lt!29893))))))

(declare-fun e!46013 () Bool)

(assert (=> d!15687 (= lt!31011 e!46013)))

(declare-fun res!37629 () Bool)

(assert (=> d!15687 (=> (not res!37629) (not e!46013))))

(assert (=> d!15687 (= res!37629 ((_ is Cons!1465) lt!30275))))

(assert (=> d!15687 (= (contains!716 lt!30275 (tuple2!2103 (_1!1062 lt!29893) (_2!1062 lt!29893))) lt!31011)))

(declare-fun b!70342 () Bool)

(declare-fun e!46012 () Bool)

(assert (=> b!70342 (= e!46013 e!46012)))

(declare-fun res!37630 () Bool)

(assert (=> b!70342 (=> res!37630 e!46012)))

(assert (=> b!70342 (= res!37630 (= (h!2050 lt!30275) (tuple2!2103 (_1!1062 lt!29893) (_2!1062 lt!29893))))))

(declare-fun b!70343 () Bool)

(assert (=> b!70343 (= e!46012 (contains!716 (t!4972 lt!30275) (tuple2!2103 (_1!1062 lt!29893) (_2!1062 lt!29893))))))

(assert (= (and d!15687 res!37629) b!70342))

(assert (= (and b!70342 (not res!37630)) b!70343))

(declare-fun m!67363 () Bool)

(assert (=> d!15687 m!67363))

(declare-fun m!67365 () Bool)

(assert (=> d!15687 m!67365))

(declare-fun m!67367 () Bool)

(assert (=> b!70343 m!67367))

(assert (=> b!69074 d!15687))

(declare-fun d!15689 () Bool)

(assert (=> d!15689 (isDefined!84 (getValueByKey!131 (toList!719 (getCurrentListMap!417 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(declare-fun lt!31012 () Unit!1919)

(assert (=> d!15689 (= lt!31012 (choose!387 (toList!719 (getCurrentListMap!417 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(declare-fun e!46014 () Bool)

(assert (=> d!15689 e!46014))

(declare-fun res!37631 () Bool)

(assert (=> d!15689 (=> (not res!37631) (not e!46014))))

(assert (=> d!15689 (= res!37631 (isStrictlySorted!290 (toList!719 (getCurrentListMap!417 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))))

(assert (=> d!15689 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 (getCurrentListMap!417 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) lt!31012)))

(declare-fun b!70344 () Bool)

(assert (=> b!70344 (= e!46014 (containsKey!135 (toList!719 (getCurrentListMap!417 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(assert (= (and d!15689 res!37631) b!70344))

(assert (=> d!15689 m!64407))

(assert (=> d!15689 m!64867))

(assert (=> d!15689 m!64867))

(assert (=> d!15689 m!64869))

(assert (=> d!15689 m!64407))

(declare-fun m!67369 () Bool)

(assert (=> d!15689 m!67369))

(declare-fun m!67371 () Bool)

(assert (=> d!15689 m!67371))

(assert (=> b!70344 m!64407))

(assert (=> b!70344 m!64863))

(assert (=> b!68917 d!15689))

(assert (=> b!68917 d!15465))

(assert (=> b!68917 d!15467))

(assert (=> b!69168 d!15073))

(assert (=> b!69168 d!15075))

(declare-fun d!15691 () Bool)

(assert (=> d!15691 (= (+!90 (getCurrentListMap!417 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897)) (getCurrentListMap!417 (_keys!3812 newMap!16) (array!3858 (store (arr!1842 (_values!2151 newMap!16)) (index!3066 lt!30149) (ValueCellFull!885 lt!29897)) (size!2078 (_values!2151 newMap!16))) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(assert (=> d!15691 true))

(declare-fun _$5!74 () Unit!1919)

(assert (=> d!15691 (= (choose!383 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) (index!3066 lt!30149) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355) lt!29897 (defaultEntry!2168 newMap!16)) _$5!74)))

(declare-fun bs!3034 () Bool)

(assert (= bs!3034 d!15691))

(assert (=> bs!3034 m!64511))

(assert (=> bs!3034 m!64511))

(assert (=> bs!3034 m!64859))

(assert (=> bs!3034 m!64703))

(assert (=> bs!3034 m!64861))

(assert (=> d!14849 d!15691))

(assert (=> d!14849 d!15083))

(assert (=> b!68916 d!15129))

(assert (=> b!68916 d!14843))

(declare-fun b!70345 () Bool)

(declare-fun e!46021 () Bool)

(declare-fun lt!31030 () ListLongMap!1407)

(assert (=> b!70345 (= e!46021 (= (apply!73 lt!31030 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)) (get!1124 (select (arr!1842 (array!3858 (store (arr!1842 (_values!2151 newMap!16)) (index!3066 lt!30149) (ValueCellFull!885 lt!29897)) (size!2078 (_values!2151 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!322 (defaultEntry!2168 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!70345 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2078 (array!3858 (store (arr!1842 (_values!2151 newMap!16)) (index!3066 lt!30149) (ValueCellFull!885 lt!29897)) (size!2078 (_values!2151 newMap!16))))))))

(assert (=> b!70345 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))))))

(declare-fun b!70346 () Bool)

(declare-fun e!46027 () Unit!1919)

(declare-fun lt!31029 () Unit!1919)

(assert (=> b!70346 (= e!46027 lt!31029)))

(declare-fun lt!31022 () ListLongMap!1407)

(assert (=> b!70346 (= lt!31022 (getCurrentListMapNoExtraKeys!55 (_keys!3812 newMap!16) (array!3858 (store (arr!1842 (_values!2151 newMap!16)) (index!3066 lt!30149) (ValueCellFull!885 lt!29897)) (size!2078 (_values!2151 newMap!16))) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!31025 () (_ BitVec 64))

(assert (=> b!70346 (= lt!31025 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31013 () (_ BitVec 64))

(assert (=> b!70346 (= lt!31013 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!31027 () Unit!1919)

(assert (=> b!70346 (= lt!31027 (addStillContains!49 lt!31022 lt!31025 (zeroValue!2074 newMap!16) lt!31013))))

(assert (=> b!70346 (contains!714 (+!90 lt!31022 (tuple2!2103 lt!31025 (zeroValue!2074 newMap!16))) lt!31013)))

(declare-fun lt!31023 () Unit!1919)

(assert (=> b!70346 (= lt!31023 lt!31027)))

(declare-fun lt!31015 () ListLongMap!1407)

(assert (=> b!70346 (= lt!31015 (getCurrentListMapNoExtraKeys!55 (_keys!3812 newMap!16) (array!3858 (store (arr!1842 (_values!2151 newMap!16)) (index!3066 lt!30149) (ValueCellFull!885 lt!29897)) (size!2078 (_values!2151 newMap!16))) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!31026 () (_ BitVec 64))

(assert (=> b!70346 (= lt!31026 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31017 () (_ BitVec 64))

(assert (=> b!70346 (= lt!31017 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!31014 () Unit!1919)

(assert (=> b!70346 (= lt!31014 (addApplyDifferent!49 lt!31015 lt!31026 (minValue!2074 newMap!16) lt!31017))))

(assert (=> b!70346 (= (apply!73 (+!90 lt!31015 (tuple2!2103 lt!31026 (minValue!2074 newMap!16))) lt!31017) (apply!73 lt!31015 lt!31017))))

(declare-fun lt!31032 () Unit!1919)

(assert (=> b!70346 (= lt!31032 lt!31014)))

(declare-fun lt!31021 () ListLongMap!1407)

(assert (=> b!70346 (= lt!31021 (getCurrentListMapNoExtraKeys!55 (_keys!3812 newMap!16) (array!3858 (store (arr!1842 (_values!2151 newMap!16)) (index!3066 lt!30149) (ValueCellFull!885 lt!29897)) (size!2078 (_values!2151 newMap!16))) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!31016 () (_ BitVec 64))

(assert (=> b!70346 (= lt!31016 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31024 () (_ BitVec 64))

(assert (=> b!70346 (= lt!31024 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!31034 () Unit!1919)

(assert (=> b!70346 (= lt!31034 (addApplyDifferent!49 lt!31021 lt!31016 (zeroValue!2074 newMap!16) lt!31024))))

(assert (=> b!70346 (= (apply!73 (+!90 lt!31021 (tuple2!2103 lt!31016 (zeroValue!2074 newMap!16))) lt!31024) (apply!73 lt!31021 lt!31024))))

(declare-fun lt!31031 () Unit!1919)

(assert (=> b!70346 (= lt!31031 lt!31034)))

(declare-fun lt!31018 () ListLongMap!1407)

(assert (=> b!70346 (= lt!31018 (getCurrentListMapNoExtraKeys!55 (_keys!3812 newMap!16) (array!3858 (store (arr!1842 (_values!2151 newMap!16)) (index!3066 lt!30149) (ValueCellFull!885 lt!29897)) (size!2078 (_values!2151 newMap!16))) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun lt!31033 () (_ BitVec 64))

(assert (=> b!70346 (= lt!31033 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31028 () (_ BitVec 64))

(assert (=> b!70346 (= lt!31028 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!70346 (= lt!31029 (addApplyDifferent!49 lt!31018 lt!31033 (minValue!2074 newMap!16) lt!31028))))

(assert (=> b!70346 (= (apply!73 (+!90 lt!31018 (tuple2!2103 lt!31033 (minValue!2074 newMap!16))) lt!31028) (apply!73 lt!31018 lt!31028))))

(declare-fun b!70347 () Bool)

(declare-fun e!46020 () Bool)

(declare-fun e!46017 () Bool)

(assert (=> b!70347 (= e!46020 e!46017)))

(declare-fun res!37638 () Bool)

(declare-fun call!6048 () Bool)

(assert (=> b!70347 (= res!37638 call!6048)))

(assert (=> b!70347 (=> (not res!37638) (not e!46017))))

(declare-fun d!15693 () Bool)

(declare-fun e!46025 () Bool)

(assert (=> d!15693 e!46025))

(declare-fun res!37634 () Bool)

(assert (=> d!15693 (=> (not res!37634) (not e!46025))))

(assert (=> d!15693 (= res!37634 (or (bvsge #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))))))))

(declare-fun lt!31019 () ListLongMap!1407)

(assert (=> d!15693 (= lt!31030 lt!31019)))

(declare-fun lt!31020 () Unit!1919)

(assert (=> d!15693 (= lt!31020 e!46027)))

(declare-fun c!10199 () Bool)

(declare-fun e!46016 () Bool)

(assert (=> d!15693 (= c!10199 e!46016)))

(declare-fun res!37635 () Bool)

(assert (=> d!15693 (=> (not res!37635) (not e!46016))))

(assert (=> d!15693 (= res!37635 (bvslt #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))))))

(declare-fun e!46026 () ListLongMap!1407)

(assert (=> d!15693 (= lt!31019 e!46026)))

(declare-fun c!10195 () Bool)

(assert (=> d!15693 (= c!10195 (and (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!15693 (validMask!0 (mask!6113 newMap!16))))

(assert (=> d!15693 (= (getCurrentListMap!417 (_keys!3812 newMap!16) (array!3858 (store (arr!1842 (_values!2151 newMap!16)) (index!3066 lt!30149) (ValueCellFull!885 lt!29897)) (size!2078 (_values!2151 newMap!16))) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)) lt!31030)))

(declare-fun bm!6044 () Bool)

(assert (=> bm!6044 (= call!6048 (contains!714 lt!31030 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6045 () Bool)

(declare-fun call!6049 () ListLongMap!1407)

(declare-fun call!6053 () ListLongMap!1407)

(declare-fun call!6047 () ListLongMap!1407)

(declare-fun call!6052 () ListLongMap!1407)

(declare-fun c!10198 () Bool)

(assert (=> bm!6045 (= call!6052 (+!90 (ite c!10195 call!6053 (ite c!10198 call!6047 call!6049)) (ite (or c!10195 c!10198) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 newMap!16)) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))))))

(declare-fun bm!6046 () Bool)

(assert (=> bm!6046 (= call!6053 (getCurrentListMapNoExtraKeys!55 (_keys!3812 newMap!16) (array!3858 (store (arr!1842 (_values!2151 newMap!16)) (index!3066 lt!30149) (ValueCellFull!885 lt!29897)) (size!2078 (_values!2151 newMap!16))) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))))

(declare-fun bm!6047 () Bool)

(assert (=> bm!6047 (= call!6047 call!6053)))

(declare-fun b!70348 () Bool)

(declare-fun e!46023 () ListLongMap!1407)

(assert (=> b!70348 (= e!46023 call!6049)))

(declare-fun b!70349 () Bool)

(declare-fun e!46015 () Bool)

(declare-fun e!46018 () Bool)

(assert (=> b!70349 (= e!46015 e!46018)))

(declare-fun res!37633 () Bool)

(declare-fun call!6051 () Bool)

(assert (=> b!70349 (= res!37633 call!6051)))

(assert (=> b!70349 (=> (not res!37633) (not e!46018))))

(declare-fun b!70350 () Bool)

(declare-fun Unit!1990 () Unit!1919)

(assert (=> b!70350 (= e!46027 Unit!1990)))

(declare-fun b!70351 () Bool)

(assert (=> b!70351 (= e!46016 (validKeyInArray!0 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!70352 () Bool)

(assert (=> b!70352 (= e!46018 (= (apply!73 lt!31030 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2074 newMap!16)))))

(declare-fun b!70353 () Bool)

(assert (=> b!70353 (= e!46017 (= (apply!73 lt!31030 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2074 newMap!16)))))

(declare-fun b!70354 () Bool)

(declare-fun res!37636 () Bool)

(assert (=> b!70354 (=> (not res!37636) (not e!46025))))

(assert (=> b!70354 (= res!37636 e!46015)))

(declare-fun c!10196 () Bool)

(assert (=> b!70354 (= c!10196 (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!70355 () Bool)

(declare-fun e!46019 () ListLongMap!1407)

(assert (=> b!70355 (= e!46026 e!46019)))

(assert (=> b!70355 (= c!10198 (and (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!70356 () Bool)

(assert (=> b!70356 (= e!46025 e!46020)))

(declare-fun c!10194 () Bool)

(assert (=> b!70356 (= c!10194 (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!70357 () Bool)

(assert (=> b!70357 (= e!46026 (+!90 call!6052 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))))))

(declare-fun b!70358 () Bool)

(declare-fun c!10197 () Bool)

(assert (=> b!70358 (= c!10197 (and (not (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2035 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!70358 (= e!46019 e!46023)))

(declare-fun b!70359 () Bool)

(declare-fun e!46024 () Bool)

(assert (=> b!70359 (= e!46024 (validKeyInArray!0 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!70360 () Bool)

(assert (=> b!70360 (= e!46020 (not call!6048))))

(declare-fun b!70361 () Bool)

(declare-fun res!37639 () Bool)

(assert (=> b!70361 (=> (not res!37639) (not e!46025))))

(declare-fun e!46022 () Bool)

(assert (=> b!70361 (= res!37639 e!46022)))

(declare-fun res!37637 () Bool)

(assert (=> b!70361 (=> res!37637 e!46022)))

(assert (=> b!70361 (= res!37637 (not e!46024))))

(declare-fun res!37632 () Bool)

(assert (=> b!70361 (=> (not res!37632) (not e!46024))))

(assert (=> b!70361 (= res!37632 (bvslt #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))))))

(declare-fun b!70362 () Bool)

(declare-fun call!6050 () ListLongMap!1407)

(assert (=> b!70362 (= e!46023 call!6050)))

(declare-fun bm!6048 () Bool)

(assert (=> bm!6048 (= call!6050 call!6052)))

(declare-fun bm!6049 () Bool)

(assert (=> bm!6049 (= call!6049 call!6047)))

(declare-fun b!70363 () Bool)

(assert (=> b!70363 (= e!46019 call!6050)))

(declare-fun b!70364 () Bool)

(assert (=> b!70364 (= e!46022 e!46021)))

(declare-fun res!37640 () Bool)

(assert (=> b!70364 (=> (not res!37640) (not e!46021))))

(assert (=> b!70364 (= res!37640 (contains!714 lt!31030 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!70364 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2077 (_keys!3812 newMap!16))))))

(declare-fun bm!6050 () Bool)

(assert (=> bm!6050 (= call!6051 (contains!714 lt!31030 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!70365 () Bool)

(assert (=> b!70365 (= e!46015 (not call!6051))))

(assert (= (and d!15693 c!10195) b!70357))

(assert (= (and d!15693 (not c!10195)) b!70355))

(assert (= (and b!70355 c!10198) b!70363))

(assert (= (and b!70355 (not c!10198)) b!70358))

(assert (= (and b!70358 c!10197) b!70362))

(assert (= (and b!70358 (not c!10197)) b!70348))

(assert (= (or b!70362 b!70348) bm!6049))

(assert (= (or b!70363 bm!6049) bm!6047))

(assert (= (or b!70363 b!70362) bm!6048))

(assert (= (or b!70357 bm!6047) bm!6046))

(assert (= (or b!70357 bm!6048) bm!6045))

(assert (= (and d!15693 res!37635) b!70351))

(assert (= (and d!15693 c!10199) b!70346))

(assert (= (and d!15693 (not c!10199)) b!70350))

(assert (= (and d!15693 res!37634) b!70361))

(assert (= (and b!70361 res!37632) b!70359))

(assert (= (and b!70361 (not res!37637)) b!70364))

(assert (= (and b!70364 res!37640) b!70345))

(assert (= (and b!70361 res!37639) b!70354))

(assert (= (and b!70354 c!10196) b!70349))

(assert (= (and b!70354 (not c!10196)) b!70365))

(assert (= (and b!70349 res!37633) b!70352))

(assert (= (or b!70349 b!70365) bm!6050))

(assert (= (and b!70354 res!37636) b!70356))

(assert (= (and b!70356 c!10194) b!70347))

(assert (= (and b!70356 (not c!10194)) b!70360))

(assert (= (and b!70347 res!37638) b!70353))

(assert (= (or b!70347 b!70360) bm!6044))

(declare-fun b_lambda!3139 () Bool)

(assert (=> (not b_lambda!3139) (not b!70345)))

(assert (=> b!70345 t!4980))

(declare-fun b_and!4323 () Bool)

(assert (= b_and!4319 (and (=> t!4980 result!2619) b_and!4323)))

(assert (=> b!70345 t!4982))

(declare-fun b_and!4325 () Bool)

(assert (= b_and!4321 (and (=> t!4982 result!2621) b_and!4325)))

(declare-fun m!67373 () Bool)

(assert (=> bm!6050 m!67373))

(declare-fun m!67375 () Bool)

(assert (=> bm!6045 m!67375))

(declare-fun m!67377 () Bool)

(assert (=> b!70357 m!67377))

(declare-fun m!67379 () Bool)

(assert (=> bm!6044 m!67379))

(assert (=> b!70351 m!64775))

(assert (=> b!70351 m!64775))

(assert (=> b!70351 m!64777))

(assert (=> b!70364 m!64775))

(assert (=> b!70364 m!64775))

(declare-fun m!67381 () Bool)

(assert (=> b!70364 m!67381))

(declare-fun m!67383 () Bool)

(assert (=> b!70352 m!67383))

(declare-fun m!67385 () Bool)

(assert (=> b!70353 m!67385))

(assert (=> b!70345 m!64807))

(declare-fun m!67387 () Bool)

(assert (=> b!70345 m!67387))

(assert (=> b!70345 m!64807))

(declare-fun m!67389 () Bool)

(assert (=> b!70345 m!67389))

(assert (=> b!70345 m!67387))

(assert (=> b!70345 m!64775))

(declare-fun m!67391 () Bool)

(assert (=> b!70345 m!67391))

(assert (=> b!70345 m!64775))

(assert (=> d!15693 m!64759))

(declare-fun m!67393 () Bool)

(assert (=> bm!6046 m!67393))

(assert (=> b!70359 m!64775))

(assert (=> b!70359 m!64775))

(assert (=> b!70359 m!64777))

(declare-fun m!67395 () Bool)

(assert (=> b!70346 m!67395))

(declare-fun m!67397 () Bool)

(assert (=> b!70346 m!67397))

(declare-fun m!67399 () Bool)

(assert (=> b!70346 m!67399))

(declare-fun m!67401 () Bool)

(assert (=> b!70346 m!67401))

(declare-fun m!67403 () Bool)

(assert (=> b!70346 m!67403))

(declare-fun m!67405 () Bool)

(assert (=> b!70346 m!67405))

(declare-fun m!67407 () Bool)

(assert (=> b!70346 m!67407))

(declare-fun m!67409 () Bool)

(assert (=> b!70346 m!67409))

(assert (=> b!70346 m!67403))

(declare-fun m!67411 () Bool)

(assert (=> b!70346 m!67411))

(assert (=> b!70346 m!64775))

(declare-fun m!67413 () Bool)

(assert (=> b!70346 m!67413))

(declare-fun m!67415 () Bool)

(assert (=> b!70346 m!67415))

(declare-fun m!67417 () Bool)

(assert (=> b!70346 m!67417))

(assert (=> b!70346 m!67405))

(declare-fun m!67419 () Bool)

(assert (=> b!70346 m!67419))

(assert (=> b!70346 m!67413))

(assert (=> b!70346 m!67397))

(declare-fun m!67421 () Bool)

(assert (=> b!70346 m!67421))

(assert (=> b!70346 m!67393))

(declare-fun m!67423 () Bool)

(assert (=> b!70346 m!67423))

(assert (=> b!68916 d!15693))

(declare-fun d!15695 () Bool)

(declare-fun res!37641 () Bool)

(declare-fun e!46028 () Bool)

(assert (=> d!15695 (=> res!37641 e!46028)))

(assert (=> d!15695 (= res!37641 (and ((_ is Cons!1465) (toList!719 lt!29996)) (= (_1!1062 (h!2050 (toList!719 lt!29996))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!15695 (= (containsKey!135 (toList!719 lt!29996) #b1000000000000000000000000000000000000000000000000000000000000000) e!46028)))

(declare-fun b!70366 () Bool)

(declare-fun e!46029 () Bool)

(assert (=> b!70366 (= e!46028 e!46029)))

(declare-fun res!37642 () Bool)

(assert (=> b!70366 (=> (not res!37642) (not e!46029))))

(assert (=> b!70366 (= res!37642 (and (or (not ((_ is Cons!1465) (toList!719 lt!29996))) (bvsle (_1!1062 (h!2050 (toList!719 lt!29996))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1465) (toList!719 lt!29996)) (bvslt (_1!1062 (h!2050 (toList!719 lt!29996))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!70367 () Bool)

(assert (=> b!70367 (= e!46029 (containsKey!135 (t!4972 (toList!719 lt!29996)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!15695 (not res!37641)) b!70366))

(assert (= (and b!70366 res!37642) b!70367))

(declare-fun m!67425 () Bool)

(assert (=> b!70367 m!67425))

(assert (=> d!15011 d!15695))

(declare-fun b!70368 () Bool)

(declare-fun e!46033 () Bool)

(declare-fun e!46032 () Bool)

(assert (=> b!70368 (= e!46033 e!46032)))

(declare-fun c!10200 () Bool)

(assert (=> b!70368 (= c!10200 (validKeyInArray!0 (select (arr!1841 (_keys!3812 (_2!1061 lt!30148))) #b00000000000000000000000000000000)))))

(declare-fun b!70369 () Bool)

(declare-fun call!6054 () Bool)

(assert (=> b!70369 (= e!46032 call!6054)))

(declare-fun b!70370 () Bool)

(declare-fun e!46030 () Bool)

(assert (=> b!70370 (= e!46030 e!46033)))

(declare-fun res!37645 () Bool)

(assert (=> b!70370 (=> (not res!37645) (not e!46033))))

(declare-fun e!46031 () Bool)

(assert (=> b!70370 (= res!37645 (not e!46031))))

(declare-fun res!37643 () Bool)

(assert (=> b!70370 (=> (not res!37643) (not e!46031))))

(assert (=> b!70370 (= res!37643 (validKeyInArray!0 (select (arr!1841 (_keys!3812 (_2!1061 lt!30148))) #b00000000000000000000000000000000)))))

(declare-fun d!15697 () Bool)

(declare-fun res!37644 () Bool)

(assert (=> d!15697 (=> res!37644 e!46030)))

(assert (=> d!15697 (= res!37644 (bvsge #b00000000000000000000000000000000 (size!2077 (_keys!3812 (_2!1061 lt!30148)))))))

(assert (=> d!15697 (= (arrayNoDuplicates!0 (_keys!3812 (_2!1061 lt!30148)) #b00000000000000000000000000000000 Nil!1467) e!46030)))

(declare-fun b!70371 () Bool)

(assert (=> b!70371 (= e!46032 call!6054)))

(declare-fun b!70372 () Bool)

(assert (=> b!70372 (= e!46031 (contains!715 Nil!1467 (select (arr!1841 (_keys!3812 (_2!1061 lt!30148))) #b00000000000000000000000000000000)))))

(declare-fun bm!6051 () Bool)

(assert (=> bm!6051 (= call!6054 (arrayNoDuplicates!0 (_keys!3812 (_2!1061 lt!30148)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!10200 (Cons!1466 (select (arr!1841 (_keys!3812 (_2!1061 lt!30148))) #b00000000000000000000000000000000) Nil!1467) Nil!1467)))))

(assert (= (and d!15697 (not res!37644)) b!70370))

(assert (= (and b!70370 res!37643) b!70372))

(assert (= (and b!70370 res!37645) b!70368))

(assert (= (and b!70368 c!10200) b!70369))

(assert (= (and b!70368 (not c!10200)) b!70371))

(assert (= (or b!70369 b!70371) bm!6051))

(assert (=> b!70368 m!65967))

(assert (=> b!70368 m!65967))

(assert (=> b!70368 m!65969))

(assert (=> b!70370 m!65967))

(assert (=> b!70370 m!65967))

(assert (=> b!70370 m!65969))

(assert (=> b!70372 m!65967))

(assert (=> b!70372 m!65967))

(declare-fun m!67427 () Bool)

(assert (=> b!70372 m!67427))

(assert (=> bm!6051 m!65967))

(declare-fun m!67429 () Bool)

(assert (=> bm!6051 m!67429))

(assert (=> b!69145 d!15697))

(assert (=> b!69086 d!15145))

(declare-fun b!70375 () Bool)

(declare-fun e!46035 () Option!137)

(assert (=> b!70375 (= e!46035 (getValueByKey!131 (t!4972 (toList!719 lt!30330)) (_1!1062 (tuple2!2103 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!70374 () Bool)

(declare-fun e!46034 () Option!137)

(assert (=> b!70374 (= e!46034 e!46035)))

(declare-fun c!10202 () Bool)

(assert (=> b!70374 (= c!10202 (and ((_ is Cons!1465) (toList!719 lt!30330)) (not (= (_1!1062 (h!2050 (toList!719 lt!30330))) (_1!1062 (tuple2!2103 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))))))

(declare-fun b!70376 () Bool)

(assert (=> b!70376 (= e!46035 None!135)))

(declare-fun b!70373 () Bool)

(assert (=> b!70373 (= e!46034 (Some!136 (_2!1062 (h!2050 (toList!719 lt!30330)))))))

(declare-fun d!15699 () Bool)

(declare-fun c!10201 () Bool)

(assert (=> d!15699 (= c!10201 (and ((_ is Cons!1465) (toList!719 lt!30330)) (= (_1!1062 (h!2050 (toList!719 lt!30330))) (_1!1062 (tuple2!2103 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> d!15699 (= (getValueByKey!131 (toList!719 lt!30330) (_1!1062 (tuple2!2103 lt!29999 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))) e!46034)))

(assert (= (and d!15699 c!10201) b!70373))

(assert (= (and d!15699 (not c!10201)) b!70374))

(assert (= (and b!70374 c!10202) b!70375))

(assert (= (and b!70374 (not c!10202)) b!70376))

(declare-fun m!67431 () Bool)

(assert (=> b!70375 m!67431))

(assert (=> b!69158 d!15699))

(assert (=> b!69063 d!15091))

(assert (=> b!69063 d!14947))

(declare-fun b!70379 () Bool)

(declare-fun e!46037 () Option!137)

(assert (=> b!70379 (= e!46037 (getValueByKey!131 (t!4972 (t!4972 (toList!719 lt!30045))) (_1!1062 lt!29892)))))

(declare-fun b!70378 () Bool)

(declare-fun e!46036 () Option!137)

(assert (=> b!70378 (= e!46036 e!46037)))

(declare-fun c!10204 () Bool)

(assert (=> b!70378 (= c!10204 (and ((_ is Cons!1465) (t!4972 (toList!719 lt!30045))) (not (= (_1!1062 (h!2050 (t!4972 (toList!719 lt!30045)))) (_1!1062 lt!29892)))))))

(declare-fun b!70380 () Bool)

(assert (=> b!70380 (= e!46037 None!135)))

(declare-fun b!70377 () Bool)

(assert (=> b!70377 (= e!46036 (Some!136 (_2!1062 (h!2050 (t!4972 (toList!719 lt!30045))))))))

(declare-fun d!15701 () Bool)

(declare-fun c!10203 () Bool)

(assert (=> d!15701 (= c!10203 (and ((_ is Cons!1465) (t!4972 (toList!719 lt!30045))) (= (_1!1062 (h!2050 (t!4972 (toList!719 lt!30045)))) (_1!1062 lt!29892))))))

(assert (=> d!15701 (= (getValueByKey!131 (t!4972 (toList!719 lt!30045)) (_1!1062 lt!29892)) e!46036)))

(assert (= (and d!15701 c!10203) b!70377))

(assert (= (and d!15701 (not c!10203)) b!70378))

(assert (= (and b!70378 c!10204) b!70379))

(assert (= (and b!70378 (not c!10204)) b!70380))

(declare-fun m!67433 () Bool)

(assert (=> b!70379 m!67433))

(assert (=> b!69103 d!15701))

(assert (=> d!14825 d!14787))

(declare-fun d!15703 () Bool)

(assert (=> d!15703 (= (apply!73 lt!30183 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)) (get!1127 (getValueByKey!131 (toList!719 lt!30183) (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3035 () Bool)

(assert (= bs!3035 d!15703))

(assert (=> bs!3035 m!64775))

(declare-fun m!67435 () Bool)

(assert (=> bs!3035 m!67435))

(assert (=> bs!3035 m!67435))

(declare-fun m!67437 () Bool)

(assert (=> bs!3035 m!67437))

(assert (=> b!68888 d!15703))

(declare-fun d!15705 () Bool)

(declare-fun c!10205 () Bool)

(assert (=> d!15705 (= c!10205 ((_ is ValueCellFull!885) (select (arr!1842 (_values!2151 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!46038 () V!2923)

(assert (=> d!15705 (= (get!1124 (select (arr!1842 (_values!2151 newMap!16)) #b00000000000000000000000000000000) (dynLambda!322 (defaultEntry!2168 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!46038)))

(declare-fun b!70381 () Bool)

(assert (=> b!70381 (= e!46038 (get!1125 (select (arr!1842 (_values!2151 newMap!16)) #b00000000000000000000000000000000) (dynLambda!322 (defaultEntry!2168 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!70382 () Bool)

(assert (=> b!70382 (= e!46038 (get!1126 (select (arr!1842 (_values!2151 newMap!16)) #b00000000000000000000000000000000) (dynLambda!322 (defaultEntry!2168 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15705 c!10205) b!70381))

(assert (= (and d!15705 (not c!10205)) b!70382))

(assert (=> b!70381 m!64809))

(assert (=> b!70381 m!64807))

(declare-fun m!67439 () Bool)

(assert (=> b!70381 m!67439))

(assert (=> b!70382 m!64809))

(assert (=> b!70382 m!64807))

(declare-fun m!67441 () Bool)

(assert (=> b!70382 m!67441))

(assert (=> b!68888 d!15705))

(assert (=> b!69116 d!15145))

(declare-fun d!15707 () Bool)

(declare-fun res!37646 () Bool)

(declare-fun e!46039 () Bool)

(assert (=> d!15707 (=> res!37646 e!46039)))

(assert (=> d!15707 (= res!37646 (and ((_ is Cons!1465) lt!30057) (= (_1!1062 (h!2050 lt!30057)) (_1!1062 lt!29893))))))

(assert (=> d!15707 (= (containsKey!135 lt!30057 (_1!1062 lt!29893)) e!46039)))

(declare-fun b!70383 () Bool)

(declare-fun e!46040 () Bool)

(assert (=> b!70383 (= e!46039 e!46040)))

(declare-fun res!37647 () Bool)

(assert (=> b!70383 (=> (not res!37647) (not e!46040))))

(assert (=> b!70383 (= res!37647 (and (or (not ((_ is Cons!1465) lt!30057)) (bvsle (_1!1062 (h!2050 lt!30057)) (_1!1062 lt!29893))) ((_ is Cons!1465) lt!30057) (bvslt (_1!1062 (h!2050 lt!30057)) (_1!1062 lt!29893))))))

(declare-fun b!70384 () Bool)

(assert (=> b!70384 (= e!46040 (containsKey!135 (t!4972 lt!30057) (_1!1062 lt!29893)))))

(assert (= (and d!15707 (not res!37646)) b!70383))

(assert (= (and b!70383 res!37647) b!70384))

(declare-fun m!67443 () Bool)

(assert (=> b!70384 m!67443))

(assert (=> b!69068 d!15707))

(declare-fun b!70387 () Bool)

(declare-fun e!46042 () Option!137)

(assert (=> b!70387 (= e!46042 (getValueByKey!131 (t!4972 (t!4972 lt!30046)) (_1!1062 lt!29892)))))

(declare-fun b!70386 () Bool)

(declare-fun e!46041 () Option!137)

(assert (=> b!70386 (= e!46041 e!46042)))

(declare-fun c!10207 () Bool)

(assert (=> b!70386 (= c!10207 (and ((_ is Cons!1465) (t!4972 lt!30046)) (not (= (_1!1062 (h!2050 (t!4972 lt!30046))) (_1!1062 lt!29892)))))))

(declare-fun b!70388 () Bool)

(assert (=> b!70388 (= e!46042 None!135)))

(declare-fun b!70385 () Bool)

(assert (=> b!70385 (= e!46041 (Some!136 (_2!1062 (h!2050 (t!4972 lt!30046)))))))

(declare-fun d!15709 () Bool)

(declare-fun c!10206 () Bool)

(assert (=> d!15709 (= c!10206 (and ((_ is Cons!1465) (t!4972 lt!30046)) (= (_1!1062 (h!2050 (t!4972 lt!30046))) (_1!1062 lt!29892))))))

(assert (=> d!15709 (= (getValueByKey!131 (t!4972 lt!30046) (_1!1062 lt!29892)) e!46041)))

(assert (= (and d!15709 c!10206) b!70385))

(assert (= (and d!15709 (not c!10206)) b!70386))

(assert (= (and b!70386 c!10207) b!70387))

(assert (= (and b!70386 (not c!10207)) b!70388))

(declare-fun m!67445 () Bool)

(assert (=> b!70387 m!67445))

(assert (=> b!68982 d!15709))

(assert (=> b!69293 d!14863))

(declare-fun d!15711 () Bool)

(assert (=> d!15711 (isDefined!84 (getValueByKey!131 (toList!719 (+!90 lt!30028 (tuple2!2103 lt!30025 lt!30024))) lt!30030))))

(declare-fun lt!31035 () Unit!1919)

(assert (=> d!15711 (= lt!31035 (choose!387 (toList!719 (+!90 lt!30028 (tuple2!2103 lt!30025 lt!30024))) lt!30030))))

(declare-fun e!46043 () Bool)

(assert (=> d!15711 e!46043))

(declare-fun res!37648 () Bool)

(assert (=> d!15711 (=> (not res!37648) (not e!46043))))

(assert (=> d!15711 (= res!37648 (isStrictlySorted!290 (toList!719 (+!90 lt!30028 (tuple2!2103 lt!30025 lt!30024)))))))

(assert (=> d!15711 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 (+!90 lt!30028 (tuple2!2103 lt!30025 lt!30024))) lt!30030) lt!31035)))

(declare-fun b!70389 () Bool)

(assert (=> b!70389 (= e!46043 (containsKey!135 (toList!719 (+!90 lt!30028 (tuple2!2103 lt!30025 lt!30024))) lt!30030))))

(assert (= (and d!15711 res!37648) b!70389))

(assert (=> d!15711 m!65393))

(assert (=> d!15711 m!65393))

(assert (=> d!15711 m!65395))

(declare-fun m!67447 () Bool)

(assert (=> d!15711 m!67447))

(declare-fun m!67449 () Bool)

(assert (=> d!15711 m!67449))

(assert (=> b!70389 m!65389))

(assert (=> b!69195 d!15711))

(assert (=> b!69195 d!15539))

(assert (=> b!69195 d!15541))

(declare-fun b!70390 () Bool)

(declare-fun e!46047 () Bool)

(declare-fun e!46046 () Bool)

(assert (=> b!70390 (= e!46047 e!46046)))

(declare-fun c!10208 () Bool)

(assert (=> b!70390 (= c!10208 (validKeyInArray!0 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!70391 () Bool)

(declare-fun call!6055 () Bool)

(assert (=> b!70391 (= e!46046 call!6055)))

(declare-fun b!70392 () Bool)

(declare-fun e!46044 () Bool)

(assert (=> b!70392 (= e!46044 e!46047)))

(declare-fun res!37651 () Bool)

(assert (=> b!70392 (=> (not res!37651) (not e!46047))))

(declare-fun e!46045 () Bool)

(assert (=> b!70392 (= res!37651 (not e!46045))))

(declare-fun res!37649 () Bool)

(assert (=> b!70392 (=> (not res!37649) (not e!46045))))

(assert (=> b!70392 (= res!37649 (validKeyInArray!0 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun d!15713 () Bool)

(declare-fun res!37650 () Bool)

(assert (=> d!15713 (=> res!37650 e!46044)))

(assert (=> d!15713 (= res!37650 (bvsge #b00000000000000000000000000000000 (size!2077 (_keys!3812 (v!2494 (underlying!253 thiss!992))))))))

(assert (=> d!15713 (= (arrayNoDuplicates!0 (_keys!3812 (v!2494 (underlying!253 thiss!992))) #b00000000000000000000000000000000 Nil!1467) e!46044)))

(declare-fun b!70393 () Bool)

(assert (=> b!70393 (= e!46046 call!6055)))

(declare-fun b!70394 () Bool)

(assert (=> b!70394 (= e!46045 (contains!715 Nil!1467 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun bm!6052 () Bool)

(assert (=> bm!6052 (= call!6055 (arrayNoDuplicates!0 (_keys!3812 (v!2494 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!10208 (Cons!1466 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) #b00000000000000000000000000000000) Nil!1467) Nil!1467)))))

(assert (= (and d!15713 (not res!37650)) b!70392))

(assert (= (and b!70392 res!37649) b!70394))

(assert (= (and b!70392 res!37651) b!70390))

(assert (= (and b!70390 c!10208) b!70391))

(assert (= (and b!70390 (not c!10208)) b!70393))

(assert (= (or b!70391 b!70393) bm!6052))

(assert (=> b!70390 m!65577))

(assert (=> b!70390 m!65577))

(assert (=> b!70390 m!65579))

(assert (=> b!70392 m!65577))

(assert (=> b!70392 m!65577))

(assert (=> b!70392 m!65579))

(assert (=> b!70394 m!65577))

(assert (=> b!70394 m!65577))

(declare-fun m!67451 () Bool)

(assert (=> b!70394 m!67451))

(assert (=> bm!6052 m!65577))

(declare-fun m!67453 () Bool)

(assert (=> bm!6052 m!67453))

(assert (=> b!69192 d!15713))

(declare-fun d!15715 () Bool)

(declare-fun e!46048 () Bool)

(assert (=> d!15715 e!46048))

(declare-fun res!37653 () Bool)

(assert (=> d!15715 (=> (not res!37653) (not e!46048))))

(declare-fun lt!31038 () ListLongMap!1407)

(assert (=> d!15715 (= res!37653 (contains!714 lt!31038 (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!31039 () List!1469)

(assert (=> d!15715 (= lt!31038 (ListLongMap!1408 lt!31039))))

(declare-fun lt!31036 () Unit!1919)

(declare-fun lt!31037 () Unit!1919)

(assert (=> d!15715 (= lt!31036 lt!31037)))

(assert (=> d!15715 (= (getValueByKey!131 lt!31039 (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!136 (_2!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!15715 (= lt!31037 (lemmaContainsTupThenGetReturnValue!48 lt!31039 (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!15715 (= lt!31039 (insertStrictlySorted!51 (toList!719 call!5878) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!15715 (= (+!90 call!5878 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!31038)))

(declare-fun b!70395 () Bool)

(declare-fun res!37652 () Bool)

(assert (=> b!70395 (=> (not res!37652) (not e!46048))))

(assert (=> b!70395 (= res!37652 (= (getValueByKey!131 (toList!719 lt!31038) (_1!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!136 (_2!1062 (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!70396 () Bool)

(assert (=> b!70396 (= e!46048 (contains!716 (toList!719 lt!31038) (tuple2!2103 (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1124 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!15715 res!37653) b!70395))

(assert (= (and b!70395 res!37652) b!70396))

(declare-fun m!67455 () Bool)

(assert (=> d!15715 m!67455))

(declare-fun m!67457 () Bool)

(assert (=> d!15715 m!67457))

(declare-fun m!67459 () Bool)

(assert (=> d!15715 m!67459))

(declare-fun m!67461 () Bool)

(assert (=> d!15715 m!67461))

(declare-fun m!67463 () Bool)

(assert (=> b!70395 m!67463))

(declare-fun m!67465 () Bool)

(assert (=> b!70396 m!67465))

(assert (=> b!68958 d!15715))

(assert (=> b!68958 d!15271))

(declare-fun d!15717 () Bool)

(assert (=> d!15717 (not (contains!714 (+!90 lt!30217 (tuple2!2103 lt!30214 lt!30213)) lt!30219))))

(declare-fun lt!31040 () Unit!1919)

(assert (=> d!15717 (= lt!31040 (choose!391 lt!30217 lt!30214 lt!30213 lt!30219))))

(declare-fun e!46049 () Bool)

(assert (=> d!15717 e!46049))

(declare-fun res!37654 () Bool)

(assert (=> d!15717 (=> (not res!37654) (not e!46049))))

(assert (=> d!15717 (= res!37654 (not (contains!714 lt!30217 lt!30219)))))

(assert (=> d!15717 (= (addStillNotContains!22 lt!30217 lt!30214 lt!30213 lt!30219) lt!31040)))

(declare-fun b!70397 () Bool)

(assert (=> b!70397 (= e!46049 (not (= lt!30214 lt!30219)))))

(assert (= (and d!15717 res!37654) b!70397))

(assert (=> d!15717 m!64911))

(assert (=> d!15717 m!64911))

(assert (=> d!15717 m!64913))

(declare-fun m!67467 () Bool)

(assert (=> d!15717 m!67467))

(declare-fun m!67469 () Bool)

(assert (=> d!15717 m!67469))

(assert (=> b!68958 d!15717))

(declare-fun d!15719 () Bool)

(declare-fun e!46050 () Bool)

(assert (=> d!15719 e!46050))

(declare-fun res!37656 () Bool)

(assert (=> d!15719 (=> (not res!37656) (not e!46050))))

(declare-fun lt!31043 () ListLongMap!1407)

(assert (=> d!15719 (= res!37656 (contains!714 lt!31043 (_1!1062 (tuple2!2103 lt!30214 lt!30213))))))

(declare-fun lt!31044 () List!1469)

(assert (=> d!15719 (= lt!31043 (ListLongMap!1408 lt!31044))))

(declare-fun lt!31041 () Unit!1919)

(declare-fun lt!31042 () Unit!1919)

(assert (=> d!15719 (= lt!31041 lt!31042)))

(assert (=> d!15719 (= (getValueByKey!131 lt!31044 (_1!1062 (tuple2!2103 lt!30214 lt!30213))) (Some!136 (_2!1062 (tuple2!2103 lt!30214 lt!30213))))))

(assert (=> d!15719 (= lt!31042 (lemmaContainsTupThenGetReturnValue!48 lt!31044 (_1!1062 (tuple2!2103 lt!30214 lt!30213)) (_2!1062 (tuple2!2103 lt!30214 lt!30213))))))

(assert (=> d!15719 (= lt!31044 (insertStrictlySorted!51 (toList!719 lt!30217) (_1!1062 (tuple2!2103 lt!30214 lt!30213)) (_2!1062 (tuple2!2103 lt!30214 lt!30213))))))

(assert (=> d!15719 (= (+!90 lt!30217 (tuple2!2103 lt!30214 lt!30213)) lt!31043)))

(declare-fun b!70398 () Bool)

(declare-fun res!37655 () Bool)

(assert (=> b!70398 (=> (not res!37655) (not e!46050))))

(assert (=> b!70398 (= res!37655 (= (getValueByKey!131 (toList!719 lt!31043) (_1!1062 (tuple2!2103 lt!30214 lt!30213))) (Some!136 (_2!1062 (tuple2!2103 lt!30214 lt!30213)))))))

(declare-fun b!70399 () Bool)

(assert (=> b!70399 (= e!46050 (contains!716 (toList!719 lt!31043) (tuple2!2103 lt!30214 lt!30213)))))

(assert (= (and d!15719 res!37656) b!70398))

(assert (= (and b!70398 res!37655) b!70399))

(declare-fun m!67471 () Bool)

(assert (=> d!15719 m!67471))

(declare-fun m!67473 () Bool)

(assert (=> d!15719 m!67473))

(declare-fun m!67475 () Bool)

(assert (=> d!15719 m!67475))

(declare-fun m!67477 () Bool)

(assert (=> d!15719 m!67477))

(declare-fun m!67479 () Bool)

(assert (=> b!70398 m!67479))

(declare-fun m!67481 () Bool)

(assert (=> b!70399 m!67481))

(assert (=> b!68958 d!15719))

(declare-fun d!15721 () Bool)

(declare-fun e!46051 () Bool)

(assert (=> d!15721 e!46051))

(declare-fun res!37657 () Bool)

(assert (=> d!15721 (=> res!37657 e!46051)))

(declare-fun lt!31046 () Bool)

(assert (=> d!15721 (= res!37657 (not lt!31046))))

(declare-fun lt!31045 () Bool)

(assert (=> d!15721 (= lt!31046 lt!31045)))

(declare-fun lt!31047 () Unit!1919)

(declare-fun e!46052 () Unit!1919)

(assert (=> d!15721 (= lt!31047 e!46052)))

(declare-fun c!10209 () Bool)

(assert (=> d!15721 (= c!10209 lt!31045)))

(assert (=> d!15721 (= lt!31045 (containsKey!135 (toList!719 (+!90 lt!30217 (tuple2!2103 lt!30214 lt!30213))) lt!30219))))

(assert (=> d!15721 (= (contains!714 (+!90 lt!30217 (tuple2!2103 lt!30214 lt!30213)) lt!30219) lt!31046)))

(declare-fun b!70400 () Bool)

(declare-fun lt!31048 () Unit!1919)

(assert (=> b!70400 (= e!46052 lt!31048)))

(assert (=> b!70400 (= lt!31048 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 (+!90 lt!30217 (tuple2!2103 lt!30214 lt!30213))) lt!30219))))

(assert (=> b!70400 (isDefined!84 (getValueByKey!131 (toList!719 (+!90 lt!30217 (tuple2!2103 lt!30214 lt!30213))) lt!30219))))

(declare-fun b!70401 () Bool)

(declare-fun Unit!1991 () Unit!1919)

(assert (=> b!70401 (= e!46052 Unit!1991)))

(declare-fun b!70402 () Bool)

(assert (=> b!70402 (= e!46051 (isDefined!84 (getValueByKey!131 (toList!719 (+!90 lt!30217 (tuple2!2103 lt!30214 lt!30213))) lt!30219)))))

(assert (= (and d!15721 c!10209) b!70400))

(assert (= (and d!15721 (not c!10209)) b!70401))

(assert (= (and d!15721 (not res!37657)) b!70402))

(declare-fun m!67483 () Bool)

(assert (=> d!15721 m!67483))

(declare-fun m!67485 () Bool)

(assert (=> b!70400 m!67485))

(declare-fun m!67487 () Bool)

(assert (=> b!70400 m!67487))

(assert (=> b!70400 m!67487))

(declare-fun m!67489 () Bool)

(assert (=> b!70400 m!67489))

(assert (=> b!70402 m!67487))

(assert (=> b!70402 m!67487))

(assert (=> b!70402 m!67489))

(assert (=> b!68958 d!15721))

(declare-fun d!15723 () Bool)

(declare-fun res!37658 () Bool)

(declare-fun e!46053 () Bool)

(assert (=> d!15723 (=> res!37658 e!46053)))

(assert (=> d!15723 (= res!37658 (and ((_ is Cons!1465) (toList!719 (getCurrentListMap!417 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))) (= (_1!1062 (h!2050 (toList!719 (getCurrentListMap!417 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16))))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355))))))

(assert (=> d!15723 (= (containsKey!135 (toList!719 (getCurrentListMap!417 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)) e!46053)))

(declare-fun b!70403 () Bool)

(declare-fun e!46054 () Bool)

(assert (=> b!70403 (= e!46053 e!46054)))

(declare-fun res!37659 () Bool)

(assert (=> b!70403 (=> (not res!37659) (not e!46054))))

(assert (=> b!70403 (= res!37659 (and (or (not ((_ is Cons!1465) (toList!719 (getCurrentListMap!417 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16))))) (bvsle (_1!1062 (h!2050 (toList!719 (getCurrentListMap!417 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16))))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355))) ((_ is Cons!1465) (toList!719 (getCurrentListMap!417 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))) (bvslt (_1!1062 (h!2050 (toList!719 (getCurrentListMap!417 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16))))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355))))))

(declare-fun b!70404 () Bool)

(assert (=> b!70404 (= e!46054 (containsKey!135 (t!4972 (toList!719 (getCurrentListMap!417 (_keys!3812 newMap!16) (_values!2151 newMap!16) (mask!6113 newMap!16) (extraKeys!2035 newMap!16) (zeroValue!2074 newMap!16) (minValue!2074 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2168 newMap!16)))) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))

(assert (= (and d!15723 (not res!37658)) b!70403))

(assert (= (and b!70403 res!37659) b!70404))

(assert (=> b!70404 m!64407))

(declare-fun m!67491 () Bool)

(assert (=> b!70404 m!67491))

(assert (=> d!14851 d!15723))

(declare-fun d!15725 () Bool)

(declare-fun res!37660 () Bool)

(declare-fun e!46055 () Bool)

(assert (=> d!15725 (=> res!37660 e!46055)))

(assert (=> d!15725 (= res!37660 (or ((_ is Nil!1466) lt!30269) ((_ is Nil!1466) (t!4972 lt!30269))))))

(assert (=> d!15725 (= (isStrictlySorted!290 lt!30269) e!46055)))

(declare-fun b!70405 () Bool)

(declare-fun e!46056 () Bool)

(assert (=> b!70405 (= e!46055 e!46056)))

(declare-fun res!37661 () Bool)

(assert (=> b!70405 (=> (not res!37661) (not e!46056))))

(assert (=> b!70405 (= res!37661 (bvslt (_1!1062 (h!2050 lt!30269)) (_1!1062 (h!2050 (t!4972 lt!30269)))))))

(declare-fun b!70406 () Bool)

(assert (=> b!70406 (= e!46056 (isStrictlySorted!290 (t!4972 lt!30269)))))

(assert (= (and d!15725 (not res!37660)) b!70405))

(assert (= (and b!70405 res!37661) b!70406))

(declare-fun m!67493 () Bool)

(assert (=> b!70406 m!67493))

(assert (=> d!14911 d!15725))

(declare-fun d!15727 () Bool)

(declare-fun res!37662 () Bool)

(declare-fun e!46057 () Bool)

(assert (=> d!15727 (=> res!37662 e!46057)))

(assert (=> d!15727 (= res!37662 (or ((_ is Nil!1466) (toList!719 (+!90 lt!29889 lt!29892))) ((_ is Nil!1466) (t!4972 (toList!719 (+!90 lt!29889 lt!29892))))))))

(assert (=> d!15727 (= (isStrictlySorted!290 (toList!719 (+!90 lt!29889 lt!29892))) e!46057)))

(declare-fun b!70407 () Bool)

(declare-fun e!46058 () Bool)

(assert (=> b!70407 (= e!46057 e!46058)))

(declare-fun res!37663 () Bool)

(assert (=> b!70407 (=> (not res!37663) (not e!46058))))

(assert (=> b!70407 (= res!37663 (bvslt (_1!1062 (h!2050 (toList!719 (+!90 lt!29889 lt!29892)))) (_1!1062 (h!2050 (t!4972 (toList!719 (+!90 lt!29889 lt!29892)))))))))

(declare-fun b!70408 () Bool)

(assert (=> b!70408 (= e!46058 (isStrictlySorted!290 (t!4972 (toList!719 (+!90 lt!29889 lt!29892)))))))

(assert (= (and d!15727 (not res!37662)) b!70407))

(assert (= (and b!70407 res!37663) b!70408))

(assert (=> b!70408 m!65563))

(assert (=> d!14911 d!15727))

(assert (=> b!69094 d!15145))

(declare-fun d!15729 () Bool)

(declare-fun e!46059 () Bool)

(assert (=> d!15729 e!46059))

(declare-fun res!37664 () Bool)

(assert (=> d!15729 (=> res!37664 e!46059)))

(declare-fun lt!31050 () Bool)

(assert (=> d!15729 (= res!37664 (not lt!31050))))

(declare-fun lt!31049 () Bool)

(assert (=> d!15729 (= lt!31050 lt!31049)))

(declare-fun lt!31051 () Unit!1919)

(declare-fun e!46060 () Unit!1919)

(assert (=> d!15729 (= lt!31051 e!46060)))

(declare-fun c!10210 () Bool)

(assert (=> d!15729 (= c!10210 lt!31049)))

(assert (=> d!15729 (= lt!31049 (containsKey!135 (toList!719 lt!30183) (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!15729 (= (contains!714 lt!30183 (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)) lt!31050)))

(declare-fun b!70409 () Bool)

(declare-fun lt!31052 () Unit!1919)

(assert (=> b!70409 (= e!46060 lt!31052)))

(assert (=> b!70409 (= lt!31052 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 lt!30183) (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!70409 (isDefined!84 (getValueByKey!131 (toList!719 lt!30183) (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!70410 () Bool)

(declare-fun Unit!1992 () Unit!1919)

(assert (=> b!70410 (= e!46060 Unit!1992)))

(declare-fun b!70411 () Bool)

(assert (=> b!70411 (= e!46059 (isDefined!84 (getValueByKey!131 (toList!719 lt!30183) (select (arr!1841 (_keys!3812 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!15729 c!10210) b!70409))

(assert (= (and d!15729 (not c!10210)) b!70410))

(assert (= (and d!15729 (not res!37664)) b!70411))

(assert (=> d!15729 m!64775))

(declare-fun m!67495 () Bool)

(assert (=> d!15729 m!67495))

(assert (=> b!70409 m!64775))

(declare-fun m!67497 () Bool)

(assert (=> b!70409 m!67497))

(assert (=> b!70409 m!64775))

(assert (=> b!70409 m!67435))

(assert (=> b!70409 m!67435))

(declare-fun m!67499 () Bool)

(assert (=> b!70409 m!67499))

(assert (=> b!70411 m!64775))

(assert (=> b!70411 m!67435))

(assert (=> b!70411 m!67435))

(assert (=> b!70411 m!67499))

(assert (=> b!68907 d!15729))

(declare-fun d!15731 () Bool)

(assert (=> d!15731 (= (isEmpty!312 (getValueByKey!131 (toList!719 lt!29895) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355))) (not ((_ is Some!136) (getValueByKey!131 (toList!719 lt!29895) (select (arr!1841 (_keys!3812 (v!2494 (underlying!253 thiss!992)))) from!355)))))))

(assert (=> d!14889 d!15731))

(assert (=> b!68864 d!15647))

(declare-fun d!15733 () Bool)

(declare-fun lt!31053 () Bool)

(assert (=> d!15733 (= lt!31053 (select (content!73 (toList!719 lt!30258)) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun e!46062 () Bool)

(assert (=> d!15733 (= lt!31053 e!46062)))

(declare-fun res!37665 () Bool)

(assert (=> d!15733 (=> (not res!37665) (not e!46062))))

(assert (=> d!15733 (= res!37665 ((_ is Cons!1465) (toList!719 lt!30258)))))

(assert (=> d!15733 (= (contains!716 (toList!719 lt!30258) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))) lt!31053)))

(declare-fun b!70412 () Bool)

(declare-fun e!46061 () Bool)

(assert (=> b!70412 (= e!46062 e!46061)))

(declare-fun res!37666 () Bool)

(assert (=> b!70412 (=> res!37666 e!46061)))

(assert (=> b!70412 (= res!37666 (= (h!2050 (toList!719 lt!30258)) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))))

(declare-fun b!70413 () Bool)

(assert (=> b!70413 (= e!46061 (contains!716 (t!4972 (toList!719 lt!30258)) (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))))

(assert (= (and d!15733 res!37665) b!70412))

(assert (= (and b!70412 (not res!37666)) b!70413))

(declare-fun m!67501 () Bool)

(assert (=> d!15733 m!67501))

(declare-fun m!67503 () Bool)

(assert (=> d!15733 m!67503))

(declare-fun m!67505 () Bool)

(assert (=> b!70413 m!67505))

(assert (=> b!69035 d!15733))

(declare-fun d!15735 () Bool)

(assert (=> d!15735 (= (apply!73 (+!90 lt!30281 (tuple2!2103 lt!30296 (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16)))) lt!30291) (get!1127 (getValueByKey!131 (toList!719 (+!90 lt!30281 (tuple2!2103 lt!30296 (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16))))) lt!30291)))))

(declare-fun bs!3036 () Bool)

(assert (= bs!3036 d!15735))

(declare-fun m!67507 () Bool)

(assert (=> bs!3036 m!67507))

(assert (=> bs!3036 m!67507))

(declare-fun m!67509 () Bool)

(assert (=> bs!3036 m!67509))

(assert (=> b!69081 d!15735))

(declare-fun d!15737 () Bool)

(declare-fun e!46063 () Bool)

(assert (=> d!15737 e!46063))

(declare-fun res!37668 () Bool)

(assert (=> d!15737 (=> (not res!37668) (not e!46063))))

(declare-fun lt!31056 () ListLongMap!1407)

(assert (=> d!15737 (= res!37668 (contains!714 lt!31056 (_1!1062 (tuple2!2103 lt!30279 (zeroValue!2074 newMap!16)))))))

(declare-fun lt!31057 () List!1469)

(assert (=> d!15737 (= lt!31056 (ListLongMap!1408 lt!31057))))

(declare-fun lt!31054 () Unit!1919)

(declare-fun lt!31055 () Unit!1919)

(assert (=> d!15737 (= lt!31054 lt!31055)))

(assert (=> d!15737 (= (getValueByKey!131 lt!31057 (_1!1062 (tuple2!2103 lt!30279 (zeroValue!2074 newMap!16)))) (Some!136 (_2!1062 (tuple2!2103 lt!30279 (zeroValue!2074 newMap!16)))))))

(assert (=> d!15737 (= lt!31055 (lemmaContainsTupThenGetReturnValue!48 lt!31057 (_1!1062 (tuple2!2103 lt!30279 (zeroValue!2074 newMap!16))) (_2!1062 (tuple2!2103 lt!30279 (zeroValue!2074 newMap!16)))))))

(assert (=> d!15737 (= lt!31057 (insertStrictlySorted!51 (toList!719 lt!30284) (_1!1062 (tuple2!2103 lt!30279 (zeroValue!2074 newMap!16))) (_2!1062 (tuple2!2103 lt!30279 (zeroValue!2074 newMap!16)))))))

(assert (=> d!15737 (= (+!90 lt!30284 (tuple2!2103 lt!30279 (zeroValue!2074 newMap!16))) lt!31056)))

(declare-fun b!70414 () Bool)

(declare-fun res!37667 () Bool)

(assert (=> b!70414 (=> (not res!37667) (not e!46063))))

(assert (=> b!70414 (= res!37667 (= (getValueByKey!131 (toList!719 lt!31056) (_1!1062 (tuple2!2103 lt!30279 (zeroValue!2074 newMap!16)))) (Some!136 (_2!1062 (tuple2!2103 lt!30279 (zeroValue!2074 newMap!16))))))))

(declare-fun b!70415 () Bool)

(assert (=> b!70415 (= e!46063 (contains!716 (toList!719 lt!31056) (tuple2!2103 lt!30279 (zeroValue!2074 newMap!16))))))

(assert (= (and d!15737 res!37668) b!70414))

(assert (= (and b!70414 res!37667) b!70415))

(declare-fun m!67511 () Bool)

(assert (=> d!15737 m!67511))

(declare-fun m!67513 () Bool)

(assert (=> d!15737 m!67513))

(declare-fun m!67515 () Bool)

(assert (=> d!15737 m!67515))

(declare-fun m!67517 () Bool)

(assert (=> d!15737 m!67517))

(declare-fun m!67519 () Bool)

(assert (=> b!70414 m!67519))

(declare-fun m!67521 () Bool)

(assert (=> b!70415 m!67521))

(assert (=> b!69081 d!15737))

(declare-fun d!15739 () Bool)

(assert (=> d!15739 (= (apply!73 (+!90 lt!30284 (tuple2!2103 lt!30279 (zeroValue!2074 newMap!16))) lt!30287) (apply!73 lt!30284 lt!30287))))

(declare-fun lt!31058 () Unit!1919)

(assert (=> d!15739 (= lt!31058 (choose!388 lt!30284 lt!30279 (zeroValue!2074 newMap!16) lt!30287))))

(declare-fun e!46064 () Bool)

(assert (=> d!15739 e!46064))

(declare-fun res!37669 () Bool)

(assert (=> d!15739 (=> (not res!37669) (not e!46064))))

(assert (=> d!15739 (= res!37669 (contains!714 lt!30284 lt!30287))))

(assert (=> d!15739 (= (addApplyDifferent!49 lt!30284 lt!30279 (zeroValue!2074 newMap!16) lt!30287) lt!31058)))

(declare-fun b!70416 () Bool)

(assert (=> b!70416 (= e!46064 (not (= lt!30287 lt!30279)))))

(assert (= (and d!15739 res!37669) b!70416))

(assert (=> d!15739 m!65139))

(declare-fun m!67523 () Bool)

(assert (=> d!15739 m!67523))

(declare-fun m!67525 () Bool)

(assert (=> d!15739 m!67525))

(assert (=> d!15739 m!65157))

(assert (=> d!15739 m!65139))

(assert (=> d!15739 m!65141))

(assert (=> b!69081 d!15739))

(declare-fun d!15741 () Bool)

(declare-fun e!46065 () Bool)

(assert (=> d!15741 e!46065))

(declare-fun res!37671 () Bool)

(assert (=> d!15741 (=> (not res!37671) (not e!46065))))

(declare-fun lt!31061 () ListLongMap!1407)

(assert (=> d!15741 (= res!37671 (contains!714 lt!31061 (_1!1062 (tuple2!2103 lt!30289 (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16))))))))

(declare-fun lt!31062 () List!1469)

(assert (=> d!15741 (= lt!31061 (ListLongMap!1408 lt!31062))))

(declare-fun lt!31059 () Unit!1919)

(declare-fun lt!31060 () Unit!1919)

(assert (=> d!15741 (= lt!31059 lt!31060)))

(assert (=> d!15741 (= (getValueByKey!131 lt!31062 (_1!1062 (tuple2!2103 lt!30289 (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16))))) (Some!136 (_2!1062 (tuple2!2103 lt!30289 (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16))))))))

(assert (=> d!15741 (= lt!31060 (lemmaContainsTupThenGetReturnValue!48 lt!31062 (_1!1062 (tuple2!2103 lt!30289 (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16)))) (_2!1062 (tuple2!2103 lt!30289 (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16))))))))

(assert (=> d!15741 (= lt!31062 (insertStrictlySorted!51 (toList!719 lt!30278) (_1!1062 (tuple2!2103 lt!30289 (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16)))) (_2!1062 (tuple2!2103 lt!30289 (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16))))))))

(assert (=> d!15741 (= (+!90 lt!30278 (tuple2!2103 lt!30289 (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16)))) lt!31061)))

(declare-fun b!70417 () Bool)

(declare-fun res!37670 () Bool)

(assert (=> b!70417 (=> (not res!37670) (not e!46065))))

(assert (=> b!70417 (= res!37670 (= (getValueByKey!131 (toList!719 lt!31061) (_1!1062 (tuple2!2103 lt!30289 (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16))))) (Some!136 (_2!1062 (tuple2!2103 lt!30289 (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16)))))))))

(declare-fun b!70418 () Bool)

(assert (=> b!70418 (= e!46065 (contains!716 (toList!719 lt!31061) (tuple2!2103 lt!30289 (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16)))))))

(assert (= (and d!15741 res!37671) b!70417))

(assert (= (and b!70417 res!37670) b!70418))

(declare-fun m!67527 () Bool)

(assert (=> d!15741 m!67527))

(declare-fun m!67529 () Bool)

(assert (=> d!15741 m!67529))

(declare-fun m!67531 () Bool)

(assert (=> d!15741 m!67531))

(declare-fun m!67533 () Bool)

(assert (=> d!15741 m!67533))

(declare-fun m!67535 () Bool)

(assert (=> b!70417 m!67535))

(declare-fun m!67537 () Bool)

(assert (=> b!70418 m!67537))

(assert (=> b!69081 d!15741))

(declare-fun d!15743 () Bool)

(assert (=> d!15743 (= (apply!73 (+!90 lt!30278 (tuple2!2103 lt!30289 (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16)))) lt!30280) (apply!73 lt!30278 lt!30280))))

(declare-fun lt!31063 () Unit!1919)

(assert (=> d!15743 (= lt!31063 (choose!388 lt!30278 lt!30289 (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16)) lt!30280))))

(declare-fun e!46066 () Bool)

(assert (=> d!15743 e!46066))

(declare-fun res!37672 () Bool)

(assert (=> d!15743 (=> (not res!37672) (not e!46066))))

(assert (=> d!15743 (= res!37672 (contains!714 lt!30278 lt!30280))))

(assert (=> d!15743 (= (addApplyDifferent!49 lt!30278 lt!30289 (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16)) lt!30280) lt!31063)))

(declare-fun b!70419 () Bool)

(assert (=> b!70419 (= e!46066 (not (= lt!30280 lt!30289)))))

(assert (= (and d!15743 res!37672) b!70419))

(assert (=> d!15743 m!65137))

(declare-fun m!67539 () Bool)

(assert (=> d!15743 m!67539))

(declare-fun m!67541 () Bool)

(assert (=> d!15743 m!67541))

(assert (=> d!15743 m!65153))

(assert (=> d!15743 m!65137))

(assert (=> d!15743 m!65145))

(assert (=> b!69081 d!15743))

(declare-fun d!15745 () Bool)

(declare-fun e!46067 () Bool)

(assert (=> d!15745 e!46067))

(declare-fun res!37674 () Bool)

(assert (=> d!15745 (=> (not res!37674) (not e!46067))))

(declare-fun lt!31066 () ListLongMap!1407)

(assert (=> d!15745 (= res!37674 (contains!714 lt!31066 (_1!1062 (tuple2!2103 lt!30296 (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16))))))))

(declare-fun lt!31067 () List!1469)

(assert (=> d!15745 (= lt!31066 (ListLongMap!1408 lt!31067))))

(declare-fun lt!31064 () Unit!1919)

(declare-fun lt!31065 () Unit!1919)

(assert (=> d!15745 (= lt!31064 lt!31065)))

(assert (=> d!15745 (= (getValueByKey!131 lt!31067 (_1!1062 (tuple2!2103 lt!30296 (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16))))) (Some!136 (_2!1062 (tuple2!2103 lt!30296 (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16))))))))

(assert (=> d!15745 (= lt!31065 (lemmaContainsTupThenGetReturnValue!48 lt!31067 (_1!1062 (tuple2!2103 lt!30296 (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16)))) (_2!1062 (tuple2!2103 lt!30296 (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16))))))))

(assert (=> d!15745 (= lt!31067 (insertStrictlySorted!51 (toList!719 lt!30281) (_1!1062 (tuple2!2103 lt!30296 (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16)))) (_2!1062 (tuple2!2103 lt!30296 (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16))))))))

(assert (=> d!15745 (= (+!90 lt!30281 (tuple2!2103 lt!30296 (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16)))) lt!31066)))

(declare-fun b!70420 () Bool)

(declare-fun res!37673 () Bool)

(assert (=> b!70420 (=> (not res!37673) (not e!46067))))

(assert (=> b!70420 (= res!37673 (= (getValueByKey!131 (toList!719 lt!31066) (_1!1062 (tuple2!2103 lt!30296 (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16))))) (Some!136 (_2!1062 (tuple2!2103 lt!30296 (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16)))))))))

(declare-fun b!70421 () Bool)

(assert (=> b!70421 (= e!46067 (contains!716 (toList!719 lt!31066) (tuple2!2103 lt!30296 (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16)))))))

(assert (= (and d!15745 res!37674) b!70420))

(assert (= (and b!70420 res!37673) b!70421))

(declare-fun m!67543 () Bool)

(assert (=> d!15745 m!67543))

(declare-fun m!67545 () Bool)

(assert (=> d!15745 m!67545))

(declare-fun m!67547 () Bool)

(assert (=> d!15745 m!67547))

(declare-fun m!67549 () Bool)

(assert (=> d!15745 m!67549))

(declare-fun m!67551 () Bool)

(assert (=> b!70420 m!67551))

(declare-fun m!67553 () Bool)

(assert (=> b!70421 m!67553))

(assert (=> b!69081 d!15745))

(declare-fun d!15747 () Bool)

(assert (=> d!15747 (= (apply!73 lt!30278 lt!30280) (get!1127 (getValueByKey!131 (toList!719 lt!30278) lt!30280)))))

(declare-fun bs!3037 () Bool)

(assert (= bs!3037 d!15747))

(declare-fun m!67555 () Bool)

(assert (=> bs!3037 m!67555))

(assert (=> bs!3037 m!67555))

(declare-fun m!67557 () Bool)

(assert (=> bs!3037 m!67557))

(assert (=> b!69081 d!15747))

(declare-fun d!15749 () Bool)

(assert (=> d!15749 (= (apply!73 lt!30281 lt!30291) (get!1127 (getValueByKey!131 (toList!719 lt!30281) lt!30291)))))

(declare-fun bs!3038 () Bool)

(assert (= bs!3038 d!15749))

(declare-fun m!67559 () Bool)

(assert (=> bs!3038 m!67559))

(assert (=> bs!3038 m!67559))

(declare-fun m!67561 () Bool)

(assert (=> bs!3038 m!67561))

(assert (=> b!69081 d!15749))

(declare-fun d!15751 () Bool)

(declare-fun e!46068 () Bool)

(assert (=> d!15751 e!46068))

(declare-fun res!37676 () Bool)

(assert (=> d!15751 (=> (not res!37676) (not e!46068))))

(declare-fun lt!31070 () ListLongMap!1407)

(assert (=> d!15751 (= res!37676 (contains!714 lt!31070 (_1!1062 (tuple2!2103 lt!30288 (zeroValue!2074 newMap!16)))))))

(declare-fun lt!31071 () List!1469)

(assert (=> d!15751 (= lt!31070 (ListLongMap!1408 lt!31071))))

(declare-fun lt!31068 () Unit!1919)

(declare-fun lt!31069 () Unit!1919)

(assert (=> d!15751 (= lt!31068 lt!31069)))

(assert (=> d!15751 (= (getValueByKey!131 lt!31071 (_1!1062 (tuple2!2103 lt!30288 (zeroValue!2074 newMap!16)))) (Some!136 (_2!1062 (tuple2!2103 lt!30288 (zeroValue!2074 newMap!16)))))))

(assert (=> d!15751 (= lt!31069 (lemmaContainsTupThenGetReturnValue!48 lt!31071 (_1!1062 (tuple2!2103 lt!30288 (zeroValue!2074 newMap!16))) (_2!1062 (tuple2!2103 lt!30288 (zeroValue!2074 newMap!16)))))))

(assert (=> d!15751 (= lt!31071 (insertStrictlySorted!51 (toList!719 lt!30285) (_1!1062 (tuple2!2103 lt!30288 (zeroValue!2074 newMap!16))) (_2!1062 (tuple2!2103 lt!30288 (zeroValue!2074 newMap!16)))))))

(assert (=> d!15751 (= (+!90 lt!30285 (tuple2!2103 lt!30288 (zeroValue!2074 newMap!16))) lt!31070)))

(declare-fun b!70422 () Bool)

(declare-fun res!37675 () Bool)

(assert (=> b!70422 (=> (not res!37675) (not e!46068))))

(assert (=> b!70422 (= res!37675 (= (getValueByKey!131 (toList!719 lt!31070) (_1!1062 (tuple2!2103 lt!30288 (zeroValue!2074 newMap!16)))) (Some!136 (_2!1062 (tuple2!2103 lt!30288 (zeroValue!2074 newMap!16))))))))

(declare-fun b!70423 () Bool)

(assert (=> b!70423 (= e!46068 (contains!716 (toList!719 lt!31070) (tuple2!2103 lt!30288 (zeroValue!2074 newMap!16))))))

(assert (= (and d!15751 res!37676) b!70422))

(assert (= (and b!70422 res!37675) b!70423))

(declare-fun m!67563 () Bool)

(assert (=> d!15751 m!67563))

(declare-fun m!67565 () Bool)

(assert (=> d!15751 m!67565))

(declare-fun m!67567 () Bool)

(assert (=> d!15751 m!67567))

(declare-fun m!67569 () Bool)

(assert (=> d!15751 m!67569))

(declare-fun m!67571 () Bool)

(assert (=> b!70422 m!67571))

(declare-fun m!67573 () Bool)

(assert (=> b!70423 m!67573))

(assert (=> b!69081 d!15751))

(assert (=> b!69081 d!15375))

(declare-fun d!15753 () Bool)

(assert (=> d!15753 (= (apply!73 (+!90 lt!30281 (tuple2!2103 lt!30296 (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16)))) lt!30291) (apply!73 lt!30281 lt!30291))))

(declare-fun lt!31072 () Unit!1919)

(assert (=> d!15753 (= lt!31072 (choose!388 lt!30281 lt!30296 (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16)) lt!30291))))

(declare-fun e!46069 () Bool)

(assert (=> d!15753 e!46069))

(declare-fun res!37677 () Bool)

(assert (=> d!15753 (=> (not res!37677) (not e!46069))))

(assert (=> d!15753 (= res!37677 (contains!714 lt!30281 lt!30291))))

(assert (=> d!15753 (= (addApplyDifferent!49 lt!30281 lt!30296 (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16)) lt!30291) lt!31072)))

(declare-fun b!70424 () Bool)

(assert (=> b!70424 (= e!46069 (not (= lt!30291 lt!30296)))))

(assert (= (and d!15753 res!37677) b!70424))

(assert (=> d!15753 m!65131))

(declare-fun m!67575 () Bool)

(assert (=> d!15753 m!67575))

(declare-fun m!67577 () Bool)

(assert (=> d!15753 m!67577))

(assert (=> d!15753 m!65155))

(assert (=> d!15753 m!65131))

(assert (=> d!15753 m!65133))

(assert (=> b!69081 d!15753))

(declare-fun d!15755 () Bool)

(assert (=> d!15755 (contains!714 (+!90 lt!30285 (tuple2!2103 lt!30288 (zeroValue!2074 newMap!16))) lt!30276)))

(declare-fun lt!31073 () Unit!1919)

(assert (=> d!15755 (= lt!31073 (choose!389 lt!30285 lt!30288 (zeroValue!2074 newMap!16) lt!30276))))

(assert (=> d!15755 (contains!714 lt!30285 lt!30276)))

(assert (=> d!15755 (= (addStillContains!49 lt!30285 lt!30288 (zeroValue!2074 newMap!16) lt!30276) lt!31073)))

(declare-fun bs!3039 () Bool)

(assert (= bs!3039 d!15755))

(assert (=> bs!3039 m!65147))

(assert (=> bs!3039 m!65147))

(assert (=> bs!3039 m!65149))

(declare-fun m!67579 () Bool)

(assert (=> bs!3039 m!67579))

(declare-fun m!67581 () Bool)

(assert (=> bs!3039 m!67581))

(assert (=> b!69081 d!15755))

(declare-fun d!15757 () Bool)

(assert (=> d!15757 (= (apply!73 (+!90 lt!30278 (tuple2!2103 lt!30289 (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16)))) lt!30280) (get!1127 (getValueByKey!131 (toList!719 (+!90 lt!30278 (tuple2!2103 lt!30289 (ite c!9754 (ite c!9756 (minValue!2074 newMap!16) lt!29897) (minValue!2074 newMap!16))))) lt!30280)))))

(declare-fun bs!3040 () Bool)

(assert (= bs!3040 d!15757))

(declare-fun m!67583 () Bool)

(assert (=> bs!3040 m!67583))

(assert (=> bs!3040 m!67583))

(declare-fun m!67585 () Bool)

(assert (=> bs!3040 m!67585))

(assert (=> b!69081 d!15757))

(declare-fun d!15759 () Bool)

(assert (=> d!15759 (= (apply!73 (+!90 lt!30284 (tuple2!2103 lt!30279 (zeroValue!2074 newMap!16))) lt!30287) (get!1127 (getValueByKey!131 (toList!719 (+!90 lt!30284 (tuple2!2103 lt!30279 (zeroValue!2074 newMap!16)))) lt!30287)))))

(declare-fun bs!3041 () Bool)

(assert (= bs!3041 d!15759))

(declare-fun m!67587 () Bool)

(assert (=> bs!3041 m!67587))

(assert (=> bs!3041 m!67587))

(declare-fun m!67589 () Bool)

(assert (=> bs!3041 m!67589))

(assert (=> b!69081 d!15759))

(declare-fun d!15761 () Bool)

(assert (=> d!15761 (= (apply!73 lt!30284 lt!30287) (get!1127 (getValueByKey!131 (toList!719 lt!30284) lt!30287)))))

(declare-fun bs!3042 () Bool)

(assert (= bs!3042 d!15761))

(declare-fun m!67591 () Bool)

(assert (=> bs!3042 m!67591))

(assert (=> bs!3042 m!67591))

(declare-fun m!67593 () Bool)

(assert (=> bs!3042 m!67593))

(assert (=> b!69081 d!15761))

(declare-fun d!15763 () Bool)

(declare-fun e!46070 () Bool)

(assert (=> d!15763 e!46070))

(declare-fun res!37678 () Bool)

(assert (=> d!15763 (=> res!37678 e!46070)))

(declare-fun lt!31075 () Bool)

(assert (=> d!15763 (= res!37678 (not lt!31075))))

(declare-fun lt!31074 () Bool)

(assert (=> d!15763 (= lt!31075 lt!31074)))

(declare-fun lt!31076 () Unit!1919)

(declare-fun e!46071 () Unit!1919)

(assert (=> d!15763 (= lt!31076 e!46071)))

(declare-fun c!10211 () Bool)

(assert (=> d!15763 (= c!10211 lt!31074)))

(assert (=> d!15763 (= lt!31074 (containsKey!135 (toList!719 (+!90 lt!30285 (tuple2!2103 lt!30288 (zeroValue!2074 newMap!16)))) lt!30276))))

(assert (=> d!15763 (= (contains!714 (+!90 lt!30285 (tuple2!2103 lt!30288 (zeroValue!2074 newMap!16))) lt!30276) lt!31075)))

(declare-fun b!70425 () Bool)

(declare-fun lt!31077 () Unit!1919)

(assert (=> b!70425 (= e!46071 lt!31077)))

(assert (=> b!70425 (= lt!31077 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 (+!90 lt!30285 (tuple2!2103 lt!30288 (zeroValue!2074 newMap!16)))) lt!30276))))

(assert (=> b!70425 (isDefined!84 (getValueByKey!131 (toList!719 (+!90 lt!30285 (tuple2!2103 lt!30288 (zeroValue!2074 newMap!16)))) lt!30276))))

(declare-fun b!70426 () Bool)

(declare-fun Unit!1993 () Unit!1919)

(assert (=> b!70426 (= e!46071 Unit!1993)))

(declare-fun b!70427 () Bool)

(assert (=> b!70427 (= e!46070 (isDefined!84 (getValueByKey!131 (toList!719 (+!90 lt!30285 (tuple2!2103 lt!30288 (zeroValue!2074 newMap!16)))) lt!30276)))))

(assert (= (and d!15763 c!10211) b!70425))

(assert (= (and d!15763 (not c!10211)) b!70426))

(assert (= (and d!15763 (not res!37678)) b!70427))

(declare-fun m!67595 () Bool)

(assert (=> d!15763 m!67595))

(declare-fun m!67597 () Bool)

(assert (=> b!70425 m!67597))

(declare-fun m!67599 () Bool)

(assert (=> b!70425 m!67599))

(assert (=> b!70425 m!67599))

(declare-fun m!67601 () Bool)

(assert (=> b!70425 m!67601))

(assert (=> b!70427 m!67599))

(assert (=> b!70427 m!67599))

(assert (=> b!70427 m!67601))

(assert (=> b!69081 d!15763))

(declare-fun d!15765 () Bool)

(assert (=> d!15765 (= (get!1125 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!322 (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2493 (select (arr!1842 (_values!2151 (v!2494 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!68944 d!15765))

(declare-fun d!15767 () Bool)

(declare-fun e!46072 () Bool)

(assert (=> d!15767 e!46072))

(declare-fun res!37679 () Bool)

(assert (=> d!15767 (=> res!37679 e!46072)))

(declare-fun lt!31079 () Bool)

(assert (=> d!15767 (= res!37679 (not lt!31079))))

(declare-fun lt!31078 () Bool)

(assert (=> d!15767 (= lt!31079 lt!31078)))

(declare-fun lt!31080 () Unit!1919)

(declare-fun e!46073 () Unit!1919)

(assert (=> d!15767 (= lt!31080 e!46073)))

(declare-fun c!10212 () Bool)

(assert (=> d!15767 (= c!10212 lt!31078)))

(assert (=> d!15767 (= lt!31078 (containsKey!135 (toList!719 lt!30293) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!15767 (= (contains!714 lt!30293 #b0000000000000000000000000000000000000000000000000000000000000000) lt!31079)))

(declare-fun b!70428 () Bool)

(declare-fun lt!31081 () Unit!1919)

(assert (=> b!70428 (= e!46073 lt!31081)))

(assert (=> b!70428 (= lt!31081 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 lt!30293) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!70428 (isDefined!84 (getValueByKey!131 (toList!719 lt!30293) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!70429 () Bool)

(declare-fun Unit!1994 () Unit!1919)

(assert (=> b!70429 (= e!46073 Unit!1994)))

(declare-fun b!70430 () Bool)

(assert (=> b!70430 (= e!46072 (isDefined!84 (getValueByKey!131 (toList!719 lt!30293) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15767 c!10212) b!70428))

(assert (= (and d!15767 (not c!10212)) b!70429))

(assert (= (and d!15767 (not res!37679)) b!70430))

(declare-fun m!67603 () Bool)

(assert (=> d!15767 m!67603))

(declare-fun m!67605 () Bool)

(assert (=> b!70428 m!67605))

(assert (=> b!70428 m!67113))

(assert (=> b!70428 m!67113))

(declare-fun m!67607 () Bool)

(assert (=> b!70428 m!67607))

(assert (=> b!70430 m!67113))

(assert (=> b!70430 m!67113))

(assert (=> b!70430 m!67607))

(assert (=> bm!5897 d!15767))

(declare-fun d!15769 () Bool)

(declare-fun e!46074 () Bool)

(assert (=> d!15769 e!46074))

(declare-fun res!37681 () Bool)

(assert (=> d!15769 (=> (not res!37681) (not e!46074))))

(declare-fun lt!31084 () ListLongMap!1407)

(assert (=> d!15769 (= res!37681 (contains!714 lt!31084 (_1!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))))))

(declare-fun lt!31085 () List!1469)

(assert (=> d!15769 (= lt!31084 (ListLongMap!1408 lt!31085))))

(declare-fun lt!31082 () Unit!1919)

(declare-fun lt!31083 () Unit!1919)

(assert (=> d!15769 (= lt!31082 lt!31083)))

(assert (=> d!15769 (= (getValueByKey!131 lt!31085 (_1!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))) (Some!136 (_2!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))))))

(assert (=> d!15769 (= lt!31083 (lemmaContainsTupThenGetReturnValue!48 lt!31085 (_1!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))) (_2!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))))))

(assert (=> d!15769 (= lt!31085 (insertStrictlySorted!51 (toList!719 call!5876) (_1!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))) (_2!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))))))

(assert (=> d!15769 (= (+!90 call!5876 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))) lt!31084)))

(declare-fun b!70431 () Bool)

(declare-fun res!37680 () Bool)

(assert (=> b!70431 (=> (not res!37680) (not e!46074))))

(assert (=> b!70431 (= res!37680 (= (getValueByKey!131 (toList!719 lt!31084) (_1!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16)))) (Some!136 (_2!1062 (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))))))))

(declare-fun b!70432 () Bool)

(assert (=> b!70432 (= e!46074 (contains!716 (toList!719 lt!31084) (tuple2!2103 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2074 newMap!16))))))

(assert (= (and d!15769 res!37681) b!70431))

(assert (= (and b!70431 res!37680) b!70432))

(declare-fun m!67609 () Bool)

(assert (=> d!15769 m!67609))

(declare-fun m!67611 () Bool)

(assert (=> d!15769 m!67611))

(declare-fun m!67613 () Bool)

(assert (=> d!15769 m!67613))

(declare-fun m!67615 () Bool)

(assert (=> d!15769 m!67615))

(declare-fun m!67617 () Bool)

(assert (=> b!70431 m!67617))

(declare-fun m!67619 () Bool)

(assert (=> b!70432 m!67619))

(assert (=> b!68900 d!15769))

(declare-fun d!15771 () Bool)

(declare-fun res!37682 () Bool)

(declare-fun e!46075 () Bool)

(assert (=> d!15771 (=> res!37682 e!46075)))

(assert (=> d!15771 (= res!37682 (and ((_ is Cons!1465) (toList!719 (+!90 lt!30028 (tuple2!2103 lt!30025 lt!30024)))) (= (_1!1062 (h!2050 (toList!719 (+!90 lt!30028 (tuple2!2103 lt!30025 lt!30024))))) lt!30030)))))

(assert (=> d!15771 (= (containsKey!135 (toList!719 (+!90 lt!30028 (tuple2!2103 lt!30025 lt!30024))) lt!30030) e!46075)))

(declare-fun b!70433 () Bool)

(declare-fun e!46076 () Bool)

(assert (=> b!70433 (= e!46075 e!46076)))

(declare-fun res!37683 () Bool)

(assert (=> b!70433 (=> (not res!37683) (not e!46076))))

(assert (=> b!70433 (= res!37683 (and (or (not ((_ is Cons!1465) (toList!719 (+!90 lt!30028 (tuple2!2103 lt!30025 lt!30024))))) (bvsle (_1!1062 (h!2050 (toList!719 (+!90 lt!30028 (tuple2!2103 lt!30025 lt!30024))))) lt!30030)) ((_ is Cons!1465) (toList!719 (+!90 lt!30028 (tuple2!2103 lt!30025 lt!30024)))) (bvslt (_1!1062 (h!2050 (toList!719 (+!90 lt!30028 (tuple2!2103 lt!30025 lt!30024))))) lt!30030)))))

(declare-fun b!70434 () Bool)

(assert (=> b!70434 (= e!46076 (containsKey!135 (t!4972 (toList!719 (+!90 lt!30028 (tuple2!2103 lt!30025 lt!30024)))) lt!30030))))

(assert (= (and d!15771 (not res!37682)) b!70433))

(assert (= (and b!70433 res!37683) b!70434))

(declare-fun m!67621 () Bool)

(assert (=> b!70434 m!67621))

(assert (=> d!15005 d!15771))

(declare-fun d!15773 () Bool)

(declare-fun c!10213 () Bool)

(assert (=> d!15773 (= c!10213 ((_ is Nil!1466) (toList!719 lt!30049)))))

(declare-fun e!46077 () (InoxSet tuple2!2102))

(assert (=> d!15773 (= (content!73 (toList!719 lt!30049)) e!46077)))

(declare-fun b!70435 () Bool)

(assert (=> b!70435 (= e!46077 ((as const (Array tuple2!2102 Bool)) false))))

(declare-fun b!70436 () Bool)

(assert (=> b!70436 (= e!46077 ((_ map or) (store ((as const (Array tuple2!2102 Bool)) false) (h!2050 (toList!719 lt!30049)) true) (content!73 (t!4972 (toList!719 lt!30049)))))))

(assert (= (and d!15773 c!10213) b!70435))

(assert (= (and d!15773 (not c!10213)) b!70436))

(declare-fun m!67623 () Bool)

(assert (=> b!70436 m!67623))

(assert (=> b!70436 m!65977))

(assert (=> d!14835 d!15773))

(assert (=> d!14929 d!15083))

(assert (=> b!68869 d!15599))

(declare-fun d!15775 () Bool)

(assert (=> d!15775 (= (get!1127 (getValueByKey!131 (toList!719 (+!90 lt!29981 (tuple2!2103 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))) lt!29983)) (v!2498 (getValueByKey!131 (toList!719 (+!90 lt!29981 (tuple2!2103 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))) lt!29983)))))

(assert (=> d!14983 d!15775))

(declare-fun b!70439 () Bool)

(declare-fun e!46079 () Option!137)

(assert (=> b!70439 (= e!46079 (getValueByKey!131 (t!4972 (toList!719 (+!90 lt!29981 (tuple2!2103 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))) lt!29983))))

(declare-fun b!70438 () Bool)

(declare-fun e!46078 () Option!137)

(assert (=> b!70438 (= e!46078 e!46079)))

(declare-fun c!10215 () Bool)

(assert (=> b!70438 (= c!10215 (and ((_ is Cons!1465) (toList!719 (+!90 lt!29981 (tuple2!2103 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))) (not (= (_1!1062 (h!2050 (toList!719 (+!90 lt!29981 (tuple2!2103 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))) lt!29983))))))

(declare-fun b!70440 () Bool)

(assert (=> b!70440 (= e!46079 None!135)))

(declare-fun b!70437 () Bool)

(assert (=> b!70437 (= e!46078 (Some!136 (_2!1062 (h!2050 (toList!719 (+!90 lt!29981 (tuple2!2103 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))))))))

(declare-fun c!10214 () Bool)

(declare-fun d!15777 () Bool)

(assert (=> d!15777 (= c!10214 (and ((_ is Cons!1465) (toList!719 (+!90 lt!29981 (tuple2!2103 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992))))))) (= (_1!1062 (h!2050 (toList!719 (+!90 lt!29981 (tuple2!2103 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))))) lt!29983)))))

(assert (=> d!15777 (= (getValueByKey!131 (toList!719 (+!90 lt!29981 (tuple2!2103 lt!29992 (minValue!2074 (v!2494 (underlying!253 thiss!992)))))) lt!29983) e!46078)))

(assert (= (and d!15777 c!10214) b!70437))

(assert (= (and d!15777 (not c!10214)) b!70438))

(assert (= (and b!70438 c!10215) b!70439))

(assert (= (and b!70438 (not c!10215)) b!70440))

(declare-fun m!67625 () Bool)

(assert (=> b!70439 m!67625))

(assert (=> d!14983 d!15777))

(declare-fun d!15779 () Bool)

(declare-fun e!46080 () Bool)

(assert (=> d!15779 e!46080))

(declare-fun res!37684 () Bool)

(assert (=> d!15779 (=> res!37684 e!46080)))

(declare-fun lt!31087 () Bool)

(assert (=> d!15779 (= res!37684 (not lt!31087))))

(declare-fun lt!31086 () Bool)

(assert (=> d!15779 (= lt!31087 lt!31086)))

(declare-fun lt!31088 () Unit!1919)

(declare-fun e!46081 () Unit!1919)

(assert (=> d!15779 (= lt!31088 e!46081)))

(declare-fun c!10216 () Bool)

(assert (=> d!15779 (= c!10216 lt!31086)))

(assert (=> d!15779 (= lt!31086 (containsKey!135 (toList!719 lt!30258) (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> d!15779 (= (contains!714 lt!30258 (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))) lt!31087)))

(declare-fun b!70441 () Bool)

(declare-fun lt!31089 () Unit!1919)

(assert (=> b!70441 (= e!46081 lt!31089)))

(assert (=> b!70441 (= lt!31089 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!719 lt!30258) (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(assert (=> b!70441 (isDefined!84 (getValueByKey!131 (toList!719 lt!30258) (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!70442 () Bool)

(declare-fun Unit!1995 () Unit!1919)

(assert (=> b!70442 (= e!46081 Unit!1995)))

(declare-fun b!70443 () Bool)

(assert (=> b!70443 (= e!46080 (isDefined!84 (getValueByKey!131 (toList!719 lt!30258) (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(assert (= (and d!15779 c!10216) b!70441))

(assert (= (and d!15779 (not c!10216)) b!70442))

(assert (= (and d!15779 (not res!37684)) b!70443))

(declare-fun m!67627 () Bool)

(assert (=> d!15779 m!67627))

(declare-fun m!67629 () Bool)

(assert (=> b!70441 m!67629))

(assert (=> b!70441 m!65029))

(assert (=> b!70441 m!65029))

(declare-fun m!67631 () Bool)

(assert (=> b!70441 m!67631))

(assert (=> b!70443 m!65029))

(assert (=> b!70443 m!65029))

(assert (=> b!70443 m!67631))

(assert (=> d!14901 d!15779))

(declare-fun b!70446 () Bool)

(declare-fun e!46083 () Option!137)

(assert (=> b!70446 (= e!46083 (getValueByKey!131 (t!4972 lt!30259) (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!70445 () Bool)

(declare-fun e!46082 () Option!137)

(assert (=> b!70445 (= e!46082 e!46083)))

(declare-fun c!10218 () Bool)

(assert (=> b!70445 (= c!10218 (and ((_ is Cons!1465) lt!30259) (not (= (_1!1062 (h!2050 lt!30259)) (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))))

(declare-fun b!70447 () Bool)

(assert (=> b!70447 (= e!46083 None!135)))

(declare-fun b!70444 () Bool)

(assert (=> b!70444 (= e!46082 (Some!136 (_2!1062 (h!2050 lt!30259))))))

(declare-fun d!15781 () Bool)

(declare-fun c!10217 () Bool)

(assert (=> d!15781 (= c!10217 (and ((_ is Cons!1465) lt!30259) (= (_1!1062 (h!2050 lt!30259)) (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> d!15781 (= (getValueByKey!131 lt!30259 (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))) e!46082)))

(assert (= (and d!15781 c!10217) b!70444))

(assert (= (and d!15781 (not c!10217)) b!70445))

(assert (= (and b!70445 c!10218) b!70446))

(assert (= (and b!70445 (not c!10218)) b!70447))

(declare-fun m!67633 () Bool)

(assert (=> b!70446 m!67633))

(assert (=> d!14901 d!15781))

(declare-fun d!15783 () Bool)

(assert (=> d!15783 (= (getValueByKey!131 lt!30259 (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))) (Some!136 (_2!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun lt!31090 () Unit!1919)

(assert (=> d!15783 (= lt!31090 (choose!386 lt!30259 (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))) (_2!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun e!46084 () Bool)

(assert (=> d!15783 e!46084))

(declare-fun res!37685 () Bool)

(assert (=> d!15783 (=> (not res!37685) (not e!46084))))

(assert (=> d!15783 (= res!37685 (isStrictlySorted!290 lt!30259))))

(assert (=> d!15783 (= (lemmaContainsTupThenGetReturnValue!48 lt!30259 (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))) (_2!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))) lt!31090)))

(declare-fun b!70448 () Bool)

(declare-fun res!37686 () Bool)

(assert (=> b!70448 (=> (not res!37686) (not e!46084))))

(assert (=> b!70448 (= res!37686 (containsKey!135 lt!30259 (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!70449 () Bool)

(assert (=> b!70449 (= e!46084 (contains!716 lt!30259 (tuple2!2103 (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))) (_2!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(assert (= (and d!15783 res!37685) b!70448))

(assert (= (and b!70448 res!37686) b!70449))

(assert (=> d!15783 m!65023))

(declare-fun m!67635 () Bool)

(assert (=> d!15783 m!67635))

(declare-fun m!67637 () Bool)

(assert (=> d!15783 m!67637))

(declare-fun m!67639 () Bool)

(assert (=> b!70448 m!67639))

(declare-fun m!67641 () Bool)

(assert (=> b!70449 m!67641))

(assert (=> d!14901 d!15783))

(declare-fun b!70450 () Bool)

(declare-fun e!46087 () List!1469)

(assert (=> b!70450 (= e!46087 (insertStrictlySorted!51 (t!4972 (toList!719 lt!29889)) (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))) (_2!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun d!15785 () Bool)

(declare-fun e!46085 () Bool)

(assert (=> d!15785 e!46085))

(declare-fun res!37688 () Bool)

(assert (=> d!15785 (=> (not res!37688) (not e!46085))))

(declare-fun lt!31091 () List!1469)

(assert (=> d!15785 (= res!37688 (isStrictlySorted!290 lt!31091))))

(declare-fun e!46089 () List!1469)

(assert (=> d!15785 (= lt!31091 e!46089)))

(declare-fun c!10219 () Bool)

(assert (=> d!15785 (= c!10219 (and ((_ is Cons!1465) (toList!719 lt!29889)) (bvslt (_1!1062 (h!2050 (toList!719 lt!29889))) (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> d!15785 (isStrictlySorted!290 (toList!719 lt!29889))))

(assert (=> d!15785 (= (insertStrictlySorted!51 (toList!719 lt!29889) (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))) (_2!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))) lt!31091)))

(declare-fun b!70451 () Bool)

(declare-fun c!10221 () Bool)

(declare-fun c!10222 () Bool)

(assert (=> b!70451 (= e!46087 (ite c!10222 (t!4972 (toList!719 lt!29889)) (ite c!10221 (Cons!1465 (h!2050 (toList!719 lt!29889)) (t!4972 (toList!719 lt!29889))) Nil!1466)))))

(declare-fun bm!6053 () Bool)

(declare-fun call!6058 () List!1469)

(declare-fun call!6057 () List!1469)

(assert (=> bm!6053 (= call!6058 call!6057)))

(declare-fun b!70452 () Bool)

(declare-fun e!46088 () List!1469)

(assert (=> b!70452 (= e!46088 call!6058)))

(declare-fun bm!6054 () Bool)

(declare-fun call!6056 () List!1469)

(assert (=> bm!6054 (= call!6057 call!6056)))

(declare-fun bm!6055 () Bool)

(assert (=> bm!6055 (= call!6056 ($colon$colon!64 e!46087 (ite c!10219 (h!2050 (toList!719 lt!29889)) (tuple2!2103 (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))) (_2!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))))

(declare-fun c!10220 () Bool)

(assert (=> bm!6055 (= c!10220 c!10219)))

(declare-fun b!70453 () Bool)

(declare-fun e!46086 () List!1469)

(assert (=> b!70453 (= e!46089 e!46086)))

(assert (=> b!70453 (= c!10222 (and ((_ is Cons!1465) (toList!719 lt!29889)) (= (_1!1062 (h!2050 (toList!719 lt!29889))) (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(declare-fun b!70454 () Bool)

(assert (=> b!70454 (= e!46085 (contains!716 lt!31091 (tuple2!2103 (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))) (_2!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(declare-fun b!70455 () Bool)

(assert (=> b!70455 (= e!46089 call!6056)))

(declare-fun b!70456 () Bool)

(assert (=> b!70456 (= e!46088 call!6058)))

(declare-fun b!70457 () Bool)

(declare-fun res!37687 () Bool)

(assert (=> b!70457 (=> (not res!37687) (not e!46085))))

(assert (=> b!70457 (= res!37687 (containsKey!135 lt!31091 (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992)))))))))

(declare-fun b!70458 () Bool)

(assert (=> b!70458 (= e!46086 call!6057)))

(declare-fun b!70459 () Bool)

(assert (=> b!70459 (= c!10221 (and ((_ is Cons!1465) (toList!719 lt!29889)) (bvsgt (_1!1062 (h!2050 (toList!719 lt!29889))) (_1!1062 (tuple2!2103 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2074 (v!2494 (underlying!253 thiss!992))))))))))

(assert (=> b!70459 (= e!46086 e!46088)))

(assert (= (and d!15785 c!10219) b!70455))

(assert (= (and d!15785 (not c!10219)) b!70453))

(assert (= (and b!70453 c!10222) b!70458))

(assert (= (and b!70453 (not c!10222)) b!70459))

(assert (= (and b!70459 c!10221) b!70452))

(assert (= (and b!70459 (not c!10221)) b!70456))

(assert (= (or b!70452 b!70456) bm!6053))

(assert (= (or b!70458 bm!6053) bm!6054))

(assert (= (or b!70455 bm!6054) bm!6055))

(assert (= (and bm!6055 c!10220) b!70450))

(assert (= (and bm!6055 (not c!10220)) b!70451))

(assert (= (and d!15785 res!37688) b!70457))

(assert (= (and b!70457 res!37687) b!70454))

(declare-fun m!67643 () Bool)

(assert (=> b!70454 m!67643))

(declare-fun m!67645 () Bool)

(assert (=> d!15785 m!67645))

(assert (=> d!15785 m!64969))

(declare-fun m!67647 () Bool)

(assert (=> b!70450 m!67647))

(declare-fun m!67649 () Bool)

(assert (=> bm!6055 m!67649))

(declare-fun m!67651 () Bool)

(assert (=> b!70457 m!67651))

(assert (=> d!14901 d!15785))

(declare-fun d!15787 () Bool)

(declare-fun res!37689 () Bool)

(declare-fun e!46090 () Bool)

(assert (=> d!15787 (=> res!37689 e!46090)))

(assert (=> d!15787 (= res!37689 (and ((_ is Cons!1465) lt!30240) (= (_1!1062 (h!2050 lt!30240)) (_1!1062 lt!29892))))))

(assert (=> d!15787 (= (containsKey!135 lt!30240 (_1!1062 lt!29892)) e!46090)))

(declare-fun b!70460 () Bool)

(declare-fun e!46091 () Bool)

(assert (=> b!70460 (= e!46090 e!46091)))

(declare-fun res!37690 () Bool)

(assert (=> b!70460 (=> (not res!37690) (not e!46091))))

(assert (=> b!70460 (= res!37690 (and (or (not ((_ is Cons!1465) lt!30240)) (bvsle (_1!1062 (h!2050 lt!30240)) (_1!1062 lt!29892))) ((_ is Cons!1465) lt!30240) (bvslt (_1!1062 (h!2050 lt!30240)) (_1!1062 lt!29892))))))

(declare-fun b!70461 () Bool)

(assert (=> b!70461 (= e!46091 (containsKey!135 (t!4972 lt!30240) (_1!1062 lt!29892)))))

(assert (= (and d!15787 (not res!37689)) b!70460))

(assert (= (and b!70460 res!37690) b!70461))

(declare-fun m!67653 () Bool)

(assert (=> b!70461 m!67653))

(assert (=> b!69017 d!15787))

(declare-fun b!70462 () Bool)

(declare-fun e!46092 () Bool)

(declare-fun e!46093 () Bool)

(assert (=> b!70462 (= e!46092 e!46093)))

(declare-fun c!10223 () Bool)

(assert (=> b!70462 (= c!10223 (validKeyInArray!0 (select (arr!1841 (_keys!3812 (_2!1061 lt!30148))) #b00000000000000000000000000000000)))))

(declare-fun b!70463 () Bool)

(declare-fun e!46094 () Bool)

(assert (=> b!70463 (= e!46093 e!46094)))

(declare-fun lt!31092 () (_ BitVec 64))

(assert (=> b!70463 (= lt!31092 (select (arr!1841 (_keys!3812 (_2!1061 lt!30148))) #b00000000000000000000000000000000))))

(declare-fun lt!31093 () Unit!1919)

(assert (=> b!70463 (= lt!31093 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3812 (_2!1061 lt!30148)) lt!31092 #b00000000000000000000000000000000))))

(assert (=> b!70463 (arrayContainsKey!0 (_keys!3812 (_2!1061 lt!30148)) lt!31092 #b00000000000000000000000000000000)))

(declare-fun lt!31094 () Unit!1919)

(assert (=> b!70463 (= lt!31094 lt!31093)))

(declare-fun res!37692 () Bool)

(assert (=> b!70463 (= res!37692 (= (seekEntryOrOpen!0 (select (arr!1841 (_keys!3812 (_2!1061 lt!30148))) #b00000000000000000000000000000000) (_keys!3812 (_2!1061 lt!30148)) (mask!6113 (_2!1061 lt!30148))) (Found!234 #b00000000000000000000000000000000)))))

(assert (=> b!70463 (=> (not res!37692) (not e!46094))))

(declare-fun b!70464 () Bool)

(declare-fun call!6059 () Bool)

(assert (=> b!70464 (= e!46093 call!6059)))

(declare-fun b!70465 () Bool)

(assert (=> b!70465 (= e!46094 call!6059)))

(declare-fun bm!6056 () Bool)

(assert (=> bm!6056 (= call!6059 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3812 (_2!1061 lt!30148)) (mask!6113 (_2!1061 lt!30148))))))

(declare-fun d!15789 () Bool)

(declare-fun res!37691 () Bool)

(assert (=> d!15789 (=> res!37691 e!46092)))

(assert (=> d!15789 (= res!37691 (bvsge #b00000000000000000000000000000000 (size!2077 (_keys!3812 (_2!1061 lt!30148)))))))

(assert (=> d!15789 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3812 (_2!1061 lt!30148)) (mask!6113 (_2!1061 lt!30148))) e!46092)))

(assert (= (and d!15789 (not res!37691)) b!70462))

(assert (= (and b!70462 c!10223) b!70463))

(assert (= (and b!70462 (not c!10223)) b!70464))

(assert (= (and b!70463 res!37692) b!70465))

(assert (= (or b!70465 b!70464) bm!6056))

(assert (=> b!70462 m!65967))

(assert (=> b!70462 m!65967))

(assert (=> b!70462 m!65969))

(assert (=> b!70463 m!65967))

(declare-fun m!67655 () Bool)

(assert (=> b!70463 m!67655))

(declare-fun m!67657 () Bool)

(assert (=> b!70463 m!67657))

(assert (=> b!70463 m!65967))

(declare-fun m!67659 () Bool)

(assert (=> b!70463 m!67659))

(declare-fun m!67661 () Bool)

(assert (=> bm!6056 m!67661))

(assert (=> b!69144 d!15789))

(declare-fun b!70466 () Bool)

(declare-fun e!46095 () Bool)

(assert (=> b!70466 (= e!46095 tp_is_empty!2457)))

(declare-fun mapNonEmpty!3115 () Bool)

(declare-fun mapRes!3115 () Bool)

(declare-fun tp!8425 () Bool)

(assert (=> mapNonEmpty!3115 (= mapRes!3115 (and tp!8425 e!46095))))

(declare-fun mapRest!3115 () (Array (_ BitVec 32) ValueCell!885))

(declare-fun mapKey!3115 () (_ BitVec 32))

(declare-fun mapValue!3115 () ValueCell!885)

(assert (=> mapNonEmpty!3115 (= mapRest!3114 (store mapRest!3115 mapKey!3115 mapValue!3115))))

(declare-fun mapIsEmpty!3115 () Bool)

(assert (=> mapIsEmpty!3115 mapRes!3115))

(declare-fun b!70467 () Bool)

(declare-fun e!46096 () Bool)

(assert (=> b!70467 (= e!46096 tp_is_empty!2457)))

(declare-fun condMapEmpty!3115 () Bool)

(declare-fun mapDefault!3115 () ValueCell!885)

(assert (=> mapNonEmpty!3114 (= condMapEmpty!3115 (= mapRest!3114 ((as const (Array (_ BitVec 32) ValueCell!885)) mapDefault!3115)))))

(assert (=> mapNonEmpty!3114 (= tp!8424 (and e!46096 mapRes!3115))))

(assert (= (and mapNonEmpty!3114 condMapEmpty!3115) mapIsEmpty!3115))

(assert (= (and mapNonEmpty!3114 (not condMapEmpty!3115)) mapNonEmpty!3115))

(assert (= (and mapNonEmpty!3115 ((_ is ValueCellFull!885) mapValue!3115)) b!70466))

(assert (= (and mapNonEmpty!3114 ((_ is ValueCellFull!885) mapDefault!3115)) b!70467))

(declare-fun m!67663 () Bool)

(assert (=> mapNonEmpty!3115 m!67663))

(declare-fun b!70468 () Bool)

(declare-fun e!46097 () Bool)

(assert (=> b!70468 (= e!46097 tp_is_empty!2457)))

(declare-fun mapNonEmpty!3116 () Bool)

(declare-fun mapRes!3116 () Bool)

(declare-fun tp!8426 () Bool)

(assert (=> mapNonEmpty!3116 (= mapRes!3116 (and tp!8426 e!46097))))

(declare-fun mapValue!3116 () ValueCell!885)

(declare-fun mapKey!3116 () (_ BitVec 32))

(declare-fun mapRest!3116 () (Array (_ BitVec 32) ValueCell!885))

(assert (=> mapNonEmpty!3116 (= mapRest!3113 (store mapRest!3116 mapKey!3116 mapValue!3116))))

(declare-fun mapIsEmpty!3116 () Bool)

(assert (=> mapIsEmpty!3116 mapRes!3116))

(declare-fun b!70469 () Bool)

(declare-fun e!46098 () Bool)

(assert (=> b!70469 (= e!46098 tp_is_empty!2457)))

(declare-fun condMapEmpty!3116 () Bool)

(declare-fun mapDefault!3116 () ValueCell!885)

(assert (=> mapNonEmpty!3113 (= condMapEmpty!3116 (= mapRest!3113 ((as const (Array (_ BitVec 32) ValueCell!885)) mapDefault!3116)))))

(assert (=> mapNonEmpty!3113 (= tp!8423 (and e!46098 mapRes!3116))))

(assert (= (and mapNonEmpty!3113 condMapEmpty!3116) mapIsEmpty!3116))

(assert (= (and mapNonEmpty!3113 (not condMapEmpty!3116)) mapNonEmpty!3116))

(assert (= (and mapNonEmpty!3116 ((_ is ValueCellFull!885) mapValue!3116)) b!70468))

(assert (= (and mapNonEmpty!3113 ((_ is ValueCellFull!885) mapDefault!3116)) b!70469))

(declare-fun m!67665 () Bool)

(assert (=> mapNonEmpty!3116 m!67665))

(declare-fun b_lambda!3141 () Bool)

(assert (= b_lambda!3131 (or (and b!68478 b_free!2081 (= (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) (defaultEntry!2168 newMap!16))) (and b!68465 b_free!2083) b_lambda!3141)))

(declare-fun b_lambda!3143 () Bool)

(assert (= b_lambda!3111 (or (and b!68478 b_free!2081 (= (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) (defaultEntry!2168 newMap!16))) (and b!68465 b_free!2083) b_lambda!3143)))

(declare-fun b_lambda!3145 () Bool)

(assert (= b_lambda!3123 (or (and b!68478 b_free!2081 (= (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) (defaultEntry!2168 newMap!16))) (and b!68465 b_free!2083) b_lambda!3145)))

(declare-fun b_lambda!3147 () Bool)

(assert (= b_lambda!3113 (or (and b!68478 b_free!2081 (= (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) (defaultEntry!2168 newMap!16))) (and b!68465 b_free!2083) b_lambda!3147)))

(declare-fun b_lambda!3149 () Bool)

(assert (= b_lambda!3135 (or (and b!68478 b_free!2081) (and b!68465 b_free!2083 (= (defaultEntry!2168 newMap!16) (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))))) b_lambda!3149)))

(declare-fun b_lambda!3151 () Bool)

(assert (= b_lambda!3129 (or (and b!68478 b_free!2081 (= (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) (defaultEntry!2168 newMap!16))) (and b!68465 b_free!2083) b_lambda!3151)))

(declare-fun b_lambda!3153 () Bool)

(assert (= b_lambda!3119 (or (and b!68478 b_free!2081 (= (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) (defaultEntry!2168 newMap!16))) (and b!68465 b_free!2083) b_lambda!3153)))

(declare-fun b_lambda!3155 () Bool)

(assert (= b_lambda!3137 (or (and b!68478 b_free!2081 (= (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) (defaultEntry!2168 newMap!16))) (and b!68465 b_free!2083) b_lambda!3155)))

(declare-fun b_lambda!3157 () Bool)

(assert (= b_lambda!3133 (or (and b!68478 b_free!2081) (and b!68465 b_free!2083 (= (defaultEntry!2168 newMap!16) (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))))) b_lambda!3157)))

(declare-fun b_lambda!3159 () Bool)

(assert (= b_lambda!3121 (or (and b!68478 b_free!2081 (= (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) (defaultEntry!2168 newMap!16))) (and b!68465 b_free!2083) b_lambda!3159)))

(declare-fun b_lambda!3161 () Bool)

(assert (= b_lambda!3115 (or (and b!68478 b_free!2081 (= (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) (defaultEntry!2168 newMap!16))) (and b!68465 b_free!2083) b_lambda!3161)))

(declare-fun b_lambda!3163 () Bool)

(assert (= b_lambda!3125 (or (and b!68478 b_free!2081 (= (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) (defaultEntry!2168 newMap!16))) (and b!68465 b_free!2083) b_lambda!3163)))

(declare-fun b_lambda!3165 () Bool)

(assert (= b_lambda!3139 (or (and b!68478 b_free!2081 (= (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) (defaultEntry!2168 newMap!16))) (and b!68465 b_free!2083) b_lambda!3165)))

(declare-fun b_lambda!3167 () Bool)

(assert (= b_lambda!3127 (or (and b!68478 b_free!2081 (= (defaultEntry!2168 (v!2494 (underlying!253 thiss!992))) (defaultEntry!2168 newMap!16))) (and b!68465 b_free!2083) b_lambda!3167)))

(check-sat (not b!69608) (not d!15627) (not b!70428) (not b!69933) (not bm!6018) (not d!15735) (not b!69499) (not bm!5957) (not bm!6006) (not b!69440) (not b!70450) (not d!15373) (not b!70461) (not bm!6035) (not d!15719) (not b!70023) (not d!15113) (not d!15125) (not bm!5967) (not b_next!2081) (not b!70232) (not b!70389) (not b!69603) (not b!69688) (not b!69835) (not b!70343) (not b!70092) (not d!15391) (not b!69342) (not b!69574) (not b!69386) (not d!15317) (not b!69770) (not b!69327) (not d!15393) (not b!70193) (not bm!5965) (not b!69939) (not d!15513) (not d!15633) (not d!15591) (not b!70375) (not d!15553) (not b!70345) (not d!15201) (not b!69671) (not bm!5950) (not b_lambda!3089) (not d!15677) (not b!69672) (not d!15281) (not d!15367) (not b!70409) (not b!70251) (not b!70155) (not d!15577) (not b!69920) (not b!69375) (not b!69435) (not b!69802) (not b!69691) (not b!69854) (not d!15703) (not b!69561) (not b!70439) (not b!69514) (not d!15537) (not b!69885) (not b!70016) (not b!70270) (not b!70019) (not b!70317) (not b!69625) (not b!70285) (not b!69798) (not d!15465) (not b!70417) (not b!70164) (not d!15601) (not bm!5974) (not b!69418) (not b_lambda!3109) (not bm!5964) (not d!15511) (not b!69359) (not b!70029) (not b!70357) (not b!69595) (not b!69889) (not b!70441) (not b!69794) (not b!70322) (not b!70404) (not d!15681) (not d!15037) (not d!15119) (not d!15523) (not b!70364) (not b!69851) (not b!70011) (not b!70108) (not d!15471) (not b!69776) (not b!69596) (not b!69960) (not b!69902) (not b!70097) (not d!15521) (not b!69449) (not d!15337) (not b!69549) (not bm!5933) (not d!15549) (not d!15335) (not b!69354) (not b!70274) (not b!69329) (not b!69767) (not mapNonEmpty!3116) (not b!69429) (not b!69356) (not d!15641) (not b!70430) (not d!15121) (not b!70089) (not d!15413) (not d!15487) (not b!69781) (not b!69565) (not b!70420) (not d!15359) (not b!70359) (not b!69645) (not d!15635) (not b!69534) (not b!69539) (not bm!5958) (not d!15563) (not b!70400) (not b!70080) (not b!70187) (not b!69649) (not b!70294) (not b!70182) (not d!15489) (not bm!5980) (not b!70241) (not b!69463) (not b!69862) (not b!69523) (not b!69864) (not d!15619) (not b_lambda!3165) (not d!15205) (not d!15525) (not d!15355) (not d!15629) (not b!69812) (not d!15149) (not b!69968) (not d!15763) (not d!15741) (not b!70310) (not d!15289) (not d!15687) (not b!69421) (not b!70287) (not b!69847) (not b!70448) (not b!70408) (not b!69527) (not b!70300) (not bm!6040) (not b!70223) (not b!70418) (not b_lambda!3143) (not b!69900) (not b_lambda!3167) (not d!15517) (not b!70367) (not b!69739) (not b!69570) (not d!15301) (not bm!6024) (not bm!5995) (not d!15499) (not b!69320) (not b!69504) (not b!70238) (not d!15059) (not b!69946) (not d!15693) (not b!69444) (not d!15639) (not d!15061) (not b!70101) (not d!15437) (not b!70454) (not b!70218) (not d!15361) (not b!69966) (not b!69764) (not d!15265) (not d!15433) (not b!69614) (not b!70289) (not b!69646) (not b!69746) b_and!4325 (not b!70185) (not bm!6016) (not bm!6021) (not b!69827) (not b!70140) (not b!70075) (not bm!5939) (not b!70382) (not b!70324) (not b!70402) (not b!69777) (not b!69526) (not b!70392) (not bm!6027) (not d!15287) (not b!69955) (not b!70260) (not b!69476) (not d!15665) (not b!70259) (not b!69528) (not d!15187) (not b!69944) (not b!69345) (not d!15217) (not b!69384) (not b!69452) (not b!70086) (not b!70090) (not b!69457) (not bm!5987) (not b!69665) (not b_lambda!3141) (not b!69541) (not b!69619) (not b!69996) (not b_lambda!3149) (not bm!6000) (not bm!5938) (not b!70384) (not b!69943) (not b_lambda!3101) (not b!69464) (not b!69866) (not bm!5949) (not d!15089) (not b!70394) (not bm!6008) (not d!15785) (not b!69988) (not b!70427) (not b!69870) (not b!70099) (not b!70152) (not d!15079) (not b!70143) (not b!69535) (not b!69791) (not bm!6033) (not b_lambda!3085) (not b!69986) (not d!15099) (not bm!5946) (not b!69519) (not b_lambda!3159) (not b!70379) (not b!69795) (not b!69470) (not bm!6043) (not d!15721) (not d!15213) (not b!70449) (not b!70234) (not d!15129) (not b!70222) (not b!69707) (not d!15313) (not d!15349) (not b!70368) (not b!70035) (not b!69683) (not d!15097) (not b!69744) (not b!69878) (not b!70072) (not b!69876) (not d!15551) (not b!69416) (not b!69553) (not d!15299) (not d!15711) (not b!69361) (not bm!5954) (not d!15095) (not b!70167) (not b!69927) (not b!70312) (not b!69752) (not b!70003) (not b!69662) (not b!69769) tp_is_empty!2457 (not b!70256) (not b!70158) (not d!15151) (not b!69622) (not d!15561) (not b!70339) (not d!15273) (not bm!5959) (not d!15383) (not bm!5955) (not d!15717) (not b!69779) (not b!69759) (not b!69443) (not b!69641) (not b!69453) (not d!15195) (not b!70123) (not b!69367) (not b!69471) (not d!15653) (not d!15353) (not b!70457) (not b!69994) (not bm!5968) (not d!15571) (not d!15679) (not b!69702) (not b!69780) (not d!15651) (not d!15507) (not b!70091) (not b!69370) (not d!15585) (not b!70248) (not b!69382) (not b!69693) (not d!15539) (not bm!5966) (not d!15269) (not b!69334) (not b!69909) (not b!70196) (not b!69621) (not b!70266) (not d!15045) (not b!70217) (not b!69494) (not b!70335) (not b!70046) (not d!15139) (not b!70131) (not b!69589) (not d!15133) (not b!69977) (not d!15111) (not b!69923) (not b_lambda!3145) (not d!15239) (not b!70085) (not b!70314) (not b!69907) (not b!69379) (not b!69784) (not bm!5943) (not bm!5937) (not d!15737) (not d!15093) (not b!69477) (not d!15377) (not b!70212) (not b!70276) (not d!15519) (not d!15055) (not d!15603) (not b!70302) (not d!15509) (not b!70170) (not b!70171) (not b!69810) (not b!69913) (not b!69839) (not b_lambda!3161) (not d!15739) (not d!15443) (not b!69422) (not b!69857) (not d!15613) (not mapNonEmpty!3115) (not b!69460) (not d!15419) (not b!69775) (not b!70323) (not b!70148) (not b!70264) (not b!70129) (not d!15101) (not b!70005) (not d!15715) (not d!15757) (not b!69763) (not b!69719) (not b_lambda!3077) (not d!15403) (not b!69419) (not b!69712) (not d!15733) (not b!69932) (not b!70279) (not b!70113) (not d!15501) (not b!69973) (not b!69882) (not b!70114) (not d!15661) (not b!69643) (not b!70431) (not b_lambda!3163) (not d!15671) (not d!15199) (not d!15749) (not b!69942) (not b!70341) (not b!70105) (not b!69880) (not b!70010) (not b!69451) (not b!69352) (not d!15609) (not b_lambda!3117) (not b!69660) (not d!15243) (not b!69446) (not d!15463) (not d!15611) (not b!69362) (not b!69521) (not b!69990) (not bm!6030) (not d!15233) (not bm!6050) (not d!15767) (not bm!5988) (not b!70406) (not b!69925) (not d!15491) (not b!70227) (not bm!5973) (not d!15339) (not d!15669) (not d!15569) (not b!70216) (not b!70372) (not b!69522) (not b!69590) (not d!15779) (not b!69879) (not b!70340) (not b!70422) (not b!70425) (not d!15253) (not d!15555) (not d!15237) (not b_lambda!3157) (not b!69556) (not b!69782) (not b!69849) (not b!69679) (not b!70209) (not b!69805) (not b!70250) (not b!70353) (not bm!6055) (not b!70296) (not d!15755) (not d!15745) (not b!70037) (not d!15751) (not b!69377) (not b!70118) (not b!70133) (not b!70315) (not b!70008) (not b!70443) (not d!15427) (not b!69901) (not b!70344) (not b!69516) (not d!15131) (not b!70331) (not b!69695) (not d!15753) (not b!70026) (not d!15449) (not bm!6034) (not d!15759) (not b!70423) (not b!70395) (not b!70204) (not b!69846) (not b!69478) (not b!69685) (not b!69815) (not b!69830) (not bm!6036) (not b!70271) (not d!15049) (not b_lambda!3155) (not b!70220) (not b!70352) (not b!70028) (not b!70233) (not b!70125) (not d!15027) (not bm!5992) (not d!15615) (not d!15493) (not bm!6011) (not b!69896) (not d!15495) (not d!15159) (not d!15251) (not b!69822) (not d!15761) (not b!69915) (not d!15189) (not b!69715) (not b!69893) (not bm!5972) (not b!70396) (not b!70351) (not d!15415) (not d!15181) (not b!70415) (not d!15325) (not bm!5977) (not d!15459) (not d!15623) (not bm!5947) (not b!70263) (not d!15169) (not d!15073) (not b!70162) (not d!15141) (not b!69648) (not b!69588) (not b!70190) (not b!70288) (not b!70277) (not bm!6045) (not b!70261) (not d!15529) (not d!15479) (not d!15503) (not d!15483) (not b_lambda!3103) (not bm!6017) (not b!69686) (not d!15071) (not bm!5932) (not b!69546) (not d!15617) (not b!69738) (not bm!6007) (not b!70032) (not b!70077) (not bm!5963) (not b!70122) (not b!69663) (not b!69948) (not d!15375) (not b!69758) (not b!69809) (not b!69428) (not b!69612) (not b!70414) (not b!70398) (not b!69601) (not b!70413) (not d!15267) (not b!69908) (not d!15305) (not b!69837) (not d!15783) (not b!70161) (not b!70178) (not b!69533) (not d!15347) (not b!69628) (not b!69484) (not b!69656) (not d!15655) (not b!70381) (not bm!6052) (not b!69699) (not d!15107) (not b!70195) (not b_lambda!3151) (not b!69825) (not b!69503) (not b!69348) (not bm!5986) (not b!69834) (not d!15769) (not b!70012) (not b!69653) (not b!69755) (not b_lambda!3107) (not b!69797) (not d!15625) (not d!15477) (not b!70175) (not b!70136) (not b!69930) (not b!69970) (not b!70421) (not b!70282) (not b!69787) (not d!15407) (not d!15557) (not d!15029) (not b!69578) (not b!69957) (not b!70079) (not b!69378) (not d!15091) (not b_next!2083) (not bm!6056) (not b!69624) (not b!70446) (not b!69433) (not d!15077) (not b!70100) (not d!15607) (not b!69517) (not b_lambda!3087) (not b!69482) (not d!15743) (not b!69819) (not b!70088) (not b!69501) (not b!70119) (not b!70284) (not b!70039) (not d!15409) (not b!69981) (not b!69793) (not b!70188) (not d!15691) (not b!70387) (not b!70169) (not d!15191) (not b!69581) (not d!15515) (not b!69710) (not b!70399) (not d!15363) (not d!15475) (not b!69316) (not d!15255) (not b!70295) (not b!69817) (not b!69975) (not d!15379) (not d!15105) (not b_lambda!3147) (not bm!5956) (not d!15331) (not b!69941) (not d!15597) (not bm!5936) (not b!70197) (not d!15747) (not bm!6051) (not b!69888) (not b!70183) (not d!15165) (not b!69323) (not b!70230) (not d!15469) (not b!70245) (not b!69635) (not d!15315) (not b!70265) (not b!70432) (not b!70337) (not b!69829) (not b!69741) (not b!69469) (not d!15637) (not d!15203) (not d!15485) (not d!15593) (not d!15117) (not b!70225) (not d!15497) (not b!69597) (not b!69832) (not b!69513) (not d!15215) (not b!69964) (not b!69848) (not b!69747) (not b!70135) (not b!70269) (not d!15279) (not b!70211) (not b!69762) (not b!69328) (not b!70117) (not d!15589) (not b!69865) (not b!70370) (not d!15387) (not bm!6005) (not d!15249) (not d!15729) (not b!70328) (not b!69922) (not b!69856) (not b!69979) (not b!70115) (not bm!5991) (not b!70320) (not d!15505) b_and!4323 (not b!69572) (not b!69992) (not d!15371) (not b_lambda!3105) (not d!15381) (not bm!6046) (not d!15345) (not d!15245) (not d!15329) (not bm!6001) (not b!69668) (not d!15231) (not d!15439) (not d!15575) (not b!69873) (not bm!6044) (not b!69676) (not b!69844) (not b!69338) (not d!15319) (not b!69929) (not b!69694) (not d!15323) (not b!70214) (not bm!5999) (not b!70116) (not d!15053) (not b!69427) (not b!69887) (not d!15227) (not b_lambda!3153) (not b!70346) (not b!70434) (not d!15275) (not d!15365) (not b!69748) (not d!15043) (not b!70436) (not b!69620) (not d!15067) (not d!15341) (not d!15573) (not b!69841) (not b!70253) (not d!15621) (not b!69644) (not b!69405) (not b!70111) (not b!70462) (not bm!5983) (not b!70087) (not b!70002) (not b!69670) (not b!69859) (not b!69940) (not b!69952) (not d!15583) (not b!70411) (not b!70094) (not b!69623) (not d!15209) (not d!15631) (not b!69999) (not b!69639) (not d!15033) (not b!69938) (not b!70307) (not b!69576) (not b!69489) (not b!69972) (not b!70267) (not b!70127) (not b!70390) (not b!69985) (not b!70463) (not bm!5998) (not d!15185) (not b!70078) (not b!69363) (not b!69950) (not d!15689) (not d!15123) (not b!70201) (not bm!5948) (not b!69420) (not d!15545) (not b!69778))
(check-sat b_and!4323 b_and!4325 (not b_next!2081) (not b_next!2083))
