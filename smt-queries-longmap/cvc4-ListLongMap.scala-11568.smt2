; Options: -q --produce-models --incremental --print-success --lang smt2.6
(declare-fun start!134790 () Bool)

(assert start!134790)

(declare-fun res!1073849 () Bool)

(declare-fun e!876371 () Bool)

(assert (=> start!134790 (=> (not res!1073849) (not e!876371))))

(declare-fun mask!889 () (_ BitVec 32))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> start!134790 (= res!1073849 (validMask!0 mask!889))))

(assert (=> start!134790 e!876371))

(assert (=> start!134790 true))

(declare-datatypes ((array!104908 0))(
  ( (array!104909 (arr!50625 (Array (_ BitVec 32) (_ BitVec 64))) (size!51175 (_ BitVec 32))) )
))
(declare-fun _keys!600 () array!104908)

(declare-fun array_inv!39352 (array!104908) Bool)

(assert (=> start!134790 (array_inv!39352 _keys!600)))

(declare-fun b!1571734 () Bool)

(declare-fun res!1073850 () Bool)

(assert (=> b!1571734 (=> (not res!1073850) (not e!876371))))

(assert (=> b!1571734 (= res!1073850 (= (size!51175 _keys!600) (bvadd #b00000000000000000000000000000001 mask!889)))))

(declare-fun b!1571735 () Bool)

(declare-fun res!1073848 () Bool)

(assert (=> b!1571735 (=> (not res!1073848) (not e!876371))))

(declare-fun k!754 () (_ BitVec 64))

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!1571735 (= res!1073848 (validKeyInArray!0 k!754))))

(declare-fun b!1571736 () Bool)

(declare-fun lt!673705 () (_ BitVec 32))

(assert (=> b!1571736 (= e!876371 (and (bvsge mask!889 #b00000000000000000000000000000000) (or (bvslt lt!673705 #b00000000000000000000000000000000) (bvsge lt!673705 (bvadd #b00000000000000000000000000000001 mask!889)))))))

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!1571736 (= lt!673705 (toIndex!0 k!754 mask!889))))

(assert (= (and start!134790 res!1073849) b!1571734))

(assert (= (and b!1571734 res!1073850) b!1571735))

(assert (= (and b!1571735 res!1073848) b!1571736))

(declare-fun m!1445615 () Bool)

(assert (=> start!134790 m!1445615))

(declare-fun m!1445617 () Bool)

(assert (=> start!134790 m!1445617))

(declare-fun m!1445619 () Bool)

(assert (=> b!1571735 m!1445619))

(declare-fun m!1445621 () Bool)

(assert (=> b!1571736 m!1445621))

(push 1)

(assert (not start!134790))

(assert (not b!1571735))

(assert (not b!1571736))

(check-sat)

(pop 1)

(push 1)

(check-sat)

(get-model)

(pop 1)

(declare-fun d!164643 () Bool)

(assert (=> d!164643 (= (validMask!0 mask!889) (and (or (= mask!889 #b00000000000000000000000000000111) (= mask!889 #b00000000000000000000000000001111) (= mask!889 #b00000000000000000000000000011111) (= mask!889 #b00000000000000000000000000111111) (= mask!889 #b00000000000000000000000001111111) (= mask!889 #b00000000000000000000000011111111) (= mask!889 #b00000000000000000000000111111111) (= mask!889 #b00000000000000000000001111111111) (= mask!889 #b00000000000000000000011111111111) (= mask!889 #b00000000000000000000111111111111) (= mask!889 #b00000000000000000001111111111111) (= mask!889 #b00000000000000000011111111111111) (= mask!889 #b00000000000000000111111111111111) (= mask!889 #b00000000000000001111111111111111) (= mask!889 #b00000000000000011111111111111111) (= mask!889 #b00000000000000111111111111111111) (= mask!889 #b00000000000001111111111111111111) (= mask!889 #b00000000000011111111111111111111) (= mask!889 #b00000000000111111111111111111111) (= mask!889 #b00000000001111111111111111111111) (= mask!889 #b00000000011111111111111111111111) (= mask!889 #b00000000111111111111111111111111) (= mask!889 #b00000001111111111111111111111111) (= mask!889 #b00000011111111111111111111111111) (= mask!889 #b00000111111111111111111111111111) (= mask!889 #b00001111111111111111111111111111) (= mask!889 #b00011111111111111111111111111111) (= mask!889 #b00111111111111111111111111111111)) (bvsle mask!889 #b00111111111111111111111111111111)))))

(assert (=> start!134790 d!164643))

(declare-fun d!164653 () Bool)

(assert (=> d!164653 (= (array_inv!39352 _keys!600) (bvsge (size!51175 _keys!600) #b00000000000000000000000000000000))))

(assert (=> start!134790 d!164653))

(declare-fun d!164655 () Bool)

(assert (=> d!164655 (= (validKeyInArray!0 k!754) (and (not (= k!754 #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= k!754 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!1571735 d!164655))

(declare-fun d!164657 () Bool)

(declare-fun lt!673723 () (_ BitVec 32))

(declare-fun lt!673722 () (_ BitVec 32))

(assert (=> d!164657 (= lt!673723 (bvmul (bvxor lt!673722 (bvlshr lt!673722 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!164657 (= lt!673722 ((_ extract 31 0) (bvand (bvxor k!754 (bvlshr k!754 #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!164657 (and (bvsge mask!889 #b00000000000000000000000000000000) (let ((res!1073853 (let ((h!38209 ((_ extract 31 0) (bvand (bvxor k!754 (bvlshr k!754 #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!141324 (bvmul (bvxor h!38209 (bvlshr h!38209 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!141324 (bvlshr x!141324 #b00000000000000000000000000001101)) mask!889))))) (and (bvslt res!1073853 (bvadd mask!889 #b00000000000000000000000000000001)) (bvsge res!1073853 #b00000000000000000000000000000000))))))

(assert (=> d!164657 (= (toIndex!0 k!754 mask!889) (bvand (bvxor lt!673723 (bvlshr lt!673723 #b00000000000000000000000000001101)) mask!889))))

(assert (=> b!1571736 d!164657))

(push 1)

(check-sat)

