; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!29976 () Bool)

(assert start!29976)

(declare-fun res!158787 () Bool)

(declare-fun e!190050 () Bool)

(assert (=> start!29976 (=> (not res!158787) (not e!190050))))

(declare-fun mask!3709 () (_ BitVec 32))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> start!29976 (= res!158787 (validMask!0 mask!3709))))

(assert (=> start!29976 e!190050))

(assert (=> start!29976 true))

(declare-datatypes ((array!15209 0))(
  ( (array!15210 (arr!7197 (Array (_ BitVec 32) (_ BitVec 64))) (size!7549 (_ BitVec 32))) )
))
(declare-fun a!3293 () array!15209)

(declare-fun array_inv!5160 (array!15209) Bool)

(assert (=> start!29976 (array_inv!5160 a!3293)))

(declare-fun b!301035 () Bool)

(declare-fun res!158786 () Bool)

(assert (=> b!301035 (=> (not res!158786) (not e!190050))))

(declare-fun i!1240 () (_ BitVec 32))

(assert (=> b!301035 (= res!158786 (and (= (size!7549 a!3293) (bvadd #b00000000000000000000000000000001 mask!3709)) (bvsge i!1240 #b00000000000000000000000000000000) (bvslt i!1240 (size!7549 a!3293))))))

(declare-fun b!301036 () Bool)

(declare-fun res!158785 () Bool)

(assert (=> b!301036 (=> (not res!158785) (not e!190050))))

(declare-fun k0!2441 () (_ BitVec 64))

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!301036 (= res!158785 (validKeyInArray!0 k0!2441))))

(declare-fun b!301037 () Bool)

(assert (=> b!301037 (= e!190050 (and (bvslt #b00000000000000000000000000000000 (size!7549 a!3293)) (bvsge (size!7549 a!3293) #b01111111111111111111111111111111)))))

(assert (= (and start!29976 res!158787) b!301035))

(assert (= (and b!301035 res!158786) b!301036))

(assert (= (and b!301036 res!158785) b!301037))

(declare-fun m!312933 () Bool)

(assert (=> start!29976 m!312933))

(declare-fun m!312935 () Bool)

(assert (=> start!29976 m!312935))

(declare-fun m!312937 () Bool)

(assert (=> b!301036 m!312937))

(check-sat (not b!301036) (not start!29976))
(check-sat)
(get-model)

(declare-fun d!67837 () Bool)

(assert (=> d!67837 (= (validKeyInArray!0 k0!2441) (and (not (= k0!2441 #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= k0!2441 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!301036 d!67837))

(declare-fun d!67839 () Bool)

(assert (=> d!67839 (= (validMask!0 mask!3709) (and (or (= mask!3709 #b00000000000000000000000000000111) (= mask!3709 #b00000000000000000000000000001111) (= mask!3709 #b00000000000000000000000000011111) (= mask!3709 #b00000000000000000000000000111111) (= mask!3709 #b00000000000000000000000001111111) (= mask!3709 #b00000000000000000000000011111111) (= mask!3709 #b00000000000000000000000111111111) (= mask!3709 #b00000000000000000000001111111111) (= mask!3709 #b00000000000000000000011111111111) (= mask!3709 #b00000000000000000000111111111111) (= mask!3709 #b00000000000000000001111111111111) (= mask!3709 #b00000000000000000011111111111111) (= mask!3709 #b00000000000000000111111111111111) (= mask!3709 #b00000000000000001111111111111111) (= mask!3709 #b00000000000000011111111111111111) (= mask!3709 #b00000000000000111111111111111111) (= mask!3709 #b00000000000001111111111111111111) (= mask!3709 #b00000000000011111111111111111111) (= mask!3709 #b00000000000111111111111111111111) (= mask!3709 #b00000000001111111111111111111111) (= mask!3709 #b00000000011111111111111111111111) (= mask!3709 #b00000000111111111111111111111111) (= mask!3709 #b00000001111111111111111111111111) (= mask!3709 #b00000011111111111111111111111111) (= mask!3709 #b00000111111111111111111111111111) (= mask!3709 #b00001111111111111111111111111111) (= mask!3709 #b00011111111111111111111111111111) (= mask!3709 #b00111111111111111111111111111111)) (bvsle mask!3709 #b00111111111111111111111111111111)))))

(assert (=> start!29976 d!67839))

(declare-fun d!67849 () Bool)

(assert (=> d!67849 (= (array_inv!5160 a!3293) (bvsge (size!7549 a!3293) #b00000000000000000000000000000000))))

(assert (=> start!29976 d!67849))

(check-sat)
