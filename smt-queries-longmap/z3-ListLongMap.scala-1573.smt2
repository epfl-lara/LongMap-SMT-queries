; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!29956 () Bool)

(assert start!29956)

(declare-fun res!158775 () Bool)

(declare-fun e!190011 () Bool)

(assert (=> start!29956 (=> (not res!158775) (not e!190011))))

(declare-fun mask!3709 () (_ BitVec 32))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> start!29956 (= res!158775 (validMask!0 mask!3709))))

(assert (=> start!29956 e!190011))

(assert (=> start!29956 true))

(declare-datatypes ((array!15204 0))(
  ( (array!15205 (arr!7195 (Array (_ BitVec 32) (_ BitVec 64))) (size!7547 (_ BitVec 32))) )
))
(declare-fun a!3293 () array!15204)

(declare-fun array_inv!5145 (array!15204) Bool)

(assert (=> start!29956 (array_inv!5145 a!3293)))

(declare-fun b!300973 () Bool)

(declare-fun res!158774 () Bool)

(assert (=> b!300973 (=> (not res!158774) (not e!190011))))

(declare-fun i!1240 () (_ BitVec 32))

(assert (=> b!300973 (= res!158774 (and (= (size!7547 a!3293) (bvadd #b00000000000000000000000000000001 mask!3709)) (bvsge i!1240 #b00000000000000000000000000000000) (bvslt i!1240 (size!7547 a!3293))))))

(declare-fun b!300974 () Bool)

(declare-fun res!158773 () Bool)

(assert (=> b!300974 (=> (not res!158773) (not e!190011))))

(declare-fun k0!2441 () (_ BitVec 64))

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!300974 (= res!158773 (validKeyInArray!0 k0!2441))))

(declare-fun b!300975 () Bool)

(assert (=> b!300975 (= e!190011 (and (bvslt #b00000000000000000000000000000000 (size!7547 a!3293)) (bvsge (size!7547 a!3293) #b01111111111111111111111111111111)))))

(assert (= (and start!29956 res!158775) b!300973))

(assert (= (and b!300973 res!158774) b!300974))

(assert (= (and b!300974 res!158773) b!300975))

(declare-fun m!313029 () Bool)

(assert (=> start!29956 m!313029))

(declare-fun m!313031 () Bool)

(assert (=> start!29956 m!313031))

(declare-fun m!313033 () Bool)

(assert (=> b!300974 m!313033))

(check-sat (not b!300974) (not start!29956))
(check-sat)
(get-model)

(declare-fun d!67861 () Bool)

(assert (=> d!67861 (= (validKeyInArray!0 k0!2441) (and (not (= k0!2441 #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= k0!2441 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!300974 d!67861))

(declare-fun d!67863 () Bool)

(assert (=> d!67863 (= (validMask!0 mask!3709) (and (or (= mask!3709 #b00000000000000000000000000000111) (= mask!3709 #b00000000000000000000000000001111) (= mask!3709 #b00000000000000000000000000011111) (= mask!3709 #b00000000000000000000000000111111) (= mask!3709 #b00000000000000000000000001111111) (= mask!3709 #b00000000000000000000000011111111) (= mask!3709 #b00000000000000000000000111111111) (= mask!3709 #b00000000000000000000001111111111) (= mask!3709 #b00000000000000000000011111111111) (= mask!3709 #b00000000000000000000111111111111) (= mask!3709 #b00000000000000000001111111111111) (= mask!3709 #b00000000000000000011111111111111) (= mask!3709 #b00000000000000000111111111111111) (= mask!3709 #b00000000000000001111111111111111) (= mask!3709 #b00000000000000011111111111111111) (= mask!3709 #b00000000000000111111111111111111) (= mask!3709 #b00000000000001111111111111111111) (= mask!3709 #b00000000000011111111111111111111) (= mask!3709 #b00000000000111111111111111111111) (= mask!3709 #b00000000001111111111111111111111) (= mask!3709 #b00000000011111111111111111111111) (= mask!3709 #b00000000111111111111111111111111) (= mask!3709 #b00000001111111111111111111111111) (= mask!3709 #b00000011111111111111111111111111) (= mask!3709 #b00000111111111111111111111111111) (= mask!3709 #b00001111111111111111111111111111) (= mask!3709 #b00011111111111111111111111111111) (= mask!3709 #b00111111111111111111111111111111)) (bvsle mask!3709 #b00111111111111111111111111111111)))))

(assert (=> start!29956 d!67863))

(declare-fun d!67869 () Bool)

(assert (=> d!67869 (= (array_inv!5145 a!3293) (bvsge (size!7547 a!3293) #b00000000000000000000000000000000))))

(assert (=> start!29956 d!67869))

(check-sat)
