; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!29956 () Bool)

(assert start!29956)

(declare-fun res!158649 () Bool)

(declare-fun e!189869 () Bool)

(assert (=> start!29956 (=> (not res!158649) (not e!189869))))

(declare-fun mask!3709 () (_ BitVec 32))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> start!29956 (= res!158649 (validMask!0 mask!3709))))

(assert (=> start!29956 e!189869))

(assert (=> start!29956 true))

(declare-datatypes ((array!15196 0))(
  ( (array!15197 (arr!7191 (Array (_ BitVec 32) (_ BitVec 64))) (size!7544 (_ BitVec 32))) )
))
(declare-fun a!3293 () array!15196)

(declare-fun array_inv!5163 (array!15196) Bool)

(assert (=> start!29956 (array_inv!5163 a!3293)))

(declare-fun b!300751 () Bool)

(declare-fun res!158647 () Bool)

(assert (=> b!300751 (=> (not res!158647) (not e!189869))))

(declare-fun i!1240 () (_ BitVec 32))

(assert (=> b!300751 (= res!158647 (and (= (size!7544 a!3293) (bvadd #b00000000000000000000000000000001 mask!3709)) (bvsge i!1240 #b00000000000000000000000000000000) (bvslt i!1240 (size!7544 a!3293))))))

(declare-fun b!300752 () Bool)

(declare-fun res!158648 () Bool)

(assert (=> b!300752 (=> (not res!158648) (not e!189869))))

(declare-fun k0!2441 () (_ BitVec 64))

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!300752 (= res!158648 (validKeyInArray!0 k0!2441))))

(declare-fun b!300753 () Bool)

(assert (=> b!300753 (= e!189869 (and (bvslt #b00000000000000000000000000000000 (size!7544 a!3293)) (bvsge (size!7544 a!3293) #b01111111111111111111111111111111)))))

(assert (= (and start!29956 res!158649) b!300751))

(assert (= (and b!300751 res!158647) b!300752))

(assert (= (and b!300752 res!158648) b!300753))

(declare-fun m!312187 () Bool)

(assert (=> start!29956 m!312187))

(declare-fun m!312189 () Bool)

(assert (=> start!29956 m!312189))

(declare-fun m!312191 () Bool)

(assert (=> b!300752 m!312191))

(check-sat (not b!300752) (not start!29956))
(check-sat)
(get-model)

(declare-fun d!67627 () Bool)

(assert (=> d!67627 (= (validKeyInArray!0 k0!2441) (and (not (= k0!2441 #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= k0!2441 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!300752 d!67627))

(declare-fun d!67629 () Bool)

(assert (=> d!67629 (= (validMask!0 mask!3709) (and (or (= mask!3709 #b00000000000000000000000000000111) (= mask!3709 #b00000000000000000000000000001111) (= mask!3709 #b00000000000000000000000000011111) (= mask!3709 #b00000000000000000000000000111111) (= mask!3709 #b00000000000000000000000001111111) (= mask!3709 #b00000000000000000000000011111111) (= mask!3709 #b00000000000000000000000111111111) (= mask!3709 #b00000000000000000000001111111111) (= mask!3709 #b00000000000000000000011111111111) (= mask!3709 #b00000000000000000000111111111111) (= mask!3709 #b00000000000000000001111111111111) (= mask!3709 #b00000000000000000011111111111111) (= mask!3709 #b00000000000000000111111111111111) (= mask!3709 #b00000000000000001111111111111111) (= mask!3709 #b00000000000000011111111111111111) (= mask!3709 #b00000000000000111111111111111111) (= mask!3709 #b00000000000001111111111111111111) (= mask!3709 #b00000000000011111111111111111111) (= mask!3709 #b00000000000111111111111111111111) (= mask!3709 #b00000000001111111111111111111111) (= mask!3709 #b00000000011111111111111111111111) (= mask!3709 #b00000000111111111111111111111111) (= mask!3709 #b00000001111111111111111111111111) (= mask!3709 #b00000011111111111111111111111111) (= mask!3709 #b00000111111111111111111111111111) (= mask!3709 #b00001111111111111111111111111111) (= mask!3709 #b00011111111111111111111111111111) (= mask!3709 #b00111111111111111111111111111111)) (bvsle mask!3709 #b00111111111111111111111111111111)))))

(assert (=> start!29956 d!67629))

(declare-fun d!67631 () Bool)

(assert (=> d!67631 (= (array_inv!5163 a!3293) (bvsge (size!7544 a!3293) #b00000000000000000000000000000000))))

(assert (=> start!29956 d!67631))

(check-sat)
