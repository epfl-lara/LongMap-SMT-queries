; Options: -q --produce-models --incremental --print-success --lang smt2.6
(declare-fun start!135580 () Bool)

(assert start!135580)

(declare-fun res!1075771 () Bool)

(declare-fun e!878090 () Bool)

(assert (=> start!135580 (=> (not res!1075771) (not e!878090))))

(declare-fun mask!898 () (_ BitVec 32))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> start!135580 (= res!1075771 (validMask!0 mask!898))))

(assert (=> start!135580 e!878090))

(assert (=> start!135580 true))

(declare-datatypes ((array!105268 0))(
  ( (array!105269 (arr!50781 (Array (_ BitVec 32) (_ BitVec 64))) (size!51331 (_ BitVec 32))) )
))
(declare-fun _keys!605 () array!105268)

(declare-fun array_inv!39508 (array!105268) Bool)

(assert (=> start!135580 (array_inv!39508 _keys!605)))

(declare-fun b!1574479 () Bool)

(declare-fun res!1075772 () Bool)

(assert (=> b!1574479 (=> (not res!1075772) (not e!878090))))

(assert (=> b!1574479 (= res!1075772 (and (bvsge mask!898 #b00000000000000000000000000000000) (= (size!51331 _keys!605) (bvadd #b00000000000000000000000000000001 mask!898))))))

(declare-fun b!1574480 () Bool)

(declare-fun res!1075773 () Bool)

(assert (=> b!1574480 (=> (not res!1075773) (not e!878090))))

(declare-fun k!761 () (_ BitVec 64))

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!1574480 (= res!1075773 (validKeyInArray!0 k!761))))

(declare-fun b!1574481 () Bool)

(declare-fun lt!674812 () (_ BitVec 32))

(assert (=> b!1574481 (= e!878090 (or (bvslt lt!674812 #b00000000000000000000000000000000) (bvsge lt!674812 (bvadd #b00000000000000000000000000000001 mask!898))))))

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!1574481 (= lt!674812 (toIndex!0 k!761 mask!898))))

(assert (= (and start!135580 res!1075771) b!1574479))

(assert (= (and b!1574479 res!1075772) b!1574480))

(assert (= (and b!1574480 res!1075773) b!1574481))

(declare-fun m!1447709 () Bool)

(assert (=> start!135580 m!1447709))

(declare-fun m!1447711 () Bool)

(assert (=> start!135580 m!1447711))

(declare-fun m!1447713 () Bool)

(assert (=> b!1574480 m!1447713))

(declare-fun m!1447715 () Bool)

(assert (=> b!1574481 m!1447715))

(push 1)

(assert (not start!135580))

(assert (not b!1574480))

(assert (not b!1574481))

(check-sat)

(pop 1)

(push 1)

(check-sat)

(get-model)

(pop 1)

(declare-fun d!165225 () Bool)

(assert (=> d!165225 (= (validMask!0 mask!898) (and (or (= mask!898 #b00000000000000000000000000000111) (= mask!898 #b00000000000000000000000000001111) (= mask!898 #b00000000000000000000000000011111) (= mask!898 #b00000000000000000000000000111111) (= mask!898 #b00000000000000000000000001111111) (= mask!898 #b00000000000000000000000011111111) (= mask!898 #b00000000000000000000000111111111) (= mask!898 #b00000000000000000000001111111111) (= mask!898 #b00000000000000000000011111111111) (= mask!898 #b00000000000000000000111111111111) (= mask!898 #b00000000000000000001111111111111) (= mask!898 #b00000000000000000011111111111111) (= mask!898 #b00000000000000000111111111111111) (= mask!898 #b00000000000000001111111111111111) (= mask!898 #b00000000000000011111111111111111) (= mask!898 #b00000000000000111111111111111111) (= mask!898 #b00000000000001111111111111111111) (= mask!898 #b00000000000011111111111111111111) (= mask!898 #b00000000000111111111111111111111) (= mask!898 #b00000000001111111111111111111111) (= mask!898 #b00000000011111111111111111111111) (= mask!898 #b00000000111111111111111111111111) (= mask!898 #b00000001111111111111111111111111) (= mask!898 #b00000011111111111111111111111111) (= mask!898 #b00000111111111111111111111111111) (= mask!898 #b00001111111111111111111111111111) (= mask!898 #b00011111111111111111111111111111) (= mask!898 #b00111111111111111111111111111111)) (bvsle mask!898 #b00111111111111111111111111111111)))))

(assert (=> start!135580 d!165225))

(declare-fun d!165231 () Bool)

(assert (=> d!165231 (= (array_inv!39508 _keys!605) (bvsge (size!51331 _keys!605) #b00000000000000000000000000000000))))

(assert (=> start!135580 d!165231))

(declare-fun d!165233 () Bool)

(assert (=> d!165233 (= (validKeyInArray!0 k!761) (and (not (= k!761 #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= k!761 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!1574480 d!165233))

(declare-fun d!165235 () Bool)

(declare-fun lt!674830 () (_ BitVec 32))

(declare-fun lt!674829 () (_ BitVec 32))

(assert (=> d!165235 (= lt!674830 (bvmul (bvxor lt!674829 (bvlshr lt!674829 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!165235 (= lt!674829 ((_ extract 31 0) (bvand (bvxor k!761 (bvlshr k!761 #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!165235 (and (bvsge mask!898 #b00000000000000000000000000000000) (let ((res!1075776 (let ((h!38251 ((_ extract 31 0) (bvand (bvxor k!761 (bvlshr k!761 #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!141938 (bvmul (bvxor h!38251 (bvlshr h!38251 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!141938 (bvlshr x!141938 #b00000000000000000000000000001101)) mask!898))))) (and (bvslt res!1075776 (bvadd mask!898 #b00000000000000000000000000000001)) (bvsge res!1075776 #b00000000000000000000000000000000))))))

(assert (=> d!165235 (= (toIndex!0 k!761 mask!898) (bvand (bvxor lt!674830 (bvlshr lt!674830 #b00000000000000000000000000001101)) mask!898))))

(assert (=> b!1574481 d!165235))

(push 1)

(check-sat)

