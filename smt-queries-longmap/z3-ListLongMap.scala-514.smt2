; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!12682 () Bool)

(assert start!12682)

(declare-fun b!109701 () Bool)

(declare-fun b_free!2561 () Bool)

(declare-fun b_next!2561 () Bool)

(assert (=> b!109701 (= b_free!2561 (not b_next!2561))))

(declare-fun tp!10024 () Bool)

(declare-fun b_and!6759 () Bool)

(assert (=> b!109701 (= tp!10024 b_and!6759)))

(declare-fun b!109708 () Bool)

(declare-fun b_free!2563 () Bool)

(declare-fun b_next!2563 () Bool)

(assert (=> b!109708 (= b_free!2563 (not b_next!2563))))

(declare-fun tp!10022 () Bool)

(declare-fun b_and!6761 () Bool)

(assert (=> b!109708 (= tp!10022 b_and!6761)))

(declare-fun mapNonEmpty!3999 () Bool)

(declare-fun mapRes!4000 () Bool)

(declare-fun tp!10021 () Bool)

(declare-fun e!71382 () Bool)

(assert (=> mapNonEmpty!3999 (= mapRes!4000 (and tp!10021 e!71382))))

(declare-datatypes ((V!3243 0))(
  ( (V!3244 (val!1393 Int)) )
))
(declare-datatypes ((array!4389 0))(
  ( (array!4390 (arr!2081 (Array (_ BitVec 32) (_ BitVec 64))) (size!2338 (_ BitVec 32))) )
))
(declare-datatypes ((ValueCell!1005 0))(
  ( (ValueCellFull!1005 (v!2929 V!3243)) (EmptyCell!1005) )
))
(declare-datatypes ((array!4391 0))(
  ( (array!4392 (arr!2082 (Array (_ BitVec 32) ValueCell!1005)) (size!2339 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!918 0))(
  ( (LongMapFixedSize!919 (defaultEntry!2627 Int) (mask!6795 (_ BitVec 32)) (extraKeys!2424 (_ BitVec 32)) (zeroValue!2498 V!3243) (minValue!2498 V!3243) (_size!508 (_ BitVec 32)) (_keys!4341 array!4389) (_values!2610 array!4391) (_vacant!508 (_ BitVec 32))) )
))
(declare-datatypes ((Cell!718 0))(
  ( (Cell!719 (v!2930 LongMapFixedSize!918)) )
))
(declare-datatypes ((LongMap!718 0))(
  ( (LongMap!719 (underlying!370 Cell!718)) )
))
(declare-fun thiss!992 () LongMap!718)

(declare-fun mapValue!3999 () ValueCell!1005)

(declare-fun mapKey!3999 () (_ BitVec 32))

(declare-fun mapRest!4000 () (Array (_ BitVec 32) ValueCell!1005))

(assert (=> mapNonEmpty!3999 (= (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (store mapRest!4000 mapKey!3999 mapValue!3999))))

(declare-fun b!109693 () Bool)

(declare-datatypes ((Unit!3403 0))(
  ( (Unit!3404) )
))
(declare-fun e!71385 () Unit!3403)

(declare-fun Unit!3405 () Unit!3403)

(assert (=> b!109693 (= e!71385 Unit!3405)))

(declare-fun b!109694 () Bool)

(declare-fun e!71370 () Bool)

(declare-fun tp_is_empty!2697 () Bool)

(assert (=> b!109694 (= e!71370 tp_is_empty!2697)))

(declare-fun b!109695 () Bool)

(declare-fun e!71384 () Bool)

(declare-fun e!71381 () Bool)

(declare-fun mapRes!3999 () Bool)

(assert (=> b!109695 (= e!71384 (and e!71381 mapRes!3999))))

(declare-fun condMapEmpty!4000 () Bool)

(declare-fun newMap!16 () LongMapFixedSize!918)

(declare-fun mapDefault!4000 () ValueCell!1005)

(assert (=> b!109695 (= condMapEmpty!4000 (= (arr!2082 (_values!2610 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!1005)) mapDefault!4000)))))

(declare-fun b!109696 () Bool)

(declare-fun e!71386 () Bool)

(declare-fun e!71387 () Bool)

(assert (=> b!109696 (= e!71386 (and e!71387 mapRes!4000))))

(declare-fun condMapEmpty!3999 () Bool)

(declare-fun mapDefault!3999 () ValueCell!1005)

(assert (=> b!109696 (= condMapEmpty!3999 (= (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!1005)) mapDefault!3999)))))

(declare-fun b!109697 () Bool)

(assert (=> b!109697 (= e!71381 tp_is_empty!2697)))

(declare-fun res!54302 () Bool)

(declare-fun e!71372 () Bool)

(assert (=> start!12682 (=> (not res!54302) (not e!71372))))

(declare-fun valid!429 (LongMap!718) Bool)

(assert (=> start!12682 (= res!54302 (valid!429 thiss!992))))

(assert (=> start!12682 e!71372))

(declare-fun e!71373 () Bool)

(assert (=> start!12682 e!71373))

(assert (=> start!12682 true))

(declare-fun e!71380 () Bool)

(assert (=> start!12682 e!71380))

(declare-fun b!109698 () Bool)

(declare-fun e!71371 () Bool)

(assert (=> b!109698 (= e!71371 (or (not (= (size!2339 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 (mask!6795 (v!2930 (underlying!370 thiss!992)))))) (not (= (size!2338 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (size!2339 (_values!2610 (v!2930 (underlying!370 thiss!992)))))) (bvslt (mask!6795 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000000000) (bvslt (extraKeys!2424 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2424 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000000011)))))

(declare-fun b!109699 () Bool)

(declare-fun e!71378 () Bool)

(declare-fun e!71383 () Bool)

(assert (=> b!109699 (= e!71378 e!71383)))

(declare-fun res!54301 () Bool)

(assert (=> b!109699 (=> (not res!54301) (not e!71383))))

(declare-datatypes ((tuple2!2438 0))(
  ( (tuple2!2439 (_1!1230 Bool) (_2!1230 LongMapFixedSize!918)) )
))
(declare-fun lt!56463 () tuple2!2438)

(declare-fun from!355 () (_ BitVec 32))

(assert (=> b!109699 (= res!54301 (and (_1!1230 lt!56463) (bvsle from!355 #b00000000000000000000000000000000)))))

(declare-fun lt!56452 () Unit!3403)

(assert (=> b!109699 (= lt!56452 e!71385)))

(declare-fun c!19400 () Bool)

(declare-datatypes ((tuple2!2440 0))(
  ( (tuple2!2441 (_1!1231 (_ BitVec 64)) (_2!1231 V!3243)) )
))
(declare-datatypes ((List!1630 0))(
  ( (Nil!1627) (Cons!1626 (h!2225 tuple2!2440) (t!5767 List!1630)) )
))
(declare-datatypes ((ListLongMap!1591 0))(
  ( (ListLongMap!1592 (toList!811 List!1630)) )
))
(declare-fun lt!56461 () ListLongMap!1591)

(declare-fun contains!838 (ListLongMap!1591 (_ BitVec 64)) Bool)

(assert (=> b!109699 (= c!19400 (contains!838 lt!56461 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(declare-fun lt!56458 () V!3243)

(declare-fun update!162 (LongMapFixedSize!918 (_ BitVec 64) V!3243) tuple2!2438)

(assert (=> b!109699 (= lt!56463 (update!162 newMap!16 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))

(declare-fun b!109700 () Bool)

(declare-fun e!71375 () Bool)

(assert (=> b!109700 (= e!71372 e!71375)))

(declare-fun res!54299 () Bool)

(assert (=> b!109700 (=> (not res!54299) (not e!71375))))

(declare-fun lt!56455 () ListLongMap!1591)

(assert (=> b!109700 (= res!54299 (= lt!56455 lt!56461))))

(declare-fun map!1299 (LongMapFixedSize!918) ListLongMap!1591)

(assert (=> b!109700 (= lt!56461 (map!1299 newMap!16))))

(declare-fun getCurrentListMap!496 (array!4389 array!4391 (_ BitVec 32) (_ BitVec 32) V!3243 V!3243 (_ BitVec 32) Int) ListLongMap!1591)

(assert (=> b!109700 (= lt!56455 (getCurrentListMap!496 (_keys!4341 (v!2930 (underlying!370 thiss!992))) (_values!2610 (v!2930 (underlying!370 thiss!992))) (mask!6795 (v!2930 (underlying!370 thiss!992))) (extraKeys!2424 (v!2930 (underlying!370 thiss!992))) (zeroValue!2498 (v!2930 (underlying!370 thiss!992))) (minValue!2498 (v!2930 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2627 (v!2930 (underlying!370 thiss!992)))))))

(declare-fun e!71379 () Bool)

(declare-fun array_inv!1311 (array!4389) Bool)

(declare-fun array_inv!1312 (array!4391) Bool)

(assert (=> b!109701 (= e!71379 (and tp!10024 tp_is_empty!2697 (array_inv!1311 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (array_inv!1312 (_values!2610 (v!2930 (underlying!370 thiss!992)))) e!71386))))

(declare-fun b!109702 () Bool)

(assert (=> b!109702 (= e!71387 tp_is_empty!2697)))

(declare-fun b!109703 () Bool)

(declare-fun e!71374 () Bool)

(assert (=> b!109703 (= e!71374 e!71379)))

(declare-fun b!109704 () Bool)

(declare-fun res!54298 () Bool)

(assert (=> b!109704 (=> (not res!54298) (not e!71372))))

(assert (=> b!109704 (= res!54298 (bvsge (bvadd #b00000000000000000000000000000001 (mask!6795 newMap!16)) (_size!508 (v!2930 (underlying!370 thiss!992)))))))

(declare-fun b!109705 () Bool)

(assert (=> b!109705 (= e!71383 (not e!71371))))

(declare-fun res!54297 () Bool)

(assert (=> b!109705 (=> res!54297 e!71371)))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> b!109705 (= res!54297 (not (validMask!0 (mask!6795 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun lt!56462 () ListLongMap!1591)

(declare-fun lt!56457 () tuple2!2440)

(declare-fun lt!56454 () tuple2!2440)

(declare-fun +!150 (ListLongMap!1591 tuple2!2440) ListLongMap!1591)

(assert (=> b!109705 (= (+!150 (+!150 lt!56462 lt!56457) lt!56454) (+!150 (+!150 lt!56462 lt!56454) lt!56457))))

(assert (=> b!109705 (= lt!56454 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))

(assert (=> b!109705 (= lt!56457 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))

(declare-fun lt!56460 () Unit!3403)

(declare-fun addCommutativeForDiffKeys!62 (ListLongMap!1591 (_ BitVec 64) V!3243 (_ BitVec 64) V!3243) Unit!3403)

(assert (=> b!109705 (= lt!56460 (addCommutativeForDiffKeys!62 lt!56462 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))

(declare-fun getCurrentListMapNoExtraKeys!116 (array!4389 array!4391 (_ BitVec 32) (_ BitVec 32) V!3243 V!3243 (_ BitVec 32) Int) ListLongMap!1591)

(assert (=> b!109705 (= lt!56462 (getCurrentListMapNoExtraKeys!116 (_keys!4341 (v!2930 (underlying!370 thiss!992))) (_values!2610 (v!2930 (underlying!370 thiss!992))) (mask!6795 (v!2930 (underlying!370 thiss!992))) (extraKeys!2424 (v!2930 (underlying!370 thiss!992))) (zeroValue!2498 (v!2930 (underlying!370 thiss!992))) (minValue!2498 (v!2930 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2627 (v!2930 (underlying!370 thiss!992)))))))

(declare-fun b!109706 () Bool)

(assert (=> b!109706 (= e!71375 e!71378)))

(declare-fun res!54303 () Bool)

(assert (=> b!109706 (=> (not res!54303) (not e!71378))))

(assert (=> b!109706 (= res!54303 (and (not (= (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun get!1347 (ValueCell!1005 V!3243) V!3243)

(declare-fun dynLambda!390 (Int (_ BitVec 64)) V!3243)

(assert (=> b!109706 (= lt!56458 (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) from!355) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!109707 () Bool)

(declare-fun res!54300 () Bool)

(assert (=> b!109707 (=> (not res!54300) (not e!71372))))

(assert (=> b!109707 (= res!54300 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2338 (_keys!4341 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> b!109708 (= e!71380 (and tp!10022 tp_is_empty!2697 (array_inv!1311 (_keys!4341 newMap!16)) (array_inv!1312 (_values!2610 newMap!16)) e!71384))))

(declare-fun b!109709 () Bool)

(declare-fun res!54296 () Bool)

(assert (=> b!109709 (=> (not res!54296) (not e!71372))))

(declare-fun valid!430 (LongMapFixedSize!918) Bool)

(assert (=> b!109709 (= res!54296 (valid!430 newMap!16))))

(declare-fun mapIsEmpty!3999 () Bool)

(assert (=> mapIsEmpty!3999 mapRes!4000))

(declare-fun b!109710 () Bool)

(declare-fun Unit!3406 () Unit!3403)

(assert (=> b!109710 (= e!71385 Unit!3406)))

(declare-fun lt!56453 () Unit!3403)

(declare-fun lemmaListMapContainsThenArrayContainsFrom!111 (array!4389 array!4391 (_ BitVec 32) (_ BitVec 32) V!3243 V!3243 (_ BitVec 64) (_ BitVec 32) Int) Unit!3403)

(assert (=> b!109710 (= lt!56453 (lemmaListMapContainsThenArrayContainsFrom!111 (_keys!4341 (v!2930 (underlying!370 thiss!992))) (_values!2610 (v!2930 (underlying!370 thiss!992))) (mask!6795 (v!2930 (underlying!370 thiss!992))) (extraKeys!2424 (v!2930 (underlying!370 thiss!992))) (zeroValue!2498 (v!2930 (underlying!370 thiss!992))) (minValue!2498 (v!2930 (underlying!370 thiss!992))) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2627 (v!2930 (underlying!370 thiss!992)))))))

(declare-fun arrayContainsKey!0 (array!4389 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> b!109710 (arrayContainsKey!0 (_keys!4341 (v!2930 (underlying!370 thiss!992))) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355))))

(declare-fun lt!56456 () Unit!3403)

(declare-fun lemmaNoDuplicateFromThenFromBigger!0 (array!4389 (_ BitVec 32) (_ BitVec 32)) Unit!3403)

(assert (=> b!109710 (= lt!56456 (lemmaNoDuplicateFromThenFromBigger!0 (_keys!4341 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000000000 from!355))))

(declare-datatypes ((List!1631 0))(
  ( (Nil!1628) (Cons!1627 (h!2226 (_ BitVec 64)) (t!5768 List!1631)) )
))
(declare-fun arrayNoDuplicates!0 (array!4389 (_ BitVec 32) List!1631) Bool)

(assert (=> b!109710 (arrayNoDuplicates!0 (_keys!4341 (v!2930 (underlying!370 thiss!992))) from!355 Nil!1628)))

(declare-fun lt!56459 () Unit!3403)

(declare-fun lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (array!4389 (_ BitVec 32) (_ BitVec 64) List!1631) Unit!3403)

(assert (=> b!109710 (= lt!56459 (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!4341 (v!2930 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (Cons!1627 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) Nil!1628)))))

(assert (=> b!109710 false))

(declare-fun mapNonEmpty!4000 () Bool)

(declare-fun tp!10023 () Bool)

(assert (=> mapNonEmpty!4000 (= mapRes!3999 (and tp!10023 e!71370))))

(declare-fun mapKey!4000 () (_ BitVec 32))

(declare-fun mapRest!3999 () (Array (_ BitVec 32) ValueCell!1005))

(declare-fun mapValue!4000 () ValueCell!1005)

(assert (=> mapNonEmpty!4000 (= (arr!2082 (_values!2610 newMap!16)) (store mapRest!3999 mapKey!4000 mapValue!4000))))

(declare-fun b!109711 () Bool)

(assert (=> b!109711 (= e!71382 tp_is_empty!2697)))

(declare-fun b!109712 () Bool)

(assert (=> b!109712 (= e!71373 e!71374)))

(declare-fun mapIsEmpty!4000 () Bool)

(assert (=> mapIsEmpty!4000 mapRes!3999))

(assert (= (and start!12682 res!54302) b!109707))

(assert (= (and b!109707 res!54300) b!109709))

(assert (= (and b!109709 res!54296) b!109704))

(assert (= (and b!109704 res!54298) b!109700))

(assert (= (and b!109700 res!54299) b!109706))

(assert (= (and b!109706 res!54303) b!109699))

(assert (= (and b!109699 c!19400) b!109710))

(assert (= (and b!109699 (not c!19400)) b!109693))

(assert (= (and b!109699 res!54301) b!109705))

(assert (= (and b!109705 (not res!54297)) b!109698))

(assert (= (and b!109696 condMapEmpty!3999) mapIsEmpty!3999))

(assert (= (and b!109696 (not condMapEmpty!3999)) mapNonEmpty!3999))

(get-info :version)

(assert (= (and mapNonEmpty!3999 ((_ is ValueCellFull!1005) mapValue!3999)) b!109711))

(assert (= (and b!109696 ((_ is ValueCellFull!1005) mapDefault!3999)) b!109702))

(assert (= b!109701 b!109696))

(assert (= b!109703 b!109701))

(assert (= b!109712 b!109703))

(assert (= start!12682 b!109712))

(assert (= (and b!109695 condMapEmpty!4000) mapIsEmpty!4000))

(assert (= (and b!109695 (not condMapEmpty!4000)) mapNonEmpty!4000))

(assert (= (and mapNonEmpty!4000 ((_ is ValueCellFull!1005) mapValue!4000)) b!109694))

(assert (= (and b!109695 ((_ is ValueCellFull!1005) mapDefault!4000)) b!109697))

(assert (= b!109708 b!109695))

(assert (= start!12682 b!109708))

(declare-fun b_lambda!4917 () Bool)

(assert (=> (not b_lambda!4917) (not b!109706)))

(declare-fun t!5764 () Bool)

(declare-fun tb!2101 () Bool)

(assert (=> (and b!109701 (= (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) (defaultEntry!2627 (v!2930 (underlying!370 thiss!992)))) t!5764) tb!2101))

(declare-fun result!3523 () Bool)

(assert (=> tb!2101 (= result!3523 tp_is_empty!2697)))

(assert (=> b!109706 t!5764))

(declare-fun b_and!6763 () Bool)

(assert (= b_and!6759 (and (=> t!5764 result!3523) b_and!6763)))

(declare-fun tb!2103 () Bool)

(declare-fun t!5766 () Bool)

(assert (=> (and b!109708 (= (defaultEntry!2627 newMap!16) (defaultEntry!2627 (v!2930 (underlying!370 thiss!992)))) t!5766) tb!2103))

(declare-fun result!3527 () Bool)

(assert (= result!3527 result!3523))

(assert (=> b!109706 t!5766))

(declare-fun b_and!6765 () Bool)

(assert (= b_and!6761 (and (=> t!5766 result!3527) b_and!6765)))

(declare-fun m!124311 () Bool)

(assert (=> b!109710 m!124311))

(declare-fun m!124313 () Bool)

(assert (=> b!109710 m!124313))

(declare-fun m!124315 () Bool)

(assert (=> b!109710 m!124315))

(declare-fun m!124317 () Bool)

(assert (=> b!109710 m!124317))

(assert (=> b!109710 m!124315))

(assert (=> b!109710 m!124315))

(declare-fun m!124319 () Bool)

(assert (=> b!109710 m!124319))

(assert (=> b!109710 m!124315))

(declare-fun m!124321 () Bool)

(assert (=> b!109710 m!124321))

(assert (=> b!109699 m!124315))

(assert (=> b!109699 m!124315))

(declare-fun m!124323 () Bool)

(assert (=> b!109699 m!124323))

(assert (=> b!109699 m!124315))

(declare-fun m!124325 () Bool)

(assert (=> b!109699 m!124325))

(declare-fun m!124327 () Bool)

(assert (=> mapNonEmpty!3999 m!124327))

(declare-fun m!124329 () Bool)

(assert (=> b!109705 m!124329))

(assert (=> b!109705 m!124315))

(declare-fun m!124331 () Bool)

(assert (=> b!109705 m!124331))

(assert (=> b!109705 m!124315))

(declare-fun m!124333 () Bool)

(assert (=> b!109705 m!124333))

(assert (=> b!109705 m!124333))

(declare-fun m!124335 () Bool)

(assert (=> b!109705 m!124335))

(declare-fun m!124337 () Bool)

(assert (=> b!109705 m!124337))

(assert (=> b!109705 m!124337))

(declare-fun m!124339 () Bool)

(assert (=> b!109705 m!124339))

(declare-fun m!124341 () Bool)

(assert (=> b!109705 m!124341))

(declare-fun m!124343 () Bool)

(assert (=> b!109701 m!124343))

(declare-fun m!124345 () Bool)

(assert (=> b!109701 m!124345))

(declare-fun m!124347 () Bool)

(assert (=> b!109709 m!124347))

(declare-fun m!124349 () Bool)

(assert (=> b!109708 m!124349))

(declare-fun m!124351 () Bool)

(assert (=> b!109708 m!124351))

(declare-fun m!124353 () Bool)

(assert (=> mapNonEmpty!4000 m!124353))

(declare-fun m!124355 () Bool)

(assert (=> start!12682 m!124355))

(declare-fun m!124357 () Bool)

(assert (=> b!109700 m!124357))

(declare-fun m!124359 () Bool)

(assert (=> b!109700 m!124359))

(assert (=> b!109706 m!124315))

(declare-fun m!124361 () Bool)

(assert (=> b!109706 m!124361))

(declare-fun m!124363 () Bool)

(assert (=> b!109706 m!124363))

(assert (=> b!109706 m!124361))

(assert (=> b!109706 m!124363))

(declare-fun m!124365 () Bool)

(assert (=> b!109706 m!124365))

(check-sat (not b!109706) (not b!109710) tp_is_empty!2697 (not b!109705) (not mapNonEmpty!3999) (not mapNonEmpty!4000) (not start!12682) (not b_lambda!4917) (not b!109700) (not b_next!2561) (not b!109709) b_and!6763 (not b!109701) (not b!109708) (not b_next!2563) (not b!109699) b_and!6765)
(check-sat b_and!6763 b_and!6765 (not b_next!2561) (not b_next!2563))
(get-model)

(declare-fun b_lambda!4921 () Bool)

(assert (= b_lambda!4917 (or (and b!109701 b_free!2561) (and b!109708 b_free!2563 (= (defaultEntry!2627 newMap!16) (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))))) b_lambda!4921)))

(check-sat (not b!109706) (not b!109710) tp_is_empty!2697 (not b!109705) (not mapNonEmpty!3999) (not mapNonEmpty!4000) (not b_lambda!4921) (not start!12682) (not b!109700) (not b_next!2561) (not b!109709) b_and!6763 (not b!109701) (not b!109708) (not b_next!2563) (not b!109699) b_and!6765)
(check-sat b_and!6763 b_and!6765 (not b_next!2561) (not b_next!2563))
(get-model)

(declare-fun d!30819 () Bool)

(declare-fun e!71446 () Bool)

(assert (=> d!30819 e!71446))

(declare-fun res!54330 () Bool)

(assert (=> d!30819 (=> res!54330 e!71446)))

(declare-fun lt!56508 () Bool)

(assert (=> d!30819 (= res!54330 (not lt!56508))))

(declare-fun lt!56509 () Bool)

(assert (=> d!30819 (= lt!56508 lt!56509)))

(declare-fun lt!56511 () Unit!3403)

(declare-fun e!71447 () Unit!3403)

(assert (=> d!30819 (= lt!56511 e!71447)))

(declare-fun c!19406 () Bool)

(assert (=> d!30819 (= c!19406 lt!56509)))

(declare-fun containsKey!162 (List!1630 (_ BitVec 64)) Bool)

(assert (=> d!30819 (= lt!56509 (containsKey!162 (toList!811 lt!56461) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(assert (=> d!30819 (= (contains!838 lt!56461 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) lt!56508)))

(declare-fun b!109783 () Bool)

(declare-fun lt!56510 () Unit!3403)

(assert (=> b!109783 (= e!71447 lt!56510)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!110 (List!1630 (_ BitVec 64)) Unit!3403)

(assert (=> b!109783 (= lt!56510 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 lt!56461) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(declare-datatypes ((Option!164 0))(
  ( (Some!163 (v!2934 V!3243)) (None!162) )
))
(declare-fun isDefined!111 (Option!164) Bool)

(declare-fun getValueByKey!158 (List!1630 (_ BitVec 64)) Option!164)

(assert (=> b!109783 (isDefined!111 (getValueByKey!158 (toList!811 lt!56461) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(declare-fun b!109784 () Bool)

(declare-fun Unit!3410 () Unit!3403)

(assert (=> b!109784 (= e!71447 Unit!3410)))

(declare-fun b!109785 () Bool)

(assert (=> b!109785 (= e!71446 (isDefined!111 (getValueByKey!158 (toList!811 lt!56461) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355))))))

(assert (= (and d!30819 c!19406) b!109783))

(assert (= (and d!30819 (not c!19406)) b!109784))

(assert (= (and d!30819 (not res!54330)) b!109785))

(assert (=> d!30819 m!124315))

(declare-fun m!124423 () Bool)

(assert (=> d!30819 m!124423))

(assert (=> b!109783 m!124315))

(declare-fun m!124425 () Bool)

(assert (=> b!109783 m!124425))

(assert (=> b!109783 m!124315))

(declare-fun m!124427 () Bool)

(assert (=> b!109783 m!124427))

(assert (=> b!109783 m!124427))

(declare-fun m!124429 () Bool)

(assert (=> b!109783 m!124429))

(assert (=> b!109785 m!124315))

(assert (=> b!109785 m!124427))

(assert (=> b!109785 m!124427))

(assert (=> b!109785 m!124429))

(assert (=> b!109699 d!30819))

(declare-fun b!109870 () Bool)

(declare-fun e!71502 () Bool)

(declare-datatypes ((SeekEntryResult!261 0))(
  ( (MissingZero!261 (index!3194 (_ BitVec 32))) (Found!261 (index!3195 (_ BitVec 32))) (Intermediate!261 (undefined!1073 Bool) (index!3196 (_ BitVec 32)) (x!13949 (_ BitVec 32))) (Undefined!261) (MissingVacant!261 (index!3197 (_ BitVec 32))) )
))
(declare-fun lt!56578 () SeekEntryResult!261)

(assert (=> b!109870 (= e!71502 ((_ is Undefined!261) lt!56578))))

(declare-fun b!109871 () Bool)

(declare-fun res!54361 () Bool)

(declare-fun e!71505 () Bool)

(assert (=> b!109871 (=> (not res!54361) (not e!71505))))

(declare-fun call!11695 () Bool)

(assert (=> b!109871 (= res!54361 call!11695)))

(declare-fun e!71512 () Bool)

(assert (=> b!109871 (= e!71512 e!71505)))

(declare-fun bm!11689 () Bool)

(declare-fun call!11705 () ListLongMap!1591)

(assert (=> bm!11689 (= call!11705 (map!1299 newMap!16))))

(declare-fun lt!56591 () SeekEntryResult!261)

(declare-fun c!19436 () Bool)

(declare-fun bm!11690 () Bool)

(declare-fun call!11694 () tuple2!2438)

(declare-fun updateHelperNewKey!49 (LongMapFixedSize!918 (_ BitVec 64) V!3243 (_ BitVec 32)) tuple2!2438)

(assert (=> bm!11690 (= call!11694 (updateHelperNewKey!49 newMap!16 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458 (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591))))))

(declare-fun bm!11691 () Bool)

(declare-fun call!11693 () Bool)

(declare-fun call!11713 () Bool)

(assert (=> bm!11691 (= call!11693 call!11713)))

(declare-fun bm!11692 () Bool)

(declare-fun call!11698 () Bool)

(declare-fun call!11714 () Bool)

(assert (=> bm!11692 (= call!11698 call!11714)))

(declare-fun bm!11693 () Bool)

(declare-fun call!11715 () ListLongMap!1591)

(declare-fun call!11709 () ListLongMap!1591)

(assert (=> bm!11693 (= call!11715 call!11709)))

(declare-fun e!71499 () ListLongMap!1591)

(declare-fun c!19438 () Bool)

(declare-fun c!19444 () Bool)

(declare-fun bm!11694 () Bool)

(declare-fun call!11707 () ListLongMap!1591)

(assert (=> bm!11694 (= call!11707 (+!150 e!71499 (ite c!19438 (ite c!19444 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))

(declare-fun c!19441 () Bool)

(assert (=> bm!11694 (= c!19441 c!19438)))

(declare-fun bm!11695 () Bool)

(declare-fun call!11701 () SeekEntryResult!261)

(declare-fun call!11692 () SeekEntryResult!261)

(assert (=> bm!11695 (= call!11701 call!11692)))

(declare-fun b!109872 () Bool)

(declare-fun e!71496 () tuple2!2438)

(declare-fun lt!56571 () tuple2!2438)

(assert (=> b!109872 (= e!71496 (tuple2!2439 (_1!1230 lt!56571) (_2!1230 lt!56571)))))

(assert (=> b!109872 (= lt!56571 call!11694)))

(declare-fun b!109874 () Bool)

(declare-fun lt!56576 () Unit!3403)

(declare-fun lt!56581 () Unit!3403)

(assert (=> b!109874 (= lt!56576 lt!56581)))

(declare-fun call!11704 () ListLongMap!1591)

(declare-fun call!11708 () ListLongMap!1591)

(assert (=> b!109874 (= call!11704 call!11708)))

(declare-fun lt!56577 () (_ BitVec 32))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!49 (array!4389 array!4391 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3243 V!3243 V!3243 Int) Unit!3403)

(assert (=> b!109874 (= lt!56581 (lemmaChangeLongMinValueKeyThenAddPairToListMap!49 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) lt!56577 (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) lt!56458 (defaultEntry!2627 newMap!16)))))

(assert (=> b!109874 (= lt!56577 (bvor (extraKeys!2424 newMap!16) #b00000000000000000000000000000010))))

(declare-fun e!71513 () tuple2!2438)

(assert (=> b!109874 (= e!71513 (tuple2!2439 true (LongMapFixedSize!919 (defaultEntry!2627 newMap!16) (mask!6795 newMap!16) (bvor (extraKeys!2424 newMap!16) #b00000000000000000000000000000010) (zeroValue!2498 newMap!16) lt!56458 (_size!508 newMap!16) (_keys!4341 newMap!16) (_values!2610 newMap!16) (_vacant!508 newMap!16))))))

(declare-fun b!109875 () Bool)

(declare-fun call!11710 () Bool)

(assert (=> b!109875 (= e!71505 (not call!11710))))

(declare-fun bm!11696 () Bool)

(declare-fun call!11696 () Unit!3403)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!49 (array!4389 array!4391 (_ BitVec 32) (_ BitVec 32) V!3243 V!3243 (_ BitVec 64) Int) Unit!3403)

(assert (=> bm!11696 (= call!11696 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!49 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (defaultEntry!2627 newMap!16)))))

(declare-fun bm!11697 () Bool)

(declare-fun call!11706 () ListLongMap!1591)

(declare-fun lt!56590 () tuple2!2438)

(assert (=> bm!11697 (= call!11706 (map!1299 (_2!1230 lt!56590)))))

(declare-fun b!109876 () Bool)

(declare-fun lt!56579 () Unit!3403)

(declare-fun lt!56586 () Unit!3403)

(assert (=> b!109876 (= lt!56579 lt!56586)))

(declare-fun call!11697 () ListLongMap!1591)

(assert (=> b!109876 (contains!838 call!11697 (select (arr!2081 (_keys!4341 newMap!16)) (index!3195 lt!56591)))))

(declare-fun lt!56569 () array!4391)

(declare-fun lemmaValidKeyInArrayIsInListMap!110 (array!4389 array!4391 (_ BitVec 32) (_ BitVec 32) V!3243 V!3243 (_ BitVec 32) Int) Unit!3403)

(assert (=> b!109876 (= lt!56586 (lemmaValidKeyInArrayIsInListMap!110 (_keys!4341 newMap!16) lt!56569 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (index!3195 lt!56591) (defaultEntry!2627 newMap!16)))))

(assert (=> b!109876 (= lt!56569 (array!4392 (store (arr!2082 (_values!2610 newMap!16)) (index!3195 lt!56591) (ValueCellFull!1005 lt!56458)) (size!2339 (_values!2610 newMap!16))))))

(declare-fun lt!56582 () Unit!3403)

(declare-fun lt!56575 () Unit!3403)

(assert (=> b!109876 (= lt!56582 lt!56575)))

(assert (=> b!109876 (= call!11707 call!11715)))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!49 (array!4389 array!4391 (_ BitVec 32) (_ BitVec 32) V!3243 V!3243 (_ BitVec 32) (_ BitVec 64) V!3243 Int) Unit!3403)

(assert (=> b!109876 (= lt!56575 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!49 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (index!3195 lt!56591) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!56568 () Unit!3403)

(declare-fun e!71506 () Unit!3403)

(assert (=> b!109876 (= lt!56568 e!71506)))

(declare-fun c!19448 () Bool)

(declare-fun call!11699 () Bool)

(assert (=> b!109876 (= c!19448 call!11699)))

(declare-fun e!71508 () tuple2!2438)

(assert (=> b!109876 (= e!71508 (tuple2!2439 true (LongMapFixedSize!919 (defaultEntry!2627 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (_size!508 newMap!16) (_keys!4341 newMap!16) (array!4392 (store (arr!2082 (_values!2610 newMap!16)) (index!3195 lt!56591) (ValueCellFull!1005 lt!56458)) (size!2339 (_values!2610 newMap!16))) (_vacant!508 newMap!16))))))

(declare-fun bm!11698 () Bool)

(assert (=> bm!11698 (= call!11710 call!11713)))

(declare-fun bm!11699 () Bool)

(declare-fun call!11702 () ListLongMap!1591)

(assert (=> bm!11699 (= call!11702 call!11697)))

(declare-fun lt!56587 () SeekEntryResult!261)

(declare-fun c!19440 () Bool)

(declare-fun bm!11700 () Bool)

(declare-fun lt!56584 () SeekEntryResult!261)

(declare-fun c!19445 () Bool)

(declare-fun c!19437 () Bool)

(declare-fun c!19447 () Bool)

(declare-fun lt!56574 () SeekEntryResult!261)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!11700 (= call!11714 (inRange!0 (ite c!19445 (ite c!19447 (index!3195 lt!56587) (ite c!19437 (index!3194 lt!56584) (index!3197 lt!56584))) (ite c!19448 (index!3195 lt!56574) (ite c!19440 (index!3194 lt!56578) (index!3197 lt!56578)))) (mask!6795 newMap!16)))))

(declare-fun e!71493 () Bool)

(declare-fun b!109877 () Bool)

(assert (=> b!109877 (= e!71493 (= call!11706 (+!150 call!11705 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))

(declare-fun bm!11701 () Bool)

(assert (=> bm!11701 (= call!11708 call!11709)))

(declare-fun b!109878 () Bool)

(assert (=> b!109878 (= e!71496 e!71508)))

(declare-fun c!19446 () Bool)

(assert (=> b!109878 (= c!19446 ((_ is MissingZero!261) lt!56591))))

(declare-fun e!71509 () Bool)

(declare-fun b!109879 () Bool)

(assert (=> b!109879 (= e!71509 (= (select (arr!2081 (_keys!4341 newMap!16)) (index!3195 lt!56587)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(declare-fun bm!11702 () Bool)

(declare-fun call!11711 () Bool)

(assert (=> bm!11702 (= call!11711 call!11714)))

(declare-fun b!109880 () Bool)

(declare-fun c!19443 () Bool)

(assert (=> b!109880 (= c!19443 ((_ is MissingVacant!261) lt!56578))))

(assert (=> b!109880 (= e!71512 e!71502)))

(declare-fun b!109881 () Bool)

(declare-fun res!54363 () Bool)

(assert (=> b!109881 (= res!54363 (= (select (arr!2081 (_keys!4341 newMap!16)) (index!3197 lt!56578)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!71504 () Bool)

(assert (=> b!109881 (=> (not res!54363) (not e!71504))))

(declare-fun b!109882 () Bool)

(declare-fun res!54359 () Bool)

(declare-fun e!71497 () Bool)

(assert (=> b!109882 (=> (not res!54359) (not e!71497))))

(declare-fun call!11700 () Bool)

(assert (=> b!109882 (= res!54359 call!11700)))

(declare-fun e!71511 () Bool)

(assert (=> b!109882 (= e!71511 e!71497)))

(declare-fun bm!11703 () Bool)

(assert (=> bm!11703 (= call!11704 call!11707)))

(declare-fun b!109883 () Bool)

(declare-fun e!71492 () Bool)

(declare-fun e!71495 () Bool)

(assert (=> b!109883 (= e!71492 e!71495)))

(declare-fun c!19442 () Bool)

(assert (=> b!109883 (= c!19442 (_1!1230 lt!56590))))

(declare-fun b!109884 () Bool)

(assert (=> b!109884 (= e!71495 (= call!11706 call!11705))))

(declare-fun bm!11704 () Bool)

(declare-fun call!11712 () SeekEntryResult!261)

(assert (=> bm!11704 (= call!11712 call!11692)))

(declare-fun b!109885 () Bool)

(declare-fun lt!56589 () tuple2!2438)

(assert (=> b!109885 (= lt!56589 call!11694)))

(assert (=> b!109885 (= e!71508 (tuple2!2439 (_1!1230 lt!56589) (_2!1230 lt!56589)))))

(declare-fun b!109886 () Bool)

(declare-fun e!71494 () Bool)

(assert (=> b!109886 (= e!71494 (= (select (arr!2081 (_keys!4341 newMap!16)) (index!3195 lt!56574)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(declare-fun b!109887 () Bool)

(declare-fun e!71510 () tuple2!2438)

(assert (=> b!109887 (= e!71510 e!71513)))

(assert (=> b!109887 (= c!19444 (= (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!109888 () Bool)

(declare-fun res!54369 () Bool)

(assert (=> b!109888 (= res!54369 call!11711)))

(assert (=> b!109888 (=> (not res!54369) (not e!71494))))

(declare-fun b!109889 () Bool)

(declare-fun e!71498 () Bool)

(declare-fun e!71503 () Bool)

(assert (=> b!109889 (= e!71498 e!71503)))

(declare-fun res!54366 () Bool)

(assert (=> b!109889 (= res!54366 call!11700)))

(assert (=> b!109889 (=> (not res!54366) (not e!71503))))

(declare-fun b!109890 () Bool)

(assert (=> b!109890 (= c!19436 ((_ is MissingVacant!261) lt!56591))))

(declare-fun e!71501 () tuple2!2438)

(assert (=> b!109890 (= e!71501 e!71496)))

(declare-fun b!109891 () Bool)

(declare-fun c!19435 () Bool)

(assert (=> b!109891 (= c!19435 ((_ is MissingVacant!261) lt!56584))))

(assert (=> b!109891 (= e!71511 e!71498)))

(declare-fun bm!11705 () Bool)

(assert (=> bm!11705 (= call!11700 call!11698)))

(declare-fun call!11703 () Unit!3403)

(declare-fun bm!11706 () Bool)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!49 (array!4389 array!4391 (_ BitVec 32) (_ BitVec 32) V!3243 V!3243 (_ BitVec 64) Int) Unit!3403)

(assert (=> bm!11706 (= call!11703 (lemmaInListMapThenSeekEntryOrOpenFindsIt!49 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (defaultEntry!2627 newMap!16)))))

(declare-fun b!109892 () Bool)

(declare-fun res!54368 () Bool)

(assert (=> b!109892 (= res!54368 call!11698)))

(assert (=> b!109892 (=> (not res!54368) (not e!71509))))

(declare-fun b!109893 () Bool)

(declare-fun e!71507 () ListLongMap!1591)

(assert (=> b!109893 (= e!71507 call!11715)))

(declare-fun b!109894 () Bool)

(assert (=> b!109894 (= e!71497 (not call!11693))))

(declare-fun b!109895 () Bool)

(assert (=> b!109895 (= e!71510 e!71501)))

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!4389 (_ BitVec 32)) SeekEntryResult!261)

(assert (=> b!109895 (= lt!56591 (seekEntryOrOpen!0 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (_keys!4341 newMap!16) (mask!6795 newMap!16)))))

(assert (=> b!109895 (= c!19445 ((_ is Undefined!261) lt!56591))))

(declare-fun b!109896 () Bool)

(assert (=> b!109896 (= e!71495 e!71493)))

(declare-fun res!54360 () Bool)

(assert (=> b!109896 (= res!54360 (contains!838 call!11706 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(assert (=> b!109896 (=> (not res!54360) (not e!71493))))

(declare-fun b!109897 () Bool)

(assert (=> b!109897 (= e!71499 (getCurrentListMap!496 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun b!109898 () Bool)

(declare-fun lt!56573 () Unit!3403)

(declare-fun lt!56570 () Unit!3403)

(assert (=> b!109898 (= lt!56573 lt!56570)))

(assert (=> b!109898 (= call!11704 call!11702)))

(declare-fun lt!56572 () (_ BitVec 32))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!49 (array!4389 array!4391 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3243 V!3243 V!3243 Int) Unit!3403)

(assert (=> b!109898 (= lt!56570 (lemmaChangeZeroKeyThenAddPairToListMap!49 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) lt!56572 (zeroValue!2498 newMap!16) lt!56458 (minValue!2498 newMap!16) (defaultEntry!2627 newMap!16)))))

(assert (=> b!109898 (= lt!56572 (bvor (extraKeys!2424 newMap!16) #b00000000000000000000000000000001))))

(assert (=> b!109898 (= e!71513 (tuple2!2439 true (LongMapFixedSize!919 (defaultEntry!2627 newMap!16) (mask!6795 newMap!16) (bvor (extraKeys!2424 newMap!16) #b00000000000000000000000000000001) lt!56458 (minValue!2498 newMap!16) (_size!508 newMap!16) (_keys!4341 newMap!16) (_values!2610 newMap!16) (_vacant!508 newMap!16))))))

(declare-fun b!109899 () Bool)

(declare-fun e!71500 () Unit!3403)

(declare-fun Unit!3411 () Unit!3403)

(assert (=> b!109899 (= e!71500 Unit!3411)))

(declare-fun lt!56592 () Unit!3403)

(assert (=> b!109899 (= lt!56592 call!11703)))

(assert (=> b!109899 (= lt!56587 call!11712)))

(declare-fun res!54365 () Bool)

(assert (=> b!109899 (= res!54365 ((_ is Found!261) lt!56587))))

(assert (=> b!109899 (=> (not res!54365) (not e!71509))))

(assert (=> b!109899 e!71509))

(declare-fun lt!56588 () Unit!3403)

(assert (=> b!109899 (= lt!56588 lt!56592)))

(assert (=> b!109899 false))

(declare-fun b!109900 () Bool)

(assert (=> b!109900 (= e!71498 ((_ is Undefined!261) lt!56584))))

(declare-fun b!109901 () Bool)

(declare-fun lt!56585 () Unit!3403)

(assert (=> b!109901 (= e!71506 lt!56585)))

(assert (=> b!109901 (= lt!56585 call!11703)))

(assert (=> b!109901 (= lt!56574 call!11701)))

(declare-fun res!54364 () Bool)

(assert (=> b!109901 (= res!54364 ((_ is Found!261) lt!56574))))

(assert (=> b!109901 (=> (not res!54364) (not e!71494))))

(assert (=> b!109901 e!71494))

(declare-fun b!109902 () Bool)

(declare-fun res!54371 () Bool)

(assert (=> b!109902 (=> (not res!54371) (not e!71497))))

(assert (=> b!109902 (= res!54371 (= (select (arr!2081 (_keys!4341 newMap!16)) (index!3194 lt!56584)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!11707 () Bool)

(assert (=> bm!11707 (= call!11713 (arrayContainsKey!0 (_keys!4341 newMap!16) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!109903 () Bool)

(assert (=> b!109903 (= e!71502 e!71504)))

(declare-fun res!54372 () Bool)

(assert (=> b!109903 (= res!54372 call!11695)))

(assert (=> b!109903 (=> (not res!54372) (not e!71504))))

(declare-fun bm!11708 () Bool)

(assert (=> bm!11708 (= call!11695 call!11711)))

(declare-fun bm!11709 () Bool)

(declare-fun c!19439 () Bool)

(assert (=> bm!11709 (= c!19439 c!19445)))

(assert (=> bm!11709 (= call!11699 (contains!838 e!71507 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(declare-fun bm!11710 () Bool)

(assert (=> bm!11710 (= call!11692 (seekEntryOrOpen!0 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (_keys!4341 newMap!16) (mask!6795 newMap!16)))))

(declare-fun b!109904 () Bool)

(declare-fun Unit!3412 () Unit!3403)

(assert (=> b!109904 (= e!71506 Unit!3412)))

(declare-fun lt!56566 () Unit!3403)

(assert (=> b!109904 (= lt!56566 call!11696)))

(assert (=> b!109904 (= lt!56578 call!11701)))

(assert (=> b!109904 (= c!19440 ((_ is MissingZero!261) lt!56578))))

(assert (=> b!109904 e!71512))

(declare-fun lt!56583 () Unit!3403)

(assert (=> b!109904 (= lt!56583 lt!56566)))

(assert (=> b!109904 false))

(declare-fun b!109905 () Bool)

(declare-fun res!54362 () Bool)

(assert (=> b!109905 (= res!54362 (= (select (arr!2081 (_keys!4341 newMap!16)) (index!3197 lt!56584)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!109905 (=> (not res!54362) (not e!71503))))

(declare-fun b!109906 () Bool)

(assert (=> b!109906 (= e!71507 (getCurrentListMap!496 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun b!109907 () Bool)

(declare-fun lt!56567 () Unit!3403)

(assert (=> b!109907 (= lt!56567 e!71500)))

(assert (=> b!109907 (= c!19447 call!11699)))

(assert (=> b!109907 (= e!71501 (tuple2!2439 false newMap!16))))

(declare-fun b!109908 () Bool)

(declare-fun lt!56580 () Unit!3403)

(assert (=> b!109908 (= e!71500 lt!56580)))

(assert (=> b!109908 (= lt!56580 call!11696)))

(assert (=> b!109908 (= lt!56584 call!11712)))

(assert (=> b!109908 (= c!19437 ((_ is MissingZero!261) lt!56584))))

(assert (=> b!109908 e!71511))

(declare-fun bm!11711 () Bool)

(assert (=> bm!11711 (= call!11709 (getCurrentListMap!496 (_keys!4341 newMap!16) (ite (or c!19438 c!19445) (_values!2610 newMap!16) (array!4392 (store (arr!2082 (_values!2610 newMap!16)) (index!3195 lt!56591) (ValueCellFull!1005 lt!56458)) (size!2339 (_values!2610 newMap!16)))) (mask!6795 newMap!16) (ite c!19438 (ite c!19444 (extraKeys!2424 newMap!16) lt!56577) (extraKeys!2424 newMap!16)) (zeroValue!2498 newMap!16) (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun d!30821 () Bool)

(assert (=> d!30821 e!71492))

(declare-fun res!54370 () Bool)

(assert (=> d!30821 (=> (not res!54370) (not e!71492))))

(assert (=> d!30821 (= res!54370 (valid!430 (_2!1230 lt!56590)))))

(assert (=> d!30821 (= lt!56590 e!71510)))

(assert (=> d!30821 (= c!19438 (= (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (bvneg (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355))))))

(assert (=> d!30821 (valid!430 newMap!16)))

(assert (=> d!30821 (= (update!162 newMap!16 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458) lt!56590)))

(declare-fun b!109873 () Bool)

(declare-fun res!54367 () Bool)

(assert (=> b!109873 (=> (not res!54367) (not e!71505))))

(assert (=> b!109873 (= res!54367 (= (select (arr!2081 (_keys!4341 newMap!16)) (index!3194 lt!56578)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!109909 () Bool)

(assert (=> b!109909 (= e!71503 (not call!11693))))

(declare-fun bm!11712 () Bool)

(assert (=> bm!11712 (= call!11697 (getCurrentListMap!496 (_keys!4341 newMap!16) (ite c!19438 (_values!2610 newMap!16) lt!56569) (mask!6795 newMap!16) (ite (and c!19438 c!19444) lt!56572 (extraKeys!2424 newMap!16)) (ite (and c!19438 c!19444) lt!56458 (zeroValue!2498 newMap!16)) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun b!109910 () Bool)

(assert (=> b!109910 (= e!71504 (not call!11710))))

(declare-fun b!109911 () Bool)

(assert (=> b!109911 (= e!71499 (ite c!19444 call!11708 call!11702))))

(assert (= (and d!30821 c!19438) b!109887))

(assert (= (and d!30821 (not c!19438)) b!109895))

(assert (= (and b!109887 c!19444) b!109898))

(assert (= (and b!109887 (not c!19444)) b!109874))

(assert (= (or b!109898 b!109874) bm!11701))

(assert (= (or b!109898 b!109874) bm!11699))

(assert (= (or b!109898 b!109874) bm!11703))

(assert (= (and b!109895 c!19445) b!109907))

(assert (= (and b!109895 (not c!19445)) b!109890))

(assert (= (and b!109907 c!19447) b!109899))

(assert (= (and b!109907 (not c!19447)) b!109908))

(assert (= (and b!109899 res!54365) b!109892))

(assert (= (and b!109892 res!54368) b!109879))

(assert (= (and b!109908 c!19437) b!109882))

(assert (= (and b!109908 (not c!19437)) b!109891))

(assert (= (and b!109882 res!54359) b!109902))

(assert (= (and b!109902 res!54371) b!109894))

(assert (= (and b!109891 c!19435) b!109889))

(assert (= (and b!109891 (not c!19435)) b!109900))

(assert (= (and b!109889 res!54366) b!109905))

(assert (= (and b!109905 res!54362) b!109909))

(assert (= (or b!109882 b!109889) bm!11705))

(assert (= (or b!109894 b!109909) bm!11691))

(assert (= (or b!109892 bm!11705) bm!11692))

(assert (= (or b!109899 b!109908) bm!11704))

(assert (= (and b!109890 c!19436) b!109872))

(assert (= (and b!109890 (not c!19436)) b!109878))

(assert (= (and b!109878 c!19446) b!109885))

(assert (= (and b!109878 (not c!19446)) b!109876))

(assert (= (and b!109876 c!19448) b!109901))

(assert (= (and b!109876 (not c!19448)) b!109904))

(assert (= (and b!109901 res!54364) b!109888))

(assert (= (and b!109888 res!54369) b!109886))

(assert (= (and b!109904 c!19440) b!109871))

(assert (= (and b!109904 (not c!19440)) b!109880))

(assert (= (and b!109871 res!54361) b!109873))

(assert (= (and b!109873 res!54367) b!109875))

(assert (= (and b!109880 c!19443) b!109903))

(assert (= (and b!109880 (not c!19443)) b!109870))

(assert (= (and b!109903 res!54372) b!109881))

(assert (= (and b!109881 res!54363) b!109910))

(assert (= (or b!109871 b!109903) bm!11708))

(assert (= (or b!109875 b!109910) bm!11698))

(assert (= (or b!109888 bm!11708) bm!11702))

(assert (= (or b!109901 b!109904) bm!11695))

(assert (= (or b!109872 b!109885) bm!11690))

(assert (= (or bm!11692 bm!11702) bm!11700))

(assert (= (or bm!11704 bm!11695) bm!11710))

(assert (= (or b!109908 b!109904) bm!11696))

(assert (= (or b!109907 b!109876) bm!11693))

(assert (= (or b!109899 b!109901) bm!11706))

(assert (= (or bm!11691 bm!11698) bm!11707))

(assert (= (or b!109907 b!109876) bm!11709))

(assert (= (and bm!11709 c!19439) b!109893))

(assert (= (and bm!11709 (not c!19439)) b!109906))

(assert (= (or bm!11701 bm!11693) bm!11711))

(assert (= (or bm!11699 b!109876) bm!11712))

(assert (= (or bm!11703 b!109876) bm!11694))

(assert (= (and bm!11694 c!19441) b!109911))

(assert (= (and bm!11694 (not c!19441)) b!109897))

(assert (= (and d!30821 res!54370) b!109883))

(assert (= (and b!109883 c!19442) b!109896))

(assert (= (and b!109883 (not c!19442)) b!109884))

(assert (= (and b!109896 res!54360) b!109877))

(assert (= (or b!109896 b!109877 b!109884) bm!11697))

(assert (= (or b!109877 b!109884) bm!11689))

(declare-fun m!124431 () Bool)

(assert (=> b!109874 m!124431))

(declare-fun m!124433 () Bool)

(assert (=> bm!11712 m!124433))

(declare-fun m!124435 () Bool)

(assert (=> bm!11711 m!124435))

(declare-fun m!124437 () Bool)

(assert (=> bm!11711 m!124437))

(declare-fun m!124439 () Bool)

(assert (=> b!109876 m!124439))

(declare-fun m!124441 () Bool)

(assert (=> b!109876 m!124441))

(assert (=> b!109876 m!124435))

(assert (=> b!109876 m!124315))

(declare-fun m!124443 () Bool)

(assert (=> b!109876 m!124443))

(assert (=> b!109876 m!124439))

(declare-fun m!124445 () Bool)

(assert (=> b!109876 m!124445))

(assert (=> bm!11707 m!124315))

(declare-fun m!124447 () Bool)

(assert (=> bm!11707 m!124447))

(assert (=> bm!11689 m!124357))

(assert (=> bm!11696 m!124315))

(declare-fun m!124449 () Bool)

(assert (=> bm!11696 m!124449))

(declare-fun m!124451 () Bool)

(assert (=> b!109881 m!124451))

(assert (=> b!109895 m!124315))

(declare-fun m!124453 () Bool)

(assert (=> b!109895 m!124453))

(declare-fun m!124455 () Bool)

(assert (=> b!109877 m!124455))

(declare-fun m!124457 () Bool)

(assert (=> bm!11694 m!124457))

(declare-fun m!124459 () Bool)

(assert (=> b!109873 m!124459))

(declare-fun m!124461 () Bool)

(assert (=> b!109886 m!124461))

(assert (=> bm!11710 m!124315))

(assert (=> bm!11710 m!124453))

(declare-fun m!124463 () Bool)

(assert (=> d!30821 m!124463))

(assert (=> d!30821 m!124347))

(assert (=> bm!11690 m!124315))

(declare-fun m!124465 () Bool)

(assert (=> bm!11690 m!124465))

(declare-fun m!124467 () Bool)

(assert (=> b!109902 m!124467))

(assert (=> bm!11706 m!124315))

(declare-fun m!124469 () Bool)

(assert (=> bm!11706 m!124469))

(declare-fun m!124471 () Bool)

(assert (=> b!109905 m!124471))

(declare-fun m!124473 () Bool)

(assert (=> b!109898 m!124473))

(declare-fun m!124475 () Bool)

(assert (=> bm!11700 m!124475))

(assert (=> bm!11709 m!124315))

(declare-fun m!124477 () Bool)

(assert (=> bm!11709 m!124477))

(declare-fun m!124479 () Bool)

(assert (=> bm!11697 m!124479))

(assert (=> b!109896 m!124315))

(declare-fun m!124481 () Bool)

(assert (=> b!109896 m!124481))

(declare-fun m!124483 () Bool)

(assert (=> b!109879 m!124483))

(declare-fun m!124485 () Bool)

(assert (=> b!109906 m!124485))

(assert (=> b!109897 m!124485))

(assert (=> b!109699 d!30821))

(declare-fun d!30823 () Bool)

(assert (=> d!30823 (= (+!150 (+!150 lt!56462 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))) (+!150 (+!150 lt!56462 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))))

(declare-fun lt!56595 () Unit!3403)

(declare-fun choose!682 (ListLongMap!1591 (_ BitVec 64) V!3243 (_ BitVec 64) V!3243) Unit!3403)

(assert (=> d!30823 (= lt!56595 (choose!682 lt!56462 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))

(assert (=> d!30823 (not (= (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!30823 (= (addCommutativeForDiffKeys!62 lt!56462 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))) lt!56595)))

(declare-fun bs!4522 () Bool)

(assert (= bs!4522 d!30823))

(declare-fun m!124487 () Bool)

(assert (=> bs!4522 m!124487))

(declare-fun m!124489 () Bool)

(assert (=> bs!4522 m!124489))

(declare-fun m!124491 () Bool)

(assert (=> bs!4522 m!124491))

(assert (=> bs!4522 m!124315))

(declare-fun m!124493 () Bool)

(assert (=> bs!4522 m!124493))

(assert (=> bs!4522 m!124487))

(declare-fun m!124495 () Bool)

(assert (=> bs!4522 m!124495))

(assert (=> bs!4522 m!124489))

(assert (=> b!109705 d!30823))

(declare-fun b!109936 () Bool)

(declare-fun e!71531 () Bool)

(declare-fun e!71532 () Bool)

(assert (=> b!109936 (= e!71531 e!71532)))

(declare-fun c!19458 () Bool)

(assert (=> b!109936 (= c!19458 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2338 (_keys!4341 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun b!109937 () Bool)

(declare-fun e!71534 () Bool)

(assert (=> b!109937 (= e!71534 e!71531)))

(declare-fun c!19459 () Bool)

(declare-fun e!71528 () Bool)

(assert (=> b!109937 (= c!19459 e!71528)))

(declare-fun res!54384 () Bool)

(assert (=> b!109937 (=> (not res!54384) (not e!71528))))

(assert (=> b!109937 (= res!54384 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2338 (_keys!4341 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun b!109938 () Bool)

(declare-fun lt!56615 () Unit!3403)

(declare-fun lt!56611 () Unit!3403)

(assert (=> b!109938 (= lt!56615 lt!56611)))

(declare-fun lt!56610 () (_ BitVec 64))

(declare-fun lt!56613 () ListLongMap!1591)

(declare-fun lt!56614 () (_ BitVec 64))

(declare-fun lt!56616 () V!3243)

(assert (=> b!109938 (not (contains!838 (+!150 lt!56613 (tuple2!2441 lt!56610 lt!56616)) lt!56614))))

(declare-fun addStillNotContains!48 (ListLongMap!1591 (_ BitVec 64) V!3243 (_ BitVec 64)) Unit!3403)

(assert (=> b!109938 (= lt!56611 (addStillNotContains!48 lt!56613 lt!56610 lt!56616 lt!56614))))

(assert (=> b!109938 (= lt!56614 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!109938 (= lt!56616 (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!109938 (= lt!56610 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun call!11718 () ListLongMap!1591)

(assert (=> b!109938 (= lt!56613 call!11718)))

(declare-fun e!71530 () ListLongMap!1591)

(assert (=> b!109938 (= e!71530 (+!150 call!11718 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!109939 () Bool)

(declare-fun res!54381 () Bool)

(assert (=> b!109939 (=> (not res!54381) (not e!71534))))

(declare-fun lt!56612 () ListLongMap!1591)

(assert (=> b!109939 (= res!54381 (not (contains!838 lt!56612 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!109940 () Bool)

(declare-fun e!71529 () Bool)

(assert (=> b!109940 (= e!71531 e!71529)))

(assert (=> b!109940 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2338 (_keys!4341 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun res!54382 () Bool)

(assert (=> b!109940 (= res!54382 (contains!838 lt!56612 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!109940 (=> (not res!54382) (not e!71529))))

(declare-fun b!109941 () Bool)

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!109941 (= e!71528 (validKeyInArray!0 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!109941 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(declare-fun b!109942 () Bool)

(declare-fun e!71533 () ListLongMap!1591)

(assert (=> b!109942 (= e!71533 e!71530)))

(declare-fun c!19457 () Bool)

(assert (=> b!109942 (= c!19457 (validKeyInArray!0 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun d!30825 () Bool)

(assert (=> d!30825 e!71534))

(declare-fun res!54383 () Bool)

(assert (=> d!30825 (=> (not res!54383) (not e!71534))))

(assert (=> d!30825 (= res!54383 (not (contains!838 lt!56612 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!30825 (= lt!56612 e!71533)))

(declare-fun c!19460 () Bool)

(assert (=> d!30825 (= c!19460 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2338 (_keys!4341 (v!2930 (underlying!370 thiss!992))))))))

(assert (=> d!30825 (validMask!0 (mask!6795 (v!2930 (underlying!370 thiss!992))))))

(assert (=> d!30825 (= (getCurrentListMapNoExtraKeys!116 (_keys!4341 (v!2930 (underlying!370 thiss!992))) (_values!2610 (v!2930 (underlying!370 thiss!992))) (mask!6795 (v!2930 (underlying!370 thiss!992))) (extraKeys!2424 (v!2930 (underlying!370 thiss!992))) (zeroValue!2498 (v!2930 (underlying!370 thiss!992))) (minValue!2498 (v!2930 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2627 (v!2930 (underlying!370 thiss!992)))) lt!56612)))

(declare-fun b!109943 () Bool)

(assert (=> b!109943 (= e!71532 (= lt!56612 (getCurrentListMapNoExtraKeys!116 (_keys!4341 (v!2930 (underlying!370 thiss!992))) (_values!2610 (v!2930 (underlying!370 thiss!992))) (mask!6795 (v!2930 (underlying!370 thiss!992))) (extraKeys!2424 (v!2930 (underlying!370 thiss!992))) (zeroValue!2498 (v!2930 (underlying!370 thiss!992))) (minValue!2498 (v!2930 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun b!109944 () Bool)

(assert (=> b!109944 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2338 (_keys!4341 (v!2930 (underlying!370 thiss!992))))))))

(assert (=> b!109944 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2339 (_values!2610 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun apply!100 (ListLongMap!1591 (_ BitVec 64)) V!3243)

(assert (=> b!109944 (= e!71529 (= (apply!100 lt!56612 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bm!11715 () Bool)

(assert (=> bm!11715 (= call!11718 (getCurrentListMapNoExtraKeys!116 (_keys!4341 (v!2930 (underlying!370 thiss!992))) (_values!2610 (v!2930 (underlying!370 thiss!992))) (mask!6795 (v!2930 (underlying!370 thiss!992))) (extraKeys!2424 (v!2930 (underlying!370 thiss!992))) (zeroValue!2498 (v!2930 (underlying!370 thiss!992))) (minValue!2498 (v!2930 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2627 (v!2930 (underlying!370 thiss!992)))))))

(declare-fun b!109945 () Bool)

(assert (=> b!109945 (= e!71530 call!11718)))

(declare-fun b!109946 () Bool)

(declare-fun isEmpty!376 (ListLongMap!1591) Bool)

(assert (=> b!109946 (= e!71532 (isEmpty!376 lt!56612))))

(declare-fun b!109947 () Bool)

(assert (=> b!109947 (= e!71533 (ListLongMap!1592 Nil!1627))))

(assert (= (and d!30825 c!19460) b!109947))

(assert (= (and d!30825 (not c!19460)) b!109942))

(assert (= (and b!109942 c!19457) b!109938))

(assert (= (and b!109942 (not c!19457)) b!109945))

(assert (= (or b!109938 b!109945) bm!11715))

(assert (= (and d!30825 res!54383) b!109939))

(assert (= (and b!109939 res!54381) b!109937))

(assert (= (and b!109937 res!54384) b!109941))

(assert (= (and b!109937 c!19459) b!109940))

(assert (= (and b!109937 (not c!19459)) b!109936))

(assert (= (and b!109940 res!54382) b!109944))

(assert (= (and b!109936 c!19458) b!109943))

(assert (= (and b!109936 (not c!19458)) b!109946))

(declare-fun b_lambda!4923 () Bool)

(assert (=> (not b_lambda!4923) (not b!109938)))

(assert (=> b!109938 t!5764))

(declare-fun b_and!6775 () Bool)

(assert (= b_and!6763 (and (=> t!5764 result!3523) b_and!6775)))

(assert (=> b!109938 t!5766))

(declare-fun b_and!6777 () Bool)

(assert (= b_and!6765 (and (=> t!5766 result!3527) b_and!6777)))

(declare-fun b_lambda!4925 () Bool)

(assert (=> (not b_lambda!4925) (not b!109944)))

(assert (=> b!109944 t!5764))

(declare-fun b_and!6779 () Bool)

(assert (= b_and!6775 (and (=> t!5764 result!3523) b_and!6779)))

(assert (=> b!109944 t!5766))

(declare-fun b_and!6781 () Bool)

(assert (= b_and!6777 (and (=> t!5766 result!3527) b_and!6781)))

(declare-fun m!124497 () Bool)

(assert (=> b!109943 m!124497))

(declare-fun m!124499 () Bool)

(assert (=> b!109939 m!124499))

(declare-fun m!124501 () Bool)

(assert (=> d!30825 m!124501))

(assert (=> d!30825 m!124329))

(declare-fun m!124503 () Bool)

(assert (=> b!109944 m!124503))

(declare-fun m!124505 () Bool)

(assert (=> b!109944 m!124505))

(assert (=> b!109944 m!124363))

(declare-fun m!124507 () Bool)

(assert (=> b!109944 m!124507))

(assert (=> b!109944 m!124363))

(assert (=> b!109944 m!124505))

(assert (=> b!109944 m!124503))

(declare-fun m!124509 () Bool)

(assert (=> b!109944 m!124509))

(assert (=> b!109941 m!124503))

(assert (=> b!109941 m!124503))

(declare-fun m!124511 () Bool)

(assert (=> b!109941 m!124511))

(assert (=> b!109942 m!124503))

(assert (=> b!109942 m!124503))

(assert (=> b!109942 m!124511))

(declare-fun m!124513 () Bool)

(assert (=> b!109946 m!124513))

(assert (=> b!109938 m!124503))

(declare-fun m!124515 () Bool)

(assert (=> b!109938 m!124515))

(declare-fun m!124517 () Bool)

(assert (=> b!109938 m!124517))

(declare-fun m!124519 () Bool)

(assert (=> b!109938 m!124519))

(assert (=> b!109938 m!124363))

(assert (=> b!109938 m!124505))

(assert (=> b!109938 m!124515))

(declare-fun m!124521 () Bool)

(assert (=> b!109938 m!124521))

(assert (=> b!109938 m!124505))

(assert (=> b!109938 m!124363))

(assert (=> b!109938 m!124507))

(assert (=> b!109940 m!124503))

(assert (=> b!109940 m!124503))

(declare-fun m!124523 () Bool)

(assert (=> b!109940 m!124523))

(assert (=> bm!11715 m!124497))

(assert (=> b!109705 d!30825))

(declare-fun d!30827 () Bool)

(declare-fun e!71537 () Bool)

(assert (=> d!30827 e!71537))

(declare-fun res!54389 () Bool)

(assert (=> d!30827 (=> (not res!54389) (not e!71537))))

(declare-fun lt!56627 () ListLongMap!1591)

(assert (=> d!30827 (= res!54389 (contains!838 lt!56627 (_1!1231 lt!56457)))))

(declare-fun lt!56626 () List!1630)

(assert (=> d!30827 (= lt!56627 (ListLongMap!1592 lt!56626))))

(declare-fun lt!56628 () Unit!3403)

(declare-fun lt!56625 () Unit!3403)

(assert (=> d!30827 (= lt!56628 lt!56625)))

(assert (=> d!30827 (= (getValueByKey!158 lt!56626 (_1!1231 lt!56457)) (Some!163 (_2!1231 lt!56457)))))

(declare-fun lemmaContainsTupThenGetReturnValue!74 (List!1630 (_ BitVec 64) V!3243) Unit!3403)

(assert (=> d!30827 (= lt!56625 (lemmaContainsTupThenGetReturnValue!74 lt!56626 (_1!1231 lt!56457) (_2!1231 lt!56457)))))

(declare-fun insertStrictlySorted!77 (List!1630 (_ BitVec 64) V!3243) List!1630)

(assert (=> d!30827 (= lt!56626 (insertStrictlySorted!77 (toList!811 (+!150 lt!56462 lt!56454)) (_1!1231 lt!56457) (_2!1231 lt!56457)))))

(assert (=> d!30827 (= (+!150 (+!150 lt!56462 lt!56454) lt!56457) lt!56627)))

(declare-fun b!109952 () Bool)

(declare-fun res!54390 () Bool)

(assert (=> b!109952 (=> (not res!54390) (not e!71537))))

(assert (=> b!109952 (= res!54390 (= (getValueByKey!158 (toList!811 lt!56627) (_1!1231 lt!56457)) (Some!163 (_2!1231 lt!56457))))))

(declare-fun b!109953 () Bool)

(declare-fun contains!839 (List!1630 tuple2!2440) Bool)

(assert (=> b!109953 (= e!71537 (contains!839 (toList!811 lt!56627) lt!56457))))

(assert (= (and d!30827 res!54389) b!109952))

(assert (= (and b!109952 res!54390) b!109953))

(declare-fun m!124525 () Bool)

(assert (=> d!30827 m!124525))

(declare-fun m!124527 () Bool)

(assert (=> d!30827 m!124527))

(declare-fun m!124529 () Bool)

(assert (=> d!30827 m!124529))

(declare-fun m!124531 () Bool)

(assert (=> d!30827 m!124531))

(declare-fun m!124533 () Bool)

(assert (=> b!109952 m!124533))

(declare-fun m!124535 () Bool)

(assert (=> b!109953 m!124535))

(assert (=> b!109705 d!30827))

(declare-fun d!30829 () Bool)

(declare-fun e!71538 () Bool)

(assert (=> d!30829 e!71538))

(declare-fun res!54391 () Bool)

(assert (=> d!30829 (=> (not res!54391) (not e!71538))))

(declare-fun lt!56631 () ListLongMap!1591)

(assert (=> d!30829 (= res!54391 (contains!838 lt!56631 (_1!1231 lt!56454)))))

(declare-fun lt!56630 () List!1630)

(assert (=> d!30829 (= lt!56631 (ListLongMap!1592 lt!56630))))

(declare-fun lt!56632 () Unit!3403)

(declare-fun lt!56629 () Unit!3403)

(assert (=> d!30829 (= lt!56632 lt!56629)))

(assert (=> d!30829 (= (getValueByKey!158 lt!56630 (_1!1231 lt!56454)) (Some!163 (_2!1231 lt!56454)))))

(assert (=> d!30829 (= lt!56629 (lemmaContainsTupThenGetReturnValue!74 lt!56630 (_1!1231 lt!56454) (_2!1231 lt!56454)))))

(assert (=> d!30829 (= lt!56630 (insertStrictlySorted!77 (toList!811 lt!56462) (_1!1231 lt!56454) (_2!1231 lt!56454)))))

(assert (=> d!30829 (= (+!150 lt!56462 lt!56454) lt!56631)))

(declare-fun b!109954 () Bool)

(declare-fun res!54392 () Bool)

(assert (=> b!109954 (=> (not res!54392) (not e!71538))))

(assert (=> b!109954 (= res!54392 (= (getValueByKey!158 (toList!811 lt!56631) (_1!1231 lt!56454)) (Some!163 (_2!1231 lt!56454))))))

(declare-fun b!109955 () Bool)

(assert (=> b!109955 (= e!71538 (contains!839 (toList!811 lt!56631) lt!56454))))

(assert (= (and d!30829 res!54391) b!109954))

(assert (= (and b!109954 res!54392) b!109955))

(declare-fun m!124537 () Bool)

(assert (=> d!30829 m!124537))

(declare-fun m!124539 () Bool)

(assert (=> d!30829 m!124539))

(declare-fun m!124541 () Bool)

(assert (=> d!30829 m!124541))

(declare-fun m!124543 () Bool)

(assert (=> d!30829 m!124543))

(declare-fun m!124545 () Bool)

(assert (=> b!109954 m!124545))

(declare-fun m!124547 () Bool)

(assert (=> b!109955 m!124547))

(assert (=> b!109705 d!30829))

(declare-fun d!30831 () Bool)

(assert (=> d!30831 (= (validMask!0 (mask!6795 (v!2930 (underlying!370 thiss!992)))) (and (or (= (mask!6795 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000000111) (= (mask!6795 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000001111) (= (mask!6795 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000011111) (= (mask!6795 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000111111) (= (mask!6795 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000001111111) (= (mask!6795 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000011111111) (= (mask!6795 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000111111111) (= (mask!6795 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000001111111111) (= (mask!6795 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000011111111111) (= (mask!6795 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000111111111111) (= (mask!6795 (v!2930 (underlying!370 thiss!992))) #b00000000000000000001111111111111) (= (mask!6795 (v!2930 (underlying!370 thiss!992))) #b00000000000000000011111111111111) (= (mask!6795 (v!2930 (underlying!370 thiss!992))) #b00000000000000000111111111111111) (= (mask!6795 (v!2930 (underlying!370 thiss!992))) #b00000000000000001111111111111111) (= (mask!6795 (v!2930 (underlying!370 thiss!992))) #b00000000000000011111111111111111) (= (mask!6795 (v!2930 (underlying!370 thiss!992))) #b00000000000000111111111111111111) (= (mask!6795 (v!2930 (underlying!370 thiss!992))) #b00000000000001111111111111111111) (= (mask!6795 (v!2930 (underlying!370 thiss!992))) #b00000000000011111111111111111111) (= (mask!6795 (v!2930 (underlying!370 thiss!992))) #b00000000000111111111111111111111) (= (mask!6795 (v!2930 (underlying!370 thiss!992))) #b00000000001111111111111111111111) (= (mask!6795 (v!2930 (underlying!370 thiss!992))) #b00000000011111111111111111111111) (= (mask!6795 (v!2930 (underlying!370 thiss!992))) #b00000000111111111111111111111111) (= (mask!6795 (v!2930 (underlying!370 thiss!992))) #b00000001111111111111111111111111) (= (mask!6795 (v!2930 (underlying!370 thiss!992))) #b00000011111111111111111111111111) (= (mask!6795 (v!2930 (underlying!370 thiss!992))) #b00000111111111111111111111111111) (= (mask!6795 (v!2930 (underlying!370 thiss!992))) #b00001111111111111111111111111111) (= (mask!6795 (v!2930 (underlying!370 thiss!992))) #b00011111111111111111111111111111) (= (mask!6795 (v!2930 (underlying!370 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!6795 (v!2930 (underlying!370 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> b!109705 d!30831))

(declare-fun d!30833 () Bool)

(declare-fun e!71539 () Bool)

(assert (=> d!30833 e!71539))

(declare-fun res!54393 () Bool)

(assert (=> d!30833 (=> (not res!54393) (not e!71539))))

(declare-fun lt!56635 () ListLongMap!1591)

(assert (=> d!30833 (= res!54393 (contains!838 lt!56635 (_1!1231 lt!56454)))))

(declare-fun lt!56634 () List!1630)

(assert (=> d!30833 (= lt!56635 (ListLongMap!1592 lt!56634))))

(declare-fun lt!56636 () Unit!3403)

(declare-fun lt!56633 () Unit!3403)

(assert (=> d!30833 (= lt!56636 lt!56633)))

(assert (=> d!30833 (= (getValueByKey!158 lt!56634 (_1!1231 lt!56454)) (Some!163 (_2!1231 lt!56454)))))

(assert (=> d!30833 (= lt!56633 (lemmaContainsTupThenGetReturnValue!74 lt!56634 (_1!1231 lt!56454) (_2!1231 lt!56454)))))

(assert (=> d!30833 (= lt!56634 (insertStrictlySorted!77 (toList!811 (+!150 lt!56462 lt!56457)) (_1!1231 lt!56454) (_2!1231 lt!56454)))))

(assert (=> d!30833 (= (+!150 (+!150 lt!56462 lt!56457) lt!56454) lt!56635)))

(declare-fun b!109956 () Bool)

(declare-fun res!54394 () Bool)

(assert (=> b!109956 (=> (not res!54394) (not e!71539))))

(assert (=> b!109956 (= res!54394 (= (getValueByKey!158 (toList!811 lt!56635) (_1!1231 lt!56454)) (Some!163 (_2!1231 lt!56454))))))

(declare-fun b!109957 () Bool)

(assert (=> b!109957 (= e!71539 (contains!839 (toList!811 lt!56635) lt!56454))))

(assert (= (and d!30833 res!54393) b!109956))

(assert (= (and b!109956 res!54394) b!109957))

(declare-fun m!124549 () Bool)

(assert (=> d!30833 m!124549))

(declare-fun m!124551 () Bool)

(assert (=> d!30833 m!124551))

(declare-fun m!124553 () Bool)

(assert (=> d!30833 m!124553))

(declare-fun m!124555 () Bool)

(assert (=> d!30833 m!124555))

(declare-fun m!124557 () Bool)

(assert (=> b!109956 m!124557))

(declare-fun m!124559 () Bool)

(assert (=> b!109957 m!124559))

(assert (=> b!109705 d!30833))

(declare-fun d!30835 () Bool)

(declare-fun e!71540 () Bool)

(assert (=> d!30835 e!71540))

(declare-fun res!54395 () Bool)

(assert (=> d!30835 (=> (not res!54395) (not e!71540))))

(declare-fun lt!56639 () ListLongMap!1591)

(assert (=> d!30835 (= res!54395 (contains!838 lt!56639 (_1!1231 lt!56457)))))

(declare-fun lt!56638 () List!1630)

(assert (=> d!30835 (= lt!56639 (ListLongMap!1592 lt!56638))))

(declare-fun lt!56640 () Unit!3403)

(declare-fun lt!56637 () Unit!3403)

(assert (=> d!30835 (= lt!56640 lt!56637)))

(assert (=> d!30835 (= (getValueByKey!158 lt!56638 (_1!1231 lt!56457)) (Some!163 (_2!1231 lt!56457)))))

(assert (=> d!30835 (= lt!56637 (lemmaContainsTupThenGetReturnValue!74 lt!56638 (_1!1231 lt!56457) (_2!1231 lt!56457)))))

(assert (=> d!30835 (= lt!56638 (insertStrictlySorted!77 (toList!811 lt!56462) (_1!1231 lt!56457) (_2!1231 lt!56457)))))

(assert (=> d!30835 (= (+!150 lt!56462 lt!56457) lt!56639)))

(declare-fun b!109958 () Bool)

(declare-fun res!54396 () Bool)

(assert (=> b!109958 (=> (not res!54396) (not e!71540))))

(assert (=> b!109958 (= res!54396 (= (getValueByKey!158 (toList!811 lt!56639) (_1!1231 lt!56457)) (Some!163 (_2!1231 lt!56457))))))

(declare-fun b!109959 () Bool)

(assert (=> b!109959 (= e!71540 (contains!839 (toList!811 lt!56639) lt!56457))))

(assert (= (and d!30835 res!54395) b!109958))

(assert (= (and b!109958 res!54396) b!109959))

(declare-fun m!124561 () Bool)

(assert (=> d!30835 m!124561))

(declare-fun m!124563 () Bool)

(assert (=> d!30835 m!124563))

(declare-fun m!124565 () Bool)

(assert (=> d!30835 m!124565))

(declare-fun m!124567 () Bool)

(assert (=> d!30835 m!124567))

(declare-fun m!124569 () Bool)

(assert (=> b!109958 m!124569))

(declare-fun m!124571 () Bool)

(assert (=> b!109959 m!124571))

(assert (=> b!109705 d!30835))

(declare-fun d!30837 () Bool)

(assert (=> d!30837 (= (map!1299 newMap!16) (getCurrentListMap!496 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun bs!4523 () Bool)

(assert (= bs!4523 d!30837))

(assert (=> bs!4523 m!124485))

(assert (=> b!109700 d!30837))

(declare-fun b!110002 () Bool)

(declare-fun c!19474 () Bool)

(assert (=> b!110002 (= c!19474 (and (not (= (bvand (extraKeys!2424 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2424 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!71570 () ListLongMap!1591)

(declare-fun e!71575 () ListLongMap!1591)

(assert (=> b!110002 (= e!71570 e!71575)))

(declare-fun bm!11730 () Bool)

(declare-fun call!11733 () ListLongMap!1591)

(declare-fun call!11736 () ListLongMap!1591)

(assert (=> bm!11730 (= call!11733 call!11736)))

(declare-fun b!110003 () Bool)

(declare-fun e!71573 () Bool)

(declare-fun e!71567 () Bool)

(assert (=> b!110003 (= e!71573 e!71567)))

(declare-fun res!54417 () Bool)

(assert (=> b!110003 (=> (not res!54417) (not e!71567))))

(declare-fun lt!56699 () ListLongMap!1591)

(assert (=> b!110003 (= res!54417 (contains!838 lt!56699 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!110003 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2338 (_keys!4341 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun b!110004 () Bool)

(declare-fun e!71568 () Bool)

(declare-fun e!71579 () Bool)

(assert (=> b!110004 (= e!71568 e!71579)))

(declare-fun res!54415 () Bool)

(declare-fun call!11739 () Bool)

(assert (=> b!110004 (= res!54415 call!11739)))

(assert (=> b!110004 (=> (not res!54415) (not e!71579))))

(declare-fun b!110005 () Bool)

(declare-fun e!71577 () ListLongMap!1591)

(assert (=> b!110005 (= e!71577 e!71570)))

(declare-fun c!19478 () Bool)

(assert (=> b!110005 (= c!19478 (and (not (= (bvand (extraKeys!2424 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2424 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!110006 () Bool)

(declare-fun e!71578 () Unit!3403)

(declare-fun Unit!3413 () Unit!3403)

(assert (=> b!110006 (= e!71578 Unit!3413)))

(declare-fun b!110007 () Bool)

(declare-fun e!71574 () Bool)

(declare-fun call!11734 () Bool)

(assert (=> b!110007 (= e!71574 (not call!11734))))

(declare-fun bm!11731 () Bool)

(assert (=> bm!11731 (= call!11736 (getCurrentListMapNoExtraKeys!116 (_keys!4341 (v!2930 (underlying!370 thiss!992))) (_values!2610 (v!2930 (underlying!370 thiss!992))) (mask!6795 (v!2930 (underlying!370 thiss!992))) (extraKeys!2424 (v!2930 (underlying!370 thiss!992))) (zeroValue!2498 (v!2930 (underlying!370 thiss!992))) (minValue!2498 (v!2930 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2627 (v!2930 (underlying!370 thiss!992)))))))

(declare-fun b!110008 () Bool)

(assert (=> b!110008 (= e!71579 (= (apply!100 lt!56699 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))

(declare-fun b!110009 () Bool)

(declare-fun call!11738 () ListLongMap!1591)

(assert (=> b!110009 (= e!71577 (+!150 call!11738 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun b!110010 () Bool)

(declare-fun lt!56700 () Unit!3403)

(assert (=> b!110010 (= e!71578 lt!56700)))

(declare-fun lt!56695 () ListLongMap!1591)

(assert (=> b!110010 (= lt!56695 (getCurrentListMapNoExtraKeys!116 (_keys!4341 (v!2930 (underlying!370 thiss!992))) (_values!2610 (v!2930 (underlying!370 thiss!992))) (mask!6795 (v!2930 (underlying!370 thiss!992))) (extraKeys!2424 (v!2930 (underlying!370 thiss!992))) (zeroValue!2498 (v!2930 (underlying!370 thiss!992))) (minValue!2498 (v!2930 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2627 (v!2930 (underlying!370 thiss!992)))))))

(declare-fun lt!56694 () (_ BitVec 64))

(assert (=> b!110010 (= lt!56694 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56697 () (_ BitVec 64))

(assert (=> b!110010 (= lt!56697 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!56702 () Unit!3403)

(declare-fun addStillContains!76 (ListLongMap!1591 (_ BitVec 64) V!3243 (_ BitVec 64)) Unit!3403)

(assert (=> b!110010 (= lt!56702 (addStillContains!76 lt!56695 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))) lt!56697))))

(assert (=> b!110010 (contains!838 (+!150 lt!56695 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))) lt!56697)))

(declare-fun lt!56686 () Unit!3403)

(assert (=> b!110010 (= lt!56686 lt!56702)))

(declare-fun lt!56698 () ListLongMap!1591)

(assert (=> b!110010 (= lt!56698 (getCurrentListMapNoExtraKeys!116 (_keys!4341 (v!2930 (underlying!370 thiss!992))) (_values!2610 (v!2930 (underlying!370 thiss!992))) (mask!6795 (v!2930 (underlying!370 thiss!992))) (extraKeys!2424 (v!2930 (underlying!370 thiss!992))) (zeroValue!2498 (v!2930 (underlying!370 thiss!992))) (minValue!2498 (v!2930 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2627 (v!2930 (underlying!370 thiss!992)))))))

(declare-fun lt!56689 () (_ BitVec 64))

(assert (=> b!110010 (= lt!56689 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56696 () (_ BitVec 64))

(assert (=> b!110010 (= lt!56696 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!56704 () Unit!3403)

(declare-fun addApplyDifferent!76 (ListLongMap!1591 (_ BitVec 64) V!3243 (_ BitVec 64)) Unit!3403)

(assert (=> b!110010 (= lt!56704 (addApplyDifferent!76 lt!56698 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992))) lt!56696))))

(assert (=> b!110010 (= (apply!100 (+!150 lt!56698 (tuple2!2441 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992))))) lt!56696) (apply!100 lt!56698 lt!56696))))

(declare-fun lt!56688 () Unit!3403)

(assert (=> b!110010 (= lt!56688 lt!56704)))

(declare-fun lt!56692 () ListLongMap!1591)

(assert (=> b!110010 (= lt!56692 (getCurrentListMapNoExtraKeys!116 (_keys!4341 (v!2930 (underlying!370 thiss!992))) (_values!2610 (v!2930 (underlying!370 thiss!992))) (mask!6795 (v!2930 (underlying!370 thiss!992))) (extraKeys!2424 (v!2930 (underlying!370 thiss!992))) (zeroValue!2498 (v!2930 (underlying!370 thiss!992))) (minValue!2498 (v!2930 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2627 (v!2930 (underlying!370 thiss!992)))))))

(declare-fun lt!56685 () (_ BitVec 64))

(assert (=> b!110010 (= lt!56685 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56703 () (_ BitVec 64))

(assert (=> b!110010 (= lt!56703 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!56701 () Unit!3403)

(assert (=> b!110010 (= lt!56701 (addApplyDifferent!76 lt!56692 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))) lt!56703))))

(assert (=> b!110010 (= (apply!100 (+!150 lt!56692 (tuple2!2441 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))) lt!56703) (apply!100 lt!56692 lt!56703))))

(declare-fun lt!56691 () Unit!3403)

(assert (=> b!110010 (= lt!56691 lt!56701)))

(declare-fun lt!56705 () ListLongMap!1591)

(assert (=> b!110010 (= lt!56705 (getCurrentListMapNoExtraKeys!116 (_keys!4341 (v!2930 (underlying!370 thiss!992))) (_values!2610 (v!2930 (underlying!370 thiss!992))) (mask!6795 (v!2930 (underlying!370 thiss!992))) (extraKeys!2424 (v!2930 (underlying!370 thiss!992))) (zeroValue!2498 (v!2930 (underlying!370 thiss!992))) (minValue!2498 (v!2930 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2627 (v!2930 (underlying!370 thiss!992)))))))

(declare-fun lt!56690 () (_ BitVec 64))

(assert (=> b!110010 (= lt!56690 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56693 () (_ BitVec 64))

(assert (=> b!110010 (= lt!56693 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!110010 (= lt!56700 (addApplyDifferent!76 lt!56705 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992))) lt!56693))))

(assert (=> b!110010 (= (apply!100 (+!150 lt!56705 (tuple2!2441 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992))))) lt!56693) (apply!100 lt!56705 lt!56693))))

(declare-fun b!110011 () Bool)

(declare-fun res!54419 () Bool)

(declare-fun e!71576 () Bool)

(assert (=> b!110011 (=> (not res!54419) (not e!71576))))

(assert (=> b!110011 (= res!54419 e!71568)))

(declare-fun c!19477 () Bool)

(assert (=> b!110011 (= c!19477 (not (= (bvand (extraKeys!2424 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!110012 () Bool)

(declare-fun e!71569 () Bool)

(assert (=> b!110012 (= e!71569 (validKeyInArray!0 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!110013 () Bool)

(declare-fun e!71572 () Bool)

(assert (=> b!110013 (= e!71572 (= (apply!100 lt!56699 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))

(declare-fun bm!11732 () Bool)

(assert (=> bm!11732 (= call!11734 (contains!838 lt!56699 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110014 () Bool)

(assert (=> b!110014 (= e!71574 e!71572)))

(declare-fun res!54416 () Bool)

(assert (=> b!110014 (= res!54416 call!11734)))

(assert (=> b!110014 (=> (not res!54416) (not e!71572))))

(declare-fun call!11735 () ListLongMap!1591)

(declare-fun bm!11733 () Bool)

(declare-fun c!19473 () Bool)

(assert (=> bm!11733 (= call!11738 (+!150 (ite c!19473 call!11736 (ite c!19478 call!11733 call!11735)) (ite (or c!19473 c!19478) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun b!110015 () Bool)

(declare-fun call!11737 () ListLongMap!1591)

(assert (=> b!110015 (= e!71570 call!11737)))

(declare-fun d!30839 () Bool)

(assert (=> d!30839 e!71576))

(declare-fun res!54422 () Bool)

(assert (=> d!30839 (=> (not res!54422) (not e!71576))))

(assert (=> d!30839 (= res!54422 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2338 (_keys!4341 (v!2930 (underlying!370 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2338 (_keys!4341 (v!2930 (underlying!370 thiss!992))))))))))

(declare-fun lt!56706 () ListLongMap!1591)

(assert (=> d!30839 (= lt!56699 lt!56706)))

(declare-fun lt!56687 () Unit!3403)

(assert (=> d!30839 (= lt!56687 e!71578)))

(declare-fun c!19475 () Bool)

(declare-fun e!71571 () Bool)

(assert (=> d!30839 (= c!19475 e!71571)))

(declare-fun res!54418 () Bool)

(assert (=> d!30839 (=> (not res!54418) (not e!71571))))

(assert (=> d!30839 (= res!54418 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2338 (_keys!4341 (v!2930 (underlying!370 thiss!992))))))))

(assert (=> d!30839 (= lt!56706 e!71577)))

(assert (=> d!30839 (= c!19473 (and (not (= (bvand (extraKeys!2424 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2424 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!30839 (validMask!0 (mask!6795 (v!2930 (underlying!370 thiss!992))))))

(assert (=> d!30839 (= (getCurrentListMap!496 (_keys!4341 (v!2930 (underlying!370 thiss!992))) (_values!2610 (v!2930 (underlying!370 thiss!992))) (mask!6795 (v!2930 (underlying!370 thiss!992))) (extraKeys!2424 (v!2930 (underlying!370 thiss!992))) (zeroValue!2498 (v!2930 (underlying!370 thiss!992))) (minValue!2498 (v!2930 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2627 (v!2930 (underlying!370 thiss!992)))) lt!56699)))

(declare-fun b!110016 () Bool)

(assert (=> b!110016 (= e!71575 call!11737)))

(declare-fun b!110017 () Bool)

(assert (=> b!110017 (= e!71567 (= (apply!100 lt!56699 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!110017 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2339 (_values!2610 (v!2930 (underlying!370 thiss!992))))))))

(assert (=> b!110017 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2338 (_keys!4341 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun b!110018 () Bool)

(assert (=> b!110018 (= e!71575 call!11735)))

(declare-fun bm!11734 () Bool)

(assert (=> bm!11734 (= call!11735 call!11733)))

(declare-fun b!110019 () Bool)

(declare-fun res!54423 () Bool)

(assert (=> b!110019 (=> (not res!54423) (not e!71576))))

(assert (=> b!110019 (= res!54423 e!71573)))

(declare-fun res!54420 () Bool)

(assert (=> b!110019 (=> res!54420 e!71573)))

(assert (=> b!110019 (= res!54420 (not e!71569))))

(declare-fun res!54421 () Bool)

(assert (=> b!110019 (=> (not res!54421) (not e!71569))))

(assert (=> b!110019 (= res!54421 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2338 (_keys!4341 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun bm!11735 () Bool)

(assert (=> bm!11735 (= call!11737 call!11738)))

(declare-fun b!110020 () Bool)

(assert (=> b!110020 (= e!71571 (validKeyInArray!0 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!110021 () Bool)

(assert (=> b!110021 (= e!71576 e!71574)))

(declare-fun c!19476 () Bool)

(assert (=> b!110021 (= c!19476 (not (= (bvand (extraKeys!2424 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!110022 () Bool)

(assert (=> b!110022 (= e!71568 (not call!11739))))

(declare-fun bm!11736 () Bool)

(assert (=> bm!11736 (= call!11739 (contains!838 lt!56699 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!30839 c!19473) b!110009))

(assert (= (and d!30839 (not c!19473)) b!110005))

(assert (= (and b!110005 c!19478) b!110015))

(assert (= (and b!110005 (not c!19478)) b!110002))

(assert (= (and b!110002 c!19474) b!110016))

(assert (= (and b!110002 (not c!19474)) b!110018))

(assert (= (or b!110016 b!110018) bm!11734))

(assert (= (or b!110015 bm!11734) bm!11730))

(assert (= (or b!110015 b!110016) bm!11735))

(assert (= (or b!110009 bm!11730) bm!11731))

(assert (= (or b!110009 bm!11735) bm!11733))

(assert (= (and d!30839 res!54418) b!110020))

(assert (= (and d!30839 c!19475) b!110010))

(assert (= (and d!30839 (not c!19475)) b!110006))

(assert (= (and d!30839 res!54422) b!110019))

(assert (= (and b!110019 res!54421) b!110012))

(assert (= (and b!110019 (not res!54420)) b!110003))

(assert (= (and b!110003 res!54417) b!110017))

(assert (= (and b!110019 res!54423) b!110011))

(assert (= (and b!110011 c!19477) b!110004))

(assert (= (and b!110011 (not c!19477)) b!110022))

(assert (= (and b!110004 res!54415) b!110008))

(assert (= (or b!110004 b!110022) bm!11736))

(assert (= (and b!110011 res!54419) b!110021))

(assert (= (and b!110021 c!19476) b!110014))

(assert (= (and b!110021 (not c!19476)) b!110007))

(assert (= (and b!110014 res!54416) b!110013))

(assert (= (or b!110014 b!110007) bm!11732))

(declare-fun b_lambda!4927 () Bool)

(assert (=> (not b_lambda!4927) (not b!110017)))

(assert (=> b!110017 t!5764))

(declare-fun b_and!6783 () Bool)

(assert (= b_and!6779 (and (=> t!5764 result!3523) b_and!6783)))

(assert (=> b!110017 t!5766))

(declare-fun b_and!6785 () Bool)

(assert (= b_and!6781 (and (=> t!5766 result!3527) b_and!6785)))

(declare-fun m!124573 () Bool)

(assert (=> bm!11732 m!124573))

(declare-fun m!124575 () Bool)

(assert (=> b!110013 m!124575))

(assert (=> b!110012 m!124503))

(assert (=> b!110012 m!124503))

(assert (=> b!110012 m!124511))

(assert (=> b!110003 m!124503))

(assert (=> b!110003 m!124503))

(declare-fun m!124577 () Bool)

(assert (=> b!110003 m!124577))

(declare-fun m!124579 () Bool)

(assert (=> b!110010 m!124579))

(declare-fun m!124581 () Bool)

(assert (=> b!110010 m!124581))

(declare-fun m!124583 () Bool)

(assert (=> b!110010 m!124583))

(assert (=> b!110010 m!124579))

(declare-fun m!124585 () Bool)

(assert (=> b!110010 m!124585))

(declare-fun m!124587 () Bool)

(assert (=> b!110010 m!124587))

(assert (=> b!110010 m!124587))

(declare-fun m!124589 () Bool)

(assert (=> b!110010 m!124589))

(declare-fun m!124591 () Bool)

(assert (=> b!110010 m!124591))

(assert (=> b!110010 m!124503))

(declare-fun m!124593 () Bool)

(assert (=> b!110010 m!124593))

(declare-fun m!124595 () Bool)

(assert (=> b!110010 m!124595))

(declare-fun m!124597 () Bool)

(assert (=> b!110010 m!124597))

(declare-fun m!124599 () Bool)

(assert (=> b!110010 m!124599))

(assert (=> b!110010 m!124595))

(declare-fun m!124601 () Bool)

(assert (=> b!110010 m!124601))

(declare-fun m!124603 () Bool)

(assert (=> b!110010 m!124603))

(assert (=> b!110010 m!124585))

(declare-fun m!124605 () Bool)

(assert (=> b!110010 m!124605))

(assert (=> b!110010 m!124341))

(declare-fun m!124607 () Bool)

(assert (=> b!110010 m!124607))

(assert (=> d!30839 m!124329))

(assert (=> b!110017 m!124505))

(assert (=> b!110017 m!124363))

(assert (=> b!110017 m!124505))

(assert (=> b!110017 m!124363))

(assert (=> b!110017 m!124507))

(assert (=> b!110017 m!124503))

(declare-fun m!124609 () Bool)

(assert (=> b!110017 m!124609))

(assert (=> b!110017 m!124503))

(assert (=> bm!11731 m!124341))

(assert (=> b!110020 m!124503))

(assert (=> b!110020 m!124503))

(assert (=> b!110020 m!124511))

(declare-fun m!124611 () Bool)

(assert (=> bm!11733 m!124611))

(declare-fun m!124613 () Bool)

(assert (=> b!110009 m!124613))

(declare-fun m!124615 () Bool)

(assert (=> bm!11736 m!124615))

(declare-fun m!124617 () Bool)

(assert (=> b!110008 m!124617))

(assert (=> b!109700 d!30839))

(declare-fun d!30841 () Bool)

(assert (=> d!30841 (= (valid!429 thiss!992) (valid!430 (v!2930 (underlying!370 thiss!992))))))

(declare-fun bs!4524 () Bool)

(assert (= bs!4524 d!30841))

(declare-fun m!124619 () Bool)

(assert (=> bs!4524 m!124619))

(assert (=> start!12682 d!30841))

(declare-fun d!30843 () Bool)

(assert (=> d!30843 (not (arrayContainsKey!0 (_keys!4341 (v!2930 (underlying!370 thiss!992))) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!56709 () Unit!3403)

(declare-fun choose!68 (array!4389 (_ BitVec 32) (_ BitVec 64) List!1631) Unit!3403)

(assert (=> d!30843 (= lt!56709 (choose!68 (_keys!4341 (v!2930 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (Cons!1627 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) Nil!1628)))))

(assert (=> d!30843 (bvslt (size!2338 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!30843 (= (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!4341 (v!2930 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (Cons!1627 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) Nil!1628)) lt!56709)))

(declare-fun bs!4525 () Bool)

(assert (= bs!4525 d!30843))

(assert (=> bs!4525 m!124315))

(assert (=> bs!4525 m!124319))

(assert (=> bs!4525 m!124315))

(declare-fun m!124621 () Bool)

(assert (=> bs!4525 m!124621))

(assert (=> b!109710 d!30843))

(declare-fun d!30845 () Bool)

(assert (=> d!30845 (arrayNoDuplicates!0 (_keys!4341 (v!2930 (underlying!370 thiss!992))) from!355 Nil!1628)))

(declare-fun lt!56712 () Unit!3403)

(declare-fun choose!39 (array!4389 (_ BitVec 32) (_ BitVec 32)) Unit!3403)

(assert (=> d!30845 (= lt!56712 (choose!39 (_keys!4341 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000000000 from!355))))

(assert (=> d!30845 (bvslt (size!2338 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!30845 (= (lemmaNoDuplicateFromThenFromBigger!0 (_keys!4341 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000000000 from!355) lt!56712)))

(declare-fun bs!4526 () Bool)

(assert (= bs!4526 d!30845))

(assert (=> bs!4526 m!124313))

(declare-fun m!124623 () Bool)

(assert (=> bs!4526 m!124623))

(assert (=> b!109710 d!30845))

(declare-fun d!30847 () Bool)

(declare-fun res!54428 () Bool)

(declare-fun e!71584 () Bool)

(assert (=> d!30847 (=> res!54428 e!71584)))

(assert (=> d!30847 (= res!54428 (= (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(assert (=> d!30847 (= (arrayContainsKey!0 (_keys!4341 (v!2930 (underlying!370 thiss!992))) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)) e!71584)))

(declare-fun b!110027 () Bool)

(declare-fun e!71585 () Bool)

(assert (=> b!110027 (= e!71584 e!71585)))

(declare-fun res!54429 () Bool)

(assert (=> b!110027 (=> (not res!54429) (not e!71585))))

(assert (=> b!110027 (= res!54429 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2338 (_keys!4341 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun b!110028 () Bool)

(assert (=> b!110028 (= e!71585 (arrayContainsKey!0 (_keys!4341 (v!2930 (underlying!370 thiss!992))) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (= (and d!30847 (not res!54428)) b!110027))

(assert (= (and b!110027 res!54429) b!110028))

(assert (=> d!30847 m!124503))

(assert (=> b!110028 m!124315))

(declare-fun m!124625 () Bool)

(assert (=> b!110028 m!124625))

(assert (=> b!109710 d!30847))

(declare-fun d!30849 () Bool)

(declare-fun e!71588 () Bool)

(assert (=> d!30849 e!71588))

(declare-fun c!19481 () Bool)

(assert (=> d!30849 (= c!19481 (and (not (= (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!56715 () Unit!3403)

(declare-fun choose!683 (array!4389 array!4391 (_ BitVec 32) (_ BitVec 32) V!3243 V!3243 (_ BitVec 64) (_ BitVec 32) Int) Unit!3403)

(assert (=> d!30849 (= lt!56715 (choose!683 (_keys!4341 (v!2930 (underlying!370 thiss!992))) (_values!2610 (v!2930 (underlying!370 thiss!992))) (mask!6795 (v!2930 (underlying!370 thiss!992))) (extraKeys!2424 (v!2930 (underlying!370 thiss!992))) (zeroValue!2498 (v!2930 (underlying!370 thiss!992))) (minValue!2498 (v!2930 (underlying!370 thiss!992))) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2627 (v!2930 (underlying!370 thiss!992)))))))

(assert (=> d!30849 (validMask!0 (mask!6795 (v!2930 (underlying!370 thiss!992))))))

(assert (=> d!30849 (= (lemmaListMapContainsThenArrayContainsFrom!111 (_keys!4341 (v!2930 (underlying!370 thiss!992))) (_values!2610 (v!2930 (underlying!370 thiss!992))) (mask!6795 (v!2930 (underlying!370 thiss!992))) (extraKeys!2424 (v!2930 (underlying!370 thiss!992))) (zeroValue!2498 (v!2930 (underlying!370 thiss!992))) (minValue!2498 (v!2930 (underlying!370 thiss!992))) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2627 (v!2930 (underlying!370 thiss!992)))) lt!56715)))

(declare-fun b!110033 () Bool)

(assert (=> b!110033 (= e!71588 (arrayContainsKey!0 (_keys!4341 (v!2930 (underlying!370 thiss!992))) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!110034 () Bool)

(assert (=> b!110034 (= e!71588 (ite (= (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2424 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2424 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!30849 c!19481) b!110033))

(assert (= (and d!30849 (not c!19481)) b!110034))

(assert (=> d!30849 m!124315))

(declare-fun m!124627 () Bool)

(assert (=> d!30849 m!124627))

(assert (=> d!30849 m!124329))

(assert (=> b!110033 m!124315))

(assert (=> b!110033 m!124319))

(assert (=> b!109710 d!30849))

(declare-fun b!110045 () Bool)

(declare-fun e!71600 () Bool)

(declare-fun e!71599 () Bool)

(assert (=> b!110045 (= e!71600 e!71599)))

(declare-fun res!54436 () Bool)

(assert (=> b!110045 (=> (not res!54436) (not e!71599))))

(declare-fun e!71598 () Bool)

(assert (=> b!110045 (= res!54436 (not e!71598))))

(declare-fun res!54437 () Bool)

(assert (=> b!110045 (=> (not res!54437) (not e!71598))))

(assert (=> b!110045 (= res!54437 (validKeyInArray!0 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(declare-fun b!110046 () Bool)

(declare-fun e!71597 () Bool)

(declare-fun call!11742 () Bool)

(assert (=> b!110046 (= e!71597 call!11742)))

(declare-fun b!110047 () Bool)

(assert (=> b!110047 (= e!71599 e!71597)))

(declare-fun c!19484 () Bool)

(assert (=> b!110047 (= c!19484 (validKeyInArray!0 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(declare-fun bm!11739 () Bool)

(assert (=> bm!11739 (= call!11742 (arrayNoDuplicates!0 (_keys!4341 (v!2930 (underlying!370 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!19484 (Cons!1627 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) Nil!1628) Nil!1628)))))

(declare-fun b!110048 () Bool)

(assert (=> b!110048 (= e!71597 call!11742)))

(declare-fun b!110049 () Bool)

(declare-fun contains!840 (List!1631 (_ BitVec 64)) Bool)

(assert (=> b!110049 (= e!71598 (contains!840 Nil!1628 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(declare-fun d!30851 () Bool)

(declare-fun res!54438 () Bool)

(assert (=> d!30851 (=> res!54438 e!71600)))

(assert (=> d!30851 (= res!54438 (bvsge from!355 (size!2338 (_keys!4341 (v!2930 (underlying!370 thiss!992))))))))

(assert (=> d!30851 (= (arrayNoDuplicates!0 (_keys!4341 (v!2930 (underlying!370 thiss!992))) from!355 Nil!1628) e!71600)))

(assert (= (and d!30851 (not res!54438)) b!110045))

(assert (= (and b!110045 res!54437) b!110049))

(assert (= (and b!110045 res!54436) b!110047))

(assert (= (and b!110047 c!19484) b!110046))

(assert (= (and b!110047 (not c!19484)) b!110048))

(assert (= (or b!110046 b!110048) bm!11739))

(assert (=> b!110045 m!124315))

(assert (=> b!110045 m!124315))

(declare-fun m!124629 () Bool)

(assert (=> b!110045 m!124629))

(assert (=> b!110047 m!124315))

(assert (=> b!110047 m!124315))

(assert (=> b!110047 m!124629))

(assert (=> bm!11739 m!124315))

(declare-fun m!124631 () Bool)

(assert (=> bm!11739 m!124631))

(assert (=> b!110049 m!124315))

(assert (=> b!110049 m!124315))

(declare-fun m!124633 () Bool)

(assert (=> b!110049 m!124633))

(assert (=> b!109710 d!30851))

(declare-fun d!30853 () Bool)

(declare-fun c!19487 () Bool)

(assert (=> d!30853 (= c!19487 ((_ is ValueCellFull!1005) (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(declare-fun e!71603 () V!3243)

(assert (=> d!30853 (= (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) from!355) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!71603)))

(declare-fun b!110054 () Bool)

(declare-fun get!1348 (ValueCell!1005 V!3243) V!3243)

(assert (=> b!110054 (= e!71603 (get!1348 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) from!355) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!110055 () Bool)

(declare-fun get!1349 (ValueCell!1005 V!3243) V!3243)

(assert (=> b!110055 (= e!71603 (get!1349 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) from!355) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30853 c!19487) b!110054))

(assert (= (and d!30853 (not c!19487)) b!110055))

(assert (=> b!110054 m!124361))

(assert (=> b!110054 m!124363))

(declare-fun m!124635 () Bool)

(assert (=> b!110054 m!124635))

(assert (=> b!110055 m!124361))

(assert (=> b!110055 m!124363))

(declare-fun m!124637 () Bool)

(assert (=> b!110055 m!124637))

(assert (=> b!109706 d!30853))

(declare-fun d!30855 () Bool)

(assert (=> d!30855 (= (array_inv!1311 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvsge (size!2338 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!109701 d!30855))

(declare-fun d!30857 () Bool)

(assert (=> d!30857 (= (array_inv!1312 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvsge (size!2339 (_values!2610 (v!2930 (underlying!370 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!109701 d!30857))

(declare-fun d!30859 () Bool)

(assert (=> d!30859 (= (array_inv!1311 (_keys!4341 newMap!16)) (bvsge (size!2338 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!109708 d!30859))

(declare-fun d!30861 () Bool)

(assert (=> d!30861 (= (array_inv!1312 (_values!2610 newMap!16)) (bvsge (size!2339 (_values!2610 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!109708 d!30861))

(declare-fun d!30863 () Bool)

(declare-fun res!54445 () Bool)

(declare-fun e!71606 () Bool)

(assert (=> d!30863 (=> (not res!54445) (not e!71606))))

(declare-fun simpleValid!76 (LongMapFixedSize!918) Bool)

(assert (=> d!30863 (= res!54445 (simpleValid!76 newMap!16))))

(assert (=> d!30863 (= (valid!430 newMap!16) e!71606)))

(declare-fun b!110062 () Bool)

(declare-fun res!54446 () Bool)

(assert (=> b!110062 (=> (not res!54446) (not e!71606))))

(declare-fun arrayCountValidKeys!0 (array!4389 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!110062 (= res!54446 (= (arrayCountValidKeys!0 (_keys!4341 newMap!16) #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))) (_size!508 newMap!16)))))

(declare-fun b!110063 () Bool)

(declare-fun res!54447 () Bool)

(assert (=> b!110063 (=> (not res!54447) (not e!71606))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!4389 (_ BitVec 32)) Bool)

(assert (=> b!110063 (= res!54447 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4341 newMap!16) (mask!6795 newMap!16)))))

(declare-fun b!110064 () Bool)

(assert (=> b!110064 (= e!71606 (arrayNoDuplicates!0 (_keys!4341 newMap!16) #b00000000000000000000000000000000 Nil!1628))))

(assert (= (and d!30863 res!54445) b!110062))

(assert (= (and b!110062 res!54446) b!110063))

(assert (= (and b!110063 res!54447) b!110064))

(declare-fun m!124639 () Bool)

(assert (=> d!30863 m!124639))

(declare-fun m!124641 () Bool)

(assert (=> b!110062 m!124641))

(declare-fun m!124643 () Bool)

(assert (=> b!110063 m!124643))

(declare-fun m!124645 () Bool)

(assert (=> b!110064 m!124645))

(assert (=> b!109709 d!30863))

(declare-fun b!110072 () Bool)

(declare-fun e!71611 () Bool)

(assert (=> b!110072 (= e!71611 tp_is_empty!2697)))

(declare-fun b!110071 () Bool)

(declare-fun e!71612 () Bool)

(assert (=> b!110071 (= e!71612 tp_is_empty!2697)))

(declare-fun mapNonEmpty!4009 () Bool)

(declare-fun mapRes!4009 () Bool)

(declare-fun tp!10039 () Bool)

(assert (=> mapNonEmpty!4009 (= mapRes!4009 (and tp!10039 e!71612))))

(declare-fun mapRest!4009 () (Array (_ BitVec 32) ValueCell!1005))

(declare-fun mapKey!4009 () (_ BitVec 32))

(declare-fun mapValue!4009 () ValueCell!1005)

(assert (=> mapNonEmpty!4009 (= mapRest!3999 (store mapRest!4009 mapKey!4009 mapValue!4009))))

(declare-fun condMapEmpty!4009 () Bool)

(declare-fun mapDefault!4009 () ValueCell!1005)

(assert (=> mapNonEmpty!4000 (= condMapEmpty!4009 (= mapRest!3999 ((as const (Array (_ BitVec 32) ValueCell!1005)) mapDefault!4009)))))

(assert (=> mapNonEmpty!4000 (= tp!10023 (and e!71611 mapRes!4009))))

(declare-fun mapIsEmpty!4009 () Bool)

(assert (=> mapIsEmpty!4009 mapRes!4009))

(assert (= (and mapNonEmpty!4000 condMapEmpty!4009) mapIsEmpty!4009))

(assert (= (and mapNonEmpty!4000 (not condMapEmpty!4009)) mapNonEmpty!4009))

(assert (= (and mapNonEmpty!4009 ((_ is ValueCellFull!1005) mapValue!4009)) b!110071))

(assert (= (and mapNonEmpty!4000 ((_ is ValueCellFull!1005) mapDefault!4009)) b!110072))

(declare-fun m!124647 () Bool)

(assert (=> mapNonEmpty!4009 m!124647))

(declare-fun b!110074 () Bool)

(declare-fun e!71613 () Bool)

(assert (=> b!110074 (= e!71613 tp_is_empty!2697)))

(declare-fun b!110073 () Bool)

(declare-fun e!71614 () Bool)

(assert (=> b!110073 (= e!71614 tp_is_empty!2697)))

(declare-fun mapNonEmpty!4010 () Bool)

(declare-fun mapRes!4010 () Bool)

(declare-fun tp!10040 () Bool)

(assert (=> mapNonEmpty!4010 (= mapRes!4010 (and tp!10040 e!71614))))

(declare-fun mapValue!4010 () ValueCell!1005)

(declare-fun mapRest!4010 () (Array (_ BitVec 32) ValueCell!1005))

(declare-fun mapKey!4010 () (_ BitVec 32))

(assert (=> mapNonEmpty!4010 (= mapRest!4000 (store mapRest!4010 mapKey!4010 mapValue!4010))))

(declare-fun condMapEmpty!4010 () Bool)

(declare-fun mapDefault!4010 () ValueCell!1005)

(assert (=> mapNonEmpty!3999 (= condMapEmpty!4010 (= mapRest!4000 ((as const (Array (_ BitVec 32) ValueCell!1005)) mapDefault!4010)))))

(assert (=> mapNonEmpty!3999 (= tp!10021 (and e!71613 mapRes!4010))))

(declare-fun mapIsEmpty!4010 () Bool)

(assert (=> mapIsEmpty!4010 mapRes!4010))

(assert (= (and mapNonEmpty!3999 condMapEmpty!4010) mapIsEmpty!4010))

(assert (= (and mapNonEmpty!3999 (not condMapEmpty!4010)) mapNonEmpty!4010))

(assert (= (and mapNonEmpty!4010 ((_ is ValueCellFull!1005) mapValue!4010)) b!110073))

(assert (= (and mapNonEmpty!3999 ((_ is ValueCellFull!1005) mapDefault!4010)) b!110074))

(declare-fun m!124649 () Bool)

(assert (=> mapNonEmpty!4010 m!124649))

(declare-fun b_lambda!4929 () Bool)

(assert (= b_lambda!4925 (or (and b!109701 b_free!2561) (and b!109708 b_free!2563 (= (defaultEntry!2627 newMap!16) (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))))) b_lambda!4929)))

(declare-fun b_lambda!4931 () Bool)

(assert (= b_lambda!4927 (or (and b!109701 b_free!2561) (and b!109708 b_free!2563 (= (defaultEntry!2627 newMap!16) (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))))) b_lambda!4931)))

(declare-fun b_lambda!4933 () Bool)

(assert (= b_lambda!4923 (or (and b!109701 b_free!2561) (and b!109708 b_free!2563 (= (defaultEntry!2627 newMap!16) (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))))) b_lambda!4933)))

(check-sat tp_is_empty!2697 (not d!30821) (not bm!11739) (not b!110012) (not bm!11711) (not b!109952) (not b!109895) (not mapNonEmpty!4009) (not b!110009) (not b!110010) (not b!109874) (not b!109957) (not b!110020) (not b_next!2561) (not d!30827) b_and!6783 (not bm!11696) (not bm!11689) (not b!109956) (not b!110008) (not b!109876) (not bm!11700) (not bm!11712) (not d!30823) (not bm!11715) (not bm!11731) (not bm!11733) (not b!110049) (not mapNonEmpty!4010) (not bm!11732) (not b!110047) (not b_next!2563) (not b!110062) (not b!110055) (not b!110033) (not b!109946) (not d!30829) (not d!30849) (not b!110028) (not bm!11697) (not b!110013) (not b!109896) (not bm!11736) (not d!30835) (not b_lambda!4933) (not b!109942) (not b!110003) (not bm!11694) (not b!109959) (not b!110054) (not d!30845) b_and!6785 (not d!30825) (not b!109958) (not b!109785) (not b_lambda!4921) (not b!109955) (not d!30837) (not b!109953) (not d!30843) (not d!30841) (not b!109783) (not b!109877) (not b!109938) (not b!109944) (not d!30863) (not d!30839) (not b!110017) (not b!109943) (not bm!11709) (not bm!11706) (not b!109897) (not b!110063) (not b_lambda!4931) (not b!110045) (not b!109906) (not b!109941) (not d!30833) (not b!110064) (not b!109954) (not d!30819) (not bm!11690) (not b_lambda!4929) (not b!109940) (not b!109898) (not b!109939) (not bm!11710) (not bm!11707))
(check-sat b_and!6783 b_and!6785 (not b_next!2561) (not b_next!2563))
(get-model)

(declare-fun d!30865 () Bool)

(assert (=> d!30865 (isDefined!111 (getValueByKey!158 (toList!811 lt!56461) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(declare-fun lt!56718 () Unit!3403)

(declare-fun choose!684 (List!1630 (_ BitVec 64)) Unit!3403)

(assert (=> d!30865 (= lt!56718 (choose!684 (toList!811 lt!56461) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(declare-fun e!71617 () Bool)

(assert (=> d!30865 e!71617))

(declare-fun res!54450 () Bool)

(assert (=> d!30865 (=> (not res!54450) (not e!71617))))

(declare-fun isStrictlySorted!311 (List!1630) Bool)

(assert (=> d!30865 (= res!54450 (isStrictlySorted!311 (toList!811 lt!56461)))))

(assert (=> d!30865 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 lt!56461) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) lt!56718)))

(declare-fun b!110077 () Bool)

(assert (=> b!110077 (= e!71617 (containsKey!162 (toList!811 lt!56461) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(assert (= (and d!30865 res!54450) b!110077))

(assert (=> d!30865 m!124315))

(assert (=> d!30865 m!124427))

(assert (=> d!30865 m!124427))

(assert (=> d!30865 m!124429))

(assert (=> d!30865 m!124315))

(declare-fun m!124651 () Bool)

(assert (=> d!30865 m!124651))

(declare-fun m!124653 () Bool)

(assert (=> d!30865 m!124653))

(assert (=> b!110077 m!124315))

(assert (=> b!110077 m!124423))

(assert (=> b!109783 d!30865))

(declare-fun d!30867 () Bool)

(declare-fun isEmpty!377 (Option!164) Bool)

(assert (=> d!30867 (= (isDefined!111 (getValueByKey!158 (toList!811 lt!56461) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355))) (not (isEmpty!377 (getValueByKey!158 (toList!811 lt!56461) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))))

(declare-fun bs!4527 () Bool)

(assert (= bs!4527 d!30867))

(assert (=> bs!4527 m!124427))

(declare-fun m!124655 () Bool)

(assert (=> bs!4527 m!124655))

(assert (=> b!109783 d!30867))

(declare-fun b!110086 () Bool)

(declare-fun e!71622 () Option!164)

(assert (=> b!110086 (= e!71622 (Some!163 (_2!1231 (h!2225 (toList!811 lt!56461)))))))

(declare-fun e!71623 () Option!164)

(declare-fun b!110088 () Bool)

(assert (=> b!110088 (= e!71623 (getValueByKey!158 (t!5767 (toList!811 lt!56461)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(declare-fun c!19492 () Bool)

(declare-fun d!30869 () Bool)

(assert (=> d!30869 (= c!19492 (and ((_ is Cons!1626) (toList!811 lt!56461)) (= (_1!1231 (h!2225 (toList!811 lt!56461))) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355))))))

(assert (=> d!30869 (= (getValueByKey!158 (toList!811 lt!56461) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) e!71622)))

(declare-fun b!110087 () Bool)

(assert (=> b!110087 (= e!71622 e!71623)))

(declare-fun c!19493 () Bool)

(assert (=> b!110087 (= c!19493 (and ((_ is Cons!1626) (toList!811 lt!56461)) (not (= (_1!1231 (h!2225 (toList!811 lt!56461))) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))))

(declare-fun b!110089 () Bool)

(assert (=> b!110089 (= e!71623 None!162)))

(assert (= (and d!30869 c!19492) b!110086))

(assert (= (and d!30869 (not c!19492)) b!110087))

(assert (= (and b!110087 c!19493) b!110088))

(assert (= (and b!110087 (not c!19493)) b!110089))

(assert (=> b!110088 m!124315))

(declare-fun m!124657 () Bool)

(assert (=> b!110088 m!124657))

(assert (=> b!109783 d!30869))

(declare-fun d!30871 () Bool)

(assert (=> d!30871 (= (validKeyInArray!0 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) (and (not (= (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!110047 d!30871))

(declare-fun d!30873 () Bool)

(declare-fun e!71624 () Bool)

(assert (=> d!30873 e!71624))

(declare-fun res!54451 () Bool)

(assert (=> d!30873 (=> res!54451 e!71624)))

(declare-fun lt!56719 () Bool)

(assert (=> d!30873 (= res!54451 (not lt!56719))))

(declare-fun lt!56720 () Bool)

(assert (=> d!30873 (= lt!56719 lt!56720)))

(declare-fun lt!56722 () Unit!3403)

(declare-fun e!71625 () Unit!3403)

(assert (=> d!30873 (= lt!56722 e!71625)))

(declare-fun c!19494 () Bool)

(assert (=> d!30873 (= c!19494 lt!56720)))

(assert (=> d!30873 (= lt!56720 (containsKey!162 (toList!811 call!11697) (select (arr!2081 (_keys!4341 newMap!16)) (index!3195 lt!56591))))))

(assert (=> d!30873 (= (contains!838 call!11697 (select (arr!2081 (_keys!4341 newMap!16)) (index!3195 lt!56591))) lt!56719)))

(declare-fun b!110090 () Bool)

(declare-fun lt!56721 () Unit!3403)

(assert (=> b!110090 (= e!71625 lt!56721)))

(assert (=> b!110090 (= lt!56721 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 call!11697) (select (arr!2081 (_keys!4341 newMap!16)) (index!3195 lt!56591))))))

(assert (=> b!110090 (isDefined!111 (getValueByKey!158 (toList!811 call!11697) (select (arr!2081 (_keys!4341 newMap!16)) (index!3195 lt!56591))))))

(declare-fun b!110091 () Bool)

(declare-fun Unit!3414 () Unit!3403)

(assert (=> b!110091 (= e!71625 Unit!3414)))

(declare-fun b!110092 () Bool)

(assert (=> b!110092 (= e!71624 (isDefined!111 (getValueByKey!158 (toList!811 call!11697) (select (arr!2081 (_keys!4341 newMap!16)) (index!3195 lt!56591)))))))

(assert (= (and d!30873 c!19494) b!110090))

(assert (= (and d!30873 (not c!19494)) b!110091))

(assert (= (and d!30873 (not res!54451)) b!110092))

(assert (=> d!30873 m!124439))

(declare-fun m!124659 () Bool)

(assert (=> d!30873 m!124659))

(assert (=> b!110090 m!124439))

(declare-fun m!124661 () Bool)

(assert (=> b!110090 m!124661))

(assert (=> b!110090 m!124439))

(declare-fun m!124663 () Bool)

(assert (=> b!110090 m!124663))

(assert (=> b!110090 m!124663))

(declare-fun m!124665 () Bool)

(assert (=> b!110090 m!124665))

(assert (=> b!110092 m!124439))

(assert (=> b!110092 m!124663))

(assert (=> b!110092 m!124663))

(assert (=> b!110092 m!124665))

(assert (=> b!109876 d!30873))

(declare-fun d!30875 () Bool)

(declare-fun e!71628 () Bool)

(assert (=> d!30875 e!71628))

(declare-fun res!54454 () Bool)

(assert (=> d!30875 (=> (not res!54454) (not e!71628))))

(assert (=> d!30875 (= res!54454 (and (bvsge (index!3195 lt!56591) #b00000000000000000000000000000000) (bvslt (index!3195 lt!56591) (size!2338 (_keys!4341 newMap!16)))))))

(declare-fun lt!56725 () Unit!3403)

(declare-fun choose!685 (array!4389 array!4391 (_ BitVec 32) (_ BitVec 32) V!3243 V!3243 (_ BitVec 32) Int) Unit!3403)

(assert (=> d!30875 (= lt!56725 (choose!685 (_keys!4341 newMap!16) lt!56569 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (index!3195 lt!56591) (defaultEntry!2627 newMap!16)))))

(assert (=> d!30875 (validMask!0 (mask!6795 newMap!16))))

(assert (=> d!30875 (= (lemmaValidKeyInArrayIsInListMap!110 (_keys!4341 newMap!16) lt!56569 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (index!3195 lt!56591) (defaultEntry!2627 newMap!16)) lt!56725)))

(declare-fun b!110095 () Bool)

(assert (=> b!110095 (= e!71628 (contains!838 (getCurrentListMap!496 (_keys!4341 newMap!16) lt!56569 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) (select (arr!2081 (_keys!4341 newMap!16)) (index!3195 lt!56591))))))

(assert (= (and d!30875 res!54454) b!110095))

(declare-fun m!124667 () Bool)

(assert (=> d!30875 m!124667))

(declare-fun m!124669 () Bool)

(assert (=> d!30875 m!124669))

(declare-fun m!124671 () Bool)

(assert (=> b!110095 m!124671))

(assert (=> b!110095 m!124439))

(assert (=> b!110095 m!124671))

(assert (=> b!110095 m!124439))

(declare-fun m!124673 () Bool)

(assert (=> b!110095 m!124673))

(assert (=> b!109876 d!30875))

(declare-fun d!30877 () Bool)

(declare-fun e!71631 () Bool)

(assert (=> d!30877 e!71631))

(declare-fun res!54457 () Bool)

(assert (=> d!30877 (=> (not res!54457) (not e!71631))))

(assert (=> d!30877 (= res!54457 (and (bvsge (index!3195 lt!56591) #b00000000000000000000000000000000) (bvslt (index!3195 lt!56591) (size!2339 (_values!2610 newMap!16)))))))

(declare-fun lt!56728 () Unit!3403)

(declare-fun choose!686 (array!4389 array!4391 (_ BitVec 32) (_ BitVec 32) V!3243 V!3243 (_ BitVec 32) (_ BitVec 64) V!3243 Int) Unit!3403)

(assert (=> d!30877 (= lt!56728 (choose!686 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (index!3195 lt!56591) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458 (defaultEntry!2627 newMap!16)))))

(assert (=> d!30877 (validMask!0 (mask!6795 newMap!16))))

(assert (=> d!30877 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!49 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (index!3195 lt!56591) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458 (defaultEntry!2627 newMap!16)) lt!56728)))

(declare-fun b!110098 () Bool)

(assert (=> b!110098 (= e!71631 (= (+!150 (getCurrentListMap!496 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)) (getCurrentListMap!496 (_keys!4341 newMap!16) (array!4392 (store (arr!2082 (_values!2610 newMap!16)) (index!3195 lt!56591) (ValueCellFull!1005 lt!56458)) (size!2339 (_values!2610 newMap!16))) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16))))))

(assert (= (and d!30877 res!54457) b!110098))

(assert (=> d!30877 m!124315))

(declare-fun m!124675 () Bool)

(assert (=> d!30877 m!124675))

(assert (=> d!30877 m!124669))

(assert (=> b!110098 m!124485))

(assert (=> b!110098 m!124485))

(declare-fun m!124677 () Bool)

(assert (=> b!110098 m!124677))

(assert (=> b!110098 m!124435))

(declare-fun m!124679 () Bool)

(assert (=> b!110098 m!124679))

(assert (=> b!109876 d!30877))

(declare-fun d!30879 () Bool)

(declare-fun e!71632 () Bool)

(assert (=> d!30879 e!71632))

(declare-fun res!54458 () Bool)

(assert (=> d!30879 (=> res!54458 e!71632)))

(declare-fun lt!56729 () Bool)

(assert (=> d!30879 (= res!54458 (not lt!56729))))

(declare-fun lt!56730 () Bool)

(assert (=> d!30879 (= lt!56729 lt!56730)))

(declare-fun lt!56732 () Unit!3403)

(declare-fun e!71633 () Unit!3403)

(assert (=> d!30879 (= lt!56732 e!71633)))

(declare-fun c!19495 () Bool)

(assert (=> d!30879 (= c!19495 lt!56730)))

(assert (=> d!30879 (= lt!56730 (containsKey!162 (toList!811 lt!56699) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!30879 (= (contains!838 lt!56699 #b0000000000000000000000000000000000000000000000000000000000000000) lt!56729)))

(declare-fun b!110099 () Bool)

(declare-fun lt!56731 () Unit!3403)

(assert (=> b!110099 (= e!71633 lt!56731)))

(assert (=> b!110099 (= lt!56731 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 lt!56699) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!110099 (isDefined!111 (getValueByKey!158 (toList!811 lt!56699) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110100 () Bool)

(declare-fun Unit!3415 () Unit!3403)

(assert (=> b!110100 (= e!71633 Unit!3415)))

(declare-fun b!110101 () Bool)

(assert (=> b!110101 (= e!71632 (isDefined!111 (getValueByKey!158 (toList!811 lt!56699) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30879 c!19495) b!110099))

(assert (= (and d!30879 (not c!19495)) b!110100))

(assert (= (and d!30879 (not res!54458)) b!110101))

(declare-fun m!124681 () Bool)

(assert (=> d!30879 m!124681))

(declare-fun m!124683 () Bool)

(assert (=> b!110099 m!124683))

(declare-fun m!124685 () Bool)

(assert (=> b!110099 m!124685))

(assert (=> b!110099 m!124685))

(declare-fun m!124687 () Bool)

(assert (=> b!110099 m!124687))

(assert (=> b!110101 m!124685))

(assert (=> b!110101 m!124685))

(assert (=> b!110101 m!124687))

(assert (=> bm!11736 d!30879))

(assert (=> b!109785 d!30867))

(assert (=> b!109785 d!30869))

(assert (=> b!110045 d!30871))

(declare-fun b!110102 () Bool)

(declare-fun c!19497 () Bool)

(assert (=> b!110102 (= c!19497 (and (not (= (bvand (ite c!19438 (ite c!19444 (extraKeys!2424 newMap!16) lt!56577) (extraKeys!2424 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!19438 (ite c!19444 (extraKeys!2424 newMap!16) lt!56577) (extraKeys!2424 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!71637 () ListLongMap!1591)

(declare-fun e!71642 () ListLongMap!1591)

(assert (=> b!110102 (= e!71637 e!71642)))

(declare-fun bm!11740 () Bool)

(declare-fun call!11743 () ListLongMap!1591)

(declare-fun call!11746 () ListLongMap!1591)

(assert (=> bm!11740 (= call!11743 call!11746)))

(declare-fun b!110103 () Bool)

(declare-fun e!71640 () Bool)

(declare-fun e!71634 () Bool)

(assert (=> b!110103 (= e!71640 e!71634)))

(declare-fun res!54461 () Bool)

(assert (=> b!110103 (=> (not res!54461) (not e!71634))))

(declare-fun lt!56747 () ListLongMap!1591)

(assert (=> b!110103 (= res!54461 (contains!838 lt!56747 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!110103 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))))))

(declare-fun b!110104 () Bool)

(declare-fun e!71635 () Bool)

(declare-fun e!71646 () Bool)

(assert (=> b!110104 (= e!71635 e!71646)))

(declare-fun res!54459 () Bool)

(declare-fun call!11749 () Bool)

(assert (=> b!110104 (= res!54459 call!11749)))

(assert (=> b!110104 (=> (not res!54459) (not e!71646))))

(declare-fun b!110105 () Bool)

(declare-fun e!71644 () ListLongMap!1591)

(assert (=> b!110105 (= e!71644 e!71637)))

(declare-fun c!19501 () Bool)

(assert (=> b!110105 (= c!19501 (and (not (= (bvand (ite c!19438 (ite c!19444 (extraKeys!2424 newMap!16) lt!56577) (extraKeys!2424 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!19438 (ite c!19444 (extraKeys!2424 newMap!16) lt!56577) (extraKeys!2424 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!110106 () Bool)

(declare-fun e!71645 () Unit!3403)

(declare-fun Unit!3416 () Unit!3403)

(assert (=> b!110106 (= e!71645 Unit!3416)))

(declare-fun b!110107 () Bool)

(declare-fun e!71641 () Bool)

(declare-fun call!11744 () Bool)

(assert (=> b!110107 (= e!71641 (not call!11744))))

(declare-fun bm!11741 () Bool)

(assert (=> bm!11741 (= call!11746 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (ite (or c!19438 c!19445) (_values!2610 newMap!16) (array!4392 (store (arr!2082 (_values!2610 newMap!16)) (index!3195 lt!56591) (ValueCellFull!1005 lt!56458)) (size!2339 (_values!2610 newMap!16)))) (mask!6795 newMap!16) (ite c!19438 (ite c!19444 (extraKeys!2424 newMap!16) lt!56577) (extraKeys!2424 newMap!16)) (zeroValue!2498 newMap!16) (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun b!110108 () Bool)

(assert (=> b!110108 (= e!71646 (= (apply!100 lt!56747 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2498 newMap!16)))))

(declare-fun b!110109 () Bool)

(declare-fun call!11748 () ListLongMap!1591)

(assert (=> b!110109 (= e!71644 (+!150 call!11748 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16)))))))

(declare-fun b!110110 () Bool)

(declare-fun lt!56748 () Unit!3403)

(assert (=> b!110110 (= e!71645 lt!56748)))

(declare-fun lt!56743 () ListLongMap!1591)

(assert (=> b!110110 (= lt!56743 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (ite (or c!19438 c!19445) (_values!2610 newMap!16) (array!4392 (store (arr!2082 (_values!2610 newMap!16)) (index!3195 lt!56591) (ValueCellFull!1005 lt!56458)) (size!2339 (_values!2610 newMap!16)))) (mask!6795 newMap!16) (ite c!19438 (ite c!19444 (extraKeys!2424 newMap!16) lt!56577) (extraKeys!2424 newMap!16)) (zeroValue!2498 newMap!16) (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!56742 () (_ BitVec 64))

(assert (=> b!110110 (= lt!56742 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56745 () (_ BitVec 64))

(assert (=> b!110110 (= lt!56745 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56750 () Unit!3403)

(assert (=> b!110110 (= lt!56750 (addStillContains!76 lt!56743 lt!56742 (zeroValue!2498 newMap!16) lt!56745))))

(assert (=> b!110110 (contains!838 (+!150 lt!56743 (tuple2!2441 lt!56742 (zeroValue!2498 newMap!16))) lt!56745)))

(declare-fun lt!56734 () Unit!3403)

(assert (=> b!110110 (= lt!56734 lt!56750)))

(declare-fun lt!56746 () ListLongMap!1591)

(assert (=> b!110110 (= lt!56746 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (ite (or c!19438 c!19445) (_values!2610 newMap!16) (array!4392 (store (arr!2082 (_values!2610 newMap!16)) (index!3195 lt!56591) (ValueCellFull!1005 lt!56458)) (size!2339 (_values!2610 newMap!16)))) (mask!6795 newMap!16) (ite c!19438 (ite c!19444 (extraKeys!2424 newMap!16) lt!56577) (extraKeys!2424 newMap!16)) (zeroValue!2498 newMap!16) (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!56737 () (_ BitVec 64))

(assert (=> b!110110 (= lt!56737 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56744 () (_ BitVec 64))

(assert (=> b!110110 (= lt!56744 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56752 () Unit!3403)

(assert (=> b!110110 (= lt!56752 (addApplyDifferent!76 lt!56746 lt!56737 (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16)) lt!56744))))

(assert (=> b!110110 (= (apply!100 (+!150 lt!56746 (tuple2!2441 lt!56737 (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16)))) lt!56744) (apply!100 lt!56746 lt!56744))))

(declare-fun lt!56736 () Unit!3403)

(assert (=> b!110110 (= lt!56736 lt!56752)))

(declare-fun lt!56740 () ListLongMap!1591)

(assert (=> b!110110 (= lt!56740 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (ite (or c!19438 c!19445) (_values!2610 newMap!16) (array!4392 (store (arr!2082 (_values!2610 newMap!16)) (index!3195 lt!56591) (ValueCellFull!1005 lt!56458)) (size!2339 (_values!2610 newMap!16)))) (mask!6795 newMap!16) (ite c!19438 (ite c!19444 (extraKeys!2424 newMap!16) lt!56577) (extraKeys!2424 newMap!16)) (zeroValue!2498 newMap!16) (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!56733 () (_ BitVec 64))

(assert (=> b!110110 (= lt!56733 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56751 () (_ BitVec 64))

(assert (=> b!110110 (= lt!56751 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56749 () Unit!3403)

(assert (=> b!110110 (= lt!56749 (addApplyDifferent!76 lt!56740 lt!56733 (zeroValue!2498 newMap!16) lt!56751))))

(assert (=> b!110110 (= (apply!100 (+!150 lt!56740 (tuple2!2441 lt!56733 (zeroValue!2498 newMap!16))) lt!56751) (apply!100 lt!56740 lt!56751))))

(declare-fun lt!56739 () Unit!3403)

(assert (=> b!110110 (= lt!56739 lt!56749)))

(declare-fun lt!56753 () ListLongMap!1591)

(assert (=> b!110110 (= lt!56753 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (ite (or c!19438 c!19445) (_values!2610 newMap!16) (array!4392 (store (arr!2082 (_values!2610 newMap!16)) (index!3195 lt!56591) (ValueCellFull!1005 lt!56458)) (size!2339 (_values!2610 newMap!16)))) (mask!6795 newMap!16) (ite c!19438 (ite c!19444 (extraKeys!2424 newMap!16) lt!56577) (extraKeys!2424 newMap!16)) (zeroValue!2498 newMap!16) (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!56738 () (_ BitVec 64))

(assert (=> b!110110 (= lt!56738 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56741 () (_ BitVec 64))

(assert (=> b!110110 (= lt!56741 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!110110 (= lt!56748 (addApplyDifferent!76 lt!56753 lt!56738 (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16)) lt!56741))))

(assert (=> b!110110 (= (apply!100 (+!150 lt!56753 (tuple2!2441 lt!56738 (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16)))) lt!56741) (apply!100 lt!56753 lt!56741))))

(declare-fun b!110111 () Bool)

(declare-fun res!54463 () Bool)

(declare-fun e!71643 () Bool)

(assert (=> b!110111 (=> (not res!54463) (not e!71643))))

(assert (=> b!110111 (= res!54463 e!71635)))

(declare-fun c!19500 () Bool)

(assert (=> b!110111 (= c!19500 (not (= (bvand (ite c!19438 (ite c!19444 (extraKeys!2424 newMap!16) lt!56577) (extraKeys!2424 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!110112 () Bool)

(declare-fun e!71636 () Bool)

(assert (=> b!110112 (= e!71636 (validKeyInArray!0 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!110113 () Bool)

(declare-fun e!71639 () Bool)

(assert (=> b!110113 (= e!71639 (= (apply!100 lt!56747 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16))))))

(declare-fun bm!11742 () Bool)

(assert (=> bm!11742 (= call!11744 (contains!838 lt!56747 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110114 () Bool)

(assert (=> b!110114 (= e!71641 e!71639)))

(declare-fun res!54460 () Bool)

(assert (=> b!110114 (= res!54460 call!11744)))

(assert (=> b!110114 (=> (not res!54460) (not e!71639))))

(declare-fun bm!11743 () Bool)

(declare-fun call!11745 () ListLongMap!1591)

(declare-fun c!19496 () Bool)

(assert (=> bm!11743 (= call!11748 (+!150 (ite c!19496 call!11746 (ite c!19501 call!11743 call!11745)) (ite (or c!19496 c!19501) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 newMap!16)) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16))))))))

(declare-fun b!110115 () Bool)

(declare-fun call!11747 () ListLongMap!1591)

(assert (=> b!110115 (= e!71637 call!11747)))

(declare-fun d!30881 () Bool)

(assert (=> d!30881 e!71643))

(declare-fun res!54466 () Bool)

(assert (=> d!30881 (=> (not res!54466) (not e!71643))))

(assert (=> d!30881 (= res!54466 (or (bvsge #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))))))))

(declare-fun lt!56754 () ListLongMap!1591)

(assert (=> d!30881 (= lt!56747 lt!56754)))

(declare-fun lt!56735 () Unit!3403)

(assert (=> d!30881 (= lt!56735 e!71645)))

(declare-fun c!19498 () Bool)

(declare-fun e!71638 () Bool)

(assert (=> d!30881 (= c!19498 e!71638)))

(declare-fun res!54462 () Bool)

(assert (=> d!30881 (=> (not res!54462) (not e!71638))))

(assert (=> d!30881 (= res!54462 (bvslt #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))))))

(assert (=> d!30881 (= lt!56754 e!71644)))

(assert (=> d!30881 (= c!19496 (and (not (= (bvand (ite c!19438 (ite c!19444 (extraKeys!2424 newMap!16) lt!56577) (extraKeys!2424 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!19438 (ite c!19444 (extraKeys!2424 newMap!16) lt!56577) (extraKeys!2424 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!30881 (validMask!0 (mask!6795 newMap!16))))

(assert (=> d!30881 (= (getCurrentListMap!496 (_keys!4341 newMap!16) (ite (or c!19438 c!19445) (_values!2610 newMap!16) (array!4392 (store (arr!2082 (_values!2610 newMap!16)) (index!3195 lt!56591) (ValueCellFull!1005 lt!56458)) (size!2339 (_values!2610 newMap!16)))) (mask!6795 newMap!16) (ite c!19438 (ite c!19444 (extraKeys!2424 newMap!16) lt!56577) (extraKeys!2424 newMap!16)) (zeroValue!2498 newMap!16) (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) lt!56747)))

(declare-fun b!110116 () Bool)

(assert (=> b!110116 (= e!71642 call!11747)))

(declare-fun b!110117 () Bool)

(assert (=> b!110117 (= e!71634 (= (apply!100 lt!56747 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)) (get!1347 (select (arr!2082 (ite (or c!19438 c!19445) (_values!2610 newMap!16) (array!4392 (store (arr!2082 (_values!2610 newMap!16)) (index!3195 lt!56591) (ValueCellFull!1005 lt!56458)) (size!2339 (_values!2610 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!390 (defaultEntry!2627 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!110117 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2339 (ite (or c!19438 c!19445) (_values!2610 newMap!16) (array!4392 (store (arr!2082 (_values!2610 newMap!16)) (index!3195 lt!56591) (ValueCellFull!1005 lt!56458)) (size!2339 (_values!2610 newMap!16)))))))))

(assert (=> b!110117 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))))))

(declare-fun b!110118 () Bool)

(assert (=> b!110118 (= e!71642 call!11745)))

(declare-fun bm!11744 () Bool)

(assert (=> bm!11744 (= call!11745 call!11743)))

(declare-fun b!110119 () Bool)

(declare-fun res!54467 () Bool)

(assert (=> b!110119 (=> (not res!54467) (not e!71643))))

(assert (=> b!110119 (= res!54467 e!71640)))

(declare-fun res!54464 () Bool)

(assert (=> b!110119 (=> res!54464 e!71640)))

(assert (=> b!110119 (= res!54464 (not e!71636))))

(declare-fun res!54465 () Bool)

(assert (=> b!110119 (=> (not res!54465) (not e!71636))))

(assert (=> b!110119 (= res!54465 (bvslt #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))))))

(declare-fun bm!11745 () Bool)

(assert (=> bm!11745 (= call!11747 call!11748)))

(declare-fun b!110120 () Bool)

(assert (=> b!110120 (= e!71638 (validKeyInArray!0 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!110121 () Bool)

(assert (=> b!110121 (= e!71643 e!71641)))

(declare-fun c!19499 () Bool)

(assert (=> b!110121 (= c!19499 (not (= (bvand (ite c!19438 (ite c!19444 (extraKeys!2424 newMap!16) lt!56577) (extraKeys!2424 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!110122 () Bool)

(assert (=> b!110122 (= e!71635 (not call!11749))))

(declare-fun bm!11746 () Bool)

(assert (=> bm!11746 (= call!11749 (contains!838 lt!56747 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!30881 c!19496) b!110109))

(assert (= (and d!30881 (not c!19496)) b!110105))

(assert (= (and b!110105 c!19501) b!110115))

(assert (= (and b!110105 (not c!19501)) b!110102))

(assert (= (and b!110102 c!19497) b!110116))

(assert (= (and b!110102 (not c!19497)) b!110118))

(assert (= (or b!110116 b!110118) bm!11744))

(assert (= (or b!110115 bm!11744) bm!11740))

(assert (= (or b!110115 b!110116) bm!11745))

(assert (= (or b!110109 bm!11740) bm!11741))

(assert (= (or b!110109 bm!11745) bm!11743))

(assert (= (and d!30881 res!54462) b!110120))

(assert (= (and d!30881 c!19498) b!110110))

(assert (= (and d!30881 (not c!19498)) b!110106))

(assert (= (and d!30881 res!54466) b!110119))

(assert (= (and b!110119 res!54465) b!110112))

(assert (= (and b!110119 (not res!54464)) b!110103))

(assert (= (and b!110103 res!54461) b!110117))

(assert (= (and b!110119 res!54467) b!110111))

(assert (= (and b!110111 c!19500) b!110104))

(assert (= (and b!110111 (not c!19500)) b!110122))

(assert (= (and b!110104 res!54459) b!110108))

(assert (= (or b!110104 b!110122) bm!11746))

(assert (= (and b!110111 res!54463) b!110121))

(assert (= (and b!110121 c!19499) b!110114))

(assert (= (and b!110121 (not c!19499)) b!110107))

(assert (= (and b!110114 res!54460) b!110113))

(assert (= (or b!110114 b!110107) bm!11742))

(declare-fun b_lambda!4935 () Bool)

(assert (=> (not b_lambda!4935) (not b!110117)))

(declare-fun tb!2109 () Bool)

(declare-fun t!5774 () Bool)

(assert (=> (and b!109701 (= (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) (defaultEntry!2627 newMap!16)) t!5774) tb!2109))

(declare-fun result!3537 () Bool)

(assert (=> tb!2109 (= result!3537 tp_is_empty!2697)))

(assert (=> b!110117 t!5774))

(declare-fun b_and!6787 () Bool)

(assert (= b_and!6783 (and (=> t!5774 result!3537) b_and!6787)))

(declare-fun t!5776 () Bool)

(declare-fun tb!2111 () Bool)

(assert (=> (and b!109708 (= (defaultEntry!2627 newMap!16) (defaultEntry!2627 newMap!16)) t!5776) tb!2111))

(declare-fun result!3539 () Bool)

(assert (= result!3539 result!3537))

(assert (=> b!110117 t!5776))

(declare-fun b_and!6789 () Bool)

(assert (= b_and!6785 (and (=> t!5776 result!3539) b_and!6789)))

(declare-fun m!124689 () Bool)

(assert (=> bm!11742 m!124689))

(declare-fun m!124691 () Bool)

(assert (=> b!110113 m!124691))

(declare-fun m!124693 () Bool)

(assert (=> b!110112 m!124693))

(assert (=> b!110112 m!124693))

(declare-fun m!124695 () Bool)

(assert (=> b!110112 m!124695))

(assert (=> b!110103 m!124693))

(assert (=> b!110103 m!124693))

(declare-fun m!124697 () Bool)

(assert (=> b!110103 m!124697))

(declare-fun m!124699 () Bool)

(assert (=> b!110110 m!124699))

(declare-fun m!124701 () Bool)

(assert (=> b!110110 m!124701))

(declare-fun m!124703 () Bool)

(assert (=> b!110110 m!124703))

(assert (=> b!110110 m!124699))

(declare-fun m!124705 () Bool)

(assert (=> b!110110 m!124705))

(declare-fun m!124707 () Bool)

(assert (=> b!110110 m!124707))

(assert (=> b!110110 m!124707))

(declare-fun m!124709 () Bool)

(assert (=> b!110110 m!124709))

(declare-fun m!124711 () Bool)

(assert (=> b!110110 m!124711))

(assert (=> b!110110 m!124693))

(declare-fun m!124713 () Bool)

(assert (=> b!110110 m!124713))

(declare-fun m!124715 () Bool)

(assert (=> b!110110 m!124715))

(declare-fun m!124717 () Bool)

(assert (=> b!110110 m!124717))

(declare-fun m!124719 () Bool)

(assert (=> b!110110 m!124719))

(assert (=> b!110110 m!124715))

(declare-fun m!124721 () Bool)

(assert (=> b!110110 m!124721))

(declare-fun m!124723 () Bool)

(assert (=> b!110110 m!124723))

(assert (=> b!110110 m!124705))

(declare-fun m!124725 () Bool)

(assert (=> b!110110 m!124725))

(declare-fun m!124727 () Bool)

(assert (=> b!110110 m!124727))

(declare-fun m!124729 () Bool)

(assert (=> b!110110 m!124729))

(assert (=> d!30881 m!124669))

(declare-fun m!124731 () Bool)

(assert (=> b!110117 m!124731))

(declare-fun m!124733 () Bool)

(assert (=> b!110117 m!124733))

(assert (=> b!110117 m!124731))

(assert (=> b!110117 m!124733))

(declare-fun m!124735 () Bool)

(assert (=> b!110117 m!124735))

(assert (=> b!110117 m!124693))

(declare-fun m!124737 () Bool)

(assert (=> b!110117 m!124737))

(assert (=> b!110117 m!124693))

(assert (=> bm!11741 m!124727))

(assert (=> b!110120 m!124693))

(assert (=> b!110120 m!124693))

(assert (=> b!110120 m!124695))

(declare-fun m!124739 () Bool)

(assert (=> bm!11743 m!124739))

(declare-fun m!124741 () Bool)

(assert (=> b!110109 m!124741))

(declare-fun m!124743 () Bool)

(assert (=> bm!11746 m!124743))

(declare-fun m!124745 () Bool)

(assert (=> b!110108 m!124745))

(assert (=> bm!11711 d!30881))

(declare-fun d!30883 () Bool)

(declare-fun lt!56757 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!113 (List!1630) (InoxSet tuple2!2440))

(assert (=> d!30883 (= lt!56757 (select (content!113 (toList!811 lt!56627)) lt!56457))))

(declare-fun e!71652 () Bool)

(assert (=> d!30883 (= lt!56757 e!71652)))

(declare-fun res!54472 () Bool)

(assert (=> d!30883 (=> (not res!54472) (not e!71652))))

(assert (=> d!30883 (= res!54472 ((_ is Cons!1626) (toList!811 lt!56627)))))

(assert (=> d!30883 (= (contains!839 (toList!811 lt!56627) lt!56457) lt!56757)))

(declare-fun b!110127 () Bool)

(declare-fun e!71651 () Bool)

(assert (=> b!110127 (= e!71652 e!71651)))

(declare-fun res!54473 () Bool)

(assert (=> b!110127 (=> res!54473 e!71651)))

(assert (=> b!110127 (= res!54473 (= (h!2225 (toList!811 lt!56627)) lt!56457))))

(declare-fun b!110128 () Bool)

(assert (=> b!110128 (= e!71651 (contains!839 (t!5767 (toList!811 lt!56627)) lt!56457))))

(assert (= (and d!30883 res!54472) b!110127))

(assert (= (and b!110127 (not res!54473)) b!110128))

(declare-fun m!124747 () Bool)

(assert (=> d!30883 m!124747))

(declare-fun m!124749 () Bool)

(assert (=> d!30883 m!124749))

(declare-fun m!124751 () Bool)

(assert (=> b!110128 m!124751))

(assert (=> b!109953 d!30883))

(declare-fun d!30885 () Bool)

(declare-fun e!71653 () Bool)

(assert (=> d!30885 e!71653))

(declare-fun res!54474 () Bool)

(assert (=> d!30885 (=> res!54474 e!71653)))

(declare-fun lt!56758 () Bool)

(assert (=> d!30885 (= res!54474 (not lt!56758))))

(declare-fun lt!56759 () Bool)

(assert (=> d!30885 (= lt!56758 lt!56759)))

(declare-fun lt!56761 () Unit!3403)

(declare-fun e!71654 () Unit!3403)

(assert (=> d!30885 (= lt!56761 e!71654)))

(declare-fun c!19502 () Bool)

(assert (=> d!30885 (= c!19502 lt!56759)))

(assert (=> d!30885 (= lt!56759 (containsKey!162 (toList!811 lt!56635) (_1!1231 lt!56454)))))

(assert (=> d!30885 (= (contains!838 lt!56635 (_1!1231 lt!56454)) lt!56758)))

(declare-fun b!110129 () Bool)

(declare-fun lt!56760 () Unit!3403)

(assert (=> b!110129 (= e!71654 lt!56760)))

(assert (=> b!110129 (= lt!56760 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 lt!56635) (_1!1231 lt!56454)))))

(assert (=> b!110129 (isDefined!111 (getValueByKey!158 (toList!811 lt!56635) (_1!1231 lt!56454)))))

(declare-fun b!110130 () Bool)

(declare-fun Unit!3417 () Unit!3403)

(assert (=> b!110130 (= e!71654 Unit!3417)))

(declare-fun b!110131 () Bool)

(assert (=> b!110131 (= e!71653 (isDefined!111 (getValueByKey!158 (toList!811 lt!56635) (_1!1231 lt!56454))))))

(assert (= (and d!30885 c!19502) b!110129))

(assert (= (and d!30885 (not c!19502)) b!110130))

(assert (= (and d!30885 (not res!54474)) b!110131))

(declare-fun m!124753 () Bool)

(assert (=> d!30885 m!124753))

(declare-fun m!124755 () Bool)

(assert (=> b!110129 m!124755))

(assert (=> b!110129 m!124557))

(assert (=> b!110129 m!124557))

(declare-fun m!124757 () Bool)

(assert (=> b!110129 m!124757))

(assert (=> b!110131 m!124557))

(assert (=> b!110131 m!124557))

(assert (=> b!110131 m!124757))

(assert (=> d!30833 d!30885))

(declare-fun b!110132 () Bool)

(declare-fun e!71655 () Option!164)

(assert (=> b!110132 (= e!71655 (Some!163 (_2!1231 (h!2225 lt!56634))))))

(declare-fun b!110134 () Bool)

(declare-fun e!71656 () Option!164)

(assert (=> b!110134 (= e!71656 (getValueByKey!158 (t!5767 lt!56634) (_1!1231 lt!56454)))))

(declare-fun d!30887 () Bool)

(declare-fun c!19503 () Bool)

(assert (=> d!30887 (= c!19503 (and ((_ is Cons!1626) lt!56634) (= (_1!1231 (h!2225 lt!56634)) (_1!1231 lt!56454))))))

(assert (=> d!30887 (= (getValueByKey!158 lt!56634 (_1!1231 lt!56454)) e!71655)))

(declare-fun b!110133 () Bool)

(assert (=> b!110133 (= e!71655 e!71656)))

(declare-fun c!19504 () Bool)

(assert (=> b!110133 (= c!19504 (and ((_ is Cons!1626) lt!56634) (not (= (_1!1231 (h!2225 lt!56634)) (_1!1231 lt!56454)))))))

(declare-fun b!110135 () Bool)

(assert (=> b!110135 (= e!71656 None!162)))

(assert (= (and d!30887 c!19503) b!110132))

(assert (= (and d!30887 (not c!19503)) b!110133))

(assert (= (and b!110133 c!19504) b!110134))

(assert (= (and b!110133 (not c!19504)) b!110135))

(declare-fun m!124759 () Bool)

(assert (=> b!110134 m!124759))

(assert (=> d!30833 d!30887))

(declare-fun d!30889 () Bool)

(assert (=> d!30889 (= (getValueByKey!158 lt!56634 (_1!1231 lt!56454)) (Some!163 (_2!1231 lt!56454)))))

(declare-fun lt!56764 () Unit!3403)

(declare-fun choose!687 (List!1630 (_ BitVec 64) V!3243) Unit!3403)

(assert (=> d!30889 (= lt!56764 (choose!687 lt!56634 (_1!1231 lt!56454) (_2!1231 lt!56454)))))

(declare-fun e!71659 () Bool)

(assert (=> d!30889 e!71659))

(declare-fun res!54479 () Bool)

(assert (=> d!30889 (=> (not res!54479) (not e!71659))))

(assert (=> d!30889 (= res!54479 (isStrictlySorted!311 lt!56634))))

(assert (=> d!30889 (= (lemmaContainsTupThenGetReturnValue!74 lt!56634 (_1!1231 lt!56454) (_2!1231 lt!56454)) lt!56764)))

(declare-fun b!110140 () Bool)

(declare-fun res!54480 () Bool)

(assert (=> b!110140 (=> (not res!54480) (not e!71659))))

(assert (=> b!110140 (= res!54480 (containsKey!162 lt!56634 (_1!1231 lt!56454)))))

(declare-fun b!110141 () Bool)

(assert (=> b!110141 (= e!71659 (contains!839 lt!56634 (tuple2!2441 (_1!1231 lt!56454) (_2!1231 lt!56454))))))

(assert (= (and d!30889 res!54479) b!110140))

(assert (= (and b!110140 res!54480) b!110141))

(assert (=> d!30889 m!124551))

(declare-fun m!124761 () Bool)

(assert (=> d!30889 m!124761))

(declare-fun m!124763 () Bool)

(assert (=> d!30889 m!124763))

(declare-fun m!124765 () Bool)

(assert (=> b!110140 m!124765))

(declare-fun m!124767 () Bool)

(assert (=> b!110141 m!124767))

(assert (=> d!30833 d!30889))

(declare-fun b!110162 () Bool)

(declare-fun e!71674 () List!1630)

(declare-fun e!71673 () List!1630)

(assert (=> b!110162 (= e!71674 e!71673)))

(declare-fun c!19515 () Bool)

(assert (=> b!110162 (= c!19515 (and ((_ is Cons!1626) (toList!811 (+!150 lt!56462 lt!56457))) (= (_1!1231 (h!2225 (toList!811 (+!150 lt!56462 lt!56457)))) (_1!1231 lt!56454))))))

(declare-fun bm!11753 () Bool)

(declare-fun call!11756 () List!1630)

(declare-fun call!11757 () List!1630)

(assert (=> bm!11753 (= call!11756 call!11757)))

(declare-fun b!110163 () Bool)

(assert (=> b!110163 (= e!71674 call!11757)))

(declare-fun bm!11754 () Bool)

(declare-fun call!11758 () List!1630)

(assert (=> bm!11754 (= call!11758 call!11756)))

(declare-fun c!19513 () Bool)

(declare-fun e!71672 () List!1630)

(declare-fun bm!11755 () Bool)

(declare-fun $colon$colon!83 (List!1630 tuple2!2440) List!1630)

(assert (=> bm!11755 (= call!11757 ($colon$colon!83 e!71672 (ite c!19513 (h!2225 (toList!811 (+!150 lt!56462 lt!56457))) (tuple2!2441 (_1!1231 lt!56454) (_2!1231 lt!56454)))))))

(declare-fun c!19516 () Bool)

(assert (=> bm!11755 (= c!19516 c!19513)))

(declare-fun b!110164 () Bool)

(assert (=> b!110164 (= e!71673 call!11756)))

(declare-fun b!110166 () Bool)

(declare-fun e!71671 () Bool)

(declare-fun lt!56767 () List!1630)

(assert (=> b!110166 (= e!71671 (contains!839 lt!56767 (tuple2!2441 (_1!1231 lt!56454) (_2!1231 lt!56454))))))

(declare-fun b!110167 () Bool)

(declare-fun e!71670 () List!1630)

(assert (=> b!110167 (= e!71670 call!11758)))

(declare-fun b!110168 () Bool)

(declare-fun res!54486 () Bool)

(assert (=> b!110168 (=> (not res!54486) (not e!71671))))

(assert (=> b!110168 (= res!54486 (containsKey!162 lt!56767 (_1!1231 lt!56454)))))

(declare-fun b!110169 () Bool)

(declare-fun c!19514 () Bool)

(assert (=> b!110169 (= c!19514 (and ((_ is Cons!1626) (toList!811 (+!150 lt!56462 lt!56457))) (bvsgt (_1!1231 (h!2225 (toList!811 (+!150 lt!56462 lt!56457)))) (_1!1231 lt!56454))))))

(assert (=> b!110169 (= e!71673 e!71670)))

(declare-fun b!110170 () Bool)

(assert (=> b!110170 (= e!71670 call!11758)))

(declare-fun b!110171 () Bool)

(assert (=> b!110171 (= e!71672 (ite c!19515 (t!5767 (toList!811 (+!150 lt!56462 lt!56457))) (ite c!19514 (Cons!1626 (h!2225 (toList!811 (+!150 lt!56462 lt!56457))) (t!5767 (toList!811 (+!150 lt!56462 lt!56457)))) Nil!1627)))))

(declare-fun b!110165 () Bool)

(assert (=> b!110165 (= e!71672 (insertStrictlySorted!77 (t!5767 (toList!811 (+!150 lt!56462 lt!56457))) (_1!1231 lt!56454) (_2!1231 lt!56454)))))

(declare-fun d!30891 () Bool)

(assert (=> d!30891 e!71671))

(declare-fun res!54485 () Bool)

(assert (=> d!30891 (=> (not res!54485) (not e!71671))))

(assert (=> d!30891 (= res!54485 (isStrictlySorted!311 lt!56767))))

(assert (=> d!30891 (= lt!56767 e!71674)))

(assert (=> d!30891 (= c!19513 (and ((_ is Cons!1626) (toList!811 (+!150 lt!56462 lt!56457))) (bvslt (_1!1231 (h!2225 (toList!811 (+!150 lt!56462 lt!56457)))) (_1!1231 lt!56454))))))

(assert (=> d!30891 (isStrictlySorted!311 (toList!811 (+!150 lt!56462 lt!56457)))))

(assert (=> d!30891 (= (insertStrictlySorted!77 (toList!811 (+!150 lt!56462 lt!56457)) (_1!1231 lt!56454) (_2!1231 lt!56454)) lt!56767)))

(assert (= (and d!30891 c!19513) b!110163))

(assert (= (and d!30891 (not c!19513)) b!110162))

(assert (= (and b!110162 c!19515) b!110164))

(assert (= (and b!110162 (not c!19515)) b!110169))

(assert (= (and b!110169 c!19514) b!110167))

(assert (= (and b!110169 (not c!19514)) b!110170))

(assert (= (or b!110167 b!110170) bm!11754))

(assert (= (or b!110164 bm!11754) bm!11753))

(assert (= (or b!110163 bm!11753) bm!11755))

(assert (= (and bm!11755 c!19516) b!110165))

(assert (= (and bm!11755 (not c!19516)) b!110171))

(assert (= (and d!30891 res!54485) b!110168))

(assert (= (and b!110168 res!54486) b!110166))

(declare-fun m!124769 () Bool)

(assert (=> b!110168 m!124769))

(declare-fun m!124771 () Bool)

(assert (=> b!110165 m!124771))

(declare-fun m!124773 () Bool)

(assert (=> b!110166 m!124773))

(declare-fun m!124775 () Bool)

(assert (=> d!30891 m!124775))

(declare-fun m!124777 () Bool)

(assert (=> d!30891 m!124777))

(declare-fun m!124779 () Bool)

(assert (=> bm!11755 m!124779))

(assert (=> d!30833 d!30891))

(declare-fun d!30893 () Bool)

(declare-fun get!1350 (Option!164) V!3243)

(assert (=> d!30893 (= (apply!100 lt!56699 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1350 (getValueByKey!158 (toList!811 lt!56699) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4528 () Bool)

(assert (= bs!4528 d!30893))

(assert (=> bs!4528 m!124685))

(assert (=> bs!4528 m!124685))

(declare-fun m!124781 () Bool)

(assert (=> bs!4528 m!124781))

(assert (=> b!110008 d!30893))

(declare-fun d!30895 () Bool)

(declare-fun e!71675 () Bool)

(assert (=> d!30895 e!71675))

(declare-fun res!54487 () Bool)

(assert (=> d!30895 (=> res!54487 e!71675)))

(declare-fun lt!56768 () Bool)

(assert (=> d!30895 (= res!54487 (not lt!56768))))

(declare-fun lt!56769 () Bool)

(assert (=> d!30895 (= lt!56768 lt!56769)))

(declare-fun lt!56771 () Unit!3403)

(declare-fun e!71676 () Unit!3403)

(assert (=> d!30895 (= lt!56771 e!71676)))

(declare-fun c!19517 () Bool)

(assert (=> d!30895 (= c!19517 lt!56769)))

(assert (=> d!30895 (= lt!56769 (containsKey!162 (toList!811 lt!56627) (_1!1231 lt!56457)))))

(assert (=> d!30895 (= (contains!838 lt!56627 (_1!1231 lt!56457)) lt!56768)))

(declare-fun b!110172 () Bool)

(declare-fun lt!56770 () Unit!3403)

(assert (=> b!110172 (= e!71676 lt!56770)))

(assert (=> b!110172 (= lt!56770 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 lt!56627) (_1!1231 lt!56457)))))

(assert (=> b!110172 (isDefined!111 (getValueByKey!158 (toList!811 lt!56627) (_1!1231 lt!56457)))))

(declare-fun b!110173 () Bool)

(declare-fun Unit!3418 () Unit!3403)

(assert (=> b!110173 (= e!71676 Unit!3418)))

(declare-fun b!110174 () Bool)

(assert (=> b!110174 (= e!71675 (isDefined!111 (getValueByKey!158 (toList!811 lt!56627) (_1!1231 lt!56457))))))

(assert (= (and d!30895 c!19517) b!110172))

(assert (= (and d!30895 (not c!19517)) b!110173))

(assert (= (and d!30895 (not res!54487)) b!110174))

(declare-fun m!124783 () Bool)

(assert (=> d!30895 m!124783))

(declare-fun m!124785 () Bool)

(assert (=> b!110172 m!124785))

(assert (=> b!110172 m!124533))

(assert (=> b!110172 m!124533))

(declare-fun m!124787 () Bool)

(assert (=> b!110172 m!124787))

(assert (=> b!110174 m!124533))

(assert (=> b!110174 m!124533))

(assert (=> b!110174 m!124787))

(assert (=> d!30827 d!30895))

(declare-fun b!110175 () Bool)

(declare-fun e!71677 () Option!164)

(assert (=> b!110175 (= e!71677 (Some!163 (_2!1231 (h!2225 lt!56626))))))

(declare-fun b!110177 () Bool)

(declare-fun e!71678 () Option!164)

(assert (=> b!110177 (= e!71678 (getValueByKey!158 (t!5767 lt!56626) (_1!1231 lt!56457)))))

(declare-fun d!30897 () Bool)

(declare-fun c!19518 () Bool)

(assert (=> d!30897 (= c!19518 (and ((_ is Cons!1626) lt!56626) (= (_1!1231 (h!2225 lt!56626)) (_1!1231 lt!56457))))))

(assert (=> d!30897 (= (getValueByKey!158 lt!56626 (_1!1231 lt!56457)) e!71677)))

(declare-fun b!110176 () Bool)

(assert (=> b!110176 (= e!71677 e!71678)))

(declare-fun c!19519 () Bool)

(assert (=> b!110176 (= c!19519 (and ((_ is Cons!1626) lt!56626) (not (= (_1!1231 (h!2225 lt!56626)) (_1!1231 lt!56457)))))))

(declare-fun b!110178 () Bool)

(assert (=> b!110178 (= e!71678 None!162)))

(assert (= (and d!30897 c!19518) b!110175))

(assert (= (and d!30897 (not c!19518)) b!110176))

(assert (= (and b!110176 c!19519) b!110177))

(assert (= (and b!110176 (not c!19519)) b!110178))

(declare-fun m!124789 () Bool)

(assert (=> b!110177 m!124789))

(assert (=> d!30827 d!30897))

(declare-fun d!30899 () Bool)

(assert (=> d!30899 (= (getValueByKey!158 lt!56626 (_1!1231 lt!56457)) (Some!163 (_2!1231 lt!56457)))))

(declare-fun lt!56772 () Unit!3403)

(assert (=> d!30899 (= lt!56772 (choose!687 lt!56626 (_1!1231 lt!56457) (_2!1231 lt!56457)))))

(declare-fun e!71679 () Bool)

(assert (=> d!30899 e!71679))

(declare-fun res!54488 () Bool)

(assert (=> d!30899 (=> (not res!54488) (not e!71679))))

(assert (=> d!30899 (= res!54488 (isStrictlySorted!311 lt!56626))))

(assert (=> d!30899 (= (lemmaContainsTupThenGetReturnValue!74 lt!56626 (_1!1231 lt!56457) (_2!1231 lt!56457)) lt!56772)))

(declare-fun b!110179 () Bool)

(declare-fun res!54489 () Bool)

(assert (=> b!110179 (=> (not res!54489) (not e!71679))))

(assert (=> b!110179 (= res!54489 (containsKey!162 lt!56626 (_1!1231 lt!56457)))))

(declare-fun b!110180 () Bool)

(assert (=> b!110180 (= e!71679 (contains!839 lt!56626 (tuple2!2441 (_1!1231 lt!56457) (_2!1231 lt!56457))))))

(assert (= (and d!30899 res!54488) b!110179))

(assert (= (and b!110179 res!54489) b!110180))

(assert (=> d!30899 m!124527))

(declare-fun m!124791 () Bool)

(assert (=> d!30899 m!124791))

(declare-fun m!124793 () Bool)

(assert (=> d!30899 m!124793))

(declare-fun m!124795 () Bool)

(assert (=> b!110179 m!124795))

(declare-fun m!124797 () Bool)

(assert (=> b!110180 m!124797))

(assert (=> d!30827 d!30899))

(declare-fun b!110181 () Bool)

(declare-fun e!71684 () List!1630)

(declare-fun e!71683 () List!1630)

(assert (=> b!110181 (= e!71684 e!71683)))

(declare-fun c!19522 () Bool)

(assert (=> b!110181 (= c!19522 (and ((_ is Cons!1626) (toList!811 (+!150 lt!56462 lt!56454))) (= (_1!1231 (h!2225 (toList!811 (+!150 lt!56462 lt!56454)))) (_1!1231 lt!56457))))))

(declare-fun bm!11756 () Bool)

(declare-fun call!11759 () List!1630)

(declare-fun call!11760 () List!1630)

(assert (=> bm!11756 (= call!11759 call!11760)))

(declare-fun b!110182 () Bool)

(assert (=> b!110182 (= e!71684 call!11760)))

(declare-fun bm!11757 () Bool)

(declare-fun call!11761 () List!1630)

(assert (=> bm!11757 (= call!11761 call!11759)))

(declare-fun e!71682 () List!1630)

(declare-fun bm!11758 () Bool)

(declare-fun c!19520 () Bool)

(assert (=> bm!11758 (= call!11760 ($colon$colon!83 e!71682 (ite c!19520 (h!2225 (toList!811 (+!150 lt!56462 lt!56454))) (tuple2!2441 (_1!1231 lt!56457) (_2!1231 lt!56457)))))))

(declare-fun c!19523 () Bool)

(assert (=> bm!11758 (= c!19523 c!19520)))

(declare-fun b!110183 () Bool)

(assert (=> b!110183 (= e!71683 call!11759)))

(declare-fun b!110185 () Bool)

(declare-fun e!71681 () Bool)

(declare-fun lt!56773 () List!1630)

(assert (=> b!110185 (= e!71681 (contains!839 lt!56773 (tuple2!2441 (_1!1231 lt!56457) (_2!1231 lt!56457))))))

(declare-fun b!110186 () Bool)

(declare-fun e!71680 () List!1630)

(assert (=> b!110186 (= e!71680 call!11761)))

(declare-fun b!110187 () Bool)

(declare-fun res!54491 () Bool)

(assert (=> b!110187 (=> (not res!54491) (not e!71681))))

(assert (=> b!110187 (= res!54491 (containsKey!162 lt!56773 (_1!1231 lt!56457)))))

(declare-fun b!110188 () Bool)

(declare-fun c!19521 () Bool)

(assert (=> b!110188 (= c!19521 (and ((_ is Cons!1626) (toList!811 (+!150 lt!56462 lt!56454))) (bvsgt (_1!1231 (h!2225 (toList!811 (+!150 lt!56462 lt!56454)))) (_1!1231 lt!56457))))))

(assert (=> b!110188 (= e!71683 e!71680)))

(declare-fun b!110189 () Bool)

(assert (=> b!110189 (= e!71680 call!11761)))

(declare-fun b!110190 () Bool)

(assert (=> b!110190 (= e!71682 (ite c!19522 (t!5767 (toList!811 (+!150 lt!56462 lt!56454))) (ite c!19521 (Cons!1626 (h!2225 (toList!811 (+!150 lt!56462 lt!56454))) (t!5767 (toList!811 (+!150 lt!56462 lt!56454)))) Nil!1627)))))

(declare-fun b!110184 () Bool)

(assert (=> b!110184 (= e!71682 (insertStrictlySorted!77 (t!5767 (toList!811 (+!150 lt!56462 lt!56454))) (_1!1231 lt!56457) (_2!1231 lt!56457)))))

(declare-fun d!30901 () Bool)

(assert (=> d!30901 e!71681))

(declare-fun res!54490 () Bool)

(assert (=> d!30901 (=> (not res!54490) (not e!71681))))

(assert (=> d!30901 (= res!54490 (isStrictlySorted!311 lt!56773))))

(assert (=> d!30901 (= lt!56773 e!71684)))

(assert (=> d!30901 (= c!19520 (and ((_ is Cons!1626) (toList!811 (+!150 lt!56462 lt!56454))) (bvslt (_1!1231 (h!2225 (toList!811 (+!150 lt!56462 lt!56454)))) (_1!1231 lt!56457))))))

(assert (=> d!30901 (isStrictlySorted!311 (toList!811 (+!150 lt!56462 lt!56454)))))

(assert (=> d!30901 (= (insertStrictlySorted!77 (toList!811 (+!150 lt!56462 lt!56454)) (_1!1231 lt!56457) (_2!1231 lt!56457)) lt!56773)))

(assert (= (and d!30901 c!19520) b!110182))

(assert (= (and d!30901 (not c!19520)) b!110181))

(assert (= (and b!110181 c!19522) b!110183))

(assert (= (and b!110181 (not c!19522)) b!110188))

(assert (= (and b!110188 c!19521) b!110186))

(assert (= (and b!110188 (not c!19521)) b!110189))

(assert (= (or b!110186 b!110189) bm!11757))

(assert (= (or b!110183 bm!11757) bm!11756))

(assert (= (or b!110182 bm!11756) bm!11758))

(assert (= (and bm!11758 c!19523) b!110184))

(assert (= (and bm!11758 (not c!19523)) b!110190))

(assert (= (and d!30901 res!54490) b!110187))

(assert (= (and b!110187 res!54491) b!110185))

(declare-fun m!124799 () Bool)

(assert (=> b!110187 m!124799))

(declare-fun m!124801 () Bool)

(assert (=> b!110184 m!124801))

(declare-fun m!124803 () Bool)

(assert (=> b!110185 m!124803))

(declare-fun m!124805 () Bool)

(assert (=> d!30901 m!124805))

(declare-fun m!124807 () Bool)

(assert (=> d!30901 m!124807))

(declare-fun m!124809 () Bool)

(assert (=> bm!11758 m!124809))

(assert (=> d!30827 d!30901))

(declare-fun d!30903 () Bool)

(declare-fun res!54492 () Bool)

(declare-fun e!71685 () Bool)

(assert (=> d!30903 (=> res!54492 e!71685)))

(assert (=> d!30903 (= res!54492 (= (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(assert (=> d!30903 (= (arrayContainsKey!0 (_keys!4341 newMap!16) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) #b00000000000000000000000000000000) e!71685)))

(declare-fun b!110191 () Bool)

(declare-fun e!71686 () Bool)

(assert (=> b!110191 (= e!71685 e!71686)))

(declare-fun res!54493 () Bool)

(assert (=> b!110191 (=> (not res!54493) (not e!71686))))

(assert (=> b!110191 (= res!54493 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2338 (_keys!4341 newMap!16))))))

(declare-fun b!110192 () Bool)

(assert (=> b!110192 (= e!71686 (arrayContainsKey!0 (_keys!4341 newMap!16) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!30903 (not res!54492)) b!110191))

(assert (= (and b!110191 res!54493) b!110192))

(assert (=> d!30903 m!124693))

(assert (=> b!110192 m!124315))

(declare-fun m!124811 () Bool)

(assert (=> b!110192 m!124811))

(assert (=> bm!11707 d!30903))

(declare-fun call!11767 () Bool)

(declare-fun bm!11763 () Bool)

(assert (=> bm!11763 (= call!11767 (arrayContainsKey!0 (_keys!4341 newMap!16) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!110209 () Bool)

(declare-fun res!54503 () Bool)

(declare-fun e!71695 () Bool)

(assert (=> b!110209 (=> (not res!54503) (not e!71695))))

(declare-fun call!11766 () Bool)

(assert (=> b!110209 (= res!54503 call!11766)))

(declare-fun e!71696 () Bool)

(assert (=> b!110209 (= e!71696 e!71695)))

(declare-fun b!110210 () Bool)

(declare-fun e!71698 () Bool)

(assert (=> b!110210 (= e!71698 e!71696)))

(declare-fun c!19529 () Bool)

(declare-fun lt!56778 () SeekEntryResult!261)

(assert (=> b!110210 (= c!19529 ((_ is MissingVacant!261) lt!56778))))

(declare-fun c!19528 () Bool)

(declare-fun bm!11764 () Bool)

(assert (=> bm!11764 (= call!11766 (inRange!0 (ite c!19528 (index!3194 lt!56778) (index!3197 lt!56778)) (mask!6795 newMap!16)))))

(declare-fun d!30905 () Bool)

(assert (=> d!30905 e!71698))

(assert (=> d!30905 (= c!19528 ((_ is MissingZero!261) lt!56778))))

(assert (=> d!30905 (= lt!56778 (seekEntryOrOpen!0 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (_keys!4341 newMap!16) (mask!6795 newMap!16)))))

(declare-fun lt!56779 () Unit!3403)

(declare-fun choose!688 (array!4389 array!4391 (_ BitVec 32) (_ BitVec 32) V!3243 V!3243 (_ BitVec 64) Int) Unit!3403)

(assert (=> d!30905 (= lt!56779 (choose!688 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (defaultEntry!2627 newMap!16)))))

(assert (=> d!30905 (validMask!0 (mask!6795 newMap!16))))

(assert (=> d!30905 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!49 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (defaultEntry!2627 newMap!16)) lt!56779)))

(declare-fun b!110211 () Bool)

(declare-fun e!71697 () Bool)

(assert (=> b!110211 (= e!71697 (not call!11767))))

(declare-fun b!110212 () Bool)

(declare-fun res!54505 () Bool)

(assert (=> b!110212 (=> (not res!54505) (not e!71695))))

(assert (=> b!110212 (= res!54505 (= (select (arr!2081 (_keys!4341 newMap!16)) (index!3197 lt!56778)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!110212 (and (bvsge (index!3197 lt!56778) #b00000000000000000000000000000000) (bvslt (index!3197 lt!56778) (size!2338 (_keys!4341 newMap!16))))))

(declare-fun b!110213 () Bool)

(assert (=> b!110213 (= e!71698 e!71697)))

(declare-fun res!54502 () Bool)

(assert (=> b!110213 (= res!54502 call!11766)))

(assert (=> b!110213 (=> (not res!54502) (not e!71697))))

(declare-fun b!110214 () Bool)

(assert (=> b!110214 (= e!71695 (not call!11767))))

(declare-fun b!110215 () Bool)

(assert (=> b!110215 (and (bvsge (index!3194 lt!56778) #b00000000000000000000000000000000) (bvslt (index!3194 lt!56778) (size!2338 (_keys!4341 newMap!16))))))

(declare-fun res!54504 () Bool)

(assert (=> b!110215 (= res!54504 (= (select (arr!2081 (_keys!4341 newMap!16)) (index!3194 lt!56778)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!110215 (=> (not res!54504) (not e!71697))))

(declare-fun b!110216 () Bool)

(assert (=> b!110216 (= e!71696 ((_ is Undefined!261) lt!56778))))

(assert (= (and d!30905 c!19528) b!110213))

(assert (= (and d!30905 (not c!19528)) b!110210))

(assert (= (and b!110213 res!54502) b!110215))

(assert (= (and b!110215 res!54504) b!110211))

(assert (= (and b!110210 c!19529) b!110209))

(assert (= (and b!110210 (not c!19529)) b!110216))

(assert (= (and b!110209 res!54503) b!110212))

(assert (= (and b!110212 res!54505) b!110214))

(assert (= (or b!110213 b!110209) bm!11764))

(assert (= (or b!110211 b!110214) bm!11763))

(assert (=> d!30905 m!124315))

(assert (=> d!30905 m!124453))

(assert (=> d!30905 m!124315))

(declare-fun m!124813 () Bool)

(assert (=> d!30905 m!124813))

(assert (=> d!30905 m!124669))

(declare-fun m!124815 () Bool)

(assert (=> bm!11764 m!124815))

(declare-fun m!124817 () Bool)

(assert (=> b!110212 m!124817))

(assert (=> bm!11763 m!124315))

(assert (=> bm!11763 m!124447))

(declare-fun m!124819 () Bool)

(assert (=> b!110215 m!124819))

(assert (=> bm!11696 d!30905))

(declare-fun b!110230 () Bool)

(declare-fun e!71706 () SeekEntryResult!261)

(declare-fun lt!56788 () SeekEntryResult!261)

(assert (=> b!110230 (= e!71706 (Found!261 (index!3196 lt!56788)))))

(declare-fun b!110231 () Bool)

(declare-fun e!71707 () SeekEntryResult!261)

(assert (=> b!110231 (= e!71707 (MissingZero!261 (index!3196 lt!56788)))))

(declare-fun b!110232 () Bool)

(declare-fun e!71705 () SeekEntryResult!261)

(assert (=> b!110232 (= e!71705 e!71706)))

(declare-fun lt!56787 () (_ BitVec 64))

(assert (=> b!110232 (= lt!56787 (select (arr!2081 (_keys!4341 newMap!16)) (index!3196 lt!56788)))))

(declare-fun c!19536 () Bool)

(assert (=> b!110232 (= c!19536 (= lt!56787 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(declare-fun b!110233 () Bool)

(assert (=> b!110233 (= e!71705 Undefined!261)))

(declare-fun b!110234 () Bool)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4389 (_ BitVec 32)) SeekEntryResult!261)

(assert (=> b!110234 (= e!71707 (seekKeyOrZeroReturnVacant!0 (x!13949 lt!56788) (index!3196 lt!56788) (index!3196 lt!56788) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (_keys!4341 newMap!16) (mask!6795 newMap!16)))))

(declare-fun lt!56786 () SeekEntryResult!261)

(declare-fun d!30907 () Bool)

(assert (=> d!30907 (and (or ((_ is Undefined!261) lt!56786) (not ((_ is Found!261) lt!56786)) (and (bvsge (index!3195 lt!56786) #b00000000000000000000000000000000) (bvslt (index!3195 lt!56786) (size!2338 (_keys!4341 newMap!16))))) (or ((_ is Undefined!261) lt!56786) ((_ is Found!261) lt!56786) (not ((_ is MissingZero!261) lt!56786)) (and (bvsge (index!3194 lt!56786) #b00000000000000000000000000000000) (bvslt (index!3194 lt!56786) (size!2338 (_keys!4341 newMap!16))))) (or ((_ is Undefined!261) lt!56786) ((_ is Found!261) lt!56786) ((_ is MissingZero!261) lt!56786) (not ((_ is MissingVacant!261) lt!56786)) (and (bvsge (index!3197 lt!56786) #b00000000000000000000000000000000) (bvslt (index!3197 lt!56786) (size!2338 (_keys!4341 newMap!16))))) (or ((_ is Undefined!261) lt!56786) (ite ((_ is Found!261) lt!56786) (= (select (arr!2081 (_keys!4341 newMap!16)) (index!3195 lt!56786)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) (ite ((_ is MissingZero!261) lt!56786) (= (select (arr!2081 (_keys!4341 newMap!16)) (index!3194 lt!56786)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!261) lt!56786) (= (select (arr!2081 (_keys!4341 newMap!16)) (index!3197 lt!56786)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!30907 (= lt!56786 e!71705)))

(declare-fun c!19537 () Bool)

(assert (=> d!30907 (= c!19537 (and ((_ is Intermediate!261) lt!56788) (undefined!1073 lt!56788)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4389 (_ BitVec 32)) SeekEntryResult!261)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!30907 (= lt!56788 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (mask!6795 newMap!16)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (_keys!4341 newMap!16) (mask!6795 newMap!16)))))

(assert (=> d!30907 (validMask!0 (mask!6795 newMap!16))))

(assert (=> d!30907 (= (seekEntryOrOpen!0 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (_keys!4341 newMap!16) (mask!6795 newMap!16)) lt!56786)))

(declare-fun b!110229 () Bool)

(declare-fun c!19538 () Bool)

(assert (=> b!110229 (= c!19538 (= lt!56787 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!110229 (= e!71706 e!71707)))

(assert (= (and d!30907 c!19537) b!110233))

(assert (= (and d!30907 (not c!19537)) b!110232))

(assert (= (and b!110232 c!19536) b!110230))

(assert (= (and b!110232 (not c!19536)) b!110229))

(assert (= (and b!110229 c!19538) b!110231))

(assert (= (and b!110229 (not c!19538)) b!110234))

(declare-fun m!124821 () Bool)

(assert (=> b!110232 m!124821))

(assert (=> b!110234 m!124315))

(declare-fun m!124823 () Bool)

(assert (=> b!110234 m!124823))

(declare-fun m!124825 () Bool)

(assert (=> d!30907 m!124825))

(declare-fun m!124827 () Bool)

(assert (=> d!30907 m!124827))

(assert (=> d!30907 m!124669))

(declare-fun m!124829 () Bool)

(assert (=> d!30907 m!124829))

(declare-fun m!124831 () Bool)

(assert (=> d!30907 m!124831))

(assert (=> d!30907 m!124315))

(declare-fun m!124833 () Bool)

(assert (=> d!30907 m!124833))

(assert (=> d!30907 m!124315))

(assert (=> d!30907 m!124831))

(assert (=> bm!11710 d!30907))

(declare-fun d!30909 () Bool)

(assert (=> d!30909 (= (+!150 (getCurrentListMap!496 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458)) (getCurrentListMap!496 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) lt!56577 (zeroValue!2498 newMap!16) lt!56458 #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!56791 () Unit!3403)

(declare-fun choose!689 (array!4389 array!4391 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3243 V!3243 V!3243 Int) Unit!3403)

(assert (=> d!30909 (= lt!56791 (choose!689 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) lt!56577 (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) lt!56458 (defaultEntry!2627 newMap!16)))))

(assert (=> d!30909 (validMask!0 (mask!6795 newMap!16))))

(assert (=> d!30909 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!49 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) lt!56577 (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) lt!56458 (defaultEntry!2627 newMap!16)) lt!56791)))

(declare-fun bs!4529 () Bool)

(assert (= bs!4529 d!30909))

(declare-fun m!124835 () Bool)

(assert (=> bs!4529 m!124835))

(assert (=> bs!4529 m!124485))

(declare-fun m!124837 () Bool)

(assert (=> bs!4529 m!124837))

(declare-fun m!124839 () Bool)

(assert (=> bs!4529 m!124839))

(assert (=> bs!4529 m!124669))

(assert (=> bs!4529 m!124485))

(assert (=> b!109874 d!30909))

(declare-fun d!30911 () Bool)

(declare-fun e!71708 () Bool)

(assert (=> d!30911 e!71708))

(declare-fun res!54506 () Bool)

(assert (=> d!30911 (=> res!54506 e!71708)))

(declare-fun lt!56792 () Bool)

(assert (=> d!30911 (= res!54506 (not lt!56792))))

(declare-fun lt!56793 () Bool)

(assert (=> d!30911 (= lt!56792 lt!56793)))

(declare-fun lt!56795 () Unit!3403)

(declare-fun e!71709 () Unit!3403)

(assert (=> d!30911 (= lt!56795 e!71709)))

(declare-fun c!19539 () Bool)

(assert (=> d!30911 (= c!19539 lt!56793)))

(assert (=> d!30911 (= lt!56793 (containsKey!162 (toList!811 lt!56699) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!30911 (= (contains!838 lt!56699 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!56792)))

(declare-fun b!110235 () Bool)

(declare-fun lt!56794 () Unit!3403)

(assert (=> b!110235 (= e!71709 lt!56794)))

(assert (=> b!110235 (= lt!56794 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 lt!56699) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!110235 (isDefined!111 (getValueByKey!158 (toList!811 lt!56699) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!110236 () Bool)

(declare-fun Unit!3419 () Unit!3403)

(assert (=> b!110236 (= e!71709 Unit!3419)))

(declare-fun b!110237 () Bool)

(assert (=> b!110237 (= e!71708 (isDefined!111 (getValueByKey!158 (toList!811 lt!56699) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!30911 c!19539) b!110235))

(assert (= (and d!30911 (not c!19539)) b!110236))

(assert (= (and d!30911 (not res!54506)) b!110237))

(assert (=> d!30911 m!124503))

(declare-fun m!124841 () Bool)

(assert (=> d!30911 m!124841))

(assert (=> b!110235 m!124503))

(declare-fun m!124843 () Bool)

(assert (=> b!110235 m!124843))

(assert (=> b!110235 m!124503))

(declare-fun m!124845 () Bool)

(assert (=> b!110235 m!124845))

(assert (=> b!110235 m!124845))

(declare-fun m!124847 () Bool)

(assert (=> b!110235 m!124847))

(assert (=> b!110237 m!124503))

(assert (=> b!110237 m!124845))

(assert (=> b!110237 m!124845))

(assert (=> b!110237 m!124847))

(assert (=> b!110003 d!30911))

(declare-fun d!30913 () Bool)

(declare-fun res!54507 () Bool)

(declare-fun e!71710 () Bool)

(assert (=> d!30913 (=> (not res!54507) (not e!71710))))

(assert (=> d!30913 (= res!54507 (simpleValid!76 (v!2930 (underlying!370 thiss!992))))))

(assert (=> d!30913 (= (valid!430 (v!2930 (underlying!370 thiss!992))) e!71710)))

(declare-fun b!110238 () Bool)

(declare-fun res!54508 () Bool)

(assert (=> b!110238 (=> (not res!54508) (not e!71710))))

(assert (=> b!110238 (= res!54508 (= (arrayCountValidKeys!0 (_keys!4341 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000000000 (size!2338 (_keys!4341 (v!2930 (underlying!370 thiss!992))))) (_size!508 (v!2930 (underlying!370 thiss!992)))))))

(declare-fun b!110239 () Bool)

(declare-fun res!54509 () Bool)

(assert (=> b!110239 (=> (not res!54509) (not e!71710))))

(assert (=> b!110239 (= res!54509 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4341 (v!2930 (underlying!370 thiss!992))) (mask!6795 (v!2930 (underlying!370 thiss!992)))))))

(declare-fun b!110240 () Bool)

(assert (=> b!110240 (= e!71710 (arrayNoDuplicates!0 (_keys!4341 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000000000 Nil!1628))))

(assert (= (and d!30913 res!54507) b!110238))

(assert (= (and b!110238 res!54508) b!110239))

(assert (= (and b!110239 res!54509) b!110240))

(declare-fun m!124849 () Bool)

(assert (=> d!30913 m!124849))

(declare-fun m!124851 () Bool)

(assert (=> b!110238 m!124851))

(declare-fun m!124853 () Bool)

(assert (=> b!110239 m!124853))

(declare-fun m!124855 () Bool)

(assert (=> b!110240 m!124855))

(assert (=> d!30841 d!30913))

(declare-fun b!110241 () Bool)

(declare-fun e!71711 () Option!164)

(assert (=> b!110241 (= e!71711 (Some!163 (_2!1231 (h!2225 (toList!811 lt!56635)))))))

(declare-fun b!110243 () Bool)

(declare-fun e!71712 () Option!164)

(assert (=> b!110243 (= e!71712 (getValueByKey!158 (t!5767 (toList!811 lt!56635)) (_1!1231 lt!56454)))))

(declare-fun d!30915 () Bool)

(declare-fun c!19540 () Bool)

(assert (=> d!30915 (= c!19540 (and ((_ is Cons!1626) (toList!811 lt!56635)) (= (_1!1231 (h!2225 (toList!811 lt!56635))) (_1!1231 lt!56454))))))

(assert (=> d!30915 (= (getValueByKey!158 (toList!811 lt!56635) (_1!1231 lt!56454)) e!71711)))

(declare-fun b!110242 () Bool)

(assert (=> b!110242 (= e!71711 e!71712)))

(declare-fun c!19541 () Bool)

(assert (=> b!110242 (= c!19541 (and ((_ is Cons!1626) (toList!811 lt!56635)) (not (= (_1!1231 (h!2225 (toList!811 lt!56635))) (_1!1231 lt!56454)))))))

(declare-fun b!110244 () Bool)

(assert (=> b!110244 (= e!71712 None!162)))

(assert (= (and d!30915 c!19540) b!110241))

(assert (= (and d!30915 (not c!19540)) b!110242))

(assert (= (and b!110242 c!19541) b!110243))

(assert (= (and b!110242 (not c!19541)) b!110244))

(declare-fun m!124857 () Bool)

(assert (=> b!110243 m!124857))

(assert (=> b!109956 d!30915))

(declare-fun b!110245 () Bool)

(declare-fun e!71716 () Bool)

(declare-fun e!71717 () Bool)

(assert (=> b!110245 (= e!71716 e!71717)))

(declare-fun c!19543 () Bool)

(assert (=> b!110245 (= c!19543 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2338 (_keys!4341 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun b!110246 () Bool)

(declare-fun e!71719 () Bool)

(assert (=> b!110246 (= e!71719 e!71716)))

(declare-fun c!19544 () Bool)

(declare-fun e!71713 () Bool)

(assert (=> b!110246 (= c!19544 e!71713)))

(declare-fun res!54513 () Bool)

(assert (=> b!110246 (=> (not res!54513) (not e!71713))))

(assert (=> b!110246 (= res!54513 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2338 (_keys!4341 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun b!110247 () Bool)

(declare-fun lt!56801 () Unit!3403)

(declare-fun lt!56797 () Unit!3403)

(assert (=> b!110247 (= lt!56801 lt!56797)))

(declare-fun lt!56802 () V!3243)

(declare-fun lt!56796 () (_ BitVec 64))

(declare-fun lt!56800 () (_ BitVec 64))

(declare-fun lt!56799 () ListLongMap!1591)

(assert (=> b!110247 (not (contains!838 (+!150 lt!56799 (tuple2!2441 lt!56796 lt!56802)) lt!56800))))

(assert (=> b!110247 (= lt!56797 (addStillNotContains!48 lt!56799 lt!56796 lt!56802 lt!56800))))

(assert (=> b!110247 (= lt!56800 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!110247 (= lt!56802 (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!110247 (= lt!56796 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(declare-fun call!11768 () ListLongMap!1591)

(assert (=> b!110247 (= lt!56799 call!11768)))

(declare-fun e!71715 () ListLongMap!1591)

(assert (=> b!110247 (= e!71715 (+!150 call!11768 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!110248 () Bool)

(declare-fun res!54510 () Bool)

(assert (=> b!110248 (=> (not res!54510) (not e!71719))))

(declare-fun lt!56798 () ListLongMap!1591)

(assert (=> b!110248 (= res!54510 (not (contains!838 lt!56798 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!110249 () Bool)

(declare-fun e!71714 () Bool)

(assert (=> b!110249 (= e!71716 e!71714)))

(assert (=> b!110249 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2338 (_keys!4341 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun res!54511 () Bool)

(assert (=> b!110249 (= res!54511 (contains!838 lt!56798 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!110249 (=> (not res!54511) (not e!71714))))

(declare-fun b!110250 () Bool)

(assert (=> b!110250 (= e!71713 (validKeyInArray!0 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!110250 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!110251 () Bool)

(declare-fun e!71718 () ListLongMap!1591)

(assert (=> b!110251 (= e!71718 e!71715)))

(declare-fun c!19542 () Bool)

(assert (=> b!110251 (= c!19542 (validKeyInArray!0 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun d!30917 () Bool)

(assert (=> d!30917 e!71719))

(declare-fun res!54512 () Bool)

(assert (=> d!30917 (=> (not res!54512) (not e!71719))))

(assert (=> d!30917 (= res!54512 (not (contains!838 lt!56798 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!30917 (= lt!56798 e!71718)))

(declare-fun c!19545 () Bool)

(assert (=> d!30917 (= c!19545 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2338 (_keys!4341 (v!2930 (underlying!370 thiss!992))))))))

(assert (=> d!30917 (validMask!0 (mask!6795 (v!2930 (underlying!370 thiss!992))))))

(assert (=> d!30917 (= (getCurrentListMapNoExtraKeys!116 (_keys!4341 (v!2930 (underlying!370 thiss!992))) (_values!2610 (v!2930 (underlying!370 thiss!992))) (mask!6795 (v!2930 (underlying!370 thiss!992))) (extraKeys!2424 (v!2930 (underlying!370 thiss!992))) (zeroValue!2498 (v!2930 (underlying!370 thiss!992))) (minValue!2498 (v!2930 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2627 (v!2930 (underlying!370 thiss!992)))) lt!56798)))

(declare-fun b!110252 () Bool)

(assert (=> b!110252 (= e!71717 (= lt!56798 (getCurrentListMapNoExtraKeys!116 (_keys!4341 (v!2930 (underlying!370 thiss!992))) (_values!2610 (v!2930 (underlying!370 thiss!992))) (mask!6795 (v!2930 (underlying!370 thiss!992))) (extraKeys!2424 (v!2930 (underlying!370 thiss!992))) (zeroValue!2498 (v!2930 (underlying!370 thiss!992))) (minValue!2498 (v!2930 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun b!110253 () Bool)

(assert (=> b!110253 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2338 (_keys!4341 (v!2930 (underlying!370 thiss!992))))))))

(assert (=> b!110253 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2339 (_values!2610 (v!2930 (underlying!370 thiss!992))))))))

(assert (=> b!110253 (= e!71714 (= (apply!100 lt!56798 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bm!11765 () Bool)

(assert (=> bm!11765 (= call!11768 (getCurrentListMapNoExtraKeys!116 (_keys!4341 (v!2930 (underlying!370 thiss!992))) (_values!2610 (v!2930 (underlying!370 thiss!992))) (mask!6795 (v!2930 (underlying!370 thiss!992))) (extraKeys!2424 (v!2930 (underlying!370 thiss!992))) (zeroValue!2498 (v!2930 (underlying!370 thiss!992))) (minValue!2498 (v!2930 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2627 (v!2930 (underlying!370 thiss!992)))))))

(declare-fun b!110254 () Bool)

(assert (=> b!110254 (= e!71715 call!11768)))

(declare-fun b!110255 () Bool)

(assert (=> b!110255 (= e!71717 (isEmpty!376 lt!56798))))

(declare-fun b!110256 () Bool)

(assert (=> b!110256 (= e!71718 (ListLongMap!1592 Nil!1627))))

(assert (= (and d!30917 c!19545) b!110256))

(assert (= (and d!30917 (not c!19545)) b!110251))

(assert (= (and b!110251 c!19542) b!110247))

(assert (= (and b!110251 (not c!19542)) b!110254))

(assert (= (or b!110247 b!110254) bm!11765))

(assert (= (and d!30917 res!54512) b!110248))

(assert (= (and b!110248 res!54510) b!110246))

(assert (= (and b!110246 res!54513) b!110250))

(assert (= (and b!110246 c!19544) b!110249))

(assert (= (and b!110246 (not c!19544)) b!110245))

(assert (= (and b!110249 res!54511) b!110253))

(assert (= (and b!110245 c!19543) b!110252))

(assert (= (and b!110245 (not c!19543)) b!110255))

(declare-fun b_lambda!4937 () Bool)

(assert (=> (not b_lambda!4937) (not b!110247)))

(assert (=> b!110247 t!5764))

(declare-fun b_and!6791 () Bool)

(assert (= b_and!6787 (and (=> t!5764 result!3523) b_and!6791)))

(assert (=> b!110247 t!5766))

(declare-fun b_and!6793 () Bool)

(assert (= b_and!6789 (and (=> t!5766 result!3527) b_and!6793)))

(declare-fun b_lambda!4939 () Bool)

(assert (=> (not b_lambda!4939) (not b!110253)))

(assert (=> b!110253 t!5764))

(declare-fun b_and!6795 () Bool)

(assert (= b_and!6791 (and (=> t!5764 result!3523) b_and!6795)))

(assert (=> b!110253 t!5766))

(declare-fun b_and!6797 () Bool)

(assert (= b_and!6793 (and (=> t!5766 result!3527) b_and!6797)))

(declare-fun m!124859 () Bool)

(assert (=> b!110252 m!124859))

(declare-fun m!124861 () Bool)

(assert (=> b!110248 m!124861))

(declare-fun m!124863 () Bool)

(assert (=> d!30917 m!124863))

(assert (=> d!30917 m!124329))

(declare-fun m!124865 () Bool)

(assert (=> b!110253 m!124865))

(declare-fun m!124867 () Bool)

(assert (=> b!110253 m!124867))

(assert (=> b!110253 m!124363))

(declare-fun m!124869 () Bool)

(assert (=> b!110253 m!124869))

(assert (=> b!110253 m!124363))

(assert (=> b!110253 m!124867))

(assert (=> b!110253 m!124865))

(declare-fun m!124871 () Bool)

(assert (=> b!110253 m!124871))

(assert (=> b!110250 m!124865))

(assert (=> b!110250 m!124865))

(declare-fun m!124873 () Bool)

(assert (=> b!110250 m!124873))

(assert (=> b!110251 m!124865))

(assert (=> b!110251 m!124865))

(assert (=> b!110251 m!124873))

(declare-fun m!124875 () Bool)

(assert (=> b!110255 m!124875))

(assert (=> b!110247 m!124865))

(declare-fun m!124877 () Bool)

(assert (=> b!110247 m!124877))

(declare-fun m!124879 () Bool)

(assert (=> b!110247 m!124879))

(declare-fun m!124881 () Bool)

(assert (=> b!110247 m!124881))

(assert (=> b!110247 m!124363))

(assert (=> b!110247 m!124867))

(assert (=> b!110247 m!124877))

(declare-fun m!124883 () Bool)

(assert (=> b!110247 m!124883))

(assert (=> b!110247 m!124867))

(assert (=> b!110247 m!124363))

(assert (=> b!110247 m!124869))

(assert (=> b!110249 m!124865))

(assert (=> b!110249 m!124865))

(declare-fun m!124885 () Bool)

(assert (=> b!110249 m!124885))

(assert (=> bm!11765 m!124859))

(assert (=> b!109943 d!30917))

(declare-fun d!30919 () Bool)

(declare-fun res!54514 () Bool)

(declare-fun e!71720 () Bool)

(assert (=> d!30919 (=> (not res!54514) (not e!71720))))

(assert (=> d!30919 (= res!54514 (simpleValid!76 (_2!1230 lt!56590)))))

(assert (=> d!30919 (= (valid!430 (_2!1230 lt!56590)) e!71720)))

(declare-fun b!110257 () Bool)

(declare-fun res!54515 () Bool)

(assert (=> b!110257 (=> (not res!54515) (not e!71720))))

(assert (=> b!110257 (= res!54515 (= (arrayCountValidKeys!0 (_keys!4341 (_2!1230 lt!56590)) #b00000000000000000000000000000000 (size!2338 (_keys!4341 (_2!1230 lt!56590)))) (_size!508 (_2!1230 lt!56590))))))

(declare-fun b!110258 () Bool)

(declare-fun res!54516 () Bool)

(assert (=> b!110258 (=> (not res!54516) (not e!71720))))

(assert (=> b!110258 (= res!54516 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4341 (_2!1230 lt!56590)) (mask!6795 (_2!1230 lt!56590))))))

(declare-fun b!110259 () Bool)

(assert (=> b!110259 (= e!71720 (arrayNoDuplicates!0 (_keys!4341 (_2!1230 lt!56590)) #b00000000000000000000000000000000 Nil!1628))))

(assert (= (and d!30919 res!54514) b!110257))

(assert (= (and b!110257 res!54515) b!110258))

(assert (= (and b!110258 res!54516) b!110259))

(declare-fun m!124887 () Bool)

(assert (=> d!30919 m!124887))

(declare-fun m!124889 () Bool)

(assert (=> b!110257 m!124889))

(declare-fun m!124891 () Bool)

(assert (=> b!110258 m!124891))

(declare-fun m!124893 () Bool)

(assert (=> b!110259 m!124893))

(assert (=> d!30821 d!30919))

(assert (=> d!30821 d!30863))

(declare-fun d!30921 () Bool)

(declare-fun e!71721 () Bool)

(assert (=> d!30921 e!71721))

(declare-fun res!54517 () Bool)

(assert (=> d!30921 (=> (not res!54517) (not e!71721))))

(declare-fun lt!56805 () ListLongMap!1591)

(assert (=> d!30921 (= res!54517 (contains!838 lt!56805 (_1!1231 (ite (or c!19473 c!19478) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(declare-fun lt!56804 () List!1630)

(assert (=> d!30921 (= lt!56805 (ListLongMap!1592 lt!56804))))

(declare-fun lt!56806 () Unit!3403)

(declare-fun lt!56803 () Unit!3403)

(assert (=> d!30921 (= lt!56806 lt!56803)))

(assert (=> d!30921 (= (getValueByKey!158 lt!56804 (_1!1231 (ite (or c!19473 c!19478) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))) (Some!163 (_2!1231 (ite (or c!19473 c!19478) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> d!30921 (= lt!56803 (lemmaContainsTupThenGetReturnValue!74 lt!56804 (_1!1231 (ite (or c!19473 c!19478) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))) (_2!1231 (ite (or c!19473 c!19478) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> d!30921 (= lt!56804 (insertStrictlySorted!77 (toList!811 (ite c!19473 call!11736 (ite c!19478 call!11733 call!11735))) (_1!1231 (ite (or c!19473 c!19478) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))) (_2!1231 (ite (or c!19473 c!19478) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> d!30921 (= (+!150 (ite c!19473 call!11736 (ite c!19478 call!11733 call!11735)) (ite (or c!19473 c!19478) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))) lt!56805)))

(declare-fun b!110260 () Bool)

(declare-fun res!54518 () Bool)

(assert (=> b!110260 (=> (not res!54518) (not e!71721))))

(assert (=> b!110260 (= res!54518 (= (getValueByKey!158 (toList!811 lt!56805) (_1!1231 (ite (or c!19473 c!19478) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))) (Some!163 (_2!1231 (ite (or c!19473 c!19478) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))))

(declare-fun b!110261 () Bool)

(assert (=> b!110261 (= e!71721 (contains!839 (toList!811 lt!56805) (ite (or c!19473 c!19478) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(assert (= (and d!30921 res!54517) b!110260))

(assert (= (and b!110260 res!54518) b!110261))

(declare-fun m!124895 () Bool)

(assert (=> d!30921 m!124895))

(declare-fun m!124897 () Bool)

(assert (=> d!30921 m!124897))

(declare-fun m!124899 () Bool)

(assert (=> d!30921 m!124899))

(declare-fun m!124901 () Bool)

(assert (=> d!30921 m!124901))

(declare-fun m!124903 () Bool)

(assert (=> b!110260 m!124903))

(declare-fun m!124905 () Bool)

(assert (=> b!110261 m!124905))

(assert (=> bm!11733 d!30921))

(declare-fun d!30923 () Bool)

(assert (=> d!30923 (= (+!150 (getCurrentListMap!496 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458)) (getCurrentListMap!496 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) lt!56572 lt!56458 (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!56809 () Unit!3403)

(declare-fun choose!690 (array!4389 array!4391 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3243 V!3243 V!3243 Int) Unit!3403)

(assert (=> d!30923 (= lt!56809 (choose!690 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) lt!56572 (zeroValue!2498 newMap!16) lt!56458 (minValue!2498 newMap!16) (defaultEntry!2627 newMap!16)))))

(assert (=> d!30923 (validMask!0 (mask!6795 newMap!16))))

(assert (=> d!30923 (= (lemmaChangeZeroKeyThenAddPairToListMap!49 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) lt!56572 (zeroValue!2498 newMap!16) lt!56458 (minValue!2498 newMap!16) (defaultEntry!2627 newMap!16)) lt!56809)))

(declare-fun bs!4530 () Bool)

(assert (= bs!4530 d!30923))

(declare-fun m!124907 () Bool)

(assert (=> bs!4530 m!124907))

(assert (=> bs!4530 m!124485))

(declare-fun m!124909 () Bool)

(assert (=> bs!4530 m!124909))

(assert (=> bs!4530 m!124669))

(assert (=> bs!4530 m!124485))

(declare-fun m!124911 () Bool)

(assert (=> bs!4530 m!124911))

(assert (=> b!109898 d!30923))

(assert (=> bm!11715 d!30917))

(declare-fun b!110262 () Bool)

(declare-fun e!71722 () Option!164)

(assert (=> b!110262 (= e!71722 (Some!163 (_2!1231 (h!2225 (toList!811 lt!56639)))))))

(declare-fun b!110264 () Bool)

(declare-fun e!71723 () Option!164)

(assert (=> b!110264 (= e!71723 (getValueByKey!158 (t!5767 (toList!811 lt!56639)) (_1!1231 lt!56457)))))

(declare-fun d!30925 () Bool)

(declare-fun c!19546 () Bool)

(assert (=> d!30925 (= c!19546 (and ((_ is Cons!1626) (toList!811 lt!56639)) (= (_1!1231 (h!2225 (toList!811 lt!56639))) (_1!1231 lt!56457))))))

(assert (=> d!30925 (= (getValueByKey!158 (toList!811 lt!56639) (_1!1231 lt!56457)) e!71722)))

(declare-fun b!110263 () Bool)

(assert (=> b!110263 (= e!71722 e!71723)))

(declare-fun c!19547 () Bool)

(assert (=> b!110263 (= c!19547 (and ((_ is Cons!1626) (toList!811 lt!56639)) (not (= (_1!1231 (h!2225 (toList!811 lt!56639))) (_1!1231 lt!56457)))))))

(declare-fun b!110265 () Bool)

(assert (=> b!110265 (= e!71723 None!162)))

(assert (= (and d!30925 c!19546) b!110262))

(assert (= (and d!30925 (not c!19546)) b!110263))

(assert (= (and b!110263 c!19547) b!110264))

(assert (= (and b!110263 (not c!19547)) b!110265))

(declare-fun m!124913 () Bool)

(assert (=> b!110264 m!124913))

(assert (=> b!109958 d!30925))

(assert (=> d!30839 d!30831))

(declare-fun d!30927 () Bool)

(assert (=> d!30927 (= (get!1349 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) from!355) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!110055 d!30927))

(declare-fun d!30929 () Bool)

(assert (=> d!30929 (= (validKeyInArray!0 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!110012 d!30929))

(declare-fun b!110266 () Bool)

(declare-fun c!19549 () Bool)

(assert (=> b!110266 (= c!19549 (and (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!71727 () ListLongMap!1591)

(declare-fun e!71732 () ListLongMap!1591)

(assert (=> b!110266 (= e!71727 e!71732)))

(declare-fun bm!11766 () Bool)

(declare-fun call!11769 () ListLongMap!1591)

(declare-fun call!11772 () ListLongMap!1591)

(assert (=> bm!11766 (= call!11769 call!11772)))

(declare-fun b!110267 () Bool)

(declare-fun e!71730 () Bool)

(declare-fun e!71724 () Bool)

(assert (=> b!110267 (= e!71730 e!71724)))

(declare-fun res!54521 () Bool)

(assert (=> b!110267 (=> (not res!54521) (not e!71724))))

(declare-fun lt!56824 () ListLongMap!1591)

(assert (=> b!110267 (= res!54521 (contains!838 lt!56824 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!110267 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))))))

(declare-fun b!110268 () Bool)

(declare-fun e!71725 () Bool)

(declare-fun e!71736 () Bool)

(assert (=> b!110268 (= e!71725 e!71736)))

(declare-fun res!54519 () Bool)

(declare-fun call!11775 () Bool)

(assert (=> b!110268 (= res!54519 call!11775)))

(assert (=> b!110268 (=> (not res!54519) (not e!71736))))

(declare-fun b!110269 () Bool)

(declare-fun e!71734 () ListLongMap!1591)

(assert (=> b!110269 (= e!71734 e!71727)))

(declare-fun c!19553 () Bool)

(assert (=> b!110269 (= c!19553 (and (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!110270 () Bool)

(declare-fun e!71735 () Unit!3403)

(declare-fun Unit!3420 () Unit!3403)

(assert (=> b!110270 (= e!71735 Unit!3420)))

(declare-fun b!110271 () Bool)

(declare-fun e!71731 () Bool)

(declare-fun call!11770 () Bool)

(assert (=> b!110271 (= e!71731 (not call!11770))))

(declare-fun bm!11767 () Bool)

(assert (=> bm!11767 (= call!11772 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun b!110272 () Bool)

(assert (=> b!110272 (= e!71736 (= (apply!100 lt!56824 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2498 newMap!16)))))

(declare-fun b!110273 () Bool)

(declare-fun call!11774 () ListLongMap!1591)

(assert (=> b!110273 (= e!71734 (+!150 call!11774 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16))))))

(declare-fun b!110274 () Bool)

(declare-fun lt!56825 () Unit!3403)

(assert (=> b!110274 (= e!71735 lt!56825)))

(declare-fun lt!56820 () ListLongMap!1591)

(assert (=> b!110274 (= lt!56820 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!56819 () (_ BitVec 64))

(assert (=> b!110274 (= lt!56819 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56822 () (_ BitVec 64))

(assert (=> b!110274 (= lt!56822 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56827 () Unit!3403)

(assert (=> b!110274 (= lt!56827 (addStillContains!76 lt!56820 lt!56819 (zeroValue!2498 newMap!16) lt!56822))))

(assert (=> b!110274 (contains!838 (+!150 lt!56820 (tuple2!2441 lt!56819 (zeroValue!2498 newMap!16))) lt!56822)))

(declare-fun lt!56811 () Unit!3403)

(assert (=> b!110274 (= lt!56811 lt!56827)))

(declare-fun lt!56823 () ListLongMap!1591)

(assert (=> b!110274 (= lt!56823 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!56814 () (_ BitVec 64))

(assert (=> b!110274 (= lt!56814 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56821 () (_ BitVec 64))

(assert (=> b!110274 (= lt!56821 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56829 () Unit!3403)

(assert (=> b!110274 (= lt!56829 (addApplyDifferent!76 lt!56823 lt!56814 (minValue!2498 newMap!16) lt!56821))))

(assert (=> b!110274 (= (apply!100 (+!150 lt!56823 (tuple2!2441 lt!56814 (minValue!2498 newMap!16))) lt!56821) (apply!100 lt!56823 lt!56821))))

(declare-fun lt!56813 () Unit!3403)

(assert (=> b!110274 (= lt!56813 lt!56829)))

(declare-fun lt!56817 () ListLongMap!1591)

(assert (=> b!110274 (= lt!56817 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!56810 () (_ BitVec 64))

(assert (=> b!110274 (= lt!56810 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56828 () (_ BitVec 64))

(assert (=> b!110274 (= lt!56828 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56826 () Unit!3403)

(assert (=> b!110274 (= lt!56826 (addApplyDifferent!76 lt!56817 lt!56810 (zeroValue!2498 newMap!16) lt!56828))))

(assert (=> b!110274 (= (apply!100 (+!150 lt!56817 (tuple2!2441 lt!56810 (zeroValue!2498 newMap!16))) lt!56828) (apply!100 lt!56817 lt!56828))))

(declare-fun lt!56816 () Unit!3403)

(assert (=> b!110274 (= lt!56816 lt!56826)))

(declare-fun lt!56830 () ListLongMap!1591)

(assert (=> b!110274 (= lt!56830 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!56815 () (_ BitVec 64))

(assert (=> b!110274 (= lt!56815 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56818 () (_ BitVec 64))

(assert (=> b!110274 (= lt!56818 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!110274 (= lt!56825 (addApplyDifferent!76 lt!56830 lt!56815 (minValue!2498 newMap!16) lt!56818))))

(assert (=> b!110274 (= (apply!100 (+!150 lt!56830 (tuple2!2441 lt!56815 (minValue!2498 newMap!16))) lt!56818) (apply!100 lt!56830 lt!56818))))

(declare-fun b!110275 () Bool)

(declare-fun res!54523 () Bool)

(declare-fun e!71733 () Bool)

(assert (=> b!110275 (=> (not res!54523) (not e!71733))))

(assert (=> b!110275 (= res!54523 e!71725)))

(declare-fun c!19552 () Bool)

(assert (=> b!110275 (= c!19552 (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!110276 () Bool)

(declare-fun e!71726 () Bool)

(assert (=> b!110276 (= e!71726 (validKeyInArray!0 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!110277 () Bool)

(declare-fun e!71729 () Bool)

(assert (=> b!110277 (= e!71729 (= (apply!100 lt!56824 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2498 newMap!16)))))

(declare-fun bm!11768 () Bool)

(assert (=> bm!11768 (= call!11770 (contains!838 lt!56824 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110278 () Bool)

(assert (=> b!110278 (= e!71731 e!71729)))

(declare-fun res!54520 () Bool)

(assert (=> b!110278 (= res!54520 call!11770)))

(assert (=> b!110278 (=> (not res!54520) (not e!71729))))

(declare-fun bm!11769 () Bool)

(declare-fun call!11771 () ListLongMap!1591)

(declare-fun c!19548 () Bool)

(assert (=> bm!11769 (= call!11774 (+!150 (ite c!19548 call!11772 (ite c!19553 call!11769 call!11771)) (ite (or c!19548 c!19553) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 newMap!16)) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16)))))))

(declare-fun b!110279 () Bool)

(declare-fun call!11773 () ListLongMap!1591)

(assert (=> b!110279 (= e!71727 call!11773)))

(declare-fun d!30931 () Bool)

(assert (=> d!30931 e!71733))

(declare-fun res!54526 () Bool)

(assert (=> d!30931 (=> (not res!54526) (not e!71733))))

(assert (=> d!30931 (= res!54526 (or (bvsge #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))))))))

(declare-fun lt!56831 () ListLongMap!1591)

(assert (=> d!30931 (= lt!56824 lt!56831)))

(declare-fun lt!56812 () Unit!3403)

(assert (=> d!30931 (= lt!56812 e!71735)))

(declare-fun c!19550 () Bool)

(declare-fun e!71728 () Bool)

(assert (=> d!30931 (= c!19550 e!71728)))

(declare-fun res!54522 () Bool)

(assert (=> d!30931 (=> (not res!54522) (not e!71728))))

(assert (=> d!30931 (= res!54522 (bvslt #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))))))

(assert (=> d!30931 (= lt!56831 e!71734)))

(assert (=> d!30931 (= c!19548 (and (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!30931 (validMask!0 (mask!6795 newMap!16))))

(assert (=> d!30931 (= (getCurrentListMap!496 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) lt!56824)))

(declare-fun b!110280 () Bool)

(assert (=> b!110280 (= e!71732 call!11773)))

(declare-fun b!110281 () Bool)

(assert (=> b!110281 (= e!71724 (= (apply!100 lt!56824 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)) (get!1347 (select (arr!2082 (_values!2610 newMap!16)) #b00000000000000000000000000000000) (dynLambda!390 (defaultEntry!2627 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!110281 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2339 (_values!2610 newMap!16))))))

(assert (=> b!110281 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))))))

(declare-fun b!110282 () Bool)

(assert (=> b!110282 (= e!71732 call!11771)))

(declare-fun bm!11770 () Bool)

(assert (=> bm!11770 (= call!11771 call!11769)))

(declare-fun b!110283 () Bool)

(declare-fun res!54527 () Bool)

(assert (=> b!110283 (=> (not res!54527) (not e!71733))))

(assert (=> b!110283 (= res!54527 e!71730)))

(declare-fun res!54524 () Bool)

(assert (=> b!110283 (=> res!54524 e!71730)))

(assert (=> b!110283 (= res!54524 (not e!71726))))

(declare-fun res!54525 () Bool)

(assert (=> b!110283 (=> (not res!54525) (not e!71726))))

(assert (=> b!110283 (= res!54525 (bvslt #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))))))

(declare-fun bm!11771 () Bool)

(assert (=> bm!11771 (= call!11773 call!11774)))

(declare-fun b!110284 () Bool)

(assert (=> b!110284 (= e!71728 (validKeyInArray!0 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!110285 () Bool)

(assert (=> b!110285 (= e!71733 e!71731)))

(declare-fun c!19551 () Bool)

(assert (=> b!110285 (= c!19551 (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!110286 () Bool)

(assert (=> b!110286 (= e!71725 (not call!11775))))

(declare-fun bm!11772 () Bool)

(assert (=> bm!11772 (= call!11775 (contains!838 lt!56824 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!30931 c!19548) b!110273))

(assert (= (and d!30931 (not c!19548)) b!110269))

(assert (= (and b!110269 c!19553) b!110279))

(assert (= (and b!110269 (not c!19553)) b!110266))

(assert (= (and b!110266 c!19549) b!110280))

(assert (= (and b!110266 (not c!19549)) b!110282))

(assert (= (or b!110280 b!110282) bm!11770))

(assert (= (or b!110279 bm!11770) bm!11766))

(assert (= (or b!110279 b!110280) bm!11771))

(assert (= (or b!110273 bm!11766) bm!11767))

(assert (= (or b!110273 bm!11771) bm!11769))

(assert (= (and d!30931 res!54522) b!110284))

(assert (= (and d!30931 c!19550) b!110274))

(assert (= (and d!30931 (not c!19550)) b!110270))

(assert (= (and d!30931 res!54526) b!110283))

(assert (= (and b!110283 res!54525) b!110276))

(assert (= (and b!110283 (not res!54524)) b!110267))

(assert (= (and b!110267 res!54521) b!110281))

(assert (= (and b!110283 res!54527) b!110275))

(assert (= (and b!110275 c!19552) b!110268))

(assert (= (and b!110275 (not c!19552)) b!110286))

(assert (= (and b!110268 res!54519) b!110272))

(assert (= (or b!110268 b!110286) bm!11772))

(assert (= (and b!110275 res!54523) b!110285))

(assert (= (and b!110285 c!19551) b!110278))

(assert (= (and b!110285 (not c!19551)) b!110271))

(assert (= (and b!110278 res!54520) b!110277))

(assert (= (or b!110278 b!110271) bm!11768))

(declare-fun b_lambda!4941 () Bool)

(assert (=> (not b_lambda!4941) (not b!110281)))

(assert (=> b!110281 t!5774))

(declare-fun b_and!6799 () Bool)

(assert (= b_and!6795 (and (=> t!5774 result!3537) b_and!6799)))

(assert (=> b!110281 t!5776))

(declare-fun b_and!6801 () Bool)

(assert (= b_and!6797 (and (=> t!5776 result!3539) b_and!6801)))

(declare-fun m!124915 () Bool)

(assert (=> bm!11768 m!124915))

(declare-fun m!124917 () Bool)

(assert (=> b!110277 m!124917))

(assert (=> b!110276 m!124693))

(assert (=> b!110276 m!124693))

(assert (=> b!110276 m!124695))

(assert (=> b!110267 m!124693))

(assert (=> b!110267 m!124693))

(declare-fun m!124919 () Bool)

(assert (=> b!110267 m!124919))

(declare-fun m!124921 () Bool)

(assert (=> b!110274 m!124921))

(declare-fun m!124923 () Bool)

(assert (=> b!110274 m!124923))

(declare-fun m!124925 () Bool)

(assert (=> b!110274 m!124925))

(assert (=> b!110274 m!124921))

(declare-fun m!124927 () Bool)

(assert (=> b!110274 m!124927))

(declare-fun m!124929 () Bool)

(assert (=> b!110274 m!124929))

(assert (=> b!110274 m!124929))

(declare-fun m!124931 () Bool)

(assert (=> b!110274 m!124931))

(declare-fun m!124933 () Bool)

(assert (=> b!110274 m!124933))

(assert (=> b!110274 m!124693))

(declare-fun m!124935 () Bool)

(assert (=> b!110274 m!124935))

(declare-fun m!124937 () Bool)

(assert (=> b!110274 m!124937))

(declare-fun m!124939 () Bool)

(assert (=> b!110274 m!124939))

(declare-fun m!124941 () Bool)

(assert (=> b!110274 m!124941))

(assert (=> b!110274 m!124937))

(declare-fun m!124943 () Bool)

(assert (=> b!110274 m!124943))

(declare-fun m!124945 () Bool)

(assert (=> b!110274 m!124945))

(assert (=> b!110274 m!124927))

(declare-fun m!124947 () Bool)

(assert (=> b!110274 m!124947))

(declare-fun m!124949 () Bool)

(assert (=> b!110274 m!124949))

(declare-fun m!124951 () Bool)

(assert (=> b!110274 m!124951))

(assert (=> d!30931 m!124669))

(declare-fun m!124953 () Bool)

(assert (=> b!110281 m!124953))

(assert (=> b!110281 m!124733))

(assert (=> b!110281 m!124953))

(assert (=> b!110281 m!124733))

(declare-fun m!124955 () Bool)

(assert (=> b!110281 m!124955))

(assert (=> b!110281 m!124693))

(declare-fun m!124957 () Bool)

(assert (=> b!110281 m!124957))

(assert (=> b!110281 m!124693))

(assert (=> bm!11767 m!124949))

(assert (=> b!110284 m!124693))

(assert (=> b!110284 m!124693))

(assert (=> b!110284 m!124695))

(declare-fun m!124959 () Bool)

(assert (=> bm!11769 m!124959))

(declare-fun m!124961 () Bool)

(assert (=> b!110273 m!124961))

(declare-fun m!124963 () Bool)

(assert (=> bm!11772 m!124963))

(declare-fun m!124965 () Bool)

(assert (=> b!110272 m!124965))

(assert (=> d!30837 d!30931))

(declare-fun b!110295 () Bool)

(declare-fun e!71741 () (_ BitVec 32))

(declare-fun call!11778 () (_ BitVec 32))

(assert (=> b!110295 (= e!71741 (bvadd #b00000000000000000000000000000001 call!11778))))

(declare-fun d!30933 () Bool)

(declare-fun lt!56834 () (_ BitVec 32))

(assert (=> d!30933 (and (bvsge lt!56834 #b00000000000000000000000000000000) (bvsle lt!56834 (bvsub (size!2338 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!71742 () (_ BitVec 32))

(assert (=> d!30933 (= lt!56834 e!71742)))

(declare-fun c!19558 () Bool)

(assert (=> d!30933 (= c!19558 (bvsge #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))))))

(assert (=> d!30933 (and (bvsle #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2338 (_keys!4341 newMap!16)) (size!2338 (_keys!4341 newMap!16))))))

(assert (=> d!30933 (= (arrayCountValidKeys!0 (_keys!4341 newMap!16) #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))) lt!56834)))

(declare-fun b!110296 () Bool)

(assert (=> b!110296 (= e!71741 call!11778)))

(declare-fun bm!11775 () Bool)

(assert (=> bm!11775 (= call!11778 (arrayCountValidKeys!0 (_keys!4341 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2338 (_keys!4341 newMap!16))))))

(declare-fun b!110297 () Bool)

(assert (=> b!110297 (= e!71742 e!71741)))

(declare-fun c!19559 () Bool)

(assert (=> b!110297 (= c!19559 (validKeyInArray!0 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!110298 () Bool)

(assert (=> b!110298 (= e!71742 #b00000000000000000000000000000000)))

(assert (= (and d!30933 c!19558) b!110298))

(assert (= (and d!30933 (not c!19558)) b!110297))

(assert (= (and b!110297 c!19559) b!110295))

(assert (= (and b!110297 (not c!19559)) b!110296))

(assert (= (or b!110295 b!110296) bm!11775))

(declare-fun m!124967 () Bool)

(assert (=> bm!11775 m!124967))

(assert (=> b!110297 m!124693))

(assert (=> b!110297 m!124693))

(assert (=> b!110297 m!124695))

(assert (=> b!110062 d!30933))

(declare-fun b!110299 () Bool)

(declare-fun c!19561 () Bool)

(assert (=> b!110299 (= c!19561 (and (not (= (bvand (ite (and c!19438 c!19444) lt!56572 (extraKeys!2424 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite (and c!19438 c!19444) lt!56572 (extraKeys!2424 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!71746 () ListLongMap!1591)

(declare-fun e!71751 () ListLongMap!1591)

(assert (=> b!110299 (= e!71746 e!71751)))

(declare-fun bm!11776 () Bool)

(declare-fun call!11779 () ListLongMap!1591)

(declare-fun call!11782 () ListLongMap!1591)

(assert (=> bm!11776 (= call!11779 call!11782)))

(declare-fun b!110300 () Bool)

(declare-fun e!71749 () Bool)

(declare-fun e!71743 () Bool)

(assert (=> b!110300 (= e!71749 e!71743)))

(declare-fun res!54530 () Bool)

(assert (=> b!110300 (=> (not res!54530) (not e!71743))))

(declare-fun lt!56849 () ListLongMap!1591)

(assert (=> b!110300 (= res!54530 (contains!838 lt!56849 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!110300 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))))))

(declare-fun b!110301 () Bool)

(declare-fun e!71744 () Bool)

(declare-fun e!71755 () Bool)

(assert (=> b!110301 (= e!71744 e!71755)))

(declare-fun res!54528 () Bool)

(declare-fun call!11785 () Bool)

(assert (=> b!110301 (= res!54528 call!11785)))

(assert (=> b!110301 (=> (not res!54528) (not e!71755))))

(declare-fun b!110302 () Bool)

(declare-fun e!71753 () ListLongMap!1591)

(assert (=> b!110302 (= e!71753 e!71746)))

(declare-fun c!19565 () Bool)

(assert (=> b!110302 (= c!19565 (and (not (= (bvand (ite (and c!19438 c!19444) lt!56572 (extraKeys!2424 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite (and c!19438 c!19444) lt!56572 (extraKeys!2424 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!110303 () Bool)

(declare-fun e!71754 () Unit!3403)

(declare-fun Unit!3421 () Unit!3403)

(assert (=> b!110303 (= e!71754 Unit!3421)))

(declare-fun b!110304 () Bool)

(declare-fun e!71750 () Bool)

(declare-fun call!11780 () Bool)

(assert (=> b!110304 (= e!71750 (not call!11780))))

(declare-fun bm!11777 () Bool)

(assert (=> bm!11777 (= call!11782 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (ite c!19438 (_values!2610 newMap!16) lt!56569) (mask!6795 newMap!16) (ite (and c!19438 c!19444) lt!56572 (extraKeys!2424 newMap!16)) (ite (and c!19438 c!19444) lt!56458 (zeroValue!2498 newMap!16)) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun b!110305 () Bool)

(assert (=> b!110305 (= e!71755 (= (apply!100 lt!56849 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!19438 c!19444) lt!56458 (zeroValue!2498 newMap!16))))))

(declare-fun b!110306 () Bool)

(declare-fun call!11784 () ListLongMap!1591)

(assert (=> b!110306 (= e!71753 (+!150 call!11784 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16))))))

(declare-fun b!110307 () Bool)

(declare-fun lt!56850 () Unit!3403)

(assert (=> b!110307 (= e!71754 lt!56850)))

(declare-fun lt!56845 () ListLongMap!1591)

(assert (=> b!110307 (= lt!56845 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (ite c!19438 (_values!2610 newMap!16) lt!56569) (mask!6795 newMap!16) (ite (and c!19438 c!19444) lt!56572 (extraKeys!2424 newMap!16)) (ite (and c!19438 c!19444) lt!56458 (zeroValue!2498 newMap!16)) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!56844 () (_ BitVec 64))

(assert (=> b!110307 (= lt!56844 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56847 () (_ BitVec 64))

(assert (=> b!110307 (= lt!56847 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56852 () Unit!3403)

(assert (=> b!110307 (= lt!56852 (addStillContains!76 lt!56845 lt!56844 (ite (and c!19438 c!19444) lt!56458 (zeroValue!2498 newMap!16)) lt!56847))))

(assert (=> b!110307 (contains!838 (+!150 lt!56845 (tuple2!2441 lt!56844 (ite (and c!19438 c!19444) lt!56458 (zeroValue!2498 newMap!16)))) lt!56847)))

(declare-fun lt!56836 () Unit!3403)

(assert (=> b!110307 (= lt!56836 lt!56852)))

(declare-fun lt!56848 () ListLongMap!1591)

(assert (=> b!110307 (= lt!56848 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (ite c!19438 (_values!2610 newMap!16) lt!56569) (mask!6795 newMap!16) (ite (and c!19438 c!19444) lt!56572 (extraKeys!2424 newMap!16)) (ite (and c!19438 c!19444) lt!56458 (zeroValue!2498 newMap!16)) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!56839 () (_ BitVec 64))

(assert (=> b!110307 (= lt!56839 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56846 () (_ BitVec 64))

(assert (=> b!110307 (= lt!56846 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56854 () Unit!3403)

(assert (=> b!110307 (= lt!56854 (addApplyDifferent!76 lt!56848 lt!56839 (minValue!2498 newMap!16) lt!56846))))

(assert (=> b!110307 (= (apply!100 (+!150 lt!56848 (tuple2!2441 lt!56839 (minValue!2498 newMap!16))) lt!56846) (apply!100 lt!56848 lt!56846))))

(declare-fun lt!56838 () Unit!3403)

(assert (=> b!110307 (= lt!56838 lt!56854)))

(declare-fun lt!56842 () ListLongMap!1591)

(assert (=> b!110307 (= lt!56842 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (ite c!19438 (_values!2610 newMap!16) lt!56569) (mask!6795 newMap!16) (ite (and c!19438 c!19444) lt!56572 (extraKeys!2424 newMap!16)) (ite (and c!19438 c!19444) lt!56458 (zeroValue!2498 newMap!16)) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!56835 () (_ BitVec 64))

(assert (=> b!110307 (= lt!56835 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56853 () (_ BitVec 64))

(assert (=> b!110307 (= lt!56853 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56851 () Unit!3403)

(assert (=> b!110307 (= lt!56851 (addApplyDifferent!76 lt!56842 lt!56835 (ite (and c!19438 c!19444) lt!56458 (zeroValue!2498 newMap!16)) lt!56853))))

(assert (=> b!110307 (= (apply!100 (+!150 lt!56842 (tuple2!2441 lt!56835 (ite (and c!19438 c!19444) lt!56458 (zeroValue!2498 newMap!16)))) lt!56853) (apply!100 lt!56842 lt!56853))))

(declare-fun lt!56841 () Unit!3403)

(assert (=> b!110307 (= lt!56841 lt!56851)))

(declare-fun lt!56855 () ListLongMap!1591)

(assert (=> b!110307 (= lt!56855 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (ite c!19438 (_values!2610 newMap!16) lt!56569) (mask!6795 newMap!16) (ite (and c!19438 c!19444) lt!56572 (extraKeys!2424 newMap!16)) (ite (and c!19438 c!19444) lt!56458 (zeroValue!2498 newMap!16)) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!56840 () (_ BitVec 64))

(assert (=> b!110307 (= lt!56840 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56843 () (_ BitVec 64))

(assert (=> b!110307 (= lt!56843 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!110307 (= lt!56850 (addApplyDifferent!76 lt!56855 lt!56840 (minValue!2498 newMap!16) lt!56843))))

(assert (=> b!110307 (= (apply!100 (+!150 lt!56855 (tuple2!2441 lt!56840 (minValue!2498 newMap!16))) lt!56843) (apply!100 lt!56855 lt!56843))))

(declare-fun b!110308 () Bool)

(declare-fun res!54532 () Bool)

(declare-fun e!71752 () Bool)

(assert (=> b!110308 (=> (not res!54532) (not e!71752))))

(assert (=> b!110308 (= res!54532 e!71744)))

(declare-fun c!19564 () Bool)

(assert (=> b!110308 (= c!19564 (not (= (bvand (ite (and c!19438 c!19444) lt!56572 (extraKeys!2424 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!110309 () Bool)

(declare-fun e!71745 () Bool)

(assert (=> b!110309 (= e!71745 (validKeyInArray!0 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!110310 () Bool)

(declare-fun e!71748 () Bool)

(assert (=> b!110310 (= e!71748 (= (apply!100 lt!56849 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2498 newMap!16)))))

(declare-fun bm!11778 () Bool)

(assert (=> bm!11778 (= call!11780 (contains!838 lt!56849 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110311 () Bool)

(assert (=> b!110311 (= e!71750 e!71748)))

(declare-fun res!54529 () Bool)

(assert (=> b!110311 (= res!54529 call!11780)))

(assert (=> b!110311 (=> (not res!54529) (not e!71748))))

(declare-fun c!19560 () Bool)

(declare-fun bm!11779 () Bool)

(declare-fun call!11781 () ListLongMap!1591)

(assert (=> bm!11779 (= call!11784 (+!150 (ite c!19560 call!11782 (ite c!19565 call!11779 call!11781)) (ite (or c!19560 c!19565) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!19438 c!19444) lt!56458 (zeroValue!2498 newMap!16))) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16)))))))

(declare-fun b!110312 () Bool)

(declare-fun call!11783 () ListLongMap!1591)

(assert (=> b!110312 (= e!71746 call!11783)))

(declare-fun d!30935 () Bool)

(assert (=> d!30935 e!71752))

(declare-fun res!54535 () Bool)

(assert (=> d!30935 (=> (not res!54535) (not e!71752))))

(assert (=> d!30935 (= res!54535 (or (bvsge #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))))))))

(declare-fun lt!56856 () ListLongMap!1591)

(assert (=> d!30935 (= lt!56849 lt!56856)))

(declare-fun lt!56837 () Unit!3403)

(assert (=> d!30935 (= lt!56837 e!71754)))

(declare-fun c!19562 () Bool)

(declare-fun e!71747 () Bool)

(assert (=> d!30935 (= c!19562 e!71747)))

(declare-fun res!54531 () Bool)

(assert (=> d!30935 (=> (not res!54531) (not e!71747))))

(assert (=> d!30935 (= res!54531 (bvslt #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))))))

(assert (=> d!30935 (= lt!56856 e!71753)))

(assert (=> d!30935 (= c!19560 (and (not (= (bvand (ite (and c!19438 c!19444) lt!56572 (extraKeys!2424 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite (and c!19438 c!19444) lt!56572 (extraKeys!2424 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!30935 (validMask!0 (mask!6795 newMap!16))))

(assert (=> d!30935 (= (getCurrentListMap!496 (_keys!4341 newMap!16) (ite c!19438 (_values!2610 newMap!16) lt!56569) (mask!6795 newMap!16) (ite (and c!19438 c!19444) lt!56572 (extraKeys!2424 newMap!16)) (ite (and c!19438 c!19444) lt!56458 (zeroValue!2498 newMap!16)) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) lt!56849)))

(declare-fun b!110313 () Bool)

(assert (=> b!110313 (= e!71751 call!11783)))

(declare-fun b!110314 () Bool)

(assert (=> b!110314 (= e!71743 (= (apply!100 lt!56849 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)) (get!1347 (select (arr!2082 (ite c!19438 (_values!2610 newMap!16) lt!56569)) #b00000000000000000000000000000000) (dynLambda!390 (defaultEntry!2627 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!110314 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2339 (ite c!19438 (_values!2610 newMap!16) lt!56569))))))

(assert (=> b!110314 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))))))

(declare-fun b!110315 () Bool)

(assert (=> b!110315 (= e!71751 call!11781)))

(declare-fun bm!11780 () Bool)

(assert (=> bm!11780 (= call!11781 call!11779)))

(declare-fun b!110316 () Bool)

(declare-fun res!54536 () Bool)

(assert (=> b!110316 (=> (not res!54536) (not e!71752))))

(assert (=> b!110316 (= res!54536 e!71749)))

(declare-fun res!54533 () Bool)

(assert (=> b!110316 (=> res!54533 e!71749)))

(assert (=> b!110316 (= res!54533 (not e!71745))))

(declare-fun res!54534 () Bool)

(assert (=> b!110316 (=> (not res!54534) (not e!71745))))

(assert (=> b!110316 (= res!54534 (bvslt #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))))))

(declare-fun bm!11781 () Bool)

(assert (=> bm!11781 (= call!11783 call!11784)))

(declare-fun b!110317 () Bool)

(assert (=> b!110317 (= e!71747 (validKeyInArray!0 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!110318 () Bool)

(assert (=> b!110318 (= e!71752 e!71750)))

(declare-fun c!19563 () Bool)

(assert (=> b!110318 (= c!19563 (not (= (bvand (ite (and c!19438 c!19444) lt!56572 (extraKeys!2424 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!110319 () Bool)

(assert (=> b!110319 (= e!71744 (not call!11785))))

(declare-fun bm!11782 () Bool)

(assert (=> bm!11782 (= call!11785 (contains!838 lt!56849 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!30935 c!19560) b!110306))

(assert (= (and d!30935 (not c!19560)) b!110302))

(assert (= (and b!110302 c!19565) b!110312))

(assert (= (and b!110302 (not c!19565)) b!110299))

(assert (= (and b!110299 c!19561) b!110313))

(assert (= (and b!110299 (not c!19561)) b!110315))

(assert (= (or b!110313 b!110315) bm!11780))

(assert (= (or b!110312 bm!11780) bm!11776))

(assert (= (or b!110312 b!110313) bm!11781))

(assert (= (or b!110306 bm!11776) bm!11777))

(assert (= (or b!110306 bm!11781) bm!11779))

(assert (= (and d!30935 res!54531) b!110317))

(assert (= (and d!30935 c!19562) b!110307))

(assert (= (and d!30935 (not c!19562)) b!110303))

(assert (= (and d!30935 res!54535) b!110316))

(assert (= (and b!110316 res!54534) b!110309))

(assert (= (and b!110316 (not res!54533)) b!110300))

(assert (= (and b!110300 res!54530) b!110314))

(assert (= (and b!110316 res!54536) b!110308))

(assert (= (and b!110308 c!19564) b!110301))

(assert (= (and b!110308 (not c!19564)) b!110319))

(assert (= (and b!110301 res!54528) b!110305))

(assert (= (or b!110301 b!110319) bm!11782))

(assert (= (and b!110308 res!54532) b!110318))

(assert (= (and b!110318 c!19563) b!110311))

(assert (= (and b!110318 (not c!19563)) b!110304))

(assert (= (and b!110311 res!54529) b!110310))

(assert (= (or b!110311 b!110304) bm!11778))

(declare-fun b_lambda!4943 () Bool)

(assert (=> (not b_lambda!4943) (not b!110314)))

(assert (=> b!110314 t!5774))

(declare-fun b_and!6803 () Bool)

(assert (= b_and!6799 (and (=> t!5774 result!3537) b_and!6803)))

(assert (=> b!110314 t!5776))

(declare-fun b_and!6805 () Bool)

(assert (= b_and!6801 (and (=> t!5776 result!3539) b_and!6805)))

(declare-fun m!124969 () Bool)

(assert (=> bm!11778 m!124969))

(declare-fun m!124971 () Bool)

(assert (=> b!110310 m!124971))

(assert (=> b!110309 m!124693))

(assert (=> b!110309 m!124693))

(assert (=> b!110309 m!124695))

(assert (=> b!110300 m!124693))

(assert (=> b!110300 m!124693))

(declare-fun m!124973 () Bool)

(assert (=> b!110300 m!124973))

(declare-fun m!124975 () Bool)

(assert (=> b!110307 m!124975))

(declare-fun m!124977 () Bool)

(assert (=> b!110307 m!124977))

(declare-fun m!124979 () Bool)

(assert (=> b!110307 m!124979))

(assert (=> b!110307 m!124975))

(declare-fun m!124981 () Bool)

(assert (=> b!110307 m!124981))

(declare-fun m!124983 () Bool)

(assert (=> b!110307 m!124983))

(assert (=> b!110307 m!124983))

(declare-fun m!124985 () Bool)

(assert (=> b!110307 m!124985))

(declare-fun m!124987 () Bool)

(assert (=> b!110307 m!124987))

(assert (=> b!110307 m!124693))

(declare-fun m!124989 () Bool)

(assert (=> b!110307 m!124989))

(declare-fun m!124991 () Bool)

(assert (=> b!110307 m!124991))

(declare-fun m!124993 () Bool)

(assert (=> b!110307 m!124993))

(declare-fun m!124995 () Bool)

(assert (=> b!110307 m!124995))

(assert (=> b!110307 m!124991))

(declare-fun m!124997 () Bool)

(assert (=> b!110307 m!124997))

(declare-fun m!124999 () Bool)

(assert (=> b!110307 m!124999))

(assert (=> b!110307 m!124981))

(declare-fun m!125001 () Bool)

(assert (=> b!110307 m!125001))

(declare-fun m!125003 () Bool)

(assert (=> b!110307 m!125003))

(declare-fun m!125005 () Bool)

(assert (=> b!110307 m!125005))

(assert (=> d!30935 m!124669))

(declare-fun m!125007 () Bool)

(assert (=> b!110314 m!125007))

(assert (=> b!110314 m!124733))

(assert (=> b!110314 m!125007))

(assert (=> b!110314 m!124733))

(declare-fun m!125009 () Bool)

(assert (=> b!110314 m!125009))

(assert (=> b!110314 m!124693))

(declare-fun m!125011 () Bool)

(assert (=> b!110314 m!125011))

(assert (=> b!110314 m!124693))

(assert (=> bm!11777 m!125003))

(assert (=> b!110317 m!124693))

(assert (=> b!110317 m!124693))

(assert (=> b!110317 m!124695))

(declare-fun m!125013 () Bool)

(assert (=> bm!11779 m!125013))

(declare-fun m!125015 () Bool)

(assert (=> b!110306 m!125015))

(declare-fun m!125017 () Bool)

(assert (=> bm!11782 m!125017))

(declare-fun m!125019 () Bool)

(assert (=> b!110305 m!125019))

(assert (=> bm!11712 d!30935))

(declare-fun d!30937 () Bool)

(declare-fun lt!56857 () Bool)

(assert (=> d!30937 (= lt!56857 (select (content!113 (toList!811 lt!56631)) lt!56454))))

(declare-fun e!71757 () Bool)

(assert (=> d!30937 (= lt!56857 e!71757)))

(declare-fun res!54537 () Bool)

(assert (=> d!30937 (=> (not res!54537) (not e!71757))))

(assert (=> d!30937 (= res!54537 ((_ is Cons!1626) (toList!811 lt!56631)))))

(assert (=> d!30937 (= (contains!839 (toList!811 lt!56631) lt!56454) lt!56857)))

(declare-fun b!110320 () Bool)

(declare-fun e!71756 () Bool)

(assert (=> b!110320 (= e!71757 e!71756)))

(declare-fun res!54538 () Bool)

(assert (=> b!110320 (=> res!54538 e!71756)))

(assert (=> b!110320 (= res!54538 (= (h!2225 (toList!811 lt!56631)) lt!56454))))

(declare-fun b!110321 () Bool)

(assert (=> b!110321 (= e!71756 (contains!839 (t!5767 (toList!811 lt!56631)) lt!56454))))

(assert (= (and d!30937 res!54537) b!110320))

(assert (= (and b!110320 (not res!54538)) b!110321))

(declare-fun m!125021 () Bool)

(assert (=> d!30937 m!125021))

(declare-fun m!125023 () Bool)

(assert (=> d!30937 m!125023))

(declare-fun m!125025 () Bool)

(assert (=> b!110321 m!125025))

(assert (=> b!109955 d!30937))

(declare-fun d!30939 () Bool)

(declare-fun e!71758 () Bool)

(assert (=> d!30939 e!71758))

(declare-fun res!54539 () Bool)

(assert (=> d!30939 (=> res!54539 e!71758)))

(declare-fun lt!56858 () Bool)

(assert (=> d!30939 (= res!54539 (not lt!56858))))

(declare-fun lt!56859 () Bool)

(assert (=> d!30939 (= lt!56858 lt!56859)))

(declare-fun lt!56861 () Unit!3403)

(declare-fun e!71759 () Unit!3403)

(assert (=> d!30939 (= lt!56861 e!71759)))

(declare-fun c!19566 () Bool)

(assert (=> d!30939 (= c!19566 lt!56859)))

(assert (=> d!30939 (= lt!56859 (containsKey!162 (toList!811 lt!56639) (_1!1231 lt!56457)))))

(assert (=> d!30939 (= (contains!838 lt!56639 (_1!1231 lt!56457)) lt!56858)))

(declare-fun b!110322 () Bool)

(declare-fun lt!56860 () Unit!3403)

(assert (=> b!110322 (= e!71759 lt!56860)))

(assert (=> b!110322 (= lt!56860 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 lt!56639) (_1!1231 lt!56457)))))

(assert (=> b!110322 (isDefined!111 (getValueByKey!158 (toList!811 lt!56639) (_1!1231 lt!56457)))))

(declare-fun b!110323 () Bool)

(declare-fun Unit!3422 () Unit!3403)

(assert (=> b!110323 (= e!71759 Unit!3422)))

(declare-fun b!110324 () Bool)

(assert (=> b!110324 (= e!71758 (isDefined!111 (getValueByKey!158 (toList!811 lt!56639) (_1!1231 lt!56457))))))

(assert (= (and d!30939 c!19566) b!110322))

(assert (= (and d!30939 (not c!19566)) b!110323))

(assert (= (and d!30939 (not res!54539)) b!110324))

(declare-fun m!125027 () Bool)

(assert (=> d!30939 m!125027))

(declare-fun m!125029 () Bool)

(assert (=> b!110322 m!125029))

(assert (=> b!110322 m!124569))

(assert (=> b!110322 m!124569))

(declare-fun m!125031 () Bool)

(assert (=> b!110322 m!125031))

(assert (=> b!110324 m!124569))

(assert (=> b!110324 m!124569))

(assert (=> b!110324 m!125031))

(assert (=> d!30835 d!30939))

(declare-fun b!110325 () Bool)

(declare-fun e!71760 () Option!164)

(assert (=> b!110325 (= e!71760 (Some!163 (_2!1231 (h!2225 lt!56638))))))

(declare-fun b!110327 () Bool)

(declare-fun e!71761 () Option!164)

(assert (=> b!110327 (= e!71761 (getValueByKey!158 (t!5767 lt!56638) (_1!1231 lt!56457)))))

(declare-fun d!30941 () Bool)

(declare-fun c!19567 () Bool)

(assert (=> d!30941 (= c!19567 (and ((_ is Cons!1626) lt!56638) (= (_1!1231 (h!2225 lt!56638)) (_1!1231 lt!56457))))))

(assert (=> d!30941 (= (getValueByKey!158 lt!56638 (_1!1231 lt!56457)) e!71760)))

(declare-fun b!110326 () Bool)

(assert (=> b!110326 (= e!71760 e!71761)))

(declare-fun c!19568 () Bool)

(assert (=> b!110326 (= c!19568 (and ((_ is Cons!1626) lt!56638) (not (= (_1!1231 (h!2225 lt!56638)) (_1!1231 lt!56457)))))))

(declare-fun b!110328 () Bool)

(assert (=> b!110328 (= e!71761 None!162)))

(assert (= (and d!30941 c!19567) b!110325))

(assert (= (and d!30941 (not c!19567)) b!110326))

(assert (= (and b!110326 c!19568) b!110327))

(assert (= (and b!110326 (not c!19568)) b!110328))

(declare-fun m!125033 () Bool)

(assert (=> b!110327 m!125033))

(assert (=> d!30835 d!30941))

(declare-fun d!30943 () Bool)

(assert (=> d!30943 (= (getValueByKey!158 lt!56638 (_1!1231 lt!56457)) (Some!163 (_2!1231 lt!56457)))))

(declare-fun lt!56862 () Unit!3403)

(assert (=> d!30943 (= lt!56862 (choose!687 lt!56638 (_1!1231 lt!56457) (_2!1231 lt!56457)))))

(declare-fun e!71762 () Bool)

(assert (=> d!30943 e!71762))

(declare-fun res!54540 () Bool)

(assert (=> d!30943 (=> (not res!54540) (not e!71762))))

(assert (=> d!30943 (= res!54540 (isStrictlySorted!311 lt!56638))))

(assert (=> d!30943 (= (lemmaContainsTupThenGetReturnValue!74 lt!56638 (_1!1231 lt!56457) (_2!1231 lt!56457)) lt!56862)))

(declare-fun b!110329 () Bool)

(declare-fun res!54541 () Bool)

(assert (=> b!110329 (=> (not res!54541) (not e!71762))))

(assert (=> b!110329 (= res!54541 (containsKey!162 lt!56638 (_1!1231 lt!56457)))))

(declare-fun b!110330 () Bool)

(assert (=> b!110330 (= e!71762 (contains!839 lt!56638 (tuple2!2441 (_1!1231 lt!56457) (_2!1231 lt!56457))))))

(assert (= (and d!30943 res!54540) b!110329))

(assert (= (and b!110329 res!54541) b!110330))

(assert (=> d!30943 m!124563))

(declare-fun m!125035 () Bool)

(assert (=> d!30943 m!125035))

(declare-fun m!125037 () Bool)

(assert (=> d!30943 m!125037))

(declare-fun m!125039 () Bool)

(assert (=> b!110329 m!125039))

(declare-fun m!125041 () Bool)

(assert (=> b!110330 m!125041))

(assert (=> d!30835 d!30943))

(declare-fun b!110331 () Bool)

(declare-fun e!71767 () List!1630)

(declare-fun e!71766 () List!1630)

(assert (=> b!110331 (= e!71767 e!71766)))

(declare-fun c!19571 () Bool)

(assert (=> b!110331 (= c!19571 (and ((_ is Cons!1626) (toList!811 lt!56462)) (= (_1!1231 (h!2225 (toList!811 lt!56462))) (_1!1231 lt!56457))))))

(declare-fun bm!11783 () Bool)

(declare-fun call!11786 () List!1630)

(declare-fun call!11787 () List!1630)

(assert (=> bm!11783 (= call!11786 call!11787)))

(declare-fun b!110332 () Bool)

(assert (=> b!110332 (= e!71767 call!11787)))

(declare-fun bm!11784 () Bool)

(declare-fun call!11788 () List!1630)

(assert (=> bm!11784 (= call!11788 call!11786)))

(declare-fun c!19569 () Bool)

(declare-fun bm!11785 () Bool)

(declare-fun e!71765 () List!1630)

(assert (=> bm!11785 (= call!11787 ($colon$colon!83 e!71765 (ite c!19569 (h!2225 (toList!811 lt!56462)) (tuple2!2441 (_1!1231 lt!56457) (_2!1231 lt!56457)))))))

(declare-fun c!19572 () Bool)

(assert (=> bm!11785 (= c!19572 c!19569)))

(declare-fun b!110333 () Bool)

(assert (=> b!110333 (= e!71766 call!11786)))

(declare-fun b!110335 () Bool)

(declare-fun e!71764 () Bool)

(declare-fun lt!56863 () List!1630)

(assert (=> b!110335 (= e!71764 (contains!839 lt!56863 (tuple2!2441 (_1!1231 lt!56457) (_2!1231 lt!56457))))))

(declare-fun b!110336 () Bool)

(declare-fun e!71763 () List!1630)

(assert (=> b!110336 (= e!71763 call!11788)))

(declare-fun b!110337 () Bool)

(declare-fun res!54543 () Bool)

(assert (=> b!110337 (=> (not res!54543) (not e!71764))))

(assert (=> b!110337 (= res!54543 (containsKey!162 lt!56863 (_1!1231 lt!56457)))))

(declare-fun b!110338 () Bool)

(declare-fun c!19570 () Bool)

(assert (=> b!110338 (= c!19570 (and ((_ is Cons!1626) (toList!811 lt!56462)) (bvsgt (_1!1231 (h!2225 (toList!811 lt!56462))) (_1!1231 lt!56457))))))

(assert (=> b!110338 (= e!71766 e!71763)))

(declare-fun b!110339 () Bool)

(assert (=> b!110339 (= e!71763 call!11788)))

(declare-fun b!110340 () Bool)

(assert (=> b!110340 (= e!71765 (ite c!19571 (t!5767 (toList!811 lt!56462)) (ite c!19570 (Cons!1626 (h!2225 (toList!811 lt!56462)) (t!5767 (toList!811 lt!56462))) Nil!1627)))))

(declare-fun b!110334 () Bool)

(assert (=> b!110334 (= e!71765 (insertStrictlySorted!77 (t!5767 (toList!811 lt!56462)) (_1!1231 lt!56457) (_2!1231 lt!56457)))))

(declare-fun d!30945 () Bool)

(assert (=> d!30945 e!71764))

(declare-fun res!54542 () Bool)

(assert (=> d!30945 (=> (not res!54542) (not e!71764))))

(assert (=> d!30945 (= res!54542 (isStrictlySorted!311 lt!56863))))

(assert (=> d!30945 (= lt!56863 e!71767)))

(assert (=> d!30945 (= c!19569 (and ((_ is Cons!1626) (toList!811 lt!56462)) (bvslt (_1!1231 (h!2225 (toList!811 lt!56462))) (_1!1231 lt!56457))))))

(assert (=> d!30945 (isStrictlySorted!311 (toList!811 lt!56462))))

(assert (=> d!30945 (= (insertStrictlySorted!77 (toList!811 lt!56462) (_1!1231 lt!56457) (_2!1231 lt!56457)) lt!56863)))

(assert (= (and d!30945 c!19569) b!110332))

(assert (= (and d!30945 (not c!19569)) b!110331))

(assert (= (and b!110331 c!19571) b!110333))

(assert (= (and b!110331 (not c!19571)) b!110338))

(assert (= (and b!110338 c!19570) b!110336))

(assert (= (and b!110338 (not c!19570)) b!110339))

(assert (= (or b!110336 b!110339) bm!11784))

(assert (= (or b!110333 bm!11784) bm!11783))

(assert (= (or b!110332 bm!11783) bm!11785))

(assert (= (and bm!11785 c!19572) b!110334))

(assert (= (and bm!11785 (not c!19572)) b!110340))

(assert (= (and d!30945 res!54542) b!110337))

(assert (= (and b!110337 res!54543) b!110335))

(declare-fun m!125043 () Bool)

(assert (=> b!110337 m!125043))

(declare-fun m!125045 () Bool)

(assert (=> b!110334 m!125045))

(declare-fun m!125047 () Bool)

(assert (=> b!110335 m!125047))

(declare-fun m!125049 () Bool)

(assert (=> d!30945 m!125049))

(declare-fun m!125051 () Bool)

(assert (=> d!30945 m!125051))

(declare-fun m!125053 () Bool)

(assert (=> bm!11785 m!125053))

(assert (=> d!30835 d!30945))

(declare-fun d!30947 () Bool)

(declare-fun e!71768 () Bool)

(assert (=> d!30947 e!71768))

(declare-fun res!54544 () Bool)

(assert (=> d!30947 (=> (not res!54544) (not e!71768))))

(declare-fun lt!56866 () ListLongMap!1591)

(assert (=> d!30947 (= res!54544 (contains!838 lt!56866 (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))

(declare-fun lt!56865 () List!1630)

(assert (=> d!30947 (= lt!56866 (ListLongMap!1592 lt!56865))))

(declare-fun lt!56867 () Unit!3403)

(declare-fun lt!56864 () Unit!3403)

(assert (=> d!30947 (= lt!56867 lt!56864)))

(assert (=> d!30947 (= (getValueByKey!158 lt!56865 (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))) (Some!163 (_2!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))

(assert (=> d!30947 (= lt!56864 (lemmaContainsTupThenGetReturnValue!74 lt!56865 (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)) (_2!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))

(assert (=> d!30947 (= lt!56865 (insertStrictlySorted!77 (toList!811 call!11705) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)) (_2!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))

(assert (=> d!30947 (= (+!150 call!11705 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)) lt!56866)))

(declare-fun b!110341 () Bool)

(declare-fun res!54545 () Bool)

(assert (=> b!110341 (=> (not res!54545) (not e!71768))))

(assert (=> b!110341 (= res!54545 (= (getValueByKey!158 (toList!811 lt!56866) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))) (Some!163 (_2!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))))))

(declare-fun b!110342 () Bool)

(assert (=> b!110342 (= e!71768 (contains!839 (toList!811 lt!56866) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))))

(assert (= (and d!30947 res!54544) b!110341))

(assert (= (and b!110341 res!54545) b!110342))

(declare-fun m!125055 () Bool)

(assert (=> d!30947 m!125055))

(declare-fun m!125057 () Bool)

(assert (=> d!30947 m!125057))

(declare-fun m!125059 () Bool)

(assert (=> d!30947 m!125059))

(declare-fun m!125061 () Bool)

(assert (=> d!30947 m!125061))

(declare-fun m!125063 () Bool)

(assert (=> b!110341 m!125063))

(declare-fun m!125065 () Bool)

(assert (=> b!110342 m!125065))

(assert (=> b!109877 d!30947))

(declare-fun d!30949 () Bool)

(assert (=> d!30949 (= (apply!100 (+!150 lt!56692 (tuple2!2441 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))) lt!56703) (get!1350 (getValueByKey!158 (toList!811 (+!150 lt!56692 (tuple2!2441 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))) lt!56703)))))

(declare-fun bs!4531 () Bool)

(assert (= bs!4531 d!30949))

(declare-fun m!125067 () Bool)

(assert (=> bs!4531 m!125067))

(assert (=> bs!4531 m!125067))

(declare-fun m!125069 () Bool)

(assert (=> bs!4531 m!125069))

(assert (=> b!110010 d!30949))

(assert (=> b!110010 d!30825))

(declare-fun d!30951 () Bool)

(assert (=> d!30951 (= (apply!100 (+!150 lt!56692 (tuple2!2441 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))) lt!56703) (apply!100 lt!56692 lt!56703))))

(declare-fun lt!56870 () Unit!3403)

(declare-fun choose!691 (ListLongMap!1591 (_ BitVec 64) V!3243 (_ BitVec 64)) Unit!3403)

(assert (=> d!30951 (= lt!56870 (choose!691 lt!56692 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))) lt!56703))))

(declare-fun e!71771 () Bool)

(assert (=> d!30951 e!71771))

(declare-fun res!54548 () Bool)

(assert (=> d!30951 (=> (not res!54548) (not e!71771))))

(assert (=> d!30951 (= res!54548 (contains!838 lt!56692 lt!56703))))

(assert (=> d!30951 (= (addApplyDifferent!76 lt!56692 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))) lt!56703) lt!56870)))

(declare-fun b!110346 () Bool)

(assert (=> b!110346 (= e!71771 (not (= lt!56703 lt!56685)))))

(assert (= (and d!30951 res!54548) b!110346))

(declare-fun m!125071 () Bool)

(assert (=> d!30951 m!125071))

(declare-fun m!125073 () Bool)

(assert (=> d!30951 m!125073))

(assert (=> d!30951 m!124579))

(assert (=> d!30951 m!124579))

(assert (=> d!30951 m!124581))

(assert (=> d!30951 m!124597))

(assert (=> b!110010 d!30951))

(declare-fun d!30953 () Bool)

(assert (=> d!30953 (= (apply!100 (+!150 lt!56705 (tuple2!2441 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992))))) lt!56693) (apply!100 lt!56705 lt!56693))))

(declare-fun lt!56871 () Unit!3403)

(assert (=> d!30953 (= lt!56871 (choose!691 lt!56705 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992))) lt!56693))))

(declare-fun e!71772 () Bool)

(assert (=> d!30953 e!71772))

(declare-fun res!54549 () Bool)

(assert (=> d!30953 (=> (not res!54549) (not e!71772))))

(assert (=> d!30953 (= res!54549 (contains!838 lt!56705 lt!56693))))

(assert (=> d!30953 (= (addApplyDifferent!76 lt!56705 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992))) lt!56693) lt!56871)))

(declare-fun b!110347 () Bool)

(assert (=> b!110347 (= e!71772 (not (= lt!56693 lt!56690)))))

(assert (= (and d!30953 res!54549) b!110347))

(declare-fun m!125075 () Bool)

(assert (=> d!30953 m!125075))

(declare-fun m!125077 () Bool)

(assert (=> d!30953 m!125077))

(assert (=> d!30953 m!124587))

(assert (=> d!30953 m!124587))

(assert (=> d!30953 m!124589))

(assert (=> d!30953 m!124593))

(assert (=> b!110010 d!30953))

(declare-fun d!30955 () Bool)

(assert (=> d!30955 (= (apply!100 (+!150 lt!56698 (tuple2!2441 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992))))) lt!56696) (apply!100 lt!56698 lt!56696))))

(declare-fun lt!56872 () Unit!3403)

(assert (=> d!30955 (= lt!56872 (choose!691 lt!56698 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992))) lt!56696))))

(declare-fun e!71773 () Bool)

(assert (=> d!30955 e!71773))

(declare-fun res!54550 () Bool)

(assert (=> d!30955 (=> (not res!54550) (not e!71773))))

(assert (=> d!30955 (= res!54550 (contains!838 lt!56698 lt!56696))))

(assert (=> d!30955 (= (addApplyDifferent!76 lt!56698 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992))) lt!56696) lt!56872)))

(declare-fun b!110348 () Bool)

(assert (=> b!110348 (= e!71773 (not (= lt!56696 lt!56689)))))

(assert (= (and d!30955 res!54550) b!110348))

(declare-fun m!125079 () Bool)

(assert (=> d!30955 m!125079))

(declare-fun m!125081 () Bool)

(assert (=> d!30955 m!125081))

(assert (=> d!30955 m!124585))

(assert (=> d!30955 m!124585))

(assert (=> d!30955 m!124605))

(assert (=> d!30955 m!124607))

(assert (=> b!110010 d!30955))

(declare-fun d!30957 () Bool)

(assert (=> d!30957 (= (apply!100 (+!150 lt!56705 (tuple2!2441 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992))))) lt!56693) (get!1350 (getValueByKey!158 (toList!811 (+!150 lt!56705 (tuple2!2441 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))) lt!56693)))))

(declare-fun bs!4532 () Bool)

(assert (= bs!4532 d!30957))

(declare-fun m!125083 () Bool)

(assert (=> bs!4532 m!125083))

(assert (=> bs!4532 m!125083))

(declare-fun m!125085 () Bool)

(assert (=> bs!4532 m!125085))

(assert (=> b!110010 d!30957))

(declare-fun d!30959 () Bool)

(assert (=> d!30959 (= (apply!100 lt!56692 lt!56703) (get!1350 (getValueByKey!158 (toList!811 lt!56692) lt!56703)))))

(declare-fun bs!4533 () Bool)

(assert (= bs!4533 d!30959))

(declare-fun m!125087 () Bool)

(assert (=> bs!4533 m!125087))

(assert (=> bs!4533 m!125087))

(declare-fun m!125089 () Bool)

(assert (=> bs!4533 m!125089))

(assert (=> b!110010 d!30959))

(declare-fun d!30961 () Bool)

(assert (=> d!30961 (= (apply!100 (+!150 lt!56698 (tuple2!2441 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992))))) lt!56696) (get!1350 (getValueByKey!158 (toList!811 (+!150 lt!56698 (tuple2!2441 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))) lt!56696)))))

(declare-fun bs!4534 () Bool)

(assert (= bs!4534 d!30961))

(declare-fun m!125091 () Bool)

(assert (=> bs!4534 m!125091))

(assert (=> bs!4534 m!125091))

(declare-fun m!125093 () Bool)

(assert (=> bs!4534 m!125093))

(assert (=> b!110010 d!30961))

(declare-fun d!30963 () Bool)

(declare-fun e!71774 () Bool)

(assert (=> d!30963 e!71774))

(declare-fun res!54551 () Bool)

(assert (=> d!30963 (=> (not res!54551) (not e!71774))))

(declare-fun lt!56875 () ListLongMap!1591)

(assert (=> d!30963 (= res!54551 (contains!838 lt!56875 (_1!1231 (tuple2!2441 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun lt!56874 () List!1630)

(assert (=> d!30963 (= lt!56875 (ListLongMap!1592 lt!56874))))

(declare-fun lt!56876 () Unit!3403)

(declare-fun lt!56873 () Unit!3403)

(assert (=> d!30963 (= lt!56876 lt!56873)))

(assert (=> d!30963 (= (getValueByKey!158 lt!56874 (_1!1231 (tuple2!2441 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))) (Some!163 (_2!1231 (tuple2!2441 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> d!30963 (= lt!56873 (lemmaContainsTupThenGetReturnValue!74 lt!56874 (_1!1231 (tuple2!2441 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992))))) (_2!1231 (tuple2!2441 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> d!30963 (= lt!56874 (insertStrictlySorted!77 (toList!811 lt!56698) (_1!1231 (tuple2!2441 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992))))) (_2!1231 (tuple2!2441 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> d!30963 (= (+!150 lt!56698 (tuple2!2441 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992))))) lt!56875)))

(declare-fun b!110349 () Bool)

(declare-fun res!54552 () Bool)

(assert (=> b!110349 (=> (not res!54552) (not e!71774))))

(assert (=> b!110349 (= res!54552 (= (getValueByKey!158 (toList!811 lt!56875) (_1!1231 (tuple2!2441 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))) (Some!163 (_2!1231 (tuple2!2441 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(declare-fun b!110350 () Bool)

(assert (=> b!110350 (= e!71774 (contains!839 (toList!811 lt!56875) (tuple2!2441 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))))

(assert (= (and d!30963 res!54551) b!110349))

(assert (= (and b!110349 res!54552) b!110350))

(declare-fun m!125095 () Bool)

(assert (=> d!30963 m!125095))

(declare-fun m!125097 () Bool)

(assert (=> d!30963 m!125097))

(declare-fun m!125099 () Bool)

(assert (=> d!30963 m!125099))

(declare-fun m!125101 () Bool)

(assert (=> d!30963 m!125101))

(declare-fun m!125103 () Bool)

(assert (=> b!110349 m!125103))

(declare-fun m!125105 () Bool)

(assert (=> b!110350 m!125105))

(assert (=> b!110010 d!30963))

(declare-fun d!30965 () Bool)

(declare-fun e!71775 () Bool)

(assert (=> d!30965 e!71775))

(declare-fun res!54553 () Bool)

(assert (=> d!30965 (=> (not res!54553) (not e!71775))))

(declare-fun lt!56879 () ListLongMap!1591)

(assert (=> d!30965 (= res!54553 (contains!838 lt!56879 (_1!1231 (tuple2!2441 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun lt!56878 () List!1630)

(assert (=> d!30965 (= lt!56879 (ListLongMap!1592 lt!56878))))

(declare-fun lt!56880 () Unit!3403)

(declare-fun lt!56877 () Unit!3403)

(assert (=> d!30965 (= lt!56880 lt!56877)))

(assert (=> d!30965 (= (getValueByKey!158 lt!56878 (_1!1231 (tuple2!2441 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))) (Some!163 (_2!1231 (tuple2!2441 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> d!30965 (= lt!56877 (lemmaContainsTupThenGetReturnValue!74 lt!56878 (_1!1231 (tuple2!2441 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992))))) (_2!1231 (tuple2!2441 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> d!30965 (= lt!56878 (insertStrictlySorted!77 (toList!811 lt!56705) (_1!1231 (tuple2!2441 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992))))) (_2!1231 (tuple2!2441 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> d!30965 (= (+!150 lt!56705 (tuple2!2441 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992))))) lt!56879)))

(declare-fun b!110351 () Bool)

(declare-fun res!54554 () Bool)

(assert (=> b!110351 (=> (not res!54554) (not e!71775))))

(assert (=> b!110351 (= res!54554 (= (getValueByKey!158 (toList!811 lt!56879) (_1!1231 (tuple2!2441 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))) (Some!163 (_2!1231 (tuple2!2441 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(declare-fun b!110352 () Bool)

(assert (=> b!110352 (= e!71775 (contains!839 (toList!811 lt!56879) (tuple2!2441 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))))

(assert (= (and d!30965 res!54553) b!110351))

(assert (= (and b!110351 res!54554) b!110352))

(declare-fun m!125107 () Bool)

(assert (=> d!30965 m!125107))

(declare-fun m!125109 () Bool)

(assert (=> d!30965 m!125109))

(declare-fun m!125111 () Bool)

(assert (=> d!30965 m!125111))

(declare-fun m!125113 () Bool)

(assert (=> d!30965 m!125113))

(declare-fun m!125115 () Bool)

(assert (=> b!110351 m!125115))

(declare-fun m!125117 () Bool)

(assert (=> b!110352 m!125117))

(assert (=> b!110010 d!30965))

(declare-fun d!30967 () Bool)

(assert (=> d!30967 (contains!838 (+!150 lt!56695 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))) lt!56697)))

(declare-fun lt!56883 () Unit!3403)

(declare-fun choose!692 (ListLongMap!1591 (_ BitVec 64) V!3243 (_ BitVec 64)) Unit!3403)

(assert (=> d!30967 (= lt!56883 (choose!692 lt!56695 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))) lt!56697))))

(assert (=> d!30967 (contains!838 lt!56695 lt!56697)))

(assert (=> d!30967 (= (addStillContains!76 lt!56695 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))) lt!56697) lt!56883)))

(declare-fun bs!4535 () Bool)

(assert (= bs!4535 d!30967))

(assert (=> bs!4535 m!124595))

(assert (=> bs!4535 m!124595))

(assert (=> bs!4535 m!124601))

(declare-fun m!125119 () Bool)

(assert (=> bs!4535 m!125119))

(declare-fun m!125121 () Bool)

(assert (=> bs!4535 m!125121))

(assert (=> b!110010 d!30967))

(declare-fun d!30969 () Bool)

(assert (=> d!30969 (= (apply!100 lt!56698 lt!56696) (get!1350 (getValueByKey!158 (toList!811 lt!56698) lt!56696)))))

(declare-fun bs!4536 () Bool)

(assert (= bs!4536 d!30969))

(declare-fun m!125123 () Bool)

(assert (=> bs!4536 m!125123))

(assert (=> bs!4536 m!125123))

(declare-fun m!125125 () Bool)

(assert (=> bs!4536 m!125125))

(assert (=> b!110010 d!30969))

(declare-fun d!30971 () Bool)

(assert (=> d!30971 (= (apply!100 lt!56705 lt!56693) (get!1350 (getValueByKey!158 (toList!811 lt!56705) lt!56693)))))

(declare-fun bs!4537 () Bool)

(assert (= bs!4537 d!30971))

(declare-fun m!125127 () Bool)

(assert (=> bs!4537 m!125127))

(assert (=> bs!4537 m!125127))

(declare-fun m!125129 () Bool)

(assert (=> bs!4537 m!125129))

(assert (=> b!110010 d!30971))

(declare-fun d!30973 () Bool)

(declare-fun e!71776 () Bool)

(assert (=> d!30973 e!71776))

(declare-fun res!54555 () Bool)

(assert (=> d!30973 (=> (not res!54555) (not e!71776))))

(declare-fun lt!56886 () ListLongMap!1591)

(assert (=> d!30973 (= res!54555 (contains!838 lt!56886 (_1!1231 (tuple2!2441 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun lt!56885 () List!1630)

(assert (=> d!30973 (= lt!56886 (ListLongMap!1592 lt!56885))))

(declare-fun lt!56887 () Unit!3403)

(declare-fun lt!56884 () Unit!3403)

(assert (=> d!30973 (= lt!56887 lt!56884)))

(assert (=> d!30973 (= (getValueByKey!158 lt!56885 (_1!1231 (tuple2!2441 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))) (Some!163 (_2!1231 (tuple2!2441 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> d!30973 (= lt!56884 (lemmaContainsTupThenGetReturnValue!74 lt!56885 (_1!1231 (tuple2!2441 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))) (_2!1231 (tuple2!2441 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> d!30973 (= lt!56885 (insertStrictlySorted!77 (toList!811 lt!56692) (_1!1231 (tuple2!2441 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))) (_2!1231 (tuple2!2441 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> d!30973 (= (+!150 lt!56692 (tuple2!2441 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))) lt!56886)))

(declare-fun b!110354 () Bool)

(declare-fun res!54556 () Bool)

(assert (=> b!110354 (=> (not res!54556) (not e!71776))))

(assert (=> b!110354 (= res!54556 (= (getValueByKey!158 (toList!811 lt!56886) (_1!1231 (tuple2!2441 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))) (Some!163 (_2!1231 (tuple2!2441 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(declare-fun b!110355 () Bool)

(assert (=> b!110355 (= e!71776 (contains!839 (toList!811 lt!56886) (tuple2!2441 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))))

(assert (= (and d!30973 res!54555) b!110354))

(assert (= (and b!110354 res!54556) b!110355))

(declare-fun m!125131 () Bool)

(assert (=> d!30973 m!125131))

(declare-fun m!125133 () Bool)

(assert (=> d!30973 m!125133))

(declare-fun m!125135 () Bool)

(assert (=> d!30973 m!125135))

(declare-fun m!125137 () Bool)

(assert (=> d!30973 m!125137))

(declare-fun m!125139 () Bool)

(assert (=> b!110354 m!125139))

(declare-fun m!125141 () Bool)

(assert (=> b!110355 m!125141))

(assert (=> b!110010 d!30973))

(declare-fun d!30975 () Bool)

(declare-fun e!71777 () Bool)

(assert (=> d!30975 e!71777))

(declare-fun res!54557 () Bool)

(assert (=> d!30975 (=> res!54557 e!71777)))

(declare-fun lt!56888 () Bool)

(assert (=> d!30975 (= res!54557 (not lt!56888))))

(declare-fun lt!56889 () Bool)

(assert (=> d!30975 (= lt!56888 lt!56889)))

(declare-fun lt!56891 () Unit!3403)

(declare-fun e!71778 () Unit!3403)

(assert (=> d!30975 (= lt!56891 e!71778)))

(declare-fun c!19573 () Bool)

(assert (=> d!30975 (= c!19573 lt!56889)))

(assert (=> d!30975 (= lt!56889 (containsKey!162 (toList!811 (+!150 lt!56695 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))) lt!56697))))

(assert (=> d!30975 (= (contains!838 (+!150 lt!56695 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))) lt!56697) lt!56888)))

(declare-fun b!110356 () Bool)

(declare-fun lt!56890 () Unit!3403)

(assert (=> b!110356 (= e!71778 lt!56890)))

(assert (=> b!110356 (= lt!56890 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 (+!150 lt!56695 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))) lt!56697))))

(assert (=> b!110356 (isDefined!111 (getValueByKey!158 (toList!811 (+!150 lt!56695 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))) lt!56697))))

(declare-fun b!110357 () Bool)

(declare-fun Unit!3423 () Unit!3403)

(assert (=> b!110357 (= e!71778 Unit!3423)))

(declare-fun b!110358 () Bool)

(assert (=> b!110358 (= e!71777 (isDefined!111 (getValueByKey!158 (toList!811 (+!150 lt!56695 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))) lt!56697)))))

(assert (= (and d!30975 c!19573) b!110356))

(assert (= (and d!30975 (not c!19573)) b!110357))

(assert (= (and d!30975 (not res!54557)) b!110358))

(declare-fun m!125143 () Bool)

(assert (=> d!30975 m!125143))

(declare-fun m!125145 () Bool)

(assert (=> b!110356 m!125145))

(declare-fun m!125147 () Bool)

(assert (=> b!110356 m!125147))

(assert (=> b!110356 m!125147))

(declare-fun m!125149 () Bool)

(assert (=> b!110356 m!125149))

(assert (=> b!110358 m!125147))

(assert (=> b!110358 m!125147))

(assert (=> b!110358 m!125149))

(assert (=> b!110010 d!30975))

(declare-fun d!30977 () Bool)

(declare-fun e!71779 () Bool)

(assert (=> d!30977 e!71779))

(declare-fun res!54558 () Bool)

(assert (=> d!30977 (=> (not res!54558) (not e!71779))))

(declare-fun lt!56894 () ListLongMap!1591)

(assert (=> d!30977 (= res!54558 (contains!838 lt!56894 (_1!1231 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun lt!56893 () List!1630)

(assert (=> d!30977 (= lt!56894 (ListLongMap!1592 lt!56893))))

(declare-fun lt!56895 () Unit!3403)

(declare-fun lt!56892 () Unit!3403)

(assert (=> d!30977 (= lt!56895 lt!56892)))

(assert (=> d!30977 (= (getValueByKey!158 lt!56893 (_1!1231 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))) (Some!163 (_2!1231 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> d!30977 (= lt!56892 (lemmaContainsTupThenGetReturnValue!74 lt!56893 (_1!1231 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))) (_2!1231 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> d!30977 (= lt!56893 (insertStrictlySorted!77 (toList!811 lt!56695) (_1!1231 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))) (_2!1231 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> d!30977 (= (+!150 lt!56695 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))) lt!56894)))

(declare-fun b!110359 () Bool)

(declare-fun res!54559 () Bool)

(assert (=> b!110359 (=> (not res!54559) (not e!71779))))

(assert (=> b!110359 (= res!54559 (= (getValueByKey!158 (toList!811 lt!56894) (_1!1231 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))) (Some!163 (_2!1231 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(declare-fun b!110360 () Bool)

(assert (=> b!110360 (= e!71779 (contains!839 (toList!811 lt!56894) (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))))

(assert (= (and d!30977 res!54558) b!110359))

(assert (= (and b!110359 res!54559) b!110360))

(declare-fun m!125151 () Bool)

(assert (=> d!30977 m!125151))

(declare-fun m!125153 () Bool)

(assert (=> d!30977 m!125153))

(declare-fun m!125155 () Bool)

(assert (=> d!30977 m!125155))

(declare-fun m!125157 () Bool)

(assert (=> d!30977 m!125157))

(declare-fun m!125159 () Bool)

(assert (=> b!110359 m!125159))

(declare-fun m!125161 () Bool)

(assert (=> b!110360 m!125161))

(assert (=> b!110010 d!30977))

(assert (=> b!109941 d!30929))

(assert (=> bm!11689 d!30837))

(declare-fun d!30979 () Bool)

(declare-fun e!71780 () Bool)

(assert (=> d!30979 e!71780))

(declare-fun res!54560 () Bool)

(assert (=> d!30979 (=> res!54560 e!71780)))

(declare-fun lt!56896 () Bool)

(assert (=> d!30979 (= res!54560 (not lt!56896))))

(declare-fun lt!56897 () Bool)

(assert (=> d!30979 (= lt!56896 lt!56897)))

(declare-fun lt!56899 () Unit!3403)

(declare-fun e!71781 () Unit!3403)

(assert (=> d!30979 (= lt!56899 e!71781)))

(declare-fun c!19574 () Bool)

(assert (=> d!30979 (= c!19574 lt!56897)))

(assert (=> d!30979 (= lt!56897 (containsKey!162 (toList!811 lt!56699) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!30979 (= (contains!838 lt!56699 #b1000000000000000000000000000000000000000000000000000000000000000) lt!56896)))

(declare-fun b!110361 () Bool)

(declare-fun lt!56898 () Unit!3403)

(assert (=> b!110361 (= e!71781 lt!56898)))

(assert (=> b!110361 (= lt!56898 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 lt!56699) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!110361 (isDefined!111 (getValueByKey!158 (toList!811 lt!56699) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110362 () Bool)

(declare-fun Unit!3424 () Unit!3403)

(assert (=> b!110362 (= e!71781 Unit!3424)))

(declare-fun b!110363 () Bool)

(assert (=> b!110363 (= e!71780 (isDefined!111 (getValueByKey!158 (toList!811 lt!56699) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30979 c!19574) b!110361))

(assert (= (and d!30979 (not c!19574)) b!110362))

(assert (= (and d!30979 (not res!54560)) b!110363))

(declare-fun m!125163 () Bool)

(assert (=> d!30979 m!125163))

(declare-fun m!125165 () Bool)

(assert (=> b!110361 m!125165))

(declare-fun m!125167 () Bool)

(assert (=> b!110361 m!125167))

(assert (=> b!110361 m!125167))

(declare-fun m!125169 () Bool)

(assert (=> b!110361 m!125169))

(assert (=> b!110363 m!125167))

(assert (=> b!110363 m!125167))

(assert (=> b!110363 m!125169))

(assert (=> bm!11732 d!30979))

(declare-fun d!30981 () Bool)

(declare-fun e!71782 () Bool)

(assert (=> d!30981 e!71782))

(declare-fun res!54561 () Bool)

(assert (=> d!30981 (=> res!54561 e!71782)))

(declare-fun lt!56900 () Bool)

(assert (=> d!30981 (= res!54561 (not lt!56900))))

(declare-fun lt!56901 () Bool)

(assert (=> d!30981 (= lt!56900 lt!56901)))

(declare-fun lt!56903 () Unit!3403)

(declare-fun e!71783 () Unit!3403)

(assert (=> d!30981 (= lt!56903 e!71783)))

(declare-fun c!19575 () Bool)

(assert (=> d!30981 (= c!19575 lt!56901)))

(assert (=> d!30981 (= lt!56901 (containsKey!162 (toList!811 call!11706) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(assert (=> d!30981 (= (contains!838 call!11706 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) lt!56900)))

(declare-fun b!110364 () Bool)

(declare-fun lt!56902 () Unit!3403)

(assert (=> b!110364 (= e!71783 lt!56902)))

(assert (=> b!110364 (= lt!56902 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 call!11706) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(assert (=> b!110364 (isDefined!111 (getValueByKey!158 (toList!811 call!11706) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(declare-fun b!110365 () Bool)

(declare-fun Unit!3425 () Unit!3403)

(assert (=> b!110365 (= e!71783 Unit!3425)))

(declare-fun b!110366 () Bool)

(assert (=> b!110366 (= e!71782 (isDefined!111 (getValueByKey!158 (toList!811 call!11706) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355))))))

(assert (= (and d!30981 c!19575) b!110364))

(assert (= (and d!30981 (not c!19575)) b!110365))

(assert (= (and d!30981 (not res!54561)) b!110366))

(assert (=> d!30981 m!124315))

(declare-fun m!125171 () Bool)

(assert (=> d!30981 m!125171))

(assert (=> b!110364 m!124315))

(declare-fun m!125173 () Bool)

(assert (=> b!110364 m!125173))

(assert (=> b!110364 m!124315))

(declare-fun m!125175 () Bool)

(assert (=> b!110364 m!125175))

(assert (=> b!110364 m!125175))

(declare-fun m!125177 () Bool)

(assert (=> b!110364 m!125177))

(assert (=> b!110366 m!124315))

(assert (=> b!110366 m!125175))

(assert (=> b!110366 m!125175))

(assert (=> b!110366 m!125177))

(assert (=> b!109896 d!30981))

(declare-fun b!110367 () Bool)

(declare-fun e!71787 () Bool)

(declare-fun e!71786 () Bool)

(assert (=> b!110367 (= e!71787 e!71786)))

(declare-fun res!54562 () Bool)

(assert (=> b!110367 (=> (not res!54562) (not e!71786))))

(declare-fun e!71785 () Bool)

(assert (=> b!110367 (= res!54562 (not e!71785))))

(declare-fun res!54563 () Bool)

(assert (=> b!110367 (=> (not res!54563) (not e!71785))))

(assert (=> b!110367 (= res!54563 (validKeyInArray!0 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!110368 () Bool)

(declare-fun e!71784 () Bool)

(declare-fun call!11789 () Bool)

(assert (=> b!110368 (= e!71784 call!11789)))

(declare-fun b!110369 () Bool)

(assert (=> b!110369 (= e!71786 e!71784)))

(declare-fun c!19576 () Bool)

(assert (=> b!110369 (= c!19576 (validKeyInArray!0 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!11786 () Bool)

(assert (=> bm!11786 (= call!11789 (arrayNoDuplicates!0 (_keys!4341 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!19576 (Cons!1627 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000) Nil!1628) Nil!1628)))))

(declare-fun b!110370 () Bool)

(assert (=> b!110370 (= e!71784 call!11789)))

(declare-fun b!110371 () Bool)

(assert (=> b!110371 (= e!71785 (contains!840 Nil!1628 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!30983 () Bool)

(declare-fun res!54564 () Bool)

(assert (=> d!30983 (=> res!54564 e!71787)))

(assert (=> d!30983 (= res!54564 (bvsge #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))))))

(assert (=> d!30983 (= (arrayNoDuplicates!0 (_keys!4341 newMap!16) #b00000000000000000000000000000000 Nil!1628) e!71787)))

(assert (= (and d!30983 (not res!54564)) b!110367))

(assert (= (and b!110367 res!54563) b!110371))

(assert (= (and b!110367 res!54562) b!110369))

(assert (= (and b!110369 c!19576) b!110368))

(assert (= (and b!110369 (not c!19576)) b!110370))

(assert (= (or b!110368 b!110370) bm!11786))

(assert (=> b!110367 m!124693))

(assert (=> b!110367 m!124693))

(assert (=> b!110367 m!124695))

(assert (=> b!110369 m!124693))

(assert (=> b!110369 m!124693))

(assert (=> b!110369 m!124695))

(assert (=> bm!11786 m!124693))

(declare-fun m!125179 () Bool)

(assert (=> bm!11786 m!125179))

(assert (=> b!110371 m!124693))

(assert (=> b!110371 m!124693))

(declare-fun m!125181 () Bool)

(assert (=> b!110371 m!125181))

(assert (=> b!110064 d!30983))

(declare-fun d!30985 () Bool)

(declare-fun e!71788 () Bool)

(assert (=> d!30985 e!71788))

(declare-fun res!54565 () Bool)

(assert (=> d!30985 (=> res!54565 e!71788)))

(declare-fun lt!56904 () Bool)

(assert (=> d!30985 (= res!54565 (not lt!56904))))

(declare-fun lt!56905 () Bool)

(assert (=> d!30985 (= lt!56904 lt!56905)))

(declare-fun lt!56907 () Unit!3403)

(declare-fun e!71789 () Unit!3403)

(assert (=> d!30985 (= lt!56907 e!71789)))

(declare-fun c!19577 () Bool)

(assert (=> d!30985 (= c!19577 lt!56905)))

(assert (=> d!30985 (= lt!56905 (containsKey!162 (toList!811 lt!56612) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!30985 (= (contains!838 lt!56612 #b1000000000000000000000000000000000000000000000000000000000000000) lt!56904)))

(declare-fun b!110372 () Bool)

(declare-fun lt!56906 () Unit!3403)

(assert (=> b!110372 (= e!71789 lt!56906)))

(assert (=> b!110372 (= lt!56906 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 lt!56612) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!110372 (isDefined!111 (getValueByKey!158 (toList!811 lt!56612) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110373 () Bool)

(declare-fun Unit!3426 () Unit!3403)

(assert (=> b!110373 (= e!71789 Unit!3426)))

(declare-fun b!110374 () Bool)

(assert (=> b!110374 (= e!71788 (isDefined!111 (getValueByKey!158 (toList!811 lt!56612) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30985 c!19577) b!110372))

(assert (= (and d!30985 (not c!19577)) b!110373))

(assert (= (and d!30985 (not res!54565)) b!110374))

(declare-fun m!125183 () Bool)

(assert (=> d!30985 m!125183))

(declare-fun m!125185 () Bool)

(assert (=> b!110372 m!125185))

(declare-fun m!125187 () Bool)

(assert (=> b!110372 m!125187))

(assert (=> b!110372 m!125187))

(declare-fun m!125189 () Bool)

(assert (=> b!110372 m!125189))

(assert (=> b!110374 m!125187))

(assert (=> b!110374 m!125187))

(assert (=> b!110374 m!125189))

(assert (=> b!109939 d!30985))

(assert (=> bm!11731 d!30825))

(assert (=> b!109906 d!30931))

(declare-fun d!30987 () Bool)

(assert (=> d!30987 (= (map!1299 (_2!1230 lt!56590)) (getCurrentListMap!496 (_keys!4341 (_2!1230 lt!56590)) (_values!2610 (_2!1230 lt!56590)) (mask!6795 (_2!1230 lt!56590)) (extraKeys!2424 (_2!1230 lt!56590)) (zeroValue!2498 (_2!1230 lt!56590)) (minValue!2498 (_2!1230 lt!56590)) #b00000000000000000000000000000000 (defaultEntry!2627 (_2!1230 lt!56590))))))

(declare-fun bs!4538 () Bool)

(assert (= bs!4538 d!30987))

(declare-fun m!125191 () Bool)

(assert (=> bs!4538 m!125191))

(assert (=> bm!11697 d!30987))

(declare-fun d!30989 () Bool)

(declare-fun lt!56910 () Bool)

(declare-fun content!114 (List!1631) (InoxSet (_ BitVec 64)))

(assert (=> d!30989 (= lt!56910 (select (content!114 Nil!1628) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(declare-fun e!71795 () Bool)

(assert (=> d!30989 (= lt!56910 e!71795)))

(declare-fun res!54570 () Bool)

(assert (=> d!30989 (=> (not res!54570) (not e!71795))))

(assert (=> d!30989 (= res!54570 ((_ is Cons!1627) Nil!1628))))

(assert (=> d!30989 (= (contains!840 Nil!1628 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) lt!56910)))

(declare-fun b!110379 () Bool)

(declare-fun e!71794 () Bool)

(assert (=> b!110379 (= e!71795 e!71794)))

(declare-fun res!54571 () Bool)

(assert (=> b!110379 (=> res!54571 e!71794)))

(assert (=> b!110379 (= res!54571 (= (h!2226 Nil!1628) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(declare-fun b!110380 () Bool)

(assert (=> b!110380 (= e!71794 (contains!840 (t!5768 Nil!1628) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(assert (= (and d!30989 res!54570) b!110379))

(assert (= (and b!110379 (not res!54571)) b!110380))

(declare-fun m!125193 () Bool)

(assert (=> d!30989 m!125193))

(assert (=> d!30989 m!124315))

(declare-fun m!125195 () Bool)

(assert (=> d!30989 m!125195))

(assert (=> b!110380 m!124315))

(declare-fun m!125197 () Bool)

(assert (=> b!110380 m!125197))

(assert (=> b!110049 d!30989))

(declare-fun d!30991 () Bool)

(declare-fun e!71796 () Bool)

(assert (=> d!30991 e!71796))

(declare-fun res!54572 () Bool)

(assert (=> d!30991 (=> res!54572 e!71796)))

(declare-fun lt!56911 () Bool)

(assert (=> d!30991 (= res!54572 (not lt!56911))))

(declare-fun lt!56912 () Bool)

(assert (=> d!30991 (= lt!56911 lt!56912)))

(declare-fun lt!56914 () Unit!3403)

(declare-fun e!71797 () Unit!3403)

(assert (=> d!30991 (= lt!56914 e!71797)))

(declare-fun c!19578 () Bool)

(assert (=> d!30991 (= c!19578 lt!56912)))

(assert (=> d!30991 (= lt!56912 (containsKey!162 (toList!811 lt!56612) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!30991 (= (contains!838 lt!56612 #b0000000000000000000000000000000000000000000000000000000000000000) lt!56911)))

(declare-fun b!110381 () Bool)

(declare-fun lt!56913 () Unit!3403)

(assert (=> b!110381 (= e!71797 lt!56913)))

(assert (=> b!110381 (= lt!56913 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 lt!56612) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!110381 (isDefined!111 (getValueByKey!158 (toList!811 lt!56612) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110382 () Bool)

(declare-fun Unit!3427 () Unit!3403)

(assert (=> b!110382 (= e!71797 Unit!3427)))

(declare-fun b!110383 () Bool)

(assert (=> b!110383 (= e!71796 (isDefined!111 (getValueByKey!158 (toList!811 lt!56612) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30991 c!19578) b!110381))

(assert (= (and d!30991 (not c!19578)) b!110382))

(assert (= (and d!30991 (not res!54572)) b!110383))

(declare-fun m!125199 () Bool)

(assert (=> d!30991 m!125199))

(declare-fun m!125201 () Bool)

(assert (=> b!110381 m!125201))

(declare-fun m!125203 () Bool)

(assert (=> b!110381 m!125203))

(assert (=> b!110381 m!125203))

(declare-fun m!125205 () Bool)

(assert (=> b!110381 m!125205))

(assert (=> b!110383 m!125203))

(assert (=> b!110383 m!125203))

(assert (=> b!110383 m!125205))

(assert (=> d!30825 d!30991))

(assert (=> d!30825 d!30831))

(declare-fun d!30993 () Bool)

(assert (=> d!30993 (= (inRange!0 (ite c!19445 (ite c!19447 (index!3195 lt!56587) (ite c!19437 (index!3194 lt!56584) (index!3197 lt!56584))) (ite c!19448 (index!3195 lt!56574) (ite c!19440 (index!3194 lt!56578) (index!3197 lt!56578)))) (mask!6795 newMap!16)) (and (bvsge (ite c!19445 (ite c!19447 (index!3195 lt!56587) (ite c!19437 (index!3194 lt!56584) (index!3197 lt!56584))) (ite c!19448 (index!3195 lt!56574) (ite c!19440 (index!3194 lt!56578) (index!3197 lt!56578)))) #b00000000000000000000000000000000) (bvslt (ite c!19445 (ite c!19447 (index!3195 lt!56587) (ite c!19437 (index!3194 lt!56584) (index!3197 lt!56584))) (ite c!19448 (index!3195 lt!56574) (ite c!19440 (index!3194 lt!56578) (index!3197 lt!56578)))) (bvadd (mask!6795 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!11700 d!30993))

(declare-fun d!30995 () Bool)

(declare-fun e!71798 () Bool)

(assert (=> d!30995 e!71798))

(declare-fun res!54573 () Bool)

(assert (=> d!30995 (=> (not res!54573) (not e!71798))))

(declare-fun lt!56917 () ListLongMap!1591)

(assert (=> d!30995 (= res!54573 (contains!838 lt!56917 (_1!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun lt!56916 () List!1630)

(assert (=> d!30995 (= lt!56917 (ListLongMap!1592 lt!56916))))

(declare-fun lt!56918 () Unit!3403)

(declare-fun lt!56915 () Unit!3403)

(assert (=> d!30995 (= lt!56918 lt!56915)))

(assert (=> d!30995 (= (getValueByKey!158 lt!56916 (_1!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))) (Some!163 (_2!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> d!30995 (= lt!56915 (lemmaContainsTupThenGetReturnValue!74 lt!56916 (_1!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992))))) (_2!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> d!30995 (= lt!56916 (insertStrictlySorted!77 (toList!811 call!11738) (_1!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992))))) (_2!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> d!30995 (= (+!150 call!11738 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992))))) lt!56917)))

(declare-fun b!110384 () Bool)

(declare-fun res!54574 () Bool)

(assert (=> b!110384 (=> (not res!54574) (not e!71798))))

(assert (=> b!110384 (= res!54574 (= (getValueByKey!158 (toList!811 lt!56917) (_1!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))) (Some!163 (_2!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(declare-fun b!110385 () Bool)

(assert (=> b!110385 (= e!71798 (contains!839 (toList!811 lt!56917) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))))

(assert (= (and d!30995 res!54573) b!110384))

(assert (= (and b!110384 res!54574) b!110385))

(declare-fun m!125207 () Bool)

(assert (=> d!30995 m!125207))

(declare-fun m!125209 () Bool)

(assert (=> d!30995 m!125209))

(declare-fun m!125211 () Bool)

(assert (=> d!30995 m!125211))

(declare-fun m!125213 () Bool)

(assert (=> d!30995 m!125213))

(declare-fun m!125215 () Bool)

(assert (=> b!110384 m!125215))

(declare-fun m!125217 () Bool)

(assert (=> b!110385 m!125217))

(assert (=> b!110009 d!30995))

(declare-fun d!30997 () Bool)

(declare-fun e!71801 () Bool)

(assert (=> d!30997 e!71801))

(declare-fun res!54579 () Bool)

(assert (=> d!30997 (=> (not res!54579) (not e!71801))))

(declare-fun lt!56923 () SeekEntryResult!261)

(assert (=> d!30997 (= res!54579 ((_ is Found!261) lt!56923))))

(assert (=> d!30997 (= lt!56923 (seekEntryOrOpen!0 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (_keys!4341 newMap!16) (mask!6795 newMap!16)))))

(declare-fun lt!56924 () Unit!3403)

(declare-fun choose!693 (array!4389 array!4391 (_ BitVec 32) (_ BitVec 32) V!3243 V!3243 (_ BitVec 64) Int) Unit!3403)

(assert (=> d!30997 (= lt!56924 (choose!693 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (defaultEntry!2627 newMap!16)))))

(assert (=> d!30997 (validMask!0 (mask!6795 newMap!16))))

(assert (=> d!30997 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!49 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (defaultEntry!2627 newMap!16)) lt!56924)))

(declare-fun b!110390 () Bool)

(declare-fun res!54580 () Bool)

(assert (=> b!110390 (=> (not res!54580) (not e!71801))))

(assert (=> b!110390 (= res!54580 (inRange!0 (index!3195 lt!56923) (mask!6795 newMap!16)))))

(declare-fun b!110391 () Bool)

(assert (=> b!110391 (= e!71801 (= (select (arr!2081 (_keys!4341 newMap!16)) (index!3195 lt!56923)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(assert (=> b!110391 (and (bvsge (index!3195 lt!56923) #b00000000000000000000000000000000) (bvslt (index!3195 lt!56923) (size!2338 (_keys!4341 newMap!16))))))

(assert (= (and d!30997 res!54579) b!110390))

(assert (= (and b!110390 res!54580) b!110391))

(assert (=> d!30997 m!124315))

(assert (=> d!30997 m!124453))

(assert (=> d!30997 m!124315))

(declare-fun m!125219 () Bool)

(assert (=> d!30997 m!125219))

(assert (=> d!30997 m!124669))

(declare-fun m!125221 () Bool)

(assert (=> b!110390 m!125221))

(declare-fun m!125223 () Bool)

(assert (=> b!110391 m!125223))

(assert (=> bm!11706 d!30997))

(declare-fun b!110392 () Bool)

(declare-fun e!71802 () Option!164)

(assert (=> b!110392 (= e!71802 (Some!163 (_2!1231 (h!2225 (toList!811 lt!56627)))))))

(declare-fun b!110394 () Bool)

(declare-fun e!71803 () Option!164)

(assert (=> b!110394 (= e!71803 (getValueByKey!158 (t!5767 (toList!811 lt!56627)) (_1!1231 lt!56457)))))

(declare-fun d!30999 () Bool)

(declare-fun c!19579 () Bool)

(assert (=> d!30999 (= c!19579 (and ((_ is Cons!1626) (toList!811 lt!56627)) (= (_1!1231 (h!2225 (toList!811 lt!56627))) (_1!1231 lt!56457))))))

(assert (=> d!30999 (= (getValueByKey!158 (toList!811 lt!56627) (_1!1231 lt!56457)) e!71802)))

(declare-fun b!110393 () Bool)

(assert (=> b!110393 (= e!71802 e!71803)))

(declare-fun c!19580 () Bool)

(assert (=> b!110393 (= c!19580 (and ((_ is Cons!1626) (toList!811 lt!56627)) (not (= (_1!1231 (h!2225 (toList!811 lt!56627))) (_1!1231 lt!56457)))))))

(declare-fun b!110395 () Bool)

(assert (=> b!110395 (= e!71803 None!162)))

(assert (= (and d!30999 c!19579) b!110392))

(assert (= (and d!30999 (not c!19579)) b!110393))

(assert (= (and b!110393 c!19580) b!110394))

(assert (= (and b!110393 (not c!19580)) b!110395))

(declare-fun m!125225 () Bool)

(assert (=> b!110394 m!125225))

(assert (=> b!109952 d!30999))

(declare-fun b!110396 () Bool)

(declare-fun e!71807 () Bool)

(declare-fun e!71806 () Bool)

(assert (=> b!110396 (= e!71807 e!71806)))

(declare-fun res!54581 () Bool)

(assert (=> b!110396 (=> (not res!54581) (not e!71806))))

(declare-fun e!71805 () Bool)

(assert (=> b!110396 (= res!54581 (not e!71805))))

(declare-fun res!54582 () Bool)

(assert (=> b!110396 (=> (not res!54582) (not e!71805))))

(assert (=> b!110396 (= res!54582 (validKeyInArray!0 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!110397 () Bool)

(declare-fun e!71804 () Bool)

(declare-fun call!11790 () Bool)

(assert (=> b!110397 (= e!71804 call!11790)))

(declare-fun b!110398 () Bool)

(assert (=> b!110398 (= e!71806 e!71804)))

(declare-fun c!19581 () Bool)

(assert (=> b!110398 (= c!19581 (validKeyInArray!0 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun bm!11787 () Bool)

(assert (=> bm!11787 (= call!11790 (arrayNoDuplicates!0 (_keys!4341 (v!2930 (underlying!370 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!19581 (Cons!1627 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!19484 (Cons!1627 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) Nil!1628) Nil!1628)) (ite c!19484 (Cons!1627 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) Nil!1628) Nil!1628))))))

(declare-fun b!110399 () Bool)

(assert (=> b!110399 (= e!71804 call!11790)))

(declare-fun b!110400 () Bool)

(assert (=> b!110400 (= e!71805 (contains!840 (ite c!19484 (Cons!1627 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) Nil!1628) Nil!1628) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun d!31001 () Bool)

(declare-fun res!54583 () Bool)

(assert (=> d!31001 (=> res!54583 e!71807)))

(assert (=> d!31001 (= res!54583 (bvsge (bvadd from!355 #b00000000000000000000000000000001) (size!2338 (_keys!4341 (v!2930 (underlying!370 thiss!992))))))))

(assert (=> d!31001 (= (arrayNoDuplicates!0 (_keys!4341 (v!2930 (underlying!370 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!19484 (Cons!1627 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) Nil!1628) Nil!1628)) e!71807)))

(assert (= (and d!31001 (not res!54583)) b!110396))

(assert (= (and b!110396 res!54582) b!110400))

(assert (= (and b!110396 res!54581) b!110398))

(assert (= (and b!110398 c!19581) b!110397))

(assert (= (and b!110398 (not c!19581)) b!110399))

(assert (= (or b!110397 b!110399) bm!11787))

(declare-fun m!125227 () Bool)

(assert (=> b!110396 m!125227))

(assert (=> b!110396 m!125227))

(declare-fun m!125229 () Bool)

(assert (=> b!110396 m!125229))

(assert (=> b!110398 m!125227))

(assert (=> b!110398 m!125227))

(assert (=> b!110398 m!125229))

(assert (=> bm!11787 m!125227))

(declare-fun m!125231 () Bool)

(assert (=> bm!11787 m!125231))

(assert (=> b!110400 m!125227))

(assert (=> b!110400 m!125227))

(declare-fun m!125233 () Bool)

(assert (=> b!110400 m!125233))

(assert (=> bm!11739 d!31001))

(declare-fun d!31003 () Bool)

(declare-fun e!71808 () Bool)

(assert (=> d!31003 e!71808))

(declare-fun res!54584 () Bool)

(assert (=> d!31003 (=> (not res!54584) (not e!71808))))

(declare-fun lt!56927 () ListLongMap!1591)

(assert (=> d!31003 (= res!54584 (contains!838 lt!56927 (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))

(declare-fun lt!56926 () List!1630)

(assert (=> d!31003 (= lt!56927 (ListLongMap!1592 lt!56926))))

(declare-fun lt!56928 () Unit!3403)

(declare-fun lt!56925 () Unit!3403)

(assert (=> d!31003 (= lt!56928 lt!56925)))

(assert (=> d!31003 (= (getValueByKey!158 lt!56926 (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))) (Some!163 (_2!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))

(assert (=> d!31003 (= lt!56925 (lemmaContainsTupThenGetReturnValue!74 lt!56926 (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)) (_2!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))

(assert (=> d!31003 (= lt!56926 (insertStrictlySorted!77 (toList!811 (+!150 lt!56462 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)) (_2!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))

(assert (=> d!31003 (= (+!150 (+!150 lt!56462 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)) lt!56927)))

(declare-fun b!110401 () Bool)

(declare-fun res!54585 () Bool)

(assert (=> b!110401 (=> (not res!54585) (not e!71808))))

(assert (=> b!110401 (= res!54585 (= (getValueByKey!158 (toList!811 lt!56927) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))) (Some!163 (_2!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))))))

(declare-fun b!110402 () Bool)

(assert (=> b!110402 (= e!71808 (contains!839 (toList!811 lt!56927) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))))

(assert (= (and d!31003 res!54584) b!110401))

(assert (= (and b!110401 res!54585) b!110402))

(declare-fun m!125235 () Bool)

(assert (=> d!31003 m!125235))

(declare-fun m!125237 () Bool)

(assert (=> d!31003 m!125237))

(declare-fun m!125239 () Bool)

(assert (=> d!31003 m!125239))

(declare-fun m!125241 () Bool)

(assert (=> d!31003 m!125241))

(declare-fun m!125243 () Bool)

(assert (=> b!110401 m!125243))

(declare-fun m!125245 () Bool)

(assert (=> b!110402 m!125245))

(assert (=> d!30823 d!31003))

(declare-fun d!31005 () Bool)

(assert (=> d!31005 (= (+!150 (+!150 lt!56462 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))) (+!150 (+!150 lt!56462 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))))

(assert (=> d!31005 true))

(declare-fun _$28!167 () Unit!3403)

(assert (=> d!31005 (= (choose!682 lt!56462 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))) _$28!167)))

(declare-fun bs!4539 () Bool)

(assert (= bs!4539 d!31005))

(assert (=> bs!4539 m!124489))

(assert (=> bs!4539 m!124489))

(assert (=> bs!4539 m!124491))

(assert (=> bs!4539 m!124487))

(assert (=> bs!4539 m!124487))

(assert (=> bs!4539 m!124495))

(assert (=> d!30823 d!31005))

(declare-fun d!31007 () Bool)

(declare-fun e!71809 () Bool)

(assert (=> d!31007 e!71809))

(declare-fun res!54586 () Bool)

(assert (=> d!31007 (=> (not res!54586) (not e!71809))))

(declare-fun lt!56931 () ListLongMap!1591)

(assert (=> d!31007 (= res!54586 (contains!838 lt!56931 (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))

(declare-fun lt!56930 () List!1630)

(assert (=> d!31007 (= lt!56931 (ListLongMap!1592 lt!56930))))

(declare-fun lt!56932 () Unit!3403)

(declare-fun lt!56929 () Unit!3403)

(assert (=> d!31007 (= lt!56932 lt!56929)))

(assert (=> d!31007 (= (getValueByKey!158 lt!56930 (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))) (Some!163 (_2!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))

(assert (=> d!31007 (= lt!56929 (lemmaContainsTupThenGetReturnValue!74 lt!56930 (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)) (_2!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))

(assert (=> d!31007 (= lt!56930 (insertStrictlySorted!77 (toList!811 lt!56462) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)) (_2!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))

(assert (=> d!31007 (= (+!150 lt!56462 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)) lt!56931)))

(declare-fun b!110403 () Bool)

(declare-fun res!54587 () Bool)

(assert (=> b!110403 (=> (not res!54587) (not e!71809))))

(assert (=> b!110403 (= res!54587 (= (getValueByKey!158 (toList!811 lt!56931) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))) (Some!163 (_2!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))))))

(declare-fun b!110404 () Bool)

(assert (=> b!110404 (= e!71809 (contains!839 (toList!811 lt!56931) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))))

(assert (= (and d!31007 res!54586) b!110403))

(assert (= (and b!110403 res!54587) b!110404))

(declare-fun m!125247 () Bool)

(assert (=> d!31007 m!125247))

(declare-fun m!125249 () Bool)

(assert (=> d!31007 m!125249))

(declare-fun m!125251 () Bool)

(assert (=> d!31007 m!125251))

(declare-fun m!125253 () Bool)

(assert (=> d!31007 m!125253))

(declare-fun m!125255 () Bool)

(assert (=> b!110403 m!125255))

(declare-fun m!125257 () Bool)

(assert (=> b!110404 m!125257))

(assert (=> d!30823 d!31007))

(declare-fun d!31009 () Bool)

(declare-fun e!71810 () Bool)

(assert (=> d!31009 e!71810))

(declare-fun res!54588 () Bool)

(assert (=> d!31009 (=> (not res!54588) (not e!71810))))

(declare-fun lt!56935 () ListLongMap!1591)

(assert (=> d!31009 (= res!54588 (contains!838 lt!56935 (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun lt!56934 () List!1630)

(assert (=> d!31009 (= lt!56935 (ListLongMap!1592 lt!56934))))

(declare-fun lt!56936 () Unit!3403)

(declare-fun lt!56933 () Unit!3403)

(assert (=> d!31009 (= lt!56936 lt!56933)))

(assert (=> d!31009 (= (getValueByKey!158 lt!56934 (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))) (Some!163 (_2!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> d!31009 (= lt!56933 (lemmaContainsTupThenGetReturnValue!74 lt!56934 (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))) (_2!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> d!31009 (= lt!56934 (insertStrictlySorted!77 (toList!811 (+!150 lt!56462 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))) (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))) (_2!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> d!31009 (= (+!150 (+!150 lt!56462 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))) lt!56935)))

(declare-fun b!110405 () Bool)

(declare-fun res!54589 () Bool)

(assert (=> b!110405 (=> (not res!54589) (not e!71810))))

(assert (=> b!110405 (= res!54589 (= (getValueByKey!158 (toList!811 lt!56935) (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))) (Some!163 (_2!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(declare-fun b!110406 () Bool)

(assert (=> b!110406 (= e!71810 (contains!839 (toList!811 lt!56935) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))))

(assert (= (and d!31009 res!54588) b!110405))

(assert (= (and b!110405 res!54589) b!110406))

(declare-fun m!125259 () Bool)

(assert (=> d!31009 m!125259))

(declare-fun m!125261 () Bool)

(assert (=> d!31009 m!125261))

(declare-fun m!125263 () Bool)

(assert (=> d!31009 m!125263))

(declare-fun m!125265 () Bool)

(assert (=> d!31009 m!125265))

(declare-fun m!125267 () Bool)

(assert (=> b!110405 m!125267))

(declare-fun m!125269 () Bool)

(assert (=> b!110406 m!125269))

(assert (=> d!30823 d!31009))

(declare-fun d!31011 () Bool)

(declare-fun e!71811 () Bool)

(assert (=> d!31011 e!71811))

(declare-fun res!54590 () Bool)

(assert (=> d!31011 (=> (not res!54590) (not e!71811))))

(declare-fun lt!56939 () ListLongMap!1591)

(assert (=> d!31011 (= res!54590 (contains!838 lt!56939 (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun lt!56938 () List!1630)

(assert (=> d!31011 (= lt!56939 (ListLongMap!1592 lt!56938))))

(declare-fun lt!56940 () Unit!3403)

(declare-fun lt!56937 () Unit!3403)

(assert (=> d!31011 (= lt!56940 lt!56937)))

(assert (=> d!31011 (= (getValueByKey!158 lt!56938 (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))) (Some!163 (_2!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> d!31011 (= lt!56937 (lemmaContainsTupThenGetReturnValue!74 lt!56938 (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))) (_2!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> d!31011 (= lt!56938 (insertStrictlySorted!77 (toList!811 lt!56462) (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))) (_2!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> d!31011 (= (+!150 lt!56462 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))) lt!56939)))

(declare-fun b!110407 () Bool)

(declare-fun res!54591 () Bool)

(assert (=> b!110407 (=> (not res!54591) (not e!71811))))

(assert (=> b!110407 (= res!54591 (= (getValueByKey!158 (toList!811 lt!56939) (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))) (Some!163 (_2!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(declare-fun b!110408 () Bool)

(assert (=> b!110408 (= e!71811 (contains!839 (toList!811 lt!56939) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))))

(assert (= (and d!31011 res!54590) b!110407))

(assert (= (and b!110407 res!54591) b!110408))

(declare-fun m!125271 () Bool)

(assert (=> d!31011 m!125271))

(declare-fun m!125273 () Bool)

(assert (=> d!31011 m!125273))

(declare-fun m!125275 () Bool)

(assert (=> d!31011 m!125275))

(declare-fun m!125277 () Bool)

(assert (=> d!31011 m!125277))

(declare-fun m!125279 () Bool)

(assert (=> b!110407 m!125279))

(declare-fun m!125281 () Bool)

(assert (=> b!110408 m!125281))

(assert (=> d!30823 d!31011))

(declare-fun d!31013 () Bool)

(declare-fun isEmpty!378 (List!1630) Bool)

(assert (=> d!31013 (= (isEmpty!376 lt!56612) (isEmpty!378 (toList!811 lt!56612)))))

(declare-fun bs!4540 () Bool)

(assert (= bs!4540 d!31013))

(declare-fun m!125283 () Bool)

(assert (=> bs!4540 m!125283))

(assert (=> b!109946 d!31013))

(assert (=> d!30843 d!30847))

(declare-fun d!31015 () Bool)

(assert (=> d!31015 (not (arrayContainsKey!0 (_keys!4341 (v!2930 (underlying!370 thiss!992))) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> d!31015 true))

(declare-fun _$68!112 () Unit!3403)

(assert (=> d!31015 (= (choose!68 (_keys!4341 (v!2930 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (Cons!1627 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) Nil!1628)) _$68!112)))

(declare-fun bs!4541 () Bool)

(assert (= bs!4541 d!31015))

(assert (=> bs!4541 m!124315))

(assert (=> bs!4541 m!124319))

(assert (=> d!30843 d!31015))

(assert (=> b!110020 d!30929))

(declare-fun d!31017 () Bool)

(declare-fun e!71812 () Bool)

(assert (=> d!31017 e!71812))

(declare-fun res!54592 () Bool)

(assert (=> d!31017 (=> res!54592 e!71812)))

(declare-fun lt!56941 () Bool)

(assert (=> d!31017 (= res!54592 (not lt!56941))))

(declare-fun lt!56942 () Bool)

(assert (=> d!31017 (= lt!56941 lt!56942)))

(declare-fun lt!56944 () Unit!3403)

(declare-fun e!71813 () Unit!3403)

(assert (=> d!31017 (= lt!56944 e!71813)))

(declare-fun c!19582 () Bool)

(assert (=> d!31017 (= c!19582 lt!56942)))

(assert (=> d!31017 (= lt!56942 (containsKey!162 (toList!811 e!71507) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(assert (=> d!31017 (= (contains!838 e!71507 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) lt!56941)))

(declare-fun b!110409 () Bool)

(declare-fun lt!56943 () Unit!3403)

(assert (=> b!110409 (= e!71813 lt!56943)))

(assert (=> b!110409 (= lt!56943 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 e!71507) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(assert (=> b!110409 (isDefined!111 (getValueByKey!158 (toList!811 e!71507) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(declare-fun b!110410 () Bool)

(declare-fun Unit!3428 () Unit!3403)

(assert (=> b!110410 (= e!71813 Unit!3428)))

(declare-fun b!110411 () Bool)

(assert (=> b!110411 (= e!71812 (isDefined!111 (getValueByKey!158 (toList!811 e!71507) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355))))))

(assert (= (and d!31017 c!19582) b!110409))

(assert (= (and d!31017 (not c!19582)) b!110410))

(assert (= (and d!31017 (not res!54592)) b!110411))

(assert (=> d!31017 m!124315))

(declare-fun m!125285 () Bool)

(assert (=> d!31017 m!125285))

(assert (=> b!110409 m!124315))

(declare-fun m!125287 () Bool)

(assert (=> b!110409 m!125287))

(assert (=> b!110409 m!124315))

(declare-fun m!125289 () Bool)

(assert (=> b!110409 m!125289))

(assert (=> b!110409 m!125289))

(declare-fun m!125291 () Bool)

(assert (=> b!110409 m!125291))

(assert (=> b!110411 m!124315))

(assert (=> b!110411 m!125289))

(assert (=> b!110411 m!125289))

(assert (=> b!110411 m!125291))

(assert (=> bm!11709 d!31017))

(declare-fun d!31019 () Bool)

(declare-fun e!71814 () Bool)

(assert (=> d!31019 e!71814))

(declare-fun res!54593 () Bool)

(assert (=> d!31019 (=> res!54593 e!71814)))

(declare-fun lt!56945 () Bool)

(assert (=> d!31019 (= res!54593 (not lt!56945))))

(declare-fun lt!56946 () Bool)

(assert (=> d!31019 (= lt!56945 lt!56946)))

(declare-fun lt!56948 () Unit!3403)

(declare-fun e!71815 () Unit!3403)

(assert (=> d!31019 (= lt!56948 e!71815)))

(declare-fun c!19583 () Bool)

(assert (=> d!31019 (= c!19583 lt!56946)))

(assert (=> d!31019 (= lt!56946 (containsKey!162 (toList!811 lt!56631) (_1!1231 lt!56454)))))

(assert (=> d!31019 (= (contains!838 lt!56631 (_1!1231 lt!56454)) lt!56945)))

(declare-fun b!110412 () Bool)

(declare-fun lt!56947 () Unit!3403)

(assert (=> b!110412 (= e!71815 lt!56947)))

(assert (=> b!110412 (= lt!56947 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 lt!56631) (_1!1231 lt!56454)))))

(assert (=> b!110412 (isDefined!111 (getValueByKey!158 (toList!811 lt!56631) (_1!1231 lt!56454)))))

(declare-fun b!110413 () Bool)

(declare-fun Unit!3429 () Unit!3403)

(assert (=> b!110413 (= e!71815 Unit!3429)))

(declare-fun b!110414 () Bool)

(assert (=> b!110414 (= e!71814 (isDefined!111 (getValueByKey!158 (toList!811 lt!56631) (_1!1231 lt!56454))))))

(assert (= (and d!31019 c!19583) b!110412))

(assert (= (and d!31019 (not c!19583)) b!110413))

(assert (= (and d!31019 (not res!54593)) b!110414))

(declare-fun m!125293 () Bool)

(assert (=> d!31019 m!125293))

(declare-fun m!125295 () Bool)

(assert (=> b!110412 m!125295))

(assert (=> b!110412 m!124545))

(assert (=> b!110412 m!124545))

(declare-fun m!125297 () Bool)

(assert (=> b!110412 m!125297))

(assert (=> b!110414 m!124545))

(assert (=> b!110414 m!124545))

(assert (=> b!110414 m!125297))

(assert (=> d!30829 d!31019))

(declare-fun b!110415 () Bool)

(declare-fun e!71816 () Option!164)

(assert (=> b!110415 (= e!71816 (Some!163 (_2!1231 (h!2225 lt!56630))))))

(declare-fun b!110417 () Bool)

(declare-fun e!71817 () Option!164)

(assert (=> b!110417 (= e!71817 (getValueByKey!158 (t!5767 lt!56630) (_1!1231 lt!56454)))))

(declare-fun d!31021 () Bool)

(declare-fun c!19584 () Bool)

(assert (=> d!31021 (= c!19584 (and ((_ is Cons!1626) lt!56630) (= (_1!1231 (h!2225 lt!56630)) (_1!1231 lt!56454))))))

(assert (=> d!31021 (= (getValueByKey!158 lt!56630 (_1!1231 lt!56454)) e!71816)))

(declare-fun b!110416 () Bool)

(assert (=> b!110416 (= e!71816 e!71817)))

(declare-fun c!19585 () Bool)

(assert (=> b!110416 (= c!19585 (and ((_ is Cons!1626) lt!56630) (not (= (_1!1231 (h!2225 lt!56630)) (_1!1231 lt!56454)))))))

(declare-fun b!110418 () Bool)

(assert (=> b!110418 (= e!71817 None!162)))

(assert (= (and d!31021 c!19584) b!110415))

(assert (= (and d!31021 (not c!19584)) b!110416))

(assert (= (and b!110416 c!19585) b!110417))

(assert (= (and b!110416 (not c!19585)) b!110418))

(declare-fun m!125299 () Bool)

(assert (=> b!110417 m!125299))

(assert (=> d!30829 d!31021))

(declare-fun d!31023 () Bool)

(assert (=> d!31023 (= (getValueByKey!158 lt!56630 (_1!1231 lt!56454)) (Some!163 (_2!1231 lt!56454)))))

(declare-fun lt!56949 () Unit!3403)

(assert (=> d!31023 (= lt!56949 (choose!687 lt!56630 (_1!1231 lt!56454) (_2!1231 lt!56454)))))

(declare-fun e!71818 () Bool)

(assert (=> d!31023 e!71818))

(declare-fun res!54594 () Bool)

(assert (=> d!31023 (=> (not res!54594) (not e!71818))))

(assert (=> d!31023 (= res!54594 (isStrictlySorted!311 lt!56630))))

(assert (=> d!31023 (= (lemmaContainsTupThenGetReturnValue!74 lt!56630 (_1!1231 lt!56454) (_2!1231 lt!56454)) lt!56949)))

(declare-fun b!110419 () Bool)

(declare-fun res!54595 () Bool)

(assert (=> b!110419 (=> (not res!54595) (not e!71818))))

(assert (=> b!110419 (= res!54595 (containsKey!162 lt!56630 (_1!1231 lt!56454)))))

(declare-fun b!110420 () Bool)

(assert (=> b!110420 (= e!71818 (contains!839 lt!56630 (tuple2!2441 (_1!1231 lt!56454) (_2!1231 lt!56454))))))

(assert (= (and d!31023 res!54594) b!110419))

(assert (= (and b!110419 res!54595) b!110420))

(assert (=> d!31023 m!124539))

(declare-fun m!125301 () Bool)

(assert (=> d!31023 m!125301))

(declare-fun m!125303 () Bool)

(assert (=> d!31023 m!125303))

(declare-fun m!125305 () Bool)

(assert (=> b!110419 m!125305))

(declare-fun m!125307 () Bool)

(assert (=> b!110420 m!125307))

(assert (=> d!30829 d!31023))

(declare-fun b!110421 () Bool)

(declare-fun e!71823 () List!1630)

(declare-fun e!71822 () List!1630)

(assert (=> b!110421 (= e!71823 e!71822)))

(declare-fun c!19588 () Bool)

(assert (=> b!110421 (= c!19588 (and ((_ is Cons!1626) (toList!811 lt!56462)) (= (_1!1231 (h!2225 (toList!811 lt!56462))) (_1!1231 lt!56454))))))

(declare-fun bm!11788 () Bool)

(declare-fun call!11791 () List!1630)

(declare-fun call!11792 () List!1630)

(assert (=> bm!11788 (= call!11791 call!11792)))

(declare-fun b!110422 () Bool)

(assert (=> b!110422 (= e!71823 call!11792)))

(declare-fun bm!11789 () Bool)

(declare-fun call!11793 () List!1630)

(assert (=> bm!11789 (= call!11793 call!11791)))

(declare-fun c!19586 () Bool)

(declare-fun e!71821 () List!1630)

(declare-fun bm!11790 () Bool)

(assert (=> bm!11790 (= call!11792 ($colon$colon!83 e!71821 (ite c!19586 (h!2225 (toList!811 lt!56462)) (tuple2!2441 (_1!1231 lt!56454) (_2!1231 lt!56454)))))))

(declare-fun c!19589 () Bool)

(assert (=> bm!11790 (= c!19589 c!19586)))

(declare-fun b!110423 () Bool)

(assert (=> b!110423 (= e!71822 call!11791)))

(declare-fun b!110425 () Bool)

(declare-fun e!71820 () Bool)

(declare-fun lt!56950 () List!1630)

(assert (=> b!110425 (= e!71820 (contains!839 lt!56950 (tuple2!2441 (_1!1231 lt!56454) (_2!1231 lt!56454))))))

(declare-fun b!110426 () Bool)

(declare-fun e!71819 () List!1630)

(assert (=> b!110426 (= e!71819 call!11793)))

(declare-fun b!110427 () Bool)

(declare-fun res!54597 () Bool)

(assert (=> b!110427 (=> (not res!54597) (not e!71820))))

(assert (=> b!110427 (= res!54597 (containsKey!162 lt!56950 (_1!1231 lt!56454)))))

(declare-fun b!110428 () Bool)

(declare-fun c!19587 () Bool)

(assert (=> b!110428 (= c!19587 (and ((_ is Cons!1626) (toList!811 lt!56462)) (bvsgt (_1!1231 (h!2225 (toList!811 lt!56462))) (_1!1231 lt!56454))))))

(assert (=> b!110428 (= e!71822 e!71819)))

(declare-fun b!110429 () Bool)

(assert (=> b!110429 (= e!71819 call!11793)))

(declare-fun b!110430 () Bool)

(assert (=> b!110430 (= e!71821 (ite c!19588 (t!5767 (toList!811 lt!56462)) (ite c!19587 (Cons!1626 (h!2225 (toList!811 lt!56462)) (t!5767 (toList!811 lt!56462))) Nil!1627)))))

(declare-fun b!110424 () Bool)

(assert (=> b!110424 (= e!71821 (insertStrictlySorted!77 (t!5767 (toList!811 lt!56462)) (_1!1231 lt!56454) (_2!1231 lt!56454)))))

(declare-fun d!31025 () Bool)

(assert (=> d!31025 e!71820))

(declare-fun res!54596 () Bool)

(assert (=> d!31025 (=> (not res!54596) (not e!71820))))

(assert (=> d!31025 (= res!54596 (isStrictlySorted!311 lt!56950))))

(assert (=> d!31025 (= lt!56950 e!71823)))

(assert (=> d!31025 (= c!19586 (and ((_ is Cons!1626) (toList!811 lt!56462)) (bvslt (_1!1231 (h!2225 (toList!811 lt!56462))) (_1!1231 lt!56454))))))

(assert (=> d!31025 (isStrictlySorted!311 (toList!811 lt!56462))))

(assert (=> d!31025 (= (insertStrictlySorted!77 (toList!811 lt!56462) (_1!1231 lt!56454) (_2!1231 lt!56454)) lt!56950)))

(assert (= (and d!31025 c!19586) b!110422))

(assert (= (and d!31025 (not c!19586)) b!110421))

(assert (= (and b!110421 c!19588) b!110423))

(assert (= (and b!110421 (not c!19588)) b!110428))

(assert (= (and b!110428 c!19587) b!110426))

(assert (= (and b!110428 (not c!19587)) b!110429))

(assert (= (or b!110426 b!110429) bm!11789))

(assert (= (or b!110423 bm!11789) bm!11788))

(assert (= (or b!110422 bm!11788) bm!11790))

(assert (= (and bm!11790 c!19589) b!110424))

(assert (= (and bm!11790 (not c!19589)) b!110430))

(assert (= (and d!31025 res!54596) b!110427))

(assert (= (and b!110427 res!54597) b!110425))

(declare-fun m!125309 () Bool)

(assert (=> b!110427 m!125309))

(declare-fun m!125311 () Bool)

(assert (=> b!110424 m!125311))

(declare-fun m!125313 () Bool)

(assert (=> b!110425 m!125313))

(declare-fun m!125315 () Bool)

(assert (=> d!31025 m!125315))

(assert (=> d!31025 m!125051))

(declare-fun m!125317 () Bool)

(assert (=> bm!11790 m!125317))

(assert (=> d!30829 d!31025))

(assert (=> d!30845 d!30851))

(declare-fun d!31027 () Bool)

(assert (=> d!31027 (arrayNoDuplicates!0 (_keys!4341 (v!2930 (underlying!370 thiss!992))) from!355 Nil!1628)))

(assert (=> d!31027 true))

(declare-fun _$71!153 () Unit!3403)

(assert (=> d!31027 (= (choose!39 (_keys!4341 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000000000 from!355) _$71!153)))

(declare-fun bs!4542 () Bool)

(assert (= bs!4542 d!31027))

(assert (=> bs!4542 m!124313))

(assert (=> d!30845 d!31027))

(declare-fun d!31029 () Bool)

(declare-fun lt!56951 () Bool)

(assert (=> d!31029 (= lt!56951 (select (content!113 (toList!811 lt!56635)) lt!56454))))

(declare-fun e!71825 () Bool)

(assert (=> d!31029 (= lt!56951 e!71825)))

(declare-fun res!54598 () Bool)

(assert (=> d!31029 (=> (not res!54598) (not e!71825))))

(assert (=> d!31029 (= res!54598 ((_ is Cons!1626) (toList!811 lt!56635)))))

(assert (=> d!31029 (= (contains!839 (toList!811 lt!56635) lt!56454) lt!56951)))

(declare-fun b!110431 () Bool)

(declare-fun e!71824 () Bool)

(assert (=> b!110431 (= e!71825 e!71824)))

(declare-fun res!54599 () Bool)

(assert (=> b!110431 (=> res!54599 e!71824)))

(assert (=> b!110431 (= res!54599 (= (h!2225 (toList!811 lt!56635)) lt!56454))))

(declare-fun b!110432 () Bool)

(assert (=> b!110432 (= e!71824 (contains!839 (t!5767 (toList!811 lt!56635)) lt!56454))))

(assert (= (and d!31029 res!54598) b!110431))

(assert (= (and b!110431 (not res!54599)) b!110432))

(declare-fun m!125319 () Bool)

(assert (=> d!31029 m!125319))

(declare-fun m!125321 () Bool)

(assert (=> d!31029 m!125321))

(declare-fun m!125323 () Bool)

(assert (=> b!110432 m!125323))

(assert (=> b!109957 d!31029))

(declare-fun d!31031 () Bool)

(assert (=> d!31031 (= (apply!100 lt!56612 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1350 (getValueByKey!158 (toList!811 lt!56612) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!4543 () Bool)

(assert (= bs!4543 d!31031))

(assert (=> bs!4543 m!124503))

(declare-fun m!125325 () Bool)

(assert (=> bs!4543 m!125325))

(assert (=> bs!4543 m!125325))

(declare-fun m!125327 () Bool)

(assert (=> bs!4543 m!125327))

(assert (=> b!109944 d!31031))

(declare-fun d!31033 () Bool)

(declare-fun c!19590 () Bool)

(assert (=> d!31033 (= c!19590 ((_ is ValueCellFull!1005) (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!71826 () V!3243)

(assert (=> d!31033 (= (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!71826)))

(declare-fun b!110433 () Bool)

(assert (=> b!110433 (= e!71826 (get!1348 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!110434 () Bool)

(assert (=> b!110434 (= e!71826 (get!1349 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!31033 c!19590) b!110433))

(assert (= (and d!31033 (not c!19590)) b!110434))

(assert (=> b!110433 m!124505))

(assert (=> b!110433 m!124363))

(declare-fun m!125329 () Bool)

(assert (=> b!110433 m!125329))

(assert (=> b!110434 m!124505))

(assert (=> b!110434 m!124363))

(declare-fun m!125331 () Bool)

(assert (=> b!110434 m!125331))

(assert (=> b!109944 d!31033))

(assert (=> b!109942 d!30929))

(declare-fun b!110469 () Bool)

(declare-fun e!71848 () Bool)

(declare-fun lt!57037 () SeekEntryResult!261)

(assert (=> b!110469 (= e!71848 ((_ is Undefined!261) lt!57037))))

(declare-fun bm!11799 () Bool)

(declare-fun call!11803 () Bool)

(declare-fun call!11804 () Bool)

(assert (=> bm!11799 (= call!11803 call!11804)))

(declare-fun b!110470 () Bool)

(declare-fun e!71850 () Bool)

(declare-fun call!11802 () Bool)

(assert (=> b!110470 (= e!71850 (not call!11802))))

(declare-fun b!110472 () Bool)

(assert (=> b!110472 (= e!71848 e!71850)))

(declare-fun res!54624 () Bool)

(assert (=> b!110472 (= res!54624 call!11803)))

(assert (=> b!110472 (=> (not res!54624) (not e!71850))))

(declare-fun b!110473 () Bool)

(declare-fun res!54623 () Bool)

(declare-fun e!71845 () Bool)

(assert (=> b!110473 (=> (not res!54623) (not e!71845))))

(declare-fun lt!57017 () tuple2!2438)

(assert (=> b!110473 (= res!54623 (contains!838 (map!1299 (_2!1230 lt!57017)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(declare-fun b!110474 () Bool)

(assert (=> b!110474 (= e!71845 (= (map!1299 (_2!1230 lt!57017)) (+!150 (map!1299 newMap!16) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))

(declare-fun b!110475 () Bool)

(declare-fun res!54626 () Bool)

(assert (=> b!110475 (= res!54626 call!11804)))

(declare-fun e!71844 () Bool)

(assert (=> b!110475 (=> (not res!54626) (not e!71844))))

(declare-fun b!110476 () Bool)

(declare-fun e!71849 () Unit!3403)

(declare-fun Unit!3430 () Unit!3403)

(assert (=> b!110476 (= e!71849 Unit!3430)))

(declare-fun lt!57024 () Unit!3403)

(assert (=> b!110476 (= lt!57024 (lemmaInListMapThenSeekEntryOrOpenFindsIt!49 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (defaultEntry!2627 newMap!16)))))

(declare-fun lt!57032 () SeekEntryResult!261)

(declare-fun call!11805 () SeekEntryResult!261)

(assert (=> b!110476 (= lt!57032 call!11805)))

(declare-fun res!54619 () Bool)

(assert (=> b!110476 (= res!54619 ((_ is Found!261) lt!57032))))

(assert (=> b!110476 (=> (not res!54619) (not e!71844))))

(assert (=> b!110476 e!71844))

(declare-fun lt!57031 () Unit!3403)

(assert (=> b!110476 (= lt!57031 lt!57024)))

(assert (=> b!110476 false))

(declare-fun d!31035 () Bool)

(assert (=> d!31035 e!71845))

(declare-fun res!54625 () Bool)

(assert (=> d!31035 (=> (not res!54625) (not e!71845))))

(assert (=> d!31035 (= res!54625 (_1!1230 lt!57017))))

(assert (=> d!31035 (= lt!57017 (tuple2!2439 true (LongMapFixedSize!919 (defaultEntry!2627 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (bvadd (_size!508 newMap!16) #b00000000000000000000000000000001) (array!4390 (store (arr!2081 (_keys!4341 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2338 (_keys!4341 newMap!16))) (array!4392 (store (arr!2082 (_values!2610 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (ValueCellFull!1005 lt!56458)) (size!2339 (_values!2610 newMap!16))) (_vacant!508 newMap!16))))))

(declare-fun lt!57035 () Unit!3403)

(declare-fun lt!57039 () Unit!3403)

(assert (=> d!31035 (= lt!57035 lt!57039)))

(declare-fun lt!57041 () array!4389)

(declare-fun lt!57025 () array!4391)

(assert (=> d!31035 (contains!838 (getCurrentListMap!496 lt!57041 lt!57025 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) (select (store (arr!2081 (_keys!4341 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591))))))

(assert (=> d!31035 (= lt!57039 (lemmaValidKeyInArrayIsInListMap!110 lt!57041 lt!57025 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (defaultEntry!2627 newMap!16)))))

(assert (=> d!31035 (= lt!57025 (array!4392 (store (arr!2082 (_values!2610 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (ValueCellFull!1005 lt!56458)) (size!2339 (_values!2610 newMap!16))))))

(assert (=> d!31035 (= lt!57041 (array!4390 (store (arr!2081 (_keys!4341 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2338 (_keys!4341 newMap!16))))))

(declare-fun lt!57038 () Unit!3403)

(declare-fun lt!57029 () Unit!3403)

(assert (=> d!31035 (= lt!57038 lt!57029)))

(declare-fun lt!57028 () array!4389)

(assert (=> d!31035 (= (arrayCountValidKeys!0 lt!57028 (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (bvadd (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!4389 (_ BitVec 32)) Unit!3403)

(assert (=> d!31035 (= lt!57029 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!57028 (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591))))))

(assert (=> d!31035 (= lt!57028 (array!4390 (store (arr!2081 (_keys!4341 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2338 (_keys!4341 newMap!16))))))

(declare-fun lt!57026 () Unit!3403)

(declare-fun lt!57013 () Unit!3403)

(assert (=> d!31035 (= lt!57026 lt!57013)))

(declare-fun lt!57012 () array!4389)

(assert (=> d!31035 (arrayContainsKey!0 lt!57012 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4389 (_ BitVec 64) (_ BitVec 32)) Unit!3403)

(assert (=> d!31035 (= lt!57013 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!57012 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591))))))

(assert (=> d!31035 (= lt!57012 (array!4390 (store (arr!2081 (_keys!4341 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2338 (_keys!4341 newMap!16))))))

(declare-fun lt!57030 () Unit!3403)

(declare-fun lt!57019 () Unit!3403)

(assert (=> d!31035 (= lt!57030 lt!57019)))

(assert (=> d!31035 (= (+!150 (getCurrentListMap!496 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)) (getCurrentListMap!496 (array!4390 (store (arr!2081 (_keys!4341 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2338 (_keys!4341 newMap!16))) (array!4392 (store (arr!2082 (_values!2610 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (ValueCellFull!1005 lt!56458)) (size!2339 (_values!2610 newMap!16))) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!32 (array!4389 array!4391 (_ BitVec 32) (_ BitVec 32) V!3243 V!3243 (_ BitVec 32) (_ BitVec 64) V!3243 Int) Unit!3403)

(assert (=> d!31035 (= lt!57019 (lemmaAddValidKeyToArrayThenAddPairToListMap!32 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!57016 () Unit!3403)

(declare-fun lt!57034 () Unit!3403)

(assert (=> d!31035 (= lt!57016 lt!57034)))

(assert (=> d!31035 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4390 (store (arr!2081 (_keys!4341 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2338 (_keys!4341 newMap!16))) (mask!6795 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!4389 (_ BitVec 32) (_ BitVec 32)) Unit!3403)

(assert (=> d!31035 (= lt!57034 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (_keys!4341 newMap!16) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (mask!6795 newMap!16)))))

(declare-fun lt!57040 () Unit!3403)

(declare-fun lt!57015 () Unit!3403)

(assert (=> d!31035 (= lt!57040 lt!57015)))

(assert (=> d!31035 (= (arrayCountValidKeys!0 (array!4390 (store (arr!2081 (_keys!4341 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2338 (_keys!4341 newMap!16))) #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4341 newMap!16) #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!4389 (_ BitVec 32) (_ BitVec 64)) Unit!3403)

(assert (=> d!31035 (= lt!57015 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4341 newMap!16) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(declare-fun lt!57014 () Unit!3403)

(declare-fun lt!57036 () Unit!3403)

(assert (=> d!31035 (= lt!57014 lt!57036)))

(declare-fun lt!57020 () List!1631)

(declare-fun lt!57021 () (_ BitVec 32))

(assert (=> d!31035 (arrayNoDuplicates!0 (array!4390 (store (arr!2081 (_keys!4341 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2338 (_keys!4341 newMap!16))) lt!57021 lt!57020)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!4389 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1631) Unit!3403)

(assert (=> d!31035 (= lt!57036 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4341 newMap!16) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) lt!57021 lt!57020))))

(assert (=> d!31035 (= lt!57020 Nil!1628)))

(assert (=> d!31035 (= lt!57021 #b00000000000000000000000000000000)))

(declare-fun lt!57018 () Unit!3403)

(declare-fun e!71843 () Unit!3403)

(assert (=> d!31035 (= lt!57018 e!71843)))

(declare-fun c!19600 () Bool)

(assert (=> d!31035 (= c!19600 (arrayContainsKey!0 (_keys!4341 newMap!16) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!57027 () Unit!3403)

(assert (=> d!31035 (= lt!57027 e!71849)))

(declare-fun c!19602 () Bool)

(assert (=> d!31035 (= c!19602 (contains!838 (getCurrentListMap!496 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(assert (=> d!31035 (valid!430 newMap!16)))

(assert (=> d!31035 (= (updateHelperNewKey!49 newMap!16 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458 (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591))) lt!57017)))

(declare-fun b!110471 () Bool)

(declare-fun res!54618 () Bool)

(declare-fun e!71846 () Bool)

(assert (=> b!110471 (=> (not res!54618) (not e!71846))))

(assert (=> b!110471 (= res!54618 call!11803)))

(declare-fun e!71847 () Bool)

(assert (=> b!110471 (= e!71847 e!71846)))

(declare-fun b!110477 () Bool)

(assert (=> b!110477 (= e!71846 (not call!11802))))

(declare-fun b!110478 () Bool)

(assert (=> b!110478 (= e!71844 (= (select (arr!2081 (_keys!4341 newMap!16)) (index!3195 lt!57032)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(declare-fun b!110479 () Bool)

(declare-fun Unit!3431 () Unit!3403)

(assert (=> b!110479 (= e!71843 Unit!3431)))

(declare-fun lt!57022 () Unit!3403)

(declare-fun lemmaArrayContainsKeyThenInListMap!32 (array!4389 array!4391 (_ BitVec 32) (_ BitVec 32) V!3243 V!3243 (_ BitVec 64) (_ BitVec 32) Int) Unit!3403)

(assert (=> b!110479 (= lt!57022 (lemmaArrayContainsKeyThenInListMap!32 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(assert (=> b!110479 (contains!838 (getCurrentListMap!496 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355))))

(declare-fun lt!57023 () Unit!3403)

(assert (=> b!110479 (= lt!57023 lt!57022)))

(assert (=> b!110479 false))

(declare-fun bm!11800 () Bool)

(assert (=> bm!11800 (= call!11802 (arrayContainsKey!0 (_keys!4341 newMap!16) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!110480 () Bool)

(declare-fun Unit!3432 () Unit!3403)

(assert (=> b!110480 (= e!71843 Unit!3432)))

(declare-fun b!110481 () Bool)

(declare-fun res!54620 () Bool)

(assert (=> b!110481 (=> (not res!54620) (not e!71845))))

(assert (=> b!110481 (= res!54620 (valid!430 (_2!1230 lt!57017)))))

(declare-fun b!110482 () Bool)

(declare-fun lt!57033 () Unit!3403)

(assert (=> b!110482 (= e!71849 lt!57033)))

(assert (=> b!110482 (= lt!57033 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!49 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (defaultEntry!2627 newMap!16)))))

(assert (=> b!110482 (= lt!57037 call!11805)))

(declare-fun c!19599 () Bool)

(assert (=> b!110482 (= c!19599 ((_ is MissingZero!261) lt!57037))))

(assert (=> b!110482 e!71847))

(declare-fun bm!11801 () Bool)

(assert (=> bm!11801 (= call!11805 (seekEntryOrOpen!0 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (_keys!4341 newMap!16) (mask!6795 newMap!16)))))

(declare-fun b!110483 () Bool)

(declare-fun c!19601 () Bool)

(assert (=> b!110483 (= c!19601 ((_ is MissingVacant!261) lt!57037))))

(assert (=> b!110483 (= e!71847 e!71848)))

(declare-fun bm!11802 () Bool)

(assert (=> bm!11802 (= call!11804 (inRange!0 (ite c!19602 (index!3195 lt!57032) (ite c!19599 (index!3194 lt!57037) (index!3197 lt!57037))) (mask!6795 newMap!16)))))

(declare-fun b!110484 () Bool)

(declare-fun res!54621 () Bool)

(assert (=> b!110484 (= res!54621 (= (select (arr!2081 (_keys!4341 newMap!16)) (index!3197 lt!57037)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!110484 (=> (not res!54621) (not e!71850))))

(declare-fun b!110485 () Bool)

(declare-fun res!54622 () Bool)

(assert (=> b!110485 (=> (not res!54622) (not e!71846))))

(assert (=> b!110485 (= res!54622 (= (select (arr!2081 (_keys!4341 newMap!16)) (index!3194 lt!57037)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!31035 c!19602) b!110476))

(assert (= (and d!31035 (not c!19602)) b!110482))

(assert (= (and b!110476 res!54619) b!110475))

(assert (= (and b!110475 res!54626) b!110478))

(assert (= (and b!110482 c!19599) b!110471))

(assert (= (and b!110482 (not c!19599)) b!110483))

(assert (= (and b!110471 res!54618) b!110485))

(assert (= (and b!110485 res!54622) b!110477))

(assert (= (and b!110483 c!19601) b!110472))

(assert (= (and b!110483 (not c!19601)) b!110469))

(assert (= (and b!110472 res!54624) b!110484))

(assert (= (and b!110484 res!54621) b!110470))

(assert (= (or b!110471 b!110472) bm!11799))

(assert (= (or b!110477 b!110470) bm!11800))

(assert (= (or b!110475 bm!11799) bm!11802))

(assert (= (or b!110476 b!110482) bm!11801))

(assert (= (and d!31035 c!19600) b!110479))

(assert (= (and d!31035 (not c!19600)) b!110480))

(assert (= (and d!31035 res!54625) b!110481))

(assert (= (and b!110481 res!54620) b!110473))

(assert (= (and b!110473 res!54623) b!110474))

(declare-fun m!125333 () Bool)

(assert (=> b!110474 m!125333))

(assert (=> b!110474 m!124357))

(assert (=> b!110474 m!124357))

(declare-fun m!125335 () Bool)

(assert (=> b!110474 m!125335))

(declare-fun m!125337 () Bool)

(assert (=> b!110481 m!125337))

(assert (=> bm!11800 m!124315))

(assert (=> bm!11800 m!124447))

(declare-fun m!125339 () Bool)

(assert (=> b!110485 m!125339))

(declare-fun m!125341 () Bool)

(assert (=> bm!11802 m!125341))

(declare-fun m!125343 () Bool)

(assert (=> d!31035 m!125343))

(declare-fun m!125345 () Bool)

(assert (=> d!31035 m!125345))

(assert (=> d!31035 m!124485))

(assert (=> d!31035 m!124677))

(declare-fun m!125347 () Bool)

(assert (=> d!31035 m!125347))

(assert (=> d!31035 m!124315))

(declare-fun m!125349 () Bool)

(assert (=> d!31035 m!125349))

(declare-fun m!125351 () Bool)

(assert (=> d!31035 m!125351))

(assert (=> d!31035 m!124315))

(declare-fun m!125353 () Bool)

(assert (=> d!31035 m!125353))

(declare-fun m!125355 () Bool)

(assert (=> d!31035 m!125355))

(assert (=> d!31035 m!124485))

(assert (=> d!31035 m!124315))

(assert (=> d!31035 m!124447))

(declare-fun m!125357 () Bool)

(assert (=> d!31035 m!125357))

(assert (=> d!31035 m!125343))

(assert (=> d!31035 m!125357))

(declare-fun m!125359 () Bool)

(assert (=> d!31035 m!125359))

(assert (=> d!31035 m!124347))

(assert (=> d!31035 m!124641))

(assert (=> d!31035 m!124315))

(declare-fun m!125361 () Bool)

(assert (=> d!31035 m!125361))

(declare-fun m!125363 () Bool)

(assert (=> d!31035 m!125363))

(declare-fun m!125365 () Bool)

(assert (=> d!31035 m!125365))

(declare-fun m!125367 () Bool)

(assert (=> d!31035 m!125367))

(assert (=> d!31035 m!124315))

(declare-fun m!125369 () Bool)

(assert (=> d!31035 m!125369))

(assert (=> d!31035 m!124315))

(declare-fun m!125371 () Bool)

(assert (=> d!31035 m!125371))

(declare-fun m!125373 () Bool)

(assert (=> d!31035 m!125373))

(declare-fun m!125375 () Bool)

(assert (=> d!31035 m!125375))

(assert (=> d!31035 m!124485))

(assert (=> d!31035 m!124315))

(declare-fun m!125377 () Bool)

(assert (=> d!31035 m!125377))

(assert (=> d!31035 m!124315))

(declare-fun m!125379 () Bool)

(assert (=> d!31035 m!125379))

(assert (=> b!110476 m!124315))

(assert (=> b!110476 m!124469))

(assert (=> b!110473 m!125333))

(assert (=> b!110473 m!125333))

(assert (=> b!110473 m!124315))

(declare-fun m!125381 () Bool)

(assert (=> b!110473 m!125381))

(assert (=> bm!11801 m!124315))

(assert (=> bm!11801 m!124453))

(assert (=> b!110482 m!124315))

(assert (=> b!110482 m!124449))

(assert (=> b!110479 m!124315))

(declare-fun m!125383 () Bool)

(assert (=> b!110479 m!125383))

(assert (=> b!110479 m!124485))

(assert (=> b!110479 m!124485))

(assert (=> b!110479 m!124315))

(assert (=> b!110479 m!125377))

(declare-fun m!125385 () Bool)

(assert (=> b!110478 m!125385))

(declare-fun m!125387 () Bool)

(assert (=> b!110484 m!125387))

(assert (=> bm!11690 d!31035))

(declare-fun d!31037 () Bool)

(declare-fun res!54631 () Bool)

(declare-fun e!71855 () Bool)

(assert (=> d!31037 (=> res!54631 e!71855)))

(assert (=> d!31037 (= res!54631 (and ((_ is Cons!1626) (toList!811 lt!56461)) (= (_1!1231 (h!2225 (toList!811 lt!56461))) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355))))))

(assert (=> d!31037 (= (containsKey!162 (toList!811 lt!56461) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) e!71855)))

(declare-fun b!110490 () Bool)

(declare-fun e!71856 () Bool)

(assert (=> b!110490 (= e!71855 e!71856)))

(declare-fun res!54632 () Bool)

(assert (=> b!110490 (=> (not res!54632) (not e!71856))))

(assert (=> b!110490 (= res!54632 (and (or (not ((_ is Cons!1626) (toList!811 lt!56461))) (bvsle (_1!1231 (h!2225 (toList!811 lt!56461))) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355))) ((_ is Cons!1626) (toList!811 lt!56461)) (bvslt (_1!1231 (h!2225 (toList!811 lt!56461))) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355))))))

(declare-fun b!110491 () Bool)

(assert (=> b!110491 (= e!71856 (containsKey!162 (t!5767 (toList!811 lt!56461)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(assert (= (and d!31037 (not res!54631)) b!110490))

(assert (= (and b!110490 res!54632) b!110491))

(assert (=> b!110491 m!124315))

(declare-fun m!125389 () Bool)

(assert (=> b!110491 m!125389))

(assert (=> d!30819 d!31037))

(declare-fun d!31039 () Bool)

(declare-fun e!71857 () Bool)

(assert (=> d!31039 e!71857))

(declare-fun res!54633 () Bool)

(assert (=> d!31039 (=> (not res!54633) (not e!71857))))

(declare-fun lt!57044 () ListLongMap!1591)

(assert (=> d!31039 (= res!54633 (contains!838 lt!57044 (_1!1231 (ite c!19438 (ite c!19444 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))))))

(declare-fun lt!57043 () List!1630)

(assert (=> d!31039 (= lt!57044 (ListLongMap!1592 lt!57043))))

(declare-fun lt!57045 () Unit!3403)

(declare-fun lt!57042 () Unit!3403)

(assert (=> d!31039 (= lt!57045 lt!57042)))

(assert (=> d!31039 (= (getValueByKey!158 lt!57043 (_1!1231 (ite c!19438 (ite c!19444 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))) (Some!163 (_2!1231 (ite c!19438 (ite c!19444 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))))))

(assert (=> d!31039 (= lt!57042 (lemmaContainsTupThenGetReturnValue!74 lt!57043 (_1!1231 (ite c!19438 (ite c!19444 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))) (_2!1231 (ite c!19438 (ite c!19444 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))))))

(assert (=> d!31039 (= lt!57043 (insertStrictlySorted!77 (toList!811 e!71499) (_1!1231 (ite c!19438 (ite c!19444 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))) (_2!1231 (ite c!19438 (ite c!19444 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))))))

(assert (=> d!31039 (= (+!150 e!71499 (ite c!19438 (ite c!19444 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))) lt!57044)))

(declare-fun b!110492 () Bool)

(declare-fun res!54634 () Bool)

(assert (=> b!110492 (=> (not res!54634) (not e!71857))))

(assert (=> b!110492 (= res!54634 (= (getValueByKey!158 (toList!811 lt!57044) (_1!1231 (ite c!19438 (ite c!19444 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))) (Some!163 (_2!1231 (ite c!19438 (ite c!19444 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))))

(declare-fun b!110493 () Bool)

(assert (=> b!110493 (= e!71857 (contains!839 (toList!811 lt!57044) (ite c!19438 (ite c!19444 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))

(assert (= (and d!31039 res!54633) b!110492))

(assert (= (and b!110492 res!54634) b!110493))

(declare-fun m!125391 () Bool)

(assert (=> d!31039 m!125391))

(declare-fun m!125393 () Bool)

(assert (=> d!31039 m!125393))

(declare-fun m!125395 () Bool)

(assert (=> d!31039 m!125395))

(declare-fun m!125397 () Bool)

(assert (=> d!31039 m!125397))

(declare-fun m!125399 () Bool)

(assert (=> b!110492 m!125399))

(declare-fun m!125401 () Bool)

(assert (=> b!110493 m!125401))

(assert (=> bm!11694 d!31039))

(declare-fun d!31041 () Bool)

(declare-fun lt!57046 () Bool)

(assert (=> d!31041 (= lt!57046 (select (content!113 (toList!811 lt!56639)) lt!56457))))

(declare-fun e!71859 () Bool)

(assert (=> d!31041 (= lt!57046 e!71859)))

(declare-fun res!54635 () Bool)

(assert (=> d!31041 (=> (not res!54635) (not e!71859))))

(assert (=> d!31041 (= res!54635 ((_ is Cons!1626) (toList!811 lt!56639)))))

(assert (=> d!31041 (= (contains!839 (toList!811 lt!56639) lt!56457) lt!57046)))

(declare-fun b!110494 () Bool)

(declare-fun e!71858 () Bool)

(assert (=> b!110494 (= e!71859 e!71858)))

(declare-fun res!54636 () Bool)

(assert (=> b!110494 (=> res!54636 e!71858)))

(assert (=> b!110494 (= res!54636 (= (h!2225 (toList!811 lt!56639)) lt!56457))))

(declare-fun b!110495 () Bool)

(assert (=> b!110495 (= e!71858 (contains!839 (t!5767 (toList!811 lt!56639)) lt!56457))))

(assert (= (and d!31041 res!54635) b!110494))

(assert (= (and b!110494 (not res!54636)) b!110495))

(declare-fun m!125403 () Bool)

(assert (=> d!31041 m!125403))

(declare-fun m!125405 () Bool)

(assert (=> d!31041 m!125405))

(declare-fun m!125407 () Bool)

(assert (=> b!110495 m!125407))

(assert (=> b!109959 d!31041))

(declare-fun d!31043 () Bool)

(assert (=> d!31043 (= (apply!100 lt!56699 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1350 (getValueByKey!158 (toList!811 lt!56699) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!4544 () Bool)

(assert (= bs!4544 d!31043))

(assert (=> bs!4544 m!124503))

(assert (=> bs!4544 m!124845))

(assert (=> bs!4544 m!124845))

(declare-fun m!125409 () Bool)

(assert (=> bs!4544 m!125409))

(assert (=> b!110017 d!31043))

(assert (=> b!110017 d!31033))

(assert (=> b!110033 d!30847))

(assert (=> b!109938 d!31033))

(declare-fun d!31045 () Bool)

(declare-fun e!71860 () Bool)

(assert (=> d!31045 e!71860))

(declare-fun res!54637 () Bool)

(assert (=> d!31045 (=> (not res!54637) (not e!71860))))

(declare-fun lt!57049 () ListLongMap!1591)

(assert (=> d!31045 (= res!54637 (contains!838 lt!57049 (_1!1231 (tuple2!2441 lt!56610 lt!56616))))))

(declare-fun lt!57048 () List!1630)

(assert (=> d!31045 (= lt!57049 (ListLongMap!1592 lt!57048))))

(declare-fun lt!57050 () Unit!3403)

(declare-fun lt!57047 () Unit!3403)

(assert (=> d!31045 (= lt!57050 lt!57047)))

(assert (=> d!31045 (= (getValueByKey!158 lt!57048 (_1!1231 (tuple2!2441 lt!56610 lt!56616))) (Some!163 (_2!1231 (tuple2!2441 lt!56610 lt!56616))))))

(assert (=> d!31045 (= lt!57047 (lemmaContainsTupThenGetReturnValue!74 lt!57048 (_1!1231 (tuple2!2441 lt!56610 lt!56616)) (_2!1231 (tuple2!2441 lt!56610 lt!56616))))))

(assert (=> d!31045 (= lt!57048 (insertStrictlySorted!77 (toList!811 lt!56613) (_1!1231 (tuple2!2441 lt!56610 lt!56616)) (_2!1231 (tuple2!2441 lt!56610 lt!56616))))))

(assert (=> d!31045 (= (+!150 lt!56613 (tuple2!2441 lt!56610 lt!56616)) lt!57049)))

(declare-fun b!110496 () Bool)

(declare-fun res!54638 () Bool)

(assert (=> b!110496 (=> (not res!54638) (not e!71860))))

(assert (=> b!110496 (= res!54638 (= (getValueByKey!158 (toList!811 lt!57049) (_1!1231 (tuple2!2441 lt!56610 lt!56616))) (Some!163 (_2!1231 (tuple2!2441 lt!56610 lt!56616)))))))

(declare-fun b!110497 () Bool)

(assert (=> b!110497 (= e!71860 (contains!839 (toList!811 lt!57049) (tuple2!2441 lt!56610 lt!56616)))))

(assert (= (and d!31045 res!54637) b!110496))

(assert (= (and b!110496 res!54638) b!110497))

(declare-fun m!125411 () Bool)

(assert (=> d!31045 m!125411))

(declare-fun m!125413 () Bool)

(assert (=> d!31045 m!125413))

(declare-fun m!125415 () Bool)

(assert (=> d!31045 m!125415))

(declare-fun m!125417 () Bool)

(assert (=> d!31045 m!125417))

(declare-fun m!125419 () Bool)

(assert (=> b!110496 m!125419))

(declare-fun m!125421 () Bool)

(assert (=> b!110497 m!125421))

(assert (=> b!109938 d!31045))

(declare-fun d!31047 () Bool)

(declare-fun e!71861 () Bool)

(assert (=> d!31047 e!71861))

(declare-fun res!54639 () Bool)

(assert (=> d!31047 (=> (not res!54639) (not e!71861))))

(declare-fun lt!57053 () ListLongMap!1591)

(assert (=> d!31047 (= res!54639 (contains!838 lt!57053 (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!57052 () List!1630)

(assert (=> d!31047 (= lt!57053 (ListLongMap!1592 lt!57052))))

(declare-fun lt!57054 () Unit!3403)

(declare-fun lt!57051 () Unit!3403)

(assert (=> d!31047 (= lt!57054 lt!57051)))

(assert (=> d!31047 (= (getValueByKey!158 lt!57052 (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!163 (_2!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!31047 (= lt!57051 (lemmaContainsTupThenGetReturnValue!74 lt!57052 (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!31047 (= lt!57052 (insertStrictlySorted!77 (toList!811 call!11718) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!31047 (= (+!150 call!11718 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!57053)))

(declare-fun b!110498 () Bool)

(declare-fun res!54640 () Bool)

(assert (=> b!110498 (=> (not res!54640) (not e!71861))))

(assert (=> b!110498 (= res!54640 (= (getValueByKey!158 (toList!811 lt!57053) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!163 (_2!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!110499 () Bool)

(assert (=> b!110499 (= e!71861 (contains!839 (toList!811 lt!57053) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!31047 res!54639) b!110498))

(assert (= (and b!110498 res!54640) b!110499))

(declare-fun m!125423 () Bool)

(assert (=> d!31047 m!125423))

(declare-fun m!125425 () Bool)

(assert (=> d!31047 m!125425))

(declare-fun m!125427 () Bool)

(assert (=> d!31047 m!125427))

(declare-fun m!125429 () Bool)

(assert (=> d!31047 m!125429))

(declare-fun m!125431 () Bool)

(assert (=> b!110498 m!125431))

(declare-fun m!125433 () Bool)

(assert (=> b!110499 m!125433))

(assert (=> b!109938 d!31047))

(declare-fun d!31049 () Bool)

(declare-fun e!71862 () Bool)

(assert (=> d!31049 e!71862))

(declare-fun res!54641 () Bool)

(assert (=> d!31049 (=> res!54641 e!71862)))

(declare-fun lt!57055 () Bool)

(assert (=> d!31049 (= res!54641 (not lt!57055))))

(declare-fun lt!57056 () Bool)

(assert (=> d!31049 (= lt!57055 lt!57056)))

(declare-fun lt!57058 () Unit!3403)

(declare-fun e!71863 () Unit!3403)

(assert (=> d!31049 (= lt!57058 e!71863)))

(declare-fun c!19603 () Bool)

(assert (=> d!31049 (= c!19603 lt!57056)))

(assert (=> d!31049 (= lt!57056 (containsKey!162 (toList!811 (+!150 lt!56613 (tuple2!2441 lt!56610 lt!56616))) lt!56614))))

(assert (=> d!31049 (= (contains!838 (+!150 lt!56613 (tuple2!2441 lt!56610 lt!56616)) lt!56614) lt!57055)))

(declare-fun b!110500 () Bool)

(declare-fun lt!57057 () Unit!3403)

(assert (=> b!110500 (= e!71863 lt!57057)))

(assert (=> b!110500 (= lt!57057 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 (+!150 lt!56613 (tuple2!2441 lt!56610 lt!56616))) lt!56614))))

(assert (=> b!110500 (isDefined!111 (getValueByKey!158 (toList!811 (+!150 lt!56613 (tuple2!2441 lt!56610 lt!56616))) lt!56614))))

(declare-fun b!110501 () Bool)

(declare-fun Unit!3433 () Unit!3403)

(assert (=> b!110501 (= e!71863 Unit!3433)))

(declare-fun b!110502 () Bool)

(assert (=> b!110502 (= e!71862 (isDefined!111 (getValueByKey!158 (toList!811 (+!150 lt!56613 (tuple2!2441 lt!56610 lt!56616))) lt!56614)))))

(assert (= (and d!31049 c!19603) b!110500))

(assert (= (and d!31049 (not c!19603)) b!110501))

(assert (= (and d!31049 (not res!54641)) b!110502))

(declare-fun m!125435 () Bool)

(assert (=> d!31049 m!125435))

(declare-fun m!125437 () Bool)

(assert (=> b!110500 m!125437))

(declare-fun m!125439 () Bool)

(assert (=> b!110500 m!125439))

(assert (=> b!110500 m!125439))

(declare-fun m!125441 () Bool)

(assert (=> b!110500 m!125441))

(assert (=> b!110502 m!125439))

(assert (=> b!110502 m!125439))

(assert (=> b!110502 m!125441))

(assert (=> b!109938 d!31049))

(declare-fun d!31051 () Bool)

(assert (=> d!31051 (not (contains!838 (+!150 lt!56613 (tuple2!2441 lt!56610 lt!56616)) lt!56614))))

(declare-fun lt!57061 () Unit!3403)

(declare-fun choose!694 (ListLongMap!1591 (_ BitVec 64) V!3243 (_ BitVec 64)) Unit!3403)

(assert (=> d!31051 (= lt!57061 (choose!694 lt!56613 lt!56610 lt!56616 lt!56614))))

(declare-fun e!71866 () Bool)

(assert (=> d!31051 e!71866))

(declare-fun res!54644 () Bool)

(assert (=> d!31051 (=> (not res!54644) (not e!71866))))

(assert (=> d!31051 (= res!54644 (not (contains!838 lt!56613 lt!56614)))))

(assert (=> d!31051 (= (addStillNotContains!48 lt!56613 lt!56610 lt!56616 lt!56614) lt!57061)))

(declare-fun b!110506 () Bool)

(assert (=> b!110506 (= e!71866 (not (= lt!56610 lt!56614)))))

(assert (= (and d!31051 res!54644) b!110506))

(assert (=> d!31051 m!124515))

(assert (=> d!31051 m!124515))

(assert (=> d!31051 m!124517))

(declare-fun m!125443 () Bool)

(assert (=> d!31051 m!125443))

(declare-fun m!125445 () Bool)

(assert (=> d!31051 m!125445))

(assert (=> b!109938 d!31051))

(declare-fun d!31053 () Bool)

(assert (=> d!31053 (= (get!1348 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) from!355) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2929 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(assert (=> b!110054 d!31053))

(declare-fun b!110516 () Bool)

(declare-fun res!54653 () Bool)

(declare-fun e!71869 () Bool)

(assert (=> b!110516 (=> (not res!54653) (not e!71869))))

(declare-fun size!2342 (LongMapFixedSize!918) (_ BitVec 32))

(assert (=> b!110516 (= res!54653 (bvsge (size!2342 newMap!16) (_size!508 newMap!16)))))

(declare-fun d!31055 () Bool)

(declare-fun res!54655 () Bool)

(assert (=> d!31055 (=> (not res!54655) (not e!71869))))

(assert (=> d!31055 (= res!54655 (validMask!0 (mask!6795 newMap!16)))))

(assert (=> d!31055 (= (simpleValid!76 newMap!16) e!71869)))

(declare-fun b!110515 () Bool)

(declare-fun res!54656 () Bool)

(assert (=> b!110515 (=> (not res!54656) (not e!71869))))

(assert (=> b!110515 (= res!54656 (and (= (size!2339 (_values!2610 newMap!16)) (bvadd (mask!6795 newMap!16) #b00000000000000000000000000000001)) (= (size!2338 (_keys!4341 newMap!16)) (size!2339 (_values!2610 newMap!16))) (bvsge (_size!508 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!508 newMap!16) (bvadd (mask!6795 newMap!16) #b00000000000000000000000000000001))))))

(declare-fun b!110518 () Bool)

(assert (=> b!110518 (= e!71869 (and (bvsge (extraKeys!2424 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!2424 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!508 newMap!16) #b00000000000000000000000000000000)))))

(declare-fun b!110517 () Bool)

(declare-fun res!54654 () Bool)

(assert (=> b!110517 (=> (not res!54654) (not e!71869))))

(assert (=> b!110517 (= res!54654 (= (size!2342 newMap!16) (bvadd (_size!508 newMap!16) (bvsdiv (bvadd (extraKeys!2424 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(assert (= (and d!31055 res!54655) b!110515))

(assert (= (and b!110515 res!54656) b!110516))

(assert (= (and b!110516 res!54653) b!110517))

(assert (= (and b!110517 res!54654) b!110518))

(declare-fun m!125447 () Bool)

(assert (=> b!110516 m!125447))

(assert (=> d!31055 m!124669))

(assert (=> b!110517 m!125447))

(assert (=> d!30863 d!31055))

(declare-fun d!31057 () Bool)

(declare-fun res!54657 () Bool)

(declare-fun e!71870 () Bool)

(assert (=> d!31057 (=> res!54657 e!71870)))

(assert (=> d!31057 (= res!54657 (= (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(assert (=> d!31057 (= (arrayContainsKey!0 (_keys!4341 (v!2930 (underlying!370 thiss!992))) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) e!71870)))

(declare-fun b!110519 () Bool)

(declare-fun e!71871 () Bool)

(assert (=> b!110519 (= e!71870 e!71871)))

(declare-fun res!54658 () Bool)

(assert (=> b!110519 (=> (not res!54658) (not e!71871))))

(assert (=> b!110519 (= res!54658 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2338 (_keys!4341 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun b!110520 () Bool)

(assert (=> b!110520 (= e!71871 (arrayContainsKey!0 (_keys!4341 (v!2930 (underlying!370 thiss!992))) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!31057 (not res!54657)) b!110519))

(assert (= (and b!110519 res!54658) b!110520))

(assert (=> d!31057 m!124865))

(assert (=> b!110520 m!124315))

(declare-fun m!125449 () Bool)

(assert (=> b!110520 m!125449))

(assert (=> b!110028 d!31057))

(declare-fun b!110521 () Bool)

(declare-fun e!71872 () Option!164)

(assert (=> b!110521 (= e!71872 (Some!163 (_2!1231 (h!2225 (toList!811 lt!56631)))))))

(declare-fun b!110523 () Bool)

(declare-fun e!71873 () Option!164)

(assert (=> b!110523 (= e!71873 (getValueByKey!158 (t!5767 (toList!811 lt!56631)) (_1!1231 lt!56454)))))

(declare-fun d!31059 () Bool)

(declare-fun c!19604 () Bool)

(assert (=> d!31059 (= c!19604 (and ((_ is Cons!1626) (toList!811 lt!56631)) (= (_1!1231 (h!2225 (toList!811 lt!56631))) (_1!1231 lt!56454))))))

(assert (=> d!31059 (= (getValueByKey!158 (toList!811 lt!56631) (_1!1231 lt!56454)) e!71872)))

(declare-fun b!110522 () Bool)

(assert (=> b!110522 (= e!71872 e!71873)))

(declare-fun c!19605 () Bool)

(assert (=> b!110522 (= c!19605 (and ((_ is Cons!1626) (toList!811 lt!56631)) (not (= (_1!1231 (h!2225 (toList!811 lt!56631))) (_1!1231 lt!56454)))))))

(declare-fun b!110524 () Bool)

(assert (=> b!110524 (= e!71873 None!162)))

(assert (= (and d!31059 c!19604) b!110521))

(assert (= (and d!31059 (not c!19604)) b!110522))

(assert (= (and b!110522 c!19605) b!110523))

(assert (= (and b!110522 (not c!19605)) b!110524))

(declare-fun m!125451 () Bool)

(assert (=> b!110523 m!125451))

(assert (=> b!109954 d!31059))

(declare-fun d!31061 () Bool)

(declare-fun e!71876 () Bool)

(assert (=> d!31061 e!71876))

(declare-fun c!19608 () Bool)

(assert (=> d!31061 (= c!19608 (and (not (= (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!31061 true))

(declare-fun _$29!147 () Unit!3403)

(assert (=> d!31061 (= (choose!683 (_keys!4341 (v!2930 (underlying!370 thiss!992))) (_values!2610 (v!2930 (underlying!370 thiss!992))) (mask!6795 (v!2930 (underlying!370 thiss!992))) (extraKeys!2424 (v!2930 (underlying!370 thiss!992))) (zeroValue!2498 (v!2930 (underlying!370 thiss!992))) (minValue!2498 (v!2930 (underlying!370 thiss!992))) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2627 (v!2930 (underlying!370 thiss!992)))) _$29!147)))

(declare-fun b!110529 () Bool)

(assert (=> b!110529 (= e!71876 (arrayContainsKey!0 (_keys!4341 (v!2930 (underlying!370 thiss!992))) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!110530 () Bool)

(assert (=> b!110530 (= e!71876 (ite (= (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2424 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2424 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!31061 c!19608) b!110529))

(assert (= (and d!31061 (not c!19608)) b!110530))

(assert (=> b!110529 m!124315))

(assert (=> b!110529 m!124319))

(assert (=> d!30849 d!31061))

(assert (=> d!30849 d!30831))

(assert (=> b!109897 d!30931))

(declare-fun d!31063 () Bool)

(declare-fun e!71877 () Bool)

(assert (=> d!31063 e!71877))

(declare-fun res!54659 () Bool)

(assert (=> d!31063 (=> res!54659 e!71877)))

(declare-fun lt!57062 () Bool)

(assert (=> d!31063 (= res!54659 (not lt!57062))))

(declare-fun lt!57063 () Bool)

(assert (=> d!31063 (= lt!57062 lt!57063)))

(declare-fun lt!57065 () Unit!3403)

(declare-fun e!71878 () Unit!3403)

(assert (=> d!31063 (= lt!57065 e!71878)))

(declare-fun c!19609 () Bool)

(assert (=> d!31063 (= c!19609 lt!57063)))

(assert (=> d!31063 (= lt!57063 (containsKey!162 (toList!811 lt!56612) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!31063 (= (contains!838 lt!56612 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!57062)))

(declare-fun b!110531 () Bool)

(declare-fun lt!57064 () Unit!3403)

(assert (=> b!110531 (= e!71878 lt!57064)))

(assert (=> b!110531 (= lt!57064 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 lt!56612) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!110531 (isDefined!111 (getValueByKey!158 (toList!811 lt!56612) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!110532 () Bool)

(declare-fun Unit!3434 () Unit!3403)

(assert (=> b!110532 (= e!71878 Unit!3434)))

(declare-fun b!110533 () Bool)

(assert (=> b!110533 (= e!71877 (isDefined!111 (getValueByKey!158 (toList!811 lt!56612) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!31063 c!19609) b!110531))

(assert (= (and d!31063 (not c!19609)) b!110532))

(assert (= (and d!31063 (not res!54659)) b!110533))

(assert (=> d!31063 m!124503))

(declare-fun m!125453 () Bool)

(assert (=> d!31063 m!125453))

(assert (=> b!110531 m!124503))

(declare-fun m!125455 () Bool)

(assert (=> b!110531 m!125455))

(assert (=> b!110531 m!124503))

(assert (=> b!110531 m!125325))

(assert (=> b!110531 m!125325))

(declare-fun m!125457 () Bool)

(assert (=> b!110531 m!125457))

(assert (=> b!110533 m!124503))

(assert (=> b!110533 m!125325))

(assert (=> b!110533 m!125325))

(assert (=> b!110533 m!125457))

(assert (=> b!109940 d!31063))

(declare-fun d!31065 () Bool)

(assert (=> d!31065 (= (apply!100 lt!56699 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1350 (getValueByKey!158 (toList!811 lt!56699) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4545 () Bool)

(assert (= bs!4545 d!31065))

(assert (=> bs!4545 m!125167))

(assert (=> bs!4545 m!125167))

(declare-fun m!125459 () Bool)

(assert (=> bs!4545 m!125459))

(assert (=> b!110013 d!31065))

(assert (=> b!109895 d!30907))

(declare-fun d!31067 () Bool)

(declare-fun res!54665 () Bool)

(declare-fun e!71885 () Bool)

(assert (=> d!31067 (=> res!54665 e!71885)))

(assert (=> d!31067 (= res!54665 (bvsge #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))))))

(assert (=> d!31067 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4341 newMap!16) (mask!6795 newMap!16)) e!71885)))

(declare-fun b!110542 () Bool)

(declare-fun e!71886 () Bool)

(declare-fun call!11808 () Bool)

(assert (=> b!110542 (= e!71886 call!11808)))

(declare-fun b!110543 () Bool)

(declare-fun e!71887 () Bool)

(assert (=> b!110543 (= e!71887 call!11808)))

(declare-fun b!110544 () Bool)

(assert (=> b!110544 (= e!71885 e!71886)))

(declare-fun c!19612 () Bool)

(assert (=> b!110544 (= c!19612 (validKeyInArray!0 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!11805 () Bool)

(assert (=> bm!11805 (= call!11808 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4341 newMap!16) (mask!6795 newMap!16)))))

(declare-fun b!110545 () Bool)

(assert (=> b!110545 (= e!71886 e!71887)))

(declare-fun lt!57073 () (_ BitVec 64))

(assert (=> b!110545 (= lt!57073 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!57074 () Unit!3403)

(assert (=> b!110545 (= lt!57074 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4341 newMap!16) lt!57073 #b00000000000000000000000000000000))))

(assert (=> b!110545 (arrayContainsKey!0 (_keys!4341 newMap!16) lt!57073 #b00000000000000000000000000000000)))

(declare-fun lt!57072 () Unit!3403)

(assert (=> b!110545 (= lt!57072 lt!57074)))

(declare-fun res!54664 () Bool)

(assert (=> b!110545 (= res!54664 (= (seekEntryOrOpen!0 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000) (_keys!4341 newMap!16) (mask!6795 newMap!16)) (Found!261 #b00000000000000000000000000000000)))))

(assert (=> b!110545 (=> (not res!54664) (not e!71887))))

(assert (= (and d!31067 (not res!54665)) b!110544))

(assert (= (and b!110544 c!19612) b!110545))

(assert (= (and b!110544 (not c!19612)) b!110542))

(assert (= (and b!110545 res!54664) b!110543))

(assert (= (or b!110543 b!110542) bm!11805))

(assert (=> b!110544 m!124693))

(assert (=> b!110544 m!124693))

(assert (=> b!110544 m!124695))

(declare-fun m!125461 () Bool)

(assert (=> bm!11805 m!125461))

(assert (=> b!110545 m!124693))

(declare-fun m!125463 () Bool)

(assert (=> b!110545 m!125463))

(declare-fun m!125465 () Bool)

(assert (=> b!110545 m!125465))

(assert (=> b!110545 m!124693))

(declare-fun m!125467 () Bool)

(assert (=> b!110545 m!125467))

(assert (=> b!110063 d!31067))

(declare-fun b!110547 () Bool)

(declare-fun e!71888 () Bool)

(assert (=> b!110547 (= e!71888 tp_is_empty!2697)))

(declare-fun b!110546 () Bool)

(declare-fun e!71889 () Bool)

(assert (=> b!110546 (= e!71889 tp_is_empty!2697)))

(declare-fun mapNonEmpty!4011 () Bool)

(declare-fun mapRes!4011 () Bool)

(declare-fun tp!10041 () Bool)

(assert (=> mapNonEmpty!4011 (= mapRes!4011 (and tp!10041 e!71889))))

(declare-fun mapRest!4011 () (Array (_ BitVec 32) ValueCell!1005))

(declare-fun mapValue!4011 () ValueCell!1005)

(declare-fun mapKey!4011 () (_ BitVec 32))

(assert (=> mapNonEmpty!4011 (= mapRest!4009 (store mapRest!4011 mapKey!4011 mapValue!4011))))

(declare-fun condMapEmpty!4011 () Bool)

(declare-fun mapDefault!4011 () ValueCell!1005)

(assert (=> mapNonEmpty!4009 (= condMapEmpty!4011 (= mapRest!4009 ((as const (Array (_ BitVec 32) ValueCell!1005)) mapDefault!4011)))))

(assert (=> mapNonEmpty!4009 (= tp!10039 (and e!71888 mapRes!4011))))

(declare-fun mapIsEmpty!4011 () Bool)

(assert (=> mapIsEmpty!4011 mapRes!4011))

(assert (= (and mapNonEmpty!4009 condMapEmpty!4011) mapIsEmpty!4011))

(assert (= (and mapNonEmpty!4009 (not condMapEmpty!4011)) mapNonEmpty!4011))

(assert (= (and mapNonEmpty!4011 ((_ is ValueCellFull!1005) mapValue!4011)) b!110546))

(assert (= (and mapNonEmpty!4009 ((_ is ValueCellFull!1005) mapDefault!4011)) b!110547))

(declare-fun m!125469 () Bool)

(assert (=> mapNonEmpty!4011 m!125469))

(declare-fun b!110549 () Bool)

(declare-fun e!71890 () Bool)

(assert (=> b!110549 (= e!71890 tp_is_empty!2697)))

(declare-fun b!110548 () Bool)

(declare-fun e!71891 () Bool)

(assert (=> b!110548 (= e!71891 tp_is_empty!2697)))

(declare-fun mapNonEmpty!4012 () Bool)

(declare-fun mapRes!4012 () Bool)

(declare-fun tp!10042 () Bool)

(assert (=> mapNonEmpty!4012 (= mapRes!4012 (and tp!10042 e!71891))))

(declare-fun mapValue!4012 () ValueCell!1005)

(declare-fun mapRest!4012 () (Array (_ BitVec 32) ValueCell!1005))

(declare-fun mapKey!4012 () (_ BitVec 32))

(assert (=> mapNonEmpty!4012 (= mapRest!4010 (store mapRest!4012 mapKey!4012 mapValue!4012))))

(declare-fun condMapEmpty!4012 () Bool)

(declare-fun mapDefault!4012 () ValueCell!1005)

(assert (=> mapNonEmpty!4010 (= condMapEmpty!4012 (= mapRest!4010 ((as const (Array (_ BitVec 32) ValueCell!1005)) mapDefault!4012)))))

(assert (=> mapNonEmpty!4010 (= tp!10040 (and e!71890 mapRes!4012))))

(declare-fun mapIsEmpty!4012 () Bool)

(assert (=> mapIsEmpty!4012 mapRes!4012))

(assert (= (and mapNonEmpty!4010 condMapEmpty!4012) mapIsEmpty!4012))

(assert (= (and mapNonEmpty!4010 (not condMapEmpty!4012)) mapNonEmpty!4012))

(assert (= (and mapNonEmpty!4012 ((_ is ValueCellFull!1005) mapValue!4012)) b!110548))

(assert (= (and mapNonEmpty!4010 ((_ is ValueCellFull!1005) mapDefault!4012)) b!110549))

(declare-fun m!125471 () Bool)

(assert (=> mapNonEmpty!4012 m!125471))

(declare-fun b_lambda!4945 () Bool)

(assert (= b_lambda!4939 (or (and b!109701 b_free!2561) (and b!109708 b_free!2563 (= (defaultEntry!2627 newMap!16) (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))))) b_lambda!4945)))

(declare-fun b_lambda!4947 () Bool)

(assert (= b_lambda!4941 (or (and b!109701 b_free!2561 (= (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) (defaultEntry!2627 newMap!16))) (and b!109708 b_free!2563) b_lambda!4947)))

(declare-fun b_lambda!4949 () Bool)

(assert (= b_lambda!4935 (or (and b!109701 b_free!2561 (= (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) (defaultEntry!2627 newMap!16))) (and b!109708 b_free!2563) b_lambda!4949)))

(declare-fun b_lambda!4951 () Bool)

(assert (= b_lambda!4943 (or (and b!109701 b_free!2561 (= (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) (defaultEntry!2627 newMap!16))) (and b!109708 b_free!2563) b_lambda!4951)))

(declare-fun b_lambda!4953 () Bool)

(assert (= b_lambda!4937 (or (and b!109701 b_free!2561) (and b!109708 b_free!2563 (= (defaultEntry!2627 newMap!16) (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))))) b_lambda!4953)))

(check-sat (not b!110112) (not d!30963) (not b_lambda!4947) (not b!110474) (not d!30975) (not b!110253) (not bm!11787) (not b!110394) (not b!110358) (not d!30951) (not bm!11764) (not d!30867) (not b!110500) (not b!110092) (not bm!11768) (not b!110374) (not b!110516) (not b!110239) (not b_next!2561) (not b!110166) (not bm!11772) (not d!31011) (not b!110404) (not d!30991) (not b!110238) (not b!110300) (not bm!11805) (not b!110545) (not b!110277) (not b_lambda!4951) (not b!110433) (not b!110498) (not b!110184) (not b!110129) (not b!110364) (not b!110273) b_and!6805 (not b!110309) (not d!30997) (not bm!11769) (not b!110179) (not b!110335) (not d!30953) (not d!30911) (not d!31035) (not b!110372) (not d!30935) tp_is_empty!2697 (not b!110131) (not d!30913) (not b!110140) (not b!110496) (not b!110424) (not b!110258) (not d!30875) (not bm!11785) (not d!30901) (not bm!11743) (not b!110306) (not d!31017) (not d!30949) (not b!110398) (not b!110237) (not b!110492) (not b!110180) (not d!30877) (not d!30881) (not mapNonEmpty!4012) (not d!31047) (not b!110384) (not d!30981) (not b!110310) (not b_lambda!4949) (not d!30971) (not d!30985) (not d!31065) (not b!110257) (not b!110250) (not b!110367) (not b!110252) (not d!31031) (not d!30905) (not b!110281) (not b!110403) (not b!110359) (not b_next!2563) (not b!110330) (not b!110473) (not b!110491) (not b!110099) (not b!110321) (not b!110406) (not d!31005) (not b!110407) (not b!110390) (not b!110337) (not b!110434) (not b!110101) (not b!110098) (not b!110482) (not b!110187) (not bm!11779) (not b!110141) (not b!110077) (not b!110274) (not d!30899) (not bm!11763) (not b!110360) (not b!110324) (not d!30873) (not b!110174) (not b!110297) (not d!30893) (not b!110234) (not b!110363) (not b!110329) (not b!110476) (not bm!11775) (not b!110185) (not b!110351) (not b!110342) (not d!31041) (not d!30891) (not b!110128) (not d!31025) (not b!110341) (not b!110109) (not d!30957) (not d!30917) (not bm!11777) (not d!31007) (not b_lambda!4933) (not b!110327) (not b!110520) (not d!30943) (not d!30977) (not b!110432) (not b!110255) (not bm!11755) (not b!110284) (not b!110117) (not d!30987) (not b!110322) (not d!30969) (not d!30895) (not b!110168) (not b!110090) (not d!30885) (not b!110314) (not d!30937) (not d!30955) (not b!110305) (not d!30947) (not bm!11800) (not d!30879) (not b!110380) (not mapNonEmpty!4011) (not bm!11746) (not b!110529) (not b!110400) (not b!110120) (not b!110411) (not bm!11742) (not b!110235) (not d!30865) (not bm!11741) (not d!31015) (not d!30907) (not d!30931) (not b!110113) (not d!31003) (not b!110408) (not b!110531) (not b!110425) (not d!30945) (not b!110402) (not b!110502) (not b!110533) (not d!30921) (not b!110497) (not d!30973) (not d!31045) (not b!110493) (not d!30979) (not d!30909) (not b!110523) (not b!110414) (not b_lambda!4921) (not b!110317) (not b!110499) (not bm!11758) (not b!110349) (not d!31019) (not b!110249) (not b!110366) (not d!30961) (not d!30965) (not b!110383) (not b!110401) (not d!30889) (not d!31023) (not b!110261) (not b!110177) (not b!110192) (not b!110259) (not b!110371) (not b!110088) (not d!31029) (not b!110352) (not d!30883) (not bm!11767) (not b!110495) (not b_lambda!4953) (not b!110095) (not d!30967) (not d!30919) (not b!110354) (not b!110419) (not b!110356) (not b!110248) (not bm!11790) (not b!110412) (not bm!11786) (not b!110272) (not d!31055) (not d!31009) (not b!110307) (not b!110134) (not b!110381) (not d!30923) (not bm!11802) (not b!110417) (not b!110240) (not b!110481) (not b!110243) (not d!31049) (not d!30989) (not b!110369) (not d!30995) (not b!110110) (not bm!11778) (not d!30939) (not bm!11801) (not b!110334) (not b!110165) (not b_lambda!4931) (not d!31063) (not b!110385) (not b!110247) (not d!31051) (not bm!11782) (not b!110260) (not b!110544) (not b!110172) (not b!110264) (not bm!11765) (not b!110276) (not b!110350) (not b!110517) (not b!110479) (not b!110409) (not d!31043) (not b!110396) (not b!110108) (not b!110355) (not b!110427) (not b!110103) (not b!110405) (not d!30959) (not b_lambda!4929) (not d!31039) b_and!6803 (not b!110251) (not b!110267) (not b_lambda!4945) (not d!31013) (not d!31027) (not b!110361) (not b!110420))
(check-sat b_and!6803 b_and!6805 (not b_next!2561) (not b_next!2563))
(get-model)

(assert (=> d!30943 d!30941))

(declare-fun d!31069 () Bool)

(assert (=> d!31069 (= (getValueByKey!158 lt!56638 (_1!1231 lt!56457)) (Some!163 (_2!1231 lt!56457)))))

(assert (=> d!31069 true))

(declare-fun _$22!445 () Unit!3403)

(assert (=> d!31069 (= (choose!687 lt!56638 (_1!1231 lt!56457) (_2!1231 lt!56457)) _$22!445)))

(declare-fun bs!4546 () Bool)

(assert (= bs!4546 d!31069))

(assert (=> bs!4546 m!124563))

(assert (=> d!30943 d!31069))

(declare-fun d!31071 () Bool)

(declare-fun res!54670 () Bool)

(declare-fun e!71896 () Bool)

(assert (=> d!31071 (=> res!54670 e!71896)))

(assert (=> d!31071 (= res!54670 (or ((_ is Nil!1627) lt!56638) ((_ is Nil!1627) (t!5767 lt!56638))))))

(assert (=> d!31071 (= (isStrictlySorted!311 lt!56638) e!71896)))

(declare-fun b!110554 () Bool)

(declare-fun e!71897 () Bool)

(assert (=> b!110554 (= e!71896 e!71897)))

(declare-fun res!54671 () Bool)

(assert (=> b!110554 (=> (not res!54671) (not e!71897))))

(assert (=> b!110554 (= res!54671 (bvslt (_1!1231 (h!2225 lt!56638)) (_1!1231 (h!2225 (t!5767 lt!56638)))))))

(declare-fun b!110555 () Bool)

(assert (=> b!110555 (= e!71897 (isStrictlySorted!311 (t!5767 lt!56638)))))

(assert (= (and d!31071 (not res!54670)) b!110554))

(assert (= (and b!110554 res!54671) b!110555))

(declare-fun m!125473 () Bool)

(assert (=> b!110555 m!125473))

(assert (=> d!30943 d!31071))

(declare-fun d!31073 () Bool)

(declare-fun e!71898 () Bool)

(assert (=> d!31073 e!71898))

(declare-fun res!54672 () Bool)

(assert (=> d!31073 (=> res!54672 e!71898)))

(declare-fun lt!57075 () Bool)

(assert (=> d!31073 (= res!54672 (not lt!57075))))

(declare-fun lt!57076 () Bool)

(assert (=> d!31073 (= lt!57075 lt!57076)))

(declare-fun lt!57078 () Unit!3403)

(declare-fun e!71899 () Unit!3403)

(assert (=> d!31073 (= lt!57078 e!71899)))

(declare-fun c!19613 () Bool)

(assert (=> d!31073 (= c!19613 lt!57076)))

(assert (=> d!31073 (= lt!57076 (containsKey!162 (toList!811 lt!56798) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!31073 (= (contains!838 lt!56798 #b1000000000000000000000000000000000000000000000000000000000000000) lt!57075)))

(declare-fun b!110556 () Bool)

(declare-fun lt!57077 () Unit!3403)

(assert (=> b!110556 (= e!71899 lt!57077)))

(assert (=> b!110556 (= lt!57077 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 lt!56798) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!110556 (isDefined!111 (getValueByKey!158 (toList!811 lt!56798) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110557 () Bool)

(declare-fun Unit!3435 () Unit!3403)

(assert (=> b!110557 (= e!71899 Unit!3435)))

(declare-fun b!110558 () Bool)

(assert (=> b!110558 (= e!71898 (isDefined!111 (getValueByKey!158 (toList!811 lt!56798) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!31073 c!19613) b!110556))

(assert (= (and d!31073 (not c!19613)) b!110557))

(assert (= (and d!31073 (not res!54672)) b!110558))

(declare-fun m!125475 () Bool)

(assert (=> d!31073 m!125475))

(declare-fun m!125477 () Bool)

(assert (=> b!110556 m!125477))

(declare-fun m!125479 () Bool)

(assert (=> b!110556 m!125479))

(assert (=> b!110556 m!125479))

(declare-fun m!125481 () Bool)

(assert (=> b!110556 m!125481))

(assert (=> b!110558 m!125479))

(assert (=> b!110558 m!125479))

(assert (=> b!110558 m!125481))

(assert (=> b!110248 d!31073))

(declare-fun lt!57079 () Bool)

(declare-fun d!31075 () Bool)

(assert (=> d!31075 (= lt!57079 (select (content!113 (toList!811 lt!56866)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))))

(declare-fun e!71901 () Bool)

(assert (=> d!31075 (= lt!57079 e!71901)))

(declare-fun res!54673 () Bool)

(assert (=> d!31075 (=> (not res!54673) (not e!71901))))

(assert (=> d!31075 (= res!54673 ((_ is Cons!1626) (toList!811 lt!56866)))))

(assert (=> d!31075 (= (contains!839 (toList!811 lt!56866) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)) lt!57079)))

(declare-fun b!110559 () Bool)

(declare-fun e!71900 () Bool)

(assert (=> b!110559 (= e!71901 e!71900)))

(declare-fun res!54674 () Bool)

(assert (=> b!110559 (=> res!54674 e!71900)))

(assert (=> b!110559 (= res!54674 (= (h!2225 (toList!811 lt!56866)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))))

(declare-fun b!110560 () Bool)

(assert (=> b!110560 (= e!71900 (contains!839 (t!5767 (toList!811 lt!56866)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))))

(assert (= (and d!31075 res!54673) b!110559))

(assert (= (and b!110559 (not res!54674)) b!110560))

(declare-fun m!125483 () Bool)

(assert (=> d!31075 m!125483))

(declare-fun m!125485 () Bool)

(assert (=> d!31075 m!125485))

(declare-fun m!125487 () Bool)

(assert (=> b!110560 m!125487))

(assert (=> b!110342 d!31075))

(declare-fun d!31077 () Bool)

(assert (=> d!31077 (= (get!1349 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!110434 d!31077))

(declare-fun b!110561 () Bool)

(declare-fun e!71905 () Bool)

(declare-fun e!71906 () Bool)

(assert (=> b!110561 (= e!71905 e!71906)))

(declare-fun c!19615 () Bool)

(assert (=> b!110561 (= c!19615 (bvslt #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))))))

(declare-fun b!110562 () Bool)

(declare-fun e!71908 () Bool)

(assert (=> b!110562 (= e!71908 e!71905)))

(declare-fun c!19616 () Bool)

(declare-fun e!71902 () Bool)

(assert (=> b!110562 (= c!19616 e!71902)))

(declare-fun res!54678 () Bool)

(assert (=> b!110562 (=> (not res!54678) (not e!71902))))

(assert (=> b!110562 (= res!54678 (bvslt #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))))))

(declare-fun b!110563 () Bool)

(declare-fun lt!57085 () Unit!3403)

(declare-fun lt!57081 () Unit!3403)

(assert (=> b!110563 (= lt!57085 lt!57081)))

(declare-fun lt!57080 () (_ BitVec 64))

(declare-fun lt!57086 () V!3243)

(declare-fun lt!57084 () (_ BitVec 64))

(declare-fun lt!57083 () ListLongMap!1591)

(assert (=> b!110563 (not (contains!838 (+!150 lt!57083 (tuple2!2441 lt!57080 lt!57086)) lt!57084))))

(assert (=> b!110563 (= lt!57081 (addStillNotContains!48 lt!57083 lt!57080 lt!57086 lt!57084))))

(assert (=> b!110563 (= lt!57084 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!110563 (= lt!57086 (get!1347 (select (arr!2082 (ite c!19438 (_values!2610 newMap!16) lt!56569)) #b00000000000000000000000000000000) (dynLambda!390 (defaultEntry!2627 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!110563 (= lt!57080 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!11809 () ListLongMap!1591)

(assert (=> b!110563 (= lt!57083 call!11809)))

(declare-fun e!71904 () ListLongMap!1591)

(assert (=> b!110563 (= e!71904 (+!150 call!11809 (tuple2!2441 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000) (get!1347 (select (arr!2082 (ite c!19438 (_values!2610 newMap!16) lt!56569)) #b00000000000000000000000000000000) (dynLambda!390 (defaultEntry!2627 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!110564 () Bool)

(declare-fun res!54675 () Bool)

(assert (=> b!110564 (=> (not res!54675) (not e!71908))))

(declare-fun lt!57082 () ListLongMap!1591)

(assert (=> b!110564 (= res!54675 (not (contains!838 lt!57082 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!110565 () Bool)

(declare-fun e!71903 () Bool)

(assert (=> b!110565 (= e!71905 e!71903)))

(assert (=> b!110565 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))))))

(declare-fun res!54676 () Bool)

(assert (=> b!110565 (= res!54676 (contains!838 lt!57082 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!110565 (=> (not res!54676) (not e!71903))))

(declare-fun b!110566 () Bool)

(assert (=> b!110566 (= e!71902 (validKeyInArray!0 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!110566 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!110567 () Bool)

(declare-fun e!71907 () ListLongMap!1591)

(assert (=> b!110567 (= e!71907 e!71904)))

(declare-fun c!19614 () Bool)

(assert (=> b!110567 (= c!19614 (validKeyInArray!0 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!31079 () Bool)

(assert (=> d!31079 e!71908))

(declare-fun res!54677 () Bool)

(assert (=> d!31079 (=> (not res!54677) (not e!71908))))

(assert (=> d!31079 (= res!54677 (not (contains!838 lt!57082 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!31079 (= lt!57082 e!71907)))

(declare-fun c!19617 () Bool)

(assert (=> d!31079 (= c!19617 (bvsge #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))))))

(assert (=> d!31079 (validMask!0 (mask!6795 newMap!16))))

(assert (=> d!31079 (= (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (ite c!19438 (_values!2610 newMap!16) lt!56569) (mask!6795 newMap!16) (ite (and c!19438 c!19444) lt!56572 (extraKeys!2424 newMap!16)) (ite (and c!19438 c!19444) lt!56458 (zeroValue!2498 newMap!16)) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) lt!57082)))

(declare-fun b!110568 () Bool)

(assert (=> b!110568 (= e!71906 (= lt!57082 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (ite c!19438 (_values!2610 newMap!16) lt!56569) (mask!6795 newMap!16) (ite (and c!19438 c!19444) lt!56572 (extraKeys!2424 newMap!16)) (ite (and c!19438 c!19444) lt!56458 (zeroValue!2498 newMap!16)) (minValue!2498 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2627 newMap!16))))))

(declare-fun b!110569 () Bool)

(assert (=> b!110569 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))))))

(assert (=> b!110569 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2339 (ite c!19438 (_values!2610 newMap!16) lt!56569))))))

(assert (=> b!110569 (= e!71903 (= (apply!100 lt!57082 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)) (get!1347 (select (arr!2082 (ite c!19438 (_values!2610 newMap!16) lt!56569)) #b00000000000000000000000000000000) (dynLambda!390 (defaultEntry!2627 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bm!11806 () Bool)

(assert (=> bm!11806 (= call!11809 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (ite c!19438 (_values!2610 newMap!16) lt!56569) (mask!6795 newMap!16) (ite (and c!19438 c!19444) lt!56572 (extraKeys!2424 newMap!16)) (ite (and c!19438 c!19444) lt!56458 (zeroValue!2498 newMap!16)) (minValue!2498 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2627 newMap!16)))))

(declare-fun b!110570 () Bool)

(assert (=> b!110570 (= e!71904 call!11809)))

(declare-fun b!110571 () Bool)

(assert (=> b!110571 (= e!71906 (isEmpty!376 lt!57082))))

(declare-fun b!110572 () Bool)

(assert (=> b!110572 (= e!71907 (ListLongMap!1592 Nil!1627))))

(assert (= (and d!31079 c!19617) b!110572))

(assert (= (and d!31079 (not c!19617)) b!110567))

(assert (= (and b!110567 c!19614) b!110563))

(assert (= (and b!110567 (not c!19614)) b!110570))

(assert (= (or b!110563 b!110570) bm!11806))

(assert (= (and d!31079 res!54677) b!110564))

(assert (= (and b!110564 res!54675) b!110562))

(assert (= (and b!110562 res!54678) b!110566))

(assert (= (and b!110562 c!19616) b!110565))

(assert (= (and b!110562 (not c!19616)) b!110561))

(assert (= (and b!110565 res!54676) b!110569))

(assert (= (and b!110561 c!19615) b!110568))

(assert (= (and b!110561 (not c!19615)) b!110571))

(declare-fun b_lambda!4955 () Bool)

(assert (=> (not b_lambda!4955) (not b!110563)))

(assert (=> b!110563 t!5774))

(declare-fun b_and!6807 () Bool)

(assert (= b_and!6803 (and (=> t!5774 result!3537) b_and!6807)))

(assert (=> b!110563 t!5776))

(declare-fun b_and!6809 () Bool)

(assert (= b_and!6805 (and (=> t!5776 result!3539) b_and!6809)))

(declare-fun b_lambda!4957 () Bool)

(assert (=> (not b_lambda!4957) (not b!110569)))

(assert (=> b!110569 t!5774))

(declare-fun b_and!6811 () Bool)

(assert (= b_and!6807 (and (=> t!5774 result!3537) b_and!6811)))

(assert (=> b!110569 t!5776))

(declare-fun b_and!6813 () Bool)

(assert (= b_and!6809 (and (=> t!5776 result!3539) b_and!6813)))

(declare-fun m!125489 () Bool)

(assert (=> b!110568 m!125489))

(declare-fun m!125491 () Bool)

(assert (=> b!110564 m!125491))

(declare-fun m!125493 () Bool)

(assert (=> d!31079 m!125493))

(assert (=> d!31079 m!124669))

(assert (=> b!110569 m!124693))

(assert (=> b!110569 m!125007))

(assert (=> b!110569 m!124733))

(assert (=> b!110569 m!125009))

(assert (=> b!110569 m!124733))

(assert (=> b!110569 m!125007))

(assert (=> b!110569 m!124693))

(declare-fun m!125495 () Bool)

(assert (=> b!110569 m!125495))

(assert (=> b!110566 m!124693))

(assert (=> b!110566 m!124693))

(assert (=> b!110566 m!124695))

(assert (=> b!110567 m!124693))

(assert (=> b!110567 m!124693))

(assert (=> b!110567 m!124695))

(declare-fun m!125497 () Bool)

(assert (=> b!110571 m!125497))

(assert (=> b!110563 m!124693))

(declare-fun m!125499 () Bool)

(assert (=> b!110563 m!125499))

(declare-fun m!125501 () Bool)

(assert (=> b!110563 m!125501))

(declare-fun m!125503 () Bool)

(assert (=> b!110563 m!125503))

(assert (=> b!110563 m!124733))

(assert (=> b!110563 m!125007))

(assert (=> b!110563 m!125499))

(declare-fun m!125505 () Bool)

(assert (=> b!110563 m!125505))

(assert (=> b!110563 m!125007))

(assert (=> b!110563 m!124733))

(assert (=> b!110563 m!125009))

(assert (=> b!110565 m!124693))

(assert (=> b!110565 m!124693))

(declare-fun m!125507 () Bool)

(assert (=> b!110565 m!125507))

(assert (=> bm!11806 m!125489))

(assert (=> bm!11777 d!31079))

(declare-fun d!31081 () Bool)

(declare-fun res!54679 () Bool)

(declare-fun e!71909 () Bool)

(assert (=> d!31081 (=> res!54679 e!71909)))

(assert (=> d!31081 (= res!54679 (= (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(assert (=> d!31081 (= (arrayContainsKey!0 (_keys!4341 (v!2930 (underlying!370 thiss!992))) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!71909)))

(declare-fun b!110573 () Bool)

(declare-fun e!71910 () Bool)

(assert (=> b!110573 (= e!71909 e!71910)))

(declare-fun res!54680 () Bool)

(assert (=> b!110573 (=> (not res!54680) (not e!71910))))

(assert (=> b!110573 (= res!54680 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2338 (_keys!4341 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun b!110574 () Bool)

(assert (=> b!110574 (= e!71910 (arrayContainsKey!0 (_keys!4341 (v!2930 (underlying!370 thiss!992))) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!31081 (not res!54679)) b!110573))

(assert (= (and b!110573 res!54680) b!110574))

(declare-fun m!125509 () Bool)

(assert (=> d!31081 m!125509))

(assert (=> b!110574 m!124315))

(declare-fun m!125511 () Bool)

(assert (=> b!110574 m!125511))

(assert (=> b!110520 d!31081))

(declare-fun d!31083 () Bool)

(assert (=> d!31083 (= (get!1350 (getValueByKey!158 (toList!811 lt!56699) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2934 (getValueByKey!158 (toList!811 lt!56699) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!30893 d!31083))

(declare-fun b!110575 () Bool)

(declare-fun e!71911 () Option!164)

(assert (=> b!110575 (= e!71911 (Some!163 (_2!1231 (h!2225 (toList!811 lt!56699)))))))

(declare-fun b!110577 () Bool)

(declare-fun e!71912 () Option!164)

(assert (=> b!110577 (= e!71912 (getValueByKey!158 (t!5767 (toList!811 lt!56699)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!31085 () Bool)

(declare-fun c!19618 () Bool)

(assert (=> d!31085 (= c!19618 (and ((_ is Cons!1626) (toList!811 lt!56699)) (= (_1!1231 (h!2225 (toList!811 lt!56699))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!31085 (= (getValueByKey!158 (toList!811 lt!56699) #b0000000000000000000000000000000000000000000000000000000000000000) e!71911)))

(declare-fun b!110576 () Bool)

(assert (=> b!110576 (= e!71911 e!71912)))

(declare-fun c!19619 () Bool)

(assert (=> b!110576 (= c!19619 (and ((_ is Cons!1626) (toList!811 lt!56699)) (not (= (_1!1231 (h!2225 (toList!811 lt!56699))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!110578 () Bool)

(assert (=> b!110578 (= e!71912 None!162)))

(assert (= (and d!31085 c!19618) b!110575))

(assert (= (and d!31085 (not c!19618)) b!110576))

(assert (= (and b!110576 c!19619) b!110577))

(assert (= (and b!110576 (not c!19619)) b!110578))

(declare-fun m!125513 () Bool)

(assert (=> b!110577 m!125513))

(assert (=> d!30893 d!31085))

(declare-fun d!31087 () Bool)

(declare-fun lt!57087 () Bool)

(assert (=> d!31087 (= lt!57087 (select (content!113 (toList!811 lt!56879)) (tuple2!2441 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun e!71914 () Bool)

(assert (=> d!31087 (= lt!57087 e!71914)))

(declare-fun res!54681 () Bool)

(assert (=> d!31087 (=> (not res!54681) (not e!71914))))

(assert (=> d!31087 (= res!54681 ((_ is Cons!1626) (toList!811 lt!56879)))))

(assert (=> d!31087 (= (contains!839 (toList!811 lt!56879) (tuple2!2441 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992))))) lt!57087)))

(declare-fun b!110579 () Bool)

(declare-fun e!71913 () Bool)

(assert (=> b!110579 (= e!71914 e!71913)))

(declare-fun res!54682 () Bool)

(assert (=> b!110579 (=> res!54682 e!71913)))

(assert (=> b!110579 (= res!54682 (= (h!2225 (toList!811 lt!56879)) (tuple2!2441 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun b!110580 () Bool)

(assert (=> b!110580 (= e!71913 (contains!839 (t!5767 (toList!811 lt!56879)) (tuple2!2441 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))))

(assert (= (and d!31087 res!54681) b!110579))

(assert (= (and b!110579 (not res!54682)) b!110580))

(declare-fun m!125515 () Bool)

(assert (=> d!31087 m!125515))

(declare-fun m!125517 () Bool)

(assert (=> d!31087 m!125517))

(declare-fun m!125519 () Bool)

(assert (=> b!110580 m!125519))

(assert (=> b!110352 d!31087))

(declare-fun d!31089 () Bool)

(declare-fun res!54683 () Bool)

(declare-fun e!71915 () Bool)

(assert (=> d!31089 (=> res!54683 e!71915)))

(assert (=> d!31089 (= res!54683 (and ((_ is Cons!1626) (toList!811 call!11697)) (= (_1!1231 (h!2225 (toList!811 call!11697))) (select (arr!2081 (_keys!4341 newMap!16)) (index!3195 lt!56591)))))))

(assert (=> d!31089 (= (containsKey!162 (toList!811 call!11697) (select (arr!2081 (_keys!4341 newMap!16)) (index!3195 lt!56591))) e!71915)))

(declare-fun b!110581 () Bool)

(declare-fun e!71916 () Bool)

(assert (=> b!110581 (= e!71915 e!71916)))

(declare-fun res!54684 () Bool)

(assert (=> b!110581 (=> (not res!54684) (not e!71916))))

(assert (=> b!110581 (= res!54684 (and (or (not ((_ is Cons!1626) (toList!811 call!11697))) (bvsle (_1!1231 (h!2225 (toList!811 call!11697))) (select (arr!2081 (_keys!4341 newMap!16)) (index!3195 lt!56591)))) ((_ is Cons!1626) (toList!811 call!11697)) (bvslt (_1!1231 (h!2225 (toList!811 call!11697))) (select (arr!2081 (_keys!4341 newMap!16)) (index!3195 lt!56591)))))))

(declare-fun b!110582 () Bool)

(assert (=> b!110582 (= e!71916 (containsKey!162 (t!5767 (toList!811 call!11697)) (select (arr!2081 (_keys!4341 newMap!16)) (index!3195 lt!56591))))))

(assert (= (and d!31089 (not res!54683)) b!110581))

(assert (= (and b!110581 res!54684) b!110582))

(assert (=> b!110582 m!124439))

(declare-fun m!125521 () Bool)

(assert (=> b!110582 m!125521))

(assert (=> d!30873 d!31089))

(declare-fun d!31091 () Bool)

(declare-fun res!54685 () Bool)

(declare-fun e!71917 () Bool)

(assert (=> d!31091 (=> res!54685 e!71917)))

(assert (=> d!31091 (= res!54685 (and ((_ is Cons!1626) lt!56767) (= (_1!1231 (h!2225 lt!56767)) (_1!1231 lt!56454))))))

(assert (=> d!31091 (= (containsKey!162 lt!56767 (_1!1231 lt!56454)) e!71917)))

(declare-fun b!110583 () Bool)

(declare-fun e!71918 () Bool)

(assert (=> b!110583 (= e!71917 e!71918)))

(declare-fun res!54686 () Bool)

(assert (=> b!110583 (=> (not res!54686) (not e!71918))))

(assert (=> b!110583 (= res!54686 (and (or (not ((_ is Cons!1626) lt!56767)) (bvsle (_1!1231 (h!2225 lt!56767)) (_1!1231 lt!56454))) ((_ is Cons!1626) lt!56767) (bvslt (_1!1231 (h!2225 lt!56767)) (_1!1231 lt!56454))))))

(declare-fun b!110584 () Bool)

(assert (=> b!110584 (= e!71918 (containsKey!162 (t!5767 lt!56767) (_1!1231 lt!56454)))))

(assert (= (and d!31091 (not res!54685)) b!110583))

(assert (= (and b!110583 res!54686) b!110584))

(declare-fun m!125523 () Bool)

(assert (=> b!110584 m!125523))

(assert (=> b!110168 d!31091))

(declare-fun d!31093 () Bool)

(declare-fun e!71919 () Bool)

(assert (=> d!31093 e!71919))

(declare-fun res!54687 () Bool)

(assert (=> d!31093 (=> res!54687 e!71919)))

(declare-fun lt!57088 () Bool)

(assert (=> d!31093 (= res!54687 (not lt!57088))))

(declare-fun lt!57089 () Bool)

(assert (=> d!31093 (= lt!57088 lt!57089)))

(declare-fun lt!57091 () Unit!3403)

(declare-fun e!71920 () Unit!3403)

(assert (=> d!31093 (= lt!57091 e!71920)))

(declare-fun c!19620 () Bool)

(assert (=> d!31093 (= c!19620 lt!57089)))

(assert (=> d!31093 (= lt!57089 (containsKey!162 (toList!811 lt!56917) (_1!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> d!31093 (= (contains!838 lt!56917 (_1!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))) lt!57088)))

(declare-fun b!110585 () Bool)

(declare-fun lt!57090 () Unit!3403)

(assert (=> b!110585 (= e!71920 lt!57090)))

(assert (=> b!110585 (= lt!57090 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 lt!56917) (_1!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> b!110585 (isDefined!111 (getValueByKey!158 (toList!811 lt!56917) (_1!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun b!110586 () Bool)

(declare-fun Unit!3436 () Unit!3403)

(assert (=> b!110586 (= e!71920 Unit!3436)))

(declare-fun b!110587 () Bool)

(assert (=> b!110587 (= e!71919 (isDefined!111 (getValueByKey!158 (toList!811 lt!56917) (_1!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(assert (= (and d!31093 c!19620) b!110585))

(assert (= (and d!31093 (not c!19620)) b!110586))

(assert (= (and d!31093 (not res!54687)) b!110587))

(declare-fun m!125525 () Bool)

(assert (=> d!31093 m!125525))

(declare-fun m!125527 () Bool)

(assert (=> b!110585 m!125527))

(assert (=> b!110585 m!125215))

(assert (=> b!110585 m!125215))

(declare-fun m!125529 () Bool)

(assert (=> b!110585 m!125529))

(assert (=> b!110587 m!125215))

(assert (=> b!110587 m!125215))

(assert (=> b!110587 m!125529))

(assert (=> d!30995 d!31093))

(declare-fun b!110588 () Bool)

(declare-fun e!71921 () Option!164)

(assert (=> b!110588 (= e!71921 (Some!163 (_2!1231 (h!2225 lt!56916))))))

(declare-fun b!110590 () Bool)

(declare-fun e!71922 () Option!164)

(assert (=> b!110590 (= e!71922 (getValueByKey!158 (t!5767 lt!56916) (_1!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun d!31095 () Bool)

(declare-fun c!19621 () Bool)

(assert (=> d!31095 (= c!19621 (and ((_ is Cons!1626) lt!56916) (= (_1!1231 (h!2225 lt!56916)) (_1!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> d!31095 (= (getValueByKey!158 lt!56916 (_1!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))) e!71921)))

(declare-fun b!110589 () Bool)

(assert (=> b!110589 (= e!71921 e!71922)))

(declare-fun c!19622 () Bool)

(assert (=> b!110589 (= c!19622 (and ((_ is Cons!1626) lt!56916) (not (= (_1!1231 (h!2225 lt!56916)) (_1!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))))

(declare-fun b!110591 () Bool)

(assert (=> b!110591 (= e!71922 None!162)))

(assert (= (and d!31095 c!19621) b!110588))

(assert (= (and d!31095 (not c!19621)) b!110589))

(assert (= (and b!110589 c!19622) b!110590))

(assert (= (and b!110589 (not c!19622)) b!110591))

(declare-fun m!125531 () Bool)

(assert (=> b!110590 m!125531))

(assert (=> d!30995 d!31095))

(declare-fun d!31097 () Bool)

(assert (=> d!31097 (= (getValueByKey!158 lt!56916 (_1!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))) (Some!163 (_2!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun lt!57092 () Unit!3403)

(assert (=> d!31097 (= lt!57092 (choose!687 lt!56916 (_1!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992))))) (_2!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun e!71923 () Bool)

(assert (=> d!31097 e!71923))

(declare-fun res!54688 () Bool)

(assert (=> d!31097 (=> (not res!54688) (not e!71923))))

(assert (=> d!31097 (= res!54688 (isStrictlySorted!311 lt!56916))))

(assert (=> d!31097 (= (lemmaContainsTupThenGetReturnValue!74 lt!56916 (_1!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992))))) (_2!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))) lt!57092)))

(declare-fun b!110592 () Bool)

(declare-fun res!54689 () Bool)

(assert (=> b!110592 (=> (not res!54689) (not e!71923))))

(assert (=> b!110592 (= res!54689 (containsKey!162 lt!56916 (_1!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun b!110593 () Bool)

(assert (=> b!110593 (= e!71923 (contains!839 lt!56916 (tuple2!2441 (_1!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992))))) (_2!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(assert (= (and d!31097 res!54688) b!110592))

(assert (= (and b!110592 res!54689) b!110593))

(assert (=> d!31097 m!125209))

(declare-fun m!125533 () Bool)

(assert (=> d!31097 m!125533))

(declare-fun m!125535 () Bool)

(assert (=> d!31097 m!125535))

(declare-fun m!125537 () Bool)

(assert (=> b!110592 m!125537))

(declare-fun m!125539 () Bool)

(assert (=> b!110593 m!125539))

(assert (=> d!30995 d!31097))

(declare-fun b!110594 () Bool)

(declare-fun e!71928 () List!1630)

(declare-fun e!71927 () List!1630)

(assert (=> b!110594 (= e!71928 e!71927)))

(declare-fun c!19625 () Bool)

(assert (=> b!110594 (= c!19625 (and ((_ is Cons!1626) (toList!811 call!11738)) (= (_1!1231 (h!2225 (toList!811 call!11738))) (_1!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(declare-fun bm!11807 () Bool)

(declare-fun call!11810 () List!1630)

(declare-fun call!11811 () List!1630)

(assert (=> bm!11807 (= call!11810 call!11811)))

(declare-fun b!110595 () Bool)

(assert (=> b!110595 (= e!71928 call!11811)))

(declare-fun bm!11808 () Bool)

(declare-fun call!11812 () List!1630)

(assert (=> bm!11808 (= call!11812 call!11810)))

(declare-fun bm!11809 () Bool)

(declare-fun e!71926 () List!1630)

(declare-fun c!19623 () Bool)

(assert (=> bm!11809 (= call!11811 ($colon$colon!83 e!71926 (ite c!19623 (h!2225 (toList!811 call!11738)) (tuple2!2441 (_1!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992))))) (_2!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))))

(declare-fun c!19626 () Bool)

(assert (=> bm!11809 (= c!19626 c!19623)))

(declare-fun b!110596 () Bool)

(assert (=> b!110596 (= e!71927 call!11810)))

(declare-fun b!110598 () Bool)

(declare-fun e!71925 () Bool)

(declare-fun lt!57093 () List!1630)

(assert (=> b!110598 (= e!71925 (contains!839 lt!57093 (tuple2!2441 (_1!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992))))) (_2!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(declare-fun b!110599 () Bool)

(declare-fun e!71924 () List!1630)

(assert (=> b!110599 (= e!71924 call!11812)))

(declare-fun b!110600 () Bool)

(declare-fun res!54691 () Bool)

(assert (=> b!110600 (=> (not res!54691) (not e!71925))))

(assert (=> b!110600 (= res!54691 (containsKey!162 lt!57093 (_1!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun b!110601 () Bool)

(declare-fun c!19624 () Bool)

(assert (=> b!110601 (= c!19624 (and ((_ is Cons!1626) (toList!811 call!11738)) (bvsgt (_1!1231 (h!2225 (toList!811 call!11738))) (_1!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> b!110601 (= e!71927 e!71924)))

(declare-fun b!110602 () Bool)

(assert (=> b!110602 (= e!71924 call!11812)))

(declare-fun b!110603 () Bool)

(assert (=> b!110603 (= e!71926 (ite c!19625 (t!5767 (toList!811 call!11738)) (ite c!19624 (Cons!1626 (h!2225 (toList!811 call!11738)) (t!5767 (toList!811 call!11738))) Nil!1627)))))

(declare-fun b!110597 () Bool)

(assert (=> b!110597 (= e!71926 (insertStrictlySorted!77 (t!5767 (toList!811 call!11738)) (_1!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992))))) (_2!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun d!31099 () Bool)

(assert (=> d!31099 e!71925))

(declare-fun res!54690 () Bool)

(assert (=> d!31099 (=> (not res!54690) (not e!71925))))

(assert (=> d!31099 (= res!54690 (isStrictlySorted!311 lt!57093))))

(assert (=> d!31099 (= lt!57093 e!71928)))

(assert (=> d!31099 (= c!19623 (and ((_ is Cons!1626) (toList!811 call!11738)) (bvslt (_1!1231 (h!2225 (toList!811 call!11738))) (_1!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> d!31099 (isStrictlySorted!311 (toList!811 call!11738))))

(assert (=> d!31099 (= (insertStrictlySorted!77 (toList!811 call!11738) (_1!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992))))) (_2!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))) lt!57093)))

(assert (= (and d!31099 c!19623) b!110595))

(assert (= (and d!31099 (not c!19623)) b!110594))

(assert (= (and b!110594 c!19625) b!110596))

(assert (= (and b!110594 (not c!19625)) b!110601))

(assert (= (and b!110601 c!19624) b!110599))

(assert (= (and b!110601 (not c!19624)) b!110602))

(assert (= (or b!110599 b!110602) bm!11808))

(assert (= (or b!110596 bm!11808) bm!11807))

(assert (= (or b!110595 bm!11807) bm!11809))

(assert (= (and bm!11809 c!19626) b!110597))

(assert (= (and bm!11809 (not c!19626)) b!110603))

(assert (= (and d!31099 res!54690) b!110600))

(assert (= (and b!110600 res!54691) b!110598))

(declare-fun m!125541 () Bool)

(assert (=> b!110600 m!125541))

(declare-fun m!125543 () Bool)

(assert (=> b!110597 m!125543))

(declare-fun m!125545 () Bool)

(assert (=> b!110598 m!125545))

(declare-fun m!125547 () Bool)

(assert (=> d!31099 m!125547))

(declare-fun m!125549 () Bool)

(assert (=> d!31099 m!125549))

(declare-fun m!125551 () Bool)

(assert (=> bm!11809 m!125551))

(assert (=> d!30995 d!31099))

(declare-fun d!31101 () Bool)

(assert (=> d!31101 (= (isDefined!111 (getValueByKey!158 (toList!811 e!71507) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355))) (not (isEmpty!377 (getValueByKey!158 (toList!811 e!71507) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))))

(declare-fun bs!4547 () Bool)

(assert (= bs!4547 d!31101))

(assert (=> bs!4547 m!125289))

(declare-fun m!125553 () Bool)

(assert (=> bs!4547 m!125553))

(assert (=> b!110411 d!31101))

(declare-fun b!110604 () Bool)

(declare-fun e!71929 () Option!164)

(assert (=> b!110604 (= e!71929 (Some!163 (_2!1231 (h!2225 (toList!811 e!71507)))))))

(declare-fun e!71930 () Option!164)

(declare-fun b!110606 () Bool)

(assert (=> b!110606 (= e!71930 (getValueByKey!158 (t!5767 (toList!811 e!71507)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(declare-fun c!19627 () Bool)

(declare-fun d!31103 () Bool)

(assert (=> d!31103 (= c!19627 (and ((_ is Cons!1626) (toList!811 e!71507)) (= (_1!1231 (h!2225 (toList!811 e!71507))) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355))))))

(assert (=> d!31103 (= (getValueByKey!158 (toList!811 e!71507) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) e!71929)))

(declare-fun b!110605 () Bool)

(assert (=> b!110605 (= e!71929 e!71930)))

(declare-fun c!19628 () Bool)

(assert (=> b!110605 (= c!19628 (and ((_ is Cons!1626) (toList!811 e!71507)) (not (= (_1!1231 (h!2225 (toList!811 e!71507))) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))))

(declare-fun b!110607 () Bool)

(assert (=> b!110607 (= e!71930 None!162)))

(assert (= (and d!31103 c!19627) b!110604))

(assert (= (and d!31103 (not c!19627)) b!110605))

(assert (= (and b!110605 c!19628) b!110606))

(assert (= (and b!110605 (not c!19628)) b!110607))

(assert (=> b!110606 m!124315))

(declare-fun m!125555 () Bool)

(assert (=> b!110606 m!125555))

(assert (=> b!110411 d!31103))

(declare-fun d!31105 () Bool)

(assert (=> d!31105 (= (validKeyInArray!0 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!110317 d!31105))

(declare-fun d!31107 () Bool)

(declare-fun res!54692 () Bool)

(declare-fun e!71931 () Bool)

(assert (=> d!31107 (=> res!54692 e!71931)))

(assert (=> d!31107 (= res!54692 (and ((_ is Cons!1626) (toList!811 (+!150 lt!56695 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))) (= (_1!1231 (h!2225 (toList!811 (+!150 lt!56695 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))) lt!56697)))))

(assert (=> d!31107 (= (containsKey!162 (toList!811 (+!150 lt!56695 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))) lt!56697) e!71931)))

(declare-fun b!110608 () Bool)

(declare-fun e!71932 () Bool)

(assert (=> b!110608 (= e!71931 e!71932)))

(declare-fun res!54693 () Bool)

(assert (=> b!110608 (=> (not res!54693) (not e!71932))))

(assert (=> b!110608 (= res!54693 (and (or (not ((_ is Cons!1626) (toList!811 (+!150 lt!56695 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))) (bvsle (_1!1231 (h!2225 (toList!811 (+!150 lt!56695 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))) lt!56697)) ((_ is Cons!1626) (toList!811 (+!150 lt!56695 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))) (bvslt (_1!1231 (h!2225 (toList!811 (+!150 lt!56695 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))) lt!56697)))))

(declare-fun b!110609 () Bool)

(assert (=> b!110609 (= e!71932 (containsKey!162 (t!5767 (toList!811 (+!150 lt!56695 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))) lt!56697))))

(assert (= (and d!31107 (not res!54692)) b!110608))

(assert (= (and b!110608 res!54693) b!110609))

(declare-fun m!125557 () Bool)

(assert (=> b!110609 m!125557))

(assert (=> d!30975 d!31107))

(declare-fun d!31109 () Bool)

(assert (=> d!31109 (= (validKeyInArray!0 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!110396 d!31109))

(declare-fun d!31111 () Bool)

(declare-fun e!71933 () Bool)

(assert (=> d!31111 e!71933))

(declare-fun res!54694 () Bool)

(assert (=> d!31111 (=> res!54694 e!71933)))

(declare-fun lt!57094 () Bool)

(assert (=> d!31111 (= res!54694 (not lt!57094))))

(declare-fun lt!57095 () Bool)

(assert (=> d!31111 (= lt!57094 lt!57095)))

(declare-fun lt!57097 () Unit!3403)

(declare-fun e!71934 () Unit!3403)

(assert (=> d!31111 (= lt!57097 e!71934)))

(declare-fun c!19629 () Bool)

(assert (=> d!31111 (= c!19629 lt!57095)))

(assert (=> d!31111 (= lt!57095 (containsKey!162 (toList!811 lt!56747) (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!31111 (= (contains!838 lt!56747 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)) lt!57094)))

(declare-fun b!110610 () Bool)

(declare-fun lt!57096 () Unit!3403)

(assert (=> b!110610 (= e!71934 lt!57096)))

(assert (=> b!110610 (= lt!57096 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 lt!56747) (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!110610 (isDefined!111 (getValueByKey!158 (toList!811 lt!56747) (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!110611 () Bool)

(declare-fun Unit!3437 () Unit!3403)

(assert (=> b!110611 (= e!71934 Unit!3437)))

(declare-fun b!110612 () Bool)

(assert (=> b!110612 (= e!71933 (isDefined!111 (getValueByKey!158 (toList!811 lt!56747) (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!31111 c!19629) b!110610))

(assert (= (and d!31111 (not c!19629)) b!110611))

(assert (= (and d!31111 (not res!54694)) b!110612))

(assert (=> d!31111 m!124693))

(declare-fun m!125559 () Bool)

(assert (=> d!31111 m!125559))

(assert (=> b!110610 m!124693))

(declare-fun m!125561 () Bool)

(assert (=> b!110610 m!125561))

(assert (=> b!110610 m!124693))

(declare-fun m!125563 () Bool)

(assert (=> b!110610 m!125563))

(assert (=> b!110610 m!125563))

(declare-fun m!125565 () Bool)

(assert (=> b!110610 m!125565))

(assert (=> b!110612 m!124693))

(assert (=> b!110612 m!125563))

(assert (=> b!110612 m!125563))

(assert (=> b!110612 m!125565))

(assert (=> b!110103 d!31111))

(declare-fun d!31113 () Bool)

(declare-fun e!71935 () Bool)

(assert (=> d!31113 e!71935))

(declare-fun res!54695 () Bool)

(assert (=> d!31113 (=> (not res!54695) (not e!71935))))

(declare-fun lt!57100 () ListLongMap!1591)

(assert (=> d!31113 (= res!54695 (contains!838 lt!57100 (_1!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16)))))))

(declare-fun lt!57099 () List!1630)

(assert (=> d!31113 (= lt!57100 (ListLongMap!1592 lt!57099))))

(declare-fun lt!57101 () Unit!3403)

(declare-fun lt!57098 () Unit!3403)

(assert (=> d!31113 (= lt!57101 lt!57098)))

(assert (=> d!31113 (= (getValueByKey!158 lt!57099 (_1!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16)))) (Some!163 (_2!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16)))))))

(assert (=> d!31113 (= lt!57098 (lemmaContainsTupThenGetReturnValue!74 lt!57099 (_1!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16))) (_2!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16)))))))

(assert (=> d!31113 (= lt!57099 (insertStrictlySorted!77 (toList!811 call!11774) (_1!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16))) (_2!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16)))))))

(assert (=> d!31113 (= (+!150 call!11774 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16))) lt!57100)))

(declare-fun b!110613 () Bool)

(declare-fun res!54696 () Bool)

(assert (=> b!110613 (=> (not res!54696) (not e!71935))))

(assert (=> b!110613 (= res!54696 (= (getValueByKey!158 (toList!811 lt!57100) (_1!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16)))) (Some!163 (_2!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16))))))))

(declare-fun b!110614 () Bool)

(assert (=> b!110614 (= e!71935 (contains!839 (toList!811 lt!57100) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16))))))

(assert (= (and d!31113 res!54695) b!110613))

(assert (= (and b!110613 res!54696) b!110614))

(declare-fun m!125567 () Bool)

(assert (=> d!31113 m!125567))

(declare-fun m!125569 () Bool)

(assert (=> d!31113 m!125569))

(declare-fun m!125571 () Bool)

(assert (=> d!31113 m!125571))

(declare-fun m!125573 () Bool)

(assert (=> d!31113 m!125573))

(declare-fun m!125575 () Bool)

(assert (=> b!110613 m!125575))

(declare-fun m!125577 () Bool)

(assert (=> b!110614 m!125577))

(assert (=> b!110273 d!31113))

(declare-fun b!110615 () Bool)

(declare-fun e!71936 () Option!164)

(assert (=> b!110615 (= e!71936 (Some!163 (_2!1231 (h!2225 (toList!811 lt!56879)))))))

(declare-fun e!71937 () Option!164)

(declare-fun b!110617 () Bool)

(assert (=> b!110617 (= e!71937 (getValueByKey!158 (t!5767 (toList!811 lt!56879)) (_1!1231 (tuple2!2441 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun c!19630 () Bool)

(declare-fun d!31115 () Bool)

(assert (=> d!31115 (= c!19630 (and ((_ is Cons!1626) (toList!811 lt!56879)) (= (_1!1231 (h!2225 (toList!811 lt!56879))) (_1!1231 (tuple2!2441 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> d!31115 (= (getValueByKey!158 (toList!811 lt!56879) (_1!1231 (tuple2!2441 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))) e!71936)))

(declare-fun b!110616 () Bool)

(assert (=> b!110616 (= e!71936 e!71937)))

(declare-fun c!19631 () Bool)

(assert (=> b!110616 (= c!19631 (and ((_ is Cons!1626) (toList!811 lt!56879)) (not (= (_1!1231 (h!2225 (toList!811 lt!56879))) (_1!1231 (tuple2!2441 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))))

(declare-fun b!110618 () Bool)

(assert (=> b!110618 (= e!71937 None!162)))

(assert (= (and d!31115 c!19630) b!110615))

(assert (= (and d!31115 (not c!19630)) b!110616))

(assert (= (and b!110616 c!19631) b!110617))

(assert (= (and b!110616 (not c!19631)) b!110618))

(declare-fun m!125579 () Bool)

(assert (=> b!110617 m!125579))

(assert (=> b!110351 d!31115))

(declare-fun b!110619 () Bool)

(declare-fun e!71938 () (_ BitVec 32))

(declare-fun call!11813 () (_ BitVec 32))

(assert (=> b!110619 (= e!71938 (bvadd #b00000000000000000000000000000001 call!11813))))

(declare-fun d!31117 () Bool)

(declare-fun lt!57102 () (_ BitVec 32))

(assert (=> d!31117 (and (bvsge lt!57102 #b00000000000000000000000000000000) (bvsle lt!57102 (bvsub (size!2338 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun e!71939 () (_ BitVec 32))

(assert (=> d!31117 (= lt!57102 e!71939)))

(declare-fun c!19632 () Bool)

(assert (=> d!31117 (= c!19632 (bvsge #b00000000000000000000000000000000 (size!2338 (_keys!4341 (v!2930 (underlying!370 thiss!992))))))))

(assert (=> d!31117 (and (bvsle #b00000000000000000000000000000000 (size!2338 (_keys!4341 (v!2930 (underlying!370 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2338 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (size!2338 (_keys!4341 (v!2930 (underlying!370 thiss!992))))))))

(assert (=> d!31117 (= (arrayCountValidKeys!0 (_keys!4341 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000000000 (size!2338 (_keys!4341 (v!2930 (underlying!370 thiss!992))))) lt!57102)))

(declare-fun b!110620 () Bool)

(assert (=> b!110620 (= e!71938 call!11813)))

(declare-fun bm!11810 () Bool)

(assert (=> bm!11810 (= call!11813 (arrayCountValidKeys!0 (_keys!4341 (v!2930 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2338 (_keys!4341 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun b!110621 () Bool)

(assert (=> b!110621 (= e!71939 e!71938)))

(declare-fun c!19633 () Bool)

(assert (=> b!110621 (= c!19633 (validKeyInArray!0 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!110622 () Bool)

(assert (=> b!110622 (= e!71939 #b00000000000000000000000000000000)))

(assert (= (and d!31117 c!19632) b!110622))

(assert (= (and d!31117 (not c!19632)) b!110621))

(assert (= (and b!110621 c!19633) b!110619))

(assert (= (and b!110621 (not c!19633)) b!110620))

(assert (= (or b!110619 b!110620) bm!11810))

(declare-fun m!125581 () Bool)

(assert (=> bm!11810 m!125581))

(declare-fun m!125583 () Bool)

(assert (=> b!110621 m!125583))

(assert (=> b!110621 m!125583))

(declare-fun m!125585 () Bool)

(assert (=> b!110621 m!125585))

(assert (=> b!110238 d!31117))

(declare-fun d!31119 () Bool)

(declare-fun e!71940 () Bool)

(assert (=> d!31119 e!71940))

(declare-fun res!54697 () Bool)

(assert (=> d!31119 (=> res!54697 e!71940)))

(declare-fun lt!57103 () Bool)

(assert (=> d!31119 (= res!54697 (not lt!57103))))

(declare-fun lt!57104 () Bool)

(assert (=> d!31119 (= lt!57103 lt!57104)))

(declare-fun lt!57106 () Unit!3403)

(declare-fun e!71941 () Unit!3403)

(assert (=> d!31119 (= lt!57106 e!71941)))

(declare-fun c!19634 () Bool)

(assert (=> d!31119 (= c!19634 lt!57104)))

(assert (=> d!31119 (= lt!57104 (containsKey!162 (toList!811 lt!56879) (_1!1231 (tuple2!2441 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> d!31119 (= (contains!838 lt!56879 (_1!1231 (tuple2!2441 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))) lt!57103)))

(declare-fun b!110623 () Bool)

(declare-fun lt!57105 () Unit!3403)

(assert (=> b!110623 (= e!71941 lt!57105)))

(assert (=> b!110623 (= lt!57105 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 lt!56879) (_1!1231 (tuple2!2441 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> b!110623 (isDefined!111 (getValueByKey!158 (toList!811 lt!56879) (_1!1231 (tuple2!2441 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun b!110624 () Bool)

(declare-fun Unit!3438 () Unit!3403)

(assert (=> b!110624 (= e!71941 Unit!3438)))

(declare-fun b!110625 () Bool)

(assert (=> b!110625 (= e!71940 (isDefined!111 (getValueByKey!158 (toList!811 lt!56879) (_1!1231 (tuple2!2441 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(assert (= (and d!31119 c!19634) b!110623))

(assert (= (and d!31119 (not c!19634)) b!110624))

(assert (= (and d!31119 (not res!54697)) b!110625))

(declare-fun m!125587 () Bool)

(assert (=> d!31119 m!125587))

(declare-fun m!125589 () Bool)

(assert (=> b!110623 m!125589))

(assert (=> b!110623 m!125115))

(assert (=> b!110623 m!125115))

(declare-fun m!125591 () Bool)

(assert (=> b!110623 m!125591))

(assert (=> b!110625 m!125115))

(assert (=> b!110625 m!125115))

(assert (=> b!110625 m!125591))

(assert (=> d!30965 d!31119))

(declare-fun b!110626 () Bool)

(declare-fun e!71942 () Option!164)

(assert (=> b!110626 (= e!71942 (Some!163 (_2!1231 (h!2225 lt!56878))))))

(declare-fun b!110628 () Bool)

(declare-fun e!71943 () Option!164)

(assert (=> b!110628 (= e!71943 (getValueByKey!158 (t!5767 lt!56878) (_1!1231 (tuple2!2441 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun d!31121 () Bool)

(declare-fun c!19635 () Bool)

(assert (=> d!31121 (= c!19635 (and ((_ is Cons!1626) lt!56878) (= (_1!1231 (h!2225 lt!56878)) (_1!1231 (tuple2!2441 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> d!31121 (= (getValueByKey!158 lt!56878 (_1!1231 (tuple2!2441 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))) e!71942)))

(declare-fun b!110627 () Bool)

(assert (=> b!110627 (= e!71942 e!71943)))

(declare-fun c!19636 () Bool)

(assert (=> b!110627 (= c!19636 (and ((_ is Cons!1626) lt!56878) (not (= (_1!1231 (h!2225 lt!56878)) (_1!1231 (tuple2!2441 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))))

(declare-fun b!110629 () Bool)

(assert (=> b!110629 (= e!71943 None!162)))

(assert (= (and d!31121 c!19635) b!110626))

(assert (= (and d!31121 (not c!19635)) b!110627))

(assert (= (and b!110627 c!19636) b!110628))

(assert (= (and b!110627 (not c!19636)) b!110629))

(declare-fun m!125593 () Bool)

(assert (=> b!110628 m!125593))

(assert (=> d!30965 d!31121))

(declare-fun d!31123 () Bool)

(assert (=> d!31123 (= (getValueByKey!158 lt!56878 (_1!1231 (tuple2!2441 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))) (Some!163 (_2!1231 (tuple2!2441 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun lt!57107 () Unit!3403)

(assert (=> d!31123 (= lt!57107 (choose!687 lt!56878 (_1!1231 (tuple2!2441 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992))))) (_2!1231 (tuple2!2441 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun e!71944 () Bool)

(assert (=> d!31123 e!71944))

(declare-fun res!54698 () Bool)

(assert (=> d!31123 (=> (not res!54698) (not e!71944))))

(assert (=> d!31123 (= res!54698 (isStrictlySorted!311 lt!56878))))

(assert (=> d!31123 (= (lemmaContainsTupThenGetReturnValue!74 lt!56878 (_1!1231 (tuple2!2441 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992))))) (_2!1231 (tuple2!2441 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))) lt!57107)))

(declare-fun b!110630 () Bool)

(declare-fun res!54699 () Bool)

(assert (=> b!110630 (=> (not res!54699) (not e!71944))))

(assert (=> b!110630 (= res!54699 (containsKey!162 lt!56878 (_1!1231 (tuple2!2441 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun b!110631 () Bool)

(assert (=> b!110631 (= e!71944 (contains!839 lt!56878 (tuple2!2441 (_1!1231 (tuple2!2441 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992))))) (_2!1231 (tuple2!2441 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(assert (= (and d!31123 res!54698) b!110630))

(assert (= (and b!110630 res!54699) b!110631))

(assert (=> d!31123 m!125109))

(declare-fun m!125595 () Bool)

(assert (=> d!31123 m!125595))

(declare-fun m!125597 () Bool)

(assert (=> d!31123 m!125597))

(declare-fun m!125599 () Bool)

(assert (=> b!110630 m!125599))

(declare-fun m!125601 () Bool)

(assert (=> b!110631 m!125601))

(assert (=> d!30965 d!31123))

(declare-fun b!110632 () Bool)

(declare-fun e!71949 () List!1630)

(declare-fun e!71948 () List!1630)

(assert (=> b!110632 (= e!71949 e!71948)))

(declare-fun c!19639 () Bool)

(assert (=> b!110632 (= c!19639 (and ((_ is Cons!1626) (toList!811 lt!56705)) (= (_1!1231 (h!2225 (toList!811 lt!56705))) (_1!1231 (tuple2!2441 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(declare-fun bm!11811 () Bool)

(declare-fun call!11814 () List!1630)

(declare-fun call!11815 () List!1630)

(assert (=> bm!11811 (= call!11814 call!11815)))

(declare-fun b!110633 () Bool)

(assert (=> b!110633 (= e!71949 call!11815)))

(declare-fun bm!11812 () Bool)

(declare-fun call!11816 () List!1630)

(assert (=> bm!11812 (= call!11816 call!11814)))

(declare-fun c!19637 () Bool)

(declare-fun bm!11813 () Bool)

(declare-fun e!71947 () List!1630)

(assert (=> bm!11813 (= call!11815 ($colon$colon!83 e!71947 (ite c!19637 (h!2225 (toList!811 lt!56705)) (tuple2!2441 (_1!1231 (tuple2!2441 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992))))) (_2!1231 (tuple2!2441 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))))

(declare-fun c!19640 () Bool)

(assert (=> bm!11813 (= c!19640 c!19637)))

(declare-fun b!110634 () Bool)

(assert (=> b!110634 (= e!71948 call!11814)))

(declare-fun b!110636 () Bool)

(declare-fun e!71946 () Bool)

(declare-fun lt!57108 () List!1630)

(assert (=> b!110636 (= e!71946 (contains!839 lt!57108 (tuple2!2441 (_1!1231 (tuple2!2441 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992))))) (_2!1231 (tuple2!2441 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(declare-fun b!110637 () Bool)

(declare-fun e!71945 () List!1630)

(assert (=> b!110637 (= e!71945 call!11816)))

(declare-fun b!110638 () Bool)

(declare-fun res!54701 () Bool)

(assert (=> b!110638 (=> (not res!54701) (not e!71946))))

(assert (=> b!110638 (= res!54701 (containsKey!162 lt!57108 (_1!1231 (tuple2!2441 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun c!19638 () Bool)

(declare-fun b!110639 () Bool)

(assert (=> b!110639 (= c!19638 (and ((_ is Cons!1626) (toList!811 lt!56705)) (bvsgt (_1!1231 (h!2225 (toList!811 lt!56705))) (_1!1231 (tuple2!2441 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> b!110639 (= e!71948 e!71945)))

(declare-fun b!110640 () Bool)

(assert (=> b!110640 (= e!71945 call!11816)))

(declare-fun b!110641 () Bool)

(assert (=> b!110641 (= e!71947 (ite c!19639 (t!5767 (toList!811 lt!56705)) (ite c!19638 (Cons!1626 (h!2225 (toList!811 lt!56705)) (t!5767 (toList!811 lt!56705))) Nil!1627)))))

(declare-fun b!110635 () Bool)

(assert (=> b!110635 (= e!71947 (insertStrictlySorted!77 (t!5767 (toList!811 lt!56705)) (_1!1231 (tuple2!2441 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992))))) (_2!1231 (tuple2!2441 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun d!31125 () Bool)

(assert (=> d!31125 e!71946))

(declare-fun res!54700 () Bool)

(assert (=> d!31125 (=> (not res!54700) (not e!71946))))

(assert (=> d!31125 (= res!54700 (isStrictlySorted!311 lt!57108))))

(assert (=> d!31125 (= lt!57108 e!71949)))

(assert (=> d!31125 (= c!19637 (and ((_ is Cons!1626) (toList!811 lt!56705)) (bvslt (_1!1231 (h!2225 (toList!811 lt!56705))) (_1!1231 (tuple2!2441 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> d!31125 (isStrictlySorted!311 (toList!811 lt!56705))))

(assert (=> d!31125 (= (insertStrictlySorted!77 (toList!811 lt!56705) (_1!1231 (tuple2!2441 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992))))) (_2!1231 (tuple2!2441 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))) lt!57108)))

(assert (= (and d!31125 c!19637) b!110633))

(assert (= (and d!31125 (not c!19637)) b!110632))

(assert (= (and b!110632 c!19639) b!110634))

(assert (= (and b!110632 (not c!19639)) b!110639))

(assert (= (and b!110639 c!19638) b!110637))

(assert (= (and b!110639 (not c!19638)) b!110640))

(assert (= (or b!110637 b!110640) bm!11812))

(assert (= (or b!110634 bm!11812) bm!11811))

(assert (= (or b!110633 bm!11811) bm!11813))

(assert (= (and bm!11813 c!19640) b!110635))

(assert (= (and bm!11813 (not c!19640)) b!110641))

(assert (= (and d!31125 res!54700) b!110638))

(assert (= (and b!110638 res!54701) b!110636))

(declare-fun m!125603 () Bool)

(assert (=> b!110638 m!125603))

(declare-fun m!125605 () Bool)

(assert (=> b!110635 m!125605))

(declare-fun m!125607 () Bool)

(assert (=> b!110636 m!125607))

(declare-fun m!125609 () Bool)

(assert (=> d!31125 m!125609))

(declare-fun m!125611 () Bool)

(assert (=> d!31125 m!125611))

(declare-fun m!125613 () Bool)

(assert (=> bm!11813 m!125613))

(assert (=> d!30965 d!31125))

(assert (=> b!110077 d!31037))

(declare-fun b!110642 () Bool)

(declare-fun e!71950 () Option!164)

(assert (=> b!110642 (= e!71950 (Some!163 (_2!1231 (h!2225 (toList!811 lt!56917)))))))

(declare-fun b!110644 () Bool)

(declare-fun e!71951 () Option!164)

(assert (=> b!110644 (= e!71951 (getValueByKey!158 (t!5767 (toList!811 lt!56917)) (_1!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun d!31127 () Bool)

(declare-fun c!19641 () Bool)

(assert (=> d!31127 (= c!19641 (and ((_ is Cons!1626) (toList!811 lt!56917)) (= (_1!1231 (h!2225 (toList!811 lt!56917))) (_1!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> d!31127 (= (getValueByKey!158 (toList!811 lt!56917) (_1!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))) e!71950)))

(declare-fun b!110643 () Bool)

(assert (=> b!110643 (= e!71950 e!71951)))

(declare-fun c!19642 () Bool)

(assert (=> b!110643 (= c!19642 (and ((_ is Cons!1626) (toList!811 lt!56917)) (not (= (_1!1231 (h!2225 (toList!811 lt!56917))) (_1!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))))

(declare-fun b!110645 () Bool)

(assert (=> b!110645 (= e!71951 None!162)))

(assert (= (and d!31127 c!19641) b!110642))

(assert (= (and d!31127 (not c!19641)) b!110643))

(assert (= (and b!110643 c!19642) b!110644))

(assert (= (and b!110643 (not c!19642)) b!110645))

(declare-fun m!125615 () Bool)

(assert (=> b!110644 m!125615))

(assert (=> b!110384 d!31127))

(declare-fun d!31129 () Bool)

(assert (=> d!31129 (= (validMask!0 (mask!6795 newMap!16)) (and (or (= (mask!6795 newMap!16) #b00000000000000000000000000000111) (= (mask!6795 newMap!16) #b00000000000000000000000000001111) (= (mask!6795 newMap!16) #b00000000000000000000000000011111) (= (mask!6795 newMap!16) #b00000000000000000000000000111111) (= (mask!6795 newMap!16) #b00000000000000000000000001111111) (= (mask!6795 newMap!16) #b00000000000000000000000011111111) (= (mask!6795 newMap!16) #b00000000000000000000000111111111) (= (mask!6795 newMap!16) #b00000000000000000000001111111111) (= (mask!6795 newMap!16) #b00000000000000000000011111111111) (= (mask!6795 newMap!16) #b00000000000000000000111111111111) (= (mask!6795 newMap!16) #b00000000000000000001111111111111) (= (mask!6795 newMap!16) #b00000000000000000011111111111111) (= (mask!6795 newMap!16) #b00000000000000000111111111111111) (= (mask!6795 newMap!16) #b00000000000000001111111111111111) (= (mask!6795 newMap!16) #b00000000000000011111111111111111) (= (mask!6795 newMap!16) #b00000000000000111111111111111111) (= (mask!6795 newMap!16) #b00000000000001111111111111111111) (= (mask!6795 newMap!16) #b00000000000011111111111111111111) (= (mask!6795 newMap!16) #b00000000000111111111111111111111) (= (mask!6795 newMap!16) #b00000000001111111111111111111111) (= (mask!6795 newMap!16) #b00000000011111111111111111111111) (= (mask!6795 newMap!16) #b00000000111111111111111111111111) (= (mask!6795 newMap!16) #b00000001111111111111111111111111) (= (mask!6795 newMap!16) #b00000011111111111111111111111111) (= (mask!6795 newMap!16) #b00000111111111111111111111111111) (= (mask!6795 newMap!16) #b00001111111111111111111111111111) (= (mask!6795 newMap!16) #b00011111111111111111111111111111) (= (mask!6795 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!6795 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!30931 d!31129))

(declare-fun d!31131 () Bool)

(declare-fun res!54703 () Bool)

(declare-fun e!71952 () Bool)

(assert (=> d!31131 (=> res!54703 e!71952)))

(assert (=> d!31131 (= res!54703 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2338 (_keys!4341 newMap!16))))))

(assert (=> d!31131 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4341 newMap!16) (mask!6795 newMap!16)) e!71952)))

(declare-fun b!110646 () Bool)

(declare-fun e!71953 () Bool)

(declare-fun call!11817 () Bool)

(assert (=> b!110646 (= e!71953 call!11817)))

(declare-fun b!110647 () Bool)

(declare-fun e!71954 () Bool)

(assert (=> b!110647 (= e!71954 call!11817)))

(declare-fun b!110648 () Bool)

(assert (=> b!110648 (= e!71952 e!71953)))

(declare-fun c!19643 () Bool)

(assert (=> b!110648 (= c!19643 (validKeyInArray!0 (select (arr!2081 (_keys!4341 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun bm!11814 () Bool)

(assert (=> bm!11814 (= call!11817 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4341 newMap!16) (mask!6795 newMap!16)))))

(declare-fun b!110649 () Bool)

(assert (=> b!110649 (= e!71953 e!71954)))

(declare-fun lt!57110 () (_ BitVec 64))

(assert (=> b!110649 (= lt!57110 (select (arr!2081 (_keys!4341 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!57111 () Unit!3403)

(assert (=> b!110649 (= lt!57111 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4341 newMap!16) lt!57110 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!110649 (arrayContainsKey!0 (_keys!4341 newMap!16) lt!57110 #b00000000000000000000000000000000)))

(declare-fun lt!57109 () Unit!3403)

(assert (=> b!110649 (= lt!57109 lt!57111)))

(declare-fun res!54702 () Bool)

(assert (=> b!110649 (= res!54702 (= (seekEntryOrOpen!0 (select (arr!2081 (_keys!4341 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4341 newMap!16) (mask!6795 newMap!16)) (Found!261 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!110649 (=> (not res!54702) (not e!71954))))

(assert (= (and d!31131 (not res!54703)) b!110648))

(assert (= (and b!110648 c!19643) b!110649))

(assert (= (and b!110648 (not c!19643)) b!110646))

(assert (= (and b!110649 res!54702) b!110647))

(assert (= (or b!110647 b!110646) bm!11814))

(declare-fun m!125617 () Bool)

(assert (=> b!110648 m!125617))

(assert (=> b!110648 m!125617))

(declare-fun m!125619 () Bool)

(assert (=> b!110648 m!125619))

(declare-fun m!125621 () Bool)

(assert (=> bm!11814 m!125621))

(assert (=> b!110649 m!125617))

(declare-fun m!125623 () Bool)

(assert (=> b!110649 m!125623))

(declare-fun m!125625 () Bool)

(assert (=> b!110649 m!125625))

(assert (=> b!110649 m!125617))

(declare-fun m!125627 () Bool)

(assert (=> b!110649 m!125627))

(assert (=> bm!11805 d!31131))

(assert (=> b!110482 d!30905))

(declare-fun d!31133 () Bool)

(assert (=> d!31133 (= (isEmpty!376 lt!56798) (isEmpty!378 (toList!811 lt!56798)))))

(declare-fun bs!4548 () Bool)

(assert (= bs!4548 d!31133))

(declare-fun m!125629 () Bool)

(assert (=> bs!4548 m!125629))

(assert (=> b!110255 d!31133))

(declare-fun d!31135 () Bool)

(assert (=> d!31135 (= (inRange!0 (ite c!19528 (index!3194 lt!56778) (index!3197 lt!56778)) (mask!6795 newMap!16)) (and (bvsge (ite c!19528 (index!3194 lt!56778) (index!3197 lt!56778)) #b00000000000000000000000000000000) (bvslt (ite c!19528 (index!3194 lt!56778) (index!3197 lt!56778)) (bvadd (mask!6795 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!11764 d!31135))

(declare-fun d!31137 () Bool)

(assert (=> d!31137 (= (apply!100 lt!56747 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)) (get!1350 (getValueByKey!158 (toList!811 lt!56747) (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!4549 () Bool)

(assert (= bs!4549 d!31137))

(assert (=> bs!4549 m!124693))

(assert (=> bs!4549 m!125563))

(assert (=> bs!4549 m!125563))

(declare-fun m!125631 () Bool)

(assert (=> bs!4549 m!125631))

(assert (=> b!110117 d!31137))

(declare-fun d!31139 () Bool)

(declare-fun c!19644 () Bool)

(assert (=> d!31139 (= c!19644 ((_ is ValueCellFull!1005) (select (arr!2082 (ite (or c!19438 c!19445) (_values!2610 newMap!16) (array!4392 (store (arr!2082 (_values!2610 newMap!16)) (index!3195 lt!56591) (ValueCellFull!1005 lt!56458)) (size!2339 (_values!2610 newMap!16))))) #b00000000000000000000000000000000)))))

(declare-fun e!71955 () V!3243)

(assert (=> d!31139 (= (get!1347 (select (arr!2082 (ite (or c!19438 c!19445) (_values!2610 newMap!16) (array!4392 (store (arr!2082 (_values!2610 newMap!16)) (index!3195 lt!56591) (ValueCellFull!1005 lt!56458)) (size!2339 (_values!2610 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!390 (defaultEntry!2627 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!71955)))

(declare-fun b!110650 () Bool)

(assert (=> b!110650 (= e!71955 (get!1348 (select (arr!2082 (ite (or c!19438 c!19445) (_values!2610 newMap!16) (array!4392 (store (arr!2082 (_values!2610 newMap!16)) (index!3195 lt!56591) (ValueCellFull!1005 lt!56458)) (size!2339 (_values!2610 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!390 (defaultEntry!2627 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!110651 () Bool)

(assert (=> b!110651 (= e!71955 (get!1349 (select (arr!2082 (ite (or c!19438 c!19445) (_values!2610 newMap!16) (array!4392 (store (arr!2082 (_values!2610 newMap!16)) (index!3195 lt!56591) (ValueCellFull!1005 lt!56458)) (size!2339 (_values!2610 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!390 (defaultEntry!2627 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!31139 c!19644) b!110650))

(assert (= (and d!31139 (not c!19644)) b!110651))

(assert (=> b!110650 m!124731))

(assert (=> b!110650 m!124733))

(declare-fun m!125633 () Bool)

(assert (=> b!110650 m!125633))

(assert (=> b!110651 m!124731))

(assert (=> b!110651 m!124733))

(declare-fun m!125635 () Bool)

(assert (=> b!110651 m!125635))

(assert (=> b!110117 d!31139))

(declare-fun d!31141 () Bool)

(assert (=> d!31141 (isDefined!111 (getValueByKey!158 (toList!811 lt!56612) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!57112 () Unit!3403)

(assert (=> d!31141 (= lt!57112 (choose!684 (toList!811 lt!56612) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!71956 () Bool)

(assert (=> d!31141 e!71956))

(declare-fun res!54704 () Bool)

(assert (=> d!31141 (=> (not res!54704) (not e!71956))))

(assert (=> d!31141 (= res!54704 (isStrictlySorted!311 (toList!811 lt!56612)))))

(assert (=> d!31141 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 lt!56612) #b0000000000000000000000000000000000000000000000000000000000000000) lt!57112)))

(declare-fun b!110652 () Bool)

(assert (=> b!110652 (= e!71956 (containsKey!162 (toList!811 lt!56612) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!31141 res!54704) b!110652))

(assert (=> d!31141 m!125203))

(assert (=> d!31141 m!125203))

(assert (=> d!31141 m!125205))

(declare-fun m!125637 () Bool)

(assert (=> d!31141 m!125637))

(declare-fun m!125639 () Bool)

(assert (=> d!31141 m!125639))

(assert (=> b!110652 m!125199))

(assert (=> b!110381 d!31141))

(declare-fun d!31143 () Bool)

(assert (=> d!31143 (= (isDefined!111 (getValueByKey!158 (toList!811 lt!56612) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!377 (getValueByKey!158 (toList!811 lt!56612) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4550 () Bool)

(assert (= bs!4550 d!31143))

(assert (=> bs!4550 m!125203))

(declare-fun m!125641 () Bool)

(assert (=> bs!4550 m!125641))

(assert (=> b!110381 d!31143))

(declare-fun b!110653 () Bool)

(declare-fun e!71957 () Option!164)

(assert (=> b!110653 (= e!71957 (Some!163 (_2!1231 (h!2225 (toList!811 lt!56612)))))))

(declare-fun b!110655 () Bool)

(declare-fun e!71958 () Option!164)

(assert (=> b!110655 (= e!71958 (getValueByKey!158 (t!5767 (toList!811 lt!56612)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!31145 () Bool)

(declare-fun c!19645 () Bool)

(assert (=> d!31145 (= c!19645 (and ((_ is Cons!1626) (toList!811 lt!56612)) (= (_1!1231 (h!2225 (toList!811 lt!56612))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!31145 (= (getValueByKey!158 (toList!811 lt!56612) #b0000000000000000000000000000000000000000000000000000000000000000) e!71957)))

(declare-fun b!110654 () Bool)

(assert (=> b!110654 (= e!71957 e!71958)))

(declare-fun c!19646 () Bool)

(assert (=> b!110654 (= c!19646 (and ((_ is Cons!1626) (toList!811 lt!56612)) (not (= (_1!1231 (h!2225 (toList!811 lt!56612))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!110656 () Bool)

(assert (=> b!110656 (= e!71958 None!162)))

(assert (= (and d!31145 c!19645) b!110653))

(assert (= (and d!31145 (not c!19645)) b!110654))

(assert (= (and b!110654 c!19646) b!110655))

(assert (= (and b!110654 (not c!19646)) b!110656))

(declare-fun m!125643 () Bool)

(assert (=> b!110655 m!125643))

(assert (=> b!110381 d!31145))

(declare-fun d!31147 () Bool)

(declare-fun c!19647 () Bool)

(assert (=> d!31147 (= c!19647 ((_ is ValueCellFull!1005) (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun e!71959 () V!3243)

(assert (=> d!31147 (= (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!71959)))

(declare-fun b!110657 () Bool)

(assert (=> b!110657 (= e!71959 (get!1348 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!110658 () Bool)

(assert (=> b!110658 (= e!71959 (get!1349 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!31147 c!19647) b!110657))

(assert (= (and d!31147 (not c!19647)) b!110658))

(assert (=> b!110657 m!124867))

(assert (=> b!110657 m!124363))

(declare-fun m!125645 () Bool)

(assert (=> b!110657 m!125645))

(assert (=> b!110658 m!124867))

(assert (=> b!110658 m!124363))

(declare-fun m!125647 () Bool)

(assert (=> b!110658 m!125647))

(assert (=> b!110247 d!31147))

(declare-fun d!31149 () Bool)

(assert (=> d!31149 (not (contains!838 (+!150 lt!56799 (tuple2!2441 lt!56796 lt!56802)) lt!56800))))

(declare-fun lt!57113 () Unit!3403)

(assert (=> d!31149 (= lt!57113 (choose!694 lt!56799 lt!56796 lt!56802 lt!56800))))

(declare-fun e!71960 () Bool)

(assert (=> d!31149 e!71960))

(declare-fun res!54705 () Bool)

(assert (=> d!31149 (=> (not res!54705) (not e!71960))))

(assert (=> d!31149 (= res!54705 (not (contains!838 lt!56799 lt!56800)))))

(assert (=> d!31149 (= (addStillNotContains!48 lt!56799 lt!56796 lt!56802 lt!56800) lt!57113)))

(declare-fun b!110659 () Bool)

(assert (=> b!110659 (= e!71960 (not (= lt!56796 lt!56800)))))

(assert (= (and d!31149 res!54705) b!110659))

(assert (=> d!31149 m!124877))

(assert (=> d!31149 m!124877))

(assert (=> d!31149 m!124879))

(declare-fun m!125649 () Bool)

(assert (=> d!31149 m!125649))

(declare-fun m!125651 () Bool)

(assert (=> d!31149 m!125651))

(assert (=> b!110247 d!31149))

(declare-fun d!31151 () Bool)

(declare-fun e!71961 () Bool)

(assert (=> d!31151 e!71961))

(declare-fun res!54706 () Bool)

(assert (=> d!31151 (=> (not res!54706) (not e!71961))))

(declare-fun lt!57116 () ListLongMap!1591)

(assert (=> d!31151 (= res!54706 (contains!838 lt!57116 (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!57115 () List!1630)

(assert (=> d!31151 (= lt!57116 (ListLongMap!1592 lt!57115))))

(declare-fun lt!57117 () Unit!3403)

(declare-fun lt!57114 () Unit!3403)

(assert (=> d!31151 (= lt!57117 lt!57114)))

(assert (=> d!31151 (= (getValueByKey!158 lt!57115 (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!163 (_2!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!31151 (= lt!57114 (lemmaContainsTupThenGetReturnValue!74 lt!57115 (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!31151 (= lt!57115 (insertStrictlySorted!77 (toList!811 call!11768) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!31151 (= (+!150 call!11768 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!57116)))

(declare-fun b!110660 () Bool)

(declare-fun res!54707 () Bool)

(assert (=> b!110660 (=> (not res!54707) (not e!71961))))

(assert (=> b!110660 (= res!54707 (= (getValueByKey!158 (toList!811 lt!57116) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!163 (_2!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!110661 () Bool)

(assert (=> b!110661 (= e!71961 (contains!839 (toList!811 lt!57116) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!31151 res!54706) b!110660))

(assert (= (and b!110660 res!54707) b!110661))

(declare-fun m!125653 () Bool)

(assert (=> d!31151 m!125653))

(declare-fun m!125655 () Bool)

(assert (=> d!31151 m!125655))

(declare-fun m!125657 () Bool)

(assert (=> d!31151 m!125657))

(declare-fun m!125659 () Bool)

(assert (=> d!31151 m!125659))

(declare-fun m!125661 () Bool)

(assert (=> b!110660 m!125661))

(declare-fun m!125663 () Bool)

(assert (=> b!110661 m!125663))

(assert (=> b!110247 d!31151))

(declare-fun d!31153 () Bool)

(declare-fun e!71962 () Bool)

(assert (=> d!31153 e!71962))

(declare-fun res!54708 () Bool)

(assert (=> d!31153 (=> res!54708 e!71962)))

(declare-fun lt!57118 () Bool)

(assert (=> d!31153 (= res!54708 (not lt!57118))))

(declare-fun lt!57119 () Bool)

(assert (=> d!31153 (= lt!57118 lt!57119)))

(declare-fun lt!57121 () Unit!3403)

(declare-fun e!71963 () Unit!3403)

(assert (=> d!31153 (= lt!57121 e!71963)))

(declare-fun c!19648 () Bool)

(assert (=> d!31153 (= c!19648 lt!57119)))

(assert (=> d!31153 (= lt!57119 (containsKey!162 (toList!811 (+!150 lt!56799 (tuple2!2441 lt!56796 lt!56802))) lt!56800))))

(assert (=> d!31153 (= (contains!838 (+!150 lt!56799 (tuple2!2441 lt!56796 lt!56802)) lt!56800) lt!57118)))

(declare-fun b!110662 () Bool)

(declare-fun lt!57120 () Unit!3403)

(assert (=> b!110662 (= e!71963 lt!57120)))

(assert (=> b!110662 (= lt!57120 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 (+!150 lt!56799 (tuple2!2441 lt!56796 lt!56802))) lt!56800))))

(assert (=> b!110662 (isDefined!111 (getValueByKey!158 (toList!811 (+!150 lt!56799 (tuple2!2441 lt!56796 lt!56802))) lt!56800))))

(declare-fun b!110663 () Bool)

(declare-fun Unit!3439 () Unit!3403)

(assert (=> b!110663 (= e!71963 Unit!3439)))

(declare-fun b!110664 () Bool)

(assert (=> b!110664 (= e!71962 (isDefined!111 (getValueByKey!158 (toList!811 (+!150 lt!56799 (tuple2!2441 lt!56796 lt!56802))) lt!56800)))))

(assert (= (and d!31153 c!19648) b!110662))

(assert (= (and d!31153 (not c!19648)) b!110663))

(assert (= (and d!31153 (not res!54708)) b!110664))

(declare-fun m!125665 () Bool)

(assert (=> d!31153 m!125665))

(declare-fun m!125667 () Bool)

(assert (=> b!110662 m!125667))

(declare-fun m!125669 () Bool)

(assert (=> b!110662 m!125669))

(assert (=> b!110662 m!125669))

(declare-fun m!125671 () Bool)

(assert (=> b!110662 m!125671))

(assert (=> b!110664 m!125669))

(assert (=> b!110664 m!125669))

(assert (=> b!110664 m!125671))

(assert (=> b!110247 d!31153))

(declare-fun d!31155 () Bool)

(declare-fun e!71964 () Bool)

(assert (=> d!31155 e!71964))

(declare-fun res!54709 () Bool)

(assert (=> d!31155 (=> (not res!54709) (not e!71964))))

(declare-fun lt!57124 () ListLongMap!1591)

(assert (=> d!31155 (= res!54709 (contains!838 lt!57124 (_1!1231 (tuple2!2441 lt!56796 lt!56802))))))

(declare-fun lt!57123 () List!1630)

(assert (=> d!31155 (= lt!57124 (ListLongMap!1592 lt!57123))))

(declare-fun lt!57125 () Unit!3403)

(declare-fun lt!57122 () Unit!3403)

(assert (=> d!31155 (= lt!57125 lt!57122)))

(assert (=> d!31155 (= (getValueByKey!158 lt!57123 (_1!1231 (tuple2!2441 lt!56796 lt!56802))) (Some!163 (_2!1231 (tuple2!2441 lt!56796 lt!56802))))))

(assert (=> d!31155 (= lt!57122 (lemmaContainsTupThenGetReturnValue!74 lt!57123 (_1!1231 (tuple2!2441 lt!56796 lt!56802)) (_2!1231 (tuple2!2441 lt!56796 lt!56802))))))

(assert (=> d!31155 (= lt!57123 (insertStrictlySorted!77 (toList!811 lt!56799) (_1!1231 (tuple2!2441 lt!56796 lt!56802)) (_2!1231 (tuple2!2441 lt!56796 lt!56802))))))

(assert (=> d!31155 (= (+!150 lt!56799 (tuple2!2441 lt!56796 lt!56802)) lt!57124)))

(declare-fun b!110665 () Bool)

(declare-fun res!54710 () Bool)

(assert (=> b!110665 (=> (not res!54710) (not e!71964))))

(assert (=> b!110665 (= res!54710 (= (getValueByKey!158 (toList!811 lt!57124) (_1!1231 (tuple2!2441 lt!56796 lt!56802))) (Some!163 (_2!1231 (tuple2!2441 lt!56796 lt!56802)))))))

(declare-fun b!110666 () Bool)

(assert (=> b!110666 (= e!71964 (contains!839 (toList!811 lt!57124) (tuple2!2441 lt!56796 lt!56802)))))

(assert (= (and d!31155 res!54709) b!110665))

(assert (= (and b!110665 res!54710) b!110666))

(declare-fun m!125673 () Bool)

(assert (=> d!31155 m!125673))

(declare-fun m!125675 () Bool)

(assert (=> d!31155 m!125675))

(declare-fun m!125677 () Bool)

(assert (=> d!31155 m!125677))

(declare-fun m!125679 () Bool)

(assert (=> d!31155 m!125679))

(declare-fun m!125681 () Bool)

(assert (=> b!110665 m!125681))

(declare-fun m!125683 () Bool)

(assert (=> b!110666 m!125683))

(assert (=> b!110247 d!31155))

(declare-fun lt!57126 () Bool)

(declare-fun d!31157 () Bool)

(assert (=> d!31157 (= lt!57126 (select (content!113 (toList!811 lt!56927)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))))

(declare-fun e!71966 () Bool)

(assert (=> d!31157 (= lt!57126 e!71966)))

(declare-fun res!54711 () Bool)

(assert (=> d!31157 (=> (not res!54711) (not e!71966))))

(assert (=> d!31157 (= res!54711 ((_ is Cons!1626) (toList!811 lt!56927)))))

(assert (=> d!31157 (= (contains!839 (toList!811 lt!56927) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)) lt!57126)))

(declare-fun b!110667 () Bool)

(declare-fun e!71965 () Bool)

(assert (=> b!110667 (= e!71966 e!71965)))

(declare-fun res!54712 () Bool)

(assert (=> b!110667 (=> res!54712 e!71965)))

(assert (=> b!110667 (= res!54712 (= (h!2225 (toList!811 lt!56927)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))))

(declare-fun b!110668 () Bool)

(assert (=> b!110668 (= e!71965 (contains!839 (t!5767 (toList!811 lt!56927)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))))

(assert (= (and d!31157 res!54711) b!110667))

(assert (= (and b!110667 (not res!54712)) b!110668))

(declare-fun m!125685 () Bool)

(assert (=> d!31157 m!125685))

(declare-fun m!125687 () Bool)

(assert (=> d!31157 m!125687))

(declare-fun m!125689 () Bool)

(assert (=> b!110668 m!125689))

(assert (=> b!110402 d!31157))

(declare-fun d!31159 () Bool)

(declare-fun res!54713 () Bool)

(declare-fun e!71967 () Bool)

(assert (=> d!31159 (=> res!54713 e!71967)))

(assert (=> d!31159 (= res!54713 (and ((_ is Cons!1626) lt!56863) (= (_1!1231 (h!2225 lt!56863)) (_1!1231 lt!56457))))))

(assert (=> d!31159 (= (containsKey!162 lt!56863 (_1!1231 lt!56457)) e!71967)))

(declare-fun b!110669 () Bool)

(declare-fun e!71968 () Bool)

(assert (=> b!110669 (= e!71967 e!71968)))

(declare-fun res!54714 () Bool)

(assert (=> b!110669 (=> (not res!54714) (not e!71968))))

(assert (=> b!110669 (= res!54714 (and (or (not ((_ is Cons!1626) lt!56863)) (bvsle (_1!1231 (h!2225 lt!56863)) (_1!1231 lt!56457))) ((_ is Cons!1626) lt!56863) (bvslt (_1!1231 (h!2225 lt!56863)) (_1!1231 lt!56457))))))

(declare-fun b!110670 () Bool)

(assert (=> b!110670 (= e!71968 (containsKey!162 (t!5767 lt!56863) (_1!1231 lt!56457)))))

(assert (= (and d!31159 (not res!54713)) b!110669))

(assert (= (and b!110669 res!54714) b!110670))

(declare-fun m!125691 () Bool)

(assert (=> b!110670 m!125691))

(assert (=> b!110337 d!31159))

(declare-fun d!31161 () Bool)

(declare-fun c!19651 () Bool)

(assert (=> d!31161 (= c!19651 ((_ is Nil!1627) (toList!811 lt!56635)))))

(declare-fun e!71971 () (InoxSet tuple2!2440))

(assert (=> d!31161 (= (content!113 (toList!811 lt!56635)) e!71971)))

(declare-fun b!110675 () Bool)

(assert (=> b!110675 (= e!71971 ((as const (Array tuple2!2440 Bool)) false))))

(declare-fun b!110676 () Bool)

(assert (=> b!110676 (= e!71971 ((_ map or) (store ((as const (Array tuple2!2440 Bool)) false) (h!2225 (toList!811 lt!56635)) true) (content!113 (t!5767 (toList!811 lt!56635)))))))

(assert (= (and d!31161 c!19651) b!110675))

(assert (= (and d!31161 (not c!19651)) b!110676))

(declare-fun m!125693 () Bool)

(assert (=> b!110676 m!125693))

(declare-fun m!125695 () Bool)

(assert (=> b!110676 m!125695))

(assert (=> d!31029 d!31161))

(declare-fun d!31163 () Bool)

(assert (=> d!31163 (= (get!1348 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2929 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!110433 d!31163))

(declare-fun d!31165 () Bool)

(declare-fun res!54715 () Bool)

(declare-fun e!71972 () Bool)

(assert (=> d!31165 (=> (not res!54715) (not e!71972))))

(assert (=> d!31165 (= res!54715 (simpleValid!76 (_2!1230 lt!57017)))))

(assert (=> d!31165 (= (valid!430 (_2!1230 lt!57017)) e!71972)))

(declare-fun b!110677 () Bool)

(declare-fun res!54716 () Bool)

(assert (=> b!110677 (=> (not res!54716) (not e!71972))))

(assert (=> b!110677 (= res!54716 (= (arrayCountValidKeys!0 (_keys!4341 (_2!1230 lt!57017)) #b00000000000000000000000000000000 (size!2338 (_keys!4341 (_2!1230 lt!57017)))) (_size!508 (_2!1230 lt!57017))))))

(declare-fun b!110678 () Bool)

(declare-fun res!54717 () Bool)

(assert (=> b!110678 (=> (not res!54717) (not e!71972))))

(assert (=> b!110678 (= res!54717 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4341 (_2!1230 lt!57017)) (mask!6795 (_2!1230 lt!57017))))))

(declare-fun b!110679 () Bool)

(assert (=> b!110679 (= e!71972 (arrayNoDuplicates!0 (_keys!4341 (_2!1230 lt!57017)) #b00000000000000000000000000000000 Nil!1628))))

(assert (= (and d!31165 res!54715) b!110677))

(assert (= (and b!110677 res!54716) b!110678))

(assert (= (and b!110678 res!54717) b!110679))

(declare-fun m!125697 () Bool)

(assert (=> d!31165 m!125697))

(declare-fun m!125699 () Bool)

(assert (=> b!110677 m!125699))

(declare-fun m!125701 () Bool)

(assert (=> b!110678 m!125701))

(declare-fun m!125703 () Bool)

(assert (=> b!110679 m!125703))

(assert (=> b!110481 d!31165))

(declare-fun b!110698 () Bool)

(declare-fun lt!57132 () SeekEntryResult!261)

(assert (=> b!110698 (and (bvsge (index!3196 lt!57132) #b00000000000000000000000000000000) (bvslt (index!3196 lt!57132) (size!2338 (_keys!4341 newMap!16))))))

(declare-fun res!54725 () Bool)

(assert (=> b!110698 (= res!54725 (= (select (arr!2081 (_keys!4341 newMap!16)) (index!3196 lt!57132)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!71983 () Bool)

(assert (=> b!110698 (=> res!54725 e!71983)))

(declare-fun b!110699 () Bool)

(declare-fun e!71985 () SeekEntryResult!261)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!110699 (= e!71985 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (mask!6795 newMap!16)) #b00000000000000000000000000000000 (mask!6795 newMap!16)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (_keys!4341 newMap!16) (mask!6795 newMap!16)))))

(declare-fun d!31167 () Bool)

(declare-fun e!71987 () Bool)

(assert (=> d!31167 e!71987))

(declare-fun c!19659 () Bool)

(assert (=> d!31167 (= c!19659 (and ((_ is Intermediate!261) lt!57132) (undefined!1073 lt!57132)))))

(declare-fun e!71986 () SeekEntryResult!261)

(assert (=> d!31167 (= lt!57132 e!71986)))

(declare-fun c!19658 () Bool)

(assert (=> d!31167 (= c!19658 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(declare-fun lt!57131 () (_ BitVec 64))

(assert (=> d!31167 (= lt!57131 (select (arr!2081 (_keys!4341 newMap!16)) (toIndex!0 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (mask!6795 newMap!16))))))

(assert (=> d!31167 (validMask!0 (mask!6795 newMap!16))))

(assert (=> d!31167 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (mask!6795 newMap!16)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (_keys!4341 newMap!16) (mask!6795 newMap!16)) lt!57132)))

(declare-fun b!110700 () Bool)

(assert (=> b!110700 (= e!71986 (Intermediate!261 true (toIndex!0 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (mask!6795 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!110701 () Bool)

(assert (=> b!110701 (and (bvsge (index!3196 lt!57132) #b00000000000000000000000000000000) (bvslt (index!3196 lt!57132) (size!2338 (_keys!4341 newMap!16))))))

(declare-fun res!54724 () Bool)

(assert (=> b!110701 (= res!54724 (= (select (arr!2081 (_keys!4341 newMap!16)) (index!3196 lt!57132)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(assert (=> b!110701 (=> res!54724 e!71983)))

(declare-fun e!71984 () Bool)

(assert (=> b!110701 (= e!71984 e!71983)))

(declare-fun b!110702 () Bool)

(assert (=> b!110702 (= e!71987 (bvsge (x!13949 lt!57132) #b01111111111111111111111111111110))))

(declare-fun b!110703 () Bool)

(assert (=> b!110703 (= e!71985 (Intermediate!261 false (toIndex!0 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (mask!6795 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!110704 () Bool)

(assert (=> b!110704 (= e!71987 e!71984)))

(declare-fun res!54726 () Bool)

(assert (=> b!110704 (= res!54726 (and ((_ is Intermediate!261) lt!57132) (not (undefined!1073 lt!57132)) (bvslt (x!13949 lt!57132) #b01111111111111111111111111111110) (bvsge (x!13949 lt!57132) #b00000000000000000000000000000000) (bvsge (x!13949 lt!57132) #b00000000000000000000000000000000)))))

(assert (=> b!110704 (=> (not res!54726) (not e!71984))))

(declare-fun b!110705 () Bool)

(assert (=> b!110705 (and (bvsge (index!3196 lt!57132) #b00000000000000000000000000000000) (bvslt (index!3196 lt!57132) (size!2338 (_keys!4341 newMap!16))))))

(assert (=> b!110705 (= e!71983 (= (select (arr!2081 (_keys!4341 newMap!16)) (index!3196 lt!57132)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110706 () Bool)

(assert (=> b!110706 (= e!71986 e!71985)))

(declare-fun c!19660 () Bool)

(assert (=> b!110706 (= c!19660 (or (= lt!57131 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) (= (bvadd lt!57131 lt!57131) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!31167 c!19658) b!110700))

(assert (= (and d!31167 (not c!19658)) b!110706))

(assert (= (and b!110706 c!19660) b!110703))

(assert (= (and b!110706 (not c!19660)) b!110699))

(assert (= (and d!31167 c!19659) b!110702))

(assert (= (and d!31167 (not c!19659)) b!110704))

(assert (= (and b!110704 res!54726) b!110701))

(assert (= (and b!110701 (not res!54724)) b!110698))

(assert (= (and b!110698 (not res!54725)) b!110705))

(assert (=> b!110699 m!124831))

(declare-fun m!125705 () Bool)

(assert (=> b!110699 m!125705))

(assert (=> b!110699 m!125705))

(assert (=> b!110699 m!124315))

(declare-fun m!125707 () Bool)

(assert (=> b!110699 m!125707))

(declare-fun m!125709 () Bool)

(assert (=> b!110701 m!125709))

(assert (=> b!110698 m!125709))

(assert (=> d!31167 m!124831))

(declare-fun m!125711 () Bool)

(assert (=> d!31167 m!125711))

(assert (=> d!31167 m!124669))

(assert (=> b!110705 m!125709))

(assert (=> d!30907 d!31167))

(declare-fun d!31169 () Bool)

(declare-fun lt!57138 () (_ BitVec 32))

(declare-fun lt!57137 () (_ BitVec 32))

(assert (=> d!31169 (= lt!57138 (bvmul (bvxor lt!57137 (bvlshr lt!57137 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!31169 (= lt!57137 ((_ extract 31 0) (bvand (bvxor (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (bvlshr (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!31169 (and (bvsge (mask!6795 newMap!16) #b00000000000000000000000000000000) (let ((res!54727 (let ((h!2227 ((_ extract 31 0) (bvand (bvxor (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (bvlshr (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!14051 (bvmul (bvxor h!2227 (bvlshr h!2227 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!14051 (bvlshr x!14051 #b00000000000000000000000000001101)) (mask!6795 newMap!16)))))) (and (bvslt res!54727 (bvadd (mask!6795 newMap!16) #b00000000000000000000000000000001)) (bvsge res!54727 #b00000000000000000000000000000000))))))

(assert (=> d!31169 (= (toIndex!0 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (mask!6795 newMap!16)) (bvand (bvxor lt!57138 (bvlshr lt!57138 #b00000000000000000000000000001101)) (mask!6795 newMap!16)))))

(assert (=> d!30907 d!31169))

(assert (=> d!30907 d!31129))

(declare-fun d!31171 () Bool)

(assert (=> d!31171 (= (content!114 Nil!1628) ((as const (Array (_ BitVec 64) Bool)) false))))

(assert (=> d!30989 d!31171))

(declare-fun b!110707 () Bool)

(declare-fun e!71988 () Option!164)

(assert (=> b!110707 (= e!71988 (Some!163 (_2!1231 (h!2225 (toList!811 lt!56866)))))))

(declare-fun b!110709 () Bool)

(declare-fun e!71989 () Option!164)

(assert (=> b!110709 (= e!71989 (getValueByKey!158 (t!5767 (toList!811 lt!56866)) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))

(declare-fun c!19661 () Bool)

(declare-fun d!31173 () Bool)

(assert (=> d!31173 (= c!19661 (and ((_ is Cons!1626) (toList!811 lt!56866)) (= (_1!1231 (h!2225 (toList!811 lt!56866))) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))))))

(assert (=> d!31173 (= (getValueByKey!158 (toList!811 lt!56866) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))) e!71988)))

(declare-fun b!110708 () Bool)

(assert (=> b!110708 (= e!71988 e!71989)))

(declare-fun c!19662 () Bool)

(assert (=> b!110708 (= c!19662 (and ((_ is Cons!1626) (toList!811 lt!56866)) (not (= (_1!1231 (h!2225 (toList!811 lt!56866))) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))))

(declare-fun b!110710 () Bool)

(assert (=> b!110710 (= e!71989 None!162)))

(assert (= (and d!31173 c!19661) b!110707))

(assert (= (and d!31173 (not c!19661)) b!110708))

(assert (= (and b!110708 c!19662) b!110709))

(assert (= (and b!110708 (not c!19662)) b!110710))

(declare-fun m!125713 () Bool)

(assert (=> b!110709 m!125713))

(assert (=> b!110341 d!31173))

(assert (=> d!30905 d!30907))

(declare-fun call!11823 () Bool)

(declare-fun bm!11819 () Bool)

(assert (=> bm!11819 (= call!11823 (arrayContainsKey!0 (_keys!4341 newMap!16) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!110727 () Bool)

(declare-fun e!72001 () Bool)

(assert (=> b!110727 (= e!72001 (not call!11823))))

(declare-fun b!110728 () Bool)

(declare-fun e!71998 () Bool)

(declare-fun lt!57141 () SeekEntryResult!261)

(assert (=> b!110728 (= e!71998 ((_ is Undefined!261) lt!57141))))

(declare-fun b!110729 () Bool)

(declare-fun e!72000 () Bool)

(assert (=> b!110729 (= e!72000 e!72001)))

(declare-fun res!54737 () Bool)

(declare-fun call!11822 () Bool)

(assert (=> b!110729 (= res!54737 call!11822)))

(assert (=> b!110729 (=> (not res!54737) (not e!72001))))

(declare-fun b!110730 () Bool)

(assert (=> b!110730 (= e!72000 e!71998)))

(declare-fun c!19668 () Bool)

(assert (=> b!110730 (= c!19668 ((_ is MissingVacant!261) lt!57141))))

(declare-fun b!110731 () Bool)

(declare-fun res!54736 () Bool)

(declare-fun e!71999 () Bool)

(assert (=> b!110731 (=> (not res!54736) (not e!71999))))

(assert (=> b!110731 (= res!54736 call!11822)))

(assert (=> b!110731 (= e!71998 e!71999)))

(declare-fun d!31175 () Bool)

(assert (=> d!31175 e!72000))

(declare-fun c!19667 () Bool)

(assert (=> d!31175 (= c!19667 ((_ is MissingZero!261) lt!57141))))

(assert (=> d!31175 (= lt!57141 (seekEntryOrOpen!0 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (_keys!4341 newMap!16) (mask!6795 newMap!16)))))

(assert (=> d!31175 true))

(declare-fun _$34!903 () Unit!3403)

(assert (=> d!31175 (= (choose!688 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (defaultEntry!2627 newMap!16)) _$34!903)))

(declare-fun bm!11820 () Bool)

(assert (=> bm!11820 (= call!11822 (inRange!0 (ite c!19667 (index!3194 lt!57141) (index!3197 lt!57141)) (mask!6795 newMap!16)))))

(declare-fun b!110732 () Bool)

(declare-fun res!54739 () Bool)

(assert (=> b!110732 (= res!54739 (= (select (arr!2081 (_keys!4341 newMap!16)) (index!3194 lt!57141)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!110732 (=> (not res!54739) (not e!72001))))

(declare-fun b!110733 () Bool)

(assert (=> b!110733 (= e!71999 (not call!11823))))

(declare-fun b!110734 () Bool)

(declare-fun res!54738 () Bool)

(assert (=> b!110734 (=> (not res!54738) (not e!71999))))

(assert (=> b!110734 (= res!54738 (= (select (arr!2081 (_keys!4341 newMap!16)) (index!3197 lt!57141)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!31175 c!19667) b!110729))

(assert (= (and d!31175 (not c!19667)) b!110730))

(assert (= (and b!110729 res!54737) b!110732))

(assert (= (and b!110732 res!54739) b!110727))

(assert (= (and b!110730 c!19668) b!110731))

(assert (= (and b!110730 (not c!19668)) b!110728))

(assert (= (and b!110731 res!54736) b!110734))

(assert (= (and b!110734 res!54738) b!110733))

(assert (= (or b!110729 b!110731) bm!11820))

(assert (= (or b!110727 b!110733) bm!11819))

(declare-fun m!125715 () Bool)

(assert (=> b!110734 m!125715))

(declare-fun m!125717 () Bool)

(assert (=> bm!11820 m!125717))

(declare-fun m!125719 () Bool)

(assert (=> b!110732 m!125719))

(assert (=> d!31175 m!124315))

(assert (=> d!31175 m!124453))

(assert (=> bm!11819 m!124315))

(assert (=> bm!11819 m!124447))

(assert (=> d!30905 d!31175))

(assert (=> d!30905 d!31129))

(declare-fun d!31177 () Bool)

(declare-fun res!54740 () Bool)

(declare-fun e!72002 () Bool)

(assert (=> d!31177 (=> res!54740 e!72002)))

(assert (=> d!31177 (= res!54740 (or ((_ is Nil!1627) lt!56863) ((_ is Nil!1627) (t!5767 lt!56863))))))

(assert (=> d!31177 (= (isStrictlySorted!311 lt!56863) e!72002)))

(declare-fun b!110735 () Bool)

(declare-fun e!72003 () Bool)

(assert (=> b!110735 (= e!72002 e!72003)))

(declare-fun res!54741 () Bool)

(assert (=> b!110735 (=> (not res!54741) (not e!72003))))

(assert (=> b!110735 (= res!54741 (bvslt (_1!1231 (h!2225 lt!56863)) (_1!1231 (h!2225 (t!5767 lt!56863)))))))

(declare-fun b!110736 () Bool)

(assert (=> b!110736 (= e!72003 (isStrictlySorted!311 (t!5767 lt!56863)))))

(assert (= (and d!31177 (not res!54740)) b!110735))

(assert (= (and b!110735 res!54741) b!110736))

(declare-fun m!125721 () Bool)

(assert (=> b!110736 m!125721))

(assert (=> d!30945 d!31177))

(declare-fun d!31179 () Bool)

(declare-fun res!54742 () Bool)

(declare-fun e!72004 () Bool)

(assert (=> d!31179 (=> res!54742 e!72004)))

(assert (=> d!31179 (= res!54742 (or ((_ is Nil!1627) (toList!811 lt!56462)) ((_ is Nil!1627) (t!5767 (toList!811 lt!56462)))))))

(assert (=> d!31179 (= (isStrictlySorted!311 (toList!811 lt!56462)) e!72004)))

(declare-fun b!110737 () Bool)

(declare-fun e!72005 () Bool)

(assert (=> b!110737 (= e!72004 e!72005)))

(declare-fun res!54743 () Bool)

(assert (=> b!110737 (=> (not res!54743) (not e!72005))))

(assert (=> b!110737 (= res!54743 (bvslt (_1!1231 (h!2225 (toList!811 lt!56462))) (_1!1231 (h!2225 (t!5767 (toList!811 lt!56462))))))))

(declare-fun b!110738 () Bool)

(assert (=> b!110738 (= e!72005 (isStrictlySorted!311 (t!5767 (toList!811 lt!56462))))))

(assert (= (and d!31179 (not res!54742)) b!110737))

(assert (= (and b!110737 res!54743) b!110738))

(declare-fun m!125723 () Bool)

(assert (=> b!110738 m!125723))

(assert (=> d!30945 d!31179))

(declare-fun d!31181 () Bool)

(assert (=> d!31181 (= (map!1299 (_2!1230 lt!57017)) (getCurrentListMap!496 (_keys!4341 (_2!1230 lt!57017)) (_values!2610 (_2!1230 lt!57017)) (mask!6795 (_2!1230 lt!57017)) (extraKeys!2424 (_2!1230 lt!57017)) (zeroValue!2498 (_2!1230 lt!57017)) (minValue!2498 (_2!1230 lt!57017)) #b00000000000000000000000000000000 (defaultEntry!2627 (_2!1230 lt!57017))))))

(declare-fun bs!4551 () Bool)

(assert (= bs!4551 d!31181))

(declare-fun m!125725 () Bool)

(assert (=> bs!4551 m!125725))

(assert (=> b!110474 d!31181))

(declare-fun d!31183 () Bool)

(declare-fun e!72006 () Bool)

(assert (=> d!31183 e!72006))

(declare-fun res!54744 () Bool)

(assert (=> d!31183 (=> (not res!54744) (not e!72006))))

(declare-fun lt!57144 () ListLongMap!1591)

(assert (=> d!31183 (= res!54744 (contains!838 lt!57144 (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))

(declare-fun lt!57143 () List!1630)

(assert (=> d!31183 (= lt!57144 (ListLongMap!1592 lt!57143))))

(declare-fun lt!57145 () Unit!3403)

(declare-fun lt!57142 () Unit!3403)

(assert (=> d!31183 (= lt!57145 lt!57142)))

(assert (=> d!31183 (= (getValueByKey!158 lt!57143 (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))) (Some!163 (_2!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))

(assert (=> d!31183 (= lt!57142 (lemmaContainsTupThenGetReturnValue!74 lt!57143 (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)) (_2!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))

(assert (=> d!31183 (= lt!57143 (insertStrictlySorted!77 (toList!811 (map!1299 newMap!16)) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)) (_2!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))

(assert (=> d!31183 (= (+!150 (map!1299 newMap!16) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)) lt!57144)))

(declare-fun b!110739 () Bool)

(declare-fun res!54745 () Bool)

(assert (=> b!110739 (=> (not res!54745) (not e!72006))))

(assert (=> b!110739 (= res!54745 (= (getValueByKey!158 (toList!811 lt!57144) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))) (Some!163 (_2!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))))))

(declare-fun b!110740 () Bool)

(assert (=> b!110740 (= e!72006 (contains!839 (toList!811 lt!57144) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))))

(assert (= (and d!31183 res!54744) b!110739))

(assert (= (and b!110739 res!54745) b!110740))

(declare-fun m!125727 () Bool)

(assert (=> d!31183 m!125727))

(declare-fun m!125729 () Bool)

(assert (=> d!31183 m!125729))

(declare-fun m!125731 () Bool)

(assert (=> d!31183 m!125731))

(declare-fun m!125733 () Bool)

(assert (=> d!31183 m!125733))

(declare-fun m!125735 () Bool)

(assert (=> b!110739 m!125735))

(declare-fun m!125737 () Bool)

(assert (=> b!110740 m!125737))

(assert (=> b!110474 d!31183))

(assert (=> b!110474 d!30837))

(declare-fun d!31185 () Bool)

(declare-fun lt!57146 () Bool)

(assert (=> d!31185 (= lt!57146 (select (content!113 (toList!811 lt!56935)) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun e!72008 () Bool)

(assert (=> d!31185 (= lt!57146 e!72008)))

(declare-fun res!54746 () Bool)

(assert (=> d!31185 (=> (not res!54746) (not e!72008))))

(assert (=> d!31185 (= res!54746 ((_ is Cons!1626) (toList!811 lt!56935)))))

(assert (=> d!31185 (= (contains!839 (toList!811 lt!56935) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))) lt!57146)))

(declare-fun b!110741 () Bool)

(declare-fun e!72007 () Bool)

(assert (=> b!110741 (= e!72008 e!72007)))

(declare-fun res!54747 () Bool)

(assert (=> b!110741 (=> res!54747 e!72007)))

(assert (=> b!110741 (= res!54747 (= (h!2225 (toList!811 lt!56935)) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun b!110742 () Bool)

(assert (=> b!110742 (= e!72007 (contains!839 (t!5767 (toList!811 lt!56935)) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))))

(assert (= (and d!31185 res!54746) b!110741))

(assert (= (and b!110741 (not res!54747)) b!110742))

(declare-fun m!125739 () Bool)

(assert (=> d!31185 m!125739))

(declare-fun m!125741 () Bool)

(assert (=> d!31185 m!125741))

(declare-fun m!125743 () Bool)

(assert (=> b!110742 m!125743))

(assert (=> b!110406 d!31185))

(declare-fun d!31187 () Bool)

(declare-fun e!72009 () Bool)

(assert (=> d!31187 e!72009))

(declare-fun res!54748 () Bool)

(assert (=> d!31187 (=> res!54748 e!72009)))

(declare-fun lt!57147 () Bool)

(assert (=> d!31187 (= res!54748 (not lt!57147))))

(declare-fun lt!57148 () Bool)

(assert (=> d!31187 (= lt!57147 lt!57148)))

(declare-fun lt!57150 () Unit!3403)

(declare-fun e!72010 () Unit!3403)

(assert (=> d!31187 (= lt!57150 e!72010)))

(declare-fun c!19669 () Bool)

(assert (=> d!31187 (= c!19669 lt!57148)))

(assert (=> d!31187 (= lt!57148 (containsKey!162 (toList!811 lt!56747) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!31187 (= (contains!838 lt!56747 #b0000000000000000000000000000000000000000000000000000000000000000) lt!57147)))

(declare-fun b!110743 () Bool)

(declare-fun lt!57149 () Unit!3403)

(assert (=> b!110743 (= e!72010 lt!57149)))

(assert (=> b!110743 (= lt!57149 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 lt!56747) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!110743 (isDefined!111 (getValueByKey!158 (toList!811 lt!56747) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110744 () Bool)

(declare-fun Unit!3440 () Unit!3403)

(assert (=> b!110744 (= e!72010 Unit!3440)))

(declare-fun b!110745 () Bool)

(assert (=> b!110745 (= e!72009 (isDefined!111 (getValueByKey!158 (toList!811 lt!56747) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!31187 c!19669) b!110743))

(assert (= (and d!31187 (not c!19669)) b!110744))

(assert (= (and d!31187 (not res!54748)) b!110745))

(declare-fun m!125745 () Bool)

(assert (=> d!31187 m!125745))

(declare-fun m!125747 () Bool)

(assert (=> b!110743 m!125747))

(declare-fun m!125749 () Bool)

(assert (=> b!110743 m!125749))

(assert (=> b!110743 m!125749))

(declare-fun m!125751 () Bool)

(assert (=> b!110743 m!125751))

(assert (=> b!110745 m!125749))

(assert (=> b!110745 m!125749))

(assert (=> b!110745 m!125751))

(assert (=> bm!11746 d!31187))

(declare-fun d!31189 () Bool)

(declare-fun e!72011 () Bool)

(assert (=> d!31189 e!72011))

(declare-fun res!54749 () Bool)

(assert (=> d!31189 (=> res!54749 e!72011)))

(declare-fun lt!57151 () Bool)

(assert (=> d!31189 (= res!54749 (not lt!57151))))

(declare-fun lt!57152 () Bool)

(assert (=> d!31189 (= lt!57151 lt!57152)))

(declare-fun lt!57154 () Unit!3403)

(declare-fun e!72012 () Unit!3403)

(assert (=> d!31189 (= lt!57154 e!72012)))

(declare-fun c!19670 () Bool)

(assert (=> d!31189 (= c!19670 lt!57152)))

(assert (=> d!31189 (= lt!57152 (containsKey!162 (toList!811 lt!56866) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))

(assert (=> d!31189 (= (contains!838 lt!56866 (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))) lt!57151)))

(declare-fun b!110746 () Bool)

(declare-fun lt!57153 () Unit!3403)

(assert (=> b!110746 (= e!72012 lt!57153)))

(assert (=> b!110746 (= lt!57153 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 lt!56866) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))

(assert (=> b!110746 (isDefined!111 (getValueByKey!158 (toList!811 lt!56866) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))

(declare-fun b!110747 () Bool)

(declare-fun Unit!3441 () Unit!3403)

(assert (=> b!110747 (= e!72012 Unit!3441)))

(declare-fun b!110748 () Bool)

(assert (=> b!110748 (= e!72011 (isDefined!111 (getValueByKey!158 (toList!811 lt!56866) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))))))

(assert (= (and d!31189 c!19670) b!110746))

(assert (= (and d!31189 (not c!19670)) b!110747))

(assert (= (and d!31189 (not res!54749)) b!110748))

(declare-fun m!125753 () Bool)

(assert (=> d!31189 m!125753))

(declare-fun m!125755 () Bool)

(assert (=> b!110746 m!125755))

(assert (=> b!110746 m!125063))

(assert (=> b!110746 m!125063))

(declare-fun m!125757 () Bool)

(assert (=> b!110746 m!125757))

(assert (=> b!110748 m!125063))

(assert (=> b!110748 m!125063))

(assert (=> b!110748 m!125757))

(assert (=> d!30947 d!31189))

(declare-fun b!110749 () Bool)

(declare-fun e!72013 () Option!164)

(assert (=> b!110749 (= e!72013 (Some!163 (_2!1231 (h!2225 lt!56865))))))

(declare-fun b!110751 () Bool)

(declare-fun e!72014 () Option!164)

(assert (=> b!110751 (= e!72014 (getValueByKey!158 (t!5767 lt!56865) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))

(declare-fun d!31191 () Bool)

(declare-fun c!19671 () Bool)

(assert (=> d!31191 (= c!19671 (and ((_ is Cons!1626) lt!56865) (= (_1!1231 (h!2225 lt!56865)) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))))))

(assert (=> d!31191 (= (getValueByKey!158 lt!56865 (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))) e!72013)))

(declare-fun b!110750 () Bool)

(assert (=> b!110750 (= e!72013 e!72014)))

(declare-fun c!19672 () Bool)

(assert (=> b!110750 (= c!19672 (and ((_ is Cons!1626) lt!56865) (not (= (_1!1231 (h!2225 lt!56865)) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))))

(declare-fun b!110752 () Bool)

(assert (=> b!110752 (= e!72014 None!162)))

(assert (= (and d!31191 c!19671) b!110749))

(assert (= (and d!31191 (not c!19671)) b!110750))

(assert (= (and b!110750 c!19672) b!110751))

(assert (= (and b!110750 (not c!19672)) b!110752))

(declare-fun m!125759 () Bool)

(assert (=> b!110751 m!125759))

(assert (=> d!30947 d!31191))

(declare-fun d!31193 () Bool)

(assert (=> d!31193 (= (getValueByKey!158 lt!56865 (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))) (Some!163 (_2!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))

(declare-fun lt!57155 () Unit!3403)

(assert (=> d!31193 (= lt!57155 (choose!687 lt!56865 (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)) (_2!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))

(declare-fun e!72015 () Bool)

(assert (=> d!31193 e!72015))

(declare-fun res!54750 () Bool)

(assert (=> d!31193 (=> (not res!54750) (not e!72015))))

(assert (=> d!31193 (= res!54750 (isStrictlySorted!311 lt!56865))))

(assert (=> d!31193 (= (lemmaContainsTupThenGetReturnValue!74 lt!56865 (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)) (_2!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))) lt!57155)))

(declare-fun b!110753 () Bool)

(declare-fun res!54751 () Bool)

(assert (=> b!110753 (=> (not res!54751) (not e!72015))))

(assert (=> b!110753 (= res!54751 (containsKey!162 lt!56865 (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))

(declare-fun b!110754 () Bool)

(assert (=> b!110754 (= e!72015 (contains!839 lt!56865 (tuple2!2441 (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)) (_2!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))))))

(assert (= (and d!31193 res!54750) b!110753))

(assert (= (and b!110753 res!54751) b!110754))

(assert (=> d!31193 m!125057))

(declare-fun m!125761 () Bool)

(assert (=> d!31193 m!125761))

(declare-fun m!125763 () Bool)

(assert (=> d!31193 m!125763))

(declare-fun m!125765 () Bool)

(assert (=> b!110753 m!125765))

(declare-fun m!125767 () Bool)

(assert (=> b!110754 m!125767))

(assert (=> d!30947 d!31193))

(declare-fun b!110755 () Bool)

(declare-fun e!72020 () List!1630)

(declare-fun e!72019 () List!1630)

(assert (=> b!110755 (= e!72020 e!72019)))

(declare-fun c!19675 () Bool)

(assert (=> b!110755 (= c!19675 (and ((_ is Cons!1626) (toList!811 call!11705)) (= (_1!1231 (h!2225 (toList!811 call!11705))) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))))))

(declare-fun bm!11821 () Bool)

(declare-fun call!11824 () List!1630)

(declare-fun call!11825 () List!1630)

(assert (=> bm!11821 (= call!11824 call!11825)))

(declare-fun b!110756 () Bool)

(assert (=> b!110756 (= e!72020 call!11825)))

(declare-fun bm!11822 () Bool)

(declare-fun call!11826 () List!1630)

(assert (=> bm!11822 (= call!11826 call!11824)))

(declare-fun e!72018 () List!1630)

(declare-fun bm!11823 () Bool)

(declare-fun c!19673 () Bool)

(assert (=> bm!11823 (= call!11825 ($colon$colon!83 e!72018 (ite c!19673 (h!2225 (toList!811 call!11705)) (tuple2!2441 (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)) (_2!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))))

(declare-fun c!19676 () Bool)

(assert (=> bm!11823 (= c!19676 c!19673)))

(declare-fun b!110757 () Bool)

(assert (=> b!110757 (= e!72019 call!11824)))

(declare-fun e!72017 () Bool)

(declare-fun b!110759 () Bool)

(declare-fun lt!57156 () List!1630)

(assert (=> b!110759 (= e!72017 (contains!839 lt!57156 (tuple2!2441 (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)) (_2!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))))))

(declare-fun b!110760 () Bool)

(declare-fun e!72016 () List!1630)

(assert (=> b!110760 (= e!72016 call!11826)))

(declare-fun b!110761 () Bool)

(declare-fun res!54753 () Bool)

(assert (=> b!110761 (=> (not res!54753) (not e!72017))))

(assert (=> b!110761 (= res!54753 (containsKey!162 lt!57156 (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))

(declare-fun c!19674 () Bool)

(declare-fun b!110762 () Bool)

(assert (=> b!110762 (= c!19674 (and ((_ is Cons!1626) (toList!811 call!11705)) (bvsgt (_1!1231 (h!2225 (toList!811 call!11705))) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))))))

(assert (=> b!110762 (= e!72019 e!72016)))

(declare-fun b!110763 () Bool)

(assert (=> b!110763 (= e!72016 call!11826)))

(declare-fun b!110764 () Bool)

(assert (=> b!110764 (= e!72018 (ite c!19675 (t!5767 (toList!811 call!11705)) (ite c!19674 (Cons!1626 (h!2225 (toList!811 call!11705)) (t!5767 (toList!811 call!11705))) Nil!1627)))))

(declare-fun b!110758 () Bool)

(assert (=> b!110758 (= e!72018 (insertStrictlySorted!77 (t!5767 (toList!811 call!11705)) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)) (_2!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))

(declare-fun d!31195 () Bool)

(assert (=> d!31195 e!72017))

(declare-fun res!54752 () Bool)

(assert (=> d!31195 (=> (not res!54752) (not e!72017))))

(assert (=> d!31195 (= res!54752 (isStrictlySorted!311 lt!57156))))

(assert (=> d!31195 (= lt!57156 e!72020)))

(assert (=> d!31195 (= c!19673 (and ((_ is Cons!1626) (toList!811 call!11705)) (bvslt (_1!1231 (h!2225 (toList!811 call!11705))) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))))))

(assert (=> d!31195 (isStrictlySorted!311 (toList!811 call!11705))))

(assert (=> d!31195 (= (insertStrictlySorted!77 (toList!811 call!11705) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)) (_2!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))) lt!57156)))

(assert (= (and d!31195 c!19673) b!110756))

(assert (= (and d!31195 (not c!19673)) b!110755))

(assert (= (and b!110755 c!19675) b!110757))

(assert (= (and b!110755 (not c!19675)) b!110762))

(assert (= (and b!110762 c!19674) b!110760))

(assert (= (and b!110762 (not c!19674)) b!110763))

(assert (= (or b!110760 b!110763) bm!11822))

(assert (= (or b!110757 bm!11822) bm!11821))

(assert (= (or b!110756 bm!11821) bm!11823))

(assert (= (and bm!11823 c!19676) b!110758))

(assert (= (and bm!11823 (not c!19676)) b!110764))

(assert (= (and d!31195 res!54752) b!110761))

(assert (= (and b!110761 res!54753) b!110759))

(declare-fun m!125769 () Bool)

(assert (=> b!110761 m!125769))

(declare-fun m!125771 () Bool)

(assert (=> b!110758 m!125771))

(declare-fun m!125773 () Bool)

(assert (=> b!110759 m!125773))

(declare-fun m!125775 () Bool)

(assert (=> d!31195 m!125775))

(declare-fun m!125777 () Bool)

(assert (=> d!31195 m!125777))

(declare-fun m!125779 () Bool)

(assert (=> bm!11823 m!125779))

(assert (=> d!30947 d!31195))

(declare-fun b!110765 () Bool)

(declare-fun e!72024 () Bool)

(declare-fun e!72023 () Bool)

(assert (=> b!110765 (= e!72024 e!72023)))

(declare-fun res!54754 () Bool)

(assert (=> b!110765 (=> (not res!54754) (not e!72023))))

(declare-fun e!72022 () Bool)

(assert (=> b!110765 (= res!54754 (not e!72022))))

(declare-fun res!54755 () Bool)

(assert (=> b!110765 (=> (not res!54755) (not e!72022))))

(assert (=> b!110765 (= res!54755 (validKeyInArray!0 (select (arr!2081 (_keys!4341 (_2!1230 lt!56590))) #b00000000000000000000000000000000)))))

(declare-fun b!110766 () Bool)

(declare-fun e!72021 () Bool)

(declare-fun call!11827 () Bool)

(assert (=> b!110766 (= e!72021 call!11827)))

(declare-fun b!110767 () Bool)

(assert (=> b!110767 (= e!72023 e!72021)))

(declare-fun c!19677 () Bool)

(assert (=> b!110767 (= c!19677 (validKeyInArray!0 (select (arr!2081 (_keys!4341 (_2!1230 lt!56590))) #b00000000000000000000000000000000)))))

(declare-fun bm!11824 () Bool)

(assert (=> bm!11824 (= call!11827 (arrayNoDuplicates!0 (_keys!4341 (_2!1230 lt!56590)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!19677 (Cons!1627 (select (arr!2081 (_keys!4341 (_2!1230 lt!56590))) #b00000000000000000000000000000000) Nil!1628) Nil!1628)))))

(declare-fun b!110768 () Bool)

(assert (=> b!110768 (= e!72021 call!11827)))

(declare-fun b!110769 () Bool)

(assert (=> b!110769 (= e!72022 (contains!840 Nil!1628 (select (arr!2081 (_keys!4341 (_2!1230 lt!56590))) #b00000000000000000000000000000000)))))

(declare-fun d!31197 () Bool)

(declare-fun res!54756 () Bool)

(assert (=> d!31197 (=> res!54756 e!72024)))

(assert (=> d!31197 (= res!54756 (bvsge #b00000000000000000000000000000000 (size!2338 (_keys!4341 (_2!1230 lt!56590)))))))

(assert (=> d!31197 (= (arrayNoDuplicates!0 (_keys!4341 (_2!1230 lt!56590)) #b00000000000000000000000000000000 Nil!1628) e!72024)))

(assert (= (and d!31197 (not res!54756)) b!110765))

(assert (= (and b!110765 res!54755) b!110769))

(assert (= (and b!110765 res!54754) b!110767))

(assert (= (and b!110767 c!19677) b!110766))

(assert (= (and b!110767 (not c!19677)) b!110768))

(assert (= (or b!110766 b!110768) bm!11824))

(declare-fun m!125781 () Bool)

(assert (=> b!110765 m!125781))

(assert (=> b!110765 m!125781))

(declare-fun m!125783 () Bool)

(assert (=> b!110765 m!125783))

(assert (=> b!110767 m!125781))

(assert (=> b!110767 m!125781))

(assert (=> b!110767 m!125783))

(assert (=> bm!11824 m!125781))

(declare-fun m!125785 () Bool)

(assert (=> bm!11824 m!125785))

(assert (=> b!110769 m!125781))

(assert (=> b!110769 m!125781))

(declare-fun m!125787 () Bool)

(assert (=> b!110769 m!125787))

(assert (=> b!110259 d!31197))

(assert (=> b!110529 d!30847))

(declare-fun d!31199 () Bool)

(assert (=> d!31199 (contains!838 (+!150 lt!56743 (tuple2!2441 lt!56742 (zeroValue!2498 newMap!16))) lt!56745)))

(declare-fun lt!57157 () Unit!3403)

(assert (=> d!31199 (= lt!57157 (choose!692 lt!56743 lt!56742 (zeroValue!2498 newMap!16) lt!56745))))

(assert (=> d!31199 (contains!838 lt!56743 lt!56745)))

(assert (=> d!31199 (= (addStillContains!76 lt!56743 lt!56742 (zeroValue!2498 newMap!16) lt!56745) lt!57157)))

(declare-fun bs!4552 () Bool)

(assert (= bs!4552 d!31199))

(assert (=> bs!4552 m!124715))

(assert (=> bs!4552 m!124715))

(assert (=> bs!4552 m!124721))

(declare-fun m!125789 () Bool)

(assert (=> bs!4552 m!125789))

(declare-fun m!125791 () Bool)

(assert (=> bs!4552 m!125791))

(assert (=> b!110110 d!31199))

(declare-fun d!31201 () Bool)

(declare-fun e!72025 () Bool)

(assert (=> d!31201 e!72025))

(declare-fun res!54757 () Bool)

(assert (=> d!31201 (=> (not res!54757) (not e!72025))))

(declare-fun lt!57160 () ListLongMap!1591)

(assert (=> d!31201 (= res!54757 (contains!838 lt!57160 (_1!1231 (tuple2!2441 lt!56737 (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16))))))))

(declare-fun lt!57159 () List!1630)

(assert (=> d!31201 (= lt!57160 (ListLongMap!1592 lt!57159))))

(declare-fun lt!57161 () Unit!3403)

(declare-fun lt!57158 () Unit!3403)

(assert (=> d!31201 (= lt!57161 lt!57158)))

(assert (=> d!31201 (= (getValueByKey!158 lt!57159 (_1!1231 (tuple2!2441 lt!56737 (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16))))) (Some!163 (_2!1231 (tuple2!2441 lt!56737 (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16))))))))

(assert (=> d!31201 (= lt!57158 (lemmaContainsTupThenGetReturnValue!74 lt!57159 (_1!1231 (tuple2!2441 lt!56737 (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16)))) (_2!1231 (tuple2!2441 lt!56737 (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16))))))))

(assert (=> d!31201 (= lt!57159 (insertStrictlySorted!77 (toList!811 lt!56746) (_1!1231 (tuple2!2441 lt!56737 (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16)))) (_2!1231 (tuple2!2441 lt!56737 (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16))))))))

(assert (=> d!31201 (= (+!150 lt!56746 (tuple2!2441 lt!56737 (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16)))) lt!57160)))

(declare-fun b!110770 () Bool)

(declare-fun res!54758 () Bool)

(assert (=> b!110770 (=> (not res!54758) (not e!72025))))

(assert (=> b!110770 (= res!54758 (= (getValueByKey!158 (toList!811 lt!57160) (_1!1231 (tuple2!2441 lt!56737 (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16))))) (Some!163 (_2!1231 (tuple2!2441 lt!56737 (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16)))))))))

(declare-fun b!110771 () Bool)

(assert (=> b!110771 (= e!72025 (contains!839 (toList!811 lt!57160) (tuple2!2441 lt!56737 (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16)))))))

(assert (= (and d!31201 res!54757) b!110770))

(assert (= (and b!110770 res!54758) b!110771))

(declare-fun m!125793 () Bool)

(assert (=> d!31201 m!125793))

(declare-fun m!125795 () Bool)

(assert (=> d!31201 m!125795))

(declare-fun m!125797 () Bool)

(assert (=> d!31201 m!125797))

(declare-fun m!125799 () Bool)

(assert (=> d!31201 m!125799))

(declare-fun m!125801 () Bool)

(assert (=> b!110770 m!125801))

(declare-fun m!125803 () Bool)

(assert (=> b!110771 m!125803))

(assert (=> b!110110 d!31201))

(declare-fun d!31203 () Bool)

(assert (=> d!31203 (= (apply!100 (+!150 lt!56746 (tuple2!2441 lt!56737 (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16)))) lt!56744) (apply!100 lt!56746 lt!56744))))

(declare-fun lt!57162 () Unit!3403)

(assert (=> d!31203 (= lt!57162 (choose!691 lt!56746 lt!56737 (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16)) lt!56744))))

(declare-fun e!72026 () Bool)

(assert (=> d!31203 e!72026))

(declare-fun res!54759 () Bool)

(assert (=> d!31203 (=> (not res!54759) (not e!72026))))

(assert (=> d!31203 (= res!54759 (contains!838 lt!56746 lt!56744))))

(assert (=> d!31203 (= (addApplyDifferent!76 lt!56746 lt!56737 (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16)) lt!56744) lt!57162)))

(declare-fun b!110772 () Bool)

(assert (=> b!110772 (= e!72026 (not (= lt!56744 lt!56737)))))

(assert (= (and d!31203 res!54759) b!110772))

(declare-fun m!125805 () Bool)

(assert (=> d!31203 m!125805))

(declare-fun m!125807 () Bool)

(assert (=> d!31203 m!125807))

(assert (=> d!31203 m!124705))

(assert (=> d!31203 m!124705))

(assert (=> d!31203 m!124725))

(assert (=> d!31203 m!124729))

(assert (=> b!110110 d!31203))

(declare-fun b!110773 () Bool)

(declare-fun e!72030 () Bool)

(declare-fun e!72031 () Bool)

(assert (=> b!110773 (= e!72030 e!72031)))

(declare-fun c!19679 () Bool)

(assert (=> b!110773 (= c!19679 (bvslt #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))))))

(declare-fun b!110774 () Bool)

(declare-fun e!72033 () Bool)

(assert (=> b!110774 (= e!72033 e!72030)))

(declare-fun c!19680 () Bool)

(declare-fun e!72027 () Bool)

(assert (=> b!110774 (= c!19680 e!72027)))

(declare-fun res!54763 () Bool)

(assert (=> b!110774 (=> (not res!54763) (not e!72027))))

(assert (=> b!110774 (= res!54763 (bvslt #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))))))

(declare-fun b!110775 () Bool)

(declare-fun lt!57168 () Unit!3403)

(declare-fun lt!57164 () Unit!3403)

(assert (=> b!110775 (= lt!57168 lt!57164)))

(declare-fun lt!57166 () ListLongMap!1591)

(declare-fun lt!57163 () (_ BitVec 64))

(declare-fun lt!57167 () (_ BitVec 64))

(declare-fun lt!57169 () V!3243)

(assert (=> b!110775 (not (contains!838 (+!150 lt!57166 (tuple2!2441 lt!57163 lt!57169)) lt!57167))))

(assert (=> b!110775 (= lt!57164 (addStillNotContains!48 lt!57166 lt!57163 lt!57169 lt!57167))))

(assert (=> b!110775 (= lt!57167 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!110775 (= lt!57169 (get!1347 (select (arr!2082 (ite (or c!19438 c!19445) (_values!2610 newMap!16) (array!4392 (store (arr!2082 (_values!2610 newMap!16)) (index!3195 lt!56591) (ValueCellFull!1005 lt!56458)) (size!2339 (_values!2610 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!390 (defaultEntry!2627 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!110775 (= lt!57163 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!11828 () ListLongMap!1591)

(assert (=> b!110775 (= lt!57166 call!11828)))

(declare-fun e!72029 () ListLongMap!1591)

(assert (=> b!110775 (= e!72029 (+!150 call!11828 (tuple2!2441 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000) (get!1347 (select (arr!2082 (ite (or c!19438 c!19445) (_values!2610 newMap!16) (array!4392 (store (arr!2082 (_values!2610 newMap!16)) (index!3195 lt!56591) (ValueCellFull!1005 lt!56458)) (size!2339 (_values!2610 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!390 (defaultEntry!2627 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!110776 () Bool)

(declare-fun res!54760 () Bool)

(assert (=> b!110776 (=> (not res!54760) (not e!72033))))

(declare-fun lt!57165 () ListLongMap!1591)

(assert (=> b!110776 (= res!54760 (not (contains!838 lt!57165 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!110777 () Bool)

(declare-fun e!72028 () Bool)

(assert (=> b!110777 (= e!72030 e!72028)))

(assert (=> b!110777 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))))))

(declare-fun res!54761 () Bool)

(assert (=> b!110777 (= res!54761 (contains!838 lt!57165 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!110777 (=> (not res!54761) (not e!72028))))

(declare-fun b!110778 () Bool)

(assert (=> b!110778 (= e!72027 (validKeyInArray!0 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!110778 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!110779 () Bool)

(declare-fun e!72032 () ListLongMap!1591)

(assert (=> b!110779 (= e!72032 e!72029)))

(declare-fun c!19678 () Bool)

(assert (=> b!110779 (= c!19678 (validKeyInArray!0 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!31205 () Bool)

(assert (=> d!31205 e!72033))

(declare-fun res!54762 () Bool)

(assert (=> d!31205 (=> (not res!54762) (not e!72033))))

(assert (=> d!31205 (= res!54762 (not (contains!838 lt!57165 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!31205 (= lt!57165 e!72032)))

(declare-fun c!19681 () Bool)

(assert (=> d!31205 (= c!19681 (bvsge #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))))))

(assert (=> d!31205 (validMask!0 (mask!6795 newMap!16))))

(assert (=> d!31205 (= (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (ite (or c!19438 c!19445) (_values!2610 newMap!16) (array!4392 (store (arr!2082 (_values!2610 newMap!16)) (index!3195 lt!56591) (ValueCellFull!1005 lt!56458)) (size!2339 (_values!2610 newMap!16)))) (mask!6795 newMap!16) (ite c!19438 (ite c!19444 (extraKeys!2424 newMap!16) lt!56577) (extraKeys!2424 newMap!16)) (zeroValue!2498 newMap!16) (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) lt!57165)))

(declare-fun b!110780 () Bool)

(assert (=> b!110780 (= e!72031 (= lt!57165 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (ite (or c!19438 c!19445) (_values!2610 newMap!16) (array!4392 (store (arr!2082 (_values!2610 newMap!16)) (index!3195 lt!56591) (ValueCellFull!1005 lt!56458)) (size!2339 (_values!2610 newMap!16)))) (mask!6795 newMap!16) (ite c!19438 (ite c!19444 (extraKeys!2424 newMap!16) lt!56577) (extraKeys!2424 newMap!16)) (zeroValue!2498 newMap!16) (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2627 newMap!16))))))

(declare-fun b!110781 () Bool)

(assert (=> b!110781 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))))))

(assert (=> b!110781 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2339 (ite (or c!19438 c!19445) (_values!2610 newMap!16) (array!4392 (store (arr!2082 (_values!2610 newMap!16)) (index!3195 lt!56591) (ValueCellFull!1005 lt!56458)) (size!2339 (_values!2610 newMap!16)))))))))

(assert (=> b!110781 (= e!72028 (= (apply!100 lt!57165 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)) (get!1347 (select (arr!2082 (ite (or c!19438 c!19445) (_values!2610 newMap!16) (array!4392 (store (arr!2082 (_values!2610 newMap!16)) (index!3195 lt!56591) (ValueCellFull!1005 lt!56458)) (size!2339 (_values!2610 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!390 (defaultEntry!2627 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bm!11825 () Bool)

(assert (=> bm!11825 (= call!11828 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (ite (or c!19438 c!19445) (_values!2610 newMap!16) (array!4392 (store (arr!2082 (_values!2610 newMap!16)) (index!3195 lt!56591) (ValueCellFull!1005 lt!56458)) (size!2339 (_values!2610 newMap!16)))) (mask!6795 newMap!16) (ite c!19438 (ite c!19444 (extraKeys!2424 newMap!16) lt!56577) (extraKeys!2424 newMap!16)) (zeroValue!2498 newMap!16) (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2627 newMap!16)))))

(declare-fun b!110782 () Bool)

(assert (=> b!110782 (= e!72029 call!11828)))

(declare-fun b!110783 () Bool)

(assert (=> b!110783 (= e!72031 (isEmpty!376 lt!57165))))

(declare-fun b!110784 () Bool)

(assert (=> b!110784 (= e!72032 (ListLongMap!1592 Nil!1627))))

(assert (= (and d!31205 c!19681) b!110784))

(assert (= (and d!31205 (not c!19681)) b!110779))

(assert (= (and b!110779 c!19678) b!110775))

(assert (= (and b!110779 (not c!19678)) b!110782))

(assert (= (or b!110775 b!110782) bm!11825))

(assert (= (and d!31205 res!54762) b!110776))

(assert (= (and b!110776 res!54760) b!110774))

(assert (= (and b!110774 res!54763) b!110778))

(assert (= (and b!110774 c!19680) b!110777))

(assert (= (and b!110774 (not c!19680)) b!110773))

(assert (= (and b!110777 res!54761) b!110781))

(assert (= (and b!110773 c!19679) b!110780))

(assert (= (and b!110773 (not c!19679)) b!110783))

(declare-fun b_lambda!4959 () Bool)

(assert (=> (not b_lambda!4959) (not b!110775)))

(assert (=> b!110775 t!5774))

(declare-fun b_and!6815 () Bool)

(assert (= b_and!6811 (and (=> t!5774 result!3537) b_and!6815)))

(assert (=> b!110775 t!5776))

(declare-fun b_and!6817 () Bool)

(assert (= b_and!6813 (and (=> t!5776 result!3539) b_and!6817)))

(declare-fun b_lambda!4961 () Bool)

(assert (=> (not b_lambda!4961) (not b!110781)))

(assert (=> b!110781 t!5774))

(declare-fun b_and!6819 () Bool)

(assert (= b_and!6815 (and (=> t!5774 result!3537) b_and!6819)))

(assert (=> b!110781 t!5776))

(declare-fun b_and!6821 () Bool)

(assert (= b_and!6817 (and (=> t!5776 result!3539) b_and!6821)))

(declare-fun m!125809 () Bool)

(assert (=> b!110780 m!125809))

(declare-fun m!125811 () Bool)

(assert (=> b!110776 m!125811))

(declare-fun m!125813 () Bool)

(assert (=> d!31205 m!125813))

(assert (=> d!31205 m!124669))

(assert (=> b!110781 m!124693))

(assert (=> b!110781 m!124731))

(assert (=> b!110781 m!124733))

(assert (=> b!110781 m!124735))

(assert (=> b!110781 m!124733))

(assert (=> b!110781 m!124731))

(assert (=> b!110781 m!124693))

(declare-fun m!125815 () Bool)

(assert (=> b!110781 m!125815))

(assert (=> b!110778 m!124693))

(assert (=> b!110778 m!124693))

(assert (=> b!110778 m!124695))

(assert (=> b!110779 m!124693))

(assert (=> b!110779 m!124693))

(assert (=> b!110779 m!124695))

(declare-fun m!125817 () Bool)

(assert (=> b!110783 m!125817))

(assert (=> b!110775 m!124693))

(declare-fun m!125819 () Bool)

(assert (=> b!110775 m!125819))

(declare-fun m!125821 () Bool)

(assert (=> b!110775 m!125821))

(declare-fun m!125823 () Bool)

(assert (=> b!110775 m!125823))

(assert (=> b!110775 m!124733))

(assert (=> b!110775 m!124731))

(assert (=> b!110775 m!125819))

(declare-fun m!125825 () Bool)

(assert (=> b!110775 m!125825))

(assert (=> b!110775 m!124731))

(assert (=> b!110775 m!124733))

(assert (=> b!110775 m!124735))

(assert (=> b!110777 m!124693))

(assert (=> b!110777 m!124693))

(declare-fun m!125827 () Bool)

(assert (=> b!110777 m!125827))

(assert (=> bm!11825 m!125809))

(assert (=> b!110110 d!31205))

(declare-fun d!31207 () Bool)

(assert (=> d!31207 (= (apply!100 lt!56740 lt!56751) (get!1350 (getValueByKey!158 (toList!811 lt!56740) lt!56751)))))

(declare-fun bs!4553 () Bool)

(assert (= bs!4553 d!31207))

(declare-fun m!125829 () Bool)

(assert (=> bs!4553 m!125829))

(assert (=> bs!4553 m!125829))

(declare-fun m!125831 () Bool)

(assert (=> bs!4553 m!125831))

(assert (=> b!110110 d!31207))

(declare-fun d!31209 () Bool)

(assert (=> d!31209 (= (apply!100 (+!150 lt!56740 (tuple2!2441 lt!56733 (zeroValue!2498 newMap!16))) lt!56751) (apply!100 lt!56740 lt!56751))))

(declare-fun lt!57170 () Unit!3403)

(assert (=> d!31209 (= lt!57170 (choose!691 lt!56740 lt!56733 (zeroValue!2498 newMap!16) lt!56751))))

(declare-fun e!72034 () Bool)

(assert (=> d!31209 e!72034))

(declare-fun res!54764 () Bool)

(assert (=> d!31209 (=> (not res!54764) (not e!72034))))

(assert (=> d!31209 (= res!54764 (contains!838 lt!56740 lt!56751))))

(assert (=> d!31209 (= (addApplyDifferent!76 lt!56740 lt!56733 (zeroValue!2498 newMap!16) lt!56751) lt!57170)))

(declare-fun b!110785 () Bool)

(assert (=> b!110785 (= e!72034 (not (= lt!56751 lt!56733)))))

(assert (= (and d!31209 res!54764) b!110785))

(declare-fun m!125833 () Bool)

(assert (=> d!31209 m!125833))

(declare-fun m!125835 () Bool)

(assert (=> d!31209 m!125835))

(assert (=> d!31209 m!124699))

(assert (=> d!31209 m!124699))

(assert (=> d!31209 m!124701))

(assert (=> d!31209 m!124717))

(assert (=> b!110110 d!31209))

(declare-fun d!31211 () Bool)

(declare-fun e!72035 () Bool)

(assert (=> d!31211 e!72035))

(declare-fun res!54765 () Bool)

(assert (=> d!31211 (=> (not res!54765) (not e!72035))))

(declare-fun lt!57173 () ListLongMap!1591)

(assert (=> d!31211 (= res!54765 (contains!838 lt!57173 (_1!1231 (tuple2!2441 lt!56742 (zeroValue!2498 newMap!16)))))))

(declare-fun lt!57172 () List!1630)

(assert (=> d!31211 (= lt!57173 (ListLongMap!1592 lt!57172))))

(declare-fun lt!57174 () Unit!3403)

(declare-fun lt!57171 () Unit!3403)

(assert (=> d!31211 (= lt!57174 lt!57171)))

(assert (=> d!31211 (= (getValueByKey!158 lt!57172 (_1!1231 (tuple2!2441 lt!56742 (zeroValue!2498 newMap!16)))) (Some!163 (_2!1231 (tuple2!2441 lt!56742 (zeroValue!2498 newMap!16)))))))

(assert (=> d!31211 (= lt!57171 (lemmaContainsTupThenGetReturnValue!74 lt!57172 (_1!1231 (tuple2!2441 lt!56742 (zeroValue!2498 newMap!16))) (_2!1231 (tuple2!2441 lt!56742 (zeroValue!2498 newMap!16)))))))

(assert (=> d!31211 (= lt!57172 (insertStrictlySorted!77 (toList!811 lt!56743) (_1!1231 (tuple2!2441 lt!56742 (zeroValue!2498 newMap!16))) (_2!1231 (tuple2!2441 lt!56742 (zeroValue!2498 newMap!16)))))))

(assert (=> d!31211 (= (+!150 lt!56743 (tuple2!2441 lt!56742 (zeroValue!2498 newMap!16))) lt!57173)))

(declare-fun b!110786 () Bool)

(declare-fun res!54766 () Bool)

(assert (=> b!110786 (=> (not res!54766) (not e!72035))))

(assert (=> b!110786 (= res!54766 (= (getValueByKey!158 (toList!811 lt!57173) (_1!1231 (tuple2!2441 lt!56742 (zeroValue!2498 newMap!16)))) (Some!163 (_2!1231 (tuple2!2441 lt!56742 (zeroValue!2498 newMap!16))))))))

(declare-fun b!110787 () Bool)

(assert (=> b!110787 (= e!72035 (contains!839 (toList!811 lt!57173) (tuple2!2441 lt!56742 (zeroValue!2498 newMap!16))))))

(assert (= (and d!31211 res!54765) b!110786))

(assert (= (and b!110786 res!54766) b!110787))

(declare-fun m!125837 () Bool)

(assert (=> d!31211 m!125837))

(declare-fun m!125839 () Bool)

(assert (=> d!31211 m!125839))

(declare-fun m!125841 () Bool)

(assert (=> d!31211 m!125841))

(declare-fun m!125843 () Bool)

(assert (=> d!31211 m!125843))

(declare-fun m!125845 () Bool)

(assert (=> b!110786 m!125845))

(declare-fun m!125847 () Bool)

(assert (=> b!110787 m!125847))

(assert (=> b!110110 d!31211))

(declare-fun d!31213 () Bool)

(assert (=> d!31213 (= (apply!100 (+!150 lt!56740 (tuple2!2441 lt!56733 (zeroValue!2498 newMap!16))) lt!56751) (get!1350 (getValueByKey!158 (toList!811 (+!150 lt!56740 (tuple2!2441 lt!56733 (zeroValue!2498 newMap!16)))) lt!56751)))))

(declare-fun bs!4554 () Bool)

(assert (= bs!4554 d!31213))

(declare-fun m!125849 () Bool)

(assert (=> bs!4554 m!125849))

(assert (=> bs!4554 m!125849))

(declare-fun m!125851 () Bool)

(assert (=> bs!4554 m!125851))

(assert (=> b!110110 d!31213))

(declare-fun d!31215 () Bool)

(assert (=> d!31215 (= (apply!100 (+!150 lt!56753 (tuple2!2441 lt!56738 (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16)))) lt!56741) (get!1350 (getValueByKey!158 (toList!811 (+!150 lt!56753 (tuple2!2441 lt!56738 (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16))))) lt!56741)))))

(declare-fun bs!4555 () Bool)

(assert (= bs!4555 d!31215))

(declare-fun m!125853 () Bool)

(assert (=> bs!4555 m!125853))

(assert (=> bs!4555 m!125853))

(declare-fun m!125855 () Bool)

(assert (=> bs!4555 m!125855))

(assert (=> b!110110 d!31215))

(declare-fun d!31217 () Bool)

(assert (=> d!31217 (= (apply!100 (+!150 lt!56753 (tuple2!2441 lt!56738 (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16)))) lt!56741) (apply!100 lt!56753 lt!56741))))

(declare-fun lt!57175 () Unit!3403)

(assert (=> d!31217 (= lt!57175 (choose!691 lt!56753 lt!56738 (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16)) lt!56741))))

(declare-fun e!72036 () Bool)

(assert (=> d!31217 e!72036))

(declare-fun res!54767 () Bool)

(assert (=> d!31217 (=> (not res!54767) (not e!72036))))

(assert (=> d!31217 (= res!54767 (contains!838 lt!56753 lt!56741))))

(assert (=> d!31217 (= (addApplyDifferent!76 lt!56753 lt!56738 (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16)) lt!56741) lt!57175)))

(declare-fun b!110788 () Bool)

(assert (=> b!110788 (= e!72036 (not (= lt!56741 lt!56738)))))

(assert (= (and d!31217 res!54767) b!110788))

(declare-fun m!125857 () Bool)

(assert (=> d!31217 m!125857))

(declare-fun m!125859 () Bool)

(assert (=> d!31217 m!125859))

(assert (=> d!31217 m!124707))

(assert (=> d!31217 m!124707))

(assert (=> d!31217 m!124709))

(assert (=> d!31217 m!124713))

(assert (=> b!110110 d!31217))

(declare-fun d!31219 () Bool)

(declare-fun e!72037 () Bool)

(assert (=> d!31219 e!72037))

(declare-fun res!54768 () Bool)

(assert (=> d!31219 (=> (not res!54768) (not e!72037))))

(declare-fun lt!57178 () ListLongMap!1591)

(assert (=> d!31219 (= res!54768 (contains!838 lt!57178 (_1!1231 (tuple2!2441 lt!56733 (zeroValue!2498 newMap!16)))))))

(declare-fun lt!57177 () List!1630)

(assert (=> d!31219 (= lt!57178 (ListLongMap!1592 lt!57177))))

(declare-fun lt!57179 () Unit!3403)

(declare-fun lt!57176 () Unit!3403)

(assert (=> d!31219 (= lt!57179 lt!57176)))

(assert (=> d!31219 (= (getValueByKey!158 lt!57177 (_1!1231 (tuple2!2441 lt!56733 (zeroValue!2498 newMap!16)))) (Some!163 (_2!1231 (tuple2!2441 lt!56733 (zeroValue!2498 newMap!16)))))))

(assert (=> d!31219 (= lt!57176 (lemmaContainsTupThenGetReturnValue!74 lt!57177 (_1!1231 (tuple2!2441 lt!56733 (zeroValue!2498 newMap!16))) (_2!1231 (tuple2!2441 lt!56733 (zeroValue!2498 newMap!16)))))))

(assert (=> d!31219 (= lt!57177 (insertStrictlySorted!77 (toList!811 lt!56740) (_1!1231 (tuple2!2441 lt!56733 (zeroValue!2498 newMap!16))) (_2!1231 (tuple2!2441 lt!56733 (zeroValue!2498 newMap!16)))))))

(assert (=> d!31219 (= (+!150 lt!56740 (tuple2!2441 lt!56733 (zeroValue!2498 newMap!16))) lt!57178)))

(declare-fun b!110789 () Bool)

(declare-fun res!54769 () Bool)

(assert (=> b!110789 (=> (not res!54769) (not e!72037))))

(assert (=> b!110789 (= res!54769 (= (getValueByKey!158 (toList!811 lt!57178) (_1!1231 (tuple2!2441 lt!56733 (zeroValue!2498 newMap!16)))) (Some!163 (_2!1231 (tuple2!2441 lt!56733 (zeroValue!2498 newMap!16))))))))

(declare-fun b!110790 () Bool)

(assert (=> b!110790 (= e!72037 (contains!839 (toList!811 lt!57178) (tuple2!2441 lt!56733 (zeroValue!2498 newMap!16))))))

(assert (= (and d!31219 res!54768) b!110789))

(assert (= (and b!110789 res!54769) b!110790))

(declare-fun m!125861 () Bool)

(assert (=> d!31219 m!125861))

(declare-fun m!125863 () Bool)

(assert (=> d!31219 m!125863))

(declare-fun m!125865 () Bool)

(assert (=> d!31219 m!125865))

(declare-fun m!125867 () Bool)

(assert (=> d!31219 m!125867))

(declare-fun m!125869 () Bool)

(assert (=> b!110789 m!125869))

(declare-fun m!125871 () Bool)

(assert (=> b!110790 m!125871))

(assert (=> b!110110 d!31219))

(declare-fun d!31221 () Bool)

(assert (=> d!31221 (= (apply!100 lt!56746 lt!56744) (get!1350 (getValueByKey!158 (toList!811 lt!56746) lt!56744)))))

(declare-fun bs!4556 () Bool)

(assert (= bs!4556 d!31221))

(declare-fun m!125873 () Bool)

(assert (=> bs!4556 m!125873))

(assert (=> bs!4556 m!125873))

(declare-fun m!125875 () Bool)

(assert (=> bs!4556 m!125875))

(assert (=> b!110110 d!31221))

(declare-fun d!31223 () Bool)

(assert (=> d!31223 (= (apply!100 (+!150 lt!56746 (tuple2!2441 lt!56737 (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16)))) lt!56744) (get!1350 (getValueByKey!158 (toList!811 (+!150 lt!56746 (tuple2!2441 lt!56737 (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16))))) lt!56744)))))

(declare-fun bs!4557 () Bool)

(assert (= bs!4557 d!31223))

(declare-fun m!125877 () Bool)

(assert (=> bs!4557 m!125877))

(assert (=> bs!4557 m!125877))

(declare-fun m!125879 () Bool)

(assert (=> bs!4557 m!125879))

(assert (=> b!110110 d!31223))

(declare-fun d!31225 () Bool)

(declare-fun e!72038 () Bool)

(assert (=> d!31225 e!72038))

(declare-fun res!54770 () Bool)

(assert (=> d!31225 (=> res!54770 e!72038)))

(declare-fun lt!57180 () Bool)

(assert (=> d!31225 (= res!54770 (not lt!57180))))

(declare-fun lt!57181 () Bool)

(assert (=> d!31225 (= lt!57180 lt!57181)))

(declare-fun lt!57183 () Unit!3403)

(declare-fun e!72039 () Unit!3403)

(assert (=> d!31225 (= lt!57183 e!72039)))

(declare-fun c!19682 () Bool)

(assert (=> d!31225 (= c!19682 lt!57181)))

(assert (=> d!31225 (= lt!57181 (containsKey!162 (toList!811 (+!150 lt!56743 (tuple2!2441 lt!56742 (zeroValue!2498 newMap!16)))) lt!56745))))

(assert (=> d!31225 (= (contains!838 (+!150 lt!56743 (tuple2!2441 lt!56742 (zeroValue!2498 newMap!16))) lt!56745) lt!57180)))

(declare-fun b!110791 () Bool)

(declare-fun lt!57182 () Unit!3403)

(assert (=> b!110791 (= e!72039 lt!57182)))

(assert (=> b!110791 (= lt!57182 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 (+!150 lt!56743 (tuple2!2441 lt!56742 (zeroValue!2498 newMap!16)))) lt!56745))))

(assert (=> b!110791 (isDefined!111 (getValueByKey!158 (toList!811 (+!150 lt!56743 (tuple2!2441 lt!56742 (zeroValue!2498 newMap!16)))) lt!56745))))

(declare-fun b!110792 () Bool)

(declare-fun Unit!3442 () Unit!3403)

(assert (=> b!110792 (= e!72039 Unit!3442)))

(declare-fun b!110793 () Bool)

(assert (=> b!110793 (= e!72038 (isDefined!111 (getValueByKey!158 (toList!811 (+!150 lt!56743 (tuple2!2441 lt!56742 (zeroValue!2498 newMap!16)))) lt!56745)))))

(assert (= (and d!31225 c!19682) b!110791))

(assert (= (and d!31225 (not c!19682)) b!110792))

(assert (= (and d!31225 (not res!54770)) b!110793))

(declare-fun m!125881 () Bool)

(assert (=> d!31225 m!125881))

(declare-fun m!125883 () Bool)

(assert (=> b!110791 m!125883))

(declare-fun m!125885 () Bool)

(assert (=> b!110791 m!125885))

(assert (=> b!110791 m!125885))

(declare-fun m!125887 () Bool)

(assert (=> b!110791 m!125887))

(assert (=> b!110793 m!125885))

(assert (=> b!110793 m!125885))

(assert (=> b!110793 m!125887))

(assert (=> b!110110 d!31225))

(declare-fun d!31227 () Bool)

(assert (=> d!31227 (= (apply!100 lt!56753 lt!56741) (get!1350 (getValueByKey!158 (toList!811 lt!56753) lt!56741)))))

(declare-fun bs!4558 () Bool)

(assert (= bs!4558 d!31227))

(declare-fun m!125889 () Bool)

(assert (=> bs!4558 m!125889))

(assert (=> bs!4558 m!125889))

(declare-fun m!125891 () Bool)

(assert (=> bs!4558 m!125891))

(assert (=> b!110110 d!31227))

(declare-fun d!31229 () Bool)

(declare-fun e!72040 () Bool)

(assert (=> d!31229 e!72040))

(declare-fun res!54771 () Bool)

(assert (=> d!31229 (=> (not res!54771) (not e!72040))))

(declare-fun lt!57186 () ListLongMap!1591)

(assert (=> d!31229 (= res!54771 (contains!838 lt!57186 (_1!1231 (tuple2!2441 lt!56738 (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16))))))))

(declare-fun lt!57185 () List!1630)

(assert (=> d!31229 (= lt!57186 (ListLongMap!1592 lt!57185))))

(declare-fun lt!57187 () Unit!3403)

(declare-fun lt!57184 () Unit!3403)

(assert (=> d!31229 (= lt!57187 lt!57184)))

(assert (=> d!31229 (= (getValueByKey!158 lt!57185 (_1!1231 (tuple2!2441 lt!56738 (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16))))) (Some!163 (_2!1231 (tuple2!2441 lt!56738 (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16))))))))

(assert (=> d!31229 (= lt!57184 (lemmaContainsTupThenGetReturnValue!74 lt!57185 (_1!1231 (tuple2!2441 lt!56738 (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16)))) (_2!1231 (tuple2!2441 lt!56738 (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16))))))))

(assert (=> d!31229 (= lt!57185 (insertStrictlySorted!77 (toList!811 lt!56753) (_1!1231 (tuple2!2441 lt!56738 (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16)))) (_2!1231 (tuple2!2441 lt!56738 (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16))))))))

(assert (=> d!31229 (= (+!150 lt!56753 (tuple2!2441 lt!56738 (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16)))) lt!57186)))

(declare-fun b!110794 () Bool)

(declare-fun res!54772 () Bool)

(assert (=> b!110794 (=> (not res!54772) (not e!72040))))

(assert (=> b!110794 (= res!54772 (= (getValueByKey!158 (toList!811 lt!57186) (_1!1231 (tuple2!2441 lt!56738 (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16))))) (Some!163 (_2!1231 (tuple2!2441 lt!56738 (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16)))))))))

(declare-fun b!110795 () Bool)

(assert (=> b!110795 (= e!72040 (contains!839 (toList!811 lt!57186) (tuple2!2441 lt!56738 (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16)))))))

(assert (= (and d!31229 res!54771) b!110794))

(assert (= (and b!110794 res!54772) b!110795))

(declare-fun m!125893 () Bool)

(assert (=> d!31229 m!125893))

(declare-fun m!125895 () Bool)

(assert (=> d!31229 m!125895))

(declare-fun m!125897 () Bool)

(assert (=> d!31229 m!125897))

(declare-fun m!125899 () Bool)

(assert (=> d!31229 m!125899))

(declare-fun m!125901 () Bool)

(assert (=> b!110794 m!125901))

(declare-fun m!125903 () Bool)

(assert (=> b!110795 m!125903))

(assert (=> b!110110 d!31229))

(assert (=> d!31023 d!31021))

(declare-fun d!31231 () Bool)

(assert (=> d!31231 (= (getValueByKey!158 lt!56630 (_1!1231 lt!56454)) (Some!163 (_2!1231 lt!56454)))))

(assert (=> d!31231 true))

(declare-fun _$22!446 () Unit!3403)

(assert (=> d!31231 (= (choose!687 lt!56630 (_1!1231 lt!56454) (_2!1231 lt!56454)) _$22!446)))

(declare-fun bs!4559 () Bool)

(assert (= bs!4559 d!31231))

(assert (=> bs!4559 m!124539))

(assert (=> d!31023 d!31231))

(declare-fun d!31233 () Bool)

(declare-fun res!54773 () Bool)

(declare-fun e!72041 () Bool)

(assert (=> d!31233 (=> res!54773 e!72041)))

(assert (=> d!31233 (= res!54773 (or ((_ is Nil!1627) lt!56630) ((_ is Nil!1627) (t!5767 lt!56630))))))

(assert (=> d!31233 (= (isStrictlySorted!311 lt!56630) e!72041)))

(declare-fun b!110796 () Bool)

(declare-fun e!72042 () Bool)

(assert (=> b!110796 (= e!72041 e!72042)))

(declare-fun res!54774 () Bool)

(assert (=> b!110796 (=> (not res!54774) (not e!72042))))

(assert (=> b!110796 (= res!54774 (bvslt (_1!1231 (h!2225 lt!56630)) (_1!1231 (h!2225 (t!5767 lt!56630)))))))

(declare-fun b!110797 () Bool)

(assert (=> b!110797 (= e!72042 (isStrictlySorted!311 (t!5767 lt!56630)))))

(assert (= (and d!31233 (not res!54773)) b!110796))

(assert (= (and b!110796 res!54774) b!110797))

(declare-fun m!125905 () Bool)

(assert (=> b!110797 m!125905))

(assert (=> d!31023 d!31233))

(declare-fun d!31235 () Bool)

(assert (=> d!31235 (isDefined!111 (getValueByKey!158 (toList!811 lt!56699) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!57188 () Unit!3403)

(assert (=> d!31235 (= lt!57188 (choose!684 (toList!811 lt!56699) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!72043 () Bool)

(assert (=> d!31235 e!72043))

(declare-fun res!54775 () Bool)

(assert (=> d!31235 (=> (not res!54775) (not e!72043))))

(assert (=> d!31235 (= res!54775 (isStrictlySorted!311 (toList!811 lt!56699)))))

(assert (=> d!31235 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 lt!56699) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!57188)))

(declare-fun b!110798 () Bool)

(assert (=> b!110798 (= e!72043 (containsKey!162 (toList!811 lt!56699) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!31235 res!54775) b!110798))

(assert (=> d!31235 m!124503))

(assert (=> d!31235 m!124845))

(assert (=> d!31235 m!124845))

(assert (=> d!31235 m!124847))

(assert (=> d!31235 m!124503))

(declare-fun m!125907 () Bool)

(assert (=> d!31235 m!125907))

(declare-fun m!125909 () Bool)

(assert (=> d!31235 m!125909))

(assert (=> b!110798 m!124503))

(assert (=> b!110798 m!124841))

(assert (=> b!110235 d!31235))

(declare-fun d!31237 () Bool)

(assert (=> d!31237 (= (isDefined!111 (getValueByKey!158 (toList!811 lt!56699) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!377 (getValueByKey!158 (toList!811 lt!56699) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!4560 () Bool)

(assert (= bs!4560 d!31237))

(assert (=> bs!4560 m!124845))

(declare-fun m!125911 () Bool)

(assert (=> bs!4560 m!125911))

(assert (=> b!110235 d!31237))

(declare-fun b!110799 () Bool)

(declare-fun e!72044 () Option!164)

(assert (=> b!110799 (= e!72044 (Some!163 (_2!1231 (h!2225 (toList!811 lt!56699)))))))

(declare-fun e!72045 () Option!164)

(declare-fun b!110801 () Bool)

(assert (=> b!110801 (= e!72045 (getValueByKey!158 (t!5767 (toList!811 lt!56699)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun c!19683 () Bool)

(declare-fun d!31239 () Bool)

(assert (=> d!31239 (= c!19683 (and ((_ is Cons!1626) (toList!811 lt!56699)) (= (_1!1231 (h!2225 (toList!811 lt!56699))) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!31239 (= (getValueByKey!158 (toList!811 lt!56699) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!72044)))

(declare-fun b!110800 () Bool)

(assert (=> b!110800 (= e!72044 e!72045)))

(declare-fun c!19684 () Bool)

(assert (=> b!110800 (= c!19684 (and ((_ is Cons!1626) (toList!811 lt!56699)) (not (= (_1!1231 (h!2225 (toList!811 lt!56699))) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!110802 () Bool)

(assert (=> b!110802 (= e!72045 None!162)))

(assert (= (and d!31239 c!19683) b!110799))

(assert (= (and d!31239 (not c!19683)) b!110800))

(assert (= (and b!110800 c!19684) b!110801))

(assert (= (and b!110800 (not c!19684)) b!110802))

(assert (=> b!110801 m!124503))

(declare-fun m!125913 () Bool)

(assert (=> b!110801 m!125913))

(assert (=> b!110235 d!31239))

(declare-fun d!31241 () Bool)

(declare-fun e!72046 () Bool)

(assert (=> d!31241 e!72046))

(declare-fun res!54776 () Bool)

(assert (=> d!31241 (=> res!54776 e!72046)))

(declare-fun lt!57189 () Bool)

(assert (=> d!31241 (= res!54776 (not lt!57189))))

(declare-fun lt!57190 () Bool)

(assert (=> d!31241 (= lt!57189 lt!57190)))

(declare-fun lt!57192 () Unit!3403)

(declare-fun e!72047 () Unit!3403)

(assert (=> d!31241 (= lt!57192 e!72047)))

(declare-fun c!19685 () Bool)

(assert (=> d!31241 (= c!19685 lt!57190)))

(assert (=> d!31241 (= lt!57190 (containsKey!162 (toList!811 lt!56927) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))

(assert (=> d!31241 (= (contains!838 lt!56927 (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))) lt!57189)))

(declare-fun b!110803 () Bool)

(declare-fun lt!57191 () Unit!3403)

(assert (=> b!110803 (= e!72047 lt!57191)))

(assert (=> b!110803 (= lt!57191 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 lt!56927) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))

(assert (=> b!110803 (isDefined!111 (getValueByKey!158 (toList!811 lt!56927) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))

(declare-fun b!110804 () Bool)

(declare-fun Unit!3443 () Unit!3403)

(assert (=> b!110804 (= e!72047 Unit!3443)))

(declare-fun b!110805 () Bool)

(assert (=> b!110805 (= e!72046 (isDefined!111 (getValueByKey!158 (toList!811 lt!56927) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))))))

(assert (= (and d!31241 c!19685) b!110803))

(assert (= (and d!31241 (not c!19685)) b!110804))

(assert (= (and d!31241 (not res!54776)) b!110805))

(declare-fun m!125915 () Bool)

(assert (=> d!31241 m!125915))

(declare-fun m!125917 () Bool)

(assert (=> b!110803 m!125917))

(assert (=> b!110803 m!125243))

(assert (=> b!110803 m!125243))

(declare-fun m!125919 () Bool)

(assert (=> b!110803 m!125919))

(assert (=> b!110805 m!125243))

(assert (=> b!110805 m!125243))

(assert (=> b!110805 m!125919))

(assert (=> d!31003 d!31241))

(declare-fun b!110806 () Bool)

(declare-fun e!72048 () Option!164)

(assert (=> b!110806 (= e!72048 (Some!163 (_2!1231 (h!2225 lt!56926))))))

(declare-fun e!72049 () Option!164)

(declare-fun b!110808 () Bool)

(assert (=> b!110808 (= e!72049 (getValueByKey!158 (t!5767 lt!56926) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))

(declare-fun c!19686 () Bool)

(declare-fun d!31243 () Bool)

(assert (=> d!31243 (= c!19686 (and ((_ is Cons!1626) lt!56926) (= (_1!1231 (h!2225 lt!56926)) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))))))

(assert (=> d!31243 (= (getValueByKey!158 lt!56926 (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))) e!72048)))

(declare-fun b!110807 () Bool)

(assert (=> b!110807 (= e!72048 e!72049)))

(declare-fun c!19687 () Bool)

(assert (=> b!110807 (= c!19687 (and ((_ is Cons!1626) lt!56926) (not (= (_1!1231 (h!2225 lt!56926)) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))))

(declare-fun b!110809 () Bool)

(assert (=> b!110809 (= e!72049 None!162)))

(assert (= (and d!31243 c!19686) b!110806))

(assert (= (and d!31243 (not c!19686)) b!110807))

(assert (= (and b!110807 c!19687) b!110808))

(assert (= (and b!110807 (not c!19687)) b!110809))

(declare-fun m!125921 () Bool)

(assert (=> b!110808 m!125921))

(assert (=> d!31003 d!31243))

(declare-fun d!31245 () Bool)

(assert (=> d!31245 (= (getValueByKey!158 lt!56926 (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))) (Some!163 (_2!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))

(declare-fun lt!57193 () Unit!3403)

(assert (=> d!31245 (= lt!57193 (choose!687 lt!56926 (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)) (_2!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))

(declare-fun e!72050 () Bool)

(assert (=> d!31245 e!72050))

(declare-fun res!54777 () Bool)

(assert (=> d!31245 (=> (not res!54777) (not e!72050))))

(assert (=> d!31245 (= res!54777 (isStrictlySorted!311 lt!56926))))

(assert (=> d!31245 (= (lemmaContainsTupThenGetReturnValue!74 lt!56926 (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)) (_2!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))) lt!57193)))

(declare-fun b!110810 () Bool)

(declare-fun res!54778 () Bool)

(assert (=> b!110810 (=> (not res!54778) (not e!72050))))

(assert (=> b!110810 (= res!54778 (containsKey!162 lt!56926 (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))

(declare-fun b!110811 () Bool)

(assert (=> b!110811 (= e!72050 (contains!839 lt!56926 (tuple2!2441 (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)) (_2!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))))))

(assert (= (and d!31245 res!54777) b!110810))

(assert (= (and b!110810 res!54778) b!110811))

(assert (=> d!31245 m!125237))

(declare-fun m!125923 () Bool)

(assert (=> d!31245 m!125923))

(declare-fun m!125925 () Bool)

(assert (=> d!31245 m!125925))

(declare-fun m!125927 () Bool)

(assert (=> b!110810 m!125927))

(declare-fun m!125929 () Bool)

(assert (=> b!110811 m!125929))

(assert (=> d!31003 d!31245))

(declare-fun b!110812 () Bool)

(declare-fun e!72055 () List!1630)

(declare-fun e!72054 () List!1630)

(assert (=> b!110812 (= e!72055 e!72054)))

(declare-fun c!19690 () Bool)

(assert (=> b!110812 (= c!19690 (and ((_ is Cons!1626) (toList!811 (+!150 lt!56462 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))) (= (_1!1231 (h!2225 (toList!811 (+!150 lt!56462 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))))))

(declare-fun bm!11826 () Bool)

(declare-fun call!11829 () List!1630)

(declare-fun call!11830 () List!1630)

(assert (=> bm!11826 (= call!11829 call!11830)))

(declare-fun b!110813 () Bool)

(assert (=> b!110813 (= e!72055 call!11830)))

(declare-fun bm!11827 () Bool)

(declare-fun call!11831 () List!1630)

(assert (=> bm!11827 (= call!11831 call!11829)))

(declare-fun c!19688 () Bool)

(declare-fun bm!11828 () Bool)

(declare-fun e!72053 () List!1630)

(assert (=> bm!11828 (= call!11830 ($colon$colon!83 e!72053 (ite c!19688 (h!2225 (toList!811 (+!150 lt!56462 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))) (tuple2!2441 (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)) (_2!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))))

(declare-fun c!19691 () Bool)

(assert (=> bm!11828 (= c!19691 c!19688)))

(declare-fun b!110814 () Bool)

(assert (=> b!110814 (= e!72054 call!11829)))

(declare-fun b!110816 () Bool)

(declare-fun e!72052 () Bool)

(declare-fun lt!57194 () List!1630)

(assert (=> b!110816 (= e!72052 (contains!839 lt!57194 (tuple2!2441 (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)) (_2!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))))))

(declare-fun b!110817 () Bool)

(declare-fun e!72051 () List!1630)

(assert (=> b!110817 (= e!72051 call!11831)))

(declare-fun b!110818 () Bool)

(declare-fun res!54780 () Bool)

(assert (=> b!110818 (=> (not res!54780) (not e!72052))))

(assert (=> b!110818 (= res!54780 (containsKey!162 lt!57194 (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))

(declare-fun b!110819 () Bool)

(declare-fun c!19689 () Bool)

(assert (=> b!110819 (= c!19689 (and ((_ is Cons!1626) (toList!811 (+!150 lt!56462 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))) (bvsgt (_1!1231 (h!2225 (toList!811 (+!150 lt!56462 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))))))

(assert (=> b!110819 (= e!72054 e!72051)))

(declare-fun b!110820 () Bool)

(assert (=> b!110820 (= e!72051 call!11831)))

(declare-fun b!110821 () Bool)

(assert (=> b!110821 (= e!72053 (ite c!19690 (t!5767 (toList!811 (+!150 lt!56462 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))) (ite c!19689 (Cons!1626 (h!2225 (toList!811 (+!150 lt!56462 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))) (t!5767 (toList!811 (+!150 lt!56462 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))) Nil!1627)))))

(declare-fun b!110815 () Bool)

(assert (=> b!110815 (= e!72053 (insertStrictlySorted!77 (t!5767 (toList!811 (+!150 lt!56462 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)) (_2!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))

(declare-fun d!31247 () Bool)

(assert (=> d!31247 e!72052))

(declare-fun res!54779 () Bool)

(assert (=> d!31247 (=> (not res!54779) (not e!72052))))

(assert (=> d!31247 (= res!54779 (isStrictlySorted!311 lt!57194))))

(assert (=> d!31247 (= lt!57194 e!72055)))

(assert (=> d!31247 (= c!19688 (and ((_ is Cons!1626) (toList!811 (+!150 lt!56462 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))) (bvslt (_1!1231 (h!2225 (toList!811 (+!150 lt!56462 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))))))

(assert (=> d!31247 (isStrictlySorted!311 (toList!811 (+!150 lt!56462 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> d!31247 (= (insertStrictlySorted!77 (toList!811 (+!150 lt!56462 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)) (_2!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))) lt!57194)))

(assert (= (and d!31247 c!19688) b!110813))

(assert (= (and d!31247 (not c!19688)) b!110812))

(assert (= (and b!110812 c!19690) b!110814))

(assert (= (and b!110812 (not c!19690)) b!110819))

(assert (= (and b!110819 c!19689) b!110817))

(assert (= (and b!110819 (not c!19689)) b!110820))

(assert (= (or b!110817 b!110820) bm!11827))

(assert (= (or b!110814 bm!11827) bm!11826))

(assert (= (or b!110813 bm!11826) bm!11828))

(assert (= (and bm!11828 c!19691) b!110815))

(assert (= (and bm!11828 (not c!19691)) b!110821))

(assert (= (and d!31247 res!54779) b!110818))

(assert (= (and b!110818 res!54780) b!110816))

(declare-fun m!125931 () Bool)

(assert (=> b!110818 m!125931))

(declare-fun m!125933 () Bool)

(assert (=> b!110815 m!125933))

(declare-fun m!125935 () Bool)

(assert (=> b!110816 m!125935))

(declare-fun m!125937 () Bool)

(assert (=> d!31247 m!125937))

(declare-fun m!125939 () Bool)

(assert (=> d!31247 m!125939))

(declare-fun m!125941 () Bool)

(assert (=> bm!11828 m!125941))

(assert (=> d!31003 d!31247))

(declare-fun d!31249 () Bool)

(declare-fun e!72056 () Bool)

(assert (=> d!31249 e!72056))

(declare-fun res!54781 () Bool)

(assert (=> d!31249 (=> res!54781 e!72056)))

(declare-fun lt!57195 () Bool)

(assert (=> d!31249 (= res!54781 (not lt!57195))))

(declare-fun lt!57196 () Bool)

(assert (=> d!31249 (= lt!57195 lt!57196)))

(declare-fun lt!57198 () Unit!3403)

(declare-fun e!72057 () Unit!3403)

(assert (=> d!31249 (= lt!57198 e!72057)))

(declare-fun c!19692 () Bool)

(assert (=> d!31249 (= c!19692 lt!57196)))

(assert (=> d!31249 (= lt!57196 (containsKey!162 (toList!811 lt!56849) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!31249 (= (contains!838 lt!56849 #b1000000000000000000000000000000000000000000000000000000000000000) lt!57195)))

(declare-fun b!110822 () Bool)

(declare-fun lt!57197 () Unit!3403)

(assert (=> b!110822 (= e!72057 lt!57197)))

(assert (=> b!110822 (= lt!57197 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 lt!56849) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!110822 (isDefined!111 (getValueByKey!158 (toList!811 lt!56849) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110823 () Bool)

(declare-fun Unit!3444 () Unit!3403)

(assert (=> b!110823 (= e!72057 Unit!3444)))

(declare-fun b!110824 () Bool)

(assert (=> b!110824 (= e!72056 (isDefined!111 (getValueByKey!158 (toList!811 lt!56849) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!31249 c!19692) b!110822))

(assert (= (and d!31249 (not c!19692)) b!110823))

(assert (= (and d!31249 (not res!54781)) b!110824))

(declare-fun m!125943 () Bool)

(assert (=> d!31249 m!125943))

(declare-fun m!125945 () Bool)

(assert (=> b!110822 m!125945))

(declare-fun m!125947 () Bool)

(assert (=> b!110822 m!125947))

(assert (=> b!110822 m!125947))

(declare-fun m!125949 () Bool)

(assert (=> b!110822 m!125949))

(assert (=> b!110824 m!125947))

(assert (=> b!110824 m!125947))

(assert (=> b!110824 m!125949))

(assert (=> bm!11778 d!31249))

(declare-fun b!110825 () Bool)

(declare-fun e!72061 () Bool)

(declare-fun e!72060 () Bool)

(assert (=> b!110825 (= e!72061 e!72060)))

(declare-fun res!54782 () Bool)

(assert (=> b!110825 (=> (not res!54782) (not e!72060))))

(declare-fun e!72059 () Bool)

(assert (=> b!110825 (= res!54782 (not e!72059))))

(declare-fun res!54783 () Bool)

(assert (=> b!110825 (=> (not res!54783) (not e!72059))))

(assert (=> b!110825 (= res!54783 (validKeyInArray!0 (select (arr!2081 (_keys!4341 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!110826 () Bool)

(declare-fun e!72058 () Bool)

(declare-fun call!11832 () Bool)

(assert (=> b!110826 (= e!72058 call!11832)))

(declare-fun b!110827 () Bool)

(assert (=> b!110827 (= e!72060 e!72058)))

(declare-fun c!19693 () Bool)

(assert (=> b!110827 (= c!19693 (validKeyInArray!0 (select (arr!2081 (_keys!4341 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun bm!11829 () Bool)

(assert (=> bm!11829 (= call!11832 (arrayNoDuplicates!0 (_keys!4341 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!19693 (Cons!1627 (select (arr!2081 (_keys!4341 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!19576 (Cons!1627 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000) Nil!1628) Nil!1628)) (ite c!19576 (Cons!1627 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000) Nil!1628) Nil!1628))))))

(declare-fun b!110828 () Bool)

(assert (=> b!110828 (= e!72058 call!11832)))

(declare-fun b!110829 () Bool)

(assert (=> b!110829 (= e!72059 (contains!840 (ite c!19576 (Cons!1627 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000) Nil!1628) Nil!1628) (select (arr!2081 (_keys!4341 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun d!31251 () Bool)

(declare-fun res!54784 () Bool)

(assert (=> d!31251 (=> res!54784 e!72061)))

(assert (=> d!31251 (= res!54784 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2338 (_keys!4341 newMap!16))))))

(assert (=> d!31251 (= (arrayNoDuplicates!0 (_keys!4341 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!19576 (Cons!1627 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000) Nil!1628) Nil!1628)) e!72061)))

(assert (= (and d!31251 (not res!54784)) b!110825))

(assert (= (and b!110825 res!54783) b!110829))

(assert (= (and b!110825 res!54782) b!110827))

(assert (= (and b!110827 c!19693) b!110826))

(assert (= (and b!110827 (not c!19693)) b!110828))

(assert (= (or b!110826 b!110828) bm!11829))

(assert (=> b!110825 m!125617))

(assert (=> b!110825 m!125617))

(assert (=> b!110825 m!125619))

(assert (=> b!110827 m!125617))

(assert (=> b!110827 m!125617))

(assert (=> b!110827 m!125619))

(assert (=> bm!11829 m!125617))

(declare-fun m!125951 () Bool)

(assert (=> bm!11829 m!125951))

(assert (=> b!110829 m!125617))

(assert (=> b!110829 m!125617))

(declare-fun m!125953 () Bool)

(assert (=> b!110829 m!125953))

(assert (=> bm!11786 d!31251))

(declare-fun b!110830 () Bool)

(declare-fun e!72062 () Option!164)

(assert (=> b!110830 (= e!72062 (Some!163 (_2!1231 (h!2225 (toList!811 lt!56935)))))))

(declare-fun b!110832 () Bool)

(declare-fun e!72063 () Option!164)

(assert (=> b!110832 (= e!72063 (getValueByKey!158 (t!5767 (toList!811 lt!56935)) (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun d!31253 () Bool)

(declare-fun c!19694 () Bool)

(assert (=> d!31253 (= c!19694 (and ((_ is Cons!1626) (toList!811 lt!56935)) (= (_1!1231 (h!2225 (toList!811 lt!56935))) (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> d!31253 (= (getValueByKey!158 (toList!811 lt!56935) (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))) e!72062)))

(declare-fun b!110831 () Bool)

(assert (=> b!110831 (= e!72062 e!72063)))

(declare-fun c!19695 () Bool)

(assert (=> b!110831 (= c!19695 (and ((_ is Cons!1626) (toList!811 lt!56935)) (not (= (_1!1231 (h!2225 (toList!811 lt!56935))) (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))))

(declare-fun b!110833 () Bool)

(assert (=> b!110833 (= e!72063 None!162)))

(assert (= (and d!31253 c!19694) b!110830))

(assert (= (and d!31253 (not c!19694)) b!110831))

(assert (= (and b!110831 c!19695) b!110832))

(assert (= (and b!110831 (not c!19695)) b!110833))

(declare-fun m!125955 () Bool)

(assert (=> b!110832 m!125955))

(assert (=> b!110405 d!31253))

(assert (=> d!30899 d!30897))

(declare-fun d!31255 () Bool)

(assert (=> d!31255 (= (getValueByKey!158 lt!56626 (_1!1231 lt!56457)) (Some!163 (_2!1231 lt!56457)))))

(assert (=> d!31255 true))

(declare-fun _$22!447 () Unit!3403)

(assert (=> d!31255 (= (choose!687 lt!56626 (_1!1231 lt!56457) (_2!1231 lt!56457)) _$22!447)))

(declare-fun bs!4561 () Bool)

(assert (= bs!4561 d!31255))

(assert (=> bs!4561 m!124527))

(assert (=> d!30899 d!31255))

(declare-fun d!31257 () Bool)

(declare-fun res!54785 () Bool)

(declare-fun e!72064 () Bool)

(assert (=> d!31257 (=> res!54785 e!72064)))

(assert (=> d!31257 (= res!54785 (or ((_ is Nil!1627) lt!56626) ((_ is Nil!1627) (t!5767 lt!56626))))))

(assert (=> d!31257 (= (isStrictlySorted!311 lt!56626) e!72064)))

(declare-fun b!110834 () Bool)

(declare-fun e!72065 () Bool)

(assert (=> b!110834 (= e!72064 e!72065)))

(declare-fun res!54786 () Bool)

(assert (=> b!110834 (=> (not res!54786) (not e!72065))))

(assert (=> b!110834 (= res!54786 (bvslt (_1!1231 (h!2225 lt!56626)) (_1!1231 (h!2225 (t!5767 lt!56626)))))))

(declare-fun b!110835 () Bool)

(assert (=> b!110835 (= e!72065 (isStrictlySorted!311 (t!5767 lt!56626)))))

(assert (= (and d!31257 (not res!54785)) b!110834))

(assert (= (and b!110834 res!54786) b!110835))

(declare-fun m!125957 () Bool)

(assert (=> b!110835 m!125957))

(assert (=> d!30899 d!31257))

(declare-fun d!31259 () Bool)

(declare-fun res!54787 () Bool)

(declare-fun e!72066 () Bool)

(assert (=> d!31259 (=> res!54787 e!72066)))

(assert (=> d!31259 (= res!54787 (or ((_ is Nil!1627) lt!56950) ((_ is Nil!1627) (t!5767 lt!56950))))))

(assert (=> d!31259 (= (isStrictlySorted!311 lt!56950) e!72066)))

(declare-fun b!110836 () Bool)

(declare-fun e!72067 () Bool)

(assert (=> b!110836 (= e!72066 e!72067)))

(declare-fun res!54788 () Bool)

(assert (=> b!110836 (=> (not res!54788) (not e!72067))))

(assert (=> b!110836 (= res!54788 (bvslt (_1!1231 (h!2225 lt!56950)) (_1!1231 (h!2225 (t!5767 lt!56950)))))))

(declare-fun b!110837 () Bool)

(assert (=> b!110837 (= e!72067 (isStrictlySorted!311 (t!5767 lt!56950)))))

(assert (= (and d!31259 (not res!54787)) b!110836))

(assert (= (and b!110836 res!54788) b!110837))

(declare-fun m!125959 () Bool)

(assert (=> b!110837 m!125959))

(assert (=> d!31025 d!31259))

(assert (=> d!31025 d!31179))

(declare-fun d!31261 () Bool)

(declare-fun res!54789 () Bool)

(declare-fun e!72068 () Bool)

(assert (=> d!31261 (=> res!54789 e!72068)))

(assert (=> d!31261 (= res!54789 (and ((_ is Cons!1626) (toList!811 lt!56612)) (= (_1!1231 (h!2225 (toList!811 lt!56612))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!31261 (= (containsKey!162 (toList!811 lt!56612) #b0000000000000000000000000000000000000000000000000000000000000000) e!72068)))

(declare-fun b!110838 () Bool)

(declare-fun e!72069 () Bool)

(assert (=> b!110838 (= e!72068 e!72069)))

(declare-fun res!54790 () Bool)

(assert (=> b!110838 (=> (not res!54790) (not e!72069))))

(assert (=> b!110838 (= res!54790 (and (or (not ((_ is Cons!1626) (toList!811 lt!56612))) (bvsle (_1!1231 (h!2225 (toList!811 lt!56612))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1626) (toList!811 lt!56612)) (bvslt (_1!1231 (h!2225 (toList!811 lt!56612))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!110839 () Bool)

(assert (=> b!110839 (= e!72069 (containsKey!162 (t!5767 (toList!811 lt!56612)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!31261 (not res!54789)) b!110838))

(assert (= (and b!110838 res!54790) b!110839))

(declare-fun m!125961 () Bool)

(assert (=> b!110839 m!125961))

(assert (=> d!30991 d!31261))

(declare-fun d!31263 () Bool)

(assert (=> d!31263 (isDefined!111 (getValueByKey!158 (toList!811 lt!56612) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!57199 () Unit!3403)

(assert (=> d!31263 (= lt!57199 (choose!684 (toList!811 lt!56612) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!72070 () Bool)

(assert (=> d!31263 e!72070))

(declare-fun res!54791 () Bool)

(assert (=> d!31263 (=> (not res!54791) (not e!72070))))

(assert (=> d!31263 (= res!54791 (isStrictlySorted!311 (toList!811 lt!56612)))))

(assert (=> d!31263 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 lt!56612) #b1000000000000000000000000000000000000000000000000000000000000000) lt!57199)))

(declare-fun b!110840 () Bool)

(assert (=> b!110840 (= e!72070 (containsKey!162 (toList!811 lt!56612) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!31263 res!54791) b!110840))

(assert (=> d!31263 m!125187))

(assert (=> d!31263 m!125187))

(assert (=> d!31263 m!125189))

(declare-fun m!125963 () Bool)

(assert (=> d!31263 m!125963))

(assert (=> d!31263 m!125639))

(assert (=> b!110840 m!125183))

(assert (=> b!110372 d!31263))

(declare-fun d!31265 () Bool)

(assert (=> d!31265 (= (isDefined!111 (getValueByKey!158 (toList!811 lt!56612) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!377 (getValueByKey!158 (toList!811 lt!56612) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4562 () Bool)

(assert (= bs!4562 d!31265))

(assert (=> bs!4562 m!125187))

(declare-fun m!125965 () Bool)

(assert (=> bs!4562 m!125965))

(assert (=> b!110372 d!31265))

(declare-fun b!110841 () Bool)

(declare-fun e!72071 () Option!164)

(assert (=> b!110841 (= e!72071 (Some!163 (_2!1231 (h!2225 (toList!811 lt!56612)))))))

(declare-fun b!110843 () Bool)

(declare-fun e!72072 () Option!164)

(assert (=> b!110843 (= e!72072 (getValueByKey!158 (t!5767 (toList!811 lt!56612)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!31267 () Bool)

(declare-fun c!19696 () Bool)

(assert (=> d!31267 (= c!19696 (and ((_ is Cons!1626) (toList!811 lt!56612)) (= (_1!1231 (h!2225 (toList!811 lt!56612))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!31267 (= (getValueByKey!158 (toList!811 lt!56612) #b1000000000000000000000000000000000000000000000000000000000000000) e!72071)))

(declare-fun b!110842 () Bool)

(assert (=> b!110842 (= e!72071 e!72072)))

(declare-fun c!19697 () Bool)

(assert (=> b!110842 (= c!19697 (and ((_ is Cons!1626) (toList!811 lt!56612)) (not (= (_1!1231 (h!2225 (toList!811 lt!56612))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!110844 () Bool)

(assert (=> b!110844 (= e!72072 None!162)))

(assert (= (and d!31267 c!19696) b!110841))

(assert (= (and d!31267 (not c!19696)) b!110842))

(assert (= (and b!110842 c!19697) b!110843))

(assert (= (and b!110842 (not c!19697)) b!110844))

(declare-fun m!125967 () Bool)

(assert (=> b!110843 m!125967))

(assert (=> b!110372 d!31267))

(declare-fun d!31269 () Bool)

(assert (=> d!31269 (isDefined!111 (getValueByKey!158 (toList!811 call!11706) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(declare-fun lt!57200 () Unit!3403)

(assert (=> d!31269 (= lt!57200 (choose!684 (toList!811 call!11706) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(declare-fun e!72073 () Bool)

(assert (=> d!31269 e!72073))

(declare-fun res!54792 () Bool)

(assert (=> d!31269 (=> (not res!54792) (not e!72073))))

(assert (=> d!31269 (= res!54792 (isStrictlySorted!311 (toList!811 call!11706)))))

(assert (=> d!31269 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 call!11706) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) lt!57200)))

(declare-fun b!110845 () Bool)

(assert (=> b!110845 (= e!72073 (containsKey!162 (toList!811 call!11706) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(assert (= (and d!31269 res!54792) b!110845))

(assert (=> d!31269 m!124315))

(assert (=> d!31269 m!125175))

(assert (=> d!31269 m!125175))

(assert (=> d!31269 m!125177))

(assert (=> d!31269 m!124315))

(declare-fun m!125969 () Bool)

(assert (=> d!31269 m!125969))

(declare-fun m!125971 () Bool)

(assert (=> d!31269 m!125971))

(assert (=> b!110845 m!124315))

(assert (=> b!110845 m!125171))

(assert (=> b!110364 d!31269))

(declare-fun d!31271 () Bool)

(assert (=> d!31271 (= (isDefined!111 (getValueByKey!158 (toList!811 call!11706) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355))) (not (isEmpty!377 (getValueByKey!158 (toList!811 call!11706) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))))

(declare-fun bs!4563 () Bool)

(assert (= bs!4563 d!31271))

(assert (=> bs!4563 m!125175))

(declare-fun m!125973 () Bool)

(assert (=> bs!4563 m!125973))

(assert (=> b!110364 d!31271))

(declare-fun b!110846 () Bool)

(declare-fun e!72074 () Option!164)

(assert (=> b!110846 (= e!72074 (Some!163 (_2!1231 (h!2225 (toList!811 call!11706)))))))

(declare-fun e!72075 () Option!164)

(declare-fun b!110848 () Bool)

(assert (=> b!110848 (= e!72075 (getValueByKey!158 (t!5767 (toList!811 call!11706)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(declare-fun c!19698 () Bool)

(declare-fun d!31273 () Bool)

(assert (=> d!31273 (= c!19698 (and ((_ is Cons!1626) (toList!811 call!11706)) (= (_1!1231 (h!2225 (toList!811 call!11706))) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355))))))

(assert (=> d!31273 (= (getValueByKey!158 (toList!811 call!11706) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) e!72074)))

(declare-fun b!110847 () Bool)

(assert (=> b!110847 (= e!72074 e!72075)))

(declare-fun c!19699 () Bool)

(assert (=> b!110847 (= c!19699 (and ((_ is Cons!1626) (toList!811 call!11706)) (not (= (_1!1231 (h!2225 (toList!811 call!11706))) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))))

(declare-fun b!110849 () Bool)

(assert (=> b!110849 (= e!72075 None!162)))

(assert (= (and d!31273 c!19698) b!110846))

(assert (= (and d!31273 (not c!19698)) b!110847))

(assert (= (and b!110847 c!19699) b!110848))

(assert (= (and b!110847 (not c!19699)) b!110849))

(assert (=> b!110848 m!124315))

(declare-fun m!125975 () Bool)

(assert (=> b!110848 m!125975))

(assert (=> b!110364 d!31273))

(declare-fun d!31275 () Bool)

(declare-fun e!72076 () Bool)

(assert (=> d!31275 e!72076))

(declare-fun res!54793 () Bool)

(assert (=> d!31275 (=> res!54793 e!72076)))

(declare-fun lt!57201 () Bool)

(assert (=> d!31275 (= res!54793 (not lt!57201))))

(declare-fun lt!57202 () Bool)

(assert (=> d!31275 (= lt!57201 lt!57202)))

(declare-fun lt!57204 () Unit!3403)

(declare-fun e!72077 () Unit!3403)

(assert (=> d!31275 (= lt!57204 e!72077)))

(declare-fun c!19700 () Bool)

(assert (=> d!31275 (= c!19700 lt!57202)))

(assert (=> d!31275 (= lt!57202 (containsKey!162 (toList!811 lt!56935) (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> d!31275 (= (contains!838 lt!56935 (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))) lt!57201)))

(declare-fun b!110850 () Bool)

(declare-fun lt!57203 () Unit!3403)

(assert (=> b!110850 (= e!72077 lt!57203)))

(assert (=> b!110850 (= lt!57203 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 lt!56935) (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> b!110850 (isDefined!111 (getValueByKey!158 (toList!811 lt!56935) (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun b!110851 () Bool)

(declare-fun Unit!3445 () Unit!3403)

(assert (=> b!110851 (= e!72077 Unit!3445)))

(declare-fun b!110852 () Bool)

(assert (=> b!110852 (= e!72076 (isDefined!111 (getValueByKey!158 (toList!811 lt!56935) (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(assert (= (and d!31275 c!19700) b!110850))

(assert (= (and d!31275 (not c!19700)) b!110851))

(assert (= (and d!31275 (not res!54793)) b!110852))

(declare-fun m!125977 () Bool)

(assert (=> d!31275 m!125977))

(declare-fun m!125979 () Bool)

(assert (=> b!110850 m!125979))

(assert (=> b!110850 m!125267))

(assert (=> b!110850 m!125267))

(declare-fun m!125981 () Bool)

(assert (=> b!110850 m!125981))

(assert (=> b!110852 m!125267))

(assert (=> b!110852 m!125267))

(assert (=> b!110852 m!125981))

(assert (=> d!31009 d!31275))

(declare-fun b!110853 () Bool)

(declare-fun e!72078 () Option!164)

(assert (=> b!110853 (= e!72078 (Some!163 (_2!1231 (h!2225 lt!56934))))))

(declare-fun b!110855 () Bool)

(declare-fun e!72079 () Option!164)

(assert (=> b!110855 (= e!72079 (getValueByKey!158 (t!5767 lt!56934) (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun d!31277 () Bool)

(declare-fun c!19701 () Bool)

(assert (=> d!31277 (= c!19701 (and ((_ is Cons!1626) lt!56934) (= (_1!1231 (h!2225 lt!56934)) (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> d!31277 (= (getValueByKey!158 lt!56934 (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))) e!72078)))

(declare-fun b!110854 () Bool)

(assert (=> b!110854 (= e!72078 e!72079)))

(declare-fun c!19702 () Bool)

(assert (=> b!110854 (= c!19702 (and ((_ is Cons!1626) lt!56934) (not (= (_1!1231 (h!2225 lt!56934)) (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))))

(declare-fun b!110856 () Bool)

(assert (=> b!110856 (= e!72079 None!162)))

(assert (= (and d!31277 c!19701) b!110853))

(assert (= (and d!31277 (not c!19701)) b!110854))

(assert (= (and b!110854 c!19702) b!110855))

(assert (= (and b!110854 (not c!19702)) b!110856))

(declare-fun m!125983 () Bool)

(assert (=> b!110855 m!125983))

(assert (=> d!31009 d!31277))

(declare-fun d!31279 () Bool)

(assert (=> d!31279 (= (getValueByKey!158 lt!56934 (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))) (Some!163 (_2!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun lt!57205 () Unit!3403)

(assert (=> d!31279 (= lt!57205 (choose!687 lt!56934 (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))) (_2!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun e!72080 () Bool)

(assert (=> d!31279 e!72080))

(declare-fun res!54794 () Bool)

(assert (=> d!31279 (=> (not res!54794) (not e!72080))))

(assert (=> d!31279 (= res!54794 (isStrictlySorted!311 lt!56934))))

(assert (=> d!31279 (= (lemmaContainsTupThenGetReturnValue!74 lt!56934 (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))) (_2!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))) lt!57205)))

(declare-fun b!110857 () Bool)

(declare-fun res!54795 () Bool)

(assert (=> b!110857 (=> (not res!54795) (not e!72080))))

(assert (=> b!110857 (= res!54795 (containsKey!162 lt!56934 (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun b!110858 () Bool)

(assert (=> b!110858 (= e!72080 (contains!839 lt!56934 (tuple2!2441 (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))) (_2!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(assert (= (and d!31279 res!54794) b!110857))

(assert (= (and b!110857 res!54795) b!110858))

(assert (=> d!31279 m!125261))

(declare-fun m!125985 () Bool)

(assert (=> d!31279 m!125985))

(declare-fun m!125987 () Bool)

(assert (=> d!31279 m!125987))

(declare-fun m!125989 () Bool)

(assert (=> b!110857 m!125989))

(declare-fun m!125991 () Bool)

(assert (=> b!110858 m!125991))

(assert (=> d!31009 d!31279))

(declare-fun b!110859 () Bool)

(declare-fun e!72085 () List!1630)

(declare-fun e!72084 () List!1630)

(assert (=> b!110859 (= e!72085 e!72084)))

(declare-fun c!19705 () Bool)

(assert (=> b!110859 (= c!19705 (and ((_ is Cons!1626) (toList!811 (+!150 lt!56462 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))) (= (_1!1231 (h!2225 (toList!811 (+!150 lt!56462 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))) (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(declare-fun bm!11830 () Bool)

(declare-fun call!11833 () List!1630)

(declare-fun call!11834 () List!1630)

(assert (=> bm!11830 (= call!11833 call!11834)))

(declare-fun b!110860 () Bool)

(assert (=> b!110860 (= e!72085 call!11834)))

(declare-fun bm!11831 () Bool)

(declare-fun call!11835 () List!1630)

(assert (=> bm!11831 (= call!11835 call!11833)))

(declare-fun bm!11832 () Bool)

(declare-fun e!72083 () List!1630)

(declare-fun c!19703 () Bool)

(assert (=> bm!11832 (= call!11834 ($colon$colon!83 e!72083 (ite c!19703 (h!2225 (toList!811 (+!150 lt!56462 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))) (tuple2!2441 (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))) (_2!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))))

(declare-fun c!19706 () Bool)

(assert (=> bm!11832 (= c!19706 c!19703)))

(declare-fun b!110861 () Bool)

(assert (=> b!110861 (= e!72084 call!11833)))

(declare-fun b!110863 () Bool)

(declare-fun e!72082 () Bool)

(declare-fun lt!57206 () List!1630)

(assert (=> b!110863 (= e!72082 (contains!839 lt!57206 (tuple2!2441 (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))) (_2!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(declare-fun b!110864 () Bool)

(declare-fun e!72081 () List!1630)

(assert (=> b!110864 (= e!72081 call!11835)))

(declare-fun b!110865 () Bool)

(declare-fun res!54797 () Bool)

(assert (=> b!110865 (=> (not res!54797) (not e!72082))))

(assert (=> b!110865 (= res!54797 (containsKey!162 lt!57206 (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun c!19704 () Bool)

(declare-fun b!110866 () Bool)

(assert (=> b!110866 (= c!19704 (and ((_ is Cons!1626) (toList!811 (+!150 lt!56462 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))) (bvsgt (_1!1231 (h!2225 (toList!811 (+!150 lt!56462 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))) (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> b!110866 (= e!72084 e!72081)))

(declare-fun b!110867 () Bool)

(assert (=> b!110867 (= e!72081 call!11835)))

(declare-fun b!110868 () Bool)

(assert (=> b!110868 (= e!72083 (ite c!19705 (t!5767 (toList!811 (+!150 lt!56462 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))) (ite c!19704 (Cons!1626 (h!2225 (toList!811 (+!150 lt!56462 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))) (t!5767 (toList!811 (+!150 lt!56462 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))) Nil!1627)))))

(declare-fun b!110862 () Bool)

(assert (=> b!110862 (= e!72083 (insertStrictlySorted!77 (t!5767 (toList!811 (+!150 lt!56462 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))) (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))) (_2!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun d!31281 () Bool)

(assert (=> d!31281 e!72082))

(declare-fun res!54796 () Bool)

(assert (=> d!31281 (=> (not res!54796) (not e!72082))))

(assert (=> d!31281 (= res!54796 (isStrictlySorted!311 lt!57206))))

(assert (=> d!31281 (= lt!57206 e!72085)))

(assert (=> d!31281 (= c!19703 (and ((_ is Cons!1626) (toList!811 (+!150 lt!56462 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))) (bvslt (_1!1231 (h!2225 (toList!811 (+!150 lt!56462 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))) (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> d!31281 (isStrictlySorted!311 (toList!811 (+!150 lt!56462 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))

(assert (=> d!31281 (= (insertStrictlySorted!77 (toList!811 (+!150 lt!56462 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))) (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))) (_2!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))) lt!57206)))

(assert (= (and d!31281 c!19703) b!110860))

(assert (= (and d!31281 (not c!19703)) b!110859))

(assert (= (and b!110859 c!19705) b!110861))

(assert (= (and b!110859 (not c!19705)) b!110866))

(assert (= (and b!110866 c!19704) b!110864))

(assert (= (and b!110866 (not c!19704)) b!110867))

(assert (= (or b!110864 b!110867) bm!11831))

(assert (= (or b!110861 bm!11831) bm!11830))

(assert (= (or b!110860 bm!11830) bm!11832))

(assert (= (and bm!11832 c!19706) b!110862))

(assert (= (and bm!11832 (not c!19706)) b!110868))

(assert (= (and d!31281 res!54796) b!110865))

(assert (= (and b!110865 res!54797) b!110863))

(declare-fun m!125993 () Bool)

(assert (=> b!110865 m!125993))

(declare-fun m!125995 () Bool)

(assert (=> b!110862 m!125995))

(declare-fun m!125997 () Bool)

(assert (=> b!110863 m!125997))

(declare-fun m!125999 () Bool)

(assert (=> d!31281 m!125999))

(declare-fun m!126001 () Bool)

(assert (=> d!31281 m!126001))

(declare-fun m!126003 () Bool)

(assert (=> bm!11832 m!126003))

(assert (=> d!31009 d!31281))

(declare-fun d!31283 () Bool)

(declare-fun e!72086 () Bool)

(assert (=> d!31283 e!72086))

(declare-fun res!54798 () Bool)

(assert (=> d!31283 (=> (not res!54798) (not e!72086))))

(declare-fun lt!57209 () ListLongMap!1591)

(assert (=> d!31283 (= res!54798 (contains!838 lt!57209 (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458))))))

(declare-fun lt!57208 () List!1630)

(assert (=> d!31283 (= lt!57209 (ListLongMap!1592 lt!57208))))

(declare-fun lt!57210 () Unit!3403)

(declare-fun lt!57207 () Unit!3403)

(assert (=> d!31283 (= lt!57210 lt!57207)))

(assert (=> d!31283 (= (getValueByKey!158 lt!57208 (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458))) (Some!163 (_2!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458))))))

(assert (=> d!31283 (= lt!57207 (lemmaContainsTupThenGetReturnValue!74 lt!57208 (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458)) (_2!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458))))))

(assert (=> d!31283 (= lt!57208 (insertStrictlySorted!77 (toList!811 (getCurrentListMap!496 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16))) (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458)) (_2!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458))))))

(assert (=> d!31283 (= (+!150 (getCurrentListMap!496 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458)) lt!57209)))

(declare-fun b!110869 () Bool)

(declare-fun res!54799 () Bool)

(assert (=> b!110869 (=> (not res!54799) (not e!72086))))

(assert (=> b!110869 (= res!54799 (= (getValueByKey!158 (toList!811 lt!57209) (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458))) (Some!163 (_2!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458)))))))

(declare-fun b!110870 () Bool)

(assert (=> b!110870 (= e!72086 (contains!839 (toList!811 lt!57209) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458)))))

(assert (= (and d!31283 res!54798) b!110869))

(assert (= (and b!110869 res!54799) b!110870))

(declare-fun m!126005 () Bool)

(assert (=> d!31283 m!126005))

(declare-fun m!126007 () Bool)

(assert (=> d!31283 m!126007))

(declare-fun m!126009 () Bool)

(assert (=> d!31283 m!126009))

(declare-fun m!126011 () Bool)

(assert (=> d!31283 m!126011))

(declare-fun m!126013 () Bool)

(assert (=> b!110869 m!126013))

(declare-fun m!126015 () Bool)

(assert (=> b!110870 m!126015))

(assert (=> d!30923 d!31283))

(assert (=> d!30923 d!30931))

(declare-fun b!110871 () Bool)

(declare-fun c!19708 () Bool)

(assert (=> b!110871 (= c!19708 (and (not (= (bvand lt!56572 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!56572 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!72090 () ListLongMap!1591)

(declare-fun e!72095 () ListLongMap!1591)

(assert (=> b!110871 (= e!72090 e!72095)))

(declare-fun bm!11833 () Bool)

(declare-fun call!11836 () ListLongMap!1591)

(declare-fun call!11839 () ListLongMap!1591)

(assert (=> bm!11833 (= call!11836 call!11839)))

(declare-fun b!110872 () Bool)

(declare-fun e!72093 () Bool)

(declare-fun e!72087 () Bool)

(assert (=> b!110872 (= e!72093 e!72087)))

(declare-fun res!54802 () Bool)

(assert (=> b!110872 (=> (not res!54802) (not e!72087))))

(declare-fun lt!57225 () ListLongMap!1591)

(assert (=> b!110872 (= res!54802 (contains!838 lt!57225 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!110872 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))))))

(declare-fun b!110873 () Bool)

(declare-fun e!72088 () Bool)

(declare-fun e!72099 () Bool)

(assert (=> b!110873 (= e!72088 e!72099)))

(declare-fun res!54800 () Bool)

(declare-fun call!11842 () Bool)

(assert (=> b!110873 (= res!54800 call!11842)))

(assert (=> b!110873 (=> (not res!54800) (not e!72099))))

(declare-fun b!110874 () Bool)

(declare-fun e!72097 () ListLongMap!1591)

(assert (=> b!110874 (= e!72097 e!72090)))

(declare-fun c!19712 () Bool)

(assert (=> b!110874 (= c!19712 (and (not (= (bvand lt!56572 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!56572 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!110875 () Bool)

(declare-fun e!72098 () Unit!3403)

(declare-fun Unit!3446 () Unit!3403)

(assert (=> b!110875 (= e!72098 Unit!3446)))

(declare-fun b!110876 () Bool)

(declare-fun e!72094 () Bool)

(declare-fun call!11837 () Bool)

(assert (=> b!110876 (= e!72094 (not call!11837))))

(declare-fun bm!11834 () Bool)

(assert (=> bm!11834 (= call!11839 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) lt!56572 lt!56458 (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun b!110877 () Bool)

(assert (=> b!110877 (= e!72099 (= (apply!100 lt!57225 #b0000000000000000000000000000000000000000000000000000000000000000) lt!56458))))

(declare-fun b!110878 () Bool)

(declare-fun call!11841 () ListLongMap!1591)

(assert (=> b!110878 (= e!72097 (+!150 call!11841 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16))))))

(declare-fun b!110879 () Bool)

(declare-fun lt!57226 () Unit!3403)

(assert (=> b!110879 (= e!72098 lt!57226)))

(declare-fun lt!57221 () ListLongMap!1591)

(assert (=> b!110879 (= lt!57221 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) lt!56572 lt!56458 (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!57220 () (_ BitVec 64))

(assert (=> b!110879 (= lt!57220 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57223 () (_ BitVec 64))

(assert (=> b!110879 (= lt!57223 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!57228 () Unit!3403)

(assert (=> b!110879 (= lt!57228 (addStillContains!76 lt!57221 lt!57220 lt!56458 lt!57223))))

(assert (=> b!110879 (contains!838 (+!150 lt!57221 (tuple2!2441 lt!57220 lt!56458)) lt!57223)))

(declare-fun lt!57212 () Unit!3403)

(assert (=> b!110879 (= lt!57212 lt!57228)))

(declare-fun lt!57224 () ListLongMap!1591)

(assert (=> b!110879 (= lt!57224 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) lt!56572 lt!56458 (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!57215 () (_ BitVec 64))

(assert (=> b!110879 (= lt!57215 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57222 () (_ BitVec 64))

(assert (=> b!110879 (= lt!57222 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!57230 () Unit!3403)

(assert (=> b!110879 (= lt!57230 (addApplyDifferent!76 lt!57224 lt!57215 (minValue!2498 newMap!16) lt!57222))))

(assert (=> b!110879 (= (apply!100 (+!150 lt!57224 (tuple2!2441 lt!57215 (minValue!2498 newMap!16))) lt!57222) (apply!100 lt!57224 lt!57222))))

(declare-fun lt!57214 () Unit!3403)

(assert (=> b!110879 (= lt!57214 lt!57230)))

(declare-fun lt!57218 () ListLongMap!1591)

(assert (=> b!110879 (= lt!57218 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) lt!56572 lt!56458 (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!57211 () (_ BitVec 64))

(assert (=> b!110879 (= lt!57211 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57229 () (_ BitVec 64))

(assert (=> b!110879 (= lt!57229 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!57227 () Unit!3403)

(assert (=> b!110879 (= lt!57227 (addApplyDifferent!76 lt!57218 lt!57211 lt!56458 lt!57229))))

(assert (=> b!110879 (= (apply!100 (+!150 lt!57218 (tuple2!2441 lt!57211 lt!56458)) lt!57229) (apply!100 lt!57218 lt!57229))))

(declare-fun lt!57217 () Unit!3403)

(assert (=> b!110879 (= lt!57217 lt!57227)))

(declare-fun lt!57231 () ListLongMap!1591)

(assert (=> b!110879 (= lt!57231 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) lt!56572 lt!56458 (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!57216 () (_ BitVec 64))

(assert (=> b!110879 (= lt!57216 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57219 () (_ BitVec 64))

(assert (=> b!110879 (= lt!57219 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!110879 (= lt!57226 (addApplyDifferent!76 lt!57231 lt!57216 (minValue!2498 newMap!16) lt!57219))))

(assert (=> b!110879 (= (apply!100 (+!150 lt!57231 (tuple2!2441 lt!57216 (minValue!2498 newMap!16))) lt!57219) (apply!100 lt!57231 lt!57219))))

(declare-fun b!110880 () Bool)

(declare-fun res!54804 () Bool)

(declare-fun e!72096 () Bool)

(assert (=> b!110880 (=> (not res!54804) (not e!72096))))

(assert (=> b!110880 (= res!54804 e!72088)))

(declare-fun c!19711 () Bool)

(assert (=> b!110880 (= c!19711 (not (= (bvand lt!56572 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!110881 () Bool)

(declare-fun e!72089 () Bool)

(assert (=> b!110881 (= e!72089 (validKeyInArray!0 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!110882 () Bool)

(declare-fun e!72092 () Bool)

(assert (=> b!110882 (= e!72092 (= (apply!100 lt!57225 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2498 newMap!16)))))

(declare-fun bm!11835 () Bool)

(assert (=> bm!11835 (= call!11837 (contains!838 lt!57225 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110883 () Bool)

(assert (=> b!110883 (= e!72094 e!72092)))

(declare-fun res!54801 () Bool)

(assert (=> b!110883 (= res!54801 call!11837)))

(assert (=> b!110883 (=> (not res!54801) (not e!72092))))

(declare-fun bm!11836 () Bool)

(declare-fun call!11838 () ListLongMap!1591)

(declare-fun c!19707 () Bool)

(assert (=> bm!11836 (= call!11841 (+!150 (ite c!19707 call!11839 (ite c!19712 call!11836 call!11838)) (ite (or c!19707 c!19712) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16)))))))

(declare-fun b!110884 () Bool)

(declare-fun call!11840 () ListLongMap!1591)

(assert (=> b!110884 (= e!72090 call!11840)))

(declare-fun d!31285 () Bool)

(assert (=> d!31285 e!72096))

(declare-fun res!54807 () Bool)

(assert (=> d!31285 (=> (not res!54807) (not e!72096))))

(assert (=> d!31285 (= res!54807 (or (bvsge #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))))))))

(declare-fun lt!57232 () ListLongMap!1591)

(assert (=> d!31285 (= lt!57225 lt!57232)))

(declare-fun lt!57213 () Unit!3403)

(assert (=> d!31285 (= lt!57213 e!72098)))

(declare-fun c!19709 () Bool)

(declare-fun e!72091 () Bool)

(assert (=> d!31285 (= c!19709 e!72091)))

(declare-fun res!54803 () Bool)

(assert (=> d!31285 (=> (not res!54803) (not e!72091))))

(assert (=> d!31285 (= res!54803 (bvslt #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))))))

(assert (=> d!31285 (= lt!57232 e!72097)))

(assert (=> d!31285 (= c!19707 (and (not (= (bvand lt!56572 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!56572 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!31285 (validMask!0 (mask!6795 newMap!16))))

(assert (=> d!31285 (= (getCurrentListMap!496 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) lt!56572 lt!56458 (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) lt!57225)))

(declare-fun b!110885 () Bool)

(assert (=> b!110885 (= e!72095 call!11840)))

(declare-fun b!110886 () Bool)

(assert (=> b!110886 (= e!72087 (= (apply!100 lt!57225 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)) (get!1347 (select (arr!2082 (_values!2610 newMap!16)) #b00000000000000000000000000000000) (dynLambda!390 (defaultEntry!2627 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!110886 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2339 (_values!2610 newMap!16))))))

(assert (=> b!110886 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))))))

(declare-fun b!110887 () Bool)

(assert (=> b!110887 (= e!72095 call!11838)))

(declare-fun bm!11837 () Bool)

(assert (=> bm!11837 (= call!11838 call!11836)))

(declare-fun b!110888 () Bool)

(declare-fun res!54808 () Bool)

(assert (=> b!110888 (=> (not res!54808) (not e!72096))))

(assert (=> b!110888 (= res!54808 e!72093)))

(declare-fun res!54805 () Bool)

(assert (=> b!110888 (=> res!54805 e!72093)))

(assert (=> b!110888 (= res!54805 (not e!72089))))

(declare-fun res!54806 () Bool)

(assert (=> b!110888 (=> (not res!54806) (not e!72089))))

(assert (=> b!110888 (= res!54806 (bvslt #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))))))

(declare-fun bm!11838 () Bool)

(assert (=> bm!11838 (= call!11840 call!11841)))

(declare-fun b!110889 () Bool)

(assert (=> b!110889 (= e!72091 (validKeyInArray!0 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!110890 () Bool)

(assert (=> b!110890 (= e!72096 e!72094)))

(declare-fun c!19710 () Bool)

(assert (=> b!110890 (= c!19710 (not (= (bvand lt!56572 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!110891 () Bool)

(assert (=> b!110891 (= e!72088 (not call!11842))))

(declare-fun bm!11839 () Bool)

(assert (=> bm!11839 (= call!11842 (contains!838 lt!57225 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!31285 c!19707) b!110878))

(assert (= (and d!31285 (not c!19707)) b!110874))

(assert (= (and b!110874 c!19712) b!110884))

(assert (= (and b!110874 (not c!19712)) b!110871))

(assert (= (and b!110871 c!19708) b!110885))

(assert (= (and b!110871 (not c!19708)) b!110887))

(assert (= (or b!110885 b!110887) bm!11837))

(assert (= (or b!110884 bm!11837) bm!11833))

(assert (= (or b!110884 b!110885) bm!11838))

(assert (= (or b!110878 bm!11833) bm!11834))

(assert (= (or b!110878 bm!11838) bm!11836))

(assert (= (and d!31285 res!54803) b!110889))

(assert (= (and d!31285 c!19709) b!110879))

(assert (= (and d!31285 (not c!19709)) b!110875))

(assert (= (and d!31285 res!54807) b!110888))

(assert (= (and b!110888 res!54806) b!110881))

(assert (= (and b!110888 (not res!54805)) b!110872))

(assert (= (and b!110872 res!54802) b!110886))

(assert (= (and b!110888 res!54808) b!110880))

(assert (= (and b!110880 c!19711) b!110873))

(assert (= (and b!110880 (not c!19711)) b!110891))

(assert (= (and b!110873 res!54800) b!110877))

(assert (= (or b!110873 b!110891) bm!11839))

(assert (= (and b!110880 res!54804) b!110890))

(assert (= (and b!110890 c!19710) b!110883))

(assert (= (and b!110890 (not c!19710)) b!110876))

(assert (= (and b!110883 res!54801) b!110882))

(assert (= (or b!110883 b!110876) bm!11835))

(declare-fun b_lambda!4963 () Bool)

(assert (=> (not b_lambda!4963) (not b!110886)))

(assert (=> b!110886 t!5774))

(declare-fun b_and!6823 () Bool)

(assert (= b_and!6819 (and (=> t!5774 result!3537) b_and!6823)))

(assert (=> b!110886 t!5776))

(declare-fun b_and!6825 () Bool)

(assert (= b_and!6821 (and (=> t!5776 result!3539) b_and!6825)))

(declare-fun m!126017 () Bool)

(assert (=> bm!11835 m!126017))

(declare-fun m!126019 () Bool)

(assert (=> b!110882 m!126019))

(assert (=> b!110881 m!124693))

(assert (=> b!110881 m!124693))

(assert (=> b!110881 m!124695))

(assert (=> b!110872 m!124693))

(assert (=> b!110872 m!124693))

(declare-fun m!126021 () Bool)

(assert (=> b!110872 m!126021))

(declare-fun m!126023 () Bool)

(assert (=> b!110879 m!126023))

(declare-fun m!126025 () Bool)

(assert (=> b!110879 m!126025))

(declare-fun m!126027 () Bool)

(assert (=> b!110879 m!126027))

(assert (=> b!110879 m!126023))

(declare-fun m!126029 () Bool)

(assert (=> b!110879 m!126029))

(declare-fun m!126031 () Bool)

(assert (=> b!110879 m!126031))

(assert (=> b!110879 m!126031))

(declare-fun m!126033 () Bool)

(assert (=> b!110879 m!126033))

(declare-fun m!126035 () Bool)

(assert (=> b!110879 m!126035))

(assert (=> b!110879 m!124693))

(declare-fun m!126037 () Bool)

(assert (=> b!110879 m!126037))

(declare-fun m!126039 () Bool)

(assert (=> b!110879 m!126039))

(declare-fun m!126041 () Bool)

(assert (=> b!110879 m!126041))

(declare-fun m!126043 () Bool)

(assert (=> b!110879 m!126043))

(assert (=> b!110879 m!126039))

(declare-fun m!126045 () Bool)

(assert (=> b!110879 m!126045))

(declare-fun m!126047 () Bool)

(assert (=> b!110879 m!126047))

(assert (=> b!110879 m!126029))

(declare-fun m!126049 () Bool)

(assert (=> b!110879 m!126049))

(declare-fun m!126051 () Bool)

(assert (=> b!110879 m!126051))

(declare-fun m!126053 () Bool)

(assert (=> b!110879 m!126053))

(assert (=> d!31285 m!124669))

(assert (=> b!110886 m!124953))

(assert (=> b!110886 m!124733))

(assert (=> b!110886 m!124953))

(assert (=> b!110886 m!124733))

(assert (=> b!110886 m!124955))

(assert (=> b!110886 m!124693))

(declare-fun m!126055 () Bool)

(assert (=> b!110886 m!126055))

(assert (=> b!110886 m!124693))

(assert (=> bm!11834 m!126051))

(assert (=> b!110889 m!124693))

(assert (=> b!110889 m!124693))

(assert (=> b!110889 m!124695))

(declare-fun m!126057 () Bool)

(assert (=> bm!11836 m!126057))

(declare-fun m!126059 () Bool)

(assert (=> b!110878 m!126059))

(declare-fun m!126061 () Bool)

(assert (=> bm!11839 m!126061))

(declare-fun m!126063 () Bool)

(assert (=> b!110877 m!126063))

(assert (=> d!30923 d!31285))

(declare-fun d!31287 () Bool)

(assert (=> d!31287 (= (+!150 (getCurrentListMap!496 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458)) (getCurrentListMap!496 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) lt!56572 lt!56458 (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(assert (=> d!31287 true))

(declare-fun _$7!98 () Unit!3403)

(assert (=> d!31287 (= (choose!690 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) lt!56572 (zeroValue!2498 newMap!16) lt!56458 (minValue!2498 newMap!16) (defaultEntry!2627 newMap!16)) _$7!98)))

(declare-fun bs!4564 () Bool)

(assert (= bs!4564 d!31287))

(assert (=> bs!4564 m!124485))

(assert (=> bs!4564 m!124485))

(assert (=> bs!4564 m!124909))

(assert (=> bs!4564 m!124907))

(assert (=> d!30923 d!31287))

(assert (=> d!30923 d!31129))

(declare-fun b!110892 () Bool)

(declare-fun e!72100 () Option!164)

(assert (=> b!110892 (= e!72100 (Some!163 (_2!1231 (h!2225 (t!5767 (toList!811 lt!56461))))))))

(declare-fun b!110894 () Bool)

(declare-fun e!72101 () Option!164)

(assert (=> b!110894 (= e!72101 (getValueByKey!158 (t!5767 (t!5767 (toList!811 lt!56461))) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(declare-fun c!19713 () Bool)

(declare-fun d!31289 () Bool)

(assert (=> d!31289 (= c!19713 (and ((_ is Cons!1626) (t!5767 (toList!811 lt!56461))) (= (_1!1231 (h!2225 (t!5767 (toList!811 lt!56461)))) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355))))))

(assert (=> d!31289 (= (getValueByKey!158 (t!5767 (toList!811 lt!56461)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) e!72100)))

(declare-fun b!110893 () Bool)

(assert (=> b!110893 (= e!72100 e!72101)))

(declare-fun c!19714 () Bool)

(assert (=> b!110893 (= c!19714 (and ((_ is Cons!1626) (t!5767 (toList!811 lt!56461))) (not (= (_1!1231 (h!2225 (t!5767 (toList!811 lt!56461)))) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))))

(declare-fun b!110895 () Bool)

(assert (=> b!110895 (= e!72101 None!162)))

(assert (= (and d!31289 c!19713) b!110892))

(assert (= (and d!31289 (not c!19713)) b!110893))

(assert (= (and b!110893 c!19714) b!110894))

(assert (= (and b!110893 (not c!19714)) b!110895))

(assert (=> b!110894 m!124315))

(declare-fun m!126065 () Bool)

(assert (=> b!110894 m!126065))

(assert (=> b!110088 d!31289))

(declare-fun d!31291 () Bool)

(assert (not d!31291))

(assert (=> b!110380 d!31291))

(assert (=> b!110544 d!31105))

(declare-fun d!31293 () Bool)

(declare-fun res!54809 () Bool)

(declare-fun e!72102 () Bool)

(assert (=> d!31293 (=> res!54809 e!72102)))

(assert (=> d!31293 (= res!54809 (and ((_ is Cons!1626) (toList!811 lt!56699)) (= (_1!1231 (h!2225 (toList!811 lt!56699))) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!31293 (= (containsKey!162 (toList!811 lt!56699) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!72102)))

(declare-fun b!110896 () Bool)

(declare-fun e!72103 () Bool)

(assert (=> b!110896 (= e!72102 e!72103)))

(declare-fun res!54810 () Bool)

(assert (=> b!110896 (=> (not res!54810) (not e!72103))))

(assert (=> b!110896 (= res!54810 (and (or (not ((_ is Cons!1626) (toList!811 lt!56699))) (bvsle (_1!1231 (h!2225 (toList!811 lt!56699))) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1626) (toList!811 lt!56699)) (bvslt (_1!1231 (h!2225 (toList!811 lt!56699))) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!110897 () Bool)

(assert (=> b!110897 (= e!72103 (containsKey!162 (t!5767 (toList!811 lt!56699)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!31293 (not res!54809)) b!110896))

(assert (= (and b!110896 res!54810) b!110897))

(assert (=> b!110897 m!124503))

(declare-fun m!126067 () Bool)

(assert (=> b!110897 m!126067))

(assert (=> d!30911 d!31293))

(declare-fun d!31295 () Bool)

(assert (=> d!31295 (= (apply!100 lt!56824 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1350 (getValueByKey!158 (toList!811 lt!56824) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4565 () Bool)

(assert (= bs!4565 d!31295))

(declare-fun m!126069 () Bool)

(assert (=> bs!4565 m!126069))

(assert (=> bs!4565 m!126069))

(declare-fun m!126071 () Bool)

(assert (=> bs!4565 m!126071))

(assert (=> b!110272 d!31295))

(assert (=> d!30889 d!30887))

(declare-fun d!31297 () Bool)

(assert (=> d!31297 (= (getValueByKey!158 lt!56634 (_1!1231 lt!56454)) (Some!163 (_2!1231 lt!56454)))))

(assert (=> d!31297 true))

(declare-fun _$22!448 () Unit!3403)

(assert (=> d!31297 (= (choose!687 lt!56634 (_1!1231 lt!56454) (_2!1231 lt!56454)) _$22!448)))

(declare-fun bs!4566 () Bool)

(assert (= bs!4566 d!31297))

(assert (=> bs!4566 m!124551))

(assert (=> d!30889 d!31297))

(declare-fun d!31299 () Bool)

(declare-fun res!54811 () Bool)

(declare-fun e!72104 () Bool)

(assert (=> d!31299 (=> res!54811 e!72104)))

(assert (=> d!31299 (= res!54811 (or ((_ is Nil!1627) lt!56634) ((_ is Nil!1627) (t!5767 lt!56634))))))

(assert (=> d!31299 (= (isStrictlySorted!311 lt!56634) e!72104)))

(declare-fun b!110898 () Bool)

(declare-fun e!72105 () Bool)

(assert (=> b!110898 (= e!72104 e!72105)))

(declare-fun res!54812 () Bool)

(assert (=> b!110898 (=> (not res!54812) (not e!72105))))

(assert (=> b!110898 (= res!54812 (bvslt (_1!1231 (h!2225 lt!56634)) (_1!1231 (h!2225 (t!5767 lt!56634)))))))

(declare-fun b!110899 () Bool)

(assert (=> b!110899 (= e!72105 (isStrictlySorted!311 (t!5767 lt!56634)))))

(assert (= (and d!31299 (not res!54811)) b!110898))

(assert (= (and b!110898 res!54812) b!110899))

(declare-fun m!126073 () Bool)

(assert (=> b!110899 m!126073))

(assert (=> d!30889 d!31299))

(assert (=> d!30997 d!30907))

(declare-fun d!31301 () Bool)

(declare-fun e!72108 () Bool)

(assert (=> d!31301 e!72108))

(declare-fun res!54818 () Bool)

(assert (=> d!31301 (=> (not res!54818) (not e!72108))))

(declare-fun lt!57235 () SeekEntryResult!261)

(assert (=> d!31301 (= res!54818 ((_ is Found!261) lt!57235))))

(assert (=> d!31301 (= lt!57235 (seekEntryOrOpen!0 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (_keys!4341 newMap!16) (mask!6795 newMap!16)))))

(assert (=> d!31301 true))

(declare-fun _$33!96 () Unit!3403)

(assert (=> d!31301 (= (choose!693 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (defaultEntry!2627 newMap!16)) _$33!96)))

(declare-fun b!110904 () Bool)

(declare-fun res!54817 () Bool)

(assert (=> b!110904 (=> (not res!54817) (not e!72108))))

(assert (=> b!110904 (= res!54817 (inRange!0 (index!3195 lt!57235) (mask!6795 newMap!16)))))

(declare-fun b!110905 () Bool)

(assert (=> b!110905 (= e!72108 (= (select (arr!2081 (_keys!4341 newMap!16)) (index!3195 lt!57235)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(assert (= (and d!31301 res!54818) b!110904))

(assert (= (and b!110904 res!54817) b!110905))

(assert (=> d!31301 m!124315))

(assert (=> d!31301 m!124453))

(declare-fun m!126075 () Bool)

(assert (=> b!110904 m!126075))

(declare-fun m!126077 () Bool)

(assert (=> b!110905 m!126077))

(assert (=> d!30997 d!31301))

(assert (=> d!30997 d!31129))

(assert (=> b!110284 d!31105))

(declare-fun d!31303 () Bool)

(declare-fun e!72109 () Bool)

(assert (=> d!31303 e!72109))

(declare-fun res!54819 () Bool)

(assert (=> d!31303 (=> (not res!54819) (not e!72109))))

(declare-fun lt!57238 () ListLongMap!1591)

(assert (=> d!31303 (= res!54819 (contains!838 lt!57238 (_1!1231 (ite (or c!19548 c!19553) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 newMap!16)) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16))))))))

(declare-fun lt!57237 () List!1630)

(assert (=> d!31303 (= lt!57238 (ListLongMap!1592 lt!57237))))

(declare-fun lt!57239 () Unit!3403)

(declare-fun lt!57236 () Unit!3403)

(assert (=> d!31303 (= lt!57239 lt!57236)))

(assert (=> d!31303 (= (getValueByKey!158 lt!57237 (_1!1231 (ite (or c!19548 c!19553) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 newMap!16)) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16))))) (Some!163 (_2!1231 (ite (or c!19548 c!19553) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 newMap!16)) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16))))))))

(assert (=> d!31303 (= lt!57236 (lemmaContainsTupThenGetReturnValue!74 lt!57237 (_1!1231 (ite (or c!19548 c!19553) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 newMap!16)) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16)))) (_2!1231 (ite (or c!19548 c!19553) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 newMap!16)) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16))))))))

(assert (=> d!31303 (= lt!57237 (insertStrictlySorted!77 (toList!811 (ite c!19548 call!11772 (ite c!19553 call!11769 call!11771))) (_1!1231 (ite (or c!19548 c!19553) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 newMap!16)) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16)))) (_2!1231 (ite (or c!19548 c!19553) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 newMap!16)) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16))))))))

(assert (=> d!31303 (= (+!150 (ite c!19548 call!11772 (ite c!19553 call!11769 call!11771)) (ite (or c!19548 c!19553) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 newMap!16)) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16)))) lt!57238)))

(declare-fun b!110906 () Bool)

(declare-fun res!54820 () Bool)

(assert (=> b!110906 (=> (not res!54820) (not e!72109))))

(assert (=> b!110906 (= res!54820 (= (getValueByKey!158 (toList!811 lt!57238) (_1!1231 (ite (or c!19548 c!19553) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 newMap!16)) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16))))) (Some!163 (_2!1231 (ite (or c!19548 c!19553) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 newMap!16)) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16)))))))))

(declare-fun b!110907 () Bool)

(assert (=> b!110907 (= e!72109 (contains!839 (toList!811 lt!57238) (ite (or c!19548 c!19553) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 newMap!16)) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16)))))))

(assert (= (and d!31303 res!54819) b!110906))

(assert (= (and b!110906 res!54820) b!110907))

(declare-fun m!126079 () Bool)

(assert (=> d!31303 m!126079))

(declare-fun m!126081 () Bool)

(assert (=> d!31303 m!126081))

(declare-fun m!126083 () Bool)

(assert (=> d!31303 m!126083))

(declare-fun m!126085 () Bool)

(assert (=> d!31303 m!126085))

(declare-fun m!126087 () Bool)

(assert (=> b!110906 m!126087))

(declare-fun m!126089 () Bool)

(assert (=> b!110907 m!126089))

(assert (=> bm!11769 d!31303))

(declare-fun d!31305 () Bool)

(declare-fun e!72110 () Bool)

(assert (=> d!31305 e!72110))

(declare-fun res!54821 () Bool)

(assert (=> d!31305 (=> res!54821 e!72110)))

(declare-fun lt!57240 () Bool)

(assert (=> d!31305 (= res!54821 (not lt!57240))))

(declare-fun lt!57241 () Bool)

(assert (=> d!31305 (= lt!57240 lt!57241)))

(declare-fun lt!57243 () Unit!3403)

(declare-fun e!72111 () Unit!3403)

(assert (=> d!31305 (= lt!57243 e!72111)))

(declare-fun c!19715 () Bool)

(assert (=> d!31305 (= c!19715 lt!57241)))

(assert (=> d!31305 (= lt!57241 (containsKey!162 (toList!811 lt!56798) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!31305 (= (contains!838 lt!56798 #b0000000000000000000000000000000000000000000000000000000000000000) lt!57240)))

(declare-fun b!110908 () Bool)

(declare-fun lt!57242 () Unit!3403)

(assert (=> b!110908 (= e!72111 lt!57242)))

(assert (=> b!110908 (= lt!57242 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 lt!56798) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!110908 (isDefined!111 (getValueByKey!158 (toList!811 lt!56798) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110909 () Bool)

(declare-fun Unit!3447 () Unit!3403)

(assert (=> b!110909 (= e!72111 Unit!3447)))

(declare-fun b!110910 () Bool)

(assert (=> b!110910 (= e!72110 (isDefined!111 (getValueByKey!158 (toList!811 lt!56798) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!31305 c!19715) b!110908))

(assert (= (and d!31305 (not c!19715)) b!110909))

(assert (= (and d!31305 (not res!54821)) b!110910))

(declare-fun m!126091 () Bool)

(assert (=> d!31305 m!126091))

(declare-fun m!126093 () Bool)

(assert (=> b!110908 m!126093))

(declare-fun m!126095 () Bool)

(assert (=> b!110908 m!126095))

(assert (=> b!110908 m!126095))

(declare-fun m!126097 () Bool)

(assert (=> b!110908 m!126097))

(assert (=> b!110910 m!126095))

(assert (=> b!110910 m!126095))

(assert (=> b!110910 m!126097))

(assert (=> d!30917 d!31305))

(assert (=> d!30917 d!30831))

(declare-fun d!31307 () Bool)

(declare-fun lt!57244 () Bool)

(assert (=> d!31307 (= lt!57244 (select (content!113 (toList!811 lt!57049)) (tuple2!2441 lt!56610 lt!56616)))))

(declare-fun e!72113 () Bool)

(assert (=> d!31307 (= lt!57244 e!72113)))

(declare-fun res!54822 () Bool)

(assert (=> d!31307 (=> (not res!54822) (not e!72113))))

(assert (=> d!31307 (= res!54822 ((_ is Cons!1626) (toList!811 lt!57049)))))

(assert (=> d!31307 (= (contains!839 (toList!811 lt!57049) (tuple2!2441 lt!56610 lt!56616)) lt!57244)))

(declare-fun b!110911 () Bool)

(declare-fun e!72112 () Bool)

(assert (=> b!110911 (= e!72113 e!72112)))

(declare-fun res!54823 () Bool)

(assert (=> b!110911 (=> res!54823 e!72112)))

(assert (=> b!110911 (= res!54823 (= (h!2225 (toList!811 lt!57049)) (tuple2!2441 lt!56610 lt!56616)))))

(declare-fun b!110912 () Bool)

(assert (=> b!110912 (= e!72112 (contains!839 (t!5767 (toList!811 lt!57049)) (tuple2!2441 lt!56610 lt!56616)))))

(assert (= (and d!31307 res!54822) b!110911))

(assert (= (and b!110911 (not res!54823)) b!110912))

(declare-fun m!126099 () Bool)

(assert (=> d!31307 m!126099))

(declare-fun m!126101 () Bool)

(assert (=> d!31307 m!126101))

(declare-fun m!126103 () Bool)

(assert (=> b!110912 m!126103))

(assert (=> b!110497 d!31307))

(declare-fun d!31309 () Bool)

(assert (=> d!31309 (isDefined!111 (getValueByKey!158 (toList!811 e!71507) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(declare-fun lt!57245 () Unit!3403)

(assert (=> d!31309 (= lt!57245 (choose!684 (toList!811 e!71507) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(declare-fun e!72114 () Bool)

(assert (=> d!31309 e!72114))

(declare-fun res!54824 () Bool)

(assert (=> d!31309 (=> (not res!54824) (not e!72114))))

(assert (=> d!31309 (= res!54824 (isStrictlySorted!311 (toList!811 e!71507)))))

(assert (=> d!31309 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 e!71507) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) lt!57245)))

(declare-fun b!110913 () Bool)

(assert (=> b!110913 (= e!72114 (containsKey!162 (toList!811 e!71507) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(assert (= (and d!31309 res!54824) b!110913))

(assert (=> d!31309 m!124315))

(assert (=> d!31309 m!125289))

(assert (=> d!31309 m!125289))

(assert (=> d!31309 m!125291))

(assert (=> d!31309 m!124315))

(declare-fun m!126105 () Bool)

(assert (=> d!31309 m!126105))

(declare-fun m!126107 () Bool)

(assert (=> d!31309 m!126107))

(assert (=> b!110913 m!124315))

(assert (=> b!110913 m!125285))

(assert (=> b!110409 d!31309))

(assert (=> b!110409 d!31101))

(assert (=> b!110409 d!31103))

(declare-fun d!31311 () Bool)

(declare-fun res!54826 () Bool)

(declare-fun e!72115 () Bool)

(assert (=> d!31311 (=> res!54826 e!72115)))

(assert (=> d!31311 (= res!54826 (bvsge #b00000000000000000000000000000000 (size!2338 (_keys!4341 (_2!1230 lt!56590)))))))

(assert (=> d!31311 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4341 (_2!1230 lt!56590)) (mask!6795 (_2!1230 lt!56590))) e!72115)))

(declare-fun b!110914 () Bool)

(declare-fun e!72116 () Bool)

(declare-fun call!11843 () Bool)

(assert (=> b!110914 (= e!72116 call!11843)))

(declare-fun b!110915 () Bool)

(declare-fun e!72117 () Bool)

(assert (=> b!110915 (= e!72117 call!11843)))

(declare-fun b!110916 () Bool)

(assert (=> b!110916 (= e!72115 e!72116)))

(declare-fun c!19716 () Bool)

(assert (=> b!110916 (= c!19716 (validKeyInArray!0 (select (arr!2081 (_keys!4341 (_2!1230 lt!56590))) #b00000000000000000000000000000000)))))

(declare-fun bm!11840 () Bool)

(assert (=> bm!11840 (= call!11843 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4341 (_2!1230 lt!56590)) (mask!6795 (_2!1230 lt!56590))))))

(declare-fun b!110917 () Bool)

(assert (=> b!110917 (= e!72116 e!72117)))

(declare-fun lt!57247 () (_ BitVec 64))

(assert (=> b!110917 (= lt!57247 (select (arr!2081 (_keys!4341 (_2!1230 lt!56590))) #b00000000000000000000000000000000))))

(declare-fun lt!57248 () Unit!3403)

(assert (=> b!110917 (= lt!57248 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4341 (_2!1230 lt!56590)) lt!57247 #b00000000000000000000000000000000))))

(assert (=> b!110917 (arrayContainsKey!0 (_keys!4341 (_2!1230 lt!56590)) lt!57247 #b00000000000000000000000000000000)))

(declare-fun lt!57246 () Unit!3403)

(assert (=> b!110917 (= lt!57246 lt!57248)))

(declare-fun res!54825 () Bool)

(assert (=> b!110917 (= res!54825 (= (seekEntryOrOpen!0 (select (arr!2081 (_keys!4341 (_2!1230 lt!56590))) #b00000000000000000000000000000000) (_keys!4341 (_2!1230 lt!56590)) (mask!6795 (_2!1230 lt!56590))) (Found!261 #b00000000000000000000000000000000)))))

(assert (=> b!110917 (=> (not res!54825) (not e!72117))))

(assert (= (and d!31311 (not res!54826)) b!110916))

(assert (= (and b!110916 c!19716) b!110917))

(assert (= (and b!110916 (not c!19716)) b!110914))

(assert (= (and b!110917 res!54825) b!110915))

(assert (= (or b!110915 b!110914) bm!11840))

(assert (=> b!110916 m!125781))

(assert (=> b!110916 m!125781))

(assert (=> b!110916 m!125783))

(declare-fun m!126109 () Bool)

(assert (=> bm!11840 m!126109))

(assert (=> b!110917 m!125781))

(declare-fun m!126111 () Bool)

(assert (=> b!110917 m!126111))

(declare-fun m!126113 () Bool)

(assert (=> b!110917 m!126113))

(assert (=> b!110917 m!125781))

(declare-fun m!126115 () Bool)

(assert (=> b!110917 m!126115))

(assert (=> b!110258 d!31311))

(declare-fun d!31313 () Bool)

(declare-fun e!72118 () Bool)

(assert (=> d!31313 e!72118))

(declare-fun res!54827 () Bool)

(assert (=> d!31313 (=> res!54827 e!72118)))

(declare-fun lt!57249 () Bool)

(assert (=> d!31313 (= res!54827 (not lt!57249))))

(declare-fun lt!57250 () Bool)

(assert (=> d!31313 (= lt!57249 lt!57250)))

(declare-fun lt!57252 () Unit!3403)

(declare-fun e!72119 () Unit!3403)

(assert (=> d!31313 (= lt!57252 e!72119)))

(declare-fun c!19717 () Bool)

(assert (=> d!31313 (= c!19717 lt!57250)))

(assert (=> d!31313 (= lt!57250 (containsKey!162 (toList!811 (map!1299 (_2!1230 lt!57017))) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(assert (=> d!31313 (= (contains!838 (map!1299 (_2!1230 lt!57017)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) lt!57249)))

(declare-fun b!110918 () Bool)

(declare-fun lt!57251 () Unit!3403)

(assert (=> b!110918 (= e!72119 lt!57251)))

(assert (=> b!110918 (= lt!57251 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 (map!1299 (_2!1230 lt!57017))) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(assert (=> b!110918 (isDefined!111 (getValueByKey!158 (toList!811 (map!1299 (_2!1230 lt!57017))) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(declare-fun b!110919 () Bool)

(declare-fun Unit!3448 () Unit!3403)

(assert (=> b!110919 (= e!72119 Unit!3448)))

(declare-fun b!110920 () Bool)

(assert (=> b!110920 (= e!72118 (isDefined!111 (getValueByKey!158 (toList!811 (map!1299 (_2!1230 lt!57017))) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355))))))

(assert (= (and d!31313 c!19717) b!110918))

(assert (= (and d!31313 (not c!19717)) b!110919))

(assert (= (and d!31313 (not res!54827)) b!110920))

(assert (=> d!31313 m!124315))

(declare-fun m!126117 () Bool)

(assert (=> d!31313 m!126117))

(assert (=> b!110918 m!124315))

(declare-fun m!126119 () Bool)

(assert (=> b!110918 m!126119))

(assert (=> b!110918 m!124315))

(declare-fun m!126121 () Bool)

(assert (=> b!110918 m!126121))

(assert (=> b!110918 m!126121))

(declare-fun m!126123 () Bool)

(assert (=> b!110918 m!126123))

(assert (=> b!110920 m!124315))

(assert (=> b!110920 m!126121))

(assert (=> b!110920 m!126121))

(assert (=> b!110920 m!126123))

(assert (=> b!110473 d!31313))

(assert (=> b!110473 d!31181))

(assert (=> d!30881 d!31129))

(declare-fun d!31315 () Bool)

(declare-fun res!54828 () Bool)

(declare-fun e!72120 () Bool)

(assert (=> d!31315 (=> res!54828 e!72120)))

(assert (=> d!31315 (= res!54828 (and ((_ is Cons!1626) lt!56950) (= (_1!1231 (h!2225 lt!56950)) (_1!1231 lt!56454))))))

(assert (=> d!31315 (= (containsKey!162 lt!56950 (_1!1231 lt!56454)) e!72120)))

(declare-fun b!110921 () Bool)

(declare-fun e!72121 () Bool)

(assert (=> b!110921 (= e!72120 e!72121)))

(declare-fun res!54829 () Bool)

(assert (=> b!110921 (=> (not res!54829) (not e!72121))))

(assert (=> b!110921 (= res!54829 (and (or (not ((_ is Cons!1626) lt!56950)) (bvsle (_1!1231 (h!2225 lt!56950)) (_1!1231 lt!56454))) ((_ is Cons!1626) lt!56950) (bvslt (_1!1231 (h!2225 lt!56950)) (_1!1231 lt!56454))))))

(declare-fun b!110922 () Bool)

(assert (=> b!110922 (= e!72121 (containsKey!162 (t!5767 lt!56950) (_1!1231 lt!56454)))))

(assert (= (and d!31315 (not res!54828)) b!110921))

(assert (= (and b!110921 res!54829) b!110922))

(declare-fun m!126125 () Bool)

(assert (=> b!110922 m!126125))

(assert (=> b!110427 d!31315))

(declare-fun b!110923 () Bool)

(declare-fun e!72122 () Option!164)

(assert (=> b!110923 (= e!72122 (Some!163 (_2!1231 (h!2225 (toList!811 lt!56927)))))))

(declare-fun b!110925 () Bool)

(declare-fun e!72123 () Option!164)

(assert (=> b!110925 (= e!72123 (getValueByKey!158 (t!5767 (toList!811 lt!56927)) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))

(declare-fun d!31317 () Bool)

(declare-fun c!19718 () Bool)

(assert (=> d!31317 (= c!19718 (and ((_ is Cons!1626) (toList!811 lt!56927)) (= (_1!1231 (h!2225 (toList!811 lt!56927))) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))))))

(assert (=> d!31317 (= (getValueByKey!158 (toList!811 lt!56927) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))) e!72122)))

(declare-fun b!110924 () Bool)

(assert (=> b!110924 (= e!72122 e!72123)))

(declare-fun c!19719 () Bool)

(assert (=> b!110924 (= c!19719 (and ((_ is Cons!1626) (toList!811 lt!56927)) (not (= (_1!1231 (h!2225 (toList!811 lt!56927))) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))))

(declare-fun b!110926 () Bool)

(assert (=> b!110926 (= e!72123 None!162)))

(assert (= (and d!31317 c!19718) b!110923))

(assert (= (and d!31317 (not c!19718)) b!110924))

(assert (= (and b!110924 c!19719) b!110925))

(assert (= (and b!110924 (not c!19719)) b!110926))

(declare-fun m!126127 () Bool)

(assert (=> b!110925 m!126127))

(assert (=> b!110401 d!31317))

(declare-fun d!31319 () Bool)

(declare-fun res!54830 () Bool)

(declare-fun e!72124 () Bool)

(assert (=> d!31319 (=> res!54830 e!72124)))

(assert (=> d!31319 (= res!54830 (and ((_ is Cons!1626) (toList!811 call!11706)) (= (_1!1231 (h!2225 (toList!811 call!11706))) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355))))))

(assert (=> d!31319 (= (containsKey!162 (toList!811 call!11706) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) e!72124)))

(declare-fun b!110927 () Bool)

(declare-fun e!72125 () Bool)

(assert (=> b!110927 (= e!72124 e!72125)))

(declare-fun res!54831 () Bool)

(assert (=> b!110927 (=> (not res!54831) (not e!72125))))

(assert (=> b!110927 (= res!54831 (and (or (not ((_ is Cons!1626) (toList!811 call!11706))) (bvsle (_1!1231 (h!2225 (toList!811 call!11706))) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355))) ((_ is Cons!1626) (toList!811 call!11706)) (bvslt (_1!1231 (h!2225 (toList!811 call!11706))) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355))))))

(declare-fun b!110928 () Bool)

(assert (=> b!110928 (= e!72125 (containsKey!162 (t!5767 (toList!811 call!11706)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(assert (= (and d!31319 (not res!54830)) b!110927))

(assert (= (and b!110927 res!54831) b!110928))

(assert (=> b!110928 m!124315))

(declare-fun m!126129 () Bool)

(assert (=> b!110928 m!126129))

(assert (=> d!30981 d!31319))

(declare-fun d!31321 () Bool)

(declare-fun res!54832 () Bool)

(declare-fun e!72126 () Bool)

(assert (=> d!31321 (=> res!54832 e!72126)))

(assert (=> d!31321 (= res!54832 (or ((_ is Nil!1627) lt!56767) ((_ is Nil!1627) (t!5767 lt!56767))))))

(assert (=> d!31321 (= (isStrictlySorted!311 lt!56767) e!72126)))

(declare-fun b!110929 () Bool)

(declare-fun e!72127 () Bool)

(assert (=> b!110929 (= e!72126 e!72127)))

(declare-fun res!54833 () Bool)

(assert (=> b!110929 (=> (not res!54833) (not e!72127))))

(assert (=> b!110929 (= res!54833 (bvslt (_1!1231 (h!2225 lt!56767)) (_1!1231 (h!2225 (t!5767 lt!56767)))))))

(declare-fun b!110930 () Bool)

(assert (=> b!110930 (= e!72127 (isStrictlySorted!311 (t!5767 lt!56767)))))

(assert (= (and d!31321 (not res!54832)) b!110929))

(assert (= (and b!110929 res!54833) b!110930))

(declare-fun m!126131 () Bool)

(assert (=> b!110930 m!126131))

(assert (=> d!30891 d!31321))

(declare-fun d!31323 () Bool)

(declare-fun res!54834 () Bool)

(declare-fun e!72128 () Bool)

(assert (=> d!31323 (=> res!54834 e!72128)))

(assert (=> d!31323 (= res!54834 (or ((_ is Nil!1627) (toList!811 (+!150 lt!56462 lt!56457))) ((_ is Nil!1627) (t!5767 (toList!811 (+!150 lt!56462 lt!56457))))))))

(assert (=> d!31323 (= (isStrictlySorted!311 (toList!811 (+!150 lt!56462 lt!56457))) e!72128)))

(declare-fun b!110931 () Bool)

(declare-fun e!72129 () Bool)

(assert (=> b!110931 (= e!72128 e!72129)))

(declare-fun res!54835 () Bool)

(assert (=> b!110931 (=> (not res!54835) (not e!72129))))

(assert (=> b!110931 (= res!54835 (bvslt (_1!1231 (h!2225 (toList!811 (+!150 lt!56462 lt!56457)))) (_1!1231 (h!2225 (t!5767 (toList!811 (+!150 lt!56462 lt!56457)))))))))

(declare-fun b!110932 () Bool)

(assert (=> b!110932 (= e!72129 (isStrictlySorted!311 (t!5767 (toList!811 (+!150 lt!56462 lt!56457)))))))

(assert (= (and d!31323 (not res!54834)) b!110931))

(assert (= (and b!110931 res!54835) b!110932))

(declare-fun m!126133 () Bool)

(assert (=> b!110932 m!126133))

(assert (=> d!30891 d!31323))

(declare-fun d!31325 () Bool)

(declare-fun e!72130 () Bool)

(assert (=> d!31325 e!72130))

(declare-fun res!54836 () Bool)

(assert (=> d!31325 (=> (not res!54836) (not e!72130))))

(declare-fun lt!57255 () ListLongMap!1591)

(assert (=> d!31325 (= res!54836 (contains!838 lt!57255 (_1!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16))))))))

(declare-fun lt!57254 () List!1630)

(assert (=> d!31325 (= lt!57255 (ListLongMap!1592 lt!57254))))

(declare-fun lt!57256 () Unit!3403)

(declare-fun lt!57253 () Unit!3403)

(assert (=> d!31325 (= lt!57256 lt!57253)))

(assert (=> d!31325 (= (getValueByKey!158 lt!57254 (_1!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16))))) (Some!163 (_2!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16))))))))

(assert (=> d!31325 (= lt!57253 (lemmaContainsTupThenGetReturnValue!74 lt!57254 (_1!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16)))) (_2!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16))))))))

(assert (=> d!31325 (= lt!57254 (insertStrictlySorted!77 (toList!811 call!11748) (_1!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16)))) (_2!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16))))))))

(assert (=> d!31325 (= (+!150 call!11748 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16)))) lt!57255)))

(declare-fun b!110933 () Bool)

(declare-fun res!54837 () Bool)

(assert (=> b!110933 (=> (not res!54837) (not e!72130))))

(assert (=> b!110933 (= res!54837 (= (getValueByKey!158 (toList!811 lt!57255) (_1!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16))))) (Some!163 (_2!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16)))))))))

(declare-fun b!110934 () Bool)

(assert (=> b!110934 (= e!72130 (contains!839 (toList!811 lt!57255) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16)))))))

(assert (= (and d!31325 res!54836) b!110933))

(assert (= (and b!110933 res!54837) b!110934))

(declare-fun m!126135 () Bool)

(assert (=> d!31325 m!126135))

(declare-fun m!126137 () Bool)

(assert (=> d!31325 m!126137))

(declare-fun m!126139 () Bool)

(assert (=> d!31325 m!126139))

(declare-fun m!126141 () Bool)

(assert (=> d!31325 m!126141))

(declare-fun m!126143 () Bool)

(assert (=> b!110933 m!126143))

(declare-fun m!126145 () Bool)

(assert (=> b!110934 m!126145))

(assert (=> b!110109 d!31325))

(declare-fun d!31327 () Bool)

(declare-fun lt!57257 () Bool)

(assert (=> d!31327 (= lt!57257 (select (content!113 lt!56767) (tuple2!2441 (_1!1231 lt!56454) (_2!1231 lt!56454))))))

(declare-fun e!72132 () Bool)

(assert (=> d!31327 (= lt!57257 e!72132)))

(declare-fun res!54838 () Bool)

(assert (=> d!31327 (=> (not res!54838) (not e!72132))))

(assert (=> d!31327 (= res!54838 ((_ is Cons!1626) lt!56767))))

(assert (=> d!31327 (= (contains!839 lt!56767 (tuple2!2441 (_1!1231 lt!56454) (_2!1231 lt!56454))) lt!57257)))

(declare-fun b!110935 () Bool)

(declare-fun e!72131 () Bool)

(assert (=> b!110935 (= e!72132 e!72131)))

(declare-fun res!54839 () Bool)

(assert (=> b!110935 (=> res!54839 e!72131)))

(assert (=> b!110935 (= res!54839 (= (h!2225 lt!56767) (tuple2!2441 (_1!1231 lt!56454) (_2!1231 lt!56454))))))

(declare-fun b!110936 () Bool)

(assert (=> b!110936 (= e!72131 (contains!839 (t!5767 lt!56767) (tuple2!2441 (_1!1231 lt!56454) (_2!1231 lt!56454))))))

(assert (= (and d!31327 res!54838) b!110935))

(assert (= (and b!110935 (not res!54839)) b!110936))

(declare-fun m!126147 () Bool)

(assert (=> d!31327 m!126147))

(declare-fun m!126149 () Bool)

(assert (=> d!31327 m!126149))

(declare-fun m!126151 () Bool)

(assert (=> b!110936 m!126151))

(assert (=> b!110166 d!31327))

(declare-fun d!31329 () Bool)

(declare-fun res!54840 () Bool)

(declare-fun e!72133 () Bool)

(assert (=> d!31329 (=> res!54840 e!72133)))

(assert (=> d!31329 (= res!54840 (and ((_ is Cons!1626) (toList!811 lt!56612)) (= (_1!1231 (h!2225 (toList!811 lt!56612))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!31329 (= (containsKey!162 (toList!811 lt!56612) #b1000000000000000000000000000000000000000000000000000000000000000) e!72133)))

(declare-fun b!110937 () Bool)

(declare-fun e!72134 () Bool)

(assert (=> b!110937 (= e!72133 e!72134)))

(declare-fun res!54841 () Bool)

(assert (=> b!110937 (=> (not res!54841) (not e!72134))))

(assert (=> b!110937 (= res!54841 (and (or (not ((_ is Cons!1626) (toList!811 lt!56612))) (bvsle (_1!1231 (h!2225 (toList!811 lt!56612))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1626) (toList!811 lt!56612)) (bvslt (_1!1231 (h!2225 (toList!811 lt!56612))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!110938 () Bool)

(assert (=> b!110938 (= e!72134 (containsKey!162 (t!5767 (toList!811 lt!56612)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!31329 (not res!54840)) b!110937))

(assert (= (and b!110937 res!54841) b!110938))

(declare-fun m!126153 () Bool)

(assert (=> b!110938 m!126153))

(assert (=> d!30985 d!31329))

(assert (=> d!31051 d!31049))

(assert (=> d!31051 d!31045))

(declare-fun d!31331 () Bool)

(assert (=> d!31331 (not (contains!838 (+!150 lt!56613 (tuple2!2441 lt!56610 lt!56616)) lt!56614))))

(assert (=> d!31331 true))

(declare-fun _$36!325 () Unit!3403)

(assert (=> d!31331 (= (choose!694 lt!56613 lt!56610 lt!56616 lt!56614) _$36!325)))

(declare-fun bs!4567 () Bool)

(assert (= bs!4567 d!31331))

(assert (=> bs!4567 m!124515))

(assert (=> bs!4567 m!124515))

(assert (=> bs!4567 m!124517))

(assert (=> d!31051 d!31331))

(declare-fun d!31333 () Bool)

(declare-fun e!72135 () Bool)

(assert (=> d!31333 e!72135))

(declare-fun res!54842 () Bool)

(assert (=> d!31333 (=> res!54842 e!72135)))

(declare-fun lt!57258 () Bool)

(assert (=> d!31333 (= res!54842 (not lt!57258))))

(declare-fun lt!57259 () Bool)

(assert (=> d!31333 (= lt!57258 lt!57259)))

(declare-fun lt!57261 () Unit!3403)

(declare-fun e!72136 () Unit!3403)

(assert (=> d!31333 (= lt!57261 e!72136)))

(declare-fun c!19720 () Bool)

(assert (=> d!31333 (= c!19720 lt!57259)))

(assert (=> d!31333 (= lt!57259 (containsKey!162 (toList!811 lt!56613) lt!56614))))

(assert (=> d!31333 (= (contains!838 lt!56613 lt!56614) lt!57258)))

(declare-fun b!110940 () Bool)

(declare-fun lt!57260 () Unit!3403)

(assert (=> b!110940 (= e!72136 lt!57260)))

(assert (=> b!110940 (= lt!57260 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 lt!56613) lt!56614))))

(assert (=> b!110940 (isDefined!111 (getValueByKey!158 (toList!811 lt!56613) lt!56614))))

(declare-fun b!110941 () Bool)

(declare-fun Unit!3449 () Unit!3403)

(assert (=> b!110941 (= e!72136 Unit!3449)))

(declare-fun b!110942 () Bool)

(assert (=> b!110942 (= e!72135 (isDefined!111 (getValueByKey!158 (toList!811 lt!56613) lt!56614)))))

(assert (= (and d!31333 c!19720) b!110940))

(assert (= (and d!31333 (not c!19720)) b!110941))

(assert (= (and d!31333 (not res!54842)) b!110942))

(declare-fun m!126155 () Bool)

(assert (=> d!31333 m!126155))

(declare-fun m!126157 () Bool)

(assert (=> b!110940 m!126157))

(declare-fun m!126159 () Bool)

(assert (=> b!110940 m!126159))

(assert (=> b!110940 m!126159))

(declare-fun m!126161 () Bool)

(assert (=> b!110940 m!126161))

(assert (=> b!110942 m!126159))

(assert (=> b!110942 m!126159))

(assert (=> b!110942 m!126161))

(assert (=> d!31051 d!31333))

(declare-fun d!31335 () Bool)

(declare-fun res!54843 () Bool)

(declare-fun e!72137 () Bool)

(assert (=> d!31335 (=> res!54843 e!72137)))

(assert (=> d!31335 (= res!54843 (and ((_ is Cons!1626) lt!56773) (= (_1!1231 (h!2225 lt!56773)) (_1!1231 lt!56457))))))

(assert (=> d!31335 (= (containsKey!162 lt!56773 (_1!1231 lt!56457)) e!72137)))

(declare-fun b!110943 () Bool)

(declare-fun e!72138 () Bool)

(assert (=> b!110943 (= e!72137 e!72138)))

(declare-fun res!54844 () Bool)

(assert (=> b!110943 (=> (not res!54844) (not e!72138))))

(assert (=> b!110943 (= res!54844 (and (or (not ((_ is Cons!1626) lt!56773)) (bvsle (_1!1231 (h!2225 lt!56773)) (_1!1231 lt!56457))) ((_ is Cons!1626) lt!56773) (bvslt (_1!1231 (h!2225 lt!56773)) (_1!1231 lt!56457))))))

(declare-fun b!110944 () Bool)

(assert (=> b!110944 (= e!72138 (containsKey!162 (t!5767 lt!56773) (_1!1231 lt!56457)))))

(assert (= (and d!31335 (not res!54843)) b!110943))

(assert (= (and b!110943 res!54844) b!110944))

(declare-fun m!126163 () Bool)

(assert (=> b!110944 m!126163))

(assert (=> b!110187 d!31335))

(declare-fun d!31337 () Bool)

(declare-fun e!72143 () Bool)

(assert (=> d!31337 e!72143))

(declare-fun res!54856 () Bool)

(assert (=> d!31337 (=> (not res!54856) (not e!72143))))

(assert (=> d!31337 (= res!54856 (and (bvsge (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) #b00000000000000000000000000000000) (bvslt (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (size!2338 (_keys!4341 newMap!16)))))))

(declare-fun lt!57264 () Unit!3403)

(declare-fun choose!1 (array!4389 (_ BitVec 32) (_ BitVec 64)) Unit!3403)

(assert (=> d!31337 (= lt!57264 (choose!1 (_keys!4341 newMap!16) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(declare-fun e!72144 () Bool)

(assert (=> d!31337 e!72144))

(declare-fun res!54855 () Bool)

(assert (=> d!31337 (=> (not res!54855) (not e!72144))))

(assert (=> d!31337 (= res!54855 (and (bvsge (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) #b00000000000000000000000000000000) (bvslt (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (size!2338 (_keys!4341 newMap!16)))))))

(assert (=> d!31337 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4341 newMap!16) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) lt!57264)))

(declare-fun b!110955 () Bool)

(assert (=> b!110955 (= e!72144 (bvslt (size!2338 (_keys!4341 newMap!16)) #b01111111111111111111111111111111))))

(declare-fun b!110953 () Bool)

(declare-fun res!54853 () Bool)

(assert (=> b!110953 (=> (not res!54853) (not e!72144))))

(assert (=> b!110953 (= res!54853 (not (validKeyInArray!0 (select (arr!2081 (_keys!4341 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591))))))))

(declare-fun b!110954 () Bool)

(declare-fun res!54854 () Bool)

(assert (=> b!110954 (=> (not res!54854) (not e!72144))))

(assert (=> b!110954 (= res!54854 (validKeyInArray!0 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(declare-fun b!110956 () Bool)

(assert (=> b!110956 (= e!72143 (= (arrayCountValidKeys!0 (array!4390 (store (arr!2081 (_keys!4341 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2338 (_keys!4341 newMap!16))) #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4341 newMap!16) #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))) #b00000000000000000000000000000001)))))

(assert (= (and d!31337 res!54855) b!110953))

(assert (= (and b!110953 res!54853) b!110954))

(assert (= (and b!110954 res!54854) b!110955))

(assert (= (and d!31337 res!54856) b!110956))

(assert (=> d!31337 m!124315))

(declare-fun m!126165 () Bool)

(assert (=> d!31337 m!126165))

(declare-fun m!126167 () Bool)

(assert (=> b!110953 m!126167))

(assert (=> b!110953 m!126167))

(declare-fun m!126169 () Bool)

(assert (=> b!110953 m!126169))

(assert (=> b!110954 m!124315))

(assert (=> b!110954 m!124629))

(assert (=> b!110956 m!125363))

(assert (=> b!110956 m!125345))

(assert (=> b!110956 m!124641))

(assert (=> d!31035 d!31337))

(declare-fun d!31339 () Bool)

(declare-fun e!72145 () Bool)

(assert (=> d!31339 e!72145))

(declare-fun res!54857 () Bool)

(assert (=> d!31339 (=> res!54857 e!72145)))

(declare-fun lt!57265 () Bool)

(assert (=> d!31339 (= res!54857 (not lt!57265))))

(declare-fun lt!57266 () Bool)

(assert (=> d!31339 (= lt!57265 lt!57266)))

(declare-fun lt!57268 () Unit!3403)

(declare-fun e!72146 () Unit!3403)

(assert (=> d!31339 (= lt!57268 e!72146)))

(declare-fun c!19721 () Bool)

(assert (=> d!31339 (= c!19721 lt!57266)))

(assert (=> d!31339 (= lt!57266 (containsKey!162 (toList!811 (getCurrentListMap!496 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16))) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(assert (=> d!31339 (= (contains!838 (getCurrentListMap!496 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) lt!57265)))

(declare-fun b!110957 () Bool)

(declare-fun lt!57267 () Unit!3403)

(assert (=> b!110957 (= e!72146 lt!57267)))

(assert (=> b!110957 (= lt!57267 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 (getCurrentListMap!496 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16))) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(assert (=> b!110957 (isDefined!111 (getValueByKey!158 (toList!811 (getCurrentListMap!496 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16))) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(declare-fun b!110958 () Bool)

(declare-fun Unit!3450 () Unit!3403)

(assert (=> b!110958 (= e!72146 Unit!3450)))

(declare-fun b!110959 () Bool)

(assert (=> b!110959 (= e!72145 (isDefined!111 (getValueByKey!158 (toList!811 (getCurrentListMap!496 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16))) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355))))))

(assert (= (and d!31339 c!19721) b!110957))

(assert (= (and d!31339 (not c!19721)) b!110958))

(assert (= (and d!31339 (not res!54857)) b!110959))

(assert (=> d!31339 m!124315))

(declare-fun m!126171 () Bool)

(assert (=> d!31339 m!126171))

(assert (=> b!110957 m!124315))

(declare-fun m!126173 () Bool)

(assert (=> b!110957 m!126173))

(assert (=> b!110957 m!124315))

(declare-fun m!126175 () Bool)

(assert (=> b!110957 m!126175))

(assert (=> b!110957 m!126175))

(declare-fun m!126177 () Bool)

(assert (=> b!110957 m!126177))

(assert (=> b!110959 m!124315))

(assert (=> b!110959 m!126175))

(assert (=> b!110959 m!126175))

(assert (=> b!110959 m!126177))

(assert (=> d!31035 d!31339))

(assert (=> d!31035 d!30863))

(declare-fun d!31341 () Bool)

(declare-fun e!72147 () Bool)

(assert (=> d!31341 e!72147))

(declare-fun res!54858 () Bool)

(assert (=> d!31341 (=> (not res!54858) (not e!72147))))

(assert (=> d!31341 (= res!54858 (and (bvsge (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) #b00000000000000000000000000000000) (bvslt (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (size!2338 lt!57041))))))

(declare-fun lt!57269 () Unit!3403)

(assert (=> d!31341 (= lt!57269 (choose!685 lt!57041 lt!57025 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (defaultEntry!2627 newMap!16)))))

(assert (=> d!31341 (validMask!0 (mask!6795 newMap!16))))

(assert (=> d!31341 (= (lemmaValidKeyInArrayIsInListMap!110 lt!57041 lt!57025 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (defaultEntry!2627 newMap!16)) lt!57269)))

(declare-fun b!110960 () Bool)

(assert (=> b!110960 (= e!72147 (contains!838 (getCurrentListMap!496 lt!57041 lt!57025 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) (select (arr!2081 lt!57041) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)))))))

(assert (= (and d!31341 res!54858) b!110960))

(declare-fun m!126179 () Bool)

(assert (=> d!31341 m!126179))

(assert (=> d!31341 m!124669))

(assert (=> b!110960 m!125343))

(declare-fun m!126181 () Bool)

(assert (=> b!110960 m!126181))

(assert (=> b!110960 m!125343))

(assert (=> b!110960 m!126181))

(declare-fun m!126183 () Bool)

(assert (=> b!110960 m!126183))

(assert (=> d!31035 d!31341))

(declare-fun b!110961 () Bool)

(declare-fun c!19723 () Bool)

(assert (=> b!110961 (= c!19723 (and (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!72151 () ListLongMap!1591)

(declare-fun e!72156 () ListLongMap!1591)

(assert (=> b!110961 (= e!72151 e!72156)))

(declare-fun bm!11841 () Bool)

(declare-fun call!11844 () ListLongMap!1591)

(declare-fun call!11847 () ListLongMap!1591)

(assert (=> bm!11841 (= call!11844 call!11847)))

(declare-fun b!110962 () Bool)

(declare-fun e!72154 () Bool)

(declare-fun e!72148 () Bool)

(assert (=> b!110962 (= e!72154 e!72148)))

(declare-fun res!54861 () Bool)

(assert (=> b!110962 (=> (not res!54861) (not e!72148))))

(declare-fun lt!57284 () ListLongMap!1591)

(assert (=> b!110962 (= res!54861 (contains!838 lt!57284 (select (arr!2081 lt!57041) #b00000000000000000000000000000000)))))

(assert (=> b!110962 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2338 lt!57041)))))

(declare-fun b!110963 () Bool)

(declare-fun e!72149 () Bool)

(declare-fun e!72160 () Bool)

(assert (=> b!110963 (= e!72149 e!72160)))

(declare-fun res!54859 () Bool)

(declare-fun call!11850 () Bool)

(assert (=> b!110963 (= res!54859 call!11850)))

(assert (=> b!110963 (=> (not res!54859) (not e!72160))))

(declare-fun b!110964 () Bool)

(declare-fun e!72158 () ListLongMap!1591)

(assert (=> b!110964 (= e!72158 e!72151)))

(declare-fun c!19727 () Bool)

(assert (=> b!110964 (= c!19727 (and (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!110965 () Bool)

(declare-fun e!72159 () Unit!3403)

(declare-fun Unit!3451 () Unit!3403)

(assert (=> b!110965 (= e!72159 Unit!3451)))

(declare-fun b!110966 () Bool)

(declare-fun e!72155 () Bool)

(declare-fun call!11845 () Bool)

(assert (=> b!110966 (= e!72155 (not call!11845))))

(declare-fun bm!11842 () Bool)

(assert (=> bm!11842 (= call!11847 (getCurrentListMapNoExtraKeys!116 lt!57041 lt!57025 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun b!110967 () Bool)

(assert (=> b!110967 (= e!72160 (= (apply!100 lt!57284 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2498 newMap!16)))))

(declare-fun b!110968 () Bool)

(declare-fun call!11849 () ListLongMap!1591)

(assert (=> b!110968 (= e!72158 (+!150 call!11849 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16))))))

(declare-fun b!110969 () Bool)

(declare-fun lt!57285 () Unit!3403)

(assert (=> b!110969 (= e!72159 lt!57285)))

(declare-fun lt!57280 () ListLongMap!1591)

(assert (=> b!110969 (= lt!57280 (getCurrentListMapNoExtraKeys!116 lt!57041 lt!57025 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!57279 () (_ BitVec 64))

(assert (=> b!110969 (= lt!57279 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57282 () (_ BitVec 64))

(assert (=> b!110969 (= lt!57282 (select (arr!2081 lt!57041) #b00000000000000000000000000000000))))

(declare-fun lt!57287 () Unit!3403)

(assert (=> b!110969 (= lt!57287 (addStillContains!76 lt!57280 lt!57279 (zeroValue!2498 newMap!16) lt!57282))))

(assert (=> b!110969 (contains!838 (+!150 lt!57280 (tuple2!2441 lt!57279 (zeroValue!2498 newMap!16))) lt!57282)))

(declare-fun lt!57271 () Unit!3403)

(assert (=> b!110969 (= lt!57271 lt!57287)))

(declare-fun lt!57283 () ListLongMap!1591)

(assert (=> b!110969 (= lt!57283 (getCurrentListMapNoExtraKeys!116 lt!57041 lt!57025 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!57274 () (_ BitVec 64))

(assert (=> b!110969 (= lt!57274 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57281 () (_ BitVec 64))

(assert (=> b!110969 (= lt!57281 (select (arr!2081 lt!57041) #b00000000000000000000000000000000))))

(declare-fun lt!57289 () Unit!3403)

(assert (=> b!110969 (= lt!57289 (addApplyDifferent!76 lt!57283 lt!57274 (minValue!2498 newMap!16) lt!57281))))

(assert (=> b!110969 (= (apply!100 (+!150 lt!57283 (tuple2!2441 lt!57274 (minValue!2498 newMap!16))) lt!57281) (apply!100 lt!57283 lt!57281))))

(declare-fun lt!57273 () Unit!3403)

(assert (=> b!110969 (= lt!57273 lt!57289)))

(declare-fun lt!57277 () ListLongMap!1591)

(assert (=> b!110969 (= lt!57277 (getCurrentListMapNoExtraKeys!116 lt!57041 lt!57025 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!57270 () (_ BitVec 64))

(assert (=> b!110969 (= lt!57270 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57288 () (_ BitVec 64))

(assert (=> b!110969 (= lt!57288 (select (arr!2081 lt!57041) #b00000000000000000000000000000000))))

(declare-fun lt!57286 () Unit!3403)

(assert (=> b!110969 (= lt!57286 (addApplyDifferent!76 lt!57277 lt!57270 (zeroValue!2498 newMap!16) lt!57288))))

(assert (=> b!110969 (= (apply!100 (+!150 lt!57277 (tuple2!2441 lt!57270 (zeroValue!2498 newMap!16))) lt!57288) (apply!100 lt!57277 lt!57288))))

(declare-fun lt!57276 () Unit!3403)

(assert (=> b!110969 (= lt!57276 lt!57286)))

(declare-fun lt!57290 () ListLongMap!1591)

(assert (=> b!110969 (= lt!57290 (getCurrentListMapNoExtraKeys!116 lt!57041 lt!57025 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!57275 () (_ BitVec 64))

(assert (=> b!110969 (= lt!57275 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57278 () (_ BitVec 64))

(assert (=> b!110969 (= lt!57278 (select (arr!2081 lt!57041) #b00000000000000000000000000000000))))

(assert (=> b!110969 (= lt!57285 (addApplyDifferent!76 lt!57290 lt!57275 (minValue!2498 newMap!16) lt!57278))))

(assert (=> b!110969 (= (apply!100 (+!150 lt!57290 (tuple2!2441 lt!57275 (minValue!2498 newMap!16))) lt!57278) (apply!100 lt!57290 lt!57278))))

(declare-fun b!110970 () Bool)

(declare-fun res!54863 () Bool)

(declare-fun e!72157 () Bool)

(assert (=> b!110970 (=> (not res!54863) (not e!72157))))

(assert (=> b!110970 (= res!54863 e!72149)))

(declare-fun c!19726 () Bool)

(assert (=> b!110970 (= c!19726 (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!110971 () Bool)

(declare-fun e!72150 () Bool)

(assert (=> b!110971 (= e!72150 (validKeyInArray!0 (select (arr!2081 lt!57041) #b00000000000000000000000000000000)))))

(declare-fun b!110972 () Bool)

(declare-fun e!72153 () Bool)

(assert (=> b!110972 (= e!72153 (= (apply!100 lt!57284 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2498 newMap!16)))))

(declare-fun bm!11843 () Bool)

(assert (=> bm!11843 (= call!11845 (contains!838 lt!57284 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110973 () Bool)

(assert (=> b!110973 (= e!72155 e!72153)))

(declare-fun res!54860 () Bool)

(assert (=> b!110973 (= res!54860 call!11845)))

(assert (=> b!110973 (=> (not res!54860) (not e!72153))))

(declare-fun c!19722 () Bool)

(declare-fun call!11846 () ListLongMap!1591)

(declare-fun bm!11844 () Bool)

(assert (=> bm!11844 (= call!11849 (+!150 (ite c!19722 call!11847 (ite c!19727 call!11844 call!11846)) (ite (or c!19722 c!19727) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 newMap!16)) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16)))))))

(declare-fun b!110974 () Bool)

(declare-fun call!11848 () ListLongMap!1591)

(assert (=> b!110974 (= e!72151 call!11848)))

(declare-fun d!31343 () Bool)

(assert (=> d!31343 e!72157))

(declare-fun res!54866 () Bool)

(assert (=> d!31343 (=> (not res!54866) (not e!72157))))

(assert (=> d!31343 (= res!54866 (or (bvsge #b00000000000000000000000000000000 (size!2338 lt!57041)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2338 lt!57041)))))))

(declare-fun lt!57291 () ListLongMap!1591)

(assert (=> d!31343 (= lt!57284 lt!57291)))

(declare-fun lt!57272 () Unit!3403)

(assert (=> d!31343 (= lt!57272 e!72159)))

(declare-fun c!19724 () Bool)

(declare-fun e!72152 () Bool)

(assert (=> d!31343 (= c!19724 e!72152)))

(declare-fun res!54862 () Bool)

(assert (=> d!31343 (=> (not res!54862) (not e!72152))))

(assert (=> d!31343 (= res!54862 (bvslt #b00000000000000000000000000000000 (size!2338 lt!57041)))))

(assert (=> d!31343 (= lt!57291 e!72158)))

(assert (=> d!31343 (= c!19722 (and (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!31343 (validMask!0 (mask!6795 newMap!16))))

(assert (=> d!31343 (= (getCurrentListMap!496 lt!57041 lt!57025 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) lt!57284)))

(declare-fun b!110975 () Bool)

(assert (=> b!110975 (= e!72156 call!11848)))

(declare-fun b!110976 () Bool)

(assert (=> b!110976 (= e!72148 (= (apply!100 lt!57284 (select (arr!2081 lt!57041) #b00000000000000000000000000000000)) (get!1347 (select (arr!2082 lt!57025) #b00000000000000000000000000000000) (dynLambda!390 (defaultEntry!2627 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!110976 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2339 lt!57025)))))

(assert (=> b!110976 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2338 lt!57041)))))

(declare-fun b!110977 () Bool)

(assert (=> b!110977 (= e!72156 call!11846)))

(declare-fun bm!11845 () Bool)

(assert (=> bm!11845 (= call!11846 call!11844)))

(declare-fun b!110978 () Bool)

(declare-fun res!54867 () Bool)

(assert (=> b!110978 (=> (not res!54867) (not e!72157))))

(assert (=> b!110978 (= res!54867 e!72154)))

(declare-fun res!54864 () Bool)

(assert (=> b!110978 (=> res!54864 e!72154)))

(assert (=> b!110978 (= res!54864 (not e!72150))))

(declare-fun res!54865 () Bool)

(assert (=> b!110978 (=> (not res!54865) (not e!72150))))

(assert (=> b!110978 (= res!54865 (bvslt #b00000000000000000000000000000000 (size!2338 lt!57041)))))

(declare-fun bm!11846 () Bool)

(assert (=> bm!11846 (= call!11848 call!11849)))

(declare-fun b!110979 () Bool)

(assert (=> b!110979 (= e!72152 (validKeyInArray!0 (select (arr!2081 lt!57041) #b00000000000000000000000000000000)))))

(declare-fun b!110980 () Bool)

(assert (=> b!110980 (= e!72157 e!72155)))

(declare-fun c!19725 () Bool)

(assert (=> b!110980 (= c!19725 (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!110981 () Bool)

(assert (=> b!110981 (= e!72149 (not call!11850))))

(declare-fun bm!11847 () Bool)

(assert (=> bm!11847 (= call!11850 (contains!838 lt!57284 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!31343 c!19722) b!110968))

(assert (= (and d!31343 (not c!19722)) b!110964))

(assert (= (and b!110964 c!19727) b!110974))

(assert (= (and b!110964 (not c!19727)) b!110961))

(assert (= (and b!110961 c!19723) b!110975))

(assert (= (and b!110961 (not c!19723)) b!110977))

(assert (= (or b!110975 b!110977) bm!11845))

(assert (= (or b!110974 bm!11845) bm!11841))

(assert (= (or b!110974 b!110975) bm!11846))

(assert (= (or b!110968 bm!11841) bm!11842))

(assert (= (or b!110968 bm!11846) bm!11844))

(assert (= (and d!31343 res!54862) b!110979))

(assert (= (and d!31343 c!19724) b!110969))

(assert (= (and d!31343 (not c!19724)) b!110965))

(assert (= (and d!31343 res!54866) b!110978))

(assert (= (and b!110978 res!54865) b!110971))

(assert (= (and b!110978 (not res!54864)) b!110962))

(assert (= (and b!110962 res!54861) b!110976))

(assert (= (and b!110978 res!54867) b!110970))

(assert (= (and b!110970 c!19726) b!110963))

(assert (= (and b!110970 (not c!19726)) b!110981))

(assert (= (and b!110963 res!54859) b!110967))

(assert (= (or b!110963 b!110981) bm!11847))

(assert (= (and b!110970 res!54863) b!110980))

(assert (= (and b!110980 c!19725) b!110973))

(assert (= (and b!110980 (not c!19725)) b!110966))

(assert (= (and b!110973 res!54860) b!110972))

(assert (= (or b!110973 b!110966) bm!11843))

(declare-fun b_lambda!4965 () Bool)

(assert (=> (not b_lambda!4965) (not b!110976)))

(assert (=> b!110976 t!5774))

(declare-fun b_and!6827 () Bool)

(assert (= b_and!6823 (and (=> t!5774 result!3537) b_and!6827)))

(assert (=> b!110976 t!5776))

(declare-fun b_and!6829 () Bool)

(assert (= b_and!6825 (and (=> t!5776 result!3539) b_and!6829)))

(declare-fun m!126185 () Bool)

(assert (=> bm!11843 m!126185))

(declare-fun m!126187 () Bool)

(assert (=> b!110972 m!126187))

(declare-fun m!126189 () Bool)

(assert (=> b!110971 m!126189))

(assert (=> b!110971 m!126189))

(declare-fun m!126191 () Bool)

(assert (=> b!110971 m!126191))

(assert (=> b!110962 m!126189))

(assert (=> b!110962 m!126189))

(declare-fun m!126193 () Bool)

(assert (=> b!110962 m!126193))

(declare-fun m!126195 () Bool)

(assert (=> b!110969 m!126195))

(declare-fun m!126197 () Bool)

(assert (=> b!110969 m!126197))

(declare-fun m!126199 () Bool)

(assert (=> b!110969 m!126199))

(assert (=> b!110969 m!126195))

(declare-fun m!126201 () Bool)

(assert (=> b!110969 m!126201))

(declare-fun m!126203 () Bool)

(assert (=> b!110969 m!126203))

(assert (=> b!110969 m!126203))

(declare-fun m!126205 () Bool)

(assert (=> b!110969 m!126205))

(declare-fun m!126207 () Bool)

(assert (=> b!110969 m!126207))

(assert (=> b!110969 m!126189))

(declare-fun m!126209 () Bool)

(assert (=> b!110969 m!126209))

(declare-fun m!126211 () Bool)

(assert (=> b!110969 m!126211))

(declare-fun m!126213 () Bool)

(assert (=> b!110969 m!126213))

(declare-fun m!126215 () Bool)

(assert (=> b!110969 m!126215))

(assert (=> b!110969 m!126211))

(declare-fun m!126217 () Bool)

(assert (=> b!110969 m!126217))

(declare-fun m!126219 () Bool)

(assert (=> b!110969 m!126219))

(assert (=> b!110969 m!126201))

(declare-fun m!126221 () Bool)

(assert (=> b!110969 m!126221))

(declare-fun m!126223 () Bool)

(assert (=> b!110969 m!126223))

(declare-fun m!126225 () Bool)

(assert (=> b!110969 m!126225))

(assert (=> d!31343 m!124669))

(declare-fun m!126227 () Bool)

(assert (=> b!110976 m!126227))

(assert (=> b!110976 m!124733))

(assert (=> b!110976 m!126227))

(assert (=> b!110976 m!124733))

(declare-fun m!126229 () Bool)

(assert (=> b!110976 m!126229))

(assert (=> b!110976 m!126189))

(declare-fun m!126231 () Bool)

(assert (=> b!110976 m!126231))

(assert (=> b!110976 m!126189))

(assert (=> bm!11842 m!126223))

(assert (=> b!110979 m!126189))

(assert (=> b!110979 m!126189))

(assert (=> b!110979 m!126191))

(declare-fun m!126233 () Bool)

(assert (=> bm!11844 m!126233))

(declare-fun m!126235 () Bool)

(assert (=> b!110968 m!126235))

(declare-fun m!126237 () Bool)

(assert (=> bm!11847 m!126237))

(declare-fun m!126239 () Bool)

(assert (=> b!110967 m!126239))

(assert (=> d!31035 d!31343))

(declare-fun d!31345 () Bool)

(declare-fun res!54868 () Bool)

(declare-fun e!72161 () Bool)

(assert (=> d!31345 (=> res!54868 e!72161)))

(assert (=> d!31345 (= res!54868 (= (select (arr!2081 lt!57012) #b00000000000000000000000000000000) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(assert (=> d!31345 (= (arrayContainsKey!0 lt!57012 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) #b00000000000000000000000000000000) e!72161)))

(declare-fun b!110982 () Bool)

(declare-fun e!72162 () Bool)

(assert (=> b!110982 (= e!72161 e!72162)))

(declare-fun res!54869 () Bool)

(assert (=> b!110982 (=> (not res!54869) (not e!72162))))

(assert (=> b!110982 (= res!54869 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2338 lt!57012)))))

(declare-fun b!110983 () Bool)

(assert (=> b!110983 (= e!72162 (arrayContainsKey!0 lt!57012 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!31345 (not res!54868)) b!110982))

(assert (= (and b!110982 res!54869) b!110983))

(declare-fun m!126241 () Bool)

(assert (=> d!31345 m!126241))

(assert (=> b!110983 m!124315))

(declare-fun m!126243 () Bool)

(assert (=> b!110983 m!126243))

(assert (=> d!31035 d!31345))

(declare-fun d!31347 () Bool)

(assert (=> d!31347 (= (arrayCountValidKeys!0 lt!57028 (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (bvadd (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!57294 () Unit!3403)

(declare-fun choose!2 (array!4389 (_ BitVec 32)) Unit!3403)

(assert (=> d!31347 (= lt!57294 (choose!2 lt!57028 (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591))))))

(declare-fun e!72165 () Bool)

(assert (=> d!31347 e!72165))

(declare-fun res!54874 () Bool)

(assert (=> d!31347 (=> (not res!54874) (not e!72165))))

(assert (=> d!31347 (= res!54874 (and (bvsge (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) #b00000000000000000000000000000000) (bvslt (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (size!2338 lt!57028))))))

(assert (=> d!31347 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!57028 (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591))) lt!57294)))

(declare-fun b!110988 () Bool)

(declare-fun res!54875 () Bool)

(assert (=> b!110988 (=> (not res!54875) (not e!72165))))

(assert (=> b!110988 (= res!54875 (validKeyInArray!0 (select (arr!2081 lt!57028) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)))))))

(declare-fun b!110989 () Bool)

(assert (=> b!110989 (= e!72165 (bvslt (size!2338 lt!57028) #b01111111111111111111111111111111))))

(assert (= (and d!31347 res!54874) b!110988))

(assert (= (and b!110988 res!54875) b!110989))

(assert (=> d!31347 m!125365))

(declare-fun m!126245 () Bool)

(assert (=> d!31347 m!126245))

(declare-fun m!126247 () Bool)

(assert (=> b!110988 m!126247))

(assert (=> b!110988 m!126247))

(declare-fun m!126249 () Bool)

(assert (=> b!110988 m!126249))

(assert (=> d!31035 d!31347))

(declare-fun d!31349 () Bool)

(declare-fun res!54877 () Bool)

(declare-fun e!72166 () Bool)

(assert (=> d!31349 (=> res!54877 e!72166)))

(assert (=> d!31349 (= res!54877 (bvsge #b00000000000000000000000000000000 (size!2338 (array!4390 (store (arr!2081 (_keys!4341 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2338 (_keys!4341 newMap!16))))))))

(assert (=> d!31349 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4390 (store (arr!2081 (_keys!4341 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2338 (_keys!4341 newMap!16))) (mask!6795 newMap!16)) e!72166)))

(declare-fun b!110990 () Bool)

(declare-fun e!72167 () Bool)

(declare-fun call!11851 () Bool)

(assert (=> b!110990 (= e!72167 call!11851)))

(declare-fun b!110991 () Bool)

(declare-fun e!72168 () Bool)

(assert (=> b!110991 (= e!72168 call!11851)))

(declare-fun b!110992 () Bool)

(assert (=> b!110992 (= e!72166 e!72167)))

(declare-fun c!19728 () Bool)

(assert (=> b!110992 (= c!19728 (validKeyInArray!0 (select (arr!2081 (array!4390 (store (arr!2081 (_keys!4341 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2338 (_keys!4341 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun bm!11848 () Bool)

(assert (=> bm!11848 (= call!11851 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!4390 (store (arr!2081 (_keys!4341 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2338 (_keys!4341 newMap!16))) (mask!6795 newMap!16)))))

(declare-fun b!110993 () Bool)

(assert (=> b!110993 (= e!72167 e!72168)))

(declare-fun lt!57296 () (_ BitVec 64))

(assert (=> b!110993 (= lt!57296 (select (arr!2081 (array!4390 (store (arr!2081 (_keys!4341 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2338 (_keys!4341 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!57297 () Unit!3403)

(assert (=> b!110993 (= lt!57297 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4390 (store (arr!2081 (_keys!4341 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2338 (_keys!4341 newMap!16))) lt!57296 #b00000000000000000000000000000000))))

(assert (=> b!110993 (arrayContainsKey!0 (array!4390 (store (arr!2081 (_keys!4341 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2338 (_keys!4341 newMap!16))) lt!57296 #b00000000000000000000000000000000)))

(declare-fun lt!57295 () Unit!3403)

(assert (=> b!110993 (= lt!57295 lt!57297)))

(declare-fun res!54876 () Bool)

(assert (=> b!110993 (= res!54876 (= (seekEntryOrOpen!0 (select (arr!2081 (array!4390 (store (arr!2081 (_keys!4341 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2338 (_keys!4341 newMap!16)))) #b00000000000000000000000000000000) (array!4390 (store (arr!2081 (_keys!4341 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2338 (_keys!4341 newMap!16))) (mask!6795 newMap!16)) (Found!261 #b00000000000000000000000000000000)))))

(assert (=> b!110993 (=> (not res!54876) (not e!72168))))

(assert (= (and d!31349 (not res!54877)) b!110992))

(assert (= (and b!110992 c!19728) b!110993))

(assert (= (and b!110992 (not c!19728)) b!110990))

(assert (= (and b!110993 res!54876) b!110991))

(assert (= (or b!110991 b!110990) bm!11848))

(declare-fun m!126251 () Bool)

(assert (=> b!110992 m!126251))

(assert (=> b!110992 m!126251))

(declare-fun m!126253 () Bool)

(assert (=> b!110992 m!126253))

(declare-fun m!126255 () Bool)

(assert (=> bm!11848 m!126255))

(assert (=> b!110993 m!126251))

(declare-fun m!126257 () Bool)

(assert (=> b!110993 m!126257))

(declare-fun m!126259 () Bool)

(assert (=> b!110993 m!126259))

(assert (=> b!110993 m!126251))

(declare-fun m!126261 () Bool)

(assert (=> b!110993 m!126261))

(assert (=> d!31035 d!31349))

(declare-fun d!31351 () Bool)

(declare-fun e!72171 () Bool)

(assert (=> d!31351 e!72171))

(declare-fun res!54880 () Bool)

(assert (=> d!31351 (=> (not res!54880) (not e!72171))))

(assert (=> d!31351 (= res!54880 (and (bvsge (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) #b00000000000000000000000000000000) (bvslt (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (size!2338 (_keys!4341 newMap!16)))))))

(declare-fun lt!57300 () Unit!3403)

(declare-fun choose!102 ((_ BitVec 64) array!4389 (_ BitVec 32) (_ BitVec 32)) Unit!3403)

(assert (=> d!31351 (= lt!57300 (choose!102 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (_keys!4341 newMap!16) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (mask!6795 newMap!16)))))

(assert (=> d!31351 (validMask!0 (mask!6795 newMap!16))))

(assert (=> d!31351 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (_keys!4341 newMap!16) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (mask!6795 newMap!16)) lt!57300)))

(declare-fun b!110996 () Bool)

(assert (=> b!110996 (= e!72171 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4390 (store (arr!2081 (_keys!4341 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2338 (_keys!4341 newMap!16))) (mask!6795 newMap!16)))))

(assert (= (and d!31351 res!54880) b!110996))

(assert (=> d!31351 m!124315))

(declare-fun m!126263 () Bool)

(assert (=> d!31351 m!126263))

(assert (=> d!31351 m!124669))

(assert (=> b!110996 m!125363))

(assert (=> b!110996 m!125373))

(assert (=> d!31035 d!31351))

(declare-fun d!31353 () Bool)

(declare-fun e!72174 () Bool)

(assert (=> d!31353 e!72174))

(declare-fun res!54883 () Bool)

(assert (=> d!31353 (=> (not res!54883) (not e!72174))))

(assert (=> d!31353 (= res!54883 (and (bvsge (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) #b00000000000000000000000000000000) (bvslt (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (size!2338 (_keys!4341 newMap!16)))))))

(declare-fun lt!57303 () Unit!3403)

(declare-fun choose!41 (array!4389 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1631) Unit!3403)

(assert (=> d!31353 (= lt!57303 (choose!41 (_keys!4341 newMap!16) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) lt!57021 lt!57020))))

(assert (=> d!31353 (bvslt (size!2338 (_keys!4341 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!31353 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4341 newMap!16) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) lt!57021 lt!57020) lt!57303)))

(declare-fun b!110999 () Bool)

(assert (=> b!110999 (= e!72174 (arrayNoDuplicates!0 (array!4390 (store (arr!2081 (_keys!4341 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2338 (_keys!4341 newMap!16))) lt!57021 lt!57020))))

(assert (= (and d!31353 res!54883) b!110999))

(assert (=> d!31353 m!124315))

(declare-fun m!126265 () Bool)

(assert (=> d!31353 m!126265))

(assert (=> b!110999 m!125363))

(assert (=> b!110999 m!125367))

(assert (=> d!31035 d!31353))

(declare-fun d!31355 () Bool)

(declare-fun e!72175 () Bool)

(assert (=> d!31355 e!72175))

(declare-fun res!54884 () Bool)

(assert (=> d!31355 (=> (not res!54884) (not e!72175))))

(declare-fun lt!57306 () ListLongMap!1591)

(assert (=> d!31355 (= res!54884 (contains!838 lt!57306 (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))

(declare-fun lt!57305 () List!1630)

(assert (=> d!31355 (= lt!57306 (ListLongMap!1592 lt!57305))))

(declare-fun lt!57307 () Unit!3403)

(declare-fun lt!57304 () Unit!3403)

(assert (=> d!31355 (= lt!57307 lt!57304)))

(assert (=> d!31355 (= (getValueByKey!158 lt!57305 (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))) (Some!163 (_2!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))

(assert (=> d!31355 (= lt!57304 (lemmaContainsTupThenGetReturnValue!74 lt!57305 (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)) (_2!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))

(assert (=> d!31355 (= lt!57305 (insertStrictlySorted!77 (toList!811 (getCurrentListMap!496 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16))) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)) (_2!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))

(assert (=> d!31355 (= (+!150 (getCurrentListMap!496 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)) lt!57306)))

(declare-fun b!111000 () Bool)

(declare-fun res!54885 () Bool)

(assert (=> b!111000 (=> (not res!54885) (not e!72175))))

(assert (=> b!111000 (= res!54885 (= (getValueByKey!158 (toList!811 lt!57306) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))) (Some!163 (_2!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))))))

(declare-fun b!111001 () Bool)

(assert (=> b!111001 (= e!72175 (contains!839 (toList!811 lt!57306) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))))

(assert (= (and d!31355 res!54884) b!111000))

(assert (= (and b!111000 res!54885) b!111001))

(declare-fun m!126267 () Bool)

(assert (=> d!31355 m!126267))

(declare-fun m!126269 () Bool)

(assert (=> d!31355 m!126269))

(declare-fun m!126271 () Bool)

(assert (=> d!31355 m!126271))

(declare-fun m!126273 () Bool)

(assert (=> d!31355 m!126273))

(declare-fun m!126275 () Bool)

(assert (=> b!111000 m!126275))

(declare-fun m!126277 () Bool)

(assert (=> b!111001 m!126277))

(assert (=> d!31035 d!31355))

(declare-fun b!111002 () Bool)

(declare-fun e!72179 () Bool)

(declare-fun e!72178 () Bool)

(assert (=> b!111002 (= e!72179 e!72178)))

(declare-fun res!54886 () Bool)

(assert (=> b!111002 (=> (not res!54886) (not e!72178))))

(declare-fun e!72177 () Bool)

(assert (=> b!111002 (= res!54886 (not e!72177))))

(declare-fun res!54887 () Bool)

(assert (=> b!111002 (=> (not res!54887) (not e!72177))))

(assert (=> b!111002 (= res!54887 (validKeyInArray!0 (select (arr!2081 (array!4390 (store (arr!2081 (_keys!4341 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2338 (_keys!4341 newMap!16)))) lt!57021)))))

(declare-fun b!111003 () Bool)

(declare-fun e!72176 () Bool)

(declare-fun call!11852 () Bool)

(assert (=> b!111003 (= e!72176 call!11852)))

(declare-fun b!111004 () Bool)

(assert (=> b!111004 (= e!72178 e!72176)))

(declare-fun c!19729 () Bool)

(assert (=> b!111004 (= c!19729 (validKeyInArray!0 (select (arr!2081 (array!4390 (store (arr!2081 (_keys!4341 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2338 (_keys!4341 newMap!16)))) lt!57021)))))

(declare-fun bm!11849 () Bool)

(assert (=> bm!11849 (= call!11852 (arrayNoDuplicates!0 (array!4390 (store (arr!2081 (_keys!4341 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2338 (_keys!4341 newMap!16))) (bvadd lt!57021 #b00000000000000000000000000000001) (ite c!19729 (Cons!1627 (select (arr!2081 (array!4390 (store (arr!2081 (_keys!4341 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2338 (_keys!4341 newMap!16)))) lt!57021) lt!57020) lt!57020)))))

(declare-fun b!111005 () Bool)

(assert (=> b!111005 (= e!72176 call!11852)))

(declare-fun b!111006 () Bool)

(assert (=> b!111006 (= e!72177 (contains!840 lt!57020 (select (arr!2081 (array!4390 (store (arr!2081 (_keys!4341 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2338 (_keys!4341 newMap!16)))) lt!57021)))))

(declare-fun d!31357 () Bool)

(declare-fun res!54888 () Bool)

(assert (=> d!31357 (=> res!54888 e!72179)))

(assert (=> d!31357 (= res!54888 (bvsge lt!57021 (size!2338 (array!4390 (store (arr!2081 (_keys!4341 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2338 (_keys!4341 newMap!16))))))))

(assert (=> d!31357 (= (arrayNoDuplicates!0 (array!4390 (store (arr!2081 (_keys!4341 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2338 (_keys!4341 newMap!16))) lt!57021 lt!57020) e!72179)))

(assert (= (and d!31357 (not res!54888)) b!111002))

(assert (= (and b!111002 res!54887) b!111006))

(assert (= (and b!111002 res!54886) b!111004))

(assert (= (and b!111004 c!19729) b!111003))

(assert (= (and b!111004 (not c!19729)) b!111005))

(assert (= (or b!111003 b!111005) bm!11849))

(declare-fun m!126279 () Bool)

(assert (=> b!111002 m!126279))

(assert (=> b!111002 m!126279))

(declare-fun m!126281 () Bool)

(assert (=> b!111002 m!126281))

(assert (=> b!111004 m!126279))

(assert (=> b!111004 m!126279))

(assert (=> b!111004 m!126281))

(assert (=> bm!11849 m!126279))

(declare-fun m!126283 () Bool)

(assert (=> bm!11849 m!126283))

(assert (=> b!111006 m!126279))

(assert (=> b!111006 m!126279))

(declare-fun m!126285 () Bool)

(assert (=> b!111006 m!126285))

(assert (=> d!31035 d!31357))

(declare-fun b!111007 () Bool)

(declare-fun e!72180 () (_ BitVec 32))

(declare-fun call!11853 () (_ BitVec 32))

(assert (=> b!111007 (= e!72180 (bvadd #b00000000000000000000000000000001 call!11853))))

(declare-fun lt!57308 () (_ BitVec 32))

(declare-fun d!31359 () Bool)

(assert (=> d!31359 (and (bvsge lt!57308 #b00000000000000000000000000000000) (bvsle lt!57308 (bvsub (size!2338 lt!57028) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)))))))

(declare-fun e!72181 () (_ BitVec 32))

(assert (=> d!31359 (= lt!57308 e!72181)))

(declare-fun c!19730 () Bool)

(assert (=> d!31359 (= c!19730 (bvsge (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (bvadd (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) #b00000000000000000000000000000001)))))

(assert (=> d!31359 (and (bvsle (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (bvadd (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) #b00000000000000000000000000000001)) (bvsge (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) #b00000000000000000000000000000001) (size!2338 lt!57028)))))

(assert (=> d!31359 (= (arrayCountValidKeys!0 lt!57028 (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (bvadd (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) #b00000000000000000000000000000001)) lt!57308)))

(declare-fun b!111008 () Bool)

(assert (=> b!111008 (= e!72180 call!11853)))

(declare-fun bm!11850 () Bool)

(assert (=> bm!11850 (= call!11853 (arrayCountValidKeys!0 lt!57028 (bvadd (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) #b00000000000000000000000000000001) (bvadd (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) #b00000000000000000000000000000001)))))

(declare-fun b!111009 () Bool)

(assert (=> b!111009 (= e!72181 e!72180)))

(declare-fun c!19731 () Bool)

(assert (=> b!111009 (= c!19731 (validKeyInArray!0 (select (arr!2081 lt!57028) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)))))))

(declare-fun b!111010 () Bool)

(assert (=> b!111010 (= e!72181 #b00000000000000000000000000000000)))

(assert (= (and d!31359 c!19730) b!111010))

(assert (= (and d!31359 (not c!19730)) b!111009))

(assert (= (and b!111009 c!19731) b!111007))

(assert (= (and b!111009 (not c!19731)) b!111008))

(assert (= (or b!111007 b!111008) bm!11850))

(declare-fun m!126287 () Bool)

(assert (=> bm!11850 m!126287))

(assert (=> b!111009 m!126247))

(assert (=> b!111009 m!126247))

(assert (=> b!111009 m!126249))

(assert (=> d!31035 d!31359))

(assert (=> d!31035 d!30931))

(assert (=> d!31035 d!30903))

(declare-fun d!31361 () Bool)

(declare-fun e!72182 () Bool)

(assert (=> d!31361 e!72182))

(declare-fun res!54889 () Bool)

(assert (=> d!31361 (=> res!54889 e!72182)))

(declare-fun lt!57309 () Bool)

(assert (=> d!31361 (= res!54889 (not lt!57309))))

(declare-fun lt!57310 () Bool)

(assert (=> d!31361 (= lt!57309 lt!57310)))

(declare-fun lt!57312 () Unit!3403)

(declare-fun e!72183 () Unit!3403)

(assert (=> d!31361 (= lt!57312 e!72183)))

(declare-fun c!19732 () Bool)

(assert (=> d!31361 (= c!19732 lt!57310)))

(assert (=> d!31361 (= lt!57310 (containsKey!162 (toList!811 (getCurrentListMap!496 lt!57041 lt!57025 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16))) (select (store (arr!2081 (_keys!4341 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)))))))

(assert (=> d!31361 (= (contains!838 (getCurrentListMap!496 lt!57041 lt!57025 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) (select (store (arr!2081 (_keys!4341 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)))) lt!57309)))

(declare-fun b!111011 () Bool)

(declare-fun lt!57311 () Unit!3403)

(assert (=> b!111011 (= e!72183 lt!57311)))

(assert (=> b!111011 (= lt!57311 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 (getCurrentListMap!496 lt!57041 lt!57025 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16))) (select (store (arr!2081 (_keys!4341 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)))))))

(assert (=> b!111011 (isDefined!111 (getValueByKey!158 (toList!811 (getCurrentListMap!496 lt!57041 lt!57025 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16))) (select (store (arr!2081 (_keys!4341 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)))))))

(declare-fun b!111012 () Bool)

(declare-fun Unit!3452 () Unit!3403)

(assert (=> b!111012 (= e!72183 Unit!3452)))

(declare-fun b!111013 () Bool)

(assert (=> b!111013 (= e!72182 (isDefined!111 (getValueByKey!158 (toList!811 (getCurrentListMap!496 lt!57041 lt!57025 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16))) (select (store (arr!2081 (_keys!4341 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591))))))))

(assert (= (and d!31361 c!19732) b!111011))

(assert (= (and d!31361 (not c!19732)) b!111012))

(assert (= (and d!31361 (not res!54889)) b!111013))

(assert (=> d!31361 m!125357))

(declare-fun m!126289 () Bool)

(assert (=> d!31361 m!126289))

(assert (=> b!111011 m!125357))

(declare-fun m!126291 () Bool)

(assert (=> b!111011 m!126291))

(assert (=> b!111011 m!125357))

(declare-fun m!126293 () Bool)

(assert (=> b!111011 m!126293))

(assert (=> b!111011 m!126293))

(declare-fun m!126295 () Bool)

(assert (=> b!111011 m!126295))

(assert (=> b!111013 m!125357))

(assert (=> b!111013 m!126293))

(assert (=> b!111013 m!126293))

(assert (=> b!111013 m!126295))

(assert (=> d!31035 d!31361))

(declare-fun b!111014 () Bool)

(declare-fun c!19734 () Bool)

(assert (=> b!111014 (= c!19734 (and (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!72187 () ListLongMap!1591)

(declare-fun e!72192 () ListLongMap!1591)

(assert (=> b!111014 (= e!72187 e!72192)))

(declare-fun bm!11851 () Bool)

(declare-fun call!11854 () ListLongMap!1591)

(declare-fun call!11857 () ListLongMap!1591)

(assert (=> bm!11851 (= call!11854 call!11857)))

(declare-fun b!111015 () Bool)

(declare-fun e!72190 () Bool)

(declare-fun e!72184 () Bool)

(assert (=> b!111015 (= e!72190 e!72184)))

(declare-fun res!54892 () Bool)

(assert (=> b!111015 (=> (not res!54892) (not e!72184))))

(declare-fun lt!57327 () ListLongMap!1591)

(assert (=> b!111015 (= res!54892 (contains!838 lt!57327 (select (arr!2081 (array!4390 (store (arr!2081 (_keys!4341 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2338 (_keys!4341 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!111015 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2338 (array!4390 (store (arr!2081 (_keys!4341 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2338 (_keys!4341 newMap!16))))))))

(declare-fun b!111016 () Bool)

(declare-fun e!72185 () Bool)

(declare-fun e!72196 () Bool)

(assert (=> b!111016 (= e!72185 e!72196)))

(declare-fun res!54890 () Bool)

(declare-fun call!11860 () Bool)

(assert (=> b!111016 (= res!54890 call!11860)))

(assert (=> b!111016 (=> (not res!54890) (not e!72196))))

(declare-fun b!111017 () Bool)

(declare-fun e!72194 () ListLongMap!1591)

(assert (=> b!111017 (= e!72194 e!72187)))

(declare-fun c!19738 () Bool)

(assert (=> b!111017 (= c!19738 (and (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!111018 () Bool)

(declare-fun e!72195 () Unit!3403)

(declare-fun Unit!3453 () Unit!3403)

(assert (=> b!111018 (= e!72195 Unit!3453)))

(declare-fun b!111019 () Bool)

(declare-fun e!72191 () Bool)

(declare-fun call!11855 () Bool)

(assert (=> b!111019 (= e!72191 (not call!11855))))

(declare-fun bm!11852 () Bool)

(assert (=> bm!11852 (= call!11857 (getCurrentListMapNoExtraKeys!116 (array!4390 (store (arr!2081 (_keys!4341 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2338 (_keys!4341 newMap!16))) (array!4392 (store (arr!2082 (_values!2610 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (ValueCellFull!1005 lt!56458)) (size!2339 (_values!2610 newMap!16))) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun b!111020 () Bool)

(assert (=> b!111020 (= e!72196 (= (apply!100 lt!57327 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2498 newMap!16)))))

(declare-fun b!111021 () Bool)

(declare-fun call!11859 () ListLongMap!1591)

(assert (=> b!111021 (= e!72194 (+!150 call!11859 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16))))))

(declare-fun b!111022 () Bool)

(declare-fun lt!57328 () Unit!3403)

(assert (=> b!111022 (= e!72195 lt!57328)))

(declare-fun lt!57323 () ListLongMap!1591)

(assert (=> b!111022 (= lt!57323 (getCurrentListMapNoExtraKeys!116 (array!4390 (store (arr!2081 (_keys!4341 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2338 (_keys!4341 newMap!16))) (array!4392 (store (arr!2082 (_values!2610 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (ValueCellFull!1005 lt!56458)) (size!2339 (_values!2610 newMap!16))) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!57322 () (_ BitVec 64))

(assert (=> b!111022 (= lt!57322 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57325 () (_ BitVec 64))

(assert (=> b!111022 (= lt!57325 (select (arr!2081 (array!4390 (store (arr!2081 (_keys!4341 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2338 (_keys!4341 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!57330 () Unit!3403)

(assert (=> b!111022 (= lt!57330 (addStillContains!76 lt!57323 lt!57322 (zeroValue!2498 newMap!16) lt!57325))))

(assert (=> b!111022 (contains!838 (+!150 lt!57323 (tuple2!2441 lt!57322 (zeroValue!2498 newMap!16))) lt!57325)))

(declare-fun lt!57314 () Unit!3403)

(assert (=> b!111022 (= lt!57314 lt!57330)))

(declare-fun lt!57326 () ListLongMap!1591)

(assert (=> b!111022 (= lt!57326 (getCurrentListMapNoExtraKeys!116 (array!4390 (store (arr!2081 (_keys!4341 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2338 (_keys!4341 newMap!16))) (array!4392 (store (arr!2082 (_values!2610 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (ValueCellFull!1005 lt!56458)) (size!2339 (_values!2610 newMap!16))) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!57317 () (_ BitVec 64))

(assert (=> b!111022 (= lt!57317 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57324 () (_ BitVec 64))

(assert (=> b!111022 (= lt!57324 (select (arr!2081 (array!4390 (store (arr!2081 (_keys!4341 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2338 (_keys!4341 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!57332 () Unit!3403)

(assert (=> b!111022 (= lt!57332 (addApplyDifferent!76 lt!57326 lt!57317 (minValue!2498 newMap!16) lt!57324))))

(assert (=> b!111022 (= (apply!100 (+!150 lt!57326 (tuple2!2441 lt!57317 (minValue!2498 newMap!16))) lt!57324) (apply!100 lt!57326 lt!57324))))

(declare-fun lt!57316 () Unit!3403)

(assert (=> b!111022 (= lt!57316 lt!57332)))

(declare-fun lt!57320 () ListLongMap!1591)

(assert (=> b!111022 (= lt!57320 (getCurrentListMapNoExtraKeys!116 (array!4390 (store (arr!2081 (_keys!4341 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2338 (_keys!4341 newMap!16))) (array!4392 (store (arr!2082 (_values!2610 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (ValueCellFull!1005 lt!56458)) (size!2339 (_values!2610 newMap!16))) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!57313 () (_ BitVec 64))

(assert (=> b!111022 (= lt!57313 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57331 () (_ BitVec 64))

(assert (=> b!111022 (= lt!57331 (select (arr!2081 (array!4390 (store (arr!2081 (_keys!4341 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2338 (_keys!4341 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!57329 () Unit!3403)

(assert (=> b!111022 (= lt!57329 (addApplyDifferent!76 lt!57320 lt!57313 (zeroValue!2498 newMap!16) lt!57331))))

(assert (=> b!111022 (= (apply!100 (+!150 lt!57320 (tuple2!2441 lt!57313 (zeroValue!2498 newMap!16))) lt!57331) (apply!100 lt!57320 lt!57331))))

(declare-fun lt!57319 () Unit!3403)

(assert (=> b!111022 (= lt!57319 lt!57329)))

(declare-fun lt!57333 () ListLongMap!1591)

(assert (=> b!111022 (= lt!57333 (getCurrentListMapNoExtraKeys!116 (array!4390 (store (arr!2081 (_keys!4341 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2338 (_keys!4341 newMap!16))) (array!4392 (store (arr!2082 (_values!2610 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (ValueCellFull!1005 lt!56458)) (size!2339 (_values!2610 newMap!16))) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!57318 () (_ BitVec 64))

(assert (=> b!111022 (= lt!57318 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57321 () (_ BitVec 64))

(assert (=> b!111022 (= lt!57321 (select (arr!2081 (array!4390 (store (arr!2081 (_keys!4341 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2338 (_keys!4341 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!111022 (= lt!57328 (addApplyDifferent!76 lt!57333 lt!57318 (minValue!2498 newMap!16) lt!57321))))

(assert (=> b!111022 (= (apply!100 (+!150 lt!57333 (tuple2!2441 lt!57318 (minValue!2498 newMap!16))) lt!57321) (apply!100 lt!57333 lt!57321))))

(declare-fun b!111023 () Bool)

(declare-fun res!54894 () Bool)

(declare-fun e!72193 () Bool)

(assert (=> b!111023 (=> (not res!54894) (not e!72193))))

(assert (=> b!111023 (= res!54894 e!72185)))

(declare-fun c!19737 () Bool)

(assert (=> b!111023 (= c!19737 (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!111024 () Bool)

(declare-fun e!72186 () Bool)

(assert (=> b!111024 (= e!72186 (validKeyInArray!0 (select (arr!2081 (array!4390 (store (arr!2081 (_keys!4341 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2338 (_keys!4341 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!111025 () Bool)

(declare-fun e!72189 () Bool)

(assert (=> b!111025 (= e!72189 (= (apply!100 lt!57327 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2498 newMap!16)))))

(declare-fun bm!11853 () Bool)

(assert (=> bm!11853 (= call!11855 (contains!838 lt!57327 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!111026 () Bool)

(assert (=> b!111026 (= e!72191 e!72189)))

(declare-fun res!54891 () Bool)

(assert (=> b!111026 (= res!54891 call!11855)))

(assert (=> b!111026 (=> (not res!54891) (not e!72189))))

(declare-fun call!11856 () ListLongMap!1591)

(declare-fun bm!11854 () Bool)

(declare-fun c!19733 () Bool)

(assert (=> bm!11854 (= call!11859 (+!150 (ite c!19733 call!11857 (ite c!19738 call!11854 call!11856)) (ite (or c!19733 c!19738) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 newMap!16)) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16)))))))

(declare-fun b!111027 () Bool)

(declare-fun call!11858 () ListLongMap!1591)

(assert (=> b!111027 (= e!72187 call!11858)))

(declare-fun d!31363 () Bool)

(assert (=> d!31363 e!72193))

(declare-fun res!54897 () Bool)

(assert (=> d!31363 (=> (not res!54897) (not e!72193))))

(assert (=> d!31363 (= res!54897 (or (bvsge #b00000000000000000000000000000000 (size!2338 (array!4390 (store (arr!2081 (_keys!4341 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2338 (_keys!4341 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2338 (array!4390 (store (arr!2081 (_keys!4341 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2338 (_keys!4341 newMap!16))))))))))

(declare-fun lt!57334 () ListLongMap!1591)

(assert (=> d!31363 (= lt!57327 lt!57334)))

(declare-fun lt!57315 () Unit!3403)

(assert (=> d!31363 (= lt!57315 e!72195)))

(declare-fun c!19735 () Bool)

(declare-fun e!72188 () Bool)

(assert (=> d!31363 (= c!19735 e!72188)))

(declare-fun res!54893 () Bool)

(assert (=> d!31363 (=> (not res!54893) (not e!72188))))

(assert (=> d!31363 (= res!54893 (bvslt #b00000000000000000000000000000000 (size!2338 (array!4390 (store (arr!2081 (_keys!4341 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2338 (_keys!4341 newMap!16))))))))

(assert (=> d!31363 (= lt!57334 e!72194)))

(assert (=> d!31363 (= c!19733 (and (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!31363 (validMask!0 (mask!6795 newMap!16))))

(assert (=> d!31363 (= (getCurrentListMap!496 (array!4390 (store (arr!2081 (_keys!4341 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2338 (_keys!4341 newMap!16))) (array!4392 (store (arr!2082 (_values!2610 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (ValueCellFull!1005 lt!56458)) (size!2339 (_values!2610 newMap!16))) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) lt!57327)))

(declare-fun b!111028 () Bool)

(assert (=> b!111028 (= e!72192 call!11858)))

(declare-fun b!111029 () Bool)

(assert (=> b!111029 (= e!72184 (= (apply!100 lt!57327 (select (arr!2081 (array!4390 (store (arr!2081 (_keys!4341 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2338 (_keys!4341 newMap!16)))) #b00000000000000000000000000000000)) (get!1347 (select (arr!2082 (array!4392 (store (arr!2082 (_values!2610 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (ValueCellFull!1005 lt!56458)) (size!2339 (_values!2610 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!390 (defaultEntry!2627 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!111029 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2339 (array!4392 (store (arr!2082 (_values!2610 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (ValueCellFull!1005 lt!56458)) (size!2339 (_values!2610 newMap!16))))))))

(assert (=> b!111029 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2338 (array!4390 (store (arr!2081 (_keys!4341 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2338 (_keys!4341 newMap!16))))))))

(declare-fun b!111030 () Bool)

(assert (=> b!111030 (= e!72192 call!11856)))

(declare-fun bm!11855 () Bool)

(assert (=> bm!11855 (= call!11856 call!11854)))

(declare-fun b!111031 () Bool)

(declare-fun res!54898 () Bool)

(assert (=> b!111031 (=> (not res!54898) (not e!72193))))

(assert (=> b!111031 (= res!54898 e!72190)))

(declare-fun res!54895 () Bool)

(assert (=> b!111031 (=> res!54895 e!72190)))

(assert (=> b!111031 (= res!54895 (not e!72186))))

(declare-fun res!54896 () Bool)

(assert (=> b!111031 (=> (not res!54896) (not e!72186))))

(assert (=> b!111031 (= res!54896 (bvslt #b00000000000000000000000000000000 (size!2338 (array!4390 (store (arr!2081 (_keys!4341 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2338 (_keys!4341 newMap!16))))))))

(declare-fun bm!11856 () Bool)

(assert (=> bm!11856 (= call!11858 call!11859)))

(declare-fun b!111032 () Bool)

(assert (=> b!111032 (= e!72188 (validKeyInArray!0 (select (arr!2081 (array!4390 (store (arr!2081 (_keys!4341 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2338 (_keys!4341 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!111033 () Bool)

(assert (=> b!111033 (= e!72193 e!72191)))

(declare-fun c!19736 () Bool)

(assert (=> b!111033 (= c!19736 (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!111034 () Bool)

(assert (=> b!111034 (= e!72185 (not call!11860))))

(declare-fun bm!11857 () Bool)

(assert (=> bm!11857 (= call!11860 (contains!838 lt!57327 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!31363 c!19733) b!111021))

(assert (= (and d!31363 (not c!19733)) b!111017))

(assert (= (and b!111017 c!19738) b!111027))

(assert (= (and b!111017 (not c!19738)) b!111014))

(assert (= (and b!111014 c!19734) b!111028))

(assert (= (and b!111014 (not c!19734)) b!111030))

(assert (= (or b!111028 b!111030) bm!11855))

(assert (= (or b!111027 bm!11855) bm!11851))

(assert (= (or b!111027 b!111028) bm!11856))

(assert (= (or b!111021 bm!11851) bm!11852))

(assert (= (or b!111021 bm!11856) bm!11854))

(assert (= (and d!31363 res!54893) b!111032))

(assert (= (and d!31363 c!19735) b!111022))

(assert (= (and d!31363 (not c!19735)) b!111018))

(assert (= (and d!31363 res!54897) b!111031))

(assert (= (and b!111031 res!54896) b!111024))

(assert (= (and b!111031 (not res!54895)) b!111015))

(assert (= (and b!111015 res!54892) b!111029))

(assert (= (and b!111031 res!54898) b!111023))

(assert (= (and b!111023 c!19737) b!111016))

(assert (= (and b!111023 (not c!19737)) b!111034))

(assert (= (and b!111016 res!54890) b!111020))

(assert (= (or b!111016 b!111034) bm!11857))

(assert (= (and b!111023 res!54894) b!111033))

(assert (= (and b!111033 c!19736) b!111026))

(assert (= (and b!111033 (not c!19736)) b!111019))

(assert (= (and b!111026 res!54891) b!111025))

(assert (= (or b!111026 b!111019) bm!11853))

(declare-fun b_lambda!4967 () Bool)

(assert (=> (not b_lambda!4967) (not b!111029)))

(assert (=> b!111029 t!5774))

(declare-fun b_and!6831 () Bool)

(assert (= b_and!6827 (and (=> t!5774 result!3537) b_and!6831)))

(assert (=> b!111029 t!5776))

(declare-fun b_and!6833 () Bool)

(assert (= b_and!6829 (and (=> t!5776 result!3539) b_and!6833)))

(declare-fun m!126297 () Bool)

(assert (=> bm!11853 m!126297))

(declare-fun m!126299 () Bool)

(assert (=> b!111025 m!126299))

(assert (=> b!111024 m!126251))

(assert (=> b!111024 m!126251))

(assert (=> b!111024 m!126253))

(assert (=> b!111015 m!126251))

(assert (=> b!111015 m!126251))

(declare-fun m!126301 () Bool)

(assert (=> b!111015 m!126301))

(declare-fun m!126303 () Bool)

(assert (=> b!111022 m!126303))

(declare-fun m!126305 () Bool)

(assert (=> b!111022 m!126305))

(declare-fun m!126307 () Bool)

(assert (=> b!111022 m!126307))

(assert (=> b!111022 m!126303))

(declare-fun m!126309 () Bool)

(assert (=> b!111022 m!126309))

(declare-fun m!126311 () Bool)

(assert (=> b!111022 m!126311))

(assert (=> b!111022 m!126311))

(declare-fun m!126313 () Bool)

(assert (=> b!111022 m!126313))

(declare-fun m!126315 () Bool)

(assert (=> b!111022 m!126315))

(assert (=> b!111022 m!126251))

(declare-fun m!126317 () Bool)

(assert (=> b!111022 m!126317))

(declare-fun m!126319 () Bool)

(assert (=> b!111022 m!126319))

(declare-fun m!126321 () Bool)

(assert (=> b!111022 m!126321))

(declare-fun m!126323 () Bool)

(assert (=> b!111022 m!126323))

(assert (=> b!111022 m!126319))

(declare-fun m!126325 () Bool)

(assert (=> b!111022 m!126325))

(declare-fun m!126327 () Bool)

(assert (=> b!111022 m!126327))

(assert (=> b!111022 m!126309))

(declare-fun m!126329 () Bool)

(assert (=> b!111022 m!126329))

(declare-fun m!126331 () Bool)

(assert (=> b!111022 m!126331))

(declare-fun m!126333 () Bool)

(assert (=> b!111022 m!126333))

(assert (=> d!31363 m!124669))

(declare-fun m!126335 () Bool)

(assert (=> b!111029 m!126335))

(assert (=> b!111029 m!124733))

(assert (=> b!111029 m!126335))

(assert (=> b!111029 m!124733))

(declare-fun m!126337 () Bool)

(assert (=> b!111029 m!126337))

(assert (=> b!111029 m!126251))

(declare-fun m!126339 () Bool)

(assert (=> b!111029 m!126339))

(assert (=> b!111029 m!126251))

(assert (=> bm!11852 m!126331))

(assert (=> b!111032 m!126251))

(assert (=> b!111032 m!126251))

(assert (=> b!111032 m!126253))

(declare-fun m!126341 () Bool)

(assert (=> bm!11854 m!126341))

(declare-fun m!126343 () Bool)

(assert (=> b!111021 m!126343))

(declare-fun m!126345 () Bool)

(assert (=> bm!11857 m!126345))

(declare-fun m!126347 () Bool)

(assert (=> b!111020 m!126347))

(assert (=> d!31035 d!31363))

(declare-fun b!111035 () Bool)

(declare-fun e!72197 () (_ BitVec 32))

(declare-fun call!11861 () (_ BitVec 32))

(assert (=> b!111035 (= e!72197 (bvadd #b00000000000000000000000000000001 call!11861))))

(declare-fun d!31365 () Bool)

(declare-fun lt!57335 () (_ BitVec 32))

(assert (=> d!31365 (and (bvsge lt!57335 #b00000000000000000000000000000000) (bvsle lt!57335 (bvsub (size!2338 (array!4390 (store (arr!2081 (_keys!4341 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2338 (_keys!4341 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun e!72198 () (_ BitVec 32))

(assert (=> d!31365 (= lt!57335 e!72198)))

(declare-fun c!19739 () Bool)

(assert (=> d!31365 (= c!19739 (bvsge #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))))))

(assert (=> d!31365 (and (bvsle #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2338 (_keys!4341 newMap!16)) (size!2338 (array!4390 (store (arr!2081 (_keys!4341 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2338 (_keys!4341 newMap!16))))))))

(assert (=> d!31365 (= (arrayCountValidKeys!0 (array!4390 (store (arr!2081 (_keys!4341 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2338 (_keys!4341 newMap!16))) #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))) lt!57335)))

(declare-fun b!111036 () Bool)

(assert (=> b!111036 (= e!72197 call!11861)))

(declare-fun bm!11858 () Bool)

(assert (=> bm!11858 (= call!11861 (arrayCountValidKeys!0 (array!4390 (store (arr!2081 (_keys!4341 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2338 (_keys!4341 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2338 (_keys!4341 newMap!16))))))

(declare-fun b!111037 () Bool)

(assert (=> b!111037 (= e!72198 e!72197)))

(declare-fun c!19740 () Bool)

(assert (=> b!111037 (= c!19740 (validKeyInArray!0 (select (arr!2081 (array!4390 (store (arr!2081 (_keys!4341 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2338 (_keys!4341 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!111038 () Bool)

(assert (=> b!111038 (= e!72198 #b00000000000000000000000000000000)))

(assert (= (and d!31365 c!19739) b!111038))

(assert (= (and d!31365 (not c!19739)) b!111037))

(assert (= (and b!111037 c!19740) b!111035))

(assert (= (and b!111037 (not c!19740)) b!111036))

(assert (= (or b!111035 b!111036) bm!11858))

(declare-fun m!126349 () Bool)

(assert (=> bm!11858 m!126349))

(assert (=> b!111037 m!126251))

(assert (=> b!111037 m!126251))

(assert (=> b!111037 m!126253))

(assert (=> d!31035 d!31365))

(declare-fun d!31367 () Bool)

(assert (=> d!31367 (arrayContainsKey!0 lt!57012 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!57338 () Unit!3403)

(declare-fun choose!13 (array!4389 (_ BitVec 64) (_ BitVec 32)) Unit!3403)

(assert (=> d!31367 (= lt!57338 (choose!13 lt!57012 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591))))))

(assert (=> d!31367 (bvsge (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) #b00000000000000000000000000000000)))

(assert (=> d!31367 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!57012 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591))) lt!57338)))

(declare-fun bs!4568 () Bool)

(assert (= bs!4568 d!31367))

(assert (=> bs!4568 m!124315))

(assert (=> bs!4568 m!125369))

(assert (=> bs!4568 m!124315))

(declare-fun m!126351 () Bool)

(assert (=> bs!4568 m!126351))

(assert (=> d!31035 d!31367))

(declare-fun d!31369 () Bool)

(declare-fun e!72201 () Bool)

(assert (=> d!31369 e!72201))

(declare-fun res!54901 () Bool)

(assert (=> d!31369 (=> (not res!54901) (not e!72201))))

(assert (=> d!31369 (= res!54901 (and (bvsge (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) #b00000000000000000000000000000000) (bvslt (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (size!2338 (_keys!4341 newMap!16))) (bvslt (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (size!2339 (_values!2610 newMap!16)))))))

(declare-fun lt!57341 () Unit!3403)

(declare-fun choose!695 (array!4389 array!4391 (_ BitVec 32) (_ BitVec 32) V!3243 V!3243 (_ BitVec 32) (_ BitVec 64) V!3243 Int) Unit!3403)

(assert (=> d!31369 (= lt!57341 (choose!695 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458 (defaultEntry!2627 newMap!16)))))

(assert (=> d!31369 (validMask!0 (mask!6795 newMap!16))))

(assert (=> d!31369 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!32 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458 (defaultEntry!2627 newMap!16)) lt!57341)))

(declare-fun b!111041 () Bool)

(assert (=> b!111041 (= e!72201 (= (+!150 (getCurrentListMap!496 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)) (getCurrentListMap!496 (array!4390 (store (arr!2081 (_keys!4341 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2338 (_keys!4341 newMap!16))) (array!4392 (store (arr!2082 (_values!2610 newMap!16)) (ite c!19436 (index!3197 lt!56591) (index!3194 lt!56591)) (ValueCellFull!1005 lt!56458)) (size!2339 (_values!2610 newMap!16))) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16))))))

(assert (= (and d!31369 res!54901) b!111041))

(assert (=> d!31369 m!124315))

(declare-fun m!126353 () Bool)

(assert (=> d!31369 m!126353))

(assert (=> d!31369 m!124669))

(assert (=> b!111041 m!125347))

(assert (=> b!111041 m!124485))

(assert (=> b!111041 m!124677))

(assert (=> b!111041 m!125355))

(assert (=> b!111041 m!124485))

(assert (=> b!111041 m!125363))

(assert (=> d!31035 d!31369))

(assert (=> d!31035 d!30933))

(declare-fun b!111042 () Bool)

(declare-fun e!72202 () (_ BitVec 32))

(declare-fun call!11862 () (_ BitVec 32))

(assert (=> b!111042 (= e!72202 (bvadd #b00000000000000000000000000000001 call!11862))))

(declare-fun d!31371 () Bool)

(declare-fun lt!57342 () (_ BitVec 32))

(assert (=> d!31371 (and (bvsge lt!57342 #b00000000000000000000000000000000) (bvsle lt!57342 (bvsub (size!2338 (_keys!4341 (_2!1230 lt!56590))) #b00000000000000000000000000000000)))))

(declare-fun e!72203 () (_ BitVec 32))

(assert (=> d!31371 (= lt!57342 e!72203)))

(declare-fun c!19741 () Bool)

(assert (=> d!31371 (= c!19741 (bvsge #b00000000000000000000000000000000 (size!2338 (_keys!4341 (_2!1230 lt!56590)))))))

(assert (=> d!31371 (and (bvsle #b00000000000000000000000000000000 (size!2338 (_keys!4341 (_2!1230 lt!56590)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2338 (_keys!4341 (_2!1230 lt!56590))) (size!2338 (_keys!4341 (_2!1230 lt!56590)))))))

(assert (=> d!31371 (= (arrayCountValidKeys!0 (_keys!4341 (_2!1230 lt!56590)) #b00000000000000000000000000000000 (size!2338 (_keys!4341 (_2!1230 lt!56590)))) lt!57342)))

(declare-fun b!111043 () Bool)

(assert (=> b!111043 (= e!72202 call!11862)))

(declare-fun bm!11859 () Bool)

(assert (=> bm!11859 (= call!11862 (arrayCountValidKeys!0 (_keys!4341 (_2!1230 lt!56590)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2338 (_keys!4341 (_2!1230 lt!56590)))))))

(declare-fun b!111044 () Bool)

(assert (=> b!111044 (= e!72203 e!72202)))

(declare-fun c!19742 () Bool)

(assert (=> b!111044 (= c!19742 (validKeyInArray!0 (select (arr!2081 (_keys!4341 (_2!1230 lt!56590))) #b00000000000000000000000000000000)))))

(declare-fun b!111045 () Bool)

(assert (=> b!111045 (= e!72203 #b00000000000000000000000000000000)))

(assert (= (and d!31371 c!19741) b!111045))

(assert (= (and d!31371 (not c!19741)) b!111044))

(assert (= (and b!111044 c!19742) b!111042))

(assert (= (and b!111044 (not c!19742)) b!111043))

(assert (= (or b!111042 b!111043) bm!11859))

(declare-fun m!126355 () Bool)

(assert (=> bm!11859 m!126355))

(assert (=> b!111044 m!125781))

(assert (=> b!111044 m!125781))

(assert (=> b!111044 m!125783))

(assert (=> b!110257 d!31371))

(declare-fun d!31373 () Bool)

(assert (=> d!31373 (= (get!1350 (getValueByKey!158 (toList!811 lt!56612) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2934 (getValueByKey!158 (toList!811 lt!56612) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!31031 d!31373))

(declare-fun b!111046 () Bool)

(declare-fun e!72204 () Option!164)

(assert (=> b!111046 (= e!72204 (Some!163 (_2!1231 (h!2225 (toList!811 lt!56612)))))))

(declare-fun e!72205 () Option!164)

(declare-fun b!111048 () Bool)

(assert (=> b!111048 (= e!72205 (getValueByKey!158 (t!5767 (toList!811 lt!56612)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun d!31375 () Bool)

(declare-fun c!19743 () Bool)

(assert (=> d!31375 (= c!19743 (and ((_ is Cons!1626) (toList!811 lt!56612)) (= (_1!1231 (h!2225 (toList!811 lt!56612))) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!31375 (= (getValueByKey!158 (toList!811 lt!56612) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!72204)))

(declare-fun b!111047 () Bool)

(assert (=> b!111047 (= e!72204 e!72205)))

(declare-fun c!19744 () Bool)

(assert (=> b!111047 (= c!19744 (and ((_ is Cons!1626) (toList!811 lt!56612)) (not (= (_1!1231 (h!2225 (toList!811 lt!56612))) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!111049 () Bool)

(assert (=> b!111049 (= e!72205 None!162)))

(assert (= (and d!31375 c!19743) b!111046))

(assert (= (and d!31375 (not c!19743)) b!111047))

(assert (= (and b!111047 c!19744) b!111048))

(assert (= (and b!111047 (not c!19744)) b!111049))

(assert (=> b!111048 m!124503))

(declare-fun m!126357 () Bool)

(assert (=> b!111048 m!126357))

(assert (=> d!31031 d!31375))

(declare-fun d!31377 () Bool)

(assert (=> d!31377 (= (isEmpty!377 (getValueByKey!158 (toList!811 lt!56461) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355))) (not ((_ is Some!163) (getValueByKey!158 (toList!811 lt!56461) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))))

(assert (=> d!30867 d!31377))

(declare-fun b!111050 () Bool)

(declare-fun e!72209 () Bool)

(declare-fun e!72210 () Bool)

(assert (=> b!111050 (= e!72209 e!72210)))

(declare-fun c!19746 () Bool)

(assert (=> b!111050 (= c!19746 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2338 (_keys!4341 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun b!111051 () Bool)

(declare-fun e!72212 () Bool)

(assert (=> b!111051 (= e!72212 e!72209)))

(declare-fun c!19747 () Bool)

(declare-fun e!72206 () Bool)

(assert (=> b!111051 (= c!19747 e!72206)))

(declare-fun res!54905 () Bool)

(assert (=> b!111051 (=> (not res!54905) (not e!72206))))

(assert (=> b!111051 (= res!54905 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2338 (_keys!4341 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun b!111052 () Bool)

(declare-fun lt!57348 () Unit!3403)

(declare-fun lt!57344 () Unit!3403)

(assert (=> b!111052 (= lt!57348 lt!57344)))

(declare-fun lt!57347 () (_ BitVec 64))

(declare-fun lt!57349 () V!3243)

(declare-fun lt!57343 () (_ BitVec 64))

(declare-fun lt!57346 () ListLongMap!1591)

(assert (=> b!111052 (not (contains!838 (+!150 lt!57346 (tuple2!2441 lt!57343 lt!57349)) lt!57347))))

(assert (=> b!111052 (= lt!57344 (addStillNotContains!48 lt!57346 lt!57343 lt!57349 lt!57347))))

(assert (=> b!111052 (= lt!57347 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!111052 (= lt!57349 (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!111052 (= lt!57343 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(declare-fun call!11863 () ListLongMap!1591)

(assert (=> b!111052 (= lt!57346 call!11863)))

(declare-fun e!72208 () ListLongMap!1591)

(assert (=> b!111052 (= e!72208 (+!150 call!11863 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!111053 () Bool)

(declare-fun res!54902 () Bool)

(assert (=> b!111053 (=> (not res!54902) (not e!72212))))

(declare-fun lt!57345 () ListLongMap!1591)

(assert (=> b!111053 (= res!54902 (not (contains!838 lt!57345 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!111054 () Bool)

(declare-fun e!72207 () Bool)

(assert (=> b!111054 (= e!72209 e!72207)))

(assert (=> b!111054 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2338 (_keys!4341 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun res!54903 () Bool)

(assert (=> b!111054 (= res!54903 (contains!838 lt!57345 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!111054 (=> (not res!54903) (not e!72207))))

(declare-fun b!111055 () Bool)

(assert (=> b!111055 (= e!72206 (validKeyInArray!0 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!111055 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!111056 () Bool)

(declare-fun e!72211 () ListLongMap!1591)

(assert (=> b!111056 (= e!72211 e!72208)))

(declare-fun c!19745 () Bool)

(assert (=> b!111056 (= c!19745 (validKeyInArray!0 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun d!31379 () Bool)

(assert (=> d!31379 e!72212))

(declare-fun res!54904 () Bool)

(assert (=> d!31379 (=> (not res!54904) (not e!72212))))

(assert (=> d!31379 (= res!54904 (not (contains!838 lt!57345 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!31379 (= lt!57345 e!72211)))

(declare-fun c!19748 () Bool)

(assert (=> d!31379 (= c!19748 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2338 (_keys!4341 (v!2930 (underlying!370 thiss!992))))))))

(assert (=> d!31379 (validMask!0 (mask!6795 (v!2930 (underlying!370 thiss!992))))))

(assert (=> d!31379 (= (getCurrentListMapNoExtraKeys!116 (_keys!4341 (v!2930 (underlying!370 thiss!992))) (_values!2610 (v!2930 (underlying!370 thiss!992))) (mask!6795 (v!2930 (underlying!370 thiss!992))) (extraKeys!2424 (v!2930 (underlying!370 thiss!992))) (zeroValue!2498 (v!2930 (underlying!370 thiss!992))) (minValue!2498 (v!2930 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2627 (v!2930 (underlying!370 thiss!992)))) lt!57345)))

(declare-fun b!111057 () Bool)

(assert (=> b!111057 (= e!72210 (= lt!57345 (getCurrentListMapNoExtraKeys!116 (_keys!4341 (v!2930 (underlying!370 thiss!992))) (_values!2610 (v!2930 (underlying!370 thiss!992))) (mask!6795 (v!2930 (underlying!370 thiss!992))) (extraKeys!2424 (v!2930 (underlying!370 thiss!992))) (zeroValue!2498 (v!2930 (underlying!370 thiss!992))) (minValue!2498 (v!2930 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun b!111058 () Bool)

(assert (=> b!111058 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2338 (_keys!4341 (v!2930 (underlying!370 thiss!992))))))))

(assert (=> b!111058 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2339 (_values!2610 (v!2930 (underlying!370 thiss!992))))))))

(assert (=> b!111058 (= e!72207 (= (apply!100 lt!57345 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bm!11860 () Bool)

(assert (=> bm!11860 (= call!11863 (getCurrentListMapNoExtraKeys!116 (_keys!4341 (v!2930 (underlying!370 thiss!992))) (_values!2610 (v!2930 (underlying!370 thiss!992))) (mask!6795 (v!2930 (underlying!370 thiss!992))) (extraKeys!2424 (v!2930 (underlying!370 thiss!992))) (zeroValue!2498 (v!2930 (underlying!370 thiss!992))) (minValue!2498 (v!2930 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2627 (v!2930 (underlying!370 thiss!992)))))))

(declare-fun b!111059 () Bool)

(assert (=> b!111059 (= e!72208 call!11863)))

(declare-fun b!111060 () Bool)

(assert (=> b!111060 (= e!72210 (isEmpty!376 lt!57345))))

(declare-fun b!111061 () Bool)

(assert (=> b!111061 (= e!72211 (ListLongMap!1592 Nil!1627))))

(assert (= (and d!31379 c!19748) b!111061))

(assert (= (and d!31379 (not c!19748)) b!111056))

(assert (= (and b!111056 c!19745) b!111052))

(assert (= (and b!111056 (not c!19745)) b!111059))

(assert (= (or b!111052 b!111059) bm!11860))

(assert (= (and d!31379 res!54904) b!111053))

(assert (= (and b!111053 res!54902) b!111051))

(assert (= (and b!111051 res!54905) b!111055))

(assert (= (and b!111051 c!19747) b!111054))

(assert (= (and b!111051 (not c!19747)) b!111050))

(assert (= (and b!111054 res!54903) b!111058))

(assert (= (and b!111050 c!19746) b!111057))

(assert (= (and b!111050 (not c!19746)) b!111060))

(declare-fun b_lambda!4969 () Bool)

(assert (=> (not b_lambda!4969) (not b!111052)))

(assert (=> b!111052 t!5764))

(declare-fun b_and!6835 () Bool)

(assert (= b_and!6831 (and (=> t!5764 result!3523) b_and!6835)))

(assert (=> b!111052 t!5766))

(declare-fun b_and!6837 () Bool)

(assert (= b_and!6833 (and (=> t!5766 result!3527) b_and!6837)))

(declare-fun b_lambda!4971 () Bool)

(assert (=> (not b_lambda!4971) (not b!111058)))

(assert (=> b!111058 t!5764))

(declare-fun b_and!6839 () Bool)

(assert (= b_and!6835 (and (=> t!5764 result!3523) b_and!6839)))

(assert (=> b!111058 t!5766))

(declare-fun b_and!6841 () Bool)

(assert (= b_and!6837 (and (=> t!5766 result!3527) b_and!6841)))

(declare-fun m!126359 () Bool)

(assert (=> b!111057 m!126359))

(declare-fun m!126361 () Bool)

(assert (=> b!111053 m!126361))

(declare-fun m!126363 () Bool)

(assert (=> d!31379 m!126363))

(assert (=> d!31379 m!124329))

(assert (=> b!111058 m!125509))

(declare-fun m!126365 () Bool)

(assert (=> b!111058 m!126365))

(assert (=> b!111058 m!124363))

(declare-fun m!126367 () Bool)

(assert (=> b!111058 m!126367))

(assert (=> b!111058 m!124363))

(assert (=> b!111058 m!126365))

(assert (=> b!111058 m!125509))

(declare-fun m!126369 () Bool)

(assert (=> b!111058 m!126369))

(assert (=> b!111055 m!125509))

(assert (=> b!111055 m!125509))

(declare-fun m!126371 () Bool)

(assert (=> b!111055 m!126371))

(assert (=> b!111056 m!125509))

(assert (=> b!111056 m!125509))

(assert (=> b!111056 m!126371))

(declare-fun m!126373 () Bool)

(assert (=> b!111060 m!126373))

(assert (=> b!111052 m!125509))

(declare-fun m!126375 () Bool)

(assert (=> b!111052 m!126375))

(declare-fun m!126377 () Bool)

(assert (=> b!111052 m!126377))

(declare-fun m!126379 () Bool)

(assert (=> b!111052 m!126379))

(assert (=> b!111052 m!124363))

(assert (=> b!111052 m!126365))

(assert (=> b!111052 m!126375))

(declare-fun m!126381 () Bool)

(assert (=> b!111052 m!126381))

(assert (=> b!111052 m!126365))

(assert (=> b!111052 m!124363))

(assert (=> b!111052 m!126367))

(assert (=> b!111054 m!125509))

(assert (=> b!111054 m!125509))

(declare-fun m!126383 () Bool)

(assert (=> b!111054 m!126383))

(assert (=> bm!11860 m!126359))

(assert (=> bm!11765 d!31379))

(declare-fun d!31381 () Bool)

(declare-fun lt!57350 () Bool)

(assert (=> d!31381 (= lt!57350 (select (content!113 lt!56638) (tuple2!2441 (_1!1231 lt!56457) (_2!1231 lt!56457))))))

(declare-fun e!72214 () Bool)

(assert (=> d!31381 (= lt!57350 e!72214)))

(declare-fun res!54906 () Bool)

(assert (=> d!31381 (=> (not res!54906) (not e!72214))))

(assert (=> d!31381 (= res!54906 ((_ is Cons!1626) lt!56638))))

(assert (=> d!31381 (= (contains!839 lt!56638 (tuple2!2441 (_1!1231 lt!56457) (_2!1231 lt!56457))) lt!57350)))

(declare-fun b!111062 () Bool)

(declare-fun e!72213 () Bool)

(assert (=> b!111062 (= e!72214 e!72213)))

(declare-fun res!54907 () Bool)

(assert (=> b!111062 (=> res!54907 e!72213)))

(assert (=> b!111062 (= res!54907 (= (h!2225 lt!56638) (tuple2!2441 (_1!1231 lt!56457) (_2!1231 lt!56457))))))

(declare-fun b!111063 () Bool)

(assert (=> b!111063 (= e!72213 (contains!839 (t!5767 lt!56638) (tuple2!2441 (_1!1231 lt!56457) (_2!1231 lt!56457))))))

(assert (= (and d!31381 res!54906) b!111062))

(assert (= (and b!111062 (not res!54907)) b!111063))

(declare-fun m!126385 () Bool)

(assert (=> d!31381 m!126385))

(declare-fun m!126387 () Bool)

(assert (=> d!31381 m!126387))

(declare-fun m!126389 () Bool)

(assert (=> b!111063 m!126389))

(assert (=> b!110330 d!31381))

(declare-fun d!31383 () Bool)

(assert (=> d!31383 (= (size!2342 newMap!16) (bvadd (_size!508 newMap!16) (bvsdiv (bvadd (extraKeys!2424 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!110517 d!31383))

(declare-fun d!31385 () Bool)

(declare-fun lt!57351 () Bool)

(assert (=> d!31385 (= lt!57351 (select (content!113 (t!5767 (toList!811 lt!56635))) lt!56454))))

(declare-fun e!72216 () Bool)

(assert (=> d!31385 (= lt!57351 e!72216)))

(declare-fun res!54908 () Bool)

(assert (=> d!31385 (=> (not res!54908) (not e!72216))))

(assert (=> d!31385 (= res!54908 ((_ is Cons!1626) (t!5767 (toList!811 lt!56635))))))

(assert (=> d!31385 (= (contains!839 (t!5767 (toList!811 lt!56635)) lt!56454) lt!57351)))

(declare-fun b!111064 () Bool)

(declare-fun e!72215 () Bool)

(assert (=> b!111064 (= e!72216 e!72215)))

(declare-fun res!54909 () Bool)

(assert (=> b!111064 (=> res!54909 e!72215)))

(assert (=> b!111064 (= res!54909 (= (h!2225 (t!5767 (toList!811 lt!56635))) lt!56454))))

(declare-fun b!111065 () Bool)

(assert (=> b!111065 (= e!72215 (contains!839 (t!5767 (t!5767 (toList!811 lt!56635))) lt!56454))))

(assert (= (and d!31385 res!54908) b!111064))

(assert (= (and b!111064 (not res!54909)) b!111065))

(assert (=> d!31385 m!125695))

(declare-fun m!126391 () Bool)

(assert (=> d!31385 m!126391))

(declare-fun m!126393 () Bool)

(assert (=> b!111065 m!126393))

(assert (=> b!110432 d!31385))

(declare-fun d!31387 () Bool)

(assert (=> d!31387 (= (get!1350 (getValueByKey!158 (toList!811 (+!150 lt!56705 (tuple2!2441 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))) lt!56693)) (v!2934 (getValueByKey!158 (toList!811 (+!150 lt!56705 (tuple2!2441 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))) lt!56693)))))

(assert (=> d!30957 d!31387))

(declare-fun e!72217 () Option!164)

(declare-fun b!111066 () Bool)

(assert (=> b!111066 (= e!72217 (Some!163 (_2!1231 (h!2225 (toList!811 (+!150 lt!56705 (tuple2!2441 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))))))))

(declare-fun b!111068 () Bool)

(declare-fun e!72218 () Option!164)

(assert (=> b!111068 (= e!72218 (getValueByKey!158 (t!5767 (toList!811 (+!150 lt!56705 (tuple2!2441 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))) lt!56693))))

(declare-fun c!19749 () Bool)

(declare-fun d!31389 () Bool)

(assert (=> d!31389 (= c!19749 (and ((_ is Cons!1626) (toList!811 (+!150 lt!56705 (tuple2!2441 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))) (= (_1!1231 (h!2225 (toList!811 (+!150 lt!56705 (tuple2!2441 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))) lt!56693)))))

(assert (=> d!31389 (= (getValueByKey!158 (toList!811 (+!150 lt!56705 (tuple2!2441 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))) lt!56693) e!72217)))

(declare-fun b!111067 () Bool)

(assert (=> b!111067 (= e!72217 e!72218)))

(declare-fun c!19750 () Bool)

(assert (=> b!111067 (= c!19750 (and ((_ is Cons!1626) (toList!811 (+!150 lt!56705 (tuple2!2441 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))) (not (= (_1!1231 (h!2225 (toList!811 (+!150 lt!56705 (tuple2!2441 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))) lt!56693))))))

(declare-fun b!111069 () Bool)

(assert (=> b!111069 (= e!72218 None!162)))

(assert (= (and d!31389 c!19749) b!111066))

(assert (= (and d!31389 (not c!19749)) b!111067))

(assert (= (and b!111067 c!19750) b!111068))

(assert (= (and b!111067 (not c!19750)) b!111069))

(declare-fun m!126395 () Bool)

(assert (=> b!111068 m!126395))

(assert (=> d!30957 d!31389))

(declare-fun d!31391 () Bool)

(assert (=> d!31391 (= (apply!100 lt!56849 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1350 (getValueByKey!158 (toList!811 lt!56849) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4569 () Bool)

(assert (= bs!4569 d!31391))

(assert (=> bs!4569 m!125947))

(assert (=> bs!4569 m!125947))

(declare-fun m!126397 () Bool)

(assert (=> bs!4569 m!126397))

(assert (=> b!110310 d!31391))

(declare-fun d!31393 () Bool)

(declare-fun e!72219 () Bool)

(assert (=> d!31393 e!72219))

(declare-fun res!54910 () Bool)

(assert (=> d!31393 (=> res!54910 e!72219)))

(declare-fun lt!57352 () Bool)

(assert (=> d!31393 (= res!54910 (not lt!57352))))

(declare-fun lt!57353 () Bool)

(assert (=> d!31393 (= lt!57352 lt!57353)))

(declare-fun lt!57355 () Unit!3403)

(declare-fun e!72220 () Unit!3403)

(assert (=> d!31393 (= lt!57355 e!72220)))

(declare-fun c!19751 () Bool)

(assert (=> d!31393 (= c!19751 lt!57353)))

(assert (=> d!31393 (= lt!57353 (containsKey!162 (toList!811 lt!57049) (_1!1231 (tuple2!2441 lt!56610 lt!56616))))))

(assert (=> d!31393 (= (contains!838 lt!57049 (_1!1231 (tuple2!2441 lt!56610 lt!56616))) lt!57352)))

(declare-fun b!111070 () Bool)

(declare-fun lt!57354 () Unit!3403)

(assert (=> b!111070 (= e!72220 lt!57354)))

(assert (=> b!111070 (= lt!57354 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 lt!57049) (_1!1231 (tuple2!2441 lt!56610 lt!56616))))))

(assert (=> b!111070 (isDefined!111 (getValueByKey!158 (toList!811 lt!57049) (_1!1231 (tuple2!2441 lt!56610 lt!56616))))))

(declare-fun b!111071 () Bool)

(declare-fun Unit!3454 () Unit!3403)

(assert (=> b!111071 (= e!72220 Unit!3454)))

(declare-fun b!111072 () Bool)

(assert (=> b!111072 (= e!72219 (isDefined!111 (getValueByKey!158 (toList!811 lt!57049) (_1!1231 (tuple2!2441 lt!56610 lt!56616)))))))

(assert (= (and d!31393 c!19751) b!111070))

(assert (= (and d!31393 (not c!19751)) b!111071))

(assert (= (and d!31393 (not res!54910)) b!111072))

(declare-fun m!126399 () Bool)

(assert (=> d!31393 m!126399))

(declare-fun m!126401 () Bool)

(assert (=> b!111070 m!126401))

(assert (=> b!111070 m!125419))

(assert (=> b!111070 m!125419))

(declare-fun m!126403 () Bool)

(assert (=> b!111070 m!126403))

(assert (=> b!111072 m!125419))

(assert (=> b!111072 m!125419))

(assert (=> b!111072 m!126403))

(assert (=> d!31045 d!31393))

(declare-fun b!111073 () Bool)

(declare-fun e!72221 () Option!164)

(assert (=> b!111073 (= e!72221 (Some!163 (_2!1231 (h!2225 lt!57048))))))

(declare-fun e!72222 () Option!164)

(declare-fun b!111075 () Bool)

(assert (=> b!111075 (= e!72222 (getValueByKey!158 (t!5767 lt!57048) (_1!1231 (tuple2!2441 lt!56610 lt!56616))))))

(declare-fun d!31395 () Bool)

(declare-fun c!19752 () Bool)

(assert (=> d!31395 (= c!19752 (and ((_ is Cons!1626) lt!57048) (= (_1!1231 (h!2225 lt!57048)) (_1!1231 (tuple2!2441 lt!56610 lt!56616)))))))

(assert (=> d!31395 (= (getValueByKey!158 lt!57048 (_1!1231 (tuple2!2441 lt!56610 lt!56616))) e!72221)))

(declare-fun b!111074 () Bool)

(assert (=> b!111074 (= e!72221 e!72222)))

(declare-fun c!19753 () Bool)

(assert (=> b!111074 (= c!19753 (and ((_ is Cons!1626) lt!57048) (not (= (_1!1231 (h!2225 lt!57048)) (_1!1231 (tuple2!2441 lt!56610 lt!56616))))))))

(declare-fun b!111076 () Bool)

(assert (=> b!111076 (= e!72222 None!162)))

(assert (= (and d!31395 c!19752) b!111073))

(assert (= (and d!31395 (not c!19752)) b!111074))

(assert (= (and b!111074 c!19753) b!111075))

(assert (= (and b!111074 (not c!19753)) b!111076))

(declare-fun m!126405 () Bool)

(assert (=> b!111075 m!126405))

(assert (=> d!31045 d!31395))

(declare-fun d!31397 () Bool)

(assert (=> d!31397 (= (getValueByKey!158 lt!57048 (_1!1231 (tuple2!2441 lt!56610 lt!56616))) (Some!163 (_2!1231 (tuple2!2441 lt!56610 lt!56616))))))

(declare-fun lt!57356 () Unit!3403)

(assert (=> d!31397 (= lt!57356 (choose!687 lt!57048 (_1!1231 (tuple2!2441 lt!56610 lt!56616)) (_2!1231 (tuple2!2441 lt!56610 lt!56616))))))

(declare-fun e!72223 () Bool)

(assert (=> d!31397 e!72223))

(declare-fun res!54911 () Bool)

(assert (=> d!31397 (=> (not res!54911) (not e!72223))))

(assert (=> d!31397 (= res!54911 (isStrictlySorted!311 lt!57048))))

(assert (=> d!31397 (= (lemmaContainsTupThenGetReturnValue!74 lt!57048 (_1!1231 (tuple2!2441 lt!56610 lt!56616)) (_2!1231 (tuple2!2441 lt!56610 lt!56616))) lt!57356)))

(declare-fun b!111077 () Bool)

(declare-fun res!54912 () Bool)

(assert (=> b!111077 (=> (not res!54912) (not e!72223))))

(assert (=> b!111077 (= res!54912 (containsKey!162 lt!57048 (_1!1231 (tuple2!2441 lt!56610 lt!56616))))))

(declare-fun b!111078 () Bool)

(assert (=> b!111078 (= e!72223 (contains!839 lt!57048 (tuple2!2441 (_1!1231 (tuple2!2441 lt!56610 lt!56616)) (_2!1231 (tuple2!2441 lt!56610 lt!56616)))))))

(assert (= (and d!31397 res!54911) b!111077))

(assert (= (and b!111077 res!54912) b!111078))

(assert (=> d!31397 m!125413))

(declare-fun m!126407 () Bool)

(assert (=> d!31397 m!126407))

(declare-fun m!126409 () Bool)

(assert (=> d!31397 m!126409))

(declare-fun m!126411 () Bool)

(assert (=> b!111077 m!126411))

(declare-fun m!126413 () Bool)

(assert (=> b!111078 m!126413))

(assert (=> d!31045 d!31397))

(declare-fun b!111079 () Bool)

(declare-fun e!72228 () List!1630)

(declare-fun e!72227 () List!1630)

(assert (=> b!111079 (= e!72228 e!72227)))

(declare-fun c!19756 () Bool)

(assert (=> b!111079 (= c!19756 (and ((_ is Cons!1626) (toList!811 lt!56613)) (= (_1!1231 (h!2225 (toList!811 lt!56613))) (_1!1231 (tuple2!2441 lt!56610 lt!56616)))))))

(declare-fun bm!11861 () Bool)

(declare-fun call!11864 () List!1630)

(declare-fun call!11865 () List!1630)

(assert (=> bm!11861 (= call!11864 call!11865)))

(declare-fun b!111080 () Bool)

(assert (=> b!111080 (= e!72228 call!11865)))

(declare-fun bm!11862 () Bool)

(declare-fun call!11866 () List!1630)

(assert (=> bm!11862 (= call!11866 call!11864)))

(declare-fun bm!11863 () Bool)

(declare-fun c!19754 () Bool)

(declare-fun e!72226 () List!1630)

(assert (=> bm!11863 (= call!11865 ($colon$colon!83 e!72226 (ite c!19754 (h!2225 (toList!811 lt!56613)) (tuple2!2441 (_1!1231 (tuple2!2441 lt!56610 lt!56616)) (_2!1231 (tuple2!2441 lt!56610 lt!56616))))))))

(declare-fun c!19757 () Bool)

(assert (=> bm!11863 (= c!19757 c!19754)))

(declare-fun b!111081 () Bool)

(assert (=> b!111081 (= e!72227 call!11864)))

(declare-fun b!111083 () Bool)

(declare-fun e!72225 () Bool)

(declare-fun lt!57357 () List!1630)

(assert (=> b!111083 (= e!72225 (contains!839 lt!57357 (tuple2!2441 (_1!1231 (tuple2!2441 lt!56610 lt!56616)) (_2!1231 (tuple2!2441 lt!56610 lt!56616)))))))

(declare-fun b!111084 () Bool)

(declare-fun e!72224 () List!1630)

(assert (=> b!111084 (= e!72224 call!11866)))

(declare-fun b!111085 () Bool)

(declare-fun res!54914 () Bool)

(assert (=> b!111085 (=> (not res!54914) (not e!72225))))

(assert (=> b!111085 (= res!54914 (containsKey!162 lt!57357 (_1!1231 (tuple2!2441 lt!56610 lt!56616))))))

(declare-fun c!19755 () Bool)

(declare-fun b!111086 () Bool)

(assert (=> b!111086 (= c!19755 (and ((_ is Cons!1626) (toList!811 lt!56613)) (bvsgt (_1!1231 (h!2225 (toList!811 lt!56613))) (_1!1231 (tuple2!2441 lt!56610 lt!56616)))))))

(assert (=> b!111086 (= e!72227 e!72224)))

(declare-fun b!111087 () Bool)

(assert (=> b!111087 (= e!72224 call!11866)))

(declare-fun b!111088 () Bool)

(assert (=> b!111088 (= e!72226 (ite c!19756 (t!5767 (toList!811 lt!56613)) (ite c!19755 (Cons!1626 (h!2225 (toList!811 lt!56613)) (t!5767 (toList!811 lt!56613))) Nil!1627)))))

(declare-fun b!111082 () Bool)

(assert (=> b!111082 (= e!72226 (insertStrictlySorted!77 (t!5767 (toList!811 lt!56613)) (_1!1231 (tuple2!2441 lt!56610 lt!56616)) (_2!1231 (tuple2!2441 lt!56610 lt!56616))))))

(declare-fun d!31399 () Bool)

(assert (=> d!31399 e!72225))

(declare-fun res!54913 () Bool)

(assert (=> d!31399 (=> (not res!54913) (not e!72225))))

(assert (=> d!31399 (= res!54913 (isStrictlySorted!311 lt!57357))))

(assert (=> d!31399 (= lt!57357 e!72228)))

(assert (=> d!31399 (= c!19754 (and ((_ is Cons!1626) (toList!811 lt!56613)) (bvslt (_1!1231 (h!2225 (toList!811 lt!56613))) (_1!1231 (tuple2!2441 lt!56610 lt!56616)))))))

(assert (=> d!31399 (isStrictlySorted!311 (toList!811 lt!56613))))

(assert (=> d!31399 (= (insertStrictlySorted!77 (toList!811 lt!56613) (_1!1231 (tuple2!2441 lt!56610 lt!56616)) (_2!1231 (tuple2!2441 lt!56610 lt!56616))) lt!57357)))

(assert (= (and d!31399 c!19754) b!111080))

(assert (= (and d!31399 (not c!19754)) b!111079))

(assert (= (and b!111079 c!19756) b!111081))

(assert (= (and b!111079 (not c!19756)) b!111086))

(assert (= (and b!111086 c!19755) b!111084))

(assert (= (and b!111086 (not c!19755)) b!111087))

(assert (= (or b!111084 b!111087) bm!11862))

(assert (= (or b!111081 bm!11862) bm!11861))

(assert (= (or b!111080 bm!11861) bm!11863))

(assert (= (and bm!11863 c!19757) b!111082))

(assert (= (and bm!11863 (not c!19757)) b!111088))

(assert (= (and d!31399 res!54913) b!111085))

(assert (= (and b!111085 res!54914) b!111083))

(declare-fun m!126415 () Bool)

(assert (=> b!111085 m!126415))

(declare-fun m!126417 () Bool)

(assert (=> b!111082 m!126417))

(declare-fun m!126419 () Bool)

(assert (=> b!111083 m!126419))

(declare-fun m!126421 () Bool)

(assert (=> d!31399 m!126421))

(declare-fun m!126423 () Bool)

(assert (=> d!31399 m!126423))

(declare-fun m!126425 () Bool)

(assert (=> bm!11863 m!126425))

(assert (=> d!31045 d!31399))

(declare-fun d!31401 () Bool)

(declare-fun res!54915 () Bool)

(declare-fun e!72229 () Bool)

(assert (=> d!31401 (=> res!54915 e!72229)))

(assert (=> d!31401 (= res!54915 (and ((_ is Cons!1626) (toList!811 e!71507)) (= (_1!1231 (h!2225 (toList!811 e!71507))) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355))))))

(assert (=> d!31401 (= (containsKey!162 (toList!811 e!71507) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) e!72229)))

(declare-fun b!111089 () Bool)

(declare-fun e!72230 () Bool)

(assert (=> b!111089 (= e!72229 e!72230)))

(declare-fun res!54916 () Bool)

(assert (=> b!111089 (=> (not res!54916) (not e!72230))))

(assert (=> b!111089 (= res!54916 (and (or (not ((_ is Cons!1626) (toList!811 e!71507))) (bvsle (_1!1231 (h!2225 (toList!811 e!71507))) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355))) ((_ is Cons!1626) (toList!811 e!71507)) (bvslt (_1!1231 (h!2225 (toList!811 e!71507))) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355))))))

(declare-fun b!111090 () Bool)

(assert (=> b!111090 (= e!72230 (containsKey!162 (t!5767 (toList!811 e!71507)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(assert (= (and d!31401 (not res!54915)) b!111089))

(assert (= (and b!111089 res!54916) b!111090))

(assert (=> b!111090 m!124315))

(declare-fun m!126427 () Bool)

(assert (=> b!111090 m!126427))

(assert (=> d!31017 d!31401))

(assert (=> b!110369 d!31105))

(declare-fun d!31403 () Bool)

(declare-fun res!54917 () Bool)

(declare-fun e!72231 () Bool)

(assert (=> d!31403 (=> res!54917 e!72231)))

(assert (=> d!31403 (= res!54917 (or ((_ is Nil!1627) lt!56773) ((_ is Nil!1627) (t!5767 lt!56773))))))

(assert (=> d!31403 (= (isStrictlySorted!311 lt!56773) e!72231)))

(declare-fun b!111091 () Bool)

(declare-fun e!72232 () Bool)

(assert (=> b!111091 (= e!72231 e!72232)))

(declare-fun res!54918 () Bool)

(assert (=> b!111091 (=> (not res!54918) (not e!72232))))

(assert (=> b!111091 (= res!54918 (bvslt (_1!1231 (h!2225 lt!56773)) (_1!1231 (h!2225 (t!5767 lt!56773)))))))

(declare-fun b!111092 () Bool)

(assert (=> b!111092 (= e!72232 (isStrictlySorted!311 (t!5767 lt!56773)))))

(assert (= (and d!31403 (not res!54917)) b!111091))

(assert (= (and b!111091 res!54918) b!111092))

(declare-fun m!126429 () Bool)

(assert (=> b!111092 m!126429))

(assert (=> d!30901 d!31403))

(declare-fun d!31405 () Bool)

(declare-fun res!54919 () Bool)

(declare-fun e!72233 () Bool)

(assert (=> d!31405 (=> res!54919 e!72233)))

(assert (=> d!31405 (= res!54919 (or ((_ is Nil!1627) (toList!811 (+!150 lt!56462 lt!56454))) ((_ is Nil!1627) (t!5767 (toList!811 (+!150 lt!56462 lt!56454))))))))

(assert (=> d!31405 (= (isStrictlySorted!311 (toList!811 (+!150 lt!56462 lt!56454))) e!72233)))

(declare-fun b!111093 () Bool)

(declare-fun e!72234 () Bool)

(assert (=> b!111093 (= e!72233 e!72234)))

(declare-fun res!54920 () Bool)

(assert (=> b!111093 (=> (not res!54920) (not e!72234))))

(assert (=> b!111093 (= res!54920 (bvslt (_1!1231 (h!2225 (toList!811 (+!150 lt!56462 lt!56454)))) (_1!1231 (h!2225 (t!5767 (toList!811 (+!150 lt!56462 lt!56454)))))))))

(declare-fun b!111094 () Bool)

(assert (=> b!111094 (= e!72234 (isStrictlySorted!311 (t!5767 (toList!811 (+!150 lt!56462 lt!56454)))))))

(assert (= (and d!31405 (not res!54919)) b!111093))

(assert (= (and b!111093 res!54920) b!111094))

(declare-fun m!126431 () Bool)

(assert (=> b!111094 m!126431))

(assert (=> d!30901 d!31405))

(assert (=> d!30967 d!30975))

(assert (=> d!30967 d!30977))

(declare-fun d!31407 () Bool)

(assert (=> d!31407 (contains!838 (+!150 lt!56695 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))) lt!56697)))

(assert (=> d!31407 true))

(declare-fun _$35!354 () Unit!3403)

(assert (=> d!31407 (= (choose!692 lt!56695 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))) lt!56697) _$35!354)))

(declare-fun bs!4570 () Bool)

(assert (= bs!4570 d!31407))

(assert (=> bs!4570 m!124595))

(assert (=> bs!4570 m!124595))

(assert (=> bs!4570 m!124601))

(assert (=> d!30967 d!31407))

(declare-fun d!31409 () Bool)

(declare-fun e!72235 () Bool)

(assert (=> d!31409 e!72235))

(declare-fun res!54921 () Bool)

(assert (=> d!31409 (=> res!54921 e!72235)))

(declare-fun lt!57358 () Bool)

(assert (=> d!31409 (= res!54921 (not lt!57358))))

(declare-fun lt!57359 () Bool)

(assert (=> d!31409 (= lt!57358 lt!57359)))

(declare-fun lt!57361 () Unit!3403)

(declare-fun e!72236 () Unit!3403)

(assert (=> d!31409 (= lt!57361 e!72236)))

(declare-fun c!19758 () Bool)

(assert (=> d!31409 (= c!19758 lt!57359)))

(assert (=> d!31409 (= lt!57359 (containsKey!162 (toList!811 lt!56695) lt!56697))))

(assert (=> d!31409 (= (contains!838 lt!56695 lt!56697) lt!57358)))

(declare-fun b!111096 () Bool)

(declare-fun lt!57360 () Unit!3403)

(assert (=> b!111096 (= e!72236 lt!57360)))

(assert (=> b!111096 (= lt!57360 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 lt!56695) lt!56697))))

(assert (=> b!111096 (isDefined!111 (getValueByKey!158 (toList!811 lt!56695) lt!56697))))

(declare-fun b!111097 () Bool)

(declare-fun Unit!3455 () Unit!3403)

(assert (=> b!111097 (= e!72236 Unit!3455)))

(declare-fun b!111098 () Bool)

(assert (=> b!111098 (= e!72235 (isDefined!111 (getValueByKey!158 (toList!811 lt!56695) lt!56697)))))

(assert (= (and d!31409 c!19758) b!111096))

(assert (= (and d!31409 (not c!19758)) b!111097))

(assert (= (and d!31409 (not res!54921)) b!111098))

(declare-fun m!126433 () Bool)

(assert (=> d!31409 m!126433))

(declare-fun m!126435 () Bool)

(assert (=> b!111096 m!126435))

(declare-fun m!126437 () Bool)

(assert (=> b!111096 m!126437))

(assert (=> b!111096 m!126437))

(declare-fun m!126439 () Bool)

(assert (=> b!111096 m!126439))

(assert (=> b!111098 m!126437))

(assert (=> b!111098 m!126437))

(assert (=> b!111098 m!126439))

(assert (=> d!30967 d!31409))

(declare-fun b!111099 () Bool)

(declare-fun e!72240 () Bool)

(declare-fun e!72241 () Bool)

(assert (=> b!111099 (= e!72240 e!72241)))

(declare-fun c!19760 () Bool)

(assert (=> b!111099 (= c!19760 (bvslt #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))))))

(declare-fun b!111100 () Bool)

(declare-fun e!72243 () Bool)

(assert (=> b!111100 (= e!72243 e!72240)))

(declare-fun c!19761 () Bool)

(declare-fun e!72237 () Bool)

(assert (=> b!111100 (= c!19761 e!72237)))

(declare-fun res!54925 () Bool)

(assert (=> b!111100 (=> (not res!54925) (not e!72237))))

(assert (=> b!111100 (= res!54925 (bvslt #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))))))

(declare-fun b!111101 () Bool)

(declare-fun lt!57367 () Unit!3403)

(declare-fun lt!57363 () Unit!3403)

(assert (=> b!111101 (= lt!57367 lt!57363)))

(declare-fun lt!57368 () V!3243)

(declare-fun lt!57366 () (_ BitVec 64))

(declare-fun lt!57365 () ListLongMap!1591)

(declare-fun lt!57362 () (_ BitVec 64))

(assert (=> b!111101 (not (contains!838 (+!150 lt!57365 (tuple2!2441 lt!57362 lt!57368)) lt!57366))))

(assert (=> b!111101 (= lt!57363 (addStillNotContains!48 lt!57365 lt!57362 lt!57368 lt!57366))))

(assert (=> b!111101 (= lt!57366 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!111101 (= lt!57368 (get!1347 (select (arr!2082 (_values!2610 newMap!16)) #b00000000000000000000000000000000) (dynLambda!390 (defaultEntry!2627 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!111101 (= lt!57362 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!11867 () ListLongMap!1591)

(assert (=> b!111101 (= lt!57365 call!11867)))

(declare-fun e!72239 () ListLongMap!1591)

(assert (=> b!111101 (= e!72239 (+!150 call!11867 (tuple2!2441 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000) (get!1347 (select (arr!2082 (_values!2610 newMap!16)) #b00000000000000000000000000000000) (dynLambda!390 (defaultEntry!2627 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!111102 () Bool)

(declare-fun res!54922 () Bool)

(assert (=> b!111102 (=> (not res!54922) (not e!72243))))

(declare-fun lt!57364 () ListLongMap!1591)

(assert (=> b!111102 (= res!54922 (not (contains!838 lt!57364 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!111103 () Bool)

(declare-fun e!72238 () Bool)

(assert (=> b!111103 (= e!72240 e!72238)))

(assert (=> b!111103 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))))))

(declare-fun res!54923 () Bool)

(assert (=> b!111103 (= res!54923 (contains!838 lt!57364 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!111103 (=> (not res!54923) (not e!72238))))

(declare-fun b!111104 () Bool)

(assert (=> b!111104 (= e!72237 (validKeyInArray!0 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!111104 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!111105 () Bool)

(declare-fun e!72242 () ListLongMap!1591)

(assert (=> b!111105 (= e!72242 e!72239)))

(declare-fun c!19759 () Bool)

(assert (=> b!111105 (= c!19759 (validKeyInArray!0 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!31411 () Bool)

(assert (=> d!31411 e!72243))

(declare-fun res!54924 () Bool)

(assert (=> d!31411 (=> (not res!54924) (not e!72243))))

(assert (=> d!31411 (= res!54924 (not (contains!838 lt!57364 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!31411 (= lt!57364 e!72242)))

(declare-fun c!19762 () Bool)

(assert (=> d!31411 (= c!19762 (bvsge #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))))))

(assert (=> d!31411 (validMask!0 (mask!6795 newMap!16))))

(assert (=> d!31411 (= (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) lt!57364)))

(declare-fun b!111106 () Bool)

(assert (=> b!111106 (= e!72241 (= lt!57364 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2627 newMap!16))))))

(declare-fun b!111107 () Bool)

(assert (=> b!111107 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))))))

(assert (=> b!111107 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2339 (_values!2610 newMap!16))))))

(assert (=> b!111107 (= e!72238 (= (apply!100 lt!57364 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)) (get!1347 (select (arr!2082 (_values!2610 newMap!16)) #b00000000000000000000000000000000) (dynLambda!390 (defaultEntry!2627 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bm!11864 () Bool)

(assert (=> bm!11864 (= call!11867 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2627 newMap!16)))))

(declare-fun b!111108 () Bool)

(assert (=> b!111108 (= e!72239 call!11867)))

(declare-fun b!111109 () Bool)

(assert (=> b!111109 (= e!72241 (isEmpty!376 lt!57364))))

(declare-fun b!111110 () Bool)

(assert (=> b!111110 (= e!72242 (ListLongMap!1592 Nil!1627))))

(assert (= (and d!31411 c!19762) b!111110))

(assert (= (and d!31411 (not c!19762)) b!111105))

(assert (= (and b!111105 c!19759) b!111101))

(assert (= (and b!111105 (not c!19759)) b!111108))

(assert (= (or b!111101 b!111108) bm!11864))

(assert (= (and d!31411 res!54924) b!111102))

(assert (= (and b!111102 res!54922) b!111100))

(assert (= (and b!111100 res!54925) b!111104))

(assert (= (and b!111100 c!19761) b!111103))

(assert (= (and b!111100 (not c!19761)) b!111099))

(assert (= (and b!111103 res!54923) b!111107))

(assert (= (and b!111099 c!19760) b!111106))

(assert (= (and b!111099 (not c!19760)) b!111109))

(declare-fun b_lambda!4973 () Bool)

(assert (=> (not b_lambda!4973) (not b!111101)))

(assert (=> b!111101 t!5774))

(declare-fun b_and!6843 () Bool)

(assert (= b_and!6839 (and (=> t!5774 result!3537) b_and!6843)))

(assert (=> b!111101 t!5776))

(declare-fun b_and!6845 () Bool)

(assert (= b_and!6841 (and (=> t!5776 result!3539) b_and!6845)))

(declare-fun b_lambda!4975 () Bool)

(assert (=> (not b_lambda!4975) (not b!111107)))

(assert (=> b!111107 t!5774))

(declare-fun b_and!6847 () Bool)

(assert (= b_and!6843 (and (=> t!5774 result!3537) b_and!6847)))

(assert (=> b!111107 t!5776))

(declare-fun b_and!6849 () Bool)

(assert (= b_and!6845 (and (=> t!5776 result!3539) b_and!6849)))

(declare-fun m!126441 () Bool)

(assert (=> b!111106 m!126441))

(declare-fun m!126443 () Bool)

(assert (=> b!111102 m!126443))

(declare-fun m!126445 () Bool)

(assert (=> d!31411 m!126445))

(assert (=> d!31411 m!124669))

(assert (=> b!111107 m!124693))

(assert (=> b!111107 m!124953))

(assert (=> b!111107 m!124733))

(assert (=> b!111107 m!124955))

(assert (=> b!111107 m!124733))

(assert (=> b!111107 m!124953))

(assert (=> b!111107 m!124693))

(declare-fun m!126447 () Bool)

(assert (=> b!111107 m!126447))

(assert (=> b!111104 m!124693))

(assert (=> b!111104 m!124693))

(assert (=> b!111104 m!124695))

(assert (=> b!111105 m!124693))

(assert (=> b!111105 m!124693))

(assert (=> b!111105 m!124695))

(declare-fun m!126449 () Bool)

(assert (=> b!111109 m!126449))

(assert (=> b!111101 m!124693))

(declare-fun m!126451 () Bool)

(assert (=> b!111101 m!126451))

(declare-fun m!126453 () Bool)

(assert (=> b!111101 m!126453))

(declare-fun m!126455 () Bool)

(assert (=> b!111101 m!126455))

(assert (=> b!111101 m!124733))

(assert (=> b!111101 m!124953))

(assert (=> b!111101 m!126451))

(declare-fun m!126457 () Bool)

(assert (=> b!111101 m!126457))

(assert (=> b!111101 m!124953))

(assert (=> b!111101 m!124733))

(assert (=> b!111101 m!124955))

(assert (=> b!111103 m!124693))

(assert (=> b!111103 m!124693))

(declare-fun m!126459 () Bool)

(assert (=> b!111103 m!126459))

(assert (=> bm!11864 m!126441))

(assert (=> bm!11767 d!31411))

(declare-fun d!31413 () Bool)

(declare-fun lt!57369 () Bool)

(assert (=> d!31413 (= lt!57369 (select (content!114 (ite c!19484 (Cons!1627 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) Nil!1628) Nil!1628)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!72245 () Bool)

(assert (=> d!31413 (= lt!57369 e!72245)))

(declare-fun res!54926 () Bool)

(assert (=> d!31413 (=> (not res!54926) (not e!72245))))

(assert (=> d!31413 (= res!54926 ((_ is Cons!1627) (ite c!19484 (Cons!1627 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) Nil!1628) Nil!1628)))))

(assert (=> d!31413 (= (contains!840 (ite c!19484 (Cons!1627 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) Nil!1628) Nil!1628) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) lt!57369)))

(declare-fun b!111111 () Bool)

(declare-fun e!72244 () Bool)

(assert (=> b!111111 (= e!72245 e!72244)))

(declare-fun res!54927 () Bool)

(assert (=> b!111111 (=> res!54927 e!72244)))

(assert (=> b!111111 (= res!54927 (= (h!2226 (ite c!19484 (Cons!1627 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) Nil!1628) Nil!1628)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!111112 () Bool)

(assert (=> b!111112 (= e!72244 (contains!840 (t!5768 (ite c!19484 (Cons!1627 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) Nil!1628) Nil!1628)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!31413 res!54926) b!111111))

(assert (= (and b!111111 (not res!54927)) b!111112))

(declare-fun m!126461 () Bool)

(assert (=> d!31413 m!126461))

(assert (=> d!31413 m!125227))

(declare-fun m!126463 () Bool)

(assert (=> d!31413 m!126463))

(assert (=> b!111112 m!125227))

(declare-fun m!126465 () Bool)

(assert (=> b!111112 m!126465))

(assert (=> b!110400 d!31413))

(assert (=> bm!11800 d!30903))

(declare-fun d!31415 () Bool)

(declare-fun e!72246 () Bool)

(assert (=> d!31415 e!72246))

(declare-fun res!54928 () Bool)

(assert (=> d!31415 (=> (not res!54928) (not e!72246))))

(declare-fun lt!57372 () ListLongMap!1591)

(assert (=> d!31415 (= res!54928 (contains!838 lt!57372 (_1!1231 (ite (or c!19496 c!19501) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 newMap!16)) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16)))))))))

(declare-fun lt!57371 () List!1630)

(assert (=> d!31415 (= lt!57372 (ListLongMap!1592 lt!57371))))

(declare-fun lt!57373 () Unit!3403)

(declare-fun lt!57370 () Unit!3403)

(assert (=> d!31415 (= lt!57373 lt!57370)))

(assert (=> d!31415 (= (getValueByKey!158 lt!57371 (_1!1231 (ite (or c!19496 c!19501) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 newMap!16)) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16)))))) (Some!163 (_2!1231 (ite (or c!19496 c!19501) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 newMap!16)) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16)))))))))

(assert (=> d!31415 (= lt!57370 (lemmaContainsTupThenGetReturnValue!74 lt!57371 (_1!1231 (ite (or c!19496 c!19501) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 newMap!16)) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16))))) (_2!1231 (ite (or c!19496 c!19501) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 newMap!16)) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16)))))))))

(assert (=> d!31415 (= lt!57371 (insertStrictlySorted!77 (toList!811 (ite c!19496 call!11746 (ite c!19501 call!11743 call!11745))) (_1!1231 (ite (or c!19496 c!19501) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 newMap!16)) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16))))) (_2!1231 (ite (or c!19496 c!19501) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 newMap!16)) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16)))))))))

(assert (=> d!31415 (= (+!150 (ite c!19496 call!11746 (ite c!19501 call!11743 call!11745)) (ite (or c!19496 c!19501) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 newMap!16)) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16))))) lt!57372)))

(declare-fun b!111113 () Bool)

(declare-fun res!54929 () Bool)

(assert (=> b!111113 (=> (not res!54929) (not e!72246))))

(assert (=> b!111113 (= res!54929 (= (getValueByKey!158 (toList!811 lt!57372) (_1!1231 (ite (or c!19496 c!19501) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 newMap!16)) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16)))))) (Some!163 (_2!1231 (ite (or c!19496 c!19501) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 newMap!16)) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16))))))))))

(declare-fun b!111114 () Bool)

(assert (=> b!111114 (= e!72246 (contains!839 (toList!811 lt!57372) (ite (or c!19496 c!19501) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 newMap!16)) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19438 (ite c!19444 (minValue!2498 newMap!16) lt!56458) (minValue!2498 newMap!16))))))))

(assert (= (and d!31415 res!54928) b!111113))

(assert (= (and b!111113 res!54929) b!111114))

(declare-fun m!126467 () Bool)

(assert (=> d!31415 m!126467))

(declare-fun m!126469 () Bool)

(assert (=> d!31415 m!126469))

(declare-fun m!126471 () Bool)

(assert (=> d!31415 m!126471))

(declare-fun m!126473 () Bool)

(assert (=> d!31415 m!126473))

(declare-fun m!126475 () Bool)

(assert (=> b!111113 m!126475))

(declare-fun m!126477 () Bool)

(assert (=> b!111114 m!126477))

(assert (=> bm!11743 d!31415))

(declare-fun d!31417 () Bool)

(assert (=> d!31417 (= (isDefined!111 (getValueByKey!158 (toList!811 lt!56639) (_1!1231 lt!56457))) (not (isEmpty!377 (getValueByKey!158 (toList!811 lt!56639) (_1!1231 lt!56457)))))))

(declare-fun bs!4571 () Bool)

(assert (= bs!4571 d!31417))

(assert (=> bs!4571 m!124569))

(declare-fun m!126479 () Bool)

(assert (=> bs!4571 m!126479))

(assert (=> b!110324 d!31417))

(assert (=> b!110324 d!30925))

(declare-fun d!31419 () Bool)

(declare-fun lt!57374 () Bool)

(assert (=> d!31419 (= lt!57374 (select (content!113 lt!56630) (tuple2!2441 (_1!1231 lt!56454) (_2!1231 lt!56454))))))

(declare-fun e!72248 () Bool)

(assert (=> d!31419 (= lt!57374 e!72248)))

(declare-fun res!54930 () Bool)

(assert (=> d!31419 (=> (not res!54930) (not e!72248))))

(assert (=> d!31419 (= res!54930 ((_ is Cons!1626) lt!56630))))

(assert (=> d!31419 (= (contains!839 lt!56630 (tuple2!2441 (_1!1231 lt!56454) (_2!1231 lt!56454))) lt!57374)))

(declare-fun b!111115 () Bool)

(declare-fun e!72247 () Bool)

(assert (=> b!111115 (= e!72248 e!72247)))

(declare-fun res!54931 () Bool)

(assert (=> b!111115 (=> res!54931 e!72247)))

(assert (=> b!111115 (= res!54931 (= (h!2225 lt!56630) (tuple2!2441 (_1!1231 lt!56454) (_2!1231 lt!56454))))))

(declare-fun b!111116 () Bool)

(assert (=> b!111116 (= e!72247 (contains!839 (t!5767 lt!56630) (tuple2!2441 (_1!1231 lt!56454) (_2!1231 lt!56454))))))

(assert (= (and d!31419 res!54930) b!111115))

(assert (= (and b!111115 (not res!54931)) b!111116))

(declare-fun m!126481 () Bool)

(assert (=> d!31419 m!126481))

(declare-fun m!126483 () Bool)

(assert (=> d!31419 m!126483))

(declare-fun m!126485 () Bool)

(assert (=> b!111116 m!126485))

(assert (=> b!110420 d!31419))

(declare-fun d!31421 () Bool)

(assert (=> d!31421 (= (get!1350 (getValueByKey!158 (toList!811 lt!56698) lt!56696)) (v!2934 (getValueByKey!158 (toList!811 lt!56698) lt!56696)))))

(assert (=> d!30969 d!31421))

(declare-fun b!111117 () Bool)

(declare-fun e!72249 () Option!164)

(assert (=> b!111117 (= e!72249 (Some!163 (_2!1231 (h!2225 (toList!811 lt!56698)))))))

(declare-fun b!111119 () Bool)

(declare-fun e!72250 () Option!164)

(assert (=> b!111119 (= e!72250 (getValueByKey!158 (t!5767 (toList!811 lt!56698)) lt!56696))))

(declare-fun d!31423 () Bool)

(declare-fun c!19763 () Bool)

(assert (=> d!31423 (= c!19763 (and ((_ is Cons!1626) (toList!811 lt!56698)) (= (_1!1231 (h!2225 (toList!811 lt!56698))) lt!56696)))))

(assert (=> d!31423 (= (getValueByKey!158 (toList!811 lt!56698) lt!56696) e!72249)))

(declare-fun b!111118 () Bool)

(assert (=> b!111118 (= e!72249 e!72250)))

(declare-fun c!19764 () Bool)

(assert (=> b!111118 (= c!19764 (and ((_ is Cons!1626) (toList!811 lt!56698)) (not (= (_1!1231 (h!2225 (toList!811 lt!56698))) lt!56696))))))

(declare-fun b!111120 () Bool)

(assert (=> b!111120 (= e!72250 None!162)))

(assert (= (and d!31423 c!19763) b!111117))

(assert (= (and d!31423 (not c!19763)) b!111118))

(assert (= (and b!111118 c!19764) b!111119))

(assert (= (and b!111118 (not c!19764)) b!111120))

(declare-fun m!126487 () Bool)

(assert (=> b!111119 m!126487))

(assert (=> d!30969 d!31423))

(declare-fun b!111121 () Bool)

(declare-fun e!72255 () List!1630)

(declare-fun e!72254 () List!1630)

(assert (=> b!111121 (= e!72255 e!72254)))

(declare-fun c!19767 () Bool)

(assert (=> b!111121 (= c!19767 (and ((_ is Cons!1626) (t!5767 (toList!811 (+!150 lt!56462 lt!56457)))) (= (_1!1231 (h!2225 (t!5767 (toList!811 (+!150 lt!56462 lt!56457))))) (_1!1231 lt!56454))))))

(declare-fun bm!11865 () Bool)

(declare-fun call!11868 () List!1630)

(declare-fun call!11869 () List!1630)

(assert (=> bm!11865 (= call!11868 call!11869)))

(declare-fun b!111122 () Bool)

(assert (=> b!111122 (= e!72255 call!11869)))

(declare-fun bm!11866 () Bool)

(declare-fun call!11870 () List!1630)

(assert (=> bm!11866 (= call!11870 call!11868)))

(declare-fun c!19765 () Bool)

(declare-fun bm!11867 () Bool)

(declare-fun e!72253 () List!1630)

(assert (=> bm!11867 (= call!11869 ($colon$colon!83 e!72253 (ite c!19765 (h!2225 (t!5767 (toList!811 (+!150 lt!56462 lt!56457)))) (tuple2!2441 (_1!1231 lt!56454) (_2!1231 lt!56454)))))))

(declare-fun c!19768 () Bool)

(assert (=> bm!11867 (= c!19768 c!19765)))

(declare-fun b!111123 () Bool)

(assert (=> b!111123 (= e!72254 call!11868)))

(declare-fun b!111125 () Bool)

(declare-fun e!72252 () Bool)

(declare-fun lt!57375 () List!1630)

(assert (=> b!111125 (= e!72252 (contains!839 lt!57375 (tuple2!2441 (_1!1231 lt!56454) (_2!1231 lt!56454))))))

(declare-fun b!111126 () Bool)

(declare-fun e!72251 () List!1630)

(assert (=> b!111126 (= e!72251 call!11870)))

(declare-fun b!111127 () Bool)

(declare-fun res!54933 () Bool)

(assert (=> b!111127 (=> (not res!54933) (not e!72252))))

(assert (=> b!111127 (= res!54933 (containsKey!162 lt!57375 (_1!1231 lt!56454)))))

(declare-fun c!19766 () Bool)

(declare-fun b!111128 () Bool)

(assert (=> b!111128 (= c!19766 (and ((_ is Cons!1626) (t!5767 (toList!811 (+!150 lt!56462 lt!56457)))) (bvsgt (_1!1231 (h!2225 (t!5767 (toList!811 (+!150 lt!56462 lt!56457))))) (_1!1231 lt!56454))))))

(assert (=> b!111128 (= e!72254 e!72251)))

(declare-fun b!111129 () Bool)

(assert (=> b!111129 (= e!72251 call!11870)))

(declare-fun b!111130 () Bool)

(assert (=> b!111130 (= e!72253 (ite c!19767 (t!5767 (t!5767 (toList!811 (+!150 lt!56462 lt!56457)))) (ite c!19766 (Cons!1626 (h!2225 (t!5767 (toList!811 (+!150 lt!56462 lt!56457)))) (t!5767 (t!5767 (toList!811 (+!150 lt!56462 lt!56457))))) Nil!1627)))))

(declare-fun b!111124 () Bool)

(assert (=> b!111124 (= e!72253 (insertStrictlySorted!77 (t!5767 (t!5767 (toList!811 (+!150 lt!56462 lt!56457)))) (_1!1231 lt!56454) (_2!1231 lt!56454)))))

(declare-fun d!31425 () Bool)

(assert (=> d!31425 e!72252))

(declare-fun res!54932 () Bool)

(assert (=> d!31425 (=> (not res!54932) (not e!72252))))

(assert (=> d!31425 (= res!54932 (isStrictlySorted!311 lt!57375))))

(assert (=> d!31425 (= lt!57375 e!72255)))

(assert (=> d!31425 (= c!19765 (and ((_ is Cons!1626) (t!5767 (toList!811 (+!150 lt!56462 lt!56457)))) (bvslt (_1!1231 (h!2225 (t!5767 (toList!811 (+!150 lt!56462 lt!56457))))) (_1!1231 lt!56454))))))

(assert (=> d!31425 (isStrictlySorted!311 (t!5767 (toList!811 (+!150 lt!56462 lt!56457))))))

(assert (=> d!31425 (= (insertStrictlySorted!77 (t!5767 (toList!811 (+!150 lt!56462 lt!56457))) (_1!1231 lt!56454) (_2!1231 lt!56454)) lt!57375)))

(assert (= (and d!31425 c!19765) b!111122))

(assert (= (and d!31425 (not c!19765)) b!111121))

(assert (= (and b!111121 c!19767) b!111123))

(assert (= (and b!111121 (not c!19767)) b!111128))

(assert (= (and b!111128 c!19766) b!111126))

(assert (= (and b!111128 (not c!19766)) b!111129))

(assert (= (or b!111126 b!111129) bm!11866))

(assert (= (or b!111123 bm!11866) bm!11865))

(assert (= (or b!111122 bm!11865) bm!11867))

(assert (= (and bm!11867 c!19768) b!111124))

(assert (= (and bm!11867 (not c!19768)) b!111130))

(assert (= (and d!31425 res!54932) b!111127))

(assert (= (and b!111127 res!54933) b!111125))

(declare-fun m!126489 () Bool)

(assert (=> b!111127 m!126489))

(declare-fun m!126491 () Bool)

(assert (=> b!111124 m!126491))

(declare-fun m!126493 () Bool)

(assert (=> b!111125 m!126493))

(declare-fun m!126495 () Bool)

(assert (=> d!31425 m!126495))

(assert (=> d!31425 m!126133))

(declare-fun m!126497 () Bool)

(assert (=> bm!11867 m!126497))

(assert (=> b!110165 d!31425))

(declare-fun b!111131 () Bool)

(declare-fun e!72256 () Option!164)

(assert (=> b!111131 (= e!72256 (Some!163 (_2!1231 (h!2225 (toList!811 lt!57049)))))))

(declare-fun b!111133 () Bool)

(declare-fun e!72257 () Option!164)

(assert (=> b!111133 (= e!72257 (getValueByKey!158 (t!5767 (toList!811 lt!57049)) (_1!1231 (tuple2!2441 lt!56610 lt!56616))))))

(declare-fun c!19769 () Bool)

(declare-fun d!31427 () Bool)

(assert (=> d!31427 (= c!19769 (and ((_ is Cons!1626) (toList!811 lt!57049)) (= (_1!1231 (h!2225 (toList!811 lt!57049))) (_1!1231 (tuple2!2441 lt!56610 lt!56616)))))))

(assert (=> d!31427 (= (getValueByKey!158 (toList!811 lt!57049) (_1!1231 (tuple2!2441 lt!56610 lt!56616))) e!72256)))

(declare-fun b!111132 () Bool)

(assert (=> b!111132 (= e!72256 e!72257)))

(declare-fun c!19770 () Bool)

(assert (=> b!111132 (= c!19770 (and ((_ is Cons!1626) (toList!811 lt!57049)) (not (= (_1!1231 (h!2225 (toList!811 lt!57049))) (_1!1231 (tuple2!2441 lt!56610 lt!56616))))))))

(declare-fun b!111134 () Bool)

(assert (=> b!111134 (= e!72257 None!162)))

(assert (= (and d!31427 c!19769) b!111131))

(assert (= (and d!31427 (not c!19769)) b!111132))

(assert (= (and b!111132 c!19770) b!111133))

(assert (= (and b!111132 (not c!19770)) b!111134))

(declare-fun m!126499 () Bool)

(assert (=> b!111133 m!126499))

(assert (=> b!110496 d!31427))

(declare-fun d!31429 () Bool)

(assert (=> d!31429 (= (apply!100 lt!56747 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1350 (getValueByKey!158 (toList!811 lt!56747) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4572 () Bool)

(assert (= bs!4572 d!31429))

(assert (=> bs!4572 m!125749))

(assert (=> bs!4572 m!125749))

(declare-fun m!126501 () Bool)

(assert (=> bs!4572 m!126501))

(assert (=> b!110108 d!31429))

(declare-fun d!31431 () Bool)

(declare-fun lt!57376 () Bool)

(assert (=> d!31431 (= lt!57376 (select (content!113 (toList!811 lt!57044)) (ite c!19438 (ite c!19444 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))

(declare-fun e!72259 () Bool)

(assert (=> d!31431 (= lt!57376 e!72259)))

(declare-fun res!54934 () Bool)

(assert (=> d!31431 (=> (not res!54934) (not e!72259))))

(assert (=> d!31431 (= res!54934 ((_ is Cons!1626) (toList!811 lt!57044)))))

(assert (=> d!31431 (= (contains!839 (toList!811 lt!57044) (ite c!19438 (ite c!19444 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))) lt!57376)))

(declare-fun b!111135 () Bool)

(declare-fun e!72258 () Bool)

(assert (=> b!111135 (= e!72259 e!72258)))

(declare-fun res!54935 () Bool)

(assert (=> b!111135 (=> res!54935 e!72258)))

(assert (=> b!111135 (= res!54935 (= (h!2225 (toList!811 lt!57044)) (ite c!19438 (ite c!19444 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))

(declare-fun b!111136 () Bool)

(assert (=> b!111136 (= e!72258 (contains!839 (t!5767 (toList!811 lt!57044)) (ite c!19438 (ite c!19444 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))

(assert (= (and d!31431 res!54934) b!111135))

(assert (= (and b!111135 (not res!54935)) b!111136))

(declare-fun m!126503 () Bool)

(assert (=> d!31431 m!126503))

(declare-fun m!126505 () Bool)

(assert (=> d!31431 m!126505))

(declare-fun m!126507 () Bool)

(assert (=> b!111136 m!126507))

(assert (=> b!110493 d!31431))

(declare-fun d!31433 () Bool)

(declare-fun lt!57377 () Bool)

(assert (=> d!31433 (= lt!57377 (select (content!113 (toList!811 lt!56939)) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun e!72261 () Bool)

(assert (=> d!31433 (= lt!57377 e!72261)))

(declare-fun res!54936 () Bool)

(assert (=> d!31433 (=> (not res!54936) (not e!72261))))

(assert (=> d!31433 (= res!54936 ((_ is Cons!1626) (toList!811 lt!56939)))))

(assert (=> d!31433 (= (contains!839 (toList!811 lt!56939) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))) lt!57377)))

(declare-fun b!111137 () Bool)

(declare-fun e!72260 () Bool)

(assert (=> b!111137 (= e!72261 e!72260)))

(declare-fun res!54937 () Bool)

(assert (=> b!111137 (=> res!54937 e!72260)))

(assert (=> b!111137 (= res!54937 (= (h!2225 (toList!811 lt!56939)) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun b!111138 () Bool)

(assert (=> b!111138 (= e!72260 (contains!839 (t!5767 (toList!811 lt!56939)) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))))

(assert (= (and d!31433 res!54936) b!111137))

(assert (= (and b!111137 (not res!54937)) b!111138))

(declare-fun m!126509 () Bool)

(assert (=> d!31433 m!126509))

(declare-fun m!126511 () Bool)

(assert (=> d!31433 m!126511))

(declare-fun m!126513 () Bool)

(assert (=> b!111138 m!126513))

(assert (=> b!110408 d!31433))

(assert (=> b!110297 d!31105))

(declare-fun d!31435 () Bool)

(assert (=> d!31435 (= (get!1350 (getValueByKey!158 (toList!811 (+!150 lt!56692 (tuple2!2441 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))) lt!56703)) (v!2934 (getValueByKey!158 (toList!811 (+!150 lt!56692 (tuple2!2441 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))) lt!56703)))))

(assert (=> d!30949 d!31435))

(declare-fun e!72262 () Option!164)

(declare-fun b!111139 () Bool)

(assert (=> b!111139 (= e!72262 (Some!163 (_2!1231 (h!2225 (toList!811 (+!150 lt!56692 (tuple2!2441 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))))))))

(declare-fun b!111141 () Bool)

(declare-fun e!72263 () Option!164)

(assert (=> b!111141 (= e!72263 (getValueByKey!158 (t!5767 (toList!811 (+!150 lt!56692 (tuple2!2441 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))) lt!56703))))

(declare-fun c!19771 () Bool)

(declare-fun d!31437 () Bool)

(assert (=> d!31437 (= c!19771 (and ((_ is Cons!1626) (toList!811 (+!150 lt!56692 (tuple2!2441 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))) (= (_1!1231 (h!2225 (toList!811 (+!150 lt!56692 (tuple2!2441 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))) lt!56703)))))

(assert (=> d!31437 (= (getValueByKey!158 (toList!811 (+!150 lt!56692 (tuple2!2441 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))) lt!56703) e!72262)))

(declare-fun b!111140 () Bool)

(assert (=> b!111140 (= e!72262 e!72263)))

(declare-fun c!19772 () Bool)

(assert (=> b!111140 (= c!19772 (and ((_ is Cons!1626) (toList!811 (+!150 lt!56692 (tuple2!2441 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))) (not (= (_1!1231 (h!2225 (toList!811 (+!150 lt!56692 (tuple2!2441 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))) lt!56703))))))

(declare-fun b!111142 () Bool)

(assert (=> b!111142 (= e!72263 None!162)))

(assert (= (and d!31437 c!19771) b!111139))

(assert (= (and d!31437 (not c!19771)) b!111140))

(assert (= (and b!111140 c!19772) b!111141))

(assert (= (and b!111140 (not c!19772)) b!111142))

(declare-fun m!126515 () Bool)

(assert (=> b!111141 m!126515))

(assert (=> d!30949 d!31437))

(declare-fun d!31439 () Bool)

(declare-fun lt!57378 () Bool)

(assert (=> d!31439 (= lt!57378 (select (content!113 lt!56863) (tuple2!2441 (_1!1231 lt!56457) (_2!1231 lt!56457))))))

(declare-fun e!72265 () Bool)

(assert (=> d!31439 (= lt!57378 e!72265)))

(declare-fun res!54938 () Bool)

(assert (=> d!31439 (=> (not res!54938) (not e!72265))))

(assert (=> d!31439 (= res!54938 ((_ is Cons!1626) lt!56863))))

(assert (=> d!31439 (= (contains!839 lt!56863 (tuple2!2441 (_1!1231 lt!56457) (_2!1231 lt!56457))) lt!57378)))

(declare-fun b!111143 () Bool)

(declare-fun e!72264 () Bool)

(assert (=> b!111143 (= e!72265 e!72264)))

(declare-fun res!54939 () Bool)

(assert (=> b!111143 (=> res!54939 e!72264)))

(assert (=> b!111143 (= res!54939 (= (h!2225 lt!56863) (tuple2!2441 (_1!1231 lt!56457) (_2!1231 lt!56457))))))

(declare-fun b!111144 () Bool)

(assert (=> b!111144 (= e!72264 (contains!839 (t!5767 lt!56863) (tuple2!2441 (_1!1231 lt!56457) (_2!1231 lt!56457))))))

(assert (= (and d!31439 res!54938) b!111143))

(assert (= (and b!111143 (not res!54939)) b!111144))

(declare-fun m!126517 () Bool)

(assert (=> d!31439 m!126517))

(declare-fun m!126519 () Bool)

(assert (=> d!31439 m!126519))

(declare-fun m!126521 () Bool)

(assert (=> b!111144 m!126521))

(assert (=> b!110335 d!31439))

(assert (=> b!110120 d!31105))

(declare-fun d!31441 () Bool)

(assert (=> d!31441 (= (get!1350 (getValueByKey!158 (toList!811 lt!56692) lt!56703)) (v!2934 (getValueByKey!158 (toList!811 lt!56692) lt!56703)))))

(assert (=> d!30959 d!31441))

(declare-fun b!111145 () Bool)

(declare-fun e!72266 () Option!164)

(assert (=> b!111145 (= e!72266 (Some!163 (_2!1231 (h!2225 (toList!811 lt!56692)))))))

(declare-fun b!111147 () Bool)

(declare-fun e!72267 () Option!164)

(assert (=> b!111147 (= e!72267 (getValueByKey!158 (t!5767 (toList!811 lt!56692)) lt!56703))))

(declare-fun d!31443 () Bool)

(declare-fun c!19773 () Bool)

(assert (=> d!31443 (= c!19773 (and ((_ is Cons!1626) (toList!811 lt!56692)) (= (_1!1231 (h!2225 (toList!811 lt!56692))) lt!56703)))))

(assert (=> d!31443 (= (getValueByKey!158 (toList!811 lt!56692) lt!56703) e!72266)))

(declare-fun b!111146 () Bool)

(assert (=> b!111146 (= e!72266 e!72267)))

(declare-fun c!19774 () Bool)

(assert (=> b!111146 (= c!19774 (and ((_ is Cons!1626) (toList!811 lt!56692)) (not (= (_1!1231 (h!2225 (toList!811 lt!56692))) lt!56703))))))

(declare-fun b!111148 () Bool)

(assert (=> b!111148 (= e!72267 None!162)))

(assert (= (and d!31443 c!19773) b!111145))

(assert (= (and d!31443 (not c!19773)) b!111146))

(assert (= (and b!111146 c!19774) b!111147))

(assert (= (and b!111146 (not c!19774)) b!111148))

(declare-fun m!126523 () Bool)

(assert (=> b!111147 m!126523))

(assert (=> d!30959 d!31443))

(assert (=> d!31027 d!30851))

(declare-fun d!31445 () Bool)

(assert (=> d!31445 (contains!838 (getCurrentListMap!496 (_keys!4341 newMap!16) lt!56569 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) (select (arr!2081 (_keys!4341 newMap!16)) (index!3195 lt!56591)))))

(assert (=> d!31445 true))

(declare-fun _$16!132 () Unit!3403)

(assert (=> d!31445 (= (choose!685 (_keys!4341 newMap!16) lt!56569 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (index!3195 lt!56591) (defaultEntry!2627 newMap!16)) _$16!132)))

(declare-fun bs!4573 () Bool)

(assert (= bs!4573 d!31445))

(assert (=> bs!4573 m!124671))

(assert (=> bs!4573 m!124439))

(assert (=> bs!4573 m!124671))

(assert (=> bs!4573 m!124439))

(assert (=> bs!4573 m!124673))

(assert (=> d!30875 d!31445))

(assert (=> d!30875 d!31129))

(declare-fun d!31447 () Bool)

(declare-fun lt!57379 () Bool)

(assert (=> d!31447 (= lt!57379 (select (content!113 lt!56950) (tuple2!2441 (_1!1231 lt!56454) (_2!1231 lt!56454))))))

(declare-fun e!72269 () Bool)

(assert (=> d!31447 (= lt!57379 e!72269)))

(declare-fun res!54940 () Bool)

(assert (=> d!31447 (=> (not res!54940) (not e!72269))))

(assert (=> d!31447 (= res!54940 ((_ is Cons!1626) lt!56950))))

(assert (=> d!31447 (= (contains!839 lt!56950 (tuple2!2441 (_1!1231 lt!56454) (_2!1231 lt!56454))) lt!57379)))

(declare-fun b!111149 () Bool)

(declare-fun e!72268 () Bool)

(assert (=> b!111149 (= e!72269 e!72268)))

(declare-fun res!54941 () Bool)

(assert (=> b!111149 (=> res!54941 e!72268)))

(assert (=> b!111149 (= res!54941 (= (h!2225 lt!56950) (tuple2!2441 (_1!1231 lt!56454) (_2!1231 lt!56454))))))

(declare-fun b!111150 () Bool)

(assert (=> b!111150 (= e!72268 (contains!839 (t!5767 lt!56950) (tuple2!2441 (_1!1231 lt!56454) (_2!1231 lt!56454))))))

(assert (= (and d!31447 res!54940) b!111149))

(assert (= (and b!111149 (not res!54941)) b!111150))

(declare-fun m!126525 () Bool)

(assert (=> d!31447 m!126525))

(declare-fun m!126527 () Bool)

(assert (=> d!31447 m!126527))

(declare-fun m!126529 () Bool)

(assert (=> b!111150 m!126529))

(assert (=> b!110425 d!31447))

(declare-fun d!31449 () Bool)

(declare-fun e!72270 () Bool)

(assert (=> d!31449 e!72270))

(declare-fun res!54942 () Bool)

(assert (=> d!31449 (=> res!54942 e!72270)))

(declare-fun lt!57380 () Bool)

(assert (=> d!31449 (= res!54942 (not lt!57380))))

(declare-fun lt!57381 () Bool)

(assert (=> d!31449 (= lt!57380 lt!57381)))

(declare-fun lt!57383 () Unit!3403)

(declare-fun e!72271 () Unit!3403)

(assert (=> d!31449 (= lt!57383 e!72271)))

(declare-fun c!19775 () Bool)

(assert (=> d!31449 (= c!19775 lt!57381)))

(assert (=> d!31449 (= lt!57381 (containsKey!162 (toList!811 lt!56824) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!31449 (= (contains!838 lt!56824 #b1000000000000000000000000000000000000000000000000000000000000000) lt!57380)))

(declare-fun b!111151 () Bool)

(declare-fun lt!57382 () Unit!3403)

(assert (=> b!111151 (= e!72271 lt!57382)))

(assert (=> b!111151 (= lt!57382 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 lt!56824) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!111151 (isDefined!111 (getValueByKey!158 (toList!811 lt!56824) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!111152 () Bool)

(declare-fun Unit!3456 () Unit!3403)

(assert (=> b!111152 (= e!72271 Unit!3456)))

(declare-fun b!111153 () Bool)

(assert (=> b!111153 (= e!72270 (isDefined!111 (getValueByKey!158 (toList!811 lt!56824) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!31449 c!19775) b!111151))

(assert (= (and d!31449 (not c!19775)) b!111152))

(assert (= (and d!31449 (not res!54942)) b!111153))

(declare-fun m!126531 () Bool)

(assert (=> d!31449 m!126531))

(declare-fun m!126533 () Bool)

(assert (=> b!111151 m!126533))

(declare-fun m!126535 () Bool)

(assert (=> b!111151 m!126535))

(assert (=> b!111151 m!126535))

(declare-fun m!126537 () Bool)

(assert (=> b!111151 m!126537))

(assert (=> b!111153 m!126535))

(assert (=> b!111153 m!126535))

(assert (=> b!111153 m!126537))

(assert (=> bm!11768 d!31449))

(assert (=> d!31005 d!31009))

(assert (=> d!31005 d!31007))

(assert (=> d!31005 d!31003))

(assert (=> d!31005 d!31011))

(declare-fun d!31451 () Bool)

(declare-fun res!54943 () Bool)

(declare-fun e!72272 () Bool)

(assert (=> d!31451 (=> res!54943 e!72272)))

(assert (=> d!31451 (= res!54943 (and ((_ is Cons!1626) lt!56638) (= (_1!1231 (h!2225 lt!56638)) (_1!1231 lt!56457))))))

(assert (=> d!31451 (= (containsKey!162 lt!56638 (_1!1231 lt!56457)) e!72272)))

(declare-fun b!111154 () Bool)

(declare-fun e!72273 () Bool)

(assert (=> b!111154 (= e!72272 e!72273)))

(declare-fun res!54944 () Bool)

(assert (=> b!111154 (=> (not res!54944) (not e!72273))))

(assert (=> b!111154 (= res!54944 (and (or (not ((_ is Cons!1626) lt!56638)) (bvsle (_1!1231 (h!2225 lt!56638)) (_1!1231 lt!56457))) ((_ is Cons!1626) lt!56638) (bvslt (_1!1231 (h!2225 lt!56638)) (_1!1231 lt!56457))))))

(declare-fun b!111155 () Bool)

(assert (=> b!111155 (= e!72273 (containsKey!162 (t!5767 lt!56638) (_1!1231 lt!56457)))))

(assert (= (and d!31451 (not res!54943)) b!111154))

(assert (= (and b!111154 res!54944) b!111155))

(declare-fun m!126539 () Bool)

(assert (=> b!111155 m!126539))

(assert (=> b!110329 d!31451))

(declare-fun d!31453 () Bool)

(assert (=> d!31453 (= (apply!100 lt!56798 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1350 (getValueByKey!158 (toList!811 lt!56798) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(declare-fun bs!4574 () Bool)

(assert (= bs!4574 d!31453))

(assert (=> bs!4574 m!124865))

(declare-fun m!126541 () Bool)

(assert (=> bs!4574 m!126541))

(assert (=> bs!4574 m!126541))

(declare-fun m!126543 () Bool)

(assert (=> bs!4574 m!126543))

(assert (=> b!110253 d!31453))

(assert (=> b!110253 d!31147))

(declare-fun d!31455 () Bool)

(assert (=> d!31455 (= (isDefined!111 (getValueByKey!158 (toList!811 lt!56699) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!377 (getValueByKey!158 (toList!811 lt!56699) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4575 () Bool)

(assert (= bs!4575 d!31455))

(assert (=> bs!4575 m!124685))

(declare-fun m!126545 () Bool)

(assert (=> bs!4575 m!126545))

(assert (=> b!110101 d!31455))

(assert (=> b!110101 d!31085))

(declare-fun lt!57384 () Bool)

(declare-fun d!31457 () Bool)

(assert (=> d!31457 (= lt!57384 (select (content!113 (toList!811 lt!56894)) (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun e!72275 () Bool)

(assert (=> d!31457 (= lt!57384 e!72275)))

(declare-fun res!54945 () Bool)

(assert (=> d!31457 (=> (not res!54945) (not e!72275))))

(assert (=> d!31457 (= res!54945 ((_ is Cons!1626) (toList!811 lt!56894)))))

(assert (=> d!31457 (= (contains!839 (toList!811 lt!56894) (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))) lt!57384)))

(declare-fun b!111156 () Bool)

(declare-fun e!72274 () Bool)

(assert (=> b!111156 (= e!72275 e!72274)))

(declare-fun res!54946 () Bool)

(assert (=> b!111156 (=> res!54946 e!72274)))

(assert (=> b!111156 (= res!54946 (= (h!2225 (toList!811 lt!56894)) (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun b!111157 () Bool)

(assert (=> b!111157 (= e!72274 (contains!839 (t!5767 (toList!811 lt!56894)) (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))))

(assert (= (and d!31457 res!54945) b!111156))

(assert (= (and b!111156 (not res!54946)) b!111157))

(declare-fun m!126547 () Bool)

(assert (=> d!31457 m!126547))

(declare-fun m!126549 () Bool)

(assert (=> d!31457 m!126549))

(declare-fun m!126551 () Bool)

(assert (=> b!111157 m!126551))

(assert (=> b!110360 d!31457))

(assert (=> bm!11763 d!30903))

(assert (=> b!110516 d!31383))

(declare-fun d!31459 () Bool)

(assert (=> d!31459 (= (isDefined!111 (getValueByKey!158 (toList!811 lt!56612) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!377 (getValueByKey!158 (toList!811 lt!56612) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!4576 () Bool)

(assert (= bs!4576 d!31459))

(assert (=> bs!4576 m!125325))

(declare-fun m!126553 () Bool)

(assert (=> bs!4576 m!126553))

(assert (=> b!110533 d!31459))

(assert (=> b!110533 d!31375))

(declare-fun d!31461 () Bool)

(declare-fun lt!57385 () Bool)

(assert (=> d!31461 (= lt!57385 (select (content!113 lt!56634) (tuple2!2441 (_1!1231 lt!56454) (_2!1231 lt!56454))))))

(declare-fun e!72277 () Bool)

(assert (=> d!31461 (= lt!57385 e!72277)))

(declare-fun res!54947 () Bool)

(assert (=> d!31461 (=> (not res!54947) (not e!72277))))

(assert (=> d!31461 (= res!54947 ((_ is Cons!1626) lt!56634))))

(assert (=> d!31461 (= (contains!839 lt!56634 (tuple2!2441 (_1!1231 lt!56454) (_2!1231 lt!56454))) lt!57385)))

(declare-fun b!111158 () Bool)

(declare-fun e!72276 () Bool)

(assert (=> b!111158 (= e!72277 e!72276)))

(declare-fun res!54948 () Bool)

(assert (=> b!111158 (=> res!54948 e!72276)))

(assert (=> b!111158 (= res!54948 (= (h!2225 lt!56634) (tuple2!2441 (_1!1231 lt!56454) (_2!1231 lt!56454))))))

(declare-fun b!111159 () Bool)

(assert (=> b!111159 (= e!72276 (contains!839 (t!5767 lt!56634) (tuple2!2441 (_1!1231 lt!56454) (_2!1231 lt!56454))))))

(assert (= (and d!31461 res!54947) b!111158))

(assert (= (and b!111158 (not res!54948)) b!111159))

(declare-fun m!126555 () Bool)

(assert (=> d!31461 m!126555))

(declare-fun m!126557 () Bool)

(assert (=> d!31461 m!126557))

(declare-fun m!126559 () Bool)

(assert (=> b!111159 m!126559))

(assert (=> b!110141 d!31461))

(declare-fun d!31463 () Bool)

(assert (=> d!31463 (= (isDefined!111 (getValueByKey!158 (toList!811 lt!56699) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!377 (getValueByKey!158 (toList!811 lt!56699) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4577 () Bool)

(assert (= bs!4577 d!31463))

(assert (=> bs!4577 m!125167))

(declare-fun m!126561 () Bool)

(assert (=> bs!4577 m!126561))

(assert (=> b!110363 d!31463))

(declare-fun b!111160 () Bool)

(declare-fun e!72278 () Option!164)

(assert (=> b!111160 (= e!72278 (Some!163 (_2!1231 (h!2225 (toList!811 lt!56699)))))))

(declare-fun b!111162 () Bool)

(declare-fun e!72279 () Option!164)

(assert (=> b!111162 (= e!72279 (getValueByKey!158 (t!5767 (toList!811 lt!56699)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!31465 () Bool)

(declare-fun c!19776 () Bool)

(assert (=> d!31465 (= c!19776 (and ((_ is Cons!1626) (toList!811 lt!56699)) (= (_1!1231 (h!2225 (toList!811 lt!56699))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!31465 (= (getValueByKey!158 (toList!811 lt!56699) #b1000000000000000000000000000000000000000000000000000000000000000) e!72278)))

(declare-fun b!111161 () Bool)

(assert (=> b!111161 (= e!72278 e!72279)))

(declare-fun c!19777 () Bool)

(assert (=> b!111161 (= c!19777 (and ((_ is Cons!1626) (toList!811 lt!56699)) (not (= (_1!1231 (h!2225 (toList!811 lt!56699))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!111163 () Bool)

(assert (=> b!111163 (= e!72279 None!162)))

(assert (= (and d!31465 c!19776) b!111160))

(assert (= (and d!31465 (not c!19776)) b!111161))

(assert (= (and b!111161 c!19777) b!111162))

(assert (= (and b!111161 (not c!19777)) b!111163))

(declare-fun m!126563 () Bool)

(assert (=> b!111162 m!126563))

(assert (=> b!110363 d!31465))

(assert (=> b!110309 d!31105))

(declare-fun d!31467 () Bool)

(declare-fun e!72280 () Bool)

(assert (=> d!31467 e!72280))

(declare-fun res!54949 () Bool)

(assert (=> d!31467 (=> res!54949 e!72280)))

(declare-fun lt!57386 () Bool)

(assert (=> d!31467 (= res!54949 (not lt!57386))))

(declare-fun lt!57387 () Bool)

(assert (=> d!31467 (= lt!57386 lt!57387)))

(declare-fun lt!57389 () Unit!3403)

(declare-fun e!72281 () Unit!3403)

(assert (=> d!31467 (= lt!57389 e!72281)))

(declare-fun c!19778 () Bool)

(assert (=> d!31467 (= c!19778 lt!57387)))

(assert (=> d!31467 (= lt!57387 (containsKey!162 (toList!811 lt!57044) (_1!1231 (ite c!19438 (ite c!19444 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))))))

(assert (=> d!31467 (= (contains!838 lt!57044 (_1!1231 (ite c!19438 (ite c!19444 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))) lt!57386)))

(declare-fun b!111164 () Bool)

(declare-fun lt!57388 () Unit!3403)

(assert (=> b!111164 (= e!72281 lt!57388)))

(assert (=> b!111164 (= lt!57388 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 lt!57044) (_1!1231 (ite c!19438 (ite c!19444 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))))))

(assert (=> b!111164 (isDefined!111 (getValueByKey!158 (toList!811 lt!57044) (_1!1231 (ite c!19438 (ite c!19444 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))))))

(declare-fun b!111165 () Bool)

(declare-fun Unit!3457 () Unit!3403)

(assert (=> b!111165 (= e!72281 Unit!3457)))

(declare-fun b!111166 () Bool)

(assert (=> b!111166 (= e!72280 (isDefined!111 (getValueByKey!158 (toList!811 lt!57044) (_1!1231 (ite c!19438 (ite c!19444 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))))

(assert (= (and d!31467 c!19778) b!111164))

(assert (= (and d!31467 (not c!19778)) b!111165))

(assert (= (and d!31467 (not res!54949)) b!111166))

(declare-fun m!126565 () Bool)

(assert (=> d!31467 m!126565))

(declare-fun m!126567 () Bool)

(assert (=> b!111164 m!126567))

(assert (=> b!111164 m!125399))

(assert (=> b!111164 m!125399))

(declare-fun m!126569 () Bool)

(assert (=> b!111164 m!126569))

(assert (=> b!111166 m!125399))

(assert (=> b!111166 m!125399))

(assert (=> b!111166 m!126569))

(assert (=> d!31039 d!31467))

(declare-fun b!111167 () Bool)

(declare-fun e!72282 () Option!164)

(assert (=> b!111167 (= e!72282 (Some!163 (_2!1231 (h!2225 lt!57043))))))

(declare-fun e!72283 () Option!164)

(declare-fun b!111169 () Bool)

(assert (=> b!111169 (= e!72283 (getValueByKey!158 (t!5767 lt!57043) (_1!1231 (ite c!19438 (ite c!19444 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))))))

(declare-fun c!19779 () Bool)

(declare-fun d!31469 () Bool)

(assert (=> d!31469 (= c!19779 (and ((_ is Cons!1626) lt!57043) (= (_1!1231 (h!2225 lt!57043)) (_1!1231 (ite c!19438 (ite c!19444 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))))

(assert (=> d!31469 (= (getValueByKey!158 lt!57043 (_1!1231 (ite c!19438 (ite c!19444 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))) e!72282)))

(declare-fun b!111168 () Bool)

(assert (=> b!111168 (= e!72282 e!72283)))

(declare-fun c!19780 () Bool)

(assert (=> b!111168 (= c!19780 (and ((_ is Cons!1626) lt!57043) (not (= (_1!1231 (h!2225 lt!57043)) (_1!1231 (ite c!19438 (ite c!19444 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))))))))

(declare-fun b!111170 () Bool)

(assert (=> b!111170 (= e!72283 None!162)))

(assert (= (and d!31469 c!19779) b!111167))

(assert (= (and d!31469 (not c!19779)) b!111168))

(assert (= (and b!111168 c!19780) b!111169))

(assert (= (and b!111168 (not c!19780)) b!111170))

(declare-fun m!126571 () Bool)

(assert (=> b!111169 m!126571))

(assert (=> d!31039 d!31469))

(declare-fun d!31471 () Bool)

(assert (=> d!31471 (= (getValueByKey!158 lt!57043 (_1!1231 (ite c!19438 (ite c!19444 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))) (Some!163 (_2!1231 (ite c!19438 (ite c!19444 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))))))

(declare-fun lt!57390 () Unit!3403)

(assert (=> d!31471 (= lt!57390 (choose!687 lt!57043 (_1!1231 (ite c!19438 (ite c!19444 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))) (_2!1231 (ite c!19438 (ite c!19444 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))))))

(declare-fun e!72284 () Bool)

(assert (=> d!31471 e!72284))

(declare-fun res!54950 () Bool)

(assert (=> d!31471 (=> (not res!54950) (not e!72284))))

(assert (=> d!31471 (= res!54950 (isStrictlySorted!311 lt!57043))))

(assert (=> d!31471 (= (lemmaContainsTupThenGetReturnValue!74 lt!57043 (_1!1231 (ite c!19438 (ite c!19444 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))) (_2!1231 (ite c!19438 (ite c!19444 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))) lt!57390)))

(declare-fun b!111171 () Bool)

(declare-fun res!54951 () Bool)

(assert (=> b!111171 (=> (not res!54951) (not e!72284))))

(assert (=> b!111171 (= res!54951 (containsKey!162 lt!57043 (_1!1231 (ite c!19438 (ite c!19444 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))))))

(declare-fun b!111172 () Bool)

(assert (=> b!111172 (= e!72284 (contains!839 lt!57043 (tuple2!2441 (_1!1231 (ite c!19438 (ite c!19444 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))) (_2!1231 (ite c!19438 (ite c!19444 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))))

(assert (= (and d!31471 res!54950) b!111171))

(assert (= (and b!111171 res!54951) b!111172))

(assert (=> d!31471 m!125393))

(declare-fun m!126573 () Bool)

(assert (=> d!31471 m!126573))

(declare-fun m!126575 () Bool)

(assert (=> d!31471 m!126575))

(declare-fun m!126577 () Bool)

(assert (=> b!111171 m!126577))

(declare-fun m!126579 () Bool)

(assert (=> b!111172 m!126579))

(assert (=> d!31039 d!31471))

(declare-fun b!111173 () Bool)

(declare-fun e!72289 () List!1630)

(declare-fun e!72288 () List!1630)

(assert (=> b!111173 (= e!72289 e!72288)))

(declare-fun c!19783 () Bool)

(assert (=> b!111173 (= c!19783 (and ((_ is Cons!1626) (toList!811 e!71499)) (= (_1!1231 (h!2225 (toList!811 e!71499))) (_1!1231 (ite c!19438 (ite c!19444 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))))

(declare-fun bm!11868 () Bool)

(declare-fun call!11871 () List!1630)

(declare-fun call!11872 () List!1630)

(assert (=> bm!11868 (= call!11871 call!11872)))

(declare-fun b!111174 () Bool)

(assert (=> b!111174 (= e!72289 call!11872)))

(declare-fun bm!11869 () Bool)

(declare-fun call!11873 () List!1630)

(assert (=> bm!11869 (= call!11873 call!11871)))

(declare-fun bm!11870 () Bool)

(declare-fun c!19781 () Bool)

(declare-fun e!72287 () List!1630)

(assert (=> bm!11870 (= call!11872 ($colon$colon!83 e!72287 (ite c!19781 (h!2225 (toList!811 e!71499)) (tuple2!2441 (_1!1231 (ite c!19438 (ite c!19444 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))) (_2!1231 (ite c!19438 (ite c!19444 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))))))))

(declare-fun c!19784 () Bool)

(assert (=> bm!11870 (= c!19784 c!19781)))

(declare-fun b!111175 () Bool)

(assert (=> b!111175 (= e!72288 call!11871)))

(declare-fun lt!57391 () List!1630)

(declare-fun b!111177 () Bool)

(declare-fun e!72286 () Bool)

(assert (=> b!111177 (= e!72286 (contains!839 lt!57391 (tuple2!2441 (_1!1231 (ite c!19438 (ite c!19444 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))) (_2!1231 (ite c!19438 (ite c!19444 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))))

(declare-fun b!111178 () Bool)

(declare-fun e!72285 () List!1630)

(assert (=> b!111178 (= e!72285 call!11873)))

(declare-fun b!111179 () Bool)

(declare-fun res!54953 () Bool)

(assert (=> b!111179 (=> (not res!54953) (not e!72286))))

(assert (=> b!111179 (= res!54953 (containsKey!162 lt!57391 (_1!1231 (ite c!19438 (ite c!19444 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))))))

(declare-fun b!111180 () Bool)

(declare-fun c!19782 () Bool)

(assert (=> b!111180 (= c!19782 (and ((_ is Cons!1626) (toList!811 e!71499)) (bvsgt (_1!1231 (h!2225 (toList!811 e!71499))) (_1!1231 (ite c!19438 (ite c!19444 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))))

(assert (=> b!111180 (= e!72288 e!72285)))

(declare-fun b!111181 () Bool)

(assert (=> b!111181 (= e!72285 call!11873)))

(declare-fun b!111182 () Bool)

(assert (=> b!111182 (= e!72287 (ite c!19783 (t!5767 (toList!811 e!71499)) (ite c!19782 (Cons!1626 (h!2225 (toList!811 e!71499)) (t!5767 (toList!811 e!71499))) Nil!1627)))))

(declare-fun b!111176 () Bool)

(assert (=> b!111176 (= e!72287 (insertStrictlySorted!77 (t!5767 (toList!811 e!71499)) (_1!1231 (ite c!19438 (ite c!19444 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))) (_2!1231 (ite c!19438 (ite c!19444 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))))))

(declare-fun d!31473 () Bool)

(assert (=> d!31473 e!72286))

(declare-fun res!54952 () Bool)

(assert (=> d!31473 (=> (not res!54952) (not e!72286))))

(assert (=> d!31473 (= res!54952 (isStrictlySorted!311 lt!57391))))

(assert (=> d!31473 (= lt!57391 e!72289)))

(assert (=> d!31473 (= c!19781 (and ((_ is Cons!1626) (toList!811 e!71499)) (bvslt (_1!1231 (h!2225 (toList!811 e!71499))) (_1!1231 (ite c!19438 (ite c!19444 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))))

(assert (=> d!31473 (isStrictlySorted!311 (toList!811 e!71499))))

(assert (=> d!31473 (= (insertStrictlySorted!77 (toList!811 e!71499) (_1!1231 (ite c!19438 (ite c!19444 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))) (_2!1231 (ite c!19438 (ite c!19444 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))) lt!57391)))

(assert (= (and d!31473 c!19781) b!111174))

(assert (= (and d!31473 (not c!19781)) b!111173))

(assert (= (and b!111173 c!19783) b!111175))

(assert (= (and b!111173 (not c!19783)) b!111180))

(assert (= (and b!111180 c!19782) b!111178))

(assert (= (and b!111180 (not c!19782)) b!111181))

(assert (= (or b!111178 b!111181) bm!11869))

(assert (= (or b!111175 bm!11869) bm!11868))

(assert (= (or b!111174 bm!11868) bm!11870))

(assert (= (and bm!11870 c!19784) b!111176))

(assert (= (and bm!11870 (not c!19784)) b!111182))

(assert (= (and d!31473 res!54952) b!111179))

(assert (= (and b!111179 res!54953) b!111177))

(declare-fun m!126581 () Bool)

(assert (=> b!111179 m!126581))

(declare-fun m!126583 () Bool)

(assert (=> b!111176 m!126583))

(declare-fun m!126585 () Bool)

(assert (=> b!111177 m!126585))

(declare-fun m!126587 () Bool)

(assert (=> d!31473 m!126587))

(declare-fun m!126589 () Bool)

(assert (=> d!31473 m!126589))

(declare-fun m!126591 () Bool)

(assert (=> bm!11870 m!126591))

(assert (=> d!31039 d!31473))

(declare-fun d!31475 () Bool)

(declare-fun e!72290 () Bool)

(assert (=> d!31475 e!72290))

(declare-fun res!54954 () Bool)

(assert (=> d!31475 (=> res!54954 e!72290)))

(declare-fun lt!57392 () Bool)

(assert (=> d!31475 (= res!54954 (not lt!57392))))

(declare-fun lt!57393 () Bool)

(assert (=> d!31475 (= lt!57392 lt!57393)))

(declare-fun lt!57395 () Unit!3403)

(declare-fun e!72291 () Unit!3403)

(assert (=> d!31475 (= lt!57395 e!72291)))

(declare-fun c!19785 () Bool)

(assert (=> d!31475 (= c!19785 lt!57393)))

(assert (=> d!31475 (= lt!57393 (containsKey!162 (toList!811 lt!56939) (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> d!31475 (= (contains!838 lt!56939 (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))) lt!57392)))

(declare-fun b!111183 () Bool)

(declare-fun lt!57394 () Unit!3403)

(assert (=> b!111183 (= e!72291 lt!57394)))

(assert (=> b!111183 (= lt!57394 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 lt!56939) (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> b!111183 (isDefined!111 (getValueByKey!158 (toList!811 lt!56939) (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun b!111184 () Bool)

(declare-fun Unit!3458 () Unit!3403)

(assert (=> b!111184 (= e!72291 Unit!3458)))

(declare-fun b!111185 () Bool)

(assert (=> b!111185 (= e!72290 (isDefined!111 (getValueByKey!158 (toList!811 lt!56939) (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(assert (= (and d!31475 c!19785) b!111183))

(assert (= (and d!31475 (not c!19785)) b!111184))

(assert (= (and d!31475 (not res!54954)) b!111185))

(declare-fun m!126593 () Bool)

(assert (=> d!31475 m!126593))

(declare-fun m!126595 () Bool)

(assert (=> b!111183 m!126595))

(assert (=> b!111183 m!125279))

(assert (=> b!111183 m!125279))

(declare-fun m!126597 () Bool)

(assert (=> b!111183 m!126597))

(assert (=> b!111185 m!125279))

(assert (=> b!111185 m!125279))

(assert (=> b!111185 m!126597))

(assert (=> d!31011 d!31475))

(declare-fun b!111186 () Bool)

(declare-fun e!72292 () Option!164)

(assert (=> b!111186 (= e!72292 (Some!163 (_2!1231 (h!2225 lt!56938))))))

(declare-fun b!111188 () Bool)

(declare-fun e!72293 () Option!164)

(assert (=> b!111188 (= e!72293 (getValueByKey!158 (t!5767 lt!56938) (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun d!31477 () Bool)

(declare-fun c!19786 () Bool)

(assert (=> d!31477 (= c!19786 (and ((_ is Cons!1626) lt!56938) (= (_1!1231 (h!2225 lt!56938)) (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> d!31477 (= (getValueByKey!158 lt!56938 (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))) e!72292)))

(declare-fun b!111187 () Bool)

(assert (=> b!111187 (= e!72292 e!72293)))

(declare-fun c!19787 () Bool)

(assert (=> b!111187 (= c!19787 (and ((_ is Cons!1626) lt!56938) (not (= (_1!1231 (h!2225 lt!56938)) (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))))

(declare-fun b!111189 () Bool)

(assert (=> b!111189 (= e!72293 None!162)))

(assert (= (and d!31477 c!19786) b!111186))

(assert (= (and d!31477 (not c!19786)) b!111187))

(assert (= (and b!111187 c!19787) b!111188))

(assert (= (and b!111187 (not c!19787)) b!111189))

(declare-fun m!126599 () Bool)

(assert (=> b!111188 m!126599))

(assert (=> d!31011 d!31477))

(declare-fun d!31479 () Bool)

(assert (=> d!31479 (= (getValueByKey!158 lt!56938 (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))) (Some!163 (_2!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun lt!57396 () Unit!3403)

(assert (=> d!31479 (= lt!57396 (choose!687 lt!56938 (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))) (_2!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun e!72294 () Bool)

(assert (=> d!31479 e!72294))

(declare-fun res!54955 () Bool)

(assert (=> d!31479 (=> (not res!54955) (not e!72294))))

(assert (=> d!31479 (= res!54955 (isStrictlySorted!311 lt!56938))))

(assert (=> d!31479 (= (lemmaContainsTupThenGetReturnValue!74 lt!56938 (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))) (_2!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))) lt!57396)))

(declare-fun b!111190 () Bool)

(declare-fun res!54956 () Bool)

(assert (=> b!111190 (=> (not res!54956) (not e!72294))))

(assert (=> b!111190 (= res!54956 (containsKey!162 lt!56938 (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun b!111191 () Bool)

(assert (=> b!111191 (= e!72294 (contains!839 lt!56938 (tuple2!2441 (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))) (_2!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(assert (= (and d!31479 res!54955) b!111190))

(assert (= (and b!111190 res!54956) b!111191))

(assert (=> d!31479 m!125273))

(declare-fun m!126601 () Bool)

(assert (=> d!31479 m!126601))

(declare-fun m!126603 () Bool)

(assert (=> d!31479 m!126603))

(declare-fun m!126605 () Bool)

(assert (=> b!111190 m!126605))

(declare-fun m!126607 () Bool)

(assert (=> b!111191 m!126607))

(assert (=> d!31011 d!31479))

(declare-fun b!111192 () Bool)

(declare-fun e!72299 () List!1630)

(declare-fun e!72298 () List!1630)

(assert (=> b!111192 (= e!72299 e!72298)))

(declare-fun c!19790 () Bool)

(assert (=> b!111192 (= c!19790 (and ((_ is Cons!1626) (toList!811 lt!56462)) (= (_1!1231 (h!2225 (toList!811 lt!56462))) (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(declare-fun bm!11871 () Bool)

(declare-fun call!11874 () List!1630)

(declare-fun call!11875 () List!1630)

(assert (=> bm!11871 (= call!11874 call!11875)))

(declare-fun b!111193 () Bool)

(assert (=> b!111193 (= e!72299 call!11875)))

(declare-fun bm!11872 () Bool)

(declare-fun call!11876 () List!1630)

(assert (=> bm!11872 (= call!11876 call!11874)))

(declare-fun c!19788 () Bool)

(declare-fun e!72297 () List!1630)

(declare-fun bm!11873 () Bool)

(assert (=> bm!11873 (= call!11875 ($colon$colon!83 e!72297 (ite c!19788 (h!2225 (toList!811 lt!56462)) (tuple2!2441 (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))) (_2!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))))

(declare-fun c!19791 () Bool)

(assert (=> bm!11873 (= c!19791 c!19788)))

(declare-fun b!111194 () Bool)

(assert (=> b!111194 (= e!72298 call!11874)))

(declare-fun b!111196 () Bool)

(declare-fun e!72296 () Bool)

(declare-fun lt!57397 () List!1630)

(assert (=> b!111196 (= e!72296 (contains!839 lt!57397 (tuple2!2441 (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))) (_2!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(declare-fun b!111197 () Bool)

(declare-fun e!72295 () List!1630)

(assert (=> b!111197 (= e!72295 call!11876)))

(declare-fun b!111198 () Bool)

(declare-fun res!54958 () Bool)

(assert (=> b!111198 (=> (not res!54958) (not e!72296))))

(assert (=> b!111198 (= res!54958 (containsKey!162 lt!57397 (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun b!111199 () Bool)

(declare-fun c!19789 () Bool)

(assert (=> b!111199 (= c!19789 (and ((_ is Cons!1626) (toList!811 lt!56462)) (bvsgt (_1!1231 (h!2225 (toList!811 lt!56462))) (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> b!111199 (= e!72298 e!72295)))

(declare-fun b!111200 () Bool)

(assert (=> b!111200 (= e!72295 call!11876)))

(declare-fun b!111201 () Bool)

(assert (=> b!111201 (= e!72297 (ite c!19790 (t!5767 (toList!811 lt!56462)) (ite c!19789 (Cons!1626 (h!2225 (toList!811 lt!56462)) (t!5767 (toList!811 lt!56462))) Nil!1627)))))

(declare-fun b!111195 () Bool)

(assert (=> b!111195 (= e!72297 (insertStrictlySorted!77 (t!5767 (toList!811 lt!56462)) (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))) (_2!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun d!31481 () Bool)

(assert (=> d!31481 e!72296))

(declare-fun res!54957 () Bool)

(assert (=> d!31481 (=> (not res!54957) (not e!72296))))

(assert (=> d!31481 (= res!54957 (isStrictlySorted!311 lt!57397))))

(assert (=> d!31481 (= lt!57397 e!72299)))

(assert (=> d!31481 (= c!19788 (and ((_ is Cons!1626) (toList!811 lt!56462)) (bvslt (_1!1231 (h!2225 (toList!811 lt!56462))) (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> d!31481 (isStrictlySorted!311 (toList!811 lt!56462))))

(assert (=> d!31481 (= (insertStrictlySorted!77 (toList!811 lt!56462) (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))) (_2!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))) lt!57397)))

(assert (= (and d!31481 c!19788) b!111193))

(assert (= (and d!31481 (not c!19788)) b!111192))

(assert (= (and b!111192 c!19790) b!111194))

(assert (= (and b!111192 (not c!19790)) b!111199))

(assert (= (and b!111199 c!19789) b!111197))

(assert (= (and b!111199 (not c!19789)) b!111200))

(assert (= (or b!111197 b!111200) bm!11872))

(assert (= (or b!111194 bm!11872) bm!11871))

(assert (= (or b!111193 bm!11871) bm!11873))

(assert (= (and bm!11873 c!19791) b!111195))

(assert (= (and bm!11873 (not c!19791)) b!111201))

(assert (= (and d!31481 res!54957) b!111198))

(assert (= (and b!111198 res!54958) b!111196))

(declare-fun m!126609 () Bool)

(assert (=> b!111198 m!126609))

(declare-fun m!126611 () Bool)

(assert (=> b!111195 m!126611))

(declare-fun m!126613 () Bool)

(assert (=> b!111196 m!126613))

(declare-fun m!126615 () Bool)

(assert (=> d!31481 m!126615))

(assert (=> d!31481 m!125051))

(declare-fun m!126617 () Bool)

(assert (=> bm!11873 m!126617))

(assert (=> d!31011 d!31481))

(declare-fun d!31483 () Bool)

(assert (=> d!31483 (contains!838 (getCurrentListMap!496 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355))))

(declare-fun lt!57400 () Unit!3403)

(declare-fun choose!696 (array!4389 array!4391 (_ BitVec 32) (_ BitVec 32) V!3243 V!3243 (_ BitVec 64) (_ BitVec 32) Int) Unit!3403)

(assert (=> d!31483 (= lt!57400 (choose!696 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(assert (=> d!31483 (validMask!0 (mask!6795 newMap!16))))

(assert (=> d!31483 (= (lemmaArrayContainsKeyThenInListMap!32 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) lt!57400)))

(declare-fun bs!4578 () Bool)

(assert (= bs!4578 d!31483))

(assert (=> bs!4578 m!124485))

(assert (=> bs!4578 m!124485))

(assert (=> bs!4578 m!124315))

(assert (=> bs!4578 m!125377))

(assert (=> bs!4578 m!124315))

(declare-fun m!126619 () Bool)

(assert (=> bs!4578 m!126619))

(assert (=> bs!4578 m!124669))

(assert (=> b!110479 d!31483))

(assert (=> b!110479 d!31339))

(assert (=> b!110479 d!30931))

(declare-fun d!31485 () Bool)

(assert (=> d!31485 (= (isDefined!111 (getValueByKey!158 (toList!811 (+!150 lt!56613 (tuple2!2441 lt!56610 lt!56616))) lt!56614)) (not (isEmpty!377 (getValueByKey!158 (toList!811 (+!150 lt!56613 (tuple2!2441 lt!56610 lt!56616))) lt!56614))))))

(declare-fun bs!4579 () Bool)

(assert (= bs!4579 d!31485))

(assert (=> bs!4579 m!125439))

(declare-fun m!126621 () Bool)

(assert (=> bs!4579 m!126621))

(assert (=> b!110502 d!31485))

(declare-fun b!111202 () Bool)

(declare-fun e!72300 () Option!164)

(assert (=> b!111202 (= e!72300 (Some!163 (_2!1231 (h!2225 (toList!811 (+!150 lt!56613 (tuple2!2441 lt!56610 lt!56616)))))))))

(declare-fun b!111204 () Bool)

(declare-fun e!72301 () Option!164)

(assert (=> b!111204 (= e!72301 (getValueByKey!158 (t!5767 (toList!811 (+!150 lt!56613 (tuple2!2441 lt!56610 lt!56616)))) lt!56614))))

(declare-fun c!19792 () Bool)

(declare-fun d!31487 () Bool)

(assert (=> d!31487 (= c!19792 (and ((_ is Cons!1626) (toList!811 (+!150 lt!56613 (tuple2!2441 lt!56610 lt!56616)))) (= (_1!1231 (h!2225 (toList!811 (+!150 lt!56613 (tuple2!2441 lt!56610 lt!56616))))) lt!56614)))))

(assert (=> d!31487 (= (getValueByKey!158 (toList!811 (+!150 lt!56613 (tuple2!2441 lt!56610 lt!56616))) lt!56614) e!72300)))

(declare-fun b!111203 () Bool)

(assert (=> b!111203 (= e!72300 e!72301)))

(declare-fun c!19793 () Bool)

(assert (=> b!111203 (= c!19793 (and ((_ is Cons!1626) (toList!811 (+!150 lt!56613 (tuple2!2441 lt!56610 lt!56616)))) (not (= (_1!1231 (h!2225 (toList!811 (+!150 lt!56613 (tuple2!2441 lt!56610 lt!56616))))) lt!56614))))))

(declare-fun b!111205 () Bool)

(assert (=> b!111205 (= e!72301 None!162)))

(assert (= (and d!31487 c!19792) b!111202))

(assert (= (and d!31487 (not c!19792)) b!111203))

(assert (= (and b!111203 c!19793) b!111204))

(assert (= (and b!111203 (not c!19793)) b!111205))

(declare-fun m!126623 () Bool)

(assert (=> b!111204 m!126623))

(assert (=> b!110502 d!31487))

(declare-fun d!31489 () Bool)

(declare-fun res!54959 () Bool)

(declare-fun e!72302 () Bool)

(assert (=> d!31489 (=> res!54959 e!72302)))

(assert (=> d!31489 (= res!54959 (and ((_ is Cons!1626) lt!56630) (= (_1!1231 (h!2225 lt!56630)) (_1!1231 lt!56454))))))

(assert (=> d!31489 (= (containsKey!162 lt!56630 (_1!1231 lt!56454)) e!72302)))

(declare-fun b!111206 () Bool)

(declare-fun e!72303 () Bool)

(assert (=> b!111206 (= e!72302 e!72303)))

(declare-fun res!54960 () Bool)

(assert (=> b!111206 (=> (not res!54960) (not e!72303))))

(assert (=> b!111206 (= res!54960 (and (or (not ((_ is Cons!1626) lt!56630)) (bvsle (_1!1231 (h!2225 lt!56630)) (_1!1231 lt!56454))) ((_ is Cons!1626) lt!56630) (bvslt (_1!1231 (h!2225 lt!56630)) (_1!1231 lt!56454))))))

(declare-fun b!111207 () Bool)

(assert (=> b!111207 (= e!72303 (containsKey!162 (t!5767 lt!56630) (_1!1231 lt!56454)))))

(assert (= (and d!31489 (not res!54959)) b!111206))

(assert (= (and b!111206 res!54960) b!111207))

(declare-fun m!126625 () Bool)

(assert (=> b!111207 m!126625))

(assert (=> b!110419 d!31489))

(assert (=> d!30951 d!30973))

(assert (=> d!30951 d!30949))

(declare-fun d!31491 () Bool)

(declare-fun e!72304 () Bool)

(assert (=> d!31491 e!72304))

(declare-fun res!54961 () Bool)

(assert (=> d!31491 (=> res!54961 e!72304)))

(declare-fun lt!57401 () Bool)

(assert (=> d!31491 (= res!54961 (not lt!57401))))

(declare-fun lt!57402 () Bool)

(assert (=> d!31491 (= lt!57401 lt!57402)))

(declare-fun lt!57404 () Unit!3403)

(declare-fun e!72305 () Unit!3403)

(assert (=> d!31491 (= lt!57404 e!72305)))

(declare-fun c!19794 () Bool)

(assert (=> d!31491 (= c!19794 lt!57402)))

(assert (=> d!31491 (= lt!57402 (containsKey!162 (toList!811 lt!56692) lt!56703))))

(assert (=> d!31491 (= (contains!838 lt!56692 lt!56703) lt!57401)))

(declare-fun b!111208 () Bool)

(declare-fun lt!57403 () Unit!3403)

(assert (=> b!111208 (= e!72305 lt!57403)))

(assert (=> b!111208 (= lt!57403 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 lt!56692) lt!56703))))

(assert (=> b!111208 (isDefined!111 (getValueByKey!158 (toList!811 lt!56692) lt!56703))))

(declare-fun b!111209 () Bool)

(declare-fun Unit!3459 () Unit!3403)

(assert (=> b!111209 (= e!72305 Unit!3459)))

(declare-fun b!111210 () Bool)

(assert (=> b!111210 (= e!72304 (isDefined!111 (getValueByKey!158 (toList!811 lt!56692) lt!56703)))))

(assert (= (and d!31491 c!19794) b!111208))

(assert (= (and d!31491 (not c!19794)) b!111209))

(assert (= (and d!31491 (not res!54961)) b!111210))

(declare-fun m!126627 () Bool)

(assert (=> d!31491 m!126627))

(declare-fun m!126629 () Bool)

(assert (=> b!111208 m!126629))

(assert (=> b!111208 m!125087))

(assert (=> b!111208 m!125087))

(declare-fun m!126631 () Bool)

(assert (=> b!111208 m!126631))

(assert (=> b!111210 m!125087))

(assert (=> b!111210 m!125087))

(assert (=> b!111210 m!126631))

(assert (=> d!30951 d!31491))

(declare-fun d!31493 () Bool)

(assert (=> d!31493 (= (apply!100 (+!150 lt!56692 (tuple2!2441 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))) lt!56703) (apply!100 lt!56692 lt!56703))))

(assert (=> d!31493 true))

(declare-fun _$34!906 () Unit!3403)

(assert (=> d!31493 (= (choose!691 lt!56692 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))) lt!56703) _$34!906)))

(declare-fun bs!4580 () Bool)

(assert (= bs!4580 d!31493))

(assert (=> bs!4580 m!124579))

(assert (=> bs!4580 m!124579))

(assert (=> bs!4580 m!124581))

(assert (=> bs!4580 m!124597))

(assert (=> d!30951 d!31493))

(assert (=> d!30951 d!30959))

(declare-fun d!31495 () Bool)

(assert (=> d!31495 (= (get!1350 (getValueByKey!158 (toList!811 lt!56699) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!2934 (getValueByKey!158 (toList!811 lt!56699) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!31065 d!31495))

(assert (=> d!31065 d!31465))

(assert (=> bm!11741 d!31205))

(declare-fun b!111212 () Bool)

(declare-fun e!72310 () List!1630)

(declare-fun e!72309 () List!1630)

(assert (=> b!111212 (= e!72310 e!72309)))

(declare-fun c!19797 () Bool)

(assert (=> b!111212 (= c!19797 (and ((_ is Cons!1626) (t!5767 (toList!811 lt!56462))) (= (_1!1231 (h!2225 (t!5767 (toList!811 lt!56462)))) (_1!1231 lt!56457))))))

(declare-fun bm!11874 () Bool)

(declare-fun call!11877 () List!1630)

(declare-fun call!11878 () List!1630)

(assert (=> bm!11874 (= call!11877 call!11878)))

(declare-fun b!111213 () Bool)

(assert (=> b!111213 (= e!72310 call!11878)))

(declare-fun bm!11875 () Bool)

(declare-fun call!11879 () List!1630)

(assert (=> bm!11875 (= call!11879 call!11877)))

(declare-fun bm!11876 () Bool)

(declare-fun e!72308 () List!1630)

(declare-fun c!19795 () Bool)

(assert (=> bm!11876 (= call!11878 ($colon$colon!83 e!72308 (ite c!19795 (h!2225 (t!5767 (toList!811 lt!56462))) (tuple2!2441 (_1!1231 lt!56457) (_2!1231 lt!56457)))))))

(declare-fun c!19798 () Bool)

(assert (=> bm!11876 (= c!19798 c!19795)))

(declare-fun b!111214 () Bool)

(assert (=> b!111214 (= e!72309 call!11877)))

(declare-fun b!111216 () Bool)

(declare-fun e!72307 () Bool)

(declare-fun lt!57405 () List!1630)

(assert (=> b!111216 (= e!72307 (contains!839 lt!57405 (tuple2!2441 (_1!1231 lt!56457) (_2!1231 lt!56457))))))

(declare-fun b!111217 () Bool)

(declare-fun e!72306 () List!1630)

(assert (=> b!111217 (= e!72306 call!11879)))

(declare-fun b!111218 () Bool)

(declare-fun res!54963 () Bool)

(assert (=> b!111218 (=> (not res!54963) (not e!72307))))

(assert (=> b!111218 (= res!54963 (containsKey!162 lt!57405 (_1!1231 lt!56457)))))

(declare-fun b!111219 () Bool)

(declare-fun c!19796 () Bool)

(assert (=> b!111219 (= c!19796 (and ((_ is Cons!1626) (t!5767 (toList!811 lt!56462))) (bvsgt (_1!1231 (h!2225 (t!5767 (toList!811 lt!56462)))) (_1!1231 lt!56457))))))

(assert (=> b!111219 (= e!72309 e!72306)))

(declare-fun b!111220 () Bool)

(assert (=> b!111220 (= e!72306 call!11879)))

(declare-fun b!111221 () Bool)

(assert (=> b!111221 (= e!72308 (ite c!19797 (t!5767 (t!5767 (toList!811 lt!56462))) (ite c!19796 (Cons!1626 (h!2225 (t!5767 (toList!811 lt!56462))) (t!5767 (t!5767 (toList!811 lt!56462)))) Nil!1627)))))

(declare-fun b!111215 () Bool)

(assert (=> b!111215 (= e!72308 (insertStrictlySorted!77 (t!5767 (t!5767 (toList!811 lt!56462))) (_1!1231 lt!56457) (_2!1231 lt!56457)))))

(declare-fun d!31497 () Bool)

(assert (=> d!31497 e!72307))

(declare-fun res!54962 () Bool)

(assert (=> d!31497 (=> (not res!54962) (not e!72307))))

(assert (=> d!31497 (= res!54962 (isStrictlySorted!311 lt!57405))))

(assert (=> d!31497 (= lt!57405 e!72310)))

(assert (=> d!31497 (= c!19795 (and ((_ is Cons!1626) (t!5767 (toList!811 lt!56462))) (bvslt (_1!1231 (h!2225 (t!5767 (toList!811 lt!56462)))) (_1!1231 lt!56457))))))

(assert (=> d!31497 (isStrictlySorted!311 (t!5767 (toList!811 lt!56462)))))

(assert (=> d!31497 (= (insertStrictlySorted!77 (t!5767 (toList!811 lt!56462)) (_1!1231 lt!56457) (_2!1231 lt!56457)) lt!57405)))

(assert (= (and d!31497 c!19795) b!111213))

(assert (= (and d!31497 (not c!19795)) b!111212))

(assert (= (and b!111212 c!19797) b!111214))

(assert (= (and b!111212 (not c!19797)) b!111219))

(assert (= (and b!111219 c!19796) b!111217))

(assert (= (and b!111219 (not c!19796)) b!111220))

(assert (= (or b!111217 b!111220) bm!11875))

(assert (= (or b!111214 bm!11875) bm!11874))

(assert (= (or b!111213 bm!11874) bm!11876))

(assert (= (and bm!11876 c!19798) b!111215))

(assert (= (and bm!11876 (not c!19798)) b!111221))

(assert (= (and d!31497 res!54962) b!111218))

(assert (= (and b!111218 res!54963) b!111216))

(declare-fun m!126633 () Bool)

(assert (=> b!111218 m!126633))

(declare-fun m!126635 () Bool)

(assert (=> b!111215 m!126635))

(declare-fun m!126637 () Bool)

(assert (=> b!111216 m!126637))

(declare-fun m!126639 () Bool)

(assert (=> d!31497 m!126639))

(assert (=> d!31497 m!125723))

(declare-fun m!126641 () Bool)

(assert (=> bm!11876 m!126641))

(assert (=> b!110334 d!31497))

(declare-fun b!111222 () Bool)

(declare-fun e!72311 () (_ BitVec 32))

(declare-fun call!11880 () (_ BitVec 32))

(assert (=> b!111222 (= e!72311 (bvadd #b00000000000000000000000000000001 call!11880))))

(declare-fun d!31499 () Bool)

(declare-fun lt!57406 () (_ BitVec 32))

(assert (=> d!31499 (and (bvsge lt!57406 #b00000000000000000000000000000000) (bvsle lt!57406 (bvsub (size!2338 (_keys!4341 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun e!72312 () (_ BitVec 32))

(assert (=> d!31499 (= lt!57406 e!72312)))

(declare-fun c!19799 () Bool)

(assert (=> d!31499 (= c!19799 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2338 (_keys!4341 newMap!16))))))

(assert (=> d!31499 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2338 (_keys!4341 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2338 (_keys!4341 newMap!16)) (size!2338 (_keys!4341 newMap!16))))))

(assert (=> d!31499 (= (arrayCountValidKeys!0 (_keys!4341 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2338 (_keys!4341 newMap!16))) lt!57406)))

(declare-fun b!111223 () Bool)

(assert (=> b!111223 (= e!72311 call!11880)))

(declare-fun bm!11877 () Bool)

(assert (=> bm!11877 (= call!11880 (arrayCountValidKeys!0 (_keys!4341 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2338 (_keys!4341 newMap!16))))))

(declare-fun b!111224 () Bool)

(assert (=> b!111224 (= e!72312 e!72311)))

(declare-fun c!19800 () Bool)

(assert (=> b!111224 (= c!19800 (validKeyInArray!0 (select (arr!2081 (_keys!4341 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!111225 () Bool)

(assert (=> b!111225 (= e!72312 #b00000000000000000000000000000000)))

(assert (= (and d!31499 c!19799) b!111225))

(assert (= (and d!31499 (not c!19799)) b!111224))

(assert (= (and b!111224 c!19800) b!111222))

(assert (= (and b!111224 (not c!19800)) b!111223))

(assert (= (or b!111222 b!111223) bm!11877))

(declare-fun m!126643 () Bool)

(assert (=> bm!11877 m!126643))

(assert (=> b!111224 m!125617))

(assert (=> b!111224 m!125617))

(assert (=> b!111224 m!125619))

(assert (=> bm!11775 d!31499))

(assert (=> d!30955 d!30969))

(declare-fun d!31501 () Bool)

(declare-fun e!72313 () Bool)

(assert (=> d!31501 e!72313))

(declare-fun res!54964 () Bool)

(assert (=> d!31501 (=> res!54964 e!72313)))

(declare-fun lt!57407 () Bool)

(assert (=> d!31501 (= res!54964 (not lt!57407))))

(declare-fun lt!57408 () Bool)

(assert (=> d!31501 (= lt!57407 lt!57408)))

(declare-fun lt!57410 () Unit!3403)

(declare-fun e!72314 () Unit!3403)

(assert (=> d!31501 (= lt!57410 e!72314)))

(declare-fun c!19801 () Bool)

(assert (=> d!31501 (= c!19801 lt!57408)))

(assert (=> d!31501 (= lt!57408 (containsKey!162 (toList!811 lt!56698) lt!56696))))

(assert (=> d!31501 (= (contains!838 lt!56698 lt!56696) lt!57407)))

(declare-fun b!111226 () Bool)

(declare-fun lt!57409 () Unit!3403)

(assert (=> b!111226 (= e!72314 lt!57409)))

(assert (=> b!111226 (= lt!57409 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 lt!56698) lt!56696))))

(assert (=> b!111226 (isDefined!111 (getValueByKey!158 (toList!811 lt!56698) lt!56696))))

(declare-fun b!111227 () Bool)

(declare-fun Unit!3460 () Unit!3403)

(assert (=> b!111227 (= e!72314 Unit!3460)))

(declare-fun b!111228 () Bool)

(assert (=> b!111228 (= e!72313 (isDefined!111 (getValueByKey!158 (toList!811 lt!56698) lt!56696)))))

(assert (= (and d!31501 c!19801) b!111226))

(assert (= (and d!31501 (not c!19801)) b!111227))

(assert (= (and d!31501 (not res!54964)) b!111228))

(declare-fun m!126645 () Bool)

(assert (=> d!31501 m!126645))

(declare-fun m!126647 () Bool)

(assert (=> b!111226 m!126647))

(assert (=> b!111226 m!125123))

(assert (=> b!111226 m!125123))

(declare-fun m!126649 () Bool)

(assert (=> b!111226 m!126649))

(assert (=> b!111228 m!125123))

(assert (=> b!111228 m!125123))

(assert (=> b!111228 m!126649))

(assert (=> d!30955 d!31501))

(declare-fun d!31503 () Bool)

(assert (=> d!31503 (= (apply!100 (+!150 lt!56698 (tuple2!2441 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992))))) lt!56696) (apply!100 lt!56698 lt!56696))))

(assert (=> d!31503 true))

(declare-fun _$34!907 () Unit!3403)

(assert (=> d!31503 (= (choose!691 lt!56698 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992))) lt!56696) _$34!907)))

(declare-fun bs!4581 () Bool)

(assert (= bs!4581 d!31503))

(assert (=> bs!4581 m!124585))

(assert (=> bs!4581 m!124585))

(assert (=> bs!4581 m!124605))

(assert (=> bs!4581 m!124607))

(assert (=> d!30955 d!31503))

(assert (=> d!30955 d!30961))

(assert (=> d!30955 d!30963))

(declare-fun b!111229 () Bool)

(declare-fun e!72315 () Option!164)

(assert (=> b!111229 (= e!72315 (Some!163 (_2!1231 (h!2225 (toList!811 lt!57044)))))))

(declare-fun e!72316 () Option!164)

(declare-fun b!111231 () Bool)

(assert (=> b!111231 (= e!72316 (getValueByKey!158 (t!5767 (toList!811 lt!57044)) (_1!1231 (ite c!19438 (ite c!19444 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))))))

(declare-fun c!19802 () Bool)

(declare-fun d!31505 () Bool)

(assert (=> d!31505 (= c!19802 (and ((_ is Cons!1626) (toList!811 lt!57044)) (= (_1!1231 (h!2225 (toList!811 lt!57044))) (_1!1231 (ite c!19438 (ite c!19444 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))))

(assert (=> d!31505 (= (getValueByKey!158 (toList!811 lt!57044) (_1!1231 (ite c!19438 (ite c!19444 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))) e!72315)))

(declare-fun b!111230 () Bool)

(assert (=> b!111230 (= e!72315 e!72316)))

(declare-fun c!19803 () Bool)

(assert (=> b!111230 (= c!19803 (and ((_ is Cons!1626) (toList!811 lt!57044)) (not (= (_1!1231 (h!2225 (toList!811 lt!57044))) (_1!1231 (ite c!19438 (ite c!19444 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56458) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))))))))

(declare-fun b!111232 () Bool)

(assert (=> b!111232 (= e!72316 None!162)))

(assert (= (and d!31505 c!19802) b!111229))

(assert (= (and d!31505 (not c!19802)) b!111230))

(assert (= (and b!111230 c!19803) b!111231))

(assert (= (and b!111230 (not c!19803)) b!111232))

(declare-fun m!126651 () Bool)

(assert (=> b!111231 m!126651))

(assert (=> b!110492 d!31505))

(declare-fun b!111233 () Bool)

(declare-fun e!72317 () Option!164)

(assert (=> b!111233 (= e!72317 (Some!163 (_2!1231 (h!2225 (toList!811 lt!56939)))))))

(declare-fun b!111235 () Bool)

(declare-fun e!72318 () Option!164)

(assert (=> b!111235 (= e!72318 (getValueByKey!158 (t!5767 (toList!811 lt!56939)) (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun d!31507 () Bool)

(declare-fun c!19804 () Bool)

(assert (=> d!31507 (= c!19804 (and ((_ is Cons!1626) (toList!811 lt!56939)) (= (_1!1231 (h!2225 (toList!811 lt!56939))) (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> d!31507 (= (getValueByKey!158 (toList!811 lt!56939) (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))) e!72317)))

(declare-fun b!111234 () Bool)

(assert (=> b!111234 (= e!72317 e!72318)))

(declare-fun c!19805 () Bool)

(assert (=> b!111234 (= c!19805 (and ((_ is Cons!1626) (toList!811 lt!56939)) (not (= (_1!1231 (h!2225 (toList!811 lt!56939))) (_1!1231 (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))))

(declare-fun b!111236 () Bool)

(assert (=> b!111236 (= e!72318 None!162)))

(assert (= (and d!31507 c!19804) b!111233))

(assert (= (and d!31507 (not c!19804)) b!111234))

(assert (= (and b!111234 c!19805) b!111235))

(assert (= (and b!111234 (not c!19805)) b!111236))

(declare-fun m!126653 () Bool)

(assert (=> b!111235 m!126653))

(assert (=> b!110407 d!31507))

(declare-fun lt!57411 () Bool)

(declare-fun d!31509 () Bool)

(assert (=> d!31509 (= lt!57411 (select (content!113 (toList!811 lt!57053)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!72320 () Bool)

(assert (=> d!31509 (= lt!57411 e!72320)))

(declare-fun res!54965 () Bool)

(assert (=> d!31509 (=> (not res!54965) (not e!72320))))

(assert (=> d!31509 (= res!54965 ((_ is Cons!1626) (toList!811 lt!57053)))))

(assert (=> d!31509 (= (contains!839 (toList!811 lt!57053) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!57411)))

(declare-fun b!111237 () Bool)

(declare-fun e!72319 () Bool)

(assert (=> b!111237 (= e!72320 e!72319)))

(declare-fun res!54966 () Bool)

(assert (=> b!111237 (=> res!54966 e!72319)))

(assert (=> b!111237 (= res!54966 (= (h!2225 (toList!811 lt!57053)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!111238 () Bool)

(assert (=> b!111238 (= e!72319 (contains!839 (t!5767 (toList!811 lt!57053)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!31509 res!54965) b!111237))

(assert (= (and b!111237 (not res!54966)) b!111238))

(declare-fun m!126655 () Bool)

(assert (=> d!31509 m!126655))

(declare-fun m!126657 () Bool)

(assert (=> d!31509 m!126657))

(declare-fun m!126659 () Bool)

(assert (=> b!111238 m!126659))

(assert (=> b!110499 d!31509))

(declare-fun d!31511 () Bool)

(assert (=> d!31511 (= (isDefined!111 (getValueByKey!158 (toList!811 lt!56631) (_1!1231 lt!56454))) (not (isEmpty!377 (getValueByKey!158 (toList!811 lt!56631) (_1!1231 lt!56454)))))))

(declare-fun bs!4582 () Bool)

(assert (= bs!4582 d!31511))

(assert (=> bs!4582 m!124545))

(declare-fun m!126661 () Bool)

(assert (=> bs!4582 m!126661))

(assert (=> b!110414 d!31511))

(assert (=> b!110414 d!31059))

(declare-fun d!31513 () Bool)

(declare-fun lt!57412 () Bool)

(assert (=> d!31513 (= lt!57412 (select (content!113 lt!56626) (tuple2!2441 (_1!1231 lt!56457) (_2!1231 lt!56457))))))

(declare-fun e!72322 () Bool)

(assert (=> d!31513 (= lt!57412 e!72322)))

(declare-fun res!54967 () Bool)

(assert (=> d!31513 (=> (not res!54967) (not e!72322))))

(assert (=> d!31513 (= res!54967 ((_ is Cons!1626) lt!56626))))

(assert (=> d!31513 (= (contains!839 lt!56626 (tuple2!2441 (_1!1231 lt!56457) (_2!1231 lt!56457))) lt!57412)))

(declare-fun b!111239 () Bool)

(declare-fun e!72321 () Bool)

(assert (=> b!111239 (= e!72322 e!72321)))

(declare-fun res!54968 () Bool)

(assert (=> b!111239 (=> res!54968 e!72321)))

(assert (=> b!111239 (= res!54968 (= (h!2225 lt!56626) (tuple2!2441 (_1!1231 lt!56457) (_2!1231 lt!56457))))))

(declare-fun b!111240 () Bool)

(assert (=> b!111240 (= e!72321 (contains!839 (t!5767 lt!56626) (tuple2!2441 (_1!1231 lt!56457) (_2!1231 lt!56457))))))

(assert (= (and d!31513 res!54967) b!111239))

(assert (= (and b!111239 (not res!54968)) b!111240))

(declare-fun m!126663 () Bool)

(assert (=> d!31513 m!126663))

(declare-fun m!126665 () Bool)

(assert (=> d!31513 m!126665))

(declare-fun m!126667 () Bool)

(assert (=> b!111240 m!126667))

(assert (=> b!110180 d!31513))

(declare-fun d!31515 () Bool)

(declare-fun e!72323 () Bool)

(assert (=> d!31515 e!72323))

(declare-fun res!54969 () Bool)

(assert (=> d!31515 (=> res!54969 e!72323)))

(declare-fun lt!57413 () Bool)

(assert (=> d!31515 (= res!54969 (not lt!57413))))

(declare-fun lt!57414 () Bool)

(assert (=> d!31515 (= lt!57413 lt!57414)))

(declare-fun lt!57416 () Unit!3403)

(declare-fun e!72324 () Unit!3403)

(assert (=> d!31515 (= lt!57416 e!72324)))

(declare-fun c!19806 () Bool)

(assert (=> d!31515 (= c!19806 lt!57414)))

(assert (=> d!31515 (= lt!57414 (containsKey!162 (toList!811 lt!56894) (_1!1231 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> d!31515 (= (contains!838 lt!56894 (_1!1231 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))) lt!57413)))

(declare-fun b!111241 () Bool)

(declare-fun lt!57415 () Unit!3403)

(assert (=> b!111241 (= e!72324 lt!57415)))

(assert (=> b!111241 (= lt!57415 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 lt!56894) (_1!1231 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> b!111241 (isDefined!111 (getValueByKey!158 (toList!811 lt!56894) (_1!1231 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun b!111242 () Bool)

(declare-fun Unit!3461 () Unit!3403)

(assert (=> b!111242 (= e!72324 Unit!3461)))

(declare-fun b!111243 () Bool)

(assert (=> b!111243 (= e!72323 (isDefined!111 (getValueByKey!158 (toList!811 lt!56894) (_1!1231 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(assert (= (and d!31515 c!19806) b!111241))

(assert (= (and d!31515 (not c!19806)) b!111242))

(assert (= (and d!31515 (not res!54969)) b!111243))

(declare-fun m!126669 () Bool)

(assert (=> d!31515 m!126669))

(declare-fun m!126671 () Bool)

(assert (=> b!111241 m!126671))

(assert (=> b!111241 m!125159))

(assert (=> b!111241 m!125159))

(declare-fun m!126673 () Bool)

(assert (=> b!111241 m!126673))

(assert (=> b!111243 m!125159))

(assert (=> b!111243 m!125159))

(assert (=> b!111243 m!126673))

(assert (=> d!30977 d!31515))

(declare-fun b!111244 () Bool)

(declare-fun e!72325 () Option!164)

(assert (=> b!111244 (= e!72325 (Some!163 (_2!1231 (h!2225 lt!56893))))))

(declare-fun b!111246 () Bool)

(declare-fun e!72326 () Option!164)

(assert (=> b!111246 (= e!72326 (getValueByKey!158 (t!5767 lt!56893) (_1!1231 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun d!31517 () Bool)

(declare-fun c!19807 () Bool)

(assert (=> d!31517 (= c!19807 (and ((_ is Cons!1626) lt!56893) (= (_1!1231 (h!2225 lt!56893)) (_1!1231 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> d!31517 (= (getValueByKey!158 lt!56893 (_1!1231 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))) e!72325)))

(declare-fun b!111245 () Bool)

(assert (=> b!111245 (= e!72325 e!72326)))

(declare-fun c!19808 () Bool)

(assert (=> b!111245 (= c!19808 (and ((_ is Cons!1626) lt!56893) (not (= (_1!1231 (h!2225 lt!56893)) (_1!1231 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))))

(declare-fun b!111247 () Bool)

(assert (=> b!111247 (= e!72326 None!162)))

(assert (= (and d!31517 c!19807) b!111244))

(assert (= (and d!31517 (not c!19807)) b!111245))

(assert (= (and b!111245 c!19808) b!111246))

(assert (= (and b!111245 (not c!19808)) b!111247))

(declare-fun m!126675 () Bool)

(assert (=> b!111246 m!126675))

(assert (=> d!30977 d!31517))

(declare-fun d!31519 () Bool)

(assert (=> d!31519 (= (getValueByKey!158 lt!56893 (_1!1231 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))) (Some!163 (_2!1231 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun lt!57417 () Unit!3403)

(assert (=> d!31519 (= lt!57417 (choose!687 lt!56893 (_1!1231 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))) (_2!1231 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun e!72327 () Bool)

(assert (=> d!31519 e!72327))

(declare-fun res!54970 () Bool)

(assert (=> d!31519 (=> (not res!54970) (not e!72327))))

(assert (=> d!31519 (= res!54970 (isStrictlySorted!311 lt!56893))))

(assert (=> d!31519 (= (lemmaContainsTupThenGetReturnValue!74 lt!56893 (_1!1231 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))) (_2!1231 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))) lt!57417)))

(declare-fun b!111248 () Bool)

(declare-fun res!54971 () Bool)

(assert (=> b!111248 (=> (not res!54971) (not e!72327))))

(assert (=> b!111248 (= res!54971 (containsKey!162 lt!56893 (_1!1231 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun b!111249 () Bool)

(assert (=> b!111249 (= e!72327 (contains!839 lt!56893 (tuple2!2441 (_1!1231 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))) (_2!1231 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(assert (= (and d!31519 res!54970) b!111248))

(assert (= (and b!111248 res!54971) b!111249))

(assert (=> d!31519 m!125153))

(declare-fun m!126677 () Bool)

(assert (=> d!31519 m!126677))

(declare-fun m!126679 () Bool)

(assert (=> d!31519 m!126679))

(declare-fun m!126681 () Bool)

(assert (=> b!111248 m!126681))

(declare-fun m!126683 () Bool)

(assert (=> b!111249 m!126683))

(assert (=> d!30977 d!31519))

(declare-fun b!111250 () Bool)

(declare-fun e!72332 () List!1630)

(declare-fun e!72331 () List!1630)

(assert (=> b!111250 (= e!72332 e!72331)))

(declare-fun c!19811 () Bool)

(assert (=> b!111250 (= c!19811 (and ((_ is Cons!1626) (toList!811 lt!56695)) (= (_1!1231 (h!2225 (toList!811 lt!56695))) (_1!1231 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(declare-fun bm!11878 () Bool)

(declare-fun call!11881 () List!1630)

(declare-fun call!11882 () List!1630)

(assert (=> bm!11878 (= call!11881 call!11882)))

(declare-fun b!111251 () Bool)

(assert (=> b!111251 (= e!72332 call!11882)))

(declare-fun bm!11879 () Bool)

(declare-fun call!11883 () List!1630)

(assert (=> bm!11879 (= call!11883 call!11881)))

(declare-fun e!72330 () List!1630)

(declare-fun bm!11880 () Bool)

(declare-fun c!19809 () Bool)

(assert (=> bm!11880 (= call!11882 ($colon$colon!83 e!72330 (ite c!19809 (h!2225 (toList!811 lt!56695)) (tuple2!2441 (_1!1231 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))) (_2!1231 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))))

(declare-fun c!19812 () Bool)

(assert (=> bm!11880 (= c!19812 c!19809)))

(declare-fun b!111252 () Bool)

(assert (=> b!111252 (= e!72331 call!11881)))

(declare-fun lt!57418 () List!1630)

(declare-fun e!72329 () Bool)

(declare-fun b!111254 () Bool)

(assert (=> b!111254 (= e!72329 (contains!839 lt!57418 (tuple2!2441 (_1!1231 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))) (_2!1231 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(declare-fun b!111255 () Bool)

(declare-fun e!72328 () List!1630)

(assert (=> b!111255 (= e!72328 call!11883)))

(declare-fun b!111256 () Bool)

(declare-fun res!54973 () Bool)

(assert (=> b!111256 (=> (not res!54973) (not e!72329))))

(assert (=> b!111256 (= res!54973 (containsKey!162 lt!57418 (_1!1231 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun c!19810 () Bool)

(declare-fun b!111257 () Bool)

(assert (=> b!111257 (= c!19810 (and ((_ is Cons!1626) (toList!811 lt!56695)) (bvsgt (_1!1231 (h!2225 (toList!811 lt!56695))) (_1!1231 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> b!111257 (= e!72331 e!72328)))

(declare-fun b!111258 () Bool)

(assert (=> b!111258 (= e!72328 call!11883)))

(declare-fun b!111259 () Bool)

(assert (=> b!111259 (= e!72330 (ite c!19811 (t!5767 (toList!811 lt!56695)) (ite c!19810 (Cons!1626 (h!2225 (toList!811 lt!56695)) (t!5767 (toList!811 lt!56695))) Nil!1627)))))

(declare-fun b!111253 () Bool)

(assert (=> b!111253 (= e!72330 (insertStrictlySorted!77 (t!5767 (toList!811 lt!56695)) (_1!1231 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))) (_2!1231 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun d!31521 () Bool)

(assert (=> d!31521 e!72329))

(declare-fun res!54972 () Bool)

(assert (=> d!31521 (=> (not res!54972) (not e!72329))))

(assert (=> d!31521 (= res!54972 (isStrictlySorted!311 lt!57418))))

(assert (=> d!31521 (= lt!57418 e!72332)))

(assert (=> d!31521 (= c!19809 (and ((_ is Cons!1626) (toList!811 lt!56695)) (bvslt (_1!1231 (h!2225 (toList!811 lt!56695))) (_1!1231 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> d!31521 (isStrictlySorted!311 (toList!811 lt!56695))))

(assert (=> d!31521 (= (insertStrictlySorted!77 (toList!811 lt!56695) (_1!1231 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))) (_2!1231 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))) lt!57418)))

(assert (= (and d!31521 c!19809) b!111251))

(assert (= (and d!31521 (not c!19809)) b!111250))

(assert (= (and b!111250 c!19811) b!111252))

(assert (= (and b!111250 (not c!19811)) b!111257))

(assert (= (and b!111257 c!19810) b!111255))

(assert (= (and b!111257 (not c!19810)) b!111258))

(assert (= (or b!111255 b!111258) bm!11879))

(assert (= (or b!111252 bm!11879) bm!11878))

(assert (= (or b!111251 bm!11878) bm!11880))

(assert (= (and bm!11880 c!19812) b!111253))

(assert (= (and bm!11880 (not c!19812)) b!111259))

(assert (= (and d!31521 res!54972) b!111256))

(assert (= (and b!111256 res!54973) b!111254))

(declare-fun m!126685 () Bool)

(assert (=> b!111256 m!126685))

(declare-fun m!126687 () Bool)

(assert (=> b!111253 m!126687))

(declare-fun m!126689 () Bool)

(assert (=> b!111254 m!126689))

(declare-fun m!126691 () Bool)

(assert (=> d!31521 m!126691))

(declare-fun m!126693 () Bool)

(assert (=> d!31521 m!126693))

(declare-fun m!126695 () Bool)

(assert (=> bm!11880 m!126695))

(assert (=> d!30977 d!31521))

(declare-fun d!31523 () Bool)

(declare-fun c!19813 () Bool)

(assert (=> d!31523 (= c!19813 ((_ is Nil!1627) (toList!811 lt!56631)))))

(declare-fun e!72333 () (InoxSet tuple2!2440))

(assert (=> d!31523 (= (content!113 (toList!811 lt!56631)) e!72333)))

(declare-fun b!111260 () Bool)

(assert (=> b!111260 (= e!72333 ((as const (Array tuple2!2440 Bool)) false))))

(declare-fun b!111261 () Bool)

(assert (=> b!111261 (= e!72333 ((_ map or) (store ((as const (Array tuple2!2440 Bool)) false) (h!2225 (toList!811 lt!56631)) true) (content!113 (t!5767 (toList!811 lt!56631)))))))

(assert (= (and d!31523 c!19813) b!111260))

(assert (= (and d!31523 (not c!19813)) b!111261))

(declare-fun m!126697 () Bool)

(assert (=> b!111261 m!126697))

(declare-fun m!126699 () Bool)

(assert (=> b!111261 m!126699))

(assert (=> d!30937 d!31523))

(declare-fun d!31525 () Bool)

(declare-fun e!72334 () Bool)

(assert (=> d!31525 e!72334))

(declare-fun res!54974 () Bool)

(assert (=> d!31525 (=> res!54974 e!72334)))

(declare-fun lt!57419 () Bool)

(assert (=> d!31525 (= res!54974 (not lt!57419))))

(declare-fun lt!57420 () Bool)

(assert (=> d!31525 (= lt!57419 lt!57420)))

(declare-fun lt!57422 () Unit!3403)

(declare-fun e!72335 () Unit!3403)

(assert (=> d!31525 (= lt!57422 e!72335)))

(declare-fun c!19814 () Bool)

(assert (=> d!31525 (= c!19814 lt!57420)))

(assert (=> d!31525 (= lt!57420 (containsKey!162 (toList!811 lt!57053) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!31525 (= (contains!838 lt!57053 (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!57419)))

(declare-fun b!111262 () Bool)

(declare-fun lt!57421 () Unit!3403)

(assert (=> b!111262 (= e!72335 lt!57421)))

(assert (=> b!111262 (= lt!57421 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 lt!57053) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!111262 (isDefined!111 (getValueByKey!158 (toList!811 lt!57053) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!111263 () Bool)

(declare-fun Unit!3462 () Unit!3403)

(assert (=> b!111263 (= e!72335 Unit!3462)))

(declare-fun b!111264 () Bool)

(assert (=> b!111264 (= e!72334 (isDefined!111 (getValueByKey!158 (toList!811 lt!57053) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!31525 c!19814) b!111262))

(assert (= (and d!31525 (not c!19814)) b!111263))

(assert (= (and d!31525 (not res!54974)) b!111264))

(declare-fun m!126701 () Bool)

(assert (=> d!31525 m!126701))

(declare-fun m!126703 () Bool)

(assert (=> b!111262 m!126703))

(assert (=> b!111262 m!125431))

(assert (=> b!111262 m!125431))

(declare-fun m!126705 () Bool)

(assert (=> b!111262 m!126705))

(assert (=> b!111264 m!125431))

(assert (=> b!111264 m!125431))

(assert (=> b!111264 m!126705))

(assert (=> d!31047 d!31525))

(declare-fun b!111265 () Bool)

(declare-fun e!72336 () Option!164)

(assert (=> b!111265 (= e!72336 (Some!163 (_2!1231 (h!2225 lt!57052))))))

(declare-fun e!72337 () Option!164)

(declare-fun b!111267 () Bool)

(assert (=> b!111267 (= e!72337 (getValueByKey!158 (t!5767 lt!57052) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun d!31527 () Bool)

(declare-fun c!19815 () Bool)

(assert (=> d!31527 (= c!19815 (and ((_ is Cons!1626) lt!57052) (= (_1!1231 (h!2225 lt!57052)) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!31527 (= (getValueByKey!158 lt!57052 (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!72336)))

(declare-fun b!111266 () Bool)

(assert (=> b!111266 (= e!72336 e!72337)))

(declare-fun c!19816 () Bool)

(assert (=> b!111266 (= c!19816 (and ((_ is Cons!1626) lt!57052) (not (= (_1!1231 (h!2225 lt!57052)) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!111268 () Bool)

(assert (=> b!111268 (= e!72337 None!162)))

(assert (= (and d!31527 c!19815) b!111265))

(assert (= (and d!31527 (not c!19815)) b!111266))

(assert (= (and b!111266 c!19816) b!111267))

(assert (= (and b!111266 (not c!19816)) b!111268))

(declare-fun m!126707 () Bool)

(assert (=> b!111267 m!126707))

(assert (=> d!31047 d!31527))

(declare-fun d!31529 () Bool)

(assert (=> d!31529 (= (getValueByKey!158 lt!57052 (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!163 (_2!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!57423 () Unit!3403)

(assert (=> d!31529 (= lt!57423 (choose!687 lt!57052 (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!72338 () Bool)

(assert (=> d!31529 e!72338))

(declare-fun res!54975 () Bool)

(assert (=> d!31529 (=> (not res!54975) (not e!72338))))

(assert (=> d!31529 (= res!54975 (isStrictlySorted!311 lt!57052))))

(assert (=> d!31529 (= (lemmaContainsTupThenGetReturnValue!74 lt!57052 (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!57423)))

(declare-fun b!111269 () Bool)

(declare-fun res!54976 () Bool)

(assert (=> b!111269 (=> (not res!54976) (not e!72338))))

(assert (=> b!111269 (= res!54976 (containsKey!162 lt!57052 (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!111270 () Bool)

(assert (=> b!111270 (= e!72338 (contains!839 lt!57052 (tuple2!2441 (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!31529 res!54975) b!111269))

(assert (= (and b!111269 res!54976) b!111270))

(assert (=> d!31529 m!125425))

(declare-fun m!126709 () Bool)

(assert (=> d!31529 m!126709))

(declare-fun m!126711 () Bool)

(assert (=> d!31529 m!126711))

(declare-fun m!126713 () Bool)

(assert (=> b!111269 m!126713))

(declare-fun m!126715 () Bool)

(assert (=> b!111270 m!126715))

(assert (=> d!31047 d!31529))

(declare-fun b!111271 () Bool)

(declare-fun e!72343 () List!1630)

(declare-fun e!72342 () List!1630)

(assert (=> b!111271 (= e!72343 e!72342)))

(declare-fun c!19819 () Bool)

(assert (=> b!111271 (= c!19819 (and ((_ is Cons!1626) (toList!811 call!11718)) (= (_1!1231 (h!2225 (toList!811 call!11718))) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun bm!11881 () Bool)

(declare-fun call!11884 () List!1630)

(declare-fun call!11885 () List!1630)

(assert (=> bm!11881 (= call!11884 call!11885)))

(declare-fun b!111272 () Bool)

(assert (=> b!111272 (= e!72343 call!11885)))

(declare-fun bm!11882 () Bool)

(declare-fun call!11886 () List!1630)

(assert (=> bm!11882 (= call!11886 call!11884)))

(declare-fun c!19817 () Bool)

(declare-fun bm!11883 () Bool)

(declare-fun e!72341 () List!1630)

(assert (=> bm!11883 (= call!11885 ($colon$colon!83 e!72341 (ite c!19817 (h!2225 (toList!811 call!11718)) (tuple2!2441 (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!19820 () Bool)

(assert (=> bm!11883 (= c!19820 c!19817)))

(declare-fun b!111273 () Bool)

(assert (=> b!111273 (= e!72342 call!11884)))

(declare-fun lt!57424 () List!1630)

(declare-fun b!111275 () Bool)

(declare-fun e!72340 () Bool)

(assert (=> b!111275 (= e!72340 (contains!839 lt!57424 (tuple2!2441 (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!111276 () Bool)

(declare-fun e!72339 () List!1630)

(assert (=> b!111276 (= e!72339 call!11886)))

(declare-fun b!111277 () Bool)

(declare-fun res!54978 () Bool)

(assert (=> b!111277 (=> (not res!54978) (not e!72340))))

(assert (=> b!111277 (= res!54978 (containsKey!162 lt!57424 (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun c!19818 () Bool)

(declare-fun b!111278 () Bool)

(assert (=> b!111278 (= c!19818 (and ((_ is Cons!1626) (toList!811 call!11718)) (bvsgt (_1!1231 (h!2225 (toList!811 call!11718))) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!111278 (= e!72342 e!72339)))

(declare-fun b!111279 () Bool)

(assert (=> b!111279 (= e!72339 call!11886)))

(declare-fun b!111280 () Bool)

(assert (=> b!111280 (= e!72341 (ite c!19819 (t!5767 (toList!811 call!11718)) (ite c!19818 (Cons!1626 (h!2225 (toList!811 call!11718)) (t!5767 (toList!811 call!11718))) Nil!1627)))))

(declare-fun b!111274 () Bool)

(assert (=> b!111274 (= e!72341 (insertStrictlySorted!77 (t!5767 (toList!811 call!11718)) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun d!31531 () Bool)

(assert (=> d!31531 e!72340))

(declare-fun res!54977 () Bool)

(assert (=> d!31531 (=> (not res!54977) (not e!72340))))

(assert (=> d!31531 (= res!54977 (isStrictlySorted!311 lt!57424))))

(assert (=> d!31531 (= lt!57424 e!72343)))

(assert (=> d!31531 (= c!19817 (and ((_ is Cons!1626) (toList!811 call!11718)) (bvslt (_1!1231 (h!2225 (toList!811 call!11718))) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!31531 (isStrictlySorted!311 (toList!811 call!11718))))

(assert (=> d!31531 (= (insertStrictlySorted!77 (toList!811 call!11718) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!57424)))

(assert (= (and d!31531 c!19817) b!111272))

(assert (= (and d!31531 (not c!19817)) b!111271))

(assert (= (and b!111271 c!19819) b!111273))

(assert (= (and b!111271 (not c!19819)) b!111278))

(assert (= (and b!111278 c!19818) b!111276))

(assert (= (and b!111278 (not c!19818)) b!111279))

(assert (= (or b!111276 b!111279) bm!11882))

(assert (= (or b!111273 bm!11882) bm!11881))

(assert (= (or b!111272 bm!11881) bm!11883))

(assert (= (and bm!11883 c!19820) b!111274))

(assert (= (and bm!11883 (not c!19820)) b!111280))

(assert (= (and d!31531 res!54977) b!111277))

(assert (= (and b!111277 res!54978) b!111275))

(declare-fun m!126717 () Bool)

(assert (=> b!111277 m!126717))

(declare-fun m!126719 () Bool)

(assert (=> b!111274 m!126719))

(declare-fun m!126721 () Bool)

(assert (=> b!111275 m!126721))

(declare-fun m!126723 () Bool)

(assert (=> d!31531 m!126723))

(declare-fun m!126725 () Bool)

(assert (=> d!31531 m!126725))

(declare-fun m!126727 () Bool)

(assert (=> bm!11883 m!126727))

(assert (=> d!31047 d!31531))

(declare-fun d!31533 () Bool)

(assert (=> d!31533 (= (isDefined!111 (getValueByKey!158 (toList!811 lt!56627) (_1!1231 lt!56457))) (not (isEmpty!377 (getValueByKey!158 (toList!811 lt!56627) (_1!1231 lt!56457)))))))

(declare-fun bs!4583 () Bool)

(assert (= bs!4583 d!31533))

(assert (=> bs!4583 m!124533))

(declare-fun m!126729 () Bool)

(assert (=> bs!4583 m!126729))

(assert (=> b!110174 d!31533))

(assert (=> b!110174 d!30999))

(declare-fun d!31535 () Bool)

(assert (=> d!31535 (= (apply!100 lt!56824 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1350 (getValueByKey!158 (toList!811 lt!56824) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4584 () Bool)

(assert (= bs!4584 d!31535))

(assert (=> bs!4584 m!126535))

(assert (=> bs!4584 m!126535))

(declare-fun m!126731 () Bool)

(assert (=> bs!4584 m!126731))

(assert (=> b!110277 d!31535))

(declare-fun d!31537 () Bool)

(assert (=> d!31537 (= (apply!100 lt!56849 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)) (get!1350 (getValueByKey!158 (toList!811 lt!56849) (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!4585 () Bool)

(assert (= bs!4585 d!31537))

(assert (=> bs!4585 m!124693))

(declare-fun m!126733 () Bool)

(assert (=> bs!4585 m!126733))

(assert (=> bs!4585 m!126733))

(declare-fun m!126735 () Bool)

(assert (=> bs!4585 m!126735))

(assert (=> b!110314 d!31537))

(declare-fun c!19821 () Bool)

(declare-fun d!31539 () Bool)

(assert (=> d!31539 (= c!19821 ((_ is ValueCellFull!1005) (select (arr!2082 (ite c!19438 (_values!2610 newMap!16) lt!56569)) #b00000000000000000000000000000000)))))

(declare-fun e!72344 () V!3243)

(assert (=> d!31539 (= (get!1347 (select (arr!2082 (ite c!19438 (_values!2610 newMap!16) lt!56569)) #b00000000000000000000000000000000) (dynLambda!390 (defaultEntry!2627 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!72344)))

(declare-fun b!111281 () Bool)

(assert (=> b!111281 (= e!72344 (get!1348 (select (arr!2082 (ite c!19438 (_values!2610 newMap!16) lt!56569)) #b00000000000000000000000000000000) (dynLambda!390 (defaultEntry!2627 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!111282 () Bool)

(assert (=> b!111282 (= e!72344 (get!1349 (select (arr!2082 (ite c!19438 (_values!2610 newMap!16) lt!56569)) #b00000000000000000000000000000000) (dynLambda!390 (defaultEntry!2627 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!31539 c!19821) b!111281))

(assert (= (and d!31539 (not c!19821)) b!111282))

(assert (=> b!111281 m!125007))

(assert (=> b!111281 m!124733))

(declare-fun m!126737 () Bool)

(assert (=> b!111281 m!126737))

(assert (=> b!111282 m!125007))

(assert (=> b!111282 m!124733))

(declare-fun m!126739 () Bool)

(assert (=> b!111282 m!126739))

(assert (=> b!110314 d!31539))

(declare-fun d!31541 () Bool)

(declare-fun res!54979 () Bool)

(declare-fun e!72345 () Bool)

(assert (=> d!31541 (=> res!54979 e!72345)))

(assert (=> d!31541 (= res!54979 (= (select (arr!2081 (_keys!4341 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(assert (=> d!31541 (= (arrayContainsKey!0 (_keys!4341 newMap!16) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!72345)))

(declare-fun b!111283 () Bool)

(declare-fun e!72346 () Bool)

(assert (=> b!111283 (= e!72345 e!72346)))

(declare-fun res!54980 () Bool)

(assert (=> b!111283 (=> (not res!54980) (not e!72346))))

(assert (=> b!111283 (= res!54980 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2338 (_keys!4341 newMap!16))))))

(declare-fun b!111284 () Bool)

(assert (=> b!111284 (= e!72346 (arrayContainsKey!0 (_keys!4341 newMap!16) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!31541 (not res!54979)) b!111283))

(assert (= (and b!111283 res!54980) b!111284))

(assert (=> d!31541 m!125617))

(assert (=> b!111284 m!124315))

(declare-fun m!126741 () Bool)

(assert (=> b!111284 m!126741))

(assert (=> b!110192 d!31541))

(declare-fun b!111285 () Bool)

(declare-fun e!72351 () List!1630)

(declare-fun e!72350 () List!1630)

(assert (=> b!111285 (= e!72351 e!72350)))

(declare-fun c!19824 () Bool)

(assert (=> b!111285 (= c!19824 (and ((_ is Cons!1626) (t!5767 (toList!811 lt!56462))) (= (_1!1231 (h!2225 (t!5767 (toList!811 lt!56462)))) (_1!1231 lt!56454))))))

(declare-fun bm!11884 () Bool)

(declare-fun call!11887 () List!1630)

(declare-fun call!11888 () List!1630)

(assert (=> bm!11884 (= call!11887 call!11888)))

(declare-fun b!111286 () Bool)

(assert (=> b!111286 (= e!72351 call!11888)))

(declare-fun bm!11885 () Bool)

(declare-fun call!11889 () List!1630)

(assert (=> bm!11885 (= call!11889 call!11887)))

(declare-fun e!72349 () List!1630)

(declare-fun bm!11886 () Bool)

(declare-fun c!19822 () Bool)

(assert (=> bm!11886 (= call!11888 ($colon$colon!83 e!72349 (ite c!19822 (h!2225 (t!5767 (toList!811 lt!56462))) (tuple2!2441 (_1!1231 lt!56454) (_2!1231 lt!56454)))))))

(declare-fun c!19825 () Bool)

(assert (=> bm!11886 (= c!19825 c!19822)))

(declare-fun b!111287 () Bool)

(assert (=> b!111287 (= e!72350 call!11887)))

(declare-fun b!111289 () Bool)

(declare-fun e!72348 () Bool)

(declare-fun lt!57425 () List!1630)

(assert (=> b!111289 (= e!72348 (contains!839 lt!57425 (tuple2!2441 (_1!1231 lt!56454) (_2!1231 lt!56454))))))

(declare-fun b!111290 () Bool)

(declare-fun e!72347 () List!1630)

(assert (=> b!111290 (= e!72347 call!11889)))

(declare-fun b!111291 () Bool)

(declare-fun res!54982 () Bool)

(assert (=> b!111291 (=> (not res!54982) (not e!72348))))

(assert (=> b!111291 (= res!54982 (containsKey!162 lt!57425 (_1!1231 lt!56454)))))

(declare-fun b!111292 () Bool)

(declare-fun c!19823 () Bool)

(assert (=> b!111292 (= c!19823 (and ((_ is Cons!1626) (t!5767 (toList!811 lt!56462))) (bvsgt (_1!1231 (h!2225 (t!5767 (toList!811 lt!56462)))) (_1!1231 lt!56454))))))

(assert (=> b!111292 (= e!72350 e!72347)))

(declare-fun b!111293 () Bool)

(assert (=> b!111293 (= e!72347 call!11889)))

(declare-fun b!111294 () Bool)

(assert (=> b!111294 (= e!72349 (ite c!19824 (t!5767 (t!5767 (toList!811 lt!56462))) (ite c!19823 (Cons!1626 (h!2225 (t!5767 (toList!811 lt!56462))) (t!5767 (t!5767 (toList!811 lt!56462)))) Nil!1627)))))

(declare-fun b!111288 () Bool)

(assert (=> b!111288 (= e!72349 (insertStrictlySorted!77 (t!5767 (t!5767 (toList!811 lt!56462))) (_1!1231 lt!56454) (_2!1231 lt!56454)))))

(declare-fun d!31543 () Bool)

(assert (=> d!31543 e!72348))

(declare-fun res!54981 () Bool)

(assert (=> d!31543 (=> (not res!54981) (not e!72348))))

(assert (=> d!31543 (= res!54981 (isStrictlySorted!311 lt!57425))))

(assert (=> d!31543 (= lt!57425 e!72351)))

(assert (=> d!31543 (= c!19822 (and ((_ is Cons!1626) (t!5767 (toList!811 lt!56462))) (bvslt (_1!1231 (h!2225 (t!5767 (toList!811 lt!56462)))) (_1!1231 lt!56454))))))

(assert (=> d!31543 (isStrictlySorted!311 (t!5767 (toList!811 lt!56462)))))

(assert (=> d!31543 (= (insertStrictlySorted!77 (t!5767 (toList!811 lt!56462)) (_1!1231 lt!56454) (_2!1231 lt!56454)) lt!57425)))

(assert (= (and d!31543 c!19822) b!111286))

(assert (= (and d!31543 (not c!19822)) b!111285))

(assert (= (and b!111285 c!19824) b!111287))

(assert (= (and b!111285 (not c!19824)) b!111292))

(assert (= (and b!111292 c!19823) b!111290))

(assert (= (and b!111292 (not c!19823)) b!111293))

(assert (= (or b!111290 b!111293) bm!11885))

(assert (= (or b!111287 bm!11885) bm!11884))

(assert (= (or b!111286 bm!11884) bm!11886))

(assert (= (and bm!11886 c!19825) b!111288))

(assert (= (and bm!11886 (not c!19825)) b!111294))

(assert (= (and d!31543 res!54981) b!111291))

(assert (= (and b!111291 res!54982) b!111289))

(declare-fun m!126743 () Bool)

(assert (=> b!111291 m!126743))

(declare-fun m!126745 () Bool)

(assert (=> b!111288 m!126745))

(declare-fun m!126747 () Bool)

(assert (=> b!111289 m!126747))

(declare-fun m!126749 () Bool)

(assert (=> d!31543 m!126749))

(assert (=> d!31543 m!125723))

(declare-fun m!126751 () Bool)

(assert (=> bm!11886 m!126751))

(assert (=> b!110424 d!31543))

(declare-fun b!111295 () Bool)

(declare-fun e!72352 () Option!164)

(assert (=> b!111295 (= e!72352 (Some!163 (_2!1231 (h!2225 (toList!811 lt!56894)))))))

(declare-fun b!111297 () Bool)

(declare-fun e!72353 () Option!164)

(assert (=> b!111297 (= e!72353 (getValueByKey!158 (t!5767 (toList!811 lt!56894)) (_1!1231 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun c!19826 () Bool)

(declare-fun d!31545 () Bool)

(assert (=> d!31545 (= c!19826 (and ((_ is Cons!1626) (toList!811 lt!56894)) (= (_1!1231 (h!2225 (toList!811 lt!56894))) (_1!1231 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> d!31545 (= (getValueByKey!158 (toList!811 lt!56894) (_1!1231 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))) e!72352)))

(declare-fun b!111296 () Bool)

(assert (=> b!111296 (= e!72352 e!72353)))

(declare-fun c!19827 () Bool)

(assert (=> b!111296 (= c!19827 (and ((_ is Cons!1626) (toList!811 lt!56894)) (not (= (_1!1231 (h!2225 (toList!811 lt!56894))) (_1!1231 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))))

(declare-fun b!111298 () Bool)

(assert (=> b!111298 (= e!72353 None!162)))

(assert (= (and d!31545 c!19826) b!111295))

(assert (= (and d!31545 (not c!19826)) b!111296))

(assert (= (and b!111296 c!19827) b!111297))

(assert (= (and b!111296 (not c!19827)) b!111298))

(declare-fun m!126753 () Bool)

(assert (=> b!111297 m!126753))

(assert (=> b!110359 d!31545))

(assert (=> b!110252 d!31379))

(declare-fun d!31547 () Bool)

(assert (=> d!31547 (= (isDefined!111 (getValueByKey!158 (toList!811 lt!56635) (_1!1231 lt!56454))) (not (isEmpty!377 (getValueByKey!158 (toList!811 lt!56635) (_1!1231 lt!56454)))))))

(declare-fun bs!4586 () Bool)

(assert (= bs!4586 d!31547))

(assert (=> bs!4586 m!124557))

(declare-fun m!126755 () Bool)

(assert (=> bs!4586 m!126755))

(assert (=> b!110131 d!31547))

(assert (=> b!110131 d!30915))

(declare-fun d!31549 () Bool)

(declare-fun lt!57426 () Bool)

(assert (=> d!31549 (= lt!57426 (select (content!113 lt!56773) (tuple2!2441 (_1!1231 lt!56457) (_2!1231 lt!56457))))))

(declare-fun e!72355 () Bool)

(assert (=> d!31549 (= lt!57426 e!72355)))

(declare-fun res!54983 () Bool)

(assert (=> d!31549 (=> (not res!54983) (not e!72355))))

(assert (=> d!31549 (= res!54983 ((_ is Cons!1626) lt!56773))))

(assert (=> d!31549 (= (contains!839 lt!56773 (tuple2!2441 (_1!1231 lt!56457) (_2!1231 lt!56457))) lt!57426)))

(declare-fun b!111299 () Bool)

(declare-fun e!72354 () Bool)

(assert (=> b!111299 (= e!72355 e!72354)))

(declare-fun res!54984 () Bool)

(assert (=> b!111299 (=> res!54984 e!72354)))

(assert (=> b!111299 (= res!54984 (= (h!2225 lt!56773) (tuple2!2441 (_1!1231 lt!56457) (_2!1231 lt!56457))))))

(declare-fun b!111300 () Bool)

(assert (=> b!111300 (= e!72354 (contains!839 (t!5767 lt!56773) (tuple2!2441 (_1!1231 lt!56457) (_2!1231 lt!56457))))))

(assert (= (and d!31549 res!54983) b!111299))

(assert (= (and b!111299 (not res!54984)) b!111300))

(declare-fun m!126757 () Bool)

(assert (=> d!31549 m!126757))

(declare-fun m!126759 () Bool)

(assert (=> d!31549 m!126759))

(declare-fun m!126761 () Bool)

(assert (=> b!111300 m!126761))

(assert (=> b!110185 d!31549))

(declare-fun d!31551 () Bool)

(declare-fun res!54985 () Bool)

(declare-fun e!72356 () Bool)

(assert (=> d!31551 (=> res!54985 e!72356)))

(assert (=> d!31551 (= res!54985 (and ((_ is Cons!1626) lt!56634) (= (_1!1231 (h!2225 lt!56634)) (_1!1231 lt!56454))))))

(assert (=> d!31551 (= (containsKey!162 lt!56634 (_1!1231 lt!56454)) e!72356)))

(declare-fun b!111301 () Bool)

(declare-fun e!72357 () Bool)

(assert (=> b!111301 (= e!72356 e!72357)))

(declare-fun res!54986 () Bool)

(assert (=> b!111301 (=> (not res!54986) (not e!72357))))

(assert (=> b!111301 (= res!54986 (and (or (not ((_ is Cons!1626) lt!56634)) (bvsle (_1!1231 (h!2225 lt!56634)) (_1!1231 lt!56454))) ((_ is Cons!1626) lt!56634) (bvslt (_1!1231 (h!2225 lt!56634)) (_1!1231 lt!56454))))))

(declare-fun b!111302 () Bool)

(assert (=> b!111302 (= e!72357 (containsKey!162 (t!5767 lt!56634) (_1!1231 lt!56454)))))

(assert (= (and d!31551 (not res!54985)) b!111301))

(assert (= (and b!111301 res!54986) b!111302))

(declare-fun m!126763 () Bool)

(assert (=> b!111302 m!126763))

(assert (=> b!110140 d!31551))

(declare-fun d!31553 () Bool)

(assert (=> d!31553 (= (get!1350 (getValueByKey!158 (toList!811 lt!56705) lt!56693)) (v!2934 (getValueByKey!158 (toList!811 lt!56705) lt!56693)))))

(assert (=> d!30971 d!31553))

(declare-fun b!111303 () Bool)

(declare-fun e!72358 () Option!164)

(assert (=> b!111303 (= e!72358 (Some!163 (_2!1231 (h!2225 (toList!811 lt!56705)))))))

(declare-fun b!111305 () Bool)

(declare-fun e!72359 () Option!164)

(assert (=> b!111305 (= e!72359 (getValueByKey!158 (t!5767 (toList!811 lt!56705)) lt!56693))))

(declare-fun d!31555 () Bool)

(declare-fun c!19828 () Bool)

(assert (=> d!31555 (= c!19828 (and ((_ is Cons!1626) (toList!811 lt!56705)) (= (_1!1231 (h!2225 (toList!811 lt!56705))) lt!56693)))))

(assert (=> d!31555 (= (getValueByKey!158 (toList!811 lt!56705) lt!56693) e!72358)))

(declare-fun b!111304 () Bool)

(assert (=> b!111304 (= e!72358 e!72359)))

(declare-fun c!19829 () Bool)

(assert (=> b!111304 (= c!19829 (and ((_ is Cons!1626) (toList!811 lt!56705)) (not (= (_1!1231 (h!2225 (toList!811 lt!56705))) lt!56693))))))

(declare-fun b!111306 () Bool)

(assert (=> b!111306 (= e!72359 None!162)))

(assert (= (and d!31555 c!19828) b!111303))

(assert (= (and d!31555 (not c!19828)) b!111304))

(assert (= (and b!111304 c!19829) b!111305))

(assert (= (and b!111304 (not c!19829)) b!111306))

(declare-fun m!126765 () Bool)

(assert (=> b!111305 m!126765))

(assert (=> d!30971 d!31555))

(assert (=> b!110367 d!31105))

(declare-fun d!31557 () Bool)

(declare-fun e!72360 () Bool)

(assert (=> d!31557 e!72360))

(declare-fun res!54987 () Bool)

(assert (=> d!31557 (=> res!54987 e!72360)))

(declare-fun lt!57427 () Bool)

(assert (=> d!31557 (= res!54987 (not lt!57427))))

(declare-fun lt!57428 () Bool)

(assert (=> d!31557 (= lt!57427 lt!57428)))

(declare-fun lt!57430 () Unit!3403)

(declare-fun e!72361 () Unit!3403)

(assert (=> d!31557 (= lt!57430 e!72361)))

(declare-fun c!19830 () Bool)

(assert (=> d!31557 (= c!19830 lt!57428)))

(assert (=> d!31557 (= lt!57428 (containsKey!162 (toList!811 lt!56849) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!31557 (= (contains!838 lt!56849 #b0000000000000000000000000000000000000000000000000000000000000000) lt!57427)))

(declare-fun b!111307 () Bool)

(declare-fun lt!57429 () Unit!3403)

(assert (=> b!111307 (= e!72361 lt!57429)))

(assert (=> b!111307 (= lt!57429 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 lt!56849) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!111307 (isDefined!111 (getValueByKey!158 (toList!811 lt!56849) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!111308 () Bool)

(declare-fun Unit!3463 () Unit!3403)

(assert (=> b!111308 (= e!72361 Unit!3463)))

(declare-fun b!111309 () Bool)

(assert (=> b!111309 (= e!72360 (isDefined!111 (getValueByKey!158 (toList!811 lt!56849) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!31557 c!19830) b!111307))

(assert (= (and d!31557 (not c!19830)) b!111308))

(assert (= (and d!31557 (not res!54987)) b!111309))

(declare-fun m!126767 () Bool)

(assert (=> d!31557 m!126767))

(declare-fun m!126769 () Bool)

(assert (=> b!111307 m!126769))

(declare-fun m!126771 () Bool)

(assert (=> b!111307 m!126771))

(assert (=> b!111307 m!126771))

(declare-fun m!126773 () Bool)

(assert (=> b!111307 m!126773))

(assert (=> b!111309 m!126771))

(assert (=> b!111309 m!126771))

(assert (=> b!111309 m!126773))

(assert (=> bm!11782 d!31557))

(declare-fun b!111310 () Bool)

(declare-fun e!72365 () Bool)

(declare-fun e!72364 () Bool)

(assert (=> b!111310 (= e!72365 e!72364)))

(declare-fun res!54988 () Bool)

(assert (=> b!111310 (=> (not res!54988) (not e!72364))))

(declare-fun e!72363 () Bool)

(assert (=> b!111310 (= res!54988 (not e!72363))))

(declare-fun res!54989 () Bool)

(assert (=> b!111310 (=> (not res!54989) (not e!72363))))

(assert (=> b!111310 (= res!54989 (validKeyInArray!0 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!111311 () Bool)

(declare-fun e!72362 () Bool)

(declare-fun call!11890 () Bool)

(assert (=> b!111311 (= e!72362 call!11890)))

(declare-fun b!111312 () Bool)

(assert (=> b!111312 (= e!72364 e!72362)))

(declare-fun c!19831 () Bool)

(assert (=> b!111312 (= c!19831 (validKeyInArray!0 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun bm!11887 () Bool)

(assert (=> bm!11887 (= call!11890 (arrayNoDuplicates!0 (_keys!4341 (v!2930 (underlying!370 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!19831 (Cons!1627 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!19581 (Cons!1627 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!19484 (Cons!1627 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) Nil!1628) Nil!1628)) (ite c!19484 (Cons!1627 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) Nil!1628) Nil!1628))) (ite c!19581 (Cons!1627 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!19484 (Cons!1627 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) Nil!1628) Nil!1628)) (ite c!19484 (Cons!1627 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) Nil!1628) Nil!1628)))))))

(declare-fun b!111313 () Bool)

(assert (=> b!111313 (= e!72362 call!11890)))

(declare-fun b!111314 () Bool)

(assert (=> b!111314 (= e!72363 (contains!840 (ite c!19581 (Cons!1627 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!19484 (Cons!1627 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) Nil!1628) Nil!1628)) (ite c!19484 (Cons!1627 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) Nil!1628) Nil!1628)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun d!31559 () Bool)

(declare-fun res!54990 () Bool)

(assert (=> d!31559 (=> res!54990 e!72365)))

(assert (=> d!31559 (= res!54990 (bvsge (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2338 (_keys!4341 (v!2930 (underlying!370 thiss!992))))))))

(assert (=> d!31559 (= (arrayNoDuplicates!0 (_keys!4341 (v!2930 (underlying!370 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!19581 (Cons!1627 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!19484 (Cons!1627 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) Nil!1628) Nil!1628)) (ite c!19484 (Cons!1627 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) Nil!1628) Nil!1628))) e!72365)))

(assert (= (and d!31559 (not res!54990)) b!111310))

(assert (= (and b!111310 res!54989) b!111314))

(assert (= (and b!111310 res!54988) b!111312))

(assert (= (and b!111312 c!19831) b!111311))

(assert (= (and b!111312 (not c!19831)) b!111313))

(assert (= (or b!111311 b!111313) bm!11887))

(declare-fun m!126775 () Bool)

(assert (=> b!111310 m!126775))

(assert (=> b!111310 m!126775))

(declare-fun m!126777 () Bool)

(assert (=> b!111310 m!126777))

(assert (=> b!111312 m!126775))

(assert (=> b!111312 m!126775))

(assert (=> b!111312 m!126777))

(assert (=> bm!11887 m!126775))

(declare-fun m!126779 () Bool)

(assert (=> bm!11887 m!126779))

(assert (=> b!111314 m!126775))

(assert (=> b!111314 m!126775))

(declare-fun m!126781 () Bool)

(assert (=> b!111314 m!126781))

(assert (=> bm!11787 d!31559))

(declare-fun d!31561 () Bool)

(assert (=> d!31561 (isDefined!111 (getValueByKey!158 (toList!811 lt!56639) (_1!1231 lt!56457)))))

(declare-fun lt!57431 () Unit!3403)

(assert (=> d!31561 (= lt!57431 (choose!684 (toList!811 lt!56639) (_1!1231 lt!56457)))))

(declare-fun e!72366 () Bool)

(assert (=> d!31561 e!72366))

(declare-fun res!54991 () Bool)

(assert (=> d!31561 (=> (not res!54991) (not e!72366))))

(assert (=> d!31561 (= res!54991 (isStrictlySorted!311 (toList!811 lt!56639)))))

(assert (=> d!31561 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 lt!56639) (_1!1231 lt!56457)) lt!57431)))

(declare-fun b!111315 () Bool)

(assert (=> b!111315 (= e!72366 (containsKey!162 (toList!811 lt!56639) (_1!1231 lt!56457)))))

(assert (= (and d!31561 res!54991) b!111315))

(assert (=> d!31561 m!124569))

(assert (=> d!31561 m!124569))

(assert (=> d!31561 m!125031))

(declare-fun m!126783 () Bool)

(assert (=> d!31561 m!126783))

(declare-fun m!126785 () Bool)

(assert (=> d!31561 m!126785))

(assert (=> b!111315 m!125027))

(assert (=> b!110322 d!31561))

(assert (=> b!110322 d!31417))

(assert (=> b!110322 d!30925))

(declare-fun d!31563 () Bool)

(assert (=> d!31563 (= (validKeyInArray!0 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!110251 d!31563))

(declare-fun d!31565 () Bool)

(assert (=> d!31565 (= (+!150 (getCurrentListMap!496 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)) (getCurrentListMap!496 (_keys!4341 newMap!16) (array!4392 (store (arr!2082 (_values!2610 newMap!16)) (index!3195 lt!56591) (ValueCellFull!1005 lt!56458)) (size!2339 (_values!2610 newMap!16))) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(assert (=> d!31565 true))

(declare-fun _$5!116 () Unit!3403)

(assert (=> d!31565 (= (choose!686 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) (index!3195 lt!56591) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458 (defaultEntry!2627 newMap!16)) _$5!116)))

(declare-fun bs!4587 () Bool)

(assert (= bs!4587 d!31565))

(assert (=> bs!4587 m!124485))

(assert (=> bs!4587 m!124485))

(assert (=> bs!4587 m!124677))

(assert (=> bs!4587 m!124435))

(assert (=> bs!4587 m!124679))

(assert (=> d!30877 d!31565))

(assert (=> d!30877 d!31129))

(declare-fun d!31567 () Bool)

(declare-fun lt!57432 () Bool)

(assert (=> d!31567 (= lt!57432 (select (content!113 (toList!811 lt!56886)) (tuple2!2441 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun e!72368 () Bool)

(assert (=> d!31567 (= lt!57432 e!72368)))

(declare-fun res!54992 () Bool)

(assert (=> d!31567 (=> (not res!54992) (not e!72368))))

(assert (=> d!31567 (= res!54992 ((_ is Cons!1626) (toList!811 lt!56886)))))

(assert (=> d!31567 (= (contains!839 (toList!811 lt!56886) (tuple2!2441 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))) lt!57432)))

(declare-fun b!111316 () Bool)

(declare-fun e!72367 () Bool)

(assert (=> b!111316 (= e!72368 e!72367)))

(declare-fun res!54993 () Bool)

(assert (=> b!111316 (=> res!54993 e!72367)))

(assert (=> b!111316 (= res!54993 (= (h!2225 (toList!811 lt!56886)) (tuple2!2441 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun b!111317 () Bool)

(assert (=> b!111317 (= e!72367 (contains!839 (t!5767 (toList!811 lt!56886)) (tuple2!2441 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))))

(assert (= (and d!31567 res!54992) b!111316))

(assert (= (and b!111316 (not res!54993)) b!111317))

(declare-fun m!126787 () Bool)

(assert (=> d!31567 m!126787))

(declare-fun m!126789 () Bool)

(assert (=> d!31567 m!126789))

(declare-fun m!126791 () Bool)

(assert (=> b!111317 m!126791))

(assert (=> b!110355 d!31567))

(declare-fun d!31569 () Bool)

(assert (=> d!31569 (isDefined!111 (getValueByKey!158 (toList!811 lt!56699) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!57433 () Unit!3403)

(assert (=> d!31569 (= lt!57433 (choose!684 (toList!811 lt!56699) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!72369 () Bool)

(assert (=> d!31569 e!72369))

(declare-fun res!54994 () Bool)

(assert (=> d!31569 (=> (not res!54994) (not e!72369))))

(assert (=> d!31569 (= res!54994 (isStrictlySorted!311 (toList!811 lt!56699)))))

(assert (=> d!31569 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 lt!56699) #b0000000000000000000000000000000000000000000000000000000000000000) lt!57433)))

(declare-fun b!111318 () Bool)

(assert (=> b!111318 (= e!72369 (containsKey!162 (toList!811 lt!56699) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!31569 res!54994) b!111318))

(assert (=> d!31569 m!124685))

(assert (=> d!31569 m!124685))

(assert (=> d!31569 m!124687))

(declare-fun m!126793 () Bool)

(assert (=> d!31569 m!126793))

(assert (=> d!31569 m!125909))

(assert (=> b!111318 m!124681))

(assert (=> b!110099 d!31569))

(assert (=> b!110099 d!31455))

(assert (=> b!110099 d!31085))

(declare-fun d!31571 () Bool)

(declare-fun e!72370 () Bool)

(assert (=> d!31571 e!72370))

(declare-fun res!54995 () Bool)

(assert (=> d!31571 (=> res!54995 e!72370)))

(declare-fun lt!57434 () Bool)

(assert (=> d!31571 (= res!54995 (not lt!57434))))

(declare-fun lt!57435 () Bool)

(assert (=> d!31571 (= lt!57434 lt!57435)))

(declare-fun lt!57437 () Unit!3403)

(declare-fun e!72371 () Unit!3403)

(assert (=> d!31571 (= lt!57437 e!72371)))

(declare-fun c!19832 () Bool)

(assert (=> d!31571 (= c!19832 lt!57435)))

(assert (=> d!31571 (= lt!57435 (containsKey!162 (toList!811 lt!56747) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!31571 (= (contains!838 lt!56747 #b1000000000000000000000000000000000000000000000000000000000000000) lt!57434)))

(declare-fun b!111319 () Bool)

(declare-fun lt!57436 () Unit!3403)

(assert (=> b!111319 (= e!72371 lt!57436)))

(assert (=> b!111319 (= lt!57436 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 lt!56747) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!111319 (isDefined!111 (getValueByKey!158 (toList!811 lt!56747) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!111320 () Bool)

(declare-fun Unit!3464 () Unit!3403)

(assert (=> b!111320 (= e!72371 Unit!3464)))

(declare-fun b!111321 () Bool)

(assert (=> b!111321 (= e!72370 (isDefined!111 (getValueByKey!158 (toList!811 lt!56747) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!31571 c!19832) b!111319))

(assert (= (and d!31571 (not c!19832)) b!111320))

(assert (= (and d!31571 (not res!54995)) b!111321))

(declare-fun m!126795 () Bool)

(assert (=> d!31571 m!126795))

(declare-fun m!126797 () Bool)

(assert (=> b!111319 m!126797))

(declare-fun m!126799 () Bool)

(assert (=> b!111319 m!126799))

(assert (=> b!111319 m!126799))

(declare-fun m!126801 () Bool)

(assert (=> b!111319 m!126801))

(assert (=> b!111321 m!126799))

(assert (=> b!111321 m!126799))

(assert (=> b!111321 m!126801))

(assert (=> bm!11742 d!31571))

(declare-fun b!111322 () Bool)

(declare-fun e!72372 () Option!164)

(assert (=> b!111322 (= e!72372 (Some!163 (_2!1231 (h!2225 (t!5767 lt!56638)))))))

(declare-fun b!111324 () Bool)

(declare-fun e!72373 () Option!164)

(assert (=> b!111324 (= e!72373 (getValueByKey!158 (t!5767 (t!5767 lt!56638)) (_1!1231 lt!56457)))))

(declare-fun d!31573 () Bool)

(declare-fun c!19833 () Bool)

(assert (=> d!31573 (= c!19833 (and ((_ is Cons!1626) (t!5767 lt!56638)) (= (_1!1231 (h!2225 (t!5767 lt!56638))) (_1!1231 lt!56457))))))

(assert (=> d!31573 (= (getValueByKey!158 (t!5767 lt!56638) (_1!1231 lt!56457)) e!72372)))

(declare-fun b!111323 () Bool)

(assert (=> b!111323 (= e!72372 e!72373)))

(declare-fun c!19834 () Bool)

(assert (=> b!111323 (= c!19834 (and ((_ is Cons!1626) (t!5767 lt!56638)) (not (= (_1!1231 (h!2225 (t!5767 lt!56638))) (_1!1231 lt!56457)))))))

(declare-fun b!111325 () Bool)

(assert (=> b!111325 (= e!72373 None!162)))

(assert (= (and d!31573 c!19833) b!111322))

(assert (= (and d!31573 (not c!19833)) b!111323))

(assert (= (and b!111323 c!19834) b!111324))

(assert (= (and b!111323 (not c!19834)) b!111325))

(declare-fun m!126803 () Bool)

(assert (=> b!111324 m!126803))

(assert (=> b!110327 d!31573))

(declare-fun b!111326 () Bool)

(declare-fun e!72374 () Option!164)

(assert (=> b!111326 (= e!72374 (Some!163 (_2!1231 (h!2225 (t!5767 (toList!811 lt!56639))))))))

(declare-fun b!111328 () Bool)

(declare-fun e!72375 () Option!164)

(assert (=> b!111328 (= e!72375 (getValueByKey!158 (t!5767 (t!5767 (toList!811 lt!56639))) (_1!1231 lt!56457)))))

(declare-fun d!31575 () Bool)

(declare-fun c!19835 () Bool)

(assert (=> d!31575 (= c!19835 (and ((_ is Cons!1626) (t!5767 (toList!811 lt!56639))) (= (_1!1231 (h!2225 (t!5767 (toList!811 lt!56639)))) (_1!1231 lt!56457))))))

(assert (=> d!31575 (= (getValueByKey!158 (t!5767 (toList!811 lt!56639)) (_1!1231 lt!56457)) e!72374)))

(declare-fun b!111327 () Bool)

(assert (=> b!111327 (= e!72374 e!72375)))

(declare-fun c!19836 () Bool)

(assert (=> b!111327 (= c!19836 (and ((_ is Cons!1626) (t!5767 (toList!811 lt!56639))) (not (= (_1!1231 (h!2225 (t!5767 (toList!811 lt!56639)))) (_1!1231 lt!56457)))))))

(declare-fun b!111329 () Bool)

(assert (=> b!111329 (= e!72375 None!162)))

(assert (= (and d!31575 c!19835) b!111326))

(assert (= (and d!31575 (not c!19835)) b!111327))

(assert (= (and b!111327 c!19836) b!111328))

(assert (= (and b!111327 (not c!19836)) b!111329))

(declare-fun m!126805 () Bool)

(assert (=> b!111328 m!126805))

(assert (=> b!110264 d!31575))

(declare-fun d!31577 () Bool)

(assert (=> d!31577 (= ($colon$colon!83 e!71672 (ite c!19513 (h!2225 (toList!811 (+!150 lt!56462 lt!56457))) (tuple2!2441 (_1!1231 lt!56454) (_2!1231 lt!56454)))) (Cons!1626 (ite c!19513 (h!2225 (toList!811 (+!150 lt!56462 lt!56457))) (tuple2!2441 (_1!1231 lt!56454) (_2!1231 lt!56454))) e!71672))))

(assert (=> bm!11755 d!31577))

(declare-fun d!31579 () Bool)

(declare-fun e!72376 () Bool)

(assert (=> d!31579 e!72376))

(declare-fun res!54996 () Bool)

(assert (=> d!31579 (=> res!54996 e!72376)))

(declare-fun lt!57438 () Bool)

(assert (=> d!31579 (= res!54996 (not lt!57438))))

(declare-fun lt!57439 () Bool)

(assert (=> d!31579 (= lt!57438 lt!57439)))

(declare-fun lt!57441 () Unit!3403)

(declare-fun e!72377 () Unit!3403)

(assert (=> d!31579 (= lt!57441 e!72377)))

(declare-fun c!19837 () Bool)

(assert (=> d!31579 (= c!19837 lt!57439)))

(assert (=> d!31579 (= lt!57439 (containsKey!162 (toList!811 lt!56849) (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!31579 (= (contains!838 lt!56849 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)) lt!57438)))

(declare-fun b!111330 () Bool)

(declare-fun lt!57440 () Unit!3403)

(assert (=> b!111330 (= e!72377 lt!57440)))

(assert (=> b!111330 (= lt!57440 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 lt!56849) (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!111330 (isDefined!111 (getValueByKey!158 (toList!811 lt!56849) (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!111331 () Bool)

(declare-fun Unit!3465 () Unit!3403)

(assert (=> b!111331 (= e!72377 Unit!3465)))

(declare-fun b!111332 () Bool)

(assert (=> b!111332 (= e!72376 (isDefined!111 (getValueByKey!158 (toList!811 lt!56849) (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!31579 c!19837) b!111330))

(assert (= (and d!31579 (not c!19837)) b!111331))

(assert (= (and d!31579 (not res!54996)) b!111332))

(assert (=> d!31579 m!124693))

(declare-fun m!126807 () Bool)

(assert (=> d!31579 m!126807))

(assert (=> b!111330 m!124693))

(declare-fun m!126809 () Bool)

(assert (=> b!111330 m!126809))

(assert (=> b!111330 m!124693))

(assert (=> b!111330 m!126733))

(assert (=> b!111330 m!126733))

(declare-fun m!126811 () Bool)

(assert (=> b!111330 m!126811))

(assert (=> b!111332 m!124693))

(assert (=> b!111332 m!126733))

(assert (=> b!111332 m!126733))

(assert (=> b!111332 m!126811))

(assert (=> b!110300 d!31579))

(declare-fun b!111333 () Bool)

(declare-fun e!72378 () Option!164)

(assert (=> b!111333 (= e!72378 (Some!163 (_2!1231 (h!2225 (toList!811 lt!57053)))))))

(declare-fun e!72379 () Option!164)

(declare-fun b!111335 () Bool)

(assert (=> b!111335 (= e!72379 (getValueByKey!158 (t!5767 (toList!811 lt!57053)) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun c!19838 () Bool)

(declare-fun d!31581 () Bool)

(assert (=> d!31581 (= c!19838 (and ((_ is Cons!1626) (toList!811 lt!57053)) (= (_1!1231 (h!2225 (toList!811 lt!57053))) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!31581 (= (getValueByKey!158 (toList!811 lt!57053) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!72378)))

(declare-fun b!111334 () Bool)

(assert (=> b!111334 (= e!72378 e!72379)))

(declare-fun c!19839 () Bool)

(assert (=> b!111334 (= c!19839 (and ((_ is Cons!1626) (toList!811 lt!57053)) (not (= (_1!1231 (h!2225 (toList!811 lt!57053))) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2082 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!111336 () Bool)

(assert (=> b!111336 (= e!72379 None!162)))

(assert (= (and d!31581 c!19838) b!111333))

(assert (= (and d!31581 (not c!19838)) b!111334))

(assert (= (and b!111334 c!19839) b!111335))

(assert (= (and b!111334 (not c!19839)) b!111336))

(declare-fun m!126813 () Bool)

(assert (=> b!111335 m!126813))

(assert (=> b!110498 d!31581))

(declare-fun d!31583 () Bool)

(assert (=> d!31583 (= (get!1350 (getValueByKey!158 (toList!811 (+!150 lt!56698 (tuple2!2441 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))) lt!56696)) (v!2934 (getValueByKey!158 (toList!811 (+!150 lt!56698 (tuple2!2441 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))) lt!56696)))))

(assert (=> d!30961 d!31583))

(declare-fun e!72380 () Option!164)

(declare-fun b!111337 () Bool)

(assert (=> b!111337 (= e!72380 (Some!163 (_2!1231 (h!2225 (toList!811 (+!150 lt!56698 (tuple2!2441 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))))))))

(declare-fun b!111339 () Bool)

(declare-fun e!72381 () Option!164)

(assert (=> b!111339 (= e!72381 (getValueByKey!158 (t!5767 (toList!811 (+!150 lt!56698 (tuple2!2441 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))) lt!56696))))

(declare-fun d!31585 () Bool)

(declare-fun c!19840 () Bool)

(assert (=> d!31585 (= c!19840 (and ((_ is Cons!1626) (toList!811 (+!150 lt!56698 (tuple2!2441 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))) (= (_1!1231 (h!2225 (toList!811 (+!150 lt!56698 (tuple2!2441 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))) lt!56696)))))

(assert (=> d!31585 (= (getValueByKey!158 (toList!811 (+!150 lt!56698 (tuple2!2441 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))) lt!56696) e!72380)))

(declare-fun b!111338 () Bool)

(assert (=> b!111338 (= e!72380 e!72381)))

(declare-fun c!19841 () Bool)

(assert (=> b!111338 (= c!19841 (and ((_ is Cons!1626) (toList!811 (+!150 lt!56698 (tuple2!2441 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))) (not (= (_1!1231 (h!2225 (toList!811 (+!150 lt!56698 (tuple2!2441 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))) lt!56696))))))

(declare-fun b!111340 () Bool)

(assert (=> b!111340 (= e!72381 None!162)))

(assert (= (and d!31585 c!19840) b!111337))

(assert (= (and d!31585 (not c!19840)) b!111338))

(assert (= (and b!111338 c!19841) b!111339))

(assert (= (and b!111338 (not c!19841)) b!111340))

(declare-fun m!126815 () Bool)

(assert (=> b!111339 m!126815))

(assert (=> d!30961 d!31585))

(declare-fun d!31587 () Bool)

(declare-fun res!54997 () Bool)

(declare-fun e!72382 () Bool)

(assert (=> d!31587 (=> res!54997 e!72382)))

(assert (=> d!31587 (= res!54997 (and ((_ is Cons!1626) lt!56626) (= (_1!1231 (h!2225 lt!56626)) (_1!1231 lt!56457))))))

(assert (=> d!31587 (= (containsKey!162 lt!56626 (_1!1231 lt!56457)) e!72382)))

(declare-fun b!111341 () Bool)

(declare-fun e!72383 () Bool)

(assert (=> b!111341 (= e!72382 e!72383)))

(declare-fun res!54998 () Bool)

(assert (=> b!111341 (=> (not res!54998) (not e!72383))))

(assert (=> b!111341 (= res!54998 (and (or (not ((_ is Cons!1626) lt!56626)) (bvsle (_1!1231 (h!2225 lt!56626)) (_1!1231 lt!56457))) ((_ is Cons!1626) lt!56626) (bvslt (_1!1231 (h!2225 lt!56626)) (_1!1231 lt!56457))))))

(declare-fun b!111342 () Bool)

(assert (=> b!111342 (= e!72383 (containsKey!162 (t!5767 lt!56626) (_1!1231 lt!56457)))))

(assert (= (and d!31587 (not res!54997)) b!111341))

(assert (= (and b!111341 res!54998) b!111342))

(declare-fun m!126817 () Bool)

(assert (=> b!111342 m!126817))

(assert (=> b!110179 d!31587))

(declare-fun d!31589 () Bool)

(declare-fun c!19842 () Bool)

(assert (=> d!31589 (= c!19842 ((_ is Nil!1627) (toList!811 lt!56639)))))

(declare-fun e!72384 () (InoxSet tuple2!2440))

(assert (=> d!31589 (= (content!113 (toList!811 lt!56639)) e!72384)))

(declare-fun b!111343 () Bool)

(assert (=> b!111343 (= e!72384 ((as const (Array tuple2!2440 Bool)) false))))

(declare-fun b!111344 () Bool)

(assert (=> b!111344 (= e!72384 ((_ map or) (store ((as const (Array tuple2!2440 Bool)) false) (h!2225 (toList!811 lt!56639)) true) (content!113 (t!5767 (toList!811 lt!56639)))))))

(assert (= (and d!31589 c!19842) b!111343))

(assert (= (and d!31589 (not c!19842)) b!111344))

(declare-fun m!126819 () Bool)

(assert (=> b!111344 m!126819))

(declare-fun m!126821 () Bool)

(assert (=> b!111344 m!126821))

(assert (=> d!31041 d!31589))

(declare-fun d!31591 () Bool)

(assert (=> d!31591 (= (isEmpty!378 (toList!811 lt!56612)) ((_ is Nil!1627) (toList!811 lt!56612)))))

(assert (=> d!31013 d!31591))

(assert (=> b!110276 d!31105))

(declare-fun d!31593 () Bool)

(declare-fun res!54999 () Bool)

(declare-fun e!72385 () Bool)

(assert (=> d!31593 (=> res!54999 e!72385)))

(assert (=> d!31593 (= res!54999 (and ((_ is Cons!1626) (toList!811 lt!56639)) (= (_1!1231 (h!2225 (toList!811 lt!56639))) (_1!1231 lt!56457))))))

(assert (=> d!31593 (= (containsKey!162 (toList!811 lt!56639) (_1!1231 lt!56457)) e!72385)))

(declare-fun b!111345 () Bool)

(declare-fun e!72386 () Bool)

(assert (=> b!111345 (= e!72385 e!72386)))

(declare-fun res!55000 () Bool)

(assert (=> b!111345 (=> (not res!55000) (not e!72386))))

(assert (=> b!111345 (= res!55000 (and (or (not ((_ is Cons!1626) (toList!811 lt!56639))) (bvsle (_1!1231 (h!2225 (toList!811 lt!56639))) (_1!1231 lt!56457))) ((_ is Cons!1626) (toList!811 lt!56639)) (bvslt (_1!1231 (h!2225 (toList!811 lt!56639))) (_1!1231 lt!56457))))))

(declare-fun b!111346 () Bool)

(assert (=> b!111346 (= e!72386 (containsKey!162 (t!5767 (toList!811 lt!56639)) (_1!1231 lt!56457)))))

(assert (= (and d!31593 (not res!54999)) b!111345))

(assert (= (and b!111345 res!55000) b!111346))

(declare-fun m!126823 () Bool)

(assert (=> b!111346 m!126823))

(assert (=> d!30939 d!31593))

(declare-fun b!111347 () Bool)

(declare-fun e!72387 () Option!164)

(assert (=> b!111347 (= e!72387 (Some!163 (_2!1231 (h!2225 (t!5767 lt!56630)))))))

(declare-fun b!111349 () Bool)

(declare-fun e!72388 () Option!164)

(assert (=> b!111349 (= e!72388 (getValueByKey!158 (t!5767 (t!5767 lt!56630)) (_1!1231 lt!56454)))))

(declare-fun d!31595 () Bool)

(declare-fun c!19843 () Bool)

(assert (=> d!31595 (= c!19843 (and ((_ is Cons!1626) (t!5767 lt!56630)) (= (_1!1231 (h!2225 (t!5767 lt!56630))) (_1!1231 lt!56454))))))

(assert (=> d!31595 (= (getValueByKey!158 (t!5767 lt!56630) (_1!1231 lt!56454)) e!72387)))

(declare-fun b!111348 () Bool)

(assert (=> b!111348 (= e!72387 e!72388)))

(declare-fun c!19844 () Bool)

(assert (=> b!111348 (= c!19844 (and ((_ is Cons!1626) (t!5767 lt!56630)) (not (= (_1!1231 (h!2225 (t!5767 lt!56630))) (_1!1231 lt!56454)))))))

(declare-fun b!111350 () Bool)

(assert (=> b!111350 (= e!72388 None!162)))

(assert (= (and d!31595 c!19843) b!111347))

(assert (= (and d!31595 (not c!19843)) b!111348))

(assert (= (and b!111348 c!19844) b!111349))

(assert (= (and b!111348 (not c!19844)) b!111350))

(declare-fun m!126825 () Bool)

(assert (=> b!111349 m!126825))

(assert (=> b!110417 d!31595))

(declare-fun d!31597 () Bool)

(declare-fun lt!57442 () Bool)

(assert (=> d!31597 (= lt!57442 (select (content!113 (toList!811 lt!56875)) (tuple2!2441 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun e!72390 () Bool)

(assert (=> d!31597 (= lt!57442 e!72390)))

(declare-fun res!55001 () Bool)

(assert (=> d!31597 (=> (not res!55001) (not e!72390))))

(assert (=> d!31597 (= res!55001 ((_ is Cons!1626) (toList!811 lt!56875)))))

(assert (=> d!31597 (= (contains!839 (toList!811 lt!56875) (tuple2!2441 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992))))) lt!57442)))

(declare-fun b!111351 () Bool)

(declare-fun e!72389 () Bool)

(assert (=> b!111351 (= e!72390 e!72389)))

(declare-fun res!55002 () Bool)

(assert (=> b!111351 (=> res!55002 e!72389)))

(assert (=> b!111351 (= res!55002 (= (h!2225 (toList!811 lt!56875)) (tuple2!2441 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun b!111352 () Bool)

(assert (=> b!111352 (= e!72389 (contains!839 (t!5767 (toList!811 lt!56875)) (tuple2!2441 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))))

(assert (= (and d!31597 res!55001) b!111351))

(assert (= (and b!111351 (not res!55002)) b!111352))

(declare-fun m!126827 () Bool)

(assert (=> d!31597 m!126827))

(declare-fun m!126829 () Bool)

(assert (=> d!31597 m!126829))

(declare-fun m!126831 () Bool)

(assert (=> b!111352 m!126831))

(assert (=> b!110350 d!31597))

(declare-fun d!31599 () Bool)

(declare-fun e!72391 () Bool)

(assert (=> d!31599 e!72391))

(declare-fun res!55003 () Bool)

(assert (=> d!31599 (=> res!55003 e!72391)))

(declare-fun lt!57443 () Bool)

(assert (=> d!31599 (= res!55003 (not lt!57443))))

(declare-fun lt!57444 () Bool)

(assert (=> d!31599 (= lt!57443 lt!57444)))

(declare-fun lt!57446 () Unit!3403)

(declare-fun e!72392 () Unit!3403)

(assert (=> d!31599 (= lt!57446 e!72392)))

(declare-fun c!19845 () Bool)

(assert (=> d!31599 (= c!19845 lt!57444)))

(assert (=> d!31599 (= lt!57444 (containsKey!162 (toList!811 lt!56705) lt!56693))))

(assert (=> d!31599 (= (contains!838 lt!56705 lt!56693) lt!57443)))

(declare-fun b!111353 () Bool)

(declare-fun lt!57445 () Unit!3403)

(assert (=> b!111353 (= e!72392 lt!57445)))

(assert (=> b!111353 (= lt!57445 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 lt!56705) lt!56693))))

(assert (=> b!111353 (isDefined!111 (getValueByKey!158 (toList!811 lt!56705) lt!56693))))

(declare-fun b!111354 () Bool)

(declare-fun Unit!3466 () Unit!3403)

(assert (=> b!111354 (= e!72392 Unit!3466)))

(declare-fun b!111355 () Bool)

(assert (=> b!111355 (= e!72391 (isDefined!111 (getValueByKey!158 (toList!811 lt!56705) lt!56693)))))

(assert (= (and d!31599 c!19845) b!111353))

(assert (= (and d!31599 (not c!19845)) b!111354))

(assert (= (and d!31599 (not res!55003)) b!111355))

(declare-fun m!126833 () Bool)

(assert (=> d!31599 m!126833))

(declare-fun m!126835 () Bool)

(assert (=> b!111353 m!126835))

(assert (=> b!111353 m!125127))

(assert (=> b!111353 m!125127))

(declare-fun m!126837 () Bool)

(assert (=> b!111353 m!126837))

(assert (=> b!111355 m!125127))

(assert (=> b!111355 m!125127))

(assert (=> b!111355 m!126837))

(assert (=> d!30953 d!31599))

(assert (=> d!30953 d!30971))

(assert (=> d!30953 d!30957))

(declare-fun d!31601 () Bool)

(assert (=> d!31601 (= (apply!100 (+!150 lt!56705 (tuple2!2441 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992))))) lt!56693) (apply!100 lt!56705 lt!56693))))

(assert (=> d!31601 true))

(declare-fun _$34!908 () Unit!3403)

(assert (=> d!31601 (= (choose!691 lt!56705 lt!56690 (minValue!2498 (v!2930 (underlying!370 thiss!992))) lt!56693) _$34!908)))

(declare-fun bs!4588 () Bool)

(assert (= bs!4588 d!31601))

(assert (=> bs!4588 m!124587))

(assert (=> bs!4588 m!124587))

(assert (=> bs!4588 m!124589))

(assert (=> bs!4588 m!124593))

(assert (=> d!30953 d!31601))

(assert (=> d!30953 d!30965))

(assert (=> b!110307 d!31079))

(declare-fun d!31603 () Bool)

(assert (=> d!31603 (= (apply!100 (+!150 lt!56848 (tuple2!2441 lt!56839 (minValue!2498 newMap!16))) lt!56846) (get!1350 (getValueByKey!158 (toList!811 (+!150 lt!56848 (tuple2!2441 lt!56839 (minValue!2498 newMap!16)))) lt!56846)))))

(declare-fun bs!4589 () Bool)

(assert (= bs!4589 d!31603))

(declare-fun m!126839 () Bool)

(assert (=> bs!4589 m!126839))

(assert (=> bs!4589 m!126839))

(declare-fun m!126841 () Bool)

(assert (=> bs!4589 m!126841))

(assert (=> b!110307 d!31603))

(declare-fun d!31605 () Bool)

(declare-fun e!72393 () Bool)

(assert (=> d!31605 e!72393))

(declare-fun res!55004 () Bool)

(assert (=> d!31605 (=> (not res!55004) (not e!72393))))

(declare-fun lt!57449 () ListLongMap!1591)

(assert (=> d!31605 (= res!55004 (contains!838 lt!57449 (_1!1231 (tuple2!2441 lt!56835 (ite (and c!19438 c!19444) lt!56458 (zeroValue!2498 newMap!16))))))))

(declare-fun lt!57448 () List!1630)

(assert (=> d!31605 (= lt!57449 (ListLongMap!1592 lt!57448))))

(declare-fun lt!57450 () Unit!3403)

(declare-fun lt!57447 () Unit!3403)

(assert (=> d!31605 (= lt!57450 lt!57447)))

(assert (=> d!31605 (= (getValueByKey!158 lt!57448 (_1!1231 (tuple2!2441 lt!56835 (ite (and c!19438 c!19444) lt!56458 (zeroValue!2498 newMap!16))))) (Some!163 (_2!1231 (tuple2!2441 lt!56835 (ite (and c!19438 c!19444) lt!56458 (zeroValue!2498 newMap!16))))))))

(assert (=> d!31605 (= lt!57447 (lemmaContainsTupThenGetReturnValue!74 lt!57448 (_1!1231 (tuple2!2441 lt!56835 (ite (and c!19438 c!19444) lt!56458 (zeroValue!2498 newMap!16)))) (_2!1231 (tuple2!2441 lt!56835 (ite (and c!19438 c!19444) lt!56458 (zeroValue!2498 newMap!16))))))))

(assert (=> d!31605 (= lt!57448 (insertStrictlySorted!77 (toList!811 lt!56842) (_1!1231 (tuple2!2441 lt!56835 (ite (and c!19438 c!19444) lt!56458 (zeroValue!2498 newMap!16)))) (_2!1231 (tuple2!2441 lt!56835 (ite (and c!19438 c!19444) lt!56458 (zeroValue!2498 newMap!16))))))))

(assert (=> d!31605 (= (+!150 lt!56842 (tuple2!2441 lt!56835 (ite (and c!19438 c!19444) lt!56458 (zeroValue!2498 newMap!16)))) lt!57449)))

(declare-fun b!111356 () Bool)

(declare-fun res!55005 () Bool)

(assert (=> b!111356 (=> (not res!55005) (not e!72393))))

(assert (=> b!111356 (= res!55005 (= (getValueByKey!158 (toList!811 lt!57449) (_1!1231 (tuple2!2441 lt!56835 (ite (and c!19438 c!19444) lt!56458 (zeroValue!2498 newMap!16))))) (Some!163 (_2!1231 (tuple2!2441 lt!56835 (ite (and c!19438 c!19444) lt!56458 (zeroValue!2498 newMap!16)))))))))

(declare-fun b!111357 () Bool)

(assert (=> b!111357 (= e!72393 (contains!839 (toList!811 lt!57449) (tuple2!2441 lt!56835 (ite (and c!19438 c!19444) lt!56458 (zeroValue!2498 newMap!16)))))))

(assert (= (and d!31605 res!55004) b!111356))

(assert (= (and b!111356 res!55005) b!111357))

(declare-fun m!126843 () Bool)

(assert (=> d!31605 m!126843))

(declare-fun m!126845 () Bool)

(assert (=> d!31605 m!126845))

(declare-fun m!126847 () Bool)

(assert (=> d!31605 m!126847))

(declare-fun m!126849 () Bool)

(assert (=> d!31605 m!126849))

(declare-fun m!126851 () Bool)

(assert (=> b!111356 m!126851))

(declare-fun m!126853 () Bool)

(assert (=> b!111357 m!126853))

(assert (=> b!110307 d!31605))

(declare-fun d!31607 () Bool)

(assert (=> d!31607 (= (apply!100 lt!56848 lt!56846) (get!1350 (getValueByKey!158 (toList!811 lt!56848) lt!56846)))))

(declare-fun bs!4590 () Bool)

(assert (= bs!4590 d!31607))

(declare-fun m!126855 () Bool)

(assert (=> bs!4590 m!126855))

(assert (=> bs!4590 m!126855))

(declare-fun m!126857 () Bool)

(assert (=> bs!4590 m!126857))

(assert (=> b!110307 d!31607))

(declare-fun d!31609 () Bool)

(assert (=> d!31609 (= (apply!100 (+!150 lt!56842 (tuple2!2441 lt!56835 (ite (and c!19438 c!19444) lt!56458 (zeroValue!2498 newMap!16)))) lt!56853) (apply!100 lt!56842 lt!56853))))

(declare-fun lt!57451 () Unit!3403)

(assert (=> d!31609 (= lt!57451 (choose!691 lt!56842 lt!56835 (ite (and c!19438 c!19444) lt!56458 (zeroValue!2498 newMap!16)) lt!56853))))

(declare-fun e!72394 () Bool)

(assert (=> d!31609 e!72394))

(declare-fun res!55006 () Bool)

(assert (=> d!31609 (=> (not res!55006) (not e!72394))))

(assert (=> d!31609 (= res!55006 (contains!838 lt!56842 lt!56853))))

(assert (=> d!31609 (= (addApplyDifferent!76 lt!56842 lt!56835 (ite (and c!19438 c!19444) lt!56458 (zeroValue!2498 newMap!16)) lt!56853) lt!57451)))

(declare-fun b!111358 () Bool)

(assert (=> b!111358 (= e!72394 (not (= lt!56853 lt!56835)))))

(assert (= (and d!31609 res!55006) b!111358))

(declare-fun m!126859 () Bool)

(assert (=> d!31609 m!126859))

(declare-fun m!126861 () Bool)

(assert (=> d!31609 m!126861))

(assert (=> d!31609 m!124975))

(assert (=> d!31609 m!124975))

(assert (=> d!31609 m!124977))

(assert (=> d!31609 m!124993))

(assert (=> b!110307 d!31609))

(declare-fun d!31611 () Bool)

(assert (=> d!31611 (= (apply!100 (+!150 lt!56855 (tuple2!2441 lt!56840 (minValue!2498 newMap!16))) lt!56843) (get!1350 (getValueByKey!158 (toList!811 (+!150 lt!56855 (tuple2!2441 lt!56840 (minValue!2498 newMap!16)))) lt!56843)))))

(declare-fun bs!4591 () Bool)

(assert (= bs!4591 d!31611))

(declare-fun m!126863 () Bool)

(assert (=> bs!4591 m!126863))

(assert (=> bs!4591 m!126863))

(declare-fun m!126865 () Bool)

(assert (=> bs!4591 m!126865))

(assert (=> b!110307 d!31611))

(declare-fun d!31613 () Bool)

(assert (=> d!31613 (= (apply!100 (+!150 lt!56842 (tuple2!2441 lt!56835 (ite (and c!19438 c!19444) lt!56458 (zeroValue!2498 newMap!16)))) lt!56853) (get!1350 (getValueByKey!158 (toList!811 (+!150 lt!56842 (tuple2!2441 lt!56835 (ite (and c!19438 c!19444) lt!56458 (zeroValue!2498 newMap!16))))) lt!56853)))))

(declare-fun bs!4592 () Bool)

(assert (= bs!4592 d!31613))

(declare-fun m!126867 () Bool)

(assert (=> bs!4592 m!126867))

(assert (=> bs!4592 m!126867))

(declare-fun m!126869 () Bool)

(assert (=> bs!4592 m!126869))

(assert (=> b!110307 d!31613))

(declare-fun d!31615 () Bool)

(declare-fun e!72395 () Bool)

(assert (=> d!31615 e!72395))

(declare-fun res!55007 () Bool)

(assert (=> d!31615 (=> (not res!55007) (not e!72395))))

(declare-fun lt!57454 () ListLongMap!1591)

(assert (=> d!31615 (= res!55007 (contains!838 lt!57454 (_1!1231 (tuple2!2441 lt!56839 (minValue!2498 newMap!16)))))))

(declare-fun lt!57453 () List!1630)

(assert (=> d!31615 (= lt!57454 (ListLongMap!1592 lt!57453))))

(declare-fun lt!57455 () Unit!3403)

(declare-fun lt!57452 () Unit!3403)

(assert (=> d!31615 (= lt!57455 lt!57452)))

(assert (=> d!31615 (= (getValueByKey!158 lt!57453 (_1!1231 (tuple2!2441 lt!56839 (minValue!2498 newMap!16)))) (Some!163 (_2!1231 (tuple2!2441 lt!56839 (minValue!2498 newMap!16)))))))

(assert (=> d!31615 (= lt!57452 (lemmaContainsTupThenGetReturnValue!74 lt!57453 (_1!1231 (tuple2!2441 lt!56839 (minValue!2498 newMap!16))) (_2!1231 (tuple2!2441 lt!56839 (minValue!2498 newMap!16)))))))

(assert (=> d!31615 (= lt!57453 (insertStrictlySorted!77 (toList!811 lt!56848) (_1!1231 (tuple2!2441 lt!56839 (minValue!2498 newMap!16))) (_2!1231 (tuple2!2441 lt!56839 (minValue!2498 newMap!16)))))))

(assert (=> d!31615 (= (+!150 lt!56848 (tuple2!2441 lt!56839 (minValue!2498 newMap!16))) lt!57454)))

(declare-fun b!111359 () Bool)

(declare-fun res!55008 () Bool)

(assert (=> b!111359 (=> (not res!55008) (not e!72395))))

(assert (=> b!111359 (= res!55008 (= (getValueByKey!158 (toList!811 lt!57454) (_1!1231 (tuple2!2441 lt!56839 (minValue!2498 newMap!16)))) (Some!163 (_2!1231 (tuple2!2441 lt!56839 (minValue!2498 newMap!16))))))))

(declare-fun b!111360 () Bool)

(assert (=> b!111360 (= e!72395 (contains!839 (toList!811 lt!57454) (tuple2!2441 lt!56839 (minValue!2498 newMap!16))))))

(assert (= (and d!31615 res!55007) b!111359))

(assert (= (and b!111359 res!55008) b!111360))

(declare-fun m!126871 () Bool)

(assert (=> d!31615 m!126871))

(declare-fun m!126873 () Bool)

(assert (=> d!31615 m!126873))

(declare-fun m!126875 () Bool)

(assert (=> d!31615 m!126875))

(declare-fun m!126877 () Bool)

(assert (=> d!31615 m!126877))

(declare-fun m!126879 () Bool)

(assert (=> b!111359 m!126879))

(declare-fun m!126881 () Bool)

(assert (=> b!111360 m!126881))

(assert (=> b!110307 d!31615))

(declare-fun d!31617 () Bool)

(assert (=> d!31617 (= (apply!100 lt!56842 lt!56853) (get!1350 (getValueByKey!158 (toList!811 lt!56842) lt!56853)))))

(declare-fun bs!4593 () Bool)

(assert (= bs!4593 d!31617))

(declare-fun m!126883 () Bool)

(assert (=> bs!4593 m!126883))

(assert (=> bs!4593 m!126883))

(declare-fun m!126885 () Bool)

(assert (=> bs!4593 m!126885))

(assert (=> b!110307 d!31617))

(declare-fun d!31619 () Bool)

(assert (=> d!31619 (= (apply!100 lt!56855 lt!56843) (get!1350 (getValueByKey!158 (toList!811 lt!56855) lt!56843)))))

(declare-fun bs!4594 () Bool)

(assert (= bs!4594 d!31619))

(declare-fun m!126887 () Bool)

(assert (=> bs!4594 m!126887))

(assert (=> bs!4594 m!126887))

(declare-fun m!126889 () Bool)

(assert (=> bs!4594 m!126889))

(assert (=> b!110307 d!31619))

(declare-fun d!31621 () Bool)

(declare-fun e!72396 () Bool)

(assert (=> d!31621 e!72396))

(declare-fun res!55009 () Bool)

(assert (=> d!31621 (=> (not res!55009) (not e!72396))))

(declare-fun lt!57458 () ListLongMap!1591)

(assert (=> d!31621 (= res!55009 (contains!838 lt!57458 (_1!1231 (tuple2!2441 lt!56840 (minValue!2498 newMap!16)))))))

(declare-fun lt!57457 () List!1630)

(assert (=> d!31621 (= lt!57458 (ListLongMap!1592 lt!57457))))

(declare-fun lt!57459 () Unit!3403)

(declare-fun lt!57456 () Unit!3403)

(assert (=> d!31621 (= lt!57459 lt!57456)))

(assert (=> d!31621 (= (getValueByKey!158 lt!57457 (_1!1231 (tuple2!2441 lt!56840 (minValue!2498 newMap!16)))) (Some!163 (_2!1231 (tuple2!2441 lt!56840 (minValue!2498 newMap!16)))))))

(assert (=> d!31621 (= lt!57456 (lemmaContainsTupThenGetReturnValue!74 lt!57457 (_1!1231 (tuple2!2441 lt!56840 (minValue!2498 newMap!16))) (_2!1231 (tuple2!2441 lt!56840 (minValue!2498 newMap!16)))))))

(assert (=> d!31621 (= lt!57457 (insertStrictlySorted!77 (toList!811 lt!56855) (_1!1231 (tuple2!2441 lt!56840 (minValue!2498 newMap!16))) (_2!1231 (tuple2!2441 lt!56840 (minValue!2498 newMap!16)))))))

(assert (=> d!31621 (= (+!150 lt!56855 (tuple2!2441 lt!56840 (minValue!2498 newMap!16))) lt!57458)))

(declare-fun b!111361 () Bool)

(declare-fun res!55010 () Bool)

(assert (=> b!111361 (=> (not res!55010) (not e!72396))))

(assert (=> b!111361 (= res!55010 (= (getValueByKey!158 (toList!811 lt!57458) (_1!1231 (tuple2!2441 lt!56840 (minValue!2498 newMap!16)))) (Some!163 (_2!1231 (tuple2!2441 lt!56840 (minValue!2498 newMap!16))))))))

(declare-fun b!111362 () Bool)

(assert (=> b!111362 (= e!72396 (contains!839 (toList!811 lt!57458) (tuple2!2441 lt!56840 (minValue!2498 newMap!16))))))

(assert (= (and d!31621 res!55009) b!111361))

(assert (= (and b!111361 res!55010) b!111362))

(declare-fun m!126891 () Bool)

(assert (=> d!31621 m!126891))

(declare-fun m!126893 () Bool)

(assert (=> d!31621 m!126893))

(declare-fun m!126895 () Bool)

(assert (=> d!31621 m!126895))

(declare-fun m!126897 () Bool)

(assert (=> d!31621 m!126897))

(declare-fun m!126899 () Bool)

(assert (=> b!111361 m!126899))

(declare-fun m!126901 () Bool)

(assert (=> b!111362 m!126901))

(assert (=> b!110307 d!31621))

(declare-fun d!31623 () Bool)

(assert (=> d!31623 (contains!838 (+!150 lt!56845 (tuple2!2441 lt!56844 (ite (and c!19438 c!19444) lt!56458 (zeroValue!2498 newMap!16)))) lt!56847)))

(declare-fun lt!57460 () Unit!3403)

(assert (=> d!31623 (= lt!57460 (choose!692 lt!56845 lt!56844 (ite (and c!19438 c!19444) lt!56458 (zeroValue!2498 newMap!16)) lt!56847))))

(assert (=> d!31623 (contains!838 lt!56845 lt!56847)))

(assert (=> d!31623 (= (addStillContains!76 lt!56845 lt!56844 (ite (and c!19438 c!19444) lt!56458 (zeroValue!2498 newMap!16)) lt!56847) lt!57460)))

(declare-fun bs!4595 () Bool)

(assert (= bs!4595 d!31623))

(assert (=> bs!4595 m!124991))

(assert (=> bs!4595 m!124991))

(assert (=> bs!4595 m!124997))

(declare-fun m!126903 () Bool)

(assert (=> bs!4595 m!126903))

(declare-fun m!126905 () Bool)

(assert (=> bs!4595 m!126905))

(assert (=> b!110307 d!31623))

(declare-fun d!31625 () Bool)

(assert (=> d!31625 (= (apply!100 (+!150 lt!56855 (tuple2!2441 lt!56840 (minValue!2498 newMap!16))) lt!56843) (apply!100 lt!56855 lt!56843))))

(declare-fun lt!57461 () Unit!3403)

(assert (=> d!31625 (= lt!57461 (choose!691 lt!56855 lt!56840 (minValue!2498 newMap!16) lt!56843))))

(declare-fun e!72397 () Bool)

(assert (=> d!31625 e!72397))

(declare-fun res!55011 () Bool)

(assert (=> d!31625 (=> (not res!55011) (not e!72397))))

(assert (=> d!31625 (= res!55011 (contains!838 lt!56855 lt!56843))))

(assert (=> d!31625 (= (addApplyDifferent!76 lt!56855 lt!56840 (minValue!2498 newMap!16) lt!56843) lt!57461)))

(declare-fun b!111363 () Bool)

(assert (=> b!111363 (= e!72397 (not (= lt!56843 lt!56840)))))

(assert (= (and d!31625 res!55011) b!111363))

(declare-fun m!126907 () Bool)

(assert (=> d!31625 m!126907))

(declare-fun m!126909 () Bool)

(assert (=> d!31625 m!126909))

(assert (=> d!31625 m!124983))

(assert (=> d!31625 m!124983))

(assert (=> d!31625 m!124985))

(assert (=> d!31625 m!124989))

(assert (=> b!110307 d!31625))

(declare-fun d!31627 () Bool)

(assert (=> d!31627 (= (apply!100 (+!150 lt!56848 (tuple2!2441 lt!56839 (minValue!2498 newMap!16))) lt!56846) (apply!100 lt!56848 lt!56846))))

(declare-fun lt!57462 () Unit!3403)

(assert (=> d!31627 (= lt!57462 (choose!691 lt!56848 lt!56839 (minValue!2498 newMap!16) lt!56846))))

(declare-fun e!72398 () Bool)

(assert (=> d!31627 e!72398))

(declare-fun res!55012 () Bool)

(assert (=> d!31627 (=> (not res!55012) (not e!72398))))

(assert (=> d!31627 (= res!55012 (contains!838 lt!56848 lt!56846))))

(assert (=> d!31627 (= (addApplyDifferent!76 lt!56848 lt!56839 (minValue!2498 newMap!16) lt!56846) lt!57462)))

(declare-fun b!111364 () Bool)

(assert (=> b!111364 (= e!72398 (not (= lt!56846 lt!56839)))))

(assert (= (and d!31627 res!55012) b!111364))

(declare-fun m!126911 () Bool)

(assert (=> d!31627 m!126911))

(declare-fun m!126913 () Bool)

(assert (=> d!31627 m!126913))

(assert (=> d!31627 m!124981))

(assert (=> d!31627 m!124981))

(assert (=> d!31627 m!125001))

(assert (=> d!31627 m!125005))

(assert (=> b!110307 d!31627))

(declare-fun d!31629 () Bool)

(declare-fun e!72399 () Bool)

(assert (=> d!31629 e!72399))

(declare-fun res!55013 () Bool)

(assert (=> d!31629 (=> res!55013 e!72399)))

(declare-fun lt!57463 () Bool)

(assert (=> d!31629 (= res!55013 (not lt!57463))))

(declare-fun lt!57464 () Bool)

(assert (=> d!31629 (= lt!57463 lt!57464)))

(declare-fun lt!57466 () Unit!3403)

(declare-fun e!72400 () Unit!3403)

(assert (=> d!31629 (= lt!57466 e!72400)))

(declare-fun c!19846 () Bool)

(assert (=> d!31629 (= c!19846 lt!57464)))

(assert (=> d!31629 (= lt!57464 (containsKey!162 (toList!811 (+!150 lt!56845 (tuple2!2441 lt!56844 (ite (and c!19438 c!19444) lt!56458 (zeroValue!2498 newMap!16))))) lt!56847))))

(assert (=> d!31629 (= (contains!838 (+!150 lt!56845 (tuple2!2441 lt!56844 (ite (and c!19438 c!19444) lt!56458 (zeroValue!2498 newMap!16)))) lt!56847) lt!57463)))

(declare-fun b!111365 () Bool)

(declare-fun lt!57465 () Unit!3403)

(assert (=> b!111365 (= e!72400 lt!57465)))

(assert (=> b!111365 (= lt!57465 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 (+!150 lt!56845 (tuple2!2441 lt!56844 (ite (and c!19438 c!19444) lt!56458 (zeroValue!2498 newMap!16))))) lt!56847))))

(assert (=> b!111365 (isDefined!111 (getValueByKey!158 (toList!811 (+!150 lt!56845 (tuple2!2441 lt!56844 (ite (and c!19438 c!19444) lt!56458 (zeroValue!2498 newMap!16))))) lt!56847))))

(declare-fun b!111366 () Bool)

(declare-fun Unit!3467 () Unit!3403)

(assert (=> b!111366 (= e!72400 Unit!3467)))

(declare-fun b!111367 () Bool)

(assert (=> b!111367 (= e!72399 (isDefined!111 (getValueByKey!158 (toList!811 (+!150 lt!56845 (tuple2!2441 lt!56844 (ite (and c!19438 c!19444) lt!56458 (zeroValue!2498 newMap!16))))) lt!56847)))))

(assert (= (and d!31629 c!19846) b!111365))

(assert (= (and d!31629 (not c!19846)) b!111366))

(assert (= (and d!31629 (not res!55013)) b!111367))

(declare-fun m!126915 () Bool)

(assert (=> d!31629 m!126915))

(declare-fun m!126917 () Bool)

(assert (=> b!111365 m!126917))

(declare-fun m!126919 () Bool)

(assert (=> b!111365 m!126919))

(assert (=> b!111365 m!126919))

(declare-fun m!126921 () Bool)

(assert (=> b!111365 m!126921))

(assert (=> b!111367 m!126919))

(assert (=> b!111367 m!126919))

(assert (=> b!111367 m!126921))

(assert (=> b!110307 d!31629))

(declare-fun d!31631 () Bool)

(declare-fun e!72401 () Bool)

(assert (=> d!31631 e!72401))

(declare-fun res!55014 () Bool)

(assert (=> d!31631 (=> (not res!55014) (not e!72401))))

(declare-fun lt!57469 () ListLongMap!1591)

(assert (=> d!31631 (= res!55014 (contains!838 lt!57469 (_1!1231 (tuple2!2441 lt!56844 (ite (and c!19438 c!19444) lt!56458 (zeroValue!2498 newMap!16))))))))

(declare-fun lt!57468 () List!1630)

(assert (=> d!31631 (= lt!57469 (ListLongMap!1592 lt!57468))))

(declare-fun lt!57470 () Unit!3403)

(declare-fun lt!57467 () Unit!3403)

(assert (=> d!31631 (= lt!57470 lt!57467)))

(assert (=> d!31631 (= (getValueByKey!158 lt!57468 (_1!1231 (tuple2!2441 lt!56844 (ite (and c!19438 c!19444) lt!56458 (zeroValue!2498 newMap!16))))) (Some!163 (_2!1231 (tuple2!2441 lt!56844 (ite (and c!19438 c!19444) lt!56458 (zeroValue!2498 newMap!16))))))))

(assert (=> d!31631 (= lt!57467 (lemmaContainsTupThenGetReturnValue!74 lt!57468 (_1!1231 (tuple2!2441 lt!56844 (ite (and c!19438 c!19444) lt!56458 (zeroValue!2498 newMap!16)))) (_2!1231 (tuple2!2441 lt!56844 (ite (and c!19438 c!19444) lt!56458 (zeroValue!2498 newMap!16))))))))

(assert (=> d!31631 (= lt!57468 (insertStrictlySorted!77 (toList!811 lt!56845) (_1!1231 (tuple2!2441 lt!56844 (ite (and c!19438 c!19444) lt!56458 (zeroValue!2498 newMap!16)))) (_2!1231 (tuple2!2441 lt!56844 (ite (and c!19438 c!19444) lt!56458 (zeroValue!2498 newMap!16))))))))

(assert (=> d!31631 (= (+!150 lt!56845 (tuple2!2441 lt!56844 (ite (and c!19438 c!19444) lt!56458 (zeroValue!2498 newMap!16)))) lt!57469)))

(declare-fun b!111368 () Bool)

(declare-fun res!55015 () Bool)

(assert (=> b!111368 (=> (not res!55015) (not e!72401))))

(assert (=> b!111368 (= res!55015 (= (getValueByKey!158 (toList!811 lt!57469) (_1!1231 (tuple2!2441 lt!56844 (ite (and c!19438 c!19444) lt!56458 (zeroValue!2498 newMap!16))))) (Some!163 (_2!1231 (tuple2!2441 lt!56844 (ite (and c!19438 c!19444) lt!56458 (zeroValue!2498 newMap!16)))))))))

(declare-fun b!111369 () Bool)

(assert (=> b!111369 (= e!72401 (contains!839 (toList!811 lt!57469) (tuple2!2441 lt!56844 (ite (and c!19438 c!19444) lt!56458 (zeroValue!2498 newMap!16)))))))

(assert (= (and d!31631 res!55014) b!111368))

(assert (= (and b!111368 res!55015) b!111369))

(declare-fun m!126923 () Bool)

(assert (=> d!31631 m!126923))

(declare-fun m!126925 () Bool)

(assert (=> d!31631 m!126925))

(declare-fun m!126927 () Bool)

(assert (=> d!31631 m!126927))

(declare-fun m!126929 () Bool)

(assert (=> d!31631 m!126929))

(declare-fun m!126931 () Bool)

(assert (=> b!111368 m!126931))

(declare-fun m!126933 () Bool)

(assert (=> b!111369 m!126933))

(assert (=> b!110307 d!31631))

(declare-fun d!31633 () Bool)

(assert (=> d!31633 (isDefined!111 (getValueByKey!158 (toList!811 lt!56612) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!57471 () Unit!3403)

(assert (=> d!31633 (= lt!57471 (choose!684 (toList!811 lt!56612) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!72402 () Bool)

(assert (=> d!31633 e!72402))

(declare-fun res!55016 () Bool)

(assert (=> d!31633 (=> (not res!55016) (not e!72402))))

(assert (=> d!31633 (= res!55016 (isStrictlySorted!311 (toList!811 lt!56612)))))

(assert (=> d!31633 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 lt!56612) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!57471)))

(declare-fun b!111370 () Bool)

(assert (=> b!111370 (= e!72402 (containsKey!162 (toList!811 lt!56612) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!31633 res!55016) b!111370))

(assert (=> d!31633 m!124503))

(assert (=> d!31633 m!125325))

(assert (=> d!31633 m!125325))

(assert (=> d!31633 m!125457))

(assert (=> d!31633 m!124503))

(declare-fun m!126935 () Bool)

(assert (=> d!31633 m!126935))

(assert (=> d!31633 m!125639))

(assert (=> b!111370 m!124503))

(assert (=> b!111370 m!125453))

(assert (=> b!110531 d!31633))

(assert (=> b!110531 d!31459))

(assert (=> b!110531 d!31375))

(declare-fun d!31635 () Bool)

(declare-fun lt!57472 () Bool)

(assert (=> d!31635 (= lt!57472 (select (content!113 (t!5767 (toList!811 lt!56631))) lt!56454))))

(declare-fun e!72404 () Bool)

(assert (=> d!31635 (= lt!57472 e!72404)))

(declare-fun res!55017 () Bool)

(assert (=> d!31635 (=> (not res!55017) (not e!72404))))

(assert (=> d!31635 (= res!55017 ((_ is Cons!1626) (t!5767 (toList!811 lt!56631))))))

(assert (=> d!31635 (= (contains!839 (t!5767 (toList!811 lt!56631)) lt!56454) lt!57472)))

(declare-fun b!111371 () Bool)

(declare-fun e!72403 () Bool)

(assert (=> b!111371 (= e!72404 e!72403)))

(declare-fun res!55018 () Bool)

(assert (=> b!111371 (=> res!55018 e!72403)))

(assert (=> b!111371 (= res!55018 (= (h!2225 (t!5767 (toList!811 lt!56631))) lt!56454))))

(declare-fun b!111372 () Bool)

(assert (=> b!111372 (= e!72403 (contains!839 (t!5767 (t!5767 (toList!811 lt!56631))) lt!56454))))

(assert (= (and d!31635 res!55017) b!111371))

(assert (= (and b!111371 (not res!55018)) b!111372))

(assert (=> d!31635 m!126699))

(declare-fun m!126937 () Bool)

(assert (=> d!31635 m!126937))

(declare-fun m!126939 () Bool)

(assert (=> b!111372 m!126939))

(assert (=> b!110321 d!31635))

(declare-fun d!31637 () Bool)

(assert (=> d!31637 (= (isDefined!111 (getValueByKey!158 (toList!811 call!11697) (select (arr!2081 (_keys!4341 newMap!16)) (index!3195 lt!56591)))) (not (isEmpty!377 (getValueByKey!158 (toList!811 call!11697) (select (arr!2081 (_keys!4341 newMap!16)) (index!3195 lt!56591))))))))

(declare-fun bs!4596 () Bool)

(assert (= bs!4596 d!31637))

(assert (=> bs!4596 m!124663))

(declare-fun m!126941 () Bool)

(assert (=> bs!4596 m!126941))

(assert (=> b!110092 d!31637))

(declare-fun b!111373 () Bool)

(declare-fun e!72405 () Option!164)

(assert (=> b!111373 (= e!72405 (Some!163 (_2!1231 (h!2225 (toList!811 call!11697)))))))

(declare-fun b!111375 () Bool)

(declare-fun e!72406 () Option!164)

(assert (=> b!111375 (= e!72406 (getValueByKey!158 (t!5767 (toList!811 call!11697)) (select (arr!2081 (_keys!4341 newMap!16)) (index!3195 lt!56591))))))

(declare-fun d!31639 () Bool)

(declare-fun c!19847 () Bool)

(assert (=> d!31639 (= c!19847 (and ((_ is Cons!1626) (toList!811 call!11697)) (= (_1!1231 (h!2225 (toList!811 call!11697))) (select (arr!2081 (_keys!4341 newMap!16)) (index!3195 lt!56591)))))))

(assert (=> d!31639 (= (getValueByKey!158 (toList!811 call!11697) (select (arr!2081 (_keys!4341 newMap!16)) (index!3195 lt!56591))) e!72405)))

(declare-fun b!111374 () Bool)

(assert (=> b!111374 (= e!72405 e!72406)))

(declare-fun c!19848 () Bool)

(assert (=> b!111374 (= c!19848 (and ((_ is Cons!1626) (toList!811 call!11697)) (not (= (_1!1231 (h!2225 (toList!811 call!11697))) (select (arr!2081 (_keys!4341 newMap!16)) (index!3195 lt!56591))))))))

(declare-fun b!111376 () Bool)

(assert (=> b!111376 (= e!72406 None!162)))

(assert (= (and d!31639 c!19847) b!111373))

(assert (= (and d!31639 (not c!19847)) b!111374))

(assert (= (and b!111374 c!19848) b!111375))

(assert (= (and b!111374 (not c!19848)) b!111376))

(assert (=> b!111375 m!124439))

(declare-fun m!126943 () Bool)

(assert (=> b!111375 m!126943))

(assert (=> b!110092 d!31639))

(declare-fun b!111377 () Bool)

(declare-fun e!72411 () List!1630)

(declare-fun e!72410 () List!1630)

(assert (=> b!111377 (= e!72411 e!72410)))

(declare-fun c!19851 () Bool)

(assert (=> b!111377 (= c!19851 (and ((_ is Cons!1626) (t!5767 (toList!811 (+!150 lt!56462 lt!56454)))) (= (_1!1231 (h!2225 (t!5767 (toList!811 (+!150 lt!56462 lt!56454))))) (_1!1231 lt!56457))))))

(declare-fun bm!11888 () Bool)

(declare-fun call!11891 () List!1630)

(declare-fun call!11892 () List!1630)

(assert (=> bm!11888 (= call!11891 call!11892)))

(declare-fun b!111378 () Bool)

(assert (=> b!111378 (= e!72411 call!11892)))

(declare-fun bm!11889 () Bool)

(declare-fun call!11893 () List!1630)

(assert (=> bm!11889 (= call!11893 call!11891)))

(declare-fun e!72409 () List!1630)

(declare-fun c!19849 () Bool)

(declare-fun bm!11890 () Bool)

(assert (=> bm!11890 (= call!11892 ($colon$colon!83 e!72409 (ite c!19849 (h!2225 (t!5767 (toList!811 (+!150 lt!56462 lt!56454)))) (tuple2!2441 (_1!1231 lt!56457) (_2!1231 lt!56457)))))))

(declare-fun c!19852 () Bool)

(assert (=> bm!11890 (= c!19852 c!19849)))

(declare-fun b!111379 () Bool)

(assert (=> b!111379 (= e!72410 call!11891)))

(declare-fun b!111381 () Bool)

(declare-fun e!72408 () Bool)

(declare-fun lt!57473 () List!1630)

(assert (=> b!111381 (= e!72408 (contains!839 lt!57473 (tuple2!2441 (_1!1231 lt!56457) (_2!1231 lt!56457))))))

(declare-fun b!111382 () Bool)

(declare-fun e!72407 () List!1630)

(assert (=> b!111382 (= e!72407 call!11893)))

(declare-fun b!111383 () Bool)

(declare-fun res!55020 () Bool)

(assert (=> b!111383 (=> (not res!55020) (not e!72408))))

(assert (=> b!111383 (= res!55020 (containsKey!162 lt!57473 (_1!1231 lt!56457)))))

(declare-fun c!19850 () Bool)

(declare-fun b!111384 () Bool)

(assert (=> b!111384 (= c!19850 (and ((_ is Cons!1626) (t!5767 (toList!811 (+!150 lt!56462 lt!56454)))) (bvsgt (_1!1231 (h!2225 (t!5767 (toList!811 (+!150 lt!56462 lt!56454))))) (_1!1231 lt!56457))))))

(assert (=> b!111384 (= e!72410 e!72407)))

(declare-fun b!111385 () Bool)

(assert (=> b!111385 (= e!72407 call!11893)))

(declare-fun b!111386 () Bool)

(assert (=> b!111386 (= e!72409 (ite c!19851 (t!5767 (t!5767 (toList!811 (+!150 lt!56462 lt!56454)))) (ite c!19850 (Cons!1626 (h!2225 (t!5767 (toList!811 (+!150 lt!56462 lt!56454)))) (t!5767 (t!5767 (toList!811 (+!150 lt!56462 lt!56454))))) Nil!1627)))))

(declare-fun b!111380 () Bool)

(assert (=> b!111380 (= e!72409 (insertStrictlySorted!77 (t!5767 (t!5767 (toList!811 (+!150 lt!56462 lt!56454)))) (_1!1231 lt!56457) (_2!1231 lt!56457)))))

(declare-fun d!31641 () Bool)

(assert (=> d!31641 e!72408))

(declare-fun res!55019 () Bool)

(assert (=> d!31641 (=> (not res!55019) (not e!72408))))

(assert (=> d!31641 (= res!55019 (isStrictlySorted!311 lt!57473))))

(assert (=> d!31641 (= lt!57473 e!72411)))

(assert (=> d!31641 (= c!19849 (and ((_ is Cons!1626) (t!5767 (toList!811 (+!150 lt!56462 lt!56454)))) (bvslt (_1!1231 (h!2225 (t!5767 (toList!811 (+!150 lt!56462 lt!56454))))) (_1!1231 lt!56457))))))

(assert (=> d!31641 (isStrictlySorted!311 (t!5767 (toList!811 (+!150 lt!56462 lt!56454))))))

(assert (=> d!31641 (= (insertStrictlySorted!77 (t!5767 (toList!811 (+!150 lt!56462 lt!56454))) (_1!1231 lt!56457) (_2!1231 lt!56457)) lt!57473)))

(assert (= (and d!31641 c!19849) b!111378))

(assert (= (and d!31641 (not c!19849)) b!111377))

(assert (= (and b!111377 c!19851) b!111379))

(assert (= (and b!111377 (not c!19851)) b!111384))

(assert (= (and b!111384 c!19850) b!111382))

(assert (= (and b!111384 (not c!19850)) b!111385))

(assert (= (or b!111382 b!111385) bm!11889))

(assert (= (or b!111379 bm!11889) bm!11888))

(assert (= (or b!111378 bm!11888) bm!11890))

(assert (= (and bm!11890 c!19852) b!111380))

(assert (= (and bm!11890 (not c!19852)) b!111386))

(assert (= (and d!31641 res!55019) b!111383))

(assert (= (and b!111383 res!55020) b!111381))

(declare-fun m!126945 () Bool)

(assert (=> b!111383 m!126945))

(declare-fun m!126947 () Bool)

(assert (=> b!111380 m!126947))

(declare-fun m!126949 () Bool)

(assert (=> b!111381 m!126949))

(declare-fun m!126951 () Bool)

(assert (=> d!31641 m!126951))

(assert (=> d!31641 m!126431))

(declare-fun m!126953 () Bool)

(assert (=> bm!11890 m!126953))

(assert (=> b!110184 d!31641))

(declare-fun b!111388 () Bool)

(declare-fun res!55021 () Bool)

(declare-fun e!72412 () Bool)

(assert (=> b!111388 (=> (not res!55021) (not e!72412))))

(assert (=> b!111388 (= res!55021 (bvsge (size!2342 (v!2930 (underlying!370 thiss!992))) (_size!508 (v!2930 (underlying!370 thiss!992)))))))

(declare-fun d!31643 () Bool)

(declare-fun res!55023 () Bool)

(assert (=> d!31643 (=> (not res!55023) (not e!72412))))

(assert (=> d!31643 (= res!55023 (validMask!0 (mask!6795 (v!2930 (underlying!370 thiss!992)))))))

(assert (=> d!31643 (= (simpleValid!76 (v!2930 (underlying!370 thiss!992))) e!72412)))

(declare-fun b!111387 () Bool)

(declare-fun res!55024 () Bool)

(assert (=> b!111387 (=> (not res!55024) (not e!72412))))

(assert (=> b!111387 (= res!55024 (and (= (size!2339 (_values!2610 (v!2930 (underlying!370 thiss!992)))) (bvadd (mask!6795 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000000001)) (= (size!2338 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (size!2339 (_values!2610 (v!2930 (underlying!370 thiss!992))))) (bvsge (_size!508 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!508 (v!2930 (underlying!370 thiss!992))) (bvadd (mask!6795 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000000001))))))

(declare-fun b!111390 () Bool)

(assert (=> b!111390 (= e!72412 (and (bvsge (extraKeys!2424 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2424 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!508 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun b!111389 () Bool)

(declare-fun res!55022 () Bool)

(assert (=> b!111389 (=> (not res!55022) (not e!72412))))

(assert (=> b!111389 (= res!55022 (= (size!2342 (v!2930 (underlying!370 thiss!992))) (bvadd (_size!508 (v!2930 (underlying!370 thiss!992))) (bvsdiv (bvadd (extraKeys!2424 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(assert (= (and d!31643 res!55023) b!111387))

(assert (= (and b!111387 res!55024) b!111388))

(assert (= (and b!111388 res!55021) b!111389))

(assert (= (and b!111389 res!55022) b!111390))

(declare-fun m!126955 () Bool)

(assert (=> b!111388 m!126955))

(assert (=> d!31643 m!124329))

(assert (=> b!111389 m!126955))

(assert (=> d!30913 d!31643))

(assert (=> b!110098 d!31355))

(assert (=> b!110098 d!30931))

(declare-fun b!111391 () Bool)

(declare-fun c!19854 () Bool)

(assert (=> b!111391 (= c!19854 (and (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!72416 () ListLongMap!1591)

(declare-fun e!72421 () ListLongMap!1591)

(assert (=> b!111391 (= e!72416 e!72421)))

(declare-fun bm!11891 () Bool)

(declare-fun call!11894 () ListLongMap!1591)

(declare-fun call!11897 () ListLongMap!1591)

(assert (=> bm!11891 (= call!11894 call!11897)))

(declare-fun b!111392 () Bool)

(declare-fun e!72419 () Bool)

(declare-fun e!72413 () Bool)

(assert (=> b!111392 (= e!72419 e!72413)))

(declare-fun res!55027 () Bool)

(assert (=> b!111392 (=> (not res!55027) (not e!72413))))

(declare-fun lt!57488 () ListLongMap!1591)

(assert (=> b!111392 (= res!55027 (contains!838 lt!57488 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!111392 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))))))

(declare-fun b!111393 () Bool)

(declare-fun e!72414 () Bool)

(declare-fun e!72425 () Bool)

(assert (=> b!111393 (= e!72414 e!72425)))

(declare-fun res!55025 () Bool)

(declare-fun call!11900 () Bool)

(assert (=> b!111393 (= res!55025 call!11900)))

(assert (=> b!111393 (=> (not res!55025) (not e!72425))))

(declare-fun b!111394 () Bool)

(declare-fun e!72423 () ListLongMap!1591)

(assert (=> b!111394 (= e!72423 e!72416)))

(declare-fun c!19858 () Bool)

(assert (=> b!111394 (= c!19858 (and (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!111395 () Bool)

(declare-fun e!72424 () Unit!3403)

(declare-fun Unit!3468 () Unit!3403)

(assert (=> b!111395 (= e!72424 Unit!3468)))

(declare-fun b!111396 () Bool)

(declare-fun e!72420 () Bool)

(declare-fun call!11895 () Bool)

(assert (=> b!111396 (= e!72420 (not call!11895))))

(declare-fun bm!11892 () Bool)

(assert (=> bm!11892 (= call!11897 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (array!4392 (store (arr!2082 (_values!2610 newMap!16)) (index!3195 lt!56591) (ValueCellFull!1005 lt!56458)) (size!2339 (_values!2610 newMap!16))) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun b!111397 () Bool)

(assert (=> b!111397 (= e!72425 (= (apply!100 lt!57488 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2498 newMap!16)))))

(declare-fun b!111398 () Bool)

(declare-fun call!11899 () ListLongMap!1591)

(assert (=> b!111398 (= e!72423 (+!150 call!11899 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16))))))

(declare-fun b!111399 () Bool)

(declare-fun lt!57489 () Unit!3403)

(assert (=> b!111399 (= e!72424 lt!57489)))

(declare-fun lt!57484 () ListLongMap!1591)

(assert (=> b!111399 (= lt!57484 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (array!4392 (store (arr!2082 (_values!2610 newMap!16)) (index!3195 lt!56591) (ValueCellFull!1005 lt!56458)) (size!2339 (_values!2610 newMap!16))) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!57483 () (_ BitVec 64))

(assert (=> b!111399 (= lt!57483 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57486 () (_ BitVec 64))

(assert (=> b!111399 (= lt!57486 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!57491 () Unit!3403)

(assert (=> b!111399 (= lt!57491 (addStillContains!76 lt!57484 lt!57483 (zeroValue!2498 newMap!16) lt!57486))))

(assert (=> b!111399 (contains!838 (+!150 lt!57484 (tuple2!2441 lt!57483 (zeroValue!2498 newMap!16))) lt!57486)))

(declare-fun lt!57475 () Unit!3403)

(assert (=> b!111399 (= lt!57475 lt!57491)))

(declare-fun lt!57487 () ListLongMap!1591)

(assert (=> b!111399 (= lt!57487 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (array!4392 (store (arr!2082 (_values!2610 newMap!16)) (index!3195 lt!56591) (ValueCellFull!1005 lt!56458)) (size!2339 (_values!2610 newMap!16))) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!57478 () (_ BitVec 64))

(assert (=> b!111399 (= lt!57478 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57485 () (_ BitVec 64))

(assert (=> b!111399 (= lt!57485 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!57493 () Unit!3403)

(assert (=> b!111399 (= lt!57493 (addApplyDifferent!76 lt!57487 lt!57478 (minValue!2498 newMap!16) lt!57485))))

(assert (=> b!111399 (= (apply!100 (+!150 lt!57487 (tuple2!2441 lt!57478 (minValue!2498 newMap!16))) lt!57485) (apply!100 lt!57487 lt!57485))))

(declare-fun lt!57477 () Unit!3403)

(assert (=> b!111399 (= lt!57477 lt!57493)))

(declare-fun lt!57481 () ListLongMap!1591)

(assert (=> b!111399 (= lt!57481 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (array!4392 (store (arr!2082 (_values!2610 newMap!16)) (index!3195 lt!56591) (ValueCellFull!1005 lt!56458)) (size!2339 (_values!2610 newMap!16))) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!57474 () (_ BitVec 64))

(assert (=> b!111399 (= lt!57474 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57492 () (_ BitVec 64))

(assert (=> b!111399 (= lt!57492 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!57490 () Unit!3403)

(assert (=> b!111399 (= lt!57490 (addApplyDifferent!76 lt!57481 lt!57474 (zeroValue!2498 newMap!16) lt!57492))))

(assert (=> b!111399 (= (apply!100 (+!150 lt!57481 (tuple2!2441 lt!57474 (zeroValue!2498 newMap!16))) lt!57492) (apply!100 lt!57481 lt!57492))))

(declare-fun lt!57480 () Unit!3403)

(assert (=> b!111399 (= lt!57480 lt!57490)))

(declare-fun lt!57494 () ListLongMap!1591)

(assert (=> b!111399 (= lt!57494 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (array!4392 (store (arr!2082 (_values!2610 newMap!16)) (index!3195 lt!56591) (ValueCellFull!1005 lt!56458)) (size!2339 (_values!2610 newMap!16))) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!57479 () (_ BitVec 64))

(assert (=> b!111399 (= lt!57479 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57482 () (_ BitVec 64))

(assert (=> b!111399 (= lt!57482 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!111399 (= lt!57489 (addApplyDifferent!76 lt!57494 lt!57479 (minValue!2498 newMap!16) lt!57482))))

(assert (=> b!111399 (= (apply!100 (+!150 lt!57494 (tuple2!2441 lt!57479 (minValue!2498 newMap!16))) lt!57482) (apply!100 lt!57494 lt!57482))))

(declare-fun b!111400 () Bool)

(declare-fun res!55029 () Bool)

(declare-fun e!72422 () Bool)

(assert (=> b!111400 (=> (not res!55029) (not e!72422))))

(assert (=> b!111400 (= res!55029 e!72414)))

(declare-fun c!19857 () Bool)

(assert (=> b!111400 (= c!19857 (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!111401 () Bool)

(declare-fun e!72415 () Bool)

(assert (=> b!111401 (= e!72415 (validKeyInArray!0 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!111402 () Bool)

(declare-fun e!72418 () Bool)

(assert (=> b!111402 (= e!72418 (= (apply!100 lt!57488 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2498 newMap!16)))))

(declare-fun bm!11893 () Bool)

(assert (=> bm!11893 (= call!11895 (contains!838 lt!57488 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!111403 () Bool)

(assert (=> b!111403 (= e!72420 e!72418)))

(declare-fun res!55026 () Bool)

(assert (=> b!111403 (= res!55026 call!11895)))

(assert (=> b!111403 (=> (not res!55026) (not e!72418))))

(declare-fun c!19853 () Bool)

(declare-fun call!11896 () ListLongMap!1591)

(declare-fun bm!11894 () Bool)

(assert (=> bm!11894 (= call!11899 (+!150 (ite c!19853 call!11897 (ite c!19858 call!11894 call!11896)) (ite (or c!19853 c!19858) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 newMap!16)) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16)))))))

(declare-fun b!111404 () Bool)

(declare-fun call!11898 () ListLongMap!1591)

(assert (=> b!111404 (= e!72416 call!11898)))

(declare-fun d!31645 () Bool)

(assert (=> d!31645 e!72422))

(declare-fun res!55032 () Bool)

(assert (=> d!31645 (=> (not res!55032) (not e!72422))))

(assert (=> d!31645 (= res!55032 (or (bvsge #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))))))))

(declare-fun lt!57495 () ListLongMap!1591)

(assert (=> d!31645 (= lt!57488 lt!57495)))

(declare-fun lt!57476 () Unit!3403)

(assert (=> d!31645 (= lt!57476 e!72424)))

(declare-fun c!19855 () Bool)

(declare-fun e!72417 () Bool)

(assert (=> d!31645 (= c!19855 e!72417)))

(declare-fun res!55028 () Bool)

(assert (=> d!31645 (=> (not res!55028) (not e!72417))))

(assert (=> d!31645 (= res!55028 (bvslt #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))))))

(assert (=> d!31645 (= lt!57495 e!72423)))

(assert (=> d!31645 (= c!19853 (and (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!31645 (validMask!0 (mask!6795 newMap!16))))

(assert (=> d!31645 (= (getCurrentListMap!496 (_keys!4341 newMap!16) (array!4392 (store (arr!2082 (_values!2610 newMap!16)) (index!3195 lt!56591) (ValueCellFull!1005 lt!56458)) (size!2339 (_values!2610 newMap!16))) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) lt!57488)))

(declare-fun b!111405 () Bool)

(assert (=> b!111405 (= e!72421 call!11898)))

(declare-fun b!111406 () Bool)

(assert (=> b!111406 (= e!72413 (= (apply!100 lt!57488 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)) (get!1347 (select (arr!2082 (array!4392 (store (arr!2082 (_values!2610 newMap!16)) (index!3195 lt!56591) (ValueCellFull!1005 lt!56458)) (size!2339 (_values!2610 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!390 (defaultEntry!2627 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!111406 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2339 (array!4392 (store (arr!2082 (_values!2610 newMap!16)) (index!3195 lt!56591) (ValueCellFull!1005 lt!56458)) (size!2339 (_values!2610 newMap!16))))))))

(assert (=> b!111406 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))))))

(declare-fun b!111407 () Bool)

(assert (=> b!111407 (= e!72421 call!11896)))

(declare-fun bm!11895 () Bool)

(assert (=> bm!11895 (= call!11896 call!11894)))

(declare-fun b!111408 () Bool)

(declare-fun res!55033 () Bool)

(assert (=> b!111408 (=> (not res!55033) (not e!72422))))

(assert (=> b!111408 (= res!55033 e!72419)))

(declare-fun res!55030 () Bool)

(assert (=> b!111408 (=> res!55030 e!72419)))

(assert (=> b!111408 (= res!55030 (not e!72415))))

(declare-fun res!55031 () Bool)

(assert (=> b!111408 (=> (not res!55031) (not e!72415))))

(assert (=> b!111408 (= res!55031 (bvslt #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))))))

(declare-fun bm!11896 () Bool)

(assert (=> bm!11896 (= call!11898 call!11899)))

(declare-fun b!111409 () Bool)

(assert (=> b!111409 (= e!72417 (validKeyInArray!0 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!111410 () Bool)

(assert (=> b!111410 (= e!72422 e!72420)))

(declare-fun c!19856 () Bool)

(assert (=> b!111410 (= c!19856 (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!111411 () Bool)

(assert (=> b!111411 (= e!72414 (not call!11900))))

(declare-fun bm!11897 () Bool)

(assert (=> bm!11897 (= call!11900 (contains!838 lt!57488 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!31645 c!19853) b!111398))

(assert (= (and d!31645 (not c!19853)) b!111394))

(assert (= (and b!111394 c!19858) b!111404))

(assert (= (and b!111394 (not c!19858)) b!111391))

(assert (= (and b!111391 c!19854) b!111405))

(assert (= (and b!111391 (not c!19854)) b!111407))

(assert (= (or b!111405 b!111407) bm!11895))

(assert (= (or b!111404 bm!11895) bm!11891))

(assert (= (or b!111404 b!111405) bm!11896))

(assert (= (or b!111398 bm!11891) bm!11892))

(assert (= (or b!111398 bm!11896) bm!11894))

(assert (= (and d!31645 res!55028) b!111409))

(assert (= (and d!31645 c!19855) b!111399))

(assert (= (and d!31645 (not c!19855)) b!111395))

(assert (= (and d!31645 res!55032) b!111408))

(assert (= (and b!111408 res!55031) b!111401))

(assert (= (and b!111408 (not res!55030)) b!111392))

(assert (= (and b!111392 res!55027) b!111406))

(assert (= (and b!111408 res!55033) b!111400))

(assert (= (and b!111400 c!19857) b!111393))

(assert (= (and b!111400 (not c!19857)) b!111411))

(assert (= (and b!111393 res!55025) b!111397))

(assert (= (or b!111393 b!111411) bm!11897))

(assert (= (and b!111400 res!55029) b!111410))

(assert (= (and b!111410 c!19856) b!111403))

(assert (= (and b!111410 (not c!19856)) b!111396))

(assert (= (and b!111403 res!55026) b!111402))

(assert (= (or b!111403 b!111396) bm!11893))

(declare-fun b_lambda!4977 () Bool)

(assert (=> (not b_lambda!4977) (not b!111406)))

(assert (=> b!111406 t!5774))

(declare-fun b_and!6851 () Bool)

(assert (= b_and!6847 (and (=> t!5774 result!3537) b_and!6851)))

(assert (=> b!111406 t!5776))

(declare-fun b_and!6853 () Bool)

(assert (= b_and!6849 (and (=> t!5776 result!3539) b_and!6853)))

(declare-fun m!126957 () Bool)

(assert (=> bm!11893 m!126957))

(declare-fun m!126959 () Bool)

(assert (=> b!111402 m!126959))

(assert (=> b!111401 m!124693))

(assert (=> b!111401 m!124693))

(assert (=> b!111401 m!124695))

(assert (=> b!111392 m!124693))

(assert (=> b!111392 m!124693))

(declare-fun m!126961 () Bool)

(assert (=> b!111392 m!126961))

(declare-fun m!126963 () Bool)

(assert (=> b!111399 m!126963))

(declare-fun m!126965 () Bool)

(assert (=> b!111399 m!126965))

(declare-fun m!126967 () Bool)

(assert (=> b!111399 m!126967))

(assert (=> b!111399 m!126963))

(declare-fun m!126969 () Bool)

(assert (=> b!111399 m!126969))

(declare-fun m!126971 () Bool)

(assert (=> b!111399 m!126971))

(assert (=> b!111399 m!126971))

(declare-fun m!126973 () Bool)

(assert (=> b!111399 m!126973))

(declare-fun m!126975 () Bool)

(assert (=> b!111399 m!126975))

(assert (=> b!111399 m!124693))

(declare-fun m!126977 () Bool)

(assert (=> b!111399 m!126977))

(declare-fun m!126979 () Bool)

(assert (=> b!111399 m!126979))

(declare-fun m!126981 () Bool)

(assert (=> b!111399 m!126981))

(declare-fun m!126983 () Bool)

(assert (=> b!111399 m!126983))

(assert (=> b!111399 m!126979))

(declare-fun m!126985 () Bool)

(assert (=> b!111399 m!126985))

(declare-fun m!126987 () Bool)

(assert (=> b!111399 m!126987))

(assert (=> b!111399 m!126969))

(declare-fun m!126989 () Bool)

(assert (=> b!111399 m!126989))

(declare-fun m!126991 () Bool)

(assert (=> b!111399 m!126991))

(declare-fun m!126993 () Bool)

(assert (=> b!111399 m!126993))

(assert (=> d!31645 m!124669))

(declare-fun m!126995 () Bool)

(assert (=> b!111406 m!126995))

(assert (=> b!111406 m!124733))

(assert (=> b!111406 m!126995))

(assert (=> b!111406 m!124733))

(declare-fun m!126997 () Bool)

(assert (=> b!111406 m!126997))

(assert (=> b!111406 m!124693))

(declare-fun m!126999 () Bool)

(assert (=> b!111406 m!126999))

(assert (=> b!111406 m!124693))

(assert (=> bm!11892 m!126991))

(assert (=> b!111409 m!124693))

(assert (=> b!111409 m!124693))

(assert (=> b!111409 m!124695))

(declare-fun m!127001 () Bool)

(assert (=> bm!11894 m!127001))

(declare-fun m!127003 () Bool)

(assert (=> b!111398 m!127003))

(declare-fun m!127005 () Bool)

(assert (=> bm!11897 m!127005))

(declare-fun m!127007 () Bool)

(assert (=> b!111397 m!127007))

(assert (=> b!110098 d!31645))

(declare-fun b!111412 () Bool)

(declare-fun e!72426 () Option!164)

(assert (=> b!111412 (= e!72426 (Some!163 (_2!1231 (h!2225 (t!5767 (toList!811 lt!56631))))))))

(declare-fun b!111414 () Bool)

(declare-fun e!72427 () Option!164)

(assert (=> b!111414 (= e!72427 (getValueByKey!158 (t!5767 (t!5767 (toList!811 lt!56631))) (_1!1231 lt!56454)))))

(declare-fun d!31647 () Bool)

(declare-fun c!19859 () Bool)

(assert (=> d!31647 (= c!19859 (and ((_ is Cons!1626) (t!5767 (toList!811 lt!56631))) (= (_1!1231 (h!2225 (t!5767 (toList!811 lt!56631)))) (_1!1231 lt!56454))))))

(assert (=> d!31647 (= (getValueByKey!158 (t!5767 (toList!811 lt!56631)) (_1!1231 lt!56454)) e!72426)))

(declare-fun b!111413 () Bool)

(assert (=> b!111413 (= e!72426 e!72427)))

(declare-fun c!19860 () Bool)

(assert (=> b!111413 (= c!19860 (and ((_ is Cons!1626) (t!5767 (toList!811 lt!56631))) (not (= (_1!1231 (h!2225 (t!5767 (toList!811 lt!56631)))) (_1!1231 lt!56454)))))))

(declare-fun b!111415 () Bool)

(assert (=> b!111415 (= e!72427 None!162)))

(assert (= (and d!31647 c!19859) b!111412))

(assert (= (and d!31647 (not c!19859)) b!111413))

(assert (= (and b!111413 c!19860) b!111414))

(assert (= (and b!111413 (not c!19860)) b!111415))

(declare-fun m!127009 () Bool)

(assert (=> b!111414 m!127009))

(assert (=> b!110523 d!31647))

(declare-fun d!31649 () Bool)

(assert (=> d!31649 (isDefined!111 (getValueByKey!158 (toList!811 lt!56699) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!57496 () Unit!3403)

(assert (=> d!31649 (= lt!57496 (choose!684 (toList!811 lt!56699) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!72428 () Bool)

(assert (=> d!31649 e!72428))

(declare-fun res!55034 () Bool)

(assert (=> d!31649 (=> (not res!55034) (not e!72428))))

(assert (=> d!31649 (= res!55034 (isStrictlySorted!311 (toList!811 lt!56699)))))

(assert (=> d!31649 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 lt!56699) #b1000000000000000000000000000000000000000000000000000000000000000) lt!57496)))

(declare-fun b!111416 () Bool)

(assert (=> b!111416 (= e!72428 (containsKey!162 (toList!811 lt!56699) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!31649 res!55034) b!111416))

(assert (=> d!31649 m!125167))

(assert (=> d!31649 m!125167))

(assert (=> d!31649 m!125169))

(declare-fun m!127011 () Bool)

(assert (=> d!31649 m!127011))

(assert (=> d!31649 m!125909))

(assert (=> b!111416 m!125163))

(assert (=> b!110361 d!31649))

(assert (=> b!110361 d!31463))

(assert (=> b!110361 d!31465))

(declare-fun d!31651 () Bool)

(assert (=> d!31651 (= (inRange!0 (ite c!19602 (index!3195 lt!57032) (ite c!19599 (index!3194 lt!57037) (index!3197 lt!57037))) (mask!6795 newMap!16)) (and (bvsge (ite c!19602 (index!3195 lt!57032) (ite c!19599 (index!3194 lt!57037) (index!3197 lt!57037))) #b00000000000000000000000000000000) (bvslt (ite c!19602 (index!3195 lt!57032) (ite c!19599 (index!3194 lt!57037) (index!3197 lt!57037))) (bvadd (mask!6795 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!11802 d!31651))

(declare-fun d!31653 () Bool)

(assert (=> d!31653 (= (inRange!0 (index!3195 lt!56923) (mask!6795 newMap!16)) (and (bvsge (index!3195 lt!56923) #b00000000000000000000000000000000) (bvslt (index!3195 lt!56923) (bvadd (mask!6795 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!110390 d!31653))

(declare-fun d!31655 () Bool)

(assert (=> d!31655 (= (isDefined!111 (getValueByKey!158 (toList!811 (+!150 lt!56695 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))) lt!56697)) (not (isEmpty!377 (getValueByKey!158 (toList!811 (+!150 lt!56695 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))) lt!56697))))))

(declare-fun bs!4597 () Bool)

(assert (= bs!4597 d!31655))

(assert (=> bs!4597 m!125147))

(declare-fun m!127013 () Bool)

(assert (=> bs!4597 m!127013))

(assert (=> b!110358 d!31655))

(declare-fun b!111417 () Bool)

(declare-fun e!72429 () Option!164)

(assert (=> b!111417 (= e!72429 (Some!163 (_2!1231 (h!2225 (toList!811 (+!150 lt!56695 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))))))))

(declare-fun b!111419 () Bool)

(declare-fun e!72430 () Option!164)

(assert (=> b!111419 (= e!72430 (getValueByKey!158 (t!5767 (toList!811 (+!150 lt!56695 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))) lt!56697))))

(declare-fun d!31657 () Bool)

(declare-fun c!19861 () Bool)

(assert (=> d!31657 (= c!19861 (and ((_ is Cons!1626) (toList!811 (+!150 lt!56695 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))) (= (_1!1231 (h!2225 (toList!811 (+!150 lt!56695 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))) lt!56697)))))

(assert (=> d!31657 (= (getValueByKey!158 (toList!811 (+!150 lt!56695 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))) lt!56697) e!72429)))

(declare-fun b!111418 () Bool)

(assert (=> b!111418 (= e!72429 e!72430)))

(declare-fun c!19862 () Bool)

(assert (=> b!111418 (= c!19862 (and ((_ is Cons!1626) (toList!811 (+!150 lt!56695 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))) (not (= (_1!1231 (h!2225 (toList!811 (+!150 lt!56695 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))) lt!56697))))))

(declare-fun b!111420 () Bool)

(assert (=> b!111420 (= e!72430 None!162)))

(assert (= (and d!31657 c!19861) b!111417))

(assert (= (and d!31657 (not c!19861)) b!111418))

(assert (= (and b!111418 c!19862) b!111419))

(assert (= (and b!111418 (not c!19862)) b!111420))

(declare-fun m!127015 () Bool)

(assert (=> b!111419 m!127015))

(assert (=> b!110358 d!31657))

(declare-fun d!31659 () Bool)

(assert (=> d!31659 (= (apply!100 lt!56747 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1350 (getValueByKey!158 (toList!811 lt!56747) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4598 () Bool)

(assert (= bs!4598 d!31659))

(assert (=> bs!4598 m!126799))

(assert (=> bs!4598 m!126799))

(declare-fun m!127017 () Bool)

(assert (=> bs!4598 m!127017))

(assert (=> b!110113 d!31659))

(declare-fun d!31661 () Bool)

(assert (=> d!31661 (isDefined!111 (getValueByKey!158 (toList!811 (+!150 lt!56613 (tuple2!2441 lt!56610 lt!56616))) lt!56614))))

(declare-fun lt!57497 () Unit!3403)

(assert (=> d!31661 (= lt!57497 (choose!684 (toList!811 (+!150 lt!56613 (tuple2!2441 lt!56610 lt!56616))) lt!56614))))

(declare-fun e!72431 () Bool)

(assert (=> d!31661 e!72431))

(declare-fun res!55035 () Bool)

(assert (=> d!31661 (=> (not res!55035) (not e!72431))))

(assert (=> d!31661 (= res!55035 (isStrictlySorted!311 (toList!811 (+!150 lt!56613 (tuple2!2441 lt!56610 lt!56616)))))))

(assert (=> d!31661 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 (+!150 lt!56613 (tuple2!2441 lt!56610 lt!56616))) lt!56614) lt!57497)))

(declare-fun b!111421 () Bool)

(assert (=> b!111421 (= e!72431 (containsKey!162 (toList!811 (+!150 lt!56613 (tuple2!2441 lt!56610 lt!56616))) lt!56614))))

(assert (= (and d!31661 res!55035) b!111421))

(assert (=> d!31661 m!125439))

(assert (=> d!31661 m!125439))

(assert (=> d!31661 m!125441))

(declare-fun m!127019 () Bool)

(assert (=> d!31661 m!127019))

(declare-fun m!127021 () Bool)

(assert (=> d!31661 m!127021))

(assert (=> b!111421 m!125435))

(assert (=> b!110500 d!31661))

(assert (=> b!110500 d!31485))

(assert (=> b!110500 d!31487))

(declare-fun b!111422 () Bool)

(declare-fun e!72432 () Option!164)

(assert (=> b!111422 (= e!72432 (Some!163 (_2!1231 (h!2225 (toList!811 lt!56886)))))))

(declare-fun e!72433 () Option!164)

(declare-fun b!111424 () Bool)

(assert (=> b!111424 (= e!72433 (getValueByKey!158 (t!5767 (toList!811 lt!56886)) (_1!1231 (tuple2!2441 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun d!31663 () Bool)

(declare-fun c!19863 () Bool)

(assert (=> d!31663 (= c!19863 (and ((_ is Cons!1626) (toList!811 lt!56886)) (= (_1!1231 (h!2225 (toList!811 lt!56886))) (_1!1231 (tuple2!2441 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> d!31663 (= (getValueByKey!158 (toList!811 lt!56886) (_1!1231 (tuple2!2441 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))) e!72432)))

(declare-fun b!111423 () Bool)

(assert (=> b!111423 (= e!72432 e!72433)))

(declare-fun c!19864 () Bool)

(assert (=> b!111423 (= c!19864 (and ((_ is Cons!1626) (toList!811 lt!56886)) (not (= (_1!1231 (h!2225 (toList!811 lt!56886))) (_1!1231 (tuple2!2441 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))))

(declare-fun b!111425 () Bool)

(assert (=> b!111425 (= e!72433 None!162)))

(assert (= (and d!31663 c!19863) b!111422))

(assert (= (and d!31663 (not c!19863)) b!111423))

(assert (= (and b!111423 c!19864) b!111424))

(assert (= (and b!111423 (not c!19864)) b!111425))

(declare-fun m!127023 () Bool)

(assert (=> b!111424 m!127023))

(assert (=> b!110354 d!31663))

(assert (=> b!110250 d!31563))

(declare-fun b!111426 () Bool)

(declare-fun e!72434 () Option!164)

(assert (=> b!111426 (= e!72434 (Some!163 (_2!1231 (h!2225 (t!5767 lt!56634)))))))

(declare-fun b!111428 () Bool)

(declare-fun e!72435 () Option!164)

(assert (=> b!111428 (= e!72435 (getValueByKey!158 (t!5767 (t!5767 lt!56634)) (_1!1231 lt!56454)))))

(declare-fun d!31665 () Bool)

(declare-fun c!19865 () Bool)

(assert (=> d!31665 (= c!19865 (and ((_ is Cons!1626) (t!5767 lt!56634)) (= (_1!1231 (h!2225 (t!5767 lt!56634))) (_1!1231 lt!56454))))))

(assert (=> d!31665 (= (getValueByKey!158 (t!5767 lt!56634) (_1!1231 lt!56454)) e!72434)))

(declare-fun b!111427 () Bool)

(assert (=> b!111427 (= e!72434 e!72435)))

(declare-fun c!19866 () Bool)

(assert (=> b!111427 (= c!19866 (and ((_ is Cons!1626) (t!5767 lt!56634)) (not (= (_1!1231 (h!2225 (t!5767 lt!56634))) (_1!1231 lt!56454)))))))

(declare-fun b!111429 () Bool)

(assert (=> b!111429 (= e!72435 None!162)))

(assert (= (and d!31665 c!19865) b!111426))

(assert (= (and d!31665 (not c!19865)) b!111427))

(assert (= (and b!111427 c!19866) b!111428))

(assert (= (and b!111427 (not c!19866)) b!111429))

(declare-fun m!127025 () Bool)

(assert (=> b!111428 m!127025))

(assert (=> b!110134 d!31665))

(assert (=> d!30935 d!31129))

(declare-fun b!111430 () Bool)

(declare-fun e!72436 () Option!164)

(assert (=> b!111430 (= e!72436 (Some!163 (_2!1231 (h!2225 (t!5767 (toList!811 lt!56627))))))))

(declare-fun b!111432 () Bool)

(declare-fun e!72437 () Option!164)

(assert (=> b!111432 (= e!72437 (getValueByKey!158 (t!5767 (t!5767 (toList!811 lt!56627))) (_1!1231 lt!56457)))))

(declare-fun d!31667 () Bool)

(declare-fun c!19867 () Bool)

(assert (=> d!31667 (= c!19867 (and ((_ is Cons!1626) (t!5767 (toList!811 lt!56627))) (= (_1!1231 (h!2225 (t!5767 (toList!811 lt!56627)))) (_1!1231 lt!56457))))))

(assert (=> d!31667 (= (getValueByKey!158 (t!5767 (toList!811 lt!56627)) (_1!1231 lt!56457)) e!72436)))

(declare-fun b!111431 () Bool)

(assert (=> b!111431 (= e!72436 e!72437)))

(declare-fun c!19868 () Bool)

(assert (=> b!111431 (= c!19868 (and ((_ is Cons!1626) (t!5767 (toList!811 lt!56627))) (not (= (_1!1231 (h!2225 (t!5767 (toList!811 lt!56627)))) (_1!1231 lt!56457)))))))

(declare-fun b!111433 () Bool)

(assert (=> b!111433 (= e!72437 None!162)))

(assert (= (and d!31667 c!19867) b!111430))

(assert (= (and d!31667 (not c!19867)) b!111431))

(assert (= (and b!111431 c!19868) b!111432))

(assert (= (and b!111431 (not c!19868)) b!111433))

(declare-fun m!127027 () Bool)

(assert (=> b!111432 m!127027))

(assert (=> b!110394 d!31667))

(declare-fun d!31669 () Bool)

(declare-fun e!72438 () Bool)

(assert (=> d!31669 e!72438))

(declare-fun res!55036 () Bool)

(assert (=> d!31669 (=> res!55036 e!72438)))

(declare-fun lt!57498 () Bool)

(assert (=> d!31669 (= res!55036 (not lt!57498))))

(declare-fun lt!57499 () Bool)

(assert (=> d!31669 (= lt!57498 lt!57499)))

(declare-fun lt!57501 () Unit!3403)

(declare-fun e!72439 () Unit!3403)

(assert (=> d!31669 (= lt!57501 e!72439)))

(declare-fun c!19869 () Bool)

(assert (=> d!31669 (= c!19869 lt!57499)))

(assert (=> d!31669 (= lt!57499 (containsKey!162 (toList!811 lt!56886) (_1!1231 (tuple2!2441 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> d!31669 (= (contains!838 lt!56886 (_1!1231 (tuple2!2441 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))) lt!57498)))

(declare-fun b!111434 () Bool)

(declare-fun lt!57500 () Unit!3403)

(assert (=> b!111434 (= e!72439 lt!57500)))

(assert (=> b!111434 (= lt!57500 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 lt!56886) (_1!1231 (tuple2!2441 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> b!111434 (isDefined!111 (getValueByKey!158 (toList!811 lt!56886) (_1!1231 (tuple2!2441 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun b!111435 () Bool)

(declare-fun Unit!3469 () Unit!3403)

(assert (=> b!111435 (= e!72439 Unit!3469)))

(declare-fun b!111436 () Bool)

(assert (=> b!111436 (= e!72438 (isDefined!111 (getValueByKey!158 (toList!811 lt!56886) (_1!1231 (tuple2!2441 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(assert (= (and d!31669 c!19869) b!111434))

(assert (= (and d!31669 (not c!19869)) b!111435))

(assert (= (and d!31669 (not res!55036)) b!111436))

(declare-fun m!127029 () Bool)

(assert (=> d!31669 m!127029))

(declare-fun m!127031 () Bool)

(assert (=> b!111434 m!127031))

(assert (=> b!111434 m!125139))

(assert (=> b!111434 m!125139))

(declare-fun m!127033 () Bool)

(assert (=> b!111434 m!127033))

(assert (=> b!111436 m!125139))

(assert (=> b!111436 m!125139))

(assert (=> b!111436 m!127033))

(assert (=> d!30973 d!31669))

(declare-fun b!111437 () Bool)

(declare-fun e!72440 () Option!164)

(assert (=> b!111437 (= e!72440 (Some!163 (_2!1231 (h!2225 lt!56885))))))

(declare-fun b!111439 () Bool)

(declare-fun e!72441 () Option!164)

(assert (=> b!111439 (= e!72441 (getValueByKey!158 (t!5767 lt!56885) (_1!1231 (tuple2!2441 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun d!31671 () Bool)

(declare-fun c!19870 () Bool)

(assert (=> d!31671 (= c!19870 (and ((_ is Cons!1626) lt!56885) (= (_1!1231 (h!2225 lt!56885)) (_1!1231 (tuple2!2441 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> d!31671 (= (getValueByKey!158 lt!56885 (_1!1231 (tuple2!2441 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))) e!72440)))

(declare-fun b!111438 () Bool)

(assert (=> b!111438 (= e!72440 e!72441)))

(declare-fun c!19871 () Bool)

(assert (=> b!111438 (= c!19871 (and ((_ is Cons!1626) lt!56885) (not (= (_1!1231 (h!2225 lt!56885)) (_1!1231 (tuple2!2441 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))))

(declare-fun b!111440 () Bool)

(assert (=> b!111440 (= e!72441 None!162)))

(assert (= (and d!31671 c!19870) b!111437))

(assert (= (and d!31671 (not c!19870)) b!111438))

(assert (= (and b!111438 c!19871) b!111439))

(assert (= (and b!111438 (not c!19871)) b!111440))

(declare-fun m!127035 () Bool)

(assert (=> b!111439 m!127035))

(assert (=> d!30973 d!31671))

(declare-fun d!31673 () Bool)

(assert (=> d!31673 (= (getValueByKey!158 lt!56885 (_1!1231 (tuple2!2441 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))) (Some!163 (_2!1231 (tuple2!2441 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun lt!57502 () Unit!3403)

(assert (=> d!31673 (= lt!57502 (choose!687 lt!56885 (_1!1231 (tuple2!2441 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))) (_2!1231 (tuple2!2441 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun e!72442 () Bool)

(assert (=> d!31673 e!72442))

(declare-fun res!55037 () Bool)

(assert (=> d!31673 (=> (not res!55037) (not e!72442))))

(assert (=> d!31673 (= res!55037 (isStrictlySorted!311 lt!56885))))

(assert (=> d!31673 (= (lemmaContainsTupThenGetReturnValue!74 lt!56885 (_1!1231 (tuple2!2441 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))) (_2!1231 (tuple2!2441 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))) lt!57502)))

(declare-fun b!111441 () Bool)

(declare-fun res!55038 () Bool)

(assert (=> b!111441 (=> (not res!55038) (not e!72442))))

(assert (=> b!111441 (= res!55038 (containsKey!162 lt!56885 (_1!1231 (tuple2!2441 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun b!111442 () Bool)

(assert (=> b!111442 (= e!72442 (contains!839 lt!56885 (tuple2!2441 (_1!1231 (tuple2!2441 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))) (_2!1231 (tuple2!2441 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(assert (= (and d!31673 res!55037) b!111441))

(assert (= (and b!111441 res!55038) b!111442))

(assert (=> d!31673 m!125133))

(declare-fun m!127037 () Bool)

(assert (=> d!31673 m!127037))

(declare-fun m!127039 () Bool)

(assert (=> d!31673 m!127039))

(declare-fun m!127041 () Bool)

(assert (=> b!111441 m!127041))

(declare-fun m!127043 () Bool)

(assert (=> b!111442 m!127043))

(assert (=> d!30973 d!31673))

(declare-fun b!111443 () Bool)

(declare-fun e!72447 () List!1630)

(declare-fun e!72446 () List!1630)

(assert (=> b!111443 (= e!72447 e!72446)))

(declare-fun c!19874 () Bool)

(assert (=> b!111443 (= c!19874 (and ((_ is Cons!1626) (toList!811 lt!56692)) (= (_1!1231 (h!2225 (toList!811 lt!56692))) (_1!1231 (tuple2!2441 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(declare-fun bm!11898 () Bool)

(declare-fun call!11901 () List!1630)

(declare-fun call!11902 () List!1630)

(assert (=> bm!11898 (= call!11901 call!11902)))

(declare-fun b!111444 () Bool)

(assert (=> b!111444 (= e!72447 call!11902)))

(declare-fun bm!11899 () Bool)

(declare-fun call!11903 () List!1630)

(assert (=> bm!11899 (= call!11903 call!11901)))

(declare-fun e!72445 () List!1630)

(declare-fun c!19872 () Bool)

(declare-fun bm!11900 () Bool)

(assert (=> bm!11900 (= call!11902 ($colon$colon!83 e!72445 (ite c!19872 (h!2225 (toList!811 lt!56692)) (tuple2!2441 (_1!1231 (tuple2!2441 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))) (_2!1231 (tuple2!2441 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))))

(declare-fun c!19875 () Bool)

(assert (=> bm!11900 (= c!19875 c!19872)))

(declare-fun b!111445 () Bool)

(assert (=> b!111445 (= e!72446 call!11901)))

(declare-fun lt!57503 () List!1630)

(declare-fun b!111447 () Bool)

(declare-fun e!72444 () Bool)

(assert (=> b!111447 (= e!72444 (contains!839 lt!57503 (tuple2!2441 (_1!1231 (tuple2!2441 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))) (_2!1231 (tuple2!2441 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(declare-fun b!111448 () Bool)

(declare-fun e!72443 () List!1630)

(assert (=> b!111448 (= e!72443 call!11903)))

(declare-fun b!111449 () Bool)

(declare-fun res!55040 () Bool)

(assert (=> b!111449 (=> (not res!55040) (not e!72444))))

(assert (=> b!111449 (= res!55040 (containsKey!162 lt!57503 (_1!1231 (tuple2!2441 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun c!19873 () Bool)

(declare-fun b!111450 () Bool)

(assert (=> b!111450 (= c!19873 (and ((_ is Cons!1626) (toList!811 lt!56692)) (bvsgt (_1!1231 (h!2225 (toList!811 lt!56692))) (_1!1231 (tuple2!2441 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> b!111450 (= e!72446 e!72443)))

(declare-fun b!111451 () Bool)

(assert (=> b!111451 (= e!72443 call!11903)))

(declare-fun b!111452 () Bool)

(assert (=> b!111452 (= e!72445 (ite c!19874 (t!5767 (toList!811 lt!56692)) (ite c!19873 (Cons!1626 (h!2225 (toList!811 lt!56692)) (t!5767 (toList!811 lt!56692))) Nil!1627)))))

(declare-fun b!111446 () Bool)

(assert (=> b!111446 (= e!72445 (insertStrictlySorted!77 (t!5767 (toList!811 lt!56692)) (_1!1231 (tuple2!2441 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))) (_2!1231 (tuple2!2441 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun d!31675 () Bool)

(assert (=> d!31675 e!72444))

(declare-fun res!55039 () Bool)

(assert (=> d!31675 (=> (not res!55039) (not e!72444))))

(assert (=> d!31675 (= res!55039 (isStrictlySorted!311 lt!57503))))

(assert (=> d!31675 (= lt!57503 e!72447)))

(assert (=> d!31675 (= c!19872 (and ((_ is Cons!1626) (toList!811 lt!56692)) (bvslt (_1!1231 (h!2225 (toList!811 lt!56692))) (_1!1231 (tuple2!2441 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> d!31675 (isStrictlySorted!311 (toList!811 lt!56692))))

(assert (=> d!31675 (= (insertStrictlySorted!77 (toList!811 lt!56692) (_1!1231 (tuple2!2441 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))) (_2!1231 (tuple2!2441 lt!56685 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))) lt!57503)))

(assert (= (and d!31675 c!19872) b!111444))

(assert (= (and d!31675 (not c!19872)) b!111443))

(assert (= (and b!111443 c!19874) b!111445))

(assert (= (and b!111443 (not c!19874)) b!111450))

(assert (= (and b!111450 c!19873) b!111448))

(assert (= (and b!111450 (not c!19873)) b!111451))

(assert (= (or b!111448 b!111451) bm!11899))

(assert (= (or b!111445 bm!11899) bm!11898))

(assert (= (or b!111444 bm!11898) bm!11900))

(assert (= (and bm!11900 c!19875) b!111446))

(assert (= (and bm!11900 (not c!19875)) b!111452))

(assert (= (and d!31675 res!55039) b!111449))

(assert (= (and b!111449 res!55040) b!111447))

(declare-fun m!127045 () Bool)

(assert (=> b!111449 m!127045))

(declare-fun m!127047 () Bool)

(assert (=> b!111446 m!127047))

(declare-fun m!127049 () Bool)

(assert (=> b!111447 m!127049))

(declare-fun m!127051 () Bool)

(assert (=> d!31675 m!127051))

(declare-fun m!127053 () Bool)

(assert (=> d!31675 m!127053))

(declare-fun m!127055 () Bool)

(assert (=> bm!11900 m!127055))

(assert (=> d!30973 d!31675))

(declare-fun d!31677 () Bool)

(assert (=> d!31677 (isDefined!111 (getValueByKey!158 (toList!811 lt!56631) (_1!1231 lt!56454)))))

(declare-fun lt!57504 () Unit!3403)

(assert (=> d!31677 (= lt!57504 (choose!684 (toList!811 lt!56631) (_1!1231 lt!56454)))))

(declare-fun e!72448 () Bool)

(assert (=> d!31677 e!72448))

(declare-fun res!55041 () Bool)

(assert (=> d!31677 (=> (not res!55041) (not e!72448))))

(assert (=> d!31677 (= res!55041 (isStrictlySorted!311 (toList!811 lt!56631)))))

(assert (=> d!31677 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 lt!56631) (_1!1231 lt!56454)) lt!57504)))

(declare-fun b!111453 () Bool)

(assert (=> b!111453 (= e!72448 (containsKey!162 (toList!811 lt!56631) (_1!1231 lt!56454)))))

(assert (= (and d!31677 res!55041) b!111453))

(assert (=> d!31677 m!124545))

(assert (=> d!31677 m!124545))

(assert (=> d!31677 m!125297))

(declare-fun m!127057 () Bool)

(assert (=> d!31677 m!127057))

(declare-fun m!127059 () Bool)

(assert (=> d!31677 m!127059))

(assert (=> b!111453 m!125293))

(assert (=> b!110412 d!31677))

(assert (=> b!110412 d!31511))

(assert (=> b!110412 d!31059))

(declare-fun d!31679 () Bool)

(declare-fun res!55042 () Bool)

(declare-fun e!72449 () Bool)

(assert (=> d!31679 (=> res!55042 e!72449)))

(assert (=> d!31679 (= res!55042 (and ((_ is Cons!1626) (toList!811 lt!56699)) (= (_1!1231 (h!2225 (toList!811 lt!56699))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!31679 (= (containsKey!162 (toList!811 lt!56699) #b0000000000000000000000000000000000000000000000000000000000000000) e!72449)))

(declare-fun b!111454 () Bool)

(declare-fun e!72450 () Bool)

(assert (=> b!111454 (= e!72449 e!72450)))

(declare-fun res!55043 () Bool)

(assert (=> b!111454 (=> (not res!55043) (not e!72450))))

(assert (=> b!111454 (= res!55043 (and (or (not ((_ is Cons!1626) (toList!811 lt!56699))) (bvsle (_1!1231 (h!2225 (toList!811 lt!56699))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1626) (toList!811 lt!56699)) (bvslt (_1!1231 (h!2225 (toList!811 lt!56699))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!111455 () Bool)

(assert (=> b!111455 (= e!72450 (containsKey!162 (t!5767 (toList!811 lt!56699)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!31679 (not res!55042)) b!111454))

(assert (= (and b!111454 res!55043) b!111455))

(declare-fun m!127061 () Bool)

(assert (=> b!111455 m!127061))

(assert (=> d!30879 d!31679))

(declare-fun d!31681 () Bool)

(assert (=> d!31681 (= ($colon$colon!83 e!71765 (ite c!19569 (h!2225 (toList!811 lt!56462)) (tuple2!2441 (_1!1231 lt!56457) (_2!1231 lt!56457)))) (Cons!1626 (ite c!19569 (h!2225 (toList!811 lt!56462)) (tuple2!2441 (_1!1231 lt!56457) (_2!1231 lt!56457))) e!71765))))

(assert (=> bm!11785 d!31681))

(declare-fun d!31683 () Bool)

(declare-fun res!55044 () Bool)

(declare-fun e!72451 () Bool)

(assert (=> d!31683 (=> res!55044 e!72451)))

(assert (=> d!31683 (= res!55044 (and ((_ is Cons!1626) (toList!811 lt!56699)) (= (_1!1231 (h!2225 (toList!811 lt!56699))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!31683 (= (containsKey!162 (toList!811 lt!56699) #b1000000000000000000000000000000000000000000000000000000000000000) e!72451)))

(declare-fun b!111456 () Bool)

(declare-fun e!72452 () Bool)

(assert (=> b!111456 (= e!72451 e!72452)))

(declare-fun res!55045 () Bool)

(assert (=> b!111456 (=> (not res!55045) (not e!72452))))

(assert (=> b!111456 (= res!55045 (and (or (not ((_ is Cons!1626) (toList!811 lt!56699))) (bvsle (_1!1231 (h!2225 (toList!811 lt!56699))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1626) (toList!811 lt!56699)) (bvslt (_1!1231 (h!2225 (toList!811 lt!56699))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!111457 () Bool)

(assert (=> b!111457 (= e!72452 (containsKey!162 (t!5767 (toList!811 lt!56699)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!31683 (not res!55044)) b!111456))

(assert (= (and b!111456 res!55045) b!111457))

(declare-fun m!127063 () Bool)

(assert (=> b!111457 m!127063))

(assert (=> d!30979 d!31683))

(assert (=> b!110398 d!31109))

(assert (=> d!31055 d!31129))

(declare-fun b!111458 () Bool)

(declare-fun c!19877 () Bool)

(assert (=> b!111458 (= c!19877 (and (not (= (bvand (extraKeys!2424 (_2!1230 lt!56590)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2424 (_2!1230 lt!56590)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!72456 () ListLongMap!1591)

(declare-fun e!72461 () ListLongMap!1591)

(assert (=> b!111458 (= e!72456 e!72461)))

(declare-fun bm!11901 () Bool)

(declare-fun call!11904 () ListLongMap!1591)

(declare-fun call!11907 () ListLongMap!1591)

(assert (=> bm!11901 (= call!11904 call!11907)))

(declare-fun b!111459 () Bool)

(declare-fun e!72459 () Bool)

(declare-fun e!72453 () Bool)

(assert (=> b!111459 (= e!72459 e!72453)))

(declare-fun res!55048 () Bool)

(assert (=> b!111459 (=> (not res!55048) (not e!72453))))

(declare-fun lt!57519 () ListLongMap!1591)

(assert (=> b!111459 (= res!55048 (contains!838 lt!57519 (select (arr!2081 (_keys!4341 (_2!1230 lt!56590))) #b00000000000000000000000000000000)))))

(assert (=> b!111459 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2338 (_keys!4341 (_2!1230 lt!56590)))))))

(declare-fun b!111460 () Bool)

(declare-fun e!72454 () Bool)

(declare-fun e!72465 () Bool)

(assert (=> b!111460 (= e!72454 e!72465)))

(declare-fun res!55046 () Bool)

(declare-fun call!11910 () Bool)

(assert (=> b!111460 (= res!55046 call!11910)))

(assert (=> b!111460 (=> (not res!55046) (not e!72465))))

(declare-fun b!111461 () Bool)

(declare-fun e!72463 () ListLongMap!1591)

(assert (=> b!111461 (= e!72463 e!72456)))

(declare-fun c!19881 () Bool)

(assert (=> b!111461 (= c!19881 (and (not (= (bvand (extraKeys!2424 (_2!1230 lt!56590)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2424 (_2!1230 lt!56590)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!111462 () Bool)

(declare-fun e!72464 () Unit!3403)

(declare-fun Unit!3470 () Unit!3403)

(assert (=> b!111462 (= e!72464 Unit!3470)))

(declare-fun b!111463 () Bool)

(declare-fun e!72460 () Bool)

(declare-fun call!11905 () Bool)

(assert (=> b!111463 (= e!72460 (not call!11905))))

(declare-fun bm!11902 () Bool)

(assert (=> bm!11902 (= call!11907 (getCurrentListMapNoExtraKeys!116 (_keys!4341 (_2!1230 lt!56590)) (_values!2610 (_2!1230 lt!56590)) (mask!6795 (_2!1230 lt!56590)) (extraKeys!2424 (_2!1230 lt!56590)) (zeroValue!2498 (_2!1230 lt!56590)) (minValue!2498 (_2!1230 lt!56590)) #b00000000000000000000000000000000 (defaultEntry!2627 (_2!1230 lt!56590))))))

(declare-fun b!111464 () Bool)

(assert (=> b!111464 (= e!72465 (= (apply!100 lt!57519 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2498 (_2!1230 lt!56590))))))

(declare-fun b!111465 () Bool)

(declare-fun call!11909 () ListLongMap!1591)

(assert (=> b!111465 (= e!72463 (+!150 call!11909 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (_2!1230 lt!56590)))))))

(declare-fun b!111466 () Bool)

(declare-fun lt!57520 () Unit!3403)

(assert (=> b!111466 (= e!72464 lt!57520)))

(declare-fun lt!57515 () ListLongMap!1591)

(assert (=> b!111466 (= lt!57515 (getCurrentListMapNoExtraKeys!116 (_keys!4341 (_2!1230 lt!56590)) (_values!2610 (_2!1230 lt!56590)) (mask!6795 (_2!1230 lt!56590)) (extraKeys!2424 (_2!1230 lt!56590)) (zeroValue!2498 (_2!1230 lt!56590)) (minValue!2498 (_2!1230 lt!56590)) #b00000000000000000000000000000000 (defaultEntry!2627 (_2!1230 lt!56590))))))

(declare-fun lt!57514 () (_ BitVec 64))

(assert (=> b!111466 (= lt!57514 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57517 () (_ BitVec 64))

(assert (=> b!111466 (= lt!57517 (select (arr!2081 (_keys!4341 (_2!1230 lt!56590))) #b00000000000000000000000000000000))))

(declare-fun lt!57522 () Unit!3403)

(assert (=> b!111466 (= lt!57522 (addStillContains!76 lt!57515 lt!57514 (zeroValue!2498 (_2!1230 lt!56590)) lt!57517))))

(assert (=> b!111466 (contains!838 (+!150 lt!57515 (tuple2!2441 lt!57514 (zeroValue!2498 (_2!1230 lt!56590)))) lt!57517)))

(declare-fun lt!57506 () Unit!3403)

(assert (=> b!111466 (= lt!57506 lt!57522)))

(declare-fun lt!57518 () ListLongMap!1591)

(assert (=> b!111466 (= lt!57518 (getCurrentListMapNoExtraKeys!116 (_keys!4341 (_2!1230 lt!56590)) (_values!2610 (_2!1230 lt!56590)) (mask!6795 (_2!1230 lt!56590)) (extraKeys!2424 (_2!1230 lt!56590)) (zeroValue!2498 (_2!1230 lt!56590)) (minValue!2498 (_2!1230 lt!56590)) #b00000000000000000000000000000000 (defaultEntry!2627 (_2!1230 lt!56590))))))

(declare-fun lt!57509 () (_ BitVec 64))

(assert (=> b!111466 (= lt!57509 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57516 () (_ BitVec 64))

(assert (=> b!111466 (= lt!57516 (select (arr!2081 (_keys!4341 (_2!1230 lt!56590))) #b00000000000000000000000000000000))))

(declare-fun lt!57524 () Unit!3403)

(assert (=> b!111466 (= lt!57524 (addApplyDifferent!76 lt!57518 lt!57509 (minValue!2498 (_2!1230 lt!56590)) lt!57516))))

(assert (=> b!111466 (= (apply!100 (+!150 lt!57518 (tuple2!2441 lt!57509 (minValue!2498 (_2!1230 lt!56590)))) lt!57516) (apply!100 lt!57518 lt!57516))))

(declare-fun lt!57508 () Unit!3403)

(assert (=> b!111466 (= lt!57508 lt!57524)))

(declare-fun lt!57512 () ListLongMap!1591)

(assert (=> b!111466 (= lt!57512 (getCurrentListMapNoExtraKeys!116 (_keys!4341 (_2!1230 lt!56590)) (_values!2610 (_2!1230 lt!56590)) (mask!6795 (_2!1230 lt!56590)) (extraKeys!2424 (_2!1230 lt!56590)) (zeroValue!2498 (_2!1230 lt!56590)) (minValue!2498 (_2!1230 lt!56590)) #b00000000000000000000000000000000 (defaultEntry!2627 (_2!1230 lt!56590))))))

(declare-fun lt!57505 () (_ BitVec 64))

(assert (=> b!111466 (= lt!57505 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57523 () (_ BitVec 64))

(assert (=> b!111466 (= lt!57523 (select (arr!2081 (_keys!4341 (_2!1230 lt!56590))) #b00000000000000000000000000000000))))

(declare-fun lt!57521 () Unit!3403)

(assert (=> b!111466 (= lt!57521 (addApplyDifferent!76 lt!57512 lt!57505 (zeroValue!2498 (_2!1230 lt!56590)) lt!57523))))

(assert (=> b!111466 (= (apply!100 (+!150 lt!57512 (tuple2!2441 lt!57505 (zeroValue!2498 (_2!1230 lt!56590)))) lt!57523) (apply!100 lt!57512 lt!57523))))

(declare-fun lt!57511 () Unit!3403)

(assert (=> b!111466 (= lt!57511 lt!57521)))

(declare-fun lt!57525 () ListLongMap!1591)

(assert (=> b!111466 (= lt!57525 (getCurrentListMapNoExtraKeys!116 (_keys!4341 (_2!1230 lt!56590)) (_values!2610 (_2!1230 lt!56590)) (mask!6795 (_2!1230 lt!56590)) (extraKeys!2424 (_2!1230 lt!56590)) (zeroValue!2498 (_2!1230 lt!56590)) (minValue!2498 (_2!1230 lt!56590)) #b00000000000000000000000000000000 (defaultEntry!2627 (_2!1230 lt!56590))))))

(declare-fun lt!57510 () (_ BitVec 64))

(assert (=> b!111466 (= lt!57510 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57513 () (_ BitVec 64))

(assert (=> b!111466 (= lt!57513 (select (arr!2081 (_keys!4341 (_2!1230 lt!56590))) #b00000000000000000000000000000000))))

(assert (=> b!111466 (= lt!57520 (addApplyDifferent!76 lt!57525 lt!57510 (minValue!2498 (_2!1230 lt!56590)) lt!57513))))

(assert (=> b!111466 (= (apply!100 (+!150 lt!57525 (tuple2!2441 lt!57510 (minValue!2498 (_2!1230 lt!56590)))) lt!57513) (apply!100 lt!57525 lt!57513))))

(declare-fun b!111467 () Bool)

(declare-fun res!55050 () Bool)

(declare-fun e!72462 () Bool)

(assert (=> b!111467 (=> (not res!55050) (not e!72462))))

(assert (=> b!111467 (= res!55050 e!72454)))

(declare-fun c!19880 () Bool)

(assert (=> b!111467 (= c!19880 (not (= (bvand (extraKeys!2424 (_2!1230 lt!56590)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!111468 () Bool)

(declare-fun e!72455 () Bool)

(assert (=> b!111468 (= e!72455 (validKeyInArray!0 (select (arr!2081 (_keys!4341 (_2!1230 lt!56590))) #b00000000000000000000000000000000)))))

(declare-fun b!111469 () Bool)

(declare-fun e!72458 () Bool)

(assert (=> b!111469 (= e!72458 (= (apply!100 lt!57519 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2498 (_2!1230 lt!56590))))))

(declare-fun bm!11903 () Bool)

(assert (=> bm!11903 (= call!11905 (contains!838 lt!57519 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!111470 () Bool)

(assert (=> b!111470 (= e!72460 e!72458)))

(declare-fun res!55047 () Bool)

(assert (=> b!111470 (= res!55047 call!11905)))

(assert (=> b!111470 (=> (not res!55047) (not e!72458))))

(declare-fun bm!11904 () Bool)

(declare-fun call!11906 () ListLongMap!1591)

(declare-fun c!19876 () Bool)

(assert (=> bm!11904 (= call!11909 (+!150 (ite c!19876 call!11907 (ite c!19881 call!11904 call!11906)) (ite (or c!19876 c!19881) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (_2!1230 lt!56590))) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (_2!1230 lt!56590))))))))

(declare-fun b!111471 () Bool)

(declare-fun call!11908 () ListLongMap!1591)

(assert (=> b!111471 (= e!72456 call!11908)))

(declare-fun d!31685 () Bool)

(assert (=> d!31685 e!72462))

(declare-fun res!55053 () Bool)

(assert (=> d!31685 (=> (not res!55053) (not e!72462))))

(assert (=> d!31685 (= res!55053 (or (bvsge #b00000000000000000000000000000000 (size!2338 (_keys!4341 (_2!1230 lt!56590)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2338 (_keys!4341 (_2!1230 lt!56590)))))))))

(declare-fun lt!57526 () ListLongMap!1591)

(assert (=> d!31685 (= lt!57519 lt!57526)))

(declare-fun lt!57507 () Unit!3403)

(assert (=> d!31685 (= lt!57507 e!72464)))

(declare-fun c!19878 () Bool)

(declare-fun e!72457 () Bool)

(assert (=> d!31685 (= c!19878 e!72457)))

(declare-fun res!55049 () Bool)

(assert (=> d!31685 (=> (not res!55049) (not e!72457))))

(assert (=> d!31685 (= res!55049 (bvslt #b00000000000000000000000000000000 (size!2338 (_keys!4341 (_2!1230 lt!56590)))))))

(assert (=> d!31685 (= lt!57526 e!72463)))

(assert (=> d!31685 (= c!19876 (and (not (= (bvand (extraKeys!2424 (_2!1230 lt!56590)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2424 (_2!1230 lt!56590)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!31685 (validMask!0 (mask!6795 (_2!1230 lt!56590)))))

(assert (=> d!31685 (= (getCurrentListMap!496 (_keys!4341 (_2!1230 lt!56590)) (_values!2610 (_2!1230 lt!56590)) (mask!6795 (_2!1230 lt!56590)) (extraKeys!2424 (_2!1230 lt!56590)) (zeroValue!2498 (_2!1230 lt!56590)) (minValue!2498 (_2!1230 lt!56590)) #b00000000000000000000000000000000 (defaultEntry!2627 (_2!1230 lt!56590))) lt!57519)))

(declare-fun b!111472 () Bool)

(assert (=> b!111472 (= e!72461 call!11908)))

(declare-fun b!111473 () Bool)

(assert (=> b!111473 (= e!72453 (= (apply!100 lt!57519 (select (arr!2081 (_keys!4341 (_2!1230 lt!56590))) #b00000000000000000000000000000000)) (get!1347 (select (arr!2082 (_values!2610 (_2!1230 lt!56590))) #b00000000000000000000000000000000) (dynLambda!390 (defaultEntry!2627 (_2!1230 lt!56590)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!111473 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2339 (_values!2610 (_2!1230 lt!56590)))))))

(assert (=> b!111473 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2338 (_keys!4341 (_2!1230 lt!56590)))))))

(declare-fun b!111474 () Bool)

(assert (=> b!111474 (= e!72461 call!11906)))

(declare-fun bm!11905 () Bool)

(assert (=> bm!11905 (= call!11906 call!11904)))

(declare-fun b!111475 () Bool)

(declare-fun res!55054 () Bool)

(assert (=> b!111475 (=> (not res!55054) (not e!72462))))

(assert (=> b!111475 (= res!55054 e!72459)))

(declare-fun res!55051 () Bool)

(assert (=> b!111475 (=> res!55051 e!72459)))

(assert (=> b!111475 (= res!55051 (not e!72455))))

(declare-fun res!55052 () Bool)

(assert (=> b!111475 (=> (not res!55052) (not e!72455))))

(assert (=> b!111475 (= res!55052 (bvslt #b00000000000000000000000000000000 (size!2338 (_keys!4341 (_2!1230 lt!56590)))))))

(declare-fun bm!11906 () Bool)

(assert (=> bm!11906 (= call!11908 call!11909)))

(declare-fun b!111476 () Bool)

(assert (=> b!111476 (= e!72457 (validKeyInArray!0 (select (arr!2081 (_keys!4341 (_2!1230 lt!56590))) #b00000000000000000000000000000000)))))

(declare-fun b!111477 () Bool)

(assert (=> b!111477 (= e!72462 e!72460)))

(declare-fun c!19879 () Bool)

(assert (=> b!111477 (= c!19879 (not (= (bvand (extraKeys!2424 (_2!1230 lt!56590)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!111478 () Bool)

(assert (=> b!111478 (= e!72454 (not call!11910))))

(declare-fun bm!11907 () Bool)

(assert (=> bm!11907 (= call!11910 (contains!838 lt!57519 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!31685 c!19876) b!111465))

(assert (= (and d!31685 (not c!19876)) b!111461))

(assert (= (and b!111461 c!19881) b!111471))

(assert (= (and b!111461 (not c!19881)) b!111458))

(assert (= (and b!111458 c!19877) b!111472))

(assert (= (and b!111458 (not c!19877)) b!111474))

(assert (= (or b!111472 b!111474) bm!11905))

(assert (= (or b!111471 bm!11905) bm!11901))

(assert (= (or b!111471 b!111472) bm!11906))

(assert (= (or b!111465 bm!11901) bm!11902))

(assert (= (or b!111465 bm!11906) bm!11904))

(assert (= (and d!31685 res!55049) b!111476))

(assert (= (and d!31685 c!19878) b!111466))

(assert (= (and d!31685 (not c!19878)) b!111462))

(assert (= (and d!31685 res!55053) b!111475))

(assert (= (and b!111475 res!55052) b!111468))

(assert (= (and b!111475 (not res!55051)) b!111459))

(assert (= (and b!111459 res!55048) b!111473))

(assert (= (and b!111475 res!55054) b!111467))

(assert (= (and b!111467 c!19880) b!111460))

(assert (= (and b!111467 (not c!19880)) b!111478))

(assert (= (and b!111460 res!55046) b!111464))

(assert (= (or b!111460 b!111478) bm!11907))

(assert (= (and b!111467 res!55050) b!111477))

(assert (= (and b!111477 c!19879) b!111470))

(assert (= (and b!111477 (not c!19879)) b!111463))

(assert (= (and b!111470 res!55047) b!111469))

(assert (= (or b!111470 b!111463) bm!11903))

(declare-fun b_lambda!4979 () Bool)

(assert (=> (not b_lambda!4979) (not b!111473)))

(declare-fun tb!2113 () Bool)

(declare-fun t!5779 () Bool)

(assert (=> (and b!109701 (= (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) (defaultEntry!2627 (_2!1230 lt!56590))) t!5779) tb!2113))

(declare-fun result!3541 () Bool)

(assert (=> tb!2113 (= result!3541 tp_is_empty!2697)))

(assert (=> b!111473 t!5779))

(declare-fun b_and!6855 () Bool)

(assert (= b_and!6851 (and (=> t!5779 result!3541) b_and!6855)))

(declare-fun t!5781 () Bool)

(declare-fun tb!2115 () Bool)

(assert (=> (and b!109708 (= (defaultEntry!2627 newMap!16) (defaultEntry!2627 (_2!1230 lt!56590))) t!5781) tb!2115))

(declare-fun result!3543 () Bool)

(assert (= result!3543 result!3541))

(assert (=> b!111473 t!5781))

(declare-fun b_and!6857 () Bool)

(assert (= b_and!6853 (and (=> t!5781 result!3543) b_and!6857)))

(declare-fun m!127065 () Bool)

(assert (=> bm!11903 m!127065))

(declare-fun m!127067 () Bool)

(assert (=> b!111469 m!127067))

(assert (=> b!111468 m!125781))

(assert (=> b!111468 m!125781))

(assert (=> b!111468 m!125783))

(assert (=> b!111459 m!125781))

(assert (=> b!111459 m!125781))

(declare-fun m!127069 () Bool)

(assert (=> b!111459 m!127069))

(declare-fun m!127071 () Bool)

(assert (=> b!111466 m!127071))

(declare-fun m!127073 () Bool)

(assert (=> b!111466 m!127073))

(declare-fun m!127075 () Bool)

(assert (=> b!111466 m!127075))

(assert (=> b!111466 m!127071))

(declare-fun m!127077 () Bool)

(assert (=> b!111466 m!127077))

(declare-fun m!127079 () Bool)

(assert (=> b!111466 m!127079))

(assert (=> b!111466 m!127079))

(declare-fun m!127081 () Bool)

(assert (=> b!111466 m!127081))

(declare-fun m!127083 () Bool)

(assert (=> b!111466 m!127083))

(assert (=> b!111466 m!125781))

(declare-fun m!127085 () Bool)

(assert (=> b!111466 m!127085))

(declare-fun m!127087 () Bool)

(assert (=> b!111466 m!127087))

(declare-fun m!127089 () Bool)

(assert (=> b!111466 m!127089))

(declare-fun m!127091 () Bool)

(assert (=> b!111466 m!127091))

(assert (=> b!111466 m!127087))

(declare-fun m!127093 () Bool)

(assert (=> b!111466 m!127093))

(declare-fun m!127095 () Bool)

(assert (=> b!111466 m!127095))

(assert (=> b!111466 m!127077))

(declare-fun m!127097 () Bool)

(assert (=> b!111466 m!127097))

(declare-fun m!127099 () Bool)

(assert (=> b!111466 m!127099))

(declare-fun m!127101 () Bool)

(assert (=> b!111466 m!127101))

(declare-fun m!127103 () Bool)

(assert (=> d!31685 m!127103))

(declare-fun m!127105 () Bool)

(assert (=> b!111473 m!127105))

(declare-fun m!127107 () Bool)

(assert (=> b!111473 m!127107))

(assert (=> b!111473 m!127105))

(assert (=> b!111473 m!127107))

(declare-fun m!127109 () Bool)

(assert (=> b!111473 m!127109))

(assert (=> b!111473 m!125781))

(declare-fun m!127111 () Bool)

(assert (=> b!111473 m!127111))

(assert (=> b!111473 m!125781))

(assert (=> bm!11902 m!127099))

(assert (=> b!111476 m!125781))

(assert (=> b!111476 m!125781))

(assert (=> b!111476 m!125783))

(declare-fun m!127113 () Bool)

(assert (=> bm!11904 m!127113))

(declare-fun m!127115 () Bool)

(assert (=> b!111465 m!127115))

(declare-fun m!127117 () Bool)

(assert (=> bm!11907 m!127117))

(declare-fun m!127119 () Bool)

(assert (=> b!111464 m!127119))

(assert (=> d!30987 d!31685))

(assert (=> d!31015 d!30847))

(declare-fun d!31687 () Bool)

(declare-fun res!55055 () Bool)

(declare-fun e!72466 () Bool)

(assert (=> d!31687 (=> res!55055 e!72466)))

(assert (=> d!31687 (= res!55055 (and ((_ is Cons!1626) (toList!811 lt!56612)) (= (_1!1231 (h!2225 (toList!811 lt!56612))) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!31687 (= (containsKey!162 (toList!811 lt!56612) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!72466)))

(declare-fun b!111479 () Bool)

(declare-fun e!72467 () Bool)

(assert (=> b!111479 (= e!72466 e!72467)))

(declare-fun res!55056 () Bool)

(assert (=> b!111479 (=> (not res!55056) (not e!72467))))

(assert (=> b!111479 (= res!55056 (and (or (not ((_ is Cons!1626) (toList!811 lt!56612))) (bvsle (_1!1231 (h!2225 (toList!811 lt!56612))) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1626) (toList!811 lt!56612)) (bvslt (_1!1231 (h!2225 (toList!811 lt!56612))) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!111480 () Bool)

(assert (=> b!111480 (= e!72467 (containsKey!162 (t!5767 (toList!811 lt!56612)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!31687 (not res!55055)) b!111479))

(assert (= (and b!111479 res!55056) b!111480))

(assert (=> b!111480 m!124503))

(declare-fun m!127121 () Bool)

(assert (=> b!111480 m!127121))

(assert (=> d!31063 d!31687))

(declare-fun d!31689 () Bool)

(assert (=> d!31689 (= ($colon$colon!83 e!71821 (ite c!19586 (h!2225 (toList!811 lt!56462)) (tuple2!2441 (_1!1231 lt!56454) (_2!1231 lt!56454)))) (Cons!1626 (ite c!19586 (h!2225 (toList!811 lt!56462)) (tuple2!2441 (_1!1231 lt!56454) (_2!1231 lt!56454))) e!71821))))

(assert (=> bm!11790 d!31689))

(declare-fun d!31691 () Bool)

(declare-fun res!55057 () Bool)

(declare-fun e!72468 () Bool)

(assert (=> d!31691 (=> res!55057 e!72468)))

(assert (=> d!31691 (= res!55057 (and ((_ is Cons!1626) (toList!811 (+!150 lt!56613 (tuple2!2441 lt!56610 lt!56616)))) (= (_1!1231 (h!2225 (toList!811 (+!150 lt!56613 (tuple2!2441 lt!56610 lt!56616))))) lt!56614)))))

(assert (=> d!31691 (= (containsKey!162 (toList!811 (+!150 lt!56613 (tuple2!2441 lt!56610 lt!56616))) lt!56614) e!72468)))

(declare-fun b!111481 () Bool)

(declare-fun e!72469 () Bool)

(assert (=> b!111481 (= e!72468 e!72469)))

(declare-fun res!55058 () Bool)

(assert (=> b!111481 (=> (not res!55058) (not e!72469))))

(assert (=> b!111481 (= res!55058 (and (or (not ((_ is Cons!1626) (toList!811 (+!150 lt!56613 (tuple2!2441 lt!56610 lt!56616))))) (bvsle (_1!1231 (h!2225 (toList!811 (+!150 lt!56613 (tuple2!2441 lt!56610 lt!56616))))) lt!56614)) ((_ is Cons!1626) (toList!811 (+!150 lt!56613 (tuple2!2441 lt!56610 lt!56616)))) (bvslt (_1!1231 (h!2225 (toList!811 (+!150 lt!56613 (tuple2!2441 lt!56610 lt!56616))))) lt!56614)))))

(declare-fun b!111482 () Bool)

(assert (=> b!111482 (= e!72469 (containsKey!162 (t!5767 (toList!811 (+!150 lt!56613 (tuple2!2441 lt!56610 lt!56616)))) lt!56614))))

(assert (= (and d!31691 (not res!55057)) b!111481))

(assert (= (and b!111481 res!55058) b!111482))

(declare-fun m!127123 () Bool)

(assert (=> b!111482 m!127123))

(assert (=> d!31049 d!31691))

(declare-fun b!111483 () Bool)

(declare-fun e!72470 () Option!164)

(assert (=> b!111483 (= e!72470 (Some!163 (_2!1231 (h!2225 (t!5767 (toList!811 lt!56635))))))))

(declare-fun b!111485 () Bool)

(declare-fun e!72471 () Option!164)

(assert (=> b!111485 (= e!72471 (getValueByKey!158 (t!5767 (t!5767 (toList!811 lt!56635))) (_1!1231 lt!56454)))))

(declare-fun d!31693 () Bool)

(declare-fun c!19882 () Bool)

(assert (=> d!31693 (= c!19882 (and ((_ is Cons!1626) (t!5767 (toList!811 lt!56635))) (= (_1!1231 (h!2225 (t!5767 (toList!811 lt!56635)))) (_1!1231 lt!56454))))))

(assert (=> d!31693 (= (getValueByKey!158 (t!5767 (toList!811 lt!56635)) (_1!1231 lt!56454)) e!72470)))

(declare-fun b!111484 () Bool)

(assert (=> b!111484 (= e!72470 e!72471)))

(declare-fun c!19883 () Bool)

(assert (=> b!111484 (= c!19883 (and ((_ is Cons!1626) (t!5767 (toList!811 lt!56635))) (not (= (_1!1231 (h!2225 (t!5767 (toList!811 lt!56635)))) (_1!1231 lt!56454)))))))

(declare-fun b!111486 () Bool)

(assert (=> b!111486 (= e!72471 None!162)))

(assert (= (and d!31693 c!19882) b!111483))

(assert (= (and d!31693 (not c!19882)) b!111484))

(assert (= (and b!111484 c!19883) b!111485))

(assert (= (and b!111484 (not c!19883)) b!111486))

(declare-fun m!127125 () Bool)

(assert (=> b!111485 m!127125))

(assert (=> b!110243 d!31693))

(declare-fun d!31695 () Bool)

(declare-fun lt!57527 () Bool)

(assert (=> d!31695 (= lt!57527 (select (content!113 (t!5767 (toList!811 lt!56627))) lt!56457))))

(declare-fun e!72473 () Bool)

(assert (=> d!31695 (= lt!57527 e!72473)))

(declare-fun res!55059 () Bool)

(assert (=> d!31695 (=> (not res!55059) (not e!72473))))

(assert (=> d!31695 (= res!55059 ((_ is Cons!1626) (t!5767 (toList!811 lt!56627))))))

(assert (=> d!31695 (= (contains!839 (t!5767 (toList!811 lt!56627)) lt!56457) lt!57527)))

(declare-fun b!111487 () Bool)

(declare-fun e!72472 () Bool)

(assert (=> b!111487 (= e!72473 e!72472)))

(declare-fun res!55060 () Bool)

(assert (=> b!111487 (=> res!55060 e!72472)))

(assert (=> b!111487 (= res!55060 (= (h!2225 (t!5767 (toList!811 lt!56627))) lt!56457))))

(declare-fun b!111488 () Bool)

(assert (=> b!111488 (= e!72472 (contains!839 (t!5767 (t!5767 (toList!811 lt!56627))) lt!56457))))

(assert (= (and d!31695 res!55059) b!111487))

(assert (= (and b!111487 (not res!55060)) b!111488))

(declare-fun m!127127 () Bool)

(assert (=> d!31695 m!127127))

(declare-fun m!127129 () Bool)

(assert (=> d!31695 m!127129))

(declare-fun m!127131 () Bool)

(assert (=> b!111488 m!127131))

(assert (=> b!110128 d!31695))

(declare-fun d!31697 () Bool)

(declare-fun lt!57528 () Bool)

(assert (=> d!31697 (= lt!57528 (select (content!113 (toList!811 lt!56931)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))))

(declare-fun e!72475 () Bool)

(assert (=> d!31697 (= lt!57528 e!72475)))

(declare-fun res!55061 () Bool)

(assert (=> d!31697 (=> (not res!55061) (not e!72475))))

(assert (=> d!31697 (= res!55061 ((_ is Cons!1626) (toList!811 lt!56931)))))

(assert (=> d!31697 (= (contains!839 (toList!811 lt!56931) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)) lt!57528)))

(declare-fun b!111489 () Bool)

(declare-fun e!72474 () Bool)

(assert (=> b!111489 (= e!72475 e!72474)))

(declare-fun res!55062 () Bool)

(assert (=> b!111489 (=> res!55062 e!72474)))

(assert (=> b!111489 (= res!55062 (= (h!2225 (toList!811 lt!56931)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))))

(declare-fun b!111490 () Bool)

(assert (=> b!111490 (= e!72474 (contains!839 (t!5767 (toList!811 lt!56931)) (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))))

(assert (= (and d!31697 res!55061) b!111489))

(assert (= (and b!111489 (not res!55062)) b!111490))

(declare-fun m!127133 () Bool)

(assert (=> d!31697 m!127133))

(declare-fun m!127135 () Bool)

(assert (=> d!31697 m!127135))

(declare-fun m!127137 () Bool)

(assert (=> b!111490 m!127137))

(assert (=> b!110404 d!31697))

(declare-fun lt!57529 () Bool)

(declare-fun d!31699 () Bool)

(assert (=> d!31699 (= lt!57529 (select (content!113 (toList!811 lt!56805)) (ite (or c!19473 c!19478) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun e!72477 () Bool)

(assert (=> d!31699 (= lt!57529 e!72477)))

(declare-fun res!55063 () Bool)

(assert (=> d!31699 (=> (not res!55063) (not e!72477))))

(assert (=> d!31699 (= res!55063 ((_ is Cons!1626) (toList!811 lt!56805)))))

(assert (=> d!31699 (= (contains!839 (toList!811 lt!56805) (ite (or c!19473 c!19478) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))) lt!57529)))

(declare-fun b!111491 () Bool)

(declare-fun e!72476 () Bool)

(assert (=> b!111491 (= e!72477 e!72476)))

(declare-fun res!55064 () Bool)

(assert (=> b!111491 (=> res!55064 e!72476)))

(assert (=> b!111491 (= res!55064 (= (h!2225 (toList!811 lt!56805)) (ite (or c!19473 c!19478) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun b!111492 () Bool)

(assert (=> b!111492 (= e!72476 (contains!839 (t!5767 (toList!811 lt!56805)) (ite (or c!19473 c!19478) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(assert (= (and d!31699 res!55063) b!111491))

(assert (= (and b!111491 (not res!55064)) b!111492))

(declare-fun m!127139 () Bool)

(assert (=> d!31699 m!127139))

(declare-fun m!127141 () Bool)

(assert (=> d!31699 m!127141))

(declare-fun m!127143 () Bool)

(assert (=> b!111492 m!127143))

(assert (=> b!110261 d!31699))

(declare-fun b!111493 () Bool)

(declare-fun e!72478 () Option!164)

(assert (=> b!111493 (= e!72478 (Some!163 (_2!1231 (h!2225 (toList!811 lt!56875)))))))

(declare-fun e!72479 () Option!164)

(declare-fun b!111495 () Bool)

(assert (=> b!111495 (= e!72479 (getValueByKey!158 (t!5767 (toList!811 lt!56875)) (_1!1231 (tuple2!2441 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun d!31701 () Bool)

(declare-fun c!19884 () Bool)

(assert (=> d!31701 (= c!19884 (and ((_ is Cons!1626) (toList!811 lt!56875)) (= (_1!1231 (h!2225 (toList!811 lt!56875))) (_1!1231 (tuple2!2441 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> d!31701 (= (getValueByKey!158 (toList!811 lt!56875) (_1!1231 (tuple2!2441 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))) e!72478)))

(declare-fun b!111494 () Bool)

(assert (=> b!111494 (= e!72478 e!72479)))

(declare-fun c!19885 () Bool)

(assert (=> b!111494 (= c!19885 (and ((_ is Cons!1626) (toList!811 lt!56875)) (not (= (_1!1231 (h!2225 (toList!811 lt!56875))) (_1!1231 (tuple2!2441 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))))

(declare-fun b!111496 () Bool)

(assert (=> b!111496 (= e!72479 None!162)))

(assert (= (and d!31701 c!19884) b!111493))

(assert (= (and d!31701 (not c!19884)) b!111494))

(assert (= (and b!111494 c!19885) b!111495))

(assert (= (and b!111494 (not c!19885)) b!111496))

(declare-fun m!127145 () Bool)

(assert (=> b!111495 m!127145))

(assert (=> b!110349 d!31701))

(declare-fun d!31703 () Bool)

(assert (=> d!31703 (isDefined!111 (getValueByKey!158 (toList!811 lt!56627) (_1!1231 lt!56457)))))

(declare-fun lt!57530 () Unit!3403)

(assert (=> d!31703 (= lt!57530 (choose!684 (toList!811 lt!56627) (_1!1231 lt!56457)))))

(declare-fun e!72480 () Bool)

(assert (=> d!31703 e!72480))

(declare-fun res!55065 () Bool)

(assert (=> d!31703 (=> (not res!55065) (not e!72480))))

(assert (=> d!31703 (= res!55065 (isStrictlySorted!311 (toList!811 lt!56627)))))

(assert (=> d!31703 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 lt!56627) (_1!1231 lt!56457)) lt!57530)))

(declare-fun b!111497 () Bool)

(assert (=> b!111497 (= e!72480 (containsKey!162 (toList!811 lt!56627) (_1!1231 lt!56457)))))

(assert (= (and d!31703 res!55065) b!111497))

(assert (=> d!31703 m!124533))

(assert (=> d!31703 m!124533))

(assert (=> d!31703 m!124787))

(declare-fun m!127147 () Bool)

(assert (=> d!31703 m!127147))

(declare-fun m!127149 () Bool)

(assert (=> d!31703 m!127149))

(assert (=> b!111497 m!124783))

(assert (=> b!110172 d!31703))

(assert (=> b!110172 d!31533))

(assert (=> b!110172 d!30999))

(declare-fun b!111510 () Bool)

(declare-fun e!72489 () SeekEntryResult!261)

(assert (=> b!111510 (= e!72489 (seekKeyOrZeroReturnVacant!0 (bvadd (x!13949 lt!56788) #b00000000000000000000000000000001) (nextIndex!0 (index!3196 lt!56788) (x!13949 lt!56788) (mask!6795 newMap!16)) (index!3196 lt!56788) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (_keys!4341 newMap!16) (mask!6795 newMap!16)))))

(declare-fun b!111512 () Bool)

(declare-fun e!72488 () SeekEntryResult!261)

(assert (=> b!111512 (= e!72488 (Found!261 (index!3196 lt!56788)))))

(declare-fun b!111513 () Bool)

(declare-fun e!72487 () SeekEntryResult!261)

(assert (=> b!111513 (= e!72487 Undefined!261)))

(declare-fun b!111514 () Bool)

(declare-fun c!19894 () Bool)

(declare-fun lt!57536 () (_ BitVec 64))

(assert (=> b!111514 (= c!19894 (= lt!57536 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!111514 (= e!72488 e!72489)))

(declare-fun b!111515 () Bool)

(assert (=> b!111515 (= e!72489 (MissingVacant!261 (index!3196 lt!56788)))))

(declare-fun lt!57535 () SeekEntryResult!261)

(declare-fun d!31705 () Bool)

(assert (=> d!31705 (and (or ((_ is Undefined!261) lt!57535) (not ((_ is Found!261) lt!57535)) (and (bvsge (index!3195 lt!57535) #b00000000000000000000000000000000) (bvslt (index!3195 lt!57535) (size!2338 (_keys!4341 newMap!16))))) (or ((_ is Undefined!261) lt!57535) ((_ is Found!261) lt!57535) (not ((_ is MissingVacant!261) lt!57535)) (not (= (index!3197 lt!57535) (index!3196 lt!56788))) (and (bvsge (index!3197 lt!57535) #b00000000000000000000000000000000) (bvslt (index!3197 lt!57535) (size!2338 (_keys!4341 newMap!16))))) (or ((_ is Undefined!261) lt!57535) (ite ((_ is Found!261) lt!57535) (= (select (arr!2081 (_keys!4341 newMap!16)) (index!3195 lt!57535)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) (and ((_ is MissingVacant!261) lt!57535) (= (index!3197 lt!57535) (index!3196 lt!56788)) (= (select (arr!2081 (_keys!4341 newMap!16)) (index!3197 lt!57535)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!31705 (= lt!57535 e!72487)))

(declare-fun c!19893 () Bool)

(assert (=> d!31705 (= c!19893 (bvsge (x!13949 lt!56788) #b01111111111111111111111111111110))))

(assert (=> d!31705 (= lt!57536 (select (arr!2081 (_keys!4341 newMap!16)) (index!3196 lt!56788)))))

(assert (=> d!31705 (validMask!0 (mask!6795 newMap!16))))

(assert (=> d!31705 (= (seekKeyOrZeroReturnVacant!0 (x!13949 lt!56788) (index!3196 lt!56788) (index!3196 lt!56788) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) (_keys!4341 newMap!16) (mask!6795 newMap!16)) lt!57535)))

(declare-fun b!111511 () Bool)

(assert (=> b!111511 (= e!72487 e!72488)))

(declare-fun c!19892 () Bool)

(assert (=> b!111511 (= c!19892 (= lt!57536 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(assert (= (and d!31705 c!19893) b!111513))

(assert (= (and d!31705 (not c!19893)) b!111511))

(assert (= (and b!111511 c!19892) b!111512))

(assert (= (and b!111511 (not c!19892)) b!111514))

(assert (= (and b!111514 c!19894) b!111515))

(assert (= (and b!111514 (not c!19894)) b!111510))

(declare-fun m!127151 () Bool)

(assert (=> b!111510 m!127151))

(assert (=> b!111510 m!127151))

(assert (=> b!111510 m!124315))

(declare-fun m!127153 () Bool)

(assert (=> b!111510 m!127153))

(declare-fun m!127155 () Bool)

(assert (=> d!31705 m!127155))

(declare-fun m!127157 () Bool)

(assert (=> d!31705 m!127157))

(assert (=> d!31705 m!124821))

(assert (=> d!31705 m!124669))

(assert (=> b!110234 d!31705))

(declare-fun d!31707 () Bool)

(declare-fun e!72490 () Bool)

(assert (=> d!31707 e!72490))

(declare-fun res!55066 () Bool)

(assert (=> d!31707 (=> (not res!55066) (not e!72490))))

(declare-fun lt!57539 () ListLongMap!1591)

(assert (=> d!31707 (= res!55066 (contains!838 lt!57539 (_1!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16)))))))

(declare-fun lt!57538 () List!1630)

(assert (=> d!31707 (= lt!57539 (ListLongMap!1592 lt!57538))))

(declare-fun lt!57540 () Unit!3403)

(declare-fun lt!57537 () Unit!3403)

(assert (=> d!31707 (= lt!57540 lt!57537)))

(assert (=> d!31707 (= (getValueByKey!158 lt!57538 (_1!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16)))) (Some!163 (_2!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16)))))))

(assert (=> d!31707 (= lt!57537 (lemmaContainsTupThenGetReturnValue!74 lt!57538 (_1!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16))) (_2!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16)))))))

(assert (=> d!31707 (= lt!57538 (insertStrictlySorted!77 (toList!811 call!11784) (_1!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16))) (_2!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16)))))))

(assert (=> d!31707 (= (+!150 call!11784 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16))) lt!57539)))

(declare-fun b!111516 () Bool)

(declare-fun res!55067 () Bool)

(assert (=> b!111516 (=> (not res!55067) (not e!72490))))

(assert (=> b!111516 (= res!55067 (= (getValueByKey!158 (toList!811 lt!57539) (_1!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16)))) (Some!163 (_2!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16))))))))

(declare-fun b!111517 () Bool)

(assert (=> b!111517 (= e!72490 (contains!839 (toList!811 lt!57539) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16))))))

(assert (= (and d!31707 res!55066) b!111516))

(assert (= (and b!111516 res!55067) b!111517))

(declare-fun m!127159 () Bool)

(assert (=> d!31707 m!127159))

(declare-fun m!127161 () Bool)

(assert (=> d!31707 m!127161))

(declare-fun m!127163 () Bool)

(assert (=> d!31707 m!127163))

(declare-fun m!127165 () Bool)

(assert (=> d!31707 m!127165))

(declare-fun m!127167 () Bool)

(assert (=> b!111516 m!127167))

(declare-fun m!127169 () Bool)

(assert (=> b!111517 m!127169))

(assert (=> b!110306 d!31707))

(declare-fun d!31709 () Bool)

(declare-fun e!72491 () Bool)

(assert (=> d!31709 e!72491))

(declare-fun res!55068 () Bool)

(assert (=> d!31709 (=> res!55068 e!72491)))

(declare-fun lt!57541 () Bool)

(assert (=> d!31709 (= res!55068 (not lt!57541))))

(declare-fun lt!57542 () Bool)

(assert (=> d!31709 (= lt!57541 lt!57542)))

(declare-fun lt!57544 () Unit!3403)

(declare-fun e!72492 () Unit!3403)

(assert (=> d!31709 (= lt!57544 e!72492)))

(declare-fun c!19895 () Bool)

(assert (=> d!31709 (= c!19895 lt!57542)))

(assert (=> d!31709 (= lt!57542 (containsKey!162 (toList!811 lt!56875) (_1!1231 (tuple2!2441 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> d!31709 (= (contains!838 lt!56875 (_1!1231 (tuple2!2441 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))) lt!57541)))

(declare-fun b!111518 () Bool)

(declare-fun lt!57543 () Unit!3403)

(assert (=> b!111518 (= e!72492 lt!57543)))

(assert (=> b!111518 (= lt!57543 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 lt!56875) (_1!1231 (tuple2!2441 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> b!111518 (isDefined!111 (getValueByKey!158 (toList!811 lt!56875) (_1!1231 (tuple2!2441 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun b!111519 () Bool)

(declare-fun Unit!3471 () Unit!3403)

(assert (=> b!111519 (= e!72492 Unit!3471)))

(declare-fun b!111520 () Bool)

(assert (=> b!111520 (= e!72491 (isDefined!111 (getValueByKey!158 (toList!811 lt!56875) (_1!1231 (tuple2!2441 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(assert (= (and d!31709 c!19895) b!111518))

(assert (= (and d!31709 (not c!19895)) b!111519))

(assert (= (and d!31709 (not res!55068)) b!111520))

(declare-fun m!127171 () Bool)

(assert (=> d!31709 m!127171))

(declare-fun m!127173 () Bool)

(assert (=> b!111518 m!127173))

(assert (=> b!111518 m!125103))

(assert (=> b!111518 m!125103))

(declare-fun m!127175 () Bool)

(assert (=> b!111518 m!127175))

(assert (=> b!111520 m!125103))

(assert (=> b!111520 m!125103))

(assert (=> b!111520 m!127175))

(assert (=> d!30963 d!31709))

(declare-fun b!111521 () Bool)

(declare-fun e!72493 () Option!164)

(assert (=> b!111521 (= e!72493 (Some!163 (_2!1231 (h!2225 lt!56874))))))

(declare-fun e!72494 () Option!164)

(declare-fun b!111523 () Bool)

(assert (=> b!111523 (= e!72494 (getValueByKey!158 (t!5767 lt!56874) (_1!1231 (tuple2!2441 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun c!19896 () Bool)

(declare-fun d!31711 () Bool)

(assert (=> d!31711 (= c!19896 (and ((_ is Cons!1626) lt!56874) (= (_1!1231 (h!2225 lt!56874)) (_1!1231 (tuple2!2441 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> d!31711 (= (getValueByKey!158 lt!56874 (_1!1231 (tuple2!2441 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))) e!72493)))

(declare-fun b!111522 () Bool)

(assert (=> b!111522 (= e!72493 e!72494)))

(declare-fun c!19897 () Bool)

(assert (=> b!111522 (= c!19897 (and ((_ is Cons!1626) lt!56874) (not (= (_1!1231 (h!2225 lt!56874)) (_1!1231 (tuple2!2441 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))))

(declare-fun b!111524 () Bool)

(assert (=> b!111524 (= e!72494 None!162)))

(assert (= (and d!31711 c!19896) b!111521))

(assert (= (and d!31711 (not c!19896)) b!111522))

(assert (= (and b!111522 c!19897) b!111523))

(assert (= (and b!111522 (not c!19897)) b!111524))

(declare-fun m!127177 () Bool)

(assert (=> b!111523 m!127177))

(assert (=> d!30963 d!31711))

(declare-fun d!31713 () Bool)

(assert (=> d!31713 (= (getValueByKey!158 lt!56874 (_1!1231 (tuple2!2441 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))) (Some!163 (_2!1231 (tuple2!2441 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun lt!57545 () Unit!3403)

(assert (=> d!31713 (= lt!57545 (choose!687 lt!56874 (_1!1231 (tuple2!2441 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992))))) (_2!1231 (tuple2!2441 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun e!72495 () Bool)

(assert (=> d!31713 e!72495))

(declare-fun res!55069 () Bool)

(assert (=> d!31713 (=> (not res!55069) (not e!72495))))

(assert (=> d!31713 (= res!55069 (isStrictlySorted!311 lt!56874))))

(assert (=> d!31713 (= (lemmaContainsTupThenGetReturnValue!74 lt!56874 (_1!1231 (tuple2!2441 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992))))) (_2!1231 (tuple2!2441 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))) lt!57545)))

(declare-fun b!111525 () Bool)

(declare-fun res!55070 () Bool)

(assert (=> b!111525 (=> (not res!55070) (not e!72495))))

(assert (=> b!111525 (= res!55070 (containsKey!162 lt!56874 (_1!1231 (tuple2!2441 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun b!111526 () Bool)

(assert (=> b!111526 (= e!72495 (contains!839 lt!56874 (tuple2!2441 (_1!1231 (tuple2!2441 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992))))) (_2!1231 (tuple2!2441 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(assert (= (and d!31713 res!55069) b!111525))

(assert (= (and b!111525 res!55070) b!111526))

(assert (=> d!31713 m!125097))

(declare-fun m!127179 () Bool)

(assert (=> d!31713 m!127179))

(declare-fun m!127181 () Bool)

(assert (=> d!31713 m!127181))

(declare-fun m!127183 () Bool)

(assert (=> b!111525 m!127183))

(declare-fun m!127185 () Bool)

(assert (=> b!111526 m!127185))

(assert (=> d!30963 d!31713))

(declare-fun b!111527 () Bool)

(declare-fun e!72500 () List!1630)

(declare-fun e!72499 () List!1630)

(assert (=> b!111527 (= e!72500 e!72499)))

(declare-fun c!19900 () Bool)

(assert (=> b!111527 (= c!19900 (and ((_ is Cons!1626) (toList!811 lt!56698)) (= (_1!1231 (h!2225 (toList!811 lt!56698))) (_1!1231 (tuple2!2441 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(declare-fun bm!11908 () Bool)

(declare-fun call!11911 () List!1630)

(declare-fun call!11912 () List!1630)

(assert (=> bm!11908 (= call!11911 call!11912)))

(declare-fun b!111528 () Bool)

(assert (=> b!111528 (= e!72500 call!11912)))

(declare-fun bm!11909 () Bool)

(declare-fun call!11913 () List!1630)

(assert (=> bm!11909 (= call!11913 call!11911)))

(declare-fun bm!11910 () Bool)

(declare-fun e!72498 () List!1630)

(declare-fun c!19898 () Bool)

(assert (=> bm!11910 (= call!11912 ($colon$colon!83 e!72498 (ite c!19898 (h!2225 (toList!811 lt!56698)) (tuple2!2441 (_1!1231 (tuple2!2441 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992))))) (_2!1231 (tuple2!2441 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))))

(declare-fun c!19901 () Bool)

(assert (=> bm!11910 (= c!19901 c!19898)))

(declare-fun b!111529 () Bool)

(assert (=> b!111529 (= e!72499 call!11911)))

(declare-fun lt!57546 () List!1630)

(declare-fun b!111531 () Bool)

(declare-fun e!72497 () Bool)

(assert (=> b!111531 (= e!72497 (contains!839 lt!57546 (tuple2!2441 (_1!1231 (tuple2!2441 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992))))) (_2!1231 (tuple2!2441 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(declare-fun b!111532 () Bool)

(declare-fun e!72496 () List!1630)

(assert (=> b!111532 (= e!72496 call!11913)))

(declare-fun b!111533 () Bool)

(declare-fun res!55072 () Bool)

(assert (=> b!111533 (=> (not res!55072) (not e!72497))))

(assert (=> b!111533 (= res!55072 (containsKey!162 lt!57546 (_1!1231 (tuple2!2441 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun c!19899 () Bool)

(declare-fun b!111534 () Bool)

(assert (=> b!111534 (= c!19899 (and ((_ is Cons!1626) (toList!811 lt!56698)) (bvsgt (_1!1231 (h!2225 (toList!811 lt!56698))) (_1!1231 (tuple2!2441 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> b!111534 (= e!72499 e!72496)))

(declare-fun b!111535 () Bool)

(assert (=> b!111535 (= e!72496 call!11913)))

(declare-fun b!111536 () Bool)

(assert (=> b!111536 (= e!72498 (ite c!19900 (t!5767 (toList!811 lt!56698)) (ite c!19899 (Cons!1626 (h!2225 (toList!811 lt!56698)) (t!5767 (toList!811 lt!56698))) Nil!1627)))))

(declare-fun b!111530 () Bool)

(assert (=> b!111530 (= e!72498 (insertStrictlySorted!77 (t!5767 (toList!811 lt!56698)) (_1!1231 (tuple2!2441 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992))))) (_2!1231 (tuple2!2441 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun d!31715 () Bool)

(assert (=> d!31715 e!72497))

(declare-fun res!55071 () Bool)

(assert (=> d!31715 (=> (not res!55071) (not e!72497))))

(assert (=> d!31715 (= res!55071 (isStrictlySorted!311 lt!57546))))

(assert (=> d!31715 (= lt!57546 e!72500)))

(assert (=> d!31715 (= c!19898 (and ((_ is Cons!1626) (toList!811 lt!56698)) (bvslt (_1!1231 (h!2225 (toList!811 lt!56698))) (_1!1231 (tuple2!2441 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> d!31715 (isStrictlySorted!311 (toList!811 lt!56698))))

(assert (=> d!31715 (= (insertStrictlySorted!77 (toList!811 lt!56698) (_1!1231 (tuple2!2441 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992))))) (_2!1231 (tuple2!2441 lt!56689 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))) lt!57546)))

(assert (= (and d!31715 c!19898) b!111528))

(assert (= (and d!31715 (not c!19898)) b!111527))

(assert (= (and b!111527 c!19900) b!111529))

(assert (= (and b!111527 (not c!19900)) b!111534))

(assert (= (and b!111534 c!19899) b!111532))

(assert (= (and b!111534 (not c!19899)) b!111535))

(assert (= (or b!111532 b!111535) bm!11909))

(assert (= (or b!111529 bm!11909) bm!11908))

(assert (= (or b!111528 bm!11908) bm!11910))

(assert (= (and bm!11910 c!19901) b!111530))

(assert (= (and bm!11910 (not c!19901)) b!111536))

(assert (= (and d!31715 res!55071) b!111533))

(assert (= (and b!111533 res!55072) b!111531))

(declare-fun m!127187 () Bool)

(assert (=> b!111533 m!127187))

(declare-fun m!127189 () Bool)

(assert (=> b!111530 m!127189))

(declare-fun m!127191 () Bool)

(assert (=> b!111531 m!127191))

(declare-fun m!127193 () Bool)

(assert (=> d!31715 m!127193))

(declare-fun m!127195 () Bool)

(assert (=> d!31715 m!127195))

(declare-fun m!127197 () Bool)

(assert (=> bm!11910 m!127197))

(assert (=> d!30963 d!31715))

(declare-fun d!31717 () Bool)

(declare-fun c!19902 () Bool)

(assert (=> d!31717 (= c!19902 ((_ is Nil!1627) (toList!811 lt!56627)))))

(declare-fun e!72501 () (InoxSet tuple2!2440))

(assert (=> d!31717 (= (content!113 (toList!811 lt!56627)) e!72501)))

(declare-fun b!111537 () Bool)

(assert (=> b!111537 (= e!72501 ((as const (Array tuple2!2440 Bool)) false))))

(declare-fun b!111538 () Bool)

(assert (=> b!111538 (= e!72501 ((_ map or) (store ((as const (Array tuple2!2440 Bool)) false) (h!2225 (toList!811 lt!56627)) true) (content!113 (t!5767 (toList!811 lt!56627)))))))

(assert (= (and d!31717 c!19902) b!111537))

(assert (= (and d!31717 (not c!19902)) b!111538))

(declare-fun m!127199 () Bool)

(assert (=> b!111538 m!127199))

(assert (=> b!111538 m!127127))

(assert (=> d!30883 d!31717))

(declare-fun b!111539 () Bool)

(declare-fun e!72502 () Option!164)

(assert (=> b!111539 (= e!72502 (Some!163 (_2!1231 (h!2225 (t!5767 lt!56626)))))))

(declare-fun b!111541 () Bool)

(declare-fun e!72503 () Option!164)

(assert (=> b!111541 (= e!72503 (getValueByKey!158 (t!5767 (t!5767 lt!56626)) (_1!1231 lt!56457)))))

(declare-fun d!31719 () Bool)

(declare-fun c!19903 () Bool)

(assert (=> d!31719 (= c!19903 (and ((_ is Cons!1626) (t!5767 lt!56626)) (= (_1!1231 (h!2225 (t!5767 lt!56626))) (_1!1231 lt!56457))))))

(assert (=> d!31719 (= (getValueByKey!158 (t!5767 lt!56626) (_1!1231 lt!56457)) e!72502)))

(declare-fun b!111540 () Bool)

(assert (=> b!111540 (= e!72502 e!72503)))

(declare-fun c!19904 () Bool)

(assert (=> b!111540 (= c!19904 (and ((_ is Cons!1626) (t!5767 lt!56626)) (not (= (_1!1231 (h!2225 (t!5767 lt!56626))) (_1!1231 lt!56457)))))))

(declare-fun b!111542 () Bool)

(assert (=> b!111542 (= e!72503 None!162)))

(assert (= (and d!31719 c!19903) b!111539))

(assert (= (and d!31719 (not c!19903)) b!111540))

(assert (= (and b!111540 c!19904) b!111541))

(assert (= (and b!111540 (not c!19904)) b!111542))

(declare-fun m!127201 () Bool)

(assert (=> b!111541 m!127201))

(assert (=> b!110177 d!31719))

(declare-fun d!31721 () Bool)

(assert (=> d!31721 (isDefined!111 (getValueByKey!158 (toList!811 lt!56635) (_1!1231 lt!56454)))))

(declare-fun lt!57547 () Unit!3403)

(assert (=> d!31721 (= lt!57547 (choose!684 (toList!811 lt!56635) (_1!1231 lt!56454)))))

(declare-fun e!72504 () Bool)

(assert (=> d!31721 e!72504))

(declare-fun res!55073 () Bool)

(assert (=> d!31721 (=> (not res!55073) (not e!72504))))

(assert (=> d!31721 (= res!55073 (isStrictlySorted!311 (toList!811 lt!56635)))))

(assert (=> d!31721 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 lt!56635) (_1!1231 lt!56454)) lt!57547)))

(declare-fun b!111543 () Bool)

(assert (=> b!111543 (= e!72504 (containsKey!162 (toList!811 lt!56635) (_1!1231 lt!56454)))))

(assert (= (and d!31721 res!55073) b!111543))

(assert (=> d!31721 m!124557))

(assert (=> d!31721 m!124557))

(assert (=> d!31721 m!124757))

(declare-fun m!127203 () Bool)

(assert (=> d!31721 m!127203))

(declare-fun m!127205 () Bool)

(assert (=> d!31721 m!127205))

(assert (=> b!111543 m!124753))

(assert (=> b!110129 d!31721))

(assert (=> b!110129 d!31547))

(assert (=> b!110129 d!30915))

(declare-fun d!31723 () Bool)

(declare-fun res!55074 () Bool)

(declare-fun e!72505 () Bool)

(assert (=> d!31723 (=> res!55074 e!72505)))

(assert (=> d!31723 (= res!55074 (and ((_ is Cons!1626) (toList!811 lt!56631)) (= (_1!1231 (h!2225 (toList!811 lt!56631))) (_1!1231 lt!56454))))))

(assert (=> d!31723 (= (containsKey!162 (toList!811 lt!56631) (_1!1231 lt!56454)) e!72505)))

(declare-fun b!111544 () Bool)

(declare-fun e!72506 () Bool)

(assert (=> b!111544 (= e!72505 e!72506)))

(declare-fun res!55075 () Bool)

(assert (=> b!111544 (=> (not res!55075) (not e!72506))))

(assert (=> b!111544 (= res!55075 (and (or (not ((_ is Cons!1626) (toList!811 lt!56631))) (bvsle (_1!1231 (h!2225 (toList!811 lt!56631))) (_1!1231 lt!56454))) ((_ is Cons!1626) (toList!811 lt!56631)) (bvslt (_1!1231 (h!2225 (toList!811 lt!56631))) (_1!1231 lt!56454))))))

(declare-fun b!111545 () Bool)

(assert (=> b!111545 (= e!72506 (containsKey!162 (t!5767 (toList!811 lt!56631)) (_1!1231 lt!56454)))))

(assert (= (and d!31723 (not res!55074)) b!111544))

(assert (= (and b!111544 res!55075) b!111545))

(declare-fun m!127207 () Bool)

(assert (=> b!111545 m!127207))

(assert (=> d!31019 d!31723))

(assert (=> b!110112 d!31105))

(assert (=> b!110383 d!31143))

(assert (=> b!110383 d!31145))

(declare-fun d!31725 () Bool)

(assert (=> d!31725 (= (get!1350 (getValueByKey!158 (toList!811 lt!56699) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2934 (getValueByKey!158 (toList!811 lt!56699) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!31043 d!31725))

(assert (=> d!31043 d!31239))

(declare-fun d!31727 () Bool)

(declare-fun res!55076 () Bool)

(declare-fun e!72507 () Bool)

(assert (=> d!31727 (=> res!55076 e!72507)))

(assert (=> d!31727 (= res!55076 (and ((_ is Cons!1626) (toList!811 lt!56627)) (= (_1!1231 (h!2225 (toList!811 lt!56627))) (_1!1231 lt!56457))))))

(assert (=> d!31727 (= (containsKey!162 (toList!811 lt!56627) (_1!1231 lt!56457)) e!72507)))

(declare-fun b!111546 () Bool)

(declare-fun e!72508 () Bool)

(assert (=> b!111546 (= e!72507 e!72508)))

(declare-fun res!55077 () Bool)

(assert (=> b!111546 (=> (not res!55077) (not e!72508))))

(assert (=> b!111546 (= res!55077 (and (or (not ((_ is Cons!1626) (toList!811 lt!56627))) (bvsle (_1!1231 (h!2225 (toList!811 lt!56627))) (_1!1231 lt!56457))) ((_ is Cons!1626) (toList!811 lt!56627)) (bvslt (_1!1231 (h!2225 (toList!811 lt!56627))) (_1!1231 lt!56457))))))

(declare-fun b!111547 () Bool)

(assert (=> b!111547 (= e!72508 (containsKey!162 (t!5767 (toList!811 lt!56627)) (_1!1231 lt!56457)))))

(assert (= (and d!31727 (not res!55076)) b!111546))

(assert (= (and b!111546 res!55077) b!111547))

(declare-fun m!127209 () Bool)

(assert (=> b!111547 m!127209))

(assert (=> d!30895 d!31727))

(declare-fun d!31729 () Bool)

(assert (=> d!31729 (= (apply!100 lt!56849 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1350 (getValueByKey!158 (toList!811 lt!56849) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4599 () Bool)

(assert (= bs!4599 d!31729))

(assert (=> bs!4599 m!126771))

(assert (=> bs!4599 m!126771))

(declare-fun m!127211 () Bool)

(assert (=> bs!4599 m!127211))

(assert (=> b!110305 d!31729))

(declare-fun d!31731 () Bool)

(declare-fun res!55078 () Bool)

(declare-fun e!72509 () Bool)

(assert (=> d!31731 (=> res!55078 e!72509)))

(assert (=> d!31731 (= res!55078 (and ((_ is Cons!1626) (t!5767 (toList!811 lt!56461))) (= (_1!1231 (h!2225 (t!5767 (toList!811 lt!56461)))) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355))))))

(assert (=> d!31731 (= (containsKey!162 (t!5767 (toList!811 lt!56461)) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) e!72509)))

(declare-fun b!111548 () Bool)

(declare-fun e!72510 () Bool)

(assert (=> b!111548 (= e!72509 e!72510)))

(declare-fun res!55079 () Bool)

(assert (=> b!111548 (=> (not res!55079) (not e!72510))))

(assert (=> b!111548 (= res!55079 (and (or (not ((_ is Cons!1626) (t!5767 (toList!811 lt!56461)))) (bvsle (_1!1231 (h!2225 (t!5767 (toList!811 lt!56461)))) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355))) ((_ is Cons!1626) (t!5767 (toList!811 lt!56461))) (bvslt (_1!1231 (h!2225 (t!5767 (toList!811 lt!56461)))) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355))))))

(declare-fun b!111549 () Bool)

(assert (=> b!111549 (= e!72510 (containsKey!162 (t!5767 (t!5767 (toList!811 lt!56461))) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(assert (= (and d!31731 (not res!55078)) b!111548))

(assert (= (and b!111548 res!55079) b!111549))

(assert (=> b!111549 m!124315))

(declare-fun m!127213 () Bool)

(assert (=> b!111549 m!127213))

(assert (=> b!110491 d!31731))

(declare-fun d!31733 () Bool)

(assert (=> d!31733 (isDefined!111 (getValueByKey!158 (toList!811 call!11697) (select (arr!2081 (_keys!4341 newMap!16)) (index!3195 lt!56591))))))

(declare-fun lt!57548 () Unit!3403)

(assert (=> d!31733 (= lt!57548 (choose!684 (toList!811 call!11697) (select (arr!2081 (_keys!4341 newMap!16)) (index!3195 lt!56591))))))

(declare-fun e!72511 () Bool)

(assert (=> d!31733 e!72511))

(declare-fun res!55080 () Bool)

(assert (=> d!31733 (=> (not res!55080) (not e!72511))))

(assert (=> d!31733 (= res!55080 (isStrictlySorted!311 (toList!811 call!11697)))))

(assert (=> d!31733 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 call!11697) (select (arr!2081 (_keys!4341 newMap!16)) (index!3195 lt!56591))) lt!57548)))

(declare-fun b!111550 () Bool)

(assert (=> b!111550 (= e!72511 (containsKey!162 (toList!811 call!11697) (select (arr!2081 (_keys!4341 newMap!16)) (index!3195 lt!56591))))))

(assert (= (and d!31733 res!55080) b!111550))

(assert (=> d!31733 m!124439))

(assert (=> d!31733 m!124663))

(assert (=> d!31733 m!124663))

(assert (=> d!31733 m!124665))

(assert (=> d!31733 m!124439))

(declare-fun m!127215 () Bool)

(assert (=> d!31733 m!127215))

(declare-fun m!127217 () Bool)

(assert (=> d!31733 m!127217))

(assert (=> b!111550 m!124439))

(assert (=> b!111550 m!124659))

(assert (=> b!110090 d!31733))

(assert (=> b!110090 d!31637))

(assert (=> b!110090 d!31639))

(declare-fun d!31735 () Bool)

(declare-fun e!72512 () Bool)

(assert (=> d!31735 e!72512))

(declare-fun res!55081 () Bool)

(assert (=> d!31735 (=> res!55081 e!72512)))

(declare-fun lt!57549 () Bool)

(assert (=> d!31735 (= res!55081 (not lt!57549))))

(declare-fun lt!57550 () Bool)

(assert (=> d!31735 (= lt!57549 lt!57550)))

(declare-fun lt!57552 () Unit!3403)

(declare-fun e!72513 () Unit!3403)

(assert (=> d!31735 (= lt!57552 e!72513)))

(declare-fun c!19905 () Bool)

(assert (=> d!31735 (= c!19905 lt!57550)))

(assert (=> d!31735 (= lt!57550 (containsKey!162 (toList!811 lt!56798) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> d!31735 (= (contains!838 lt!56798 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) lt!57549)))

(declare-fun b!111551 () Bool)

(declare-fun lt!57551 () Unit!3403)

(assert (=> b!111551 (= e!72513 lt!57551)))

(assert (=> b!111551 (= lt!57551 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 lt!56798) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!111551 (isDefined!111 (getValueByKey!158 (toList!811 lt!56798) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!111552 () Bool)

(declare-fun Unit!3472 () Unit!3403)

(assert (=> b!111552 (= e!72513 Unit!3472)))

(declare-fun b!111553 () Bool)

(assert (=> b!111553 (= e!72512 (isDefined!111 (getValueByKey!158 (toList!811 lt!56798) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(assert (= (and d!31735 c!19905) b!111551))

(assert (= (and d!31735 (not c!19905)) b!111552))

(assert (= (and d!31735 (not res!55081)) b!111553))

(assert (=> d!31735 m!124865))

(declare-fun m!127219 () Bool)

(assert (=> d!31735 m!127219))

(assert (=> b!111551 m!124865))

(declare-fun m!127221 () Bool)

(assert (=> b!111551 m!127221))

(assert (=> b!111551 m!124865))

(assert (=> b!111551 m!126541))

(assert (=> b!111551 m!126541))

(declare-fun m!127223 () Bool)

(assert (=> b!111551 m!127223))

(assert (=> b!111553 m!124865))

(assert (=> b!111553 m!126541))

(assert (=> b!111553 m!126541))

(assert (=> b!111553 m!127223))

(assert (=> b!110249 d!31735))

(declare-fun d!31737 () Bool)

(declare-fun e!72514 () Bool)

(assert (=> d!31737 e!72514))

(declare-fun res!55082 () Bool)

(assert (=> d!31737 (=> res!55082 e!72514)))

(declare-fun lt!57553 () Bool)

(assert (=> d!31737 (= res!55082 (not lt!57553))))

(declare-fun lt!57554 () Bool)

(assert (=> d!31737 (= lt!57553 lt!57554)))

(declare-fun lt!57556 () Unit!3403)

(declare-fun e!72515 () Unit!3403)

(assert (=> d!31737 (= lt!57556 e!72515)))

(declare-fun c!19906 () Bool)

(assert (=> d!31737 (= c!19906 lt!57554)))

(assert (=> d!31737 (= lt!57554 (containsKey!162 (toList!811 lt!56824) (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!31737 (= (contains!838 lt!56824 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)) lt!57553)))

(declare-fun b!111554 () Bool)

(declare-fun lt!57555 () Unit!3403)

(assert (=> b!111554 (= e!72515 lt!57555)))

(assert (=> b!111554 (= lt!57555 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 lt!56824) (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!111554 (isDefined!111 (getValueByKey!158 (toList!811 lt!56824) (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!111555 () Bool)

(declare-fun Unit!3473 () Unit!3403)

(assert (=> b!111555 (= e!72515 Unit!3473)))

(declare-fun b!111556 () Bool)

(assert (=> b!111556 (= e!72514 (isDefined!111 (getValueByKey!158 (toList!811 lt!56824) (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!31737 c!19906) b!111554))

(assert (= (and d!31737 (not c!19906)) b!111555))

(assert (= (and d!31737 (not res!55082)) b!111556))

(assert (=> d!31737 m!124693))

(declare-fun m!127225 () Bool)

(assert (=> d!31737 m!127225))

(assert (=> b!111554 m!124693))

(declare-fun m!127227 () Bool)

(assert (=> b!111554 m!127227))

(assert (=> b!111554 m!124693))

(declare-fun m!127229 () Bool)

(assert (=> b!111554 m!127229))

(assert (=> b!111554 m!127229))

(declare-fun m!127231 () Bool)

(assert (=> b!111554 m!127231))

(assert (=> b!111556 m!124693))

(assert (=> b!111556 m!127229))

(assert (=> b!111556 m!127229))

(assert (=> b!111556 m!127231))

(assert (=> b!110267 d!31737))

(declare-fun d!31739 () Bool)

(declare-fun lt!57557 () Bool)

(assert (=> d!31739 (= lt!57557 (select (content!113 (t!5767 (toList!811 lt!56639))) lt!56457))))

(declare-fun e!72517 () Bool)

(assert (=> d!31739 (= lt!57557 e!72517)))

(declare-fun res!55083 () Bool)

(assert (=> d!31739 (=> (not res!55083) (not e!72517))))

(assert (=> d!31739 (= res!55083 ((_ is Cons!1626) (t!5767 (toList!811 lt!56639))))))

(assert (=> d!31739 (= (contains!839 (t!5767 (toList!811 lt!56639)) lt!56457) lt!57557)))

(declare-fun b!111557 () Bool)

(declare-fun e!72516 () Bool)

(assert (=> b!111557 (= e!72517 e!72516)))

(declare-fun res!55084 () Bool)

(assert (=> b!111557 (=> res!55084 e!72516)))

(assert (=> b!111557 (= res!55084 (= (h!2225 (t!5767 (toList!811 lt!56639))) lt!56457))))

(declare-fun b!111558 () Bool)

(assert (=> b!111558 (= e!72516 (contains!839 (t!5767 (t!5767 (toList!811 lt!56639))) lt!56457))))

(assert (= (and d!31739 res!55083) b!111557))

(assert (= (and b!111557 (not res!55084)) b!111558))

(assert (=> d!31739 m!126821))

(declare-fun m!127233 () Bool)

(assert (=> d!31739 m!127233))

(declare-fun m!127235 () Bool)

(assert (=> b!111558 m!127235))

(assert (=> b!110495 d!31739))

(declare-fun b!111559 () Bool)

(declare-fun e!72521 () Bool)

(declare-fun e!72520 () Bool)

(assert (=> b!111559 (= e!72521 e!72520)))

(declare-fun res!55085 () Bool)

(assert (=> b!111559 (=> (not res!55085) (not e!72520))))

(declare-fun e!72519 () Bool)

(assert (=> b!111559 (= res!55085 (not e!72519))))

(declare-fun res!55086 () Bool)

(assert (=> b!111559 (=> (not res!55086) (not e!72519))))

(assert (=> b!111559 (= res!55086 (validKeyInArray!0 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!111560 () Bool)

(declare-fun e!72518 () Bool)

(declare-fun call!11914 () Bool)

(assert (=> b!111560 (= e!72518 call!11914)))

(declare-fun b!111561 () Bool)

(assert (=> b!111561 (= e!72520 e!72518)))

(declare-fun c!19907 () Bool)

(assert (=> b!111561 (= c!19907 (validKeyInArray!0 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun bm!11911 () Bool)

(assert (=> bm!11911 (= call!11914 (arrayNoDuplicates!0 (_keys!4341 (v!2930 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!19907 (Cons!1627 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) #b00000000000000000000000000000000) Nil!1628) Nil!1628)))))

(declare-fun b!111562 () Bool)

(assert (=> b!111562 (= e!72518 call!11914)))

(declare-fun b!111563 () Bool)

(assert (=> b!111563 (= e!72519 (contains!840 Nil!1628 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun d!31741 () Bool)

(declare-fun res!55087 () Bool)

(assert (=> d!31741 (=> res!55087 e!72521)))

(assert (=> d!31741 (= res!55087 (bvsge #b00000000000000000000000000000000 (size!2338 (_keys!4341 (v!2930 (underlying!370 thiss!992))))))))

(assert (=> d!31741 (= (arrayNoDuplicates!0 (_keys!4341 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000000000 Nil!1628) e!72521)))

(assert (= (and d!31741 (not res!55087)) b!111559))

(assert (= (and b!111559 res!55086) b!111563))

(assert (= (and b!111559 res!55085) b!111561))

(assert (= (and b!111561 c!19907) b!111560))

(assert (= (and b!111561 (not c!19907)) b!111562))

(assert (= (or b!111560 b!111562) bm!11911))

(assert (=> b!111559 m!125583))

(assert (=> b!111559 m!125583))

(assert (=> b!111559 m!125585))

(assert (=> b!111561 m!125583))

(assert (=> b!111561 m!125583))

(assert (=> b!111561 m!125585))

(assert (=> bm!11911 m!125583))

(declare-fun m!127237 () Bool)

(assert (=> bm!11911 m!127237))

(assert (=> b!111563 m!125583))

(assert (=> b!111563 m!125583))

(declare-fun m!127239 () Bool)

(assert (=> b!111563 m!127239))

(assert (=> b!110240 d!31741))

(declare-fun d!31743 () Bool)

(declare-fun e!72522 () Bool)

(assert (=> d!31743 e!72522))

(declare-fun res!55088 () Bool)

(assert (=> d!31743 (=> res!55088 e!72522)))

(declare-fun lt!57558 () Bool)

(assert (=> d!31743 (= res!55088 (not lt!57558))))

(declare-fun lt!57559 () Bool)

(assert (=> d!31743 (= lt!57558 lt!57559)))

(declare-fun lt!57561 () Unit!3403)

(declare-fun e!72523 () Unit!3403)

(assert (=> d!31743 (= lt!57561 e!72523)))

(declare-fun c!19908 () Bool)

(assert (=> d!31743 (= c!19908 lt!57559)))

(assert (=> d!31743 (= lt!57559 (containsKey!162 (toList!811 (getCurrentListMap!496 (_keys!4341 newMap!16) lt!56569 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16))) (select (arr!2081 (_keys!4341 newMap!16)) (index!3195 lt!56591))))))

(assert (=> d!31743 (= (contains!838 (getCurrentListMap!496 (_keys!4341 newMap!16) lt!56569 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) (select (arr!2081 (_keys!4341 newMap!16)) (index!3195 lt!56591))) lt!57558)))

(declare-fun b!111564 () Bool)

(declare-fun lt!57560 () Unit!3403)

(assert (=> b!111564 (= e!72523 lt!57560)))

(assert (=> b!111564 (= lt!57560 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 (getCurrentListMap!496 (_keys!4341 newMap!16) lt!56569 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16))) (select (arr!2081 (_keys!4341 newMap!16)) (index!3195 lt!56591))))))

(assert (=> b!111564 (isDefined!111 (getValueByKey!158 (toList!811 (getCurrentListMap!496 (_keys!4341 newMap!16) lt!56569 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16))) (select (arr!2081 (_keys!4341 newMap!16)) (index!3195 lt!56591))))))

(declare-fun b!111565 () Bool)

(declare-fun Unit!3474 () Unit!3403)

(assert (=> b!111565 (= e!72523 Unit!3474)))

(declare-fun b!111566 () Bool)

(assert (=> b!111566 (= e!72522 (isDefined!111 (getValueByKey!158 (toList!811 (getCurrentListMap!496 (_keys!4341 newMap!16) lt!56569 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16))) (select (arr!2081 (_keys!4341 newMap!16)) (index!3195 lt!56591)))))))

(assert (= (and d!31743 c!19908) b!111564))

(assert (= (and d!31743 (not c!19908)) b!111565))

(assert (= (and d!31743 (not res!55088)) b!111566))

(assert (=> d!31743 m!124439))

(declare-fun m!127241 () Bool)

(assert (=> d!31743 m!127241))

(assert (=> b!111564 m!124439))

(declare-fun m!127243 () Bool)

(assert (=> b!111564 m!127243))

(assert (=> b!111564 m!124439))

(declare-fun m!127245 () Bool)

(assert (=> b!111564 m!127245))

(assert (=> b!111564 m!127245))

(declare-fun m!127247 () Bool)

(assert (=> b!111564 m!127247))

(assert (=> b!111566 m!124439))

(assert (=> b!111566 m!127245))

(assert (=> b!111566 m!127245))

(assert (=> b!111566 m!127247))

(assert (=> b!110095 d!31743))

(declare-fun b!111567 () Bool)

(declare-fun c!19910 () Bool)

(assert (=> b!111567 (= c!19910 (and (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!72527 () ListLongMap!1591)

(declare-fun e!72532 () ListLongMap!1591)

(assert (=> b!111567 (= e!72527 e!72532)))

(declare-fun bm!11912 () Bool)

(declare-fun call!11915 () ListLongMap!1591)

(declare-fun call!11918 () ListLongMap!1591)

(assert (=> bm!11912 (= call!11915 call!11918)))

(declare-fun b!111568 () Bool)

(declare-fun e!72530 () Bool)

(declare-fun e!72524 () Bool)

(assert (=> b!111568 (= e!72530 e!72524)))

(declare-fun res!55091 () Bool)

(assert (=> b!111568 (=> (not res!55091) (not e!72524))))

(declare-fun lt!57576 () ListLongMap!1591)

(assert (=> b!111568 (= res!55091 (contains!838 lt!57576 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!111568 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))))))

(declare-fun b!111569 () Bool)

(declare-fun e!72525 () Bool)

(declare-fun e!72536 () Bool)

(assert (=> b!111569 (= e!72525 e!72536)))

(declare-fun res!55089 () Bool)

(declare-fun call!11921 () Bool)

(assert (=> b!111569 (= res!55089 call!11921)))

(assert (=> b!111569 (=> (not res!55089) (not e!72536))))

(declare-fun b!111570 () Bool)

(declare-fun e!72534 () ListLongMap!1591)

(assert (=> b!111570 (= e!72534 e!72527)))

(declare-fun c!19914 () Bool)

(assert (=> b!111570 (= c!19914 (and (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!111571 () Bool)

(declare-fun e!72535 () Unit!3403)

(declare-fun Unit!3475 () Unit!3403)

(assert (=> b!111571 (= e!72535 Unit!3475)))

(declare-fun b!111572 () Bool)

(declare-fun e!72531 () Bool)

(declare-fun call!11916 () Bool)

(assert (=> b!111572 (= e!72531 (not call!11916))))

(declare-fun bm!11913 () Bool)

(assert (=> bm!11913 (= call!11918 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) lt!56569 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun b!111573 () Bool)

(assert (=> b!111573 (= e!72536 (= (apply!100 lt!57576 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2498 newMap!16)))))

(declare-fun b!111574 () Bool)

(declare-fun call!11920 () ListLongMap!1591)

(assert (=> b!111574 (= e!72534 (+!150 call!11920 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16))))))

(declare-fun b!111575 () Bool)

(declare-fun lt!57577 () Unit!3403)

(assert (=> b!111575 (= e!72535 lt!57577)))

(declare-fun lt!57572 () ListLongMap!1591)

(assert (=> b!111575 (= lt!57572 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) lt!56569 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!57571 () (_ BitVec 64))

(assert (=> b!111575 (= lt!57571 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57574 () (_ BitVec 64))

(assert (=> b!111575 (= lt!57574 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!57579 () Unit!3403)

(assert (=> b!111575 (= lt!57579 (addStillContains!76 lt!57572 lt!57571 (zeroValue!2498 newMap!16) lt!57574))))

(assert (=> b!111575 (contains!838 (+!150 lt!57572 (tuple2!2441 lt!57571 (zeroValue!2498 newMap!16))) lt!57574)))

(declare-fun lt!57563 () Unit!3403)

(assert (=> b!111575 (= lt!57563 lt!57579)))

(declare-fun lt!57575 () ListLongMap!1591)

(assert (=> b!111575 (= lt!57575 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) lt!56569 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!57566 () (_ BitVec 64))

(assert (=> b!111575 (= lt!57566 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57573 () (_ BitVec 64))

(assert (=> b!111575 (= lt!57573 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!57581 () Unit!3403)

(assert (=> b!111575 (= lt!57581 (addApplyDifferent!76 lt!57575 lt!57566 (minValue!2498 newMap!16) lt!57573))))

(assert (=> b!111575 (= (apply!100 (+!150 lt!57575 (tuple2!2441 lt!57566 (minValue!2498 newMap!16))) lt!57573) (apply!100 lt!57575 lt!57573))))

(declare-fun lt!57565 () Unit!3403)

(assert (=> b!111575 (= lt!57565 lt!57581)))

(declare-fun lt!57569 () ListLongMap!1591)

(assert (=> b!111575 (= lt!57569 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) lt!56569 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!57562 () (_ BitVec 64))

(assert (=> b!111575 (= lt!57562 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57580 () (_ BitVec 64))

(assert (=> b!111575 (= lt!57580 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!57578 () Unit!3403)

(assert (=> b!111575 (= lt!57578 (addApplyDifferent!76 lt!57569 lt!57562 (zeroValue!2498 newMap!16) lt!57580))))

(assert (=> b!111575 (= (apply!100 (+!150 lt!57569 (tuple2!2441 lt!57562 (zeroValue!2498 newMap!16))) lt!57580) (apply!100 lt!57569 lt!57580))))

(declare-fun lt!57568 () Unit!3403)

(assert (=> b!111575 (= lt!57568 lt!57578)))

(declare-fun lt!57582 () ListLongMap!1591)

(assert (=> b!111575 (= lt!57582 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) lt!56569 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!57567 () (_ BitVec 64))

(assert (=> b!111575 (= lt!57567 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57570 () (_ BitVec 64))

(assert (=> b!111575 (= lt!57570 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!111575 (= lt!57577 (addApplyDifferent!76 lt!57582 lt!57567 (minValue!2498 newMap!16) lt!57570))))

(assert (=> b!111575 (= (apply!100 (+!150 lt!57582 (tuple2!2441 lt!57567 (minValue!2498 newMap!16))) lt!57570) (apply!100 lt!57582 lt!57570))))

(declare-fun b!111576 () Bool)

(declare-fun res!55093 () Bool)

(declare-fun e!72533 () Bool)

(assert (=> b!111576 (=> (not res!55093) (not e!72533))))

(assert (=> b!111576 (= res!55093 e!72525)))

(declare-fun c!19913 () Bool)

(assert (=> b!111576 (= c!19913 (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!111577 () Bool)

(declare-fun e!72526 () Bool)

(assert (=> b!111577 (= e!72526 (validKeyInArray!0 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!111578 () Bool)

(declare-fun e!72529 () Bool)

(assert (=> b!111578 (= e!72529 (= (apply!100 lt!57576 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2498 newMap!16)))))

(declare-fun bm!11914 () Bool)

(assert (=> bm!11914 (= call!11916 (contains!838 lt!57576 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!111579 () Bool)

(assert (=> b!111579 (= e!72531 e!72529)))

(declare-fun res!55090 () Bool)

(assert (=> b!111579 (= res!55090 call!11916)))

(assert (=> b!111579 (=> (not res!55090) (not e!72529))))

(declare-fun bm!11915 () Bool)

(declare-fun call!11917 () ListLongMap!1591)

(declare-fun c!19909 () Bool)

(assert (=> bm!11915 (= call!11920 (+!150 (ite c!19909 call!11918 (ite c!19914 call!11915 call!11917)) (ite (or c!19909 c!19914) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 newMap!16)) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16)))))))

(declare-fun b!111580 () Bool)

(declare-fun call!11919 () ListLongMap!1591)

(assert (=> b!111580 (= e!72527 call!11919)))

(declare-fun d!31745 () Bool)

(assert (=> d!31745 e!72533))

(declare-fun res!55096 () Bool)

(assert (=> d!31745 (=> (not res!55096) (not e!72533))))

(assert (=> d!31745 (= res!55096 (or (bvsge #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))))))))

(declare-fun lt!57583 () ListLongMap!1591)

(assert (=> d!31745 (= lt!57576 lt!57583)))

(declare-fun lt!57564 () Unit!3403)

(assert (=> d!31745 (= lt!57564 e!72535)))

(declare-fun c!19911 () Bool)

(declare-fun e!72528 () Bool)

(assert (=> d!31745 (= c!19911 e!72528)))

(declare-fun res!55092 () Bool)

(assert (=> d!31745 (=> (not res!55092) (not e!72528))))

(assert (=> d!31745 (= res!55092 (bvslt #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))))))

(assert (=> d!31745 (= lt!57583 e!72534)))

(assert (=> d!31745 (= c!19909 (and (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!31745 (validMask!0 (mask!6795 newMap!16))))

(assert (=> d!31745 (= (getCurrentListMap!496 (_keys!4341 newMap!16) lt!56569 (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) lt!57576)))

(declare-fun b!111581 () Bool)

(assert (=> b!111581 (= e!72532 call!11919)))

(declare-fun b!111582 () Bool)

(assert (=> b!111582 (= e!72524 (= (apply!100 lt!57576 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)) (get!1347 (select (arr!2082 lt!56569) #b00000000000000000000000000000000) (dynLambda!390 (defaultEntry!2627 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!111582 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2339 lt!56569)))))

(assert (=> b!111582 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))))))

(declare-fun b!111583 () Bool)

(assert (=> b!111583 (= e!72532 call!11917)))

(declare-fun bm!11916 () Bool)

(assert (=> bm!11916 (= call!11917 call!11915)))

(declare-fun b!111584 () Bool)

(declare-fun res!55097 () Bool)

(assert (=> b!111584 (=> (not res!55097) (not e!72533))))

(assert (=> b!111584 (= res!55097 e!72530)))

(declare-fun res!55094 () Bool)

(assert (=> b!111584 (=> res!55094 e!72530)))

(assert (=> b!111584 (= res!55094 (not e!72526))))

(declare-fun res!55095 () Bool)

(assert (=> b!111584 (=> (not res!55095) (not e!72526))))

(assert (=> b!111584 (= res!55095 (bvslt #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))))))

(declare-fun bm!11917 () Bool)

(assert (=> bm!11917 (= call!11919 call!11920)))

(declare-fun b!111585 () Bool)

(assert (=> b!111585 (= e!72528 (validKeyInArray!0 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!111586 () Bool)

(assert (=> b!111586 (= e!72533 e!72531)))

(declare-fun c!19912 () Bool)

(assert (=> b!111586 (= c!19912 (not (= (bvand (extraKeys!2424 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!111587 () Bool)

(assert (=> b!111587 (= e!72525 (not call!11921))))

(declare-fun bm!11918 () Bool)

(assert (=> bm!11918 (= call!11921 (contains!838 lt!57576 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!31745 c!19909) b!111574))

(assert (= (and d!31745 (not c!19909)) b!111570))

(assert (= (and b!111570 c!19914) b!111580))

(assert (= (and b!111570 (not c!19914)) b!111567))

(assert (= (and b!111567 c!19910) b!111581))

(assert (= (and b!111567 (not c!19910)) b!111583))

(assert (= (or b!111581 b!111583) bm!11916))

(assert (= (or b!111580 bm!11916) bm!11912))

(assert (= (or b!111580 b!111581) bm!11917))

(assert (= (or b!111574 bm!11912) bm!11913))

(assert (= (or b!111574 bm!11917) bm!11915))

(assert (= (and d!31745 res!55092) b!111585))

(assert (= (and d!31745 c!19911) b!111575))

(assert (= (and d!31745 (not c!19911)) b!111571))

(assert (= (and d!31745 res!55096) b!111584))

(assert (= (and b!111584 res!55095) b!111577))

(assert (= (and b!111584 (not res!55094)) b!111568))

(assert (= (and b!111568 res!55091) b!111582))

(assert (= (and b!111584 res!55097) b!111576))

(assert (= (and b!111576 c!19913) b!111569))

(assert (= (and b!111576 (not c!19913)) b!111587))

(assert (= (and b!111569 res!55089) b!111573))

(assert (= (or b!111569 b!111587) bm!11918))

(assert (= (and b!111576 res!55093) b!111586))

(assert (= (and b!111586 c!19912) b!111579))

(assert (= (and b!111586 (not c!19912)) b!111572))

(assert (= (and b!111579 res!55090) b!111578))

(assert (= (or b!111579 b!111572) bm!11914))

(declare-fun b_lambda!4981 () Bool)

(assert (=> (not b_lambda!4981) (not b!111582)))

(assert (=> b!111582 t!5774))

(declare-fun b_and!6859 () Bool)

(assert (= b_and!6855 (and (=> t!5774 result!3537) b_and!6859)))

(assert (=> b!111582 t!5776))

(declare-fun b_and!6861 () Bool)

(assert (= b_and!6857 (and (=> t!5776 result!3539) b_and!6861)))

(declare-fun m!127249 () Bool)

(assert (=> bm!11914 m!127249))

(declare-fun m!127251 () Bool)

(assert (=> b!111578 m!127251))

(assert (=> b!111577 m!124693))

(assert (=> b!111577 m!124693))

(assert (=> b!111577 m!124695))

(assert (=> b!111568 m!124693))

(assert (=> b!111568 m!124693))

(declare-fun m!127253 () Bool)

(assert (=> b!111568 m!127253))

(declare-fun m!127255 () Bool)

(assert (=> b!111575 m!127255))

(declare-fun m!127257 () Bool)

(assert (=> b!111575 m!127257))

(declare-fun m!127259 () Bool)

(assert (=> b!111575 m!127259))

(assert (=> b!111575 m!127255))

(declare-fun m!127261 () Bool)

(assert (=> b!111575 m!127261))

(declare-fun m!127263 () Bool)

(assert (=> b!111575 m!127263))

(assert (=> b!111575 m!127263))

(declare-fun m!127265 () Bool)

(assert (=> b!111575 m!127265))

(declare-fun m!127267 () Bool)

(assert (=> b!111575 m!127267))

(assert (=> b!111575 m!124693))

(declare-fun m!127269 () Bool)

(assert (=> b!111575 m!127269))

(declare-fun m!127271 () Bool)

(assert (=> b!111575 m!127271))

(declare-fun m!127273 () Bool)

(assert (=> b!111575 m!127273))

(declare-fun m!127275 () Bool)

(assert (=> b!111575 m!127275))

(assert (=> b!111575 m!127271))

(declare-fun m!127277 () Bool)

(assert (=> b!111575 m!127277))

(declare-fun m!127279 () Bool)

(assert (=> b!111575 m!127279))

(assert (=> b!111575 m!127261))

(declare-fun m!127281 () Bool)

(assert (=> b!111575 m!127281))

(declare-fun m!127283 () Bool)

(assert (=> b!111575 m!127283))

(declare-fun m!127285 () Bool)

(assert (=> b!111575 m!127285))

(assert (=> d!31745 m!124669))

(declare-fun m!127287 () Bool)

(assert (=> b!111582 m!127287))

(assert (=> b!111582 m!124733))

(assert (=> b!111582 m!127287))

(assert (=> b!111582 m!124733))

(declare-fun m!127289 () Bool)

(assert (=> b!111582 m!127289))

(assert (=> b!111582 m!124693))

(declare-fun m!127291 () Bool)

(assert (=> b!111582 m!127291))

(assert (=> b!111582 m!124693))

(assert (=> bm!11913 m!127283))

(assert (=> b!111585 m!124693))

(assert (=> b!111585 m!124693))

(assert (=> b!111585 m!124695))

(declare-fun m!127293 () Bool)

(assert (=> bm!11915 m!127293))

(declare-fun m!127295 () Bool)

(assert (=> b!111574 m!127295))

(declare-fun m!127297 () Bool)

(assert (=> bm!11918 m!127297))

(declare-fun m!127299 () Bool)

(assert (=> b!111573 m!127299))

(assert (=> b!110095 d!31745))

(assert (=> b!110237 d!31237))

(assert (=> b!110237 d!31239))

(declare-fun d!31747 () Bool)

(declare-fun res!55098 () Bool)

(declare-fun e!72537 () Bool)

(assert (=> d!31747 (=> res!55098 e!72537)))

(assert (=> d!31747 (= res!55098 (and ((_ is Cons!1626) (toList!811 lt!56635)) (= (_1!1231 (h!2225 (toList!811 lt!56635))) (_1!1231 lt!56454))))))

(assert (=> d!31747 (= (containsKey!162 (toList!811 lt!56635) (_1!1231 lt!56454)) e!72537)))

(declare-fun b!111588 () Bool)

(declare-fun e!72538 () Bool)

(assert (=> b!111588 (= e!72537 e!72538)))

(declare-fun res!55099 () Bool)

(assert (=> b!111588 (=> (not res!55099) (not e!72538))))

(assert (=> b!111588 (= res!55099 (and (or (not ((_ is Cons!1626) (toList!811 lt!56635))) (bvsle (_1!1231 (h!2225 (toList!811 lt!56635))) (_1!1231 lt!56454))) ((_ is Cons!1626) (toList!811 lt!56635)) (bvslt (_1!1231 (h!2225 (toList!811 lt!56635))) (_1!1231 lt!56454))))))

(declare-fun b!111589 () Bool)

(assert (=> b!111589 (= e!72538 (containsKey!162 (t!5767 (toList!811 lt!56635)) (_1!1231 lt!56454)))))

(assert (= (and d!31747 (not res!55098)) b!111588))

(assert (= (and b!111588 res!55099) b!111589))

(declare-fun m!127301 () Bool)

(assert (=> b!111589 m!127301))

(assert (=> d!30885 d!31747))

(declare-fun d!31749 () Bool)

(assert (=> d!31749 (= (apply!100 lt!56824 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)) (get!1350 (getValueByKey!158 (toList!811 lt!56824) (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!4600 () Bool)

(assert (= bs!4600 d!31749))

(assert (=> bs!4600 m!124693))

(assert (=> bs!4600 m!127229))

(assert (=> bs!4600 m!127229))

(declare-fun m!127303 () Bool)

(assert (=> bs!4600 m!127303))

(assert (=> b!110281 d!31749))

(declare-fun d!31751 () Bool)

(declare-fun c!19915 () Bool)

(assert (=> d!31751 (= c!19915 ((_ is ValueCellFull!1005) (select (arr!2082 (_values!2610 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!72539 () V!3243)

(assert (=> d!31751 (= (get!1347 (select (arr!2082 (_values!2610 newMap!16)) #b00000000000000000000000000000000) (dynLambda!390 (defaultEntry!2627 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!72539)))

(declare-fun b!111590 () Bool)

(assert (=> b!111590 (= e!72539 (get!1348 (select (arr!2082 (_values!2610 newMap!16)) #b00000000000000000000000000000000) (dynLambda!390 (defaultEntry!2627 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!111591 () Bool)

(assert (=> b!111591 (= e!72539 (get!1349 (select (arr!2082 (_values!2610 newMap!16)) #b00000000000000000000000000000000) (dynLambda!390 (defaultEntry!2627 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!31751 c!19915) b!111590))

(assert (= (and d!31751 (not c!19915)) b!111591))

(assert (=> b!111590 m!124953))

(assert (=> b!111590 m!124733))

(declare-fun m!127305 () Bool)

(assert (=> b!111590 m!127305))

(assert (=> b!111591 m!124953))

(assert (=> b!111591 m!124733))

(declare-fun m!127307 () Bool)

(assert (=> b!111591 m!127307))

(assert (=> b!110281 d!31751))

(assert (=> b!110476 d!30997))

(assert (=> d!30865 d!30867))

(assert (=> d!30865 d!30869))

(declare-fun d!31753 () Bool)

(assert (=> d!31753 (isDefined!111 (getValueByKey!158 (toList!811 lt!56461) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(assert (=> d!31753 true))

(declare-fun _$12!359 () Unit!3403)

(assert (=> d!31753 (= (choose!684 (toList!811 lt!56461) (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355)) _$12!359)))

(declare-fun bs!4601 () Bool)

(assert (= bs!4601 d!31753))

(assert (=> bs!4601 m!124315))

(assert (=> bs!4601 m!124427))

(assert (=> bs!4601 m!124427))

(assert (=> bs!4601 m!124429))

(assert (=> d!30865 d!31753))

(declare-fun d!31755 () Bool)

(declare-fun res!55100 () Bool)

(declare-fun e!72540 () Bool)

(assert (=> d!31755 (=> res!55100 e!72540)))

(assert (=> d!31755 (= res!55100 (or ((_ is Nil!1627) (toList!811 lt!56461)) ((_ is Nil!1627) (t!5767 (toList!811 lt!56461)))))))

(assert (=> d!31755 (= (isStrictlySorted!311 (toList!811 lt!56461)) e!72540)))

(declare-fun b!111592 () Bool)

(declare-fun e!72541 () Bool)

(assert (=> b!111592 (= e!72540 e!72541)))

(declare-fun res!55101 () Bool)

(assert (=> b!111592 (=> (not res!55101) (not e!72541))))

(assert (=> b!111592 (= res!55101 (bvslt (_1!1231 (h!2225 (toList!811 lt!56461))) (_1!1231 (h!2225 (t!5767 (toList!811 lt!56461))))))))

(declare-fun b!111593 () Bool)

(assert (=> b!111593 (= e!72541 (isStrictlySorted!311 (t!5767 (toList!811 lt!56461))))))

(assert (= (and d!31755 (not res!55100)) b!111592))

(assert (= (and b!111592 res!55101) b!111593))

(declare-fun m!127309 () Bool)

(assert (=> b!111593 m!127309))

(assert (=> d!30865 d!31755))

(declare-fun d!31757 () Bool)

(declare-fun e!72542 () Bool)

(assert (=> d!31757 e!72542))

(declare-fun res!55102 () Bool)

(assert (=> d!31757 (=> (not res!55102) (not e!72542))))

(declare-fun lt!57586 () ListLongMap!1591)

(assert (=> d!31757 (= res!55102 (contains!838 lt!57586 (_1!1231 (ite (or c!19560 c!19565) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!19438 c!19444) lt!56458 (zeroValue!2498 newMap!16))) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16))))))))

(declare-fun lt!57585 () List!1630)

(assert (=> d!31757 (= lt!57586 (ListLongMap!1592 lt!57585))))

(declare-fun lt!57587 () Unit!3403)

(declare-fun lt!57584 () Unit!3403)

(assert (=> d!31757 (= lt!57587 lt!57584)))

(assert (=> d!31757 (= (getValueByKey!158 lt!57585 (_1!1231 (ite (or c!19560 c!19565) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!19438 c!19444) lt!56458 (zeroValue!2498 newMap!16))) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16))))) (Some!163 (_2!1231 (ite (or c!19560 c!19565) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!19438 c!19444) lt!56458 (zeroValue!2498 newMap!16))) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16))))))))

(assert (=> d!31757 (= lt!57584 (lemmaContainsTupThenGetReturnValue!74 lt!57585 (_1!1231 (ite (or c!19560 c!19565) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!19438 c!19444) lt!56458 (zeroValue!2498 newMap!16))) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16)))) (_2!1231 (ite (or c!19560 c!19565) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!19438 c!19444) lt!56458 (zeroValue!2498 newMap!16))) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16))))))))

(assert (=> d!31757 (= lt!57585 (insertStrictlySorted!77 (toList!811 (ite c!19560 call!11782 (ite c!19565 call!11779 call!11781))) (_1!1231 (ite (or c!19560 c!19565) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!19438 c!19444) lt!56458 (zeroValue!2498 newMap!16))) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16)))) (_2!1231 (ite (or c!19560 c!19565) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!19438 c!19444) lt!56458 (zeroValue!2498 newMap!16))) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16))))))))

(assert (=> d!31757 (= (+!150 (ite c!19560 call!11782 (ite c!19565 call!11779 call!11781)) (ite (or c!19560 c!19565) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!19438 c!19444) lt!56458 (zeroValue!2498 newMap!16))) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16)))) lt!57586)))

(declare-fun b!111594 () Bool)

(declare-fun res!55103 () Bool)

(assert (=> b!111594 (=> (not res!55103) (not e!72542))))

(assert (=> b!111594 (= res!55103 (= (getValueByKey!158 (toList!811 lt!57586) (_1!1231 (ite (or c!19560 c!19565) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!19438 c!19444) lt!56458 (zeroValue!2498 newMap!16))) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16))))) (Some!163 (_2!1231 (ite (or c!19560 c!19565) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!19438 c!19444) lt!56458 (zeroValue!2498 newMap!16))) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16)))))))))

(declare-fun b!111595 () Bool)

(assert (=> b!111595 (= e!72542 (contains!839 (toList!811 lt!57586) (ite (or c!19560 c!19565) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!19438 c!19444) lt!56458 (zeroValue!2498 newMap!16))) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 newMap!16)))))))

(assert (= (and d!31757 res!55102) b!111594))

(assert (= (and b!111594 res!55103) b!111595))

(declare-fun m!127311 () Bool)

(assert (=> d!31757 m!127311))

(declare-fun m!127313 () Bool)

(assert (=> d!31757 m!127313))

(declare-fun m!127315 () Bool)

(assert (=> d!31757 m!127315))

(declare-fun m!127317 () Bool)

(assert (=> d!31757 m!127317))

(declare-fun m!127319 () Bool)

(assert (=> b!111594 m!127319))

(declare-fun m!127321 () Bool)

(assert (=> b!111595 m!127321))

(assert (=> bm!11779 d!31757))

(declare-fun d!31759 () Bool)

(assert (=> d!31759 (= (apply!100 lt!56823 lt!56821) (get!1350 (getValueByKey!158 (toList!811 lt!56823) lt!56821)))))

(declare-fun bs!4602 () Bool)

(assert (= bs!4602 d!31759))

(declare-fun m!127323 () Bool)

(assert (=> bs!4602 m!127323))

(assert (=> bs!4602 m!127323))

(declare-fun m!127325 () Bool)

(assert (=> bs!4602 m!127325))

(assert (=> b!110274 d!31759))

(declare-fun d!31761 () Bool)

(assert (=> d!31761 (= (apply!100 (+!150 lt!56817 (tuple2!2441 lt!56810 (zeroValue!2498 newMap!16))) lt!56828) (apply!100 lt!56817 lt!56828))))

(declare-fun lt!57588 () Unit!3403)

(assert (=> d!31761 (= lt!57588 (choose!691 lt!56817 lt!56810 (zeroValue!2498 newMap!16) lt!56828))))

(declare-fun e!72543 () Bool)

(assert (=> d!31761 e!72543))

(declare-fun res!55104 () Bool)

(assert (=> d!31761 (=> (not res!55104) (not e!72543))))

(assert (=> d!31761 (= res!55104 (contains!838 lt!56817 lt!56828))))

(assert (=> d!31761 (= (addApplyDifferent!76 lt!56817 lt!56810 (zeroValue!2498 newMap!16) lt!56828) lt!57588)))

(declare-fun b!111596 () Bool)

(assert (=> b!111596 (= e!72543 (not (= lt!56828 lt!56810)))))

(assert (= (and d!31761 res!55104) b!111596))

(declare-fun m!127327 () Bool)

(assert (=> d!31761 m!127327))

(declare-fun m!127329 () Bool)

(assert (=> d!31761 m!127329))

(assert (=> d!31761 m!124921))

(assert (=> d!31761 m!124921))

(assert (=> d!31761 m!124923))

(assert (=> d!31761 m!124939))

(assert (=> b!110274 d!31761))

(declare-fun d!31763 () Bool)

(assert (=> d!31763 (= (apply!100 (+!150 lt!56830 (tuple2!2441 lt!56815 (minValue!2498 newMap!16))) lt!56818) (apply!100 lt!56830 lt!56818))))

(declare-fun lt!57589 () Unit!3403)

(assert (=> d!31763 (= lt!57589 (choose!691 lt!56830 lt!56815 (minValue!2498 newMap!16) lt!56818))))

(declare-fun e!72544 () Bool)

(assert (=> d!31763 e!72544))

(declare-fun res!55105 () Bool)

(assert (=> d!31763 (=> (not res!55105) (not e!72544))))

(assert (=> d!31763 (= res!55105 (contains!838 lt!56830 lt!56818))))

(assert (=> d!31763 (= (addApplyDifferent!76 lt!56830 lt!56815 (minValue!2498 newMap!16) lt!56818) lt!57589)))

(declare-fun b!111597 () Bool)

(assert (=> b!111597 (= e!72544 (not (= lt!56818 lt!56815)))))

(assert (= (and d!31763 res!55105) b!111597))

(declare-fun m!127331 () Bool)

(assert (=> d!31763 m!127331))

(declare-fun m!127333 () Bool)

(assert (=> d!31763 m!127333))

(assert (=> d!31763 m!124929))

(assert (=> d!31763 m!124929))

(assert (=> d!31763 m!124931))

(assert (=> d!31763 m!124935))

(assert (=> b!110274 d!31763))

(declare-fun d!31765 () Bool)

(assert (=> d!31765 (= (apply!100 (+!150 lt!56823 (tuple2!2441 lt!56814 (minValue!2498 newMap!16))) lt!56821) (get!1350 (getValueByKey!158 (toList!811 (+!150 lt!56823 (tuple2!2441 lt!56814 (minValue!2498 newMap!16)))) lt!56821)))))

(declare-fun bs!4603 () Bool)

(assert (= bs!4603 d!31765))

(declare-fun m!127335 () Bool)

(assert (=> bs!4603 m!127335))

(assert (=> bs!4603 m!127335))

(declare-fun m!127337 () Bool)

(assert (=> bs!4603 m!127337))

(assert (=> b!110274 d!31765))

(declare-fun d!31767 () Bool)

(assert (=> d!31767 (= (apply!100 (+!150 lt!56823 (tuple2!2441 lt!56814 (minValue!2498 newMap!16))) lt!56821) (apply!100 lt!56823 lt!56821))))

(declare-fun lt!57590 () Unit!3403)

(assert (=> d!31767 (= lt!57590 (choose!691 lt!56823 lt!56814 (minValue!2498 newMap!16) lt!56821))))

(declare-fun e!72545 () Bool)

(assert (=> d!31767 e!72545))

(declare-fun res!55106 () Bool)

(assert (=> d!31767 (=> (not res!55106) (not e!72545))))

(assert (=> d!31767 (= res!55106 (contains!838 lt!56823 lt!56821))))

(assert (=> d!31767 (= (addApplyDifferent!76 lt!56823 lt!56814 (minValue!2498 newMap!16) lt!56821) lt!57590)))

(declare-fun b!111598 () Bool)

(assert (=> b!111598 (= e!72545 (not (= lt!56821 lt!56814)))))

(assert (= (and d!31767 res!55106) b!111598))

(declare-fun m!127339 () Bool)

(assert (=> d!31767 m!127339))

(declare-fun m!127341 () Bool)

(assert (=> d!31767 m!127341))

(assert (=> d!31767 m!124927))

(assert (=> d!31767 m!124927))

(assert (=> d!31767 m!124947))

(assert (=> d!31767 m!124951))

(assert (=> b!110274 d!31767))

(declare-fun d!31769 () Bool)

(assert (=> d!31769 (= (apply!100 lt!56830 lt!56818) (get!1350 (getValueByKey!158 (toList!811 lt!56830) lt!56818)))))

(declare-fun bs!4604 () Bool)

(assert (= bs!4604 d!31769))

(declare-fun m!127343 () Bool)

(assert (=> bs!4604 m!127343))

(assert (=> bs!4604 m!127343))

(declare-fun m!127345 () Bool)

(assert (=> bs!4604 m!127345))

(assert (=> b!110274 d!31769))

(declare-fun d!31771 () Bool)

(assert (=> d!31771 (= (apply!100 (+!150 lt!56817 (tuple2!2441 lt!56810 (zeroValue!2498 newMap!16))) lt!56828) (get!1350 (getValueByKey!158 (toList!811 (+!150 lt!56817 (tuple2!2441 lt!56810 (zeroValue!2498 newMap!16)))) lt!56828)))))

(declare-fun bs!4605 () Bool)

(assert (= bs!4605 d!31771))

(declare-fun m!127347 () Bool)

(assert (=> bs!4605 m!127347))

(assert (=> bs!4605 m!127347))

(declare-fun m!127349 () Bool)

(assert (=> bs!4605 m!127349))

(assert (=> b!110274 d!31771))

(declare-fun d!31773 () Bool)

(declare-fun e!72546 () Bool)

(assert (=> d!31773 e!72546))

(declare-fun res!55107 () Bool)

(assert (=> d!31773 (=> (not res!55107) (not e!72546))))

(declare-fun lt!57593 () ListLongMap!1591)

(assert (=> d!31773 (= res!55107 (contains!838 lt!57593 (_1!1231 (tuple2!2441 lt!56810 (zeroValue!2498 newMap!16)))))))

(declare-fun lt!57592 () List!1630)

(assert (=> d!31773 (= lt!57593 (ListLongMap!1592 lt!57592))))

(declare-fun lt!57594 () Unit!3403)

(declare-fun lt!57591 () Unit!3403)

(assert (=> d!31773 (= lt!57594 lt!57591)))

(assert (=> d!31773 (= (getValueByKey!158 lt!57592 (_1!1231 (tuple2!2441 lt!56810 (zeroValue!2498 newMap!16)))) (Some!163 (_2!1231 (tuple2!2441 lt!56810 (zeroValue!2498 newMap!16)))))))

(assert (=> d!31773 (= lt!57591 (lemmaContainsTupThenGetReturnValue!74 lt!57592 (_1!1231 (tuple2!2441 lt!56810 (zeroValue!2498 newMap!16))) (_2!1231 (tuple2!2441 lt!56810 (zeroValue!2498 newMap!16)))))))

(assert (=> d!31773 (= lt!57592 (insertStrictlySorted!77 (toList!811 lt!56817) (_1!1231 (tuple2!2441 lt!56810 (zeroValue!2498 newMap!16))) (_2!1231 (tuple2!2441 lt!56810 (zeroValue!2498 newMap!16)))))))

(assert (=> d!31773 (= (+!150 lt!56817 (tuple2!2441 lt!56810 (zeroValue!2498 newMap!16))) lt!57593)))

(declare-fun b!111599 () Bool)

(declare-fun res!55108 () Bool)

(assert (=> b!111599 (=> (not res!55108) (not e!72546))))

(assert (=> b!111599 (= res!55108 (= (getValueByKey!158 (toList!811 lt!57593) (_1!1231 (tuple2!2441 lt!56810 (zeroValue!2498 newMap!16)))) (Some!163 (_2!1231 (tuple2!2441 lt!56810 (zeroValue!2498 newMap!16))))))))

(declare-fun b!111600 () Bool)

(assert (=> b!111600 (= e!72546 (contains!839 (toList!811 lt!57593) (tuple2!2441 lt!56810 (zeroValue!2498 newMap!16))))))

(assert (= (and d!31773 res!55107) b!111599))

(assert (= (and b!111599 res!55108) b!111600))

(declare-fun m!127351 () Bool)

(assert (=> d!31773 m!127351))

(declare-fun m!127353 () Bool)

(assert (=> d!31773 m!127353))

(declare-fun m!127355 () Bool)

(assert (=> d!31773 m!127355))

(declare-fun m!127357 () Bool)

(assert (=> d!31773 m!127357))

(declare-fun m!127359 () Bool)

(assert (=> b!111599 m!127359))

(declare-fun m!127361 () Bool)

(assert (=> b!111600 m!127361))

(assert (=> b!110274 d!31773))

(declare-fun d!31775 () Bool)

(assert (=> d!31775 (= (apply!100 lt!56817 lt!56828) (get!1350 (getValueByKey!158 (toList!811 lt!56817) lt!56828)))))

(declare-fun bs!4606 () Bool)

(assert (= bs!4606 d!31775))

(declare-fun m!127363 () Bool)

(assert (=> bs!4606 m!127363))

(assert (=> bs!4606 m!127363))

(declare-fun m!127365 () Bool)

(assert (=> bs!4606 m!127365))

(assert (=> b!110274 d!31775))

(declare-fun d!31777 () Bool)

(assert (=> d!31777 (contains!838 (+!150 lt!56820 (tuple2!2441 lt!56819 (zeroValue!2498 newMap!16))) lt!56822)))

(declare-fun lt!57595 () Unit!3403)

(assert (=> d!31777 (= lt!57595 (choose!692 lt!56820 lt!56819 (zeroValue!2498 newMap!16) lt!56822))))

(assert (=> d!31777 (contains!838 lt!56820 lt!56822)))

(assert (=> d!31777 (= (addStillContains!76 lt!56820 lt!56819 (zeroValue!2498 newMap!16) lt!56822) lt!57595)))

(declare-fun bs!4607 () Bool)

(assert (= bs!4607 d!31777))

(assert (=> bs!4607 m!124937))

(assert (=> bs!4607 m!124937))

(assert (=> bs!4607 m!124943))

(declare-fun m!127367 () Bool)

(assert (=> bs!4607 m!127367))

(declare-fun m!127369 () Bool)

(assert (=> bs!4607 m!127369))

(assert (=> b!110274 d!31777))

(declare-fun d!31779 () Bool)

(declare-fun e!72547 () Bool)

(assert (=> d!31779 e!72547))

(declare-fun res!55109 () Bool)

(assert (=> d!31779 (=> (not res!55109) (not e!72547))))

(declare-fun lt!57598 () ListLongMap!1591)

(assert (=> d!31779 (= res!55109 (contains!838 lt!57598 (_1!1231 (tuple2!2441 lt!56814 (minValue!2498 newMap!16)))))))

(declare-fun lt!57597 () List!1630)

(assert (=> d!31779 (= lt!57598 (ListLongMap!1592 lt!57597))))

(declare-fun lt!57599 () Unit!3403)

(declare-fun lt!57596 () Unit!3403)

(assert (=> d!31779 (= lt!57599 lt!57596)))

(assert (=> d!31779 (= (getValueByKey!158 lt!57597 (_1!1231 (tuple2!2441 lt!56814 (minValue!2498 newMap!16)))) (Some!163 (_2!1231 (tuple2!2441 lt!56814 (minValue!2498 newMap!16)))))))

(assert (=> d!31779 (= lt!57596 (lemmaContainsTupThenGetReturnValue!74 lt!57597 (_1!1231 (tuple2!2441 lt!56814 (minValue!2498 newMap!16))) (_2!1231 (tuple2!2441 lt!56814 (minValue!2498 newMap!16)))))))

(assert (=> d!31779 (= lt!57597 (insertStrictlySorted!77 (toList!811 lt!56823) (_1!1231 (tuple2!2441 lt!56814 (minValue!2498 newMap!16))) (_2!1231 (tuple2!2441 lt!56814 (minValue!2498 newMap!16)))))))

(assert (=> d!31779 (= (+!150 lt!56823 (tuple2!2441 lt!56814 (minValue!2498 newMap!16))) lt!57598)))

(declare-fun b!111601 () Bool)

(declare-fun res!55110 () Bool)

(assert (=> b!111601 (=> (not res!55110) (not e!72547))))

(assert (=> b!111601 (= res!55110 (= (getValueByKey!158 (toList!811 lt!57598) (_1!1231 (tuple2!2441 lt!56814 (minValue!2498 newMap!16)))) (Some!163 (_2!1231 (tuple2!2441 lt!56814 (minValue!2498 newMap!16))))))))

(declare-fun b!111602 () Bool)

(assert (=> b!111602 (= e!72547 (contains!839 (toList!811 lt!57598) (tuple2!2441 lt!56814 (minValue!2498 newMap!16))))))

(assert (= (and d!31779 res!55109) b!111601))

(assert (= (and b!111601 res!55110) b!111602))

(declare-fun m!127371 () Bool)

(assert (=> d!31779 m!127371))

(declare-fun m!127373 () Bool)

(assert (=> d!31779 m!127373))

(declare-fun m!127375 () Bool)

(assert (=> d!31779 m!127375))

(declare-fun m!127377 () Bool)

(assert (=> d!31779 m!127377))

(declare-fun m!127379 () Bool)

(assert (=> b!111601 m!127379))

(declare-fun m!127381 () Bool)

(assert (=> b!111602 m!127381))

(assert (=> b!110274 d!31779))

(assert (=> b!110274 d!31411))

(declare-fun d!31781 () Bool)

(declare-fun e!72548 () Bool)

(assert (=> d!31781 e!72548))

(declare-fun res!55111 () Bool)

(assert (=> d!31781 (=> res!55111 e!72548)))

(declare-fun lt!57600 () Bool)

(assert (=> d!31781 (= res!55111 (not lt!57600))))

(declare-fun lt!57601 () Bool)

(assert (=> d!31781 (= lt!57600 lt!57601)))

(declare-fun lt!57603 () Unit!3403)

(declare-fun e!72549 () Unit!3403)

(assert (=> d!31781 (= lt!57603 e!72549)))

(declare-fun c!19916 () Bool)

(assert (=> d!31781 (= c!19916 lt!57601)))

(assert (=> d!31781 (= lt!57601 (containsKey!162 (toList!811 (+!150 lt!56820 (tuple2!2441 lt!56819 (zeroValue!2498 newMap!16)))) lt!56822))))

(assert (=> d!31781 (= (contains!838 (+!150 lt!56820 (tuple2!2441 lt!56819 (zeroValue!2498 newMap!16))) lt!56822) lt!57600)))

(declare-fun b!111603 () Bool)

(declare-fun lt!57602 () Unit!3403)

(assert (=> b!111603 (= e!72549 lt!57602)))

(assert (=> b!111603 (= lt!57602 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 (+!150 lt!56820 (tuple2!2441 lt!56819 (zeroValue!2498 newMap!16)))) lt!56822))))

(assert (=> b!111603 (isDefined!111 (getValueByKey!158 (toList!811 (+!150 lt!56820 (tuple2!2441 lt!56819 (zeroValue!2498 newMap!16)))) lt!56822))))

(declare-fun b!111604 () Bool)

(declare-fun Unit!3476 () Unit!3403)

(assert (=> b!111604 (= e!72549 Unit!3476)))

(declare-fun b!111605 () Bool)

(assert (=> b!111605 (= e!72548 (isDefined!111 (getValueByKey!158 (toList!811 (+!150 lt!56820 (tuple2!2441 lt!56819 (zeroValue!2498 newMap!16)))) lt!56822)))))

(assert (= (and d!31781 c!19916) b!111603))

(assert (= (and d!31781 (not c!19916)) b!111604))

(assert (= (and d!31781 (not res!55111)) b!111605))

(declare-fun m!127383 () Bool)

(assert (=> d!31781 m!127383))

(declare-fun m!127385 () Bool)

(assert (=> b!111603 m!127385))

(declare-fun m!127387 () Bool)

(assert (=> b!111603 m!127387))

(assert (=> b!111603 m!127387))

(declare-fun m!127389 () Bool)

(assert (=> b!111603 m!127389))

(assert (=> b!111605 m!127387))

(assert (=> b!111605 m!127387))

(assert (=> b!111605 m!127389))

(assert (=> b!110274 d!31781))

(declare-fun d!31783 () Bool)

(declare-fun e!72550 () Bool)

(assert (=> d!31783 e!72550))

(declare-fun res!55112 () Bool)

(assert (=> d!31783 (=> (not res!55112) (not e!72550))))

(declare-fun lt!57606 () ListLongMap!1591)

(assert (=> d!31783 (= res!55112 (contains!838 lt!57606 (_1!1231 (tuple2!2441 lt!56819 (zeroValue!2498 newMap!16)))))))

(declare-fun lt!57605 () List!1630)

(assert (=> d!31783 (= lt!57606 (ListLongMap!1592 lt!57605))))

(declare-fun lt!57607 () Unit!3403)

(declare-fun lt!57604 () Unit!3403)

(assert (=> d!31783 (= lt!57607 lt!57604)))

(assert (=> d!31783 (= (getValueByKey!158 lt!57605 (_1!1231 (tuple2!2441 lt!56819 (zeroValue!2498 newMap!16)))) (Some!163 (_2!1231 (tuple2!2441 lt!56819 (zeroValue!2498 newMap!16)))))))

(assert (=> d!31783 (= lt!57604 (lemmaContainsTupThenGetReturnValue!74 lt!57605 (_1!1231 (tuple2!2441 lt!56819 (zeroValue!2498 newMap!16))) (_2!1231 (tuple2!2441 lt!56819 (zeroValue!2498 newMap!16)))))))

(assert (=> d!31783 (= lt!57605 (insertStrictlySorted!77 (toList!811 lt!56820) (_1!1231 (tuple2!2441 lt!56819 (zeroValue!2498 newMap!16))) (_2!1231 (tuple2!2441 lt!56819 (zeroValue!2498 newMap!16)))))))

(assert (=> d!31783 (= (+!150 lt!56820 (tuple2!2441 lt!56819 (zeroValue!2498 newMap!16))) lt!57606)))

(declare-fun b!111606 () Bool)

(declare-fun res!55113 () Bool)

(assert (=> b!111606 (=> (not res!55113) (not e!72550))))

(assert (=> b!111606 (= res!55113 (= (getValueByKey!158 (toList!811 lt!57606) (_1!1231 (tuple2!2441 lt!56819 (zeroValue!2498 newMap!16)))) (Some!163 (_2!1231 (tuple2!2441 lt!56819 (zeroValue!2498 newMap!16))))))))

(declare-fun b!111607 () Bool)

(assert (=> b!111607 (= e!72550 (contains!839 (toList!811 lt!57606) (tuple2!2441 lt!56819 (zeroValue!2498 newMap!16))))))

(assert (= (and d!31783 res!55112) b!111606))

(assert (= (and b!111606 res!55113) b!111607))

(declare-fun m!127391 () Bool)

(assert (=> d!31783 m!127391))

(declare-fun m!127393 () Bool)

(assert (=> d!31783 m!127393))

(declare-fun m!127395 () Bool)

(assert (=> d!31783 m!127395))

(declare-fun m!127397 () Bool)

(assert (=> d!31783 m!127397))

(declare-fun m!127399 () Bool)

(assert (=> b!111606 m!127399))

(declare-fun m!127401 () Bool)

(assert (=> b!111607 m!127401))

(assert (=> b!110274 d!31783))

(declare-fun d!31785 () Bool)

(assert (=> d!31785 (= (apply!100 (+!150 lt!56830 (tuple2!2441 lt!56815 (minValue!2498 newMap!16))) lt!56818) (get!1350 (getValueByKey!158 (toList!811 (+!150 lt!56830 (tuple2!2441 lt!56815 (minValue!2498 newMap!16)))) lt!56818)))))

(declare-fun bs!4608 () Bool)

(assert (= bs!4608 d!31785))

(declare-fun m!127403 () Bool)

(assert (=> bs!4608 m!127403))

(assert (=> bs!4608 m!127403))

(declare-fun m!127405 () Bool)

(assert (=> bs!4608 m!127405))

(assert (=> b!110274 d!31785))

(declare-fun d!31787 () Bool)

(declare-fun e!72551 () Bool)

(assert (=> d!31787 e!72551))

(declare-fun res!55114 () Bool)

(assert (=> d!31787 (=> (not res!55114) (not e!72551))))

(declare-fun lt!57610 () ListLongMap!1591)

(assert (=> d!31787 (= res!55114 (contains!838 lt!57610 (_1!1231 (tuple2!2441 lt!56815 (minValue!2498 newMap!16)))))))

(declare-fun lt!57609 () List!1630)

(assert (=> d!31787 (= lt!57610 (ListLongMap!1592 lt!57609))))

(declare-fun lt!57611 () Unit!3403)

(declare-fun lt!57608 () Unit!3403)

(assert (=> d!31787 (= lt!57611 lt!57608)))

(assert (=> d!31787 (= (getValueByKey!158 lt!57609 (_1!1231 (tuple2!2441 lt!56815 (minValue!2498 newMap!16)))) (Some!163 (_2!1231 (tuple2!2441 lt!56815 (minValue!2498 newMap!16)))))))

(assert (=> d!31787 (= lt!57608 (lemmaContainsTupThenGetReturnValue!74 lt!57609 (_1!1231 (tuple2!2441 lt!56815 (minValue!2498 newMap!16))) (_2!1231 (tuple2!2441 lt!56815 (minValue!2498 newMap!16)))))))

(assert (=> d!31787 (= lt!57609 (insertStrictlySorted!77 (toList!811 lt!56830) (_1!1231 (tuple2!2441 lt!56815 (minValue!2498 newMap!16))) (_2!1231 (tuple2!2441 lt!56815 (minValue!2498 newMap!16)))))))

(assert (=> d!31787 (= (+!150 lt!56830 (tuple2!2441 lt!56815 (minValue!2498 newMap!16))) lt!57610)))

(declare-fun b!111608 () Bool)

(declare-fun res!55115 () Bool)

(assert (=> b!111608 (=> (not res!55115) (not e!72551))))

(assert (=> b!111608 (= res!55115 (= (getValueByKey!158 (toList!811 lt!57610) (_1!1231 (tuple2!2441 lt!56815 (minValue!2498 newMap!16)))) (Some!163 (_2!1231 (tuple2!2441 lt!56815 (minValue!2498 newMap!16))))))))

(declare-fun b!111609 () Bool)

(assert (=> b!111609 (= e!72551 (contains!839 (toList!811 lt!57610) (tuple2!2441 lt!56815 (minValue!2498 newMap!16))))))

(assert (= (and d!31787 res!55114) b!111608))

(assert (= (and b!111608 res!55115) b!111609))

(declare-fun m!127407 () Bool)

(assert (=> d!31787 m!127407))

(declare-fun m!127409 () Bool)

(assert (=> d!31787 m!127409))

(declare-fun m!127411 () Bool)

(assert (=> d!31787 m!127411))

(declare-fun m!127413 () Bool)

(assert (=> d!31787 m!127413))

(declare-fun m!127415 () Bool)

(assert (=> b!111608 m!127415))

(declare-fun m!127417 () Bool)

(assert (=> b!111609 m!127417))

(assert (=> b!110274 d!31787))

(declare-fun d!31789 () Bool)

(declare-fun res!55117 () Bool)

(declare-fun e!72552 () Bool)

(assert (=> d!31789 (=> res!55117 e!72552)))

(assert (=> d!31789 (= res!55117 (bvsge #b00000000000000000000000000000000 (size!2338 (_keys!4341 (v!2930 (underlying!370 thiss!992))))))))

(assert (=> d!31789 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4341 (v!2930 (underlying!370 thiss!992))) (mask!6795 (v!2930 (underlying!370 thiss!992)))) e!72552)))

(declare-fun b!111610 () Bool)

(declare-fun e!72553 () Bool)

(declare-fun call!11922 () Bool)

(assert (=> b!111610 (= e!72553 call!11922)))

(declare-fun b!111611 () Bool)

(declare-fun e!72554 () Bool)

(assert (=> b!111611 (= e!72554 call!11922)))

(declare-fun b!111612 () Bool)

(assert (=> b!111612 (= e!72552 e!72553)))

(declare-fun c!19917 () Bool)

(assert (=> b!111612 (= c!19917 (validKeyInArray!0 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun bm!11919 () Bool)

(assert (=> bm!11919 (= call!11922 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4341 (v!2930 (underlying!370 thiss!992))) (mask!6795 (v!2930 (underlying!370 thiss!992)))))))

(declare-fun b!111613 () Bool)

(assert (=> b!111613 (= e!72553 e!72554)))

(declare-fun lt!57613 () (_ BitVec 64))

(assert (=> b!111613 (= lt!57613 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!57614 () Unit!3403)

(assert (=> b!111613 (= lt!57614 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4341 (v!2930 (underlying!370 thiss!992))) lt!57613 #b00000000000000000000000000000000))))

(assert (=> b!111613 (arrayContainsKey!0 (_keys!4341 (v!2930 (underlying!370 thiss!992))) lt!57613 #b00000000000000000000000000000000)))

(declare-fun lt!57612 () Unit!3403)

(assert (=> b!111613 (= lt!57612 lt!57614)))

(declare-fun res!55116 () Bool)

(assert (=> b!111613 (= res!55116 (= (seekEntryOrOpen!0 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) #b00000000000000000000000000000000) (_keys!4341 (v!2930 (underlying!370 thiss!992))) (mask!6795 (v!2930 (underlying!370 thiss!992)))) (Found!261 #b00000000000000000000000000000000)))))

(assert (=> b!111613 (=> (not res!55116) (not e!72554))))

(assert (= (and d!31789 (not res!55117)) b!111612))

(assert (= (and b!111612 c!19917) b!111613))

(assert (= (and b!111612 (not c!19917)) b!111610))

(assert (= (and b!111613 res!55116) b!111611))

(assert (= (or b!111611 b!111610) bm!11919))

(assert (=> b!111612 m!125583))

(assert (=> b!111612 m!125583))

(assert (=> b!111612 m!125585))

(declare-fun m!127419 () Bool)

(assert (=> bm!11919 m!127419))

(assert (=> b!111613 m!125583))

(declare-fun m!127421 () Bool)

(assert (=> b!111613 m!127421))

(declare-fun m!127423 () Bool)

(assert (=> b!111613 m!127423))

(assert (=> b!111613 m!125583))

(declare-fun m!127425 () Bool)

(assert (=> b!111613 m!127425))

(assert (=> b!110239 d!31789))

(declare-fun b!111614 () Bool)

(declare-fun e!72555 () Option!164)

(assert (=> b!111614 (= e!72555 (Some!163 (_2!1231 (h!2225 (toList!811 lt!56805)))))))

(declare-fun e!72556 () Option!164)

(declare-fun b!111616 () Bool)

(assert (=> b!111616 (= e!72556 (getValueByKey!158 (t!5767 (toList!811 lt!56805)) (_1!1231 (ite (or c!19473 c!19478) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(declare-fun d!31791 () Bool)

(declare-fun c!19918 () Bool)

(assert (=> d!31791 (= c!19918 (and ((_ is Cons!1626) (toList!811 lt!56805)) (= (_1!1231 (h!2225 (toList!811 lt!56805))) (_1!1231 (ite (or c!19473 c!19478) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))))

(assert (=> d!31791 (= (getValueByKey!158 (toList!811 lt!56805) (_1!1231 (ite (or c!19473 c!19478) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))) e!72555)))

(declare-fun b!111615 () Bool)

(assert (=> b!111615 (= e!72555 e!72556)))

(declare-fun c!19919 () Bool)

(assert (=> b!111615 (= c!19919 (and ((_ is Cons!1626) (toList!811 lt!56805)) (not (= (_1!1231 (h!2225 (toList!811 lt!56805))) (_1!1231 (ite (or c!19473 c!19478) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))))))))

(declare-fun b!111617 () Bool)

(assert (=> b!111617 (= e!72556 None!162)))

(assert (= (and d!31791 c!19918) b!111614))

(assert (= (and d!31791 (not c!19918)) b!111615))

(assert (= (and b!111615 c!19919) b!111616))

(assert (= (and b!111615 (not c!19919)) b!111617))

(declare-fun m!127427 () Bool)

(assert (=> b!111616 m!127427))

(assert (=> b!110260 d!31791))

(declare-fun d!31793 () Bool)

(declare-fun lt!57615 () Bool)

(assert (=> d!31793 (= lt!57615 (select (content!114 Nil!1628) (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!72558 () Bool)

(assert (=> d!31793 (= lt!57615 e!72558)))

(declare-fun res!55118 () Bool)

(assert (=> d!31793 (=> (not res!55118) (not e!72558))))

(assert (=> d!31793 (= res!55118 ((_ is Cons!1627) Nil!1628))))

(assert (=> d!31793 (= (contains!840 Nil!1628 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)) lt!57615)))

(declare-fun b!111618 () Bool)

(declare-fun e!72557 () Bool)

(assert (=> b!111618 (= e!72558 e!72557)))

(declare-fun res!55119 () Bool)

(assert (=> b!111618 (=> res!55119 e!72557)))

(assert (=> b!111618 (= res!55119 (= (h!2226 Nil!1628) (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!111619 () Bool)

(assert (=> b!111619 (= e!72557 (contains!840 (t!5768 Nil!1628) (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!31793 res!55118) b!111618))

(assert (= (and b!111618 (not res!55119)) b!111619))

(assert (=> d!31793 m!125193))

(assert (=> d!31793 m!124693))

(declare-fun m!127429 () Bool)

(assert (=> d!31793 m!127429))

(assert (=> b!111619 m!124693))

(declare-fun m!127431 () Bool)

(assert (=> b!111619 m!127431))

(assert (=> b!110371 d!31793))

(declare-fun b!111620 () Bool)

(declare-fun e!72559 () Option!164)

(assert (=> b!111620 (= e!72559 (Some!163 (_2!1231 (h!2225 (toList!811 lt!56931)))))))

(declare-fun e!72560 () Option!164)

(declare-fun b!111622 () Bool)

(assert (=> b!111622 (= e!72560 (getValueByKey!158 (t!5767 (toList!811 lt!56931)) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))

(declare-fun d!31795 () Bool)

(declare-fun c!19920 () Bool)

(assert (=> d!31795 (= c!19920 (and ((_ is Cons!1626) (toList!811 lt!56931)) (= (_1!1231 (h!2225 (toList!811 lt!56931))) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))))))

(assert (=> d!31795 (= (getValueByKey!158 (toList!811 lt!56931) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))) e!72559)))

(declare-fun b!111621 () Bool)

(assert (=> b!111621 (= e!72559 e!72560)))

(declare-fun c!19921 () Bool)

(assert (=> b!111621 (= c!19921 (and ((_ is Cons!1626) (toList!811 lt!56931)) (not (= (_1!1231 (h!2225 (toList!811 lt!56931))) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))))

(declare-fun b!111623 () Bool)

(assert (=> b!111623 (= e!72560 None!162)))

(assert (= (and d!31795 c!19920) b!111620))

(assert (= (and d!31795 (not c!19920)) b!111621))

(assert (= (and b!111621 c!19921) b!111622))

(assert (= (and b!111621 (not c!19921)) b!111623))

(declare-fun m!127433 () Bool)

(assert (=> b!111622 m!127433))

(assert (=> b!110403 d!31795))

(declare-fun d!31797 () Bool)

(assert (=> d!31797 (= ($colon$colon!83 e!71682 (ite c!19520 (h!2225 (toList!811 (+!150 lt!56462 lt!56454))) (tuple2!2441 (_1!1231 lt!56457) (_2!1231 lt!56457)))) (Cons!1626 (ite c!19520 (h!2225 (toList!811 (+!150 lt!56462 lt!56454))) (tuple2!2441 (_1!1231 lt!56457) (_2!1231 lt!56457))) e!71682))))

(assert (=> bm!11758 d!31797))

(declare-fun d!31799 () Bool)

(assert (=> d!31799 (isDefined!111 (getValueByKey!158 (toList!811 (+!150 lt!56695 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))) lt!56697))))

(declare-fun lt!57616 () Unit!3403)

(assert (=> d!31799 (= lt!57616 (choose!684 (toList!811 (+!150 lt!56695 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))) lt!56697))))

(declare-fun e!72561 () Bool)

(assert (=> d!31799 e!72561))

(declare-fun res!55120 () Bool)

(assert (=> d!31799 (=> (not res!55120) (not e!72561))))

(assert (=> d!31799 (= res!55120 (isStrictlySorted!311 (toList!811 (+!150 lt!56695 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> d!31799 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 (+!150 lt!56695 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))) lt!56697) lt!57616)))

(declare-fun b!111624 () Bool)

(assert (=> b!111624 (= e!72561 (containsKey!162 (toList!811 (+!150 lt!56695 (tuple2!2441 lt!56694 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))))) lt!56697))))

(assert (= (and d!31799 res!55120) b!111624))

(assert (=> d!31799 m!125147))

(assert (=> d!31799 m!125147))

(assert (=> d!31799 m!125149))

(declare-fun m!127435 () Bool)

(assert (=> d!31799 m!127435))

(declare-fun m!127437 () Bool)

(assert (=> d!31799 m!127437))

(assert (=> b!111624 m!125143))

(assert (=> b!110356 d!31799))

(assert (=> b!110356 d!31655))

(assert (=> b!110356 d!31657))

(declare-fun d!31801 () Bool)

(declare-fun lt!57617 () Bool)

(assert (=> d!31801 (= lt!57617 (select (content!113 (toList!811 lt!56917)) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun e!72563 () Bool)

(assert (=> d!31801 (= lt!57617 e!72563)))

(declare-fun res!55121 () Bool)

(assert (=> d!31801 (=> (not res!55121) (not e!72563))))

(assert (=> d!31801 (= res!55121 ((_ is Cons!1626) (toList!811 lt!56917)))))

(assert (=> d!31801 (= (contains!839 (toList!811 lt!56917) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992))))) lt!57617)))

(declare-fun b!111625 () Bool)

(declare-fun e!72562 () Bool)

(assert (=> b!111625 (= e!72563 e!72562)))

(declare-fun res!55122 () Bool)

(assert (=> b!111625 (=> res!55122 e!72562)))

(assert (=> b!111625 (= res!55122 (= (h!2225 (toList!811 lt!56917)) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun b!111626 () Bool)

(assert (=> b!111626 (= e!72562 (contains!839 (t!5767 (toList!811 lt!56917)) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))))

(assert (= (and d!31801 res!55121) b!111625))

(assert (= (and b!111625 (not res!55122)) b!111626))

(declare-fun m!127439 () Bool)

(assert (=> d!31801 m!127439))

(declare-fun m!127441 () Bool)

(assert (=> d!31801 m!127441))

(declare-fun m!127443 () Bool)

(assert (=> b!111626 m!127443))

(assert (=> b!110385 d!31801))

(declare-fun d!31803 () Bool)

(declare-fun e!72564 () Bool)

(assert (=> d!31803 e!72564))

(declare-fun res!55123 () Bool)

(assert (=> d!31803 (=> res!55123 e!72564)))

(declare-fun lt!57618 () Bool)

(assert (=> d!31803 (= res!55123 (not lt!57618))))

(declare-fun lt!57619 () Bool)

(assert (=> d!31803 (= lt!57618 lt!57619)))

(declare-fun lt!57621 () Unit!3403)

(declare-fun e!72565 () Unit!3403)

(assert (=> d!31803 (= lt!57621 e!72565)))

(declare-fun c!19922 () Bool)

(assert (=> d!31803 (= c!19922 lt!57619)))

(assert (=> d!31803 (= lt!57619 (containsKey!162 (toList!811 lt!56824) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!31803 (= (contains!838 lt!56824 #b0000000000000000000000000000000000000000000000000000000000000000) lt!57618)))

(declare-fun b!111627 () Bool)

(declare-fun lt!57620 () Unit!3403)

(assert (=> b!111627 (= e!72565 lt!57620)))

(assert (=> b!111627 (= lt!57620 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 lt!56824) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!111627 (isDefined!111 (getValueByKey!158 (toList!811 lt!56824) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!111628 () Bool)

(declare-fun Unit!3477 () Unit!3403)

(assert (=> b!111628 (= e!72565 Unit!3477)))

(declare-fun b!111629 () Bool)

(assert (=> b!111629 (= e!72564 (isDefined!111 (getValueByKey!158 (toList!811 lt!56824) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!31803 c!19922) b!111627))

(assert (= (and d!31803 (not c!19922)) b!111628))

(assert (= (and d!31803 (not res!55123)) b!111629))

(declare-fun m!127445 () Bool)

(assert (=> d!31803 m!127445))

(declare-fun m!127447 () Bool)

(assert (=> b!111627 m!127447))

(assert (=> b!111627 m!126069))

(assert (=> b!111627 m!126069))

(declare-fun m!127449 () Bool)

(assert (=> b!111627 m!127449))

(assert (=> b!111629 m!126069))

(assert (=> b!111629 m!126069))

(assert (=> b!111629 m!127449))

(assert (=> bm!11772 d!31803))

(declare-fun d!31805 () Bool)

(declare-fun e!72566 () Bool)

(assert (=> d!31805 e!72566))

(declare-fun res!55124 () Bool)

(assert (=> d!31805 (=> res!55124 e!72566)))

(declare-fun lt!57622 () Bool)

(assert (=> d!31805 (= res!55124 (not lt!57622))))

(declare-fun lt!57623 () Bool)

(assert (=> d!31805 (= lt!57622 lt!57623)))

(declare-fun lt!57625 () Unit!3403)

(declare-fun e!72567 () Unit!3403)

(assert (=> d!31805 (= lt!57625 e!72567)))

(declare-fun c!19923 () Bool)

(assert (=> d!31805 (= c!19923 lt!57623)))

(assert (=> d!31805 (= lt!57623 (containsKey!162 (toList!811 lt!56931) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))

(assert (=> d!31805 (= (contains!838 lt!56931 (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))) lt!57622)))

(declare-fun b!111630 () Bool)

(declare-fun lt!57624 () Unit!3403)

(assert (=> b!111630 (= e!72567 lt!57624)))

(assert (=> b!111630 (= lt!57624 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 lt!56931) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))

(assert (=> b!111630 (isDefined!111 (getValueByKey!158 (toList!811 lt!56931) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))

(declare-fun b!111631 () Bool)

(declare-fun Unit!3478 () Unit!3403)

(assert (=> b!111631 (= e!72567 Unit!3478)))

(declare-fun b!111632 () Bool)

(assert (=> b!111632 (= e!72566 (isDefined!111 (getValueByKey!158 (toList!811 lt!56931) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))))))

(assert (= (and d!31805 c!19923) b!111630))

(assert (= (and d!31805 (not c!19923)) b!111631))

(assert (= (and d!31805 (not res!55124)) b!111632))

(declare-fun m!127451 () Bool)

(assert (=> d!31805 m!127451))

(declare-fun m!127453 () Bool)

(assert (=> b!111630 m!127453))

(assert (=> b!111630 m!125255))

(assert (=> b!111630 m!125255))

(declare-fun m!127455 () Bool)

(assert (=> b!111630 m!127455))

(assert (=> b!111632 m!125255))

(assert (=> b!111632 m!125255))

(assert (=> b!111632 m!127455))

(assert (=> d!31007 d!31805))

(declare-fun b!111633 () Bool)

(declare-fun e!72568 () Option!164)

(assert (=> b!111633 (= e!72568 (Some!163 (_2!1231 (h!2225 lt!56930))))))

(declare-fun b!111635 () Bool)

(declare-fun e!72569 () Option!164)

(assert (=> b!111635 (= e!72569 (getValueByKey!158 (t!5767 lt!56930) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))

(declare-fun d!31807 () Bool)

(declare-fun c!19924 () Bool)

(assert (=> d!31807 (= c!19924 (and ((_ is Cons!1626) lt!56930) (= (_1!1231 (h!2225 lt!56930)) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))))))

(assert (=> d!31807 (= (getValueByKey!158 lt!56930 (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))) e!72568)))

(declare-fun b!111634 () Bool)

(assert (=> b!111634 (= e!72568 e!72569)))

(declare-fun c!19925 () Bool)

(assert (=> b!111634 (= c!19925 (and ((_ is Cons!1626) lt!56930) (not (= (_1!1231 (h!2225 lt!56930)) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))))

(declare-fun b!111636 () Bool)

(assert (=> b!111636 (= e!72569 None!162)))

(assert (= (and d!31807 c!19924) b!111633))

(assert (= (and d!31807 (not c!19924)) b!111634))

(assert (= (and b!111634 c!19925) b!111635))

(assert (= (and b!111634 (not c!19925)) b!111636))

(declare-fun m!127457 () Bool)

(assert (=> b!111635 m!127457))

(assert (=> d!31007 d!31807))

(declare-fun d!31809 () Bool)

(assert (=> d!31809 (= (getValueByKey!158 lt!56930 (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))) (Some!163 (_2!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))

(declare-fun lt!57626 () Unit!3403)

(assert (=> d!31809 (= lt!57626 (choose!687 lt!56930 (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)) (_2!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))

(declare-fun e!72570 () Bool)

(assert (=> d!31809 e!72570))

(declare-fun res!55125 () Bool)

(assert (=> d!31809 (=> (not res!55125) (not e!72570))))

(assert (=> d!31809 (= res!55125 (isStrictlySorted!311 lt!56930))))

(assert (=> d!31809 (= (lemmaContainsTupThenGetReturnValue!74 lt!56930 (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)) (_2!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))) lt!57626)))

(declare-fun b!111637 () Bool)

(declare-fun res!55126 () Bool)

(assert (=> b!111637 (=> (not res!55126) (not e!72570))))

(assert (=> b!111637 (= res!55126 (containsKey!162 lt!56930 (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))

(declare-fun b!111638 () Bool)

(assert (=> b!111638 (= e!72570 (contains!839 lt!56930 (tuple2!2441 (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)) (_2!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))))))

(assert (= (and d!31809 res!55125) b!111637))

(assert (= (and b!111637 res!55126) b!111638))

(assert (=> d!31809 m!125249))

(declare-fun m!127459 () Bool)

(assert (=> d!31809 m!127459))

(declare-fun m!127461 () Bool)

(assert (=> d!31809 m!127461))

(declare-fun m!127463 () Bool)

(assert (=> b!111637 m!127463))

(declare-fun m!127465 () Bool)

(assert (=> b!111638 m!127465))

(assert (=> d!31007 d!31809))

(declare-fun b!111639 () Bool)

(declare-fun e!72575 () List!1630)

(declare-fun e!72574 () List!1630)

(assert (=> b!111639 (= e!72575 e!72574)))

(declare-fun c!19928 () Bool)

(assert (=> b!111639 (= c!19928 (and ((_ is Cons!1626) (toList!811 lt!56462)) (= (_1!1231 (h!2225 (toList!811 lt!56462))) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))))))

(declare-fun bm!11920 () Bool)

(declare-fun call!11923 () List!1630)

(declare-fun call!11924 () List!1630)

(assert (=> bm!11920 (= call!11923 call!11924)))

(declare-fun b!111640 () Bool)

(assert (=> b!111640 (= e!72575 call!11924)))

(declare-fun bm!11921 () Bool)

(declare-fun call!11925 () List!1630)

(assert (=> bm!11921 (= call!11925 call!11923)))

(declare-fun e!72573 () List!1630)

(declare-fun c!19926 () Bool)

(declare-fun bm!11922 () Bool)

(assert (=> bm!11922 (= call!11924 ($colon$colon!83 e!72573 (ite c!19926 (h!2225 (toList!811 lt!56462)) (tuple2!2441 (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)) (_2!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))))

(declare-fun c!19929 () Bool)

(assert (=> bm!11922 (= c!19929 c!19926)))

(declare-fun b!111641 () Bool)

(assert (=> b!111641 (= e!72574 call!11923)))

(declare-fun lt!57627 () List!1630)

(declare-fun b!111643 () Bool)

(declare-fun e!72572 () Bool)

(assert (=> b!111643 (= e!72572 (contains!839 lt!57627 (tuple2!2441 (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)) (_2!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))))))

(declare-fun b!111644 () Bool)

(declare-fun e!72571 () List!1630)

(assert (=> b!111644 (= e!72571 call!11925)))

(declare-fun b!111645 () Bool)

(declare-fun res!55128 () Bool)

(assert (=> b!111645 (=> (not res!55128) (not e!72572))))

(assert (=> b!111645 (= res!55128 (containsKey!162 lt!57627 (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))

(declare-fun b!111646 () Bool)

(declare-fun c!19927 () Bool)

(assert (=> b!111646 (= c!19927 (and ((_ is Cons!1626) (toList!811 lt!56462)) (bvsgt (_1!1231 (h!2225 (toList!811 lt!56462))) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))))))

(assert (=> b!111646 (= e!72574 e!72571)))

(declare-fun b!111647 () Bool)

(assert (=> b!111647 (= e!72571 call!11925)))

(declare-fun b!111648 () Bool)

(assert (=> b!111648 (= e!72573 (ite c!19928 (t!5767 (toList!811 lt!56462)) (ite c!19927 (Cons!1626 (h!2225 (toList!811 lt!56462)) (t!5767 (toList!811 lt!56462))) Nil!1627)))))

(declare-fun b!111642 () Bool)

(assert (=> b!111642 (= e!72573 (insertStrictlySorted!77 (t!5767 (toList!811 lt!56462)) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)) (_2!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))))))

(declare-fun d!31811 () Bool)

(assert (=> d!31811 e!72572))

(declare-fun res!55127 () Bool)

(assert (=> d!31811 (=> (not res!55127) (not e!72572))))

(assert (=> d!31811 (= res!55127 (isStrictlySorted!311 lt!57627))))

(assert (=> d!31811 (= lt!57627 e!72575)))

(assert (=> d!31811 (= c!19926 (and ((_ is Cons!1626) (toList!811 lt!56462)) (bvslt (_1!1231 (h!2225 (toList!811 lt!56462))) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)))))))

(assert (=> d!31811 (isStrictlySorted!311 (toList!811 lt!56462))))

(assert (=> d!31811 (= (insertStrictlySorted!77 (toList!811 lt!56462) (_1!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458)) (_2!1231 (tuple2!2441 (select (arr!2081 (_keys!4341 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56458))) lt!57627)))

(assert (= (and d!31811 c!19926) b!111640))

(assert (= (and d!31811 (not c!19926)) b!111639))

(assert (= (and b!111639 c!19928) b!111641))

(assert (= (and b!111639 (not c!19928)) b!111646))

(assert (= (and b!111646 c!19927) b!111644))

(assert (= (and b!111646 (not c!19927)) b!111647))

(assert (= (or b!111644 b!111647) bm!11921))

(assert (= (or b!111641 bm!11921) bm!11920))

(assert (= (or b!111640 bm!11920) bm!11922))

(assert (= (and bm!11922 c!19929) b!111642))

(assert (= (and bm!11922 (not c!19929)) b!111648))

(assert (= (and d!31811 res!55127) b!111645))

(assert (= (and b!111645 res!55128) b!111643))

(declare-fun m!127467 () Bool)

(assert (=> b!111645 m!127467))

(declare-fun m!127469 () Bool)

(assert (=> b!111642 m!127469))

(declare-fun m!127471 () Bool)

(assert (=> b!111643 m!127471))

(declare-fun m!127473 () Bool)

(assert (=> d!31811 m!127473))

(assert (=> d!31811 m!125051))

(declare-fun m!127475 () Bool)

(assert (=> bm!11922 m!127475))

(assert (=> d!31007 d!31811))

(declare-fun d!31813 () Bool)

(declare-fun e!72576 () Bool)

(assert (=> d!31813 e!72576))

(declare-fun res!55129 () Bool)

(assert (=> d!31813 (=> res!55129 e!72576)))

(declare-fun lt!57628 () Bool)

(assert (=> d!31813 (= res!55129 (not lt!57628))))

(declare-fun lt!57629 () Bool)

(assert (=> d!31813 (= lt!57628 lt!57629)))

(declare-fun lt!57631 () Unit!3403)

(declare-fun e!72577 () Unit!3403)

(assert (=> d!31813 (= lt!57631 e!72577)))

(declare-fun c!19930 () Bool)

(assert (=> d!31813 (= c!19930 lt!57629)))

(assert (=> d!31813 (= lt!57629 (containsKey!162 (toList!811 lt!56805) (_1!1231 (ite (or c!19473 c!19478) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> d!31813 (= (contains!838 lt!56805 (_1!1231 (ite (or c!19473 c!19478) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))) lt!57628)))

(declare-fun b!111649 () Bool)

(declare-fun lt!57630 () Unit!3403)

(assert (=> b!111649 (= e!72577 lt!57630)))

(assert (=> b!111649 (= lt!57630 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!811 lt!56805) (_1!1231 (ite (or c!19473 c!19478) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> b!111649 (isDefined!111 (getValueByKey!158 (toList!811 lt!56805) (_1!1231 (ite (or c!19473 c!19478) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(declare-fun b!111650 () Bool)

(declare-fun Unit!3479 () Unit!3403)

(assert (=> b!111650 (= e!72577 Unit!3479)))

(declare-fun b!111651 () Bool)

(assert (=> b!111651 (= e!72576 (isDefined!111 (getValueByKey!158 (toList!811 lt!56805) (_1!1231 (ite (or c!19473 c!19478) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))))

(assert (= (and d!31813 c!19930) b!111649))

(assert (= (and d!31813 (not c!19930)) b!111650))

(assert (= (and d!31813 (not res!55129)) b!111651))

(declare-fun m!127477 () Bool)

(assert (=> d!31813 m!127477))

(declare-fun m!127479 () Bool)

(assert (=> b!111649 m!127479))

(assert (=> b!111649 m!124903))

(assert (=> b!111649 m!124903))

(declare-fun m!127481 () Bool)

(assert (=> b!111649 m!127481))

(assert (=> b!111651 m!124903))

(assert (=> b!111651 m!124903))

(assert (=> b!111651 m!127481))

(assert (=> d!30921 d!31813))

(declare-fun b!111652 () Bool)

(declare-fun e!72578 () Option!164)

(assert (=> b!111652 (= e!72578 (Some!163 (_2!1231 (h!2225 lt!56804))))))

(declare-fun e!72579 () Option!164)

(declare-fun b!111654 () Bool)

(assert (=> b!111654 (= e!72579 (getValueByKey!158 (t!5767 lt!56804) (_1!1231 (ite (or c!19473 c!19478) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(declare-fun d!31815 () Bool)

(declare-fun c!19931 () Bool)

(assert (=> d!31815 (= c!19931 (and ((_ is Cons!1626) lt!56804) (= (_1!1231 (h!2225 lt!56804)) (_1!1231 (ite (or c!19473 c!19478) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))))

(assert (=> d!31815 (= (getValueByKey!158 lt!56804 (_1!1231 (ite (or c!19473 c!19478) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))) e!72578)))

(declare-fun b!111653 () Bool)

(assert (=> b!111653 (= e!72578 e!72579)))

(declare-fun c!19932 () Bool)

(assert (=> b!111653 (= c!19932 (and ((_ is Cons!1626) lt!56804) (not (= (_1!1231 (h!2225 lt!56804)) (_1!1231 (ite (or c!19473 c!19478) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))))))))

(declare-fun b!111655 () Bool)

(assert (=> b!111655 (= e!72579 None!162)))

(assert (= (and d!31815 c!19931) b!111652))

(assert (= (and d!31815 (not c!19931)) b!111653))

(assert (= (and b!111653 c!19932) b!111654))

(assert (= (and b!111653 (not c!19932)) b!111655))

(declare-fun m!127483 () Bool)

(assert (=> b!111654 m!127483))

(assert (=> d!30921 d!31815))

(declare-fun d!31817 () Bool)

(assert (=> d!31817 (= (getValueByKey!158 lt!56804 (_1!1231 (ite (or c!19473 c!19478) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))) (Some!163 (_2!1231 (ite (or c!19473 c!19478) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(declare-fun lt!57632 () Unit!3403)

(assert (=> d!31817 (= lt!57632 (choose!687 lt!56804 (_1!1231 (ite (or c!19473 c!19478) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))) (_2!1231 (ite (or c!19473 c!19478) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(declare-fun e!72580 () Bool)

(assert (=> d!31817 e!72580))

(declare-fun res!55130 () Bool)

(assert (=> d!31817 (=> (not res!55130) (not e!72580))))

(assert (=> d!31817 (= res!55130 (isStrictlySorted!311 lt!56804))))

(assert (=> d!31817 (= (lemmaContainsTupThenGetReturnValue!74 lt!56804 (_1!1231 (ite (or c!19473 c!19478) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))) (_2!1231 (ite (or c!19473 c!19478) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))) lt!57632)))

(declare-fun b!111656 () Bool)

(declare-fun res!55131 () Bool)

(assert (=> b!111656 (=> (not res!55131) (not e!72580))))

(assert (=> b!111656 (= res!55131 (containsKey!162 lt!56804 (_1!1231 (ite (or c!19473 c!19478) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(declare-fun b!111657 () Bool)

(assert (=> b!111657 (= e!72580 (contains!839 lt!56804 (tuple2!2441 (_1!1231 (ite (or c!19473 c!19478) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))) (_2!1231 (ite (or c!19473 c!19478) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))))

(assert (= (and d!31817 res!55130) b!111656))

(assert (= (and b!111656 res!55131) b!111657))

(assert (=> d!31817 m!124897))

(declare-fun m!127485 () Bool)

(assert (=> d!31817 m!127485))

(declare-fun m!127487 () Bool)

(assert (=> d!31817 m!127487))

(declare-fun m!127489 () Bool)

(assert (=> b!111656 m!127489))

(declare-fun m!127491 () Bool)

(assert (=> b!111657 m!127491))

(assert (=> d!30921 d!31817))

(declare-fun b!111658 () Bool)

(declare-fun e!72585 () List!1630)

(declare-fun e!72584 () List!1630)

(assert (=> b!111658 (= e!72585 e!72584)))

(declare-fun c!19935 () Bool)

(assert (=> b!111658 (= c!19935 (and ((_ is Cons!1626) (toList!811 (ite c!19473 call!11736 (ite c!19478 call!11733 call!11735)))) (= (_1!1231 (h!2225 (toList!811 (ite c!19473 call!11736 (ite c!19478 call!11733 call!11735))))) (_1!1231 (ite (or c!19473 c!19478) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))))

(declare-fun bm!11923 () Bool)

(declare-fun call!11926 () List!1630)

(declare-fun call!11927 () List!1630)

(assert (=> bm!11923 (= call!11926 call!11927)))

(declare-fun b!111659 () Bool)

(assert (=> b!111659 (= e!72585 call!11927)))

(declare-fun bm!11924 () Bool)

(declare-fun call!11928 () List!1630)

(assert (=> bm!11924 (= call!11928 call!11926)))

(declare-fun e!72583 () List!1630)

(declare-fun c!19933 () Bool)

(declare-fun bm!11925 () Bool)

(assert (=> bm!11925 (= call!11927 ($colon$colon!83 e!72583 (ite c!19933 (h!2225 (toList!811 (ite c!19473 call!11736 (ite c!19478 call!11733 call!11735)))) (tuple2!2441 (_1!1231 (ite (or c!19473 c!19478) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))) (_2!1231 (ite (or c!19473 c!19478) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))))))))

(declare-fun c!19936 () Bool)

(assert (=> bm!11925 (= c!19936 c!19933)))

(declare-fun b!111660 () Bool)

(assert (=> b!111660 (= e!72584 call!11926)))

(declare-fun e!72582 () Bool)

(declare-fun lt!57633 () List!1630)

(declare-fun b!111662 () Bool)

(assert (=> b!111662 (= e!72582 (contains!839 lt!57633 (tuple2!2441 (_1!1231 (ite (or c!19473 c!19478) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))) (_2!1231 (ite (or c!19473 c!19478) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))))

(declare-fun b!111663 () Bool)

(declare-fun e!72581 () List!1630)

(assert (=> b!111663 (= e!72581 call!11928)))

(declare-fun b!111664 () Bool)

(declare-fun res!55133 () Bool)

(assert (=> b!111664 (=> (not res!55133) (not e!72582))))

(assert (=> b!111664 (= res!55133 (containsKey!162 lt!57633 (_1!1231 (ite (or c!19473 c!19478) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(declare-fun c!19934 () Bool)

(declare-fun b!111665 () Bool)

(assert (=> b!111665 (= c!19934 (and ((_ is Cons!1626) (toList!811 (ite c!19473 call!11736 (ite c!19478 call!11733 call!11735)))) (bvsgt (_1!1231 (h!2225 (toList!811 (ite c!19473 call!11736 (ite c!19478 call!11733 call!11735))))) (_1!1231 (ite (or c!19473 c!19478) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))))

(assert (=> b!111665 (= e!72584 e!72581)))

(declare-fun b!111666 () Bool)

(assert (=> b!111666 (= e!72581 call!11928)))

(declare-fun b!111667 () Bool)

(assert (=> b!111667 (= e!72583 (ite c!19935 (t!5767 (toList!811 (ite c!19473 call!11736 (ite c!19478 call!11733 call!11735)))) (ite c!19934 (Cons!1626 (h!2225 (toList!811 (ite c!19473 call!11736 (ite c!19478 call!11733 call!11735)))) (t!5767 (toList!811 (ite c!19473 call!11736 (ite c!19478 call!11733 call!11735))))) Nil!1627)))))

(declare-fun b!111661 () Bool)

(assert (=> b!111661 (= e!72583 (insertStrictlySorted!77 (t!5767 (toList!811 (ite c!19473 call!11736 (ite c!19478 call!11733 call!11735)))) (_1!1231 (ite (or c!19473 c!19478) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))) (_2!1231 (ite (or c!19473 c!19478) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))))))

(declare-fun d!31819 () Bool)

(assert (=> d!31819 e!72582))

(declare-fun res!55132 () Bool)

(assert (=> d!31819 (=> (not res!55132) (not e!72582))))

(assert (=> d!31819 (= res!55132 (isStrictlySorted!311 lt!57633))))

(assert (=> d!31819 (= lt!57633 e!72585)))

(assert (=> d!31819 (= c!19933 (and ((_ is Cons!1626) (toList!811 (ite c!19473 call!11736 (ite c!19478 call!11733 call!11735)))) (bvslt (_1!1231 (h!2225 (toList!811 (ite c!19473 call!11736 (ite c!19478 call!11733 call!11735))))) (_1!1231 (ite (or c!19473 c!19478) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))))))))

(assert (=> d!31819 (isStrictlySorted!311 (toList!811 (ite c!19473 call!11736 (ite c!19478 call!11733 call!11735))))))

(assert (=> d!31819 (= (insertStrictlySorted!77 (toList!811 (ite c!19473 call!11736 (ite c!19478 call!11733 call!11735))) (_1!1231 (ite (or c!19473 c!19478) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992)))))) (_2!1231 (ite (or c!19473 c!19478) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 (v!2930 (underlying!370 thiss!992)))) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2498 (v!2930 (underlying!370 thiss!992))))))) lt!57633)))

(assert (= (and d!31819 c!19933) b!111659))

(assert (= (and d!31819 (not c!19933)) b!111658))

(assert (= (and b!111658 c!19935) b!111660))

(assert (= (and b!111658 (not c!19935)) b!111665))

(assert (= (and b!111665 c!19934) b!111663))

(assert (= (and b!111665 (not c!19934)) b!111666))

(assert (= (or b!111663 b!111666) bm!11924))

(assert (= (or b!111660 bm!11924) bm!11923))

(assert (= (or b!111659 bm!11923) bm!11925))

(assert (= (and bm!11925 c!19936) b!111661))

(assert (= (and bm!11925 (not c!19936)) b!111667))

(assert (= (and d!31819 res!55132) b!111664))

(assert (= (and b!111664 res!55133) b!111662))

(declare-fun m!127493 () Bool)

(assert (=> b!111664 m!127493))

(declare-fun m!127495 () Bool)

(assert (=> b!111661 m!127495))

(declare-fun m!127497 () Bool)

(assert (=> b!111662 m!127497))

(declare-fun m!127499 () Bool)

(assert (=> d!31819 m!127499))

(declare-fun m!127501 () Bool)

(assert (=> d!31819 m!127501))

(declare-fun m!127503 () Bool)

(assert (=> bm!11925 m!127503))

(assert (=> d!30921 d!31819))

(assert (=> bm!11801 d!30907))

(assert (=> b!110366 d!31271))

(assert (=> b!110366 d!31273))

(declare-fun b!111669 () Bool)

(declare-fun res!55134 () Bool)

(declare-fun e!72586 () Bool)

(assert (=> b!111669 (=> (not res!55134) (not e!72586))))

(assert (=> b!111669 (= res!55134 (bvsge (size!2342 (_2!1230 lt!56590)) (_size!508 (_2!1230 lt!56590))))))

(declare-fun d!31821 () Bool)

(declare-fun res!55136 () Bool)

(assert (=> d!31821 (=> (not res!55136) (not e!72586))))

(assert (=> d!31821 (= res!55136 (validMask!0 (mask!6795 (_2!1230 lt!56590))))))

(assert (=> d!31821 (= (simpleValid!76 (_2!1230 lt!56590)) e!72586)))

(declare-fun b!111668 () Bool)

(declare-fun res!55137 () Bool)

(assert (=> b!111668 (=> (not res!55137) (not e!72586))))

(assert (=> b!111668 (= res!55137 (and (= (size!2339 (_values!2610 (_2!1230 lt!56590))) (bvadd (mask!6795 (_2!1230 lt!56590)) #b00000000000000000000000000000001)) (= (size!2338 (_keys!4341 (_2!1230 lt!56590))) (size!2339 (_values!2610 (_2!1230 lt!56590)))) (bvsge (_size!508 (_2!1230 lt!56590)) #b00000000000000000000000000000000) (bvsle (_size!508 (_2!1230 lt!56590)) (bvadd (mask!6795 (_2!1230 lt!56590)) #b00000000000000000000000000000001))))))

(declare-fun b!111671 () Bool)

(assert (=> b!111671 (= e!72586 (and (bvsge (extraKeys!2424 (_2!1230 lt!56590)) #b00000000000000000000000000000000) (bvsle (extraKeys!2424 (_2!1230 lt!56590)) #b00000000000000000000000000000011) (bvsge (_vacant!508 (_2!1230 lt!56590)) #b00000000000000000000000000000000)))))

(declare-fun b!111670 () Bool)

(declare-fun res!55135 () Bool)

(assert (=> b!111670 (=> (not res!55135) (not e!72586))))

(assert (=> b!111670 (= res!55135 (= (size!2342 (_2!1230 lt!56590)) (bvadd (_size!508 (_2!1230 lt!56590)) (bvsdiv (bvadd (extraKeys!2424 (_2!1230 lt!56590)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(assert (= (and d!31821 res!55136) b!111668))

(assert (= (and b!111668 res!55137) b!111669))

(assert (= (and b!111669 res!55134) b!111670))

(assert (= (and b!111670 res!55135) b!111671))

(declare-fun m!127505 () Bool)

(assert (=> b!111669 m!127505))

(assert (=> d!31821 m!127103))

(assert (=> b!111670 m!127505))

(assert (=> d!30919 d!31821))

(declare-fun d!31823 () Bool)

(assert (=> d!31823 (arrayContainsKey!0 (_keys!4341 newMap!16) lt!57073 #b00000000000000000000000000000000)))

(declare-fun lt!57634 () Unit!3403)

(assert (=> d!31823 (= lt!57634 (choose!13 (_keys!4341 newMap!16) lt!57073 #b00000000000000000000000000000000))))

(assert (=> d!31823 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!31823 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4341 newMap!16) lt!57073 #b00000000000000000000000000000000) lt!57634)))

(declare-fun bs!4609 () Bool)

(assert (= bs!4609 d!31823))

(assert (=> bs!4609 m!125465))

(declare-fun m!127507 () Bool)

(assert (=> bs!4609 m!127507))

(assert (=> b!110545 d!31823))

(declare-fun d!31825 () Bool)

(declare-fun res!55138 () Bool)

(declare-fun e!72587 () Bool)

(assert (=> d!31825 (=> res!55138 e!72587)))

(assert (=> d!31825 (= res!55138 (= (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000) lt!57073))))

(assert (=> d!31825 (= (arrayContainsKey!0 (_keys!4341 newMap!16) lt!57073 #b00000000000000000000000000000000) e!72587)))

(declare-fun b!111672 () Bool)

(declare-fun e!72588 () Bool)

(assert (=> b!111672 (= e!72587 e!72588)))

(declare-fun res!55139 () Bool)

(assert (=> b!111672 (=> (not res!55139) (not e!72588))))

(assert (=> b!111672 (= res!55139 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2338 (_keys!4341 newMap!16))))))

(declare-fun b!111673 () Bool)

(assert (=> b!111673 (= e!72588 (arrayContainsKey!0 (_keys!4341 newMap!16) lt!57073 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!31825 (not res!55138)) b!111672))

(assert (= (and b!111672 res!55139) b!111673))

(assert (=> d!31825 m!124693))

(declare-fun m!127509 () Bool)

(assert (=> b!111673 m!127509))

(assert (=> b!110545 d!31825))

(declare-fun b!111675 () Bool)

(declare-fun e!72590 () SeekEntryResult!261)

(declare-fun lt!57637 () SeekEntryResult!261)

(assert (=> b!111675 (= e!72590 (Found!261 (index!3196 lt!57637)))))

(declare-fun b!111676 () Bool)

(declare-fun e!72591 () SeekEntryResult!261)

(assert (=> b!111676 (= e!72591 (MissingZero!261 (index!3196 lt!57637)))))

(declare-fun b!111677 () Bool)

(declare-fun e!72589 () SeekEntryResult!261)

(assert (=> b!111677 (= e!72589 e!72590)))

(declare-fun lt!57636 () (_ BitVec 64))

(assert (=> b!111677 (= lt!57636 (select (arr!2081 (_keys!4341 newMap!16)) (index!3196 lt!57637)))))

(declare-fun c!19937 () Bool)

(assert (=> b!111677 (= c!19937 (= lt!57636 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!111678 () Bool)

(assert (=> b!111678 (= e!72589 Undefined!261)))

(declare-fun b!111679 () Bool)

(assert (=> b!111679 (= e!72591 (seekKeyOrZeroReturnVacant!0 (x!13949 lt!57637) (index!3196 lt!57637) (index!3196 lt!57637) (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000) (_keys!4341 newMap!16) (mask!6795 newMap!16)))))

(declare-fun d!31827 () Bool)

(declare-fun lt!57635 () SeekEntryResult!261)

(assert (=> d!31827 (and (or ((_ is Undefined!261) lt!57635) (not ((_ is Found!261) lt!57635)) (and (bvsge (index!3195 lt!57635) #b00000000000000000000000000000000) (bvslt (index!3195 lt!57635) (size!2338 (_keys!4341 newMap!16))))) (or ((_ is Undefined!261) lt!57635) ((_ is Found!261) lt!57635) (not ((_ is MissingZero!261) lt!57635)) (and (bvsge (index!3194 lt!57635) #b00000000000000000000000000000000) (bvslt (index!3194 lt!57635) (size!2338 (_keys!4341 newMap!16))))) (or ((_ is Undefined!261) lt!57635) ((_ is Found!261) lt!57635) ((_ is MissingZero!261) lt!57635) (not ((_ is MissingVacant!261) lt!57635)) (and (bvsge (index!3197 lt!57635) #b00000000000000000000000000000000) (bvslt (index!3197 lt!57635) (size!2338 (_keys!4341 newMap!16))))) (or ((_ is Undefined!261) lt!57635) (ite ((_ is Found!261) lt!57635) (= (select (arr!2081 (_keys!4341 newMap!16)) (index!3195 lt!57635)) (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!261) lt!57635) (= (select (arr!2081 (_keys!4341 newMap!16)) (index!3194 lt!57635)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!261) lt!57635) (= (select (arr!2081 (_keys!4341 newMap!16)) (index!3197 lt!57635)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!31827 (= lt!57635 e!72589)))

(declare-fun c!19938 () Bool)

(assert (=> d!31827 (= c!19938 (and ((_ is Intermediate!261) lt!57637) (undefined!1073 lt!57637)))))

(assert (=> d!31827 (= lt!57637 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000) (mask!6795 newMap!16)) (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000) (_keys!4341 newMap!16) (mask!6795 newMap!16)))))

(assert (=> d!31827 (validMask!0 (mask!6795 newMap!16))))

(assert (=> d!31827 (= (seekEntryOrOpen!0 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000) (_keys!4341 newMap!16) (mask!6795 newMap!16)) lt!57635)))

(declare-fun b!111674 () Bool)

(declare-fun c!19939 () Bool)

(assert (=> b!111674 (= c!19939 (= lt!57636 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!111674 (= e!72590 e!72591)))

(assert (= (and d!31827 c!19938) b!111678))

(assert (= (and d!31827 (not c!19938)) b!111677))

(assert (= (and b!111677 c!19937) b!111675))

(assert (= (and b!111677 (not c!19937)) b!111674))

(assert (= (and b!111674 c!19939) b!111676))

(assert (= (and b!111674 (not c!19939)) b!111679))

(declare-fun m!127511 () Bool)

(assert (=> b!111677 m!127511))

(assert (=> b!111679 m!124693))

(declare-fun m!127513 () Bool)

(assert (=> b!111679 m!127513))

(declare-fun m!127515 () Bool)

(assert (=> d!31827 m!127515))

(declare-fun m!127517 () Bool)

(assert (=> d!31827 m!127517))

(assert (=> d!31827 m!124669))

(declare-fun m!127519 () Bool)

(assert (=> d!31827 m!127519))

(declare-fun m!127521 () Bool)

(assert (=> d!31827 m!127521))

(assert (=> d!31827 m!124693))

(declare-fun m!127523 () Bool)

(assert (=> d!31827 m!127523))

(assert (=> d!31827 m!124693))

(assert (=> d!31827 m!127521))

(assert (=> b!110545 d!31827))

(assert (=> b!110374 d!31265))

(assert (=> b!110374 d!31267))

(declare-fun d!31829 () Bool)

(assert (=> d!31829 (= (+!150 (getCurrentListMap!496 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458)) (getCurrentListMap!496 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) lt!56577 (zeroValue!2498 newMap!16) lt!56458 #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(assert (=> d!31829 true))

(declare-fun _$8!100 () Unit!3403)

(assert (=> d!31829 (= (choose!689 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) lt!56577 (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) lt!56458 (defaultEntry!2627 newMap!16)) _$8!100)))

(declare-fun bs!4610 () Bool)

(assert (= bs!4610 d!31829))

(assert (=> bs!4610 m!124485))

(assert (=> bs!4610 m!124485))

(assert (=> bs!4610 m!124837))

(assert (=> bs!4610 m!124839))

(assert (=> d!30909 d!31829))

(assert (=> d!30909 d!30931))

(declare-fun b!111680 () Bool)

(declare-fun c!19941 () Bool)

(assert (=> b!111680 (= c!19941 (and (not (= (bvand lt!56577 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!56577 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!72595 () ListLongMap!1591)

(declare-fun e!72600 () ListLongMap!1591)

(assert (=> b!111680 (= e!72595 e!72600)))

(declare-fun bm!11926 () Bool)

(declare-fun call!11929 () ListLongMap!1591)

(declare-fun call!11932 () ListLongMap!1591)

(assert (=> bm!11926 (= call!11929 call!11932)))

(declare-fun b!111681 () Bool)

(declare-fun e!72598 () Bool)

(declare-fun e!72592 () Bool)

(assert (=> b!111681 (= e!72598 e!72592)))

(declare-fun res!55142 () Bool)

(assert (=> b!111681 (=> (not res!55142) (not e!72592))))

(declare-fun lt!57652 () ListLongMap!1591)

(assert (=> b!111681 (= res!55142 (contains!838 lt!57652 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!111681 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))))))

(declare-fun b!111682 () Bool)

(declare-fun e!72593 () Bool)

(declare-fun e!72604 () Bool)

(assert (=> b!111682 (= e!72593 e!72604)))

(declare-fun res!55140 () Bool)

(declare-fun call!11935 () Bool)

(assert (=> b!111682 (= res!55140 call!11935)))

(assert (=> b!111682 (=> (not res!55140) (not e!72604))))

(declare-fun b!111683 () Bool)

(declare-fun e!72602 () ListLongMap!1591)

(assert (=> b!111683 (= e!72602 e!72595)))

(declare-fun c!19945 () Bool)

(assert (=> b!111683 (= c!19945 (and (not (= (bvand lt!56577 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!56577 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!111684 () Bool)

(declare-fun e!72603 () Unit!3403)

(declare-fun Unit!3480 () Unit!3403)

(assert (=> b!111684 (= e!72603 Unit!3480)))

(declare-fun b!111685 () Bool)

(declare-fun e!72599 () Bool)

(declare-fun call!11930 () Bool)

(assert (=> b!111685 (= e!72599 (not call!11930))))

(declare-fun bm!11927 () Bool)

(assert (=> bm!11927 (= call!11932 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) lt!56577 (zeroValue!2498 newMap!16) lt!56458 #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun b!111686 () Bool)

(assert (=> b!111686 (= e!72604 (= (apply!100 lt!57652 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2498 newMap!16)))))

(declare-fun b!111687 () Bool)

(declare-fun call!11934 () ListLongMap!1591)

(assert (=> b!111687 (= e!72602 (+!150 call!11934 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458)))))

(declare-fun b!111688 () Bool)

(declare-fun lt!57653 () Unit!3403)

(assert (=> b!111688 (= e!72603 lt!57653)))

(declare-fun lt!57648 () ListLongMap!1591)

(assert (=> b!111688 (= lt!57648 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) lt!56577 (zeroValue!2498 newMap!16) lt!56458 #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!57647 () (_ BitVec 64))

(assert (=> b!111688 (= lt!57647 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57650 () (_ BitVec 64))

(assert (=> b!111688 (= lt!57650 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!57655 () Unit!3403)

(assert (=> b!111688 (= lt!57655 (addStillContains!76 lt!57648 lt!57647 (zeroValue!2498 newMap!16) lt!57650))))

(assert (=> b!111688 (contains!838 (+!150 lt!57648 (tuple2!2441 lt!57647 (zeroValue!2498 newMap!16))) lt!57650)))

(declare-fun lt!57639 () Unit!3403)

(assert (=> b!111688 (= lt!57639 lt!57655)))

(declare-fun lt!57651 () ListLongMap!1591)

(assert (=> b!111688 (= lt!57651 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) lt!56577 (zeroValue!2498 newMap!16) lt!56458 #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!57642 () (_ BitVec 64))

(assert (=> b!111688 (= lt!57642 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57649 () (_ BitVec 64))

(assert (=> b!111688 (= lt!57649 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!57657 () Unit!3403)

(assert (=> b!111688 (= lt!57657 (addApplyDifferent!76 lt!57651 lt!57642 lt!56458 lt!57649))))

(assert (=> b!111688 (= (apply!100 (+!150 lt!57651 (tuple2!2441 lt!57642 lt!56458)) lt!57649) (apply!100 lt!57651 lt!57649))))

(declare-fun lt!57641 () Unit!3403)

(assert (=> b!111688 (= lt!57641 lt!57657)))

(declare-fun lt!57645 () ListLongMap!1591)

(assert (=> b!111688 (= lt!57645 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) lt!56577 (zeroValue!2498 newMap!16) lt!56458 #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!57638 () (_ BitVec 64))

(assert (=> b!111688 (= lt!57638 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57656 () (_ BitVec 64))

(assert (=> b!111688 (= lt!57656 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!57654 () Unit!3403)

(assert (=> b!111688 (= lt!57654 (addApplyDifferent!76 lt!57645 lt!57638 (zeroValue!2498 newMap!16) lt!57656))))

(assert (=> b!111688 (= (apply!100 (+!150 lt!57645 (tuple2!2441 lt!57638 (zeroValue!2498 newMap!16))) lt!57656) (apply!100 lt!57645 lt!57656))))

(declare-fun lt!57644 () Unit!3403)

(assert (=> b!111688 (= lt!57644 lt!57654)))

(declare-fun lt!57658 () ListLongMap!1591)

(assert (=> b!111688 (= lt!57658 (getCurrentListMapNoExtraKeys!116 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) lt!56577 (zeroValue!2498 newMap!16) lt!56458 #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)))))

(declare-fun lt!57643 () (_ BitVec 64))

(assert (=> b!111688 (= lt!57643 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57646 () (_ BitVec 64))

(assert (=> b!111688 (= lt!57646 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!111688 (= lt!57653 (addApplyDifferent!76 lt!57658 lt!57643 lt!56458 lt!57646))))

(assert (=> b!111688 (= (apply!100 (+!150 lt!57658 (tuple2!2441 lt!57643 lt!56458)) lt!57646) (apply!100 lt!57658 lt!57646))))

(declare-fun b!111689 () Bool)

(declare-fun res!55144 () Bool)

(declare-fun e!72601 () Bool)

(assert (=> b!111689 (=> (not res!55144) (not e!72601))))

(assert (=> b!111689 (= res!55144 e!72593)))

(declare-fun c!19944 () Bool)

(assert (=> b!111689 (= c!19944 (not (= (bvand lt!56577 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!111690 () Bool)

(declare-fun e!72594 () Bool)

(assert (=> b!111690 (= e!72594 (validKeyInArray!0 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!111691 () Bool)

(declare-fun e!72597 () Bool)

(assert (=> b!111691 (= e!72597 (= (apply!100 lt!57652 #b1000000000000000000000000000000000000000000000000000000000000000) lt!56458))))

(declare-fun bm!11928 () Bool)

(assert (=> bm!11928 (= call!11930 (contains!838 lt!57652 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!111692 () Bool)

(assert (=> b!111692 (= e!72599 e!72597)))

(declare-fun res!55141 () Bool)

(assert (=> b!111692 (= res!55141 call!11930)))

(assert (=> b!111692 (=> (not res!55141) (not e!72597))))

(declare-fun bm!11929 () Bool)

(declare-fun c!19940 () Bool)

(declare-fun call!11931 () ListLongMap!1591)

(assert (=> bm!11929 (= call!11934 (+!150 (ite c!19940 call!11932 (ite c!19945 call!11929 call!11931)) (ite (or c!19940 c!19945) (tuple2!2441 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2498 newMap!16)) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458))))))

(declare-fun b!111693 () Bool)

(declare-fun call!11933 () ListLongMap!1591)

(assert (=> b!111693 (= e!72595 call!11933)))

(declare-fun d!31831 () Bool)

(assert (=> d!31831 e!72601))

(declare-fun res!55147 () Bool)

(assert (=> d!31831 (=> (not res!55147) (not e!72601))))

(assert (=> d!31831 (= res!55147 (or (bvsge #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))))))))

(declare-fun lt!57659 () ListLongMap!1591)

(assert (=> d!31831 (= lt!57652 lt!57659)))

(declare-fun lt!57640 () Unit!3403)

(assert (=> d!31831 (= lt!57640 e!72603)))

(declare-fun c!19942 () Bool)

(declare-fun e!72596 () Bool)

(assert (=> d!31831 (= c!19942 e!72596)))

(declare-fun res!55143 () Bool)

(assert (=> d!31831 (=> (not res!55143) (not e!72596))))

(assert (=> d!31831 (= res!55143 (bvslt #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))))))

(assert (=> d!31831 (= lt!57659 e!72602)))

(assert (=> d!31831 (= c!19940 (and (not (= (bvand lt!56577 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!56577 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!31831 (validMask!0 (mask!6795 newMap!16))))

(assert (=> d!31831 (= (getCurrentListMap!496 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) lt!56577 (zeroValue!2498 newMap!16) lt!56458 #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) lt!57652)))

(declare-fun b!111694 () Bool)

(assert (=> b!111694 (= e!72600 call!11933)))

(declare-fun b!111695 () Bool)

(assert (=> b!111695 (= e!72592 (= (apply!100 lt!57652 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)) (get!1347 (select (arr!2082 (_values!2610 newMap!16)) #b00000000000000000000000000000000) (dynLambda!390 (defaultEntry!2627 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!111695 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2339 (_values!2610 newMap!16))))))

(assert (=> b!111695 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))))))

(declare-fun b!111696 () Bool)

(assert (=> b!111696 (= e!72600 call!11931)))

(declare-fun bm!11930 () Bool)

(assert (=> bm!11930 (= call!11931 call!11929)))

(declare-fun b!111697 () Bool)

(declare-fun res!55148 () Bool)

(assert (=> b!111697 (=> (not res!55148) (not e!72601))))

(assert (=> b!111697 (= res!55148 e!72598)))

(declare-fun res!55145 () Bool)

(assert (=> b!111697 (=> res!55145 e!72598)))

(assert (=> b!111697 (= res!55145 (not e!72594))))

(declare-fun res!55146 () Bool)

(assert (=> b!111697 (=> (not res!55146) (not e!72594))))

(assert (=> b!111697 (= res!55146 (bvslt #b00000000000000000000000000000000 (size!2338 (_keys!4341 newMap!16))))))

(declare-fun bm!11931 () Bool)

(assert (=> bm!11931 (= call!11933 call!11934)))

(declare-fun b!111698 () Bool)

(assert (=> b!111698 (= e!72596 (validKeyInArray!0 (select (arr!2081 (_keys!4341 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!111699 () Bool)

(assert (=> b!111699 (= e!72601 e!72599)))

(declare-fun c!19943 () Bool)

(assert (=> b!111699 (= c!19943 (not (= (bvand lt!56577 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!111700 () Bool)

(assert (=> b!111700 (= e!72593 (not call!11935))))

(declare-fun bm!11932 () Bool)

(assert (=> bm!11932 (= call!11935 (contains!838 lt!57652 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!31831 c!19940) b!111687))

(assert (= (and d!31831 (not c!19940)) b!111683))

(assert (= (and b!111683 c!19945) b!111693))

(assert (= (and b!111683 (not c!19945)) b!111680))

(assert (= (and b!111680 c!19941) b!111694))

(assert (= (and b!111680 (not c!19941)) b!111696))

(assert (= (or b!111694 b!111696) bm!11930))

(assert (= (or b!111693 bm!11930) bm!11926))

(assert (= (or b!111693 b!111694) bm!11931))

(assert (= (or b!111687 bm!11926) bm!11927))

(assert (= (or b!111687 bm!11931) bm!11929))

(assert (= (and d!31831 res!55143) b!111698))

(assert (= (and d!31831 c!19942) b!111688))

(assert (= (and d!31831 (not c!19942)) b!111684))

(assert (= (and d!31831 res!55147) b!111697))

(assert (= (and b!111697 res!55146) b!111690))

(assert (= (and b!111697 (not res!55145)) b!111681))

(assert (= (and b!111681 res!55142) b!111695))

(assert (= (and b!111697 res!55148) b!111689))

(assert (= (and b!111689 c!19944) b!111682))

(assert (= (and b!111689 (not c!19944)) b!111700))

(assert (= (and b!111682 res!55140) b!111686))

(assert (= (or b!111682 b!111700) bm!11932))

(assert (= (and b!111689 res!55144) b!111699))

(assert (= (and b!111699 c!19943) b!111692))

(assert (= (and b!111699 (not c!19943)) b!111685))

(assert (= (and b!111692 res!55141) b!111691))

(assert (= (or b!111692 b!111685) bm!11928))

(declare-fun b_lambda!4983 () Bool)

(assert (=> (not b_lambda!4983) (not b!111695)))

(assert (=> b!111695 t!5774))

(declare-fun b_and!6863 () Bool)

(assert (= b_and!6859 (and (=> t!5774 result!3537) b_and!6863)))

(assert (=> b!111695 t!5776))

(declare-fun b_and!6865 () Bool)

(assert (= b_and!6861 (and (=> t!5776 result!3539) b_and!6865)))

(declare-fun m!127525 () Bool)

(assert (=> bm!11928 m!127525))

(declare-fun m!127527 () Bool)

(assert (=> b!111691 m!127527))

(assert (=> b!111690 m!124693))

(assert (=> b!111690 m!124693))

(assert (=> b!111690 m!124695))

(assert (=> b!111681 m!124693))

(assert (=> b!111681 m!124693))

(declare-fun m!127529 () Bool)

(assert (=> b!111681 m!127529))

(declare-fun m!127531 () Bool)

(assert (=> b!111688 m!127531))

(declare-fun m!127533 () Bool)

(assert (=> b!111688 m!127533))

(declare-fun m!127535 () Bool)

(assert (=> b!111688 m!127535))

(assert (=> b!111688 m!127531))

(declare-fun m!127537 () Bool)

(assert (=> b!111688 m!127537))

(declare-fun m!127539 () Bool)

(assert (=> b!111688 m!127539))

(assert (=> b!111688 m!127539))

(declare-fun m!127541 () Bool)

(assert (=> b!111688 m!127541))

(declare-fun m!127543 () Bool)

(assert (=> b!111688 m!127543))

(assert (=> b!111688 m!124693))

(declare-fun m!127545 () Bool)

(assert (=> b!111688 m!127545))

(declare-fun m!127547 () Bool)

(assert (=> b!111688 m!127547))

(declare-fun m!127549 () Bool)

(assert (=> b!111688 m!127549))

(declare-fun m!127551 () Bool)

(assert (=> b!111688 m!127551))

(assert (=> b!111688 m!127547))

(declare-fun m!127553 () Bool)

(assert (=> b!111688 m!127553))

(declare-fun m!127555 () Bool)

(assert (=> b!111688 m!127555))

(assert (=> b!111688 m!127537))

(declare-fun m!127557 () Bool)

(assert (=> b!111688 m!127557))

(declare-fun m!127559 () Bool)

(assert (=> b!111688 m!127559))

(declare-fun m!127561 () Bool)

(assert (=> b!111688 m!127561))

(assert (=> d!31831 m!124669))

(assert (=> b!111695 m!124953))

(assert (=> b!111695 m!124733))

(assert (=> b!111695 m!124953))

(assert (=> b!111695 m!124733))

(assert (=> b!111695 m!124955))

(assert (=> b!111695 m!124693))

(declare-fun m!127563 () Bool)

(assert (=> b!111695 m!127563))

(assert (=> b!111695 m!124693))

(assert (=> bm!11927 m!127559))

(assert (=> b!111698 m!124693))

(assert (=> b!111698 m!124693))

(assert (=> b!111698 m!124695))

(declare-fun m!127565 () Bool)

(assert (=> bm!11929 m!127565))

(declare-fun m!127567 () Bool)

(assert (=> b!111687 m!127567))

(declare-fun m!127569 () Bool)

(assert (=> bm!11932 m!127569))

(declare-fun m!127571 () Bool)

(assert (=> b!111686 m!127571))

(assert (=> d!30909 d!31831))

(declare-fun d!31833 () Bool)

(declare-fun e!72605 () Bool)

(assert (=> d!31833 e!72605))

(declare-fun res!55149 () Bool)

(assert (=> d!31833 (=> (not res!55149) (not e!72605))))

(declare-fun lt!57662 () ListLongMap!1591)

(assert (=> d!31833 (= res!55149 (contains!838 lt!57662 (_1!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458))))))

(declare-fun lt!57661 () List!1630)

(assert (=> d!31833 (= lt!57662 (ListLongMap!1592 lt!57661))))

(declare-fun lt!57663 () Unit!3403)

(declare-fun lt!57660 () Unit!3403)

(assert (=> d!31833 (= lt!57663 lt!57660)))

(assert (=> d!31833 (= (getValueByKey!158 lt!57661 (_1!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458))) (Some!163 (_2!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458))))))

(assert (=> d!31833 (= lt!57660 (lemmaContainsTupThenGetReturnValue!74 lt!57661 (_1!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458)) (_2!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458))))))

(assert (=> d!31833 (= lt!57661 (insertStrictlySorted!77 (toList!811 (getCurrentListMap!496 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16))) (_1!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458)) (_2!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458))))))

(assert (=> d!31833 (= (+!150 (getCurrentListMap!496 (_keys!4341 newMap!16) (_values!2610 newMap!16) (mask!6795 newMap!16) (extraKeys!2424 newMap!16) (zeroValue!2498 newMap!16) (minValue!2498 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2627 newMap!16)) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458)) lt!57662)))

(declare-fun b!111701 () Bool)

(declare-fun res!55150 () Bool)

(assert (=> b!111701 (=> (not res!55150) (not e!72605))))

(assert (=> b!111701 (= res!55150 (= (getValueByKey!158 (toList!811 lt!57662) (_1!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458))) (Some!163 (_2!1231 (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458)))))))

(declare-fun b!111702 () Bool)

(assert (=> b!111702 (= e!72605 (contains!839 (toList!811 lt!57662) (tuple2!2441 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56458)))))

(assert (= (and d!31833 res!55149) b!111701))

(assert (= (and b!111701 res!55150) b!111702))

(declare-fun m!127573 () Bool)

(assert (=> d!31833 m!127573))

(declare-fun m!127575 () Bool)

(assert (=> d!31833 m!127575))

(declare-fun m!127577 () Bool)

(assert (=> d!31833 m!127577))

(declare-fun m!127579 () Bool)

(assert (=> d!31833 m!127579))

(declare-fun m!127581 () Bool)

(assert (=> b!111701 m!127581))

(declare-fun m!127583 () Bool)

(assert (=> b!111702 m!127583))

(assert (=> d!30909 d!31833))

(assert (=> d!30909 d!31129))

(declare-fun b!111704 () Bool)

(declare-fun e!72606 () Bool)

(assert (=> b!111704 (= e!72606 tp_is_empty!2697)))

(declare-fun b!111703 () Bool)

(declare-fun e!72607 () Bool)

(assert (=> b!111703 (= e!72607 tp_is_empty!2697)))

(declare-fun mapNonEmpty!4013 () Bool)

(declare-fun mapRes!4013 () Bool)

(declare-fun tp!10043 () Bool)

(assert (=> mapNonEmpty!4013 (= mapRes!4013 (and tp!10043 e!72607))))

(declare-fun mapRest!4013 () (Array (_ BitVec 32) ValueCell!1005))

(declare-fun mapKey!4013 () (_ BitVec 32))

(declare-fun mapValue!4013 () ValueCell!1005)

(assert (=> mapNonEmpty!4013 (= mapRest!4011 (store mapRest!4013 mapKey!4013 mapValue!4013))))

(declare-fun condMapEmpty!4013 () Bool)

(declare-fun mapDefault!4013 () ValueCell!1005)

(assert (=> mapNonEmpty!4011 (= condMapEmpty!4013 (= mapRest!4011 ((as const (Array (_ BitVec 32) ValueCell!1005)) mapDefault!4013)))))

(assert (=> mapNonEmpty!4011 (= tp!10041 (and e!72606 mapRes!4013))))

(declare-fun mapIsEmpty!4013 () Bool)

(assert (=> mapIsEmpty!4013 mapRes!4013))

(assert (= (and mapNonEmpty!4011 condMapEmpty!4013) mapIsEmpty!4013))

(assert (= (and mapNonEmpty!4011 (not condMapEmpty!4013)) mapNonEmpty!4013))

(assert (= (and mapNonEmpty!4013 ((_ is ValueCellFull!1005) mapValue!4013)) b!111703))

(assert (= (and mapNonEmpty!4011 ((_ is ValueCellFull!1005) mapDefault!4013)) b!111704))

(declare-fun m!127585 () Bool)

(assert (=> mapNonEmpty!4013 m!127585))

(declare-fun b!111706 () Bool)

(declare-fun e!72608 () Bool)

(assert (=> b!111706 (= e!72608 tp_is_empty!2697)))

(declare-fun b!111705 () Bool)

(declare-fun e!72609 () Bool)

(assert (=> b!111705 (= e!72609 tp_is_empty!2697)))

(declare-fun mapNonEmpty!4014 () Bool)

(declare-fun mapRes!4014 () Bool)

(declare-fun tp!10044 () Bool)

(assert (=> mapNonEmpty!4014 (= mapRes!4014 (and tp!10044 e!72609))))

(declare-fun mapValue!4014 () ValueCell!1005)

(declare-fun mapRest!4014 () (Array (_ BitVec 32) ValueCell!1005))

(declare-fun mapKey!4014 () (_ BitVec 32))

(assert (=> mapNonEmpty!4014 (= mapRest!4012 (store mapRest!4014 mapKey!4014 mapValue!4014))))

(declare-fun condMapEmpty!4014 () Bool)

(declare-fun mapDefault!4014 () ValueCell!1005)

(assert (=> mapNonEmpty!4012 (= condMapEmpty!4014 (= mapRest!4012 ((as const (Array (_ BitVec 32) ValueCell!1005)) mapDefault!4014)))))

(assert (=> mapNonEmpty!4012 (= tp!10042 (and e!72608 mapRes!4014))))

(declare-fun mapIsEmpty!4014 () Bool)

(assert (=> mapIsEmpty!4014 mapRes!4014))

(assert (= (and mapNonEmpty!4012 condMapEmpty!4014) mapIsEmpty!4014))

(assert (= (and mapNonEmpty!4012 (not condMapEmpty!4014)) mapNonEmpty!4014))

(assert (= (and mapNonEmpty!4014 ((_ is ValueCellFull!1005) mapValue!4014)) b!111705))

(assert (= (and mapNonEmpty!4012 ((_ is ValueCellFull!1005) mapDefault!4014)) b!111706))

(declare-fun m!127587 () Bool)

(assert (=> mapNonEmpty!4014 m!127587))

(declare-fun b_lambda!4985 () Bool)

(assert (= b_lambda!4965 (or (and b!109701 b_free!2561 (= (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) (defaultEntry!2627 newMap!16))) (and b!109708 b_free!2563) b_lambda!4985)))

(declare-fun b_lambda!4987 () Bool)

(assert (= b_lambda!4971 (or (and b!109701 b_free!2561) (and b!109708 b_free!2563 (= (defaultEntry!2627 newMap!16) (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))))) b_lambda!4987)))

(declare-fun b_lambda!4989 () Bool)

(assert (= b_lambda!4977 (or (and b!109701 b_free!2561 (= (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) (defaultEntry!2627 newMap!16))) (and b!109708 b_free!2563) b_lambda!4989)))

(declare-fun b_lambda!4991 () Bool)

(assert (= b_lambda!4963 (or (and b!109701 b_free!2561 (= (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) (defaultEntry!2627 newMap!16))) (and b!109708 b_free!2563) b_lambda!4991)))

(declare-fun b_lambda!4993 () Bool)

(assert (= b_lambda!4969 (or (and b!109701 b_free!2561) (and b!109708 b_free!2563 (= (defaultEntry!2627 newMap!16) (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))))) b_lambda!4993)))

(declare-fun b_lambda!4995 () Bool)

(assert (= b_lambda!4981 (or (and b!109701 b_free!2561 (= (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) (defaultEntry!2627 newMap!16))) (and b!109708 b_free!2563) b_lambda!4995)))

(declare-fun b_lambda!4997 () Bool)

(assert (= b_lambda!4973 (or (and b!109701 b_free!2561 (= (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) (defaultEntry!2627 newMap!16))) (and b!109708 b_free!2563) b_lambda!4997)))

(declare-fun b_lambda!4999 () Bool)

(assert (= b_lambda!4961 (or (and b!109701 b_free!2561 (= (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) (defaultEntry!2627 newMap!16))) (and b!109708 b_free!2563) b_lambda!4999)))

(declare-fun b_lambda!5001 () Bool)

(assert (= b_lambda!4967 (or (and b!109701 b_free!2561 (= (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) (defaultEntry!2627 newMap!16))) (and b!109708 b_free!2563) b_lambda!5001)))

(declare-fun b_lambda!5003 () Bool)

(assert (= b_lambda!4955 (or (and b!109701 b_free!2561 (= (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) (defaultEntry!2627 newMap!16))) (and b!109708 b_free!2563) b_lambda!5003)))

(declare-fun b_lambda!5005 () Bool)

(assert (= b_lambda!4957 (or (and b!109701 b_free!2561 (= (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) (defaultEntry!2627 newMap!16))) (and b!109708 b_free!2563) b_lambda!5005)))

(declare-fun b_lambda!5007 () Bool)

(assert (= b_lambda!4983 (or (and b!109701 b_free!2561 (= (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) (defaultEntry!2627 newMap!16))) (and b!109708 b_free!2563) b_lambda!5007)))

(declare-fun b_lambda!5009 () Bool)

(assert (= b_lambda!4959 (or (and b!109701 b_free!2561 (= (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) (defaultEntry!2627 newMap!16))) (and b!109708 b_free!2563) b_lambda!5009)))

(declare-fun b_lambda!5011 () Bool)

(assert (= b_lambda!4975 (or (and b!109701 b_free!2561 (= (defaultEntry!2627 (v!2930 (underlying!370 thiss!992))) (defaultEntry!2627 newMap!16))) (and b!109708 b_free!2563) b_lambda!5011)))

(check-sat (not b!111516) (not bm!11927) (not b!110855) (not d!31521) (not d!31547) (not b!110996) (not b!110577) (not d!31231) (not d!31193) (not b!110837) (not b!111642) (not d!31619) (not b!110555) (not b!111141) (not d!31631) (not b!110872) (not b!110932) (not d!31417) (not b!110881) (not b!111344) (not b_lambda!4947) (not b!110889) (not b!111695) (not d!31237) (not b!111243) (not b!111004) (not bm!11870) (not b!111144) (not b!111608) (not d!31779) (not b!110801) (not b!111235) (not b!110558) (not b!110829) (not b!111315) (not b!111090) (not b!111402) (not d!31471) (not bm!11848) (not d!31655) (not b!111246) (not d!31737) (not b!110655) (not d!31743) (not bm!11911) (not b!111330) (not d!31207) (not b!111112) (not b!111176) (not b!111226) (not b!111476) (not d!31611) (not bm!11820) (not b!111688) (not d!31141) (not b!111055) (not b!111185) (not b!110815) (not d!31777) (not b!111238) (not bm!11915) (not d!31455) (not b!110928) (not b!110839) (not b!111119) (not bm!11832) (not b!110894) (not d!31333) (not b!110657) (not d!31263) (not bm!11886) (not d!31271) (not b_next!2561) (not b!111044) (not b!110775) (not b!111679) (not d!31569) (not bm!11904) (not d!31529) (not b!111480) (not b!111150) (not bm!11913) (not b!111075) (not b!111215) (not b!111365) (not b!111549) (not b!111526) b_and!6863 (not b!111314) (not d!31677) (not d!31703) (not b!110972) (not d!31097) (not b!111060) (not mapNonEmpty!4013) (not b!111096) (not b!111068) (not d!31439) (not b!111011) (not b!111593) (not b!111318) (not b!111289) (not d!31649) (not d!31347) (not b!110568) (not b!110628) (not b_lambda!4951) (not d!31561) (not bm!11890) (not d!31623) (not b!110878) (not d!31697) (not d!31761) (not b!111531) (not b!110827) (not b!110623) (not d!31769) (not d!31809) (not b!111468) (not d!31211) (not d!31675) (not b!111275) (not d!31753) (not d!31457) (not b!110566) (not b!111574) (not b!111024) (not b!110922) (not bm!11828) (not b!110781) (not b!110944) (not b!111436) (not b!110840) (not b!110993) (not b!110920) (not b!111673) (not b!111383) (not d!31481) (not b!111643) (not d!31301) (not b!110999) (not d!31749) (not d!31215) tp_is_empty!2697 (not d!31133) (not b!110650) (not b!111624) (not b!111398) (not b!111269) (not bm!11914) (not b!111638) (not b!111102) (not b_lambda!4997) (not d!31225) (not d!31817) (not d!31087) (not d!31199) (not bm!11893) (not d!31771) (not d!31305) (not b!110606) (not b!110617) (not d!31503) (not b!111072) (not d!31297) (not d!31409) (not bm!11922) (not b!111568) (not d!31833) (not b!111375) (not b!111208) (not b!111025) (not b!111328) (not b!111065) (not d!31157) (not b!111054) (not d!31219) (not b!110758) (not b!111575) (not bm!11813) (not d!31603) (not bm!11873) (not b!111288) (not d!31821) (not b!111058) (not d!31341) (not b!111594) (not b!111600) (not d!31187) (not d!31295) (not b!110658) (not b!110613) (not d!31339) (not b!111207) (not b!111153) (not d!31265) (not b!111488) (not bm!11849) (not d!31407) (not b!111419) (not d!31275) (not b!110780) (not b!111603) (not bm!11857) (not b!110907) (not b!111342) (not b!110662) (not b!110942) (not b!110742) (not b!110745) (not b!111651) (not b!111469) (not b!111360) (not d!31285) (not d!31379) (not b!110769) (not b!110584) (not b!111559) (not d!31459) (not b!111389) (not d!31827) (not d!31475) (not b_lambda!4949) (not d!31269) (not d!31823) (not b!111585) (not b!110930) (not b!111517) (not bm!11918) (not b!110600) (not b!110630) (not b!110759) (not b!111310) (not b!111264) (not d!31733) (not b!110563) (not d!31643) (not d!31535) (not d!31699) (not b!111032) (not bm!11900) (not b!111103) (not b!111125) (not b!111370) (not b!111037) (not b!110767) (not bm!11932) (not mapNonEmpty!4014) (not b!110569) (not b!111602) (not d!31227) (not d!31223) (not b!111607) (not b!110740) (not b!110877) (not b!110614) (not d!31203) (not b!111159) (not b!111432) (not b!110832) (not bm!11860) (not d!31831) (not bm!11877) (not d!31799) (not b!111000) (not d!31803) (not b!111188) (not b!111274) (not b!111009) (not b!110635) (not d!31739) (not b!111262) (not d!31447) (not bm!11824) (not d!31621) (not b_next!2563) (not b!111606) (not b!110845) (not b!111573) (not d!31433) (not b!110918) (not b!110670) (not d!31453) (not bm!11867) (not b!110908) (not b!111397) (not d!31533) (not b!110770) (not b!111669) (not d!31629) (not d!31113) (not b!111195) (not b!111550) (not b!111291) (not b_lambda!5003) (not b!111434) (not b!111249) (not d!31783) (not d!31119) (not b!111551) (not b!111362) (not b!111414) (not bm!11902) (not d!31609) (not b!110598) (not b!110783) (not d!31705) (not b!110865) (not b!110753) (not b!111302) (not b!111616) (not b!110816) (not b_lambda!4989) (not b!111380) (not b!111372) (not b!111629) (not b!111495) (not d!31765) (not bm!11829) (not d!31549) (not d!31255) (not d!31111) (not d!31707) (not b!110869) (not b!110962) (not b!111416) (not b!111637) (not b!111015) (not b!111124) (not b!111349) (not b!111297) (not d!31399) (not b!111649) (not b!111605) (not bm!11809) (not b!111166) (not b!111698) (not b!111459) (not b!111241) (not b!111339) (not b!110852) (not d!31449) (not b!110956) (not b!111626) (not d!31607) (not b!111098) (not b!111177) (not b!111353) (not b!111490) (not b!111589) (not b!111216) (not d!31713) (not bm!11806) (not b!110954) (not b!110857) (not d!31075) (not b!111106) (not d!31241) (not b!111687) (not d!31175) (not b!110899) b_and!6865 (not b!111133) (not b!111409) (not d!31493) (not b!111556) (not b!111305) (not b!111661) (not b!111599) (not b!110916) (not d!31355) (not d!31249) (not d!31411) (not d!31367) (not d!31473) (not d!31125) (not b_lambda!4933) (not bm!11844) (not b!111114) (not bm!11925) (not b!111464) (not b!111171) (not d!31491) (not b_lambda!4993) (not bm!11847) (not d!31625) (not b!110811) (not b!111401) (not b!111361) (not d!31829) (not b_lambda!4985) (not b_lambda!4979) (not b!111421) (not b!110580) (not b!111041) (not bm!11839) (not b!110648) (not b!110556) (not b!110664) (not b!110560) (not d!31445) (not b!111595) (not b!110910) (not b!111021) (not b!110612) (not b!110863) (not b!111157) (not b!111284) (not d!31813) (not b!110992) (not b!111083) (not d!31805) (not d!31811) (not b!110940) (not b!111670) (not b!111136) (not b!111127) (not d!31195) (not d!31391) (not b!111138) (not bm!11864) (not b!111082) (not d!31515) (not d!31143) (not b!110746) (not bm!11910) (not b!110795) (not d!31519) (not b!111190) (not b!111094) (not b!110789) (not d!31353) (not b!110959) (not b!110822) (not b!111701) (not b!110666) (not b!110938) (not bm!11897) (not bm!11859) (not d!31463) (not d!31325) (not b!110649) (not b!111582) (not b!111654) (not b!110969) (not b!111622) (not b!111619) (not b!110787) (not b!111312) (not d!31661) (not d!31381) (not b!111029) (not b!111541) (not d!31415) (not bm!11823) (not b!111627) (not bm!11876) (not b!111020) (not d!31431) (not b!111077) (not b!110587) (not d!31531) (not d!31419) (not d!31641) (not b!110652) (not d!31601) (not b!110590) (not b!111439) (not b!110709) (not bm!11863) (not b!111183) (not d!31479) (not b!111359) (not b!111664) (not d!31165) (not d!31709) (not d!31467) (not b!111453) (not d!31123) (not b!110565) (not bm!11880) (not b!110771) (not b!110979) (not d!31331) (not b!111563) (not b!111466) (not d!31781) (not b!110835) (not b!110933) (not b!110754) (not b!111002) (not b!111352) (not b!111270) (not b!111497) (not b!111307) (not b!111482) (not d!31307) (not b!111691) (not b!111319) (not b!110592) (not b!110636) (not b!111591) (not bm!11819) (not b_lambda!5009) (not b!111441) (not b!110968) (not d!31281) (not b!111053) (not b!111406) (not b!111057) (not b!111224) (not b!111428) (not b!111530) (not b!111392) (not b!111609) (not d!31635) (not d!31235) (not b!110971) (not d!31767) (not d!31309) (not b!111172) (not b!111601) (not d!31669) (not b!111566) (not b!111022) (not b!111465) (not b_lambda!4921) (not b!110610) (not d!31627) (not b!111248) (not b!110818) (not bm!11903) (not b_lambda!5011) (not b!111656) (not d!31201) (not d!31757) (not bm!11919) (not d!31509) (not d!31567) (not d!31149) (not d!31637) (not d!31721) (not bm!11883) (not b!111346) (not b!111277) (not d!31181) (not bm!11854) (not b!110824) (not bm!11852) (not b!111449) (not d!31247) (not d!31361) (not b!111052) (not d!31393) (not b_lambda!5001) (not b!110793) (not d!31599) (not b!110779) (not d!31501) (not b!110858) (not b!111702) (not b!111525) (not d!31773) (not bm!11887) (not b!110582) (not b!111113) (not b!110976) (not b!110597) (not b!110699) (not b!110625) (not bm!11840) (not b!110882) (not b!111518) (not b!111063) (not d!31221) (not d!31605) (not b!110736) (not d!31183) (not b!110913) (not bm!11850) (not b!111686) (not b!111547) (not b!111485) (not b!111109) (not b!110862) (not b_lambda!4953) (not b!111357) (not b!111196) (not b!110917) (not d!31079) (not b!111554) (not b!110678) (not d!31279) (not b!111078) (not b!111321) (not b!111590) (not b!111107) (not b!110808) (not b!110791) (not b!111561) (not b_lambda!4995) (not b!111169) (not b!110679) (not b!111367) (not b!111147) (not d!31759) (not b!110660) (not b!111101) (not d!31543) (not b!111198) (not b!111564) (not b!110983) (not b!110748) (not d!31785) (not d!31735) (not b!110778) (not b!110676) (not d!31327) (not b!111240) (not b!110738) (not b!111013) (not d!31213) (not b!111690) (not b!111613) (not d!31137) (not b!110953) (not b!110912) (not d!31571) (not d!31313) (not b!110621) (not b!111164) (not b!110668) (not b!110751) (not b!110665) (not b!111070) (not b!111256) (not d!31461) (not d!31763) (not b!110879) (not d!31217) (not b!110843) (not d!31565) (not b!111151) (not d!31229) (not b!110870) (not d!31695) (not b!111657) (not b_lambda!4991) (not b!110571) (not d!31093) (not bm!11842) (not b!110574) (not b!110790) (not b!111179) (not b_lambda!5007) (not d!31775) (not b!110761) (not b!111635) (not d!31617) (not b!110798) (not b!111282) (not d!31633) (not b!111446) (not d!31167) (not b!111558) (not b!111281) (not b!110825) (not b!111092) (not bm!11907) (not b!111300) (not b!110988) (not d!31283) (not b!110897) (not b!111369) (not b!111191) (not b!111630) (not d!31343) (not b!110776) (not b!110794) (not b!111056) (not d!31537) (not d!31801) (not b!111210) (not bm!11835) (not b!111006) (not b_lambda!4931) (not d!31511) (not b!110810) (not bm!11858) (not b!110797) (not b!111553) (not b!111085) (not d!31557) (not d!31429) (not b!111324) (not b!110904) (not d!31245) (not bm!11814) (not b!111388) (not b!110644) (not b!110960) (not b!111662) (not b!110805) (not b!110609) (not b!111538) (not b!110967) (not b!111332) (not b!111545) (not d!31151) (not d!31287) (not b_lambda!4999) (not b!111447) (not b!111577) (not b!111520) (not d!31819) (not b!111492) (not b!111473) (not b!110906) (not d!31483) (not b!110661) (not d!31685) (not d!31613) (not d!31069) (not b!111253) (not d!31579) (not b!111510) (not b!110777) (not d!31597) (not bm!11834) (not d!31673) (not b!110638) (not d!31189) (not b!111356) (not b!110567) (not b!110585) (not b!110631) (not d!31351) (not b!111368) (not bm!11836) (not b!110739) (not b!111455) (not d!31645) (not b!110743) (not b!110651) (not d!31369) (not b!110886) (not b!111543) (not d!31397) (not b!111048) (not d!31385) (not b!110936) (not bm!11843) (not b!111399) (not d!31205) (not b!111317) (not b!110850) (not b!111533) (not bm!11928) (not b!111204) (not d!31101) (not b!111104) (not b!111632) (not b!111457) (not d!31485) (not b!110564) (not d!31153) (not b!111001) (not b!111681) (not b!111645) (not b!110593) (not b!111381) (not b!111424) (not b!110848) (not b!110786) (not b!111612) (not d!31413) (not b!111523) (not bm!11810) (not b_lambda!4929) (not d!31303) (not d!31363) (not d!31099) (not b!111261) (not d!31337) (not b!111309) (not b!110925) (not b!110765) (not b!110803) (not d!31525) (not bm!11929) (not d!31209) (not b!111231) (not d!31513) (not bm!11894) (not d!31787) (not d!31715) (not b!111254) (not b!111116) (not b!111442) (not d!31793) (not b!111355) (not d!31155) (not d!31497) (not d!31615) (not b!111218) (not d!31659) (not b!110677) (not bm!11825) (not bm!11853) (not b!111267) (not b!111105) (not b_lambda!5005) (not b!111335) (not d!31729) (not b!111155) (not bm!11892) (not b!110957) (not b!110934) (not d!31745) (not b!111578) (not d!31425) (not b!111228) (not b_lambda!4945) (not b_lambda!4987) (not b!111162) (not d!31185) (not d!31073))
(check-sat b_and!6863 b_and!6865 (not b_next!2561) (not b_next!2563))
