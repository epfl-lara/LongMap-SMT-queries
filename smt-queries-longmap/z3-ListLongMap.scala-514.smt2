; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!12684 () Bool)

(assert start!12684)

(declare-fun b!109572 () Bool)

(declare-fun b_free!2557 () Bool)

(declare-fun b_next!2557 () Bool)

(assert (=> b!109572 (= b_free!2557 (not b_next!2557))))

(declare-fun tp!10009 () Bool)

(declare-fun b_and!6745 () Bool)

(assert (=> b!109572 (= tp!10009 b_and!6745)))

(declare-fun b!109583 () Bool)

(declare-fun b_free!2559 () Bool)

(declare-fun b_next!2559 () Bool)

(assert (=> b!109583 (= b_free!2559 (not b_next!2559))))

(declare-fun tp!10010 () Bool)

(declare-fun b_and!6747 () Bool)

(assert (=> b!109583 (= tp!10010 b_and!6747)))

(declare-fun b!109571 () Bool)

(declare-fun e!71289 () Bool)

(declare-fun e!71277 () Bool)

(assert (=> b!109571 (= e!71289 e!71277)))

(declare-fun res!54242 () Bool)

(assert (=> b!109571 (=> (not res!54242) (not e!71277))))

(declare-datatypes ((V!3241 0))(
  ( (V!3242 (val!1392 Int)) )
))
(declare-datatypes ((array!4371 0))(
  ( (array!4372 (arr!2072 (Array (_ BitVec 32) (_ BitVec 64))) (size!2329 (_ BitVec 32))) )
))
(declare-datatypes ((ValueCell!1004 0))(
  ( (ValueCellFull!1004 (v!2929 V!3241)) (EmptyCell!1004) )
))
(declare-datatypes ((array!4373 0))(
  ( (array!4374 (arr!2073 (Array (_ BitVec 32) ValueCell!1004)) (size!2330 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!916 0))(
  ( (LongMapFixedSize!917 (defaultEntry!2626 Int) (mask!6794 (_ BitVec 32)) (extraKeys!2423 (_ BitVec 32)) (zeroValue!2497 V!3241) (minValue!2497 V!3241) (_size!507 (_ BitVec 32)) (_keys!4340 array!4371) (_values!2609 array!4373) (_vacant!507 (_ BitVec 32))) )
))
(declare-datatypes ((Cell!718 0))(
  ( (Cell!719 (v!2930 LongMapFixedSize!916)) )
))
(declare-datatypes ((LongMap!718 0))(
  ( (LongMap!719 (underlying!370 Cell!718)) )
))
(declare-fun thiss!992 () LongMap!718)

(declare-fun from!355 () (_ BitVec 32))

(assert (=> b!109571 (= res!54242 (and (not (= (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!56360 () V!3241)

(declare-fun get!1353 (ValueCell!1004 V!3241) V!3241)

(declare-fun dynLambda!390 (Int (_ BitVec 64)) V!3241)

(assert (=> b!109571 (= lt!56360 (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) from!355) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!71278 () Bool)

(declare-fun e!71281 () Bool)

(declare-fun tp_is_empty!2695 () Bool)

(declare-fun array_inv!1283 (array!4371) Bool)

(declare-fun array_inv!1284 (array!4373) Bool)

(assert (=> b!109572 (= e!71278 (and tp!10009 tp_is_empty!2695 (array_inv!1283 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (array_inv!1284 (_values!2609 (v!2930 (underlying!370 thiss!992)))) e!71281))))

(declare-fun b!109573 () Bool)

(declare-fun e!71276 () Bool)

(assert (=> b!109573 (= e!71276 tp_is_empty!2695)))

(declare-fun b!109574 () Bool)

(declare-fun res!54244 () Bool)

(declare-fun e!71288 () Bool)

(assert (=> b!109574 (=> (not res!54244) (not e!71288))))

(declare-fun newMap!16 () LongMapFixedSize!916)

(assert (=> b!109574 (= res!54244 (bvsge (bvadd #b00000000000000000000000000000001 (mask!6794 newMap!16)) (_size!507 (v!2930 (underlying!370 thiss!992)))))))

(declare-fun b!109575 () Bool)

(declare-fun res!54247 () Bool)

(assert (=> b!109575 (=> (not res!54247) (not e!71288))))

(declare-fun valid!434 (LongMapFixedSize!916) Bool)

(assert (=> b!109575 (= res!54247 (valid!434 newMap!16))))

(declare-fun mapIsEmpty!3993 () Bool)

(declare-fun mapRes!3993 () Bool)

(assert (=> mapIsEmpty!3993 mapRes!3993))

(declare-fun b!109576 () Bool)

(declare-fun e!71287 () Bool)

(assert (=> b!109576 (= e!71287 tp_is_empty!2695)))

(declare-fun b!109577 () Bool)

(declare-fun e!71292 () Bool)

(assert (=> b!109577 (= e!71277 e!71292)))

(declare-fun res!54243 () Bool)

(assert (=> b!109577 (=> (not res!54243) (not e!71292))))

(declare-datatypes ((tuple2!2386 0))(
  ( (tuple2!2387 (_1!1204 Bool) (_2!1204 LongMapFixedSize!916)) )
))
(declare-fun lt!56364 () tuple2!2386)

(assert (=> b!109577 (= res!54243 (and (_1!1204 lt!56364) (bvsle from!355 #b00000000000000000000000000000000)))))

(declare-datatypes ((Unit!3382 0))(
  ( (Unit!3383) )
))
(declare-fun lt!56361 () Unit!3382)

(declare-fun e!71285 () Unit!3382)

(assert (=> b!109577 (= lt!56361 e!71285)))

(declare-fun c!19383 () Bool)

(declare-datatypes ((tuple2!2388 0))(
  ( (tuple2!2389 (_1!1205 (_ BitVec 64)) (_2!1205 V!3241)) )
))
(declare-datatypes ((List!1609 0))(
  ( (Nil!1606) (Cons!1605 (h!2204 tuple2!2388) (t!5738 List!1609)) )
))
(declare-datatypes ((ListLongMap!1547 0))(
  ( (ListLongMap!1548 (toList!789 List!1609)) )
))
(declare-fun lt!56367 () ListLongMap!1547)

(declare-fun contains!824 (ListLongMap!1547 (_ BitVec 64)) Bool)

(assert (=> b!109577 (= c!19383 (contains!824 lt!56367 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(declare-fun update!165 (LongMapFixedSize!916 (_ BitVec 64) V!3241) tuple2!2386)

(assert (=> b!109577 (= lt!56364 (update!165 newMap!16 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))

(declare-fun b!109578 () Bool)

(declare-fun e!71290 () Bool)

(declare-fun e!71283 () Bool)

(assert (=> b!109578 (= e!71290 e!71283)))

(declare-fun b!109579 () Bool)

(declare-fun res!54240 () Bool)

(assert (=> b!109579 (=> (not res!54240) (not e!71288))))

(assert (=> b!109579 (= res!54240 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2329 (_keys!4340 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun mapIsEmpty!3994 () Bool)

(declare-fun mapRes!3994 () Bool)

(assert (=> mapIsEmpty!3994 mapRes!3994))

(declare-fun b!109580 () Bool)

(declare-fun e!71282 () Bool)

(assert (=> b!109580 (= e!71292 (not e!71282))))

(declare-fun res!54246 () Bool)

(assert (=> b!109580 (=> res!54246 e!71282)))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> b!109580 (= res!54246 (not (validMask!0 (mask!6794 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun lt!56369 () ListLongMap!1547)

(declare-fun lt!56363 () tuple2!2388)

(declare-fun lt!56370 () tuple2!2388)

(declare-fun +!144 (ListLongMap!1547 tuple2!2388) ListLongMap!1547)

(assert (=> b!109580 (= (+!144 (+!144 lt!56369 lt!56363) lt!56370) (+!144 (+!144 lt!56369 lt!56370) lt!56363))))

(assert (=> b!109580 (= lt!56370 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))

(assert (=> b!109580 (= lt!56363 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))

(declare-fun lt!56366 () Unit!3382)

(declare-fun addCommutativeForDiffKeys!57 (ListLongMap!1547 (_ BitVec 64) V!3241 (_ BitVec 64) V!3241) Unit!3382)

(assert (=> b!109580 (= lt!56366 (addCommutativeForDiffKeys!57 lt!56369 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))

(declare-fun getCurrentListMapNoExtraKeys!111 (array!4371 array!4373 (_ BitVec 32) (_ BitVec 32) V!3241 V!3241 (_ BitVec 32) Int) ListLongMap!1547)

(assert (=> b!109580 (= lt!56369 (getCurrentListMapNoExtraKeys!111 (_keys!4340 (v!2930 (underlying!370 thiss!992))) (_values!2609 (v!2930 (underlying!370 thiss!992))) (mask!6794 (v!2930 (underlying!370 thiss!992))) (extraKeys!2423 (v!2930 (underlying!370 thiss!992))) (zeroValue!2497 (v!2930 (underlying!370 thiss!992))) (minValue!2497 (v!2930 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2626 (v!2930 (underlying!370 thiss!992)))))))

(declare-fun b!109581 () Bool)

(declare-fun Unit!3384 () Unit!3382)

(assert (=> b!109581 (= e!71285 Unit!3384)))

(declare-fun b!109582 () Bool)

(declare-fun e!71280 () Bool)

(assert (=> b!109582 (= e!71280 tp_is_empty!2695)))

(declare-fun e!71279 () Bool)

(declare-fun e!71286 () Bool)

(assert (=> b!109583 (= e!71279 (and tp!10010 tp_is_empty!2695 (array_inv!1283 (_keys!4340 newMap!16)) (array_inv!1284 (_values!2609 newMap!16)) e!71286))))

(declare-fun b!109584 () Bool)

(declare-fun Unit!3385 () Unit!3382)

(assert (=> b!109584 (= e!71285 Unit!3385)))

(declare-fun lt!56359 () Unit!3382)

(declare-fun lemmaListMapContainsThenArrayContainsFrom!105 (array!4371 array!4373 (_ BitVec 32) (_ BitVec 32) V!3241 V!3241 (_ BitVec 64) (_ BitVec 32) Int) Unit!3382)

(assert (=> b!109584 (= lt!56359 (lemmaListMapContainsThenArrayContainsFrom!105 (_keys!4340 (v!2930 (underlying!370 thiss!992))) (_values!2609 (v!2930 (underlying!370 thiss!992))) (mask!6794 (v!2930 (underlying!370 thiss!992))) (extraKeys!2423 (v!2930 (underlying!370 thiss!992))) (zeroValue!2497 (v!2930 (underlying!370 thiss!992))) (minValue!2497 (v!2930 (underlying!370 thiss!992))) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2626 (v!2930 (underlying!370 thiss!992)))))))

(declare-fun arrayContainsKey!0 (array!4371 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> b!109584 (arrayContainsKey!0 (_keys!4340 (v!2930 (underlying!370 thiss!992))) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355))))

(declare-fun lt!56362 () Unit!3382)

(declare-fun lemmaNoDuplicateFromThenFromBigger!0 (array!4371 (_ BitVec 32) (_ BitVec 32)) Unit!3382)

(assert (=> b!109584 (= lt!56362 (lemmaNoDuplicateFromThenFromBigger!0 (_keys!4340 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000000000 from!355))))

(declare-datatypes ((List!1610 0))(
  ( (Nil!1607) (Cons!1606 (h!2205 (_ BitVec 64)) (t!5739 List!1610)) )
))
(declare-fun arrayNoDuplicates!0 (array!4371 (_ BitVec 32) List!1610) Bool)

(assert (=> b!109584 (arrayNoDuplicates!0 (_keys!4340 (v!2930 (underlying!370 thiss!992))) from!355 Nil!1607)))

(declare-fun lt!56368 () Unit!3382)

(declare-fun lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (array!4371 (_ BitVec 32) (_ BitVec 64) List!1610) Unit!3382)

(assert (=> b!109584 (= lt!56368 (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!4340 (v!2930 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (Cons!1606 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) Nil!1607)))))

(assert (=> b!109584 false))

(declare-fun mapNonEmpty!3993 () Bool)

(declare-fun tp!10012 () Bool)

(assert (=> mapNonEmpty!3993 (= mapRes!3993 (and tp!10012 e!71287))))

(declare-fun mapRest!3994 () (Array (_ BitVec 32) ValueCell!1004))

(declare-fun mapKey!3994 () (_ BitVec 32))

(declare-fun mapValue!3994 () ValueCell!1004)

(assert (=> mapNonEmpty!3993 (= (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (store mapRest!3994 mapKey!3994 mapValue!3994))))

(declare-fun b!109585 () Bool)

(assert (=> b!109585 (= e!71283 e!71278)))

(declare-fun b!109586 () Bool)

(assert (=> b!109586 (= e!71282 (or (not (= (size!2330 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 (mask!6794 (v!2930 (underlying!370 thiss!992)))))) (not (= (size!2329 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (size!2330 (_values!2609 (v!2930 (underlying!370 thiss!992)))))) (bvslt (mask!6794 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000000000) (bvslt (extraKeys!2423 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2423 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000000011)))))

(declare-fun b!109587 () Bool)

(assert (=> b!109587 (= e!71281 (and e!71276 mapRes!3993))))

(declare-fun condMapEmpty!3994 () Bool)

(declare-fun mapDefault!3994 () ValueCell!1004)

(assert (=> b!109587 (= condMapEmpty!3994 (= (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!1004)) mapDefault!3994)))))

(declare-fun res!54241 () Bool)

(assert (=> start!12684 (=> (not res!54241) (not e!71288))))

(declare-fun valid!435 (LongMap!718) Bool)

(assert (=> start!12684 (= res!54241 (valid!435 thiss!992))))

(assert (=> start!12684 e!71288))

(assert (=> start!12684 e!71290))

(assert (=> start!12684 true))

(assert (=> start!12684 e!71279))

(declare-fun mapNonEmpty!3994 () Bool)

(declare-fun tp!10011 () Bool)

(assert (=> mapNonEmpty!3994 (= mapRes!3994 (and tp!10011 e!71280))))

(declare-fun mapValue!3993 () ValueCell!1004)

(declare-fun mapKey!3993 () (_ BitVec 32))

(declare-fun mapRest!3993 () (Array (_ BitVec 32) ValueCell!1004))

(assert (=> mapNonEmpty!3994 (= (arr!2073 (_values!2609 newMap!16)) (store mapRest!3993 mapKey!3993 mapValue!3993))))

(declare-fun b!109588 () Bool)

(declare-fun e!71291 () Bool)

(assert (=> b!109588 (= e!71286 (and e!71291 mapRes!3994))))

(declare-fun condMapEmpty!3993 () Bool)

(declare-fun mapDefault!3993 () ValueCell!1004)

(assert (=> b!109588 (= condMapEmpty!3993 (= (arr!2073 (_values!2609 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!1004)) mapDefault!3993)))))

(declare-fun b!109589 () Bool)

(assert (=> b!109589 (= e!71291 tp_is_empty!2695)))

(declare-fun b!109590 () Bool)

(assert (=> b!109590 (= e!71288 e!71289)))

(declare-fun res!54245 () Bool)

(assert (=> b!109590 (=> (not res!54245) (not e!71289))))

(declare-fun lt!56365 () ListLongMap!1547)

(assert (=> b!109590 (= res!54245 (= lt!56365 lt!56367))))

(declare-fun map!1295 (LongMapFixedSize!916) ListLongMap!1547)

(assert (=> b!109590 (= lt!56367 (map!1295 newMap!16))))

(declare-fun getCurrentListMap!475 (array!4371 array!4373 (_ BitVec 32) (_ BitVec 32) V!3241 V!3241 (_ BitVec 32) Int) ListLongMap!1547)

(assert (=> b!109590 (= lt!56365 (getCurrentListMap!475 (_keys!4340 (v!2930 (underlying!370 thiss!992))) (_values!2609 (v!2930 (underlying!370 thiss!992))) (mask!6794 (v!2930 (underlying!370 thiss!992))) (extraKeys!2423 (v!2930 (underlying!370 thiss!992))) (zeroValue!2497 (v!2930 (underlying!370 thiss!992))) (minValue!2497 (v!2930 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2626 (v!2930 (underlying!370 thiss!992)))))))

(assert (= (and start!12684 res!54241) b!109579))

(assert (= (and b!109579 res!54240) b!109575))

(assert (= (and b!109575 res!54247) b!109574))

(assert (= (and b!109574 res!54244) b!109590))

(assert (= (and b!109590 res!54245) b!109571))

(assert (= (and b!109571 res!54242) b!109577))

(assert (= (and b!109577 c!19383) b!109584))

(assert (= (and b!109577 (not c!19383)) b!109581))

(assert (= (and b!109577 res!54243) b!109580))

(assert (= (and b!109580 (not res!54246)) b!109586))

(assert (= (and b!109587 condMapEmpty!3994) mapIsEmpty!3993))

(assert (= (and b!109587 (not condMapEmpty!3994)) mapNonEmpty!3993))

(get-info :version)

(assert (= (and mapNonEmpty!3993 ((_ is ValueCellFull!1004) mapValue!3994)) b!109576))

(assert (= (and b!109587 ((_ is ValueCellFull!1004) mapDefault!3994)) b!109573))

(assert (= b!109572 b!109587))

(assert (= b!109585 b!109572))

(assert (= b!109578 b!109585))

(assert (= start!12684 b!109578))

(assert (= (and b!109588 condMapEmpty!3993) mapIsEmpty!3994))

(assert (= (and b!109588 (not condMapEmpty!3993)) mapNonEmpty!3994))

(assert (= (and mapNonEmpty!3994 ((_ is ValueCellFull!1004) mapValue!3993)) b!109582))

(assert (= (and b!109588 ((_ is ValueCellFull!1004) mapDefault!3993)) b!109589))

(assert (= b!109583 b!109588))

(assert (= start!12684 b!109583))

(declare-fun b_lambda!4913 () Bool)

(assert (=> (not b_lambda!4913) (not b!109571)))

(declare-fun t!5735 () Bool)

(declare-fun tb!2093 () Bool)

(assert (=> (and b!109572 (= (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) (defaultEntry!2626 (v!2930 (underlying!370 thiss!992)))) t!5735) tb!2093))

(declare-fun result!3513 () Bool)

(assert (=> tb!2093 (= result!3513 tp_is_empty!2695)))

(assert (=> b!109571 t!5735))

(declare-fun b_and!6749 () Bool)

(assert (= b_and!6745 (and (=> t!5735 result!3513) b_and!6749)))

(declare-fun t!5737 () Bool)

(declare-fun tb!2095 () Bool)

(assert (=> (and b!109583 (= (defaultEntry!2626 newMap!16) (defaultEntry!2626 (v!2930 (underlying!370 thiss!992)))) t!5737) tb!2095))

(declare-fun result!3517 () Bool)

(assert (= result!3517 result!3513))

(assert (=> b!109571 t!5737))

(declare-fun b_and!6751 () Bool)

(assert (= b_and!6747 (and (=> t!5737 result!3517) b_and!6751)))

(declare-fun m!124075 () Bool)

(assert (=> b!109572 m!124075))

(declare-fun m!124077 () Bool)

(assert (=> b!109572 m!124077))

(declare-fun m!124079 () Bool)

(assert (=> b!109575 m!124079))

(declare-fun m!124081 () Bool)

(assert (=> b!109590 m!124081))

(declare-fun m!124083 () Bool)

(assert (=> b!109590 m!124083))

(declare-fun m!124085 () Bool)

(assert (=> mapNonEmpty!3994 m!124085))

(declare-fun m!124087 () Bool)

(assert (=> b!109571 m!124087))

(declare-fun m!124089 () Bool)

(assert (=> b!109571 m!124089))

(declare-fun m!124091 () Bool)

(assert (=> b!109571 m!124091))

(assert (=> b!109571 m!124089))

(assert (=> b!109571 m!124091))

(declare-fun m!124093 () Bool)

(assert (=> b!109571 m!124093))

(declare-fun m!124095 () Bool)

(assert (=> b!109583 m!124095))

(declare-fun m!124097 () Bool)

(assert (=> b!109583 m!124097))

(assert (=> b!109577 m!124087))

(assert (=> b!109577 m!124087))

(declare-fun m!124099 () Bool)

(assert (=> b!109577 m!124099))

(assert (=> b!109577 m!124087))

(declare-fun m!124101 () Bool)

(assert (=> b!109577 m!124101))

(declare-fun m!124103 () Bool)

(assert (=> mapNonEmpty!3993 m!124103))

(declare-fun m!124105 () Bool)

(assert (=> start!12684 m!124105))

(declare-fun m!124107 () Bool)

(assert (=> b!109580 m!124107))

(assert (=> b!109580 m!124087))

(assert (=> b!109580 m!124087))

(declare-fun m!124109 () Bool)

(assert (=> b!109580 m!124109))

(declare-fun m!124111 () Bool)

(assert (=> b!109580 m!124111))

(declare-fun m!124113 () Bool)

(assert (=> b!109580 m!124113))

(declare-fun m!124115 () Bool)

(assert (=> b!109580 m!124115))

(declare-fun m!124117 () Bool)

(assert (=> b!109580 m!124117))

(assert (=> b!109580 m!124113))

(assert (=> b!109580 m!124111))

(declare-fun m!124119 () Bool)

(assert (=> b!109580 m!124119))

(declare-fun m!124121 () Bool)

(assert (=> b!109584 m!124121))

(declare-fun m!124123 () Bool)

(assert (=> b!109584 m!124123))

(assert (=> b!109584 m!124087))

(declare-fun m!124125 () Bool)

(assert (=> b!109584 m!124125))

(assert (=> b!109584 m!124087))

(assert (=> b!109584 m!124087))

(declare-fun m!124127 () Bool)

(assert (=> b!109584 m!124127))

(assert (=> b!109584 m!124087))

(declare-fun m!124129 () Bool)

(assert (=> b!109584 m!124129))

(check-sat (not b!109572) (not b!109590) (not b!109575) (not b_next!2559) (not b_lambda!4913) b_and!6749 (not b!109584) (not mapNonEmpty!3994) tp_is_empty!2695 b_and!6751 (not mapNonEmpty!3993) (not b!109571) (not start!12684) (not b!109577) (not b_next!2557) (not b!109580) (not b!109583))
(check-sat b_and!6749 b_and!6751 (not b_next!2557) (not b_next!2559))
(get-model)

(declare-fun b_lambda!4919 () Bool)

(assert (= b_lambda!4913 (or (and b!109572 b_free!2557) (and b!109583 b_free!2559 (= (defaultEntry!2626 newMap!16) (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))))) b_lambda!4919)))

(check-sat (not b!109590) (not b!109575) (not b_next!2559) b_and!6749 (not b!109584) (not mapNonEmpty!3994) tp_is_empty!2695 b_and!6751 (not mapNonEmpty!3993) (not b!109572) (not b_lambda!4919) (not b!109571) (not start!12684) (not b!109577) (not b_next!2557) (not b!109580) (not b!109583))
(check-sat b_and!6749 b_and!6751 (not b_next!2557) (not b_next!2559))
(get-model)

(declare-fun d!30807 () Bool)

(declare-fun e!71404 () Bool)

(assert (=> d!30807 e!71404))

(declare-fun res!54301 () Bool)

(assert (=> d!30807 (=> (not res!54301) (not e!71404))))

(declare-fun lt!56454 () ListLongMap!1547)

(assert (=> d!30807 (= res!54301 (contains!824 lt!56454 (_1!1205 lt!56370)))))

(declare-fun lt!56453 () List!1609)

(assert (=> d!30807 (= lt!56454 (ListLongMap!1548 lt!56453))))

(declare-fun lt!56452 () Unit!3382)

(declare-fun lt!56451 () Unit!3382)

(assert (=> d!30807 (= lt!56452 lt!56451)))

(declare-datatypes ((Option!165 0))(
  ( (Some!164 (v!2936 V!3241)) (None!163) )
))
(declare-fun getValueByKey!159 (List!1609 (_ BitVec 64)) Option!165)

(assert (=> d!30807 (= (getValueByKey!159 lt!56453 (_1!1205 lt!56370)) (Some!164 (_2!1205 lt!56370)))))

(declare-fun lemmaContainsTupThenGetReturnValue!75 (List!1609 (_ BitVec 64) V!3241) Unit!3382)

(assert (=> d!30807 (= lt!56451 (lemmaContainsTupThenGetReturnValue!75 lt!56453 (_1!1205 lt!56370) (_2!1205 lt!56370)))))

(declare-fun insertStrictlySorted!78 (List!1609 (_ BitVec 64) V!3241) List!1609)

(assert (=> d!30807 (= lt!56453 (insertStrictlySorted!78 (toList!789 (+!144 lt!56369 lt!56363)) (_1!1205 lt!56370) (_2!1205 lt!56370)))))

(assert (=> d!30807 (= (+!144 (+!144 lt!56369 lt!56363) lt!56370) lt!56454)))

(declare-fun b!109721 () Bool)

(declare-fun res!54300 () Bool)

(assert (=> b!109721 (=> (not res!54300) (not e!71404))))

(assert (=> b!109721 (= res!54300 (= (getValueByKey!159 (toList!789 lt!56454) (_1!1205 lt!56370)) (Some!164 (_2!1205 lt!56370))))))

(declare-fun b!109722 () Bool)

(declare-fun contains!827 (List!1609 tuple2!2388) Bool)

(assert (=> b!109722 (= e!71404 (contains!827 (toList!789 lt!56454) lt!56370))))

(assert (= (and d!30807 res!54301) b!109721))

(assert (= (and b!109721 res!54300) b!109722))

(declare-fun m!124243 () Bool)

(assert (=> d!30807 m!124243))

(declare-fun m!124245 () Bool)

(assert (=> d!30807 m!124245))

(declare-fun m!124247 () Bool)

(assert (=> d!30807 m!124247))

(declare-fun m!124249 () Bool)

(assert (=> d!30807 m!124249))

(declare-fun m!124251 () Bool)

(assert (=> b!109721 m!124251))

(declare-fun m!124253 () Bool)

(assert (=> b!109722 m!124253))

(assert (=> b!109580 d!30807))

(declare-fun d!30809 () Bool)

(declare-fun e!71405 () Bool)

(assert (=> d!30809 e!71405))

(declare-fun res!54303 () Bool)

(assert (=> d!30809 (=> (not res!54303) (not e!71405))))

(declare-fun lt!56458 () ListLongMap!1547)

(assert (=> d!30809 (= res!54303 (contains!824 lt!56458 (_1!1205 lt!56363)))))

(declare-fun lt!56457 () List!1609)

(assert (=> d!30809 (= lt!56458 (ListLongMap!1548 lt!56457))))

(declare-fun lt!56456 () Unit!3382)

(declare-fun lt!56455 () Unit!3382)

(assert (=> d!30809 (= lt!56456 lt!56455)))

(assert (=> d!30809 (= (getValueByKey!159 lt!56457 (_1!1205 lt!56363)) (Some!164 (_2!1205 lt!56363)))))

(assert (=> d!30809 (= lt!56455 (lemmaContainsTupThenGetReturnValue!75 lt!56457 (_1!1205 lt!56363) (_2!1205 lt!56363)))))

(assert (=> d!30809 (= lt!56457 (insertStrictlySorted!78 (toList!789 (+!144 lt!56369 lt!56370)) (_1!1205 lt!56363) (_2!1205 lt!56363)))))

(assert (=> d!30809 (= (+!144 (+!144 lt!56369 lt!56370) lt!56363) lt!56458)))

(declare-fun b!109723 () Bool)

(declare-fun res!54302 () Bool)

(assert (=> b!109723 (=> (not res!54302) (not e!71405))))

(assert (=> b!109723 (= res!54302 (= (getValueByKey!159 (toList!789 lt!56458) (_1!1205 lt!56363)) (Some!164 (_2!1205 lt!56363))))))

(declare-fun b!109724 () Bool)

(assert (=> b!109724 (= e!71405 (contains!827 (toList!789 lt!56458) lt!56363))))

(assert (= (and d!30809 res!54303) b!109723))

(assert (= (and b!109723 res!54302) b!109724))

(declare-fun m!124255 () Bool)

(assert (=> d!30809 m!124255))

(declare-fun m!124257 () Bool)

(assert (=> d!30809 m!124257))

(declare-fun m!124259 () Bool)

(assert (=> d!30809 m!124259))

(declare-fun m!124261 () Bool)

(assert (=> d!30809 m!124261))

(declare-fun m!124263 () Bool)

(assert (=> b!109723 m!124263))

(declare-fun m!124265 () Bool)

(assert (=> b!109724 m!124265))

(assert (=> b!109580 d!30809))

(declare-fun b!109749 () Bool)

(declare-fun e!71424 () ListLongMap!1547)

(declare-fun call!11625 () ListLongMap!1547)

(assert (=> b!109749 (= e!71424 call!11625)))

(declare-fun d!30811 () Bool)

(declare-fun e!71421 () Bool)

(assert (=> d!30811 e!71421))

(declare-fun res!54313 () Bool)

(assert (=> d!30811 (=> (not res!54313) (not e!71421))))

(declare-fun lt!56479 () ListLongMap!1547)

(assert (=> d!30811 (= res!54313 (not (contains!824 lt!56479 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!71423 () ListLongMap!1547)

(assert (=> d!30811 (= lt!56479 e!71423)))

(declare-fun c!19401 () Bool)

(assert (=> d!30811 (= c!19401 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2329 (_keys!4340 (v!2930 (underlying!370 thiss!992))))))))

(assert (=> d!30811 (validMask!0 (mask!6794 (v!2930 (underlying!370 thiss!992))))))

(assert (=> d!30811 (= (getCurrentListMapNoExtraKeys!111 (_keys!4340 (v!2930 (underlying!370 thiss!992))) (_values!2609 (v!2930 (underlying!370 thiss!992))) (mask!6794 (v!2930 (underlying!370 thiss!992))) (extraKeys!2423 (v!2930 (underlying!370 thiss!992))) (zeroValue!2497 (v!2930 (underlying!370 thiss!992))) (minValue!2497 (v!2930 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2626 (v!2930 (underlying!370 thiss!992)))) lt!56479)))

(declare-fun b!109750 () Bool)

(declare-fun e!71420 () Bool)

(declare-fun isEmpty!382 (ListLongMap!1547) Bool)

(assert (=> b!109750 (= e!71420 (isEmpty!382 lt!56479))))

(declare-fun b!109751 () Bool)

(assert (=> b!109751 (= e!71420 (= lt!56479 (getCurrentListMapNoExtraKeys!111 (_keys!4340 (v!2930 (underlying!370 thiss!992))) (_values!2609 (v!2930 (underlying!370 thiss!992))) (mask!6794 (v!2930 (underlying!370 thiss!992))) (extraKeys!2423 (v!2930 (underlying!370 thiss!992))) (zeroValue!2497 (v!2930 (underlying!370 thiss!992))) (minValue!2497 (v!2930 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun bm!11622 () Bool)

(assert (=> bm!11622 (= call!11625 (getCurrentListMapNoExtraKeys!111 (_keys!4340 (v!2930 (underlying!370 thiss!992))) (_values!2609 (v!2930 (underlying!370 thiss!992))) (mask!6794 (v!2930 (underlying!370 thiss!992))) (extraKeys!2423 (v!2930 (underlying!370 thiss!992))) (zeroValue!2497 (v!2930 (underlying!370 thiss!992))) (minValue!2497 (v!2930 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2626 (v!2930 (underlying!370 thiss!992)))))))

(declare-fun b!109752 () Bool)

(declare-fun e!71426 () Bool)

(assert (=> b!109752 (= e!71426 e!71420)))

(declare-fun c!19398 () Bool)

(assert (=> b!109752 (= c!19398 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2329 (_keys!4340 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun b!109753 () Bool)

(assert (=> b!109753 (= e!71421 e!71426)))

(declare-fun c!19400 () Bool)

(declare-fun e!71425 () Bool)

(assert (=> b!109753 (= c!19400 e!71425)))

(declare-fun res!54314 () Bool)

(assert (=> b!109753 (=> (not res!54314) (not e!71425))))

(assert (=> b!109753 (= res!54314 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2329 (_keys!4340 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun b!109754 () Bool)

(declare-fun res!54312 () Bool)

(assert (=> b!109754 (=> (not res!54312) (not e!71421))))

(assert (=> b!109754 (= res!54312 (not (contains!824 lt!56479 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!109755 () Bool)

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!109755 (= e!71425 (validKeyInArray!0 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!109755 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(declare-fun b!109756 () Bool)

(declare-fun e!71422 () Bool)

(assert (=> b!109756 (= e!71426 e!71422)))

(assert (=> b!109756 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2329 (_keys!4340 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun res!54315 () Bool)

(assert (=> b!109756 (= res!54315 (contains!824 lt!56479 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!109756 (=> (not res!54315) (not e!71422))))

(declare-fun b!109757 () Bool)

(declare-fun lt!56477 () Unit!3382)

(declare-fun lt!56476 () Unit!3382)

(assert (=> b!109757 (= lt!56477 lt!56476)))

(declare-fun lt!56474 () (_ BitVec 64))

(declare-fun lt!56478 () V!3241)

(declare-fun lt!56475 () ListLongMap!1547)

(declare-fun lt!56473 () (_ BitVec 64))

(assert (=> b!109757 (not (contains!824 (+!144 lt!56475 (tuple2!2389 lt!56474 lt!56478)) lt!56473))))

(declare-fun addStillNotContains!50 (ListLongMap!1547 (_ BitVec 64) V!3241 (_ BitVec 64)) Unit!3382)

(assert (=> b!109757 (= lt!56476 (addStillNotContains!50 lt!56475 lt!56474 lt!56478 lt!56473))))

(assert (=> b!109757 (= lt!56473 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!109757 (= lt!56478 (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!109757 (= lt!56474 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!109757 (= lt!56475 call!11625)))

(assert (=> b!109757 (= e!71424 (+!144 call!11625 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!109758 () Bool)

(assert (=> b!109758 (= e!71423 e!71424)))

(declare-fun c!19399 () Bool)

(assert (=> b!109758 (= c!19399 (validKeyInArray!0 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!109759 () Bool)

(assert (=> b!109759 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2329 (_keys!4340 (v!2930 (underlying!370 thiss!992))))))))

(assert (=> b!109759 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2330 (_values!2609 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun apply!100 (ListLongMap!1547 (_ BitVec 64)) V!3241)

(assert (=> b!109759 (= e!71422 (= (apply!100 lt!56479 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!109760 () Bool)

(assert (=> b!109760 (= e!71423 (ListLongMap!1548 Nil!1606))))

(assert (= (and d!30811 c!19401) b!109760))

(assert (= (and d!30811 (not c!19401)) b!109758))

(assert (= (and b!109758 c!19399) b!109757))

(assert (= (and b!109758 (not c!19399)) b!109749))

(assert (= (or b!109757 b!109749) bm!11622))

(assert (= (and d!30811 res!54313) b!109754))

(assert (= (and b!109754 res!54312) b!109753))

(assert (= (and b!109753 res!54314) b!109755))

(assert (= (and b!109753 c!19400) b!109756))

(assert (= (and b!109753 (not c!19400)) b!109752))

(assert (= (and b!109756 res!54315) b!109759))

(assert (= (and b!109752 c!19398) b!109751))

(assert (= (and b!109752 (not c!19398)) b!109750))

(declare-fun b_lambda!4921 () Bool)

(assert (=> (not b_lambda!4921) (not b!109757)))

(assert (=> b!109757 t!5735))

(declare-fun b_and!6769 () Bool)

(assert (= b_and!6749 (and (=> t!5735 result!3513) b_and!6769)))

(assert (=> b!109757 t!5737))

(declare-fun b_and!6771 () Bool)

(assert (= b_and!6751 (and (=> t!5737 result!3517) b_and!6771)))

(declare-fun b_lambda!4923 () Bool)

(assert (=> (not b_lambda!4923) (not b!109759)))

(assert (=> b!109759 t!5735))

(declare-fun b_and!6773 () Bool)

(assert (= b_and!6769 (and (=> t!5735 result!3513) b_and!6773)))

(assert (=> b!109759 t!5737))

(declare-fun b_and!6775 () Bool)

(assert (= b_and!6771 (and (=> t!5737 result!3517) b_and!6775)))

(declare-fun m!124267 () Bool)

(assert (=> b!109756 m!124267))

(assert (=> b!109756 m!124267))

(declare-fun m!124269 () Bool)

(assert (=> b!109756 m!124269))

(declare-fun m!124271 () Bool)

(assert (=> bm!11622 m!124271))

(assert (=> b!109759 m!124267))

(declare-fun m!124273 () Bool)

(assert (=> b!109759 m!124273))

(assert (=> b!109759 m!124267))

(declare-fun m!124275 () Bool)

(assert (=> b!109759 m!124275))

(assert (=> b!109759 m!124273))

(assert (=> b!109759 m!124091))

(declare-fun m!124277 () Bool)

(assert (=> b!109759 m!124277))

(assert (=> b!109759 m!124091))

(assert (=> b!109758 m!124267))

(assert (=> b!109758 m!124267))

(declare-fun m!124279 () Bool)

(assert (=> b!109758 m!124279))

(assert (=> b!109755 m!124267))

(assert (=> b!109755 m!124267))

(assert (=> b!109755 m!124279))

(assert (=> b!109751 m!124271))

(declare-fun m!124281 () Bool)

(assert (=> d!30811 m!124281))

(assert (=> d!30811 m!124107))

(declare-fun m!124283 () Bool)

(assert (=> b!109750 m!124283))

(assert (=> b!109757 m!124267))

(assert (=> b!109757 m!124273))

(assert (=> b!109757 m!124091))

(assert (=> b!109757 m!124277))

(declare-fun m!124285 () Bool)

(assert (=> b!109757 m!124285))

(declare-fun m!124287 () Bool)

(assert (=> b!109757 m!124287))

(declare-fun m!124289 () Bool)

(assert (=> b!109757 m!124289))

(assert (=> b!109757 m!124273))

(assert (=> b!109757 m!124287))

(declare-fun m!124291 () Bool)

(assert (=> b!109757 m!124291))

(assert (=> b!109757 m!124091))

(declare-fun m!124293 () Bool)

(assert (=> b!109754 m!124293))

(assert (=> b!109580 d!30811))

(declare-fun d!30813 () Bool)

(declare-fun e!71427 () Bool)

(assert (=> d!30813 e!71427))

(declare-fun res!54317 () Bool)

(assert (=> d!30813 (=> (not res!54317) (not e!71427))))

(declare-fun lt!56483 () ListLongMap!1547)

(assert (=> d!30813 (= res!54317 (contains!824 lt!56483 (_1!1205 lt!56363)))))

(declare-fun lt!56482 () List!1609)

(assert (=> d!30813 (= lt!56483 (ListLongMap!1548 lt!56482))))

(declare-fun lt!56481 () Unit!3382)

(declare-fun lt!56480 () Unit!3382)

(assert (=> d!30813 (= lt!56481 lt!56480)))

(assert (=> d!30813 (= (getValueByKey!159 lt!56482 (_1!1205 lt!56363)) (Some!164 (_2!1205 lt!56363)))))

(assert (=> d!30813 (= lt!56480 (lemmaContainsTupThenGetReturnValue!75 lt!56482 (_1!1205 lt!56363) (_2!1205 lt!56363)))))

(assert (=> d!30813 (= lt!56482 (insertStrictlySorted!78 (toList!789 lt!56369) (_1!1205 lt!56363) (_2!1205 lt!56363)))))

(assert (=> d!30813 (= (+!144 lt!56369 lt!56363) lt!56483)))

(declare-fun b!109761 () Bool)

(declare-fun res!54316 () Bool)

(assert (=> b!109761 (=> (not res!54316) (not e!71427))))

(assert (=> b!109761 (= res!54316 (= (getValueByKey!159 (toList!789 lt!56483) (_1!1205 lt!56363)) (Some!164 (_2!1205 lt!56363))))))

(declare-fun b!109762 () Bool)

(assert (=> b!109762 (= e!71427 (contains!827 (toList!789 lt!56483) lt!56363))))

(assert (= (and d!30813 res!54317) b!109761))

(assert (= (and b!109761 res!54316) b!109762))

(declare-fun m!124295 () Bool)

(assert (=> d!30813 m!124295))

(declare-fun m!124297 () Bool)

(assert (=> d!30813 m!124297))

(declare-fun m!124299 () Bool)

(assert (=> d!30813 m!124299))

(declare-fun m!124301 () Bool)

(assert (=> d!30813 m!124301))

(declare-fun m!124303 () Bool)

(assert (=> b!109761 m!124303))

(declare-fun m!124305 () Bool)

(assert (=> b!109762 m!124305))

(assert (=> b!109580 d!30813))

(declare-fun d!30815 () Bool)

(declare-fun e!71428 () Bool)

(assert (=> d!30815 e!71428))

(declare-fun res!54319 () Bool)

(assert (=> d!30815 (=> (not res!54319) (not e!71428))))

(declare-fun lt!56487 () ListLongMap!1547)

(assert (=> d!30815 (= res!54319 (contains!824 lt!56487 (_1!1205 lt!56370)))))

(declare-fun lt!56486 () List!1609)

(assert (=> d!30815 (= lt!56487 (ListLongMap!1548 lt!56486))))

(declare-fun lt!56485 () Unit!3382)

(declare-fun lt!56484 () Unit!3382)

(assert (=> d!30815 (= lt!56485 lt!56484)))

(assert (=> d!30815 (= (getValueByKey!159 lt!56486 (_1!1205 lt!56370)) (Some!164 (_2!1205 lt!56370)))))

(assert (=> d!30815 (= lt!56484 (lemmaContainsTupThenGetReturnValue!75 lt!56486 (_1!1205 lt!56370) (_2!1205 lt!56370)))))

(assert (=> d!30815 (= lt!56486 (insertStrictlySorted!78 (toList!789 lt!56369) (_1!1205 lt!56370) (_2!1205 lt!56370)))))

(assert (=> d!30815 (= (+!144 lt!56369 lt!56370) lt!56487)))

(declare-fun b!109763 () Bool)

(declare-fun res!54318 () Bool)

(assert (=> b!109763 (=> (not res!54318) (not e!71428))))

(assert (=> b!109763 (= res!54318 (= (getValueByKey!159 (toList!789 lt!56487) (_1!1205 lt!56370)) (Some!164 (_2!1205 lt!56370))))))

(declare-fun b!109764 () Bool)

(assert (=> b!109764 (= e!71428 (contains!827 (toList!789 lt!56487) lt!56370))))

(assert (= (and d!30815 res!54319) b!109763))

(assert (= (and b!109763 res!54318) b!109764))

(declare-fun m!124307 () Bool)

(assert (=> d!30815 m!124307))

(declare-fun m!124309 () Bool)

(assert (=> d!30815 m!124309))

(declare-fun m!124311 () Bool)

(assert (=> d!30815 m!124311))

(declare-fun m!124313 () Bool)

(assert (=> d!30815 m!124313))

(declare-fun m!124315 () Bool)

(assert (=> b!109763 m!124315))

(declare-fun m!124317 () Bool)

(assert (=> b!109764 m!124317))

(assert (=> b!109580 d!30815))

(declare-fun d!30817 () Bool)

(assert (=> d!30817 (= (+!144 (+!144 lt!56369 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))) (+!144 (+!144 lt!56369 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))))

(declare-fun lt!56490 () Unit!3382)

(declare-fun choose!689 (ListLongMap!1547 (_ BitVec 64) V!3241 (_ BitVec 64) V!3241) Unit!3382)

(assert (=> d!30817 (= lt!56490 (choose!689 lt!56369 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))

(assert (=> d!30817 (not (= (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!30817 (= (addCommutativeForDiffKeys!57 lt!56369 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))) lt!56490)))

(declare-fun bs!4522 () Bool)

(assert (= bs!4522 d!30817))

(declare-fun m!124319 () Bool)

(assert (=> bs!4522 m!124319))

(assert (=> bs!4522 m!124087))

(declare-fun m!124321 () Bool)

(assert (=> bs!4522 m!124321))

(assert (=> bs!4522 m!124319))

(declare-fun m!124323 () Bool)

(assert (=> bs!4522 m!124323))

(declare-fun m!124325 () Bool)

(assert (=> bs!4522 m!124325))

(assert (=> bs!4522 m!124325))

(declare-fun m!124327 () Bool)

(assert (=> bs!4522 m!124327))

(assert (=> b!109580 d!30817))

(declare-fun d!30819 () Bool)

(assert (=> d!30819 (= (validMask!0 (mask!6794 (v!2930 (underlying!370 thiss!992)))) (and (or (= (mask!6794 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000000111) (= (mask!6794 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000001111) (= (mask!6794 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000011111) (= (mask!6794 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000111111) (= (mask!6794 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000001111111) (= (mask!6794 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000011111111) (= (mask!6794 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000111111111) (= (mask!6794 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000001111111111) (= (mask!6794 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000011111111111) (= (mask!6794 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000111111111111) (= (mask!6794 (v!2930 (underlying!370 thiss!992))) #b00000000000000000001111111111111) (= (mask!6794 (v!2930 (underlying!370 thiss!992))) #b00000000000000000011111111111111) (= (mask!6794 (v!2930 (underlying!370 thiss!992))) #b00000000000000000111111111111111) (= (mask!6794 (v!2930 (underlying!370 thiss!992))) #b00000000000000001111111111111111) (= (mask!6794 (v!2930 (underlying!370 thiss!992))) #b00000000000000011111111111111111) (= (mask!6794 (v!2930 (underlying!370 thiss!992))) #b00000000000000111111111111111111) (= (mask!6794 (v!2930 (underlying!370 thiss!992))) #b00000000000001111111111111111111) (= (mask!6794 (v!2930 (underlying!370 thiss!992))) #b00000000000011111111111111111111) (= (mask!6794 (v!2930 (underlying!370 thiss!992))) #b00000000000111111111111111111111) (= (mask!6794 (v!2930 (underlying!370 thiss!992))) #b00000000001111111111111111111111) (= (mask!6794 (v!2930 (underlying!370 thiss!992))) #b00000000011111111111111111111111) (= (mask!6794 (v!2930 (underlying!370 thiss!992))) #b00000000111111111111111111111111) (= (mask!6794 (v!2930 (underlying!370 thiss!992))) #b00000001111111111111111111111111) (= (mask!6794 (v!2930 (underlying!370 thiss!992))) #b00000011111111111111111111111111) (= (mask!6794 (v!2930 (underlying!370 thiss!992))) #b00000111111111111111111111111111) (= (mask!6794 (v!2930 (underlying!370 thiss!992))) #b00001111111111111111111111111111) (= (mask!6794 (v!2930 (underlying!370 thiss!992))) #b00011111111111111111111111111111) (= (mask!6794 (v!2930 (underlying!370 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!6794 (v!2930 (underlying!370 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> b!109580 d!30819))

(declare-fun d!30821 () Bool)

(declare-fun c!19404 () Bool)

(assert (=> d!30821 (= c!19404 ((_ is ValueCellFull!1004) (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(declare-fun e!71431 () V!3241)

(assert (=> d!30821 (= (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) from!355) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!71431)))

(declare-fun b!109769 () Bool)

(declare-fun get!1354 (ValueCell!1004 V!3241) V!3241)

(assert (=> b!109769 (= e!71431 (get!1354 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) from!355) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!109770 () Bool)

(declare-fun get!1355 (ValueCell!1004 V!3241) V!3241)

(assert (=> b!109770 (= e!71431 (get!1355 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) from!355) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30821 c!19404) b!109769))

(assert (= (and d!30821 (not c!19404)) b!109770))

(assert (=> b!109769 m!124089))

(assert (=> b!109769 m!124091))

(declare-fun m!124329 () Bool)

(assert (=> b!109769 m!124329))

(assert (=> b!109770 m!124089))

(assert (=> b!109770 m!124091))

(declare-fun m!124331 () Bool)

(assert (=> b!109770 m!124331))

(assert (=> b!109571 d!30821))

(declare-fun d!30823 () Bool)

(assert (=> d!30823 (= (map!1295 newMap!16) (getCurrentListMap!475 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun bs!4523 () Bool)

(assert (= bs!4523 d!30823))

(declare-fun m!124333 () Bool)

(assert (=> bs!4523 m!124333))

(assert (=> b!109590 d!30823))

(declare-fun b!109813 () Bool)

(declare-fun res!54338 () Bool)

(declare-fun e!71468 () Bool)

(assert (=> b!109813 (=> (not res!54338) (not e!71468))))

(declare-fun e!71464 () Bool)

(assert (=> b!109813 (= res!54338 e!71464)))

(declare-fun res!54341 () Bool)

(assert (=> b!109813 (=> res!54341 e!71464)))

(declare-fun e!71469 () Bool)

(assert (=> b!109813 (= res!54341 (not e!71469))))

(declare-fun res!54345 () Bool)

(assert (=> b!109813 (=> (not res!54345) (not e!71469))))

(assert (=> b!109813 (= res!54345 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2329 (_keys!4340 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun bm!11637 () Bool)

(declare-fun call!11643 () Bool)

(declare-fun lt!56545 () ListLongMap!1547)

(assert (=> bm!11637 (= call!11643 (contains!824 lt!56545 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!109814 () Bool)

(declare-fun e!71461 () Unit!3382)

(declare-fun Unit!3390 () Unit!3382)

(assert (=> b!109814 (= e!71461 Unit!3390)))

(declare-fun b!109815 () Bool)

(declare-fun e!71459 () ListLongMap!1547)

(declare-fun call!11646 () ListLongMap!1547)

(assert (=> b!109815 (= e!71459 (+!144 call!11646 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun b!109816 () Bool)

(declare-fun e!71463 () Bool)

(assert (=> b!109816 (= e!71464 e!71463)))

(declare-fun res!54339 () Bool)

(assert (=> b!109816 (=> (not res!54339) (not e!71463))))

(assert (=> b!109816 (= res!54339 (contains!824 lt!56545 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!109816 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2329 (_keys!4340 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun b!109817 () Bool)

(declare-fun lt!56556 () Unit!3382)

(assert (=> b!109817 (= e!71461 lt!56556)))

(declare-fun lt!56546 () ListLongMap!1547)

(assert (=> b!109817 (= lt!56546 (getCurrentListMapNoExtraKeys!111 (_keys!4340 (v!2930 (underlying!370 thiss!992))) (_values!2609 (v!2930 (underlying!370 thiss!992))) (mask!6794 (v!2930 (underlying!370 thiss!992))) (extraKeys!2423 (v!2930 (underlying!370 thiss!992))) (zeroValue!2497 (v!2930 (underlying!370 thiss!992))) (minValue!2497 (v!2930 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2626 (v!2930 (underlying!370 thiss!992)))))))

(declare-fun lt!56553 () (_ BitVec 64))

(assert (=> b!109817 (= lt!56553 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56548 () (_ BitVec 64))

(assert (=> b!109817 (= lt!56548 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!56549 () Unit!3382)

(declare-fun addStillContains!76 (ListLongMap!1547 (_ BitVec 64) V!3241 (_ BitVec 64)) Unit!3382)

(assert (=> b!109817 (= lt!56549 (addStillContains!76 lt!56546 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))) lt!56548))))

(assert (=> b!109817 (contains!824 (+!144 lt!56546 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))) lt!56548)))

(declare-fun lt!56551 () Unit!3382)

(assert (=> b!109817 (= lt!56551 lt!56549)))

(declare-fun lt!56536 () ListLongMap!1547)

(assert (=> b!109817 (= lt!56536 (getCurrentListMapNoExtraKeys!111 (_keys!4340 (v!2930 (underlying!370 thiss!992))) (_values!2609 (v!2930 (underlying!370 thiss!992))) (mask!6794 (v!2930 (underlying!370 thiss!992))) (extraKeys!2423 (v!2930 (underlying!370 thiss!992))) (zeroValue!2497 (v!2930 (underlying!370 thiss!992))) (minValue!2497 (v!2930 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2626 (v!2930 (underlying!370 thiss!992)))))))

(declare-fun lt!56541 () (_ BitVec 64))

(assert (=> b!109817 (= lt!56541 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56538 () (_ BitVec 64))

(assert (=> b!109817 (= lt!56538 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!56540 () Unit!3382)

(declare-fun addApplyDifferent!76 (ListLongMap!1547 (_ BitVec 64) V!3241 (_ BitVec 64)) Unit!3382)

(assert (=> b!109817 (= lt!56540 (addApplyDifferent!76 lt!56536 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992))) lt!56538))))

(assert (=> b!109817 (= (apply!100 (+!144 lt!56536 (tuple2!2389 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992))))) lt!56538) (apply!100 lt!56536 lt!56538))))

(declare-fun lt!56535 () Unit!3382)

(assert (=> b!109817 (= lt!56535 lt!56540)))

(declare-fun lt!56544 () ListLongMap!1547)

(assert (=> b!109817 (= lt!56544 (getCurrentListMapNoExtraKeys!111 (_keys!4340 (v!2930 (underlying!370 thiss!992))) (_values!2609 (v!2930 (underlying!370 thiss!992))) (mask!6794 (v!2930 (underlying!370 thiss!992))) (extraKeys!2423 (v!2930 (underlying!370 thiss!992))) (zeroValue!2497 (v!2930 (underlying!370 thiss!992))) (minValue!2497 (v!2930 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2626 (v!2930 (underlying!370 thiss!992)))))))

(declare-fun lt!56555 () (_ BitVec 64))

(assert (=> b!109817 (= lt!56555 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56550 () (_ BitVec 64))

(assert (=> b!109817 (= lt!56550 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!56539 () Unit!3382)

(assert (=> b!109817 (= lt!56539 (addApplyDifferent!76 lt!56544 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))) lt!56550))))

(assert (=> b!109817 (= (apply!100 (+!144 lt!56544 (tuple2!2389 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))) lt!56550) (apply!100 lt!56544 lt!56550))))

(declare-fun lt!56547 () Unit!3382)

(assert (=> b!109817 (= lt!56547 lt!56539)))

(declare-fun lt!56554 () ListLongMap!1547)

(assert (=> b!109817 (= lt!56554 (getCurrentListMapNoExtraKeys!111 (_keys!4340 (v!2930 (underlying!370 thiss!992))) (_values!2609 (v!2930 (underlying!370 thiss!992))) (mask!6794 (v!2930 (underlying!370 thiss!992))) (extraKeys!2423 (v!2930 (underlying!370 thiss!992))) (zeroValue!2497 (v!2930 (underlying!370 thiss!992))) (minValue!2497 (v!2930 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2626 (v!2930 (underlying!370 thiss!992)))))))

(declare-fun lt!56543 () (_ BitVec 64))

(assert (=> b!109817 (= lt!56543 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56537 () (_ BitVec 64))

(assert (=> b!109817 (= lt!56537 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!109817 (= lt!56556 (addApplyDifferent!76 lt!56554 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992))) lt!56537))))

(assert (=> b!109817 (= (apply!100 (+!144 lt!56554 (tuple2!2389 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992))))) lt!56537) (apply!100 lt!56554 lt!56537))))

(declare-fun d!30825 () Bool)

(assert (=> d!30825 e!71468))

(declare-fun res!54343 () Bool)

(assert (=> d!30825 (=> (not res!54343) (not e!71468))))

(assert (=> d!30825 (= res!54343 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2329 (_keys!4340 (v!2930 (underlying!370 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2329 (_keys!4340 (v!2930 (underlying!370 thiss!992))))))))))

(declare-fun lt!56552 () ListLongMap!1547)

(assert (=> d!30825 (= lt!56545 lt!56552)))

(declare-fun lt!56542 () Unit!3382)

(assert (=> d!30825 (= lt!56542 e!71461)))

(declare-fun c!19422 () Bool)

(declare-fun e!71462 () Bool)

(assert (=> d!30825 (= c!19422 e!71462)))

(declare-fun res!54340 () Bool)

(assert (=> d!30825 (=> (not res!54340) (not e!71462))))

(assert (=> d!30825 (= res!54340 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2329 (_keys!4340 (v!2930 (underlying!370 thiss!992))))))))

(assert (=> d!30825 (= lt!56552 e!71459)))

(declare-fun c!19419 () Bool)

(assert (=> d!30825 (= c!19419 (and (not (= (bvand (extraKeys!2423 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2423 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!30825 (validMask!0 (mask!6794 (v!2930 (underlying!370 thiss!992))))))

(assert (=> d!30825 (= (getCurrentListMap!475 (_keys!4340 (v!2930 (underlying!370 thiss!992))) (_values!2609 (v!2930 (underlying!370 thiss!992))) (mask!6794 (v!2930 (underlying!370 thiss!992))) (extraKeys!2423 (v!2930 (underlying!370 thiss!992))) (zeroValue!2497 (v!2930 (underlying!370 thiss!992))) (minValue!2497 (v!2930 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2626 (v!2930 (underlying!370 thiss!992)))) lt!56545)))

(declare-fun bm!11638 () Bool)

(declare-fun call!11644 () ListLongMap!1547)

(declare-fun call!11641 () ListLongMap!1547)

(assert (=> bm!11638 (= call!11644 call!11641)))

(declare-fun b!109818 () Bool)

(declare-fun e!71467 () ListLongMap!1547)

(declare-fun call!11642 () ListLongMap!1547)

(assert (=> b!109818 (= e!71467 call!11642)))

(declare-fun b!109819 () Bool)

(declare-fun e!71466 () Bool)

(declare-fun call!11645 () Bool)

(assert (=> b!109819 (= e!71466 (not call!11645))))

(declare-fun b!109820 () Bool)

(declare-fun c!19418 () Bool)

(assert (=> b!109820 (= c!19418 (and (not (= (bvand (extraKeys!2423 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2423 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!71470 () ListLongMap!1547)

(assert (=> b!109820 (= e!71467 e!71470)))

(declare-fun b!109821 () Bool)

(declare-fun e!71460 () Bool)

(assert (=> b!109821 (= e!71460 (not call!11643))))

(declare-fun bm!11639 () Bool)

(assert (=> bm!11639 (= call!11645 (contains!824 lt!56545 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!109822 () Bool)

(declare-fun e!71458 () Bool)

(assert (=> b!109822 (= e!71460 e!71458)))

(declare-fun res!54342 () Bool)

(assert (=> b!109822 (= res!54342 call!11643)))

(assert (=> b!109822 (=> (not res!54342) (not e!71458))))

(declare-fun b!109823 () Bool)

(assert (=> b!109823 (= e!71463 (= (apply!100 lt!56545 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!109823 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2330 (_values!2609 (v!2930 (underlying!370 thiss!992))))))))

(assert (=> b!109823 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2329 (_keys!4340 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun call!11640 () ListLongMap!1547)

(declare-fun c!19417 () Bool)

(declare-fun bm!11640 () Bool)

(assert (=> bm!11640 (= call!11646 (+!144 (ite c!19419 call!11641 (ite c!19417 call!11644 call!11640)) (ite (or c!19419 c!19417) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun b!109824 () Bool)

(declare-fun e!71465 () Bool)

(assert (=> b!109824 (= e!71465 (= (apply!100 lt!56545 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))

(declare-fun b!109825 () Bool)

(assert (=> b!109825 (= e!71468 e!71460)))

(declare-fun c!19421 () Bool)

(assert (=> b!109825 (= c!19421 (not (= (bvand (extraKeys!2423 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11641 () Bool)

(assert (=> bm!11641 (= call!11642 call!11646)))

(declare-fun b!109826 () Bool)

(declare-fun res!54344 () Bool)

(assert (=> b!109826 (=> (not res!54344) (not e!71468))))

(assert (=> b!109826 (= res!54344 e!71466)))

(declare-fun c!19420 () Bool)

(assert (=> b!109826 (= c!19420 (not (= (bvand (extraKeys!2423 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!109827 () Bool)

(assert (=> b!109827 (= e!71470 call!11640)))

(declare-fun bm!11642 () Bool)

(assert (=> bm!11642 (= call!11640 call!11644)))

(declare-fun b!109828 () Bool)

(assert (=> b!109828 (= e!71470 call!11642)))

(declare-fun b!109829 () Bool)

(assert (=> b!109829 (= e!71462 (validKeyInArray!0 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!109830 () Bool)

(assert (=> b!109830 (= e!71466 e!71465)))

(declare-fun res!54346 () Bool)

(assert (=> b!109830 (= res!54346 call!11645)))

(assert (=> b!109830 (=> (not res!54346) (not e!71465))))

(declare-fun b!109831 () Bool)

(assert (=> b!109831 (= e!71458 (= (apply!100 lt!56545 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))

(declare-fun b!109832 () Bool)

(assert (=> b!109832 (= e!71469 (validKeyInArray!0 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!109833 () Bool)

(assert (=> b!109833 (= e!71459 e!71467)))

(assert (=> b!109833 (= c!19417 (and (not (= (bvand (extraKeys!2423 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2423 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11643 () Bool)

(assert (=> bm!11643 (= call!11641 (getCurrentListMapNoExtraKeys!111 (_keys!4340 (v!2930 (underlying!370 thiss!992))) (_values!2609 (v!2930 (underlying!370 thiss!992))) (mask!6794 (v!2930 (underlying!370 thiss!992))) (extraKeys!2423 (v!2930 (underlying!370 thiss!992))) (zeroValue!2497 (v!2930 (underlying!370 thiss!992))) (minValue!2497 (v!2930 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2626 (v!2930 (underlying!370 thiss!992)))))))

(assert (= (and d!30825 c!19419) b!109815))

(assert (= (and d!30825 (not c!19419)) b!109833))

(assert (= (and b!109833 c!19417) b!109818))

(assert (= (and b!109833 (not c!19417)) b!109820))

(assert (= (and b!109820 c!19418) b!109828))

(assert (= (and b!109820 (not c!19418)) b!109827))

(assert (= (or b!109828 b!109827) bm!11642))

(assert (= (or b!109818 bm!11642) bm!11638))

(assert (= (or b!109818 b!109828) bm!11641))

(assert (= (or b!109815 bm!11638) bm!11643))

(assert (= (or b!109815 bm!11641) bm!11640))

(assert (= (and d!30825 res!54340) b!109829))

(assert (= (and d!30825 c!19422) b!109817))

(assert (= (and d!30825 (not c!19422)) b!109814))

(assert (= (and d!30825 res!54343) b!109813))

(assert (= (and b!109813 res!54345) b!109832))

(assert (= (and b!109813 (not res!54341)) b!109816))

(assert (= (and b!109816 res!54339) b!109823))

(assert (= (and b!109813 res!54338) b!109826))

(assert (= (and b!109826 c!19420) b!109830))

(assert (= (and b!109826 (not c!19420)) b!109819))

(assert (= (and b!109830 res!54346) b!109824))

(assert (= (or b!109830 b!109819) bm!11639))

(assert (= (and b!109826 res!54344) b!109825))

(assert (= (and b!109825 c!19421) b!109822))

(assert (= (and b!109825 (not c!19421)) b!109821))

(assert (= (and b!109822 res!54342) b!109831))

(assert (= (or b!109822 b!109821) bm!11637))

(declare-fun b_lambda!4925 () Bool)

(assert (=> (not b_lambda!4925) (not b!109823)))

(assert (=> b!109823 t!5735))

(declare-fun b_and!6777 () Bool)

(assert (= b_and!6773 (and (=> t!5735 result!3513) b_and!6777)))

(assert (=> b!109823 t!5737))

(declare-fun b_and!6779 () Bool)

(assert (= b_and!6775 (and (=> t!5737 result!3517) b_and!6779)))

(assert (=> b!109832 m!124267))

(assert (=> b!109832 m!124267))

(assert (=> b!109832 m!124279))

(declare-fun m!124335 () Bool)

(assert (=> b!109817 m!124335))

(declare-fun m!124337 () Bool)

(assert (=> b!109817 m!124337))

(declare-fun m!124339 () Bool)

(assert (=> b!109817 m!124339))

(declare-fun m!124341 () Bool)

(assert (=> b!109817 m!124341))

(declare-fun m!124343 () Bool)

(assert (=> b!109817 m!124343))

(declare-fun m!124345 () Bool)

(assert (=> b!109817 m!124345))

(declare-fun m!124347 () Bool)

(assert (=> b!109817 m!124347))

(declare-fun m!124349 () Bool)

(assert (=> b!109817 m!124349))

(declare-fun m!124351 () Bool)

(assert (=> b!109817 m!124351))

(declare-fun m!124353 () Bool)

(assert (=> b!109817 m!124353))

(declare-fun m!124355 () Bool)

(assert (=> b!109817 m!124355))

(assert (=> b!109817 m!124343))

(assert (=> b!109817 m!124347))

(declare-fun m!124357 () Bool)

(assert (=> b!109817 m!124357))

(assert (=> b!109817 m!124267))

(assert (=> b!109817 m!124117))

(assert (=> b!109817 m!124353))

(declare-fun m!124359 () Bool)

(assert (=> b!109817 m!124359))

(declare-fun m!124361 () Bool)

(assert (=> b!109817 m!124361))

(assert (=> b!109817 m!124359))

(declare-fun m!124363 () Bool)

(assert (=> b!109817 m!124363))

(assert (=> b!109829 m!124267))

(assert (=> b!109829 m!124267))

(assert (=> b!109829 m!124279))

(declare-fun m!124365 () Bool)

(assert (=> bm!11639 m!124365))

(assert (=> bm!11643 m!124117))

(assert (=> d!30825 m!124107))

(declare-fun m!124367 () Bool)

(assert (=> bm!11640 m!124367))

(declare-fun m!124369 () Bool)

(assert (=> b!109824 m!124369))

(declare-fun m!124371 () Bool)

(assert (=> bm!11637 m!124371))

(declare-fun m!124373 () Bool)

(assert (=> b!109831 m!124373))

(assert (=> b!109823 m!124267))

(declare-fun m!124375 () Bool)

(assert (=> b!109823 m!124375))

(assert (=> b!109823 m!124267))

(assert (=> b!109823 m!124273))

(assert (=> b!109823 m!124273))

(assert (=> b!109823 m!124091))

(assert (=> b!109823 m!124277))

(assert (=> b!109823 m!124091))

(declare-fun m!124377 () Bool)

(assert (=> b!109815 m!124377))

(assert (=> b!109816 m!124267))

(assert (=> b!109816 m!124267))

(declare-fun m!124379 () Bool)

(assert (=> b!109816 m!124379))

(assert (=> b!109590 d!30825))

(declare-fun d!30827 () Bool)

(declare-fun e!71476 () Bool)

(assert (=> d!30827 e!71476))

(declare-fun res!54349 () Bool)

(assert (=> d!30827 (=> res!54349 e!71476)))

(declare-fun lt!56567 () Bool)

(assert (=> d!30827 (= res!54349 (not lt!56567))))

(declare-fun lt!56568 () Bool)

(assert (=> d!30827 (= lt!56567 lt!56568)))

(declare-fun lt!56565 () Unit!3382)

(declare-fun e!71475 () Unit!3382)

(assert (=> d!30827 (= lt!56565 e!71475)))

(declare-fun c!19425 () Bool)

(assert (=> d!30827 (= c!19425 lt!56568)))

(declare-fun containsKey!162 (List!1609 (_ BitVec 64)) Bool)

(assert (=> d!30827 (= lt!56568 (containsKey!162 (toList!789 lt!56367) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(assert (=> d!30827 (= (contains!824 lt!56367 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) lt!56567)))

(declare-fun b!109840 () Bool)

(declare-fun lt!56566 () Unit!3382)

(assert (=> b!109840 (= e!71475 lt!56566)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!110 (List!1609 (_ BitVec 64)) Unit!3382)

(assert (=> b!109840 (= lt!56566 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 lt!56367) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(declare-fun isDefined!111 (Option!165) Bool)

(assert (=> b!109840 (isDefined!111 (getValueByKey!159 (toList!789 lt!56367) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(declare-fun b!109841 () Bool)

(declare-fun Unit!3391 () Unit!3382)

(assert (=> b!109841 (= e!71475 Unit!3391)))

(declare-fun b!109842 () Bool)

(assert (=> b!109842 (= e!71476 (isDefined!111 (getValueByKey!159 (toList!789 lt!56367) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355))))))

(assert (= (and d!30827 c!19425) b!109840))

(assert (= (and d!30827 (not c!19425)) b!109841))

(assert (= (and d!30827 (not res!54349)) b!109842))

(assert (=> d!30827 m!124087))

(declare-fun m!124381 () Bool)

(assert (=> d!30827 m!124381))

(assert (=> b!109840 m!124087))

(declare-fun m!124383 () Bool)

(assert (=> b!109840 m!124383))

(assert (=> b!109840 m!124087))

(declare-fun m!124385 () Bool)

(assert (=> b!109840 m!124385))

(assert (=> b!109840 m!124385))

(declare-fun m!124387 () Bool)

(assert (=> b!109840 m!124387))

(assert (=> b!109842 m!124087))

(assert (=> b!109842 m!124385))

(assert (=> b!109842 m!124385))

(assert (=> b!109842 m!124387))

(assert (=> b!109577 d!30827))

(declare-fun bm!11692 () Bool)

(declare-fun call!11717 () Unit!3382)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!49 (array!4371 array!4373 (_ BitVec 32) (_ BitVec 32) V!3241 V!3241 (_ BitVec 64) Int) Unit!3382)

(assert (=> bm!11692 (= call!11717 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!49 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (defaultEntry!2626 newMap!16)))))

(declare-fun b!109923 () Bool)

(declare-fun e!71535 () Unit!3382)

(declare-fun lt!56640 () Unit!3382)

(assert (=> b!109923 (= e!71535 lt!56640)))

(declare-fun call!11702 () Unit!3382)

(assert (=> b!109923 (= lt!56640 call!11702)))

(declare-datatypes ((SeekEntryResult!255 0))(
  ( (MissingZero!255 (index!3170 (_ BitVec 32))) (Found!255 (index!3171 (_ BitVec 32))) (Intermediate!255 (undefined!1067 Bool) (index!3172 (_ BitVec 32)) (x!13943 (_ BitVec 32))) (Undefined!255) (MissingVacant!255 (index!3173 (_ BitVec 32))) )
))
(declare-fun lt!56645 () SeekEntryResult!255)

(declare-fun call!11697 () SeekEntryResult!255)

(assert (=> b!109923 (= lt!56645 call!11697)))

(declare-fun res!54383 () Bool)

(assert (=> b!109923 (= res!54383 ((_ is Found!255) lt!56645))))

(declare-fun e!71526 () Bool)

(assert (=> b!109923 (=> (not res!54383) (not e!71526))))

(assert (=> b!109923 e!71526))

(declare-fun call!11712 () ListLongMap!1547)

(declare-fun call!11711 () ListLongMap!1547)

(declare-fun b!109924 () Bool)

(declare-fun e!71532 () Bool)

(assert (=> b!109924 (= e!71532 (= call!11712 (+!144 call!11711 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))

(declare-fun bm!11693 () Bool)

(declare-fun call!11703 () ListLongMap!1547)

(declare-fun call!11714 () ListLongMap!1547)

(assert (=> bm!11693 (= call!11703 call!11714)))

(declare-fun bm!11694 () Bool)

(declare-fun call!11699 () Bool)

(declare-fun call!11704 () Bool)

(assert (=> bm!11694 (= call!11699 call!11704)))

(declare-fun b!109925 () Bool)

(declare-fun e!71539 () tuple2!2386)

(declare-fun lt!56642 () tuple2!2386)

(assert (=> b!109925 (= e!71539 (tuple2!2387 (_1!1204 lt!56642) (_2!1204 lt!56642)))))

(declare-fun call!11696 () tuple2!2386)

(assert (=> b!109925 (= lt!56642 call!11696)))

(declare-fun call!11695 () SeekEntryResult!255)

(declare-fun bm!11695 () Bool)

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!4371 (_ BitVec 32)) SeekEntryResult!255)

(assert (=> bm!11695 (= call!11695 (seekEntryOrOpen!0 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (_keys!4340 newMap!16) (mask!6794 newMap!16)))))

(declare-fun b!109926 () Bool)

(declare-fun res!54384 () Bool)

(declare-fun e!71538 () Bool)

(assert (=> b!109926 (=> (not res!54384) (not e!71538))))

(declare-fun call!11718 () Bool)

(assert (=> b!109926 (= res!54384 call!11718)))

(declare-fun e!71524 () Bool)

(assert (=> b!109926 (= e!71524 e!71538)))

(declare-fun lt!56625 () array!4373)

(declare-fun bm!11696 () Bool)

(declare-fun c!19460 () Bool)

(declare-fun call!11700 () ListLongMap!1547)

(assert (=> bm!11696 (= call!11700 (getCurrentListMap!475 (_keys!4340 newMap!16) (ite c!19460 (_values!2609 newMap!16) lt!56625) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun b!109927 () Bool)

(declare-fun lt!56624 () Unit!3382)

(declare-fun lt!56644 () Unit!3382)

(assert (=> b!109927 (= lt!56624 lt!56644)))

(declare-fun lt!56646 () SeekEntryResult!255)

(assert (=> b!109927 (contains!824 call!11700 (select (arr!2072 (_keys!4340 newMap!16)) (index!3171 lt!56646)))))

(declare-fun lemmaValidKeyInArrayIsInListMap!109 (array!4371 array!4373 (_ BitVec 32) (_ BitVec 32) V!3241 V!3241 (_ BitVec 32) Int) Unit!3382)

(assert (=> b!109927 (= lt!56644 (lemmaValidKeyInArrayIsInListMap!109 (_keys!4340 newMap!16) lt!56625 (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (index!3171 lt!56646) (defaultEntry!2626 newMap!16)))))

(assert (=> b!109927 (= lt!56625 (array!4374 (store (arr!2073 (_values!2609 newMap!16)) (index!3171 lt!56646) (ValueCellFull!1004 lt!56360)) (size!2330 (_values!2609 newMap!16))))))

(declare-fun lt!56632 () Unit!3382)

(declare-fun lt!56627 () Unit!3382)

(assert (=> b!109927 (= lt!56632 lt!56627)))

(declare-fun call!11707 () ListLongMap!1547)

(declare-fun call!11715 () ListLongMap!1547)

(assert (=> b!109927 (= call!11707 call!11715)))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!49 (array!4371 array!4373 (_ BitVec 32) (_ BitVec 32) V!3241 V!3241 (_ BitVec 32) (_ BitVec 64) V!3241 Int) Unit!3382)

(assert (=> b!109927 (= lt!56627 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!49 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (index!3171 lt!56646) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!56634 () Unit!3382)

(assert (=> b!109927 (= lt!56634 e!71535)))

(declare-fun c!19464 () Bool)

(declare-fun call!11708 () Bool)

(assert (=> b!109927 (= c!19464 call!11708)))

(declare-fun e!71527 () tuple2!2386)

(assert (=> b!109927 (= e!71527 (tuple2!2387 true (LongMapFixedSize!917 (defaultEntry!2626 newMap!16) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (_size!507 newMap!16) (_keys!4340 newMap!16) (array!4374 (store (arr!2073 (_values!2609 newMap!16)) (index!3171 lt!56646) (ValueCellFull!1004 lt!56360)) (size!2330 (_values!2609 newMap!16))) (_vacant!507 newMap!16))))))

(declare-fun b!109928 () Bool)

(declare-fun c!19461 () Bool)

(declare-fun lt!56630 () SeekEntryResult!255)

(assert (=> b!109928 (= c!19461 ((_ is MissingVacant!255) lt!56630))))

(declare-fun e!71522 () Bool)

(assert (=> b!109928 (= e!71524 e!71522)))

(declare-fun b!109929 () Bool)

(declare-fun res!54385 () Bool)

(declare-fun e!71523 () Bool)

(assert (=> b!109929 (=> (not res!54385) (not e!71523))))

(declare-fun lt!56643 () SeekEntryResult!255)

(assert (=> b!109929 (= res!54385 (= (select (arr!2072 (_keys!4340 newMap!16)) (index!3170 lt!56643)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!109930 () Bool)

(declare-fun res!54378 () Bool)

(assert (=> b!109930 (=> (not res!54378) (not e!71523))))

(assert (=> b!109930 (= res!54378 call!11699)))

(declare-fun e!71519 () Bool)

(assert (=> b!109930 (= e!71519 e!71523)))

(declare-fun bm!11697 () Bool)

(assert (=> bm!11697 (= call!11697 call!11695)))

(declare-fun b!109931 () Bool)

(declare-fun lt!56649 () Unit!3382)

(declare-fun lt!56629 () Unit!3382)

(assert (=> b!109931 (= lt!56649 lt!56629)))

(declare-fun call!11705 () ListLongMap!1547)

(declare-fun call!11698 () ListLongMap!1547)

(assert (=> b!109931 (= call!11705 call!11698)))

(declare-fun lt!56636 () (_ BitVec 32))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!49 (array!4371 array!4373 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3241 V!3241 V!3241 Int) Unit!3382)

(assert (=> b!109931 (= lt!56629 (lemmaChangeZeroKeyThenAddPairToListMap!49 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) lt!56636 (zeroValue!2497 newMap!16) lt!56360 (minValue!2497 newMap!16) (defaultEntry!2626 newMap!16)))))

(assert (=> b!109931 (= lt!56636 (bvor (extraKeys!2423 newMap!16) #b00000000000000000000000000000001))))

(declare-fun e!71525 () tuple2!2386)

(assert (=> b!109931 (= e!71525 (tuple2!2387 true (LongMapFixedSize!917 (defaultEntry!2626 newMap!16) (mask!6794 newMap!16) (bvor (extraKeys!2423 newMap!16) #b00000000000000000000000000000001) lt!56360 (minValue!2497 newMap!16) (_size!507 newMap!16) (_keys!4340 newMap!16) (_values!2609 newMap!16) (_vacant!507 newMap!16))))))

(declare-fun bm!11698 () Bool)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!49 (array!4371 array!4373 (_ BitVec 32) (_ BitVec 32) V!3241 V!3241 (_ BitVec 64) Int) Unit!3382)

(assert (=> bm!11698 (= call!11702 (lemmaInListMapThenSeekEntryOrOpenFindsIt!49 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (defaultEntry!2626 newMap!16)))))

(declare-fun b!109932 () Bool)

(assert (=> b!109932 (= e!71539 e!71527)))

(declare-fun c!19452 () Bool)

(assert (=> b!109932 (= c!19452 ((_ is MissingZero!255) lt!56646))))

(declare-fun bm!11699 () Bool)

(declare-fun call!11713 () Bool)

(declare-fun call!11709 () Bool)

(assert (=> bm!11699 (= call!11713 call!11709)))

(declare-fun b!109933 () Bool)

(declare-fun lt!56635 () tuple2!2386)

(assert (=> b!109933 (= lt!56635 call!11696)))

(assert (=> b!109933 (= e!71527 (tuple2!2387 (_1!1204 lt!56635) (_2!1204 lt!56635)))))

(declare-fun call!11716 () Bool)

(declare-fun bm!11700 () Bool)

(assert (=> bm!11700 (= call!11716 (arrayContainsKey!0 (_keys!4340 newMap!16) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun bm!11701 () Bool)

(declare-fun call!11701 () Bool)

(assert (=> bm!11701 (= call!11701 call!11716)))

(declare-fun b!109934 () Bool)

(declare-fun lt!56626 () Unit!3382)

(declare-fun lt!56637 () Unit!3382)

(assert (=> b!109934 (= lt!56626 lt!56637)))

(assert (=> b!109934 (= call!11705 call!11698)))

(declare-fun lt!56647 () (_ BitVec 32))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!49 (array!4371 array!4373 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3241 V!3241 V!3241 Int) Unit!3382)

(assert (=> b!109934 (= lt!56637 (lemmaChangeLongMinValueKeyThenAddPairToListMap!49 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) lt!56647 (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) lt!56360 (defaultEntry!2626 newMap!16)))))

(assert (=> b!109934 (= lt!56647 (bvor (extraKeys!2423 newMap!16) #b00000000000000000000000000000010))))

(assert (=> b!109934 (= e!71525 (tuple2!2387 true (LongMapFixedSize!917 (defaultEntry!2626 newMap!16) (mask!6794 newMap!16) (bvor (extraKeys!2423 newMap!16) #b00000000000000000000000000000010) (zeroValue!2497 newMap!16) lt!56360 (_size!507 newMap!16) (_keys!4340 newMap!16) (_values!2609 newMap!16) (_vacant!507 newMap!16))))))

(declare-fun lt!56641 () SeekEntryResult!255)

(declare-fun e!71528 () Bool)

(declare-fun b!109935 () Bool)

(assert (=> b!109935 (= e!71528 (= (select (arr!2072 (_keys!4340 newMap!16)) (index!3171 lt!56641)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(declare-fun bm!11702 () Bool)

(assert (=> bm!11702 (= call!11714 (getCurrentListMap!475 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun b!109936 () Bool)

(declare-fun e!71521 () Bool)

(assert (=> b!109936 (= e!71522 e!71521)))

(declare-fun res!54387 () Bool)

(assert (=> b!109936 (= res!54387 call!11718)))

(assert (=> b!109936 (=> (not res!54387) (not e!71521))))

(declare-fun b!109937 () Bool)

(declare-fun e!71533 () tuple2!2386)

(declare-fun e!71534 () tuple2!2386)

(assert (=> b!109937 (= e!71533 e!71534)))

(assert (=> b!109937 (= lt!56646 (seekEntryOrOpen!0 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (_keys!4340 newMap!16) (mask!6794 newMap!16)))))

(assert (=> b!109937 (= c!19460 ((_ is Undefined!255) lt!56646))))

(declare-fun bm!11703 () Bool)

(assert (=> bm!11703 (= call!11711 (map!1295 newMap!16))))

(declare-fun b!109938 () Bool)

(declare-fun Unit!3392 () Unit!3382)

(assert (=> b!109938 (= e!71535 Unit!3392)))

(declare-fun lt!56648 () Unit!3382)

(assert (=> b!109938 (= lt!56648 call!11717)))

(assert (=> b!109938 (= lt!56630 call!11697)))

(declare-fun c!19459 () Bool)

(assert (=> b!109938 (= c!19459 ((_ is MissingZero!255) lt!56630))))

(assert (=> b!109938 e!71524))

(declare-fun lt!56633 () Unit!3382)

(assert (=> b!109938 (= lt!56633 lt!56648)))

(assert (=> b!109938 false))

(declare-fun bm!11704 () Bool)

(declare-fun lt!56628 () tuple2!2386)

(assert (=> bm!11704 (= call!11712 (map!1295 (_2!1204 lt!56628)))))

(declare-fun d!30829 () Bool)

(declare-fun e!71520 () Bool)

(assert (=> d!30829 e!71520))

(declare-fun res!54382 () Bool)

(assert (=> d!30829 (=> (not res!54382) (not e!71520))))

(assert (=> d!30829 (= res!54382 (valid!434 (_2!1204 lt!56628)))))

(assert (=> d!30829 (= lt!56628 e!71533)))

(declare-fun c!19458 () Bool)

(assert (=> d!30829 (= c!19458 (= (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (bvneg (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355))))))

(assert (=> d!30829 (valid!434 newMap!16)))

(assert (=> d!30829 (= (update!165 newMap!16 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360) lt!56628)))

(declare-fun b!109939 () Bool)

(declare-fun c!19453 () Bool)

(assert (=> b!109939 (= c!19453 ((_ is MissingVacant!255) lt!56646))))

(assert (=> b!109939 (= e!71534 e!71539)))

(declare-fun bm!11705 () Bool)

(assert (=> bm!11705 (= call!11704 call!11709)))

(declare-fun b!109940 () Bool)

(declare-fun call!11706 () Bool)

(assert (=> b!109940 (= e!71521 (not call!11706))))

(declare-fun b!109941 () Bool)

(declare-fun res!54388 () Bool)

(assert (=> b!109941 (=> (not res!54388) (not e!71538))))

(assert (=> b!109941 (= res!54388 (= (select (arr!2072 (_keys!4340 newMap!16)) (index!3170 lt!56630)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!109942 () Bool)

(declare-fun e!71529 () Bool)

(assert (=> b!109942 (= e!71520 e!71529)))

(declare-fun c!19457 () Bool)

(assert (=> b!109942 (= c!19457 (_1!1204 lt!56628))))

(declare-fun b!109943 () Bool)

(assert (=> b!109943 (= e!71523 (not call!11701))))

(declare-fun bm!11706 () Bool)

(declare-fun c!19454 () Bool)

(assert (=> bm!11706 (= call!11715 (getCurrentListMap!475 (_keys!4340 newMap!16) (ite c!19458 (_values!2609 newMap!16) (array!4374 (store (arr!2073 (_values!2609 newMap!16)) (index!3171 lt!56646) (ValueCellFull!1004 lt!56360)) (size!2330 (_values!2609 newMap!16)))) (mask!6794 newMap!16) (ite c!19458 (ite c!19454 lt!56636 lt!56647) (extraKeys!2423 newMap!16)) (ite (and c!19458 c!19454) lt!56360 (zeroValue!2497 newMap!16)) (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun b!109944 () Bool)

(declare-fun res!54391 () Bool)

(assert (=> b!109944 (= res!54391 call!11713)))

(assert (=> b!109944 (=> (not res!54391) (not e!71526))))

(declare-fun b!109945 () Bool)

(declare-fun e!71537 () Bool)

(assert (=> b!109945 (= e!71537 ((_ is Undefined!255) lt!56643))))

(declare-fun b!109946 () Bool)

(assert (=> b!109946 (= e!71538 (not call!11706))))

(declare-fun b!109947 () Bool)

(declare-fun e!71530 () Bool)

(assert (=> b!109947 (= e!71537 e!71530)))

(declare-fun res!54389 () Bool)

(assert (=> b!109947 (= res!54389 call!11699)))

(assert (=> b!109947 (=> (not res!54389) (not e!71530))))

(declare-fun bm!11707 () Bool)

(assert (=> bm!11707 (= call!11698 call!11715)))

(declare-fun b!109948 () Bool)

(declare-fun e!71536 () ListLongMap!1547)

(assert (=> b!109948 (= e!71536 call!11700)))

(declare-fun b!109949 () Bool)

(assert (=> b!109949 (= e!71529 e!71532)))

(declare-fun res!54380 () Bool)

(assert (=> b!109949 (= res!54380 (contains!824 call!11712 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(assert (=> b!109949 (=> (not res!54380) (not e!71532))))

(declare-fun b!109950 () Bool)

(assert (=> b!109950 (= e!71522 ((_ is Undefined!255) lt!56630))))

(declare-fun bm!11708 () Bool)

(assert (=> bm!11708 (= call!11706 call!11716)))

(declare-fun b!109951 () Bool)

(assert (=> b!109951 (= e!71529 (= call!11712 call!11711))))

(declare-fun b!109952 () Bool)

(assert (=> b!109952 (= e!71536 call!11714)))

(declare-fun b!109953 () Bool)

(declare-fun res!54390 () Bool)

(assert (=> b!109953 (= res!54390 (= (select (arr!2072 (_keys!4340 newMap!16)) (index!3173 lt!56630)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!109953 (=> (not res!54390) (not e!71521))))

(declare-fun b!109954 () Bool)

(declare-fun lt!56638 () Unit!3382)

(declare-fun e!71531 () Unit!3382)

(assert (=> b!109954 (= lt!56638 e!71531)))

(declare-fun c!19455 () Bool)

(assert (=> b!109954 (= c!19455 call!11708)))

(assert (=> b!109954 (= e!71534 (tuple2!2387 false newMap!16))))

(declare-fun b!109955 () Bool)

(assert (=> b!109955 (= e!71530 (not call!11701))))

(declare-fun b!109956 () Bool)

(declare-fun res!54381 () Bool)

(assert (=> b!109956 (= res!54381 (= (select (arr!2072 (_keys!4340 newMap!16)) (index!3173 lt!56643)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!109956 (=> (not res!54381) (not e!71530))))

(declare-fun bm!11709 () Bool)

(assert (=> bm!11709 (= call!11707 (+!144 (ite c!19458 call!11703 call!11714) (ite c!19458 (ite c!19454 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))

(declare-fun bm!11710 () Bool)

(declare-fun call!11710 () SeekEntryResult!255)

(assert (=> bm!11710 (= call!11710 call!11695)))

(declare-fun b!109957 () Bool)

(assert (=> b!109957 (= e!71533 e!71525)))

(assert (=> b!109957 (= c!19454 (= (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun c!19456 () Bool)

(declare-fun bm!11711 () Bool)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!11711 (= call!11709 (inRange!0 (ite c!19460 (ite c!19455 (index!3171 lt!56641) (ite c!19456 (index!3170 lt!56643) (index!3173 lt!56643))) (ite c!19464 (index!3171 lt!56645) (ite c!19459 (index!3170 lt!56630) (index!3173 lt!56630)))) (mask!6794 newMap!16)))))

(declare-fun bm!11712 () Bool)

(declare-fun c!19462 () Bool)

(assert (=> bm!11712 (= c!19462 c!19460)))

(assert (=> bm!11712 (= call!11708 (contains!824 e!71536 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(declare-fun b!109958 () Bool)

(declare-fun lt!56623 () Unit!3382)

(assert (=> b!109958 (= e!71531 lt!56623)))

(assert (=> b!109958 (= lt!56623 call!11717)))

(assert (=> b!109958 (= lt!56643 call!11710)))

(assert (=> b!109958 (= c!19456 ((_ is MissingZero!255) lt!56643))))

(assert (=> b!109958 e!71519))

(declare-fun b!109959 () Bool)

(declare-fun Unit!3393 () Unit!3382)

(assert (=> b!109959 (= e!71531 Unit!3393)))

(declare-fun lt!56639 () Unit!3382)

(assert (=> b!109959 (= lt!56639 call!11702)))

(assert (=> b!109959 (= lt!56641 call!11710)))

(declare-fun res!54386 () Bool)

(assert (=> b!109959 (= res!54386 ((_ is Found!255) lt!56641))))

(assert (=> b!109959 (=> (not res!54386) (not e!71528))))

(assert (=> b!109959 e!71528))

(declare-fun lt!56631 () Unit!3382)

(assert (=> b!109959 (= lt!56631 lt!56639)))

(assert (=> b!109959 false))

(declare-fun b!109960 () Bool)

(declare-fun c!19463 () Bool)

(assert (=> b!109960 (= c!19463 ((_ is MissingVacant!255) lt!56643))))

(assert (=> b!109960 (= e!71519 e!71537)))

(declare-fun bm!11713 () Bool)

(declare-fun updateHelperNewKey!49 (LongMapFixedSize!916 (_ BitVec 64) V!3241 (_ BitVec 32)) tuple2!2386)

(assert (=> bm!11713 (= call!11696 (updateHelperNewKey!49 newMap!16 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360 (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646))))))

(declare-fun b!109961 () Bool)

(declare-fun res!54379 () Bool)

(assert (=> b!109961 (= res!54379 call!11704)))

(assert (=> b!109961 (=> (not res!54379) (not e!71528))))

(declare-fun b!109962 () Bool)

(assert (=> b!109962 (= e!71526 (= (select (arr!2072 (_keys!4340 newMap!16)) (index!3171 lt!56645)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(declare-fun bm!11714 () Bool)

(assert (=> bm!11714 (= call!11705 call!11707)))

(declare-fun bm!11715 () Bool)

(assert (=> bm!11715 (= call!11718 call!11713)))

(assert (= (and d!30829 c!19458) b!109957))

(assert (= (and d!30829 (not c!19458)) b!109937))

(assert (= (and b!109957 c!19454) b!109931))

(assert (= (and b!109957 (not c!19454)) b!109934))

(assert (= (or b!109931 b!109934) bm!11707))

(assert (= (or b!109931 b!109934) bm!11693))

(assert (= (or b!109931 b!109934) bm!11714))

(assert (= (and b!109937 c!19460) b!109954))

(assert (= (and b!109937 (not c!19460)) b!109939))

(assert (= (and b!109954 c!19455) b!109959))

(assert (= (and b!109954 (not c!19455)) b!109958))

(assert (= (and b!109959 res!54386) b!109961))

(assert (= (and b!109961 res!54379) b!109935))

(assert (= (and b!109958 c!19456) b!109930))

(assert (= (and b!109958 (not c!19456)) b!109960))

(assert (= (and b!109930 res!54378) b!109929))

(assert (= (and b!109929 res!54385) b!109943))

(assert (= (and b!109960 c!19463) b!109947))

(assert (= (and b!109960 (not c!19463)) b!109945))

(assert (= (and b!109947 res!54389) b!109956))

(assert (= (and b!109956 res!54381) b!109955))

(assert (= (or b!109930 b!109947) bm!11694))

(assert (= (or b!109943 b!109955) bm!11701))

(assert (= (or b!109961 bm!11694) bm!11705))

(assert (= (or b!109959 b!109958) bm!11710))

(assert (= (and b!109939 c!19453) b!109925))

(assert (= (and b!109939 (not c!19453)) b!109932))

(assert (= (and b!109932 c!19452) b!109933))

(assert (= (and b!109932 (not c!19452)) b!109927))

(assert (= (and b!109927 c!19464) b!109923))

(assert (= (and b!109927 (not c!19464)) b!109938))

(assert (= (and b!109923 res!54383) b!109944))

(assert (= (and b!109944 res!54391) b!109962))

(assert (= (and b!109938 c!19459) b!109926))

(assert (= (and b!109938 (not c!19459)) b!109928))

(assert (= (and b!109926 res!54384) b!109941))

(assert (= (and b!109941 res!54388) b!109946))

(assert (= (and b!109928 c!19461) b!109936))

(assert (= (and b!109928 (not c!19461)) b!109950))

(assert (= (and b!109936 res!54387) b!109953))

(assert (= (and b!109953 res!54390) b!109940))

(assert (= (or b!109926 b!109936) bm!11715))

(assert (= (or b!109946 b!109940) bm!11708))

(assert (= (or b!109944 bm!11715) bm!11699))

(assert (= (or b!109923 b!109938) bm!11697))

(assert (= (or b!109925 b!109933) bm!11713))

(assert (= (or bm!11701 bm!11708) bm!11700))

(assert (= (or b!109959 b!109923) bm!11698))

(assert (= (or b!109954 b!109927) bm!11696))

(assert (= (or b!109958 b!109938) bm!11692))

(assert (= (or bm!11710 bm!11697) bm!11695))

(assert (= (or bm!11705 bm!11699) bm!11711))

(assert (= (or b!109954 b!109927) bm!11712))

(assert (= (and bm!11712 c!19462) b!109948))

(assert (= (and bm!11712 (not c!19462)) b!109952))

(assert (= (or bm!11707 b!109927) bm!11706))

(assert (= (or bm!11693 b!109927 b!109952) bm!11702))

(assert (= (or bm!11714 b!109927) bm!11709))

(assert (= (and d!30829 res!54382) b!109942))

(assert (= (and b!109942 c!19457) b!109949))

(assert (= (and b!109942 (not c!19457)) b!109951))

(assert (= (and b!109949 res!54380) b!109924))

(assert (= (or b!109949 b!109924 b!109951) bm!11704))

(assert (= (or b!109924 b!109951) bm!11703))

(assert (=> bm!11698 m!124087))

(declare-fun m!124389 () Bool)

(assert (=> bm!11698 m!124389))

(declare-fun m!124391 () Bool)

(assert (=> bm!11709 m!124391))

(declare-fun m!124393 () Bool)

(assert (=> bm!11706 m!124393))

(declare-fun m!124395 () Bool)

(assert (=> bm!11706 m!124395))

(declare-fun m!124397 () Bool)

(assert (=> bm!11704 m!124397))

(declare-fun m!124399 () Bool)

(assert (=> b!109935 m!124399))

(declare-fun m!124401 () Bool)

(assert (=> b!109962 m!124401))

(assert (=> bm!11700 m!124087))

(declare-fun m!124403 () Bool)

(assert (=> bm!11700 m!124403))

(assert (=> bm!11713 m!124087))

(declare-fun m!124405 () Bool)

(assert (=> bm!11713 m!124405))

(declare-fun m!124407 () Bool)

(assert (=> b!109927 m!124407))

(declare-fun m!124409 () Bool)

(assert (=> b!109927 m!124409))

(assert (=> b!109927 m!124087))

(declare-fun m!124411 () Bool)

(assert (=> b!109927 m!124411))

(assert (=> b!109927 m!124407))

(declare-fun m!124413 () Bool)

(assert (=> b!109927 m!124413))

(assert (=> b!109927 m!124393))

(declare-fun m!124415 () Bool)

(assert (=> bm!11696 m!124415))

(assert (=> b!109937 m!124087))

(declare-fun m!124417 () Bool)

(assert (=> b!109937 m!124417))

(assert (=> bm!11712 m!124087))

(declare-fun m!124419 () Bool)

(assert (=> bm!11712 m!124419))

(assert (=> b!109949 m!124087))

(declare-fun m!124421 () Bool)

(assert (=> b!109949 m!124421))

(declare-fun m!124423 () Bool)

(assert (=> b!109953 m!124423))

(assert (=> bm!11703 m!124081))

(assert (=> bm!11695 m!124087))

(assert (=> bm!11695 m!124417))

(declare-fun m!124425 () Bool)

(assert (=> b!109934 m!124425))

(declare-fun m!124427 () Bool)

(assert (=> b!109941 m!124427))

(declare-fun m!124429 () Bool)

(assert (=> bm!11711 m!124429))

(declare-fun m!124431 () Bool)

(assert (=> d!30829 m!124431))

(assert (=> d!30829 m!124079))

(declare-fun m!124433 () Bool)

(assert (=> b!109929 m!124433))

(assert (=> bm!11692 m!124087))

(declare-fun m!124435 () Bool)

(assert (=> bm!11692 m!124435))

(assert (=> bm!11702 m!124333))

(declare-fun m!124437 () Bool)

(assert (=> b!109956 m!124437))

(declare-fun m!124439 () Bool)

(assert (=> b!109931 m!124439))

(declare-fun m!124441 () Bool)

(assert (=> b!109924 m!124441))

(assert (=> b!109577 d!30829))

(declare-fun d!30831 () Bool)

(assert (=> d!30831 (= (array_inv!1283 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvsge (size!2329 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!109572 d!30831))

(declare-fun d!30833 () Bool)

(assert (=> d!30833 (= (array_inv!1284 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvsge (size!2330 (_values!2609 (v!2930 (underlying!370 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!109572 d!30833))

(declare-fun d!30835 () Bool)

(assert (=> d!30835 (= (array_inv!1283 (_keys!4340 newMap!16)) (bvsge (size!2329 (_keys!4340 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!109583 d!30835))

(declare-fun d!30837 () Bool)

(assert (=> d!30837 (= (array_inv!1284 (_values!2609 newMap!16)) (bvsge (size!2330 (_values!2609 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!109583 d!30837))

(declare-fun d!30839 () Bool)

(assert (=> d!30839 (= (valid!435 thiss!992) (valid!434 (v!2930 (underlying!370 thiss!992))))))

(declare-fun bs!4524 () Bool)

(assert (= bs!4524 d!30839))

(declare-fun m!124443 () Bool)

(assert (=> bs!4524 m!124443))

(assert (=> start!12684 d!30839))

(declare-fun d!30841 () Bool)

(assert (=> d!30841 (not (arrayContainsKey!0 (_keys!4340 (v!2930 (underlying!370 thiss!992))) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!56652 () Unit!3382)

(declare-fun choose!68 (array!4371 (_ BitVec 32) (_ BitVec 64) List!1610) Unit!3382)

(assert (=> d!30841 (= lt!56652 (choose!68 (_keys!4340 (v!2930 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (Cons!1606 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) Nil!1607)))))

(assert (=> d!30841 (bvslt (size!2329 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!30841 (= (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!4340 (v!2930 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (Cons!1606 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) Nil!1607)) lt!56652)))

(declare-fun bs!4525 () Bool)

(assert (= bs!4525 d!30841))

(assert (=> bs!4525 m!124087))

(assert (=> bs!4525 m!124127))

(assert (=> bs!4525 m!124087))

(declare-fun m!124445 () Bool)

(assert (=> bs!4525 m!124445))

(assert (=> b!109584 d!30841))

(declare-fun d!30843 () Bool)

(assert (=> d!30843 (arrayNoDuplicates!0 (_keys!4340 (v!2930 (underlying!370 thiss!992))) from!355 Nil!1607)))

(declare-fun lt!56655 () Unit!3382)

(declare-fun choose!39 (array!4371 (_ BitVec 32) (_ BitVec 32)) Unit!3382)

(assert (=> d!30843 (= lt!56655 (choose!39 (_keys!4340 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000000000 from!355))))

(assert (=> d!30843 (bvslt (size!2329 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!30843 (= (lemmaNoDuplicateFromThenFromBigger!0 (_keys!4340 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000000000 from!355) lt!56655)))

(declare-fun bs!4526 () Bool)

(assert (= bs!4526 d!30843))

(assert (=> bs!4526 m!124123))

(declare-fun m!124447 () Bool)

(assert (=> bs!4526 m!124447))

(assert (=> b!109584 d!30843))

(declare-fun d!30845 () Bool)

(declare-fun res!54396 () Bool)

(declare-fun e!71544 () Bool)

(assert (=> d!30845 (=> res!54396 e!71544)))

(assert (=> d!30845 (= res!54396 (= (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(assert (=> d!30845 (= (arrayContainsKey!0 (_keys!4340 (v!2930 (underlying!370 thiss!992))) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)) e!71544)))

(declare-fun b!109967 () Bool)

(declare-fun e!71545 () Bool)

(assert (=> b!109967 (= e!71544 e!71545)))

(declare-fun res!54397 () Bool)

(assert (=> b!109967 (=> (not res!54397) (not e!71545))))

(assert (=> b!109967 (= res!54397 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2329 (_keys!4340 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun b!109968 () Bool)

(assert (=> b!109968 (= e!71545 (arrayContainsKey!0 (_keys!4340 (v!2930 (underlying!370 thiss!992))) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (= (and d!30845 (not res!54396)) b!109967))

(assert (= (and b!109967 res!54397) b!109968))

(assert (=> d!30845 m!124267))

(assert (=> b!109968 m!124087))

(declare-fun m!124449 () Bool)

(assert (=> b!109968 m!124449))

(assert (=> b!109584 d!30845))

(declare-fun d!30847 () Bool)

(declare-fun e!71548 () Bool)

(assert (=> d!30847 e!71548))

(declare-fun c!19467 () Bool)

(assert (=> d!30847 (= c!19467 (and (not (= (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!56658 () Unit!3382)

(declare-fun choose!690 (array!4371 array!4373 (_ BitVec 32) (_ BitVec 32) V!3241 V!3241 (_ BitVec 64) (_ BitVec 32) Int) Unit!3382)

(assert (=> d!30847 (= lt!56658 (choose!690 (_keys!4340 (v!2930 (underlying!370 thiss!992))) (_values!2609 (v!2930 (underlying!370 thiss!992))) (mask!6794 (v!2930 (underlying!370 thiss!992))) (extraKeys!2423 (v!2930 (underlying!370 thiss!992))) (zeroValue!2497 (v!2930 (underlying!370 thiss!992))) (minValue!2497 (v!2930 (underlying!370 thiss!992))) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2626 (v!2930 (underlying!370 thiss!992)))))))

(assert (=> d!30847 (validMask!0 (mask!6794 (v!2930 (underlying!370 thiss!992))))))

(assert (=> d!30847 (= (lemmaListMapContainsThenArrayContainsFrom!105 (_keys!4340 (v!2930 (underlying!370 thiss!992))) (_values!2609 (v!2930 (underlying!370 thiss!992))) (mask!6794 (v!2930 (underlying!370 thiss!992))) (extraKeys!2423 (v!2930 (underlying!370 thiss!992))) (zeroValue!2497 (v!2930 (underlying!370 thiss!992))) (minValue!2497 (v!2930 (underlying!370 thiss!992))) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2626 (v!2930 (underlying!370 thiss!992)))) lt!56658)))

(declare-fun b!109973 () Bool)

(assert (=> b!109973 (= e!71548 (arrayContainsKey!0 (_keys!4340 (v!2930 (underlying!370 thiss!992))) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!109974 () Bool)

(assert (=> b!109974 (= e!71548 (ite (= (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2423 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2423 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!30847 c!19467) b!109973))

(assert (= (and d!30847 (not c!19467)) b!109974))

(assert (=> d!30847 m!124087))

(declare-fun m!124451 () Bool)

(assert (=> d!30847 m!124451))

(assert (=> d!30847 m!124107))

(assert (=> b!109973 m!124087))

(assert (=> b!109973 m!124127))

(assert (=> b!109584 d!30847))

(declare-fun b!109986 () Bool)

(declare-fun e!71560 () Bool)

(declare-fun e!71559 () Bool)

(assert (=> b!109986 (= e!71560 e!71559)))

(declare-fun c!19470 () Bool)

(assert (=> b!109986 (= c!19470 (validKeyInArray!0 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(declare-fun call!11721 () Bool)

(declare-fun bm!11718 () Bool)

(assert (=> bm!11718 (= call!11721 (arrayNoDuplicates!0 (_keys!4340 (v!2930 (underlying!370 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!19470 (Cons!1606 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) Nil!1607) Nil!1607)))))

(declare-fun b!109987 () Bool)

(assert (=> b!109987 (= e!71559 call!11721)))

(declare-fun b!109988 () Bool)

(assert (=> b!109988 (= e!71559 call!11721)))

(declare-fun b!109989 () Bool)

(declare-fun e!71558 () Bool)

(declare-fun contains!828 (List!1610 (_ BitVec 64)) Bool)

(assert (=> b!109989 (= e!71558 (contains!828 Nil!1607 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(declare-fun d!30849 () Bool)

(declare-fun res!54404 () Bool)

(declare-fun e!71557 () Bool)

(assert (=> d!30849 (=> res!54404 e!71557)))

(assert (=> d!30849 (= res!54404 (bvsge from!355 (size!2329 (_keys!4340 (v!2930 (underlying!370 thiss!992))))))))

(assert (=> d!30849 (= (arrayNoDuplicates!0 (_keys!4340 (v!2930 (underlying!370 thiss!992))) from!355 Nil!1607) e!71557)))

(declare-fun b!109985 () Bool)

(assert (=> b!109985 (= e!71557 e!71560)))

(declare-fun res!54405 () Bool)

(assert (=> b!109985 (=> (not res!54405) (not e!71560))))

(assert (=> b!109985 (= res!54405 (not e!71558))))

(declare-fun res!54406 () Bool)

(assert (=> b!109985 (=> (not res!54406) (not e!71558))))

(assert (=> b!109985 (= res!54406 (validKeyInArray!0 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(assert (= (and d!30849 (not res!54404)) b!109985))

(assert (= (and b!109985 res!54406) b!109989))

(assert (= (and b!109985 res!54405) b!109986))

(assert (= (and b!109986 c!19470) b!109988))

(assert (= (and b!109986 (not c!19470)) b!109987))

(assert (= (or b!109988 b!109987) bm!11718))

(assert (=> b!109986 m!124087))

(assert (=> b!109986 m!124087))

(declare-fun m!124453 () Bool)

(assert (=> b!109986 m!124453))

(assert (=> bm!11718 m!124087))

(declare-fun m!124455 () Bool)

(assert (=> bm!11718 m!124455))

(assert (=> b!109989 m!124087))

(assert (=> b!109989 m!124087))

(declare-fun m!124457 () Bool)

(assert (=> b!109989 m!124457))

(assert (=> b!109985 m!124087))

(assert (=> b!109985 m!124087))

(assert (=> b!109985 m!124453))

(assert (=> b!109584 d!30849))

(declare-fun d!30851 () Bool)

(declare-fun res!54413 () Bool)

(declare-fun e!71563 () Bool)

(assert (=> d!30851 (=> (not res!54413) (not e!71563))))

(declare-fun simpleValid!76 (LongMapFixedSize!916) Bool)

(assert (=> d!30851 (= res!54413 (simpleValid!76 newMap!16))))

(assert (=> d!30851 (= (valid!434 newMap!16) e!71563)))

(declare-fun b!109996 () Bool)

(declare-fun res!54414 () Bool)

(assert (=> b!109996 (=> (not res!54414) (not e!71563))))

(declare-fun arrayCountValidKeys!0 (array!4371 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!109996 (= res!54414 (= (arrayCountValidKeys!0 (_keys!4340 newMap!16) #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))) (_size!507 newMap!16)))))

(declare-fun b!109997 () Bool)

(declare-fun res!54415 () Bool)

(assert (=> b!109997 (=> (not res!54415) (not e!71563))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!4371 (_ BitVec 32)) Bool)

(assert (=> b!109997 (= res!54415 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4340 newMap!16) (mask!6794 newMap!16)))))

(declare-fun b!109998 () Bool)

(assert (=> b!109998 (= e!71563 (arrayNoDuplicates!0 (_keys!4340 newMap!16) #b00000000000000000000000000000000 Nil!1607))))

(assert (= (and d!30851 res!54413) b!109996))

(assert (= (and b!109996 res!54414) b!109997))

(assert (= (and b!109997 res!54415) b!109998))

(declare-fun m!124459 () Bool)

(assert (=> d!30851 m!124459))

(declare-fun m!124461 () Bool)

(assert (=> b!109996 m!124461))

(declare-fun m!124463 () Bool)

(assert (=> b!109997 m!124463))

(declare-fun m!124465 () Bool)

(assert (=> b!109998 m!124465))

(assert (=> b!109575 d!30851))

(declare-fun mapIsEmpty!4009 () Bool)

(declare-fun mapRes!4009 () Bool)

(assert (=> mapIsEmpty!4009 mapRes!4009))

(declare-fun b!110005 () Bool)

(declare-fun e!71569 () Bool)

(assert (=> b!110005 (= e!71569 tp_is_empty!2695)))

(declare-fun mapNonEmpty!4009 () Bool)

(declare-fun tp!10039 () Bool)

(assert (=> mapNonEmpty!4009 (= mapRes!4009 (and tp!10039 e!71569))))

(declare-fun mapKey!4009 () (_ BitVec 32))

(declare-fun mapValue!4009 () ValueCell!1004)

(declare-fun mapRest!4009 () (Array (_ BitVec 32) ValueCell!1004))

(assert (=> mapNonEmpty!4009 (= mapRest!3994 (store mapRest!4009 mapKey!4009 mapValue!4009))))

(declare-fun condMapEmpty!4009 () Bool)

(declare-fun mapDefault!4009 () ValueCell!1004)

(assert (=> mapNonEmpty!3993 (= condMapEmpty!4009 (= mapRest!3994 ((as const (Array (_ BitVec 32) ValueCell!1004)) mapDefault!4009)))))

(declare-fun e!71568 () Bool)

(assert (=> mapNonEmpty!3993 (= tp!10012 (and e!71568 mapRes!4009))))

(declare-fun b!110006 () Bool)

(assert (=> b!110006 (= e!71568 tp_is_empty!2695)))

(assert (= (and mapNonEmpty!3993 condMapEmpty!4009) mapIsEmpty!4009))

(assert (= (and mapNonEmpty!3993 (not condMapEmpty!4009)) mapNonEmpty!4009))

(assert (= (and mapNonEmpty!4009 ((_ is ValueCellFull!1004) mapValue!4009)) b!110005))

(assert (= (and mapNonEmpty!3993 ((_ is ValueCellFull!1004) mapDefault!4009)) b!110006))

(declare-fun m!124467 () Bool)

(assert (=> mapNonEmpty!4009 m!124467))

(declare-fun mapIsEmpty!4010 () Bool)

(declare-fun mapRes!4010 () Bool)

(assert (=> mapIsEmpty!4010 mapRes!4010))

(declare-fun b!110007 () Bool)

(declare-fun e!71571 () Bool)

(assert (=> b!110007 (= e!71571 tp_is_empty!2695)))

(declare-fun mapNonEmpty!4010 () Bool)

(declare-fun tp!10040 () Bool)

(assert (=> mapNonEmpty!4010 (= mapRes!4010 (and tp!10040 e!71571))))

(declare-fun mapRest!4010 () (Array (_ BitVec 32) ValueCell!1004))

(declare-fun mapValue!4010 () ValueCell!1004)

(declare-fun mapKey!4010 () (_ BitVec 32))

(assert (=> mapNonEmpty!4010 (= mapRest!3993 (store mapRest!4010 mapKey!4010 mapValue!4010))))

(declare-fun condMapEmpty!4010 () Bool)

(declare-fun mapDefault!4010 () ValueCell!1004)

(assert (=> mapNonEmpty!3994 (= condMapEmpty!4010 (= mapRest!3993 ((as const (Array (_ BitVec 32) ValueCell!1004)) mapDefault!4010)))))

(declare-fun e!71570 () Bool)

(assert (=> mapNonEmpty!3994 (= tp!10011 (and e!71570 mapRes!4010))))

(declare-fun b!110008 () Bool)

(assert (=> b!110008 (= e!71570 tp_is_empty!2695)))

(assert (= (and mapNonEmpty!3994 condMapEmpty!4010) mapIsEmpty!4010))

(assert (= (and mapNonEmpty!3994 (not condMapEmpty!4010)) mapNonEmpty!4010))

(assert (= (and mapNonEmpty!4010 ((_ is ValueCellFull!1004) mapValue!4010)) b!110007))

(assert (= (and mapNonEmpty!3994 ((_ is ValueCellFull!1004) mapDefault!4010)) b!110008))

(declare-fun m!124469 () Bool)

(assert (=> mapNonEmpty!4010 m!124469))

(declare-fun b_lambda!4927 () Bool)

(assert (= b_lambda!4923 (or (and b!109572 b_free!2557) (and b!109583 b_free!2559 (= (defaultEntry!2626 newMap!16) (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))))) b_lambda!4927)))

(declare-fun b_lambda!4929 () Bool)

(assert (= b_lambda!4925 (or (and b!109572 b_free!2557) (and b!109583 b_free!2559 (= (defaultEntry!2626 newMap!16) (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))))) b_lambda!4929)))

(declare-fun b_lambda!4931 () Bool)

(assert (= b_lambda!4921 (or (and b!109572 b_free!2557) (and b!109583 b_free!2559 (= (defaultEntry!2626 newMap!16) (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))))) b_lambda!4931)))

(check-sat (not b!109840) (not bm!11706) (not d!30843) (not b!109824) (not b!109724) (not b!109829) (not bm!11637) (not b_lambda!4919) (not mapNonEmpty!4010) (not bm!11711) (not b!109832) (not b!109927) (not b!109816) (not b!109997) b_and!6777 (not mapNonEmpty!4009) (not bm!11622) (not bm!11704) b_and!6779 (not b!109815) (not bm!11698) (not d!30827) (not b!109924) (not b!109968) (not b!109842) (not bm!11702) (not b!109973) (not b!109949) (not b!109723) (not d!30839) (not b!109998) (not b_next!2559) (not bm!11718) (not bm!11640) (not d!30815) (not bm!11709) (not b!109762) (not bm!11696) (not bm!11639) (not bm!11692) (not b!109937) (not b!109750) (not d!30813) (not d!30809) (not d!30829) (not b_lambda!4931) (not b!109769) (not b!109996) (not d!30817) (not d!30811) (not bm!11643) (not b!109761) (not bm!11700) (not b_lambda!4929) (not d!30807) (not b!109755) (not d!30847) (not b!109758) (not d!30823) (not bm!11703) (not b!109763) (not d!30825) (not b!109764) (not b!109721) (not b!109722) (not b!109986) (not b_next!2557) (not b!109754) (not b!109756) tp_is_empty!2695 (not bm!11713) (not b!109934) (not b!109985) (not b!109751) (not bm!11695) (not b!109817) (not bm!11712) (not b!109989) (not d!30851) (not b!109931) (not b!109759) (not b!109770) (not b!109831) (not b!109757) (not b_lambda!4927) (not b!109823) (not d!30841))
(check-sat b_and!6777 b_and!6779 (not b_next!2557) (not b_next!2559))
(get-model)

(declare-fun e!71595 () Bool)

(declare-fun b!110043 () Bool)

(declare-fun lt!56735 () SeekEntryResult!255)

(assert (=> b!110043 (= e!71595 (= (select (arr!2072 (_keys!4340 newMap!16)) (index!3171 lt!56735)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(declare-fun call!11731 () SeekEntryResult!255)

(declare-fun bm!11727 () Bool)

(assert (=> bm!11727 (= call!11731 (seekEntryOrOpen!0 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (_keys!4340 newMap!16) (mask!6794 newMap!16)))))

(declare-fun b!110044 () Bool)

(declare-fun e!71590 () Bool)

(declare-fun e!71594 () Bool)

(assert (=> b!110044 (= e!71590 e!71594)))

(declare-fun res!54442 () Bool)

(declare-fun call!11732 () Bool)

(assert (=> b!110044 (= res!54442 call!11732)))

(assert (=> b!110044 (=> (not res!54442) (not e!71594))))

(declare-fun b!110045 () Bool)

(declare-fun e!71591 () Unit!3382)

(declare-fun Unit!3394 () Unit!3382)

(assert (=> b!110045 (= e!71591 Unit!3394)))

(declare-fun b!110046 () Bool)

(declare-fun call!11733 () Bool)

(assert (=> b!110046 (= e!71594 (not call!11733))))

(declare-fun e!71589 () Bool)

(declare-fun b!110048 () Bool)

(declare-fun lt!56730 () tuple2!2386)

(assert (=> b!110048 (= e!71589 (= (map!1295 (_2!1204 lt!56730)) (+!144 (map!1295 newMap!16) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))

(declare-fun b!110049 () Bool)

(declare-fun e!71593 () Unit!3382)

(declare-fun lt!56721 () Unit!3382)

(assert (=> b!110049 (= e!71593 lt!56721)))

(assert (=> b!110049 (= lt!56721 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!49 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (defaultEntry!2626 newMap!16)))))

(declare-fun lt!56734 () SeekEntryResult!255)

(assert (=> b!110049 (= lt!56734 call!11731)))

(declare-fun c!19481 () Bool)

(assert (=> b!110049 (= c!19481 ((_ is MissingZero!255) lt!56734))))

(declare-fun e!71588 () Bool)

(assert (=> b!110049 e!71588))

(declare-fun b!110050 () Bool)

(declare-fun Unit!3395 () Unit!3382)

(assert (=> b!110050 (= e!71593 Unit!3395)))

(declare-fun lt!56729 () Unit!3382)

(assert (=> b!110050 (= lt!56729 (lemmaInListMapThenSeekEntryOrOpenFindsIt!49 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (defaultEntry!2626 newMap!16)))))

(assert (=> b!110050 (= lt!56735 call!11731)))

(declare-fun res!54437 () Bool)

(assert (=> b!110050 (= res!54437 ((_ is Found!255) lt!56735))))

(assert (=> b!110050 (=> (not res!54437) (not e!71595))))

(assert (=> b!110050 e!71595))

(declare-fun lt!56740 () Unit!3382)

(assert (=> b!110050 (= lt!56740 lt!56729)))

(assert (=> b!110050 false))

(declare-fun b!110051 () Bool)

(declare-fun Unit!3396 () Unit!3382)

(assert (=> b!110051 (= e!71591 Unit!3396)))

(declare-fun lt!56746 () Unit!3382)

(declare-fun lemmaArrayContainsKeyThenInListMap!32 (array!4371 array!4373 (_ BitVec 32) (_ BitVec 32) V!3241 V!3241 (_ BitVec 64) (_ BitVec 32) Int) Unit!3382)

(assert (=> b!110051 (= lt!56746 (lemmaArrayContainsKeyThenInListMap!32 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(assert (=> b!110051 (contains!824 (getCurrentListMap!475 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355))))

(declare-fun lt!56738 () Unit!3382)

(assert (=> b!110051 (= lt!56738 lt!56746)))

(assert (=> b!110051 false))

(declare-fun b!110052 () Bool)

(declare-fun res!54435 () Bool)

(declare-fun e!71592 () Bool)

(assert (=> b!110052 (=> (not res!54435) (not e!71592))))

(assert (=> b!110052 (= res!54435 call!11732)))

(assert (=> b!110052 (= e!71588 e!71592)))

(declare-fun b!110053 () Bool)

(declare-fun res!54434 () Bool)

(declare-fun call!11730 () Bool)

(assert (=> b!110053 (= res!54434 call!11730)))

(assert (=> b!110053 (=> (not res!54434) (not e!71595))))

(declare-fun c!19479 () Bool)

(declare-fun bm!11728 () Bool)

(assert (=> bm!11728 (= call!11730 (inRange!0 (ite c!19479 (index!3171 lt!56735) (ite c!19481 (index!3170 lt!56734) (index!3173 lt!56734))) (mask!6794 newMap!16)))))

(declare-fun b!110054 () Bool)

(declare-fun res!54440 () Bool)

(assert (=> b!110054 (=> (not res!54440) (not e!71589))))

(assert (=> b!110054 (= res!54440 (valid!434 (_2!1204 lt!56730)))))

(declare-fun b!110055 () Bool)

(declare-fun res!54441 () Bool)

(assert (=> b!110055 (= res!54441 (= (select (arr!2072 (_keys!4340 newMap!16)) (index!3173 lt!56734)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!110055 (=> (not res!54441) (not e!71594))))

(declare-fun d!30853 () Bool)

(assert (=> d!30853 e!71589))

(declare-fun res!54439 () Bool)

(assert (=> d!30853 (=> (not res!54439) (not e!71589))))

(assert (=> d!30853 (= res!54439 (_1!1204 lt!56730))))

(assert (=> d!30853 (= lt!56730 (tuple2!2387 true (LongMapFixedSize!917 (defaultEntry!2626 newMap!16) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (bvadd (_size!507 newMap!16) #b00000000000000000000000000000001) (array!4372 (store (arr!2072 (_keys!4340 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2329 (_keys!4340 newMap!16))) (array!4374 (store (arr!2073 (_values!2609 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (ValueCellFull!1004 lt!56360)) (size!2330 (_values!2609 newMap!16))) (_vacant!507 newMap!16))))))

(declare-fun lt!56725 () Unit!3382)

(declare-fun lt!56731 () Unit!3382)

(assert (=> d!30853 (= lt!56725 lt!56731)))

(declare-fun lt!56727 () array!4373)

(declare-fun lt!56724 () array!4371)

(assert (=> d!30853 (contains!824 (getCurrentListMap!475 lt!56724 lt!56727 (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) (select (store (arr!2072 (_keys!4340 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646))))))

(assert (=> d!30853 (= lt!56731 (lemmaValidKeyInArrayIsInListMap!109 lt!56724 lt!56727 (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (defaultEntry!2626 newMap!16)))))

(assert (=> d!30853 (= lt!56727 (array!4374 (store (arr!2073 (_values!2609 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (ValueCellFull!1004 lt!56360)) (size!2330 (_values!2609 newMap!16))))))

(assert (=> d!30853 (= lt!56724 (array!4372 (store (arr!2072 (_keys!4340 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2329 (_keys!4340 newMap!16))))))

(declare-fun lt!56723 () Unit!3382)

(declare-fun lt!56733 () Unit!3382)

(assert (=> d!30853 (= lt!56723 lt!56733)))

(declare-fun lt!56737 () array!4371)

(assert (=> d!30853 (= (arrayCountValidKeys!0 lt!56737 (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (bvadd (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!4371 (_ BitVec 32)) Unit!3382)

(assert (=> d!30853 (= lt!56733 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!56737 (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646))))))

(assert (=> d!30853 (= lt!56737 (array!4372 (store (arr!2072 (_keys!4340 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2329 (_keys!4340 newMap!16))))))

(declare-fun lt!56726 () Unit!3382)

(declare-fun lt!56722 () Unit!3382)

(assert (=> d!30853 (= lt!56726 lt!56722)))

(declare-fun lt!56732 () array!4371)

(assert (=> d!30853 (arrayContainsKey!0 lt!56732 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4371 (_ BitVec 64) (_ BitVec 32)) Unit!3382)

(assert (=> d!30853 (= lt!56722 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!56732 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646))))))

(assert (=> d!30853 (= lt!56732 (array!4372 (store (arr!2072 (_keys!4340 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2329 (_keys!4340 newMap!16))))))

(declare-fun lt!56742 () Unit!3382)

(declare-fun lt!56744 () Unit!3382)

(assert (=> d!30853 (= lt!56742 lt!56744)))

(assert (=> d!30853 (= (+!144 (getCurrentListMap!475 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)) (getCurrentListMap!475 (array!4372 (store (arr!2072 (_keys!4340 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2329 (_keys!4340 newMap!16))) (array!4374 (store (arr!2073 (_values!2609 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (ValueCellFull!1004 lt!56360)) (size!2330 (_values!2609 newMap!16))) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!32 (array!4371 array!4373 (_ BitVec 32) (_ BitVec 32) V!3241 V!3241 (_ BitVec 32) (_ BitVec 64) V!3241 Int) Unit!3382)

(assert (=> d!30853 (= lt!56744 (lemmaAddValidKeyToArrayThenAddPairToListMap!32 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!56748 () Unit!3382)

(declare-fun lt!56739 () Unit!3382)

(assert (=> d!30853 (= lt!56748 lt!56739)))

(assert (=> d!30853 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4372 (store (arr!2072 (_keys!4340 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2329 (_keys!4340 newMap!16))) (mask!6794 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!4371 (_ BitVec 32) (_ BitVec 32)) Unit!3382)

(assert (=> d!30853 (= lt!56739 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (_keys!4340 newMap!16) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (mask!6794 newMap!16)))))

(declare-fun lt!56728 () Unit!3382)

(declare-fun lt!56747 () Unit!3382)

(assert (=> d!30853 (= lt!56728 lt!56747)))

(assert (=> d!30853 (= (arrayCountValidKeys!0 (array!4372 (store (arr!2072 (_keys!4340 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2329 (_keys!4340 newMap!16))) #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4340 newMap!16) #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!4371 (_ BitVec 32) (_ BitVec 64)) Unit!3382)

(assert (=> d!30853 (= lt!56747 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4340 newMap!16) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(declare-fun lt!56741 () Unit!3382)

(declare-fun lt!56719 () Unit!3382)

(assert (=> d!30853 (= lt!56741 lt!56719)))

(declare-fun lt!56736 () List!1610)

(declare-fun lt!56743 () (_ BitVec 32))

(assert (=> d!30853 (arrayNoDuplicates!0 (array!4372 (store (arr!2072 (_keys!4340 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2329 (_keys!4340 newMap!16))) lt!56743 lt!56736)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!4371 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1610) Unit!3382)

(assert (=> d!30853 (= lt!56719 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4340 newMap!16) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) lt!56743 lt!56736))))

(assert (=> d!30853 (= lt!56736 Nil!1607)))

(assert (=> d!30853 (= lt!56743 #b00000000000000000000000000000000)))

(declare-fun lt!56720 () Unit!3382)

(assert (=> d!30853 (= lt!56720 e!71591)))

(declare-fun c!19482 () Bool)

(assert (=> d!30853 (= c!19482 (arrayContainsKey!0 (_keys!4340 newMap!16) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!56745 () Unit!3382)

(assert (=> d!30853 (= lt!56745 e!71593)))

(assert (=> d!30853 (= c!19479 (contains!824 (getCurrentListMap!475 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(assert (=> d!30853 (valid!434 newMap!16)))

(assert (=> d!30853 (= (updateHelperNewKey!49 newMap!16 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360 (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646))) lt!56730)))

(declare-fun b!110047 () Bool)

(assert (=> b!110047 (= e!71590 ((_ is Undefined!255) lt!56734))))

(declare-fun b!110056 () Bool)

(declare-fun res!54438 () Bool)

(assert (=> b!110056 (=> (not res!54438) (not e!71589))))

(assert (=> b!110056 (= res!54438 (contains!824 (map!1295 (_2!1204 lt!56730)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(declare-fun bm!11729 () Bool)

(assert (=> bm!11729 (= call!11732 call!11730)))

(declare-fun b!110057 () Bool)

(assert (=> b!110057 (= e!71592 (not call!11733))))

(declare-fun bm!11730 () Bool)

(assert (=> bm!11730 (= call!11733 (arrayContainsKey!0 (_keys!4340 newMap!16) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!110058 () Bool)

(declare-fun res!54436 () Bool)

(assert (=> b!110058 (=> (not res!54436) (not e!71592))))

(assert (=> b!110058 (= res!54436 (= (select (arr!2072 (_keys!4340 newMap!16)) (index!3170 lt!56734)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110059 () Bool)

(declare-fun c!19480 () Bool)

(assert (=> b!110059 (= c!19480 ((_ is MissingVacant!255) lt!56734))))

(assert (=> b!110059 (= e!71588 e!71590)))

(assert (= (and d!30853 c!19479) b!110050))

(assert (= (and d!30853 (not c!19479)) b!110049))

(assert (= (and b!110050 res!54437) b!110053))

(assert (= (and b!110053 res!54434) b!110043))

(assert (= (and b!110049 c!19481) b!110052))

(assert (= (and b!110049 (not c!19481)) b!110059))

(assert (= (and b!110052 res!54435) b!110058))

(assert (= (and b!110058 res!54436) b!110057))

(assert (= (and b!110059 c!19480) b!110044))

(assert (= (and b!110059 (not c!19480)) b!110047))

(assert (= (and b!110044 res!54442) b!110055))

(assert (= (and b!110055 res!54441) b!110046))

(assert (= (or b!110052 b!110044) bm!11729))

(assert (= (or b!110057 b!110046) bm!11730))

(assert (= (or b!110053 bm!11729) bm!11728))

(assert (= (or b!110050 b!110049) bm!11727))

(assert (= (and d!30853 c!19482) b!110051))

(assert (= (and d!30853 (not c!19482)) b!110045))

(assert (= (and d!30853 res!54439) b!110054))

(assert (= (and b!110054 res!54440) b!110056))

(assert (= (and b!110056 res!54438) b!110048))

(assert (=> bm!11730 m!124087))

(assert (=> bm!11730 m!124403))

(assert (=> b!110051 m!124087))

(declare-fun m!124471 () Bool)

(assert (=> b!110051 m!124471))

(assert (=> b!110051 m!124333))

(assert (=> b!110051 m!124333))

(assert (=> b!110051 m!124087))

(declare-fun m!124473 () Bool)

(assert (=> b!110051 m!124473))

(declare-fun m!124475 () Bool)

(assert (=> b!110048 m!124475))

(assert (=> b!110048 m!124081))

(assert (=> b!110048 m!124081))

(declare-fun m!124477 () Bool)

(assert (=> b!110048 m!124477))

(declare-fun m!124479 () Bool)

(assert (=> b!110054 m!124479))

(assert (=> b!110050 m!124087))

(assert (=> b!110050 m!124389))

(declare-fun m!124481 () Bool)

(assert (=> bm!11728 m!124481))

(assert (=> bm!11727 m!124087))

(assert (=> bm!11727 m!124417))

(assert (=> b!110056 m!124475))

(assert (=> b!110056 m!124475))

(assert (=> b!110056 m!124087))

(declare-fun m!124483 () Bool)

(assert (=> b!110056 m!124483))

(declare-fun m!124485 () Bool)

(assert (=> b!110058 m!124485))

(declare-fun m!124487 () Bool)

(assert (=> b!110043 m!124487))

(declare-fun m!124489 () Bool)

(assert (=> d!30853 m!124489))

(assert (=> d!30853 m!124087))

(declare-fun m!124491 () Bool)

(assert (=> d!30853 m!124491))

(assert (=> d!30853 m!124087))

(declare-fun m!124493 () Bool)

(assert (=> d!30853 m!124493))

(assert (=> d!30853 m!124087))

(assert (=> d!30853 m!124403))

(declare-fun m!124495 () Bool)

(assert (=> d!30853 m!124495))

(declare-fun m!124497 () Bool)

(assert (=> d!30853 m!124497))

(declare-fun m!124499 () Bool)

(assert (=> d!30853 m!124499))

(declare-fun m!124501 () Bool)

(assert (=> d!30853 m!124501))

(assert (=> d!30853 m!124501))

(assert (=> d!30853 m!124499))

(declare-fun m!124503 () Bool)

(assert (=> d!30853 m!124503))

(declare-fun m!124505 () Bool)

(assert (=> d!30853 m!124505))

(assert (=> d!30853 m!124461))

(declare-fun m!124507 () Bool)

(assert (=> d!30853 m!124507))

(declare-fun m!124509 () Bool)

(assert (=> d!30853 m!124509))

(assert (=> d!30853 m!124087))

(declare-fun m!124511 () Bool)

(assert (=> d!30853 m!124511))

(assert (=> d!30853 m!124079))

(assert (=> d!30853 m!124087))

(declare-fun m!124513 () Bool)

(assert (=> d!30853 m!124513))

(assert (=> d!30853 m!124333))

(assert (=> d!30853 m!124087))

(assert (=> d!30853 m!124473))

(declare-fun m!124515 () Bool)

(assert (=> d!30853 m!124515))

(assert (=> d!30853 m!124333))

(declare-fun m!124517 () Bool)

(assert (=> d!30853 m!124517))

(declare-fun m!124519 () Bool)

(assert (=> d!30853 m!124519))

(assert (=> d!30853 m!124087))

(declare-fun m!124521 () Bool)

(assert (=> d!30853 m!124521))

(assert (=> d!30853 m!124333))

(declare-fun m!124523 () Bool)

(assert (=> d!30853 m!124523))

(assert (=> d!30853 m!124087))

(declare-fun m!124525 () Bool)

(assert (=> d!30853 m!124525))

(assert (=> b!110049 m!124087))

(assert (=> b!110049 m!124435))

(declare-fun m!124527 () Bool)

(assert (=> b!110055 m!124527))

(assert (=> bm!11713 d!30853))

(declare-fun d!30855 () Bool)

(assert (=> d!30855 (= (validKeyInArray!0 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) (and (not (= (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!109986 d!30855))

(declare-fun d!30857 () Bool)

(assert (=> d!30857 (= (validKeyInArray!0 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!109829 d!30857))

(declare-fun d!30859 () Bool)

(declare-fun e!71597 () Bool)

(assert (=> d!30859 e!71597))

(declare-fun res!54443 () Bool)

(assert (=> d!30859 (=> res!54443 e!71597)))

(declare-fun lt!56751 () Bool)

(assert (=> d!30859 (= res!54443 (not lt!56751))))

(declare-fun lt!56752 () Bool)

(assert (=> d!30859 (= lt!56751 lt!56752)))

(declare-fun lt!56749 () Unit!3382)

(declare-fun e!71596 () Unit!3382)

(assert (=> d!30859 (= lt!56749 e!71596)))

(declare-fun c!19483 () Bool)

(assert (=> d!30859 (= c!19483 lt!56752)))

(assert (=> d!30859 (= lt!56752 (containsKey!162 (toList!789 lt!56545) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!30859 (= (contains!824 lt!56545 #b1000000000000000000000000000000000000000000000000000000000000000) lt!56751)))

(declare-fun b!110060 () Bool)

(declare-fun lt!56750 () Unit!3382)

(assert (=> b!110060 (= e!71596 lt!56750)))

(assert (=> b!110060 (= lt!56750 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 lt!56545) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!110060 (isDefined!111 (getValueByKey!159 (toList!789 lt!56545) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110061 () Bool)

(declare-fun Unit!3397 () Unit!3382)

(assert (=> b!110061 (= e!71596 Unit!3397)))

(declare-fun b!110062 () Bool)

(assert (=> b!110062 (= e!71597 (isDefined!111 (getValueByKey!159 (toList!789 lt!56545) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30859 c!19483) b!110060))

(assert (= (and d!30859 (not c!19483)) b!110061))

(assert (= (and d!30859 (not res!54443)) b!110062))

(declare-fun m!124529 () Bool)

(assert (=> d!30859 m!124529))

(declare-fun m!124531 () Bool)

(assert (=> b!110060 m!124531))

(declare-fun m!124533 () Bool)

(assert (=> b!110060 m!124533))

(assert (=> b!110060 m!124533))

(declare-fun m!124535 () Bool)

(assert (=> b!110060 m!124535))

(assert (=> b!110062 m!124533))

(assert (=> b!110062 m!124533))

(assert (=> b!110062 m!124535))

(assert (=> bm!11637 d!30859))

(declare-fun d!30861 () Bool)

(declare-fun c!19484 () Bool)

(assert (=> d!30861 (= c!19484 ((_ is ValueCellFull!1004) (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!71598 () V!3241)

(assert (=> d!30861 (= (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!71598)))

(declare-fun b!110063 () Bool)

(assert (=> b!110063 (= e!71598 (get!1354 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!110064 () Bool)

(assert (=> b!110064 (= e!71598 (get!1355 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30861 c!19484) b!110063))

(assert (= (and d!30861 (not c!19484)) b!110064))

(assert (=> b!110063 m!124273))

(assert (=> b!110063 m!124091))

(declare-fun m!124537 () Bool)

(assert (=> b!110063 m!124537))

(assert (=> b!110064 m!124273))

(assert (=> b!110064 m!124091))

(declare-fun m!124539 () Bool)

(assert (=> b!110064 m!124539))

(assert (=> b!109757 d!30861))

(declare-fun d!30863 () Bool)

(declare-fun e!71599 () Bool)

(assert (=> d!30863 e!71599))

(declare-fun res!54445 () Bool)

(assert (=> d!30863 (=> (not res!54445) (not e!71599))))

(declare-fun lt!56756 () ListLongMap!1547)

(assert (=> d!30863 (= res!54445 (contains!824 lt!56756 (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!56755 () List!1609)

(assert (=> d!30863 (= lt!56756 (ListLongMap!1548 lt!56755))))

(declare-fun lt!56754 () Unit!3382)

(declare-fun lt!56753 () Unit!3382)

(assert (=> d!30863 (= lt!56754 lt!56753)))

(assert (=> d!30863 (= (getValueByKey!159 lt!56755 (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!164 (_2!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!30863 (= lt!56753 (lemmaContainsTupThenGetReturnValue!75 lt!56755 (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!30863 (= lt!56755 (insertStrictlySorted!78 (toList!789 call!11625) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!30863 (= (+!144 call!11625 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!56756)))

(declare-fun b!110065 () Bool)

(declare-fun res!54444 () Bool)

(assert (=> b!110065 (=> (not res!54444) (not e!71599))))

(assert (=> b!110065 (= res!54444 (= (getValueByKey!159 (toList!789 lt!56756) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!164 (_2!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!110066 () Bool)

(assert (=> b!110066 (= e!71599 (contains!827 (toList!789 lt!56756) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!30863 res!54445) b!110065))

(assert (= (and b!110065 res!54444) b!110066))

(declare-fun m!124541 () Bool)

(assert (=> d!30863 m!124541))

(declare-fun m!124543 () Bool)

(assert (=> d!30863 m!124543))

(declare-fun m!124545 () Bool)

(assert (=> d!30863 m!124545))

(declare-fun m!124547 () Bool)

(assert (=> d!30863 m!124547))

(declare-fun m!124549 () Bool)

(assert (=> b!110065 m!124549))

(declare-fun m!124551 () Bool)

(assert (=> b!110066 m!124551))

(assert (=> b!109757 d!30863))

(declare-fun d!30865 () Bool)

(declare-fun e!71600 () Bool)

(assert (=> d!30865 e!71600))

(declare-fun res!54447 () Bool)

(assert (=> d!30865 (=> (not res!54447) (not e!71600))))

(declare-fun lt!56760 () ListLongMap!1547)

(assert (=> d!30865 (= res!54447 (contains!824 lt!56760 (_1!1205 (tuple2!2389 lt!56474 lt!56478))))))

(declare-fun lt!56759 () List!1609)

(assert (=> d!30865 (= lt!56760 (ListLongMap!1548 lt!56759))))

(declare-fun lt!56758 () Unit!3382)

(declare-fun lt!56757 () Unit!3382)

(assert (=> d!30865 (= lt!56758 lt!56757)))

(assert (=> d!30865 (= (getValueByKey!159 lt!56759 (_1!1205 (tuple2!2389 lt!56474 lt!56478))) (Some!164 (_2!1205 (tuple2!2389 lt!56474 lt!56478))))))

(assert (=> d!30865 (= lt!56757 (lemmaContainsTupThenGetReturnValue!75 lt!56759 (_1!1205 (tuple2!2389 lt!56474 lt!56478)) (_2!1205 (tuple2!2389 lt!56474 lt!56478))))))

(assert (=> d!30865 (= lt!56759 (insertStrictlySorted!78 (toList!789 lt!56475) (_1!1205 (tuple2!2389 lt!56474 lt!56478)) (_2!1205 (tuple2!2389 lt!56474 lt!56478))))))

(assert (=> d!30865 (= (+!144 lt!56475 (tuple2!2389 lt!56474 lt!56478)) lt!56760)))

(declare-fun b!110067 () Bool)

(declare-fun res!54446 () Bool)

(assert (=> b!110067 (=> (not res!54446) (not e!71600))))

(assert (=> b!110067 (= res!54446 (= (getValueByKey!159 (toList!789 lt!56760) (_1!1205 (tuple2!2389 lt!56474 lt!56478))) (Some!164 (_2!1205 (tuple2!2389 lt!56474 lt!56478)))))))

(declare-fun b!110068 () Bool)

(assert (=> b!110068 (= e!71600 (contains!827 (toList!789 lt!56760) (tuple2!2389 lt!56474 lt!56478)))))

(assert (= (and d!30865 res!54447) b!110067))

(assert (= (and b!110067 res!54446) b!110068))

(declare-fun m!124553 () Bool)

(assert (=> d!30865 m!124553))

(declare-fun m!124555 () Bool)

(assert (=> d!30865 m!124555))

(declare-fun m!124557 () Bool)

(assert (=> d!30865 m!124557))

(declare-fun m!124559 () Bool)

(assert (=> d!30865 m!124559))

(declare-fun m!124561 () Bool)

(assert (=> b!110067 m!124561))

(declare-fun m!124563 () Bool)

(assert (=> b!110068 m!124563))

(assert (=> b!109757 d!30865))

(declare-fun d!30867 () Bool)

(assert (=> d!30867 (not (contains!824 (+!144 lt!56475 (tuple2!2389 lt!56474 lt!56478)) lt!56473))))

(declare-fun lt!56763 () Unit!3382)

(declare-fun choose!691 (ListLongMap!1547 (_ BitVec 64) V!3241 (_ BitVec 64)) Unit!3382)

(assert (=> d!30867 (= lt!56763 (choose!691 lt!56475 lt!56474 lt!56478 lt!56473))))

(declare-fun e!71603 () Bool)

(assert (=> d!30867 e!71603))

(declare-fun res!54450 () Bool)

(assert (=> d!30867 (=> (not res!54450) (not e!71603))))

(assert (=> d!30867 (= res!54450 (not (contains!824 lt!56475 lt!56473)))))

(assert (=> d!30867 (= (addStillNotContains!50 lt!56475 lt!56474 lt!56478 lt!56473) lt!56763)))

(declare-fun b!110072 () Bool)

(assert (=> b!110072 (= e!71603 (not (= lt!56474 lt!56473)))))

(assert (= (and d!30867 res!54450) b!110072))

(assert (=> d!30867 m!124287))

(assert (=> d!30867 m!124287))

(assert (=> d!30867 m!124289))

(declare-fun m!124565 () Bool)

(assert (=> d!30867 m!124565))

(declare-fun m!124567 () Bool)

(assert (=> d!30867 m!124567))

(assert (=> b!109757 d!30867))

(declare-fun d!30869 () Bool)

(declare-fun e!71605 () Bool)

(assert (=> d!30869 e!71605))

(declare-fun res!54451 () Bool)

(assert (=> d!30869 (=> res!54451 e!71605)))

(declare-fun lt!56766 () Bool)

(assert (=> d!30869 (= res!54451 (not lt!56766))))

(declare-fun lt!56767 () Bool)

(assert (=> d!30869 (= lt!56766 lt!56767)))

(declare-fun lt!56764 () Unit!3382)

(declare-fun e!71604 () Unit!3382)

(assert (=> d!30869 (= lt!56764 e!71604)))

(declare-fun c!19485 () Bool)

(assert (=> d!30869 (= c!19485 lt!56767)))

(assert (=> d!30869 (= lt!56767 (containsKey!162 (toList!789 (+!144 lt!56475 (tuple2!2389 lt!56474 lt!56478))) lt!56473))))

(assert (=> d!30869 (= (contains!824 (+!144 lt!56475 (tuple2!2389 lt!56474 lt!56478)) lt!56473) lt!56766)))

(declare-fun b!110073 () Bool)

(declare-fun lt!56765 () Unit!3382)

(assert (=> b!110073 (= e!71604 lt!56765)))

(assert (=> b!110073 (= lt!56765 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 (+!144 lt!56475 (tuple2!2389 lt!56474 lt!56478))) lt!56473))))

(assert (=> b!110073 (isDefined!111 (getValueByKey!159 (toList!789 (+!144 lt!56475 (tuple2!2389 lt!56474 lt!56478))) lt!56473))))

(declare-fun b!110074 () Bool)

(declare-fun Unit!3398 () Unit!3382)

(assert (=> b!110074 (= e!71604 Unit!3398)))

(declare-fun b!110075 () Bool)

(assert (=> b!110075 (= e!71605 (isDefined!111 (getValueByKey!159 (toList!789 (+!144 lt!56475 (tuple2!2389 lt!56474 lt!56478))) lt!56473)))))

(assert (= (and d!30869 c!19485) b!110073))

(assert (= (and d!30869 (not c!19485)) b!110074))

(assert (= (and d!30869 (not res!54451)) b!110075))

(declare-fun m!124569 () Bool)

(assert (=> d!30869 m!124569))

(declare-fun m!124571 () Bool)

(assert (=> b!110073 m!124571))

(declare-fun m!124573 () Bool)

(assert (=> b!110073 m!124573))

(assert (=> b!110073 m!124573))

(declare-fun m!124575 () Bool)

(assert (=> b!110073 m!124575))

(assert (=> b!110075 m!124573))

(assert (=> b!110075 m!124573))

(assert (=> b!110075 m!124575))

(assert (=> b!109757 d!30869))

(assert (=> d!30825 d!30819))

(declare-fun d!30871 () Bool)

(declare-fun e!71608 () Bool)

(assert (=> d!30871 e!71608))

(declare-fun res!54457 () Bool)

(assert (=> d!30871 (=> (not res!54457) (not e!71608))))

(declare-fun lt!56773 () SeekEntryResult!255)

(assert (=> d!30871 (= res!54457 ((_ is Found!255) lt!56773))))

(assert (=> d!30871 (= lt!56773 (seekEntryOrOpen!0 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (_keys!4340 newMap!16) (mask!6794 newMap!16)))))

(declare-fun lt!56772 () Unit!3382)

(declare-fun choose!692 (array!4371 array!4373 (_ BitVec 32) (_ BitVec 32) V!3241 V!3241 (_ BitVec 64) Int) Unit!3382)

(assert (=> d!30871 (= lt!56772 (choose!692 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (defaultEntry!2626 newMap!16)))))

(assert (=> d!30871 (validMask!0 (mask!6794 newMap!16))))

(assert (=> d!30871 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!49 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (defaultEntry!2626 newMap!16)) lt!56772)))

(declare-fun b!110080 () Bool)

(declare-fun res!54456 () Bool)

(assert (=> b!110080 (=> (not res!54456) (not e!71608))))

(assert (=> b!110080 (= res!54456 (inRange!0 (index!3171 lt!56773) (mask!6794 newMap!16)))))

(declare-fun b!110081 () Bool)

(assert (=> b!110081 (= e!71608 (= (select (arr!2072 (_keys!4340 newMap!16)) (index!3171 lt!56773)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(assert (=> b!110081 (and (bvsge (index!3171 lt!56773) #b00000000000000000000000000000000) (bvslt (index!3171 lt!56773) (size!2329 (_keys!4340 newMap!16))))))

(assert (= (and d!30871 res!54457) b!110080))

(assert (= (and b!110080 res!54456) b!110081))

(assert (=> d!30871 m!124087))

(assert (=> d!30871 m!124417))

(assert (=> d!30871 m!124087))

(declare-fun m!124577 () Bool)

(assert (=> d!30871 m!124577))

(declare-fun m!124579 () Bool)

(assert (=> d!30871 m!124579))

(declare-fun m!124581 () Bool)

(assert (=> b!110080 m!124581))

(declare-fun m!124583 () Bool)

(assert (=> b!110081 m!124583))

(assert (=> bm!11698 d!30871))

(declare-fun d!30873 () Bool)

(declare-fun get!1356 (Option!165) V!3241)

(assert (=> d!30873 (= (apply!100 lt!56479 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1356 (getValueByKey!159 (toList!789 lt!56479) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!4527 () Bool)

(assert (= bs!4527 d!30873))

(assert (=> bs!4527 m!124267))

(declare-fun m!124585 () Bool)

(assert (=> bs!4527 m!124585))

(assert (=> bs!4527 m!124585))

(declare-fun m!124587 () Bool)

(assert (=> bs!4527 m!124587))

(assert (=> b!109759 d!30873))

(assert (=> b!109759 d!30861))

(assert (=> b!109755 d!30857))

(declare-fun d!30875 () Bool)

(declare-fun lt!56776 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!114 (List!1609) (InoxSet tuple2!2388))

(assert (=> d!30875 (= lt!56776 (select (content!114 (toList!789 lt!56458)) lt!56363))))

(declare-fun e!71614 () Bool)

(assert (=> d!30875 (= lt!56776 e!71614)))

(declare-fun res!54463 () Bool)

(assert (=> d!30875 (=> (not res!54463) (not e!71614))))

(assert (=> d!30875 (= res!54463 ((_ is Cons!1605) (toList!789 lt!56458)))))

(assert (=> d!30875 (= (contains!827 (toList!789 lt!56458) lt!56363) lt!56776)))

(declare-fun b!110086 () Bool)

(declare-fun e!71613 () Bool)

(assert (=> b!110086 (= e!71614 e!71613)))

(declare-fun res!54462 () Bool)

(assert (=> b!110086 (=> res!54462 e!71613)))

(assert (=> b!110086 (= res!54462 (= (h!2204 (toList!789 lt!56458)) lt!56363))))

(declare-fun b!110087 () Bool)

(assert (=> b!110087 (= e!71613 (contains!827 (t!5738 (toList!789 lt!56458)) lt!56363))))

(assert (= (and d!30875 res!54463) b!110086))

(assert (= (and b!110086 (not res!54462)) b!110087))

(declare-fun m!124589 () Bool)

(assert (=> d!30875 m!124589))

(declare-fun m!124591 () Bool)

(assert (=> d!30875 m!124591))

(declare-fun m!124593 () Bool)

(assert (=> b!110087 m!124593))

(assert (=> b!109724 d!30875))

(declare-fun d!30877 () Bool)

(declare-fun e!71616 () Bool)

(assert (=> d!30877 e!71616))

(declare-fun res!54464 () Bool)

(assert (=> d!30877 (=> res!54464 e!71616)))

(declare-fun lt!56779 () Bool)

(assert (=> d!30877 (= res!54464 (not lt!56779))))

(declare-fun lt!56780 () Bool)

(assert (=> d!30877 (= lt!56779 lt!56780)))

(declare-fun lt!56777 () Unit!3382)

(declare-fun e!71615 () Unit!3382)

(assert (=> d!30877 (= lt!56777 e!71615)))

(declare-fun c!19486 () Bool)

(assert (=> d!30877 (= c!19486 lt!56780)))

(assert (=> d!30877 (= lt!56780 (containsKey!162 (toList!789 e!71536) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(assert (=> d!30877 (= (contains!824 e!71536 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) lt!56779)))

(declare-fun b!110088 () Bool)

(declare-fun lt!56778 () Unit!3382)

(assert (=> b!110088 (= e!71615 lt!56778)))

(assert (=> b!110088 (= lt!56778 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 e!71536) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(assert (=> b!110088 (isDefined!111 (getValueByKey!159 (toList!789 e!71536) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(declare-fun b!110089 () Bool)

(declare-fun Unit!3399 () Unit!3382)

(assert (=> b!110089 (= e!71615 Unit!3399)))

(declare-fun b!110090 () Bool)

(assert (=> b!110090 (= e!71616 (isDefined!111 (getValueByKey!159 (toList!789 e!71536) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355))))))

(assert (= (and d!30877 c!19486) b!110088))

(assert (= (and d!30877 (not c!19486)) b!110089))

(assert (= (and d!30877 (not res!54464)) b!110090))

(assert (=> d!30877 m!124087))

(declare-fun m!124595 () Bool)

(assert (=> d!30877 m!124595))

(assert (=> b!110088 m!124087))

(declare-fun m!124597 () Bool)

(assert (=> b!110088 m!124597))

(assert (=> b!110088 m!124087))

(declare-fun m!124599 () Bool)

(assert (=> b!110088 m!124599))

(assert (=> b!110088 m!124599))

(declare-fun m!124601 () Bool)

(assert (=> b!110088 m!124601))

(assert (=> b!110090 m!124087))

(assert (=> b!110090 m!124599))

(assert (=> b!110090 m!124599))

(assert (=> b!110090 m!124601))

(assert (=> bm!11712 d!30877))

(declare-fun d!30879 () Bool)

(declare-fun res!54469 () Bool)

(declare-fun e!71621 () Bool)

(assert (=> d!30879 (=> res!54469 e!71621)))

(assert (=> d!30879 (= res!54469 (and ((_ is Cons!1605) (toList!789 lt!56367)) (= (_1!1205 (h!2204 (toList!789 lt!56367))) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355))))))

(assert (=> d!30879 (= (containsKey!162 (toList!789 lt!56367) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) e!71621)))

(declare-fun b!110095 () Bool)

(declare-fun e!71622 () Bool)

(assert (=> b!110095 (= e!71621 e!71622)))

(declare-fun res!54470 () Bool)

(assert (=> b!110095 (=> (not res!54470) (not e!71622))))

(assert (=> b!110095 (= res!54470 (and (or (not ((_ is Cons!1605) (toList!789 lt!56367))) (bvsle (_1!1205 (h!2204 (toList!789 lt!56367))) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355))) ((_ is Cons!1605) (toList!789 lt!56367)) (bvslt (_1!1205 (h!2204 (toList!789 lt!56367))) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355))))))

(declare-fun b!110096 () Bool)

(assert (=> b!110096 (= e!71622 (containsKey!162 (t!5738 (toList!789 lt!56367)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(assert (= (and d!30879 (not res!54469)) b!110095))

(assert (= (and b!110095 res!54470) b!110096))

(assert (=> b!110096 m!124087))

(declare-fun m!124603 () Bool)

(assert (=> b!110096 m!124603))

(assert (=> d!30827 d!30879))

(assert (=> d!30841 d!30845))

(declare-fun d!30881 () Bool)

(assert (=> d!30881 (not (arrayContainsKey!0 (_keys!4340 (v!2930 (underlying!370 thiss!992))) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> d!30881 true))

(declare-fun _$68!112 () Unit!3382)

(assert (=> d!30881 (= (choose!68 (_keys!4340 (v!2930 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (Cons!1606 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) Nil!1607)) _$68!112)))

(declare-fun bs!4528 () Bool)

(assert (= bs!4528 d!30881))

(assert (=> bs!4528 m!124087))

(assert (=> bs!4528 m!124127))

(assert (=> d!30841 d!30881))

(declare-fun b!110098 () Bool)

(declare-fun e!71626 () Bool)

(declare-fun e!71625 () Bool)

(assert (=> b!110098 (= e!71626 e!71625)))

(declare-fun c!19487 () Bool)

(assert (=> b!110098 (= c!19487 (validKeyInArray!0 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!11731 () Bool)

(declare-fun call!11734 () Bool)

(assert (=> bm!11731 (= call!11734 (arrayNoDuplicates!0 (_keys!4340 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!19487 (Cons!1606 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000) Nil!1607) Nil!1607)))))

(declare-fun b!110099 () Bool)

(assert (=> b!110099 (= e!71625 call!11734)))

(declare-fun b!110100 () Bool)

(assert (=> b!110100 (= e!71625 call!11734)))

(declare-fun b!110101 () Bool)

(declare-fun e!71624 () Bool)

(assert (=> b!110101 (= e!71624 (contains!828 Nil!1607 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!30883 () Bool)

(declare-fun res!54471 () Bool)

(declare-fun e!71623 () Bool)

(assert (=> d!30883 (=> res!54471 e!71623)))

(assert (=> d!30883 (= res!54471 (bvsge #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))))))

(assert (=> d!30883 (= (arrayNoDuplicates!0 (_keys!4340 newMap!16) #b00000000000000000000000000000000 Nil!1607) e!71623)))

(declare-fun b!110097 () Bool)

(assert (=> b!110097 (= e!71623 e!71626)))

(declare-fun res!54472 () Bool)

(assert (=> b!110097 (=> (not res!54472) (not e!71626))))

(assert (=> b!110097 (= res!54472 (not e!71624))))

(declare-fun res!54473 () Bool)

(assert (=> b!110097 (=> (not res!54473) (not e!71624))))

(assert (=> b!110097 (= res!54473 (validKeyInArray!0 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!30883 (not res!54471)) b!110097))

(assert (= (and b!110097 res!54473) b!110101))

(assert (= (and b!110097 res!54472) b!110098))

(assert (= (and b!110098 c!19487) b!110100))

(assert (= (and b!110098 (not c!19487)) b!110099))

(assert (= (or b!110100 b!110099) bm!11731))

(declare-fun m!124605 () Bool)

(assert (=> b!110098 m!124605))

(assert (=> b!110098 m!124605))

(declare-fun m!124607 () Bool)

(assert (=> b!110098 m!124607))

(assert (=> bm!11731 m!124605))

(declare-fun m!124609 () Bool)

(assert (=> bm!11731 m!124609))

(assert (=> b!110101 m!124605))

(assert (=> b!110101 m!124605))

(declare-fun m!124611 () Bool)

(assert (=> b!110101 m!124611))

(assert (=> b!110097 m!124605))

(assert (=> b!110097 m!124605))

(assert (=> b!110097 m!124607))

(assert (=> b!109998 d!30883))

(declare-fun d!30885 () Bool)

(declare-fun e!71627 () Bool)

(assert (=> d!30885 e!71627))

(declare-fun res!54475 () Bool)

(assert (=> d!30885 (=> (not res!54475) (not e!71627))))

(declare-fun lt!56784 () ListLongMap!1547)

(assert (=> d!30885 (= res!54475 (contains!824 lt!56784 (_1!1205 (ite c!19458 (ite c!19454 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))))))

(declare-fun lt!56783 () List!1609)

(assert (=> d!30885 (= lt!56784 (ListLongMap!1548 lt!56783))))

(declare-fun lt!56782 () Unit!3382)

(declare-fun lt!56781 () Unit!3382)

(assert (=> d!30885 (= lt!56782 lt!56781)))

(assert (=> d!30885 (= (getValueByKey!159 lt!56783 (_1!1205 (ite c!19458 (ite c!19454 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))) (Some!164 (_2!1205 (ite c!19458 (ite c!19454 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))))))

(assert (=> d!30885 (= lt!56781 (lemmaContainsTupThenGetReturnValue!75 lt!56783 (_1!1205 (ite c!19458 (ite c!19454 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))) (_2!1205 (ite c!19458 (ite c!19454 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))))))

(assert (=> d!30885 (= lt!56783 (insertStrictlySorted!78 (toList!789 (ite c!19458 call!11703 call!11714)) (_1!1205 (ite c!19458 (ite c!19454 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))) (_2!1205 (ite c!19458 (ite c!19454 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))))))

(assert (=> d!30885 (= (+!144 (ite c!19458 call!11703 call!11714) (ite c!19458 (ite c!19454 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))) lt!56784)))

(declare-fun b!110102 () Bool)

(declare-fun res!54474 () Bool)

(assert (=> b!110102 (=> (not res!54474) (not e!71627))))

(assert (=> b!110102 (= res!54474 (= (getValueByKey!159 (toList!789 lt!56784) (_1!1205 (ite c!19458 (ite c!19454 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))) (Some!164 (_2!1205 (ite c!19458 (ite c!19454 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))))

(declare-fun b!110103 () Bool)

(assert (=> b!110103 (= e!71627 (contains!827 (toList!789 lt!56784) (ite c!19458 (ite c!19454 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))

(assert (= (and d!30885 res!54475) b!110102))

(assert (= (and b!110102 res!54474) b!110103))

(declare-fun m!124613 () Bool)

(assert (=> d!30885 m!124613))

(declare-fun m!124615 () Bool)

(assert (=> d!30885 m!124615))

(declare-fun m!124617 () Bool)

(assert (=> d!30885 m!124617))

(declare-fun m!124619 () Bool)

(assert (=> d!30885 m!124619))

(declare-fun m!124621 () Bool)

(assert (=> b!110102 m!124621))

(declare-fun m!124623 () Bool)

(assert (=> b!110103 m!124623))

(assert (=> bm!11709 d!30885))

(declare-fun d!30887 () Bool)

(declare-fun e!71629 () Bool)

(assert (=> d!30887 e!71629))

(declare-fun res!54476 () Bool)

(assert (=> d!30887 (=> res!54476 e!71629)))

(declare-fun lt!56787 () Bool)

(assert (=> d!30887 (= res!54476 (not lt!56787))))

(declare-fun lt!56788 () Bool)

(assert (=> d!30887 (= lt!56787 lt!56788)))

(declare-fun lt!56785 () Unit!3382)

(declare-fun e!71628 () Unit!3382)

(assert (=> d!30887 (= lt!56785 e!71628)))

(declare-fun c!19488 () Bool)

(assert (=> d!30887 (= c!19488 lt!56788)))

(assert (=> d!30887 (= lt!56788 (containsKey!162 (toList!789 call!11700) (select (arr!2072 (_keys!4340 newMap!16)) (index!3171 lt!56646))))))

(assert (=> d!30887 (= (contains!824 call!11700 (select (arr!2072 (_keys!4340 newMap!16)) (index!3171 lt!56646))) lt!56787)))

(declare-fun b!110104 () Bool)

(declare-fun lt!56786 () Unit!3382)

(assert (=> b!110104 (= e!71628 lt!56786)))

(assert (=> b!110104 (= lt!56786 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 call!11700) (select (arr!2072 (_keys!4340 newMap!16)) (index!3171 lt!56646))))))

(assert (=> b!110104 (isDefined!111 (getValueByKey!159 (toList!789 call!11700) (select (arr!2072 (_keys!4340 newMap!16)) (index!3171 lt!56646))))))

(declare-fun b!110105 () Bool)

(declare-fun Unit!3400 () Unit!3382)

(assert (=> b!110105 (= e!71628 Unit!3400)))

(declare-fun b!110106 () Bool)

(assert (=> b!110106 (= e!71629 (isDefined!111 (getValueByKey!159 (toList!789 call!11700) (select (arr!2072 (_keys!4340 newMap!16)) (index!3171 lt!56646)))))))

(assert (= (and d!30887 c!19488) b!110104))

(assert (= (and d!30887 (not c!19488)) b!110105))

(assert (= (and d!30887 (not res!54476)) b!110106))

(assert (=> d!30887 m!124407))

(declare-fun m!124625 () Bool)

(assert (=> d!30887 m!124625))

(assert (=> b!110104 m!124407))

(declare-fun m!124627 () Bool)

(assert (=> b!110104 m!124627))

(assert (=> b!110104 m!124407))

(declare-fun m!124629 () Bool)

(assert (=> b!110104 m!124629))

(assert (=> b!110104 m!124629))

(declare-fun m!124631 () Bool)

(assert (=> b!110104 m!124631))

(assert (=> b!110106 m!124407))

(assert (=> b!110106 m!124629))

(assert (=> b!110106 m!124629))

(assert (=> b!110106 m!124631))

(assert (=> b!109927 d!30887))

(declare-fun d!30889 () Bool)

(declare-fun e!71632 () Bool)

(assert (=> d!30889 e!71632))

(declare-fun res!54479 () Bool)

(assert (=> d!30889 (=> (not res!54479) (not e!71632))))

(assert (=> d!30889 (= res!54479 (and (bvsge (index!3171 lt!56646) #b00000000000000000000000000000000) (bvslt (index!3171 lt!56646) (size!2329 (_keys!4340 newMap!16)))))))

(declare-fun lt!56791 () Unit!3382)

(declare-fun choose!693 (array!4371 array!4373 (_ BitVec 32) (_ BitVec 32) V!3241 V!3241 (_ BitVec 32) Int) Unit!3382)

(assert (=> d!30889 (= lt!56791 (choose!693 (_keys!4340 newMap!16) lt!56625 (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (index!3171 lt!56646) (defaultEntry!2626 newMap!16)))))

(assert (=> d!30889 (validMask!0 (mask!6794 newMap!16))))

(assert (=> d!30889 (= (lemmaValidKeyInArrayIsInListMap!109 (_keys!4340 newMap!16) lt!56625 (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (index!3171 lt!56646) (defaultEntry!2626 newMap!16)) lt!56791)))

(declare-fun b!110109 () Bool)

(assert (=> b!110109 (= e!71632 (contains!824 (getCurrentListMap!475 (_keys!4340 newMap!16) lt!56625 (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) (select (arr!2072 (_keys!4340 newMap!16)) (index!3171 lt!56646))))))

(assert (= (and d!30889 res!54479) b!110109))

(declare-fun m!124633 () Bool)

(assert (=> d!30889 m!124633))

(assert (=> d!30889 m!124579))

(declare-fun m!124635 () Bool)

(assert (=> b!110109 m!124635))

(assert (=> b!110109 m!124407))

(assert (=> b!110109 m!124635))

(assert (=> b!110109 m!124407))

(declare-fun m!124637 () Bool)

(assert (=> b!110109 m!124637))

(assert (=> b!109927 d!30889))

(declare-fun d!30891 () Bool)

(declare-fun e!71635 () Bool)

(assert (=> d!30891 e!71635))

(declare-fun res!54482 () Bool)

(assert (=> d!30891 (=> (not res!54482) (not e!71635))))

(assert (=> d!30891 (= res!54482 (and (bvsge (index!3171 lt!56646) #b00000000000000000000000000000000) (bvslt (index!3171 lt!56646) (size!2330 (_values!2609 newMap!16)))))))

(declare-fun lt!56794 () Unit!3382)

(declare-fun choose!694 (array!4371 array!4373 (_ BitVec 32) (_ BitVec 32) V!3241 V!3241 (_ BitVec 32) (_ BitVec 64) V!3241 Int) Unit!3382)

(assert (=> d!30891 (= lt!56794 (choose!694 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (index!3171 lt!56646) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360 (defaultEntry!2626 newMap!16)))))

(assert (=> d!30891 (validMask!0 (mask!6794 newMap!16))))

(assert (=> d!30891 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!49 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (index!3171 lt!56646) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360 (defaultEntry!2626 newMap!16)) lt!56794)))

(declare-fun b!110112 () Bool)

(assert (=> b!110112 (= e!71635 (= (+!144 (getCurrentListMap!475 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)) (getCurrentListMap!475 (_keys!4340 newMap!16) (array!4374 (store (arr!2073 (_values!2609 newMap!16)) (index!3171 lt!56646) (ValueCellFull!1004 lt!56360)) (size!2330 (_values!2609 newMap!16))) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16))))))

(assert (= (and d!30891 res!54482) b!110112))

(assert (=> d!30891 m!124087))

(declare-fun m!124639 () Bool)

(assert (=> d!30891 m!124639))

(assert (=> d!30891 m!124579))

(assert (=> b!110112 m!124333))

(assert (=> b!110112 m!124333))

(assert (=> b!110112 m!124517))

(assert (=> b!110112 m!124393))

(declare-fun m!124641 () Bool)

(assert (=> b!110112 m!124641))

(assert (=> b!109927 d!30891))

(declare-fun d!30893 () Bool)

(declare-fun e!71636 () Bool)

(assert (=> d!30893 e!71636))

(declare-fun res!54484 () Bool)

(assert (=> d!30893 (=> (not res!54484) (not e!71636))))

(declare-fun lt!56798 () ListLongMap!1547)

(assert (=> d!30893 (= res!54484 (contains!824 lt!56798 (_1!1205 (ite (or c!19419 c!19417) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(declare-fun lt!56797 () List!1609)

(assert (=> d!30893 (= lt!56798 (ListLongMap!1548 lt!56797))))

(declare-fun lt!56796 () Unit!3382)

(declare-fun lt!56795 () Unit!3382)

(assert (=> d!30893 (= lt!56796 lt!56795)))

(assert (=> d!30893 (= (getValueByKey!159 lt!56797 (_1!1205 (ite (or c!19419 c!19417) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))) (Some!164 (_2!1205 (ite (or c!19419 c!19417) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> d!30893 (= lt!56795 (lemmaContainsTupThenGetReturnValue!75 lt!56797 (_1!1205 (ite (or c!19419 c!19417) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))) (_2!1205 (ite (or c!19419 c!19417) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> d!30893 (= lt!56797 (insertStrictlySorted!78 (toList!789 (ite c!19419 call!11641 (ite c!19417 call!11644 call!11640))) (_1!1205 (ite (or c!19419 c!19417) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))) (_2!1205 (ite (or c!19419 c!19417) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> d!30893 (= (+!144 (ite c!19419 call!11641 (ite c!19417 call!11644 call!11640)) (ite (or c!19419 c!19417) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))) lt!56798)))

(declare-fun b!110113 () Bool)

(declare-fun res!54483 () Bool)

(assert (=> b!110113 (=> (not res!54483) (not e!71636))))

(assert (=> b!110113 (= res!54483 (= (getValueByKey!159 (toList!789 lt!56798) (_1!1205 (ite (or c!19419 c!19417) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))) (Some!164 (_2!1205 (ite (or c!19419 c!19417) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))))

(declare-fun b!110114 () Bool)

(assert (=> b!110114 (= e!71636 (contains!827 (toList!789 lt!56798) (ite (or c!19419 c!19417) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(assert (= (and d!30893 res!54484) b!110113))

(assert (= (and b!110113 res!54483) b!110114))

(declare-fun m!124643 () Bool)

(assert (=> d!30893 m!124643))

(declare-fun m!124645 () Bool)

(assert (=> d!30893 m!124645))

(declare-fun m!124647 () Bool)

(assert (=> d!30893 m!124647))

(declare-fun m!124649 () Bool)

(assert (=> d!30893 m!124649))

(declare-fun m!124651 () Bool)

(assert (=> b!110113 m!124651))

(declare-fun m!124653 () Bool)

(assert (=> b!110114 m!124653))

(assert (=> bm!11640 d!30893))

(declare-fun d!30895 () Bool)

(declare-fun lt!56799 () Bool)

(assert (=> d!30895 (= lt!56799 (select (content!114 (toList!789 lt!56454)) lt!56370))))

(declare-fun e!71638 () Bool)

(assert (=> d!30895 (= lt!56799 e!71638)))

(declare-fun res!54486 () Bool)

(assert (=> d!30895 (=> (not res!54486) (not e!71638))))

(assert (=> d!30895 (= res!54486 ((_ is Cons!1605) (toList!789 lt!56454)))))

(assert (=> d!30895 (= (contains!827 (toList!789 lt!56454) lt!56370) lt!56799)))

(declare-fun b!110115 () Bool)

(declare-fun e!71637 () Bool)

(assert (=> b!110115 (= e!71638 e!71637)))

(declare-fun res!54485 () Bool)

(assert (=> b!110115 (=> res!54485 e!71637)))

(assert (=> b!110115 (= res!54485 (= (h!2204 (toList!789 lt!56454)) lt!56370))))

(declare-fun b!110116 () Bool)

(assert (=> b!110116 (= e!71637 (contains!827 (t!5738 (toList!789 lt!56454)) lt!56370))))

(assert (= (and d!30895 res!54486) b!110115))

(assert (= (and b!110115 (not res!54485)) b!110116))

(declare-fun m!124655 () Bool)

(assert (=> d!30895 m!124655))

(declare-fun m!124657 () Bool)

(assert (=> d!30895 m!124657))

(declare-fun m!124659 () Bool)

(assert (=> b!110116 m!124659))

(assert (=> b!109722 d!30895))

(assert (=> d!30843 d!30849))

(declare-fun d!30897 () Bool)

(assert (=> d!30897 (arrayNoDuplicates!0 (_keys!4340 (v!2930 (underlying!370 thiss!992))) from!355 Nil!1607)))

(assert (=> d!30897 true))

(declare-fun _$71!153 () Unit!3382)

(assert (=> d!30897 (= (choose!39 (_keys!4340 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000000000 from!355) _$71!153)))

(declare-fun bs!4529 () Bool)

(assert (= bs!4529 d!30897))

(assert (=> bs!4529 m!124123))

(assert (=> d!30843 d!30897))

(declare-fun d!30899 () Bool)

(declare-fun lt!56800 () Bool)

(assert (=> d!30899 (= lt!56800 (select (content!114 (toList!789 lt!56487)) lt!56370))))

(declare-fun e!71640 () Bool)

(assert (=> d!30899 (= lt!56800 e!71640)))

(declare-fun res!54488 () Bool)

(assert (=> d!30899 (=> (not res!54488) (not e!71640))))

(assert (=> d!30899 (= res!54488 ((_ is Cons!1605) (toList!789 lt!56487)))))

(assert (=> d!30899 (= (contains!827 (toList!789 lt!56487) lt!56370) lt!56800)))

(declare-fun b!110117 () Bool)

(declare-fun e!71639 () Bool)

(assert (=> b!110117 (= e!71640 e!71639)))

(declare-fun res!54487 () Bool)

(assert (=> b!110117 (=> res!54487 e!71639)))

(assert (=> b!110117 (= res!54487 (= (h!2204 (toList!789 lt!56487)) lt!56370))))

(declare-fun b!110118 () Bool)

(assert (=> b!110118 (= e!71639 (contains!827 (t!5738 (toList!789 lt!56487)) lt!56370))))

(assert (= (and d!30899 res!54488) b!110117))

(assert (= (and b!110117 (not res!54487)) b!110118))

(declare-fun m!124661 () Bool)

(assert (=> d!30899 m!124661))

(declare-fun m!124663 () Bool)

(assert (=> d!30899 m!124663))

(declare-fun m!124665 () Bool)

(assert (=> b!110118 m!124665))

(assert (=> b!109764 d!30899))

(declare-fun b!110132 () Bool)

(declare-fun e!71648 () SeekEntryResult!255)

(declare-fun lt!56808 () SeekEntryResult!255)

(assert (=> b!110132 (= e!71648 (Found!255 (index!3172 lt!56808)))))

(declare-fun b!110133 () Bool)

(declare-fun e!71649 () SeekEntryResult!255)

(assert (=> b!110133 (= e!71649 Undefined!255)))

(declare-fun b!110134 () Bool)

(assert (=> b!110134 (= e!71649 e!71648)))

(declare-fun lt!56809 () (_ BitVec 64))

(assert (=> b!110134 (= lt!56809 (select (arr!2072 (_keys!4340 newMap!16)) (index!3172 lt!56808)))))

(declare-fun c!19497 () Bool)

(assert (=> b!110134 (= c!19497 (= lt!56809 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(declare-fun b!110135 () Bool)

(declare-fun c!19495 () Bool)

(assert (=> b!110135 (= c!19495 (= lt!56809 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!71647 () SeekEntryResult!255)

(assert (=> b!110135 (= e!71648 e!71647)))

(declare-fun b!110136 () Bool)

(assert (=> b!110136 (= e!71647 (MissingZero!255 (index!3172 lt!56808)))))

(declare-fun b!110131 () Bool)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4371 (_ BitVec 32)) SeekEntryResult!255)

(assert (=> b!110131 (= e!71647 (seekKeyOrZeroReturnVacant!0 (x!13943 lt!56808) (index!3172 lt!56808) (index!3172 lt!56808) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (_keys!4340 newMap!16) (mask!6794 newMap!16)))))

(declare-fun d!30901 () Bool)

(declare-fun lt!56807 () SeekEntryResult!255)

(assert (=> d!30901 (and (or ((_ is Undefined!255) lt!56807) (not ((_ is Found!255) lt!56807)) (and (bvsge (index!3171 lt!56807) #b00000000000000000000000000000000) (bvslt (index!3171 lt!56807) (size!2329 (_keys!4340 newMap!16))))) (or ((_ is Undefined!255) lt!56807) ((_ is Found!255) lt!56807) (not ((_ is MissingZero!255) lt!56807)) (and (bvsge (index!3170 lt!56807) #b00000000000000000000000000000000) (bvslt (index!3170 lt!56807) (size!2329 (_keys!4340 newMap!16))))) (or ((_ is Undefined!255) lt!56807) ((_ is Found!255) lt!56807) ((_ is MissingZero!255) lt!56807) (not ((_ is MissingVacant!255) lt!56807)) (and (bvsge (index!3173 lt!56807) #b00000000000000000000000000000000) (bvslt (index!3173 lt!56807) (size!2329 (_keys!4340 newMap!16))))) (or ((_ is Undefined!255) lt!56807) (ite ((_ is Found!255) lt!56807) (= (select (arr!2072 (_keys!4340 newMap!16)) (index!3171 lt!56807)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) (ite ((_ is MissingZero!255) lt!56807) (= (select (arr!2072 (_keys!4340 newMap!16)) (index!3170 lt!56807)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!255) lt!56807) (= (select (arr!2072 (_keys!4340 newMap!16)) (index!3173 lt!56807)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!30901 (= lt!56807 e!71649)))

(declare-fun c!19496 () Bool)

(assert (=> d!30901 (= c!19496 (and ((_ is Intermediate!255) lt!56808) (undefined!1067 lt!56808)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4371 (_ BitVec 32)) SeekEntryResult!255)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!30901 (= lt!56808 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (mask!6794 newMap!16)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (_keys!4340 newMap!16) (mask!6794 newMap!16)))))

(assert (=> d!30901 (validMask!0 (mask!6794 newMap!16))))

(assert (=> d!30901 (= (seekEntryOrOpen!0 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (_keys!4340 newMap!16) (mask!6794 newMap!16)) lt!56807)))

(assert (= (and d!30901 c!19496) b!110133))

(assert (= (and d!30901 (not c!19496)) b!110134))

(assert (= (and b!110134 c!19497) b!110132))

(assert (= (and b!110134 (not c!19497)) b!110135))

(assert (= (and b!110135 c!19495) b!110136))

(assert (= (and b!110135 (not c!19495)) b!110131))

(declare-fun m!124667 () Bool)

(assert (=> b!110134 m!124667))

(assert (=> b!110131 m!124087))

(declare-fun m!124669 () Bool)

(assert (=> b!110131 m!124669))

(declare-fun m!124671 () Bool)

(assert (=> d!30901 m!124671))

(declare-fun m!124673 () Bool)

(assert (=> d!30901 m!124673))

(assert (=> d!30901 m!124087))

(declare-fun m!124675 () Bool)

(assert (=> d!30901 m!124675))

(assert (=> d!30901 m!124579))

(declare-fun m!124677 () Bool)

(assert (=> d!30901 m!124677))

(assert (=> d!30901 m!124087))

(assert (=> d!30901 m!124673))

(declare-fun m!124679 () Bool)

(assert (=> d!30901 m!124679))

(assert (=> bm!11695 d!30901))

(declare-fun d!30903 () Bool)

(declare-fun e!71651 () Bool)

(assert (=> d!30903 e!71651))

(declare-fun res!54489 () Bool)

(assert (=> d!30903 (=> res!54489 e!71651)))

(declare-fun lt!56812 () Bool)

(assert (=> d!30903 (= res!54489 (not lt!56812))))

(declare-fun lt!56813 () Bool)

(assert (=> d!30903 (= lt!56812 lt!56813)))

(declare-fun lt!56810 () Unit!3382)

(declare-fun e!71650 () Unit!3382)

(assert (=> d!30903 (= lt!56810 e!71650)))

(declare-fun c!19498 () Bool)

(assert (=> d!30903 (= c!19498 lt!56813)))

(assert (=> d!30903 (= lt!56813 (containsKey!162 (toList!789 lt!56545) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!30903 (= (contains!824 lt!56545 #b0000000000000000000000000000000000000000000000000000000000000000) lt!56812)))

(declare-fun b!110137 () Bool)

(declare-fun lt!56811 () Unit!3382)

(assert (=> b!110137 (= e!71650 lt!56811)))

(assert (=> b!110137 (= lt!56811 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 lt!56545) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!110137 (isDefined!111 (getValueByKey!159 (toList!789 lt!56545) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110138 () Bool)

(declare-fun Unit!3401 () Unit!3382)

(assert (=> b!110138 (= e!71650 Unit!3401)))

(declare-fun b!110139 () Bool)

(assert (=> b!110139 (= e!71651 (isDefined!111 (getValueByKey!159 (toList!789 lt!56545) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30903 c!19498) b!110137))

(assert (= (and d!30903 (not c!19498)) b!110138))

(assert (= (and d!30903 (not res!54489)) b!110139))

(declare-fun m!124681 () Bool)

(assert (=> d!30903 m!124681))

(declare-fun m!124683 () Bool)

(assert (=> b!110137 m!124683))

(declare-fun m!124685 () Bool)

(assert (=> b!110137 m!124685))

(assert (=> b!110137 m!124685))

(declare-fun m!124687 () Bool)

(assert (=> b!110137 m!124687))

(assert (=> b!110139 m!124685))

(assert (=> b!110139 m!124685))

(assert (=> b!110139 m!124687))

(assert (=> bm!11639 d!30903))

(declare-fun d!30905 () Bool)

(declare-fun isEmpty!383 (Option!165) Bool)

(assert (=> d!30905 (= (isDefined!111 (getValueByKey!159 (toList!789 lt!56367) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355))) (not (isEmpty!383 (getValueByKey!159 (toList!789 lt!56367) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))))

(declare-fun bs!4530 () Bool)

(assert (= bs!4530 d!30905))

(assert (=> bs!4530 m!124385))

(declare-fun m!124689 () Bool)

(assert (=> bs!4530 m!124689))

(assert (=> b!109842 d!30905))

(declare-fun b!110151 () Bool)

(declare-fun e!71657 () Option!165)

(assert (=> b!110151 (= e!71657 None!163)))

(declare-fun b!110148 () Bool)

(declare-fun e!71656 () Option!165)

(assert (=> b!110148 (= e!71656 (Some!164 (_2!1205 (h!2204 (toList!789 lt!56367)))))))

(declare-fun b!110150 () Bool)

(assert (=> b!110150 (= e!71657 (getValueByKey!159 (t!5738 (toList!789 lt!56367)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(declare-fun d!30907 () Bool)

(declare-fun c!19503 () Bool)

(assert (=> d!30907 (= c!19503 (and ((_ is Cons!1605) (toList!789 lt!56367)) (= (_1!1205 (h!2204 (toList!789 lt!56367))) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355))))))

(assert (=> d!30907 (= (getValueByKey!159 (toList!789 lt!56367) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) e!71656)))

(declare-fun b!110149 () Bool)

(assert (=> b!110149 (= e!71656 e!71657)))

(declare-fun c!19504 () Bool)

(assert (=> b!110149 (= c!19504 (and ((_ is Cons!1605) (toList!789 lt!56367)) (not (= (_1!1205 (h!2204 (toList!789 lt!56367))) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))))

(assert (= (and d!30907 c!19503) b!110148))

(assert (= (and d!30907 (not c!19503)) b!110149))

(assert (= (and b!110149 c!19504) b!110150))

(assert (= (and b!110149 (not c!19504)) b!110151))

(assert (=> b!110150 m!124087))

(declare-fun m!124691 () Bool)

(assert (=> b!110150 m!124691))

(assert (=> b!109842 d!30907))

(declare-fun b!110152 () Bool)

(declare-fun e!71662 () ListLongMap!1547)

(declare-fun call!11735 () ListLongMap!1547)

(assert (=> b!110152 (= e!71662 call!11735)))

(declare-fun d!30909 () Bool)

(declare-fun e!71659 () Bool)

(assert (=> d!30909 e!71659))

(declare-fun res!54491 () Bool)

(assert (=> d!30909 (=> (not res!54491) (not e!71659))))

(declare-fun lt!56820 () ListLongMap!1547)

(assert (=> d!30909 (= res!54491 (not (contains!824 lt!56820 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!71661 () ListLongMap!1547)

(assert (=> d!30909 (= lt!56820 e!71661)))

(declare-fun c!19508 () Bool)

(assert (=> d!30909 (= c!19508 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2329 (_keys!4340 (v!2930 (underlying!370 thiss!992))))))))

(assert (=> d!30909 (validMask!0 (mask!6794 (v!2930 (underlying!370 thiss!992))))))

(assert (=> d!30909 (= (getCurrentListMapNoExtraKeys!111 (_keys!4340 (v!2930 (underlying!370 thiss!992))) (_values!2609 (v!2930 (underlying!370 thiss!992))) (mask!6794 (v!2930 (underlying!370 thiss!992))) (extraKeys!2423 (v!2930 (underlying!370 thiss!992))) (zeroValue!2497 (v!2930 (underlying!370 thiss!992))) (minValue!2497 (v!2930 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2626 (v!2930 (underlying!370 thiss!992)))) lt!56820)))

(declare-fun b!110153 () Bool)

(declare-fun e!71658 () Bool)

(assert (=> b!110153 (= e!71658 (isEmpty!382 lt!56820))))

(declare-fun b!110154 () Bool)

(assert (=> b!110154 (= e!71658 (= lt!56820 (getCurrentListMapNoExtraKeys!111 (_keys!4340 (v!2930 (underlying!370 thiss!992))) (_values!2609 (v!2930 (underlying!370 thiss!992))) (mask!6794 (v!2930 (underlying!370 thiss!992))) (extraKeys!2423 (v!2930 (underlying!370 thiss!992))) (zeroValue!2497 (v!2930 (underlying!370 thiss!992))) (minValue!2497 (v!2930 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun bm!11732 () Bool)

(assert (=> bm!11732 (= call!11735 (getCurrentListMapNoExtraKeys!111 (_keys!4340 (v!2930 (underlying!370 thiss!992))) (_values!2609 (v!2930 (underlying!370 thiss!992))) (mask!6794 (v!2930 (underlying!370 thiss!992))) (extraKeys!2423 (v!2930 (underlying!370 thiss!992))) (zeroValue!2497 (v!2930 (underlying!370 thiss!992))) (minValue!2497 (v!2930 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2626 (v!2930 (underlying!370 thiss!992)))))))

(declare-fun b!110155 () Bool)

(declare-fun e!71664 () Bool)

(assert (=> b!110155 (= e!71664 e!71658)))

(declare-fun c!19505 () Bool)

(assert (=> b!110155 (= c!19505 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2329 (_keys!4340 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun b!110156 () Bool)

(assert (=> b!110156 (= e!71659 e!71664)))

(declare-fun c!19507 () Bool)

(declare-fun e!71663 () Bool)

(assert (=> b!110156 (= c!19507 e!71663)))

(declare-fun res!54492 () Bool)

(assert (=> b!110156 (=> (not res!54492) (not e!71663))))

(assert (=> b!110156 (= res!54492 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2329 (_keys!4340 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun b!110157 () Bool)

(declare-fun res!54490 () Bool)

(assert (=> b!110157 (=> (not res!54490) (not e!71659))))

(assert (=> b!110157 (= res!54490 (not (contains!824 lt!56820 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!110158 () Bool)

(assert (=> b!110158 (= e!71663 (validKeyInArray!0 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!110158 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!110159 () Bool)

(declare-fun e!71660 () Bool)

(assert (=> b!110159 (= e!71664 e!71660)))

(assert (=> b!110159 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2329 (_keys!4340 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun res!54493 () Bool)

(assert (=> b!110159 (= res!54493 (contains!824 lt!56820 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!110159 (=> (not res!54493) (not e!71660))))

(declare-fun b!110160 () Bool)

(declare-fun lt!56818 () Unit!3382)

(declare-fun lt!56817 () Unit!3382)

(assert (=> b!110160 (= lt!56818 lt!56817)))

(declare-fun lt!56816 () ListLongMap!1547)

(declare-fun lt!56815 () (_ BitVec 64))

(declare-fun lt!56819 () V!3241)

(declare-fun lt!56814 () (_ BitVec 64))

(assert (=> b!110160 (not (contains!824 (+!144 lt!56816 (tuple2!2389 lt!56815 lt!56819)) lt!56814))))

(assert (=> b!110160 (= lt!56817 (addStillNotContains!50 lt!56816 lt!56815 lt!56819 lt!56814))))

(assert (=> b!110160 (= lt!56814 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!110160 (= lt!56819 (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!110160 (= lt!56815 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (=> b!110160 (= lt!56816 call!11735)))

(assert (=> b!110160 (= e!71662 (+!144 call!11735 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!110161 () Bool)

(assert (=> b!110161 (= e!71661 e!71662)))

(declare-fun c!19506 () Bool)

(assert (=> b!110161 (= c!19506 (validKeyInArray!0 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!110162 () Bool)

(assert (=> b!110162 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2329 (_keys!4340 (v!2930 (underlying!370 thiss!992))))))))

(assert (=> b!110162 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2330 (_values!2609 (v!2930 (underlying!370 thiss!992))))))))

(assert (=> b!110162 (= e!71660 (= (apply!100 lt!56820 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!110163 () Bool)

(assert (=> b!110163 (= e!71661 (ListLongMap!1548 Nil!1606))))

(assert (= (and d!30909 c!19508) b!110163))

(assert (= (and d!30909 (not c!19508)) b!110161))

(assert (= (and b!110161 c!19506) b!110160))

(assert (= (and b!110161 (not c!19506)) b!110152))

(assert (= (or b!110160 b!110152) bm!11732))

(assert (= (and d!30909 res!54491) b!110157))

(assert (= (and b!110157 res!54490) b!110156))

(assert (= (and b!110156 res!54492) b!110158))

(assert (= (and b!110156 c!19507) b!110159))

(assert (= (and b!110156 (not c!19507)) b!110155))

(assert (= (and b!110159 res!54493) b!110162))

(assert (= (and b!110155 c!19505) b!110154))

(assert (= (and b!110155 (not c!19505)) b!110153))

(declare-fun b_lambda!4933 () Bool)

(assert (=> (not b_lambda!4933) (not b!110160)))

(assert (=> b!110160 t!5735))

(declare-fun b_and!6781 () Bool)

(assert (= b_and!6777 (and (=> t!5735 result!3513) b_and!6781)))

(assert (=> b!110160 t!5737))

(declare-fun b_and!6783 () Bool)

(assert (= b_and!6779 (and (=> t!5737 result!3517) b_and!6783)))

(declare-fun b_lambda!4935 () Bool)

(assert (=> (not b_lambda!4935) (not b!110162)))

(assert (=> b!110162 t!5735))

(declare-fun b_and!6785 () Bool)

(assert (= b_and!6781 (and (=> t!5735 result!3513) b_and!6785)))

(assert (=> b!110162 t!5737))

(declare-fun b_and!6787 () Bool)

(assert (= b_and!6783 (and (=> t!5737 result!3517) b_and!6787)))

(declare-fun m!124693 () Bool)

(assert (=> b!110159 m!124693))

(assert (=> b!110159 m!124693))

(declare-fun m!124695 () Bool)

(assert (=> b!110159 m!124695))

(declare-fun m!124697 () Bool)

(assert (=> bm!11732 m!124697))

(assert (=> b!110162 m!124693))

(declare-fun m!124699 () Bool)

(assert (=> b!110162 m!124699))

(assert (=> b!110162 m!124693))

(declare-fun m!124701 () Bool)

(assert (=> b!110162 m!124701))

(assert (=> b!110162 m!124699))

(assert (=> b!110162 m!124091))

(declare-fun m!124703 () Bool)

(assert (=> b!110162 m!124703))

(assert (=> b!110162 m!124091))

(assert (=> b!110161 m!124693))

(assert (=> b!110161 m!124693))

(declare-fun m!124705 () Bool)

(assert (=> b!110161 m!124705))

(assert (=> b!110158 m!124693))

(assert (=> b!110158 m!124693))

(assert (=> b!110158 m!124705))

(assert (=> b!110154 m!124697))

(declare-fun m!124707 () Bool)

(assert (=> d!30909 m!124707))

(assert (=> d!30909 m!124107))

(declare-fun m!124709 () Bool)

(assert (=> b!110153 m!124709))

(assert (=> b!110160 m!124693))

(assert (=> b!110160 m!124699))

(assert (=> b!110160 m!124091))

(assert (=> b!110160 m!124703))

(declare-fun m!124711 () Bool)

(assert (=> b!110160 m!124711))

(declare-fun m!124713 () Bool)

(assert (=> b!110160 m!124713))

(declare-fun m!124715 () Bool)

(assert (=> b!110160 m!124715))

(assert (=> b!110160 m!124699))

(assert (=> b!110160 m!124713))

(declare-fun m!124717 () Bool)

(assert (=> b!110160 m!124717))

(assert (=> b!110160 m!124091))

(declare-fun m!124719 () Bool)

(assert (=> b!110157 m!124719))

(assert (=> b!109751 d!30909))

(declare-fun b!110164 () Bool)

(declare-fun res!54494 () Bool)

(declare-fun e!71675 () Bool)

(assert (=> b!110164 (=> (not res!54494) (not e!71675))))

(declare-fun e!71671 () Bool)

(assert (=> b!110164 (= res!54494 e!71671)))

(declare-fun res!54497 () Bool)

(assert (=> b!110164 (=> res!54497 e!71671)))

(declare-fun e!71676 () Bool)

(assert (=> b!110164 (= res!54497 (not e!71676))))

(declare-fun res!54501 () Bool)

(assert (=> b!110164 (=> (not res!54501) (not e!71676))))

(assert (=> b!110164 (= res!54501 (bvslt #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))))))

(declare-fun bm!11733 () Bool)

(declare-fun call!11739 () Bool)

(declare-fun lt!56831 () ListLongMap!1547)

(assert (=> bm!11733 (= call!11739 (contains!824 lt!56831 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110165 () Bool)

(declare-fun e!71668 () Unit!3382)

(declare-fun Unit!3402 () Unit!3382)

(assert (=> b!110165 (= e!71668 Unit!3402)))

(declare-fun b!110166 () Bool)

(declare-fun e!71666 () ListLongMap!1547)

(declare-fun call!11742 () ListLongMap!1547)

(assert (=> b!110166 (= e!71666 (+!144 call!11742 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16))))))

(declare-fun b!110167 () Bool)

(declare-fun e!71670 () Bool)

(assert (=> b!110167 (= e!71671 e!71670)))

(declare-fun res!54495 () Bool)

(assert (=> b!110167 (=> (not res!54495) (not e!71670))))

(assert (=> b!110167 (= res!54495 (contains!824 lt!56831 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!110167 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))))))

(declare-fun b!110168 () Bool)

(declare-fun lt!56842 () Unit!3382)

(assert (=> b!110168 (= e!71668 lt!56842)))

(declare-fun lt!56832 () ListLongMap!1547)

(assert (=> b!110168 (= lt!56832 (getCurrentListMapNoExtraKeys!111 (_keys!4340 newMap!16) (ite c!19460 (_values!2609 newMap!16) lt!56625) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!56839 () (_ BitVec 64))

(assert (=> b!110168 (= lt!56839 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56834 () (_ BitVec 64))

(assert (=> b!110168 (= lt!56834 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56835 () Unit!3382)

(assert (=> b!110168 (= lt!56835 (addStillContains!76 lt!56832 lt!56839 (zeroValue!2497 newMap!16) lt!56834))))

(assert (=> b!110168 (contains!824 (+!144 lt!56832 (tuple2!2389 lt!56839 (zeroValue!2497 newMap!16))) lt!56834)))

(declare-fun lt!56837 () Unit!3382)

(assert (=> b!110168 (= lt!56837 lt!56835)))

(declare-fun lt!56822 () ListLongMap!1547)

(assert (=> b!110168 (= lt!56822 (getCurrentListMapNoExtraKeys!111 (_keys!4340 newMap!16) (ite c!19460 (_values!2609 newMap!16) lt!56625) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!56827 () (_ BitVec 64))

(assert (=> b!110168 (= lt!56827 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56824 () (_ BitVec 64))

(assert (=> b!110168 (= lt!56824 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56826 () Unit!3382)

(assert (=> b!110168 (= lt!56826 (addApplyDifferent!76 lt!56822 lt!56827 (minValue!2497 newMap!16) lt!56824))))

(assert (=> b!110168 (= (apply!100 (+!144 lt!56822 (tuple2!2389 lt!56827 (minValue!2497 newMap!16))) lt!56824) (apply!100 lt!56822 lt!56824))))

(declare-fun lt!56821 () Unit!3382)

(assert (=> b!110168 (= lt!56821 lt!56826)))

(declare-fun lt!56830 () ListLongMap!1547)

(assert (=> b!110168 (= lt!56830 (getCurrentListMapNoExtraKeys!111 (_keys!4340 newMap!16) (ite c!19460 (_values!2609 newMap!16) lt!56625) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!56841 () (_ BitVec 64))

(assert (=> b!110168 (= lt!56841 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56836 () (_ BitVec 64))

(assert (=> b!110168 (= lt!56836 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56825 () Unit!3382)

(assert (=> b!110168 (= lt!56825 (addApplyDifferent!76 lt!56830 lt!56841 (zeroValue!2497 newMap!16) lt!56836))))

(assert (=> b!110168 (= (apply!100 (+!144 lt!56830 (tuple2!2389 lt!56841 (zeroValue!2497 newMap!16))) lt!56836) (apply!100 lt!56830 lt!56836))))

(declare-fun lt!56833 () Unit!3382)

(assert (=> b!110168 (= lt!56833 lt!56825)))

(declare-fun lt!56840 () ListLongMap!1547)

(assert (=> b!110168 (= lt!56840 (getCurrentListMapNoExtraKeys!111 (_keys!4340 newMap!16) (ite c!19460 (_values!2609 newMap!16) lt!56625) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!56829 () (_ BitVec 64))

(assert (=> b!110168 (= lt!56829 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56823 () (_ BitVec 64))

(assert (=> b!110168 (= lt!56823 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!110168 (= lt!56842 (addApplyDifferent!76 lt!56840 lt!56829 (minValue!2497 newMap!16) lt!56823))))

(assert (=> b!110168 (= (apply!100 (+!144 lt!56840 (tuple2!2389 lt!56829 (minValue!2497 newMap!16))) lt!56823) (apply!100 lt!56840 lt!56823))))

(declare-fun d!30911 () Bool)

(assert (=> d!30911 e!71675))

(declare-fun res!54499 () Bool)

(assert (=> d!30911 (=> (not res!54499) (not e!71675))))

(assert (=> d!30911 (= res!54499 (or (bvsge #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))))))))

(declare-fun lt!56838 () ListLongMap!1547)

(assert (=> d!30911 (= lt!56831 lt!56838)))

(declare-fun lt!56828 () Unit!3382)

(assert (=> d!30911 (= lt!56828 e!71668)))

(declare-fun c!19514 () Bool)

(declare-fun e!71669 () Bool)

(assert (=> d!30911 (= c!19514 e!71669)))

(declare-fun res!54496 () Bool)

(assert (=> d!30911 (=> (not res!54496) (not e!71669))))

(assert (=> d!30911 (= res!54496 (bvslt #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))))))

(assert (=> d!30911 (= lt!56838 e!71666)))

(declare-fun c!19511 () Bool)

(assert (=> d!30911 (= c!19511 (and (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!30911 (validMask!0 (mask!6794 newMap!16))))

(assert (=> d!30911 (= (getCurrentListMap!475 (_keys!4340 newMap!16) (ite c!19460 (_values!2609 newMap!16) lt!56625) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) lt!56831)))

(declare-fun bm!11734 () Bool)

(declare-fun call!11740 () ListLongMap!1547)

(declare-fun call!11737 () ListLongMap!1547)

(assert (=> bm!11734 (= call!11740 call!11737)))

(declare-fun b!110169 () Bool)

(declare-fun e!71674 () ListLongMap!1547)

(declare-fun call!11738 () ListLongMap!1547)

(assert (=> b!110169 (= e!71674 call!11738)))

(declare-fun b!110170 () Bool)

(declare-fun e!71673 () Bool)

(declare-fun call!11741 () Bool)

(assert (=> b!110170 (= e!71673 (not call!11741))))

(declare-fun b!110171 () Bool)

(declare-fun c!19510 () Bool)

(assert (=> b!110171 (= c!19510 (and (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!71677 () ListLongMap!1547)

(assert (=> b!110171 (= e!71674 e!71677)))

(declare-fun b!110172 () Bool)

(declare-fun e!71667 () Bool)

(assert (=> b!110172 (= e!71667 (not call!11739))))

(declare-fun bm!11735 () Bool)

(assert (=> bm!11735 (= call!11741 (contains!824 lt!56831 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110173 () Bool)

(declare-fun e!71665 () Bool)

(assert (=> b!110173 (= e!71667 e!71665)))

(declare-fun res!54498 () Bool)

(assert (=> b!110173 (= res!54498 call!11739)))

(assert (=> b!110173 (=> (not res!54498) (not e!71665))))

(declare-fun b!110174 () Bool)

(assert (=> b!110174 (= e!71670 (= (apply!100 lt!56831 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)) (get!1353 (select (arr!2073 (ite c!19460 (_values!2609 newMap!16) lt!56625)) #b00000000000000000000000000000000) (dynLambda!390 (defaultEntry!2626 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!110174 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2330 (ite c!19460 (_values!2609 newMap!16) lt!56625))))))

(assert (=> b!110174 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))))))

(declare-fun c!19509 () Bool)

(declare-fun bm!11736 () Bool)

(declare-fun call!11736 () ListLongMap!1547)

(assert (=> bm!11736 (= call!11742 (+!144 (ite c!19511 call!11737 (ite c!19509 call!11740 call!11736)) (ite (or c!19511 c!19509) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 newMap!16)) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16)))))))

(declare-fun b!110175 () Bool)

(declare-fun e!71672 () Bool)

(assert (=> b!110175 (= e!71672 (= (apply!100 lt!56831 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2497 newMap!16)))))

(declare-fun b!110176 () Bool)

(assert (=> b!110176 (= e!71675 e!71667)))

(declare-fun c!19513 () Bool)

(assert (=> b!110176 (= c!19513 (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11737 () Bool)

(assert (=> bm!11737 (= call!11738 call!11742)))

(declare-fun b!110177 () Bool)

(declare-fun res!54500 () Bool)

(assert (=> b!110177 (=> (not res!54500) (not e!71675))))

(assert (=> b!110177 (= res!54500 e!71673)))

(declare-fun c!19512 () Bool)

(assert (=> b!110177 (= c!19512 (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!110178 () Bool)

(assert (=> b!110178 (= e!71677 call!11736)))

(declare-fun bm!11738 () Bool)

(assert (=> bm!11738 (= call!11736 call!11740)))

(declare-fun b!110179 () Bool)

(assert (=> b!110179 (= e!71677 call!11738)))

(declare-fun b!110180 () Bool)

(assert (=> b!110180 (= e!71669 (validKeyInArray!0 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!110181 () Bool)

(assert (=> b!110181 (= e!71673 e!71672)))

(declare-fun res!54502 () Bool)

(assert (=> b!110181 (= res!54502 call!11741)))

(assert (=> b!110181 (=> (not res!54502) (not e!71672))))

(declare-fun b!110182 () Bool)

(assert (=> b!110182 (= e!71665 (= (apply!100 lt!56831 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2497 newMap!16)))))

(declare-fun b!110183 () Bool)

(assert (=> b!110183 (= e!71676 (validKeyInArray!0 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!110184 () Bool)

(assert (=> b!110184 (= e!71666 e!71674)))

(assert (=> b!110184 (= c!19509 (and (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11739 () Bool)

(assert (=> bm!11739 (= call!11737 (getCurrentListMapNoExtraKeys!111 (_keys!4340 newMap!16) (ite c!19460 (_values!2609 newMap!16) lt!56625) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(assert (= (and d!30911 c!19511) b!110166))

(assert (= (and d!30911 (not c!19511)) b!110184))

(assert (= (and b!110184 c!19509) b!110169))

(assert (= (and b!110184 (not c!19509)) b!110171))

(assert (= (and b!110171 c!19510) b!110179))

(assert (= (and b!110171 (not c!19510)) b!110178))

(assert (= (or b!110179 b!110178) bm!11738))

(assert (= (or b!110169 bm!11738) bm!11734))

(assert (= (or b!110169 b!110179) bm!11737))

(assert (= (or b!110166 bm!11734) bm!11739))

(assert (= (or b!110166 bm!11737) bm!11736))

(assert (= (and d!30911 res!54496) b!110180))

(assert (= (and d!30911 c!19514) b!110168))

(assert (= (and d!30911 (not c!19514)) b!110165))

(assert (= (and d!30911 res!54499) b!110164))

(assert (= (and b!110164 res!54501) b!110183))

(assert (= (and b!110164 (not res!54497)) b!110167))

(assert (= (and b!110167 res!54495) b!110174))

(assert (= (and b!110164 res!54494) b!110177))

(assert (= (and b!110177 c!19512) b!110181))

(assert (= (and b!110177 (not c!19512)) b!110170))

(assert (= (and b!110181 res!54502) b!110175))

(assert (= (or b!110181 b!110170) bm!11735))

(assert (= (and b!110177 res!54500) b!110176))

(assert (= (and b!110176 c!19513) b!110173))

(assert (= (and b!110176 (not c!19513)) b!110172))

(assert (= (and b!110173 res!54498) b!110182))

(assert (= (or b!110173 b!110172) bm!11733))

(declare-fun b_lambda!4937 () Bool)

(assert (=> (not b_lambda!4937) (not b!110174)))

(declare-fun tb!2105 () Bool)

(declare-fun t!5751 () Bool)

(assert (=> (and b!109572 (= (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) (defaultEntry!2626 newMap!16)) t!5751) tb!2105))

(declare-fun result!3533 () Bool)

(assert (=> tb!2105 (= result!3533 tp_is_empty!2695)))

(assert (=> b!110174 t!5751))

(declare-fun b_and!6789 () Bool)

(assert (= b_and!6785 (and (=> t!5751 result!3533) b_and!6789)))

(declare-fun t!5753 () Bool)

(declare-fun tb!2107 () Bool)

(assert (=> (and b!109583 (= (defaultEntry!2626 newMap!16) (defaultEntry!2626 newMap!16)) t!5753) tb!2107))

(declare-fun result!3535 () Bool)

(assert (= result!3535 result!3533))

(assert (=> b!110174 t!5753))

(declare-fun b_and!6791 () Bool)

(assert (= b_and!6787 (and (=> t!5753 result!3535) b_and!6791)))

(assert (=> b!110183 m!124605))

(assert (=> b!110183 m!124605))

(assert (=> b!110183 m!124607))

(declare-fun m!124721 () Bool)

(assert (=> b!110168 m!124721))

(declare-fun m!124723 () Bool)

(assert (=> b!110168 m!124723))

(declare-fun m!124725 () Bool)

(assert (=> b!110168 m!124725))

(declare-fun m!124727 () Bool)

(assert (=> b!110168 m!124727))

(declare-fun m!124729 () Bool)

(assert (=> b!110168 m!124729))

(declare-fun m!124731 () Bool)

(assert (=> b!110168 m!124731))

(declare-fun m!124733 () Bool)

(assert (=> b!110168 m!124733))

(declare-fun m!124735 () Bool)

(assert (=> b!110168 m!124735))

(declare-fun m!124737 () Bool)

(assert (=> b!110168 m!124737))

(declare-fun m!124739 () Bool)

(assert (=> b!110168 m!124739))

(declare-fun m!124741 () Bool)

(assert (=> b!110168 m!124741))

(assert (=> b!110168 m!124729))

(assert (=> b!110168 m!124733))

(declare-fun m!124743 () Bool)

(assert (=> b!110168 m!124743))

(assert (=> b!110168 m!124605))

(declare-fun m!124745 () Bool)

(assert (=> b!110168 m!124745))

(assert (=> b!110168 m!124739))

(declare-fun m!124747 () Bool)

(assert (=> b!110168 m!124747))

(declare-fun m!124749 () Bool)

(assert (=> b!110168 m!124749))

(assert (=> b!110168 m!124747))

(declare-fun m!124751 () Bool)

(assert (=> b!110168 m!124751))

(assert (=> b!110180 m!124605))

(assert (=> b!110180 m!124605))

(assert (=> b!110180 m!124607))

(declare-fun m!124753 () Bool)

(assert (=> bm!11735 m!124753))

(assert (=> bm!11739 m!124745))

(assert (=> d!30911 m!124579))

(declare-fun m!124755 () Bool)

(assert (=> bm!11736 m!124755))

(declare-fun m!124757 () Bool)

(assert (=> b!110175 m!124757))

(declare-fun m!124759 () Bool)

(assert (=> bm!11733 m!124759))

(declare-fun m!124761 () Bool)

(assert (=> b!110182 m!124761))

(assert (=> b!110174 m!124605))

(declare-fun m!124763 () Bool)

(assert (=> b!110174 m!124763))

(assert (=> b!110174 m!124605))

(declare-fun m!124765 () Bool)

(assert (=> b!110174 m!124765))

(assert (=> b!110174 m!124765))

(declare-fun m!124767 () Bool)

(assert (=> b!110174 m!124767))

(declare-fun m!124769 () Bool)

(assert (=> b!110174 m!124769))

(assert (=> b!110174 m!124767))

(declare-fun m!124771 () Bool)

(assert (=> b!110166 m!124771))

(assert (=> b!110167 m!124605))

(assert (=> b!110167 m!124605))

(declare-fun m!124773 () Bool)

(assert (=> b!110167 m!124773))

(assert (=> bm!11696 d!30911))

(declare-fun d!30913 () Bool)

(declare-fun e!71680 () Bool)

(assert (=> d!30913 e!71680))

(declare-fun c!19517 () Bool)

(assert (=> d!30913 (= c!19517 (and (not (= (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!30913 true))

(declare-fun _$29!147 () Unit!3382)

(assert (=> d!30913 (= (choose!690 (_keys!4340 (v!2930 (underlying!370 thiss!992))) (_values!2609 (v!2930 (underlying!370 thiss!992))) (mask!6794 (v!2930 (underlying!370 thiss!992))) (extraKeys!2423 (v!2930 (underlying!370 thiss!992))) (zeroValue!2497 (v!2930 (underlying!370 thiss!992))) (minValue!2497 (v!2930 (underlying!370 thiss!992))) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2626 (v!2930 (underlying!370 thiss!992)))) _$29!147)))

(declare-fun b!110189 () Bool)

(assert (=> b!110189 (= e!71680 (arrayContainsKey!0 (_keys!4340 (v!2930 (underlying!370 thiss!992))) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!110190 () Bool)

(assert (=> b!110190 (= e!71680 (ite (= (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2423 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2423 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!30913 c!19517) b!110189))

(assert (= (and d!30913 (not c!19517)) b!110190))

(assert (=> b!110189 m!124087))

(assert (=> b!110189 m!124127))

(assert (=> d!30847 d!30913))

(assert (=> d!30847 d!30819))

(declare-fun d!30915 () Bool)

(declare-fun e!71682 () Bool)

(assert (=> d!30915 e!71682))

(declare-fun res!54503 () Bool)

(assert (=> d!30915 (=> res!54503 e!71682)))

(declare-fun lt!56845 () Bool)

(assert (=> d!30915 (= res!54503 (not lt!56845))))

(declare-fun lt!56846 () Bool)

(assert (=> d!30915 (= lt!56845 lt!56846)))

(declare-fun lt!56843 () Unit!3382)

(declare-fun e!71681 () Unit!3382)

(assert (=> d!30915 (= lt!56843 e!71681)))

(declare-fun c!19518 () Bool)

(assert (=> d!30915 (= c!19518 lt!56846)))

(assert (=> d!30915 (= lt!56846 (containsKey!162 (toList!789 lt!56458) (_1!1205 lt!56363)))))

(assert (=> d!30915 (= (contains!824 lt!56458 (_1!1205 lt!56363)) lt!56845)))

(declare-fun b!110191 () Bool)

(declare-fun lt!56844 () Unit!3382)

(assert (=> b!110191 (= e!71681 lt!56844)))

(assert (=> b!110191 (= lt!56844 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 lt!56458) (_1!1205 lt!56363)))))

(assert (=> b!110191 (isDefined!111 (getValueByKey!159 (toList!789 lt!56458) (_1!1205 lt!56363)))))

(declare-fun b!110192 () Bool)

(declare-fun Unit!3403 () Unit!3382)

(assert (=> b!110192 (= e!71681 Unit!3403)))

(declare-fun b!110193 () Bool)

(assert (=> b!110193 (= e!71682 (isDefined!111 (getValueByKey!159 (toList!789 lt!56458) (_1!1205 lt!56363))))))

(assert (= (and d!30915 c!19518) b!110191))

(assert (= (and d!30915 (not c!19518)) b!110192))

(assert (= (and d!30915 (not res!54503)) b!110193))

(declare-fun m!124775 () Bool)

(assert (=> d!30915 m!124775))

(declare-fun m!124777 () Bool)

(assert (=> b!110191 m!124777))

(assert (=> b!110191 m!124263))

(assert (=> b!110191 m!124263))

(declare-fun m!124779 () Bool)

(assert (=> b!110191 m!124779))

(assert (=> b!110193 m!124263))

(assert (=> b!110193 m!124263))

(assert (=> b!110193 m!124779))

(assert (=> d!30809 d!30915))

(declare-fun b!110197 () Bool)

(declare-fun e!71684 () Option!165)

(assert (=> b!110197 (= e!71684 None!163)))

(declare-fun b!110194 () Bool)

(declare-fun e!71683 () Option!165)

(assert (=> b!110194 (= e!71683 (Some!164 (_2!1205 (h!2204 lt!56457))))))

(declare-fun b!110196 () Bool)

(assert (=> b!110196 (= e!71684 (getValueByKey!159 (t!5738 lt!56457) (_1!1205 lt!56363)))))

(declare-fun d!30917 () Bool)

(declare-fun c!19519 () Bool)

(assert (=> d!30917 (= c!19519 (and ((_ is Cons!1605) lt!56457) (= (_1!1205 (h!2204 lt!56457)) (_1!1205 lt!56363))))))

(assert (=> d!30917 (= (getValueByKey!159 lt!56457 (_1!1205 lt!56363)) e!71683)))

(declare-fun b!110195 () Bool)

(assert (=> b!110195 (= e!71683 e!71684)))

(declare-fun c!19520 () Bool)

(assert (=> b!110195 (= c!19520 (and ((_ is Cons!1605) lt!56457) (not (= (_1!1205 (h!2204 lt!56457)) (_1!1205 lt!56363)))))))

(assert (= (and d!30917 c!19519) b!110194))

(assert (= (and d!30917 (not c!19519)) b!110195))

(assert (= (and b!110195 c!19520) b!110196))

(assert (= (and b!110195 (not c!19520)) b!110197))

(declare-fun m!124781 () Bool)

(assert (=> b!110196 m!124781))

(assert (=> d!30809 d!30917))

(declare-fun d!30919 () Bool)

(assert (=> d!30919 (= (getValueByKey!159 lt!56457 (_1!1205 lt!56363)) (Some!164 (_2!1205 lt!56363)))))

(declare-fun lt!56849 () Unit!3382)

(declare-fun choose!695 (List!1609 (_ BitVec 64) V!3241) Unit!3382)

(assert (=> d!30919 (= lt!56849 (choose!695 lt!56457 (_1!1205 lt!56363) (_2!1205 lt!56363)))))

(declare-fun e!71687 () Bool)

(assert (=> d!30919 e!71687))

(declare-fun res!54508 () Bool)

(assert (=> d!30919 (=> (not res!54508) (not e!71687))))

(declare-fun isStrictlySorted!298 (List!1609) Bool)

(assert (=> d!30919 (= res!54508 (isStrictlySorted!298 lt!56457))))

(assert (=> d!30919 (= (lemmaContainsTupThenGetReturnValue!75 lt!56457 (_1!1205 lt!56363) (_2!1205 lt!56363)) lt!56849)))

(declare-fun b!110202 () Bool)

(declare-fun res!54509 () Bool)

(assert (=> b!110202 (=> (not res!54509) (not e!71687))))

(assert (=> b!110202 (= res!54509 (containsKey!162 lt!56457 (_1!1205 lt!56363)))))

(declare-fun b!110203 () Bool)

(assert (=> b!110203 (= e!71687 (contains!827 lt!56457 (tuple2!2389 (_1!1205 lt!56363) (_2!1205 lt!56363))))))

(assert (= (and d!30919 res!54508) b!110202))

(assert (= (and b!110202 res!54509) b!110203))

(assert (=> d!30919 m!124257))

(declare-fun m!124783 () Bool)

(assert (=> d!30919 m!124783))

(declare-fun m!124785 () Bool)

(assert (=> d!30919 m!124785))

(declare-fun m!124787 () Bool)

(assert (=> b!110202 m!124787))

(declare-fun m!124789 () Bool)

(assert (=> b!110203 m!124789))

(assert (=> d!30809 d!30919))

(declare-fun b!110224 () Bool)

(declare-fun e!71700 () List!1609)

(assert (=> b!110224 (= e!71700 (insertStrictlySorted!78 (t!5738 (toList!789 (+!144 lt!56369 lt!56370))) (_1!1205 lt!56363) (_2!1205 lt!56363)))))

(declare-fun b!110225 () Bool)

(declare-fun res!54515 () Bool)

(declare-fun e!71702 () Bool)

(assert (=> b!110225 (=> (not res!54515) (not e!71702))))

(declare-fun lt!56852 () List!1609)

(assert (=> b!110225 (= res!54515 (containsKey!162 lt!56852 (_1!1205 lt!56363)))))

(declare-fun b!110226 () Bool)

(declare-fun e!71701 () List!1609)

(declare-fun call!11750 () List!1609)

(assert (=> b!110226 (= e!71701 call!11750)))

(declare-fun bm!11746 () Bool)

(declare-fun call!11751 () List!1609)

(declare-fun call!11749 () List!1609)

(assert (=> bm!11746 (= call!11751 call!11749)))

(declare-fun bm!11747 () Bool)

(assert (=> bm!11747 (= call!11750 call!11751)))

(declare-fun b!110227 () Bool)

(assert (=> b!110227 (= e!71701 call!11750)))

(declare-fun c!19531 () Bool)

(declare-fun bm!11748 () Bool)

(declare-fun $colon$colon!82 (List!1609 tuple2!2388) List!1609)

(assert (=> bm!11748 (= call!11749 ($colon$colon!82 e!71700 (ite c!19531 (h!2204 (toList!789 (+!144 lt!56369 lt!56370))) (tuple2!2389 (_1!1205 lt!56363) (_2!1205 lt!56363)))))))

(declare-fun c!19532 () Bool)

(assert (=> bm!11748 (= c!19532 c!19531)))

(declare-fun b!110228 () Bool)

(declare-fun e!71699 () List!1609)

(assert (=> b!110228 (= e!71699 call!11751)))

(declare-fun d!30921 () Bool)

(assert (=> d!30921 e!71702))

(declare-fun res!54514 () Bool)

(assert (=> d!30921 (=> (not res!54514) (not e!71702))))

(assert (=> d!30921 (= res!54514 (isStrictlySorted!298 lt!56852))))

(declare-fun e!71698 () List!1609)

(assert (=> d!30921 (= lt!56852 e!71698)))

(assert (=> d!30921 (= c!19531 (and ((_ is Cons!1605) (toList!789 (+!144 lt!56369 lt!56370))) (bvslt (_1!1205 (h!2204 (toList!789 (+!144 lt!56369 lt!56370)))) (_1!1205 lt!56363))))))

(assert (=> d!30921 (isStrictlySorted!298 (toList!789 (+!144 lt!56369 lt!56370)))))

(assert (=> d!30921 (= (insertStrictlySorted!78 (toList!789 (+!144 lt!56369 lt!56370)) (_1!1205 lt!56363) (_2!1205 lt!56363)) lt!56852)))

(declare-fun b!110229 () Bool)

(assert (=> b!110229 (= e!71698 call!11749)))

(declare-fun c!19529 () Bool)

(declare-fun b!110230 () Bool)

(assert (=> b!110230 (= c!19529 (and ((_ is Cons!1605) (toList!789 (+!144 lt!56369 lt!56370))) (bvsgt (_1!1205 (h!2204 (toList!789 (+!144 lt!56369 lt!56370)))) (_1!1205 lt!56363))))))

(assert (=> b!110230 (= e!71699 e!71701)))

(declare-fun c!19530 () Bool)

(declare-fun b!110231 () Bool)

(assert (=> b!110231 (= e!71700 (ite c!19530 (t!5738 (toList!789 (+!144 lt!56369 lt!56370))) (ite c!19529 (Cons!1605 (h!2204 (toList!789 (+!144 lt!56369 lt!56370))) (t!5738 (toList!789 (+!144 lt!56369 lt!56370)))) Nil!1606)))))

(declare-fun b!110232 () Bool)

(assert (=> b!110232 (= e!71702 (contains!827 lt!56852 (tuple2!2389 (_1!1205 lt!56363) (_2!1205 lt!56363))))))

(declare-fun b!110233 () Bool)

(assert (=> b!110233 (= e!71698 e!71699)))

(assert (=> b!110233 (= c!19530 (and ((_ is Cons!1605) (toList!789 (+!144 lt!56369 lt!56370))) (= (_1!1205 (h!2204 (toList!789 (+!144 lt!56369 lt!56370)))) (_1!1205 lt!56363))))))

(assert (= (and d!30921 c!19531) b!110229))

(assert (= (and d!30921 (not c!19531)) b!110233))

(assert (= (and b!110233 c!19530) b!110228))

(assert (= (and b!110233 (not c!19530)) b!110230))

(assert (= (and b!110230 c!19529) b!110226))

(assert (= (and b!110230 (not c!19529)) b!110227))

(assert (= (or b!110226 b!110227) bm!11747))

(assert (= (or b!110228 bm!11747) bm!11746))

(assert (= (or b!110229 bm!11746) bm!11748))

(assert (= (and bm!11748 c!19532) b!110224))

(assert (= (and bm!11748 (not c!19532)) b!110231))

(assert (= (and d!30921 res!54514) b!110225))

(assert (= (and b!110225 res!54515) b!110232))

(declare-fun m!124791 () Bool)

(assert (=> bm!11748 m!124791))

(declare-fun m!124793 () Bool)

(assert (=> b!110232 m!124793))

(declare-fun m!124795 () Bool)

(assert (=> b!110225 m!124795))

(declare-fun m!124797 () Bool)

(assert (=> d!30921 m!124797))

(declare-fun m!124799 () Bool)

(assert (=> d!30921 m!124799))

(declare-fun m!124801 () Bool)

(assert (=> b!110224 m!124801))

(assert (=> d!30809 d!30921))

(assert (=> b!109937 d!30901))

(declare-fun bm!11751 () Bool)

(declare-fun call!11754 () Bool)

(assert (=> bm!11751 (= call!11754 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4340 newMap!16) (mask!6794 newMap!16)))))

(declare-fun b!110242 () Bool)

(declare-fun e!71709 () Bool)

(assert (=> b!110242 (= e!71709 call!11754)))

(declare-fun b!110243 () Bool)

(declare-fun e!71711 () Bool)

(assert (=> b!110243 (= e!71711 call!11754)))

(declare-fun b!110245 () Bool)

(assert (=> b!110245 (= e!71711 e!71709)))

(declare-fun lt!56859 () (_ BitVec 64))

(assert (=> b!110245 (= lt!56859 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56861 () Unit!3382)

(assert (=> b!110245 (= lt!56861 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4340 newMap!16) lt!56859 #b00000000000000000000000000000000))))

(assert (=> b!110245 (arrayContainsKey!0 (_keys!4340 newMap!16) lt!56859 #b00000000000000000000000000000000)))

(declare-fun lt!56860 () Unit!3382)

(assert (=> b!110245 (= lt!56860 lt!56861)))

(declare-fun res!54520 () Bool)

(assert (=> b!110245 (= res!54520 (= (seekEntryOrOpen!0 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000) (_keys!4340 newMap!16) (mask!6794 newMap!16)) (Found!255 #b00000000000000000000000000000000)))))

(assert (=> b!110245 (=> (not res!54520) (not e!71709))))

(declare-fun b!110244 () Bool)

(declare-fun e!71710 () Bool)

(assert (=> b!110244 (= e!71710 e!71711)))

(declare-fun c!19535 () Bool)

(assert (=> b!110244 (= c!19535 (validKeyInArray!0 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!30923 () Bool)

(declare-fun res!54521 () Bool)

(assert (=> d!30923 (=> res!54521 e!71710)))

(assert (=> d!30923 (= res!54521 (bvsge #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))))))

(assert (=> d!30923 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4340 newMap!16) (mask!6794 newMap!16)) e!71710)))

(assert (= (and d!30923 (not res!54521)) b!110244))

(assert (= (and b!110244 c!19535) b!110245))

(assert (= (and b!110244 (not c!19535)) b!110243))

(assert (= (and b!110245 res!54520) b!110242))

(assert (= (or b!110242 b!110243) bm!11751))

(declare-fun m!124803 () Bool)

(assert (=> bm!11751 m!124803))

(assert (=> b!110245 m!124605))

(declare-fun m!124805 () Bool)

(assert (=> b!110245 m!124805))

(declare-fun m!124807 () Bool)

(assert (=> b!110245 m!124807))

(assert (=> b!110245 m!124605))

(declare-fun m!124809 () Bool)

(assert (=> b!110245 m!124809))

(assert (=> b!110244 m!124605))

(assert (=> b!110244 m!124605))

(assert (=> b!110244 m!124607))

(assert (=> b!109997 d!30923))

(declare-fun d!30925 () Bool)

(declare-fun lt!56862 () Bool)

(assert (=> d!30925 (= lt!56862 (select (content!114 (toList!789 lt!56483)) lt!56363))))

(declare-fun e!71713 () Bool)

(assert (=> d!30925 (= lt!56862 e!71713)))

(declare-fun res!54523 () Bool)

(assert (=> d!30925 (=> (not res!54523) (not e!71713))))

(assert (=> d!30925 (= res!54523 ((_ is Cons!1605) (toList!789 lt!56483)))))

(assert (=> d!30925 (= (contains!827 (toList!789 lt!56483) lt!56363) lt!56862)))

(declare-fun b!110246 () Bool)

(declare-fun e!71712 () Bool)

(assert (=> b!110246 (= e!71713 e!71712)))

(declare-fun res!54522 () Bool)

(assert (=> b!110246 (=> res!54522 e!71712)))

(assert (=> b!110246 (= res!54522 (= (h!2204 (toList!789 lt!56483)) lt!56363))))

(declare-fun b!110247 () Bool)

(assert (=> b!110247 (= e!71712 (contains!827 (t!5738 (toList!789 lt!56483)) lt!56363))))

(assert (= (and d!30925 res!54523) b!110246))

(assert (= (and b!110246 (not res!54522)) b!110247))

(declare-fun m!124811 () Bool)

(assert (=> d!30925 m!124811))

(declare-fun m!124813 () Bool)

(assert (=> d!30925 m!124813))

(declare-fun m!124815 () Bool)

(assert (=> b!110247 m!124815))

(assert (=> b!109762 d!30925))

(declare-fun d!30927 () Bool)

(declare-fun e!71715 () Bool)

(assert (=> d!30927 e!71715))

(declare-fun res!54524 () Bool)

(assert (=> d!30927 (=> res!54524 e!71715)))

(declare-fun lt!56865 () Bool)

(assert (=> d!30927 (= res!54524 (not lt!56865))))

(declare-fun lt!56866 () Bool)

(assert (=> d!30927 (= lt!56865 lt!56866)))

(declare-fun lt!56863 () Unit!3382)

(declare-fun e!71714 () Unit!3382)

(assert (=> d!30927 (= lt!56863 e!71714)))

(declare-fun c!19536 () Bool)

(assert (=> d!30927 (= c!19536 lt!56866)))

(assert (=> d!30927 (= lt!56866 (containsKey!162 (toList!789 lt!56479) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!30927 (= (contains!824 lt!56479 #b0000000000000000000000000000000000000000000000000000000000000000) lt!56865)))

(declare-fun b!110248 () Bool)

(declare-fun lt!56864 () Unit!3382)

(assert (=> b!110248 (= e!71714 lt!56864)))

(assert (=> b!110248 (= lt!56864 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 lt!56479) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!110248 (isDefined!111 (getValueByKey!159 (toList!789 lt!56479) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110249 () Bool)

(declare-fun Unit!3404 () Unit!3382)

(assert (=> b!110249 (= e!71714 Unit!3404)))

(declare-fun b!110250 () Bool)

(assert (=> b!110250 (= e!71715 (isDefined!111 (getValueByKey!159 (toList!789 lt!56479) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30927 c!19536) b!110248))

(assert (= (and d!30927 (not c!19536)) b!110249))

(assert (= (and d!30927 (not res!54524)) b!110250))

(declare-fun m!124817 () Bool)

(assert (=> d!30927 m!124817))

(declare-fun m!124819 () Bool)

(assert (=> b!110248 m!124819))

(declare-fun m!124821 () Bool)

(assert (=> b!110248 m!124821))

(assert (=> b!110248 m!124821))

(declare-fun m!124823 () Bool)

(assert (=> b!110248 m!124823))

(assert (=> b!110250 m!124821))

(assert (=> b!110250 m!124821))

(assert (=> b!110250 m!124823))

(assert (=> d!30811 d!30927))

(assert (=> d!30811 d!30819))

(assert (=> b!109973 d!30845))

(declare-fun d!30929 () Bool)

(assert (=> d!30929 (isDefined!111 (getValueByKey!159 (toList!789 lt!56367) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(declare-fun lt!56869 () Unit!3382)

(declare-fun choose!696 (List!1609 (_ BitVec 64)) Unit!3382)

(assert (=> d!30929 (= lt!56869 (choose!696 (toList!789 lt!56367) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(declare-fun e!71718 () Bool)

(assert (=> d!30929 e!71718))

(declare-fun res!54527 () Bool)

(assert (=> d!30929 (=> (not res!54527) (not e!71718))))

(assert (=> d!30929 (= res!54527 (isStrictlySorted!298 (toList!789 lt!56367)))))

(assert (=> d!30929 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 lt!56367) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) lt!56869)))

(declare-fun b!110253 () Bool)

(assert (=> b!110253 (= e!71718 (containsKey!162 (toList!789 lt!56367) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(assert (= (and d!30929 res!54527) b!110253))

(assert (=> d!30929 m!124087))

(assert (=> d!30929 m!124385))

(assert (=> d!30929 m!124385))

(assert (=> d!30929 m!124387))

(assert (=> d!30929 m!124087))

(declare-fun m!124825 () Bool)

(assert (=> d!30929 m!124825))

(declare-fun m!124827 () Bool)

(assert (=> d!30929 m!124827))

(assert (=> b!110253 m!124087))

(assert (=> b!110253 m!124381))

(assert (=> b!109840 d!30929))

(assert (=> b!109840 d!30905))

(assert (=> b!109840 d!30907))

(declare-fun d!30931 () Bool)

(declare-fun res!54536 () Bool)

(declare-fun e!71721 () Bool)

(assert (=> d!30931 (=> (not res!54536) (not e!71721))))

(assert (=> d!30931 (= res!54536 (validMask!0 (mask!6794 newMap!16)))))

(assert (=> d!30931 (= (simpleValid!76 newMap!16) e!71721)))

(declare-fun b!110265 () Bool)

(assert (=> b!110265 (= e!71721 (and (bvsge (extraKeys!2423 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!2423 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!507 newMap!16) #b00000000000000000000000000000000)))))

(declare-fun b!110263 () Bool)

(declare-fun res!54538 () Bool)

(assert (=> b!110263 (=> (not res!54538) (not e!71721))))

(declare-fun size!2335 (LongMapFixedSize!916) (_ BitVec 32))

(assert (=> b!110263 (= res!54538 (bvsge (size!2335 newMap!16) (_size!507 newMap!16)))))

(declare-fun b!110264 () Bool)

(declare-fun res!54537 () Bool)

(assert (=> b!110264 (=> (not res!54537) (not e!71721))))

(assert (=> b!110264 (= res!54537 (= (size!2335 newMap!16) (bvadd (_size!507 newMap!16) (bvsdiv (bvadd (extraKeys!2423 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!110262 () Bool)

(declare-fun res!54539 () Bool)

(assert (=> b!110262 (=> (not res!54539) (not e!71721))))

(assert (=> b!110262 (= res!54539 (and (= (size!2330 (_values!2609 newMap!16)) (bvadd (mask!6794 newMap!16) #b00000000000000000000000000000001)) (= (size!2329 (_keys!4340 newMap!16)) (size!2330 (_values!2609 newMap!16))) (bvsge (_size!507 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!507 newMap!16) (bvadd (mask!6794 newMap!16) #b00000000000000000000000000000001))))))

(assert (= (and d!30931 res!54536) b!110262))

(assert (= (and b!110262 res!54539) b!110263))

(assert (= (and b!110263 res!54538) b!110264))

(assert (= (and b!110264 res!54537) b!110265))

(assert (=> d!30931 m!124579))

(declare-fun m!124829 () Bool)

(assert (=> b!110263 m!124829))

(assert (=> b!110264 m!124829))

(assert (=> d!30851 d!30931))

(declare-fun d!30933 () Bool)

(declare-fun e!71722 () Bool)

(assert (=> d!30933 e!71722))

(declare-fun res!54541 () Bool)

(assert (=> d!30933 (=> (not res!54541) (not e!71722))))

(declare-fun lt!56873 () ListLongMap!1547)

(assert (=> d!30933 (= res!54541 (contains!824 lt!56873 (_1!1205 (tuple2!2389 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun lt!56872 () List!1609)

(assert (=> d!30933 (= lt!56873 (ListLongMap!1548 lt!56872))))

(declare-fun lt!56871 () Unit!3382)

(declare-fun lt!56870 () Unit!3382)

(assert (=> d!30933 (= lt!56871 lt!56870)))

(assert (=> d!30933 (= (getValueByKey!159 lt!56872 (_1!1205 (tuple2!2389 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))) (Some!164 (_2!1205 (tuple2!2389 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> d!30933 (= lt!56870 (lemmaContainsTupThenGetReturnValue!75 lt!56872 (_1!1205 (tuple2!2389 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992))))) (_2!1205 (tuple2!2389 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> d!30933 (= lt!56872 (insertStrictlySorted!78 (toList!789 lt!56536) (_1!1205 (tuple2!2389 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992))))) (_2!1205 (tuple2!2389 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> d!30933 (= (+!144 lt!56536 (tuple2!2389 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992))))) lt!56873)))

(declare-fun b!110266 () Bool)

(declare-fun res!54540 () Bool)

(assert (=> b!110266 (=> (not res!54540) (not e!71722))))

(assert (=> b!110266 (= res!54540 (= (getValueByKey!159 (toList!789 lt!56873) (_1!1205 (tuple2!2389 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))) (Some!164 (_2!1205 (tuple2!2389 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(declare-fun b!110267 () Bool)

(assert (=> b!110267 (= e!71722 (contains!827 (toList!789 lt!56873) (tuple2!2389 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))))

(assert (= (and d!30933 res!54541) b!110266))

(assert (= (and b!110266 res!54540) b!110267))

(declare-fun m!124831 () Bool)

(assert (=> d!30933 m!124831))

(declare-fun m!124833 () Bool)

(assert (=> d!30933 m!124833))

(declare-fun m!124835 () Bool)

(assert (=> d!30933 m!124835))

(declare-fun m!124837 () Bool)

(assert (=> d!30933 m!124837))

(declare-fun m!124839 () Bool)

(assert (=> b!110266 m!124839))

(declare-fun m!124841 () Bool)

(assert (=> b!110267 m!124841))

(assert (=> b!109817 d!30933))

(declare-fun d!30935 () Bool)

(assert (=> d!30935 (= (apply!100 (+!144 lt!56554 (tuple2!2389 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992))))) lt!56537) (apply!100 lt!56554 lt!56537))))

(declare-fun lt!56876 () Unit!3382)

(declare-fun choose!697 (ListLongMap!1547 (_ BitVec 64) V!3241 (_ BitVec 64)) Unit!3382)

(assert (=> d!30935 (= lt!56876 (choose!697 lt!56554 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992))) lt!56537))))

(declare-fun e!71725 () Bool)

(assert (=> d!30935 e!71725))

(declare-fun res!54544 () Bool)

(assert (=> d!30935 (=> (not res!54544) (not e!71725))))

(assert (=> d!30935 (= res!54544 (contains!824 lt!56554 lt!56537))))

(assert (=> d!30935 (= (addApplyDifferent!76 lt!56554 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992))) lt!56537) lt!56876)))

(declare-fun b!110271 () Bool)

(assert (=> b!110271 (= e!71725 (not (= lt!56537 lt!56543)))))

(assert (= (and d!30935 res!54544) b!110271))

(assert (=> d!30935 m!124359))

(assert (=> d!30935 m!124359))

(assert (=> d!30935 m!124361))

(assert (=> d!30935 m!124337))

(declare-fun m!124843 () Bool)

(assert (=> d!30935 m!124843))

(declare-fun m!124845 () Bool)

(assert (=> d!30935 m!124845))

(assert (=> b!109817 d!30935))

(assert (=> b!109817 d!30811))

(declare-fun d!30937 () Bool)

(assert (=> d!30937 (= (apply!100 (+!144 lt!56554 (tuple2!2389 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992))))) lt!56537) (get!1356 (getValueByKey!159 (toList!789 (+!144 lt!56554 (tuple2!2389 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))) lt!56537)))))

(declare-fun bs!4531 () Bool)

(assert (= bs!4531 d!30937))

(declare-fun m!124847 () Bool)

(assert (=> bs!4531 m!124847))

(assert (=> bs!4531 m!124847))

(declare-fun m!124849 () Bool)

(assert (=> bs!4531 m!124849))

(assert (=> b!109817 d!30937))

(declare-fun d!30939 () Bool)

(declare-fun e!71726 () Bool)

(assert (=> d!30939 e!71726))

(declare-fun res!54546 () Bool)

(assert (=> d!30939 (=> (not res!54546) (not e!71726))))

(declare-fun lt!56880 () ListLongMap!1547)

(assert (=> d!30939 (= res!54546 (contains!824 lt!56880 (_1!1205 (tuple2!2389 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun lt!56879 () List!1609)

(assert (=> d!30939 (= lt!56880 (ListLongMap!1548 lt!56879))))

(declare-fun lt!56878 () Unit!3382)

(declare-fun lt!56877 () Unit!3382)

(assert (=> d!30939 (= lt!56878 lt!56877)))

(assert (=> d!30939 (= (getValueByKey!159 lt!56879 (_1!1205 (tuple2!2389 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))) (Some!164 (_2!1205 (tuple2!2389 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> d!30939 (= lt!56877 (lemmaContainsTupThenGetReturnValue!75 lt!56879 (_1!1205 (tuple2!2389 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))) (_2!1205 (tuple2!2389 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> d!30939 (= lt!56879 (insertStrictlySorted!78 (toList!789 lt!56544) (_1!1205 (tuple2!2389 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))) (_2!1205 (tuple2!2389 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> d!30939 (= (+!144 lt!56544 (tuple2!2389 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))) lt!56880)))

(declare-fun b!110272 () Bool)

(declare-fun res!54545 () Bool)

(assert (=> b!110272 (=> (not res!54545) (not e!71726))))

(assert (=> b!110272 (= res!54545 (= (getValueByKey!159 (toList!789 lt!56880) (_1!1205 (tuple2!2389 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))) (Some!164 (_2!1205 (tuple2!2389 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(declare-fun b!110273 () Bool)

(assert (=> b!110273 (= e!71726 (contains!827 (toList!789 lt!56880) (tuple2!2389 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))))

(assert (= (and d!30939 res!54546) b!110272))

(assert (= (and b!110272 res!54545) b!110273))

(declare-fun m!124851 () Bool)

(assert (=> d!30939 m!124851))

(declare-fun m!124853 () Bool)

(assert (=> d!30939 m!124853))

(declare-fun m!124855 () Bool)

(assert (=> d!30939 m!124855))

(declare-fun m!124857 () Bool)

(assert (=> d!30939 m!124857))

(declare-fun m!124859 () Bool)

(assert (=> b!110272 m!124859))

(declare-fun m!124861 () Bool)

(assert (=> b!110273 m!124861))

(assert (=> b!109817 d!30939))

(declare-fun d!30941 () Bool)

(assert (=> d!30941 (contains!824 (+!144 lt!56546 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))) lt!56548)))

(declare-fun lt!56883 () Unit!3382)

(declare-fun choose!698 (ListLongMap!1547 (_ BitVec 64) V!3241 (_ BitVec 64)) Unit!3382)

(assert (=> d!30941 (= lt!56883 (choose!698 lt!56546 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))) lt!56548))))

(assert (=> d!30941 (contains!824 lt!56546 lt!56548)))

(assert (=> d!30941 (= (addStillContains!76 lt!56546 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))) lt!56548) lt!56883)))

(declare-fun bs!4532 () Bool)

(assert (= bs!4532 d!30941))

(assert (=> bs!4532 m!124343))

(assert (=> bs!4532 m!124343))

(assert (=> bs!4532 m!124345))

(declare-fun m!124863 () Bool)

(assert (=> bs!4532 m!124863))

(declare-fun m!124865 () Bool)

(assert (=> bs!4532 m!124865))

(assert (=> b!109817 d!30941))

(declare-fun d!30943 () Bool)

(declare-fun e!71727 () Bool)

(assert (=> d!30943 e!71727))

(declare-fun res!54548 () Bool)

(assert (=> d!30943 (=> (not res!54548) (not e!71727))))

(declare-fun lt!56887 () ListLongMap!1547)

(assert (=> d!30943 (= res!54548 (contains!824 lt!56887 (_1!1205 (tuple2!2389 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun lt!56886 () List!1609)

(assert (=> d!30943 (= lt!56887 (ListLongMap!1548 lt!56886))))

(declare-fun lt!56885 () Unit!3382)

(declare-fun lt!56884 () Unit!3382)

(assert (=> d!30943 (= lt!56885 lt!56884)))

(assert (=> d!30943 (= (getValueByKey!159 lt!56886 (_1!1205 (tuple2!2389 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))) (Some!164 (_2!1205 (tuple2!2389 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> d!30943 (= lt!56884 (lemmaContainsTupThenGetReturnValue!75 lt!56886 (_1!1205 (tuple2!2389 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992))))) (_2!1205 (tuple2!2389 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> d!30943 (= lt!56886 (insertStrictlySorted!78 (toList!789 lt!56554) (_1!1205 (tuple2!2389 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992))))) (_2!1205 (tuple2!2389 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> d!30943 (= (+!144 lt!56554 (tuple2!2389 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992))))) lt!56887)))

(declare-fun b!110275 () Bool)

(declare-fun res!54547 () Bool)

(assert (=> b!110275 (=> (not res!54547) (not e!71727))))

(assert (=> b!110275 (= res!54547 (= (getValueByKey!159 (toList!789 lt!56887) (_1!1205 (tuple2!2389 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))) (Some!164 (_2!1205 (tuple2!2389 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(declare-fun b!110276 () Bool)

(assert (=> b!110276 (= e!71727 (contains!827 (toList!789 lt!56887) (tuple2!2389 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))))

(assert (= (and d!30943 res!54548) b!110275))

(assert (= (and b!110275 res!54547) b!110276))

(declare-fun m!124867 () Bool)

(assert (=> d!30943 m!124867))

(declare-fun m!124869 () Bool)

(assert (=> d!30943 m!124869))

(declare-fun m!124871 () Bool)

(assert (=> d!30943 m!124871))

(declare-fun m!124873 () Bool)

(assert (=> d!30943 m!124873))

(declare-fun m!124875 () Bool)

(assert (=> b!110275 m!124875))

(declare-fun m!124877 () Bool)

(assert (=> b!110276 m!124877))

(assert (=> b!109817 d!30943))

(declare-fun d!30945 () Bool)

(assert (=> d!30945 (= (apply!100 lt!56544 lt!56550) (get!1356 (getValueByKey!159 (toList!789 lt!56544) lt!56550)))))

(declare-fun bs!4533 () Bool)

(assert (= bs!4533 d!30945))

(declare-fun m!124879 () Bool)

(assert (=> bs!4533 m!124879))

(assert (=> bs!4533 m!124879))

(declare-fun m!124881 () Bool)

(assert (=> bs!4533 m!124881))

(assert (=> b!109817 d!30945))

(declare-fun d!30947 () Bool)

(assert (=> d!30947 (= (apply!100 lt!56554 lt!56537) (get!1356 (getValueByKey!159 (toList!789 lt!56554) lt!56537)))))

(declare-fun bs!4534 () Bool)

(assert (= bs!4534 d!30947))

(declare-fun m!124883 () Bool)

(assert (=> bs!4534 m!124883))

(assert (=> bs!4534 m!124883))

(declare-fun m!124885 () Bool)

(assert (=> bs!4534 m!124885))

(assert (=> b!109817 d!30947))

(declare-fun d!30949 () Bool)

(assert (=> d!30949 (= (apply!100 (+!144 lt!56544 (tuple2!2389 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))) lt!56550) (get!1356 (getValueByKey!159 (toList!789 (+!144 lt!56544 (tuple2!2389 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))) lt!56550)))))

(declare-fun bs!4535 () Bool)

(assert (= bs!4535 d!30949))

(declare-fun m!124887 () Bool)

(assert (=> bs!4535 m!124887))

(assert (=> bs!4535 m!124887))

(declare-fun m!124889 () Bool)

(assert (=> bs!4535 m!124889))

(assert (=> b!109817 d!30949))

(declare-fun d!30951 () Bool)

(declare-fun e!71729 () Bool)

(assert (=> d!30951 e!71729))

(declare-fun res!54549 () Bool)

(assert (=> d!30951 (=> res!54549 e!71729)))

(declare-fun lt!56890 () Bool)

(assert (=> d!30951 (= res!54549 (not lt!56890))))

(declare-fun lt!56891 () Bool)

(assert (=> d!30951 (= lt!56890 lt!56891)))

(declare-fun lt!56888 () Unit!3382)

(declare-fun e!71728 () Unit!3382)

(assert (=> d!30951 (= lt!56888 e!71728)))

(declare-fun c!19537 () Bool)

(assert (=> d!30951 (= c!19537 lt!56891)))

(assert (=> d!30951 (= lt!56891 (containsKey!162 (toList!789 (+!144 lt!56546 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))) lt!56548))))

(assert (=> d!30951 (= (contains!824 (+!144 lt!56546 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))) lt!56548) lt!56890)))

(declare-fun b!110277 () Bool)

(declare-fun lt!56889 () Unit!3382)

(assert (=> b!110277 (= e!71728 lt!56889)))

(assert (=> b!110277 (= lt!56889 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 (+!144 lt!56546 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))) lt!56548))))

(assert (=> b!110277 (isDefined!111 (getValueByKey!159 (toList!789 (+!144 lt!56546 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))) lt!56548))))

(declare-fun b!110278 () Bool)

(declare-fun Unit!3405 () Unit!3382)

(assert (=> b!110278 (= e!71728 Unit!3405)))

(declare-fun b!110279 () Bool)

(assert (=> b!110279 (= e!71729 (isDefined!111 (getValueByKey!159 (toList!789 (+!144 lt!56546 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))) lt!56548)))))

(assert (= (and d!30951 c!19537) b!110277))

(assert (= (and d!30951 (not c!19537)) b!110278))

(assert (= (and d!30951 (not res!54549)) b!110279))

(declare-fun m!124891 () Bool)

(assert (=> d!30951 m!124891))

(declare-fun m!124893 () Bool)

(assert (=> b!110277 m!124893))

(declare-fun m!124895 () Bool)

(assert (=> b!110277 m!124895))

(assert (=> b!110277 m!124895))

(declare-fun m!124897 () Bool)

(assert (=> b!110277 m!124897))

(assert (=> b!110279 m!124895))

(assert (=> b!110279 m!124895))

(assert (=> b!110279 m!124897))

(assert (=> b!109817 d!30951))

(declare-fun d!30953 () Bool)

(assert (=> d!30953 (= (apply!100 (+!144 lt!56544 (tuple2!2389 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))) lt!56550) (apply!100 lt!56544 lt!56550))))

(declare-fun lt!56892 () Unit!3382)

(assert (=> d!30953 (= lt!56892 (choose!697 lt!56544 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))) lt!56550))))

(declare-fun e!71730 () Bool)

(assert (=> d!30953 e!71730))

(declare-fun res!54550 () Bool)

(assert (=> d!30953 (=> (not res!54550) (not e!71730))))

(assert (=> d!30953 (= res!54550 (contains!824 lt!56544 lt!56550))))

(assert (=> d!30953 (= (addApplyDifferent!76 lt!56544 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))) lt!56550) lt!56892)))

(declare-fun b!110280 () Bool)

(assert (=> b!110280 (= e!71730 (not (= lt!56550 lt!56555)))))

(assert (= (and d!30953 res!54550) b!110280))

(assert (=> d!30953 m!124353))

(assert (=> d!30953 m!124353))

(assert (=> d!30953 m!124355))

(assert (=> d!30953 m!124335))

(declare-fun m!124899 () Bool)

(assert (=> d!30953 m!124899))

(declare-fun m!124901 () Bool)

(assert (=> d!30953 m!124901))

(assert (=> b!109817 d!30953))

(declare-fun d!30955 () Bool)

(declare-fun e!71731 () Bool)

(assert (=> d!30955 e!71731))

(declare-fun res!54552 () Bool)

(assert (=> d!30955 (=> (not res!54552) (not e!71731))))

(declare-fun lt!56896 () ListLongMap!1547)

(assert (=> d!30955 (= res!54552 (contains!824 lt!56896 (_1!1205 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun lt!56895 () List!1609)

(assert (=> d!30955 (= lt!56896 (ListLongMap!1548 lt!56895))))

(declare-fun lt!56894 () Unit!3382)

(declare-fun lt!56893 () Unit!3382)

(assert (=> d!30955 (= lt!56894 lt!56893)))

(assert (=> d!30955 (= (getValueByKey!159 lt!56895 (_1!1205 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))) (Some!164 (_2!1205 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> d!30955 (= lt!56893 (lemmaContainsTupThenGetReturnValue!75 lt!56895 (_1!1205 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))) (_2!1205 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> d!30955 (= lt!56895 (insertStrictlySorted!78 (toList!789 lt!56546) (_1!1205 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))) (_2!1205 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> d!30955 (= (+!144 lt!56546 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))) lt!56896)))

(declare-fun b!110281 () Bool)

(declare-fun res!54551 () Bool)

(assert (=> b!110281 (=> (not res!54551) (not e!71731))))

(assert (=> b!110281 (= res!54551 (= (getValueByKey!159 (toList!789 lt!56896) (_1!1205 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))) (Some!164 (_2!1205 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(declare-fun b!110282 () Bool)

(assert (=> b!110282 (= e!71731 (contains!827 (toList!789 lt!56896) (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))))

(assert (= (and d!30955 res!54552) b!110281))

(assert (= (and b!110281 res!54551) b!110282))

(declare-fun m!124903 () Bool)

(assert (=> d!30955 m!124903))

(declare-fun m!124905 () Bool)

(assert (=> d!30955 m!124905))

(declare-fun m!124907 () Bool)

(assert (=> d!30955 m!124907))

(declare-fun m!124909 () Bool)

(assert (=> d!30955 m!124909))

(declare-fun m!124911 () Bool)

(assert (=> b!110281 m!124911))

(declare-fun m!124913 () Bool)

(assert (=> b!110282 m!124913))

(assert (=> b!109817 d!30955))

(declare-fun d!30957 () Bool)

(assert (=> d!30957 (= (apply!100 (+!144 lt!56536 (tuple2!2389 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992))))) lt!56538) (get!1356 (getValueByKey!159 (toList!789 (+!144 lt!56536 (tuple2!2389 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))) lt!56538)))))

(declare-fun bs!4536 () Bool)

(assert (= bs!4536 d!30957))

(declare-fun m!124915 () Bool)

(assert (=> bs!4536 m!124915))

(assert (=> bs!4536 m!124915))

(declare-fun m!124917 () Bool)

(assert (=> bs!4536 m!124917))

(assert (=> b!109817 d!30957))

(declare-fun d!30959 () Bool)

(assert (=> d!30959 (= (apply!100 (+!144 lt!56536 (tuple2!2389 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992))))) lt!56538) (apply!100 lt!56536 lt!56538))))

(declare-fun lt!56897 () Unit!3382)

(assert (=> d!30959 (= lt!56897 (choose!697 lt!56536 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992))) lt!56538))))

(declare-fun e!71732 () Bool)

(assert (=> d!30959 e!71732))

(declare-fun res!54553 () Bool)

(assert (=> d!30959 (=> (not res!54553) (not e!71732))))

(assert (=> d!30959 (= res!54553 (contains!824 lt!56536 lt!56538))))

(assert (=> d!30959 (= (addApplyDifferent!76 lt!56536 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992))) lt!56538) lt!56897)))

(declare-fun b!110283 () Bool)

(assert (=> b!110283 (= e!71732 (not (= lt!56538 lt!56541)))))

(assert (= (and d!30959 res!54553) b!110283))

(assert (=> d!30959 m!124347))

(assert (=> d!30959 m!124347))

(assert (=> d!30959 m!124349))

(assert (=> d!30959 m!124351))

(declare-fun m!124919 () Bool)

(assert (=> d!30959 m!124919))

(declare-fun m!124921 () Bool)

(assert (=> d!30959 m!124921))

(assert (=> b!109817 d!30959))

(declare-fun d!30961 () Bool)

(assert (=> d!30961 (= (apply!100 lt!56536 lt!56538) (get!1356 (getValueByKey!159 (toList!789 lt!56536) lt!56538)))))

(declare-fun bs!4537 () Bool)

(assert (= bs!4537 d!30961))

(declare-fun m!124923 () Bool)

(assert (=> bs!4537 m!124923))

(assert (=> bs!4537 m!124923))

(declare-fun m!124925 () Bool)

(assert (=> bs!4537 m!124925))

(assert (=> b!109817 d!30961))

(declare-fun d!30963 () Bool)

(declare-fun res!54554 () Bool)

(declare-fun e!71733 () Bool)

(assert (=> d!30963 (=> res!54554 e!71733)))

(assert (=> d!30963 (= res!54554 (= (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(assert (=> d!30963 (= (arrayContainsKey!0 (_keys!4340 (v!2930 (underlying!370 thiss!992))) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) e!71733)))

(declare-fun b!110284 () Bool)

(declare-fun e!71734 () Bool)

(assert (=> b!110284 (= e!71733 e!71734)))

(declare-fun res!54555 () Bool)

(assert (=> b!110284 (=> (not res!54555) (not e!71734))))

(assert (=> b!110284 (= res!54555 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2329 (_keys!4340 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun b!110285 () Bool)

(assert (=> b!110285 (= e!71734 (arrayContainsKey!0 (_keys!4340 (v!2930 (underlying!370 thiss!992))) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!30963 (not res!54554)) b!110284))

(assert (= (and b!110284 res!54555) b!110285))

(assert (=> d!30963 m!124693))

(assert (=> b!110285 m!124087))

(declare-fun m!124927 () Bool)

(assert (=> b!110285 m!124927))

(assert (=> b!109968 d!30963))

(declare-fun b!110286 () Bool)

(declare-fun res!54556 () Bool)

(declare-fun e!71745 () Bool)

(assert (=> b!110286 (=> (not res!54556) (not e!71745))))

(declare-fun e!71741 () Bool)

(assert (=> b!110286 (= res!54556 e!71741)))

(declare-fun res!54559 () Bool)

(assert (=> b!110286 (=> res!54559 e!71741)))

(declare-fun e!71746 () Bool)

(assert (=> b!110286 (= res!54559 (not e!71746))))

(declare-fun res!54563 () Bool)

(assert (=> b!110286 (=> (not res!54563) (not e!71746))))

(assert (=> b!110286 (= res!54563 (bvslt #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))))))

(declare-fun bm!11752 () Bool)

(declare-fun call!11758 () Bool)

(declare-fun lt!56908 () ListLongMap!1547)

(assert (=> bm!11752 (= call!11758 (contains!824 lt!56908 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110287 () Bool)

(declare-fun e!71738 () Unit!3382)

(declare-fun Unit!3406 () Unit!3382)

(assert (=> b!110287 (= e!71738 Unit!3406)))

(declare-fun b!110288 () Bool)

(declare-fun e!71736 () ListLongMap!1547)

(declare-fun call!11761 () ListLongMap!1547)

(assert (=> b!110288 (= e!71736 (+!144 call!11761 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16))))))

(declare-fun b!110289 () Bool)

(declare-fun e!71740 () Bool)

(assert (=> b!110289 (= e!71741 e!71740)))

(declare-fun res!54557 () Bool)

(assert (=> b!110289 (=> (not res!54557) (not e!71740))))

(assert (=> b!110289 (= res!54557 (contains!824 lt!56908 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!110289 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))))))

(declare-fun b!110290 () Bool)

(declare-fun lt!56919 () Unit!3382)

(assert (=> b!110290 (= e!71738 lt!56919)))

(declare-fun lt!56909 () ListLongMap!1547)

(assert (=> b!110290 (= lt!56909 (getCurrentListMapNoExtraKeys!111 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!56916 () (_ BitVec 64))

(assert (=> b!110290 (= lt!56916 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56911 () (_ BitVec 64))

(assert (=> b!110290 (= lt!56911 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56912 () Unit!3382)

(assert (=> b!110290 (= lt!56912 (addStillContains!76 lt!56909 lt!56916 (zeroValue!2497 newMap!16) lt!56911))))

(assert (=> b!110290 (contains!824 (+!144 lt!56909 (tuple2!2389 lt!56916 (zeroValue!2497 newMap!16))) lt!56911)))

(declare-fun lt!56914 () Unit!3382)

(assert (=> b!110290 (= lt!56914 lt!56912)))

(declare-fun lt!56899 () ListLongMap!1547)

(assert (=> b!110290 (= lt!56899 (getCurrentListMapNoExtraKeys!111 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!56904 () (_ BitVec 64))

(assert (=> b!110290 (= lt!56904 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56901 () (_ BitVec 64))

(assert (=> b!110290 (= lt!56901 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56903 () Unit!3382)

(assert (=> b!110290 (= lt!56903 (addApplyDifferent!76 lt!56899 lt!56904 (minValue!2497 newMap!16) lt!56901))))

(assert (=> b!110290 (= (apply!100 (+!144 lt!56899 (tuple2!2389 lt!56904 (minValue!2497 newMap!16))) lt!56901) (apply!100 lt!56899 lt!56901))))

(declare-fun lt!56898 () Unit!3382)

(assert (=> b!110290 (= lt!56898 lt!56903)))

(declare-fun lt!56907 () ListLongMap!1547)

(assert (=> b!110290 (= lt!56907 (getCurrentListMapNoExtraKeys!111 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!56918 () (_ BitVec 64))

(assert (=> b!110290 (= lt!56918 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56913 () (_ BitVec 64))

(assert (=> b!110290 (= lt!56913 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56902 () Unit!3382)

(assert (=> b!110290 (= lt!56902 (addApplyDifferent!76 lt!56907 lt!56918 (zeroValue!2497 newMap!16) lt!56913))))

(assert (=> b!110290 (= (apply!100 (+!144 lt!56907 (tuple2!2389 lt!56918 (zeroValue!2497 newMap!16))) lt!56913) (apply!100 lt!56907 lt!56913))))

(declare-fun lt!56910 () Unit!3382)

(assert (=> b!110290 (= lt!56910 lt!56902)))

(declare-fun lt!56917 () ListLongMap!1547)

(assert (=> b!110290 (= lt!56917 (getCurrentListMapNoExtraKeys!111 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!56906 () (_ BitVec 64))

(assert (=> b!110290 (= lt!56906 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56900 () (_ BitVec 64))

(assert (=> b!110290 (= lt!56900 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!110290 (= lt!56919 (addApplyDifferent!76 lt!56917 lt!56906 (minValue!2497 newMap!16) lt!56900))))

(assert (=> b!110290 (= (apply!100 (+!144 lt!56917 (tuple2!2389 lt!56906 (minValue!2497 newMap!16))) lt!56900) (apply!100 lt!56917 lt!56900))))

(declare-fun d!30965 () Bool)

(assert (=> d!30965 e!71745))

(declare-fun res!54561 () Bool)

(assert (=> d!30965 (=> (not res!54561) (not e!71745))))

(assert (=> d!30965 (= res!54561 (or (bvsge #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))))))))

(declare-fun lt!56915 () ListLongMap!1547)

(assert (=> d!30965 (= lt!56908 lt!56915)))

(declare-fun lt!56905 () Unit!3382)

(assert (=> d!30965 (= lt!56905 e!71738)))

(declare-fun c!19543 () Bool)

(declare-fun e!71739 () Bool)

(assert (=> d!30965 (= c!19543 e!71739)))

(declare-fun res!54558 () Bool)

(assert (=> d!30965 (=> (not res!54558) (not e!71739))))

(assert (=> d!30965 (= res!54558 (bvslt #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))))))

(assert (=> d!30965 (= lt!56915 e!71736)))

(declare-fun c!19540 () Bool)

(assert (=> d!30965 (= c!19540 (and (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!30965 (validMask!0 (mask!6794 newMap!16))))

(assert (=> d!30965 (= (getCurrentListMap!475 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) lt!56908)))

(declare-fun bm!11753 () Bool)

(declare-fun call!11759 () ListLongMap!1547)

(declare-fun call!11756 () ListLongMap!1547)

(assert (=> bm!11753 (= call!11759 call!11756)))

(declare-fun b!110291 () Bool)

(declare-fun e!71744 () ListLongMap!1547)

(declare-fun call!11757 () ListLongMap!1547)

(assert (=> b!110291 (= e!71744 call!11757)))

(declare-fun b!110292 () Bool)

(declare-fun e!71743 () Bool)

(declare-fun call!11760 () Bool)

(assert (=> b!110292 (= e!71743 (not call!11760))))

(declare-fun b!110293 () Bool)

(declare-fun c!19539 () Bool)

(assert (=> b!110293 (= c!19539 (and (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!71747 () ListLongMap!1547)

(assert (=> b!110293 (= e!71744 e!71747)))

(declare-fun b!110294 () Bool)

(declare-fun e!71737 () Bool)

(assert (=> b!110294 (= e!71737 (not call!11758))))

(declare-fun bm!11754 () Bool)

(assert (=> bm!11754 (= call!11760 (contains!824 lt!56908 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110295 () Bool)

(declare-fun e!71735 () Bool)

(assert (=> b!110295 (= e!71737 e!71735)))

(declare-fun res!54560 () Bool)

(assert (=> b!110295 (= res!54560 call!11758)))

(assert (=> b!110295 (=> (not res!54560) (not e!71735))))

(declare-fun b!110296 () Bool)

(assert (=> b!110296 (= e!71740 (= (apply!100 lt!56908 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)) (get!1353 (select (arr!2073 (_values!2609 newMap!16)) #b00000000000000000000000000000000) (dynLambda!390 (defaultEntry!2626 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!110296 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2330 (_values!2609 newMap!16))))))

(assert (=> b!110296 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))))))

(declare-fun c!19538 () Bool)

(declare-fun call!11755 () ListLongMap!1547)

(declare-fun bm!11755 () Bool)

(assert (=> bm!11755 (= call!11761 (+!144 (ite c!19540 call!11756 (ite c!19538 call!11759 call!11755)) (ite (or c!19540 c!19538) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 newMap!16)) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16)))))))

(declare-fun b!110297 () Bool)

(declare-fun e!71742 () Bool)

(assert (=> b!110297 (= e!71742 (= (apply!100 lt!56908 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2497 newMap!16)))))

(declare-fun b!110298 () Bool)

(assert (=> b!110298 (= e!71745 e!71737)))

(declare-fun c!19542 () Bool)

(assert (=> b!110298 (= c!19542 (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11756 () Bool)

(assert (=> bm!11756 (= call!11757 call!11761)))

(declare-fun b!110299 () Bool)

(declare-fun res!54562 () Bool)

(assert (=> b!110299 (=> (not res!54562) (not e!71745))))

(assert (=> b!110299 (= res!54562 e!71743)))

(declare-fun c!19541 () Bool)

(assert (=> b!110299 (= c!19541 (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!110300 () Bool)

(assert (=> b!110300 (= e!71747 call!11755)))

(declare-fun bm!11757 () Bool)

(assert (=> bm!11757 (= call!11755 call!11759)))

(declare-fun b!110301 () Bool)

(assert (=> b!110301 (= e!71747 call!11757)))

(declare-fun b!110302 () Bool)

(assert (=> b!110302 (= e!71739 (validKeyInArray!0 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!110303 () Bool)

(assert (=> b!110303 (= e!71743 e!71742)))

(declare-fun res!54564 () Bool)

(assert (=> b!110303 (= res!54564 call!11760)))

(assert (=> b!110303 (=> (not res!54564) (not e!71742))))

(declare-fun b!110304 () Bool)

(assert (=> b!110304 (= e!71735 (= (apply!100 lt!56908 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2497 newMap!16)))))

(declare-fun b!110305 () Bool)

(assert (=> b!110305 (= e!71746 (validKeyInArray!0 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!110306 () Bool)

(assert (=> b!110306 (= e!71736 e!71744)))

(assert (=> b!110306 (= c!19538 (and (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11758 () Bool)

(assert (=> bm!11758 (= call!11756 (getCurrentListMapNoExtraKeys!111 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(assert (= (and d!30965 c!19540) b!110288))

(assert (= (and d!30965 (not c!19540)) b!110306))

(assert (= (and b!110306 c!19538) b!110291))

(assert (= (and b!110306 (not c!19538)) b!110293))

(assert (= (and b!110293 c!19539) b!110301))

(assert (= (and b!110293 (not c!19539)) b!110300))

(assert (= (or b!110301 b!110300) bm!11757))

(assert (= (or b!110291 bm!11757) bm!11753))

(assert (= (or b!110291 b!110301) bm!11756))

(assert (= (or b!110288 bm!11753) bm!11758))

(assert (= (or b!110288 bm!11756) bm!11755))

(assert (= (and d!30965 res!54558) b!110302))

(assert (= (and d!30965 c!19543) b!110290))

(assert (= (and d!30965 (not c!19543)) b!110287))

(assert (= (and d!30965 res!54561) b!110286))

(assert (= (and b!110286 res!54563) b!110305))

(assert (= (and b!110286 (not res!54559)) b!110289))

(assert (= (and b!110289 res!54557) b!110296))

(assert (= (and b!110286 res!54556) b!110299))

(assert (= (and b!110299 c!19541) b!110303))

(assert (= (and b!110299 (not c!19541)) b!110292))

(assert (= (and b!110303 res!54564) b!110297))

(assert (= (or b!110303 b!110292) bm!11754))

(assert (= (and b!110299 res!54562) b!110298))

(assert (= (and b!110298 c!19542) b!110295))

(assert (= (and b!110298 (not c!19542)) b!110294))

(assert (= (and b!110295 res!54560) b!110304))

(assert (= (or b!110295 b!110294) bm!11752))

(declare-fun b_lambda!4939 () Bool)

(assert (=> (not b_lambda!4939) (not b!110296)))

(assert (=> b!110296 t!5751))

(declare-fun b_and!6793 () Bool)

(assert (= b_and!6789 (and (=> t!5751 result!3533) b_and!6793)))

(assert (=> b!110296 t!5753))

(declare-fun b_and!6795 () Bool)

(assert (= b_and!6791 (and (=> t!5753 result!3535) b_and!6795)))

(assert (=> b!110305 m!124605))

(assert (=> b!110305 m!124605))

(assert (=> b!110305 m!124607))

(declare-fun m!124929 () Bool)

(assert (=> b!110290 m!124929))

(declare-fun m!124931 () Bool)

(assert (=> b!110290 m!124931))

(declare-fun m!124933 () Bool)

(assert (=> b!110290 m!124933))

(declare-fun m!124935 () Bool)

(assert (=> b!110290 m!124935))

(declare-fun m!124937 () Bool)

(assert (=> b!110290 m!124937))

(declare-fun m!124939 () Bool)

(assert (=> b!110290 m!124939))

(declare-fun m!124941 () Bool)

(assert (=> b!110290 m!124941))

(declare-fun m!124943 () Bool)

(assert (=> b!110290 m!124943))

(declare-fun m!124945 () Bool)

(assert (=> b!110290 m!124945))

(declare-fun m!124947 () Bool)

(assert (=> b!110290 m!124947))

(declare-fun m!124949 () Bool)

(assert (=> b!110290 m!124949))

(assert (=> b!110290 m!124937))

(assert (=> b!110290 m!124941))

(declare-fun m!124951 () Bool)

(assert (=> b!110290 m!124951))

(assert (=> b!110290 m!124605))

(declare-fun m!124953 () Bool)

(assert (=> b!110290 m!124953))

(assert (=> b!110290 m!124947))

(declare-fun m!124955 () Bool)

(assert (=> b!110290 m!124955))

(declare-fun m!124957 () Bool)

(assert (=> b!110290 m!124957))

(assert (=> b!110290 m!124955))

(declare-fun m!124959 () Bool)

(assert (=> b!110290 m!124959))

(assert (=> b!110302 m!124605))

(assert (=> b!110302 m!124605))

(assert (=> b!110302 m!124607))

(declare-fun m!124961 () Bool)

(assert (=> bm!11754 m!124961))

(assert (=> bm!11758 m!124953))

(assert (=> d!30965 m!124579))

(declare-fun m!124963 () Bool)

(assert (=> bm!11755 m!124963))

(declare-fun m!124965 () Bool)

(assert (=> b!110297 m!124965))

(declare-fun m!124967 () Bool)

(assert (=> bm!11752 m!124967))

(declare-fun m!124969 () Bool)

(assert (=> b!110304 m!124969))

(assert (=> b!110296 m!124605))

(declare-fun m!124971 () Bool)

(assert (=> b!110296 m!124971))

(assert (=> b!110296 m!124605))

(declare-fun m!124973 () Bool)

(assert (=> b!110296 m!124973))

(assert (=> b!110296 m!124973))

(assert (=> b!110296 m!124767))

(declare-fun m!124975 () Bool)

(assert (=> b!110296 m!124975))

(assert (=> b!110296 m!124767))

(declare-fun m!124977 () Bool)

(assert (=> b!110288 m!124977))

(assert (=> b!110289 m!124605))

(assert (=> b!110289 m!124605))

(declare-fun m!124979 () Bool)

(assert (=> b!110289 m!124979))

(assert (=> bm!11702 d!30965))

(declare-fun d!30967 () Bool)

(declare-fun e!71748 () Bool)

(assert (=> d!30967 e!71748))

(declare-fun res!54566 () Bool)

(assert (=> d!30967 (=> (not res!54566) (not e!71748))))

(declare-fun lt!56923 () ListLongMap!1547)

(assert (=> d!30967 (= res!54566 (contains!824 lt!56923 (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))

(declare-fun lt!56922 () List!1609)

(assert (=> d!30967 (= lt!56923 (ListLongMap!1548 lt!56922))))

(declare-fun lt!56921 () Unit!3382)

(declare-fun lt!56920 () Unit!3382)

(assert (=> d!30967 (= lt!56921 lt!56920)))

(assert (=> d!30967 (= (getValueByKey!159 lt!56922 (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))) (Some!164 (_2!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))

(assert (=> d!30967 (= lt!56920 (lemmaContainsTupThenGetReturnValue!75 lt!56922 (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)) (_2!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))

(assert (=> d!30967 (= lt!56922 (insertStrictlySorted!78 (toList!789 call!11711) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)) (_2!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))

(assert (=> d!30967 (= (+!144 call!11711 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)) lt!56923)))

(declare-fun b!110307 () Bool)

(declare-fun res!54565 () Bool)

(assert (=> b!110307 (=> (not res!54565) (not e!71748))))

(assert (=> b!110307 (= res!54565 (= (getValueByKey!159 (toList!789 lt!56923) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))) (Some!164 (_2!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))))))

(declare-fun b!110308 () Bool)

(assert (=> b!110308 (= e!71748 (contains!827 (toList!789 lt!56923) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))))

(assert (= (and d!30967 res!54566) b!110307))

(assert (= (and b!110307 res!54565) b!110308))

(declare-fun m!124981 () Bool)

(assert (=> d!30967 m!124981))

(declare-fun m!124983 () Bool)

(assert (=> d!30967 m!124983))

(declare-fun m!124985 () Bool)

(assert (=> d!30967 m!124985))

(declare-fun m!124987 () Bool)

(assert (=> d!30967 m!124987))

(declare-fun m!124989 () Bool)

(assert (=> b!110307 m!124989))

(declare-fun m!124991 () Bool)

(assert (=> b!110308 m!124991))

(assert (=> b!109924 d!30967))

(declare-fun d!30969 () Bool)

(declare-fun lt!56926 () Bool)

(declare-fun content!115 (List!1610) (InoxSet (_ BitVec 64)))

(assert (=> d!30969 (= lt!56926 (select (content!115 Nil!1607) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(declare-fun e!71753 () Bool)

(assert (=> d!30969 (= lt!56926 e!71753)))

(declare-fun res!54571 () Bool)

(assert (=> d!30969 (=> (not res!54571) (not e!71753))))

(assert (=> d!30969 (= res!54571 ((_ is Cons!1606) Nil!1607))))

(assert (=> d!30969 (= (contains!828 Nil!1607 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) lt!56926)))

(declare-fun b!110313 () Bool)

(declare-fun e!71754 () Bool)

(assert (=> b!110313 (= e!71753 e!71754)))

(declare-fun res!54572 () Bool)

(assert (=> b!110313 (=> res!54572 e!71754)))

(assert (=> b!110313 (= res!54572 (= (h!2205 Nil!1607) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(declare-fun b!110314 () Bool)

(assert (=> b!110314 (= e!71754 (contains!828 (t!5739 Nil!1607) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(assert (= (and d!30969 res!54571) b!110313))

(assert (= (and b!110313 (not res!54572)) b!110314))

(declare-fun m!124993 () Bool)

(assert (=> d!30969 m!124993))

(assert (=> d!30969 m!124087))

(declare-fun m!124995 () Bool)

(assert (=> d!30969 m!124995))

(assert (=> b!110314 m!124087))

(declare-fun m!124997 () Bool)

(assert (=> b!110314 m!124997))

(assert (=> b!109989 d!30969))

(declare-fun d!30971 () Bool)

(declare-fun res!54573 () Bool)

(declare-fun e!71755 () Bool)

(assert (=> d!30971 (=> res!54573 e!71755)))

(assert (=> d!30971 (= res!54573 (= (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(assert (=> d!30971 (= (arrayContainsKey!0 (_keys!4340 newMap!16) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) #b00000000000000000000000000000000) e!71755)))

(declare-fun b!110315 () Bool)

(declare-fun e!71756 () Bool)

(assert (=> b!110315 (= e!71755 e!71756)))

(declare-fun res!54574 () Bool)

(assert (=> b!110315 (=> (not res!54574) (not e!71756))))

(assert (=> b!110315 (= res!54574 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2329 (_keys!4340 newMap!16))))))

(declare-fun b!110316 () Bool)

(assert (=> b!110316 (= e!71756 (arrayContainsKey!0 (_keys!4340 newMap!16) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!30971 (not res!54573)) b!110315))

(assert (= (and b!110315 res!54574) b!110316))

(assert (=> d!30971 m!124605))

(assert (=> b!110316 m!124087))

(declare-fun m!124999 () Bool)

(assert (=> b!110316 m!124999))

(assert (=> bm!11700 d!30971))

(declare-fun d!30973 () Bool)

(assert (=> d!30973 (= (apply!100 lt!56545 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1356 (getValueByKey!159 (toList!789 lt!56545) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4538 () Bool)

(assert (= bs!4538 d!30973))

(assert (=> bs!4538 m!124533))

(assert (=> bs!4538 m!124533))

(declare-fun m!125001 () Bool)

(assert (=> bs!4538 m!125001))

(assert (=> b!109831 d!30973))

(declare-fun d!30975 () Bool)

(declare-fun e!71757 () Bool)

(assert (=> d!30975 e!71757))

(declare-fun res!54576 () Bool)

(assert (=> d!30975 (=> (not res!54576) (not e!71757))))

(declare-fun lt!56930 () ListLongMap!1547)

(assert (=> d!30975 (= res!54576 (contains!824 lt!56930 (_1!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun lt!56929 () List!1609)

(assert (=> d!30975 (= lt!56930 (ListLongMap!1548 lt!56929))))

(declare-fun lt!56928 () Unit!3382)

(declare-fun lt!56927 () Unit!3382)

(assert (=> d!30975 (= lt!56928 lt!56927)))

(assert (=> d!30975 (= (getValueByKey!159 lt!56929 (_1!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))) (Some!164 (_2!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> d!30975 (= lt!56927 (lemmaContainsTupThenGetReturnValue!75 lt!56929 (_1!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992))))) (_2!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> d!30975 (= lt!56929 (insertStrictlySorted!78 (toList!789 call!11646) (_1!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992))))) (_2!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> d!30975 (= (+!144 call!11646 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992))))) lt!56930)))

(declare-fun b!110317 () Bool)

(declare-fun res!54575 () Bool)

(assert (=> b!110317 (=> (not res!54575) (not e!71757))))

(assert (=> b!110317 (= res!54575 (= (getValueByKey!159 (toList!789 lt!56930) (_1!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))) (Some!164 (_2!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(declare-fun b!110318 () Bool)

(assert (=> b!110318 (= e!71757 (contains!827 (toList!789 lt!56930) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))))

(assert (= (and d!30975 res!54576) b!110317))

(assert (= (and b!110317 res!54575) b!110318))

(declare-fun m!125003 () Bool)

(assert (=> d!30975 m!125003))

(declare-fun m!125005 () Bool)

(assert (=> d!30975 m!125005))

(declare-fun m!125007 () Bool)

(assert (=> d!30975 m!125007))

(declare-fun m!125009 () Bool)

(assert (=> d!30975 m!125009))

(declare-fun m!125011 () Bool)

(assert (=> b!110317 m!125011))

(declare-fun m!125013 () Bool)

(assert (=> b!110318 m!125013))

(assert (=> b!109815 d!30975))

(declare-fun d!30977 () Bool)

(assert (=> d!30977 (= (get!1354 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) from!355) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2929 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(assert (=> b!109769 d!30977))

(declare-fun d!30979 () Bool)

(declare-fun e!71759 () Bool)

(assert (=> d!30979 e!71759))

(declare-fun res!54577 () Bool)

(assert (=> d!30979 (=> res!54577 e!71759)))

(declare-fun lt!56933 () Bool)

(assert (=> d!30979 (= res!54577 (not lt!56933))))

(declare-fun lt!56934 () Bool)

(assert (=> d!30979 (= lt!56933 lt!56934)))

(declare-fun lt!56931 () Unit!3382)

(declare-fun e!71758 () Unit!3382)

(assert (=> d!30979 (= lt!56931 e!71758)))

(declare-fun c!19544 () Bool)

(assert (=> d!30979 (= c!19544 lt!56934)))

(assert (=> d!30979 (= lt!56934 (containsKey!162 (toList!789 call!11712) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(assert (=> d!30979 (= (contains!824 call!11712 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) lt!56933)))

(declare-fun b!110319 () Bool)

(declare-fun lt!56932 () Unit!3382)

(assert (=> b!110319 (= e!71758 lt!56932)))

(assert (=> b!110319 (= lt!56932 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 call!11712) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(assert (=> b!110319 (isDefined!111 (getValueByKey!159 (toList!789 call!11712) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(declare-fun b!110320 () Bool)

(declare-fun Unit!3407 () Unit!3382)

(assert (=> b!110320 (= e!71758 Unit!3407)))

(declare-fun b!110321 () Bool)

(assert (=> b!110321 (= e!71759 (isDefined!111 (getValueByKey!159 (toList!789 call!11712) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355))))))

(assert (= (and d!30979 c!19544) b!110319))

(assert (= (and d!30979 (not c!19544)) b!110320))

(assert (= (and d!30979 (not res!54577)) b!110321))

(assert (=> d!30979 m!124087))

(declare-fun m!125015 () Bool)

(assert (=> d!30979 m!125015))

(assert (=> b!110319 m!124087))

(declare-fun m!125017 () Bool)

(assert (=> b!110319 m!125017))

(assert (=> b!110319 m!124087))

(declare-fun m!125019 () Bool)

(assert (=> b!110319 m!125019))

(assert (=> b!110319 m!125019))

(declare-fun m!125021 () Bool)

(assert (=> b!110319 m!125021))

(assert (=> b!110321 m!124087))

(assert (=> b!110321 m!125019))

(assert (=> b!110321 m!125019))

(assert (=> b!110321 m!125021))

(assert (=> b!109949 d!30979))

(declare-fun d!30981 () Bool)

(assert (=> d!30981 (= (+!144 (getCurrentListMap!475 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360)) (getCurrentListMap!475 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) lt!56647 (zeroValue!2497 newMap!16) lt!56360 #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!56937 () Unit!3382)

(declare-fun choose!699 (array!4371 array!4373 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3241 V!3241 V!3241 Int) Unit!3382)

(assert (=> d!30981 (= lt!56937 (choose!699 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) lt!56647 (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) lt!56360 (defaultEntry!2626 newMap!16)))))

(assert (=> d!30981 (validMask!0 (mask!6794 newMap!16))))

(assert (=> d!30981 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!49 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) lt!56647 (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) lt!56360 (defaultEntry!2626 newMap!16)) lt!56937)))

(declare-fun bs!4539 () Bool)

(assert (= bs!4539 d!30981))

(assert (=> bs!4539 m!124333))

(declare-fun m!125023 () Bool)

(assert (=> bs!4539 m!125023))

(assert (=> bs!4539 m!124333))

(declare-fun m!125025 () Bool)

(assert (=> bs!4539 m!125025))

(assert (=> bs!4539 m!124579))

(declare-fun m!125027 () Bool)

(assert (=> bs!4539 m!125027))

(assert (=> b!109934 d!30981))

(declare-fun b!110338 () Bool)

(declare-fun e!71768 () Bool)

(declare-fun call!11766 () Bool)

(assert (=> b!110338 (= e!71768 (not call!11766))))

(declare-fun d!30983 () Bool)

(declare-fun e!71771 () Bool)

(assert (=> d!30983 e!71771))

(declare-fun c!19549 () Bool)

(declare-fun lt!56942 () SeekEntryResult!255)

(assert (=> d!30983 (= c!19549 ((_ is MissingZero!255) lt!56942))))

(assert (=> d!30983 (= lt!56942 (seekEntryOrOpen!0 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (_keys!4340 newMap!16) (mask!6794 newMap!16)))))

(declare-fun lt!56943 () Unit!3382)

(declare-fun choose!700 (array!4371 array!4373 (_ BitVec 32) (_ BitVec 32) V!3241 V!3241 (_ BitVec 64) Int) Unit!3382)

(assert (=> d!30983 (= lt!56943 (choose!700 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (defaultEntry!2626 newMap!16)))))

(assert (=> d!30983 (validMask!0 (mask!6794 newMap!16))))

(assert (=> d!30983 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!49 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (defaultEntry!2626 newMap!16)) lt!56943)))

(declare-fun b!110339 () Bool)

(declare-fun e!71770 () Bool)

(assert (=> b!110339 (= e!71770 ((_ is Undefined!255) lt!56942))))

(declare-fun b!110340 () Bool)

(assert (=> b!110340 (= e!71771 e!71770)))

(declare-fun c!19550 () Bool)

(assert (=> b!110340 (= c!19550 ((_ is MissingVacant!255) lt!56942))))

(declare-fun b!110341 () Bool)

(declare-fun res!54588 () Bool)

(declare-fun e!71769 () Bool)

(assert (=> b!110341 (=> (not res!54588) (not e!71769))))

(declare-fun call!11767 () Bool)

(assert (=> b!110341 (= res!54588 call!11767)))

(assert (=> b!110341 (= e!71770 e!71769)))

(declare-fun b!110342 () Bool)

(assert (=> b!110342 (= e!71771 e!71768)))

(declare-fun res!54586 () Bool)

(assert (=> b!110342 (= res!54586 call!11767)))

(assert (=> b!110342 (=> (not res!54586) (not e!71768))))

(declare-fun bm!11763 () Bool)

(assert (=> bm!11763 (= call!11767 (inRange!0 (ite c!19549 (index!3170 lt!56942) (index!3173 lt!56942)) (mask!6794 newMap!16)))))

(declare-fun bm!11764 () Bool)

(assert (=> bm!11764 (= call!11766 (arrayContainsKey!0 (_keys!4340 newMap!16) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!110343 () Bool)

(assert (=> b!110343 (= e!71769 (not call!11766))))

(declare-fun b!110344 () Bool)

(declare-fun res!54589 () Bool)

(assert (=> b!110344 (=> (not res!54589) (not e!71769))))

(assert (=> b!110344 (= res!54589 (= (select (arr!2072 (_keys!4340 newMap!16)) (index!3173 lt!56942)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!110344 (and (bvsge (index!3173 lt!56942) #b00000000000000000000000000000000) (bvslt (index!3173 lt!56942) (size!2329 (_keys!4340 newMap!16))))))

(declare-fun b!110345 () Bool)

(assert (=> b!110345 (and (bvsge (index!3170 lt!56942) #b00000000000000000000000000000000) (bvslt (index!3170 lt!56942) (size!2329 (_keys!4340 newMap!16))))))

(declare-fun res!54587 () Bool)

(assert (=> b!110345 (= res!54587 (= (select (arr!2072 (_keys!4340 newMap!16)) (index!3170 lt!56942)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!110345 (=> (not res!54587) (not e!71768))))

(assert (= (and d!30983 c!19549) b!110342))

(assert (= (and d!30983 (not c!19549)) b!110340))

(assert (= (and b!110342 res!54586) b!110345))

(assert (= (and b!110345 res!54587) b!110338))

(assert (= (and b!110340 c!19550) b!110341))

(assert (= (and b!110340 (not c!19550)) b!110339))

(assert (= (and b!110341 res!54588) b!110344))

(assert (= (and b!110344 res!54589) b!110343))

(assert (= (or b!110342 b!110341) bm!11763))

(assert (= (or b!110338 b!110343) bm!11764))

(assert (=> d!30983 m!124087))

(assert (=> d!30983 m!124417))

(assert (=> d!30983 m!124087))

(declare-fun m!125029 () Bool)

(assert (=> d!30983 m!125029))

(assert (=> d!30983 m!124579))

(declare-fun m!125031 () Bool)

(assert (=> b!110345 m!125031))

(assert (=> bm!11764 m!124087))

(assert (=> bm!11764 m!124403))

(declare-fun m!125033 () Bool)

(assert (=> bm!11763 m!125033))

(declare-fun m!125035 () Bool)

(assert (=> b!110344 m!125035))

(assert (=> bm!11692 d!30983))

(declare-fun d!30985 () Bool)

(declare-fun e!71773 () Bool)

(assert (=> d!30985 e!71773))

(declare-fun res!54590 () Bool)

(assert (=> d!30985 (=> res!54590 e!71773)))

(declare-fun lt!56946 () Bool)

(assert (=> d!30985 (= res!54590 (not lt!56946))))

(declare-fun lt!56947 () Bool)

(assert (=> d!30985 (= lt!56946 lt!56947)))

(declare-fun lt!56944 () Unit!3382)

(declare-fun e!71772 () Unit!3382)

(assert (=> d!30985 (= lt!56944 e!71772)))

(declare-fun c!19551 () Bool)

(assert (=> d!30985 (= c!19551 lt!56947)))

(assert (=> d!30985 (= lt!56947 (containsKey!162 (toList!789 lt!56483) (_1!1205 lt!56363)))))

(assert (=> d!30985 (= (contains!824 lt!56483 (_1!1205 lt!56363)) lt!56946)))

(declare-fun b!110346 () Bool)

(declare-fun lt!56945 () Unit!3382)

(assert (=> b!110346 (= e!71772 lt!56945)))

(assert (=> b!110346 (= lt!56945 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 lt!56483) (_1!1205 lt!56363)))))

(assert (=> b!110346 (isDefined!111 (getValueByKey!159 (toList!789 lt!56483) (_1!1205 lt!56363)))))

(declare-fun b!110347 () Bool)

(declare-fun Unit!3408 () Unit!3382)

(assert (=> b!110347 (= e!71772 Unit!3408)))

(declare-fun b!110348 () Bool)

(assert (=> b!110348 (= e!71773 (isDefined!111 (getValueByKey!159 (toList!789 lt!56483) (_1!1205 lt!56363))))))

(assert (= (and d!30985 c!19551) b!110346))

(assert (= (and d!30985 (not c!19551)) b!110347))

(assert (= (and d!30985 (not res!54590)) b!110348))

(declare-fun m!125037 () Bool)

(assert (=> d!30985 m!125037))

(declare-fun m!125039 () Bool)

(assert (=> b!110346 m!125039))

(assert (=> b!110346 m!124303))

(assert (=> b!110346 m!124303))

(declare-fun m!125041 () Bool)

(assert (=> b!110346 m!125041))

(assert (=> b!110348 m!124303))

(assert (=> b!110348 m!124303))

(assert (=> b!110348 m!125041))

(assert (=> d!30813 d!30985))

(declare-fun b!110352 () Bool)

(declare-fun e!71775 () Option!165)

(assert (=> b!110352 (= e!71775 None!163)))

(declare-fun b!110349 () Bool)

(declare-fun e!71774 () Option!165)

(assert (=> b!110349 (= e!71774 (Some!164 (_2!1205 (h!2204 lt!56482))))))

(declare-fun b!110351 () Bool)

(assert (=> b!110351 (= e!71775 (getValueByKey!159 (t!5738 lt!56482) (_1!1205 lt!56363)))))

(declare-fun d!30987 () Bool)

(declare-fun c!19552 () Bool)

(assert (=> d!30987 (= c!19552 (and ((_ is Cons!1605) lt!56482) (= (_1!1205 (h!2204 lt!56482)) (_1!1205 lt!56363))))))

(assert (=> d!30987 (= (getValueByKey!159 lt!56482 (_1!1205 lt!56363)) e!71774)))

(declare-fun b!110350 () Bool)

(assert (=> b!110350 (= e!71774 e!71775)))

(declare-fun c!19553 () Bool)

(assert (=> b!110350 (= c!19553 (and ((_ is Cons!1605) lt!56482) (not (= (_1!1205 (h!2204 lt!56482)) (_1!1205 lt!56363)))))))

(assert (= (and d!30987 c!19552) b!110349))

(assert (= (and d!30987 (not c!19552)) b!110350))

(assert (= (and b!110350 c!19553) b!110351))

(assert (= (and b!110350 (not c!19553)) b!110352))

(declare-fun m!125043 () Bool)

(assert (=> b!110351 m!125043))

(assert (=> d!30813 d!30987))

(declare-fun d!30989 () Bool)

(assert (=> d!30989 (= (getValueByKey!159 lt!56482 (_1!1205 lt!56363)) (Some!164 (_2!1205 lt!56363)))))

(declare-fun lt!56948 () Unit!3382)

(assert (=> d!30989 (= lt!56948 (choose!695 lt!56482 (_1!1205 lt!56363) (_2!1205 lt!56363)))))

(declare-fun e!71776 () Bool)

(assert (=> d!30989 e!71776))

(declare-fun res!54591 () Bool)

(assert (=> d!30989 (=> (not res!54591) (not e!71776))))

(assert (=> d!30989 (= res!54591 (isStrictlySorted!298 lt!56482))))

(assert (=> d!30989 (= (lemmaContainsTupThenGetReturnValue!75 lt!56482 (_1!1205 lt!56363) (_2!1205 lt!56363)) lt!56948)))

(declare-fun b!110353 () Bool)

(declare-fun res!54592 () Bool)

(assert (=> b!110353 (=> (not res!54592) (not e!71776))))

(assert (=> b!110353 (= res!54592 (containsKey!162 lt!56482 (_1!1205 lt!56363)))))

(declare-fun b!110354 () Bool)

(assert (=> b!110354 (= e!71776 (contains!827 lt!56482 (tuple2!2389 (_1!1205 lt!56363) (_2!1205 lt!56363))))))

(assert (= (and d!30989 res!54591) b!110353))

(assert (= (and b!110353 res!54592) b!110354))

(assert (=> d!30989 m!124297))

(declare-fun m!125045 () Bool)

(assert (=> d!30989 m!125045))

(declare-fun m!125047 () Bool)

(assert (=> d!30989 m!125047))

(declare-fun m!125049 () Bool)

(assert (=> b!110353 m!125049))

(declare-fun m!125051 () Bool)

(assert (=> b!110354 m!125051))

(assert (=> d!30813 d!30989))

(declare-fun b!110355 () Bool)

(declare-fun e!71779 () List!1609)

(assert (=> b!110355 (= e!71779 (insertStrictlySorted!78 (t!5738 (toList!789 lt!56369)) (_1!1205 lt!56363) (_2!1205 lt!56363)))))

(declare-fun b!110356 () Bool)

(declare-fun res!54594 () Bool)

(declare-fun e!71781 () Bool)

(assert (=> b!110356 (=> (not res!54594) (not e!71781))))

(declare-fun lt!56949 () List!1609)

(assert (=> b!110356 (= res!54594 (containsKey!162 lt!56949 (_1!1205 lt!56363)))))

(declare-fun b!110357 () Bool)

(declare-fun e!71780 () List!1609)

(declare-fun call!11769 () List!1609)

(assert (=> b!110357 (= e!71780 call!11769)))

(declare-fun bm!11765 () Bool)

(declare-fun call!11770 () List!1609)

(declare-fun call!11768 () List!1609)

(assert (=> bm!11765 (= call!11770 call!11768)))

(declare-fun bm!11766 () Bool)

(assert (=> bm!11766 (= call!11769 call!11770)))

(declare-fun b!110358 () Bool)

(assert (=> b!110358 (= e!71780 call!11769)))

(declare-fun bm!11767 () Bool)

(declare-fun c!19556 () Bool)

(assert (=> bm!11767 (= call!11768 ($colon$colon!82 e!71779 (ite c!19556 (h!2204 (toList!789 lt!56369)) (tuple2!2389 (_1!1205 lt!56363) (_2!1205 lt!56363)))))))

(declare-fun c!19557 () Bool)

(assert (=> bm!11767 (= c!19557 c!19556)))

(declare-fun b!110359 () Bool)

(declare-fun e!71778 () List!1609)

(assert (=> b!110359 (= e!71778 call!11770)))

(declare-fun d!30991 () Bool)

(assert (=> d!30991 e!71781))

(declare-fun res!54593 () Bool)

(assert (=> d!30991 (=> (not res!54593) (not e!71781))))

(assert (=> d!30991 (= res!54593 (isStrictlySorted!298 lt!56949))))

(declare-fun e!71777 () List!1609)

(assert (=> d!30991 (= lt!56949 e!71777)))

(assert (=> d!30991 (= c!19556 (and ((_ is Cons!1605) (toList!789 lt!56369)) (bvslt (_1!1205 (h!2204 (toList!789 lt!56369))) (_1!1205 lt!56363))))))

(assert (=> d!30991 (isStrictlySorted!298 (toList!789 lt!56369))))

(assert (=> d!30991 (= (insertStrictlySorted!78 (toList!789 lt!56369) (_1!1205 lt!56363) (_2!1205 lt!56363)) lt!56949)))

(declare-fun b!110360 () Bool)

(assert (=> b!110360 (= e!71777 call!11768)))

(declare-fun b!110361 () Bool)

(declare-fun c!19554 () Bool)

(assert (=> b!110361 (= c!19554 (and ((_ is Cons!1605) (toList!789 lt!56369)) (bvsgt (_1!1205 (h!2204 (toList!789 lt!56369))) (_1!1205 lt!56363))))))

(assert (=> b!110361 (= e!71778 e!71780)))

(declare-fun c!19555 () Bool)

(declare-fun b!110362 () Bool)

(assert (=> b!110362 (= e!71779 (ite c!19555 (t!5738 (toList!789 lt!56369)) (ite c!19554 (Cons!1605 (h!2204 (toList!789 lt!56369)) (t!5738 (toList!789 lt!56369))) Nil!1606)))))

(declare-fun b!110363 () Bool)

(assert (=> b!110363 (= e!71781 (contains!827 lt!56949 (tuple2!2389 (_1!1205 lt!56363) (_2!1205 lt!56363))))))

(declare-fun b!110364 () Bool)

(assert (=> b!110364 (= e!71777 e!71778)))

(assert (=> b!110364 (= c!19555 (and ((_ is Cons!1605) (toList!789 lt!56369)) (= (_1!1205 (h!2204 (toList!789 lt!56369))) (_1!1205 lt!56363))))))

(assert (= (and d!30991 c!19556) b!110360))

(assert (= (and d!30991 (not c!19556)) b!110364))

(assert (= (and b!110364 c!19555) b!110359))

(assert (= (and b!110364 (not c!19555)) b!110361))

(assert (= (and b!110361 c!19554) b!110357))

(assert (= (and b!110361 (not c!19554)) b!110358))

(assert (= (or b!110357 b!110358) bm!11766))

(assert (= (or b!110359 bm!11766) bm!11765))

(assert (= (or b!110360 bm!11765) bm!11767))

(assert (= (and bm!11767 c!19557) b!110355))

(assert (= (and bm!11767 (not c!19557)) b!110362))

(assert (= (and d!30991 res!54593) b!110356))

(assert (= (and b!110356 res!54594) b!110363))

(declare-fun m!125053 () Bool)

(assert (=> bm!11767 m!125053))

(declare-fun m!125055 () Bool)

(assert (=> b!110363 m!125055))

(declare-fun m!125057 () Bool)

(assert (=> b!110356 m!125057))

(declare-fun m!125059 () Bool)

(assert (=> d!30991 m!125059))

(declare-fun m!125061 () Bool)

(assert (=> d!30991 m!125061))

(declare-fun m!125063 () Bool)

(assert (=> b!110355 m!125063))

(assert (=> d!30813 d!30991))

(declare-fun b!110366 () Bool)

(declare-fun e!71785 () Bool)

(declare-fun e!71784 () Bool)

(assert (=> b!110366 (= e!71785 e!71784)))

(declare-fun c!19558 () Bool)

(assert (=> b!110366 (= c!19558 (validKeyInArray!0 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun call!11771 () Bool)

(declare-fun bm!11768 () Bool)

(assert (=> bm!11768 (= call!11771 (arrayNoDuplicates!0 (_keys!4340 (v!2930 (underlying!370 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!19558 (Cons!1606 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!19470 (Cons!1606 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) Nil!1607) Nil!1607)) (ite c!19470 (Cons!1606 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) Nil!1607) Nil!1607))))))

(declare-fun b!110367 () Bool)

(assert (=> b!110367 (= e!71784 call!11771)))

(declare-fun b!110368 () Bool)

(assert (=> b!110368 (= e!71784 call!11771)))

(declare-fun e!71783 () Bool)

(declare-fun b!110369 () Bool)

(assert (=> b!110369 (= e!71783 (contains!828 (ite c!19470 (Cons!1606 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) Nil!1607) Nil!1607) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun d!30993 () Bool)

(declare-fun res!54595 () Bool)

(declare-fun e!71782 () Bool)

(assert (=> d!30993 (=> res!54595 e!71782)))

(assert (=> d!30993 (= res!54595 (bvsge (bvadd from!355 #b00000000000000000000000000000001) (size!2329 (_keys!4340 (v!2930 (underlying!370 thiss!992))))))))

(assert (=> d!30993 (= (arrayNoDuplicates!0 (_keys!4340 (v!2930 (underlying!370 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!19470 (Cons!1606 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) Nil!1607) Nil!1607)) e!71782)))

(declare-fun b!110365 () Bool)

(assert (=> b!110365 (= e!71782 e!71785)))

(declare-fun res!54596 () Bool)

(assert (=> b!110365 (=> (not res!54596) (not e!71785))))

(assert (=> b!110365 (= res!54596 (not e!71783))))

(declare-fun res!54597 () Bool)

(assert (=> b!110365 (=> (not res!54597) (not e!71783))))

(assert (=> b!110365 (= res!54597 (validKeyInArray!0 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!30993 (not res!54595)) b!110365))

(assert (= (and b!110365 res!54597) b!110369))

(assert (= (and b!110365 res!54596) b!110366))

(assert (= (and b!110366 c!19558) b!110368))

(assert (= (and b!110366 (not c!19558)) b!110367))

(assert (= (or b!110368 b!110367) bm!11768))

(declare-fun m!125065 () Bool)

(assert (=> b!110366 m!125065))

(assert (=> b!110366 m!125065))

(declare-fun m!125067 () Bool)

(assert (=> b!110366 m!125067))

(assert (=> bm!11768 m!125065))

(declare-fun m!125069 () Bool)

(assert (=> bm!11768 m!125069))

(assert (=> b!110369 m!125065))

(assert (=> b!110369 m!125065))

(declare-fun m!125071 () Bool)

(assert (=> b!110369 m!125071))

(assert (=> b!110365 m!125065))

(assert (=> b!110365 m!125065))

(assert (=> b!110365 m!125067))

(assert (=> bm!11718 d!30993))

(declare-fun d!30995 () Bool)

(declare-fun res!54598 () Bool)

(declare-fun e!71786 () Bool)

(assert (=> d!30995 (=> (not res!54598) (not e!71786))))

(assert (=> d!30995 (= res!54598 (simpleValid!76 (_2!1204 lt!56628)))))

(assert (=> d!30995 (= (valid!434 (_2!1204 lt!56628)) e!71786)))

(declare-fun b!110370 () Bool)

(declare-fun res!54599 () Bool)

(assert (=> b!110370 (=> (not res!54599) (not e!71786))))

(assert (=> b!110370 (= res!54599 (= (arrayCountValidKeys!0 (_keys!4340 (_2!1204 lt!56628)) #b00000000000000000000000000000000 (size!2329 (_keys!4340 (_2!1204 lt!56628)))) (_size!507 (_2!1204 lt!56628))))))

(declare-fun b!110371 () Bool)

(declare-fun res!54600 () Bool)

(assert (=> b!110371 (=> (not res!54600) (not e!71786))))

(assert (=> b!110371 (= res!54600 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4340 (_2!1204 lt!56628)) (mask!6794 (_2!1204 lt!56628))))))

(declare-fun b!110372 () Bool)

(assert (=> b!110372 (= e!71786 (arrayNoDuplicates!0 (_keys!4340 (_2!1204 lt!56628)) #b00000000000000000000000000000000 Nil!1607))))

(assert (= (and d!30995 res!54598) b!110370))

(assert (= (and b!110370 res!54599) b!110371))

(assert (= (and b!110371 res!54600) b!110372))

(declare-fun m!125073 () Bool)

(assert (=> d!30995 m!125073))

(declare-fun m!125075 () Bool)

(assert (=> b!110370 m!125075))

(declare-fun m!125077 () Bool)

(assert (=> b!110371 m!125077))

(declare-fun m!125079 () Bool)

(assert (=> b!110372 m!125079))

(assert (=> d!30829 d!30995))

(assert (=> d!30829 d!30851))

(declare-fun d!30997 () Bool)

(declare-fun e!71788 () Bool)

(assert (=> d!30997 e!71788))

(declare-fun res!54601 () Bool)

(assert (=> d!30997 (=> res!54601 e!71788)))

(declare-fun lt!56952 () Bool)

(assert (=> d!30997 (= res!54601 (not lt!56952))))

(declare-fun lt!56953 () Bool)

(assert (=> d!30997 (= lt!56952 lt!56953)))

(declare-fun lt!56950 () Unit!3382)

(declare-fun e!71787 () Unit!3382)

(assert (=> d!30997 (= lt!56950 e!71787)))

(declare-fun c!19559 () Bool)

(assert (=> d!30997 (= c!19559 lt!56953)))

(assert (=> d!30997 (= lt!56953 (containsKey!162 (toList!789 lt!56487) (_1!1205 lt!56370)))))

(assert (=> d!30997 (= (contains!824 lt!56487 (_1!1205 lt!56370)) lt!56952)))

(declare-fun b!110373 () Bool)

(declare-fun lt!56951 () Unit!3382)

(assert (=> b!110373 (= e!71787 lt!56951)))

(assert (=> b!110373 (= lt!56951 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 lt!56487) (_1!1205 lt!56370)))))

(assert (=> b!110373 (isDefined!111 (getValueByKey!159 (toList!789 lt!56487) (_1!1205 lt!56370)))))

(declare-fun b!110374 () Bool)

(declare-fun Unit!3409 () Unit!3382)

(assert (=> b!110374 (= e!71787 Unit!3409)))

(declare-fun b!110375 () Bool)

(assert (=> b!110375 (= e!71788 (isDefined!111 (getValueByKey!159 (toList!789 lt!56487) (_1!1205 lt!56370))))))

(assert (= (and d!30997 c!19559) b!110373))

(assert (= (and d!30997 (not c!19559)) b!110374))

(assert (= (and d!30997 (not res!54601)) b!110375))

(declare-fun m!125081 () Bool)

(assert (=> d!30997 m!125081))

(declare-fun m!125083 () Bool)

(assert (=> b!110373 m!125083))

(assert (=> b!110373 m!124315))

(assert (=> b!110373 m!124315))

(declare-fun m!125085 () Bool)

(assert (=> b!110373 m!125085))

(assert (=> b!110375 m!124315))

(assert (=> b!110375 m!124315))

(assert (=> b!110375 m!125085))

(assert (=> d!30815 d!30997))

(declare-fun b!110379 () Bool)

(declare-fun e!71790 () Option!165)

(assert (=> b!110379 (= e!71790 None!163)))

(declare-fun b!110376 () Bool)

(declare-fun e!71789 () Option!165)

(assert (=> b!110376 (= e!71789 (Some!164 (_2!1205 (h!2204 lt!56486))))))

(declare-fun b!110378 () Bool)

(assert (=> b!110378 (= e!71790 (getValueByKey!159 (t!5738 lt!56486) (_1!1205 lt!56370)))))

(declare-fun d!30999 () Bool)

(declare-fun c!19560 () Bool)

(assert (=> d!30999 (= c!19560 (and ((_ is Cons!1605) lt!56486) (= (_1!1205 (h!2204 lt!56486)) (_1!1205 lt!56370))))))

(assert (=> d!30999 (= (getValueByKey!159 lt!56486 (_1!1205 lt!56370)) e!71789)))

(declare-fun b!110377 () Bool)

(assert (=> b!110377 (= e!71789 e!71790)))

(declare-fun c!19561 () Bool)

(assert (=> b!110377 (= c!19561 (and ((_ is Cons!1605) lt!56486) (not (= (_1!1205 (h!2204 lt!56486)) (_1!1205 lt!56370)))))))

(assert (= (and d!30999 c!19560) b!110376))

(assert (= (and d!30999 (not c!19560)) b!110377))

(assert (= (and b!110377 c!19561) b!110378))

(assert (= (and b!110377 (not c!19561)) b!110379))

(declare-fun m!125087 () Bool)

(assert (=> b!110378 m!125087))

(assert (=> d!30815 d!30999))

(declare-fun d!31001 () Bool)

(assert (=> d!31001 (= (getValueByKey!159 lt!56486 (_1!1205 lt!56370)) (Some!164 (_2!1205 lt!56370)))))

(declare-fun lt!56954 () Unit!3382)

(assert (=> d!31001 (= lt!56954 (choose!695 lt!56486 (_1!1205 lt!56370) (_2!1205 lt!56370)))))

(declare-fun e!71791 () Bool)

(assert (=> d!31001 e!71791))

(declare-fun res!54602 () Bool)

(assert (=> d!31001 (=> (not res!54602) (not e!71791))))

(assert (=> d!31001 (= res!54602 (isStrictlySorted!298 lt!56486))))

(assert (=> d!31001 (= (lemmaContainsTupThenGetReturnValue!75 lt!56486 (_1!1205 lt!56370) (_2!1205 lt!56370)) lt!56954)))

(declare-fun b!110380 () Bool)

(declare-fun res!54603 () Bool)

(assert (=> b!110380 (=> (not res!54603) (not e!71791))))

(assert (=> b!110380 (= res!54603 (containsKey!162 lt!56486 (_1!1205 lt!56370)))))

(declare-fun b!110381 () Bool)

(assert (=> b!110381 (= e!71791 (contains!827 lt!56486 (tuple2!2389 (_1!1205 lt!56370) (_2!1205 lt!56370))))))

(assert (= (and d!31001 res!54602) b!110380))

(assert (= (and b!110380 res!54603) b!110381))

(assert (=> d!31001 m!124309))

(declare-fun m!125089 () Bool)

(assert (=> d!31001 m!125089))

(declare-fun m!125091 () Bool)

(assert (=> d!31001 m!125091))

(declare-fun m!125093 () Bool)

(assert (=> b!110380 m!125093))

(declare-fun m!125095 () Bool)

(assert (=> b!110381 m!125095))

(assert (=> d!30815 d!31001))

(declare-fun b!110382 () Bool)

(declare-fun e!71794 () List!1609)

(assert (=> b!110382 (= e!71794 (insertStrictlySorted!78 (t!5738 (toList!789 lt!56369)) (_1!1205 lt!56370) (_2!1205 lt!56370)))))

(declare-fun b!110383 () Bool)

(declare-fun res!54605 () Bool)

(declare-fun e!71796 () Bool)

(assert (=> b!110383 (=> (not res!54605) (not e!71796))))

(declare-fun lt!56955 () List!1609)

(assert (=> b!110383 (= res!54605 (containsKey!162 lt!56955 (_1!1205 lt!56370)))))

(declare-fun b!110384 () Bool)

(declare-fun e!71795 () List!1609)

(declare-fun call!11773 () List!1609)

(assert (=> b!110384 (= e!71795 call!11773)))

(declare-fun bm!11769 () Bool)

(declare-fun call!11774 () List!1609)

(declare-fun call!11772 () List!1609)

(assert (=> bm!11769 (= call!11774 call!11772)))

(declare-fun bm!11770 () Bool)

(assert (=> bm!11770 (= call!11773 call!11774)))

(declare-fun b!110385 () Bool)

(assert (=> b!110385 (= e!71795 call!11773)))

(declare-fun c!19564 () Bool)

(declare-fun bm!11771 () Bool)

(assert (=> bm!11771 (= call!11772 ($colon$colon!82 e!71794 (ite c!19564 (h!2204 (toList!789 lt!56369)) (tuple2!2389 (_1!1205 lt!56370) (_2!1205 lt!56370)))))))

(declare-fun c!19565 () Bool)

(assert (=> bm!11771 (= c!19565 c!19564)))

(declare-fun b!110386 () Bool)

(declare-fun e!71793 () List!1609)

(assert (=> b!110386 (= e!71793 call!11774)))

(declare-fun d!31003 () Bool)

(assert (=> d!31003 e!71796))

(declare-fun res!54604 () Bool)

(assert (=> d!31003 (=> (not res!54604) (not e!71796))))

(assert (=> d!31003 (= res!54604 (isStrictlySorted!298 lt!56955))))

(declare-fun e!71792 () List!1609)

(assert (=> d!31003 (= lt!56955 e!71792)))

(assert (=> d!31003 (= c!19564 (and ((_ is Cons!1605) (toList!789 lt!56369)) (bvslt (_1!1205 (h!2204 (toList!789 lt!56369))) (_1!1205 lt!56370))))))

(assert (=> d!31003 (isStrictlySorted!298 (toList!789 lt!56369))))

(assert (=> d!31003 (= (insertStrictlySorted!78 (toList!789 lt!56369) (_1!1205 lt!56370) (_2!1205 lt!56370)) lt!56955)))

(declare-fun b!110387 () Bool)

(assert (=> b!110387 (= e!71792 call!11772)))

(declare-fun b!110388 () Bool)

(declare-fun c!19562 () Bool)

(assert (=> b!110388 (= c!19562 (and ((_ is Cons!1605) (toList!789 lt!56369)) (bvsgt (_1!1205 (h!2204 (toList!789 lt!56369))) (_1!1205 lt!56370))))))

(assert (=> b!110388 (= e!71793 e!71795)))

(declare-fun b!110389 () Bool)

(declare-fun c!19563 () Bool)

(assert (=> b!110389 (= e!71794 (ite c!19563 (t!5738 (toList!789 lt!56369)) (ite c!19562 (Cons!1605 (h!2204 (toList!789 lt!56369)) (t!5738 (toList!789 lt!56369))) Nil!1606)))))

(declare-fun b!110390 () Bool)

(assert (=> b!110390 (= e!71796 (contains!827 lt!56955 (tuple2!2389 (_1!1205 lt!56370) (_2!1205 lt!56370))))))

(declare-fun b!110391 () Bool)

(assert (=> b!110391 (= e!71792 e!71793)))

(assert (=> b!110391 (= c!19563 (and ((_ is Cons!1605) (toList!789 lt!56369)) (= (_1!1205 (h!2204 (toList!789 lt!56369))) (_1!1205 lt!56370))))))

(assert (= (and d!31003 c!19564) b!110387))

(assert (= (and d!31003 (not c!19564)) b!110391))

(assert (= (and b!110391 c!19563) b!110386))

(assert (= (and b!110391 (not c!19563)) b!110388))

(assert (= (and b!110388 c!19562) b!110384))

(assert (= (and b!110388 (not c!19562)) b!110385))

(assert (= (or b!110384 b!110385) bm!11770))

(assert (= (or b!110386 bm!11770) bm!11769))

(assert (= (or b!110387 bm!11769) bm!11771))

(assert (= (and bm!11771 c!19565) b!110382))

(assert (= (and bm!11771 (not c!19565)) b!110389))

(assert (= (and d!31003 res!54604) b!110383))

(assert (= (and b!110383 res!54605) b!110390))

(declare-fun m!125097 () Bool)

(assert (=> bm!11771 m!125097))

(declare-fun m!125099 () Bool)

(assert (=> b!110390 m!125099))

(declare-fun m!125101 () Bool)

(assert (=> b!110383 m!125101))

(declare-fun m!125103 () Bool)

(assert (=> d!31003 m!125103))

(assert (=> d!31003 m!125061))

(declare-fun m!125105 () Bool)

(assert (=> b!110382 m!125105))

(assert (=> d!30815 d!31003))

(assert (=> b!109985 d!30855))

(declare-fun b!110392 () Bool)

(declare-fun res!54606 () Bool)

(declare-fun e!71807 () Bool)

(assert (=> b!110392 (=> (not res!54606) (not e!71807))))

(declare-fun e!71803 () Bool)

(assert (=> b!110392 (= res!54606 e!71803)))

(declare-fun res!54609 () Bool)

(assert (=> b!110392 (=> res!54609 e!71803)))

(declare-fun e!71808 () Bool)

(assert (=> b!110392 (= res!54609 (not e!71808))))

(declare-fun res!54613 () Bool)

(assert (=> b!110392 (=> (not res!54613) (not e!71808))))

(assert (=> b!110392 (= res!54613 (bvslt #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))))))

(declare-fun bm!11772 () Bool)

(declare-fun call!11778 () Bool)

(declare-fun lt!56966 () ListLongMap!1547)

(assert (=> bm!11772 (= call!11778 (contains!824 lt!56966 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110393 () Bool)

(declare-fun e!71800 () Unit!3382)

(declare-fun Unit!3410 () Unit!3382)

(assert (=> b!110393 (= e!71800 Unit!3410)))

(declare-fun e!71798 () ListLongMap!1547)

(declare-fun b!110394 () Bool)

(declare-fun call!11781 () ListLongMap!1547)

(assert (=> b!110394 (= e!71798 (+!144 call!11781 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16)))))))

(declare-fun b!110395 () Bool)

(declare-fun e!71802 () Bool)

(assert (=> b!110395 (= e!71803 e!71802)))

(declare-fun res!54607 () Bool)

(assert (=> b!110395 (=> (not res!54607) (not e!71802))))

(assert (=> b!110395 (= res!54607 (contains!824 lt!56966 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!110395 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))))))

(declare-fun b!110396 () Bool)

(declare-fun lt!56977 () Unit!3382)

(assert (=> b!110396 (= e!71800 lt!56977)))

(declare-fun lt!56967 () ListLongMap!1547)

(assert (=> b!110396 (= lt!56967 (getCurrentListMapNoExtraKeys!111 (_keys!4340 newMap!16) (ite c!19458 (_values!2609 newMap!16) (array!4374 (store (arr!2073 (_values!2609 newMap!16)) (index!3171 lt!56646) (ValueCellFull!1004 lt!56360)) (size!2330 (_values!2609 newMap!16)))) (mask!6794 newMap!16) (ite c!19458 (ite c!19454 lt!56636 lt!56647) (extraKeys!2423 newMap!16)) (ite (and c!19458 c!19454) lt!56360 (zeroValue!2497 newMap!16)) (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!56974 () (_ BitVec 64))

(assert (=> b!110396 (= lt!56974 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56969 () (_ BitVec 64))

(assert (=> b!110396 (= lt!56969 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56970 () Unit!3382)

(assert (=> b!110396 (= lt!56970 (addStillContains!76 lt!56967 lt!56974 (ite (and c!19458 c!19454) lt!56360 (zeroValue!2497 newMap!16)) lt!56969))))

(assert (=> b!110396 (contains!824 (+!144 lt!56967 (tuple2!2389 lt!56974 (ite (and c!19458 c!19454) lt!56360 (zeroValue!2497 newMap!16)))) lt!56969)))

(declare-fun lt!56972 () Unit!3382)

(assert (=> b!110396 (= lt!56972 lt!56970)))

(declare-fun lt!56957 () ListLongMap!1547)

(assert (=> b!110396 (= lt!56957 (getCurrentListMapNoExtraKeys!111 (_keys!4340 newMap!16) (ite c!19458 (_values!2609 newMap!16) (array!4374 (store (arr!2073 (_values!2609 newMap!16)) (index!3171 lt!56646) (ValueCellFull!1004 lt!56360)) (size!2330 (_values!2609 newMap!16)))) (mask!6794 newMap!16) (ite c!19458 (ite c!19454 lt!56636 lt!56647) (extraKeys!2423 newMap!16)) (ite (and c!19458 c!19454) lt!56360 (zeroValue!2497 newMap!16)) (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!56962 () (_ BitVec 64))

(assert (=> b!110396 (= lt!56962 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56959 () (_ BitVec 64))

(assert (=> b!110396 (= lt!56959 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56961 () Unit!3382)

(assert (=> b!110396 (= lt!56961 (addApplyDifferent!76 lt!56957 lt!56962 (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16)) lt!56959))))

(assert (=> b!110396 (= (apply!100 (+!144 lt!56957 (tuple2!2389 lt!56962 (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16)))) lt!56959) (apply!100 lt!56957 lt!56959))))

(declare-fun lt!56956 () Unit!3382)

(assert (=> b!110396 (= lt!56956 lt!56961)))

(declare-fun lt!56965 () ListLongMap!1547)

(assert (=> b!110396 (= lt!56965 (getCurrentListMapNoExtraKeys!111 (_keys!4340 newMap!16) (ite c!19458 (_values!2609 newMap!16) (array!4374 (store (arr!2073 (_values!2609 newMap!16)) (index!3171 lt!56646) (ValueCellFull!1004 lt!56360)) (size!2330 (_values!2609 newMap!16)))) (mask!6794 newMap!16) (ite c!19458 (ite c!19454 lt!56636 lt!56647) (extraKeys!2423 newMap!16)) (ite (and c!19458 c!19454) lt!56360 (zeroValue!2497 newMap!16)) (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!56976 () (_ BitVec 64))

(assert (=> b!110396 (= lt!56976 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56971 () (_ BitVec 64))

(assert (=> b!110396 (= lt!56971 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56960 () Unit!3382)

(assert (=> b!110396 (= lt!56960 (addApplyDifferent!76 lt!56965 lt!56976 (ite (and c!19458 c!19454) lt!56360 (zeroValue!2497 newMap!16)) lt!56971))))

(assert (=> b!110396 (= (apply!100 (+!144 lt!56965 (tuple2!2389 lt!56976 (ite (and c!19458 c!19454) lt!56360 (zeroValue!2497 newMap!16)))) lt!56971) (apply!100 lt!56965 lt!56971))))

(declare-fun lt!56968 () Unit!3382)

(assert (=> b!110396 (= lt!56968 lt!56960)))

(declare-fun lt!56975 () ListLongMap!1547)

(assert (=> b!110396 (= lt!56975 (getCurrentListMapNoExtraKeys!111 (_keys!4340 newMap!16) (ite c!19458 (_values!2609 newMap!16) (array!4374 (store (arr!2073 (_values!2609 newMap!16)) (index!3171 lt!56646) (ValueCellFull!1004 lt!56360)) (size!2330 (_values!2609 newMap!16)))) (mask!6794 newMap!16) (ite c!19458 (ite c!19454 lt!56636 lt!56647) (extraKeys!2423 newMap!16)) (ite (and c!19458 c!19454) lt!56360 (zeroValue!2497 newMap!16)) (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!56964 () (_ BitVec 64))

(assert (=> b!110396 (= lt!56964 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56958 () (_ BitVec 64))

(assert (=> b!110396 (= lt!56958 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!110396 (= lt!56977 (addApplyDifferent!76 lt!56975 lt!56964 (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16)) lt!56958))))

(assert (=> b!110396 (= (apply!100 (+!144 lt!56975 (tuple2!2389 lt!56964 (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16)))) lt!56958) (apply!100 lt!56975 lt!56958))))

(declare-fun d!31005 () Bool)

(assert (=> d!31005 e!71807))

(declare-fun res!54611 () Bool)

(assert (=> d!31005 (=> (not res!54611) (not e!71807))))

(assert (=> d!31005 (= res!54611 (or (bvsge #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))))))))

(declare-fun lt!56973 () ListLongMap!1547)

(assert (=> d!31005 (= lt!56966 lt!56973)))

(declare-fun lt!56963 () Unit!3382)

(assert (=> d!31005 (= lt!56963 e!71800)))

(declare-fun c!19571 () Bool)

(declare-fun e!71801 () Bool)

(assert (=> d!31005 (= c!19571 e!71801)))

(declare-fun res!54608 () Bool)

(assert (=> d!31005 (=> (not res!54608) (not e!71801))))

(assert (=> d!31005 (= res!54608 (bvslt #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))))))

(assert (=> d!31005 (= lt!56973 e!71798)))

(declare-fun c!19568 () Bool)

(assert (=> d!31005 (= c!19568 (and (not (= (bvand (ite c!19458 (ite c!19454 lt!56636 lt!56647) (extraKeys!2423 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!19458 (ite c!19454 lt!56636 lt!56647) (extraKeys!2423 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!31005 (validMask!0 (mask!6794 newMap!16))))

(assert (=> d!31005 (= (getCurrentListMap!475 (_keys!4340 newMap!16) (ite c!19458 (_values!2609 newMap!16) (array!4374 (store (arr!2073 (_values!2609 newMap!16)) (index!3171 lt!56646) (ValueCellFull!1004 lt!56360)) (size!2330 (_values!2609 newMap!16)))) (mask!6794 newMap!16) (ite c!19458 (ite c!19454 lt!56636 lt!56647) (extraKeys!2423 newMap!16)) (ite (and c!19458 c!19454) lt!56360 (zeroValue!2497 newMap!16)) (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) lt!56966)))

(declare-fun bm!11773 () Bool)

(declare-fun call!11779 () ListLongMap!1547)

(declare-fun call!11776 () ListLongMap!1547)

(assert (=> bm!11773 (= call!11779 call!11776)))

(declare-fun b!110397 () Bool)

(declare-fun e!71806 () ListLongMap!1547)

(declare-fun call!11777 () ListLongMap!1547)

(assert (=> b!110397 (= e!71806 call!11777)))

(declare-fun b!110398 () Bool)

(declare-fun e!71805 () Bool)

(declare-fun call!11780 () Bool)

(assert (=> b!110398 (= e!71805 (not call!11780))))

(declare-fun c!19567 () Bool)

(declare-fun b!110399 () Bool)

(assert (=> b!110399 (= c!19567 (and (not (= (bvand (ite c!19458 (ite c!19454 lt!56636 lt!56647) (extraKeys!2423 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!19458 (ite c!19454 lt!56636 lt!56647) (extraKeys!2423 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!71809 () ListLongMap!1547)

(assert (=> b!110399 (= e!71806 e!71809)))

(declare-fun b!110400 () Bool)

(declare-fun e!71799 () Bool)

(assert (=> b!110400 (= e!71799 (not call!11778))))

(declare-fun bm!11774 () Bool)

(assert (=> bm!11774 (= call!11780 (contains!824 lt!56966 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110401 () Bool)

(declare-fun e!71797 () Bool)

(assert (=> b!110401 (= e!71799 e!71797)))

(declare-fun res!54610 () Bool)

(assert (=> b!110401 (= res!54610 call!11778)))

(assert (=> b!110401 (=> (not res!54610) (not e!71797))))

(declare-fun b!110402 () Bool)

(assert (=> b!110402 (= e!71802 (= (apply!100 lt!56966 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)) (get!1353 (select (arr!2073 (ite c!19458 (_values!2609 newMap!16) (array!4374 (store (arr!2073 (_values!2609 newMap!16)) (index!3171 lt!56646) (ValueCellFull!1004 lt!56360)) (size!2330 (_values!2609 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!390 (defaultEntry!2626 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!110402 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2330 (ite c!19458 (_values!2609 newMap!16) (array!4374 (store (arr!2073 (_values!2609 newMap!16)) (index!3171 lt!56646) (ValueCellFull!1004 lt!56360)) (size!2330 (_values!2609 newMap!16)))))))))

(assert (=> b!110402 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))))))

(declare-fun c!19566 () Bool)

(declare-fun bm!11775 () Bool)

(declare-fun call!11775 () ListLongMap!1547)

(assert (=> bm!11775 (= call!11781 (+!144 (ite c!19568 call!11776 (ite c!19566 call!11779 call!11775)) (ite (or c!19568 c!19566) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!19458 c!19454) lt!56360 (zeroValue!2497 newMap!16))) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16))))))))

(declare-fun e!71804 () Bool)

(declare-fun b!110403 () Bool)

(assert (=> b!110403 (= e!71804 (= (apply!100 lt!56966 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!19458 c!19454) lt!56360 (zeroValue!2497 newMap!16))))))

(declare-fun b!110404 () Bool)

(assert (=> b!110404 (= e!71807 e!71799)))

(declare-fun c!19570 () Bool)

(assert (=> b!110404 (= c!19570 (not (= (bvand (ite c!19458 (ite c!19454 lt!56636 lt!56647) (extraKeys!2423 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11776 () Bool)

(assert (=> bm!11776 (= call!11777 call!11781)))

(declare-fun b!110405 () Bool)

(declare-fun res!54612 () Bool)

(assert (=> b!110405 (=> (not res!54612) (not e!71807))))

(assert (=> b!110405 (= res!54612 e!71805)))

(declare-fun c!19569 () Bool)

(assert (=> b!110405 (= c!19569 (not (= (bvand (ite c!19458 (ite c!19454 lt!56636 lt!56647) (extraKeys!2423 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!110406 () Bool)

(assert (=> b!110406 (= e!71809 call!11775)))

(declare-fun bm!11777 () Bool)

(assert (=> bm!11777 (= call!11775 call!11779)))

(declare-fun b!110407 () Bool)

(assert (=> b!110407 (= e!71809 call!11777)))

(declare-fun b!110408 () Bool)

(assert (=> b!110408 (= e!71801 (validKeyInArray!0 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!110409 () Bool)

(assert (=> b!110409 (= e!71805 e!71804)))

(declare-fun res!54614 () Bool)

(assert (=> b!110409 (= res!54614 call!11780)))

(assert (=> b!110409 (=> (not res!54614) (not e!71804))))

(declare-fun b!110410 () Bool)

(assert (=> b!110410 (= e!71797 (= (apply!100 lt!56966 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16))))))

(declare-fun b!110411 () Bool)

(assert (=> b!110411 (= e!71808 (validKeyInArray!0 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!110412 () Bool)

(assert (=> b!110412 (= e!71798 e!71806)))

(assert (=> b!110412 (= c!19566 (and (not (= (bvand (ite c!19458 (ite c!19454 lt!56636 lt!56647) (extraKeys!2423 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!19458 (ite c!19454 lt!56636 lt!56647) (extraKeys!2423 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11778 () Bool)

(assert (=> bm!11778 (= call!11776 (getCurrentListMapNoExtraKeys!111 (_keys!4340 newMap!16) (ite c!19458 (_values!2609 newMap!16) (array!4374 (store (arr!2073 (_values!2609 newMap!16)) (index!3171 lt!56646) (ValueCellFull!1004 lt!56360)) (size!2330 (_values!2609 newMap!16)))) (mask!6794 newMap!16) (ite c!19458 (ite c!19454 lt!56636 lt!56647) (extraKeys!2423 newMap!16)) (ite (and c!19458 c!19454) lt!56360 (zeroValue!2497 newMap!16)) (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(assert (= (and d!31005 c!19568) b!110394))

(assert (= (and d!31005 (not c!19568)) b!110412))

(assert (= (and b!110412 c!19566) b!110397))

(assert (= (and b!110412 (not c!19566)) b!110399))

(assert (= (and b!110399 c!19567) b!110407))

(assert (= (and b!110399 (not c!19567)) b!110406))

(assert (= (or b!110407 b!110406) bm!11777))

(assert (= (or b!110397 bm!11777) bm!11773))

(assert (= (or b!110397 b!110407) bm!11776))

(assert (= (or b!110394 bm!11773) bm!11778))

(assert (= (or b!110394 bm!11776) bm!11775))

(assert (= (and d!31005 res!54608) b!110408))

(assert (= (and d!31005 c!19571) b!110396))

(assert (= (and d!31005 (not c!19571)) b!110393))

(assert (= (and d!31005 res!54611) b!110392))

(assert (= (and b!110392 res!54613) b!110411))

(assert (= (and b!110392 (not res!54609)) b!110395))

(assert (= (and b!110395 res!54607) b!110402))

(assert (= (and b!110392 res!54606) b!110405))

(assert (= (and b!110405 c!19569) b!110409))

(assert (= (and b!110405 (not c!19569)) b!110398))

(assert (= (and b!110409 res!54614) b!110403))

(assert (= (or b!110409 b!110398) bm!11774))

(assert (= (and b!110405 res!54612) b!110404))

(assert (= (and b!110404 c!19570) b!110401))

(assert (= (and b!110404 (not c!19570)) b!110400))

(assert (= (and b!110401 res!54610) b!110410))

(assert (= (or b!110401 b!110400) bm!11772))

(declare-fun b_lambda!4941 () Bool)

(assert (=> (not b_lambda!4941) (not b!110402)))

(assert (=> b!110402 t!5751))

(declare-fun b_and!6797 () Bool)

(assert (= b_and!6793 (and (=> t!5751 result!3533) b_and!6797)))

(assert (=> b!110402 t!5753))

(declare-fun b_and!6799 () Bool)

(assert (= b_and!6795 (and (=> t!5753 result!3535) b_and!6799)))

(assert (=> b!110411 m!124605))

(assert (=> b!110411 m!124605))

(assert (=> b!110411 m!124607))

(declare-fun m!125107 () Bool)

(assert (=> b!110396 m!125107))

(declare-fun m!125109 () Bool)

(assert (=> b!110396 m!125109))

(declare-fun m!125111 () Bool)

(assert (=> b!110396 m!125111))

(declare-fun m!125113 () Bool)

(assert (=> b!110396 m!125113))

(declare-fun m!125115 () Bool)

(assert (=> b!110396 m!125115))

(declare-fun m!125117 () Bool)

(assert (=> b!110396 m!125117))

(declare-fun m!125119 () Bool)

(assert (=> b!110396 m!125119))

(declare-fun m!125121 () Bool)

(assert (=> b!110396 m!125121))

(declare-fun m!125123 () Bool)

(assert (=> b!110396 m!125123))

(declare-fun m!125125 () Bool)

(assert (=> b!110396 m!125125))

(declare-fun m!125127 () Bool)

(assert (=> b!110396 m!125127))

(assert (=> b!110396 m!125115))

(assert (=> b!110396 m!125119))

(declare-fun m!125129 () Bool)

(assert (=> b!110396 m!125129))

(assert (=> b!110396 m!124605))

(declare-fun m!125131 () Bool)

(assert (=> b!110396 m!125131))

(assert (=> b!110396 m!125125))

(declare-fun m!125133 () Bool)

(assert (=> b!110396 m!125133))

(declare-fun m!125135 () Bool)

(assert (=> b!110396 m!125135))

(assert (=> b!110396 m!125133))

(declare-fun m!125137 () Bool)

(assert (=> b!110396 m!125137))

(assert (=> b!110408 m!124605))

(assert (=> b!110408 m!124605))

(assert (=> b!110408 m!124607))

(declare-fun m!125139 () Bool)

(assert (=> bm!11774 m!125139))

(assert (=> bm!11778 m!125131))

(assert (=> d!31005 m!124579))

(declare-fun m!125141 () Bool)

(assert (=> bm!11775 m!125141))

(declare-fun m!125143 () Bool)

(assert (=> b!110403 m!125143))

(declare-fun m!125145 () Bool)

(assert (=> bm!11772 m!125145))

(declare-fun m!125147 () Bool)

(assert (=> b!110410 m!125147))

(assert (=> b!110402 m!124605))

(declare-fun m!125149 () Bool)

(assert (=> b!110402 m!125149))

(assert (=> b!110402 m!124605))

(declare-fun m!125151 () Bool)

(assert (=> b!110402 m!125151))

(assert (=> b!110402 m!125151))

(assert (=> b!110402 m!124767))

(declare-fun m!125153 () Bool)

(assert (=> b!110402 m!125153))

(assert (=> b!110402 m!124767))

(declare-fun m!125155 () Bool)

(assert (=> b!110394 m!125155))

(assert (=> b!110395 m!124605))

(assert (=> b!110395 m!124605))

(declare-fun m!125157 () Bool)

(assert (=> b!110395 m!125157))

(assert (=> bm!11706 d!31005))

(declare-fun d!31007 () Bool)

(assert (=> d!31007 (= (+!144 (getCurrentListMap!475 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360)) (getCurrentListMap!475 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) lt!56636 lt!56360 (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!56980 () Unit!3382)

(declare-fun choose!701 (array!4371 array!4373 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3241 V!3241 V!3241 Int) Unit!3382)

(assert (=> d!31007 (= lt!56980 (choose!701 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) lt!56636 (zeroValue!2497 newMap!16) lt!56360 (minValue!2497 newMap!16) (defaultEntry!2626 newMap!16)))))

(assert (=> d!31007 (validMask!0 (mask!6794 newMap!16))))

(assert (=> d!31007 (= (lemmaChangeZeroKeyThenAddPairToListMap!49 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) lt!56636 (zeroValue!2497 newMap!16) lt!56360 (minValue!2497 newMap!16) (defaultEntry!2626 newMap!16)) lt!56980)))

(declare-fun bs!4540 () Bool)

(assert (= bs!4540 d!31007))

(assert (=> bs!4540 m!124333))

(declare-fun m!125159 () Bool)

(assert (=> bs!4540 m!125159))

(assert (=> bs!4540 m!124333))

(declare-fun m!125161 () Bool)

(assert (=> bs!4540 m!125161))

(declare-fun m!125163 () Bool)

(assert (=> bs!4540 m!125163))

(assert (=> bs!4540 m!124579))

(assert (=> b!109931 d!31007))

(assert (=> b!109758 d!30857))

(declare-fun d!31009 () Bool)

(declare-fun e!71811 () Bool)

(assert (=> d!31009 e!71811))

(declare-fun res!54615 () Bool)

(assert (=> d!31009 (=> res!54615 e!71811)))

(declare-fun lt!56983 () Bool)

(assert (=> d!31009 (= res!54615 (not lt!56983))))

(declare-fun lt!56984 () Bool)

(assert (=> d!31009 (= lt!56983 lt!56984)))

(declare-fun lt!56981 () Unit!3382)

(declare-fun e!71810 () Unit!3382)

(assert (=> d!31009 (= lt!56981 e!71810)))

(declare-fun c!19572 () Bool)

(assert (=> d!31009 (= c!19572 lt!56984)))

(assert (=> d!31009 (= lt!56984 (containsKey!162 (toList!789 lt!56479) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!31009 (= (contains!824 lt!56479 #b1000000000000000000000000000000000000000000000000000000000000000) lt!56983)))

(declare-fun b!110413 () Bool)

(declare-fun lt!56982 () Unit!3382)

(assert (=> b!110413 (= e!71810 lt!56982)))

(assert (=> b!110413 (= lt!56982 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 lt!56479) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!110413 (isDefined!111 (getValueByKey!159 (toList!789 lt!56479) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110414 () Bool)

(declare-fun Unit!3411 () Unit!3382)

(assert (=> b!110414 (= e!71810 Unit!3411)))

(declare-fun b!110415 () Bool)

(assert (=> b!110415 (= e!71811 (isDefined!111 (getValueByKey!159 (toList!789 lt!56479) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!31009 c!19572) b!110413))

(assert (= (and d!31009 (not c!19572)) b!110414))

(assert (= (and d!31009 (not res!54615)) b!110415))

(declare-fun m!125165 () Bool)

(assert (=> d!31009 m!125165))

(declare-fun m!125167 () Bool)

(assert (=> b!110413 m!125167))

(declare-fun m!125169 () Bool)

(assert (=> b!110413 m!125169))

(assert (=> b!110413 m!125169))

(declare-fun m!125171 () Bool)

(assert (=> b!110413 m!125171))

(assert (=> b!110415 m!125169))

(assert (=> b!110415 m!125169))

(assert (=> b!110415 m!125171))

(assert (=> b!109754 d!31009))

(declare-fun b!110419 () Bool)

(declare-fun e!71813 () Option!165)

(assert (=> b!110419 (= e!71813 None!163)))

(declare-fun b!110416 () Bool)

(declare-fun e!71812 () Option!165)

(assert (=> b!110416 (= e!71812 (Some!164 (_2!1205 (h!2204 (toList!789 lt!56458)))))))

(declare-fun b!110418 () Bool)

(assert (=> b!110418 (= e!71813 (getValueByKey!159 (t!5738 (toList!789 lt!56458)) (_1!1205 lt!56363)))))

(declare-fun d!31011 () Bool)

(declare-fun c!19573 () Bool)

(assert (=> d!31011 (= c!19573 (and ((_ is Cons!1605) (toList!789 lt!56458)) (= (_1!1205 (h!2204 (toList!789 lt!56458))) (_1!1205 lt!56363))))))

(assert (=> d!31011 (= (getValueByKey!159 (toList!789 lt!56458) (_1!1205 lt!56363)) e!71812)))

(declare-fun b!110417 () Bool)

(assert (=> b!110417 (= e!71812 e!71813)))

(declare-fun c!19574 () Bool)

(assert (=> b!110417 (= c!19574 (and ((_ is Cons!1605) (toList!789 lt!56458)) (not (= (_1!1205 (h!2204 (toList!789 lt!56458))) (_1!1205 lt!56363)))))))

(assert (= (and d!31011 c!19573) b!110416))

(assert (= (and d!31011 (not c!19573)) b!110417))

(assert (= (and b!110417 c!19574) b!110418))

(assert (= (and b!110417 (not c!19574)) b!110419))

(declare-fun m!125173 () Bool)

(assert (=> b!110418 m!125173))

(assert (=> b!109723 d!31011))

(declare-fun d!31013 () Bool)

(assert (=> d!31013 (= (inRange!0 (ite c!19460 (ite c!19455 (index!3171 lt!56641) (ite c!19456 (index!3170 lt!56643) (index!3173 lt!56643))) (ite c!19464 (index!3171 lt!56645) (ite c!19459 (index!3170 lt!56630) (index!3173 lt!56630)))) (mask!6794 newMap!16)) (and (bvsge (ite c!19460 (ite c!19455 (index!3171 lt!56641) (ite c!19456 (index!3170 lt!56643) (index!3173 lt!56643))) (ite c!19464 (index!3171 lt!56645) (ite c!19459 (index!3170 lt!56630) (index!3173 lt!56630)))) #b00000000000000000000000000000000) (bvslt (ite c!19460 (ite c!19455 (index!3171 lt!56641) (ite c!19456 (index!3170 lt!56643) (index!3173 lt!56643))) (ite c!19464 (index!3171 lt!56645) (ite c!19459 (index!3170 lt!56630) (index!3173 lt!56630)))) (bvadd (mask!6794 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!11711 d!31013))

(declare-fun d!31015 () Bool)

(declare-fun e!71815 () Bool)

(assert (=> d!31015 e!71815))

(declare-fun res!54616 () Bool)

(assert (=> d!31015 (=> res!54616 e!71815)))

(declare-fun lt!56987 () Bool)

(assert (=> d!31015 (= res!54616 (not lt!56987))))

(declare-fun lt!56988 () Bool)

(assert (=> d!31015 (= lt!56987 lt!56988)))

(declare-fun lt!56985 () Unit!3382)

(declare-fun e!71814 () Unit!3382)

(assert (=> d!31015 (= lt!56985 e!71814)))

(declare-fun c!19575 () Bool)

(assert (=> d!31015 (= c!19575 lt!56988)))

(assert (=> d!31015 (= lt!56988 (containsKey!162 (toList!789 lt!56479) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!31015 (= (contains!824 lt!56479 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!56987)))

(declare-fun b!110420 () Bool)

(declare-fun lt!56986 () Unit!3382)

(assert (=> b!110420 (= e!71814 lt!56986)))

(assert (=> b!110420 (= lt!56986 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 lt!56479) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!110420 (isDefined!111 (getValueByKey!159 (toList!789 lt!56479) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!110421 () Bool)

(declare-fun Unit!3412 () Unit!3382)

(assert (=> b!110421 (= e!71814 Unit!3412)))

(declare-fun b!110422 () Bool)

(assert (=> b!110422 (= e!71815 (isDefined!111 (getValueByKey!159 (toList!789 lt!56479) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!31015 c!19575) b!110420))

(assert (= (and d!31015 (not c!19575)) b!110421))

(assert (= (and d!31015 (not res!54616)) b!110422))

(assert (=> d!31015 m!124267))

(declare-fun m!125175 () Bool)

(assert (=> d!31015 m!125175))

(assert (=> b!110420 m!124267))

(declare-fun m!125177 () Bool)

(assert (=> b!110420 m!125177))

(assert (=> b!110420 m!124267))

(assert (=> b!110420 m!124585))

(assert (=> b!110420 m!124585))

(declare-fun m!125179 () Bool)

(assert (=> b!110420 m!125179))

(assert (=> b!110422 m!124267))

(assert (=> b!110422 m!124585))

(assert (=> b!110422 m!124585))

(assert (=> b!110422 m!125179))

(assert (=> b!109756 d!31015))

(declare-fun d!31017 () Bool)

(assert (=> d!31017 (= (apply!100 lt!56545 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1356 (getValueByKey!159 (toList!789 lt!56545) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!4541 () Bool)

(assert (= bs!4541 d!31017))

(assert (=> bs!4541 m!124267))

(declare-fun m!125181 () Bool)

(assert (=> bs!4541 m!125181))

(assert (=> bs!4541 m!125181))

(declare-fun m!125183 () Bool)

(assert (=> bs!4541 m!125183))

(assert (=> b!109823 d!31017))

(assert (=> b!109823 d!30861))

(declare-fun b!110426 () Bool)

(declare-fun e!71817 () Option!165)

(assert (=> b!110426 (= e!71817 None!163)))

(declare-fun b!110423 () Bool)

(declare-fun e!71816 () Option!165)

(assert (=> b!110423 (= e!71816 (Some!164 (_2!1205 (h!2204 (toList!789 lt!56454)))))))

(declare-fun b!110425 () Bool)

(assert (=> b!110425 (= e!71817 (getValueByKey!159 (t!5738 (toList!789 lt!56454)) (_1!1205 lt!56370)))))

(declare-fun d!31019 () Bool)

(declare-fun c!19576 () Bool)

(assert (=> d!31019 (= c!19576 (and ((_ is Cons!1605) (toList!789 lt!56454)) (= (_1!1205 (h!2204 (toList!789 lt!56454))) (_1!1205 lt!56370))))))

(assert (=> d!31019 (= (getValueByKey!159 (toList!789 lt!56454) (_1!1205 lt!56370)) e!71816)))

(declare-fun b!110424 () Bool)

(assert (=> b!110424 (= e!71816 e!71817)))

(declare-fun c!19577 () Bool)

(assert (=> b!110424 (= c!19577 (and ((_ is Cons!1605) (toList!789 lt!56454)) (not (= (_1!1205 (h!2204 (toList!789 lt!56454))) (_1!1205 lt!56370)))))))

(assert (= (and d!31019 c!19576) b!110423))

(assert (= (and d!31019 (not c!19576)) b!110424))

(assert (= (and b!110424 c!19577) b!110425))

(assert (= (and b!110424 (not c!19577)) b!110426))

(declare-fun m!125185 () Bool)

(assert (=> b!110425 m!125185))

(assert (=> b!109721 d!31019))

(declare-fun d!31021 () Bool)

(assert (=> d!31021 (= (apply!100 lt!56545 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1356 (getValueByKey!159 (toList!789 lt!56545) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4542 () Bool)

(assert (= bs!4542 d!31021))

(assert (=> bs!4542 m!124685))

(assert (=> bs!4542 m!124685))

(declare-fun m!125187 () Bool)

(assert (=> bs!4542 m!125187))

(assert (=> b!109824 d!31021))

(declare-fun d!31023 () Bool)

(declare-fun isEmpty!384 (List!1609) Bool)

(assert (=> d!31023 (= (isEmpty!382 lt!56479) (isEmpty!384 (toList!789 lt!56479)))))

(declare-fun bs!4543 () Bool)

(assert (= bs!4543 d!31023))

(declare-fun m!125189 () Bool)

(assert (=> bs!4543 m!125189))

(assert (=> b!109750 d!31023))

(assert (=> d!30823 d!30965))

(declare-fun d!31025 () Bool)

(assert (=> d!31025 (= (map!1295 (_2!1204 lt!56628)) (getCurrentListMap!475 (_keys!4340 (_2!1204 lt!56628)) (_values!2609 (_2!1204 lt!56628)) (mask!6794 (_2!1204 lt!56628)) (extraKeys!2423 (_2!1204 lt!56628)) (zeroValue!2497 (_2!1204 lt!56628)) (minValue!2497 (_2!1204 lt!56628)) #b00000000000000000000000000000000 (defaultEntry!2626 (_2!1204 lt!56628))))))

(declare-fun bs!4544 () Bool)

(assert (= bs!4544 d!31025))

(declare-fun m!125191 () Bool)

(assert (=> bs!4544 m!125191))

(assert (=> bm!11704 d!31025))

(assert (=> bm!11622 d!30909))

(declare-fun b!110430 () Bool)

(declare-fun e!71819 () Option!165)

(assert (=> b!110430 (= e!71819 None!163)))

(declare-fun b!110427 () Bool)

(declare-fun e!71818 () Option!165)

(assert (=> b!110427 (= e!71818 (Some!164 (_2!1205 (h!2204 (toList!789 lt!56483)))))))

(declare-fun b!110429 () Bool)

(assert (=> b!110429 (= e!71819 (getValueByKey!159 (t!5738 (toList!789 lt!56483)) (_1!1205 lt!56363)))))

(declare-fun d!31027 () Bool)

(declare-fun c!19578 () Bool)

(assert (=> d!31027 (= c!19578 (and ((_ is Cons!1605) (toList!789 lt!56483)) (= (_1!1205 (h!2204 (toList!789 lt!56483))) (_1!1205 lt!56363))))))

(assert (=> d!31027 (= (getValueByKey!159 (toList!789 lt!56483) (_1!1205 lt!56363)) e!71818)))

(declare-fun b!110428 () Bool)

(assert (=> b!110428 (= e!71818 e!71819)))

(declare-fun c!19579 () Bool)

(assert (=> b!110428 (= c!19579 (and ((_ is Cons!1605) (toList!789 lt!56483)) (not (= (_1!1205 (h!2204 (toList!789 lt!56483))) (_1!1205 lt!56363)))))))

(assert (= (and d!31027 c!19578) b!110427))

(assert (= (and d!31027 (not c!19578)) b!110428))

(assert (= (and b!110428 c!19579) b!110429))

(assert (= (and b!110428 (not c!19579)) b!110430))

(declare-fun m!125193 () Bool)

(assert (=> b!110429 m!125193))

(assert (=> b!109761 d!31027))

(assert (=> bm!11703 d!30823))

(declare-fun b!110434 () Bool)

(declare-fun e!71821 () Option!165)

(assert (=> b!110434 (= e!71821 None!163)))

(declare-fun b!110431 () Bool)

(declare-fun e!71820 () Option!165)

(assert (=> b!110431 (= e!71820 (Some!164 (_2!1205 (h!2204 (toList!789 lt!56487)))))))

(declare-fun b!110433 () Bool)

(assert (=> b!110433 (= e!71821 (getValueByKey!159 (t!5738 (toList!789 lt!56487)) (_1!1205 lt!56370)))))

(declare-fun d!31029 () Bool)

(declare-fun c!19580 () Bool)

(assert (=> d!31029 (= c!19580 (and ((_ is Cons!1605) (toList!789 lt!56487)) (= (_1!1205 (h!2204 (toList!789 lt!56487))) (_1!1205 lt!56370))))))

(assert (=> d!31029 (= (getValueByKey!159 (toList!789 lt!56487) (_1!1205 lt!56370)) e!71820)))

(declare-fun b!110432 () Bool)

(assert (=> b!110432 (= e!71820 e!71821)))

(declare-fun c!19581 () Bool)

(assert (=> b!110432 (= c!19581 (and ((_ is Cons!1605) (toList!789 lt!56487)) (not (= (_1!1205 (h!2204 (toList!789 lt!56487))) (_1!1205 lt!56370)))))))

(assert (= (and d!31029 c!19580) b!110431))

(assert (= (and d!31029 (not c!19580)) b!110432))

(assert (= (and b!110432 c!19581) b!110433))

(assert (= (and b!110432 (not c!19581)) b!110434))

(declare-fun m!125195 () Bool)

(assert (=> b!110433 m!125195))

(assert (=> b!109763 d!31029))

(declare-fun b!110443 () Bool)

(declare-fun e!71827 () (_ BitVec 32))

(declare-fun call!11784 () (_ BitVec 32))

(assert (=> b!110443 (= e!71827 (bvadd #b00000000000000000000000000000001 call!11784))))

(declare-fun d!31031 () Bool)

(declare-fun lt!56991 () (_ BitVec 32))

(assert (=> d!31031 (and (bvsge lt!56991 #b00000000000000000000000000000000) (bvsle lt!56991 (bvsub (size!2329 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!71826 () (_ BitVec 32))

(assert (=> d!31031 (= lt!56991 e!71826)))

(declare-fun c!19587 () Bool)

(assert (=> d!31031 (= c!19587 (bvsge #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))))))

(assert (=> d!31031 (and (bvsle #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2329 (_keys!4340 newMap!16)) (size!2329 (_keys!4340 newMap!16))))))

(assert (=> d!31031 (= (arrayCountValidKeys!0 (_keys!4340 newMap!16) #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))) lt!56991)))

(declare-fun b!110444 () Bool)

(assert (=> b!110444 (= e!71826 #b00000000000000000000000000000000)))

(declare-fun b!110445 () Bool)

(assert (=> b!110445 (= e!71827 call!11784)))

(declare-fun bm!11781 () Bool)

(assert (=> bm!11781 (= call!11784 (arrayCountValidKeys!0 (_keys!4340 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2329 (_keys!4340 newMap!16))))))

(declare-fun b!110446 () Bool)

(assert (=> b!110446 (= e!71826 e!71827)))

(declare-fun c!19586 () Bool)

(assert (=> b!110446 (= c!19586 (validKeyInArray!0 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!31031 c!19587) b!110444))

(assert (= (and d!31031 (not c!19587)) b!110446))

(assert (= (and b!110446 c!19586) b!110443))

(assert (= (and b!110446 (not c!19586)) b!110445))

(assert (= (or b!110443 b!110445) bm!11781))

(declare-fun m!125197 () Bool)

(assert (=> bm!11781 m!125197))

(assert (=> b!110446 m!124605))

(assert (=> b!110446 m!124605))

(assert (=> b!110446 m!124607))

(assert (=> b!109996 d!31031))

(declare-fun d!31033 () Bool)

(declare-fun res!54617 () Bool)

(declare-fun e!71828 () Bool)

(assert (=> d!31033 (=> (not res!54617) (not e!71828))))

(assert (=> d!31033 (= res!54617 (simpleValid!76 (v!2930 (underlying!370 thiss!992))))))

(assert (=> d!31033 (= (valid!434 (v!2930 (underlying!370 thiss!992))) e!71828)))

(declare-fun b!110447 () Bool)

(declare-fun res!54618 () Bool)

(assert (=> b!110447 (=> (not res!54618) (not e!71828))))

(assert (=> b!110447 (= res!54618 (= (arrayCountValidKeys!0 (_keys!4340 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000000000 (size!2329 (_keys!4340 (v!2930 (underlying!370 thiss!992))))) (_size!507 (v!2930 (underlying!370 thiss!992)))))))

(declare-fun b!110448 () Bool)

(declare-fun res!54619 () Bool)

(assert (=> b!110448 (=> (not res!54619) (not e!71828))))

(assert (=> b!110448 (= res!54619 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4340 (v!2930 (underlying!370 thiss!992))) (mask!6794 (v!2930 (underlying!370 thiss!992)))))))

(declare-fun b!110449 () Bool)

(assert (=> b!110449 (= e!71828 (arrayNoDuplicates!0 (_keys!4340 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000000000 Nil!1607))))

(assert (= (and d!31033 res!54617) b!110447))

(assert (= (and b!110447 res!54618) b!110448))

(assert (= (and b!110448 res!54619) b!110449))

(declare-fun m!125199 () Bool)

(assert (=> d!31033 m!125199))

(declare-fun m!125201 () Bool)

(assert (=> b!110447 m!125201))

(declare-fun m!125203 () Bool)

(assert (=> b!110448 m!125203))

(declare-fun m!125205 () Bool)

(assert (=> b!110449 m!125205))

(assert (=> d!30839 d!31033))

(declare-fun d!31035 () Bool)

(declare-fun e!71830 () Bool)

(assert (=> d!31035 e!71830))

(declare-fun res!54620 () Bool)

(assert (=> d!31035 (=> res!54620 e!71830)))

(declare-fun lt!56994 () Bool)

(assert (=> d!31035 (= res!54620 (not lt!56994))))

(declare-fun lt!56995 () Bool)

(assert (=> d!31035 (= lt!56994 lt!56995)))

(declare-fun lt!56992 () Unit!3382)

(declare-fun e!71829 () Unit!3382)

(assert (=> d!31035 (= lt!56992 e!71829)))

(declare-fun c!19588 () Bool)

(assert (=> d!31035 (= c!19588 lt!56995)))

(assert (=> d!31035 (= lt!56995 (containsKey!162 (toList!789 lt!56454) (_1!1205 lt!56370)))))

(assert (=> d!31035 (= (contains!824 lt!56454 (_1!1205 lt!56370)) lt!56994)))

(declare-fun b!110450 () Bool)

(declare-fun lt!56993 () Unit!3382)

(assert (=> b!110450 (= e!71829 lt!56993)))

(assert (=> b!110450 (= lt!56993 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 lt!56454) (_1!1205 lt!56370)))))

(assert (=> b!110450 (isDefined!111 (getValueByKey!159 (toList!789 lt!56454) (_1!1205 lt!56370)))))

(declare-fun b!110451 () Bool)

(declare-fun Unit!3413 () Unit!3382)

(assert (=> b!110451 (= e!71829 Unit!3413)))

(declare-fun b!110452 () Bool)

(assert (=> b!110452 (= e!71830 (isDefined!111 (getValueByKey!159 (toList!789 lt!56454) (_1!1205 lt!56370))))))

(assert (= (and d!31035 c!19588) b!110450))

(assert (= (and d!31035 (not c!19588)) b!110451))

(assert (= (and d!31035 (not res!54620)) b!110452))

(declare-fun m!125207 () Bool)

(assert (=> d!31035 m!125207))

(declare-fun m!125209 () Bool)

(assert (=> b!110450 m!125209))

(assert (=> b!110450 m!124251))

(assert (=> b!110450 m!124251))

(declare-fun m!125211 () Bool)

(assert (=> b!110450 m!125211))

(assert (=> b!110452 m!124251))

(assert (=> b!110452 m!124251))

(assert (=> b!110452 m!125211))

(assert (=> d!30807 d!31035))

(declare-fun b!110456 () Bool)

(declare-fun e!71832 () Option!165)

(assert (=> b!110456 (= e!71832 None!163)))

(declare-fun b!110453 () Bool)

(declare-fun e!71831 () Option!165)

(assert (=> b!110453 (= e!71831 (Some!164 (_2!1205 (h!2204 lt!56453))))))

(declare-fun b!110455 () Bool)

(assert (=> b!110455 (= e!71832 (getValueByKey!159 (t!5738 lt!56453) (_1!1205 lt!56370)))))

(declare-fun d!31037 () Bool)

(declare-fun c!19589 () Bool)

(assert (=> d!31037 (= c!19589 (and ((_ is Cons!1605) lt!56453) (= (_1!1205 (h!2204 lt!56453)) (_1!1205 lt!56370))))))

(assert (=> d!31037 (= (getValueByKey!159 lt!56453 (_1!1205 lt!56370)) e!71831)))

(declare-fun b!110454 () Bool)

(assert (=> b!110454 (= e!71831 e!71832)))

(declare-fun c!19590 () Bool)

(assert (=> b!110454 (= c!19590 (and ((_ is Cons!1605) lt!56453) (not (= (_1!1205 (h!2204 lt!56453)) (_1!1205 lt!56370)))))))

(assert (= (and d!31037 c!19589) b!110453))

(assert (= (and d!31037 (not c!19589)) b!110454))

(assert (= (and b!110454 c!19590) b!110455))

(assert (= (and b!110454 (not c!19590)) b!110456))

(declare-fun m!125213 () Bool)

(assert (=> b!110455 m!125213))

(assert (=> d!30807 d!31037))

(declare-fun d!31039 () Bool)

(assert (=> d!31039 (= (getValueByKey!159 lt!56453 (_1!1205 lt!56370)) (Some!164 (_2!1205 lt!56370)))))

(declare-fun lt!56996 () Unit!3382)

(assert (=> d!31039 (= lt!56996 (choose!695 lt!56453 (_1!1205 lt!56370) (_2!1205 lt!56370)))))

(declare-fun e!71833 () Bool)

(assert (=> d!31039 e!71833))

(declare-fun res!54621 () Bool)

(assert (=> d!31039 (=> (not res!54621) (not e!71833))))

(assert (=> d!31039 (= res!54621 (isStrictlySorted!298 lt!56453))))

(assert (=> d!31039 (= (lemmaContainsTupThenGetReturnValue!75 lt!56453 (_1!1205 lt!56370) (_2!1205 lt!56370)) lt!56996)))

(declare-fun b!110457 () Bool)

(declare-fun res!54622 () Bool)

(assert (=> b!110457 (=> (not res!54622) (not e!71833))))

(assert (=> b!110457 (= res!54622 (containsKey!162 lt!56453 (_1!1205 lt!56370)))))

(declare-fun b!110458 () Bool)

(assert (=> b!110458 (= e!71833 (contains!827 lt!56453 (tuple2!2389 (_1!1205 lt!56370) (_2!1205 lt!56370))))))

(assert (= (and d!31039 res!54621) b!110457))

(assert (= (and b!110457 res!54622) b!110458))

(assert (=> d!31039 m!124245))

(declare-fun m!125215 () Bool)

(assert (=> d!31039 m!125215))

(declare-fun m!125217 () Bool)

(assert (=> d!31039 m!125217))

(declare-fun m!125219 () Bool)

(assert (=> b!110457 m!125219))

(declare-fun m!125221 () Bool)

(assert (=> b!110458 m!125221))

(assert (=> d!30807 d!31039))

(declare-fun e!71836 () List!1609)

(declare-fun b!110459 () Bool)

(assert (=> b!110459 (= e!71836 (insertStrictlySorted!78 (t!5738 (toList!789 (+!144 lt!56369 lt!56363))) (_1!1205 lt!56370) (_2!1205 lt!56370)))))

(declare-fun b!110460 () Bool)

(declare-fun res!54624 () Bool)

(declare-fun e!71838 () Bool)

(assert (=> b!110460 (=> (not res!54624) (not e!71838))))

(declare-fun lt!56997 () List!1609)

(assert (=> b!110460 (= res!54624 (containsKey!162 lt!56997 (_1!1205 lt!56370)))))

(declare-fun b!110461 () Bool)

(declare-fun e!71837 () List!1609)

(declare-fun call!11786 () List!1609)

(assert (=> b!110461 (= e!71837 call!11786)))

(declare-fun bm!11782 () Bool)

(declare-fun call!11787 () List!1609)

(declare-fun call!11785 () List!1609)

(assert (=> bm!11782 (= call!11787 call!11785)))

(declare-fun bm!11783 () Bool)

(assert (=> bm!11783 (= call!11786 call!11787)))

(declare-fun b!110462 () Bool)

(assert (=> b!110462 (= e!71837 call!11786)))

(declare-fun bm!11784 () Bool)

(declare-fun c!19593 () Bool)

(assert (=> bm!11784 (= call!11785 ($colon$colon!82 e!71836 (ite c!19593 (h!2204 (toList!789 (+!144 lt!56369 lt!56363))) (tuple2!2389 (_1!1205 lt!56370) (_2!1205 lt!56370)))))))

(declare-fun c!19594 () Bool)

(assert (=> bm!11784 (= c!19594 c!19593)))

(declare-fun b!110463 () Bool)

(declare-fun e!71835 () List!1609)

(assert (=> b!110463 (= e!71835 call!11787)))

(declare-fun d!31041 () Bool)

(assert (=> d!31041 e!71838))

(declare-fun res!54623 () Bool)

(assert (=> d!31041 (=> (not res!54623) (not e!71838))))

(assert (=> d!31041 (= res!54623 (isStrictlySorted!298 lt!56997))))

(declare-fun e!71834 () List!1609)

(assert (=> d!31041 (= lt!56997 e!71834)))

(assert (=> d!31041 (= c!19593 (and ((_ is Cons!1605) (toList!789 (+!144 lt!56369 lt!56363))) (bvslt (_1!1205 (h!2204 (toList!789 (+!144 lt!56369 lt!56363)))) (_1!1205 lt!56370))))))

(assert (=> d!31041 (isStrictlySorted!298 (toList!789 (+!144 lt!56369 lt!56363)))))

(assert (=> d!31041 (= (insertStrictlySorted!78 (toList!789 (+!144 lt!56369 lt!56363)) (_1!1205 lt!56370) (_2!1205 lt!56370)) lt!56997)))

(declare-fun b!110464 () Bool)

(assert (=> b!110464 (= e!71834 call!11785)))

(declare-fun b!110465 () Bool)

(declare-fun c!19591 () Bool)

(assert (=> b!110465 (= c!19591 (and ((_ is Cons!1605) (toList!789 (+!144 lt!56369 lt!56363))) (bvsgt (_1!1205 (h!2204 (toList!789 (+!144 lt!56369 lt!56363)))) (_1!1205 lt!56370))))))

(assert (=> b!110465 (= e!71835 e!71837)))

(declare-fun c!19592 () Bool)

(declare-fun b!110466 () Bool)

(assert (=> b!110466 (= e!71836 (ite c!19592 (t!5738 (toList!789 (+!144 lt!56369 lt!56363))) (ite c!19591 (Cons!1605 (h!2204 (toList!789 (+!144 lt!56369 lt!56363))) (t!5738 (toList!789 (+!144 lt!56369 lt!56363)))) Nil!1606)))))

(declare-fun b!110467 () Bool)

(assert (=> b!110467 (= e!71838 (contains!827 lt!56997 (tuple2!2389 (_1!1205 lt!56370) (_2!1205 lt!56370))))))

(declare-fun b!110468 () Bool)

(assert (=> b!110468 (= e!71834 e!71835)))

(assert (=> b!110468 (= c!19592 (and ((_ is Cons!1605) (toList!789 (+!144 lt!56369 lt!56363))) (= (_1!1205 (h!2204 (toList!789 (+!144 lt!56369 lt!56363)))) (_1!1205 lt!56370))))))

(assert (= (and d!31041 c!19593) b!110464))

(assert (= (and d!31041 (not c!19593)) b!110468))

(assert (= (and b!110468 c!19592) b!110463))

(assert (= (and b!110468 (not c!19592)) b!110465))

(assert (= (and b!110465 c!19591) b!110461))

(assert (= (and b!110465 (not c!19591)) b!110462))

(assert (= (or b!110461 b!110462) bm!11783))

(assert (= (or b!110463 bm!11783) bm!11782))

(assert (= (or b!110464 bm!11782) bm!11784))

(assert (= (and bm!11784 c!19594) b!110459))

(assert (= (and bm!11784 (not c!19594)) b!110466))

(assert (= (and d!31041 res!54623) b!110460))

(assert (= (and b!110460 res!54624) b!110467))

(declare-fun m!125223 () Bool)

(assert (=> bm!11784 m!125223))

(declare-fun m!125225 () Bool)

(assert (=> b!110467 m!125225))

(declare-fun m!125227 () Bool)

(assert (=> b!110460 m!125227))

(declare-fun m!125229 () Bool)

(assert (=> d!31041 m!125229))

(declare-fun m!125231 () Bool)

(assert (=> d!31041 m!125231))

(declare-fun m!125233 () Bool)

(assert (=> b!110459 m!125233))

(assert (=> d!30807 d!31041))

(assert (=> bm!11643 d!30811))

(declare-fun d!31043 () Bool)

(declare-fun e!71839 () Bool)

(assert (=> d!31043 e!71839))

(declare-fun res!54626 () Bool)

(assert (=> d!31043 (=> (not res!54626) (not e!71839))))

(declare-fun lt!57001 () ListLongMap!1547)

(assert (=> d!31043 (= res!54626 (contains!824 lt!57001 (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))

(declare-fun lt!57000 () List!1609)

(assert (=> d!31043 (= lt!57001 (ListLongMap!1548 lt!57000))))

(declare-fun lt!56999 () Unit!3382)

(declare-fun lt!56998 () Unit!3382)

(assert (=> d!31043 (= lt!56999 lt!56998)))

(assert (=> d!31043 (= (getValueByKey!159 lt!57000 (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))) (Some!164 (_2!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))

(assert (=> d!31043 (= lt!56998 (lemmaContainsTupThenGetReturnValue!75 lt!57000 (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)) (_2!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))

(assert (=> d!31043 (= lt!57000 (insertStrictlySorted!78 (toList!789 lt!56369) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)) (_2!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))

(assert (=> d!31043 (= (+!144 lt!56369 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)) lt!57001)))

(declare-fun b!110469 () Bool)

(declare-fun res!54625 () Bool)

(assert (=> b!110469 (=> (not res!54625) (not e!71839))))

(assert (=> b!110469 (= res!54625 (= (getValueByKey!159 (toList!789 lt!57001) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))) (Some!164 (_2!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))))))

(declare-fun b!110470 () Bool)

(assert (=> b!110470 (= e!71839 (contains!827 (toList!789 lt!57001) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))))

(assert (= (and d!31043 res!54626) b!110469))

(assert (= (and b!110469 res!54625) b!110470))

(declare-fun m!125235 () Bool)

(assert (=> d!31043 m!125235))

(declare-fun m!125237 () Bool)

(assert (=> d!31043 m!125237))

(declare-fun m!125239 () Bool)

(assert (=> d!31043 m!125239))

(declare-fun m!125241 () Bool)

(assert (=> d!31043 m!125241))

(declare-fun m!125243 () Bool)

(assert (=> b!110469 m!125243))

(declare-fun m!125245 () Bool)

(assert (=> b!110470 m!125245))

(assert (=> d!30817 d!31043))

(declare-fun d!31045 () Bool)

(declare-fun e!71840 () Bool)

(assert (=> d!31045 e!71840))

(declare-fun res!54628 () Bool)

(assert (=> d!31045 (=> (not res!54628) (not e!71840))))

(declare-fun lt!57005 () ListLongMap!1547)

(assert (=> d!31045 (= res!54628 (contains!824 lt!57005 (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun lt!57004 () List!1609)

(assert (=> d!31045 (= lt!57005 (ListLongMap!1548 lt!57004))))

(declare-fun lt!57003 () Unit!3382)

(declare-fun lt!57002 () Unit!3382)

(assert (=> d!31045 (= lt!57003 lt!57002)))

(assert (=> d!31045 (= (getValueByKey!159 lt!57004 (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))) (Some!164 (_2!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> d!31045 (= lt!57002 (lemmaContainsTupThenGetReturnValue!75 lt!57004 (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))) (_2!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> d!31045 (= lt!57004 (insertStrictlySorted!78 (toList!789 lt!56369) (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))) (_2!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> d!31045 (= (+!144 lt!56369 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))) lt!57005)))

(declare-fun b!110471 () Bool)

(declare-fun res!54627 () Bool)

(assert (=> b!110471 (=> (not res!54627) (not e!71840))))

(assert (=> b!110471 (= res!54627 (= (getValueByKey!159 (toList!789 lt!57005) (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))) (Some!164 (_2!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(declare-fun b!110472 () Bool)

(assert (=> b!110472 (= e!71840 (contains!827 (toList!789 lt!57005) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))))

(assert (= (and d!31045 res!54628) b!110471))

(assert (= (and b!110471 res!54627) b!110472))

(declare-fun m!125247 () Bool)

(assert (=> d!31045 m!125247))

(declare-fun m!125249 () Bool)

(assert (=> d!31045 m!125249))

(declare-fun m!125251 () Bool)

(assert (=> d!31045 m!125251))

(declare-fun m!125253 () Bool)

(assert (=> d!31045 m!125253))

(declare-fun m!125255 () Bool)

(assert (=> b!110471 m!125255))

(declare-fun m!125257 () Bool)

(assert (=> b!110472 m!125257))

(assert (=> d!30817 d!31045))

(declare-fun d!31047 () Bool)

(declare-fun e!71841 () Bool)

(assert (=> d!31047 e!71841))

(declare-fun res!54630 () Bool)

(assert (=> d!31047 (=> (not res!54630) (not e!71841))))

(declare-fun lt!57009 () ListLongMap!1547)

(assert (=> d!31047 (= res!54630 (contains!824 lt!57009 (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))

(declare-fun lt!57008 () List!1609)

(assert (=> d!31047 (= lt!57009 (ListLongMap!1548 lt!57008))))

(declare-fun lt!57007 () Unit!3382)

(declare-fun lt!57006 () Unit!3382)

(assert (=> d!31047 (= lt!57007 lt!57006)))

(assert (=> d!31047 (= (getValueByKey!159 lt!57008 (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))) (Some!164 (_2!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))

(assert (=> d!31047 (= lt!57006 (lemmaContainsTupThenGetReturnValue!75 lt!57008 (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)) (_2!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))

(assert (=> d!31047 (= lt!57008 (insertStrictlySorted!78 (toList!789 (+!144 lt!56369 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)) (_2!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))

(assert (=> d!31047 (= (+!144 (+!144 lt!56369 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)) lt!57009)))

(declare-fun b!110473 () Bool)

(declare-fun res!54629 () Bool)

(assert (=> b!110473 (=> (not res!54629) (not e!71841))))

(assert (=> b!110473 (= res!54629 (= (getValueByKey!159 (toList!789 lt!57009) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))) (Some!164 (_2!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))))))

(declare-fun b!110474 () Bool)

(assert (=> b!110474 (= e!71841 (contains!827 (toList!789 lt!57009) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))))

(assert (= (and d!31047 res!54630) b!110473))

(assert (= (and b!110473 res!54629) b!110474))

(declare-fun m!125259 () Bool)

(assert (=> d!31047 m!125259))

(declare-fun m!125261 () Bool)

(assert (=> d!31047 m!125261))

(declare-fun m!125263 () Bool)

(assert (=> d!31047 m!125263))

(declare-fun m!125265 () Bool)

(assert (=> d!31047 m!125265))

(declare-fun m!125267 () Bool)

(assert (=> b!110473 m!125267))

(declare-fun m!125269 () Bool)

(assert (=> b!110474 m!125269))

(assert (=> d!30817 d!31047))

(declare-fun d!31049 () Bool)

(assert (=> d!31049 (= (+!144 (+!144 lt!56369 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))) (+!144 (+!144 lt!56369 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))))

(assert (=> d!31049 true))

(declare-fun _$28!167 () Unit!3382)

(assert (=> d!31049 (= (choose!689 lt!56369 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))) _$28!167)))

(declare-fun bs!4545 () Bool)

(assert (= bs!4545 d!31049))

(assert (=> bs!4545 m!124319))

(assert (=> bs!4545 m!124319))

(assert (=> bs!4545 m!124323))

(assert (=> bs!4545 m!124325))

(assert (=> bs!4545 m!124325))

(assert (=> bs!4545 m!124327))

(assert (=> d!30817 d!31049))

(declare-fun d!31051 () Bool)

(declare-fun e!71842 () Bool)

(assert (=> d!31051 e!71842))

(declare-fun res!54632 () Bool)

(assert (=> d!31051 (=> (not res!54632) (not e!71842))))

(declare-fun lt!57013 () ListLongMap!1547)

(assert (=> d!31051 (= res!54632 (contains!824 lt!57013 (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun lt!57012 () List!1609)

(assert (=> d!31051 (= lt!57013 (ListLongMap!1548 lt!57012))))

(declare-fun lt!57011 () Unit!3382)

(declare-fun lt!57010 () Unit!3382)

(assert (=> d!31051 (= lt!57011 lt!57010)))

(assert (=> d!31051 (= (getValueByKey!159 lt!57012 (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))) (Some!164 (_2!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> d!31051 (= lt!57010 (lemmaContainsTupThenGetReturnValue!75 lt!57012 (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))) (_2!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> d!31051 (= lt!57012 (insertStrictlySorted!78 (toList!789 (+!144 lt!56369 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))) (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))) (_2!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> d!31051 (= (+!144 (+!144 lt!56369 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))) lt!57013)))

(declare-fun b!110475 () Bool)

(declare-fun res!54631 () Bool)

(assert (=> b!110475 (=> (not res!54631) (not e!71842))))

(assert (=> b!110475 (= res!54631 (= (getValueByKey!159 (toList!789 lt!57013) (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))) (Some!164 (_2!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(declare-fun b!110476 () Bool)

(assert (=> b!110476 (= e!71842 (contains!827 (toList!789 lt!57013) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))))

(assert (= (and d!31051 res!54632) b!110475))

(assert (= (and b!110475 res!54631) b!110476))

(declare-fun m!125271 () Bool)

(assert (=> d!31051 m!125271))

(declare-fun m!125273 () Bool)

(assert (=> d!31051 m!125273))

(declare-fun m!125275 () Bool)

(assert (=> d!31051 m!125275))

(declare-fun m!125277 () Bool)

(assert (=> d!31051 m!125277))

(declare-fun m!125279 () Bool)

(assert (=> b!110475 m!125279))

(declare-fun m!125281 () Bool)

(assert (=> b!110476 m!125281))

(assert (=> d!30817 d!31051))

(assert (=> b!109832 d!30857))

(declare-fun d!31053 () Bool)

(declare-fun e!71844 () Bool)

(assert (=> d!31053 e!71844))

(declare-fun res!54633 () Bool)

(assert (=> d!31053 (=> res!54633 e!71844)))

(declare-fun lt!57016 () Bool)

(assert (=> d!31053 (= res!54633 (not lt!57016))))

(declare-fun lt!57017 () Bool)

(assert (=> d!31053 (= lt!57016 lt!57017)))

(declare-fun lt!57014 () Unit!3382)

(declare-fun e!71843 () Unit!3382)

(assert (=> d!31053 (= lt!57014 e!71843)))

(declare-fun c!19595 () Bool)

(assert (=> d!31053 (= c!19595 lt!57017)))

(assert (=> d!31053 (= lt!57017 (containsKey!162 (toList!789 lt!56545) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!31053 (= (contains!824 lt!56545 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!57016)))

(declare-fun b!110477 () Bool)

(declare-fun lt!57015 () Unit!3382)

(assert (=> b!110477 (= e!71843 lt!57015)))

(assert (=> b!110477 (= lt!57015 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 lt!56545) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!110477 (isDefined!111 (getValueByKey!159 (toList!789 lt!56545) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!110478 () Bool)

(declare-fun Unit!3414 () Unit!3382)

(assert (=> b!110478 (= e!71843 Unit!3414)))

(declare-fun b!110479 () Bool)

(assert (=> b!110479 (= e!71844 (isDefined!111 (getValueByKey!159 (toList!789 lt!56545) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!31053 c!19595) b!110477))

(assert (= (and d!31053 (not c!19595)) b!110478))

(assert (= (and d!31053 (not res!54633)) b!110479))

(assert (=> d!31053 m!124267))

(declare-fun m!125283 () Bool)

(assert (=> d!31053 m!125283))

(assert (=> b!110477 m!124267))

(declare-fun m!125285 () Bool)

(assert (=> b!110477 m!125285))

(assert (=> b!110477 m!124267))

(assert (=> b!110477 m!125181))

(assert (=> b!110477 m!125181))

(declare-fun m!125287 () Bool)

(assert (=> b!110477 m!125287))

(assert (=> b!110479 m!124267))

(assert (=> b!110479 m!125181))

(assert (=> b!110479 m!125181))

(assert (=> b!110479 m!125287))

(assert (=> b!109816 d!31053))

(declare-fun d!31055 () Bool)

(assert (=> d!31055 (= (get!1355 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) from!355) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!109770 d!31055))

(declare-fun mapIsEmpty!4011 () Bool)

(declare-fun mapRes!4011 () Bool)

(assert (=> mapIsEmpty!4011 mapRes!4011))

(declare-fun b!110480 () Bool)

(declare-fun e!71846 () Bool)

(assert (=> b!110480 (= e!71846 tp_is_empty!2695)))

(declare-fun mapNonEmpty!4011 () Bool)

(declare-fun tp!10041 () Bool)

(assert (=> mapNonEmpty!4011 (= mapRes!4011 (and tp!10041 e!71846))))

(declare-fun mapKey!4011 () (_ BitVec 32))

(declare-fun mapValue!4011 () ValueCell!1004)

(declare-fun mapRest!4011 () (Array (_ BitVec 32) ValueCell!1004))

(assert (=> mapNonEmpty!4011 (= mapRest!4010 (store mapRest!4011 mapKey!4011 mapValue!4011))))

(declare-fun condMapEmpty!4011 () Bool)

(declare-fun mapDefault!4011 () ValueCell!1004)

(assert (=> mapNonEmpty!4010 (= condMapEmpty!4011 (= mapRest!4010 ((as const (Array (_ BitVec 32) ValueCell!1004)) mapDefault!4011)))))

(declare-fun e!71845 () Bool)

(assert (=> mapNonEmpty!4010 (= tp!10040 (and e!71845 mapRes!4011))))

(declare-fun b!110481 () Bool)

(assert (=> b!110481 (= e!71845 tp_is_empty!2695)))

(assert (= (and mapNonEmpty!4010 condMapEmpty!4011) mapIsEmpty!4011))

(assert (= (and mapNonEmpty!4010 (not condMapEmpty!4011)) mapNonEmpty!4011))

(assert (= (and mapNonEmpty!4011 ((_ is ValueCellFull!1004) mapValue!4011)) b!110480))

(assert (= (and mapNonEmpty!4010 ((_ is ValueCellFull!1004) mapDefault!4011)) b!110481))

(declare-fun m!125289 () Bool)

(assert (=> mapNonEmpty!4011 m!125289))

(declare-fun mapIsEmpty!4012 () Bool)

(declare-fun mapRes!4012 () Bool)

(assert (=> mapIsEmpty!4012 mapRes!4012))

(declare-fun b!110482 () Bool)

(declare-fun e!71848 () Bool)

(assert (=> b!110482 (= e!71848 tp_is_empty!2695)))

(declare-fun mapNonEmpty!4012 () Bool)

(declare-fun tp!10042 () Bool)

(assert (=> mapNonEmpty!4012 (= mapRes!4012 (and tp!10042 e!71848))))

(declare-fun mapRest!4012 () (Array (_ BitVec 32) ValueCell!1004))

(declare-fun mapKey!4012 () (_ BitVec 32))

(declare-fun mapValue!4012 () ValueCell!1004)

(assert (=> mapNonEmpty!4012 (= mapRest!4009 (store mapRest!4012 mapKey!4012 mapValue!4012))))

(declare-fun condMapEmpty!4012 () Bool)

(declare-fun mapDefault!4012 () ValueCell!1004)

(assert (=> mapNonEmpty!4009 (= condMapEmpty!4012 (= mapRest!4009 ((as const (Array (_ BitVec 32) ValueCell!1004)) mapDefault!4012)))))

(declare-fun e!71847 () Bool)

(assert (=> mapNonEmpty!4009 (= tp!10039 (and e!71847 mapRes!4012))))

(declare-fun b!110483 () Bool)

(assert (=> b!110483 (= e!71847 tp_is_empty!2695)))

(assert (= (and mapNonEmpty!4009 condMapEmpty!4012) mapIsEmpty!4012))

(assert (= (and mapNonEmpty!4009 (not condMapEmpty!4012)) mapNonEmpty!4012))

(assert (= (and mapNonEmpty!4012 ((_ is ValueCellFull!1004) mapValue!4012)) b!110482))

(assert (= (and mapNonEmpty!4009 ((_ is ValueCellFull!1004) mapDefault!4012)) b!110483))

(declare-fun m!125291 () Bool)

(assert (=> mapNonEmpty!4012 m!125291))

(declare-fun b_lambda!4943 () Bool)

(assert (= b_lambda!4941 (or (and b!109572 b_free!2557 (= (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) (defaultEntry!2626 newMap!16))) (and b!109583 b_free!2559) b_lambda!4943)))

(declare-fun b_lambda!4945 () Bool)

(assert (= b_lambda!4935 (or (and b!109572 b_free!2557) (and b!109583 b_free!2559 (= (defaultEntry!2626 newMap!16) (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))))) b_lambda!4945)))

(declare-fun b_lambda!4947 () Bool)

(assert (= b_lambda!4933 (or (and b!109572 b_free!2557) (and b!109583 b_free!2559 (= (defaultEntry!2626 newMap!16) (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))))) b_lambda!4947)))

(declare-fun b_lambda!4949 () Bool)

(assert (= b_lambda!4937 (or (and b!109572 b_free!2557 (= (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) (defaultEntry!2626 newMap!16))) (and b!109583 b_free!2559) b_lambda!4949)))

(declare-fun b_lambda!4951 () Bool)

(assert (= b_lambda!4939 (or (and b!109572 b_free!2557 (= (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) (defaultEntry!2626 newMap!16))) (and b!109583 b_free!2559) b_lambda!4951)))

(check-sat (not b!110064) (not b!110375) (not d!31023) (not d!31033) (not b!110380) (not b!110263) (not d!30949) (not b!110458) (not d!31053) (not b!110073) (not d!30955) (not b!110457) (not b!110272) (not d!30989) (not b!110202) (not b!110056) (not b!110158) (not b!110276) (not b!110248) (not b!110472) (not d!30893) (not b!110060) (not b!110139) (not d!30919) (not b_lambda!4945) (not b!110279) (not d!30981) (not b!110232) (not d!30991) (not b!110411) (not d!30929) (not b!110425) (not b_lambda!4919) (not b!110467) (not bm!11774) (not d!30901) (not b!110447) (not d!30997) (not b!110348) (not mapNonEmpty!4012) (not d!31005) (not b!110049) (not bm!11739) (not b!110479) (not d!30909) (not b!110116) (not d!30899) (not b!110302) (not b!110448) (not bm!11754) (not b!110080) (not b!110372) (not d!30937) (not b!110356) (not b!110402) (not b!110050) (not b!110378) (not b!110090) (not b!110062) (not b!110109) (not d!30979) (not d!30875) (not d!31047) (not b!110304) (not d!30941) (not b!110390) (not b!110224) (not b!110446) (not b!110167) (not b!110420) (not b!110297) (not d!30939) (not b_lambda!4943) (not b!110054) (not b!110189) (not b!110433) (not b!110452) (not b!110157) (not mapNonEmpty!4011) (not d!30959) (not d!30869) (not b!110244) (not b!110087) (not bm!11778) (not b!110196) (not b!110066) (not b!110264) (not b!110096) (not b!110112) (not b!110104) (not d!30953) (not b!110288) (not b!110403) (not b!110289) (not b!110182) (not b!110161) (not b!110118) (not d!30985) (not b!110203) (not b!110075) (not b!110455) (not b!110273) (not d!31001) (not b!110415) (not b!110459) (not d!31009) (not b!110318) (not d!31049) (not b!110395) (not b!110381) (not b!110168) (not d!30967) (not b!110418) (not bm!11730) (not d!30961) (not d!31007) (not bm!11752) (not d!30881) (not b_next!2559) (not bm!11732) (not b!110153) (not b!110247) (not b!110473) (not b!110363) (not b!110180) (not b!110317) (not b!110382) (not d!30921) (not b!110282) (not d!30957) (not d!30935) (not b!110366) (not bm!11755) (not bm!11733) (not b!110266) (not b!110150) (not b!110429) (not b!110162) (not d!30885) (not b!110351) (not b!110469) (not d!30889) (not b!110281) (not b!110253) (not b!110250) (not d!30951) (not d!30867) (not b!110476) (not bm!11767) (not b!110370) (not bm!11768) (not d!30943) (not d!30947) (not b!110408) (not b!110355) (not b_lambda!4931) (not b!110175) (not b!110106) (not b!110305) (not b!110373) (not bm!11731) (not d!30927) (not d!30897) (not d!30873) (not b!110048) (not b!110113) (not b!110191) (not bm!11748) (not b!110316) (not b!110160) (not b!110319) (not b!110277) (not b!110166) (not b_lambda!4929) (not b!110225) (not b_lambda!4947) (not d!30945) (not b!110098) (not d!30931) (not b!110067) (not b!110346) (not d!30905) (not d!30995) (not bm!11771) (not bm!11728) (not bm!11772) (not b!110422) (not d!30891) (not b!110353) (not b!110394) (not b!110131) (not b!110159) (not d!31025) (not b!110449) (not b!110102) (not b!110275) (not b!110308) (not d!30973) (not b!110097) (not d!30933) (not b!110065) (not bm!11758) (not d!31035) (not d!30903) b_and!6797 (not b_lambda!4951) (not b!110307) (not d!31039) (not d!30969) (not d!30871) (not d!31015) (not b!110103) (not b!110068) b_and!6799 (not d!30895) (not d!31003) (not b!110413) (not b_lambda!4949) (not d!31021) (not b!110477) (not b!110321) (not bm!11751) (not d!30925) (not d!31043) (not b!110369) (not b_next!2557) (not b!110245) (not b!110051) (not b!110475) (not b!110290) (not d!31041) (not d!30915) (not b!110471) (not b!110154) tp_is_empty!2695 (not bm!11784) (not d!30865) (not b!110383) (not bm!11764) (not b!110137) (not bm!11781) (not b!110114) (not b!110267) (not d!31017) (not b!110193) (not b!110371) (not b!110470) (not b!110088) (not b!110101) (not b!110474) (not b!110450) (not d!31045) (not bm!11763) (not d!30853) (not d!30975) (not b!110460) (not bm!11727) (not d!30859) (not d!31051) (not bm!11775) (not d!30863) (not d!30911) (not b!110174) (not bm!11735) (not b!110063) (not bm!11736) (not b!110365) (not b!110410) (not b!110183) (not b!110396) (not b!110296) (not b!110285) (not b!110354) (not d!30887) (not d!30965) (not d!30983) (not b!110314) (not d!30877) (not b_lambda!4927))
(check-sat b_and!6797 b_and!6799 (not b_next!2557) (not b_next!2559))
(get-model)

(declare-fun d!31057 () Bool)

(declare-fun res!54634 () Bool)

(declare-fun e!71849 () Bool)

(assert (=> d!31057 (=> res!54634 e!71849)))

(assert (=> d!31057 (= res!54634 (and ((_ is Cons!1605) (toList!789 lt!56545)) (= (_1!1205 (h!2204 (toList!789 lt!56545))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!31057 (= (containsKey!162 (toList!789 lt!56545) #b1000000000000000000000000000000000000000000000000000000000000000) e!71849)))

(declare-fun b!110484 () Bool)

(declare-fun e!71850 () Bool)

(assert (=> b!110484 (= e!71849 e!71850)))

(declare-fun res!54635 () Bool)

(assert (=> b!110484 (=> (not res!54635) (not e!71850))))

(assert (=> b!110484 (= res!54635 (and (or (not ((_ is Cons!1605) (toList!789 lt!56545))) (bvsle (_1!1205 (h!2204 (toList!789 lt!56545))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1605) (toList!789 lt!56545)) (bvslt (_1!1205 (h!2204 (toList!789 lt!56545))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!110485 () Bool)

(assert (=> b!110485 (= e!71850 (containsKey!162 (t!5738 (toList!789 lt!56545)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!31057 (not res!54634)) b!110484))

(assert (= (and b!110484 res!54635) b!110485))

(declare-fun m!125293 () Bool)

(assert (=> b!110485 m!125293))

(assert (=> d!30859 d!31057))

(declare-fun d!31059 () Bool)

(assert (=> d!31059 (= (validKeyInArray!0 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!110098 d!31059))

(declare-fun d!31061 () Bool)

(assert (=> d!31061 (= (get!1355 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!110064 d!31061))

(declare-fun d!31063 () Bool)

(assert (=> d!31063 (= (validKeyInArray!0 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!110158 d!31063))

(declare-fun d!31065 () Bool)

(assert (=> d!31065 (= (isDefined!111 (getValueByKey!159 (toList!789 lt!56487) (_1!1205 lt!56370))) (not (isEmpty!383 (getValueByKey!159 (toList!789 lt!56487) (_1!1205 lt!56370)))))))

(declare-fun bs!4546 () Bool)

(assert (= bs!4546 d!31065))

(assert (=> bs!4546 m!124315))

(declare-fun m!125295 () Bool)

(assert (=> bs!4546 m!125295))

(assert (=> b!110375 d!31065))

(assert (=> b!110375 d!31029))

(declare-fun d!31067 () Bool)

(assert (=> d!31067 (= (validKeyInArray!0 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!110366 d!31067))

(declare-fun d!31069 () Bool)

(declare-fun res!54636 () Bool)

(declare-fun e!71851 () Bool)

(assert (=> d!31069 (=> res!54636 e!71851)))

(assert (=> d!31069 (= res!54636 (and ((_ is Cons!1605) (toList!789 lt!56545)) (= (_1!1205 (h!2204 (toList!789 lt!56545))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!31069 (= (containsKey!162 (toList!789 lt!56545) #b0000000000000000000000000000000000000000000000000000000000000000) e!71851)))

(declare-fun b!110486 () Bool)

(declare-fun e!71852 () Bool)

(assert (=> b!110486 (= e!71851 e!71852)))

(declare-fun res!54637 () Bool)

(assert (=> b!110486 (=> (not res!54637) (not e!71852))))

(assert (=> b!110486 (= res!54637 (and (or (not ((_ is Cons!1605) (toList!789 lt!56545))) (bvsle (_1!1205 (h!2204 (toList!789 lt!56545))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1605) (toList!789 lt!56545)) (bvslt (_1!1205 (h!2204 (toList!789 lt!56545))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!110487 () Bool)

(assert (=> b!110487 (= e!71852 (containsKey!162 (t!5738 (toList!789 lt!56545)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!31069 (not res!54636)) b!110486))

(assert (= (and b!110486 res!54637) b!110487))

(declare-fun m!125297 () Bool)

(assert (=> b!110487 m!125297))

(assert (=> d!30903 d!31069))

(declare-fun d!31071 () Bool)

(declare-fun lt!57018 () Bool)

(assert (=> d!31071 (= lt!57018 (select (content!114 (toList!789 lt!56887)) (tuple2!2389 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun e!71854 () Bool)

(assert (=> d!31071 (= lt!57018 e!71854)))

(declare-fun res!54639 () Bool)

(assert (=> d!31071 (=> (not res!54639) (not e!71854))))

(assert (=> d!31071 (= res!54639 ((_ is Cons!1605) (toList!789 lt!56887)))))

(assert (=> d!31071 (= (contains!827 (toList!789 lt!56887) (tuple2!2389 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992))))) lt!57018)))

(declare-fun b!110488 () Bool)

(declare-fun e!71853 () Bool)

(assert (=> b!110488 (= e!71854 e!71853)))

(declare-fun res!54638 () Bool)

(assert (=> b!110488 (=> res!54638 e!71853)))

(assert (=> b!110488 (= res!54638 (= (h!2204 (toList!789 lt!56887)) (tuple2!2389 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun b!110489 () Bool)

(assert (=> b!110489 (= e!71853 (contains!827 (t!5738 (toList!789 lt!56887)) (tuple2!2389 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))))

(assert (= (and d!31071 res!54639) b!110488))

(assert (= (and b!110488 (not res!54638)) b!110489))

(declare-fun m!125299 () Bool)

(assert (=> d!31071 m!125299))

(declare-fun m!125301 () Bool)

(assert (=> d!31071 m!125301))

(declare-fun m!125303 () Bool)

(assert (=> b!110489 m!125303))

(assert (=> b!110276 d!31071))

(declare-fun lt!57019 () Bool)

(declare-fun d!31073 () Bool)

(assert (=> d!31073 (= lt!57019 (select (content!114 (toList!789 lt!56923)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))))

(declare-fun e!71856 () Bool)

(assert (=> d!31073 (= lt!57019 e!71856)))

(declare-fun res!54641 () Bool)

(assert (=> d!31073 (=> (not res!54641) (not e!71856))))

(assert (=> d!31073 (= res!54641 ((_ is Cons!1605) (toList!789 lt!56923)))))

(assert (=> d!31073 (= (contains!827 (toList!789 lt!56923) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)) lt!57019)))

(declare-fun b!110490 () Bool)

(declare-fun e!71855 () Bool)

(assert (=> b!110490 (= e!71856 e!71855)))

(declare-fun res!54640 () Bool)

(assert (=> b!110490 (=> res!54640 e!71855)))

(assert (=> b!110490 (= res!54640 (= (h!2204 (toList!789 lt!56923)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))))

(declare-fun b!110491 () Bool)

(assert (=> b!110491 (= e!71855 (contains!827 (t!5738 (toList!789 lt!56923)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))))

(assert (= (and d!31073 res!54641) b!110490))

(assert (= (and b!110490 (not res!54640)) b!110491))

(declare-fun m!125305 () Bool)

(assert (=> d!31073 m!125305))

(declare-fun m!125307 () Bool)

(assert (=> d!31073 m!125307))

(declare-fun m!125309 () Bool)

(assert (=> b!110491 m!125309))

(assert (=> b!110308 d!31073))

(declare-fun d!31075 () Bool)

(declare-fun res!54642 () Bool)

(declare-fun e!71857 () Bool)

(assert (=> d!31075 (=> res!54642 e!71857)))

(assert (=> d!31075 (= res!54642 (and ((_ is Cons!1605) (toList!789 (+!144 lt!56475 (tuple2!2389 lt!56474 lt!56478)))) (= (_1!1205 (h!2204 (toList!789 (+!144 lt!56475 (tuple2!2389 lt!56474 lt!56478))))) lt!56473)))))

(assert (=> d!31075 (= (containsKey!162 (toList!789 (+!144 lt!56475 (tuple2!2389 lt!56474 lt!56478))) lt!56473) e!71857)))

(declare-fun b!110492 () Bool)

(declare-fun e!71858 () Bool)

(assert (=> b!110492 (= e!71857 e!71858)))

(declare-fun res!54643 () Bool)

(assert (=> b!110492 (=> (not res!54643) (not e!71858))))

(assert (=> b!110492 (= res!54643 (and (or (not ((_ is Cons!1605) (toList!789 (+!144 lt!56475 (tuple2!2389 lt!56474 lt!56478))))) (bvsle (_1!1205 (h!2204 (toList!789 (+!144 lt!56475 (tuple2!2389 lt!56474 lt!56478))))) lt!56473)) ((_ is Cons!1605) (toList!789 (+!144 lt!56475 (tuple2!2389 lt!56474 lt!56478)))) (bvslt (_1!1205 (h!2204 (toList!789 (+!144 lt!56475 (tuple2!2389 lt!56474 lt!56478))))) lt!56473)))))

(declare-fun b!110493 () Bool)

(assert (=> b!110493 (= e!71858 (containsKey!162 (t!5738 (toList!789 (+!144 lt!56475 (tuple2!2389 lt!56474 lt!56478)))) lt!56473))))

(assert (= (and d!31075 (not res!54642)) b!110492))

(assert (= (and b!110492 res!54643) b!110493))

(declare-fun m!125311 () Bool)

(assert (=> b!110493 m!125311))

(assert (=> d!30869 d!31075))

(declare-fun d!31077 () Bool)

(assert (=> d!31077 (= (isDefined!111 (getValueByKey!159 (toList!789 lt!56479) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!383 (getValueByKey!159 (toList!789 lt!56479) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4547 () Bool)

(assert (= bs!4547 d!31077))

(assert (=> bs!4547 m!124821))

(declare-fun m!125313 () Bool)

(assert (=> bs!4547 m!125313))

(assert (=> b!110250 d!31077))

(declare-fun b!110497 () Bool)

(declare-fun e!71860 () Option!165)

(assert (=> b!110497 (= e!71860 None!163)))

(declare-fun b!110494 () Bool)

(declare-fun e!71859 () Option!165)

(assert (=> b!110494 (= e!71859 (Some!164 (_2!1205 (h!2204 (toList!789 lt!56479)))))))

(declare-fun b!110496 () Bool)

(assert (=> b!110496 (= e!71860 (getValueByKey!159 (t!5738 (toList!789 lt!56479)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!31079 () Bool)

(declare-fun c!19596 () Bool)

(assert (=> d!31079 (= c!19596 (and ((_ is Cons!1605) (toList!789 lt!56479)) (= (_1!1205 (h!2204 (toList!789 lt!56479))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!31079 (= (getValueByKey!159 (toList!789 lt!56479) #b0000000000000000000000000000000000000000000000000000000000000000) e!71859)))

(declare-fun b!110495 () Bool)

(assert (=> b!110495 (= e!71859 e!71860)))

(declare-fun c!19597 () Bool)

(assert (=> b!110495 (= c!19597 (and ((_ is Cons!1605) (toList!789 lt!56479)) (not (= (_1!1205 (h!2204 (toList!789 lt!56479))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!31079 c!19596) b!110494))

(assert (= (and d!31079 (not c!19596)) b!110495))

(assert (= (and b!110495 c!19597) b!110496))

(assert (= (and b!110495 (not c!19597)) b!110497))

(declare-fun m!125315 () Bool)

(assert (=> b!110496 m!125315))

(assert (=> b!110250 d!31079))

(declare-fun d!31081 () Bool)

(declare-fun c!19600 () Bool)

(assert (=> d!31081 (= c!19600 ((_ is Nil!1606) (toList!789 lt!56487)))))

(declare-fun e!71863 () (InoxSet tuple2!2388))

(assert (=> d!31081 (= (content!114 (toList!789 lt!56487)) e!71863)))

(declare-fun b!110502 () Bool)

(assert (=> b!110502 (= e!71863 ((as const (Array tuple2!2388 Bool)) false))))

(declare-fun b!110503 () Bool)

(assert (=> b!110503 (= e!71863 ((_ map or) (store ((as const (Array tuple2!2388 Bool)) false) (h!2204 (toList!789 lt!56487)) true) (content!114 (t!5738 (toList!789 lt!56487)))))))

(assert (= (and d!31081 c!19600) b!110502))

(assert (= (and d!31081 (not c!19600)) b!110503))

(declare-fun m!125317 () Bool)

(assert (=> b!110503 m!125317))

(declare-fun m!125319 () Bool)

(assert (=> b!110503 m!125319))

(assert (=> d!30899 d!31081))

(declare-fun d!31083 () Bool)

(assert (=> d!31083 (= (isDefined!111 (getValueByKey!159 (toList!789 lt!56479) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!383 (getValueByKey!159 (toList!789 lt!56479) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!4548 () Bool)

(assert (= bs!4548 d!31083))

(assert (=> bs!4548 m!124585))

(declare-fun m!125321 () Bool)

(assert (=> bs!4548 m!125321))

(assert (=> b!110422 d!31083))

(declare-fun b!110507 () Bool)

(declare-fun e!71865 () Option!165)

(assert (=> b!110507 (= e!71865 None!163)))

(declare-fun b!110504 () Bool)

(declare-fun e!71864 () Option!165)

(assert (=> b!110504 (= e!71864 (Some!164 (_2!1205 (h!2204 (toList!789 lt!56479)))))))

(declare-fun b!110506 () Bool)

(assert (=> b!110506 (= e!71865 (getValueByKey!159 (t!5738 (toList!789 lt!56479)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun c!19601 () Bool)

(declare-fun d!31085 () Bool)

(assert (=> d!31085 (= c!19601 (and ((_ is Cons!1605) (toList!789 lt!56479)) (= (_1!1205 (h!2204 (toList!789 lt!56479))) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!31085 (= (getValueByKey!159 (toList!789 lt!56479) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!71864)))

(declare-fun b!110505 () Bool)

(assert (=> b!110505 (= e!71864 e!71865)))

(declare-fun c!19602 () Bool)

(assert (=> b!110505 (= c!19602 (and ((_ is Cons!1605) (toList!789 lt!56479)) (not (= (_1!1205 (h!2204 (toList!789 lt!56479))) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(assert (= (and d!31085 c!19601) b!110504))

(assert (= (and d!31085 (not c!19601)) b!110505))

(assert (= (and b!110505 c!19602) b!110506))

(assert (= (and b!110505 (not c!19602)) b!110507))

(assert (=> b!110506 m!124267))

(declare-fun m!125323 () Bool)

(assert (=> b!110506 m!125323))

(assert (=> b!110422 d!31085))

(assert (=> b!110411 d!31059))

(declare-fun d!31087 () Bool)

(declare-fun lt!57020 () Bool)

(assert (=> d!31087 (= lt!57020 (select (content!114 (toList!789 lt!57001)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))))

(declare-fun e!71867 () Bool)

(assert (=> d!31087 (= lt!57020 e!71867)))

(declare-fun res!54645 () Bool)

(assert (=> d!31087 (=> (not res!54645) (not e!71867))))

(assert (=> d!31087 (= res!54645 ((_ is Cons!1605) (toList!789 lt!57001)))))

(assert (=> d!31087 (= (contains!827 (toList!789 lt!57001) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)) lt!57020)))

(declare-fun b!110508 () Bool)

(declare-fun e!71866 () Bool)

(assert (=> b!110508 (= e!71867 e!71866)))

(declare-fun res!54644 () Bool)

(assert (=> b!110508 (=> res!54644 e!71866)))

(assert (=> b!110508 (= res!54644 (= (h!2204 (toList!789 lt!57001)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))))

(declare-fun b!110509 () Bool)

(assert (=> b!110509 (= e!71866 (contains!827 (t!5738 (toList!789 lt!57001)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))))

(assert (= (and d!31087 res!54645) b!110508))

(assert (= (and b!110508 (not res!54644)) b!110509))

(declare-fun m!125325 () Bool)

(assert (=> d!31087 m!125325))

(declare-fun m!125327 () Bool)

(assert (=> d!31087 m!125327))

(declare-fun m!125329 () Bool)

(assert (=> b!110509 m!125329))

(assert (=> b!110470 d!31087))

(declare-fun d!31089 () Bool)

(assert (=> d!31089 (isDefined!111 (getValueByKey!159 (toList!789 lt!56458) (_1!1205 lt!56363)))))

(declare-fun lt!57021 () Unit!3382)

(assert (=> d!31089 (= lt!57021 (choose!696 (toList!789 lt!56458) (_1!1205 lt!56363)))))

(declare-fun e!71868 () Bool)

(assert (=> d!31089 e!71868))

(declare-fun res!54646 () Bool)

(assert (=> d!31089 (=> (not res!54646) (not e!71868))))

(assert (=> d!31089 (= res!54646 (isStrictlySorted!298 (toList!789 lt!56458)))))

(assert (=> d!31089 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 lt!56458) (_1!1205 lt!56363)) lt!57021)))

(declare-fun b!110510 () Bool)

(assert (=> b!110510 (= e!71868 (containsKey!162 (toList!789 lt!56458) (_1!1205 lt!56363)))))

(assert (= (and d!31089 res!54646) b!110510))

(assert (=> d!31089 m!124263))

(assert (=> d!31089 m!124263))

(assert (=> d!31089 m!124779))

(declare-fun m!125331 () Bool)

(assert (=> d!31089 m!125331))

(declare-fun m!125333 () Bool)

(assert (=> d!31089 m!125333))

(assert (=> b!110510 m!124775))

(assert (=> b!110191 d!31089))

(declare-fun d!31091 () Bool)

(assert (=> d!31091 (= (isDefined!111 (getValueByKey!159 (toList!789 lt!56458) (_1!1205 lt!56363))) (not (isEmpty!383 (getValueByKey!159 (toList!789 lt!56458) (_1!1205 lt!56363)))))))

(declare-fun bs!4549 () Bool)

(assert (= bs!4549 d!31091))

(assert (=> bs!4549 m!124263))

(declare-fun m!125335 () Bool)

(assert (=> bs!4549 m!125335))

(assert (=> b!110191 d!31091))

(assert (=> b!110191 d!31011))

(declare-fun lt!57022 () Bool)

(declare-fun d!31093 () Bool)

(assert (=> d!31093 (= lt!57022 (select (content!114 (toList!789 lt!56873)) (tuple2!2389 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun e!71870 () Bool)

(assert (=> d!31093 (= lt!57022 e!71870)))

(declare-fun res!54648 () Bool)

(assert (=> d!31093 (=> (not res!54648) (not e!71870))))

(assert (=> d!31093 (= res!54648 ((_ is Cons!1605) (toList!789 lt!56873)))))

(assert (=> d!31093 (= (contains!827 (toList!789 lt!56873) (tuple2!2389 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992))))) lt!57022)))

(declare-fun b!110511 () Bool)

(declare-fun e!71869 () Bool)

(assert (=> b!110511 (= e!71870 e!71869)))

(declare-fun res!54647 () Bool)

(assert (=> b!110511 (=> res!54647 e!71869)))

(assert (=> b!110511 (= res!54647 (= (h!2204 (toList!789 lt!56873)) (tuple2!2389 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun b!110512 () Bool)

(assert (=> b!110512 (= e!71869 (contains!827 (t!5738 (toList!789 lt!56873)) (tuple2!2389 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))))

(assert (= (and d!31093 res!54648) b!110511))

(assert (= (and b!110511 (not res!54647)) b!110512))

(declare-fun m!125337 () Bool)

(assert (=> d!31093 m!125337))

(declare-fun m!125339 () Bool)

(assert (=> d!31093 m!125339))

(declare-fun m!125341 () Bool)

(assert (=> b!110512 m!125341))

(assert (=> b!110267 d!31093))

(declare-fun d!31095 () Bool)

(assert (=> d!31095 (isDefined!111 (getValueByKey!159 (toList!789 call!11712) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(declare-fun lt!57023 () Unit!3382)

(assert (=> d!31095 (= lt!57023 (choose!696 (toList!789 call!11712) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(declare-fun e!71871 () Bool)

(assert (=> d!31095 e!71871))

(declare-fun res!54649 () Bool)

(assert (=> d!31095 (=> (not res!54649) (not e!71871))))

(assert (=> d!31095 (= res!54649 (isStrictlySorted!298 (toList!789 call!11712)))))

(assert (=> d!31095 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 call!11712) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) lt!57023)))

(declare-fun b!110513 () Bool)

(assert (=> b!110513 (= e!71871 (containsKey!162 (toList!789 call!11712) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(assert (= (and d!31095 res!54649) b!110513))

(assert (=> d!31095 m!124087))

(assert (=> d!31095 m!125019))

(assert (=> d!31095 m!125019))

(assert (=> d!31095 m!125021))

(assert (=> d!31095 m!124087))

(declare-fun m!125343 () Bool)

(assert (=> d!31095 m!125343))

(declare-fun m!125345 () Bool)

(assert (=> d!31095 m!125345))

(assert (=> b!110513 m!124087))

(assert (=> b!110513 m!125015))

(assert (=> b!110319 d!31095))

(declare-fun d!31097 () Bool)

(assert (=> d!31097 (= (isDefined!111 (getValueByKey!159 (toList!789 call!11712) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355))) (not (isEmpty!383 (getValueByKey!159 (toList!789 call!11712) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))))

(declare-fun bs!4550 () Bool)

(assert (= bs!4550 d!31097))

(assert (=> bs!4550 m!125019))

(declare-fun m!125347 () Bool)

(assert (=> bs!4550 m!125347))

(assert (=> b!110319 d!31097))

(declare-fun b!110517 () Bool)

(declare-fun e!71873 () Option!165)

(assert (=> b!110517 (= e!71873 None!163)))

(declare-fun b!110514 () Bool)

(declare-fun e!71872 () Option!165)

(assert (=> b!110514 (= e!71872 (Some!164 (_2!1205 (h!2204 (toList!789 call!11712)))))))

(declare-fun b!110516 () Bool)

(assert (=> b!110516 (= e!71873 (getValueByKey!159 (t!5738 (toList!789 call!11712)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(declare-fun d!31099 () Bool)

(declare-fun c!19603 () Bool)

(assert (=> d!31099 (= c!19603 (and ((_ is Cons!1605) (toList!789 call!11712)) (= (_1!1205 (h!2204 (toList!789 call!11712))) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355))))))

(assert (=> d!31099 (= (getValueByKey!159 (toList!789 call!11712) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) e!71872)))

(declare-fun b!110515 () Bool)

(assert (=> b!110515 (= e!71872 e!71873)))

(declare-fun c!19604 () Bool)

(assert (=> b!110515 (= c!19604 (and ((_ is Cons!1605) (toList!789 call!11712)) (not (= (_1!1205 (h!2204 (toList!789 call!11712))) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))))

(assert (= (and d!31099 c!19603) b!110514))

(assert (= (and d!31099 (not c!19603)) b!110515))

(assert (= (and b!110515 c!19604) b!110516))

(assert (= (and b!110515 (not c!19604)) b!110517))

(assert (=> b!110516 m!124087))

(declare-fun m!125349 () Bool)

(assert (=> b!110516 m!125349))

(assert (=> b!110319 d!31099))

(declare-fun d!31101 () Bool)

(declare-fun c!19605 () Bool)

(assert (=> d!31101 (= c!19605 ((_ is Nil!1606) (toList!789 lt!56454)))))

(declare-fun e!71874 () (InoxSet tuple2!2388))

(assert (=> d!31101 (= (content!114 (toList!789 lt!56454)) e!71874)))

(declare-fun b!110518 () Bool)

(assert (=> b!110518 (= e!71874 ((as const (Array tuple2!2388 Bool)) false))))

(declare-fun b!110519 () Bool)

(assert (=> b!110519 (= e!71874 ((_ map or) (store ((as const (Array tuple2!2388 Bool)) false) (h!2204 (toList!789 lt!56454)) true) (content!114 (t!5738 (toList!789 lt!56454)))))))

(assert (= (and d!31101 c!19605) b!110518))

(assert (= (and d!31101 (not c!19605)) b!110519))

(declare-fun m!125351 () Bool)

(assert (=> b!110519 m!125351))

(declare-fun m!125353 () Bool)

(assert (=> b!110519 m!125353))

(assert (=> d!30895 d!31101))

(declare-fun b!110523 () Bool)

(declare-fun e!71876 () Option!165)

(assert (=> b!110523 (= e!71876 None!163)))

(declare-fun b!110520 () Bool)

(declare-fun e!71875 () Option!165)

(assert (=> b!110520 (= e!71875 (Some!164 (_2!1205 (h!2204 (t!5738 lt!56457)))))))

(declare-fun b!110522 () Bool)

(assert (=> b!110522 (= e!71876 (getValueByKey!159 (t!5738 (t!5738 lt!56457)) (_1!1205 lt!56363)))))

(declare-fun d!31103 () Bool)

(declare-fun c!19606 () Bool)

(assert (=> d!31103 (= c!19606 (and ((_ is Cons!1605) (t!5738 lt!56457)) (= (_1!1205 (h!2204 (t!5738 lt!56457))) (_1!1205 lt!56363))))))

(assert (=> d!31103 (= (getValueByKey!159 (t!5738 lt!56457) (_1!1205 lt!56363)) e!71875)))

(declare-fun b!110521 () Bool)

(assert (=> b!110521 (= e!71875 e!71876)))

(declare-fun c!19607 () Bool)

(assert (=> b!110521 (= c!19607 (and ((_ is Cons!1605) (t!5738 lt!56457)) (not (= (_1!1205 (h!2204 (t!5738 lt!56457))) (_1!1205 lt!56363)))))))

(assert (= (and d!31103 c!19606) b!110520))

(assert (= (and d!31103 (not c!19606)) b!110521))

(assert (= (and b!110521 c!19607) b!110522))

(assert (= (and b!110521 (not c!19607)) b!110523))

(declare-fun m!125355 () Bool)

(assert (=> b!110522 m!125355))

(assert (=> b!110196 d!31103))

(declare-fun d!31105 () Bool)

(declare-fun res!54650 () Bool)

(declare-fun e!71877 () Bool)

(assert (=> d!31105 (=> res!54650 e!71877)))

(assert (=> d!31105 (= res!54650 (and ((_ is Cons!1605) lt!56486) (= (_1!1205 (h!2204 lt!56486)) (_1!1205 lt!56370))))))

(assert (=> d!31105 (= (containsKey!162 lt!56486 (_1!1205 lt!56370)) e!71877)))

(declare-fun b!110524 () Bool)

(declare-fun e!71878 () Bool)

(assert (=> b!110524 (= e!71877 e!71878)))

(declare-fun res!54651 () Bool)

(assert (=> b!110524 (=> (not res!54651) (not e!71878))))

(assert (=> b!110524 (= res!54651 (and (or (not ((_ is Cons!1605) lt!56486)) (bvsle (_1!1205 (h!2204 lt!56486)) (_1!1205 lt!56370))) ((_ is Cons!1605) lt!56486) (bvslt (_1!1205 (h!2204 lt!56486)) (_1!1205 lt!56370))))))

(declare-fun b!110525 () Bool)

(assert (=> b!110525 (= e!71878 (containsKey!162 (t!5738 lt!56486) (_1!1205 lt!56370)))))

(assert (= (and d!31105 (not res!54650)) b!110524))

(assert (= (and b!110524 res!54651) b!110525))

(declare-fun m!125357 () Bool)

(assert (=> b!110525 m!125357))

(assert (=> b!110380 d!31105))

(declare-fun d!31107 () Bool)

(assert (=> d!31107 (= (isDefined!111 (getValueByKey!159 (toList!789 e!71536) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355))) (not (isEmpty!383 (getValueByKey!159 (toList!789 e!71536) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))))

(declare-fun bs!4551 () Bool)

(assert (= bs!4551 d!31107))

(assert (=> bs!4551 m!124599))

(declare-fun m!125359 () Bool)

(assert (=> bs!4551 m!125359))

(assert (=> b!110090 d!31107))

(declare-fun b!110529 () Bool)

(declare-fun e!71880 () Option!165)

(assert (=> b!110529 (= e!71880 None!163)))

(declare-fun b!110526 () Bool)

(declare-fun e!71879 () Option!165)

(assert (=> b!110526 (= e!71879 (Some!164 (_2!1205 (h!2204 (toList!789 e!71536)))))))

(declare-fun b!110528 () Bool)

(assert (=> b!110528 (= e!71880 (getValueByKey!159 (t!5738 (toList!789 e!71536)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(declare-fun d!31109 () Bool)

(declare-fun c!19608 () Bool)

(assert (=> d!31109 (= c!19608 (and ((_ is Cons!1605) (toList!789 e!71536)) (= (_1!1205 (h!2204 (toList!789 e!71536))) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355))))))

(assert (=> d!31109 (= (getValueByKey!159 (toList!789 e!71536) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) e!71879)))

(declare-fun b!110527 () Bool)

(assert (=> b!110527 (= e!71879 e!71880)))

(declare-fun c!19609 () Bool)

(assert (=> b!110527 (= c!19609 (and ((_ is Cons!1605) (toList!789 e!71536)) (not (= (_1!1205 (h!2204 (toList!789 e!71536))) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))))

(assert (= (and d!31109 c!19608) b!110526))

(assert (= (and d!31109 (not c!19608)) b!110527))

(assert (= (and b!110527 c!19609) b!110528))

(assert (= (and b!110527 (not c!19609)) b!110529))

(assert (=> b!110528 m!124087))

(declare-fun m!125361 () Bool)

(assert (=> b!110528 m!125361))

(assert (=> b!110090 d!31109))

(declare-fun d!31111 () Bool)

(declare-fun lt!57024 () Bool)

(assert (=> d!31111 (= lt!57024 (select (content!114 lt!56852) (tuple2!2389 (_1!1205 lt!56363) (_2!1205 lt!56363))))))

(declare-fun e!71882 () Bool)

(assert (=> d!31111 (= lt!57024 e!71882)))

(declare-fun res!54653 () Bool)

(assert (=> d!31111 (=> (not res!54653) (not e!71882))))

(assert (=> d!31111 (= res!54653 ((_ is Cons!1605) lt!56852))))

(assert (=> d!31111 (= (contains!827 lt!56852 (tuple2!2389 (_1!1205 lt!56363) (_2!1205 lt!56363))) lt!57024)))

(declare-fun b!110530 () Bool)

(declare-fun e!71881 () Bool)

(assert (=> b!110530 (= e!71882 e!71881)))

(declare-fun res!54652 () Bool)

(assert (=> b!110530 (=> res!54652 e!71881)))

(assert (=> b!110530 (= res!54652 (= (h!2204 lt!56852) (tuple2!2389 (_1!1205 lt!56363) (_2!1205 lt!56363))))))

(declare-fun b!110531 () Bool)

(assert (=> b!110531 (= e!71881 (contains!827 (t!5738 lt!56852) (tuple2!2389 (_1!1205 lt!56363) (_2!1205 lt!56363))))))

(assert (= (and d!31111 res!54653) b!110530))

(assert (= (and b!110530 (not res!54652)) b!110531))

(declare-fun m!125363 () Bool)

(assert (=> d!31111 m!125363))

(declare-fun m!125365 () Bool)

(assert (=> d!31111 m!125365))

(declare-fun m!125367 () Bool)

(assert (=> b!110531 m!125367))

(assert (=> b!110232 d!31111))

(declare-fun d!31113 () Bool)

(assert (=> d!31113 (= (get!1356 (getValueByKey!159 (toList!789 lt!56545) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2936 (getValueByKey!159 (toList!789 lt!56545) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!31017 d!31113))

(declare-fun b!110535 () Bool)

(declare-fun e!71884 () Option!165)

(assert (=> b!110535 (= e!71884 None!163)))

(declare-fun b!110532 () Bool)

(declare-fun e!71883 () Option!165)

(assert (=> b!110532 (= e!71883 (Some!164 (_2!1205 (h!2204 (toList!789 lt!56545)))))))

(declare-fun b!110534 () Bool)

(assert (=> b!110534 (= e!71884 (getValueByKey!159 (t!5738 (toList!789 lt!56545)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun d!31115 () Bool)

(declare-fun c!19610 () Bool)

(assert (=> d!31115 (= c!19610 (and ((_ is Cons!1605) (toList!789 lt!56545)) (= (_1!1205 (h!2204 (toList!789 lt!56545))) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!31115 (= (getValueByKey!159 (toList!789 lt!56545) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!71883)))

(declare-fun b!110533 () Bool)

(assert (=> b!110533 (= e!71883 e!71884)))

(declare-fun c!19611 () Bool)

(assert (=> b!110533 (= c!19611 (and ((_ is Cons!1605) (toList!789 lt!56545)) (not (= (_1!1205 (h!2204 (toList!789 lt!56545))) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(assert (= (and d!31115 c!19610) b!110532))

(assert (= (and d!31115 (not c!19610)) b!110533))

(assert (= (and b!110533 c!19611) b!110534))

(assert (= (and b!110533 (not c!19611)) b!110535))

(assert (=> b!110534 m!124267))

(declare-fun m!125369 () Bool)

(assert (=> b!110534 m!125369))

(assert (=> d!31017 d!31115))

(declare-fun d!31117 () Bool)

(declare-fun e!71886 () Bool)

(assert (=> d!31117 e!71886))

(declare-fun res!54654 () Bool)

(assert (=> d!31117 (=> res!54654 e!71886)))

(declare-fun lt!57027 () Bool)

(assert (=> d!31117 (= res!54654 (not lt!57027))))

(declare-fun lt!57028 () Bool)

(assert (=> d!31117 (= lt!57027 lt!57028)))

(declare-fun lt!57025 () Unit!3382)

(declare-fun e!71885 () Unit!3382)

(assert (=> d!31117 (= lt!57025 e!71885)))

(declare-fun c!19612 () Bool)

(assert (=> d!31117 (= c!19612 lt!57028)))

(assert (=> d!31117 (= lt!57028 (containsKey!162 (toList!789 lt!56831) (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!31117 (= (contains!824 lt!56831 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)) lt!57027)))

(declare-fun b!110536 () Bool)

(declare-fun lt!57026 () Unit!3382)

(assert (=> b!110536 (= e!71885 lt!57026)))

(assert (=> b!110536 (= lt!57026 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 lt!56831) (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!110536 (isDefined!111 (getValueByKey!159 (toList!789 lt!56831) (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!110537 () Bool)

(declare-fun Unit!3415 () Unit!3382)

(assert (=> b!110537 (= e!71885 Unit!3415)))

(declare-fun b!110538 () Bool)

(assert (=> b!110538 (= e!71886 (isDefined!111 (getValueByKey!159 (toList!789 lt!56831) (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!31117 c!19612) b!110536))

(assert (= (and d!31117 (not c!19612)) b!110537))

(assert (= (and d!31117 (not res!54654)) b!110538))

(assert (=> d!31117 m!124605))

(declare-fun m!125371 () Bool)

(assert (=> d!31117 m!125371))

(assert (=> b!110536 m!124605))

(declare-fun m!125373 () Bool)

(assert (=> b!110536 m!125373))

(assert (=> b!110536 m!124605))

(declare-fun m!125375 () Bool)

(assert (=> b!110536 m!125375))

(assert (=> b!110536 m!125375))

(declare-fun m!125377 () Bool)

(assert (=> b!110536 m!125377))

(assert (=> b!110538 m!124605))

(assert (=> b!110538 m!125375))

(assert (=> b!110538 m!125375))

(assert (=> b!110538 m!125377))

(assert (=> b!110167 d!31117))

(declare-fun d!31119 () Bool)

(declare-fun e!71887 () Bool)

(assert (=> d!31119 e!71887))

(declare-fun res!54656 () Bool)

(assert (=> d!31119 (=> (not res!54656) (not e!71887))))

(declare-fun lt!57032 () ListLongMap!1547)

(assert (=> d!31119 (= res!54656 (contains!824 lt!57032 (_1!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16)))))))

(declare-fun lt!57031 () List!1609)

(assert (=> d!31119 (= lt!57032 (ListLongMap!1548 lt!57031))))

(declare-fun lt!57030 () Unit!3382)

(declare-fun lt!57029 () Unit!3382)

(assert (=> d!31119 (= lt!57030 lt!57029)))

(assert (=> d!31119 (= (getValueByKey!159 lt!57031 (_1!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16)))) (Some!164 (_2!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16)))))))

(assert (=> d!31119 (= lt!57029 (lemmaContainsTupThenGetReturnValue!75 lt!57031 (_1!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16))) (_2!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16)))))))

(assert (=> d!31119 (= lt!57031 (insertStrictlySorted!78 (toList!789 call!11761) (_1!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16))) (_2!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16)))))))

(assert (=> d!31119 (= (+!144 call!11761 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16))) lt!57032)))

(declare-fun b!110539 () Bool)

(declare-fun res!54655 () Bool)

(assert (=> b!110539 (=> (not res!54655) (not e!71887))))

(assert (=> b!110539 (= res!54655 (= (getValueByKey!159 (toList!789 lt!57032) (_1!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16)))) (Some!164 (_2!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16))))))))

(declare-fun b!110540 () Bool)

(assert (=> b!110540 (= e!71887 (contains!827 (toList!789 lt!57032) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16))))))

(assert (= (and d!31119 res!54656) b!110539))

(assert (= (and b!110539 res!54655) b!110540))

(declare-fun m!125379 () Bool)

(assert (=> d!31119 m!125379))

(declare-fun m!125381 () Bool)

(assert (=> d!31119 m!125381))

(declare-fun m!125383 () Bool)

(assert (=> d!31119 m!125383))

(declare-fun m!125385 () Bool)

(assert (=> d!31119 m!125385))

(declare-fun m!125387 () Bool)

(assert (=> b!110539 m!125387))

(declare-fun m!125389 () Bool)

(assert (=> b!110540 m!125389))

(assert (=> b!110288 d!31119))

(declare-fun d!31121 () Bool)

(declare-fun e!71889 () Bool)

(assert (=> d!31121 e!71889))

(declare-fun res!54657 () Bool)

(assert (=> d!31121 (=> res!54657 e!71889)))

(declare-fun lt!57035 () Bool)

(assert (=> d!31121 (= res!54657 (not lt!57035))))

(declare-fun lt!57036 () Bool)

(assert (=> d!31121 (= lt!57035 lt!57036)))

(declare-fun lt!57033 () Unit!3382)

(declare-fun e!71888 () Unit!3382)

(assert (=> d!31121 (= lt!57033 e!71888)))

(declare-fun c!19613 () Bool)

(assert (=> d!31121 (= c!19613 lt!57036)))

(assert (=> d!31121 (= lt!57036 (containsKey!162 (toList!789 lt!56887) (_1!1205 (tuple2!2389 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> d!31121 (= (contains!824 lt!56887 (_1!1205 (tuple2!2389 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))) lt!57035)))

(declare-fun b!110541 () Bool)

(declare-fun lt!57034 () Unit!3382)

(assert (=> b!110541 (= e!71888 lt!57034)))

(assert (=> b!110541 (= lt!57034 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 lt!56887) (_1!1205 (tuple2!2389 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> b!110541 (isDefined!111 (getValueByKey!159 (toList!789 lt!56887) (_1!1205 (tuple2!2389 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun b!110542 () Bool)

(declare-fun Unit!3416 () Unit!3382)

(assert (=> b!110542 (= e!71888 Unit!3416)))

(declare-fun b!110543 () Bool)

(assert (=> b!110543 (= e!71889 (isDefined!111 (getValueByKey!159 (toList!789 lt!56887) (_1!1205 (tuple2!2389 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(assert (= (and d!31121 c!19613) b!110541))

(assert (= (and d!31121 (not c!19613)) b!110542))

(assert (= (and d!31121 (not res!54657)) b!110543))

(declare-fun m!125391 () Bool)

(assert (=> d!31121 m!125391))

(declare-fun m!125393 () Bool)

(assert (=> b!110541 m!125393))

(assert (=> b!110541 m!124875))

(assert (=> b!110541 m!124875))

(declare-fun m!125395 () Bool)

(assert (=> b!110541 m!125395))

(assert (=> b!110543 m!124875))

(assert (=> b!110543 m!124875))

(assert (=> b!110543 m!125395))

(assert (=> d!30943 d!31121))

(declare-fun b!110547 () Bool)

(declare-fun e!71891 () Option!165)

(assert (=> b!110547 (= e!71891 None!163)))

(declare-fun b!110544 () Bool)

(declare-fun e!71890 () Option!165)

(assert (=> b!110544 (= e!71890 (Some!164 (_2!1205 (h!2204 lt!56886))))))

(declare-fun b!110546 () Bool)

(assert (=> b!110546 (= e!71891 (getValueByKey!159 (t!5738 lt!56886) (_1!1205 (tuple2!2389 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun c!19614 () Bool)

(declare-fun d!31123 () Bool)

(assert (=> d!31123 (= c!19614 (and ((_ is Cons!1605) lt!56886) (= (_1!1205 (h!2204 lt!56886)) (_1!1205 (tuple2!2389 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> d!31123 (= (getValueByKey!159 lt!56886 (_1!1205 (tuple2!2389 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))) e!71890)))

(declare-fun b!110545 () Bool)

(assert (=> b!110545 (= e!71890 e!71891)))

(declare-fun c!19615 () Bool)

(assert (=> b!110545 (= c!19615 (and ((_ is Cons!1605) lt!56886) (not (= (_1!1205 (h!2204 lt!56886)) (_1!1205 (tuple2!2389 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))))

(assert (= (and d!31123 c!19614) b!110544))

(assert (= (and d!31123 (not c!19614)) b!110545))

(assert (= (and b!110545 c!19615) b!110546))

(assert (= (and b!110545 (not c!19615)) b!110547))

(declare-fun m!125397 () Bool)

(assert (=> b!110546 m!125397))

(assert (=> d!30943 d!31123))

(declare-fun d!31125 () Bool)

(assert (=> d!31125 (= (getValueByKey!159 lt!56886 (_1!1205 (tuple2!2389 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))) (Some!164 (_2!1205 (tuple2!2389 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun lt!57037 () Unit!3382)

(assert (=> d!31125 (= lt!57037 (choose!695 lt!56886 (_1!1205 (tuple2!2389 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992))))) (_2!1205 (tuple2!2389 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun e!71892 () Bool)

(assert (=> d!31125 e!71892))

(declare-fun res!54658 () Bool)

(assert (=> d!31125 (=> (not res!54658) (not e!71892))))

(assert (=> d!31125 (= res!54658 (isStrictlySorted!298 lt!56886))))

(assert (=> d!31125 (= (lemmaContainsTupThenGetReturnValue!75 lt!56886 (_1!1205 (tuple2!2389 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992))))) (_2!1205 (tuple2!2389 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))) lt!57037)))

(declare-fun b!110548 () Bool)

(declare-fun res!54659 () Bool)

(assert (=> b!110548 (=> (not res!54659) (not e!71892))))

(assert (=> b!110548 (= res!54659 (containsKey!162 lt!56886 (_1!1205 (tuple2!2389 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun b!110549 () Bool)

(assert (=> b!110549 (= e!71892 (contains!827 lt!56886 (tuple2!2389 (_1!1205 (tuple2!2389 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992))))) (_2!1205 (tuple2!2389 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(assert (= (and d!31125 res!54658) b!110548))

(assert (= (and b!110548 res!54659) b!110549))

(assert (=> d!31125 m!124869))

(declare-fun m!125399 () Bool)

(assert (=> d!31125 m!125399))

(declare-fun m!125401 () Bool)

(assert (=> d!31125 m!125401))

(declare-fun m!125403 () Bool)

(assert (=> b!110548 m!125403))

(declare-fun m!125405 () Bool)

(assert (=> b!110549 m!125405))

(assert (=> d!30943 d!31125))

(declare-fun b!110550 () Bool)

(declare-fun e!71895 () List!1609)

(assert (=> b!110550 (= e!71895 (insertStrictlySorted!78 (t!5738 (toList!789 lt!56554)) (_1!1205 (tuple2!2389 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992))))) (_2!1205 (tuple2!2389 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun b!110551 () Bool)

(declare-fun res!54661 () Bool)

(declare-fun e!71897 () Bool)

(assert (=> b!110551 (=> (not res!54661) (not e!71897))))

(declare-fun lt!57038 () List!1609)

(assert (=> b!110551 (= res!54661 (containsKey!162 lt!57038 (_1!1205 (tuple2!2389 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun b!110552 () Bool)

(declare-fun e!71896 () List!1609)

(declare-fun call!11789 () List!1609)

(assert (=> b!110552 (= e!71896 call!11789)))

(declare-fun bm!11785 () Bool)

(declare-fun call!11790 () List!1609)

(declare-fun call!11788 () List!1609)

(assert (=> bm!11785 (= call!11790 call!11788)))

(declare-fun bm!11786 () Bool)

(assert (=> bm!11786 (= call!11789 call!11790)))

(declare-fun b!110553 () Bool)

(assert (=> b!110553 (= e!71896 call!11789)))

(declare-fun c!19618 () Bool)

(declare-fun bm!11787 () Bool)

(assert (=> bm!11787 (= call!11788 ($colon$colon!82 e!71895 (ite c!19618 (h!2204 (toList!789 lt!56554)) (tuple2!2389 (_1!1205 (tuple2!2389 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992))))) (_2!1205 (tuple2!2389 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))))

(declare-fun c!19619 () Bool)

(assert (=> bm!11787 (= c!19619 c!19618)))

(declare-fun b!110554 () Bool)

(declare-fun e!71894 () List!1609)

(assert (=> b!110554 (= e!71894 call!11790)))

(declare-fun d!31127 () Bool)

(assert (=> d!31127 e!71897))

(declare-fun res!54660 () Bool)

(assert (=> d!31127 (=> (not res!54660) (not e!71897))))

(assert (=> d!31127 (= res!54660 (isStrictlySorted!298 lt!57038))))

(declare-fun e!71893 () List!1609)

(assert (=> d!31127 (= lt!57038 e!71893)))

(assert (=> d!31127 (= c!19618 (and ((_ is Cons!1605) (toList!789 lt!56554)) (bvslt (_1!1205 (h!2204 (toList!789 lt!56554))) (_1!1205 (tuple2!2389 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> d!31127 (isStrictlySorted!298 (toList!789 lt!56554))))

(assert (=> d!31127 (= (insertStrictlySorted!78 (toList!789 lt!56554) (_1!1205 (tuple2!2389 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992))))) (_2!1205 (tuple2!2389 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))) lt!57038)))

(declare-fun b!110555 () Bool)

(assert (=> b!110555 (= e!71893 call!11788)))

(declare-fun b!110556 () Bool)

(declare-fun c!19616 () Bool)

(assert (=> b!110556 (= c!19616 (and ((_ is Cons!1605) (toList!789 lt!56554)) (bvsgt (_1!1205 (h!2204 (toList!789 lt!56554))) (_1!1205 (tuple2!2389 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> b!110556 (= e!71894 e!71896)))

(declare-fun b!110557 () Bool)

(declare-fun c!19617 () Bool)

(assert (=> b!110557 (= e!71895 (ite c!19617 (t!5738 (toList!789 lt!56554)) (ite c!19616 (Cons!1605 (h!2204 (toList!789 lt!56554)) (t!5738 (toList!789 lt!56554))) Nil!1606)))))

(declare-fun b!110558 () Bool)

(assert (=> b!110558 (= e!71897 (contains!827 lt!57038 (tuple2!2389 (_1!1205 (tuple2!2389 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992))))) (_2!1205 (tuple2!2389 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(declare-fun b!110559 () Bool)

(assert (=> b!110559 (= e!71893 e!71894)))

(assert (=> b!110559 (= c!19617 (and ((_ is Cons!1605) (toList!789 lt!56554)) (= (_1!1205 (h!2204 (toList!789 lt!56554))) (_1!1205 (tuple2!2389 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(assert (= (and d!31127 c!19618) b!110555))

(assert (= (and d!31127 (not c!19618)) b!110559))

(assert (= (and b!110559 c!19617) b!110554))

(assert (= (and b!110559 (not c!19617)) b!110556))

(assert (= (and b!110556 c!19616) b!110552))

(assert (= (and b!110556 (not c!19616)) b!110553))

(assert (= (or b!110552 b!110553) bm!11786))

(assert (= (or b!110554 bm!11786) bm!11785))

(assert (= (or b!110555 bm!11785) bm!11787))

(assert (= (and bm!11787 c!19619) b!110550))

(assert (= (and bm!11787 (not c!19619)) b!110557))

(assert (= (and d!31127 res!54660) b!110551))

(assert (= (and b!110551 res!54661) b!110558))

(declare-fun m!125407 () Bool)

(assert (=> bm!11787 m!125407))

(declare-fun m!125409 () Bool)

(assert (=> b!110558 m!125409))

(declare-fun m!125411 () Bool)

(assert (=> b!110551 m!125411))

(declare-fun m!125413 () Bool)

(assert (=> d!31127 m!125413))

(declare-fun m!125415 () Bool)

(assert (=> d!31127 m!125415))

(declare-fun m!125417 () Bool)

(assert (=> b!110550 m!125417))

(assert (=> d!30943 d!31127))

(assert (=> d!31039 d!31037))

(declare-fun d!31129 () Bool)

(assert (=> d!31129 (= (getValueByKey!159 lt!56453 (_1!1205 lt!56370)) (Some!164 (_2!1205 lt!56370)))))

(assert (=> d!31129 true))

(declare-fun _$22!445 () Unit!3382)

(assert (=> d!31129 (= (choose!695 lt!56453 (_1!1205 lt!56370) (_2!1205 lt!56370)) _$22!445)))

(declare-fun bs!4552 () Bool)

(assert (= bs!4552 d!31129))

(assert (=> bs!4552 m!124245))

(assert (=> d!31039 d!31129))

(declare-fun d!31131 () Bool)

(declare-fun res!54666 () Bool)

(declare-fun e!71902 () Bool)

(assert (=> d!31131 (=> res!54666 e!71902)))

(assert (=> d!31131 (= res!54666 (or ((_ is Nil!1606) lt!56453) ((_ is Nil!1606) (t!5738 lt!56453))))))

(assert (=> d!31131 (= (isStrictlySorted!298 lt!56453) e!71902)))

(declare-fun b!110564 () Bool)

(declare-fun e!71903 () Bool)

(assert (=> b!110564 (= e!71902 e!71903)))

(declare-fun res!54667 () Bool)

(assert (=> b!110564 (=> (not res!54667) (not e!71903))))

(assert (=> b!110564 (= res!54667 (bvslt (_1!1205 (h!2204 lt!56453)) (_1!1205 (h!2204 (t!5738 lt!56453)))))))

(declare-fun b!110565 () Bool)

(assert (=> b!110565 (= e!71903 (isStrictlySorted!298 (t!5738 lt!56453)))))

(assert (= (and d!31131 (not res!54666)) b!110564))

(assert (= (and b!110564 res!54667) b!110565))

(declare-fun m!125419 () Bool)

(assert (=> b!110565 m!125419))

(assert (=> d!31039 d!31131))

(declare-fun d!31133 () Bool)

(declare-fun lt!57039 () Bool)

(assert (=> d!31133 (= lt!57039 (select (content!114 (toList!789 lt!56896)) (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun e!71905 () Bool)

(assert (=> d!31133 (= lt!57039 e!71905)))

(declare-fun res!54669 () Bool)

(assert (=> d!31133 (=> (not res!54669) (not e!71905))))

(assert (=> d!31133 (= res!54669 ((_ is Cons!1605) (toList!789 lt!56896)))))

(assert (=> d!31133 (= (contains!827 (toList!789 lt!56896) (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))) lt!57039)))

(declare-fun b!110566 () Bool)

(declare-fun e!71904 () Bool)

(assert (=> b!110566 (= e!71905 e!71904)))

(declare-fun res!54668 () Bool)

(assert (=> b!110566 (=> res!54668 e!71904)))

(assert (=> b!110566 (= res!54668 (= (h!2204 (toList!789 lt!56896)) (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun b!110567 () Bool)

(assert (=> b!110567 (= e!71904 (contains!827 (t!5738 (toList!789 lt!56896)) (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))))

(assert (= (and d!31133 res!54669) b!110566))

(assert (= (and b!110566 (not res!54668)) b!110567))

(declare-fun m!125421 () Bool)

(assert (=> d!31133 m!125421))

(declare-fun m!125423 () Bool)

(assert (=> d!31133 m!125423))

(declare-fun m!125425 () Bool)

(assert (=> b!110567 m!125425))

(assert (=> b!110282 d!31133))

(declare-fun d!31135 () Bool)

(declare-fun e!71907 () Bool)

(assert (=> d!31135 e!71907))

(declare-fun res!54670 () Bool)

(assert (=> d!31135 (=> res!54670 e!71907)))

(declare-fun lt!57042 () Bool)

(assert (=> d!31135 (= res!54670 (not lt!57042))))

(declare-fun lt!57043 () Bool)

(assert (=> d!31135 (= lt!57042 lt!57043)))

(declare-fun lt!57040 () Unit!3382)

(declare-fun e!71906 () Unit!3382)

(assert (=> d!31135 (= lt!57040 e!71906)))

(declare-fun c!19620 () Bool)

(assert (=> d!31135 (= c!19620 lt!57043)))

(assert (=> d!31135 (= lt!57043 (containsKey!162 (toList!789 lt!56923) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))

(assert (=> d!31135 (= (contains!824 lt!56923 (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))) lt!57042)))

(declare-fun b!110568 () Bool)

(declare-fun lt!57041 () Unit!3382)

(assert (=> b!110568 (= e!71906 lt!57041)))

(assert (=> b!110568 (= lt!57041 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 lt!56923) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))

(assert (=> b!110568 (isDefined!111 (getValueByKey!159 (toList!789 lt!56923) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))

(declare-fun b!110569 () Bool)

(declare-fun Unit!3417 () Unit!3382)

(assert (=> b!110569 (= e!71906 Unit!3417)))

(declare-fun b!110570 () Bool)

(assert (=> b!110570 (= e!71907 (isDefined!111 (getValueByKey!159 (toList!789 lt!56923) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))))))

(assert (= (and d!31135 c!19620) b!110568))

(assert (= (and d!31135 (not c!19620)) b!110569))

(assert (= (and d!31135 (not res!54670)) b!110570))

(declare-fun m!125427 () Bool)

(assert (=> d!31135 m!125427))

(declare-fun m!125429 () Bool)

(assert (=> b!110568 m!125429))

(assert (=> b!110568 m!124989))

(assert (=> b!110568 m!124989))

(declare-fun m!125431 () Bool)

(assert (=> b!110568 m!125431))

(assert (=> b!110570 m!124989))

(assert (=> b!110570 m!124989))

(assert (=> b!110570 m!125431))

(assert (=> d!30967 d!31135))

(declare-fun b!110574 () Bool)

(declare-fun e!71909 () Option!165)

(assert (=> b!110574 (= e!71909 None!163)))

(declare-fun b!110571 () Bool)

(declare-fun e!71908 () Option!165)

(assert (=> b!110571 (= e!71908 (Some!164 (_2!1205 (h!2204 lt!56922))))))

(declare-fun b!110573 () Bool)

(assert (=> b!110573 (= e!71909 (getValueByKey!159 (t!5738 lt!56922) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))

(declare-fun c!19621 () Bool)

(declare-fun d!31137 () Bool)

(assert (=> d!31137 (= c!19621 (and ((_ is Cons!1605) lt!56922) (= (_1!1205 (h!2204 lt!56922)) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))))))

(assert (=> d!31137 (= (getValueByKey!159 lt!56922 (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))) e!71908)))

(declare-fun b!110572 () Bool)

(assert (=> b!110572 (= e!71908 e!71909)))

(declare-fun c!19622 () Bool)

(assert (=> b!110572 (= c!19622 (and ((_ is Cons!1605) lt!56922) (not (= (_1!1205 (h!2204 lt!56922)) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))))

(assert (= (and d!31137 c!19621) b!110571))

(assert (= (and d!31137 (not c!19621)) b!110572))

(assert (= (and b!110572 c!19622) b!110573))

(assert (= (and b!110572 (not c!19622)) b!110574))

(declare-fun m!125433 () Bool)

(assert (=> b!110573 m!125433))

(assert (=> d!30967 d!31137))

(declare-fun d!31139 () Bool)

(assert (=> d!31139 (= (getValueByKey!159 lt!56922 (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))) (Some!164 (_2!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))

(declare-fun lt!57044 () Unit!3382)

(assert (=> d!31139 (= lt!57044 (choose!695 lt!56922 (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)) (_2!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))

(declare-fun e!71910 () Bool)

(assert (=> d!31139 e!71910))

(declare-fun res!54671 () Bool)

(assert (=> d!31139 (=> (not res!54671) (not e!71910))))

(assert (=> d!31139 (= res!54671 (isStrictlySorted!298 lt!56922))))

(assert (=> d!31139 (= (lemmaContainsTupThenGetReturnValue!75 lt!56922 (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)) (_2!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))) lt!57044)))

(declare-fun b!110575 () Bool)

(declare-fun res!54672 () Bool)

(assert (=> b!110575 (=> (not res!54672) (not e!71910))))

(assert (=> b!110575 (= res!54672 (containsKey!162 lt!56922 (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))

(declare-fun b!110576 () Bool)

(assert (=> b!110576 (= e!71910 (contains!827 lt!56922 (tuple2!2389 (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)) (_2!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))))))

(assert (= (and d!31139 res!54671) b!110575))

(assert (= (and b!110575 res!54672) b!110576))

(assert (=> d!31139 m!124983))

(declare-fun m!125435 () Bool)

(assert (=> d!31139 m!125435))

(declare-fun m!125437 () Bool)

(assert (=> d!31139 m!125437))

(declare-fun m!125439 () Bool)

(assert (=> b!110575 m!125439))

(declare-fun m!125441 () Bool)

(assert (=> b!110576 m!125441))

(assert (=> d!30967 d!31139))

(declare-fun e!71913 () List!1609)

(declare-fun b!110577 () Bool)

(assert (=> b!110577 (= e!71913 (insertStrictlySorted!78 (t!5738 (toList!789 call!11711)) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)) (_2!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))

(declare-fun b!110578 () Bool)

(declare-fun res!54674 () Bool)

(declare-fun e!71915 () Bool)

(assert (=> b!110578 (=> (not res!54674) (not e!71915))))

(declare-fun lt!57045 () List!1609)

(assert (=> b!110578 (= res!54674 (containsKey!162 lt!57045 (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))

(declare-fun b!110579 () Bool)

(declare-fun e!71914 () List!1609)

(declare-fun call!11792 () List!1609)

(assert (=> b!110579 (= e!71914 call!11792)))

(declare-fun bm!11788 () Bool)

(declare-fun call!11793 () List!1609)

(declare-fun call!11791 () List!1609)

(assert (=> bm!11788 (= call!11793 call!11791)))

(declare-fun bm!11789 () Bool)

(assert (=> bm!11789 (= call!11792 call!11793)))

(declare-fun b!110580 () Bool)

(assert (=> b!110580 (= e!71914 call!11792)))

(declare-fun c!19625 () Bool)

(declare-fun bm!11790 () Bool)

(assert (=> bm!11790 (= call!11791 ($colon$colon!82 e!71913 (ite c!19625 (h!2204 (toList!789 call!11711)) (tuple2!2389 (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)) (_2!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))))

(declare-fun c!19626 () Bool)

(assert (=> bm!11790 (= c!19626 c!19625)))

(declare-fun b!110581 () Bool)

(declare-fun e!71912 () List!1609)

(assert (=> b!110581 (= e!71912 call!11793)))

(declare-fun d!31141 () Bool)

(assert (=> d!31141 e!71915))

(declare-fun res!54673 () Bool)

(assert (=> d!31141 (=> (not res!54673) (not e!71915))))

(assert (=> d!31141 (= res!54673 (isStrictlySorted!298 lt!57045))))

(declare-fun e!71911 () List!1609)

(assert (=> d!31141 (= lt!57045 e!71911)))

(assert (=> d!31141 (= c!19625 (and ((_ is Cons!1605) (toList!789 call!11711)) (bvslt (_1!1205 (h!2204 (toList!789 call!11711))) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))))))

(assert (=> d!31141 (isStrictlySorted!298 (toList!789 call!11711))))

(assert (=> d!31141 (= (insertStrictlySorted!78 (toList!789 call!11711) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)) (_2!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))) lt!57045)))

(declare-fun b!110582 () Bool)

(assert (=> b!110582 (= e!71911 call!11791)))

(declare-fun b!110583 () Bool)

(declare-fun c!19623 () Bool)

(assert (=> b!110583 (= c!19623 (and ((_ is Cons!1605) (toList!789 call!11711)) (bvsgt (_1!1205 (h!2204 (toList!789 call!11711))) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))))))

(assert (=> b!110583 (= e!71912 e!71914)))

(declare-fun c!19624 () Bool)

(declare-fun b!110584 () Bool)

(assert (=> b!110584 (= e!71913 (ite c!19624 (t!5738 (toList!789 call!11711)) (ite c!19623 (Cons!1605 (h!2204 (toList!789 call!11711)) (t!5738 (toList!789 call!11711))) Nil!1606)))))

(declare-fun b!110585 () Bool)

(assert (=> b!110585 (= e!71915 (contains!827 lt!57045 (tuple2!2389 (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)) (_2!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))))))

(declare-fun b!110586 () Bool)

(assert (=> b!110586 (= e!71911 e!71912)))

(assert (=> b!110586 (= c!19624 (and ((_ is Cons!1605) (toList!789 call!11711)) (= (_1!1205 (h!2204 (toList!789 call!11711))) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))))))

(assert (= (and d!31141 c!19625) b!110582))

(assert (= (and d!31141 (not c!19625)) b!110586))

(assert (= (and b!110586 c!19624) b!110581))

(assert (= (and b!110586 (not c!19624)) b!110583))

(assert (= (and b!110583 c!19623) b!110579))

(assert (= (and b!110583 (not c!19623)) b!110580))

(assert (= (or b!110579 b!110580) bm!11789))

(assert (= (or b!110581 bm!11789) bm!11788))

(assert (= (or b!110582 bm!11788) bm!11790))

(assert (= (and bm!11790 c!19626) b!110577))

(assert (= (and bm!11790 (not c!19626)) b!110584))

(assert (= (and d!31141 res!54673) b!110578))

(assert (= (and b!110578 res!54674) b!110585))

(declare-fun m!125443 () Bool)

(assert (=> bm!11790 m!125443))

(declare-fun m!125445 () Bool)

(assert (=> b!110585 m!125445))

(declare-fun m!125447 () Bool)

(assert (=> b!110578 m!125447))

(declare-fun m!125449 () Bool)

(assert (=> d!31141 m!125449))

(declare-fun m!125451 () Bool)

(assert (=> d!31141 m!125451))

(declare-fun m!125453 () Bool)

(assert (=> b!110577 m!125453))

(assert (=> d!30967 d!31141))

(declare-fun bm!11791 () Bool)

(declare-fun call!11794 () Bool)

(assert (=> bm!11791 (= call!11794 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4340 (v!2930 (underlying!370 thiss!992))) (mask!6794 (v!2930 (underlying!370 thiss!992)))))))

(declare-fun b!110587 () Bool)

(declare-fun e!71916 () Bool)

(assert (=> b!110587 (= e!71916 call!11794)))

(declare-fun b!110588 () Bool)

(declare-fun e!71918 () Bool)

(assert (=> b!110588 (= e!71918 call!11794)))

(declare-fun b!110590 () Bool)

(assert (=> b!110590 (= e!71918 e!71916)))

(declare-fun lt!57046 () (_ BitVec 64))

(assert (=> b!110590 (= lt!57046 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!57048 () Unit!3382)

(assert (=> b!110590 (= lt!57048 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4340 (v!2930 (underlying!370 thiss!992))) lt!57046 #b00000000000000000000000000000000))))

(assert (=> b!110590 (arrayContainsKey!0 (_keys!4340 (v!2930 (underlying!370 thiss!992))) lt!57046 #b00000000000000000000000000000000)))

(declare-fun lt!57047 () Unit!3382)

(assert (=> b!110590 (= lt!57047 lt!57048)))

(declare-fun res!54675 () Bool)

(assert (=> b!110590 (= res!54675 (= (seekEntryOrOpen!0 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) #b00000000000000000000000000000000) (_keys!4340 (v!2930 (underlying!370 thiss!992))) (mask!6794 (v!2930 (underlying!370 thiss!992)))) (Found!255 #b00000000000000000000000000000000)))))

(assert (=> b!110590 (=> (not res!54675) (not e!71916))))

(declare-fun b!110589 () Bool)

(declare-fun e!71917 () Bool)

(assert (=> b!110589 (= e!71917 e!71918)))

(declare-fun c!19627 () Bool)

(assert (=> b!110589 (= c!19627 (validKeyInArray!0 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun d!31143 () Bool)

(declare-fun res!54676 () Bool)

(assert (=> d!31143 (=> res!54676 e!71917)))

(assert (=> d!31143 (= res!54676 (bvsge #b00000000000000000000000000000000 (size!2329 (_keys!4340 (v!2930 (underlying!370 thiss!992))))))))

(assert (=> d!31143 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4340 (v!2930 (underlying!370 thiss!992))) (mask!6794 (v!2930 (underlying!370 thiss!992)))) e!71917)))

(assert (= (and d!31143 (not res!54676)) b!110589))

(assert (= (and b!110589 c!19627) b!110590))

(assert (= (and b!110589 (not c!19627)) b!110588))

(assert (= (and b!110590 res!54675) b!110587))

(assert (= (or b!110587 b!110588) bm!11791))

(declare-fun m!125455 () Bool)

(assert (=> bm!11791 m!125455))

(declare-fun m!125457 () Bool)

(assert (=> b!110590 m!125457))

(declare-fun m!125459 () Bool)

(assert (=> b!110590 m!125459))

(declare-fun m!125461 () Bool)

(assert (=> b!110590 m!125461))

(assert (=> b!110590 m!125457))

(declare-fun m!125463 () Bool)

(assert (=> b!110590 m!125463))

(assert (=> b!110589 m!125457))

(assert (=> b!110589 m!125457))

(declare-fun m!125465 () Bool)

(assert (=> b!110589 m!125465))

(assert (=> b!110448 d!31143))

(declare-fun d!31145 () Bool)

(declare-fun e!71920 () Bool)

(assert (=> d!31145 e!71920))

(declare-fun res!54677 () Bool)

(assert (=> d!31145 (=> res!54677 e!71920)))

(declare-fun lt!57051 () Bool)

(assert (=> d!31145 (= res!54677 (not lt!57051))))

(declare-fun lt!57052 () Bool)

(assert (=> d!31145 (= lt!57051 lt!57052)))

(declare-fun lt!57049 () Unit!3382)

(declare-fun e!71919 () Unit!3382)

(assert (=> d!31145 (= lt!57049 e!71919)))

(declare-fun c!19628 () Bool)

(assert (=> d!31145 (= c!19628 lt!57052)))

(assert (=> d!31145 (= lt!57052 (containsKey!162 (toList!789 lt!56820) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!31145 (= (contains!824 lt!56820 #b1000000000000000000000000000000000000000000000000000000000000000) lt!57051)))

(declare-fun b!110591 () Bool)

(declare-fun lt!57050 () Unit!3382)

(assert (=> b!110591 (= e!71919 lt!57050)))

(assert (=> b!110591 (= lt!57050 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 lt!56820) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!110591 (isDefined!111 (getValueByKey!159 (toList!789 lt!56820) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110592 () Bool)

(declare-fun Unit!3418 () Unit!3382)

(assert (=> b!110592 (= e!71919 Unit!3418)))

(declare-fun b!110593 () Bool)

(assert (=> b!110593 (= e!71920 (isDefined!111 (getValueByKey!159 (toList!789 lt!56820) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!31145 c!19628) b!110591))

(assert (= (and d!31145 (not c!19628)) b!110592))

(assert (= (and d!31145 (not res!54677)) b!110593))

(declare-fun m!125467 () Bool)

(assert (=> d!31145 m!125467))

(declare-fun m!125469 () Bool)

(assert (=> b!110591 m!125469))

(declare-fun m!125471 () Bool)

(assert (=> b!110591 m!125471))

(assert (=> b!110591 m!125471))

(declare-fun m!125473 () Bool)

(assert (=> b!110591 m!125473))

(assert (=> b!110593 m!125471))

(assert (=> b!110593 m!125471))

(assert (=> b!110593 m!125473))

(assert (=> b!110157 d!31145))

(declare-fun d!31147 () Bool)

(declare-fun res!54678 () Bool)

(declare-fun e!71921 () Bool)

(assert (=> d!31147 (=> res!54678 e!71921)))

(assert (=> d!31147 (= res!54678 (and ((_ is Cons!1605) (toList!789 call!11712)) (= (_1!1205 (h!2204 (toList!789 call!11712))) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355))))))

(assert (=> d!31147 (= (containsKey!162 (toList!789 call!11712) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) e!71921)))

(declare-fun b!110594 () Bool)

(declare-fun e!71922 () Bool)

(assert (=> b!110594 (= e!71921 e!71922)))

(declare-fun res!54679 () Bool)

(assert (=> b!110594 (=> (not res!54679) (not e!71922))))

(assert (=> b!110594 (= res!54679 (and (or (not ((_ is Cons!1605) (toList!789 call!11712))) (bvsle (_1!1205 (h!2204 (toList!789 call!11712))) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355))) ((_ is Cons!1605) (toList!789 call!11712)) (bvslt (_1!1205 (h!2204 (toList!789 call!11712))) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355))))))

(declare-fun b!110595 () Bool)

(assert (=> b!110595 (= e!71922 (containsKey!162 (t!5738 (toList!789 call!11712)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(assert (= (and d!31147 (not res!54678)) b!110594))

(assert (= (and b!110594 res!54679) b!110595))

(assert (=> b!110595 m!124087))

(declare-fun m!125475 () Bool)

(assert (=> b!110595 m!125475))

(assert (=> d!30979 d!31147))

(declare-fun d!31149 () Bool)

(declare-fun e!71924 () Bool)

(assert (=> d!31149 e!71924))

(declare-fun res!54680 () Bool)

(assert (=> d!31149 (=> res!54680 e!71924)))

(declare-fun lt!57055 () Bool)

(assert (=> d!31149 (= res!54680 (not lt!57055))))

(declare-fun lt!57056 () Bool)

(assert (=> d!31149 (= lt!57055 lt!57056)))

(declare-fun lt!57053 () Unit!3382)

(declare-fun e!71923 () Unit!3382)

(assert (=> d!31149 (= lt!57053 e!71923)))

(declare-fun c!19629 () Bool)

(assert (=> d!31149 (= c!19629 lt!57056)))

(assert (=> d!31149 (= lt!57056 (containsKey!162 (toList!789 lt!56873) (_1!1205 (tuple2!2389 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> d!31149 (= (contains!824 lt!56873 (_1!1205 (tuple2!2389 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))) lt!57055)))

(declare-fun b!110596 () Bool)

(declare-fun lt!57054 () Unit!3382)

(assert (=> b!110596 (= e!71923 lt!57054)))

(assert (=> b!110596 (= lt!57054 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 lt!56873) (_1!1205 (tuple2!2389 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> b!110596 (isDefined!111 (getValueByKey!159 (toList!789 lt!56873) (_1!1205 (tuple2!2389 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun b!110597 () Bool)

(declare-fun Unit!3419 () Unit!3382)

(assert (=> b!110597 (= e!71923 Unit!3419)))

(declare-fun b!110598 () Bool)

(assert (=> b!110598 (= e!71924 (isDefined!111 (getValueByKey!159 (toList!789 lt!56873) (_1!1205 (tuple2!2389 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(assert (= (and d!31149 c!19629) b!110596))

(assert (= (and d!31149 (not c!19629)) b!110597))

(assert (= (and d!31149 (not res!54680)) b!110598))

(declare-fun m!125477 () Bool)

(assert (=> d!31149 m!125477))

(declare-fun m!125479 () Bool)

(assert (=> b!110596 m!125479))

(assert (=> b!110596 m!124839))

(assert (=> b!110596 m!124839))

(declare-fun m!125481 () Bool)

(assert (=> b!110596 m!125481))

(assert (=> b!110598 m!124839))

(assert (=> b!110598 m!124839))

(assert (=> b!110598 m!125481))

(assert (=> d!30933 d!31149))

(declare-fun b!110602 () Bool)

(declare-fun e!71926 () Option!165)

(assert (=> b!110602 (= e!71926 None!163)))

(declare-fun b!110599 () Bool)

(declare-fun e!71925 () Option!165)

(assert (=> b!110599 (= e!71925 (Some!164 (_2!1205 (h!2204 lt!56872))))))

(declare-fun b!110601 () Bool)

(assert (=> b!110601 (= e!71926 (getValueByKey!159 (t!5738 lt!56872) (_1!1205 (tuple2!2389 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun c!19630 () Bool)

(declare-fun d!31151 () Bool)

(assert (=> d!31151 (= c!19630 (and ((_ is Cons!1605) lt!56872) (= (_1!1205 (h!2204 lt!56872)) (_1!1205 (tuple2!2389 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> d!31151 (= (getValueByKey!159 lt!56872 (_1!1205 (tuple2!2389 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))) e!71925)))

(declare-fun b!110600 () Bool)

(assert (=> b!110600 (= e!71925 e!71926)))

(declare-fun c!19631 () Bool)

(assert (=> b!110600 (= c!19631 (and ((_ is Cons!1605) lt!56872) (not (= (_1!1205 (h!2204 lt!56872)) (_1!1205 (tuple2!2389 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))))

(assert (= (and d!31151 c!19630) b!110599))

(assert (= (and d!31151 (not c!19630)) b!110600))

(assert (= (and b!110600 c!19631) b!110601))

(assert (= (and b!110600 (not c!19631)) b!110602))

(declare-fun m!125483 () Bool)

(assert (=> b!110601 m!125483))

(assert (=> d!30933 d!31151))

(declare-fun d!31153 () Bool)

(assert (=> d!31153 (= (getValueByKey!159 lt!56872 (_1!1205 (tuple2!2389 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))) (Some!164 (_2!1205 (tuple2!2389 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun lt!57057 () Unit!3382)

(assert (=> d!31153 (= lt!57057 (choose!695 lt!56872 (_1!1205 (tuple2!2389 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992))))) (_2!1205 (tuple2!2389 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun e!71927 () Bool)

(assert (=> d!31153 e!71927))

(declare-fun res!54681 () Bool)

(assert (=> d!31153 (=> (not res!54681) (not e!71927))))

(assert (=> d!31153 (= res!54681 (isStrictlySorted!298 lt!56872))))

(assert (=> d!31153 (= (lemmaContainsTupThenGetReturnValue!75 lt!56872 (_1!1205 (tuple2!2389 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992))))) (_2!1205 (tuple2!2389 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))) lt!57057)))

(declare-fun b!110603 () Bool)

(declare-fun res!54682 () Bool)

(assert (=> b!110603 (=> (not res!54682) (not e!71927))))

(assert (=> b!110603 (= res!54682 (containsKey!162 lt!56872 (_1!1205 (tuple2!2389 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun b!110604 () Bool)

(assert (=> b!110604 (= e!71927 (contains!827 lt!56872 (tuple2!2389 (_1!1205 (tuple2!2389 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992))))) (_2!1205 (tuple2!2389 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(assert (= (and d!31153 res!54681) b!110603))

(assert (= (and b!110603 res!54682) b!110604))

(assert (=> d!31153 m!124833))

(declare-fun m!125485 () Bool)

(assert (=> d!31153 m!125485))

(declare-fun m!125487 () Bool)

(assert (=> d!31153 m!125487))

(declare-fun m!125489 () Bool)

(assert (=> b!110603 m!125489))

(declare-fun m!125491 () Bool)

(assert (=> b!110604 m!125491))

(assert (=> d!30933 d!31153))

(declare-fun e!71930 () List!1609)

(declare-fun b!110605 () Bool)

(assert (=> b!110605 (= e!71930 (insertStrictlySorted!78 (t!5738 (toList!789 lt!56536)) (_1!1205 (tuple2!2389 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992))))) (_2!1205 (tuple2!2389 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun b!110606 () Bool)

(declare-fun res!54684 () Bool)

(declare-fun e!71932 () Bool)

(assert (=> b!110606 (=> (not res!54684) (not e!71932))))

(declare-fun lt!57058 () List!1609)

(assert (=> b!110606 (= res!54684 (containsKey!162 lt!57058 (_1!1205 (tuple2!2389 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun b!110607 () Bool)

(declare-fun e!71931 () List!1609)

(declare-fun call!11796 () List!1609)

(assert (=> b!110607 (= e!71931 call!11796)))

(declare-fun bm!11792 () Bool)

(declare-fun call!11797 () List!1609)

(declare-fun call!11795 () List!1609)

(assert (=> bm!11792 (= call!11797 call!11795)))

(declare-fun bm!11793 () Bool)

(assert (=> bm!11793 (= call!11796 call!11797)))

(declare-fun b!110608 () Bool)

(assert (=> b!110608 (= e!71931 call!11796)))

(declare-fun c!19634 () Bool)

(declare-fun bm!11794 () Bool)

(assert (=> bm!11794 (= call!11795 ($colon$colon!82 e!71930 (ite c!19634 (h!2204 (toList!789 lt!56536)) (tuple2!2389 (_1!1205 (tuple2!2389 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992))))) (_2!1205 (tuple2!2389 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))))

(declare-fun c!19635 () Bool)

(assert (=> bm!11794 (= c!19635 c!19634)))

(declare-fun b!110609 () Bool)

(declare-fun e!71929 () List!1609)

(assert (=> b!110609 (= e!71929 call!11797)))

(declare-fun d!31155 () Bool)

(assert (=> d!31155 e!71932))

(declare-fun res!54683 () Bool)

(assert (=> d!31155 (=> (not res!54683) (not e!71932))))

(assert (=> d!31155 (= res!54683 (isStrictlySorted!298 lt!57058))))

(declare-fun e!71928 () List!1609)

(assert (=> d!31155 (= lt!57058 e!71928)))

(assert (=> d!31155 (= c!19634 (and ((_ is Cons!1605) (toList!789 lt!56536)) (bvslt (_1!1205 (h!2204 (toList!789 lt!56536))) (_1!1205 (tuple2!2389 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> d!31155 (isStrictlySorted!298 (toList!789 lt!56536))))

(assert (=> d!31155 (= (insertStrictlySorted!78 (toList!789 lt!56536) (_1!1205 (tuple2!2389 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992))))) (_2!1205 (tuple2!2389 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))) lt!57058)))

(declare-fun b!110610 () Bool)

(assert (=> b!110610 (= e!71928 call!11795)))

(declare-fun c!19632 () Bool)

(declare-fun b!110611 () Bool)

(assert (=> b!110611 (= c!19632 (and ((_ is Cons!1605) (toList!789 lt!56536)) (bvsgt (_1!1205 (h!2204 (toList!789 lt!56536))) (_1!1205 (tuple2!2389 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> b!110611 (= e!71929 e!71931)))

(declare-fun c!19633 () Bool)

(declare-fun b!110612 () Bool)

(assert (=> b!110612 (= e!71930 (ite c!19633 (t!5738 (toList!789 lt!56536)) (ite c!19632 (Cons!1605 (h!2204 (toList!789 lt!56536)) (t!5738 (toList!789 lt!56536))) Nil!1606)))))

(declare-fun b!110613 () Bool)

(assert (=> b!110613 (= e!71932 (contains!827 lt!57058 (tuple2!2389 (_1!1205 (tuple2!2389 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992))))) (_2!1205 (tuple2!2389 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(declare-fun b!110614 () Bool)

(assert (=> b!110614 (= e!71928 e!71929)))

(assert (=> b!110614 (= c!19633 (and ((_ is Cons!1605) (toList!789 lt!56536)) (= (_1!1205 (h!2204 (toList!789 lt!56536))) (_1!1205 (tuple2!2389 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(assert (= (and d!31155 c!19634) b!110610))

(assert (= (and d!31155 (not c!19634)) b!110614))

(assert (= (and b!110614 c!19633) b!110609))

(assert (= (and b!110614 (not c!19633)) b!110611))

(assert (= (and b!110611 c!19632) b!110607))

(assert (= (and b!110611 (not c!19632)) b!110608))

(assert (= (or b!110607 b!110608) bm!11793))

(assert (= (or b!110609 bm!11793) bm!11792))

(assert (= (or b!110610 bm!11792) bm!11794))

(assert (= (and bm!11794 c!19635) b!110605))

(assert (= (and bm!11794 (not c!19635)) b!110612))

(assert (= (and d!31155 res!54683) b!110606))

(assert (= (and b!110606 res!54684) b!110613))

(declare-fun m!125493 () Bool)

(assert (=> bm!11794 m!125493))

(declare-fun m!125495 () Bool)

(assert (=> b!110613 m!125495))

(declare-fun m!125497 () Bool)

(assert (=> b!110606 m!125497))

(declare-fun m!125499 () Bool)

(assert (=> d!31155 m!125499))

(declare-fun m!125501 () Bool)

(assert (=> d!31155 m!125501))

(declare-fun m!125503 () Bool)

(assert (=> b!110605 m!125503))

(assert (=> d!30933 d!31155))

(declare-fun d!31157 () Bool)

(declare-fun e!71934 () Bool)

(assert (=> d!31157 e!71934))

(declare-fun res!54685 () Bool)

(assert (=> d!31157 (=> res!54685 e!71934)))

(declare-fun lt!57061 () Bool)

(assert (=> d!31157 (= res!54685 (not lt!57061))))

(declare-fun lt!57062 () Bool)

(assert (=> d!31157 (= lt!57061 lt!57062)))

(declare-fun lt!57059 () Unit!3382)

(declare-fun e!71933 () Unit!3382)

(assert (=> d!31157 (= lt!57059 e!71933)))

(declare-fun c!19636 () Bool)

(assert (=> d!31157 (= c!19636 lt!57062)))

(assert (=> d!31157 (= lt!57062 (containsKey!162 (toList!789 lt!57001) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))

(assert (=> d!31157 (= (contains!824 lt!57001 (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))) lt!57061)))

(declare-fun b!110615 () Bool)

(declare-fun lt!57060 () Unit!3382)

(assert (=> b!110615 (= e!71933 lt!57060)))

(assert (=> b!110615 (= lt!57060 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 lt!57001) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))

(assert (=> b!110615 (isDefined!111 (getValueByKey!159 (toList!789 lt!57001) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))

(declare-fun b!110616 () Bool)

(declare-fun Unit!3420 () Unit!3382)

(assert (=> b!110616 (= e!71933 Unit!3420)))

(declare-fun b!110617 () Bool)

(assert (=> b!110617 (= e!71934 (isDefined!111 (getValueByKey!159 (toList!789 lt!57001) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))))))

(assert (= (and d!31157 c!19636) b!110615))

(assert (= (and d!31157 (not c!19636)) b!110616))

(assert (= (and d!31157 (not res!54685)) b!110617))

(declare-fun m!125505 () Bool)

(assert (=> d!31157 m!125505))

(declare-fun m!125507 () Bool)

(assert (=> b!110615 m!125507))

(assert (=> b!110615 m!125243))

(assert (=> b!110615 m!125243))

(declare-fun m!125509 () Bool)

(assert (=> b!110615 m!125509))

(assert (=> b!110617 m!125243))

(assert (=> b!110617 m!125243))

(assert (=> b!110617 m!125509))

(assert (=> d!31043 d!31157))

(declare-fun b!110621 () Bool)

(declare-fun e!71936 () Option!165)

(assert (=> b!110621 (= e!71936 None!163)))

(declare-fun b!110618 () Bool)

(declare-fun e!71935 () Option!165)

(assert (=> b!110618 (= e!71935 (Some!164 (_2!1205 (h!2204 lt!57000))))))

(declare-fun b!110620 () Bool)

(assert (=> b!110620 (= e!71936 (getValueByKey!159 (t!5738 lt!57000) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))

(declare-fun c!19637 () Bool)

(declare-fun d!31159 () Bool)

(assert (=> d!31159 (= c!19637 (and ((_ is Cons!1605) lt!57000) (= (_1!1205 (h!2204 lt!57000)) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))))))

(assert (=> d!31159 (= (getValueByKey!159 lt!57000 (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))) e!71935)))

(declare-fun b!110619 () Bool)

(assert (=> b!110619 (= e!71935 e!71936)))

(declare-fun c!19638 () Bool)

(assert (=> b!110619 (= c!19638 (and ((_ is Cons!1605) lt!57000) (not (= (_1!1205 (h!2204 lt!57000)) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))))

(assert (= (and d!31159 c!19637) b!110618))

(assert (= (and d!31159 (not c!19637)) b!110619))

(assert (= (and b!110619 c!19638) b!110620))

(assert (= (and b!110619 (not c!19638)) b!110621))

(declare-fun m!125511 () Bool)

(assert (=> b!110620 m!125511))

(assert (=> d!31043 d!31159))

(declare-fun d!31161 () Bool)

(assert (=> d!31161 (= (getValueByKey!159 lt!57000 (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))) (Some!164 (_2!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))

(declare-fun lt!57063 () Unit!3382)

(assert (=> d!31161 (= lt!57063 (choose!695 lt!57000 (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)) (_2!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))

(declare-fun e!71937 () Bool)

(assert (=> d!31161 e!71937))

(declare-fun res!54686 () Bool)

(assert (=> d!31161 (=> (not res!54686) (not e!71937))))

(assert (=> d!31161 (= res!54686 (isStrictlySorted!298 lt!57000))))

(assert (=> d!31161 (= (lemmaContainsTupThenGetReturnValue!75 lt!57000 (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)) (_2!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))) lt!57063)))

(declare-fun b!110622 () Bool)

(declare-fun res!54687 () Bool)

(assert (=> b!110622 (=> (not res!54687) (not e!71937))))

(assert (=> b!110622 (= res!54687 (containsKey!162 lt!57000 (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))

(declare-fun b!110623 () Bool)

(assert (=> b!110623 (= e!71937 (contains!827 lt!57000 (tuple2!2389 (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)) (_2!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))))))

(assert (= (and d!31161 res!54686) b!110622))

(assert (= (and b!110622 res!54687) b!110623))

(assert (=> d!31161 m!125237))

(declare-fun m!125513 () Bool)

(assert (=> d!31161 m!125513))

(declare-fun m!125515 () Bool)

(assert (=> d!31161 m!125515))

(declare-fun m!125517 () Bool)

(assert (=> b!110622 m!125517))

(declare-fun m!125519 () Bool)

(assert (=> b!110623 m!125519))

(assert (=> d!31043 d!31161))

(declare-fun b!110624 () Bool)

(declare-fun e!71940 () List!1609)

(assert (=> b!110624 (= e!71940 (insertStrictlySorted!78 (t!5738 (toList!789 lt!56369)) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)) (_2!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))

(declare-fun b!110625 () Bool)

(declare-fun res!54689 () Bool)

(declare-fun e!71942 () Bool)

(assert (=> b!110625 (=> (not res!54689) (not e!71942))))

(declare-fun lt!57064 () List!1609)

(assert (=> b!110625 (= res!54689 (containsKey!162 lt!57064 (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))

(declare-fun b!110626 () Bool)

(declare-fun e!71941 () List!1609)

(declare-fun call!11799 () List!1609)

(assert (=> b!110626 (= e!71941 call!11799)))

(declare-fun bm!11795 () Bool)

(declare-fun call!11800 () List!1609)

(declare-fun call!11798 () List!1609)

(assert (=> bm!11795 (= call!11800 call!11798)))

(declare-fun bm!11796 () Bool)

(assert (=> bm!11796 (= call!11799 call!11800)))

(declare-fun b!110627 () Bool)

(assert (=> b!110627 (= e!71941 call!11799)))

(declare-fun bm!11797 () Bool)

(declare-fun c!19641 () Bool)

(assert (=> bm!11797 (= call!11798 ($colon$colon!82 e!71940 (ite c!19641 (h!2204 (toList!789 lt!56369)) (tuple2!2389 (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)) (_2!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))))

(declare-fun c!19642 () Bool)

(assert (=> bm!11797 (= c!19642 c!19641)))

(declare-fun b!110628 () Bool)

(declare-fun e!71939 () List!1609)

(assert (=> b!110628 (= e!71939 call!11800)))

(declare-fun d!31163 () Bool)

(assert (=> d!31163 e!71942))

(declare-fun res!54688 () Bool)

(assert (=> d!31163 (=> (not res!54688) (not e!71942))))

(assert (=> d!31163 (= res!54688 (isStrictlySorted!298 lt!57064))))

(declare-fun e!71938 () List!1609)

(assert (=> d!31163 (= lt!57064 e!71938)))

(assert (=> d!31163 (= c!19641 (and ((_ is Cons!1605) (toList!789 lt!56369)) (bvslt (_1!1205 (h!2204 (toList!789 lt!56369))) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))))))

(assert (=> d!31163 (isStrictlySorted!298 (toList!789 lt!56369))))

(assert (=> d!31163 (= (insertStrictlySorted!78 (toList!789 lt!56369) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)) (_2!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))) lt!57064)))

(declare-fun b!110629 () Bool)

(assert (=> b!110629 (= e!71938 call!11798)))

(declare-fun b!110630 () Bool)

(declare-fun c!19639 () Bool)

(assert (=> b!110630 (= c!19639 (and ((_ is Cons!1605) (toList!789 lt!56369)) (bvsgt (_1!1205 (h!2204 (toList!789 lt!56369))) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))))))

(assert (=> b!110630 (= e!71939 e!71941)))

(declare-fun c!19640 () Bool)

(declare-fun b!110631 () Bool)

(assert (=> b!110631 (= e!71940 (ite c!19640 (t!5738 (toList!789 lt!56369)) (ite c!19639 (Cons!1605 (h!2204 (toList!789 lt!56369)) (t!5738 (toList!789 lt!56369))) Nil!1606)))))

(declare-fun b!110632 () Bool)

(assert (=> b!110632 (= e!71942 (contains!827 lt!57064 (tuple2!2389 (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)) (_2!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))))))

(declare-fun b!110633 () Bool)

(assert (=> b!110633 (= e!71938 e!71939)))

(assert (=> b!110633 (= c!19640 (and ((_ is Cons!1605) (toList!789 lt!56369)) (= (_1!1205 (h!2204 (toList!789 lt!56369))) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))))))

(assert (= (and d!31163 c!19641) b!110629))

(assert (= (and d!31163 (not c!19641)) b!110633))

(assert (= (and b!110633 c!19640) b!110628))

(assert (= (and b!110633 (not c!19640)) b!110630))

(assert (= (and b!110630 c!19639) b!110626))

(assert (= (and b!110630 (not c!19639)) b!110627))

(assert (= (or b!110626 b!110627) bm!11796))

(assert (= (or b!110628 bm!11796) bm!11795))

(assert (= (or b!110629 bm!11795) bm!11797))

(assert (= (and bm!11797 c!19642) b!110624))

(assert (= (and bm!11797 (not c!19642)) b!110631))

(assert (= (and d!31163 res!54688) b!110625))

(assert (= (and b!110625 res!54689) b!110632))

(declare-fun m!125521 () Bool)

(assert (=> bm!11797 m!125521))

(declare-fun m!125523 () Bool)

(assert (=> b!110632 m!125523))

(declare-fun m!125525 () Bool)

(assert (=> b!110625 m!125525))

(declare-fun m!125527 () Bool)

(assert (=> d!31163 m!125527))

(assert (=> d!31163 m!125061))

(declare-fun m!125529 () Bool)

(assert (=> b!110624 m!125529))

(assert (=> d!31043 d!31163))

(declare-fun d!31165 () Bool)

(declare-fun e!71943 () Bool)

(assert (=> d!31165 e!71943))

(declare-fun res!54691 () Bool)

(assert (=> d!31165 (=> (not res!54691) (not e!71943))))

(declare-fun lt!57068 () ListLongMap!1547)

(assert (=> d!31165 (= res!54691 (contains!824 lt!57068 (_1!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16)))))))

(declare-fun lt!57067 () List!1609)

(assert (=> d!31165 (= lt!57068 (ListLongMap!1548 lt!57067))))

(declare-fun lt!57066 () Unit!3382)

(declare-fun lt!57065 () Unit!3382)

(assert (=> d!31165 (= lt!57066 lt!57065)))

(assert (=> d!31165 (= (getValueByKey!159 lt!57067 (_1!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16)))) (Some!164 (_2!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16)))))))

(assert (=> d!31165 (= lt!57065 (lemmaContainsTupThenGetReturnValue!75 lt!57067 (_1!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16))) (_2!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16)))))))

(assert (=> d!31165 (= lt!57067 (insertStrictlySorted!78 (toList!789 call!11742) (_1!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16))) (_2!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16)))))))

(assert (=> d!31165 (= (+!144 call!11742 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16))) lt!57068)))

(declare-fun b!110634 () Bool)

(declare-fun res!54690 () Bool)

(assert (=> b!110634 (=> (not res!54690) (not e!71943))))

(assert (=> b!110634 (= res!54690 (= (getValueByKey!159 (toList!789 lt!57068) (_1!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16)))) (Some!164 (_2!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16))))))))

(declare-fun b!110635 () Bool)

(assert (=> b!110635 (= e!71943 (contains!827 (toList!789 lt!57068) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16))))))

(assert (= (and d!31165 res!54691) b!110634))

(assert (= (and b!110634 res!54690) b!110635))

(declare-fun m!125531 () Bool)

(assert (=> d!31165 m!125531))

(declare-fun m!125533 () Bool)

(assert (=> d!31165 m!125533))

(declare-fun m!125535 () Bool)

(assert (=> d!31165 m!125535))

(declare-fun m!125537 () Bool)

(assert (=> d!31165 m!125537))

(declare-fun m!125539 () Bool)

(assert (=> b!110634 m!125539))

(declare-fun m!125541 () Bool)

(assert (=> b!110635 m!125541))

(assert (=> b!110166 d!31165))

(declare-fun d!31167 () Bool)

(declare-fun lt!57069 () Bool)

(assert (=> d!31167 (= lt!57069 (select (content!114 (t!5738 (toList!789 lt!56487))) lt!56370))))

(declare-fun e!71945 () Bool)

(assert (=> d!31167 (= lt!57069 e!71945)))

(declare-fun res!54693 () Bool)

(assert (=> d!31167 (=> (not res!54693) (not e!71945))))

(assert (=> d!31167 (= res!54693 ((_ is Cons!1605) (t!5738 (toList!789 lt!56487))))))

(assert (=> d!31167 (= (contains!827 (t!5738 (toList!789 lt!56487)) lt!56370) lt!57069)))

(declare-fun b!110636 () Bool)

(declare-fun e!71944 () Bool)

(assert (=> b!110636 (= e!71945 e!71944)))

(declare-fun res!54692 () Bool)

(assert (=> b!110636 (=> res!54692 e!71944)))

(assert (=> b!110636 (= res!54692 (= (h!2204 (t!5738 (toList!789 lt!56487))) lt!56370))))

(declare-fun b!110637 () Bool)

(assert (=> b!110637 (= e!71944 (contains!827 (t!5738 (t!5738 (toList!789 lt!56487))) lt!56370))))

(assert (= (and d!31167 res!54693) b!110636))

(assert (= (and b!110636 (not res!54692)) b!110637))

(assert (=> d!31167 m!125319))

(declare-fun m!125543 () Bool)

(assert (=> d!31167 m!125543))

(declare-fun m!125545 () Bool)

(assert (=> b!110637 m!125545))

(assert (=> b!110118 d!31167))

(declare-fun d!31169 () Bool)

(assert (=> d!31169 (= (get!1354 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2929 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!110063 d!31169))

(declare-fun d!31171 () Bool)

(declare-fun res!54694 () Bool)

(declare-fun e!71946 () Bool)

(assert (=> d!31171 (=> res!54694 e!71946)))

(assert (=> d!31171 (= res!54694 (or ((_ is Nil!1606) lt!56997) ((_ is Nil!1606) (t!5738 lt!56997))))))

(assert (=> d!31171 (= (isStrictlySorted!298 lt!56997) e!71946)))

(declare-fun b!110638 () Bool)

(declare-fun e!71947 () Bool)

(assert (=> b!110638 (= e!71946 e!71947)))

(declare-fun res!54695 () Bool)

(assert (=> b!110638 (=> (not res!54695) (not e!71947))))

(assert (=> b!110638 (= res!54695 (bvslt (_1!1205 (h!2204 lt!56997)) (_1!1205 (h!2204 (t!5738 lt!56997)))))))

(declare-fun b!110639 () Bool)

(assert (=> b!110639 (= e!71947 (isStrictlySorted!298 (t!5738 lt!56997)))))

(assert (= (and d!31171 (not res!54694)) b!110638))

(assert (= (and b!110638 res!54695) b!110639))

(declare-fun m!125547 () Bool)

(assert (=> b!110639 m!125547))

(assert (=> d!31041 d!31171))

(declare-fun d!31173 () Bool)

(declare-fun res!54696 () Bool)

(declare-fun e!71948 () Bool)

(assert (=> d!31173 (=> res!54696 e!71948)))

(assert (=> d!31173 (= res!54696 (or ((_ is Nil!1606) (toList!789 (+!144 lt!56369 lt!56363))) ((_ is Nil!1606) (t!5738 (toList!789 (+!144 lt!56369 lt!56363))))))))

(assert (=> d!31173 (= (isStrictlySorted!298 (toList!789 (+!144 lt!56369 lt!56363))) e!71948)))

(declare-fun b!110640 () Bool)

(declare-fun e!71949 () Bool)

(assert (=> b!110640 (= e!71948 e!71949)))

(declare-fun res!54697 () Bool)

(assert (=> b!110640 (=> (not res!54697) (not e!71949))))

(assert (=> b!110640 (= res!54697 (bvslt (_1!1205 (h!2204 (toList!789 (+!144 lt!56369 lt!56363)))) (_1!1205 (h!2204 (t!5738 (toList!789 (+!144 lt!56369 lt!56363)))))))))

(declare-fun b!110641 () Bool)

(assert (=> b!110641 (= e!71949 (isStrictlySorted!298 (t!5738 (toList!789 (+!144 lt!56369 lt!56363)))))))

(assert (= (and d!31173 (not res!54696)) b!110640))

(assert (= (and b!110640 res!54697) b!110641))

(declare-fun m!125549 () Bool)

(assert (=> b!110641 m!125549))

(assert (=> d!31041 d!31173))

(assert (=> b!110365 d!31067))

(declare-fun d!31175 () Bool)

(declare-fun res!54698 () Bool)

(declare-fun e!71950 () Bool)

(assert (=> d!31175 (=> res!54698 e!71950)))

(assert (=> d!31175 (= res!54698 (and ((_ is Cons!1605) (toList!789 lt!56458)) (= (_1!1205 (h!2204 (toList!789 lt!56458))) (_1!1205 lt!56363))))))

(assert (=> d!31175 (= (containsKey!162 (toList!789 lt!56458) (_1!1205 lt!56363)) e!71950)))

(declare-fun b!110642 () Bool)

(declare-fun e!71951 () Bool)

(assert (=> b!110642 (= e!71950 e!71951)))

(declare-fun res!54699 () Bool)

(assert (=> b!110642 (=> (not res!54699) (not e!71951))))

(assert (=> b!110642 (= res!54699 (and (or (not ((_ is Cons!1605) (toList!789 lt!56458))) (bvsle (_1!1205 (h!2204 (toList!789 lt!56458))) (_1!1205 lt!56363))) ((_ is Cons!1605) (toList!789 lt!56458)) (bvslt (_1!1205 (h!2204 (toList!789 lt!56458))) (_1!1205 lt!56363))))))

(declare-fun b!110643 () Bool)

(assert (=> b!110643 (= e!71951 (containsKey!162 (t!5738 (toList!789 lt!56458)) (_1!1205 lt!56363)))))

(assert (= (and d!31175 (not res!54698)) b!110642))

(assert (= (and b!110642 res!54699) b!110643))

(declare-fun m!125551 () Bool)

(assert (=> b!110643 m!125551))

(assert (=> d!30915 d!31175))

(declare-fun d!31177 () Bool)

(declare-fun e!71953 () Bool)

(assert (=> d!31177 e!71953))

(declare-fun res!54700 () Bool)

(assert (=> d!31177 (=> res!54700 e!71953)))

(declare-fun lt!57072 () Bool)

(assert (=> d!31177 (= res!54700 (not lt!57072))))

(declare-fun lt!57073 () Bool)

(assert (=> d!31177 (= lt!57072 lt!57073)))

(declare-fun lt!57070 () Unit!3382)

(declare-fun e!71952 () Unit!3382)

(assert (=> d!31177 (= lt!57070 e!71952)))

(declare-fun c!19643 () Bool)

(assert (=> d!31177 (= c!19643 lt!57073)))

(assert (=> d!31177 (= lt!57073 (containsKey!162 (toList!789 lt!56908) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!31177 (= (contains!824 lt!56908 #b0000000000000000000000000000000000000000000000000000000000000000) lt!57072)))

(declare-fun b!110644 () Bool)

(declare-fun lt!57071 () Unit!3382)

(assert (=> b!110644 (= e!71952 lt!57071)))

(assert (=> b!110644 (= lt!57071 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 lt!56908) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!110644 (isDefined!111 (getValueByKey!159 (toList!789 lt!56908) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110645 () Bool)

(declare-fun Unit!3421 () Unit!3382)

(assert (=> b!110645 (= e!71952 Unit!3421)))

(declare-fun b!110646 () Bool)

(assert (=> b!110646 (= e!71953 (isDefined!111 (getValueByKey!159 (toList!789 lt!56908) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!31177 c!19643) b!110644))

(assert (= (and d!31177 (not c!19643)) b!110645))

(assert (= (and d!31177 (not res!54700)) b!110646))

(declare-fun m!125553 () Bool)

(assert (=> d!31177 m!125553))

(declare-fun m!125555 () Bool)

(assert (=> b!110644 m!125555))

(declare-fun m!125557 () Bool)

(assert (=> b!110644 m!125557))

(assert (=> b!110644 m!125557))

(declare-fun m!125559 () Bool)

(assert (=> b!110644 m!125559))

(assert (=> b!110646 m!125557))

(assert (=> b!110646 m!125557))

(assert (=> b!110646 m!125559))

(assert (=> bm!11754 d!31177))

(declare-fun b!110650 () Bool)

(declare-fun e!71955 () Option!165)

(assert (=> b!110650 (= e!71955 None!163)))

(declare-fun b!110647 () Bool)

(declare-fun e!71954 () Option!165)

(assert (=> b!110647 (= e!71954 (Some!164 (_2!1205 (h!2204 (toList!789 lt!56887)))))))

(declare-fun b!110649 () Bool)

(assert (=> b!110649 (= e!71955 (getValueByKey!159 (t!5738 (toList!789 lt!56887)) (_1!1205 (tuple2!2389 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun c!19644 () Bool)

(declare-fun d!31179 () Bool)

(assert (=> d!31179 (= c!19644 (and ((_ is Cons!1605) (toList!789 lt!56887)) (= (_1!1205 (h!2204 (toList!789 lt!56887))) (_1!1205 (tuple2!2389 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> d!31179 (= (getValueByKey!159 (toList!789 lt!56887) (_1!1205 (tuple2!2389 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))) e!71954)))

(declare-fun b!110648 () Bool)

(assert (=> b!110648 (= e!71954 e!71955)))

(declare-fun c!19645 () Bool)

(assert (=> b!110648 (= c!19645 (and ((_ is Cons!1605) (toList!789 lt!56887)) (not (= (_1!1205 (h!2204 (toList!789 lt!56887))) (_1!1205 (tuple2!2389 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))))

(assert (= (and d!31179 c!19644) b!110647))

(assert (= (and d!31179 (not c!19644)) b!110648))

(assert (= (and b!110648 c!19645) b!110649))

(assert (= (and b!110648 (not c!19645)) b!110650))

(declare-fun m!125561 () Bool)

(assert (=> b!110649 m!125561))

(assert (=> b!110275 d!31179))

(declare-fun d!31181 () Bool)

(assert (=> d!31181 (= ($colon$colon!82 e!71794 (ite c!19564 (h!2204 (toList!789 lt!56369)) (tuple2!2389 (_1!1205 lt!56370) (_2!1205 lt!56370)))) (Cons!1605 (ite c!19564 (h!2204 (toList!789 lt!56369)) (tuple2!2389 (_1!1205 lt!56370) (_2!1205 lt!56370))) e!71794))))

(assert (=> bm!11771 d!31181))

(declare-fun b!110654 () Bool)

(declare-fun e!71957 () Option!165)

(assert (=> b!110654 (= e!71957 None!163)))

(declare-fun b!110651 () Bool)

(declare-fun e!71956 () Option!165)

(assert (=> b!110651 (= e!71956 (Some!164 (_2!1205 (h!2204 (toList!789 lt!56923)))))))

(declare-fun b!110653 () Bool)

(assert (=> b!110653 (= e!71957 (getValueByKey!159 (t!5738 (toList!789 lt!56923)) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))

(declare-fun c!19646 () Bool)

(declare-fun d!31183 () Bool)

(assert (=> d!31183 (= c!19646 (and ((_ is Cons!1605) (toList!789 lt!56923)) (= (_1!1205 (h!2204 (toList!789 lt!56923))) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))))))

(assert (=> d!31183 (= (getValueByKey!159 (toList!789 lt!56923) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))) e!71956)))

(declare-fun b!110652 () Bool)

(assert (=> b!110652 (= e!71956 e!71957)))

(declare-fun c!19647 () Bool)

(assert (=> b!110652 (= c!19647 (and ((_ is Cons!1605) (toList!789 lt!56923)) (not (= (_1!1205 (h!2204 (toList!789 lt!56923))) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))))

(assert (= (and d!31183 c!19646) b!110651))

(assert (= (and d!31183 (not c!19646)) b!110652))

(assert (= (and b!110652 c!19647) b!110653))

(assert (= (and b!110652 (not c!19647)) b!110654))

(declare-fun m!125563 () Bool)

(assert (=> b!110653 m!125563))

(assert (=> b!110307 d!31183))

(declare-fun d!31185 () Bool)

(assert (=> d!31185 (contains!824 (getCurrentListMap!475 (_keys!4340 newMap!16) lt!56625 (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) (select (arr!2072 (_keys!4340 newMap!16)) (index!3171 lt!56646)))))

(assert (=> d!31185 true))

(declare-fun _$16!132 () Unit!3382)

(assert (=> d!31185 (= (choose!693 (_keys!4340 newMap!16) lt!56625 (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (index!3171 lt!56646) (defaultEntry!2626 newMap!16)) _$16!132)))

(declare-fun bs!4553 () Bool)

(assert (= bs!4553 d!31185))

(assert (=> bs!4553 m!124635))

(assert (=> bs!4553 m!124407))

(assert (=> bs!4553 m!124635))

(assert (=> bs!4553 m!124407))

(assert (=> bs!4553 m!124637))

(assert (=> d!30889 d!31185))

(declare-fun d!31187 () Bool)

(assert (=> d!31187 (= (validMask!0 (mask!6794 newMap!16)) (and (or (= (mask!6794 newMap!16) #b00000000000000000000000000000111) (= (mask!6794 newMap!16) #b00000000000000000000000000001111) (= (mask!6794 newMap!16) #b00000000000000000000000000011111) (= (mask!6794 newMap!16) #b00000000000000000000000000111111) (= (mask!6794 newMap!16) #b00000000000000000000000001111111) (= (mask!6794 newMap!16) #b00000000000000000000000011111111) (= (mask!6794 newMap!16) #b00000000000000000000000111111111) (= (mask!6794 newMap!16) #b00000000000000000000001111111111) (= (mask!6794 newMap!16) #b00000000000000000000011111111111) (= (mask!6794 newMap!16) #b00000000000000000000111111111111) (= (mask!6794 newMap!16) #b00000000000000000001111111111111) (= (mask!6794 newMap!16) #b00000000000000000011111111111111) (= (mask!6794 newMap!16) #b00000000000000000111111111111111) (= (mask!6794 newMap!16) #b00000000000000001111111111111111) (= (mask!6794 newMap!16) #b00000000000000011111111111111111) (= (mask!6794 newMap!16) #b00000000000000111111111111111111) (= (mask!6794 newMap!16) #b00000000000001111111111111111111) (= (mask!6794 newMap!16) #b00000000000011111111111111111111) (= (mask!6794 newMap!16) #b00000000000111111111111111111111) (= (mask!6794 newMap!16) #b00000000001111111111111111111111) (= (mask!6794 newMap!16) #b00000000011111111111111111111111) (= (mask!6794 newMap!16) #b00000000111111111111111111111111) (= (mask!6794 newMap!16) #b00000001111111111111111111111111) (= (mask!6794 newMap!16) #b00000011111111111111111111111111) (= (mask!6794 newMap!16) #b00000111111111111111111111111111) (= (mask!6794 newMap!16) #b00001111111111111111111111111111) (= (mask!6794 newMap!16) #b00011111111111111111111111111111) (= (mask!6794 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!6794 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!30889 d!31187))

(declare-fun d!31189 () Bool)

(declare-fun c!19648 () Bool)

(assert (=> d!31189 (= c!19648 ((_ is Nil!1606) (toList!789 lt!56483)))))

(declare-fun e!71958 () (InoxSet tuple2!2388))

(assert (=> d!31189 (= (content!114 (toList!789 lt!56483)) e!71958)))

(declare-fun b!110655 () Bool)

(assert (=> b!110655 (= e!71958 ((as const (Array tuple2!2388 Bool)) false))))

(declare-fun b!110656 () Bool)

(assert (=> b!110656 (= e!71958 ((_ map or) (store ((as const (Array tuple2!2388 Bool)) false) (h!2204 (toList!789 lt!56483)) true) (content!114 (t!5738 (toList!789 lt!56483)))))))

(assert (= (and d!31189 c!19648) b!110655))

(assert (= (and d!31189 (not c!19648)) b!110656))

(declare-fun m!125565 () Bool)

(assert (=> b!110656 m!125565))

(declare-fun m!125567 () Bool)

(assert (=> b!110656 m!125567))

(assert (=> d!30925 d!31189))

(assert (=> b!110097 d!31059))

(declare-fun d!31191 () Bool)

(declare-fun lt!57074 () Bool)

(assert (=> d!31191 (= lt!57074 (select (content!114 lt!56949) (tuple2!2389 (_1!1205 lt!56363) (_2!1205 lt!56363))))))

(declare-fun e!71960 () Bool)

(assert (=> d!31191 (= lt!57074 e!71960)))

(declare-fun res!54702 () Bool)

(assert (=> d!31191 (=> (not res!54702) (not e!71960))))

(assert (=> d!31191 (= res!54702 ((_ is Cons!1605) lt!56949))))

(assert (=> d!31191 (= (contains!827 lt!56949 (tuple2!2389 (_1!1205 lt!56363) (_2!1205 lt!56363))) lt!57074)))

(declare-fun b!110657 () Bool)

(declare-fun e!71959 () Bool)

(assert (=> b!110657 (= e!71960 e!71959)))

(declare-fun res!54701 () Bool)

(assert (=> b!110657 (=> res!54701 e!71959)))

(assert (=> b!110657 (= res!54701 (= (h!2204 lt!56949) (tuple2!2389 (_1!1205 lt!56363) (_2!1205 lt!56363))))))

(declare-fun b!110658 () Bool)

(assert (=> b!110658 (= e!71959 (contains!827 (t!5738 lt!56949) (tuple2!2389 (_1!1205 lt!56363) (_2!1205 lt!56363))))))

(assert (= (and d!31191 res!54702) b!110657))

(assert (= (and b!110657 (not res!54701)) b!110658))

(declare-fun m!125569 () Bool)

(assert (=> d!31191 m!125569))

(declare-fun m!125571 () Bool)

(assert (=> d!31191 m!125571))

(declare-fun m!125573 () Bool)

(assert (=> b!110658 m!125573))

(assert (=> b!110363 d!31191))

(declare-fun d!31193 () Bool)

(declare-fun e!71962 () Bool)

(assert (=> d!31193 e!71962))

(declare-fun res!54703 () Bool)

(assert (=> d!31193 (=> res!54703 e!71962)))

(declare-fun lt!57077 () Bool)

(assert (=> d!31193 (= res!54703 (not lt!57077))))

(declare-fun lt!57078 () Bool)

(assert (=> d!31193 (= lt!57077 lt!57078)))

(declare-fun lt!57075 () Unit!3382)

(declare-fun e!71961 () Unit!3382)

(assert (=> d!31193 (= lt!57075 e!71961)))

(declare-fun c!19649 () Bool)

(assert (=> d!31193 (= c!19649 lt!57078)))

(assert (=> d!31193 (= lt!57078 (containsKey!162 (toList!789 lt!56896) (_1!1205 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> d!31193 (= (contains!824 lt!56896 (_1!1205 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))) lt!57077)))

(declare-fun b!110659 () Bool)

(declare-fun lt!57076 () Unit!3382)

(assert (=> b!110659 (= e!71961 lt!57076)))

(assert (=> b!110659 (= lt!57076 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 lt!56896) (_1!1205 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> b!110659 (isDefined!111 (getValueByKey!159 (toList!789 lt!56896) (_1!1205 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun b!110660 () Bool)

(declare-fun Unit!3422 () Unit!3382)

(assert (=> b!110660 (= e!71961 Unit!3422)))

(declare-fun b!110661 () Bool)

(assert (=> b!110661 (= e!71962 (isDefined!111 (getValueByKey!159 (toList!789 lt!56896) (_1!1205 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(assert (= (and d!31193 c!19649) b!110659))

(assert (= (and d!31193 (not c!19649)) b!110660))

(assert (= (and d!31193 (not res!54703)) b!110661))

(declare-fun m!125575 () Bool)

(assert (=> d!31193 m!125575))

(declare-fun m!125577 () Bool)

(assert (=> b!110659 m!125577))

(assert (=> b!110659 m!124911))

(assert (=> b!110659 m!124911))

(declare-fun m!125579 () Bool)

(assert (=> b!110659 m!125579))

(assert (=> b!110661 m!124911))

(assert (=> b!110661 m!124911))

(assert (=> b!110661 m!125579))

(assert (=> d!30955 d!31193))

(declare-fun b!110665 () Bool)

(declare-fun e!71964 () Option!165)

(assert (=> b!110665 (= e!71964 None!163)))

(declare-fun b!110662 () Bool)

(declare-fun e!71963 () Option!165)

(assert (=> b!110662 (= e!71963 (Some!164 (_2!1205 (h!2204 lt!56895))))))

(declare-fun b!110664 () Bool)

(assert (=> b!110664 (= e!71964 (getValueByKey!159 (t!5738 lt!56895) (_1!1205 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun d!31195 () Bool)

(declare-fun c!19650 () Bool)

(assert (=> d!31195 (= c!19650 (and ((_ is Cons!1605) lt!56895) (= (_1!1205 (h!2204 lt!56895)) (_1!1205 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> d!31195 (= (getValueByKey!159 lt!56895 (_1!1205 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))) e!71963)))

(declare-fun b!110663 () Bool)

(assert (=> b!110663 (= e!71963 e!71964)))

(declare-fun c!19651 () Bool)

(assert (=> b!110663 (= c!19651 (and ((_ is Cons!1605) lt!56895) (not (= (_1!1205 (h!2204 lt!56895)) (_1!1205 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))))

(assert (= (and d!31195 c!19650) b!110662))

(assert (= (and d!31195 (not c!19650)) b!110663))

(assert (= (and b!110663 c!19651) b!110664))

(assert (= (and b!110663 (not c!19651)) b!110665))

(declare-fun m!125581 () Bool)

(assert (=> b!110664 m!125581))

(assert (=> d!30955 d!31195))

(declare-fun d!31197 () Bool)

(assert (=> d!31197 (= (getValueByKey!159 lt!56895 (_1!1205 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))) (Some!164 (_2!1205 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun lt!57079 () Unit!3382)

(assert (=> d!31197 (= lt!57079 (choose!695 lt!56895 (_1!1205 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))) (_2!1205 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun e!71965 () Bool)

(assert (=> d!31197 e!71965))

(declare-fun res!54704 () Bool)

(assert (=> d!31197 (=> (not res!54704) (not e!71965))))

(assert (=> d!31197 (= res!54704 (isStrictlySorted!298 lt!56895))))

(assert (=> d!31197 (= (lemmaContainsTupThenGetReturnValue!75 lt!56895 (_1!1205 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))) (_2!1205 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))) lt!57079)))

(declare-fun b!110666 () Bool)

(declare-fun res!54705 () Bool)

(assert (=> b!110666 (=> (not res!54705) (not e!71965))))

(assert (=> b!110666 (= res!54705 (containsKey!162 lt!56895 (_1!1205 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun b!110667 () Bool)

(assert (=> b!110667 (= e!71965 (contains!827 lt!56895 (tuple2!2389 (_1!1205 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))) (_2!1205 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(assert (= (and d!31197 res!54704) b!110666))

(assert (= (and b!110666 res!54705) b!110667))

(assert (=> d!31197 m!124905))

(declare-fun m!125583 () Bool)

(assert (=> d!31197 m!125583))

(declare-fun m!125585 () Bool)

(assert (=> d!31197 m!125585))

(declare-fun m!125587 () Bool)

(assert (=> b!110666 m!125587))

(declare-fun m!125589 () Bool)

(assert (=> b!110667 m!125589))

(assert (=> d!30955 d!31197))

(declare-fun e!71968 () List!1609)

(declare-fun b!110668 () Bool)

(assert (=> b!110668 (= e!71968 (insertStrictlySorted!78 (t!5738 (toList!789 lt!56546)) (_1!1205 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))) (_2!1205 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun b!110669 () Bool)

(declare-fun res!54707 () Bool)

(declare-fun e!71970 () Bool)

(assert (=> b!110669 (=> (not res!54707) (not e!71970))))

(declare-fun lt!57080 () List!1609)

(assert (=> b!110669 (= res!54707 (containsKey!162 lt!57080 (_1!1205 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun b!110670 () Bool)

(declare-fun e!71969 () List!1609)

(declare-fun call!11802 () List!1609)

(assert (=> b!110670 (= e!71969 call!11802)))

(declare-fun bm!11798 () Bool)

(declare-fun call!11803 () List!1609)

(declare-fun call!11801 () List!1609)

(assert (=> bm!11798 (= call!11803 call!11801)))

(declare-fun bm!11799 () Bool)

(assert (=> bm!11799 (= call!11802 call!11803)))

(declare-fun b!110671 () Bool)

(assert (=> b!110671 (= e!71969 call!11802)))

(declare-fun c!19654 () Bool)

(declare-fun bm!11800 () Bool)

(assert (=> bm!11800 (= call!11801 ($colon$colon!82 e!71968 (ite c!19654 (h!2204 (toList!789 lt!56546)) (tuple2!2389 (_1!1205 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))) (_2!1205 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))))

(declare-fun c!19655 () Bool)

(assert (=> bm!11800 (= c!19655 c!19654)))

(declare-fun b!110672 () Bool)

(declare-fun e!71967 () List!1609)

(assert (=> b!110672 (= e!71967 call!11803)))

(declare-fun d!31199 () Bool)

(assert (=> d!31199 e!71970))

(declare-fun res!54706 () Bool)

(assert (=> d!31199 (=> (not res!54706) (not e!71970))))

(assert (=> d!31199 (= res!54706 (isStrictlySorted!298 lt!57080))))

(declare-fun e!71966 () List!1609)

(assert (=> d!31199 (= lt!57080 e!71966)))

(assert (=> d!31199 (= c!19654 (and ((_ is Cons!1605) (toList!789 lt!56546)) (bvslt (_1!1205 (h!2204 (toList!789 lt!56546))) (_1!1205 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> d!31199 (isStrictlySorted!298 (toList!789 lt!56546))))

(assert (=> d!31199 (= (insertStrictlySorted!78 (toList!789 lt!56546) (_1!1205 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))) (_2!1205 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))) lt!57080)))

(declare-fun b!110673 () Bool)

(assert (=> b!110673 (= e!71966 call!11801)))

(declare-fun c!19652 () Bool)

(declare-fun b!110674 () Bool)

(assert (=> b!110674 (= c!19652 (and ((_ is Cons!1605) (toList!789 lt!56546)) (bvsgt (_1!1205 (h!2204 (toList!789 lt!56546))) (_1!1205 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> b!110674 (= e!71967 e!71969)))

(declare-fun c!19653 () Bool)

(declare-fun b!110675 () Bool)

(assert (=> b!110675 (= e!71968 (ite c!19653 (t!5738 (toList!789 lt!56546)) (ite c!19652 (Cons!1605 (h!2204 (toList!789 lt!56546)) (t!5738 (toList!789 lt!56546))) Nil!1606)))))

(declare-fun b!110676 () Bool)

(assert (=> b!110676 (= e!71970 (contains!827 lt!57080 (tuple2!2389 (_1!1205 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))) (_2!1205 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(declare-fun b!110677 () Bool)

(assert (=> b!110677 (= e!71966 e!71967)))

(assert (=> b!110677 (= c!19653 (and ((_ is Cons!1605) (toList!789 lt!56546)) (= (_1!1205 (h!2204 (toList!789 lt!56546))) (_1!1205 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(assert (= (and d!31199 c!19654) b!110673))

(assert (= (and d!31199 (not c!19654)) b!110677))

(assert (= (and b!110677 c!19653) b!110672))

(assert (= (and b!110677 (not c!19653)) b!110674))

(assert (= (and b!110674 c!19652) b!110670))

(assert (= (and b!110674 (not c!19652)) b!110671))

(assert (= (or b!110670 b!110671) bm!11799))

(assert (= (or b!110672 bm!11799) bm!11798))

(assert (= (or b!110673 bm!11798) bm!11800))

(assert (= (and bm!11800 c!19655) b!110668))

(assert (= (and bm!11800 (not c!19655)) b!110675))

(assert (= (and d!31199 res!54706) b!110669))

(assert (= (and b!110669 res!54707) b!110676))

(declare-fun m!125591 () Bool)

(assert (=> bm!11800 m!125591))

(declare-fun m!125593 () Bool)

(assert (=> b!110676 m!125593))

(declare-fun m!125595 () Bool)

(assert (=> b!110669 m!125595))

(declare-fun m!125597 () Bool)

(assert (=> d!31199 m!125597))

(declare-fun m!125599 () Bool)

(assert (=> d!31199 m!125599))

(declare-fun m!125601 () Bool)

(assert (=> b!110668 m!125601))

(assert (=> d!30955 d!31199))

(declare-fun d!31201 () Bool)

(declare-fun res!54708 () Bool)

(declare-fun e!71971 () Bool)

(assert (=> d!31201 (=> res!54708 e!71971)))

(assert (=> d!31201 (= res!54708 (and ((_ is Cons!1605) lt!56997) (= (_1!1205 (h!2204 lt!56997)) (_1!1205 lt!56370))))))

(assert (=> d!31201 (= (containsKey!162 lt!56997 (_1!1205 lt!56370)) e!71971)))

(declare-fun b!110678 () Bool)

(declare-fun e!71972 () Bool)

(assert (=> b!110678 (= e!71971 e!71972)))

(declare-fun res!54709 () Bool)

(assert (=> b!110678 (=> (not res!54709) (not e!71972))))

(assert (=> b!110678 (= res!54709 (and (or (not ((_ is Cons!1605) lt!56997)) (bvsle (_1!1205 (h!2204 lt!56997)) (_1!1205 lt!56370))) ((_ is Cons!1605) lt!56997) (bvslt (_1!1205 (h!2204 lt!56997)) (_1!1205 lt!56370))))))

(declare-fun b!110679 () Bool)

(assert (=> b!110679 (= e!71972 (containsKey!162 (t!5738 lt!56997) (_1!1205 lt!56370)))))

(assert (= (and d!31201 (not res!54708)) b!110678))

(assert (= (and b!110678 res!54709) b!110679))

(declare-fun m!125603 () Bool)

(assert (=> b!110679 m!125603))

(assert (=> b!110460 d!31201))

(declare-fun d!31203 () Bool)

(declare-fun e!71974 () Bool)

(assert (=> d!31203 e!71974))

(declare-fun res!54710 () Bool)

(assert (=> d!31203 (=> res!54710 e!71974)))

(declare-fun lt!57083 () Bool)

(assert (=> d!31203 (= res!54710 (not lt!57083))))

(declare-fun lt!57084 () Bool)

(assert (=> d!31203 (= lt!57083 lt!57084)))

(declare-fun lt!57081 () Unit!3382)

(declare-fun e!71973 () Unit!3382)

(assert (=> d!31203 (= lt!57081 e!71973)))

(declare-fun c!19656 () Bool)

(assert (=> d!31203 (= c!19656 lt!57084)))

(assert (=> d!31203 (= lt!57084 (containsKey!162 (toList!789 lt!56831) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!31203 (= (contains!824 lt!56831 #b0000000000000000000000000000000000000000000000000000000000000000) lt!57083)))

(declare-fun b!110680 () Bool)

(declare-fun lt!57082 () Unit!3382)

(assert (=> b!110680 (= e!71973 lt!57082)))

(assert (=> b!110680 (= lt!57082 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 lt!56831) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!110680 (isDefined!111 (getValueByKey!159 (toList!789 lt!56831) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110681 () Bool)

(declare-fun Unit!3423 () Unit!3382)

(assert (=> b!110681 (= e!71973 Unit!3423)))

(declare-fun b!110682 () Bool)

(assert (=> b!110682 (= e!71974 (isDefined!111 (getValueByKey!159 (toList!789 lt!56831) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!31203 c!19656) b!110680))

(assert (= (and d!31203 (not c!19656)) b!110681))

(assert (= (and d!31203 (not res!54710)) b!110682))

(declare-fun m!125605 () Bool)

(assert (=> d!31203 m!125605))

(declare-fun m!125607 () Bool)

(assert (=> b!110680 m!125607))

(declare-fun m!125609 () Bool)

(assert (=> b!110680 m!125609))

(assert (=> b!110680 m!125609))

(declare-fun m!125611 () Bool)

(assert (=> b!110680 m!125611))

(assert (=> b!110682 m!125609))

(assert (=> b!110682 m!125609))

(assert (=> b!110682 m!125611))

(assert (=> bm!11735 d!31203))

(declare-fun b!110683 () Bool)

(declare-fun e!71979 () ListLongMap!1547)

(declare-fun call!11804 () ListLongMap!1547)

(assert (=> b!110683 (= e!71979 call!11804)))

(declare-fun d!31205 () Bool)

(declare-fun e!71976 () Bool)

(assert (=> d!31205 e!71976))

(declare-fun res!54712 () Bool)

(assert (=> d!31205 (=> (not res!54712) (not e!71976))))

(declare-fun lt!57091 () ListLongMap!1547)

(assert (=> d!31205 (= res!54712 (not (contains!824 lt!57091 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!71978 () ListLongMap!1547)

(assert (=> d!31205 (= lt!57091 e!71978)))

(declare-fun c!19660 () Bool)

(assert (=> d!31205 (= c!19660 (bvsge #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))))))

(assert (=> d!31205 (validMask!0 (mask!6794 newMap!16))))

(assert (=> d!31205 (= (getCurrentListMapNoExtraKeys!111 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) lt!57091)))

(declare-fun b!110684 () Bool)

(declare-fun e!71975 () Bool)

(assert (=> b!110684 (= e!71975 (isEmpty!382 lt!57091))))

(declare-fun b!110685 () Bool)

(assert (=> b!110685 (= e!71975 (= lt!57091 (getCurrentListMapNoExtraKeys!111 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2626 newMap!16))))))

(declare-fun bm!11801 () Bool)

(assert (=> bm!11801 (= call!11804 (getCurrentListMapNoExtraKeys!111 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2626 newMap!16)))))

(declare-fun b!110686 () Bool)

(declare-fun e!71981 () Bool)

(assert (=> b!110686 (= e!71981 e!71975)))

(declare-fun c!19657 () Bool)

(assert (=> b!110686 (= c!19657 (bvslt #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))))))

(declare-fun b!110687 () Bool)

(assert (=> b!110687 (= e!71976 e!71981)))

(declare-fun c!19659 () Bool)

(declare-fun e!71980 () Bool)

(assert (=> b!110687 (= c!19659 e!71980)))

(declare-fun res!54713 () Bool)

(assert (=> b!110687 (=> (not res!54713) (not e!71980))))

(assert (=> b!110687 (= res!54713 (bvslt #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))))))

(declare-fun b!110688 () Bool)

(declare-fun res!54711 () Bool)

(assert (=> b!110688 (=> (not res!54711) (not e!71976))))

(assert (=> b!110688 (= res!54711 (not (contains!824 lt!57091 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!110689 () Bool)

(assert (=> b!110689 (= e!71980 (validKeyInArray!0 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!110689 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!110690 () Bool)

(declare-fun e!71977 () Bool)

(assert (=> b!110690 (= e!71981 e!71977)))

(assert (=> b!110690 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))))))

(declare-fun res!54714 () Bool)

(assert (=> b!110690 (= res!54714 (contains!824 lt!57091 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!110690 (=> (not res!54714) (not e!71977))))

(declare-fun b!110691 () Bool)

(declare-fun lt!57089 () Unit!3382)

(declare-fun lt!57088 () Unit!3382)

(assert (=> b!110691 (= lt!57089 lt!57088)))

(declare-fun lt!57085 () (_ BitVec 64))

(declare-fun lt!57086 () (_ BitVec 64))

(declare-fun lt!57087 () ListLongMap!1547)

(declare-fun lt!57090 () V!3241)

(assert (=> b!110691 (not (contains!824 (+!144 lt!57087 (tuple2!2389 lt!57086 lt!57090)) lt!57085))))

(assert (=> b!110691 (= lt!57088 (addStillNotContains!50 lt!57087 lt!57086 lt!57090 lt!57085))))

(assert (=> b!110691 (= lt!57085 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!110691 (= lt!57090 (get!1353 (select (arr!2073 (_values!2609 newMap!16)) #b00000000000000000000000000000000) (dynLambda!390 (defaultEntry!2626 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!110691 (= lt!57086 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!110691 (= lt!57087 call!11804)))

(assert (=> b!110691 (= e!71979 (+!144 call!11804 (tuple2!2389 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000) (get!1353 (select (arr!2073 (_values!2609 newMap!16)) #b00000000000000000000000000000000) (dynLambda!390 (defaultEntry!2626 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!110692 () Bool)

(assert (=> b!110692 (= e!71978 e!71979)))

(declare-fun c!19658 () Bool)

(assert (=> b!110692 (= c!19658 (validKeyInArray!0 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!110693 () Bool)

(assert (=> b!110693 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))))))

(assert (=> b!110693 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2330 (_values!2609 newMap!16))))))

(assert (=> b!110693 (= e!71977 (= (apply!100 lt!57091 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)) (get!1353 (select (arr!2073 (_values!2609 newMap!16)) #b00000000000000000000000000000000) (dynLambda!390 (defaultEntry!2626 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!110694 () Bool)

(assert (=> b!110694 (= e!71978 (ListLongMap!1548 Nil!1606))))

(assert (= (and d!31205 c!19660) b!110694))

(assert (= (and d!31205 (not c!19660)) b!110692))

(assert (= (and b!110692 c!19658) b!110691))

(assert (= (and b!110692 (not c!19658)) b!110683))

(assert (= (or b!110691 b!110683) bm!11801))

(assert (= (and d!31205 res!54712) b!110688))

(assert (= (and b!110688 res!54711) b!110687))

(assert (= (and b!110687 res!54713) b!110689))

(assert (= (and b!110687 c!19659) b!110690))

(assert (= (and b!110687 (not c!19659)) b!110686))

(assert (= (and b!110690 res!54714) b!110693))

(assert (= (and b!110686 c!19657) b!110685))

(assert (= (and b!110686 (not c!19657)) b!110684))

(declare-fun b_lambda!4953 () Bool)

(assert (=> (not b_lambda!4953) (not b!110691)))

(assert (=> b!110691 t!5751))

(declare-fun b_and!6801 () Bool)

(assert (= b_and!6797 (and (=> t!5751 result!3533) b_and!6801)))

(assert (=> b!110691 t!5753))

(declare-fun b_and!6803 () Bool)

(assert (= b_and!6799 (and (=> t!5753 result!3535) b_and!6803)))

(declare-fun b_lambda!4955 () Bool)

(assert (=> (not b_lambda!4955) (not b!110693)))

(assert (=> b!110693 t!5751))

(declare-fun b_and!6805 () Bool)

(assert (= b_and!6801 (and (=> t!5751 result!3533) b_and!6805)))

(assert (=> b!110693 t!5753))

(declare-fun b_and!6807 () Bool)

(assert (= b_and!6803 (and (=> t!5753 result!3535) b_and!6807)))

(assert (=> b!110690 m!124605))

(assert (=> b!110690 m!124605))

(declare-fun m!125613 () Bool)

(assert (=> b!110690 m!125613))

(declare-fun m!125615 () Bool)

(assert (=> bm!11801 m!125615))

(assert (=> b!110693 m!124605))

(assert (=> b!110693 m!124973))

(assert (=> b!110693 m!124605))

(declare-fun m!125617 () Bool)

(assert (=> b!110693 m!125617))

(assert (=> b!110693 m!124973))

(assert (=> b!110693 m!124767))

(assert (=> b!110693 m!124975))

(assert (=> b!110693 m!124767))

(assert (=> b!110692 m!124605))

(assert (=> b!110692 m!124605))

(assert (=> b!110692 m!124607))

(assert (=> b!110689 m!124605))

(assert (=> b!110689 m!124605))

(assert (=> b!110689 m!124607))

(assert (=> b!110685 m!125615))

(declare-fun m!125619 () Bool)

(assert (=> d!31205 m!125619))

(assert (=> d!31205 m!124579))

(declare-fun m!125621 () Bool)

(assert (=> b!110684 m!125621))

(assert (=> b!110691 m!124605))

(assert (=> b!110691 m!124973))

(assert (=> b!110691 m!124767))

(assert (=> b!110691 m!124975))

(declare-fun m!125623 () Bool)

(assert (=> b!110691 m!125623))

(declare-fun m!125625 () Bool)

(assert (=> b!110691 m!125625))

(declare-fun m!125627 () Bool)

(assert (=> b!110691 m!125627))

(assert (=> b!110691 m!124973))

(assert (=> b!110691 m!125625))

(declare-fun m!125629 () Bool)

(assert (=> b!110691 m!125629))

(assert (=> b!110691 m!124767))

(declare-fun m!125631 () Bool)

(assert (=> b!110688 m!125631))

(assert (=> bm!11758 d!31205))

(declare-fun e!71992 () SeekEntryResult!255)

(declare-fun b!110713 () Bool)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!110713 (= e!71992 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (mask!6794 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (mask!6794 newMap!16)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (_keys!4340 newMap!16) (mask!6794 newMap!16)))))

(declare-fun d!31207 () Bool)

(declare-fun e!71996 () Bool)

(assert (=> d!31207 e!71996))

(declare-fun c!19669 () Bool)

(declare-fun lt!57097 () SeekEntryResult!255)

(assert (=> d!31207 (= c!19669 (and ((_ is Intermediate!255) lt!57097) (undefined!1067 lt!57097)))))

(declare-fun e!71995 () SeekEntryResult!255)

(assert (=> d!31207 (= lt!57097 e!71995)))

(declare-fun c!19667 () Bool)

(assert (=> d!31207 (= c!19667 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(declare-fun lt!57096 () (_ BitVec 64))

(assert (=> d!31207 (= lt!57096 (select (arr!2072 (_keys!4340 newMap!16)) (toIndex!0 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (mask!6794 newMap!16))))))

(assert (=> d!31207 (validMask!0 (mask!6794 newMap!16))))

(assert (=> d!31207 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (mask!6794 newMap!16)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (_keys!4340 newMap!16) (mask!6794 newMap!16)) lt!57097)))

(declare-fun b!110714 () Bool)

(assert (=> b!110714 (= e!71996 (bvsge (x!13943 lt!57097) #b01111111111111111111111111111110))))

(declare-fun b!110715 () Bool)

(assert (=> b!110715 (= e!71992 (Intermediate!255 false (toIndex!0 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (mask!6794 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!110716 () Bool)

(assert (=> b!110716 (= e!71995 (Intermediate!255 true (toIndex!0 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (mask!6794 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!110717 () Bool)

(declare-fun e!71994 () Bool)

(assert (=> b!110717 (= e!71996 e!71994)))

(declare-fun res!54722 () Bool)

(assert (=> b!110717 (= res!54722 (and ((_ is Intermediate!255) lt!57097) (not (undefined!1067 lt!57097)) (bvslt (x!13943 lt!57097) #b01111111111111111111111111111110) (bvsge (x!13943 lt!57097) #b00000000000000000000000000000000) (bvsge (x!13943 lt!57097) #b00000000000000000000000000000000)))))

(assert (=> b!110717 (=> (not res!54722) (not e!71994))))

(declare-fun b!110718 () Bool)

(assert (=> b!110718 (and (bvsge (index!3172 lt!57097) #b00000000000000000000000000000000) (bvslt (index!3172 lt!57097) (size!2329 (_keys!4340 newMap!16))))))

(declare-fun res!54721 () Bool)

(assert (=> b!110718 (= res!54721 (= (select (arr!2072 (_keys!4340 newMap!16)) (index!3172 lt!57097)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!71993 () Bool)

(assert (=> b!110718 (=> res!54721 e!71993)))

(declare-fun b!110719 () Bool)

(assert (=> b!110719 (and (bvsge (index!3172 lt!57097) #b00000000000000000000000000000000) (bvslt (index!3172 lt!57097) (size!2329 (_keys!4340 newMap!16))))))

(declare-fun res!54723 () Bool)

(assert (=> b!110719 (= res!54723 (= (select (arr!2072 (_keys!4340 newMap!16)) (index!3172 lt!57097)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(assert (=> b!110719 (=> res!54723 e!71993)))

(assert (=> b!110719 (= e!71994 e!71993)))

(declare-fun b!110720 () Bool)

(assert (=> b!110720 (and (bvsge (index!3172 lt!57097) #b00000000000000000000000000000000) (bvslt (index!3172 lt!57097) (size!2329 (_keys!4340 newMap!16))))))

(assert (=> b!110720 (= e!71993 (= (select (arr!2072 (_keys!4340 newMap!16)) (index!3172 lt!57097)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110721 () Bool)

(assert (=> b!110721 (= e!71995 e!71992)))

(declare-fun c!19668 () Bool)

(assert (=> b!110721 (= c!19668 (or (= lt!57096 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) (= (bvadd lt!57096 lt!57096) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!31207 c!19667) b!110716))

(assert (= (and d!31207 (not c!19667)) b!110721))

(assert (= (and b!110721 c!19668) b!110715))

(assert (= (and b!110721 (not c!19668)) b!110713))

(assert (= (and d!31207 c!19669) b!110714))

(assert (= (and d!31207 (not c!19669)) b!110717))

(assert (= (and b!110717 res!54722) b!110719))

(assert (= (and b!110719 (not res!54723)) b!110718))

(assert (= (and b!110718 (not res!54721)) b!110720))

(declare-fun m!125633 () Bool)

(assert (=> b!110720 m!125633))

(assert (=> d!31207 m!124673))

(declare-fun m!125635 () Bool)

(assert (=> d!31207 m!125635))

(assert (=> d!31207 m!124579))

(assert (=> b!110718 m!125633))

(assert (=> b!110713 m!124673))

(declare-fun m!125637 () Bool)

(assert (=> b!110713 m!125637))

(assert (=> b!110713 m!125637))

(assert (=> b!110713 m!124087))

(declare-fun m!125639 () Bool)

(assert (=> b!110713 m!125639))

(assert (=> b!110719 m!125633))

(assert (=> d!30901 d!31207))

(declare-fun d!31209 () Bool)

(declare-fun lt!57103 () (_ BitVec 32))

(declare-fun lt!57102 () (_ BitVec 32))

(assert (=> d!31209 (= lt!57103 (bvmul (bvxor lt!57102 (bvlshr lt!57102 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!31209 (= lt!57102 ((_ extract 31 0) (bvand (bvxor (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (bvlshr (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!31209 (and (bvsge (mask!6794 newMap!16) #b00000000000000000000000000000000) (let ((res!54724 (let ((h!2208 ((_ extract 31 0) (bvand (bvxor (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (bvlshr (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!14045 (bvmul (bvxor h!2208 (bvlshr h!2208 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!14045 (bvlshr x!14045 #b00000000000000000000000000001101)) (mask!6794 newMap!16)))))) (and (bvslt res!54724 (bvadd (mask!6794 newMap!16) #b00000000000000000000000000000001)) (bvsge res!54724 #b00000000000000000000000000000000))))))

(assert (=> d!31209 (= (toIndex!0 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (mask!6794 newMap!16)) (bvand (bvxor lt!57103 (bvlshr lt!57103 #b00000000000000000000000000001101)) (mask!6794 newMap!16)))))

(assert (=> d!30901 d!31209))

(assert (=> d!30901 d!31187))

(declare-fun d!31211 () Bool)

(assert (=> d!31211 (= (get!1356 (getValueByKey!159 (toList!789 lt!56545) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!2936 (getValueByKey!159 (toList!789 lt!56545) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!30973 d!31211))

(declare-fun b!110725 () Bool)

(declare-fun e!71998 () Option!165)

(assert (=> b!110725 (= e!71998 None!163)))

(declare-fun b!110722 () Bool)

(declare-fun e!71997 () Option!165)

(assert (=> b!110722 (= e!71997 (Some!164 (_2!1205 (h!2204 (toList!789 lt!56545)))))))

(declare-fun b!110724 () Bool)

(assert (=> b!110724 (= e!71998 (getValueByKey!159 (t!5738 (toList!789 lt!56545)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!31213 () Bool)

(declare-fun c!19670 () Bool)

(assert (=> d!31213 (= c!19670 (and ((_ is Cons!1605) (toList!789 lt!56545)) (= (_1!1205 (h!2204 (toList!789 lt!56545))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!31213 (= (getValueByKey!159 (toList!789 lt!56545) #b1000000000000000000000000000000000000000000000000000000000000000) e!71997)))

(declare-fun b!110723 () Bool)

(assert (=> b!110723 (= e!71997 e!71998)))

(declare-fun c!19671 () Bool)

(assert (=> b!110723 (= c!19671 (and ((_ is Cons!1605) (toList!789 lt!56545)) (not (= (_1!1205 (h!2204 (toList!789 lt!56545))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!31213 c!19670) b!110722))

(assert (= (and d!31213 (not c!19670)) b!110723))

(assert (= (and b!110723 c!19671) b!110724))

(assert (= (and b!110723 (not c!19671)) b!110725))

(declare-fun m!125641 () Bool)

(assert (=> b!110724 m!125641))

(assert (=> d!30973 d!31213))

(declare-fun d!31215 () Bool)

(assert (=> d!31215 (= (apply!100 lt!56966 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1356 (getValueByKey!159 (toList!789 lt!56966) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4554 () Bool)

(assert (= bs!4554 d!31215))

(declare-fun m!125643 () Bool)

(assert (=> bs!4554 m!125643))

(assert (=> bs!4554 m!125643))

(declare-fun m!125645 () Bool)

(assert (=> bs!4554 m!125645))

(assert (=> b!110410 d!31215))

(declare-fun b!110726 () Bool)

(declare-fun e!72000 () (_ BitVec 32))

(declare-fun call!11805 () (_ BitVec 32))

(assert (=> b!110726 (= e!72000 (bvadd #b00000000000000000000000000000001 call!11805))))

(declare-fun d!31217 () Bool)

(declare-fun lt!57104 () (_ BitVec 32))

(assert (=> d!31217 (and (bvsge lt!57104 #b00000000000000000000000000000000) (bvsle lt!57104 (bvsub (size!2329 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun e!71999 () (_ BitVec 32))

(assert (=> d!31217 (= lt!57104 e!71999)))

(declare-fun c!19673 () Bool)

(assert (=> d!31217 (= c!19673 (bvsge #b00000000000000000000000000000000 (size!2329 (_keys!4340 (v!2930 (underlying!370 thiss!992))))))))

(assert (=> d!31217 (and (bvsle #b00000000000000000000000000000000 (size!2329 (_keys!4340 (v!2930 (underlying!370 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2329 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (size!2329 (_keys!4340 (v!2930 (underlying!370 thiss!992))))))))

(assert (=> d!31217 (= (arrayCountValidKeys!0 (_keys!4340 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000000000 (size!2329 (_keys!4340 (v!2930 (underlying!370 thiss!992))))) lt!57104)))

(declare-fun b!110727 () Bool)

(assert (=> b!110727 (= e!71999 #b00000000000000000000000000000000)))

(declare-fun b!110728 () Bool)

(assert (=> b!110728 (= e!72000 call!11805)))

(declare-fun bm!11802 () Bool)

(assert (=> bm!11802 (= call!11805 (arrayCountValidKeys!0 (_keys!4340 (v!2930 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2329 (_keys!4340 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun b!110729 () Bool)

(assert (=> b!110729 (= e!71999 e!72000)))

(declare-fun c!19672 () Bool)

(assert (=> b!110729 (= c!19672 (validKeyInArray!0 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (= (and d!31217 c!19673) b!110727))

(assert (= (and d!31217 (not c!19673)) b!110729))

(assert (= (and b!110729 c!19672) b!110726))

(assert (= (and b!110729 (not c!19672)) b!110728))

(assert (= (or b!110726 b!110728) bm!11802))

(declare-fun m!125647 () Bool)

(assert (=> bm!11802 m!125647))

(assert (=> b!110729 m!125457))

(assert (=> b!110729 m!125457))

(assert (=> b!110729 m!125465))

(assert (=> b!110447 d!31217))

(declare-fun b!110733 () Bool)

(declare-fun e!72002 () Option!165)

(assert (=> b!110733 (= e!72002 None!163)))

(declare-fun b!110730 () Bool)

(declare-fun e!72001 () Option!165)

(assert (=> b!110730 (= e!72001 (Some!164 (_2!1205 (h!2204 (toList!789 lt!56896)))))))

(declare-fun b!110732 () Bool)

(assert (=> b!110732 (= e!72002 (getValueByKey!159 (t!5738 (toList!789 lt!56896)) (_1!1205 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun d!31219 () Bool)

(declare-fun c!19674 () Bool)

(assert (=> d!31219 (= c!19674 (and ((_ is Cons!1605) (toList!789 lt!56896)) (= (_1!1205 (h!2204 (toList!789 lt!56896))) (_1!1205 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> d!31219 (= (getValueByKey!159 (toList!789 lt!56896) (_1!1205 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))) e!72001)))

(declare-fun b!110731 () Bool)

(assert (=> b!110731 (= e!72001 e!72002)))

(declare-fun c!19675 () Bool)

(assert (=> b!110731 (= c!19675 (and ((_ is Cons!1605) (toList!789 lt!56896)) (not (= (_1!1205 (h!2204 (toList!789 lt!56896))) (_1!1205 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))))

(assert (= (and d!31219 c!19674) b!110730))

(assert (= (and d!31219 (not c!19674)) b!110731))

(assert (= (and b!110731 c!19675) b!110732))

(assert (= (and b!110731 (not c!19675)) b!110733))

(declare-fun m!125649 () Bool)

(assert (=> b!110732 m!125649))

(assert (=> b!110281 d!31219))

(assert (=> d!30931 d!31187))

(declare-fun b!110737 () Bool)

(declare-fun e!72004 () Option!165)

(assert (=> b!110737 (= e!72004 None!163)))

(declare-fun b!110734 () Bool)

(declare-fun e!72003 () Option!165)

(assert (=> b!110734 (= e!72003 (Some!164 (_2!1205 (h!2204 (toList!789 lt!56873)))))))

(declare-fun b!110736 () Bool)

(assert (=> b!110736 (= e!72004 (getValueByKey!159 (t!5738 (toList!789 lt!56873)) (_1!1205 (tuple2!2389 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun c!19676 () Bool)

(declare-fun d!31221 () Bool)

(assert (=> d!31221 (= c!19676 (and ((_ is Cons!1605) (toList!789 lt!56873)) (= (_1!1205 (h!2204 (toList!789 lt!56873))) (_1!1205 (tuple2!2389 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> d!31221 (= (getValueByKey!159 (toList!789 lt!56873) (_1!1205 (tuple2!2389 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))) e!72003)))

(declare-fun b!110735 () Bool)

(assert (=> b!110735 (= e!72003 e!72004)))

(declare-fun c!19677 () Bool)

(assert (=> b!110735 (= c!19677 (and ((_ is Cons!1605) (toList!789 lt!56873)) (not (= (_1!1205 (h!2204 (toList!789 lt!56873))) (_1!1205 (tuple2!2389 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))))

(assert (= (and d!31221 c!19676) b!110734))

(assert (= (and d!31221 (not c!19676)) b!110735))

(assert (= (and b!110735 c!19677) b!110736))

(assert (= (and b!110735 (not c!19677)) b!110737))

(declare-fun m!125651 () Bool)

(assert (=> b!110736 m!125651))

(assert (=> b!110266 d!31221))

(declare-fun b!110741 () Bool)

(declare-fun e!72006 () Option!165)

(assert (=> b!110741 (= e!72006 None!163)))

(declare-fun b!110738 () Bool)

(declare-fun e!72005 () Option!165)

(assert (=> b!110738 (= e!72005 (Some!164 (_2!1205 (h!2204 (toList!789 lt!57001)))))))

(declare-fun b!110740 () Bool)

(assert (=> b!110740 (= e!72006 (getValueByKey!159 (t!5738 (toList!789 lt!57001)) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))

(declare-fun c!19678 () Bool)

(declare-fun d!31223 () Bool)

(assert (=> d!31223 (= c!19678 (and ((_ is Cons!1605) (toList!789 lt!57001)) (= (_1!1205 (h!2204 (toList!789 lt!57001))) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))))))

(assert (=> d!31223 (= (getValueByKey!159 (toList!789 lt!57001) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))) e!72005)))

(declare-fun b!110739 () Bool)

(assert (=> b!110739 (= e!72005 e!72006)))

(declare-fun c!19679 () Bool)

(assert (=> b!110739 (= c!19679 (and ((_ is Cons!1605) (toList!789 lt!57001)) (not (= (_1!1205 (h!2204 (toList!789 lt!57001))) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))))

(assert (= (and d!31223 c!19678) b!110738))

(assert (= (and d!31223 (not c!19678)) b!110739))

(assert (= (and b!110739 c!19679) b!110740))

(assert (= (and b!110739 (not c!19679)) b!110741))

(declare-fun m!125653 () Bool)

(assert (=> b!110740 m!125653))

(assert (=> b!110469 d!31223))

(declare-fun d!31225 () Bool)

(assert (=> d!31225 (= (isEmpty!384 (toList!789 lt!56479)) ((_ is Nil!1606) (toList!789 lt!56479)))))

(assert (=> d!31023 d!31225))

(declare-fun d!31227 () Bool)

(declare-fun lt!57105 () Bool)

(assert (=> d!31227 (= lt!57105 (select (content!114 (toList!789 lt!56784)) (ite c!19458 (ite c!19454 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))

(declare-fun e!72008 () Bool)

(assert (=> d!31227 (= lt!57105 e!72008)))

(declare-fun res!54726 () Bool)

(assert (=> d!31227 (=> (not res!54726) (not e!72008))))

(assert (=> d!31227 (= res!54726 ((_ is Cons!1605) (toList!789 lt!56784)))))

(assert (=> d!31227 (= (contains!827 (toList!789 lt!56784) (ite c!19458 (ite c!19454 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))) lt!57105)))

(declare-fun b!110742 () Bool)

(declare-fun e!72007 () Bool)

(assert (=> b!110742 (= e!72008 e!72007)))

(declare-fun res!54725 () Bool)

(assert (=> b!110742 (=> res!54725 e!72007)))

(assert (=> b!110742 (= res!54725 (= (h!2204 (toList!789 lt!56784)) (ite c!19458 (ite c!19454 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))

(declare-fun b!110743 () Bool)

(assert (=> b!110743 (= e!72007 (contains!827 (t!5738 (toList!789 lt!56784)) (ite c!19458 (ite c!19454 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))

(assert (= (and d!31227 res!54726) b!110742))

(assert (= (and b!110742 (not res!54725)) b!110743))

(declare-fun m!125655 () Bool)

(assert (=> d!31227 m!125655))

(declare-fun m!125657 () Bool)

(assert (=> d!31227 m!125657))

(declare-fun m!125659 () Bool)

(assert (=> b!110743 m!125659))

(assert (=> b!110103 d!31227))

(declare-fun d!31229 () Bool)

(declare-fun lt!57106 () Bool)

(assert (=> d!31229 (= lt!57106 (select (content!114 (t!5738 (toList!789 lt!56483))) lt!56363))))

(declare-fun e!72010 () Bool)

(assert (=> d!31229 (= lt!57106 e!72010)))

(declare-fun res!54728 () Bool)

(assert (=> d!31229 (=> (not res!54728) (not e!72010))))

(assert (=> d!31229 (= res!54728 ((_ is Cons!1605) (t!5738 (toList!789 lt!56483))))))

(assert (=> d!31229 (= (contains!827 (t!5738 (toList!789 lt!56483)) lt!56363) lt!57106)))

(declare-fun b!110744 () Bool)

(declare-fun e!72009 () Bool)

(assert (=> b!110744 (= e!72010 e!72009)))

(declare-fun res!54727 () Bool)

(assert (=> b!110744 (=> res!54727 e!72009)))

(assert (=> b!110744 (= res!54727 (= (h!2204 (t!5738 (toList!789 lt!56483))) lt!56363))))

(declare-fun b!110745 () Bool)

(assert (=> b!110745 (= e!72009 (contains!827 (t!5738 (t!5738 (toList!789 lt!56483))) lt!56363))))

(assert (= (and d!31229 res!54728) b!110744))

(assert (= (and b!110744 (not res!54727)) b!110745))

(assert (=> d!31229 m!125567))

(declare-fun m!125661 () Bool)

(assert (=> d!31229 m!125661))

(declare-fun m!125663 () Bool)

(assert (=> b!110745 m!125663))

(assert (=> b!110247 d!31229))

(declare-fun d!31231 () Bool)

(declare-fun lt!57107 () Bool)

(assert (=> d!31231 (= lt!57107 (select (content!114 (t!5738 (toList!789 lt!56454))) lt!56370))))

(declare-fun e!72012 () Bool)

(assert (=> d!31231 (= lt!57107 e!72012)))

(declare-fun res!54730 () Bool)

(assert (=> d!31231 (=> (not res!54730) (not e!72012))))

(assert (=> d!31231 (= res!54730 ((_ is Cons!1605) (t!5738 (toList!789 lt!56454))))))

(assert (=> d!31231 (= (contains!827 (t!5738 (toList!789 lt!56454)) lt!56370) lt!57107)))

(declare-fun b!110746 () Bool)

(declare-fun e!72011 () Bool)

(assert (=> b!110746 (= e!72012 e!72011)))

(declare-fun res!54729 () Bool)

(assert (=> b!110746 (=> res!54729 e!72011)))

(assert (=> b!110746 (= res!54729 (= (h!2204 (t!5738 (toList!789 lt!56454))) lt!56370))))

(declare-fun b!110747 () Bool)

(assert (=> b!110747 (= e!72011 (contains!827 (t!5738 (t!5738 (toList!789 lt!56454))) lt!56370))))

(assert (= (and d!31231 res!54730) b!110746))

(assert (= (and b!110746 (not res!54729)) b!110747))

(assert (=> d!31231 m!125353))

(declare-fun m!125665 () Bool)

(assert (=> d!31231 m!125665))

(declare-fun m!125667 () Bool)

(assert (=> b!110747 m!125667))

(assert (=> b!110116 d!31231))

(assert (=> bm!11727 d!30901))

(declare-fun d!31233 () Bool)

(assert (=> d!31233 (isDefined!111 (getValueByKey!159 (toList!789 lt!56487) (_1!1205 lt!56370)))))

(declare-fun lt!57108 () Unit!3382)

(assert (=> d!31233 (= lt!57108 (choose!696 (toList!789 lt!56487) (_1!1205 lt!56370)))))

(declare-fun e!72013 () Bool)

(assert (=> d!31233 e!72013))

(declare-fun res!54731 () Bool)

(assert (=> d!31233 (=> (not res!54731) (not e!72013))))

(assert (=> d!31233 (= res!54731 (isStrictlySorted!298 (toList!789 lt!56487)))))

(assert (=> d!31233 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 lt!56487) (_1!1205 lt!56370)) lt!57108)))

(declare-fun b!110748 () Bool)

(assert (=> b!110748 (= e!72013 (containsKey!162 (toList!789 lt!56487) (_1!1205 lt!56370)))))

(assert (= (and d!31233 res!54731) b!110748))

(assert (=> d!31233 m!124315))

(assert (=> d!31233 m!124315))

(assert (=> d!31233 m!125085))

(declare-fun m!125669 () Bool)

(assert (=> d!31233 m!125669))

(declare-fun m!125671 () Bool)

(assert (=> d!31233 m!125671))

(assert (=> b!110748 m!125081))

(assert (=> b!110373 d!31233))

(assert (=> b!110373 d!31065))

(assert (=> b!110373 d!31029))

(declare-fun d!31235 () Bool)

(declare-fun c!19680 () Bool)

(assert (=> d!31235 (= c!19680 ((_ is Nil!1606) (toList!789 lt!56458)))))

(declare-fun e!72014 () (InoxSet tuple2!2388))

(assert (=> d!31235 (= (content!114 (toList!789 lt!56458)) e!72014)))

(declare-fun b!110749 () Bool)

(assert (=> b!110749 (= e!72014 ((as const (Array tuple2!2388 Bool)) false))))

(declare-fun b!110750 () Bool)

(assert (=> b!110750 (= e!72014 ((_ map or) (store ((as const (Array tuple2!2388 Bool)) false) (h!2204 (toList!789 lt!56458)) true) (content!114 (t!5738 (toList!789 lt!56458)))))))

(assert (= (and d!31235 c!19680) b!110749))

(assert (= (and d!31235 (not c!19680)) b!110750))

(declare-fun m!125673 () Bool)

(assert (=> b!110750 m!125673))

(declare-fun m!125675 () Bool)

(assert (=> b!110750 m!125675))

(assert (=> d!30875 d!31235))

(declare-fun d!31237 () Bool)

(assert (=> d!31237 (isDefined!111 (getValueByKey!159 (toList!789 e!71536) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(declare-fun lt!57109 () Unit!3382)

(assert (=> d!31237 (= lt!57109 (choose!696 (toList!789 e!71536) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(declare-fun e!72015 () Bool)

(assert (=> d!31237 e!72015))

(declare-fun res!54732 () Bool)

(assert (=> d!31237 (=> (not res!54732) (not e!72015))))

(assert (=> d!31237 (= res!54732 (isStrictlySorted!298 (toList!789 e!71536)))))

(assert (=> d!31237 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 e!71536) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) lt!57109)))

(declare-fun b!110751 () Bool)

(assert (=> b!110751 (= e!72015 (containsKey!162 (toList!789 e!71536) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(assert (= (and d!31237 res!54732) b!110751))

(assert (=> d!31237 m!124087))

(assert (=> d!31237 m!124599))

(assert (=> d!31237 m!124599))

(assert (=> d!31237 m!124601))

(assert (=> d!31237 m!124087))

(declare-fun m!125677 () Bool)

(assert (=> d!31237 m!125677))

(declare-fun m!125679 () Bool)

(assert (=> d!31237 m!125679))

(assert (=> b!110751 m!124087))

(assert (=> b!110751 m!124595))

(assert (=> b!110088 d!31237))

(assert (=> b!110088 d!31107))

(assert (=> b!110088 d!31109))

(declare-fun d!31239 () Bool)

(assert (=> d!31239 (= (apply!100 lt!56966 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1356 (getValueByKey!159 (toList!789 lt!56966) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4555 () Bool)

(assert (= bs!4555 d!31239))

(declare-fun m!125681 () Bool)

(assert (=> bs!4555 m!125681))

(assert (=> bs!4555 m!125681))

(declare-fun m!125683 () Bool)

(assert (=> bs!4555 m!125683))

(assert (=> b!110403 d!31239))

(declare-fun d!31241 () Bool)

(assert (=> d!31241 (isDefined!111 (getValueByKey!159 (toList!789 lt!56479) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!57110 () Unit!3382)

(assert (=> d!31241 (= lt!57110 (choose!696 (toList!789 lt!56479) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!72016 () Bool)

(assert (=> d!31241 e!72016))

(declare-fun res!54733 () Bool)

(assert (=> d!31241 (=> (not res!54733) (not e!72016))))

(assert (=> d!31241 (= res!54733 (isStrictlySorted!298 (toList!789 lt!56479)))))

(assert (=> d!31241 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 lt!56479) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!57110)))

(declare-fun b!110752 () Bool)

(assert (=> b!110752 (= e!72016 (containsKey!162 (toList!789 lt!56479) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!31241 res!54733) b!110752))

(assert (=> d!31241 m!124267))

(assert (=> d!31241 m!124585))

(assert (=> d!31241 m!124585))

(assert (=> d!31241 m!125179))

(assert (=> d!31241 m!124267))

(declare-fun m!125685 () Bool)

(assert (=> d!31241 m!125685))

(declare-fun m!125687 () Bool)

(assert (=> d!31241 m!125687))

(assert (=> b!110752 m!124267))

(assert (=> b!110752 m!125175))

(assert (=> b!110420 d!31241))

(assert (=> b!110420 d!31083))

(assert (=> b!110420 d!31085))

(assert (=> bm!11730 d!30971))

(declare-fun b!110756 () Bool)

(declare-fun e!72018 () Option!165)

(assert (=> b!110756 (= e!72018 None!163)))

(declare-fun b!110753 () Bool)

(declare-fun e!72017 () Option!165)

(assert (=> b!110753 (= e!72017 (Some!164 (_2!1205 (h!2204 (t!5738 lt!56486)))))))

(declare-fun b!110755 () Bool)

(assert (=> b!110755 (= e!72018 (getValueByKey!159 (t!5738 (t!5738 lt!56486)) (_1!1205 lt!56370)))))

(declare-fun d!31243 () Bool)

(declare-fun c!19681 () Bool)

(assert (=> d!31243 (= c!19681 (and ((_ is Cons!1605) (t!5738 lt!56486)) (= (_1!1205 (h!2204 (t!5738 lt!56486))) (_1!1205 lt!56370))))))

(assert (=> d!31243 (= (getValueByKey!159 (t!5738 lt!56486) (_1!1205 lt!56370)) e!72017)))

(declare-fun b!110754 () Bool)

(assert (=> b!110754 (= e!72017 e!72018)))

(declare-fun c!19682 () Bool)

(assert (=> b!110754 (= c!19682 (and ((_ is Cons!1605) (t!5738 lt!56486)) (not (= (_1!1205 (h!2204 (t!5738 lt!56486))) (_1!1205 lt!56370)))))))

(assert (= (and d!31243 c!19681) b!110753))

(assert (= (and d!31243 (not c!19681)) b!110754))

(assert (= (and b!110754 c!19682) b!110755))

(assert (= (and b!110754 (not c!19682)) b!110756))

(declare-fun m!125689 () Bool)

(assert (=> b!110755 m!125689))

(assert (=> b!110378 d!31243))

(declare-fun d!31245 () Bool)

(declare-fun res!54734 () Bool)

(declare-fun e!72019 () Bool)

(assert (=> d!31245 (=> res!54734 e!72019)))

(assert (=> d!31245 (= res!54734 (and ((_ is Cons!1605) lt!56852) (= (_1!1205 (h!2204 lt!56852)) (_1!1205 lt!56363))))))

(assert (=> d!31245 (= (containsKey!162 lt!56852 (_1!1205 lt!56363)) e!72019)))

(declare-fun b!110757 () Bool)

(declare-fun e!72020 () Bool)

(assert (=> b!110757 (= e!72019 e!72020)))

(declare-fun res!54735 () Bool)

(assert (=> b!110757 (=> (not res!54735) (not e!72020))))

(assert (=> b!110757 (= res!54735 (and (or (not ((_ is Cons!1605) lt!56852)) (bvsle (_1!1205 (h!2204 lt!56852)) (_1!1205 lt!56363))) ((_ is Cons!1605) lt!56852) (bvslt (_1!1205 (h!2204 lt!56852)) (_1!1205 lt!56363))))))

(declare-fun b!110758 () Bool)

(assert (=> b!110758 (= e!72020 (containsKey!162 (t!5738 lt!56852) (_1!1205 lt!56363)))))

(assert (= (and d!31245 (not res!54734)) b!110757))

(assert (= (and b!110757 res!54735) b!110758))

(declare-fun m!125691 () Bool)

(assert (=> b!110758 m!125691))

(assert (=> b!110225 d!31245))

(declare-fun d!31247 () Bool)

(declare-fun res!54736 () Bool)

(declare-fun e!72021 () Bool)

(assert (=> d!31247 (=> res!54736 e!72021)))

(assert (=> d!31247 (= res!54736 (and ((_ is Cons!1605) (t!5738 (toList!789 lt!56367))) (= (_1!1205 (h!2204 (t!5738 (toList!789 lt!56367)))) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355))))))

(assert (=> d!31247 (= (containsKey!162 (t!5738 (toList!789 lt!56367)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) e!72021)))

(declare-fun b!110759 () Bool)

(declare-fun e!72022 () Bool)

(assert (=> b!110759 (= e!72021 e!72022)))

(declare-fun res!54737 () Bool)

(assert (=> b!110759 (=> (not res!54737) (not e!72022))))

(assert (=> b!110759 (= res!54737 (and (or (not ((_ is Cons!1605) (t!5738 (toList!789 lt!56367)))) (bvsle (_1!1205 (h!2204 (t!5738 (toList!789 lt!56367)))) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355))) ((_ is Cons!1605) (t!5738 (toList!789 lt!56367))) (bvslt (_1!1205 (h!2204 (t!5738 (toList!789 lt!56367)))) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355))))))

(declare-fun b!110760 () Bool)

(assert (=> b!110760 (= e!72022 (containsKey!162 (t!5738 (t!5738 (toList!789 lt!56367))) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(assert (= (and d!31247 (not res!54736)) b!110759))

(assert (= (and b!110759 res!54737) b!110760))

(assert (=> b!110760 m!124087))

(declare-fun m!125693 () Bool)

(assert (=> b!110760 m!125693))

(assert (=> b!110096 d!31247))

(declare-fun b!110761 () Bool)

(declare-fun res!54738 () Bool)

(declare-fun e!72033 () Bool)

(assert (=> b!110761 (=> (not res!54738) (not e!72033))))

(declare-fun e!72029 () Bool)

(assert (=> b!110761 (= res!54738 e!72029)))

(declare-fun res!54741 () Bool)

(assert (=> b!110761 (=> res!54741 e!72029)))

(declare-fun e!72034 () Bool)

(assert (=> b!110761 (= res!54741 (not e!72034))))

(declare-fun res!54745 () Bool)

(assert (=> b!110761 (=> (not res!54745) (not e!72034))))

(assert (=> b!110761 (= res!54745 (bvslt #b00000000000000000000000000000000 (size!2329 (_keys!4340 (_2!1204 lt!56628)))))))

(declare-fun bm!11803 () Bool)

(declare-fun call!11809 () Bool)

(declare-fun lt!57121 () ListLongMap!1547)

(assert (=> bm!11803 (= call!11809 (contains!824 lt!57121 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110762 () Bool)

(declare-fun e!72026 () Unit!3382)

(declare-fun Unit!3424 () Unit!3382)

(assert (=> b!110762 (= e!72026 Unit!3424)))

(declare-fun b!110763 () Bool)

(declare-fun e!72024 () ListLongMap!1547)

(declare-fun call!11812 () ListLongMap!1547)

(assert (=> b!110763 (= e!72024 (+!144 call!11812 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (_2!1204 lt!56628)))))))

(declare-fun b!110764 () Bool)

(declare-fun e!72028 () Bool)

(assert (=> b!110764 (= e!72029 e!72028)))

(declare-fun res!54739 () Bool)

(assert (=> b!110764 (=> (not res!54739) (not e!72028))))

(assert (=> b!110764 (= res!54739 (contains!824 lt!57121 (select (arr!2072 (_keys!4340 (_2!1204 lt!56628))) #b00000000000000000000000000000000)))))

(assert (=> b!110764 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2329 (_keys!4340 (_2!1204 lt!56628)))))))

(declare-fun b!110765 () Bool)

(declare-fun lt!57132 () Unit!3382)

(assert (=> b!110765 (= e!72026 lt!57132)))

(declare-fun lt!57122 () ListLongMap!1547)

(assert (=> b!110765 (= lt!57122 (getCurrentListMapNoExtraKeys!111 (_keys!4340 (_2!1204 lt!56628)) (_values!2609 (_2!1204 lt!56628)) (mask!6794 (_2!1204 lt!56628)) (extraKeys!2423 (_2!1204 lt!56628)) (zeroValue!2497 (_2!1204 lt!56628)) (minValue!2497 (_2!1204 lt!56628)) #b00000000000000000000000000000000 (defaultEntry!2626 (_2!1204 lt!56628))))))

(declare-fun lt!57129 () (_ BitVec 64))

(assert (=> b!110765 (= lt!57129 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57124 () (_ BitVec 64))

(assert (=> b!110765 (= lt!57124 (select (arr!2072 (_keys!4340 (_2!1204 lt!56628))) #b00000000000000000000000000000000))))

(declare-fun lt!57125 () Unit!3382)

(assert (=> b!110765 (= lt!57125 (addStillContains!76 lt!57122 lt!57129 (zeroValue!2497 (_2!1204 lt!56628)) lt!57124))))

(assert (=> b!110765 (contains!824 (+!144 lt!57122 (tuple2!2389 lt!57129 (zeroValue!2497 (_2!1204 lt!56628)))) lt!57124)))

(declare-fun lt!57127 () Unit!3382)

(assert (=> b!110765 (= lt!57127 lt!57125)))

(declare-fun lt!57112 () ListLongMap!1547)

(assert (=> b!110765 (= lt!57112 (getCurrentListMapNoExtraKeys!111 (_keys!4340 (_2!1204 lt!56628)) (_values!2609 (_2!1204 lt!56628)) (mask!6794 (_2!1204 lt!56628)) (extraKeys!2423 (_2!1204 lt!56628)) (zeroValue!2497 (_2!1204 lt!56628)) (minValue!2497 (_2!1204 lt!56628)) #b00000000000000000000000000000000 (defaultEntry!2626 (_2!1204 lt!56628))))))

(declare-fun lt!57117 () (_ BitVec 64))

(assert (=> b!110765 (= lt!57117 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57114 () (_ BitVec 64))

(assert (=> b!110765 (= lt!57114 (select (arr!2072 (_keys!4340 (_2!1204 lt!56628))) #b00000000000000000000000000000000))))

(declare-fun lt!57116 () Unit!3382)

(assert (=> b!110765 (= lt!57116 (addApplyDifferent!76 lt!57112 lt!57117 (minValue!2497 (_2!1204 lt!56628)) lt!57114))))

(assert (=> b!110765 (= (apply!100 (+!144 lt!57112 (tuple2!2389 lt!57117 (minValue!2497 (_2!1204 lt!56628)))) lt!57114) (apply!100 lt!57112 lt!57114))))

(declare-fun lt!57111 () Unit!3382)

(assert (=> b!110765 (= lt!57111 lt!57116)))

(declare-fun lt!57120 () ListLongMap!1547)

(assert (=> b!110765 (= lt!57120 (getCurrentListMapNoExtraKeys!111 (_keys!4340 (_2!1204 lt!56628)) (_values!2609 (_2!1204 lt!56628)) (mask!6794 (_2!1204 lt!56628)) (extraKeys!2423 (_2!1204 lt!56628)) (zeroValue!2497 (_2!1204 lt!56628)) (minValue!2497 (_2!1204 lt!56628)) #b00000000000000000000000000000000 (defaultEntry!2626 (_2!1204 lt!56628))))))

(declare-fun lt!57131 () (_ BitVec 64))

(assert (=> b!110765 (= lt!57131 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57126 () (_ BitVec 64))

(assert (=> b!110765 (= lt!57126 (select (arr!2072 (_keys!4340 (_2!1204 lt!56628))) #b00000000000000000000000000000000))))

(declare-fun lt!57115 () Unit!3382)

(assert (=> b!110765 (= lt!57115 (addApplyDifferent!76 lt!57120 lt!57131 (zeroValue!2497 (_2!1204 lt!56628)) lt!57126))))

(assert (=> b!110765 (= (apply!100 (+!144 lt!57120 (tuple2!2389 lt!57131 (zeroValue!2497 (_2!1204 lt!56628)))) lt!57126) (apply!100 lt!57120 lt!57126))))

(declare-fun lt!57123 () Unit!3382)

(assert (=> b!110765 (= lt!57123 lt!57115)))

(declare-fun lt!57130 () ListLongMap!1547)

(assert (=> b!110765 (= lt!57130 (getCurrentListMapNoExtraKeys!111 (_keys!4340 (_2!1204 lt!56628)) (_values!2609 (_2!1204 lt!56628)) (mask!6794 (_2!1204 lt!56628)) (extraKeys!2423 (_2!1204 lt!56628)) (zeroValue!2497 (_2!1204 lt!56628)) (minValue!2497 (_2!1204 lt!56628)) #b00000000000000000000000000000000 (defaultEntry!2626 (_2!1204 lt!56628))))))

(declare-fun lt!57119 () (_ BitVec 64))

(assert (=> b!110765 (= lt!57119 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57113 () (_ BitVec 64))

(assert (=> b!110765 (= lt!57113 (select (arr!2072 (_keys!4340 (_2!1204 lt!56628))) #b00000000000000000000000000000000))))

(assert (=> b!110765 (= lt!57132 (addApplyDifferent!76 lt!57130 lt!57119 (minValue!2497 (_2!1204 lt!56628)) lt!57113))))

(assert (=> b!110765 (= (apply!100 (+!144 lt!57130 (tuple2!2389 lt!57119 (minValue!2497 (_2!1204 lt!56628)))) lt!57113) (apply!100 lt!57130 lt!57113))))

(declare-fun d!31249 () Bool)

(assert (=> d!31249 e!72033))

(declare-fun res!54743 () Bool)

(assert (=> d!31249 (=> (not res!54743) (not e!72033))))

(assert (=> d!31249 (= res!54743 (or (bvsge #b00000000000000000000000000000000 (size!2329 (_keys!4340 (_2!1204 lt!56628)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2329 (_keys!4340 (_2!1204 lt!56628)))))))))

(declare-fun lt!57128 () ListLongMap!1547)

(assert (=> d!31249 (= lt!57121 lt!57128)))

(declare-fun lt!57118 () Unit!3382)

(assert (=> d!31249 (= lt!57118 e!72026)))

(declare-fun c!19688 () Bool)

(declare-fun e!72027 () Bool)

(assert (=> d!31249 (= c!19688 e!72027)))

(declare-fun res!54740 () Bool)

(assert (=> d!31249 (=> (not res!54740) (not e!72027))))

(assert (=> d!31249 (= res!54740 (bvslt #b00000000000000000000000000000000 (size!2329 (_keys!4340 (_2!1204 lt!56628)))))))

(assert (=> d!31249 (= lt!57128 e!72024)))

(declare-fun c!19685 () Bool)

(assert (=> d!31249 (= c!19685 (and (not (= (bvand (extraKeys!2423 (_2!1204 lt!56628)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2423 (_2!1204 lt!56628)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!31249 (validMask!0 (mask!6794 (_2!1204 lt!56628)))))

(assert (=> d!31249 (= (getCurrentListMap!475 (_keys!4340 (_2!1204 lt!56628)) (_values!2609 (_2!1204 lt!56628)) (mask!6794 (_2!1204 lt!56628)) (extraKeys!2423 (_2!1204 lt!56628)) (zeroValue!2497 (_2!1204 lt!56628)) (minValue!2497 (_2!1204 lt!56628)) #b00000000000000000000000000000000 (defaultEntry!2626 (_2!1204 lt!56628))) lt!57121)))

(declare-fun bm!11804 () Bool)

(declare-fun call!11810 () ListLongMap!1547)

(declare-fun call!11807 () ListLongMap!1547)

(assert (=> bm!11804 (= call!11810 call!11807)))

(declare-fun b!110766 () Bool)

(declare-fun e!72032 () ListLongMap!1547)

(declare-fun call!11808 () ListLongMap!1547)

(assert (=> b!110766 (= e!72032 call!11808)))

(declare-fun b!110767 () Bool)

(declare-fun e!72031 () Bool)

(declare-fun call!11811 () Bool)

(assert (=> b!110767 (= e!72031 (not call!11811))))

(declare-fun b!110768 () Bool)

(declare-fun c!19684 () Bool)

(assert (=> b!110768 (= c!19684 (and (not (= (bvand (extraKeys!2423 (_2!1204 lt!56628)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2423 (_2!1204 lt!56628)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!72035 () ListLongMap!1547)

(assert (=> b!110768 (= e!72032 e!72035)))

(declare-fun b!110769 () Bool)

(declare-fun e!72025 () Bool)

(assert (=> b!110769 (= e!72025 (not call!11809))))

(declare-fun bm!11805 () Bool)

(assert (=> bm!11805 (= call!11811 (contains!824 lt!57121 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110770 () Bool)

(declare-fun e!72023 () Bool)

(assert (=> b!110770 (= e!72025 e!72023)))

(declare-fun res!54742 () Bool)

(assert (=> b!110770 (= res!54742 call!11809)))

(assert (=> b!110770 (=> (not res!54742) (not e!72023))))

(declare-fun b!110771 () Bool)

(assert (=> b!110771 (= e!72028 (= (apply!100 lt!57121 (select (arr!2072 (_keys!4340 (_2!1204 lt!56628))) #b00000000000000000000000000000000)) (get!1353 (select (arr!2073 (_values!2609 (_2!1204 lt!56628))) #b00000000000000000000000000000000) (dynLambda!390 (defaultEntry!2626 (_2!1204 lt!56628)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!110771 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2330 (_values!2609 (_2!1204 lt!56628)))))))

(assert (=> b!110771 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2329 (_keys!4340 (_2!1204 lt!56628)))))))

(declare-fun c!19683 () Bool)

(declare-fun call!11806 () ListLongMap!1547)

(declare-fun bm!11806 () Bool)

(assert (=> bm!11806 (= call!11812 (+!144 (ite c!19685 call!11807 (ite c!19683 call!11810 call!11806)) (ite (or c!19685 c!19683) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (_2!1204 lt!56628))) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (_2!1204 lt!56628))))))))

(declare-fun b!110772 () Bool)

(declare-fun e!72030 () Bool)

(assert (=> b!110772 (= e!72030 (= (apply!100 lt!57121 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2497 (_2!1204 lt!56628))))))

(declare-fun b!110773 () Bool)

(assert (=> b!110773 (= e!72033 e!72025)))

(declare-fun c!19687 () Bool)

(assert (=> b!110773 (= c!19687 (not (= (bvand (extraKeys!2423 (_2!1204 lt!56628)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11807 () Bool)

(assert (=> bm!11807 (= call!11808 call!11812)))

(declare-fun b!110774 () Bool)

(declare-fun res!54744 () Bool)

(assert (=> b!110774 (=> (not res!54744) (not e!72033))))

(assert (=> b!110774 (= res!54744 e!72031)))

(declare-fun c!19686 () Bool)

(assert (=> b!110774 (= c!19686 (not (= (bvand (extraKeys!2423 (_2!1204 lt!56628)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!110775 () Bool)

(assert (=> b!110775 (= e!72035 call!11806)))

(declare-fun bm!11808 () Bool)

(assert (=> bm!11808 (= call!11806 call!11810)))

(declare-fun b!110776 () Bool)

(assert (=> b!110776 (= e!72035 call!11808)))

(declare-fun b!110777 () Bool)

(assert (=> b!110777 (= e!72027 (validKeyInArray!0 (select (arr!2072 (_keys!4340 (_2!1204 lt!56628))) #b00000000000000000000000000000000)))))

(declare-fun b!110778 () Bool)

(assert (=> b!110778 (= e!72031 e!72030)))

(declare-fun res!54746 () Bool)

(assert (=> b!110778 (= res!54746 call!11811)))

(assert (=> b!110778 (=> (not res!54746) (not e!72030))))

(declare-fun b!110779 () Bool)

(assert (=> b!110779 (= e!72023 (= (apply!100 lt!57121 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2497 (_2!1204 lt!56628))))))

(declare-fun b!110780 () Bool)

(assert (=> b!110780 (= e!72034 (validKeyInArray!0 (select (arr!2072 (_keys!4340 (_2!1204 lt!56628))) #b00000000000000000000000000000000)))))

(declare-fun b!110781 () Bool)

(assert (=> b!110781 (= e!72024 e!72032)))

(assert (=> b!110781 (= c!19683 (and (not (= (bvand (extraKeys!2423 (_2!1204 lt!56628)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2423 (_2!1204 lt!56628)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11809 () Bool)

(assert (=> bm!11809 (= call!11807 (getCurrentListMapNoExtraKeys!111 (_keys!4340 (_2!1204 lt!56628)) (_values!2609 (_2!1204 lt!56628)) (mask!6794 (_2!1204 lt!56628)) (extraKeys!2423 (_2!1204 lt!56628)) (zeroValue!2497 (_2!1204 lt!56628)) (minValue!2497 (_2!1204 lt!56628)) #b00000000000000000000000000000000 (defaultEntry!2626 (_2!1204 lt!56628))))))

(assert (= (and d!31249 c!19685) b!110763))

(assert (= (and d!31249 (not c!19685)) b!110781))

(assert (= (and b!110781 c!19683) b!110766))

(assert (= (and b!110781 (not c!19683)) b!110768))

(assert (= (and b!110768 c!19684) b!110776))

(assert (= (and b!110768 (not c!19684)) b!110775))

(assert (= (or b!110776 b!110775) bm!11808))

(assert (= (or b!110766 bm!11808) bm!11804))

(assert (= (or b!110766 b!110776) bm!11807))

(assert (= (or b!110763 bm!11804) bm!11809))

(assert (= (or b!110763 bm!11807) bm!11806))

(assert (= (and d!31249 res!54740) b!110777))

(assert (= (and d!31249 c!19688) b!110765))

(assert (= (and d!31249 (not c!19688)) b!110762))

(assert (= (and d!31249 res!54743) b!110761))

(assert (= (and b!110761 res!54745) b!110780))

(assert (= (and b!110761 (not res!54741)) b!110764))

(assert (= (and b!110764 res!54739) b!110771))

(assert (= (and b!110761 res!54738) b!110774))

(assert (= (and b!110774 c!19686) b!110778))

(assert (= (and b!110774 (not c!19686)) b!110767))

(assert (= (and b!110778 res!54746) b!110772))

(assert (= (or b!110778 b!110767) bm!11805))

(assert (= (and b!110774 res!54744) b!110773))

(assert (= (and b!110773 c!19687) b!110770))

(assert (= (and b!110773 (not c!19687)) b!110769))

(assert (= (and b!110770 res!54742) b!110779))

(assert (= (or b!110770 b!110769) bm!11803))

(declare-fun b_lambda!4957 () Bool)

(assert (=> (not b_lambda!4957) (not b!110771)))

(declare-fun tb!2109 () Bool)

(declare-fun t!5756 () Bool)

(assert (=> (and b!109572 (= (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) (defaultEntry!2626 (_2!1204 lt!56628))) t!5756) tb!2109))

(declare-fun result!3537 () Bool)

(assert (=> tb!2109 (= result!3537 tp_is_empty!2695)))

(assert (=> b!110771 t!5756))

(declare-fun b_and!6809 () Bool)

(assert (= b_and!6805 (and (=> t!5756 result!3537) b_and!6809)))

(declare-fun tb!2111 () Bool)

(declare-fun t!5758 () Bool)

(assert (=> (and b!109583 (= (defaultEntry!2626 newMap!16) (defaultEntry!2626 (_2!1204 lt!56628))) t!5758) tb!2111))

(declare-fun result!3539 () Bool)

(assert (= result!3539 result!3537))

(assert (=> b!110771 t!5758))

(declare-fun b_and!6811 () Bool)

(assert (= b_and!6807 (and (=> t!5758 result!3539) b_and!6811)))

(declare-fun m!125695 () Bool)

(assert (=> b!110780 m!125695))

(assert (=> b!110780 m!125695))

(declare-fun m!125697 () Bool)

(assert (=> b!110780 m!125697))

(declare-fun m!125699 () Bool)

(assert (=> b!110765 m!125699))

(declare-fun m!125701 () Bool)

(assert (=> b!110765 m!125701))

(declare-fun m!125703 () Bool)

(assert (=> b!110765 m!125703))

(declare-fun m!125705 () Bool)

(assert (=> b!110765 m!125705))

(declare-fun m!125707 () Bool)

(assert (=> b!110765 m!125707))

(declare-fun m!125709 () Bool)

(assert (=> b!110765 m!125709))

(declare-fun m!125711 () Bool)

(assert (=> b!110765 m!125711))

(declare-fun m!125713 () Bool)

(assert (=> b!110765 m!125713))

(declare-fun m!125715 () Bool)

(assert (=> b!110765 m!125715))

(declare-fun m!125717 () Bool)

(assert (=> b!110765 m!125717))

(declare-fun m!125719 () Bool)

(assert (=> b!110765 m!125719))

(assert (=> b!110765 m!125707))

(assert (=> b!110765 m!125711))

(declare-fun m!125721 () Bool)

(assert (=> b!110765 m!125721))

(assert (=> b!110765 m!125695))

(declare-fun m!125723 () Bool)

(assert (=> b!110765 m!125723))

(assert (=> b!110765 m!125717))

(declare-fun m!125725 () Bool)

(assert (=> b!110765 m!125725))

(declare-fun m!125727 () Bool)

(assert (=> b!110765 m!125727))

(assert (=> b!110765 m!125725))

(declare-fun m!125729 () Bool)

(assert (=> b!110765 m!125729))

(assert (=> b!110777 m!125695))

(assert (=> b!110777 m!125695))

(assert (=> b!110777 m!125697))

(declare-fun m!125731 () Bool)

(assert (=> bm!11805 m!125731))

(assert (=> bm!11809 m!125723))

(declare-fun m!125733 () Bool)

(assert (=> d!31249 m!125733))

(declare-fun m!125735 () Bool)

(assert (=> bm!11806 m!125735))

(declare-fun m!125737 () Bool)

(assert (=> b!110772 m!125737))

(declare-fun m!125739 () Bool)

(assert (=> bm!11803 m!125739))

(declare-fun m!125741 () Bool)

(assert (=> b!110779 m!125741))

(assert (=> b!110771 m!125695))

(declare-fun m!125743 () Bool)

(assert (=> b!110771 m!125743))

(assert (=> b!110771 m!125695))

(declare-fun m!125745 () Bool)

(assert (=> b!110771 m!125745))

(assert (=> b!110771 m!125745))

(declare-fun m!125747 () Bool)

(assert (=> b!110771 m!125747))

(declare-fun m!125749 () Bool)

(assert (=> b!110771 m!125749))

(assert (=> b!110771 m!125747))

(declare-fun m!125751 () Bool)

(assert (=> b!110763 m!125751))

(assert (=> b!110764 m!125695))

(assert (=> b!110764 m!125695))

(declare-fun m!125753 () Bool)

(assert (=> b!110764 m!125753))

(assert (=> d!31025 d!31249))

(assert (=> b!110446 d!31059))

(assert (=> d!30989 d!30987))

(declare-fun d!31251 () Bool)

(assert (=> d!31251 (= (getValueByKey!159 lt!56482 (_1!1205 lt!56363)) (Some!164 (_2!1205 lt!56363)))))

(assert (=> d!31251 true))

(declare-fun _$22!446 () Unit!3382)

(assert (=> d!31251 (= (choose!695 lt!56482 (_1!1205 lt!56363) (_2!1205 lt!56363)) _$22!446)))

(declare-fun bs!4556 () Bool)

(assert (= bs!4556 d!31251))

(assert (=> bs!4556 m!124297))

(assert (=> d!30989 d!31251))

(declare-fun d!31253 () Bool)

(declare-fun res!54747 () Bool)

(declare-fun e!72036 () Bool)

(assert (=> d!31253 (=> res!54747 e!72036)))

(assert (=> d!31253 (= res!54747 (or ((_ is Nil!1606) lt!56482) ((_ is Nil!1606) (t!5738 lt!56482))))))

(assert (=> d!31253 (= (isStrictlySorted!298 lt!56482) e!72036)))

(declare-fun b!110782 () Bool)

(declare-fun e!72037 () Bool)

(assert (=> b!110782 (= e!72036 e!72037)))

(declare-fun res!54748 () Bool)

(assert (=> b!110782 (=> (not res!54748) (not e!72037))))

(assert (=> b!110782 (= res!54748 (bvslt (_1!1205 (h!2204 lt!56482)) (_1!1205 (h!2204 (t!5738 lt!56482)))))))

(declare-fun b!110783 () Bool)

(assert (=> b!110783 (= e!72037 (isStrictlySorted!298 (t!5738 lt!56482)))))

(assert (= (and d!31253 (not res!54747)) b!110782))

(assert (= (and b!110782 res!54748) b!110783))

(declare-fun m!125755 () Bool)

(assert (=> b!110783 m!125755))

(assert (=> d!30989 d!31253))

(declare-fun lt!57133 () Bool)

(declare-fun d!31255 () Bool)

(assert (=> d!31255 (= lt!57133 (select (content!114 (toList!789 lt!56756)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!72039 () Bool)

(assert (=> d!31255 (= lt!57133 e!72039)))

(declare-fun res!54750 () Bool)

(assert (=> d!31255 (=> (not res!54750) (not e!72039))))

(assert (=> d!31255 (= res!54750 ((_ is Cons!1605) (toList!789 lt!56756)))))

(assert (=> d!31255 (= (contains!827 (toList!789 lt!56756) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!57133)))

(declare-fun b!110784 () Bool)

(declare-fun e!72038 () Bool)

(assert (=> b!110784 (= e!72039 e!72038)))

(declare-fun res!54749 () Bool)

(assert (=> b!110784 (=> res!54749 e!72038)))

(assert (=> b!110784 (= res!54749 (= (h!2204 (toList!789 lt!56756)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!110785 () Bool)

(assert (=> b!110785 (= e!72038 (contains!827 (t!5738 (toList!789 lt!56756)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!31255 res!54750) b!110784))

(assert (= (and b!110784 (not res!54749)) b!110785))

(declare-fun m!125757 () Bool)

(assert (=> d!31255 m!125757))

(declare-fun m!125759 () Bool)

(assert (=> d!31255 m!125759))

(declare-fun m!125761 () Bool)

(assert (=> b!110785 m!125761))

(assert (=> b!110066 d!31255))

(declare-fun e!72042 () List!1609)

(declare-fun b!110786 () Bool)

(assert (=> b!110786 (= e!72042 (insertStrictlySorted!78 (t!5738 (t!5738 (toList!789 (+!144 lt!56369 lt!56363)))) (_1!1205 lt!56370) (_2!1205 lt!56370)))))

(declare-fun b!110787 () Bool)

(declare-fun res!54752 () Bool)

(declare-fun e!72044 () Bool)

(assert (=> b!110787 (=> (not res!54752) (not e!72044))))

(declare-fun lt!57134 () List!1609)

(assert (=> b!110787 (= res!54752 (containsKey!162 lt!57134 (_1!1205 lt!56370)))))

(declare-fun b!110788 () Bool)

(declare-fun e!72043 () List!1609)

(declare-fun call!11814 () List!1609)

(assert (=> b!110788 (= e!72043 call!11814)))

(declare-fun bm!11810 () Bool)

(declare-fun call!11815 () List!1609)

(declare-fun call!11813 () List!1609)

(assert (=> bm!11810 (= call!11815 call!11813)))

(declare-fun bm!11811 () Bool)

(assert (=> bm!11811 (= call!11814 call!11815)))

(declare-fun b!110789 () Bool)

(assert (=> b!110789 (= e!72043 call!11814)))

(declare-fun c!19691 () Bool)

(declare-fun bm!11812 () Bool)

(assert (=> bm!11812 (= call!11813 ($colon$colon!82 e!72042 (ite c!19691 (h!2204 (t!5738 (toList!789 (+!144 lt!56369 lt!56363)))) (tuple2!2389 (_1!1205 lt!56370) (_2!1205 lt!56370)))))))

(declare-fun c!19692 () Bool)

(assert (=> bm!11812 (= c!19692 c!19691)))

(declare-fun b!110790 () Bool)

(declare-fun e!72041 () List!1609)

(assert (=> b!110790 (= e!72041 call!11815)))

(declare-fun d!31257 () Bool)

(assert (=> d!31257 e!72044))

(declare-fun res!54751 () Bool)

(assert (=> d!31257 (=> (not res!54751) (not e!72044))))

(assert (=> d!31257 (= res!54751 (isStrictlySorted!298 lt!57134))))

(declare-fun e!72040 () List!1609)

(assert (=> d!31257 (= lt!57134 e!72040)))

(assert (=> d!31257 (= c!19691 (and ((_ is Cons!1605) (t!5738 (toList!789 (+!144 lt!56369 lt!56363)))) (bvslt (_1!1205 (h!2204 (t!5738 (toList!789 (+!144 lt!56369 lt!56363))))) (_1!1205 lt!56370))))))

(assert (=> d!31257 (isStrictlySorted!298 (t!5738 (toList!789 (+!144 lt!56369 lt!56363))))))

(assert (=> d!31257 (= (insertStrictlySorted!78 (t!5738 (toList!789 (+!144 lt!56369 lt!56363))) (_1!1205 lt!56370) (_2!1205 lt!56370)) lt!57134)))

(declare-fun b!110791 () Bool)

(assert (=> b!110791 (= e!72040 call!11813)))

(declare-fun c!19689 () Bool)

(declare-fun b!110792 () Bool)

(assert (=> b!110792 (= c!19689 (and ((_ is Cons!1605) (t!5738 (toList!789 (+!144 lt!56369 lt!56363)))) (bvsgt (_1!1205 (h!2204 (t!5738 (toList!789 (+!144 lt!56369 lt!56363))))) (_1!1205 lt!56370))))))

(assert (=> b!110792 (= e!72041 e!72043)))

(declare-fun c!19690 () Bool)

(declare-fun b!110793 () Bool)

(assert (=> b!110793 (= e!72042 (ite c!19690 (t!5738 (t!5738 (toList!789 (+!144 lt!56369 lt!56363)))) (ite c!19689 (Cons!1605 (h!2204 (t!5738 (toList!789 (+!144 lt!56369 lt!56363)))) (t!5738 (t!5738 (toList!789 (+!144 lt!56369 lt!56363))))) Nil!1606)))))

(declare-fun b!110794 () Bool)

(assert (=> b!110794 (= e!72044 (contains!827 lt!57134 (tuple2!2389 (_1!1205 lt!56370) (_2!1205 lt!56370))))))

(declare-fun b!110795 () Bool)

(assert (=> b!110795 (= e!72040 e!72041)))

(assert (=> b!110795 (= c!19690 (and ((_ is Cons!1605) (t!5738 (toList!789 (+!144 lt!56369 lt!56363)))) (= (_1!1205 (h!2204 (t!5738 (toList!789 (+!144 lt!56369 lt!56363))))) (_1!1205 lt!56370))))))

(assert (= (and d!31257 c!19691) b!110791))

(assert (= (and d!31257 (not c!19691)) b!110795))

(assert (= (and b!110795 c!19690) b!110790))

(assert (= (and b!110795 (not c!19690)) b!110792))

(assert (= (and b!110792 c!19689) b!110788))

(assert (= (and b!110792 (not c!19689)) b!110789))

(assert (= (or b!110788 b!110789) bm!11811))

(assert (= (or b!110790 bm!11811) bm!11810))

(assert (= (or b!110791 bm!11810) bm!11812))

(assert (= (and bm!11812 c!19692) b!110786))

(assert (= (and bm!11812 (not c!19692)) b!110793))

(assert (= (and d!31257 res!54751) b!110787))

(assert (= (and b!110787 res!54752) b!110794))

(declare-fun m!125763 () Bool)

(assert (=> bm!11812 m!125763))

(declare-fun m!125765 () Bool)

(assert (=> b!110794 m!125765))

(declare-fun m!125767 () Bool)

(assert (=> b!110787 m!125767))

(declare-fun m!125769 () Bool)

(assert (=> d!31257 m!125769))

(assert (=> d!31257 m!125549))

(declare-fun m!125771 () Bool)

(assert (=> b!110786 m!125771))

(assert (=> b!110459 d!31257))

(declare-fun d!31259 () Bool)

(assert (=> d!31259 (isDefined!111 (getValueByKey!159 (toList!789 lt!56479) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!57135 () Unit!3382)

(assert (=> d!31259 (= lt!57135 (choose!696 (toList!789 lt!56479) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!72045 () Bool)

(assert (=> d!31259 e!72045))

(declare-fun res!54753 () Bool)

(assert (=> d!31259 (=> (not res!54753) (not e!72045))))

(assert (=> d!31259 (= res!54753 (isStrictlySorted!298 (toList!789 lt!56479)))))

(assert (=> d!31259 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 lt!56479) #b0000000000000000000000000000000000000000000000000000000000000000) lt!57135)))

(declare-fun b!110796 () Bool)

(assert (=> b!110796 (= e!72045 (containsKey!162 (toList!789 lt!56479) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!31259 res!54753) b!110796))

(assert (=> d!31259 m!124821))

(assert (=> d!31259 m!124821))

(assert (=> d!31259 m!124823))

(declare-fun m!125773 () Bool)

(assert (=> d!31259 m!125773))

(assert (=> d!31259 m!125687))

(assert (=> b!110796 m!124817))

(assert (=> b!110248 d!31259))

(assert (=> b!110248 d!31077))

(assert (=> b!110248 d!31079))

(declare-fun d!31261 () Bool)

(declare-fun lt!57136 () Bool)

(assert (=> d!31261 (= lt!57136 (select (content!114 (toList!789 lt!57005)) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun e!72047 () Bool)

(assert (=> d!31261 (= lt!57136 e!72047)))

(declare-fun res!54755 () Bool)

(assert (=> d!31261 (=> (not res!54755) (not e!72047))))

(assert (=> d!31261 (= res!54755 ((_ is Cons!1605) (toList!789 lt!57005)))))

(assert (=> d!31261 (= (contains!827 (toList!789 lt!57005) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))) lt!57136)))

(declare-fun b!110797 () Bool)

(declare-fun e!72046 () Bool)

(assert (=> b!110797 (= e!72047 e!72046)))

(declare-fun res!54754 () Bool)

(assert (=> b!110797 (=> res!54754 e!72046)))

(assert (=> b!110797 (= res!54754 (= (h!2204 (toList!789 lt!57005)) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun b!110798 () Bool)

(assert (=> b!110798 (= e!72046 (contains!827 (t!5738 (toList!789 lt!57005)) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))))

(assert (= (and d!31261 res!54755) b!110797))

(assert (= (and b!110797 (not res!54754)) b!110798))

(declare-fun m!125775 () Bool)

(assert (=> d!31261 m!125775))

(declare-fun m!125777 () Bool)

(assert (=> d!31261 m!125777))

(declare-fun m!125779 () Bool)

(assert (=> b!110798 m!125779))

(assert (=> b!110472 d!31261))

(declare-fun d!31263 () Bool)

(assert (=> d!31263 (= (content!115 Nil!1607) ((as const (Array (_ BitVec 64) Bool)) false))))

(assert (=> d!30969 d!31263))

(declare-fun d!31265 () Bool)

(declare-fun e!72049 () Bool)

(assert (=> d!31265 e!72049))

(declare-fun res!54756 () Bool)

(assert (=> d!31265 (=> res!54756 e!72049)))

(declare-fun lt!57139 () Bool)

(assert (=> d!31265 (= res!54756 (not lt!57139))))

(declare-fun lt!57140 () Bool)

(assert (=> d!31265 (= lt!57139 lt!57140)))

(declare-fun lt!57137 () Unit!3382)

(declare-fun e!72048 () Unit!3382)

(assert (=> d!31265 (= lt!57137 e!72048)))

(declare-fun c!19693 () Bool)

(assert (=> d!31265 (= c!19693 lt!57140)))

(assert (=> d!31265 (= lt!57140 (containsKey!162 (toList!789 lt!56756) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!31265 (= (contains!824 lt!56756 (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!57139)))

(declare-fun b!110799 () Bool)

(declare-fun lt!57138 () Unit!3382)

(assert (=> b!110799 (= e!72048 lt!57138)))

(assert (=> b!110799 (= lt!57138 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 lt!56756) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!110799 (isDefined!111 (getValueByKey!159 (toList!789 lt!56756) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!110800 () Bool)

(declare-fun Unit!3425 () Unit!3382)

(assert (=> b!110800 (= e!72048 Unit!3425)))

(declare-fun b!110801 () Bool)

(assert (=> b!110801 (= e!72049 (isDefined!111 (getValueByKey!159 (toList!789 lt!56756) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!31265 c!19693) b!110799))

(assert (= (and d!31265 (not c!19693)) b!110800))

(assert (= (and d!31265 (not res!54756)) b!110801))

(declare-fun m!125781 () Bool)

(assert (=> d!31265 m!125781))

(declare-fun m!125783 () Bool)

(assert (=> b!110799 m!125783))

(assert (=> b!110799 m!124549))

(assert (=> b!110799 m!124549))

(declare-fun m!125785 () Bool)

(assert (=> b!110799 m!125785))

(assert (=> b!110801 m!124549))

(assert (=> b!110801 m!124549))

(assert (=> b!110801 m!125785))

(assert (=> d!30863 d!31265))

(declare-fun b!110805 () Bool)

(declare-fun e!72051 () Option!165)

(assert (=> b!110805 (= e!72051 None!163)))

(declare-fun b!110802 () Bool)

(declare-fun e!72050 () Option!165)

(assert (=> b!110802 (= e!72050 (Some!164 (_2!1205 (h!2204 lt!56755))))))

(declare-fun b!110804 () Bool)

(assert (=> b!110804 (= e!72051 (getValueByKey!159 (t!5738 lt!56755) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun c!19694 () Bool)

(declare-fun d!31267 () Bool)

(assert (=> d!31267 (= c!19694 (and ((_ is Cons!1605) lt!56755) (= (_1!1205 (h!2204 lt!56755)) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!31267 (= (getValueByKey!159 lt!56755 (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!72050)))

(declare-fun b!110803 () Bool)

(assert (=> b!110803 (= e!72050 e!72051)))

(declare-fun c!19695 () Bool)

(assert (=> b!110803 (= c!19695 (and ((_ is Cons!1605) lt!56755) (not (= (_1!1205 (h!2204 lt!56755)) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!31267 c!19694) b!110802))

(assert (= (and d!31267 (not c!19694)) b!110803))

(assert (= (and b!110803 c!19695) b!110804))

(assert (= (and b!110803 (not c!19695)) b!110805))

(declare-fun m!125787 () Bool)

(assert (=> b!110804 m!125787))

(assert (=> d!30863 d!31267))

(declare-fun d!31269 () Bool)

(assert (=> d!31269 (= (getValueByKey!159 lt!56755 (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!164 (_2!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!57141 () Unit!3382)

(assert (=> d!31269 (= lt!57141 (choose!695 lt!56755 (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!72052 () Bool)

(assert (=> d!31269 e!72052))

(declare-fun res!54757 () Bool)

(assert (=> d!31269 (=> (not res!54757) (not e!72052))))

(assert (=> d!31269 (= res!54757 (isStrictlySorted!298 lt!56755))))

(assert (=> d!31269 (= (lemmaContainsTupThenGetReturnValue!75 lt!56755 (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!57141)))

(declare-fun b!110806 () Bool)

(declare-fun res!54758 () Bool)

(assert (=> b!110806 (=> (not res!54758) (not e!72052))))

(assert (=> b!110806 (= res!54758 (containsKey!162 lt!56755 (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!110807 () Bool)

(assert (=> b!110807 (= e!72052 (contains!827 lt!56755 (tuple2!2389 (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!31269 res!54757) b!110806))

(assert (= (and b!110806 res!54758) b!110807))

(assert (=> d!31269 m!124543))

(declare-fun m!125789 () Bool)

(assert (=> d!31269 m!125789))

(declare-fun m!125791 () Bool)

(assert (=> d!31269 m!125791))

(declare-fun m!125793 () Bool)

(assert (=> b!110806 m!125793))

(declare-fun m!125795 () Bool)

(assert (=> b!110807 m!125795))

(assert (=> d!30863 d!31269))

(declare-fun b!110808 () Bool)

(declare-fun e!72055 () List!1609)

(assert (=> b!110808 (= e!72055 (insertStrictlySorted!78 (t!5738 (toList!789 call!11625)) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!110809 () Bool)

(declare-fun res!54760 () Bool)

(declare-fun e!72057 () Bool)

(assert (=> b!110809 (=> (not res!54760) (not e!72057))))

(declare-fun lt!57142 () List!1609)

(assert (=> b!110809 (= res!54760 (containsKey!162 lt!57142 (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!110810 () Bool)

(declare-fun e!72056 () List!1609)

(declare-fun call!11817 () List!1609)

(assert (=> b!110810 (= e!72056 call!11817)))

(declare-fun bm!11813 () Bool)

(declare-fun call!11818 () List!1609)

(declare-fun call!11816 () List!1609)

(assert (=> bm!11813 (= call!11818 call!11816)))

(declare-fun bm!11814 () Bool)

(assert (=> bm!11814 (= call!11817 call!11818)))

(declare-fun b!110811 () Bool)

(assert (=> b!110811 (= e!72056 call!11817)))

(declare-fun c!19698 () Bool)

(declare-fun bm!11815 () Bool)

(assert (=> bm!11815 (= call!11816 ($colon$colon!82 e!72055 (ite c!19698 (h!2204 (toList!789 call!11625)) (tuple2!2389 (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!19699 () Bool)

(assert (=> bm!11815 (= c!19699 c!19698)))

(declare-fun b!110812 () Bool)

(declare-fun e!72054 () List!1609)

(assert (=> b!110812 (= e!72054 call!11818)))

(declare-fun d!31271 () Bool)

(assert (=> d!31271 e!72057))

(declare-fun res!54759 () Bool)

(assert (=> d!31271 (=> (not res!54759) (not e!72057))))

(assert (=> d!31271 (= res!54759 (isStrictlySorted!298 lt!57142))))

(declare-fun e!72053 () List!1609)

(assert (=> d!31271 (= lt!57142 e!72053)))

(assert (=> d!31271 (= c!19698 (and ((_ is Cons!1605) (toList!789 call!11625)) (bvslt (_1!1205 (h!2204 (toList!789 call!11625))) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!31271 (isStrictlySorted!298 (toList!789 call!11625))))

(assert (=> d!31271 (= (insertStrictlySorted!78 (toList!789 call!11625) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!57142)))

(declare-fun b!110813 () Bool)

(assert (=> b!110813 (= e!72053 call!11816)))

(declare-fun b!110814 () Bool)

(declare-fun c!19696 () Bool)

(assert (=> b!110814 (= c!19696 (and ((_ is Cons!1605) (toList!789 call!11625)) (bvsgt (_1!1205 (h!2204 (toList!789 call!11625))) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!110814 (= e!72054 e!72056)))

(declare-fun b!110815 () Bool)

(declare-fun c!19697 () Bool)

(assert (=> b!110815 (= e!72055 (ite c!19697 (t!5738 (toList!789 call!11625)) (ite c!19696 (Cons!1605 (h!2204 (toList!789 call!11625)) (t!5738 (toList!789 call!11625))) Nil!1606)))))

(declare-fun b!110816 () Bool)

(assert (=> b!110816 (= e!72057 (contains!827 lt!57142 (tuple2!2389 (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!110817 () Bool)

(assert (=> b!110817 (= e!72053 e!72054)))

(assert (=> b!110817 (= c!19697 (and ((_ is Cons!1605) (toList!789 call!11625)) (= (_1!1205 (h!2204 (toList!789 call!11625))) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!31271 c!19698) b!110813))

(assert (= (and d!31271 (not c!19698)) b!110817))

(assert (= (and b!110817 c!19697) b!110812))

(assert (= (and b!110817 (not c!19697)) b!110814))

(assert (= (and b!110814 c!19696) b!110810))

(assert (= (and b!110814 (not c!19696)) b!110811))

(assert (= (or b!110810 b!110811) bm!11814))

(assert (= (or b!110812 bm!11814) bm!11813))

(assert (= (or b!110813 bm!11813) bm!11815))

(assert (= (and bm!11815 c!19699) b!110808))

(assert (= (and bm!11815 (not c!19699)) b!110815))

(assert (= (and d!31271 res!54759) b!110809))

(assert (= (and b!110809 res!54760) b!110816))

(declare-fun m!125797 () Bool)

(assert (=> bm!11815 m!125797))

(declare-fun m!125799 () Bool)

(assert (=> b!110816 m!125799))

(declare-fun m!125801 () Bool)

(assert (=> b!110809 m!125801))

(declare-fun m!125803 () Bool)

(assert (=> d!31271 m!125803))

(declare-fun m!125805 () Bool)

(assert (=> d!31271 m!125805))

(declare-fun m!125807 () Bool)

(assert (=> b!110808 m!125807))

(assert (=> d!30863 d!31271))

(declare-fun d!31273 () Bool)

(assert (=> d!31273 (= (get!1356 (getValueByKey!159 (toList!789 lt!56544) lt!56550)) (v!2936 (getValueByKey!159 (toList!789 lt!56544) lt!56550)))))

(assert (=> d!30945 d!31273))

(declare-fun b!110821 () Bool)

(declare-fun e!72059 () Option!165)

(assert (=> b!110821 (= e!72059 None!163)))

(declare-fun b!110818 () Bool)

(declare-fun e!72058 () Option!165)

(assert (=> b!110818 (= e!72058 (Some!164 (_2!1205 (h!2204 (toList!789 lt!56544)))))))

(declare-fun b!110820 () Bool)

(assert (=> b!110820 (= e!72059 (getValueByKey!159 (t!5738 (toList!789 lt!56544)) lt!56550))))

(declare-fun d!31275 () Bool)

(declare-fun c!19700 () Bool)

(assert (=> d!31275 (= c!19700 (and ((_ is Cons!1605) (toList!789 lt!56544)) (= (_1!1205 (h!2204 (toList!789 lt!56544))) lt!56550)))))

(assert (=> d!31275 (= (getValueByKey!159 (toList!789 lt!56544) lt!56550) e!72058)))

(declare-fun b!110819 () Bool)

(assert (=> b!110819 (= e!72058 e!72059)))

(declare-fun c!19701 () Bool)

(assert (=> b!110819 (= c!19701 (and ((_ is Cons!1605) (toList!789 lt!56544)) (not (= (_1!1205 (h!2204 (toList!789 lt!56544))) lt!56550))))))

(assert (= (and d!31275 c!19700) b!110818))

(assert (= (and d!31275 (not c!19700)) b!110819))

(assert (= (and b!110819 c!19701) b!110820))

(assert (= (and b!110819 (not c!19701)) b!110821))

(declare-fun m!125809 () Bool)

(assert (=> b!110820 m!125809))

(assert (=> d!30945 d!31275))

(declare-fun d!31277 () Bool)

(assert (=> d!31277 (= (isDefined!111 (getValueByKey!159 (toList!789 lt!56545) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!383 (getValueByKey!159 (toList!789 lt!56545) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!4557 () Bool)

(assert (= bs!4557 d!31277))

(assert (=> bs!4557 m!125181))

(declare-fun m!125811 () Bool)

(assert (=> bs!4557 m!125811))

(assert (=> b!110479 d!31277))

(assert (=> b!110479 d!31115))

(declare-fun b!110822 () Bool)

(declare-fun e!72062 () List!1609)

(assert (=> b!110822 (= e!72062 (insertStrictlySorted!78 (t!5738 (t!5738 (toList!789 (+!144 lt!56369 lt!56370)))) (_1!1205 lt!56363) (_2!1205 lt!56363)))))

(declare-fun b!110823 () Bool)

(declare-fun res!54762 () Bool)

(declare-fun e!72064 () Bool)

(assert (=> b!110823 (=> (not res!54762) (not e!72064))))

(declare-fun lt!57143 () List!1609)

(assert (=> b!110823 (= res!54762 (containsKey!162 lt!57143 (_1!1205 lt!56363)))))

(declare-fun b!110824 () Bool)

(declare-fun e!72063 () List!1609)

(declare-fun call!11820 () List!1609)

(assert (=> b!110824 (= e!72063 call!11820)))

(declare-fun bm!11816 () Bool)

(declare-fun call!11821 () List!1609)

(declare-fun call!11819 () List!1609)

(assert (=> bm!11816 (= call!11821 call!11819)))

(declare-fun bm!11817 () Bool)

(assert (=> bm!11817 (= call!11820 call!11821)))

(declare-fun b!110825 () Bool)

(assert (=> b!110825 (= e!72063 call!11820)))

(declare-fun bm!11818 () Bool)

(declare-fun c!19704 () Bool)

(assert (=> bm!11818 (= call!11819 ($colon$colon!82 e!72062 (ite c!19704 (h!2204 (t!5738 (toList!789 (+!144 lt!56369 lt!56370)))) (tuple2!2389 (_1!1205 lt!56363) (_2!1205 lt!56363)))))))

(declare-fun c!19705 () Bool)

(assert (=> bm!11818 (= c!19705 c!19704)))

(declare-fun b!110826 () Bool)

(declare-fun e!72061 () List!1609)

(assert (=> b!110826 (= e!72061 call!11821)))

(declare-fun d!31279 () Bool)

(assert (=> d!31279 e!72064))

(declare-fun res!54761 () Bool)

(assert (=> d!31279 (=> (not res!54761) (not e!72064))))

(assert (=> d!31279 (= res!54761 (isStrictlySorted!298 lt!57143))))

(declare-fun e!72060 () List!1609)

(assert (=> d!31279 (= lt!57143 e!72060)))

(assert (=> d!31279 (= c!19704 (and ((_ is Cons!1605) (t!5738 (toList!789 (+!144 lt!56369 lt!56370)))) (bvslt (_1!1205 (h!2204 (t!5738 (toList!789 (+!144 lt!56369 lt!56370))))) (_1!1205 lt!56363))))))

(assert (=> d!31279 (isStrictlySorted!298 (t!5738 (toList!789 (+!144 lt!56369 lt!56370))))))

(assert (=> d!31279 (= (insertStrictlySorted!78 (t!5738 (toList!789 (+!144 lt!56369 lt!56370))) (_1!1205 lt!56363) (_2!1205 lt!56363)) lt!57143)))

(declare-fun b!110827 () Bool)

(assert (=> b!110827 (= e!72060 call!11819)))

(declare-fun b!110828 () Bool)

(declare-fun c!19702 () Bool)

(assert (=> b!110828 (= c!19702 (and ((_ is Cons!1605) (t!5738 (toList!789 (+!144 lt!56369 lt!56370)))) (bvsgt (_1!1205 (h!2204 (t!5738 (toList!789 (+!144 lt!56369 lt!56370))))) (_1!1205 lt!56363))))))

(assert (=> b!110828 (= e!72061 e!72063)))

(declare-fun b!110829 () Bool)

(declare-fun c!19703 () Bool)

(assert (=> b!110829 (= e!72062 (ite c!19703 (t!5738 (t!5738 (toList!789 (+!144 lt!56369 lt!56370)))) (ite c!19702 (Cons!1605 (h!2204 (t!5738 (toList!789 (+!144 lt!56369 lt!56370)))) (t!5738 (t!5738 (toList!789 (+!144 lt!56369 lt!56370))))) Nil!1606)))))

(declare-fun b!110830 () Bool)

(assert (=> b!110830 (= e!72064 (contains!827 lt!57143 (tuple2!2389 (_1!1205 lt!56363) (_2!1205 lt!56363))))))

(declare-fun b!110831 () Bool)

(assert (=> b!110831 (= e!72060 e!72061)))

(assert (=> b!110831 (= c!19703 (and ((_ is Cons!1605) (t!5738 (toList!789 (+!144 lt!56369 lt!56370)))) (= (_1!1205 (h!2204 (t!5738 (toList!789 (+!144 lt!56369 lt!56370))))) (_1!1205 lt!56363))))))

(assert (= (and d!31279 c!19704) b!110827))

(assert (= (and d!31279 (not c!19704)) b!110831))

(assert (= (and b!110831 c!19703) b!110826))

(assert (= (and b!110831 (not c!19703)) b!110828))

(assert (= (and b!110828 c!19702) b!110824))

(assert (= (and b!110828 (not c!19702)) b!110825))

(assert (= (or b!110824 b!110825) bm!11817))

(assert (= (or b!110826 bm!11817) bm!11816))

(assert (= (or b!110827 bm!11816) bm!11818))

(assert (= (and bm!11818 c!19705) b!110822))

(assert (= (and bm!11818 (not c!19705)) b!110829))

(assert (= (and d!31279 res!54761) b!110823))

(assert (= (and b!110823 res!54762) b!110830))

(declare-fun m!125813 () Bool)

(assert (=> bm!11818 m!125813))

(declare-fun m!125815 () Bool)

(assert (=> b!110830 m!125815))

(declare-fun m!125817 () Bool)

(assert (=> b!110823 m!125817))

(declare-fun m!125819 () Bool)

(assert (=> d!31279 m!125819))

(declare-fun m!125821 () Bool)

(assert (=> d!31279 m!125821))

(declare-fun m!125823 () Bool)

(assert (=> b!110822 m!125823))

(assert (=> b!110224 d!31279))

(declare-fun d!31281 () Bool)

(declare-fun res!54763 () Bool)

(declare-fun e!72065 () Bool)

(assert (=> d!31281 (=> res!54763 e!72065)))

(assert (=> d!31281 (= res!54763 (or ((_ is Nil!1606) lt!56949) ((_ is Nil!1606) (t!5738 lt!56949))))))

(assert (=> d!31281 (= (isStrictlySorted!298 lt!56949) e!72065)))

(declare-fun b!110832 () Bool)

(declare-fun e!72066 () Bool)

(assert (=> b!110832 (= e!72065 e!72066)))

(declare-fun res!54764 () Bool)

(assert (=> b!110832 (=> (not res!54764) (not e!72066))))

(assert (=> b!110832 (= res!54764 (bvslt (_1!1205 (h!2204 lt!56949)) (_1!1205 (h!2204 (t!5738 lt!56949)))))))

(declare-fun b!110833 () Bool)

(assert (=> b!110833 (= e!72066 (isStrictlySorted!298 (t!5738 lt!56949)))))

(assert (= (and d!31281 (not res!54763)) b!110832))

(assert (= (and b!110832 res!54764) b!110833))

(declare-fun m!125825 () Bool)

(assert (=> b!110833 m!125825))

(assert (=> d!30991 d!31281))

(declare-fun d!31283 () Bool)

(declare-fun res!54765 () Bool)

(declare-fun e!72067 () Bool)

(assert (=> d!31283 (=> res!54765 e!72067)))

(assert (=> d!31283 (= res!54765 (or ((_ is Nil!1606) (toList!789 lt!56369)) ((_ is Nil!1606) (t!5738 (toList!789 lt!56369)))))))

(assert (=> d!31283 (= (isStrictlySorted!298 (toList!789 lt!56369)) e!72067)))

(declare-fun b!110834 () Bool)

(declare-fun e!72068 () Bool)

(assert (=> b!110834 (= e!72067 e!72068)))

(declare-fun res!54766 () Bool)

(assert (=> b!110834 (=> (not res!54766) (not e!72068))))

(assert (=> b!110834 (= res!54766 (bvslt (_1!1205 (h!2204 (toList!789 lt!56369))) (_1!1205 (h!2204 (t!5738 (toList!789 lt!56369))))))))

(declare-fun b!110835 () Bool)

(assert (=> b!110835 (= e!72068 (isStrictlySorted!298 (t!5738 (toList!789 lt!56369))))))

(assert (= (and d!31283 (not res!54765)) b!110834))

(assert (= (and b!110834 res!54766) b!110835))

(declare-fun m!125827 () Bool)

(assert (=> b!110835 m!125827))

(assert (=> d!30991 d!31283))

(declare-fun d!31285 () Bool)

(declare-fun e!72070 () Bool)

(assert (=> d!31285 e!72070))

(declare-fun res!54767 () Bool)

(assert (=> d!31285 (=> res!54767 e!72070)))

(declare-fun lt!57146 () Bool)

(assert (=> d!31285 (= res!54767 (not lt!57146))))

(declare-fun lt!57147 () Bool)

(assert (=> d!31285 (= lt!57146 lt!57147)))

(declare-fun lt!57144 () Unit!3382)

(declare-fun e!72069 () Unit!3382)

(assert (=> d!31285 (= lt!57144 e!72069)))

(declare-fun c!19706 () Bool)

(assert (=> d!31285 (= c!19706 lt!57147)))

(assert (=> d!31285 (= lt!57147 (containsKey!162 (toList!789 lt!56784) (_1!1205 (ite c!19458 (ite c!19454 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))))))

(assert (=> d!31285 (= (contains!824 lt!56784 (_1!1205 (ite c!19458 (ite c!19454 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))) lt!57146)))

(declare-fun b!110836 () Bool)

(declare-fun lt!57145 () Unit!3382)

(assert (=> b!110836 (= e!72069 lt!57145)))

(assert (=> b!110836 (= lt!57145 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 lt!56784) (_1!1205 (ite c!19458 (ite c!19454 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))))))

(assert (=> b!110836 (isDefined!111 (getValueByKey!159 (toList!789 lt!56784) (_1!1205 (ite c!19458 (ite c!19454 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))))))

(declare-fun b!110837 () Bool)

(declare-fun Unit!3426 () Unit!3382)

(assert (=> b!110837 (= e!72069 Unit!3426)))

(declare-fun b!110838 () Bool)

(assert (=> b!110838 (= e!72070 (isDefined!111 (getValueByKey!159 (toList!789 lt!56784) (_1!1205 (ite c!19458 (ite c!19454 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))))

(assert (= (and d!31285 c!19706) b!110836))

(assert (= (and d!31285 (not c!19706)) b!110837))

(assert (= (and d!31285 (not res!54767)) b!110838))

(declare-fun m!125829 () Bool)

(assert (=> d!31285 m!125829))

(declare-fun m!125831 () Bool)

(assert (=> b!110836 m!125831))

(assert (=> b!110836 m!124621))

(assert (=> b!110836 m!124621))

(declare-fun m!125833 () Bool)

(assert (=> b!110836 m!125833))

(assert (=> b!110838 m!124621))

(assert (=> b!110838 m!124621))

(assert (=> b!110838 m!125833))

(assert (=> d!30885 d!31285))

(declare-fun b!110842 () Bool)

(declare-fun e!72072 () Option!165)

(assert (=> b!110842 (= e!72072 None!163)))

(declare-fun b!110839 () Bool)

(declare-fun e!72071 () Option!165)

(assert (=> b!110839 (= e!72071 (Some!164 (_2!1205 (h!2204 lt!56783))))))

(declare-fun b!110841 () Bool)

(assert (=> b!110841 (= e!72072 (getValueByKey!159 (t!5738 lt!56783) (_1!1205 (ite c!19458 (ite c!19454 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))))))

(declare-fun d!31287 () Bool)

(declare-fun c!19707 () Bool)

(assert (=> d!31287 (= c!19707 (and ((_ is Cons!1605) lt!56783) (= (_1!1205 (h!2204 lt!56783)) (_1!1205 (ite c!19458 (ite c!19454 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))))

(assert (=> d!31287 (= (getValueByKey!159 lt!56783 (_1!1205 (ite c!19458 (ite c!19454 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))) e!72071)))

(declare-fun b!110840 () Bool)

(assert (=> b!110840 (= e!72071 e!72072)))

(declare-fun c!19708 () Bool)

(assert (=> b!110840 (= c!19708 (and ((_ is Cons!1605) lt!56783) (not (= (_1!1205 (h!2204 lt!56783)) (_1!1205 (ite c!19458 (ite c!19454 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))))))))

(assert (= (and d!31287 c!19707) b!110839))

(assert (= (and d!31287 (not c!19707)) b!110840))

(assert (= (and b!110840 c!19708) b!110841))

(assert (= (and b!110840 (not c!19708)) b!110842))

(declare-fun m!125835 () Bool)

(assert (=> b!110841 m!125835))

(assert (=> d!30885 d!31287))

(declare-fun d!31289 () Bool)

(assert (=> d!31289 (= (getValueByKey!159 lt!56783 (_1!1205 (ite c!19458 (ite c!19454 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))) (Some!164 (_2!1205 (ite c!19458 (ite c!19454 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))))))

(declare-fun lt!57148 () Unit!3382)

(assert (=> d!31289 (= lt!57148 (choose!695 lt!56783 (_1!1205 (ite c!19458 (ite c!19454 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))) (_2!1205 (ite c!19458 (ite c!19454 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))))))

(declare-fun e!72073 () Bool)

(assert (=> d!31289 e!72073))

(declare-fun res!54768 () Bool)

(assert (=> d!31289 (=> (not res!54768) (not e!72073))))

(assert (=> d!31289 (= res!54768 (isStrictlySorted!298 lt!56783))))

(assert (=> d!31289 (= (lemmaContainsTupThenGetReturnValue!75 lt!56783 (_1!1205 (ite c!19458 (ite c!19454 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))) (_2!1205 (ite c!19458 (ite c!19454 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))) lt!57148)))

(declare-fun b!110843 () Bool)

(declare-fun res!54769 () Bool)

(assert (=> b!110843 (=> (not res!54769) (not e!72073))))

(assert (=> b!110843 (= res!54769 (containsKey!162 lt!56783 (_1!1205 (ite c!19458 (ite c!19454 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))))))

(declare-fun b!110844 () Bool)

(assert (=> b!110844 (= e!72073 (contains!827 lt!56783 (tuple2!2389 (_1!1205 (ite c!19458 (ite c!19454 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))) (_2!1205 (ite c!19458 (ite c!19454 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))))

(assert (= (and d!31289 res!54768) b!110843))

(assert (= (and b!110843 res!54769) b!110844))

(assert (=> d!31289 m!124615))

(declare-fun m!125837 () Bool)

(assert (=> d!31289 m!125837))

(declare-fun m!125839 () Bool)

(assert (=> d!31289 m!125839))

(declare-fun m!125841 () Bool)

(assert (=> b!110843 m!125841))

(declare-fun m!125843 () Bool)

(assert (=> b!110844 m!125843))

(assert (=> d!30885 d!31289))

(declare-fun e!72076 () List!1609)

(declare-fun b!110845 () Bool)

(assert (=> b!110845 (= e!72076 (insertStrictlySorted!78 (t!5738 (toList!789 (ite c!19458 call!11703 call!11714))) (_1!1205 (ite c!19458 (ite c!19454 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))) (_2!1205 (ite c!19458 (ite c!19454 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))))))

(declare-fun b!110846 () Bool)

(declare-fun res!54771 () Bool)

(declare-fun e!72078 () Bool)

(assert (=> b!110846 (=> (not res!54771) (not e!72078))))

(declare-fun lt!57149 () List!1609)

(assert (=> b!110846 (= res!54771 (containsKey!162 lt!57149 (_1!1205 (ite c!19458 (ite c!19454 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))))))

(declare-fun b!110847 () Bool)

(declare-fun e!72077 () List!1609)

(declare-fun call!11823 () List!1609)

(assert (=> b!110847 (= e!72077 call!11823)))

(declare-fun bm!11819 () Bool)

(declare-fun call!11824 () List!1609)

(declare-fun call!11822 () List!1609)

(assert (=> bm!11819 (= call!11824 call!11822)))

(declare-fun bm!11820 () Bool)

(assert (=> bm!11820 (= call!11823 call!11824)))

(declare-fun b!110848 () Bool)

(assert (=> b!110848 (= e!72077 call!11823)))

(declare-fun c!19711 () Bool)

(declare-fun bm!11821 () Bool)

(assert (=> bm!11821 (= call!11822 ($colon$colon!82 e!72076 (ite c!19711 (h!2204 (toList!789 (ite c!19458 call!11703 call!11714))) (tuple2!2389 (_1!1205 (ite c!19458 (ite c!19454 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))) (_2!1205 (ite c!19458 (ite c!19454 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))))))))

(declare-fun c!19712 () Bool)

(assert (=> bm!11821 (= c!19712 c!19711)))

(declare-fun b!110849 () Bool)

(declare-fun e!72075 () List!1609)

(assert (=> b!110849 (= e!72075 call!11824)))

(declare-fun d!31291 () Bool)

(assert (=> d!31291 e!72078))

(declare-fun res!54770 () Bool)

(assert (=> d!31291 (=> (not res!54770) (not e!72078))))

(assert (=> d!31291 (= res!54770 (isStrictlySorted!298 lt!57149))))

(declare-fun e!72074 () List!1609)

(assert (=> d!31291 (= lt!57149 e!72074)))

(assert (=> d!31291 (= c!19711 (and ((_ is Cons!1605) (toList!789 (ite c!19458 call!11703 call!11714))) (bvslt (_1!1205 (h!2204 (toList!789 (ite c!19458 call!11703 call!11714)))) (_1!1205 (ite c!19458 (ite c!19454 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))))

(assert (=> d!31291 (isStrictlySorted!298 (toList!789 (ite c!19458 call!11703 call!11714)))))

(assert (=> d!31291 (= (insertStrictlySorted!78 (toList!789 (ite c!19458 call!11703 call!11714)) (_1!1205 (ite c!19458 (ite c!19454 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))) (_2!1205 (ite c!19458 (ite c!19454 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))) lt!57149)))

(declare-fun b!110850 () Bool)

(assert (=> b!110850 (= e!72074 call!11822)))

(declare-fun b!110851 () Bool)

(declare-fun c!19709 () Bool)

(assert (=> b!110851 (= c!19709 (and ((_ is Cons!1605) (toList!789 (ite c!19458 call!11703 call!11714))) (bvsgt (_1!1205 (h!2204 (toList!789 (ite c!19458 call!11703 call!11714)))) (_1!1205 (ite c!19458 (ite c!19454 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))))

(assert (=> b!110851 (= e!72075 e!72077)))

(declare-fun b!110852 () Bool)

(declare-fun c!19710 () Bool)

(assert (=> b!110852 (= e!72076 (ite c!19710 (t!5738 (toList!789 (ite c!19458 call!11703 call!11714))) (ite c!19709 (Cons!1605 (h!2204 (toList!789 (ite c!19458 call!11703 call!11714))) (t!5738 (toList!789 (ite c!19458 call!11703 call!11714)))) Nil!1606)))))

(declare-fun b!110853 () Bool)

(assert (=> b!110853 (= e!72078 (contains!827 lt!57149 (tuple2!2389 (_1!1205 (ite c!19458 (ite c!19454 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))) (_2!1205 (ite c!19458 (ite c!19454 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))))

(declare-fun b!110854 () Bool)

(assert (=> b!110854 (= e!72074 e!72075)))

(assert (=> b!110854 (= c!19710 (and ((_ is Cons!1605) (toList!789 (ite c!19458 call!11703 call!11714))) (= (_1!1205 (h!2204 (toList!789 (ite c!19458 call!11703 call!11714)))) (_1!1205 (ite c!19458 (ite c!19454 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))))

(assert (= (and d!31291 c!19711) b!110850))

(assert (= (and d!31291 (not c!19711)) b!110854))

(assert (= (and b!110854 c!19710) b!110849))

(assert (= (and b!110854 (not c!19710)) b!110851))

(assert (= (and b!110851 c!19709) b!110847))

(assert (= (and b!110851 (not c!19709)) b!110848))

(assert (= (or b!110847 b!110848) bm!11820))

(assert (= (or b!110849 bm!11820) bm!11819))

(assert (= (or b!110850 bm!11819) bm!11821))

(assert (= (and bm!11821 c!19712) b!110845))

(assert (= (and bm!11821 (not c!19712)) b!110852))

(assert (= (and d!31291 res!54770) b!110846))

(assert (= (and b!110846 res!54771) b!110853))

(declare-fun m!125845 () Bool)

(assert (=> bm!11821 m!125845))

(declare-fun m!125847 () Bool)

(assert (=> b!110853 m!125847))

(declare-fun m!125849 () Bool)

(assert (=> b!110846 m!125849))

(declare-fun m!125851 () Bool)

(assert (=> d!31291 m!125851))

(declare-fun m!125853 () Bool)

(assert (=> d!31291 m!125853))

(declare-fun m!125855 () Bool)

(assert (=> b!110845 m!125855))

(assert (=> d!30885 d!31291))

(declare-fun d!31293 () Bool)

(declare-fun res!54772 () Bool)

(declare-fun e!72079 () Bool)

(assert (=> d!31293 (=> res!54772 e!72079)))

(assert (=> d!31293 (= res!54772 (and ((_ is Cons!1605) (toList!789 lt!56487)) (= (_1!1205 (h!2204 (toList!789 lt!56487))) (_1!1205 lt!56370))))))

(assert (=> d!31293 (= (containsKey!162 (toList!789 lt!56487) (_1!1205 lt!56370)) e!72079)))

(declare-fun b!110855 () Bool)

(declare-fun e!72080 () Bool)

(assert (=> b!110855 (= e!72079 e!72080)))

(declare-fun res!54773 () Bool)

(assert (=> b!110855 (=> (not res!54773) (not e!72080))))

(assert (=> b!110855 (= res!54773 (and (or (not ((_ is Cons!1605) (toList!789 lt!56487))) (bvsle (_1!1205 (h!2204 (toList!789 lt!56487))) (_1!1205 lt!56370))) ((_ is Cons!1605) (toList!789 lt!56487)) (bvslt (_1!1205 (h!2204 (toList!789 lt!56487))) (_1!1205 lt!56370))))))

(declare-fun b!110856 () Bool)

(assert (=> b!110856 (= e!72080 (containsKey!162 (t!5738 (toList!789 lt!56487)) (_1!1205 lt!56370)))))

(assert (= (and d!31293 (not res!54772)) b!110855))

(assert (= (and b!110855 res!54773) b!110856))

(declare-fun m!125857 () Bool)

(assert (=> b!110856 m!125857))

(assert (=> d!30997 d!31293))

(assert (=> d!30965 d!31187))

(declare-fun d!31295 () Bool)

(assert (not d!31295))

(assert (=> b!110314 d!31295))

(declare-fun d!31297 () Bool)

(declare-fun lt!57150 () Bool)

(assert (=> d!31297 (= lt!57150 (select (content!114 lt!56453) (tuple2!2389 (_1!1205 lt!56370) (_2!1205 lt!56370))))))

(declare-fun e!72082 () Bool)

(assert (=> d!31297 (= lt!57150 e!72082)))

(declare-fun res!54775 () Bool)

(assert (=> d!31297 (=> (not res!54775) (not e!72082))))

(assert (=> d!31297 (= res!54775 ((_ is Cons!1605) lt!56453))))

(assert (=> d!31297 (= (contains!827 lt!56453 (tuple2!2389 (_1!1205 lt!56370) (_2!1205 lt!56370))) lt!57150)))

(declare-fun b!110857 () Bool)

(declare-fun e!72081 () Bool)

(assert (=> b!110857 (= e!72082 e!72081)))

(declare-fun res!54774 () Bool)

(assert (=> b!110857 (=> res!54774 e!72081)))

(assert (=> b!110857 (= res!54774 (= (h!2204 lt!56453) (tuple2!2389 (_1!1205 lt!56370) (_2!1205 lt!56370))))))

(declare-fun b!110858 () Bool)

(assert (=> b!110858 (= e!72081 (contains!827 (t!5738 lt!56453) (tuple2!2389 (_1!1205 lt!56370) (_2!1205 lt!56370))))))

(assert (= (and d!31297 res!54775) b!110857))

(assert (= (and b!110857 (not res!54774)) b!110858))

(declare-fun m!125859 () Bool)

(assert (=> d!31297 m!125859))

(declare-fun m!125861 () Bool)

(assert (=> d!31297 m!125861))

(declare-fun m!125863 () Bool)

(assert (=> b!110858 m!125863))

(assert (=> b!110458 d!31297))

(declare-fun b!110859 () Bool)

(declare-fun e!72087 () ListLongMap!1547)

(declare-fun call!11825 () ListLongMap!1547)

(assert (=> b!110859 (= e!72087 call!11825)))

(declare-fun d!31299 () Bool)

(declare-fun e!72084 () Bool)

(assert (=> d!31299 e!72084))

(declare-fun res!54777 () Bool)

(assert (=> d!31299 (=> (not res!54777) (not e!72084))))

(declare-fun lt!57157 () ListLongMap!1547)

(assert (=> d!31299 (= res!54777 (not (contains!824 lt!57157 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!72086 () ListLongMap!1547)

(assert (=> d!31299 (= lt!57157 e!72086)))

(declare-fun c!19716 () Bool)

(assert (=> d!31299 (= c!19716 (bvsge #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))))))

(assert (=> d!31299 (validMask!0 (mask!6794 newMap!16))))

(assert (=> d!31299 (= (getCurrentListMapNoExtraKeys!111 (_keys!4340 newMap!16) (ite c!19460 (_values!2609 newMap!16) lt!56625) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) lt!57157)))

(declare-fun b!110860 () Bool)

(declare-fun e!72083 () Bool)

(assert (=> b!110860 (= e!72083 (isEmpty!382 lt!57157))))

(declare-fun b!110861 () Bool)

(assert (=> b!110861 (= e!72083 (= lt!57157 (getCurrentListMapNoExtraKeys!111 (_keys!4340 newMap!16) (ite c!19460 (_values!2609 newMap!16) lt!56625) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2626 newMap!16))))))

(declare-fun bm!11822 () Bool)

(assert (=> bm!11822 (= call!11825 (getCurrentListMapNoExtraKeys!111 (_keys!4340 newMap!16) (ite c!19460 (_values!2609 newMap!16) lt!56625) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2626 newMap!16)))))

(declare-fun b!110862 () Bool)

(declare-fun e!72089 () Bool)

(assert (=> b!110862 (= e!72089 e!72083)))

(declare-fun c!19713 () Bool)

(assert (=> b!110862 (= c!19713 (bvslt #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))))))

(declare-fun b!110863 () Bool)

(assert (=> b!110863 (= e!72084 e!72089)))

(declare-fun c!19715 () Bool)

(declare-fun e!72088 () Bool)

(assert (=> b!110863 (= c!19715 e!72088)))

(declare-fun res!54778 () Bool)

(assert (=> b!110863 (=> (not res!54778) (not e!72088))))

(assert (=> b!110863 (= res!54778 (bvslt #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))))))

(declare-fun b!110864 () Bool)

(declare-fun res!54776 () Bool)

(assert (=> b!110864 (=> (not res!54776) (not e!72084))))

(assert (=> b!110864 (= res!54776 (not (contains!824 lt!57157 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!110865 () Bool)

(assert (=> b!110865 (= e!72088 (validKeyInArray!0 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!110865 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!110866 () Bool)

(declare-fun e!72085 () Bool)

(assert (=> b!110866 (= e!72089 e!72085)))

(assert (=> b!110866 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))))))

(declare-fun res!54779 () Bool)

(assert (=> b!110866 (= res!54779 (contains!824 lt!57157 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!110866 (=> (not res!54779) (not e!72085))))

(declare-fun b!110867 () Bool)

(declare-fun lt!57155 () Unit!3382)

(declare-fun lt!57154 () Unit!3382)

(assert (=> b!110867 (= lt!57155 lt!57154)))

(declare-fun lt!57153 () ListLongMap!1547)

(declare-fun lt!57151 () (_ BitVec 64))

(declare-fun lt!57152 () (_ BitVec 64))

(declare-fun lt!57156 () V!3241)

(assert (=> b!110867 (not (contains!824 (+!144 lt!57153 (tuple2!2389 lt!57152 lt!57156)) lt!57151))))

(assert (=> b!110867 (= lt!57154 (addStillNotContains!50 lt!57153 lt!57152 lt!57156 lt!57151))))

(assert (=> b!110867 (= lt!57151 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!110867 (= lt!57156 (get!1353 (select (arr!2073 (ite c!19460 (_values!2609 newMap!16) lt!56625)) #b00000000000000000000000000000000) (dynLambda!390 (defaultEntry!2626 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!110867 (= lt!57152 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!110867 (= lt!57153 call!11825)))

(assert (=> b!110867 (= e!72087 (+!144 call!11825 (tuple2!2389 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000) (get!1353 (select (arr!2073 (ite c!19460 (_values!2609 newMap!16) lt!56625)) #b00000000000000000000000000000000) (dynLambda!390 (defaultEntry!2626 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!110868 () Bool)

(assert (=> b!110868 (= e!72086 e!72087)))

(declare-fun c!19714 () Bool)

(assert (=> b!110868 (= c!19714 (validKeyInArray!0 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!110869 () Bool)

(assert (=> b!110869 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))))))

(assert (=> b!110869 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2330 (ite c!19460 (_values!2609 newMap!16) lt!56625))))))

(assert (=> b!110869 (= e!72085 (= (apply!100 lt!57157 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)) (get!1353 (select (arr!2073 (ite c!19460 (_values!2609 newMap!16) lt!56625)) #b00000000000000000000000000000000) (dynLambda!390 (defaultEntry!2626 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!110870 () Bool)

(assert (=> b!110870 (= e!72086 (ListLongMap!1548 Nil!1606))))

(assert (= (and d!31299 c!19716) b!110870))

(assert (= (and d!31299 (not c!19716)) b!110868))

(assert (= (and b!110868 c!19714) b!110867))

(assert (= (and b!110868 (not c!19714)) b!110859))

(assert (= (or b!110867 b!110859) bm!11822))

(assert (= (and d!31299 res!54777) b!110864))

(assert (= (and b!110864 res!54776) b!110863))

(assert (= (and b!110863 res!54778) b!110865))

(assert (= (and b!110863 c!19715) b!110866))

(assert (= (and b!110863 (not c!19715)) b!110862))

(assert (= (and b!110866 res!54779) b!110869))

(assert (= (and b!110862 c!19713) b!110861))

(assert (= (and b!110862 (not c!19713)) b!110860))

(declare-fun b_lambda!4959 () Bool)

(assert (=> (not b_lambda!4959) (not b!110867)))

(assert (=> b!110867 t!5751))

(declare-fun b_and!6813 () Bool)

(assert (= b_and!6809 (and (=> t!5751 result!3533) b_and!6813)))

(assert (=> b!110867 t!5753))

(declare-fun b_and!6815 () Bool)

(assert (= b_and!6811 (and (=> t!5753 result!3535) b_and!6815)))

(declare-fun b_lambda!4961 () Bool)

(assert (=> (not b_lambda!4961) (not b!110869)))

(assert (=> b!110869 t!5751))

(declare-fun b_and!6817 () Bool)

(assert (= b_and!6813 (and (=> t!5751 result!3533) b_and!6817)))

(assert (=> b!110869 t!5753))

(declare-fun b_and!6819 () Bool)

(assert (= b_and!6815 (and (=> t!5753 result!3535) b_and!6819)))

(assert (=> b!110866 m!124605))

(assert (=> b!110866 m!124605))

(declare-fun m!125865 () Bool)

(assert (=> b!110866 m!125865))

(declare-fun m!125867 () Bool)

(assert (=> bm!11822 m!125867))

(assert (=> b!110869 m!124605))

(assert (=> b!110869 m!124765))

(assert (=> b!110869 m!124605))

(declare-fun m!125869 () Bool)

(assert (=> b!110869 m!125869))

(assert (=> b!110869 m!124765))

(assert (=> b!110869 m!124767))

(assert (=> b!110869 m!124769))

(assert (=> b!110869 m!124767))

(assert (=> b!110868 m!124605))

(assert (=> b!110868 m!124605))

(assert (=> b!110868 m!124607))

(assert (=> b!110865 m!124605))

(assert (=> b!110865 m!124605))

(assert (=> b!110865 m!124607))

(assert (=> b!110861 m!125867))

(declare-fun m!125871 () Bool)

(assert (=> d!31299 m!125871))

(assert (=> d!31299 m!124579))

(declare-fun m!125873 () Bool)

(assert (=> b!110860 m!125873))

(assert (=> b!110867 m!124605))

(assert (=> b!110867 m!124765))

(assert (=> b!110867 m!124767))

(assert (=> b!110867 m!124769))

(declare-fun m!125875 () Bool)

(assert (=> b!110867 m!125875))

(declare-fun m!125877 () Bool)

(assert (=> b!110867 m!125877))

(declare-fun m!125879 () Bool)

(assert (=> b!110867 m!125879))

(assert (=> b!110867 m!124765))

(assert (=> b!110867 m!125877))

(declare-fun m!125881 () Bool)

(assert (=> b!110867 m!125881))

(assert (=> b!110867 m!124767))

(declare-fun m!125883 () Bool)

(assert (=> b!110864 m!125883))

(assert (=> bm!11739 d!31299))

(declare-fun d!31301 () Bool)

(declare-fun lt!57158 () Bool)

(assert (=> d!31301 (= lt!57158 (select (content!114 (toList!789 lt!57013)) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun e!72091 () Bool)

(assert (=> d!31301 (= lt!57158 e!72091)))

(declare-fun res!54781 () Bool)

(assert (=> d!31301 (=> (not res!54781) (not e!72091))))

(assert (=> d!31301 (= res!54781 ((_ is Cons!1605) (toList!789 lt!57013)))))

(assert (=> d!31301 (= (contains!827 (toList!789 lt!57013) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))) lt!57158)))

(declare-fun b!110871 () Bool)

(declare-fun e!72090 () Bool)

(assert (=> b!110871 (= e!72091 e!72090)))

(declare-fun res!54780 () Bool)

(assert (=> b!110871 (=> res!54780 e!72090)))

(assert (=> b!110871 (= res!54780 (= (h!2204 (toList!789 lt!57013)) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun b!110872 () Bool)

(assert (=> b!110872 (= e!72090 (contains!827 (t!5738 (toList!789 lt!57013)) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))))

(assert (= (and d!31301 res!54781) b!110871))

(assert (= (and b!110871 (not res!54780)) b!110872))

(declare-fun m!125885 () Bool)

(assert (=> d!31301 m!125885))

(declare-fun m!125887 () Bool)

(assert (=> d!31301 m!125887))

(declare-fun m!125889 () Bool)

(assert (=> b!110872 m!125889))

(assert (=> b!110476 d!31301))

(declare-fun d!31303 () Bool)

(assert (=> d!31303 (= (isDefined!111 (getValueByKey!159 (toList!789 call!11700) (select (arr!2072 (_keys!4340 newMap!16)) (index!3171 lt!56646)))) (not (isEmpty!383 (getValueByKey!159 (toList!789 call!11700) (select (arr!2072 (_keys!4340 newMap!16)) (index!3171 lt!56646))))))))

(declare-fun bs!4558 () Bool)

(assert (= bs!4558 d!31303))

(assert (=> bs!4558 m!124629))

(declare-fun m!125891 () Bool)

(assert (=> bs!4558 m!125891))

(assert (=> b!110106 d!31303))

(declare-fun b!110876 () Bool)

(declare-fun e!72093 () Option!165)

(assert (=> b!110876 (= e!72093 None!163)))

(declare-fun b!110873 () Bool)

(declare-fun e!72092 () Option!165)

(assert (=> b!110873 (= e!72092 (Some!164 (_2!1205 (h!2204 (toList!789 call!11700)))))))

(declare-fun b!110875 () Bool)

(assert (=> b!110875 (= e!72093 (getValueByKey!159 (t!5738 (toList!789 call!11700)) (select (arr!2072 (_keys!4340 newMap!16)) (index!3171 lt!56646))))))

(declare-fun d!31305 () Bool)

(declare-fun c!19717 () Bool)

(assert (=> d!31305 (= c!19717 (and ((_ is Cons!1605) (toList!789 call!11700)) (= (_1!1205 (h!2204 (toList!789 call!11700))) (select (arr!2072 (_keys!4340 newMap!16)) (index!3171 lt!56646)))))))

(assert (=> d!31305 (= (getValueByKey!159 (toList!789 call!11700) (select (arr!2072 (_keys!4340 newMap!16)) (index!3171 lt!56646))) e!72092)))

(declare-fun b!110874 () Bool)

(assert (=> b!110874 (= e!72092 e!72093)))

(declare-fun c!19718 () Bool)

(assert (=> b!110874 (= c!19718 (and ((_ is Cons!1605) (toList!789 call!11700)) (not (= (_1!1205 (h!2204 (toList!789 call!11700))) (select (arr!2072 (_keys!4340 newMap!16)) (index!3171 lt!56646))))))))

(assert (= (and d!31305 c!19717) b!110873))

(assert (= (and d!31305 (not c!19717)) b!110874))

(assert (= (and b!110874 c!19718) b!110875))

(assert (= (and b!110874 (not c!19718)) b!110876))

(assert (=> b!110875 m!124407))

(declare-fun m!125893 () Bool)

(assert (=> b!110875 m!125893))

(assert (=> b!110106 d!31305))

(declare-fun d!31307 () Bool)

(assert (=> d!31307 (arrayContainsKey!0 (_keys!4340 newMap!16) lt!56859 #b00000000000000000000000000000000)))

(declare-fun lt!57161 () Unit!3382)

(declare-fun choose!13 (array!4371 (_ BitVec 64) (_ BitVec 32)) Unit!3382)

(assert (=> d!31307 (= lt!57161 (choose!13 (_keys!4340 newMap!16) lt!56859 #b00000000000000000000000000000000))))

(assert (=> d!31307 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!31307 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4340 newMap!16) lt!56859 #b00000000000000000000000000000000) lt!57161)))

(declare-fun bs!4559 () Bool)

(assert (= bs!4559 d!31307))

(assert (=> bs!4559 m!124807))

(declare-fun m!125895 () Bool)

(assert (=> bs!4559 m!125895))

(assert (=> b!110245 d!31307))

(declare-fun d!31309 () Bool)

(declare-fun res!54782 () Bool)

(declare-fun e!72094 () Bool)

(assert (=> d!31309 (=> res!54782 e!72094)))

(assert (=> d!31309 (= res!54782 (= (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000) lt!56859))))

(assert (=> d!31309 (= (arrayContainsKey!0 (_keys!4340 newMap!16) lt!56859 #b00000000000000000000000000000000) e!72094)))

(declare-fun b!110877 () Bool)

(declare-fun e!72095 () Bool)

(assert (=> b!110877 (= e!72094 e!72095)))

(declare-fun res!54783 () Bool)

(assert (=> b!110877 (=> (not res!54783) (not e!72095))))

(assert (=> b!110877 (= res!54783 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2329 (_keys!4340 newMap!16))))))

(declare-fun b!110878 () Bool)

(assert (=> b!110878 (= e!72095 (arrayContainsKey!0 (_keys!4340 newMap!16) lt!56859 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!31309 (not res!54782)) b!110877))

(assert (= (and b!110877 res!54783) b!110878))

(assert (=> d!31309 m!124605))

(declare-fun m!125897 () Bool)

(assert (=> b!110878 m!125897))

(assert (=> b!110245 d!31309))

(declare-fun b!110880 () Bool)

(declare-fun e!72097 () SeekEntryResult!255)

(declare-fun lt!57163 () SeekEntryResult!255)

(assert (=> b!110880 (= e!72097 (Found!255 (index!3172 lt!57163)))))

(declare-fun b!110881 () Bool)

(declare-fun e!72098 () SeekEntryResult!255)

(assert (=> b!110881 (= e!72098 Undefined!255)))

(declare-fun b!110882 () Bool)

(assert (=> b!110882 (= e!72098 e!72097)))

(declare-fun lt!57164 () (_ BitVec 64))

(assert (=> b!110882 (= lt!57164 (select (arr!2072 (_keys!4340 newMap!16)) (index!3172 lt!57163)))))

(declare-fun c!19721 () Bool)

(assert (=> b!110882 (= c!19721 (= lt!57164 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!110883 () Bool)

(declare-fun c!19719 () Bool)

(assert (=> b!110883 (= c!19719 (= lt!57164 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!72096 () SeekEntryResult!255)

(assert (=> b!110883 (= e!72097 e!72096)))

(declare-fun b!110884 () Bool)

(assert (=> b!110884 (= e!72096 (MissingZero!255 (index!3172 lt!57163)))))

(declare-fun b!110879 () Bool)

(assert (=> b!110879 (= e!72096 (seekKeyOrZeroReturnVacant!0 (x!13943 lt!57163) (index!3172 lt!57163) (index!3172 lt!57163) (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000) (_keys!4340 newMap!16) (mask!6794 newMap!16)))))

(declare-fun d!31311 () Bool)

(declare-fun lt!57162 () SeekEntryResult!255)

(assert (=> d!31311 (and (or ((_ is Undefined!255) lt!57162) (not ((_ is Found!255) lt!57162)) (and (bvsge (index!3171 lt!57162) #b00000000000000000000000000000000) (bvslt (index!3171 lt!57162) (size!2329 (_keys!4340 newMap!16))))) (or ((_ is Undefined!255) lt!57162) ((_ is Found!255) lt!57162) (not ((_ is MissingZero!255) lt!57162)) (and (bvsge (index!3170 lt!57162) #b00000000000000000000000000000000) (bvslt (index!3170 lt!57162) (size!2329 (_keys!4340 newMap!16))))) (or ((_ is Undefined!255) lt!57162) ((_ is Found!255) lt!57162) ((_ is MissingZero!255) lt!57162) (not ((_ is MissingVacant!255) lt!57162)) (and (bvsge (index!3173 lt!57162) #b00000000000000000000000000000000) (bvslt (index!3173 lt!57162) (size!2329 (_keys!4340 newMap!16))))) (or ((_ is Undefined!255) lt!57162) (ite ((_ is Found!255) lt!57162) (= (select (arr!2072 (_keys!4340 newMap!16)) (index!3171 lt!57162)) (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!255) lt!57162) (= (select (arr!2072 (_keys!4340 newMap!16)) (index!3170 lt!57162)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!255) lt!57162) (= (select (arr!2072 (_keys!4340 newMap!16)) (index!3173 lt!57162)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!31311 (= lt!57162 e!72098)))

(declare-fun c!19720 () Bool)

(assert (=> d!31311 (= c!19720 (and ((_ is Intermediate!255) lt!57163) (undefined!1067 lt!57163)))))

(assert (=> d!31311 (= lt!57163 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000) (mask!6794 newMap!16)) (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000) (_keys!4340 newMap!16) (mask!6794 newMap!16)))))

(assert (=> d!31311 (validMask!0 (mask!6794 newMap!16))))

(assert (=> d!31311 (= (seekEntryOrOpen!0 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000) (_keys!4340 newMap!16) (mask!6794 newMap!16)) lt!57162)))

(assert (= (and d!31311 c!19720) b!110881))

(assert (= (and d!31311 (not c!19720)) b!110882))

(assert (= (and b!110882 c!19721) b!110880))

(assert (= (and b!110882 (not c!19721)) b!110883))

(assert (= (and b!110883 c!19719) b!110884))

(assert (= (and b!110883 (not c!19719)) b!110879))

(declare-fun m!125899 () Bool)

(assert (=> b!110882 m!125899))

(assert (=> b!110879 m!124605))

(declare-fun m!125901 () Bool)

(assert (=> b!110879 m!125901))

(declare-fun m!125903 () Bool)

(assert (=> d!31311 m!125903))

(declare-fun m!125905 () Bool)

(assert (=> d!31311 m!125905))

(assert (=> d!31311 m!124605))

(declare-fun m!125907 () Bool)

(assert (=> d!31311 m!125907))

(assert (=> d!31311 m!124579))

(declare-fun m!125909 () Bool)

(assert (=> d!31311 m!125909))

(assert (=> d!31311 m!124605))

(assert (=> d!31311 m!125905))

(declare-fun m!125911 () Bool)

(assert (=> d!31311 m!125911))

(assert (=> b!110245 d!31311))

(declare-fun d!31313 () Bool)

(declare-fun res!54784 () Bool)

(declare-fun e!72099 () Bool)

(assert (=> d!31313 (=> res!54784 e!72099)))

(assert (=> d!31313 (= res!54784 (and ((_ is Cons!1605) (toList!789 lt!56479)) (= (_1!1205 (h!2204 (toList!789 lt!56479))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!31313 (= (containsKey!162 (toList!789 lt!56479) #b0000000000000000000000000000000000000000000000000000000000000000) e!72099)))

(declare-fun b!110885 () Bool)

(declare-fun e!72100 () Bool)

(assert (=> b!110885 (= e!72099 e!72100)))

(declare-fun res!54785 () Bool)

(assert (=> b!110885 (=> (not res!54785) (not e!72100))))

(assert (=> b!110885 (= res!54785 (and (or (not ((_ is Cons!1605) (toList!789 lt!56479))) (bvsle (_1!1205 (h!2204 (toList!789 lt!56479))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1605) (toList!789 lt!56479)) (bvslt (_1!1205 (h!2204 (toList!789 lt!56479))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!110886 () Bool)

(assert (=> b!110886 (= e!72100 (containsKey!162 (t!5738 (toList!789 lt!56479)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!31313 (not res!54784)) b!110885))

(assert (= (and b!110885 res!54785) b!110886))

(declare-fun m!125913 () Bool)

(assert (=> b!110886 m!125913))

(assert (=> d!30927 d!31313))

(declare-fun b!110890 () Bool)

(declare-fun e!72102 () Option!165)

(assert (=> b!110890 (= e!72102 None!163)))

(declare-fun b!110887 () Bool)

(declare-fun e!72101 () Option!165)

(assert (=> b!110887 (= e!72101 (Some!164 (_2!1205 (h!2204 (t!5738 (toList!789 lt!56367))))))))

(declare-fun b!110889 () Bool)

(assert (=> b!110889 (= e!72102 (getValueByKey!159 (t!5738 (t!5738 (toList!789 lt!56367))) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(declare-fun d!31315 () Bool)

(declare-fun c!19722 () Bool)

(assert (=> d!31315 (= c!19722 (and ((_ is Cons!1605) (t!5738 (toList!789 lt!56367))) (= (_1!1205 (h!2204 (t!5738 (toList!789 lt!56367)))) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355))))))

(assert (=> d!31315 (= (getValueByKey!159 (t!5738 (toList!789 lt!56367)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) e!72101)))

(declare-fun b!110888 () Bool)

(assert (=> b!110888 (= e!72101 e!72102)))

(declare-fun c!19723 () Bool)

(assert (=> b!110888 (= c!19723 (and ((_ is Cons!1605) (t!5738 (toList!789 lt!56367))) (not (= (_1!1205 (h!2204 (t!5738 (toList!789 lt!56367)))) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))))

(assert (= (and d!31315 c!19722) b!110887))

(assert (= (and d!31315 (not c!19722)) b!110888))

(assert (= (and b!110888 c!19723) b!110889))

(assert (= (and b!110888 (not c!19723)) b!110890))

(assert (=> b!110889 m!124087))

(declare-fun m!125915 () Bool)

(assert (=> b!110889 m!125915))

(assert (=> b!110150 d!31315))

(assert (=> d!30953 d!30939))

(declare-fun d!31317 () Bool)

(declare-fun e!72104 () Bool)

(assert (=> d!31317 e!72104))

(declare-fun res!54786 () Bool)

(assert (=> d!31317 (=> res!54786 e!72104)))

(declare-fun lt!57167 () Bool)

(assert (=> d!31317 (= res!54786 (not lt!57167))))

(declare-fun lt!57168 () Bool)

(assert (=> d!31317 (= lt!57167 lt!57168)))

(declare-fun lt!57165 () Unit!3382)

(declare-fun e!72103 () Unit!3382)

(assert (=> d!31317 (= lt!57165 e!72103)))

(declare-fun c!19724 () Bool)

(assert (=> d!31317 (= c!19724 lt!57168)))

(assert (=> d!31317 (= lt!57168 (containsKey!162 (toList!789 lt!56544) lt!56550))))

(assert (=> d!31317 (= (contains!824 lt!56544 lt!56550) lt!57167)))

(declare-fun b!110891 () Bool)

(declare-fun lt!57166 () Unit!3382)

(assert (=> b!110891 (= e!72103 lt!57166)))

(assert (=> b!110891 (= lt!57166 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 lt!56544) lt!56550))))

(assert (=> b!110891 (isDefined!111 (getValueByKey!159 (toList!789 lt!56544) lt!56550))))

(declare-fun b!110892 () Bool)

(declare-fun Unit!3427 () Unit!3382)

(assert (=> b!110892 (= e!72103 Unit!3427)))

(declare-fun b!110893 () Bool)

(assert (=> b!110893 (= e!72104 (isDefined!111 (getValueByKey!159 (toList!789 lt!56544) lt!56550)))))

(assert (= (and d!31317 c!19724) b!110891))

(assert (= (and d!31317 (not c!19724)) b!110892))

(assert (= (and d!31317 (not res!54786)) b!110893))

(declare-fun m!125917 () Bool)

(assert (=> d!31317 m!125917))

(declare-fun m!125919 () Bool)

(assert (=> b!110891 m!125919))

(assert (=> b!110891 m!124879))

(assert (=> b!110891 m!124879))

(declare-fun m!125921 () Bool)

(assert (=> b!110891 m!125921))

(assert (=> b!110893 m!124879))

(assert (=> b!110893 m!124879))

(assert (=> b!110893 m!125921))

(assert (=> d!30953 d!31317))

(assert (=> d!30953 d!30945))

(assert (=> d!30953 d!30949))

(declare-fun d!31319 () Bool)

(assert (=> d!31319 (= (apply!100 (+!144 lt!56544 (tuple2!2389 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))) lt!56550) (apply!100 lt!56544 lt!56550))))

(assert (=> d!31319 true))

(declare-fun _$34!903 () Unit!3382)

(assert (=> d!31319 (= (choose!697 lt!56544 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))) lt!56550) _$34!903)))

(declare-fun bs!4560 () Bool)

(assert (= bs!4560 d!31319))

(assert (=> bs!4560 m!124353))

(assert (=> bs!4560 m!124353))

(assert (=> bs!4560 m!124355))

(assert (=> bs!4560 m!124335))

(assert (=> d!30953 d!31319))

(declare-fun d!31321 () Bool)

(declare-fun res!54787 () Bool)

(declare-fun e!72105 () Bool)

(assert (=> d!31321 (=> res!54787 e!72105)))

(assert (=> d!31321 (= res!54787 (and ((_ is Cons!1605) lt!56949) (= (_1!1205 (h!2204 lt!56949)) (_1!1205 lt!56363))))))

(assert (=> d!31321 (= (containsKey!162 lt!56949 (_1!1205 lt!56363)) e!72105)))

(declare-fun b!110895 () Bool)

(declare-fun e!72106 () Bool)

(assert (=> b!110895 (= e!72105 e!72106)))

(declare-fun res!54788 () Bool)

(assert (=> b!110895 (=> (not res!54788) (not e!72106))))

(assert (=> b!110895 (= res!54788 (and (or (not ((_ is Cons!1605) lt!56949)) (bvsle (_1!1205 (h!2204 lt!56949)) (_1!1205 lt!56363))) ((_ is Cons!1605) lt!56949) (bvslt (_1!1205 (h!2204 lt!56949)) (_1!1205 lt!56363))))))

(declare-fun b!110896 () Bool)

(assert (=> b!110896 (= e!72106 (containsKey!162 (t!5738 lt!56949) (_1!1205 lt!56363)))))

(assert (= (and d!31321 (not res!54787)) b!110895))

(assert (= (and b!110895 res!54788) b!110896))

(declare-fun m!125923 () Bool)

(assert (=> b!110896 m!125923))

(assert (=> b!110356 d!31321))

(assert (=> d!30897 d!30849))

(declare-fun d!31323 () Bool)

(assert (=> d!31323 (contains!824 (getCurrentListMap!475 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355))))

(declare-fun lt!57171 () Unit!3382)

(declare-fun choose!702 (array!4371 array!4373 (_ BitVec 32) (_ BitVec 32) V!3241 V!3241 (_ BitVec 64) (_ BitVec 32) Int) Unit!3382)

(assert (=> d!31323 (= lt!57171 (choose!702 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(assert (=> d!31323 (validMask!0 (mask!6794 newMap!16))))

(assert (=> d!31323 (= (lemmaArrayContainsKeyThenInListMap!32 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) lt!57171)))

(declare-fun bs!4561 () Bool)

(assert (= bs!4561 d!31323))

(assert (=> bs!4561 m!124333))

(assert (=> bs!4561 m!124333))

(assert (=> bs!4561 m!124087))

(assert (=> bs!4561 m!124473))

(assert (=> bs!4561 m!124087))

(declare-fun m!125925 () Bool)

(assert (=> bs!4561 m!125925))

(assert (=> bs!4561 m!124579))

(assert (=> b!110051 d!31323))

(declare-fun d!31325 () Bool)

(declare-fun e!72108 () Bool)

(assert (=> d!31325 e!72108))

(declare-fun res!54789 () Bool)

(assert (=> d!31325 (=> res!54789 e!72108)))

(declare-fun lt!57174 () Bool)

(assert (=> d!31325 (= res!54789 (not lt!57174))))

(declare-fun lt!57175 () Bool)

(assert (=> d!31325 (= lt!57174 lt!57175)))

(declare-fun lt!57172 () Unit!3382)

(declare-fun e!72107 () Unit!3382)

(assert (=> d!31325 (= lt!57172 e!72107)))

(declare-fun c!19725 () Bool)

(assert (=> d!31325 (= c!19725 lt!57175)))

(assert (=> d!31325 (= lt!57175 (containsKey!162 (toList!789 (getCurrentListMap!475 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16))) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(assert (=> d!31325 (= (contains!824 (getCurrentListMap!475 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) lt!57174)))

(declare-fun b!110897 () Bool)

(declare-fun lt!57173 () Unit!3382)

(assert (=> b!110897 (= e!72107 lt!57173)))

(assert (=> b!110897 (= lt!57173 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 (getCurrentListMap!475 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16))) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(assert (=> b!110897 (isDefined!111 (getValueByKey!159 (toList!789 (getCurrentListMap!475 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16))) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(declare-fun b!110898 () Bool)

(declare-fun Unit!3428 () Unit!3382)

(assert (=> b!110898 (= e!72107 Unit!3428)))

(declare-fun b!110899 () Bool)

(assert (=> b!110899 (= e!72108 (isDefined!111 (getValueByKey!159 (toList!789 (getCurrentListMap!475 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16))) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355))))))

(assert (= (and d!31325 c!19725) b!110897))

(assert (= (and d!31325 (not c!19725)) b!110898))

(assert (= (and d!31325 (not res!54789)) b!110899))

(assert (=> d!31325 m!124087))

(declare-fun m!125927 () Bool)

(assert (=> d!31325 m!125927))

(assert (=> b!110897 m!124087))

(declare-fun m!125929 () Bool)

(assert (=> b!110897 m!125929))

(assert (=> b!110897 m!124087))

(declare-fun m!125931 () Bool)

(assert (=> b!110897 m!125931))

(assert (=> b!110897 m!125931))

(declare-fun m!125933 () Bool)

(assert (=> b!110897 m!125933))

(assert (=> b!110899 m!124087))

(assert (=> b!110899 m!125931))

(assert (=> b!110899 m!125931))

(assert (=> b!110899 m!125933))

(assert (=> b!110051 d!31325))

(assert (=> b!110051 d!30965))

(declare-fun d!31327 () Bool)

(declare-fun lt!57176 () Bool)

(assert (=> d!31327 (= lt!57176 (select (content!114 (t!5738 (toList!789 lt!56458))) lt!56363))))

(declare-fun e!72110 () Bool)

(assert (=> d!31327 (= lt!57176 e!72110)))

(declare-fun res!54791 () Bool)

(assert (=> d!31327 (=> (not res!54791) (not e!72110))))

(assert (=> d!31327 (= res!54791 ((_ is Cons!1605) (t!5738 (toList!789 lt!56458))))))

(assert (=> d!31327 (= (contains!827 (t!5738 (toList!789 lt!56458)) lt!56363) lt!57176)))

(declare-fun b!110900 () Bool)

(declare-fun e!72109 () Bool)

(assert (=> b!110900 (= e!72110 e!72109)))

(declare-fun res!54790 () Bool)

(assert (=> b!110900 (=> res!54790 e!72109)))

(assert (=> b!110900 (= res!54790 (= (h!2204 (t!5738 (toList!789 lt!56458))) lt!56363))))

(declare-fun b!110901 () Bool)

(assert (=> b!110901 (= e!72109 (contains!827 (t!5738 (t!5738 (toList!789 lt!56458))) lt!56363))))

(assert (= (and d!31327 res!54791) b!110900))

(assert (= (and b!110900 (not res!54790)) b!110901))

(assert (=> d!31327 m!125675))

(declare-fun m!125935 () Bool)

(assert (=> d!31327 m!125935))

(declare-fun m!125937 () Bool)

(assert (=> b!110901 m!125937))

(assert (=> b!110087 d!31327))

(declare-fun d!31329 () Bool)

(declare-fun e!72112 () Bool)

(assert (=> d!31329 e!72112))

(declare-fun res!54792 () Bool)

(assert (=> d!31329 (=> res!54792 e!72112)))

(declare-fun lt!57179 () Bool)

(assert (=> d!31329 (= res!54792 (not lt!57179))))

(declare-fun lt!57180 () Bool)

(assert (=> d!31329 (= lt!57179 lt!57180)))

(declare-fun lt!57177 () Unit!3382)

(declare-fun e!72111 () Unit!3382)

(assert (=> d!31329 (= lt!57177 e!72111)))

(declare-fun c!19726 () Bool)

(assert (=> d!31329 (= c!19726 lt!57180)))

(assert (=> d!31329 (= lt!57180 (containsKey!162 (toList!789 lt!56908) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!31329 (= (contains!824 lt!56908 #b1000000000000000000000000000000000000000000000000000000000000000) lt!57179)))

(declare-fun b!110902 () Bool)

(declare-fun lt!57178 () Unit!3382)

(assert (=> b!110902 (= e!72111 lt!57178)))

(assert (=> b!110902 (= lt!57178 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 lt!56908) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!110902 (isDefined!111 (getValueByKey!159 (toList!789 lt!56908) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110903 () Bool)

(declare-fun Unit!3429 () Unit!3382)

(assert (=> b!110903 (= e!72111 Unit!3429)))

(declare-fun b!110904 () Bool)

(assert (=> b!110904 (= e!72112 (isDefined!111 (getValueByKey!159 (toList!789 lt!56908) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!31329 c!19726) b!110902))

(assert (= (and d!31329 (not c!19726)) b!110903))

(assert (= (and d!31329 (not res!54792)) b!110904))

(declare-fun m!125939 () Bool)

(assert (=> d!31329 m!125939))

(declare-fun m!125941 () Bool)

(assert (=> b!110902 m!125941))

(declare-fun m!125943 () Bool)

(assert (=> b!110902 m!125943))

(assert (=> b!110902 m!125943))

(declare-fun m!125945 () Bool)

(assert (=> b!110902 m!125945))

(assert (=> b!110904 m!125943))

(assert (=> b!110904 m!125943))

(assert (=> b!110904 m!125945))

(assert (=> bm!11752 d!31329))

(declare-fun d!31331 () Bool)

(declare-fun res!54793 () Bool)

(declare-fun e!72113 () Bool)

(assert (=> d!31331 (=> res!54793 e!72113)))

(assert (=> d!31331 (= res!54793 (and ((_ is Cons!1605) (toList!789 lt!56479)) (= (_1!1205 (h!2204 (toList!789 lt!56479))) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!31331 (= (containsKey!162 (toList!789 lt!56479) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!72113)))

(declare-fun b!110905 () Bool)

(declare-fun e!72114 () Bool)

(assert (=> b!110905 (= e!72113 e!72114)))

(declare-fun res!54794 () Bool)

(assert (=> b!110905 (=> (not res!54794) (not e!72114))))

(assert (=> b!110905 (= res!54794 (and (or (not ((_ is Cons!1605) (toList!789 lt!56479))) (bvsle (_1!1205 (h!2204 (toList!789 lt!56479))) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1605) (toList!789 lt!56479)) (bvslt (_1!1205 (h!2204 (toList!789 lt!56479))) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!110906 () Bool)

(assert (=> b!110906 (= e!72114 (containsKey!162 (t!5738 (toList!789 lt!56479)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!31331 (not res!54793)) b!110905))

(assert (= (and b!110905 res!54794) b!110906))

(assert (=> b!110906 m!124267))

(declare-fun m!125947 () Bool)

(assert (=> b!110906 m!125947))

(assert (=> d!31015 d!31331))

(declare-fun d!31333 () Bool)

(declare-fun e!72115 () Bool)

(assert (=> d!31333 e!72115))

(declare-fun res!54796 () Bool)

(assert (=> d!31333 (=> (not res!54796) (not e!72115))))

(declare-fun lt!57184 () ListLongMap!1547)

(assert (=> d!31333 (= res!54796 (contains!824 lt!57184 (_1!1205 (ite (or c!19568 c!19566) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!19458 c!19454) lt!56360 (zeroValue!2497 newMap!16))) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16)))))))))

(declare-fun lt!57183 () List!1609)

(assert (=> d!31333 (= lt!57184 (ListLongMap!1548 lt!57183))))

(declare-fun lt!57182 () Unit!3382)

(declare-fun lt!57181 () Unit!3382)

(assert (=> d!31333 (= lt!57182 lt!57181)))

(assert (=> d!31333 (= (getValueByKey!159 lt!57183 (_1!1205 (ite (or c!19568 c!19566) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!19458 c!19454) lt!56360 (zeroValue!2497 newMap!16))) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16)))))) (Some!164 (_2!1205 (ite (or c!19568 c!19566) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!19458 c!19454) lt!56360 (zeroValue!2497 newMap!16))) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16)))))))))

(assert (=> d!31333 (= lt!57181 (lemmaContainsTupThenGetReturnValue!75 lt!57183 (_1!1205 (ite (or c!19568 c!19566) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!19458 c!19454) lt!56360 (zeroValue!2497 newMap!16))) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16))))) (_2!1205 (ite (or c!19568 c!19566) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!19458 c!19454) lt!56360 (zeroValue!2497 newMap!16))) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16)))))))))

(assert (=> d!31333 (= lt!57183 (insertStrictlySorted!78 (toList!789 (ite c!19568 call!11776 (ite c!19566 call!11779 call!11775))) (_1!1205 (ite (or c!19568 c!19566) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!19458 c!19454) lt!56360 (zeroValue!2497 newMap!16))) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16))))) (_2!1205 (ite (or c!19568 c!19566) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!19458 c!19454) lt!56360 (zeroValue!2497 newMap!16))) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16)))))))))

(assert (=> d!31333 (= (+!144 (ite c!19568 call!11776 (ite c!19566 call!11779 call!11775)) (ite (or c!19568 c!19566) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!19458 c!19454) lt!56360 (zeroValue!2497 newMap!16))) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16))))) lt!57184)))

(declare-fun b!110907 () Bool)

(declare-fun res!54795 () Bool)

(assert (=> b!110907 (=> (not res!54795) (not e!72115))))

(assert (=> b!110907 (= res!54795 (= (getValueByKey!159 (toList!789 lt!57184) (_1!1205 (ite (or c!19568 c!19566) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!19458 c!19454) lt!56360 (zeroValue!2497 newMap!16))) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16)))))) (Some!164 (_2!1205 (ite (or c!19568 c!19566) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!19458 c!19454) lt!56360 (zeroValue!2497 newMap!16))) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16))))))))))

(declare-fun b!110908 () Bool)

(assert (=> b!110908 (= e!72115 (contains!827 (toList!789 lt!57184) (ite (or c!19568 c!19566) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!19458 c!19454) lt!56360 (zeroValue!2497 newMap!16))) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16))))))))

(assert (= (and d!31333 res!54796) b!110907))

(assert (= (and b!110907 res!54795) b!110908))

(declare-fun m!125949 () Bool)

(assert (=> d!31333 m!125949))

(declare-fun m!125951 () Bool)

(assert (=> d!31333 m!125951))

(declare-fun m!125953 () Bool)

(assert (=> d!31333 m!125953))

(declare-fun m!125955 () Bool)

(assert (=> d!31333 m!125955))

(declare-fun m!125957 () Bool)

(assert (=> b!110907 m!125957))

(declare-fun m!125959 () Bool)

(assert (=> b!110908 m!125959))

(assert (=> bm!11775 d!31333))

(declare-fun b!110912 () Bool)

(declare-fun e!72117 () Option!165)

(assert (=> b!110912 (= e!72117 None!163)))

(declare-fun b!110909 () Bool)

(declare-fun e!72116 () Option!165)

(assert (=> b!110909 (= e!72116 (Some!164 (_2!1205 (h!2204 (toList!789 lt!56784)))))))

(declare-fun b!110911 () Bool)

(assert (=> b!110911 (= e!72117 (getValueByKey!159 (t!5738 (toList!789 lt!56784)) (_1!1205 (ite c!19458 (ite c!19454 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))))))

(declare-fun c!19727 () Bool)

(declare-fun d!31335 () Bool)

(assert (=> d!31335 (= c!19727 (and ((_ is Cons!1605) (toList!789 lt!56784)) (= (_1!1205 (h!2204 (toList!789 lt!56784))) (_1!1205 (ite c!19458 (ite c!19454 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))))

(assert (=> d!31335 (= (getValueByKey!159 (toList!789 lt!56784) (_1!1205 (ite c!19458 (ite c!19454 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))) e!72116)))

(declare-fun b!110910 () Bool)

(assert (=> b!110910 (= e!72116 e!72117)))

(declare-fun c!19728 () Bool)

(assert (=> b!110910 (= c!19728 (and ((_ is Cons!1605) (toList!789 lt!56784)) (not (= (_1!1205 (h!2204 (toList!789 lt!56784))) (_1!1205 (ite c!19458 (ite c!19454 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))))))))

(assert (= (and d!31335 c!19727) b!110909))

(assert (= (and d!31335 (not c!19727)) b!110910))

(assert (= (and b!110910 c!19728) b!110911))

(assert (= (and b!110910 (not c!19728)) b!110912))

(declare-fun m!125961 () Bool)

(assert (=> b!110911 m!125961))

(assert (=> b!110102 d!31335))

(declare-fun d!31337 () Bool)

(assert (=> d!31337 (= (get!1356 (getValueByKey!159 (toList!789 (+!144 lt!56536 (tuple2!2389 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))) lt!56538)) (v!2936 (getValueByKey!159 (toList!789 (+!144 lt!56536 (tuple2!2389 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))) lt!56538)))))

(assert (=> d!30957 d!31337))

(declare-fun b!110916 () Bool)

(declare-fun e!72119 () Option!165)

(assert (=> b!110916 (= e!72119 None!163)))

(declare-fun e!72118 () Option!165)

(declare-fun b!110913 () Bool)

(assert (=> b!110913 (= e!72118 (Some!164 (_2!1205 (h!2204 (toList!789 (+!144 lt!56536 (tuple2!2389 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))))))))

(declare-fun b!110915 () Bool)

(assert (=> b!110915 (= e!72119 (getValueByKey!159 (t!5738 (toList!789 (+!144 lt!56536 (tuple2!2389 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))) lt!56538))))

(declare-fun d!31339 () Bool)

(declare-fun c!19729 () Bool)

(assert (=> d!31339 (= c!19729 (and ((_ is Cons!1605) (toList!789 (+!144 lt!56536 (tuple2!2389 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))) (= (_1!1205 (h!2204 (toList!789 (+!144 lt!56536 (tuple2!2389 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))) lt!56538)))))

(assert (=> d!31339 (= (getValueByKey!159 (toList!789 (+!144 lt!56536 (tuple2!2389 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))) lt!56538) e!72118)))

(declare-fun b!110914 () Bool)

(assert (=> b!110914 (= e!72118 e!72119)))

(declare-fun c!19730 () Bool)

(assert (=> b!110914 (= c!19730 (and ((_ is Cons!1605) (toList!789 (+!144 lt!56536 (tuple2!2389 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))) (not (= (_1!1205 (h!2204 (toList!789 (+!144 lt!56536 (tuple2!2389 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))) lt!56538))))))

(assert (= (and d!31339 c!19729) b!110913))

(assert (= (and d!31339 (not c!19729)) b!110914))

(assert (= (and b!110914 c!19730) b!110915))

(assert (= (and b!110914 (not c!19730)) b!110916))

(declare-fun m!125963 () Bool)

(assert (=> b!110915 m!125963))

(assert (=> d!30957 d!31339))

(assert (=> d!30935 d!30937))

(declare-fun d!31341 () Bool)

(declare-fun e!72121 () Bool)

(assert (=> d!31341 e!72121))

(declare-fun res!54797 () Bool)

(assert (=> d!31341 (=> res!54797 e!72121)))

(declare-fun lt!57187 () Bool)

(assert (=> d!31341 (= res!54797 (not lt!57187))))

(declare-fun lt!57188 () Bool)

(assert (=> d!31341 (= lt!57187 lt!57188)))

(declare-fun lt!57185 () Unit!3382)

(declare-fun e!72120 () Unit!3382)

(assert (=> d!31341 (= lt!57185 e!72120)))

(declare-fun c!19731 () Bool)

(assert (=> d!31341 (= c!19731 lt!57188)))

(assert (=> d!31341 (= lt!57188 (containsKey!162 (toList!789 lt!56554) lt!56537))))

(assert (=> d!31341 (= (contains!824 lt!56554 lt!56537) lt!57187)))

(declare-fun b!110917 () Bool)

(declare-fun lt!57186 () Unit!3382)

(assert (=> b!110917 (= e!72120 lt!57186)))

(assert (=> b!110917 (= lt!57186 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 lt!56554) lt!56537))))

(assert (=> b!110917 (isDefined!111 (getValueByKey!159 (toList!789 lt!56554) lt!56537))))

(declare-fun b!110918 () Bool)

(declare-fun Unit!3430 () Unit!3382)

(assert (=> b!110918 (= e!72120 Unit!3430)))

(declare-fun b!110919 () Bool)

(assert (=> b!110919 (= e!72121 (isDefined!111 (getValueByKey!159 (toList!789 lt!56554) lt!56537)))))

(assert (= (and d!31341 c!19731) b!110917))

(assert (= (and d!31341 (not c!19731)) b!110918))

(assert (= (and d!31341 (not res!54797)) b!110919))

(declare-fun m!125965 () Bool)

(assert (=> d!31341 m!125965))

(declare-fun m!125967 () Bool)

(assert (=> b!110917 m!125967))

(assert (=> b!110917 m!124883))

(assert (=> b!110917 m!124883))

(declare-fun m!125969 () Bool)

(assert (=> b!110917 m!125969))

(assert (=> b!110919 m!124883))

(assert (=> b!110919 m!124883))

(assert (=> b!110919 m!125969))

(assert (=> d!30935 d!31341))

(assert (=> d!30935 d!30947))

(declare-fun d!31343 () Bool)

(assert (=> d!31343 (= (apply!100 (+!144 lt!56554 (tuple2!2389 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992))))) lt!56537) (apply!100 lt!56554 lt!56537))))

(assert (=> d!31343 true))

(declare-fun _$34!904 () Unit!3382)

(assert (=> d!31343 (= (choose!697 lt!56554 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992))) lt!56537) _$34!904)))

(declare-fun bs!4562 () Bool)

(assert (= bs!4562 d!31343))

(assert (=> bs!4562 m!124359))

(assert (=> bs!4562 m!124359))

(assert (=> bs!4562 m!124361))

(assert (=> bs!4562 m!124337))

(assert (=> d!30935 d!31343))

(assert (=> d!30935 d!30943))

(declare-fun d!31345 () Bool)

(declare-fun e!72123 () Bool)

(assert (=> d!31345 e!72123))

(declare-fun res!54798 () Bool)

(assert (=> d!31345 (=> res!54798 e!72123)))

(declare-fun lt!57191 () Bool)

(assert (=> d!31345 (= res!54798 (not lt!57191))))

(declare-fun lt!57192 () Bool)

(assert (=> d!31345 (= lt!57191 lt!57192)))

(declare-fun lt!57189 () Unit!3382)

(declare-fun e!72122 () Unit!3382)

(assert (=> d!31345 (= lt!57189 e!72122)))

(declare-fun c!19732 () Bool)

(assert (=> d!31345 (= c!19732 lt!57192)))

(assert (=> d!31345 (= lt!57192 (containsKey!162 (toList!789 lt!56831) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!31345 (= (contains!824 lt!56831 #b1000000000000000000000000000000000000000000000000000000000000000) lt!57191)))

(declare-fun b!110920 () Bool)

(declare-fun lt!57190 () Unit!3382)

(assert (=> b!110920 (= e!72122 lt!57190)))

(assert (=> b!110920 (= lt!57190 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 lt!56831) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!110920 (isDefined!111 (getValueByKey!159 (toList!789 lt!56831) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110921 () Bool)

(declare-fun Unit!3431 () Unit!3382)

(assert (=> b!110921 (= e!72122 Unit!3431)))

(declare-fun b!110922 () Bool)

(assert (=> b!110922 (= e!72123 (isDefined!111 (getValueByKey!159 (toList!789 lt!56831) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!31345 c!19732) b!110920))

(assert (= (and d!31345 (not c!19732)) b!110921))

(assert (= (and d!31345 (not res!54798)) b!110922))

(declare-fun m!125971 () Bool)

(assert (=> d!31345 m!125971))

(declare-fun m!125973 () Bool)

(assert (=> b!110920 m!125973))

(declare-fun m!125975 () Bool)

(assert (=> b!110920 m!125975))

(assert (=> b!110920 m!125975))

(declare-fun m!125977 () Bool)

(assert (=> b!110920 m!125977))

(assert (=> b!110922 m!125975))

(assert (=> b!110922 m!125975))

(assert (=> b!110922 m!125977))

(assert (=> bm!11733 d!31345))

(declare-fun d!31347 () Bool)

(declare-fun e!72125 () Bool)

(assert (=> d!31347 e!72125))

(declare-fun res!54799 () Bool)

(assert (=> d!31347 (=> res!54799 e!72125)))

(declare-fun lt!57195 () Bool)

(assert (=> d!31347 (= res!54799 (not lt!57195))))

(declare-fun lt!57196 () Bool)

(assert (=> d!31347 (= lt!57195 lt!57196)))

(declare-fun lt!57193 () Unit!3382)

(declare-fun e!72124 () Unit!3382)

(assert (=> d!31347 (= lt!57193 e!72124)))

(declare-fun c!19733 () Bool)

(assert (=> d!31347 (= c!19733 lt!57196)))

(assert (=> d!31347 (= lt!57196 (containsKey!162 (toList!789 lt!57005) (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> d!31347 (= (contains!824 lt!57005 (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))) lt!57195)))

(declare-fun b!110923 () Bool)

(declare-fun lt!57194 () Unit!3382)

(assert (=> b!110923 (= e!72124 lt!57194)))

(assert (=> b!110923 (= lt!57194 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 lt!57005) (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> b!110923 (isDefined!111 (getValueByKey!159 (toList!789 lt!57005) (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun b!110924 () Bool)

(declare-fun Unit!3432 () Unit!3382)

(assert (=> b!110924 (= e!72124 Unit!3432)))

(declare-fun b!110925 () Bool)

(assert (=> b!110925 (= e!72125 (isDefined!111 (getValueByKey!159 (toList!789 lt!57005) (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(assert (= (and d!31347 c!19733) b!110923))

(assert (= (and d!31347 (not c!19733)) b!110924))

(assert (= (and d!31347 (not res!54799)) b!110925))

(declare-fun m!125979 () Bool)

(assert (=> d!31347 m!125979))

(declare-fun m!125981 () Bool)

(assert (=> b!110923 m!125981))

(assert (=> b!110923 m!125255))

(assert (=> b!110923 m!125255))

(declare-fun m!125983 () Bool)

(assert (=> b!110923 m!125983))

(assert (=> b!110925 m!125255))

(assert (=> b!110925 m!125255))

(assert (=> b!110925 m!125983))

(assert (=> d!31045 d!31347))

(declare-fun b!110929 () Bool)

(declare-fun e!72127 () Option!165)

(assert (=> b!110929 (= e!72127 None!163)))

(declare-fun b!110926 () Bool)

(declare-fun e!72126 () Option!165)

(assert (=> b!110926 (= e!72126 (Some!164 (_2!1205 (h!2204 lt!57004))))))

(declare-fun b!110928 () Bool)

(assert (=> b!110928 (= e!72127 (getValueByKey!159 (t!5738 lt!57004) (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun d!31349 () Bool)

(declare-fun c!19734 () Bool)

(assert (=> d!31349 (= c!19734 (and ((_ is Cons!1605) lt!57004) (= (_1!1205 (h!2204 lt!57004)) (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> d!31349 (= (getValueByKey!159 lt!57004 (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))) e!72126)))

(declare-fun b!110927 () Bool)

(assert (=> b!110927 (= e!72126 e!72127)))

(declare-fun c!19735 () Bool)

(assert (=> b!110927 (= c!19735 (and ((_ is Cons!1605) lt!57004) (not (= (_1!1205 (h!2204 lt!57004)) (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))))

(assert (= (and d!31349 c!19734) b!110926))

(assert (= (and d!31349 (not c!19734)) b!110927))

(assert (= (and b!110927 c!19735) b!110928))

(assert (= (and b!110927 (not c!19735)) b!110929))

(declare-fun m!125985 () Bool)

(assert (=> b!110928 m!125985))

(assert (=> d!31045 d!31349))

(declare-fun d!31351 () Bool)

(assert (=> d!31351 (= (getValueByKey!159 lt!57004 (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))) (Some!164 (_2!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun lt!57197 () Unit!3382)

(assert (=> d!31351 (= lt!57197 (choose!695 lt!57004 (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))) (_2!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun e!72128 () Bool)

(assert (=> d!31351 e!72128))

(declare-fun res!54800 () Bool)

(assert (=> d!31351 (=> (not res!54800) (not e!72128))))

(assert (=> d!31351 (= res!54800 (isStrictlySorted!298 lt!57004))))

(assert (=> d!31351 (= (lemmaContainsTupThenGetReturnValue!75 lt!57004 (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))) (_2!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))) lt!57197)))

(declare-fun b!110930 () Bool)

(declare-fun res!54801 () Bool)

(assert (=> b!110930 (=> (not res!54801) (not e!72128))))

(assert (=> b!110930 (= res!54801 (containsKey!162 lt!57004 (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun b!110931 () Bool)

(assert (=> b!110931 (= e!72128 (contains!827 lt!57004 (tuple2!2389 (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))) (_2!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(assert (= (and d!31351 res!54800) b!110930))

(assert (= (and b!110930 res!54801) b!110931))

(assert (=> d!31351 m!125249))

(declare-fun m!125987 () Bool)

(assert (=> d!31351 m!125987))

(declare-fun m!125989 () Bool)

(assert (=> d!31351 m!125989))

(declare-fun m!125991 () Bool)

(assert (=> b!110930 m!125991))

(declare-fun m!125993 () Bool)

(assert (=> b!110931 m!125993))

(assert (=> d!31045 d!31351))

(declare-fun b!110932 () Bool)

(declare-fun e!72131 () List!1609)

(assert (=> b!110932 (= e!72131 (insertStrictlySorted!78 (t!5738 (toList!789 lt!56369)) (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))) (_2!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun b!110933 () Bool)

(declare-fun res!54803 () Bool)

(declare-fun e!72133 () Bool)

(assert (=> b!110933 (=> (not res!54803) (not e!72133))))

(declare-fun lt!57198 () List!1609)

(assert (=> b!110933 (= res!54803 (containsKey!162 lt!57198 (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun b!110934 () Bool)

(declare-fun e!72132 () List!1609)

(declare-fun call!11827 () List!1609)

(assert (=> b!110934 (= e!72132 call!11827)))

(declare-fun bm!11823 () Bool)

(declare-fun call!11828 () List!1609)

(declare-fun call!11826 () List!1609)

(assert (=> bm!11823 (= call!11828 call!11826)))

(declare-fun bm!11824 () Bool)

(assert (=> bm!11824 (= call!11827 call!11828)))

(declare-fun b!110935 () Bool)

(assert (=> b!110935 (= e!72132 call!11827)))

(declare-fun bm!11825 () Bool)

(declare-fun c!19738 () Bool)

(assert (=> bm!11825 (= call!11826 ($colon$colon!82 e!72131 (ite c!19738 (h!2204 (toList!789 lt!56369)) (tuple2!2389 (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))) (_2!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))))

(declare-fun c!19739 () Bool)

(assert (=> bm!11825 (= c!19739 c!19738)))

(declare-fun b!110936 () Bool)

(declare-fun e!72130 () List!1609)

(assert (=> b!110936 (= e!72130 call!11828)))

(declare-fun d!31353 () Bool)

(assert (=> d!31353 e!72133))

(declare-fun res!54802 () Bool)

(assert (=> d!31353 (=> (not res!54802) (not e!72133))))

(assert (=> d!31353 (= res!54802 (isStrictlySorted!298 lt!57198))))

(declare-fun e!72129 () List!1609)

(assert (=> d!31353 (= lt!57198 e!72129)))

(assert (=> d!31353 (= c!19738 (and ((_ is Cons!1605) (toList!789 lt!56369)) (bvslt (_1!1205 (h!2204 (toList!789 lt!56369))) (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> d!31353 (isStrictlySorted!298 (toList!789 lt!56369))))

(assert (=> d!31353 (= (insertStrictlySorted!78 (toList!789 lt!56369) (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))) (_2!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))) lt!57198)))

(declare-fun b!110937 () Bool)

(assert (=> b!110937 (= e!72129 call!11826)))

(declare-fun b!110938 () Bool)

(declare-fun c!19736 () Bool)

(assert (=> b!110938 (= c!19736 (and ((_ is Cons!1605) (toList!789 lt!56369)) (bvsgt (_1!1205 (h!2204 (toList!789 lt!56369))) (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> b!110938 (= e!72130 e!72132)))

(declare-fun c!19737 () Bool)

(declare-fun b!110939 () Bool)

(assert (=> b!110939 (= e!72131 (ite c!19737 (t!5738 (toList!789 lt!56369)) (ite c!19736 (Cons!1605 (h!2204 (toList!789 lt!56369)) (t!5738 (toList!789 lt!56369))) Nil!1606)))))

(declare-fun b!110940 () Bool)

(assert (=> b!110940 (= e!72133 (contains!827 lt!57198 (tuple2!2389 (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))) (_2!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(declare-fun b!110941 () Bool)

(assert (=> b!110941 (= e!72129 e!72130)))

(assert (=> b!110941 (= c!19737 (and ((_ is Cons!1605) (toList!789 lt!56369)) (= (_1!1205 (h!2204 (toList!789 lt!56369))) (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(assert (= (and d!31353 c!19738) b!110937))

(assert (= (and d!31353 (not c!19738)) b!110941))

(assert (= (and b!110941 c!19737) b!110936))

(assert (= (and b!110941 (not c!19737)) b!110938))

(assert (= (and b!110938 c!19736) b!110934))

(assert (= (and b!110938 (not c!19736)) b!110935))

(assert (= (or b!110934 b!110935) bm!11824))

(assert (= (or b!110936 bm!11824) bm!11823))

(assert (= (or b!110937 bm!11823) bm!11825))

(assert (= (and bm!11825 c!19739) b!110932))

(assert (= (and bm!11825 (not c!19739)) b!110939))

(assert (= (and d!31353 res!54802) b!110933))

(assert (= (and b!110933 res!54803) b!110940))

(declare-fun m!125995 () Bool)

(assert (=> bm!11825 m!125995))

(declare-fun m!125997 () Bool)

(assert (=> b!110940 m!125997))

(declare-fun m!125999 () Bool)

(assert (=> b!110933 m!125999))

(declare-fun m!126001 () Bool)

(assert (=> d!31353 m!126001))

(assert (=> d!31353 m!125061))

(declare-fun m!126003 () Bool)

(assert (=> b!110932 m!126003))

(assert (=> d!31045 d!31353))

(declare-fun d!31355 () Bool)

(declare-fun res!54804 () Bool)

(declare-fun e!72134 () Bool)

(assert (=> d!31355 (=> (not res!54804) (not e!72134))))

(assert (=> d!31355 (= res!54804 (validMask!0 (mask!6794 (_2!1204 lt!56628))))))

(assert (=> d!31355 (= (simpleValid!76 (_2!1204 lt!56628)) e!72134)))

(declare-fun b!110945 () Bool)

(assert (=> b!110945 (= e!72134 (and (bvsge (extraKeys!2423 (_2!1204 lt!56628)) #b00000000000000000000000000000000) (bvsle (extraKeys!2423 (_2!1204 lt!56628)) #b00000000000000000000000000000011) (bvsge (_vacant!507 (_2!1204 lt!56628)) #b00000000000000000000000000000000)))))

(declare-fun b!110943 () Bool)

(declare-fun res!54806 () Bool)

(assert (=> b!110943 (=> (not res!54806) (not e!72134))))

(assert (=> b!110943 (= res!54806 (bvsge (size!2335 (_2!1204 lt!56628)) (_size!507 (_2!1204 lt!56628))))))

(declare-fun b!110944 () Bool)

(declare-fun res!54805 () Bool)

(assert (=> b!110944 (=> (not res!54805) (not e!72134))))

(assert (=> b!110944 (= res!54805 (= (size!2335 (_2!1204 lt!56628)) (bvadd (_size!507 (_2!1204 lt!56628)) (bvsdiv (bvadd (extraKeys!2423 (_2!1204 lt!56628)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!110942 () Bool)

(declare-fun res!54807 () Bool)

(assert (=> b!110942 (=> (not res!54807) (not e!72134))))

(assert (=> b!110942 (= res!54807 (and (= (size!2330 (_values!2609 (_2!1204 lt!56628))) (bvadd (mask!6794 (_2!1204 lt!56628)) #b00000000000000000000000000000001)) (= (size!2329 (_keys!4340 (_2!1204 lt!56628))) (size!2330 (_values!2609 (_2!1204 lt!56628)))) (bvsge (_size!507 (_2!1204 lt!56628)) #b00000000000000000000000000000000) (bvsle (_size!507 (_2!1204 lt!56628)) (bvadd (mask!6794 (_2!1204 lt!56628)) #b00000000000000000000000000000001))))))

(assert (= (and d!31355 res!54804) b!110942))

(assert (= (and b!110942 res!54807) b!110943))

(assert (= (and b!110943 res!54806) b!110944))

(assert (= (and b!110944 res!54805) b!110945))

(assert (=> d!31355 m!125733))

(declare-fun m!126005 () Bool)

(assert (=> b!110943 m!126005))

(assert (=> b!110944 m!126005))

(assert (=> d!30995 d!31355))

(declare-fun d!31357 () Bool)

(assert (=> d!31357 (= (get!1356 (getValueByKey!159 (toList!789 lt!56536) lt!56538)) (v!2936 (getValueByKey!159 (toList!789 lt!56536) lt!56538)))))

(assert (=> d!30961 d!31357))

(declare-fun b!110949 () Bool)

(declare-fun e!72136 () Option!165)

(assert (=> b!110949 (= e!72136 None!163)))

(declare-fun b!110946 () Bool)

(declare-fun e!72135 () Option!165)

(assert (=> b!110946 (= e!72135 (Some!164 (_2!1205 (h!2204 (toList!789 lt!56536)))))))

(declare-fun b!110948 () Bool)

(assert (=> b!110948 (= e!72136 (getValueByKey!159 (t!5738 (toList!789 lt!56536)) lt!56538))))

(declare-fun d!31359 () Bool)

(declare-fun c!19740 () Bool)

(assert (=> d!31359 (= c!19740 (and ((_ is Cons!1605) (toList!789 lt!56536)) (= (_1!1205 (h!2204 (toList!789 lt!56536))) lt!56538)))))

(assert (=> d!31359 (= (getValueByKey!159 (toList!789 lt!56536) lt!56538) e!72135)))

(declare-fun b!110947 () Bool)

(assert (=> b!110947 (= e!72135 e!72136)))

(declare-fun c!19741 () Bool)

(assert (=> b!110947 (= c!19741 (and ((_ is Cons!1605) (toList!789 lt!56536)) (not (= (_1!1205 (h!2204 (toList!789 lt!56536))) lt!56538))))))

(assert (= (and d!31359 c!19740) b!110946))

(assert (= (and d!31359 (not c!19740)) b!110947))

(assert (= (and b!110947 c!19741) b!110948))

(assert (= (and b!110947 (not c!19741)) b!110949))

(declare-fun m!126007 () Bool)

(assert (=> b!110948 m!126007))

(assert (=> d!30961 d!31359))

(declare-fun d!31361 () Bool)

(declare-fun res!54808 () Bool)

(declare-fun e!72137 () Bool)

(assert (=> d!31361 (=> res!54808 e!72137)))

(assert (=> d!31361 (= res!54808 (and ((_ is Cons!1605) (toList!789 e!71536)) (= (_1!1205 (h!2204 (toList!789 e!71536))) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355))))))

(assert (=> d!31361 (= (containsKey!162 (toList!789 e!71536) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) e!72137)))

(declare-fun b!110950 () Bool)

(declare-fun e!72138 () Bool)

(assert (=> b!110950 (= e!72137 e!72138)))

(declare-fun res!54809 () Bool)

(assert (=> b!110950 (=> (not res!54809) (not e!72138))))

(assert (=> b!110950 (= res!54809 (and (or (not ((_ is Cons!1605) (toList!789 e!71536))) (bvsle (_1!1205 (h!2204 (toList!789 e!71536))) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355))) ((_ is Cons!1605) (toList!789 e!71536)) (bvslt (_1!1205 (h!2204 (toList!789 e!71536))) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355))))))

(declare-fun b!110951 () Bool)

(assert (=> b!110951 (= e!72138 (containsKey!162 (t!5738 (toList!789 e!71536)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(assert (= (and d!31361 (not res!54808)) b!110950))

(assert (= (and b!110950 res!54809) b!110951))

(assert (=> b!110951 m!124087))

(declare-fun m!126009 () Bool)

(assert (=> b!110951 m!126009))

(assert (=> d!30877 d!31361))

(declare-fun b!110955 () Bool)

(declare-fun e!72140 () Option!165)

(assert (=> b!110955 (= e!72140 None!163)))

(declare-fun b!110952 () Bool)

(declare-fun e!72139 () Option!165)

(assert (=> b!110952 (= e!72139 (Some!164 (_2!1205 (h!2204 (t!5738 (toList!789 lt!56454))))))))

(declare-fun b!110954 () Bool)

(assert (=> b!110954 (= e!72140 (getValueByKey!159 (t!5738 (t!5738 (toList!789 lt!56454))) (_1!1205 lt!56370)))))

(declare-fun d!31363 () Bool)

(declare-fun c!19742 () Bool)

(assert (=> d!31363 (= c!19742 (and ((_ is Cons!1605) (t!5738 (toList!789 lt!56454))) (= (_1!1205 (h!2204 (t!5738 (toList!789 lt!56454)))) (_1!1205 lt!56370))))))

(assert (=> d!31363 (= (getValueByKey!159 (t!5738 (toList!789 lt!56454)) (_1!1205 lt!56370)) e!72139)))

(declare-fun b!110953 () Bool)

(assert (=> b!110953 (= e!72139 e!72140)))

(declare-fun c!19743 () Bool)

(assert (=> b!110953 (= c!19743 (and ((_ is Cons!1605) (t!5738 (toList!789 lt!56454))) (not (= (_1!1205 (h!2204 (t!5738 (toList!789 lt!56454)))) (_1!1205 lt!56370)))))))

(assert (= (and d!31363 c!19742) b!110952))

(assert (= (and d!31363 (not c!19742)) b!110953))

(assert (= (and b!110953 c!19743) b!110954))

(assert (= (and b!110953 (not c!19743)) b!110955))

(declare-fun m!126011 () Bool)

(assert (=> b!110954 m!126011))

(assert (=> b!110425 d!31363))

(declare-fun d!31365 () Bool)

(declare-fun e!72142 () Bool)

(assert (=> d!31365 e!72142))

(declare-fun res!54810 () Bool)

(assert (=> d!31365 (=> res!54810 e!72142)))

(declare-fun lt!57201 () Bool)

(assert (=> d!31365 (= res!54810 (not lt!57201))))

(declare-fun lt!57202 () Bool)

(assert (=> d!31365 (= lt!57201 lt!57202)))

(declare-fun lt!57199 () Unit!3382)

(declare-fun e!72141 () Unit!3382)

(assert (=> d!31365 (= lt!57199 e!72141)))

(declare-fun c!19744 () Bool)

(assert (=> d!31365 (= c!19744 lt!57202)))

(assert (=> d!31365 (= lt!57202 (containsKey!162 (toList!789 lt!57013) (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> d!31365 (= (contains!824 lt!57013 (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))) lt!57201)))

(declare-fun b!110956 () Bool)

(declare-fun lt!57200 () Unit!3382)

(assert (=> b!110956 (= e!72141 lt!57200)))

(assert (=> b!110956 (= lt!57200 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 lt!57013) (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> b!110956 (isDefined!111 (getValueByKey!159 (toList!789 lt!57013) (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun b!110957 () Bool)

(declare-fun Unit!3433 () Unit!3382)

(assert (=> b!110957 (= e!72141 Unit!3433)))

(declare-fun b!110958 () Bool)

(assert (=> b!110958 (= e!72142 (isDefined!111 (getValueByKey!159 (toList!789 lt!57013) (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(assert (= (and d!31365 c!19744) b!110956))

(assert (= (and d!31365 (not c!19744)) b!110957))

(assert (= (and d!31365 (not res!54810)) b!110958))

(declare-fun m!126013 () Bool)

(assert (=> d!31365 m!126013))

(declare-fun m!126015 () Bool)

(assert (=> b!110956 m!126015))

(assert (=> b!110956 m!125279))

(assert (=> b!110956 m!125279))

(declare-fun m!126017 () Bool)

(assert (=> b!110956 m!126017))

(assert (=> b!110958 m!125279))

(assert (=> b!110958 m!125279))

(assert (=> b!110958 m!126017))

(assert (=> d!31051 d!31365))

(declare-fun b!110962 () Bool)

(declare-fun e!72144 () Option!165)

(assert (=> b!110962 (= e!72144 None!163)))

(declare-fun b!110959 () Bool)

(declare-fun e!72143 () Option!165)

(assert (=> b!110959 (= e!72143 (Some!164 (_2!1205 (h!2204 lt!57012))))))

(declare-fun b!110961 () Bool)

(assert (=> b!110961 (= e!72144 (getValueByKey!159 (t!5738 lt!57012) (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun d!31367 () Bool)

(declare-fun c!19745 () Bool)

(assert (=> d!31367 (= c!19745 (and ((_ is Cons!1605) lt!57012) (= (_1!1205 (h!2204 lt!57012)) (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> d!31367 (= (getValueByKey!159 lt!57012 (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))) e!72143)))

(declare-fun b!110960 () Bool)

(assert (=> b!110960 (= e!72143 e!72144)))

(declare-fun c!19746 () Bool)

(assert (=> b!110960 (= c!19746 (and ((_ is Cons!1605) lt!57012) (not (= (_1!1205 (h!2204 lt!57012)) (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))))

(assert (= (and d!31367 c!19745) b!110959))

(assert (= (and d!31367 (not c!19745)) b!110960))

(assert (= (and b!110960 c!19746) b!110961))

(assert (= (and b!110960 (not c!19746)) b!110962))

(declare-fun m!126019 () Bool)

(assert (=> b!110961 m!126019))

(assert (=> d!31051 d!31367))

(declare-fun d!31369 () Bool)

(assert (=> d!31369 (= (getValueByKey!159 lt!57012 (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))) (Some!164 (_2!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun lt!57203 () Unit!3382)

(assert (=> d!31369 (= lt!57203 (choose!695 lt!57012 (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))) (_2!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun e!72145 () Bool)

(assert (=> d!31369 e!72145))

(declare-fun res!54811 () Bool)

(assert (=> d!31369 (=> (not res!54811) (not e!72145))))

(assert (=> d!31369 (= res!54811 (isStrictlySorted!298 lt!57012))))

(assert (=> d!31369 (= (lemmaContainsTupThenGetReturnValue!75 lt!57012 (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))) (_2!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))) lt!57203)))

(declare-fun b!110963 () Bool)

(declare-fun res!54812 () Bool)

(assert (=> b!110963 (=> (not res!54812) (not e!72145))))

(assert (=> b!110963 (= res!54812 (containsKey!162 lt!57012 (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun b!110964 () Bool)

(assert (=> b!110964 (= e!72145 (contains!827 lt!57012 (tuple2!2389 (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))) (_2!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(assert (= (and d!31369 res!54811) b!110963))

(assert (= (and b!110963 res!54812) b!110964))

(assert (=> d!31369 m!125273))

(declare-fun m!126021 () Bool)

(assert (=> d!31369 m!126021))

(declare-fun m!126023 () Bool)

(assert (=> d!31369 m!126023))

(declare-fun m!126025 () Bool)

(assert (=> b!110963 m!126025))

(declare-fun m!126027 () Bool)

(assert (=> b!110964 m!126027))

(assert (=> d!31051 d!31369))

(declare-fun e!72148 () List!1609)

(declare-fun b!110965 () Bool)

(assert (=> b!110965 (= e!72148 (insertStrictlySorted!78 (t!5738 (toList!789 (+!144 lt!56369 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))) (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))) (_2!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun b!110966 () Bool)

(declare-fun res!54814 () Bool)

(declare-fun e!72150 () Bool)

(assert (=> b!110966 (=> (not res!54814) (not e!72150))))

(declare-fun lt!57204 () List!1609)

(assert (=> b!110966 (= res!54814 (containsKey!162 lt!57204 (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun b!110967 () Bool)

(declare-fun e!72149 () List!1609)

(declare-fun call!11830 () List!1609)

(assert (=> b!110967 (= e!72149 call!11830)))

(declare-fun bm!11826 () Bool)

(declare-fun call!11831 () List!1609)

(declare-fun call!11829 () List!1609)

(assert (=> bm!11826 (= call!11831 call!11829)))

(declare-fun bm!11827 () Bool)

(assert (=> bm!11827 (= call!11830 call!11831)))

(declare-fun b!110968 () Bool)

(assert (=> b!110968 (= e!72149 call!11830)))

(declare-fun c!19749 () Bool)

(declare-fun bm!11828 () Bool)

(assert (=> bm!11828 (= call!11829 ($colon$colon!82 e!72148 (ite c!19749 (h!2204 (toList!789 (+!144 lt!56369 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))) (tuple2!2389 (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))) (_2!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))))

(declare-fun c!19750 () Bool)

(assert (=> bm!11828 (= c!19750 c!19749)))

(declare-fun b!110969 () Bool)

(declare-fun e!72147 () List!1609)

(assert (=> b!110969 (= e!72147 call!11831)))

(declare-fun d!31371 () Bool)

(assert (=> d!31371 e!72150))

(declare-fun res!54813 () Bool)

(assert (=> d!31371 (=> (not res!54813) (not e!72150))))

(assert (=> d!31371 (= res!54813 (isStrictlySorted!298 lt!57204))))

(declare-fun e!72146 () List!1609)

(assert (=> d!31371 (= lt!57204 e!72146)))

(assert (=> d!31371 (= c!19749 (and ((_ is Cons!1605) (toList!789 (+!144 lt!56369 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))) (bvslt (_1!1205 (h!2204 (toList!789 (+!144 lt!56369 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))) (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> d!31371 (isStrictlySorted!298 (toList!789 (+!144 lt!56369 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))

(assert (=> d!31371 (= (insertStrictlySorted!78 (toList!789 (+!144 lt!56369 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))) (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))) (_2!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))) lt!57204)))

(declare-fun b!110970 () Bool)

(assert (=> b!110970 (= e!72146 call!11829)))

(declare-fun b!110971 () Bool)

(declare-fun c!19747 () Bool)

(assert (=> b!110971 (= c!19747 (and ((_ is Cons!1605) (toList!789 (+!144 lt!56369 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))) (bvsgt (_1!1205 (h!2204 (toList!789 (+!144 lt!56369 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))) (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> b!110971 (= e!72147 e!72149)))

(declare-fun c!19748 () Bool)

(declare-fun b!110972 () Bool)

(assert (=> b!110972 (= e!72148 (ite c!19748 (t!5738 (toList!789 (+!144 lt!56369 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))) (ite c!19747 (Cons!1605 (h!2204 (toList!789 (+!144 lt!56369 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))) (t!5738 (toList!789 (+!144 lt!56369 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))) Nil!1606)))))

(declare-fun b!110973 () Bool)

(assert (=> b!110973 (= e!72150 (contains!827 lt!57204 (tuple2!2389 (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))) (_2!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(declare-fun b!110974 () Bool)

(assert (=> b!110974 (= e!72146 e!72147)))

(assert (=> b!110974 (= c!19748 (and ((_ is Cons!1605) (toList!789 (+!144 lt!56369 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))) (= (_1!1205 (h!2204 (toList!789 (+!144 lt!56369 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))) (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(assert (= (and d!31371 c!19749) b!110970))

(assert (= (and d!31371 (not c!19749)) b!110974))

(assert (= (and b!110974 c!19748) b!110969))

(assert (= (and b!110974 (not c!19748)) b!110971))

(assert (= (and b!110971 c!19747) b!110967))

(assert (= (and b!110971 (not c!19747)) b!110968))

(assert (= (or b!110967 b!110968) bm!11827))

(assert (= (or b!110969 bm!11827) bm!11826))

(assert (= (or b!110970 bm!11826) bm!11828))

(assert (= (and bm!11828 c!19750) b!110965))

(assert (= (and bm!11828 (not c!19750)) b!110972))

(assert (= (and d!31371 res!54813) b!110966))

(assert (= (and b!110966 res!54814) b!110973))

(declare-fun m!126029 () Bool)

(assert (=> bm!11828 m!126029))

(declare-fun m!126031 () Bool)

(assert (=> b!110973 m!126031))

(declare-fun m!126033 () Bool)

(assert (=> b!110966 m!126033))

(declare-fun m!126035 () Bool)

(assert (=> d!31371 m!126035))

(declare-fun m!126037 () Bool)

(assert (=> d!31371 m!126037))

(declare-fun m!126039 () Bool)

(assert (=> b!110965 m!126039))

(assert (=> d!31051 d!31371))

(declare-fun b!110975 () Bool)

(declare-fun e!72152 () (_ BitVec 32))

(declare-fun call!11832 () (_ BitVec 32))

(assert (=> b!110975 (= e!72152 (bvadd #b00000000000000000000000000000001 call!11832))))

(declare-fun d!31373 () Bool)

(declare-fun lt!57205 () (_ BitVec 32))

(assert (=> d!31373 (and (bvsge lt!57205 #b00000000000000000000000000000000) (bvsle lt!57205 (bvsub (size!2329 (_keys!4340 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun e!72151 () (_ BitVec 32))

(assert (=> d!31373 (= lt!57205 e!72151)))

(declare-fun c!19752 () Bool)

(assert (=> d!31373 (= c!19752 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2329 (_keys!4340 newMap!16))))))

(assert (=> d!31373 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2329 (_keys!4340 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2329 (_keys!4340 newMap!16)) (size!2329 (_keys!4340 newMap!16))))))

(assert (=> d!31373 (= (arrayCountValidKeys!0 (_keys!4340 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2329 (_keys!4340 newMap!16))) lt!57205)))

(declare-fun b!110976 () Bool)

(assert (=> b!110976 (= e!72151 #b00000000000000000000000000000000)))

(declare-fun b!110977 () Bool)

(assert (=> b!110977 (= e!72152 call!11832)))

(declare-fun bm!11829 () Bool)

(assert (=> bm!11829 (= call!11832 (arrayCountValidKeys!0 (_keys!4340 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2329 (_keys!4340 newMap!16))))))

(declare-fun b!110978 () Bool)

(assert (=> b!110978 (= e!72151 e!72152)))

(declare-fun c!19751 () Bool)

(assert (=> b!110978 (= c!19751 (validKeyInArray!0 (select (arr!2072 (_keys!4340 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!31373 c!19752) b!110976))

(assert (= (and d!31373 (not c!19752)) b!110978))

(assert (= (and b!110978 c!19751) b!110975))

(assert (= (and b!110978 (not c!19751)) b!110977))

(assert (= (or b!110975 b!110977) bm!11829))

(declare-fun m!126041 () Bool)

(assert (=> bm!11829 m!126041))

(declare-fun m!126043 () Bool)

(assert (=> b!110978 m!126043))

(assert (=> b!110978 m!126043))

(declare-fun m!126045 () Bool)

(assert (=> b!110978 m!126045))

(assert (=> bm!11781 d!31373))

(declare-fun b!110982 () Bool)

(declare-fun e!72154 () Option!165)

(assert (=> b!110982 (= e!72154 None!163)))

(declare-fun b!110979 () Bool)

(declare-fun e!72153 () Option!165)

(assert (=> b!110979 (= e!72153 (Some!164 (_2!1205 (h!2204 (t!5738 (toList!789 lt!56487))))))))

(declare-fun b!110981 () Bool)

(assert (=> b!110981 (= e!72154 (getValueByKey!159 (t!5738 (t!5738 (toList!789 lt!56487))) (_1!1205 lt!56370)))))

(declare-fun d!31375 () Bool)

(declare-fun c!19753 () Bool)

(assert (=> d!31375 (= c!19753 (and ((_ is Cons!1605) (t!5738 (toList!789 lt!56487))) (= (_1!1205 (h!2204 (t!5738 (toList!789 lt!56487)))) (_1!1205 lt!56370))))))

(assert (=> d!31375 (= (getValueByKey!159 (t!5738 (toList!789 lt!56487)) (_1!1205 lt!56370)) e!72153)))

(declare-fun b!110980 () Bool)

(assert (=> b!110980 (= e!72153 e!72154)))

(declare-fun c!19754 () Bool)

(assert (=> b!110980 (= c!19754 (and ((_ is Cons!1605) (t!5738 (toList!789 lt!56487))) (not (= (_1!1205 (h!2204 (t!5738 (toList!789 lt!56487)))) (_1!1205 lt!56370)))))))

(assert (= (and d!31375 c!19753) b!110979))

(assert (= (and d!31375 (not c!19753)) b!110980))

(assert (= (and b!110980 c!19754) b!110981))

(assert (= (and b!110980 (not c!19754)) b!110982))

(declare-fun m!126047 () Bool)

(assert (=> b!110981 m!126047))

(assert (=> b!110433 d!31375))

(declare-fun b!110986 () Bool)

(declare-fun e!72156 () Option!165)

(assert (=> b!110986 (= e!72156 None!163)))

(declare-fun b!110983 () Bool)

(declare-fun e!72155 () Option!165)

(assert (=> b!110983 (= e!72155 (Some!164 (_2!1205 (h!2204 (toList!789 lt!56756)))))))

(declare-fun b!110985 () Bool)

(assert (=> b!110985 (= e!72156 (getValueByKey!159 (t!5738 (toList!789 lt!56756)) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun c!19755 () Bool)

(declare-fun d!31377 () Bool)

(assert (=> d!31377 (= c!19755 (and ((_ is Cons!1605) (toList!789 lt!56756)) (= (_1!1205 (h!2204 (toList!789 lt!56756))) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!31377 (= (getValueByKey!159 (toList!789 lt!56756) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!72155)))

(declare-fun b!110984 () Bool)

(assert (=> b!110984 (= e!72155 e!72156)))

(declare-fun c!19756 () Bool)

(assert (=> b!110984 (= c!19756 (and ((_ is Cons!1605) (toList!789 lt!56756)) (not (= (_1!1205 (h!2204 (toList!789 lt!56756))) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!31377 c!19755) b!110983))

(assert (= (and d!31377 (not c!19755)) b!110984))

(assert (= (and b!110984 c!19756) b!110985))

(assert (= (and b!110984 (not c!19756)) b!110986))

(declare-fun m!126049 () Bool)

(assert (=> b!110985 m!126049))

(assert (=> b!110065 d!31377))

(declare-fun d!31379 () Bool)

(declare-fun res!54815 () Bool)

(declare-fun e!72157 () Bool)

(assert (=> d!31379 (=> res!54815 e!72157)))

(assert (=> d!31379 (= res!54815 (and ((_ is Cons!1605) lt!56453) (= (_1!1205 (h!2204 lt!56453)) (_1!1205 lt!56370))))))

(assert (=> d!31379 (= (containsKey!162 lt!56453 (_1!1205 lt!56370)) e!72157)))

(declare-fun b!110987 () Bool)

(declare-fun e!72158 () Bool)

(assert (=> b!110987 (= e!72157 e!72158)))

(declare-fun res!54816 () Bool)

(assert (=> b!110987 (=> (not res!54816) (not e!72158))))

(assert (=> b!110987 (= res!54816 (and (or (not ((_ is Cons!1605) lt!56453)) (bvsle (_1!1205 (h!2204 lt!56453)) (_1!1205 lt!56370))) ((_ is Cons!1605) lt!56453) (bvslt (_1!1205 (h!2204 lt!56453)) (_1!1205 lt!56370))))))

(declare-fun b!110988 () Bool)

(assert (=> b!110988 (= e!72158 (containsKey!162 (t!5738 lt!56453) (_1!1205 lt!56370)))))

(assert (= (and d!31379 (not res!54815)) b!110987))

(assert (= (and b!110987 res!54816) b!110988))

(declare-fun m!126051 () Bool)

(assert (=> b!110988 m!126051))

(assert (=> b!110457 d!31379))

(assert (=> d!30919 d!30917))

(declare-fun d!31381 () Bool)

(assert (=> d!31381 (= (getValueByKey!159 lt!56457 (_1!1205 lt!56363)) (Some!164 (_2!1205 lt!56363)))))

(assert (=> d!31381 true))

(declare-fun _$22!447 () Unit!3382)

(assert (=> d!31381 (= (choose!695 lt!56457 (_1!1205 lt!56363) (_2!1205 lt!56363)) _$22!447)))

(declare-fun bs!4563 () Bool)

(assert (= bs!4563 d!31381))

(assert (=> bs!4563 m!124257))

(assert (=> d!30919 d!31381))

(declare-fun d!31383 () Bool)

(declare-fun res!54817 () Bool)

(declare-fun e!72159 () Bool)

(assert (=> d!31383 (=> res!54817 e!72159)))

(assert (=> d!31383 (= res!54817 (or ((_ is Nil!1606) lt!56457) ((_ is Nil!1606) (t!5738 lt!56457))))))

(assert (=> d!31383 (= (isStrictlySorted!298 lt!56457) e!72159)))

(declare-fun b!110989 () Bool)

(declare-fun e!72160 () Bool)

(assert (=> b!110989 (= e!72159 e!72160)))

(declare-fun res!54818 () Bool)

(assert (=> b!110989 (=> (not res!54818) (not e!72160))))

(assert (=> b!110989 (= res!54818 (bvslt (_1!1205 (h!2204 lt!56457)) (_1!1205 (h!2204 (t!5738 lt!56457)))))))

(declare-fun b!110990 () Bool)

(assert (=> b!110990 (= e!72160 (isStrictlySorted!298 (t!5738 lt!56457)))))

(assert (= (and d!31383 (not res!54817)) b!110989))

(assert (= (and b!110989 res!54818) b!110990))

(declare-fun m!126053 () Bool)

(assert (=> b!110990 m!126053))

(assert (=> d!30919 d!31383))

(declare-fun b!110994 () Bool)

(declare-fun e!72162 () Option!165)

(assert (=> b!110994 (= e!72162 None!163)))

(declare-fun b!110991 () Bool)

(declare-fun e!72161 () Option!165)

(assert (=> b!110991 (= e!72161 (Some!164 (_2!1205 (h!2204 (toList!789 lt!57005)))))))

(declare-fun b!110993 () Bool)

(assert (=> b!110993 (= e!72162 (getValueByKey!159 (t!5738 (toList!789 lt!57005)) (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun d!31385 () Bool)

(declare-fun c!19757 () Bool)

(assert (=> d!31385 (= c!19757 (and ((_ is Cons!1605) (toList!789 lt!57005)) (= (_1!1205 (h!2204 (toList!789 lt!57005))) (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> d!31385 (= (getValueByKey!159 (toList!789 lt!57005) (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))) e!72161)))

(declare-fun b!110992 () Bool)

(assert (=> b!110992 (= e!72161 e!72162)))

(declare-fun c!19758 () Bool)

(assert (=> b!110992 (= c!19758 (and ((_ is Cons!1605) (toList!789 lt!57005)) (not (= (_1!1205 (h!2204 (toList!789 lt!57005))) (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))))

(assert (= (and d!31385 c!19757) b!110991))

(assert (= (and d!31385 (not c!19757)) b!110992))

(assert (= (and b!110992 c!19758) b!110993))

(assert (= (and b!110992 (not c!19758)) b!110994))

(declare-fun m!126055 () Bool)

(assert (=> b!110993 m!126055))

(assert (=> b!110471 d!31385))

(assert (=> b!110305 d!31059))

(declare-fun d!31387 () Bool)

(assert (=> d!31387 (= (apply!100 lt!56975 lt!56958) (get!1356 (getValueByKey!159 (toList!789 lt!56975) lt!56958)))))

(declare-fun bs!4564 () Bool)

(assert (= bs!4564 d!31387))

(declare-fun m!126057 () Bool)

(assert (=> bs!4564 m!126057))

(assert (=> bs!4564 m!126057))

(declare-fun m!126059 () Bool)

(assert (=> bs!4564 m!126059))

(assert (=> b!110396 d!31387))

(declare-fun d!31389 () Bool)

(assert (=> d!31389 (= (apply!100 (+!144 lt!56957 (tuple2!2389 lt!56962 (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16)))) lt!56959) (apply!100 lt!56957 lt!56959))))

(declare-fun lt!57206 () Unit!3382)

(assert (=> d!31389 (= lt!57206 (choose!697 lt!56957 lt!56962 (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16)) lt!56959))))

(declare-fun e!72163 () Bool)

(assert (=> d!31389 e!72163))

(declare-fun res!54819 () Bool)

(assert (=> d!31389 (=> (not res!54819) (not e!72163))))

(assert (=> d!31389 (= res!54819 (contains!824 lt!56957 lt!56959))))

(assert (=> d!31389 (= (addApplyDifferent!76 lt!56957 lt!56962 (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16)) lt!56959) lt!57206)))

(declare-fun b!110995 () Bool)

(assert (=> b!110995 (= e!72163 (not (= lt!56959 lt!56962)))))

(assert (= (and d!31389 res!54819) b!110995))

(assert (=> d!31389 m!125119))

(assert (=> d!31389 m!125119))

(assert (=> d!31389 m!125121))

(assert (=> d!31389 m!125123))

(declare-fun m!126061 () Bool)

(assert (=> d!31389 m!126061))

(declare-fun m!126063 () Bool)

(assert (=> d!31389 m!126063))

(assert (=> b!110396 d!31389))

(declare-fun d!31391 () Bool)

(assert (=> d!31391 (= (apply!100 (+!144 lt!56965 (tuple2!2389 lt!56976 (ite (and c!19458 c!19454) lt!56360 (zeroValue!2497 newMap!16)))) lt!56971) (get!1356 (getValueByKey!159 (toList!789 (+!144 lt!56965 (tuple2!2389 lt!56976 (ite (and c!19458 c!19454) lt!56360 (zeroValue!2497 newMap!16))))) lt!56971)))))

(declare-fun bs!4565 () Bool)

(assert (= bs!4565 d!31391))

(declare-fun m!126065 () Bool)

(assert (=> bs!4565 m!126065))

(assert (=> bs!4565 m!126065))

(declare-fun m!126067 () Bool)

(assert (=> bs!4565 m!126067))

(assert (=> b!110396 d!31391))

(declare-fun d!31393 () Bool)

(assert (=> d!31393 (= (apply!100 (+!144 lt!56975 (tuple2!2389 lt!56964 (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16)))) lt!56958) (get!1356 (getValueByKey!159 (toList!789 (+!144 lt!56975 (tuple2!2389 lt!56964 (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16))))) lt!56958)))))

(declare-fun bs!4566 () Bool)

(assert (= bs!4566 d!31393))

(declare-fun m!126069 () Bool)

(assert (=> bs!4566 m!126069))

(assert (=> bs!4566 m!126069))

(declare-fun m!126071 () Bool)

(assert (=> bs!4566 m!126071))

(assert (=> b!110396 d!31393))

(declare-fun d!31395 () Bool)

(assert (=> d!31395 (= (apply!100 lt!56957 lt!56959) (get!1356 (getValueByKey!159 (toList!789 lt!56957) lt!56959)))))

(declare-fun bs!4567 () Bool)

(assert (= bs!4567 d!31395))

(declare-fun m!126073 () Bool)

(assert (=> bs!4567 m!126073))

(assert (=> bs!4567 m!126073))

(declare-fun m!126075 () Bool)

(assert (=> bs!4567 m!126075))

(assert (=> b!110396 d!31395))

(declare-fun d!31397 () Bool)

(assert (=> d!31397 (contains!824 (+!144 lt!56967 (tuple2!2389 lt!56974 (ite (and c!19458 c!19454) lt!56360 (zeroValue!2497 newMap!16)))) lt!56969)))

(declare-fun lt!57207 () Unit!3382)

(assert (=> d!31397 (= lt!57207 (choose!698 lt!56967 lt!56974 (ite (and c!19458 c!19454) lt!56360 (zeroValue!2497 newMap!16)) lt!56969))))

(assert (=> d!31397 (contains!824 lt!56967 lt!56969)))

(assert (=> d!31397 (= (addStillContains!76 lt!56967 lt!56974 (ite (and c!19458 c!19454) lt!56360 (zeroValue!2497 newMap!16)) lt!56969) lt!57207)))

(declare-fun bs!4568 () Bool)

(assert (= bs!4568 d!31397))

(assert (=> bs!4568 m!125115))

(assert (=> bs!4568 m!125115))

(assert (=> bs!4568 m!125117))

(declare-fun m!126077 () Bool)

(assert (=> bs!4568 m!126077))

(declare-fun m!126079 () Bool)

(assert (=> bs!4568 m!126079))

(assert (=> b!110396 d!31397))

(declare-fun d!31399 () Bool)

(declare-fun e!72164 () Bool)

(assert (=> d!31399 e!72164))

(declare-fun res!54821 () Bool)

(assert (=> d!31399 (=> (not res!54821) (not e!72164))))

(declare-fun lt!57211 () ListLongMap!1547)

(assert (=> d!31399 (= res!54821 (contains!824 lt!57211 (_1!1205 (tuple2!2389 lt!56962 (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16))))))))

(declare-fun lt!57210 () List!1609)

(assert (=> d!31399 (= lt!57211 (ListLongMap!1548 lt!57210))))

(declare-fun lt!57209 () Unit!3382)

(declare-fun lt!57208 () Unit!3382)

(assert (=> d!31399 (= lt!57209 lt!57208)))

(assert (=> d!31399 (= (getValueByKey!159 lt!57210 (_1!1205 (tuple2!2389 lt!56962 (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16))))) (Some!164 (_2!1205 (tuple2!2389 lt!56962 (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16))))))))

(assert (=> d!31399 (= lt!57208 (lemmaContainsTupThenGetReturnValue!75 lt!57210 (_1!1205 (tuple2!2389 lt!56962 (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16)))) (_2!1205 (tuple2!2389 lt!56962 (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16))))))))

(assert (=> d!31399 (= lt!57210 (insertStrictlySorted!78 (toList!789 lt!56957) (_1!1205 (tuple2!2389 lt!56962 (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16)))) (_2!1205 (tuple2!2389 lt!56962 (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16))))))))

(assert (=> d!31399 (= (+!144 lt!56957 (tuple2!2389 lt!56962 (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16)))) lt!57211)))

(declare-fun b!110996 () Bool)

(declare-fun res!54820 () Bool)

(assert (=> b!110996 (=> (not res!54820) (not e!72164))))

(assert (=> b!110996 (= res!54820 (= (getValueByKey!159 (toList!789 lt!57211) (_1!1205 (tuple2!2389 lt!56962 (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16))))) (Some!164 (_2!1205 (tuple2!2389 lt!56962 (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16)))))))))

(declare-fun b!110997 () Bool)

(assert (=> b!110997 (= e!72164 (contains!827 (toList!789 lt!57211) (tuple2!2389 lt!56962 (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16)))))))

(assert (= (and d!31399 res!54821) b!110996))

(assert (= (and b!110996 res!54820) b!110997))

(declare-fun m!126081 () Bool)

(assert (=> d!31399 m!126081))

(declare-fun m!126083 () Bool)

(assert (=> d!31399 m!126083))

(declare-fun m!126085 () Bool)

(assert (=> d!31399 m!126085))

(declare-fun m!126087 () Bool)

(assert (=> d!31399 m!126087))

(declare-fun m!126089 () Bool)

(assert (=> b!110996 m!126089))

(declare-fun m!126091 () Bool)

(assert (=> b!110997 m!126091))

(assert (=> b!110396 d!31399))

(declare-fun d!31401 () Bool)

(assert (=> d!31401 (= (apply!100 (+!144 lt!56975 (tuple2!2389 lt!56964 (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16)))) lt!56958) (apply!100 lt!56975 lt!56958))))

(declare-fun lt!57212 () Unit!3382)

(assert (=> d!31401 (= lt!57212 (choose!697 lt!56975 lt!56964 (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16)) lt!56958))))

(declare-fun e!72165 () Bool)

(assert (=> d!31401 e!72165))

(declare-fun res!54822 () Bool)

(assert (=> d!31401 (=> (not res!54822) (not e!72165))))

(assert (=> d!31401 (= res!54822 (contains!824 lt!56975 lt!56958))))

(assert (=> d!31401 (= (addApplyDifferent!76 lt!56975 lt!56964 (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16)) lt!56958) lt!57212)))

(declare-fun b!110998 () Bool)

(assert (=> b!110998 (= e!72165 (not (= lt!56958 lt!56964)))))

(assert (= (and d!31401 res!54822) b!110998))

(assert (=> d!31401 m!125133))

(assert (=> d!31401 m!125133))

(assert (=> d!31401 m!125135))

(assert (=> d!31401 m!125109))

(declare-fun m!126093 () Bool)

(assert (=> d!31401 m!126093))

(declare-fun m!126095 () Bool)

(assert (=> d!31401 m!126095))

(assert (=> b!110396 d!31401))

(declare-fun d!31403 () Bool)

(declare-fun e!72167 () Bool)

(assert (=> d!31403 e!72167))

(declare-fun res!54823 () Bool)

(assert (=> d!31403 (=> res!54823 e!72167)))

(declare-fun lt!57215 () Bool)

(assert (=> d!31403 (= res!54823 (not lt!57215))))

(declare-fun lt!57216 () Bool)

(assert (=> d!31403 (= lt!57215 lt!57216)))

(declare-fun lt!57213 () Unit!3382)

(declare-fun e!72166 () Unit!3382)

(assert (=> d!31403 (= lt!57213 e!72166)))

(declare-fun c!19759 () Bool)

(assert (=> d!31403 (= c!19759 lt!57216)))

(assert (=> d!31403 (= lt!57216 (containsKey!162 (toList!789 (+!144 lt!56967 (tuple2!2389 lt!56974 (ite (and c!19458 c!19454) lt!56360 (zeroValue!2497 newMap!16))))) lt!56969))))

(assert (=> d!31403 (= (contains!824 (+!144 lt!56967 (tuple2!2389 lt!56974 (ite (and c!19458 c!19454) lt!56360 (zeroValue!2497 newMap!16)))) lt!56969) lt!57215)))

(declare-fun b!110999 () Bool)

(declare-fun lt!57214 () Unit!3382)

(assert (=> b!110999 (= e!72166 lt!57214)))

(assert (=> b!110999 (= lt!57214 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 (+!144 lt!56967 (tuple2!2389 lt!56974 (ite (and c!19458 c!19454) lt!56360 (zeroValue!2497 newMap!16))))) lt!56969))))

(assert (=> b!110999 (isDefined!111 (getValueByKey!159 (toList!789 (+!144 lt!56967 (tuple2!2389 lt!56974 (ite (and c!19458 c!19454) lt!56360 (zeroValue!2497 newMap!16))))) lt!56969))))

(declare-fun b!111000 () Bool)

(declare-fun Unit!3434 () Unit!3382)

(assert (=> b!111000 (= e!72166 Unit!3434)))

(declare-fun b!111001 () Bool)

(assert (=> b!111001 (= e!72167 (isDefined!111 (getValueByKey!159 (toList!789 (+!144 lt!56967 (tuple2!2389 lt!56974 (ite (and c!19458 c!19454) lt!56360 (zeroValue!2497 newMap!16))))) lt!56969)))))

(assert (= (and d!31403 c!19759) b!110999))

(assert (= (and d!31403 (not c!19759)) b!111000))

(assert (= (and d!31403 (not res!54823)) b!111001))

(declare-fun m!126097 () Bool)

(assert (=> d!31403 m!126097))

(declare-fun m!126099 () Bool)

(assert (=> b!110999 m!126099))

(declare-fun m!126101 () Bool)

(assert (=> b!110999 m!126101))

(assert (=> b!110999 m!126101))

(declare-fun m!126103 () Bool)

(assert (=> b!110999 m!126103))

(assert (=> b!111001 m!126101))

(assert (=> b!111001 m!126101))

(assert (=> b!111001 m!126103))

(assert (=> b!110396 d!31403))

(declare-fun d!31405 () Bool)

(assert (=> d!31405 (= (apply!100 lt!56965 lt!56971) (get!1356 (getValueByKey!159 (toList!789 lt!56965) lt!56971)))))

(declare-fun bs!4569 () Bool)

(assert (= bs!4569 d!31405))

(declare-fun m!126105 () Bool)

(assert (=> bs!4569 m!126105))

(assert (=> bs!4569 m!126105))

(declare-fun m!126107 () Bool)

(assert (=> bs!4569 m!126107))

(assert (=> b!110396 d!31405))

(declare-fun d!31407 () Bool)

(declare-fun e!72168 () Bool)

(assert (=> d!31407 e!72168))

(declare-fun res!54825 () Bool)

(assert (=> d!31407 (=> (not res!54825) (not e!72168))))

(declare-fun lt!57220 () ListLongMap!1547)

(assert (=> d!31407 (= res!54825 (contains!824 lt!57220 (_1!1205 (tuple2!2389 lt!56974 (ite (and c!19458 c!19454) lt!56360 (zeroValue!2497 newMap!16))))))))

(declare-fun lt!57219 () List!1609)

(assert (=> d!31407 (= lt!57220 (ListLongMap!1548 lt!57219))))

(declare-fun lt!57218 () Unit!3382)

(declare-fun lt!57217 () Unit!3382)

(assert (=> d!31407 (= lt!57218 lt!57217)))

(assert (=> d!31407 (= (getValueByKey!159 lt!57219 (_1!1205 (tuple2!2389 lt!56974 (ite (and c!19458 c!19454) lt!56360 (zeroValue!2497 newMap!16))))) (Some!164 (_2!1205 (tuple2!2389 lt!56974 (ite (and c!19458 c!19454) lt!56360 (zeroValue!2497 newMap!16))))))))

(assert (=> d!31407 (= lt!57217 (lemmaContainsTupThenGetReturnValue!75 lt!57219 (_1!1205 (tuple2!2389 lt!56974 (ite (and c!19458 c!19454) lt!56360 (zeroValue!2497 newMap!16)))) (_2!1205 (tuple2!2389 lt!56974 (ite (and c!19458 c!19454) lt!56360 (zeroValue!2497 newMap!16))))))))

(assert (=> d!31407 (= lt!57219 (insertStrictlySorted!78 (toList!789 lt!56967) (_1!1205 (tuple2!2389 lt!56974 (ite (and c!19458 c!19454) lt!56360 (zeroValue!2497 newMap!16)))) (_2!1205 (tuple2!2389 lt!56974 (ite (and c!19458 c!19454) lt!56360 (zeroValue!2497 newMap!16))))))))

(assert (=> d!31407 (= (+!144 lt!56967 (tuple2!2389 lt!56974 (ite (and c!19458 c!19454) lt!56360 (zeroValue!2497 newMap!16)))) lt!57220)))

(declare-fun b!111002 () Bool)

(declare-fun res!54824 () Bool)

(assert (=> b!111002 (=> (not res!54824) (not e!72168))))

(assert (=> b!111002 (= res!54824 (= (getValueByKey!159 (toList!789 lt!57220) (_1!1205 (tuple2!2389 lt!56974 (ite (and c!19458 c!19454) lt!56360 (zeroValue!2497 newMap!16))))) (Some!164 (_2!1205 (tuple2!2389 lt!56974 (ite (and c!19458 c!19454) lt!56360 (zeroValue!2497 newMap!16)))))))))

(declare-fun b!111003 () Bool)

(assert (=> b!111003 (= e!72168 (contains!827 (toList!789 lt!57220) (tuple2!2389 lt!56974 (ite (and c!19458 c!19454) lt!56360 (zeroValue!2497 newMap!16)))))))

(assert (= (and d!31407 res!54825) b!111002))

(assert (= (and b!111002 res!54824) b!111003))

(declare-fun m!126109 () Bool)

(assert (=> d!31407 m!126109))

(declare-fun m!126111 () Bool)

(assert (=> d!31407 m!126111))

(declare-fun m!126113 () Bool)

(assert (=> d!31407 m!126113))

(declare-fun m!126115 () Bool)

(assert (=> d!31407 m!126115))

(declare-fun m!126117 () Bool)

(assert (=> b!111002 m!126117))

(declare-fun m!126119 () Bool)

(assert (=> b!111003 m!126119))

(assert (=> b!110396 d!31407))

(declare-fun d!31409 () Bool)

(assert (=> d!31409 (= (apply!100 (+!144 lt!56957 (tuple2!2389 lt!56962 (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16)))) lt!56959) (get!1356 (getValueByKey!159 (toList!789 (+!144 lt!56957 (tuple2!2389 lt!56962 (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16))))) lt!56959)))))

(declare-fun bs!4570 () Bool)

(assert (= bs!4570 d!31409))

(declare-fun m!126121 () Bool)

(assert (=> bs!4570 m!126121))

(assert (=> bs!4570 m!126121))

(declare-fun m!126123 () Bool)

(assert (=> bs!4570 m!126123))

(assert (=> b!110396 d!31409))

(declare-fun d!31411 () Bool)

(declare-fun e!72169 () Bool)

(assert (=> d!31411 e!72169))

(declare-fun res!54827 () Bool)

(assert (=> d!31411 (=> (not res!54827) (not e!72169))))

(declare-fun lt!57224 () ListLongMap!1547)

(assert (=> d!31411 (= res!54827 (contains!824 lt!57224 (_1!1205 (tuple2!2389 lt!56964 (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16))))))))

(declare-fun lt!57223 () List!1609)

(assert (=> d!31411 (= lt!57224 (ListLongMap!1548 lt!57223))))

(declare-fun lt!57222 () Unit!3382)

(declare-fun lt!57221 () Unit!3382)

(assert (=> d!31411 (= lt!57222 lt!57221)))

(assert (=> d!31411 (= (getValueByKey!159 lt!57223 (_1!1205 (tuple2!2389 lt!56964 (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16))))) (Some!164 (_2!1205 (tuple2!2389 lt!56964 (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16))))))))

(assert (=> d!31411 (= lt!57221 (lemmaContainsTupThenGetReturnValue!75 lt!57223 (_1!1205 (tuple2!2389 lt!56964 (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16)))) (_2!1205 (tuple2!2389 lt!56964 (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16))))))))

(assert (=> d!31411 (= lt!57223 (insertStrictlySorted!78 (toList!789 lt!56975) (_1!1205 (tuple2!2389 lt!56964 (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16)))) (_2!1205 (tuple2!2389 lt!56964 (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16))))))))

(assert (=> d!31411 (= (+!144 lt!56975 (tuple2!2389 lt!56964 (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16)))) lt!57224)))

(declare-fun b!111004 () Bool)

(declare-fun res!54826 () Bool)

(assert (=> b!111004 (=> (not res!54826) (not e!72169))))

(assert (=> b!111004 (= res!54826 (= (getValueByKey!159 (toList!789 lt!57224) (_1!1205 (tuple2!2389 lt!56964 (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16))))) (Some!164 (_2!1205 (tuple2!2389 lt!56964 (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16)))))))))

(declare-fun b!111005 () Bool)

(assert (=> b!111005 (= e!72169 (contains!827 (toList!789 lt!57224) (tuple2!2389 lt!56964 (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16)))))))

(assert (= (and d!31411 res!54827) b!111004))

(assert (= (and b!111004 res!54826) b!111005))

(declare-fun m!126125 () Bool)

(assert (=> d!31411 m!126125))

(declare-fun m!126127 () Bool)

(assert (=> d!31411 m!126127))

(declare-fun m!126129 () Bool)

(assert (=> d!31411 m!126129))

(declare-fun m!126131 () Bool)

(assert (=> d!31411 m!126131))

(declare-fun m!126133 () Bool)

(assert (=> b!111004 m!126133))

(declare-fun m!126135 () Bool)

(assert (=> b!111005 m!126135))

(assert (=> b!110396 d!31411))

(declare-fun d!31413 () Bool)

(declare-fun e!72170 () Bool)

(assert (=> d!31413 e!72170))

(declare-fun res!54829 () Bool)

(assert (=> d!31413 (=> (not res!54829) (not e!72170))))

(declare-fun lt!57228 () ListLongMap!1547)

(assert (=> d!31413 (= res!54829 (contains!824 lt!57228 (_1!1205 (tuple2!2389 lt!56976 (ite (and c!19458 c!19454) lt!56360 (zeroValue!2497 newMap!16))))))))

(declare-fun lt!57227 () List!1609)

(assert (=> d!31413 (= lt!57228 (ListLongMap!1548 lt!57227))))

(declare-fun lt!57226 () Unit!3382)

(declare-fun lt!57225 () Unit!3382)

(assert (=> d!31413 (= lt!57226 lt!57225)))

(assert (=> d!31413 (= (getValueByKey!159 lt!57227 (_1!1205 (tuple2!2389 lt!56976 (ite (and c!19458 c!19454) lt!56360 (zeroValue!2497 newMap!16))))) (Some!164 (_2!1205 (tuple2!2389 lt!56976 (ite (and c!19458 c!19454) lt!56360 (zeroValue!2497 newMap!16))))))))

(assert (=> d!31413 (= lt!57225 (lemmaContainsTupThenGetReturnValue!75 lt!57227 (_1!1205 (tuple2!2389 lt!56976 (ite (and c!19458 c!19454) lt!56360 (zeroValue!2497 newMap!16)))) (_2!1205 (tuple2!2389 lt!56976 (ite (and c!19458 c!19454) lt!56360 (zeroValue!2497 newMap!16))))))))

(assert (=> d!31413 (= lt!57227 (insertStrictlySorted!78 (toList!789 lt!56965) (_1!1205 (tuple2!2389 lt!56976 (ite (and c!19458 c!19454) lt!56360 (zeroValue!2497 newMap!16)))) (_2!1205 (tuple2!2389 lt!56976 (ite (and c!19458 c!19454) lt!56360 (zeroValue!2497 newMap!16))))))))

(assert (=> d!31413 (= (+!144 lt!56965 (tuple2!2389 lt!56976 (ite (and c!19458 c!19454) lt!56360 (zeroValue!2497 newMap!16)))) lt!57228)))

(declare-fun b!111006 () Bool)

(declare-fun res!54828 () Bool)

(assert (=> b!111006 (=> (not res!54828) (not e!72170))))

(assert (=> b!111006 (= res!54828 (= (getValueByKey!159 (toList!789 lt!57228) (_1!1205 (tuple2!2389 lt!56976 (ite (and c!19458 c!19454) lt!56360 (zeroValue!2497 newMap!16))))) (Some!164 (_2!1205 (tuple2!2389 lt!56976 (ite (and c!19458 c!19454) lt!56360 (zeroValue!2497 newMap!16)))))))))

(declare-fun b!111007 () Bool)

(assert (=> b!111007 (= e!72170 (contains!827 (toList!789 lt!57228) (tuple2!2389 lt!56976 (ite (and c!19458 c!19454) lt!56360 (zeroValue!2497 newMap!16)))))))

(assert (= (and d!31413 res!54829) b!111006))

(assert (= (and b!111006 res!54828) b!111007))

(declare-fun m!126137 () Bool)

(assert (=> d!31413 m!126137))

(declare-fun m!126139 () Bool)

(assert (=> d!31413 m!126139))

(declare-fun m!126141 () Bool)

(assert (=> d!31413 m!126141))

(declare-fun m!126143 () Bool)

(assert (=> d!31413 m!126143))

(declare-fun m!126145 () Bool)

(assert (=> b!111006 m!126145))

(declare-fun m!126147 () Bool)

(assert (=> b!111007 m!126147))

(assert (=> b!110396 d!31413))

(declare-fun b!111008 () Bool)

(declare-fun e!72175 () ListLongMap!1547)

(declare-fun call!11833 () ListLongMap!1547)

(assert (=> b!111008 (= e!72175 call!11833)))

(declare-fun d!31415 () Bool)

(declare-fun e!72172 () Bool)

(assert (=> d!31415 e!72172))

(declare-fun res!54831 () Bool)

(assert (=> d!31415 (=> (not res!54831) (not e!72172))))

(declare-fun lt!57235 () ListLongMap!1547)

(assert (=> d!31415 (= res!54831 (not (contains!824 lt!57235 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!72174 () ListLongMap!1547)

(assert (=> d!31415 (= lt!57235 e!72174)))

(declare-fun c!19763 () Bool)

(assert (=> d!31415 (= c!19763 (bvsge #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))))))

(assert (=> d!31415 (validMask!0 (mask!6794 newMap!16))))

(assert (=> d!31415 (= (getCurrentListMapNoExtraKeys!111 (_keys!4340 newMap!16) (ite c!19458 (_values!2609 newMap!16) (array!4374 (store (arr!2073 (_values!2609 newMap!16)) (index!3171 lt!56646) (ValueCellFull!1004 lt!56360)) (size!2330 (_values!2609 newMap!16)))) (mask!6794 newMap!16) (ite c!19458 (ite c!19454 lt!56636 lt!56647) (extraKeys!2423 newMap!16)) (ite (and c!19458 c!19454) lt!56360 (zeroValue!2497 newMap!16)) (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) lt!57235)))

(declare-fun b!111009 () Bool)

(declare-fun e!72171 () Bool)

(assert (=> b!111009 (= e!72171 (isEmpty!382 lt!57235))))

(declare-fun b!111010 () Bool)

(assert (=> b!111010 (= e!72171 (= lt!57235 (getCurrentListMapNoExtraKeys!111 (_keys!4340 newMap!16) (ite c!19458 (_values!2609 newMap!16) (array!4374 (store (arr!2073 (_values!2609 newMap!16)) (index!3171 lt!56646) (ValueCellFull!1004 lt!56360)) (size!2330 (_values!2609 newMap!16)))) (mask!6794 newMap!16) (ite c!19458 (ite c!19454 lt!56636 lt!56647) (extraKeys!2423 newMap!16)) (ite (and c!19458 c!19454) lt!56360 (zeroValue!2497 newMap!16)) (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2626 newMap!16))))))

(declare-fun bm!11830 () Bool)

(assert (=> bm!11830 (= call!11833 (getCurrentListMapNoExtraKeys!111 (_keys!4340 newMap!16) (ite c!19458 (_values!2609 newMap!16) (array!4374 (store (arr!2073 (_values!2609 newMap!16)) (index!3171 lt!56646) (ValueCellFull!1004 lt!56360)) (size!2330 (_values!2609 newMap!16)))) (mask!6794 newMap!16) (ite c!19458 (ite c!19454 lt!56636 lt!56647) (extraKeys!2423 newMap!16)) (ite (and c!19458 c!19454) lt!56360 (zeroValue!2497 newMap!16)) (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2626 newMap!16)))))

(declare-fun b!111011 () Bool)

(declare-fun e!72177 () Bool)

(assert (=> b!111011 (= e!72177 e!72171)))

(declare-fun c!19760 () Bool)

(assert (=> b!111011 (= c!19760 (bvslt #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))))))

(declare-fun b!111012 () Bool)

(assert (=> b!111012 (= e!72172 e!72177)))

(declare-fun c!19762 () Bool)

(declare-fun e!72176 () Bool)

(assert (=> b!111012 (= c!19762 e!72176)))

(declare-fun res!54832 () Bool)

(assert (=> b!111012 (=> (not res!54832) (not e!72176))))

(assert (=> b!111012 (= res!54832 (bvslt #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))))))

(declare-fun b!111013 () Bool)

(declare-fun res!54830 () Bool)

(assert (=> b!111013 (=> (not res!54830) (not e!72172))))

(assert (=> b!111013 (= res!54830 (not (contains!824 lt!57235 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!111014 () Bool)

(assert (=> b!111014 (= e!72176 (validKeyInArray!0 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!111014 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!111015 () Bool)

(declare-fun e!72173 () Bool)

(assert (=> b!111015 (= e!72177 e!72173)))

(assert (=> b!111015 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))))))

(declare-fun res!54833 () Bool)

(assert (=> b!111015 (= res!54833 (contains!824 lt!57235 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!111015 (=> (not res!54833) (not e!72173))))

(declare-fun b!111016 () Bool)

(declare-fun lt!57233 () Unit!3382)

(declare-fun lt!57232 () Unit!3382)

(assert (=> b!111016 (= lt!57233 lt!57232)))

(declare-fun lt!57229 () (_ BitVec 64))

(declare-fun lt!57230 () (_ BitVec 64))

(declare-fun lt!57231 () ListLongMap!1547)

(declare-fun lt!57234 () V!3241)

(assert (=> b!111016 (not (contains!824 (+!144 lt!57231 (tuple2!2389 lt!57230 lt!57234)) lt!57229))))

(assert (=> b!111016 (= lt!57232 (addStillNotContains!50 lt!57231 lt!57230 lt!57234 lt!57229))))

(assert (=> b!111016 (= lt!57229 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!111016 (= lt!57234 (get!1353 (select (arr!2073 (ite c!19458 (_values!2609 newMap!16) (array!4374 (store (arr!2073 (_values!2609 newMap!16)) (index!3171 lt!56646) (ValueCellFull!1004 lt!56360)) (size!2330 (_values!2609 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!390 (defaultEntry!2626 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!111016 (= lt!57230 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!111016 (= lt!57231 call!11833)))

(assert (=> b!111016 (= e!72175 (+!144 call!11833 (tuple2!2389 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000) (get!1353 (select (arr!2073 (ite c!19458 (_values!2609 newMap!16) (array!4374 (store (arr!2073 (_values!2609 newMap!16)) (index!3171 lt!56646) (ValueCellFull!1004 lt!56360)) (size!2330 (_values!2609 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!390 (defaultEntry!2626 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!111017 () Bool)

(assert (=> b!111017 (= e!72174 e!72175)))

(declare-fun c!19761 () Bool)

(assert (=> b!111017 (= c!19761 (validKeyInArray!0 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!111018 () Bool)

(assert (=> b!111018 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))))))

(assert (=> b!111018 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2330 (ite c!19458 (_values!2609 newMap!16) (array!4374 (store (arr!2073 (_values!2609 newMap!16)) (index!3171 lt!56646) (ValueCellFull!1004 lt!56360)) (size!2330 (_values!2609 newMap!16)))))))))

(assert (=> b!111018 (= e!72173 (= (apply!100 lt!57235 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)) (get!1353 (select (arr!2073 (ite c!19458 (_values!2609 newMap!16) (array!4374 (store (arr!2073 (_values!2609 newMap!16)) (index!3171 lt!56646) (ValueCellFull!1004 lt!56360)) (size!2330 (_values!2609 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!390 (defaultEntry!2626 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!111019 () Bool)

(assert (=> b!111019 (= e!72174 (ListLongMap!1548 Nil!1606))))

(assert (= (and d!31415 c!19763) b!111019))

(assert (= (and d!31415 (not c!19763)) b!111017))

(assert (= (and b!111017 c!19761) b!111016))

(assert (= (and b!111017 (not c!19761)) b!111008))

(assert (= (or b!111016 b!111008) bm!11830))

(assert (= (and d!31415 res!54831) b!111013))

(assert (= (and b!111013 res!54830) b!111012))

(assert (= (and b!111012 res!54832) b!111014))

(assert (= (and b!111012 c!19762) b!111015))

(assert (= (and b!111012 (not c!19762)) b!111011))

(assert (= (and b!111015 res!54833) b!111018))

(assert (= (and b!111011 c!19760) b!111010))

(assert (= (and b!111011 (not c!19760)) b!111009))

(declare-fun b_lambda!4963 () Bool)

(assert (=> (not b_lambda!4963) (not b!111016)))

(assert (=> b!111016 t!5751))

(declare-fun b_and!6821 () Bool)

(assert (= b_and!6817 (and (=> t!5751 result!3533) b_and!6821)))

(assert (=> b!111016 t!5753))

(declare-fun b_and!6823 () Bool)

(assert (= b_and!6819 (and (=> t!5753 result!3535) b_and!6823)))

(declare-fun b_lambda!4965 () Bool)

(assert (=> (not b_lambda!4965) (not b!111018)))

(assert (=> b!111018 t!5751))

(declare-fun b_and!6825 () Bool)

(assert (= b_and!6821 (and (=> t!5751 result!3533) b_and!6825)))

(assert (=> b!111018 t!5753))

(declare-fun b_and!6827 () Bool)

(assert (= b_and!6823 (and (=> t!5753 result!3535) b_and!6827)))

(assert (=> b!111015 m!124605))

(assert (=> b!111015 m!124605))

(declare-fun m!126149 () Bool)

(assert (=> b!111015 m!126149))

(declare-fun m!126151 () Bool)

(assert (=> bm!11830 m!126151))

(assert (=> b!111018 m!124605))

(assert (=> b!111018 m!125151))

(assert (=> b!111018 m!124605))

(declare-fun m!126153 () Bool)

(assert (=> b!111018 m!126153))

(assert (=> b!111018 m!125151))

(assert (=> b!111018 m!124767))

(assert (=> b!111018 m!125153))

(assert (=> b!111018 m!124767))

(assert (=> b!111017 m!124605))

(assert (=> b!111017 m!124605))

(assert (=> b!111017 m!124607))

(assert (=> b!111014 m!124605))

(assert (=> b!111014 m!124605))

(assert (=> b!111014 m!124607))

(assert (=> b!111010 m!126151))

(declare-fun m!126155 () Bool)

(assert (=> d!31415 m!126155))

(assert (=> d!31415 m!124579))

(declare-fun m!126157 () Bool)

(assert (=> b!111009 m!126157))

(assert (=> b!111016 m!124605))

(assert (=> b!111016 m!125151))

(assert (=> b!111016 m!124767))

(assert (=> b!111016 m!125153))

(declare-fun m!126159 () Bool)

(assert (=> b!111016 m!126159))

(declare-fun m!126161 () Bool)

(assert (=> b!111016 m!126161))

(declare-fun m!126163 () Bool)

(assert (=> b!111016 m!126163))

(assert (=> b!111016 m!125151))

(assert (=> b!111016 m!126161))

(declare-fun m!126165 () Bool)

(assert (=> b!111016 m!126165))

(assert (=> b!111016 m!124767))

(declare-fun m!126167 () Bool)

(assert (=> b!111013 m!126167))

(assert (=> b!110396 d!31415))

(declare-fun d!31417 () Bool)

(assert (=> d!31417 (= (apply!100 (+!144 lt!56965 (tuple2!2389 lt!56976 (ite (and c!19458 c!19454) lt!56360 (zeroValue!2497 newMap!16)))) lt!56971) (apply!100 lt!56965 lt!56971))))

(declare-fun lt!57236 () Unit!3382)

(assert (=> d!31417 (= lt!57236 (choose!697 lt!56965 lt!56976 (ite (and c!19458 c!19454) lt!56360 (zeroValue!2497 newMap!16)) lt!56971))))

(declare-fun e!72178 () Bool)

(assert (=> d!31417 e!72178))

(declare-fun res!54834 () Bool)

(assert (=> d!31417 (=> (not res!54834) (not e!72178))))

(assert (=> d!31417 (= res!54834 (contains!824 lt!56965 lt!56971))))

(assert (=> d!31417 (= (addApplyDifferent!76 lt!56965 lt!56976 (ite (and c!19458 c!19454) lt!56360 (zeroValue!2497 newMap!16)) lt!56971) lt!57236)))

(declare-fun b!111020 () Bool)

(assert (=> b!111020 (= e!72178 (not (= lt!56971 lt!56976)))))

(assert (= (and d!31417 res!54834) b!111020))

(assert (=> d!31417 m!125125))

(assert (=> d!31417 m!125125))

(assert (=> d!31417 m!125127))

(assert (=> d!31417 m!125107))

(declare-fun m!126169 () Bool)

(assert (=> d!31417 m!126169))

(declare-fun m!126171 () Bool)

(assert (=> d!31417 m!126171))

(assert (=> b!110396 d!31417))

(assert (=> b!110050 d!30871))

(assert (=> d!30911 d!31187))

(declare-fun b!111024 () Bool)

(declare-fun e!72180 () Option!165)

(assert (=> b!111024 (= e!72180 None!163)))

(declare-fun b!111021 () Bool)

(declare-fun e!72179 () Option!165)

(assert (=> b!111021 (= e!72179 (Some!164 (_2!1205 (h!2204 (toList!789 lt!57013)))))))

(declare-fun b!111023 () Bool)

(assert (=> b!111023 (= e!72180 (getValueByKey!159 (t!5738 (toList!789 lt!57013)) (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun d!31419 () Bool)

(declare-fun c!19764 () Bool)

(assert (=> d!31419 (= c!19764 (and ((_ is Cons!1605) (toList!789 lt!57013)) (= (_1!1205 (h!2204 (toList!789 lt!57013))) (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> d!31419 (= (getValueByKey!159 (toList!789 lt!57013) (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))) e!72179)))

(declare-fun b!111022 () Bool)

(assert (=> b!111022 (= e!72179 e!72180)))

(declare-fun c!19765 () Bool)

(assert (=> b!111022 (= c!19765 (and ((_ is Cons!1605) (toList!789 lt!57013)) (not (= (_1!1205 (h!2204 (toList!789 lt!57013))) (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))))

(assert (= (and d!31419 c!19764) b!111021))

(assert (= (and d!31419 (not c!19764)) b!111022))

(assert (= (and b!111022 c!19765) b!111023))

(assert (= (and b!111022 (not c!19765)) b!111024))

(declare-fun m!126173 () Bool)

(assert (=> b!111023 m!126173))

(assert (=> b!110475 d!31419))

(assert (=> b!110244 d!31059))

(assert (=> b!110408 d!31059))

(declare-fun d!31421 () Bool)

(assert (=> d!31421 (= (isDefined!111 (getValueByKey!159 (toList!789 lt!56454) (_1!1205 lt!56370))) (not (isEmpty!383 (getValueByKey!159 (toList!789 lt!56454) (_1!1205 lt!56370)))))))

(declare-fun bs!4571 () Bool)

(assert (= bs!4571 d!31421))

(assert (=> bs!4571 m!124251))

(declare-fun m!126175 () Bool)

(assert (=> bs!4571 m!126175))

(assert (=> b!110452 d!31421))

(assert (=> b!110452 d!31019))

(declare-fun b!111025 () Bool)

(declare-fun e!72183 () List!1609)

(assert (=> b!111025 (= e!72183 (insertStrictlySorted!78 (t!5738 (t!5738 (toList!789 lt!56369))) (_1!1205 lt!56363) (_2!1205 lt!56363)))))

(declare-fun b!111026 () Bool)

(declare-fun res!54836 () Bool)

(declare-fun e!72185 () Bool)

(assert (=> b!111026 (=> (not res!54836) (not e!72185))))

(declare-fun lt!57237 () List!1609)

(assert (=> b!111026 (= res!54836 (containsKey!162 lt!57237 (_1!1205 lt!56363)))))

(declare-fun b!111027 () Bool)

(declare-fun e!72184 () List!1609)

(declare-fun call!11835 () List!1609)

(assert (=> b!111027 (= e!72184 call!11835)))

(declare-fun bm!11831 () Bool)

(declare-fun call!11836 () List!1609)

(declare-fun call!11834 () List!1609)

(assert (=> bm!11831 (= call!11836 call!11834)))

(declare-fun bm!11832 () Bool)

(assert (=> bm!11832 (= call!11835 call!11836)))

(declare-fun b!111028 () Bool)

(assert (=> b!111028 (= e!72184 call!11835)))

(declare-fun bm!11833 () Bool)

(declare-fun c!19768 () Bool)

(assert (=> bm!11833 (= call!11834 ($colon$colon!82 e!72183 (ite c!19768 (h!2204 (t!5738 (toList!789 lt!56369))) (tuple2!2389 (_1!1205 lt!56363) (_2!1205 lt!56363)))))))

(declare-fun c!19769 () Bool)

(assert (=> bm!11833 (= c!19769 c!19768)))

(declare-fun b!111029 () Bool)

(declare-fun e!72182 () List!1609)

(assert (=> b!111029 (= e!72182 call!11836)))

(declare-fun d!31423 () Bool)

(assert (=> d!31423 e!72185))

(declare-fun res!54835 () Bool)

(assert (=> d!31423 (=> (not res!54835) (not e!72185))))

(assert (=> d!31423 (= res!54835 (isStrictlySorted!298 lt!57237))))

(declare-fun e!72181 () List!1609)

(assert (=> d!31423 (= lt!57237 e!72181)))

(assert (=> d!31423 (= c!19768 (and ((_ is Cons!1605) (t!5738 (toList!789 lt!56369))) (bvslt (_1!1205 (h!2204 (t!5738 (toList!789 lt!56369)))) (_1!1205 lt!56363))))))

(assert (=> d!31423 (isStrictlySorted!298 (t!5738 (toList!789 lt!56369)))))

(assert (=> d!31423 (= (insertStrictlySorted!78 (t!5738 (toList!789 lt!56369)) (_1!1205 lt!56363) (_2!1205 lt!56363)) lt!57237)))

(declare-fun b!111030 () Bool)

(assert (=> b!111030 (= e!72181 call!11834)))

(declare-fun b!111031 () Bool)

(declare-fun c!19766 () Bool)

(assert (=> b!111031 (= c!19766 (and ((_ is Cons!1605) (t!5738 (toList!789 lt!56369))) (bvsgt (_1!1205 (h!2204 (t!5738 (toList!789 lt!56369)))) (_1!1205 lt!56363))))))

(assert (=> b!111031 (= e!72182 e!72184)))

(declare-fun b!111032 () Bool)

(declare-fun c!19767 () Bool)

(assert (=> b!111032 (= e!72183 (ite c!19767 (t!5738 (t!5738 (toList!789 lt!56369))) (ite c!19766 (Cons!1605 (h!2204 (t!5738 (toList!789 lt!56369))) (t!5738 (t!5738 (toList!789 lt!56369)))) Nil!1606)))))

(declare-fun b!111033 () Bool)

(assert (=> b!111033 (= e!72185 (contains!827 lt!57237 (tuple2!2389 (_1!1205 lt!56363) (_2!1205 lt!56363))))))

(declare-fun b!111034 () Bool)

(assert (=> b!111034 (= e!72181 e!72182)))

(assert (=> b!111034 (= c!19767 (and ((_ is Cons!1605) (t!5738 (toList!789 lt!56369))) (= (_1!1205 (h!2204 (t!5738 (toList!789 lt!56369)))) (_1!1205 lt!56363))))))

(assert (= (and d!31423 c!19768) b!111030))

(assert (= (and d!31423 (not c!19768)) b!111034))

(assert (= (and b!111034 c!19767) b!111029))

(assert (= (and b!111034 (not c!19767)) b!111031))

(assert (= (and b!111031 c!19766) b!111027))

(assert (= (and b!111031 (not c!19766)) b!111028))

(assert (= (or b!111027 b!111028) bm!11832))

(assert (= (or b!111029 bm!11832) bm!11831))

(assert (= (or b!111030 bm!11831) bm!11833))

(assert (= (and bm!11833 c!19769) b!111025))

(assert (= (and bm!11833 (not c!19769)) b!111032))

(assert (= (and d!31423 res!54835) b!111026))

(assert (= (and b!111026 res!54836) b!111033))

(declare-fun m!126177 () Bool)

(assert (=> bm!11833 m!126177))

(declare-fun m!126179 () Bool)

(assert (=> b!111033 m!126179))

(declare-fun m!126181 () Bool)

(assert (=> b!111026 m!126181))

(declare-fun m!126183 () Bool)

(assert (=> d!31423 m!126183))

(assert (=> d!31423 m!125827))

(declare-fun m!126185 () Bool)

(assert (=> b!111025 m!126185))

(assert (=> b!110355 d!31423))

(declare-fun d!31425 () Bool)

(declare-fun lt!57238 () Bool)

(assert (=> d!31425 (= lt!57238 (select (content!114 lt!56955) (tuple2!2389 (_1!1205 lt!56370) (_2!1205 lt!56370))))))

(declare-fun e!72187 () Bool)

(assert (=> d!31425 (= lt!57238 e!72187)))

(declare-fun res!54838 () Bool)

(assert (=> d!31425 (=> (not res!54838) (not e!72187))))

(assert (=> d!31425 (= res!54838 ((_ is Cons!1605) lt!56955))))

(assert (=> d!31425 (= (contains!827 lt!56955 (tuple2!2389 (_1!1205 lt!56370) (_2!1205 lt!56370))) lt!57238)))

(declare-fun b!111035 () Bool)

(declare-fun e!72186 () Bool)

(assert (=> b!111035 (= e!72187 e!72186)))

(declare-fun res!54837 () Bool)

(assert (=> b!111035 (=> res!54837 e!72186)))

(assert (=> b!111035 (= res!54837 (= (h!2204 lt!56955) (tuple2!2389 (_1!1205 lt!56370) (_2!1205 lt!56370))))))

(declare-fun b!111036 () Bool)

(assert (=> b!111036 (= e!72186 (contains!827 (t!5738 lt!56955) (tuple2!2389 (_1!1205 lt!56370) (_2!1205 lt!56370))))))

(assert (= (and d!31425 res!54838) b!111035))

(assert (= (and b!111035 (not res!54837)) b!111036))

(declare-fun m!126187 () Bool)

(assert (=> d!31425 m!126187))

(declare-fun m!126189 () Bool)

(assert (=> d!31425 m!126189))

(declare-fun m!126191 () Bool)

(assert (=> b!111036 m!126191))

(assert (=> b!110390 d!31425))

(declare-fun d!31427 () Bool)

(declare-fun lt!57239 () Bool)

(assert (=> d!31427 (= lt!57239 (select (content!114 (toList!789 lt!56760)) (tuple2!2389 lt!56474 lt!56478)))))

(declare-fun e!72189 () Bool)

(assert (=> d!31427 (= lt!57239 e!72189)))

(declare-fun res!54840 () Bool)

(assert (=> d!31427 (=> (not res!54840) (not e!72189))))

(assert (=> d!31427 (= res!54840 ((_ is Cons!1605) (toList!789 lt!56760)))))

(assert (=> d!31427 (= (contains!827 (toList!789 lt!56760) (tuple2!2389 lt!56474 lt!56478)) lt!57239)))

(declare-fun b!111037 () Bool)

(declare-fun e!72188 () Bool)

(assert (=> b!111037 (= e!72189 e!72188)))

(declare-fun res!54839 () Bool)

(assert (=> b!111037 (=> res!54839 e!72188)))

(assert (=> b!111037 (= res!54839 (= (h!2204 (toList!789 lt!56760)) (tuple2!2389 lt!56474 lt!56478)))))

(declare-fun b!111038 () Bool)

(assert (=> b!111038 (= e!72188 (contains!827 (t!5738 (toList!789 lt!56760)) (tuple2!2389 lt!56474 lt!56478)))))

(assert (= (and d!31427 res!54840) b!111037))

(assert (= (and b!111037 (not res!54839)) b!111038))

(declare-fun m!126193 () Bool)

(assert (=> d!31427 m!126193))

(declare-fun m!126195 () Bool)

(assert (=> d!31427 m!126195))

(declare-fun m!126197 () Bool)

(assert (=> b!111038 m!126197))

(assert (=> b!110068 d!31427))

(declare-fun d!31429 () Bool)

(assert (=> d!31429 (= (isDefined!111 (getValueByKey!159 (toList!789 (+!144 lt!56546 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))) lt!56548)) (not (isEmpty!383 (getValueByKey!159 (toList!789 (+!144 lt!56546 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))) lt!56548))))))

(declare-fun bs!4572 () Bool)

(assert (= bs!4572 d!31429))

(assert (=> bs!4572 m!124895))

(declare-fun m!126199 () Bool)

(assert (=> bs!4572 m!126199))

(assert (=> b!110279 d!31429))

(declare-fun b!111042 () Bool)

(declare-fun e!72191 () Option!165)

(assert (=> b!111042 (= e!72191 None!163)))

(declare-fun b!111039 () Bool)

(declare-fun e!72190 () Option!165)

(assert (=> b!111039 (= e!72190 (Some!164 (_2!1205 (h!2204 (toList!789 (+!144 lt!56546 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))))))))

(declare-fun b!111041 () Bool)

(assert (=> b!111041 (= e!72191 (getValueByKey!159 (t!5738 (toList!789 (+!144 lt!56546 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))) lt!56548))))

(declare-fun c!19770 () Bool)

(declare-fun d!31431 () Bool)

(assert (=> d!31431 (= c!19770 (and ((_ is Cons!1605) (toList!789 (+!144 lt!56546 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))) (= (_1!1205 (h!2204 (toList!789 (+!144 lt!56546 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))) lt!56548)))))

(assert (=> d!31431 (= (getValueByKey!159 (toList!789 (+!144 lt!56546 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))) lt!56548) e!72190)))

(declare-fun b!111040 () Bool)

(assert (=> b!111040 (= e!72190 e!72191)))

(declare-fun c!19771 () Bool)

(assert (=> b!111040 (= c!19771 (and ((_ is Cons!1605) (toList!789 (+!144 lt!56546 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))) (not (= (_1!1205 (h!2204 (toList!789 (+!144 lt!56546 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))) lt!56548))))))

(assert (= (and d!31431 c!19770) b!111039))

(assert (= (and d!31431 (not c!19770)) b!111040))

(assert (= (and b!111040 c!19771) b!111041))

(assert (= (and b!111040 (not c!19771)) b!111042))

(declare-fun m!126201 () Bool)

(assert (=> b!111041 m!126201))

(assert (=> b!110279 d!31431))

(declare-fun d!31433 () Bool)

(assert (=> d!31433 (= (apply!100 lt!56966 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)) (get!1356 (getValueByKey!159 (toList!789 lt!56966) (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!4573 () Bool)

(assert (= bs!4573 d!31433))

(assert (=> bs!4573 m!124605))

(declare-fun m!126203 () Bool)

(assert (=> bs!4573 m!126203))

(assert (=> bs!4573 m!126203))

(declare-fun m!126205 () Bool)

(assert (=> bs!4573 m!126205))

(assert (=> b!110402 d!31433))

(declare-fun c!19772 () Bool)

(declare-fun d!31435 () Bool)

(assert (=> d!31435 (= c!19772 ((_ is ValueCellFull!1004) (select (arr!2073 (ite c!19458 (_values!2609 newMap!16) (array!4374 (store (arr!2073 (_values!2609 newMap!16)) (index!3171 lt!56646) (ValueCellFull!1004 lt!56360)) (size!2330 (_values!2609 newMap!16))))) #b00000000000000000000000000000000)))))

(declare-fun e!72192 () V!3241)

(assert (=> d!31435 (= (get!1353 (select (arr!2073 (ite c!19458 (_values!2609 newMap!16) (array!4374 (store (arr!2073 (_values!2609 newMap!16)) (index!3171 lt!56646) (ValueCellFull!1004 lt!56360)) (size!2330 (_values!2609 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!390 (defaultEntry!2626 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!72192)))

(declare-fun b!111043 () Bool)

(assert (=> b!111043 (= e!72192 (get!1354 (select (arr!2073 (ite c!19458 (_values!2609 newMap!16) (array!4374 (store (arr!2073 (_values!2609 newMap!16)) (index!3171 lt!56646) (ValueCellFull!1004 lt!56360)) (size!2330 (_values!2609 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!390 (defaultEntry!2626 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!111044 () Bool)

(assert (=> b!111044 (= e!72192 (get!1355 (select (arr!2073 (ite c!19458 (_values!2609 newMap!16) (array!4374 (store (arr!2073 (_values!2609 newMap!16)) (index!3171 lt!56646) (ValueCellFull!1004 lt!56360)) (size!2330 (_values!2609 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!390 (defaultEntry!2626 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!31435 c!19772) b!111043))

(assert (= (and d!31435 (not c!19772)) b!111044))

(assert (=> b!111043 m!125151))

(assert (=> b!111043 m!124767))

(declare-fun m!126207 () Bool)

(assert (=> b!111043 m!126207))

(assert (=> b!111044 m!125151))

(assert (=> b!111044 m!124767))

(declare-fun m!126209 () Bool)

(assert (=> b!111044 m!126209))

(assert (=> b!110402 d!31435))

(declare-fun d!31437 () Bool)

(declare-fun lt!57240 () Bool)

(assert (=> d!31437 (= lt!57240 (select (content!115 Nil!1607) (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!72193 () Bool)

(assert (=> d!31437 (= lt!57240 e!72193)))

(declare-fun res!54841 () Bool)

(assert (=> d!31437 (=> (not res!54841) (not e!72193))))

(assert (=> d!31437 (= res!54841 ((_ is Cons!1606) Nil!1607))))

(assert (=> d!31437 (= (contains!828 Nil!1607 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)) lt!57240)))

(declare-fun b!111045 () Bool)

(declare-fun e!72194 () Bool)

(assert (=> b!111045 (= e!72193 e!72194)))

(declare-fun res!54842 () Bool)

(assert (=> b!111045 (=> res!54842 e!72194)))

(assert (=> b!111045 (= res!54842 (= (h!2205 Nil!1607) (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!111046 () Bool)

(assert (=> b!111046 (= e!72194 (contains!828 (t!5739 Nil!1607) (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!31437 res!54841) b!111045))

(assert (= (and b!111045 (not res!54842)) b!111046))

(assert (=> d!31437 m!124993))

(assert (=> d!31437 m!124605))

(declare-fun m!126211 () Bool)

(assert (=> d!31437 m!126211))

(assert (=> b!111046 m!124605))

(declare-fun m!126213 () Bool)

(assert (=> b!111046 m!126213))

(assert (=> b!110101 d!31437))

(declare-fun d!31439 () Bool)

(assert (=> d!31439 (isDefined!111 (getValueByKey!159 (toList!789 call!11700) (select (arr!2072 (_keys!4340 newMap!16)) (index!3171 lt!56646))))))

(declare-fun lt!57241 () Unit!3382)

(assert (=> d!31439 (= lt!57241 (choose!696 (toList!789 call!11700) (select (arr!2072 (_keys!4340 newMap!16)) (index!3171 lt!56646))))))

(declare-fun e!72195 () Bool)

(assert (=> d!31439 e!72195))

(declare-fun res!54843 () Bool)

(assert (=> d!31439 (=> (not res!54843) (not e!72195))))

(assert (=> d!31439 (= res!54843 (isStrictlySorted!298 (toList!789 call!11700)))))

(assert (=> d!31439 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 call!11700) (select (arr!2072 (_keys!4340 newMap!16)) (index!3171 lt!56646))) lt!57241)))

(declare-fun b!111047 () Bool)

(assert (=> b!111047 (= e!72195 (containsKey!162 (toList!789 call!11700) (select (arr!2072 (_keys!4340 newMap!16)) (index!3171 lt!56646))))))

(assert (= (and d!31439 res!54843) b!111047))

(assert (=> d!31439 m!124407))

(assert (=> d!31439 m!124629))

(assert (=> d!31439 m!124629))

(assert (=> d!31439 m!124631))

(assert (=> d!31439 m!124407))

(declare-fun m!126215 () Bool)

(assert (=> d!31439 m!126215))

(declare-fun m!126217 () Bool)

(assert (=> d!31439 m!126217))

(assert (=> b!111047 m!124407))

(assert (=> b!111047 m!124625))

(assert (=> b!110104 d!31439))

(assert (=> b!110104 d!31303))

(assert (=> b!110104 d!31305))

(declare-fun d!31441 () Bool)

(declare-fun lt!57242 () Bool)

(assert (=> d!31441 (= lt!57242 (select (content!114 lt!56482) (tuple2!2389 (_1!1205 lt!56363) (_2!1205 lt!56363))))))

(declare-fun e!72197 () Bool)

(assert (=> d!31441 (= lt!57242 e!72197)))

(declare-fun res!54845 () Bool)

(assert (=> d!31441 (=> (not res!54845) (not e!72197))))

(assert (=> d!31441 (= res!54845 ((_ is Cons!1605) lt!56482))))

(assert (=> d!31441 (= (contains!827 lt!56482 (tuple2!2389 (_1!1205 lt!56363) (_2!1205 lt!56363))) lt!57242)))

(declare-fun b!111048 () Bool)

(declare-fun e!72196 () Bool)

(assert (=> b!111048 (= e!72197 e!72196)))

(declare-fun res!54844 () Bool)

(assert (=> b!111048 (=> res!54844 e!72196)))

(assert (=> b!111048 (= res!54844 (= (h!2204 lt!56482) (tuple2!2389 (_1!1205 lt!56363) (_2!1205 lt!56363))))))

(declare-fun b!111049 () Bool)

(assert (=> b!111049 (= e!72196 (contains!827 (t!5738 lt!56482) (tuple2!2389 (_1!1205 lt!56363) (_2!1205 lt!56363))))))

(assert (= (and d!31441 res!54845) b!111048))

(assert (= (and b!111048 (not res!54844)) b!111049))

(declare-fun m!126219 () Bool)

(assert (=> d!31441 m!126219))

(declare-fun m!126221 () Bool)

(assert (=> d!31441 m!126221))

(declare-fun m!126223 () Bool)

(assert (=> b!111049 m!126223))

(assert (=> b!110354 d!31441))

(declare-fun d!31443 () Bool)

(assert (=> d!31443 (= (+!144 (getCurrentListMap!475 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)) (getCurrentListMap!475 (_keys!4340 newMap!16) (array!4374 (store (arr!2073 (_values!2609 newMap!16)) (index!3171 lt!56646) (ValueCellFull!1004 lt!56360)) (size!2330 (_values!2609 newMap!16))) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(assert (=> d!31443 true))

(declare-fun _$5!116 () Unit!3382)

(assert (=> d!31443 (= (choose!694 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (index!3171 lt!56646) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360 (defaultEntry!2626 newMap!16)) _$5!116)))

(declare-fun bs!4574 () Bool)

(assert (= bs!4574 d!31443))

(assert (=> bs!4574 m!124333))

(assert (=> bs!4574 m!124333))

(assert (=> bs!4574 m!124517))

(assert (=> bs!4574 m!124393))

(assert (=> bs!4574 m!124641))

(assert (=> d!30891 d!31443))

(assert (=> d!30891 d!31187))

(declare-fun d!31445 () Bool)

(declare-fun res!54846 () Bool)

(declare-fun e!72198 () Bool)

(assert (=> d!31445 (=> res!54846 e!72198)))

(assert (=> d!31445 (= res!54846 (or ((_ is Nil!1606) lt!56852) ((_ is Nil!1606) (t!5738 lt!56852))))))

(assert (=> d!31445 (= (isStrictlySorted!298 lt!56852) e!72198)))

(declare-fun b!111050 () Bool)

(declare-fun e!72199 () Bool)

(assert (=> b!111050 (= e!72198 e!72199)))

(declare-fun res!54847 () Bool)

(assert (=> b!111050 (=> (not res!54847) (not e!72199))))

(assert (=> b!111050 (= res!54847 (bvslt (_1!1205 (h!2204 lt!56852)) (_1!1205 (h!2204 (t!5738 lt!56852)))))))

(declare-fun b!111051 () Bool)

(assert (=> b!111051 (= e!72199 (isStrictlySorted!298 (t!5738 lt!56852)))))

(assert (= (and d!31445 (not res!54846)) b!111050))

(assert (= (and b!111050 res!54847) b!111051))

(declare-fun m!126225 () Bool)

(assert (=> b!111051 m!126225))

(assert (=> d!30921 d!31445))

(declare-fun d!31447 () Bool)

(declare-fun res!54848 () Bool)

(declare-fun e!72200 () Bool)

(assert (=> d!31447 (=> res!54848 e!72200)))

(assert (=> d!31447 (= res!54848 (or ((_ is Nil!1606) (toList!789 (+!144 lt!56369 lt!56370))) ((_ is Nil!1606) (t!5738 (toList!789 (+!144 lt!56369 lt!56370))))))))

(assert (=> d!31447 (= (isStrictlySorted!298 (toList!789 (+!144 lt!56369 lt!56370))) e!72200)))

(declare-fun b!111052 () Bool)

(declare-fun e!72201 () Bool)

(assert (=> b!111052 (= e!72200 e!72201)))

(declare-fun res!54849 () Bool)

(assert (=> b!111052 (=> (not res!54849) (not e!72201))))

(assert (=> b!111052 (= res!54849 (bvslt (_1!1205 (h!2204 (toList!789 (+!144 lt!56369 lt!56370)))) (_1!1205 (h!2204 (t!5738 (toList!789 (+!144 lt!56369 lt!56370)))))))))

(declare-fun b!111053 () Bool)

(assert (=> b!111053 (= e!72201 (isStrictlySorted!298 (t!5738 (toList!789 (+!144 lt!56369 lt!56370)))))))

(assert (= (and d!31447 (not res!54848)) b!111052))

(assert (= (and b!111052 res!54849) b!111053))

(assert (=> b!111053 m!125821))

(assert (=> d!30921 d!31447))

(declare-fun d!31449 () Bool)

(declare-fun lt!57243 () Bool)

(assert (=> d!31449 (= lt!57243 (select (content!114 (toList!789 lt!56930)) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun e!72203 () Bool)

(assert (=> d!31449 (= lt!57243 e!72203)))

(declare-fun res!54851 () Bool)

(assert (=> d!31449 (=> (not res!54851) (not e!72203))))

(assert (=> d!31449 (= res!54851 ((_ is Cons!1605) (toList!789 lt!56930)))))

(assert (=> d!31449 (= (contains!827 (toList!789 lt!56930) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992))))) lt!57243)))

(declare-fun b!111054 () Bool)

(declare-fun e!72202 () Bool)

(assert (=> b!111054 (= e!72203 e!72202)))

(declare-fun res!54850 () Bool)

(assert (=> b!111054 (=> res!54850 e!72202)))

(assert (=> b!111054 (= res!54850 (= (h!2204 (toList!789 lt!56930)) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun b!111055 () Bool)

(assert (=> b!111055 (= e!72202 (contains!827 (t!5738 (toList!789 lt!56930)) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))))

(assert (= (and d!31449 res!54851) b!111054))

(assert (= (and b!111054 (not res!54850)) b!111055))

(declare-fun m!126227 () Bool)

(assert (=> d!31449 m!126227))

(declare-fun m!126229 () Bool)

(assert (=> d!31449 m!126229))

(declare-fun m!126231 () Bool)

(assert (=> b!111055 m!126231))

(assert (=> b!110318 d!31449))

(declare-fun d!31451 () Bool)

(assert (=> d!31451 (= ($colon$colon!82 e!71836 (ite c!19593 (h!2204 (toList!789 (+!144 lt!56369 lt!56363))) (tuple2!2389 (_1!1205 lt!56370) (_2!1205 lt!56370)))) (Cons!1605 (ite c!19593 (h!2204 (toList!789 (+!144 lt!56369 lt!56363))) (tuple2!2389 (_1!1205 lt!56370) (_2!1205 lt!56370))) e!71836))))

(assert (=> bm!11784 d!31451))

(declare-fun b!111057 () Bool)

(declare-fun e!72207 () Bool)

(declare-fun e!72206 () Bool)

(assert (=> b!111057 (= e!72207 e!72206)))

(declare-fun c!19773 () Bool)

(assert (=> b!111057 (= c!19773 (validKeyInArray!0 (select (arr!2072 (_keys!4340 (_2!1204 lt!56628))) #b00000000000000000000000000000000)))))

(declare-fun bm!11834 () Bool)

(declare-fun call!11837 () Bool)

(assert (=> bm!11834 (= call!11837 (arrayNoDuplicates!0 (_keys!4340 (_2!1204 lt!56628)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!19773 (Cons!1606 (select (arr!2072 (_keys!4340 (_2!1204 lt!56628))) #b00000000000000000000000000000000) Nil!1607) Nil!1607)))))

(declare-fun b!111058 () Bool)

(assert (=> b!111058 (= e!72206 call!11837)))

(declare-fun b!111059 () Bool)

(assert (=> b!111059 (= e!72206 call!11837)))

(declare-fun b!111060 () Bool)

(declare-fun e!72205 () Bool)

(assert (=> b!111060 (= e!72205 (contains!828 Nil!1607 (select (arr!2072 (_keys!4340 (_2!1204 lt!56628))) #b00000000000000000000000000000000)))))

(declare-fun d!31453 () Bool)

(declare-fun res!54852 () Bool)

(declare-fun e!72204 () Bool)

(assert (=> d!31453 (=> res!54852 e!72204)))

(assert (=> d!31453 (= res!54852 (bvsge #b00000000000000000000000000000000 (size!2329 (_keys!4340 (_2!1204 lt!56628)))))))

(assert (=> d!31453 (= (arrayNoDuplicates!0 (_keys!4340 (_2!1204 lt!56628)) #b00000000000000000000000000000000 Nil!1607) e!72204)))

(declare-fun b!111056 () Bool)

(assert (=> b!111056 (= e!72204 e!72207)))

(declare-fun res!54853 () Bool)

(assert (=> b!111056 (=> (not res!54853) (not e!72207))))

(assert (=> b!111056 (= res!54853 (not e!72205))))

(declare-fun res!54854 () Bool)

(assert (=> b!111056 (=> (not res!54854) (not e!72205))))

(assert (=> b!111056 (= res!54854 (validKeyInArray!0 (select (arr!2072 (_keys!4340 (_2!1204 lt!56628))) #b00000000000000000000000000000000)))))

(assert (= (and d!31453 (not res!54852)) b!111056))

(assert (= (and b!111056 res!54854) b!111060))

(assert (= (and b!111056 res!54853) b!111057))

(assert (= (and b!111057 c!19773) b!111059))

(assert (= (and b!111057 (not c!19773)) b!111058))

(assert (= (or b!111059 b!111058) bm!11834))

(assert (=> b!111057 m!125695))

(assert (=> b!111057 m!125695))

(assert (=> b!111057 m!125697))

(assert (=> bm!11834 m!125695))

(declare-fun m!126233 () Bool)

(assert (=> bm!11834 m!126233))

(assert (=> b!111060 m!125695))

(assert (=> b!111060 m!125695))

(declare-fun m!126235 () Bool)

(assert (=> b!111060 m!126235))

(assert (=> b!111056 m!125695))

(assert (=> b!111056 m!125695))

(assert (=> b!111056 m!125697))

(assert (=> b!110372 d!31453))

(declare-fun d!31455 () Bool)

(assert (=> d!31455 (= (get!1356 (getValueByKey!159 (toList!789 lt!56554) lt!56537)) (v!2936 (getValueByKey!159 (toList!789 lt!56554) lt!56537)))))

(assert (=> d!30947 d!31455))

(declare-fun b!111064 () Bool)

(declare-fun e!72209 () Option!165)

(assert (=> b!111064 (= e!72209 None!163)))

(declare-fun b!111061 () Bool)

(declare-fun e!72208 () Option!165)

(assert (=> b!111061 (= e!72208 (Some!164 (_2!1205 (h!2204 (toList!789 lt!56554)))))))

(declare-fun b!111063 () Bool)

(assert (=> b!111063 (= e!72209 (getValueByKey!159 (t!5738 (toList!789 lt!56554)) lt!56537))))

(declare-fun d!31457 () Bool)

(declare-fun c!19774 () Bool)

(assert (=> d!31457 (= c!19774 (and ((_ is Cons!1605) (toList!789 lt!56554)) (= (_1!1205 (h!2204 (toList!789 lt!56554))) lt!56537)))))

(assert (=> d!31457 (= (getValueByKey!159 (toList!789 lt!56554) lt!56537) e!72208)))

(declare-fun b!111062 () Bool)

(assert (=> b!111062 (= e!72208 e!72209)))

(declare-fun c!19775 () Bool)

(assert (=> b!111062 (= c!19775 (and ((_ is Cons!1605) (toList!789 lt!56554)) (not (= (_1!1205 (h!2204 (toList!789 lt!56554))) lt!56537))))))

(assert (= (and d!31457 c!19774) b!111061))

(assert (= (and d!31457 (not c!19774)) b!111062))

(assert (= (and b!111062 c!19775) b!111063))

(assert (= (and b!111062 (not c!19775)) b!111064))

(declare-fun m!126237 () Bool)

(assert (=> b!111063 m!126237))

(assert (=> d!30947 d!31457))

(declare-fun b!111077 () Bool)

(declare-fun e!72218 () SeekEntryResult!255)

(assert (=> b!111077 (= e!72218 (MissingVacant!255 (index!3172 lt!56808)))))

(declare-fun b!111078 () Bool)

(declare-fun e!72216 () SeekEntryResult!255)

(assert (=> b!111078 (= e!72216 Undefined!255)))

(declare-fun b!111080 () Bool)

(assert (=> b!111080 (= e!72218 (seekKeyOrZeroReturnVacant!0 (bvadd (x!13943 lt!56808) #b00000000000000000000000000000001) (nextIndex!0 (index!3172 lt!56808) (bvadd (x!13943 lt!56808) #b00000000000000000000000000000001) (mask!6794 newMap!16)) (index!3172 lt!56808) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (_keys!4340 newMap!16) (mask!6794 newMap!16)))))

(declare-fun b!111081 () Bool)

(declare-fun e!72217 () SeekEntryResult!255)

(assert (=> b!111081 (= e!72217 (Found!255 (index!3172 lt!56808)))))

(declare-fun b!111082 () Bool)

(assert (=> b!111082 (= e!72216 e!72217)))

(declare-fun lt!57249 () (_ BitVec 64))

(declare-fun c!19782 () Bool)

(assert (=> b!111082 (= c!19782 (= lt!57249 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(declare-fun d!31459 () Bool)

(declare-fun lt!57248 () SeekEntryResult!255)

(assert (=> d!31459 (and (or ((_ is Undefined!255) lt!57248) (not ((_ is Found!255) lt!57248)) (and (bvsge (index!3171 lt!57248) #b00000000000000000000000000000000) (bvslt (index!3171 lt!57248) (size!2329 (_keys!4340 newMap!16))))) (or ((_ is Undefined!255) lt!57248) ((_ is Found!255) lt!57248) (not ((_ is MissingVacant!255) lt!57248)) (not (= (index!3173 lt!57248) (index!3172 lt!56808))) (and (bvsge (index!3173 lt!57248) #b00000000000000000000000000000000) (bvslt (index!3173 lt!57248) (size!2329 (_keys!4340 newMap!16))))) (or ((_ is Undefined!255) lt!57248) (ite ((_ is Found!255) lt!57248) (= (select (arr!2072 (_keys!4340 newMap!16)) (index!3171 lt!57248)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) (and ((_ is MissingVacant!255) lt!57248) (= (index!3173 lt!57248) (index!3172 lt!56808)) (= (select (arr!2072 (_keys!4340 newMap!16)) (index!3173 lt!57248)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!31459 (= lt!57248 e!72216)))

(declare-fun c!19784 () Bool)

(assert (=> d!31459 (= c!19784 (bvsge (x!13943 lt!56808) #b01111111111111111111111111111110))))

(assert (=> d!31459 (= lt!57249 (select (arr!2072 (_keys!4340 newMap!16)) (index!3172 lt!56808)))))

(assert (=> d!31459 (validMask!0 (mask!6794 newMap!16))))

(assert (=> d!31459 (= (seekKeyOrZeroReturnVacant!0 (x!13943 lt!56808) (index!3172 lt!56808) (index!3172 lt!56808) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (_keys!4340 newMap!16) (mask!6794 newMap!16)) lt!57248)))

(declare-fun b!111079 () Bool)

(declare-fun c!19783 () Bool)

(assert (=> b!111079 (= c!19783 (= lt!57249 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!111079 (= e!72217 e!72218)))

(assert (= (and d!31459 c!19784) b!111078))

(assert (= (and d!31459 (not c!19784)) b!111082))

(assert (= (and b!111082 c!19782) b!111081))

(assert (= (and b!111082 (not c!19782)) b!111079))

(assert (= (and b!111079 c!19783) b!111077))

(assert (= (and b!111079 (not c!19783)) b!111080))

(declare-fun m!126239 () Bool)

(assert (=> b!111080 m!126239))

(assert (=> b!111080 m!126239))

(assert (=> b!111080 m!124087))

(declare-fun m!126241 () Bool)

(assert (=> b!111080 m!126241))

(declare-fun m!126243 () Bool)

(assert (=> d!31459 m!126243))

(declare-fun m!126245 () Bool)

(assert (=> d!31459 m!126245))

(assert (=> d!31459 m!124667))

(assert (=> d!31459 m!124579))

(assert (=> b!110131 d!31459))

(declare-fun d!31461 () Bool)

(assert (=> d!31461 (= (isEmpty!383 (getValueByKey!159 (toList!789 lt!56367) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355))) (not ((_ is Some!164) (getValueByKey!159 (toList!789 lt!56367) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))))

(assert (=> d!30905 d!31461))

(declare-fun d!31463 () Bool)

(declare-fun e!72220 () Bool)

(assert (=> d!31463 e!72220))

(declare-fun res!54855 () Bool)

(assert (=> d!31463 (=> res!54855 e!72220)))

(declare-fun lt!57252 () Bool)

(assert (=> d!31463 (= res!54855 (not lt!57252))))

(declare-fun lt!57253 () Bool)

(assert (=> d!31463 (= lt!57252 lt!57253)))

(declare-fun lt!57250 () Unit!3382)

(declare-fun e!72219 () Unit!3382)

(assert (=> d!31463 (= lt!57250 e!72219)))

(declare-fun c!19785 () Bool)

(assert (=> d!31463 (= c!19785 lt!57253)))

(assert (=> d!31463 (= lt!57253 (containsKey!162 (toList!789 (getCurrentListMap!475 (_keys!4340 newMap!16) lt!56625 (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16))) (select (arr!2072 (_keys!4340 newMap!16)) (index!3171 lt!56646))))))

(assert (=> d!31463 (= (contains!824 (getCurrentListMap!475 (_keys!4340 newMap!16) lt!56625 (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) (select (arr!2072 (_keys!4340 newMap!16)) (index!3171 lt!56646))) lt!57252)))

(declare-fun b!111083 () Bool)

(declare-fun lt!57251 () Unit!3382)

(assert (=> b!111083 (= e!72219 lt!57251)))

(assert (=> b!111083 (= lt!57251 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 (getCurrentListMap!475 (_keys!4340 newMap!16) lt!56625 (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16))) (select (arr!2072 (_keys!4340 newMap!16)) (index!3171 lt!56646))))))

(assert (=> b!111083 (isDefined!111 (getValueByKey!159 (toList!789 (getCurrentListMap!475 (_keys!4340 newMap!16) lt!56625 (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16))) (select (arr!2072 (_keys!4340 newMap!16)) (index!3171 lt!56646))))))

(declare-fun b!111084 () Bool)

(declare-fun Unit!3435 () Unit!3382)

(assert (=> b!111084 (= e!72219 Unit!3435)))

(declare-fun b!111085 () Bool)

(assert (=> b!111085 (= e!72220 (isDefined!111 (getValueByKey!159 (toList!789 (getCurrentListMap!475 (_keys!4340 newMap!16) lt!56625 (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16))) (select (arr!2072 (_keys!4340 newMap!16)) (index!3171 lt!56646)))))))

(assert (= (and d!31463 c!19785) b!111083))

(assert (= (and d!31463 (not c!19785)) b!111084))

(assert (= (and d!31463 (not res!54855)) b!111085))

(assert (=> d!31463 m!124407))

(declare-fun m!126247 () Bool)

(assert (=> d!31463 m!126247))

(assert (=> b!111083 m!124407))

(declare-fun m!126249 () Bool)

(assert (=> b!111083 m!126249))

(assert (=> b!111083 m!124407))

(declare-fun m!126251 () Bool)

(assert (=> b!111083 m!126251))

(assert (=> b!111083 m!126251))

(declare-fun m!126253 () Bool)

(assert (=> b!111083 m!126253))

(assert (=> b!111085 m!124407))

(assert (=> b!111085 m!126251))

(assert (=> b!111085 m!126251))

(assert (=> b!111085 m!126253))

(assert (=> b!110109 d!31463))

(declare-fun b!111086 () Bool)

(declare-fun res!54856 () Bool)

(declare-fun e!72231 () Bool)

(assert (=> b!111086 (=> (not res!54856) (not e!72231))))

(declare-fun e!72227 () Bool)

(assert (=> b!111086 (= res!54856 e!72227)))

(declare-fun res!54859 () Bool)

(assert (=> b!111086 (=> res!54859 e!72227)))

(declare-fun e!72232 () Bool)

(assert (=> b!111086 (= res!54859 (not e!72232))))

(declare-fun res!54863 () Bool)

(assert (=> b!111086 (=> (not res!54863) (not e!72232))))

(assert (=> b!111086 (= res!54863 (bvslt #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))))))

(declare-fun bm!11835 () Bool)

(declare-fun call!11841 () Bool)

(declare-fun lt!57264 () ListLongMap!1547)

(assert (=> bm!11835 (= call!11841 (contains!824 lt!57264 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!111087 () Bool)

(declare-fun e!72224 () Unit!3382)

(declare-fun Unit!3436 () Unit!3382)

(assert (=> b!111087 (= e!72224 Unit!3436)))

(declare-fun b!111088 () Bool)

(declare-fun e!72222 () ListLongMap!1547)

(declare-fun call!11844 () ListLongMap!1547)

(assert (=> b!111088 (= e!72222 (+!144 call!11844 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16))))))

(declare-fun b!111089 () Bool)

(declare-fun e!72226 () Bool)

(assert (=> b!111089 (= e!72227 e!72226)))

(declare-fun res!54857 () Bool)

(assert (=> b!111089 (=> (not res!54857) (not e!72226))))

(assert (=> b!111089 (= res!54857 (contains!824 lt!57264 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!111089 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))))))

(declare-fun b!111090 () Bool)

(declare-fun lt!57275 () Unit!3382)

(assert (=> b!111090 (= e!72224 lt!57275)))

(declare-fun lt!57265 () ListLongMap!1547)

(assert (=> b!111090 (= lt!57265 (getCurrentListMapNoExtraKeys!111 (_keys!4340 newMap!16) lt!56625 (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!57272 () (_ BitVec 64))

(assert (=> b!111090 (= lt!57272 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57267 () (_ BitVec 64))

(assert (=> b!111090 (= lt!57267 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!57268 () Unit!3382)

(assert (=> b!111090 (= lt!57268 (addStillContains!76 lt!57265 lt!57272 (zeroValue!2497 newMap!16) lt!57267))))

(assert (=> b!111090 (contains!824 (+!144 lt!57265 (tuple2!2389 lt!57272 (zeroValue!2497 newMap!16))) lt!57267)))

(declare-fun lt!57270 () Unit!3382)

(assert (=> b!111090 (= lt!57270 lt!57268)))

(declare-fun lt!57255 () ListLongMap!1547)

(assert (=> b!111090 (= lt!57255 (getCurrentListMapNoExtraKeys!111 (_keys!4340 newMap!16) lt!56625 (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!57260 () (_ BitVec 64))

(assert (=> b!111090 (= lt!57260 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57257 () (_ BitVec 64))

(assert (=> b!111090 (= lt!57257 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!57259 () Unit!3382)

(assert (=> b!111090 (= lt!57259 (addApplyDifferent!76 lt!57255 lt!57260 (minValue!2497 newMap!16) lt!57257))))

(assert (=> b!111090 (= (apply!100 (+!144 lt!57255 (tuple2!2389 lt!57260 (minValue!2497 newMap!16))) lt!57257) (apply!100 lt!57255 lt!57257))))

(declare-fun lt!57254 () Unit!3382)

(assert (=> b!111090 (= lt!57254 lt!57259)))

(declare-fun lt!57263 () ListLongMap!1547)

(assert (=> b!111090 (= lt!57263 (getCurrentListMapNoExtraKeys!111 (_keys!4340 newMap!16) lt!56625 (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!57274 () (_ BitVec 64))

(assert (=> b!111090 (= lt!57274 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57269 () (_ BitVec 64))

(assert (=> b!111090 (= lt!57269 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!57258 () Unit!3382)

(assert (=> b!111090 (= lt!57258 (addApplyDifferent!76 lt!57263 lt!57274 (zeroValue!2497 newMap!16) lt!57269))))

(assert (=> b!111090 (= (apply!100 (+!144 lt!57263 (tuple2!2389 lt!57274 (zeroValue!2497 newMap!16))) lt!57269) (apply!100 lt!57263 lt!57269))))

(declare-fun lt!57266 () Unit!3382)

(assert (=> b!111090 (= lt!57266 lt!57258)))

(declare-fun lt!57273 () ListLongMap!1547)

(assert (=> b!111090 (= lt!57273 (getCurrentListMapNoExtraKeys!111 (_keys!4340 newMap!16) lt!56625 (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!57262 () (_ BitVec 64))

(assert (=> b!111090 (= lt!57262 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57256 () (_ BitVec 64))

(assert (=> b!111090 (= lt!57256 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!111090 (= lt!57275 (addApplyDifferent!76 lt!57273 lt!57262 (minValue!2497 newMap!16) lt!57256))))

(assert (=> b!111090 (= (apply!100 (+!144 lt!57273 (tuple2!2389 lt!57262 (minValue!2497 newMap!16))) lt!57256) (apply!100 lt!57273 lt!57256))))

(declare-fun d!31465 () Bool)

(assert (=> d!31465 e!72231))

(declare-fun res!54861 () Bool)

(assert (=> d!31465 (=> (not res!54861) (not e!72231))))

(assert (=> d!31465 (= res!54861 (or (bvsge #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))))))))

(declare-fun lt!57271 () ListLongMap!1547)

(assert (=> d!31465 (= lt!57264 lt!57271)))

(declare-fun lt!57261 () Unit!3382)

(assert (=> d!31465 (= lt!57261 e!72224)))

(declare-fun c!19791 () Bool)

(declare-fun e!72225 () Bool)

(assert (=> d!31465 (= c!19791 e!72225)))

(declare-fun res!54858 () Bool)

(assert (=> d!31465 (=> (not res!54858) (not e!72225))))

(assert (=> d!31465 (= res!54858 (bvslt #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))))))

(assert (=> d!31465 (= lt!57271 e!72222)))

(declare-fun c!19788 () Bool)

(assert (=> d!31465 (= c!19788 (and (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!31465 (validMask!0 (mask!6794 newMap!16))))

(assert (=> d!31465 (= (getCurrentListMap!475 (_keys!4340 newMap!16) lt!56625 (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) lt!57264)))

(declare-fun bm!11836 () Bool)

(declare-fun call!11842 () ListLongMap!1547)

(declare-fun call!11839 () ListLongMap!1547)

(assert (=> bm!11836 (= call!11842 call!11839)))

(declare-fun b!111091 () Bool)

(declare-fun e!72230 () ListLongMap!1547)

(declare-fun call!11840 () ListLongMap!1547)

(assert (=> b!111091 (= e!72230 call!11840)))

(declare-fun b!111092 () Bool)

(declare-fun e!72229 () Bool)

(declare-fun call!11843 () Bool)

(assert (=> b!111092 (= e!72229 (not call!11843))))

(declare-fun b!111093 () Bool)

(declare-fun c!19787 () Bool)

(assert (=> b!111093 (= c!19787 (and (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!72233 () ListLongMap!1547)

(assert (=> b!111093 (= e!72230 e!72233)))

(declare-fun b!111094 () Bool)

(declare-fun e!72223 () Bool)

(assert (=> b!111094 (= e!72223 (not call!11841))))

(declare-fun bm!11837 () Bool)

(assert (=> bm!11837 (= call!11843 (contains!824 lt!57264 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!111095 () Bool)

(declare-fun e!72221 () Bool)

(assert (=> b!111095 (= e!72223 e!72221)))

(declare-fun res!54860 () Bool)

(assert (=> b!111095 (= res!54860 call!11841)))

(assert (=> b!111095 (=> (not res!54860) (not e!72221))))

(declare-fun b!111096 () Bool)

(assert (=> b!111096 (= e!72226 (= (apply!100 lt!57264 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)) (get!1353 (select (arr!2073 lt!56625) #b00000000000000000000000000000000) (dynLambda!390 (defaultEntry!2626 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!111096 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2330 lt!56625)))))

(assert (=> b!111096 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))))))

(declare-fun c!19786 () Bool)

(declare-fun bm!11838 () Bool)

(declare-fun call!11838 () ListLongMap!1547)

(assert (=> bm!11838 (= call!11844 (+!144 (ite c!19788 call!11839 (ite c!19786 call!11842 call!11838)) (ite (or c!19788 c!19786) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 newMap!16)) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16)))))))

(declare-fun b!111097 () Bool)

(declare-fun e!72228 () Bool)

(assert (=> b!111097 (= e!72228 (= (apply!100 lt!57264 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2497 newMap!16)))))

(declare-fun b!111098 () Bool)

(assert (=> b!111098 (= e!72231 e!72223)))

(declare-fun c!19790 () Bool)

(assert (=> b!111098 (= c!19790 (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11839 () Bool)

(assert (=> bm!11839 (= call!11840 call!11844)))

(declare-fun b!111099 () Bool)

(declare-fun res!54862 () Bool)

(assert (=> b!111099 (=> (not res!54862) (not e!72231))))

(assert (=> b!111099 (= res!54862 e!72229)))

(declare-fun c!19789 () Bool)

(assert (=> b!111099 (= c!19789 (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!111100 () Bool)

(assert (=> b!111100 (= e!72233 call!11838)))

(declare-fun bm!11840 () Bool)

(assert (=> bm!11840 (= call!11838 call!11842)))

(declare-fun b!111101 () Bool)

(assert (=> b!111101 (= e!72233 call!11840)))

(declare-fun b!111102 () Bool)

(assert (=> b!111102 (= e!72225 (validKeyInArray!0 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!111103 () Bool)

(assert (=> b!111103 (= e!72229 e!72228)))

(declare-fun res!54864 () Bool)

(assert (=> b!111103 (= res!54864 call!11843)))

(assert (=> b!111103 (=> (not res!54864) (not e!72228))))

(declare-fun b!111104 () Bool)

(assert (=> b!111104 (= e!72221 (= (apply!100 lt!57264 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2497 newMap!16)))))

(declare-fun b!111105 () Bool)

(assert (=> b!111105 (= e!72232 (validKeyInArray!0 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!111106 () Bool)

(assert (=> b!111106 (= e!72222 e!72230)))

(assert (=> b!111106 (= c!19786 (and (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11841 () Bool)

(assert (=> bm!11841 (= call!11839 (getCurrentListMapNoExtraKeys!111 (_keys!4340 newMap!16) lt!56625 (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(assert (= (and d!31465 c!19788) b!111088))

(assert (= (and d!31465 (not c!19788)) b!111106))

(assert (= (and b!111106 c!19786) b!111091))

(assert (= (and b!111106 (not c!19786)) b!111093))

(assert (= (and b!111093 c!19787) b!111101))

(assert (= (and b!111093 (not c!19787)) b!111100))

(assert (= (or b!111101 b!111100) bm!11840))

(assert (= (or b!111091 bm!11840) bm!11836))

(assert (= (or b!111091 b!111101) bm!11839))

(assert (= (or b!111088 bm!11836) bm!11841))

(assert (= (or b!111088 bm!11839) bm!11838))

(assert (= (and d!31465 res!54858) b!111102))

(assert (= (and d!31465 c!19791) b!111090))

(assert (= (and d!31465 (not c!19791)) b!111087))

(assert (= (and d!31465 res!54861) b!111086))

(assert (= (and b!111086 res!54863) b!111105))

(assert (= (and b!111086 (not res!54859)) b!111089))

(assert (= (and b!111089 res!54857) b!111096))

(assert (= (and b!111086 res!54856) b!111099))

(assert (= (and b!111099 c!19789) b!111103))

(assert (= (and b!111099 (not c!19789)) b!111092))

(assert (= (and b!111103 res!54864) b!111097))

(assert (= (or b!111103 b!111092) bm!11837))

(assert (= (and b!111099 res!54862) b!111098))

(assert (= (and b!111098 c!19790) b!111095))

(assert (= (and b!111098 (not c!19790)) b!111094))

(assert (= (and b!111095 res!54860) b!111104))

(assert (= (or b!111095 b!111094) bm!11835))

(declare-fun b_lambda!4967 () Bool)

(assert (=> (not b_lambda!4967) (not b!111096)))

(assert (=> b!111096 t!5751))

(declare-fun b_and!6829 () Bool)

(assert (= b_and!6825 (and (=> t!5751 result!3533) b_and!6829)))

(assert (=> b!111096 t!5753))

(declare-fun b_and!6831 () Bool)

(assert (= b_and!6827 (and (=> t!5753 result!3535) b_and!6831)))

(assert (=> b!111105 m!124605))

(assert (=> b!111105 m!124605))

(assert (=> b!111105 m!124607))

(declare-fun m!126255 () Bool)

(assert (=> b!111090 m!126255))

(declare-fun m!126257 () Bool)

(assert (=> b!111090 m!126257))

(declare-fun m!126259 () Bool)

(assert (=> b!111090 m!126259))

(declare-fun m!126261 () Bool)

(assert (=> b!111090 m!126261))

(declare-fun m!126263 () Bool)

(assert (=> b!111090 m!126263))

(declare-fun m!126265 () Bool)

(assert (=> b!111090 m!126265))

(declare-fun m!126267 () Bool)

(assert (=> b!111090 m!126267))

(declare-fun m!126269 () Bool)

(assert (=> b!111090 m!126269))

(declare-fun m!126271 () Bool)

(assert (=> b!111090 m!126271))

(declare-fun m!126273 () Bool)

(assert (=> b!111090 m!126273))

(declare-fun m!126275 () Bool)

(assert (=> b!111090 m!126275))

(assert (=> b!111090 m!126263))

(assert (=> b!111090 m!126267))

(declare-fun m!126277 () Bool)

(assert (=> b!111090 m!126277))

(assert (=> b!111090 m!124605))

(declare-fun m!126279 () Bool)

(assert (=> b!111090 m!126279))

(assert (=> b!111090 m!126273))

(declare-fun m!126281 () Bool)

(assert (=> b!111090 m!126281))

(declare-fun m!126283 () Bool)

(assert (=> b!111090 m!126283))

(assert (=> b!111090 m!126281))

(declare-fun m!126285 () Bool)

(assert (=> b!111090 m!126285))

(assert (=> b!111102 m!124605))

(assert (=> b!111102 m!124605))

(assert (=> b!111102 m!124607))

(declare-fun m!126287 () Bool)

(assert (=> bm!11837 m!126287))

(assert (=> bm!11841 m!126279))

(assert (=> d!31465 m!124579))

(declare-fun m!126289 () Bool)

(assert (=> bm!11838 m!126289))

(declare-fun m!126291 () Bool)

(assert (=> b!111097 m!126291))

(declare-fun m!126293 () Bool)

(assert (=> bm!11835 m!126293))

(declare-fun m!126295 () Bool)

(assert (=> b!111104 m!126295))

(assert (=> b!111096 m!124605))

(declare-fun m!126297 () Bool)

(assert (=> b!111096 m!126297))

(assert (=> b!111096 m!124605))

(declare-fun m!126299 () Bool)

(assert (=> b!111096 m!126299))

(assert (=> b!111096 m!126299))

(assert (=> b!111096 m!124767))

(declare-fun m!126301 () Bool)

(assert (=> b!111096 m!126301))

(assert (=> b!111096 m!124767))

(declare-fun m!126303 () Bool)

(assert (=> b!111088 m!126303))

(assert (=> b!111089 m!124605))

(assert (=> b!111089 m!124605))

(declare-fun m!126305 () Bool)

(assert (=> b!111089 m!126305))

(assert (=> b!110109 d!31465))

(assert (=> d!30871 d!30901))

(declare-fun d!31467 () Bool)

(declare-fun e!72236 () Bool)

(assert (=> d!31467 e!72236))

(declare-fun res!54870 () Bool)

(assert (=> d!31467 (=> (not res!54870) (not e!72236))))

(declare-fun lt!57278 () SeekEntryResult!255)

(assert (=> d!31467 (= res!54870 ((_ is Found!255) lt!57278))))

(assert (=> d!31467 (= lt!57278 (seekEntryOrOpen!0 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (_keys!4340 newMap!16) (mask!6794 newMap!16)))))

(assert (=> d!31467 true))

(declare-fun _$33!96 () Unit!3382)

(assert (=> d!31467 (= (choose!692 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (defaultEntry!2626 newMap!16)) _$33!96)))

(declare-fun b!111111 () Bool)

(declare-fun res!54869 () Bool)

(assert (=> b!111111 (=> (not res!54869) (not e!72236))))

(assert (=> b!111111 (= res!54869 (inRange!0 (index!3171 lt!57278) (mask!6794 newMap!16)))))

(declare-fun b!111112 () Bool)

(assert (=> b!111112 (= e!72236 (= (select (arr!2072 (_keys!4340 newMap!16)) (index!3171 lt!57278)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(assert (= (and d!31467 res!54870) b!111111))

(assert (= (and b!111111 res!54869) b!111112))

(assert (=> d!31467 m!124087))

(assert (=> d!31467 m!124417))

(declare-fun m!126307 () Bool)

(assert (=> b!111111 m!126307))

(declare-fun m!126309 () Bool)

(assert (=> b!111112 m!126309))

(assert (=> d!30871 d!31467))

(assert (=> d!30871 d!31187))

(declare-fun b!111113 () Bool)

(declare-fun e!72241 () ListLongMap!1547)

(declare-fun call!11845 () ListLongMap!1547)

(assert (=> b!111113 (= e!72241 call!11845)))

(declare-fun d!31469 () Bool)

(declare-fun e!72238 () Bool)

(assert (=> d!31469 e!72238))

(declare-fun res!54872 () Bool)

(assert (=> d!31469 (=> (not res!54872) (not e!72238))))

(declare-fun lt!57285 () ListLongMap!1547)

(assert (=> d!31469 (= res!54872 (not (contains!824 lt!57285 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!72240 () ListLongMap!1547)

(assert (=> d!31469 (= lt!57285 e!72240)))

(declare-fun c!19795 () Bool)

(assert (=> d!31469 (= c!19795 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2329 (_keys!4340 (v!2930 (underlying!370 thiss!992))))))))

(assert (=> d!31469 (validMask!0 (mask!6794 (v!2930 (underlying!370 thiss!992))))))

(assert (=> d!31469 (= (getCurrentListMapNoExtraKeys!111 (_keys!4340 (v!2930 (underlying!370 thiss!992))) (_values!2609 (v!2930 (underlying!370 thiss!992))) (mask!6794 (v!2930 (underlying!370 thiss!992))) (extraKeys!2423 (v!2930 (underlying!370 thiss!992))) (zeroValue!2497 (v!2930 (underlying!370 thiss!992))) (minValue!2497 (v!2930 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2626 (v!2930 (underlying!370 thiss!992)))) lt!57285)))

(declare-fun b!111114 () Bool)

(declare-fun e!72237 () Bool)

(assert (=> b!111114 (= e!72237 (isEmpty!382 lt!57285))))

(declare-fun b!111115 () Bool)

(assert (=> b!111115 (= e!72237 (= lt!57285 (getCurrentListMapNoExtraKeys!111 (_keys!4340 (v!2930 (underlying!370 thiss!992))) (_values!2609 (v!2930 (underlying!370 thiss!992))) (mask!6794 (v!2930 (underlying!370 thiss!992))) (extraKeys!2423 (v!2930 (underlying!370 thiss!992))) (zeroValue!2497 (v!2930 (underlying!370 thiss!992))) (minValue!2497 (v!2930 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun bm!11842 () Bool)

(assert (=> bm!11842 (= call!11845 (getCurrentListMapNoExtraKeys!111 (_keys!4340 (v!2930 (underlying!370 thiss!992))) (_values!2609 (v!2930 (underlying!370 thiss!992))) (mask!6794 (v!2930 (underlying!370 thiss!992))) (extraKeys!2423 (v!2930 (underlying!370 thiss!992))) (zeroValue!2497 (v!2930 (underlying!370 thiss!992))) (minValue!2497 (v!2930 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2626 (v!2930 (underlying!370 thiss!992)))))))

(declare-fun b!111116 () Bool)

(declare-fun e!72243 () Bool)

(assert (=> b!111116 (= e!72243 e!72237)))

(declare-fun c!19792 () Bool)

(assert (=> b!111116 (= c!19792 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2329 (_keys!4340 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun b!111117 () Bool)

(assert (=> b!111117 (= e!72238 e!72243)))

(declare-fun c!19794 () Bool)

(declare-fun e!72242 () Bool)

(assert (=> b!111117 (= c!19794 e!72242)))

(declare-fun res!54873 () Bool)

(assert (=> b!111117 (=> (not res!54873) (not e!72242))))

(assert (=> b!111117 (= res!54873 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2329 (_keys!4340 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun b!111118 () Bool)

(declare-fun res!54871 () Bool)

(assert (=> b!111118 (=> (not res!54871) (not e!72238))))

(assert (=> b!111118 (= res!54871 (not (contains!824 lt!57285 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!111119 () Bool)

(assert (=> b!111119 (= e!72242 (validKeyInArray!0 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!111119 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!111120 () Bool)

(declare-fun e!72239 () Bool)

(assert (=> b!111120 (= e!72243 e!72239)))

(assert (=> b!111120 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2329 (_keys!4340 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun res!54874 () Bool)

(assert (=> b!111120 (= res!54874 (contains!824 lt!57285 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!111120 (=> (not res!54874) (not e!72239))))

(declare-fun b!111121 () Bool)

(declare-fun lt!57283 () Unit!3382)

(declare-fun lt!57282 () Unit!3382)

(assert (=> b!111121 (= lt!57283 lt!57282)))

(declare-fun lt!57281 () ListLongMap!1547)

(declare-fun lt!57284 () V!3241)

(declare-fun lt!57279 () (_ BitVec 64))

(declare-fun lt!57280 () (_ BitVec 64))

(assert (=> b!111121 (not (contains!824 (+!144 lt!57281 (tuple2!2389 lt!57280 lt!57284)) lt!57279))))

(assert (=> b!111121 (= lt!57282 (addStillNotContains!50 lt!57281 lt!57280 lt!57284 lt!57279))))

(assert (=> b!111121 (= lt!57279 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!111121 (= lt!57284 (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!111121 (= lt!57280 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (=> b!111121 (= lt!57281 call!11845)))

(assert (=> b!111121 (= e!72241 (+!144 call!11845 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!111122 () Bool)

(assert (=> b!111122 (= e!72240 e!72241)))

(declare-fun c!19793 () Bool)

(assert (=> b!111122 (= c!19793 (validKeyInArray!0 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!111123 () Bool)

(assert (=> b!111123 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2329 (_keys!4340 (v!2930 (underlying!370 thiss!992))))))))

(assert (=> b!111123 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2330 (_values!2609 (v!2930 (underlying!370 thiss!992))))))))

(assert (=> b!111123 (= e!72239 (= (apply!100 lt!57285 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!111124 () Bool)

(assert (=> b!111124 (= e!72240 (ListLongMap!1548 Nil!1606))))

(assert (= (and d!31469 c!19795) b!111124))

(assert (= (and d!31469 (not c!19795)) b!111122))

(assert (= (and b!111122 c!19793) b!111121))

(assert (= (and b!111122 (not c!19793)) b!111113))

(assert (= (or b!111121 b!111113) bm!11842))

(assert (= (and d!31469 res!54872) b!111118))

(assert (= (and b!111118 res!54871) b!111117))

(assert (= (and b!111117 res!54873) b!111119))

(assert (= (and b!111117 c!19794) b!111120))

(assert (= (and b!111117 (not c!19794)) b!111116))

(assert (= (and b!111120 res!54874) b!111123))

(assert (= (and b!111116 c!19792) b!111115))

(assert (= (and b!111116 (not c!19792)) b!111114))

(declare-fun b_lambda!4969 () Bool)

(assert (=> (not b_lambda!4969) (not b!111121)))

(assert (=> b!111121 t!5735))

(declare-fun b_and!6833 () Bool)

(assert (= b_and!6829 (and (=> t!5735 result!3513) b_and!6833)))

(assert (=> b!111121 t!5737))

(declare-fun b_and!6835 () Bool)

(assert (= b_and!6831 (and (=> t!5737 result!3517) b_and!6835)))

(declare-fun b_lambda!4971 () Bool)

(assert (=> (not b_lambda!4971) (not b!111123)))

(assert (=> b!111123 t!5735))

(declare-fun b_and!6837 () Bool)

(assert (= b_and!6833 (and (=> t!5735 result!3513) b_and!6837)))

(assert (=> b!111123 t!5737))

(declare-fun b_and!6839 () Bool)

(assert (= b_and!6835 (and (=> t!5737 result!3517) b_and!6839)))

(declare-fun m!126311 () Bool)

(assert (=> b!111120 m!126311))

(assert (=> b!111120 m!126311))

(declare-fun m!126313 () Bool)

(assert (=> b!111120 m!126313))

(declare-fun m!126315 () Bool)

(assert (=> bm!11842 m!126315))

(assert (=> b!111123 m!126311))

(declare-fun m!126317 () Bool)

(assert (=> b!111123 m!126317))

(assert (=> b!111123 m!126311))

(declare-fun m!126319 () Bool)

(assert (=> b!111123 m!126319))

(assert (=> b!111123 m!126317))

(assert (=> b!111123 m!124091))

(declare-fun m!126321 () Bool)

(assert (=> b!111123 m!126321))

(assert (=> b!111123 m!124091))

(assert (=> b!111122 m!126311))

(assert (=> b!111122 m!126311))

(declare-fun m!126323 () Bool)

(assert (=> b!111122 m!126323))

(assert (=> b!111119 m!126311))

(assert (=> b!111119 m!126311))

(assert (=> b!111119 m!126323))

(assert (=> b!111115 m!126315))

(declare-fun m!126325 () Bool)

(assert (=> d!31469 m!126325))

(assert (=> d!31469 m!124107))

(declare-fun m!126327 () Bool)

(assert (=> b!111114 m!126327))

(assert (=> b!111121 m!126311))

(assert (=> b!111121 m!126317))

(assert (=> b!111121 m!124091))

(assert (=> b!111121 m!126321))

(declare-fun m!126329 () Bool)

(assert (=> b!111121 m!126329))

(declare-fun m!126331 () Bool)

(assert (=> b!111121 m!126331))

(declare-fun m!126333 () Bool)

(assert (=> b!111121 m!126333))

(assert (=> b!111121 m!126317))

(assert (=> b!111121 m!126331))

(declare-fun m!126335 () Bool)

(assert (=> b!111121 m!126335))

(assert (=> b!111121 m!124091))

(declare-fun m!126337 () Bool)

(assert (=> b!111118 m!126337))

(assert (=> bm!11732 d!31469))

(assert (=> b!110189 d!30845))

(assert (=> bm!11764 d!30971))

(declare-fun d!31471 () Bool)

(declare-fun e!72245 () Bool)

(assert (=> d!31471 e!72245))

(declare-fun res!54875 () Bool)

(assert (=> d!31471 (=> res!54875 e!72245)))

(declare-fun lt!57288 () Bool)

(assert (=> d!31471 (= res!54875 (not lt!57288))))

(declare-fun lt!57289 () Bool)

(assert (=> d!31471 (= lt!57288 lt!57289)))

(declare-fun lt!57286 () Unit!3382)

(declare-fun e!72244 () Unit!3382)

(assert (=> d!31471 (= lt!57286 e!72244)))

(declare-fun c!19796 () Bool)

(assert (=> d!31471 (= c!19796 lt!57289)))

(assert (=> d!31471 (= lt!57289 (containsKey!162 (toList!789 lt!56760) (_1!1205 (tuple2!2389 lt!56474 lt!56478))))))

(assert (=> d!31471 (= (contains!824 lt!56760 (_1!1205 (tuple2!2389 lt!56474 lt!56478))) lt!57288)))

(declare-fun b!111125 () Bool)

(declare-fun lt!57287 () Unit!3382)

(assert (=> b!111125 (= e!72244 lt!57287)))

(assert (=> b!111125 (= lt!57287 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 lt!56760) (_1!1205 (tuple2!2389 lt!56474 lt!56478))))))

(assert (=> b!111125 (isDefined!111 (getValueByKey!159 (toList!789 lt!56760) (_1!1205 (tuple2!2389 lt!56474 lt!56478))))))

(declare-fun b!111126 () Bool)

(declare-fun Unit!3437 () Unit!3382)

(assert (=> b!111126 (= e!72244 Unit!3437)))

(declare-fun b!111127 () Bool)

(assert (=> b!111127 (= e!72245 (isDefined!111 (getValueByKey!159 (toList!789 lt!56760) (_1!1205 (tuple2!2389 lt!56474 lt!56478)))))))

(assert (= (and d!31471 c!19796) b!111125))

(assert (= (and d!31471 (not c!19796)) b!111126))

(assert (= (and d!31471 (not res!54875)) b!111127))

(declare-fun m!126339 () Bool)

(assert (=> d!31471 m!126339))

(declare-fun m!126341 () Bool)

(assert (=> b!111125 m!126341))

(assert (=> b!111125 m!124561))

(assert (=> b!111125 m!124561))

(declare-fun m!126343 () Bool)

(assert (=> b!111125 m!126343))

(assert (=> b!111127 m!124561))

(assert (=> b!111127 m!124561))

(assert (=> b!111127 m!126343))

(assert (=> d!30865 d!31471))

(declare-fun b!111131 () Bool)

(declare-fun e!72247 () Option!165)

(assert (=> b!111131 (= e!72247 None!163)))

(declare-fun b!111128 () Bool)

(declare-fun e!72246 () Option!165)

(assert (=> b!111128 (= e!72246 (Some!164 (_2!1205 (h!2204 lt!56759))))))

(declare-fun b!111130 () Bool)

(assert (=> b!111130 (= e!72247 (getValueByKey!159 (t!5738 lt!56759) (_1!1205 (tuple2!2389 lt!56474 lt!56478))))))

(declare-fun c!19797 () Bool)

(declare-fun d!31473 () Bool)

(assert (=> d!31473 (= c!19797 (and ((_ is Cons!1605) lt!56759) (= (_1!1205 (h!2204 lt!56759)) (_1!1205 (tuple2!2389 lt!56474 lt!56478)))))))

(assert (=> d!31473 (= (getValueByKey!159 lt!56759 (_1!1205 (tuple2!2389 lt!56474 lt!56478))) e!72246)))

(declare-fun b!111129 () Bool)

(assert (=> b!111129 (= e!72246 e!72247)))

(declare-fun c!19798 () Bool)

(assert (=> b!111129 (= c!19798 (and ((_ is Cons!1605) lt!56759) (not (= (_1!1205 (h!2204 lt!56759)) (_1!1205 (tuple2!2389 lt!56474 lt!56478))))))))

(assert (= (and d!31473 c!19797) b!111128))

(assert (= (and d!31473 (not c!19797)) b!111129))

(assert (= (and b!111129 c!19798) b!111130))

(assert (= (and b!111129 (not c!19798)) b!111131))

(declare-fun m!126345 () Bool)

(assert (=> b!111130 m!126345))

(assert (=> d!30865 d!31473))

(declare-fun d!31475 () Bool)

(assert (=> d!31475 (= (getValueByKey!159 lt!56759 (_1!1205 (tuple2!2389 lt!56474 lt!56478))) (Some!164 (_2!1205 (tuple2!2389 lt!56474 lt!56478))))))

(declare-fun lt!57290 () Unit!3382)

(assert (=> d!31475 (= lt!57290 (choose!695 lt!56759 (_1!1205 (tuple2!2389 lt!56474 lt!56478)) (_2!1205 (tuple2!2389 lt!56474 lt!56478))))))

(declare-fun e!72248 () Bool)

(assert (=> d!31475 e!72248))

(declare-fun res!54876 () Bool)

(assert (=> d!31475 (=> (not res!54876) (not e!72248))))

(assert (=> d!31475 (= res!54876 (isStrictlySorted!298 lt!56759))))

(assert (=> d!31475 (= (lemmaContainsTupThenGetReturnValue!75 lt!56759 (_1!1205 (tuple2!2389 lt!56474 lt!56478)) (_2!1205 (tuple2!2389 lt!56474 lt!56478))) lt!57290)))

(declare-fun b!111132 () Bool)

(declare-fun res!54877 () Bool)

(assert (=> b!111132 (=> (not res!54877) (not e!72248))))

(assert (=> b!111132 (= res!54877 (containsKey!162 lt!56759 (_1!1205 (tuple2!2389 lt!56474 lt!56478))))))

(declare-fun b!111133 () Bool)

(assert (=> b!111133 (= e!72248 (contains!827 lt!56759 (tuple2!2389 (_1!1205 (tuple2!2389 lt!56474 lt!56478)) (_2!1205 (tuple2!2389 lt!56474 lt!56478)))))))

(assert (= (and d!31475 res!54876) b!111132))

(assert (= (and b!111132 res!54877) b!111133))

(assert (=> d!31475 m!124555))

(declare-fun m!126347 () Bool)

(assert (=> d!31475 m!126347))

(declare-fun m!126349 () Bool)

(assert (=> d!31475 m!126349))

(declare-fun m!126351 () Bool)

(assert (=> b!111132 m!126351))

(declare-fun m!126353 () Bool)

(assert (=> b!111133 m!126353))

(assert (=> d!30865 d!31475))

(declare-fun b!111134 () Bool)

(declare-fun e!72251 () List!1609)

(assert (=> b!111134 (= e!72251 (insertStrictlySorted!78 (t!5738 (toList!789 lt!56475)) (_1!1205 (tuple2!2389 lt!56474 lt!56478)) (_2!1205 (tuple2!2389 lt!56474 lt!56478))))))

(declare-fun b!111135 () Bool)

(declare-fun res!54879 () Bool)

(declare-fun e!72253 () Bool)

(assert (=> b!111135 (=> (not res!54879) (not e!72253))))

(declare-fun lt!57291 () List!1609)

(assert (=> b!111135 (= res!54879 (containsKey!162 lt!57291 (_1!1205 (tuple2!2389 lt!56474 lt!56478))))))

(declare-fun b!111136 () Bool)

(declare-fun e!72252 () List!1609)

(declare-fun call!11847 () List!1609)

(assert (=> b!111136 (= e!72252 call!11847)))

(declare-fun bm!11843 () Bool)

(declare-fun call!11848 () List!1609)

(declare-fun call!11846 () List!1609)

(assert (=> bm!11843 (= call!11848 call!11846)))

(declare-fun bm!11844 () Bool)

(assert (=> bm!11844 (= call!11847 call!11848)))

(declare-fun b!111137 () Bool)

(assert (=> b!111137 (= e!72252 call!11847)))

(declare-fun bm!11845 () Bool)

(declare-fun c!19801 () Bool)

(assert (=> bm!11845 (= call!11846 ($colon$colon!82 e!72251 (ite c!19801 (h!2204 (toList!789 lt!56475)) (tuple2!2389 (_1!1205 (tuple2!2389 lt!56474 lt!56478)) (_2!1205 (tuple2!2389 lt!56474 lt!56478))))))))

(declare-fun c!19802 () Bool)

(assert (=> bm!11845 (= c!19802 c!19801)))

(declare-fun b!111138 () Bool)

(declare-fun e!72250 () List!1609)

(assert (=> b!111138 (= e!72250 call!11848)))

(declare-fun d!31477 () Bool)

(assert (=> d!31477 e!72253))

(declare-fun res!54878 () Bool)

(assert (=> d!31477 (=> (not res!54878) (not e!72253))))

(assert (=> d!31477 (= res!54878 (isStrictlySorted!298 lt!57291))))

(declare-fun e!72249 () List!1609)

(assert (=> d!31477 (= lt!57291 e!72249)))

(assert (=> d!31477 (= c!19801 (and ((_ is Cons!1605) (toList!789 lt!56475)) (bvslt (_1!1205 (h!2204 (toList!789 lt!56475))) (_1!1205 (tuple2!2389 lt!56474 lt!56478)))))))

(assert (=> d!31477 (isStrictlySorted!298 (toList!789 lt!56475))))

(assert (=> d!31477 (= (insertStrictlySorted!78 (toList!789 lt!56475) (_1!1205 (tuple2!2389 lt!56474 lt!56478)) (_2!1205 (tuple2!2389 lt!56474 lt!56478))) lt!57291)))

(declare-fun b!111139 () Bool)

(assert (=> b!111139 (= e!72249 call!11846)))

(declare-fun c!19799 () Bool)

(declare-fun b!111140 () Bool)

(assert (=> b!111140 (= c!19799 (and ((_ is Cons!1605) (toList!789 lt!56475)) (bvsgt (_1!1205 (h!2204 (toList!789 lt!56475))) (_1!1205 (tuple2!2389 lt!56474 lt!56478)))))))

(assert (=> b!111140 (= e!72250 e!72252)))

(declare-fun b!111141 () Bool)

(declare-fun c!19800 () Bool)

(assert (=> b!111141 (= e!72251 (ite c!19800 (t!5738 (toList!789 lt!56475)) (ite c!19799 (Cons!1605 (h!2204 (toList!789 lt!56475)) (t!5738 (toList!789 lt!56475))) Nil!1606)))))

(declare-fun b!111142 () Bool)

(assert (=> b!111142 (= e!72253 (contains!827 lt!57291 (tuple2!2389 (_1!1205 (tuple2!2389 lt!56474 lt!56478)) (_2!1205 (tuple2!2389 lt!56474 lt!56478)))))))

(declare-fun b!111143 () Bool)

(assert (=> b!111143 (= e!72249 e!72250)))

(assert (=> b!111143 (= c!19800 (and ((_ is Cons!1605) (toList!789 lt!56475)) (= (_1!1205 (h!2204 (toList!789 lt!56475))) (_1!1205 (tuple2!2389 lt!56474 lt!56478)))))))

(assert (= (and d!31477 c!19801) b!111139))

(assert (= (and d!31477 (not c!19801)) b!111143))

(assert (= (and b!111143 c!19800) b!111138))

(assert (= (and b!111143 (not c!19800)) b!111140))

(assert (= (and b!111140 c!19799) b!111136))

(assert (= (and b!111140 (not c!19799)) b!111137))

(assert (= (or b!111136 b!111137) bm!11844))

(assert (= (or b!111138 bm!11844) bm!11843))

(assert (= (or b!111139 bm!11843) bm!11845))

(assert (= (and bm!11845 c!19802) b!111134))

(assert (= (and bm!11845 (not c!19802)) b!111141))

(assert (= (and d!31477 res!54878) b!111135))

(assert (= (and b!111135 res!54879) b!111142))

(declare-fun m!126355 () Bool)

(assert (=> bm!11845 m!126355))

(declare-fun m!126357 () Bool)

(assert (=> b!111142 m!126357))

(declare-fun m!126359 () Bool)

(assert (=> b!111135 m!126359))

(declare-fun m!126361 () Bool)

(assert (=> d!31477 m!126361))

(declare-fun m!126363 () Bool)

(assert (=> d!31477 m!126363))

(declare-fun m!126365 () Bool)

(assert (=> b!111134 m!126365))

(assert (=> d!30865 d!31477))

(declare-fun d!31479 () Bool)

(declare-fun e!72255 () Bool)

(assert (=> d!31479 e!72255))

(declare-fun res!54880 () Bool)

(assert (=> d!31479 (=> res!54880 e!72255)))

(declare-fun lt!57294 () Bool)

(assert (=> d!31479 (= res!54880 (not lt!57294))))

(declare-fun lt!57295 () Bool)

(assert (=> d!31479 (= lt!57294 lt!57295)))

(declare-fun lt!57292 () Unit!3382)

(declare-fun e!72254 () Unit!3382)

(assert (=> d!31479 (= lt!57292 e!72254)))

(declare-fun c!19803 () Bool)

(assert (=> d!31479 (= c!19803 lt!57295)))

(assert (=> d!31479 (= lt!57295 (containsKey!162 (toList!789 lt!56966) (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!31479 (= (contains!824 lt!56966 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)) lt!57294)))

(declare-fun b!111144 () Bool)

(declare-fun lt!57293 () Unit!3382)

(assert (=> b!111144 (= e!72254 lt!57293)))

(assert (=> b!111144 (= lt!57293 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 lt!56966) (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!111144 (isDefined!111 (getValueByKey!159 (toList!789 lt!56966) (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!111145 () Bool)

(declare-fun Unit!3438 () Unit!3382)

(assert (=> b!111145 (= e!72254 Unit!3438)))

(declare-fun b!111146 () Bool)

(assert (=> b!111146 (= e!72255 (isDefined!111 (getValueByKey!159 (toList!789 lt!56966) (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!31479 c!19803) b!111144))

(assert (= (and d!31479 (not c!19803)) b!111145))

(assert (= (and d!31479 (not res!54880)) b!111146))

(assert (=> d!31479 m!124605))

(declare-fun m!126367 () Bool)

(assert (=> d!31479 m!126367))

(assert (=> b!111144 m!124605))

(declare-fun m!126369 () Bool)

(assert (=> b!111144 m!126369))

(assert (=> b!111144 m!124605))

(assert (=> b!111144 m!126203))

(assert (=> b!111144 m!126203))

(declare-fun m!126371 () Bool)

(assert (=> b!111144 m!126371))

(assert (=> b!111146 m!124605))

(assert (=> b!111146 m!126203))

(assert (=> b!111146 m!126203))

(assert (=> b!111146 m!126371))

(assert (=> b!110395 d!31479))

(declare-fun d!31481 () Bool)

(assert (=> d!31481 (= (get!1356 (getValueByKey!159 (toList!789 lt!56479) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2936 (getValueByKey!159 (toList!789 lt!56479) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!30873 d!31481))

(assert (=> d!30873 d!31085))

(declare-fun d!31483 () Bool)

(declare-fun e!72257 () Bool)

(assert (=> d!31483 e!72257))

(declare-fun res!54881 () Bool)

(assert (=> d!31483 (=> res!54881 e!72257)))

(declare-fun lt!57298 () Bool)

(assert (=> d!31483 (= res!54881 (not lt!57298))))

(declare-fun lt!57299 () Bool)

(assert (=> d!31483 (= lt!57298 lt!57299)))

(declare-fun lt!57296 () Unit!3382)

(declare-fun e!72256 () Unit!3382)

(assert (=> d!31483 (= lt!57296 e!72256)))

(declare-fun c!19804 () Bool)

(assert (=> d!31483 (= c!19804 lt!57299)))

(assert (=> d!31483 (= lt!57299 (containsKey!162 (toList!789 (map!1295 (_2!1204 lt!56730))) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(assert (=> d!31483 (= (contains!824 (map!1295 (_2!1204 lt!56730)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) lt!57298)))

(declare-fun b!111147 () Bool)

(declare-fun lt!57297 () Unit!3382)

(assert (=> b!111147 (= e!72256 lt!57297)))

(assert (=> b!111147 (= lt!57297 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 (map!1295 (_2!1204 lt!56730))) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(assert (=> b!111147 (isDefined!111 (getValueByKey!159 (toList!789 (map!1295 (_2!1204 lt!56730))) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(declare-fun b!111148 () Bool)

(declare-fun Unit!3439 () Unit!3382)

(assert (=> b!111148 (= e!72256 Unit!3439)))

(declare-fun b!111149 () Bool)

(assert (=> b!111149 (= e!72257 (isDefined!111 (getValueByKey!159 (toList!789 (map!1295 (_2!1204 lt!56730))) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355))))))

(assert (= (and d!31483 c!19804) b!111147))

(assert (= (and d!31483 (not c!19804)) b!111148))

(assert (= (and d!31483 (not res!54881)) b!111149))

(assert (=> d!31483 m!124087))

(declare-fun m!126373 () Bool)

(assert (=> d!31483 m!126373))

(assert (=> b!111147 m!124087))

(declare-fun m!126375 () Bool)

(assert (=> b!111147 m!126375))

(assert (=> b!111147 m!124087))

(declare-fun m!126377 () Bool)

(assert (=> b!111147 m!126377))

(assert (=> b!111147 m!126377))

(declare-fun m!126379 () Bool)

(assert (=> b!111147 m!126379))

(assert (=> b!111149 m!124087))

(assert (=> b!111149 m!126377))

(assert (=> b!111149 m!126377))

(assert (=> b!111149 m!126379))

(assert (=> b!110056 d!31483))

(declare-fun d!31485 () Bool)

(assert (=> d!31485 (= (map!1295 (_2!1204 lt!56730)) (getCurrentListMap!475 (_keys!4340 (_2!1204 lt!56730)) (_values!2609 (_2!1204 lt!56730)) (mask!6794 (_2!1204 lt!56730)) (extraKeys!2423 (_2!1204 lt!56730)) (zeroValue!2497 (_2!1204 lt!56730)) (minValue!2497 (_2!1204 lt!56730)) #b00000000000000000000000000000000 (defaultEntry!2626 (_2!1204 lt!56730))))))

(declare-fun bs!4575 () Bool)

(assert (= bs!4575 d!31485))

(declare-fun m!126381 () Bool)

(assert (=> bs!4575 m!126381))

(assert (=> b!110056 d!31485))

(declare-fun d!31487 () Bool)

(declare-fun lt!57300 () Bool)

(assert (=> d!31487 (= lt!57300 (select (content!114 (toList!789 lt!57009)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))))

(declare-fun e!72259 () Bool)

(assert (=> d!31487 (= lt!57300 e!72259)))

(declare-fun res!54883 () Bool)

(assert (=> d!31487 (=> (not res!54883) (not e!72259))))

(assert (=> d!31487 (= res!54883 ((_ is Cons!1605) (toList!789 lt!57009)))))

(assert (=> d!31487 (= (contains!827 (toList!789 lt!57009) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)) lt!57300)))

(declare-fun b!111150 () Bool)

(declare-fun e!72258 () Bool)

(assert (=> b!111150 (= e!72259 e!72258)))

(declare-fun res!54882 () Bool)

(assert (=> b!111150 (=> res!54882 e!72258)))

(assert (=> b!111150 (= res!54882 (= (h!2204 (toList!789 lt!57009)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))))

(declare-fun b!111151 () Bool)

(assert (=> b!111151 (= e!72258 (contains!827 (t!5738 (toList!789 lt!57009)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))))

(assert (= (and d!31487 res!54883) b!111150))

(assert (= (and b!111150 (not res!54882)) b!111151))

(declare-fun m!126383 () Bool)

(assert (=> d!31487 m!126383))

(declare-fun m!126385 () Bool)

(assert (=> d!31487 m!126385))

(declare-fun m!126387 () Bool)

(assert (=> b!111151 m!126387))

(assert (=> b!110474 d!31487))

(declare-fun d!31489 () Bool)

(assert (=> d!31489 (= (apply!100 lt!56820 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1356 (getValueByKey!159 (toList!789 lt!56820) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(declare-fun bs!4576 () Bool)

(assert (= bs!4576 d!31489))

(assert (=> bs!4576 m!124693))

(declare-fun m!126389 () Bool)

(assert (=> bs!4576 m!126389))

(assert (=> bs!4576 m!126389))

(declare-fun m!126391 () Bool)

(assert (=> bs!4576 m!126391))

(assert (=> b!110162 d!31489))

(declare-fun d!31491 () Bool)

(declare-fun c!19805 () Bool)

(assert (=> d!31491 (= c!19805 ((_ is ValueCellFull!1004) (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun e!72260 () V!3241)

(assert (=> d!31491 (= (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!72260)))

(declare-fun b!111152 () Bool)

(assert (=> b!111152 (= e!72260 (get!1354 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!111153 () Bool)

(assert (=> b!111153 (= e!72260 (get!1355 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!31491 c!19805) b!111152))

(assert (= (and d!31491 (not c!19805)) b!111153))

(assert (=> b!111152 m!124699))

(assert (=> b!111152 m!124091))

(declare-fun m!126393 () Bool)

(assert (=> b!111152 m!126393))

(assert (=> b!111153 m!124699))

(assert (=> b!111153 m!124091))

(declare-fun m!126395 () Bool)

(assert (=> b!111153 m!126395))

(assert (=> b!110162 d!31491))

(declare-fun d!31493 () Bool)

(declare-fun e!72262 () Bool)

(assert (=> d!31493 e!72262))

(declare-fun res!54884 () Bool)

(assert (=> d!31493 (=> res!54884 e!72262)))

(declare-fun lt!57303 () Bool)

(assert (=> d!31493 (= res!54884 (not lt!57303))))

(declare-fun lt!57304 () Bool)

(assert (=> d!31493 (= lt!57303 lt!57304)))

(declare-fun lt!57301 () Unit!3382)

(declare-fun e!72261 () Unit!3382)

(assert (=> d!31493 (= lt!57301 e!72261)))

(declare-fun c!19806 () Bool)

(assert (=> d!31493 (= c!19806 lt!57304)))

(assert (=> d!31493 (= lt!57304 (containsKey!162 (toList!789 lt!56536) lt!56538))))

(assert (=> d!31493 (= (contains!824 lt!56536 lt!56538) lt!57303)))

(declare-fun b!111154 () Bool)

(declare-fun lt!57302 () Unit!3382)

(assert (=> b!111154 (= e!72261 lt!57302)))

(assert (=> b!111154 (= lt!57302 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 lt!56536) lt!56538))))

(assert (=> b!111154 (isDefined!111 (getValueByKey!159 (toList!789 lt!56536) lt!56538))))

(declare-fun b!111155 () Bool)

(declare-fun Unit!3440 () Unit!3382)

(assert (=> b!111155 (= e!72261 Unit!3440)))

(declare-fun b!111156 () Bool)

(assert (=> b!111156 (= e!72262 (isDefined!111 (getValueByKey!159 (toList!789 lt!56536) lt!56538)))))

(assert (= (and d!31493 c!19806) b!111154))

(assert (= (and d!31493 (not c!19806)) b!111155))

(assert (= (and d!31493 (not res!54884)) b!111156))

(declare-fun m!126397 () Bool)

(assert (=> d!31493 m!126397))

(declare-fun m!126399 () Bool)

(assert (=> b!111154 m!126399))

(assert (=> b!111154 m!124923))

(assert (=> b!111154 m!124923))

(declare-fun m!126401 () Bool)

(assert (=> b!111154 m!126401))

(assert (=> b!111156 m!124923))

(assert (=> b!111156 m!124923))

(assert (=> b!111156 m!126401))

(assert (=> d!30959 d!31493))

(assert (=> d!30959 d!30933))

(assert (=> d!30959 d!30957))

(assert (=> d!30959 d!30961))

(declare-fun d!31495 () Bool)

(assert (=> d!31495 (= (apply!100 (+!144 lt!56536 (tuple2!2389 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992))))) lt!56538) (apply!100 lt!56536 lt!56538))))

(assert (=> d!31495 true))

(declare-fun _$34!905 () Unit!3382)

(assert (=> d!31495 (= (choose!697 lt!56536 lt!56541 (minValue!2497 (v!2930 (underlying!370 thiss!992))) lt!56538) _$34!905)))

(declare-fun bs!4577 () Bool)

(assert (= bs!4577 d!31495))

(assert (=> bs!4577 m!124347))

(assert (=> bs!4577 m!124347))

(assert (=> bs!4577 m!124349))

(assert (=> bs!4577 m!124351))

(assert (=> d!30959 d!31495))

(declare-fun d!31497 () Bool)

(declare-fun e!72263 () Bool)

(assert (=> d!31497 e!72263))

(declare-fun res!54886 () Bool)

(assert (=> d!31497 (=> (not res!54886) (not e!72263))))

(declare-fun lt!57308 () ListLongMap!1547)

(assert (=> d!31497 (= res!54886 (contains!824 lt!57308 (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))

(declare-fun lt!57307 () List!1609)

(assert (=> d!31497 (= lt!57308 (ListLongMap!1548 lt!57307))))

(declare-fun lt!57306 () Unit!3382)

(declare-fun lt!57305 () Unit!3382)

(assert (=> d!31497 (= lt!57306 lt!57305)))

(assert (=> d!31497 (= (getValueByKey!159 lt!57307 (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))) (Some!164 (_2!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))

(assert (=> d!31497 (= lt!57305 (lemmaContainsTupThenGetReturnValue!75 lt!57307 (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)) (_2!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))

(assert (=> d!31497 (= lt!57307 (insertStrictlySorted!78 (toList!789 (getCurrentListMap!475 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16))) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)) (_2!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))

(assert (=> d!31497 (= (+!144 (getCurrentListMap!475 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)) lt!57308)))

(declare-fun b!111157 () Bool)

(declare-fun res!54885 () Bool)

(assert (=> b!111157 (=> (not res!54885) (not e!72263))))

(assert (=> b!111157 (= res!54885 (= (getValueByKey!159 (toList!789 lt!57308) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))) (Some!164 (_2!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))))))

(declare-fun b!111158 () Bool)

(assert (=> b!111158 (= e!72263 (contains!827 (toList!789 lt!57308) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))))

(assert (= (and d!31497 res!54886) b!111157))

(assert (= (and b!111157 res!54885) b!111158))

(declare-fun m!126403 () Bool)

(assert (=> d!31497 m!126403))

(declare-fun m!126405 () Bool)

(assert (=> d!31497 m!126405))

(declare-fun m!126407 () Bool)

(assert (=> d!31497 m!126407))

(declare-fun m!126409 () Bool)

(assert (=> d!31497 m!126409))

(declare-fun m!126411 () Bool)

(assert (=> b!111157 m!126411))

(declare-fun m!126413 () Bool)

(assert (=> b!111158 m!126413))

(assert (=> b!110112 d!31497))

(assert (=> b!110112 d!30965))

(declare-fun b!111159 () Bool)

(declare-fun res!54887 () Bool)

(declare-fun e!72274 () Bool)

(assert (=> b!111159 (=> (not res!54887) (not e!72274))))

(declare-fun e!72270 () Bool)

(assert (=> b!111159 (= res!54887 e!72270)))

(declare-fun res!54890 () Bool)

(assert (=> b!111159 (=> res!54890 e!72270)))

(declare-fun e!72275 () Bool)

(assert (=> b!111159 (= res!54890 (not e!72275))))

(declare-fun res!54894 () Bool)

(assert (=> b!111159 (=> (not res!54894) (not e!72275))))

(assert (=> b!111159 (= res!54894 (bvslt #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))))))

(declare-fun bm!11846 () Bool)

(declare-fun call!11852 () Bool)

(declare-fun lt!57319 () ListLongMap!1547)

(assert (=> bm!11846 (= call!11852 (contains!824 lt!57319 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!111160 () Bool)

(declare-fun e!72267 () Unit!3382)

(declare-fun Unit!3441 () Unit!3382)

(assert (=> b!111160 (= e!72267 Unit!3441)))

(declare-fun b!111161 () Bool)

(declare-fun e!72265 () ListLongMap!1547)

(declare-fun call!11855 () ListLongMap!1547)

(assert (=> b!111161 (= e!72265 (+!144 call!11855 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16))))))

(declare-fun b!111162 () Bool)

(declare-fun e!72269 () Bool)

(assert (=> b!111162 (= e!72270 e!72269)))

(declare-fun res!54888 () Bool)

(assert (=> b!111162 (=> (not res!54888) (not e!72269))))

(assert (=> b!111162 (= res!54888 (contains!824 lt!57319 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!111162 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))))))

(declare-fun b!111163 () Bool)

(declare-fun lt!57330 () Unit!3382)

(assert (=> b!111163 (= e!72267 lt!57330)))

(declare-fun lt!57320 () ListLongMap!1547)

(assert (=> b!111163 (= lt!57320 (getCurrentListMapNoExtraKeys!111 (_keys!4340 newMap!16) (array!4374 (store (arr!2073 (_values!2609 newMap!16)) (index!3171 lt!56646) (ValueCellFull!1004 lt!56360)) (size!2330 (_values!2609 newMap!16))) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!57327 () (_ BitVec 64))

(assert (=> b!111163 (= lt!57327 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57322 () (_ BitVec 64))

(assert (=> b!111163 (= lt!57322 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!57323 () Unit!3382)

(assert (=> b!111163 (= lt!57323 (addStillContains!76 lt!57320 lt!57327 (zeroValue!2497 newMap!16) lt!57322))))

(assert (=> b!111163 (contains!824 (+!144 lt!57320 (tuple2!2389 lt!57327 (zeroValue!2497 newMap!16))) lt!57322)))

(declare-fun lt!57325 () Unit!3382)

(assert (=> b!111163 (= lt!57325 lt!57323)))

(declare-fun lt!57310 () ListLongMap!1547)

(assert (=> b!111163 (= lt!57310 (getCurrentListMapNoExtraKeys!111 (_keys!4340 newMap!16) (array!4374 (store (arr!2073 (_values!2609 newMap!16)) (index!3171 lt!56646) (ValueCellFull!1004 lt!56360)) (size!2330 (_values!2609 newMap!16))) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!57315 () (_ BitVec 64))

(assert (=> b!111163 (= lt!57315 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57312 () (_ BitVec 64))

(assert (=> b!111163 (= lt!57312 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!57314 () Unit!3382)

(assert (=> b!111163 (= lt!57314 (addApplyDifferent!76 lt!57310 lt!57315 (minValue!2497 newMap!16) lt!57312))))

(assert (=> b!111163 (= (apply!100 (+!144 lt!57310 (tuple2!2389 lt!57315 (minValue!2497 newMap!16))) lt!57312) (apply!100 lt!57310 lt!57312))))

(declare-fun lt!57309 () Unit!3382)

(assert (=> b!111163 (= lt!57309 lt!57314)))

(declare-fun lt!57318 () ListLongMap!1547)

(assert (=> b!111163 (= lt!57318 (getCurrentListMapNoExtraKeys!111 (_keys!4340 newMap!16) (array!4374 (store (arr!2073 (_values!2609 newMap!16)) (index!3171 lt!56646) (ValueCellFull!1004 lt!56360)) (size!2330 (_values!2609 newMap!16))) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!57329 () (_ BitVec 64))

(assert (=> b!111163 (= lt!57329 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57324 () (_ BitVec 64))

(assert (=> b!111163 (= lt!57324 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!57313 () Unit!3382)

(assert (=> b!111163 (= lt!57313 (addApplyDifferent!76 lt!57318 lt!57329 (zeroValue!2497 newMap!16) lt!57324))))

(assert (=> b!111163 (= (apply!100 (+!144 lt!57318 (tuple2!2389 lt!57329 (zeroValue!2497 newMap!16))) lt!57324) (apply!100 lt!57318 lt!57324))))

(declare-fun lt!57321 () Unit!3382)

(assert (=> b!111163 (= lt!57321 lt!57313)))

(declare-fun lt!57328 () ListLongMap!1547)

(assert (=> b!111163 (= lt!57328 (getCurrentListMapNoExtraKeys!111 (_keys!4340 newMap!16) (array!4374 (store (arr!2073 (_values!2609 newMap!16)) (index!3171 lt!56646) (ValueCellFull!1004 lt!56360)) (size!2330 (_values!2609 newMap!16))) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!57317 () (_ BitVec 64))

(assert (=> b!111163 (= lt!57317 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57311 () (_ BitVec 64))

(assert (=> b!111163 (= lt!57311 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!111163 (= lt!57330 (addApplyDifferent!76 lt!57328 lt!57317 (minValue!2497 newMap!16) lt!57311))))

(assert (=> b!111163 (= (apply!100 (+!144 lt!57328 (tuple2!2389 lt!57317 (minValue!2497 newMap!16))) lt!57311) (apply!100 lt!57328 lt!57311))))

(declare-fun d!31499 () Bool)

(assert (=> d!31499 e!72274))

(declare-fun res!54892 () Bool)

(assert (=> d!31499 (=> (not res!54892) (not e!72274))))

(assert (=> d!31499 (= res!54892 (or (bvsge #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))))))))

(declare-fun lt!57326 () ListLongMap!1547)

(assert (=> d!31499 (= lt!57319 lt!57326)))

(declare-fun lt!57316 () Unit!3382)

(assert (=> d!31499 (= lt!57316 e!72267)))

(declare-fun c!19812 () Bool)

(declare-fun e!72268 () Bool)

(assert (=> d!31499 (= c!19812 e!72268)))

(declare-fun res!54889 () Bool)

(assert (=> d!31499 (=> (not res!54889) (not e!72268))))

(assert (=> d!31499 (= res!54889 (bvslt #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))))))

(assert (=> d!31499 (= lt!57326 e!72265)))

(declare-fun c!19809 () Bool)

(assert (=> d!31499 (= c!19809 (and (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!31499 (validMask!0 (mask!6794 newMap!16))))

(assert (=> d!31499 (= (getCurrentListMap!475 (_keys!4340 newMap!16) (array!4374 (store (arr!2073 (_values!2609 newMap!16)) (index!3171 lt!56646) (ValueCellFull!1004 lt!56360)) (size!2330 (_values!2609 newMap!16))) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) lt!57319)))

(declare-fun bm!11847 () Bool)

(declare-fun call!11853 () ListLongMap!1547)

(declare-fun call!11850 () ListLongMap!1547)

(assert (=> bm!11847 (= call!11853 call!11850)))

(declare-fun b!111164 () Bool)

(declare-fun e!72273 () ListLongMap!1547)

(declare-fun call!11851 () ListLongMap!1547)

(assert (=> b!111164 (= e!72273 call!11851)))

(declare-fun b!111165 () Bool)

(declare-fun e!72272 () Bool)

(declare-fun call!11854 () Bool)

(assert (=> b!111165 (= e!72272 (not call!11854))))

(declare-fun b!111166 () Bool)

(declare-fun c!19808 () Bool)

(assert (=> b!111166 (= c!19808 (and (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!72276 () ListLongMap!1547)

(assert (=> b!111166 (= e!72273 e!72276)))

(declare-fun b!111167 () Bool)

(declare-fun e!72266 () Bool)

(assert (=> b!111167 (= e!72266 (not call!11852))))

(declare-fun bm!11848 () Bool)

(assert (=> bm!11848 (= call!11854 (contains!824 lt!57319 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!111168 () Bool)

(declare-fun e!72264 () Bool)

(assert (=> b!111168 (= e!72266 e!72264)))

(declare-fun res!54891 () Bool)

(assert (=> b!111168 (= res!54891 call!11852)))

(assert (=> b!111168 (=> (not res!54891) (not e!72264))))

(declare-fun b!111169 () Bool)

(assert (=> b!111169 (= e!72269 (= (apply!100 lt!57319 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)) (get!1353 (select (arr!2073 (array!4374 (store (arr!2073 (_values!2609 newMap!16)) (index!3171 lt!56646) (ValueCellFull!1004 lt!56360)) (size!2330 (_values!2609 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!390 (defaultEntry!2626 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!111169 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2330 (array!4374 (store (arr!2073 (_values!2609 newMap!16)) (index!3171 lt!56646) (ValueCellFull!1004 lt!56360)) (size!2330 (_values!2609 newMap!16))))))))

(assert (=> b!111169 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))))))

(declare-fun c!19807 () Bool)

(declare-fun call!11849 () ListLongMap!1547)

(declare-fun bm!11849 () Bool)

(assert (=> bm!11849 (= call!11855 (+!144 (ite c!19809 call!11850 (ite c!19807 call!11853 call!11849)) (ite (or c!19809 c!19807) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 newMap!16)) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16)))))))

(declare-fun b!111170 () Bool)

(declare-fun e!72271 () Bool)

(assert (=> b!111170 (= e!72271 (= (apply!100 lt!57319 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2497 newMap!16)))))

(declare-fun b!111171 () Bool)

(assert (=> b!111171 (= e!72274 e!72266)))

(declare-fun c!19811 () Bool)

(assert (=> b!111171 (= c!19811 (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11850 () Bool)

(assert (=> bm!11850 (= call!11851 call!11855)))

(declare-fun b!111172 () Bool)

(declare-fun res!54893 () Bool)

(assert (=> b!111172 (=> (not res!54893) (not e!72274))))

(assert (=> b!111172 (= res!54893 e!72272)))

(declare-fun c!19810 () Bool)

(assert (=> b!111172 (= c!19810 (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!111173 () Bool)

(assert (=> b!111173 (= e!72276 call!11849)))

(declare-fun bm!11851 () Bool)

(assert (=> bm!11851 (= call!11849 call!11853)))

(declare-fun b!111174 () Bool)

(assert (=> b!111174 (= e!72276 call!11851)))

(declare-fun b!111175 () Bool)

(assert (=> b!111175 (= e!72268 (validKeyInArray!0 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!111176 () Bool)

(assert (=> b!111176 (= e!72272 e!72271)))

(declare-fun res!54895 () Bool)

(assert (=> b!111176 (= res!54895 call!11854)))

(assert (=> b!111176 (=> (not res!54895) (not e!72271))))

(declare-fun b!111177 () Bool)

(assert (=> b!111177 (= e!72264 (= (apply!100 lt!57319 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2497 newMap!16)))))

(declare-fun b!111178 () Bool)

(assert (=> b!111178 (= e!72275 (validKeyInArray!0 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!111179 () Bool)

(assert (=> b!111179 (= e!72265 e!72273)))

(assert (=> b!111179 (= c!19807 (and (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11852 () Bool)

(assert (=> bm!11852 (= call!11850 (getCurrentListMapNoExtraKeys!111 (_keys!4340 newMap!16) (array!4374 (store (arr!2073 (_values!2609 newMap!16)) (index!3171 lt!56646) (ValueCellFull!1004 lt!56360)) (size!2330 (_values!2609 newMap!16))) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(assert (= (and d!31499 c!19809) b!111161))

(assert (= (and d!31499 (not c!19809)) b!111179))

(assert (= (and b!111179 c!19807) b!111164))

(assert (= (and b!111179 (not c!19807)) b!111166))

(assert (= (and b!111166 c!19808) b!111174))

(assert (= (and b!111166 (not c!19808)) b!111173))

(assert (= (or b!111174 b!111173) bm!11851))

(assert (= (or b!111164 bm!11851) bm!11847))

(assert (= (or b!111164 b!111174) bm!11850))

(assert (= (or b!111161 bm!11847) bm!11852))

(assert (= (or b!111161 bm!11850) bm!11849))

(assert (= (and d!31499 res!54889) b!111175))

(assert (= (and d!31499 c!19812) b!111163))

(assert (= (and d!31499 (not c!19812)) b!111160))

(assert (= (and d!31499 res!54892) b!111159))

(assert (= (and b!111159 res!54894) b!111178))

(assert (= (and b!111159 (not res!54890)) b!111162))

(assert (= (and b!111162 res!54888) b!111169))

(assert (= (and b!111159 res!54887) b!111172))

(assert (= (and b!111172 c!19810) b!111176))

(assert (= (and b!111172 (not c!19810)) b!111165))

(assert (= (and b!111176 res!54895) b!111170))

(assert (= (or b!111176 b!111165) bm!11848))

(assert (= (and b!111172 res!54893) b!111171))

(assert (= (and b!111171 c!19811) b!111168))

(assert (= (and b!111171 (not c!19811)) b!111167))

(assert (= (and b!111168 res!54891) b!111177))

(assert (= (or b!111168 b!111167) bm!11846))

(declare-fun b_lambda!4973 () Bool)

(assert (=> (not b_lambda!4973) (not b!111169)))

(assert (=> b!111169 t!5751))

(declare-fun b_and!6841 () Bool)

(assert (= b_and!6837 (and (=> t!5751 result!3533) b_and!6841)))

(assert (=> b!111169 t!5753))

(declare-fun b_and!6843 () Bool)

(assert (= b_and!6839 (and (=> t!5753 result!3535) b_and!6843)))

(assert (=> b!111178 m!124605))

(assert (=> b!111178 m!124605))

(assert (=> b!111178 m!124607))

(declare-fun m!126415 () Bool)

(assert (=> b!111163 m!126415))

(declare-fun m!126417 () Bool)

(assert (=> b!111163 m!126417))

(declare-fun m!126419 () Bool)

(assert (=> b!111163 m!126419))

(declare-fun m!126421 () Bool)

(assert (=> b!111163 m!126421))

(declare-fun m!126423 () Bool)

(assert (=> b!111163 m!126423))

(declare-fun m!126425 () Bool)

(assert (=> b!111163 m!126425))

(declare-fun m!126427 () Bool)

(assert (=> b!111163 m!126427))

(declare-fun m!126429 () Bool)

(assert (=> b!111163 m!126429))

(declare-fun m!126431 () Bool)

(assert (=> b!111163 m!126431))

(declare-fun m!126433 () Bool)

(assert (=> b!111163 m!126433))

(declare-fun m!126435 () Bool)

(assert (=> b!111163 m!126435))

(assert (=> b!111163 m!126423))

(assert (=> b!111163 m!126427))

(declare-fun m!126437 () Bool)

(assert (=> b!111163 m!126437))

(assert (=> b!111163 m!124605))

(declare-fun m!126439 () Bool)

(assert (=> b!111163 m!126439))

(assert (=> b!111163 m!126433))

(declare-fun m!126441 () Bool)

(assert (=> b!111163 m!126441))

(declare-fun m!126443 () Bool)

(assert (=> b!111163 m!126443))

(assert (=> b!111163 m!126441))

(declare-fun m!126445 () Bool)

(assert (=> b!111163 m!126445))

(assert (=> b!111175 m!124605))

(assert (=> b!111175 m!124605))

(assert (=> b!111175 m!124607))

(declare-fun m!126447 () Bool)

(assert (=> bm!11848 m!126447))

(assert (=> bm!11852 m!126439))

(assert (=> d!31499 m!124579))

(declare-fun m!126449 () Bool)

(assert (=> bm!11849 m!126449))

(declare-fun m!126451 () Bool)

(assert (=> b!111170 m!126451))

(declare-fun m!126453 () Bool)

(assert (=> bm!11846 m!126453))

(declare-fun m!126455 () Bool)

(assert (=> b!111177 m!126455))

(assert (=> b!111169 m!124605))

(declare-fun m!126457 () Bool)

(assert (=> b!111169 m!126457))

(assert (=> b!111169 m!124605))

(declare-fun m!126459 () Bool)

(assert (=> b!111169 m!126459))

(assert (=> b!111169 m!126459))

(assert (=> b!111169 m!124767))

(declare-fun m!126461 () Bool)

(assert (=> b!111169 m!126461))

(assert (=> b!111169 m!124767))

(declare-fun m!126463 () Bool)

(assert (=> b!111161 m!126463))

(assert (=> b!111162 m!124605))

(assert (=> b!111162 m!124605))

(declare-fun m!126465 () Bool)

(assert (=> b!111162 m!126465))

(assert (=> b!110112 d!31499))

(declare-fun lt!57331 () Bool)

(declare-fun d!31501 () Bool)

(assert (=> d!31501 (= lt!57331 (select (content!115 (ite c!19470 (Cons!1606 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) Nil!1607) Nil!1607)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!72277 () Bool)

(assert (=> d!31501 (= lt!57331 e!72277)))

(declare-fun res!54896 () Bool)

(assert (=> d!31501 (=> (not res!54896) (not e!72277))))

(assert (=> d!31501 (= res!54896 ((_ is Cons!1606) (ite c!19470 (Cons!1606 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) Nil!1607) Nil!1607)))))

(assert (=> d!31501 (= (contains!828 (ite c!19470 (Cons!1606 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) Nil!1607) Nil!1607) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) lt!57331)))

(declare-fun b!111180 () Bool)

(declare-fun e!72278 () Bool)

(assert (=> b!111180 (= e!72277 e!72278)))

(declare-fun res!54897 () Bool)

(assert (=> b!111180 (=> res!54897 e!72278)))

(assert (=> b!111180 (= res!54897 (= (h!2205 (ite c!19470 (Cons!1606 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) Nil!1607) Nil!1607)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!111181 () Bool)

(assert (=> b!111181 (= e!72278 (contains!828 (t!5739 (ite c!19470 (Cons!1606 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) Nil!1607) Nil!1607)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!31501 res!54896) b!111180))

(assert (= (and b!111180 (not res!54897)) b!111181))

(declare-fun m!126467 () Bool)

(assert (=> d!31501 m!126467))

(assert (=> d!31501 m!125065))

(declare-fun m!126469 () Bool)

(assert (=> d!31501 m!126469))

(assert (=> b!111181 m!125065))

(declare-fun m!126471 () Bool)

(assert (=> b!111181 m!126471))

(assert (=> b!110369 d!31501))

(assert (=> b!110049 d!30983))

(declare-fun d!31503 () Bool)

(assert (=> d!31503 (= (get!1356 (getValueByKey!159 (toList!789 (+!144 lt!56554 (tuple2!2389 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))) lt!56537)) (v!2936 (getValueByKey!159 (toList!789 (+!144 lt!56554 (tuple2!2389 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))) lt!56537)))))

(assert (=> d!30937 d!31503))

(declare-fun b!111185 () Bool)

(declare-fun e!72280 () Option!165)

(assert (=> b!111185 (= e!72280 None!163)))

(declare-fun e!72279 () Option!165)

(declare-fun b!111182 () Bool)

(assert (=> b!111182 (= e!72279 (Some!164 (_2!1205 (h!2204 (toList!789 (+!144 lt!56554 (tuple2!2389 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))))))))

(declare-fun b!111184 () Bool)

(assert (=> b!111184 (= e!72280 (getValueByKey!159 (t!5738 (toList!789 (+!144 lt!56554 (tuple2!2389 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))) lt!56537))))

(declare-fun c!19813 () Bool)

(declare-fun d!31505 () Bool)

(assert (=> d!31505 (= c!19813 (and ((_ is Cons!1605) (toList!789 (+!144 lt!56554 (tuple2!2389 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))) (= (_1!1205 (h!2204 (toList!789 (+!144 lt!56554 (tuple2!2389 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))) lt!56537)))))

(assert (=> d!31505 (= (getValueByKey!159 (toList!789 (+!144 lt!56554 (tuple2!2389 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))) lt!56537) e!72279)))

(declare-fun b!111183 () Bool)

(assert (=> b!111183 (= e!72279 e!72280)))

(declare-fun c!19814 () Bool)

(assert (=> b!111183 (= c!19814 (and ((_ is Cons!1605) (toList!789 (+!144 lt!56554 (tuple2!2389 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))) (not (= (_1!1205 (h!2204 (toList!789 (+!144 lt!56554 (tuple2!2389 lt!56543 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))) lt!56537))))))

(assert (= (and d!31505 c!19813) b!111182))

(assert (= (and d!31505 (not c!19813)) b!111183))

(assert (= (and b!111183 c!19814) b!111184))

(assert (= (and b!111183 (not c!19814)) b!111185))

(declare-fun m!126473 () Bool)

(assert (=> b!111184 m!126473))

(assert (=> d!30937 d!31505))

(assert (=> b!110183 d!31059))

(declare-fun d!31507 () Bool)

(assert (=> d!31507 (= (apply!100 lt!56908 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1356 (getValueByKey!159 (toList!789 lt!56908) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4578 () Bool)

(assert (= bs!4578 d!31507))

(assert (=> bs!4578 m!125943))

(assert (=> bs!4578 m!125943))

(declare-fun m!126475 () Bool)

(assert (=> bs!4578 m!126475))

(assert (=> b!110304 d!31507))

(declare-fun d!31509 () Bool)

(assert (=> d!31509 (isDefined!111 (getValueByKey!159 (toList!789 lt!56545) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!57332 () Unit!3382)

(assert (=> d!31509 (= lt!57332 (choose!696 (toList!789 lt!56545) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!72281 () Bool)

(assert (=> d!31509 e!72281))

(declare-fun res!54898 () Bool)

(assert (=> d!31509 (=> (not res!54898) (not e!72281))))

(assert (=> d!31509 (= res!54898 (isStrictlySorted!298 (toList!789 lt!56545)))))

(assert (=> d!31509 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 lt!56545) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!57332)))

(declare-fun b!111186 () Bool)

(assert (=> b!111186 (= e!72281 (containsKey!162 (toList!789 lt!56545) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!31509 res!54898) b!111186))

(assert (=> d!31509 m!124267))

(assert (=> d!31509 m!125181))

(assert (=> d!31509 m!125181))

(assert (=> d!31509 m!125287))

(assert (=> d!31509 m!124267))

(declare-fun m!126477 () Bool)

(assert (=> d!31509 m!126477))

(declare-fun m!126479 () Bool)

(assert (=> d!31509 m!126479))

(assert (=> b!111186 m!124267))

(assert (=> b!111186 m!125283))

(assert (=> b!110477 d!31509))

(assert (=> b!110477 d!31277))

(assert (=> b!110477 d!31115))

(assert (=> d!31001 d!30999))

(declare-fun d!31511 () Bool)

(assert (=> d!31511 (= (getValueByKey!159 lt!56486 (_1!1205 lt!56370)) (Some!164 (_2!1205 lt!56370)))))

(assert (=> d!31511 true))

(declare-fun _$22!448 () Unit!3382)

(assert (=> d!31511 (= (choose!695 lt!56486 (_1!1205 lt!56370) (_2!1205 lt!56370)) _$22!448)))

(declare-fun bs!4579 () Bool)

(assert (= bs!4579 d!31511))

(assert (=> bs!4579 m!124309))

(assert (=> d!31001 d!31511))

(declare-fun d!31513 () Bool)

(declare-fun res!54899 () Bool)

(declare-fun e!72282 () Bool)

(assert (=> d!31513 (=> res!54899 e!72282)))

(assert (=> d!31513 (= res!54899 (or ((_ is Nil!1606) lt!56486) ((_ is Nil!1606) (t!5738 lt!56486))))))

(assert (=> d!31513 (= (isStrictlySorted!298 lt!56486) e!72282)))

(declare-fun b!111187 () Bool)

(declare-fun e!72283 () Bool)

(assert (=> b!111187 (= e!72282 e!72283)))

(declare-fun res!54900 () Bool)

(assert (=> b!111187 (=> (not res!54900) (not e!72283))))

(assert (=> b!111187 (= res!54900 (bvslt (_1!1205 (h!2204 lt!56486)) (_1!1205 (h!2204 (t!5738 lt!56486)))))))

(declare-fun b!111188 () Bool)

(assert (=> b!111188 (= e!72283 (isStrictlySorted!298 (t!5738 lt!56486)))))

(assert (= (and d!31513 (not res!54899)) b!111187))

(assert (= (and b!111187 res!54900) b!111188))

(declare-fun m!126481 () Bool)

(assert (=> b!111188 m!126481))

(assert (=> d!31001 d!31513))

(declare-fun bm!11853 () Bool)

(declare-fun call!11856 () Bool)

(assert (=> bm!11853 (= call!11856 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4340 (_2!1204 lt!56628)) (mask!6794 (_2!1204 lt!56628))))))

(declare-fun b!111189 () Bool)

(declare-fun e!72284 () Bool)

(assert (=> b!111189 (= e!72284 call!11856)))

(declare-fun b!111190 () Bool)

(declare-fun e!72286 () Bool)

(assert (=> b!111190 (= e!72286 call!11856)))

(declare-fun b!111192 () Bool)

(assert (=> b!111192 (= e!72286 e!72284)))

(declare-fun lt!57333 () (_ BitVec 64))

(assert (=> b!111192 (= lt!57333 (select (arr!2072 (_keys!4340 (_2!1204 lt!56628))) #b00000000000000000000000000000000))))

(declare-fun lt!57335 () Unit!3382)

(assert (=> b!111192 (= lt!57335 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4340 (_2!1204 lt!56628)) lt!57333 #b00000000000000000000000000000000))))

(assert (=> b!111192 (arrayContainsKey!0 (_keys!4340 (_2!1204 lt!56628)) lt!57333 #b00000000000000000000000000000000)))

(declare-fun lt!57334 () Unit!3382)

(assert (=> b!111192 (= lt!57334 lt!57335)))

(declare-fun res!54901 () Bool)

(assert (=> b!111192 (= res!54901 (= (seekEntryOrOpen!0 (select (arr!2072 (_keys!4340 (_2!1204 lt!56628))) #b00000000000000000000000000000000) (_keys!4340 (_2!1204 lt!56628)) (mask!6794 (_2!1204 lt!56628))) (Found!255 #b00000000000000000000000000000000)))))

(assert (=> b!111192 (=> (not res!54901) (not e!72284))))

(declare-fun b!111191 () Bool)

(declare-fun e!72285 () Bool)

(assert (=> b!111191 (= e!72285 e!72286)))

(declare-fun c!19815 () Bool)

(assert (=> b!111191 (= c!19815 (validKeyInArray!0 (select (arr!2072 (_keys!4340 (_2!1204 lt!56628))) #b00000000000000000000000000000000)))))

(declare-fun d!31515 () Bool)

(declare-fun res!54902 () Bool)

(assert (=> d!31515 (=> res!54902 e!72285)))

(assert (=> d!31515 (= res!54902 (bvsge #b00000000000000000000000000000000 (size!2329 (_keys!4340 (_2!1204 lt!56628)))))))

(assert (=> d!31515 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4340 (_2!1204 lt!56628)) (mask!6794 (_2!1204 lt!56628))) e!72285)))

(assert (= (and d!31515 (not res!54902)) b!111191))

(assert (= (and b!111191 c!19815) b!111192))

(assert (= (and b!111191 (not c!19815)) b!111190))

(assert (= (and b!111192 res!54901) b!111189))

(assert (= (or b!111189 b!111190) bm!11853))

(declare-fun m!126483 () Bool)

(assert (=> bm!11853 m!126483))

(assert (=> b!111192 m!125695))

(declare-fun m!126485 () Bool)

(assert (=> b!111192 m!126485))

(declare-fun m!126487 () Bool)

(assert (=> b!111192 m!126487))

(assert (=> b!111192 m!125695))

(declare-fun m!126489 () Bool)

(assert (=> b!111192 m!126489))

(assert (=> b!111191 m!125695))

(assert (=> b!111191 m!125695))

(assert (=> b!111191 m!125697))

(assert (=> b!110371 d!31515))

(declare-fun d!31517 () Bool)

(assert (=> d!31517 (= (isDefined!111 (getValueByKey!159 (toList!789 lt!56479) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!383 (getValueByKey!159 (toList!789 lt!56479) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4580 () Bool)

(assert (= bs!4580 d!31517))

(assert (=> bs!4580 m!125169))

(declare-fun m!126491 () Bool)

(assert (=> bs!4580 m!126491))

(assert (=> b!110415 d!31517))

(declare-fun b!111196 () Bool)

(declare-fun e!72288 () Option!165)

(assert (=> b!111196 (= e!72288 None!163)))

(declare-fun b!111193 () Bool)

(declare-fun e!72287 () Option!165)

(assert (=> b!111193 (= e!72287 (Some!164 (_2!1205 (h!2204 (toList!789 lt!56479)))))))

(declare-fun b!111195 () Bool)

(assert (=> b!111195 (= e!72288 (getValueByKey!159 (t!5738 (toList!789 lt!56479)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!31519 () Bool)

(declare-fun c!19816 () Bool)

(assert (=> d!31519 (= c!19816 (and ((_ is Cons!1605) (toList!789 lt!56479)) (= (_1!1205 (h!2204 (toList!789 lt!56479))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!31519 (= (getValueByKey!159 (toList!789 lt!56479) #b1000000000000000000000000000000000000000000000000000000000000000) e!72287)))

(declare-fun b!111194 () Bool)

(assert (=> b!111194 (= e!72287 e!72288)))

(declare-fun c!19817 () Bool)

(assert (=> b!111194 (= c!19817 (and ((_ is Cons!1605) (toList!789 lt!56479)) (not (= (_1!1205 (h!2204 (toList!789 lt!56479))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!31519 c!19816) b!111193))

(assert (= (and d!31519 (not c!19816)) b!111194))

(assert (= (and b!111194 c!19817) b!111195))

(assert (= (and b!111194 (not c!19817)) b!111196))

(declare-fun m!126493 () Bool)

(assert (=> b!111195 m!126493))

(assert (=> b!110415 d!31519))

(declare-fun d!31521 () Bool)

(assert (=> d!31521 (= (+!144 (getCurrentListMap!475 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360)) (getCurrentListMap!475 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) lt!56647 (zeroValue!2497 newMap!16) lt!56360 #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(assert (=> d!31521 true))

(declare-fun _$8!100 () Unit!3382)

(assert (=> d!31521 (= (choose!699 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) lt!56647 (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) lt!56360 (defaultEntry!2626 newMap!16)) _$8!100)))

(declare-fun bs!4581 () Bool)

(assert (= bs!4581 d!31521))

(assert (=> bs!4581 m!124333))

(assert (=> bs!4581 m!124333))

(assert (=> bs!4581 m!125023))

(assert (=> bs!4581 m!125025))

(assert (=> d!30981 d!31521))

(assert (=> d!30981 d!30965))

(declare-fun b!111197 () Bool)

(declare-fun res!54903 () Bool)

(declare-fun e!72299 () Bool)

(assert (=> b!111197 (=> (not res!54903) (not e!72299))))

(declare-fun e!72295 () Bool)

(assert (=> b!111197 (= res!54903 e!72295)))

(declare-fun res!54906 () Bool)

(assert (=> b!111197 (=> res!54906 e!72295)))

(declare-fun e!72300 () Bool)

(assert (=> b!111197 (= res!54906 (not e!72300))))

(declare-fun res!54910 () Bool)

(assert (=> b!111197 (=> (not res!54910) (not e!72300))))

(assert (=> b!111197 (= res!54910 (bvslt #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))))))

(declare-fun bm!11854 () Bool)

(declare-fun call!11860 () Bool)

(declare-fun lt!57346 () ListLongMap!1547)

(assert (=> bm!11854 (= call!11860 (contains!824 lt!57346 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!111198 () Bool)

(declare-fun e!72292 () Unit!3382)

(declare-fun Unit!3442 () Unit!3382)

(assert (=> b!111198 (= e!72292 Unit!3442)))

(declare-fun b!111199 () Bool)

(declare-fun e!72290 () ListLongMap!1547)

(declare-fun call!11863 () ListLongMap!1547)

(assert (=> b!111199 (= e!72290 (+!144 call!11863 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360)))))

(declare-fun b!111200 () Bool)

(declare-fun e!72294 () Bool)

(assert (=> b!111200 (= e!72295 e!72294)))

(declare-fun res!54904 () Bool)

(assert (=> b!111200 (=> (not res!54904) (not e!72294))))

(assert (=> b!111200 (= res!54904 (contains!824 lt!57346 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!111200 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))))))

(declare-fun b!111201 () Bool)

(declare-fun lt!57357 () Unit!3382)

(assert (=> b!111201 (= e!72292 lt!57357)))

(declare-fun lt!57347 () ListLongMap!1547)

(assert (=> b!111201 (= lt!57347 (getCurrentListMapNoExtraKeys!111 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) lt!56647 (zeroValue!2497 newMap!16) lt!56360 #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!57354 () (_ BitVec 64))

(assert (=> b!111201 (= lt!57354 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57349 () (_ BitVec 64))

(assert (=> b!111201 (= lt!57349 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!57350 () Unit!3382)

(assert (=> b!111201 (= lt!57350 (addStillContains!76 lt!57347 lt!57354 (zeroValue!2497 newMap!16) lt!57349))))

(assert (=> b!111201 (contains!824 (+!144 lt!57347 (tuple2!2389 lt!57354 (zeroValue!2497 newMap!16))) lt!57349)))

(declare-fun lt!57352 () Unit!3382)

(assert (=> b!111201 (= lt!57352 lt!57350)))

(declare-fun lt!57337 () ListLongMap!1547)

(assert (=> b!111201 (= lt!57337 (getCurrentListMapNoExtraKeys!111 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) lt!56647 (zeroValue!2497 newMap!16) lt!56360 #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!57342 () (_ BitVec 64))

(assert (=> b!111201 (= lt!57342 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57339 () (_ BitVec 64))

(assert (=> b!111201 (= lt!57339 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!57341 () Unit!3382)

(assert (=> b!111201 (= lt!57341 (addApplyDifferent!76 lt!57337 lt!57342 lt!56360 lt!57339))))

(assert (=> b!111201 (= (apply!100 (+!144 lt!57337 (tuple2!2389 lt!57342 lt!56360)) lt!57339) (apply!100 lt!57337 lt!57339))))

(declare-fun lt!57336 () Unit!3382)

(assert (=> b!111201 (= lt!57336 lt!57341)))

(declare-fun lt!57345 () ListLongMap!1547)

(assert (=> b!111201 (= lt!57345 (getCurrentListMapNoExtraKeys!111 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) lt!56647 (zeroValue!2497 newMap!16) lt!56360 #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!57356 () (_ BitVec 64))

(assert (=> b!111201 (= lt!57356 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57351 () (_ BitVec 64))

(assert (=> b!111201 (= lt!57351 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!57340 () Unit!3382)

(assert (=> b!111201 (= lt!57340 (addApplyDifferent!76 lt!57345 lt!57356 (zeroValue!2497 newMap!16) lt!57351))))

(assert (=> b!111201 (= (apply!100 (+!144 lt!57345 (tuple2!2389 lt!57356 (zeroValue!2497 newMap!16))) lt!57351) (apply!100 lt!57345 lt!57351))))

(declare-fun lt!57348 () Unit!3382)

(assert (=> b!111201 (= lt!57348 lt!57340)))

(declare-fun lt!57355 () ListLongMap!1547)

(assert (=> b!111201 (= lt!57355 (getCurrentListMapNoExtraKeys!111 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) lt!56647 (zeroValue!2497 newMap!16) lt!56360 #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!57344 () (_ BitVec 64))

(assert (=> b!111201 (= lt!57344 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57338 () (_ BitVec 64))

(assert (=> b!111201 (= lt!57338 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!111201 (= lt!57357 (addApplyDifferent!76 lt!57355 lt!57344 lt!56360 lt!57338))))

(assert (=> b!111201 (= (apply!100 (+!144 lt!57355 (tuple2!2389 lt!57344 lt!56360)) lt!57338) (apply!100 lt!57355 lt!57338))))

(declare-fun d!31523 () Bool)

(assert (=> d!31523 e!72299))

(declare-fun res!54908 () Bool)

(assert (=> d!31523 (=> (not res!54908) (not e!72299))))

(assert (=> d!31523 (= res!54908 (or (bvsge #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))))))))

(declare-fun lt!57353 () ListLongMap!1547)

(assert (=> d!31523 (= lt!57346 lt!57353)))

(declare-fun lt!57343 () Unit!3382)

(assert (=> d!31523 (= lt!57343 e!72292)))

(declare-fun c!19823 () Bool)

(declare-fun e!72293 () Bool)

(assert (=> d!31523 (= c!19823 e!72293)))

(declare-fun res!54905 () Bool)

(assert (=> d!31523 (=> (not res!54905) (not e!72293))))

(assert (=> d!31523 (= res!54905 (bvslt #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))))))

(assert (=> d!31523 (= lt!57353 e!72290)))

(declare-fun c!19820 () Bool)

(assert (=> d!31523 (= c!19820 (and (not (= (bvand lt!56647 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!56647 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!31523 (validMask!0 (mask!6794 newMap!16))))

(assert (=> d!31523 (= (getCurrentListMap!475 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) lt!56647 (zeroValue!2497 newMap!16) lt!56360 #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) lt!57346)))

(declare-fun bm!11855 () Bool)

(declare-fun call!11861 () ListLongMap!1547)

(declare-fun call!11858 () ListLongMap!1547)

(assert (=> bm!11855 (= call!11861 call!11858)))

(declare-fun b!111202 () Bool)

(declare-fun e!72298 () ListLongMap!1547)

(declare-fun call!11859 () ListLongMap!1547)

(assert (=> b!111202 (= e!72298 call!11859)))

(declare-fun b!111203 () Bool)

(declare-fun e!72297 () Bool)

(declare-fun call!11862 () Bool)

(assert (=> b!111203 (= e!72297 (not call!11862))))

(declare-fun b!111204 () Bool)

(declare-fun c!19819 () Bool)

(assert (=> b!111204 (= c!19819 (and (not (= (bvand lt!56647 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!56647 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!72301 () ListLongMap!1547)

(assert (=> b!111204 (= e!72298 e!72301)))

(declare-fun b!111205 () Bool)

(declare-fun e!72291 () Bool)

(assert (=> b!111205 (= e!72291 (not call!11860))))

(declare-fun bm!11856 () Bool)

(assert (=> bm!11856 (= call!11862 (contains!824 lt!57346 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!111206 () Bool)

(declare-fun e!72289 () Bool)

(assert (=> b!111206 (= e!72291 e!72289)))

(declare-fun res!54907 () Bool)

(assert (=> b!111206 (= res!54907 call!11860)))

(assert (=> b!111206 (=> (not res!54907) (not e!72289))))

(declare-fun b!111207 () Bool)

(assert (=> b!111207 (= e!72294 (= (apply!100 lt!57346 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)) (get!1353 (select (arr!2073 (_values!2609 newMap!16)) #b00000000000000000000000000000000) (dynLambda!390 (defaultEntry!2626 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!111207 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2330 (_values!2609 newMap!16))))))

(assert (=> b!111207 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))))))

(declare-fun bm!11857 () Bool)

(declare-fun call!11857 () ListLongMap!1547)

(declare-fun c!19818 () Bool)

(assert (=> bm!11857 (= call!11863 (+!144 (ite c!19820 call!11858 (ite c!19818 call!11861 call!11857)) (ite (or c!19820 c!19818) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 newMap!16)) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360))))))

(declare-fun b!111208 () Bool)

(declare-fun e!72296 () Bool)

(assert (=> b!111208 (= e!72296 (= (apply!100 lt!57346 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2497 newMap!16)))))

(declare-fun b!111209 () Bool)

(assert (=> b!111209 (= e!72299 e!72291)))

(declare-fun c!19822 () Bool)

(assert (=> b!111209 (= c!19822 (not (= (bvand lt!56647 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11858 () Bool)

(assert (=> bm!11858 (= call!11859 call!11863)))

(declare-fun b!111210 () Bool)

(declare-fun res!54909 () Bool)

(assert (=> b!111210 (=> (not res!54909) (not e!72299))))

(assert (=> b!111210 (= res!54909 e!72297)))

(declare-fun c!19821 () Bool)

(assert (=> b!111210 (= c!19821 (not (= (bvand lt!56647 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!111211 () Bool)

(assert (=> b!111211 (= e!72301 call!11857)))

(declare-fun bm!11859 () Bool)

(assert (=> bm!11859 (= call!11857 call!11861)))

(declare-fun b!111212 () Bool)

(assert (=> b!111212 (= e!72301 call!11859)))

(declare-fun b!111213 () Bool)

(assert (=> b!111213 (= e!72293 (validKeyInArray!0 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!111214 () Bool)

(assert (=> b!111214 (= e!72297 e!72296)))

(declare-fun res!54911 () Bool)

(assert (=> b!111214 (= res!54911 call!11862)))

(assert (=> b!111214 (=> (not res!54911) (not e!72296))))

(declare-fun b!111215 () Bool)

(assert (=> b!111215 (= e!72289 (= (apply!100 lt!57346 #b1000000000000000000000000000000000000000000000000000000000000000) lt!56360))))

(declare-fun b!111216 () Bool)

(assert (=> b!111216 (= e!72300 (validKeyInArray!0 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!111217 () Bool)

(assert (=> b!111217 (= e!72290 e!72298)))

(assert (=> b!111217 (= c!19818 (and (not (= (bvand lt!56647 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!56647 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11860 () Bool)

(assert (=> bm!11860 (= call!11858 (getCurrentListMapNoExtraKeys!111 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) lt!56647 (zeroValue!2497 newMap!16) lt!56360 #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(assert (= (and d!31523 c!19820) b!111199))

(assert (= (and d!31523 (not c!19820)) b!111217))

(assert (= (and b!111217 c!19818) b!111202))

(assert (= (and b!111217 (not c!19818)) b!111204))

(assert (= (and b!111204 c!19819) b!111212))

(assert (= (and b!111204 (not c!19819)) b!111211))

(assert (= (or b!111212 b!111211) bm!11859))

(assert (= (or b!111202 bm!11859) bm!11855))

(assert (= (or b!111202 b!111212) bm!11858))

(assert (= (or b!111199 bm!11855) bm!11860))

(assert (= (or b!111199 bm!11858) bm!11857))

(assert (= (and d!31523 res!54905) b!111213))

(assert (= (and d!31523 c!19823) b!111201))

(assert (= (and d!31523 (not c!19823)) b!111198))

(assert (= (and d!31523 res!54908) b!111197))

(assert (= (and b!111197 res!54910) b!111216))

(assert (= (and b!111197 (not res!54906)) b!111200))

(assert (= (and b!111200 res!54904) b!111207))

(assert (= (and b!111197 res!54903) b!111210))

(assert (= (and b!111210 c!19821) b!111214))

(assert (= (and b!111210 (not c!19821)) b!111203))

(assert (= (and b!111214 res!54911) b!111208))

(assert (= (or b!111214 b!111203) bm!11856))

(assert (= (and b!111210 res!54909) b!111209))

(assert (= (and b!111209 c!19822) b!111206))

(assert (= (and b!111209 (not c!19822)) b!111205))

(assert (= (and b!111206 res!54907) b!111215))

(assert (= (or b!111206 b!111205) bm!11854))

(declare-fun b_lambda!4975 () Bool)

(assert (=> (not b_lambda!4975) (not b!111207)))

(assert (=> b!111207 t!5751))

(declare-fun b_and!6845 () Bool)

(assert (= b_and!6841 (and (=> t!5751 result!3533) b_and!6845)))

(assert (=> b!111207 t!5753))

(declare-fun b_and!6847 () Bool)

(assert (= b_and!6843 (and (=> t!5753 result!3535) b_and!6847)))

(assert (=> b!111216 m!124605))

(assert (=> b!111216 m!124605))

(assert (=> b!111216 m!124607))

(declare-fun m!126495 () Bool)

(assert (=> b!111201 m!126495))

(declare-fun m!126497 () Bool)

(assert (=> b!111201 m!126497))

(declare-fun m!126499 () Bool)

(assert (=> b!111201 m!126499))

(declare-fun m!126501 () Bool)

(assert (=> b!111201 m!126501))

(declare-fun m!126503 () Bool)

(assert (=> b!111201 m!126503))

(declare-fun m!126505 () Bool)

(assert (=> b!111201 m!126505))

(declare-fun m!126507 () Bool)

(assert (=> b!111201 m!126507))

(declare-fun m!126509 () Bool)

(assert (=> b!111201 m!126509))

(declare-fun m!126511 () Bool)

(assert (=> b!111201 m!126511))

(declare-fun m!126513 () Bool)

(assert (=> b!111201 m!126513))

(declare-fun m!126515 () Bool)

(assert (=> b!111201 m!126515))

(assert (=> b!111201 m!126503))

(assert (=> b!111201 m!126507))

(declare-fun m!126517 () Bool)

(assert (=> b!111201 m!126517))

(assert (=> b!111201 m!124605))

(declare-fun m!126519 () Bool)

(assert (=> b!111201 m!126519))

(assert (=> b!111201 m!126513))

(declare-fun m!126521 () Bool)

(assert (=> b!111201 m!126521))

(declare-fun m!126523 () Bool)

(assert (=> b!111201 m!126523))

(assert (=> b!111201 m!126521))

(declare-fun m!126525 () Bool)

(assert (=> b!111201 m!126525))

(assert (=> b!111213 m!124605))

(assert (=> b!111213 m!124605))

(assert (=> b!111213 m!124607))

(declare-fun m!126527 () Bool)

(assert (=> bm!11856 m!126527))

(assert (=> bm!11860 m!126519))

(assert (=> d!31523 m!124579))

(declare-fun m!126529 () Bool)

(assert (=> bm!11857 m!126529))

(declare-fun m!126531 () Bool)

(assert (=> b!111208 m!126531))

(declare-fun m!126533 () Bool)

(assert (=> bm!11854 m!126533))

(declare-fun m!126535 () Bool)

(assert (=> b!111215 m!126535))

(assert (=> b!111207 m!124605))

(declare-fun m!126537 () Bool)

(assert (=> b!111207 m!126537))

(assert (=> b!111207 m!124605))

(assert (=> b!111207 m!124973))

(assert (=> b!111207 m!124973))

(assert (=> b!111207 m!124767))

(assert (=> b!111207 m!124975))

(assert (=> b!111207 m!124767))

(declare-fun m!126539 () Bool)

(assert (=> b!111199 m!126539))

(assert (=> b!111200 m!124605))

(assert (=> b!111200 m!124605))

(declare-fun m!126541 () Bool)

(assert (=> b!111200 m!126541))

(assert (=> d!30981 d!31523))

(assert (=> d!30981 d!31187))

(declare-fun d!31525 () Bool)

(declare-fun e!72302 () Bool)

(assert (=> d!31525 e!72302))

(declare-fun res!54913 () Bool)

(assert (=> d!31525 (=> (not res!54913) (not e!72302))))

(declare-fun lt!57361 () ListLongMap!1547)

(assert (=> d!31525 (= res!54913 (contains!824 lt!57361 (_1!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360))))))

(declare-fun lt!57360 () List!1609)

(assert (=> d!31525 (= lt!57361 (ListLongMap!1548 lt!57360))))

(declare-fun lt!57359 () Unit!3382)

(declare-fun lt!57358 () Unit!3382)

(assert (=> d!31525 (= lt!57359 lt!57358)))

(assert (=> d!31525 (= (getValueByKey!159 lt!57360 (_1!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360))) (Some!164 (_2!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360))))))

(assert (=> d!31525 (= lt!57358 (lemmaContainsTupThenGetReturnValue!75 lt!57360 (_1!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360)) (_2!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360))))))

(assert (=> d!31525 (= lt!57360 (insertStrictlySorted!78 (toList!789 (getCurrentListMap!475 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16))) (_1!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360)) (_2!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360))))))

(assert (=> d!31525 (= (+!144 (getCurrentListMap!475 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360)) lt!57361)))

(declare-fun b!111218 () Bool)

(declare-fun res!54912 () Bool)

(assert (=> b!111218 (=> (not res!54912) (not e!72302))))

(assert (=> b!111218 (= res!54912 (= (getValueByKey!159 (toList!789 lt!57361) (_1!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360))) (Some!164 (_2!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360)))))))

(declare-fun b!111219 () Bool)

(assert (=> b!111219 (= e!72302 (contains!827 (toList!789 lt!57361) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56360)))))

(assert (= (and d!31525 res!54913) b!111218))

(assert (= (and b!111218 res!54912) b!111219))

(declare-fun m!126543 () Bool)

(assert (=> d!31525 m!126543))

(declare-fun m!126545 () Bool)

(assert (=> d!31525 m!126545))

(declare-fun m!126547 () Bool)

(assert (=> d!31525 m!126547))

(declare-fun m!126549 () Bool)

(assert (=> d!31525 m!126549))

(declare-fun m!126551 () Bool)

(assert (=> b!111218 m!126551))

(declare-fun m!126553 () Bool)

(assert (=> b!111219 m!126553))

(assert (=> d!30981 d!31525))

(declare-fun lt!57362 () Bool)

(declare-fun d!31527 () Bool)

(assert (=> d!31527 (= lt!57362 (select (content!114 (toList!789 lt!56880)) (tuple2!2389 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun e!72304 () Bool)

(assert (=> d!31527 (= lt!57362 e!72304)))

(declare-fun res!54915 () Bool)

(assert (=> d!31527 (=> (not res!54915) (not e!72304))))

(assert (=> d!31527 (= res!54915 ((_ is Cons!1605) (toList!789 lt!56880)))))

(assert (=> d!31527 (= (contains!827 (toList!789 lt!56880) (tuple2!2389 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))) lt!57362)))

(declare-fun b!111220 () Bool)

(declare-fun e!72303 () Bool)

(assert (=> b!111220 (= e!72304 e!72303)))

(declare-fun res!54914 () Bool)

(assert (=> b!111220 (=> res!54914 e!72303)))

(assert (=> b!111220 (= res!54914 (= (h!2204 (toList!789 lt!56880)) (tuple2!2389 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun b!111221 () Bool)

(assert (=> b!111221 (= e!72303 (contains!827 (t!5738 (toList!789 lt!56880)) (tuple2!2389 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))))

(assert (= (and d!31527 res!54915) b!111220))

(assert (= (and b!111220 (not res!54914)) b!111221))

(declare-fun m!126555 () Bool)

(assert (=> d!31527 m!126555))

(declare-fun m!126557 () Bool)

(assert (=> d!31527 m!126557))

(declare-fun m!126559 () Bool)

(assert (=> b!111221 m!126559))

(assert (=> b!110273 d!31527))

(declare-fun d!31529 () Bool)

(declare-fun res!54916 () Bool)

(declare-fun e!72305 () Bool)

(assert (=> d!31529 (=> res!54916 e!72305)))

(assert (=> d!31529 (= res!54916 (and ((_ is Cons!1605) (toList!789 lt!56545)) (= (_1!1205 (h!2204 (toList!789 lt!56545))) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!31529 (= (containsKey!162 (toList!789 lt!56545) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!72305)))

(declare-fun b!111222 () Bool)

(declare-fun e!72306 () Bool)

(assert (=> b!111222 (= e!72305 e!72306)))

(declare-fun res!54917 () Bool)

(assert (=> b!111222 (=> (not res!54917) (not e!72306))))

(assert (=> b!111222 (= res!54917 (and (or (not ((_ is Cons!1605) (toList!789 lt!56545))) (bvsle (_1!1205 (h!2204 (toList!789 lt!56545))) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1605) (toList!789 lt!56545)) (bvslt (_1!1205 (h!2204 (toList!789 lt!56545))) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!111223 () Bool)

(assert (=> b!111223 (= e!72306 (containsKey!162 (t!5738 (toList!789 lt!56545)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!31529 (not res!54916)) b!111222))

(assert (= (and b!111222 res!54917) b!111223))

(assert (=> b!111223 m!124267))

(declare-fun m!126561 () Bool)

(assert (=> b!111223 m!126561))

(assert (=> d!31053 d!31529))

(declare-fun d!31531 () Bool)

(assert (=> d!31531 (= (apply!100 lt!56908 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1356 (getValueByKey!159 (toList!789 lt!56908) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4582 () Bool)

(assert (= bs!4582 d!31531))

(assert (=> bs!4582 m!125557))

(assert (=> bs!4582 m!125557))

(declare-fun m!126563 () Bool)

(assert (=> bs!4582 m!126563))

(assert (=> b!110297 d!31531))

(declare-fun d!31533 () Bool)

(assert (=> d!31533 (= (isDefined!111 (getValueByKey!159 (toList!789 lt!56483) (_1!1205 lt!56363))) (not (isEmpty!383 (getValueByKey!159 (toList!789 lt!56483) (_1!1205 lt!56363)))))))

(declare-fun bs!4583 () Bool)

(assert (= bs!4583 d!31533))

(assert (=> bs!4583 m!124303))

(declare-fun m!126565 () Bool)

(assert (=> bs!4583 m!126565))

(assert (=> b!110348 d!31533))

(assert (=> b!110348 d!31027))

(declare-fun d!31535 () Bool)

(assert (=> d!31535 (= ($colon$colon!82 e!71700 (ite c!19531 (h!2204 (toList!789 (+!144 lt!56369 lt!56370))) (tuple2!2389 (_1!1205 lt!56363) (_2!1205 lt!56363)))) (Cons!1605 (ite c!19531 (h!2204 (toList!789 (+!144 lt!56369 lt!56370))) (tuple2!2389 (_1!1205 lt!56363) (_2!1205 lt!56363))) e!71700))))

(assert (=> bm!11748 d!31535))

(declare-fun d!31537 () Bool)

(assert (=> d!31537 (= (apply!100 lt!56831 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1356 (getValueByKey!159 (toList!789 lt!56831) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4584 () Bool)

(assert (= bs!4584 d!31537))

(assert (=> bs!4584 m!125975))

(assert (=> bs!4584 m!125975))

(declare-fun m!126567 () Bool)

(assert (=> bs!4584 m!126567))

(assert (=> b!110182 d!31537))

(declare-fun b!111227 () Bool)

(declare-fun e!72308 () Option!165)

(assert (=> b!111227 (= e!72308 None!163)))

(declare-fun b!111224 () Bool)

(declare-fun e!72307 () Option!165)

(assert (=> b!111224 (= e!72307 (Some!164 (_2!1205 (h!2204 (t!5738 lt!56453)))))))

(declare-fun b!111226 () Bool)

(assert (=> b!111226 (= e!72308 (getValueByKey!159 (t!5738 (t!5738 lt!56453)) (_1!1205 lt!56370)))))

(declare-fun d!31539 () Bool)

(declare-fun c!19824 () Bool)

(assert (=> d!31539 (= c!19824 (and ((_ is Cons!1605) (t!5738 lt!56453)) (= (_1!1205 (h!2204 (t!5738 lt!56453))) (_1!1205 lt!56370))))))

(assert (=> d!31539 (= (getValueByKey!159 (t!5738 lt!56453) (_1!1205 lt!56370)) e!72307)))

(declare-fun b!111225 () Bool)

(assert (=> b!111225 (= e!72307 e!72308)))

(declare-fun c!19825 () Bool)

(assert (=> b!111225 (= c!19825 (and ((_ is Cons!1605) (t!5738 lt!56453)) (not (= (_1!1205 (h!2204 (t!5738 lt!56453))) (_1!1205 lt!56370)))))))

(assert (= (and d!31539 c!19824) b!111224))

(assert (= (and d!31539 (not c!19824)) b!111225))

(assert (= (and b!111225 c!19825) b!111226))

(assert (= (and b!111225 (not c!19825)) b!111227))

(declare-fun m!126569 () Bool)

(assert (=> b!111226 m!126569))

(assert (=> b!110455 d!31539))

(declare-fun d!31541 () Bool)

(assert (=> d!31541 (= (get!1356 (getValueByKey!159 (toList!789 (+!144 lt!56544 (tuple2!2389 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))) lt!56550)) (v!2936 (getValueByKey!159 (toList!789 (+!144 lt!56544 (tuple2!2389 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))) lt!56550)))))

(assert (=> d!30949 d!31541))

(declare-fun b!111231 () Bool)

(declare-fun e!72310 () Option!165)

(assert (=> b!111231 (= e!72310 None!163)))

(declare-fun b!111228 () Bool)

(declare-fun e!72309 () Option!165)

(assert (=> b!111228 (= e!72309 (Some!164 (_2!1205 (h!2204 (toList!789 (+!144 lt!56544 (tuple2!2389 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))))))))

(declare-fun b!111230 () Bool)

(assert (=> b!111230 (= e!72310 (getValueByKey!159 (t!5738 (toList!789 (+!144 lt!56544 (tuple2!2389 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))) lt!56550))))

(declare-fun d!31543 () Bool)

(declare-fun c!19826 () Bool)

(assert (=> d!31543 (= c!19826 (and ((_ is Cons!1605) (toList!789 (+!144 lt!56544 (tuple2!2389 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))) (= (_1!1205 (h!2204 (toList!789 (+!144 lt!56544 (tuple2!2389 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))) lt!56550)))))

(assert (=> d!31543 (= (getValueByKey!159 (toList!789 (+!144 lt!56544 (tuple2!2389 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))) lt!56550) e!72309)))

(declare-fun b!111229 () Bool)

(assert (=> b!111229 (= e!72309 e!72310)))

(declare-fun c!19827 () Bool)

(assert (=> b!111229 (= c!19827 (and ((_ is Cons!1605) (toList!789 (+!144 lt!56544 (tuple2!2389 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))) (not (= (_1!1205 (h!2204 (toList!789 (+!144 lt!56544 (tuple2!2389 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))) lt!56550))))))

(assert (= (and d!31543 c!19826) b!111228))

(assert (= (and d!31543 (not c!19826)) b!111229))

(assert (= (and b!111229 c!19827) b!111230))

(assert (= (and b!111229 (not c!19827)) b!111231))

(declare-fun m!126571 () Bool)

(assert (=> b!111230 m!126571))

(assert (=> d!30949 d!31543))

(declare-fun b!111235 () Bool)

(declare-fun e!72312 () Option!165)

(assert (=> b!111235 (= e!72312 None!163)))

(declare-fun b!111232 () Bool)

(declare-fun e!72311 () Option!165)

(assert (=> b!111232 (= e!72311 (Some!164 (_2!1205 (h!2204 (toList!789 lt!56930)))))))

(declare-fun b!111234 () Bool)

(assert (=> b!111234 (= e!72312 (getValueByKey!159 (t!5738 (toList!789 lt!56930)) (_1!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun d!31545 () Bool)

(declare-fun c!19828 () Bool)

(assert (=> d!31545 (= c!19828 (and ((_ is Cons!1605) (toList!789 lt!56930)) (= (_1!1205 (h!2204 (toList!789 lt!56930))) (_1!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> d!31545 (= (getValueByKey!159 (toList!789 lt!56930) (_1!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))) e!72311)))

(declare-fun b!111233 () Bool)

(assert (=> b!111233 (= e!72311 e!72312)))

(declare-fun c!19829 () Bool)

(assert (=> b!111233 (= c!19829 (and ((_ is Cons!1605) (toList!789 lt!56930)) (not (= (_1!1205 (h!2204 (toList!789 lt!56930))) (_1!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))))

(assert (= (and d!31545 c!19828) b!111232))

(assert (= (and d!31545 (not c!19828)) b!111233))

(assert (= (and b!111233 c!19829) b!111234))

(assert (= (and b!111233 (not c!19829)) b!111235))

(declare-fun m!126573 () Bool)

(assert (=> b!111234 m!126573))

(assert (=> b!110317 d!31545))

(declare-fun d!31547 () Bool)

(declare-fun res!54918 () Bool)

(declare-fun e!72313 () Bool)

(assert (=> d!31547 (=> res!54918 e!72313)))

(assert (=> d!31547 (= res!54918 (and ((_ is Cons!1605) lt!56482) (= (_1!1205 (h!2204 lt!56482)) (_1!1205 lt!56363))))))

(assert (=> d!31547 (= (containsKey!162 lt!56482 (_1!1205 lt!56363)) e!72313)))

(declare-fun b!111236 () Bool)

(declare-fun e!72314 () Bool)

(assert (=> b!111236 (= e!72313 e!72314)))

(declare-fun res!54919 () Bool)

(assert (=> b!111236 (=> (not res!54919) (not e!72314))))

(assert (=> b!111236 (= res!54919 (and (or (not ((_ is Cons!1605) lt!56482)) (bvsle (_1!1205 (h!2204 lt!56482)) (_1!1205 lt!56363))) ((_ is Cons!1605) lt!56482) (bvslt (_1!1205 (h!2204 lt!56482)) (_1!1205 lt!56363))))))

(declare-fun b!111237 () Bool)

(assert (=> b!111237 (= e!72314 (containsKey!162 (t!5738 lt!56482) (_1!1205 lt!56363)))))

(assert (= (and d!31547 (not res!54918)) b!111236))

(assert (= (and b!111236 res!54919) b!111237))

(declare-fun m!126575 () Bool)

(assert (=> b!111237 m!126575))

(assert (=> b!110353 d!31547))

(declare-fun d!31549 () Bool)

(assert (=> d!31549 (= (inRange!0 (ite c!19549 (index!3170 lt!56942) (index!3173 lt!56942)) (mask!6794 newMap!16)) (and (bvsge (ite c!19549 (index!3170 lt!56942) (index!3173 lt!56942)) #b00000000000000000000000000000000) (bvslt (ite c!19549 (index!3170 lt!56942) (index!3173 lt!56942)) (bvadd (mask!6794 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!11763 d!31549))

(declare-fun d!31551 () Bool)

(declare-fun e!72316 () Bool)

(assert (=> d!31551 e!72316))

(declare-fun res!54920 () Bool)

(assert (=> d!31551 (=> res!54920 e!72316)))

(declare-fun lt!57365 () Bool)

(assert (=> d!31551 (= res!54920 (not lt!57365))))

(declare-fun lt!57366 () Bool)

(assert (=> d!31551 (= lt!57365 lt!57366)))

(declare-fun lt!57363 () Unit!3382)

(declare-fun e!72315 () Unit!3382)

(assert (=> d!31551 (= lt!57363 e!72315)))

(declare-fun c!19830 () Bool)

(assert (=> d!31551 (= c!19830 lt!57366)))

(assert (=> d!31551 (= lt!57366 (containsKey!162 (toList!789 lt!56930) (_1!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> d!31551 (= (contains!824 lt!56930 (_1!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))) lt!57365)))

(declare-fun b!111238 () Bool)

(declare-fun lt!57364 () Unit!3382)

(assert (=> b!111238 (= e!72315 lt!57364)))

(assert (=> b!111238 (= lt!57364 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 lt!56930) (_1!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> b!111238 (isDefined!111 (getValueByKey!159 (toList!789 lt!56930) (_1!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun b!111239 () Bool)

(declare-fun Unit!3443 () Unit!3382)

(assert (=> b!111239 (= e!72315 Unit!3443)))

(declare-fun b!111240 () Bool)

(assert (=> b!111240 (= e!72316 (isDefined!111 (getValueByKey!159 (toList!789 lt!56930) (_1!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(assert (= (and d!31551 c!19830) b!111238))

(assert (= (and d!31551 (not c!19830)) b!111239))

(assert (= (and d!31551 (not res!54920)) b!111240))

(declare-fun m!126577 () Bool)

(assert (=> d!31551 m!126577))

(declare-fun m!126579 () Bool)

(assert (=> b!111238 m!126579))

(assert (=> b!111238 m!125011))

(assert (=> b!111238 m!125011))

(declare-fun m!126581 () Bool)

(assert (=> b!111238 m!126581))

(assert (=> b!111240 m!125011))

(assert (=> b!111240 m!125011))

(assert (=> b!111240 m!126581))

(assert (=> d!30975 d!31551))

(declare-fun b!111244 () Bool)

(declare-fun e!72318 () Option!165)

(assert (=> b!111244 (= e!72318 None!163)))

(declare-fun b!111241 () Bool)

(declare-fun e!72317 () Option!165)

(assert (=> b!111241 (= e!72317 (Some!164 (_2!1205 (h!2204 lt!56929))))))

(declare-fun b!111243 () Bool)

(assert (=> b!111243 (= e!72318 (getValueByKey!159 (t!5738 lt!56929) (_1!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun d!31553 () Bool)

(declare-fun c!19831 () Bool)

(assert (=> d!31553 (= c!19831 (and ((_ is Cons!1605) lt!56929) (= (_1!1205 (h!2204 lt!56929)) (_1!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> d!31553 (= (getValueByKey!159 lt!56929 (_1!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))) e!72317)))

(declare-fun b!111242 () Bool)

(assert (=> b!111242 (= e!72317 e!72318)))

(declare-fun c!19832 () Bool)

(assert (=> b!111242 (= c!19832 (and ((_ is Cons!1605) lt!56929) (not (= (_1!1205 (h!2204 lt!56929)) (_1!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))))

(assert (= (and d!31553 c!19831) b!111241))

(assert (= (and d!31553 (not c!19831)) b!111242))

(assert (= (and b!111242 c!19832) b!111243))

(assert (= (and b!111242 (not c!19832)) b!111244))

(declare-fun m!126583 () Bool)

(assert (=> b!111243 m!126583))

(assert (=> d!30975 d!31553))

(declare-fun d!31555 () Bool)

(assert (=> d!31555 (= (getValueByKey!159 lt!56929 (_1!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))) (Some!164 (_2!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun lt!57367 () Unit!3382)

(assert (=> d!31555 (= lt!57367 (choose!695 lt!56929 (_1!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992))))) (_2!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun e!72319 () Bool)

(assert (=> d!31555 e!72319))

(declare-fun res!54921 () Bool)

(assert (=> d!31555 (=> (not res!54921) (not e!72319))))

(assert (=> d!31555 (= res!54921 (isStrictlySorted!298 lt!56929))))

(assert (=> d!31555 (= (lemmaContainsTupThenGetReturnValue!75 lt!56929 (_1!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992))))) (_2!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))) lt!57367)))

(declare-fun b!111245 () Bool)

(declare-fun res!54922 () Bool)

(assert (=> b!111245 (=> (not res!54922) (not e!72319))))

(assert (=> b!111245 (= res!54922 (containsKey!162 lt!56929 (_1!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun b!111246 () Bool)

(assert (=> b!111246 (= e!72319 (contains!827 lt!56929 (tuple2!2389 (_1!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992))))) (_2!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(assert (= (and d!31555 res!54921) b!111245))

(assert (= (and b!111245 res!54922) b!111246))

(assert (=> d!31555 m!125005))

(declare-fun m!126585 () Bool)

(assert (=> d!31555 m!126585))

(declare-fun m!126587 () Bool)

(assert (=> d!31555 m!126587))

(declare-fun m!126589 () Bool)

(assert (=> b!111245 m!126589))

(declare-fun m!126591 () Bool)

(assert (=> b!111246 m!126591))

(assert (=> d!30975 d!31555))

(declare-fun b!111247 () Bool)

(declare-fun e!72322 () List!1609)

(assert (=> b!111247 (= e!72322 (insertStrictlySorted!78 (t!5738 (toList!789 call!11646)) (_1!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992))))) (_2!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun b!111248 () Bool)

(declare-fun res!54924 () Bool)

(declare-fun e!72324 () Bool)

(assert (=> b!111248 (=> (not res!54924) (not e!72324))))

(declare-fun lt!57368 () List!1609)

(assert (=> b!111248 (= res!54924 (containsKey!162 lt!57368 (_1!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun b!111249 () Bool)

(declare-fun e!72323 () List!1609)

(declare-fun call!11865 () List!1609)

(assert (=> b!111249 (= e!72323 call!11865)))

(declare-fun bm!11861 () Bool)

(declare-fun call!11866 () List!1609)

(declare-fun call!11864 () List!1609)

(assert (=> bm!11861 (= call!11866 call!11864)))

(declare-fun bm!11862 () Bool)

(assert (=> bm!11862 (= call!11865 call!11866)))

(declare-fun b!111250 () Bool)

(assert (=> b!111250 (= e!72323 call!11865)))

(declare-fun bm!11863 () Bool)

(declare-fun c!19835 () Bool)

(assert (=> bm!11863 (= call!11864 ($colon$colon!82 e!72322 (ite c!19835 (h!2204 (toList!789 call!11646)) (tuple2!2389 (_1!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992))))) (_2!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))))

(declare-fun c!19836 () Bool)

(assert (=> bm!11863 (= c!19836 c!19835)))

(declare-fun b!111251 () Bool)

(declare-fun e!72321 () List!1609)

(assert (=> b!111251 (= e!72321 call!11866)))

(declare-fun d!31557 () Bool)

(assert (=> d!31557 e!72324))

(declare-fun res!54923 () Bool)

(assert (=> d!31557 (=> (not res!54923) (not e!72324))))

(assert (=> d!31557 (= res!54923 (isStrictlySorted!298 lt!57368))))

(declare-fun e!72320 () List!1609)

(assert (=> d!31557 (= lt!57368 e!72320)))

(assert (=> d!31557 (= c!19835 (and ((_ is Cons!1605) (toList!789 call!11646)) (bvslt (_1!1205 (h!2204 (toList!789 call!11646))) (_1!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> d!31557 (isStrictlySorted!298 (toList!789 call!11646))))

(assert (=> d!31557 (= (insertStrictlySorted!78 (toList!789 call!11646) (_1!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992))))) (_2!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))) lt!57368)))

(declare-fun b!111252 () Bool)

(assert (=> b!111252 (= e!72320 call!11864)))

(declare-fun b!111253 () Bool)

(declare-fun c!19833 () Bool)

(assert (=> b!111253 (= c!19833 (and ((_ is Cons!1605) (toList!789 call!11646)) (bvsgt (_1!1205 (h!2204 (toList!789 call!11646))) (_1!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> b!111253 (= e!72321 e!72323)))

(declare-fun c!19834 () Bool)

(declare-fun b!111254 () Bool)

(assert (=> b!111254 (= e!72322 (ite c!19834 (t!5738 (toList!789 call!11646)) (ite c!19833 (Cons!1605 (h!2204 (toList!789 call!11646)) (t!5738 (toList!789 call!11646))) Nil!1606)))))

(declare-fun b!111255 () Bool)

(assert (=> b!111255 (= e!72324 (contains!827 lt!57368 (tuple2!2389 (_1!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992))))) (_2!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(declare-fun b!111256 () Bool)

(assert (=> b!111256 (= e!72320 e!72321)))

(assert (=> b!111256 (= c!19834 (and ((_ is Cons!1605) (toList!789 call!11646)) (= (_1!1205 (h!2204 (toList!789 call!11646))) (_1!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(assert (= (and d!31557 c!19835) b!111252))

(assert (= (and d!31557 (not c!19835)) b!111256))

(assert (= (and b!111256 c!19834) b!111251))

(assert (= (and b!111256 (not c!19834)) b!111253))

(assert (= (and b!111253 c!19833) b!111249))

(assert (= (and b!111253 (not c!19833)) b!111250))

(assert (= (or b!111249 b!111250) bm!11862))

(assert (= (or b!111251 bm!11862) bm!11861))

(assert (= (or b!111252 bm!11861) bm!11863))

(assert (= (and bm!11863 c!19836) b!111247))

(assert (= (and bm!11863 (not c!19836)) b!111254))

(assert (= (and d!31557 res!54923) b!111248))

(assert (= (and b!111248 res!54924) b!111255))

(declare-fun m!126593 () Bool)

(assert (=> bm!11863 m!126593))

(declare-fun m!126595 () Bool)

(assert (=> b!111255 m!126595))

(declare-fun m!126597 () Bool)

(assert (=> b!111248 m!126597))

(declare-fun m!126599 () Bool)

(assert (=> d!31557 m!126599))

(declare-fun m!126601 () Bool)

(assert (=> d!31557 m!126601))

(declare-fun m!126603 () Bool)

(assert (=> b!111247 m!126603))

(assert (=> d!30975 d!31557))

(declare-fun d!31559 () Bool)

(declare-fun res!54925 () Bool)

(declare-fun e!72325 () Bool)

(assert (=> d!31559 (=> res!54925 e!72325)))

(assert (=> d!31559 (= res!54925 (and ((_ is Cons!1605) (toList!789 call!11700)) (= (_1!1205 (h!2204 (toList!789 call!11700))) (select (arr!2072 (_keys!4340 newMap!16)) (index!3171 lt!56646)))))))

(assert (=> d!31559 (= (containsKey!162 (toList!789 call!11700) (select (arr!2072 (_keys!4340 newMap!16)) (index!3171 lt!56646))) e!72325)))

(declare-fun b!111257 () Bool)

(declare-fun e!72326 () Bool)

(assert (=> b!111257 (= e!72325 e!72326)))

(declare-fun res!54926 () Bool)

(assert (=> b!111257 (=> (not res!54926) (not e!72326))))

(assert (=> b!111257 (= res!54926 (and (or (not ((_ is Cons!1605) (toList!789 call!11700))) (bvsle (_1!1205 (h!2204 (toList!789 call!11700))) (select (arr!2072 (_keys!4340 newMap!16)) (index!3171 lt!56646)))) ((_ is Cons!1605) (toList!789 call!11700)) (bvslt (_1!1205 (h!2204 (toList!789 call!11700))) (select (arr!2072 (_keys!4340 newMap!16)) (index!3171 lt!56646)))))))

(declare-fun b!111258 () Bool)

(assert (=> b!111258 (= e!72326 (containsKey!162 (t!5738 (toList!789 call!11700)) (select (arr!2072 (_keys!4340 newMap!16)) (index!3171 lt!56646))))))

(assert (= (and d!31559 (not res!54925)) b!111257))

(assert (= (and b!111257 res!54926) b!111258))

(assert (=> b!111258 m!124407))

(declare-fun m!126605 () Bool)

(assert (=> b!111258 m!126605))

(assert (=> d!30887 d!31559))

(declare-fun b!111262 () Bool)

(declare-fun e!72328 () Option!165)

(assert (=> b!111262 (= e!72328 None!163)))

(declare-fun b!111259 () Bool)

(declare-fun e!72327 () Option!165)

(assert (=> b!111259 (= e!72327 (Some!164 (_2!1205 (h!2204 (toList!789 lt!56760)))))))

(declare-fun b!111261 () Bool)

(assert (=> b!111261 (= e!72328 (getValueByKey!159 (t!5738 (toList!789 lt!56760)) (_1!1205 (tuple2!2389 lt!56474 lt!56478))))))

(declare-fun d!31561 () Bool)

(declare-fun c!19837 () Bool)

(assert (=> d!31561 (= c!19837 (and ((_ is Cons!1605) (toList!789 lt!56760)) (= (_1!1205 (h!2204 (toList!789 lt!56760))) (_1!1205 (tuple2!2389 lt!56474 lt!56478)))))))

(assert (=> d!31561 (= (getValueByKey!159 (toList!789 lt!56760) (_1!1205 (tuple2!2389 lt!56474 lt!56478))) e!72327)))

(declare-fun b!111260 () Bool)

(assert (=> b!111260 (= e!72327 e!72328)))

(declare-fun c!19838 () Bool)

(assert (=> b!111260 (= c!19838 (and ((_ is Cons!1605) (toList!789 lt!56760)) (not (= (_1!1205 (h!2204 (toList!789 lt!56760))) (_1!1205 (tuple2!2389 lt!56474 lt!56478))))))))

(assert (= (and d!31561 c!19837) b!111259))

(assert (= (and d!31561 (not c!19837)) b!111260))

(assert (= (and b!111260 c!19838) b!111261))

(assert (= (and b!111260 (not c!19838)) b!111262))

(declare-fun m!126607 () Bool)

(assert (=> b!111261 m!126607))

(assert (=> b!110067 d!31561))

(declare-fun b!111266 () Bool)

(declare-fun e!72330 () Option!165)

(assert (=> b!111266 (= e!72330 None!163)))

(declare-fun b!111263 () Bool)

(declare-fun e!72329 () Option!165)

(assert (=> b!111263 (= e!72329 (Some!164 (_2!1205 (h!2204 (t!5738 (toList!789 lt!56458))))))))

(declare-fun b!111265 () Bool)

(assert (=> b!111265 (= e!72330 (getValueByKey!159 (t!5738 (t!5738 (toList!789 lt!56458))) (_1!1205 lt!56363)))))

(declare-fun d!31563 () Bool)

(declare-fun c!19839 () Bool)

(assert (=> d!31563 (= c!19839 (and ((_ is Cons!1605) (t!5738 (toList!789 lt!56458))) (= (_1!1205 (h!2204 (t!5738 (toList!789 lt!56458)))) (_1!1205 lt!56363))))))

(assert (=> d!31563 (= (getValueByKey!159 (t!5738 (toList!789 lt!56458)) (_1!1205 lt!56363)) e!72329)))

(declare-fun b!111264 () Bool)

(assert (=> b!111264 (= e!72329 e!72330)))

(declare-fun c!19840 () Bool)

(assert (=> b!111264 (= c!19840 (and ((_ is Cons!1605) (t!5738 (toList!789 lt!56458))) (not (= (_1!1205 (h!2204 (t!5738 (toList!789 lt!56458)))) (_1!1205 lt!56363)))))))

(assert (= (and d!31563 c!19839) b!111263))

(assert (= (and d!31563 (not c!19839)) b!111264))

(assert (= (and b!111264 c!19840) b!111265))

(assert (= (and b!111264 (not c!19840)) b!111266))

(declare-fun m!126609 () Bool)

(assert (=> b!111265 m!126609))

(assert (=> b!110418 d!31563))

(assert (=> b!110154 d!31469))

(declare-fun d!31565 () Bool)

(declare-fun e!72332 () Bool)

(assert (=> d!31565 e!72332))

(declare-fun res!54927 () Bool)

(assert (=> d!31565 (=> res!54927 e!72332)))

(declare-fun lt!57371 () Bool)

(assert (=> d!31565 (= res!54927 (not lt!57371))))

(declare-fun lt!57372 () Bool)

(assert (=> d!31565 (= lt!57371 lt!57372)))

(declare-fun lt!57369 () Unit!3382)

(declare-fun e!72331 () Unit!3382)

(assert (=> d!31565 (= lt!57369 e!72331)))

(declare-fun c!19841 () Bool)

(assert (=> d!31565 (= c!19841 lt!57372)))

(assert (=> d!31565 (= lt!57372 (containsKey!162 (toList!789 lt!56880) (_1!1205 (tuple2!2389 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> d!31565 (= (contains!824 lt!56880 (_1!1205 (tuple2!2389 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))) lt!57371)))

(declare-fun b!111267 () Bool)

(declare-fun lt!57370 () Unit!3382)

(assert (=> b!111267 (= e!72331 lt!57370)))

(assert (=> b!111267 (= lt!57370 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 lt!56880) (_1!1205 (tuple2!2389 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> b!111267 (isDefined!111 (getValueByKey!159 (toList!789 lt!56880) (_1!1205 (tuple2!2389 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun b!111268 () Bool)

(declare-fun Unit!3444 () Unit!3382)

(assert (=> b!111268 (= e!72331 Unit!3444)))

(declare-fun b!111269 () Bool)

(assert (=> b!111269 (= e!72332 (isDefined!111 (getValueByKey!159 (toList!789 lt!56880) (_1!1205 (tuple2!2389 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(assert (= (and d!31565 c!19841) b!111267))

(assert (= (and d!31565 (not c!19841)) b!111268))

(assert (= (and d!31565 (not res!54927)) b!111269))

(declare-fun m!126611 () Bool)

(assert (=> d!31565 m!126611))

(declare-fun m!126613 () Bool)

(assert (=> b!111267 m!126613))

(assert (=> b!111267 m!124859))

(assert (=> b!111267 m!124859))

(declare-fun m!126615 () Bool)

(assert (=> b!111267 m!126615))

(assert (=> b!111269 m!124859))

(assert (=> b!111269 m!124859))

(assert (=> b!111269 m!126615))

(assert (=> d!30939 d!31565))

(declare-fun b!111273 () Bool)

(declare-fun e!72334 () Option!165)

(assert (=> b!111273 (= e!72334 None!163)))

(declare-fun b!111270 () Bool)

(declare-fun e!72333 () Option!165)

(assert (=> b!111270 (= e!72333 (Some!164 (_2!1205 (h!2204 lt!56879))))))

(declare-fun b!111272 () Bool)

(assert (=> b!111272 (= e!72334 (getValueByKey!159 (t!5738 lt!56879) (_1!1205 (tuple2!2389 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun c!19842 () Bool)

(declare-fun d!31567 () Bool)

(assert (=> d!31567 (= c!19842 (and ((_ is Cons!1605) lt!56879) (= (_1!1205 (h!2204 lt!56879)) (_1!1205 (tuple2!2389 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> d!31567 (= (getValueByKey!159 lt!56879 (_1!1205 (tuple2!2389 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))) e!72333)))

(declare-fun b!111271 () Bool)

(assert (=> b!111271 (= e!72333 e!72334)))

(declare-fun c!19843 () Bool)

(assert (=> b!111271 (= c!19843 (and ((_ is Cons!1605) lt!56879) (not (= (_1!1205 (h!2204 lt!56879)) (_1!1205 (tuple2!2389 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))))

(assert (= (and d!31567 c!19842) b!111270))

(assert (= (and d!31567 (not c!19842)) b!111271))

(assert (= (and b!111271 c!19843) b!111272))

(assert (= (and b!111271 (not c!19843)) b!111273))

(declare-fun m!126617 () Bool)

(assert (=> b!111272 m!126617))

(assert (=> d!30939 d!31567))

(declare-fun d!31569 () Bool)

(assert (=> d!31569 (= (getValueByKey!159 lt!56879 (_1!1205 (tuple2!2389 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))) (Some!164 (_2!1205 (tuple2!2389 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun lt!57373 () Unit!3382)

(assert (=> d!31569 (= lt!57373 (choose!695 lt!56879 (_1!1205 (tuple2!2389 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))) (_2!1205 (tuple2!2389 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun e!72335 () Bool)

(assert (=> d!31569 e!72335))

(declare-fun res!54928 () Bool)

(assert (=> d!31569 (=> (not res!54928) (not e!72335))))

(assert (=> d!31569 (= res!54928 (isStrictlySorted!298 lt!56879))))

(assert (=> d!31569 (= (lemmaContainsTupThenGetReturnValue!75 lt!56879 (_1!1205 (tuple2!2389 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))) (_2!1205 (tuple2!2389 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))) lt!57373)))

(declare-fun b!111274 () Bool)

(declare-fun res!54929 () Bool)

(assert (=> b!111274 (=> (not res!54929) (not e!72335))))

(assert (=> b!111274 (= res!54929 (containsKey!162 lt!56879 (_1!1205 (tuple2!2389 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun b!111275 () Bool)

(assert (=> b!111275 (= e!72335 (contains!827 lt!56879 (tuple2!2389 (_1!1205 (tuple2!2389 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))) (_2!1205 (tuple2!2389 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(assert (= (and d!31569 res!54928) b!111274))

(assert (= (and b!111274 res!54929) b!111275))

(assert (=> d!31569 m!124853))

(declare-fun m!126619 () Bool)

(assert (=> d!31569 m!126619))

(declare-fun m!126621 () Bool)

(assert (=> d!31569 m!126621))

(declare-fun m!126623 () Bool)

(assert (=> b!111274 m!126623))

(declare-fun m!126625 () Bool)

(assert (=> b!111275 m!126625))

(assert (=> d!30939 d!31569))

(declare-fun e!72338 () List!1609)

(declare-fun b!111276 () Bool)

(assert (=> b!111276 (= e!72338 (insertStrictlySorted!78 (t!5738 (toList!789 lt!56544)) (_1!1205 (tuple2!2389 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))) (_2!1205 (tuple2!2389 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun b!111277 () Bool)

(declare-fun res!54931 () Bool)

(declare-fun e!72340 () Bool)

(assert (=> b!111277 (=> (not res!54931) (not e!72340))))

(declare-fun lt!57374 () List!1609)

(assert (=> b!111277 (= res!54931 (containsKey!162 lt!57374 (_1!1205 (tuple2!2389 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun b!111278 () Bool)

(declare-fun e!72339 () List!1609)

(declare-fun call!11868 () List!1609)

(assert (=> b!111278 (= e!72339 call!11868)))

(declare-fun bm!11864 () Bool)

(declare-fun call!11869 () List!1609)

(declare-fun call!11867 () List!1609)

(assert (=> bm!11864 (= call!11869 call!11867)))

(declare-fun bm!11865 () Bool)

(assert (=> bm!11865 (= call!11868 call!11869)))

(declare-fun b!111279 () Bool)

(assert (=> b!111279 (= e!72339 call!11868)))

(declare-fun bm!11866 () Bool)

(declare-fun c!19846 () Bool)

(assert (=> bm!11866 (= call!11867 ($colon$colon!82 e!72338 (ite c!19846 (h!2204 (toList!789 lt!56544)) (tuple2!2389 (_1!1205 (tuple2!2389 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))) (_2!1205 (tuple2!2389 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))))

(declare-fun c!19847 () Bool)

(assert (=> bm!11866 (= c!19847 c!19846)))

(declare-fun b!111280 () Bool)

(declare-fun e!72337 () List!1609)

(assert (=> b!111280 (= e!72337 call!11869)))

(declare-fun d!31571 () Bool)

(assert (=> d!31571 e!72340))

(declare-fun res!54930 () Bool)

(assert (=> d!31571 (=> (not res!54930) (not e!72340))))

(assert (=> d!31571 (= res!54930 (isStrictlySorted!298 lt!57374))))

(declare-fun e!72336 () List!1609)

(assert (=> d!31571 (= lt!57374 e!72336)))

(assert (=> d!31571 (= c!19846 (and ((_ is Cons!1605) (toList!789 lt!56544)) (bvslt (_1!1205 (h!2204 (toList!789 lt!56544))) (_1!1205 (tuple2!2389 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> d!31571 (isStrictlySorted!298 (toList!789 lt!56544))))

(assert (=> d!31571 (= (insertStrictlySorted!78 (toList!789 lt!56544) (_1!1205 (tuple2!2389 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))) (_2!1205 (tuple2!2389 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))) lt!57374)))

(declare-fun b!111281 () Bool)

(assert (=> b!111281 (= e!72336 call!11867)))

(declare-fun b!111282 () Bool)

(declare-fun c!19844 () Bool)

(assert (=> b!111282 (= c!19844 (and ((_ is Cons!1605) (toList!789 lt!56544)) (bvsgt (_1!1205 (h!2204 (toList!789 lt!56544))) (_1!1205 (tuple2!2389 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> b!111282 (= e!72337 e!72339)))

(declare-fun c!19845 () Bool)

(declare-fun b!111283 () Bool)

(assert (=> b!111283 (= e!72338 (ite c!19845 (t!5738 (toList!789 lt!56544)) (ite c!19844 (Cons!1605 (h!2204 (toList!789 lt!56544)) (t!5738 (toList!789 lt!56544))) Nil!1606)))))

(declare-fun b!111284 () Bool)

(assert (=> b!111284 (= e!72340 (contains!827 lt!57374 (tuple2!2389 (_1!1205 (tuple2!2389 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))) (_2!1205 (tuple2!2389 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(declare-fun b!111285 () Bool)

(assert (=> b!111285 (= e!72336 e!72337)))

(assert (=> b!111285 (= c!19845 (and ((_ is Cons!1605) (toList!789 lt!56544)) (= (_1!1205 (h!2204 (toList!789 lt!56544))) (_1!1205 (tuple2!2389 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(assert (= (and d!31571 c!19846) b!111281))

(assert (= (and d!31571 (not c!19846)) b!111285))

(assert (= (and b!111285 c!19845) b!111280))

(assert (= (and b!111285 (not c!19845)) b!111282))

(assert (= (and b!111282 c!19844) b!111278))

(assert (= (and b!111282 (not c!19844)) b!111279))

(assert (= (or b!111278 b!111279) bm!11865))

(assert (= (or b!111280 bm!11865) bm!11864))

(assert (= (or b!111281 bm!11864) bm!11866))

(assert (= (and bm!11866 c!19847) b!111276))

(assert (= (and bm!11866 (not c!19847)) b!111283))

(assert (= (and d!31571 res!54930) b!111277))

(assert (= (and b!111277 res!54931) b!111284))

(declare-fun m!126627 () Bool)

(assert (=> bm!11866 m!126627))

(declare-fun m!126629 () Bool)

(assert (=> b!111284 m!126629))

(declare-fun m!126631 () Bool)

(assert (=> b!111277 m!126631))

(declare-fun m!126633 () Bool)

(assert (=> d!31571 m!126633))

(declare-fun m!126635 () Bool)

(assert (=> d!31571 m!126635))

(declare-fun m!126637 () Bool)

(assert (=> b!111276 m!126637))

(assert (=> d!30939 d!31571))

(declare-fun d!31573 () Bool)

(declare-fun e!72341 () Bool)

(assert (=> d!31573 e!72341))

(declare-fun res!54933 () Bool)

(assert (=> d!31573 (=> (not res!54933) (not e!72341))))

(declare-fun lt!57378 () ListLongMap!1547)

(assert (=> d!31573 (= res!54933 (contains!824 lt!57378 (_1!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16))))))))

(declare-fun lt!57377 () List!1609)

(assert (=> d!31573 (= lt!57378 (ListLongMap!1548 lt!57377))))

(declare-fun lt!57376 () Unit!3382)

(declare-fun lt!57375 () Unit!3382)

(assert (=> d!31573 (= lt!57376 lt!57375)))

(assert (=> d!31573 (= (getValueByKey!159 lt!57377 (_1!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16))))) (Some!164 (_2!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16))))))))

(assert (=> d!31573 (= lt!57375 (lemmaContainsTupThenGetReturnValue!75 lt!57377 (_1!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16)))) (_2!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16))))))))

(assert (=> d!31573 (= lt!57377 (insertStrictlySorted!78 (toList!789 call!11781) (_1!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16)))) (_2!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16))))))))

(assert (=> d!31573 (= (+!144 call!11781 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16)))) lt!57378)))

(declare-fun b!111286 () Bool)

(declare-fun res!54932 () Bool)

(assert (=> b!111286 (=> (not res!54932) (not e!72341))))

(assert (=> b!111286 (= res!54932 (= (getValueByKey!159 (toList!789 lt!57378) (_1!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16))))) (Some!164 (_2!1205 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16)))))))))

(declare-fun b!111287 () Bool)

(assert (=> b!111287 (= e!72341 (contains!827 (toList!789 lt!57378) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19458 (ite c!19454 (minValue!2497 newMap!16) lt!56360) (minValue!2497 newMap!16)))))))

(assert (= (and d!31573 res!54933) b!111286))

(assert (= (and b!111286 res!54932) b!111287))

(declare-fun m!126639 () Bool)

(assert (=> d!31573 m!126639))

(declare-fun m!126641 () Bool)

(assert (=> d!31573 m!126641))

(declare-fun m!126643 () Bool)

(assert (=> d!31573 m!126643))

(declare-fun m!126645 () Bool)

(assert (=> d!31573 m!126645))

(declare-fun m!126647 () Bool)

(assert (=> b!111286 m!126647))

(declare-fun m!126649 () Bool)

(assert (=> b!111287 m!126649))

(assert (=> b!110394 d!31573))

(declare-fun d!31575 () Bool)

(assert (=> d!31575 (= (isDefined!111 (getValueByKey!159 (toList!789 lt!56545) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!383 (getValueByKey!159 (toList!789 lt!56545) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4585 () Bool)

(assert (= bs!4585 d!31575))

(assert (=> bs!4585 m!124533))

(declare-fun m!126651 () Bool)

(assert (=> bs!4585 m!126651))

(assert (=> b!110062 d!31575))

(assert (=> b!110062 d!31213))

(declare-fun d!31577 () Bool)

(assert (=> d!31577 (= (+!144 (getCurrentListMap!475 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360)) (getCurrentListMap!475 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) lt!56636 lt!56360 (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(assert (=> d!31577 true))

(declare-fun _$7!98 () Unit!3382)

(assert (=> d!31577 (= (choose!701 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) lt!56636 (zeroValue!2497 newMap!16) lt!56360 (minValue!2497 newMap!16) (defaultEntry!2626 newMap!16)) _$7!98)))

(declare-fun bs!4586 () Bool)

(assert (= bs!4586 d!31577))

(assert (=> bs!4586 m!124333))

(assert (=> bs!4586 m!124333))

(assert (=> bs!4586 m!125161))

(assert (=> bs!4586 m!125163))

(assert (=> d!31007 d!31577))

(assert (=> d!31007 d!30965))

(assert (=> d!31007 d!31187))

(declare-fun b!111288 () Bool)

(declare-fun res!54934 () Bool)

(declare-fun e!72352 () Bool)

(assert (=> b!111288 (=> (not res!54934) (not e!72352))))

(declare-fun e!72348 () Bool)

(assert (=> b!111288 (= res!54934 e!72348)))

(declare-fun res!54937 () Bool)

(assert (=> b!111288 (=> res!54937 e!72348)))

(declare-fun e!72353 () Bool)

(assert (=> b!111288 (= res!54937 (not e!72353))))

(declare-fun res!54941 () Bool)

(assert (=> b!111288 (=> (not res!54941) (not e!72353))))

(assert (=> b!111288 (= res!54941 (bvslt #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))))))

(declare-fun bm!11867 () Bool)

(declare-fun call!11873 () Bool)

(declare-fun lt!57389 () ListLongMap!1547)

(assert (=> bm!11867 (= call!11873 (contains!824 lt!57389 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!111289 () Bool)

(declare-fun e!72345 () Unit!3382)

(declare-fun Unit!3445 () Unit!3382)

(assert (=> b!111289 (= e!72345 Unit!3445)))

(declare-fun b!111290 () Bool)

(declare-fun e!72343 () ListLongMap!1547)

(declare-fun call!11876 () ListLongMap!1547)

(assert (=> b!111290 (= e!72343 (+!144 call!11876 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16))))))

(declare-fun b!111291 () Bool)

(declare-fun e!72347 () Bool)

(assert (=> b!111291 (= e!72348 e!72347)))

(declare-fun res!54935 () Bool)

(assert (=> b!111291 (=> (not res!54935) (not e!72347))))

(assert (=> b!111291 (= res!54935 (contains!824 lt!57389 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!111291 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))))))

(declare-fun b!111292 () Bool)

(declare-fun lt!57400 () Unit!3382)

(assert (=> b!111292 (= e!72345 lt!57400)))

(declare-fun lt!57390 () ListLongMap!1547)

(assert (=> b!111292 (= lt!57390 (getCurrentListMapNoExtraKeys!111 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) lt!56636 lt!56360 (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!57397 () (_ BitVec 64))

(assert (=> b!111292 (= lt!57397 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57392 () (_ BitVec 64))

(assert (=> b!111292 (= lt!57392 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!57393 () Unit!3382)

(assert (=> b!111292 (= lt!57393 (addStillContains!76 lt!57390 lt!57397 lt!56360 lt!57392))))

(assert (=> b!111292 (contains!824 (+!144 lt!57390 (tuple2!2389 lt!57397 lt!56360)) lt!57392)))

(declare-fun lt!57395 () Unit!3382)

(assert (=> b!111292 (= lt!57395 lt!57393)))

(declare-fun lt!57380 () ListLongMap!1547)

(assert (=> b!111292 (= lt!57380 (getCurrentListMapNoExtraKeys!111 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) lt!56636 lt!56360 (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!57385 () (_ BitVec 64))

(assert (=> b!111292 (= lt!57385 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57382 () (_ BitVec 64))

(assert (=> b!111292 (= lt!57382 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!57384 () Unit!3382)

(assert (=> b!111292 (= lt!57384 (addApplyDifferent!76 lt!57380 lt!57385 (minValue!2497 newMap!16) lt!57382))))

(assert (=> b!111292 (= (apply!100 (+!144 lt!57380 (tuple2!2389 lt!57385 (minValue!2497 newMap!16))) lt!57382) (apply!100 lt!57380 lt!57382))))

(declare-fun lt!57379 () Unit!3382)

(assert (=> b!111292 (= lt!57379 lt!57384)))

(declare-fun lt!57388 () ListLongMap!1547)

(assert (=> b!111292 (= lt!57388 (getCurrentListMapNoExtraKeys!111 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) lt!56636 lt!56360 (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!57399 () (_ BitVec 64))

(assert (=> b!111292 (= lt!57399 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57394 () (_ BitVec 64))

(assert (=> b!111292 (= lt!57394 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!57383 () Unit!3382)

(assert (=> b!111292 (= lt!57383 (addApplyDifferent!76 lt!57388 lt!57399 lt!56360 lt!57394))))

(assert (=> b!111292 (= (apply!100 (+!144 lt!57388 (tuple2!2389 lt!57399 lt!56360)) lt!57394) (apply!100 lt!57388 lt!57394))))

(declare-fun lt!57391 () Unit!3382)

(assert (=> b!111292 (= lt!57391 lt!57383)))

(declare-fun lt!57398 () ListLongMap!1547)

(assert (=> b!111292 (= lt!57398 (getCurrentListMapNoExtraKeys!111 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) lt!56636 lt!56360 (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!57387 () (_ BitVec 64))

(assert (=> b!111292 (= lt!57387 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57381 () (_ BitVec 64))

(assert (=> b!111292 (= lt!57381 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!111292 (= lt!57400 (addApplyDifferent!76 lt!57398 lt!57387 (minValue!2497 newMap!16) lt!57381))))

(assert (=> b!111292 (= (apply!100 (+!144 lt!57398 (tuple2!2389 lt!57387 (minValue!2497 newMap!16))) lt!57381) (apply!100 lt!57398 lt!57381))))

(declare-fun d!31579 () Bool)

(assert (=> d!31579 e!72352))

(declare-fun res!54939 () Bool)

(assert (=> d!31579 (=> (not res!54939) (not e!72352))))

(assert (=> d!31579 (= res!54939 (or (bvsge #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))))))))

(declare-fun lt!57396 () ListLongMap!1547)

(assert (=> d!31579 (= lt!57389 lt!57396)))

(declare-fun lt!57386 () Unit!3382)

(assert (=> d!31579 (= lt!57386 e!72345)))

(declare-fun c!19853 () Bool)

(declare-fun e!72346 () Bool)

(assert (=> d!31579 (= c!19853 e!72346)))

(declare-fun res!54936 () Bool)

(assert (=> d!31579 (=> (not res!54936) (not e!72346))))

(assert (=> d!31579 (= res!54936 (bvslt #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))))))

(assert (=> d!31579 (= lt!57396 e!72343)))

(declare-fun c!19850 () Bool)

(assert (=> d!31579 (= c!19850 (and (not (= (bvand lt!56636 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!56636 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!31579 (validMask!0 (mask!6794 newMap!16))))

(assert (=> d!31579 (= (getCurrentListMap!475 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) lt!56636 lt!56360 (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) lt!57389)))

(declare-fun bm!11868 () Bool)

(declare-fun call!11874 () ListLongMap!1547)

(declare-fun call!11871 () ListLongMap!1547)

(assert (=> bm!11868 (= call!11874 call!11871)))

(declare-fun b!111293 () Bool)

(declare-fun e!72351 () ListLongMap!1547)

(declare-fun call!11872 () ListLongMap!1547)

(assert (=> b!111293 (= e!72351 call!11872)))

(declare-fun b!111294 () Bool)

(declare-fun e!72350 () Bool)

(declare-fun call!11875 () Bool)

(assert (=> b!111294 (= e!72350 (not call!11875))))

(declare-fun b!111295 () Bool)

(declare-fun c!19849 () Bool)

(assert (=> b!111295 (= c!19849 (and (not (= (bvand lt!56636 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!56636 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!72354 () ListLongMap!1547)

(assert (=> b!111295 (= e!72351 e!72354)))

(declare-fun b!111296 () Bool)

(declare-fun e!72344 () Bool)

(assert (=> b!111296 (= e!72344 (not call!11873))))

(declare-fun bm!11869 () Bool)

(assert (=> bm!11869 (= call!11875 (contains!824 lt!57389 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!111297 () Bool)

(declare-fun e!72342 () Bool)

(assert (=> b!111297 (= e!72344 e!72342)))

(declare-fun res!54938 () Bool)

(assert (=> b!111297 (= res!54938 call!11873)))

(assert (=> b!111297 (=> (not res!54938) (not e!72342))))

(declare-fun b!111298 () Bool)

(assert (=> b!111298 (= e!72347 (= (apply!100 lt!57389 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)) (get!1353 (select (arr!2073 (_values!2609 newMap!16)) #b00000000000000000000000000000000) (dynLambda!390 (defaultEntry!2626 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!111298 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2330 (_values!2609 newMap!16))))))

(assert (=> b!111298 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))))))

(declare-fun c!19848 () Bool)

(declare-fun call!11870 () ListLongMap!1547)

(declare-fun bm!11870 () Bool)

(assert (=> bm!11870 (= call!11876 (+!144 (ite c!19850 call!11871 (ite c!19848 call!11874 call!11870)) (ite (or c!19850 c!19848) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16)))))))

(declare-fun b!111299 () Bool)

(declare-fun e!72349 () Bool)

(assert (=> b!111299 (= e!72349 (= (apply!100 lt!57389 #b0000000000000000000000000000000000000000000000000000000000000000) lt!56360))))

(declare-fun b!111300 () Bool)

(assert (=> b!111300 (= e!72352 e!72344)))

(declare-fun c!19852 () Bool)

(assert (=> b!111300 (= c!19852 (not (= (bvand lt!56636 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11871 () Bool)

(assert (=> bm!11871 (= call!11872 call!11876)))

(declare-fun b!111301 () Bool)

(declare-fun res!54940 () Bool)

(assert (=> b!111301 (=> (not res!54940) (not e!72352))))

(assert (=> b!111301 (= res!54940 e!72350)))

(declare-fun c!19851 () Bool)

(assert (=> b!111301 (= c!19851 (not (= (bvand lt!56636 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!111302 () Bool)

(assert (=> b!111302 (= e!72354 call!11870)))

(declare-fun bm!11872 () Bool)

(assert (=> bm!11872 (= call!11870 call!11874)))

(declare-fun b!111303 () Bool)

(assert (=> b!111303 (= e!72354 call!11872)))

(declare-fun b!111304 () Bool)

(assert (=> b!111304 (= e!72346 (validKeyInArray!0 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!111305 () Bool)

(assert (=> b!111305 (= e!72350 e!72349)))

(declare-fun res!54942 () Bool)

(assert (=> b!111305 (= res!54942 call!11875)))

(assert (=> b!111305 (=> (not res!54942) (not e!72349))))

(declare-fun b!111306 () Bool)

(assert (=> b!111306 (= e!72342 (= (apply!100 lt!57389 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2497 newMap!16)))))

(declare-fun b!111307 () Bool)

(assert (=> b!111307 (= e!72353 (validKeyInArray!0 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!111308 () Bool)

(assert (=> b!111308 (= e!72343 e!72351)))

(assert (=> b!111308 (= c!19848 (and (not (= (bvand lt!56636 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!56636 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11873 () Bool)

(assert (=> bm!11873 (= call!11871 (getCurrentListMapNoExtraKeys!111 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) lt!56636 lt!56360 (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(assert (= (and d!31579 c!19850) b!111290))

(assert (= (and d!31579 (not c!19850)) b!111308))

(assert (= (and b!111308 c!19848) b!111293))

(assert (= (and b!111308 (not c!19848)) b!111295))

(assert (= (and b!111295 c!19849) b!111303))

(assert (= (and b!111295 (not c!19849)) b!111302))

(assert (= (or b!111303 b!111302) bm!11872))

(assert (= (or b!111293 bm!11872) bm!11868))

(assert (= (or b!111293 b!111303) bm!11871))

(assert (= (or b!111290 bm!11868) bm!11873))

(assert (= (or b!111290 bm!11871) bm!11870))

(assert (= (and d!31579 res!54936) b!111304))

(assert (= (and d!31579 c!19853) b!111292))

(assert (= (and d!31579 (not c!19853)) b!111289))

(assert (= (and d!31579 res!54939) b!111288))

(assert (= (and b!111288 res!54941) b!111307))

(assert (= (and b!111288 (not res!54937)) b!111291))

(assert (= (and b!111291 res!54935) b!111298))

(assert (= (and b!111288 res!54934) b!111301))

(assert (= (and b!111301 c!19851) b!111305))

(assert (= (and b!111301 (not c!19851)) b!111294))

(assert (= (and b!111305 res!54942) b!111299))

(assert (= (or b!111305 b!111294) bm!11869))

(assert (= (and b!111301 res!54940) b!111300))

(assert (= (and b!111300 c!19852) b!111297))

(assert (= (and b!111300 (not c!19852)) b!111296))

(assert (= (and b!111297 res!54938) b!111306))

(assert (= (or b!111297 b!111296) bm!11867))

(declare-fun b_lambda!4977 () Bool)

(assert (=> (not b_lambda!4977) (not b!111298)))

(assert (=> b!111298 t!5751))

(declare-fun b_and!6849 () Bool)

(assert (= b_and!6845 (and (=> t!5751 result!3533) b_and!6849)))

(assert (=> b!111298 t!5753))

(declare-fun b_and!6851 () Bool)

(assert (= b_and!6847 (and (=> t!5753 result!3535) b_and!6851)))

(assert (=> b!111307 m!124605))

(assert (=> b!111307 m!124605))

(assert (=> b!111307 m!124607))

(declare-fun m!126653 () Bool)

(assert (=> b!111292 m!126653))

(declare-fun m!126655 () Bool)

(assert (=> b!111292 m!126655))

(declare-fun m!126657 () Bool)

(assert (=> b!111292 m!126657))

(declare-fun m!126659 () Bool)

(assert (=> b!111292 m!126659))

(declare-fun m!126661 () Bool)

(assert (=> b!111292 m!126661))

(declare-fun m!126663 () Bool)

(assert (=> b!111292 m!126663))

(declare-fun m!126665 () Bool)

(assert (=> b!111292 m!126665))

(declare-fun m!126667 () Bool)

(assert (=> b!111292 m!126667))

(declare-fun m!126669 () Bool)

(assert (=> b!111292 m!126669))

(declare-fun m!126671 () Bool)

(assert (=> b!111292 m!126671))

(declare-fun m!126673 () Bool)

(assert (=> b!111292 m!126673))

(assert (=> b!111292 m!126661))

(assert (=> b!111292 m!126665))

(declare-fun m!126675 () Bool)

(assert (=> b!111292 m!126675))

(assert (=> b!111292 m!124605))

(declare-fun m!126677 () Bool)

(assert (=> b!111292 m!126677))

(assert (=> b!111292 m!126671))

(declare-fun m!126679 () Bool)

(assert (=> b!111292 m!126679))

(declare-fun m!126681 () Bool)

(assert (=> b!111292 m!126681))

(assert (=> b!111292 m!126679))

(declare-fun m!126683 () Bool)

(assert (=> b!111292 m!126683))

(assert (=> b!111304 m!124605))

(assert (=> b!111304 m!124605))

(assert (=> b!111304 m!124607))

(declare-fun m!126685 () Bool)

(assert (=> bm!11869 m!126685))

(assert (=> bm!11873 m!126677))

(assert (=> d!31579 m!124579))

(declare-fun m!126687 () Bool)

(assert (=> bm!11870 m!126687))

(declare-fun m!126689 () Bool)

(assert (=> b!111299 m!126689))

(declare-fun m!126691 () Bool)

(assert (=> bm!11867 m!126691))

(declare-fun m!126693 () Bool)

(assert (=> b!111306 m!126693))

(assert (=> b!111298 m!124605))

(declare-fun m!126695 () Bool)

(assert (=> b!111298 m!126695))

(assert (=> b!111298 m!124605))

(assert (=> b!111298 m!124973))

(assert (=> b!111298 m!124973))

(assert (=> b!111298 m!124767))

(assert (=> b!111298 m!124975))

(assert (=> b!111298 m!124767))

(declare-fun m!126697 () Bool)

(assert (=> b!111290 m!126697))

(assert (=> b!111291 m!124605))

(assert (=> b!111291 m!124605))

(declare-fun m!126699 () Bool)

(assert (=> b!111291 m!126699))

(assert (=> d!31007 d!31579))

(declare-fun d!31581 () Bool)

(declare-fun e!72355 () Bool)

(assert (=> d!31581 e!72355))

(declare-fun res!54944 () Bool)

(assert (=> d!31581 (=> (not res!54944) (not e!72355))))

(declare-fun lt!57404 () ListLongMap!1547)

(assert (=> d!31581 (= res!54944 (contains!824 lt!57404 (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360))))))

(declare-fun lt!57403 () List!1609)

(assert (=> d!31581 (= lt!57404 (ListLongMap!1548 lt!57403))))

(declare-fun lt!57402 () Unit!3382)

(declare-fun lt!57401 () Unit!3382)

(assert (=> d!31581 (= lt!57402 lt!57401)))

(assert (=> d!31581 (= (getValueByKey!159 lt!57403 (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360))) (Some!164 (_2!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360))))))

(assert (=> d!31581 (= lt!57401 (lemmaContainsTupThenGetReturnValue!75 lt!57403 (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360)) (_2!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360))))))

(assert (=> d!31581 (= lt!57403 (insertStrictlySorted!78 (toList!789 (getCurrentListMap!475 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16))) (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360)) (_2!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360))))))

(assert (=> d!31581 (= (+!144 (getCurrentListMap!475 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360)) lt!57404)))

(declare-fun b!111309 () Bool)

(declare-fun res!54943 () Bool)

(assert (=> b!111309 (=> (not res!54943) (not e!72355))))

(assert (=> b!111309 (= res!54943 (= (getValueByKey!159 (toList!789 lt!57404) (_1!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360))) (Some!164 (_2!1205 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360)))))))

(declare-fun b!111310 () Bool)

(assert (=> b!111310 (= e!72355 (contains!827 (toList!789 lt!57404) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56360)))))

(assert (= (and d!31581 res!54944) b!111309))

(assert (= (and b!111309 res!54943) b!111310))

(declare-fun m!126701 () Bool)

(assert (=> d!31581 m!126701))

(declare-fun m!126703 () Bool)

(assert (=> d!31581 m!126703))

(declare-fun m!126705 () Bool)

(assert (=> d!31581 m!126705))

(declare-fun m!126707 () Bool)

(assert (=> d!31581 m!126707))

(declare-fun m!126709 () Bool)

(assert (=> b!111309 m!126709))

(declare-fun m!126711 () Bool)

(assert (=> b!111310 m!126711))

(assert (=> d!31007 d!31581))

(declare-fun d!31583 () Bool)

(declare-fun e!72357 () Bool)

(assert (=> d!31583 e!72357))

(declare-fun res!54945 () Bool)

(assert (=> d!31583 (=> res!54945 e!72357)))

(declare-fun lt!57407 () Bool)

(assert (=> d!31583 (= res!54945 (not lt!57407))))

(declare-fun lt!57408 () Bool)

(assert (=> d!31583 (= lt!57407 lt!57408)))

(declare-fun lt!57405 () Unit!3382)

(declare-fun e!72356 () Unit!3382)

(assert (=> d!31583 (= lt!57405 e!72356)))

(declare-fun c!19854 () Bool)

(assert (=> d!31583 (= c!19854 lt!57408)))

(assert (=> d!31583 (= lt!57408 (containsKey!162 (toList!789 lt!56820) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!31583 (= (contains!824 lt!56820 #b0000000000000000000000000000000000000000000000000000000000000000) lt!57407)))

(declare-fun b!111311 () Bool)

(declare-fun lt!57406 () Unit!3382)

(assert (=> b!111311 (= e!72356 lt!57406)))

(assert (=> b!111311 (= lt!57406 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 lt!56820) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!111311 (isDefined!111 (getValueByKey!159 (toList!789 lt!56820) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!111312 () Bool)

(declare-fun Unit!3446 () Unit!3382)

(assert (=> b!111312 (= e!72356 Unit!3446)))

(declare-fun b!111313 () Bool)

(assert (=> b!111313 (= e!72357 (isDefined!111 (getValueByKey!159 (toList!789 lt!56820) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!31583 c!19854) b!111311))

(assert (= (and d!31583 (not c!19854)) b!111312))

(assert (= (and d!31583 (not res!54945)) b!111313))

(declare-fun m!126713 () Bool)

(assert (=> d!31583 m!126713))

(declare-fun m!126715 () Bool)

(assert (=> b!111311 m!126715))

(declare-fun m!126717 () Bool)

(assert (=> b!111311 m!126717))

(assert (=> b!111311 m!126717))

(declare-fun m!126719 () Bool)

(assert (=> b!111311 m!126719))

(assert (=> b!111313 m!126717))

(assert (=> b!111313 m!126717))

(assert (=> b!111313 m!126719))

(assert (=> d!30909 d!31583))

(assert (=> d!30909 d!30819))

(declare-fun d!31585 () Bool)

(assert (=> d!31585 (= ($colon$colon!82 e!71779 (ite c!19556 (h!2204 (toList!789 lt!56369)) (tuple2!2389 (_1!1205 lt!56363) (_2!1205 lt!56363)))) (Cons!1605 (ite c!19556 (h!2204 (toList!789 lt!56369)) (tuple2!2389 (_1!1205 lt!56363) (_2!1205 lt!56363))) e!71779))))

(assert (=> bm!11767 d!31585))

(declare-fun d!31587 () Bool)

(declare-fun lt!57409 () Bool)

(assert (=> d!31587 (= lt!57409 (select (content!114 lt!56457) (tuple2!2389 (_1!1205 lt!56363) (_2!1205 lt!56363))))))

(declare-fun e!72359 () Bool)

(assert (=> d!31587 (= lt!57409 e!72359)))

(declare-fun res!54947 () Bool)

(assert (=> d!31587 (=> (not res!54947) (not e!72359))))

(assert (=> d!31587 (= res!54947 ((_ is Cons!1605) lt!56457))))

(assert (=> d!31587 (= (contains!827 lt!56457 (tuple2!2389 (_1!1205 lt!56363) (_2!1205 lt!56363))) lt!57409)))

(declare-fun b!111314 () Bool)

(declare-fun e!72358 () Bool)

(assert (=> b!111314 (= e!72359 e!72358)))

(declare-fun res!54946 () Bool)

(assert (=> b!111314 (=> res!54946 e!72358)))

(assert (=> b!111314 (= res!54946 (= (h!2204 lt!56457) (tuple2!2389 (_1!1205 lt!56363) (_2!1205 lt!56363))))))

(declare-fun b!111315 () Bool)

(assert (=> b!111315 (= e!72358 (contains!827 (t!5738 lt!56457) (tuple2!2389 (_1!1205 lt!56363) (_2!1205 lt!56363))))))

(assert (= (and d!31587 res!54947) b!111314))

(assert (= (and b!111314 (not res!54946)) b!111315))

(declare-fun m!126721 () Bool)

(assert (=> d!31587 m!126721))

(declare-fun m!126723 () Bool)

(assert (=> d!31587 m!126723))

(declare-fun m!126725 () Bool)

(assert (=> b!111315 m!126725))

(assert (=> b!110203 d!31587))

(declare-fun b!111319 () Bool)

(declare-fun e!72361 () Option!165)

(assert (=> b!111319 (= e!72361 None!163)))

(declare-fun b!111316 () Bool)

(declare-fun e!72360 () Option!165)

(assert (=> b!111316 (= e!72360 (Some!164 (_2!1205 (h!2204 (toList!789 lt!57009)))))))

(declare-fun b!111318 () Bool)

(assert (=> b!111318 (= e!72361 (getValueByKey!159 (t!5738 (toList!789 lt!57009)) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))

(declare-fun c!19855 () Bool)

(declare-fun d!31589 () Bool)

(assert (=> d!31589 (= c!19855 (and ((_ is Cons!1605) (toList!789 lt!57009)) (= (_1!1205 (h!2204 (toList!789 lt!57009))) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))))))

(assert (=> d!31589 (= (getValueByKey!159 (toList!789 lt!57009) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))) e!72360)))

(declare-fun b!111317 () Bool)

(assert (=> b!111317 (= e!72360 e!72361)))

(declare-fun c!19856 () Bool)

(assert (=> b!111317 (= c!19856 (and ((_ is Cons!1605) (toList!789 lt!57009)) (not (= (_1!1205 (h!2204 (toList!789 lt!57009))) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))))

(assert (= (and d!31589 c!19855) b!111316))

(assert (= (and d!31589 (not c!19855)) b!111317))

(assert (= (and b!111317 c!19856) b!111318))

(assert (= (and b!111317 (not c!19856)) b!111319))

(declare-fun m!126727 () Bool)

(assert (=> b!111318 m!126727))

(assert (=> b!110473 d!31589))

(declare-fun d!31591 () Bool)

(declare-fun res!54948 () Bool)

(declare-fun e!72362 () Bool)

(assert (=> d!31591 (=> res!54948 e!72362)))

(assert (=> d!31591 (= res!54948 (and ((_ is Cons!1605) lt!56955) (= (_1!1205 (h!2204 lt!56955)) (_1!1205 lt!56370))))))

(assert (=> d!31591 (= (containsKey!162 lt!56955 (_1!1205 lt!56370)) e!72362)))

(declare-fun b!111320 () Bool)

(declare-fun e!72363 () Bool)

(assert (=> b!111320 (= e!72362 e!72363)))

(declare-fun res!54949 () Bool)

(assert (=> b!111320 (=> (not res!54949) (not e!72363))))

(assert (=> b!111320 (= res!54949 (and (or (not ((_ is Cons!1605) lt!56955)) (bvsle (_1!1205 (h!2204 lt!56955)) (_1!1205 lt!56370))) ((_ is Cons!1605) lt!56955) (bvslt (_1!1205 (h!2204 lt!56955)) (_1!1205 lt!56370))))))

(declare-fun b!111321 () Bool)

(assert (=> b!111321 (= e!72363 (containsKey!162 (t!5738 lt!56955) (_1!1205 lt!56370)))))

(assert (= (and d!31591 (not res!54948)) b!111320))

(assert (= (and b!111320 res!54949) b!111321))

(declare-fun m!126729 () Bool)

(assert (=> b!111321 m!126729))

(assert (=> b!110383 d!31591))

(declare-fun d!31593 () Bool)

(declare-fun res!54950 () Bool)

(declare-fun e!72364 () Bool)

(assert (=> d!31593 (=> res!54950 e!72364)))

(assert (=> d!31593 (= res!54950 (= (select (arr!2072 (_keys!4340 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(assert (=> d!31593 (= (arrayContainsKey!0 (_keys!4340 newMap!16) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!72364)))

(declare-fun b!111322 () Bool)

(declare-fun e!72365 () Bool)

(assert (=> b!111322 (= e!72364 e!72365)))

(declare-fun res!54951 () Bool)

(assert (=> b!111322 (=> (not res!54951) (not e!72365))))

(assert (=> b!111322 (= res!54951 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2329 (_keys!4340 newMap!16))))))

(declare-fun b!111323 () Bool)

(assert (=> b!111323 (= e!72365 (arrayContainsKey!0 (_keys!4340 newMap!16) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!31593 (not res!54950)) b!111322))

(assert (= (and b!111322 res!54951) b!111323))

(assert (=> d!31593 m!126043))

(assert (=> b!111323 m!124087))

(declare-fun m!126731 () Bool)

(assert (=> b!111323 m!126731))

(assert (=> b!110316 d!31593))

(declare-fun d!31595 () Bool)

(assert (=> d!31595 (= (isDefined!111 (getValueByKey!159 (toList!789 lt!56545) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!383 (getValueByKey!159 (toList!789 lt!56545) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4587 () Bool)

(assert (= bs!4587 d!31595))

(assert (=> bs!4587 m!124685))

(declare-fun m!126733 () Bool)

(assert (=> bs!4587 m!126733))

(assert (=> b!110139 d!31595))

(declare-fun b!111327 () Bool)

(declare-fun e!72367 () Option!165)

(assert (=> b!111327 (= e!72367 None!163)))

(declare-fun b!111324 () Bool)

(declare-fun e!72366 () Option!165)

(assert (=> b!111324 (= e!72366 (Some!164 (_2!1205 (h!2204 (toList!789 lt!56545)))))))

(declare-fun b!111326 () Bool)

(assert (=> b!111326 (= e!72367 (getValueByKey!159 (t!5738 (toList!789 lt!56545)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!31597 () Bool)

(declare-fun c!19857 () Bool)

(assert (=> d!31597 (= c!19857 (and ((_ is Cons!1605) (toList!789 lt!56545)) (= (_1!1205 (h!2204 (toList!789 lt!56545))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!31597 (= (getValueByKey!159 (toList!789 lt!56545) #b0000000000000000000000000000000000000000000000000000000000000000) e!72366)))

(declare-fun b!111325 () Bool)

(assert (=> b!111325 (= e!72366 e!72367)))

(declare-fun c!19858 () Bool)

(assert (=> b!111325 (= c!19858 (and ((_ is Cons!1605) (toList!789 lt!56545)) (not (= (_1!1205 (h!2204 (toList!789 lt!56545))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!31597 c!19857) b!111324))

(assert (= (and d!31597 (not c!19857)) b!111325))

(assert (= (and b!111325 c!19858) b!111326))

(assert (= (and b!111325 (not c!19858)) b!111327))

(declare-fun m!126735 () Bool)

(assert (=> b!111326 m!126735))

(assert (=> b!110139 d!31597))

(declare-fun d!31599 () Bool)

(assert (=> d!31599 (isDefined!111 (getValueByKey!159 (toList!789 lt!56454) (_1!1205 lt!56370)))))

(declare-fun lt!57410 () Unit!3382)

(assert (=> d!31599 (= lt!57410 (choose!696 (toList!789 lt!56454) (_1!1205 lt!56370)))))

(declare-fun e!72368 () Bool)

(assert (=> d!31599 e!72368))

(declare-fun res!54952 () Bool)

(assert (=> d!31599 (=> (not res!54952) (not e!72368))))

(assert (=> d!31599 (= res!54952 (isStrictlySorted!298 (toList!789 lt!56454)))))

(assert (=> d!31599 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 lt!56454) (_1!1205 lt!56370)) lt!57410)))

(declare-fun b!111328 () Bool)

(assert (=> b!111328 (= e!72368 (containsKey!162 (toList!789 lt!56454) (_1!1205 lt!56370)))))

(assert (= (and d!31599 res!54952) b!111328))

(assert (=> d!31599 m!124251))

(assert (=> d!31599 m!124251))

(assert (=> d!31599 m!125211))

(declare-fun m!126737 () Bool)

(assert (=> d!31599 m!126737))

(declare-fun m!126739 () Bool)

(assert (=> d!31599 m!126739))

(assert (=> b!111328 m!125207))

(assert (=> b!110450 d!31599))

(assert (=> b!110450 d!31421))

(assert (=> b!110450 d!31019))

(declare-fun d!31601 () Bool)

(assert (=> d!31601 (= (isDefined!111 (getValueByKey!159 (toList!789 (+!144 lt!56475 (tuple2!2389 lt!56474 lt!56478))) lt!56473)) (not (isEmpty!383 (getValueByKey!159 (toList!789 (+!144 lt!56475 (tuple2!2389 lt!56474 lt!56478))) lt!56473))))))

(declare-fun bs!4588 () Bool)

(assert (= bs!4588 d!31601))

(assert (=> bs!4588 m!124573))

(declare-fun m!126741 () Bool)

(assert (=> bs!4588 m!126741))

(assert (=> b!110075 d!31601))

(declare-fun b!111332 () Bool)

(declare-fun e!72370 () Option!165)

(assert (=> b!111332 (= e!72370 None!163)))

(declare-fun b!111329 () Bool)

(declare-fun e!72369 () Option!165)

(assert (=> b!111329 (= e!72369 (Some!164 (_2!1205 (h!2204 (toList!789 (+!144 lt!56475 (tuple2!2389 lt!56474 lt!56478)))))))))

(declare-fun b!111331 () Bool)

(assert (=> b!111331 (= e!72370 (getValueByKey!159 (t!5738 (toList!789 (+!144 lt!56475 (tuple2!2389 lt!56474 lt!56478)))) lt!56473))))

(declare-fun c!19859 () Bool)

(declare-fun d!31603 () Bool)

(assert (=> d!31603 (= c!19859 (and ((_ is Cons!1605) (toList!789 (+!144 lt!56475 (tuple2!2389 lt!56474 lt!56478)))) (= (_1!1205 (h!2204 (toList!789 (+!144 lt!56475 (tuple2!2389 lt!56474 lt!56478))))) lt!56473)))))

(assert (=> d!31603 (= (getValueByKey!159 (toList!789 (+!144 lt!56475 (tuple2!2389 lt!56474 lt!56478))) lt!56473) e!72369)))

(declare-fun b!111330 () Bool)

(assert (=> b!111330 (= e!72369 e!72370)))

(declare-fun c!19860 () Bool)

(assert (=> b!111330 (= c!19860 (and ((_ is Cons!1605) (toList!789 (+!144 lt!56475 (tuple2!2389 lt!56474 lt!56478)))) (not (= (_1!1205 (h!2204 (toList!789 (+!144 lt!56475 (tuple2!2389 lt!56474 lt!56478))))) lt!56473))))))

(assert (= (and d!31603 c!19859) b!111329))

(assert (= (and d!31603 (not c!19859)) b!111330))

(assert (= (and b!111330 c!19860) b!111331))

(assert (= (and b!111330 (not c!19860)) b!111332))

(declare-fun m!126743 () Bool)

(assert (=> b!111331 m!126743))

(assert (=> b!110075 d!31603))

(assert (=> b!110161 d!31063))

(declare-fun d!31605 () Bool)

(declare-fun e!72372 () Bool)

(assert (=> d!31605 e!72372))

(declare-fun res!54953 () Bool)

(assert (=> d!31605 (=> res!54953 e!72372)))

(declare-fun lt!57413 () Bool)

(assert (=> d!31605 (= res!54953 (not lt!57413))))

(declare-fun lt!57414 () Bool)

(assert (=> d!31605 (= lt!57413 lt!57414)))

(declare-fun lt!57411 () Unit!3382)

(declare-fun e!72371 () Unit!3382)

(assert (=> d!31605 (= lt!57411 e!72371)))

(declare-fun c!19861 () Bool)

(assert (=> d!31605 (= c!19861 lt!57414)))

(assert (=> d!31605 (= lt!57414 (containsKey!162 (toList!789 lt!57009) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))

(assert (=> d!31605 (= (contains!824 lt!57009 (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))) lt!57413)))

(declare-fun b!111333 () Bool)

(declare-fun lt!57412 () Unit!3382)

(assert (=> b!111333 (= e!72371 lt!57412)))

(assert (=> b!111333 (= lt!57412 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 lt!57009) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))

(assert (=> b!111333 (isDefined!111 (getValueByKey!159 (toList!789 lt!57009) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))

(declare-fun b!111334 () Bool)

(declare-fun Unit!3447 () Unit!3382)

(assert (=> b!111334 (= e!72371 Unit!3447)))

(declare-fun b!111335 () Bool)

(assert (=> b!111335 (= e!72372 (isDefined!111 (getValueByKey!159 (toList!789 lt!57009) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))))))

(assert (= (and d!31605 c!19861) b!111333))

(assert (= (and d!31605 (not c!19861)) b!111334))

(assert (= (and d!31605 (not res!54953)) b!111335))

(declare-fun m!126745 () Bool)

(assert (=> d!31605 m!126745))

(declare-fun m!126747 () Bool)

(assert (=> b!111333 m!126747))

(assert (=> b!111333 m!125267))

(assert (=> b!111333 m!125267))

(declare-fun m!126749 () Bool)

(assert (=> b!111333 m!126749))

(assert (=> b!111335 m!125267))

(assert (=> b!111335 m!125267))

(assert (=> b!111335 m!126749))

(assert (=> d!31047 d!31605))

(declare-fun b!111339 () Bool)

(declare-fun e!72374 () Option!165)

(assert (=> b!111339 (= e!72374 None!163)))

(declare-fun b!111336 () Bool)

(declare-fun e!72373 () Option!165)

(assert (=> b!111336 (= e!72373 (Some!164 (_2!1205 (h!2204 lt!57008))))))

(declare-fun b!111338 () Bool)

(assert (=> b!111338 (= e!72374 (getValueByKey!159 (t!5738 lt!57008) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))

(declare-fun c!19862 () Bool)

(declare-fun d!31607 () Bool)

(assert (=> d!31607 (= c!19862 (and ((_ is Cons!1605) lt!57008) (= (_1!1205 (h!2204 lt!57008)) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))))))

(assert (=> d!31607 (= (getValueByKey!159 lt!57008 (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))) e!72373)))

(declare-fun b!111337 () Bool)

(assert (=> b!111337 (= e!72373 e!72374)))

(declare-fun c!19863 () Bool)

(assert (=> b!111337 (= c!19863 (and ((_ is Cons!1605) lt!57008) (not (= (_1!1205 (h!2204 lt!57008)) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))))

(assert (= (and d!31607 c!19862) b!111336))

(assert (= (and d!31607 (not c!19862)) b!111337))

(assert (= (and b!111337 c!19863) b!111338))

(assert (= (and b!111337 (not c!19863)) b!111339))

(declare-fun m!126751 () Bool)

(assert (=> b!111338 m!126751))

(assert (=> d!31047 d!31607))

(declare-fun d!31609 () Bool)

(assert (=> d!31609 (= (getValueByKey!159 lt!57008 (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))) (Some!164 (_2!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))

(declare-fun lt!57415 () Unit!3382)

(assert (=> d!31609 (= lt!57415 (choose!695 lt!57008 (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)) (_2!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))

(declare-fun e!72375 () Bool)

(assert (=> d!31609 e!72375))

(declare-fun res!54954 () Bool)

(assert (=> d!31609 (=> (not res!54954) (not e!72375))))

(assert (=> d!31609 (= res!54954 (isStrictlySorted!298 lt!57008))))

(assert (=> d!31609 (= (lemmaContainsTupThenGetReturnValue!75 lt!57008 (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)) (_2!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))) lt!57415)))

(declare-fun b!111340 () Bool)

(declare-fun res!54955 () Bool)

(assert (=> b!111340 (=> (not res!54955) (not e!72375))))

(assert (=> b!111340 (= res!54955 (containsKey!162 lt!57008 (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))

(declare-fun b!111341 () Bool)

(assert (=> b!111341 (= e!72375 (contains!827 lt!57008 (tuple2!2389 (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)) (_2!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))))))

(assert (= (and d!31609 res!54954) b!111340))

(assert (= (and b!111340 res!54955) b!111341))

(assert (=> d!31609 m!125261))

(declare-fun m!126753 () Bool)

(assert (=> d!31609 m!126753))

(declare-fun m!126755 () Bool)

(assert (=> d!31609 m!126755))

(declare-fun m!126757 () Bool)

(assert (=> b!111340 m!126757))

(declare-fun m!126759 () Bool)

(assert (=> b!111341 m!126759))

(assert (=> d!31047 d!31609))

(declare-fun e!72378 () List!1609)

(declare-fun b!111342 () Bool)

(assert (=> b!111342 (= e!72378 (insertStrictlySorted!78 (t!5738 (toList!789 (+!144 lt!56369 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)) (_2!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))

(declare-fun b!111343 () Bool)

(declare-fun res!54957 () Bool)

(declare-fun e!72380 () Bool)

(assert (=> b!111343 (=> (not res!54957) (not e!72380))))

(declare-fun lt!57416 () List!1609)

(assert (=> b!111343 (= res!54957 (containsKey!162 lt!57416 (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))

(declare-fun b!111344 () Bool)

(declare-fun e!72379 () List!1609)

(declare-fun call!11878 () List!1609)

(assert (=> b!111344 (= e!72379 call!11878)))

(declare-fun bm!11874 () Bool)

(declare-fun call!11879 () List!1609)

(declare-fun call!11877 () List!1609)

(assert (=> bm!11874 (= call!11879 call!11877)))

(declare-fun bm!11875 () Bool)

(assert (=> bm!11875 (= call!11878 call!11879)))

(declare-fun b!111345 () Bool)

(assert (=> b!111345 (= e!72379 call!11878)))

(declare-fun bm!11876 () Bool)

(declare-fun c!19866 () Bool)

(assert (=> bm!11876 (= call!11877 ($colon$colon!82 e!72378 (ite c!19866 (h!2204 (toList!789 (+!144 lt!56369 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))) (tuple2!2389 (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)) (_2!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))))

(declare-fun c!19867 () Bool)

(assert (=> bm!11876 (= c!19867 c!19866)))

(declare-fun b!111346 () Bool)

(declare-fun e!72377 () List!1609)

(assert (=> b!111346 (= e!72377 call!11879)))

(declare-fun d!31611 () Bool)

(assert (=> d!31611 e!72380))

(declare-fun res!54956 () Bool)

(assert (=> d!31611 (=> (not res!54956) (not e!72380))))

(assert (=> d!31611 (= res!54956 (isStrictlySorted!298 lt!57416))))

(declare-fun e!72376 () List!1609)

(assert (=> d!31611 (= lt!57416 e!72376)))

(assert (=> d!31611 (= c!19866 (and ((_ is Cons!1605) (toList!789 (+!144 lt!56369 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))) (bvslt (_1!1205 (h!2204 (toList!789 (+!144 lt!56369 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))))))

(assert (=> d!31611 (isStrictlySorted!298 (toList!789 (+!144 lt!56369 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(assert (=> d!31611 (= (insertStrictlySorted!78 (toList!789 (+!144 lt!56369 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)) (_2!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))) lt!57416)))

(declare-fun b!111347 () Bool)

(assert (=> b!111347 (= e!72376 call!11877)))

(declare-fun b!111348 () Bool)

(declare-fun c!19864 () Bool)

(assert (=> b!111348 (= c!19864 (and ((_ is Cons!1605) (toList!789 (+!144 lt!56369 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))) (bvsgt (_1!1205 (h!2204 (toList!789 (+!144 lt!56369 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))))))

(assert (=> b!111348 (= e!72377 e!72379)))

(declare-fun c!19865 () Bool)

(declare-fun b!111349 () Bool)

(assert (=> b!111349 (= e!72378 (ite c!19865 (t!5738 (toList!789 (+!144 lt!56369 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))) (ite c!19864 (Cons!1605 (h!2204 (toList!789 (+!144 lt!56369 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))) (t!5738 (toList!789 (+!144 lt!56369 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))) Nil!1606)))))

(declare-fun b!111350 () Bool)

(assert (=> b!111350 (= e!72380 (contains!827 lt!57416 (tuple2!2389 (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)) (_2!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))))))

(declare-fun b!111351 () Bool)

(assert (=> b!111351 (= e!72376 e!72377)))

(assert (=> b!111351 (= c!19865 (and ((_ is Cons!1605) (toList!789 (+!144 lt!56369 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))) (= (_1!1205 (h!2204 (toList!789 (+!144 lt!56369 (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))))))

(assert (= (and d!31611 c!19866) b!111347))

(assert (= (and d!31611 (not c!19866)) b!111351))

(assert (= (and b!111351 c!19865) b!111346))

(assert (= (and b!111351 (not c!19865)) b!111348))

(assert (= (and b!111348 c!19864) b!111344))

(assert (= (and b!111348 (not c!19864)) b!111345))

(assert (= (or b!111344 b!111345) bm!11875))

(assert (= (or b!111346 bm!11875) bm!11874))

(assert (= (or b!111347 bm!11874) bm!11876))

(assert (= (and bm!11876 c!19867) b!111342))

(assert (= (and bm!11876 (not c!19867)) b!111349))

(assert (= (and d!31611 res!54956) b!111343))

(assert (= (and b!111343 res!54957) b!111350))

(declare-fun m!126761 () Bool)

(assert (=> bm!11876 m!126761))

(declare-fun m!126763 () Bool)

(assert (=> b!111350 m!126763))

(declare-fun m!126765 () Bool)

(assert (=> b!111343 m!126765))

(declare-fun m!126767 () Bool)

(assert (=> d!31611 m!126767))

(declare-fun m!126769 () Bool)

(assert (=> d!31611 m!126769))

(declare-fun m!126771 () Bool)

(assert (=> b!111342 m!126771))

(assert (=> d!31047 d!31611))

(assert (=> b!110048 d!31485))

(declare-fun d!31613 () Bool)

(declare-fun e!72381 () Bool)

(assert (=> d!31613 e!72381))

(declare-fun res!54959 () Bool)

(assert (=> d!31613 (=> (not res!54959) (not e!72381))))

(declare-fun lt!57420 () ListLongMap!1547)

(assert (=> d!31613 (= res!54959 (contains!824 lt!57420 (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))

(declare-fun lt!57419 () List!1609)

(assert (=> d!31613 (= lt!57420 (ListLongMap!1548 lt!57419))))

(declare-fun lt!57418 () Unit!3382)

(declare-fun lt!57417 () Unit!3382)

(assert (=> d!31613 (= lt!57418 lt!57417)))

(assert (=> d!31613 (= (getValueByKey!159 lt!57419 (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))) (Some!164 (_2!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))

(assert (=> d!31613 (= lt!57417 (lemmaContainsTupThenGetReturnValue!75 lt!57419 (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)) (_2!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))

(assert (=> d!31613 (= lt!57419 (insertStrictlySorted!78 (toList!789 (map!1295 newMap!16)) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)) (_2!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))))))

(assert (=> d!31613 (= (+!144 (map!1295 newMap!16) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)) lt!57420)))

(declare-fun b!111352 () Bool)

(declare-fun res!54958 () Bool)

(assert (=> b!111352 (=> (not res!54958) (not e!72381))))

(assert (=> b!111352 (= res!54958 (= (getValueByKey!159 (toList!789 lt!57420) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360))) (Some!164 (_2!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))))))

(declare-fun b!111353 () Bool)

(assert (=> b!111353 (= e!72381 (contains!827 (toList!789 lt!57420) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)))))

(assert (= (and d!31613 res!54959) b!111352))

(assert (= (and b!111352 res!54958) b!111353))

(declare-fun m!126773 () Bool)

(assert (=> d!31613 m!126773))

(declare-fun m!126775 () Bool)

(assert (=> d!31613 m!126775))

(declare-fun m!126777 () Bool)

(assert (=> d!31613 m!126777))

(declare-fun m!126779 () Bool)

(assert (=> d!31613 m!126779))

(declare-fun m!126781 () Bool)

(assert (=> b!111352 m!126781))

(declare-fun m!126783 () Bool)

(assert (=> b!111353 m!126783))

(assert (=> b!110048 d!31613))

(assert (=> b!110048 d!30823))

(declare-fun bm!11877 () Bool)

(declare-fun call!11880 () Bool)

(assert (=> bm!11877 (= call!11880 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4340 newMap!16) (mask!6794 newMap!16)))))

(declare-fun b!111354 () Bool)

(declare-fun e!72382 () Bool)

(assert (=> b!111354 (= e!72382 call!11880)))

(declare-fun b!111355 () Bool)

(declare-fun e!72384 () Bool)

(assert (=> b!111355 (= e!72384 call!11880)))

(declare-fun b!111357 () Bool)

(assert (=> b!111357 (= e!72384 e!72382)))

(declare-fun lt!57421 () (_ BitVec 64))

(assert (=> b!111357 (= lt!57421 (select (arr!2072 (_keys!4340 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!57423 () Unit!3382)

(assert (=> b!111357 (= lt!57423 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4340 newMap!16) lt!57421 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!111357 (arrayContainsKey!0 (_keys!4340 newMap!16) lt!57421 #b00000000000000000000000000000000)))

(declare-fun lt!57422 () Unit!3382)

(assert (=> b!111357 (= lt!57422 lt!57423)))

(declare-fun res!54960 () Bool)

(assert (=> b!111357 (= res!54960 (= (seekEntryOrOpen!0 (select (arr!2072 (_keys!4340 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4340 newMap!16) (mask!6794 newMap!16)) (Found!255 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!111357 (=> (not res!54960) (not e!72382))))

(declare-fun b!111356 () Bool)

(declare-fun e!72383 () Bool)

(assert (=> b!111356 (= e!72383 e!72384)))

(declare-fun c!19868 () Bool)

(assert (=> b!111356 (= c!19868 (validKeyInArray!0 (select (arr!2072 (_keys!4340 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun d!31615 () Bool)

(declare-fun res!54961 () Bool)

(assert (=> d!31615 (=> res!54961 e!72383)))

(assert (=> d!31615 (= res!54961 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2329 (_keys!4340 newMap!16))))))

(assert (=> d!31615 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4340 newMap!16) (mask!6794 newMap!16)) e!72383)))

(assert (= (and d!31615 (not res!54961)) b!111356))

(assert (= (and b!111356 c!19868) b!111357))

(assert (= (and b!111356 (not c!19868)) b!111355))

(assert (= (and b!111357 res!54960) b!111354))

(assert (= (or b!111354 b!111355) bm!11877))

(declare-fun m!126785 () Bool)

(assert (=> bm!11877 m!126785))

(assert (=> b!111357 m!126043))

(declare-fun m!126787 () Bool)

(assert (=> b!111357 m!126787))

(declare-fun m!126789 () Bool)

(assert (=> b!111357 m!126789))

(assert (=> b!111357 m!126043))

(declare-fun m!126791 () Bool)

(assert (=> b!111357 m!126791))

(assert (=> b!111356 m!126043))

(assert (=> b!111356 m!126043))

(assert (=> b!111356 m!126045))

(assert (=> bm!11751 d!31615))

(declare-fun b!111358 () Bool)

(declare-fun e!72386 () (_ BitVec 32))

(declare-fun call!11881 () (_ BitVec 32))

(assert (=> b!111358 (= e!72386 (bvadd #b00000000000000000000000000000001 call!11881))))

(declare-fun d!31617 () Bool)

(declare-fun lt!57424 () (_ BitVec 32))

(assert (=> d!31617 (and (bvsge lt!57424 #b00000000000000000000000000000000) (bvsle lt!57424 (bvsub (size!2329 (_keys!4340 (_2!1204 lt!56628))) #b00000000000000000000000000000000)))))

(declare-fun e!72385 () (_ BitVec 32))

(assert (=> d!31617 (= lt!57424 e!72385)))

(declare-fun c!19870 () Bool)

(assert (=> d!31617 (= c!19870 (bvsge #b00000000000000000000000000000000 (size!2329 (_keys!4340 (_2!1204 lt!56628)))))))

(assert (=> d!31617 (and (bvsle #b00000000000000000000000000000000 (size!2329 (_keys!4340 (_2!1204 lt!56628)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2329 (_keys!4340 (_2!1204 lt!56628))) (size!2329 (_keys!4340 (_2!1204 lt!56628)))))))

(assert (=> d!31617 (= (arrayCountValidKeys!0 (_keys!4340 (_2!1204 lt!56628)) #b00000000000000000000000000000000 (size!2329 (_keys!4340 (_2!1204 lt!56628)))) lt!57424)))

(declare-fun b!111359 () Bool)

(assert (=> b!111359 (= e!72385 #b00000000000000000000000000000000)))

(declare-fun b!111360 () Bool)

(assert (=> b!111360 (= e!72386 call!11881)))

(declare-fun bm!11878 () Bool)

(assert (=> bm!11878 (= call!11881 (arrayCountValidKeys!0 (_keys!4340 (_2!1204 lt!56628)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2329 (_keys!4340 (_2!1204 lt!56628)))))))

(declare-fun b!111361 () Bool)

(assert (=> b!111361 (= e!72385 e!72386)))

(declare-fun c!19869 () Bool)

(assert (=> b!111361 (= c!19869 (validKeyInArray!0 (select (arr!2072 (_keys!4340 (_2!1204 lt!56628))) #b00000000000000000000000000000000)))))

(assert (= (and d!31617 c!19870) b!111359))

(assert (= (and d!31617 (not c!19870)) b!111361))

(assert (= (and b!111361 c!19869) b!111358))

(assert (= (and b!111361 (not c!19869)) b!111360))

(assert (= (or b!111358 b!111360) bm!11878))

(declare-fun m!126793 () Bool)

(assert (=> bm!11878 m!126793))

(assert (=> b!111361 m!125695))

(assert (=> b!111361 m!125695))

(assert (=> b!111361 m!125697))

(assert (=> b!110370 d!31617))

(declare-fun lt!57425 () Bool)

(declare-fun d!31619 () Bool)

(assert (=> d!31619 (= lt!57425 (select (content!114 (toList!789 lt!56798)) (ite (or c!19419 c!19417) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun e!72388 () Bool)

(assert (=> d!31619 (= lt!57425 e!72388)))

(declare-fun res!54963 () Bool)

(assert (=> d!31619 (=> (not res!54963) (not e!72388))))

(assert (=> d!31619 (= res!54963 ((_ is Cons!1605) (toList!789 lt!56798)))))

(assert (=> d!31619 (= (contains!827 (toList!789 lt!56798) (ite (or c!19419 c!19417) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))) lt!57425)))

(declare-fun b!111362 () Bool)

(declare-fun e!72387 () Bool)

(assert (=> b!111362 (= e!72388 e!72387)))

(declare-fun res!54962 () Bool)

(assert (=> b!111362 (=> res!54962 e!72387)))

(assert (=> b!111362 (= res!54962 (= (h!2204 (toList!789 lt!56798)) (ite (or c!19419 c!19417) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun b!111363 () Bool)

(assert (=> b!111363 (= e!72387 (contains!827 (t!5738 (toList!789 lt!56798)) (ite (or c!19419 c!19417) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(assert (= (and d!31619 res!54963) b!111362))

(assert (= (and b!111362 (not res!54962)) b!111363))

(declare-fun m!126795 () Bool)

(assert (=> d!31619 m!126795))

(declare-fun m!126797 () Bool)

(assert (=> d!31619 m!126797))

(declare-fun m!126799 () Bool)

(assert (=> b!111363 m!126799))

(assert (=> b!110114 d!31619))

(declare-fun d!31621 () Bool)

(declare-fun e!72389 () Bool)

(assert (=> d!31621 e!72389))

(declare-fun res!54965 () Bool)

(assert (=> d!31621 (=> (not res!54965) (not e!72389))))

(declare-fun lt!57429 () ListLongMap!1547)

(assert (=> d!31621 (= res!54965 (contains!824 lt!57429 (_1!1205 (ite (or c!19540 c!19538) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 newMap!16)) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16))))))))

(declare-fun lt!57428 () List!1609)

(assert (=> d!31621 (= lt!57429 (ListLongMap!1548 lt!57428))))

(declare-fun lt!57427 () Unit!3382)

(declare-fun lt!57426 () Unit!3382)

(assert (=> d!31621 (= lt!57427 lt!57426)))

(assert (=> d!31621 (= (getValueByKey!159 lt!57428 (_1!1205 (ite (or c!19540 c!19538) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 newMap!16)) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16))))) (Some!164 (_2!1205 (ite (or c!19540 c!19538) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 newMap!16)) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16))))))))

(assert (=> d!31621 (= lt!57426 (lemmaContainsTupThenGetReturnValue!75 lt!57428 (_1!1205 (ite (or c!19540 c!19538) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 newMap!16)) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16)))) (_2!1205 (ite (or c!19540 c!19538) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 newMap!16)) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16))))))))

(assert (=> d!31621 (= lt!57428 (insertStrictlySorted!78 (toList!789 (ite c!19540 call!11756 (ite c!19538 call!11759 call!11755))) (_1!1205 (ite (or c!19540 c!19538) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 newMap!16)) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16)))) (_2!1205 (ite (or c!19540 c!19538) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 newMap!16)) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16))))))))

(assert (=> d!31621 (= (+!144 (ite c!19540 call!11756 (ite c!19538 call!11759 call!11755)) (ite (or c!19540 c!19538) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 newMap!16)) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16)))) lt!57429)))

(declare-fun b!111364 () Bool)

(declare-fun res!54964 () Bool)

(assert (=> b!111364 (=> (not res!54964) (not e!72389))))

(assert (=> b!111364 (= res!54964 (= (getValueByKey!159 (toList!789 lt!57429) (_1!1205 (ite (or c!19540 c!19538) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 newMap!16)) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16))))) (Some!164 (_2!1205 (ite (or c!19540 c!19538) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 newMap!16)) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16)))))))))

(declare-fun b!111365 () Bool)

(assert (=> b!111365 (= e!72389 (contains!827 (toList!789 lt!57429) (ite (or c!19540 c!19538) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 newMap!16)) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16)))))))

(assert (= (and d!31621 res!54965) b!111364))

(assert (= (and b!111364 res!54964) b!111365))

(declare-fun m!126801 () Bool)

(assert (=> d!31621 m!126801))

(declare-fun m!126803 () Bool)

(assert (=> d!31621 m!126803))

(declare-fun m!126805 () Bool)

(assert (=> d!31621 m!126805))

(declare-fun m!126807 () Bool)

(assert (=> d!31621 m!126807))

(declare-fun m!126809 () Bool)

(assert (=> b!111364 m!126809))

(declare-fun m!126811 () Bool)

(assert (=> b!111365 m!126811))

(assert (=> bm!11755 d!31621))

(declare-fun d!31623 () Bool)

(assert (=> d!31623 (= (get!1356 (getValueByKey!159 (toList!789 lt!56545) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2936 (getValueByKey!159 (toList!789 lt!56545) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!31021 d!31623))

(assert (=> d!31021 d!31597))

(declare-fun d!31625 () Bool)

(declare-fun res!54966 () Bool)

(declare-fun e!72390 () Bool)

(assert (=> d!31625 (=> (not res!54966) (not e!72390))))

(assert (=> d!31625 (= res!54966 (validMask!0 (mask!6794 (v!2930 (underlying!370 thiss!992)))))))

(assert (=> d!31625 (= (simpleValid!76 (v!2930 (underlying!370 thiss!992))) e!72390)))

(declare-fun b!111369 () Bool)

(assert (=> b!111369 (= e!72390 (and (bvsge (extraKeys!2423 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2423 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!507 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun b!111367 () Bool)

(declare-fun res!54968 () Bool)

(assert (=> b!111367 (=> (not res!54968) (not e!72390))))

(assert (=> b!111367 (= res!54968 (bvsge (size!2335 (v!2930 (underlying!370 thiss!992))) (_size!507 (v!2930 (underlying!370 thiss!992)))))))

(declare-fun b!111368 () Bool)

(declare-fun res!54967 () Bool)

(assert (=> b!111368 (=> (not res!54967) (not e!72390))))

(assert (=> b!111368 (= res!54967 (= (size!2335 (v!2930 (underlying!370 thiss!992))) (bvadd (_size!507 (v!2930 (underlying!370 thiss!992))) (bvsdiv (bvadd (extraKeys!2423 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!111366 () Bool)

(declare-fun res!54969 () Bool)

(assert (=> b!111366 (=> (not res!54969) (not e!72390))))

(assert (=> b!111366 (= res!54969 (and (= (size!2330 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd (mask!6794 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000000001)) (= (size!2329 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (size!2330 (_values!2609 (v!2930 (underlying!370 thiss!992))))) (bvsge (_size!507 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!507 (v!2930 (underlying!370 thiss!992))) (bvadd (mask!6794 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000000001))))))

(assert (= (and d!31625 res!54966) b!111366))

(assert (= (and b!111366 res!54969) b!111367))

(assert (= (and b!111367 res!54968) b!111368))

(assert (= (and b!111368 res!54967) b!111369))

(assert (=> d!31625 m!124107))

(declare-fun m!126813 () Bool)

(assert (=> b!111367 m!126813))

(assert (=> b!111368 m!126813))

(assert (=> d!31033 d!31625))

(declare-fun d!31627 () Bool)

(assert (=> d!31627 (= (size!2335 newMap!16) (bvadd (_size!507 newMap!16) (bvsdiv (bvadd (extraKeys!2423 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!110264 d!31627))

(declare-fun d!31629 () Bool)

(declare-fun res!54970 () Bool)

(declare-fun e!72391 () Bool)

(assert (=> d!31629 (=> res!54970 e!72391)))

(assert (=> d!31629 (= res!54970 (or ((_ is Nil!1606) lt!56955) ((_ is Nil!1606) (t!5738 lt!56955))))))

(assert (=> d!31629 (= (isStrictlySorted!298 lt!56955) e!72391)))

(declare-fun b!111370 () Bool)

(declare-fun e!72392 () Bool)

(assert (=> b!111370 (= e!72391 e!72392)))

(declare-fun res!54971 () Bool)

(assert (=> b!111370 (=> (not res!54971) (not e!72392))))

(assert (=> b!111370 (= res!54971 (bvslt (_1!1205 (h!2204 lt!56955)) (_1!1205 (h!2204 (t!5738 lt!56955)))))))

(declare-fun b!111371 () Bool)

(assert (=> b!111371 (= e!72392 (isStrictlySorted!298 (t!5738 lt!56955)))))

(assert (= (and d!31629 (not res!54970)) b!111370))

(assert (= (and b!111370 res!54971) b!111371))

(declare-fun m!126815 () Bool)

(assert (=> b!111371 m!126815))

(assert (=> d!31003 d!31629))

(assert (=> d!31003 d!31283))

(declare-fun d!31631 () Bool)

(assert (=> d!31631 (= (apply!100 lt!56831 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1356 (getValueByKey!159 (toList!789 lt!56831) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4589 () Bool)

(assert (= bs!4589 d!31631))

(assert (=> bs!4589 m!125609))

(assert (=> bs!4589 m!125609))

(declare-fun m!126817 () Bool)

(assert (=> bs!4589 m!126817))

(assert (=> b!110175 d!31631))

(declare-fun b!111375 () Bool)

(declare-fun e!72394 () Option!165)

(assert (=> b!111375 (= e!72394 None!163)))

(declare-fun b!111372 () Bool)

(declare-fun e!72393 () Option!165)

(assert (=> b!111372 (= e!72393 (Some!164 (_2!1205 (h!2204 (toList!789 lt!56880)))))))

(declare-fun b!111374 () Bool)

(assert (=> b!111374 (= e!72394 (getValueByKey!159 (t!5738 (toList!789 lt!56880)) (_1!1205 (tuple2!2389 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))

(declare-fun d!31633 () Bool)

(declare-fun c!19871 () Bool)

(assert (=> d!31633 (= c!19871 (and ((_ is Cons!1605) (toList!789 lt!56880)) (= (_1!1205 (h!2204 (toList!789 lt!56880))) (_1!1205 (tuple2!2389 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> d!31633 (= (getValueByKey!159 (toList!789 lt!56880) (_1!1205 (tuple2!2389 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))) e!72393)))

(declare-fun b!111373 () Bool)

(assert (=> b!111373 (= e!72393 e!72394)))

(declare-fun c!19872 () Bool)

(assert (=> b!111373 (= c!19872 (and ((_ is Cons!1605) (toList!789 lt!56880)) (not (= (_1!1205 (h!2204 (toList!789 lt!56880))) (_1!1205 (tuple2!2389 lt!56555 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))))))

(assert (= (and d!31633 c!19871) b!111372))

(assert (= (and d!31633 (not c!19871)) b!111373))

(assert (= (and b!111373 c!19872) b!111374))

(assert (= (and b!111373 (not c!19872)) b!111375))

(declare-fun m!126819 () Bool)

(assert (=> b!111374 m!126819))

(assert (=> b!110272 d!31633))

(declare-fun d!31635 () Bool)

(declare-fun e!72396 () Bool)

(assert (=> d!31635 e!72396))

(declare-fun res!54972 () Bool)

(assert (=> d!31635 (=> res!54972 e!72396)))

(declare-fun lt!57432 () Bool)

(assert (=> d!31635 (= res!54972 (not lt!57432))))

(declare-fun lt!57433 () Bool)

(assert (=> d!31635 (= lt!57432 lt!57433)))

(declare-fun lt!57430 () Unit!3382)

(declare-fun e!72395 () Unit!3382)

(assert (=> d!31635 (= lt!57430 e!72395)))

(declare-fun c!19873 () Bool)

(assert (=> d!31635 (= c!19873 lt!57433)))

(assert (=> d!31635 (= lt!57433 (containsKey!162 (toList!789 lt!56966) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!31635 (= (contains!824 lt!56966 #b0000000000000000000000000000000000000000000000000000000000000000) lt!57432)))

(declare-fun b!111376 () Bool)

(declare-fun lt!57431 () Unit!3382)

(assert (=> b!111376 (= e!72395 lt!57431)))

(assert (=> b!111376 (= lt!57431 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 lt!56966) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!111376 (isDefined!111 (getValueByKey!159 (toList!789 lt!56966) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!111377 () Bool)

(declare-fun Unit!3448 () Unit!3382)

(assert (=> b!111377 (= e!72395 Unit!3448)))

(declare-fun b!111378 () Bool)

(assert (=> b!111378 (= e!72396 (isDefined!111 (getValueByKey!159 (toList!789 lt!56966) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!31635 c!19873) b!111376))

(assert (= (and d!31635 (not c!19873)) b!111377))

(assert (= (and d!31635 (not res!54972)) b!111378))

(declare-fun m!126821 () Bool)

(assert (=> d!31635 m!126821))

(declare-fun m!126823 () Bool)

(assert (=> b!111376 m!126823))

(assert (=> b!111376 m!125681))

(assert (=> b!111376 m!125681))

(declare-fun m!126825 () Bool)

(assert (=> b!111376 m!126825))

(assert (=> b!111378 m!125681))

(assert (=> b!111378 m!125681))

(assert (=> b!111378 m!126825))

(assert (=> bm!11774 d!31635))

(assert (=> d!30881 d!30845))

(declare-fun d!31637 () Bool)

(assert (=> d!31637 (isDefined!111 (getValueByKey!159 (toList!789 (+!144 lt!56546 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))) lt!56548))))

(declare-fun lt!57434 () Unit!3382)

(assert (=> d!31637 (= lt!57434 (choose!696 (toList!789 (+!144 lt!56546 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))) lt!56548))))

(declare-fun e!72397 () Bool)

(assert (=> d!31637 e!72397))

(declare-fun res!54973 () Bool)

(assert (=> d!31637 (=> (not res!54973) (not e!72397))))

(assert (=> d!31637 (= res!54973 (isStrictlySorted!298 (toList!789 (+!144 lt!56546 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> d!31637 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 (+!144 lt!56546 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))) lt!56548) lt!57434)))

(declare-fun b!111379 () Bool)

(assert (=> b!111379 (= e!72397 (containsKey!162 (toList!789 (+!144 lt!56546 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))) lt!56548))))

(assert (= (and d!31637 res!54973) b!111379))

(assert (=> d!31637 m!124895))

(assert (=> d!31637 m!124895))

(assert (=> d!31637 m!124897))

(declare-fun m!126827 () Bool)

(assert (=> d!31637 m!126827))

(declare-fun m!126829 () Bool)

(assert (=> d!31637 m!126829))

(assert (=> b!111379 m!124891))

(assert (=> b!110277 d!31637))

(assert (=> b!110277 d!31429))

(assert (=> b!110277 d!31431))

(declare-fun d!31639 () Bool)

(assert (=> d!31639 (= (isEmpty!382 lt!56820) (isEmpty!384 (toList!789 lt!56820)))))

(declare-fun bs!4590 () Bool)

(assert (= bs!4590 d!31639))

(declare-fun m!126831 () Bool)

(assert (=> bs!4590 m!126831))

(assert (=> b!110153 d!31639))

(declare-fun d!31641 () Bool)

(declare-fun res!54974 () Bool)

(declare-fun e!72398 () Bool)

(assert (=> d!31641 (=> res!54974 e!72398)))

(assert (=> d!31641 (= res!54974 (and ((_ is Cons!1605) (toList!789 lt!56454)) (= (_1!1205 (h!2204 (toList!789 lt!56454))) (_1!1205 lt!56370))))))

(assert (=> d!31641 (= (containsKey!162 (toList!789 lt!56454) (_1!1205 lt!56370)) e!72398)))

(declare-fun b!111380 () Bool)

(declare-fun e!72399 () Bool)

(assert (=> b!111380 (= e!72398 e!72399)))

(declare-fun res!54975 () Bool)

(assert (=> b!111380 (=> (not res!54975) (not e!72399))))

(assert (=> b!111380 (= res!54975 (and (or (not ((_ is Cons!1605) (toList!789 lt!56454))) (bvsle (_1!1205 (h!2204 (toList!789 lt!56454))) (_1!1205 lt!56370))) ((_ is Cons!1605) (toList!789 lt!56454)) (bvslt (_1!1205 (h!2204 (toList!789 lt!56454))) (_1!1205 lt!56370))))))

(declare-fun b!111381 () Bool)

(assert (=> b!111381 (= e!72399 (containsKey!162 (t!5738 (toList!789 lt!56454)) (_1!1205 lt!56370)))))

(assert (= (and d!31641 (not res!54974)) b!111380))

(assert (= (and b!111380 res!54975) b!111381))

(declare-fun m!126833 () Bool)

(assert (=> b!111381 m!126833))

(assert (=> d!31035 d!31641))

(declare-fun d!31643 () Bool)

(declare-fun e!72401 () Bool)

(assert (=> d!31643 e!72401))

(declare-fun res!54976 () Bool)

(assert (=> d!31643 (=> res!54976 e!72401)))

(declare-fun lt!57437 () Bool)

(assert (=> d!31643 (= res!54976 (not lt!57437))))

(declare-fun lt!57438 () Bool)

(assert (=> d!31643 (= lt!57437 lt!57438)))

(declare-fun lt!57435 () Unit!3382)

(declare-fun e!72400 () Unit!3382)

(assert (=> d!31643 (= lt!57435 e!72400)))

(declare-fun c!19874 () Bool)

(assert (=> d!31643 (= c!19874 lt!57438)))

(assert (=> d!31643 (= lt!57438 (containsKey!162 (toList!789 lt!56798) (_1!1205 (ite (or c!19419 c!19417) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> d!31643 (= (contains!824 lt!56798 (_1!1205 (ite (or c!19419 c!19417) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))) lt!57437)))

(declare-fun b!111382 () Bool)

(declare-fun lt!57436 () Unit!3382)

(assert (=> b!111382 (= e!72400 lt!57436)))

(assert (=> b!111382 (= lt!57436 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 lt!56798) (_1!1205 (ite (or c!19419 c!19417) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(assert (=> b!111382 (isDefined!111 (getValueByKey!159 (toList!789 lt!56798) (_1!1205 (ite (or c!19419 c!19417) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(declare-fun b!111383 () Bool)

(declare-fun Unit!3449 () Unit!3382)

(assert (=> b!111383 (= e!72400 Unit!3449)))

(declare-fun b!111384 () Bool)

(assert (=> b!111384 (= e!72401 (isDefined!111 (getValueByKey!159 (toList!789 lt!56798) (_1!1205 (ite (or c!19419 c!19417) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))))

(assert (= (and d!31643 c!19874) b!111382))

(assert (= (and d!31643 (not c!19874)) b!111383))

(assert (= (and d!31643 (not res!54976)) b!111384))

(declare-fun m!126835 () Bool)

(assert (=> d!31643 m!126835))

(declare-fun m!126837 () Bool)

(assert (=> b!111382 m!126837))

(assert (=> b!111382 m!124651))

(assert (=> b!111382 m!124651))

(declare-fun m!126839 () Bool)

(assert (=> b!111382 m!126839))

(assert (=> b!111384 m!124651))

(assert (=> b!111384 m!124651))

(assert (=> b!111384 m!126839))

(assert (=> d!30893 d!31643))

(declare-fun b!111388 () Bool)

(declare-fun e!72403 () Option!165)

(assert (=> b!111388 (= e!72403 None!163)))

(declare-fun b!111385 () Bool)

(declare-fun e!72402 () Option!165)

(assert (=> b!111385 (= e!72402 (Some!164 (_2!1205 (h!2204 lt!56797))))))

(declare-fun b!111387 () Bool)

(assert (=> b!111387 (= e!72403 (getValueByKey!159 (t!5738 lt!56797) (_1!1205 (ite (or c!19419 c!19417) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(declare-fun c!19875 () Bool)

(declare-fun d!31645 () Bool)

(assert (=> d!31645 (= c!19875 (and ((_ is Cons!1605) lt!56797) (= (_1!1205 (h!2204 lt!56797)) (_1!1205 (ite (or c!19419 c!19417) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))))

(assert (=> d!31645 (= (getValueByKey!159 lt!56797 (_1!1205 (ite (or c!19419 c!19417) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))) e!72402)))

(declare-fun b!111386 () Bool)

(assert (=> b!111386 (= e!72402 e!72403)))

(declare-fun c!19876 () Bool)

(assert (=> b!111386 (= c!19876 (and ((_ is Cons!1605) lt!56797) (not (= (_1!1205 (h!2204 lt!56797)) (_1!1205 (ite (or c!19419 c!19417) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))))))))

(assert (= (and d!31645 c!19875) b!111385))

(assert (= (and d!31645 (not c!19875)) b!111386))

(assert (= (and b!111386 c!19876) b!111387))

(assert (= (and b!111386 (not c!19876)) b!111388))

(declare-fun m!126841 () Bool)

(assert (=> b!111387 m!126841))

(assert (=> d!30893 d!31645))

(declare-fun d!31647 () Bool)

(assert (=> d!31647 (= (getValueByKey!159 lt!56797 (_1!1205 (ite (or c!19419 c!19417) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))) (Some!164 (_2!1205 (ite (or c!19419 c!19417) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(declare-fun lt!57439 () Unit!3382)

(assert (=> d!31647 (= lt!57439 (choose!695 lt!56797 (_1!1205 (ite (or c!19419 c!19417) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))) (_2!1205 (ite (or c!19419 c!19417) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(declare-fun e!72404 () Bool)

(assert (=> d!31647 e!72404))

(declare-fun res!54977 () Bool)

(assert (=> d!31647 (=> (not res!54977) (not e!72404))))

(assert (=> d!31647 (= res!54977 (isStrictlySorted!298 lt!56797))))

(assert (=> d!31647 (= (lemmaContainsTupThenGetReturnValue!75 lt!56797 (_1!1205 (ite (or c!19419 c!19417) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))) (_2!1205 (ite (or c!19419 c!19417) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))) lt!57439)))

(declare-fun b!111389 () Bool)

(declare-fun res!54978 () Bool)

(assert (=> b!111389 (=> (not res!54978) (not e!72404))))

(assert (=> b!111389 (= res!54978 (containsKey!162 lt!56797 (_1!1205 (ite (or c!19419 c!19417) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(declare-fun b!111390 () Bool)

(assert (=> b!111390 (= e!72404 (contains!827 lt!56797 (tuple2!2389 (_1!1205 (ite (or c!19419 c!19417) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))) (_2!1205 (ite (or c!19419 c!19417) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))))

(assert (= (and d!31647 res!54977) b!111389))

(assert (= (and b!111389 res!54978) b!111390))

(assert (=> d!31647 m!124645))

(declare-fun m!126843 () Bool)

(assert (=> d!31647 m!126843))

(declare-fun m!126845 () Bool)

(assert (=> d!31647 m!126845))

(declare-fun m!126847 () Bool)

(assert (=> b!111389 m!126847))

(declare-fun m!126849 () Bool)

(assert (=> b!111390 m!126849))

(assert (=> d!30893 d!31647))

(declare-fun b!111391 () Bool)

(declare-fun e!72407 () List!1609)

(assert (=> b!111391 (= e!72407 (insertStrictlySorted!78 (t!5738 (toList!789 (ite c!19419 call!11641 (ite c!19417 call!11644 call!11640)))) (_1!1205 (ite (or c!19419 c!19417) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))) (_2!1205 (ite (or c!19419 c!19417) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(declare-fun b!111392 () Bool)

(declare-fun res!54980 () Bool)

(declare-fun e!72409 () Bool)

(assert (=> b!111392 (=> (not res!54980) (not e!72409))))

(declare-fun lt!57440 () List!1609)

(assert (=> b!111392 (= res!54980 (containsKey!162 lt!57440 (_1!1205 (ite (or c!19419 c!19417) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(declare-fun b!111393 () Bool)

(declare-fun e!72408 () List!1609)

(declare-fun call!11883 () List!1609)

(assert (=> b!111393 (= e!72408 call!11883)))

(declare-fun bm!11879 () Bool)

(declare-fun call!11884 () List!1609)

(declare-fun call!11882 () List!1609)

(assert (=> bm!11879 (= call!11884 call!11882)))

(declare-fun bm!11880 () Bool)

(assert (=> bm!11880 (= call!11883 call!11884)))

(declare-fun b!111394 () Bool)

(assert (=> b!111394 (= e!72408 call!11883)))

(declare-fun bm!11881 () Bool)

(declare-fun c!19879 () Bool)

(assert (=> bm!11881 (= call!11882 ($colon$colon!82 e!72407 (ite c!19879 (h!2204 (toList!789 (ite c!19419 call!11641 (ite c!19417 call!11644 call!11640)))) (tuple2!2389 (_1!1205 (ite (or c!19419 c!19417) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))) (_2!1205 (ite (or c!19419 c!19417) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))))))))

(declare-fun c!19880 () Bool)

(assert (=> bm!11881 (= c!19880 c!19879)))

(declare-fun b!111395 () Bool)

(declare-fun e!72406 () List!1609)

(assert (=> b!111395 (= e!72406 call!11884)))

(declare-fun d!31649 () Bool)

(assert (=> d!31649 e!72409))

(declare-fun res!54979 () Bool)

(assert (=> d!31649 (=> (not res!54979) (not e!72409))))

(assert (=> d!31649 (= res!54979 (isStrictlySorted!298 lt!57440))))

(declare-fun e!72405 () List!1609)

(assert (=> d!31649 (= lt!57440 e!72405)))

(assert (=> d!31649 (= c!19879 (and ((_ is Cons!1605) (toList!789 (ite c!19419 call!11641 (ite c!19417 call!11644 call!11640)))) (bvslt (_1!1205 (h!2204 (toList!789 (ite c!19419 call!11641 (ite c!19417 call!11644 call!11640))))) (_1!1205 (ite (or c!19419 c!19417) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))))

(assert (=> d!31649 (isStrictlySorted!298 (toList!789 (ite c!19419 call!11641 (ite c!19417 call!11644 call!11640))))))

(assert (=> d!31649 (= (insertStrictlySorted!78 (toList!789 (ite c!19419 call!11641 (ite c!19417 call!11644 call!11640))) (_1!1205 (ite (or c!19419 c!19417) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))) (_2!1205 (ite (or c!19419 c!19417) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))) lt!57440)))

(declare-fun b!111396 () Bool)

(assert (=> b!111396 (= e!72405 call!11882)))

(declare-fun b!111397 () Bool)

(declare-fun c!19877 () Bool)

(assert (=> b!111397 (= c!19877 (and ((_ is Cons!1605) (toList!789 (ite c!19419 call!11641 (ite c!19417 call!11644 call!11640)))) (bvsgt (_1!1205 (h!2204 (toList!789 (ite c!19419 call!11641 (ite c!19417 call!11644 call!11640))))) (_1!1205 (ite (or c!19419 c!19417) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))))

(assert (=> b!111397 (= e!72406 e!72408)))

(declare-fun c!19878 () Bool)

(declare-fun b!111398 () Bool)

(assert (=> b!111398 (= e!72407 (ite c!19878 (t!5738 (toList!789 (ite c!19419 call!11641 (ite c!19417 call!11644 call!11640)))) (ite c!19877 (Cons!1605 (h!2204 (toList!789 (ite c!19419 call!11641 (ite c!19417 call!11644 call!11640)))) (t!5738 (toList!789 (ite c!19419 call!11641 (ite c!19417 call!11644 call!11640))))) Nil!1606)))))

(declare-fun b!111399 () Bool)

(assert (=> b!111399 (= e!72409 (contains!827 lt!57440 (tuple2!2389 (_1!1205 (ite (or c!19419 c!19417) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))) (_2!1205 (ite (or c!19419 c!19417) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))))

(declare-fun b!111400 () Bool)

(assert (=> b!111400 (= e!72405 e!72406)))

(assert (=> b!111400 (= c!19878 (and ((_ is Cons!1605) (toList!789 (ite c!19419 call!11641 (ite c!19417 call!11644 call!11640)))) (= (_1!1205 (h!2204 (toList!789 (ite c!19419 call!11641 (ite c!19417 call!11644 call!11640))))) (_1!1205 (ite (or c!19419 c!19417) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))))

(assert (= (and d!31649 c!19879) b!111396))

(assert (= (and d!31649 (not c!19879)) b!111400))

(assert (= (and b!111400 c!19878) b!111395))

(assert (= (and b!111400 (not c!19878)) b!111397))

(assert (= (and b!111397 c!19877) b!111393))

(assert (= (and b!111397 (not c!19877)) b!111394))

(assert (= (or b!111393 b!111394) bm!11880))

(assert (= (or b!111395 bm!11880) bm!11879))

(assert (= (or b!111396 bm!11879) bm!11881))

(assert (= (and bm!11881 c!19880) b!111391))

(assert (= (and bm!11881 (not c!19880)) b!111398))

(assert (= (and d!31649 res!54979) b!111392))

(assert (= (and b!111392 res!54980) b!111399))

(declare-fun m!126851 () Bool)

(assert (=> bm!11881 m!126851))

(declare-fun m!126853 () Bool)

(assert (=> b!111399 m!126853))

(declare-fun m!126855 () Bool)

(assert (=> b!111392 m!126855))

(declare-fun m!126857 () Bool)

(assert (=> d!31649 m!126857))

(declare-fun m!126859 () Bool)

(assert (=> d!31649 m!126859))

(declare-fun m!126861 () Bool)

(assert (=> b!111391 m!126861))

(assert (=> d!30893 d!31649))

(declare-fun b!111401 () Bool)

(declare-fun e!72412 () List!1609)

(assert (=> b!111401 (= e!72412 (insertStrictlySorted!78 (t!5738 (t!5738 (toList!789 lt!56369))) (_1!1205 lt!56370) (_2!1205 lt!56370)))))

(declare-fun b!111402 () Bool)

(declare-fun res!54982 () Bool)

(declare-fun e!72414 () Bool)

(assert (=> b!111402 (=> (not res!54982) (not e!72414))))

(declare-fun lt!57441 () List!1609)

(assert (=> b!111402 (= res!54982 (containsKey!162 lt!57441 (_1!1205 lt!56370)))))

(declare-fun b!111403 () Bool)

(declare-fun e!72413 () List!1609)

(declare-fun call!11886 () List!1609)

(assert (=> b!111403 (= e!72413 call!11886)))

(declare-fun bm!11882 () Bool)

(declare-fun call!11887 () List!1609)

(declare-fun call!11885 () List!1609)

(assert (=> bm!11882 (= call!11887 call!11885)))

(declare-fun bm!11883 () Bool)

(assert (=> bm!11883 (= call!11886 call!11887)))

(declare-fun b!111404 () Bool)

(assert (=> b!111404 (= e!72413 call!11886)))

(declare-fun c!19883 () Bool)

(declare-fun bm!11884 () Bool)

(assert (=> bm!11884 (= call!11885 ($colon$colon!82 e!72412 (ite c!19883 (h!2204 (t!5738 (toList!789 lt!56369))) (tuple2!2389 (_1!1205 lt!56370) (_2!1205 lt!56370)))))))

(declare-fun c!19884 () Bool)

(assert (=> bm!11884 (= c!19884 c!19883)))

(declare-fun b!111405 () Bool)

(declare-fun e!72411 () List!1609)

(assert (=> b!111405 (= e!72411 call!11887)))

(declare-fun d!31651 () Bool)

(assert (=> d!31651 e!72414))

(declare-fun res!54981 () Bool)

(assert (=> d!31651 (=> (not res!54981) (not e!72414))))

(assert (=> d!31651 (= res!54981 (isStrictlySorted!298 lt!57441))))

(declare-fun e!72410 () List!1609)

(assert (=> d!31651 (= lt!57441 e!72410)))

(assert (=> d!31651 (= c!19883 (and ((_ is Cons!1605) (t!5738 (toList!789 lt!56369))) (bvslt (_1!1205 (h!2204 (t!5738 (toList!789 lt!56369)))) (_1!1205 lt!56370))))))

(assert (=> d!31651 (isStrictlySorted!298 (t!5738 (toList!789 lt!56369)))))

(assert (=> d!31651 (= (insertStrictlySorted!78 (t!5738 (toList!789 lt!56369)) (_1!1205 lt!56370) (_2!1205 lt!56370)) lt!57441)))

(declare-fun b!111406 () Bool)

(assert (=> b!111406 (= e!72410 call!11885)))

(declare-fun b!111407 () Bool)

(declare-fun c!19881 () Bool)

(assert (=> b!111407 (= c!19881 (and ((_ is Cons!1605) (t!5738 (toList!789 lt!56369))) (bvsgt (_1!1205 (h!2204 (t!5738 (toList!789 lt!56369)))) (_1!1205 lt!56370))))))

(assert (=> b!111407 (= e!72411 e!72413)))

(declare-fun c!19882 () Bool)

(declare-fun b!111408 () Bool)

(assert (=> b!111408 (= e!72412 (ite c!19882 (t!5738 (t!5738 (toList!789 lt!56369))) (ite c!19881 (Cons!1605 (h!2204 (t!5738 (toList!789 lt!56369))) (t!5738 (t!5738 (toList!789 lt!56369)))) Nil!1606)))))

(declare-fun b!111409 () Bool)

(assert (=> b!111409 (= e!72414 (contains!827 lt!57441 (tuple2!2389 (_1!1205 lt!56370) (_2!1205 lt!56370))))))

(declare-fun b!111410 () Bool)

(assert (=> b!111410 (= e!72410 e!72411)))

(assert (=> b!111410 (= c!19882 (and ((_ is Cons!1605) (t!5738 (toList!789 lt!56369))) (= (_1!1205 (h!2204 (t!5738 (toList!789 lt!56369)))) (_1!1205 lt!56370))))))

(assert (= (and d!31651 c!19883) b!111406))

(assert (= (and d!31651 (not c!19883)) b!111410))

(assert (= (and b!111410 c!19882) b!111405))

(assert (= (and b!111410 (not c!19882)) b!111407))

(assert (= (and b!111407 c!19881) b!111403))

(assert (= (and b!111407 (not c!19881)) b!111404))

(assert (= (or b!111403 b!111404) bm!11883))

(assert (= (or b!111405 bm!11883) bm!11882))

(assert (= (or b!111406 bm!11882) bm!11884))

(assert (= (and bm!11884 c!19884) b!111401))

(assert (= (and bm!11884 (not c!19884)) b!111408))

(assert (= (and d!31651 res!54981) b!111402))

(assert (= (and b!111402 res!54982) b!111409))

(declare-fun m!126863 () Bool)

(assert (=> bm!11884 m!126863))

(declare-fun m!126865 () Bool)

(assert (=> b!111409 m!126865))

(declare-fun m!126867 () Bool)

(assert (=> b!111402 m!126867))

(declare-fun m!126869 () Bool)

(assert (=> d!31651 m!126869))

(assert (=> d!31651 m!125827))

(declare-fun m!126871 () Bool)

(assert (=> b!111401 m!126871))

(assert (=> b!110382 d!31651))

(declare-fun d!31653 () Bool)

(declare-fun res!54983 () Bool)

(declare-fun e!72415 () Bool)

(assert (=> d!31653 (=> res!54983 e!72415)))

(assert (=> d!31653 (= res!54983 (and ((_ is Cons!1605) lt!56457) (= (_1!1205 (h!2204 lt!56457)) (_1!1205 lt!56363))))))

(assert (=> d!31653 (= (containsKey!162 lt!56457 (_1!1205 lt!56363)) e!72415)))

(declare-fun b!111411 () Bool)

(declare-fun e!72416 () Bool)

(assert (=> b!111411 (= e!72415 e!72416)))

(declare-fun res!54984 () Bool)

(assert (=> b!111411 (=> (not res!54984) (not e!72416))))

(assert (=> b!111411 (= res!54984 (and (or (not ((_ is Cons!1605) lt!56457)) (bvsle (_1!1205 (h!2204 lt!56457)) (_1!1205 lt!56363))) ((_ is Cons!1605) lt!56457) (bvslt (_1!1205 (h!2204 lt!56457)) (_1!1205 lt!56363))))))

(declare-fun b!111412 () Bool)

(assert (=> b!111412 (= e!72416 (containsKey!162 (t!5738 lt!56457) (_1!1205 lt!56363)))))

(assert (= (and d!31653 (not res!54983)) b!111411))

(assert (= (and b!111411 res!54984) b!111412))

(declare-fun m!126873 () Bool)

(assert (=> b!111412 m!126873))

(assert (=> b!110202 d!31653))

(declare-fun d!31655 () Bool)

(declare-fun res!54985 () Bool)

(declare-fun e!72417 () Bool)

(assert (=> d!31655 (=> (not res!54985) (not e!72417))))

(assert (=> d!31655 (= res!54985 (simpleValid!76 (_2!1204 lt!56730)))))

(assert (=> d!31655 (= (valid!434 (_2!1204 lt!56730)) e!72417)))

(declare-fun b!111413 () Bool)

(declare-fun res!54986 () Bool)

(assert (=> b!111413 (=> (not res!54986) (not e!72417))))

(assert (=> b!111413 (= res!54986 (= (arrayCountValidKeys!0 (_keys!4340 (_2!1204 lt!56730)) #b00000000000000000000000000000000 (size!2329 (_keys!4340 (_2!1204 lt!56730)))) (_size!507 (_2!1204 lt!56730))))))

(declare-fun b!111414 () Bool)

(declare-fun res!54987 () Bool)

(assert (=> b!111414 (=> (not res!54987) (not e!72417))))

(assert (=> b!111414 (= res!54987 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4340 (_2!1204 lt!56730)) (mask!6794 (_2!1204 lt!56730))))))

(declare-fun b!111415 () Bool)

(assert (=> b!111415 (= e!72417 (arrayNoDuplicates!0 (_keys!4340 (_2!1204 lt!56730)) #b00000000000000000000000000000000 Nil!1607))))

(assert (= (and d!31655 res!54985) b!111413))

(assert (= (and b!111413 res!54986) b!111414))

(assert (= (and b!111414 res!54987) b!111415))

(declare-fun m!126875 () Bool)

(assert (=> d!31655 m!126875))

(declare-fun m!126877 () Bool)

(assert (=> b!111413 m!126877))

(declare-fun m!126879 () Bool)

(assert (=> b!111414 m!126879))

(declare-fun m!126881 () Bool)

(assert (=> b!111415 m!126881))

(assert (=> b!110054 d!31655))

(declare-fun d!31657 () Bool)

(declare-fun e!72418 () Bool)

(assert (=> d!31657 e!72418))

(declare-fun res!54989 () Bool)

(assert (=> d!31657 (=> (not res!54989) (not e!72418))))

(declare-fun lt!57445 () ListLongMap!1547)

(assert (=> d!31657 (= res!54989 (contains!824 lt!57445 (_1!1205 (tuple2!2389 lt!56916 (zeroValue!2497 newMap!16)))))))

(declare-fun lt!57444 () List!1609)

(assert (=> d!31657 (= lt!57445 (ListLongMap!1548 lt!57444))))

(declare-fun lt!57443 () Unit!3382)

(declare-fun lt!57442 () Unit!3382)

(assert (=> d!31657 (= lt!57443 lt!57442)))

(assert (=> d!31657 (= (getValueByKey!159 lt!57444 (_1!1205 (tuple2!2389 lt!56916 (zeroValue!2497 newMap!16)))) (Some!164 (_2!1205 (tuple2!2389 lt!56916 (zeroValue!2497 newMap!16)))))))

(assert (=> d!31657 (= lt!57442 (lemmaContainsTupThenGetReturnValue!75 lt!57444 (_1!1205 (tuple2!2389 lt!56916 (zeroValue!2497 newMap!16))) (_2!1205 (tuple2!2389 lt!56916 (zeroValue!2497 newMap!16)))))))

(assert (=> d!31657 (= lt!57444 (insertStrictlySorted!78 (toList!789 lt!56909) (_1!1205 (tuple2!2389 lt!56916 (zeroValue!2497 newMap!16))) (_2!1205 (tuple2!2389 lt!56916 (zeroValue!2497 newMap!16)))))))

(assert (=> d!31657 (= (+!144 lt!56909 (tuple2!2389 lt!56916 (zeroValue!2497 newMap!16))) lt!57445)))

(declare-fun b!111416 () Bool)

(declare-fun res!54988 () Bool)

(assert (=> b!111416 (=> (not res!54988) (not e!72418))))

(assert (=> b!111416 (= res!54988 (= (getValueByKey!159 (toList!789 lt!57445) (_1!1205 (tuple2!2389 lt!56916 (zeroValue!2497 newMap!16)))) (Some!164 (_2!1205 (tuple2!2389 lt!56916 (zeroValue!2497 newMap!16))))))))

(declare-fun b!111417 () Bool)

(assert (=> b!111417 (= e!72418 (contains!827 (toList!789 lt!57445) (tuple2!2389 lt!56916 (zeroValue!2497 newMap!16))))))

(assert (= (and d!31657 res!54989) b!111416))

(assert (= (and b!111416 res!54988) b!111417))

(declare-fun m!126883 () Bool)

(assert (=> d!31657 m!126883))

(declare-fun m!126885 () Bool)

(assert (=> d!31657 m!126885))

(declare-fun m!126887 () Bool)

(assert (=> d!31657 m!126887))

(declare-fun m!126889 () Bool)

(assert (=> d!31657 m!126889))

(declare-fun m!126891 () Bool)

(assert (=> b!111416 m!126891))

(declare-fun m!126893 () Bool)

(assert (=> b!111417 m!126893))

(assert (=> b!110290 d!31657))

(declare-fun d!31659 () Bool)

(declare-fun e!72420 () Bool)

(assert (=> d!31659 e!72420))

(declare-fun res!54990 () Bool)

(assert (=> d!31659 (=> res!54990 e!72420)))

(declare-fun lt!57448 () Bool)

(assert (=> d!31659 (= res!54990 (not lt!57448))))

(declare-fun lt!57449 () Bool)

(assert (=> d!31659 (= lt!57448 lt!57449)))

(declare-fun lt!57446 () Unit!3382)

(declare-fun e!72419 () Unit!3382)

(assert (=> d!31659 (= lt!57446 e!72419)))

(declare-fun c!19885 () Bool)

(assert (=> d!31659 (= c!19885 lt!57449)))

(assert (=> d!31659 (= lt!57449 (containsKey!162 (toList!789 (+!144 lt!56909 (tuple2!2389 lt!56916 (zeroValue!2497 newMap!16)))) lt!56911))))

(assert (=> d!31659 (= (contains!824 (+!144 lt!56909 (tuple2!2389 lt!56916 (zeroValue!2497 newMap!16))) lt!56911) lt!57448)))

(declare-fun b!111418 () Bool)

(declare-fun lt!57447 () Unit!3382)

(assert (=> b!111418 (= e!72419 lt!57447)))

(assert (=> b!111418 (= lt!57447 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 (+!144 lt!56909 (tuple2!2389 lt!56916 (zeroValue!2497 newMap!16)))) lt!56911))))

(assert (=> b!111418 (isDefined!111 (getValueByKey!159 (toList!789 (+!144 lt!56909 (tuple2!2389 lt!56916 (zeroValue!2497 newMap!16)))) lt!56911))))

(declare-fun b!111419 () Bool)

(declare-fun Unit!3450 () Unit!3382)

(assert (=> b!111419 (= e!72419 Unit!3450)))

(declare-fun b!111420 () Bool)

(assert (=> b!111420 (= e!72420 (isDefined!111 (getValueByKey!159 (toList!789 (+!144 lt!56909 (tuple2!2389 lt!56916 (zeroValue!2497 newMap!16)))) lt!56911)))))

(assert (= (and d!31659 c!19885) b!111418))

(assert (= (and d!31659 (not c!19885)) b!111419))

(assert (= (and d!31659 (not res!54990)) b!111420))

(declare-fun m!126895 () Bool)

(assert (=> d!31659 m!126895))

(declare-fun m!126897 () Bool)

(assert (=> b!111418 m!126897))

(declare-fun m!126899 () Bool)

(assert (=> b!111418 m!126899))

(assert (=> b!111418 m!126899))

(declare-fun m!126901 () Bool)

(assert (=> b!111418 m!126901))

(assert (=> b!111420 m!126899))

(assert (=> b!111420 m!126899))

(assert (=> b!111420 m!126901))

(assert (=> b!110290 d!31659))

(declare-fun d!31661 () Bool)

(assert (=> d!31661 (= (apply!100 (+!144 lt!56917 (tuple2!2389 lt!56906 (minValue!2497 newMap!16))) lt!56900) (apply!100 lt!56917 lt!56900))))

(declare-fun lt!57450 () Unit!3382)

(assert (=> d!31661 (= lt!57450 (choose!697 lt!56917 lt!56906 (minValue!2497 newMap!16) lt!56900))))

(declare-fun e!72421 () Bool)

(assert (=> d!31661 e!72421))

(declare-fun res!54991 () Bool)

(assert (=> d!31661 (=> (not res!54991) (not e!72421))))

(assert (=> d!31661 (= res!54991 (contains!824 lt!56917 lt!56900))))

(assert (=> d!31661 (= (addApplyDifferent!76 lt!56917 lt!56906 (minValue!2497 newMap!16) lt!56900) lt!57450)))

(declare-fun b!111421 () Bool)

(assert (=> b!111421 (= e!72421 (not (= lt!56900 lt!56906)))))

(assert (= (and d!31661 res!54991) b!111421))

(assert (=> d!31661 m!124955))

(assert (=> d!31661 m!124955))

(assert (=> d!31661 m!124957))

(assert (=> d!31661 m!124931))

(declare-fun m!126903 () Bool)

(assert (=> d!31661 m!126903))

(declare-fun m!126905 () Bool)

(assert (=> d!31661 m!126905))

(assert (=> b!110290 d!31661))

(declare-fun d!31663 () Bool)

(assert (=> d!31663 (= (apply!100 (+!144 lt!56899 (tuple2!2389 lt!56904 (minValue!2497 newMap!16))) lt!56901) (apply!100 lt!56899 lt!56901))))

(declare-fun lt!57451 () Unit!3382)

(assert (=> d!31663 (= lt!57451 (choose!697 lt!56899 lt!56904 (minValue!2497 newMap!16) lt!56901))))

(declare-fun e!72422 () Bool)

(assert (=> d!31663 e!72422))

(declare-fun res!54992 () Bool)

(assert (=> d!31663 (=> (not res!54992) (not e!72422))))

(assert (=> d!31663 (= res!54992 (contains!824 lt!56899 lt!56901))))

(assert (=> d!31663 (= (addApplyDifferent!76 lt!56899 lt!56904 (minValue!2497 newMap!16) lt!56901) lt!57451)))

(declare-fun b!111422 () Bool)

(assert (=> b!111422 (= e!72422 (not (= lt!56901 lt!56904)))))

(assert (= (and d!31663 res!54992) b!111422))

(assert (=> d!31663 m!124941))

(assert (=> d!31663 m!124941))

(assert (=> d!31663 m!124943))

(assert (=> d!31663 m!124945))

(declare-fun m!126907 () Bool)

(assert (=> d!31663 m!126907))

(declare-fun m!126909 () Bool)

(assert (=> d!31663 m!126909))

(assert (=> b!110290 d!31663))

(declare-fun d!31665 () Bool)

(assert (=> d!31665 (= (apply!100 (+!144 lt!56907 (tuple2!2389 lt!56918 (zeroValue!2497 newMap!16))) lt!56913) (get!1356 (getValueByKey!159 (toList!789 (+!144 lt!56907 (tuple2!2389 lt!56918 (zeroValue!2497 newMap!16)))) lt!56913)))))

(declare-fun bs!4591 () Bool)

(assert (= bs!4591 d!31665))

(declare-fun m!126911 () Bool)

(assert (=> bs!4591 m!126911))

(assert (=> bs!4591 m!126911))

(declare-fun m!126913 () Bool)

(assert (=> bs!4591 m!126913))

(assert (=> b!110290 d!31665))

(declare-fun d!31667 () Bool)

(assert (=> d!31667 (= (apply!100 lt!56917 lt!56900) (get!1356 (getValueByKey!159 (toList!789 lt!56917) lt!56900)))))

(declare-fun bs!4592 () Bool)

(assert (= bs!4592 d!31667))

(declare-fun m!126915 () Bool)

(assert (=> bs!4592 m!126915))

(assert (=> bs!4592 m!126915))

(declare-fun m!126917 () Bool)

(assert (=> bs!4592 m!126917))

(assert (=> b!110290 d!31667))

(declare-fun d!31669 () Bool)

(declare-fun e!72423 () Bool)

(assert (=> d!31669 e!72423))

(declare-fun res!54994 () Bool)

(assert (=> d!31669 (=> (not res!54994) (not e!72423))))

(declare-fun lt!57455 () ListLongMap!1547)

(assert (=> d!31669 (= res!54994 (contains!824 lt!57455 (_1!1205 (tuple2!2389 lt!56904 (minValue!2497 newMap!16)))))))

(declare-fun lt!57454 () List!1609)

(assert (=> d!31669 (= lt!57455 (ListLongMap!1548 lt!57454))))

(declare-fun lt!57453 () Unit!3382)

(declare-fun lt!57452 () Unit!3382)

(assert (=> d!31669 (= lt!57453 lt!57452)))

(assert (=> d!31669 (= (getValueByKey!159 lt!57454 (_1!1205 (tuple2!2389 lt!56904 (minValue!2497 newMap!16)))) (Some!164 (_2!1205 (tuple2!2389 lt!56904 (minValue!2497 newMap!16)))))))

(assert (=> d!31669 (= lt!57452 (lemmaContainsTupThenGetReturnValue!75 lt!57454 (_1!1205 (tuple2!2389 lt!56904 (minValue!2497 newMap!16))) (_2!1205 (tuple2!2389 lt!56904 (minValue!2497 newMap!16)))))))

(assert (=> d!31669 (= lt!57454 (insertStrictlySorted!78 (toList!789 lt!56899) (_1!1205 (tuple2!2389 lt!56904 (minValue!2497 newMap!16))) (_2!1205 (tuple2!2389 lt!56904 (minValue!2497 newMap!16)))))))

(assert (=> d!31669 (= (+!144 lt!56899 (tuple2!2389 lt!56904 (minValue!2497 newMap!16))) lt!57455)))

(declare-fun b!111423 () Bool)

(declare-fun res!54993 () Bool)

(assert (=> b!111423 (=> (not res!54993) (not e!72423))))

(assert (=> b!111423 (= res!54993 (= (getValueByKey!159 (toList!789 lt!57455) (_1!1205 (tuple2!2389 lt!56904 (minValue!2497 newMap!16)))) (Some!164 (_2!1205 (tuple2!2389 lt!56904 (minValue!2497 newMap!16))))))))

(declare-fun b!111424 () Bool)

(assert (=> b!111424 (= e!72423 (contains!827 (toList!789 lt!57455) (tuple2!2389 lt!56904 (minValue!2497 newMap!16))))))

(assert (= (and d!31669 res!54994) b!111423))

(assert (= (and b!111423 res!54993) b!111424))

(declare-fun m!126919 () Bool)

(assert (=> d!31669 m!126919))

(declare-fun m!126921 () Bool)

(assert (=> d!31669 m!126921))

(declare-fun m!126923 () Bool)

(assert (=> d!31669 m!126923))

(declare-fun m!126925 () Bool)

(assert (=> d!31669 m!126925))

(declare-fun m!126927 () Bool)

(assert (=> b!111423 m!126927))

(declare-fun m!126929 () Bool)

(assert (=> b!111424 m!126929))

(assert (=> b!110290 d!31669))

(declare-fun d!31671 () Bool)

(assert (=> d!31671 (= (apply!100 lt!56899 lt!56901) (get!1356 (getValueByKey!159 (toList!789 lt!56899) lt!56901)))))

(declare-fun bs!4593 () Bool)

(assert (= bs!4593 d!31671))

(declare-fun m!126931 () Bool)

(assert (=> bs!4593 m!126931))

(assert (=> bs!4593 m!126931))

(declare-fun m!126933 () Bool)

(assert (=> bs!4593 m!126933))

(assert (=> b!110290 d!31671))

(declare-fun d!31673 () Bool)

(assert (=> d!31673 (= (apply!100 (+!144 lt!56917 (tuple2!2389 lt!56906 (minValue!2497 newMap!16))) lt!56900) (get!1356 (getValueByKey!159 (toList!789 (+!144 lt!56917 (tuple2!2389 lt!56906 (minValue!2497 newMap!16)))) lt!56900)))))

(declare-fun bs!4594 () Bool)

(assert (= bs!4594 d!31673))

(declare-fun m!126935 () Bool)

(assert (=> bs!4594 m!126935))

(assert (=> bs!4594 m!126935))

(declare-fun m!126937 () Bool)

(assert (=> bs!4594 m!126937))

(assert (=> b!110290 d!31673))

(declare-fun d!31675 () Bool)

(assert (=> d!31675 (= (apply!100 lt!56907 lt!56913) (get!1356 (getValueByKey!159 (toList!789 lt!56907) lt!56913)))))

(declare-fun bs!4595 () Bool)

(assert (= bs!4595 d!31675))

(declare-fun m!126939 () Bool)

(assert (=> bs!4595 m!126939))

(assert (=> bs!4595 m!126939))

(declare-fun m!126941 () Bool)

(assert (=> bs!4595 m!126941))

(assert (=> b!110290 d!31675))

(declare-fun d!31677 () Bool)

(declare-fun e!72424 () Bool)

(assert (=> d!31677 e!72424))

(declare-fun res!54996 () Bool)

(assert (=> d!31677 (=> (not res!54996) (not e!72424))))

(declare-fun lt!57459 () ListLongMap!1547)

(assert (=> d!31677 (= res!54996 (contains!824 lt!57459 (_1!1205 (tuple2!2389 lt!56906 (minValue!2497 newMap!16)))))))

(declare-fun lt!57458 () List!1609)

(assert (=> d!31677 (= lt!57459 (ListLongMap!1548 lt!57458))))

(declare-fun lt!57457 () Unit!3382)

(declare-fun lt!57456 () Unit!3382)

(assert (=> d!31677 (= lt!57457 lt!57456)))

(assert (=> d!31677 (= (getValueByKey!159 lt!57458 (_1!1205 (tuple2!2389 lt!56906 (minValue!2497 newMap!16)))) (Some!164 (_2!1205 (tuple2!2389 lt!56906 (minValue!2497 newMap!16)))))))

(assert (=> d!31677 (= lt!57456 (lemmaContainsTupThenGetReturnValue!75 lt!57458 (_1!1205 (tuple2!2389 lt!56906 (minValue!2497 newMap!16))) (_2!1205 (tuple2!2389 lt!56906 (minValue!2497 newMap!16)))))))

(assert (=> d!31677 (= lt!57458 (insertStrictlySorted!78 (toList!789 lt!56917) (_1!1205 (tuple2!2389 lt!56906 (minValue!2497 newMap!16))) (_2!1205 (tuple2!2389 lt!56906 (minValue!2497 newMap!16)))))))

(assert (=> d!31677 (= (+!144 lt!56917 (tuple2!2389 lt!56906 (minValue!2497 newMap!16))) lt!57459)))

(declare-fun b!111425 () Bool)

(declare-fun res!54995 () Bool)

(assert (=> b!111425 (=> (not res!54995) (not e!72424))))

(assert (=> b!111425 (= res!54995 (= (getValueByKey!159 (toList!789 lt!57459) (_1!1205 (tuple2!2389 lt!56906 (minValue!2497 newMap!16)))) (Some!164 (_2!1205 (tuple2!2389 lt!56906 (minValue!2497 newMap!16))))))))

(declare-fun b!111426 () Bool)

(assert (=> b!111426 (= e!72424 (contains!827 (toList!789 lt!57459) (tuple2!2389 lt!56906 (minValue!2497 newMap!16))))))

(assert (= (and d!31677 res!54996) b!111425))

(assert (= (and b!111425 res!54995) b!111426))

(declare-fun m!126943 () Bool)

(assert (=> d!31677 m!126943))

(declare-fun m!126945 () Bool)

(assert (=> d!31677 m!126945))

(declare-fun m!126947 () Bool)

(assert (=> d!31677 m!126947))

(declare-fun m!126949 () Bool)

(assert (=> d!31677 m!126949))

(declare-fun m!126951 () Bool)

(assert (=> b!111425 m!126951))

(declare-fun m!126953 () Bool)

(assert (=> b!111426 m!126953))

(assert (=> b!110290 d!31677))

(declare-fun d!31679 () Bool)

(assert (=> d!31679 (= (apply!100 (+!144 lt!56899 (tuple2!2389 lt!56904 (minValue!2497 newMap!16))) lt!56901) (get!1356 (getValueByKey!159 (toList!789 (+!144 lt!56899 (tuple2!2389 lt!56904 (minValue!2497 newMap!16)))) lt!56901)))))

(declare-fun bs!4596 () Bool)

(assert (= bs!4596 d!31679))

(declare-fun m!126955 () Bool)

(assert (=> bs!4596 m!126955))

(assert (=> bs!4596 m!126955))

(declare-fun m!126957 () Bool)

(assert (=> bs!4596 m!126957))

(assert (=> b!110290 d!31679))

(declare-fun d!31681 () Bool)

(assert (=> d!31681 (= (apply!100 (+!144 lt!56907 (tuple2!2389 lt!56918 (zeroValue!2497 newMap!16))) lt!56913) (apply!100 lt!56907 lt!56913))))

(declare-fun lt!57460 () Unit!3382)

(assert (=> d!31681 (= lt!57460 (choose!697 lt!56907 lt!56918 (zeroValue!2497 newMap!16) lt!56913))))

(declare-fun e!72425 () Bool)

(assert (=> d!31681 e!72425))

(declare-fun res!54997 () Bool)

(assert (=> d!31681 (=> (not res!54997) (not e!72425))))

(assert (=> d!31681 (= res!54997 (contains!824 lt!56907 lt!56913))))

(assert (=> d!31681 (= (addApplyDifferent!76 lt!56907 lt!56918 (zeroValue!2497 newMap!16) lt!56913) lt!57460)))

(declare-fun b!111427 () Bool)

(assert (=> b!111427 (= e!72425 (not (= lt!56913 lt!56918)))))

(assert (= (and d!31681 res!54997) b!111427))

(assert (=> d!31681 m!124947))

(assert (=> d!31681 m!124947))

(assert (=> d!31681 m!124949))

(assert (=> d!31681 m!124929))

(declare-fun m!126959 () Bool)

(assert (=> d!31681 m!126959))

(declare-fun m!126961 () Bool)

(assert (=> d!31681 m!126961))

(assert (=> b!110290 d!31681))

(declare-fun d!31683 () Bool)

(declare-fun e!72426 () Bool)

(assert (=> d!31683 e!72426))

(declare-fun res!54999 () Bool)

(assert (=> d!31683 (=> (not res!54999) (not e!72426))))

(declare-fun lt!57464 () ListLongMap!1547)

(assert (=> d!31683 (= res!54999 (contains!824 lt!57464 (_1!1205 (tuple2!2389 lt!56918 (zeroValue!2497 newMap!16)))))))

(declare-fun lt!57463 () List!1609)

(assert (=> d!31683 (= lt!57464 (ListLongMap!1548 lt!57463))))

(declare-fun lt!57462 () Unit!3382)

(declare-fun lt!57461 () Unit!3382)

(assert (=> d!31683 (= lt!57462 lt!57461)))

(assert (=> d!31683 (= (getValueByKey!159 lt!57463 (_1!1205 (tuple2!2389 lt!56918 (zeroValue!2497 newMap!16)))) (Some!164 (_2!1205 (tuple2!2389 lt!56918 (zeroValue!2497 newMap!16)))))))

(assert (=> d!31683 (= lt!57461 (lemmaContainsTupThenGetReturnValue!75 lt!57463 (_1!1205 (tuple2!2389 lt!56918 (zeroValue!2497 newMap!16))) (_2!1205 (tuple2!2389 lt!56918 (zeroValue!2497 newMap!16)))))))

(assert (=> d!31683 (= lt!57463 (insertStrictlySorted!78 (toList!789 lt!56907) (_1!1205 (tuple2!2389 lt!56918 (zeroValue!2497 newMap!16))) (_2!1205 (tuple2!2389 lt!56918 (zeroValue!2497 newMap!16)))))))

(assert (=> d!31683 (= (+!144 lt!56907 (tuple2!2389 lt!56918 (zeroValue!2497 newMap!16))) lt!57464)))

(declare-fun b!111428 () Bool)

(declare-fun res!54998 () Bool)

(assert (=> b!111428 (=> (not res!54998) (not e!72426))))

(assert (=> b!111428 (= res!54998 (= (getValueByKey!159 (toList!789 lt!57464) (_1!1205 (tuple2!2389 lt!56918 (zeroValue!2497 newMap!16)))) (Some!164 (_2!1205 (tuple2!2389 lt!56918 (zeroValue!2497 newMap!16))))))))

(declare-fun b!111429 () Bool)

(assert (=> b!111429 (= e!72426 (contains!827 (toList!789 lt!57464) (tuple2!2389 lt!56918 (zeroValue!2497 newMap!16))))))

(assert (= (and d!31683 res!54999) b!111428))

(assert (= (and b!111428 res!54998) b!111429))

(declare-fun m!126963 () Bool)

(assert (=> d!31683 m!126963))

(declare-fun m!126965 () Bool)

(assert (=> d!31683 m!126965))

(declare-fun m!126967 () Bool)

(assert (=> d!31683 m!126967))

(declare-fun m!126969 () Bool)

(assert (=> d!31683 m!126969))

(declare-fun m!126971 () Bool)

(assert (=> b!111428 m!126971))

(declare-fun m!126973 () Bool)

(assert (=> b!111429 m!126973))

(assert (=> b!110290 d!31683))

(assert (=> b!110290 d!31205))

(declare-fun d!31685 () Bool)

(assert (=> d!31685 (contains!824 (+!144 lt!56909 (tuple2!2389 lt!56916 (zeroValue!2497 newMap!16))) lt!56911)))

(declare-fun lt!57465 () Unit!3382)

(assert (=> d!31685 (= lt!57465 (choose!698 lt!56909 lt!56916 (zeroValue!2497 newMap!16) lt!56911))))

(assert (=> d!31685 (contains!824 lt!56909 lt!56911)))

(assert (=> d!31685 (= (addStillContains!76 lt!56909 lt!56916 (zeroValue!2497 newMap!16) lt!56911) lt!57465)))

(declare-fun bs!4597 () Bool)

(assert (= bs!4597 d!31685))

(assert (=> bs!4597 m!124937))

(assert (=> bs!4597 m!124937))

(assert (=> bs!4597 m!124939))

(declare-fun m!126975 () Bool)

(assert (=> bs!4597 m!126975))

(declare-fun m!126977 () Bool)

(assert (=> bs!4597 m!126977))

(assert (=> b!110290 d!31685))

(declare-fun d!31687 () Bool)

(declare-fun res!55000 () Bool)

(declare-fun e!72427 () Bool)

(assert (=> d!31687 (=> res!55000 e!72427)))

(assert (=> d!31687 (= res!55000 (and ((_ is Cons!1605) (toList!789 (+!144 lt!56546 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))) (= (_1!1205 (h!2204 (toList!789 (+!144 lt!56546 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))) lt!56548)))))

(assert (=> d!31687 (= (containsKey!162 (toList!789 (+!144 lt!56546 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))) lt!56548) e!72427)))

(declare-fun b!111430 () Bool)

(declare-fun e!72428 () Bool)

(assert (=> b!111430 (= e!72427 e!72428)))

(declare-fun res!55001 () Bool)

(assert (=> b!111430 (=> (not res!55001) (not e!72428))))

(assert (=> b!111430 (= res!55001 (and (or (not ((_ is Cons!1605) (toList!789 (+!144 lt!56546 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))) (bvsle (_1!1205 (h!2204 (toList!789 (+!144 lt!56546 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))) lt!56548)) ((_ is Cons!1605) (toList!789 (+!144 lt!56546 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))) (bvslt (_1!1205 (h!2204 (toList!789 (+!144 lt!56546 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))))))) lt!56548)))))

(declare-fun b!111431 () Bool)

(assert (=> b!111431 (= e!72428 (containsKey!162 (t!5738 (toList!789 (+!144 lt!56546 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))))) lt!56548))))

(assert (= (and d!31687 (not res!55000)) b!111430))

(assert (= (and b!111430 res!55001) b!111431))

(declare-fun m!126979 () Bool)

(assert (=> b!111431 m!126979))

(assert (=> d!30951 d!31687))

(declare-fun b!111435 () Bool)

(declare-fun e!72430 () Option!165)

(assert (=> b!111435 (= e!72430 None!163)))

(declare-fun b!111432 () Bool)

(declare-fun e!72429 () Option!165)

(assert (=> b!111432 (= e!72429 (Some!164 (_2!1205 (h!2204 (t!5738 lt!56482)))))))

(declare-fun b!111434 () Bool)

(assert (=> b!111434 (= e!72430 (getValueByKey!159 (t!5738 (t!5738 lt!56482)) (_1!1205 lt!56363)))))

(declare-fun d!31689 () Bool)

(declare-fun c!19886 () Bool)

(assert (=> d!31689 (= c!19886 (and ((_ is Cons!1605) (t!5738 lt!56482)) (= (_1!1205 (h!2204 (t!5738 lt!56482))) (_1!1205 lt!56363))))))

(assert (=> d!31689 (= (getValueByKey!159 (t!5738 lt!56482) (_1!1205 lt!56363)) e!72429)))

(declare-fun b!111433 () Bool)

(assert (=> b!111433 (= e!72429 e!72430)))

(declare-fun c!19887 () Bool)

(assert (=> b!111433 (= c!19887 (and ((_ is Cons!1605) (t!5738 lt!56482)) (not (= (_1!1205 (h!2204 (t!5738 lt!56482))) (_1!1205 lt!56363)))))))

(assert (= (and d!31689 c!19886) b!111432))

(assert (= (and d!31689 (not c!19886)) b!111433))

(assert (= (and b!111433 c!19887) b!111434))

(assert (= (and b!111433 (not c!19887)) b!111435))

(declare-fun m!126981 () Bool)

(assert (=> b!111434 m!126981))

(assert (=> b!110351 d!31689))

(declare-fun d!31691 () Bool)

(declare-fun e!72431 () Bool)

(assert (=> d!31691 e!72431))

(declare-fun res!55003 () Bool)

(assert (=> d!31691 (=> (not res!55003) (not e!72431))))

(declare-fun lt!57469 () ListLongMap!1547)

(assert (=> d!31691 (= res!55003 (contains!824 lt!57469 (_1!1205 (ite (or c!19511 c!19509) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 newMap!16)) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16))))))))

(declare-fun lt!57468 () List!1609)

(assert (=> d!31691 (= lt!57469 (ListLongMap!1548 lt!57468))))

(declare-fun lt!57467 () Unit!3382)

(declare-fun lt!57466 () Unit!3382)

(assert (=> d!31691 (= lt!57467 lt!57466)))

(assert (=> d!31691 (= (getValueByKey!159 lt!57468 (_1!1205 (ite (or c!19511 c!19509) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 newMap!16)) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16))))) (Some!164 (_2!1205 (ite (or c!19511 c!19509) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 newMap!16)) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16))))))))

(assert (=> d!31691 (= lt!57466 (lemmaContainsTupThenGetReturnValue!75 lt!57468 (_1!1205 (ite (or c!19511 c!19509) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 newMap!16)) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16)))) (_2!1205 (ite (or c!19511 c!19509) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 newMap!16)) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16))))))))

(assert (=> d!31691 (= lt!57468 (insertStrictlySorted!78 (toList!789 (ite c!19511 call!11737 (ite c!19509 call!11740 call!11736))) (_1!1205 (ite (or c!19511 c!19509) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 newMap!16)) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16)))) (_2!1205 (ite (or c!19511 c!19509) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 newMap!16)) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16))))))))

(assert (=> d!31691 (= (+!144 (ite c!19511 call!11737 (ite c!19509 call!11740 call!11736)) (ite (or c!19511 c!19509) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 newMap!16)) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16)))) lt!57469)))

(declare-fun b!111436 () Bool)

(declare-fun res!55002 () Bool)

(assert (=> b!111436 (=> (not res!55002) (not e!72431))))

(assert (=> b!111436 (= res!55002 (= (getValueByKey!159 (toList!789 lt!57469) (_1!1205 (ite (or c!19511 c!19509) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 newMap!16)) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16))))) (Some!164 (_2!1205 (ite (or c!19511 c!19509) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 newMap!16)) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16)))))))))

(declare-fun b!111437 () Bool)

(assert (=> b!111437 (= e!72431 (contains!827 (toList!789 lt!57469) (ite (or c!19511 c!19509) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 newMap!16)) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16)))))))

(assert (= (and d!31691 res!55003) b!111436))

(assert (= (and b!111436 res!55002) b!111437))

(declare-fun m!126983 () Bool)

(assert (=> d!31691 m!126983))

(declare-fun m!126985 () Bool)

(assert (=> d!31691 m!126985))

(declare-fun m!126987 () Bool)

(assert (=> d!31691 m!126987))

(declare-fun m!126989 () Bool)

(assert (=> d!31691 m!126989))

(declare-fun m!126991 () Bool)

(assert (=> b!111436 m!126991))

(declare-fun m!126993 () Bool)

(assert (=> b!111437 m!126993))

(assert (=> bm!11736 d!31691))

(assert (=> bm!11778 d!31415))

(assert (=> d!30867 d!30869))

(assert (=> d!30867 d!30865))

(declare-fun d!31693 () Bool)

(assert (=> d!31693 (not (contains!824 (+!144 lt!56475 (tuple2!2389 lt!56474 lt!56478)) lt!56473))))

(assert (=> d!31693 true))

(declare-fun _$36!325 () Unit!3382)

(assert (=> d!31693 (= (choose!691 lt!56475 lt!56474 lt!56478 lt!56473) _$36!325)))

(declare-fun bs!4598 () Bool)

(assert (= bs!4598 d!31693))

(assert (=> bs!4598 m!124287))

(assert (=> bs!4598 m!124287))

(assert (=> bs!4598 m!124289))

(assert (=> d!30867 d!31693))

(declare-fun d!31695 () Bool)

(declare-fun e!72433 () Bool)

(assert (=> d!31695 e!72433))

(declare-fun res!55004 () Bool)

(assert (=> d!31695 (=> res!55004 e!72433)))

(declare-fun lt!57472 () Bool)

(assert (=> d!31695 (= res!55004 (not lt!57472))))

(declare-fun lt!57473 () Bool)

(assert (=> d!31695 (= lt!57472 lt!57473)))

(declare-fun lt!57470 () Unit!3382)

(declare-fun e!72432 () Unit!3382)

(assert (=> d!31695 (= lt!57470 e!72432)))

(declare-fun c!19888 () Bool)

(assert (=> d!31695 (= c!19888 lt!57473)))

(assert (=> d!31695 (= lt!57473 (containsKey!162 (toList!789 lt!56475) lt!56473))))

(assert (=> d!31695 (= (contains!824 lt!56475 lt!56473) lt!57472)))

(declare-fun b!111439 () Bool)

(declare-fun lt!57471 () Unit!3382)

(assert (=> b!111439 (= e!72432 lt!57471)))

(assert (=> b!111439 (= lt!57471 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 lt!56475) lt!56473))))

(assert (=> b!111439 (isDefined!111 (getValueByKey!159 (toList!789 lt!56475) lt!56473))))

(declare-fun b!111440 () Bool)

(declare-fun Unit!3451 () Unit!3382)

(assert (=> b!111440 (= e!72432 Unit!3451)))

(declare-fun b!111441 () Bool)

(assert (=> b!111441 (= e!72433 (isDefined!111 (getValueByKey!159 (toList!789 lt!56475) lt!56473)))))

(assert (= (and d!31695 c!19888) b!111439))

(assert (= (and d!31695 (not c!19888)) b!111440))

(assert (= (and d!31695 (not res!55004)) b!111441))

(declare-fun m!126995 () Bool)

(assert (=> d!31695 m!126995))

(declare-fun m!126997 () Bool)

(assert (=> b!111439 m!126997))

(declare-fun m!126999 () Bool)

(assert (=> b!111439 m!126999))

(assert (=> b!111439 m!126999))

(declare-fun m!127001 () Bool)

(assert (=> b!111439 m!127001))

(assert (=> b!111441 m!126999))

(assert (=> b!111441 m!126999))

(assert (=> b!111441 m!127001))

(assert (=> d!30867 d!31695))

(assert (=> b!110321 d!31097))

(assert (=> b!110321 d!31099))

(assert (=> b!110193 d!31091))

(assert (=> b!110193 d!31011))

(declare-fun b!111445 () Bool)

(declare-fun e!72435 () Option!165)

(assert (=> b!111445 (= e!72435 None!163)))

(declare-fun b!111442 () Bool)

(declare-fun e!72434 () Option!165)

(assert (=> b!111442 (= e!72434 (Some!164 (_2!1205 (h!2204 (t!5738 (toList!789 lt!56483))))))))

(declare-fun b!111444 () Bool)

(assert (=> b!111444 (= e!72435 (getValueByKey!159 (t!5738 (t!5738 (toList!789 lt!56483))) (_1!1205 lt!56363)))))

(declare-fun d!31697 () Bool)

(declare-fun c!19889 () Bool)

(assert (=> d!31697 (= c!19889 (and ((_ is Cons!1605) (t!5738 (toList!789 lt!56483))) (= (_1!1205 (h!2204 (t!5738 (toList!789 lt!56483)))) (_1!1205 lt!56363))))))

(assert (=> d!31697 (= (getValueByKey!159 (t!5738 (toList!789 lt!56483)) (_1!1205 lt!56363)) e!72434)))

(declare-fun b!111443 () Bool)

(assert (=> b!111443 (= e!72434 e!72435)))

(declare-fun c!19890 () Bool)

(assert (=> b!111443 (= c!19890 (and ((_ is Cons!1605) (t!5738 (toList!789 lt!56483))) (not (= (_1!1205 (h!2204 (t!5738 (toList!789 lt!56483)))) (_1!1205 lt!56363)))))))

(assert (= (and d!31697 c!19889) b!111442))

(assert (= (and d!31697 (not c!19889)) b!111443))

(assert (= (and b!111443 c!19890) b!111444))

(assert (= (and b!111443 (not c!19890)) b!111445))

(declare-fun m!127003 () Bool)

(assert (=> b!111444 m!127003))

(assert (=> b!110429 d!31697))

(declare-fun d!31699 () Bool)

(declare-fun e!72437 () Bool)

(assert (=> d!31699 e!72437))

(declare-fun res!55005 () Bool)

(assert (=> d!31699 (=> res!55005 e!72437)))

(declare-fun lt!57476 () Bool)

(assert (=> d!31699 (= res!55005 (not lt!57476))))

(declare-fun lt!57477 () Bool)

(assert (=> d!31699 (= lt!57476 lt!57477)))

(declare-fun lt!57474 () Unit!3382)

(declare-fun e!72436 () Unit!3382)

(assert (=> d!31699 (= lt!57474 e!72436)))

(declare-fun c!19891 () Bool)

(assert (=> d!31699 (= c!19891 lt!57477)))

(assert (=> d!31699 (= lt!57477 (containsKey!162 (toList!789 (+!144 lt!56816 (tuple2!2389 lt!56815 lt!56819))) lt!56814))))

(assert (=> d!31699 (= (contains!824 (+!144 lt!56816 (tuple2!2389 lt!56815 lt!56819)) lt!56814) lt!57476)))

(declare-fun b!111446 () Bool)

(declare-fun lt!57475 () Unit!3382)

(assert (=> b!111446 (= e!72436 lt!57475)))

(assert (=> b!111446 (= lt!57475 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 (+!144 lt!56816 (tuple2!2389 lt!56815 lt!56819))) lt!56814))))

(assert (=> b!111446 (isDefined!111 (getValueByKey!159 (toList!789 (+!144 lt!56816 (tuple2!2389 lt!56815 lt!56819))) lt!56814))))

(declare-fun b!111447 () Bool)

(declare-fun Unit!3452 () Unit!3382)

(assert (=> b!111447 (= e!72436 Unit!3452)))

(declare-fun b!111448 () Bool)

(assert (=> b!111448 (= e!72437 (isDefined!111 (getValueByKey!159 (toList!789 (+!144 lt!56816 (tuple2!2389 lt!56815 lt!56819))) lt!56814)))))

(assert (= (and d!31699 c!19891) b!111446))

(assert (= (and d!31699 (not c!19891)) b!111447))

(assert (= (and d!31699 (not res!55005)) b!111448))

(declare-fun m!127005 () Bool)

(assert (=> d!31699 m!127005))

(declare-fun m!127007 () Bool)

(assert (=> b!111446 m!127007))

(declare-fun m!127009 () Bool)

(assert (=> b!111446 m!127009))

(assert (=> b!111446 m!127009))

(declare-fun m!127011 () Bool)

(assert (=> b!111446 m!127011))

(assert (=> b!111448 m!127009))

(assert (=> b!111448 m!127009))

(assert (=> b!111448 m!127011))

(assert (=> b!110160 d!31699))

(declare-fun d!31701 () Bool)

(assert (=> d!31701 (not (contains!824 (+!144 lt!56816 (tuple2!2389 lt!56815 lt!56819)) lt!56814))))

(declare-fun lt!57478 () Unit!3382)

(assert (=> d!31701 (= lt!57478 (choose!691 lt!56816 lt!56815 lt!56819 lt!56814))))

(declare-fun e!72438 () Bool)

(assert (=> d!31701 e!72438))

(declare-fun res!55006 () Bool)

(assert (=> d!31701 (=> (not res!55006) (not e!72438))))

(assert (=> d!31701 (= res!55006 (not (contains!824 lt!56816 lt!56814)))))

(assert (=> d!31701 (= (addStillNotContains!50 lt!56816 lt!56815 lt!56819 lt!56814) lt!57478)))

(declare-fun b!111449 () Bool)

(assert (=> b!111449 (= e!72438 (not (= lt!56815 lt!56814)))))

(assert (= (and d!31701 res!55006) b!111449))

(assert (=> d!31701 m!124713))

(assert (=> d!31701 m!124713))

(assert (=> d!31701 m!124715))

(declare-fun m!127013 () Bool)

(assert (=> d!31701 m!127013))

(declare-fun m!127015 () Bool)

(assert (=> d!31701 m!127015))

(assert (=> b!110160 d!31701))

(declare-fun d!31703 () Bool)

(declare-fun e!72439 () Bool)

(assert (=> d!31703 e!72439))

(declare-fun res!55008 () Bool)

(assert (=> d!31703 (=> (not res!55008) (not e!72439))))

(declare-fun lt!57482 () ListLongMap!1547)

(assert (=> d!31703 (= res!55008 (contains!824 lt!57482 (_1!1205 (tuple2!2389 lt!56815 lt!56819))))))

(declare-fun lt!57481 () List!1609)

(assert (=> d!31703 (= lt!57482 (ListLongMap!1548 lt!57481))))

(declare-fun lt!57480 () Unit!3382)

(declare-fun lt!57479 () Unit!3382)

(assert (=> d!31703 (= lt!57480 lt!57479)))

(assert (=> d!31703 (= (getValueByKey!159 lt!57481 (_1!1205 (tuple2!2389 lt!56815 lt!56819))) (Some!164 (_2!1205 (tuple2!2389 lt!56815 lt!56819))))))

(assert (=> d!31703 (= lt!57479 (lemmaContainsTupThenGetReturnValue!75 lt!57481 (_1!1205 (tuple2!2389 lt!56815 lt!56819)) (_2!1205 (tuple2!2389 lt!56815 lt!56819))))))

(assert (=> d!31703 (= lt!57481 (insertStrictlySorted!78 (toList!789 lt!56816) (_1!1205 (tuple2!2389 lt!56815 lt!56819)) (_2!1205 (tuple2!2389 lt!56815 lt!56819))))))

(assert (=> d!31703 (= (+!144 lt!56816 (tuple2!2389 lt!56815 lt!56819)) lt!57482)))

(declare-fun b!111450 () Bool)

(declare-fun res!55007 () Bool)

(assert (=> b!111450 (=> (not res!55007) (not e!72439))))

(assert (=> b!111450 (= res!55007 (= (getValueByKey!159 (toList!789 lt!57482) (_1!1205 (tuple2!2389 lt!56815 lt!56819))) (Some!164 (_2!1205 (tuple2!2389 lt!56815 lt!56819)))))))

(declare-fun b!111451 () Bool)

(assert (=> b!111451 (= e!72439 (contains!827 (toList!789 lt!57482) (tuple2!2389 lt!56815 lt!56819)))))

(assert (= (and d!31703 res!55008) b!111450))

(assert (= (and b!111450 res!55007) b!111451))

(declare-fun m!127017 () Bool)

(assert (=> d!31703 m!127017))

(declare-fun m!127019 () Bool)

(assert (=> d!31703 m!127019))

(declare-fun m!127021 () Bool)

(assert (=> d!31703 m!127021))

(declare-fun m!127023 () Bool)

(assert (=> d!31703 m!127023))

(declare-fun m!127025 () Bool)

(assert (=> b!111450 m!127025))

(declare-fun m!127027 () Bool)

(assert (=> b!111451 m!127027))

(assert (=> b!110160 d!31703))

(assert (=> b!110160 d!31491))

(declare-fun d!31705 () Bool)

(declare-fun e!72440 () Bool)

(assert (=> d!31705 e!72440))

(declare-fun res!55010 () Bool)

(assert (=> d!31705 (=> (not res!55010) (not e!72440))))

(declare-fun lt!57486 () ListLongMap!1547)

(assert (=> d!31705 (= res!55010 (contains!824 lt!57486 (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!57485 () List!1609)

(assert (=> d!31705 (= lt!57486 (ListLongMap!1548 lt!57485))))

(declare-fun lt!57484 () Unit!3382)

(declare-fun lt!57483 () Unit!3382)

(assert (=> d!31705 (= lt!57484 lt!57483)))

(assert (=> d!31705 (= (getValueByKey!159 lt!57485 (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!164 (_2!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!31705 (= lt!57483 (lemmaContainsTupThenGetReturnValue!75 lt!57485 (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!31705 (= lt!57485 (insertStrictlySorted!78 (toList!789 call!11735) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!31705 (= (+!144 call!11735 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!57486)))

(declare-fun b!111452 () Bool)

(declare-fun res!55009 () Bool)

(assert (=> b!111452 (=> (not res!55009) (not e!72440))))

(assert (=> b!111452 (= res!55009 (= (getValueByKey!159 (toList!789 lt!57486) (_1!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!164 (_2!1205 (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!111453 () Bool)

(assert (=> b!111453 (= e!72440 (contains!827 (toList!789 lt!57486) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1353 (select (arr!2073 (_values!2609 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!390 (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!31705 res!55010) b!111452))

(assert (= (and b!111452 res!55009) b!111453))

(declare-fun m!127029 () Bool)

(assert (=> d!31705 m!127029))

(declare-fun m!127031 () Bool)

(assert (=> d!31705 m!127031))

(declare-fun m!127033 () Bool)

(assert (=> d!31705 m!127033))

(declare-fun m!127035 () Bool)

(assert (=> d!31705 m!127035))

(declare-fun m!127037 () Bool)

(assert (=> b!111452 m!127037))

(declare-fun m!127039 () Bool)

(assert (=> b!111453 m!127039))

(assert (=> b!110160 d!31705))

(declare-fun d!31707 () Bool)

(declare-fun res!55011 () Bool)

(declare-fun e!72441 () Bool)

(assert (=> d!31707 (=> res!55011 e!72441)))

(assert (=> d!31707 (= res!55011 (= (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(assert (=> d!31707 (= (arrayContainsKey!0 (_keys!4340 (v!2930 (underlying!370 thiss!992))) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!72441)))

(declare-fun b!111454 () Bool)

(declare-fun e!72442 () Bool)

(assert (=> b!111454 (= e!72441 e!72442)))

(declare-fun res!55012 () Bool)

(assert (=> b!111454 (=> (not res!55012) (not e!72442))))

(assert (=> b!111454 (= res!55012 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2329 (_keys!4340 (v!2930 (underlying!370 thiss!992))))))))

(declare-fun b!111455 () Bool)

(assert (=> b!111455 (= e!72442 (arrayContainsKey!0 (_keys!4340 (v!2930 (underlying!370 thiss!992))) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!31707 (not res!55011)) b!111454))

(assert (= (and b!111454 res!55012) b!111455))

(assert (=> d!31707 m!126311))

(assert (=> b!111455 m!124087))

(declare-fun m!127041 () Bool)

(assert (=> b!111455 m!127041))

(assert (=> b!110285 d!31707))

(assert (=> d!30929 d!30905))

(assert (=> d!30929 d!30907))

(declare-fun d!31709 () Bool)

(assert (=> d!31709 (isDefined!111 (getValueByKey!159 (toList!789 lt!56367) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(assert (=> d!31709 true))

(declare-fun _$12!359 () Unit!3382)

(assert (=> d!31709 (= (choose!696 (toList!789 lt!56367) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) _$12!359)))

(declare-fun bs!4599 () Bool)

(assert (= bs!4599 d!31709))

(assert (=> bs!4599 m!124087))

(assert (=> bs!4599 m!124385))

(assert (=> bs!4599 m!124385))

(assert (=> bs!4599 m!124387))

(assert (=> d!30929 d!31709))

(declare-fun d!31711 () Bool)

(declare-fun res!55013 () Bool)

(declare-fun e!72443 () Bool)

(assert (=> d!31711 (=> res!55013 e!72443)))

(assert (=> d!31711 (= res!55013 (or ((_ is Nil!1606) (toList!789 lt!56367)) ((_ is Nil!1606) (t!5738 (toList!789 lt!56367)))))))

(assert (=> d!31711 (= (isStrictlySorted!298 (toList!789 lt!56367)) e!72443)))

(declare-fun b!111456 () Bool)

(declare-fun e!72444 () Bool)

(assert (=> b!111456 (= e!72443 e!72444)))

(declare-fun res!55014 () Bool)

(assert (=> b!111456 (=> (not res!55014) (not e!72444))))

(assert (=> b!111456 (= res!55014 (bvslt (_1!1205 (h!2204 (toList!789 lt!56367))) (_1!1205 (h!2204 (t!5738 (toList!789 lt!56367))))))))

(declare-fun b!111457 () Bool)

(assert (=> b!111457 (= e!72444 (isStrictlySorted!298 (t!5738 (toList!789 lt!56367))))))

(assert (= (and d!31711 (not res!55013)) b!111456))

(assert (= (and b!111456 res!55014) b!111457))

(declare-fun m!127043 () Bool)

(assert (=> b!111457 m!127043))

(assert (=> d!30929 d!31711))

(assert (=> b!110302 d!31059))

(assert (=> b!110180 d!31059))

(declare-fun b!111459 () Bool)

(declare-fun e!72448 () Bool)

(declare-fun e!72447 () Bool)

(assert (=> b!111459 (= e!72448 e!72447)))

(declare-fun c!19892 () Bool)

(assert (=> b!111459 (= c!19892 (validKeyInArray!0 (select (arr!2072 (_keys!4340 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun call!11888 () Bool)

(declare-fun bm!11885 () Bool)

(assert (=> bm!11885 (= call!11888 (arrayNoDuplicates!0 (_keys!4340 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!19892 (Cons!1606 (select (arr!2072 (_keys!4340 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!19487 (Cons!1606 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000) Nil!1607) Nil!1607)) (ite c!19487 (Cons!1606 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000) Nil!1607) Nil!1607))))))

(declare-fun b!111460 () Bool)

(assert (=> b!111460 (= e!72447 call!11888)))

(declare-fun b!111461 () Bool)

(assert (=> b!111461 (= e!72447 call!11888)))

(declare-fun b!111462 () Bool)

(declare-fun e!72446 () Bool)

(assert (=> b!111462 (= e!72446 (contains!828 (ite c!19487 (Cons!1606 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000) Nil!1607) Nil!1607) (select (arr!2072 (_keys!4340 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun d!31713 () Bool)

(declare-fun res!55015 () Bool)

(declare-fun e!72445 () Bool)

(assert (=> d!31713 (=> res!55015 e!72445)))

(assert (=> d!31713 (= res!55015 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2329 (_keys!4340 newMap!16))))))

(assert (=> d!31713 (= (arrayNoDuplicates!0 (_keys!4340 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!19487 (Cons!1606 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000) Nil!1607) Nil!1607)) e!72445)))

(declare-fun b!111458 () Bool)

(assert (=> b!111458 (= e!72445 e!72448)))

(declare-fun res!55016 () Bool)

(assert (=> b!111458 (=> (not res!55016) (not e!72448))))

(assert (=> b!111458 (= res!55016 (not e!72446))))

(declare-fun res!55017 () Bool)

(assert (=> b!111458 (=> (not res!55017) (not e!72446))))

(assert (=> b!111458 (= res!55017 (validKeyInArray!0 (select (arr!2072 (_keys!4340 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!31713 (not res!55015)) b!111458))

(assert (= (and b!111458 res!55017) b!111462))

(assert (= (and b!111458 res!55016) b!111459))

(assert (= (and b!111459 c!19892) b!111461))

(assert (= (and b!111459 (not c!19892)) b!111460))

(assert (= (or b!111461 b!111460) bm!11885))

(assert (=> b!111459 m!126043))

(assert (=> b!111459 m!126043))

(assert (=> b!111459 m!126045))

(assert (=> bm!11885 m!126043))

(declare-fun m!127045 () Bool)

(assert (=> bm!11885 m!127045))

(assert (=> b!111462 m!126043))

(assert (=> b!111462 m!126043))

(declare-fun m!127047 () Bool)

(assert (=> b!111462 m!127047))

(assert (=> b!111458 m!126043))

(assert (=> b!111458 m!126043))

(assert (=> b!111458 m!126045))

(assert (=> bm!11731 d!31713))

(declare-fun d!31715 () Bool)

(assert (=> d!31715 (isDefined!111 (getValueByKey!159 (toList!789 lt!56479) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!57487 () Unit!3382)

(assert (=> d!31715 (= lt!57487 (choose!696 (toList!789 lt!56479) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!72449 () Bool)

(assert (=> d!31715 e!72449))

(declare-fun res!55018 () Bool)

(assert (=> d!31715 (=> (not res!55018) (not e!72449))))

(assert (=> d!31715 (= res!55018 (isStrictlySorted!298 (toList!789 lt!56479)))))

(assert (=> d!31715 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 lt!56479) #b1000000000000000000000000000000000000000000000000000000000000000) lt!57487)))

(declare-fun b!111463 () Bool)

(assert (=> b!111463 (= e!72449 (containsKey!162 (toList!789 lt!56479) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!31715 res!55018) b!111463))

(assert (=> d!31715 m!125169))

(assert (=> d!31715 m!125169))

(assert (=> d!31715 m!125171))

(declare-fun m!127049 () Bool)

(assert (=> d!31715 m!127049))

(assert (=> d!31715 m!125687))

(assert (=> b!111463 m!125165))

(assert (=> b!110413 d!31715))

(assert (=> b!110413 d!31517))

(assert (=> b!110413 d!31519))

(declare-fun d!31717 () Bool)

(assert (=> d!31717 (isDefined!111 (getValueByKey!159 (toList!789 (+!144 lt!56475 (tuple2!2389 lt!56474 lt!56478))) lt!56473))))

(declare-fun lt!57488 () Unit!3382)

(assert (=> d!31717 (= lt!57488 (choose!696 (toList!789 (+!144 lt!56475 (tuple2!2389 lt!56474 lt!56478))) lt!56473))))

(declare-fun e!72450 () Bool)

(assert (=> d!31717 e!72450))

(declare-fun res!55019 () Bool)

(assert (=> d!31717 (=> (not res!55019) (not e!72450))))

(assert (=> d!31717 (= res!55019 (isStrictlySorted!298 (toList!789 (+!144 lt!56475 (tuple2!2389 lt!56474 lt!56478)))))))

(assert (=> d!31717 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 (+!144 lt!56475 (tuple2!2389 lt!56474 lt!56478))) lt!56473) lt!57488)))

(declare-fun b!111464 () Bool)

(assert (=> b!111464 (= e!72450 (containsKey!162 (toList!789 (+!144 lt!56475 (tuple2!2389 lt!56474 lt!56478))) lt!56473))))

(assert (= (and d!31717 res!55019) b!111464))

(assert (=> d!31717 m!124573))

(assert (=> d!31717 m!124573))

(assert (=> d!31717 m!124575))

(declare-fun m!127051 () Bool)

(assert (=> d!31717 m!127051))

(declare-fun m!127053 () Bool)

(assert (=> d!31717 m!127053))

(assert (=> b!111464 m!124569))

(assert (=> b!110073 d!31717))

(assert (=> b!110073 d!31601))

(assert (=> b!110073 d!31603))

(assert (=> b!110253 d!30879))

(declare-fun d!31719 () Bool)

(declare-fun e!72452 () Bool)

(assert (=> d!31719 e!72452))

(declare-fun res!55020 () Bool)

(assert (=> d!31719 (=> res!55020 e!72452)))

(declare-fun lt!57491 () Bool)

(assert (=> d!31719 (= res!55020 (not lt!57491))))

(declare-fun lt!57492 () Bool)

(assert (=> d!31719 (= lt!57491 lt!57492)))

(declare-fun lt!57489 () Unit!3382)

(declare-fun e!72451 () Unit!3382)

(assert (=> d!31719 (= lt!57489 e!72451)))

(declare-fun c!19893 () Bool)

(assert (=> d!31719 (= c!19893 lt!57492)))

(assert (=> d!31719 (= lt!57492 (containsKey!162 (toList!789 lt!56820) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> d!31719 (= (contains!824 lt!56820 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) lt!57491)))

(declare-fun b!111465 () Bool)

(declare-fun lt!57490 () Unit!3382)

(assert (=> b!111465 (= e!72451 lt!57490)))

(assert (=> b!111465 (= lt!57490 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 lt!56820) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!111465 (isDefined!111 (getValueByKey!159 (toList!789 lt!56820) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!111466 () Bool)

(declare-fun Unit!3453 () Unit!3382)

(assert (=> b!111466 (= e!72451 Unit!3453)))

(declare-fun b!111467 () Bool)

(assert (=> b!111467 (= e!72452 (isDefined!111 (getValueByKey!159 (toList!789 lt!56820) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(assert (= (and d!31719 c!19893) b!111465))

(assert (= (and d!31719 (not c!19893)) b!111466))

(assert (= (and d!31719 (not res!55020)) b!111467))

(assert (=> d!31719 m!124693))

(declare-fun m!127055 () Bool)

(assert (=> d!31719 m!127055))

(assert (=> b!111465 m!124693))

(declare-fun m!127057 () Bool)

(assert (=> b!111465 m!127057))

(assert (=> b!111465 m!124693))

(assert (=> b!111465 m!126389))

(assert (=> b!111465 m!126389))

(declare-fun m!127059 () Bool)

(assert (=> b!111465 m!127059))

(assert (=> b!111467 m!124693))

(assert (=> b!111467 m!126389))

(assert (=> b!111467 m!126389))

(assert (=> b!111467 m!127059))

(assert (=> b!110159 d!31719))

(declare-fun b!111469 () Bool)

(declare-fun e!72456 () Bool)

(declare-fun e!72455 () Bool)

(assert (=> b!111469 (= e!72456 e!72455)))

(declare-fun c!19894 () Bool)

(assert (=> b!111469 (= c!19894 (validKeyInArray!0 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun bm!11886 () Bool)

(declare-fun call!11889 () Bool)

(assert (=> bm!11886 (= call!11889 (arrayNoDuplicates!0 (_keys!4340 (v!2930 (underlying!370 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!19894 (Cons!1606 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!19558 (Cons!1606 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!19470 (Cons!1606 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) Nil!1607) Nil!1607)) (ite c!19470 (Cons!1606 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) Nil!1607) Nil!1607))) (ite c!19558 (Cons!1606 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!19470 (Cons!1606 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) Nil!1607) Nil!1607)) (ite c!19470 (Cons!1606 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) Nil!1607) Nil!1607)))))))

(declare-fun b!111470 () Bool)

(assert (=> b!111470 (= e!72455 call!11889)))

(declare-fun b!111471 () Bool)

(assert (=> b!111471 (= e!72455 call!11889)))

(declare-fun e!72454 () Bool)

(declare-fun b!111472 () Bool)

(assert (=> b!111472 (= e!72454 (contains!828 (ite c!19558 (Cons!1606 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!19470 (Cons!1606 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) Nil!1607) Nil!1607)) (ite c!19470 (Cons!1606 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) Nil!1607) Nil!1607)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun d!31721 () Bool)

(declare-fun res!55021 () Bool)

(declare-fun e!72453 () Bool)

(assert (=> d!31721 (=> res!55021 e!72453)))

(assert (=> d!31721 (= res!55021 (bvsge (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2329 (_keys!4340 (v!2930 (underlying!370 thiss!992))))))))

(assert (=> d!31721 (= (arrayNoDuplicates!0 (_keys!4340 (v!2930 (underlying!370 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!19558 (Cons!1606 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!19470 (Cons!1606 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) Nil!1607) Nil!1607)) (ite c!19470 (Cons!1606 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) Nil!1607) Nil!1607))) e!72453)))

(declare-fun b!111468 () Bool)

(assert (=> b!111468 (= e!72453 e!72456)))

(declare-fun res!55022 () Bool)

(assert (=> b!111468 (=> (not res!55022) (not e!72456))))

(assert (=> b!111468 (= res!55022 (not e!72454))))

(declare-fun res!55023 () Bool)

(assert (=> b!111468 (=> (not res!55023) (not e!72454))))

(assert (=> b!111468 (= res!55023 (validKeyInArray!0 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (= (and d!31721 (not res!55021)) b!111468))

(assert (= (and b!111468 res!55023) b!111472))

(assert (= (and b!111468 res!55022) b!111469))

(assert (= (and b!111469 c!19894) b!111471))

(assert (= (and b!111469 (not c!19894)) b!111470))

(assert (= (or b!111471 b!111470) bm!11886))

(declare-fun m!127061 () Bool)

(assert (=> b!111469 m!127061))

(assert (=> b!111469 m!127061))

(declare-fun m!127063 () Bool)

(assert (=> b!111469 m!127063))

(assert (=> bm!11886 m!127061))

(declare-fun m!127065 () Bool)

(assert (=> bm!11886 m!127065))

(assert (=> b!111472 m!127061))

(assert (=> b!111472 m!127061))

(declare-fun m!127067 () Bool)

(assert (=> b!111472 m!127067))

(assert (=> b!111468 m!127061))

(assert (=> b!111468 m!127061))

(assert (=> b!111468 m!127063))

(assert (=> bm!11768 d!31721))

(declare-fun d!31723 () Bool)

(assert (=> d!31723 (= (inRange!0 (index!3171 lt!56773) (mask!6794 newMap!16)) (and (bvsge (index!3171 lt!56773) #b00000000000000000000000000000000) (bvslt (index!3171 lt!56773) (bvadd (mask!6794 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!110080 d!31723))

(assert (=> d!30983 d!30901))

(declare-fun bm!11891 () Bool)

(declare-fun call!11894 () Bool)

(assert (=> bm!11891 (= call!11894 (arrayContainsKey!0 (_keys!4340 newMap!16) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!111489 () Bool)

(declare-fun e!72467 () Bool)

(declare-fun lt!57495 () SeekEntryResult!255)

(assert (=> b!111489 (= e!72467 ((_ is Undefined!255) lt!57495))))

(declare-fun d!31725 () Bool)

(declare-fun e!72465 () Bool)

(assert (=> d!31725 e!72465))

(declare-fun c!19899 () Bool)

(assert (=> d!31725 (= c!19899 ((_ is MissingZero!255) lt!57495))))

(assert (=> d!31725 (= lt!57495 (seekEntryOrOpen!0 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (_keys!4340 newMap!16) (mask!6794 newMap!16)))))

(assert (=> d!31725 true))

(declare-fun _$34!908 () Unit!3382)

(assert (=> d!31725 (= (choose!700 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (defaultEntry!2626 newMap!16)) _$34!908)))

(declare-fun b!111490 () Bool)

(declare-fun res!55034 () Bool)

(declare-fun e!72466 () Bool)

(assert (=> b!111490 (=> (not res!55034) (not e!72466))))

(declare-fun call!11895 () Bool)

(assert (=> b!111490 (= res!55034 call!11895)))

(assert (=> b!111490 (= e!72467 e!72466)))

(declare-fun b!111491 () Bool)

(declare-fun res!55035 () Bool)

(assert (=> b!111491 (= res!55035 (= (select (arr!2072 (_keys!4340 newMap!16)) (index!3170 lt!57495)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!72468 () Bool)

(assert (=> b!111491 (=> (not res!55035) (not e!72468))))

(declare-fun b!111492 () Bool)

(assert (=> b!111492 (= e!72468 (not call!11894))))

(declare-fun b!111493 () Bool)

(assert (=> b!111493 (= e!72465 e!72468)))

(declare-fun res!55032 () Bool)

(assert (=> b!111493 (= res!55032 call!11895)))

(assert (=> b!111493 (=> (not res!55032) (not e!72468))))

(declare-fun b!111494 () Bool)

(declare-fun res!55033 () Bool)

(assert (=> b!111494 (=> (not res!55033) (not e!72466))))

(assert (=> b!111494 (= res!55033 (= (select (arr!2072 (_keys!4340 newMap!16)) (index!3173 lt!57495)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!111495 () Bool)

(assert (=> b!111495 (= e!72465 e!72467)))

(declare-fun c!19900 () Bool)

(assert (=> b!111495 (= c!19900 ((_ is MissingVacant!255) lt!57495))))

(declare-fun bm!11892 () Bool)

(assert (=> bm!11892 (= call!11895 (inRange!0 (ite c!19899 (index!3170 lt!57495) (index!3173 lt!57495)) (mask!6794 newMap!16)))))

(declare-fun b!111496 () Bool)

(assert (=> b!111496 (= e!72466 (not call!11894))))

(assert (= (and d!31725 c!19899) b!111493))

(assert (= (and d!31725 (not c!19899)) b!111495))

(assert (= (and b!111493 res!55032) b!111491))

(assert (= (and b!111491 res!55035) b!111492))

(assert (= (and b!111495 c!19900) b!111490))

(assert (= (and b!111495 (not c!19900)) b!111489))

(assert (= (and b!111490 res!55034) b!111494))

(assert (= (and b!111494 res!55033) b!111496))

(assert (= (or b!111493 b!111490) bm!11892))

(assert (= (or b!111492 b!111496) bm!11891))

(declare-fun m!127069 () Bool)

(assert (=> b!111494 m!127069))

(declare-fun m!127071 () Bool)

(assert (=> b!111491 m!127071))

(assert (=> bm!11891 m!124087))

(assert (=> bm!11891 m!124403))

(declare-fun m!127073 () Bool)

(assert (=> bm!11892 m!127073))

(assert (=> d!31725 m!124087))

(assert (=> d!31725 m!124417))

(assert (=> d!30983 d!31725))

(assert (=> d!30983 d!31187))

(assert (=> b!110263 d!31627))

(declare-fun b!111500 () Bool)

(declare-fun e!72470 () Option!165)

(assert (=> b!111500 (= e!72470 None!163)))

(declare-fun b!111497 () Bool)

(declare-fun e!72469 () Option!165)

(assert (=> b!111497 (= e!72469 (Some!164 (_2!1205 (h!2204 (toList!789 lt!56798)))))))

(declare-fun b!111499 () Bool)

(assert (=> b!111499 (= e!72470 (getValueByKey!159 (t!5738 (toList!789 lt!56798)) (_1!1205 (ite (or c!19419 c!19417) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))))))

(declare-fun c!19901 () Bool)

(declare-fun d!31727 () Bool)

(assert (=> d!31727 (= c!19901 (and ((_ is Cons!1605) (toList!789 lt!56798)) (= (_1!1205 (h!2204 (toList!789 lt!56798))) (_1!1205 (ite (or c!19419 c!19417) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992)))))))))))

(assert (=> d!31727 (= (getValueByKey!159 (toList!789 lt!56798) (_1!1205 (ite (or c!19419 c!19417) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))) e!72469)))

(declare-fun b!111498 () Bool)

(assert (=> b!111498 (= e!72469 e!72470)))

(declare-fun c!19902 () Bool)

(assert (=> b!111498 (= c!19902 (and ((_ is Cons!1605) (toList!789 lt!56798)) (not (= (_1!1205 (h!2204 (toList!789 lt!56798))) (_1!1205 (ite (or c!19419 c!19417) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2930 (underlying!370 thiss!992)))) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2930 (underlying!370 thiss!992))))))))))))

(assert (= (and d!31727 c!19901) b!111497))

(assert (= (and d!31727 (not c!19901)) b!111498))

(assert (= (and b!111498 c!19902) b!111499))

(assert (= (and b!111498 (not c!19902)) b!111500))

(declare-fun m!127075 () Bool)

(assert (=> b!111499 m!127075))

(assert (=> b!110113 d!31727))

(declare-fun d!31729 () Bool)

(declare-fun e!72471 () Bool)

(assert (=> d!31729 e!72471))

(declare-fun res!55036 () Bool)

(assert (=> d!31729 (=> (not res!55036) (not e!72471))))

(assert (=> d!31729 (= res!55036 (and (bvsge (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) #b00000000000000000000000000000000) (bvslt (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (size!2329 lt!56724))))))

(declare-fun lt!57496 () Unit!3382)

(assert (=> d!31729 (= lt!57496 (choose!693 lt!56724 lt!56727 (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (defaultEntry!2626 newMap!16)))))

(assert (=> d!31729 (validMask!0 (mask!6794 newMap!16))))

(assert (=> d!31729 (= (lemmaValidKeyInArrayIsInListMap!109 lt!56724 lt!56727 (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (defaultEntry!2626 newMap!16)) lt!57496)))

(declare-fun b!111501 () Bool)

(assert (=> b!111501 (= e!72471 (contains!824 (getCurrentListMap!475 lt!56724 lt!56727 (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) (select (arr!2072 lt!56724) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)))))))

(assert (= (and d!31729 res!55036) b!111501))

(declare-fun m!127077 () Bool)

(assert (=> d!31729 m!127077))

(assert (=> d!31729 m!124579))

(assert (=> b!111501 m!124501))

(declare-fun m!127079 () Bool)

(assert (=> b!111501 m!127079))

(assert (=> b!111501 m!124501))

(assert (=> b!111501 m!127079))

(declare-fun m!127081 () Bool)

(assert (=> b!111501 m!127081))

(assert (=> d!30853 d!31729))

(declare-fun b!111502 () Bool)

(declare-fun e!72473 () (_ BitVec 32))

(declare-fun call!11896 () (_ BitVec 32))

(assert (=> b!111502 (= e!72473 (bvadd #b00000000000000000000000000000001 call!11896))))

(declare-fun lt!57497 () (_ BitVec 32))

(declare-fun d!31731 () Bool)

(assert (=> d!31731 (and (bvsge lt!57497 #b00000000000000000000000000000000) (bvsle lt!57497 (bvsub (size!2329 (array!4372 (store (arr!2072 (_keys!4340 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2329 (_keys!4340 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun e!72472 () (_ BitVec 32))

(assert (=> d!31731 (= lt!57497 e!72472)))

(declare-fun c!19904 () Bool)

(assert (=> d!31731 (= c!19904 (bvsge #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))))))

(assert (=> d!31731 (and (bvsle #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2329 (_keys!4340 newMap!16)) (size!2329 (array!4372 (store (arr!2072 (_keys!4340 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2329 (_keys!4340 newMap!16))))))))

(assert (=> d!31731 (= (arrayCountValidKeys!0 (array!4372 (store (arr!2072 (_keys!4340 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2329 (_keys!4340 newMap!16))) #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))) lt!57497)))

(declare-fun b!111503 () Bool)

(assert (=> b!111503 (= e!72472 #b00000000000000000000000000000000)))

(declare-fun b!111504 () Bool)

(assert (=> b!111504 (= e!72473 call!11896)))

(declare-fun bm!11893 () Bool)

(assert (=> bm!11893 (= call!11896 (arrayCountValidKeys!0 (array!4372 (store (arr!2072 (_keys!4340 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2329 (_keys!4340 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2329 (_keys!4340 newMap!16))))))

(declare-fun b!111505 () Bool)

(assert (=> b!111505 (= e!72472 e!72473)))

(declare-fun c!19903 () Bool)

(assert (=> b!111505 (= c!19903 (validKeyInArray!0 (select (arr!2072 (array!4372 (store (arr!2072 (_keys!4340 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2329 (_keys!4340 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (= (and d!31731 c!19904) b!111503))

(assert (= (and d!31731 (not c!19904)) b!111505))

(assert (= (and b!111505 c!19903) b!111502))

(assert (= (and b!111505 (not c!19903)) b!111504))

(assert (= (or b!111502 b!111504) bm!11893))

(declare-fun m!127083 () Bool)

(assert (=> bm!11893 m!127083))

(declare-fun m!127085 () Bool)

(assert (=> b!111505 m!127085))

(assert (=> b!111505 m!127085))

(declare-fun m!127087 () Bool)

(assert (=> b!111505 m!127087))

(assert (=> d!30853 d!31731))

(declare-fun d!31733 () Bool)

(declare-fun res!55037 () Bool)

(declare-fun e!72474 () Bool)

(assert (=> d!31733 (=> res!55037 e!72474)))

(assert (=> d!31733 (= res!55037 (= (select (arr!2072 lt!56732) #b00000000000000000000000000000000) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(assert (=> d!31733 (= (arrayContainsKey!0 lt!56732 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) #b00000000000000000000000000000000) e!72474)))

(declare-fun b!111506 () Bool)

(declare-fun e!72475 () Bool)

(assert (=> b!111506 (= e!72474 e!72475)))

(declare-fun res!55038 () Bool)

(assert (=> b!111506 (=> (not res!55038) (not e!72475))))

(assert (=> b!111506 (= res!55038 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2329 lt!56732)))))

(declare-fun b!111507 () Bool)

(assert (=> b!111507 (= e!72475 (arrayContainsKey!0 lt!56732 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!31733 (not res!55037)) b!111506))

(assert (= (and b!111506 res!55038) b!111507))

(declare-fun m!127089 () Bool)

(assert (=> d!31733 m!127089))

(assert (=> b!111507 m!124087))

(declare-fun m!127091 () Bool)

(assert (=> b!111507 m!127091))

(assert (=> d!30853 d!31733))

(declare-fun d!31735 () Bool)

(declare-fun e!72477 () Bool)

(assert (=> d!31735 e!72477))

(declare-fun res!55039 () Bool)

(assert (=> d!31735 (=> res!55039 e!72477)))

(declare-fun lt!57500 () Bool)

(assert (=> d!31735 (= res!55039 (not lt!57500))))

(declare-fun lt!57501 () Bool)

(assert (=> d!31735 (= lt!57500 lt!57501)))

(declare-fun lt!57498 () Unit!3382)

(declare-fun e!72476 () Unit!3382)

(assert (=> d!31735 (= lt!57498 e!72476)))

(declare-fun c!19905 () Bool)

(assert (=> d!31735 (= c!19905 lt!57501)))

(assert (=> d!31735 (= lt!57501 (containsKey!162 (toList!789 (getCurrentListMap!475 lt!56724 lt!56727 (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16))) (select (store (arr!2072 (_keys!4340 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)))))))

(assert (=> d!31735 (= (contains!824 (getCurrentListMap!475 lt!56724 lt!56727 (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) (select (store (arr!2072 (_keys!4340 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)))) lt!57500)))

(declare-fun b!111508 () Bool)

(declare-fun lt!57499 () Unit!3382)

(assert (=> b!111508 (= e!72476 lt!57499)))

(assert (=> b!111508 (= lt!57499 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 (getCurrentListMap!475 lt!56724 lt!56727 (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16))) (select (store (arr!2072 (_keys!4340 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)))))))

(assert (=> b!111508 (isDefined!111 (getValueByKey!159 (toList!789 (getCurrentListMap!475 lt!56724 lt!56727 (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16))) (select (store (arr!2072 (_keys!4340 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)))))))

(declare-fun b!111509 () Bool)

(declare-fun Unit!3454 () Unit!3382)

(assert (=> b!111509 (= e!72476 Unit!3454)))

(declare-fun b!111510 () Bool)

(assert (=> b!111510 (= e!72477 (isDefined!111 (getValueByKey!159 (toList!789 (getCurrentListMap!475 lt!56724 lt!56727 (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16))) (select (store (arr!2072 (_keys!4340 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646))))))))

(assert (= (and d!31735 c!19905) b!111508))

(assert (= (and d!31735 (not c!19905)) b!111509))

(assert (= (and d!31735 (not res!55039)) b!111510))

(assert (=> d!31735 m!124499))

(declare-fun m!127093 () Bool)

(assert (=> d!31735 m!127093))

(assert (=> b!111508 m!124499))

(declare-fun m!127095 () Bool)

(assert (=> b!111508 m!127095))

(assert (=> b!111508 m!124499))

(declare-fun m!127097 () Bool)

(assert (=> b!111508 m!127097))

(assert (=> b!111508 m!127097))

(declare-fun m!127099 () Bool)

(assert (=> b!111508 m!127099))

(assert (=> b!111510 m!124499))

(assert (=> b!111510 m!127097))

(assert (=> b!111510 m!127097))

(assert (=> b!111510 m!127099))

(assert (=> d!30853 d!31735))

(assert (=> d!30853 d!31325))

(assert (=> d!30853 d!30965))

(declare-fun d!31737 () Bool)

(declare-fun e!72480 () Bool)

(assert (=> d!31737 e!72480))

(declare-fun res!55042 () Bool)

(assert (=> d!31737 (=> (not res!55042) (not e!72480))))

(assert (=> d!31737 (= res!55042 (and (bvsge (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) #b00000000000000000000000000000000) (bvslt (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (size!2329 (_keys!4340 newMap!16)))))))

(declare-fun lt!57504 () Unit!3382)

(declare-fun choose!41 (array!4371 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1610) Unit!3382)

(assert (=> d!31737 (= lt!57504 (choose!41 (_keys!4340 newMap!16) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) lt!56743 lt!56736))))

(assert (=> d!31737 (bvslt (size!2329 (_keys!4340 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!31737 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4340 newMap!16) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) lt!56743 lt!56736) lt!57504)))

(declare-fun b!111513 () Bool)

(assert (=> b!111513 (= e!72480 (arrayNoDuplicates!0 (array!4372 (store (arr!2072 (_keys!4340 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2329 (_keys!4340 newMap!16))) lt!56743 lt!56736))))

(assert (= (and d!31737 res!55042) b!111513))

(assert (=> d!31737 m!124087))

(declare-fun m!127101 () Bool)

(assert (=> d!31737 m!127101))

(assert (=> b!111513 m!124505))

(assert (=> b!111513 m!124495))

(assert (=> d!30853 d!31737))

(declare-fun call!11897 () Bool)

(declare-fun bm!11894 () Bool)

(assert (=> bm!11894 (= call!11897 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!4372 (store (arr!2072 (_keys!4340 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2329 (_keys!4340 newMap!16))) (mask!6794 newMap!16)))))

(declare-fun b!111514 () Bool)

(declare-fun e!72481 () Bool)

(assert (=> b!111514 (= e!72481 call!11897)))

(declare-fun b!111515 () Bool)

(declare-fun e!72483 () Bool)

(assert (=> b!111515 (= e!72483 call!11897)))

(declare-fun b!111517 () Bool)

(assert (=> b!111517 (= e!72483 e!72481)))

(declare-fun lt!57505 () (_ BitVec 64))

(assert (=> b!111517 (= lt!57505 (select (arr!2072 (array!4372 (store (arr!2072 (_keys!4340 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2329 (_keys!4340 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!57507 () Unit!3382)

(assert (=> b!111517 (= lt!57507 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4372 (store (arr!2072 (_keys!4340 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2329 (_keys!4340 newMap!16))) lt!57505 #b00000000000000000000000000000000))))

(assert (=> b!111517 (arrayContainsKey!0 (array!4372 (store (arr!2072 (_keys!4340 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2329 (_keys!4340 newMap!16))) lt!57505 #b00000000000000000000000000000000)))

(declare-fun lt!57506 () Unit!3382)

(assert (=> b!111517 (= lt!57506 lt!57507)))

(declare-fun res!55043 () Bool)

(assert (=> b!111517 (= res!55043 (= (seekEntryOrOpen!0 (select (arr!2072 (array!4372 (store (arr!2072 (_keys!4340 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2329 (_keys!4340 newMap!16)))) #b00000000000000000000000000000000) (array!4372 (store (arr!2072 (_keys!4340 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2329 (_keys!4340 newMap!16))) (mask!6794 newMap!16)) (Found!255 #b00000000000000000000000000000000)))))

(assert (=> b!111517 (=> (not res!55043) (not e!72481))))

(declare-fun b!111516 () Bool)

(declare-fun e!72482 () Bool)

(assert (=> b!111516 (= e!72482 e!72483)))

(declare-fun c!19906 () Bool)

(assert (=> b!111516 (= c!19906 (validKeyInArray!0 (select (arr!2072 (array!4372 (store (arr!2072 (_keys!4340 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2329 (_keys!4340 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun d!31739 () Bool)

(declare-fun res!55044 () Bool)

(assert (=> d!31739 (=> res!55044 e!72482)))

(assert (=> d!31739 (= res!55044 (bvsge #b00000000000000000000000000000000 (size!2329 (array!4372 (store (arr!2072 (_keys!4340 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2329 (_keys!4340 newMap!16))))))))

(assert (=> d!31739 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4372 (store (arr!2072 (_keys!4340 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2329 (_keys!4340 newMap!16))) (mask!6794 newMap!16)) e!72482)))

(assert (= (and d!31739 (not res!55044)) b!111516))

(assert (= (and b!111516 c!19906) b!111517))

(assert (= (and b!111516 (not c!19906)) b!111515))

(assert (= (and b!111517 res!55043) b!111514))

(assert (= (or b!111514 b!111515) bm!11894))

(declare-fun m!127103 () Bool)

(assert (=> bm!11894 m!127103))

(assert (=> b!111517 m!127085))

(declare-fun m!127105 () Bool)

(assert (=> b!111517 m!127105))

(declare-fun m!127107 () Bool)

(assert (=> b!111517 m!127107))

(assert (=> b!111517 m!127085))

(declare-fun m!127109 () Bool)

(assert (=> b!111517 m!127109))

(assert (=> b!111516 m!127085))

(assert (=> b!111516 m!127085))

(assert (=> b!111516 m!127087))

(assert (=> d!30853 d!31739))

(assert (=> d!30853 d!31497))

(declare-fun b!111518 () Bool)

(declare-fun res!55045 () Bool)

(declare-fun e!72494 () Bool)

(assert (=> b!111518 (=> (not res!55045) (not e!72494))))

(declare-fun e!72490 () Bool)

(assert (=> b!111518 (= res!55045 e!72490)))

(declare-fun res!55048 () Bool)

(assert (=> b!111518 (=> res!55048 e!72490)))

(declare-fun e!72495 () Bool)

(assert (=> b!111518 (= res!55048 (not e!72495))))

(declare-fun res!55052 () Bool)

(assert (=> b!111518 (=> (not res!55052) (not e!72495))))

(assert (=> b!111518 (= res!55052 (bvslt #b00000000000000000000000000000000 (size!2329 lt!56724)))))

(declare-fun bm!11895 () Bool)

(declare-fun call!11901 () Bool)

(declare-fun lt!57518 () ListLongMap!1547)

(assert (=> bm!11895 (= call!11901 (contains!824 lt!57518 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!111519 () Bool)

(declare-fun e!72487 () Unit!3382)

(declare-fun Unit!3455 () Unit!3382)

(assert (=> b!111519 (= e!72487 Unit!3455)))

(declare-fun b!111520 () Bool)

(declare-fun e!72485 () ListLongMap!1547)

(declare-fun call!11904 () ListLongMap!1547)

(assert (=> b!111520 (= e!72485 (+!144 call!11904 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16))))))

(declare-fun b!111521 () Bool)

(declare-fun e!72489 () Bool)

(assert (=> b!111521 (= e!72490 e!72489)))

(declare-fun res!55046 () Bool)

(assert (=> b!111521 (=> (not res!55046) (not e!72489))))

(assert (=> b!111521 (= res!55046 (contains!824 lt!57518 (select (arr!2072 lt!56724) #b00000000000000000000000000000000)))))

(assert (=> b!111521 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2329 lt!56724)))))

(declare-fun b!111522 () Bool)

(declare-fun lt!57529 () Unit!3382)

(assert (=> b!111522 (= e!72487 lt!57529)))

(declare-fun lt!57519 () ListLongMap!1547)

(assert (=> b!111522 (= lt!57519 (getCurrentListMapNoExtraKeys!111 lt!56724 lt!56727 (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!57526 () (_ BitVec 64))

(assert (=> b!111522 (= lt!57526 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57521 () (_ BitVec 64))

(assert (=> b!111522 (= lt!57521 (select (arr!2072 lt!56724) #b00000000000000000000000000000000))))

(declare-fun lt!57522 () Unit!3382)

(assert (=> b!111522 (= lt!57522 (addStillContains!76 lt!57519 lt!57526 (zeroValue!2497 newMap!16) lt!57521))))

(assert (=> b!111522 (contains!824 (+!144 lt!57519 (tuple2!2389 lt!57526 (zeroValue!2497 newMap!16))) lt!57521)))

(declare-fun lt!57524 () Unit!3382)

(assert (=> b!111522 (= lt!57524 lt!57522)))

(declare-fun lt!57509 () ListLongMap!1547)

(assert (=> b!111522 (= lt!57509 (getCurrentListMapNoExtraKeys!111 lt!56724 lt!56727 (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!57514 () (_ BitVec 64))

(assert (=> b!111522 (= lt!57514 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57511 () (_ BitVec 64))

(assert (=> b!111522 (= lt!57511 (select (arr!2072 lt!56724) #b00000000000000000000000000000000))))

(declare-fun lt!57513 () Unit!3382)

(assert (=> b!111522 (= lt!57513 (addApplyDifferent!76 lt!57509 lt!57514 (minValue!2497 newMap!16) lt!57511))))

(assert (=> b!111522 (= (apply!100 (+!144 lt!57509 (tuple2!2389 lt!57514 (minValue!2497 newMap!16))) lt!57511) (apply!100 lt!57509 lt!57511))))

(declare-fun lt!57508 () Unit!3382)

(assert (=> b!111522 (= lt!57508 lt!57513)))

(declare-fun lt!57517 () ListLongMap!1547)

(assert (=> b!111522 (= lt!57517 (getCurrentListMapNoExtraKeys!111 lt!56724 lt!56727 (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!57528 () (_ BitVec 64))

(assert (=> b!111522 (= lt!57528 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57523 () (_ BitVec 64))

(assert (=> b!111522 (= lt!57523 (select (arr!2072 lt!56724) #b00000000000000000000000000000000))))

(declare-fun lt!57512 () Unit!3382)

(assert (=> b!111522 (= lt!57512 (addApplyDifferent!76 lt!57517 lt!57528 (zeroValue!2497 newMap!16) lt!57523))))

(assert (=> b!111522 (= (apply!100 (+!144 lt!57517 (tuple2!2389 lt!57528 (zeroValue!2497 newMap!16))) lt!57523) (apply!100 lt!57517 lt!57523))))

(declare-fun lt!57520 () Unit!3382)

(assert (=> b!111522 (= lt!57520 lt!57512)))

(declare-fun lt!57527 () ListLongMap!1547)

(assert (=> b!111522 (= lt!57527 (getCurrentListMapNoExtraKeys!111 lt!56724 lt!56727 (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!57516 () (_ BitVec 64))

(assert (=> b!111522 (= lt!57516 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57510 () (_ BitVec 64))

(assert (=> b!111522 (= lt!57510 (select (arr!2072 lt!56724) #b00000000000000000000000000000000))))

(assert (=> b!111522 (= lt!57529 (addApplyDifferent!76 lt!57527 lt!57516 (minValue!2497 newMap!16) lt!57510))))

(assert (=> b!111522 (= (apply!100 (+!144 lt!57527 (tuple2!2389 lt!57516 (minValue!2497 newMap!16))) lt!57510) (apply!100 lt!57527 lt!57510))))

(declare-fun d!31741 () Bool)

(assert (=> d!31741 e!72494))

(declare-fun res!55050 () Bool)

(assert (=> d!31741 (=> (not res!55050) (not e!72494))))

(assert (=> d!31741 (= res!55050 (or (bvsge #b00000000000000000000000000000000 (size!2329 lt!56724)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2329 lt!56724)))))))

(declare-fun lt!57525 () ListLongMap!1547)

(assert (=> d!31741 (= lt!57518 lt!57525)))

(declare-fun lt!57515 () Unit!3382)

(assert (=> d!31741 (= lt!57515 e!72487)))

(declare-fun c!19912 () Bool)

(declare-fun e!72488 () Bool)

(assert (=> d!31741 (= c!19912 e!72488)))

(declare-fun res!55047 () Bool)

(assert (=> d!31741 (=> (not res!55047) (not e!72488))))

(assert (=> d!31741 (= res!55047 (bvslt #b00000000000000000000000000000000 (size!2329 lt!56724)))))

(assert (=> d!31741 (= lt!57525 e!72485)))

(declare-fun c!19909 () Bool)

(assert (=> d!31741 (= c!19909 (and (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!31741 (validMask!0 (mask!6794 newMap!16))))

(assert (=> d!31741 (= (getCurrentListMap!475 lt!56724 lt!56727 (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) lt!57518)))

(declare-fun bm!11896 () Bool)

(declare-fun call!11902 () ListLongMap!1547)

(declare-fun call!11899 () ListLongMap!1547)

(assert (=> bm!11896 (= call!11902 call!11899)))

(declare-fun b!111523 () Bool)

(declare-fun e!72493 () ListLongMap!1547)

(declare-fun call!11900 () ListLongMap!1547)

(assert (=> b!111523 (= e!72493 call!11900)))

(declare-fun b!111524 () Bool)

(declare-fun e!72492 () Bool)

(declare-fun call!11903 () Bool)

(assert (=> b!111524 (= e!72492 (not call!11903))))

(declare-fun b!111525 () Bool)

(declare-fun c!19908 () Bool)

(assert (=> b!111525 (= c!19908 (and (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!72496 () ListLongMap!1547)

(assert (=> b!111525 (= e!72493 e!72496)))

(declare-fun b!111526 () Bool)

(declare-fun e!72486 () Bool)

(assert (=> b!111526 (= e!72486 (not call!11901))))

(declare-fun bm!11897 () Bool)

(assert (=> bm!11897 (= call!11903 (contains!824 lt!57518 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!111527 () Bool)

(declare-fun e!72484 () Bool)

(assert (=> b!111527 (= e!72486 e!72484)))

(declare-fun res!55049 () Bool)

(assert (=> b!111527 (= res!55049 call!11901)))

(assert (=> b!111527 (=> (not res!55049) (not e!72484))))

(declare-fun b!111528 () Bool)

(assert (=> b!111528 (= e!72489 (= (apply!100 lt!57518 (select (arr!2072 lt!56724) #b00000000000000000000000000000000)) (get!1353 (select (arr!2073 lt!56727) #b00000000000000000000000000000000) (dynLambda!390 (defaultEntry!2626 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!111528 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2330 lt!56727)))))

(assert (=> b!111528 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2329 lt!56724)))))

(declare-fun bm!11898 () Bool)

(declare-fun c!19907 () Bool)

(declare-fun call!11898 () ListLongMap!1547)

(assert (=> bm!11898 (= call!11904 (+!144 (ite c!19909 call!11899 (ite c!19907 call!11902 call!11898)) (ite (or c!19909 c!19907) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 newMap!16)) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16)))))))

(declare-fun b!111529 () Bool)

(declare-fun e!72491 () Bool)

(assert (=> b!111529 (= e!72491 (= (apply!100 lt!57518 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2497 newMap!16)))))

(declare-fun b!111530 () Bool)

(assert (=> b!111530 (= e!72494 e!72486)))

(declare-fun c!19911 () Bool)

(assert (=> b!111530 (= c!19911 (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11899 () Bool)

(assert (=> bm!11899 (= call!11900 call!11904)))

(declare-fun b!111531 () Bool)

(declare-fun res!55051 () Bool)

(assert (=> b!111531 (=> (not res!55051) (not e!72494))))

(assert (=> b!111531 (= res!55051 e!72492)))

(declare-fun c!19910 () Bool)

(assert (=> b!111531 (= c!19910 (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!111532 () Bool)

(assert (=> b!111532 (= e!72496 call!11898)))

(declare-fun bm!11900 () Bool)

(assert (=> bm!11900 (= call!11898 call!11902)))

(declare-fun b!111533 () Bool)

(assert (=> b!111533 (= e!72496 call!11900)))

(declare-fun b!111534 () Bool)

(assert (=> b!111534 (= e!72488 (validKeyInArray!0 (select (arr!2072 lt!56724) #b00000000000000000000000000000000)))))

(declare-fun b!111535 () Bool)

(assert (=> b!111535 (= e!72492 e!72491)))

(declare-fun res!55053 () Bool)

(assert (=> b!111535 (= res!55053 call!11903)))

(assert (=> b!111535 (=> (not res!55053) (not e!72491))))

(declare-fun b!111536 () Bool)

(assert (=> b!111536 (= e!72484 (= (apply!100 lt!57518 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2497 newMap!16)))))

(declare-fun b!111537 () Bool)

(assert (=> b!111537 (= e!72495 (validKeyInArray!0 (select (arr!2072 lt!56724) #b00000000000000000000000000000000)))))

(declare-fun b!111538 () Bool)

(assert (=> b!111538 (= e!72485 e!72493)))

(assert (=> b!111538 (= c!19907 (and (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11901 () Bool)

(assert (=> bm!11901 (= call!11899 (getCurrentListMapNoExtraKeys!111 lt!56724 lt!56727 (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(assert (= (and d!31741 c!19909) b!111520))

(assert (= (and d!31741 (not c!19909)) b!111538))

(assert (= (and b!111538 c!19907) b!111523))

(assert (= (and b!111538 (not c!19907)) b!111525))

(assert (= (and b!111525 c!19908) b!111533))

(assert (= (and b!111525 (not c!19908)) b!111532))

(assert (= (or b!111533 b!111532) bm!11900))

(assert (= (or b!111523 bm!11900) bm!11896))

(assert (= (or b!111523 b!111533) bm!11899))

(assert (= (or b!111520 bm!11896) bm!11901))

(assert (= (or b!111520 bm!11899) bm!11898))

(assert (= (and d!31741 res!55047) b!111534))

(assert (= (and d!31741 c!19912) b!111522))

(assert (= (and d!31741 (not c!19912)) b!111519))

(assert (= (and d!31741 res!55050) b!111518))

(assert (= (and b!111518 res!55052) b!111537))

(assert (= (and b!111518 (not res!55048)) b!111521))

(assert (= (and b!111521 res!55046) b!111528))

(assert (= (and b!111518 res!55045) b!111531))

(assert (= (and b!111531 c!19910) b!111535))

(assert (= (and b!111531 (not c!19910)) b!111524))

(assert (= (and b!111535 res!55053) b!111529))

(assert (= (or b!111535 b!111524) bm!11897))

(assert (= (and b!111531 res!55051) b!111530))

(assert (= (and b!111530 c!19911) b!111527))

(assert (= (and b!111530 (not c!19911)) b!111526))

(assert (= (and b!111527 res!55049) b!111536))

(assert (= (or b!111527 b!111526) bm!11895))

(declare-fun b_lambda!4979 () Bool)

(assert (=> (not b_lambda!4979) (not b!111528)))

(assert (=> b!111528 t!5751))

(declare-fun b_and!6853 () Bool)

(assert (= b_and!6849 (and (=> t!5751 result!3533) b_and!6853)))

(assert (=> b!111528 t!5753))

(declare-fun b_and!6855 () Bool)

(assert (= b_and!6851 (and (=> t!5753 result!3535) b_and!6855)))

(declare-fun m!127111 () Bool)

(assert (=> b!111537 m!127111))

(assert (=> b!111537 m!127111))

(declare-fun m!127113 () Bool)

(assert (=> b!111537 m!127113))

(declare-fun m!127115 () Bool)

(assert (=> b!111522 m!127115))

(declare-fun m!127117 () Bool)

(assert (=> b!111522 m!127117))

(declare-fun m!127119 () Bool)

(assert (=> b!111522 m!127119))

(declare-fun m!127121 () Bool)

(assert (=> b!111522 m!127121))

(declare-fun m!127123 () Bool)

(assert (=> b!111522 m!127123))

(declare-fun m!127125 () Bool)

(assert (=> b!111522 m!127125))

(declare-fun m!127127 () Bool)

(assert (=> b!111522 m!127127))

(declare-fun m!127129 () Bool)

(assert (=> b!111522 m!127129))

(declare-fun m!127131 () Bool)

(assert (=> b!111522 m!127131))

(declare-fun m!127133 () Bool)

(assert (=> b!111522 m!127133))

(declare-fun m!127135 () Bool)

(assert (=> b!111522 m!127135))

(assert (=> b!111522 m!127123))

(assert (=> b!111522 m!127127))

(declare-fun m!127137 () Bool)

(assert (=> b!111522 m!127137))

(assert (=> b!111522 m!127111))

(declare-fun m!127139 () Bool)

(assert (=> b!111522 m!127139))

(assert (=> b!111522 m!127133))

(declare-fun m!127141 () Bool)

(assert (=> b!111522 m!127141))

(declare-fun m!127143 () Bool)

(assert (=> b!111522 m!127143))

(assert (=> b!111522 m!127141))

(declare-fun m!127145 () Bool)

(assert (=> b!111522 m!127145))

(assert (=> b!111534 m!127111))

(assert (=> b!111534 m!127111))

(assert (=> b!111534 m!127113))

(declare-fun m!127147 () Bool)

(assert (=> bm!11897 m!127147))

(assert (=> bm!11901 m!127139))

(assert (=> d!31741 m!124579))

(declare-fun m!127149 () Bool)

(assert (=> bm!11898 m!127149))

(declare-fun m!127151 () Bool)

(assert (=> b!111529 m!127151))

(declare-fun m!127153 () Bool)

(assert (=> bm!11895 m!127153))

(declare-fun m!127155 () Bool)

(assert (=> b!111536 m!127155))

(assert (=> b!111528 m!127111))

(declare-fun m!127157 () Bool)

(assert (=> b!111528 m!127157))

(assert (=> b!111528 m!127111))

(declare-fun m!127159 () Bool)

(assert (=> b!111528 m!127159))

(assert (=> b!111528 m!127159))

(assert (=> b!111528 m!124767))

(declare-fun m!127161 () Bool)

(assert (=> b!111528 m!127161))

(assert (=> b!111528 m!124767))

(declare-fun m!127163 () Bool)

(assert (=> b!111520 m!127163))

(assert (=> b!111521 m!127111))

(assert (=> b!111521 m!127111))

(declare-fun m!127165 () Bool)

(assert (=> b!111521 m!127165))

(assert (=> d!30853 d!31741))

(declare-fun b!111539 () Bool)

(declare-fun res!55054 () Bool)

(declare-fun e!72507 () Bool)

(assert (=> b!111539 (=> (not res!55054) (not e!72507))))

(declare-fun e!72503 () Bool)

(assert (=> b!111539 (= res!55054 e!72503)))

(declare-fun res!55057 () Bool)

(assert (=> b!111539 (=> res!55057 e!72503)))

(declare-fun e!72508 () Bool)

(assert (=> b!111539 (= res!55057 (not e!72508))))

(declare-fun res!55061 () Bool)

(assert (=> b!111539 (=> (not res!55061) (not e!72508))))

(assert (=> b!111539 (= res!55061 (bvslt #b00000000000000000000000000000000 (size!2329 (array!4372 (store (arr!2072 (_keys!4340 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2329 (_keys!4340 newMap!16))))))))

(declare-fun bm!11902 () Bool)

(declare-fun call!11908 () Bool)

(declare-fun lt!57540 () ListLongMap!1547)

(assert (=> bm!11902 (= call!11908 (contains!824 lt!57540 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!111540 () Bool)

(declare-fun e!72500 () Unit!3382)

(declare-fun Unit!3456 () Unit!3382)

(assert (=> b!111540 (= e!72500 Unit!3456)))

(declare-fun b!111541 () Bool)

(declare-fun e!72498 () ListLongMap!1547)

(declare-fun call!11911 () ListLongMap!1547)

(assert (=> b!111541 (= e!72498 (+!144 call!11911 (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16))))))

(declare-fun b!111542 () Bool)

(declare-fun e!72502 () Bool)

(assert (=> b!111542 (= e!72503 e!72502)))

(declare-fun res!55055 () Bool)

(assert (=> b!111542 (=> (not res!55055) (not e!72502))))

(assert (=> b!111542 (= res!55055 (contains!824 lt!57540 (select (arr!2072 (array!4372 (store (arr!2072 (_keys!4340 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2329 (_keys!4340 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!111542 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2329 (array!4372 (store (arr!2072 (_keys!4340 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2329 (_keys!4340 newMap!16))))))))

(declare-fun b!111543 () Bool)

(declare-fun lt!57551 () Unit!3382)

(assert (=> b!111543 (= e!72500 lt!57551)))

(declare-fun lt!57541 () ListLongMap!1547)

(assert (=> b!111543 (= lt!57541 (getCurrentListMapNoExtraKeys!111 (array!4372 (store (arr!2072 (_keys!4340 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2329 (_keys!4340 newMap!16))) (array!4374 (store (arr!2073 (_values!2609 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (ValueCellFull!1004 lt!56360)) (size!2330 (_values!2609 newMap!16))) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!57548 () (_ BitVec 64))

(assert (=> b!111543 (= lt!57548 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57543 () (_ BitVec 64))

(assert (=> b!111543 (= lt!57543 (select (arr!2072 (array!4372 (store (arr!2072 (_keys!4340 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2329 (_keys!4340 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!57544 () Unit!3382)

(assert (=> b!111543 (= lt!57544 (addStillContains!76 lt!57541 lt!57548 (zeroValue!2497 newMap!16) lt!57543))))

(assert (=> b!111543 (contains!824 (+!144 lt!57541 (tuple2!2389 lt!57548 (zeroValue!2497 newMap!16))) lt!57543)))

(declare-fun lt!57546 () Unit!3382)

(assert (=> b!111543 (= lt!57546 lt!57544)))

(declare-fun lt!57531 () ListLongMap!1547)

(assert (=> b!111543 (= lt!57531 (getCurrentListMapNoExtraKeys!111 (array!4372 (store (arr!2072 (_keys!4340 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2329 (_keys!4340 newMap!16))) (array!4374 (store (arr!2073 (_values!2609 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (ValueCellFull!1004 lt!56360)) (size!2330 (_values!2609 newMap!16))) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!57536 () (_ BitVec 64))

(assert (=> b!111543 (= lt!57536 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57533 () (_ BitVec 64))

(assert (=> b!111543 (= lt!57533 (select (arr!2072 (array!4372 (store (arr!2072 (_keys!4340 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2329 (_keys!4340 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!57535 () Unit!3382)

(assert (=> b!111543 (= lt!57535 (addApplyDifferent!76 lt!57531 lt!57536 (minValue!2497 newMap!16) lt!57533))))

(assert (=> b!111543 (= (apply!100 (+!144 lt!57531 (tuple2!2389 lt!57536 (minValue!2497 newMap!16))) lt!57533) (apply!100 lt!57531 lt!57533))))

(declare-fun lt!57530 () Unit!3382)

(assert (=> b!111543 (= lt!57530 lt!57535)))

(declare-fun lt!57539 () ListLongMap!1547)

(assert (=> b!111543 (= lt!57539 (getCurrentListMapNoExtraKeys!111 (array!4372 (store (arr!2072 (_keys!4340 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2329 (_keys!4340 newMap!16))) (array!4374 (store (arr!2073 (_values!2609 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (ValueCellFull!1004 lt!56360)) (size!2330 (_values!2609 newMap!16))) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!57550 () (_ BitVec 64))

(assert (=> b!111543 (= lt!57550 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57545 () (_ BitVec 64))

(assert (=> b!111543 (= lt!57545 (select (arr!2072 (array!4372 (store (arr!2072 (_keys!4340 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2329 (_keys!4340 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!57534 () Unit!3382)

(assert (=> b!111543 (= lt!57534 (addApplyDifferent!76 lt!57539 lt!57550 (zeroValue!2497 newMap!16) lt!57545))))

(assert (=> b!111543 (= (apply!100 (+!144 lt!57539 (tuple2!2389 lt!57550 (zeroValue!2497 newMap!16))) lt!57545) (apply!100 lt!57539 lt!57545))))

(declare-fun lt!57542 () Unit!3382)

(assert (=> b!111543 (= lt!57542 lt!57534)))

(declare-fun lt!57549 () ListLongMap!1547)

(assert (=> b!111543 (= lt!57549 (getCurrentListMapNoExtraKeys!111 (array!4372 (store (arr!2072 (_keys!4340 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2329 (_keys!4340 newMap!16))) (array!4374 (store (arr!2073 (_values!2609 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (ValueCellFull!1004 lt!56360)) (size!2330 (_values!2609 newMap!16))) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!57538 () (_ BitVec 64))

(assert (=> b!111543 (= lt!57538 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57532 () (_ BitVec 64))

(assert (=> b!111543 (= lt!57532 (select (arr!2072 (array!4372 (store (arr!2072 (_keys!4340 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2329 (_keys!4340 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!111543 (= lt!57551 (addApplyDifferent!76 lt!57549 lt!57538 (minValue!2497 newMap!16) lt!57532))))

(assert (=> b!111543 (= (apply!100 (+!144 lt!57549 (tuple2!2389 lt!57538 (minValue!2497 newMap!16))) lt!57532) (apply!100 lt!57549 lt!57532))))

(declare-fun d!31743 () Bool)

(assert (=> d!31743 e!72507))

(declare-fun res!55059 () Bool)

(assert (=> d!31743 (=> (not res!55059) (not e!72507))))

(assert (=> d!31743 (= res!55059 (or (bvsge #b00000000000000000000000000000000 (size!2329 (array!4372 (store (arr!2072 (_keys!4340 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2329 (_keys!4340 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2329 (array!4372 (store (arr!2072 (_keys!4340 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2329 (_keys!4340 newMap!16))))))))))

(declare-fun lt!57547 () ListLongMap!1547)

(assert (=> d!31743 (= lt!57540 lt!57547)))

(declare-fun lt!57537 () Unit!3382)

(assert (=> d!31743 (= lt!57537 e!72500)))

(declare-fun c!19918 () Bool)

(declare-fun e!72501 () Bool)

(assert (=> d!31743 (= c!19918 e!72501)))

(declare-fun res!55056 () Bool)

(assert (=> d!31743 (=> (not res!55056) (not e!72501))))

(assert (=> d!31743 (= res!55056 (bvslt #b00000000000000000000000000000000 (size!2329 (array!4372 (store (arr!2072 (_keys!4340 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2329 (_keys!4340 newMap!16))))))))

(assert (=> d!31743 (= lt!57547 e!72498)))

(declare-fun c!19915 () Bool)

(assert (=> d!31743 (= c!19915 (and (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!31743 (validMask!0 (mask!6794 newMap!16))))

(assert (=> d!31743 (= (getCurrentListMap!475 (array!4372 (store (arr!2072 (_keys!4340 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2329 (_keys!4340 newMap!16))) (array!4374 (store (arr!2073 (_values!2609 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (ValueCellFull!1004 lt!56360)) (size!2330 (_values!2609 newMap!16))) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) lt!57540)))

(declare-fun bm!11903 () Bool)

(declare-fun call!11909 () ListLongMap!1547)

(declare-fun call!11906 () ListLongMap!1547)

(assert (=> bm!11903 (= call!11909 call!11906)))

(declare-fun b!111544 () Bool)

(declare-fun e!72506 () ListLongMap!1547)

(declare-fun call!11907 () ListLongMap!1547)

(assert (=> b!111544 (= e!72506 call!11907)))

(declare-fun b!111545 () Bool)

(declare-fun e!72505 () Bool)

(declare-fun call!11910 () Bool)

(assert (=> b!111545 (= e!72505 (not call!11910))))

(declare-fun b!111546 () Bool)

(declare-fun c!19914 () Bool)

(assert (=> b!111546 (= c!19914 (and (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!72509 () ListLongMap!1547)

(assert (=> b!111546 (= e!72506 e!72509)))

(declare-fun b!111547 () Bool)

(declare-fun e!72499 () Bool)

(assert (=> b!111547 (= e!72499 (not call!11908))))

(declare-fun bm!11904 () Bool)

(assert (=> bm!11904 (= call!11910 (contains!824 lt!57540 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!111548 () Bool)

(declare-fun e!72497 () Bool)

(assert (=> b!111548 (= e!72499 e!72497)))

(declare-fun res!55058 () Bool)

(assert (=> b!111548 (= res!55058 call!11908)))

(assert (=> b!111548 (=> (not res!55058) (not e!72497))))

(declare-fun b!111549 () Bool)

(assert (=> b!111549 (= e!72502 (= (apply!100 lt!57540 (select (arr!2072 (array!4372 (store (arr!2072 (_keys!4340 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2329 (_keys!4340 newMap!16)))) #b00000000000000000000000000000000)) (get!1353 (select (arr!2073 (array!4374 (store (arr!2073 (_values!2609 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (ValueCellFull!1004 lt!56360)) (size!2330 (_values!2609 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!390 (defaultEntry!2626 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!111549 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2330 (array!4374 (store (arr!2073 (_values!2609 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (ValueCellFull!1004 lt!56360)) (size!2330 (_values!2609 newMap!16))))))))

(assert (=> b!111549 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2329 (array!4372 (store (arr!2072 (_keys!4340 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2329 (_keys!4340 newMap!16))))))))

(declare-fun bm!11905 () Bool)

(declare-fun call!11905 () ListLongMap!1547)

(declare-fun c!19913 () Bool)

(assert (=> bm!11905 (= call!11911 (+!144 (ite c!19915 call!11906 (ite c!19913 call!11909 call!11905)) (ite (or c!19915 c!19913) (tuple2!2389 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 newMap!16)) (tuple2!2389 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16)))))))

(declare-fun b!111550 () Bool)

(declare-fun e!72504 () Bool)

(assert (=> b!111550 (= e!72504 (= (apply!100 lt!57540 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2497 newMap!16)))))

(declare-fun b!111551 () Bool)

(assert (=> b!111551 (= e!72507 e!72499)))

(declare-fun c!19917 () Bool)

(assert (=> b!111551 (= c!19917 (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11906 () Bool)

(assert (=> bm!11906 (= call!11907 call!11911)))

(declare-fun b!111552 () Bool)

(declare-fun res!55060 () Bool)

(assert (=> b!111552 (=> (not res!55060) (not e!72507))))

(assert (=> b!111552 (= res!55060 e!72505)))

(declare-fun c!19916 () Bool)

(assert (=> b!111552 (= c!19916 (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!111553 () Bool)

(assert (=> b!111553 (= e!72509 call!11905)))

(declare-fun bm!11907 () Bool)

(assert (=> bm!11907 (= call!11905 call!11909)))

(declare-fun b!111554 () Bool)

(assert (=> b!111554 (= e!72509 call!11907)))

(declare-fun b!111555 () Bool)

(assert (=> b!111555 (= e!72501 (validKeyInArray!0 (select (arr!2072 (array!4372 (store (arr!2072 (_keys!4340 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2329 (_keys!4340 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!111556 () Bool)

(assert (=> b!111556 (= e!72505 e!72504)))

(declare-fun res!55062 () Bool)

(assert (=> b!111556 (= res!55062 call!11910)))

(assert (=> b!111556 (=> (not res!55062) (not e!72504))))

(declare-fun b!111557 () Bool)

(assert (=> b!111557 (= e!72497 (= (apply!100 lt!57540 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2497 newMap!16)))))

(declare-fun b!111558 () Bool)

(assert (=> b!111558 (= e!72508 (validKeyInArray!0 (select (arr!2072 (array!4372 (store (arr!2072 (_keys!4340 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2329 (_keys!4340 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!111559 () Bool)

(assert (=> b!111559 (= e!72498 e!72506)))

(assert (=> b!111559 (= c!19913 (and (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11908 () Bool)

(assert (=> bm!11908 (= call!11906 (getCurrentListMapNoExtraKeys!111 (array!4372 (store (arr!2072 (_keys!4340 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2329 (_keys!4340 newMap!16))) (array!4374 (store (arr!2073 (_values!2609 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (ValueCellFull!1004 lt!56360)) (size!2330 (_values!2609 newMap!16))) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(assert (= (and d!31743 c!19915) b!111541))

(assert (= (and d!31743 (not c!19915)) b!111559))

(assert (= (and b!111559 c!19913) b!111544))

(assert (= (and b!111559 (not c!19913)) b!111546))

(assert (= (and b!111546 c!19914) b!111554))

(assert (= (and b!111546 (not c!19914)) b!111553))

(assert (= (or b!111554 b!111553) bm!11907))

(assert (= (or b!111544 bm!11907) bm!11903))

(assert (= (or b!111544 b!111554) bm!11906))

(assert (= (or b!111541 bm!11903) bm!11908))

(assert (= (or b!111541 bm!11906) bm!11905))

(assert (= (and d!31743 res!55056) b!111555))

(assert (= (and d!31743 c!19918) b!111543))

(assert (= (and d!31743 (not c!19918)) b!111540))

(assert (= (and d!31743 res!55059) b!111539))

(assert (= (and b!111539 res!55061) b!111558))

(assert (= (and b!111539 (not res!55057)) b!111542))

(assert (= (and b!111542 res!55055) b!111549))

(assert (= (and b!111539 res!55054) b!111552))

(assert (= (and b!111552 c!19916) b!111556))

(assert (= (and b!111552 (not c!19916)) b!111545))

(assert (= (and b!111556 res!55062) b!111550))

(assert (= (or b!111556 b!111545) bm!11904))

(assert (= (and b!111552 res!55060) b!111551))

(assert (= (and b!111551 c!19917) b!111548))

(assert (= (and b!111551 (not c!19917)) b!111547))

(assert (= (and b!111548 res!55058) b!111557))

(assert (= (or b!111548 b!111547) bm!11902))

(declare-fun b_lambda!4981 () Bool)

(assert (=> (not b_lambda!4981) (not b!111549)))

(assert (=> b!111549 t!5751))

(declare-fun b_and!6857 () Bool)

(assert (= b_and!6853 (and (=> t!5751 result!3533) b_and!6857)))

(assert (=> b!111549 t!5753))

(declare-fun b_and!6859 () Bool)

(assert (= b_and!6855 (and (=> t!5753 result!3535) b_and!6859)))

(assert (=> b!111558 m!127085))

(assert (=> b!111558 m!127085))

(assert (=> b!111558 m!127087))

(declare-fun m!127167 () Bool)

(assert (=> b!111543 m!127167))

(declare-fun m!127169 () Bool)

(assert (=> b!111543 m!127169))

(declare-fun m!127171 () Bool)

(assert (=> b!111543 m!127171))

(declare-fun m!127173 () Bool)

(assert (=> b!111543 m!127173))

(declare-fun m!127175 () Bool)

(assert (=> b!111543 m!127175))

(declare-fun m!127177 () Bool)

(assert (=> b!111543 m!127177))

(declare-fun m!127179 () Bool)

(assert (=> b!111543 m!127179))

(declare-fun m!127181 () Bool)

(assert (=> b!111543 m!127181))

(declare-fun m!127183 () Bool)

(assert (=> b!111543 m!127183))

(declare-fun m!127185 () Bool)

(assert (=> b!111543 m!127185))

(declare-fun m!127187 () Bool)

(assert (=> b!111543 m!127187))

(assert (=> b!111543 m!127175))

(assert (=> b!111543 m!127179))

(declare-fun m!127189 () Bool)

(assert (=> b!111543 m!127189))

(assert (=> b!111543 m!127085))

(declare-fun m!127191 () Bool)

(assert (=> b!111543 m!127191))

(assert (=> b!111543 m!127185))

(declare-fun m!127193 () Bool)

(assert (=> b!111543 m!127193))

(declare-fun m!127195 () Bool)

(assert (=> b!111543 m!127195))

(assert (=> b!111543 m!127193))

(declare-fun m!127197 () Bool)

(assert (=> b!111543 m!127197))

(assert (=> b!111555 m!127085))

(assert (=> b!111555 m!127085))

(assert (=> b!111555 m!127087))

(declare-fun m!127199 () Bool)

(assert (=> bm!11904 m!127199))

(assert (=> bm!11908 m!127191))

(assert (=> d!31743 m!124579))

(declare-fun m!127201 () Bool)

(assert (=> bm!11905 m!127201))

(declare-fun m!127203 () Bool)

(assert (=> b!111550 m!127203))

(declare-fun m!127205 () Bool)

(assert (=> bm!11902 m!127205))

(declare-fun m!127207 () Bool)

(assert (=> b!111557 m!127207))

(assert (=> b!111549 m!127085))

(declare-fun m!127209 () Bool)

(assert (=> b!111549 m!127209))

(assert (=> b!111549 m!127085))

(declare-fun m!127211 () Bool)

(assert (=> b!111549 m!127211))

(assert (=> b!111549 m!127211))

(assert (=> b!111549 m!124767))

(declare-fun m!127213 () Bool)

(assert (=> b!111549 m!127213))

(assert (=> b!111549 m!124767))

(declare-fun m!127215 () Bool)

(assert (=> b!111541 m!127215))

(assert (=> b!111542 m!127085))

(assert (=> b!111542 m!127085))

(declare-fun m!127217 () Bool)

(assert (=> b!111542 m!127217))

(assert (=> d!30853 d!31743))

(declare-fun b!111569 () Bool)

(declare-fun res!55073 () Bool)

(declare-fun e!72515 () Bool)

(assert (=> b!111569 (=> (not res!55073) (not e!72515))))

(assert (=> b!111569 (= res!55073 (validKeyInArray!0 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(declare-fun b!111568 () Bool)

(declare-fun res!55072 () Bool)

(assert (=> b!111568 (=> (not res!55072) (not e!72515))))

(assert (=> b!111568 (= res!55072 (not (validKeyInArray!0 (select (arr!2072 (_keys!4340 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646))))))))

(declare-fun d!31745 () Bool)

(declare-fun e!72514 () Bool)

(assert (=> d!31745 e!72514))

(declare-fun res!55071 () Bool)

(assert (=> d!31745 (=> (not res!55071) (not e!72514))))

(assert (=> d!31745 (= res!55071 (and (bvsge (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) #b00000000000000000000000000000000) (bvslt (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (size!2329 (_keys!4340 newMap!16)))))))

(declare-fun lt!57554 () Unit!3382)

(declare-fun choose!1 (array!4371 (_ BitVec 32) (_ BitVec 64)) Unit!3382)

(assert (=> d!31745 (= lt!57554 (choose!1 (_keys!4340 newMap!16) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)))))

(assert (=> d!31745 e!72515))

(declare-fun res!55074 () Bool)

(assert (=> d!31745 (=> (not res!55074) (not e!72515))))

(assert (=> d!31745 (= res!55074 (and (bvsge (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) #b00000000000000000000000000000000) (bvslt (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (size!2329 (_keys!4340 newMap!16)))))))

(assert (=> d!31745 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4340 newMap!16) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) lt!57554)))

(declare-fun b!111570 () Bool)

(assert (=> b!111570 (= e!72515 (bvslt (size!2329 (_keys!4340 newMap!16)) #b01111111111111111111111111111111))))

(declare-fun b!111571 () Bool)

(assert (=> b!111571 (= e!72514 (= (arrayCountValidKeys!0 (array!4372 (store (arr!2072 (_keys!4340 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2329 (_keys!4340 newMap!16))) #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4340 newMap!16) #b00000000000000000000000000000000 (size!2329 (_keys!4340 newMap!16))) #b00000000000000000000000000000001)))))

(assert (= (and d!31745 res!55074) b!111568))

(assert (= (and b!111568 res!55072) b!111569))

(assert (= (and b!111569 res!55073) b!111570))

(assert (= (and d!31745 res!55071) b!111571))

(assert (=> b!111569 m!124087))

(assert (=> b!111569 m!124453))

(declare-fun m!127219 () Bool)

(assert (=> b!111568 m!127219))

(assert (=> b!111568 m!127219))

(declare-fun m!127221 () Bool)

(assert (=> b!111568 m!127221))

(assert (=> d!31745 m!124087))

(declare-fun m!127223 () Bool)

(assert (=> d!31745 m!127223))

(assert (=> b!111571 m!124505))

(assert (=> b!111571 m!124509))

(assert (=> b!111571 m!124461))

(assert (=> d!30853 d!31745))

(declare-fun d!31747 () Bool)

(declare-fun e!72518 () Bool)

(assert (=> d!31747 e!72518))

(declare-fun res!55077 () Bool)

(assert (=> d!31747 (=> (not res!55077) (not e!72518))))

(assert (=> d!31747 (= res!55077 (and (bvsge (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) #b00000000000000000000000000000000) (bvslt (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (size!2329 (_keys!4340 newMap!16))) (bvslt (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (size!2330 (_values!2609 newMap!16)))))))

(declare-fun lt!57557 () Unit!3382)

(declare-fun choose!703 (array!4371 array!4373 (_ BitVec 32) (_ BitVec 32) V!3241 V!3241 (_ BitVec 32) (_ BitVec 64) V!3241 Int) Unit!3382)

(assert (=> d!31747 (= lt!57557 (choose!703 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360 (defaultEntry!2626 newMap!16)))))

(assert (=> d!31747 (validMask!0 (mask!6794 newMap!16))))

(assert (=> d!31747 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!32 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360 (defaultEntry!2626 newMap!16)) lt!57557)))

(declare-fun b!111574 () Bool)

(assert (=> b!111574 (= e!72518 (= (+!144 (getCurrentListMap!475 (_keys!4340 newMap!16) (_values!2609 newMap!16) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) (tuple2!2389 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) lt!56360)) (getCurrentListMap!475 (array!4372 (store (arr!2072 (_keys!4340 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2329 (_keys!4340 newMap!16))) (array!4374 (store (arr!2073 (_values!2609 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (ValueCellFull!1004 lt!56360)) (size!2330 (_values!2609 newMap!16))) (mask!6794 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16))))))

(assert (= (and d!31747 res!55077) b!111574))

(assert (=> d!31747 m!124087))

(declare-fun m!127225 () Bool)

(assert (=> d!31747 m!127225))

(assert (=> d!31747 m!124579))

(assert (=> b!111574 m!124519))

(assert (=> b!111574 m!124505))

(assert (=> b!111574 m!124333))

(assert (=> b!111574 m!124517))

(assert (=> b!111574 m!124507))

(assert (=> b!111574 m!124333))

(assert (=> d!30853 d!31747))

(declare-fun b!111576 () Bool)

(declare-fun e!72522 () Bool)

(declare-fun e!72521 () Bool)

(assert (=> b!111576 (= e!72522 e!72521)))

(declare-fun c!19919 () Bool)

(assert (=> b!111576 (= c!19919 (validKeyInArray!0 (select (arr!2072 (array!4372 (store (arr!2072 (_keys!4340 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2329 (_keys!4340 newMap!16)))) lt!56743)))))

(declare-fun call!11912 () Bool)

(declare-fun bm!11909 () Bool)

(assert (=> bm!11909 (= call!11912 (arrayNoDuplicates!0 (array!4372 (store (arr!2072 (_keys!4340 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2329 (_keys!4340 newMap!16))) (bvadd lt!56743 #b00000000000000000000000000000001) (ite c!19919 (Cons!1606 (select (arr!2072 (array!4372 (store (arr!2072 (_keys!4340 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2329 (_keys!4340 newMap!16)))) lt!56743) lt!56736) lt!56736)))))

(declare-fun b!111577 () Bool)

(assert (=> b!111577 (= e!72521 call!11912)))

(declare-fun b!111578 () Bool)

(assert (=> b!111578 (= e!72521 call!11912)))

(declare-fun b!111579 () Bool)

(declare-fun e!72520 () Bool)

(assert (=> b!111579 (= e!72520 (contains!828 lt!56736 (select (arr!2072 (array!4372 (store (arr!2072 (_keys!4340 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2329 (_keys!4340 newMap!16)))) lt!56743)))))

(declare-fun d!31749 () Bool)

(declare-fun res!55078 () Bool)

(declare-fun e!72519 () Bool)

(assert (=> d!31749 (=> res!55078 e!72519)))

(assert (=> d!31749 (= res!55078 (bvsge lt!56743 (size!2329 (array!4372 (store (arr!2072 (_keys!4340 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2329 (_keys!4340 newMap!16))))))))

(assert (=> d!31749 (= (arrayNoDuplicates!0 (array!4372 (store (arr!2072 (_keys!4340 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2329 (_keys!4340 newMap!16))) lt!56743 lt!56736) e!72519)))

(declare-fun b!111575 () Bool)

(assert (=> b!111575 (= e!72519 e!72522)))

(declare-fun res!55079 () Bool)

(assert (=> b!111575 (=> (not res!55079) (not e!72522))))

(assert (=> b!111575 (= res!55079 (not e!72520))))

(declare-fun res!55080 () Bool)

(assert (=> b!111575 (=> (not res!55080) (not e!72520))))

(assert (=> b!111575 (= res!55080 (validKeyInArray!0 (select (arr!2072 (array!4372 (store (arr!2072 (_keys!4340 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2329 (_keys!4340 newMap!16)))) lt!56743)))))

(assert (= (and d!31749 (not res!55078)) b!111575))

(assert (= (and b!111575 res!55080) b!111579))

(assert (= (and b!111575 res!55079) b!111576))

(assert (= (and b!111576 c!19919) b!111578))

(assert (= (and b!111576 (not c!19919)) b!111577))

(assert (= (or b!111578 b!111577) bm!11909))

(declare-fun m!127227 () Bool)

(assert (=> b!111576 m!127227))

(assert (=> b!111576 m!127227))

(declare-fun m!127229 () Bool)

(assert (=> b!111576 m!127229))

(assert (=> bm!11909 m!127227))

(declare-fun m!127231 () Bool)

(assert (=> bm!11909 m!127231))

(assert (=> b!111579 m!127227))

(assert (=> b!111579 m!127227))

(declare-fun m!127233 () Bool)

(assert (=> b!111579 m!127233))

(assert (=> b!111575 m!127227))

(assert (=> b!111575 m!127227))

(assert (=> b!111575 m!127229))

(assert (=> d!30853 d!31749))

(declare-fun d!31751 () Bool)

(declare-fun e!72525 () Bool)

(assert (=> d!31751 e!72525))

(declare-fun res!55083 () Bool)

(assert (=> d!31751 (=> (not res!55083) (not e!72525))))

(assert (=> d!31751 (= res!55083 (and (bvsge (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) #b00000000000000000000000000000000) (bvslt (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (size!2329 (_keys!4340 newMap!16)))))))

(declare-fun lt!57560 () Unit!3382)

(declare-fun choose!102 ((_ BitVec 64) array!4371 (_ BitVec 32) (_ BitVec 32)) Unit!3382)

(assert (=> d!31751 (= lt!57560 (choose!102 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (_keys!4340 newMap!16) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (mask!6794 newMap!16)))))

(assert (=> d!31751 (validMask!0 (mask!6794 newMap!16))))

(assert (=> d!31751 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (_keys!4340 newMap!16) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (mask!6794 newMap!16)) lt!57560)))

(declare-fun b!111582 () Bool)

(assert (=> b!111582 (= e!72525 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4372 (store (arr!2072 (_keys!4340 newMap!16)) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355)) (size!2329 (_keys!4340 newMap!16))) (mask!6794 newMap!16)))))

(assert (= (and d!31751 res!55083) b!111582))

(assert (=> d!31751 m!124087))

(declare-fun m!127235 () Bool)

(assert (=> d!31751 m!127235))

(assert (=> d!31751 m!124579))

(assert (=> b!111582 m!124505))

(assert (=> b!111582 m!124523))

(assert (=> d!30853 d!31751))

(assert (=> d!30853 d!30851))

(declare-fun d!31753 () Bool)

(assert (=> d!31753 (arrayContainsKey!0 lt!56732 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!57561 () Unit!3382)

(assert (=> d!31753 (= lt!57561 (choose!13 lt!56732 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646))))))

(assert (=> d!31753 (bvsge (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) #b00000000000000000000000000000000)))

(assert (=> d!31753 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!56732 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) from!355) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646))) lt!57561)))

(declare-fun bs!4600 () Bool)

(assert (= bs!4600 d!31753))

(assert (=> bs!4600 m!124087))

(assert (=> bs!4600 m!124521))

(assert (=> bs!4600 m!124087))

(declare-fun m!127237 () Bool)

(assert (=> bs!4600 m!127237))

(assert (=> d!30853 d!31753))

(assert (=> d!30853 d!30971))

(declare-fun d!31755 () Bool)

(assert (=> d!31755 (= (arrayCountValidKeys!0 lt!56737 (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (bvadd (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!57564 () Unit!3382)

(declare-fun choose!2 (array!4371 (_ BitVec 32)) Unit!3382)

(assert (=> d!31755 (= lt!57564 (choose!2 lt!56737 (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646))))))

(declare-fun e!72528 () Bool)

(assert (=> d!31755 e!72528))

(declare-fun res!55088 () Bool)

(assert (=> d!31755 (=> (not res!55088) (not e!72528))))

(assert (=> d!31755 (= res!55088 (and (bvsge (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) #b00000000000000000000000000000000) (bvslt (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (size!2329 lt!56737))))))

(assert (=> d!31755 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!56737 (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646))) lt!57564)))

(declare-fun b!111587 () Bool)

(declare-fun res!55089 () Bool)

(assert (=> b!111587 (=> (not res!55089) (not e!72528))))

(assert (=> b!111587 (= res!55089 (validKeyInArray!0 (select (arr!2072 lt!56737) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)))))))

(declare-fun b!111588 () Bool)

(assert (=> b!111588 (= e!72528 (bvslt (size!2329 lt!56737) #b01111111111111111111111111111111))))

(assert (= (and d!31755 res!55088) b!111587))

(assert (= (and b!111587 res!55089) b!111588))

(assert (=> d!31755 m!124489))

(declare-fun m!127239 () Bool)

(assert (=> d!31755 m!127239))

(declare-fun m!127241 () Bool)

(assert (=> b!111587 m!127241))

(assert (=> b!111587 m!127241))

(declare-fun m!127243 () Bool)

(assert (=> b!111587 m!127243))

(assert (=> d!30853 d!31755))

(declare-fun b!111589 () Bool)

(declare-fun e!72530 () (_ BitVec 32))

(declare-fun call!11913 () (_ BitVec 32))

(assert (=> b!111589 (= e!72530 (bvadd #b00000000000000000000000000000001 call!11913))))

(declare-fun d!31757 () Bool)

(declare-fun lt!57565 () (_ BitVec 32))

(assert (=> d!31757 (and (bvsge lt!57565 #b00000000000000000000000000000000) (bvsle lt!57565 (bvsub (size!2329 lt!56737) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)))))))

(declare-fun e!72529 () (_ BitVec 32))

(assert (=> d!31757 (= lt!57565 e!72529)))

(declare-fun c!19921 () Bool)

(assert (=> d!31757 (= c!19921 (bvsge (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (bvadd (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) #b00000000000000000000000000000001)))))

(assert (=> d!31757 (and (bvsle (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (bvadd (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) #b00000000000000000000000000000001)) (bvsge (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) #b00000000000000000000000000000001) (size!2329 lt!56737)))))

(assert (=> d!31757 (= (arrayCountValidKeys!0 lt!56737 (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) (bvadd (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) #b00000000000000000000000000000001)) lt!57565)))

(declare-fun b!111590 () Bool)

(assert (=> b!111590 (= e!72529 #b00000000000000000000000000000000)))

(declare-fun b!111591 () Bool)

(assert (=> b!111591 (= e!72530 call!11913)))

(declare-fun bm!11910 () Bool)

(assert (=> bm!11910 (= call!11913 (arrayCountValidKeys!0 lt!56737 (bvadd (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) #b00000000000000000000000000000001) (bvadd (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)) #b00000000000000000000000000000001)))))

(declare-fun b!111592 () Bool)

(assert (=> b!111592 (= e!72529 e!72530)))

(declare-fun c!19920 () Bool)

(assert (=> b!111592 (= c!19920 (validKeyInArray!0 (select (arr!2072 lt!56737) (ite c!19453 (index!3173 lt!56646) (index!3170 lt!56646)))))))

(assert (= (and d!31757 c!19921) b!111590))

(assert (= (and d!31757 (not c!19921)) b!111592))

(assert (= (and b!111592 c!19920) b!111589))

(assert (= (and b!111592 (not c!19920)) b!111591))

(assert (= (or b!111589 b!111591) bm!11910))

(declare-fun m!127245 () Bool)

(assert (=> bm!11910 m!127245))

(assert (=> b!111592 m!127241))

(assert (=> b!111592 m!127241))

(assert (=> b!111592 m!127243))

(assert (=> d!30853 d!31757))

(assert (=> d!30853 d!31031))

(declare-fun d!31759 () Bool)

(assert (=> d!31759 (= (apply!100 lt!56908 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)) (get!1356 (getValueByKey!159 (toList!789 lt!56908) (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!4601 () Bool)

(assert (= bs!4601 d!31759))

(assert (=> bs!4601 m!124605))

(declare-fun m!127247 () Bool)

(assert (=> bs!4601 m!127247))

(assert (=> bs!4601 m!127247))

(declare-fun m!127249 () Bool)

(assert (=> bs!4601 m!127249))

(assert (=> b!110296 d!31759))

(declare-fun d!31761 () Bool)

(declare-fun c!19922 () Bool)

(assert (=> d!31761 (= c!19922 ((_ is ValueCellFull!1004) (select (arr!2073 (_values!2609 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!72531 () V!3241)

(assert (=> d!31761 (= (get!1353 (select (arr!2073 (_values!2609 newMap!16)) #b00000000000000000000000000000000) (dynLambda!390 (defaultEntry!2626 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!72531)))

(declare-fun b!111593 () Bool)

(assert (=> b!111593 (= e!72531 (get!1354 (select (arr!2073 (_values!2609 newMap!16)) #b00000000000000000000000000000000) (dynLambda!390 (defaultEntry!2626 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!111594 () Bool)

(assert (=> b!111594 (= e!72531 (get!1355 (select (arr!2073 (_values!2609 newMap!16)) #b00000000000000000000000000000000) (dynLambda!390 (defaultEntry!2626 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!31761 c!19922) b!111593))

(assert (= (and d!31761 (not c!19922)) b!111594))

(assert (=> b!111593 m!124973))

(assert (=> b!111593 m!124767))

(declare-fun m!127251 () Bool)

(assert (=> b!111593 m!127251))

(assert (=> b!111594 m!124973))

(assert (=> b!111594 m!124767))

(declare-fun m!127253 () Bool)

(assert (=> b!111594 m!127253))

(assert (=> b!110296 d!31761))

(declare-fun d!31763 () Bool)

(assert (=> d!31763 (isDefined!111 (getValueByKey!159 (toList!789 lt!56483) (_1!1205 lt!56363)))))

(declare-fun lt!57566 () Unit!3382)

(assert (=> d!31763 (= lt!57566 (choose!696 (toList!789 lt!56483) (_1!1205 lt!56363)))))

(declare-fun e!72532 () Bool)

(assert (=> d!31763 e!72532))

(declare-fun res!55090 () Bool)

(assert (=> d!31763 (=> (not res!55090) (not e!72532))))

(assert (=> d!31763 (= res!55090 (isStrictlySorted!298 (toList!789 lt!56483)))))

(assert (=> d!31763 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 lt!56483) (_1!1205 lt!56363)) lt!57566)))

(declare-fun b!111595 () Bool)

(assert (=> b!111595 (= e!72532 (containsKey!162 (toList!789 lt!56483) (_1!1205 lt!56363)))))

(assert (= (and d!31763 res!55090) b!111595))

(assert (=> d!31763 m!124303))

(assert (=> d!31763 m!124303))

(assert (=> d!31763 m!125041))

(declare-fun m!127255 () Bool)

(assert (=> d!31763 m!127255))

(declare-fun m!127257 () Bool)

(assert (=> d!31763 m!127257))

(assert (=> b!111595 m!125037))

(assert (=> b!110346 d!31763))

(assert (=> b!110346 d!31533))

(assert (=> b!110346 d!31027))

(declare-fun d!31765 () Bool)

(declare-fun res!55091 () Bool)

(declare-fun e!72533 () Bool)

(assert (=> d!31765 (=> res!55091 e!72533)))

(assert (=> d!31765 (= res!55091 (and ((_ is Cons!1605) (toList!789 lt!56479)) (= (_1!1205 (h!2204 (toList!789 lt!56479))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!31765 (= (containsKey!162 (toList!789 lt!56479) #b1000000000000000000000000000000000000000000000000000000000000000) e!72533)))

(declare-fun b!111596 () Bool)

(declare-fun e!72534 () Bool)

(assert (=> b!111596 (= e!72533 e!72534)))

(declare-fun res!55092 () Bool)

(assert (=> b!111596 (=> (not res!55092) (not e!72534))))

(assert (=> b!111596 (= res!55092 (and (or (not ((_ is Cons!1605) (toList!789 lt!56479))) (bvsle (_1!1205 (h!2204 (toList!789 lt!56479))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1605) (toList!789 lt!56479)) (bvslt (_1!1205 (h!2204 (toList!789 lt!56479))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!111597 () Bool)

(assert (=> b!111597 (= e!72534 (containsKey!162 (t!5738 (toList!789 lt!56479)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!31765 (not res!55091)) b!111596))

(assert (= (and b!111596 res!55092) b!111597))

(declare-fun m!127259 () Bool)

(assert (=> b!111597 m!127259))

(assert (=> d!31009 d!31765))

(declare-fun d!31767 () Bool)

(declare-fun e!72536 () Bool)

(assert (=> d!31767 e!72536))

(declare-fun res!55093 () Bool)

(assert (=> d!31767 (=> res!55093 e!72536)))

(declare-fun lt!57569 () Bool)

(assert (=> d!31767 (= res!55093 (not lt!57569))))

(declare-fun lt!57570 () Bool)

(assert (=> d!31767 (= lt!57569 lt!57570)))

(declare-fun lt!57567 () Unit!3382)

(declare-fun e!72535 () Unit!3382)

(assert (=> d!31767 (= lt!57567 e!72535)))

(declare-fun c!19923 () Bool)

(assert (=> d!31767 (= c!19923 lt!57570)))

(assert (=> d!31767 (= lt!57570 (containsKey!162 (toList!789 lt!56908) (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!31767 (= (contains!824 lt!56908 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)) lt!57569)))

(declare-fun b!111598 () Bool)

(declare-fun lt!57568 () Unit!3382)

(assert (=> b!111598 (= e!72535 lt!57568)))

(assert (=> b!111598 (= lt!57568 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 lt!56908) (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!111598 (isDefined!111 (getValueByKey!159 (toList!789 lt!56908) (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!111599 () Bool)

(declare-fun Unit!3457 () Unit!3382)

(assert (=> b!111599 (= e!72535 Unit!3457)))

(declare-fun b!111600 () Bool)

(assert (=> b!111600 (= e!72536 (isDefined!111 (getValueByKey!159 (toList!789 lt!56908) (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!31767 c!19923) b!111598))

(assert (= (and d!31767 (not c!19923)) b!111599))

(assert (= (and d!31767 (not res!55093)) b!111600))

(assert (=> d!31767 m!124605))

(declare-fun m!127261 () Bool)

(assert (=> d!31767 m!127261))

(assert (=> b!111598 m!124605))

(declare-fun m!127263 () Bool)

(assert (=> b!111598 m!127263))

(assert (=> b!111598 m!124605))

(assert (=> b!111598 m!127247))

(assert (=> b!111598 m!127247))

(declare-fun m!127265 () Bool)

(assert (=> b!111598 m!127265))

(assert (=> b!111600 m!124605))

(assert (=> b!111600 m!127247))

(assert (=> b!111600 m!127247))

(assert (=> b!111600 m!127265))

(assert (=> b!110289 d!31767))

(declare-fun d!31769 () Bool)

(assert (=> d!31769 (= (inRange!0 (ite c!19479 (index!3171 lt!56735) (ite c!19481 (index!3170 lt!56734) (index!3173 lt!56734))) (mask!6794 newMap!16)) (and (bvsge (ite c!19479 (index!3171 lt!56735) (ite c!19481 (index!3170 lt!56734) (index!3173 lt!56734))) #b00000000000000000000000000000000) (bvslt (ite c!19479 (index!3171 lt!56735) (ite c!19481 (index!3170 lt!56734) (index!3173 lt!56734))) (bvadd (mask!6794 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!11728 d!31769))

(assert (=> d!31005 d!31187))

(assert (=> d!30941 d!30951))

(assert (=> d!30941 d!30955))

(declare-fun d!31771 () Bool)

(assert (=> d!31771 (contains!824 (+!144 lt!56546 (tuple2!2389 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))))) lt!56548)))

(assert (=> d!31771 true))

(declare-fun _$35!354 () Unit!3382)

(assert (=> d!31771 (= (choose!698 lt!56546 lt!56553 (zeroValue!2497 (v!2930 (underlying!370 thiss!992))) lt!56548) _$35!354)))

(declare-fun bs!4602 () Bool)

(assert (= bs!4602 d!31771))

(assert (=> bs!4602 m!124343))

(assert (=> bs!4602 m!124343))

(assert (=> bs!4602 m!124345))

(assert (=> d!30941 d!31771))

(declare-fun d!31773 () Bool)

(declare-fun e!72538 () Bool)

(assert (=> d!31773 e!72538))

(declare-fun res!55094 () Bool)

(assert (=> d!31773 (=> res!55094 e!72538)))

(declare-fun lt!57573 () Bool)

(assert (=> d!31773 (= res!55094 (not lt!57573))))

(declare-fun lt!57574 () Bool)

(assert (=> d!31773 (= lt!57573 lt!57574)))

(declare-fun lt!57571 () Unit!3382)

(declare-fun e!72537 () Unit!3382)

(assert (=> d!31773 (= lt!57571 e!72537)))

(declare-fun c!19924 () Bool)

(assert (=> d!31773 (= c!19924 lt!57574)))

(assert (=> d!31773 (= lt!57574 (containsKey!162 (toList!789 lt!56546) lt!56548))))

(assert (=> d!31773 (= (contains!824 lt!56546 lt!56548) lt!57573)))

(declare-fun b!111602 () Bool)

(declare-fun lt!57572 () Unit!3382)

(assert (=> b!111602 (= e!72537 lt!57572)))

(assert (=> b!111602 (= lt!57572 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 lt!56546) lt!56548))))

(assert (=> b!111602 (isDefined!111 (getValueByKey!159 (toList!789 lt!56546) lt!56548))))

(declare-fun b!111603 () Bool)

(declare-fun Unit!3458 () Unit!3382)

(assert (=> b!111603 (= e!72537 Unit!3458)))

(declare-fun b!111604 () Bool)

(assert (=> b!111604 (= e!72538 (isDefined!111 (getValueByKey!159 (toList!789 lt!56546) lt!56548)))))

(assert (= (and d!31773 c!19924) b!111602))

(assert (= (and d!31773 (not c!19924)) b!111603))

(assert (= (and d!31773 (not res!55094)) b!111604))

(declare-fun m!127267 () Bool)

(assert (=> d!31773 m!127267))

(declare-fun m!127269 () Bool)

(assert (=> b!111602 m!127269))

(declare-fun m!127271 () Bool)

(assert (=> b!111602 m!127271))

(assert (=> b!111602 m!127271))

(declare-fun m!127273 () Bool)

(assert (=> b!111602 m!127273))

(assert (=> b!111604 m!127271))

(assert (=> b!111604 m!127271))

(assert (=> b!111604 m!127273))

(assert (=> d!30941 d!31773))

(declare-fun d!31775 () Bool)

(assert (=> d!31775 (= (apply!100 lt!56831 (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000)) (get!1356 (getValueByKey!159 (toList!789 lt!56831) (select (arr!2072 (_keys!4340 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!4603 () Bool)

(assert (= bs!4603 d!31775))

(assert (=> bs!4603 m!124605))

(assert (=> bs!4603 m!125375))

(assert (=> bs!4603 m!125375))

(declare-fun m!127275 () Bool)

(assert (=> bs!4603 m!127275))

(assert (=> b!110174 d!31775))

(declare-fun d!31777 () Bool)

(declare-fun c!19925 () Bool)

(assert (=> d!31777 (= c!19925 ((_ is ValueCellFull!1004) (select (arr!2073 (ite c!19460 (_values!2609 newMap!16) lt!56625)) #b00000000000000000000000000000000)))))

(declare-fun e!72539 () V!3241)

(assert (=> d!31777 (= (get!1353 (select (arr!2073 (ite c!19460 (_values!2609 newMap!16) lt!56625)) #b00000000000000000000000000000000) (dynLambda!390 (defaultEntry!2626 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!72539)))

(declare-fun b!111605 () Bool)

(assert (=> b!111605 (= e!72539 (get!1354 (select (arr!2073 (ite c!19460 (_values!2609 newMap!16) lt!56625)) #b00000000000000000000000000000000) (dynLambda!390 (defaultEntry!2626 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!111606 () Bool)

(assert (=> b!111606 (= e!72539 (get!1355 (select (arr!2073 (ite c!19460 (_values!2609 newMap!16) lt!56625)) #b00000000000000000000000000000000) (dynLambda!390 (defaultEntry!2626 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!31777 c!19925) b!111605))

(assert (= (and d!31777 (not c!19925)) b!111606))

(assert (=> b!111605 m!124765))

(assert (=> b!111605 m!124767))

(declare-fun m!127277 () Bool)

(assert (=> b!111605 m!127277))

(assert (=> b!111606 m!124765))

(assert (=> b!111606 m!124767))

(declare-fun m!127279 () Bool)

(assert (=> b!111606 m!127279))

(assert (=> b!110174 d!31777))

(assert (=> d!31049 d!31051))

(assert (=> d!31049 d!31043))

(assert (=> d!31049 d!31047))

(assert (=> d!31049 d!31045))

(declare-fun d!31779 () Bool)

(assert (=> d!31779 (= (apply!100 (+!144 lt!56822 (tuple2!2389 lt!56827 (minValue!2497 newMap!16))) lt!56824) (apply!100 lt!56822 lt!56824))))

(declare-fun lt!57575 () Unit!3382)

(assert (=> d!31779 (= lt!57575 (choose!697 lt!56822 lt!56827 (minValue!2497 newMap!16) lt!56824))))

(declare-fun e!72540 () Bool)

(assert (=> d!31779 e!72540))

(declare-fun res!55095 () Bool)

(assert (=> d!31779 (=> (not res!55095) (not e!72540))))

(assert (=> d!31779 (= res!55095 (contains!824 lt!56822 lt!56824))))

(assert (=> d!31779 (= (addApplyDifferent!76 lt!56822 lt!56827 (minValue!2497 newMap!16) lt!56824) lt!57575)))

(declare-fun b!111607 () Bool)

(assert (=> b!111607 (= e!72540 (not (= lt!56824 lt!56827)))))

(assert (= (and d!31779 res!55095) b!111607))

(assert (=> d!31779 m!124733))

(assert (=> d!31779 m!124733))

(assert (=> d!31779 m!124735))

(assert (=> d!31779 m!124737))

(declare-fun m!127281 () Bool)

(assert (=> d!31779 m!127281))

(declare-fun m!127283 () Bool)

(assert (=> d!31779 m!127283))

(assert (=> b!110168 d!31779))

(declare-fun d!31781 () Bool)

(declare-fun e!72541 () Bool)

(assert (=> d!31781 e!72541))

(declare-fun res!55097 () Bool)

(assert (=> d!31781 (=> (not res!55097) (not e!72541))))

(declare-fun lt!57579 () ListLongMap!1547)

(assert (=> d!31781 (= res!55097 (contains!824 lt!57579 (_1!1205 (tuple2!2389 lt!56829 (minValue!2497 newMap!16)))))))

(declare-fun lt!57578 () List!1609)

(assert (=> d!31781 (= lt!57579 (ListLongMap!1548 lt!57578))))

(declare-fun lt!57577 () Unit!3382)

(declare-fun lt!57576 () Unit!3382)

(assert (=> d!31781 (= lt!57577 lt!57576)))

(assert (=> d!31781 (= (getValueByKey!159 lt!57578 (_1!1205 (tuple2!2389 lt!56829 (minValue!2497 newMap!16)))) (Some!164 (_2!1205 (tuple2!2389 lt!56829 (minValue!2497 newMap!16)))))))

(assert (=> d!31781 (= lt!57576 (lemmaContainsTupThenGetReturnValue!75 lt!57578 (_1!1205 (tuple2!2389 lt!56829 (minValue!2497 newMap!16))) (_2!1205 (tuple2!2389 lt!56829 (minValue!2497 newMap!16)))))))

(assert (=> d!31781 (= lt!57578 (insertStrictlySorted!78 (toList!789 lt!56840) (_1!1205 (tuple2!2389 lt!56829 (minValue!2497 newMap!16))) (_2!1205 (tuple2!2389 lt!56829 (minValue!2497 newMap!16)))))))

(assert (=> d!31781 (= (+!144 lt!56840 (tuple2!2389 lt!56829 (minValue!2497 newMap!16))) lt!57579)))

(declare-fun b!111608 () Bool)

(declare-fun res!55096 () Bool)

(assert (=> b!111608 (=> (not res!55096) (not e!72541))))

(assert (=> b!111608 (= res!55096 (= (getValueByKey!159 (toList!789 lt!57579) (_1!1205 (tuple2!2389 lt!56829 (minValue!2497 newMap!16)))) (Some!164 (_2!1205 (tuple2!2389 lt!56829 (minValue!2497 newMap!16))))))))

(declare-fun b!111609 () Bool)

(assert (=> b!111609 (= e!72541 (contains!827 (toList!789 lt!57579) (tuple2!2389 lt!56829 (minValue!2497 newMap!16))))))

(assert (= (and d!31781 res!55097) b!111608))

(assert (= (and b!111608 res!55096) b!111609))

(declare-fun m!127285 () Bool)

(assert (=> d!31781 m!127285))

(declare-fun m!127287 () Bool)

(assert (=> d!31781 m!127287))

(declare-fun m!127289 () Bool)

(assert (=> d!31781 m!127289))

(declare-fun m!127291 () Bool)

(assert (=> d!31781 m!127291))

(declare-fun m!127293 () Bool)

(assert (=> b!111608 m!127293))

(declare-fun m!127295 () Bool)

(assert (=> b!111609 m!127295))

(assert (=> b!110168 d!31781))

(declare-fun d!31783 () Bool)

(declare-fun e!72543 () Bool)

(assert (=> d!31783 e!72543))

(declare-fun res!55098 () Bool)

(assert (=> d!31783 (=> res!55098 e!72543)))

(declare-fun lt!57582 () Bool)

(assert (=> d!31783 (= res!55098 (not lt!57582))))

(declare-fun lt!57583 () Bool)

(assert (=> d!31783 (= lt!57582 lt!57583)))

(declare-fun lt!57580 () Unit!3382)

(declare-fun e!72542 () Unit!3382)

(assert (=> d!31783 (= lt!57580 e!72542)))

(declare-fun c!19926 () Bool)

(assert (=> d!31783 (= c!19926 lt!57583)))

(assert (=> d!31783 (= lt!57583 (containsKey!162 (toList!789 (+!144 lt!56832 (tuple2!2389 lt!56839 (zeroValue!2497 newMap!16)))) lt!56834))))

(assert (=> d!31783 (= (contains!824 (+!144 lt!56832 (tuple2!2389 lt!56839 (zeroValue!2497 newMap!16))) lt!56834) lt!57582)))

(declare-fun b!111610 () Bool)

(declare-fun lt!57581 () Unit!3382)

(assert (=> b!111610 (= e!72542 lt!57581)))

(assert (=> b!111610 (= lt!57581 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 (+!144 lt!56832 (tuple2!2389 lt!56839 (zeroValue!2497 newMap!16)))) lt!56834))))

(assert (=> b!111610 (isDefined!111 (getValueByKey!159 (toList!789 (+!144 lt!56832 (tuple2!2389 lt!56839 (zeroValue!2497 newMap!16)))) lt!56834))))

(declare-fun b!111611 () Bool)

(declare-fun Unit!3459 () Unit!3382)

(assert (=> b!111611 (= e!72542 Unit!3459)))

(declare-fun b!111612 () Bool)

(assert (=> b!111612 (= e!72543 (isDefined!111 (getValueByKey!159 (toList!789 (+!144 lt!56832 (tuple2!2389 lt!56839 (zeroValue!2497 newMap!16)))) lt!56834)))))

(assert (= (and d!31783 c!19926) b!111610))

(assert (= (and d!31783 (not c!19926)) b!111611))

(assert (= (and d!31783 (not res!55098)) b!111612))

(declare-fun m!127297 () Bool)

(assert (=> d!31783 m!127297))

(declare-fun m!127299 () Bool)

(assert (=> b!111610 m!127299))

(declare-fun m!127301 () Bool)

(assert (=> b!111610 m!127301))

(assert (=> b!111610 m!127301))

(declare-fun m!127303 () Bool)

(assert (=> b!111610 m!127303))

(assert (=> b!111612 m!127301))

(assert (=> b!111612 m!127301))

(assert (=> b!111612 m!127303))

(assert (=> b!110168 d!31783))

(declare-fun d!31785 () Bool)

(assert (=> d!31785 (= (apply!100 (+!144 lt!56822 (tuple2!2389 lt!56827 (minValue!2497 newMap!16))) lt!56824) (get!1356 (getValueByKey!159 (toList!789 (+!144 lt!56822 (tuple2!2389 lt!56827 (minValue!2497 newMap!16)))) lt!56824)))))

(declare-fun bs!4604 () Bool)

(assert (= bs!4604 d!31785))

(declare-fun m!127305 () Bool)

(assert (=> bs!4604 m!127305))

(assert (=> bs!4604 m!127305))

(declare-fun m!127307 () Bool)

(assert (=> bs!4604 m!127307))

(assert (=> b!110168 d!31785))

(declare-fun d!31787 () Bool)

(assert (=> d!31787 (= (apply!100 (+!144 lt!56830 (tuple2!2389 lt!56841 (zeroValue!2497 newMap!16))) lt!56836) (get!1356 (getValueByKey!159 (toList!789 (+!144 lt!56830 (tuple2!2389 lt!56841 (zeroValue!2497 newMap!16)))) lt!56836)))))

(declare-fun bs!4605 () Bool)

(assert (= bs!4605 d!31787))

(declare-fun m!127309 () Bool)

(assert (=> bs!4605 m!127309))

(assert (=> bs!4605 m!127309))

(declare-fun m!127311 () Bool)

(assert (=> bs!4605 m!127311))

(assert (=> b!110168 d!31787))

(declare-fun d!31789 () Bool)

(assert (=> d!31789 (= (apply!100 lt!56830 lt!56836) (get!1356 (getValueByKey!159 (toList!789 lt!56830) lt!56836)))))

(declare-fun bs!4606 () Bool)

(assert (= bs!4606 d!31789))

(declare-fun m!127313 () Bool)

(assert (=> bs!4606 m!127313))

(assert (=> bs!4606 m!127313))

(declare-fun m!127315 () Bool)

(assert (=> bs!4606 m!127315))

(assert (=> b!110168 d!31789))

(declare-fun d!31791 () Bool)

(assert (=> d!31791 (= (apply!100 (+!144 lt!56830 (tuple2!2389 lt!56841 (zeroValue!2497 newMap!16))) lt!56836) (apply!100 lt!56830 lt!56836))))

(declare-fun lt!57584 () Unit!3382)

(assert (=> d!31791 (= lt!57584 (choose!697 lt!56830 lt!56841 (zeroValue!2497 newMap!16) lt!56836))))

(declare-fun e!72544 () Bool)

(assert (=> d!31791 e!72544))

(declare-fun res!55099 () Bool)

(assert (=> d!31791 (=> (not res!55099) (not e!72544))))

(assert (=> d!31791 (= res!55099 (contains!824 lt!56830 lt!56836))))

(assert (=> d!31791 (= (addApplyDifferent!76 lt!56830 lt!56841 (zeroValue!2497 newMap!16) lt!56836) lt!57584)))

(declare-fun b!111613 () Bool)

(assert (=> b!111613 (= e!72544 (not (= lt!56836 lt!56841)))))

(assert (= (and d!31791 res!55099) b!111613))

(assert (=> d!31791 m!124739))

(assert (=> d!31791 m!124739))

(assert (=> d!31791 m!124741))

(assert (=> d!31791 m!124721))

(declare-fun m!127317 () Bool)

(assert (=> d!31791 m!127317))

(declare-fun m!127319 () Bool)

(assert (=> d!31791 m!127319))

(assert (=> b!110168 d!31791))

(declare-fun d!31793 () Bool)

(assert (=> d!31793 (contains!824 (+!144 lt!56832 (tuple2!2389 lt!56839 (zeroValue!2497 newMap!16))) lt!56834)))

(declare-fun lt!57585 () Unit!3382)

(assert (=> d!31793 (= lt!57585 (choose!698 lt!56832 lt!56839 (zeroValue!2497 newMap!16) lt!56834))))

(assert (=> d!31793 (contains!824 lt!56832 lt!56834)))

(assert (=> d!31793 (= (addStillContains!76 lt!56832 lt!56839 (zeroValue!2497 newMap!16) lt!56834) lt!57585)))

(declare-fun bs!4607 () Bool)

(assert (= bs!4607 d!31793))

(assert (=> bs!4607 m!124729))

(assert (=> bs!4607 m!124729))

(assert (=> bs!4607 m!124731))

(declare-fun m!127321 () Bool)

(assert (=> bs!4607 m!127321))

(declare-fun m!127323 () Bool)

(assert (=> bs!4607 m!127323))

(assert (=> b!110168 d!31793))

(assert (=> b!110168 d!31299))

(declare-fun d!31795 () Bool)

(declare-fun e!72545 () Bool)

(assert (=> d!31795 e!72545))

(declare-fun res!55101 () Bool)

(assert (=> d!31795 (=> (not res!55101) (not e!72545))))

(declare-fun lt!57589 () ListLongMap!1547)

(assert (=> d!31795 (= res!55101 (contains!824 lt!57589 (_1!1205 (tuple2!2389 lt!56841 (zeroValue!2497 newMap!16)))))))

(declare-fun lt!57588 () List!1609)

(assert (=> d!31795 (= lt!57589 (ListLongMap!1548 lt!57588))))

(declare-fun lt!57587 () Unit!3382)

(declare-fun lt!57586 () Unit!3382)

(assert (=> d!31795 (= lt!57587 lt!57586)))

(assert (=> d!31795 (= (getValueByKey!159 lt!57588 (_1!1205 (tuple2!2389 lt!56841 (zeroValue!2497 newMap!16)))) (Some!164 (_2!1205 (tuple2!2389 lt!56841 (zeroValue!2497 newMap!16)))))))

(assert (=> d!31795 (= lt!57586 (lemmaContainsTupThenGetReturnValue!75 lt!57588 (_1!1205 (tuple2!2389 lt!56841 (zeroValue!2497 newMap!16))) (_2!1205 (tuple2!2389 lt!56841 (zeroValue!2497 newMap!16)))))))

(assert (=> d!31795 (= lt!57588 (insertStrictlySorted!78 (toList!789 lt!56830) (_1!1205 (tuple2!2389 lt!56841 (zeroValue!2497 newMap!16))) (_2!1205 (tuple2!2389 lt!56841 (zeroValue!2497 newMap!16)))))))

(assert (=> d!31795 (= (+!144 lt!56830 (tuple2!2389 lt!56841 (zeroValue!2497 newMap!16))) lt!57589)))

(declare-fun b!111614 () Bool)

(declare-fun res!55100 () Bool)

(assert (=> b!111614 (=> (not res!55100) (not e!72545))))

(assert (=> b!111614 (= res!55100 (= (getValueByKey!159 (toList!789 lt!57589) (_1!1205 (tuple2!2389 lt!56841 (zeroValue!2497 newMap!16)))) (Some!164 (_2!1205 (tuple2!2389 lt!56841 (zeroValue!2497 newMap!16))))))))

(declare-fun b!111615 () Bool)

(assert (=> b!111615 (= e!72545 (contains!827 (toList!789 lt!57589) (tuple2!2389 lt!56841 (zeroValue!2497 newMap!16))))))

(assert (= (and d!31795 res!55101) b!111614))

(assert (= (and b!111614 res!55100) b!111615))

(declare-fun m!127325 () Bool)

(assert (=> d!31795 m!127325))

(declare-fun m!127327 () Bool)

(assert (=> d!31795 m!127327))

(declare-fun m!127329 () Bool)

(assert (=> d!31795 m!127329))

(declare-fun m!127331 () Bool)

(assert (=> d!31795 m!127331))

(declare-fun m!127333 () Bool)

(assert (=> b!111614 m!127333))

(declare-fun m!127335 () Bool)

(assert (=> b!111615 m!127335))

(assert (=> b!110168 d!31795))

(declare-fun d!31797 () Bool)

(declare-fun e!72546 () Bool)

(assert (=> d!31797 e!72546))

(declare-fun res!55103 () Bool)

(assert (=> d!31797 (=> (not res!55103) (not e!72546))))

(declare-fun lt!57593 () ListLongMap!1547)

(assert (=> d!31797 (= res!55103 (contains!824 lt!57593 (_1!1205 (tuple2!2389 lt!56839 (zeroValue!2497 newMap!16)))))))

(declare-fun lt!57592 () List!1609)

(assert (=> d!31797 (= lt!57593 (ListLongMap!1548 lt!57592))))

(declare-fun lt!57591 () Unit!3382)

(declare-fun lt!57590 () Unit!3382)

(assert (=> d!31797 (= lt!57591 lt!57590)))

(assert (=> d!31797 (= (getValueByKey!159 lt!57592 (_1!1205 (tuple2!2389 lt!56839 (zeroValue!2497 newMap!16)))) (Some!164 (_2!1205 (tuple2!2389 lt!56839 (zeroValue!2497 newMap!16)))))))

(assert (=> d!31797 (= lt!57590 (lemmaContainsTupThenGetReturnValue!75 lt!57592 (_1!1205 (tuple2!2389 lt!56839 (zeroValue!2497 newMap!16))) (_2!1205 (tuple2!2389 lt!56839 (zeroValue!2497 newMap!16)))))))

(assert (=> d!31797 (= lt!57592 (insertStrictlySorted!78 (toList!789 lt!56832) (_1!1205 (tuple2!2389 lt!56839 (zeroValue!2497 newMap!16))) (_2!1205 (tuple2!2389 lt!56839 (zeroValue!2497 newMap!16)))))))

(assert (=> d!31797 (= (+!144 lt!56832 (tuple2!2389 lt!56839 (zeroValue!2497 newMap!16))) lt!57593)))

(declare-fun b!111616 () Bool)

(declare-fun res!55102 () Bool)

(assert (=> b!111616 (=> (not res!55102) (not e!72546))))

(assert (=> b!111616 (= res!55102 (= (getValueByKey!159 (toList!789 lt!57593) (_1!1205 (tuple2!2389 lt!56839 (zeroValue!2497 newMap!16)))) (Some!164 (_2!1205 (tuple2!2389 lt!56839 (zeroValue!2497 newMap!16))))))))

(declare-fun b!111617 () Bool)

(assert (=> b!111617 (= e!72546 (contains!827 (toList!789 lt!57593) (tuple2!2389 lt!56839 (zeroValue!2497 newMap!16))))))

(assert (= (and d!31797 res!55103) b!111616))

(assert (= (and b!111616 res!55102) b!111617))

(declare-fun m!127337 () Bool)

(assert (=> d!31797 m!127337))

(declare-fun m!127339 () Bool)

(assert (=> d!31797 m!127339))

(declare-fun m!127341 () Bool)

(assert (=> d!31797 m!127341))

(declare-fun m!127343 () Bool)

(assert (=> d!31797 m!127343))

(declare-fun m!127345 () Bool)

(assert (=> b!111616 m!127345))

(declare-fun m!127347 () Bool)

(assert (=> b!111617 m!127347))

(assert (=> b!110168 d!31797))

(declare-fun d!31799 () Bool)

(assert (=> d!31799 (= (apply!100 (+!144 lt!56840 (tuple2!2389 lt!56829 (minValue!2497 newMap!16))) lt!56823) (apply!100 lt!56840 lt!56823))))

(declare-fun lt!57594 () Unit!3382)

(assert (=> d!31799 (= lt!57594 (choose!697 lt!56840 lt!56829 (minValue!2497 newMap!16) lt!56823))))

(declare-fun e!72547 () Bool)

(assert (=> d!31799 e!72547))

(declare-fun res!55104 () Bool)

(assert (=> d!31799 (=> (not res!55104) (not e!72547))))

(assert (=> d!31799 (= res!55104 (contains!824 lt!56840 lt!56823))))

(assert (=> d!31799 (= (addApplyDifferent!76 lt!56840 lt!56829 (minValue!2497 newMap!16) lt!56823) lt!57594)))

(declare-fun b!111618 () Bool)

(assert (=> b!111618 (= e!72547 (not (= lt!56823 lt!56829)))))

(assert (= (and d!31799 res!55104) b!111618))

(assert (=> d!31799 m!124747))

(assert (=> d!31799 m!124747))

(assert (=> d!31799 m!124749))

(assert (=> d!31799 m!124723))

(declare-fun m!127349 () Bool)

(assert (=> d!31799 m!127349))

(declare-fun m!127351 () Bool)

(assert (=> d!31799 m!127351))

(assert (=> b!110168 d!31799))

(declare-fun d!31801 () Bool)

(assert (=> d!31801 (= (apply!100 lt!56822 lt!56824) (get!1356 (getValueByKey!159 (toList!789 lt!56822) lt!56824)))))

(declare-fun bs!4608 () Bool)

(assert (= bs!4608 d!31801))

(declare-fun m!127353 () Bool)

(assert (=> bs!4608 m!127353))

(assert (=> bs!4608 m!127353))

(declare-fun m!127355 () Bool)

(assert (=> bs!4608 m!127355))

(assert (=> b!110168 d!31801))

(declare-fun d!31803 () Bool)

(assert (=> d!31803 (= (apply!100 (+!144 lt!56840 (tuple2!2389 lt!56829 (minValue!2497 newMap!16))) lt!56823) (get!1356 (getValueByKey!159 (toList!789 (+!144 lt!56840 (tuple2!2389 lt!56829 (minValue!2497 newMap!16)))) lt!56823)))))

(declare-fun bs!4609 () Bool)

(assert (= bs!4609 d!31803))

(declare-fun m!127357 () Bool)

(assert (=> bs!4609 m!127357))

(assert (=> bs!4609 m!127357))

(declare-fun m!127359 () Bool)

(assert (=> bs!4609 m!127359))

(assert (=> b!110168 d!31803))

(declare-fun d!31805 () Bool)

(assert (=> d!31805 (= (apply!100 lt!56840 lt!56823) (get!1356 (getValueByKey!159 (toList!789 lt!56840) lt!56823)))))

(declare-fun bs!4610 () Bool)

(assert (= bs!4610 d!31805))

(declare-fun m!127361 () Bool)

(assert (=> bs!4610 m!127361))

(assert (=> bs!4610 m!127361))

(declare-fun m!127363 () Bool)

(assert (=> bs!4610 m!127363))

(assert (=> b!110168 d!31805))

(declare-fun d!31807 () Bool)

(declare-fun e!72548 () Bool)

(assert (=> d!31807 e!72548))

(declare-fun res!55106 () Bool)

(assert (=> d!31807 (=> (not res!55106) (not e!72548))))

(declare-fun lt!57598 () ListLongMap!1547)

(assert (=> d!31807 (= res!55106 (contains!824 lt!57598 (_1!1205 (tuple2!2389 lt!56827 (minValue!2497 newMap!16)))))))

(declare-fun lt!57597 () List!1609)

(assert (=> d!31807 (= lt!57598 (ListLongMap!1548 lt!57597))))

(declare-fun lt!57596 () Unit!3382)

(declare-fun lt!57595 () Unit!3382)

(assert (=> d!31807 (= lt!57596 lt!57595)))

(assert (=> d!31807 (= (getValueByKey!159 lt!57597 (_1!1205 (tuple2!2389 lt!56827 (minValue!2497 newMap!16)))) (Some!164 (_2!1205 (tuple2!2389 lt!56827 (minValue!2497 newMap!16)))))))

(assert (=> d!31807 (= lt!57595 (lemmaContainsTupThenGetReturnValue!75 lt!57597 (_1!1205 (tuple2!2389 lt!56827 (minValue!2497 newMap!16))) (_2!1205 (tuple2!2389 lt!56827 (minValue!2497 newMap!16)))))))

(assert (=> d!31807 (= lt!57597 (insertStrictlySorted!78 (toList!789 lt!56822) (_1!1205 (tuple2!2389 lt!56827 (minValue!2497 newMap!16))) (_2!1205 (tuple2!2389 lt!56827 (minValue!2497 newMap!16)))))))

(assert (=> d!31807 (= (+!144 lt!56822 (tuple2!2389 lt!56827 (minValue!2497 newMap!16))) lt!57598)))

(declare-fun b!111619 () Bool)

(declare-fun res!55105 () Bool)

(assert (=> b!111619 (=> (not res!55105) (not e!72548))))

(assert (=> b!111619 (= res!55105 (= (getValueByKey!159 (toList!789 lt!57598) (_1!1205 (tuple2!2389 lt!56827 (minValue!2497 newMap!16)))) (Some!164 (_2!1205 (tuple2!2389 lt!56827 (minValue!2497 newMap!16))))))))

(declare-fun b!111620 () Bool)

(assert (=> b!111620 (= e!72548 (contains!827 (toList!789 lt!57598) (tuple2!2389 lt!56827 (minValue!2497 newMap!16))))))

(assert (= (and d!31807 res!55106) b!111619))

(assert (= (and b!111619 res!55105) b!111620))

(declare-fun m!127365 () Bool)

(assert (=> d!31807 m!127365))

(declare-fun m!127367 () Bool)

(assert (=> d!31807 m!127367))

(declare-fun m!127369 () Bool)

(assert (=> d!31807 m!127369))

(declare-fun m!127371 () Bool)

(assert (=> d!31807 m!127371))

(declare-fun m!127373 () Bool)

(assert (=> b!111619 m!127373))

(declare-fun m!127375 () Bool)

(assert (=> b!111620 m!127375))

(assert (=> b!110168 d!31807))

(declare-fun d!31809 () Bool)

(declare-fun lt!57599 () Bool)

(assert (=> d!31809 (= lt!57599 (select (content!114 lt!56486) (tuple2!2389 (_1!1205 lt!56370) (_2!1205 lt!56370))))))

(declare-fun e!72550 () Bool)

(assert (=> d!31809 (= lt!57599 e!72550)))

(declare-fun res!55108 () Bool)

(assert (=> d!31809 (=> (not res!55108) (not e!72550))))

(assert (=> d!31809 (= res!55108 ((_ is Cons!1605) lt!56486))))

(assert (=> d!31809 (= (contains!827 lt!56486 (tuple2!2389 (_1!1205 lt!56370) (_2!1205 lt!56370))) lt!57599)))

(declare-fun b!111621 () Bool)

(declare-fun e!72549 () Bool)

(assert (=> b!111621 (= e!72550 e!72549)))

(declare-fun res!55107 () Bool)

(assert (=> b!111621 (=> res!55107 e!72549)))

(assert (=> b!111621 (= res!55107 (= (h!2204 lt!56486) (tuple2!2389 (_1!1205 lt!56370) (_2!1205 lt!56370))))))

(declare-fun b!111622 () Bool)

(assert (=> b!111622 (= e!72549 (contains!827 (t!5738 lt!56486) (tuple2!2389 (_1!1205 lt!56370) (_2!1205 lt!56370))))))

(assert (= (and d!31809 res!55108) b!111621))

(assert (= (and b!111621 (not res!55107)) b!111622))

(declare-fun m!127377 () Bool)

(assert (=> d!31809 m!127377))

(declare-fun m!127379 () Bool)

(assert (=> d!31809 m!127379))

(declare-fun m!127381 () Bool)

(assert (=> b!111622 m!127381))

(assert (=> b!110381 d!31809))

(declare-fun d!31811 () Bool)

(assert (=> d!31811 (isDefined!111 (getValueByKey!159 (toList!789 lt!56545) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!57600 () Unit!3382)

(assert (=> d!31811 (= lt!57600 (choose!696 (toList!789 lt!56545) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!72551 () Bool)

(assert (=> d!31811 e!72551))

(declare-fun res!55109 () Bool)

(assert (=> d!31811 (=> (not res!55109) (not e!72551))))

(assert (=> d!31811 (= res!55109 (isStrictlySorted!298 (toList!789 lt!56545)))))

(assert (=> d!31811 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 lt!56545) #b0000000000000000000000000000000000000000000000000000000000000000) lt!57600)))

(declare-fun b!111623 () Bool)

(assert (=> b!111623 (= e!72551 (containsKey!162 (toList!789 lt!56545) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!31811 res!55109) b!111623))

(assert (=> d!31811 m!124685))

(assert (=> d!31811 m!124685))

(assert (=> d!31811 m!124687))

(declare-fun m!127383 () Bool)

(assert (=> d!31811 m!127383))

(assert (=> d!31811 m!126479))

(assert (=> b!111623 m!124681))

(assert (=> b!110137 d!31811))

(assert (=> b!110137 d!31595))

(assert (=> b!110137 d!31597))

(declare-fun b!111625 () Bool)

(declare-fun e!72555 () Bool)

(declare-fun e!72554 () Bool)

(assert (=> b!111625 (= e!72555 e!72554)))

(declare-fun c!19927 () Bool)

(assert (=> b!111625 (= c!19927 (validKeyInArray!0 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun bm!11911 () Bool)

(declare-fun call!11914 () Bool)

(assert (=> bm!11911 (= call!11914 (arrayNoDuplicates!0 (_keys!4340 (v!2930 (underlying!370 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!19927 (Cons!1606 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) #b00000000000000000000000000000000) Nil!1607) Nil!1607)))))

(declare-fun b!111626 () Bool)

(assert (=> b!111626 (= e!72554 call!11914)))

(declare-fun b!111627 () Bool)

(assert (=> b!111627 (= e!72554 call!11914)))

(declare-fun b!111628 () Bool)

(declare-fun e!72553 () Bool)

(assert (=> b!111628 (= e!72553 (contains!828 Nil!1607 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun d!31813 () Bool)

(declare-fun res!55110 () Bool)

(declare-fun e!72552 () Bool)

(assert (=> d!31813 (=> res!55110 e!72552)))

(assert (=> d!31813 (= res!55110 (bvsge #b00000000000000000000000000000000 (size!2329 (_keys!4340 (v!2930 (underlying!370 thiss!992))))))))

(assert (=> d!31813 (= (arrayNoDuplicates!0 (_keys!4340 (v!2930 (underlying!370 thiss!992))) #b00000000000000000000000000000000 Nil!1607) e!72552)))

(declare-fun b!111624 () Bool)

(assert (=> b!111624 (= e!72552 e!72555)))

(declare-fun res!55111 () Bool)

(assert (=> b!111624 (=> (not res!55111) (not e!72555))))

(assert (=> b!111624 (= res!55111 (not e!72553))))

(declare-fun res!55112 () Bool)

(assert (=> b!111624 (=> (not res!55112) (not e!72553))))

(assert (=> b!111624 (= res!55112 (validKeyInArray!0 (select (arr!2072 (_keys!4340 (v!2930 (underlying!370 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (= (and d!31813 (not res!55110)) b!111624))

(assert (= (and b!111624 res!55112) b!111628))

(assert (= (and b!111624 res!55111) b!111625))

(assert (= (and b!111625 c!19927) b!111627))

(assert (= (and b!111625 (not c!19927)) b!111626))

(assert (= (or b!111627 b!111626) bm!11911))

(assert (=> b!111625 m!125457))

(assert (=> b!111625 m!125457))

(assert (=> b!111625 m!125465))

(assert (=> bm!11911 m!125457))

(declare-fun m!127385 () Bool)

(assert (=> bm!11911 m!127385))

(assert (=> b!111628 m!125457))

(assert (=> b!111628 m!125457))

(declare-fun m!127387 () Bool)

(assert (=> b!111628 m!127387))

(assert (=> b!111624 m!125457))

(assert (=> b!111624 m!125457))

(assert (=> b!111624 m!125465))

(assert (=> b!110449 d!31813))

(declare-fun d!31815 () Bool)

(assert (=> d!31815 (isDefined!111 (getValueByKey!159 (toList!789 lt!56545) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!57601 () Unit!3382)

(assert (=> d!31815 (= lt!57601 (choose!696 (toList!789 lt!56545) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!72556 () Bool)

(assert (=> d!31815 e!72556))

(declare-fun res!55113 () Bool)

(assert (=> d!31815 (=> (not res!55113) (not e!72556))))

(assert (=> d!31815 (= res!55113 (isStrictlySorted!298 (toList!789 lt!56545)))))

(assert (=> d!31815 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 lt!56545) #b1000000000000000000000000000000000000000000000000000000000000000) lt!57601)))

(declare-fun b!111629 () Bool)

(assert (=> b!111629 (= e!72556 (containsKey!162 (toList!789 lt!56545) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!31815 res!55113) b!111629))

(assert (=> d!31815 m!124533))

(assert (=> d!31815 m!124533))

(assert (=> d!31815 m!124535))

(declare-fun m!127389 () Bool)

(assert (=> d!31815 m!127389))

(assert (=> d!31815 m!126479))

(assert (=> b!111629 m!124529))

(assert (=> b!110060 d!31815))

(assert (=> b!110060 d!31575))

(assert (=> b!110060 d!31213))

(declare-fun d!31817 () Bool)

(declare-fun res!55114 () Bool)

(declare-fun e!72557 () Bool)

(assert (=> d!31817 (=> res!55114 e!72557)))

(assert (=> d!31817 (= res!55114 (and ((_ is Cons!1605) (toList!789 lt!56483)) (= (_1!1205 (h!2204 (toList!789 lt!56483))) (_1!1205 lt!56363))))))

(assert (=> d!31817 (= (containsKey!162 (toList!789 lt!56483) (_1!1205 lt!56363)) e!72557)))

(declare-fun b!111630 () Bool)

(declare-fun e!72558 () Bool)

(assert (=> b!111630 (= e!72557 e!72558)))

(declare-fun res!55115 () Bool)

(assert (=> b!111630 (=> (not res!55115) (not e!72558))))

(assert (=> b!111630 (= res!55115 (and (or (not ((_ is Cons!1605) (toList!789 lt!56483))) (bvsle (_1!1205 (h!2204 (toList!789 lt!56483))) (_1!1205 lt!56363))) ((_ is Cons!1605) (toList!789 lt!56483)) (bvslt (_1!1205 (h!2204 (toList!789 lt!56483))) (_1!1205 lt!56363))))))

(declare-fun b!111631 () Bool)

(assert (=> b!111631 (= e!72558 (containsKey!162 (t!5738 (toList!789 lt!56483)) (_1!1205 lt!56363)))))

(assert (= (and d!31817 (not res!55114)) b!111630))

(assert (= (and b!111630 res!55115) b!111631))

(declare-fun m!127391 () Bool)

(assert (=> b!111631 m!127391))

(assert (=> d!30985 d!31817))

(declare-fun d!31819 () Bool)

(declare-fun e!72560 () Bool)

(assert (=> d!31819 e!72560))

(declare-fun res!55116 () Bool)

(assert (=> d!31819 (=> res!55116 e!72560)))

(declare-fun lt!57604 () Bool)

(assert (=> d!31819 (= res!55116 (not lt!57604))))

(declare-fun lt!57605 () Bool)

(assert (=> d!31819 (= lt!57604 lt!57605)))

(declare-fun lt!57602 () Unit!3382)

(declare-fun e!72559 () Unit!3382)

(assert (=> d!31819 (= lt!57602 e!72559)))

(declare-fun c!19928 () Bool)

(assert (=> d!31819 (= c!19928 lt!57605)))

(assert (=> d!31819 (= lt!57605 (containsKey!162 (toList!789 lt!56966) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!31819 (= (contains!824 lt!56966 #b1000000000000000000000000000000000000000000000000000000000000000) lt!57604)))

(declare-fun b!111632 () Bool)

(declare-fun lt!57603 () Unit!3382)

(assert (=> b!111632 (= e!72559 lt!57603)))

(assert (=> b!111632 (= lt!57603 (lemmaContainsKeyImpliesGetValueByKeyDefined!110 (toList!789 lt!56966) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!111632 (isDefined!111 (getValueByKey!159 (toList!789 lt!56966) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!111633 () Bool)

(declare-fun Unit!3460 () Unit!3382)

(assert (=> b!111633 (= e!72559 Unit!3460)))

(declare-fun b!111634 () Bool)

(assert (=> b!111634 (= e!72560 (isDefined!111 (getValueByKey!159 (toList!789 lt!56966) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!31819 c!19928) b!111632))

(assert (= (and d!31819 (not c!19928)) b!111633))

(assert (= (and d!31819 (not res!55116)) b!111634))

(declare-fun m!127393 () Bool)

(assert (=> d!31819 m!127393))

(declare-fun m!127395 () Bool)

(assert (=> b!111632 m!127395))

(assert (=> b!111632 m!125643))

(assert (=> b!111632 m!125643))

(declare-fun m!127397 () Bool)

(assert (=> b!111632 m!127397))

(assert (=> b!111634 m!125643))

(assert (=> b!111634 m!125643))

(assert (=> b!111634 m!127397))

(assert (=> bm!11772 d!31819))

(declare-fun d!31821 () Bool)

(declare-fun lt!57606 () Bool)

(assert (=> d!31821 (= lt!57606 (select (content!114 lt!56997) (tuple2!2389 (_1!1205 lt!56370) (_2!1205 lt!56370))))))

(declare-fun e!72562 () Bool)

(assert (=> d!31821 (= lt!57606 e!72562)))

(declare-fun res!55118 () Bool)

(assert (=> d!31821 (=> (not res!55118) (not e!72562))))

(assert (=> d!31821 (= res!55118 ((_ is Cons!1605) lt!56997))))

(assert (=> d!31821 (= (contains!827 lt!56997 (tuple2!2389 (_1!1205 lt!56370) (_2!1205 lt!56370))) lt!57606)))

(declare-fun b!111635 () Bool)

(declare-fun e!72561 () Bool)

(assert (=> b!111635 (= e!72562 e!72561)))

(declare-fun res!55117 () Bool)

(assert (=> b!111635 (=> res!55117 e!72561)))

(assert (=> b!111635 (= res!55117 (= (h!2204 lt!56997) (tuple2!2389 (_1!1205 lt!56370) (_2!1205 lt!56370))))))

(declare-fun b!111636 () Bool)

(assert (=> b!111636 (= e!72561 (contains!827 (t!5738 lt!56997) (tuple2!2389 (_1!1205 lt!56370) (_2!1205 lt!56370))))))

(assert (= (and d!31821 res!55118) b!111635))

(assert (= (and b!111635 (not res!55117)) b!111636))

(declare-fun m!127399 () Bool)

(assert (=> d!31821 m!127399))

(declare-fun m!127401 () Bool)

(assert (=> d!31821 m!127401))

(declare-fun m!127403 () Bool)

(assert (=> b!111636 m!127403))

(assert (=> b!110467 d!31821))

(declare-fun mapIsEmpty!4013 () Bool)

(declare-fun mapRes!4013 () Bool)

(assert (=> mapIsEmpty!4013 mapRes!4013))

(declare-fun b!111637 () Bool)

(declare-fun e!72564 () Bool)

(assert (=> b!111637 (= e!72564 tp_is_empty!2695)))

(declare-fun mapNonEmpty!4013 () Bool)

(declare-fun tp!10043 () Bool)

(assert (=> mapNonEmpty!4013 (= mapRes!4013 (and tp!10043 e!72564))))

(declare-fun mapRest!4013 () (Array (_ BitVec 32) ValueCell!1004))

(declare-fun mapValue!4013 () ValueCell!1004)

(declare-fun mapKey!4013 () (_ BitVec 32))

(assert (=> mapNonEmpty!4013 (= mapRest!4012 (store mapRest!4013 mapKey!4013 mapValue!4013))))

(declare-fun condMapEmpty!4013 () Bool)

(declare-fun mapDefault!4013 () ValueCell!1004)

(assert (=> mapNonEmpty!4012 (= condMapEmpty!4013 (= mapRest!4012 ((as const (Array (_ BitVec 32) ValueCell!1004)) mapDefault!4013)))))

(declare-fun e!72563 () Bool)

(assert (=> mapNonEmpty!4012 (= tp!10042 (and e!72563 mapRes!4013))))

(declare-fun b!111638 () Bool)

(assert (=> b!111638 (= e!72563 tp_is_empty!2695)))

(assert (= (and mapNonEmpty!4012 condMapEmpty!4013) mapIsEmpty!4013))

(assert (= (and mapNonEmpty!4012 (not condMapEmpty!4013)) mapNonEmpty!4013))

(assert (= (and mapNonEmpty!4013 ((_ is ValueCellFull!1004) mapValue!4013)) b!111637))

(assert (= (and mapNonEmpty!4012 ((_ is ValueCellFull!1004) mapDefault!4013)) b!111638))

(declare-fun m!127405 () Bool)

(assert (=> mapNonEmpty!4013 m!127405))

(declare-fun mapIsEmpty!4014 () Bool)

(declare-fun mapRes!4014 () Bool)

(assert (=> mapIsEmpty!4014 mapRes!4014))

(declare-fun b!111639 () Bool)

(declare-fun e!72566 () Bool)

(assert (=> b!111639 (= e!72566 tp_is_empty!2695)))

(declare-fun mapNonEmpty!4014 () Bool)

(declare-fun tp!10044 () Bool)

(assert (=> mapNonEmpty!4014 (= mapRes!4014 (and tp!10044 e!72566))))

(declare-fun mapValue!4014 () ValueCell!1004)

(declare-fun mapKey!4014 () (_ BitVec 32))

(declare-fun mapRest!4014 () (Array (_ BitVec 32) ValueCell!1004))

(assert (=> mapNonEmpty!4014 (= mapRest!4011 (store mapRest!4014 mapKey!4014 mapValue!4014))))

(declare-fun condMapEmpty!4014 () Bool)

(declare-fun mapDefault!4014 () ValueCell!1004)

(assert (=> mapNonEmpty!4011 (= condMapEmpty!4014 (= mapRest!4011 ((as const (Array (_ BitVec 32) ValueCell!1004)) mapDefault!4014)))))

(declare-fun e!72565 () Bool)

(assert (=> mapNonEmpty!4011 (= tp!10041 (and e!72565 mapRes!4014))))

(declare-fun b!111640 () Bool)

(assert (=> b!111640 (= e!72565 tp_is_empty!2695)))

(assert (= (and mapNonEmpty!4011 condMapEmpty!4014) mapIsEmpty!4014))

(assert (= (and mapNonEmpty!4011 (not condMapEmpty!4014)) mapNonEmpty!4014))

(assert (= (and mapNonEmpty!4014 ((_ is ValueCellFull!1004) mapValue!4014)) b!111639))

(assert (= (and mapNonEmpty!4011 ((_ is ValueCellFull!1004) mapDefault!4014)) b!111640))

(declare-fun m!127407 () Bool)

(assert (=> mapNonEmpty!4014 m!127407))

(declare-fun b_lambda!4983 () Bool)

(assert (= b_lambda!4955 (or (and b!109572 b_free!2557 (= (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) (defaultEntry!2626 newMap!16))) (and b!109583 b_free!2559) b_lambda!4983)))

(declare-fun b_lambda!4985 () Bool)

(assert (= b_lambda!4963 (or (and b!109572 b_free!2557 (= (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) (defaultEntry!2626 newMap!16))) (and b!109583 b_free!2559) b_lambda!4985)))

(declare-fun b_lambda!4987 () Bool)

(assert (= b_lambda!4959 (or (and b!109572 b_free!2557 (= (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) (defaultEntry!2626 newMap!16))) (and b!109583 b_free!2559) b_lambda!4987)))

(declare-fun b_lambda!4989 () Bool)

(assert (= b_lambda!4965 (or (and b!109572 b_free!2557 (= (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) (defaultEntry!2626 newMap!16))) (and b!109583 b_free!2559) b_lambda!4989)))

(declare-fun b_lambda!4991 () Bool)

(assert (= b_lambda!4979 (or (and b!109572 b_free!2557 (= (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) (defaultEntry!2626 newMap!16))) (and b!109583 b_free!2559) b_lambda!4991)))

(declare-fun b_lambda!4993 () Bool)

(assert (= b_lambda!4971 (or (and b!109572 b_free!2557) (and b!109583 b_free!2559 (= (defaultEntry!2626 newMap!16) (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))))) b_lambda!4993)))

(declare-fun b_lambda!4995 () Bool)

(assert (= b_lambda!4969 (or (and b!109572 b_free!2557) (and b!109583 b_free!2559 (= (defaultEntry!2626 newMap!16) (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))))) b_lambda!4995)))

(declare-fun b_lambda!4997 () Bool)

(assert (= b_lambda!4961 (or (and b!109572 b_free!2557 (= (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) (defaultEntry!2626 newMap!16))) (and b!109583 b_free!2559) b_lambda!4997)))

(declare-fun b_lambda!4999 () Bool)

(assert (= b_lambda!4973 (or (and b!109572 b_free!2557 (= (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) (defaultEntry!2626 newMap!16))) (and b!109583 b_free!2559) b_lambda!4999)))

(declare-fun b_lambda!5001 () Bool)

(assert (= b_lambda!4981 (or (and b!109572 b_free!2557 (= (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) (defaultEntry!2626 newMap!16))) (and b!109583 b_free!2559) b_lambda!5001)))

(declare-fun b_lambda!5003 () Bool)

(assert (= b_lambda!4953 (or (and b!109572 b_free!2557 (= (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) (defaultEntry!2626 newMap!16))) (and b!109583 b_free!2559) b_lambda!5003)))

(declare-fun b_lambda!5005 () Bool)

(assert (= b_lambda!4977 (or (and b!109572 b_free!2557 (= (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) (defaultEntry!2626 newMap!16))) (and b!109583 b_free!2559) b_lambda!5005)))

(declare-fun b_lambda!5007 () Bool)

(assert (= b_lambda!4975 (or (and b!109572 b_free!2557 (= (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) (defaultEntry!2626 newMap!16))) (and b!109583 b_free!2559) b_lambda!5007)))

(declare-fun b_lambda!5009 () Bool)

(assert (= b_lambda!4967 (or (and b!109572 b_free!2557 (= (defaultEntry!2626 (v!2930 (underlying!370 thiss!992))) (defaultEntry!2626 newMap!16))) (and b!109583 b_free!2559) b_lambda!5009)))

(check-sat (not d!31203) (not b!111188) (not b!111046) (not b!111063) (not b!110869) (not b!110843) (not b!110625) (not d!31575) (not d!31763) (not d!31089) (not b!111015) (not b!110801) (not b!110539) (not d!31719) (not bm!11898) (not b!110751) (not b!111549) (not b!110902) (not b!111534) (not d!31703) (not b!111616) (not d!31139) (not d!31537) (not b!110605) (not d!31097) (not b!110669) (not b!111624) (not b!111340) (not b!110758) (not b!110809) (not b!111507) (not d!31387) (not d!31117) (not d!31289) (not b!110956) (not b!110635) (not b!111602) (not b!110772) (not b!111608) (not d!31197) (not d!31643) (not d!31663) (not d!31675) (not d!31745) (not d!31695) (not d!31301) (not b!111623) (not b!111595) (not d!31231) (not d!31127) (not d!31647) (not b!110506) b_and!6859 (not b!111574) (not d!31157) (not d!31391) (not b!110816) (not d!31393) (not d!31795) (not bm!11846) (not d!31793) (not bm!11835) (not b!110680) (not b!111434) (not d!31399) (not b!111120) (not b_lambda!4985) (not b!111575) (not b!111321) (not d!31467) (not b_lambda!4945) (not b!111431) (not d!31499) (not b!110846) (not b_lambda!4919) (not d!31371) (not d!31753) (not b!111237) (not b!111522) (not d!31077) (not d!31773) (not d!31661) (not b!111600) (not b!111361) (not b!111363) (not bm!11805) (not d!31521) (not b!110493) (not d!31251) (not b!111342) (not d!31759) (not b!111542) (not b!110509) (not bm!11834) (not b!111007) (not d!31119) (not b!111276) (not d!31613) (not b!110543) (not b!110973) (not b!111313) (not b!111425) (not b!111147) (not d!31163) (not bm!11892) (not b!110513) (not bm!11791) (not b!110575) (not bm!11822) (not b!111343) (not b!110997) (not d!31755) (not b!110693) (not b!110644) (not d!31683) (not b!111184) (not b!111569) (not d!31327) (not b!111453) (not b!110682) (not b!111304) (not b!111357) (not d!31443) (not b!111381) (not b_lambda!5003) (not b!110835) (not d!31073) (not bm!11821) (not d!31743) (not b!110965) (not b!111605) (not d!31533) (not d!31193) (not b!110617) (not b!111350) (not d!31165) (not d!31441) (not b!111049) (not b!111191) (not b!110932) (not bm!11856) (not b!110615) (not b!111516) (not b_lambda!4983) (not b!111261) (not d!31799) (not d!31401) (not b!110787) (not d!31509) (not b!110954) (not b!111003) (not b!111119) (not b!111520) (not b!110930) (not b!110785) (not b!111163) (not b!110590) (not b!110804) (not d!31417) (not b!111439) (not d!31573) (not b!110570) (not bm!11812) (not b!110861) (not b!111414) (not b!111025) (not b!111284) (not b!111528) (not d!31237) (not b!111177) (not b!111132) (not d!31425) (not b!111201) (not d!31511) (not b!110546) (not b!110867) (not d!31155) (not d!31477) (not b!111536) (not d!31569) (not d!31557) (not b!111448) (not b!110944) (not d!31365) (not d!31215) (not b!111291) (not b!111437) (not d!31625) (not b!110540) (not b!111018) (not b!111365) (not b!110512) (not b!111247) (not b!111146) (not d!31269) (not bm!11908) (not b_lambda!4993) (not b_lambda!4943) (not d!31699) (not d!31207) (not b!110853) (not b!111218) (not d!31709) (not b!111121) (not d!31121) (not b!111452) (not b!111557) (not bm!11869) (not b!111459) (not d!31345) (not b!110578) (not b!110765) (not d!31279) (not b!111423) (not b!110858) (not bm!11852) (not d!31329) (not b!110691) (not b!110845) (not b!111009) (not b!110667) (not b!111307) (not b!110595) (not b!111416) (not b!110864) (not b!111629) (not b!111111) (not b!111609) (not b!110596) (not d!31149) (not b!110996) (not b!110798) (not b!110780) (not b!111010) (not b!110865) (not b!111468) (not b_lambda!4997) (not b!111299) (not d!31299) (not mapNonEmpty!4014) (not b!111192) (not b!111376) (not b!110911) (not b!110878) (not b!111384) (not d!31651) (not b!110978) (not d!31421) (not b!110551) (not b!111151) (not b!110931) (not b!110783) (not b!110964) (not bm!11803) (not d!31737) (not b!110679) (not b!111610) (not b!111219) (not b!111274) (not b!110933) (not b!110786) (not bm!11905) (not d!31241) (not b!111455) (not d!31167) (not b!110573) (not b!111457) (not b!111026) (not b!111501) (not d!31579) (not b!111083) (not d!31671) (not bm!11838) (not d!31665) (not b!111230) (not d!31409) (not b!110601) (not b!111392) (not b!111389) (not b!111169) (not d!31681) (not d!31093) (not d!31527) (not b!110799) (not d!31259) (not bm!11845) (not b!110641) (not bm!11841) (not b!111104) (not b!111290) (not b!111541) (not b!110487) (not b!110606) (not d!31583) (not b!111207) (not b!111133) (not d!31095) (not b!111499) (not d!31411) (not b!111458) (not d!31341) (not d!31277) (not d!31587) (not b!110620) (not bm!11828) (not b!110940) (not b!110893) (not b!111114) (not b!110943) (not b!111154) (not d!31767) (not b!111286) (not b!111402) (not d!31581) (not b!111326) (not bm!11853) (not bm!11891) (not b!110961) (not b!111582) (not b!111238) (not b!110510) (not b!111142) (not b_lambda!5007) (not b_next!2559) (not b!111426) (not b!111513) (not d!31449) (not bm!11829) (not b!111255) (not b!111429) (not b!110634) (not b!111002) (not d!31177) (not b!111606) (not d!31469) (not b!111382) (not b!110676) (not b!110891) (not b!110646) (not b!110534) (not b!111555) (not b!111208) (not b!111367) (not d!31437) (not d!31297) (not b!110897) (not b!110915) (not b!110907) (not b!110496) (not d!31285) (not b!111508) (not d!31233) (not bm!11837) (not d!31483) (not d!31257) (not d!31133) (not b_lambda!5001) (not b!110598) (not b!111170) (not d!31797) (not b!111374) (not bm!11866) (not b!111378) (not d!31691) (not b!111594) (not b!111306) (not d!31319) (not b!111051) (not b!110920) (not b_lambda!5005) (not b!110807) (not b!110860) (not b!111505) (not b!110536) (not b!111088) (not b!110745) (not b!111617) (not b!110875) (not b!111216) (not d!31307) (not b!111529) (not bm!11787) (not b!111178) (not b!110990) (not b!111277) (not d!31609) (not b!111463) (not b!111568) (not d!31611) (not b!110794) (not b!111510) (not bm!11893) (not b!111417) (not b!111127) (not b!111175) (not b!110743) (not b!111467) (not b!110589) (not b!111161) (not b!111364) (not d!31429) (not b!111401) (not b_lambda!4987) (not b!110966) (not b!110632) (not b!110729) (not bm!11854) (not bm!11800) (not bm!11842) (not d!31811) (not b!110491) (not d!31111) (not b!111517) (not b!110777) (not bm!11873) (not d!31747) (not b!111016) (not d!31265) (not d!31789) (not b!111033) (not b!111243) (not d!31433) (not bm!11802) (not b!111318) (not bm!11860) (not bm!11867) (not b!111387) (not b!111356) (not b!111269) (not b!111612) (not b_lambda!4931) (not mapNonEmpty!4013) (not d!31725) (not b!110866) (not d!31303) (not bm!11809) (not b!111287) (not d!31489) (not b!111001) (not b!110919) (not b!111156) (not b!110565) (not b!110591) (not d!31427) (not b!110879) (not b!111144) (not b!111162) (not bm!11806) (not b!110806) (not b!111558) (not d!31465) (not d!31649) (not b!111221) (not b!110993) (not b!111328) (not b!110558) (not d!31389) (not d!31323) (not d!31595) (not d!31775) (not b!111352) (not b!110550) (not b!110951) (not b!110796) (not b!111265) (not b!110899) (not b!111234) (not b!110925) (not b!111441) (not b!111240) (not d!31577) (not b!111424) (not d!31271) (not b!111267) (not b_lambda!4929) (not b!110838) (not d!31685) (not d!31129) (not d!31605) (not b!110748) (not b!111135) (not b!111413) (not b_lambda!4989) (not b!111152) (not b_lambda!4947) (not b!111195) (not d!31405) (not d!31227) (not b!111625) (not b_lambda!4957) (not bm!11876) (not d!31497) (not d!31801) (not d!31495) (not b!111006) (not b_lambda!5009) (not d!31355) (not b!110985) (not b!111634) (not d!31145) (not d!31815) (not b!110689) (not b!111153) (not b!110755) b_and!6857 (not b_lambda!4991) (not bm!11886) (not b!111604) (not b!111157) (not b!110549) (not b!111579) (not bm!11909) (not b!111223) (not bm!11885) (not b!110658) (not b!111246) (not b!110485) (not d!31735) (not b!111379) (not b!110923) (not b!110922) (not b!111371) (not b!110576) (not b!110988) (not d!31679) (not b!111044) (not b!111149) (not b!111632) (not b!110531) (not d!31161) (not bm!11894) (not b!111043) (not d!31639) (not b!111418) (not b!110928) (not d!31351) (not b!110519) (not bm!11790) (not b!111620) (not b!110656) (not b!110901) (not b!111353) (not b!110664) (not bm!11815) (not b!111628) (not b!110760) (not b_lambda!4951) (not d!31423) (not d!31531) (not d!31787) (not b!111615) (not d!31185) (not d!31771) (not b!111004) (not d!31325) (not b!111272) (not d!31565) (not b!111390) (not b!110567) (not b!110833) (not b!110637) (not b!111331) (not d!31821) (not d!31551) (not d!31717) (not b!111047) (not d!31781) (not b!110661) (not bm!11863) (not b!110763) (not b!110649) (not d!31191) (not b!110603) (not b!111333) (not b!110999) (not b!110668) (not b!110752) (not d!31637) (not b!111323) (not b_lambda!4949) (not b!110516) (not b!110764) (not d!31397) (not b!110489) (not bm!11904) (not b!110808) (not b!110690) (not b!111428) (not d!31525) (not bm!11801) (not d!31487) (not d!31635) (not d!31657) (not b!111200) (not d!31669) (not b!110906) (not d!31807) (not b!110958) (not b!111592) (not b!110593) (not d!31439) (not d!31677) (not b!111619) (not b!111298) (not b!111023) (not d!31751) (not d!31791) (not d!31343) (not d!31249) (not d!31353) (not b!110685) (not bm!11794) (not b!111420) (not d!31621) (not b!110503) (not b!111055) (not b!110740) (not b!110639) (not b!110963) (not b!110522) (not d!31673) (not d!31479) (not b!111335) (not b_next!2557) (not b!110732) (not d!31599) (not d!31311) (not b!111060) (not bm!11901) (not b!111017) (not bm!11911) (not b!111158) (not d!31659) (not b!111451) (not d!31091) (not d!31141) (not b!111472) (not b!110750) (not b!111013) (not b!111469) (not b!110896) (not b!111636) (not b!111123) (not b!111341) (not d!31369) (not d!31125) (not b!111105) (not bm!11884) (not b!111118) (not b!111576) (not b!110904) (not d!31071) (not bm!11797) (not d!31619) (not b!111014) (not d!31381) (not b!110948) (not b!110779) (not b!111226) (not d!31555) (not d!31785) (not b!110872) tp_is_empty!2695 (not b!110684) (not b!111622) (not bm!11910) (not b!111409) (not b!110736) (not bm!11897) (not b!111036) (not b!111550) (not d!31475) (not b!111115) (not b!111275) (not d!31471) (not d!31459) (not d!31199) (not d!31229) (not b!111134) (not b!110659) (not d!31413) (not b!110577) (not b!111465) (not b!111130) (not d!31517) (not b!111292) (not b!111096) (not bm!11830) (not b!111038) (not bm!11895) (not b_lambda!4999) (not b!110822) (not b!111248) (not b!110525) (not b!111462) (not b!111056) (not d!31493) (not b!111338) (not b!110613) (not b!110886) (not b!110604) (not b!111186) (not b!110917) (not d!31083) (not b!111412) (not b!111598) (not b!111089) (not b!111309) (not bm!11833) (not d!31239) (not d!31667) (not b!111399) (not b!111614) (not b!110528) (not d!31805) (not bm!11825) (not b!110688) (not d!31655) (not b!110724) (not b!110653) (not b!111450) (not d!31261) (not bm!11857) (not bm!11849) (not bm!11870) (not b!111446) (not b!111125) (not b!111090) (not b!110841) (not d!31729) (not bm!11848) (not b!111543) (not d!31523) (not b_lambda!4995) (not b!111597) (not d!31415) (not b!111085) (not b!110692) (not b!110830) (not b!111436) (not d!31407) (not b!111080) (not b!111122) (not b!110643) (not b!110823) (not b!110666) (not d!31255) (not b!110541) (not b!110844) (not d!31135) (not bm!11902) (not d!31507) (not b!111311) (not b!111444) (not d!31317) (not d!31107) (not b!111199) (not b!111631) (not b!111571) (not b!110889) (not b!110856) (not d!31501) (not b!110747) (not d!31153) (not b!111587) (not b!110585) (not d!31803) (not b!110771) (not b!111537) (not b!111258) (not d!31485) (not b!110622) (not d!31819) (not b!110713) (not b!111245) (not b!111521) (not bm!11881) (not d!31087) (not b!110868) (not d!31463) (not b!110548) (not b!111005) (not d!31333) (not d!31403) (not d!31701) (not b!111315) (not b!111464) (not b!111181) (not d!31783) (not b!110568) (not bm!11818) (not b!111057) (not b!111415) (not b!111368) (not b!111053) (not b!111391) (not b!110820) (not d!31779) (not b!110981) (not b!110624) (not d!31205) (not b!111213) (not d!31571) (not b!111310) (not b!110908) (not d!31715) (not d!31291) (not b!111097) (not d!31631) (not b!110623) (not d!31705) (not d!31741) (not b_lambda!4927) (not b!111041) (not b!110538) (not b!111215) (not d!31601) (not bm!11878) (not b!111102) (not d!31693) (not d!31065) (not d!31395) (not bm!11877) (not b!110836) (not b!111593) (not d!31347) (not d!31809))
(check-sat b_and!6857 b_and!6859 (not b_next!2557) (not b_next!2559))
