; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!12684 () Bool)

(assert start!12684)

(declare-fun b!109508 () Bool)

(declare-fun b_free!2557 () Bool)

(declare-fun b_next!2557 () Bool)

(assert (=> b!109508 (= b_free!2557 (not b_next!2557))))

(declare-fun tp!10012 () Bool)

(declare-fun b_and!6733 () Bool)

(assert (=> b!109508 (= tp!10012 b_and!6733)))

(declare-fun b!109512 () Bool)

(declare-fun b_free!2559 () Bool)

(declare-fun b_next!2559 () Bool)

(assert (=> b!109512 (= b_free!2559 (not b_next!2559))))

(declare-fun tp!10009 () Bool)

(declare-fun b_and!6735 () Bool)

(assert (=> b!109512 (= tp!10009 b_and!6735)))

(declare-fun b!109496 () Bool)

(declare-fun e!71240 () Bool)

(declare-fun e!71231 () Bool)

(assert (=> b!109496 (= e!71240 e!71231)))

(declare-fun b!109497 () Bool)

(declare-datatypes ((Unit!3390 0))(
  ( (Unit!3391) )
))
(declare-fun e!71241 () Unit!3390)

(declare-fun Unit!3392 () Unit!3390)

(assert (=> b!109497 (= e!71241 Unit!3392)))

(declare-fun lt!56297 () Unit!3390)

(declare-datatypes ((V!3241 0))(
  ( (V!3242 (val!1392 Int)) )
))
(declare-datatypes ((array!4365 0))(
  ( (array!4366 (arr!2068 (Array (_ BitVec 32) (_ BitVec 64))) (size!2326 (_ BitVec 32))) )
))
(declare-datatypes ((ValueCell!1004 0))(
  ( (ValueCellFull!1004 (v!2919 V!3241)) (EmptyCell!1004) )
))
(declare-datatypes ((array!4367 0))(
  ( (array!4368 (arr!2069 (Array (_ BitVec 32) ValueCell!1004)) (size!2327 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!916 0))(
  ( (LongMapFixedSize!917 (defaultEntry!2626 Int) (mask!6793 (_ BitVec 32)) (extraKeys!2423 (_ BitVec 32)) (zeroValue!2497 V!3241) (minValue!2497 V!3241) (_size!507 (_ BitVec 32)) (_keys!4339 array!4365) (_values!2609 array!4367) (_vacant!507 (_ BitVec 32))) )
))
(declare-datatypes ((Cell!704 0))(
  ( (Cell!705 (v!2920 LongMapFixedSize!916)) )
))
(declare-datatypes ((LongMap!704 0))(
  ( (LongMap!705 (underlying!363 Cell!704)) )
))
(declare-fun thiss!992 () LongMap!704)

(declare-fun from!355 () (_ BitVec 32))

(declare-fun lemmaListMapContainsThenArrayContainsFrom!115 (array!4365 array!4367 (_ BitVec 32) (_ BitVec 32) V!3241 V!3241 (_ BitVec 64) (_ BitVec 32) Int) Unit!3390)

(assert (=> b!109497 (= lt!56297 (lemmaListMapContainsThenArrayContainsFrom!115 (_keys!4339 (v!2920 (underlying!363 thiss!992))) (_values!2609 (v!2920 (underlying!363 thiss!992))) (mask!6793 (v!2920 (underlying!363 thiss!992))) (extraKeys!2423 (v!2920 (underlying!363 thiss!992))) (zeroValue!2497 (v!2920 (underlying!363 thiss!992))) (minValue!2497 (v!2920 (underlying!363 thiss!992))) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2626 (v!2920 (underlying!363 thiss!992)))))))

(declare-fun arrayContainsKey!0 (array!4365 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> b!109497 (arrayContainsKey!0 (_keys!4339 (v!2920 (underlying!363 thiss!992))) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355))))

(declare-fun lt!56302 () Unit!3390)

(declare-fun lemmaNoDuplicateFromThenFromBigger!0 (array!4365 (_ BitVec 32) (_ BitVec 32)) Unit!3390)

(assert (=> b!109497 (= lt!56302 (lemmaNoDuplicateFromThenFromBigger!0 (_keys!4339 (v!2920 (underlying!363 thiss!992))) #b00000000000000000000000000000000 from!355))))

(declare-datatypes ((List!1626 0))(
  ( (Nil!1623) (Cons!1622 (h!2221 (_ BitVec 64)) (t!5754 List!1626)) )
))
(declare-fun arrayNoDuplicates!0 (array!4365 (_ BitVec 32) List!1626) Bool)

(assert (=> b!109497 (arrayNoDuplicates!0 (_keys!4339 (v!2920 (underlying!363 thiss!992))) from!355 Nil!1623)))

(declare-fun lt!56305 () Unit!3390)

(declare-fun lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (array!4365 (_ BitVec 32) (_ BitVec 64) List!1626) Unit!3390)

(assert (=> b!109497 (= lt!56305 (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!4339 (v!2920 (underlying!363 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (Cons!1622 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) Nil!1623)))))

(assert (=> b!109497 false))

(declare-fun b!109498 () Bool)

(declare-fun e!71235 () Bool)

(declare-fun e!71245 () Bool)

(declare-fun mapRes!3994 () Bool)

(assert (=> b!109498 (= e!71235 (and e!71245 mapRes!3994))))

(declare-fun condMapEmpty!3994 () Bool)

(declare-fun mapDefault!3994 () ValueCell!1004)

(assert (=> b!109498 (= condMapEmpty!3994 (= (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!1004)) mapDefault!3994)))))

(declare-fun b!109499 () Bool)

(declare-fun res!54211 () Bool)

(declare-fun e!71234 () Bool)

(assert (=> b!109499 (=> (not res!54211) (not e!71234))))

(declare-fun newMap!16 () LongMapFixedSize!916)

(assert (=> b!109499 (= res!54211 (bvsge (bvadd #b00000000000000000000000000000001 (mask!6793 newMap!16)) (_size!507 (v!2920 (underlying!363 thiss!992)))))))

(declare-fun b!109500 () Bool)

(declare-fun e!71237 () Bool)

(declare-fun tp_is_empty!2695 () Bool)

(assert (=> b!109500 (= e!71237 tp_is_empty!2695)))

(declare-fun b!109501 () Bool)

(declare-fun e!71242 () Bool)

(declare-fun mapRes!3993 () Bool)

(assert (=> b!109501 (= e!71242 (and e!71237 mapRes!3993))))

(declare-fun condMapEmpty!3993 () Bool)

(declare-fun mapDefault!3993 () ValueCell!1004)

(assert (=> b!109501 (= condMapEmpty!3993 (= (arr!2069 (_values!2609 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!1004)) mapDefault!3993)))))

(declare-fun b!109502 () Bool)

(declare-fun e!71233 () Bool)

(assert (=> b!109502 (= e!71231 e!71233)))

(declare-fun b!109503 () Bool)

(declare-fun e!71239 () Bool)

(declare-fun e!71232 () Bool)

(assert (=> b!109503 (= e!71239 e!71232)))

(declare-fun res!54212 () Bool)

(assert (=> b!109503 (=> (not res!54212) (not e!71232))))

(assert (=> b!109503 (= res!54212 (and (not (= (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!56306 () V!3241)

(declare-fun get!1347 (ValueCell!1004 V!3241) V!3241)

(declare-fun dynLambda!387 (Int (_ BitVec 64)) V!3241)

(assert (=> b!109503 (= lt!56306 (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) from!355) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!109504 () Bool)

(assert (=> b!109504 (= e!71234 e!71239)))

(declare-fun res!54205 () Bool)

(assert (=> b!109504 (=> (not res!54205) (not e!71239))))

(declare-datatypes ((tuple2!2396 0))(
  ( (tuple2!2397 (_1!1209 (_ BitVec 64)) (_2!1209 V!3241)) )
))
(declare-datatypes ((List!1627 0))(
  ( (Nil!1624) (Cons!1623 (h!2222 tuple2!2396) (t!5755 List!1627)) )
))
(declare-datatypes ((ListLongMap!1553 0))(
  ( (ListLongMap!1554 (toList!792 List!1627)) )
))
(declare-fun lt!56296 () ListLongMap!1553)

(declare-fun lt!56298 () ListLongMap!1553)

(assert (=> b!109504 (= res!54205 (= lt!56296 lt!56298))))

(declare-fun map!1281 (LongMapFixedSize!916) ListLongMap!1553)

(assert (=> b!109504 (= lt!56298 (map!1281 newMap!16))))

(declare-fun getCurrentListMap!469 (array!4365 array!4367 (_ BitVec 32) (_ BitVec 32) V!3241 V!3241 (_ BitVec 32) Int) ListLongMap!1553)

(assert (=> b!109504 (= lt!56296 (getCurrentListMap!469 (_keys!4339 (v!2920 (underlying!363 thiss!992))) (_values!2609 (v!2920 (underlying!363 thiss!992))) (mask!6793 (v!2920 (underlying!363 thiss!992))) (extraKeys!2423 (v!2920 (underlying!363 thiss!992))) (zeroValue!2497 (v!2920 (underlying!363 thiss!992))) (minValue!2497 (v!2920 (underlying!363 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2626 (v!2920 (underlying!363 thiss!992)))))))

(declare-fun b!109505 () Bool)

(declare-fun e!71238 () Bool)

(assert (=> b!109505 (= e!71238 tp_is_empty!2695)))

(declare-fun b!109506 () Bool)

(declare-fun e!71230 () Bool)

(assert (=> b!109506 (= e!71230 tp_is_empty!2695)))

(declare-fun mapIsEmpty!3993 () Bool)

(assert (=> mapIsEmpty!3993 mapRes!3994))

(declare-fun b!109507 () Bool)

(declare-fun res!54208 () Bool)

(assert (=> b!109507 (=> (not res!54208) (not e!71234))))

(assert (=> b!109507 (= res!54208 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2326 (_keys!4339 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun array_inv!1307 (array!4365) Bool)

(declare-fun array_inv!1308 (array!4367) Bool)

(assert (=> b!109508 (= e!71233 (and tp!10012 tp_is_empty!2695 (array_inv!1307 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (array_inv!1308 (_values!2609 (v!2920 (underlying!363 thiss!992)))) e!71235))))

(declare-fun mapIsEmpty!3994 () Bool)

(assert (=> mapIsEmpty!3994 mapRes!3993))

(declare-fun b!109509 () Bool)

(declare-fun Unit!3393 () Unit!3390)

(assert (=> b!109509 (= e!71241 Unit!3393)))

(declare-fun b!109510 () Bool)

(declare-fun e!71236 () Bool)

(assert (=> b!109510 (= e!71232 e!71236)))

(declare-fun res!54210 () Bool)

(assert (=> b!109510 (=> (not res!54210) (not e!71236))))

(declare-datatypes ((tuple2!2398 0))(
  ( (tuple2!2399 (_1!1210 Bool) (_2!1210 LongMapFixedSize!916)) )
))
(declare-fun lt!56301 () tuple2!2398)

(assert (=> b!109510 (= res!54210 (and (_1!1210 lt!56301) (bvsle from!355 #b00000000000000000000000000000000)))))

(declare-fun lt!56304 () Unit!3390)

(assert (=> b!109510 (= lt!56304 e!71241)))

(declare-fun c!19363 () Bool)

(declare-fun contains!827 (ListLongMap!1553 (_ BitVec 64)) Bool)

(assert (=> b!109510 (= c!19363 (contains!827 lt!56298 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))

(declare-fun update!162 (LongMapFixedSize!916 (_ BitVec 64) V!3241) tuple2!2398)

(assert (=> b!109510 (= lt!56301 (update!162 newMap!16 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))

(declare-fun mapNonEmpty!3993 () Bool)

(declare-fun tp!10011 () Bool)

(assert (=> mapNonEmpty!3993 (= mapRes!3994 (and tp!10011 e!71238))))

(declare-fun mapValue!3993 () ValueCell!1004)

(declare-fun mapRest!3993 () (Array (_ BitVec 32) ValueCell!1004))

(declare-fun mapKey!3993 () (_ BitVec 32))

(assert (=> mapNonEmpty!3993 (= (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (store mapRest!3993 mapKey!3993 mapValue!3993))))

(declare-fun b!109511 () Bool)

(assert (=> b!109511 (= e!71245 tp_is_empty!2695)))

(declare-fun e!71243 () Bool)

(assert (=> b!109512 (= e!71243 (and tp!10009 tp_is_empty!2695 (array_inv!1307 (_keys!4339 newMap!16)) (array_inv!1308 (_values!2609 newMap!16)) e!71242))))

(declare-fun b!109513 () Bool)

(declare-fun e!71228 () Bool)

(assert (=> b!109513 (= e!71236 (not e!71228))))

(declare-fun res!54207 () Bool)

(assert (=> b!109513 (=> res!54207 e!71228)))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> b!109513 (= res!54207 (not (validMask!0 (mask!6793 (v!2920 (underlying!363 thiss!992))))))))

(declare-fun lt!56303 () ListLongMap!1553)

(declare-fun lt!56299 () tuple2!2396)

(declare-fun lt!56300 () tuple2!2396)

(declare-fun +!139 (ListLongMap!1553 tuple2!2396) ListLongMap!1553)

(assert (=> b!109513 (= (+!139 (+!139 lt!56303 lt!56299) lt!56300) (+!139 (+!139 lt!56303 lt!56300) lt!56299))))

(assert (=> b!109513 (= lt!56300 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))

(assert (=> b!109513 (= lt!56299 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))

(declare-fun lt!56295 () Unit!3390)

(declare-fun addCommutativeForDiffKeys!51 (ListLongMap!1553 (_ BitVec 64) V!3241 (_ BitVec 64) V!3241) Unit!3390)

(assert (=> b!109513 (= lt!56295 (addCommutativeForDiffKeys!51 lt!56303 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))

(declare-fun getCurrentListMapNoExtraKeys!104 (array!4365 array!4367 (_ BitVec 32) (_ BitVec 32) V!3241 V!3241 (_ BitVec 32) Int) ListLongMap!1553)

(assert (=> b!109513 (= lt!56303 (getCurrentListMapNoExtraKeys!104 (_keys!4339 (v!2920 (underlying!363 thiss!992))) (_values!2609 (v!2920 (underlying!363 thiss!992))) (mask!6793 (v!2920 (underlying!363 thiss!992))) (extraKeys!2423 (v!2920 (underlying!363 thiss!992))) (zeroValue!2497 (v!2920 (underlying!363 thiss!992))) (minValue!2497 (v!2920 (underlying!363 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2626 (v!2920 (underlying!363 thiss!992)))))))

(declare-fun b!109514 () Bool)

(declare-fun res!54206 () Bool)

(assert (=> b!109514 (=> (not res!54206) (not e!71234))))

(declare-fun valid!430 (LongMapFixedSize!916) Bool)

(assert (=> b!109514 (= res!54206 (valid!430 newMap!16))))

(declare-fun mapNonEmpty!3994 () Bool)

(declare-fun tp!10010 () Bool)

(assert (=> mapNonEmpty!3994 (= mapRes!3993 (and tp!10010 e!71230))))

(declare-fun mapKey!3994 () (_ BitVec 32))

(declare-fun mapValue!3994 () ValueCell!1004)

(declare-fun mapRest!3994 () (Array (_ BitVec 32) ValueCell!1004))

(assert (=> mapNonEmpty!3994 (= (arr!2069 (_values!2609 newMap!16)) (store mapRest!3994 mapKey!3994 mapValue!3994))))

(declare-fun b!109515 () Bool)

(assert (=> b!109515 (= e!71228 (or (not (= (size!2327 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 (mask!6793 (v!2920 (underlying!363 thiss!992)))))) (not (= (size!2326 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (size!2327 (_values!2609 (v!2920 (underlying!363 thiss!992)))))) (bvslt (mask!6793 (v!2920 (underlying!363 thiss!992))) #b00000000000000000000000000000000) (bvslt (extraKeys!2423 (v!2920 (underlying!363 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2423 (v!2920 (underlying!363 thiss!992))) #b00000000000000000000000000000011)))))

(declare-fun res!54209 () Bool)

(assert (=> start!12684 (=> (not res!54209) (not e!71234))))

(declare-fun valid!431 (LongMap!704) Bool)

(assert (=> start!12684 (= res!54209 (valid!431 thiss!992))))

(assert (=> start!12684 e!71234))

(assert (=> start!12684 e!71240))

(assert (=> start!12684 true))

(assert (=> start!12684 e!71243))

(assert (= (and start!12684 res!54209) b!109507))

(assert (= (and b!109507 res!54208) b!109514))

(assert (= (and b!109514 res!54206) b!109499))

(assert (= (and b!109499 res!54211) b!109504))

(assert (= (and b!109504 res!54205) b!109503))

(assert (= (and b!109503 res!54212) b!109510))

(assert (= (and b!109510 c!19363) b!109497))

(assert (= (and b!109510 (not c!19363)) b!109509))

(assert (= (and b!109510 res!54210) b!109513))

(assert (= (and b!109513 (not res!54207)) b!109515))

(assert (= (and b!109498 condMapEmpty!3994) mapIsEmpty!3993))

(assert (= (and b!109498 (not condMapEmpty!3994)) mapNonEmpty!3993))

(get-info :version)

(assert (= (and mapNonEmpty!3993 ((_ is ValueCellFull!1004) mapValue!3993)) b!109505))

(assert (= (and b!109498 ((_ is ValueCellFull!1004) mapDefault!3994)) b!109511))

(assert (= b!109508 b!109498))

(assert (= b!109502 b!109508))

(assert (= b!109496 b!109502))

(assert (= start!12684 b!109496))

(assert (= (and b!109501 condMapEmpty!3993) mapIsEmpty!3994))

(assert (= (and b!109501 (not condMapEmpty!3993)) mapNonEmpty!3994))

(assert (= (and mapNonEmpty!3994 ((_ is ValueCellFull!1004) mapValue!3994)) b!109506))

(assert (= (and b!109501 ((_ is ValueCellFull!1004) mapDefault!3993)) b!109500))

(assert (= b!109512 b!109501))

(assert (= start!12684 b!109512))

(declare-fun b_lambda!4901 () Bool)

(assert (=> (not b_lambda!4901) (not b!109503)))

(declare-fun t!5751 () Bool)

(declare-fun tb!2093 () Bool)

(assert (=> (and b!109508 (= (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) (defaultEntry!2626 (v!2920 (underlying!363 thiss!992)))) t!5751) tb!2093))

(declare-fun result!3513 () Bool)

(assert (=> tb!2093 (= result!3513 tp_is_empty!2695)))

(assert (=> b!109503 t!5751))

(declare-fun b_and!6737 () Bool)

(assert (= b_and!6733 (and (=> t!5751 result!3513) b_and!6737)))

(declare-fun tb!2095 () Bool)

(declare-fun t!5753 () Bool)

(assert (=> (and b!109512 (= (defaultEntry!2626 newMap!16) (defaultEntry!2626 (v!2920 (underlying!363 thiss!992)))) t!5753) tb!2095))

(declare-fun result!3517 () Bool)

(assert (= result!3517 result!3513))

(assert (=> b!109503 t!5753))

(declare-fun b_and!6739 () Bool)

(assert (= b_and!6735 (and (=> t!5753 result!3517) b_and!6739)))

(declare-fun m!123861 () Bool)

(assert (=> b!109508 m!123861))

(declare-fun m!123863 () Bool)

(assert (=> b!109508 m!123863))

(declare-fun m!123865 () Bool)

(assert (=> b!109510 m!123865))

(assert (=> b!109510 m!123865))

(declare-fun m!123867 () Bool)

(assert (=> b!109510 m!123867))

(assert (=> b!109510 m!123865))

(declare-fun m!123869 () Bool)

(assert (=> b!109510 m!123869))

(declare-fun m!123871 () Bool)

(assert (=> mapNonEmpty!3994 m!123871))

(declare-fun m!123873 () Bool)

(assert (=> mapNonEmpty!3993 m!123873))

(declare-fun m!123875 () Bool)

(assert (=> start!12684 m!123875))

(declare-fun m!123877 () Bool)

(assert (=> b!109514 m!123877))

(declare-fun m!123879 () Bool)

(assert (=> b!109512 m!123879))

(declare-fun m!123881 () Bool)

(assert (=> b!109512 m!123881))

(declare-fun m!123883 () Bool)

(assert (=> b!109497 m!123883))

(declare-fun m!123885 () Bool)

(assert (=> b!109497 m!123885))

(assert (=> b!109497 m!123865))

(declare-fun m!123887 () Bool)

(assert (=> b!109497 m!123887))

(assert (=> b!109497 m!123865))

(assert (=> b!109497 m!123865))

(declare-fun m!123889 () Bool)

(assert (=> b!109497 m!123889))

(assert (=> b!109497 m!123865))

(declare-fun m!123891 () Bool)

(assert (=> b!109497 m!123891))

(declare-fun m!123893 () Bool)

(assert (=> b!109504 m!123893))

(declare-fun m!123895 () Bool)

(assert (=> b!109504 m!123895))

(declare-fun m!123897 () Bool)

(assert (=> b!109513 m!123897))

(assert (=> b!109513 m!123897))

(declare-fun m!123899 () Bool)

(assert (=> b!109513 m!123899))

(declare-fun m!123901 () Bool)

(assert (=> b!109513 m!123901))

(declare-fun m!123903 () Bool)

(assert (=> b!109513 m!123903))

(declare-fun m!123905 () Bool)

(assert (=> b!109513 m!123905))

(assert (=> b!109513 m!123865))

(assert (=> b!109513 m!123903))

(assert (=> b!109513 m!123865))

(declare-fun m!123907 () Bool)

(assert (=> b!109513 m!123907))

(declare-fun m!123909 () Bool)

(assert (=> b!109513 m!123909))

(assert (=> b!109503 m!123865))

(declare-fun m!123911 () Bool)

(assert (=> b!109503 m!123911))

(declare-fun m!123913 () Bool)

(assert (=> b!109503 m!123913))

(assert (=> b!109503 m!123911))

(assert (=> b!109503 m!123913))

(declare-fun m!123915 () Bool)

(assert (=> b!109503 m!123915))

(check-sat (not b_next!2559) (not b!109508) (not b!109503) (not b!109497) (not b!109510) b_and!6739 (not b_lambda!4901) (not start!12684) (not b!109512) b_and!6737 (not mapNonEmpty!3994) (not b_next!2557) (not b!109514) (not b!109504) (not b!109513) tp_is_empty!2695 (not mapNonEmpty!3993))
(check-sat b_and!6737 b_and!6739 (not b_next!2557) (not b_next!2559))
(get-model)

(declare-fun b_lambda!4907 () Bool)

(assert (= b_lambda!4901 (or (and b!109508 b_free!2557) (and b!109512 b_free!2559 (= (defaultEntry!2626 newMap!16) (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))))) b_lambda!4907)))

(check-sat (not b_next!2559) (not b!109503) (not b!109497) (not b!109510) b_and!6739 (not start!12684) (not b!109512) b_and!6737 (not mapNonEmpty!3994) (not b_next!2557) (not b!109514) (not b!109508) (not b_lambda!4907) (not b!109504) (not b!109513) tp_is_empty!2695 (not mapNonEmpty!3993))
(check-sat b_and!6737 b_and!6739 (not b_next!2557) (not b_next!2559))
(get-model)

(declare-fun d!30745 () Bool)

(declare-fun e!71356 () Bool)

(assert (=> d!30745 e!71356))

(declare-fun res!54265 () Bool)

(assert (=> d!30745 (=> (not res!54265) (not e!71356))))

(declare-fun lt!56388 () ListLongMap!1553)

(assert (=> d!30745 (= res!54265 (contains!827 lt!56388 (_1!1209 lt!56299)))))

(declare-fun lt!56387 () List!1627)

(assert (=> d!30745 (= lt!56388 (ListLongMap!1554 lt!56387))))

(declare-fun lt!56389 () Unit!3390)

(declare-fun lt!56390 () Unit!3390)

(assert (=> d!30745 (= lt!56389 lt!56390)))

(declare-datatypes ((Option!162 0))(
  ( (Some!161 (v!2926 V!3241)) (None!160) )
))
(declare-fun getValueByKey!156 (List!1627 (_ BitVec 64)) Option!162)

(assert (=> d!30745 (= (getValueByKey!156 lt!56387 (_1!1209 lt!56299)) (Some!161 (_2!1209 lt!56299)))))

(declare-fun lemmaContainsTupThenGetReturnValue!75 (List!1627 (_ BitVec 64) V!3241) Unit!3390)

(assert (=> d!30745 (= lt!56390 (lemmaContainsTupThenGetReturnValue!75 lt!56387 (_1!1209 lt!56299) (_2!1209 lt!56299)))))

(declare-fun insertStrictlySorted!78 (List!1627 (_ BitVec 64) V!3241) List!1627)

(assert (=> d!30745 (= lt!56387 (insertStrictlySorted!78 (toList!792 (+!139 lt!56303 lt!56300)) (_1!1209 lt!56299) (_2!1209 lt!56299)))))

(assert (=> d!30745 (= (+!139 (+!139 lt!56303 lt!56300) lt!56299) lt!56388)))

(declare-fun b!109646 () Bool)

(declare-fun res!54266 () Bool)

(assert (=> b!109646 (=> (not res!54266) (not e!71356))))

(assert (=> b!109646 (= res!54266 (= (getValueByKey!156 (toList!792 lt!56388) (_1!1209 lt!56299)) (Some!161 (_2!1209 lt!56299))))))

(declare-fun b!109647 () Bool)

(declare-fun contains!829 (List!1627 tuple2!2396) Bool)

(assert (=> b!109647 (= e!71356 (contains!829 (toList!792 lt!56388) lt!56299))))

(assert (= (and d!30745 res!54265) b!109646))

(assert (= (and b!109646 res!54266) b!109647))

(declare-fun m!124029 () Bool)

(assert (=> d!30745 m!124029))

(declare-fun m!124031 () Bool)

(assert (=> d!30745 m!124031))

(declare-fun m!124033 () Bool)

(assert (=> d!30745 m!124033))

(declare-fun m!124035 () Bool)

(assert (=> d!30745 m!124035))

(declare-fun m!124037 () Bool)

(assert (=> b!109646 m!124037))

(declare-fun m!124039 () Bool)

(assert (=> b!109647 m!124039))

(assert (=> b!109513 d!30745))

(declare-fun d!30747 () Bool)

(declare-fun e!71357 () Bool)

(assert (=> d!30747 e!71357))

(declare-fun res!54267 () Bool)

(assert (=> d!30747 (=> (not res!54267) (not e!71357))))

(declare-fun lt!56392 () ListLongMap!1553)

(assert (=> d!30747 (= res!54267 (contains!827 lt!56392 (_1!1209 lt!56300)))))

(declare-fun lt!56391 () List!1627)

(assert (=> d!30747 (= lt!56392 (ListLongMap!1554 lt!56391))))

(declare-fun lt!56393 () Unit!3390)

(declare-fun lt!56394 () Unit!3390)

(assert (=> d!30747 (= lt!56393 lt!56394)))

(assert (=> d!30747 (= (getValueByKey!156 lt!56391 (_1!1209 lt!56300)) (Some!161 (_2!1209 lt!56300)))))

(assert (=> d!30747 (= lt!56394 (lemmaContainsTupThenGetReturnValue!75 lt!56391 (_1!1209 lt!56300) (_2!1209 lt!56300)))))

(assert (=> d!30747 (= lt!56391 (insertStrictlySorted!78 (toList!792 lt!56303) (_1!1209 lt!56300) (_2!1209 lt!56300)))))

(assert (=> d!30747 (= (+!139 lt!56303 lt!56300) lt!56392)))

(declare-fun b!109648 () Bool)

(declare-fun res!54268 () Bool)

(assert (=> b!109648 (=> (not res!54268) (not e!71357))))

(assert (=> b!109648 (= res!54268 (= (getValueByKey!156 (toList!792 lt!56392) (_1!1209 lt!56300)) (Some!161 (_2!1209 lt!56300))))))

(declare-fun b!109649 () Bool)

(assert (=> b!109649 (= e!71357 (contains!829 (toList!792 lt!56392) lt!56300))))

(assert (= (and d!30747 res!54267) b!109648))

(assert (= (and b!109648 res!54268) b!109649))

(declare-fun m!124041 () Bool)

(assert (=> d!30747 m!124041))

(declare-fun m!124043 () Bool)

(assert (=> d!30747 m!124043))

(declare-fun m!124045 () Bool)

(assert (=> d!30747 m!124045))

(declare-fun m!124047 () Bool)

(assert (=> d!30747 m!124047))

(declare-fun m!124049 () Bool)

(assert (=> b!109648 m!124049))

(declare-fun m!124051 () Bool)

(assert (=> b!109649 m!124051))

(assert (=> b!109513 d!30747))

(declare-fun d!30749 () Bool)

(assert (=> d!30749 (= (validMask!0 (mask!6793 (v!2920 (underlying!363 thiss!992)))) (and (or (= (mask!6793 (v!2920 (underlying!363 thiss!992))) #b00000000000000000000000000000111) (= (mask!6793 (v!2920 (underlying!363 thiss!992))) #b00000000000000000000000000001111) (= (mask!6793 (v!2920 (underlying!363 thiss!992))) #b00000000000000000000000000011111) (= (mask!6793 (v!2920 (underlying!363 thiss!992))) #b00000000000000000000000000111111) (= (mask!6793 (v!2920 (underlying!363 thiss!992))) #b00000000000000000000000001111111) (= (mask!6793 (v!2920 (underlying!363 thiss!992))) #b00000000000000000000000011111111) (= (mask!6793 (v!2920 (underlying!363 thiss!992))) #b00000000000000000000000111111111) (= (mask!6793 (v!2920 (underlying!363 thiss!992))) #b00000000000000000000001111111111) (= (mask!6793 (v!2920 (underlying!363 thiss!992))) #b00000000000000000000011111111111) (= (mask!6793 (v!2920 (underlying!363 thiss!992))) #b00000000000000000000111111111111) (= (mask!6793 (v!2920 (underlying!363 thiss!992))) #b00000000000000000001111111111111) (= (mask!6793 (v!2920 (underlying!363 thiss!992))) #b00000000000000000011111111111111) (= (mask!6793 (v!2920 (underlying!363 thiss!992))) #b00000000000000000111111111111111) (= (mask!6793 (v!2920 (underlying!363 thiss!992))) #b00000000000000001111111111111111) (= (mask!6793 (v!2920 (underlying!363 thiss!992))) #b00000000000000011111111111111111) (= (mask!6793 (v!2920 (underlying!363 thiss!992))) #b00000000000000111111111111111111) (= (mask!6793 (v!2920 (underlying!363 thiss!992))) #b00000000000001111111111111111111) (= (mask!6793 (v!2920 (underlying!363 thiss!992))) #b00000000000011111111111111111111) (= (mask!6793 (v!2920 (underlying!363 thiss!992))) #b00000000000111111111111111111111) (= (mask!6793 (v!2920 (underlying!363 thiss!992))) #b00000000001111111111111111111111) (= (mask!6793 (v!2920 (underlying!363 thiss!992))) #b00000000011111111111111111111111) (= (mask!6793 (v!2920 (underlying!363 thiss!992))) #b00000000111111111111111111111111) (= (mask!6793 (v!2920 (underlying!363 thiss!992))) #b00000001111111111111111111111111) (= (mask!6793 (v!2920 (underlying!363 thiss!992))) #b00000011111111111111111111111111) (= (mask!6793 (v!2920 (underlying!363 thiss!992))) #b00000111111111111111111111111111) (= (mask!6793 (v!2920 (underlying!363 thiss!992))) #b00001111111111111111111111111111) (= (mask!6793 (v!2920 (underlying!363 thiss!992))) #b00011111111111111111111111111111) (= (mask!6793 (v!2920 (underlying!363 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!6793 (v!2920 (underlying!363 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> b!109513 d!30749))

(declare-fun d!30751 () Bool)

(assert (=> d!30751 (= (+!139 (+!139 lt!56303 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))) (+!139 (+!139 lt!56303 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))))

(declare-fun lt!56397 () Unit!3390)

(declare-fun choose!689 (ListLongMap!1553 (_ BitVec 64) V!3241 (_ BitVec 64) V!3241) Unit!3390)

(assert (=> d!30751 (= lt!56397 (choose!689 lt!56303 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))

(assert (=> d!30751 (not (= (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!30751 (= (addCommutativeForDiffKeys!51 lt!56303 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))) lt!56397)))

(declare-fun bs!4510 () Bool)

(assert (= bs!4510 d!30751))

(declare-fun m!124053 () Bool)

(assert (=> bs!4510 m!124053))

(declare-fun m!124055 () Bool)

(assert (=> bs!4510 m!124055))

(assert (=> bs!4510 m!123865))

(declare-fun m!124057 () Bool)

(assert (=> bs!4510 m!124057))

(declare-fun m!124059 () Bool)

(assert (=> bs!4510 m!124059))

(declare-fun m!124061 () Bool)

(assert (=> bs!4510 m!124061))

(assert (=> bs!4510 m!124053))

(assert (=> bs!4510 m!124059))

(assert (=> b!109513 d!30751))

(declare-fun d!30753 () Bool)

(declare-fun e!71358 () Bool)

(assert (=> d!30753 e!71358))

(declare-fun res!54269 () Bool)

(assert (=> d!30753 (=> (not res!54269) (not e!71358))))

(declare-fun lt!56399 () ListLongMap!1553)

(assert (=> d!30753 (= res!54269 (contains!827 lt!56399 (_1!1209 lt!56300)))))

(declare-fun lt!56398 () List!1627)

(assert (=> d!30753 (= lt!56399 (ListLongMap!1554 lt!56398))))

(declare-fun lt!56400 () Unit!3390)

(declare-fun lt!56401 () Unit!3390)

(assert (=> d!30753 (= lt!56400 lt!56401)))

(assert (=> d!30753 (= (getValueByKey!156 lt!56398 (_1!1209 lt!56300)) (Some!161 (_2!1209 lt!56300)))))

(assert (=> d!30753 (= lt!56401 (lemmaContainsTupThenGetReturnValue!75 lt!56398 (_1!1209 lt!56300) (_2!1209 lt!56300)))))

(assert (=> d!30753 (= lt!56398 (insertStrictlySorted!78 (toList!792 (+!139 lt!56303 lt!56299)) (_1!1209 lt!56300) (_2!1209 lt!56300)))))

(assert (=> d!30753 (= (+!139 (+!139 lt!56303 lt!56299) lt!56300) lt!56399)))

(declare-fun b!109650 () Bool)

(declare-fun res!54270 () Bool)

(assert (=> b!109650 (=> (not res!54270) (not e!71358))))

(assert (=> b!109650 (= res!54270 (= (getValueByKey!156 (toList!792 lt!56399) (_1!1209 lt!56300)) (Some!161 (_2!1209 lt!56300))))))

(declare-fun b!109651 () Bool)

(assert (=> b!109651 (= e!71358 (contains!829 (toList!792 lt!56399) lt!56300))))

(assert (= (and d!30753 res!54269) b!109650))

(assert (= (and b!109650 res!54270) b!109651))

(declare-fun m!124063 () Bool)

(assert (=> d!30753 m!124063))

(declare-fun m!124065 () Bool)

(assert (=> d!30753 m!124065))

(declare-fun m!124067 () Bool)

(assert (=> d!30753 m!124067))

(declare-fun m!124069 () Bool)

(assert (=> d!30753 m!124069))

(declare-fun m!124071 () Bool)

(assert (=> b!109650 m!124071))

(declare-fun m!124073 () Bool)

(assert (=> b!109651 m!124073))

(assert (=> b!109513 d!30753))

(declare-fun d!30755 () Bool)

(declare-fun e!71359 () Bool)

(assert (=> d!30755 e!71359))

(declare-fun res!54271 () Bool)

(assert (=> d!30755 (=> (not res!54271) (not e!71359))))

(declare-fun lt!56403 () ListLongMap!1553)

(assert (=> d!30755 (= res!54271 (contains!827 lt!56403 (_1!1209 lt!56299)))))

(declare-fun lt!56402 () List!1627)

(assert (=> d!30755 (= lt!56403 (ListLongMap!1554 lt!56402))))

(declare-fun lt!56404 () Unit!3390)

(declare-fun lt!56405 () Unit!3390)

(assert (=> d!30755 (= lt!56404 lt!56405)))

(assert (=> d!30755 (= (getValueByKey!156 lt!56402 (_1!1209 lt!56299)) (Some!161 (_2!1209 lt!56299)))))

(assert (=> d!30755 (= lt!56405 (lemmaContainsTupThenGetReturnValue!75 lt!56402 (_1!1209 lt!56299) (_2!1209 lt!56299)))))

(assert (=> d!30755 (= lt!56402 (insertStrictlySorted!78 (toList!792 lt!56303) (_1!1209 lt!56299) (_2!1209 lt!56299)))))

(assert (=> d!30755 (= (+!139 lt!56303 lt!56299) lt!56403)))

(declare-fun b!109652 () Bool)

(declare-fun res!54272 () Bool)

(assert (=> b!109652 (=> (not res!54272) (not e!71359))))

(assert (=> b!109652 (= res!54272 (= (getValueByKey!156 (toList!792 lt!56403) (_1!1209 lt!56299)) (Some!161 (_2!1209 lt!56299))))))

(declare-fun b!109653 () Bool)

(assert (=> b!109653 (= e!71359 (contains!829 (toList!792 lt!56403) lt!56299))))

(assert (= (and d!30755 res!54271) b!109652))

(assert (= (and b!109652 res!54272) b!109653))

(declare-fun m!124075 () Bool)

(assert (=> d!30755 m!124075))

(declare-fun m!124077 () Bool)

(assert (=> d!30755 m!124077))

(declare-fun m!124079 () Bool)

(assert (=> d!30755 m!124079))

(declare-fun m!124081 () Bool)

(assert (=> d!30755 m!124081))

(declare-fun m!124083 () Bool)

(assert (=> b!109652 m!124083))

(declare-fun m!124085 () Bool)

(assert (=> b!109653 m!124085))

(assert (=> b!109513 d!30755))

(declare-fun b!109678 () Bool)

(declare-fun e!71378 () Bool)

(declare-fun e!71379 () Bool)

(assert (=> b!109678 (= e!71378 e!71379)))

(declare-fun c!19380 () Bool)

(declare-fun e!71380 () Bool)

(assert (=> b!109678 (= c!19380 e!71380)))

(declare-fun res!54284 () Bool)

(assert (=> b!109678 (=> (not res!54284) (not e!71380))))

(assert (=> b!109678 (= res!54284 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2326 (_keys!4339 (v!2920 (underlying!363 thiss!992))))))))

(declare-fun b!109679 () Bool)

(assert (=> b!109679 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2326 (_keys!4339 (v!2920 (underlying!363 thiss!992))))))))

(assert (=> b!109679 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2327 (_values!2609 (v!2920 (underlying!363 thiss!992))))))))

(declare-fun e!71374 () Bool)

(declare-fun lt!56425 () ListLongMap!1553)

(declare-fun apply!100 (ListLongMap!1553 (_ BitVec 64)) V!3241)

(assert (=> b!109679 (= e!71374 (= (apply!100 lt!56425 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!109680 () Bool)

(declare-fun e!71375 () Bool)

(assert (=> b!109680 (= e!71375 (= lt!56425 (getCurrentListMapNoExtraKeys!104 (_keys!4339 (v!2920 (underlying!363 thiss!992))) (_values!2609 (v!2920 (underlying!363 thiss!992))) (mask!6793 (v!2920 (underlying!363 thiss!992))) (extraKeys!2423 (v!2920 (underlying!363 thiss!992))) (zeroValue!2497 (v!2920 (underlying!363 thiss!992))) (minValue!2497 (v!2920 (underlying!363 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))))))))

(declare-fun bm!11620 () Bool)

(declare-fun call!11623 () ListLongMap!1553)

(assert (=> bm!11620 (= call!11623 (getCurrentListMapNoExtraKeys!104 (_keys!4339 (v!2920 (underlying!363 thiss!992))) (_values!2609 (v!2920 (underlying!363 thiss!992))) (mask!6793 (v!2920 (underlying!363 thiss!992))) (extraKeys!2423 (v!2920 (underlying!363 thiss!992))) (zeroValue!2497 (v!2920 (underlying!363 thiss!992))) (minValue!2497 (v!2920 (underlying!363 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2626 (v!2920 (underlying!363 thiss!992)))))))

(declare-fun b!109681 () Bool)

(declare-fun e!71376 () ListLongMap!1553)

(assert (=> b!109681 (= e!71376 (ListLongMap!1554 Nil!1624))))

(declare-fun b!109682 () Bool)

(declare-fun e!71377 () ListLongMap!1553)

(assert (=> b!109682 (= e!71376 e!71377)))

(declare-fun c!19378 () Bool)

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!109682 (= c!19378 (validKeyInArray!0 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!109683 () Bool)

(declare-fun res!54281 () Bool)

(assert (=> b!109683 (=> (not res!54281) (not e!71378))))

(assert (=> b!109683 (= res!54281 (not (contains!827 lt!56425 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!109684 () Bool)

(assert (=> b!109684 (= e!71379 e!71374)))

(assert (=> b!109684 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2326 (_keys!4339 (v!2920 (underlying!363 thiss!992))))))))

(declare-fun res!54282 () Bool)

(assert (=> b!109684 (= res!54282 (contains!827 lt!56425 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!109684 (=> (not res!54282) (not e!71374))))

(declare-fun d!30757 () Bool)

(assert (=> d!30757 e!71378))

(declare-fun res!54283 () Bool)

(assert (=> d!30757 (=> (not res!54283) (not e!71378))))

(assert (=> d!30757 (= res!54283 (not (contains!827 lt!56425 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!30757 (= lt!56425 e!71376)))

(declare-fun c!19379 () Bool)

(assert (=> d!30757 (= c!19379 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2326 (_keys!4339 (v!2920 (underlying!363 thiss!992))))))))

(assert (=> d!30757 (validMask!0 (mask!6793 (v!2920 (underlying!363 thiss!992))))))

(assert (=> d!30757 (= (getCurrentListMapNoExtraKeys!104 (_keys!4339 (v!2920 (underlying!363 thiss!992))) (_values!2609 (v!2920 (underlying!363 thiss!992))) (mask!6793 (v!2920 (underlying!363 thiss!992))) (extraKeys!2423 (v!2920 (underlying!363 thiss!992))) (zeroValue!2497 (v!2920 (underlying!363 thiss!992))) (minValue!2497 (v!2920 (underlying!363 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2626 (v!2920 (underlying!363 thiss!992)))) lt!56425)))

(declare-fun b!109685 () Bool)

(declare-fun isEmpty!380 (ListLongMap!1553) Bool)

(assert (=> b!109685 (= e!71375 (isEmpty!380 lt!56425))))

(declare-fun b!109686 () Bool)

(assert (=> b!109686 (= e!71380 (validKeyInArray!0 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!109686 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(declare-fun b!109687 () Bool)

(declare-fun lt!56423 () Unit!3390)

(declare-fun lt!56426 () Unit!3390)

(assert (=> b!109687 (= lt!56423 lt!56426)))

(declare-fun lt!56424 () (_ BitVec 64))

(declare-fun lt!56420 () ListLongMap!1553)

(declare-fun lt!56422 () (_ BitVec 64))

(declare-fun lt!56421 () V!3241)

(assert (=> b!109687 (not (contains!827 (+!139 lt!56420 (tuple2!2397 lt!56424 lt!56421)) lt!56422))))

(declare-fun addStillNotContains!49 (ListLongMap!1553 (_ BitVec 64) V!3241 (_ BitVec 64)) Unit!3390)

(assert (=> b!109687 (= lt!56426 (addStillNotContains!49 lt!56420 lt!56424 lt!56421 lt!56422))))

(assert (=> b!109687 (= lt!56422 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!109687 (= lt!56421 (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!109687 (= lt!56424 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!109687 (= lt!56420 call!11623)))

(assert (=> b!109687 (= e!71377 (+!139 call!11623 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!109688 () Bool)

(assert (=> b!109688 (= e!71377 call!11623)))

(declare-fun b!109689 () Bool)

(assert (=> b!109689 (= e!71379 e!71375)))

(declare-fun c!19381 () Bool)

(assert (=> b!109689 (= c!19381 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2326 (_keys!4339 (v!2920 (underlying!363 thiss!992))))))))

(assert (= (and d!30757 c!19379) b!109681))

(assert (= (and d!30757 (not c!19379)) b!109682))

(assert (= (and b!109682 c!19378) b!109687))

(assert (= (and b!109682 (not c!19378)) b!109688))

(assert (= (or b!109687 b!109688) bm!11620))

(assert (= (and d!30757 res!54283) b!109683))

(assert (= (and b!109683 res!54281) b!109678))

(assert (= (and b!109678 res!54284) b!109686))

(assert (= (and b!109678 c!19380) b!109684))

(assert (= (and b!109678 (not c!19380)) b!109689))

(assert (= (and b!109684 res!54282) b!109679))

(assert (= (and b!109689 c!19381) b!109680))

(assert (= (and b!109689 (not c!19381)) b!109685))

(declare-fun b_lambda!4909 () Bool)

(assert (=> (not b_lambda!4909) (not b!109679)))

(assert (=> b!109679 t!5751))

(declare-fun b_and!6757 () Bool)

(assert (= b_and!6737 (and (=> t!5751 result!3513) b_and!6757)))

(assert (=> b!109679 t!5753))

(declare-fun b_and!6759 () Bool)

(assert (= b_and!6739 (and (=> t!5753 result!3517) b_and!6759)))

(declare-fun b_lambda!4911 () Bool)

(assert (=> (not b_lambda!4911) (not b!109687)))

(assert (=> b!109687 t!5751))

(declare-fun b_and!6761 () Bool)

(assert (= b_and!6757 (and (=> t!5751 result!3513) b_and!6761)))

(assert (=> b!109687 t!5753))

(declare-fun b_and!6763 () Bool)

(assert (= b_and!6759 (and (=> t!5753 result!3517) b_and!6763)))

(declare-fun m!124087 () Bool)

(assert (=> b!109679 m!124087))

(assert (=> b!109679 m!124087))

(declare-fun m!124089 () Bool)

(assert (=> b!109679 m!124089))

(declare-fun m!124091 () Bool)

(assert (=> b!109679 m!124091))

(assert (=> b!109679 m!124091))

(assert (=> b!109679 m!123913))

(declare-fun m!124093 () Bool)

(assert (=> b!109679 m!124093))

(assert (=> b!109679 m!123913))

(assert (=> b!109686 m!124087))

(assert (=> b!109686 m!124087))

(declare-fun m!124095 () Bool)

(assert (=> b!109686 m!124095))

(declare-fun m!124097 () Bool)

(assert (=> b!109685 m!124097))

(assert (=> b!109684 m!124087))

(assert (=> b!109684 m!124087))

(declare-fun m!124099 () Bool)

(assert (=> b!109684 m!124099))

(declare-fun m!124101 () Bool)

(assert (=> b!109683 m!124101))

(declare-fun m!124103 () Bool)

(assert (=> b!109680 m!124103))

(assert (=> b!109682 m!124087))

(assert (=> b!109682 m!124087))

(assert (=> b!109682 m!124095))

(declare-fun m!124105 () Bool)

(assert (=> d!30757 m!124105))

(assert (=> d!30757 m!123901))

(assert (=> bm!11620 m!124103))

(assert (=> b!109687 m!124087))

(declare-fun m!124107 () Bool)

(assert (=> b!109687 m!124107))

(declare-fun m!124109 () Bool)

(assert (=> b!109687 m!124109))

(declare-fun m!124111 () Bool)

(assert (=> b!109687 m!124111))

(declare-fun m!124113 () Bool)

(assert (=> b!109687 m!124113))

(assert (=> b!109687 m!124091))

(assert (=> b!109687 m!124091))

(assert (=> b!109687 m!123913))

(assert (=> b!109687 m!124093))

(assert (=> b!109687 m!124111))

(assert (=> b!109687 m!123913))

(assert (=> b!109513 d!30757))

(declare-fun d!30759 () Bool)

(declare-fun e!71386 () Bool)

(assert (=> d!30759 e!71386))

(declare-fun res!54287 () Bool)

(assert (=> d!30759 (=> res!54287 e!71386)))

(declare-fun lt!56435 () Bool)

(assert (=> d!30759 (= res!54287 (not lt!56435))))

(declare-fun lt!56436 () Bool)

(assert (=> d!30759 (= lt!56435 lt!56436)))

(declare-fun lt!56437 () Unit!3390)

(declare-fun e!71385 () Unit!3390)

(assert (=> d!30759 (= lt!56437 e!71385)))

(declare-fun c!19384 () Bool)

(assert (=> d!30759 (= c!19384 lt!56436)))

(declare-fun containsKey!160 (List!1627 (_ BitVec 64)) Bool)

(assert (=> d!30759 (= lt!56436 (containsKey!160 (toList!792 lt!56298) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))

(assert (=> d!30759 (= (contains!827 lt!56298 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) lt!56435)))

(declare-fun b!109696 () Bool)

(declare-fun lt!56438 () Unit!3390)

(assert (=> b!109696 (= e!71385 lt!56438)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!109 (List!1627 (_ BitVec 64)) Unit!3390)

(assert (=> b!109696 (= lt!56438 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 lt!56298) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))

(declare-fun isDefined!110 (Option!162) Bool)

(assert (=> b!109696 (isDefined!110 (getValueByKey!156 (toList!792 lt!56298) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))

(declare-fun b!109697 () Bool)

(declare-fun Unit!3397 () Unit!3390)

(assert (=> b!109697 (= e!71385 Unit!3397)))

(declare-fun b!109698 () Bool)

(assert (=> b!109698 (= e!71386 (isDefined!110 (getValueByKey!156 (toList!792 lt!56298) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355))))))

(assert (= (and d!30759 c!19384) b!109696))

(assert (= (and d!30759 (not c!19384)) b!109697))

(assert (= (and d!30759 (not res!54287)) b!109698))

(assert (=> d!30759 m!123865))

(declare-fun m!124115 () Bool)

(assert (=> d!30759 m!124115))

(assert (=> b!109696 m!123865))

(declare-fun m!124117 () Bool)

(assert (=> b!109696 m!124117))

(assert (=> b!109696 m!123865))

(declare-fun m!124119 () Bool)

(assert (=> b!109696 m!124119))

(assert (=> b!109696 m!124119))

(declare-fun m!124121 () Bool)

(assert (=> b!109696 m!124121))

(assert (=> b!109698 m!123865))

(assert (=> b!109698 m!124119))

(assert (=> b!109698 m!124119))

(assert (=> b!109698 m!124121))

(assert (=> b!109510 d!30759))

(declare-fun b!109783 () Bool)

(declare-fun c!19426 () Bool)

(declare-datatypes ((SeekEntryResult!264 0))(
  ( (MissingZero!264 (index!3206 (_ BitVec 32))) (Found!264 (index!3207 (_ BitVec 32))) (Intermediate!264 (undefined!1076 Bool) (index!3208 (_ BitVec 32)) (x!13951 (_ BitVec 32))) (Undefined!264) (MissingVacant!264 (index!3209 (_ BitVec 32))) )
))
(declare-fun lt!56493 () SeekEntryResult!264)

(assert (=> b!109783 (= c!19426 ((_ is MissingVacant!264) lt!56493))))

(declare-fun e!71437 () tuple2!2398)

(declare-fun e!71435 () tuple2!2398)

(assert (=> b!109783 (= e!71437 e!71435)))

(declare-fun lt!56497 () SeekEntryResult!264)

(declare-fun c!19418 () Bool)

(declare-fun c!19413 () Bool)

(declare-fun lt!56510 () SeekEntryResult!264)

(declare-fun call!11687 () Bool)

(declare-fun lt!56496 () SeekEntryResult!264)

(declare-fun c!19424 () Bool)

(declare-fun c!19419 () Bool)

(declare-fun c!19420 () Bool)

(declare-fun bm!11669 () Bool)

(declare-fun lt!56509 () SeekEntryResult!264)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!11669 (= call!11687 (inRange!0 (ite c!19413 (ite c!19420 (index!3207 lt!56509) (ite c!19418 (index!3206 lt!56497) (index!3209 lt!56497))) (ite c!19419 (index!3207 lt!56510) (ite c!19424 (index!3206 lt!56496) (index!3209 lt!56496)))) (mask!6793 newMap!16)))))

(declare-fun bm!11670 () Bool)

(declare-fun call!11693 () Bool)

(declare-fun call!11690 () Bool)

(assert (=> bm!11670 (= call!11693 call!11690)))

(declare-fun bm!11671 () Bool)

(declare-fun call!11673 () Bool)

(declare-fun call!11672 () Bool)

(assert (=> bm!11671 (= call!11673 call!11672)))

(declare-fun b!109784 () Bool)

(declare-fun lt!56516 () Unit!3390)

(declare-fun lt!56518 () Unit!3390)

(assert (=> b!109784 (= lt!56516 lt!56518)))

(declare-fun call!11694 () ListLongMap!1553)

(assert (=> b!109784 (contains!827 call!11694 (select (arr!2068 (_keys!4339 newMap!16)) (index!3207 lt!56493)))))

(declare-fun lt!56515 () array!4367)

(declare-fun lemmaValidKeyInArrayIsInListMap!108 (array!4365 array!4367 (_ BitVec 32) (_ BitVec 32) V!3241 V!3241 (_ BitVec 32) Int) Unit!3390)

(assert (=> b!109784 (= lt!56518 (lemmaValidKeyInArrayIsInListMap!108 (_keys!4339 newMap!16) lt!56515 (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (index!3207 lt!56493) (defaultEntry!2626 newMap!16)))))

(assert (=> b!109784 (= lt!56515 (array!4368 (store (arr!2069 (_values!2609 newMap!16)) (index!3207 lt!56493) (ValueCellFull!1004 lt!56306)) (size!2327 (_values!2609 newMap!16))))))

(declare-fun lt!56517 () Unit!3390)

(declare-fun lt!56501 () Unit!3390)

(assert (=> b!109784 (= lt!56517 lt!56501)))

(declare-fun call!11680 () ListLongMap!1553)

(declare-fun call!11682 () ListLongMap!1553)

(assert (=> b!109784 (= call!11680 call!11682)))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!49 (array!4365 array!4367 (_ BitVec 32) (_ BitVec 32) V!3241 V!3241 (_ BitVec 32) (_ BitVec 64) V!3241 Int) Unit!3390)

(assert (=> b!109784 (= lt!56501 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!49 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (index!3207 lt!56493) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!56502 () Unit!3390)

(declare-fun e!71441 () Unit!3390)

(assert (=> b!109784 (= lt!56502 e!71441)))

(declare-fun call!11679 () Bool)

(assert (=> b!109784 (= c!19419 call!11679)))

(declare-fun e!71436 () tuple2!2398)

(assert (=> b!109784 (= e!71436 (tuple2!2399 true (LongMapFixedSize!917 (defaultEntry!2626 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (_size!507 newMap!16) (_keys!4339 newMap!16) (array!4368 (store (arr!2069 (_values!2609 newMap!16)) (index!3207 lt!56493) (ValueCellFull!1004 lt!56306)) (size!2327 (_values!2609 newMap!16))) (_vacant!507 newMap!16))))))

(declare-fun b!109785 () Bool)

(declare-fun res!54316 () Bool)

(assert (=> b!109785 (= res!54316 call!11690)))

(declare-fun e!71433 () Bool)

(assert (=> b!109785 (=> (not res!54316) (not e!71433))))

(declare-fun b!109786 () Bool)

(declare-fun res!54326 () Bool)

(declare-fun e!71438 () Bool)

(assert (=> b!109786 (=> (not res!54326) (not e!71438))))

(declare-fun call!11676 () Bool)

(assert (=> b!109786 (= res!54326 call!11676)))

(declare-fun e!71443 () Bool)

(assert (=> b!109786 (= e!71443 e!71438)))

(declare-fun bm!11672 () Bool)

(declare-fun call!11688 () ListLongMap!1553)

(assert (=> bm!11672 (= call!11682 call!11688)))

(declare-fun b!109787 () Bool)

(declare-fun e!71432 () ListLongMap!1553)

(assert (=> b!109787 (= e!71432 call!11682)))

(declare-fun c!19423 () Bool)

(declare-fun bm!11673 () Bool)

(declare-fun c!19416 () Bool)

(declare-fun e!71450 () ListLongMap!1553)

(assert (=> bm!11673 (= call!11680 (+!139 e!71450 (ite c!19423 (ite c!19416 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))

(declare-fun c!19422 () Bool)

(assert (=> bm!11673 (= c!19422 c!19423)))

(declare-fun b!109788 () Bool)

(declare-fun c!19417 () Bool)

(assert (=> b!109788 (= c!19417 ((_ is MissingVacant!264) lt!56497))))

(declare-fun e!71449 () Bool)

(declare-fun e!71440 () Bool)

(assert (=> b!109788 (= e!71449 e!71440)))

(declare-fun b!109789 () Bool)

(declare-fun e!71439 () Bool)

(assert (=> b!109789 (= e!71439 ((_ is Undefined!264) lt!56496))))

(declare-fun bm!11674 () Bool)

(declare-fun call!11675 () Bool)

(assert (=> bm!11674 (= call!11675 call!11672)))

(declare-fun b!109790 () Bool)

(declare-fun c!19421 () Bool)

(assert (=> b!109790 (= c!19421 ((_ is MissingVacant!264) lt!56496))))

(assert (=> b!109790 (= e!71443 e!71439)))

(declare-fun bm!11675 () Bool)

(declare-fun call!11674 () ListLongMap!1553)

(assert (=> bm!11675 (= call!11674 call!11680)))

(declare-fun call!11692 () SeekEntryResult!264)

(declare-fun bm!11676 () Bool)

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!4365 (_ BitVec 32)) SeekEntryResult!264)

(assert (=> bm!11676 (= call!11692 (seekEntryOrOpen!0 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (_keys!4339 newMap!16) (mask!6793 newMap!16)))))

(declare-fun b!109791 () Bool)

(assert (=> b!109791 (= e!71440 ((_ is Undefined!264) lt!56497))))

(declare-fun bm!11677 () Bool)

(declare-fun call!11685 () ListLongMap!1553)

(declare-fun lt!56499 () tuple2!2398)

(assert (=> bm!11677 (= call!11685 (map!1281 (_2!1210 lt!56499)))))

(declare-fun b!109792 () Bool)

(declare-fun lt!56504 () tuple2!2398)

(assert (=> b!109792 (= e!71435 (tuple2!2399 (_1!1210 lt!56504) (_2!1210 lt!56504)))))

(declare-fun call!11684 () tuple2!2398)

(assert (=> b!109792 (= lt!56504 call!11684)))

(declare-fun bm!11678 () Bool)

(assert (=> bm!11678 (= call!11672 (arrayContainsKey!0 (_keys!4339 newMap!16) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!109793 () Bool)

(declare-fun lt!56507 () tuple2!2398)

(assert (=> b!109793 (= lt!56507 call!11684)))

(assert (=> b!109793 (= e!71436 (tuple2!2399 (_1!1210 lt!56507) (_2!1210 lt!56507)))))

(declare-fun b!109794 () Bool)

(declare-fun res!54325 () Bool)

(assert (=> b!109794 (=> (not res!54325) (not e!71438))))

(assert (=> b!109794 (= res!54325 (= (select (arr!2068 (_keys!4339 newMap!16)) (index!3206 lt!56496)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!30761 () Bool)

(declare-fun e!71442 () Bool)

(assert (=> d!30761 e!71442))

(declare-fun res!54324 () Bool)

(assert (=> d!30761 (=> (not res!54324) (not e!71442))))

(assert (=> d!30761 (= res!54324 (valid!430 (_2!1210 lt!56499)))))

(declare-fun e!71445 () tuple2!2398)

(assert (=> d!30761 (= lt!56499 e!71445)))

(assert (=> d!30761 (= c!19423 (= (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (bvneg (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355))))))

(assert (=> d!30761 (valid!430 newMap!16)))

(assert (=> d!30761 (= (update!162 newMap!16 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306) lt!56499)))

(declare-fun bm!11679 () Bool)

(assert (=> bm!11679 (= call!11690 call!11687)))

(declare-fun bm!11680 () Bool)

(declare-fun call!11689 () Bool)

(assert (=> bm!11680 (= call!11676 call!11689)))

(declare-fun bm!11681 () Bool)

(declare-fun call!11678 () ListLongMap!1553)

(assert (=> bm!11681 (= call!11678 call!11688)))

(declare-fun b!109795 () Bool)

(declare-fun res!54318 () Bool)

(assert (=> b!109795 (= res!54318 (= (select (arr!2068 (_keys!4339 newMap!16)) (index!3209 lt!56496)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!71434 () Bool)

(assert (=> b!109795 (=> (not res!54318) (not e!71434))))

(declare-fun b!109796 () Bool)

(declare-fun e!71451 () tuple2!2398)

(assert (=> b!109796 (= e!71445 e!71451)))

(assert (=> b!109796 (= c!19416 (= (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!109797 () Bool)

(assert (=> b!109797 (= e!71439 e!71434)))

(declare-fun res!54320 () Bool)

(assert (=> b!109797 (= res!54320 call!11676)))

(assert (=> b!109797 (=> (not res!54320) (not e!71434))))

(declare-fun b!109798 () Bool)

(declare-fun res!54317 () Bool)

(declare-fun e!71452 () Bool)

(assert (=> b!109798 (=> (not res!54317) (not e!71452))))

(assert (=> b!109798 (= res!54317 call!11693)))

(assert (=> b!109798 (= e!71449 e!71452)))

(declare-fun b!109799 () Bool)

(declare-fun call!11683 () ListLongMap!1553)

(assert (=> b!109799 (= e!71450 call!11683)))

(declare-fun e!71446 () Bool)

(declare-fun b!109800 () Bool)

(assert (=> b!109800 (= e!71446 (= (select (arr!2068 (_keys!4339 newMap!16)) (index!3207 lt!56510)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))

(declare-fun call!11695 () Unit!3390)

(declare-fun bm!11682 () Bool)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!49 (array!4365 array!4367 (_ BitVec 32) (_ BitVec 32) V!3241 V!3241 (_ BitVec 64) Int) Unit!3390)

(assert (=> bm!11682 (= call!11695 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!49 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (defaultEntry!2626 newMap!16)))))

(declare-fun call!11677 () ListLongMap!1553)

(declare-fun b!109801 () Bool)

(declare-fun e!71431 () Bool)

(assert (=> b!109801 (= e!71431 (= call!11685 (+!139 call!11677 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))

(declare-fun b!109802 () Bool)

(declare-fun lt!56511 () Unit!3390)

(declare-fun lt!56500 () Unit!3390)

(assert (=> b!109802 (= lt!56511 lt!56500)))

(assert (=> b!109802 (= call!11674 call!11678)))

(declare-fun lt!56506 () (_ BitVec 32))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!49 (array!4365 array!4367 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3241 V!3241 V!3241 Int) Unit!3390)

(assert (=> b!109802 (= lt!56500 (lemmaChangeLongMinValueKeyThenAddPairToListMap!49 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) lt!56506 (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) lt!56306 (defaultEntry!2626 newMap!16)))))

(assert (=> b!109802 (= lt!56506 (bvor (extraKeys!2423 newMap!16) #b00000000000000000000000000000010))))

(assert (=> b!109802 (= e!71451 (tuple2!2399 true (LongMapFixedSize!917 (defaultEntry!2626 newMap!16) (mask!6793 newMap!16) (bvor (extraKeys!2423 newMap!16) #b00000000000000000000000000000010) (zeroValue!2497 newMap!16) lt!56306 (_size!507 newMap!16) (_keys!4339 newMap!16) (_values!2609 newMap!16) (_vacant!507 newMap!16))))))

(declare-fun b!109803 () Bool)

(declare-fun e!71448 () Bool)

(assert (=> b!109803 (= e!71442 e!71448)))

(declare-fun c!19425 () Bool)

(assert (=> b!109803 (= c!19425 (_1!1210 lt!56499))))

(declare-fun b!109804 () Bool)

(declare-fun res!54327 () Bool)

(assert (=> b!109804 (= res!54327 (= (select (arr!2068 (_keys!4339 newMap!16)) (index!3209 lt!56497)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!71447 () Bool)

(assert (=> b!109804 (=> (not res!54327) (not e!71447))))

(declare-fun b!109805 () Bool)

(assert (=> b!109805 (= e!71448 e!71431)))

(declare-fun res!54319 () Bool)

(assert (=> b!109805 (= res!54319 (contains!827 call!11685 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))

(assert (=> b!109805 (=> (not res!54319) (not e!71431))))

(declare-fun b!109806 () Bool)

(assert (=> b!109806 (= e!71435 e!71436)))

(declare-fun c!19415 () Bool)

(assert (=> b!109806 (= c!19415 ((_ is MissingZero!264) lt!56493))))

(declare-fun b!109807 () Bool)

(declare-fun res!54329 () Bool)

(assert (=> b!109807 (=> (not res!54329) (not e!71452))))

(assert (=> b!109807 (= res!54329 (= (select (arr!2068 (_keys!4339 newMap!16)) (index!3206 lt!56497)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!11683 () Bool)

(assert (=> bm!11683 (= call!11689 call!11687)))

(declare-fun bm!11684 () Bool)

(declare-fun updateHelperNewKey!49 (LongMapFixedSize!916 (_ BitVec 64) V!3241 (_ BitVec 32)) tuple2!2398)

(assert (=> bm!11684 (= call!11684 (updateHelperNewKey!49 newMap!16 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306 (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493))))))

(declare-fun b!109808 () Bool)

(declare-fun lt!56505 () Unit!3390)

(declare-fun e!71444 () Unit!3390)

(assert (=> b!109808 (= lt!56505 e!71444)))

(assert (=> b!109808 (= c!19420 call!11679)))

(assert (=> b!109808 (= e!71437 (tuple2!2399 false newMap!16))))

(declare-fun b!109809 () Bool)

(assert (=> b!109809 (= e!71434 (not call!11675))))

(declare-fun bm!11685 () Bool)

(declare-fun c!19414 () Bool)

(assert (=> bm!11685 (= c!19414 c!19413)))

(assert (=> bm!11685 (= call!11679 (contains!827 e!71432 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))

(declare-fun b!109810 () Bool)

(assert (=> b!109810 (= e!71438 (not call!11675))))

(declare-fun bm!11686 () Bool)

(assert (=> bm!11686 (= call!11694 (getCurrentListMap!469 (_keys!4339 newMap!16) (ite c!19423 (_values!2609 newMap!16) lt!56515) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun b!109811 () Bool)

(declare-fun lt!56508 () Unit!3390)

(assert (=> b!109811 (= e!71441 lt!56508)))

(declare-fun call!11681 () Unit!3390)

(assert (=> b!109811 (= lt!56508 call!11681)))

(declare-fun call!11691 () SeekEntryResult!264)

(assert (=> b!109811 (= lt!56510 call!11691)))

(declare-fun res!54323 () Bool)

(assert (=> b!109811 (= res!54323 ((_ is Found!264) lt!56510))))

(assert (=> b!109811 (=> (not res!54323) (not e!71446))))

(assert (=> b!109811 e!71446))

(declare-fun b!109812 () Bool)

(assert (=> b!109812 (= e!71450 (getCurrentListMap!469 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun b!109813 () Bool)

(declare-fun lt!56512 () Unit!3390)

(declare-fun lt!56519 () Unit!3390)

(assert (=> b!109813 (= lt!56512 lt!56519)))

(assert (=> b!109813 (= call!11674 call!11678)))

(declare-fun lt!56514 () (_ BitVec 32))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!49 (array!4365 array!4367 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3241 V!3241 V!3241 Int) Unit!3390)

(assert (=> b!109813 (= lt!56519 (lemmaChangeZeroKeyThenAddPairToListMap!49 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) lt!56514 (zeroValue!2497 newMap!16) lt!56306 (minValue!2497 newMap!16) (defaultEntry!2626 newMap!16)))))

(assert (=> b!109813 (= lt!56514 (bvor (extraKeys!2423 newMap!16) #b00000000000000000000000000000001))))

(assert (=> b!109813 (= e!71451 (tuple2!2399 true (LongMapFixedSize!917 (defaultEntry!2626 newMap!16) (mask!6793 newMap!16) (bvor (extraKeys!2423 newMap!16) #b00000000000000000000000000000001) lt!56306 (minValue!2497 newMap!16) (_size!507 newMap!16) (_keys!4339 newMap!16) (_values!2609 newMap!16) (_vacant!507 newMap!16))))))

(declare-fun bm!11687 () Bool)

(declare-fun call!11686 () SeekEntryResult!264)

(assert (=> bm!11687 (= call!11686 call!11692)))

(declare-fun b!109814 () Bool)

(assert (=> b!109814 (= e!71445 e!71437)))

(assert (=> b!109814 (= lt!56493 (seekEntryOrOpen!0 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (_keys!4339 newMap!16) (mask!6793 newMap!16)))))

(assert (=> b!109814 (= c!19413 ((_ is Undefined!264) lt!56493))))

(declare-fun bm!11688 () Bool)

(assert (=> bm!11688 (= call!11691 call!11692)))

(declare-fun b!109815 () Bool)

(declare-fun Unit!3398 () Unit!3390)

(assert (=> b!109815 (= e!71441 Unit!3398)))

(declare-fun lt!56513 () Unit!3390)

(assert (=> b!109815 (= lt!56513 call!11695)))

(assert (=> b!109815 (= lt!56496 call!11691)))

(assert (=> b!109815 (= c!19424 ((_ is MissingZero!264) lt!56496))))

(assert (=> b!109815 e!71443))

(declare-fun lt!56495 () Unit!3390)

(assert (=> b!109815 (= lt!56495 lt!56513)))

(assert (=> b!109815 false))

(declare-fun b!109816 () Bool)

(assert (=> b!109816 (= e!71452 (not call!11673))))

(declare-fun bm!11689 () Bool)

(assert (=> bm!11689 (= call!11683 call!11694)))

(declare-fun b!109817 () Bool)

(declare-fun Unit!3399 () Unit!3390)

(assert (=> b!109817 (= e!71444 Unit!3399)))

(declare-fun lt!56503 () Unit!3390)

(assert (=> b!109817 (= lt!56503 call!11681)))

(assert (=> b!109817 (= lt!56509 call!11686)))

(declare-fun res!54322 () Bool)

(assert (=> b!109817 (= res!54322 ((_ is Found!264) lt!56509))))

(assert (=> b!109817 (=> (not res!54322) (not e!71433))))

(assert (=> b!109817 e!71433))

(declare-fun lt!56498 () Unit!3390)

(assert (=> b!109817 (= lt!56498 lt!56503)))

(assert (=> b!109817 false))

(declare-fun b!109818 () Bool)

(assert (=> b!109818 (= e!71433 (= (select (arr!2068 (_keys!4339 newMap!16)) (index!3207 lt!56509)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))

(declare-fun b!109819 () Bool)

(assert (=> b!109819 (= e!71432 (getCurrentListMap!469 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun b!109820 () Bool)

(declare-fun res!54328 () Bool)

(assert (=> b!109820 (= res!54328 call!11689)))

(assert (=> b!109820 (=> (not res!54328) (not e!71446))))

(declare-fun b!109821 () Bool)

(assert (=> b!109821 (= e!71448 (= call!11685 call!11677))))

(declare-fun b!109822 () Bool)

(assert (=> b!109822 (= e!71440 e!71447)))

(declare-fun res!54321 () Bool)

(assert (=> b!109822 (= res!54321 call!11693)))

(assert (=> b!109822 (=> (not res!54321) (not e!71447))))

(declare-fun b!109823 () Bool)

(declare-fun lt!56494 () Unit!3390)

(assert (=> b!109823 (= e!71444 lt!56494)))

(assert (=> b!109823 (= lt!56494 call!11695)))

(assert (=> b!109823 (= lt!56497 call!11686)))

(assert (=> b!109823 (= c!19418 ((_ is MissingZero!264) lt!56497))))

(assert (=> b!109823 e!71449))

(declare-fun bm!11690 () Bool)

(assert (=> bm!11690 (= call!11677 (map!1281 newMap!16))))

(declare-fun b!109824 () Bool)

(assert (=> b!109824 (= e!71447 (not call!11673))))

(declare-fun bm!11691 () Bool)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!49 (array!4365 array!4367 (_ BitVec 32) (_ BitVec 32) V!3241 V!3241 (_ BitVec 64) Int) Unit!3390)

(assert (=> bm!11691 (= call!11681 (lemmaInListMapThenSeekEntryOrOpenFindsIt!49 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (defaultEntry!2626 newMap!16)))))

(declare-fun bm!11692 () Bool)

(assert (=> bm!11692 (= call!11688 (getCurrentListMap!469 (_keys!4339 newMap!16) (ite (or c!19423 c!19413) (_values!2609 newMap!16) (array!4368 (store (arr!2069 (_values!2609 newMap!16)) (index!3207 lt!56493) (ValueCellFull!1004 lt!56306)) (size!2327 (_values!2609 newMap!16)))) (mask!6793 newMap!16) (ite c!19423 (ite c!19416 lt!56514 lt!56506) (extraKeys!2423 newMap!16)) (ite (and c!19423 c!19416) lt!56306 (zeroValue!2497 newMap!16)) (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(assert (= (and d!30761 c!19423) b!109796))

(assert (= (and d!30761 (not c!19423)) b!109814))

(assert (= (and b!109796 c!19416) b!109813))

(assert (= (and b!109796 (not c!19416)) b!109802))

(assert (= (or b!109813 b!109802) bm!11681))

(assert (= (or b!109813 b!109802) bm!11689))

(assert (= (or b!109813 b!109802) bm!11675))

(assert (= (and b!109814 c!19413) b!109808))

(assert (= (and b!109814 (not c!19413)) b!109783))

(assert (= (and b!109808 c!19420) b!109817))

(assert (= (and b!109808 (not c!19420)) b!109823))

(assert (= (and b!109817 res!54322) b!109785))

(assert (= (and b!109785 res!54316) b!109818))

(assert (= (and b!109823 c!19418) b!109798))

(assert (= (and b!109823 (not c!19418)) b!109788))

(assert (= (and b!109798 res!54317) b!109807))

(assert (= (and b!109807 res!54329) b!109816))

(assert (= (and b!109788 c!19417) b!109822))

(assert (= (and b!109788 (not c!19417)) b!109791))

(assert (= (and b!109822 res!54321) b!109804))

(assert (= (and b!109804 res!54327) b!109824))

(assert (= (or b!109798 b!109822) bm!11670))

(assert (= (or b!109816 b!109824) bm!11671))

(assert (= (or b!109785 bm!11670) bm!11679))

(assert (= (or b!109817 b!109823) bm!11687))

(assert (= (and b!109783 c!19426) b!109792))

(assert (= (and b!109783 (not c!19426)) b!109806))

(assert (= (and b!109806 c!19415) b!109793))

(assert (= (and b!109806 (not c!19415)) b!109784))

(assert (= (and b!109784 c!19419) b!109811))

(assert (= (and b!109784 (not c!19419)) b!109815))

(assert (= (and b!109811 res!54323) b!109820))

(assert (= (and b!109820 res!54328) b!109800))

(assert (= (and b!109815 c!19424) b!109786))

(assert (= (and b!109815 (not c!19424)) b!109790))

(assert (= (and b!109786 res!54326) b!109794))

(assert (= (and b!109794 res!54325) b!109810))

(assert (= (and b!109790 c!19421) b!109797))

(assert (= (and b!109790 (not c!19421)) b!109789))

(assert (= (and b!109797 res!54320) b!109795))

(assert (= (and b!109795 res!54318) b!109809))

(assert (= (or b!109786 b!109797) bm!11680))

(assert (= (or b!109810 b!109809) bm!11674))

(assert (= (or b!109820 bm!11680) bm!11683))

(assert (= (or b!109811 b!109815) bm!11688))

(assert (= (or b!109792 b!109793) bm!11684))

(assert (= (or b!109808 b!109784) bm!11672))

(assert (= (or bm!11687 bm!11688) bm!11676))

(assert (= (or b!109817 b!109811) bm!11691))

(assert (= (or b!109823 b!109815) bm!11682))

(assert (= (or bm!11671 bm!11674) bm!11678))

(assert (= (or bm!11679 bm!11683) bm!11669))

(assert (= (or b!109808 b!109784) bm!11685))

(assert (= (and bm!11685 c!19414) b!109787))

(assert (= (and bm!11685 (not c!19414)) b!109819))

(assert (= (or bm!11681 bm!11672) bm!11692))

(assert (= (or bm!11689 b!109784) bm!11686))

(assert (= (or bm!11675 b!109784) bm!11673))

(assert (= (and bm!11673 c!19422) b!109799))

(assert (= (and bm!11673 (not c!19422)) b!109812))

(assert (= (and d!30761 res!54324) b!109803))

(assert (= (and b!109803 c!19425) b!109805))

(assert (= (and b!109803 (not c!19425)) b!109821))

(assert (= (and b!109805 res!54319) b!109801))

(assert (= (or b!109805 b!109801 b!109821) bm!11677))

(assert (= (or b!109801 b!109821) bm!11690))

(declare-fun m!124123 () Bool)

(assert (=> bm!11669 m!124123))

(declare-fun m!124125 () Bool)

(assert (=> b!109801 m!124125))

(assert (=> bm!11685 m!123865))

(declare-fun m!124127 () Bool)

(assert (=> bm!11685 m!124127))

(declare-fun m!124129 () Bool)

(assert (=> b!109818 m!124129))

(declare-fun m!124131 () Bool)

(assert (=> b!109807 m!124131))

(declare-fun m!124133 () Bool)

(assert (=> b!109819 m!124133))

(assert (=> bm!11682 m!123865))

(declare-fun m!124135 () Bool)

(assert (=> bm!11682 m!124135))

(declare-fun m!124137 () Bool)

(assert (=> b!109784 m!124137))

(declare-fun m!124139 () Bool)

(assert (=> b!109784 m!124139))

(declare-fun m!124141 () Bool)

(assert (=> b!109784 m!124141))

(assert (=> b!109784 m!124141))

(declare-fun m!124143 () Bool)

(assert (=> b!109784 m!124143))

(assert (=> b!109784 m!123865))

(declare-fun m!124145 () Bool)

(assert (=> b!109784 m!124145))

(declare-fun m!124147 () Bool)

(assert (=> d!30761 m!124147))

(assert (=> d!30761 m!123877))

(assert (=> bm!11676 m!123865))

(declare-fun m!124149 () Bool)

(assert (=> bm!11676 m!124149))

(declare-fun m!124151 () Bool)

(assert (=> bm!11677 m!124151))

(declare-fun m!124153 () Bool)

(assert (=> b!109800 m!124153))

(assert (=> bm!11684 m!123865))

(declare-fun m!124155 () Bool)

(assert (=> bm!11684 m!124155))

(declare-fun m!124157 () Bool)

(assert (=> bm!11673 m!124157))

(assert (=> b!109805 m!123865))

(declare-fun m!124159 () Bool)

(assert (=> b!109805 m!124159))

(declare-fun m!124161 () Bool)

(assert (=> b!109804 m!124161))

(declare-fun m!124163 () Bool)

(assert (=> b!109794 m!124163))

(assert (=> bm!11678 m!123865))

(declare-fun m!124165 () Bool)

(assert (=> bm!11678 m!124165))

(declare-fun m!124167 () Bool)

(assert (=> b!109795 m!124167))

(declare-fun m!124169 () Bool)

(assert (=> bm!11686 m!124169))

(assert (=> b!109812 m!124133))

(declare-fun m!124171 () Bool)

(assert (=> b!109813 m!124171))

(assert (=> b!109814 m!123865))

(assert (=> b!109814 m!124149))

(assert (=> bm!11692 m!124137))

(declare-fun m!124173 () Bool)

(assert (=> bm!11692 m!124173))

(declare-fun m!124175 () Bool)

(assert (=> b!109802 m!124175))

(assert (=> bm!11690 m!123893))

(assert (=> bm!11691 m!123865))

(declare-fun m!124177 () Bool)

(assert (=> bm!11691 m!124177))

(assert (=> b!109510 d!30761))

(declare-fun d!30763 () Bool)

(declare-fun res!54336 () Bool)

(declare-fun e!71455 () Bool)

(assert (=> d!30763 (=> (not res!54336) (not e!71455))))

(declare-fun simpleValid!76 (LongMapFixedSize!916) Bool)

(assert (=> d!30763 (= res!54336 (simpleValid!76 newMap!16))))

(assert (=> d!30763 (= (valid!430 newMap!16) e!71455)))

(declare-fun b!109831 () Bool)

(declare-fun res!54337 () Bool)

(assert (=> b!109831 (=> (not res!54337) (not e!71455))))

(declare-fun arrayCountValidKeys!0 (array!4365 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!109831 (= res!54337 (= (arrayCountValidKeys!0 (_keys!4339 newMap!16) #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))) (_size!507 newMap!16)))))

(declare-fun b!109832 () Bool)

(declare-fun res!54338 () Bool)

(assert (=> b!109832 (=> (not res!54338) (not e!71455))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!4365 (_ BitVec 32)) Bool)

(assert (=> b!109832 (= res!54338 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4339 newMap!16) (mask!6793 newMap!16)))))

(declare-fun b!109833 () Bool)

(assert (=> b!109833 (= e!71455 (arrayNoDuplicates!0 (_keys!4339 newMap!16) #b00000000000000000000000000000000 Nil!1623))))

(assert (= (and d!30763 res!54336) b!109831))

(assert (= (and b!109831 res!54337) b!109832))

(assert (= (and b!109832 res!54338) b!109833))

(declare-fun m!124179 () Bool)

(assert (=> d!30763 m!124179))

(declare-fun m!124181 () Bool)

(assert (=> b!109831 m!124181))

(declare-fun m!124183 () Bool)

(assert (=> b!109832 m!124183))

(declare-fun m!124185 () Bool)

(assert (=> b!109833 m!124185))

(assert (=> b!109514 d!30763))

(declare-fun d!30765 () Bool)

(declare-fun c!19429 () Bool)

(assert (=> d!30765 (= c!19429 ((_ is ValueCellFull!1004) (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) from!355)))))

(declare-fun e!71458 () V!3241)

(assert (=> d!30765 (= (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) from!355) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!71458)))

(declare-fun b!109838 () Bool)

(declare-fun get!1348 (ValueCell!1004 V!3241) V!3241)

(assert (=> b!109838 (= e!71458 (get!1348 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) from!355) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!109839 () Bool)

(declare-fun get!1349 (ValueCell!1004 V!3241) V!3241)

(assert (=> b!109839 (= e!71458 (get!1349 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) from!355) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30765 c!19429) b!109838))

(assert (= (and d!30765 (not c!19429)) b!109839))

(assert (=> b!109838 m!123911))

(assert (=> b!109838 m!123913))

(declare-fun m!124187 () Bool)

(assert (=> b!109838 m!124187))

(assert (=> b!109839 m!123911))

(assert (=> b!109839 m!123913))

(declare-fun m!124189 () Bool)

(assert (=> b!109839 m!124189))

(assert (=> b!109503 d!30765))

(declare-fun d!30767 () Bool)

(assert (=> d!30767 (not (arrayContainsKey!0 (_keys!4339 (v!2920 (underlying!363 thiss!992))) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!56522 () Unit!3390)

(declare-fun choose!68 (array!4365 (_ BitVec 32) (_ BitVec 64) List!1626) Unit!3390)

(assert (=> d!30767 (= lt!56522 (choose!68 (_keys!4339 (v!2920 (underlying!363 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (Cons!1622 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) Nil!1623)))))

(assert (=> d!30767 (bvslt (size!2326 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!30767 (= (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!4339 (v!2920 (underlying!363 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (Cons!1622 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) Nil!1623)) lt!56522)))

(declare-fun bs!4511 () Bool)

(assert (= bs!4511 d!30767))

(assert (=> bs!4511 m!123865))

(assert (=> bs!4511 m!123889))

(assert (=> bs!4511 m!123865))

(declare-fun m!124191 () Bool)

(assert (=> bs!4511 m!124191))

(assert (=> b!109497 d!30767))

(declare-fun d!30769 () Bool)

(assert (=> d!30769 (arrayNoDuplicates!0 (_keys!4339 (v!2920 (underlying!363 thiss!992))) from!355 Nil!1623)))

(declare-fun lt!56525 () Unit!3390)

(declare-fun choose!39 (array!4365 (_ BitVec 32) (_ BitVec 32)) Unit!3390)

(assert (=> d!30769 (= lt!56525 (choose!39 (_keys!4339 (v!2920 (underlying!363 thiss!992))) #b00000000000000000000000000000000 from!355))))

(assert (=> d!30769 (bvslt (size!2326 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!30769 (= (lemmaNoDuplicateFromThenFromBigger!0 (_keys!4339 (v!2920 (underlying!363 thiss!992))) #b00000000000000000000000000000000 from!355) lt!56525)))

(declare-fun bs!4512 () Bool)

(assert (= bs!4512 d!30769))

(assert (=> bs!4512 m!123885))

(declare-fun m!124193 () Bool)

(assert (=> bs!4512 m!124193))

(assert (=> b!109497 d!30769))

(declare-fun d!30771 () Bool)

(declare-fun res!54343 () Bool)

(declare-fun e!71463 () Bool)

(assert (=> d!30771 (=> res!54343 e!71463)))

(assert (=> d!30771 (= res!54343 (= (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))

(assert (=> d!30771 (= (arrayContainsKey!0 (_keys!4339 (v!2920 (underlying!363 thiss!992))) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)) e!71463)))

(declare-fun b!109844 () Bool)

(declare-fun e!71464 () Bool)

(assert (=> b!109844 (= e!71463 e!71464)))

(declare-fun res!54344 () Bool)

(assert (=> b!109844 (=> (not res!54344) (not e!71464))))

(assert (=> b!109844 (= res!54344 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2326 (_keys!4339 (v!2920 (underlying!363 thiss!992))))))))

(declare-fun b!109845 () Bool)

(assert (=> b!109845 (= e!71464 (arrayContainsKey!0 (_keys!4339 (v!2920 (underlying!363 thiss!992))) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (= (and d!30771 (not res!54343)) b!109844))

(assert (= (and b!109844 res!54344) b!109845))

(assert (=> d!30771 m!124087))

(assert (=> b!109845 m!123865))

(declare-fun m!124195 () Bool)

(assert (=> b!109845 m!124195))

(assert (=> b!109497 d!30771))

(declare-fun d!30773 () Bool)

(declare-fun e!71467 () Bool)

(assert (=> d!30773 e!71467))

(declare-fun c!19432 () Bool)

(assert (=> d!30773 (= c!19432 (and (not (= (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!56528 () Unit!3390)

(declare-fun choose!690 (array!4365 array!4367 (_ BitVec 32) (_ BitVec 32) V!3241 V!3241 (_ BitVec 64) (_ BitVec 32) Int) Unit!3390)

(assert (=> d!30773 (= lt!56528 (choose!690 (_keys!4339 (v!2920 (underlying!363 thiss!992))) (_values!2609 (v!2920 (underlying!363 thiss!992))) (mask!6793 (v!2920 (underlying!363 thiss!992))) (extraKeys!2423 (v!2920 (underlying!363 thiss!992))) (zeroValue!2497 (v!2920 (underlying!363 thiss!992))) (minValue!2497 (v!2920 (underlying!363 thiss!992))) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2626 (v!2920 (underlying!363 thiss!992)))))))

(assert (=> d!30773 (validMask!0 (mask!6793 (v!2920 (underlying!363 thiss!992))))))

(assert (=> d!30773 (= (lemmaListMapContainsThenArrayContainsFrom!115 (_keys!4339 (v!2920 (underlying!363 thiss!992))) (_values!2609 (v!2920 (underlying!363 thiss!992))) (mask!6793 (v!2920 (underlying!363 thiss!992))) (extraKeys!2423 (v!2920 (underlying!363 thiss!992))) (zeroValue!2497 (v!2920 (underlying!363 thiss!992))) (minValue!2497 (v!2920 (underlying!363 thiss!992))) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2626 (v!2920 (underlying!363 thiss!992)))) lt!56528)))

(declare-fun b!109850 () Bool)

(assert (=> b!109850 (= e!71467 (arrayContainsKey!0 (_keys!4339 (v!2920 (underlying!363 thiss!992))) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!109851 () Bool)

(assert (=> b!109851 (= e!71467 (ite (= (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2423 (v!2920 (underlying!363 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2423 (v!2920 (underlying!363 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!30773 c!19432) b!109850))

(assert (= (and d!30773 (not c!19432)) b!109851))

(assert (=> d!30773 m!123865))

(declare-fun m!124197 () Bool)

(assert (=> d!30773 m!124197))

(assert (=> d!30773 m!123901))

(assert (=> b!109850 m!123865))

(assert (=> b!109850 m!123889))

(assert (=> b!109497 d!30773))

(declare-fun b!109862 () Bool)

(declare-fun e!71479 () Bool)

(declare-fun contains!830 (List!1626 (_ BitVec 64)) Bool)

(assert (=> b!109862 (= e!71479 (contains!830 Nil!1623 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))

(declare-fun b!109863 () Bool)

(declare-fun e!71477 () Bool)

(declare-fun e!71476 () Bool)

(assert (=> b!109863 (= e!71477 e!71476)))

(declare-fun res!54351 () Bool)

(assert (=> b!109863 (=> (not res!54351) (not e!71476))))

(assert (=> b!109863 (= res!54351 (not e!71479))))

(declare-fun res!54352 () Bool)

(assert (=> b!109863 (=> (not res!54352) (not e!71479))))

(assert (=> b!109863 (= res!54352 (validKeyInArray!0 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))

(declare-fun call!11698 () Bool)

(declare-fun bm!11695 () Bool)

(declare-fun c!19435 () Bool)

(assert (=> bm!11695 (= call!11698 (arrayNoDuplicates!0 (_keys!4339 (v!2920 (underlying!363 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!19435 (Cons!1622 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) Nil!1623) Nil!1623)))))

(declare-fun d!30775 () Bool)

(declare-fun res!54353 () Bool)

(assert (=> d!30775 (=> res!54353 e!71477)))

(assert (=> d!30775 (= res!54353 (bvsge from!355 (size!2326 (_keys!4339 (v!2920 (underlying!363 thiss!992))))))))

(assert (=> d!30775 (= (arrayNoDuplicates!0 (_keys!4339 (v!2920 (underlying!363 thiss!992))) from!355 Nil!1623) e!71477)))

(declare-fun b!109864 () Bool)

(declare-fun e!71478 () Bool)

(assert (=> b!109864 (= e!71478 call!11698)))

(declare-fun b!109865 () Bool)

(assert (=> b!109865 (= e!71478 call!11698)))

(declare-fun b!109866 () Bool)

(assert (=> b!109866 (= e!71476 e!71478)))

(assert (=> b!109866 (= c!19435 (validKeyInArray!0 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))

(assert (= (and d!30775 (not res!54353)) b!109863))

(assert (= (and b!109863 res!54352) b!109862))

(assert (= (and b!109863 res!54351) b!109866))

(assert (= (and b!109866 c!19435) b!109865))

(assert (= (and b!109866 (not c!19435)) b!109864))

(assert (= (or b!109865 b!109864) bm!11695))

(assert (=> b!109862 m!123865))

(assert (=> b!109862 m!123865))

(declare-fun m!124199 () Bool)

(assert (=> b!109862 m!124199))

(assert (=> b!109863 m!123865))

(assert (=> b!109863 m!123865))

(declare-fun m!124201 () Bool)

(assert (=> b!109863 m!124201))

(assert (=> bm!11695 m!123865))

(declare-fun m!124203 () Bool)

(assert (=> bm!11695 m!124203))

(assert (=> b!109866 m!123865))

(assert (=> b!109866 m!123865))

(assert (=> b!109866 m!124201))

(assert (=> b!109497 d!30775))

(declare-fun d!30777 () Bool)

(assert (=> d!30777 (= (map!1281 newMap!16) (getCurrentListMap!469 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun bs!4513 () Bool)

(assert (= bs!4513 d!30777))

(assert (=> bs!4513 m!124133))

(assert (=> b!109504 d!30777))

(declare-fun b!109909 () Bool)

(declare-fun e!71506 () Bool)

(assert (=> b!109909 (= e!71506 (validKeyInArray!0 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!109910 () Bool)

(declare-fun e!71515 () Bool)

(declare-fun e!71507 () Bool)

(assert (=> b!109910 (= e!71515 e!71507)))

(declare-fun res!54377 () Bool)

(declare-fun call!11717 () Bool)

(assert (=> b!109910 (= res!54377 call!11717)))

(assert (=> b!109910 (=> (not res!54377) (not e!71507))))

(declare-fun b!109911 () Bool)

(declare-fun lt!56589 () ListLongMap!1553)

(assert (=> b!109911 (= e!71507 (= (apply!100 lt!56589 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))

(declare-fun b!109912 () Bool)

(assert (=> b!109912 (= e!71515 (not call!11717))))

(declare-fun d!30779 () Bool)

(declare-fun e!71517 () Bool)

(assert (=> d!30779 e!71517))

(declare-fun res!54374 () Bool)

(assert (=> d!30779 (=> (not res!54374) (not e!71517))))

(assert (=> d!30779 (= res!54374 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2326 (_keys!4339 (v!2920 (underlying!363 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2326 (_keys!4339 (v!2920 (underlying!363 thiss!992))))))))))

(declare-fun lt!56591 () ListLongMap!1553)

(assert (=> d!30779 (= lt!56589 lt!56591)))

(declare-fun lt!56575 () Unit!3390)

(declare-fun e!71512 () Unit!3390)

(assert (=> d!30779 (= lt!56575 e!71512)))

(declare-fun c!19449 () Bool)

(declare-fun e!71513 () Bool)

(assert (=> d!30779 (= c!19449 e!71513)))

(declare-fun res!54376 () Bool)

(assert (=> d!30779 (=> (not res!54376) (not e!71513))))

(assert (=> d!30779 (= res!54376 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2326 (_keys!4339 (v!2920 (underlying!363 thiss!992))))))))

(declare-fun e!71518 () ListLongMap!1553)

(assert (=> d!30779 (= lt!56591 e!71518)))

(declare-fun c!19448 () Bool)

(assert (=> d!30779 (= c!19448 (and (not (= (bvand (extraKeys!2423 (v!2920 (underlying!363 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2423 (v!2920 (underlying!363 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!30779 (validMask!0 (mask!6793 (v!2920 (underlying!363 thiss!992))))))

(assert (=> d!30779 (= (getCurrentListMap!469 (_keys!4339 (v!2920 (underlying!363 thiss!992))) (_values!2609 (v!2920 (underlying!363 thiss!992))) (mask!6793 (v!2920 (underlying!363 thiss!992))) (extraKeys!2423 (v!2920 (underlying!363 thiss!992))) (zeroValue!2497 (v!2920 (underlying!363 thiss!992))) (minValue!2497 (v!2920 (underlying!363 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2626 (v!2920 (underlying!363 thiss!992)))) lt!56589)))

(declare-fun b!109913 () Bool)

(assert (=> b!109913 (= e!71517 e!71515)))

(declare-fun c!19453 () Bool)

(assert (=> b!109913 (= c!19453 (not (= (bvand (extraKeys!2423 (v!2920 (underlying!363 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!109914 () Bool)

(declare-fun e!71514 () ListLongMap!1553)

(assert (=> b!109914 (= e!71518 e!71514)))

(declare-fun c!19451 () Bool)

(assert (=> b!109914 (= c!19451 (and (not (= (bvand (extraKeys!2423 (v!2920 (underlying!363 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2423 (v!2920 (underlying!363 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11710 () Bool)

(declare-fun call!11715 () ListLongMap!1553)

(declare-fun call!11714 () ListLongMap!1553)

(assert (=> bm!11710 (= call!11715 call!11714)))

(declare-fun bm!11711 () Bool)

(declare-fun call!11713 () ListLongMap!1553)

(assert (=> bm!11711 (= call!11714 call!11713)))

(declare-fun b!109915 () Bool)

(declare-fun res!54380 () Bool)

(assert (=> b!109915 (=> (not res!54380) (not e!71517))))

(declare-fun e!71511 () Bool)

(assert (=> b!109915 (= res!54380 e!71511)))

(declare-fun res!54379 () Bool)

(assert (=> b!109915 (=> res!54379 e!71511)))

(assert (=> b!109915 (= res!54379 (not e!71506))))

(declare-fun res!54375 () Bool)

(assert (=> b!109915 (=> (not res!54375) (not e!71506))))

(assert (=> b!109915 (= res!54375 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2326 (_keys!4339 (v!2920 (underlying!363 thiss!992))))))))

(declare-fun b!109916 () Bool)

(declare-fun e!71509 () Bool)

(declare-fun e!71508 () Bool)

(assert (=> b!109916 (= e!71509 e!71508)))

(declare-fun res!54372 () Bool)

(declare-fun call!11719 () Bool)

(assert (=> b!109916 (= res!54372 call!11719)))

(assert (=> b!109916 (=> (not res!54372) (not e!71508))))

(declare-fun bm!11712 () Bool)

(declare-fun call!11716 () ListLongMap!1553)

(declare-fun call!11718 () ListLongMap!1553)

(assert (=> bm!11712 (= call!11716 call!11718)))

(declare-fun b!109917 () Bool)

(assert (=> b!109917 (= e!71509 (not call!11719))))

(declare-fun b!109918 () Bool)

(declare-fun e!71510 () Bool)

(assert (=> b!109918 (= e!71511 e!71510)))

(declare-fun res!54373 () Bool)

(assert (=> b!109918 (=> (not res!54373) (not e!71510))))

(assert (=> b!109918 (= res!54373 (contains!827 lt!56589 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!109918 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2326 (_keys!4339 (v!2920 (underlying!363 thiss!992))))))))

(declare-fun b!109919 () Bool)

(assert (=> b!109919 (= e!71510 (= (apply!100 lt!56589 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!109919 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2327 (_values!2609 (v!2920 (underlying!363 thiss!992))))))))

(assert (=> b!109919 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2326 (_keys!4339 (v!2920 (underlying!363 thiss!992))))))))

(declare-fun bm!11713 () Bool)

(assert (=> bm!11713 (= call!11717 (contains!827 lt!56589 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!11714 () Bool)

(assert (=> bm!11714 (= call!11719 (contains!827 lt!56589 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!109920 () Bool)

(assert (=> b!109920 (= e!71513 (validKeyInArray!0 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!109921 () Bool)

(declare-fun res!54378 () Bool)

(assert (=> b!109921 (=> (not res!54378) (not e!71517))))

(assert (=> b!109921 (= res!54378 e!71509)))

(declare-fun c!19452 () Bool)

(assert (=> b!109921 (= c!19452 (not (= (bvand (extraKeys!2423 (v!2920 (underlying!363 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!11715 () Bool)

(assert (=> bm!11715 (= call!11713 (getCurrentListMapNoExtraKeys!104 (_keys!4339 (v!2920 (underlying!363 thiss!992))) (_values!2609 (v!2920 (underlying!363 thiss!992))) (mask!6793 (v!2920 (underlying!363 thiss!992))) (extraKeys!2423 (v!2920 (underlying!363 thiss!992))) (zeroValue!2497 (v!2920 (underlying!363 thiss!992))) (minValue!2497 (v!2920 (underlying!363 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2626 (v!2920 (underlying!363 thiss!992)))))))

(declare-fun b!109922 () Bool)

(declare-fun e!71516 () ListLongMap!1553)

(assert (=> b!109922 (= e!71516 call!11715)))

(declare-fun b!109923 () Bool)

(assert (=> b!109923 (= e!71518 (+!139 call!11718 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))))

(declare-fun b!109924 () Bool)

(assert (=> b!109924 (= e!71514 call!11716)))

(declare-fun b!109925 () Bool)

(declare-fun Unit!3400 () Unit!3390)

(assert (=> b!109925 (= e!71512 Unit!3400)))

(declare-fun b!109926 () Bool)

(declare-fun lt!56582 () Unit!3390)

(assert (=> b!109926 (= e!71512 lt!56582)))

(declare-fun lt!56577 () ListLongMap!1553)

(assert (=> b!109926 (= lt!56577 (getCurrentListMapNoExtraKeys!104 (_keys!4339 (v!2920 (underlying!363 thiss!992))) (_values!2609 (v!2920 (underlying!363 thiss!992))) (mask!6793 (v!2920 (underlying!363 thiss!992))) (extraKeys!2423 (v!2920 (underlying!363 thiss!992))) (zeroValue!2497 (v!2920 (underlying!363 thiss!992))) (minValue!2497 (v!2920 (underlying!363 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2626 (v!2920 (underlying!363 thiss!992)))))))

(declare-fun lt!56590 () (_ BitVec 64))

(assert (=> b!109926 (= lt!56590 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56574 () (_ BitVec 64))

(assert (=> b!109926 (= lt!56574 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!56594 () Unit!3390)

(declare-fun addStillContains!76 (ListLongMap!1553 (_ BitVec 64) V!3241 (_ BitVec 64)) Unit!3390)

(assert (=> b!109926 (= lt!56594 (addStillContains!76 lt!56577 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))) lt!56574))))

(assert (=> b!109926 (contains!827 (+!139 lt!56577 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))) lt!56574)))

(declare-fun lt!56588 () Unit!3390)

(assert (=> b!109926 (= lt!56588 lt!56594)))

(declare-fun lt!56576 () ListLongMap!1553)

(assert (=> b!109926 (= lt!56576 (getCurrentListMapNoExtraKeys!104 (_keys!4339 (v!2920 (underlying!363 thiss!992))) (_values!2609 (v!2920 (underlying!363 thiss!992))) (mask!6793 (v!2920 (underlying!363 thiss!992))) (extraKeys!2423 (v!2920 (underlying!363 thiss!992))) (zeroValue!2497 (v!2920 (underlying!363 thiss!992))) (minValue!2497 (v!2920 (underlying!363 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2626 (v!2920 (underlying!363 thiss!992)))))))

(declare-fun lt!56587 () (_ BitVec 64))

(assert (=> b!109926 (= lt!56587 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56580 () (_ BitVec 64))

(assert (=> b!109926 (= lt!56580 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!56586 () Unit!3390)

(declare-fun addApplyDifferent!76 (ListLongMap!1553 (_ BitVec 64) V!3241 (_ BitVec 64)) Unit!3390)

(assert (=> b!109926 (= lt!56586 (addApplyDifferent!76 lt!56576 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992))) lt!56580))))

(assert (=> b!109926 (= (apply!100 (+!139 lt!56576 (tuple2!2397 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992))))) lt!56580) (apply!100 lt!56576 lt!56580))))

(declare-fun lt!56573 () Unit!3390)

(assert (=> b!109926 (= lt!56573 lt!56586)))

(declare-fun lt!56592 () ListLongMap!1553)

(assert (=> b!109926 (= lt!56592 (getCurrentListMapNoExtraKeys!104 (_keys!4339 (v!2920 (underlying!363 thiss!992))) (_values!2609 (v!2920 (underlying!363 thiss!992))) (mask!6793 (v!2920 (underlying!363 thiss!992))) (extraKeys!2423 (v!2920 (underlying!363 thiss!992))) (zeroValue!2497 (v!2920 (underlying!363 thiss!992))) (minValue!2497 (v!2920 (underlying!363 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2626 (v!2920 (underlying!363 thiss!992)))))))

(declare-fun lt!56583 () (_ BitVec 64))

(assert (=> b!109926 (= lt!56583 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56578 () (_ BitVec 64))

(assert (=> b!109926 (= lt!56578 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!56584 () Unit!3390)

(assert (=> b!109926 (= lt!56584 (addApplyDifferent!76 lt!56592 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))) lt!56578))))

(assert (=> b!109926 (= (apply!100 (+!139 lt!56592 (tuple2!2397 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))) lt!56578) (apply!100 lt!56592 lt!56578))))

(declare-fun lt!56593 () Unit!3390)

(assert (=> b!109926 (= lt!56593 lt!56584)))

(declare-fun lt!56581 () ListLongMap!1553)

(assert (=> b!109926 (= lt!56581 (getCurrentListMapNoExtraKeys!104 (_keys!4339 (v!2920 (underlying!363 thiss!992))) (_values!2609 (v!2920 (underlying!363 thiss!992))) (mask!6793 (v!2920 (underlying!363 thiss!992))) (extraKeys!2423 (v!2920 (underlying!363 thiss!992))) (zeroValue!2497 (v!2920 (underlying!363 thiss!992))) (minValue!2497 (v!2920 (underlying!363 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2626 (v!2920 (underlying!363 thiss!992)))))))

(declare-fun lt!56579 () (_ BitVec 64))

(assert (=> b!109926 (= lt!56579 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56585 () (_ BitVec 64))

(assert (=> b!109926 (= lt!56585 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!109926 (= lt!56582 (addApplyDifferent!76 lt!56581 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992))) lt!56585))))

(assert (=> b!109926 (= (apply!100 (+!139 lt!56581 (tuple2!2397 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992))))) lt!56585) (apply!100 lt!56581 lt!56585))))

(declare-fun b!109927 () Bool)

(declare-fun c!19450 () Bool)

(assert (=> b!109927 (= c!19450 (and (not (= (bvand (extraKeys!2423 (v!2920 (underlying!363 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2423 (v!2920 (underlying!363 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!109927 (= e!71514 e!71516)))

(declare-fun b!109928 () Bool)

(assert (=> b!109928 (= e!71508 (= (apply!100 lt!56589 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))

(declare-fun b!109929 () Bool)

(assert (=> b!109929 (= e!71516 call!11716)))

(declare-fun bm!11716 () Bool)

(assert (=> bm!11716 (= call!11718 (+!139 (ite c!19448 call!11713 (ite c!19451 call!11714 call!11715)) (ite (or c!19448 c!19451) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(assert (= (and d!30779 c!19448) b!109923))

(assert (= (and d!30779 (not c!19448)) b!109914))

(assert (= (and b!109914 c!19451) b!109924))

(assert (= (and b!109914 (not c!19451)) b!109927))

(assert (= (and b!109927 c!19450) b!109929))

(assert (= (and b!109927 (not c!19450)) b!109922))

(assert (= (or b!109929 b!109922) bm!11710))

(assert (= (or b!109924 bm!11710) bm!11711))

(assert (= (or b!109924 b!109929) bm!11712))

(assert (= (or b!109923 bm!11711) bm!11715))

(assert (= (or b!109923 bm!11712) bm!11716))

(assert (= (and d!30779 res!54376) b!109920))

(assert (= (and d!30779 c!19449) b!109926))

(assert (= (and d!30779 (not c!19449)) b!109925))

(assert (= (and d!30779 res!54374) b!109915))

(assert (= (and b!109915 res!54375) b!109909))

(assert (= (and b!109915 (not res!54379)) b!109918))

(assert (= (and b!109918 res!54373) b!109919))

(assert (= (and b!109915 res!54380) b!109921))

(assert (= (and b!109921 c!19452) b!109916))

(assert (= (and b!109921 (not c!19452)) b!109917))

(assert (= (and b!109916 res!54372) b!109928))

(assert (= (or b!109916 b!109917) bm!11714))

(assert (= (and b!109921 res!54378) b!109913))

(assert (= (and b!109913 c!19453) b!109910))

(assert (= (and b!109913 (not c!19453)) b!109912))

(assert (= (and b!109910 res!54377) b!109911))

(assert (= (or b!109910 b!109912) bm!11713))

(declare-fun b_lambda!4913 () Bool)

(assert (=> (not b_lambda!4913) (not b!109919)))

(assert (=> b!109919 t!5751))

(declare-fun b_and!6765 () Bool)

(assert (= b_and!6761 (and (=> t!5751 result!3513) b_and!6765)))

(assert (=> b!109919 t!5753))

(declare-fun b_and!6767 () Bool)

(assert (= b_and!6763 (and (=> t!5753 result!3517) b_and!6767)))

(assert (=> b!109919 m!124091))

(assert (=> b!109919 m!124087))

(declare-fun m!124205 () Bool)

(assert (=> b!109919 m!124205))

(assert (=> b!109919 m!123913))

(assert (=> b!109919 m!124087))

(assert (=> b!109919 m!124091))

(assert (=> b!109919 m!123913))

(assert (=> b!109919 m!124093))

(assert (=> b!109918 m!124087))

(assert (=> b!109918 m!124087))

(declare-fun m!124207 () Bool)

(assert (=> b!109918 m!124207))

(assert (=> d!30779 m!123901))

(declare-fun m!124209 () Bool)

(assert (=> bm!11716 m!124209))

(declare-fun m!124211 () Bool)

(assert (=> b!109911 m!124211))

(assert (=> bm!11715 m!123909))

(assert (=> b!109920 m!124087))

(assert (=> b!109920 m!124087))

(assert (=> b!109920 m!124095))

(assert (=> b!109909 m!124087))

(assert (=> b!109909 m!124087))

(assert (=> b!109909 m!124095))

(declare-fun m!124213 () Bool)

(assert (=> b!109928 m!124213))

(declare-fun m!124215 () Bool)

(assert (=> b!109926 m!124215))

(declare-fun m!124217 () Bool)

(assert (=> b!109926 m!124217))

(declare-fun m!124219 () Bool)

(assert (=> b!109926 m!124219))

(declare-fun m!124221 () Bool)

(assert (=> b!109926 m!124221))

(declare-fun m!124223 () Bool)

(assert (=> b!109926 m!124223))

(declare-fun m!124225 () Bool)

(assert (=> b!109926 m!124225))

(assert (=> b!109926 m!124215))

(declare-fun m!124227 () Bool)

(assert (=> b!109926 m!124227))

(declare-fun m!124229 () Bool)

(assert (=> b!109926 m!124229))

(assert (=> b!109926 m!123909))

(declare-fun m!124231 () Bool)

(assert (=> b!109926 m!124231))

(declare-fun m!124233 () Bool)

(assert (=> b!109926 m!124233))

(declare-fun m!124235 () Bool)

(assert (=> b!109926 m!124235))

(declare-fun m!124237 () Bool)

(assert (=> b!109926 m!124237))

(declare-fun m!124239 () Bool)

(assert (=> b!109926 m!124239))

(declare-fun m!124241 () Bool)

(assert (=> b!109926 m!124241))

(assert (=> b!109926 m!124231))

(assert (=> b!109926 m!124087))

(assert (=> b!109926 m!124219))

(declare-fun m!124243 () Bool)

(assert (=> b!109926 m!124243))

(assert (=> b!109926 m!124223))

(declare-fun m!124245 () Bool)

(assert (=> bm!11714 m!124245))

(declare-fun m!124247 () Bool)

(assert (=> b!109923 m!124247))

(declare-fun m!124249 () Bool)

(assert (=> bm!11713 m!124249))

(assert (=> b!109504 d!30779))

(declare-fun d!30781 () Bool)

(assert (=> d!30781 (= (valid!431 thiss!992) (valid!430 (v!2920 (underlying!363 thiss!992))))))

(declare-fun bs!4514 () Bool)

(assert (= bs!4514 d!30781))

(declare-fun m!124251 () Bool)

(assert (=> bs!4514 m!124251))

(assert (=> start!12684 d!30781))

(declare-fun d!30783 () Bool)

(assert (=> d!30783 (= (array_inv!1307 (_keys!4339 newMap!16)) (bvsge (size!2326 (_keys!4339 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!109512 d!30783))

(declare-fun d!30785 () Bool)

(assert (=> d!30785 (= (array_inv!1308 (_values!2609 newMap!16)) (bvsge (size!2327 (_values!2609 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!109512 d!30785))

(declare-fun d!30787 () Bool)

(assert (=> d!30787 (= (array_inv!1307 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvsge (size!2326 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!109508 d!30787))

(declare-fun d!30789 () Bool)

(assert (=> d!30789 (= (array_inv!1308 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvsge (size!2327 (_values!2609 (v!2920 (underlying!363 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!109508 d!30789))

(declare-fun condMapEmpty!4009 () Bool)

(declare-fun mapDefault!4009 () ValueCell!1004)

(assert (=> mapNonEmpty!3994 (= condMapEmpty!4009 (= mapRest!3994 ((as const (Array (_ BitVec 32) ValueCell!1004)) mapDefault!4009)))))

(declare-fun e!71523 () Bool)

(declare-fun mapRes!4009 () Bool)

(assert (=> mapNonEmpty!3994 (= tp!10010 (and e!71523 mapRes!4009))))

(declare-fun b!109937 () Bool)

(assert (=> b!109937 (= e!71523 tp_is_empty!2695)))

(declare-fun mapIsEmpty!4009 () Bool)

(assert (=> mapIsEmpty!4009 mapRes!4009))

(declare-fun mapNonEmpty!4009 () Bool)

(declare-fun tp!10039 () Bool)

(declare-fun e!71524 () Bool)

(assert (=> mapNonEmpty!4009 (= mapRes!4009 (and tp!10039 e!71524))))

(declare-fun mapValue!4009 () ValueCell!1004)

(declare-fun mapKey!4009 () (_ BitVec 32))

(declare-fun mapRest!4009 () (Array (_ BitVec 32) ValueCell!1004))

(assert (=> mapNonEmpty!4009 (= mapRest!3994 (store mapRest!4009 mapKey!4009 mapValue!4009))))

(declare-fun b!109936 () Bool)

(assert (=> b!109936 (= e!71524 tp_is_empty!2695)))

(assert (= (and mapNonEmpty!3994 condMapEmpty!4009) mapIsEmpty!4009))

(assert (= (and mapNonEmpty!3994 (not condMapEmpty!4009)) mapNonEmpty!4009))

(assert (= (and mapNonEmpty!4009 ((_ is ValueCellFull!1004) mapValue!4009)) b!109936))

(assert (= (and mapNonEmpty!3994 ((_ is ValueCellFull!1004) mapDefault!4009)) b!109937))

(declare-fun m!124253 () Bool)

(assert (=> mapNonEmpty!4009 m!124253))

(declare-fun condMapEmpty!4010 () Bool)

(declare-fun mapDefault!4010 () ValueCell!1004)

(assert (=> mapNonEmpty!3993 (= condMapEmpty!4010 (= mapRest!3993 ((as const (Array (_ BitVec 32) ValueCell!1004)) mapDefault!4010)))))

(declare-fun e!71525 () Bool)

(declare-fun mapRes!4010 () Bool)

(assert (=> mapNonEmpty!3993 (= tp!10011 (and e!71525 mapRes!4010))))

(declare-fun b!109939 () Bool)

(assert (=> b!109939 (= e!71525 tp_is_empty!2695)))

(declare-fun mapIsEmpty!4010 () Bool)

(assert (=> mapIsEmpty!4010 mapRes!4010))

(declare-fun mapNonEmpty!4010 () Bool)

(declare-fun tp!10040 () Bool)

(declare-fun e!71526 () Bool)

(assert (=> mapNonEmpty!4010 (= mapRes!4010 (and tp!10040 e!71526))))

(declare-fun mapRest!4010 () (Array (_ BitVec 32) ValueCell!1004))

(declare-fun mapValue!4010 () ValueCell!1004)

(declare-fun mapKey!4010 () (_ BitVec 32))

(assert (=> mapNonEmpty!4010 (= mapRest!3993 (store mapRest!4010 mapKey!4010 mapValue!4010))))

(declare-fun b!109938 () Bool)

(assert (=> b!109938 (= e!71526 tp_is_empty!2695)))

(assert (= (and mapNonEmpty!3993 condMapEmpty!4010) mapIsEmpty!4010))

(assert (= (and mapNonEmpty!3993 (not condMapEmpty!4010)) mapNonEmpty!4010))

(assert (= (and mapNonEmpty!4010 ((_ is ValueCellFull!1004) mapValue!4010)) b!109938))

(assert (= (and mapNonEmpty!3993 ((_ is ValueCellFull!1004) mapDefault!4010)) b!109939))

(declare-fun m!124255 () Bool)

(assert (=> mapNonEmpty!4010 m!124255))

(declare-fun b_lambda!4915 () Bool)

(assert (= b_lambda!4913 (or (and b!109508 b_free!2557) (and b!109512 b_free!2559 (= (defaultEntry!2626 newMap!16) (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))))) b_lambda!4915)))

(declare-fun b_lambda!4917 () Bool)

(assert (= b_lambda!4909 (or (and b!109508 b_free!2557) (and b!109512 b_free!2559 (= (defaultEntry!2626 newMap!16) (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))))) b_lambda!4917)))

(declare-fun b_lambda!4919 () Bool)

(assert (= b_lambda!4911 (or (and b!109508 b_free!2557) (and b!109512 b_free!2559 (= (defaultEntry!2626 newMap!16) (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))))) b_lambda!4919)))

(check-sat (not b!109802) (not b!109647) (not b!109923) (not d!30777) (not bm!11676) (not d!30761) (not b!109813) (not bm!11620) (not bm!11685) (not d!30753) (not b!109831) (not bm!11686) (not bm!11682) (not b!109801) (not b!109648) (not bm!11673) (not b_next!2559) (not b!109687) (not b!109919) (not bm!11691) (not bm!11669) (not b!109680) (not b!109649) b_and!6767 (not b_next!2557) (not b!109650) (not d!30751) (not b!109679) (not bm!11713) b_and!6765 (not b_lambda!4907) (not b!109918) (not b!109652) (not bm!11692) (not b!109819) (not b_lambda!4915) (not b!109866) (not bm!11677) (not b!109909) (not bm!11714) (not bm!11716) (not b!109838) (not b!109651) (not b!109850) (not b!109812) (not d!30759) (not bm!11678) (not b!109911) (not b!109920) (not b!109863) (not b_lambda!4919) (not b!109814) (not b!109784) (not b!109833) (not d!30755) (not d!30745) (not d!30779) (not d!30767) (not b!109682) (not b!109845) (not b!109926) (not b!109832) (not b!109646) (not b!109928) (not d!30773) (not b!109653) (not bm!11695) (not b!109805) (not d!30757) (not b!109686) (not mapNonEmpty!4009) (not mapNonEmpty!4010) (not b!109698) (not b_lambda!4917) (not bm!11715) (not b!109684) (not bm!11684) (not d!30769) (not d!30781) (not bm!11690) tp_is_empty!2695 (not b!109839) (not b!109862) (not b!109683) (not d!30747) (not d!30763) (not b!109696) (not b!109685))
(check-sat b_and!6765 b_and!6767 (not b_next!2557) (not b_next!2559))
(get-model)

(declare-fun b!109952 () Bool)

(declare-fun e!71533 () SeekEntryResult!264)

(declare-fun e!71534 () SeekEntryResult!264)

(assert (=> b!109952 (= e!71533 e!71534)))

(declare-fun lt!56601 () (_ BitVec 64))

(declare-fun lt!56603 () SeekEntryResult!264)

(assert (=> b!109952 (= lt!56601 (select (arr!2068 (_keys!4339 newMap!16)) (index!3208 lt!56603)))))

(declare-fun c!19462 () Bool)

(assert (=> b!109952 (= c!19462 (= lt!56601 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))

(declare-fun b!109953 () Bool)

(declare-fun e!71535 () SeekEntryResult!264)

(assert (=> b!109953 (= e!71535 (MissingZero!264 (index!3208 lt!56603)))))

(declare-fun b!109954 () Bool)

(assert (=> b!109954 (= e!71534 (Found!264 (index!3208 lt!56603)))))

(declare-fun b!109955 () Bool)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4365 (_ BitVec 32)) SeekEntryResult!264)

(assert (=> b!109955 (= e!71535 (seekKeyOrZeroReturnVacant!0 (x!13951 lt!56603) (index!3208 lt!56603) (index!3208 lt!56603) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (_keys!4339 newMap!16) (mask!6793 newMap!16)))))

(declare-fun b!109956 () Bool)

(declare-fun c!19460 () Bool)

(assert (=> b!109956 (= c!19460 (= lt!56601 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!109956 (= e!71534 e!71535)))

(declare-fun d!30791 () Bool)

(declare-fun lt!56602 () SeekEntryResult!264)

(assert (=> d!30791 (and (or ((_ is Undefined!264) lt!56602) (not ((_ is Found!264) lt!56602)) (and (bvsge (index!3207 lt!56602) #b00000000000000000000000000000000) (bvslt (index!3207 lt!56602) (size!2326 (_keys!4339 newMap!16))))) (or ((_ is Undefined!264) lt!56602) ((_ is Found!264) lt!56602) (not ((_ is MissingZero!264) lt!56602)) (and (bvsge (index!3206 lt!56602) #b00000000000000000000000000000000) (bvslt (index!3206 lt!56602) (size!2326 (_keys!4339 newMap!16))))) (or ((_ is Undefined!264) lt!56602) ((_ is Found!264) lt!56602) ((_ is MissingZero!264) lt!56602) (not ((_ is MissingVacant!264) lt!56602)) (and (bvsge (index!3209 lt!56602) #b00000000000000000000000000000000) (bvslt (index!3209 lt!56602) (size!2326 (_keys!4339 newMap!16))))) (or ((_ is Undefined!264) lt!56602) (ite ((_ is Found!264) lt!56602) (= (select (arr!2068 (_keys!4339 newMap!16)) (index!3207 lt!56602)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) (ite ((_ is MissingZero!264) lt!56602) (= (select (arr!2068 (_keys!4339 newMap!16)) (index!3206 lt!56602)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!264) lt!56602) (= (select (arr!2068 (_keys!4339 newMap!16)) (index!3209 lt!56602)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!30791 (= lt!56602 e!71533)))

(declare-fun c!19461 () Bool)

(assert (=> d!30791 (= c!19461 (and ((_ is Intermediate!264) lt!56603) (undefined!1076 lt!56603)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4365 (_ BitVec 32)) SeekEntryResult!264)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!30791 (= lt!56603 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (mask!6793 newMap!16)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (_keys!4339 newMap!16) (mask!6793 newMap!16)))))

(assert (=> d!30791 (validMask!0 (mask!6793 newMap!16))))

(assert (=> d!30791 (= (seekEntryOrOpen!0 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (_keys!4339 newMap!16) (mask!6793 newMap!16)) lt!56602)))

(declare-fun b!109957 () Bool)

(assert (=> b!109957 (= e!71533 Undefined!264)))

(assert (= (and d!30791 c!19461) b!109957))

(assert (= (and d!30791 (not c!19461)) b!109952))

(assert (= (and b!109952 c!19462) b!109954))

(assert (= (and b!109952 (not c!19462)) b!109956))

(assert (= (and b!109956 c!19460) b!109953))

(assert (= (and b!109956 (not c!19460)) b!109955))

(declare-fun m!124257 () Bool)

(assert (=> b!109952 m!124257))

(assert (=> b!109955 m!123865))

(declare-fun m!124259 () Bool)

(assert (=> b!109955 m!124259))

(declare-fun m!124261 () Bool)

(assert (=> d!30791 m!124261))

(declare-fun m!124263 () Bool)

(assert (=> d!30791 m!124263))

(assert (=> d!30791 m!123865))

(declare-fun m!124265 () Bool)

(assert (=> d!30791 m!124265))

(declare-fun m!124267 () Bool)

(assert (=> d!30791 m!124267))

(declare-fun m!124269 () Bool)

(assert (=> d!30791 m!124269))

(declare-fun m!124271 () Bool)

(assert (=> d!30791 m!124271))

(assert (=> d!30791 m!123865))

(assert (=> d!30791 m!124263))

(assert (=> b!109814 d!30791))

(declare-fun d!30793 () Bool)

(declare-fun e!71536 () Bool)

(assert (=> d!30793 e!71536))

(declare-fun res!54381 () Bool)

(assert (=> d!30793 (=> (not res!54381) (not e!71536))))

(declare-fun lt!56605 () ListLongMap!1553)

(assert (=> d!30793 (= res!54381 (contains!827 lt!56605 (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun lt!56604 () List!1627)

(assert (=> d!30793 (= lt!56605 (ListLongMap!1554 lt!56604))))

(declare-fun lt!56606 () Unit!3390)

(declare-fun lt!56607 () Unit!3390)

(assert (=> d!30793 (= lt!56606 lt!56607)))

(assert (=> d!30793 (= (getValueByKey!156 lt!56604 (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))) (Some!161 (_2!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(assert (=> d!30793 (= lt!56607 (lemmaContainsTupThenGetReturnValue!75 lt!56604 (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))) (_2!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(assert (=> d!30793 (= lt!56604 (insertStrictlySorted!78 (toList!792 (+!139 lt!56303 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))) (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))) (_2!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(assert (=> d!30793 (= (+!139 (+!139 lt!56303 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))) lt!56605)))

(declare-fun b!109958 () Bool)

(declare-fun res!54382 () Bool)

(assert (=> b!109958 (=> (not res!54382) (not e!71536))))

(assert (=> b!109958 (= res!54382 (= (getValueByKey!156 (toList!792 lt!56605) (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))) (Some!161 (_2!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(declare-fun b!109959 () Bool)

(assert (=> b!109959 (= e!71536 (contains!829 (toList!792 lt!56605) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))))

(assert (= (and d!30793 res!54381) b!109958))

(assert (= (and b!109958 res!54382) b!109959))

(declare-fun m!124273 () Bool)

(assert (=> d!30793 m!124273))

(declare-fun m!124275 () Bool)

(assert (=> d!30793 m!124275))

(declare-fun m!124277 () Bool)

(assert (=> d!30793 m!124277))

(declare-fun m!124279 () Bool)

(assert (=> d!30793 m!124279))

(declare-fun m!124281 () Bool)

(assert (=> b!109958 m!124281))

(declare-fun m!124283 () Bool)

(assert (=> b!109959 m!124283))

(assert (=> d!30751 d!30793))

(declare-fun d!30795 () Bool)

(assert (=> d!30795 (= (+!139 (+!139 lt!56303 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))) (+!139 (+!139 lt!56303 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))))

(assert (=> d!30795 true))

(declare-fun _$28!167 () Unit!3390)

(assert (=> d!30795 (= (choose!689 lt!56303 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))) _$28!167)))

(declare-fun bs!4515 () Bool)

(assert (= bs!4515 d!30795))

(assert (=> bs!4515 m!124053))

(assert (=> bs!4515 m!124053))

(assert (=> bs!4515 m!124055))

(assert (=> bs!4515 m!124059))

(assert (=> bs!4515 m!124059))

(assert (=> bs!4515 m!124061))

(assert (=> d!30751 d!30795))

(declare-fun d!30797 () Bool)

(declare-fun e!71537 () Bool)

(assert (=> d!30797 e!71537))

(declare-fun res!54383 () Bool)

(assert (=> d!30797 (=> (not res!54383) (not e!71537))))

(declare-fun lt!56609 () ListLongMap!1553)

(assert (=> d!30797 (= res!54383 (contains!827 lt!56609 (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))

(declare-fun lt!56608 () List!1627)

(assert (=> d!30797 (= lt!56609 (ListLongMap!1554 lt!56608))))

(declare-fun lt!56610 () Unit!3390)

(declare-fun lt!56611 () Unit!3390)

(assert (=> d!30797 (= lt!56610 lt!56611)))

(assert (=> d!30797 (= (getValueByKey!156 lt!56608 (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))) (Some!161 (_2!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))

(assert (=> d!30797 (= lt!56611 (lemmaContainsTupThenGetReturnValue!75 lt!56608 (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)) (_2!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))

(assert (=> d!30797 (= lt!56608 (insertStrictlySorted!78 (toList!792 (+!139 lt!56303 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)) (_2!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))

(assert (=> d!30797 (= (+!139 (+!139 lt!56303 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)) lt!56609)))

(declare-fun b!109960 () Bool)

(declare-fun res!54384 () Bool)

(assert (=> b!109960 (=> (not res!54384) (not e!71537))))

(assert (=> b!109960 (= res!54384 (= (getValueByKey!156 (toList!792 lt!56609) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))) (Some!161 (_2!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))))))

(declare-fun b!109961 () Bool)

(assert (=> b!109961 (= e!71537 (contains!829 (toList!792 lt!56609) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))))

(assert (= (and d!30797 res!54383) b!109960))

(assert (= (and b!109960 res!54384) b!109961))

(declare-fun m!124285 () Bool)

(assert (=> d!30797 m!124285))

(declare-fun m!124287 () Bool)

(assert (=> d!30797 m!124287))

(declare-fun m!124289 () Bool)

(assert (=> d!30797 m!124289))

(declare-fun m!124291 () Bool)

(assert (=> d!30797 m!124291))

(declare-fun m!124293 () Bool)

(assert (=> b!109960 m!124293))

(declare-fun m!124295 () Bool)

(assert (=> b!109961 m!124295))

(assert (=> d!30751 d!30797))

(declare-fun d!30799 () Bool)

(declare-fun e!71538 () Bool)

(assert (=> d!30799 e!71538))

(declare-fun res!54385 () Bool)

(assert (=> d!30799 (=> (not res!54385) (not e!71538))))

(declare-fun lt!56613 () ListLongMap!1553)

(assert (=> d!30799 (= res!54385 (contains!827 lt!56613 (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))

(declare-fun lt!56612 () List!1627)

(assert (=> d!30799 (= lt!56613 (ListLongMap!1554 lt!56612))))

(declare-fun lt!56614 () Unit!3390)

(declare-fun lt!56615 () Unit!3390)

(assert (=> d!30799 (= lt!56614 lt!56615)))

(assert (=> d!30799 (= (getValueByKey!156 lt!56612 (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))) (Some!161 (_2!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))

(assert (=> d!30799 (= lt!56615 (lemmaContainsTupThenGetReturnValue!75 lt!56612 (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)) (_2!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))

(assert (=> d!30799 (= lt!56612 (insertStrictlySorted!78 (toList!792 lt!56303) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)) (_2!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))

(assert (=> d!30799 (= (+!139 lt!56303 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)) lt!56613)))

(declare-fun b!109962 () Bool)

(declare-fun res!54386 () Bool)

(assert (=> b!109962 (=> (not res!54386) (not e!71538))))

(assert (=> b!109962 (= res!54386 (= (getValueByKey!156 (toList!792 lt!56613) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))) (Some!161 (_2!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))))))

(declare-fun b!109963 () Bool)

(assert (=> b!109963 (= e!71538 (contains!829 (toList!792 lt!56613) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))))

(assert (= (and d!30799 res!54385) b!109962))

(assert (= (and b!109962 res!54386) b!109963))

(declare-fun m!124297 () Bool)

(assert (=> d!30799 m!124297))

(declare-fun m!124299 () Bool)

(assert (=> d!30799 m!124299))

(declare-fun m!124301 () Bool)

(assert (=> d!30799 m!124301))

(declare-fun m!124303 () Bool)

(assert (=> d!30799 m!124303))

(declare-fun m!124305 () Bool)

(assert (=> b!109962 m!124305))

(declare-fun m!124307 () Bool)

(assert (=> b!109963 m!124307))

(assert (=> d!30751 d!30799))

(declare-fun d!30801 () Bool)

(declare-fun e!71539 () Bool)

(assert (=> d!30801 e!71539))

(declare-fun res!54387 () Bool)

(assert (=> d!30801 (=> (not res!54387) (not e!71539))))

(declare-fun lt!56617 () ListLongMap!1553)

(assert (=> d!30801 (= res!54387 (contains!827 lt!56617 (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun lt!56616 () List!1627)

(assert (=> d!30801 (= lt!56617 (ListLongMap!1554 lt!56616))))

(declare-fun lt!56618 () Unit!3390)

(declare-fun lt!56619 () Unit!3390)

(assert (=> d!30801 (= lt!56618 lt!56619)))

(assert (=> d!30801 (= (getValueByKey!156 lt!56616 (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))) (Some!161 (_2!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(assert (=> d!30801 (= lt!56619 (lemmaContainsTupThenGetReturnValue!75 lt!56616 (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))) (_2!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(assert (=> d!30801 (= lt!56616 (insertStrictlySorted!78 (toList!792 lt!56303) (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))) (_2!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(assert (=> d!30801 (= (+!139 lt!56303 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))) lt!56617)))

(declare-fun b!109964 () Bool)

(declare-fun res!54388 () Bool)

(assert (=> b!109964 (=> (not res!54388) (not e!71539))))

(assert (=> b!109964 (= res!54388 (= (getValueByKey!156 (toList!792 lt!56617) (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))) (Some!161 (_2!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(declare-fun b!109965 () Bool)

(assert (=> b!109965 (= e!71539 (contains!829 (toList!792 lt!56617) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))))

(assert (= (and d!30801 res!54387) b!109964))

(assert (= (and b!109964 res!54388) b!109965))

(declare-fun m!124309 () Bool)

(assert (=> d!30801 m!124309))

(declare-fun m!124311 () Bool)

(assert (=> d!30801 m!124311))

(declare-fun m!124313 () Bool)

(assert (=> d!30801 m!124313))

(declare-fun m!124315 () Bool)

(assert (=> d!30801 m!124315))

(declare-fun m!124317 () Bool)

(assert (=> b!109964 m!124317))

(declare-fun m!124319 () Bool)

(assert (=> b!109965 m!124319))

(assert (=> d!30751 d!30801))

(declare-fun d!30803 () Bool)

(declare-fun lt!56622 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!113 (List!1627) (InoxSet tuple2!2396))

(assert (=> d!30803 (= lt!56622 (select (content!113 (toList!792 lt!56388)) lt!56299))))

(declare-fun e!71544 () Bool)

(assert (=> d!30803 (= lt!56622 e!71544)))

(declare-fun res!54393 () Bool)

(assert (=> d!30803 (=> (not res!54393) (not e!71544))))

(assert (=> d!30803 (= res!54393 ((_ is Cons!1623) (toList!792 lt!56388)))))

(assert (=> d!30803 (= (contains!829 (toList!792 lt!56388) lt!56299) lt!56622)))

(declare-fun b!109970 () Bool)

(declare-fun e!71545 () Bool)

(assert (=> b!109970 (= e!71544 e!71545)))

(declare-fun res!54394 () Bool)

(assert (=> b!109970 (=> res!54394 e!71545)))

(assert (=> b!109970 (= res!54394 (= (h!2222 (toList!792 lt!56388)) lt!56299))))

(declare-fun b!109971 () Bool)

(assert (=> b!109971 (= e!71545 (contains!829 (t!5755 (toList!792 lt!56388)) lt!56299))))

(assert (= (and d!30803 res!54393) b!109970))

(assert (= (and b!109970 (not res!54394)) b!109971))

(declare-fun m!124321 () Bool)

(assert (=> d!30803 m!124321))

(declare-fun m!124323 () Bool)

(assert (=> d!30803 m!124323))

(declare-fun m!124325 () Bool)

(assert (=> b!109971 m!124325))

(assert (=> b!109647 d!30803))

(declare-fun d!30805 () Bool)

(declare-fun e!71547 () Bool)

(assert (=> d!30805 e!71547))

(declare-fun res!54395 () Bool)

(assert (=> d!30805 (=> res!54395 e!71547)))

(declare-fun lt!56623 () Bool)

(assert (=> d!30805 (= res!54395 (not lt!56623))))

(declare-fun lt!56624 () Bool)

(assert (=> d!30805 (= lt!56623 lt!56624)))

(declare-fun lt!56625 () Unit!3390)

(declare-fun e!71546 () Unit!3390)

(assert (=> d!30805 (= lt!56625 e!71546)))

(declare-fun c!19463 () Bool)

(assert (=> d!30805 (= c!19463 lt!56624)))

(assert (=> d!30805 (= lt!56624 (containsKey!160 (toList!792 lt!56399) (_1!1209 lt!56300)))))

(assert (=> d!30805 (= (contains!827 lt!56399 (_1!1209 lt!56300)) lt!56623)))

(declare-fun b!109972 () Bool)

(declare-fun lt!56626 () Unit!3390)

(assert (=> b!109972 (= e!71546 lt!56626)))

(assert (=> b!109972 (= lt!56626 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 lt!56399) (_1!1209 lt!56300)))))

(assert (=> b!109972 (isDefined!110 (getValueByKey!156 (toList!792 lt!56399) (_1!1209 lt!56300)))))

(declare-fun b!109973 () Bool)

(declare-fun Unit!3401 () Unit!3390)

(assert (=> b!109973 (= e!71546 Unit!3401)))

(declare-fun b!109974 () Bool)

(assert (=> b!109974 (= e!71547 (isDefined!110 (getValueByKey!156 (toList!792 lt!56399) (_1!1209 lt!56300))))))

(assert (= (and d!30805 c!19463) b!109972))

(assert (= (and d!30805 (not c!19463)) b!109973))

(assert (= (and d!30805 (not res!54395)) b!109974))

(declare-fun m!124327 () Bool)

(assert (=> d!30805 m!124327))

(declare-fun m!124329 () Bool)

(assert (=> b!109972 m!124329))

(assert (=> b!109972 m!124071))

(assert (=> b!109972 m!124071))

(declare-fun m!124331 () Bool)

(assert (=> b!109972 m!124331))

(assert (=> b!109974 m!124071))

(assert (=> b!109974 m!124071))

(assert (=> b!109974 m!124331))

(assert (=> d!30753 d!30805))

(declare-fun b!109985 () Bool)

(declare-fun e!71553 () Option!162)

(assert (=> b!109985 (= e!71553 (getValueByKey!156 (t!5755 lt!56398) (_1!1209 lt!56300)))))

(declare-fun d!30807 () Bool)

(declare-fun c!19468 () Bool)

(assert (=> d!30807 (= c!19468 (and ((_ is Cons!1623) lt!56398) (= (_1!1209 (h!2222 lt!56398)) (_1!1209 lt!56300))))))

(declare-fun e!71552 () Option!162)

(assert (=> d!30807 (= (getValueByKey!156 lt!56398 (_1!1209 lt!56300)) e!71552)))

(declare-fun b!109983 () Bool)

(assert (=> b!109983 (= e!71552 (Some!161 (_2!1209 (h!2222 lt!56398))))))

(declare-fun b!109984 () Bool)

(assert (=> b!109984 (= e!71552 e!71553)))

(declare-fun c!19469 () Bool)

(assert (=> b!109984 (= c!19469 (and ((_ is Cons!1623) lt!56398) (not (= (_1!1209 (h!2222 lt!56398)) (_1!1209 lt!56300)))))))

(declare-fun b!109986 () Bool)

(assert (=> b!109986 (= e!71553 None!160)))

(assert (= (and d!30807 c!19468) b!109983))

(assert (= (and d!30807 (not c!19468)) b!109984))

(assert (= (and b!109984 c!19469) b!109985))

(assert (= (and b!109984 (not c!19469)) b!109986))

(declare-fun m!124333 () Bool)

(assert (=> b!109985 m!124333))

(assert (=> d!30753 d!30807))

(declare-fun d!30809 () Bool)

(assert (=> d!30809 (= (getValueByKey!156 lt!56398 (_1!1209 lt!56300)) (Some!161 (_2!1209 lt!56300)))))

(declare-fun lt!56629 () Unit!3390)

(declare-fun choose!691 (List!1627 (_ BitVec 64) V!3241) Unit!3390)

(assert (=> d!30809 (= lt!56629 (choose!691 lt!56398 (_1!1209 lt!56300) (_2!1209 lt!56300)))))

(declare-fun e!71556 () Bool)

(assert (=> d!30809 e!71556))

(declare-fun res!54400 () Bool)

(assert (=> d!30809 (=> (not res!54400) (not e!71556))))

(declare-fun isStrictlySorted!306 (List!1627) Bool)

(assert (=> d!30809 (= res!54400 (isStrictlySorted!306 lt!56398))))

(assert (=> d!30809 (= (lemmaContainsTupThenGetReturnValue!75 lt!56398 (_1!1209 lt!56300) (_2!1209 lt!56300)) lt!56629)))

(declare-fun b!109991 () Bool)

(declare-fun res!54401 () Bool)

(assert (=> b!109991 (=> (not res!54401) (not e!71556))))

(assert (=> b!109991 (= res!54401 (containsKey!160 lt!56398 (_1!1209 lt!56300)))))

(declare-fun b!109992 () Bool)

(assert (=> b!109992 (= e!71556 (contains!829 lt!56398 (tuple2!2397 (_1!1209 lt!56300) (_2!1209 lt!56300))))))

(assert (= (and d!30809 res!54400) b!109991))

(assert (= (and b!109991 res!54401) b!109992))

(assert (=> d!30809 m!124065))

(declare-fun m!124335 () Bool)

(assert (=> d!30809 m!124335))

(declare-fun m!124337 () Bool)

(assert (=> d!30809 m!124337))

(declare-fun m!124339 () Bool)

(assert (=> b!109991 m!124339))

(declare-fun m!124341 () Bool)

(assert (=> b!109992 m!124341))

(assert (=> d!30753 d!30809))

(declare-fun b!110013 () Bool)

(declare-fun e!71568 () List!1627)

(declare-fun c!19481 () Bool)

(declare-fun c!19478 () Bool)

(assert (=> b!110013 (= e!71568 (ite c!19478 (t!5755 (toList!792 (+!139 lt!56303 lt!56299))) (ite c!19481 (Cons!1623 (h!2222 (toList!792 (+!139 lt!56303 lt!56299))) (t!5755 (toList!792 (+!139 lt!56303 lt!56299)))) Nil!1624)))))

(declare-fun b!110014 () Bool)

(assert (=> b!110014 (= e!71568 (insertStrictlySorted!78 (t!5755 (toList!792 (+!139 lt!56303 lt!56299))) (_1!1209 lt!56300) (_2!1209 lt!56300)))))

(declare-fun bm!11723 () Bool)

(declare-fun call!11728 () List!1627)

(declare-fun call!11726 () List!1627)

(assert (=> bm!11723 (= call!11728 call!11726)))

(declare-fun b!110015 () Bool)

(declare-fun e!71567 () List!1627)

(declare-fun call!11727 () List!1627)

(assert (=> b!110015 (= e!71567 call!11727)))

(declare-fun b!110016 () Bool)

(assert (=> b!110016 (= c!19481 (and ((_ is Cons!1623) (toList!792 (+!139 lt!56303 lt!56299))) (bvsgt (_1!1209 (h!2222 (toList!792 (+!139 lt!56303 lt!56299)))) (_1!1209 lt!56300))))))

(declare-fun e!71570 () List!1627)

(assert (=> b!110016 (= e!71570 e!71567)))

(declare-fun b!110017 () Bool)

(declare-fun res!54407 () Bool)

(declare-fun e!71569 () Bool)

(assert (=> b!110017 (=> (not res!54407) (not e!71569))))

(declare-fun lt!56632 () List!1627)

(assert (=> b!110017 (= res!54407 (containsKey!160 lt!56632 (_1!1209 lt!56300)))))

(declare-fun b!110019 () Bool)

(assert (=> b!110019 (= e!71567 call!11727)))

(declare-fun bm!11724 () Bool)

(assert (=> bm!11724 (= call!11727 call!11728)))

(declare-fun b!110020 () Bool)

(assert (=> b!110020 (= e!71570 call!11728)))

(declare-fun b!110021 () Bool)

(declare-fun e!71571 () List!1627)

(assert (=> b!110021 (= e!71571 e!71570)))

(assert (=> b!110021 (= c!19478 (and ((_ is Cons!1623) (toList!792 (+!139 lt!56303 lt!56299))) (= (_1!1209 (h!2222 (toList!792 (+!139 lt!56303 lt!56299)))) (_1!1209 lt!56300))))))

(declare-fun d!30811 () Bool)

(assert (=> d!30811 e!71569))

(declare-fun res!54406 () Bool)

(assert (=> d!30811 (=> (not res!54406) (not e!71569))))

(assert (=> d!30811 (= res!54406 (isStrictlySorted!306 lt!56632))))

(assert (=> d!30811 (= lt!56632 e!71571)))

(declare-fun c!19480 () Bool)

(assert (=> d!30811 (= c!19480 (and ((_ is Cons!1623) (toList!792 (+!139 lt!56303 lt!56299))) (bvslt (_1!1209 (h!2222 (toList!792 (+!139 lt!56303 lt!56299)))) (_1!1209 lt!56300))))))

(assert (=> d!30811 (isStrictlySorted!306 (toList!792 (+!139 lt!56303 lt!56299)))))

(assert (=> d!30811 (= (insertStrictlySorted!78 (toList!792 (+!139 lt!56303 lt!56299)) (_1!1209 lt!56300) (_2!1209 lt!56300)) lt!56632)))

(declare-fun b!110018 () Bool)

(assert (=> b!110018 (= e!71571 call!11726)))

(declare-fun b!110022 () Bool)

(assert (=> b!110022 (= e!71569 (contains!829 lt!56632 (tuple2!2397 (_1!1209 lt!56300) (_2!1209 lt!56300))))))

(declare-fun bm!11725 () Bool)

(declare-fun $colon$colon!82 (List!1627 tuple2!2396) List!1627)

(assert (=> bm!11725 (= call!11726 ($colon$colon!82 e!71568 (ite c!19480 (h!2222 (toList!792 (+!139 lt!56303 lt!56299))) (tuple2!2397 (_1!1209 lt!56300) (_2!1209 lt!56300)))))))

(declare-fun c!19479 () Bool)

(assert (=> bm!11725 (= c!19479 c!19480)))

(assert (= (and d!30811 c!19480) b!110018))

(assert (= (and d!30811 (not c!19480)) b!110021))

(assert (= (and b!110021 c!19478) b!110020))

(assert (= (and b!110021 (not c!19478)) b!110016))

(assert (= (and b!110016 c!19481) b!110015))

(assert (= (and b!110016 (not c!19481)) b!110019))

(assert (= (or b!110015 b!110019) bm!11724))

(assert (= (or b!110020 bm!11724) bm!11723))

(assert (= (or b!110018 bm!11723) bm!11725))

(assert (= (and bm!11725 c!19479) b!110014))

(assert (= (and bm!11725 (not c!19479)) b!110013))

(assert (= (and d!30811 res!54406) b!110017))

(assert (= (and b!110017 res!54407) b!110022))

(declare-fun m!124343 () Bool)

(assert (=> d!30811 m!124343))

(declare-fun m!124345 () Bool)

(assert (=> d!30811 m!124345))

(declare-fun m!124347 () Bool)

(assert (=> b!110017 m!124347))

(declare-fun m!124349 () Bool)

(assert (=> bm!11725 m!124349))

(declare-fun m!124351 () Bool)

(assert (=> b!110014 m!124351))

(declare-fun m!124353 () Bool)

(assert (=> b!110022 m!124353))

(assert (=> d!30753 d!30811))

(declare-fun d!30813 () Bool)

(declare-fun e!71572 () Bool)

(assert (=> d!30813 e!71572))

(declare-fun res!54408 () Bool)

(assert (=> d!30813 (=> (not res!54408) (not e!71572))))

(declare-fun lt!56634 () ListLongMap!1553)

(assert (=> d!30813 (= res!54408 (contains!827 lt!56634 (_1!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun lt!56633 () List!1627)

(assert (=> d!30813 (= lt!56634 (ListLongMap!1554 lt!56633))))

(declare-fun lt!56635 () Unit!3390)

(declare-fun lt!56636 () Unit!3390)

(assert (=> d!30813 (= lt!56635 lt!56636)))

(assert (=> d!30813 (= (getValueByKey!156 lt!56633 (_1!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))) (Some!161 (_2!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(assert (=> d!30813 (= lt!56636 (lemmaContainsTupThenGetReturnValue!75 lt!56633 (_1!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992))))) (_2!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(assert (=> d!30813 (= lt!56633 (insertStrictlySorted!78 (toList!792 call!11718) (_1!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992))))) (_2!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(assert (=> d!30813 (= (+!139 call!11718 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992))))) lt!56634)))

(declare-fun b!110023 () Bool)

(declare-fun res!54409 () Bool)

(assert (=> b!110023 (=> (not res!54409) (not e!71572))))

(assert (=> b!110023 (= res!54409 (= (getValueByKey!156 (toList!792 lt!56634) (_1!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))) (Some!161 (_2!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(declare-fun b!110024 () Bool)

(assert (=> b!110024 (= e!71572 (contains!829 (toList!792 lt!56634) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))))

(assert (= (and d!30813 res!54408) b!110023))

(assert (= (and b!110023 res!54409) b!110024))

(declare-fun m!124355 () Bool)

(assert (=> d!30813 m!124355))

(declare-fun m!124357 () Bool)

(assert (=> d!30813 m!124357))

(declare-fun m!124359 () Bool)

(assert (=> d!30813 m!124359))

(declare-fun m!124361 () Bool)

(assert (=> d!30813 m!124361))

(declare-fun m!124363 () Bool)

(assert (=> b!110023 m!124363))

(declare-fun m!124365 () Bool)

(assert (=> b!110024 m!124365))

(assert (=> b!109923 d!30813))

(declare-fun d!30815 () Bool)

(declare-fun lt!56637 () Bool)

(assert (=> d!30815 (= lt!56637 (select (content!113 (toList!792 lt!56392)) lt!56300))))

(declare-fun e!71573 () Bool)

(assert (=> d!30815 (= lt!56637 e!71573)))

(declare-fun res!54410 () Bool)

(assert (=> d!30815 (=> (not res!54410) (not e!71573))))

(assert (=> d!30815 (= res!54410 ((_ is Cons!1623) (toList!792 lt!56392)))))

(assert (=> d!30815 (= (contains!829 (toList!792 lt!56392) lt!56300) lt!56637)))

(declare-fun b!110025 () Bool)

(declare-fun e!71574 () Bool)

(assert (=> b!110025 (= e!71573 e!71574)))

(declare-fun res!54411 () Bool)

(assert (=> b!110025 (=> res!54411 e!71574)))

(assert (=> b!110025 (= res!54411 (= (h!2222 (toList!792 lt!56392)) lt!56300))))

(declare-fun b!110026 () Bool)

(assert (=> b!110026 (= e!71574 (contains!829 (t!5755 (toList!792 lt!56392)) lt!56300))))

(assert (= (and d!30815 res!54410) b!110025))

(assert (= (and b!110025 (not res!54411)) b!110026))

(declare-fun m!124367 () Bool)

(assert (=> d!30815 m!124367))

(declare-fun m!124369 () Bool)

(assert (=> d!30815 m!124369))

(declare-fun m!124371 () Bool)

(assert (=> b!110026 m!124371))

(assert (=> b!109649 d!30815))

(declare-fun d!30817 () Bool)

(declare-fun lt!56640 () Bool)

(declare-fun content!114 (List!1626) (InoxSet (_ BitVec 64)))

(assert (=> d!30817 (= lt!56640 (select (content!114 Nil!1623) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))

(declare-fun e!71579 () Bool)

(assert (=> d!30817 (= lt!56640 e!71579)))

(declare-fun res!54417 () Bool)

(assert (=> d!30817 (=> (not res!54417) (not e!71579))))

(assert (=> d!30817 (= res!54417 ((_ is Cons!1622) Nil!1623))))

(assert (=> d!30817 (= (contains!830 Nil!1623 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) lt!56640)))

(declare-fun b!110031 () Bool)

(declare-fun e!71580 () Bool)

(assert (=> b!110031 (= e!71579 e!71580)))

(declare-fun res!54416 () Bool)

(assert (=> b!110031 (=> res!54416 e!71580)))

(assert (=> b!110031 (= res!54416 (= (h!2221 Nil!1623) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))

(declare-fun b!110032 () Bool)

(assert (=> b!110032 (= e!71580 (contains!830 (t!5754 Nil!1623) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))

(assert (= (and d!30817 res!54417) b!110031))

(assert (= (and b!110031 (not res!54416)) b!110032))

(declare-fun m!124373 () Bool)

(assert (=> d!30817 m!124373))

(assert (=> d!30817 m!123865))

(declare-fun m!124375 () Bool)

(assert (=> d!30817 m!124375))

(assert (=> b!110032 m!123865))

(declare-fun m!124377 () Bool)

(assert (=> b!110032 m!124377))

(assert (=> b!109862 d!30817))

(declare-fun b!110049 () Bool)

(declare-fun res!54429 () Bool)

(declare-fun e!71590 () Bool)

(assert (=> b!110049 (=> (not res!54429) (not e!71590))))

(declare-fun lt!56645 () SeekEntryResult!264)

(assert (=> b!110049 (= res!54429 (= (select (arr!2068 (_keys!4339 newMap!16)) (index!3209 lt!56645)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!110049 (and (bvsge (index!3209 lt!56645) #b00000000000000000000000000000000) (bvslt (index!3209 lt!56645) (size!2326 (_keys!4339 newMap!16))))))

(declare-fun b!110050 () Bool)

(assert (=> b!110050 (and (bvsge (index!3206 lt!56645) #b00000000000000000000000000000000) (bvslt (index!3206 lt!56645) (size!2326 (_keys!4339 newMap!16))))))

(declare-fun res!54427 () Bool)

(assert (=> b!110050 (= res!54427 (= (select (arr!2068 (_keys!4339 newMap!16)) (index!3206 lt!56645)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!71592 () Bool)

(assert (=> b!110050 (=> (not res!54427) (not e!71592))))

(declare-fun b!110051 () Bool)

(declare-fun call!11734 () Bool)

(assert (=> b!110051 (= e!71592 (not call!11734))))

(declare-fun call!11733 () Bool)

(declare-fun bm!11730 () Bool)

(declare-fun c!19486 () Bool)

(assert (=> bm!11730 (= call!11733 (inRange!0 (ite c!19486 (index!3206 lt!56645) (index!3209 lt!56645)) (mask!6793 newMap!16)))))

(declare-fun b!110052 () Bool)

(declare-fun e!71591 () Bool)

(declare-fun e!71589 () Bool)

(assert (=> b!110052 (= e!71591 e!71589)))

(declare-fun c!19487 () Bool)

(assert (=> b!110052 (= c!19487 ((_ is MissingVacant!264) lt!56645))))

(declare-fun d!30819 () Bool)

(assert (=> d!30819 e!71591))

(assert (=> d!30819 (= c!19486 ((_ is MissingZero!264) lt!56645))))

(assert (=> d!30819 (= lt!56645 (seekEntryOrOpen!0 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (_keys!4339 newMap!16) (mask!6793 newMap!16)))))

(declare-fun lt!56646 () Unit!3390)

(declare-fun choose!692 (array!4365 array!4367 (_ BitVec 32) (_ BitVec 32) V!3241 V!3241 (_ BitVec 64) Int) Unit!3390)

(assert (=> d!30819 (= lt!56646 (choose!692 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (defaultEntry!2626 newMap!16)))))

(assert (=> d!30819 (validMask!0 (mask!6793 newMap!16))))

(assert (=> d!30819 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!49 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (defaultEntry!2626 newMap!16)) lt!56646)))

(declare-fun b!110053 () Bool)

(assert (=> b!110053 (= e!71589 ((_ is Undefined!264) lt!56645))))

(declare-fun bm!11731 () Bool)

(assert (=> bm!11731 (= call!11734 (arrayContainsKey!0 (_keys!4339 newMap!16) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!110054 () Bool)

(assert (=> b!110054 (= e!71591 e!71592)))

(declare-fun res!54428 () Bool)

(assert (=> b!110054 (= res!54428 call!11733)))

(assert (=> b!110054 (=> (not res!54428) (not e!71592))))

(declare-fun b!110055 () Bool)

(assert (=> b!110055 (= e!71590 (not call!11734))))

(declare-fun b!110056 () Bool)

(declare-fun res!54426 () Bool)

(assert (=> b!110056 (=> (not res!54426) (not e!71590))))

(assert (=> b!110056 (= res!54426 call!11733)))

(assert (=> b!110056 (= e!71589 e!71590)))

(assert (= (and d!30819 c!19486) b!110054))

(assert (= (and d!30819 (not c!19486)) b!110052))

(assert (= (and b!110054 res!54428) b!110050))

(assert (= (and b!110050 res!54427) b!110051))

(assert (= (and b!110052 c!19487) b!110056))

(assert (= (and b!110052 (not c!19487)) b!110053))

(assert (= (and b!110056 res!54426) b!110049))

(assert (= (and b!110049 res!54429) b!110055))

(assert (= (or b!110054 b!110056) bm!11730))

(assert (= (or b!110051 b!110055) bm!11731))

(assert (=> bm!11731 m!123865))

(assert (=> bm!11731 m!124165))

(declare-fun m!124379 () Bool)

(assert (=> b!110049 m!124379))

(declare-fun m!124381 () Bool)

(assert (=> b!110050 m!124381))

(declare-fun m!124383 () Bool)

(assert (=> bm!11730 m!124383))

(assert (=> d!30819 m!123865))

(assert (=> d!30819 m!124149))

(assert (=> d!30819 m!123865))

(declare-fun m!124385 () Bool)

(assert (=> d!30819 m!124385))

(assert (=> d!30819 m!124269))

(assert (=> bm!11682 d!30819))

(declare-fun d!30821 () Bool)

(assert (=> d!30821 (= (validKeyInArray!0 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!109920 d!30821))

(declare-fun d!30823 () Bool)

(assert (=> d!30823 (= (+!139 (getCurrentListMap!469 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306)) (getCurrentListMap!469 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) lt!56514 lt!56306 (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!56649 () Unit!3390)

(declare-fun choose!693 (array!4365 array!4367 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3241 V!3241 V!3241 Int) Unit!3390)

(assert (=> d!30823 (= lt!56649 (choose!693 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) lt!56514 (zeroValue!2497 newMap!16) lt!56306 (minValue!2497 newMap!16) (defaultEntry!2626 newMap!16)))))

(assert (=> d!30823 (validMask!0 (mask!6793 newMap!16))))

(assert (=> d!30823 (= (lemmaChangeZeroKeyThenAddPairToListMap!49 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) lt!56514 (zeroValue!2497 newMap!16) lt!56306 (minValue!2497 newMap!16) (defaultEntry!2626 newMap!16)) lt!56649)))

(declare-fun bs!4516 () Bool)

(assert (= bs!4516 d!30823))

(declare-fun m!124387 () Bool)

(assert (=> bs!4516 m!124387))

(assert (=> bs!4516 m!124133))

(declare-fun m!124389 () Bool)

(assert (=> bs!4516 m!124389))

(assert (=> bs!4516 m!124269))

(assert (=> bs!4516 m!124133))

(declare-fun m!124391 () Bool)

(assert (=> bs!4516 m!124391))

(assert (=> b!109813 d!30823))

(declare-fun d!30825 () Bool)

(declare-fun res!54430 () Bool)

(declare-fun e!71593 () Bool)

(assert (=> d!30825 (=> (not res!54430) (not e!71593))))

(assert (=> d!30825 (= res!54430 (simpleValid!76 (v!2920 (underlying!363 thiss!992))))))

(assert (=> d!30825 (= (valid!430 (v!2920 (underlying!363 thiss!992))) e!71593)))

(declare-fun b!110057 () Bool)

(declare-fun res!54431 () Bool)

(assert (=> b!110057 (=> (not res!54431) (not e!71593))))

(assert (=> b!110057 (= res!54431 (= (arrayCountValidKeys!0 (_keys!4339 (v!2920 (underlying!363 thiss!992))) #b00000000000000000000000000000000 (size!2326 (_keys!4339 (v!2920 (underlying!363 thiss!992))))) (_size!507 (v!2920 (underlying!363 thiss!992)))))))

(declare-fun b!110058 () Bool)

(declare-fun res!54432 () Bool)

(assert (=> b!110058 (=> (not res!54432) (not e!71593))))

(assert (=> b!110058 (= res!54432 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4339 (v!2920 (underlying!363 thiss!992))) (mask!6793 (v!2920 (underlying!363 thiss!992)))))))

(declare-fun b!110059 () Bool)

(assert (=> b!110059 (= e!71593 (arrayNoDuplicates!0 (_keys!4339 (v!2920 (underlying!363 thiss!992))) #b00000000000000000000000000000000 Nil!1623))))

(assert (= (and d!30825 res!54430) b!110057))

(assert (= (and b!110057 res!54431) b!110058))

(assert (= (and b!110058 res!54432) b!110059))

(declare-fun m!124393 () Bool)

(assert (=> d!30825 m!124393))

(declare-fun m!124395 () Bool)

(assert (=> b!110057 m!124395))

(declare-fun m!124397 () Bool)

(assert (=> b!110058 m!124397))

(declare-fun m!124399 () Bool)

(assert (=> b!110059 m!124399))

(assert (=> d!30781 d!30825))

(declare-fun d!30827 () Bool)

(declare-fun res!54433 () Bool)

(declare-fun e!71594 () Bool)

(assert (=> d!30827 (=> (not res!54433) (not e!71594))))

(assert (=> d!30827 (= res!54433 (simpleValid!76 (_2!1210 lt!56499)))))

(assert (=> d!30827 (= (valid!430 (_2!1210 lt!56499)) e!71594)))

(declare-fun b!110060 () Bool)

(declare-fun res!54434 () Bool)

(assert (=> b!110060 (=> (not res!54434) (not e!71594))))

(assert (=> b!110060 (= res!54434 (= (arrayCountValidKeys!0 (_keys!4339 (_2!1210 lt!56499)) #b00000000000000000000000000000000 (size!2326 (_keys!4339 (_2!1210 lt!56499)))) (_size!507 (_2!1210 lt!56499))))))

(declare-fun b!110061 () Bool)

(declare-fun res!54435 () Bool)

(assert (=> b!110061 (=> (not res!54435) (not e!71594))))

(assert (=> b!110061 (= res!54435 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4339 (_2!1210 lt!56499)) (mask!6793 (_2!1210 lt!56499))))))

(declare-fun b!110062 () Bool)

(assert (=> b!110062 (= e!71594 (arrayNoDuplicates!0 (_keys!4339 (_2!1210 lt!56499)) #b00000000000000000000000000000000 Nil!1623))))

(assert (= (and d!30827 res!54433) b!110060))

(assert (= (and b!110060 res!54434) b!110061))

(assert (= (and b!110061 res!54435) b!110062))

(declare-fun m!124401 () Bool)

(assert (=> d!30827 m!124401))

(declare-fun m!124403 () Bool)

(assert (=> b!110060 m!124403))

(declare-fun m!124405 () Bool)

(assert (=> b!110061 m!124405))

(declare-fun m!124407 () Bool)

(assert (=> b!110062 m!124407))

(assert (=> d!30761 d!30827))

(assert (=> d!30761 d!30763))

(assert (=> bm!11715 d!30757))

(assert (=> d!30779 d!30749))

(assert (=> b!109850 d!30771))

(declare-fun d!30829 () Bool)

(declare-fun e!71596 () Bool)

(assert (=> d!30829 e!71596))

(declare-fun res!54436 () Bool)

(assert (=> d!30829 (=> res!54436 e!71596)))

(declare-fun lt!56650 () Bool)

(assert (=> d!30829 (= res!54436 (not lt!56650))))

(declare-fun lt!56651 () Bool)

(assert (=> d!30829 (= lt!56650 lt!56651)))

(declare-fun lt!56652 () Unit!3390)

(declare-fun e!71595 () Unit!3390)

(assert (=> d!30829 (= lt!56652 e!71595)))

(declare-fun c!19488 () Bool)

(assert (=> d!30829 (= c!19488 lt!56651)))

(assert (=> d!30829 (= lt!56651 (containsKey!160 (toList!792 lt!56589) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!30829 (= (contains!827 lt!56589 #b1000000000000000000000000000000000000000000000000000000000000000) lt!56650)))

(declare-fun b!110063 () Bool)

(declare-fun lt!56653 () Unit!3390)

(assert (=> b!110063 (= e!71595 lt!56653)))

(assert (=> b!110063 (= lt!56653 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 lt!56589) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!110063 (isDefined!110 (getValueByKey!156 (toList!792 lt!56589) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110064 () Bool)

(declare-fun Unit!3402 () Unit!3390)

(assert (=> b!110064 (= e!71595 Unit!3402)))

(declare-fun b!110065 () Bool)

(assert (=> b!110065 (= e!71596 (isDefined!110 (getValueByKey!156 (toList!792 lt!56589) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30829 c!19488) b!110063))

(assert (= (and d!30829 (not c!19488)) b!110064))

(assert (= (and d!30829 (not res!54436)) b!110065))

(declare-fun m!124409 () Bool)

(assert (=> d!30829 m!124409))

(declare-fun m!124411 () Bool)

(assert (=> b!110063 m!124411))

(declare-fun m!124413 () Bool)

(assert (=> b!110063 m!124413))

(assert (=> b!110063 m!124413))

(declare-fun m!124415 () Bool)

(assert (=> b!110063 m!124415))

(assert (=> b!110065 m!124413))

(assert (=> b!110065 m!124413))

(assert (=> b!110065 m!124415))

(assert (=> bm!11713 d!30829))

(declare-fun d!30831 () Bool)

(declare-fun e!71598 () Bool)

(assert (=> d!30831 e!71598))

(declare-fun res!54437 () Bool)

(assert (=> d!30831 (=> res!54437 e!71598)))

(declare-fun lt!56654 () Bool)

(assert (=> d!30831 (= res!54437 (not lt!56654))))

(declare-fun lt!56655 () Bool)

(assert (=> d!30831 (= lt!56654 lt!56655)))

(declare-fun lt!56656 () Unit!3390)

(declare-fun e!71597 () Unit!3390)

(assert (=> d!30831 (= lt!56656 e!71597)))

(declare-fun c!19489 () Bool)

(assert (=> d!30831 (= c!19489 lt!56655)))

(assert (=> d!30831 (= lt!56655 (containsKey!160 (toList!792 call!11694) (select (arr!2068 (_keys!4339 newMap!16)) (index!3207 lt!56493))))))

(assert (=> d!30831 (= (contains!827 call!11694 (select (arr!2068 (_keys!4339 newMap!16)) (index!3207 lt!56493))) lt!56654)))

(declare-fun b!110066 () Bool)

(declare-fun lt!56657 () Unit!3390)

(assert (=> b!110066 (= e!71597 lt!56657)))

(assert (=> b!110066 (= lt!56657 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 call!11694) (select (arr!2068 (_keys!4339 newMap!16)) (index!3207 lt!56493))))))

(assert (=> b!110066 (isDefined!110 (getValueByKey!156 (toList!792 call!11694) (select (arr!2068 (_keys!4339 newMap!16)) (index!3207 lt!56493))))))

(declare-fun b!110067 () Bool)

(declare-fun Unit!3403 () Unit!3390)

(assert (=> b!110067 (= e!71597 Unit!3403)))

(declare-fun b!110068 () Bool)

(assert (=> b!110068 (= e!71598 (isDefined!110 (getValueByKey!156 (toList!792 call!11694) (select (arr!2068 (_keys!4339 newMap!16)) (index!3207 lt!56493)))))))

(assert (= (and d!30831 c!19489) b!110066))

(assert (= (and d!30831 (not c!19489)) b!110067))

(assert (= (and d!30831 (not res!54437)) b!110068))

(assert (=> d!30831 m!124141))

(declare-fun m!124417 () Bool)

(assert (=> d!30831 m!124417))

(assert (=> b!110066 m!124141))

(declare-fun m!124419 () Bool)

(assert (=> b!110066 m!124419))

(assert (=> b!110066 m!124141))

(declare-fun m!124421 () Bool)

(assert (=> b!110066 m!124421))

(assert (=> b!110066 m!124421))

(declare-fun m!124423 () Bool)

(assert (=> b!110066 m!124423))

(assert (=> b!110068 m!124141))

(assert (=> b!110068 m!124421))

(assert (=> b!110068 m!124421))

(assert (=> b!110068 m!124423))

(assert (=> b!109784 d!30831))

(declare-fun d!30833 () Bool)

(declare-fun e!71601 () Bool)

(assert (=> d!30833 e!71601))

(declare-fun res!54440 () Bool)

(assert (=> d!30833 (=> (not res!54440) (not e!71601))))

(assert (=> d!30833 (= res!54440 (and (bvsge (index!3207 lt!56493) #b00000000000000000000000000000000) (bvslt (index!3207 lt!56493) (size!2326 (_keys!4339 newMap!16)))))))

(declare-fun lt!56660 () Unit!3390)

(declare-fun choose!694 (array!4365 array!4367 (_ BitVec 32) (_ BitVec 32) V!3241 V!3241 (_ BitVec 32) Int) Unit!3390)

(assert (=> d!30833 (= lt!56660 (choose!694 (_keys!4339 newMap!16) lt!56515 (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (index!3207 lt!56493) (defaultEntry!2626 newMap!16)))))

(assert (=> d!30833 (validMask!0 (mask!6793 newMap!16))))

(assert (=> d!30833 (= (lemmaValidKeyInArrayIsInListMap!108 (_keys!4339 newMap!16) lt!56515 (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (index!3207 lt!56493) (defaultEntry!2626 newMap!16)) lt!56660)))

(declare-fun b!110071 () Bool)

(assert (=> b!110071 (= e!71601 (contains!827 (getCurrentListMap!469 (_keys!4339 newMap!16) lt!56515 (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) (select (arr!2068 (_keys!4339 newMap!16)) (index!3207 lt!56493))))))

(assert (= (and d!30833 res!54440) b!110071))

(declare-fun m!124425 () Bool)

(assert (=> d!30833 m!124425))

(assert (=> d!30833 m!124269))

(declare-fun m!124427 () Bool)

(assert (=> b!110071 m!124427))

(assert (=> b!110071 m!124141))

(assert (=> b!110071 m!124427))

(assert (=> b!110071 m!124141))

(declare-fun m!124429 () Bool)

(assert (=> b!110071 m!124429))

(assert (=> b!109784 d!30833))

(declare-fun d!30835 () Bool)

(declare-fun e!71604 () Bool)

(assert (=> d!30835 e!71604))

(declare-fun res!54443 () Bool)

(assert (=> d!30835 (=> (not res!54443) (not e!71604))))

(assert (=> d!30835 (= res!54443 (and (bvsge (index!3207 lt!56493) #b00000000000000000000000000000000) (bvslt (index!3207 lt!56493) (size!2327 (_values!2609 newMap!16)))))))

(declare-fun lt!56663 () Unit!3390)

(declare-fun choose!695 (array!4365 array!4367 (_ BitVec 32) (_ BitVec 32) V!3241 V!3241 (_ BitVec 32) (_ BitVec 64) V!3241 Int) Unit!3390)

(assert (=> d!30835 (= lt!56663 (choose!695 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (index!3207 lt!56493) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306 (defaultEntry!2626 newMap!16)))))

(assert (=> d!30835 (validMask!0 (mask!6793 newMap!16))))

(assert (=> d!30835 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!49 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (index!3207 lt!56493) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306 (defaultEntry!2626 newMap!16)) lt!56663)))

(declare-fun b!110074 () Bool)

(assert (=> b!110074 (= e!71604 (= (+!139 (getCurrentListMap!469 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)) (getCurrentListMap!469 (_keys!4339 newMap!16) (array!4368 (store (arr!2069 (_values!2609 newMap!16)) (index!3207 lt!56493) (ValueCellFull!1004 lt!56306)) (size!2327 (_values!2609 newMap!16))) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16))))))

(assert (= (and d!30835 res!54443) b!110074))

(assert (=> d!30835 m!123865))

(declare-fun m!124431 () Bool)

(assert (=> d!30835 m!124431))

(assert (=> d!30835 m!124269))

(assert (=> b!110074 m!124133))

(assert (=> b!110074 m!124133))

(declare-fun m!124433 () Bool)

(assert (=> b!110074 m!124433))

(assert (=> b!110074 m!124137))

(declare-fun m!124435 () Bool)

(assert (=> b!110074 m!124435))

(assert (=> b!109784 d!30835))

(assert (=> b!109686 d!30821))

(declare-fun d!30837 () Bool)

(declare-fun e!71606 () Bool)

(assert (=> d!30837 e!71606))

(declare-fun res!54444 () Bool)

(assert (=> d!30837 (=> res!54444 e!71606)))

(declare-fun lt!56664 () Bool)

(assert (=> d!30837 (= res!54444 (not lt!56664))))

(declare-fun lt!56665 () Bool)

(assert (=> d!30837 (= lt!56664 lt!56665)))

(declare-fun lt!56666 () Unit!3390)

(declare-fun e!71605 () Unit!3390)

(assert (=> d!30837 (= lt!56666 e!71605)))

(declare-fun c!19490 () Bool)

(assert (=> d!30837 (= c!19490 lt!56665)))

(assert (=> d!30837 (= lt!56665 (containsKey!160 (toList!792 lt!56589) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!30837 (= (contains!827 lt!56589 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!56664)))

(declare-fun b!110075 () Bool)

(declare-fun lt!56667 () Unit!3390)

(assert (=> b!110075 (= e!71605 lt!56667)))

(assert (=> b!110075 (= lt!56667 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 lt!56589) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!110075 (isDefined!110 (getValueByKey!156 (toList!792 lt!56589) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!110076 () Bool)

(declare-fun Unit!3404 () Unit!3390)

(assert (=> b!110076 (= e!71605 Unit!3404)))

(declare-fun b!110077 () Bool)

(assert (=> b!110077 (= e!71606 (isDefined!110 (getValueByKey!156 (toList!792 lt!56589) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!30837 c!19490) b!110075))

(assert (= (and d!30837 (not c!19490)) b!110076))

(assert (= (and d!30837 (not res!54444)) b!110077))

(assert (=> d!30837 m!124087))

(declare-fun m!124437 () Bool)

(assert (=> d!30837 m!124437))

(assert (=> b!110075 m!124087))

(declare-fun m!124439 () Bool)

(assert (=> b!110075 m!124439))

(assert (=> b!110075 m!124087))

(declare-fun m!124441 () Bool)

(assert (=> b!110075 m!124441))

(assert (=> b!110075 m!124441))

(declare-fun m!124443 () Bool)

(assert (=> b!110075 m!124443))

(assert (=> b!110077 m!124087))

(assert (=> b!110077 m!124441))

(assert (=> b!110077 m!124441))

(assert (=> b!110077 m!124443))

(assert (=> b!109918 d!30837))

(declare-fun b!110078 () Bool)

(declare-fun e!71607 () Bool)

(assert (=> b!110078 (= e!71607 (validKeyInArray!0 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!110079 () Bool)

(declare-fun e!71616 () Bool)

(declare-fun e!71608 () Bool)

(assert (=> b!110079 (= e!71616 e!71608)))

(declare-fun res!54450 () Bool)

(declare-fun call!11739 () Bool)

(assert (=> b!110079 (= res!54450 call!11739)))

(assert (=> b!110079 (=> (not res!54450) (not e!71608))))

(declare-fun b!110080 () Bool)

(declare-fun lt!56684 () ListLongMap!1553)

(assert (=> b!110080 (= e!71608 (= (apply!100 lt!56684 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2497 newMap!16)))))

(declare-fun b!110081 () Bool)

(assert (=> b!110081 (= e!71616 (not call!11739))))

(declare-fun d!30839 () Bool)

(declare-fun e!71618 () Bool)

(assert (=> d!30839 e!71618))

(declare-fun res!54447 () Bool)

(assert (=> d!30839 (=> (not res!54447) (not e!71618))))

(assert (=> d!30839 (= res!54447 (or (bvsge #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))))))))

(declare-fun lt!56686 () ListLongMap!1553)

(assert (=> d!30839 (= lt!56684 lt!56686)))

(declare-fun lt!56670 () Unit!3390)

(declare-fun e!71613 () Unit!3390)

(assert (=> d!30839 (= lt!56670 e!71613)))

(declare-fun c!19492 () Bool)

(declare-fun e!71614 () Bool)

(assert (=> d!30839 (= c!19492 e!71614)))

(declare-fun res!54449 () Bool)

(assert (=> d!30839 (=> (not res!54449) (not e!71614))))

(assert (=> d!30839 (= res!54449 (bvslt #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))))))

(declare-fun e!71619 () ListLongMap!1553)

(assert (=> d!30839 (= lt!56686 e!71619)))

(declare-fun c!19491 () Bool)

(assert (=> d!30839 (= c!19491 (and (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!30839 (validMask!0 (mask!6793 newMap!16))))

(assert (=> d!30839 (= (getCurrentListMap!469 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) lt!56684)))

(declare-fun b!110082 () Bool)

(assert (=> b!110082 (= e!71618 e!71616)))

(declare-fun c!19496 () Bool)

(assert (=> b!110082 (= c!19496 (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!110083 () Bool)

(declare-fun e!71615 () ListLongMap!1553)

(assert (=> b!110083 (= e!71619 e!71615)))

(declare-fun c!19494 () Bool)

(assert (=> b!110083 (= c!19494 (and (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11732 () Bool)

(declare-fun call!11737 () ListLongMap!1553)

(declare-fun call!11736 () ListLongMap!1553)

(assert (=> bm!11732 (= call!11737 call!11736)))

(declare-fun bm!11733 () Bool)

(declare-fun call!11735 () ListLongMap!1553)

(assert (=> bm!11733 (= call!11736 call!11735)))

(declare-fun b!110084 () Bool)

(declare-fun res!54453 () Bool)

(assert (=> b!110084 (=> (not res!54453) (not e!71618))))

(declare-fun e!71612 () Bool)

(assert (=> b!110084 (= res!54453 e!71612)))

(declare-fun res!54452 () Bool)

(assert (=> b!110084 (=> res!54452 e!71612)))

(assert (=> b!110084 (= res!54452 (not e!71607))))

(declare-fun res!54448 () Bool)

(assert (=> b!110084 (=> (not res!54448) (not e!71607))))

(assert (=> b!110084 (= res!54448 (bvslt #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))))))

(declare-fun b!110085 () Bool)

(declare-fun e!71610 () Bool)

(declare-fun e!71609 () Bool)

(assert (=> b!110085 (= e!71610 e!71609)))

(declare-fun res!54445 () Bool)

(declare-fun call!11741 () Bool)

(assert (=> b!110085 (= res!54445 call!11741)))

(assert (=> b!110085 (=> (not res!54445) (not e!71609))))

(declare-fun bm!11734 () Bool)

(declare-fun call!11738 () ListLongMap!1553)

(declare-fun call!11740 () ListLongMap!1553)

(assert (=> bm!11734 (= call!11738 call!11740)))

(declare-fun b!110086 () Bool)

(assert (=> b!110086 (= e!71610 (not call!11741))))

(declare-fun b!110087 () Bool)

(declare-fun e!71611 () Bool)

(assert (=> b!110087 (= e!71612 e!71611)))

(declare-fun res!54446 () Bool)

(assert (=> b!110087 (=> (not res!54446) (not e!71611))))

(assert (=> b!110087 (= res!54446 (contains!827 lt!56684 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!110087 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))))))

(declare-fun b!110088 () Bool)

(assert (=> b!110088 (= e!71611 (= (apply!100 lt!56684 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)) (get!1347 (select (arr!2069 (_values!2609 newMap!16)) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2626 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!110088 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2327 (_values!2609 newMap!16))))))

(assert (=> b!110088 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))))))

(declare-fun bm!11735 () Bool)

(assert (=> bm!11735 (= call!11739 (contains!827 lt!56684 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!11736 () Bool)

(assert (=> bm!11736 (= call!11741 (contains!827 lt!56684 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110089 () Bool)

(assert (=> b!110089 (= e!71614 (validKeyInArray!0 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!110090 () Bool)

(declare-fun res!54451 () Bool)

(assert (=> b!110090 (=> (not res!54451) (not e!71618))))

(assert (=> b!110090 (= res!54451 e!71610)))

(declare-fun c!19495 () Bool)

(assert (=> b!110090 (= c!19495 (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!11737 () Bool)

(assert (=> bm!11737 (= call!11735 (getCurrentListMapNoExtraKeys!104 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun b!110091 () Bool)

(declare-fun e!71617 () ListLongMap!1553)

(assert (=> b!110091 (= e!71617 call!11737)))

(declare-fun b!110092 () Bool)

(assert (=> b!110092 (= e!71619 (+!139 call!11740 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16))))))

(declare-fun b!110093 () Bool)

(assert (=> b!110093 (= e!71615 call!11738)))

(declare-fun b!110094 () Bool)

(declare-fun Unit!3405 () Unit!3390)

(assert (=> b!110094 (= e!71613 Unit!3405)))

(declare-fun b!110095 () Bool)

(declare-fun lt!56677 () Unit!3390)

(assert (=> b!110095 (= e!71613 lt!56677)))

(declare-fun lt!56672 () ListLongMap!1553)

(assert (=> b!110095 (= lt!56672 (getCurrentListMapNoExtraKeys!104 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!56685 () (_ BitVec 64))

(assert (=> b!110095 (= lt!56685 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56669 () (_ BitVec 64))

(assert (=> b!110095 (= lt!56669 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56689 () Unit!3390)

(assert (=> b!110095 (= lt!56689 (addStillContains!76 lt!56672 lt!56685 (zeroValue!2497 newMap!16) lt!56669))))

(assert (=> b!110095 (contains!827 (+!139 lt!56672 (tuple2!2397 lt!56685 (zeroValue!2497 newMap!16))) lt!56669)))

(declare-fun lt!56683 () Unit!3390)

(assert (=> b!110095 (= lt!56683 lt!56689)))

(declare-fun lt!56671 () ListLongMap!1553)

(assert (=> b!110095 (= lt!56671 (getCurrentListMapNoExtraKeys!104 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!56682 () (_ BitVec 64))

(assert (=> b!110095 (= lt!56682 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56675 () (_ BitVec 64))

(assert (=> b!110095 (= lt!56675 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56681 () Unit!3390)

(assert (=> b!110095 (= lt!56681 (addApplyDifferent!76 lt!56671 lt!56682 (minValue!2497 newMap!16) lt!56675))))

(assert (=> b!110095 (= (apply!100 (+!139 lt!56671 (tuple2!2397 lt!56682 (minValue!2497 newMap!16))) lt!56675) (apply!100 lt!56671 lt!56675))))

(declare-fun lt!56668 () Unit!3390)

(assert (=> b!110095 (= lt!56668 lt!56681)))

(declare-fun lt!56687 () ListLongMap!1553)

(assert (=> b!110095 (= lt!56687 (getCurrentListMapNoExtraKeys!104 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!56678 () (_ BitVec 64))

(assert (=> b!110095 (= lt!56678 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56673 () (_ BitVec 64))

(assert (=> b!110095 (= lt!56673 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56679 () Unit!3390)

(assert (=> b!110095 (= lt!56679 (addApplyDifferent!76 lt!56687 lt!56678 (zeroValue!2497 newMap!16) lt!56673))))

(assert (=> b!110095 (= (apply!100 (+!139 lt!56687 (tuple2!2397 lt!56678 (zeroValue!2497 newMap!16))) lt!56673) (apply!100 lt!56687 lt!56673))))

(declare-fun lt!56688 () Unit!3390)

(assert (=> b!110095 (= lt!56688 lt!56679)))

(declare-fun lt!56676 () ListLongMap!1553)

(assert (=> b!110095 (= lt!56676 (getCurrentListMapNoExtraKeys!104 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!56674 () (_ BitVec 64))

(assert (=> b!110095 (= lt!56674 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56680 () (_ BitVec 64))

(assert (=> b!110095 (= lt!56680 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!110095 (= lt!56677 (addApplyDifferent!76 lt!56676 lt!56674 (minValue!2497 newMap!16) lt!56680))))

(assert (=> b!110095 (= (apply!100 (+!139 lt!56676 (tuple2!2397 lt!56674 (minValue!2497 newMap!16))) lt!56680) (apply!100 lt!56676 lt!56680))))

(declare-fun b!110096 () Bool)

(declare-fun c!19493 () Bool)

(assert (=> b!110096 (= c!19493 (and (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!110096 (= e!71615 e!71617)))

(declare-fun b!110097 () Bool)

(assert (=> b!110097 (= e!71609 (= (apply!100 lt!56684 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2497 newMap!16)))))

(declare-fun b!110098 () Bool)

(assert (=> b!110098 (= e!71617 call!11738)))

(declare-fun bm!11738 () Bool)

(assert (=> bm!11738 (= call!11740 (+!139 (ite c!19491 call!11735 (ite c!19494 call!11736 call!11737)) (ite (or c!19491 c!19494) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 newMap!16)) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16)))))))

(assert (= (and d!30839 c!19491) b!110092))

(assert (= (and d!30839 (not c!19491)) b!110083))

(assert (= (and b!110083 c!19494) b!110093))

(assert (= (and b!110083 (not c!19494)) b!110096))

(assert (= (and b!110096 c!19493) b!110098))

(assert (= (and b!110096 (not c!19493)) b!110091))

(assert (= (or b!110098 b!110091) bm!11732))

(assert (= (or b!110093 bm!11732) bm!11733))

(assert (= (or b!110093 b!110098) bm!11734))

(assert (= (or b!110092 bm!11733) bm!11737))

(assert (= (or b!110092 bm!11734) bm!11738))

(assert (= (and d!30839 res!54449) b!110089))

(assert (= (and d!30839 c!19492) b!110095))

(assert (= (and d!30839 (not c!19492)) b!110094))

(assert (= (and d!30839 res!54447) b!110084))

(assert (= (and b!110084 res!54448) b!110078))

(assert (= (and b!110084 (not res!54452)) b!110087))

(assert (= (and b!110087 res!54446) b!110088))

(assert (= (and b!110084 res!54453) b!110090))

(assert (= (and b!110090 c!19495) b!110085))

(assert (= (and b!110090 (not c!19495)) b!110086))

(assert (= (and b!110085 res!54445) b!110097))

(assert (= (or b!110085 b!110086) bm!11736))

(assert (= (and b!110090 res!54451) b!110082))

(assert (= (and b!110082 c!19496) b!110079))

(assert (= (and b!110082 (not c!19496)) b!110081))

(assert (= (and b!110079 res!54450) b!110080))

(assert (= (or b!110079 b!110081) bm!11735))

(declare-fun b_lambda!4921 () Bool)

(assert (=> (not b_lambda!4921) (not b!110088)))

(declare-fun t!5766 () Bool)

(declare-fun tb!2105 () Bool)

(assert (=> (and b!109508 (= (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) (defaultEntry!2626 newMap!16)) t!5766) tb!2105))

(declare-fun result!3533 () Bool)

(assert (=> tb!2105 (= result!3533 tp_is_empty!2695)))

(assert (=> b!110088 t!5766))

(declare-fun b_and!6769 () Bool)

(assert (= b_and!6765 (and (=> t!5766 result!3533) b_and!6769)))

(declare-fun t!5768 () Bool)

(declare-fun tb!2107 () Bool)

(assert (=> (and b!109512 (= (defaultEntry!2626 newMap!16) (defaultEntry!2626 newMap!16)) t!5768) tb!2107))

(declare-fun result!3535 () Bool)

(assert (= result!3535 result!3533))

(assert (=> b!110088 t!5768))

(declare-fun b_and!6771 () Bool)

(assert (= b_and!6767 (and (=> t!5768 result!3535) b_and!6771)))

(declare-fun m!124445 () Bool)

(assert (=> b!110088 m!124445))

(declare-fun m!124447 () Bool)

(assert (=> b!110088 m!124447))

(declare-fun m!124449 () Bool)

(assert (=> b!110088 m!124449))

(declare-fun m!124451 () Bool)

(assert (=> b!110088 m!124451))

(assert (=> b!110088 m!124447))

(assert (=> b!110088 m!124445))

(assert (=> b!110088 m!124451))

(declare-fun m!124453 () Bool)

(assert (=> b!110088 m!124453))

(assert (=> b!110087 m!124447))

(assert (=> b!110087 m!124447))

(declare-fun m!124455 () Bool)

(assert (=> b!110087 m!124455))

(assert (=> d!30839 m!124269))

(declare-fun m!124457 () Bool)

(assert (=> bm!11738 m!124457))

(declare-fun m!124459 () Bool)

(assert (=> b!110080 m!124459))

(declare-fun m!124461 () Bool)

(assert (=> bm!11737 m!124461))

(assert (=> b!110089 m!124447))

(assert (=> b!110089 m!124447))

(declare-fun m!124463 () Bool)

(assert (=> b!110089 m!124463))

(assert (=> b!110078 m!124447))

(assert (=> b!110078 m!124447))

(assert (=> b!110078 m!124463))

(declare-fun m!124465 () Bool)

(assert (=> b!110097 m!124465))

(declare-fun m!124467 () Bool)

(assert (=> b!110095 m!124467))

(declare-fun m!124469 () Bool)

(assert (=> b!110095 m!124469))

(declare-fun m!124471 () Bool)

(assert (=> b!110095 m!124471))

(declare-fun m!124473 () Bool)

(assert (=> b!110095 m!124473))

(declare-fun m!124475 () Bool)

(assert (=> b!110095 m!124475))

(declare-fun m!124477 () Bool)

(assert (=> b!110095 m!124477))

(assert (=> b!110095 m!124467))

(declare-fun m!124479 () Bool)

(assert (=> b!110095 m!124479))

(declare-fun m!124481 () Bool)

(assert (=> b!110095 m!124481))

(assert (=> b!110095 m!124461))

(declare-fun m!124483 () Bool)

(assert (=> b!110095 m!124483))

(declare-fun m!124485 () Bool)

(assert (=> b!110095 m!124485))

(declare-fun m!124487 () Bool)

(assert (=> b!110095 m!124487))

(declare-fun m!124489 () Bool)

(assert (=> b!110095 m!124489))

(declare-fun m!124491 () Bool)

(assert (=> b!110095 m!124491))

(declare-fun m!124493 () Bool)

(assert (=> b!110095 m!124493))

(assert (=> b!110095 m!124483))

(assert (=> b!110095 m!124447))

(assert (=> b!110095 m!124471))

(declare-fun m!124495 () Bool)

(assert (=> b!110095 m!124495))

(assert (=> b!110095 m!124475))

(declare-fun m!124497 () Bool)

(assert (=> bm!11736 m!124497))

(declare-fun m!124499 () Bool)

(assert (=> b!110092 m!124499))

(declare-fun m!124501 () Bool)

(assert (=> bm!11735 m!124501))

(assert (=> d!30777 d!30839))

(assert (=> d!30769 d!30775))

(declare-fun d!30841 () Bool)

(assert (=> d!30841 (arrayNoDuplicates!0 (_keys!4339 (v!2920 (underlying!363 thiss!992))) from!355 Nil!1623)))

(assert (=> d!30841 true))

(declare-fun _$71!153 () Unit!3390)

(assert (=> d!30841 (= (choose!39 (_keys!4339 (v!2920 (underlying!363 thiss!992))) #b00000000000000000000000000000000 from!355) _$71!153)))

(declare-fun bs!4517 () Bool)

(assert (= bs!4517 d!30841))

(assert (=> bs!4517 m!123885))

(assert (=> d!30769 d!30841))

(declare-fun b!110099 () Bool)

(declare-fun e!71620 () Bool)

(assert (=> b!110099 (= e!71620 (validKeyInArray!0 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!110100 () Bool)

(declare-fun e!71629 () Bool)

(declare-fun e!71621 () Bool)

(assert (=> b!110100 (= e!71629 e!71621)))

(declare-fun res!54459 () Bool)

(declare-fun call!11746 () Bool)

(assert (=> b!110100 (= res!54459 call!11746)))

(assert (=> b!110100 (=> (not res!54459) (not e!71621))))

(declare-fun b!110101 () Bool)

(declare-fun lt!56706 () ListLongMap!1553)

(assert (=> b!110101 (= e!71621 (= (apply!100 lt!56706 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16))))))

(declare-fun b!110102 () Bool)

(assert (=> b!110102 (= e!71629 (not call!11746))))

(declare-fun d!30843 () Bool)

(declare-fun e!71631 () Bool)

(assert (=> d!30843 e!71631))

(declare-fun res!54456 () Bool)

(assert (=> d!30843 (=> (not res!54456) (not e!71631))))

(assert (=> d!30843 (= res!54456 (or (bvsge #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))))))))

(declare-fun lt!56708 () ListLongMap!1553)

(assert (=> d!30843 (= lt!56706 lt!56708)))

(declare-fun lt!56692 () Unit!3390)

(declare-fun e!71626 () Unit!3390)

(assert (=> d!30843 (= lt!56692 e!71626)))

(declare-fun c!19498 () Bool)

(declare-fun e!71627 () Bool)

(assert (=> d!30843 (= c!19498 e!71627)))

(declare-fun res!54458 () Bool)

(assert (=> d!30843 (=> (not res!54458) (not e!71627))))

(assert (=> d!30843 (= res!54458 (bvslt #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))))))

(declare-fun e!71632 () ListLongMap!1553)

(assert (=> d!30843 (= lt!56708 e!71632)))

(declare-fun c!19497 () Bool)

(assert (=> d!30843 (= c!19497 (and (not (= (bvand (ite c!19423 (ite c!19416 lt!56514 lt!56506) (extraKeys!2423 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!19423 (ite c!19416 lt!56514 lt!56506) (extraKeys!2423 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!30843 (validMask!0 (mask!6793 newMap!16))))

(assert (=> d!30843 (= (getCurrentListMap!469 (_keys!4339 newMap!16) (ite (or c!19423 c!19413) (_values!2609 newMap!16) (array!4368 (store (arr!2069 (_values!2609 newMap!16)) (index!3207 lt!56493) (ValueCellFull!1004 lt!56306)) (size!2327 (_values!2609 newMap!16)))) (mask!6793 newMap!16) (ite c!19423 (ite c!19416 lt!56514 lt!56506) (extraKeys!2423 newMap!16)) (ite (and c!19423 c!19416) lt!56306 (zeroValue!2497 newMap!16)) (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) lt!56706)))

(declare-fun b!110103 () Bool)

(assert (=> b!110103 (= e!71631 e!71629)))

(declare-fun c!19502 () Bool)

(assert (=> b!110103 (= c!19502 (not (= (bvand (ite c!19423 (ite c!19416 lt!56514 lt!56506) (extraKeys!2423 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!110104 () Bool)

(declare-fun e!71628 () ListLongMap!1553)

(assert (=> b!110104 (= e!71632 e!71628)))

(declare-fun c!19500 () Bool)

(assert (=> b!110104 (= c!19500 (and (not (= (bvand (ite c!19423 (ite c!19416 lt!56514 lt!56506) (extraKeys!2423 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!19423 (ite c!19416 lt!56514 lt!56506) (extraKeys!2423 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11739 () Bool)

(declare-fun call!11744 () ListLongMap!1553)

(declare-fun call!11743 () ListLongMap!1553)

(assert (=> bm!11739 (= call!11744 call!11743)))

(declare-fun bm!11740 () Bool)

(declare-fun call!11742 () ListLongMap!1553)

(assert (=> bm!11740 (= call!11743 call!11742)))

(declare-fun b!110105 () Bool)

(declare-fun res!54462 () Bool)

(assert (=> b!110105 (=> (not res!54462) (not e!71631))))

(declare-fun e!71625 () Bool)

(assert (=> b!110105 (= res!54462 e!71625)))

(declare-fun res!54461 () Bool)

(assert (=> b!110105 (=> res!54461 e!71625)))

(assert (=> b!110105 (= res!54461 (not e!71620))))

(declare-fun res!54457 () Bool)

(assert (=> b!110105 (=> (not res!54457) (not e!71620))))

(assert (=> b!110105 (= res!54457 (bvslt #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))))))

(declare-fun b!110106 () Bool)

(declare-fun e!71623 () Bool)

(declare-fun e!71622 () Bool)

(assert (=> b!110106 (= e!71623 e!71622)))

(declare-fun res!54454 () Bool)

(declare-fun call!11748 () Bool)

(assert (=> b!110106 (= res!54454 call!11748)))

(assert (=> b!110106 (=> (not res!54454) (not e!71622))))

(declare-fun bm!11741 () Bool)

(declare-fun call!11745 () ListLongMap!1553)

(declare-fun call!11747 () ListLongMap!1553)

(assert (=> bm!11741 (= call!11745 call!11747)))

(declare-fun b!110107 () Bool)

(assert (=> b!110107 (= e!71623 (not call!11748))))

(declare-fun b!110108 () Bool)

(declare-fun e!71624 () Bool)

(assert (=> b!110108 (= e!71625 e!71624)))

(declare-fun res!54455 () Bool)

(assert (=> b!110108 (=> (not res!54455) (not e!71624))))

(assert (=> b!110108 (= res!54455 (contains!827 lt!56706 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!110108 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))))))

(declare-fun b!110109 () Bool)

(assert (=> b!110109 (= e!71624 (= (apply!100 lt!56706 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)) (get!1347 (select (arr!2069 (ite (or c!19423 c!19413) (_values!2609 newMap!16) (array!4368 (store (arr!2069 (_values!2609 newMap!16)) (index!3207 lt!56493) (ValueCellFull!1004 lt!56306)) (size!2327 (_values!2609 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2626 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!110109 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2327 (ite (or c!19423 c!19413) (_values!2609 newMap!16) (array!4368 (store (arr!2069 (_values!2609 newMap!16)) (index!3207 lt!56493) (ValueCellFull!1004 lt!56306)) (size!2327 (_values!2609 newMap!16)))))))))

(assert (=> b!110109 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))))))

(declare-fun bm!11742 () Bool)

(assert (=> bm!11742 (= call!11746 (contains!827 lt!56706 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!11743 () Bool)

(assert (=> bm!11743 (= call!11748 (contains!827 lt!56706 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110110 () Bool)

(assert (=> b!110110 (= e!71627 (validKeyInArray!0 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!110111 () Bool)

(declare-fun res!54460 () Bool)

(assert (=> b!110111 (=> (not res!54460) (not e!71631))))

(assert (=> b!110111 (= res!54460 e!71623)))

(declare-fun c!19501 () Bool)

(assert (=> b!110111 (= c!19501 (not (= (bvand (ite c!19423 (ite c!19416 lt!56514 lt!56506) (extraKeys!2423 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!11744 () Bool)

(assert (=> bm!11744 (= call!11742 (getCurrentListMapNoExtraKeys!104 (_keys!4339 newMap!16) (ite (or c!19423 c!19413) (_values!2609 newMap!16) (array!4368 (store (arr!2069 (_values!2609 newMap!16)) (index!3207 lt!56493) (ValueCellFull!1004 lt!56306)) (size!2327 (_values!2609 newMap!16)))) (mask!6793 newMap!16) (ite c!19423 (ite c!19416 lt!56514 lt!56506) (extraKeys!2423 newMap!16)) (ite (and c!19423 c!19416) lt!56306 (zeroValue!2497 newMap!16)) (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun b!110112 () Bool)

(declare-fun e!71630 () ListLongMap!1553)

(assert (=> b!110112 (= e!71630 call!11744)))

(declare-fun b!110113 () Bool)

(assert (=> b!110113 (= e!71632 (+!139 call!11747 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16)))))))

(declare-fun b!110114 () Bool)

(assert (=> b!110114 (= e!71628 call!11745)))

(declare-fun b!110115 () Bool)

(declare-fun Unit!3406 () Unit!3390)

(assert (=> b!110115 (= e!71626 Unit!3406)))

(declare-fun b!110116 () Bool)

(declare-fun lt!56699 () Unit!3390)

(assert (=> b!110116 (= e!71626 lt!56699)))

(declare-fun lt!56694 () ListLongMap!1553)

(assert (=> b!110116 (= lt!56694 (getCurrentListMapNoExtraKeys!104 (_keys!4339 newMap!16) (ite (or c!19423 c!19413) (_values!2609 newMap!16) (array!4368 (store (arr!2069 (_values!2609 newMap!16)) (index!3207 lt!56493) (ValueCellFull!1004 lt!56306)) (size!2327 (_values!2609 newMap!16)))) (mask!6793 newMap!16) (ite c!19423 (ite c!19416 lt!56514 lt!56506) (extraKeys!2423 newMap!16)) (ite (and c!19423 c!19416) lt!56306 (zeroValue!2497 newMap!16)) (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!56707 () (_ BitVec 64))

(assert (=> b!110116 (= lt!56707 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56691 () (_ BitVec 64))

(assert (=> b!110116 (= lt!56691 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56711 () Unit!3390)

(assert (=> b!110116 (= lt!56711 (addStillContains!76 lt!56694 lt!56707 (ite (and c!19423 c!19416) lt!56306 (zeroValue!2497 newMap!16)) lt!56691))))

(assert (=> b!110116 (contains!827 (+!139 lt!56694 (tuple2!2397 lt!56707 (ite (and c!19423 c!19416) lt!56306 (zeroValue!2497 newMap!16)))) lt!56691)))

(declare-fun lt!56705 () Unit!3390)

(assert (=> b!110116 (= lt!56705 lt!56711)))

(declare-fun lt!56693 () ListLongMap!1553)

(assert (=> b!110116 (= lt!56693 (getCurrentListMapNoExtraKeys!104 (_keys!4339 newMap!16) (ite (or c!19423 c!19413) (_values!2609 newMap!16) (array!4368 (store (arr!2069 (_values!2609 newMap!16)) (index!3207 lt!56493) (ValueCellFull!1004 lt!56306)) (size!2327 (_values!2609 newMap!16)))) (mask!6793 newMap!16) (ite c!19423 (ite c!19416 lt!56514 lt!56506) (extraKeys!2423 newMap!16)) (ite (and c!19423 c!19416) lt!56306 (zeroValue!2497 newMap!16)) (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!56704 () (_ BitVec 64))

(assert (=> b!110116 (= lt!56704 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56697 () (_ BitVec 64))

(assert (=> b!110116 (= lt!56697 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56703 () Unit!3390)

(assert (=> b!110116 (= lt!56703 (addApplyDifferent!76 lt!56693 lt!56704 (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16)) lt!56697))))

(assert (=> b!110116 (= (apply!100 (+!139 lt!56693 (tuple2!2397 lt!56704 (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16)))) lt!56697) (apply!100 lt!56693 lt!56697))))

(declare-fun lt!56690 () Unit!3390)

(assert (=> b!110116 (= lt!56690 lt!56703)))

(declare-fun lt!56709 () ListLongMap!1553)

(assert (=> b!110116 (= lt!56709 (getCurrentListMapNoExtraKeys!104 (_keys!4339 newMap!16) (ite (or c!19423 c!19413) (_values!2609 newMap!16) (array!4368 (store (arr!2069 (_values!2609 newMap!16)) (index!3207 lt!56493) (ValueCellFull!1004 lt!56306)) (size!2327 (_values!2609 newMap!16)))) (mask!6793 newMap!16) (ite c!19423 (ite c!19416 lt!56514 lt!56506) (extraKeys!2423 newMap!16)) (ite (and c!19423 c!19416) lt!56306 (zeroValue!2497 newMap!16)) (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!56700 () (_ BitVec 64))

(assert (=> b!110116 (= lt!56700 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56695 () (_ BitVec 64))

(assert (=> b!110116 (= lt!56695 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56701 () Unit!3390)

(assert (=> b!110116 (= lt!56701 (addApplyDifferent!76 lt!56709 lt!56700 (ite (and c!19423 c!19416) lt!56306 (zeroValue!2497 newMap!16)) lt!56695))))

(assert (=> b!110116 (= (apply!100 (+!139 lt!56709 (tuple2!2397 lt!56700 (ite (and c!19423 c!19416) lt!56306 (zeroValue!2497 newMap!16)))) lt!56695) (apply!100 lt!56709 lt!56695))))

(declare-fun lt!56710 () Unit!3390)

(assert (=> b!110116 (= lt!56710 lt!56701)))

(declare-fun lt!56698 () ListLongMap!1553)

(assert (=> b!110116 (= lt!56698 (getCurrentListMapNoExtraKeys!104 (_keys!4339 newMap!16) (ite (or c!19423 c!19413) (_values!2609 newMap!16) (array!4368 (store (arr!2069 (_values!2609 newMap!16)) (index!3207 lt!56493) (ValueCellFull!1004 lt!56306)) (size!2327 (_values!2609 newMap!16)))) (mask!6793 newMap!16) (ite c!19423 (ite c!19416 lt!56514 lt!56506) (extraKeys!2423 newMap!16)) (ite (and c!19423 c!19416) lt!56306 (zeroValue!2497 newMap!16)) (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!56696 () (_ BitVec 64))

(assert (=> b!110116 (= lt!56696 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56702 () (_ BitVec 64))

(assert (=> b!110116 (= lt!56702 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!110116 (= lt!56699 (addApplyDifferent!76 lt!56698 lt!56696 (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16)) lt!56702))))

(assert (=> b!110116 (= (apply!100 (+!139 lt!56698 (tuple2!2397 lt!56696 (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16)))) lt!56702) (apply!100 lt!56698 lt!56702))))

(declare-fun c!19499 () Bool)

(declare-fun b!110117 () Bool)

(assert (=> b!110117 (= c!19499 (and (not (= (bvand (ite c!19423 (ite c!19416 lt!56514 lt!56506) (extraKeys!2423 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!19423 (ite c!19416 lt!56514 lt!56506) (extraKeys!2423 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!110117 (= e!71628 e!71630)))

(declare-fun b!110118 () Bool)

(assert (=> b!110118 (= e!71622 (= (apply!100 lt!56706 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!19423 c!19416) lt!56306 (zeroValue!2497 newMap!16))))))

(declare-fun b!110119 () Bool)

(assert (=> b!110119 (= e!71630 call!11745)))

(declare-fun bm!11745 () Bool)

(assert (=> bm!11745 (= call!11747 (+!139 (ite c!19497 call!11742 (ite c!19500 call!11743 call!11744)) (ite (or c!19497 c!19500) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!19423 c!19416) lt!56306 (zeroValue!2497 newMap!16))) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16))))))))

(assert (= (and d!30843 c!19497) b!110113))

(assert (= (and d!30843 (not c!19497)) b!110104))

(assert (= (and b!110104 c!19500) b!110114))

(assert (= (and b!110104 (not c!19500)) b!110117))

(assert (= (and b!110117 c!19499) b!110119))

(assert (= (and b!110117 (not c!19499)) b!110112))

(assert (= (or b!110119 b!110112) bm!11739))

(assert (= (or b!110114 bm!11739) bm!11740))

(assert (= (or b!110114 b!110119) bm!11741))

(assert (= (or b!110113 bm!11740) bm!11744))

(assert (= (or b!110113 bm!11741) bm!11745))

(assert (= (and d!30843 res!54458) b!110110))

(assert (= (and d!30843 c!19498) b!110116))

(assert (= (and d!30843 (not c!19498)) b!110115))

(assert (= (and d!30843 res!54456) b!110105))

(assert (= (and b!110105 res!54457) b!110099))

(assert (= (and b!110105 (not res!54461)) b!110108))

(assert (= (and b!110108 res!54455) b!110109))

(assert (= (and b!110105 res!54462) b!110111))

(assert (= (and b!110111 c!19501) b!110106))

(assert (= (and b!110111 (not c!19501)) b!110107))

(assert (= (and b!110106 res!54454) b!110118))

(assert (= (or b!110106 b!110107) bm!11743))

(assert (= (and b!110111 res!54460) b!110103))

(assert (= (and b!110103 c!19502) b!110100))

(assert (= (and b!110103 (not c!19502)) b!110102))

(assert (= (and b!110100 res!54459) b!110101))

(assert (= (or b!110100 b!110102) bm!11742))

(declare-fun b_lambda!4923 () Bool)

(assert (=> (not b_lambda!4923) (not b!110109)))

(assert (=> b!110109 t!5766))

(declare-fun b_and!6773 () Bool)

(assert (= b_and!6769 (and (=> t!5766 result!3533) b_and!6773)))

(assert (=> b!110109 t!5768))

(declare-fun b_and!6775 () Bool)

(assert (= b_and!6771 (and (=> t!5768 result!3535) b_and!6775)))

(declare-fun m!124503 () Bool)

(assert (=> b!110109 m!124503))

(assert (=> b!110109 m!124447))

(declare-fun m!124505 () Bool)

(assert (=> b!110109 m!124505))

(assert (=> b!110109 m!124451))

(assert (=> b!110109 m!124447))

(assert (=> b!110109 m!124503))

(assert (=> b!110109 m!124451))

(declare-fun m!124507 () Bool)

(assert (=> b!110109 m!124507))

(assert (=> b!110108 m!124447))

(assert (=> b!110108 m!124447))

(declare-fun m!124509 () Bool)

(assert (=> b!110108 m!124509))

(assert (=> d!30843 m!124269))

(declare-fun m!124511 () Bool)

(assert (=> bm!11745 m!124511))

(declare-fun m!124513 () Bool)

(assert (=> b!110101 m!124513))

(declare-fun m!124515 () Bool)

(assert (=> bm!11744 m!124515))

(assert (=> b!110110 m!124447))

(assert (=> b!110110 m!124447))

(assert (=> b!110110 m!124463))

(assert (=> b!110099 m!124447))

(assert (=> b!110099 m!124447))

(assert (=> b!110099 m!124463))

(declare-fun m!124517 () Bool)

(assert (=> b!110118 m!124517))

(declare-fun m!124519 () Bool)

(assert (=> b!110116 m!124519))

(declare-fun m!124521 () Bool)

(assert (=> b!110116 m!124521))

(declare-fun m!124523 () Bool)

(assert (=> b!110116 m!124523))

(declare-fun m!124525 () Bool)

(assert (=> b!110116 m!124525))

(declare-fun m!124527 () Bool)

(assert (=> b!110116 m!124527))

(declare-fun m!124529 () Bool)

(assert (=> b!110116 m!124529))

(assert (=> b!110116 m!124519))

(declare-fun m!124531 () Bool)

(assert (=> b!110116 m!124531))

(declare-fun m!124533 () Bool)

(assert (=> b!110116 m!124533))

(assert (=> b!110116 m!124515))

(declare-fun m!124535 () Bool)

(assert (=> b!110116 m!124535))

(declare-fun m!124537 () Bool)

(assert (=> b!110116 m!124537))

(declare-fun m!124539 () Bool)

(assert (=> b!110116 m!124539))

(declare-fun m!124541 () Bool)

(assert (=> b!110116 m!124541))

(declare-fun m!124543 () Bool)

(assert (=> b!110116 m!124543))

(declare-fun m!124545 () Bool)

(assert (=> b!110116 m!124545))

(assert (=> b!110116 m!124535))

(assert (=> b!110116 m!124447))

(assert (=> b!110116 m!124523))

(declare-fun m!124547 () Bool)

(assert (=> b!110116 m!124547))

(assert (=> b!110116 m!124527))

(declare-fun m!124549 () Bool)

(assert (=> bm!11743 m!124549))

(declare-fun m!124551 () Bool)

(assert (=> b!110113 m!124551))

(declare-fun m!124553 () Bool)

(assert (=> bm!11742 m!124553))

(assert (=> bm!11692 d!30843))

(declare-fun d!30845 () Bool)

(assert (=> d!30845 (= (get!1348 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) from!355) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2919 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) from!355)))))

(assert (=> b!109838 d!30845))

(declare-fun bm!11748 () Bool)

(declare-fun call!11751 () Bool)

(assert (=> bm!11748 (= call!11751 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4339 newMap!16) (mask!6793 newMap!16)))))

(declare-fun d!30847 () Bool)

(declare-fun res!54467 () Bool)

(declare-fun e!71640 () Bool)

(assert (=> d!30847 (=> res!54467 e!71640)))

(assert (=> d!30847 (= res!54467 (bvsge #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))))))

(assert (=> d!30847 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4339 newMap!16) (mask!6793 newMap!16)) e!71640)))

(declare-fun b!110128 () Bool)

(declare-fun e!71639 () Bool)

(assert (=> b!110128 (= e!71639 call!11751)))

(declare-fun b!110129 () Bool)

(declare-fun e!71641 () Bool)

(assert (=> b!110129 (= e!71639 e!71641)))

(declare-fun lt!56719 () (_ BitVec 64))

(assert (=> b!110129 (= lt!56719 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56718 () Unit!3390)

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4365 (_ BitVec 64) (_ BitVec 32)) Unit!3390)

(assert (=> b!110129 (= lt!56718 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4339 newMap!16) lt!56719 #b00000000000000000000000000000000))))

(assert (=> b!110129 (arrayContainsKey!0 (_keys!4339 newMap!16) lt!56719 #b00000000000000000000000000000000)))

(declare-fun lt!56720 () Unit!3390)

(assert (=> b!110129 (= lt!56720 lt!56718)))

(declare-fun res!54468 () Bool)

(assert (=> b!110129 (= res!54468 (= (seekEntryOrOpen!0 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000) (_keys!4339 newMap!16) (mask!6793 newMap!16)) (Found!264 #b00000000000000000000000000000000)))))

(assert (=> b!110129 (=> (not res!54468) (not e!71641))))

(declare-fun b!110130 () Bool)

(assert (=> b!110130 (= e!71641 call!11751)))

(declare-fun b!110131 () Bool)

(assert (=> b!110131 (= e!71640 e!71639)))

(declare-fun c!19505 () Bool)

(assert (=> b!110131 (= c!19505 (validKeyInArray!0 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!30847 (not res!54467)) b!110131))

(assert (= (and b!110131 c!19505) b!110129))

(assert (= (and b!110131 (not c!19505)) b!110128))

(assert (= (and b!110129 res!54468) b!110130))

(assert (= (or b!110130 b!110128) bm!11748))

(declare-fun m!124555 () Bool)

(assert (=> bm!11748 m!124555))

(assert (=> b!110129 m!124447))

(declare-fun m!124557 () Bool)

(assert (=> b!110129 m!124557))

(declare-fun m!124559 () Bool)

(assert (=> b!110129 m!124559))

(assert (=> b!110129 m!124447))

(declare-fun m!124561 () Bool)

(assert (=> b!110129 m!124561))

(assert (=> b!110131 m!124447))

(assert (=> b!110131 m!124447))

(assert (=> b!110131 m!124463))

(assert (=> b!109832 d!30847))

(declare-fun d!30849 () Bool)

(declare-fun e!71643 () Bool)

(assert (=> d!30849 e!71643))

(declare-fun res!54469 () Bool)

(assert (=> d!30849 (=> res!54469 e!71643)))

(declare-fun lt!56721 () Bool)

(assert (=> d!30849 (= res!54469 (not lt!56721))))

(declare-fun lt!56722 () Bool)

(assert (=> d!30849 (= lt!56721 lt!56722)))

(declare-fun lt!56723 () Unit!3390)

(declare-fun e!71642 () Unit!3390)

(assert (=> d!30849 (= lt!56723 e!71642)))

(declare-fun c!19506 () Bool)

(assert (=> d!30849 (= c!19506 lt!56722)))

(assert (=> d!30849 (= lt!56722 (containsKey!160 (toList!792 lt!56425) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!30849 (= (contains!827 lt!56425 #b1000000000000000000000000000000000000000000000000000000000000000) lt!56721)))

(declare-fun b!110132 () Bool)

(declare-fun lt!56724 () Unit!3390)

(assert (=> b!110132 (= e!71642 lt!56724)))

(assert (=> b!110132 (= lt!56724 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 lt!56425) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!110132 (isDefined!110 (getValueByKey!156 (toList!792 lt!56425) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110133 () Bool)

(declare-fun Unit!3407 () Unit!3390)

(assert (=> b!110133 (= e!71642 Unit!3407)))

(declare-fun b!110134 () Bool)

(assert (=> b!110134 (= e!71643 (isDefined!110 (getValueByKey!156 (toList!792 lt!56425) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30849 c!19506) b!110132))

(assert (= (and d!30849 (not c!19506)) b!110133))

(assert (= (and d!30849 (not res!54469)) b!110134))

(declare-fun m!124563 () Bool)

(assert (=> d!30849 m!124563))

(declare-fun m!124565 () Bool)

(assert (=> b!110132 m!124565))

(declare-fun m!124567 () Bool)

(assert (=> b!110132 m!124567))

(assert (=> b!110132 m!124567))

(declare-fun m!124569 () Bool)

(assert (=> b!110132 m!124569))

(assert (=> b!110134 m!124567))

(assert (=> b!110134 m!124567))

(assert (=> b!110134 m!124569))

(assert (=> b!109683 d!30849))

(declare-fun b!110137 () Bool)

(declare-fun e!71645 () Option!162)

(assert (=> b!110137 (= e!71645 (getValueByKey!156 (t!5755 (toList!792 lt!56403)) (_1!1209 lt!56299)))))

(declare-fun d!30851 () Bool)

(declare-fun c!19507 () Bool)

(assert (=> d!30851 (= c!19507 (and ((_ is Cons!1623) (toList!792 lt!56403)) (= (_1!1209 (h!2222 (toList!792 lt!56403))) (_1!1209 lt!56299))))))

(declare-fun e!71644 () Option!162)

(assert (=> d!30851 (= (getValueByKey!156 (toList!792 lt!56403) (_1!1209 lt!56299)) e!71644)))

(declare-fun b!110135 () Bool)

(assert (=> b!110135 (= e!71644 (Some!161 (_2!1209 (h!2222 (toList!792 lt!56403)))))))

(declare-fun b!110136 () Bool)

(assert (=> b!110136 (= e!71644 e!71645)))

(declare-fun c!19508 () Bool)

(assert (=> b!110136 (= c!19508 (and ((_ is Cons!1623) (toList!792 lt!56403)) (not (= (_1!1209 (h!2222 (toList!792 lt!56403))) (_1!1209 lt!56299)))))))

(declare-fun b!110138 () Bool)

(assert (=> b!110138 (= e!71645 None!160)))

(assert (= (and d!30851 c!19507) b!110135))

(assert (= (and d!30851 (not c!19507)) b!110136))

(assert (= (and b!110136 c!19508) b!110137))

(assert (= (and b!110136 (not c!19508)) b!110138))

(declare-fun m!124571 () Bool)

(assert (=> b!110137 m!124571))

(assert (=> b!109652 d!30851))

(assert (=> bm!11690 d!30777))

(declare-fun b!110147 () Bool)

(declare-fun res!54479 () Bool)

(declare-fun e!71648 () Bool)

(assert (=> b!110147 (=> (not res!54479) (not e!71648))))

(assert (=> b!110147 (= res!54479 (and (= (size!2327 (_values!2609 newMap!16)) (bvadd (mask!6793 newMap!16) #b00000000000000000000000000000001)) (= (size!2326 (_keys!4339 newMap!16)) (size!2327 (_values!2609 newMap!16))) (bvsge (_size!507 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!507 newMap!16) (bvadd (mask!6793 newMap!16) #b00000000000000000000000000000001))))))

(declare-fun b!110148 () Bool)

(declare-fun res!54480 () Bool)

(assert (=> b!110148 (=> (not res!54480) (not e!71648))))

(declare-fun size!2332 (LongMapFixedSize!916) (_ BitVec 32))

(assert (=> b!110148 (= res!54480 (bvsge (size!2332 newMap!16) (_size!507 newMap!16)))))

(declare-fun d!30853 () Bool)

(declare-fun res!54481 () Bool)

(assert (=> d!30853 (=> (not res!54481) (not e!71648))))

(assert (=> d!30853 (= res!54481 (validMask!0 (mask!6793 newMap!16)))))

(assert (=> d!30853 (= (simpleValid!76 newMap!16) e!71648)))

(declare-fun b!110150 () Bool)

(assert (=> b!110150 (= e!71648 (and (bvsge (extraKeys!2423 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!2423 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!507 newMap!16) #b00000000000000000000000000000000)))))

(declare-fun b!110149 () Bool)

(declare-fun res!54478 () Bool)

(assert (=> b!110149 (=> (not res!54478) (not e!71648))))

(assert (=> b!110149 (= res!54478 (= (size!2332 newMap!16) (bvadd (_size!507 newMap!16) (bvsdiv (bvadd (extraKeys!2423 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(assert (= (and d!30853 res!54481) b!110147))

(assert (= (and b!110147 res!54479) b!110148))

(assert (= (and b!110148 res!54480) b!110149))

(assert (= (and b!110149 res!54478) b!110150))

(declare-fun m!124573 () Bool)

(assert (=> b!110148 m!124573))

(assert (=> d!30853 m!124269))

(assert (=> b!110149 m!124573))

(assert (=> d!30763 d!30853))

(declare-fun b!110153 () Bool)

(declare-fun e!71650 () Option!162)

(assert (=> b!110153 (= e!71650 (getValueByKey!156 (t!5755 (toList!792 lt!56399)) (_1!1209 lt!56300)))))

(declare-fun d!30855 () Bool)

(declare-fun c!19509 () Bool)

(assert (=> d!30855 (= c!19509 (and ((_ is Cons!1623) (toList!792 lt!56399)) (= (_1!1209 (h!2222 (toList!792 lt!56399))) (_1!1209 lt!56300))))))

(declare-fun e!71649 () Option!162)

(assert (=> d!30855 (= (getValueByKey!156 (toList!792 lt!56399) (_1!1209 lt!56300)) e!71649)))

(declare-fun b!110151 () Bool)

(assert (=> b!110151 (= e!71649 (Some!161 (_2!1209 (h!2222 (toList!792 lt!56399)))))))

(declare-fun b!110152 () Bool)

(assert (=> b!110152 (= e!71649 e!71650)))

(declare-fun c!19510 () Bool)

(assert (=> b!110152 (= c!19510 (and ((_ is Cons!1623) (toList!792 lt!56399)) (not (= (_1!1209 (h!2222 (toList!792 lt!56399))) (_1!1209 lt!56300)))))))

(declare-fun b!110154 () Bool)

(assert (=> b!110154 (= e!71650 None!160)))

(assert (= (and d!30855 c!19509) b!110151))

(assert (= (and d!30855 (not c!19509)) b!110152))

(assert (= (and b!110152 c!19510) b!110153))

(assert (= (and b!110152 (not c!19510)) b!110154))

(declare-fun m!124575 () Bool)

(assert (=> b!110153 m!124575))

(assert (=> b!109650 d!30855))

(declare-fun b!110155 () Bool)

(declare-fun e!71655 () Bool)

(declare-fun e!71656 () Bool)

(assert (=> b!110155 (= e!71655 e!71656)))

(declare-fun c!19513 () Bool)

(declare-fun e!71657 () Bool)

(assert (=> b!110155 (= c!19513 e!71657)))

(declare-fun res!54485 () Bool)

(assert (=> b!110155 (=> (not res!54485) (not e!71657))))

(assert (=> b!110155 (= res!54485 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2326 (_keys!4339 (v!2920 (underlying!363 thiss!992))))))))

(declare-fun b!110156 () Bool)

(assert (=> b!110156 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2326 (_keys!4339 (v!2920 (underlying!363 thiss!992))))))))

(assert (=> b!110156 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2327 (_values!2609 (v!2920 (underlying!363 thiss!992))))))))

(declare-fun e!71651 () Bool)

(declare-fun lt!56730 () ListLongMap!1553)

(assert (=> b!110156 (= e!71651 (= (apply!100 lt!56730 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!110157 () Bool)

(declare-fun e!71652 () Bool)

(assert (=> b!110157 (= e!71652 (= lt!56730 (getCurrentListMapNoExtraKeys!104 (_keys!4339 (v!2920 (underlying!363 thiss!992))) (_values!2609 (v!2920 (underlying!363 thiss!992))) (mask!6793 (v!2920 (underlying!363 thiss!992))) (extraKeys!2423 (v!2920 (underlying!363 thiss!992))) (zeroValue!2497 (v!2920 (underlying!363 thiss!992))) (minValue!2497 (v!2920 (underlying!363 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))))))))

(declare-fun bm!11749 () Bool)

(declare-fun call!11752 () ListLongMap!1553)

(assert (=> bm!11749 (= call!11752 (getCurrentListMapNoExtraKeys!104 (_keys!4339 (v!2920 (underlying!363 thiss!992))) (_values!2609 (v!2920 (underlying!363 thiss!992))) (mask!6793 (v!2920 (underlying!363 thiss!992))) (extraKeys!2423 (v!2920 (underlying!363 thiss!992))) (zeroValue!2497 (v!2920 (underlying!363 thiss!992))) (minValue!2497 (v!2920 (underlying!363 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2626 (v!2920 (underlying!363 thiss!992)))))))

(declare-fun b!110158 () Bool)

(declare-fun e!71653 () ListLongMap!1553)

(assert (=> b!110158 (= e!71653 (ListLongMap!1554 Nil!1624))))

(declare-fun b!110159 () Bool)

(declare-fun e!71654 () ListLongMap!1553)

(assert (=> b!110159 (= e!71653 e!71654)))

(declare-fun c!19511 () Bool)

(assert (=> b!110159 (= c!19511 (validKeyInArray!0 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!110160 () Bool)

(declare-fun res!54482 () Bool)

(assert (=> b!110160 (=> (not res!54482) (not e!71655))))

(assert (=> b!110160 (= res!54482 (not (contains!827 lt!56730 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!110161 () Bool)

(assert (=> b!110161 (= e!71656 e!71651)))

(assert (=> b!110161 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2326 (_keys!4339 (v!2920 (underlying!363 thiss!992))))))))

(declare-fun res!54483 () Bool)

(assert (=> b!110161 (= res!54483 (contains!827 lt!56730 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!110161 (=> (not res!54483) (not e!71651))))

(declare-fun d!30857 () Bool)

(assert (=> d!30857 e!71655))

(declare-fun res!54484 () Bool)

(assert (=> d!30857 (=> (not res!54484) (not e!71655))))

(assert (=> d!30857 (= res!54484 (not (contains!827 lt!56730 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!30857 (= lt!56730 e!71653)))

(declare-fun c!19512 () Bool)

(assert (=> d!30857 (= c!19512 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2326 (_keys!4339 (v!2920 (underlying!363 thiss!992))))))))

(assert (=> d!30857 (validMask!0 (mask!6793 (v!2920 (underlying!363 thiss!992))))))

(assert (=> d!30857 (= (getCurrentListMapNoExtraKeys!104 (_keys!4339 (v!2920 (underlying!363 thiss!992))) (_values!2609 (v!2920 (underlying!363 thiss!992))) (mask!6793 (v!2920 (underlying!363 thiss!992))) (extraKeys!2423 (v!2920 (underlying!363 thiss!992))) (zeroValue!2497 (v!2920 (underlying!363 thiss!992))) (minValue!2497 (v!2920 (underlying!363 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2626 (v!2920 (underlying!363 thiss!992)))) lt!56730)))

(declare-fun b!110162 () Bool)

(assert (=> b!110162 (= e!71652 (isEmpty!380 lt!56730))))

(declare-fun b!110163 () Bool)

(assert (=> b!110163 (= e!71657 (validKeyInArray!0 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!110163 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!110164 () Bool)

(declare-fun lt!56728 () Unit!3390)

(declare-fun lt!56731 () Unit!3390)

(assert (=> b!110164 (= lt!56728 lt!56731)))

(declare-fun lt!56725 () ListLongMap!1553)

(declare-fun lt!56726 () V!3241)

(declare-fun lt!56729 () (_ BitVec 64))

(declare-fun lt!56727 () (_ BitVec 64))

(assert (=> b!110164 (not (contains!827 (+!139 lt!56725 (tuple2!2397 lt!56729 lt!56726)) lt!56727))))

(assert (=> b!110164 (= lt!56731 (addStillNotContains!49 lt!56725 lt!56729 lt!56726 lt!56727))))

(assert (=> b!110164 (= lt!56727 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!110164 (= lt!56726 (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!110164 (= lt!56729 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (=> b!110164 (= lt!56725 call!11752)))

(assert (=> b!110164 (= e!71654 (+!139 call!11752 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!110165 () Bool)

(assert (=> b!110165 (= e!71654 call!11752)))

(declare-fun b!110166 () Bool)

(assert (=> b!110166 (= e!71656 e!71652)))

(declare-fun c!19514 () Bool)

(assert (=> b!110166 (= c!19514 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2326 (_keys!4339 (v!2920 (underlying!363 thiss!992))))))))

(assert (= (and d!30857 c!19512) b!110158))

(assert (= (and d!30857 (not c!19512)) b!110159))

(assert (= (and b!110159 c!19511) b!110164))

(assert (= (and b!110159 (not c!19511)) b!110165))

(assert (= (or b!110164 b!110165) bm!11749))

(assert (= (and d!30857 res!54484) b!110160))

(assert (= (and b!110160 res!54482) b!110155))

(assert (= (and b!110155 res!54485) b!110163))

(assert (= (and b!110155 c!19513) b!110161))

(assert (= (and b!110155 (not c!19513)) b!110166))

(assert (= (and b!110161 res!54483) b!110156))

(assert (= (and b!110166 c!19514) b!110157))

(assert (= (and b!110166 (not c!19514)) b!110162))

(declare-fun b_lambda!4925 () Bool)

(assert (=> (not b_lambda!4925) (not b!110156)))

(assert (=> b!110156 t!5751))

(declare-fun b_and!6777 () Bool)

(assert (= b_and!6773 (and (=> t!5751 result!3513) b_and!6777)))

(assert (=> b!110156 t!5753))

(declare-fun b_and!6779 () Bool)

(assert (= b_and!6775 (and (=> t!5753 result!3517) b_and!6779)))

(declare-fun b_lambda!4927 () Bool)

(assert (=> (not b_lambda!4927) (not b!110164)))

(assert (=> b!110164 t!5751))

(declare-fun b_and!6781 () Bool)

(assert (= b_and!6777 (and (=> t!5751 result!3513) b_and!6781)))

(assert (=> b!110164 t!5753))

(declare-fun b_and!6783 () Bool)

(assert (= b_and!6779 (and (=> t!5753 result!3517) b_and!6783)))

(declare-fun m!124577 () Bool)

(assert (=> b!110156 m!124577))

(assert (=> b!110156 m!124577))

(declare-fun m!124579 () Bool)

(assert (=> b!110156 m!124579))

(declare-fun m!124581 () Bool)

(assert (=> b!110156 m!124581))

(assert (=> b!110156 m!124581))

(assert (=> b!110156 m!123913))

(declare-fun m!124583 () Bool)

(assert (=> b!110156 m!124583))

(assert (=> b!110156 m!123913))

(assert (=> b!110163 m!124577))

(assert (=> b!110163 m!124577))

(declare-fun m!124585 () Bool)

(assert (=> b!110163 m!124585))

(declare-fun m!124587 () Bool)

(assert (=> b!110162 m!124587))

(assert (=> b!110161 m!124577))

(assert (=> b!110161 m!124577))

(declare-fun m!124589 () Bool)

(assert (=> b!110161 m!124589))

(declare-fun m!124591 () Bool)

(assert (=> b!110160 m!124591))

(declare-fun m!124593 () Bool)

(assert (=> b!110157 m!124593))

(assert (=> b!110159 m!124577))

(assert (=> b!110159 m!124577))

(assert (=> b!110159 m!124585))

(declare-fun m!124595 () Bool)

(assert (=> d!30857 m!124595))

(assert (=> d!30857 m!123901))

(assert (=> bm!11749 m!124593))

(assert (=> b!110164 m!124577))

(declare-fun m!124597 () Bool)

(assert (=> b!110164 m!124597))

(declare-fun m!124599 () Bool)

(assert (=> b!110164 m!124599))

(declare-fun m!124601 () Bool)

(assert (=> b!110164 m!124601))

(declare-fun m!124603 () Bool)

(assert (=> b!110164 m!124603))

(assert (=> b!110164 m!124581))

(assert (=> b!110164 m!124581))

(assert (=> b!110164 m!123913))

(assert (=> b!110164 m!124583))

(assert (=> b!110164 m!124601))

(assert (=> b!110164 m!123913))

(assert (=> b!109680 d!30857))

(declare-fun d!30859 () Bool)

(declare-fun e!71659 () Bool)

(assert (=> d!30859 e!71659))

(declare-fun res!54486 () Bool)

(assert (=> d!30859 (=> res!54486 e!71659)))

(declare-fun lt!56732 () Bool)

(assert (=> d!30859 (= res!54486 (not lt!56732))))

(declare-fun lt!56733 () Bool)

(assert (=> d!30859 (= lt!56732 lt!56733)))

(declare-fun lt!56734 () Unit!3390)

(declare-fun e!71658 () Unit!3390)

(assert (=> d!30859 (= lt!56734 e!71658)))

(declare-fun c!19515 () Bool)

(assert (=> d!30859 (= c!19515 lt!56733)))

(assert (=> d!30859 (= lt!56733 (containsKey!160 (toList!792 lt!56403) (_1!1209 lt!56299)))))

(assert (=> d!30859 (= (contains!827 lt!56403 (_1!1209 lt!56299)) lt!56732)))

(declare-fun b!110167 () Bool)

(declare-fun lt!56735 () Unit!3390)

(assert (=> b!110167 (= e!71658 lt!56735)))

(assert (=> b!110167 (= lt!56735 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 lt!56403) (_1!1209 lt!56299)))))

(assert (=> b!110167 (isDefined!110 (getValueByKey!156 (toList!792 lt!56403) (_1!1209 lt!56299)))))

(declare-fun b!110168 () Bool)

(declare-fun Unit!3408 () Unit!3390)

(assert (=> b!110168 (= e!71658 Unit!3408)))

(declare-fun b!110169 () Bool)

(assert (=> b!110169 (= e!71659 (isDefined!110 (getValueByKey!156 (toList!792 lt!56403) (_1!1209 lt!56299))))))

(assert (= (and d!30859 c!19515) b!110167))

(assert (= (and d!30859 (not c!19515)) b!110168))

(assert (= (and d!30859 (not res!54486)) b!110169))

(declare-fun m!124605 () Bool)

(assert (=> d!30859 m!124605))

(declare-fun m!124607 () Bool)

(assert (=> b!110167 m!124607))

(assert (=> b!110167 m!124083))

(assert (=> b!110167 m!124083))

(declare-fun m!124609 () Bool)

(assert (=> b!110167 m!124609))

(assert (=> b!110169 m!124083))

(assert (=> b!110169 m!124083))

(assert (=> b!110169 m!124609))

(assert (=> d!30755 d!30859))

(declare-fun b!110172 () Bool)

(declare-fun e!71661 () Option!162)

(assert (=> b!110172 (= e!71661 (getValueByKey!156 (t!5755 lt!56402) (_1!1209 lt!56299)))))

(declare-fun d!30861 () Bool)

(declare-fun c!19516 () Bool)

(assert (=> d!30861 (= c!19516 (and ((_ is Cons!1623) lt!56402) (= (_1!1209 (h!2222 lt!56402)) (_1!1209 lt!56299))))))

(declare-fun e!71660 () Option!162)

(assert (=> d!30861 (= (getValueByKey!156 lt!56402 (_1!1209 lt!56299)) e!71660)))

(declare-fun b!110170 () Bool)

(assert (=> b!110170 (= e!71660 (Some!161 (_2!1209 (h!2222 lt!56402))))))

(declare-fun b!110171 () Bool)

(assert (=> b!110171 (= e!71660 e!71661)))

(declare-fun c!19517 () Bool)

(assert (=> b!110171 (= c!19517 (and ((_ is Cons!1623) lt!56402) (not (= (_1!1209 (h!2222 lt!56402)) (_1!1209 lt!56299)))))))

(declare-fun b!110173 () Bool)

(assert (=> b!110173 (= e!71661 None!160)))

(assert (= (and d!30861 c!19516) b!110170))

(assert (= (and d!30861 (not c!19516)) b!110171))

(assert (= (and b!110171 c!19517) b!110172))

(assert (= (and b!110171 (not c!19517)) b!110173))

(declare-fun m!124611 () Bool)

(assert (=> b!110172 m!124611))

(assert (=> d!30755 d!30861))

(declare-fun d!30863 () Bool)

(assert (=> d!30863 (= (getValueByKey!156 lt!56402 (_1!1209 lt!56299)) (Some!161 (_2!1209 lt!56299)))))

(declare-fun lt!56736 () Unit!3390)

(assert (=> d!30863 (= lt!56736 (choose!691 lt!56402 (_1!1209 lt!56299) (_2!1209 lt!56299)))))

(declare-fun e!71662 () Bool)

(assert (=> d!30863 e!71662))

(declare-fun res!54487 () Bool)

(assert (=> d!30863 (=> (not res!54487) (not e!71662))))

(assert (=> d!30863 (= res!54487 (isStrictlySorted!306 lt!56402))))

(assert (=> d!30863 (= (lemmaContainsTupThenGetReturnValue!75 lt!56402 (_1!1209 lt!56299) (_2!1209 lt!56299)) lt!56736)))

(declare-fun b!110174 () Bool)

(declare-fun res!54488 () Bool)

(assert (=> b!110174 (=> (not res!54488) (not e!71662))))

(assert (=> b!110174 (= res!54488 (containsKey!160 lt!56402 (_1!1209 lt!56299)))))

(declare-fun b!110175 () Bool)

(assert (=> b!110175 (= e!71662 (contains!829 lt!56402 (tuple2!2397 (_1!1209 lt!56299) (_2!1209 lt!56299))))))

(assert (= (and d!30863 res!54487) b!110174))

(assert (= (and b!110174 res!54488) b!110175))

(assert (=> d!30863 m!124077))

(declare-fun m!124613 () Bool)

(assert (=> d!30863 m!124613))

(declare-fun m!124615 () Bool)

(assert (=> d!30863 m!124615))

(declare-fun m!124617 () Bool)

(assert (=> b!110174 m!124617))

(declare-fun m!124619 () Bool)

(assert (=> b!110175 m!124619))

(assert (=> d!30755 d!30863))

(declare-fun e!71664 () List!1627)

(declare-fun c!19518 () Bool)

(declare-fun c!19521 () Bool)

(declare-fun b!110176 () Bool)

(assert (=> b!110176 (= e!71664 (ite c!19518 (t!5755 (toList!792 lt!56303)) (ite c!19521 (Cons!1623 (h!2222 (toList!792 lt!56303)) (t!5755 (toList!792 lt!56303))) Nil!1624)))))

(declare-fun b!110177 () Bool)

(assert (=> b!110177 (= e!71664 (insertStrictlySorted!78 (t!5755 (toList!792 lt!56303)) (_1!1209 lt!56299) (_2!1209 lt!56299)))))

(declare-fun bm!11750 () Bool)

(declare-fun call!11755 () List!1627)

(declare-fun call!11753 () List!1627)

(assert (=> bm!11750 (= call!11755 call!11753)))

(declare-fun b!110178 () Bool)

(declare-fun e!71663 () List!1627)

(declare-fun call!11754 () List!1627)

(assert (=> b!110178 (= e!71663 call!11754)))

(declare-fun b!110179 () Bool)

(assert (=> b!110179 (= c!19521 (and ((_ is Cons!1623) (toList!792 lt!56303)) (bvsgt (_1!1209 (h!2222 (toList!792 lt!56303))) (_1!1209 lt!56299))))))

(declare-fun e!71666 () List!1627)

(assert (=> b!110179 (= e!71666 e!71663)))

(declare-fun b!110180 () Bool)

(declare-fun res!54490 () Bool)

(declare-fun e!71665 () Bool)

(assert (=> b!110180 (=> (not res!54490) (not e!71665))))

(declare-fun lt!56737 () List!1627)

(assert (=> b!110180 (= res!54490 (containsKey!160 lt!56737 (_1!1209 lt!56299)))))

(declare-fun b!110182 () Bool)

(assert (=> b!110182 (= e!71663 call!11754)))

(declare-fun bm!11751 () Bool)

(assert (=> bm!11751 (= call!11754 call!11755)))

(declare-fun b!110183 () Bool)

(assert (=> b!110183 (= e!71666 call!11755)))

(declare-fun b!110184 () Bool)

(declare-fun e!71667 () List!1627)

(assert (=> b!110184 (= e!71667 e!71666)))

(assert (=> b!110184 (= c!19518 (and ((_ is Cons!1623) (toList!792 lt!56303)) (= (_1!1209 (h!2222 (toList!792 lt!56303))) (_1!1209 lt!56299))))))

(declare-fun d!30865 () Bool)

(assert (=> d!30865 e!71665))

(declare-fun res!54489 () Bool)

(assert (=> d!30865 (=> (not res!54489) (not e!71665))))

(assert (=> d!30865 (= res!54489 (isStrictlySorted!306 lt!56737))))

(assert (=> d!30865 (= lt!56737 e!71667)))

(declare-fun c!19520 () Bool)

(assert (=> d!30865 (= c!19520 (and ((_ is Cons!1623) (toList!792 lt!56303)) (bvslt (_1!1209 (h!2222 (toList!792 lt!56303))) (_1!1209 lt!56299))))))

(assert (=> d!30865 (isStrictlySorted!306 (toList!792 lt!56303))))

(assert (=> d!30865 (= (insertStrictlySorted!78 (toList!792 lt!56303) (_1!1209 lt!56299) (_2!1209 lt!56299)) lt!56737)))

(declare-fun b!110181 () Bool)

(assert (=> b!110181 (= e!71667 call!11753)))

(declare-fun b!110185 () Bool)

(assert (=> b!110185 (= e!71665 (contains!829 lt!56737 (tuple2!2397 (_1!1209 lt!56299) (_2!1209 lt!56299))))))

(declare-fun bm!11752 () Bool)

(assert (=> bm!11752 (= call!11753 ($colon$colon!82 e!71664 (ite c!19520 (h!2222 (toList!792 lt!56303)) (tuple2!2397 (_1!1209 lt!56299) (_2!1209 lt!56299)))))))

(declare-fun c!19519 () Bool)

(assert (=> bm!11752 (= c!19519 c!19520)))

(assert (= (and d!30865 c!19520) b!110181))

(assert (= (and d!30865 (not c!19520)) b!110184))

(assert (= (and b!110184 c!19518) b!110183))

(assert (= (and b!110184 (not c!19518)) b!110179))

(assert (= (and b!110179 c!19521) b!110178))

(assert (= (and b!110179 (not c!19521)) b!110182))

(assert (= (or b!110178 b!110182) bm!11751))

(assert (= (or b!110183 bm!11751) bm!11750))

(assert (= (or b!110181 bm!11750) bm!11752))

(assert (= (and bm!11752 c!19519) b!110177))

(assert (= (and bm!11752 (not c!19519)) b!110176))

(assert (= (and d!30865 res!54489) b!110180))

(assert (= (and b!110180 res!54490) b!110185))

(declare-fun m!124621 () Bool)

(assert (=> d!30865 m!124621))

(declare-fun m!124623 () Bool)

(assert (=> d!30865 m!124623))

(declare-fun m!124625 () Bool)

(assert (=> b!110180 m!124625))

(declare-fun m!124627 () Bool)

(assert (=> bm!11752 m!124627))

(declare-fun m!124629 () Bool)

(assert (=> b!110177 m!124629))

(declare-fun m!124631 () Bool)

(assert (=> b!110185 m!124631))

(assert (=> d!30755 d!30865))

(declare-fun b!110186 () Bool)

(declare-fun e!71671 () Bool)

(assert (=> b!110186 (= e!71671 (contains!830 (ite c!19435 (Cons!1622 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) Nil!1623) Nil!1623) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!110187 () Bool)

(declare-fun e!71669 () Bool)

(declare-fun e!71668 () Bool)

(assert (=> b!110187 (= e!71669 e!71668)))

(declare-fun res!54491 () Bool)

(assert (=> b!110187 (=> (not res!54491) (not e!71668))))

(assert (=> b!110187 (= res!54491 (not e!71671))))

(declare-fun res!54492 () Bool)

(assert (=> b!110187 (=> (not res!54492) (not e!71671))))

(assert (=> b!110187 (= res!54492 (validKeyInArray!0 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun c!19522 () Bool)

(declare-fun call!11756 () Bool)

(declare-fun bm!11753 () Bool)

(assert (=> bm!11753 (= call!11756 (arrayNoDuplicates!0 (_keys!4339 (v!2920 (underlying!363 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!19522 (Cons!1622 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!19435 (Cons!1622 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) Nil!1623) Nil!1623)) (ite c!19435 (Cons!1622 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) Nil!1623) Nil!1623))))))

(declare-fun d!30867 () Bool)

(declare-fun res!54493 () Bool)

(assert (=> d!30867 (=> res!54493 e!71669)))

(assert (=> d!30867 (= res!54493 (bvsge (bvadd from!355 #b00000000000000000000000000000001) (size!2326 (_keys!4339 (v!2920 (underlying!363 thiss!992))))))))

(assert (=> d!30867 (= (arrayNoDuplicates!0 (_keys!4339 (v!2920 (underlying!363 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!19435 (Cons!1622 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) Nil!1623) Nil!1623)) e!71669)))

(declare-fun b!110188 () Bool)

(declare-fun e!71670 () Bool)

(assert (=> b!110188 (= e!71670 call!11756)))

(declare-fun b!110189 () Bool)

(assert (=> b!110189 (= e!71670 call!11756)))

(declare-fun b!110190 () Bool)

(assert (=> b!110190 (= e!71668 e!71670)))

(assert (=> b!110190 (= c!19522 (validKeyInArray!0 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!30867 (not res!54493)) b!110187))

(assert (= (and b!110187 res!54492) b!110186))

(assert (= (and b!110187 res!54491) b!110190))

(assert (= (and b!110190 c!19522) b!110189))

(assert (= (and b!110190 (not c!19522)) b!110188))

(assert (= (or b!110189 b!110188) bm!11753))

(declare-fun m!124633 () Bool)

(assert (=> b!110186 m!124633))

(assert (=> b!110186 m!124633))

(declare-fun m!124635 () Bool)

(assert (=> b!110186 m!124635))

(assert (=> b!110187 m!124633))

(assert (=> b!110187 m!124633))

(declare-fun m!124637 () Bool)

(assert (=> b!110187 m!124637))

(assert (=> bm!11753 m!124633))

(declare-fun m!124639 () Bool)

(assert (=> bm!11753 m!124639))

(assert (=> b!110190 m!124633))

(assert (=> b!110190 m!124633))

(assert (=> b!110190 m!124637))

(assert (=> bm!11695 d!30867))

(declare-fun d!30869 () Bool)

(assert (=> d!30869 (= (+!139 (getCurrentListMap!469 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306)) (getCurrentListMap!469 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) lt!56506 (zeroValue!2497 newMap!16) lt!56306 #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!56740 () Unit!3390)

(declare-fun choose!696 (array!4365 array!4367 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3241 V!3241 V!3241 Int) Unit!3390)

(assert (=> d!30869 (= lt!56740 (choose!696 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) lt!56506 (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) lt!56306 (defaultEntry!2626 newMap!16)))))

(assert (=> d!30869 (validMask!0 (mask!6793 newMap!16))))

(assert (=> d!30869 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!49 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) lt!56506 (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) lt!56306 (defaultEntry!2626 newMap!16)) lt!56740)))

(declare-fun bs!4518 () Bool)

(assert (= bs!4518 d!30869))

(assert (=> bs!4518 m!124133))

(assert (=> bs!4518 m!124269))

(declare-fun m!124641 () Bool)

(assert (=> bs!4518 m!124641))

(assert (=> bs!4518 m!124133))

(declare-fun m!124643 () Bool)

(assert (=> bs!4518 m!124643))

(declare-fun m!124645 () Bool)

(assert (=> bs!4518 m!124645))

(assert (=> b!109802 d!30869))

(declare-fun d!30871 () Bool)

(declare-fun e!71673 () Bool)

(assert (=> d!30871 e!71673))

(declare-fun res!54494 () Bool)

(assert (=> d!30871 (=> res!54494 e!71673)))

(declare-fun lt!56741 () Bool)

(assert (=> d!30871 (= res!54494 (not lt!56741))))

(declare-fun lt!56742 () Bool)

(assert (=> d!30871 (= lt!56741 lt!56742)))

(declare-fun lt!56743 () Unit!3390)

(declare-fun e!71672 () Unit!3390)

(assert (=> d!30871 (= lt!56743 e!71672)))

(declare-fun c!19523 () Bool)

(assert (=> d!30871 (= c!19523 lt!56742)))

(assert (=> d!30871 (= lt!56742 (containsKey!160 (toList!792 lt!56425) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!30871 (= (contains!827 lt!56425 #b0000000000000000000000000000000000000000000000000000000000000000) lt!56741)))

(declare-fun b!110191 () Bool)

(declare-fun lt!56744 () Unit!3390)

(assert (=> b!110191 (= e!71672 lt!56744)))

(assert (=> b!110191 (= lt!56744 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 lt!56425) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!110191 (isDefined!110 (getValueByKey!156 (toList!792 lt!56425) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110192 () Bool)

(declare-fun Unit!3409 () Unit!3390)

(assert (=> b!110192 (= e!71672 Unit!3409)))

(declare-fun b!110193 () Bool)

(assert (=> b!110193 (= e!71673 (isDefined!110 (getValueByKey!156 (toList!792 lt!56425) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30871 c!19523) b!110191))

(assert (= (and d!30871 (not c!19523)) b!110192))

(assert (= (and d!30871 (not res!54494)) b!110193))

(declare-fun m!124647 () Bool)

(assert (=> d!30871 m!124647))

(declare-fun m!124649 () Bool)

(assert (=> b!110191 m!124649))

(declare-fun m!124651 () Bool)

(assert (=> b!110191 m!124651))

(assert (=> b!110191 m!124651))

(declare-fun m!124653 () Bool)

(assert (=> b!110191 m!124653))

(assert (=> b!110193 m!124651))

(assert (=> b!110193 m!124651))

(assert (=> b!110193 m!124653))

(assert (=> d!30757 d!30871))

(assert (=> d!30757 d!30749))

(assert (=> d!30767 d!30771))

(declare-fun d!30873 () Bool)

(assert (=> d!30873 (not (arrayContainsKey!0 (_keys!4339 (v!2920 (underlying!363 thiss!992))) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> d!30873 true))

(declare-fun _$68!112 () Unit!3390)

(assert (=> d!30873 (= (choose!68 (_keys!4339 (v!2920 (underlying!363 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (Cons!1622 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) Nil!1623)) _$68!112)))

(declare-fun bs!4519 () Bool)

(assert (= bs!4519 d!30873))

(assert (=> bs!4519 m!123865))

(assert (=> bs!4519 m!123889))

(assert (=> d!30767 d!30873))

(declare-fun b!110196 () Bool)

(declare-fun e!71675 () Option!162)

(assert (=> b!110196 (= e!71675 (getValueByKey!156 (t!5755 (toList!792 lt!56392)) (_1!1209 lt!56300)))))

(declare-fun d!30875 () Bool)

(declare-fun c!19524 () Bool)

(assert (=> d!30875 (= c!19524 (and ((_ is Cons!1623) (toList!792 lt!56392)) (= (_1!1209 (h!2222 (toList!792 lt!56392))) (_1!1209 lt!56300))))))

(declare-fun e!71674 () Option!162)

(assert (=> d!30875 (= (getValueByKey!156 (toList!792 lt!56392) (_1!1209 lt!56300)) e!71674)))

(declare-fun b!110194 () Bool)

(assert (=> b!110194 (= e!71674 (Some!161 (_2!1209 (h!2222 (toList!792 lt!56392)))))))

(declare-fun b!110195 () Bool)

(assert (=> b!110195 (= e!71674 e!71675)))

(declare-fun c!19525 () Bool)

(assert (=> b!110195 (= c!19525 (and ((_ is Cons!1623) (toList!792 lt!56392)) (not (= (_1!1209 (h!2222 (toList!792 lt!56392))) (_1!1209 lt!56300)))))))

(declare-fun b!110197 () Bool)

(assert (=> b!110197 (= e!71675 None!160)))

(assert (= (and d!30875 c!19524) b!110194))

(assert (= (and d!30875 (not c!19524)) b!110195))

(assert (= (and b!110195 c!19525) b!110196))

(assert (= (and b!110195 (not c!19525)) b!110197))

(declare-fun m!124655 () Bool)

(assert (=> b!110196 m!124655))

(assert (=> b!109648 d!30875))

(declare-fun d!30877 () Bool)

(declare-fun e!71676 () Bool)

(assert (=> d!30877 e!71676))

(declare-fun res!54495 () Bool)

(assert (=> d!30877 (=> (not res!54495) (not e!71676))))

(declare-fun lt!56746 () ListLongMap!1553)

(assert (=> d!30877 (= res!54495 (contains!827 lt!56746 (_1!1209 (ite c!19423 (ite c!19416 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))))))

(declare-fun lt!56745 () List!1627)

(assert (=> d!30877 (= lt!56746 (ListLongMap!1554 lt!56745))))

(declare-fun lt!56747 () Unit!3390)

(declare-fun lt!56748 () Unit!3390)

(assert (=> d!30877 (= lt!56747 lt!56748)))

(assert (=> d!30877 (= (getValueByKey!156 lt!56745 (_1!1209 (ite c!19423 (ite c!19416 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))) (Some!161 (_2!1209 (ite c!19423 (ite c!19416 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))))))

(assert (=> d!30877 (= lt!56748 (lemmaContainsTupThenGetReturnValue!75 lt!56745 (_1!1209 (ite c!19423 (ite c!19416 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))) (_2!1209 (ite c!19423 (ite c!19416 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))))))

(assert (=> d!30877 (= lt!56745 (insertStrictlySorted!78 (toList!792 e!71450) (_1!1209 (ite c!19423 (ite c!19416 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))) (_2!1209 (ite c!19423 (ite c!19416 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))))))

(assert (=> d!30877 (= (+!139 e!71450 (ite c!19423 (ite c!19416 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))) lt!56746)))

(declare-fun b!110198 () Bool)

(declare-fun res!54496 () Bool)

(assert (=> b!110198 (=> (not res!54496) (not e!71676))))

(assert (=> b!110198 (= res!54496 (= (getValueByKey!156 (toList!792 lt!56746) (_1!1209 (ite c!19423 (ite c!19416 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))) (Some!161 (_2!1209 (ite c!19423 (ite c!19416 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))))

(declare-fun b!110199 () Bool)

(assert (=> b!110199 (= e!71676 (contains!829 (toList!792 lt!56746) (ite c!19423 (ite c!19416 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))

(assert (= (and d!30877 res!54495) b!110198))

(assert (= (and b!110198 res!54496) b!110199))

(declare-fun m!124657 () Bool)

(assert (=> d!30877 m!124657))

(declare-fun m!124659 () Bool)

(assert (=> d!30877 m!124659))

(declare-fun m!124661 () Bool)

(assert (=> d!30877 m!124661))

(declare-fun m!124663 () Bool)

(assert (=> d!30877 m!124663))

(declare-fun m!124665 () Bool)

(assert (=> b!110198 m!124665))

(declare-fun m!124667 () Bool)

(assert (=> b!110199 m!124667))

(assert (=> bm!11673 d!30877))

(declare-fun b!110202 () Bool)

(declare-fun e!71678 () Option!162)

(assert (=> b!110202 (= e!71678 (getValueByKey!156 (t!5755 (toList!792 lt!56388)) (_1!1209 lt!56299)))))

(declare-fun d!30879 () Bool)

(declare-fun c!19526 () Bool)

(assert (=> d!30879 (= c!19526 (and ((_ is Cons!1623) (toList!792 lt!56388)) (= (_1!1209 (h!2222 (toList!792 lt!56388))) (_1!1209 lt!56299))))))

(declare-fun e!71677 () Option!162)

(assert (=> d!30879 (= (getValueByKey!156 (toList!792 lt!56388) (_1!1209 lt!56299)) e!71677)))

(declare-fun b!110200 () Bool)

(assert (=> b!110200 (= e!71677 (Some!161 (_2!1209 (h!2222 (toList!792 lt!56388)))))))

(declare-fun b!110201 () Bool)

(assert (=> b!110201 (= e!71677 e!71678)))

(declare-fun c!19527 () Bool)

(assert (=> b!110201 (= c!19527 (and ((_ is Cons!1623) (toList!792 lt!56388)) (not (= (_1!1209 (h!2222 (toList!792 lt!56388))) (_1!1209 lt!56299)))))))

(declare-fun b!110203 () Bool)

(assert (=> b!110203 (= e!71678 None!160)))

(assert (= (and d!30879 c!19526) b!110200))

(assert (= (and d!30879 (not c!19526)) b!110201))

(assert (= (and b!110201 c!19527) b!110202))

(assert (= (and b!110201 (not c!19527)) b!110203))

(declare-fun m!124669 () Bool)

(assert (=> b!110202 m!124669))

(assert (=> b!109646 d!30879))

(declare-fun d!30881 () Bool)

(declare-fun get!1350 (Option!162) V!3241)

(assert (=> d!30881 (= (apply!100 lt!56589 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1350 (getValueByKey!156 (toList!792 lt!56589) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!4520 () Bool)

(assert (= bs!4520 d!30881))

(assert (=> bs!4520 m!124087))

(assert (=> bs!4520 m!124441))

(assert (=> bs!4520 m!124441))

(declare-fun m!124671 () Bool)

(assert (=> bs!4520 m!124671))

(assert (=> b!109919 d!30881))

(declare-fun d!30883 () Bool)

(declare-fun c!19528 () Bool)

(assert (=> d!30883 (= c!19528 ((_ is ValueCellFull!1004) (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!71679 () V!3241)

(assert (=> d!30883 (= (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!71679)))

(declare-fun b!110204 () Bool)

(assert (=> b!110204 (= e!71679 (get!1348 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!110205 () Bool)

(assert (=> b!110205 (= e!71679 (get!1349 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30883 c!19528) b!110204))

(assert (= (and d!30883 (not c!19528)) b!110205))

(assert (=> b!110204 m!124091))

(assert (=> b!110204 m!123913))

(declare-fun m!124673 () Bool)

(assert (=> b!110204 m!124673))

(assert (=> b!110205 m!124091))

(assert (=> b!110205 m!123913))

(declare-fun m!124675 () Bool)

(assert (=> b!110205 m!124675))

(assert (=> b!109919 d!30883))

(declare-fun d!30885 () Bool)

(assert (=> d!30885 (= (get!1349 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) from!355) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!109839 d!30885))

(declare-fun b!110206 () Bool)

(declare-fun e!71680 () Bool)

(assert (=> b!110206 (= e!71680 (validKeyInArray!0 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!110207 () Bool)

(declare-fun e!71689 () Bool)

(declare-fun e!71681 () Bool)

(assert (=> b!110207 (= e!71689 e!71681)))

(declare-fun res!54502 () Bool)

(declare-fun call!11761 () Bool)

(assert (=> b!110207 (= res!54502 call!11761)))

(assert (=> b!110207 (=> (not res!54502) (not e!71681))))

(declare-fun b!110208 () Bool)

(declare-fun lt!56765 () ListLongMap!1553)

(assert (=> b!110208 (= e!71681 (= (apply!100 lt!56765 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2497 newMap!16)))))

(declare-fun b!110209 () Bool)

(assert (=> b!110209 (= e!71689 (not call!11761))))

(declare-fun d!30887 () Bool)

(declare-fun e!71691 () Bool)

(assert (=> d!30887 e!71691))

(declare-fun res!54499 () Bool)

(assert (=> d!30887 (=> (not res!54499) (not e!71691))))

(assert (=> d!30887 (= res!54499 (or (bvsge #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))))))))

(declare-fun lt!56767 () ListLongMap!1553)

(assert (=> d!30887 (= lt!56765 lt!56767)))

(declare-fun lt!56751 () Unit!3390)

(declare-fun e!71686 () Unit!3390)

(assert (=> d!30887 (= lt!56751 e!71686)))

(declare-fun c!19530 () Bool)

(declare-fun e!71687 () Bool)

(assert (=> d!30887 (= c!19530 e!71687)))

(declare-fun res!54501 () Bool)

(assert (=> d!30887 (=> (not res!54501) (not e!71687))))

(assert (=> d!30887 (= res!54501 (bvslt #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))))))

(declare-fun e!71692 () ListLongMap!1553)

(assert (=> d!30887 (= lt!56767 e!71692)))

(declare-fun c!19529 () Bool)

(assert (=> d!30887 (= c!19529 (and (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!30887 (validMask!0 (mask!6793 newMap!16))))

(assert (=> d!30887 (= (getCurrentListMap!469 (_keys!4339 newMap!16) (ite c!19423 (_values!2609 newMap!16) lt!56515) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) lt!56765)))

(declare-fun b!110210 () Bool)

(assert (=> b!110210 (= e!71691 e!71689)))

(declare-fun c!19534 () Bool)

(assert (=> b!110210 (= c!19534 (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!110211 () Bool)

(declare-fun e!71688 () ListLongMap!1553)

(assert (=> b!110211 (= e!71692 e!71688)))

(declare-fun c!19532 () Bool)

(assert (=> b!110211 (= c!19532 (and (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11754 () Bool)

(declare-fun call!11759 () ListLongMap!1553)

(declare-fun call!11758 () ListLongMap!1553)

(assert (=> bm!11754 (= call!11759 call!11758)))

(declare-fun bm!11755 () Bool)

(declare-fun call!11757 () ListLongMap!1553)

(assert (=> bm!11755 (= call!11758 call!11757)))

(declare-fun b!110212 () Bool)

(declare-fun res!54505 () Bool)

(assert (=> b!110212 (=> (not res!54505) (not e!71691))))

(declare-fun e!71685 () Bool)

(assert (=> b!110212 (= res!54505 e!71685)))

(declare-fun res!54504 () Bool)

(assert (=> b!110212 (=> res!54504 e!71685)))

(assert (=> b!110212 (= res!54504 (not e!71680))))

(declare-fun res!54500 () Bool)

(assert (=> b!110212 (=> (not res!54500) (not e!71680))))

(assert (=> b!110212 (= res!54500 (bvslt #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))))))

(declare-fun b!110213 () Bool)

(declare-fun e!71683 () Bool)

(declare-fun e!71682 () Bool)

(assert (=> b!110213 (= e!71683 e!71682)))

(declare-fun res!54497 () Bool)

(declare-fun call!11763 () Bool)

(assert (=> b!110213 (= res!54497 call!11763)))

(assert (=> b!110213 (=> (not res!54497) (not e!71682))))

(declare-fun bm!11756 () Bool)

(declare-fun call!11760 () ListLongMap!1553)

(declare-fun call!11762 () ListLongMap!1553)

(assert (=> bm!11756 (= call!11760 call!11762)))

(declare-fun b!110214 () Bool)

(assert (=> b!110214 (= e!71683 (not call!11763))))

(declare-fun b!110215 () Bool)

(declare-fun e!71684 () Bool)

(assert (=> b!110215 (= e!71685 e!71684)))

(declare-fun res!54498 () Bool)

(assert (=> b!110215 (=> (not res!54498) (not e!71684))))

(assert (=> b!110215 (= res!54498 (contains!827 lt!56765 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!110215 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))))))

(declare-fun b!110216 () Bool)

(assert (=> b!110216 (= e!71684 (= (apply!100 lt!56765 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)) (get!1347 (select (arr!2069 (ite c!19423 (_values!2609 newMap!16) lt!56515)) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2626 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!110216 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2327 (ite c!19423 (_values!2609 newMap!16) lt!56515))))))

(assert (=> b!110216 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))))))

(declare-fun bm!11757 () Bool)

(assert (=> bm!11757 (= call!11761 (contains!827 lt!56765 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!11758 () Bool)

(assert (=> bm!11758 (= call!11763 (contains!827 lt!56765 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110217 () Bool)

(assert (=> b!110217 (= e!71687 (validKeyInArray!0 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!110218 () Bool)

(declare-fun res!54503 () Bool)

(assert (=> b!110218 (=> (not res!54503) (not e!71691))))

(assert (=> b!110218 (= res!54503 e!71683)))

(declare-fun c!19533 () Bool)

(assert (=> b!110218 (= c!19533 (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!11759 () Bool)

(assert (=> bm!11759 (= call!11757 (getCurrentListMapNoExtraKeys!104 (_keys!4339 newMap!16) (ite c!19423 (_values!2609 newMap!16) lt!56515) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun b!110219 () Bool)

(declare-fun e!71690 () ListLongMap!1553)

(assert (=> b!110219 (= e!71690 call!11759)))

(declare-fun b!110220 () Bool)

(assert (=> b!110220 (= e!71692 (+!139 call!11762 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16))))))

(declare-fun b!110221 () Bool)

(assert (=> b!110221 (= e!71688 call!11760)))

(declare-fun b!110222 () Bool)

(declare-fun Unit!3410 () Unit!3390)

(assert (=> b!110222 (= e!71686 Unit!3410)))

(declare-fun b!110223 () Bool)

(declare-fun lt!56758 () Unit!3390)

(assert (=> b!110223 (= e!71686 lt!56758)))

(declare-fun lt!56753 () ListLongMap!1553)

(assert (=> b!110223 (= lt!56753 (getCurrentListMapNoExtraKeys!104 (_keys!4339 newMap!16) (ite c!19423 (_values!2609 newMap!16) lt!56515) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!56766 () (_ BitVec 64))

(assert (=> b!110223 (= lt!56766 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56750 () (_ BitVec 64))

(assert (=> b!110223 (= lt!56750 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56770 () Unit!3390)

(assert (=> b!110223 (= lt!56770 (addStillContains!76 lt!56753 lt!56766 (zeroValue!2497 newMap!16) lt!56750))))

(assert (=> b!110223 (contains!827 (+!139 lt!56753 (tuple2!2397 lt!56766 (zeroValue!2497 newMap!16))) lt!56750)))

(declare-fun lt!56764 () Unit!3390)

(assert (=> b!110223 (= lt!56764 lt!56770)))

(declare-fun lt!56752 () ListLongMap!1553)

(assert (=> b!110223 (= lt!56752 (getCurrentListMapNoExtraKeys!104 (_keys!4339 newMap!16) (ite c!19423 (_values!2609 newMap!16) lt!56515) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!56763 () (_ BitVec 64))

(assert (=> b!110223 (= lt!56763 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56756 () (_ BitVec 64))

(assert (=> b!110223 (= lt!56756 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56762 () Unit!3390)

(assert (=> b!110223 (= lt!56762 (addApplyDifferent!76 lt!56752 lt!56763 (minValue!2497 newMap!16) lt!56756))))

(assert (=> b!110223 (= (apply!100 (+!139 lt!56752 (tuple2!2397 lt!56763 (minValue!2497 newMap!16))) lt!56756) (apply!100 lt!56752 lt!56756))))

(declare-fun lt!56749 () Unit!3390)

(assert (=> b!110223 (= lt!56749 lt!56762)))

(declare-fun lt!56768 () ListLongMap!1553)

(assert (=> b!110223 (= lt!56768 (getCurrentListMapNoExtraKeys!104 (_keys!4339 newMap!16) (ite c!19423 (_values!2609 newMap!16) lt!56515) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!56759 () (_ BitVec 64))

(assert (=> b!110223 (= lt!56759 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56754 () (_ BitVec 64))

(assert (=> b!110223 (= lt!56754 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!56760 () Unit!3390)

(assert (=> b!110223 (= lt!56760 (addApplyDifferent!76 lt!56768 lt!56759 (zeroValue!2497 newMap!16) lt!56754))))

(assert (=> b!110223 (= (apply!100 (+!139 lt!56768 (tuple2!2397 lt!56759 (zeroValue!2497 newMap!16))) lt!56754) (apply!100 lt!56768 lt!56754))))

(declare-fun lt!56769 () Unit!3390)

(assert (=> b!110223 (= lt!56769 lt!56760)))

(declare-fun lt!56757 () ListLongMap!1553)

(assert (=> b!110223 (= lt!56757 (getCurrentListMapNoExtraKeys!104 (_keys!4339 newMap!16) (ite c!19423 (_values!2609 newMap!16) lt!56515) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!56755 () (_ BitVec 64))

(assert (=> b!110223 (= lt!56755 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56761 () (_ BitVec 64))

(assert (=> b!110223 (= lt!56761 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!110223 (= lt!56758 (addApplyDifferent!76 lt!56757 lt!56755 (minValue!2497 newMap!16) lt!56761))))

(assert (=> b!110223 (= (apply!100 (+!139 lt!56757 (tuple2!2397 lt!56755 (minValue!2497 newMap!16))) lt!56761) (apply!100 lt!56757 lt!56761))))

(declare-fun b!110224 () Bool)

(declare-fun c!19531 () Bool)

(assert (=> b!110224 (= c!19531 (and (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!110224 (= e!71688 e!71690)))

(declare-fun b!110225 () Bool)

(assert (=> b!110225 (= e!71682 (= (apply!100 lt!56765 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2497 newMap!16)))))

(declare-fun b!110226 () Bool)

(assert (=> b!110226 (= e!71690 call!11760)))

(declare-fun bm!11760 () Bool)

(assert (=> bm!11760 (= call!11762 (+!139 (ite c!19529 call!11757 (ite c!19532 call!11758 call!11759)) (ite (or c!19529 c!19532) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 newMap!16)) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16)))))))

(assert (= (and d!30887 c!19529) b!110220))

(assert (= (and d!30887 (not c!19529)) b!110211))

(assert (= (and b!110211 c!19532) b!110221))

(assert (= (and b!110211 (not c!19532)) b!110224))

(assert (= (and b!110224 c!19531) b!110226))

(assert (= (and b!110224 (not c!19531)) b!110219))

(assert (= (or b!110226 b!110219) bm!11754))

(assert (= (or b!110221 bm!11754) bm!11755))

(assert (= (or b!110221 b!110226) bm!11756))

(assert (= (or b!110220 bm!11755) bm!11759))

(assert (= (or b!110220 bm!11756) bm!11760))

(assert (= (and d!30887 res!54501) b!110217))

(assert (= (and d!30887 c!19530) b!110223))

(assert (= (and d!30887 (not c!19530)) b!110222))

(assert (= (and d!30887 res!54499) b!110212))

(assert (= (and b!110212 res!54500) b!110206))

(assert (= (and b!110212 (not res!54504)) b!110215))

(assert (= (and b!110215 res!54498) b!110216))

(assert (= (and b!110212 res!54505) b!110218))

(assert (= (and b!110218 c!19533) b!110213))

(assert (= (and b!110218 (not c!19533)) b!110214))

(assert (= (and b!110213 res!54497) b!110225))

(assert (= (or b!110213 b!110214) bm!11758))

(assert (= (and b!110218 res!54503) b!110210))

(assert (= (and b!110210 c!19534) b!110207))

(assert (= (and b!110210 (not c!19534)) b!110209))

(assert (= (and b!110207 res!54502) b!110208))

(assert (= (or b!110207 b!110209) bm!11757))

(declare-fun b_lambda!4929 () Bool)

(assert (=> (not b_lambda!4929) (not b!110216)))

(assert (=> b!110216 t!5766))

(declare-fun b_and!6785 () Bool)

(assert (= b_and!6781 (and (=> t!5766 result!3533) b_and!6785)))

(assert (=> b!110216 t!5768))

(declare-fun b_and!6787 () Bool)

(assert (= b_and!6783 (and (=> t!5768 result!3535) b_and!6787)))

(declare-fun m!124677 () Bool)

(assert (=> b!110216 m!124677))

(assert (=> b!110216 m!124447))

(declare-fun m!124679 () Bool)

(assert (=> b!110216 m!124679))

(assert (=> b!110216 m!124451))

(assert (=> b!110216 m!124447))

(assert (=> b!110216 m!124677))

(assert (=> b!110216 m!124451))

(declare-fun m!124681 () Bool)

(assert (=> b!110216 m!124681))

(assert (=> b!110215 m!124447))

(assert (=> b!110215 m!124447))

(declare-fun m!124683 () Bool)

(assert (=> b!110215 m!124683))

(assert (=> d!30887 m!124269))

(declare-fun m!124685 () Bool)

(assert (=> bm!11760 m!124685))

(declare-fun m!124687 () Bool)

(assert (=> b!110208 m!124687))

(declare-fun m!124689 () Bool)

(assert (=> bm!11759 m!124689))

(assert (=> b!110217 m!124447))

(assert (=> b!110217 m!124447))

(assert (=> b!110217 m!124463))

(assert (=> b!110206 m!124447))

(assert (=> b!110206 m!124447))

(assert (=> b!110206 m!124463))

(declare-fun m!124691 () Bool)

(assert (=> b!110225 m!124691))

(declare-fun m!124693 () Bool)

(assert (=> b!110223 m!124693))

(declare-fun m!124695 () Bool)

(assert (=> b!110223 m!124695))

(declare-fun m!124697 () Bool)

(assert (=> b!110223 m!124697))

(declare-fun m!124699 () Bool)

(assert (=> b!110223 m!124699))

(declare-fun m!124701 () Bool)

(assert (=> b!110223 m!124701))

(declare-fun m!124703 () Bool)

(assert (=> b!110223 m!124703))

(assert (=> b!110223 m!124693))

(declare-fun m!124705 () Bool)

(assert (=> b!110223 m!124705))

(declare-fun m!124707 () Bool)

(assert (=> b!110223 m!124707))

(assert (=> b!110223 m!124689))

(declare-fun m!124709 () Bool)

(assert (=> b!110223 m!124709))

(declare-fun m!124711 () Bool)

(assert (=> b!110223 m!124711))

(declare-fun m!124713 () Bool)

(assert (=> b!110223 m!124713))

(declare-fun m!124715 () Bool)

(assert (=> b!110223 m!124715))

(declare-fun m!124717 () Bool)

(assert (=> b!110223 m!124717))

(declare-fun m!124719 () Bool)

(assert (=> b!110223 m!124719))

(assert (=> b!110223 m!124709))

(assert (=> b!110223 m!124447))

(assert (=> b!110223 m!124697))

(declare-fun m!124721 () Bool)

(assert (=> b!110223 m!124721))

(assert (=> b!110223 m!124701))

(declare-fun m!124723 () Bool)

(assert (=> bm!11758 m!124723))

(declare-fun m!124725 () Bool)

(assert (=> b!110220 m!124725))

(declare-fun m!124727 () Bool)

(assert (=> bm!11757 m!124727))

(assert (=> bm!11686 d!30887))

(declare-fun d!30889 () Bool)

(declare-fun res!54510 () Bool)

(declare-fun e!71697 () Bool)

(assert (=> d!30889 (=> res!54510 e!71697)))

(assert (=> d!30889 (= res!54510 (and ((_ is Cons!1623) (toList!792 lt!56298)) (= (_1!1209 (h!2222 (toList!792 lt!56298))) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355))))))

(assert (=> d!30889 (= (containsKey!160 (toList!792 lt!56298) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) e!71697)))

(declare-fun b!110231 () Bool)

(declare-fun e!71698 () Bool)

(assert (=> b!110231 (= e!71697 e!71698)))

(declare-fun res!54511 () Bool)

(assert (=> b!110231 (=> (not res!54511) (not e!71698))))

(assert (=> b!110231 (= res!54511 (and (or (not ((_ is Cons!1623) (toList!792 lt!56298))) (bvsle (_1!1209 (h!2222 (toList!792 lt!56298))) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355))) ((_ is Cons!1623) (toList!792 lt!56298)) (bvslt (_1!1209 (h!2222 (toList!792 lt!56298))) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355))))))

(declare-fun b!110232 () Bool)

(assert (=> b!110232 (= e!71698 (containsKey!160 (t!5755 (toList!792 lt!56298)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))

(assert (= (and d!30889 (not res!54510)) b!110231))

(assert (= (and b!110231 res!54511) b!110232))

(assert (=> b!110232 m!123865))

(declare-fun m!124729 () Bool)

(assert (=> b!110232 m!124729))

(assert (=> d!30759 d!30889))

(declare-fun d!30891 () Bool)

(declare-fun e!71700 () Bool)

(assert (=> d!30891 e!71700))

(declare-fun res!54512 () Bool)

(assert (=> d!30891 (=> res!54512 e!71700)))

(declare-fun lt!56771 () Bool)

(assert (=> d!30891 (= res!54512 (not lt!56771))))

(declare-fun lt!56772 () Bool)

(assert (=> d!30891 (= lt!56771 lt!56772)))

(declare-fun lt!56773 () Unit!3390)

(declare-fun e!71699 () Unit!3390)

(assert (=> d!30891 (= lt!56773 e!71699)))

(declare-fun c!19535 () Bool)

(assert (=> d!30891 (= c!19535 lt!56772)))

(assert (=> d!30891 (= lt!56772 (containsKey!160 (toList!792 lt!56589) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!30891 (= (contains!827 lt!56589 #b0000000000000000000000000000000000000000000000000000000000000000) lt!56771)))

(declare-fun b!110233 () Bool)

(declare-fun lt!56774 () Unit!3390)

(assert (=> b!110233 (= e!71699 lt!56774)))

(assert (=> b!110233 (= lt!56774 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 lt!56589) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!110233 (isDefined!110 (getValueByKey!156 (toList!792 lt!56589) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110234 () Bool)

(declare-fun Unit!3411 () Unit!3390)

(assert (=> b!110234 (= e!71699 Unit!3411)))

(declare-fun b!110235 () Bool)

(assert (=> b!110235 (= e!71700 (isDefined!110 (getValueByKey!156 (toList!792 lt!56589) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!30891 c!19535) b!110233))

(assert (= (and d!30891 (not c!19535)) b!110234))

(assert (= (and d!30891 (not res!54512)) b!110235))

(declare-fun m!124731 () Bool)

(assert (=> d!30891 m!124731))

(declare-fun m!124733 () Bool)

(assert (=> b!110233 m!124733))

(declare-fun m!124735 () Bool)

(assert (=> b!110233 m!124735))

(assert (=> b!110233 m!124735))

(declare-fun m!124737 () Bool)

(assert (=> b!110233 m!124737))

(assert (=> b!110235 m!124735))

(assert (=> b!110235 m!124735))

(assert (=> b!110235 m!124737))

(assert (=> bm!11714 d!30891))

(assert (=> b!109812 d!30839))

(declare-fun d!30893 () Bool)

(declare-fun isEmpty!381 (List!1627) Bool)

(assert (=> d!30893 (= (isEmpty!380 lt!56425) (isEmpty!381 (toList!792 lt!56425)))))

(declare-fun bs!4521 () Bool)

(assert (= bs!4521 d!30893))

(declare-fun m!124739 () Bool)

(assert (=> bs!4521 m!124739))

(assert (=> b!109685 d!30893))

(declare-fun d!30895 () Bool)

(declare-fun e!71703 () Bool)

(assert (=> d!30895 e!71703))

(declare-fun res!54518 () Bool)

(assert (=> d!30895 (=> (not res!54518) (not e!71703))))

(declare-fun lt!56780 () SeekEntryResult!264)

(assert (=> d!30895 (= res!54518 ((_ is Found!264) lt!56780))))

(assert (=> d!30895 (= lt!56780 (seekEntryOrOpen!0 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (_keys!4339 newMap!16) (mask!6793 newMap!16)))))

(declare-fun lt!56779 () Unit!3390)

(declare-fun choose!697 (array!4365 array!4367 (_ BitVec 32) (_ BitVec 32) V!3241 V!3241 (_ BitVec 64) Int) Unit!3390)

(assert (=> d!30895 (= lt!56779 (choose!697 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (defaultEntry!2626 newMap!16)))))

(assert (=> d!30895 (validMask!0 (mask!6793 newMap!16))))

(assert (=> d!30895 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!49 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (defaultEntry!2626 newMap!16)) lt!56779)))

(declare-fun b!110240 () Bool)

(declare-fun res!54517 () Bool)

(assert (=> b!110240 (=> (not res!54517) (not e!71703))))

(assert (=> b!110240 (= res!54517 (inRange!0 (index!3207 lt!56780) (mask!6793 newMap!16)))))

(declare-fun b!110241 () Bool)

(assert (=> b!110241 (= e!71703 (= (select (arr!2068 (_keys!4339 newMap!16)) (index!3207 lt!56780)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))

(assert (=> b!110241 (and (bvsge (index!3207 lt!56780) #b00000000000000000000000000000000) (bvslt (index!3207 lt!56780) (size!2326 (_keys!4339 newMap!16))))))

(assert (= (and d!30895 res!54518) b!110240))

(assert (= (and b!110240 res!54517) b!110241))

(assert (=> d!30895 m!123865))

(assert (=> d!30895 m!124149))

(assert (=> d!30895 m!123865))

(declare-fun m!124741 () Bool)

(assert (=> d!30895 m!124741))

(assert (=> d!30895 m!124269))

(declare-fun m!124743 () Bool)

(assert (=> b!110240 m!124743))

(declare-fun m!124745 () Bool)

(assert (=> b!110241 m!124745))

(assert (=> bm!11691 d!30895))

(declare-fun d!30897 () Bool)

(declare-fun e!71705 () Bool)

(assert (=> d!30897 e!71705))

(declare-fun res!54519 () Bool)

(assert (=> d!30897 (=> res!54519 e!71705)))

(declare-fun lt!56781 () Bool)

(assert (=> d!30897 (= res!54519 (not lt!56781))))

(declare-fun lt!56782 () Bool)

(assert (=> d!30897 (= lt!56781 lt!56782)))

(declare-fun lt!56783 () Unit!3390)

(declare-fun e!71704 () Unit!3390)

(assert (=> d!30897 (= lt!56783 e!71704)))

(declare-fun c!19536 () Bool)

(assert (=> d!30897 (= c!19536 lt!56782)))

(assert (=> d!30897 (= lt!56782 (containsKey!160 (toList!792 e!71432) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))

(assert (=> d!30897 (= (contains!827 e!71432 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) lt!56781)))

(declare-fun b!110242 () Bool)

(declare-fun lt!56784 () Unit!3390)

(assert (=> b!110242 (= e!71704 lt!56784)))

(assert (=> b!110242 (= lt!56784 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 e!71432) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))

(assert (=> b!110242 (isDefined!110 (getValueByKey!156 (toList!792 e!71432) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))

(declare-fun b!110243 () Bool)

(declare-fun Unit!3412 () Unit!3390)

(assert (=> b!110243 (= e!71704 Unit!3412)))

(declare-fun b!110244 () Bool)

(assert (=> b!110244 (= e!71705 (isDefined!110 (getValueByKey!156 (toList!792 e!71432) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355))))))

(assert (= (and d!30897 c!19536) b!110242))

(assert (= (and d!30897 (not c!19536)) b!110243))

(assert (= (and d!30897 (not res!54519)) b!110244))

(assert (=> d!30897 m!123865))

(declare-fun m!124747 () Bool)

(assert (=> d!30897 m!124747))

(assert (=> b!110242 m!123865))

(declare-fun m!124749 () Bool)

(assert (=> b!110242 m!124749))

(assert (=> b!110242 m!123865))

(declare-fun m!124751 () Bool)

(assert (=> b!110242 m!124751))

(assert (=> b!110242 m!124751))

(declare-fun m!124753 () Bool)

(assert (=> b!110242 m!124753))

(assert (=> b!110244 m!123865))

(assert (=> b!110244 m!124751))

(assert (=> b!110244 m!124751))

(assert (=> b!110244 m!124753))

(assert (=> bm!11685 d!30897))

(declare-fun d!30899 () Bool)

(declare-fun e!71707 () Bool)

(assert (=> d!30899 e!71707))

(declare-fun res!54520 () Bool)

(assert (=> d!30899 (=> res!54520 e!71707)))

(declare-fun lt!56785 () Bool)

(assert (=> d!30899 (= res!54520 (not lt!56785))))

(declare-fun lt!56786 () Bool)

(assert (=> d!30899 (= lt!56785 lt!56786)))

(declare-fun lt!56787 () Unit!3390)

(declare-fun e!71706 () Unit!3390)

(assert (=> d!30899 (= lt!56787 e!71706)))

(declare-fun c!19537 () Bool)

(assert (=> d!30899 (= c!19537 lt!56786)))

(assert (=> d!30899 (= lt!56786 (containsKey!160 (toList!792 lt!56392) (_1!1209 lt!56300)))))

(assert (=> d!30899 (= (contains!827 lt!56392 (_1!1209 lt!56300)) lt!56785)))

(declare-fun b!110245 () Bool)

(declare-fun lt!56788 () Unit!3390)

(assert (=> b!110245 (= e!71706 lt!56788)))

(assert (=> b!110245 (= lt!56788 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 lt!56392) (_1!1209 lt!56300)))))

(assert (=> b!110245 (isDefined!110 (getValueByKey!156 (toList!792 lt!56392) (_1!1209 lt!56300)))))

(declare-fun b!110246 () Bool)

(declare-fun Unit!3413 () Unit!3390)

(assert (=> b!110246 (= e!71706 Unit!3413)))

(declare-fun b!110247 () Bool)

(assert (=> b!110247 (= e!71707 (isDefined!110 (getValueByKey!156 (toList!792 lt!56392) (_1!1209 lt!56300))))))

(assert (= (and d!30899 c!19537) b!110245))

(assert (= (and d!30899 (not c!19537)) b!110246))

(assert (= (and d!30899 (not res!54520)) b!110247))

(declare-fun m!124755 () Bool)

(assert (=> d!30899 m!124755))

(declare-fun m!124757 () Bool)

(assert (=> b!110245 m!124757))

(assert (=> b!110245 m!124049))

(assert (=> b!110245 m!124049))

(declare-fun m!124759 () Bool)

(assert (=> b!110245 m!124759))

(assert (=> b!110247 m!124049))

(assert (=> b!110247 m!124049))

(assert (=> b!110247 m!124759))

(assert (=> d!30747 d!30899))

(declare-fun b!110250 () Bool)

(declare-fun e!71709 () Option!162)

(assert (=> b!110250 (= e!71709 (getValueByKey!156 (t!5755 lt!56391) (_1!1209 lt!56300)))))

(declare-fun d!30901 () Bool)

(declare-fun c!19538 () Bool)

(assert (=> d!30901 (= c!19538 (and ((_ is Cons!1623) lt!56391) (= (_1!1209 (h!2222 lt!56391)) (_1!1209 lt!56300))))))

(declare-fun e!71708 () Option!162)

(assert (=> d!30901 (= (getValueByKey!156 lt!56391 (_1!1209 lt!56300)) e!71708)))

(declare-fun b!110248 () Bool)

(assert (=> b!110248 (= e!71708 (Some!161 (_2!1209 (h!2222 lt!56391))))))

(declare-fun b!110249 () Bool)

(assert (=> b!110249 (= e!71708 e!71709)))

(declare-fun c!19539 () Bool)

(assert (=> b!110249 (= c!19539 (and ((_ is Cons!1623) lt!56391) (not (= (_1!1209 (h!2222 lt!56391)) (_1!1209 lt!56300)))))))

(declare-fun b!110251 () Bool)

(assert (=> b!110251 (= e!71709 None!160)))

(assert (= (and d!30901 c!19538) b!110248))

(assert (= (and d!30901 (not c!19538)) b!110249))

(assert (= (and b!110249 c!19539) b!110250))

(assert (= (and b!110249 (not c!19539)) b!110251))

(declare-fun m!124761 () Bool)

(assert (=> b!110250 m!124761))

(assert (=> d!30747 d!30901))

(declare-fun d!30903 () Bool)

(assert (=> d!30903 (= (getValueByKey!156 lt!56391 (_1!1209 lt!56300)) (Some!161 (_2!1209 lt!56300)))))

(declare-fun lt!56789 () Unit!3390)

(assert (=> d!30903 (= lt!56789 (choose!691 lt!56391 (_1!1209 lt!56300) (_2!1209 lt!56300)))))

(declare-fun e!71710 () Bool)

(assert (=> d!30903 e!71710))

(declare-fun res!54521 () Bool)

(assert (=> d!30903 (=> (not res!54521) (not e!71710))))

(assert (=> d!30903 (= res!54521 (isStrictlySorted!306 lt!56391))))

(assert (=> d!30903 (= (lemmaContainsTupThenGetReturnValue!75 lt!56391 (_1!1209 lt!56300) (_2!1209 lt!56300)) lt!56789)))

(declare-fun b!110252 () Bool)

(declare-fun res!54522 () Bool)

(assert (=> b!110252 (=> (not res!54522) (not e!71710))))

(assert (=> b!110252 (= res!54522 (containsKey!160 lt!56391 (_1!1209 lt!56300)))))

(declare-fun b!110253 () Bool)

(assert (=> b!110253 (= e!71710 (contains!829 lt!56391 (tuple2!2397 (_1!1209 lt!56300) (_2!1209 lt!56300))))))

(assert (= (and d!30903 res!54521) b!110252))

(assert (= (and b!110252 res!54522) b!110253))

(assert (=> d!30903 m!124043))

(declare-fun m!124763 () Bool)

(assert (=> d!30903 m!124763))

(declare-fun m!124765 () Bool)

(assert (=> d!30903 m!124765))

(declare-fun m!124767 () Bool)

(assert (=> b!110252 m!124767))

(declare-fun m!124769 () Bool)

(assert (=> b!110253 m!124769))

(assert (=> d!30747 d!30903))

(declare-fun c!19543 () Bool)

(declare-fun b!110254 () Bool)

(declare-fun c!19540 () Bool)

(declare-fun e!71712 () List!1627)

(assert (=> b!110254 (= e!71712 (ite c!19540 (t!5755 (toList!792 lt!56303)) (ite c!19543 (Cons!1623 (h!2222 (toList!792 lt!56303)) (t!5755 (toList!792 lt!56303))) Nil!1624)))))

(declare-fun b!110255 () Bool)

(assert (=> b!110255 (= e!71712 (insertStrictlySorted!78 (t!5755 (toList!792 lt!56303)) (_1!1209 lt!56300) (_2!1209 lt!56300)))))

(declare-fun bm!11761 () Bool)

(declare-fun call!11766 () List!1627)

(declare-fun call!11764 () List!1627)

(assert (=> bm!11761 (= call!11766 call!11764)))

(declare-fun b!110256 () Bool)

(declare-fun e!71711 () List!1627)

(declare-fun call!11765 () List!1627)

(assert (=> b!110256 (= e!71711 call!11765)))

(declare-fun b!110257 () Bool)

(assert (=> b!110257 (= c!19543 (and ((_ is Cons!1623) (toList!792 lt!56303)) (bvsgt (_1!1209 (h!2222 (toList!792 lt!56303))) (_1!1209 lt!56300))))))

(declare-fun e!71714 () List!1627)

(assert (=> b!110257 (= e!71714 e!71711)))

(declare-fun b!110258 () Bool)

(declare-fun res!54524 () Bool)

(declare-fun e!71713 () Bool)

(assert (=> b!110258 (=> (not res!54524) (not e!71713))))

(declare-fun lt!56790 () List!1627)

(assert (=> b!110258 (= res!54524 (containsKey!160 lt!56790 (_1!1209 lt!56300)))))

(declare-fun b!110260 () Bool)

(assert (=> b!110260 (= e!71711 call!11765)))

(declare-fun bm!11762 () Bool)

(assert (=> bm!11762 (= call!11765 call!11766)))

(declare-fun b!110261 () Bool)

(assert (=> b!110261 (= e!71714 call!11766)))

(declare-fun b!110262 () Bool)

(declare-fun e!71715 () List!1627)

(assert (=> b!110262 (= e!71715 e!71714)))

(assert (=> b!110262 (= c!19540 (and ((_ is Cons!1623) (toList!792 lt!56303)) (= (_1!1209 (h!2222 (toList!792 lt!56303))) (_1!1209 lt!56300))))))

(declare-fun d!30905 () Bool)

(assert (=> d!30905 e!71713))

(declare-fun res!54523 () Bool)

(assert (=> d!30905 (=> (not res!54523) (not e!71713))))

(assert (=> d!30905 (= res!54523 (isStrictlySorted!306 lt!56790))))

(assert (=> d!30905 (= lt!56790 e!71715)))

(declare-fun c!19542 () Bool)

(assert (=> d!30905 (= c!19542 (and ((_ is Cons!1623) (toList!792 lt!56303)) (bvslt (_1!1209 (h!2222 (toList!792 lt!56303))) (_1!1209 lt!56300))))))

(assert (=> d!30905 (isStrictlySorted!306 (toList!792 lt!56303))))

(assert (=> d!30905 (= (insertStrictlySorted!78 (toList!792 lt!56303) (_1!1209 lt!56300) (_2!1209 lt!56300)) lt!56790)))

(declare-fun b!110259 () Bool)

(assert (=> b!110259 (= e!71715 call!11764)))

(declare-fun b!110263 () Bool)

(assert (=> b!110263 (= e!71713 (contains!829 lt!56790 (tuple2!2397 (_1!1209 lt!56300) (_2!1209 lt!56300))))))

(declare-fun bm!11763 () Bool)

(assert (=> bm!11763 (= call!11764 ($colon$colon!82 e!71712 (ite c!19542 (h!2222 (toList!792 lt!56303)) (tuple2!2397 (_1!1209 lt!56300) (_2!1209 lt!56300)))))))

(declare-fun c!19541 () Bool)

(assert (=> bm!11763 (= c!19541 c!19542)))

(assert (= (and d!30905 c!19542) b!110259))

(assert (= (and d!30905 (not c!19542)) b!110262))

(assert (= (and b!110262 c!19540) b!110261))

(assert (= (and b!110262 (not c!19540)) b!110257))

(assert (= (and b!110257 c!19543) b!110256))

(assert (= (and b!110257 (not c!19543)) b!110260))

(assert (= (or b!110256 b!110260) bm!11762))

(assert (= (or b!110261 bm!11762) bm!11761))

(assert (= (or b!110259 bm!11761) bm!11763))

(assert (= (and bm!11763 c!19541) b!110255))

(assert (= (and bm!11763 (not c!19541)) b!110254))

(assert (= (and d!30905 res!54523) b!110258))

(assert (= (and b!110258 res!54524) b!110263))

(declare-fun m!124771 () Bool)

(assert (=> d!30905 m!124771))

(assert (=> d!30905 m!124623))

(declare-fun m!124773 () Bool)

(assert (=> b!110258 m!124773))

(declare-fun m!124775 () Bool)

(assert (=> bm!11763 m!124775))

(declare-fun m!124777 () Bool)

(assert (=> b!110255 m!124777))

(declare-fun m!124779 () Bool)

(assert (=> b!110263 m!124779))

(assert (=> d!30747 d!30905))

(declare-fun d!30907 () Bool)

(assert (=> d!30907 (= (inRange!0 (ite c!19413 (ite c!19420 (index!3207 lt!56509) (ite c!19418 (index!3206 lt!56497) (index!3209 lt!56497))) (ite c!19419 (index!3207 lt!56510) (ite c!19424 (index!3206 lt!56496) (index!3209 lt!56496)))) (mask!6793 newMap!16)) (and (bvsge (ite c!19413 (ite c!19420 (index!3207 lt!56509) (ite c!19418 (index!3206 lt!56497) (index!3209 lt!56497))) (ite c!19419 (index!3207 lt!56510) (ite c!19424 (index!3206 lt!56496) (index!3209 lt!56496)))) #b00000000000000000000000000000000) (bvslt (ite c!19413 (ite c!19420 (index!3207 lt!56509) (ite c!19418 (index!3206 lt!56497) (index!3209 lt!56497))) (ite c!19419 (index!3207 lt!56510) (ite c!19424 (index!3206 lt!56496) (index!3209 lt!56496)))) (bvadd (mask!6793 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!11669 d!30907))

(assert (=> b!109687 d!30883))

(declare-fun d!30909 () Bool)

(assert (=> d!30909 (not (contains!827 (+!139 lt!56420 (tuple2!2397 lt!56424 lt!56421)) lt!56422))))

(declare-fun lt!56793 () Unit!3390)

(declare-fun choose!698 (ListLongMap!1553 (_ BitVec 64) V!3241 (_ BitVec 64)) Unit!3390)

(assert (=> d!30909 (= lt!56793 (choose!698 lt!56420 lt!56424 lt!56421 lt!56422))))

(declare-fun e!71718 () Bool)

(assert (=> d!30909 e!71718))

(declare-fun res!54527 () Bool)

(assert (=> d!30909 (=> (not res!54527) (not e!71718))))

(assert (=> d!30909 (= res!54527 (not (contains!827 lt!56420 lt!56422)))))

(assert (=> d!30909 (= (addStillNotContains!49 lt!56420 lt!56424 lt!56421 lt!56422) lt!56793)))

(declare-fun b!110267 () Bool)

(assert (=> b!110267 (= e!71718 (not (= lt!56424 lt!56422)))))

(assert (= (and d!30909 res!54527) b!110267))

(assert (=> d!30909 m!124111))

(assert (=> d!30909 m!124111))

(assert (=> d!30909 m!124113))

(declare-fun m!124781 () Bool)

(assert (=> d!30909 m!124781))

(declare-fun m!124783 () Bool)

(assert (=> d!30909 m!124783))

(assert (=> b!109687 d!30909))

(declare-fun d!30911 () Bool)

(declare-fun e!71720 () Bool)

(assert (=> d!30911 e!71720))

(declare-fun res!54528 () Bool)

(assert (=> d!30911 (=> res!54528 e!71720)))

(declare-fun lt!56794 () Bool)

(assert (=> d!30911 (= res!54528 (not lt!56794))))

(declare-fun lt!56795 () Bool)

(assert (=> d!30911 (= lt!56794 lt!56795)))

(declare-fun lt!56796 () Unit!3390)

(declare-fun e!71719 () Unit!3390)

(assert (=> d!30911 (= lt!56796 e!71719)))

(declare-fun c!19544 () Bool)

(assert (=> d!30911 (= c!19544 lt!56795)))

(assert (=> d!30911 (= lt!56795 (containsKey!160 (toList!792 (+!139 lt!56420 (tuple2!2397 lt!56424 lt!56421))) lt!56422))))

(assert (=> d!30911 (= (contains!827 (+!139 lt!56420 (tuple2!2397 lt!56424 lt!56421)) lt!56422) lt!56794)))

(declare-fun b!110268 () Bool)

(declare-fun lt!56797 () Unit!3390)

(assert (=> b!110268 (= e!71719 lt!56797)))

(assert (=> b!110268 (= lt!56797 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 (+!139 lt!56420 (tuple2!2397 lt!56424 lt!56421))) lt!56422))))

(assert (=> b!110268 (isDefined!110 (getValueByKey!156 (toList!792 (+!139 lt!56420 (tuple2!2397 lt!56424 lt!56421))) lt!56422))))

(declare-fun b!110269 () Bool)

(declare-fun Unit!3414 () Unit!3390)

(assert (=> b!110269 (= e!71719 Unit!3414)))

(declare-fun b!110270 () Bool)

(assert (=> b!110270 (= e!71720 (isDefined!110 (getValueByKey!156 (toList!792 (+!139 lt!56420 (tuple2!2397 lt!56424 lt!56421))) lt!56422)))))

(assert (= (and d!30911 c!19544) b!110268))

(assert (= (and d!30911 (not c!19544)) b!110269))

(assert (= (and d!30911 (not res!54528)) b!110270))

(declare-fun m!124785 () Bool)

(assert (=> d!30911 m!124785))

(declare-fun m!124787 () Bool)

(assert (=> b!110268 m!124787))

(declare-fun m!124789 () Bool)

(assert (=> b!110268 m!124789))

(assert (=> b!110268 m!124789))

(declare-fun m!124791 () Bool)

(assert (=> b!110268 m!124791))

(assert (=> b!110270 m!124789))

(assert (=> b!110270 m!124789))

(assert (=> b!110270 m!124791))

(assert (=> b!109687 d!30911))

(declare-fun d!30913 () Bool)

(declare-fun e!71721 () Bool)

(assert (=> d!30913 e!71721))

(declare-fun res!54529 () Bool)

(assert (=> d!30913 (=> (not res!54529) (not e!71721))))

(declare-fun lt!56799 () ListLongMap!1553)

(assert (=> d!30913 (= res!54529 (contains!827 lt!56799 (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!56798 () List!1627)

(assert (=> d!30913 (= lt!56799 (ListLongMap!1554 lt!56798))))

(declare-fun lt!56800 () Unit!3390)

(declare-fun lt!56801 () Unit!3390)

(assert (=> d!30913 (= lt!56800 lt!56801)))

(assert (=> d!30913 (= (getValueByKey!156 lt!56798 (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!161 (_2!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!30913 (= lt!56801 (lemmaContainsTupThenGetReturnValue!75 lt!56798 (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!30913 (= lt!56798 (insertStrictlySorted!78 (toList!792 call!11623) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!30913 (= (+!139 call!11623 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!56799)))

(declare-fun b!110271 () Bool)

(declare-fun res!54530 () Bool)

(assert (=> b!110271 (=> (not res!54530) (not e!71721))))

(assert (=> b!110271 (= res!54530 (= (getValueByKey!156 (toList!792 lt!56799) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!161 (_2!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!110272 () Bool)

(assert (=> b!110272 (= e!71721 (contains!829 (toList!792 lt!56799) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!30913 res!54529) b!110271))

(assert (= (and b!110271 res!54530) b!110272))

(declare-fun m!124793 () Bool)

(assert (=> d!30913 m!124793))

(declare-fun m!124795 () Bool)

(assert (=> d!30913 m!124795))

(declare-fun m!124797 () Bool)

(assert (=> d!30913 m!124797))

(declare-fun m!124799 () Bool)

(assert (=> d!30913 m!124799))

(declare-fun m!124801 () Bool)

(assert (=> b!110271 m!124801))

(declare-fun m!124803 () Bool)

(assert (=> b!110272 m!124803))

(assert (=> b!109687 d!30913))

(declare-fun d!30915 () Bool)

(declare-fun e!71722 () Bool)

(assert (=> d!30915 e!71722))

(declare-fun res!54531 () Bool)

(assert (=> d!30915 (=> (not res!54531) (not e!71722))))

(declare-fun lt!56803 () ListLongMap!1553)

(assert (=> d!30915 (= res!54531 (contains!827 lt!56803 (_1!1209 (tuple2!2397 lt!56424 lt!56421))))))

(declare-fun lt!56802 () List!1627)

(assert (=> d!30915 (= lt!56803 (ListLongMap!1554 lt!56802))))

(declare-fun lt!56804 () Unit!3390)

(declare-fun lt!56805 () Unit!3390)

(assert (=> d!30915 (= lt!56804 lt!56805)))

(assert (=> d!30915 (= (getValueByKey!156 lt!56802 (_1!1209 (tuple2!2397 lt!56424 lt!56421))) (Some!161 (_2!1209 (tuple2!2397 lt!56424 lt!56421))))))

(assert (=> d!30915 (= lt!56805 (lemmaContainsTupThenGetReturnValue!75 lt!56802 (_1!1209 (tuple2!2397 lt!56424 lt!56421)) (_2!1209 (tuple2!2397 lt!56424 lt!56421))))))

(assert (=> d!30915 (= lt!56802 (insertStrictlySorted!78 (toList!792 lt!56420) (_1!1209 (tuple2!2397 lt!56424 lt!56421)) (_2!1209 (tuple2!2397 lt!56424 lt!56421))))))

(assert (=> d!30915 (= (+!139 lt!56420 (tuple2!2397 lt!56424 lt!56421)) lt!56803)))

(declare-fun b!110273 () Bool)

(declare-fun res!54532 () Bool)

(assert (=> b!110273 (=> (not res!54532) (not e!71722))))

(assert (=> b!110273 (= res!54532 (= (getValueByKey!156 (toList!792 lt!56803) (_1!1209 (tuple2!2397 lt!56424 lt!56421))) (Some!161 (_2!1209 (tuple2!2397 lt!56424 lt!56421)))))))

(declare-fun b!110274 () Bool)

(assert (=> b!110274 (= e!71722 (contains!829 (toList!792 lt!56803) (tuple2!2397 lt!56424 lt!56421)))))

(assert (= (and d!30915 res!54531) b!110273))

(assert (= (and b!110273 res!54532) b!110274))

(declare-fun m!124805 () Bool)

(assert (=> d!30915 m!124805))

(declare-fun m!124807 () Bool)

(assert (=> d!30915 m!124807))

(declare-fun m!124809 () Bool)

(assert (=> d!30915 m!124809))

(declare-fun m!124811 () Bool)

(assert (=> d!30915 m!124811))

(declare-fun m!124813 () Bool)

(assert (=> b!110273 m!124813))

(declare-fun m!124815 () Bool)

(assert (=> b!110274 m!124815))

(assert (=> b!109687 d!30915))

(declare-fun d!30917 () Bool)

(declare-fun isEmpty!382 (Option!162) Bool)

(assert (=> d!30917 (= (isDefined!110 (getValueByKey!156 (toList!792 lt!56298) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355))) (not (isEmpty!382 (getValueByKey!156 (toList!792 lt!56298) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))))

(declare-fun bs!4522 () Bool)

(assert (= bs!4522 d!30917))

(assert (=> bs!4522 m!124119))

(declare-fun m!124817 () Bool)

(assert (=> bs!4522 m!124817))

(assert (=> b!109698 d!30917))

(declare-fun b!110277 () Bool)

(declare-fun e!71724 () Option!162)

(assert (=> b!110277 (= e!71724 (getValueByKey!156 (t!5755 (toList!792 lt!56298)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))

(declare-fun c!19545 () Bool)

(declare-fun d!30919 () Bool)

(assert (=> d!30919 (= c!19545 (and ((_ is Cons!1623) (toList!792 lt!56298)) (= (_1!1209 (h!2222 (toList!792 lt!56298))) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355))))))

(declare-fun e!71723 () Option!162)

(assert (=> d!30919 (= (getValueByKey!156 (toList!792 lt!56298) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) e!71723)))

(declare-fun b!110275 () Bool)

(assert (=> b!110275 (= e!71723 (Some!161 (_2!1209 (h!2222 (toList!792 lt!56298)))))))

(declare-fun b!110276 () Bool)

(assert (=> b!110276 (= e!71723 e!71724)))

(declare-fun c!19546 () Bool)

(assert (=> b!110276 (= c!19546 (and ((_ is Cons!1623) (toList!792 lt!56298)) (not (= (_1!1209 (h!2222 (toList!792 lt!56298))) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))))

(declare-fun b!110278 () Bool)

(assert (=> b!110278 (= e!71724 None!160)))

(assert (= (and d!30919 c!19545) b!110275))

(assert (= (and d!30919 (not c!19545)) b!110276))

(assert (= (and b!110276 c!19546) b!110277))

(assert (= (and b!110276 (not c!19546)) b!110278))

(assert (=> b!110277 m!123865))

(declare-fun m!124819 () Bool)

(assert (=> b!110277 m!124819))

(assert (=> b!109698 d!30919))

(declare-fun d!30921 () Bool)

(declare-fun lt!56806 () Bool)

(assert (=> d!30921 (= lt!56806 (select (content!113 (toList!792 lt!56399)) lt!56300))))

(declare-fun e!71725 () Bool)

(assert (=> d!30921 (= lt!56806 e!71725)))

(declare-fun res!54533 () Bool)

(assert (=> d!30921 (=> (not res!54533) (not e!71725))))

(assert (=> d!30921 (= res!54533 ((_ is Cons!1623) (toList!792 lt!56399)))))

(assert (=> d!30921 (= (contains!829 (toList!792 lt!56399) lt!56300) lt!56806)))

(declare-fun b!110279 () Bool)

(declare-fun e!71726 () Bool)

(assert (=> b!110279 (= e!71725 e!71726)))

(declare-fun res!54534 () Bool)

(assert (=> b!110279 (=> res!54534 e!71726)))

(assert (=> b!110279 (= res!54534 (= (h!2222 (toList!792 lt!56399)) lt!56300))))

(declare-fun b!110280 () Bool)

(assert (=> b!110280 (= e!71726 (contains!829 (t!5755 (toList!792 lt!56399)) lt!56300))))

(assert (= (and d!30921 res!54533) b!110279))

(assert (= (and b!110279 (not res!54534)) b!110280))

(declare-fun m!124821 () Bool)

(assert (=> d!30921 m!124821))

(declare-fun m!124823 () Bool)

(assert (=> d!30921 m!124823))

(declare-fun m!124825 () Bool)

(assert (=> b!110280 m!124825))

(assert (=> b!109651 d!30921))

(declare-fun b!110315 () Bool)

(declare-fun e!71749 () Bool)

(declare-fun call!11778 () Bool)

(assert (=> b!110315 (= e!71749 (not call!11778))))

(declare-fun b!110316 () Bool)

(declare-fun e!71747 () Unit!3390)

(declare-fun Unit!3415 () Unit!3390)

(assert (=> b!110316 (= e!71747 Unit!3415)))

(declare-fun b!110317 () Bool)

(declare-fun Unit!3416 () Unit!3390)

(assert (=> b!110317 (= e!71747 Unit!3416)))

(declare-fun lt!56893 () Unit!3390)

(declare-fun lemmaArrayContainsKeyThenInListMap!32 (array!4365 array!4367 (_ BitVec 32) (_ BitVec 32) V!3241 V!3241 (_ BitVec 64) (_ BitVec 32) Int) Unit!3390)

(assert (=> b!110317 (= lt!56893 (lemmaArrayContainsKeyThenInListMap!32 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(assert (=> b!110317 (contains!827 (getCurrentListMap!469 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355))))

(declare-fun lt!56888 () Unit!3390)

(assert (=> b!110317 (= lt!56888 lt!56893)))

(assert (=> b!110317 false))

(declare-fun b!110318 () Bool)

(declare-fun res!54557 () Bool)

(declare-fun e!71748 () Bool)

(assert (=> b!110318 (=> (not res!54557) (not e!71748))))

(declare-fun lt!56890 () tuple2!2398)

(assert (=> b!110318 (= res!54557 (valid!430 (_2!1210 lt!56890)))))

(declare-fun bm!11772 () Bool)

(declare-fun call!11776 () Bool)

(declare-fun call!11777 () Bool)

(assert (=> bm!11772 (= call!11776 call!11777)))

(declare-fun d!30923 () Bool)

(assert (=> d!30923 e!71748))

(declare-fun res!54559 () Bool)

(assert (=> d!30923 (=> (not res!54559) (not e!71748))))

(assert (=> d!30923 (= res!54559 (_1!1210 lt!56890))))

(assert (=> d!30923 (= lt!56890 (tuple2!2399 true (LongMapFixedSize!917 (defaultEntry!2626 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (bvadd (_size!507 newMap!16) #b00000000000000000000000000000001) (array!4366 (store (arr!2068 (_keys!4339 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) (size!2326 (_keys!4339 newMap!16))) (array!4368 (store (arr!2069 (_values!2609 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (ValueCellFull!1004 lt!56306)) (size!2327 (_values!2609 newMap!16))) (_vacant!507 newMap!16))))))

(declare-fun lt!56875 () Unit!3390)

(declare-fun lt!56882 () Unit!3390)

(assert (=> d!30923 (= lt!56875 lt!56882)))

(declare-fun lt!56887 () array!4367)

(declare-fun lt!56879 () array!4365)

(assert (=> d!30923 (contains!827 (getCurrentListMap!469 lt!56879 lt!56887 (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) (select (store (arr!2068 (_keys!4339 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493))))))

(assert (=> d!30923 (= lt!56882 (lemmaValidKeyInArrayIsInListMap!108 lt!56879 lt!56887 (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (defaultEntry!2626 newMap!16)))))

(assert (=> d!30923 (= lt!56887 (array!4368 (store (arr!2069 (_values!2609 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (ValueCellFull!1004 lt!56306)) (size!2327 (_values!2609 newMap!16))))))

(assert (=> d!30923 (= lt!56879 (array!4366 (store (arr!2068 (_keys!4339 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) (size!2326 (_keys!4339 newMap!16))))))

(declare-fun lt!56880 () Unit!3390)

(declare-fun lt!56872 () Unit!3390)

(assert (=> d!30923 (= lt!56880 lt!56872)))

(declare-fun lt!56886 () array!4365)

(assert (=> d!30923 (= (arrayCountValidKeys!0 lt!56886 (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (bvadd (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!4365 (_ BitVec 32)) Unit!3390)

(assert (=> d!30923 (= lt!56872 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!56886 (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493))))))

(assert (=> d!30923 (= lt!56886 (array!4366 (store (arr!2068 (_keys!4339 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) (size!2326 (_keys!4339 newMap!16))))))

(declare-fun lt!56873 () Unit!3390)

(declare-fun lt!56869 () Unit!3390)

(assert (=> d!30923 (= lt!56873 lt!56869)))

(declare-fun lt!56881 () array!4365)

(assert (=> d!30923 (arrayContainsKey!0 lt!56881 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(assert (=> d!30923 (= lt!56869 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!56881 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493))))))

(assert (=> d!30923 (= lt!56881 (array!4366 (store (arr!2068 (_keys!4339 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) (size!2326 (_keys!4339 newMap!16))))))

(declare-fun lt!56891 () Unit!3390)

(declare-fun lt!56871 () Unit!3390)

(assert (=> d!30923 (= lt!56891 lt!56871)))

(assert (=> d!30923 (= (+!139 (getCurrentListMap!469 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)) (getCurrentListMap!469 (array!4366 (store (arr!2068 (_keys!4339 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) (size!2326 (_keys!4339 newMap!16))) (array!4368 (store (arr!2069 (_values!2609 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (ValueCellFull!1004 lt!56306)) (size!2327 (_values!2609 newMap!16))) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!32 (array!4365 array!4367 (_ BitVec 32) (_ BitVec 32) V!3241 V!3241 (_ BitVec 32) (_ BitVec 64) V!3241 Int) Unit!3390)

(assert (=> d!30923 (= lt!56871 (lemmaAddValidKeyToArrayThenAddPairToListMap!32 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!56894 () Unit!3390)

(declare-fun lt!56874 () Unit!3390)

(assert (=> d!30923 (= lt!56894 lt!56874)))

(assert (=> d!30923 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4366 (store (arr!2068 (_keys!4339 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) (size!2326 (_keys!4339 newMap!16))) (mask!6793 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!4365 (_ BitVec 32) (_ BitVec 32)) Unit!3390)

(assert (=> d!30923 (= lt!56874 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (_keys!4339 newMap!16) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (mask!6793 newMap!16)))))

(declare-fun lt!56895 () Unit!3390)

(declare-fun lt!56878 () Unit!3390)

(assert (=> d!30923 (= lt!56895 lt!56878)))

(assert (=> d!30923 (= (arrayCountValidKeys!0 (array!4366 (store (arr!2068 (_keys!4339 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) (size!2326 (_keys!4339 newMap!16))) #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4339 newMap!16) #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!4365 (_ BitVec 32) (_ BitVec 64)) Unit!3390)

(assert (=> d!30923 (= lt!56878 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4339 newMap!16) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))

(declare-fun lt!56870 () Unit!3390)

(declare-fun lt!56877 () Unit!3390)

(assert (=> d!30923 (= lt!56870 lt!56877)))

(declare-fun lt!56889 () (_ BitVec 32))

(declare-fun lt!56876 () List!1626)

(assert (=> d!30923 (arrayNoDuplicates!0 (array!4366 (store (arr!2068 (_keys!4339 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) (size!2326 (_keys!4339 newMap!16))) lt!56889 lt!56876)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!4365 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1626) Unit!3390)

(assert (=> d!30923 (= lt!56877 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4339 newMap!16) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) lt!56889 lt!56876))))

(assert (=> d!30923 (= lt!56876 Nil!1623)))

(assert (=> d!30923 (= lt!56889 #b00000000000000000000000000000000)))

(declare-fun lt!56885 () Unit!3390)

(assert (=> d!30923 (= lt!56885 e!71747)))

(declare-fun c!19556 () Bool)

(assert (=> d!30923 (= c!19556 (arrayContainsKey!0 (_keys!4339 newMap!16) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!56896 () Unit!3390)

(declare-fun e!71745 () Unit!3390)

(assert (=> d!30923 (= lt!56896 e!71745)))

(declare-fun c!19558 () Bool)

(assert (=> d!30923 (= c!19558 (contains!827 (getCurrentListMap!469 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))

(assert (=> d!30923 (valid!430 newMap!16)))

(assert (=> d!30923 (= (updateHelperNewKey!49 newMap!16 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306 (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493))) lt!56890)))

(declare-fun b!110319 () Bool)

(declare-fun e!71746 () Bool)

(assert (=> b!110319 (= e!71746 (not call!11778))))

(declare-fun bm!11773 () Bool)

(assert (=> bm!11773 (= call!11778 (arrayContainsKey!0 (_keys!4339 newMap!16) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!110320 () Bool)

(declare-fun Unit!3417 () Unit!3390)

(assert (=> b!110320 (= e!71745 Unit!3417)))

(declare-fun lt!56884 () Unit!3390)

(assert (=> b!110320 (= lt!56884 (lemmaInListMapThenSeekEntryOrOpenFindsIt!49 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (defaultEntry!2626 newMap!16)))))

(declare-fun lt!56892 () SeekEntryResult!264)

(declare-fun call!11775 () SeekEntryResult!264)

(assert (=> b!110320 (= lt!56892 call!11775)))

(declare-fun res!54560 () Bool)

(assert (=> b!110320 (= res!54560 ((_ is Found!264) lt!56892))))

(declare-fun e!71744 () Bool)

(assert (=> b!110320 (=> (not res!54560) (not e!71744))))

(assert (=> b!110320 e!71744))

(declare-fun lt!56868 () Unit!3390)

(assert (=> b!110320 (= lt!56868 lt!56884)))

(assert (=> b!110320 false))

(declare-fun b!110321 () Bool)

(assert (=> b!110321 (= e!71744 (= (select (arr!2068 (_keys!4339 newMap!16)) (index!3207 lt!56892)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))

(declare-fun bm!11774 () Bool)

(assert (=> bm!11774 (= call!11775 (seekEntryOrOpen!0 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (_keys!4339 newMap!16) (mask!6793 newMap!16)))))

(declare-fun b!110322 () Bool)

(declare-fun res!54553 () Bool)

(declare-fun lt!56867 () SeekEntryResult!264)

(assert (=> b!110322 (= res!54553 (= (select (arr!2068 (_keys!4339 newMap!16)) (index!3209 lt!56867)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!110322 (=> (not res!54553) (not e!71749))))

(declare-fun b!110323 () Bool)

(declare-fun res!54556 () Bool)

(assert (=> b!110323 (= res!54556 call!11777)))

(assert (=> b!110323 (=> (not res!54556) (not e!71744))))

(declare-fun b!110324 () Bool)

(declare-fun res!54555 () Bool)

(assert (=> b!110324 (=> (not res!54555) (not e!71748))))

(assert (=> b!110324 (= res!54555 (contains!827 (map!1281 (_2!1210 lt!56890)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))

(declare-fun b!110325 () Bool)

(declare-fun res!54561 () Bool)

(assert (=> b!110325 (=> (not res!54561) (not e!71746))))

(assert (=> b!110325 (= res!54561 (= (select (arr!2068 (_keys!4339 newMap!16)) (index!3206 lt!56867)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110326 () Bool)

(assert (=> b!110326 (= e!71748 (= (map!1281 (_2!1210 lt!56890)) (+!139 (map!1281 newMap!16) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))

(declare-fun b!110327 () Bool)

(declare-fun e!71750 () Bool)

(assert (=> b!110327 (= e!71750 e!71749)))

(declare-fun res!54554 () Bool)

(assert (=> b!110327 (= res!54554 call!11776)))

(assert (=> b!110327 (=> (not res!54554) (not e!71749))))

(declare-fun b!110328 () Bool)

(declare-fun c!19555 () Bool)

(assert (=> b!110328 (= c!19555 ((_ is MissingVacant!264) lt!56867))))

(declare-fun e!71743 () Bool)

(assert (=> b!110328 (= e!71743 e!71750)))

(declare-fun b!110329 () Bool)

(declare-fun res!54558 () Bool)

(assert (=> b!110329 (=> (not res!54558) (not e!71746))))

(assert (=> b!110329 (= res!54558 call!11776)))

(assert (=> b!110329 (= e!71743 e!71746)))

(declare-fun b!110330 () Bool)

(declare-fun lt!56883 () Unit!3390)

(assert (=> b!110330 (= e!71745 lt!56883)))

(assert (=> b!110330 (= lt!56883 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!49 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (defaultEntry!2626 newMap!16)))))

(assert (=> b!110330 (= lt!56867 call!11775)))

(declare-fun c!19557 () Bool)

(assert (=> b!110330 (= c!19557 ((_ is MissingZero!264) lt!56867))))

(assert (=> b!110330 e!71743))

(declare-fun bm!11775 () Bool)

(assert (=> bm!11775 (= call!11777 (inRange!0 (ite c!19558 (index!3207 lt!56892) (ite c!19557 (index!3206 lt!56867) (index!3209 lt!56867))) (mask!6793 newMap!16)))))

(declare-fun b!110331 () Bool)

(assert (=> b!110331 (= e!71750 ((_ is Undefined!264) lt!56867))))

(assert (= (and d!30923 c!19558) b!110320))

(assert (= (and d!30923 (not c!19558)) b!110330))

(assert (= (and b!110320 res!54560) b!110323))

(assert (= (and b!110323 res!54556) b!110321))

(assert (= (and b!110330 c!19557) b!110329))

(assert (= (and b!110330 (not c!19557)) b!110328))

(assert (= (and b!110329 res!54558) b!110325))

(assert (= (and b!110325 res!54561) b!110319))

(assert (= (and b!110328 c!19555) b!110327))

(assert (= (and b!110328 (not c!19555)) b!110331))

(assert (= (and b!110327 res!54554) b!110322))

(assert (= (and b!110322 res!54553) b!110315))

(assert (= (or b!110329 b!110327) bm!11772))

(assert (= (or b!110319 b!110315) bm!11773))

(assert (= (or b!110323 bm!11772) bm!11775))

(assert (= (or b!110320 b!110330) bm!11774))

(assert (= (and d!30923 c!19556) b!110317))

(assert (= (and d!30923 (not c!19556)) b!110316))

(assert (= (and d!30923 res!54559) b!110318))

(assert (= (and b!110318 res!54557) b!110324))

(assert (= (and b!110324 res!54555) b!110326))

(assert (=> bm!11774 m!123865))

(assert (=> bm!11774 m!124149))

(assert (=> b!110317 m!123865))

(declare-fun m!124827 () Bool)

(assert (=> b!110317 m!124827))

(assert (=> b!110317 m!124133))

(assert (=> b!110317 m!124133))

(assert (=> b!110317 m!123865))

(declare-fun m!124829 () Bool)

(assert (=> b!110317 m!124829))

(declare-fun m!124831 () Bool)

(assert (=> bm!11775 m!124831))

(declare-fun m!124833 () Bool)

(assert (=> b!110322 m!124833))

(declare-fun m!124835 () Bool)

(assert (=> b!110326 m!124835))

(assert (=> b!110326 m!123893))

(assert (=> b!110326 m!123893))

(declare-fun m!124837 () Bool)

(assert (=> b!110326 m!124837))

(declare-fun m!124839 () Bool)

(assert (=> b!110325 m!124839))

(assert (=> bm!11773 m!123865))

(assert (=> bm!11773 m!124165))

(assert (=> b!110330 m!123865))

(assert (=> b!110330 m!124135))

(declare-fun m!124841 () Bool)

(assert (=> b!110318 m!124841))

(assert (=> b!110324 m!124835))

(assert (=> b!110324 m!124835))

(assert (=> b!110324 m!123865))

(declare-fun m!124843 () Bool)

(assert (=> b!110324 m!124843))

(declare-fun m!124845 () Bool)

(assert (=> d!30923 m!124845))

(declare-fun m!124847 () Bool)

(assert (=> d!30923 m!124847))

(declare-fun m!124849 () Bool)

(assert (=> d!30923 m!124849))

(assert (=> d!30923 m!124845))

(declare-fun m!124851 () Bool)

(assert (=> d!30923 m!124851))

(declare-fun m!124853 () Bool)

(assert (=> d!30923 m!124853))

(declare-fun m!124855 () Bool)

(assert (=> d!30923 m!124855))

(declare-fun m!124857 () Bool)

(assert (=> d!30923 m!124857))

(assert (=> d!30923 m!124133))

(assert (=> d!30923 m!123865))

(assert (=> d!30923 m!124829))

(assert (=> d!30923 m!123865))

(declare-fun m!124859 () Bool)

(assert (=> d!30923 m!124859))

(declare-fun m!124861 () Bool)

(assert (=> d!30923 m!124861))

(assert (=> d!30923 m!123877))

(assert (=> d!30923 m!123865))

(declare-fun m!124863 () Bool)

(assert (=> d!30923 m!124863))

(assert (=> d!30923 m!123865))

(assert (=> d!30923 m!124165))

(assert (=> d!30923 m!123865))

(declare-fun m!124865 () Bool)

(assert (=> d!30923 m!124865))

(assert (=> d!30923 m!123865))

(declare-fun m!124867 () Bool)

(assert (=> d!30923 m!124867))

(declare-fun m!124869 () Bool)

(assert (=> d!30923 m!124869))

(assert (=> d!30923 m!124133))

(assert (=> d!30923 m!124849))

(declare-fun m!124871 () Bool)

(assert (=> d!30923 m!124871))

(assert (=> d!30923 m!123865))

(declare-fun m!124873 () Bool)

(assert (=> d!30923 m!124873))

(declare-fun m!124875 () Bool)

(assert (=> d!30923 m!124875))

(assert (=> d!30923 m!124181))

(assert (=> d!30923 m!124133))

(assert (=> d!30923 m!124433))

(assert (=> d!30923 m!123865))

(declare-fun m!124877 () Bool)

(assert (=> d!30923 m!124877))

(declare-fun m!124879 () Bool)

(assert (=> d!30923 m!124879))

(assert (=> b!110320 m!123865))

(assert (=> b!110320 m!124177))

(declare-fun m!124881 () Bool)

(assert (=> b!110321 m!124881))

(assert (=> bm!11684 d!30923))

(declare-fun b!110332 () Bool)

(declare-fun e!71754 () Bool)

(assert (=> b!110332 (= e!71754 (contains!830 Nil!1623 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!110333 () Bool)

(declare-fun e!71752 () Bool)

(declare-fun e!71751 () Bool)

(assert (=> b!110333 (= e!71752 e!71751)))

(declare-fun res!54562 () Bool)

(assert (=> b!110333 (=> (not res!54562) (not e!71751))))

(assert (=> b!110333 (= res!54562 (not e!71754))))

(declare-fun res!54563 () Bool)

(assert (=> b!110333 (=> (not res!54563) (not e!71754))))

(assert (=> b!110333 (= res!54563 (validKeyInArray!0 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!11776 () Bool)

(declare-fun call!11779 () Bool)

(declare-fun c!19559 () Bool)

(assert (=> bm!11776 (= call!11779 (arrayNoDuplicates!0 (_keys!4339 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!19559 (Cons!1622 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000) Nil!1623) Nil!1623)))))

(declare-fun d!30925 () Bool)

(declare-fun res!54564 () Bool)

(assert (=> d!30925 (=> res!54564 e!71752)))

(assert (=> d!30925 (= res!54564 (bvsge #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))))))

(assert (=> d!30925 (= (arrayNoDuplicates!0 (_keys!4339 newMap!16) #b00000000000000000000000000000000 Nil!1623) e!71752)))

(declare-fun b!110334 () Bool)

(declare-fun e!71753 () Bool)

(assert (=> b!110334 (= e!71753 call!11779)))

(declare-fun b!110335 () Bool)

(assert (=> b!110335 (= e!71753 call!11779)))

(declare-fun b!110336 () Bool)

(assert (=> b!110336 (= e!71751 e!71753)))

(assert (=> b!110336 (= c!19559 (validKeyInArray!0 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!30925 (not res!54564)) b!110333))

(assert (= (and b!110333 res!54563) b!110332))

(assert (= (and b!110333 res!54562) b!110336))

(assert (= (and b!110336 c!19559) b!110335))

(assert (= (and b!110336 (not c!19559)) b!110334))

(assert (= (or b!110335 b!110334) bm!11776))

(assert (=> b!110332 m!124447))

(assert (=> b!110332 m!124447))

(declare-fun m!124883 () Bool)

(assert (=> b!110332 m!124883))

(assert (=> b!110333 m!124447))

(assert (=> b!110333 m!124447))

(assert (=> b!110333 m!124463))

(assert (=> bm!11776 m!124447))

(declare-fun m!124885 () Bool)

(assert (=> bm!11776 m!124885))

(assert (=> b!110336 m!124447))

(assert (=> b!110336 m!124447))

(assert (=> b!110336 m!124463))

(assert (=> b!109833 d!30925))

(declare-fun d!30927 () Bool)

(declare-fun res!54565 () Bool)

(declare-fun e!71755 () Bool)

(assert (=> d!30927 (=> res!54565 e!71755)))

(assert (=> d!30927 (= res!54565 (= (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))

(assert (=> d!30927 (= (arrayContainsKey!0 (_keys!4339 newMap!16) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) #b00000000000000000000000000000000) e!71755)))

(declare-fun b!110337 () Bool)

(declare-fun e!71756 () Bool)

(assert (=> b!110337 (= e!71755 e!71756)))

(declare-fun res!54566 () Bool)

(assert (=> b!110337 (=> (not res!54566) (not e!71756))))

(assert (=> b!110337 (= res!54566 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2326 (_keys!4339 newMap!16))))))

(declare-fun b!110338 () Bool)

(assert (=> b!110338 (= e!71756 (arrayContainsKey!0 (_keys!4339 newMap!16) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!30927 (not res!54565)) b!110337))

(assert (= (and b!110337 res!54566) b!110338))

(assert (=> d!30927 m!124447))

(assert (=> b!110338 m!123865))

(declare-fun m!124887 () Bool)

(assert (=> b!110338 m!124887))

(assert (=> bm!11678 d!30927))

(declare-fun d!30929 () Bool)

(declare-fun e!71758 () Bool)

(assert (=> d!30929 e!71758))

(declare-fun res!54567 () Bool)

(assert (=> d!30929 (=> res!54567 e!71758)))

(declare-fun lt!56897 () Bool)

(assert (=> d!30929 (= res!54567 (not lt!56897))))

(declare-fun lt!56898 () Bool)

(assert (=> d!30929 (= lt!56897 lt!56898)))

(declare-fun lt!56899 () Unit!3390)

(declare-fun e!71757 () Unit!3390)

(assert (=> d!30929 (= lt!56899 e!71757)))

(declare-fun c!19560 () Bool)

(assert (=> d!30929 (= c!19560 lt!56898)))

(assert (=> d!30929 (= lt!56898 (containsKey!160 (toList!792 lt!56425) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!30929 (= (contains!827 lt!56425 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!56897)))

(declare-fun b!110339 () Bool)

(declare-fun lt!56900 () Unit!3390)

(assert (=> b!110339 (= e!71757 lt!56900)))

(assert (=> b!110339 (= lt!56900 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 lt!56425) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!110339 (isDefined!110 (getValueByKey!156 (toList!792 lt!56425) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!110340 () Bool)

(declare-fun Unit!3418 () Unit!3390)

(assert (=> b!110340 (= e!71757 Unit!3418)))

(declare-fun b!110341 () Bool)

(assert (=> b!110341 (= e!71758 (isDefined!110 (getValueByKey!156 (toList!792 lt!56425) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!30929 c!19560) b!110339))

(assert (= (and d!30929 (not c!19560)) b!110340))

(assert (= (and d!30929 (not res!54567)) b!110341))

(assert (=> d!30929 m!124087))

(declare-fun m!124889 () Bool)

(assert (=> d!30929 m!124889))

(assert (=> b!110339 m!124087))

(declare-fun m!124891 () Bool)

(assert (=> b!110339 m!124891))

(assert (=> b!110339 m!124087))

(declare-fun m!124893 () Bool)

(assert (=> b!110339 m!124893))

(assert (=> b!110339 m!124893))

(declare-fun m!124895 () Bool)

(assert (=> b!110339 m!124895))

(assert (=> b!110341 m!124087))

(assert (=> b!110341 m!124893))

(assert (=> b!110341 m!124893))

(assert (=> b!110341 m!124895))

(assert (=> b!109684 d!30929))

(declare-fun d!30931 () Bool)

(declare-fun lt!56901 () Bool)

(assert (=> d!30931 (= lt!56901 (select (content!113 (toList!792 lt!56403)) lt!56299))))

(declare-fun e!71759 () Bool)

(assert (=> d!30931 (= lt!56901 e!71759)))

(declare-fun res!54568 () Bool)

(assert (=> d!30931 (=> (not res!54568) (not e!71759))))

(assert (=> d!30931 (= res!54568 ((_ is Cons!1623) (toList!792 lt!56403)))))

(assert (=> d!30931 (= (contains!829 (toList!792 lt!56403) lt!56299) lt!56901)))

(declare-fun b!110342 () Bool)

(declare-fun e!71760 () Bool)

(assert (=> b!110342 (= e!71759 e!71760)))

(declare-fun res!54569 () Bool)

(assert (=> b!110342 (=> res!54569 e!71760)))

(assert (=> b!110342 (= res!54569 (= (h!2222 (toList!792 lt!56403)) lt!56299))))

(declare-fun b!110343 () Bool)

(assert (=> b!110343 (= e!71760 (contains!829 (t!5755 (toList!792 lt!56403)) lt!56299))))

(assert (= (and d!30931 res!54568) b!110342))

(assert (= (and b!110342 (not res!54569)) b!110343))

(declare-fun m!124897 () Bool)

(assert (=> d!30931 m!124897))

(declare-fun m!124899 () Bool)

(assert (=> d!30931 m!124899))

(declare-fun m!124901 () Bool)

(assert (=> b!110343 m!124901))

(assert (=> b!109653 d!30931))

(declare-fun d!30933 () Bool)

(declare-fun e!71762 () Bool)

(assert (=> d!30933 e!71762))

(declare-fun res!54570 () Bool)

(assert (=> d!30933 (=> res!54570 e!71762)))

(declare-fun lt!56902 () Bool)

(assert (=> d!30933 (= res!54570 (not lt!56902))))

(declare-fun lt!56903 () Bool)

(assert (=> d!30933 (= lt!56902 lt!56903)))

(declare-fun lt!56904 () Unit!3390)

(declare-fun e!71761 () Unit!3390)

(assert (=> d!30933 (= lt!56904 e!71761)))

(declare-fun c!19561 () Bool)

(assert (=> d!30933 (= c!19561 lt!56903)))

(assert (=> d!30933 (= lt!56903 (containsKey!160 (toList!792 lt!56388) (_1!1209 lt!56299)))))

(assert (=> d!30933 (= (contains!827 lt!56388 (_1!1209 lt!56299)) lt!56902)))

(declare-fun b!110344 () Bool)

(declare-fun lt!56905 () Unit!3390)

(assert (=> b!110344 (= e!71761 lt!56905)))

(assert (=> b!110344 (= lt!56905 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 lt!56388) (_1!1209 lt!56299)))))

(assert (=> b!110344 (isDefined!110 (getValueByKey!156 (toList!792 lt!56388) (_1!1209 lt!56299)))))

(declare-fun b!110345 () Bool)

(declare-fun Unit!3419 () Unit!3390)

(assert (=> b!110345 (= e!71761 Unit!3419)))

(declare-fun b!110346 () Bool)

(assert (=> b!110346 (= e!71762 (isDefined!110 (getValueByKey!156 (toList!792 lt!56388) (_1!1209 lt!56299))))))

(assert (= (and d!30933 c!19561) b!110344))

(assert (= (and d!30933 (not c!19561)) b!110345))

(assert (= (and d!30933 (not res!54570)) b!110346))

(declare-fun m!124903 () Bool)

(assert (=> d!30933 m!124903))

(declare-fun m!124905 () Bool)

(assert (=> b!110344 m!124905))

(assert (=> b!110344 m!124037))

(assert (=> b!110344 m!124037))

(declare-fun m!124907 () Bool)

(assert (=> b!110344 m!124907))

(assert (=> b!110346 m!124037))

(assert (=> b!110346 m!124037))

(assert (=> b!110346 m!124907))

(assert (=> d!30745 d!30933))

(declare-fun b!110349 () Bool)

(declare-fun e!71764 () Option!162)

(assert (=> b!110349 (= e!71764 (getValueByKey!156 (t!5755 lt!56387) (_1!1209 lt!56299)))))

(declare-fun d!30935 () Bool)

(declare-fun c!19562 () Bool)

(assert (=> d!30935 (= c!19562 (and ((_ is Cons!1623) lt!56387) (= (_1!1209 (h!2222 lt!56387)) (_1!1209 lt!56299))))))

(declare-fun e!71763 () Option!162)

(assert (=> d!30935 (= (getValueByKey!156 lt!56387 (_1!1209 lt!56299)) e!71763)))

(declare-fun b!110347 () Bool)

(assert (=> b!110347 (= e!71763 (Some!161 (_2!1209 (h!2222 lt!56387))))))

(declare-fun b!110348 () Bool)

(assert (=> b!110348 (= e!71763 e!71764)))

(declare-fun c!19563 () Bool)

(assert (=> b!110348 (= c!19563 (and ((_ is Cons!1623) lt!56387) (not (= (_1!1209 (h!2222 lt!56387)) (_1!1209 lt!56299)))))))

(declare-fun b!110350 () Bool)

(assert (=> b!110350 (= e!71764 None!160)))

(assert (= (and d!30935 c!19562) b!110347))

(assert (= (and d!30935 (not c!19562)) b!110348))

(assert (= (and b!110348 c!19563) b!110349))

(assert (= (and b!110348 (not c!19563)) b!110350))

(declare-fun m!124909 () Bool)

(assert (=> b!110349 m!124909))

(assert (=> d!30745 d!30935))

(declare-fun d!30937 () Bool)

(assert (=> d!30937 (= (getValueByKey!156 lt!56387 (_1!1209 lt!56299)) (Some!161 (_2!1209 lt!56299)))))

(declare-fun lt!56906 () Unit!3390)

(assert (=> d!30937 (= lt!56906 (choose!691 lt!56387 (_1!1209 lt!56299) (_2!1209 lt!56299)))))

(declare-fun e!71765 () Bool)

(assert (=> d!30937 e!71765))

(declare-fun res!54571 () Bool)

(assert (=> d!30937 (=> (not res!54571) (not e!71765))))

(assert (=> d!30937 (= res!54571 (isStrictlySorted!306 lt!56387))))

(assert (=> d!30937 (= (lemmaContainsTupThenGetReturnValue!75 lt!56387 (_1!1209 lt!56299) (_2!1209 lt!56299)) lt!56906)))

(declare-fun b!110351 () Bool)

(declare-fun res!54572 () Bool)

(assert (=> b!110351 (=> (not res!54572) (not e!71765))))

(assert (=> b!110351 (= res!54572 (containsKey!160 lt!56387 (_1!1209 lt!56299)))))

(declare-fun b!110352 () Bool)

(assert (=> b!110352 (= e!71765 (contains!829 lt!56387 (tuple2!2397 (_1!1209 lt!56299) (_2!1209 lt!56299))))))

(assert (= (and d!30937 res!54571) b!110351))

(assert (= (and b!110351 res!54572) b!110352))

(assert (=> d!30937 m!124031))

(declare-fun m!124911 () Bool)

(assert (=> d!30937 m!124911))

(declare-fun m!124913 () Bool)

(assert (=> d!30937 m!124913))

(declare-fun m!124915 () Bool)

(assert (=> b!110351 m!124915))

(declare-fun m!124917 () Bool)

(assert (=> b!110352 m!124917))

(assert (=> d!30745 d!30937))

(declare-fun e!71767 () List!1627)

(declare-fun c!19567 () Bool)

(declare-fun b!110353 () Bool)

(declare-fun c!19564 () Bool)

(assert (=> b!110353 (= e!71767 (ite c!19564 (t!5755 (toList!792 (+!139 lt!56303 lt!56300))) (ite c!19567 (Cons!1623 (h!2222 (toList!792 (+!139 lt!56303 lt!56300))) (t!5755 (toList!792 (+!139 lt!56303 lt!56300)))) Nil!1624)))))

(declare-fun b!110354 () Bool)

(assert (=> b!110354 (= e!71767 (insertStrictlySorted!78 (t!5755 (toList!792 (+!139 lt!56303 lt!56300))) (_1!1209 lt!56299) (_2!1209 lt!56299)))))

(declare-fun bm!11777 () Bool)

(declare-fun call!11782 () List!1627)

(declare-fun call!11780 () List!1627)

(assert (=> bm!11777 (= call!11782 call!11780)))

(declare-fun b!110355 () Bool)

(declare-fun e!71766 () List!1627)

(declare-fun call!11781 () List!1627)

(assert (=> b!110355 (= e!71766 call!11781)))

(declare-fun b!110356 () Bool)

(assert (=> b!110356 (= c!19567 (and ((_ is Cons!1623) (toList!792 (+!139 lt!56303 lt!56300))) (bvsgt (_1!1209 (h!2222 (toList!792 (+!139 lt!56303 lt!56300)))) (_1!1209 lt!56299))))))

(declare-fun e!71769 () List!1627)

(assert (=> b!110356 (= e!71769 e!71766)))

(declare-fun b!110357 () Bool)

(declare-fun res!54574 () Bool)

(declare-fun e!71768 () Bool)

(assert (=> b!110357 (=> (not res!54574) (not e!71768))))

(declare-fun lt!56907 () List!1627)

(assert (=> b!110357 (= res!54574 (containsKey!160 lt!56907 (_1!1209 lt!56299)))))

(declare-fun b!110359 () Bool)

(assert (=> b!110359 (= e!71766 call!11781)))

(declare-fun bm!11778 () Bool)

(assert (=> bm!11778 (= call!11781 call!11782)))

(declare-fun b!110360 () Bool)

(assert (=> b!110360 (= e!71769 call!11782)))

(declare-fun b!110361 () Bool)

(declare-fun e!71770 () List!1627)

(assert (=> b!110361 (= e!71770 e!71769)))

(assert (=> b!110361 (= c!19564 (and ((_ is Cons!1623) (toList!792 (+!139 lt!56303 lt!56300))) (= (_1!1209 (h!2222 (toList!792 (+!139 lt!56303 lt!56300)))) (_1!1209 lt!56299))))))

(declare-fun d!30939 () Bool)

(assert (=> d!30939 e!71768))

(declare-fun res!54573 () Bool)

(assert (=> d!30939 (=> (not res!54573) (not e!71768))))

(assert (=> d!30939 (= res!54573 (isStrictlySorted!306 lt!56907))))

(assert (=> d!30939 (= lt!56907 e!71770)))

(declare-fun c!19566 () Bool)

(assert (=> d!30939 (= c!19566 (and ((_ is Cons!1623) (toList!792 (+!139 lt!56303 lt!56300))) (bvslt (_1!1209 (h!2222 (toList!792 (+!139 lt!56303 lt!56300)))) (_1!1209 lt!56299))))))

(assert (=> d!30939 (isStrictlySorted!306 (toList!792 (+!139 lt!56303 lt!56300)))))

(assert (=> d!30939 (= (insertStrictlySorted!78 (toList!792 (+!139 lt!56303 lt!56300)) (_1!1209 lt!56299) (_2!1209 lt!56299)) lt!56907)))

(declare-fun b!110358 () Bool)

(assert (=> b!110358 (= e!71770 call!11780)))

(declare-fun b!110362 () Bool)

(assert (=> b!110362 (= e!71768 (contains!829 lt!56907 (tuple2!2397 (_1!1209 lt!56299) (_2!1209 lt!56299))))))

(declare-fun bm!11779 () Bool)

(assert (=> bm!11779 (= call!11780 ($colon$colon!82 e!71767 (ite c!19566 (h!2222 (toList!792 (+!139 lt!56303 lt!56300))) (tuple2!2397 (_1!1209 lt!56299) (_2!1209 lt!56299)))))))

(declare-fun c!19565 () Bool)

(assert (=> bm!11779 (= c!19565 c!19566)))

(assert (= (and d!30939 c!19566) b!110358))

(assert (= (and d!30939 (not c!19566)) b!110361))

(assert (= (and b!110361 c!19564) b!110360))

(assert (= (and b!110361 (not c!19564)) b!110356))

(assert (= (and b!110356 c!19567) b!110355))

(assert (= (and b!110356 (not c!19567)) b!110359))

(assert (= (or b!110355 b!110359) bm!11778))

(assert (= (or b!110360 bm!11778) bm!11777))

(assert (= (or b!110358 bm!11777) bm!11779))

(assert (= (and bm!11779 c!19565) b!110354))

(assert (= (and bm!11779 (not c!19565)) b!110353))

(assert (= (and d!30939 res!54573) b!110357))

(assert (= (and b!110357 res!54574) b!110362))

(declare-fun m!124919 () Bool)

(assert (=> d!30939 m!124919))

(declare-fun m!124921 () Bool)

(assert (=> d!30939 m!124921))

(declare-fun m!124923 () Bool)

(assert (=> b!110357 m!124923))

(declare-fun m!124925 () Bool)

(assert (=> bm!11779 m!124925))

(declare-fun m!124927 () Bool)

(assert (=> b!110354 m!124927))

(declare-fun m!124929 () Bool)

(assert (=> b!110362 m!124929))

(assert (=> d!30745 d!30939))

(declare-fun d!30941 () Bool)

(declare-fun e!71773 () Bool)

(assert (=> d!30941 e!71773))

(declare-fun c!19570 () Bool)

(assert (=> d!30941 (= c!19570 (and (not (= (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!30941 true))

(declare-fun _$29!147 () Unit!3390)

(assert (=> d!30941 (= (choose!690 (_keys!4339 (v!2920 (underlying!363 thiss!992))) (_values!2609 (v!2920 (underlying!363 thiss!992))) (mask!6793 (v!2920 (underlying!363 thiss!992))) (extraKeys!2423 (v!2920 (underlying!363 thiss!992))) (zeroValue!2497 (v!2920 (underlying!363 thiss!992))) (minValue!2497 (v!2920 (underlying!363 thiss!992))) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2626 (v!2920 (underlying!363 thiss!992)))) _$29!147)))

(declare-fun b!110367 () Bool)

(assert (=> b!110367 (= e!71773 (arrayContainsKey!0 (_keys!4339 (v!2920 (underlying!363 thiss!992))) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!110368 () Bool)

(assert (=> b!110368 (= e!71773 (ite (= (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2423 (v!2920 (underlying!363 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2423 (v!2920 (underlying!363 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!30941 c!19570) b!110367))

(assert (= (and d!30941 (not c!19570)) b!110368))

(assert (=> b!110367 m!123865))

(assert (=> b!110367 m!123889))

(assert (=> d!30773 d!30941))

(assert (=> d!30773 d!30749))

(assert (=> bm!11620 d!30857))

(declare-fun d!30943 () Bool)

(declare-fun res!54575 () Bool)

(declare-fun e!71774 () Bool)

(assert (=> d!30943 (=> res!54575 e!71774)))

(assert (=> d!30943 (= res!54575 (= (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))

(assert (=> d!30943 (= (arrayContainsKey!0 (_keys!4339 (v!2920 (underlying!363 thiss!992))) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) e!71774)))

(declare-fun b!110369 () Bool)

(declare-fun e!71775 () Bool)

(assert (=> b!110369 (= e!71774 e!71775)))

(declare-fun res!54576 () Bool)

(assert (=> b!110369 (=> (not res!54576) (not e!71775))))

(assert (=> b!110369 (= res!54576 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2326 (_keys!4339 (v!2920 (underlying!363 thiss!992))))))))

(declare-fun b!110370 () Bool)

(assert (=> b!110370 (= e!71775 (arrayContainsKey!0 (_keys!4339 (v!2920 (underlying!363 thiss!992))) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!30943 (not res!54575)) b!110369))

(assert (= (and b!110369 res!54576) b!110370))

(assert (=> d!30943 m!124577))

(assert (=> b!110370 m!123865))

(declare-fun m!124931 () Bool)

(assert (=> b!110370 m!124931))

(assert (=> b!109845 d!30943))

(declare-fun d!30945 () Bool)

(assert (=> d!30945 (isDefined!110 (getValueByKey!156 (toList!792 lt!56298) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))

(declare-fun lt!56910 () Unit!3390)

(declare-fun choose!699 (List!1627 (_ BitVec 64)) Unit!3390)

(assert (=> d!30945 (= lt!56910 (choose!699 (toList!792 lt!56298) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))

(declare-fun e!71778 () Bool)

(assert (=> d!30945 e!71778))

(declare-fun res!54579 () Bool)

(assert (=> d!30945 (=> (not res!54579) (not e!71778))))

(assert (=> d!30945 (= res!54579 (isStrictlySorted!306 (toList!792 lt!56298)))))

(assert (=> d!30945 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 lt!56298) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) lt!56910)))

(declare-fun b!110373 () Bool)

(assert (=> b!110373 (= e!71778 (containsKey!160 (toList!792 lt!56298) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))

(assert (= (and d!30945 res!54579) b!110373))

(assert (=> d!30945 m!123865))

(assert (=> d!30945 m!124119))

(assert (=> d!30945 m!124119))

(assert (=> d!30945 m!124121))

(assert (=> d!30945 m!123865))

(declare-fun m!124933 () Bool)

(assert (=> d!30945 m!124933))

(declare-fun m!124935 () Bool)

(assert (=> d!30945 m!124935))

(assert (=> b!110373 m!123865))

(assert (=> b!110373 m!124115))

(assert (=> b!109696 d!30945))

(assert (=> b!109696 d!30917))

(assert (=> b!109696 d!30919))

(declare-fun d!30947 () Bool)

(declare-fun e!71779 () Bool)

(assert (=> d!30947 e!71779))

(declare-fun res!54580 () Bool)

(assert (=> d!30947 (=> (not res!54580) (not e!71779))))

(declare-fun lt!56912 () ListLongMap!1553)

(assert (=> d!30947 (= res!54580 (contains!827 lt!56912 (_1!1209 (ite (or c!19448 c!19451) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(declare-fun lt!56911 () List!1627)

(assert (=> d!30947 (= lt!56912 (ListLongMap!1554 lt!56911))))

(declare-fun lt!56913 () Unit!3390)

(declare-fun lt!56914 () Unit!3390)

(assert (=> d!30947 (= lt!56913 lt!56914)))

(assert (=> d!30947 (= (getValueByKey!156 lt!56911 (_1!1209 (ite (or c!19448 c!19451) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))) (Some!161 (_2!1209 (ite (or c!19448 c!19451) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(assert (=> d!30947 (= lt!56914 (lemmaContainsTupThenGetReturnValue!75 lt!56911 (_1!1209 (ite (or c!19448 c!19451) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))) (_2!1209 (ite (or c!19448 c!19451) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(assert (=> d!30947 (= lt!56911 (insertStrictlySorted!78 (toList!792 (ite c!19448 call!11713 (ite c!19451 call!11714 call!11715))) (_1!1209 (ite (or c!19448 c!19451) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))) (_2!1209 (ite (or c!19448 c!19451) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(assert (=> d!30947 (= (+!139 (ite c!19448 call!11713 (ite c!19451 call!11714 call!11715)) (ite (or c!19448 c!19451) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))) lt!56912)))

(declare-fun b!110374 () Bool)

(declare-fun res!54581 () Bool)

(assert (=> b!110374 (=> (not res!54581) (not e!71779))))

(assert (=> b!110374 (= res!54581 (= (getValueByKey!156 (toList!792 lt!56912) (_1!1209 (ite (or c!19448 c!19451) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))) (Some!161 (_2!1209 (ite (or c!19448 c!19451) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))))

(declare-fun b!110375 () Bool)

(assert (=> b!110375 (= e!71779 (contains!829 (toList!792 lt!56912) (ite (or c!19448 c!19451) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(assert (= (and d!30947 res!54580) b!110374))

(assert (= (and b!110374 res!54581) b!110375))

(declare-fun m!124937 () Bool)

(assert (=> d!30947 m!124937))

(declare-fun m!124939 () Bool)

(assert (=> d!30947 m!124939))

(declare-fun m!124941 () Bool)

(assert (=> d!30947 m!124941))

(declare-fun m!124943 () Bool)

(assert (=> d!30947 m!124943))

(declare-fun m!124945 () Bool)

(assert (=> b!110374 m!124945))

(declare-fun m!124947 () Bool)

(assert (=> b!110375 m!124947))

(assert (=> bm!11716 d!30947))

(declare-fun bm!11782 () Bool)

(declare-fun call!11785 () (_ BitVec 32))

(assert (=> bm!11782 (= call!11785 (arrayCountValidKeys!0 (_keys!4339 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2326 (_keys!4339 newMap!16))))))

(declare-fun b!110384 () Bool)

(declare-fun e!71784 () (_ BitVec 32))

(assert (=> b!110384 (= e!71784 call!11785)))

(declare-fun b!110385 () Bool)

(assert (=> b!110385 (= e!71784 (bvadd #b00000000000000000000000000000001 call!11785))))

(declare-fun b!110386 () Bool)

(declare-fun e!71785 () (_ BitVec 32))

(assert (=> b!110386 (= e!71785 #b00000000000000000000000000000000)))

(declare-fun d!30949 () Bool)

(declare-fun lt!56917 () (_ BitVec 32))

(assert (=> d!30949 (and (bvsge lt!56917 #b00000000000000000000000000000000) (bvsle lt!56917 (bvsub (size!2326 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!30949 (= lt!56917 e!71785)))

(declare-fun c!19576 () Bool)

(assert (=> d!30949 (= c!19576 (bvsge #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))))))

(assert (=> d!30949 (and (bvsle #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2326 (_keys!4339 newMap!16)) (size!2326 (_keys!4339 newMap!16))))))

(assert (=> d!30949 (= (arrayCountValidKeys!0 (_keys!4339 newMap!16) #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))) lt!56917)))

(declare-fun b!110387 () Bool)

(assert (=> b!110387 (= e!71785 e!71784)))

(declare-fun c!19575 () Bool)

(assert (=> b!110387 (= c!19575 (validKeyInArray!0 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!30949 c!19576) b!110386))

(assert (= (and d!30949 (not c!19576)) b!110387))

(assert (= (and b!110387 c!19575) b!110385))

(assert (= (and b!110387 (not c!19575)) b!110384))

(assert (= (or b!110385 b!110384) bm!11782))

(declare-fun m!124949 () Bool)

(assert (=> bm!11782 m!124949))

(assert (=> b!110387 m!124447))

(assert (=> b!110387 m!124447))

(assert (=> b!110387 m!124463))

(assert (=> b!109831 d!30949))

(declare-fun d!30951 () Bool)

(assert (=> d!30951 (= (map!1281 (_2!1210 lt!56499)) (getCurrentListMap!469 (_keys!4339 (_2!1210 lt!56499)) (_values!2609 (_2!1210 lt!56499)) (mask!6793 (_2!1210 lt!56499)) (extraKeys!2423 (_2!1210 lt!56499)) (zeroValue!2497 (_2!1210 lt!56499)) (minValue!2497 (_2!1210 lt!56499)) #b00000000000000000000000000000000 (defaultEntry!2626 (_2!1210 lt!56499))))))

(declare-fun bs!4523 () Bool)

(assert (= bs!4523 d!30951))

(declare-fun m!124951 () Bool)

(assert (=> bs!4523 m!124951))

(assert (=> bm!11677 d!30951))

(assert (=> b!109682 d!30821))

(declare-fun d!30953 () Bool)

(assert (=> d!30953 (= (apply!100 lt!56425 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1350 (getValueByKey!156 (toList!792 lt!56425) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!4524 () Bool)

(assert (= bs!4524 d!30953))

(assert (=> bs!4524 m!124087))

(assert (=> bs!4524 m!124893))

(assert (=> bs!4524 m!124893))

(declare-fun m!124953 () Bool)

(assert (=> bs!4524 m!124953))

(assert (=> b!109679 d!30953))

(assert (=> b!109679 d!30883))

(declare-fun d!30955 () Bool)

(assert (=> d!30955 (= (apply!100 lt!56589 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1350 (getValueByKey!156 (toList!792 lt!56589) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4525 () Bool)

(assert (= bs!4525 d!30955))

(assert (=> bs!4525 m!124735))

(assert (=> bs!4525 m!124735))

(declare-fun m!124955 () Bool)

(assert (=> bs!4525 m!124955))

(assert (=> b!109928 d!30955))

(declare-fun d!30957 () Bool)

(assert (=> d!30957 (= (validKeyInArray!0 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) (and (not (= (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!109866 d!30957))

(assert (=> b!109819 d!30839))

(declare-fun d!30959 () Bool)

(declare-fun e!71787 () Bool)

(assert (=> d!30959 e!71787))

(declare-fun res!54582 () Bool)

(assert (=> d!30959 (=> res!54582 e!71787)))

(declare-fun lt!56918 () Bool)

(assert (=> d!30959 (= res!54582 (not lt!56918))))

(declare-fun lt!56919 () Bool)

(assert (=> d!30959 (= lt!56918 lt!56919)))

(declare-fun lt!56920 () Unit!3390)

(declare-fun e!71786 () Unit!3390)

(assert (=> d!30959 (= lt!56920 e!71786)))

(declare-fun c!19577 () Bool)

(assert (=> d!30959 (= c!19577 lt!56919)))

(assert (=> d!30959 (= lt!56919 (containsKey!160 (toList!792 call!11685) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))

(assert (=> d!30959 (= (contains!827 call!11685 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) lt!56918)))

(declare-fun b!110388 () Bool)

(declare-fun lt!56921 () Unit!3390)

(assert (=> b!110388 (= e!71786 lt!56921)))

(assert (=> b!110388 (= lt!56921 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 call!11685) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))

(assert (=> b!110388 (isDefined!110 (getValueByKey!156 (toList!792 call!11685) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))

(declare-fun b!110389 () Bool)

(declare-fun Unit!3420 () Unit!3390)

(assert (=> b!110389 (= e!71786 Unit!3420)))

(declare-fun b!110390 () Bool)

(assert (=> b!110390 (= e!71787 (isDefined!110 (getValueByKey!156 (toList!792 call!11685) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355))))))

(assert (= (and d!30959 c!19577) b!110388))

(assert (= (and d!30959 (not c!19577)) b!110389))

(assert (= (and d!30959 (not res!54582)) b!110390))

(assert (=> d!30959 m!123865))

(declare-fun m!124957 () Bool)

(assert (=> d!30959 m!124957))

(assert (=> b!110388 m!123865))

(declare-fun m!124959 () Bool)

(assert (=> b!110388 m!124959))

(assert (=> b!110388 m!123865))

(declare-fun m!124961 () Bool)

(assert (=> b!110388 m!124961))

(assert (=> b!110388 m!124961))

(declare-fun m!124963 () Bool)

(assert (=> b!110388 m!124963))

(assert (=> b!110390 m!123865))

(assert (=> b!110390 m!124961))

(assert (=> b!110390 m!124961))

(assert (=> b!110390 m!124963))

(assert (=> b!109805 d!30959))

(assert (=> bm!11676 d!30791))

(assert (=> b!109909 d!30821))

(assert (=> b!109863 d!30957))

(declare-fun d!30961 () Bool)

(declare-fun e!71788 () Bool)

(assert (=> d!30961 e!71788))

(declare-fun res!54583 () Bool)

(assert (=> d!30961 (=> (not res!54583) (not e!71788))))

(declare-fun lt!56923 () ListLongMap!1553)

(assert (=> d!30961 (= res!54583 (contains!827 lt!56923 (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))

(declare-fun lt!56922 () List!1627)

(assert (=> d!30961 (= lt!56923 (ListLongMap!1554 lt!56922))))

(declare-fun lt!56924 () Unit!3390)

(declare-fun lt!56925 () Unit!3390)

(assert (=> d!30961 (= lt!56924 lt!56925)))

(assert (=> d!30961 (= (getValueByKey!156 lt!56922 (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))) (Some!161 (_2!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))

(assert (=> d!30961 (= lt!56925 (lemmaContainsTupThenGetReturnValue!75 lt!56922 (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)) (_2!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))

(assert (=> d!30961 (= lt!56922 (insertStrictlySorted!78 (toList!792 call!11677) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)) (_2!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))

(assert (=> d!30961 (= (+!139 call!11677 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)) lt!56923)))

(declare-fun b!110391 () Bool)

(declare-fun res!54584 () Bool)

(assert (=> b!110391 (=> (not res!54584) (not e!71788))))

(assert (=> b!110391 (= res!54584 (= (getValueByKey!156 (toList!792 lt!56923) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))) (Some!161 (_2!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))))))

(declare-fun b!110392 () Bool)

(assert (=> b!110392 (= e!71788 (contains!829 (toList!792 lt!56923) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))))

(assert (= (and d!30961 res!54583) b!110391))

(assert (= (and b!110391 res!54584) b!110392))

(declare-fun m!124965 () Bool)

(assert (=> d!30961 m!124965))

(declare-fun m!124967 () Bool)

(assert (=> d!30961 m!124967))

(declare-fun m!124969 () Bool)

(assert (=> d!30961 m!124969))

(declare-fun m!124971 () Bool)

(assert (=> d!30961 m!124971))

(declare-fun m!124973 () Bool)

(assert (=> b!110391 m!124973))

(declare-fun m!124975 () Bool)

(assert (=> b!110392 m!124975))

(assert (=> b!109801 d!30961))

(declare-fun d!30963 () Bool)

(assert (=> d!30963 (= (apply!100 lt!56576 lt!56580) (get!1350 (getValueByKey!156 (toList!792 lt!56576) lt!56580)))))

(declare-fun bs!4526 () Bool)

(assert (= bs!4526 d!30963))

(declare-fun m!124977 () Bool)

(assert (=> bs!4526 m!124977))

(assert (=> bs!4526 m!124977))

(declare-fun m!124979 () Bool)

(assert (=> bs!4526 m!124979))

(assert (=> b!109926 d!30963))

(declare-fun d!30965 () Bool)

(declare-fun e!71790 () Bool)

(assert (=> d!30965 e!71790))

(declare-fun res!54585 () Bool)

(assert (=> d!30965 (=> res!54585 e!71790)))

(declare-fun lt!56926 () Bool)

(assert (=> d!30965 (= res!54585 (not lt!56926))))

(declare-fun lt!56927 () Bool)

(assert (=> d!30965 (= lt!56926 lt!56927)))

(declare-fun lt!56928 () Unit!3390)

(declare-fun e!71789 () Unit!3390)

(assert (=> d!30965 (= lt!56928 e!71789)))

(declare-fun c!19578 () Bool)

(assert (=> d!30965 (= c!19578 lt!56927)))

(assert (=> d!30965 (= lt!56927 (containsKey!160 (toList!792 (+!139 lt!56577 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))) lt!56574))))

(assert (=> d!30965 (= (contains!827 (+!139 lt!56577 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))) lt!56574) lt!56926)))

(declare-fun b!110393 () Bool)

(declare-fun lt!56929 () Unit!3390)

(assert (=> b!110393 (= e!71789 lt!56929)))

(assert (=> b!110393 (= lt!56929 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 (+!139 lt!56577 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))) lt!56574))))

(assert (=> b!110393 (isDefined!110 (getValueByKey!156 (toList!792 (+!139 lt!56577 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))) lt!56574))))

(declare-fun b!110394 () Bool)

(declare-fun Unit!3421 () Unit!3390)

(assert (=> b!110394 (= e!71789 Unit!3421)))

(declare-fun b!110395 () Bool)

(assert (=> b!110395 (= e!71790 (isDefined!110 (getValueByKey!156 (toList!792 (+!139 lt!56577 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))) lt!56574)))))

(assert (= (and d!30965 c!19578) b!110393))

(assert (= (and d!30965 (not c!19578)) b!110394))

(assert (= (and d!30965 (not res!54585)) b!110395))

(declare-fun m!124981 () Bool)

(assert (=> d!30965 m!124981))

(declare-fun m!124983 () Bool)

(assert (=> b!110393 m!124983))

(declare-fun m!124985 () Bool)

(assert (=> b!110393 m!124985))

(assert (=> b!110393 m!124985))

(declare-fun m!124987 () Bool)

(assert (=> b!110393 m!124987))

(assert (=> b!110395 m!124985))

(assert (=> b!110395 m!124985))

(assert (=> b!110395 m!124987))

(assert (=> b!109926 d!30965))

(declare-fun d!30967 () Bool)

(assert (=> d!30967 (contains!827 (+!139 lt!56577 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))) lt!56574)))

(declare-fun lt!56932 () Unit!3390)

(declare-fun choose!700 (ListLongMap!1553 (_ BitVec 64) V!3241 (_ BitVec 64)) Unit!3390)

(assert (=> d!30967 (= lt!56932 (choose!700 lt!56577 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))) lt!56574))))

(assert (=> d!30967 (contains!827 lt!56577 lt!56574)))

(assert (=> d!30967 (= (addStillContains!76 lt!56577 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))) lt!56574) lt!56932)))

(declare-fun bs!4527 () Bool)

(assert (= bs!4527 d!30967))

(assert (=> bs!4527 m!124231))

(assert (=> bs!4527 m!124231))

(assert (=> bs!4527 m!124233))

(declare-fun m!124989 () Bool)

(assert (=> bs!4527 m!124989))

(declare-fun m!124991 () Bool)

(assert (=> bs!4527 m!124991))

(assert (=> b!109926 d!30967))

(declare-fun d!30969 () Bool)

(assert (=> d!30969 (= (apply!100 (+!139 lt!56576 (tuple2!2397 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992))))) lt!56580) (apply!100 lt!56576 lt!56580))))

(declare-fun lt!56935 () Unit!3390)

(declare-fun choose!701 (ListLongMap!1553 (_ BitVec 64) V!3241 (_ BitVec 64)) Unit!3390)

(assert (=> d!30969 (= lt!56935 (choose!701 lt!56576 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992))) lt!56580))))

(declare-fun e!71793 () Bool)

(assert (=> d!30969 e!71793))

(declare-fun res!54588 () Bool)

(assert (=> d!30969 (=> (not res!54588) (not e!71793))))

(assert (=> d!30969 (= res!54588 (contains!827 lt!56576 lt!56580))))

(assert (=> d!30969 (= (addApplyDifferent!76 lt!56576 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992))) lt!56580) lt!56935)))

(declare-fun b!110400 () Bool)

(assert (=> b!110400 (= e!71793 (not (= lt!56580 lt!56587)))))

(assert (= (and d!30969 res!54588) b!110400))

(assert (=> d!30969 m!124219))

(assert (=> d!30969 m!124243))

(declare-fun m!124993 () Bool)

(assert (=> d!30969 m!124993))

(declare-fun m!124995 () Bool)

(assert (=> d!30969 m!124995))

(assert (=> d!30969 m!124221))

(assert (=> d!30969 m!124219))

(assert (=> b!109926 d!30969))

(declare-fun d!30971 () Bool)

(assert (=> d!30971 (= (apply!100 (+!139 lt!56592 (tuple2!2397 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))) lt!56578) (apply!100 lt!56592 lt!56578))))

(declare-fun lt!56936 () Unit!3390)

(assert (=> d!30971 (= lt!56936 (choose!701 lt!56592 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))) lt!56578))))

(declare-fun e!71794 () Bool)

(assert (=> d!30971 e!71794))

(declare-fun res!54589 () Bool)

(assert (=> d!30971 (=> (not res!54589) (not e!71794))))

(assert (=> d!30971 (= res!54589 (contains!827 lt!56592 lt!56578))))

(assert (=> d!30971 (= (addApplyDifferent!76 lt!56592 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))) lt!56578) lt!56936)))

(declare-fun b!110401 () Bool)

(assert (=> b!110401 (= e!71794 (not (= lt!56578 lt!56583)))))

(assert (= (and d!30971 res!54589) b!110401))

(assert (=> d!30971 m!124223))

(assert (=> d!30971 m!124225))

(declare-fun m!124997 () Bool)

(assert (=> d!30971 m!124997))

(declare-fun m!124999 () Bool)

(assert (=> d!30971 m!124999))

(assert (=> d!30971 m!124239))

(assert (=> d!30971 m!124223))

(assert (=> b!109926 d!30971))

(declare-fun d!30973 () Bool)

(declare-fun e!71795 () Bool)

(assert (=> d!30973 e!71795))

(declare-fun res!54590 () Bool)

(assert (=> d!30973 (=> (not res!54590) (not e!71795))))

(declare-fun lt!56938 () ListLongMap!1553)

(assert (=> d!30973 (= res!54590 (contains!827 lt!56938 (_1!1209 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun lt!56937 () List!1627)

(assert (=> d!30973 (= lt!56938 (ListLongMap!1554 lt!56937))))

(declare-fun lt!56939 () Unit!3390)

(declare-fun lt!56940 () Unit!3390)

(assert (=> d!30973 (= lt!56939 lt!56940)))

(assert (=> d!30973 (= (getValueByKey!156 lt!56937 (_1!1209 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))) (Some!161 (_2!1209 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(assert (=> d!30973 (= lt!56940 (lemmaContainsTupThenGetReturnValue!75 lt!56937 (_1!1209 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))) (_2!1209 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(assert (=> d!30973 (= lt!56937 (insertStrictlySorted!78 (toList!792 lt!56577) (_1!1209 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))) (_2!1209 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(assert (=> d!30973 (= (+!139 lt!56577 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))) lt!56938)))

(declare-fun b!110402 () Bool)

(declare-fun res!54591 () Bool)

(assert (=> b!110402 (=> (not res!54591) (not e!71795))))

(assert (=> b!110402 (= res!54591 (= (getValueByKey!156 (toList!792 lt!56938) (_1!1209 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))) (Some!161 (_2!1209 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(declare-fun b!110403 () Bool)

(assert (=> b!110403 (= e!71795 (contains!829 (toList!792 lt!56938) (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))))

(assert (= (and d!30973 res!54590) b!110402))

(assert (= (and b!110402 res!54591) b!110403))

(declare-fun m!125001 () Bool)

(assert (=> d!30973 m!125001))

(declare-fun m!125003 () Bool)

(assert (=> d!30973 m!125003))

(declare-fun m!125005 () Bool)

(assert (=> d!30973 m!125005))

(declare-fun m!125007 () Bool)

(assert (=> d!30973 m!125007))

(declare-fun m!125009 () Bool)

(assert (=> b!110402 m!125009))

(declare-fun m!125011 () Bool)

(assert (=> b!110403 m!125011))

(assert (=> b!109926 d!30973))

(declare-fun d!30975 () Bool)

(assert (=> d!30975 (= (apply!100 (+!139 lt!56581 (tuple2!2397 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992))))) lt!56585) (get!1350 (getValueByKey!156 (toList!792 (+!139 lt!56581 (tuple2!2397 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))) lt!56585)))))

(declare-fun bs!4528 () Bool)

(assert (= bs!4528 d!30975))

(declare-fun m!125013 () Bool)

(assert (=> bs!4528 m!125013))

(assert (=> bs!4528 m!125013))

(declare-fun m!125015 () Bool)

(assert (=> bs!4528 m!125015))

(assert (=> b!109926 d!30975))

(declare-fun d!30977 () Bool)

(assert (=> d!30977 (= (apply!100 (+!139 lt!56576 (tuple2!2397 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992))))) lt!56580) (get!1350 (getValueByKey!156 (toList!792 (+!139 lt!56576 (tuple2!2397 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))) lt!56580)))))

(declare-fun bs!4529 () Bool)

(assert (= bs!4529 d!30977))

(declare-fun m!125017 () Bool)

(assert (=> bs!4529 m!125017))

(assert (=> bs!4529 m!125017))

(declare-fun m!125019 () Bool)

(assert (=> bs!4529 m!125019))

(assert (=> b!109926 d!30977))

(declare-fun d!30979 () Bool)

(assert (=> d!30979 (= (apply!100 (+!139 lt!56592 (tuple2!2397 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))) lt!56578) (get!1350 (getValueByKey!156 (toList!792 (+!139 lt!56592 (tuple2!2397 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))) lt!56578)))))

(declare-fun bs!4530 () Bool)

(assert (= bs!4530 d!30979))

(declare-fun m!125021 () Bool)

(assert (=> bs!4530 m!125021))

(assert (=> bs!4530 m!125021))

(declare-fun m!125023 () Bool)

(assert (=> bs!4530 m!125023))

(assert (=> b!109926 d!30979))

(declare-fun d!30981 () Bool)

(assert (=> d!30981 (= (apply!100 lt!56581 lt!56585) (get!1350 (getValueByKey!156 (toList!792 lt!56581) lt!56585)))))

(declare-fun bs!4531 () Bool)

(assert (= bs!4531 d!30981))

(declare-fun m!125025 () Bool)

(assert (=> bs!4531 m!125025))

(assert (=> bs!4531 m!125025))

(declare-fun m!125027 () Bool)

(assert (=> bs!4531 m!125027))

(assert (=> b!109926 d!30981))

(declare-fun d!30983 () Bool)

(declare-fun e!71796 () Bool)

(assert (=> d!30983 e!71796))

(declare-fun res!54592 () Bool)

(assert (=> d!30983 (=> (not res!54592) (not e!71796))))

(declare-fun lt!56942 () ListLongMap!1553)

(assert (=> d!30983 (= res!54592 (contains!827 lt!56942 (_1!1209 (tuple2!2397 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun lt!56941 () List!1627)

(assert (=> d!30983 (= lt!56942 (ListLongMap!1554 lt!56941))))

(declare-fun lt!56943 () Unit!3390)

(declare-fun lt!56944 () Unit!3390)

(assert (=> d!30983 (= lt!56943 lt!56944)))

(assert (=> d!30983 (= (getValueByKey!156 lt!56941 (_1!1209 (tuple2!2397 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))) (Some!161 (_2!1209 (tuple2!2397 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(assert (=> d!30983 (= lt!56944 (lemmaContainsTupThenGetReturnValue!75 lt!56941 (_1!1209 (tuple2!2397 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992))))) (_2!1209 (tuple2!2397 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(assert (=> d!30983 (= lt!56941 (insertStrictlySorted!78 (toList!792 lt!56576) (_1!1209 (tuple2!2397 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992))))) (_2!1209 (tuple2!2397 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(assert (=> d!30983 (= (+!139 lt!56576 (tuple2!2397 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992))))) lt!56942)))

(declare-fun b!110404 () Bool)

(declare-fun res!54593 () Bool)

(assert (=> b!110404 (=> (not res!54593) (not e!71796))))

(assert (=> b!110404 (= res!54593 (= (getValueByKey!156 (toList!792 lt!56942) (_1!1209 (tuple2!2397 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))) (Some!161 (_2!1209 (tuple2!2397 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(declare-fun b!110405 () Bool)

(assert (=> b!110405 (= e!71796 (contains!829 (toList!792 lt!56942) (tuple2!2397 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))))

(assert (= (and d!30983 res!54592) b!110404))

(assert (= (and b!110404 res!54593) b!110405))

(declare-fun m!125029 () Bool)

(assert (=> d!30983 m!125029))

(declare-fun m!125031 () Bool)

(assert (=> d!30983 m!125031))

(declare-fun m!125033 () Bool)

(assert (=> d!30983 m!125033))

(declare-fun m!125035 () Bool)

(assert (=> d!30983 m!125035))

(declare-fun m!125037 () Bool)

(assert (=> b!110404 m!125037))

(declare-fun m!125039 () Bool)

(assert (=> b!110405 m!125039))

(assert (=> b!109926 d!30983))

(assert (=> b!109926 d!30757))

(declare-fun d!30985 () Bool)

(declare-fun e!71797 () Bool)

(assert (=> d!30985 e!71797))

(declare-fun res!54594 () Bool)

(assert (=> d!30985 (=> (not res!54594) (not e!71797))))

(declare-fun lt!56946 () ListLongMap!1553)

(assert (=> d!30985 (= res!54594 (contains!827 lt!56946 (_1!1209 (tuple2!2397 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun lt!56945 () List!1627)

(assert (=> d!30985 (= lt!56946 (ListLongMap!1554 lt!56945))))

(declare-fun lt!56947 () Unit!3390)

(declare-fun lt!56948 () Unit!3390)

(assert (=> d!30985 (= lt!56947 lt!56948)))

(assert (=> d!30985 (= (getValueByKey!156 lt!56945 (_1!1209 (tuple2!2397 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))) (Some!161 (_2!1209 (tuple2!2397 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(assert (=> d!30985 (= lt!56948 (lemmaContainsTupThenGetReturnValue!75 lt!56945 (_1!1209 (tuple2!2397 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992))))) (_2!1209 (tuple2!2397 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(assert (=> d!30985 (= lt!56945 (insertStrictlySorted!78 (toList!792 lt!56581) (_1!1209 (tuple2!2397 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992))))) (_2!1209 (tuple2!2397 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(assert (=> d!30985 (= (+!139 lt!56581 (tuple2!2397 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992))))) lt!56946)))

(declare-fun b!110406 () Bool)

(declare-fun res!54595 () Bool)

(assert (=> b!110406 (=> (not res!54595) (not e!71797))))

(assert (=> b!110406 (= res!54595 (= (getValueByKey!156 (toList!792 lt!56946) (_1!1209 (tuple2!2397 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))) (Some!161 (_2!1209 (tuple2!2397 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(declare-fun b!110407 () Bool)

(assert (=> b!110407 (= e!71797 (contains!829 (toList!792 lt!56946) (tuple2!2397 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))))

(assert (= (and d!30985 res!54594) b!110406))

(assert (= (and b!110406 res!54595) b!110407))

(declare-fun m!125041 () Bool)

(assert (=> d!30985 m!125041))

(declare-fun m!125043 () Bool)

(assert (=> d!30985 m!125043))

(declare-fun m!125045 () Bool)

(assert (=> d!30985 m!125045))

(declare-fun m!125047 () Bool)

(assert (=> d!30985 m!125047))

(declare-fun m!125049 () Bool)

(assert (=> b!110406 m!125049))

(declare-fun m!125051 () Bool)

(assert (=> b!110407 m!125051))

(assert (=> b!109926 d!30985))

(declare-fun d!30987 () Bool)

(declare-fun e!71798 () Bool)

(assert (=> d!30987 e!71798))

(declare-fun res!54596 () Bool)

(assert (=> d!30987 (=> (not res!54596) (not e!71798))))

(declare-fun lt!56950 () ListLongMap!1553)

(assert (=> d!30987 (= res!54596 (contains!827 lt!56950 (_1!1209 (tuple2!2397 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun lt!56949 () List!1627)

(assert (=> d!30987 (= lt!56950 (ListLongMap!1554 lt!56949))))

(declare-fun lt!56951 () Unit!3390)

(declare-fun lt!56952 () Unit!3390)

(assert (=> d!30987 (= lt!56951 lt!56952)))

(assert (=> d!30987 (= (getValueByKey!156 lt!56949 (_1!1209 (tuple2!2397 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))) (Some!161 (_2!1209 (tuple2!2397 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(assert (=> d!30987 (= lt!56952 (lemmaContainsTupThenGetReturnValue!75 lt!56949 (_1!1209 (tuple2!2397 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))) (_2!1209 (tuple2!2397 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(assert (=> d!30987 (= lt!56949 (insertStrictlySorted!78 (toList!792 lt!56592) (_1!1209 (tuple2!2397 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))) (_2!1209 (tuple2!2397 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(assert (=> d!30987 (= (+!139 lt!56592 (tuple2!2397 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))) lt!56950)))

(declare-fun b!110408 () Bool)

(declare-fun res!54597 () Bool)

(assert (=> b!110408 (=> (not res!54597) (not e!71798))))

(assert (=> b!110408 (= res!54597 (= (getValueByKey!156 (toList!792 lt!56950) (_1!1209 (tuple2!2397 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))) (Some!161 (_2!1209 (tuple2!2397 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(declare-fun b!110409 () Bool)

(assert (=> b!110409 (= e!71798 (contains!829 (toList!792 lt!56950) (tuple2!2397 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))))

(assert (= (and d!30987 res!54596) b!110408))

(assert (= (and b!110408 res!54597) b!110409))

(declare-fun m!125053 () Bool)

(assert (=> d!30987 m!125053))

(declare-fun m!125055 () Bool)

(assert (=> d!30987 m!125055))

(declare-fun m!125057 () Bool)

(assert (=> d!30987 m!125057))

(declare-fun m!125059 () Bool)

(assert (=> d!30987 m!125059))

(declare-fun m!125061 () Bool)

(assert (=> b!110408 m!125061))

(declare-fun m!125063 () Bool)

(assert (=> b!110409 m!125063))

(assert (=> b!109926 d!30987))

(declare-fun d!30989 () Bool)

(assert (=> d!30989 (= (apply!100 lt!56592 lt!56578) (get!1350 (getValueByKey!156 (toList!792 lt!56592) lt!56578)))))

(declare-fun bs!4532 () Bool)

(assert (= bs!4532 d!30989))

(declare-fun m!125065 () Bool)

(assert (=> bs!4532 m!125065))

(assert (=> bs!4532 m!125065))

(declare-fun m!125067 () Bool)

(assert (=> bs!4532 m!125067))

(assert (=> b!109926 d!30989))

(declare-fun d!30991 () Bool)

(assert (=> d!30991 (= (apply!100 (+!139 lt!56581 (tuple2!2397 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992))))) lt!56585) (apply!100 lt!56581 lt!56585))))

(declare-fun lt!56953 () Unit!3390)

(assert (=> d!30991 (= lt!56953 (choose!701 lt!56581 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992))) lt!56585))))

(declare-fun e!71799 () Bool)

(assert (=> d!30991 e!71799))

(declare-fun res!54598 () Bool)

(assert (=> d!30991 (=> (not res!54598) (not e!71799))))

(assert (=> d!30991 (= res!54598 (contains!827 lt!56581 lt!56585))))

(assert (=> d!30991 (= (addApplyDifferent!76 lt!56581 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992))) lt!56585) lt!56953)))

(declare-fun b!110410 () Bool)

(assert (=> b!110410 (= e!71799 (not (= lt!56585 lt!56579)))))

(assert (= (and d!30991 res!54598) b!110410))

(assert (=> d!30991 m!124215))

(assert (=> d!30991 m!124217))

(declare-fun m!125069 () Bool)

(assert (=> d!30991 m!125069))

(declare-fun m!125071 () Bool)

(assert (=> d!30991 m!125071))

(assert (=> d!30991 m!124227))

(assert (=> d!30991 m!124215))

(assert (=> b!109926 d!30991))

(declare-fun d!30993 () Bool)

(assert (=> d!30993 (= (apply!100 lt!56589 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1350 (getValueByKey!156 (toList!792 lt!56589) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4533 () Bool)

(assert (= bs!4533 d!30993))

(assert (=> bs!4533 m!124413))

(assert (=> bs!4533 m!124413))

(declare-fun m!125073 () Bool)

(assert (=> bs!4533 m!125073))

(assert (=> b!109911 d!30993))

(declare-fun condMapEmpty!4011 () Bool)

(declare-fun mapDefault!4011 () ValueCell!1004)

(assert (=> mapNonEmpty!4010 (= condMapEmpty!4011 (= mapRest!4010 ((as const (Array (_ BitVec 32) ValueCell!1004)) mapDefault!4011)))))

(declare-fun e!71800 () Bool)

(declare-fun mapRes!4011 () Bool)

(assert (=> mapNonEmpty!4010 (= tp!10040 (and e!71800 mapRes!4011))))

(declare-fun b!110412 () Bool)

(assert (=> b!110412 (= e!71800 tp_is_empty!2695)))

(declare-fun mapIsEmpty!4011 () Bool)

(assert (=> mapIsEmpty!4011 mapRes!4011))

(declare-fun mapNonEmpty!4011 () Bool)

(declare-fun tp!10041 () Bool)

(declare-fun e!71801 () Bool)

(assert (=> mapNonEmpty!4011 (= mapRes!4011 (and tp!10041 e!71801))))

(declare-fun mapValue!4011 () ValueCell!1004)

(declare-fun mapKey!4011 () (_ BitVec 32))

(declare-fun mapRest!4011 () (Array (_ BitVec 32) ValueCell!1004))

(assert (=> mapNonEmpty!4011 (= mapRest!4010 (store mapRest!4011 mapKey!4011 mapValue!4011))))

(declare-fun b!110411 () Bool)

(assert (=> b!110411 (= e!71801 tp_is_empty!2695)))

(assert (= (and mapNonEmpty!4010 condMapEmpty!4011) mapIsEmpty!4011))

(assert (= (and mapNonEmpty!4010 (not condMapEmpty!4011)) mapNonEmpty!4011))

(assert (= (and mapNonEmpty!4011 ((_ is ValueCellFull!1004) mapValue!4011)) b!110411))

(assert (= (and mapNonEmpty!4010 ((_ is ValueCellFull!1004) mapDefault!4011)) b!110412))

(declare-fun m!125075 () Bool)

(assert (=> mapNonEmpty!4011 m!125075))

(declare-fun condMapEmpty!4012 () Bool)

(declare-fun mapDefault!4012 () ValueCell!1004)

(assert (=> mapNonEmpty!4009 (= condMapEmpty!4012 (= mapRest!4009 ((as const (Array (_ BitVec 32) ValueCell!1004)) mapDefault!4012)))))

(declare-fun e!71802 () Bool)

(declare-fun mapRes!4012 () Bool)

(assert (=> mapNonEmpty!4009 (= tp!10039 (and e!71802 mapRes!4012))))

(declare-fun b!110414 () Bool)

(assert (=> b!110414 (= e!71802 tp_is_empty!2695)))

(declare-fun mapIsEmpty!4012 () Bool)

(assert (=> mapIsEmpty!4012 mapRes!4012))

(declare-fun mapNonEmpty!4012 () Bool)

(declare-fun tp!10042 () Bool)

(declare-fun e!71803 () Bool)

(assert (=> mapNonEmpty!4012 (= mapRes!4012 (and tp!10042 e!71803))))

(declare-fun mapRest!4012 () (Array (_ BitVec 32) ValueCell!1004))

(declare-fun mapValue!4012 () ValueCell!1004)

(declare-fun mapKey!4012 () (_ BitVec 32))

(assert (=> mapNonEmpty!4012 (= mapRest!4009 (store mapRest!4012 mapKey!4012 mapValue!4012))))

(declare-fun b!110413 () Bool)

(assert (=> b!110413 (= e!71803 tp_is_empty!2695)))

(assert (= (and mapNonEmpty!4009 condMapEmpty!4012) mapIsEmpty!4012))

(assert (= (and mapNonEmpty!4009 (not condMapEmpty!4012)) mapNonEmpty!4012))

(assert (= (and mapNonEmpty!4012 ((_ is ValueCellFull!1004) mapValue!4012)) b!110413))

(assert (= (and mapNonEmpty!4009 ((_ is ValueCellFull!1004) mapDefault!4012)) b!110414))

(declare-fun m!125077 () Bool)

(assert (=> mapNonEmpty!4012 m!125077))

(declare-fun b_lambda!4931 () Bool)

(assert (= b_lambda!4921 (or (and b!109508 b_free!2557 (= (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) (defaultEntry!2626 newMap!16))) (and b!109512 b_free!2559) b_lambda!4931)))

(declare-fun b_lambda!4933 () Bool)

(assert (= b_lambda!4925 (or (and b!109508 b_free!2557) (and b!109512 b_free!2559 (= (defaultEntry!2626 newMap!16) (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))))) b_lambda!4933)))

(declare-fun b_lambda!4935 () Bool)

(assert (= b_lambda!4927 (or (and b!109508 b_free!2557) (and b!109512 b_free!2559 (= (defaultEntry!2626 newMap!16) (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))))) b_lambda!4935)))

(declare-fun b_lambda!4937 () Bool)

(assert (= b_lambda!4923 (or (and b!109508 b_free!2557 (= (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) (defaultEntry!2626 newMap!16))) (and b!109512 b_free!2559) b_lambda!4937)))

(declare-fun b_lambda!4939 () Bool)

(assert (= b_lambda!4929 (or (and b!109508 b_free!2557 (= (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) (defaultEntry!2626 newMap!16))) (and b!109512 b_free!2559) b_lambda!4939)))

(check-sat (not d!30981) (not b!109972) (not b!110113) (not d!30835) (not d!30871) (not b!109971) (not bm!11773) (not d!30987) (not d!30849) (not b!110162) (not bm!11760) (not b!109965) (not b!110190) b_and!6785 (not b!110164) (not b!110014) (not b!110097) (not bm!11735) (not b!110274) (not bm!11736) (not b!109960) (not b!110387) (not b!110137) (not b!110149) (not b!109992) (not b!110277) (not b!110235) (not d!30893) (not b!110156) (not bm!11779) (not b!110393) (not b!110333) (not b!110074) (not b_next!2559) (not bm!11725) (not b!109964) (not b!110252) (not b!110346) (not b_lambda!4939) (not d!30915) (not b!110352) (not b!110198) (not d!30801) (not d!30891) (not b!110108) (not d!30791) (not d!30881) (not b!110395) (not b_lambda!4933) (not b!110204) (not bm!11758) (not bm!11744) (not b!110099) (not b!110088) (not d!30993) (not b!110077) (not d!30815) (not bm!11759) (not b!110408) (not b!110022) (not b!110068) (not d!30811) (not b!110187) (not d!30869) (not b!110362) (not b!110167) (not b!110225) (not b!109962) (not d!30825) (not b!110058) (not b!110172) (not b!110063) (not mapNonEmpty!4012) (not d!30985) (not b!110109) (not b!110095) (not b_next!2557) (not d!30823) (not d!30877) (not b!110208) (not b!110186) (not d!30945) (not b!110087) (not b!110273) (not d!30817) (not b!110223) (not d!30933) (not b!110199) (not b!110080) (not b!110271) (not b!110024) (not b_lambda!4907) (not b!110075) (not b!110354) b_and!6787 (not b!110270) (not b!110032) (not b!110057) (not b!110092) (not b!110159) (not b!110060) (not b_lambda!4915) (not b!110131) (not b!110059) (not b!109963) (not bm!11763) (not d!30937) (not d!30837) (not d!30829) (not b!110089) (not bm!11753) (not b!110367) (not d!30897) (not b!110071) (not b!110344) (not b!110242) (not d!30965) (not b!110129) (not b!109985) (not b!110351) (not d!30795) (not b!110258) (not d!30929) (not b!110330) (not b!110023) (not bm!11752) (not d!30917) (not b!110118) (not b!110175) (not b!110116) (not b!110404) (not d!30975) (not bm!11737) (not d!30895) (not d!30947) (not b!110253) (not d!30793) (not b!110405) (not d!30967) (not b!110247) (not bm!11745) (not b!110061) (not d!30911) (not b!110101) (not d!30819) (not bm!11730) (not b!110205) (not b_lambda!4919) (not b!110220) (not b!110250) (not b!110373) (not bm!11776) (not bm!11738) (not d!30961) (not b!110407) (not d!30991) (not d!30863) (not b!110326) (not b!110339) (not d!30973) (not d!30971) (not b!110409) (not b!110202) (not b!110245) (not d!30983) (not b!110370) (not b!110392) (not b!110026) (not b!110196) (not bm!11743) (not d!30827) (not b!109955) (not d!30865) (not b!110391) (not b!110134) (not b!110193) (not b!110153) (not b!110160) (not d!30903) (not b_lambda!4931) (not d!30905) (not b!110336) (not b!109974) (not b!110177) (not b!110161) (not d!30939) (not d!30931) (not b!110233) (not d!30843) (not b!110403) (not b!110390) (not b!110078) (not b!110357) (not d!30805) (not d!30853) (not b!110324) (not b!110191) (not b!110110) (not bm!11757) (not b!110318) (not b!110065) (not b!110406) (not b!110263) (not mapNonEmpty!4011) (not b!110375) (not d!30799) (not b!110232) (not bm!11748) (not bm!11749) (not b!110272) (not b!110268) (not bm!11774) (not d!30839) (not b_lambda!4937) (not b!110216) (not b!110132) (not d!30831) (not b!109958) (not b!110402) (not b!110280) (not bm!11731) (not d!30989) (not bm!11775) (not bm!11782) (not d!30899) (not d!30803) (not b!110244) (not d!30923) (not d!30955) (not b_lambda!4917) (not d!30833) (not b!110206) (not b!110062) (not b!110240) (not b!110320) (not b!110157) (not b!109991) (not b!110174) (not d!30951) (not b!110163) (not b!110217) (not d!30913) (not b!110148) (not b!109961) (not d!30859) (not b!110349) (not d!30959) (not b_lambda!4935) (not d!30963) (not d!30909) (not d!30797) (not d!30977) (not b!110388) tp_is_empty!2695 (not d!30969) (not b!109959) (not b!110180) (not d!30841) (not b!110317) (not b!110066) (not b!110338) (not b!110341) (not b!110332) (not d!30921) (not bm!11742) (not b!110169) (not d!30857) (not d!30979) (not d!30953) (not b!110185) (not d!30887) (not d!30873) (not b!110374) (not b!110215) (not d!30813) (not b!110343) (not b!110255) (not b!110017) (not d!30809))
(check-sat b_and!6785 b_and!6787 (not b_next!2557) (not b_next!2559))
(get-model)

(declare-fun d!30995 () Bool)

(declare-fun e!71805 () Bool)

(assert (=> d!30995 e!71805))

(declare-fun res!54599 () Bool)

(assert (=> d!30995 (=> res!54599 e!71805)))

(declare-fun lt!56954 () Bool)

(assert (=> d!30995 (= res!54599 (not lt!56954))))

(declare-fun lt!56955 () Bool)

(assert (=> d!30995 (= lt!56954 lt!56955)))

(declare-fun lt!56956 () Unit!3390)

(declare-fun e!71804 () Unit!3390)

(assert (=> d!30995 (= lt!56956 e!71804)))

(declare-fun c!19579 () Bool)

(assert (=> d!30995 (= c!19579 lt!56955)))

(assert (=> d!30995 (= lt!56955 (containsKey!160 (toList!792 lt!56605) (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(assert (=> d!30995 (= (contains!827 lt!56605 (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))) lt!56954)))

(declare-fun b!110415 () Bool)

(declare-fun lt!56957 () Unit!3390)

(assert (=> b!110415 (= e!71804 lt!56957)))

(assert (=> b!110415 (= lt!56957 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 lt!56605) (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(assert (=> b!110415 (isDefined!110 (getValueByKey!156 (toList!792 lt!56605) (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun b!110416 () Bool)

(declare-fun Unit!3422 () Unit!3390)

(assert (=> b!110416 (= e!71804 Unit!3422)))

(declare-fun b!110417 () Bool)

(assert (=> b!110417 (= e!71805 (isDefined!110 (getValueByKey!156 (toList!792 lt!56605) (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(assert (= (and d!30995 c!19579) b!110415))

(assert (= (and d!30995 (not c!19579)) b!110416))

(assert (= (and d!30995 (not res!54599)) b!110417))

(declare-fun m!125079 () Bool)

(assert (=> d!30995 m!125079))

(declare-fun m!125081 () Bool)

(assert (=> b!110415 m!125081))

(assert (=> b!110415 m!124281))

(assert (=> b!110415 m!124281))

(declare-fun m!125083 () Bool)

(assert (=> b!110415 m!125083))

(assert (=> b!110417 m!124281))

(assert (=> b!110417 m!124281))

(assert (=> b!110417 m!125083))

(assert (=> d!30793 d!30995))

(declare-fun b!110420 () Bool)

(declare-fun e!71807 () Option!162)

(assert (=> b!110420 (= e!71807 (getValueByKey!156 (t!5755 lt!56604) (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun d!30997 () Bool)

(declare-fun c!19580 () Bool)

(assert (=> d!30997 (= c!19580 (and ((_ is Cons!1623) lt!56604) (= (_1!1209 (h!2222 lt!56604)) (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(declare-fun e!71806 () Option!162)

(assert (=> d!30997 (= (getValueByKey!156 lt!56604 (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))) e!71806)))

(declare-fun b!110418 () Bool)

(assert (=> b!110418 (= e!71806 (Some!161 (_2!1209 (h!2222 lt!56604))))))

(declare-fun b!110419 () Bool)

(assert (=> b!110419 (= e!71806 e!71807)))

(declare-fun c!19581 () Bool)

(assert (=> b!110419 (= c!19581 (and ((_ is Cons!1623) lt!56604) (not (= (_1!1209 (h!2222 lt!56604)) (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))))

(declare-fun b!110421 () Bool)

(assert (=> b!110421 (= e!71807 None!160)))

(assert (= (and d!30997 c!19580) b!110418))

(assert (= (and d!30997 (not c!19580)) b!110419))

(assert (= (and b!110419 c!19581) b!110420))

(assert (= (and b!110419 (not c!19581)) b!110421))

(declare-fun m!125085 () Bool)

(assert (=> b!110420 m!125085))

(assert (=> d!30793 d!30997))

(declare-fun d!30999 () Bool)

(assert (=> d!30999 (= (getValueByKey!156 lt!56604 (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))) (Some!161 (_2!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun lt!56958 () Unit!3390)

(assert (=> d!30999 (= lt!56958 (choose!691 lt!56604 (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))) (_2!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun e!71808 () Bool)

(assert (=> d!30999 e!71808))

(declare-fun res!54600 () Bool)

(assert (=> d!30999 (=> (not res!54600) (not e!71808))))

(assert (=> d!30999 (= res!54600 (isStrictlySorted!306 lt!56604))))

(assert (=> d!30999 (= (lemmaContainsTupThenGetReturnValue!75 lt!56604 (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))) (_2!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))) lt!56958)))

(declare-fun b!110422 () Bool)

(declare-fun res!54601 () Bool)

(assert (=> b!110422 (=> (not res!54601) (not e!71808))))

(assert (=> b!110422 (= res!54601 (containsKey!160 lt!56604 (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun b!110423 () Bool)

(assert (=> b!110423 (= e!71808 (contains!829 lt!56604 (tuple2!2397 (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))) (_2!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(assert (= (and d!30999 res!54600) b!110422))

(assert (= (and b!110422 res!54601) b!110423))

(assert (=> d!30999 m!124275))

(declare-fun m!125087 () Bool)

(assert (=> d!30999 m!125087))

(declare-fun m!125089 () Bool)

(assert (=> d!30999 m!125089))

(declare-fun m!125091 () Bool)

(assert (=> b!110422 m!125091))

(declare-fun m!125093 () Bool)

(assert (=> b!110423 m!125093))

(assert (=> d!30793 d!30999))

(declare-fun e!71810 () List!1627)

(declare-fun c!19582 () Bool)

(declare-fun c!19585 () Bool)

(declare-fun b!110424 () Bool)

(assert (=> b!110424 (= e!71810 (ite c!19582 (t!5755 (toList!792 (+!139 lt!56303 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))) (ite c!19585 (Cons!1623 (h!2222 (toList!792 (+!139 lt!56303 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))) (t!5755 (toList!792 (+!139 lt!56303 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))) Nil!1624)))))

(declare-fun b!110425 () Bool)

(assert (=> b!110425 (= e!71810 (insertStrictlySorted!78 (t!5755 (toList!792 (+!139 lt!56303 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))) (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))) (_2!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun bm!11783 () Bool)

(declare-fun call!11788 () List!1627)

(declare-fun call!11786 () List!1627)

(assert (=> bm!11783 (= call!11788 call!11786)))

(declare-fun b!110426 () Bool)

(declare-fun e!71809 () List!1627)

(declare-fun call!11787 () List!1627)

(assert (=> b!110426 (= e!71809 call!11787)))

(declare-fun b!110427 () Bool)

(assert (=> b!110427 (= c!19585 (and ((_ is Cons!1623) (toList!792 (+!139 lt!56303 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))) (bvsgt (_1!1209 (h!2222 (toList!792 (+!139 lt!56303 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))) (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(declare-fun e!71812 () List!1627)

(assert (=> b!110427 (= e!71812 e!71809)))

(declare-fun b!110428 () Bool)

(declare-fun res!54603 () Bool)

(declare-fun e!71811 () Bool)

(assert (=> b!110428 (=> (not res!54603) (not e!71811))))

(declare-fun lt!56959 () List!1627)

(assert (=> b!110428 (= res!54603 (containsKey!160 lt!56959 (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun b!110430 () Bool)

(assert (=> b!110430 (= e!71809 call!11787)))

(declare-fun bm!11784 () Bool)

(assert (=> bm!11784 (= call!11787 call!11788)))

(declare-fun b!110431 () Bool)

(assert (=> b!110431 (= e!71812 call!11788)))

(declare-fun b!110432 () Bool)

(declare-fun e!71813 () List!1627)

(assert (=> b!110432 (= e!71813 e!71812)))

(assert (=> b!110432 (= c!19582 (and ((_ is Cons!1623) (toList!792 (+!139 lt!56303 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))) (= (_1!1209 (h!2222 (toList!792 (+!139 lt!56303 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))) (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(declare-fun d!31001 () Bool)

(assert (=> d!31001 e!71811))

(declare-fun res!54602 () Bool)

(assert (=> d!31001 (=> (not res!54602) (not e!71811))))

(assert (=> d!31001 (= res!54602 (isStrictlySorted!306 lt!56959))))

(assert (=> d!31001 (= lt!56959 e!71813)))

(declare-fun c!19584 () Bool)

(assert (=> d!31001 (= c!19584 (and ((_ is Cons!1623) (toList!792 (+!139 lt!56303 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))) (bvslt (_1!1209 (h!2222 (toList!792 (+!139 lt!56303 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))) (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(assert (=> d!31001 (isStrictlySorted!306 (toList!792 (+!139 lt!56303 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))

(assert (=> d!31001 (= (insertStrictlySorted!78 (toList!792 (+!139 lt!56303 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))) (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))) (_2!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))) lt!56959)))

(declare-fun b!110429 () Bool)

(assert (=> b!110429 (= e!71813 call!11786)))

(declare-fun b!110433 () Bool)

(assert (=> b!110433 (= e!71811 (contains!829 lt!56959 (tuple2!2397 (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))) (_2!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(declare-fun bm!11785 () Bool)

(assert (=> bm!11785 (= call!11786 ($colon$colon!82 e!71810 (ite c!19584 (h!2222 (toList!792 (+!139 lt!56303 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))) (tuple2!2397 (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))) (_2!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))))

(declare-fun c!19583 () Bool)

(assert (=> bm!11785 (= c!19583 c!19584)))

(assert (= (and d!31001 c!19584) b!110429))

(assert (= (and d!31001 (not c!19584)) b!110432))

(assert (= (and b!110432 c!19582) b!110431))

(assert (= (and b!110432 (not c!19582)) b!110427))

(assert (= (and b!110427 c!19585) b!110426))

(assert (= (and b!110427 (not c!19585)) b!110430))

(assert (= (or b!110426 b!110430) bm!11784))

(assert (= (or b!110431 bm!11784) bm!11783))

(assert (= (or b!110429 bm!11783) bm!11785))

(assert (= (and bm!11785 c!19583) b!110425))

(assert (= (and bm!11785 (not c!19583)) b!110424))

(assert (= (and d!31001 res!54602) b!110428))

(assert (= (and b!110428 res!54603) b!110433))

(declare-fun m!125095 () Bool)

(assert (=> d!31001 m!125095))

(declare-fun m!125097 () Bool)

(assert (=> d!31001 m!125097))

(declare-fun m!125099 () Bool)

(assert (=> b!110428 m!125099))

(declare-fun m!125101 () Bool)

(assert (=> bm!11785 m!125101))

(declare-fun m!125103 () Bool)

(assert (=> b!110425 m!125103))

(declare-fun m!125105 () Bool)

(assert (=> b!110433 m!125105))

(assert (=> d!30793 d!31001))

(declare-fun bm!11786 () Bool)

(declare-fun call!11789 () Bool)

(assert (=> bm!11786 (= call!11789 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!4366 (store (arr!2068 (_keys!4339 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) (size!2326 (_keys!4339 newMap!16))) (mask!6793 newMap!16)))))

(declare-fun d!31003 () Bool)

(declare-fun res!54604 () Bool)

(declare-fun e!71815 () Bool)

(assert (=> d!31003 (=> res!54604 e!71815)))

(assert (=> d!31003 (= res!54604 (bvsge #b00000000000000000000000000000000 (size!2326 (array!4366 (store (arr!2068 (_keys!4339 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) (size!2326 (_keys!4339 newMap!16))))))))

(assert (=> d!31003 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4366 (store (arr!2068 (_keys!4339 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) (size!2326 (_keys!4339 newMap!16))) (mask!6793 newMap!16)) e!71815)))

(declare-fun b!110434 () Bool)

(declare-fun e!71814 () Bool)

(assert (=> b!110434 (= e!71814 call!11789)))

(declare-fun b!110435 () Bool)

(declare-fun e!71816 () Bool)

(assert (=> b!110435 (= e!71814 e!71816)))

(declare-fun lt!56961 () (_ BitVec 64))

(assert (=> b!110435 (= lt!56961 (select (arr!2068 (array!4366 (store (arr!2068 (_keys!4339 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) (size!2326 (_keys!4339 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!56960 () Unit!3390)

(assert (=> b!110435 (= lt!56960 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4366 (store (arr!2068 (_keys!4339 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) (size!2326 (_keys!4339 newMap!16))) lt!56961 #b00000000000000000000000000000000))))

(assert (=> b!110435 (arrayContainsKey!0 (array!4366 (store (arr!2068 (_keys!4339 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) (size!2326 (_keys!4339 newMap!16))) lt!56961 #b00000000000000000000000000000000)))

(declare-fun lt!56962 () Unit!3390)

(assert (=> b!110435 (= lt!56962 lt!56960)))

(declare-fun res!54605 () Bool)

(assert (=> b!110435 (= res!54605 (= (seekEntryOrOpen!0 (select (arr!2068 (array!4366 (store (arr!2068 (_keys!4339 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) (size!2326 (_keys!4339 newMap!16)))) #b00000000000000000000000000000000) (array!4366 (store (arr!2068 (_keys!4339 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) (size!2326 (_keys!4339 newMap!16))) (mask!6793 newMap!16)) (Found!264 #b00000000000000000000000000000000)))))

(assert (=> b!110435 (=> (not res!54605) (not e!71816))))

(declare-fun b!110436 () Bool)

(assert (=> b!110436 (= e!71816 call!11789)))

(declare-fun b!110437 () Bool)

(assert (=> b!110437 (= e!71815 e!71814)))

(declare-fun c!19586 () Bool)

(assert (=> b!110437 (= c!19586 (validKeyInArray!0 (select (arr!2068 (array!4366 (store (arr!2068 (_keys!4339 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) (size!2326 (_keys!4339 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (= (and d!31003 (not res!54604)) b!110437))

(assert (= (and b!110437 c!19586) b!110435))

(assert (= (and b!110437 (not c!19586)) b!110434))

(assert (= (and b!110435 res!54605) b!110436))

(assert (= (or b!110436 b!110434) bm!11786))

(declare-fun m!125107 () Bool)

(assert (=> bm!11786 m!125107))

(declare-fun m!125109 () Bool)

(assert (=> b!110435 m!125109))

(declare-fun m!125111 () Bool)

(assert (=> b!110435 m!125111))

(declare-fun m!125113 () Bool)

(assert (=> b!110435 m!125113))

(assert (=> b!110435 m!125109))

(declare-fun m!125115 () Bool)

(assert (=> b!110435 m!125115))

(assert (=> b!110437 m!125109))

(assert (=> b!110437 m!125109))

(declare-fun m!125117 () Bool)

(assert (=> b!110437 m!125117))

(assert (=> d!30923 d!31003))

(declare-fun d!31005 () Bool)

(declare-fun e!71818 () Bool)

(assert (=> d!31005 e!71818))

(declare-fun res!54606 () Bool)

(assert (=> d!31005 (=> res!54606 e!71818)))

(declare-fun lt!56963 () Bool)

(assert (=> d!31005 (= res!54606 (not lt!56963))))

(declare-fun lt!56964 () Bool)

(assert (=> d!31005 (= lt!56963 lt!56964)))

(declare-fun lt!56965 () Unit!3390)

(declare-fun e!71817 () Unit!3390)

(assert (=> d!31005 (= lt!56965 e!71817)))

(declare-fun c!19587 () Bool)

(assert (=> d!31005 (= c!19587 lt!56964)))

(assert (=> d!31005 (= lt!56964 (containsKey!160 (toList!792 (getCurrentListMap!469 lt!56879 lt!56887 (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16))) (select (store (arr!2068 (_keys!4339 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)))))))

(assert (=> d!31005 (= (contains!827 (getCurrentListMap!469 lt!56879 lt!56887 (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) (select (store (arr!2068 (_keys!4339 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)))) lt!56963)))

(declare-fun b!110438 () Bool)

(declare-fun lt!56966 () Unit!3390)

(assert (=> b!110438 (= e!71817 lt!56966)))

(assert (=> b!110438 (= lt!56966 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 (getCurrentListMap!469 lt!56879 lt!56887 (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16))) (select (store (arr!2068 (_keys!4339 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)))))))

(assert (=> b!110438 (isDefined!110 (getValueByKey!156 (toList!792 (getCurrentListMap!469 lt!56879 lt!56887 (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16))) (select (store (arr!2068 (_keys!4339 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)))))))

(declare-fun b!110439 () Bool)

(declare-fun Unit!3423 () Unit!3390)

(assert (=> b!110439 (= e!71817 Unit!3423)))

(declare-fun b!110440 () Bool)

(assert (=> b!110440 (= e!71818 (isDefined!110 (getValueByKey!156 (toList!792 (getCurrentListMap!469 lt!56879 lt!56887 (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16))) (select (store (arr!2068 (_keys!4339 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493))))))))

(assert (= (and d!31005 c!19587) b!110438))

(assert (= (and d!31005 (not c!19587)) b!110439))

(assert (= (and d!31005 (not res!54606)) b!110440))

(assert (=> d!31005 m!124845))

(declare-fun m!125119 () Bool)

(assert (=> d!31005 m!125119))

(assert (=> b!110438 m!124845))

(declare-fun m!125121 () Bool)

(assert (=> b!110438 m!125121))

(assert (=> b!110438 m!124845))

(declare-fun m!125123 () Bool)

(assert (=> b!110438 m!125123))

(assert (=> b!110438 m!125123))

(declare-fun m!125125 () Bool)

(assert (=> b!110438 m!125125))

(assert (=> b!110440 m!124845))

(assert (=> b!110440 m!125123))

(assert (=> b!110440 m!125123))

(assert (=> b!110440 m!125125))

(assert (=> d!30923 d!31005))

(declare-fun d!31007 () Bool)

(declare-fun e!71821 () Bool)

(assert (=> d!31007 e!71821))

(declare-fun res!54609 () Bool)

(assert (=> d!31007 (=> (not res!54609) (not e!71821))))

(assert (=> d!31007 (= res!54609 (and (bvsge (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) #b00000000000000000000000000000000) (bvslt (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (size!2326 (_keys!4339 newMap!16)))))))

(declare-fun lt!56969 () Unit!3390)

(declare-fun choose!102 ((_ BitVec 64) array!4365 (_ BitVec 32) (_ BitVec 32)) Unit!3390)

(assert (=> d!31007 (= lt!56969 (choose!102 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (_keys!4339 newMap!16) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (mask!6793 newMap!16)))))

(assert (=> d!31007 (validMask!0 (mask!6793 newMap!16))))

(assert (=> d!31007 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (_keys!4339 newMap!16) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (mask!6793 newMap!16)) lt!56969)))

(declare-fun b!110443 () Bool)

(assert (=> b!110443 (= e!71821 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4366 (store (arr!2068 (_keys!4339 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) (size!2326 (_keys!4339 newMap!16))) (mask!6793 newMap!16)))))

(assert (= (and d!31007 res!54609) b!110443))

(assert (=> d!31007 m!123865))

(declare-fun m!125127 () Bool)

(assert (=> d!31007 m!125127))

(assert (=> d!31007 m!124269))

(assert (=> b!110443 m!124853))

(assert (=> b!110443 m!124855))

(assert (=> d!30923 d!31007))

(declare-fun d!31009 () Bool)

(declare-fun e!71824 () Bool)

(assert (=> d!31009 e!71824))

(declare-fun res!54612 () Bool)

(assert (=> d!31009 (=> (not res!54612) (not e!71824))))

(assert (=> d!31009 (= res!54612 (and (bvsge (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) #b00000000000000000000000000000000) (bvslt (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (size!2326 (_keys!4339 newMap!16))) (bvslt (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (size!2327 (_values!2609 newMap!16)))))))

(declare-fun lt!56972 () Unit!3390)

(declare-fun choose!702 (array!4365 array!4367 (_ BitVec 32) (_ BitVec 32) V!3241 V!3241 (_ BitVec 32) (_ BitVec 64) V!3241 Int) Unit!3390)

(assert (=> d!31009 (= lt!56972 (choose!702 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306 (defaultEntry!2626 newMap!16)))))

(assert (=> d!31009 (validMask!0 (mask!6793 newMap!16))))

(assert (=> d!31009 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!32 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306 (defaultEntry!2626 newMap!16)) lt!56972)))

(declare-fun b!110446 () Bool)

(assert (=> b!110446 (= e!71824 (= (+!139 (getCurrentListMap!469 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)) (getCurrentListMap!469 (array!4366 (store (arr!2068 (_keys!4339 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) (size!2326 (_keys!4339 newMap!16))) (array!4368 (store (arr!2069 (_values!2609 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (ValueCellFull!1004 lt!56306)) (size!2327 (_values!2609 newMap!16))) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16))))))

(assert (= (and d!31009 res!54612) b!110446))

(assert (=> d!31009 m!123865))

(declare-fun m!125129 () Bool)

(assert (=> d!31009 m!125129))

(assert (=> d!31009 m!124269))

(assert (=> b!110446 m!124133))

(assert (=> b!110446 m!124869))

(assert (=> b!110446 m!124133))

(assert (=> b!110446 m!124433))

(assert (=> b!110446 m!124853))

(assert (=> b!110446 m!124871))

(assert (=> d!30923 d!31009))

(assert (=> d!30923 d!30763))

(declare-fun d!31011 () Bool)

(declare-fun res!54613 () Bool)

(declare-fun e!71825 () Bool)

(assert (=> d!31011 (=> res!54613 e!71825)))

(assert (=> d!31011 (= res!54613 (= (select (arr!2068 lt!56881) #b00000000000000000000000000000000) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))

(assert (=> d!31011 (= (arrayContainsKey!0 lt!56881 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) #b00000000000000000000000000000000) e!71825)))

(declare-fun b!110447 () Bool)

(declare-fun e!71826 () Bool)

(assert (=> b!110447 (= e!71825 e!71826)))

(declare-fun res!54614 () Bool)

(assert (=> b!110447 (=> (not res!54614) (not e!71826))))

(assert (=> b!110447 (= res!54614 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2326 lt!56881)))))

(declare-fun b!110448 () Bool)

(assert (=> b!110448 (= e!71826 (arrayContainsKey!0 lt!56881 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!31011 (not res!54613)) b!110447))

(assert (= (and b!110447 res!54614) b!110448))

(declare-fun m!125131 () Bool)

(assert (=> d!31011 m!125131))

(assert (=> b!110448 m!123865))

(declare-fun m!125133 () Bool)

(assert (=> b!110448 m!125133))

(assert (=> d!30923 d!31011))

(assert (=> d!30923 d!30949))

(declare-fun d!31013 () Bool)

(assert (=> d!31013 (= (arrayCountValidKeys!0 lt!56886 (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (bvadd (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!56975 () Unit!3390)

(declare-fun choose!2 (array!4365 (_ BitVec 32)) Unit!3390)

(assert (=> d!31013 (= lt!56975 (choose!2 lt!56886 (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493))))))

(declare-fun e!71829 () Bool)

(assert (=> d!31013 e!71829))

(declare-fun res!54619 () Bool)

(assert (=> d!31013 (=> (not res!54619) (not e!71829))))

(assert (=> d!31013 (= res!54619 (and (bvsge (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) #b00000000000000000000000000000000) (bvslt (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (size!2326 lt!56886))))))

(assert (=> d!31013 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!56886 (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493))) lt!56975)))

(declare-fun b!110453 () Bool)

(declare-fun res!54620 () Bool)

(assert (=> b!110453 (=> (not res!54620) (not e!71829))))

(assert (=> b!110453 (= res!54620 (validKeyInArray!0 (select (arr!2068 lt!56886) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)))))))

(declare-fun b!110454 () Bool)

(assert (=> b!110454 (= e!71829 (bvslt (size!2326 lt!56886) #b01111111111111111111111111111111))))

(assert (= (and d!31013 res!54619) b!110453))

(assert (= (and b!110453 res!54620) b!110454))

(assert (=> d!31013 m!124857))

(declare-fun m!125135 () Bool)

(assert (=> d!31013 m!125135))

(declare-fun m!125137 () Bool)

(assert (=> b!110453 m!125137))

(assert (=> b!110453 m!125137))

(declare-fun m!125139 () Bool)

(assert (=> b!110453 m!125139))

(assert (=> d!30923 d!31013))

(declare-fun e!71830 () Bool)

(declare-fun b!110455 () Bool)

(assert (=> b!110455 (= e!71830 (validKeyInArray!0 (select (arr!2068 (array!4366 (store (arr!2068 (_keys!4339 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) (size!2326 (_keys!4339 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!110456 () Bool)

(declare-fun e!71839 () Bool)

(declare-fun e!71831 () Bool)

(assert (=> b!110456 (= e!71839 e!71831)))

(declare-fun res!54626 () Bool)

(declare-fun call!11794 () Bool)

(assert (=> b!110456 (= res!54626 call!11794)))

(assert (=> b!110456 (=> (not res!54626) (not e!71831))))

(declare-fun b!110457 () Bool)

(declare-fun lt!56992 () ListLongMap!1553)

(assert (=> b!110457 (= e!71831 (= (apply!100 lt!56992 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2497 newMap!16)))))

(declare-fun b!110458 () Bool)

(assert (=> b!110458 (= e!71839 (not call!11794))))

(declare-fun d!31015 () Bool)

(declare-fun e!71841 () Bool)

(assert (=> d!31015 e!71841))

(declare-fun res!54623 () Bool)

(assert (=> d!31015 (=> (not res!54623) (not e!71841))))

(assert (=> d!31015 (= res!54623 (or (bvsge #b00000000000000000000000000000000 (size!2326 (array!4366 (store (arr!2068 (_keys!4339 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) (size!2326 (_keys!4339 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2326 (array!4366 (store (arr!2068 (_keys!4339 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) (size!2326 (_keys!4339 newMap!16))))))))))

(declare-fun lt!56994 () ListLongMap!1553)

(assert (=> d!31015 (= lt!56992 lt!56994)))

(declare-fun lt!56978 () Unit!3390)

(declare-fun e!71836 () Unit!3390)

(assert (=> d!31015 (= lt!56978 e!71836)))

(declare-fun c!19589 () Bool)

(declare-fun e!71837 () Bool)

(assert (=> d!31015 (= c!19589 e!71837)))

(declare-fun res!54625 () Bool)

(assert (=> d!31015 (=> (not res!54625) (not e!71837))))

(assert (=> d!31015 (= res!54625 (bvslt #b00000000000000000000000000000000 (size!2326 (array!4366 (store (arr!2068 (_keys!4339 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) (size!2326 (_keys!4339 newMap!16))))))))

(declare-fun e!71842 () ListLongMap!1553)

(assert (=> d!31015 (= lt!56994 e!71842)))

(declare-fun c!19588 () Bool)

(assert (=> d!31015 (= c!19588 (and (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!31015 (validMask!0 (mask!6793 newMap!16))))

(assert (=> d!31015 (= (getCurrentListMap!469 (array!4366 (store (arr!2068 (_keys!4339 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) (size!2326 (_keys!4339 newMap!16))) (array!4368 (store (arr!2069 (_values!2609 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (ValueCellFull!1004 lt!56306)) (size!2327 (_values!2609 newMap!16))) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) lt!56992)))

(declare-fun b!110459 () Bool)

(assert (=> b!110459 (= e!71841 e!71839)))

(declare-fun c!19593 () Bool)

(assert (=> b!110459 (= c!19593 (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!110460 () Bool)

(declare-fun e!71838 () ListLongMap!1553)

(assert (=> b!110460 (= e!71842 e!71838)))

(declare-fun c!19591 () Bool)

(assert (=> b!110460 (= c!19591 (and (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11787 () Bool)

(declare-fun call!11792 () ListLongMap!1553)

(declare-fun call!11791 () ListLongMap!1553)

(assert (=> bm!11787 (= call!11792 call!11791)))

(declare-fun bm!11788 () Bool)

(declare-fun call!11790 () ListLongMap!1553)

(assert (=> bm!11788 (= call!11791 call!11790)))

(declare-fun b!110461 () Bool)

(declare-fun res!54629 () Bool)

(assert (=> b!110461 (=> (not res!54629) (not e!71841))))

(declare-fun e!71835 () Bool)

(assert (=> b!110461 (= res!54629 e!71835)))

(declare-fun res!54628 () Bool)

(assert (=> b!110461 (=> res!54628 e!71835)))

(assert (=> b!110461 (= res!54628 (not e!71830))))

(declare-fun res!54624 () Bool)

(assert (=> b!110461 (=> (not res!54624) (not e!71830))))

(assert (=> b!110461 (= res!54624 (bvslt #b00000000000000000000000000000000 (size!2326 (array!4366 (store (arr!2068 (_keys!4339 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) (size!2326 (_keys!4339 newMap!16))))))))

(declare-fun b!110462 () Bool)

(declare-fun e!71833 () Bool)

(declare-fun e!71832 () Bool)

(assert (=> b!110462 (= e!71833 e!71832)))

(declare-fun res!54621 () Bool)

(declare-fun call!11796 () Bool)

(assert (=> b!110462 (= res!54621 call!11796)))

(assert (=> b!110462 (=> (not res!54621) (not e!71832))))

(declare-fun bm!11789 () Bool)

(declare-fun call!11793 () ListLongMap!1553)

(declare-fun call!11795 () ListLongMap!1553)

(assert (=> bm!11789 (= call!11793 call!11795)))

(declare-fun b!110463 () Bool)

(assert (=> b!110463 (= e!71833 (not call!11796))))

(declare-fun b!110464 () Bool)

(declare-fun e!71834 () Bool)

(assert (=> b!110464 (= e!71835 e!71834)))

(declare-fun res!54622 () Bool)

(assert (=> b!110464 (=> (not res!54622) (not e!71834))))

(assert (=> b!110464 (= res!54622 (contains!827 lt!56992 (select (arr!2068 (array!4366 (store (arr!2068 (_keys!4339 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) (size!2326 (_keys!4339 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!110464 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2326 (array!4366 (store (arr!2068 (_keys!4339 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) (size!2326 (_keys!4339 newMap!16))))))))

(declare-fun b!110465 () Bool)

(assert (=> b!110465 (= e!71834 (= (apply!100 lt!56992 (select (arr!2068 (array!4366 (store (arr!2068 (_keys!4339 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) (size!2326 (_keys!4339 newMap!16)))) #b00000000000000000000000000000000)) (get!1347 (select (arr!2069 (array!4368 (store (arr!2069 (_values!2609 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (ValueCellFull!1004 lt!56306)) (size!2327 (_values!2609 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2626 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!110465 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2327 (array!4368 (store (arr!2069 (_values!2609 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (ValueCellFull!1004 lt!56306)) (size!2327 (_values!2609 newMap!16))))))))

(assert (=> b!110465 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2326 (array!4366 (store (arr!2068 (_keys!4339 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) (size!2326 (_keys!4339 newMap!16))))))))

(declare-fun bm!11790 () Bool)

(assert (=> bm!11790 (= call!11794 (contains!827 lt!56992 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!11791 () Bool)

(assert (=> bm!11791 (= call!11796 (contains!827 lt!56992 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110466 () Bool)

(assert (=> b!110466 (= e!71837 (validKeyInArray!0 (select (arr!2068 (array!4366 (store (arr!2068 (_keys!4339 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) (size!2326 (_keys!4339 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!110467 () Bool)

(declare-fun res!54627 () Bool)

(assert (=> b!110467 (=> (not res!54627) (not e!71841))))

(assert (=> b!110467 (= res!54627 e!71833)))

(declare-fun c!19592 () Bool)

(assert (=> b!110467 (= c!19592 (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!11792 () Bool)

(assert (=> bm!11792 (= call!11790 (getCurrentListMapNoExtraKeys!104 (array!4366 (store (arr!2068 (_keys!4339 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) (size!2326 (_keys!4339 newMap!16))) (array!4368 (store (arr!2069 (_values!2609 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (ValueCellFull!1004 lt!56306)) (size!2327 (_values!2609 newMap!16))) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun b!110468 () Bool)

(declare-fun e!71840 () ListLongMap!1553)

(assert (=> b!110468 (= e!71840 call!11792)))

(declare-fun b!110469 () Bool)

(assert (=> b!110469 (= e!71842 (+!139 call!11795 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16))))))

(declare-fun b!110470 () Bool)

(assert (=> b!110470 (= e!71838 call!11793)))

(declare-fun b!110471 () Bool)

(declare-fun Unit!3424 () Unit!3390)

(assert (=> b!110471 (= e!71836 Unit!3424)))

(declare-fun b!110472 () Bool)

(declare-fun lt!56985 () Unit!3390)

(assert (=> b!110472 (= e!71836 lt!56985)))

(declare-fun lt!56980 () ListLongMap!1553)

(assert (=> b!110472 (= lt!56980 (getCurrentListMapNoExtraKeys!104 (array!4366 (store (arr!2068 (_keys!4339 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) (size!2326 (_keys!4339 newMap!16))) (array!4368 (store (arr!2069 (_values!2609 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (ValueCellFull!1004 lt!56306)) (size!2327 (_values!2609 newMap!16))) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!56993 () (_ BitVec 64))

(assert (=> b!110472 (= lt!56993 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56977 () (_ BitVec 64))

(assert (=> b!110472 (= lt!56977 (select (arr!2068 (array!4366 (store (arr!2068 (_keys!4339 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) (size!2326 (_keys!4339 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!56997 () Unit!3390)

(assert (=> b!110472 (= lt!56997 (addStillContains!76 lt!56980 lt!56993 (zeroValue!2497 newMap!16) lt!56977))))

(assert (=> b!110472 (contains!827 (+!139 lt!56980 (tuple2!2397 lt!56993 (zeroValue!2497 newMap!16))) lt!56977)))

(declare-fun lt!56991 () Unit!3390)

(assert (=> b!110472 (= lt!56991 lt!56997)))

(declare-fun lt!56979 () ListLongMap!1553)

(assert (=> b!110472 (= lt!56979 (getCurrentListMapNoExtraKeys!104 (array!4366 (store (arr!2068 (_keys!4339 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) (size!2326 (_keys!4339 newMap!16))) (array!4368 (store (arr!2069 (_values!2609 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (ValueCellFull!1004 lt!56306)) (size!2327 (_values!2609 newMap!16))) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!56990 () (_ BitVec 64))

(assert (=> b!110472 (= lt!56990 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56983 () (_ BitVec 64))

(assert (=> b!110472 (= lt!56983 (select (arr!2068 (array!4366 (store (arr!2068 (_keys!4339 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) (size!2326 (_keys!4339 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!56989 () Unit!3390)

(assert (=> b!110472 (= lt!56989 (addApplyDifferent!76 lt!56979 lt!56990 (minValue!2497 newMap!16) lt!56983))))

(assert (=> b!110472 (= (apply!100 (+!139 lt!56979 (tuple2!2397 lt!56990 (minValue!2497 newMap!16))) lt!56983) (apply!100 lt!56979 lt!56983))))

(declare-fun lt!56976 () Unit!3390)

(assert (=> b!110472 (= lt!56976 lt!56989)))

(declare-fun lt!56995 () ListLongMap!1553)

(assert (=> b!110472 (= lt!56995 (getCurrentListMapNoExtraKeys!104 (array!4366 (store (arr!2068 (_keys!4339 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) (size!2326 (_keys!4339 newMap!16))) (array!4368 (store (arr!2069 (_values!2609 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (ValueCellFull!1004 lt!56306)) (size!2327 (_values!2609 newMap!16))) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!56986 () (_ BitVec 64))

(assert (=> b!110472 (= lt!56986 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56981 () (_ BitVec 64))

(assert (=> b!110472 (= lt!56981 (select (arr!2068 (array!4366 (store (arr!2068 (_keys!4339 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) (size!2326 (_keys!4339 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!56987 () Unit!3390)

(assert (=> b!110472 (= lt!56987 (addApplyDifferent!76 lt!56995 lt!56986 (zeroValue!2497 newMap!16) lt!56981))))

(assert (=> b!110472 (= (apply!100 (+!139 lt!56995 (tuple2!2397 lt!56986 (zeroValue!2497 newMap!16))) lt!56981) (apply!100 lt!56995 lt!56981))))

(declare-fun lt!56996 () Unit!3390)

(assert (=> b!110472 (= lt!56996 lt!56987)))

(declare-fun lt!56984 () ListLongMap!1553)

(assert (=> b!110472 (= lt!56984 (getCurrentListMapNoExtraKeys!104 (array!4366 (store (arr!2068 (_keys!4339 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) (size!2326 (_keys!4339 newMap!16))) (array!4368 (store (arr!2069 (_values!2609 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (ValueCellFull!1004 lt!56306)) (size!2327 (_values!2609 newMap!16))) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!56982 () (_ BitVec 64))

(assert (=> b!110472 (= lt!56982 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!56988 () (_ BitVec 64))

(assert (=> b!110472 (= lt!56988 (select (arr!2068 (array!4366 (store (arr!2068 (_keys!4339 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) (size!2326 (_keys!4339 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!110472 (= lt!56985 (addApplyDifferent!76 lt!56984 lt!56982 (minValue!2497 newMap!16) lt!56988))))

(assert (=> b!110472 (= (apply!100 (+!139 lt!56984 (tuple2!2397 lt!56982 (minValue!2497 newMap!16))) lt!56988) (apply!100 lt!56984 lt!56988))))

(declare-fun b!110473 () Bool)

(declare-fun c!19590 () Bool)

(assert (=> b!110473 (= c!19590 (and (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!110473 (= e!71838 e!71840)))

(declare-fun b!110474 () Bool)

(assert (=> b!110474 (= e!71832 (= (apply!100 lt!56992 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2497 newMap!16)))))

(declare-fun b!110475 () Bool)

(assert (=> b!110475 (= e!71840 call!11793)))

(declare-fun bm!11793 () Bool)

(assert (=> bm!11793 (= call!11795 (+!139 (ite c!19588 call!11790 (ite c!19591 call!11791 call!11792)) (ite (or c!19588 c!19591) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 newMap!16)) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16)))))))

(assert (= (and d!31015 c!19588) b!110469))

(assert (= (and d!31015 (not c!19588)) b!110460))

(assert (= (and b!110460 c!19591) b!110470))

(assert (= (and b!110460 (not c!19591)) b!110473))

(assert (= (and b!110473 c!19590) b!110475))

(assert (= (and b!110473 (not c!19590)) b!110468))

(assert (= (or b!110475 b!110468) bm!11787))

(assert (= (or b!110470 bm!11787) bm!11788))

(assert (= (or b!110470 b!110475) bm!11789))

(assert (= (or b!110469 bm!11788) bm!11792))

(assert (= (or b!110469 bm!11789) bm!11793))

(assert (= (and d!31015 res!54625) b!110466))

(assert (= (and d!31015 c!19589) b!110472))

(assert (= (and d!31015 (not c!19589)) b!110471))

(assert (= (and d!31015 res!54623) b!110461))

(assert (= (and b!110461 res!54624) b!110455))

(assert (= (and b!110461 (not res!54628)) b!110464))

(assert (= (and b!110464 res!54622) b!110465))

(assert (= (and b!110461 res!54629) b!110467))

(assert (= (and b!110467 c!19592) b!110462))

(assert (= (and b!110467 (not c!19592)) b!110463))

(assert (= (and b!110462 res!54621) b!110474))

(assert (= (or b!110462 b!110463) bm!11791))

(assert (= (and b!110467 res!54627) b!110459))

(assert (= (and b!110459 c!19593) b!110456))

(assert (= (and b!110459 (not c!19593)) b!110458))

(assert (= (and b!110456 res!54626) b!110457))

(assert (= (or b!110456 b!110458) bm!11790))

(declare-fun b_lambda!4941 () Bool)

(assert (=> (not b_lambda!4941) (not b!110465)))

(assert (=> b!110465 t!5766))

(declare-fun b_and!6789 () Bool)

(assert (= b_and!6785 (and (=> t!5766 result!3533) b_and!6789)))

(assert (=> b!110465 t!5768))

(declare-fun b_and!6791 () Bool)

(assert (= b_and!6787 (and (=> t!5768 result!3535) b_and!6791)))

(declare-fun m!125141 () Bool)

(assert (=> b!110465 m!125141))

(assert (=> b!110465 m!125109))

(declare-fun m!125143 () Bool)

(assert (=> b!110465 m!125143))

(assert (=> b!110465 m!124451))

(assert (=> b!110465 m!125109))

(assert (=> b!110465 m!125141))

(assert (=> b!110465 m!124451))

(declare-fun m!125145 () Bool)

(assert (=> b!110465 m!125145))

(assert (=> b!110464 m!125109))

(assert (=> b!110464 m!125109))

(declare-fun m!125147 () Bool)

(assert (=> b!110464 m!125147))

(assert (=> d!31015 m!124269))

(declare-fun m!125149 () Bool)

(assert (=> bm!11793 m!125149))

(declare-fun m!125151 () Bool)

(assert (=> b!110457 m!125151))

(declare-fun m!125153 () Bool)

(assert (=> bm!11792 m!125153))

(assert (=> b!110466 m!125109))

(assert (=> b!110466 m!125109))

(assert (=> b!110466 m!125117))

(assert (=> b!110455 m!125109))

(assert (=> b!110455 m!125109))

(assert (=> b!110455 m!125117))

(declare-fun m!125155 () Bool)

(assert (=> b!110474 m!125155))

(declare-fun m!125157 () Bool)

(assert (=> b!110472 m!125157))

(declare-fun m!125159 () Bool)

(assert (=> b!110472 m!125159))

(declare-fun m!125161 () Bool)

(assert (=> b!110472 m!125161))

(declare-fun m!125163 () Bool)

(assert (=> b!110472 m!125163))

(declare-fun m!125165 () Bool)

(assert (=> b!110472 m!125165))

(declare-fun m!125167 () Bool)

(assert (=> b!110472 m!125167))

(assert (=> b!110472 m!125157))

(declare-fun m!125169 () Bool)

(assert (=> b!110472 m!125169))

(declare-fun m!125171 () Bool)

(assert (=> b!110472 m!125171))

(assert (=> b!110472 m!125153))

(declare-fun m!125173 () Bool)

(assert (=> b!110472 m!125173))

(declare-fun m!125175 () Bool)

(assert (=> b!110472 m!125175))

(declare-fun m!125177 () Bool)

(assert (=> b!110472 m!125177))

(declare-fun m!125179 () Bool)

(assert (=> b!110472 m!125179))

(declare-fun m!125181 () Bool)

(assert (=> b!110472 m!125181))

(declare-fun m!125183 () Bool)

(assert (=> b!110472 m!125183))

(assert (=> b!110472 m!125173))

(assert (=> b!110472 m!125109))

(assert (=> b!110472 m!125161))

(declare-fun m!125185 () Bool)

(assert (=> b!110472 m!125185))

(assert (=> b!110472 m!125165))

(declare-fun m!125187 () Bool)

(assert (=> bm!11791 m!125187))

(declare-fun m!125189 () Bool)

(assert (=> b!110469 m!125189))

(declare-fun m!125191 () Bool)

(assert (=> bm!11790 m!125191))

(assert (=> d!30923 d!31015))

(declare-fun b!110487 () Bool)

(declare-fun e!71847 () Bool)

(assert (=> b!110487 (= e!71847 (= (arrayCountValidKeys!0 (array!4366 (store (arr!2068 (_keys!4339 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) (size!2326 (_keys!4339 newMap!16))) #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4339 newMap!16) #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))) #b00000000000000000000000000000001)))))

(declare-fun b!110484 () Bool)

(declare-fun res!54639 () Bool)

(declare-fun e!71848 () Bool)

(assert (=> b!110484 (=> (not res!54639) (not e!71848))))

(assert (=> b!110484 (= res!54639 (not (validKeyInArray!0 (select (arr!2068 (_keys!4339 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493))))))))

(declare-fun b!110485 () Bool)

(declare-fun res!54638 () Bool)

(assert (=> b!110485 (=> (not res!54638) (not e!71848))))

(assert (=> b!110485 (= res!54638 (validKeyInArray!0 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))

(declare-fun d!31017 () Bool)

(assert (=> d!31017 e!71847))

(declare-fun res!54641 () Bool)

(assert (=> d!31017 (=> (not res!54641) (not e!71847))))

(assert (=> d!31017 (= res!54641 (and (bvsge (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) #b00000000000000000000000000000000) (bvslt (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (size!2326 (_keys!4339 newMap!16)))))))

(declare-fun lt!57000 () Unit!3390)

(declare-fun choose!1 (array!4365 (_ BitVec 32) (_ BitVec 64)) Unit!3390)

(assert (=> d!31017 (= lt!57000 (choose!1 (_keys!4339 newMap!16) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))

(assert (=> d!31017 e!71848))

(declare-fun res!54640 () Bool)

(assert (=> d!31017 (=> (not res!54640) (not e!71848))))

(assert (=> d!31017 (= res!54640 (and (bvsge (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) #b00000000000000000000000000000000) (bvslt (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (size!2326 (_keys!4339 newMap!16)))))))

(assert (=> d!31017 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4339 newMap!16) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) lt!57000)))

(declare-fun b!110486 () Bool)

(assert (=> b!110486 (= e!71848 (bvslt (size!2326 (_keys!4339 newMap!16)) #b01111111111111111111111111111111))))

(assert (= (and d!31017 res!54640) b!110484))

(assert (= (and b!110484 res!54639) b!110485))

(assert (= (and b!110485 res!54638) b!110486))

(assert (= (and d!31017 res!54641) b!110487))

(assert (=> b!110487 m!124853))

(assert (=> b!110487 m!124861))

(assert (=> b!110487 m!124181))

(declare-fun m!125193 () Bool)

(assert (=> b!110484 m!125193))

(assert (=> b!110484 m!125193))

(declare-fun m!125195 () Bool)

(assert (=> b!110484 m!125195))

(assert (=> b!110485 m!123865))

(assert (=> b!110485 m!124201))

(assert (=> d!31017 m!123865))

(declare-fun m!125197 () Bool)

(assert (=> d!31017 m!125197))

(assert (=> d!30923 d!31017))

(declare-fun d!31019 () Bool)

(assert (=> d!31019 (arrayContainsKey!0 lt!56881 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!57003 () Unit!3390)

(declare-fun choose!13 (array!4365 (_ BitVec 64) (_ BitVec 32)) Unit!3390)

(assert (=> d!31019 (= lt!57003 (choose!13 lt!56881 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493))))))

(assert (=> d!31019 (bvsge (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) #b00000000000000000000000000000000)))

(assert (=> d!31019 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!56881 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493))) lt!57003)))

(declare-fun bs!4534 () Bool)

(assert (= bs!4534 d!31019))

(assert (=> bs!4534 m!123865))

(assert (=> bs!4534 m!124867))

(assert (=> bs!4534 m!123865))

(declare-fun m!125199 () Bool)

(assert (=> bs!4534 m!125199))

(assert (=> d!30923 d!31019))

(declare-fun e!71852 () Bool)

(declare-fun b!110488 () Bool)

(assert (=> b!110488 (= e!71852 (contains!830 lt!56876 (select (arr!2068 (array!4366 (store (arr!2068 (_keys!4339 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) (size!2326 (_keys!4339 newMap!16)))) lt!56889)))))

(declare-fun b!110489 () Bool)

(declare-fun e!71850 () Bool)

(declare-fun e!71849 () Bool)

(assert (=> b!110489 (= e!71850 e!71849)))

(declare-fun res!54642 () Bool)

(assert (=> b!110489 (=> (not res!54642) (not e!71849))))

(assert (=> b!110489 (= res!54642 (not e!71852))))

(declare-fun res!54643 () Bool)

(assert (=> b!110489 (=> (not res!54643) (not e!71852))))

(assert (=> b!110489 (= res!54643 (validKeyInArray!0 (select (arr!2068 (array!4366 (store (arr!2068 (_keys!4339 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) (size!2326 (_keys!4339 newMap!16)))) lt!56889)))))

(declare-fun call!11797 () Bool)

(declare-fun c!19594 () Bool)

(declare-fun bm!11794 () Bool)

(assert (=> bm!11794 (= call!11797 (arrayNoDuplicates!0 (array!4366 (store (arr!2068 (_keys!4339 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) (size!2326 (_keys!4339 newMap!16))) (bvadd lt!56889 #b00000000000000000000000000000001) (ite c!19594 (Cons!1622 (select (arr!2068 (array!4366 (store (arr!2068 (_keys!4339 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) (size!2326 (_keys!4339 newMap!16)))) lt!56889) lt!56876) lt!56876)))))

(declare-fun d!31021 () Bool)

(declare-fun res!54644 () Bool)

(assert (=> d!31021 (=> res!54644 e!71850)))

(assert (=> d!31021 (= res!54644 (bvsge lt!56889 (size!2326 (array!4366 (store (arr!2068 (_keys!4339 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) (size!2326 (_keys!4339 newMap!16))))))))

(assert (=> d!31021 (= (arrayNoDuplicates!0 (array!4366 (store (arr!2068 (_keys!4339 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) (size!2326 (_keys!4339 newMap!16))) lt!56889 lt!56876) e!71850)))

(declare-fun b!110490 () Bool)

(declare-fun e!71851 () Bool)

(assert (=> b!110490 (= e!71851 call!11797)))

(declare-fun b!110491 () Bool)

(assert (=> b!110491 (= e!71851 call!11797)))

(declare-fun b!110492 () Bool)

(assert (=> b!110492 (= e!71849 e!71851)))

(assert (=> b!110492 (= c!19594 (validKeyInArray!0 (select (arr!2068 (array!4366 (store (arr!2068 (_keys!4339 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) (size!2326 (_keys!4339 newMap!16)))) lt!56889)))))

(assert (= (and d!31021 (not res!54644)) b!110489))

(assert (= (and b!110489 res!54643) b!110488))

(assert (= (and b!110489 res!54642) b!110492))

(assert (= (and b!110492 c!19594) b!110491))

(assert (= (and b!110492 (not c!19594)) b!110490))

(assert (= (or b!110491 b!110490) bm!11794))

(declare-fun m!125201 () Bool)

(assert (=> b!110488 m!125201))

(assert (=> b!110488 m!125201))

(declare-fun m!125203 () Bool)

(assert (=> b!110488 m!125203))

(assert (=> b!110489 m!125201))

(assert (=> b!110489 m!125201))

(declare-fun m!125205 () Bool)

(assert (=> b!110489 m!125205))

(assert (=> bm!11794 m!125201))

(declare-fun m!125207 () Bool)

(assert (=> bm!11794 m!125207))

(assert (=> b!110492 m!125201))

(assert (=> b!110492 m!125201))

(assert (=> b!110492 m!125205))

(assert (=> d!30923 d!31021))

(declare-fun b!110493 () Bool)

(declare-fun e!71853 () Bool)

(assert (=> b!110493 (= e!71853 (validKeyInArray!0 (select (arr!2068 lt!56879) #b00000000000000000000000000000000)))))

(declare-fun b!110494 () Bool)

(declare-fun e!71862 () Bool)

(declare-fun e!71854 () Bool)

(assert (=> b!110494 (= e!71862 e!71854)))

(declare-fun res!54650 () Bool)

(declare-fun call!11802 () Bool)

(assert (=> b!110494 (= res!54650 call!11802)))

(assert (=> b!110494 (=> (not res!54650) (not e!71854))))

(declare-fun b!110495 () Bool)

(declare-fun lt!57020 () ListLongMap!1553)

(assert (=> b!110495 (= e!71854 (= (apply!100 lt!57020 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2497 newMap!16)))))

(declare-fun b!110496 () Bool)

(assert (=> b!110496 (= e!71862 (not call!11802))))

(declare-fun d!31023 () Bool)

(declare-fun e!71864 () Bool)

(assert (=> d!31023 e!71864))

(declare-fun res!54647 () Bool)

(assert (=> d!31023 (=> (not res!54647) (not e!71864))))

(assert (=> d!31023 (= res!54647 (or (bvsge #b00000000000000000000000000000000 (size!2326 lt!56879)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2326 lt!56879)))))))

(declare-fun lt!57022 () ListLongMap!1553)

(assert (=> d!31023 (= lt!57020 lt!57022)))

(declare-fun lt!57006 () Unit!3390)

(declare-fun e!71859 () Unit!3390)

(assert (=> d!31023 (= lt!57006 e!71859)))

(declare-fun c!19596 () Bool)

(declare-fun e!71860 () Bool)

(assert (=> d!31023 (= c!19596 e!71860)))

(declare-fun res!54649 () Bool)

(assert (=> d!31023 (=> (not res!54649) (not e!71860))))

(assert (=> d!31023 (= res!54649 (bvslt #b00000000000000000000000000000000 (size!2326 lt!56879)))))

(declare-fun e!71865 () ListLongMap!1553)

(assert (=> d!31023 (= lt!57022 e!71865)))

(declare-fun c!19595 () Bool)

(assert (=> d!31023 (= c!19595 (and (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!31023 (validMask!0 (mask!6793 newMap!16))))

(assert (=> d!31023 (= (getCurrentListMap!469 lt!56879 lt!56887 (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) lt!57020)))

(declare-fun b!110497 () Bool)

(assert (=> b!110497 (= e!71864 e!71862)))

(declare-fun c!19600 () Bool)

(assert (=> b!110497 (= c!19600 (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!110498 () Bool)

(declare-fun e!71861 () ListLongMap!1553)

(assert (=> b!110498 (= e!71865 e!71861)))

(declare-fun c!19598 () Bool)

(assert (=> b!110498 (= c!19598 (and (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11795 () Bool)

(declare-fun call!11800 () ListLongMap!1553)

(declare-fun call!11799 () ListLongMap!1553)

(assert (=> bm!11795 (= call!11800 call!11799)))

(declare-fun bm!11796 () Bool)

(declare-fun call!11798 () ListLongMap!1553)

(assert (=> bm!11796 (= call!11799 call!11798)))

(declare-fun b!110499 () Bool)

(declare-fun res!54653 () Bool)

(assert (=> b!110499 (=> (not res!54653) (not e!71864))))

(declare-fun e!71858 () Bool)

(assert (=> b!110499 (= res!54653 e!71858)))

(declare-fun res!54652 () Bool)

(assert (=> b!110499 (=> res!54652 e!71858)))

(assert (=> b!110499 (= res!54652 (not e!71853))))

(declare-fun res!54648 () Bool)

(assert (=> b!110499 (=> (not res!54648) (not e!71853))))

(assert (=> b!110499 (= res!54648 (bvslt #b00000000000000000000000000000000 (size!2326 lt!56879)))))

(declare-fun b!110500 () Bool)

(declare-fun e!71856 () Bool)

(declare-fun e!71855 () Bool)

(assert (=> b!110500 (= e!71856 e!71855)))

(declare-fun res!54645 () Bool)

(declare-fun call!11804 () Bool)

(assert (=> b!110500 (= res!54645 call!11804)))

(assert (=> b!110500 (=> (not res!54645) (not e!71855))))

(declare-fun bm!11797 () Bool)

(declare-fun call!11801 () ListLongMap!1553)

(declare-fun call!11803 () ListLongMap!1553)

(assert (=> bm!11797 (= call!11801 call!11803)))

(declare-fun b!110501 () Bool)

(assert (=> b!110501 (= e!71856 (not call!11804))))

(declare-fun b!110502 () Bool)

(declare-fun e!71857 () Bool)

(assert (=> b!110502 (= e!71858 e!71857)))

(declare-fun res!54646 () Bool)

(assert (=> b!110502 (=> (not res!54646) (not e!71857))))

(assert (=> b!110502 (= res!54646 (contains!827 lt!57020 (select (arr!2068 lt!56879) #b00000000000000000000000000000000)))))

(assert (=> b!110502 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2326 lt!56879)))))

(declare-fun b!110503 () Bool)

(assert (=> b!110503 (= e!71857 (= (apply!100 lt!57020 (select (arr!2068 lt!56879) #b00000000000000000000000000000000)) (get!1347 (select (arr!2069 lt!56887) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2626 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!110503 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2327 lt!56887)))))

(assert (=> b!110503 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2326 lt!56879)))))

(declare-fun bm!11798 () Bool)

(assert (=> bm!11798 (= call!11802 (contains!827 lt!57020 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!11799 () Bool)

(assert (=> bm!11799 (= call!11804 (contains!827 lt!57020 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110504 () Bool)

(assert (=> b!110504 (= e!71860 (validKeyInArray!0 (select (arr!2068 lt!56879) #b00000000000000000000000000000000)))))

(declare-fun b!110505 () Bool)

(declare-fun res!54651 () Bool)

(assert (=> b!110505 (=> (not res!54651) (not e!71864))))

(assert (=> b!110505 (= res!54651 e!71856)))

(declare-fun c!19599 () Bool)

(assert (=> b!110505 (= c!19599 (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!11800 () Bool)

(assert (=> bm!11800 (= call!11798 (getCurrentListMapNoExtraKeys!104 lt!56879 lt!56887 (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun b!110506 () Bool)

(declare-fun e!71863 () ListLongMap!1553)

(assert (=> b!110506 (= e!71863 call!11800)))

(declare-fun b!110507 () Bool)

(assert (=> b!110507 (= e!71865 (+!139 call!11803 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16))))))

(declare-fun b!110508 () Bool)

(assert (=> b!110508 (= e!71861 call!11801)))

(declare-fun b!110509 () Bool)

(declare-fun Unit!3425 () Unit!3390)

(assert (=> b!110509 (= e!71859 Unit!3425)))

(declare-fun b!110510 () Bool)

(declare-fun lt!57013 () Unit!3390)

(assert (=> b!110510 (= e!71859 lt!57013)))

(declare-fun lt!57008 () ListLongMap!1553)

(assert (=> b!110510 (= lt!57008 (getCurrentListMapNoExtraKeys!104 lt!56879 lt!56887 (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!57021 () (_ BitVec 64))

(assert (=> b!110510 (= lt!57021 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57005 () (_ BitVec 64))

(assert (=> b!110510 (= lt!57005 (select (arr!2068 lt!56879) #b00000000000000000000000000000000))))

(declare-fun lt!57025 () Unit!3390)

(assert (=> b!110510 (= lt!57025 (addStillContains!76 lt!57008 lt!57021 (zeroValue!2497 newMap!16) lt!57005))))

(assert (=> b!110510 (contains!827 (+!139 lt!57008 (tuple2!2397 lt!57021 (zeroValue!2497 newMap!16))) lt!57005)))

(declare-fun lt!57019 () Unit!3390)

(assert (=> b!110510 (= lt!57019 lt!57025)))

(declare-fun lt!57007 () ListLongMap!1553)

(assert (=> b!110510 (= lt!57007 (getCurrentListMapNoExtraKeys!104 lt!56879 lt!56887 (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!57018 () (_ BitVec 64))

(assert (=> b!110510 (= lt!57018 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57011 () (_ BitVec 64))

(assert (=> b!110510 (= lt!57011 (select (arr!2068 lt!56879) #b00000000000000000000000000000000))))

(declare-fun lt!57017 () Unit!3390)

(assert (=> b!110510 (= lt!57017 (addApplyDifferent!76 lt!57007 lt!57018 (minValue!2497 newMap!16) lt!57011))))

(assert (=> b!110510 (= (apply!100 (+!139 lt!57007 (tuple2!2397 lt!57018 (minValue!2497 newMap!16))) lt!57011) (apply!100 lt!57007 lt!57011))))

(declare-fun lt!57004 () Unit!3390)

(assert (=> b!110510 (= lt!57004 lt!57017)))

(declare-fun lt!57023 () ListLongMap!1553)

(assert (=> b!110510 (= lt!57023 (getCurrentListMapNoExtraKeys!104 lt!56879 lt!56887 (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!57014 () (_ BitVec 64))

(assert (=> b!110510 (= lt!57014 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57009 () (_ BitVec 64))

(assert (=> b!110510 (= lt!57009 (select (arr!2068 lt!56879) #b00000000000000000000000000000000))))

(declare-fun lt!57015 () Unit!3390)

(assert (=> b!110510 (= lt!57015 (addApplyDifferent!76 lt!57023 lt!57014 (zeroValue!2497 newMap!16) lt!57009))))

(assert (=> b!110510 (= (apply!100 (+!139 lt!57023 (tuple2!2397 lt!57014 (zeroValue!2497 newMap!16))) lt!57009) (apply!100 lt!57023 lt!57009))))

(declare-fun lt!57024 () Unit!3390)

(assert (=> b!110510 (= lt!57024 lt!57015)))

(declare-fun lt!57012 () ListLongMap!1553)

(assert (=> b!110510 (= lt!57012 (getCurrentListMapNoExtraKeys!104 lt!56879 lt!56887 (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!57010 () (_ BitVec 64))

(assert (=> b!110510 (= lt!57010 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57016 () (_ BitVec 64))

(assert (=> b!110510 (= lt!57016 (select (arr!2068 lt!56879) #b00000000000000000000000000000000))))

(assert (=> b!110510 (= lt!57013 (addApplyDifferent!76 lt!57012 lt!57010 (minValue!2497 newMap!16) lt!57016))))

(assert (=> b!110510 (= (apply!100 (+!139 lt!57012 (tuple2!2397 lt!57010 (minValue!2497 newMap!16))) lt!57016) (apply!100 lt!57012 lt!57016))))

(declare-fun b!110511 () Bool)

(declare-fun c!19597 () Bool)

(assert (=> b!110511 (= c!19597 (and (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!110511 (= e!71861 e!71863)))

(declare-fun b!110512 () Bool)

(assert (=> b!110512 (= e!71855 (= (apply!100 lt!57020 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2497 newMap!16)))))

(declare-fun b!110513 () Bool)

(assert (=> b!110513 (= e!71863 call!11801)))

(declare-fun bm!11801 () Bool)

(assert (=> bm!11801 (= call!11803 (+!139 (ite c!19595 call!11798 (ite c!19598 call!11799 call!11800)) (ite (or c!19595 c!19598) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 newMap!16)) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16)))))))

(assert (= (and d!31023 c!19595) b!110507))

(assert (= (and d!31023 (not c!19595)) b!110498))

(assert (= (and b!110498 c!19598) b!110508))

(assert (= (and b!110498 (not c!19598)) b!110511))

(assert (= (and b!110511 c!19597) b!110513))

(assert (= (and b!110511 (not c!19597)) b!110506))

(assert (= (or b!110513 b!110506) bm!11795))

(assert (= (or b!110508 bm!11795) bm!11796))

(assert (= (or b!110508 b!110513) bm!11797))

(assert (= (or b!110507 bm!11796) bm!11800))

(assert (= (or b!110507 bm!11797) bm!11801))

(assert (= (and d!31023 res!54649) b!110504))

(assert (= (and d!31023 c!19596) b!110510))

(assert (= (and d!31023 (not c!19596)) b!110509))

(assert (= (and d!31023 res!54647) b!110499))

(assert (= (and b!110499 res!54648) b!110493))

(assert (= (and b!110499 (not res!54652)) b!110502))

(assert (= (and b!110502 res!54646) b!110503))

(assert (= (and b!110499 res!54653) b!110505))

(assert (= (and b!110505 c!19599) b!110500))

(assert (= (and b!110505 (not c!19599)) b!110501))

(assert (= (and b!110500 res!54645) b!110512))

(assert (= (or b!110500 b!110501) bm!11799))

(assert (= (and b!110505 res!54651) b!110497))

(assert (= (and b!110497 c!19600) b!110494))

(assert (= (and b!110497 (not c!19600)) b!110496))

(assert (= (and b!110494 res!54650) b!110495))

(assert (= (or b!110494 b!110496) bm!11798))

(declare-fun b_lambda!4943 () Bool)

(assert (=> (not b_lambda!4943) (not b!110503)))

(assert (=> b!110503 t!5766))

(declare-fun b_and!6793 () Bool)

(assert (= b_and!6789 (and (=> t!5766 result!3533) b_and!6793)))

(assert (=> b!110503 t!5768))

(declare-fun b_and!6795 () Bool)

(assert (= b_and!6791 (and (=> t!5768 result!3535) b_and!6795)))

(declare-fun m!125209 () Bool)

(assert (=> b!110503 m!125209))

(declare-fun m!125211 () Bool)

(assert (=> b!110503 m!125211))

(declare-fun m!125213 () Bool)

(assert (=> b!110503 m!125213))

(assert (=> b!110503 m!124451))

(assert (=> b!110503 m!125211))

(assert (=> b!110503 m!125209))

(assert (=> b!110503 m!124451))

(declare-fun m!125215 () Bool)

(assert (=> b!110503 m!125215))

(assert (=> b!110502 m!125211))

(assert (=> b!110502 m!125211))

(declare-fun m!125217 () Bool)

(assert (=> b!110502 m!125217))

(assert (=> d!31023 m!124269))

(declare-fun m!125219 () Bool)

(assert (=> bm!11801 m!125219))

(declare-fun m!125221 () Bool)

(assert (=> b!110495 m!125221))

(declare-fun m!125223 () Bool)

(assert (=> bm!11800 m!125223))

(assert (=> b!110504 m!125211))

(assert (=> b!110504 m!125211))

(declare-fun m!125225 () Bool)

(assert (=> b!110504 m!125225))

(assert (=> b!110493 m!125211))

(assert (=> b!110493 m!125211))

(assert (=> b!110493 m!125225))

(declare-fun m!125227 () Bool)

(assert (=> b!110512 m!125227))

(declare-fun m!125229 () Bool)

(assert (=> b!110510 m!125229))

(declare-fun m!125231 () Bool)

(assert (=> b!110510 m!125231))

(declare-fun m!125233 () Bool)

(assert (=> b!110510 m!125233))

(declare-fun m!125235 () Bool)

(assert (=> b!110510 m!125235))

(declare-fun m!125237 () Bool)

(assert (=> b!110510 m!125237))

(declare-fun m!125239 () Bool)

(assert (=> b!110510 m!125239))

(assert (=> b!110510 m!125229))

(declare-fun m!125241 () Bool)

(assert (=> b!110510 m!125241))

(declare-fun m!125243 () Bool)

(assert (=> b!110510 m!125243))

(assert (=> b!110510 m!125223))

(declare-fun m!125245 () Bool)

(assert (=> b!110510 m!125245))

(declare-fun m!125247 () Bool)

(assert (=> b!110510 m!125247))

(declare-fun m!125249 () Bool)

(assert (=> b!110510 m!125249))

(declare-fun m!125251 () Bool)

(assert (=> b!110510 m!125251))

(declare-fun m!125253 () Bool)

(assert (=> b!110510 m!125253))

(declare-fun m!125255 () Bool)

(assert (=> b!110510 m!125255))

(assert (=> b!110510 m!125245))

(assert (=> b!110510 m!125211))

(assert (=> b!110510 m!125233))

(declare-fun m!125257 () Bool)

(assert (=> b!110510 m!125257))

(assert (=> b!110510 m!125237))

(declare-fun m!125259 () Bool)

(assert (=> bm!11799 m!125259))

(declare-fun m!125261 () Bool)

(assert (=> b!110507 m!125261))

(declare-fun m!125263 () Bool)

(assert (=> bm!11798 m!125263))

(assert (=> d!30923 d!31023))

(declare-fun d!31025 () Bool)

(declare-fun e!71866 () Bool)

(assert (=> d!31025 e!71866))

(declare-fun res!54654 () Bool)

(assert (=> d!31025 (=> (not res!54654) (not e!71866))))

(assert (=> d!31025 (= res!54654 (and (bvsge (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) #b00000000000000000000000000000000) (bvslt (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (size!2326 lt!56879))))))

(declare-fun lt!57026 () Unit!3390)

(assert (=> d!31025 (= lt!57026 (choose!694 lt!56879 lt!56887 (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (defaultEntry!2626 newMap!16)))))

(assert (=> d!31025 (validMask!0 (mask!6793 newMap!16))))

(assert (=> d!31025 (= (lemmaValidKeyInArrayIsInListMap!108 lt!56879 lt!56887 (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (defaultEntry!2626 newMap!16)) lt!57026)))

(declare-fun b!110514 () Bool)

(assert (=> b!110514 (= e!71866 (contains!827 (getCurrentListMap!469 lt!56879 lt!56887 (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) (select (arr!2068 lt!56879) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)))))))

(assert (= (and d!31025 res!54654) b!110514))

(declare-fun m!125265 () Bool)

(assert (=> d!31025 m!125265))

(assert (=> d!31025 m!124269))

(assert (=> b!110514 m!124849))

(declare-fun m!125267 () Bool)

(assert (=> b!110514 m!125267))

(assert (=> b!110514 m!124849))

(assert (=> b!110514 m!125267))

(declare-fun m!125269 () Bool)

(assert (=> b!110514 m!125269))

(assert (=> d!30923 d!31025))

(declare-fun d!31027 () Bool)

(declare-fun e!71868 () Bool)

(assert (=> d!31027 e!71868))

(declare-fun res!54655 () Bool)

(assert (=> d!31027 (=> res!54655 e!71868)))

(declare-fun lt!57027 () Bool)

(assert (=> d!31027 (= res!54655 (not lt!57027))))

(declare-fun lt!57028 () Bool)

(assert (=> d!31027 (= lt!57027 lt!57028)))

(declare-fun lt!57029 () Unit!3390)

(declare-fun e!71867 () Unit!3390)

(assert (=> d!31027 (= lt!57029 e!71867)))

(declare-fun c!19601 () Bool)

(assert (=> d!31027 (= c!19601 lt!57028)))

(assert (=> d!31027 (= lt!57028 (containsKey!160 (toList!792 (getCurrentListMap!469 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16))) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))

(assert (=> d!31027 (= (contains!827 (getCurrentListMap!469 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) lt!57027)))

(declare-fun b!110515 () Bool)

(declare-fun lt!57030 () Unit!3390)

(assert (=> b!110515 (= e!71867 lt!57030)))

(assert (=> b!110515 (= lt!57030 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 (getCurrentListMap!469 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16))) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))

(assert (=> b!110515 (isDefined!110 (getValueByKey!156 (toList!792 (getCurrentListMap!469 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16))) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))

(declare-fun b!110516 () Bool)

(declare-fun Unit!3426 () Unit!3390)

(assert (=> b!110516 (= e!71867 Unit!3426)))

(declare-fun b!110517 () Bool)

(assert (=> b!110517 (= e!71868 (isDefined!110 (getValueByKey!156 (toList!792 (getCurrentListMap!469 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16))) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355))))))

(assert (= (and d!31027 c!19601) b!110515))

(assert (= (and d!31027 (not c!19601)) b!110516))

(assert (= (and d!31027 (not res!54655)) b!110517))

(assert (=> d!31027 m!123865))

(declare-fun m!125271 () Bool)

(assert (=> d!31027 m!125271))

(assert (=> b!110515 m!123865))

(declare-fun m!125273 () Bool)

(assert (=> b!110515 m!125273))

(assert (=> b!110515 m!123865))

(declare-fun m!125275 () Bool)

(assert (=> b!110515 m!125275))

(assert (=> b!110515 m!125275))

(declare-fun m!125277 () Bool)

(assert (=> b!110515 m!125277))

(assert (=> b!110517 m!123865))

(assert (=> b!110517 m!125275))

(assert (=> b!110517 m!125275))

(assert (=> b!110517 m!125277))

(assert (=> d!30923 d!31027))

(assert (=> d!30923 d!30839))

(declare-fun bm!11802 () Bool)

(declare-fun call!11805 () (_ BitVec 32))

(assert (=> bm!11802 (= call!11805 (arrayCountValidKeys!0 lt!56886 (bvadd (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) #b00000000000000000000000000000001) (bvadd (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) #b00000000000000000000000000000001)))))

(declare-fun b!110518 () Bool)

(declare-fun e!71869 () (_ BitVec 32))

(assert (=> b!110518 (= e!71869 call!11805)))

(declare-fun b!110519 () Bool)

(assert (=> b!110519 (= e!71869 (bvadd #b00000000000000000000000000000001 call!11805))))

(declare-fun b!110520 () Bool)

(declare-fun e!71870 () (_ BitVec 32))

(assert (=> b!110520 (= e!71870 #b00000000000000000000000000000000)))

(declare-fun d!31029 () Bool)

(declare-fun lt!57031 () (_ BitVec 32))

(assert (=> d!31029 (and (bvsge lt!57031 #b00000000000000000000000000000000) (bvsle lt!57031 (bvsub (size!2326 lt!56886) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)))))))

(assert (=> d!31029 (= lt!57031 e!71870)))

(declare-fun c!19603 () Bool)

(assert (=> d!31029 (= c!19603 (bvsge (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (bvadd (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) #b00000000000000000000000000000001)))))

(assert (=> d!31029 (and (bvsle (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (bvadd (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) #b00000000000000000000000000000001)) (bvsge (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) #b00000000000000000000000000000001) (size!2326 lt!56886)))))

(assert (=> d!31029 (= (arrayCountValidKeys!0 lt!56886 (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (bvadd (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) #b00000000000000000000000000000001)) lt!57031)))

(declare-fun b!110521 () Bool)

(assert (=> b!110521 (= e!71870 e!71869)))

(declare-fun c!19602 () Bool)

(assert (=> b!110521 (= c!19602 (validKeyInArray!0 (select (arr!2068 lt!56886) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)))))))

(assert (= (and d!31029 c!19603) b!110520))

(assert (= (and d!31029 (not c!19603)) b!110521))

(assert (= (and b!110521 c!19602) b!110519))

(assert (= (and b!110521 (not c!19602)) b!110518))

(assert (= (or b!110519 b!110518) bm!11802))

(declare-fun m!125279 () Bool)

(assert (=> bm!11802 m!125279))

(assert (=> b!110521 m!125137))

(assert (=> b!110521 m!125137))

(assert (=> b!110521 m!125139))

(assert (=> d!30923 d!31029))

(assert (=> d!30923 d!30927))

(declare-fun d!31031 () Bool)

(declare-fun e!71871 () Bool)

(assert (=> d!31031 e!71871))

(declare-fun res!54656 () Bool)

(assert (=> d!31031 (=> (not res!54656) (not e!71871))))

(declare-fun lt!57033 () ListLongMap!1553)

(assert (=> d!31031 (= res!54656 (contains!827 lt!57033 (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))

(declare-fun lt!57032 () List!1627)

(assert (=> d!31031 (= lt!57033 (ListLongMap!1554 lt!57032))))

(declare-fun lt!57034 () Unit!3390)

(declare-fun lt!57035 () Unit!3390)

(assert (=> d!31031 (= lt!57034 lt!57035)))

(assert (=> d!31031 (= (getValueByKey!156 lt!57032 (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))) (Some!161 (_2!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))

(assert (=> d!31031 (= lt!57035 (lemmaContainsTupThenGetReturnValue!75 lt!57032 (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)) (_2!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))

(assert (=> d!31031 (= lt!57032 (insertStrictlySorted!78 (toList!792 (getCurrentListMap!469 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16))) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)) (_2!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))

(assert (=> d!31031 (= (+!139 (getCurrentListMap!469 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)) lt!57033)))

(declare-fun b!110522 () Bool)

(declare-fun res!54657 () Bool)

(assert (=> b!110522 (=> (not res!54657) (not e!71871))))

(assert (=> b!110522 (= res!54657 (= (getValueByKey!156 (toList!792 lt!57033) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))) (Some!161 (_2!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))))))

(declare-fun b!110523 () Bool)

(assert (=> b!110523 (= e!71871 (contains!829 (toList!792 lt!57033) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))))

(assert (= (and d!31031 res!54656) b!110522))

(assert (= (and b!110522 res!54657) b!110523))

(declare-fun m!125281 () Bool)

(assert (=> d!31031 m!125281))

(declare-fun m!125283 () Bool)

(assert (=> d!31031 m!125283))

(declare-fun m!125285 () Bool)

(assert (=> d!31031 m!125285))

(declare-fun m!125287 () Bool)

(assert (=> d!31031 m!125287))

(declare-fun m!125289 () Bool)

(assert (=> b!110522 m!125289))

(declare-fun m!125291 () Bool)

(assert (=> b!110523 m!125291))

(assert (=> d!30923 d!31031))

(declare-fun call!11806 () (_ BitVec 32))

(declare-fun bm!11803 () Bool)

(assert (=> bm!11803 (= call!11806 (arrayCountValidKeys!0 (array!4366 (store (arr!2068 (_keys!4339 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) (size!2326 (_keys!4339 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2326 (_keys!4339 newMap!16))))))

(declare-fun b!110524 () Bool)

(declare-fun e!71872 () (_ BitVec 32))

(assert (=> b!110524 (= e!71872 call!11806)))

(declare-fun b!110525 () Bool)

(assert (=> b!110525 (= e!71872 (bvadd #b00000000000000000000000000000001 call!11806))))

(declare-fun b!110526 () Bool)

(declare-fun e!71873 () (_ BitVec 32))

(assert (=> b!110526 (= e!71873 #b00000000000000000000000000000000)))

(declare-fun d!31033 () Bool)

(declare-fun lt!57036 () (_ BitVec 32))

(assert (=> d!31033 (and (bvsge lt!57036 #b00000000000000000000000000000000) (bvsle lt!57036 (bvsub (size!2326 (array!4366 (store (arr!2068 (_keys!4339 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) (size!2326 (_keys!4339 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> d!31033 (= lt!57036 e!71873)))

(declare-fun c!19605 () Bool)

(assert (=> d!31033 (= c!19605 (bvsge #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))))))

(assert (=> d!31033 (and (bvsle #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2326 (_keys!4339 newMap!16)) (size!2326 (array!4366 (store (arr!2068 (_keys!4339 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) (size!2326 (_keys!4339 newMap!16))))))))

(assert (=> d!31033 (= (arrayCountValidKeys!0 (array!4366 (store (arr!2068 (_keys!4339 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) (size!2326 (_keys!4339 newMap!16))) #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))) lt!57036)))

(declare-fun b!110527 () Bool)

(assert (=> b!110527 (= e!71873 e!71872)))

(declare-fun c!19604 () Bool)

(assert (=> b!110527 (= c!19604 (validKeyInArray!0 (select (arr!2068 (array!4366 (store (arr!2068 (_keys!4339 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) (size!2326 (_keys!4339 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (= (and d!31033 c!19605) b!110526))

(assert (= (and d!31033 (not c!19605)) b!110527))

(assert (= (and b!110527 c!19604) b!110525))

(assert (= (and b!110527 (not c!19604)) b!110524))

(assert (= (or b!110525 b!110524) bm!11803))

(declare-fun m!125293 () Bool)

(assert (=> bm!11803 m!125293))

(assert (=> b!110527 m!125109))

(assert (=> b!110527 m!125109))

(assert (=> b!110527 m!125117))

(assert (=> d!30923 d!31033))

(declare-fun d!31035 () Bool)

(declare-fun e!71876 () Bool)

(assert (=> d!31035 e!71876))

(declare-fun res!54660 () Bool)

(assert (=> d!31035 (=> (not res!54660) (not e!71876))))

(assert (=> d!31035 (= res!54660 (and (bvsge (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) #b00000000000000000000000000000000) (bvslt (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (size!2326 (_keys!4339 newMap!16)))))))

(declare-fun lt!57039 () Unit!3390)

(declare-fun choose!41 (array!4365 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1626) Unit!3390)

(assert (=> d!31035 (= lt!57039 (choose!41 (_keys!4339 newMap!16) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) lt!56889 lt!56876))))

(assert (=> d!31035 (bvslt (size!2326 (_keys!4339 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!31035 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4339 newMap!16) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) lt!56889 lt!56876) lt!57039)))

(declare-fun b!110530 () Bool)

(assert (=> b!110530 (= e!71876 (arrayNoDuplicates!0 (array!4366 (store (arr!2068 (_keys!4339 newMap!16)) (ite c!19426 (index!3209 lt!56493) (index!3206 lt!56493)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) (size!2326 (_keys!4339 newMap!16))) lt!56889 lt!56876))))

(assert (= (and d!31035 res!54660) b!110530))

(assert (=> d!31035 m!123865))

(declare-fun m!125295 () Bool)

(assert (=> d!31035 m!125295))

(assert (=> b!110530 m!124853))

(assert (=> b!110530 m!124879))

(assert (=> d!30923 d!31035))

(declare-fun d!31037 () Bool)

(declare-fun lt!57040 () Bool)

(assert (=> d!31037 (= lt!57040 (select (content!114 Nil!1623) (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!71877 () Bool)

(assert (=> d!31037 (= lt!57040 e!71877)))

(declare-fun res!54662 () Bool)

(assert (=> d!31037 (=> (not res!54662) (not e!71877))))

(assert (=> d!31037 (= res!54662 ((_ is Cons!1622) Nil!1623))))

(assert (=> d!31037 (= (contains!830 Nil!1623 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)) lt!57040)))

(declare-fun b!110531 () Bool)

(declare-fun e!71878 () Bool)

(assert (=> b!110531 (= e!71877 e!71878)))

(declare-fun res!54661 () Bool)

(assert (=> b!110531 (=> res!54661 e!71878)))

(assert (=> b!110531 (= res!54661 (= (h!2221 Nil!1623) (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!110532 () Bool)

(assert (=> b!110532 (= e!71878 (contains!830 (t!5754 Nil!1623) (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!31037 res!54662) b!110531))

(assert (= (and b!110531 (not res!54661)) b!110532))

(assert (=> d!31037 m!124373))

(assert (=> d!31037 m!124447))

(declare-fun m!125297 () Bool)

(assert (=> d!31037 m!125297))

(assert (=> b!110532 m!124447))

(declare-fun m!125299 () Bool)

(assert (=> b!110532 m!125299))

(assert (=> b!110332 d!31037))

(declare-fun d!31039 () Bool)

(assert (=> d!31039 (isDefined!110 (getValueByKey!156 (toList!792 lt!56392) (_1!1209 lt!56300)))))

(declare-fun lt!57041 () Unit!3390)

(assert (=> d!31039 (= lt!57041 (choose!699 (toList!792 lt!56392) (_1!1209 lt!56300)))))

(declare-fun e!71879 () Bool)

(assert (=> d!31039 e!71879))

(declare-fun res!54663 () Bool)

(assert (=> d!31039 (=> (not res!54663) (not e!71879))))

(assert (=> d!31039 (= res!54663 (isStrictlySorted!306 (toList!792 lt!56392)))))

(assert (=> d!31039 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 lt!56392) (_1!1209 lt!56300)) lt!57041)))

(declare-fun b!110533 () Bool)

(assert (=> b!110533 (= e!71879 (containsKey!160 (toList!792 lt!56392) (_1!1209 lt!56300)))))

(assert (= (and d!31039 res!54663) b!110533))

(assert (=> d!31039 m!124049))

(assert (=> d!31039 m!124049))

(assert (=> d!31039 m!124759))

(declare-fun m!125301 () Bool)

(assert (=> d!31039 m!125301))

(declare-fun m!125303 () Bool)

(assert (=> d!31039 m!125303))

(assert (=> b!110533 m!124755))

(assert (=> b!110245 d!31039))

(declare-fun d!31041 () Bool)

(assert (=> d!31041 (= (isDefined!110 (getValueByKey!156 (toList!792 lt!56392) (_1!1209 lt!56300))) (not (isEmpty!382 (getValueByKey!156 (toList!792 lt!56392) (_1!1209 lt!56300)))))))

(declare-fun bs!4535 () Bool)

(assert (= bs!4535 d!31041))

(assert (=> bs!4535 m!124049))

(declare-fun m!125305 () Bool)

(assert (=> bs!4535 m!125305))

(assert (=> b!110245 d!31041))

(assert (=> b!110245 d!30875))

(declare-fun d!31043 () Bool)

(declare-fun lt!57042 () Bool)

(assert (=> d!31043 (= lt!57042 (select (content!113 (toList!792 lt!56942)) (tuple2!2397 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))))

(declare-fun e!71880 () Bool)

(assert (=> d!31043 (= lt!57042 e!71880)))

(declare-fun res!54664 () Bool)

(assert (=> d!31043 (=> (not res!54664) (not e!71880))))

(assert (=> d!31043 (= res!54664 ((_ is Cons!1623) (toList!792 lt!56942)))))

(assert (=> d!31043 (= (contains!829 (toList!792 lt!56942) (tuple2!2397 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992))))) lt!57042)))

(declare-fun b!110534 () Bool)

(declare-fun e!71881 () Bool)

(assert (=> b!110534 (= e!71880 e!71881)))

(declare-fun res!54665 () Bool)

(assert (=> b!110534 (=> res!54665 e!71881)))

(assert (=> b!110534 (= res!54665 (= (h!2222 (toList!792 lt!56942)) (tuple2!2397 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))))

(declare-fun b!110535 () Bool)

(assert (=> b!110535 (= e!71881 (contains!829 (t!5755 (toList!792 lt!56942)) (tuple2!2397 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))))

(assert (= (and d!31043 res!54664) b!110534))

(assert (= (and b!110534 (not res!54665)) b!110535))

(declare-fun m!125307 () Bool)

(assert (=> d!31043 m!125307))

(declare-fun m!125309 () Bool)

(assert (=> d!31043 m!125309))

(declare-fun m!125311 () Bool)

(assert (=> b!110535 m!125311))

(assert (=> b!110405 d!31043))

(declare-fun d!31045 () Bool)

(assert (=> d!31045 (= (apply!100 lt!56684 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)) (get!1350 (getValueByKey!156 (toList!792 lt!56684) (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!4536 () Bool)

(assert (= bs!4536 d!31045))

(assert (=> bs!4536 m!124447))

(declare-fun m!125313 () Bool)

(assert (=> bs!4536 m!125313))

(assert (=> bs!4536 m!125313))

(declare-fun m!125315 () Bool)

(assert (=> bs!4536 m!125315))

(assert (=> b!110088 d!31045))

(declare-fun d!31047 () Bool)

(declare-fun c!19606 () Bool)

(assert (=> d!31047 (= c!19606 ((_ is ValueCellFull!1004) (select (arr!2069 (_values!2609 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!71882 () V!3241)

(assert (=> d!31047 (= (get!1347 (select (arr!2069 (_values!2609 newMap!16)) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2626 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!71882)))

(declare-fun b!110536 () Bool)

(assert (=> b!110536 (= e!71882 (get!1348 (select (arr!2069 (_values!2609 newMap!16)) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2626 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!110537 () Bool)

(assert (=> b!110537 (= e!71882 (get!1349 (select (arr!2069 (_values!2609 newMap!16)) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2626 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!31047 c!19606) b!110536))

(assert (= (and d!31047 (not c!19606)) b!110537))

(assert (=> b!110536 m!124445))

(assert (=> b!110536 m!124451))

(declare-fun m!125317 () Bool)

(assert (=> b!110536 m!125317))

(assert (=> b!110537 m!124445))

(assert (=> b!110537 m!124451))

(declare-fun m!125319 () Bool)

(assert (=> b!110537 m!125319))

(assert (=> b!110088 d!31047))

(assert (=> d!30909 d!30911))

(assert (=> d!30909 d!30915))

(declare-fun d!31049 () Bool)

(assert (=> d!31049 (not (contains!827 (+!139 lt!56420 (tuple2!2397 lt!56424 lt!56421)) lt!56422))))

(assert (=> d!31049 true))

(declare-fun _$36!325 () Unit!3390)

(assert (=> d!31049 (= (choose!698 lt!56420 lt!56424 lt!56421 lt!56422) _$36!325)))

(declare-fun bs!4537 () Bool)

(assert (= bs!4537 d!31049))

(assert (=> bs!4537 m!124111))

(assert (=> bs!4537 m!124111))

(assert (=> bs!4537 m!124113))

(assert (=> d!30909 d!31049))

(declare-fun d!31051 () Bool)

(declare-fun e!71884 () Bool)

(assert (=> d!31051 e!71884))

(declare-fun res!54666 () Bool)

(assert (=> d!31051 (=> res!54666 e!71884)))

(declare-fun lt!57043 () Bool)

(assert (=> d!31051 (= res!54666 (not lt!57043))))

(declare-fun lt!57044 () Bool)

(assert (=> d!31051 (= lt!57043 lt!57044)))

(declare-fun lt!57045 () Unit!3390)

(declare-fun e!71883 () Unit!3390)

(assert (=> d!31051 (= lt!57045 e!71883)))

(declare-fun c!19607 () Bool)

(assert (=> d!31051 (= c!19607 lt!57044)))

(assert (=> d!31051 (= lt!57044 (containsKey!160 (toList!792 lt!56420) lt!56422))))

(assert (=> d!31051 (= (contains!827 lt!56420 lt!56422) lt!57043)))

(declare-fun b!110539 () Bool)

(declare-fun lt!57046 () Unit!3390)

(assert (=> b!110539 (= e!71883 lt!57046)))

(assert (=> b!110539 (= lt!57046 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 lt!56420) lt!56422))))

(assert (=> b!110539 (isDefined!110 (getValueByKey!156 (toList!792 lt!56420) lt!56422))))

(declare-fun b!110540 () Bool)

(declare-fun Unit!3427 () Unit!3390)

(assert (=> b!110540 (= e!71883 Unit!3427)))

(declare-fun b!110541 () Bool)

(assert (=> b!110541 (= e!71884 (isDefined!110 (getValueByKey!156 (toList!792 lt!56420) lt!56422)))))

(assert (= (and d!31051 c!19607) b!110539))

(assert (= (and d!31051 (not c!19607)) b!110540))

(assert (= (and d!31051 (not res!54666)) b!110541))

(declare-fun m!125321 () Bool)

(assert (=> d!31051 m!125321))

(declare-fun m!125323 () Bool)

(assert (=> b!110539 m!125323))

(declare-fun m!125325 () Bool)

(assert (=> b!110539 m!125325))

(assert (=> b!110539 m!125325))

(declare-fun m!125327 () Bool)

(assert (=> b!110539 m!125327))

(assert (=> b!110541 m!125325))

(assert (=> b!110541 m!125325))

(assert (=> b!110541 m!125327))

(assert (=> d!30909 d!31051))

(declare-fun b!110542 () Bool)

(declare-fun e!71889 () Bool)

(declare-fun e!71890 () Bool)

(assert (=> b!110542 (= e!71889 e!71890)))

(declare-fun c!19610 () Bool)

(declare-fun e!71891 () Bool)

(assert (=> b!110542 (= c!19610 e!71891)))

(declare-fun res!54670 () Bool)

(assert (=> b!110542 (=> (not res!54670) (not e!71891))))

(assert (=> b!110542 (= res!54670 (bvslt #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))))))

(declare-fun b!110543 () Bool)

(assert (=> b!110543 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))))))

(assert (=> b!110543 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2327 (ite c!19423 (_values!2609 newMap!16) lt!56515))))))

(declare-fun lt!57052 () ListLongMap!1553)

(declare-fun e!71885 () Bool)

(assert (=> b!110543 (= e!71885 (= (apply!100 lt!57052 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)) (get!1347 (select (arr!2069 (ite c!19423 (_values!2609 newMap!16) lt!56515)) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2626 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!110544 () Bool)

(declare-fun e!71886 () Bool)

(assert (=> b!110544 (= e!71886 (= lt!57052 (getCurrentListMapNoExtraKeys!104 (_keys!4339 newMap!16) (ite c!19423 (_values!2609 newMap!16) lt!56515) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2626 newMap!16))))))

(declare-fun call!11807 () ListLongMap!1553)

(declare-fun bm!11804 () Bool)

(assert (=> bm!11804 (= call!11807 (getCurrentListMapNoExtraKeys!104 (_keys!4339 newMap!16) (ite c!19423 (_values!2609 newMap!16) lt!56515) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2626 newMap!16)))))

(declare-fun b!110545 () Bool)

(declare-fun e!71887 () ListLongMap!1553)

(assert (=> b!110545 (= e!71887 (ListLongMap!1554 Nil!1624))))

(declare-fun b!110546 () Bool)

(declare-fun e!71888 () ListLongMap!1553)

(assert (=> b!110546 (= e!71887 e!71888)))

(declare-fun c!19608 () Bool)

(assert (=> b!110546 (= c!19608 (validKeyInArray!0 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!110547 () Bool)

(declare-fun res!54667 () Bool)

(assert (=> b!110547 (=> (not res!54667) (not e!71889))))

(assert (=> b!110547 (= res!54667 (not (contains!827 lt!57052 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!110548 () Bool)

(assert (=> b!110548 (= e!71890 e!71885)))

(assert (=> b!110548 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))))))

(declare-fun res!54668 () Bool)

(assert (=> b!110548 (= res!54668 (contains!827 lt!57052 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!110548 (=> (not res!54668) (not e!71885))))

(declare-fun d!31053 () Bool)

(assert (=> d!31053 e!71889))

(declare-fun res!54669 () Bool)

(assert (=> d!31053 (=> (not res!54669) (not e!71889))))

(assert (=> d!31053 (= res!54669 (not (contains!827 lt!57052 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!31053 (= lt!57052 e!71887)))

(declare-fun c!19609 () Bool)

(assert (=> d!31053 (= c!19609 (bvsge #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))))))

(assert (=> d!31053 (validMask!0 (mask!6793 newMap!16))))

(assert (=> d!31053 (= (getCurrentListMapNoExtraKeys!104 (_keys!4339 newMap!16) (ite c!19423 (_values!2609 newMap!16) lt!56515) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) lt!57052)))

(declare-fun b!110549 () Bool)

(assert (=> b!110549 (= e!71886 (isEmpty!380 lt!57052))))

(declare-fun b!110550 () Bool)

(assert (=> b!110550 (= e!71891 (validKeyInArray!0 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!110550 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!110551 () Bool)

(declare-fun lt!57050 () Unit!3390)

(declare-fun lt!57053 () Unit!3390)

(assert (=> b!110551 (= lt!57050 lt!57053)))

(declare-fun lt!57048 () V!3241)

(declare-fun lt!57049 () (_ BitVec 64))

(declare-fun lt!57051 () (_ BitVec 64))

(declare-fun lt!57047 () ListLongMap!1553)

(assert (=> b!110551 (not (contains!827 (+!139 lt!57047 (tuple2!2397 lt!57051 lt!57048)) lt!57049))))

(assert (=> b!110551 (= lt!57053 (addStillNotContains!49 lt!57047 lt!57051 lt!57048 lt!57049))))

(assert (=> b!110551 (= lt!57049 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!110551 (= lt!57048 (get!1347 (select (arr!2069 (ite c!19423 (_values!2609 newMap!16) lt!56515)) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2626 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!110551 (= lt!57051 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!110551 (= lt!57047 call!11807)))

(assert (=> b!110551 (= e!71888 (+!139 call!11807 (tuple2!2397 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000) (get!1347 (select (arr!2069 (ite c!19423 (_values!2609 newMap!16) lt!56515)) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2626 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!110552 () Bool)

(assert (=> b!110552 (= e!71888 call!11807)))

(declare-fun b!110553 () Bool)

(assert (=> b!110553 (= e!71890 e!71886)))

(declare-fun c!19611 () Bool)

(assert (=> b!110553 (= c!19611 (bvslt #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))))))

(assert (= (and d!31053 c!19609) b!110545))

(assert (= (and d!31053 (not c!19609)) b!110546))

(assert (= (and b!110546 c!19608) b!110551))

(assert (= (and b!110546 (not c!19608)) b!110552))

(assert (= (or b!110551 b!110552) bm!11804))

(assert (= (and d!31053 res!54669) b!110547))

(assert (= (and b!110547 res!54667) b!110542))

(assert (= (and b!110542 res!54670) b!110550))

(assert (= (and b!110542 c!19610) b!110548))

(assert (= (and b!110542 (not c!19610)) b!110553))

(assert (= (and b!110548 res!54668) b!110543))

(assert (= (and b!110553 c!19611) b!110544))

(assert (= (and b!110553 (not c!19611)) b!110549))

(declare-fun b_lambda!4945 () Bool)

(assert (=> (not b_lambda!4945) (not b!110543)))

(assert (=> b!110543 t!5766))

(declare-fun b_and!6797 () Bool)

(assert (= b_and!6793 (and (=> t!5766 result!3533) b_and!6797)))

(assert (=> b!110543 t!5768))

(declare-fun b_and!6799 () Bool)

(assert (= b_and!6795 (and (=> t!5768 result!3535) b_and!6799)))

(declare-fun b_lambda!4947 () Bool)

(assert (=> (not b_lambda!4947) (not b!110551)))

(assert (=> b!110551 t!5766))

(declare-fun b_and!6801 () Bool)

(assert (= b_and!6797 (and (=> t!5766 result!3533) b_and!6801)))

(assert (=> b!110551 t!5768))

(declare-fun b_and!6803 () Bool)

(assert (= b_and!6799 (and (=> t!5768 result!3535) b_and!6803)))

(assert (=> b!110543 m!124447))

(assert (=> b!110543 m!124447))

(declare-fun m!125329 () Bool)

(assert (=> b!110543 m!125329))

(assert (=> b!110543 m!124677))

(assert (=> b!110543 m!124677))

(assert (=> b!110543 m!124451))

(assert (=> b!110543 m!124681))

(assert (=> b!110543 m!124451))

(assert (=> b!110550 m!124447))

(assert (=> b!110550 m!124447))

(assert (=> b!110550 m!124463))

(declare-fun m!125331 () Bool)

(assert (=> b!110549 m!125331))

(assert (=> b!110548 m!124447))

(assert (=> b!110548 m!124447))

(declare-fun m!125333 () Bool)

(assert (=> b!110548 m!125333))

(declare-fun m!125335 () Bool)

(assert (=> b!110547 m!125335))

(declare-fun m!125337 () Bool)

(assert (=> b!110544 m!125337))

(assert (=> b!110546 m!124447))

(assert (=> b!110546 m!124447))

(assert (=> b!110546 m!124463))

(declare-fun m!125339 () Bool)

(assert (=> d!31053 m!125339))

(assert (=> d!31053 m!124269))

(assert (=> bm!11804 m!125337))

(assert (=> b!110551 m!124447))

(declare-fun m!125341 () Bool)

(assert (=> b!110551 m!125341))

(declare-fun m!125343 () Bool)

(assert (=> b!110551 m!125343))

(declare-fun m!125345 () Bool)

(assert (=> b!110551 m!125345))

(declare-fun m!125347 () Bool)

(assert (=> b!110551 m!125347))

(assert (=> b!110551 m!124677))

(assert (=> b!110551 m!124677))

(assert (=> b!110551 m!124451))

(assert (=> b!110551 m!124681))

(assert (=> b!110551 m!125345))

(assert (=> b!110551 m!124451))

(assert (=> bm!11759 d!31053))

(declare-fun d!31055 () Bool)

(declare-fun c!19614 () Bool)

(assert (=> d!31055 (= c!19614 ((_ is Nil!1624) (toList!792 lt!56403)))))

(declare-fun e!71894 () (InoxSet tuple2!2396))

(assert (=> d!31055 (= (content!113 (toList!792 lt!56403)) e!71894)))

(declare-fun b!110558 () Bool)

(assert (=> b!110558 (= e!71894 ((as const (Array tuple2!2396 Bool)) false))))

(declare-fun b!110559 () Bool)

(assert (=> b!110559 (= e!71894 ((_ map or) (store ((as const (Array tuple2!2396 Bool)) false) (h!2222 (toList!792 lt!56403)) true) (content!113 (t!5755 (toList!792 lt!56403)))))))

(assert (= (and d!31055 c!19614) b!110558))

(assert (= (and d!31055 (not c!19614)) b!110559))

(declare-fun m!125349 () Bool)

(assert (=> b!110559 m!125349))

(declare-fun m!125351 () Bool)

(assert (=> b!110559 m!125351))

(assert (=> d!30931 d!31055))

(declare-fun b!110560 () Bool)

(declare-fun e!71899 () Bool)

(declare-fun e!71900 () Bool)

(assert (=> b!110560 (= e!71899 e!71900)))

(declare-fun c!19617 () Bool)

(declare-fun e!71901 () Bool)

(assert (=> b!110560 (= c!19617 e!71901)))

(declare-fun res!54674 () Bool)

(assert (=> b!110560 (=> (not res!54674) (not e!71901))))

(assert (=> b!110560 (= res!54674 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2326 (_keys!4339 (v!2920 (underlying!363 thiss!992))))))))

(declare-fun b!110561 () Bool)

(assert (=> b!110561 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2326 (_keys!4339 (v!2920 (underlying!363 thiss!992))))))))

(assert (=> b!110561 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2327 (_values!2609 (v!2920 (underlying!363 thiss!992))))))))

(declare-fun e!71895 () Bool)

(declare-fun lt!57059 () ListLongMap!1553)

(assert (=> b!110561 (= e!71895 (= (apply!100 lt!57059 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!110562 () Bool)

(declare-fun e!71896 () Bool)

(assert (=> b!110562 (= e!71896 (= lt!57059 (getCurrentListMapNoExtraKeys!104 (_keys!4339 (v!2920 (underlying!363 thiss!992))) (_values!2609 (v!2920 (underlying!363 thiss!992))) (mask!6793 (v!2920 (underlying!363 thiss!992))) (extraKeys!2423 (v!2920 (underlying!363 thiss!992))) (zeroValue!2497 (v!2920 (underlying!363 thiss!992))) (minValue!2497 (v!2920 (underlying!363 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))))))))

(declare-fun bm!11805 () Bool)

(declare-fun call!11808 () ListLongMap!1553)

(assert (=> bm!11805 (= call!11808 (getCurrentListMapNoExtraKeys!104 (_keys!4339 (v!2920 (underlying!363 thiss!992))) (_values!2609 (v!2920 (underlying!363 thiss!992))) (mask!6793 (v!2920 (underlying!363 thiss!992))) (extraKeys!2423 (v!2920 (underlying!363 thiss!992))) (zeroValue!2497 (v!2920 (underlying!363 thiss!992))) (minValue!2497 (v!2920 (underlying!363 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2626 (v!2920 (underlying!363 thiss!992)))))))

(declare-fun b!110563 () Bool)

(declare-fun e!71897 () ListLongMap!1553)

(assert (=> b!110563 (= e!71897 (ListLongMap!1554 Nil!1624))))

(declare-fun b!110564 () Bool)

(declare-fun e!71898 () ListLongMap!1553)

(assert (=> b!110564 (= e!71897 e!71898)))

(declare-fun c!19615 () Bool)

(assert (=> b!110564 (= c!19615 (validKeyInArray!0 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!110565 () Bool)

(declare-fun res!54671 () Bool)

(assert (=> b!110565 (=> (not res!54671) (not e!71899))))

(assert (=> b!110565 (= res!54671 (not (contains!827 lt!57059 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!110566 () Bool)

(assert (=> b!110566 (= e!71900 e!71895)))

(assert (=> b!110566 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2326 (_keys!4339 (v!2920 (underlying!363 thiss!992))))))))

(declare-fun res!54672 () Bool)

(assert (=> b!110566 (= res!54672 (contains!827 lt!57059 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!110566 (=> (not res!54672) (not e!71895))))

(declare-fun d!31057 () Bool)

(assert (=> d!31057 e!71899))

(declare-fun res!54673 () Bool)

(assert (=> d!31057 (=> (not res!54673) (not e!71899))))

(assert (=> d!31057 (= res!54673 (not (contains!827 lt!57059 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!31057 (= lt!57059 e!71897)))

(declare-fun c!19616 () Bool)

(assert (=> d!31057 (= c!19616 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2326 (_keys!4339 (v!2920 (underlying!363 thiss!992))))))))

(assert (=> d!31057 (validMask!0 (mask!6793 (v!2920 (underlying!363 thiss!992))))))

(assert (=> d!31057 (= (getCurrentListMapNoExtraKeys!104 (_keys!4339 (v!2920 (underlying!363 thiss!992))) (_values!2609 (v!2920 (underlying!363 thiss!992))) (mask!6793 (v!2920 (underlying!363 thiss!992))) (extraKeys!2423 (v!2920 (underlying!363 thiss!992))) (zeroValue!2497 (v!2920 (underlying!363 thiss!992))) (minValue!2497 (v!2920 (underlying!363 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2626 (v!2920 (underlying!363 thiss!992)))) lt!57059)))

(declare-fun b!110567 () Bool)

(assert (=> b!110567 (= e!71896 (isEmpty!380 lt!57059))))

(declare-fun b!110568 () Bool)

(assert (=> b!110568 (= e!71901 (validKeyInArray!0 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!110568 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!110569 () Bool)

(declare-fun lt!57057 () Unit!3390)

(declare-fun lt!57060 () Unit!3390)

(assert (=> b!110569 (= lt!57057 lt!57060)))

(declare-fun lt!57058 () (_ BitVec 64))

(declare-fun lt!57055 () V!3241)

(declare-fun lt!57054 () ListLongMap!1553)

(declare-fun lt!57056 () (_ BitVec 64))

(assert (=> b!110569 (not (contains!827 (+!139 lt!57054 (tuple2!2397 lt!57058 lt!57055)) lt!57056))))

(assert (=> b!110569 (= lt!57060 (addStillNotContains!49 lt!57054 lt!57058 lt!57055 lt!57056))))

(assert (=> b!110569 (= lt!57056 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!110569 (= lt!57055 (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!110569 (= lt!57058 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (=> b!110569 (= lt!57054 call!11808)))

(assert (=> b!110569 (= e!71898 (+!139 call!11808 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!110570 () Bool)

(assert (=> b!110570 (= e!71898 call!11808)))

(declare-fun b!110571 () Bool)

(assert (=> b!110571 (= e!71900 e!71896)))

(declare-fun c!19618 () Bool)

(assert (=> b!110571 (= c!19618 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2326 (_keys!4339 (v!2920 (underlying!363 thiss!992))))))))

(assert (= (and d!31057 c!19616) b!110563))

(assert (= (and d!31057 (not c!19616)) b!110564))

(assert (= (and b!110564 c!19615) b!110569))

(assert (= (and b!110564 (not c!19615)) b!110570))

(assert (= (or b!110569 b!110570) bm!11805))

(assert (= (and d!31057 res!54673) b!110565))

(assert (= (and b!110565 res!54671) b!110560))

(assert (= (and b!110560 res!54674) b!110568))

(assert (= (and b!110560 c!19617) b!110566))

(assert (= (and b!110560 (not c!19617)) b!110571))

(assert (= (and b!110566 res!54672) b!110561))

(assert (= (and b!110571 c!19618) b!110562))

(assert (= (and b!110571 (not c!19618)) b!110567))

(declare-fun b_lambda!4949 () Bool)

(assert (=> (not b_lambda!4949) (not b!110561)))

(assert (=> b!110561 t!5751))

(declare-fun b_and!6805 () Bool)

(assert (= b_and!6801 (and (=> t!5751 result!3513) b_and!6805)))

(assert (=> b!110561 t!5753))

(declare-fun b_and!6807 () Bool)

(assert (= b_and!6803 (and (=> t!5753 result!3517) b_and!6807)))

(declare-fun b_lambda!4951 () Bool)

(assert (=> (not b_lambda!4951) (not b!110569)))

(assert (=> b!110569 t!5751))

(declare-fun b_and!6809 () Bool)

(assert (= b_and!6805 (and (=> t!5751 result!3513) b_and!6809)))

(assert (=> b!110569 t!5753))

(declare-fun b_and!6811 () Bool)

(assert (= b_and!6807 (and (=> t!5753 result!3517) b_and!6811)))

(declare-fun m!125353 () Bool)

(assert (=> b!110561 m!125353))

(assert (=> b!110561 m!125353))

(declare-fun m!125355 () Bool)

(assert (=> b!110561 m!125355))

(declare-fun m!125357 () Bool)

(assert (=> b!110561 m!125357))

(assert (=> b!110561 m!125357))

(assert (=> b!110561 m!123913))

(declare-fun m!125359 () Bool)

(assert (=> b!110561 m!125359))

(assert (=> b!110561 m!123913))

(assert (=> b!110568 m!125353))

(assert (=> b!110568 m!125353))

(declare-fun m!125361 () Bool)

(assert (=> b!110568 m!125361))

(declare-fun m!125363 () Bool)

(assert (=> b!110567 m!125363))

(assert (=> b!110566 m!125353))

(assert (=> b!110566 m!125353))

(declare-fun m!125365 () Bool)

(assert (=> b!110566 m!125365))

(declare-fun m!125367 () Bool)

(assert (=> b!110565 m!125367))

(declare-fun m!125369 () Bool)

(assert (=> b!110562 m!125369))

(assert (=> b!110564 m!125353))

(assert (=> b!110564 m!125353))

(assert (=> b!110564 m!125361))

(declare-fun m!125371 () Bool)

(assert (=> d!31057 m!125371))

(assert (=> d!31057 m!123901))

(assert (=> bm!11805 m!125369))

(assert (=> b!110569 m!125353))

(declare-fun m!125373 () Bool)

(assert (=> b!110569 m!125373))

(declare-fun m!125375 () Bool)

(assert (=> b!110569 m!125375))

(declare-fun m!125377 () Bool)

(assert (=> b!110569 m!125377))

(declare-fun m!125379 () Bool)

(assert (=> b!110569 m!125379))

(assert (=> b!110569 m!125357))

(assert (=> b!110569 m!125357))

(assert (=> b!110569 m!123913))

(assert (=> b!110569 m!125359))

(assert (=> b!110569 m!125377))

(assert (=> b!110569 m!123913))

(assert (=> bm!11749 d!31057))

(declare-fun d!31059 () Bool)

(declare-fun res!54675 () Bool)

(declare-fun e!71902 () Bool)

(assert (=> d!31059 (=> res!54675 e!71902)))

(assert (=> d!31059 (= res!54675 (and ((_ is Cons!1623) (toList!792 lt!56589)) (= (_1!1209 (h!2222 (toList!792 lt!56589))) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!31059 (= (containsKey!160 (toList!792 lt!56589) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!71902)))

(declare-fun b!110572 () Bool)

(declare-fun e!71903 () Bool)

(assert (=> b!110572 (= e!71902 e!71903)))

(declare-fun res!54676 () Bool)

(assert (=> b!110572 (=> (not res!54676) (not e!71903))))

(assert (=> b!110572 (= res!54676 (and (or (not ((_ is Cons!1623) (toList!792 lt!56589))) (bvsle (_1!1209 (h!2222 (toList!792 lt!56589))) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1623) (toList!792 lt!56589)) (bvslt (_1!1209 (h!2222 (toList!792 lt!56589))) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!110573 () Bool)

(assert (=> b!110573 (= e!71903 (containsKey!160 (t!5755 (toList!792 lt!56589)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!31059 (not res!54675)) b!110572))

(assert (= (and b!110572 res!54676) b!110573))

(assert (=> b!110573 m!124087))

(declare-fun m!125381 () Bool)

(assert (=> b!110573 m!125381))

(assert (=> d!30837 d!31059))

(declare-fun d!31061 () Bool)

(assert (=> d!31061 (= ($colon$colon!82 e!71664 (ite c!19520 (h!2222 (toList!792 lt!56303)) (tuple2!2397 (_1!1209 lt!56299) (_2!1209 lt!56299)))) (Cons!1623 (ite c!19520 (h!2222 (toList!792 lt!56303)) (tuple2!2397 (_1!1209 lt!56299) (_2!1209 lt!56299))) e!71664))))

(assert (=> bm!11752 d!31061))

(declare-fun b!110576 () Bool)

(declare-fun e!71905 () Option!162)

(assert (=> b!110576 (= e!71905 (getValueByKey!156 (t!5755 (t!5755 lt!56391)) (_1!1209 lt!56300)))))

(declare-fun d!31063 () Bool)

(declare-fun c!19619 () Bool)

(assert (=> d!31063 (= c!19619 (and ((_ is Cons!1623) (t!5755 lt!56391)) (= (_1!1209 (h!2222 (t!5755 lt!56391))) (_1!1209 lt!56300))))))

(declare-fun e!71904 () Option!162)

(assert (=> d!31063 (= (getValueByKey!156 (t!5755 lt!56391) (_1!1209 lt!56300)) e!71904)))

(declare-fun b!110574 () Bool)

(assert (=> b!110574 (= e!71904 (Some!161 (_2!1209 (h!2222 (t!5755 lt!56391)))))))

(declare-fun b!110575 () Bool)

(assert (=> b!110575 (= e!71904 e!71905)))

(declare-fun c!19620 () Bool)

(assert (=> b!110575 (= c!19620 (and ((_ is Cons!1623) (t!5755 lt!56391)) (not (= (_1!1209 (h!2222 (t!5755 lt!56391))) (_1!1209 lt!56300)))))))

(declare-fun b!110577 () Bool)

(assert (=> b!110577 (= e!71905 None!160)))

(assert (= (and d!31063 c!19619) b!110574))

(assert (= (and d!31063 (not c!19619)) b!110575))

(assert (= (and b!110575 c!19620) b!110576))

(assert (= (and b!110575 (not c!19620)) b!110577))

(declare-fun m!125383 () Bool)

(assert (=> b!110576 m!125383))

(assert (=> b!110250 d!31063))

(declare-fun d!31065 () Bool)

(declare-fun res!54677 () Bool)

(declare-fun e!71906 () Bool)

(assert (=> d!31065 (=> res!54677 e!71906)))

(assert (=> d!31065 (= res!54677 (= (select (arr!2068 (_keys!4339 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))

(assert (=> d!31065 (= (arrayContainsKey!0 (_keys!4339 newMap!16) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!71906)))

(declare-fun b!110578 () Bool)

(declare-fun e!71907 () Bool)

(assert (=> b!110578 (= e!71906 e!71907)))

(declare-fun res!54678 () Bool)

(assert (=> b!110578 (=> (not res!54678) (not e!71907))))

(assert (=> b!110578 (= res!54678 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2326 (_keys!4339 newMap!16))))))

(declare-fun b!110579 () Bool)

(assert (=> b!110579 (= e!71907 (arrayContainsKey!0 (_keys!4339 newMap!16) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!31065 (not res!54677)) b!110578))

(assert (= (and b!110578 res!54678) b!110579))

(declare-fun m!125385 () Bool)

(assert (=> d!31065 m!125385))

(assert (=> b!110579 m!123865))

(declare-fun m!125387 () Bool)

(assert (=> b!110579 m!125387))

(assert (=> b!110338 d!31065))

(declare-fun d!31067 () Bool)

(declare-fun res!54679 () Bool)

(declare-fun e!71908 () Bool)

(assert (=> d!31067 (=> res!54679 e!71908)))

(assert (=> d!31067 (= res!54679 (and ((_ is Cons!1623) lt!56790) (= (_1!1209 (h!2222 lt!56790)) (_1!1209 lt!56300))))))

(assert (=> d!31067 (= (containsKey!160 lt!56790 (_1!1209 lt!56300)) e!71908)))

(declare-fun b!110580 () Bool)

(declare-fun e!71909 () Bool)

(assert (=> b!110580 (= e!71908 e!71909)))

(declare-fun res!54680 () Bool)

(assert (=> b!110580 (=> (not res!54680) (not e!71909))))

(assert (=> b!110580 (= res!54680 (and (or (not ((_ is Cons!1623) lt!56790)) (bvsle (_1!1209 (h!2222 lt!56790)) (_1!1209 lt!56300))) ((_ is Cons!1623) lt!56790) (bvslt (_1!1209 (h!2222 lt!56790)) (_1!1209 lt!56300))))))

(declare-fun b!110581 () Bool)

(assert (=> b!110581 (= e!71909 (containsKey!160 (t!5755 lt!56790) (_1!1209 lt!56300)))))

(assert (= (and d!31067 (not res!54679)) b!110580))

(assert (= (and b!110580 res!54680) b!110581))

(declare-fun m!125389 () Bool)

(assert (=> b!110581 m!125389))

(assert (=> b!110258 d!31067))

(declare-fun d!31069 () Bool)

(declare-fun res!54681 () Bool)

(declare-fun e!71910 () Bool)

(assert (=> d!31069 (=> res!54681 e!71910)))

(assert (=> d!31069 (= res!54681 (and ((_ is Cons!1623) (toList!792 call!11694)) (= (_1!1209 (h!2222 (toList!792 call!11694))) (select (arr!2068 (_keys!4339 newMap!16)) (index!3207 lt!56493)))))))

(assert (=> d!31069 (= (containsKey!160 (toList!792 call!11694) (select (arr!2068 (_keys!4339 newMap!16)) (index!3207 lt!56493))) e!71910)))

(declare-fun b!110582 () Bool)

(declare-fun e!71911 () Bool)

(assert (=> b!110582 (= e!71910 e!71911)))

(declare-fun res!54682 () Bool)

(assert (=> b!110582 (=> (not res!54682) (not e!71911))))

(assert (=> b!110582 (= res!54682 (and (or (not ((_ is Cons!1623) (toList!792 call!11694))) (bvsle (_1!1209 (h!2222 (toList!792 call!11694))) (select (arr!2068 (_keys!4339 newMap!16)) (index!3207 lt!56493)))) ((_ is Cons!1623) (toList!792 call!11694)) (bvslt (_1!1209 (h!2222 (toList!792 call!11694))) (select (arr!2068 (_keys!4339 newMap!16)) (index!3207 lt!56493)))))))

(declare-fun b!110583 () Bool)

(assert (=> b!110583 (= e!71911 (containsKey!160 (t!5755 (toList!792 call!11694)) (select (arr!2068 (_keys!4339 newMap!16)) (index!3207 lt!56493))))))

(assert (= (and d!31069 (not res!54681)) b!110582))

(assert (= (and b!110582 res!54682) b!110583))

(assert (=> b!110583 m!124141))

(declare-fun m!125391 () Bool)

(assert (=> b!110583 m!125391))

(assert (=> d!30831 d!31069))

(declare-fun d!31071 () Bool)

(declare-fun e!71913 () Bool)

(assert (=> d!31071 e!71913))

(declare-fun res!54683 () Bool)

(assert (=> d!31071 (=> res!54683 e!71913)))

(declare-fun lt!57061 () Bool)

(assert (=> d!31071 (= res!54683 (not lt!57061))))

(declare-fun lt!57062 () Bool)

(assert (=> d!31071 (= lt!57061 lt!57062)))

(declare-fun lt!57063 () Unit!3390)

(declare-fun e!71912 () Unit!3390)

(assert (=> d!31071 (= lt!57063 e!71912)))

(declare-fun c!19621 () Bool)

(assert (=> d!31071 (= c!19621 lt!57062)))

(assert (=> d!31071 (= lt!57062 (containsKey!160 (toList!792 lt!56613) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))

(assert (=> d!31071 (= (contains!827 lt!56613 (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))) lt!57061)))

(declare-fun b!110584 () Bool)

(declare-fun lt!57064 () Unit!3390)

(assert (=> b!110584 (= e!71912 lt!57064)))

(assert (=> b!110584 (= lt!57064 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 lt!56613) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))

(assert (=> b!110584 (isDefined!110 (getValueByKey!156 (toList!792 lt!56613) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))

(declare-fun b!110585 () Bool)

(declare-fun Unit!3428 () Unit!3390)

(assert (=> b!110585 (= e!71912 Unit!3428)))

(declare-fun b!110586 () Bool)

(assert (=> b!110586 (= e!71913 (isDefined!110 (getValueByKey!156 (toList!792 lt!56613) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))))))

(assert (= (and d!31071 c!19621) b!110584))

(assert (= (and d!31071 (not c!19621)) b!110585))

(assert (= (and d!31071 (not res!54683)) b!110586))

(declare-fun m!125393 () Bool)

(assert (=> d!31071 m!125393))

(declare-fun m!125395 () Bool)

(assert (=> b!110584 m!125395))

(assert (=> b!110584 m!124305))

(assert (=> b!110584 m!124305))

(declare-fun m!125397 () Bool)

(assert (=> b!110584 m!125397))

(assert (=> b!110586 m!124305))

(assert (=> b!110586 m!124305))

(assert (=> b!110586 m!125397))

(assert (=> d!30799 d!31071))

(declare-fun e!71915 () Option!162)

(declare-fun b!110589 () Bool)

(assert (=> b!110589 (= e!71915 (getValueByKey!156 (t!5755 lt!56612) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))

(declare-fun d!31073 () Bool)

(declare-fun c!19622 () Bool)

(assert (=> d!31073 (= c!19622 (and ((_ is Cons!1623) lt!56612) (= (_1!1209 (h!2222 lt!56612)) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))))))

(declare-fun e!71914 () Option!162)

(assert (=> d!31073 (= (getValueByKey!156 lt!56612 (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))) e!71914)))

(declare-fun b!110587 () Bool)

(assert (=> b!110587 (= e!71914 (Some!161 (_2!1209 (h!2222 lt!56612))))))

(declare-fun b!110588 () Bool)

(assert (=> b!110588 (= e!71914 e!71915)))

(declare-fun c!19623 () Bool)

(assert (=> b!110588 (= c!19623 (and ((_ is Cons!1623) lt!56612) (not (= (_1!1209 (h!2222 lt!56612)) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))))

(declare-fun b!110590 () Bool)

(assert (=> b!110590 (= e!71915 None!160)))

(assert (= (and d!31073 c!19622) b!110587))

(assert (= (and d!31073 (not c!19622)) b!110588))

(assert (= (and b!110588 c!19623) b!110589))

(assert (= (and b!110588 (not c!19623)) b!110590))

(declare-fun m!125399 () Bool)

(assert (=> b!110589 m!125399))

(assert (=> d!30799 d!31073))

(declare-fun d!31075 () Bool)

(assert (=> d!31075 (= (getValueByKey!156 lt!56612 (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))) (Some!161 (_2!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))

(declare-fun lt!57065 () Unit!3390)

(assert (=> d!31075 (= lt!57065 (choose!691 lt!56612 (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)) (_2!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))

(declare-fun e!71916 () Bool)

(assert (=> d!31075 e!71916))

(declare-fun res!54684 () Bool)

(assert (=> d!31075 (=> (not res!54684) (not e!71916))))

(assert (=> d!31075 (= res!54684 (isStrictlySorted!306 lt!56612))))

(assert (=> d!31075 (= (lemmaContainsTupThenGetReturnValue!75 lt!56612 (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)) (_2!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))) lt!57065)))

(declare-fun b!110591 () Bool)

(declare-fun res!54685 () Bool)

(assert (=> b!110591 (=> (not res!54685) (not e!71916))))

(assert (=> b!110591 (= res!54685 (containsKey!160 lt!56612 (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))

(declare-fun b!110592 () Bool)

(assert (=> b!110592 (= e!71916 (contains!829 lt!56612 (tuple2!2397 (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)) (_2!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))))))

(assert (= (and d!31075 res!54684) b!110591))

(assert (= (and b!110591 res!54685) b!110592))

(assert (=> d!31075 m!124299))

(declare-fun m!125401 () Bool)

(assert (=> d!31075 m!125401))

(declare-fun m!125403 () Bool)

(assert (=> d!31075 m!125403))

(declare-fun m!125405 () Bool)

(assert (=> b!110591 m!125405))

(declare-fun m!125407 () Bool)

(assert (=> b!110592 m!125407))

(assert (=> d!30799 d!31075))

(declare-fun c!19627 () Bool)

(declare-fun c!19624 () Bool)

(declare-fun e!71918 () List!1627)

(declare-fun b!110593 () Bool)

(assert (=> b!110593 (= e!71918 (ite c!19624 (t!5755 (toList!792 lt!56303)) (ite c!19627 (Cons!1623 (h!2222 (toList!792 lt!56303)) (t!5755 (toList!792 lt!56303))) Nil!1624)))))

(declare-fun b!110594 () Bool)

(assert (=> b!110594 (= e!71918 (insertStrictlySorted!78 (t!5755 (toList!792 lt!56303)) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)) (_2!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))

(declare-fun bm!11806 () Bool)

(declare-fun call!11811 () List!1627)

(declare-fun call!11809 () List!1627)

(assert (=> bm!11806 (= call!11811 call!11809)))

(declare-fun b!110595 () Bool)

(declare-fun e!71917 () List!1627)

(declare-fun call!11810 () List!1627)

(assert (=> b!110595 (= e!71917 call!11810)))

(declare-fun b!110596 () Bool)

(assert (=> b!110596 (= c!19627 (and ((_ is Cons!1623) (toList!792 lt!56303)) (bvsgt (_1!1209 (h!2222 (toList!792 lt!56303))) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))))))

(declare-fun e!71920 () List!1627)

(assert (=> b!110596 (= e!71920 e!71917)))

(declare-fun b!110597 () Bool)

(declare-fun res!54687 () Bool)

(declare-fun e!71919 () Bool)

(assert (=> b!110597 (=> (not res!54687) (not e!71919))))

(declare-fun lt!57066 () List!1627)

(assert (=> b!110597 (= res!54687 (containsKey!160 lt!57066 (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))

(declare-fun b!110599 () Bool)

(assert (=> b!110599 (= e!71917 call!11810)))

(declare-fun bm!11807 () Bool)

(assert (=> bm!11807 (= call!11810 call!11811)))

(declare-fun b!110600 () Bool)

(assert (=> b!110600 (= e!71920 call!11811)))

(declare-fun b!110601 () Bool)

(declare-fun e!71921 () List!1627)

(assert (=> b!110601 (= e!71921 e!71920)))

(assert (=> b!110601 (= c!19624 (and ((_ is Cons!1623) (toList!792 lt!56303)) (= (_1!1209 (h!2222 (toList!792 lt!56303))) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))))))

(declare-fun d!31077 () Bool)

(assert (=> d!31077 e!71919))

(declare-fun res!54686 () Bool)

(assert (=> d!31077 (=> (not res!54686) (not e!71919))))

(assert (=> d!31077 (= res!54686 (isStrictlySorted!306 lt!57066))))

(assert (=> d!31077 (= lt!57066 e!71921)))

(declare-fun c!19626 () Bool)

(assert (=> d!31077 (= c!19626 (and ((_ is Cons!1623) (toList!792 lt!56303)) (bvslt (_1!1209 (h!2222 (toList!792 lt!56303))) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))))))

(assert (=> d!31077 (isStrictlySorted!306 (toList!792 lt!56303))))

(assert (=> d!31077 (= (insertStrictlySorted!78 (toList!792 lt!56303) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)) (_2!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))) lt!57066)))

(declare-fun b!110598 () Bool)

(assert (=> b!110598 (= e!71921 call!11809)))

(declare-fun b!110602 () Bool)

(assert (=> b!110602 (= e!71919 (contains!829 lt!57066 (tuple2!2397 (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)) (_2!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))))))

(declare-fun bm!11808 () Bool)

(assert (=> bm!11808 (= call!11809 ($colon$colon!82 e!71918 (ite c!19626 (h!2222 (toList!792 lt!56303)) (tuple2!2397 (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)) (_2!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))))

(declare-fun c!19625 () Bool)

(assert (=> bm!11808 (= c!19625 c!19626)))

(assert (= (and d!31077 c!19626) b!110598))

(assert (= (and d!31077 (not c!19626)) b!110601))

(assert (= (and b!110601 c!19624) b!110600))

(assert (= (and b!110601 (not c!19624)) b!110596))

(assert (= (and b!110596 c!19627) b!110595))

(assert (= (and b!110596 (not c!19627)) b!110599))

(assert (= (or b!110595 b!110599) bm!11807))

(assert (= (or b!110600 bm!11807) bm!11806))

(assert (= (or b!110598 bm!11806) bm!11808))

(assert (= (and bm!11808 c!19625) b!110594))

(assert (= (and bm!11808 (not c!19625)) b!110593))

(assert (= (and d!31077 res!54686) b!110597))

(assert (= (and b!110597 res!54687) b!110602))

(declare-fun m!125409 () Bool)

(assert (=> d!31077 m!125409))

(assert (=> d!31077 m!124623))

(declare-fun m!125411 () Bool)

(assert (=> b!110597 m!125411))

(declare-fun m!125413 () Bool)

(assert (=> bm!11808 m!125413))

(declare-fun m!125415 () Bool)

(assert (=> b!110594 m!125415))

(declare-fun m!125417 () Bool)

(assert (=> b!110602 m!125417))

(assert (=> d!30799 d!31077))

(declare-fun d!31079 () Bool)

(assert (=> d!31079 (= (validKeyInArray!0 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!110187 d!31079))

(declare-fun d!31081 () Bool)

(assert (=> d!31081 (= (validMask!0 (mask!6793 newMap!16)) (and (or (= (mask!6793 newMap!16) #b00000000000000000000000000000111) (= (mask!6793 newMap!16) #b00000000000000000000000000001111) (= (mask!6793 newMap!16) #b00000000000000000000000000011111) (= (mask!6793 newMap!16) #b00000000000000000000000000111111) (= (mask!6793 newMap!16) #b00000000000000000000000001111111) (= (mask!6793 newMap!16) #b00000000000000000000000011111111) (= (mask!6793 newMap!16) #b00000000000000000000000111111111) (= (mask!6793 newMap!16) #b00000000000000000000001111111111) (= (mask!6793 newMap!16) #b00000000000000000000011111111111) (= (mask!6793 newMap!16) #b00000000000000000000111111111111) (= (mask!6793 newMap!16) #b00000000000000000001111111111111) (= (mask!6793 newMap!16) #b00000000000000000011111111111111) (= (mask!6793 newMap!16) #b00000000000000000111111111111111) (= (mask!6793 newMap!16) #b00000000000000001111111111111111) (= (mask!6793 newMap!16) #b00000000000000011111111111111111) (= (mask!6793 newMap!16) #b00000000000000111111111111111111) (= (mask!6793 newMap!16) #b00000000000001111111111111111111) (= (mask!6793 newMap!16) #b00000000000011111111111111111111) (= (mask!6793 newMap!16) #b00000000000111111111111111111111) (= (mask!6793 newMap!16) #b00000000001111111111111111111111) (= (mask!6793 newMap!16) #b00000000011111111111111111111111) (= (mask!6793 newMap!16) #b00000000111111111111111111111111) (= (mask!6793 newMap!16) #b00000001111111111111111111111111) (= (mask!6793 newMap!16) #b00000011111111111111111111111111) (= (mask!6793 newMap!16) #b00000111111111111111111111111111) (= (mask!6793 newMap!16) #b00001111111111111111111111111111) (= (mask!6793 newMap!16) #b00011111111111111111111111111111) (= (mask!6793 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!6793 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!30887 d!31081))

(declare-fun b!110605 () Bool)

(declare-fun e!71923 () Option!162)

(assert (=> b!110605 (= e!71923 (getValueByKey!156 (t!5755 (toList!792 lt!56605)) (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun d!31083 () Bool)

(declare-fun c!19628 () Bool)

(assert (=> d!31083 (= c!19628 (and ((_ is Cons!1623) (toList!792 lt!56605)) (= (_1!1209 (h!2222 (toList!792 lt!56605))) (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(declare-fun e!71922 () Option!162)

(assert (=> d!31083 (= (getValueByKey!156 (toList!792 lt!56605) (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))) e!71922)))

(declare-fun b!110603 () Bool)

(assert (=> b!110603 (= e!71922 (Some!161 (_2!1209 (h!2222 (toList!792 lt!56605)))))))

(declare-fun b!110604 () Bool)

(assert (=> b!110604 (= e!71922 e!71923)))

(declare-fun c!19629 () Bool)

(assert (=> b!110604 (= c!19629 (and ((_ is Cons!1623) (toList!792 lt!56605)) (not (= (_1!1209 (h!2222 (toList!792 lt!56605))) (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))))

(declare-fun b!110606 () Bool)

(assert (=> b!110606 (= e!71923 None!160)))

(assert (= (and d!31083 c!19628) b!110603))

(assert (= (and d!31083 (not c!19628)) b!110604))

(assert (= (and b!110604 c!19629) b!110605))

(assert (= (and b!110604 (not c!19629)) b!110606))

(declare-fun m!125419 () Bool)

(assert (=> b!110605 m!125419))

(assert (=> b!109958 d!31083))

(declare-fun d!31085 () Bool)

(declare-fun lt!57067 () Bool)

(assert (=> d!31085 (= lt!57067 (select (content!113 lt!56737) (tuple2!2397 (_1!1209 lt!56299) (_2!1209 lt!56299))))))

(declare-fun e!71924 () Bool)

(assert (=> d!31085 (= lt!57067 e!71924)))

(declare-fun res!54688 () Bool)

(assert (=> d!31085 (=> (not res!54688) (not e!71924))))

(assert (=> d!31085 (= res!54688 ((_ is Cons!1623) lt!56737))))

(assert (=> d!31085 (= (contains!829 lt!56737 (tuple2!2397 (_1!1209 lt!56299) (_2!1209 lt!56299))) lt!57067)))

(declare-fun b!110607 () Bool)

(declare-fun e!71925 () Bool)

(assert (=> b!110607 (= e!71924 e!71925)))

(declare-fun res!54689 () Bool)

(assert (=> b!110607 (=> res!54689 e!71925)))

(assert (=> b!110607 (= res!54689 (= (h!2222 lt!56737) (tuple2!2397 (_1!1209 lt!56299) (_2!1209 lt!56299))))))

(declare-fun b!110608 () Bool)

(assert (=> b!110608 (= e!71925 (contains!829 (t!5755 lt!56737) (tuple2!2397 (_1!1209 lt!56299) (_2!1209 lt!56299))))))

(assert (= (and d!31085 res!54688) b!110607))

(assert (= (and b!110607 (not res!54689)) b!110608))

(declare-fun m!125421 () Bool)

(assert (=> d!31085 m!125421))

(declare-fun m!125423 () Bool)

(assert (=> d!31085 m!125423))

(declare-fun m!125425 () Bool)

(assert (=> b!110608 m!125425))

(assert (=> b!110185 d!31085))

(declare-fun d!31087 () Bool)

(declare-fun lt!57068 () Bool)

(assert (=> d!31087 (= lt!57068 (select (content!113 lt!56632) (tuple2!2397 (_1!1209 lt!56300) (_2!1209 lt!56300))))))

(declare-fun e!71926 () Bool)

(assert (=> d!31087 (= lt!57068 e!71926)))

(declare-fun res!54690 () Bool)

(assert (=> d!31087 (=> (not res!54690) (not e!71926))))

(assert (=> d!31087 (= res!54690 ((_ is Cons!1623) lt!56632))))

(assert (=> d!31087 (= (contains!829 lt!56632 (tuple2!2397 (_1!1209 lt!56300) (_2!1209 lt!56300))) lt!57068)))

(declare-fun b!110609 () Bool)

(declare-fun e!71927 () Bool)

(assert (=> b!110609 (= e!71926 e!71927)))

(declare-fun res!54691 () Bool)

(assert (=> b!110609 (=> res!54691 e!71927)))

(assert (=> b!110609 (= res!54691 (= (h!2222 lt!56632) (tuple2!2397 (_1!1209 lt!56300) (_2!1209 lt!56300))))))

(declare-fun b!110610 () Bool)

(assert (=> b!110610 (= e!71927 (contains!829 (t!5755 lt!56632) (tuple2!2397 (_1!1209 lt!56300) (_2!1209 lt!56300))))))

(assert (= (and d!31087 res!54690) b!110609))

(assert (= (and b!110609 (not res!54691)) b!110610))

(declare-fun m!125427 () Bool)

(assert (=> d!31087 m!125427))

(declare-fun m!125429 () Bool)

(assert (=> d!31087 m!125429))

(declare-fun m!125431 () Bool)

(assert (=> b!110610 m!125431))

(assert (=> b!110022 d!31087))

(declare-fun d!31089 () Bool)

(assert (=> d!31089 (isDefined!110 (getValueByKey!156 (toList!792 (+!139 lt!56420 (tuple2!2397 lt!56424 lt!56421))) lt!56422))))

(declare-fun lt!57069 () Unit!3390)

(assert (=> d!31089 (= lt!57069 (choose!699 (toList!792 (+!139 lt!56420 (tuple2!2397 lt!56424 lt!56421))) lt!56422))))

(declare-fun e!71928 () Bool)

(assert (=> d!31089 e!71928))

(declare-fun res!54692 () Bool)

(assert (=> d!31089 (=> (not res!54692) (not e!71928))))

(assert (=> d!31089 (= res!54692 (isStrictlySorted!306 (toList!792 (+!139 lt!56420 (tuple2!2397 lt!56424 lt!56421)))))))

(assert (=> d!31089 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 (+!139 lt!56420 (tuple2!2397 lt!56424 lt!56421))) lt!56422) lt!57069)))

(declare-fun b!110611 () Bool)

(assert (=> b!110611 (= e!71928 (containsKey!160 (toList!792 (+!139 lt!56420 (tuple2!2397 lt!56424 lt!56421))) lt!56422))))

(assert (= (and d!31089 res!54692) b!110611))

(assert (=> d!31089 m!124789))

(assert (=> d!31089 m!124789))

(assert (=> d!31089 m!124791))

(declare-fun m!125433 () Bool)

(assert (=> d!31089 m!125433))

(declare-fun m!125435 () Bool)

(assert (=> d!31089 m!125435))

(assert (=> b!110611 m!124785))

(assert (=> b!110268 d!31089))

(declare-fun d!31091 () Bool)

(assert (=> d!31091 (= (isDefined!110 (getValueByKey!156 (toList!792 (+!139 lt!56420 (tuple2!2397 lt!56424 lt!56421))) lt!56422)) (not (isEmpty!382 (getValueByKey!156 (toList!792 (+!139 lt!56420 (tuple2!2397 lt!56424 lt!56421))) lt!56422))))))

(declare-fun bs!4538 () Bool)

(assert (= bs!4538 d!31091))

(assert (=> bs!4538 m!124789))

(declare-fun m!125437 () Bool)

(assert (=> bs!4538 m!125437))

(assert (=> b!110268 d!31091))

(declare-fun e!71930 () Option!162)

(declare-fun b!110614 () Bool)

(assert (=> b!110614 (= e!71930 (getValueByKey!156 (t!5755 (toList!792 (+!139 lt!56420 (tuple2!2397 lt!56424 lt!56421)))) lt!56422))))

(declare-fun d!31093 () Bool)

(declare-fun c!19630 () Bool)

(assert (=> d!31093 (= c!19630 (and ((_ is Cons!1623) (toList!792 (+!139 lt!56420 (tuple2!2397 lt!56424 lt!56421)))) (= (_1!1209 (h!2222 (toList!792 (+!139 lt!56420 (tuple2!2397 lt!56424 lt!56421))))) lt!56422)))))

(declare-fun e!71929 () Option!162)

(assert (=> d!31093 (= (getValueByKey!156 (toList!792 (+!139 lt!56420 (tuple2!2397 lt!56424 lt!56421))) lt!56422) e!71929)))

(declare-fun b!110612 () Bool)

(assert (=> b!110612 (= e!71929 (Some!161 (_2!1209 (h!2222 (toList!792 (+!139 lt!56420 (tuple2!2397 lt!56424 lt!56421)))))))))

(declare-fun b!110613 () Bool)

(assert (=> b!110613 (= e!71929 e!71930)))

(declare-fun c!19631 () Bool)

(assert (=> b!110613 (= c!19631 (and ((_ is Cons!1623) (toList!792 (+!139 lt!56420 (tuple2!2397 lt!56424 lt!56421)))) (not (= (_1!1209 (h!2222 (toList!792 (+!139 lt!56420 (tuple2!2397 lt!56424 lt!56421))))) lt!56422))))))

(declare-fun b!110615 () Bool)

(assert (=> b!110615 (= e!71930 None!160)))

(assert (= (and d!31093 c!19630) b!110612))

(assert (= (and d!31093 (not c!19630)) b!110613))

(assert (= (and b!110613 c!19631) b!110614))

(assert (= (and b!110613 (not c!19631)) b!110615))

(declare-fun m!125439 () Bool)

(assert (=> b!110614 m!125439))

(assert (=> b!110268 d!31093))

(declare-fun d!31095 () Bool)

(declare-fun e!71932 () Bool)

(assert (=> d!31095 e!71932))

(declare-fun res!54693 () Bool)

(assert (=> d!31095 (=> res!54693 e!71932)))

(declare-fun lt!57070 () Bool)

(assert (=> d!31095 (= res!54693 (not lt!57070))))

(declare-fun lt!57071 () Bool)

(assert (=> d!31095 (= lt!57070 lt!57071)))

(declare-fun lt!57072 () Unit!3390)

(declare-fun e!71931 () Unit!3390)

(assert (=> d!31095 (= lt!57072 e!71931)))

(declare-fun c!19632 () Bool)

(assert (=> d!31095 (= c!19632 lt!57071)))

(assert (=> d!31095 (= lt!57071 (containsKey!160 (toList!792 (map!1281 (_2!1210 lt!56890))) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))

(assert (=> d!31095 (= (contains!827 (map!1281 (_2!1210 lt!56890)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) lt!57070)))

(declare-fun b!110616 () Bool)

(declare-fun lt!57073 () Unit!3390)

(assert (=> b!110616 (= e!71931 lt!57073)))

(assert (=> b!110616 (= lt!57073 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 (map!1281 (_2!1210 lt!56890))) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))

(assert (=> b!110616 (isDefined!110 (getValueByKey!156 (toList!792 (map!1281 (_2!1210 lt!56890))) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))

(declare-fun b!110617 () Bool)

(declare-fun Unit!3429 () Unit!3390)

(assert (=> b!110617 (= e!71931 Unit!3429)))

(declare-fun b!110618 () Bool)

(assert (=> b!110618 (= e!71932 (isDefined!110 (getValueByKey!156 (toList!792 (map!1281 (_2!1210 lt!56890))) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355))))))

(assert (= (and d!31095 c!19632) b!110616))

(assert (= (and d!31095 (not c!19632)) b!110617))

(assert (= (and d!31095 (not res!54693)) b!110618))

(assert (=> d!31095 m!123865))

(declare-fun m!125441 () Bool)

(assert (=> d!31095 m!125441))

(assert (=> b!110616 m!123865))

(declare-fun m!125443 () Bool)

(assert (=> b!110616 m!125443))

(assert (=> b!110616 m!123865))

(declare-fun m!125445 () Bool)

(assert (=> b!110616 m!125445))

(assert (=> b!110616 m!125445))

(declare-fun m!125447 () Bool)

(assert (=> b!110616 m!125447))

(assert (=> b!110618 m!123865))

(assert (=> b!110618 m!125445))

(assert (=> b!110618 m!125445))

(assert (=> b!110618 m!125447))

(assert (=> b!110324 d!31095))

(declare-fun d!31097 () Bool)

(assert (=> d!31097 (= (map!1281 (_2!1210 lt!56890)) (getCurrentListMap!469 (_keys!4339 (_2!1210 lt!56890)) (_values!2609 (_2!1210 lt!56890)) (mask!6793 (_2!1210 lt!56890)) (extraKeys!2423 (_2!1210 lt!56890)) (zeroValue!2497 (_2!1210 lt!56890)) (minValue!2497 (_2!1210 lt!56890)) #b00000000000000000000000000000000 (defaultEntry!2626 (_2!1210 lt!56890))))))

(declare-fun bs!4539 () Bool)

(assert (= bs!4539 d!31097))

(declare-fun m!125449 () Bool)

(assert (=> bs!4539 m!125449))

(assert (=> b!110324 d!31097))

(assert (=> d!30873 d!30771))

(declare-fun d!31099 () Bool)

(assert (=> d!31099 (= (apply!100 (+!139 lt!56581 (tuple2!2397 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992))))) lt!56585) (apply!100 lt!56581 lt!56585))))

(assert (=> d!31099 true))

(declare-fun _$34!903 () Unit!3390)

(assert (=> d!31099 (= (choose!701 lt!56581 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992))) lt!56585) _$34!903)))

(declare-fun bs!4540 () Bool)

(assert (= bs!4540 d!31099))

(assert (=> bs!4540 m!124215))

(assert (=> bs!4540 m!124215))

(assert (=> bs!4540 m!124217))

(assert (=> bs!4540 m!124227))

(assert (=> d!30991 d!31099))

(assert (=> d!30991 d!30981))

(declare-fun d!31101 () Bool)

(declare-fun e!71934 () Bool)

(assert (=> d!31101 e!71934))

(declare-fun res!54694 () Bool)

(assert (=> d!31101 (=> res!54694 e!71934)))

(declare-fun lt!57074 () Bool)

(assert (=> d!31101 (= res!54694 (not lt!57074))))

(declare-fun lt!57075 () Bool)

(assert (=> d!31101 (= lt!57074 lt!57075)))

(declare-fun lt!57076 () Unit!3390)

(declare-fun e!71933 () Unit!3390)

(assert (=> d!31101 (= lt!57076 e!71933)))

(declare-fun c!19633 () Bool)

(assert (=> d!31101 (= c!19633 lt!57075)))

(assert (=> d!31101 (= lt!57075 (containsKey!160 (toList!792 lt!56581) lt!56585))))

(assert (=> d!31101 (= (contains!827 lt!56581 lt!56585) lt!57074)))

(declare-fun b!110620 () Bool)

(declare-fun lt!57077 () Unit!3390)

(assert (=> b!110620 (= e!71933 lt!57077)))

(assert (=> b!110620 (= lt!57077 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 lt!56581) lt!56585))))

(assert (=> b!110620 (isDefined!110 (getValueByKey!156 (toList!792 lt!56581) lt!56585))))

(declare-fun b!110621 () Bool)

(declare-fun Unit!3430 () Unit!3390)

(assert (=> b!110621 (= e!71933 Unit!3430)))

(declare-fun b!110622 () Bool)

(assert (=> b!110622 (= e!71934 (isDefined!110 (getValueByKey!156 (toList!792 lt!56581) lt!56585)))))

(assert (= (and d!31101 c!19633) b!110620))

(assert (= (and d!31101 (not c!19633)) b!110621))

(assert (= (and d!31101 (not res!54694)) b!110622))

(declare-fun m!125451 () Bool)

(assert (=> d!31101 m!125451))

(declare-fun m!125453 () Bool)

(assert (=> b!110620 m!125453))

(assert (=> b!110620 m!125025))

(assert (=> b!110620 m!125025))

(declare-fun m!125455 () Bool)

(assert (=> b!110620 m!125455))

(assert (=> b!110622 m!125025))

(assert (=> b!110622 m!125025))

(assert (=> b!110622 m!125455))

(assert (=> d!30991 d!31101))

(assert (=> d!30991 d!30985))

(assert (=> d!30991 d!30975))

(declare-fun d!31103 () Bool)

(assert (=> d!31103 (arrayContainsKey!0 (_keys!4339 newMap!16) lt!56719 #b00000000000000000000000000000000)))

(declare-fun lt!57078 () Unit!3390)

(assert (=> d!31103 (= lt!57078 (choose!13 (_keys!4339 newMap!16) lt!56719 #b00000000000000000000000000000000))))

(assert (=> d!31103 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!31103 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4339 newMap!16) lt!56719 #b00000000000000000000000000000000) lt!57078)))

(declare-fun bs!4541 () Bool)

(assert (= bs!4541 d!31103))

(assert (=> bs!4541 m!124559))

(declare-fun m!125457 () Bool)

(assert (=> bs!4541 m!125457))

(assert (=> b!110129 d!31103))

(declare-fun d!31105 () Bool)

(declare-fun res!54695 () Bool)

(declare-fun e!71935 () Bool)

(assert (=> d!31105 (=> res!54695 e!71935)))

(assert (=> d!31105 (= res!54695 (= (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000) lt!56719))))

(assert (=> d!31105 (= (arrayContainsKey!0 (_keys!4339 newMap!16) lt!56719 #b00000000000000000000000000000000) e!71935)))

(declare-fun b!110623 () Bool)

(declare-fun e!71936 () Bool)

(assert (=> b!110623 (= e!71935 e!71936)))

(declare-fun res!54696 () Bool)

(assert (=> b!110623 (=> (not res!54696) (not e!71936))))

(assert (=> b!110623 (= res!54696 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2326 (_keys!4339 newMap!16))))))

(declare-fun b!110624 () Bool)

(assert (=> b!110624 (= e!71936 (arrayContainsKey!0 (_keys!4339 newMap!16) lt!56719 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!31105 (not res!54695)) b!110623))

(assert (= (and b!110623 res!54696) b!110624))

(assert (=> d!31105 m!124447))

(declare-fun m!125459 () Bool)

(assert (=> b!110624 m!125459))

(assert (=> b!110129 d!31105))

(declare-fun b!110625 () Bool)

(declare-fun e!71937 () SeekEntryResult!264)

(declare-fun e!71938 () SeekEntryResult!264)

(assert (=> b!110625 (= e!71937 e!71938)))

(declare-fun lt!57079 () (_ BitVec 64))

(declare-fun lt!57081 () SeekEntryResult!264)

(assert (=> b!110625 (= lt!57079 (select (arr!2068 (_keys!4339 newMap!16)) (index!3208 lt!57081)))))

(declare-fun c!19636 () Bool)

(assert (=> b!110625 (= c!19636 (= lt!57079 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!110626 () Bool)

(declare-fun e!71939 () SeekEntryResult!264)

(assert (=> b!110626 (= e!71939 (MissingZero!264 (index!3208 lt!57081)))))

(declare-fun b!110627 () Bool)

(assert (=> b!110627 (= e!71938 (Found!264 (index!3208 lt!57081)))))

(declare-fun b!110628 () Bool)

(assert (=> b!110628 (= e!71939 (seekKeyOrZeroReturnVacant!0 (x!13951 lt!57081) (index!3208 lt!57081) (index!3208 lt!57081) (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000) (_keys!4339 newMap!16) (mask!6793 newMap!16)))))

(declare-fun b!110629 () Bool)

(declare-fun c!19634 () Bool)

(assert (=> b!110629 (= c!19634 (= lt!57079 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!110629 (= e!71938 e!71939)))

(declare-fun d!31107 () Bool)

(declare-fun lt!57080 () SeekEntryResult!264)

(assert (=> d!31107 (and (or ((_ is Undefined!264) lt!57080) (not ((_ is Found!264) lt!57080)) (and (bvsge (index!3207 lt!57080) #b00000000000000000000000000000000) (bvslt (index!3207 lt!57080) (size!2326 (_keys!4339 newMap!16))))) (or ((_ is Undefined!264) lt!57080) ((_ is Found!264) lt!57080) (not ((_ is MissingZero!264) lt!57080)) (and (bvsge (index!3206 lt!57080) #b00000000000000000000000000000000) (bvslt (index!3206 lt!57080) (size!2326 (_keys!4339 newMap!16))))) (or ((_ is Undefined!264) lt!57080) ((_ is Found!264) lt!57080) ((_ is MissingZero!264) lt!57080) (not ((_ is MissingVacant!264) lt!57080)) (and (bvsge (index!3209 lt!57080) #b00000000000000000000000000000000) (bvslt (index!3209 lt!57080) (size!2326 (_keys!4339 newMap!16))))) (or ((_ is Undefined!264) lt!57080) (ite ((_ is Found!264) lt!57080) (= (select (arr!2068 (_keys!4339 newMap!16)) (index!3207 lt!57080)) (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!264) lt!57080) (= (select (arr!2068 (_keys!4339 newMap!16)) (index!3206 lt!57080)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!264) lt!57080) (= (select (arr!2068 (_keys!4339 newMap!16)) (index!3209 lt!57080)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!31107 (= lt!57080 e!71937)))

(declare-fun c!19635 () Bool)

(assert (=> d!31107 (= c!19635 (and ((_ is Intermediate!264) lt!57081) (undefined!1076 lt!57081)))))

(assert (=> d!31107 (= lt!57081 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000) (mask!6793 newMap!16)) (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000) (_keys!4339 newMap!16) (mask!6793 newMap!16)))))

(assert (=> d!31107 (validMask!0 (mask!6793 newMap!16))))

(assert (=> d!31107 (= (seekEntryOrOpen!0 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000) (_keys!4339 newMap!16) (mask!6793 newMap!16)) lt!57080)))

(declare-fun b!110630 () Bool)

(assert (=> b!110630 (= e!71937 Undefined!264)))

(assert (= (and d!31107 c!19635) b!110630))

(assert (= (and d!31107 (not c!19635)) b!110625))

(assert (= (and b!110625 c!19636) b!110627))

(assert (= (and b!110625 (not c!19636)) b!110629))

(assert (= (and b!110629 c!19634) b!110626))

(assert (= (and b!110629 (not c!19634)) b!110628))

(declare-fun m!125461 () Bool)

(assert (=> b!110625 m!125461))

(assert (=> b!110628 m!124447))

(declare-fun m!125463 () Bool)

(assert (=> b!110628 m!125463))

(declare-fun m!125465 () Bool)

(assert (=> d!31107 m!125465))

(declare-fun m!125467 () Bool)

(assert (=> d!31107 m!125467))

(assert (=> d!31107 m!124447))

(declare-fun m!125469 () Bool)

(assert (=> d!31107 m!125469))

(declare-fun m!125471 () Bool)

(assert (=> d!31107 m!125471))

(assert (=> d!31107 m!124269))

(declare-fun m!125473 () Bool)

(assert (=> d!31107 m!125473))

(assert (=> d!31107 m!124447))

(assert (=> d!31107 m!125467))

(assert (=> b!110129 d!31107))

(declare-fun b!110633 () Bool)

(declare-fun e!71941 () Option!162)

(assert (=> b!110633 (= e!71941 (getValueByKey!156 (t!5755 (toList!792 lt!56613)) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))

(declare-fun c!19637 () Bool)

(declare-fun d!31109 () Bool)

(assert (=> d!31109 (= c!19637 (and ((_ is Cons!1623) (toList!792 lt!56613)) (= (_1!1209 (h!2222 (toList!792 lt!56613))) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))))))

(declare-fun e!71940 () Option!162)

(assert (=> d!31109 (= (getValueByKey!156 (toList!792 lt!56613) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))) e!71940)))

(declare-fun b!110631 () Bool)

(assert (=> b!110631 (= e!71940 (Some!161 (_2!1209 (h!2222 (toList!792 lt!56613)))))))

(declare-fun b!110632 () Bool)

(assert (=> b!110632 (= e!71940 e!71941)))

(declare-fun c!19638 () Bool)

(assert (=> b!110632 (= c!19638 (and ((_ is Cons!1623) (toList!792 lt!56613)) (not (= (_1!1209 (h!2222 (toList!792 lt!56613))) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))))

(declare-fun b!110634 () Bool)

(assert (=> b!110634 (= e!71941 None!160)))

(assert (= (and d!31109 c!19637) b!110631))

(assert (= (and d!31109 (not c!19637)) b!110632))

(assert (= (and b!110632 c!19638) b!110633))

(assert (= (and b!110632 (not c!19638)) b!110634))

(declare-fun m!125475 () Bool)

(assert (=> b!110633 m!125475))

(assert (=> b!109962 d!31109))

(assert (=> d!30841 d!30775))

(declare-fun d!31111 () Bool)

(assert (=> d!31111 (= (get!1350 (getValueByKey!156 (toList!792 lt!56589) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2926 (getValueByKey!156 (toList!792 lt!56589) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!30881 d!31111))

(declare-fun b!110637 () Bool)

(declare-fun e!71943 () Option!162)

(assert (=> b!110637 (= e!71943 (getValueByKey!156 (t!5755 (toList!792 lt!56589)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun d!31113 () Bool)

(declare-fun c!19639 () Bool)

(assert (=> d!31113 (= c!19639 (and ((_ is Cons!1623) (toList!792 lt!56589)) (= (_1!1209 (h!2222 (toList!792 lt!56589))) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun e!71942 () Option!162)

(assert (=> d!31113 (= (getValueByKey!156 (toList!792 lt!56589) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!71942)))

(declare-fun b!110635 () Bool)

(assert (=> b!110635 (= e!71942 (Some!161 (_2!1209 (h!2222 (toList!792 lt!56589)))))))

(declare-fun b!110636 () Bool)

(assert (=> b!110636 (= e!71942 e!71943)))

(declare-fun c!19640 () Bool)

(assert (=> b!110636 (= c!19640 (and ((_ is Cons!1623) (toList!792 lt!56589)) (not (= (_1!1209 (h!2222 (toList!792 lt!56589))) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!110638 () Bool)

(assert (=> b!110638 (= e!71943 None!160)))

(assert (= (and d!31113 c!19639) b!110635))

(assert (= (and d!31113 (not c!19639)) b!110636))

(assert (= (and b!110636 c!19640) b!110637))

(assert (= (and b!110636 (not c!19640)) b!110638))

(assert (=> b!110637 m!124087))

(declare-fun m!125477 () Bool)

(assert (=> b!110637 m!125477))

(assert (=> d!30881 d!31113))

(declare-fun d!31115 () Bool)

(declare-fun e!71945 () Bool)

(assert (=> d!31115 e!71945))

(declare-fun res!54697 () Bool)

(assert (=> d!31115 (=> res!54697 e!71945)))

(declare-fun lt!57082 () Bool)

(assert (=> d!31115 (= res!54697 (not lt!57082))))

(declare-fun lt!57083 () Bool)

(assert (=> d!31115 (= lt!57082 lt!57083)))

(declare-fun lt!57084 () Unit!3390)

(declare-fun e!71944 () Unit!3390)

(assert (=> d!31115 (= lt!57084 e!71944)))

(declare-fun c!19641 () Bool)

(assert (=> d!31115 (= c!19641 lt!57083)))

(assert (=> d!31115 (= lt!57083 (containsKey!160 (toList!792 lt!56706) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!31115 (= (contains!827 lt!56706 #b0000000000000000000000000000000000000000000000000000000000000000) lt!57082)))

(declare-fun b!110639 () Bool)

(declare-fun lt!57085 () Unit!3390)

(assert (=> b!110639 (= e!71944 lt!57085)))

(assert (=> b!110639 (= lt!57085 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 lt!56706) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!110639 (isDefined!110 (getValueByKey!156 (toList!792 lt!56706) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110640 () Bool)

(declare-fun Unit!3431 () Unit!3390)

(assert (=> b!110640 (= e!71944 Unit!3431)))

(declare-fun b!110641 () Bool)

(assert (=> b!110641 (= e!71945 (isDefined!110 (getValueByKey!156 (toList!792 lt!56706) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!31115 c!19641) b!110639))

(assert (= (and d!31115 (not c!19641)) b!110640))

(assert (= (and d!31115 (not res!54697)) b!110641))

(declare-fun m!125479 () Bool)

(assert (=> d!31115 m!125479))

(declare-fun m!125481 () Bool)

(assert (=> b!110639 m!125481))

(declare-fun m!125483 () Bool)

(assert (=> b!110639 m!125483))

(assert (=> b!110639 m!125483))

(declare-fun m!125485 () Bool)

(assert (=> b!110639 m!125485))

(assert (=> b!110641 m!125483))

(assert (=> b!110641 m!125483))

(assert (=> b!110641 m!125485))

(assert (=> bm!11743 d!31115))

(declare-fun d!31117 () Bool)

(declare-fun e!71947 () Bool)

(assert (=> d!31117 e!71947))

(declare-fun res!54698 () Bool)

(assert (=> d!31117 (=> res!54698 e!71947)))

(declare-fun lt!57086 () Bool)

(assert (=> d!31117 (= res!54698 (not lt!57086))))

(declare-fun lt!57087 () Bool)

(assert (=> d!31117 (= lt!57086 lt!57087)))

(declare-fun lt!57088 () Unit!3390)

(declare-fun e!71946 () Unit!3390)

(assert (=> d!31117 (= lt!57088 e!71946)))

(declare-fun c!19642 () Bool)

(assert (=> d!31117 (= c!19642 lt!57087)))

(assert (=> d!31117 (= lt!57087 (containsKey!160 (toList!792 lt!56684) (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!31117 (= (contains!827 lt!56684 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)) lt!57086)))

(declare-fun b!110642 () Bool)

(declare-fun lt!57089 () Unit!3390)

(assert (=> b!110642 (= e!71946 lt!57089)))

(assert (=> b!110642 (= lt!57089 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 lt!56684) (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!110642 (isDefined!110 (getValueByKey!156 (toList!792 lt!56684) (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!110643 () Bool)

(declare-fun Unit!3432 () Unit!3390)

(assert (=> b!110643 (= e!71946 Unit!3432)))

(declare-fun b!110644 () Bool)

(assert (=> b!110644 (= e!71947 (isDefined!110 (getValueByKey!156 (toList!792 lt!56684) (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!31117 c!19642) b!110642))

(assert (= (and d!31117 (not c!19642)) b!110643))

(assert (= (and d!31117 (not res!54698)) b!110644))

(assert (=> d!31117 m!124447))

(declare-fun m!125487 () Bool)

(assert (=> d!31117 m!125487))

(assert (=> b!110642 m!124447))

(declare-fun m!125489 () Bool)

(assert (=> b!110642 m!125489))

(assert (=> b!110642 m!124447))

(assert (=> b!110642 m!125313))

(assert (=> b!110642 m!125313))

(declare-fun m!125491 () Bool)

(assert (=> b!110642 m!125491))

(assert (=> b!110644 m!124447))

(assert (=> b!110644 m!125313))

(assert (=> b!110644 m!125313))

(assert (=> b!110644 m!125491))

(assert (=> b!110087 d!31117))

(declare-fun b!110647 () Bool)

(declare-fun e!71949 () Option!162)

(assert (=> b!110647 (= e!71949 (getValueByKey!156 (t!5755 (t!5755 lt!56387)) (_1!1209 lt!56299)))))

(declare-fun d!31119 () Bool)

(declare-fun c!19643 () Bool)

(assert (=> d!31119 (= c!19643 (and ((_ is Cons!1623) (t!5755 lt!56387)) (= (_1!1209 (h!2222 (t!5755 lt!56387))) (_1!1209 lt!56299))))))

(declare-fun e!71948 () Option!162)

(assert (=> d!31119 (= (getValueByKey!156 (t!5755 lt!56387) (_1!1209 lt!56299)) e!71948)))

(declare-fun b!110645 () Bool)

(assert (=> b!110645 (= e!71948 (Some!161 (_2!1209 (h!2222 (t!5755 lt!56387)))))))

(declare-fun b!110646 () Bool)

(assert (=> b!110646 (= e!71948 e!71949)))

(declare-fun c!19644 () Bool)

(assert (=> b!110646 (= c!19644 (and ((_ is Cons!1623) (t!5755 lt!56387)) (not (= (_1!1209 (h!2222 (t!5755 lt!56387))) (_1!1209 lt!56299)))))))

(declare-fun b!110648 () Bool)

(assert (=> b!110648 (= e!71949 None!160)))

(assert (= (and d!31119 c!19643) b!110645))

(assert (= (and d!31119 (not c!19643)) b!110646))

(assert (= (and b!110646 c!19644) b!110647))

(assert (= (and b!110646 (not c!19644)) b!110648))

(declare-fun m!125493 () Bool)

(assert (=> b!110647 m!125493))

(assert (=> b!110349 d!31119))

(assert (=> d!30967 d!30965))

(assert (=> d!30967 d!30973))

(declare-fun d!31121 () Bool)

(assert (=> d!31121 (contains!827 (+!139 lt!56577 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))) lt!56574)))

(assert (=> d!31121 true))

(declare-fun _$35!354 () Unit!3390)

(assert (=> d!31121 (= (choose!700 lt!56577 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))) lt!56574) _$35!354)))

(declare-fun bs!4542 () Bool)

(assert (= bs!4542 d!31121))

(assert (=> bs!4542 m!124231))

(assert (=> bs!4542 m!124231))

(assert (=> bs!4542 m!124233))

(assert (=> d!30967 d!31121))

(declare-fun d!31123 () Bool)

(declare-fun e!71951 () Bool)

(assert (=> d!31123 e!71951))

(declare-fun res!54699 () Bool)

(assert (=> d!31123 (=> res!54699 e!71951)))

(declare-fun lt!57090 () Bool)

(assert (=> d!31123 (= res!54699 (not lt!57090))))

(declare-fun lt!57091 () Bool)

(assert (=> d!31123 (= lt!57090 lt!57091)))

(declare-fun lt!57092 () Unit!3390)

(declare-fun e!71950 () Unit!3390)

(assert (=> d!31123 (= lt!57092 e!71950)))

(declare-fun c!19645 () Bool)

(assert (=> d!31123 (= c!19645 lt!57091)))

(assert (=> d!31123 (= lt!57091 (containsKey!160 (toList!792 lt!56577) lt!56574))))

(assert (=> d!31123 (= (contains!827 lt!56577 lt!56574) lt!57090)))

(declare-fun b!110650 () Bool)

(declare-fun lt!57093 () Unit!3390)

(assert (=> b!110650 (= e!71950 lt!57093)))

(assert (=> b!110650 (= lt!57093 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 lt!56577) lt!56574))))

(assert (=> b!110650 (isDefined!110 (getValueByKey!156 (toList!792 lt!56577) lt!56574))))

(declare-fun b!110651 () Bool)

(declare-fun Unit!3433 () Unit!3390)

(assert (=> b!110651 (= e!71950 Unit!3433)))

(declare-fun b!110652 () Bool)

(assert (=> b!110652 (= e!71951 (isDefined!110 (getValueByKey!156 (toList!792 lt!56577) lt!56574)))))

(assert (= (and d!31123 c!19645) b!110650))

(assert (= (and d!31123 (not c!19645)) b!110651))

(assert (= (and d!31123 (not res!54699)) b!110652))

(declare-fun m!125495 () Bool)

(assert (=> d!31123 m!125495))

(declare-fun m!125497 () Bool)

(assert (=> b!110650 m!125497))

(declare-fun m!125499 () Bool)

(assert (=> b!110650 m!125499))

(assert (=> b!110650 m!125499))

(declare-fun m!125501 () Bool)

(assert (=> b!110650 m!125501))

(assert (=> b!110652 m!125499))

(assert (=> b!110652 m!125499))

(assert (=> b!110652 m!125501))

(assert (=> d!30967 d!31123))

(declare-fun lt!57094 () Bool)

(declare-fun d!31125 () Bool)

(assert (=> d!31125 (= lt!57094 (select (content!113 (toList!792 lt!56923)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))))

(declare-fun e!71952 () Bool)

(assert (=> d!31125 (= lt!57094 e!71952)))

(declare-fun res!54700 () Bool)

(assert (=> d!31125 (=> (not res!54700) (not e!71952))))

(assert (=> d!31125 (= res!54700 ((_ is Cons!1623) (toList!792 lt!56923)))))

(assert (=> d!31125 (= (contains!829 (toList!792 lt!56923) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)) lt!57094)))

(declare-fun b!110653 () Bool)

(declare-fun e!71953 () Bool)

(assert (=> b!110653 (= e!71952 e!71953)))

(declare-fun res!54701 () Bool)

(assert (=> b!110653 (=> res!54701 e!71953)))

(assert (=> b!110653 (= res!54701 (= (h!2222 (toList!792 lt!56923)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))))

(declare-fun b!110654 () Bool)

(assert (=> b!110654 (= e!71953 (contains!829 (t!5755 (toList!792 lt!56923)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))))

(assert (= (and d!31125 res!54700) b!110653))

(assert (= (and b!110653 (not res!54701)) b!110654))

(declare-fun m!125503 () Bool)

(assert (=> d!31125 m!125503))

(declare-fun m!125505 () Bool)

(assert (=> d!31125 m!125505))

(declare-fun m!125507 () Bool)

(assert (=> b!110654 m!125507))

(assert (=> b!110392 d!31125))

(declare-fun d!31127 () Bool)

(declare-fun res!54702 () Bool)

(declare-fun e!71954 () Bool)

(assert (=> d!31127 (=> res!54702 e!71954)))

(assert (=> d!31127 (= res!54702 (and ((_ is Cons!1623) lt!56907) (= (_1!1209 (h!2222 lt!56907)) (_1!1209 lt!56299))))))

(assert (=> d!31127 (= (containsKey!160 lt!56907 (_1!1209 lt!56299)) e!71954)))

(declare-fun b!110655 () Bool)

(declare-fun e!71955 () Bool)

(assert (=> b!110655 (= e!71954 e!71955)))

(declare-fun res!54703 () Bool)

(assert (=> b!110655 (=> (not res!54703) (not e!71955))))

(assert (=> b!110655 (= res!54703 (and (or (not ((_ is Cons!1623) lt!56907)) (bvsle (_1!1209 (h!2222 lt!56907)) (_1!1209 lt!56299))) ((_ is Cons!1623) lt!56907) (bvslt (_1!1209 (h!2222 lt!56907)) (_1!1209 lt!56299))))))

(declare-fun b!110656 () Bool)

(assert (=> b!110656 (= e!71955 (containsKey!160 (t!5755 lt!56907) (_1!1209 lt!56299)))))

(assert (= (and d!31127 (not res!54702)) b!110655))

(assert (= (and b!110655 res!54703) b!110656))

(declare-fun m!125509 () Bool)

(assert (=> b!110656 m!125509))

(assert (=> b!110357 d!31127))

(declare-fun d!31129 () Bool)

(declare-fun res!54704 () Bool)

(declare-fun e!71956 () Bool)

(assert (=> d!31129 (=> (not res!54704) (not e!71956))))

(assert (=> d!31129 (= res!54704 (simpleValid!76 (_2!1210 lt!56890)))))

(assert (=> d!31129 (= (valid!430 (_2!1210 lt!56890)) e!71956)))

(declare-fun b!110657 () Bool)

(declare-fun res!54705 () Bool)

(assert (=> b!110657 (=> (not res!54705) (not e!71956))))

(assert (=> b!110657 (= res!54705 (= (arrayCountValidKeys!0 (_keys!4339 (_2!1210 lt!56890)) #b00000000000000000000000000000000 (size!2326 (_keys!4339 (_2!1210 lt!56890)))) (_size!507 (_2!1210 lt!56890))))))

(declare-fun b!110658 () Bool)

(declare-fun res!54706 () Bool)

(assert (=> b!110658 (=> (not res!54706) (not e!71956))))

(assert (=> b!110658 (= res!54706 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4339 (_2!1210 lt!56890)) (mask!6793 (_2!1210 lt!56890))))))

(declare-fun b!110659 () Bool)

(assert (=> b!110659 (= e!71956 (arrayNoDuplicates!0 (_keys!4339 (_2!1210 lt!56890)) #b00000000000000000000000000000000 Nil!1623))))

(assert (= (and d!31129 res!54704) b!110657))

(assert (= (and b!110657 res!54705) b!110658))

(assert (= (and b!110658 res!54706) b!110659))

(declare-fun m!125511 () Bool)

(assert (=> d!31129 m!125511))

(declare-fun m!125513 () Bool)

(assert (=> b!110657 m!125513))

(declare-fun m!125515 () Bool)

(assert (=> b!110658 m!125515))

(declare-fun m!125517 () Bool)

(assert (=> b!110659 m!125517))

(assert (=> b!110318 d!31129))

(declare-fun lt!57095 () Bool)

(declare-fun d!31131 () Bool)

(assert (=> d!31131 (= lt!57095 (select (content!113 (toList!792 lt!56746)) (ite c!19423 (ite c!19416 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))

(declare-fun e!71957 () Bool)

(assert (=> d!31131 (= lt!57095 e!71957)))

(declare-fun res!54707 () Bool)

(assert (=> d!31131 (=> (not res!54707) (not e!71957))))

(assert (=> d!31131 (= res!54707 ((_ is Cons!1623) (toList!792 lt!56746)))))

(assert (=> d!31131 (= (contains!829 (toList!792 lt!56746) (ite c!19423 (ite c!19416 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))) lt!57095)))

(declare-fun b!110660 () Bool)

(declare-fun e!71958 () Bool)

(assert (=> b!110660 (= e!71957 e!71958)))

(declare-fun res!54708 () Bool)

(assert (=> b!110660 (=> res!54708 e!71958)))

(assert (=> b!110660 (= res!54708 (= (h!2222 (toList!792 lt!56746)) (ite c!19423 (ite c!19416 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))

(declare-fun b!110661 () Bool)

(assert (=> b!110661 (= e!71958 (contains!829 (t!5755 (toList!792 lt!56746)) (ite c!19423 (ite c!19416 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))

(assert (= (and d!31131 res!54707) b!110660))

(assert (= (and b!110660 (not res!54708)) b!110661))

(declare-fun m!125519 () Bool)

(assert (=> d!31131 m!125519))

(declare-fun m!125521 () Bool)

(assert (=> d!31131 m!125521))

(declare-fun m!125523 () Bool)

(assert (=> b!110661 m!125523))

(assert (=> b!110199 d!31131))

(declare-fun d!31133 () Bool)

(declare-fun e!71960 () Bool)

(assert (=> d!31133 e!71960))

(declare-fun res!54709 () Bool)

(assert (=> d!31133 (=> res!54709 e!71960)))

(declare-fun lt!57096 () Bool)

(assert (=> d!31133 (= res!54709 (not lt!57096))))

(declare-fun lt!57097 () Bool)

(assert (=> d!31133 (= lt!57096 lt!57097)))

(declare-fun lt!57098 () Unit!3390)

(declare-fun e!71959 () Unit!3390)

(assert (=> d!31133 (= lt!57098 e!71959)))

(declare-fun c!19646 () Bool)

(assert (=> d!31133 (= c!19646 lt!57097)))

(assert (=> d!31133 (= lt!57097 (containsKey!160 (toList!792 (+!139 lt!56725 (tuple2!2397 lt!56729 lt!56726))) lt!56727))))

(assert (=> d!31133 (= (contains!827 (+!139 lt!56725 (tuple2!2397 lt!56729 lt!56726)) lt!56727) lt!57096)))

(declare-fun b!110662 () Bool)

(declare-fun lt!57099 () Unit!3390)

(assert (=> b!110662 (= e!71959 lt!57099)))

(assert (=> b!110662 (= lt!57099 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 (+!139 lt!56725 (tuple2!2397 lt!56729 lt!56726))) lt!56727))))

(assert (=> b!110662 (isDefined!110 (getValueByKey!156 (toList!792 (+!139 lt!56725 (tuple2!2397 lt!56729 lt!56726))) lt!56727))))

(declare-fun b!110663 () Bool)

(declare-fun Unit!3434 () Unit!3390)

(assert (=> b!110663 (= e!71959 Unit!3434)))

(declare-fun b!110664 () Bool)

(assert (=> b!110664 (= e!71960 (isDefined!110 (getValueByKey!156 (toList!792 (+!139 lt!56725 (tuple2!2397 lt!56729 lt!56726))) lt!56727)))))

(assert (= (and d!31133 c!19646) b!110662))

(assert (= (and d!31133 (not c!19646)) b!110663))

(assert (= (and d!31133 (not res!54709)) b!110664))

(declare-fun m!125525 () Bool)

(assert (=> d!31133 m!125525))

(declare-fun m!125527 () Bool)

(assert (=> b!110662 m!125527))

(declare-fun m!125529 () Bool)

(assert (=> b!110662 m!125529))

(assert (=> b!110662 m!125529))

(declare-fun m!125531 () Bool)

(assert (=> b!110662 m!125531))

(assert (=> b!110664 m!125529))

(assert (=> b!110664 m!125529))

(assert (=> b!110664 m!125531))

(assert (=> b!110164 d!31133))

(declare-fun d!31135 () Bool)

(declare-fun c!19647 () Bool)

(assert (=> d!31135 (= c!19647 ((_ is ValueCellFull!1004) (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun e!71961 () V!3241)

(assert (=> d!31135 (= (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!71961)))

(declare-fun b!110665 () Bool)

(assert (=> b!110665 (= e!71961 (get!1348 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!110666 () Bool)

(assert (=> b!110666 (= e!71961 (get!1349 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!31135 c!19647) b!110665))

(assert (= (and d!31135 (not c!19647)) b!110666))

(assert (=> b!110665 m!124581))

(assert (=> b!110665 m!123913))

(declare-fun m!125533 () Bool)

(assert (=> b!110665 m!125533))

(assert (=> b!110666 m!124581))

(assert (=> b!110666 m!123913))

(declare-fun m!125535 () Bool)

(assert (=> b!110666 m!125535))

(assert (=> b!110164 d!31135))

(declare-fun d!31137 () Bool)

(declare-fun e!71962 () Bool)

(assert (=> d!31137 e!71962))

(declare-fun res!54710 () Bool)

(assert (=> d!31137 (=> (not res!54710) (not e!71962))))

(declare-fun lt!57101 () ListLongMap!1553)

(assert (=> d!31137 (= res!54710 (contains!827 lt!57101 (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!57100 () List!1627)

(assert (=> d!31137 (= lt!57101 (ListLongMap!1554 lt!57100))))

(declare-fun lt!57102 () Unit!3390)

(declare-fun lt!57103 () Unit!3390)

(assert (=> d!31137 (= lt!57102 lt!57103)))

(assert (=> d!31137 (= (getValueByKey!156 lt!57100 (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!161 (_2!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!31137 (= lt!57103 (lemmaContainsTupThenGetReturnValue!75 lt!57100 (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!31137 (= lt!57100 (insertStrictlySorted!78 (toList!792 call!11752) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!31137 (= (+!139 call!11752 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!57101)))

(declare-fun b!110667 () Bool)

(declare-fun res!54711 () Bool)

(assert (=> b!110667 (=> (not res!54711) (not e!71962))))

(assert (=> b!110667 (= res!54711 (= (getValueByKey!156 (toList!792 lt!57101) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!161 (_2!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!110668 () Bool)

(assert (=> b!110668 (= e!71962 (contains!829 (toList!792 lt!57101) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!31137 res!54710) b!110667))

(assert (= (and b!110667 res!54711) b!110668))

(declare-fun m!125537 () Bool)

(assert (=> d!31137 m!125537))

(declare-fun m!125539 () Bool)

(assert (=> d!31137 m!125539))

(declare-fun m!125541 () Bool)

(assert (=> d!31137 m!125541))

(declare-fun m!125543 () Bool)

(assert (=> d!31137 m!125543))

(declare-fun m!125545 () Bool)

(assert (=> b!110667 m!125545))

(declare-fun m!125547 () Bool)

(assert (=> b!110668 m!125547))

(assert (=> b!110164 d!31137))

(declare-fun d!31139 () Bool)

(declare-fun e!71963 () Bool)

(assert (=> d!31139 e!71963))

(declare-fun res!54712 () Bool)

(assert (=> d!31139 (=> (not res!54712) (not e!71963))))

(declare-fun lt!57105 () ListLongMap!1553)

(assert (=> d!31139 (= res!54712 (contains!827 lt!57105 (_1!1209 (tuple2!2397 lt!56729 lt!56726))))))

(declare-fun lt!57104 () List!1627)

(assert (=> d!31139 (= lt!57105 (ListLongMap!1554 lt!57104))))

(declare-fun lt!57106 () Unit!3390)

(declare-fun lt!57107 () Unit!3390)

(assert (=> d!31139 (= lt!57106 lt!57107)))

(assert (=> d!31139 (= (getValueByKey!156 lt!57104 (_1!1209 (tuple2!2397 lt!56729 lt!56726))) (Some!161 (_2!1209 (tuple2!2397 lt!56729 lt!56726))))))

(assert (=> d!31139 (= lt!57107 (lemmaContainsTupThenGetReturnValue!75 lt!57104 (_1!1209 (tuple2!2397 lt!56729 lt!56726)) (_2!1209 (tuple2!2397 lt!56729 lt!56726))))))

(assert (=> d!31139 (= lt!57104 (insertStrictlySorted!78 (toList!792 lt!56725) (_1!1209 (tuple2!2397 lt!56729 lt!56726)) (_2!1209 (tuple2!2397 lt!56729 lt!56726))))))

(assert (=> d!31139 (= (+!139 lt!56725 (tuple2!2397 lt!56729 lt!56726)) lt!57105)))

(declare-fun b!110669 () Bool)

(declare-fun res!54713 () Bool)

(assert (=> b!110669 (=> (not res!54713) (not e!71963))))

(assert (=> b!110669 (= res!54713 (= (getValueByKey!156 (toList!792 lt!57105) (_1!1209 (tuple2!2397 lt!56729 lt!56726))) (Some!161 (_2!1209 (tuple2!2397 lt!56729 lt!56726)))))))

(declare-fun b!110670 () Bool)

(assert (=> b!110670 (= e!71963 (contains!829 (toList!792 lt!57105) (tuple2!2397 lt!56729 lt!56726)))))

(assert (= (and d!31139 res!54712) b!110669))

(assert (= (and b!110669 res!54713) b!110670))

(declare-fun m!125549 () Bool)

(assert (=> d!31139 m!125549))

(declare-fun m!125551 () Bool)

(assert (=> d!31139 m!125551))

(declare-fun m!125553 () Bool)

(assert (=> d!31139 m!125553))

(declare-fun m!125555 () Bool)

(assert (=> d!31139 m!125555))

(declare-fun m!125557 () Bool)

(assert (=> b!110669 m!125557))

(declare-fun m!125559 () Bool)

(assert (=> b!110670 m!125559))

(assert (=> b!110164 d!31139))

(declare-fun d!31141 () Bool)

(assert (=> d!31141 (not (contains!827 (+!139 lt!56725 (tuple2!2397 lt!56729 lt!56726)) lt!56727))))

(declare-fun lt!57108 () Unit!3390)

(assert (=> d!31141 (= lt!57108 (choose!698 lt!56725 lt!56729 lt!56726 lt!56727))))

(declare-fun e!71964 () Bool)

(assert (=> d!31141 e!71964))

(declare-fun res!54714 () Bool)

(assert (=> d!31141 (=> (not res!54714) (not e!71964))))

(assert (=> d!31141 (= res!54714 (not (contains!827 lt!56725 lt!56727)))))

(assert (=> d!31141 (= (addStillNotContains!49 lt!56725 lt!56729 lt!56726 lt!56727) lt!57108)))

(declare-fun b!110671 () Bool)

(assert (=> b!110671 (= e!71964 (not (= lt!56729 lt!56727)))))

(assert (= (and d!31141 res!54714) b!110671))

(assert (=> d!31141 m!124601))

(assert (=> d!31141 m!124601))

(assert (=> d!31141 m!124603))

(declare-fun m!125561 () Bool)

(assert (=> d!31141 m!125561))

(declare-fun m!125563 () Bool)

(assert (=> d!31141 m!125563))

(assert (=> b!110164 d!31141))

(declare-fun d!31143 () Bool)

(assert (=> d!31143 (= (get!1350 (getValueByKey!156 (toList!792 lt!56425) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2926 (getValueByKey!156 (toList!792 lt!56425) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!30953 d!31143))

(declare-fun b!110674 () Bool)

(declare-fun e!71966 () Option!162)

(assert (=> b!110674 (= e!71966 (getValueByKey!156 (t!5755 (toList!792 lt!56425)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun c!19648 () Bool)

(declare-fun d!31145 () Bool)

(assert (=> d!31145 (= c!19648 (and ((_ is Cons!1623) (toList!792 lt!56425)) (= (_1!1209 (h!2222 (toList!792 lt!56425))) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun e!71965 () Option!162)

(assert (=> d!31145 (= (getValueByKey!156 (toList!792 lt!56425) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!71965)))

(declare-fun b!110672 () Bool)

(assert (=> b!110672 (= e!71965 (Some!161 (_2!1209 (h!2222 (toList!792 lt!56425)))))))

(declare-fun b!110673 () Bool)

(assert (=> b!110673 (= e!71965 e!71966)))

(declare-fun c!19649 () Bool)

(assert (=> b!110673 (= c!19649 (and ((_ is Cons!1623) (toList!792 lt!56425)) (not (= (_1!1209 (h!2222 (toList!792 lt!56425))) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!110675 () Bool)

(assert (=> b!110675 (= e!71966 None!160)))

(assert (= (and d!31145 c!19648) b!110672))

(assert (= (and d!31145 (not c!19648)) b!110673))

(assert (= (and b!110673 c!19649) b!110674))

(assert (= (and b!110673 (not c!19649)) b!110675))

(assert (=> b!110674 m!124087))

(declare-fun m!125565 () Bool)

(assert (=> b!110674 m!125565))

(assert (=> d!30953 d!31145))

(declare-fun e!71968 () Option!162)

(declare-fun b!110678 () Bool)

(assert (=> b!110678 (= e!71968 (getValueByKey!156 (t!5755 (toList!792 lt!56942)) (_1!1209 (tuple2!2397 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun d!31147 () Bool)

(declare-fun c!19650 () Bool)

(assert (=> d!31147 (= c!19650 (and ((_ is Cons!1623) (toList!792 lt!56942)) (= (_1!1209 (h!2222 (toList!792 lt!56942))) (_1!1209 (tuple2!2397 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(declare-fun e!71967 () Option!162)

(assert (=> d!31147 (= (getValueByKey!156 (toList!792 lt!56942) (_1!1209 (tuple2!2397 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))) e!71967)))

(declare-fun b!110676 () Bool)

(assert (=> b!110676 (= e!71967 (Some!161 (_2!1209 (h!2222 (toList!792 lt!56942)))))))

(declare-fun b!110677 () Bool)

(assert (=> b!110677 (= e!71967 e!71968)))

(declare-fun c!19651 () Bool)

(assert (=> b!110677 (= c!19651 (and ((_ is Cons!1623) (toList!792 lt!56942)) (not (= (_1!1209 (h!2222 (toList!792 lt!56942))) (_1!1209 (tuple2!2397 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))))

(declare-fun b!110679 () Bool)

(assert (=> b!110679 (= e!71968 None!160)))

(assert (= (and d!31147 c!19650) b!110676))

(assert (= (and d!31147 (not c!19650)) b!110677))

(assert (= (and b!110677 c!19651) b!110678))

(assert (= (and b!110677 (not c!19651)) b!110679))

(declare-fun m!125567 () Bool)

(assert (=> b!110678 m!125567))

(assert (=> b!110404 d!31147))

(declare-fun lt!57109 () Bool)

(declare-fun d!31149 () Bool)

(assert (=> d!31149 (= lt!57109 (select (content!113 (toList!792 lt!56938)) (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))))

(declare-fun e!71969 () Bool)

(assert (=> d!31149 (= lt!57109 e!71969)))

(declare-fun res!54715 () Bool)

(assert (=> d!31149 (=> (not res!54715) (not e!71969))))

(assert (=> d!31149 (= res!54715 ((_ is Cons!1623) (toList!792 lt!56938)))))

(assert (=> d!31149 (= (contains!829 (toList!792 lt!56938) (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))) lt!57109)))

(declare-fun b!110680 () Bool)

(declare-fun e!71970 () Bool)

(assert (=> b!110680 (= e!71969 e!71970)))

(declare-fun res!54716 () Bool)

(assert (=> b!110680 (=> res!54716 e!71970)))

(assert (=> b!110680 (= res!54716 (= (h!2222 (toList!792 lt!56938)) (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))))

(declare-fun b!110681 () Bool)

(assert (=> b!110681 (= e!71970 (contains!829 (t!5755 (toList!792 lt!56938)) (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))))

(assert (= (and d!31149 res!54715) b!110680))

(assert (= (and b!110680 (not res!54716)) b!110681))

(declare-fun m!125569 () Bool)

(assert (=> d!31149 m!125569))

(declare-fun m!125571 () Bool)

(assert (=> d!31149 m!125571))

(declare-fun m!125573 () Bool)

(assert (=> b!110681 m!125573))

(assert (=> b!110403 d!31149))

(assert (=> d!30945 d!30917))

(assert (=> d!30945 d!30919))

(declare-fun d!31151 () Bool)

(assert (=> d!31151 (isDefined!110 (getValueByKey!156 (toList!792 lt!56298) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))

(assert (=> d!31151 true))

(declare-fun _$12!359 () Unit!3390)

(assert (=> d!31151 (= (choose!699 (toList!792 lt!56298) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) _$12!359)))

(declare-fun bs!4543 () Bool)

(assert (= bs!4543 d!31151))

(assert (=> bs!4543 m!123865))

(assert (=> bs!4543 m!124119))

(assert (=> bs!4543 m!124119))

(assert (=> bs!4543 m!124121))

(assert (=> d!30945 d!31151))

(declare-fun d!31153 () Bool)

(declare-fun res!54721 () Bool)

(declare-fun e!71975 () Bool)

(assert (=> d!31153 (=> res!54721 e!71975)))

(assert (=> d!31153 (= res!54721 (or ((_ is Nil!1624) (toList!792 lt!56298)) ((_ is Nil!1624) (t!5755 (toList!792 lt!56298)))))))

(assert (=> d!31153 (= (isStrictlySorted!306 (toList!792 lt!56298)) e!71975)))

(declare-fun b!110686 () Bool)

(declare-fun e!71976 () Bool)

(assert (=> b!110686 (= e!71975 e!71976)))

(declare-fun res!54722 () Bool)

(assert (=> b!110686 (=> (not res!54722) (not e!71976))))

(assert (=> b!110686 (= res!54722 (bvslt (_1!1209 (h!2222 (toList!792 lt!56298))) (_1!1209 (h!2222 (t!5755 (toList!792 lt!56298))))))))

(declare-fun b!110687 () Bool)

(assert (=> b!110687 (= e!71976 (isStrictlySorted!306 (t!5755 (toList!792 lt!56298))))))

(assert (= (and d!31153 (not res!54721)) b!110686))

(assert (= (and b!110686 res!54722) b!110687))

(declare-fun m!125575 () Bool)

(assert (=> b!110687 m!125575))

(assert (=> d!30945 d!31153))

(declare-fun d!31155 () Bool)

(assert (=> d!31155 (= (apply!100 (+!139 lt!56698 (tuple2!2397 lt!56696 (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16)))) lt!56702) (apply!100 lt!56698 lt!56702))))

(declare-fun lt!57110 () Unit!3390)

(assert (=> d!31155 (= lt!57110 (choose!701 lt!56698 lt!56696 (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16)) lt!56702))))

(declare-fun e!71977 () Bool)

(assert (=> d!31155 e!71977))

(declare-fun res!54723 () Bool)

(assert (=> d!31155 (=> (not res!54723) (not e!71977))))

(assert (=> d!31155 (= res!54723 (contains!827 lt!56698 lt!56702))))

(assert (=> d!31155 (= (addApplyDifferent!76 lt!56698 lt!56696 (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16)) lt!56702) lt!57110)))

(declare-fun b!110688 () Bool)

(assert (=> b!110688 (= e!71977 (not (= lt!56702 lt!56696)))))

(assert (= (and d!31155 res!54723) b!110688))

(assert (=> d!31155 m!124519))

(assert (=> d!31155 m!124521))

(declare-fun m!125577 () Bool)

(assert (=> d!31155 m!125577))

(declare-fun m!125579 () Bool)

(assert (=> d!31155 m!125579))

(assert (=> d!31155 m!124531))

(assert (=> d!31155 m!124519))

(assert (=> b!110116 d!31155))

(declare-fun d!31157 () Bool)

(declare-fun e!71978 () Bool)

(assert (=> d!31157 e!71978))

(declare-fun res!54724 () Bool)

(assert (=> d!31157 (=> (not res!54724) (not e!71978))))

(declare-fun lt!57112 () ListLongMap!1553)

(assert (=> d!31157 (= res!54724 (contains!827 lt!57112 (_1!1209 (tuple2!2397 lt!56696 (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16))))))))

(declare-fun lt!57111 () List!1627)

(assert (=> d!31157 (= lt!57112 (ListLongMap!1554 lt!57111))))

(declare-fun lt!57113 () Unit!3390)

(declare-fun lt!57114 () Unit!3390)

(assert (=> d!31157 (= lt!57113 lt!57114)))

(assert (=> d!31157 (= (getValueByKey!156 lt!57111 (_1!1209 (tuple2!2397 lt!56696 (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16))))) (Some!161 (_2!1209 (tuple2!2397 lt!56696 (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16))))))))

(assert (=> d!31157 (= lt!57114 (lemmaContainsTupThenGetReturnValue!75 lt!57111 (_1!1209 (tuple2!2397 lt!56696 (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16)))) (_2!1209 (tuple2!2397 lt!56696 (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16))))))))

(assert (=> d!31157 (= lt!57111 (insertStrictlySorted!78 (toList!792 lt!56698) (_1!1209 (tuple2!2397 lt!56696 (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16)))) (_2!1209 (tuple2!2397 lt!56696 (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16))))))))

(assert (=> d!31157 (= (+!139 lt!56698 (tuple2!2397 lt!56696 (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16)))) lt!57112)))

(declare-fun b!110689 () Bool)

(declare-fun res!54725 () Bool)

(assert (=> b!110689 (=> (not res!54725) (not e!71978))))

(assert (=> b!110689 (= res!54725 (= (getValueByKey!156 (toList!792 lt!57112) (_1!1209 (tuple2!2397 lt!56696 (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16))))) (Some!161 (_2!1209 (tuple2!2397 lt!56696 (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16)))))))))

(declare-fun b!110690 () Bool)

(assert (=> b!110690 (= e!71978 (contains!829 (toList!792 lt!57112) (tuple2!2397 lt!56696 (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16)))))))

(assert (= (and d!31157 res!54724) b!110689))

(assert (= (and b!110689 res!54725) b!110690))

(declare-fun m!125581 () Bool)

(assert (=> d!31157 m!125581))

(declare-fun m!125583 () Bool)

(assert (=> d!31157 m!125583))

(declare-fun m!125585 () Bool)

(assert (=> d!31157 m!125585))

(declare-fun m!125587 () Bool)

(assert (=> d!31157 m!125587))

(declare-fun m!125589 () Bool)

(assert (=> b!110689 m!125589))

(declare-fun m!125591 () Bool)

(assert (=> b!110690 m!125591))

(assert (=> b!110116 d!31157))

(declare-fun d!31159 () Bool)

(declare-fun e!71979 () Bool)

(assert (=> d!31159 e!71979))

(declare-fun res!54726 () Bool)

(assert (=> d!31159 (=> (not res!54726) (not e!71979))))

(declare-fun lt!57116 () ListLongMap!1553)

(assert (=> d!31159 (= res!54726 (contains!827 lt!57116 (_1!1209 (tuple2!2397 lt!56707 (ite (and c!19423 c!19416) lt!56306 (zeroValue!2497 newMap!16))))))))

(declare-fun lt!57115 () List!1627)

(assert (=> d!31159 (= lt!57116 (ListLongMap!1554 lt!57115))))

(declare-fun lt!57117 () Unit!3390)

(declare-fun lt!57118 () Unit!3390)

(assert (=> d!31159 (= lt!57117 lt!57118)))

(assert (=> d!31159 (= (getValueByKey!156 lt!57115 (_1!1209 (tuple2!2397 lt!56707 (ite (and c!19423 c!19416) lt!56306 (zeroValue!2497 newMap!16))))) (Some!161 (_2!1209 (tuple2!2397 lt!56707 (ite (and c!19423 c!19416) lt!56306 (zeroValue!2497 newMap!16))))))))

(assert (=> d!31159 (= lt!57118 (lemmaContainsTupThenGetReturnValue!75 lt!57115 (_1!1209 (tuple2!2397 lt!56707 (ite (and c!19423 c!19416) lt!56306 (zeroValue!2497 newMap!16)))) (_2!1209 (tuple2!2397 lt!56707 (ite (and c!19423 c!19416) lt!56306 (zeroValue!2497 newMap!16))))))))

(assert (=> d!31159 (= lt!57115 (insertStrictlySorted!78 (toList!792 lt!56694) (_1!1209 (tuple2!2397 lt!56707 (ite (and c!19423 c!19416) lt!56306 (zeroValue!2497 newMap!16)))) (_2!1209 (tuple2!2397 lt!56707 (ite (and c!19423 c!19416) lt!56306 (zeroValue!2497 newMap!16))))))))

(assert (=> d!31159 (= (+!139 lt!56694 (tuple2!2397 lt!56707 (ite (and c!19423 c!19416) lt!56306 (zeroValue!2497 newMap!16)))) lt!57116)))

(declare-fun b!110691 () Bool)

(declare-fun res!54727 () Bool)

(assert (=> b!110691 (=> (not res!54727) (not e!71979))))

(assert (=> b!110691 (= res!54727 (= (getValueByKey!156 (toList!792 lt!57116) (_1!1209 (tuple2!2397 lt!56707 (ite (and c!19423 c!19416) lt!56306 (zeroValue!2497 newMap!16))))) (Some!161 (_2!1209 (tuple2!2397 lt!56707 (ite (and c!19423 c!19416) lt!56306 (zeroValue!2497 newMap!16)))))))))

(declare-fun b!110692 () Bool)

(assert (=> b!110692 (= e!71979 (contains!829 (toList!792 lt!57116) (tuple2!2397 lt!56707 (ite (and c!19423 c!19416) lt!56306 (zeroValue!2497 newMap!16)))))))

(assert (= (and d!31159 res!54726) b!110691))

(assert (= (and b!110691 res!54727) b!110692))

(declare-fun m!125593 () Bool)

(assert (=> d!31159 m!125593))

(declare-fun m!125595 () Bool)

(assert (=> d!31159 m!125595))

(declare-fun m!125597 () Bool)

(assert (=> d!31159 m!125597))

(declare-fun m!125599 () Bool)

(assert (=> d!31159 m!125599))

(declare-fun m!125601 () Bool)

(assert (=> b!110691 m!125601))

(declare-fun m!125603 () Bool)

(assert (=> b!110692 m!125603))

(assert (=> b!110116 d!31159))

(declare-fun d!31161 () Bool)

(assert (=> d!31161 (= (apply!100 lt!56693 lt!56697) (get!1350 (getValueByKey!156 (toList!792 lt!56693) lt!56697)))))

(declare-fun bs!4544 () Bool)

(assert (= bs!4544 d!31161))

(declare-fun m!125605 () Bool)

(assert (=> bs!4544 m!125605))

(assert (=> bs!4544 m!125605))

(declare-fun m!125607 () Bool)

(assert (=> bs!4544 m!125607))

(assert (=> b!110116 d!31161))

(declare-fun d!31163 () Bool)

(declare-fun e!71980 () Bool)

(assert (=> d!31163 e!71980))

(declare-fun res!54728 () Bool)

(assert (=> d!31163 (=> (not res!54728) (not e!71980))))

(declare-fun lt!57120 () ListLongMap!1553)

(assert (=> d!31163 (= res!54728 (contains!827 lt!57120 (_1!1209 (tuple2!2397 lt!56704 (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16))))))))

(declare-fun lt!57119 () List!1627)

(assert (=> d!31163 (= lt!57120 (ListLongMap!1554 lt!57119))))

(declare-fun lt!57121 () Unit!3390)

(declare-fun lt!57122 () Unit!3390)

(assert (=> d!31163 (= lt!57121 lt!57122)))

(assert (=> d!31163 (= (getValueByKey!156 lt!57119 (_1!1209 (tuple2!2397 lt!56704 (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16))))) (Some!161 (_2!1209 (tuple2!2397 lt!56704 (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16))))))))

(assert (=> d!31163 (= lt!57122 (lemmaContainsTupThenGetReturnValue!75 lt!57119 (_1!1209 (tuple2!2397 lt!56704 (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16)))) (_2!1209 (tuple2!2397 lt!56704 (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16))))))))

(assert (=> d!31163 (= lt!57119 (insertStrictlySorted!78 (toList!792 lt!56693) (_1!1209 (tuple2!2397 lt!56704 (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16)))) (_2!1209 (tuple2!2397 lt!56704 (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16))))))))

(assert (=> d!31163 (= (+!139 lt!56693 (tuple2!2397 lt!56704 (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16)))) lt!57120)))

(declare-fun b!110693 () Bool)

(declare-fun res!54729 () Bool)

(assert (=> b!110693 (=> (not res!54729) (not e!71980))))

(assert (=> b!110693 (= res!54729 (= (getValueByKey!156 (toList!792 lt!57120) (_1!1209 (tuple2!2397 lt!56704 (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16))))) (Some!161 (_2!1209 (tuple2!2397 lt!56704 (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16)))))))))

(declare-fun b!110694 () Bool)

(assert (=> b!110694 (= e!71980 (contains!829 (toList!792 lt!57120) (tuple2!2397 lt!56704 (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16)))))))

(assert (= (and d!31163 res!54728) b!110693))

(assert (= (and b!110693 res!54729) b!110694))

(declare-fun m!125609 () Bool)

(assert (=> d!31163 m!125609))

(declare-fun m!125611 () Bool)

(assert (=> d!31163 m!125611))

(declare-fun m!125613 () Bool)

(assert (=> d!31163 m!125613))

(declare-fun m!125615 () Bool)

(assert (=> d!31163 m!125615))

(declare-fun m!125617 () Bool)

(assert (=> b!110693 m!125617))

(declare-fun m!125619 () Bool)

(assert (=> b!110694 m!125619))

(assert (=> b!110116 d!31163))

(declare-fun d!31165 () Bool)

(assert (=> d!31165 (= (apply!100 lt!56709 lt!56695) (get!1350 (getValueByKey!156 (toList!792 lt!56709) lt!56695)))))

(declare-fun bs!4545 () Bool)

(assert (= bs!4545 d!31165))

(declare-fun m!125621 () Bool)

(assert (=> bs!4545 m!125621))

(assert (=> bs!4545 m!125621))

(declare-fun m!125623 () Bool)

(assert (=> bs!4545 m!125623))

(assert (=> b!110116 d!31165))

(declare-fun b!110695 () Bool)

(declare-fun e!71985 () Bool)

(declare-fun e!71986 () Bool)

(assert (=> b!110695 (= e!71985 e!71986)))

(declare-fun c!19654 () Bool)

(declare-fun e!71987 () Bool)

(assert (=> b!110695 (= c!19654 e!71987)))

(declare-fun res!54733 () Bool)

(assert (=> b!110695 (=> (not res!54733) (not e!71987))))

(assert (=> b!110695 (= res!54733 (bvslt #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))))))

(declare-fun b!110696 () Bool)

(assert (=> b!110696 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))))))

(assert (=> b!110696 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2327 (ite (or c!19423 c!19413) (_values!2609 newMap!16) (array!4368 (store (arr!2069 (_values!2609 newMap!16)) (index!3207 lt!56493) (ValueCellFull!1004 lt!56306)) (size!2327 (_values!2609 newMap!16)))))))))

(declare-fun lt!57128 () ListLongMap!1553)

(declare-fun e!71981 () Bool)

(assert (=> b!110696 (= e!71981 (= (apply!100 lt!57128 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)) (get!1347 (select (arr!2069 (ite (or c!19423 c!19413) (_values!2609 newMap!16) (array!4368 (store (arr!2069 (_values!2609 newMap!16)) (index!3207 lt!56493) (ValueCellFull!1004 lt!56306)) (size!2327 (_values!2609 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2626 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!110697 () Bool)

(declare-fun e!71982 () Bool)

(assert (=> b!110697 (= e!71982 (= lt!57128 (getCurrentListMapNoExtraKeys!104 (_keys!4339 newMap!16) (ite (or c!19423 c!19413) (_values!2609 newMap!16) (array!4368 (store (arr!2069 (_values!2609 newMap!16)) (index!3207 lt!56493) (ValueCellFull!1004 lt!56306)) (size!2327 (_values!2609 newMap!16)))) (mask!6793 newMap!16) (ite c!19423 (ite c!19416 lt!56514 lt!56506) (extraKeys!2423 newMap!16)) (ite (and c!19423 c!19416) lt!56306 (zeroValue!2497 newMap!16)) (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2626 newMap!16))))))

(declare-fun call!11812 () ListLongMap!1553)

(declare-fun bm!11809 () Bool)

(assert (=> bm!11809 (= call!11812 (getCurrentListMapNoExtraKeys!104 (_keys!4339 newMap!16) (ite (or c!19423 c!19413) (_values!2609 newMap!16) (array!4368 (store (arr!2069 (_values!2609 newMap!16)) (index!3207 lt!56493) (ValueCellFull!1004 lt!56306)) (size!2327 (_values!2609 newMap!16)))) (mask!6793 newMap!16) (ite c!19423 (ite c!19416 lt!56514 lt!56506) (extraKeys!2423 newMap!16)) (ite (and c!19423 c!19416) lt!56306 (zeroValue!2497 newMap!16)) (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2626 newMap!16)))))

(declare-fun b!110698 () Bool)

(declare-fun e!71983 () ListLongMap!1553)

(assert (=> b!110698 (= e!71983 (ListLongMap!1554 Nil!1624))))

(declare-fun b!110699 () Bool)

(declare-fun e!71984 () ListLongMap!1553)

(assert (=> b!110699 (= e!71983 e!71984)))

(declare-fun c!19652 () Bool)

(assert (=> b!110699 (= c!19652 (validKeyInArray!0 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!110700 () Bool)

(declare-fun res!54730 () Bool)

(assert (=> b!110700 (=> (not res!54730) (not e!71985))))

(assert (=> b!110700 (= res!54730 (not (contains!827 lt!57128 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!110701 () Bool)

(assert (=> b!110701 (= e!71986 e!71981)))

(assert (=> b!110701 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))))))

(declare-fun res!54731 () Bool)

(assert (=> b!110701 (= res!54731 (contains!827 lt!57128 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!110701 (=> (not res!54731) (not e!71981))))

(declare-fun d!31167 () Bool)

(assert (=> d!31167 e!71985))

(declare-fun res!54732 () Bool)

(assert (=> d!31167 (=> (not res!54732) (not e!71985))))

(assert (=> d!31167 (= res!54732 (not (contains!827 lt!57128 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!31167 (= lt!57128 e!71983)))

(declare-fun c!19653 () Bool)

(assert (=> d!31167 (= c!19653 (bvsge #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))))))

(assert (=> d!31167 (validMask!0 (mask!6793 newMap!16))))

(assert (=> d!31167 (= (getCurrentListMapNoExtraKeys!104 (_keys!4339 newMap!16) (ite (or c!19423 c!19413) (_values!2609 newMap!16) (array!4368 (store (arr!2069 (_values!2609 newMap!16)) (index!3207 lt!56493) (ValueCellFull!1004 lt!56306)) (size!2327 (_values!2609 newMap!16)))) (mask!6793 newMap!16) (ite c!19423 (ite c!19416 lt!56514 lt!56506) (extraKeys!2423 newMap!16)) (ite (and c!19423 c!19416) lt!56306 (zeroValue!2497 newMap!16)) (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) lt!57128)))

(declare-fun b!110702 () Bool)

(assert (=> b!110702 (= e!71982 (isEmpty!380 lt!57128))))

(declare-fun b!110703 () Bool)

(assert (=> b!110703 (= e!71987 (validKeyInArray!0 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!110703 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!110704 () Bool)

(declare-fun lt!57126 () Unit!3390)

(declare-fun lt!57129 () Unit!3390)

(assert (=> b!110704 (= lt!57126 lt!57129)))

(declare-fun lt!57125 () (_ BitVec 64))

(declare-fun lt!57127 () (_ BitVec 64))

(declare-fun lt!57124 () V!3241)

(declare-fun lt!57123 () ListLongMap!1553)

(assert (=> b!110704 (not (contains!827 (+!139 lt!57123 (tuple2!2397 lt!57127 lt!57124)) lt!57125))))

(assert (=> b!110704 (= lt!57129 (addStillNotContains!49 lt!57123 lt!57127 lt!57124 lt!57125))))

(assert (=> b!110704 (= lt!57125 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!110704 (= lt!57124 (get!1347 (select (arr!2069 (ite (or c!19423 c!19413) (_values!2609 newMap!16) (array!4368 (store (arr!2069 (_values!2609 newMap!16)) (index!3207 lt!56493) (ValueCellFull!1004 lt!56306)) (size!2327 (_values!2609 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2626 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!110704 (= lt!57127 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!110704 (= lt!57123 call!11812)))

(assert (=> b!110704 (= e!71984 (+!139 call!11812 (tuple2!2397 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000) (get!1347 (select (arr!2069 (ite (or c!19423 c!19413) (_values!2609 newMap!16) (array!4368 (store (arr!2069 (_values!2609 newMap!16)) (index!3207 lt!56493) (ValueCellFull!1004 lt!56306)) (size!2327 (_values!2609 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2626 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!110705 () Bool)

(assert (=> b!110705 (= e!71984 call!11812)))

(declare-fun b!110706 () Bool)

(assert (=> b!110706 (= e!71986 e!71982)))

(declare-fun c!19655 () Bool)

(assert (=> b!110706 (= c!19655 (bvslt #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))))))

(assert (= (and d!31167 c!19653) b!110698))

(assert (= (and d!31167 (not c!19653)) b!110699))

(assert (= (and b!110699 c!19652) b!110704))

(assert (= (and b!110699 (not c!19652)) b!110705))

(assert (= (or b!110704 b!110705) bm!11809))

(assert (= (and d!31167 res!54732) b!110700))

(assert (= (and b!110700 res!54730) b!110695))

(assert (= (and b!110695 res!54733) b!110703))

(assert (= (and b!110695 c!19654) b!110701))

(assert (= (and b!110695 (not c!19654)) b!110706))

(assert (= (and b!110701 res!54731) b!110696))

(assert (= (and b!110706 c!19655) b!110697))

(assert (= (and b!110706 (not c!19655)) b!110702))

(declare-fun b_lambda!4953 () Bool)

(assert (=> (not b_lambda!4953) (not b!110696)))

(assert (=> b!110696 t!5766))

(declare-fun b_and!6813 () Bool)

(assert (= b_and!6809 (and (=> t!5766 result!3533) b_and!6813)))

(assert (=> b!110696 t!5768))

(declare-fun b_and!6815 () Bool)

(assert (= b_and!6811 (and (=> t!5768 result!3535) b_and!6815)))

(declare-fun b_lambda!4955 () Bool)

(assert (=> (not b_lambda!4955) (not b!110704)))

(assert (=> b!110704 t!5766))

(declare-fun b_and!6817 () Bool)

(assert (= b_and!6813 (and (=> t!5766 result!3533) b_and!6817)))

(assert (=> b!110704 t!5768))

(declare-fun b_and!6819 () Bool)

(assert (= b_and!6815 (and (=> t!5768 result!3535) b_and!6819)))

(assert (=> b!110696 m!124447))

(assert (=> b!110696 m!124447))

(declare-fun m!125625 () Bool)

(assert (=> b!110696 m!125625))

(assert (=> b!110696 m!124503))

(assert (=> b!110696 m!124503))

(assert (=> b!110696 m!124451))

(assert (=> b!110696 m!124507))

(assert (=> b!110696 m!124451))

(assert (=> b!110703 m!124447))

(assert (=> b!110703 m!124447))

(assert (=> b!110703 m!124463))

(declare-fun m!125627 () Bool)

(assert (=> b!110702 m!125627))

(assert (=> b!110701 m!124447))

(assert (=> b!110701 m!124447))

(declare-fun m!125629 () Bool)

(assert (=> b!110701 m!125629))

(declare-fun m!125631 () Bool)

(assert (=> b!110700 m!125631))

(declare-fun m!125633 () Bool)

(assert (=> b!110697 m!125633))

(assert (=> b!110699 m!124447))

(assert (=> b!110699 m!124447))

(assert (=> b!110699 m!124463))

(declare-fun m!125635 () Bool)

(assert (=> d!31167 m!125635))

(assert (=> d!31167 m!124269))

(assert (=> bm!11809 m!125633))

(assert (=> b!110704 m!124447))

(declare-fun m!125637 () Bool)

(assert (=> b!110704 m!125637))

(declare-fun m!125639 () Bool)

(assert (=> b!110704 m!125639))

(declare-fun m!125641 () Bool)

(assert (=> b!110704 m!125641))

(declare-fun m!125643 () Bool)

(assert (=> b!110704 m!125643))

(assert (=> b!110704 m!124503))

(assert (=> b!110704 m!124503))

(assert (=> b!110704 m!124451))

(assert (=> b!110704 m!124507))

(assert (=> b!110704 m!125641))

(assert (=> b!110704 m!124451))

(assert (=> b!110116 d!31167))

(declare-fun d!31169 () Bool)

(assert (=> d!31169 (= (apply!100 (+!139 lt!56693 (tuple2!2397 lt!56704 (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16)))) lt!56697) (apply!100 lt!56693 lt!56697))))

(declare-fun lt!57130 () Unit!3390)

(assert (=> d!31169 (= lt!57130 (choose!701 lt!56693 lt!56704 (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16)) lt!56697))))

(declare-fun e!71988 () Bool)

(assert (=> d!31169 e!71988))

(declare-fun res!54734 () Bool)

(assert (=> d!31169 (=> (not res!54734) (not e!71988))))

(assert (=> d!31169 (= res!54734 (contains!827 lt!56693 lt!56697))))

(assert (=> d!31169 (= (addApplyDifferent!76 lt!56693 lt!56704 (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16)) lt!56697) lt!57130)))

(declare-fun b!110707 () Bool)

(assert (=> b!110707 (= e!71988 (not (= lt!56697 lt!56704)))))

(assert (= (and d!31169 res!54734) b!110707))

(assert (=> d!31169 m!124523))

(assert (=> d!31169 m!124547))

(declare-fun m!125645 () Bool)

(assert (=> d!31169 m!125645))

(declare-fun m!125647 () Bool)

(assert (=> d!31169 m!125647))

(assert (=> d!31169 m!124525))

(assert (=> d!31169 m!124523))

(assert (=> b!110116 d!31169))

(declare-fun d!31171 () Bool)

(assert (=> d!31171 (= (apply!100 (+!139 lt!56709 (tuple2!2397 lt!56700 (ite (and c!19423 c!19416) lt!56306 (zeroValue!2497 newMap!16)))) lt!56695) (apply!100 lt!56709 lt!56695))))

(declare-fun lt!57131 () Unit!3390)

(assert (=> d!31171 (= lt!57131 (choose!701 lt!56709 lt!56700 (ite (and c!19423 c!19416) lt!56306 (zeroValue!2497 newMap!16)) lt!56695))))

(declare-fun e!71989 () Bool)

(assert (=> d!31171 e!71989))

(declare-fun res!54735 () Bool)

(assert (=> d!31171 (=> (not res!54735) (not e!71989))))

(assert (=> d!31171 (= res!54735 (contains!827 lt!56709 lt!56695))))

(assert (=> d!31171 (= (addApplyDifferent!76 lt!56709 lt!56700 (ite (and c!19423 c!19416) lt!56306 (zeroValue!2497 newMap!16)) lt!56695) lt!57131)))

(declare-fun b!110708 () Bool)

(assert (=> b!110708 (= e!71989 (not (= lt!56695 lt!56700)))))

(assert (= (and d!31171 res!54735) b!110708))

(assert (=> d!31171 m!124527))

(assert (=> d!31171 m!124529))

(declare-fun m!125649 () Bool)

(assert (=> d!31171 m!125649))

(declare-fun m!125651 () Bool)

(assert (=> d!31171 m!125651))

(assert (=> d!31171 m!124543))

(assert (=> d!31171 m!124527))

(assert (=> b!110116 d!31171))

(declare-fun d!31173 () Bool)

(assert (=> d!31173 (contains!827 (+!139 lt!56694 (tuple2!2397 lt!56707 (ite (and c!19423 c!19416) lt!56306 (zeroValue!2497 newMap!16)))) lt!56691)))

(declare-fun lt!57132 () Unit!3390)

(assert (=> d!31173 (= lt!57132 (choose!700 lt!56694 lt!56707 (ite (and c!19423 c!19416) lt!56306 (zeroValue!2497 newMap!16)) lt!56691))))

(assert (=> d!31173 (contains!827 lt!56694 lt!56691)))

(assert (=> d!31173 (= (addStillContains!76 lt!56694 lt!56707 (ite (and c!19423 c!19416) lt!56306 (zeroValue!2497 newMap!16)) lt!56691) lt!57132)))

(declare-fun bs!4546 () Bool)

(assert (= bs!4546 d!31173))

(assert (=> bs!4546 m!124535))

(assert (=> bs!4546 m!124535))

(assert (=> bs!4546 m!124537))

(declare-fun m!125653 () Bool)

(assert (=> bs!4546 m!125653))

(declare-fun m!125655 () Bool)

(assert (=> bs!4546 m!125655))

(assert (=> b!110116 d!31173))

(declare-fun d!31175 () Bool)

(assert (=> d!31175 (= (apply!100 (+!139 lt!56693 (tuple2!2397 lt!56704 (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16)))) lt!56697) (get!1350 (getValueByKey!156 (toList!792 (+!139 lt!56693 (tuple2!2397 lt!56704 (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16))))) lt!56697)))))

(declare-fun bs!4547 () Bool)

(assert (= bs!4547 d!31175))

(declare-fun m!125657 () Bool)

(assert (=> bs!4547 m!125657))

(assert (=> bs!4547 m!125657))

(declare-fun m!125659 () Bool)

(assert (=> bs!4547 m!125659))

(assert (=> b!110116 d!31175))

(declare-fun d!31177 () Bool)

(assert (=> d!31177 (= (apply!100 lt!56698 lt!56702) (get!1350 (getValueByKey!156 (toList!792 lt!56698) lt!56702)))))

(declare-fun bs!4548 () Bool)

(assert (= bs!4548 d!31177))

(declare-fun m!125661 () Bool)

(assert (=> bs!4548 m!125661))

(assert (=> bs!4548 m!125661))

(declare-fun m!125663 () Bool)

(assert (=> bs!4548 m!125663))

(assert (=> b!110116 d!31177))

(declare-fun d!31179 () Bool)

(declare-fun e!71991 () Bool)

(assert (=> d!31179 e!71991))

(declare-fun res!54736 () Bool)

(assert (=> d!31179 (=> res!54736 e!71991)))

(declare-fun lt!57133 () Bool)

(assert (=> d!31179 (= res!54736 (not lt!57133))))

(declare-fun lt!57134 () Bool)

(assert (=> d!31179 (= lt!57133 lt!57134)))

(declare-fun lt!57135 () Unit!3390)

(declare-fun e!71990 () Unit!3390)

(assert (=> d!31179 (= lt!57135 e!71990)))

(declare-fun c!19656 () Bool)

(assert (=> d!31179 (= c!19656 lt!57134)))

(assert (=> d!31179 (= lt!57134 (containsKey!160 (toList!792 (+!139 lt!56694 (tuple2!2397 lt!56707 (ite (and c!19423 c!19416) lt!56306 (zeroValue!2497 newMap!16))))) lt!56691))))

(assert (=> d!31179 (= (contains!827 (+!139 lt!56694 (tuple2!2397 lt!56707 (ite (and c!19423 c!19416) lt!56306 (zeroValue!2497 newMap!16)))) lt!56691) lt!57133)))

(declare-fun b!110709 () Bool)

(declare-fun lt!57136 () Unit!3390)

(assert (=> b!110709 (= e!71990 lt!57136)))

(assert (=> b!110709 (= lt!57136 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 (+!139 lt!56694 (tuple2!2397 lt!56707 (ite (and c!19423 c!19416) lt!56306 (zeroValue!2497 newMap!16))))) lt!56691))))

(assert (=> b!110709 (isDefined!110 (getValueByKey!156 (toList!792 (+!139 lt!56694 (tuple2!2397 lt!56707 (ite (and c!19423 c!19416) lt!56306 (zeroValue!2497 newMap!16))))) lt!56691))))

(declare-fun b!110710 () Bool)

(declare-fun Unit!3435 () Unit!3390)

(assert (=> b!110710 (= e!71990 Unit!3435)))

(declare-fun b!110711 () Bool)

(assert (=> b!110711 (= e!71991 (isDefined!110 (getValueByKey!156 (toList!792 (+!139 lt!56694 (tuple2!2397 lt!56707 (ite (and c!19423 c!19416) lt!56306 (zeroValue!2497 newMap!16))))) lt!56691)))))

(assert (= (and d!31179 c!19656) b!110709))

(assert (= (and d!31179 (not c!19656)) b!110710))

(assert (= (and d!31179 (not res!54736)) b!110711))

(declare-fun m!125665 () Bool)

(assert (=> d!31179 m!125665))

(declare-fun m!125667 () Bool)

(assert (=> b!110709 m!125667))

(declare-fun m!125669 () Bool)

(assert (=> b!110709 m!125669))

(assert (=> b!110709 m!125669))

(declare-fun m!125671 () Bool)

(assert (=> b!110709 m!125671))

(assert (=> b!110711 m!125669))

(assert (=> b!110711 m!125669))

(assert (=> b!110711 m!125671))

(assert (=> b!110116 d!31179))

(declare-fun d!31181 () Bool)

(declare-fun e!71992 () Bool)

(assert (=> d!31181 e!71992))

(declare-fun res!54737 () Bool)

(assert (=> d!31181 (=> (not res!54737) (not e!71992))))

(declare-fun lt!57138 () ListLongMap!1553)

(assert (=> d!31181 (= res!54737 (contains!827 lt!57138 (_1!1209 (tuple2!2397 lt!56700 (ite (and c!19423 c!19416) lt!56306 (zeroValue!2497 newMap!16))))))))

(declare-fun lt!57137 () List!1627)

(assert (=> d!31181 (= lt!57138 (ListLongMap!1554 lt!57137))))

(declare-fun lt!57139 () Unit!3390)

(declare-fun lt!57140 () Unit!3390)

(assert (=> d!31181 (= lt!57139 lt!57140)))

(assert (=> d!31181 (= (getValueByKey!156 lt!57137 (_1!1209 (tuple2!2397 lt!56700 (ite (and c!19423 c!19416) lt!56306 (zeroValue!2497 newMap!16))))) (Some!161 (_2!1209 (tuple2!2397 lt!56700 (ite (and c!19423 c!19416) lt!56306 (zeroValue!2497 newMap!16))))))))

(assert (=> d!31181 (= lt!57140 (lemmaContainsTupThenGetReturnValue!75 lt!57137 (_1!1209 (tuple2!2397 lt!56700 (ite (and c!19423 c!19416) lt!56306 (zeroValue!2497 newMap!16)))) (_2!1209 (tuple2!2397 lt!56700 (ite (and c!19423 c!19416) lt!56306 (zeroValue!2497 newMap!16))))))))

(assert (=> d!31181 (= lt!57137 (insertStrictlySorted!78 (toList!792 lt!56709) (_1!1209 (tuple2!2397 lt!56700 (ite (and c!19423 c!19416) lt!56306 (zeroValue!2497 newMap!16)))) (_2!1209 (tuple2!2397 lt!56700 (ite (and c!19423 c!19416) lt!56306 (zeroValue!2497 newMap!16))))))))

(assert (=> d!31181 (= (+!139 lt!56709 (tuple2!2397 lt!56700 (ite (and c!19423 c!19416) lt!56306 (zeroValue!2497 newMap!16)))) lt!57138)))

(declare-fun b!110712 () Bool)

(declare-fun res!54738 () Bool)

(assert (=> b!110712 (=> (not res!54738) (not e!71992))))

(assert (=> b!110712 (= res!54738 (= (getValueByKey!156 (toList!792 lt!57138) (_1!1209 (tuple2!2397 lt!56700 (ite (and c!19423 c!19416) lt!56306 (zeroValue!2497 newMap!16))))) (Some!161 (_2!1209 (tuple2!2397 lt!56700 (ite (and c!19423 c!19416) lt!56306 (zeroValue!2497 newMap!16)))))))))

(declare-fun b!110713 () Bool)

(assert (=> b!110713 (= e!71992 (contains!829 (toList!792 lt!57138) (tuple2!2397 lt!56700 (ite (and c!19423 c!19416) lt!56306 (zeroValue!2497 newMap!16)))))))

(assert (= (and d!31181 res!54737) b!110712))

(assert (= (and b!110712 res!54738) b!110713))

(declare-fun m!125673 () Bool)

(assert (=> d!31181 m!125673))

(declare-fun m!125675 () Bool)

(assert (=> d!31181 m!125675))

(declare-fun m!125677 () Bool)

(assert (=> d!31181 m!125677))

(declare-fun m!125679 () Bool)

(assert (=> d!31181 m!125679))

(declare-fun m!125681 () Bool)

(assert (=> b!110712 m!125681))

(declare-fun m!125683 () Bool)

(assert (=> b!110713 m!125683))

(assert (=> b!110116 d!31181))

(declare-fun d!31183 () Bool)

(assert (=> d!31183 (= (apply!100 (+!139 lt!56709 (tuple2!2397 lt!56700 (ite (and c!19423 c!19416) lt!56306 (zeroValue!2497 newMap!16)))) lt!56695) (get!1350 (getValueByKey!156 (toList!792 (+!139 lt!56709 (tuple2!2397 lt!56700 (ite (and c!19423 c!19416) lt!56306 (zeroValue!2497 newMap!16))))) lt!56695)))))

(declare-fun bs!4549 () Bool)

(assert (= bs!4549 d!31183))

(declare-fun m!125685 () Bool)

(assert (=> bs!4549 m!125685))

(assert (=> bs!4549 m!125685))

(declare-fun m!125687 () Bool)

(assert (=> bs!4549 m!125687))

(assert (=> b!110116 d!31183))

(declare-fun d!31185 () Bool)

(assert (=> d!31185 (= (apply!100 (+!139 lt!56698 (tuple2!2397 lt!56696 (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16)))) lt!56702) (get!1350 (getValueByKey!156 (toList!792 (+!139 lt!56698 (tuple2!2397 lt!56696 (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16))))) lt!56702)))))

(declare-fun bs!4550 () Bool)

(assert (= bs!4550 d!31185))

(declare-fun m!125689 () Bool)

(assert (=> bs!4550 m!125689))

(assert (=> bs!4550 m!125689))

(declare-fun m!125691 () Bool)

(assert (=> bs!4550 m!125691))

(assert (=> b!110116 d!31185))

(assert (=> b!110157 d!31057))

(declare-fun b!110716 () Bool)

(declare-fun e!71994 () Option!162)

(assert (=> b!110716 (= e!71994 (getValueByKey!156 (t!5755 (t!5755 lt!56398)) (_1!1209 lt!56300)))))

(declare-fun d!31187 () Bool)

(declare-fun c!19657 () Bool)

(assert (=> d!31187 (= c!19657 (and ((_ is Cons!1623) (t!5755 lt!56398)) (= (_1!1209 (h!2222 (t!5755 lt!56398))) (_1!1209 lt!56300))))))

(declare-fun e!71993 () Option!162)

(assert (=> d!31187 (= (getValueByKey!156 (t!5755 lt!56398) (_1!1209 lt!56300)) e!71993)))

(declare-fun b!110714 () Bool)

(assert (=> b!110714 (= e!71993 (Some!161 (_2!1209 (h!2222 (t!5755 lt!56398)))))))

(declare-fun b!110715 () Bool)

(assert (=> b!110715 (= e!71993 e!71994)))

(declare-fun c!19658 () Bool)

(assert (=> b!110715 (= c!19658 (and ((_ is Cons!1623) (t!5755 lt!56398)) (not (= (_1!1209 (h!2222 (t!5755 lt!56398))) (_1!1209 lt!56300)))))))

(declare-fun b!110717 () Bool)

(assert (=> b!110717 (= e!71994 None!160)))

(assert (= (and d!31187 c!19657) b!110714))

(assert (= (and d!31187 (not c!19657)) b!110715))

(assert (= (and b!110715 c!19658) b!110716))

(assert (= (and b!110715 (not c!19658)) b!110717))

(declare-fun m!125693 () Bool)

(assert (=> b!110716 m!125693))

(assert (=> b!109985 d!31187))

(declare-fun d!31189 () Bool)

(declare-fun e!71996 () Bool)

(assert (=> d!31189 e!71996))

(declare-fun res!54739 () Bool)

(assert (=> d!31189 (=> res!54739 e!71996)))

(declare-fun lt!57141 () Bool)

(assert (=> d!31189 (= res!54739 (not lt!57141))))

(declare-fun lt!57142 () Bool)

(assert (=> d!31189 (= lt!57141 lt!57142)))

(declare-fun lt!57143 () Unit!3390)

(declare-fun e!71995 () Unit!3390)

(assert (=> d!31189 (= lt!57143 e!71995)))

(declare-fun c!19659 () Bool)

(assert (=> d!31189 (= c!19659 lt!57142)))

(assert (=> d!31189 (= lt!57142 (containsKey!160 (toList!792 lt!56942) (_1!1209 (tuple2!2397 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(assert (=> d!31189 (= (contains!827 lt!56942 (_1!1209 (tuple2!2397 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))) lt!57141)))

(declare-fun b!110718 () Bool)

(declare-fun lt!57144 () Unit!3390)

(assert (=> b!110718 (= e!71995 lt!57144)))

(assert (=> b!110718 (= lt!57144 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 lt!56942) (_1!1209 (tuple2!2397 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(assert (=> b!110718 (isDefined!110 (getValueByKey!156 (toList!792 lt!56942) (_1!1209 (tuple2!2397 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun b!110719 () Bool)

(declare-fun Unit!3436 () Unit!3390)

(assert (=> b!110719 (= e!71995 Unit!3436)))

(declare-fun b!110720 () Bool)

(assert (=> b!110720 (= e!71996 (isDefined!110 (getValueByKey!156 (toList!792 lt!56942) (_1!1209 (tuple2!2397 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(assert (= (and d!31189 c!19659) b!110718))

(assert (= (and d!31189 (not c!19659)) b!110719))

(assert (= (and d!31189 (not res!54739)) b!110720))

(declare-fun m!125695 () Bool)

(assert (=> d!31189 m!125695))

(declare-fun m!125697 () Bool)

(assert (=> b!110718 m!125697))

(assert (=> b!110718 m!125037))

(assert (=> b!110718 m!125037))

(declare-fun m!125699 () Bool)

(assert (=> b!110718 m!125699))

(assert (=> b!110720 m!125037))

(assert (=> b!110720 m!125037))

(assert (=> b!110720 m!125699))

(assert (=> d!30983 d!31189))

(declare-fun e!71998 () Option!162)

(declare-fun b!110723 () Bool)

(assert (=> b!110723 (= e!71998 (getValueByKey!156 (t!5755 lt!56941) (_1!1209 (tuple2!2397 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun d!31191 () Bool)

(declare-fun c!19660 () Bool)

(assert (=> d!31191 (= c!19660 (and ((_ is Cons!1623) lt!56941) (= (_1!1209 (h!2222 lt!56941)) (_1!1209 (tuple2!2397 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(declare-fun e!71997 () Option!162)

(assert (=> d!31191 (= (getValueByKey!156 lt!56941 (_1!1209 (tuple2!2397 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))) e!71997)))

(declare-fun b!110721 () Bool)

(assert (=> b!110721 (= e!71997 (Some!161 (_2!1209 (h!2222 lt!56941))))))

(declare-fun b!110722 () Bool)

(assert (=> b!110722 (= e!71997 e!71998)))

(declare-fun c!19661 () Bool)

(assert (=> b!110722 (= c!19661 (and ((_ is Cons!1623) lt!56941) (not (= (_1!1209 (h!2222 lt!56941)) (_1!1209 (tuple2!2397 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))))

(declare-fun b!110724 () Bool)

(assert (=> b!110724 (= e!71998 None!160)))

(assert (= (and d!31191 c!19660) b!110721))

(assert (= (and d!31191 (not c!19660)) b!110722))

(assert (= (and b!110722 c!19661) b!110723))

(assert (= (and b!110722 (not c!19661)) b!110724))

(declare-fun m!125701 () Bool)

(assert (=> b!110723 m!125701))

(assert (=> d!30983 d!31191))

(declare-fun d!31193 () Bool)

(assert (=> d!31193 (= (getValueByKey!156 lt!56941 (_1!1209 (tuple2!2397 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))) (Some!161 (_2!1209 (tuple2!2397 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun lt!57145 () Unit!3390)

(assert (=> d!31193 (= lt!57145 (choose!691 lt!56941 (_1!1209 (tuple2!2397 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992))))) (_2!1209 (tuple2!2397 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun e!71999 () Bool)

(assert (=> d!31193 e!71999))

(declare-fun res!54740 () Bool)

(assert (=> d!31193 (=> (not res!54740) (not e!71999))))

(assert (=> d!31193 (= res!54740 (isStrictlySorted!306 lt!56941))))

(assert (=> d!31193 (= (lemmaContainsTupThenGetReturnValue!75 lt!56941 (_1!1209 (tuple2!2397 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992))))) (_2!1209 (tuple2!2397 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))) lt!57145)))

(declare-fun b!110725 () Bool)

(declare-fun res!54741 () Bool)

(assert (=> b!110725 (=> (not res!54741) (not e!71999))))

(assert (=> b!110725 (= res!54741 (containsKey!160 lt!56941 (_1!1209 (tuple2!2397 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun b!110726 () Bool)

(assert (=> b!110726 (= e!71999 (contains!829 lt!56941 (tuple2!2397 (_1!1209 (tuple2!2397 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992))))) (_2!1209 (tuple2!2397 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(assert (= (and d!31193 res!54740) b!110725))

(assert (= (and b!110725 res!54741) b!110726))

(assert (=> d!31193 m!125031))

(declare-fun m!125703 () Bool)

(assert (=> d!31193 m!125703))

(declare-fun m!125705 () Bool)

(assert (=> d!31193 m!125705))

(declare-fun m!125707 () Bool)

(assert (=> b!110725 m!125707))

(declare-fun m!125709 () Bool)

(assert (=> b!110726 m!125709))

(assert (=> d!30983 d!31193))

(declare-fun e!72001 () List!1627)

(declare-fun c!19665 () Bool)

(declare-fun c!19662 () Bool)

(declare-fun b!110727 () Bool)

(assert (=> b!110727 (= e!72001 (ite c!19662 (t!5755 (toList!792 lt!56576)) (ite c!19665 (Cons!1623 (h!2222 (toList!792 lt!56576)) (t!5755 (toList!792 lt!56576))) Nil!1624)))))

(declare-fun b!110728 () Bool)

(assert (=> b!110728 (= e!72001 (insertStrictlySorted!78 (t!5755 (toList!792 lt!56576)) (_1!1209 (tuple2!2397 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992))))) (_2!1209 (tuple2!2397 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun bm!11810 () Bool)

(declare-fun call!11815 () List!1627)

(declare-fun call!11813 () List!1627)

(assert (=> bm!11810 (= call!11815 call!11813)))

(declare-fun b!110729 () Bool)

(declare-fun e!72000 () List!1627)

(declare-fun call!11814 () List!1627)

(assert (=> b!110729 (= e!72000 call!11814)))

(declare-fun b!110730 () Bool)

(assert (=> b!110730 (= c!19665 (and ((_ is Cons!1623) (toList!792 lt!56576)) (bvsgt (_1!1209 (h!2222 (toList!792 lt!56576))) (_1!1209 (tuple2!2397 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(declare-fun e!72003 () List!1627)

(assert (=> b!110730 (= e!72003 e!72000)))

(declare-fun b!110731 () Bool)

(declare-fun res!54743 () Bool)

(declare-fun e!72002 () Bool)

(assert (=> b!110731 (=> (not res!54743) (not e!72002))))

(declare-fun lt!57146 () List!1627)

(assert (=> b!110731 (= res!54743 (containsKey!160 lt!57146 (_1!1209 (tuple2!2397 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun b!110733 () Bool)

(assert (=> b!110733 (= e!72000 call!11814)))

(declare-fun bm!11811 () Bool)

(assert (=> bm!11811 (= call!11814 call!11815)))

(declare-fun b!110734 () Bool)

(assert (=> b!110734 (= e!72003 call!11815)))

(declare-fun b!110735 () Bool)

(declare-fun e!72004 () List!1627)

(assert (=> b!110735 (= e!72004 e!72003)))

(assert (=> b!110735 (= c!19662 (and ((_ is Cons!1623) (toList!792 lt!56576)) (= (_1!1209 (h!2222 (toList!792 lt!56576))) (_1!1209 (tuple2!2397 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(declare-fun d!31195 () Bool)

(assert (=> d!31195 e!72002))

(declare-fun res!54742 () Bool)

(assert (=> d!31195 (=> (not res!54742) (not e!72002))))

(assert (=> d!31195 (= res!54742 (isStrictlySorted!306 lt!57146))))

(assert (=> d!31195 (= lt!57146 e!72004)))

(declare-fun c!19664 () Bool)

(assert (=> d!31195 (= c!19664 (and ((_ is Cons!1623) (toList!792 lt!56576)) (bvslt (_1!1209 (h!2222 (toList!792 lt!56576))) (_1!1209 (tuple2!2397 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(assert (=> d!31195 (isStrictlySorted!306 (toList!792 lt!56576))))

(assert (=> d!31195 (= (insertStrictlySorted!78 (toList!792 lt!56576) (_1!1209 (tuple2!2397 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992))))) (_2!1209 (tuple2!2397 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))) lt!57146)))

(declare-fun b!110732 () Bool)

(assert (=> b!110732 (= e!72004 call!11813)))

(declare-fun b!110736 () Bool)

(assert (=> b!110736 (= e!72002 (contains!829 lt!57146 (tuple2!2397 (_1!1209 (tuple2!2397 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992))))) (_2!1209 (tuple2!2397 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(declare-fun bm!11812 () Bool)

(assert (=> bm!11812 (= call!11813 ($colon$colon!82 e!72001 (ite c!19664 (h!2222 (toList!792 lt!56576)) (tuple2!2397 (_1!1209 (tuple2!2397 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992))))) (_2!1209 (tuple2!2397 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))))

(declare-fun c!19663 () Bool)

(assert (=> bm!11812 (= c!19663 c!19664)))

(assert (= (and d!31195 c!19664) b!110732))

(assert (= (and d!31195 (not c!19664)) b!110735))

(assert (= (and b!110735 c!19662) b!110734))

(assert (= (and b!110735 (not c!19662)) b!110730))

(assert (= (and b!110730 c!19665) b!110729))

(assert (= (and b!110730 (not c!19665)) b!110733))

(assert (= (or b!110729 b!110733) bm!11811))

(assert (= (or b!110734 bm!11811) bm!11810))

(assert (= (or b!110732 bm!11810) bm!11812))

(assert (= (and bm!11812 c!19663) b!110728))

(assert (= (and bm!11812 (not c!19663)) b!110727))

(assert (= (and d!31195 res!54742) b!110731))

(assert (= (and b!110731 res!54743) b!110736))

(declare-fun m!125711 () Bool)

(assert (=> d!31195 m!125711))

(declare-fun m!125713 () Bool)

(assert (=> d!31195 m!125713))

(declare-fun m!125715 () Bool)

(assert (=> b!110731 m!125715))

(declare-fun m!125717 () Bool)

(assert (=> bm!11812 m!125717))

(declare-fun m!125719 () Bool)

(assert (=> b!110728 m!125719))

(declare-fun m!125721 () Bool)

(assert (=> b!110736 m!125721))

(assert (=> d!30983 d!31195))

(declare-fun d!31197 () Bool)

(declare-fun res!54744 () Bool)

(declare-fun e!72005 () Bool)

(assert (=> d!31197 (=> res!54744 e!72005)))

(assert (=> d!31197 (= res!54744 (and ((_ is Cons!1623) (toList!792 lt!56392)) (= (_1!1209 (h!2222 (toList!792 lt!56392))) (_1!1209 lt!56300))))))

(assert (=> d!31197 (= (containsKey!160 (toList!792 lt!56392) (_1!1209 lt!56300)) e!72005)))

(declare-fun b!110737 () Bool)

(declare-fun e!72006 () Bool)

(assert (=> b!110737 (= e!72005 e!72006)))

(declare-fun res!54745 () Bool)

(assert (=> b!110737 (=> (not res!54745) (not e!72006))))

(assert (=> b!110737 (= res!54745 (and (or (not ((_ is Cons!1623) (toList!792 lt!56392))) (bvsle (_1!1209 (h!2222 (toList!792 lt!56392))) (_1!1209 lt!56300))) ((_ is Cons!1623) (toList!792 lt!56392)) (bvslt (_1!1209 (h!2222 (toList!792 lt!56392))) (_1!1209 lt!56300))))))

(declare-fun b!110738 () Bool)

(assert (=> b!110738 (= e!72006 (containsKey!160 (t!5755 (toList!792 lt!56392)) (_1!1209 lt!56300)))))

(assert (= (and d!31197 (not res!54744)) b!110737))

(assert (= (and b!110737 res!54745) b!110738))

(declare-fun m!125723 () Bool)

(assert (=> b!110738 m!125723))

(assert (=> d!30899 d!31197))

(declare-fun lt!57147 () Bool)

(declare-fun d!31199 () Bool)

(assert (=> d!31199 (= lt!57147 (select (content!114 (ite c!19435 (Cons!1622 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) Nil!1623) Nil!1623)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!72007 () Bool)

(assert (=> d!31199 (= lt!57147 e!72007)))

(declare-fun res!54747 () Bool)

(assert (=> d!31199 (=> (not res!54747) (not e!72007))))

(assert (=> d!31199 (= res!54747 ((_ is Cons!1622) (ite c!19435 (Cons!1622 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) Nil!1623) Nil!1623)))))

(assert (=> d!31199 (= (contains!830 (ite c!19435 (Cons!1622 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) Nil!1623) Nil!1623) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) lt!57147)))

(declare-fun b!110739 () Bool)

(declare-fun e!72008 () Bool)

(assert (=> b!110739 (= e!72007 e!72008)))

(declare-fun res!54746 () Bool)

(assert (=> b!110739 (=> res!54746 e!72008)))

(assert (=> b!110739 (= res!54746 (= (h!2221 (ite c!19435 (Cons!1622 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) Nil!1623) Nil!1623)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!110740 () Bool)

(assert (=> b!110740 (= e!72008 (contains!830 (t!5754 (ite c!19435 (Cons!1622 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) Nil!1623) Nil!1623)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!31199 res!54747) b!110739))

(assert (= (and b!110739 (not res!54746)) b!110740))

(declare-fun m!125725 () Bool)

(assert (=> d!31199 m!125725))

(assert (=> d!31199 m!124633))

(declare-fun m!125727 () Bool)

(assert (=> d!31199 m!125727))

(assert (=> b!110740 m!124633))

(declare-fun m!125729 () Bool)

(assert (=> b!110740 m!125729))

(assert (=> b!110186 d!31199))

(assert (=> b!110373 d!30889))

(declare-fun d!31201 () Bool)

(assert (=> d!31201 (= (isEmpty!381 (toList!792 lt!56425)) ((_ is Nil!1624) (toList!792 lt!56425)))))

(assert (=> d!30893 d!31201))

(declare-fun d!31203 () Bool)

(declare-fun e!72010 () Bool)

(assert (=> d!31203 e!72010))

(declare-fun res!54748 () Bool)

(assert (=> d!31203 (=> res!54748 e!72010)))

(declare-fun lt!57148 () Bool)

(assert (=> d!31203 (= res!54748 (not lt!57148))))

(declare-fun lt!57149 () Bool)

(assert (=> d!31203 (= lt!57148 lt!57149)))

(declare-fun lt!57150 () Unit!3390)

(declare-fun e!72009 () Unit!3390)

(assert (=> d!31203 (= lt!57150 e!72009)))

(declare-fun c!19666 () Bool)

(assert (=> d!31203 (= c!19666 lt!57149)))

(assert (=> d!31203 (= lt!57149 (containsKey!160 (toList!792 lt!56730) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!31203 (= (contains!827 lt!56730 #b0000000000000000000000000000000000000000000000000000000000000000) lt!57148)))

(declare-fun b!110741 () Bool)

(declare-fun lt!57151 () Unit!3390)

(assert (=> b!110741 (= e!72009 lt!57151)))

(assert (=> b!110741 (= lt!57151 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 lt!56730) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!110741 (isDefined!110 (getValueByKey!156 (toList!792 lt!56730) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110742 () Bool)

(declare-fun Unit!3437 () Unit!3390)

(assert (=> b!110742 (= e!72009 Unit!3437)))

(declare-fun b!110743 () Bool)

(assert (=> b!110743 (= e!72010 (isDefined!110 (getValueByKey!156 (toList!792 lt!56730) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!31203 c!19666) b!110741))

(assert (= (and d!31203 (not c!19666)) b!110742))

(assert (= (and d!31203 (not res!54748)) b!110743))

(declare-fun m!125731 () Bool)

(assert (=> d!31203 m!125731))

(declare-fun m!125733 () Bool)

(assert (=> b!110741 m!125733))

(declare-fun m!125735 () Bool)

(assert (=> b!110741 m!125735))

(assert (=> b!110741 m!125735))

(declare-fun m!125737 () Bool)

(assert (=> b!110741 m!125737))

(assert (=> b!110743 m!125735))

(assert (=> b!110743 m!125735))

(assert (=> b!110743 m!125737))

(assert (=> d!30857 d!31203))

(assert (=> d!30857 d!30749))

(declare-fun d!31205 () Bool)

(assert (=> d!31205 (= (validKeyInArray!0 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!110387 d!31205))

(declare-fun d!31207 () Bool)

(assert (=> d!31207 (= (isDefined!110 (getValueByKey!156 (toList!792 lt!56425) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!382 (getValueByKey!156 (toList!792 lt!56425) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!4551 () Bool)

(assert (= bs!4551 d!31207))

(assert (=> bs!4551 m!124893))

(declare-fun m!125739 () Bool)

(assert (=> bs!4551 m!125739))

(assert (=> b!110341 d!31207))

(assert (=> b!110341 d!31145))

(assert (=> d!30863 d!30861))

(declare-fun d!31209 () Bool)

(assert (=> d!31209 (= (getValueByKey!156 lt!56402 (_1!1209 lt!56299)) (Some!161 (_2!1209 lt!56299)))))

(assert (=> d!31209 true))

(declare-fun _$22!445 () Unit!3390)

(assert (=> d!31209 (= (choose!691 lt!56402 (_1!1209 lt!56299) (_2!1209 lt!56299)) _$22!445)))

(declare-fun bs!4552 () Bool)

(assert (= bs!4552 d!31209))

(assert (=> bs!4552 m!124077))

(assert (=> d!30863 d!31209))

(declare-fun d!31211 () Bool)

(declare-fun res!54749 () Bool)

(declare-fun e!72011 () Bool)

(assert (=> d!31211 (=> res!54749 e!72011)))

(assert (=> d!31211 (= res!54749 (or ((_ is Nil!1624) lt!56402) ((_ is Nil!1624) (t!5755 lt!56402))))))

(assert (=> d!31211 (= (isStrictlySorted!306 lt!56402) e!72011)))

(declare-fun b!110744 () Bool)

(declare-fun e!72012 () Bool)

(assert (=> b!110744 (= e!72011 e!72012)))

(declare-fun res!54750 () Bool)

(assert (=> b!110744 (=> (not res!54750) (not e!72012))))

(assert (=> b!110744 (= res!54750 (bvslt (_1!1209 (h!2222 lt!56402)) (_1!1209 (h!2222 (t!5755 lt!56402)))))))

(declare-fun b!110745 () Bool)

(assert (=> b!110745 (= e!72012 (isStrictlySorted!306 (t!5755 lt!56402)))))

(assert (= (and d!31211 (not res!54749)) b!110744))

(assert (= (and b!110744 res!54750) b!110745))

(declare-fun m!125741 () Bool)

(assert (=> b!110745 m!125741))

(assert (=> d!30863 d!31211))

(declare-fun d!31213 () Bool)

(declare-fun e!72014 () Bool)

(assert (=> d!31213 e!72014))

(declare-fun res!54751 () Bool)

(assert (=> d!31213 (=> res!54751 e!72014)))

(declare-fun lt!57152 () Bool)

(assert (=> d!31213 (= res!54751 (not lt!57152))))

(declare-fun lt!57153 () Bool)

(assert (=> d!31213 (= lt!57152 lt!57153)))

(declare-fun lt!57154 () Unit!3390)

(declare-fun e!72013 () Unit!3390)

(assert (=> d!31213 (= lt!57154 e!72013)))

(declare-fun c!19667 () Bool)

(assert (=> d!31213 (= c!19667 lt!57153)))

(assert (=> d!31213 (= lt!57153 (containsKey!160 (toList!792 lt!56923) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))

(assert (=> d!31213 (= (contains!827 lt!56923 (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))) lt!57152)))

(declare-fun b!110746 () Bool)

(declare-fun lt!57155 () Unit!3390)

(assert (=> b!110746 (= e!72013 lt!57155)))

(assert (=> b!110746 (= lt!57155 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 lt!56923) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))

(assert (=> b!110746 (isDefined!110 (getValueByKey!156 (toList!792 lt!56923) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))

(declare-fun b!110747 () Bool)

(declare-fun Unit!3438 () Unit!3390)

(assert (=> b!110747 (= e!72013 Unit!3438)))

(declare-fun b!110748 () Bool)

(assert (=> b!110748 (= e!72014 (isDefined!110 (getValueByKey!156 (toList!792 lt!56923) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))))))

(assert (= (and d!31213 c!19667) b!110746))

(assert (= (and d!31213 (not c!19667)) b!110747))

(assert (= (and d!31213 (not res!54751)) b!110748))

(declare-fun m!125743 () Bool)

(assert (=> d!31213 m!125743))

(declare-fun m!125745 () Bool)

(assert (=> b!110746 m!125745))

(assert (=> b!110746 m!124973))

(assert (=> b!110746 m!124973))

(declare-fun m!125747 () Bool)

(assert (=> b!110746 m!125747))

(assert (=> b!110748 m!124973))

(assert (=> b!110748 m!124973))

(assert (=> b!110748 m!125747))

(assert (=> d!30961 d!31213))

(declare-fun b!110751 () Bool)

(declare-fun e!72016 () Option!162)

(assert (=> b!110751 (= e!72016 (getValueByKey!156 (t!5755 lt!56922) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))

(declare-fun d!31215 () Bool)

(declare-fun c!19668 () Bool)

(assert (=> d!31215 (= c!19668 (and ((_ is Cons!1623) lt!56922) (= (_1!1209 (h!2222 lt!56922)) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))))))

(declare-fun e!72015 () Option!162)

(assert (=> d!31215 (= (getValueByKey!156 lt!56922 (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))) e!72015)))

(declare-fun b!110749 () Bool)

(assert (=> b!110749 (= e!72015 (Some!161 (_2!1209 (h!2222 lt!56922))))))

(declare-fun b!110750 () Bool)

(assert (=> b!110750 (= e!72015 e!72016)))

(declare-fun c!19669 () Bool)

(assert (=> b!110750 (= c!19669 (and ((_ is Cons!1623) lt!56922) (not (= (_1!1209 (h!2222 lt!56922)) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))))

(declare-fun b!110752 () Bool)

(assert (=> b!110752 (= e!72016 None!160)))

(assert (= (and d!31215 c!19668) b!110749))

(assert (= (and d!31215 (not c!19668)) b!110750))

(assert (= (and b!110750 c!19669) b!110751))

(assert (= (and b!110750 (not c!19669)) b!110752))

(declare-fun m!125749 () Bool)

(assert (=> b!110751 m!125749))

(assert (=> d!30961 d!31215))

(declare-fun d!31217 () Bool)

(assert (=> d!31217 (= (getValueByKey!156 lt!56922 (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))) (Some!161 (_2!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))

(declare-fun lt!57156 () Unit!3390)

(assert (=> d!31217 (= lt!57156 (choose!691 lt!56922 (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)) (_2!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))

(declare-fun e!72017 () Bool)

(assert (=> d!31217 e!72017))

(declare-fun res!54752 () Bool)

(assert (=> d!31217 (=> (not res!54752) (not e!72017))))

(assert (=> d!31217 (= res!54752 (isStrictlySorted!306 lt!56922))))

(assert (=> d!31217 (= (lemmaContainsTupThenGetReturnValue!75 lt!56922 (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)) (_2!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))) lt!57156)))

(declare-fun b!110753 () Bool)

(declare-fun res!54753 () Bool)

(assert (=> b!110753 (=> (not res!54753) (not e!72017))))

(assert (=> b!110753 (= res!54753 (containsKey!160 lt!56922 (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))

(declare-fun b!110754 () Bool)

(assert (=> b!110754 (= e!72017 (contains!829 lt!56922 (tuple2!2397 (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)) (_2!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))))))

(assert (= (and d!31217 res!54752) b!110753))

(assert (= (and b!110753 res!54753) b!110754))

(assert (=> d!31217 m!124967))

(declare-fun m!125751 () Bool)

(assert (=> d!31217 m!125751))

(declare-fun m!125753 () Bool)

(assert (=> d!31217 m!125753))

(declare-fun m!125755 () Bool)

(assert (=> b!110753 m!125755))

(declare-fun m!125757 () Bool)

(assert (=> b!110754 m!125757))

(assert (=> d!30961 d!31217))

(declare-fun c!19673 () Bool)

(declare-fun e!72019 () List!1627)

(declare-fun c!19670 () Bool)

(declare-fun b!110755 () Bool)

(assert (=> b!110755 (= e!72019 (ite c!19670 (t!5755 (toList!792 call!11677)) (ite c!19673 (Cons!1623 (h!2222 (toList!792 call!11677)) (t!5755 (toList!792 call!11677))) Nil!1624)))))

(declare-fun b!110756 () Bool)

(assert (=> b!110756 (= e!72019 (insertStrictlySorted!78 (t!5755 (toList!792 call!11677)) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)) (_2!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))

(declare-fun bm!11813 () Bool)

(declare-fun call!11818 () List!1627)

(declare-fun call!11816 () List!1627)

(assert (=> bm!11813 (= call!11818 call!11816)))

(declare-fun b!110757 () Bool)

(declare-fun e!72018 () List!1627)

(declare-fun call!11817 () List!1627)

(assert (=> b!110757 (= e!72018 call!11817)))

(declare-fun b!110758 () Bool)

(assert (=> b!110758 (= c!19673 (and ((_ is Cons!1623) (toList!792 call!11677)) (bvsgt (_1!1209 (h!2222 (toList!792 call!11677))) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))))))

(declare-fun e!72021 () List!1627)

(assert (=> b!110758 (= e!72021 e!72018)))

(declare-fun b!110759 () Bool)

(declare-fun res!54755 () Bool)

(declare-fun e!72020 () Bool)

(assert (=> b!110759 (=> (not res!54755) (not e!72020))))

(declare-fun lt!57157 () List!1627)

(assert (=> b!110759 (= res!54755 (containsKey!160 lt!57157 (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))

(declare-fun b!110761 () Bool)

(assert (=> b!110761 (= e!72018 call!11817)))

(declare-fun bm!11814 () Bool)

(assert (=> bm!11814 (= call!11817 call!11818)))

(declare-fun b!110762 () Bool)

(assert (=> b!110762 (= e!72021 call!11818)))

(declare-fun b!110763 () Bool)

(declare-fun e!72022 () List!1627)

(assert (=> b!110763 (= e!72022 e!72021)))

(assert (=> b!110763 (= c!19670 (and ((_ is Cons!1623) (toList!792 call!11677)) (= (_1!1209 (h!2222 (toList!792 call!11677))) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))))))

(declare-fun d!31219 () Bool)

(assert (=> d!31219 e!72020))

(declare-fun res!54754 () Bool)

(assert (=> d!31219 (=> (not res!54754) (not e!72020))))

(assert (=> d!31219 (= res!54754 (isStrictlySorted!306 lt!57157))))

(assert (=> d!31219 (= lt!57157 e!72022)))

(declare-fun c!19672 () Bool)

(assert (=> d!31219 (= c!19672 (and ((_ is Cons!1623) (toList!792 call!11677)) (bvslt (_1!1209 (h!2222 (toList!792 call!11677))) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))))))

(assert (=> d!31219 (isStrictlySorted!306 (toList!792 call!11677))))

(assert (=> d!31219 (= (insertStrictlySorted!78 (toList!792 call!11677) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)) (_2!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))) lt!57157)))

(declare-fun b!110760 () Bool)

(assert (=> b!110760 (= e!72022 call!11816)))

(declare-fun b!110764 () Bool)

(assert (=> b!110764 (= e!72020 (contains!829 lt!57157 (tuple2!2397 (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)) (_2!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))))))

(declare-fun bm!11815 () Bool)

(assert (=> bm!11815 (= call!11816 ($colon$colon!82 e!72019 (ite c!19672 (h!2222 (toList!792 call!11677)) (tuple2!2397 (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)) (_2!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))))

(declare-fun c!19671 () Bool)

(assert (=> bm!11815 (= c!19671 c!19672)))

(assert (= (and d!31219 c!19672) b!110760))

(assert (= (and d!31219 (not c!19672)) b!110763))

(assert (= (and b!110763 c!19670) b!110762))

(assert (= (and b!110763 (not c!19670)) b!110758))

(assert (= (and b!110758 c!19673) b!110757))

(assert (= (and b!110758 (not c!19673)) b!110761))

(assert (= (or b!110757 b!110761) bm!11814))

(assert (= (or b!110762 bm!11814) bm!11813))

(assert (= (or b!110760 bm!11813) bm!11815))

(assert (= (and bm!11815 c!19671) b!110756))

(assert (= (and bm!11815 (not c!19671)) b!110755))

(assert (= (and d!31219 res!54754) b!110759))

(assert (= (and b!110759 res!54755) b!110764))

(declare-fun m!125759 () Bool)

(assert (=> d!31219 m!125759))

(declare-fun m!125761 () Bool)

(assert (=> d!31219 m!125761))

(declare-fun m!125763 () Bool)

(assert (=> b!110759 m!125763))

(declare-fun m!125765 () Bool)

(assert (=> bm!11815 m!125765))

(declare-fun m!125767 () Bool)

(assert (=> b!110756 m!125767))

(declare-fun m!125769 () Bool)

(assert (=> b!110764 m!125769))

(assert (=> d!30961 d!31219))

(declare-fun d!31221 () Bool)

(declare-fun e!72024 () Bool)

(assert (=> d!31221 e!72024))

(declare-fun res!54756 () Bool)

(assert (=> d!31221 (=> res!54756 e!72024)))

(declare-fun lt!57158 () Bool)

(assert (=> d!31221 (= res!54756 (not lt!57158))))

(declare-fun lt!57159 () Bool)

(assert (=> d!31221 (= lt!57158 lt!57159)))

(declare-fun lt!57160 () Unit!3390)

(declare-fun e!72023 () Unit!3390)

(assert (=> d!31221 (= lt!57160 e!72023)))

(declare-fun c!19674 () Bool)

(assert (=> d!31221 (= c!19674 lt!57159)))

(assert (=> d!31221 (= lt!57159 (containsKey!160 (toList!792 lt!56706) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!31221 (= (contains!827 lt!56706 #b1000000000000000000000000000000000000000000000000000000000000000) lt!57158)))

(declare-fun b!110765 () Bool)

(declare-fun lt!57161 () Unit!3390)

(assert (=> b!110765 (= e!72023 lt!57161)))

(assert (=> b!110765 (= lt!57161 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 lt!56706) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!110765 (isDefined!110 (getValueByKey!156 (toList!792 lt!56706) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110766 () Bool)

(declare-fun Unit!3439 () Unit!3390)

(assert (=> b!110766 (= e!72023 Unit!3439)))

(declare-fun b!110767 () Bool)

(assert (=> b!110767 (= e!72024 (isDefined!110 (getValueByKey!156 (toList!792 lt!56706) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!31221 c!19674) b!110765))

(assert (= (and d!31221 (not c!19674)) b!110766))

(assert (= (and d!31221 (not res!54756)) b!110767))

(declare-fun m!125771 () Bool)

(assert (=> d!31221 m!125771))

(declare-fun m!125773 () Bool)

(assert (=> b!110765 m!125773))

(declare-fun m!125775 () Bool)

(assert (=> b!110765 m!125775))

(assert (=> b!110765 m!125775))

(declare-fun m!125777 () Bool)

(assert (=> b!110765 m!125777))

(assert (=> b!110767 m!125775))

(assert (=> b!110767 m!125775))

(assert (=> b!110767 m!125777))

(assert (=> bm!11742 d!31221))

(declare-fun d!31223 () Bool)

(assert (=> d!31223 (= ($colon$colon!82 e!71712 (ite c!19542 (h!2222 (toList!792 lt!56303)) (tuple2!2397 (_1!1209 lt!56300) (_2!1209 lt!56300)))) (Cons!1623 (ite c!19542 (h!2222 (toList!792 lt!56303)) (tuple2!2397 (_1!1209 lt!56300) (_2!1209 lt!56300))) e!71712))))

(assert (=> bm!11763 d!31223))

(assert (=> b!110206 d!31205))

(declare-fun d!31225 () Bool)

(declare-fun res!54757 () Bool)

(declare-fun e!72025 () Bool)

(assert (=> d!31225 (=> res!54757 e!72025)))

(assert (=> d!31225 (= res!54757 (and ((_ is Cons!1623) (toList!792 (+!139 lt!56420 (tuple2!2397 lt!56424 lt!56421)))) (= (_1!1209 (h!2222 (toList!792 (+!139 lt!56420 (tuple2!2397 lt!56424 lt!56421))))) lt!56422)))))

(assert (=> d!31225 (= (containsKey!160 (toList!792 (+!139 lt!56420 (tuple2!2397 lt!56424 lt!56421))) lt!56422) e!72025)))

(declare-fun b!110768 () Bool)

(declare-fun e!72026 () Bool)

(assert (=> b!110768 (= e!72025 e!72026)))

(declare-fun res!54758 () Bool)

(assert (=> b!110768 (=> (not res!54758) (not e!72026))))

(assert (=> b!110768 (= res!54758 (and (or (not ((_ is Cons!1623) (toList!792 (+!139 lt!56420 (tuple2!2397 lt!56424 lt!56421))))) (bvsle (_1!1209 (h!2222 (toList!792 (+!139 lt!56420 (tuple2!2397 lt!56424 lt!56421))))) lt!56422)) ((_ is Cons!1623) (toList!792 (+!139 lt!56420 (tuple2!2397 lt!56424 lt!56421)))) (bvslt (_1!1209 (h!2222 (toList!792 (+!139 lt!56420 (tuple2!2397 lt!56424 lt!56421))))) lt!56422)))))

(declare-fun b!110769 () Bool)

(assert (=> b!110769 (= e!72026 (containsKey!160 (t!5755 (toList!792 (+!139 lt!56420 (tuple2!2397 lt!56424 lt!56421)))) lt!56422))))

(assert (= (and d!31225 (not res!54757)) b!110768))

(assert (= (and b!110768 res!54758) b!110769))

(declare-fun m!125779 () Bool)

(assert (=> b!110769 m!125779))

(assert (=> d!30911 d!31225))

(declare-fun d!31227 () Bool)

(assert (=> d!31227 (isDefined!110 (getValueByKey!156 (toList!792 lt!56388) (_1!1209 lt!56299)))))

(declare-fun lt!57162 () Unit!3390)

(assert (=> d!31227 (= lt!57162 (choose!699 (toList!792 lt!56388) (_1!1209 lt!56299)))))

(declare-fun e!72027 () Bool)

(assert (=> d!31227 e!72027))

(declare-fun res!54759 () Bool)

(assert (=> d!31227 (=> (not res!54759) (not e!72027))))

(assert (=> d!31227 (= res!54759 (isStrictlySorted!306 (toList!792 lt!56388)))))

(assert (=> d!31227 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 lt!56388) (_1!1209 lt!56299)) lt!57162)))

(declare-fun b!110770 () Bool)

(assert (=> b!110770 (= e!72027 (containsKey!160 (toList!792 lt!56388) (_1!1209 lt!56299)))))

(assert (= (and d!31227 res!54759) b!110770))

(assert (=> d!31227 m!124037))

(assert (=> d!31227 m!124037))

(assert (=> d!31227 m!124907))

(declare-fun m!125781 () Bool)

(assert (=> d!31227 m!125781))

(declare-fun m!125783 () Bool)

(assert (=> d!31227 m!125783))

(assert (=> b!110770 m!124903))

(assert (=> b!110344 d!31227))

(declare-fun d!31229 () Bool)

(assert (=> d!31229 (= (isDefined!110 (getValueByKey!156 (toList!792 lt!56388) (_1!1209 lt!56299))) (not (isEmpty!382 (getValueByKey!156 (toList!792 lt!56388) (_1!1209 lt!56299)))))))

(declare-fun bs!4553 () Bool)

(assert (= bs!4553 d!31229))

(assert (=> bs!4553 m!124037))

(declare-fun m!125785 () Bool)

(assert (=> bs!4553 m!125785))

(assert (=> b!110344 d!31229))

(assert (=> b!110344 d!30879))

(declare-fun d!31231 () Bool)

(declare-fun e!72028 () Bool)

(assert (=> d!31231 e!72028))

(declare-fun res!54760 () Bool)

(assert (=> d!31231 (=> (not res!54760) (not e!72028))))

(declare-fun lt!57164 () ListLongMap!1553)

(assert (=> d!31231 (= res!54760 (contains!827 lt!57164 (_1!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16)))))))

(declare-fun lt!57163 () List!1627)

(assert (=> d!31231 (= lt!57164 (ListLongMap!1554 lt!57163))))

(declare-fun lt!57165 () Unit!3390)

(declare-fun lt!57166 () Unit!3390)

(assert (=> d!31231 (= lt!57165 lt!57166)))

(assert (=> d!31231 (= (getValueByKey!156 lt!57163 (_1!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16)))) (Some!161 (_2!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16)))))))

(assert (=> d!31231 (= lt!57166 (lemmaContainsTupThenGetReturnValue!75 lt!57163 (_1!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16))) (_2!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16)))))))

(assert (=> d!31231 (= lt!57163 (insertStrictlySorted!78 (toList!792 call!11740) (_1!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16))) (_2!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16)))))))

(assert (=> d!31231 (= (+!139 call!11740 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16))) lt!57164)))

(declare-fun b!110771 () Bool)

(declare-fun res!54761 () Bool)

(assert (=> b!110771 (=> (not res!54761) (not e!72028))))

(assert (=> b!110771 (= res!54761 (= (getValueByKey!156 (toList!792 lt!57164) (_1!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16)))) (Some!161 (_2!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16))))))))

(declare-fun b!110772 () Bool)

(assert (=> b!110772 (= e!72028 (contains!829 (toList!792 lt!57164) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16))))))

(assert (= (and d!31231 res!54760) b!110771))

(assert (= (and b!110771 res!54761) b!110772))

(declare-fun m!125787 () Bool)

(assert (=> d!31231 m!125787))

(declare-fun m!125789 () Bool)

(assert (=> d!31231 m!125789))

(declare-fun m!125791 () Bool)

(assert (=> d!31231 m!125791))

(declare-fun m!125793 () Bool)

(assert (=> d!31231 m!125793))

(declare-fun m!125795 () Bool)

(assert (=> b!110771 m!125795))

(declare-fun m!125797 () Bool)

(assert (=> b!110772 m!125797))

(assert (=> b!110092 d!31231))

(declare-fun d!31233 () Bool)

(assert (=> d!31233 (= (apply!100 lt!56765 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1350 (getValueByKey!156 (toList!792 lt!56765) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4554 () Bool)

(assert (= bs!4554 d!31233))

(declare-fun m!125799 () Bool)

(assert (=> bs!4554 m!125799))

(assert (=> bs!4554 m!125799))

(declare-fun m!125801 () Bool)

(assert (=> bs!4554 m!125801))

(assert (=> b!110225 d!31233))

(declare-fun d!31235 () Bool)

(declare-fun lt!57167 () Bool)

(assert (=> d!31235 (= lt!57167 (select (content!113 (t!5755 (toList!792 lt!56403))) lt!56299))))

(declare-fun e!72029 () Bool)

(assert (=> d!31235 (= lt!57167 e!72029)))

(declare-fun res!54762 () Bool)

(assert (=> d!31235 (=> (not res!54762) (not e!72029))))

(assert (=> d!31235 (= res!54762 ((_ is Cons!1623) (t!5755 (toList!792 lt!56403))))))

(assert (=> d!31235 (= (contains!829 (t!5755 (toList!792 lt!56403)) lt!56299) lt!57167)))

(declare-fun b!110773 () Bool)

(declare-fun e!72030 () Bool)

(assert (=> b!110773 (= e!72029 e!72030)))

(declare-fun res!54763 () Bool)

(assert (=> b!110773 (=> res!54763 e!72030)))

(assert (=> b!110773 (= res!54763 (= (h!2222 (t!5755 (toList!792 lt!56403))) lt!56299))))

(declare-fun b!110774 () Bool)

(assert (=> b!110774 (= e!72030 (contains!829 (t!5755 (t!5755 (toList!792 lt!56403))) lt!56299))))

(assert (= (and d!31235 res!54762) b!110773))

(assert (= (and b!110773 (not res!54763)) b!110774))

(assert (=> d!31235 m!125351))

(declare-fun m!125803 () Bool)

(assert (=> d!31235 m!125803))

(declare-fun m!125805 () Bool)

(assert (=> b!110774 m!125805))

(assert (=> b!110343 d!31235))

(declare-fun d!31237 () Bool)

(assert (=> d!31237 (= (isDefined!110 (getValueByKey!156 (toList!792 lt!56589) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!382 (getValueByKey!156 (toList!792 lt!56589) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4555 () Bool)

(assert (= bs!4555 d!31237))

(assert (=> bs!4555 m!124413))

(declare-fun m!125807 () Bool)

(assert (=> bs!4555 m!125807))

(assert (=> b!110065 d!31237))

(declare-fun b!110777 () Bool)

(declare-fun e!72032 () Option!162)

(assert (=> b!110777 (= e!72032 (getValueByKey!156 (t!5755 (toList!792 lt!56589)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!31239 () Bool)

(declare-fun c!19675 () Bool)

(assert (=> d!31239 (= c!19675 (and ((_ is Cons!1623) (toList!792 lt!56589)) (= (_1!1209 (h!2222 (toList!792 lt!56589))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!72031 () Option!162)

(assert (=> d!31239 (= (getValueByKey!156 (toList!792 lt!56589) #b1000000000000000000000000000000000000000000000000000000000000000) e!72031)))

(declare-fun b!110775 () Bool)

(assert (=> b!110775 (= e!72031 (Some!161 (_2!1209 (h!2222 (toList!792 lt!56589)))))))

(declare-fun b!110776 () Bool)

(assert (=> b!110776 (= e!72031 e!72032)))

(declare-fun c!19676 () Bool)

(assert (=> b!110776 (= c!19676 (and ((_ is Cons!1623) (toList!792 lt!56589)) (not (= (_1!1209 (h!2222 (toList!792 lt!56589))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!110778 () Bool)

(assert (=> b!110778 (= e!72032 None!160)))

(assert (= (and d!31239 c!19675) b!110775))

(assert (= (and d!31239 (not c!19675)) b!110776))

(assert (= (and b!110776 c!19676) b!110777))

(assert (= (and b!110776 (not c!19676)) b!110778))

(declare-fun m!125809 () Bool)

(assert (=> b!110777 m!125809))

(assert (=> b!110065 d!31239))

(declare-fun d!31241 () Bool)

(declare-fun res!54764 () Bool)

(declare-fun e!72033 () Bool)

(assert (=> d!31241 (=> res!54764 e!72033)))

(assert (=> d!31241 (= res!54764 (and ((_ is Cons!1623) (t!5755 (toList!792 lt!56298))) (= (_1!1209 (h!2222 (t!5755 (toList!792 lt!56298)))) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355))))))

(assert (=> d!31241 (= (containsKey!160 (t!5755 (toList!792 lt!56298)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) e!72033)))

(declare-fun b!110779 () Bool)

(declare-fun e!72034 () Bool)

(assert (=> b!110779 (= e!72033 e!72034)))

(declare-fun res!54765 () Bool)

(assert (=> b!110779 (=> (not res!54765) (not e!72034))))

(assert (=> b!110779 (= res!54765 (and (or (not ((_ is Cons!1623) (t!5755 (toList!792 lt!56298)))) (bvsle (_1!1209 (h!2222 (t!5755 (toList!792 lt!56298)))) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355))) ((_ is Cons!1623) (t!5755 (toList!792 lt!56298))) (bvslt (_1!1209 (h!2222 (t!5755 (toList!792 lt!56298)))) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355))))))

(declare-fun b!110780 () Bool)

(assert (=> b!110780 (= e!72034 (containsKey!160 (t!5755 (t!5755 (toList!792 lt!56298))) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))

(assert (= (and d!31241 (not res!54764)) b!110779))

(assert (= (and b!110779 res!54765) b!110780))

(assert (=> b!110780 m!123865))

(declare-fun m!125811 () Bool)

(assert (=> b!110780 m!125811))

(assert (=> b!110232 d!31241))

(declare-fun d!31243 () Bool)

(declare-fun lt!57168 () Bool)

(assert (=> d!31243 (= lt!57168 (select (content!113 (toList!792 lt!56617)) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))))

(declare-fun e!72035 () Bool)

(assert (=> d!31243 (= lt!57168 e!72035)))

(declare-fun res!54766 () Bool)

(assert (=> d!31243 (=> (not res!54766) (not e!72035))))

(assert (=> d!31243 (= res!54766 ((_ is Cons!1623) (toList!792 lt!56617)))))

(assert (=> d!31243 (= (contains!829 (toList!792 lt!56617) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))) lt!57168)))

(declare-fun b!110781 () Bool)

(declare-fun e!72036 () Bool)

(assert (=> b!110781 (= e!72035 e!72036)))

(declare-fun res!54767 () Bool)

(assert (=> b!110781 (=> res!54767 e!72036)))

(assert (=> b!110781 (= res!54767 (= (h!2222 (toList!792 lt!56617)) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))))

(declare-fun b!110782 () Bool)

(assert (=> b!110782 (= e!72036 (contains!829 (t!5755 (toList!792 lt!56617)) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))))

(assert (= (and d!31243 res!54766) b!110781))

(assert (= (and b!110781 (not res!54767)) b!110782))

(declare-fun m!125813 () Bool)

(assert (=> d!31243 m!125813))

(declare-fun m!125815 () Bool)

(assert (=> d!31243 m!125815))

(declare-fun m!125817 () Bool)

(assert (=> b!110782 m!125817))

(assert (=> b!109965 d!31243))

(declare-fun d!31245 () Bool)

(assert (=> d!31245 (= (isEmpty!382 (getValueByKey!156 (toList!792 lt!56298) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355))) (not ((_ is Some!161) (getValueByKey!156 (toList!792 lt!56298) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))))

(assert (=> d!30917 d!31245))

(declare-fun d!31247 () Bool)

(declare-fun e!72038 () Bool)

(assert (=> d!31247 e!72038))

(declare-fun res!54768 () Bool)

(assert (=> d!31247 (=> res!54768 e!72038)))

(declare-fun lt!57169 () Bool)

(assert (=> d!31247 (= res!54768 (not lt!57169))))

(declare-fun lt!57170 () Bool)

(assert (=> d!31247 (= lt!57169 lt!57170)))

(declare-fun lt!57171 () Unit!3390)

(declare-fun e!72037 () Unit!3390)

(assert (=> d!31247 (= lt!57171 e!72037)))

(declare-fun c!19677 () Bool)

(assert (=> d!31247 (= c!19677 lt!57170)))

(assert (=> d!31247 (= lt!57170 (containsKey!160 (toList!792 lt!56938) (_1!1209 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(assert (=> d!31247 (= (contains!827 lt!56938 (_1!1209 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))) lt!57169)))

(declare-fun b!110783 () Bool)

(declare-fun lt!57172 () Unit!3390)

(assert (=> b!110783 (= e!72037 lt!57172)))

(assert (=> b!110783 (= lt!57172 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 lt!56938) (_1!1209 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(assert (=> b!110783 (isDefined!110 (getValueByKey!156 (toList!792 lt!56938) (_1!1209 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun b!110784 () Bool)

(declare-fun Unit!3440 () Unit!3390)

(assert (=> b!110784 (= e!72037 Unit!3440)))

(declare-fun b!110785 () Bool)

(assert (=> b!110785 (= e!72038 (isDefined!110 (getValueByKey!156 (toList!792 lt!56938) (_1!1209 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(assert (= (and d!31247 c!19677) b!110783))

(assert (= (and d!31247 (not c!19677)) b!110784))

(assert (= (and d!31247 (not res!54768)) b!110785))

(declare-fun m!125819 () Bool)

(assert (=> d!31247 m!125819))

(declare-fun m!125821 () Bool)

(assert (=> b!110783 m!125821))

(assert (=> b!110783 m!125009))

(assert (=> b!110783 m!125009))

(declare-fun m!125823 () Bool)

(assert (=> b!110783 m!125823))

(assert (=> b!110785 m!125009))

(assert (=> b!110785 m!125009))

(assert (=> b!110785 m!125823))

(assert (=> d!30973 d!31247))

(declare-fun b!110788 () Bool)

(declare-fun e!72040 () Option!162)

(assert (=> b!110788 (= e!72040 (getValueByKey!156 (t!5755 lt!56937) (_1!1209 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun d!31249 () Bool)

(declare-fun c!19678 () Bool)

(assert (=> d!31249 (= c!19678 (and ((_ is Cons!1623) lt!56937) (= (_1!1209 (h!2222 lt!56937)) (_1!1209 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(declare-fun e!72039 () Option!162)

(assert (=> d!31249 (= (getValueByKey!156 lt!56937 (_1!1209 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))) e!72039)))

(declare-fun b!110786 () Bool)

(assert (=> b!110786 (= e!72039 (Some!161 (_2!1209 (h!2222 lt!56937))))))

(declare-fun b!110787 () Bool)

(assert (=> b!110787 (= e!72039 e!72040)))

(declare-fun c!19679 () Bool)

(assert (=> b!110787 (= c!19679 (and ((_ is Cons!1623) lt!56937) (not (= (_1!1209 (h!2222 lt!56937)) (_1!1209 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))))

(declare-fun b!110789 () Bool)

(assert (=> b!110789 (= e!72040 None!160)))

(assert (= (and d!31249 c!19678) b!110786))

(assert (= (and d!31249 (not c!19678)) b!110787))

(assert (= (and b!110787 c!19679) b!110788))

(assert (= (and b!110787 (not c!19679)) b!110789))

(declare-fun m!125825 () Bool)

(assert (=> b!110788 m!125825))

(assert (=> d!30973 d!31249))

(declare-fun d!31251 () Bool)

(assert (=> d!31251 (= (getValueByKey!156 lt!56937 (_1!1209 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))) (Some!161 (_2!1209 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun lt!57173 () Unit!3390)

(assert (=> d!31251 (= lt!57173 (choose!691 lt!56937 (_1!1209 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))) (_2!1209 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun e!72041 () Bool)

(assert (=> d!31251 e!72041))

(declare-fun res!54769 () Bool)

(assert (=> d!31251 (=> (not res!54769) (not e!72041))))

(assert (=> d!31251 (= res!54769 (isStrictlySorted!306 lt!56937))))

(assert (=> d!31251 (= (lemmaContainsTupThenGetReturnValue!75 lt!56937 (_1!1209 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))) (_2!1209 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))) lt!57173)))

(declare-fun b!110790 () Bool)

(declare-fun res!54770 () Bool)

(assert (=> b!110790 (=> (not res!54770) (not e!72041))))

(assert (=> b!110790 (= res!54770 (containsKey!160 lt!56937 (_1!1209 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun b!110791 () Bool)

(assert (=> b!110791 (= e!72041 (contains!829 lt!56937 (tuple2!2397 (_1!1209 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))) (_2!1209 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(assert (= (and d!31251 res!54769) b!110790))

(assert (= (and b!110790 res!54770) b!110791))

(assert (=> d!31251 m!125003))

(declare-fun m!125827 () Bool)

(assert (=> d!31251 m!125827))

(declare-fun m!125829 () Bool)

(assert (=> d!31251 m!125829))

(declare-fun m!125831 () Bool)

(assert (=> b!110790 m!125831))

(declare-fun m!125833 () Bool)

(assert (=> b!110791 m!125833))

(assert (=> d!30973 d!31251))

(declare-fun e!72043 () List!1627)

(declare-fun c!19683 () Bool)

(declare-fun c!19680 () Bool)

(declare-fun b!110792 () Bool)

(assert (=> b!110792 (= e!72043 (ite c!19680 (t!5755 (toList!792 lt!56577)) (ite c!19683 (Cons!1623 (h!2222 (toList!792 lt!56577)) (t!5755 (toList!792 lt!56577))) Nil!1624)))))

(declare-fun b!110793 () Bool)

(assert (=> b!110793 (= e!72043 (insertStrictlySorted!78 (t!5755 (toList!792 lt!56577)) (_1!1209 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))) (_2!1209 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun bm!11816 () Bool)

(declare-fun call!11821 () List!1627)

(declare-fun call!11819 () List!1627)

(assert (=> bm!11816 (= call!11821 call!11819)))

(declare-fun b!110794 () Bool)

(declare-fun e!72042 () List!1627)

(declare-fun call!11820 () List!1627)

(assert (=> b!110794 (= e!72042 call!11820)))

(declare-fun b!110795 () Bool)

(assert (=> b!110795 (= c!19683 (and ((_ is Cons!1623) (toList!792 lt!56577)) (bvsgt (_1!1209 (h!2222 (toList!792 lt!56577))) (_1!1209 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(declare-fun e!72045 () List!1627)

(assert (=> b!110795 (= e!72045 e!72042)))

(declare-fun b!110796 () Bool)

(declare-fun res!54772 () Bool)

(declare-fun e!72044 () Bool)

(assert (=> b!110796 (=> (not res!54772) (not e!72044))))

(declare-fun lt!57174 () List!1627)

(assert (=> b!110796 (= res!54772 (containsKey!160 lt!57174 (_1!1209 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun b!110798 () Bool)

(assert (=> b!110798 (= e!72042 call!11820)))

(declare-fun bm!11817 () Bool)

(assert (=> bm!11817 (= call!11820 call!11821)))

(declare-fun b!110799 () Bool)

(assert (=> b!110799 (= e!72045 call!11821)))

(declare-fun b!110800 () Bool)

(declare-fun e!72046 () List!1627)

(assert (=> b!110800 (= e!72046 e!72045)))

(assert (=> b!110800 (= c!19680 (and ((_ is Cons!1623) (toList!792 lt!56577)) (= (_1!1209 (h!2222 (toList!792 lt!56577))) (_1!1209 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(declare-fun d!31253 () Bool)

(assert (=> d!31253 e!72044))

(declare-fun res!54771 () Bool)

(assert (=> d!31253 (=> (not res!54771) (not e!72044))))

(assert (=> d!31253 (= res!54771 (isStrictlySorted!306 lt!57174))))

(assert (=> d!31253 (= lt!57174 e!72046)))

(declare-fun c!19682 () Bool)

(assert (=> d!31253 (= c!19682 (and ((_ is Cons!1623) (toList!792 lt!56577)) (bvslt (_1!1209 (h!2222 (toList!792 lt!56577))) (_1!1209 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(assert (=> d!31253 (isStrictlySorted!306 (toList!792 lt!56577))))

(assert (=> d!31253 (= (insertStrictlySorted!78 (toList!792 lt!56577) (_1!1209 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))) (_2!1209 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))) lt!57174)))

(declare-fun b!110797 () Bool)

(assert (=> b!110797 (= e!72046 call!11819)))

(declare-fun b!110801 () Bool)

(assert (=> b!110801 (= e!72044 (contains!829 lt!57174 (tuple2!2397 (_1!1209 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))) (_2!1209 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(declare-fun bm!11818 () Bool)

(assert (=> bm!11818 (= call!11819 ($colon$colon!82 e!72043 (ite c!19682 (h!2222 (toList!792 lt!56577)) (tuple2!2397 (_1!1209 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))) (_2!1209 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))))

(declare-fun c!19681 () Bool)

(assert (=> bm!11818 (= c!19681 c!19682)))

(assert (= (and d!31253 c!19682) b!110797))

(assert (= (and d!31253 (not c!19682)) b!110800))

(assert (= (and b!110800 c!19680) b!110799))

(assert (= (and b!110800 (not c!19680)) b!110795))

(assert (= (and b!110795 c!19683) b!110794))

(assert (= (and b!110795 (not c!19683)) b!110798))

(assert (= (or b!110794 b!110798) bm!11817))

(assert (= (or b!110799 bm!11817) bm!11816))

(assert (= (or b!110797 bm!11816) bm!11818))

(assert (= (and bm!11818 c!19681) b!110793))

(assert (= (and bm!11818 (not c!19681)) b!110792))

(assert (= (and d!31253 res!54771) b!110796))

(assert (= (and b!110796 res!54772) b!110801))

(declare-fun m!125835 () Bool)

(assert (=> d!31253 m!125835))

(declare-fun m!125837 () Bool)

(assert (=> d!31253 m!125837))

(declare-fun m!125839 () Bool)

(assert (=> b!110796 m!125839))

(declare-fun m!125841 () Bool)

(assert (=> bm!11818 m!125841))

(declare-fun m!125843 () Bool)

(assert (=> b!110793 m!125843))

(declare-fun m!125845 () Bool)

(assert (=> b!110801 m!125845))

(assert (=> d!30973 d!31253))

(assert (=> b!110217 d!31205))

(declare-fun e!72048 () Option!162)

(declare-fun b!110804 () Bool)

(assert (=> b!110804 (= e!72048 (getValueByKey!156 (t!5755 (toList!792 lt!56923)) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))

(declare-fun d!31255 () Bool)

(declare-fun c!19684 () Bool)

(assert (=> d!31255 (= c!19684 (and ((_ is Cons!1623) (toList!792 lt!56923)) (= (_1!1209 (h!2222 (toList!792 lt!56923))) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))))))

(declare-fun e!72047 () Option!162)

(assert (=> d!31255 (= (getValueByKey!156 (toList!792 lt!56923) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))) e!72047)))

(declare-fun b!110802 () Bool)

(assert (=> b!110802 (= e!72047 (Some!161 (_2!1209 (h!2222 (toList!792 lt!56923)))))))

(declare-fun b!110803 () Bool)

(assert (=> b!110803 (= e!72047 e!72048)))

(declare-fun c!19685 () Bool)

(assert (=> b!110803 (= c!19685 (and ((_ is Cons!1623) (toList!792 lt!56923)) (not (= (_1!1209 (h!2222 (toList!792 lt!56923))) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))))

(declare-fun b!110805 () Bool)

(assert (=> b!110805 (= e!72048 None!160)))

(assert (= (and d!31255 c!19684) b!110802))

(assert (= (and d!31255 (not c!19684)) b!110803))

(assert (= (and b!110803 c!19685) b!110804))

(assert (= (and b!110803 (not c!19685)) b!110805))

(declare-fun m!125847 () Bool)

(assert (=> b!110804 m!125847))

(assert (=> b!110391 d!31255))

(declare-fun bm!11819 () Bool)

(declare-fun call!11822 () Bool)

(assert (=> bm!11819 (= call!11822 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4339 newMap!16) (mask!6793 newMap!16)))))

(declare-fun d!31257 () Bool)

(declare-fun res!54773 () Bool)

(declare-fun e!72050 () Bool)

(assert (=> d!31257 (=> res!54773 e!72050)))

(assert (=> d!31257 (= res!54773 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2326 (_keys!4339 newMap!16))))))

(assert (=> d!31257 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4339 newMap!16) (mask!6793 newMap!16)) e!72050)))

(declare-fun b!110806 () Bool)

(declare-fun e!72049 () Bool)

(assert (=> b!110806 (= e!72049 call!11822)))

(declare-fun b!110807 () Bool)

(declare-fun e!72051 () Bool)

(assert (=> b!110807 (= e!72049 e!72051)))

(declare-fun lt!57176 () (_ BitVec 64))

(assert (=> b!110807 (= lt!57176 (select (arr!2068 (_keys!4339 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!57175 () Unit!3390)

(assert (=> b!110807 (= lt!57175 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4339 newMap!16) lt!57176 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!110807 (arrayContainsKey!0 (_keys!4339 newMap!16) lt!57176 #b00000000000000000000000000000000)))

(declare-fun lt!57177 () Unit!3390)

(assert (=> b!110807 (= lt!57177 lt!57175)))

(declare-fun res!54774 () Bool)

(assert (=> b!110807 (= res!54774 (= (seekEntryOrOpen!0 (select (arr!2068 (_keys!4339 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4339 newMap!16) (mask!6793 newMap!16)) (Found!264 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!110807 (=> (not res!54774) (not e!72051))))

(declare-fun b!110808 () Bool)

(assert (=> b!110808 (= e!72051 call!11822)))

(declare-fun b!110809 () Bool)

(assert (=> b!110809 (= e!72050 e!72049)))

(declare-fun c!19686 () Bool)

(assert (=> b!110809 (= c!19686 (validKeyInArray!0 (select (arr!2068 (_keys!4339 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!31257 (not res!54773)) b!110809))

(assert (= (and b!110809 c!19686) b!110807))

(assert (= (and b!110809 (not c!19686)) b!110806))

(assert (= (and b!110807 res!54774) b!110808))

(assert (= (or b!110808 b!110806) bm!11819))

(declare-fun m!125849 () Bool)

(assert (=> bm!11819 m!125849))

(assert (=> b!110807 m!125385))

(declare-fun m!125851 () Bool)

(assert (=> b!110807 m!125851))

(declare-fun m!125853 () Bool)

(assert (=> b!110807 m!125853))

(assert (=> b!110807 m!125385))

(declare-fun m!125855 () Bool)

(assert (=> b!110807 m!125855))

(assert (=> b!110809 m!125385))

(assert (=> b!110809 m!125385))

(declare-fun m!125857 () Bool)

(assert (=> b!110809 m!125857))

(assert (=> bm!11748 d!31257))

(assert (=> d!30795 d!30793))

(assert (=> d!30795 d!30799))

(assert (=> d!30795 d!30797))

(assert (=> d!30795 d!30801))

(declare-fun d!31259 () Bool)

(declare-fun lt!57178 () Bool)

(assert (=> d!31259 (= lt!57178 (select (content!113 lt!56790) (tuple2!2397 (_1!1209 lt!56300) (_2!1209 lt!56300))))))

(declare-fun e!72052 () Bool)

(assert (=> d!31259 (= lt!57178 e!72052)))

(declare-fun res!54775 () Bool)

(assert (=> d!31259 (=> (not res!54775) (not e!72052))))

(assert (=> d!31259 (= res!54775 ((_ is Cons!1623) lt!56790))))

(assert (=> d!31259 (= (contains!829 lt!56790 (tuple2!2397 (_1!1209 lt!56300) (_2!1209 lt!56300))) lt!57178)))

(declare-fun b!110810 () Bool)

(declare-fun e!72053 () Bool)

(assert (=> b!110810 (= e!72052 e!72053)))

(declare-fun res!54776 () Bool)

(assert (=> b!110810 (=> res!54776 e!72053)))

(assert (=> b!110810 (= res!54776 (= (h!2222 lt!56790) (tuple2!2397 (_1!1209 lt!56300) (_2!1209 lt!56300))))))

(declare-fun b!110811 () Bool)

(assert (=> b!110811 (= e!72053 (contains!829 (t!5755 lt!56790) (tuple2!2397 (_1!1209 lt!56300) (_2!1209 lt!56300))))))

(assert (= (and d!31259 res!54775) b!110810))

(assert (= (and b!110810 (not res!54776)) b!110811))

(declare-fun m!125859 () Bool)

(assert (=> d!31259 m!125859))

(declare-fun m!125861 () Bool)

(assert (=> d!31259 m!125861))

(declare-fun m!125863 () Bool)

(assert (=> b!110811 m!125863))

(assert (=> b!110263 d!31259))

(declare-fun c!19690 () Bool)

(declare-fun e!72055 () List!1627)

(declare-fun c!19687 () Bool)

(declare-fun b!110812 () Bool)

(assert (=> b!110812 (= e!72055 (ite c!19687 (t!5755 (t!5755 (toList!792 lt!56303))) (ite c!19690 (Cons!1623 (h!2222 (t!5755 (toList!792 lt!56303))) (t!5755 (t!5755 (toList!792 lt!56303)))) Nil!1624)))))

(declare-fun b!110813 () Bool)

(assert (=> b!110813 (= e!72055 (insertStrictlySorted!78 (t!5755 (t!5755 (toList!792 lt!56303))) (_1!1209 lt!56299) (_2!1209 lt!56299)))))

(declare-fun bm!11820 () Bool)

(declare-fun call!11825 () List!1627)

(declare-fun call!11823 () List!1627)

(assert (=> bm!11820 (= call!11825 call!11823)))

(declare-fun b!110814 () Bool)

(declare-fun e!72054 () List!1627)

(declare-fun call!11824 () List!1627)

(assert (=> b!110814 (= e!72054 call!11824)))

(declare-fun b!110815 () Bool)

(assert (=> b!110815 (= c!19690 (and ((_ is Cons!1623) (t!5755 (toList!792 lt!56303))) (bvsgt (_1!1209 (h!2222 (t!5755 (toList!792 lt!56303)))) (_1!1209 lt!56299))))))

(declare-fun e!72057 () List!1627)

(assert (=> b!110815 (= e!72057 e!72054)))

(declare-fun b!110816 () Bool)

(declare-fun res!54778 () Bool)

(declare-fun e!72056 () Bool)

(assert (=> b!110816 (=> (not res!54778) (not e!72056))))

(declare-fun lt!57179 () List!1627)

(assert (=> b!110816 (= res!54778 (containsKey!160 lt!57179 (_1!1209 lt!56299)))))

(declare-fun b!110818 () Bool)

(assert (=> b!110818 (= e!72054 call!11824)))

(declare-fun bm!11821 () Bool)

(assert (=> bm!11821 (= call!11824 call!11825)))

(declare-fun b!110819 () Bool)

(assert (=> b!110819 (= e!72057 call!11825)))

(declare-fun b!110820 () Bool)

(declare-fun e!72058 () List!1627)

(assert (=> b!110820 (= e!72058 e!72057)))

(assert (=> b!110820 (= c!19687 (and ((_ is Cons!1623) (t!5755 (toList!792 lt!56303))) (= (_1!1209 (h!2222 (t!5755 (toList!792 lt!56303)))) (_1!1209 lt!56299))))))

(declare-fun d!31261 () Bool)

(assert (=> d!31261 e!72056))

(declare-fun res!54777 () Bool)

(assert (=> d!31261 (=> (not res!54777) (not e!72056))))

(assert (=> d!31261 (= res!54777 (isStrictlySorted!306 lt!57179))))

(assert (=> d!31261 (= lt!57179 e!72058)))

(declare-fun c!19689 () Bool)

(assert (=> d!31261 (= c!19689 (and ((_ is Cons!1623) (t!5755 (toList!792 lt!56303))) (bvslt (_1!1209 (h!2222 (t!5755 (toList!792 lt!56303)))) (_1!1209 lt!56299))))))

(assert (=> d!31261 (isStrictlySorted!306 (t!5755 (toList!792 lt!56303)))))

(assert (=> d!31261 (= (insertStrictlySorted!78 (t!5755 (toList!792 lt!56303)) (_1!1209 lt!56299) (_2!1209 lt!56299)) lt!57179)))

(declare-fun b!110817 () Bool)

(assert (=> b!110817 (= e!72058 call!11823)))

(declare-fun b!110821 () Bool)

(assert (=> b!110821 (= e!72056 (contains!829 lt!57179 (tuple2!2397 (_1!1209 lt!56299) (_2!1209 lt!56299))))))

(declare-fun bm!11822 () Bool)

(assert (=> bm!11822 (= call!11823 ($colon$colon!82 e!72055 (ite c!19689 (h!2222 (t!5755 (toList!792 lt!56303))) (tuple2!2397 (_1!1209 lt!56299) (_2!1209 lt!56299)))))))

(declare-fun c!19688 () Bool)

(assert (=> bm!11822 (= c!19688 c!19689)))

(assert (= (and d!31261 c!19689) b!110817))

(assert (= (and d!31261 (not c!19689)) b!110820))

(assert (= (and b!110820 c!19687) b!110819))

(assert (= (and b!110820 (not c!19687)) b!110815))

(assert (= (and b!110815 c!19690) b!110814))

(assert (= (and b!110815 (not c!19690)) b!110818))

(assert (= (or b!110814 b!110818) bm!11821))

(assert (= (or b!110819 bm!11821) bm!11820))

(assert (= (or b!110817 bm!11820) bm!11822))

(assert (= (and bm!11822 c!19688) b!110813))

(assert (= (and bm!11822 (not c!19688)) b!110812))

(assert (= (and d!31261 res!54777) b!110816))

(assert (= (and b!110816 res!54778) b!110821))

(declare-fun m!125865 () Bool)

(assert (=> d!31261 m!125865))

(declare-fun m!125867 () Bool)

(assert (=> d!31261 m!125867))

(declare-fun m!125869 () Bool)

(assert (=> b!110816 m!125869))

(declare-fun m!125871 () Bool)

(assert (=> bm!11822 m!125871))

(declare-fun m!125873 () Bool)

(assert (=> b!110813 m!125873))

(declare-fun m!125875 () Bool)

(assert (=> b!110821 m!125875))

(assert (=> b!110177 d!31261))

(declare-fun c!19694 () Bool)

(declare-fun e!72060 () List!1627)

(declare-fun b!110822 () Bool)

(declare-fun c!19691 () Bool)

(assert (=> b!110822 (= e!72060 (ite c!19691 (t!5755 (t!5755 (toList!792 (+!139 lt!56303 lt!56299)))) (ite c!19694 (Cons!1623 (h!2222 (t!5755 (toList!792 (+!139 lt!56303 lt!56299)))) (t!5755 (t!5755 (toList!792 (+!139 lt!56303 lt!56299))))) Nil!1624)))))

(declare-fun b!110823 () Bool)

(assert (=> b!110823 (= e!72060 (insertStrictlySorted!78 (t!5755 (t!5755 (toList!792 (+!139 lt!56303 lt!56299)))) (_1!1209 lt!56300) (_2!1209 lt!56300)))))

(declare-fun bm!11823 () Bool)

(declare-fun call!11828 () List!1627)

(declare-fun call!11826 () List!1627)

(assert (=> bm!11823 (= call!11828 call!11826)))

(declare-fun b!110824 () Bool)

(declare-fun e!72059 () List!1627)

(declare-fun call!11827 () List!1627)

(assert (=> b!110824 (= e!72059 call!11827)))

(declare-fun b!110825 () Bool)

(assert (=> b!110825 (= c!19694 (and ((_ is Cons!1623) (t!5755 (toList!792 (+!139 lt!56303 lt!56299)))) (bvsgt (_1!1209 (h!2222 (t!5755 (toList!792 (+!139 lt!56303 lt!56299))))) (_1!1209 lt!56300))))))

(declare-fun e!72062 () List!1627)

(assert (=> b!110825 (= e!72062 e!72059)))

(declare-fun b!110826 () Bool)

(declare-fun res!54780 () Bool)

(declare-fun e!72061 () Bool)

(assert (=> b!110826 (=> (not res!54780) (not e!72061))))

(declare-fun lt!57180 () List!1627)

(assert (=> b!110826 (= res!54780 (containsKey!160 lt!57180 (_1!1209 lt!56300)))))

(declare-fun b!110828 () Bool)

(assert (=> b!110828 (= e!72059 call!11827)))

(declare-fun bm!11824 () Bool)

(assert (=> bm!11824 (= call!11827 call!11828)))

(declare-fun b!110829 () Bool)

(assert (=> b!110829 (= e!72062 call!11828)))

(declare-fun b!110830 () Bool)

(declare-fun e!72063 () List!1627)

(assert (=> b!110830 (= e!72063 e!72062)))

(assert (=> b!110830 (= c!19691 (and ((_ is Cons!1623) (t!5755 (toList!792 (+!139 lt!56303 lt!56299)))) (= (_1!1209 (h!2222 (t!5755 (toList!792 (+!139 lt!56303 lt!56299))))) (_1!1209 lt!56300))))))

(declare-fun d!31263 () Bool)

(assert (=> d!31263 e!72061))

(declare-fun res!54779 () Bool)

(assert (=> d!31263 (=> (not res!54779) (not e!72061))))

(assert (=> d!31263 (= res!54779 (isStrictlySorted!306 lt!57180))))

(assert (=> d!31263 (= lt!57180 e!72063)))

(declare-fun c!19693 () Bool)

(assert (=> d!31263 (= c!19693 (and ((_ is Cons!1623) (t!5755 (toList!792 (+!139 lt!56303 lt!56299)))) (bvslt (_1!1209 (h!2222 (t!5755 (toList!792 (+!139 lt!56303 lt!56299))))) (_1!1209 lt!56300))))))

(assert (=> d!31263 (isStrictlySorted!306 (t!5755 (toList!792 (+!139 lt!56303 lt!56299))))))

(assert (=> d!31263 (= (insertStrictlySorted!78 (t!5755 (toList!792 (+!139 lt!56303 lt!56299))) (_1!1209 lt!56300) (_2!1209 lt!56300)) lt!57180)))

(declare-fun b!110827 () Bool)

(assert (=> b!110827 (= e!72063 call!11826)))

(declare-fun b!110831 () Bool)

(assert (=> b!110831 (= e!72061 (contains!829 lt!57180 (tuple2!2397 (_1!1209 lt!56300) (_2!1209 lt!56300))))))

(declare-fun bm!11825 () Bool)

(assert (=> bm!11825 (= call!11826 ($colon$colon!82 e!72060 (ite c!19693 (h!2222 (t!5755 (toList!792 (+!139 lt!56303 lt!56299)))) (tuple2!2397 (_1!1209 lt!56300) (_2!1209 lt!56300)))))))

(declare-fun c!19692 () Bool)

(assert (=> bm!11825 (= c!19692 c!19693)))

(assert (= (and d!31263 c!19693) b!110827))

(assert (= (and d!31263 (not c!19693)) b!110830))

(assert (= (and b!110830 c!19691) b!110829))

(assert (= (and b!110830 (not c!19691)) b!110825))

(assert (= (and b!110825 c!19694) b!110824))

(assert (= (and b!110825 (not c!19694)) b!110828))

(assert (= (or b!110824 b!110828) bm!11824))

(assert (= (or b!110829 bm!11824) bm!11823))

(assert (= (or b!110827 bm!11823) bm!11825))

(assert (= (and bm!11825 c!19692) b!110823))

(assert (= (and bm!11825 (not c!19692)) b!110822))

(assert (= (and d!31263 res!54779) b!110826))

(assert (= (and b!110826 res!54780) b!110831))

(declare-fun m!125877 () Bool)

(assert (=> d!31263 m!125877))

(declare-fun m!125879 () Bool)

(assert (=> d!31263 m!125879))

(declare-fun m!125881 () Bool)

(assert (=> b!110826 m!125881))

(declare-fun m!125883 () Bool)

(assert (=> bm!11825 m!125883))

(declare-fun m!125885 () Bool)

(assert (=> b!110823 m!125885))

(declare-fun m!125887 () Bool)

(assert (=> b!110831 m!125887))

(assert (=> b!110014 d!31263))

(declare-fun b!110834 () Bool)

(declare-fun e!72065 () Option!162)

(assert (=> b!110834 (= e!72065 (getValueByKey!156 (t!5755 (t!5755 (toList!792 lt!56403))) (_1!1209 lt!56299)))))

(declare-fun d!31265 () Bool)

(declare-fun c!19695 () Bool)

(assert (=> d!31265 (= c!19695 (and ((_ is Cons!1623) (t!5755 (toList!792 lt!56403))) (= (_1!1209 (h!2222 (t!5755 (toList!792 lt!56403)))) (_1!1209 lt!56299))))))

(declare-fun e!72064 () Option!162)

(assert (=> d!31265 (= (getValueByKey!156 (t!5755 (toList!792 lt!56403)) (_1!1209 lt!56299)) e!72064)))

(declare-fun b!110832 () Bool)

(assert (=> b!110832 (= e!72064 (Some!161 (_2!1209 (h!2222 (t!5755 (toList!792 lt!56403))))))))

(declare-fun b!110833 () Bool)

(assert (=> b!110833 (= e!72064 e!72065)))

(declare-fun c!19696 () Bool)

(assert (=> b!110833 (= c!19696 (and ((_ is Cons!1623) (t!5755 (toList!792 lt!56403))) (not (= (_1!1209 (h!2222 (t!5755 (toList!792 lt!56403)))) (_1!1209 lt!56299)))))))

(declare-fun b!110835 () Bool)

(assert (=> b!110835 (= e!72065 None!160)))

(assert (= (and d!31265 c!19695) b!110832))

(assert (= (and d!31265 (not c!19695)) b!110833))

(assert (= (and b!110833 c!19696) b!110834))

(assert (= (and b!110833 (not c!19696)) b!110835))

(declare-fun m!125889 () Bool)

(assert (=> b!110834 m!125889))

(assert (=> b!110137 d!31265))

(declare-fun d!31267 () Bool)

(assert (=> d!31267 (= (isDefined!110 (getValueByKey!156 (toList!792 lt!56425) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!382 (getValueByKey!156 (toList!792 lt!56425) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4556 () Bool)

(assert (= bs!4556 d!31267))

(assert (=> bs!4556 m!124651))

(declare-fun m!125891 () Bool)

(assert (=> bs!4556 m!125891))

(assert (=> b!110193 d!31267))

(declare-fun b!110838 () Bool)

(declare-fun e!72067 () Option!162)

(assert (=> b!110838 (= e!72067 (getValueByKey!156 (t!5755 (toList!792 lt!56425)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!31269 () Bool)

(declare-fun c!19697 () Bool)

(assert (=> d!31269 (= c!19697 (and ((_ is Cons!1623) (toList!792 lt!56425)) (= (_1!1209 (h!2222 (toList!792 lt!56425))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!72066 () Option!162)

(assert (=> d!31269 (= (getValueByKey!156 (toList!792 lt!56425) #b0000000000000000000000000000000000000000000000000000000000000000) e!72066)))

(declare-fun b!110836 () Bool)

(assert (=> b!110836 (= e!72066 (Some!161 (_2!1209 (h!2222 (toList!792 lt!56425)))))))

(declare-fun b!110837 () Bool)

(assert (=> b!110837 (= e!72066 e!72067)))

(declare-fun c!19698 () Bool)

(assert (=> b!110837 (= c!19698 (and ((_ is Cons!1623) (toList!792 lt!56425)) (not (= (_1!1209 (h!2222 (toList!792 lt!56425))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!110839 () Bool)

(assert (=> b!110839 (= e!72067 None!160)))

(assert (= (and d!31269 c!19697) b!110836))

(assert (= (and d!31269 (not c!19697)) b!110837))

(assert (= (and b!110837 c!19698) b!110838))

(assert (= (and b!110837 (not c!19698)) b!110839))

(declare-fun m!125893 () Bool)

(assert (=> b!110838 m!125893))

(assert (=> b!110193 d!31269))

(declare-fun d!31271 () Bool)

(assert (=> d!31271 (= (validKeyInArray!0 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!110163 d!31271))

(declare-fun d!31273 () Bool)

(assert (=> d!31273 (= (isDefined!110 (getValueByKey!156 (toList!792 lt!56399) (_1!1209 lt!56300))) (not (isEmpty!382 (getValueByKey!156 (toList!792 lt!56399) (_1!1209 lt!56300)))))))

(declare-fun bs!4557 () Bool)

(assert (= bs!4557 d!31273))

(assert (=> bs!4557 m!124071))

(declare-fun m!125895 () Bool)

(assert (=> bs!4557 m!125895))

(assert (=> b!109974 d!31273))

(assert (=> b!109974 d!30855))

(declare-fun e!72069 () Option!162)

(declare-fun b!110842 () Bool)

(assert (=> b!110842 (= e!72069 (getValueByKey!156 (t!5755 (toList!792 lt!56746)) (_1!1209 (ite c!19423 (ite c!19416 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))))))

(declare-fun c!19699 () Bool)

(declare-fun d!31275 () Bool)

(assert (=> d!31275 (= c!19699 (and ((_ is Cons!1623) (toList!792 lt!56746)) (= (_1!1209 (h!2222 (toList!792 lt!56746))) (_1!1209 (ite c!19423 (ite c!19416 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))))

(declare-fun e!72068 () Option!162)

(assert (=> d!31275 (= (getValueByKey!156 (toList!792 lt!56746) (_1!1209 (ite c!19423 (ite c!19416 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))) e!72068)))

(declare-fun b!110840 () Bool)

(assert (=> b!110840 (= e!72068 (Some!161 (_2!1209 (h!2222 (toList!792 lt!56746)))))))

(declare-fun b!110841 () Bool)

(assert (=> b!110841 (= e!72068 e!72069)))

(declare-fun c!19700 () Bool)

(assert (=> b!110841 (= c!19700 (and ((_ is Cons!1623) (toList!792 lt!56746)) (not (= (_1!1209 (h!2222 (toList!792 lt!56746))) (_1!1209 (ite c!19423 (ite c!19416 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))))))))

(declare-fun b!110843 () Bool)

(assert (=> b!110843 (= e!72069 None!160)))

(assert (= (and d!31275 c!19699) b!110840))

(assert (= (and d!31275 (not c!19699)) b!110841))

(assert (= (and b!110841 c!19700) b!110842))

(assert (= (and b!110841 (not c!19700)) b!110843))

(declare-fun m!125897 () Bool)

(assert (=> b!110842 m!125897))

(assert (=> b!110198 d!31275))

(declare-fun d!31277 () Bool)

(assert (=> d!31277 (contains!827 (getCurrentListMap!469 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355))))

(declare-fun lt!57183 () Unit!3390)

(declare-fun choose!703 (array!4365 array!4367 (_ BitVec 32) (_ BitVec 32) V!3241 V!3241 (_ BitVec 64) (_ BitVec 32) Int) Unit!3390)

(assert (=> d!31277 (= lt!57183 (choose!703 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(assert (=> d!31277 (validMask!0 (mask!6793 newMap!16))))

(assert (=> d!31277 (= (lemmaArrayContainsKeyThenInListMap!32 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) lt!57183)))

(declare-fun bs!4558 () Bool)

(assert (= bs!4558 d!31277))

(assert (=> bs!4558 m!124133))

(assert (=> bs!4558 m!124133))

(assert (=> bs!4558 m!123865))

(assert (=> bs!4558 m!124829))

(assert (=> bs!4558 m!123865))

(declare-fun m!125899 () Bool)

(assert (=> bs!4558 m!125899))

(assert (=> bs!4558 m!124269))

(assert (=> b!110317 d!31277))

(assert (=> b!110317 d!31027))

(assert (=> b!110317 d!30839))

(declare-fun d!31279 () Bool)

(declare-fun e!72071 () Bool)

(assert (=> d!31279 e!72071))

(declare-fun res!54781 () Bool)

(assert (=> d!31279 (=> res!54781 e!72071)))

(declare-fun lt!57184 () Bool)

(assert (=> d!31279 (= res!54781 (not lt!57184))))

(declare-fun lt!57185 () Bool)

(assert (=> d!31279 (= lt!57184 lt!57185)))

(declare-fun lt!57186 () Unit!3390)

(declare-fun e!72070 () Unit!3390)

(assert (=> d!31279 (= lt!57186 e!72070)))

(declare-fun c!19701 () Bool)

(assert (=> d!31279 (= c!19701 lt!57185)))

(assert (=> d!31279 (= lt!57185 (containsKey!160 (toList!792 lt!56576) lt!56580))))

(assert (=> d!31279 (= (contains!827 lt!56576 lt!56580) lt!57184)))

(declare-fun b!110844 () Bool)

(declare-fun lt!57187 () Unit!3390)

(assert (=> b!110844 (= e!72070 lt!57187)))

(assert (=> b!110844 (= lt!57187 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 lt!56576) lt!56580))))

(assert (=> b!110844 (isDefined!110 (getValueByKey!156 (toList!792 lt!56576) lt!56580))))

(declare-fun b!110845 () Bool)

(declare-fun Unit!3441 () Unit!3390)

(assert (=> b!110845 (= e!72070 Unit!3441)))

(declare-fun b!110846 () Bool)

(assert (=> b!110846 (= e!72071 (isDefined!110 (getValueByKey!156 (toList!792 lt!56576) lt!56580)))))

(assert (= (and d!31279 c!19701) b!110844))

(assert (= (and d!31279 (not c!19701)) b!110845))

(assert (= (and d!31279 (not res!54781)) b!110846))

(declare-fun m!125901 () Bool)

(assert (=> d!31279 m!125901))

(declare-fun m!125903 () Bool)

(assert (=> b!110844 m!125903))

(assert (=> b!110844 m!124977))

(assert (=> b!110844 m!124977))

(declare-fun m!125905 () Bool)

(assert (=> b!110844 m!125905))

(assert (=> b!110846 m!124977))

(assert (=> b!110846 m!124977))

(assert (=> b!110846 m!125905))

(assert (=> d!30969 d!31279))

(assert (=> d!30969 d!30963))

(assert (=> d!30969 d!30977))

(assert (=> d!30969 d!30983))

(declare-fun d!31281 () Bool)

(assert (=> d!31281 (= (apply!100 (+!139 lt!56576 (tuple2!2397 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992))))) lt!56580) (apply!100 lt!56576 lt!56580))))

(assert (=> d!31281 true))

(declare-fun _$34!904 () Unit!3390)

(assert (=> d!31281 (= (choose!701 lt!56576 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992))) lt!56580) _$34!904)))

(declare-fun bs!4559 () Bool)

(assert (= bs!4559 d!31281))

(assert (=> bs!4559 m!124219))

(assert (=> bs!4559 m!124219))

(assert (=> bs!4559 m!124243))

(assert (=> bs!4559 m!124221))

(assert (=> d!30969 d!31281))

(declare-fun d!31283 () Bool)

(declare-fun res!54782 () Bool)

(declare-fun e!72072 () Bool)

(assert (=> d!31283 (=> res!54782 e!72072)))

(assert (=> d!31283 (= res!54782 (and ((_ is Cons!1623) (toList!792 lt!56388)) (= (_1!1209 (h!2222 (toList!792 lt!56388))) (_1!1209 lt!56299))))))

(assert (=> d!31283 (= (containsKey!160 (toList!792 lt!56388) (_1!1209 lt!56299)) e!72072)))

(declare-fun b!110847 () Bool)

(declare-fun e!72073 () Bool)

(assert (=> b!110847 (= e!72072 e!72073)))

(declare-fun res!54783 () Bool)

(assert (=> b!110847 (=> (not res!54783) (not e!72073))))

(assert (=> b!110847 (= res!54783 (and (or (not ((_ is Cons!1623) (toList!792 lt!56388))) (bvsle (_1!1209 (h!2222 (toList!792 lt!56388))) (_1!1209 lt!56299))) ((_ is Cons!1623) (toList!792 lt!56388)) (bvslt (_1!1209 (h!2222 (toList!792 lt!56388))) (_1!1209 lt!56299))))))

(declare-fun b!110848 () Bool)

(assert (=> b!110848 (= e!72073 (containsKey!160 (t!5755 (toList!792 lt!56388)) (_1!1209 lt!56299)))))

(assert (= (and d!31283 (not res!54782)) b!110847))

(assert (= (and b!110847 res!54783) b!110848))

(declare-fun m!125907 () Bool)

(assert (=> b!110848 m!125907))

(assert (=> d!30933 d!31283))

(declare-fun d!31285 () Bool)

(declare-fun lt!57188 () Bool)

(assert (=> d!31285 (= lt!57188 (select (content!113 (toList!792 lt!56634)) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))))

(declare-fun e!72074 () Bool)

(assert (=> d!31285 (= lt!57188 e!72074)))

(declare-fun res!54784 () Bool)

(assert (=> d!31285 (=> (not res!54784) (not e!72074))))

(assert (=> d!31285 (= res!54784 ((_ is Cons!1623) (toList!792 lt!56634)))))

(assert (=> d!31285 (= (contains!829 (toList!792 lt!56634) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992))))) lt!57188)))

(declare-fun b!110849 () Bool)

(declare-fun e!72075 () Bool)

(assert (=> b!110849 (= e!72074 e!72075)))

(declare-fun res!54785 () Bool)

(assert (=> b!110849 (=> res!54785 e!72075)))

(assert (=> b!110849 (= res!54785 (= (h!2222 (toList!792 lt!56634)) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))))

(declare-fun b!110850 () Bool)

(assert (=> b!110850 (= e!72075 (contains!829 (t!5755 (toList!792 lt!56634)) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))))

(assert (= (and d!31285 res!54784) b!110849))

(assert (= (and b!110849 (not res!54785)) b!110850))

(declare-fun m!125909 () Bool)

(assert (=> d!31285 m!125909))

(declare-fun m!125911 () Bool)

(assert (=> d!31285 m!125911))

(declare-fun m!125913 () Bool)

(assert (=> b!110850 m!125913))

(assert (=> b!110024 d!31285))

(declare-fun d!31287 () Bool)

(assert (=> d!31287 (= (size!2332 newMap!16) (bvadd (_size!507 newMap!16) (bvsdiv (bvadd (extraKeys!2423 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!110149 d!31287))

(declare-fun d!31289 () Bool)

(assert (=> d!31289 (= (apply!100 lt!56730 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1350 (getValueByKey!156 (toList!792 lt!56730) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(declare-fun bs!4560 () Bool)

(assert (= bs!4560 d!31289))

(assert (=> bs!4560 m!124577))

(declare-fun m!125915 () Bool)

(assert (=> bs!4560 m!125915))

(assert (=> bs!4560 m!125915))

(declare-fun m!125917 () Bool)

(assert (=> bs!4560 m!125917))

(assert (=> b!110156 d!31289))

(assert (=> b!110156 d!31135))

(declare-fun d!31291 () Bool)

(declare-fun e!72077 () Bool)

(assert (=> d!31291 e!72077))

(declare-fun res!54786 () Bool)

(assert (=> d!31291 (=> res!54786 e!72077)))

(declare-fun lt!57189 () Bool)

(assert (=> d!31291 (= res!54786 (not lt!57189))))

(declare-fun lt!57190 () Bool)

(assert (=> d!31291 (= lt!57189 lt!57190)))

(declare-fun lt!57191 () Unit!3390)

(declare-fun e!72076 () Unit!3390)

(assert (=> d!31291 (= lt!57191 e!72076)))

(declare-fun c!19702 () Bool)

(assert (=> d!31291 (= c!19702 lt!57190)))

(assert (=> d!31291 (= lt!57190 (containsKey!160 (toList!792 lt!56746) (_1!1209 (ite c!19423 (ite c!19416 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))))))

(assert (=> d!31291 (= (contains!827 lt!56746 (_1!1209 (ite c!19423 (ite c!19416 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))) lt!57189)))

(declare-fun b!110851 () Bool)

(declare-fun lt!57192 () Unit!3390)

(assert (=> b!110851 (= e!72076 lt!57192)))

(assert (=> b!110851 (= lt!57192 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 lt!56746) (_1!1209 (ite c!19423 (ite c!19416 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))))))

(assert (=> b!110851 (isDefined!110 (getValueByKey!156 (toList!792 lt!56746) (_1!1209 (ite c!19423 (ite c!19416 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))))))

(declare-fun b!110852 () Bool)

(declare-fun Unit!3442 () Unit!3390)

(assert (=> b!110852 (= e!72076 Unit!3442)))

(declare-fun b!110853 () Bool)

(assert (=> b!110853 (= e!72077 (isDefined!110 (getValueByKey!156 (toList!792 lt!56746) (_1!1209 (ite c!19423 (ite c!19416 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))))

(assert (= (and d!31291 c!19702) b!110851))

(assert (= (and d!31291 (not c!19702)) b!110852))

(assert (= (and d!31291 (not res!54786)) b!110853))

(declare-fun m!125919 () Bool)

(assert (=> d!31291 m!125919))

(declare-fun m!125921 () Bool)

(assert (=> b!110851 m!125921))

(assert (=> b!110851 m!124665))

(assert (=> b!110851 m!124665))

(declare-fun m!125923 () Bool)

(assert (=> b!110851 m!125923))

(assert (=> b!110853 m!124665))

(assert (=> b!110853 m!124665))

(assert (=> b!110853 m!125923))

(assert (=> d!30877 d!31291))

(declare-fun b!110856 () Bool)

(declare-fun e!72079 () Option!162)

(assert (=> b!110856 (= e!72079 (getValueByKey!156 (t!5755 lt!56745) (_1!1209 (ite c!19423 (ite c!19416 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))))))

(declare-fun d!31293 () Bool)

(declare-fun c!19703 () Bool)

(assert (=> d!31293 (= c!19703 (and ((_ is Cons!1623) lt!56745) (= (_1!1209 (h!2222 lt!56745)) (_1!1209 (ite c!19423 (ite c!19416 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))))

(declare-fun e!72078 () Option!162)

(assert (=> d!31293 (= (getValueByKey!156 lt!56745 (_1!1209 (ite c!19423 (ite c!19416 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))) e!72078)))

(declare-fun b!110854 () Bool)

(assert (=> b!110854 (= e!72078 (Some!161 (_2!1209 (h!2222 lt!56745))))))

(declare-fun b!110855 () Bool)

(assert (=> b!110855 (= e!72078 e!72079)))

(declare-fun c!19704 () Bool)

(assert (=> b!110855 (= c!19704 (and ((_ is Cons!1623) lt!56745) (not (= (_1!1209 (h!2222 lt!56745)) (_1!1209 (ite c!19423 (ite c!19416 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))))))))

(declare-fun b!110857 () Bool)

(assert (=> b!110857 (= e!72079 None!160)))

(assert (= (and d!31293 c!19703) b!110854))

(assert (= (and d!31293 (not c!19703)) b!110855))

(assert (= (and b!110855 c!19704) b!110856))

(assert (= (and b!110855 (not c!19704)) b!110857))

(declare-fun m!125925 () Bool)

(assert (=> b!110856 m!125925))

(assert (=> d!30877 d!31293))

(declare-fun d!31295 () Bool)

(assert (=> d!31295 (= (getValueByKey!156 lt!56745 (_1!1209 (ite c!19423 (ite c!19416 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))) (Some!161 (_2!1209 (ite c!19423 (ite c!19416 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))))))

(declare-fun lt!57193 () Unit!3390)

(assert (=> d!31295 (= lt!57193 (choose!691 lt!56745 (_1!1209 (ite c!19423 (ite c!19416 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))) (_2!1209 (ite c!19423 (ite c!19416 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))))))

(declare-fun e!72080 () Bool)

(assert (=> d!31295 e!72080))

(declare-fun res!54787 () Bool)

(assert (=> d!31295 (=> (not res!54787) (not e!72080))))

(assert (=> d!31295 (= res!54787 (isStrictlySorted!306 lt!56745))))

(assert (=> d!31295 (= (lemmaContainsTupThenGetReturnValue!75 lt!56745 (_1!1209 (ite c!19423 (ite c!19416 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))) (_2!1209 (ite c!19423 (ite c!19416 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))) lt!57193)))

(declare-fun b!110858 () Bool)

(declare-fun res!54788 () Bool)

(assert (=> b!110858 (=> (not res!54788) (not e!72080))))

(assert (=> b!110858 (= res!54788 (containsKey!160 lt!56745 (_1!1209 (ite c!19423 (ite c!19416 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))))))

(declare-fun b!110859 () Bool)

(assert (=> b!110859 (= e!72080 (contains!829 lt!56745 (tuple2!2397 (_1!1209 (ite c!19423 (ite c!19416 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))) (_2!1209 (ite c!19423 (ite c!19416 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))))

(assert (= (and d!31295 res!54787) b!110858))

(assert (= (and b!110858 res!54788) b!110859))

(assert (=> d!31295 m!124659))

(declare-fun m!125927 () Bool)

(assert (=> d!31295 m!125927))

(declare-fun m!125929 () Bool)

(assert (=> d!31295 m!125929))

(declare-fun m!125931 () Bool)

(assert (=> b!110858 m!125931))

(declare-fun m!125933 () Bool)

(assert (=> b!110859 m!125933))

(assert (=> d!30877 d!31295))

(declare-fun c!19708 () Bool)

(declare-fun c!19705 () Bool)

(declare-fun e!72082 () List!1627)

(declare-fun b!110860 () Bool)

(assert (=> b!110860 (= e!72082 (ite c!19705 (t!5755 (toList!792 e!71450)) (ite c!19708 (Cons!1623 (h!2222 (toList!792 e!71450)) (t!5755 (toList!792 e!71450))) Nil!1624)))))

(declare-fun b!110861 () Bool)

(assert (=> b!110861 (= e!72082 (insertStrictlySorted!78 (t!5755 (toList!792 e!71450)) (_1!1209 (ite c!19423 (ite c!19416 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))) (_2!1209 (ite c!19423 (ite c!19416 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))))))

(declare-fun bm!11826 () Bool)

(declare-fun call!11831 () List!1627)

(declare-fun call!11829 () List!1627)

(assert (=> bm!11826 (= call!11831 call!11829)))

(declare-fun b!110862 () Bool)

(declare-fun e!72081 () List!1627)

(declare-fun call!11830 () List!1627)

(assert (=> b!110862 (= e!72081 call!11830)))

(declare-fun b!110863 () Bool)

(assert (=> b!110863 (= c!19708 (and ((_ is Cons!1623) (toList!792 e!71450)) (bvsgt (_1!1209 (h!2222 (toList!792 e!71450))) (_1!1209 (ite c!19423 (ite c!19416 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))))

(declare-fun e!72084 () List!1627)

(assert (=> b!110863 (= e!72084 e!72081)))

(declare-fun b!110864 () Bool)

(declare-fun res!54790 () Bool)

(declare-fun e!72083 () Bool)

(assert (=> b!110864 (=> (not res!54790) (not e!72083))))

(declare-fun lt!57194 () List!1627)

(assert (=> b!110864 (= res!54790 (containsKey!160 lt!57194 (_1!1209 (ite c!19423 (ite c!19416 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))))))

(declare-fun b!110866 () Bool)

(assert (=> b!110866 (= e!72081 call!11830)))

(declare-fun bm!11827 () Bool)

(assert (=> bm!11827 (= call!11830 call!11831)))

(declare-fun b!110867 () Bool)

(assert (=> b!110867 (= e!72084 call!11831)))

(declare-fun b!110868 () Bool)

(declare-fun e!72085 () List!1627)

(assert (=> b!110868 (= e!72085 e!72084)))

(assert (=> b!110868 (= c!19705 (and ((_ is Cons!1623) (toList!792 e!71450)) (= (_1!1209 (h!2222 (toList!792 e!71450))) (_1!1209 (ite c!19423 (ite c!19416 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))))

(declare-fun d!31297 () Bool)

(assert (=> d!31297 e!72083))

(declare-fun res!54789 () Bool)

(assert (=> d!31297 (=> (not res!54789) (not e!72083))))

(assert (=> d!31297 (= res!54789 (isStrictlySorted!306 lt!57194))))

(assert (=> d!31297 (= lt!57194 e!72085)))

(declare-fun c!19707 () Bool)

(assert (=> d!31297 (= c!19707 (and ((_ is Cons!1623) (toList!792 e!71450)) (bvslt (_1!1209 (h!2222 (toList!792 e!71450))) (_1!1209 (ite c!19423 (ite c!19416 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))))

(assert (=> d!31297 (isStrictlySorted!306 (toList!792 e!71450))))

(assert (=> d!31297 (= (insertStrictlySorted!78 (toList!792 e!71450) (_1!1209 (ite c!19423 (ite c!19416 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))) (_2!1209 (ite c!19423 (ite c!19416 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))) lt!57194)))

(declare-fun b!110865 () Bool)

(assert (=> b!110865 (= e!72085 call!11829)))

(declare-fun b!110869 () Bool)

(assert (=> b!110869 (= e!72083 (contains!829 lt!57194 (tuple2!2397 (_1!1209 (ite c!19423 (ite c!19416 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))) (_2!1209 (ite c!19423 (ite c!19416 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))))

(declare-fun bm!11828 () Bool)

(assert (=> bm!11828 (= call!11829 ($colon$colon!82 e!72082 (ite c!19707 (h!2222 (toList!792 e!71450)) (tuple2!2397 (_1!1209 (ite c!19423 (ite c!19416 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))) (_2!1209 (ite c!19423 (ite c!19416 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))))))))

(declare-fun c!19706 () Bool)

(assert (=> bm!11828 (= c!19706 c!19707)))

(assert (= (and d!31297 c!19707) b!110865))

(assert (= (and d!31297 (not c!19707)) b!110868))

(assert (= (and b!110868 c!19705) b!110867))

(assert (= (and b!110868 (not c!19705)) b!110863))

(assert (= (and b!110863 c!19708) b!110862))

(assert (= (and b!110863 (not c!19708)) b!110866))

(assert (= (or b!110862 b!110866) bm!11827))

(assert (= (or b!110867 bm!11827) bm!11826))

(assert (= (or b!110865 bm!11826) bm!11828))

(assert (= (and bm!11828 c!19706) b!110861))

(assert (= (and bm!11828 (not c!19706)) b!110860))

(assert (= (and d!31297 res!54789) b!110864))

(assert (= (and b!110864 res!54790) b!110869))

(declare-fun m!125935 () Bool)

(assert (=> d!31297 m!125935))

(declare-fun m!125937 () Bool)

(assert (=> d!31297 m!125937))

(declare-fun m!125939 () Bool)

(assert (=> b!110864 m!125939))

(declare-fun m!125941 () Bool)

(assert (=> bm!11828 m!125941))

(declare-fun m!125943 () Bool)

(assert (=> b!110861 m!125943))

(declare-fun m!125945 () Bool)

(assert (=> b!110869 m!125945))

(assert (=> d!30877 d!31297))

(declare-fun b!110872 () Bool)

(declare-fun e!72087 () Option!162)

(assert (=> b!110872 (= e!72087 (getValueByKey!156 (t!5755 (toList!792 lt!56938)) (_1!1209 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun d!31299 () Bool)

(declare-fun c!19709 () Bool)

(assert (=> d!31299 (= c!19709 (and ((_ is Cons!1623) (toList!792 lt!56938)) (= (_1!1209 (h!2222 (toList!792 lt!56938))) (_1!1209 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(declare-fun e!72086 () Option!162)

(assert (=> d!31299 (= (getValueByKey!156 (toList!792 lt!56938) (_1!1209 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))) e!72086)))

(declare-fun b!110870 () Bool)

(assert (=> b!110870 (= e!72086 (Some!161 (_2!1209 (h!2222 (toList!792 lt!56938)))))))

(declare-fun b!110871 () Bool)

(assert (=> b!110871 (= e!72086 e!72087)))

(declare-fun c!19710 () Bool)

(assert (=> b!110871 (= c!19710 (and ((_ is Cons!1623) (toList!792 lt!56938)) (not (= (_1!1209 (h!2222 (toList!792 lt!56938))) (_1!1209 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))))

(declare-fun b!110873 () Bool)

(assert (=> b!110873 (= e!72087 None!160)))

(assert (= (and d!31299 c!19709) b!110870))

(assert (= (and d!31299 (not c!19709)) b!110871))

(assert (= (and b!110871 c!19710) b!110872))

(assert (= (and b!110871 (not c!19710)) b!110873))

(declare-fun m!125947 () Bool)

(assert (=> b!110872 m!125947))

(assert (=> b!110402 d!31299))

(declare-fun d!31301 () Bool)

(declare-fun e!72089 () Bool)

(assert (=> d!31301 e!72089))

(declare-fun res!54791 () Bool)

(assert (=> d!31301 (=> res!54791 e!72089)))

(declare-fun lt!57195 () Bool)

(assert (=> d!31301 (= res!54791 (not lt!57195))))

(declare-fun lt!57196 () Bool)

(assert (=> d!31301 (= lt!57195 lt!57196)))

(declare-fun lt!57197 () Unit!3390)

(declare-fun e!72088 () Unit!3390)

(assert (=> d!31301 (= lt!57197 e!72088)))

(declare-fun c!19711 () Bool)

(assert (=> d!31301 (= c!19711 lt!57196)))

(assert (=> d!31301 (= lt!57196 (containsKey!160 (toList!792 lt!56617) (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(assert (=> d!31301 (= (contains!827 lt!56617 (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))) lt!57195)))

(declare-fun b!110874 () Bool)

(declare-fun lt!57198 () Unit!3390)

(assert (=> b!110874 (= e!72088 lt!57198)))

(assert (=> b!110874 (= lt!57198 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 lt!56617) (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(assert (=> b!110874 (isDefined!110 (getValueByKey!156 (toList!792 lt!56617) (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun b!110875 () Bool)

(declare-fun Unit!3443 () Unit!3390)

(assert (=> b!110875 (= e!72088 Unit!3443)))

(declare-fun b!110876 () Bool)

(assert (=> b!110876 (= e!72089 (isDefined!110 (getValueByKey!156 (toList!792 lt!56617) (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(assert (= (and d!31301 c!19711) b!110874))

(assert (= (and d!31301 (not c!19711)) b!110875))

(assert (= (and d!31301 (not res!54791)) b!110876))

(declare-fun m!125949 () Bool)

(assert (=> d!31301 m!125949))

(declare-fun m!125951 () Bool)

(assert (=> b!110874 m!125951))

(assert (=> b!110874 m!124317))

(assert (=> b!110874 m!124317))

(declare-fun m!125953 () Bool)

(assert (=> b!110874 m!125953))

(assert (=> b!110876 m!124317))

(assert (=> b!110876 m!124317))

(assert (=> b!110876 m!125953))

(assert (=> d!30801 d!31301))

(declare-fun b!110879 () Bool)

(declare-fun e!72091 () Option!162)

(assert (=> b!110879 (= e!72091 (getValueByKey!156 (t!5755 lt!56616) (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun d!31303 () Bool)

(declare-fun c!19712 () Bool)

(assert (=> d!31303 (= c!19712 (and ((_ is Cons!1623) lt!56616) (= (_1!1209 (h!2222 lt!56616)) (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(declare-fun e!72090 () Option!162)

(assert (=> d!31303 (= (getValueByKey!156 lt!56616 (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))) e!72090)))

(declare-fun b!110877 () Bool)

(assert (=> b!110877 (= e!72090 (Some!161 (_2!1209 (h!2222 lt!56616))))))

(declare-fun b!110878 () Bool)

(assert (=> b!110878 (= e!72090 e!72091)))

(declare-fun c!19713 () Bool)

(assert (=> b!110878 (= c!19713 (and ((_ is Cons!1623) lt!56616) (not (= (_1!1209 (h!2222 lt!56616)) (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))))

(declare-fun b!110880 () Bool)

(assert (=> b!110880 (= e!72091 None!160)))

(assert (= (and d!31303 c!19712) b!110877))

(assert (= (and d!31303 (not c!19712)) b!110878))

(assert (= (and b!110878 c!19713) b!110879))

(assert (= (and b!110878 (not c!19713)) b!110880))

(declare-fun m!125955 () Bool)

(assert (=> b!110879 m!125955))

(assert (=> d!30801 d!31303))

(declare-fun d!31305 () Bool)

(assert (=> d!31305 (= (getValueByKey!156 lt!56616 (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))) (Some!161 (_2!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun lt!57199 () Unit!3390)

(assert (=> d!31305 (= lt!57199 (choose!691 lt!56616 (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))) (_2!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun e!72092 () Bool)

(assert (=> d!31305 e!72092))

(declare-fun res!54792 () Bool)

(assert (=> d!31305 (=> (not res!54792) (not e!72092))))

(assert (=> d!31305 (= res!54792 (isStrictlySorted!306 lt!56616))))

(assert (=> d!31305 (= (lemmaContainsTupThenGetReturnValue!75 lt!56616 (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))) (_2!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))) lt!57199)))

(declare-fun b!110881 () Bool)

(declare-fun res!54793 () Bool)

(assert (=> b!110881 (=> (not res!54793) (not e!72092))))

(assert (=> b!110881 (= res!54793 (containsKey!160 lt!56616 (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun b!110882 () Bool)

(assert (=> b!110882 (= e!72092 (contains!829 lt!56616 (tuple2!2397 (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))) (_2!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(assert (= (and d!31305 res!54792) b!110881))

(assert (= (and b!110881 res!54793) b!110882))

(assert (=> d!31305 m!124311))

(declare-fun m!125957 () Bool)

(assert (=> d!31305 m!125957))

(declare-fun m!125959 () Bool)

(assert (=> d!31305 m!125959))

(declare-fun m!125961 () Bool)

(assert (=> b!110881 m!125961))

(declare-fun m!125963 () Bool)

(assert (=> b!110882 m!125963))

(assert (=> d!30801 d!31305))

(declare-fun b!110883 () Bool)

(declare-fun c!19714 () Bool)

(declare-fun e!72094 () List!1627)

(declare-fun c!19717 () Bool)

(assert (=> b!110883 (= e!72094 (ite c!19714 (t!5755 (toList!792 lt!56303)) (ite c!19717 (Cons!1623 (h!2222 (toList!792 lt!56303)) (t!5755 (toList!792 lt!56303))) Nil!1624)))))

(declare-fun b!110884 () Bool)

(assert (=> b!110884 (= e!72094 (insertStrictlySorted!78 (t!5755 (toList!792 lt!56303)) (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))) (_2!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun bm!11829 () Bool)

(declare-fun call!11834 () List!1627)

(declare-fun call!11832 () List!1627)

(assert (=> bm!11829 (= call!11834 call!11832)))

(declare-fun b!110885 () Bool)

(declare-fun e!72093 () List!1627)

(declare-fun call!11833 () List!1627)

(assert (=> b!110885 (= e!72093 call!11833)))

(declare-fun b!110886 () Bool)

(assert (=> b!110886 (= c!19717 (and ((_ is Cons!1623) (toList!792 lt!56303)) (bvsgt (_1!1209 (h!2222 (toList!792 lt!56303))) (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(declare-fun e!72096 () List!1627)

(assert (=> b!110886 (= e!72096 e!72093)))

(declare-fun b!110887 () Bool)

(declare-fun res!54795 () Bool)

(declare-fun e!72095 () Bool)

(assert (=> b!110887 (=> (not res!54795) (not e!72095))))

(declare-fun lt!57200 () List!1627)

(assert (=> b!110887 (= res!54795 (containsKey!160 lt!57200 (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun b!110889 () Bool)

(assert (=> b!110889 (= e!72093 call!11833)))

(declare-fun bm!11830 () Bool)

(assert (=> bm!11830 (= call!11833 call!11834)))

(declare-fun b!110890 () Bool)

(assert (=> b!110890 (= e!72096 call!11834)))

(declare-fun b!110891 () Bool)

(declare-fun e!72097 () List!1627)

(assert (=> b!110891 (= e!72097 e!72096)))

(assert (=> b!110891 (= c!19714 (and ((_ is Cons!1623) (toList!792 lt!56303)) (= (_1!1209 (h!2222 (toList!792 lt!56303))) (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(declare-fun d!31307 () Bool)

(assert (=> d!31307 e!72095))

(declare-fun res!54794 () Bool)

(assert (=> d!31307 (=> (not res!54794) (not e!72095))))

(assert (=> d!31307 (= res!54794 (isStrictlySorted!306 lt!57200))))

(assert (=> d!31307 (= lt!57200 e!72097)))

(declare-fun c!19716 () Bool)

(assert (=> d!31307 (= c!19716 (and ((_ is Cons!1623) (toList!792 lt!56303)) (bvslt (_1!1209 (h!2222 (toList!792 lt!56303))) (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(assert (=> d!31307 (isStrictlySorted!306 (toList!792 lt!56303))))

(assert (=> d!31307 (= (insertStrictlySorted!78 (toList!792 lt!56303) (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))) (_2!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))) lt!57200)))

(declare-fun b!110888 () Bool)

(assert (=> b!110888 (= e!72097 call!11832)))

(declare-fun b!110892 () Bool)

(assert (=> b!110892 (= e!72095 (contains!829 lt!57200 (tuple2!2397 (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))) (_2!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(declare-fun bm!11831 () Bool)

(assert (=> bm!11831 (= call!11832 ($colon$colon!82 e!72094 (ite c!19716 (h!2222 (toList!792 lt!56303)) (tuple2!2397 (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))) (_2!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))))

(declare-fun c!19715 () Bool)

(assert (=> bm!11831 (= c!19715 c!19716)))

(assert (= (and d!31307 c!19716) b!110888))

(assert (= (and d!31307 (not c!19716)) b!110891))

(assert (= (and b!110891 c!19714) b!110890))

(assert (= (and b!110891 (not c!19714)) b!110886))

(assert (= (and b!110886 c!19717) b!110885))

(assert (= (and b!110886 (not c!19717)) b!110889))

(assert (= (or b!110885 b!110889) bm!11830))

(assert (= (or b!110890 bm!11830) bm!11829))

(assert (= (or b!110888 bm!11829) bm!11831))

(assert (= (and bm!11831 c!19715) b!110884))

(assert (= (and bm!11831 (not c!19715)) b!110883))

(assert (= (and d!31307 res!54794) b!110887))

(assert (= (and b!110887 res!54795) b!110892))

(declare-fun m!125965 () Bool)

(assert (=> d!31307 m!125965))

(assert (=> d!31307 m!124623))

(declare-fun m!125967 () Bool)

(assert (=> b!110887 m!125967))

(declare-fun m!125969 () Bool)

(assert (=> bm!11831 m!125969))

(declare-fun m!125971 () Bool)

(assert (=> b!110884 m!125971))

(declare-fun m!125973 () Bool)

(assert (=> b!110892 m!125973))

(assert (=> d!30801 d!31307))

(declare-fun d!31309 () Bool)

(assert (=> d!31309 (= (inRange!0 (ite c!19558 (index!3207 lt!56892) (ite c!19557 (index!3206 lt!56867) (index!3209 lt!56867))) (mask!6793 newMap!16)) (and (bvsge (ite c!19558 (index!3207 lt!56892) (ite c!19557 (index!3206 lt!56867) (index!3209 lt!56867))) #b00000000000000000000000000000000) (bvslt (ite c!19558 (index!3207 lt!56892) (ite c!19557 (index!3206 lt!56867) (index!3209 lt!56867))) (bvadd (mask!6793 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!11775 d!31309))

(assert (=> d!30895 d!30791))

(declare-fun d!31311 () Bool)

(declare-fun e!72100 () Bool)

(assert (=> d!31311 e!72100))

(declare-fun res!54801 () Bool)

(assert (=> d!31311 (=> (not res!54801) (not e!72100))))

(declare-fun lt!57203 () SeekEntryResult!264)

(assert (=> d!31311 (= res!54801 ((_ is Found!264) lt!57203))))

(assert (=> d!31311 (= lt!57203 (seekEntryOrOpen!0 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (_keys!4339 newMap!16) (mask!6793 newMap!16)))))

(assert (=> d!31311 true))

(declare-fun _$33!96 () Unit!3390)

(assert (=> d!31311 (= (choose!697 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (defaultEntry!2626 newMap!16)) _$33!96)))

(declare-fun b!110897 () Bool)

(declare-fun res!54800 () Bool)

(assert (=> b!110897 (=> (not res!54800) (not e!72100))))

(assert (=> b!110897 (= res!54800 (inRange!0 (index!3207 lt!57203) (mask!6793 newMap!16)))))

(declare-fun b!110898 () Bool)

(assert (=> b!110898 (= e!72100 (= (select (arr!2068 (_keys!4339 newMap!16)) (index!3207 lt!57203)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))

(assert (= (and d!31311 res!54801) b!110897))

(assert (= (and b!110897 res!54800) b!110898))

(assert (=> d!31311 m!123865))

(assert (=> d!31311 m!124149))

(declare-fun m!125975 () Bool)

(assert (=> b!110897 m!125975))

(declare-fun m!125977 () Bool)

(assert (=> b!110898 m!125977))

(assert (=> d!30895 d!31311))

(assert (=> d!30895 d!31081))

(declare-fun d!31313 () Bool)

(declare-fun e!72101 () Bool)

(assert (=> d!31313 e!72101))

(declare-fun res!54802 () Bool)

(assert (=> d!31313 (=> (not res!54802) (not e!72101))))

(declare-fun lt!57205 () ListLongMap!1553)

(assert (=> d!31313 (= res!54802 (contains!827 lt!57205 (_1!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306))))))

(declare-fun lt!57204 () List!1627)

(assert (=> d!31313 (= lt!57205 (ListLongMap!1554 lt!57204))))

(declare-fun lt!57206 () Unit!3390)

(declare-fun lt!57207 () Unit!3390)

(assert (=> d!31313 (= lt!57206 lt!57207)))

(assert (=> d!31313 (= (getValueByKey!156 lt!57204 (_1!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306))) (Some!161 (_2!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306))))))

(assert (=> d!31313 (= lt!57207 (lemmaContainsTupThenGetReturnValue!75 lt!57204 (_1!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306)) (_2!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306))))))

(assert (=> d!31313 (= lt!57204 (insertStrictlySorted!78 (toList!792 (getCurrentListMap!469 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16))) (_1!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306)) (_2!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306))))))

(assert (=> d!31313 (= (+!139 (getCurrentListMap!469 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306)) lt!57205)))

(declare-fun b!110899 () Bool)

(declare-fun res!54803 () Bool)

(assert (=> b!110899 (=> (not res!54803) (not e!72101))))

(assert (=> b!110899 (= res!54803 (= (getValueByKey!156 (toList!792 lt!57205) (_1!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306))) (Some!161 (_2!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306)))))))

(declare-fun b!110900 () Bool)

(assert (=> b!110900 (= e!72101 (contains!829 (toList!792 lt!57205) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306)))))

(assert (= (and d!31313 res!54802) b!110899))

(assert (= (and b!110899 res!54803) b!110900))

(declare-fun m!125979 () Bool)

(assert (=> d!31313 m!125979))

(declare-fun m!125981 () Bool)

(assert (=> d!31313 m!125981))

(declare-fun m!125983 () Bool)

(assert (=> d!31313 m!125983))

(declare-fun m!125985 () Bool)

(assert (=> d!31313 m!125985))

(declare-fun m!125987 () Bool)

(assert (=> b!110899 m!125987))

(declare-fun m!125989 () Bool)

(assert (=> b!110900 m!125989))

(assert (=> d!30869 d!31313))

(declare-fun b!110901 () Bool)

(declare-fun e!72102 () Bool)

(assert (=> b!110901 (= e!72102 (validKeyInArray!0 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!110902 () Bool)

(declare-fun e!72111 () Bool)

(declare-fun e!72103 () Bool)

(assert (=> b!110902 (= e!72111 e!72103)))

(declare-fun res!54809 () Bool)

(declare-fun call!11839 () Bool)

(assert (=> b!110902 (= res!54809 call!11839)))

(assert (=> b!110902 (=> (not res!54809) (not e!72103))))

(declare-fun b!110903 () Bool)

(declare-fun lt!57224 () ListLongMap!1553)

(assert (=> b!110903 (= e!72103 (= (apply!100 lt!57224 #b1000000000000000000000000000000000000000000000000000000000000000) lt!56306))))

(declare-fun b!110904 () Bool)

(assert (=> b!110904 (= e!72111 (not call!11839))))

(declare-fun d!31315 () Bool)

(declare-fun e!72113 () Bool)

(assert (=> d!31315 e!72113))

(declare-fun res!54806 () Bool)

(assert (=> d!31315 (=> (not res!54806) (not e!72113))))

(assert (=> d!31315 (= res!54806 (or (bvsge #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))))))))

(declare-fun lt!57226 () ListLongMap!1553)

(assert (=> d!31315 (= lt!57224 lt!57226)))

(declare-fun lt!57210 () Unit!3390)

(declare-fun e!72108 () Unit!3390)

(assert (=> d!31315 (= lt!57210 e!72108)))

(declare-fun c!19719 () Bool)

(declare-fun e!72109 () Bool)

(assert (=> d!31315 (= c!19719 e!72109)))

(declare-fun res!54808 () Bool)

(assert (=> d!31315 (=> (not res!54808) (not e!72109))))

(assert (=> d!31315 (= res!54808 (bvslt #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))))))

(declare-fun e!72114 () ListLongMap!1553)

(assert (=> d!31315 (= lt!57226 e!72114)))

(declare-fun c!19718 () Bool)

(assert (=> d!31315 (= c!19718 (and (not (= (bvand lt!56506 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!56506 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!31315 (validMask!0 (mask!6793 newMap!16))))

(assert (=> d!31315 (= (getCurrentListMap!469 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) lt!56506 (zeroValue!2497 newMap!16) lt!56306 #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) lt!57224)))

(declare-fun b!110905 () Bool)

(assert (=> b!110905 (= e!72113 e!72111)))

(declare-fun c!19723 () Bool)

(assert (=> b!110905 (= c!19723 (not (= (bvand lt!56506 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!110906 () Bool)

(declare-fun e!72110 () ListLongMap!1553)

(assert (=> b!110906 (= e!72114 e!72110)))

(declare-fun c!19721 () Bool)

(assert (=> b!110906 (= c!19721 (and (not (= (bvand lt!56506 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!56506 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11832 () Bool)

(declare-fun call!11837 () ListLongMap!1553)

(declare-fun call!11836 () ListLongMap!1553)

(assert (=> bm!11832 (= call!11837 call!11836)))

(declare-fun bm!11833 () Bool)

(declare-fun call!11835 () ListLongMap!1553)

(assert (=> bm!11833 (= call!11836 call!11835)))

(declare-fun b!110907 () Bool)

(declare-fun res!54812 () Bool)

(assert (=> b!110907 (=> (not res!54812) (not e!72113))))

(declare-fun e!72107 () Bool)

(assert (=> b!110907 (= res!54812 e!72107)))

(declare-fun res!54811 () Bool)

(assert (=> b!110907 (=> res!54811 e!72107)))

(assert (=> b!110907 (= res!54811 (not e!72102))))

(declare-fun res!54807 () Bool)

(assert (=> b!110907 (=> (not res!54807) (not e!72102))))

(assert (=> b!110907 (= res!54807 (bvslt #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))))))

(declare-fun b!110908 () Bool)

(declare-fun e!72105 () Bool)

(declare-fun e!72104 () Bool)

(assert (=> b!110908 (= e!72105 e!72104)))

(declare-fun res!54804 () Bool)

(declare-fun call!11841 () Bool)

(assert (=> b!110908 (= res!54804 call!11841)))

(assert (=> b!110908 (=> (not res!54804) (not e!72104))))

(declare-fun bm!11834 () Bool)

(declare-fun call!11838 () ListLongMap!1553)

(declare-fun call!11840 () ListLongMap!1553)

(assert (=> bm!11834 (= call!11838 call!11840)))

(declare-fun b!110909 () Bool)

(assert (=> b!110909 (= e!72105 (not call!11841))))

(declare-fun b!110910 () Bool)

(declare-fun e!72106 () Bool)

(assert (=> b!110910 (= e!72107 e!72106)))

(declare-fun res!54805 () Bool)

(assert (=> b!110910 (=> (not res!54805) (not e!72106))))

(assert (=> b!110910 (= res!54805 (contains!827 lt!57224 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!110910 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))))))

(declare-fun b!110911 () Bool)

(assert (=> b!110911 (= e!72106 (= (apply!100 lt!57224 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)) (get!1347 (select (arr!2069 (_values!2609 newMap!16)) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2626 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!110911 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2327 (_values!2609 newMap!16))))))

(assert (=> b!110911 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))))))

(declare-fun bm!11835 () Bool)

(assert (=> bm!11835 (= call!11839 (contains!827 lt!57224 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!11836 () Bool)

(assert (=> bm!11836 (= call!11841 (contains!827 lt!57224 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110912 () Bool)

(assert (=> b!110912 (= e!72109 (validKeyInArray!0 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!110913 () Bool)

(declare-fun res!54810 () Bool)

(assert (=> b!110913 (=> (not res!54810) (not e!72113))))

(assert (=> b!110913 (= res!54810 e!72105)))

(declare-fun c!19722 () Bool)

(assert (=> b!110913 (= c!19722 (not (= (bvand lt!56506 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!11837 () Bool)

(assert (=> bm!11837 (= call!11835 (getCurrentListMapNoExtraKeys!104 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) lt!56506 (zeroValue!2497 newMap!16) lt!56306 #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun b!110914 () Bool)

(declare-fun e!72112 () ListLongMap!1553)

(assert (=> b!110914 (= e!72112 call!11837)))

(declare-fun b!110915 () Bool)

(assert (=> b!110915 (= e!72114 (+!139 call!11840 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306)))))

(declare-fun b!110916 () Bool)

(assert (=> b!110916 (= e!72110 call!11838)))

(declare-fun b!110917 () Bool)

(declare-fun Unit!3444 () Unit!3390)

(assert (=> b!110917 (= e!72108 Unit!3444)))

(declare-fun b!110918 () Bool)

(declare-fun lt!57217 () Unit!3390)

(assert (=> b!110918 (= e!72108 lt!57217)))

(declare-fun lt!57212 () ListLongMap!1553)

(assert (=> b!110918 (= lt!57212 (getCurrentListMapNoExtraKeys!104 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) lt!56506 (zeroValue!2497 newMap!16) lt!56306 #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!57225 () (_ BitVec 64))

(assert (=> b!110918 (= lt!57225 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57209 () (_ BitVec 64))

(assert (=> b!110918 (= lt!57209 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!57229 () Unit!3390)

(assert (=> b!110918 (= lt!57229 (addStillContains!76 lt!57212 lt!57225 (zeroValue!2497 newMap!16) lt!57209))))

(assert (=> b!110918 (contains!827 (+!139 lt!57212 (tuple2!2397 lt!57225 (zeroValue!2497 newMap!16))) lt!57209)))

(declare-fun lt!57223 () Unit!3390)

(assert (=> b!110918 (= lt!57223 lt!57229)))

(declare-fun lt!57211 () ListLongMap!1553)

(assert (=> b!110918 (= lt!57211 (getCurrentListMapNoExtraKeys!104 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) lt!56506 (zeroValue!2497 newMap!16) lt!56306 #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!57222 () (_ BitVec 64))

(assert (=> b!110918 (= lt!57222 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57215 () (_ BitVec 64))

(assert (=> b!110918 (= lt!57215 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!57221 () Unit!3390)

(assert (=> b!110918 (= lt!57221 (addApplyDifferent!76 lt!57211 lt!57222 lt!56306 lt!57215))))

(assert (=> b!110918 (= (apply!100 (+!139 lt!57211 (tuple2!2397 lt!57222 lt!56306)) lt!57215) (apply!100 lt!57211 lt!57215))))

(declare-fun lt!57208 () Unit!3390)

(assert (=> b!110918 (= lt!57208 lt!57221)))

(declare-fun lt!57227 () ListLongMap!1553)

(assert (=> b!110918 (= lt!57227 (getCurrentListMapNoExtraKeys!104 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) lt!56506 (zeroValue!2497 newMap!16) lt!56306 #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!57218 () (_ BitVec 64))

(assert (=> b!110918 (= lt!57218 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57213 () (_ BitVec 64))

(assert (=> b!110918 (= lt!57213 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!57219 () Unit!3390)

(assert (=> b!110918 (= lt!57219 (addApplyDifferent!76 lt!57227 lt!57218 (zeroValue!2497 newMap!16) lt!57213))))

(assert (=> b!110918 (= (apply!100 (+!139 lt!57227 (tuple2!2397 lt!57218 (zeroValue!2497 newMap!16))) lt!57213) (apply!100 lt!57227 lt!57213))))

(declare-fun lt!57228 () Unit!3390)

(assert (=> b!110918 (= lt!57228 lt!57219)))

(declare-fun lt!57216 () ListLongMap!1553)

(assert (=> b!110918 (= lt!57216 (getCurrentListMapNoExtraKeys!104 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) lt!56506 (zeroValue!2497 newMap!16) lt!56306 #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!57214 () (_ BitVec 64))

(assert (=> b!110918 (= lt!57214 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57220 () (_ BitVec 64))

(assert (=> b!110918 (= lt!57220 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!110918 (= lt!57217 (addApplyDifferent!76 lt!57216 lt!57214 lt!56306 lt!57220))))

(assert (=> b!110918 (= (apply!100 (+!139 lt!57216 (tuple2!2397 lt!57214 lt!56306)) lt!57220) (apply!100 lt!57216 lt!57220))))

(declare-fun b!110919 () Bool)

(declare-fun c!19720 () Bool)

(assert (=> b!110919 (= c!19720 (and (not (= (bvand lt!56506 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!56506 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!110919 (= e!72110 e!72112)))

(declare-fun b!110920 () Bool)

(assert (=> b!110920 (= e!72104 (= (apply!100 lt!57224 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2497 newMap!16)))))

(declare-fun b!110921 () Bool)

(assert (=> b!110921 (= e!72112 call!11838)))

(declare-fun bm!11838 () Bool)

(assert (=> bm!11838 (= call!11840 (+!139 (ite c!19718 call!11835 (ite c!19721 call!11836 call!11837)) (ite (or c!19718 c!19721) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 newMap!16)) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306))))))

(assert (= (and d!31315 c!19718) b!110915))

(assert (= (and d!31315 (not c!19718)) b!110906))

(assert (= (and b!110906 c!19721) b!110916))

(assert (= (and b!110906 (not c!19721)) b!110919))

(assert (= (and b!110919 c!19720) b!110921))

(assert (= (and b!110919 (not c!19720)) b!110914))

(assert (= (or b!110921 b!110914) bm!11832))

(assert (= (or b!110916 bm!11832) bm!11833))

(assert (= (or b!110916 b!110921) bm!11834))

(assert (= (or b!110915 bm!11833) bm!11837))

(assert (= (or b!110915 bm!11834) bm!11838))

(assert (= (and d!31315 res!54808) b!110912))

(assert (= (and d!31315 c!19719) b!110918))

(assert (= (and d!31315 (not c!19719)) b!110917))

(assert (= (and d!31315 res!54806) b!110907))

(assert (= (and b!110907 res!54807) b!110901))

(assert (= (and b!110907 (not res!54811)) b!110910))

(assert (= (and b!110910 res!54805) b!110911))

(assert (= (and b!110907 res!54812) b!110913))

(assert (= (and b!110913 c!19722) b!110908))

(assert (= (and b!110913 (not c!19722)) b!110909))

(assert (= (and b!110908 res!54804) b!110920))

(assert (= (or b!110908 b!110909) bm!11836))

(assert (= (and b!110913 res!54810) b!110905))

(assert (= (and b!110905 c!19723) b!110902))

(assert (= (and b!110905 (not c!19723)) b!110904))

(assert (= (and b!110902 res!54809) b!110903))

(assert (= (or b!110902 b!110904) bm!11835))

(declare-fun b_lambda!4957 () Bool)

(assert (=> (not b_lambda!4957) (not b!110911)))

(assert (=> b!110911 t!5766))

(declare-fun b_and!6821 () Bool)

(assert (= b_and!6817 (and (=> t!5766 result!3533) b_and!6821)))

(assert (=> b!110911 t!5768))

(declare-fun b_and!6823 () Bool)

(assert (= b_and!6819 (and (=> t!5768 result!3535) b_and!6823)))

(assert (=> b!110911 m!124445))

(assert (=> b!110911 m!124447))

(declare-fun m!125991 () Bool)

(assert (=> b!110911 m!125991))

(assert (=> b!110911 m!124451))

(assert (=> b!110911 m!124447))

(assert (=> b!110911 m!124445))

(assert (=> b!110911 m!124451))

(assert (=> b!110911 m!124453))

(assert (=> b!110910 m!124447))

(assert (=> b!110910 m!124447))

(declare-fun m!125993 () Bool)

(assert (=> b!110910 m!125993))

(assert (=> d!31315 m!124269))

(declare-fun m!125995 () Bool)

(assert (=> bm!11838 m!125995))

(declare-fun m!125997 () Bool)

(assert (=> b!110903 m!125997))

(declare-fun m!125999 () Bool)

(assert (=> bm!11837 m!125999))

(assert (=> b!110912 m!124447))

(assert (=> b!110912 m!124447))

(assert (=> b!110912 m!124463))

(assert (=> b!110901 m!124447))

(assert (=> b!110901 m!124447))

(assert (=> b!110901 m!124463))

(declare-fun m!126001 () Bool)

(assert (=> b!110920 m!126001))

(declare-fun m!126003 () Bool)

(assert (=> b!110918 m!126003))

(declare-fun m!126005 () Bool)

(assert (=> b!110918 m!126005))

(declare-fun m!126007 () Bool)

(assert (=> b!110918 m!126007))

(declare-fun m!126009 () Bool)

(assert (=> b!110918 m!126009))

(declare-fun m!126011 () Bool)

(assert (=> b!110918 m!126011))

(declare-fun m!126013 () Bool)

(assert (=> b!110918 m!126013))

(assert (=> b!110918 m!126003))

(declare-fun m!126015 () Bool)

(assert (=> b!110918 m!126015))

(declare-fun m!126017 () Bool)

(assert (=> b!110918 m!126017))

(assert (=> b!110918 m!125999))

(declare-fun m!126019 () Bool)

(assert (=> b!110918 m!126019))

(declare-fun m!126021 () Bool)

(assert (=> b!110918 m!126021))

(declare-fun m!126023 () Bool)

(assert (=> b!110918 m!126023))

(declare-fun m!126025 () Bool)

(assert (=> b!110918 m!126025))

(declare-fun m!126027 () Bool)

(assert (=> b!110918 m!126027))

(declare-fun m!126029 () Bool)

(assert (=> b!110918 m!126029))

(assert (=> b!110918 m!126019))

(assert (=> b!110918 m!124447))

(assert (=> b!110918 m!126007))

(declare-fun m!126031 () Bool)

(assert (=> b!110918 m!126031))

(assert (=> b!110918 m!126011))

(declare-fun m!126033 () Bool)

(assert (=> bm!11836 m!126033))

(declare-fun m!126035 () Bool)

(assert (=> b!110915 m!126035))

(declare-fun m!126037 () Bool)

(assert (=> bm!11835 m!126037))

(assert (=> d!30869 d!31315))

(assert (=> d!30869 d!31081))

(assert (=> d!30869 d!30839))

(declare-fun d!31317 () Bool)

(assert (=> d!31317 (= (+!139 (getCurrentListMap!469 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 lt!56306)) (getCurrentListMap!469 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) lt!56506 (zeroValue!2497 newMap!16) lt!56306 #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(assert (=> d!31317 true))

(declare-fun _$8!100 () Unit!3390)

(assert (=> d!31317 (= (choose!696 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) lt!56506 (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) lt!56306 (defaultEntry!2626 newMap!16)) _$8!100)))

(declare-fun bs!4561 () Bool)

(assert (= bs!4561 d!31317))

(assert (=> bs!4561 m!124133))

(assert (=> bs!4561 m!124133))

(assert (=> bs!4561 m!124643))

(assert (=> bs!4561 m!124645))

(assert (=> d!30869 d!31317))

(declare-fun d!31319 () Bool)

(assert (=> d!31319 (= (isDefined!110 (getValueByKey!156 (toList!792 (+!139 lt!56577 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))) lt!56574)) (not (isEmpty!382 (getValueByKey!156 (toList!792 (+!139 lt!56577 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))) lt!56574))))))

(declare-fun bs!4562 () Bool)

(assert (= bs!4562 d!31319))

(assert (=> bs!4562 m!124985))

(declare-fun m!126039 () Bool)

(assert (=> bs!4562 m!126039))

(assert (=> b!110395 d!31319))

(declare-fun b!110924 () Bool)

(declare-fun e!72116 () Option!162)

(assert (=> b!110924 (= e!72116 (getValueByKey!156 (t!5755 (toList!792 (+!139 lt!56577 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))) lt!56574))))

(declare-fun d!31321 () Bool)

(declare-fun c!19724 () Bool)

(assert (=> d!31321 (= c!19724 (and ((_ is Cons!1623) (toList!792 (+!139 lt!56577 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))) (= (_1!1209 (h!2222 (toList!792 (+!139 lt!56577 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))) lt!56574)))))

(declare-fun e!72115 () Option!162)

(assert (=> d!31321 (= (getValueByKey!156 (toList!792 (+!139 lt!56577 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))) lt!56574) e!72115)))

(declare-fun b!110922 () Bool)

(assert (=> b!110922 (= e!72115 (Some!161 (_2!1209 (h!2222 (toList!792 (+!139 lt!56577 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))))))))

(declare-fun b!110923 () Bool)

(assert (=> b!110923 (= e!72115 e!72116)))

(declare-fun c!19725 () Bool)

(assert (=> b!110923 (= c!19725 (and ((_ is Cons!1623) (toList!792 (+!139 lt!56577 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))) (not (= (_1!1209 (h!2222 (toList!792 (+!139 lt!56577 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))) lt!56574))))))

(declare-fun b!110925 () Bool)

(assert (=> b!110925 (= e!72116 None!160)))

(assert (= (and d!31321 c!19724) b!110922))

(assert (= (and d!31321 (not c!19724)) b!110923))

(assert (= (and b!110923 c!19725) b!110924))

(assert (= (and b!110923 (not c!19725)) b!110925))

(declare-fun m!126041 () Bool)

(assert (=> b!110924 m!126041))

(assert (=> b!110395 d!31321))

(assert (=> b!110148 d!31287))

(declare-fun d!31323 () Bool)

(assert (=> d!31323 (= (apply!100 lt!56684 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1350 (getValueByKey!156 (toList!792 lt!56684) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4563 () Bool)

(assert (= bs!4563 d!31323))

(declare-fun m!126043 () Bool)

(assert (=> bs!4563 m!126043))

(assert (=> bs!4563 m!126043))

(declare-fun m!126045 () Bool)

(assert (=> bs!4563 m!126045))

(assert (=> b!110080 d!31323))

(declare-fun b!110928 () Bool)

(declare-fun e!72118 () Option!162)

(assert (=> b!110928 (= e!72118 (getValueByKey!156 (t!5755 (toList!792 lt!56617)) (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun d!31325 () Bool)

(declare-fun c!19726 () Bool)

(assert (=> d!31325 (= c!19726 (and ((_ is Cons!1623) (toList!792 lt!56617)) (= (_1!1209 (h!2222 (toList!792 lt!56617))) (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(declare-fun e!72117 () Option!162)

(assert (=> d!31325 (= (getValueByKey!156 (toList!792 lt!56617) (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))) e!72117)))

(declare-fun b!110926 () Bool)

(assert (=> b!110926 (= e!72117 (Some!161 (_2!1209 (h!2222 (toList!792 lt!56617)))))))

(declare-fun b!110927 () Bool)

(assert (=> b!110927 (= e!72117 e!72118)))

(declare-fun c!19727 () Bool)

(assert (=> b!110927 (= c!19727 (and ((_ is Cons!1623) (toList!792 lt!56617)) (not (= (_1!1209 (h!2222 (toList!792 lt!56617))) (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))))

(declare-fun b!110929 () Bool)

(assert (=> b!110929 (= e!72118 None!160)))

(assert (= (and d!31325 c!19726) b!110926))

(assert (= (and d!31325 (not c!19726)) b!110927))

(assert (= (and b!110927 c!19727) b!110928))

(assert (= (and b!110927 (not c!19727)) b!110929))

(declare-fun m!126047 () Bool)

(assert (=> b!110928 m!126047))

(assert (=> b!109964 d!31325))

(declare-fun d!31327 () Bool)

(assert (=> d!31327 (= (apply!100 lt!56706 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)) (get!1350 (getValueByKey!156 (toList!792 lt!56706) (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!4564 () Bool)

(assert (= bs!4564 d!31327))

(assert (=> bs!4564 m!124447))

(declare-fun m!126049 () Bool)

(assert (=> bs!4564 m!126049))

(assert (=> bs!4564 m!126049))

(declare-fun m!126051 () Bool)

(assert (=> bs!4564 m!126051))

(assert (=> b!110109 d!31327))

(declare-fun d!31329 () Bool)

(declare-fun c!19728 () Bool)

(assert (=> d!31329 (= c!19728 ((_ is ValueCellFull!1004) (select (arr!2069 (ite (or c!19423 c!19413) (_values!2609 newMap!16) (array!4368 (store (arr!2069 (_values!2609 newMap!16)) (index!3207 lt!56493) (ValueCellFull!1004 lt!56306)) (size!2327 (_values!2609 newMap!16))))) #b00000000000000000000000000000000)))))

(declare-fun e!72119 () V!3241)

(assert (=> d!31329 (= (get!1347 (select (arr!2069 (ite (or c!19423 c!19413) (_values!2609 newMap!16) (array!4368 (store (arr!2069 (_values!2609 newMap!16)) (index!3207 lt!56493) (ValueCellFull!1004 lt!56306)) (size!2327 (_values!2609 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2626 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!72119)))

(declare-fun b!110930 () Bool)

(assert (=> b!110930 (= e!72119 (get!1348 (select (arr!2069 (ite (or c!19423 c!19413) (_values!2609 newMap!16) (array!4368 (store (arr!2069 (_values!2609 newMap!16)) (index!3207 lt!56493) (ValueCellFull!1004 lt!56306)) (size!2327 (_values!2609 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2626 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!110931 () Bool)

(assert (=> b!110931 (= e!72119 (get!1349 (select (arr!2069 (ite (or c!19423 c!19413) (_values!2609 newMap!16) (array!4368 (store (arr!2069 (_values!2609 newMap!16)) (index!3207 lt!56493) (ValueCellFull!1004 lt!56306)) (size!2327 (_values!2609 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2626 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!31329 c!19728) b!110930))

(assert (= (and d!31329 (not c!19728)) b!110931))

(assert (=> b!110930 m!124503))

(assert (=> b!110930 m!124451))

(declare-fun m!126053 () Bool)

(assert (=> b!110930 m!126053))

(assert (=> b!110931 m!124503))

(assert (=> b!110931 m!124451))

(declare-fun m!126055 () Bool)

(assert (=> b!110931 m!126055))

(assert (=> b!110109 d!31329))

(declare-fun d!31331 () Bool)

(assert (=> d!31331 (= (isDefined!110 (getValueByKey!156 (toList!792 e!71432) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355))) (not (isEmpty!382 (getValueByKey!156 (toList!792 e!71432) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))))

(declare-fun bs!4565 () Bool)

(assert (= bs!4565 d!31331))

(assert (=> bs!4565 m!124751))

(declare-fun m!126057 () Bool)

(assert (=> bs!4565 m!126057))

(assert (=> b!110244 d!31331))

(declare-fun e!72121 () Option!162)

(declare-fun b!110934 () Bool)

(assert (=> b!110934 (= e!72121 (getValueByKey!156 (t!5755 (toList!792 e!71432)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))

(declare-fun d!31333 () Bool)

(declare-fun c!19729 () Bool)

(assert (=> d!31333 (= c!19729 (and ((_ is Cons!1623) (toList!792 e!71432)) (= (_1!1209 (h!2222 (toList!792 e!71432))) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355))))))

(declare-fun e!72120 () Option!162)

(assert (=> d!31333 (= (getValueByKey!156 (toList!792 e!71432) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) e!72120)))

(declare-fun b!110932 () Bool)

(assert (=> b!110932 (= e!72120 (Some!161 (_2!1209 (h!2222 (toList!792 e!71432)))))))

(declare-fun b!110933 () Bool)

(assert (=> b!110933 (= e!72120 e!72121)))

(declare-fun c!19730 () Bool)

(assert (=> b!110933 (= c!19730 (and ((_ is Cons!1623) (toList!792 e!71432)) (not (= (_1!1209 (h!2222 (toList!792 e!71432))) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))))

(declare-fun b!110935 () Bool)

(assert (=> b!110935 (= e!72121 None!160)))

(assert (= (and d!31333 c!19729) b!110932))

(assert (= (and d!31333 (not c!19729)) b!110933))

(assert (= (and b!110933 c!19730) b!110934))

(assert (= (and b!110933 (not c!19730)) b!110935))

(assert (=> b!110934 m!123865))

(declare-fun m!126059 () Bool)

(assert (=> b!110934 m!126059))

(assert (=> b!110244 d!31333))

(declare-fun lt!57230 () Bool)

(declare-fun d!31335 () Bool)

(assert (=> d!31335 (= lt!57230 (select (content!113 (toList!792 lt!56946)) (tuple2!2397 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))))

(declare-fun e!72122 () Bool)

(assert (=> d!31335 (= lt!57230 e!72122)))

(declare-fun res!54813 () Bool)

(assert (=> d!31335 (=> (not res!54813) (not e!72122))))

(assert (=> d!31335 (= res!54813 ((_ is Cons!1623) (toList!792 lt!56946)))))

(assert (=> d!31335 (= (contains!829 (toList!792 lt!56946) (tuple2!2397 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992))))) lt!57230)))

(declare-fun b!110936 () Bool)

(declare-fun e!72123 () Bool)

(assert (=> b!110936 (= e!72122 e!72123)))

(declare-fun res!54814 () Bool)

(assert (=> b!110936 (=> res!54814 e!72123)))

(assert (=> b!110936 (= res!54814 (= (h!2222 (toList!792 lt!56946)) (tuple2!2397 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))))

(declare-fun b!110937 () Bool)

(assert (=> b!110937 (= e!72123 (contains!829 (t!5755 (toList!792 lt!56946)) (tuple2!2397 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))))

(assert (= (and d!31335 res!54813) b!110936))

(assert (= (and b!110936 (not res!54814)) b!110937))

(declare-fun m!126061 () Bool)

(assert (=> d!31335 m!126061))

(declare-fun m!126063 () Bool)

(assert (=> d!31335 m!126063))

(declare-fun m!126065 () Bool)

(assert (=> b!110937 m!126065))

(assert (=> b!110407 d!31335))

(declare-fun d!31337 () Bool)

(declare-fun e!72124 () Bool)

(assert (=> d!31337 e!72124))

(declare-fun res!54815 () Bool)

(assert (=> d!31337 (=> (not res!54815) (not e!72124))))

(declare-fun lt!57232 () ListLongMap!1553)

(assert (=> d!31337 (= res!54815 (contains!827 lt!57232 (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306))))))

(declare-fun lt!57231 () List!1627)

(assert (=> d!31337 (= lt!57232 (ListLongMap!1554 lt!57231))))

(declare-fun lt!57233 () Unit!3390)

(declare-fun lt!57234 () Unit!3390)

(assert (=> d!31337 (= lt!57233 lt!57234)))

(assert (=> d!31337 (= (getValueByKey!156 lt!57231 (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306))) (Some!161 (_2!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306))))))

(assert (=> d!31337 (= lt!57234 (lemmaContainsTupThenGetReturnValue!75 lt!57231 (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306)) (_2!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306))))))

(assert (=> d!31337 (= lt!57231 (insertStrictlySorted!78 (toList!792 (getCurrentListMap!469 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16))) (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306)) (_2!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306))))))

(assert (=> d!31337 (= (+!139 (getCurrentListMap!469 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306)) lt!57232)))

(declare-fun b!110938 () Bool)

(declare-fun res!54816 () Bool)

(assert (=> b!110938 (=> (not res!54816) (not e!72124))))

(assert (=> b!110938 (= res!54816 (= (getValueByKey!156 (toList!792 lt!57232) (_1!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306))) (Some!161 (_2!1209 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306)))))))

(declare-fun b!110939 () Bool)

(assert (=> b!110939 (= e!72124 (contains!829 (toList!792 lt!57232) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306)))))

(assert (= (and d!31337 res!54815) b!110938))

(assert (= (and b!110938 res!54816) b!110939))

(declare-fun m!126067 () Bool)

(assert (=> d!31337 m!126067))

(declare-fun m!126069 () Bool)

(assert (=> d!31337 m!126069))

(declare-fun m!126071 () Bool)

(assert (=> d!31337 m!126071))

(declare-fun m!126073 () Bool)

(assert (=> d!31337 m!126073))

(declare-fun m!126075 () Bool)

(assert (=> b!110938 m!126075))

(declare-fun m!126077 () Bool)

(assert (=> b!110939 m!126077))

(assert (=> d!30823 d!31337))

(assert (=> d!30823 d!30839))

(declare-fun b!110940 () Bool)

(declare-fun e!72125 () Bool)

(assert (=> b!110940 (= e!72125 (validKeyInArray!0 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!110941 () Bool)

(declare-fun e!72134 () Bool)

(declare-fun e!72126 () Bool)

(assert (=> b!110941 (= e!72134 e!72126)))

(declare-fun res!54822 () Bool)

(declare-fun call!11846 () Bool)

(assert (=> b!110941 (= res!54822 call!11846)))

(assert (=> b!110941 (=> (not res!54822) (not e!72126))))

(declare-fun b!110942 () Bool)

(declare-fun lt!57251 () ListLongMap!1553)

(assert (=> b!110942 (= e!72126 (= (apply!100 lt!57251 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2497 newMap!16)))))

(declare-fun b!110943 () Bool)

(assert (=> b!110943 (= e!72134 (not call!11846))))

(declare-fun d!31339 () Bool)

(declare-fun e!72136 () Bool)

(assert (=> d!31339 e!72136))

(declare-fun res!54819 () Bool)

(assert (=> d!31339 (=> (not res!54819) (not e!72136))))

(assert (=> d!31339 (= res!54819 (or (bvsge #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))))))))

(declare-fun lt!57253 () ListLongMap!1553)

(assert (=> d!31339 (= lt!57251 lt!57253)))

(declare-fun lt!57237 () Unit!3390)

(declare-fun e!72131 () Unit!3390)

(assert (=> d!31339 (= lt!57237 e!72131)))

(declare-fun c!19732 () Bool)

(declare-fun e!72132 () Bool)

(assert (=> d!31339 (= c!19732 e!72132)))

(declare-fun res!54821 () Bool)

(assert (=> d!31339 (=> (not res!54821) (not e!72132))))

(assert (=> d!31339 (= res!54821 (bvslt #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))))))

(declare-fun e!72137 () ListLongMap!1553)

(assert (=> d!31339 (= lt!57253 e!72137)))

(declare-fun c!19731 () Bool)

(assert (=> d!31339 (= c!19731 (and (not (= (bvand lt!56514 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!56514 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!31339 (validMask!0 (mask!6793 newMap!16))))

(assert (=> d!31339 (= (getCurrentListMap!469 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) lt!56514 lt!56306 (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) lt!57251)))

(declare-fun b!110944 () Bool)

(assert (=> b!110944 (= e!72136 e!72134)))

(declare-fun c!19736 () Bool)

(assert (=> b!110944 (= c!19736 (not (= (bvand lt!56514 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!110945 () Bool)

(declare-fun e!72133 () ListLongMap!1553)

(assert (=> b!110945 (= e!72137 e!72133)))

(declare-fun c!19734 () Bool)

(assert (=> b!110945 (= c!19734 (and (not (= (bvand lt!56514 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!56514 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11839 () Bool)

(declare-fun call!11844 () ListLongMap!1553)

(declare-fun call!11843 () ListLongMap!1553)

(assert (=> bm!11839 (= call!11844 call!11843)))

(declare-fun bm!11840 () Bool)

(declare-fun call!11842 () ListLongMap!1553)

(assert (=> bm!11840 (= call!11843 call!11842)))

(declare-fun b!110946 () Bool)

(declare-fun res!54825 () Bool)

(assert (=> b!110946 (=> (not res!54825) (not e!72136))))

(declare-fun e!72130 () Bool)

(assert (=> b!110946 (= res!54825 e!72130)))

(declare-fun res!54824 () Bool)

(assert (=> b!110946 (=> res!54824 e!72130)))

(assert (=> b!110946 (= res!54824 (not e!72125))))

(declare-fun res!54820 () Bool)

(assert (=> b!110946 (=> (not res!54820) (not e!72125))))

(assert (=> b!110946 (= res!54820 (bvslt #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))))))

(declare-fun b!110947 () Bool)

(declare-fun e!72128 () Bool)

(declare-fun e!72127 () Bool)

(assert (=> b!110947 (= e!72128 e!72127)))

(declare-fun res!54817 () Bool)

(declare-fun call!11848 () Bool)

(assert (=> b!110947 (= res!54817 call!11848)))

(assert (=> b!110947 (=> (not res!54817) (not e!72127))))

(declare-fun bm!11841 () Bool)

(declare-fun call!11845 () ListLongMap!1553)

(declare-fun call!11847 () ListLongMap!1553)

(assert (=> bm!11841 (= call!11845 call!11847)))

(declare-fun b!110948 () Bool)

(assert (=> b!110948 (= e!72128 (not call!11848))))

(declare-fun b!110949 () Bool)

(declare-fun e!72129 () Bool)

(assert (=> b!110949 (= e!72130 e!72129)))

(declare-fun res!54818 () Bool)

(assert (=> b!110949 (=> (not res!54818) (not e!72129))))

(assert (=> b!110949 (= res!54818 (contains!827 lt!57251 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!110949 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))))))

(declare-fun b!110950 () Bool)

(assert (=> b!110950 (= e!72129 (= (apply!100 lt!57251 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)) (get!1347 (select (arr!2069 (_values!2609 newMap!16)) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2626 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!110950 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2327 (_values!2609 newMap!16))))))

(assert (=> b!110950 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))))))

(declare-fun bm!11842 () Bool)

(assert (=> bm!11842 (= call!11846 (contains!827 lt!57251 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!11843 () Bool)

(assert (=> bm!11843 (= call!11848 (contains!827 lt!57251 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!110951 () Bool)

(assert (=> b!110951 (= e!72132 (validKeyInArray!0 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!110952 () Bool)

(declare-fun res!54823 () Bool)

(assert (=> b!110952 (=> (not res!54823) (not e!72136))))

(assert (=> b!110952 (= res!54823 e!72128)))

(declare-fun c!19735 () Bool)

(assert (=> b!110952 (= c!19735 (not (= (bvand lt!56514 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!11844 () Bool)

(assert (=> bm!11844 (= call!11842 (getCurrentListMapNoExtraKeys!104 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) lt!56514 lt!56306 (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun b!110953 () Bool)

(declare-fun e!72135 () ListLongMap!1553)

(assert (=> b!110953 (= e!72135 call!11844)))

(declare-fun b!110954 () Bool)

(assert (=> b!110954 (= e!72137 (+!139 call!11847 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16))))))

(declare-fun b!110955 () Bool)

(assert (=> b!110955 (= e!72133 call!11845)))

(declare-fun b!110956 () Bool)

(declare-fun Unit!3445 () Unit!3390)

(assert (=> b!110956 (= e!72131 Unit!3445)))

(declare-fun b!110957 () Bool)

(declare-fun lt!57244 () Unit!3390)

(assert (=> b!110957 (= e!72131 lt!57244)))

(declare-fun lt!57239 () ListLongMap!1553)

(assert (=> b!110957 (= lt!57239 (getCurrentListMapNoExtraKeys!104 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) lt!56514 lt!56306 (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!57252 () (_ BitVec 64))

(assert (=> b!110957 (= lt!57252 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57236 () (_ BitVec 64))

(assert (=> b!110957 (= lt!57236 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!57256 () Unit!3390)

(assert (=> b!110957 (= lt!57256 (addStillContains!76 lt!57239 lt!57252 lt!56306 lt!57236))))

(assert (=> b!110957 (contains!827 (+!139 lt!57239 (tuple2!2397 lt!57252 lt!56306)) lt!57236)))

(declare-fun lt!57250 () Unit!3390)

(assert (=> b!110957 (= lt!57250 lt!57256)))

(declare-fun lt!57238 () ListLongMap!1553)

(assert (=> b!110957 (= lt!57238 (getCurrentListMapNoExtraKeys!104 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) lt!56514 lt!56306 (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!57249 () (_ BitVec 64))

(assert (=> b!110957 (= lt!57249 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57242 () (_ BitVec 64))

(assert (=> b!110957 (= lt!57242 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!57248 () Unit!3390)

(assert (=> b!110957 (= lt!57248 (addApplyDifferent!76 lt!57238 lt!57249 (minValue!2497 newMap!16) lt!57242))))

(assert (=> b!110957 (= (apply!100 (+!139 lt!57238 (tuple2!2397 lt!57249 (minValue!2497 newMap!16))) lt!57242) (apply!100 lt!57238 lt!57242))))

(declare-fun lt!57235 () Unit!3390)

(assert (=> b!110957 (= lt!57235 lt!57248)))

(declare-fun lt!57254 () ListLongMap!1553)

(assert (=> b!110957 (= lt!57254 (getCurrentListMapNoExtraKeys!104 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) lt!56514 lt!56306 (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!57245 () (_ BitVec 64))

(assert (=> b!110957 (= lt!57245 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57240 () (_ BitVec 64))

(assert (=> b!110957 (= lt!57240 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!57246 () Unit!3390)

(assert (=> b!110957 (= lt!57246 (addApplyDifferent!76 lt!57254 lt!57245 lt!56306 lt!57240))))

(assert (=> b!110957 (= (apply!100 (+!139 lt!57254 (tuple2!2397 lt!57245 lt!56306)) lt!57240) (apply!100 lt!57254 lt!57240))))

(declare-fun lt!57255 () Unit!3390)

(assert (=> b!110957 (= lt!57255 lt!57246)))

(declare-fun lt!57243 () ListLongMap!1553)

(assert (=> b!110957 (= lt!57243 (getCurrentListMapNoExtraKeys!104 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) lt!56514 lt!56306 (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!57241 () (_ BitVec 64))

(assert (=> b!110957 (= lt!57241 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57247 () (_ BitVec 64))

(assert (=> b!110957 (= lt!57247 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!110957 (= lt!57244 (addApplyDifferent!76 lt!57243 lt!57241 (minValue!2497 newMap!16) lt!57247))))

(assert (=> b!110957 (= (apply!100 (+!139 lt!57243 (tuple2!2397 lt!57241 (minValue!2497 newMap!16))) lt!57247) (apply!100 lt!57243 lt!57247))))

(declare-fun b!110958 () Bool)

(declare-fun c!19733 () Bool)

(assert (=> b!110958 (= c!19733 (and (not (= (bvand lt!56514 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!56514 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!110958 (= e!72133 e!72135)))

(declare-fun b!110959 () Bool)

(assert (=> b!110959 (= e!72127 (= (apply!100 lt!57251 #b0000000000000000000000000000000000000000000000000000000000000000) lt!56306))))

(declare-fun b!110960 () Bool)

(assert (=> b!110960 (= e!72135 call!11845)))

(declare-fun bm!11845 () Bool)

(assert (=> bm!11845 (= call!11847 (+!139 (ite c!19731 call!11842 (ite c!19734 call!11843 call!11844)) (ite (or c!19731 c!19734) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16)))))))

(assert (= (and d!31339 c!19731) b!110954))

(assert (= (and d!31339 (not c!19731)) b!110945))

(assert (= (and b!110945 c!19734) b!110955))

(assert (= (and b!110945 (not c!19734)) b!110958))

(assert (= (and b!110958 c!19733) b!110960))

(assert (= (and b!110958 (not c!19733)) b!110953))

(assert (= (or b!110960 b!110953) bm!11839))

(assert (= (or b!110955 bm!11839) bm!11840))

(assert (= (or b!110955 b!110960) bm!11841))

(assert (= (or b!110954 bm!11840) bm!11844))

(assert (= (or b!110954 bm!11841) bm!11845))

(assert (= (and d!31339 res!54821) b!110951))

(assert (= (and d!31339 c!19732) b!110957))

(assert (= (and d!31339 (not c!19732)) b!110956))

(assert (= (and d!31339 res!54819) b!110946))

(assert (= (and b!110946 res!54820) b!110940))

(assert (= (and b!110946 (not res!54824)) b!110949))

(assert (= (and b!110949 res!54818) b!110950))

(assert (= (and b!110946 res!54825) b!110952))

(assert (= (and b!110952 c!19735) b!110947))

(assert (= (and b!110952 (not c!19735)) b!110948))

(assert (= (and b!110947 res!54817) b!110959))

(assert (= (or b!110947 b!110948) bm!11843))

(assert (= (and b!110952 res!54823) b!110944))

(assert (= (and b!110944 c!19736) b!110941))

(assert (= (and b!110944 (not c!19736)) b!110943))

(assert (= (and b!110941 res!54822) b!110942))

(assert (= (or b!110941 b!110943) bm!11842))

(declare-fun b_lambda!4959 () Bool)

(assert (=> (not b_lambda!4959) (not b!110950)))

(assert (=> b!110950 t!5766))

(declare-fun b_and!6825 () Bool)

(assert (= b_and!6821 (and (=> t!5766 result!3533) b_and!6825)))

(assert (=> b!110950 t!5768))

(declare-fun b_and!6827 () Bool)

(assert (= b_and!6823 (and (=> t!5768 result!3535) b_and!6827)))

(assert (=> b!110950 m!124445))

(assert (=> b!110950 m!124447))

(declare-fun m!126079 () Bool)

(assert (=> b!110950 m!126079))

(assert (=> b!110950 m!124451))

(assert (=> b!110950 m!124447))

(assert (=> b!110950 m!124445))

(assert (=> b!110950 m!124451))

(assert (=> b!110950 m!124453))

(assert (=> b!110949 m!124447))

(assert (=> b!110949 m!124447))

(declare-fun m!126081 () Bool)

(assert (=> b!110949 m!126081))

(assert (=> d!31339 m!124269))

(declare-fun m!126083 () Bool)

(assert (=> bm!11845 m!126083))

(declare-fun m!126085 () Bool)

(assert (=> b!110942 m!126085))

(declare-fun m!126087 () Bool)

(assert (=> bm!11844 m!126087))

(assert (=> b!110951 m!124447))

(assert (=> b!110951 m!124447))

(assert (=> b!110951 m!124463))

(assert (=> b!110940 m!124447))

(assert (=> b!110940 m!124447))

(assert (=> b!110940 m!124463))

(declare-fun m!126089 () Bool)

(assert (=> b!110959 m!126089))

(declare-fun m!126091 () Bool)

(assert (=> b!110957 m!126091))

(declare-fun m!126093 () Bool)

(assert (=> b!110957 m!126093))

(declare-fun m!126095 () Bool)

(assert (=> b!110957 m!126095))

(declare-fun m!126097 () Bool)

(assert (=> b!110957 m!126097))

(declare-fun m!126099 () Bool)

(assert (=> b!110957 m!126099))

(declare-fun m!126101 () Bool)

(assert (=> b!110957 m!126101))

(assert (=> b!110957 m!126091))

(declare-fun m!126103 () Bool)

(assert (=> b!110957 m!126103))

(declare-fun m!126105 () Bool)

(assert (=> b!110957 m!126105))

(assert (=> b!110957 m!126087))

(declare-fun m!126107 () Bool)

(assert (=> b!110957 m!126107))

(declare-fun m!126109 () Bool)

(assert (=> b!110957 m!126109))

(declare-fun m!126111 () Bool)

(assert (=> b!110957 m!126111))

(declare-fun m!126113 () Bool)

(assert (=> b!110957 m!126113))

(declare-fun m!126115 () Bool)

(assert (=> b!110957 m!126115))

(declare-fun m!126117 () Bool)

(assert (=> b!110957 m!126117))

(assert (=> b!110957 m!126107))

(assert (=> b!110957 m!124447))

(assert (=> b!110957 m!126095))

(declare-fun m!126119 () Bool)

(assert (=> b!110957 m!126119))

(assert (=> b!110957 m!126099))

(declare-fun m!126121 () Bool)

(assert (=> bm!11843 m!126121))

(declare-fun m!126123 () Bool)

(assert (=> b!110954 m!126123))

(declare-fun m!126125 () Bool)

(assert (=> bm!11842 m!126125))

(assert (=> d!30823 d!31339))

(declare-fun d!31341 () Bool)

(assert (=> d!31341 (= (+!139 (getCurrentListMap!469 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 lt!56306)) (getCurrentListMap!469 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) lt!56514 lt!56306 (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(assert (=> d!31341 true))

(declare-fun _$7!98 () Unit!3390)

(assert (=> d!31341 (= (choose!693 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) lt!56514 (zeroValue!2497 newMap!16) lt!56306 (minValue!2497 newMap!16) (defaultEntry!2626 newMap!16)) _$7!98)))

(declare-fun bs!4566 () Bool)

(assert (= bs!4566 d!31341))

(assert (=> bs!4566 m!124133))

(assert (=> bs!4566 m!124133))

(assert (=> bs!4566 m!124391))

(assert (=> bs!4566 m!124387))

(assert (=> d!30823 d!31341))

(assert (=> d!30823 d!31081))

(declare-fun d!31343 () Bool)

(declare-fun res!54826 () Bool)

(declare-fun e!72138 () Bool)

(assert (=> d!31343 (=> res!54826 e!72138)))

(assert (=> d!31343 (= res!54826 (or ((_ is Nil!1624) lt!56737) ((_ is Nil!1624) (t!5755 lt!56737))))))

(assert (=> d!31343 (= (isStrictlySorted!306 lt!56737) e!72138)))

(declare-fun b!110961 () Bool)

(declare-fun e!72139 () Bool)

(assert (=> b!110961 (= e!72138 e!72139)))

(declare-fun res!54827 () Bool)

(assert (=> b!110961 (=> (not res!54827) (not e!72139))))

(assert (=> b!110961 (= res!54827 (bvslt (_1!1209 (h!2222 lt!56737)) (_1!1209 (h!2222 (t!5755 lt!56737)))))))

(declare-fun b!110962 () Bool)

(assert (=> b!110962 (= e!72139 (isStrictlySorted!306 (t!5755 lt!56737)))))

(assert (= (and d!31343 (not res!54826)) b!110961))

(assert (= (and b!110961 res!54827) b!110962))

(declare-fun m!126127 () Bool)

(assert (=> b!110962 m!126127))

(assert (=> d!30865 d!31343))

(declare-fun d!31345 () Bool)

(declare-fun res!54828 () Bool)

(declare-fun e!72140 () Bool)

(assert (=> d!31345 (=> res!54828 e!72140)))

(assert (=> d!31345 (= res!54828 (or ((_ is Nil!1624) (toList!792 lt!56303)) ((_ is Nil!1624) (t!5755 (toList!792 lt!56303)))))))

(assert (=> d!31345 (= (isStrictlySorted!306 (toList!792 lt!56303)) e!72140)))

(declare-fun b!110963 () Bool)

(declare-fun e!72141 () Bool)

(assert (=> b!110963 (= e!72140 e!72141)))

(declare-fun res!54829 () Bool)

(assert (=> b!110963 (=> (not res!54829) (not e!72141))))

(assert (=> b!110963 (= res!54829 (bvslt (_1!1209 (h!2222 (toList!792 lt!56303))) (_1!1209 (h!2222 (t!5755 (toList!792 lt!56303))))))))

(declare-fun b!110964 () Bool)

(assert (=> b!110964 (= e!72141 (isStrictlySorted!306 (t!5755 (toList!792 lt!56303))))))

(assert (= (and d!31345 (not res!54828)) b!110963))

(assert (= (and b!110963 res!54829) b!110964))

(assert (=> b!110964 m!125867))

(assert (=> d!30865 d!31345))

(declare-fun d!31347 () Bool)

(assert (=> d!31347 (= ($colon$colon!82 e!71767 (ite c!19566 (h!2222 (toList!792 (+!139 lt!56303 lt!56300))) (tuple2!2397 (_1!1209 lt!56299) (_2!1209 lt!56299)))) (Cons!1623 (ite c!19566 (h!2222 (toList!792 (+!139 lt!56303 lt!56300))) (tuple2!2397 (_1!1209 lt!56299) (_2!1209 lt!56299))) e!71767))))

(assert (=> bm!11779 d!31347))

(declare-fun d!31349 () Bool)

(assert (=> d!31349 (= (isDefined!110 (getValueByKey!156 (toList!792 lt!56425) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!382 (getValueByKey!156 (toList!792 lt!56425) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4567 () Bool)

(assert (= bs!4567 d!31349))

(assert (=> bs!4567 m!124567))

(declare-fun m!126129 () Bool)

(assert (=> bs!4567 m!126129))

(assert (=> b!110134 d!31349))

(declare-fun b!110967 () Bool)

(declare-fun e!72143 () Option!162)

(assert (=> b!110967 (= e!72143 (getValueByKey!156 (t!5755 (toList!792 lt!56425)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!31351 () Bool)

(declare-fun c!19737 () Bool)

(assert (=> d!31351 (= c!19737 (and ((_ is Cons!1623) (toList!792 lt!56425)) (= (_1!1209 (h!2222 (toList!792 lt!56425))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!72142 () Option!162)

(assert (=> d!31351 (= (getValueByKey!156 (toList!792 lt!56425) #b1000000000000000000000000000000000000000000000000000000000000000) e!72142)))

(declare-fun b!110965 () Bool)

(assert (=> b!110965 (= e!72142 (Some!161 (_2!1209 (h!2222 (toList!792 lt!56425)))))))

(declare-fun b!110966 () Bool)

(assert (=> b!110966 (= e!72142 e!72143)))

(declare-fun c!19738 () Bool)

(assert (=> b!110966 (= c!19738 (and ((_ is Cons!1623) (toList!792 lt!56425)) (not (= (_1!1209 (h!2222 (toList!792 lt!56425))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!110968 () Bool)

(assert (=> b!110968 (= e!72143 None!160)))

(assert (= (and d!31351 c!19737) b!110965))

(assert (= (and d!31351 (not c!19737)) b!110966))

(assert (= (and b!110966 c!19738) b!110967))

(assert (= (and b!110966 (not c!19738)) b!110968))

(declare-fun m!126131 () Bool)

(assert (=> b!110967 m!126131))

(assert (=> b!110134 d!31351))

(declare-fun d!31353 () Bool)

(declare-fun e!72145 () Bool)

(assert (=> d!31353 e!72145))

(declare-fun res!54830 () Bool)

(assert (=> d!31353 (=> res!54830 e!72145)))

(declare-fun lt!57257 () Bool)

(assert (=> d!31353 (= res!54830 (not lt!57257))))

(declare-fun lt!57258 () Bool)

(assert (=> d!31353 (= lt!57257 lt!57258)))

(declare-fun lt!57259 () Unit!3390)

(declare-fun e!72144 () Unit!3390)

(assert (=> d!31353 (= lt!57259 e!72144)))

(declare-fun c!19739 () Bool)

(assert (=> d!31353 (= c!19739 lt!57258)))

(assert (=> d!31353 (= lt!57258 (containsKey!160 (toList!792 lt!56634) (_1!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(assert (=> d!31353 (= (contains!827 lt!56634 (_1!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))) lt!57257)))

(declare-fun b!110969 () Bool)

(declare-fun lt!57260 () Unit!3390)

(assert (=> b!110969 (= e!72144 lt!57260)))

(assert (=> b!110969 (= lt!57260 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 lt!56634) (_1!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(assert (=> b!110969 (isDefined!110 (getValueByKey!156 (toList!792 lt!56634) (_1!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun b!110970 () Bool)

(declare-fun Unit!3446 () Unit!3390)

(assert (=> b!110970 (= e!72144 Unit!3446)))

(declare-fun b!110971 () Bool)

(assert (=> b!110971 (= e!72145 (isDefined!110 (getValueByKey!156 (toList!792 lt!56634) (_1!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(assert (= (and d!31353 c!19739) b!110969))

(assert (= (and d!31353 (not c!19739)) b!110970))

(assert (= (and d!31353 (not res!54830)) b!110971))

(declare-fun m!126133 () Bool)

(assert (=> d!31353 m!126133))

(declare-fun m!126135 () Bool)

(assert (=> b!110969 m!126135))

(assert (=> b!110969 m!124363))

(assert (=> b!110969 m!124363))

(declare-fun m!126137 () Bool)

(assert (=> b!110969 m!126137))

(assert (=> b!110971 m!124363))

(assert (=> b!110971 m!124363))

(assert (=> b!110971 m!126137))

(assert (=> d!30813 d!31353))

(declare-fun b!110974 () Bool)

(declare-fun e!72147 () Option!162)

(assert (=> b!110974 (= e!72147 (getValueByKey!156 (t!5755 lt!56633) (_1!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun d!31355 () Bool)

(declare-fun c!19740 () Bool)

(assert (=> d!31355 (= c!19740 (and ((_ is Cons!1623) lt!56633) (= (_1!1209 (h!2222 lt!56633)) (_1!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(declare-fun e!72146 () Option!162)

(assert (=> d!31355 (= (getValueByKey!156 lt!56633 (_1!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))) e!72146)))

(declare-fun b!110972 () Bool)

(assert (=> b!110972 (= e!72146 (Some!161 (_2!1209 (h!2222 lt!56633))))))

(declare-fun b!110973 () Bool)

(assert (=> b!110973 (= e!72146 e!72147)))

(declare-fun c!19741 () Bool)

(assert (=> b!110973 (= c!19741 (and ((_ is Cons!1623) lt!56633) (not (= (_1!1209 (h!2222 lt!56633)) (_1!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))))

(declare-fun b!110975 () Bool)

(assert (=> b!110975 (= e!72147 None!160)))

(assert (= (and d!31355 c!19740) b!110972))

(assert (= (and d!31355 (not c!19740)) b!110973))

(assert (= (and b!110973 c!19741) b!110974))

(assert (= (and b!110973 (not c!19741)) b!110975))

(declare-fun m!126139 () Bool)

(assert (=> b!110974 m!126139))

(assert (=> d!30813 d!31355))

(declare-fun d!31357 () Bool)

(assert (=> d!31357 (= (getValueByKey!156 lt!56633 (_1!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))) (Some!161 (_2!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun lt!57261 () Unit!3390)

(assert (=> d!31357 (= lt!57261 (choose!691 lt!56633 (_1!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992))))) (_2!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun e!72148 () Bool)

(assert (=> d!31357 e!72148))

(declare-fun res!54831 () Bool)

(assert (=> d!31357 (=> (not res!54831) (not e!72148))))

(assert (=> d!31357 (= res!54831 (isStrictlySorted!306 lt!56633))))

(assert (=> d!31357 (= (lemmaContainsTupThenGetReturnValue!75 lt!56633 (_1!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992))))) (_2!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))) lt!57261)))

(declare-fun b!110976 () Bool)

(declare-fun res!54832 () Bool)

(assert (=> b!110976 (=> (not res!54832) (not e!72148))))

(assert (=> b!110976 (= res!54832 (containsKey!160 lt!56633 (_1!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun b!110977 () Bool)

(assert (=> b!110977 (= e!72148 (contains!829 lt!56633 (tuple2!2397 (_1!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992))))) (_2!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(assert (= (and d!31357 res!54831) b!110976))

(assert (= (and b!110976 res!54832) b!110977))

(assert (=> d!31357 m!124357))

(declare-fun m!126141 () Bool)

(assert (=> d!31357 m!126141))

(declare-fun m!126143 () Bool)

(assert (=> d!31357 m!126143))

(declare-fun m!126145 () Bool)

(assert (=> b!110976 m!126145))

(declare-fun m!126147 () Bool)

(assert (=> b!110977 m!126147))

(assert (=> d!30813 d!31357))

(declare-fun e!72150 () List!1627)

(declare-fun b!110978 () Bool)

(declare-fun c!19745 () Bool)

(declare-fun c!19742 () Bool)

(assert (=> b!110978 (= e!72150 (ite c!19742 (t!5755 (toList!792 call!11718)) (ite c!19745 (Cons!1623 (h!2222 (toList!792 call!11718)) (t!5755 (toList!792 call!11718))) Nil!1624)))))

(declare-fun b!110979 () Bool)

(assert (=> b!110979 (= e!72150 (insertStrictlySorted!78 (t!5755 (toList!792 call!11718)) (_1!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992))))) (_2!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun bm!11846 () Bool)

(declare-fun call!11851 () List!1627)

(declare-fun call!11849 () List!1627)

(assert (=> bm!11846 (= call!11851 call!11849)))

(declare-fun b!110980 () Bool)

(declare-fun e!72149 () List!1627)

(declare-fun call!11850 () List!1627)

(assert (=> b!110980 (= e!72149 call!11850)))

(declare-fun b!110981 () Bool)

(assert (=> b!110981 (= c!19745 (and ((_ is Cons!1623) (toList!792 call!11718)) (bvsgt (_1!1209 (h!2222 (toList!792 call!11718))) (_1!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(declare-fun e!72152 () List!1627)

(assert (=> b!110981 (= e!72152 e!72149)))

(declare-fun b!110982 () Bool)

(declare-fun res!54834 () Bool)

(declare-fun e!72151 () Bool)

(assert (=> b!110982 (=> (not res!54834) (not e!72151))))

(declare-fun lt!57262 () List!1627)

(assert (=> b!110982 (= res!54834 (containsKey!160 lt!57262 (_1!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun b!110984 () Bool)

(assert (=> b!110984 (= e!72149 call!11850)))

(declare-fun bm!11847 () Bool)

(assert (=> bm!11847 (= call!11850 call!11851)))

(declare-fun b!110985 () Bool)

(assert (=> b!110985 (= e!72152 call!11851)))

(declare-fun b!110986 () Bool)

(declare-fun e!72153 () List!1627)

(assert (=> b!110986 (= e!72153 e!72152)))

(assert (=> b!110986 (= c!19742 (and ((_ is Cons!1623) (toList!792 call!11718)) (= (_1!1209 (h!2222 (toList!792 call!11718))) (_1!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(declare-fun d!31359 () Bool)

(assert (=> d!31359 e!72151))

(declare-fun res!54833 () Bool)

(assert (=> d!31359 (=> (not res!54833) (not e!72151))))

(assert (=> d!31359 (= res!54833 (isStrictlySorted!306 lt!57262))))

(assert (=> d!31359 (= lt!57262 e!72153)))

(declare-fun c!19744 () Bool)

(assert (=> d!31359 (= c!19744 (and ((_ is Cons!1623) (toList!792 call!11718)) (bvslt (_1!1209 (h!2222 (toList!792 call!11718))) (_1!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(assert (=> d!31359 (isStrictlySorted!306 (toList!792 call!11718))))

(assert (=> d!31359 (= (insertStrictlySorted!78 (toList!792 call!11718) (_1!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992))))) (_2!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))) lt!57262)))

(declare-fun b!110983 () Bool)

(assert (=> b!110983 (= e!72153 call!11849)))

(declare-fun b!110987 () Bool)

(assert (=> b!110987 (= e!72151 (contains!829 lt!57262 (tuple2!2397 (_1!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992))))) (_2!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(declare-fun bm!11848 () Bool)

(assert (=> bm!11848 (= call!11849 ($colon$colon!82 e!72150 (ite c!19744 (h!2222 (toList!792 call!11718)) (tuple2!2397 (_1!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992))))) (_2!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))))

(declare-fun c!19743 () Bool)

(assert (=> bm!11848 (= c!19743 c!19744)))

(assert (= (and d!31359 c!19744) b!110983))

(assert (= (and d!31359 (not c!19744)) b!110986))

(assert (= (and b!110986 c!19742) b!110985))

(assert (= (and b!110986 (not c!19742)) b!110981))

(assert (= (and b!110981 c!19745) b!110980))

(assert (= (and b!110981 (not c!19745)) b!110984))

(assert (= (or b!110980 b!110984) bm!11847))

(assert (= (or b!110985 bm!11847) bm!11846))

(assert (= (or b!110983 bm!11846) bm!11848))

(assert (= (and bm!11848 c!19743) b!110979))

(assert (= (and bm!11848 (not c!19743)) b!110978))

(assert (= (and d!31359 res!54833) b!110982))

(assert (= (and b!110982 res!54834) b!110987))

(declare-fun m!126149 () Bool)

(assert (=> d!31359 m!126149))

(declare-fun m!126151 () Bool)

(assert (=> d!31359 m!126151))

(declare-fun m!126153 () Bool)

(assert (=> b!110982 m!126153))

(declare-fun m!126155 () Bool)

(assert (=> bm!11848 m!126155))

(declare-fun m!126157 () Bool)

(assert (=> b!110979 m!126157))

(declare-fun m!126159 () Bool)

(assert (=> b!110987 m!126159))

(assert (=> d!30813 d!31359))

(declare-fun e!72155 () Option!162)

(declare-fun b!110990 () Bool)

(assert (=> b!110990 (= e!72155 (getValueByKey!156 (t!5755 (t!5755 (toList!792 lt!56298))) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))

(declare-fun c!19746 () Bool)

(declare-fun d!31361 () Bool)

(assert (=> d!31361 (= c!19746 (and ((_ is Cons!1623) (t!5755 (toList!792 lt!56298))) (= (_1!1209 (h!2222 (t!5755 (toList!792 lt!56298)))) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355))))))

(declare-fun e!72154 () Option!162)

(assert (=> d!31361 (= (getValueByKey!156 (t!5755 (toList!792 lt!56298)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) e!72154)))

(declare-fun b!110988 () Bool)

(assert (=> b!110988 (= e!72154 (Some!161 (_2!1209 (h!2222 (t!5755 (toList!792 lt!56298))))))))

(declare-fun b!110989 () Bool)

(assert (=> b!110989 (= e!72154 e!72155)))

(declare-fun c!19747 () Bool)

(assert (=> b!110989 (= c!19747 (and ((_ is Cons!1623) (t!5755 (toList!792 lt!56298))) (not (= (_1!1209 (h!2222 (t!5755 (toList!792 lt!56298)))) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))))

(declare-fun b!110991 () Bool)

(assert (=> b!110991 (= e!72155 None!160)))

(assert (= (and d!31361 c!19746) b!110988))

(assert (= (and d!31361 (not c!19746)) b!110989))

(assert (= (and b!110989 c!19747) b!110990))

(assert (= (and b!110989 (not c!19747)) b!110991))

(assert (=> b!110990 m!123865))

(declare-fun m!126161 () Bool)

(assert (=> b!110990 m!126161))

(assert (=> b!110277 d!31361))

(declare-fun d!31363 () Bool)

(assert (=> d!31363 (= (isDefined!110 (getValueByKey!156 (toList!792 lt!56589) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!382 (getValueByKey!156 (toList!792 lt!56589) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4568 () Bool)

(assert (= bs!4568 d!31363))

(assert (=> bs!4568 m!124735))

(declare-fun m!126163 () Bool)

(assert (=> bs!4568 m!126163))

(assert (=> b!110235 d!31363))

(declare-fun b!110994 () Bool)

(declare-fun e!72157 () Option!162)

(assert (=> b!110994 (= e!72157 (getValueByKey!156 (t!5755 (toList!792 lt!56589)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!31365 () Bool)

(declare-fun c!19748 () Bool)

(assert (=> d!31365 (= c!19748 (and ((_ is Cons!1623) (toList!792 lt!56589)) (= (_1!1209 (h!2222 (toList!792 lt!56589))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!72156 () Option!162)

(assert (=> d!31365 (= (getValueByKey!156 (toList!792 lt!56589) #b0000000000000000000000000000000000000000000000000000000000000000) e!72156)))

(declare-fun b!110992 () Bool)

(assert (=> b!110992 (= e!72156 (Some!161 (_2!1209 (h!2222 (toList!792 lt!56589)))))))

(declare-fun b!110993 () Bool)

(assert (=> b!110993 (= e!72156 e!72157)))

(declare-fun c!19749 () Bool)

(assert (=> b!110993 (= c!19749 (and ((_ is Cons!1623) (toList!792 lt!56589)) (not (= (_1!1209 (h!2222 (toList!792 lt!56589))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!110995 () Bool)

(assert (=> b!110995 (= e!72157 None!160)))

(assert (= (and d!31365 c!19748) b!110992))

(assert (= (and d!31365 (not c!19748)) b!110993))

(assert (= (and b!110993 c!19749) b!110994))

(assert (= (and b!110993 (not c!19749)) b!110995))

(declare-fun m!126165 () Bool)

(assert (=> b!110994 m!126165))

(assert (=> b!110235 d!31365))

(declare-fun d!31367 () Bool)

(assert (=> d!31367 (= (isEmpty!380 lt!56730) (isEmpty!381 (toList!792 lt!56730)))))

(declare-fun bs!4569 () Bool)

(assert (= bs!4569 d!31367))

(declare-fun m!126167 () Bool)

(assert (=> bs!4569 m!126167))

(assert (=> b!110162 d!31367))

(declare-fun b!111008 () Bool)

(declare-fun e!72166 () SeekEntryResult!264)

(assert (=> b!111008 (= e!72166 Undefined!264)))

(declare-fun b!111009 () Bool)

(declare-fun c!19756 () Bool)

(declare-fun lt!57268 () (_ BitVec 64))

(assert (=> b!111009 (= c!19756 (= lt!57268 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!72165 () SeekEntryResult!264)

(declare-fun e!72164 () SeekEntryResult!264)

(assert (=> b!111009 (= e!72165 e!72164)))

(declare-fun b!111010 () Bool)

(assert (=> b!111010 (= e!72164 (MissingVacant!264 (index!3208 lt!56603)))))

(declare-fun b!111011 () Bool)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!111011 (= e!72164 (seekKeyOrZeroReturnVacant!0 (bvadd (x!13951 lt!56603) #b00000000000000000000000000000001) (nextIndex!0 (index!3208 lt!56603) (x!13951 lt!56603) (mask!6793 newMap!16)) (index!3208 lt!56603) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (_keys!4339 newMap!16) (mask!6793 newMap!16)))))

(declare-fun d!31369 () Bool)

(declare-fun lt!57267 () SeekEntryResult!264)

(assert (=> d!31369 (and (or ((_ is Undefined!264) lt!57267) (not ((_ is Found!264) lt!57267)) (and (bvsge (index!3207 lt!57267) #b00000000000000000000000000000000) (bvslt (index!3207 lt!57267) (size!2326 (_keys!4339 newMap!16))))) (or ((_ is Undefined!264) lt!57267) ((_ is Found!264) lt!57267) (not ((_ is MissingVacant!264) lt!57267)) (not (= (index!3209 lt!57267) (index!3208 lt!56603))) (and (bvsge (index!3209 lt!57267) #b00000000000000000000000000000000) (bvslt (index!3209 lt!57267) (size!2326 (_keys!4339 newMap!16))))) (or ((_ is Undefined!264) lt!57267) (ite ((_ is Found!264) lt!57267) (= (select (arr!2068 (_keys!4339 newMap!16)) (index!3207 lt!57267)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) (and ((_ is MissingVacant!264) lt!57267) (= (index!3209 lt!57267) (index!3208 lt!56603)) (= (select (arr!2068 (_keys!4339 newMap!16)) (index!3209 lt!57267)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!31369 (= lt!57267 e!72166)))

(declare-fun c!19758 () Bool)

(assert (=> d!31369 (= c!19758 (bvsge (x!13951 lt!56603) #b01111111111111111111111111111110))))

(assert (=> d!31369 (= lt!57268 (select (arr!2068 (_keys!4339 newMap!16)) (index!3208 lt!56603)))))

(assert (=> d!31369 (validMask!0 (mask!6793 newMap!16))))

(assert (=> d!31369 (= (seekKeyOrZeroReturnVacant!0 (x!13951 lt!56603) (index!3208 lt!56603) (index!3208 lt!56603) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (_keys!4339 newMap!16) (mask!6793 newMap!16)) lt!57267)))

(declare-fun b!111012 () Bool)

(assert (=> b!111012 (= e!72165 (Found!264 (index!3208 lt!56603)))))

(declare-fun b!111013 () Bool)

(assert (=> b!111013 (= e!72166 e!72165)))

(declare-fun c!19757 () Bool)

(assert (=> b!111013 (= c!19757 (= lt!57268 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))

(assert (= (and d!31369 c!19758) b!111008))

(assert (= (and d!31369 (not c!19758)) b!111013))

(assert (= (and b!111013 c!19757) b!111012))

(assert (= (and b!111013 (not c!19757)) b!111009))

(assert (= (and b!111009 c!19756) b!111010))

(assert (= (and b!111009 (not c!19756)) b!111011))

(declare-fun m!126169 () Bool)

(assert (=> b!111011 m!126169))

(assert (=> b!111011 m!126169))

(assert (=> b!111011 m!123865))

(declare-fun m!126171 () Bool)

(assert (=> b!111011 m!126171))

(declare-fun m!126173 () Bool)

(assert (=> d!31369 m!126173))

(declare-fun m!126175 () Bool)

(assert (=> d!31369 m!126175))

(assert (=> d!31369 m!124257))

(assert (=> d!31369 m!124269))

(assert (=> b!109955 d!31369))

(declare-fun d!31371 () Bool)

(declare-fun e!72168 () Bool)

(assert (=> d!31371 e!72168))

(declare-fun res!54835 () Bool)

(assert (=> d!31371 (=> res!54835 e!72168)))

(declare-fun lt!57269 () Bool)

(assert (=> d!31371 (= res!54835 (not lt!57269))))

(declare-fun lt!57270 () Bool)

(assert (=> d!31371 (= lt!57269 lt!57270)))

(declare-fun lt!57271 () Unit!3390)

(declare-fun e!72167 () Unit!3390)

(assert (=> d!31371 (= lt!57271 e!72167)))

(declare-fun c!19759 () Bool)

(assert (=> d!31371 (= c!19759 lt!57270)))

(assert (=> d!31371 (= lt!57270 (containsKey!160 (toList!792 lt!56765) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!31371 (= (contains!827 lt!56765 #b0000000000000000000000000000000000000000000000000000000000000000) lt!57269)))

(declare-fun b!111014 () Bool)

(declare-fun lt!57272 () Unit!3390)

(assert (=> b!111014 (= e!72167 lt!57272)))

(assert (=> b!111014 (= lt!57272 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 lt!56765) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!111014 (isDefined!110 (getValueByKey!156 (toList!792 lt!56765) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!111015 () Bool)

(declare-fun Unit!3447 () Unit!3390)

(assert (=> b!111015 (= e!72167 Unit!3447)))

(declare-fun b!111016 () Bool)

(assert (=> b!111016 (= e!72168 (isDefined!110 (getValueByKey!156 (toList!792 lt!56765) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!31371 c!19759) b!111014))

(assert (= (and d!31371 (not c!19759)) b!111015))

(assert (= (and d!31371 (not res!54835)) b!111016))

(declare-fun m!126177 () Bool)

(assert (=> d!31371 m!126177))

(declare-fun m!126179 () Bool)

(assert (=> b!111014 m!126179))

(assert (=> b!111014 m!125799))

(assert (=> b!111014 m!125799))

(declare-fun m!126181 () Bool)

(assert (=> b!111014 m!126181))

(assert (=> b!111016 m!125799))

(assert (=> b!111016 m!125799))

(assert (=> b!111016 m!126181))

(assert (=> bm!11758 d!31371))

(assert (=> d!30903 d!30901))

(declare-fun d!31373 () Bool)

(assert (=> d!31373 (= (getValueByKey!156 lt!56391 (_1!1209 lt!56300)) (Some!161 (_2!1209 lt!56300)))))

(assert (=> d!31373 true))

(declare-fun _$22!446 () Unit!3390)

(assert (=> d!31373 (= (choose!691 lt!56391 (_1!1209 lt!56300) (_2!1209 lt!56300)) _$22!446)))

(declare-fun bs!4570 () Bool)

(assert (= bs!4570 d!31373))

(assert (=> bs!4570 m!124043))

(assert (=> d!30903 d!31373))

(declare-fun d!31375 () Bool)

(declare-fun res!54836 () Bool)

(declare-fun e!72169 () Bool)

(assert (=> d!31375 (=> res!54836 e!72169)))

(assert (=> d!31375 (= res!54836 (or ((_ is Nil!1624) lt!56391) ((_ is Nil!1624) (t!5755 lt!56391))))))

(assert (=> d!31375 (= (isStrictlySorted!306 lt!56391) e!72169)))

(declare-fun b!111017 () Bool)

(declare-fun e!72170 () Bool)

(assert (=> b!111017 (= e!72169 e!72170)))

(declare-fun res!54837 () Bool)

(assert (=> b!111017 (=> (not res!54837) (not e!72170))))

(assert (=> b!111017 (= res!54837 (bvslt (_1!1209 (h!2222 lt!56391)) (_1!1209 (h!2222 (t!5755 lt!56391)))))))

(declare-fun b!111018 () Bool)

(assert (=> b!111018 (= e!72170 (isStrictlySorted!306 (t!5755 lt!56391)))))

(assert (= (and d!31375 (not res!54836)) b!111017))

(assert (= (and b!111017 res!54837) b!111018))

(declare-fun m!126183 () Bool)

(assert (=> b!111018 m!126183))

(assert (=> d!30903 d!31375))

(declare-fun d!31377 () Bool)

(assert (=> d!31377 (= (isDefined!110 (getValueByKey!156 (toList!792 call!11685) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355))) (not (isEmpty!382 (getValueByKey!156 (toList!792 call!11685) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))))

(declare-fun bs!4571 () Bool)

(assert (= bs!4571 d!31377))

(assert (=> bs!4571 m!124961))

(declare-fun m!126185 () Bool)

(assert (=> bs!4571 m!126185))

(assert (=> b!110390 d!31377))

(declare-fun e!72172 () Option!162)

(declare-fun b!111021 () Bool)

(assert (=> b!111021 (= e!72172 (getValueByKey!156 (t!5755 (toList!792 call!11685)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))

(declare-fun c!19760 () Bool)

(declare-fun d!31379 () Bool)

(assert (=> d!31379 (= c!19760 (and ((_ is Cons!1623) (toList!792 call!11685)) (= (_1!1209 (h!2222 (toList!792 call!11685))) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355))))))

(declare-fun e!72171 () Option!162)

(assert (=> d!31379 (= (getValueByKey!156 (toList!792 call!11685) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) e!72171)))

(declare-fun b!111019 () Bool)

(assert (=> b!111019 (= e!72171 (Some!161 (_2!1209 (h!2222 (toList!792 call!11685)))))))

(declare-fun b!111020 () Bool)

(assert (=> b!111020 (= e!72171 e!72172)))

(declare-fun c!19761 () Bool)

(assert (=> b!111020 (= c!19761 (and ((_ is Cons!1623) (toList!792 call!11685)) (not (= (_1!1209 (h!2222 (toList!792 call!11685))) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))))

(declare-fun b!111022 () Bool)

(assert (=> b!111022 (= e!72172 None!160)))

(assert (= (and d!31379 c!19760) b!111019))

(assert (= (and d!31379 (not c!19760)) b!111020))

(assert (= (and b!111020 c!19761) b!111021))

(assert (= (and b!111020 (not c!19761)) b!111022))

(assert (=> b!111021 m!123865))

(declare-fun m!126187 () Bool)

(assert (=> b!111021 m!126187))

(assert (=> b!110390 d!31379))

(declare-fun d!31381 () Bool)

(declare-fun e!72173 () Bool)

(assert (=> d!31381 e!72173))

(declare-fun res!54838 () Bool)

(assert (=> d!31381 (=> (not res!54838) (not e!72173))))

(declare-fun lt!57274 () ListLongMap!1553)

(assert (=> d!31381 (= res!54838 (contains!827 lt!57274 (_1!1209 (ite (or c!19491 c!19494) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 newMap!16)) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16))))))))

(declare-fun lt!57273 () List!1627)

(assert (=> d!31381 (= lt!57274 (ListLongMap!1554 lt!57273))))

(declare-fun lt!57275 () Unit!3390)

(declare-fun lt!57276 () Unit!3390)

(assert (=> d!31381 (= lt!57275 lt!57276)))

(assert (=> d!31381 (= (getValueByKey!156 lt!57273 (_1!1209 (ite (or c!19491 c!19494) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 newMap!16)) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16))))) (Some!161 (_2!1209 (ite (or c!19491 c!19494) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 newMap!16)) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16))))))))

(assert (=> d!31381 (= lt!57276 (lemmaContainsTupThenGetReturnValue!75 lt!57273 (_1!1209 (ite (or c!19491 c!19494) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 newMap!16)) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16)))) (_2!1209 (ite (or c!19491 c!19494) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 newMap!16)) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16))))))))

(assert (=> d!31381 (= lt!57273 (insertStrictlySorted!78 (toList!792 (ite c!19491 call!11735 (ite c!19494 call!11736 call!11737))) (_1!1209 (ite (or c!19491 c!19494) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 newMap!16)) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16)))) (_2!1209 (ite (or c!19491 c!19494) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 newMap!16)) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16))))))))

(assert (=> d!31381 (= (+!139 (ite c!19491 call!11735 (ite c!19494 call!11736 call!11737)) (ite (or c!19491 c!19494) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 newMap!16)) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16)))) lt!57274)))

(declare-fun b!111023 () Bool)

(declare-fun res!54839 () Bool)

(assert (=> b!111023 (=> (not res!54839) (not e!72173))))

(assert (=> b!111023 (= res!54839 (= (getValueByKey!156 (toList!792 lt!57274) (_1!1209 (ite (or c!19491 c!19494) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 newMap!16)) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16))))) (Some!161 (_2!1209 (ite (or c!19491 c!19494) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 newMap!16)) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16)))))))))

(declare-fun b!111024 () Bool)

(assert (=> b!111024 (= e!72173 (contains!829 (toList!792 lt!57274) (ite (or c!19491 c!19494) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 newMap!16)) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16)))))))

(assert (= (and d!31381 res!54838) b!111023))

(assert (= (and b!111023 res!54839) b!111024))

(declare-fun m!126189 () Bool)

(assert (=> d!31381 m!126189))

(declare-fun m!126191 () Bool)

(assert (=> d!31381 m!126191))

(declare-fun m!126193 () Bool)

(assert (=> d!31381 m!126193))

(declare-fun m!126195 () Bool)

(assert (=> d!31381 m!126195))

(declare-fun m!126197 () Bool)

(assert (=> b!111023 m!126197))

(declare-fun m!126199 () Bool)

(assert (=> b!111024 m!126199))

(assert (=> bm!11738 d!31381))

(declare-fun b!111027 () Bool)

(declare-fun e!72175 () Option!162)

(assert (=> b!111027 (= e!72175 (getValueByKey!156 (t!5755 (toList!792 lt!56634)) (_1!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun d!31383 () Bool)

(declare-fun c!19762 () Bool)

(assert (=> d!31383 (= c!19762 (and ((_ is Cons!1623) (toList!792 lt!56634)) (= (_1!1209 (h!2222 (toList!792 lt!56634))) (_1!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(declare-fun e!72174 () Option!162)

(assert (=> d!31383 (= (getValueByKey!156 (toList!792 lt!56634) (_1!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))) e!72174)))

(declare-fun b!111025 () Bool)

(assert (=> b!111025 (= e!72174 (Some!161 (_2!1209 (h!2222 (toList!792 lt!56634)))))))

(declare-fun b!111026 () Bool)

(assert (=> b!111026 (= e!72174 e!72175)))

(declare-fun c!19763 () Bool)

(assert (=> b!111026 (= c!19763 (and ((_ is Cons!1623) (toList!792 lt!56634)) (not (= (_1!1209 (h!2222 (toList!792 lt!56634))) (_1!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))))

(declare-fun b!111028 () Bool)

(assert (=> b!111028 (= e!72175 None!160)))

(assert (= (and d!31383 c!19762) b!111025))

(assert (= (and d!31383 (not c!19762)) b!111026))

(assert (= (and b!111026 c!19763) b!111027))

(assert (= (and b!111026 (not c!19763)) b!111028))

(declare-fun m!126201 () Bool)

(assert (=> b!111027 m!126201))

(assert (=> b!110023 d!31383))

(declare-fun d!31385 () Bool)

(assert (=> d!31385 (= (apply!100 (+!139 lt!56592 (tuple2!2397 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))) lt!56578) (apply!100 lt!56592 lt!56578))))

(assert (=> d!31385 true))

(declare-fun _$34!905 () Unit!3390)

(assert (=> d!31385 (= (choose!701 lt!56592 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))) lt!56578) _$34!905)))

(declare-fun bs!4572 () Bool)

(assert (= bs!4572 d!31385))

(assert (=> bs!4572 m!124223))

(assert (=> bs!4572 m!124223))

(assert (=> bs!4572 m!124225))

(assert (=> bs!4572 m!124239))

(assert (=> d!30971 d!31385))

(declare-fun d!31387 () Bool)

(declare-fun e!72177 () Bool)

(assert (=> d!31387 e!72177))

(declare-fun res!54840 () Bool)

(assert (=> d!31387 (=> res!54840 e!72177)))

(declare-fun lt!57277 () Bool)

(assert (=> d!31387 (= res!54840 (not lt!57277))))

(declare-fun lt!57278 () Bool)

(assert (=> d!31387 (= lt!57277 lt!57278)))

(declare-fun lt!57279 () Unit!3390)

(declare-fun e!72176 () Unit!3390)

(assert (=> d!31387 (= lt!57279 e!72176)))

(declare-fun c!19764 () Bool)

(assert (=> d!31387 (= c!19764 lt!57278)))

(assert (=> d!31387 (= lt!57278 (containsKey!160 (toList!792 lt!56592) lt!56578))))

(assert (=> d!31387 (= (contains!827 lt!56592 lt!56578) lt!57277)))

(declare-fun b!111029 () Bool)

(declare-fun lt!57280 () Unit!3390)

(assert (=> b!111029 (= e!72176 lt!57280)))

(assert (=> b!111029 (= lt!57280 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 lt!56592) lt!56578))))

(assert (=> b!111029 (isDefined!110 (getValueByKey!156 (toList!792 lt!56592) lt!56578))))

(declare-fun b!111030 () Bool)

(declare-fun Unit!3448 () Unit!3390)

(assert (=> b!111030 (= e!72176 Unit!3448)))

(declare-fun b!111031 () Bool)

(assert (=> b!111031 (= e!72177 (isDefined!110 (getValueByKey!156 (toList!792 lt!56592) lt!56578)))))

(assert (= (and d!31387 c!19764) b!111029))

(assert (= (and d!31387 (not c!19764)) b!111030))

(assert (= (and d!31387 (not res!54840)) b!111031))

(declare-fun m!126203 () Bool)

(assert (=> d!31387 m!126203))

(declare-fun m!126205 () Bool)

(assert (=> b!111029 m!126205))

(assert (=> b!111029 m!125065))

(assert (=> b!111029 m!125065))

(declare-fun m!126207 () Bool)

(assert (=> b!111029 m!126207))

(assert (=> b!111031 m!125065))

(assert (=> b!111031 m!125065))

(assert (=> b!111031 m!126207))

(assert (=> d!30971 d!31387))

(assert (=> d!30971 d!30979))

(assert (=> d!30971 d!30987))

(assert (=> d!30971 d!30989))

(declare-fun d!31389 () Bool)

(declare-fun e!72179 () Bool)

(assert (=> d!31389 e!72179))

(declare-fun res!54841 () Bool)

(assert (=> d!31389 (=> res!54841 e!72179)))

(declare-fun lt!57281 () Bool)

(assert (=> d!31389 (= res!54841 (not lt!57281))))

(declare-fun lt!57282 () Bool)

(assert (=> d!31389 (= lt!57281 lt!57282)))

(declare-fun lt!57283 () Unit!3390)

(declare-fun e!72178 () Unit!3390)

(assert (=> d!31389 (= lt!57283 e!72178)))

(declare-fun c!19765 () Bool)

(assert (=> d!31389 (= c!19765 lt!57282)))

(assert (=> d!31389 (= lt!57282 (containsKey!160 (toList!792 lt!56946) (_1!1209 (tuple2!2397 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(assert (=> d!31389 (= (contains!827 lt!56946 (_1!1209 (tuple2!2397 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))) lt!57281)))

(declare-fun b!111032 () Bool)

(declare-fun lt!57284 () Unit!3390)

(assert (=> b!111032 (= e!72178 lt!57284)))

(assert (=> b!111032 (= lt!57284 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 lt!56946) (_1!1209 (tuple2!2397 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(assert (=> b!111032 (isDefined!110 (getValueByKey!156 (toList!792 lt!56946) (_1!1209 (tuple2!2397 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun b!111033 () Bool)

(declare-fun Unit!3449 () Unit!3390)

(assert (=> b!111033 (= e!72178 Unit!3449)))

(declare-fun b!111034 () Bool)

(assert (=> b!111034 (= e!72179 (isDefined!110 (getValueByKey!156 (toList!792 lt!56946) (_1!1209 (tuple2!2397 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(assert (= (and d!31389 c!19765) b!111032))

(assert (= (and d!31389 (not c!19765)) b!111033))

(assert (= (and d!31389 (not res!54841)) b!111034))

(declare-fun m!126209 () Bool)

(assert (=> d!31389 m!126209))

(declare-fun m!126211 () Bool)

(assert (=> b!111032 m!126211))

(assert (=> b!111032 m!125049))

(assert (=> b!111032 m!125049))

(declare-fun m!126213 () Bool)

(assert (=> b!111032 m!126213))

(assert (=> b!111034 m!125049))

(assert (=> b!111034 m!125049))

(assert (=> b!111034 m!126213))

(assert (=> d!30985 d!31389))

(declare-fun b!111037 () Bool)

(declare-fun e!72181 () Option!162)

(assert (=> b!111037 (= e!72181 (getValueByKey!156 (t!5755 lt!56945) (_1!1209 (tuple2!2397 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun c!19766 () Bool)

(declare-fun d!31391 () Bool)

(assert (=> d!31391 (= c!19766 (and ((_ is Cons!1623) lt!56945) (= (_1!1209 (h!2222 lt!56945)) (_1!1209 (tuple2!2397 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(declare-fun e!72180 () Option!162)

(assert (=> d!31391 (= (getValueByKey!156 lt!56945 (_1!1209 (tuple2!2397 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))) e!72180)))

(declare-fun b!111035 () Bool)

(assert (=> b!111035 (= e!72180 (Some!161 (_2!1209 (h!2222 lt!56945))))))

(declare-fun b!111036 () Bool)

(assert (=> b!111036 (= e!72180 e!72181)))

(declare-fun c!19767 () Bool)

(assert (=> b!111036 (= c!19767 (and ((_ is Cons!1623) lt!56945) (not (= (_1!1209 (h!2222 lt!56945)) (_1!1209 (tuple2!2397 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))))

(declare-fun b!111038 () Bool)

(assert (=> b!111038 (= e!72181 None!160)))

(assert (= (and d!31391 c!19766) b!111035))

(assert (= (and d!31391 (not c!19766)) b!111036))

(assert (= (and b!111036 c!19767) b!111037))

(assert (= (and b!111036 (not c!19767)) b!111038))

(declare-fun m!126215 () Bool)

(assert (=> b!111037 m!126215))

(assert (=> d!30985 d!31391))

(declare-fun d!31393 () Bool)

(assert (=> d!31393 (= (getValueByKey!156 lt!56945 (_1!1209 (tuple2!2397 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))) (Some!161 (_2!1209 (tuple2!2397 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun lt!57285 () Unit!3390)

(assert (=> d!31393 (= lt!57285 (choose!691 lt!56945 (_1!1209 (tuple2!2397 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992))))) (_2!1209 (tuple2!2397 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun e!72182 () Bool)

(assert (=> d!31393 e!72182))

(declare-fun res!54842 () Bool)

(assert (=> d!31393 (=> (not res!54842) (not e!72182))))

(assert (=> d!31393 (= res!54842 (isStrictlySorted!306 lt!56945))))

(assert (=> d!31393 (= (lemmaContainsTupThenGetReturnValue!75 lt!56945 (_1!1209 (tuple2!2397 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992))))) (_2!1209 (tuple2!2397 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))) lt!57285)))

(declare-fun b!111039 () Bool)

(declare-fun res!54843 () Bool)

(assert (=> b!111039 (=> (not res!54843) (not e!72182))))

(assert (=> b!111039 (= res!54843 (containsKey!160 lt!56945 (_1!1209 (tuple2!2397 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun b!111040 () Bool)

(assert (=> b!111040 (= e!72182 (contains!829 lt!56945 (tuple2!2397 (_1!1209 (tuple2!2397 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992))))) (_2!1209 (tuple2!2397 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(assert (= (and d!31393 res!54842) b!111039))

(assert (= (and b!111039 res!54843) b!111040))

(assert (=> d!31393 m!125043))

(declare-fun m!126217 () Bool)

(assert (=> d!31393 m!126217))

(declare-fun m!126219 () Bool)

(assert (=> d!31393 m!126219))

(declare-fun m!126221 () Bool)

(assert (=> b!111039 m!126221))

(declare-fun m!126223 () Bool)

(assert (=> b!111040 m!126223))

(assert (=> d!30985 d!31393))

(declare-fun c!19768 () Bool)

(declare-fun c!19771 () Bool)

(declare-fun b!111041 () Bool)

(declare-fun e!72184 () List!1627)

(assert (=> b!111041 (= e!72184 (ite c!19768 (t!5755 (toList!792 lt!56581)) (ite c!19771 (Cons!1623 (h!2222 (toList!792 lt!56581)) (t!5755 (toList!792 lt!56581))) Nil!1624)))))

(declare-fun b!111042 () Bool)

(assert (=> b!111042 (= e!72184 (insertStrictlySorted!78 (t!5755 (toList!792 lt!56581)) (_1!1209 (tuple2!2397 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992))))) (_2!1209 (tuple2!2397 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun bm!11849 () Bool)

(declare-fun call!11854 () List!1627)

(declare-fun call!11852 () List!1627)

(assert (=> bm!11849 (= call!11854 call!11852)))

(declare-fun b!111043 () Bool)

(declare-fun e!72183 () List!1627)

(declare-fun call!11853 () List!1627)

(assert (=> b!111043 (= e!72183 call!11853)))

(declare-fun b!111044 () Bool)

(assert (=> b!111044 (= c!19771 (and ((_ is Cons!1623) (toList!792 lt!56581)) (bvsgt (_1!1209 (h!2222 (toList!792 lt!56581))) (_1!1209 (tuple2!2397 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(declare-fun e!72186 () List!1627)

(assert (=> b!111044 (= e!72186 e!72183)))

(declare-fun b!111045 () Bool)

(declare-fun res!54845 () Bool)

(declare-fun e!72185 () Bool)

(assert (=> b!111045 (=> (not res!54845) (not e!72185))))

(declare-fun lt!57286 () List!1627)

(assert (=> b!111045 (= res!54845 (containsKey!160 lt!57286 (_1!1209 (tuple2!2397 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun b!111047 () Bool)

(assert (=> b!111047 (= e!72183 call!11853)))

(declare-fun bm!11850 () Bool)

(assert (=> bm!11850 (= call!11853 call!11854)))

(declare-fun b!111048 () Bool)

(assert (=> b!111048 (= e!72186 call!11854)))

(declare-fun b!111049 () Bool)

(declare-fun e!72187 () List!1627)

(assert (=> b!111049 (= e!72187 e!72186)))

(assert (=> b!111049 (= c!19768 (and ((_ is Cons!1623) (toList!792 lt!56581)) (= (_1!1209 (h!2222 (toList!792 lt!56581))) (_1!1209 (tuple2!2397 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(declare-fun d!31395 () Bool)

(assert (=> d!31395 e!72185))

(declare-fun res!54844 () Bool)

(assert (=> d!31395 (=> (not res!54844) (not e!72185))))

(assert (=> d!31395 (= res!54844 (isStrictlySorted!306 lt!57286))))

(assert (=> d!31395 (= lt!57286 e!72187)))

(declare-fun c!19770 () Bool)

(assert (=> d!31395 (= c!19770 (and ((_ is Cons!1623) (toList!792 lt!56581)) (bvslt (_1!1209 (h!2222 (toList!792 lt!56581))) (_1!1209 (tuple2!2397 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(assert (=> d!31395 (isStrictlySorted!306 (toList!792 lt!56581))))

(assert (=> d!31395 (= (insertStrictlySorted!78 (toList!792 lt!56581) (_1!1209 (tuple2!2397 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992))))) (_2!1209 (tuple2!2397 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))) lt!57286)))

(declare-fun b!111046 () Bool)

(assert (=> b!111046 (= e!72187 call!11852)))

(declare-fun b!111050 () Bool)

(assert (=> b!111050 (= e!72185 (contains!829 lt!57286 (tuple2!2397 (_1!1209 (tuple2!2397 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992))))) (_2!1209 (tuple2!2397 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(declare-fun bm!11851 () Bool)

(assert (=> bm!11851 (= call!11852 ($colon$colon!82 e!72184 (ite c!19770 (h!2222 (toList!792 lt!56581)) (tuple2!2397 (_1!1209 (tuple2!2397 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992))))) (_2!1209 (tuple2!2397 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))))

(declare-fun c!19769 () Bool)

(assert (=> bm!11851 (= c!19769 c!19770)))

(assert (= (and d!31395 c!19770) b!111046))

(assert (= (and d!31395 (not c!19770)) b!111049))

(assert (= (and b!111049 c!19768) b!111048))

(assert (= (and b!111049 (not c!19768)) b!111044))

(assert (= (and b!111044 c!19771) b!111043))

(assert (= (and b!111044 (not c!19771)) b!111047))

(assert (= (or b!111043 b!111047) bm!11850))

(assert (= (or b!111048 bm!11850) bm!11849))

(assert (= (or b!111046 bm!11849) bm!11851))

(assert (= (and bm!11851 c!19769) b!111042))

(assert (= (and bm!11851 (not c!19769)) b!111041))

(assert (= (and d!31395 res!54844) b!111045))

(assert (= (and b!111045 res!54845) b!111050))

(declare-fun m!126225 () Bool)

(assert (=> d!31395 m!126225))

(declare-fun m!126227 () Bool)

(assert (=> d!31395 m!126227))

(declare-fun m!126229 () Bool)

(assert (=> b!111045 m!126229))

(declare-fun m!126231 () Bool)

(assert (=> bm!11851 m!126231))

(declare-fun m!126233 () Bool)

(assert (=> b!111042 m!126233))

(declare-fun m!126235 () Bool)

(assert (=> b!111050 m!126235))

(assert (=> d!30985 d!31395))

(assert (=> b!110330 d!30819))

(declare-fun d!31397 () Bool)

(assert (=> d!31397 (isDefined!110 (getValueByKey!156 (toList!792 lt!56425) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!57287 () Unit!3390)

(assert (=> d!31397 (= lt!57287 (choose!699 (toList!792 lt!56425) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!72188 () Bool)

(assert (=> d!31397 e!72188))

(declare-fun res!54846 () Bool)

(assert (=> d!31397 (=> (not res!54846) (not e!72188))))

(assert (=> d!31397 (= res!54846 (isStrictlySorted!306 (toList!792 lt!56425)))))

(assert (=> d!31397 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 lt!56425) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!57287)))

(declare-fun b!111051 () Bool)

(assert (=> b!111051 (= e!72188 (containsKey!160 (toList!792 lt!56425) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!31397 res!54846) b!111051))

(assert (=> d!31397 m!124087))

(assert (=> d!31397 m!124893))

(assert (=> d!31397 m!124893))

(assert (=> d!31397 m!124895))

(assert (=> d!31397 m!124087))

(declare-fun m!126237 () Bool)

(assert (=> d!31397 m!126237))

(declare-fun m!126239 () Bool)

(assert (=> d!31397 m!126239))

(assert (=> b!111051 m!124087))

(assert (=> b!111051 m!124889))

(assert (=> b!110339 d!31397))

(assert (=> b!110339 d!31207))

(assert (=> b!110339 d!31145))

(declare-fun d!31399 () Bool)

(declare-fun e!72189 () Bool)

(assert (=> d!31399 e!72189))

(declare-fun res!54847 () Bool)

(assert (=> d!31399 (=> (not res!54847) (not e!72189))))

(declare-fun lt!57289 () ListLongMap!1553)

(assert (=> d!31399 (= res!54847 (contains!827 lt!57289 (_1!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16))))))))

(declare-fun lt!57288 () List!1627)

(assert (=> d!31399 (= lt!57289 (ListLongMap!1554 lt!57288))))

(declare-fun lt!57290 () Unit!3390)

(declare-fun lt!57291 () Unit!3390)

(assert (=> d!31399 (= lt!57290 lt!57291)))

(assert (=> d!31399 (= (getValueByKey!156 lt!57288 (_1!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16))))) (Some!161 (_2!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16))))))))

(assert (=> d!31399 (= lt!57291 (lemmaContainsTupThenGetReturnValue!75 lt!57288 (_1!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16)))) (_2!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16))))))))

(assert (=> d!31399 (= lt!57288 (insertStrictlySorted!78 (toList!792 call!11747) (_1!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16)))) (_2!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16))))))))

(assert (=> d!31399 (= (+!139 call!11747 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16)))) lt!57289)))

(declare-fun b!111052 () Bool)

(declare-fun res!54848 () Bool)

(assert (=> b!111052 (=> (not res!54848) (not e!72189))))

(assert (=> b!111052 (= res!54848 (= (getValueByKey!156 (toList!792 lt!57289) (_1!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16))))) (Some!161 (_2!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16)))))))))

(declare-fun b!111053 () Bool)

(assert (=> b!111053 (= e!72189 (contains!829 (toList!792 lt!57289) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16)))))))

(assert (= (and d!31399 res!54847) b!111052))

(assert (= (and b!111052 res!54848) b!111053))

(declare-fun m!126241 () Bool)

(assert (=> d!31399 m!126241))

(declare-fun m!126243 () Bool)

(assert (=> d!31399 m!126243))

(declare-fun m!126245 () Bool)

(assert (=> d!31399 m!126245))

(declare-fun m!126247 () Bool)

(assert (=> d!31399 m!126247))

(declare-fun m!126249 () Bool)

(assert (=> b!111052 m!126249))

(declare-fun m!126251 () Bool)

(assert (=> b!111053 m!126251))

(assert (=> b!110113 d!31399))

(declare-fun d!31401 () Bool)

(declare-fun lt!57292 () Bool)

(assert (=> d!31401 (= lt!57292 (select (content!113 lt!56907) (tuple2!2397 (_1!1209 lt!56299) (_2!1209 lt!56299))))))

(declare-fun e!72190 () Bool)

(assert (=> d!31401 (= lt!57292 e!72190)))

(declare-fun res!54849 () Bool)

(assert (=> d!31401 (=> (not res!54849) (not e!72190))))

(assert (=> d!31401 (= res!54849 ((_ is Cons!1623) lt!56907))))

(assert (=> d!31401 (= (contains!829 lt!56907 (tuple2!2397 (_1!1209 lt!56299) (_2!1209 lt!56299))) lt!57292)))

(declare-fun b!111054 () Bool)

(declare-fun e!72191 () Bool)

(assert (=> b!111054 (= e!72190 e!72191)))

(declare-fun res!54850 () Bool)

(assert (=> b!111054 (=> res!54850 e!72191)))

(assert (=> b!111054 (= res!54850 (= (h!2222 lt!56907) (tuple2!2397 (_1!1209 lt!56299) (_2!1209 lt!56299))))))

(declare-fun b!111055 () Bool)

(assert (=> b!111055 (= e!72191 (contains!829 (t!5755 lt!56907) (tuple2!2397 (_1!1209 lt!56299) (_2!1209 lt!56299))))))

(assert (= (and d!31401 res!54849) b!111054))

(assert (= (and b!111054 (not res!54850)) b!111055))

(declare-fun m!126253 () Bool)

(assert (=> d!31401 m!126253))

(declare-fun m!126255 () Bool)

(assert (=> d!31401 m!126255))

(declare-fun m!126257 () Bool)

(assert (=> b!111055 m!126257))

(assert (=> b!110362 d!31401))

(declare-fun d!31403 () Bool)

(assert (=> d!31403 (isDefined!110 (getValueByKey!156 (toList!792 lt!56589) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!57293 () Unit!3390)

(assert (=> d!31403 (= lt!57293 (choose!699 (toList!792 lt!56589) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!72192 () Bool)

(assert (=> d!31403 e!72192))

(declare-fun res!54851 () Bool)

(assert (=> d!31403 (=> (not res!54851) (not e!72192))))

(assert (=> d!31403 (= res!54851 (isStrictlySorted!306 (toList!792 lt!56589)))))

(assert (=> d!31403 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 lt!56589) #b1000000000000000000000000000000000000000000000000000000000000000) lt!57293)))

(declare-fun b!111056 () Bool)

(assert (=> b!111056 (= e!72192 (containsKey!160 (toList!792 lt!56589) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!31403 res!54851) b!111056))

(assert (=> d!31403 m!124413))

(assert (=> d!31403 m!124413))

(assert (=> d!31403 m!124415))

(declare-fun m!126259 () Bool)

(assert (=> d!31403 m!126259))

(declare-fun m!126261 () Bool)

(assert (=> d!31403 m!126261))

(assert (=> b!111056 m!124409))

(assert (=> b!110063 d!31403))

(assert (=> b!110063 d!31237))

(assert (=> b!110063 d!31239))

(declare-fun d!31405 () Bool)

(declare-fun lt!57294 () Bool)

(assert (=> d!31405 (= lt!57294 (select (content!113 (toList!792 lt!56912)) (ite (or c!19448 c!19451) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun e!72193 () Bool)

(assert (=> d!31405 (= lt!57294 e!72193)))

(declare-fun res!54852 () Bool)

(assert (=> d!31405 (=> (not res!54852) (not e!72193))))

(assert (=> d!31405 (= res!54852 ((_ is Cons!1623) (toList!792 lt!56912)))))

(assert (=> d!31405 (= (contains!829 (toList!792 lt!56912) (ite (or c!19448 c!19451) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))) lt!57294)))

(declare-fun b!111057 () Bool)

(declare-fun e!72194 () Bool)

(assert (=> b!111057 (= e!72193 e!72194)))

(declare-fun res!54853 () Bool)

(assert (=> b!111057 (=> res!54853 e!72194)))

(assert (=> b!111057 (= res!54853 (= (h!2222 (toList!792 lt!56912)) (ite (or c!19448 c!19451) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun b!111058 () Bool)

(assert (=> b!111058 (= e!72194 (contains!829 (t!5755 (toList!792 lt!56912)) (ite (or c!19448 c!19451) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(assert (= (and d!31405 res!54852) b!111057))

(assert (= (and b!111057 (not res!54853)) b!111058))

(declare-fun m!126263 () Bool)

(assert (=> d!31405 m!126263))

(declare-fun m!126265 () Bool)

(assert (=> d!31405 m!126265))

(declare-fun m!126267 () Bool)

(assert (=> b!111058 m!126267))

(assert (=> b!110375 d!31405))

(declare-fun e!72196 () Option!162)

(declare-fun b!111061 () Bool)

(assert (=> b!111061 (= e!72196 (getValueByKey!156 (t!5755 (toList!792 lt!56946)) (_1!1209 (tuple2!2397 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun d!31407 () Bool)

(declare-fun c!19772 () Bool)

(assert (=> d!31407 (= c!19772 (and ((_ is Cons!1623) (toList!792 lt!56946)) (= (_1!1209 (h!2222 (toList!792 lt!56946))) (_1!1209 (tuple2!2397 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(declare-fun e!72195 () Option!162)

(assert (=> d!31407 (= (getValueByKey!156 (toList!792 lt!56946) (_1!1209 (tuple2!2397 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))) e!72195)))

(declare-fun b!111059 () Bool)

(assert (=> b!111059 (= e!72195 (Some!161 (_2!1209 (h!2222 (toList!792 lt!56946)))))))

(declare-fun b!111060 () Bool)

(assert (=> b!111060 (= e!72195 e!72196)))

(declare-fun c!19773 () Bool)

(assert (=> b!111060 (= c!19773 (and ((_ is Cons!1623) (toList!792 lt!56946)) (not (= (_1!1209 (h!2222 (toList!792 lt!56946))) (_1!1209 (tuple2!2397 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))))

(declare-fun b!111062 () Bool)

(assert (=> b!111062 (= e!72196 None!160)))

(assert (= (and d!31407 c!19772) b!111059))

(assert (= (and d!31407 (not c!19772)) b!111060))

(assert (= (and b!111060 c!19773) b!111061))

(assert (= (and b!111060 (not c!19773)) b!111062))

(declare-fun m!126269 () Bool)

(assert (=> b!111061 m!126269))

(assert (=> b!110406 d!31407))

(declare-fun d!31409 () Bool)

(declare-fun e!72198 () Bool)

(assert (=> d!31409 e!72198))

(declare-fun res!54854 () Bool)

(assert (=> d!31409 (=> res!54854 e!72198)))

(declare-fun lt!57295 () Bool)

(assert (=> d!31409 (= res!54854 (not lt!57295))))

(declare-fun lt!57296 () Bool)

(assert (=> d!31409 (= lt!57295 lt!57296)))

(declare-fun lt!57297 () Unit!3390)

(declare-fun e!72197 () Unit!3390)

(assert (=> d!31409 (= lt!57297 e!72197)))

(declare-fun c!19774 () Bool)

(assert (=> d!31409 (= c!19774 lt!57296)))

(assert (=> d!31409 (= lt!57296 (containsKey!160 (toList!792 lt!56706) (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!31409 (= (contains!827 lt!56706 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)) lt!57295)))

(declare-fun b!111063 () Bool)

(declare-fun lt!57298 () Unit!3390)

(assert (=> b!111063 (= e!72197 lt!57298)))

(assert (=> b!111063 (= lt!57298 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 lt!56706) (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!111063 (isDefined!110 (getValueByKey!156 (toList!792 lt!56706) (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!111064 () Bool)

(declare-fun Unit!3450 () Unit!3390)

(assert (=> b!111064 (= e!72197 Unit!3450)))

(declare-fun b!111065 () Bool)

(assert (=> b!111065 (= e!72198 (isDefined!110 (getValueByKey!156 (toList!792 lt!56706) (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!31409 c!19774) b!111063))

(assert (= (and d!31409 (not c!19774)) b!111064))

(assert (= (and d!31409 (not res!54854)) b!111065))

(assert (=> d!31409 m!124447))

(declare-fun m!126271 () Bool)

(assert (=> d!31409 m!126271))

(assert (=> b!111063 m!124447))

(declare-fun m!126273 () Bool)

(assert (=> b!111063 m!126273))

(assert (=> b!111063 m!124447))

(assert (=> b!111063 m!126049))

(assert (=> b!111063 m!126049))

(declare-fun m!126275 () Bool)

(assert (=> b!111063 m!126275))

(assert (=> b!111065 m!124447))

(assert (=> b!111065 m!126049))

(assert (=> b!111065 m!126049))

(assert (=> b!111065 m!126275))

(assert (=> b!110108 d!31409))

(declare-fun d!31411 () Bool)

(assert (=> d!31411 (= (get!1350 (getValueByKey!156 (toList!792 (+!139 lt!56581 (tuple2!2397 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))) lt!56585)) (v!2926 (getValueByKey!156 (toList!792 (+!139 lt!56581 (tuple2!2397 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))) lt!56585)))))

(assert (=> d!30975 d!31411))

(declare-fun b!111068 () Bool)

(declare-fun e!72200 () Option!162)

(assert (=> b!111068 (= e!72200 (getValueByKey!156 (t!5755 (toList!792 (+!139 lt!56581 (tuple2!2397 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))) lt!56585))))

(declare-fun c!19775 () Bool)

(declare-fun d!31413 () Bool)

(assert (=> d!31413 (= c!19775 (and ((_ is Cons!1623) (toList!792 (+!139 lt!56581 (tuple2!2397 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))) (= (_1!1209 (h!2222 (toList!792 (+!139 lt!56581 (tuple2!2397 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))) lt!56585)))))

(declare-fun e!72199 () Option!162)

(assert (=> d!31413 (= (getValueByKey!156 (toList!792 (+!139 lt!56581 (tuple2!2397 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))) lt!56585) e!72199)))

(declare-fun b!111066 () Bool)

(assert (=> b!111066 (= e!72199 (Some!161 (_2!1209 (h!2222 (toList!792 (+!139 lt!56581 (tuple2!2397 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))))))))

(declare-fun b!111067 () Bool)

(assert (=> b!111067 (= e!72199 e!72200)))

(declare-fun c!19776 () Bool)

(assert (=> b!111067 (= c!19776 (and ((_ is Cons!1623) (toList!792 (+!139 lt!56581 (tuple2!2397 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))) (not (= (_1!1209 (h!2222 (toList!792 (+!139 lt!56581 (tuple2!2397 lt!56579 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))) lt!56585))))))

(declare-fun b!111069 () Bool)

(assert (=> b!111069 (= e!72200 None!160)))

(assert (= (and d!31413 c!19775) b!111066))

(assert (= (and d!31413 (not c!19775)) b!111067))

(assert (= (and b!111067 c!19776) b!111068))

(assert (= (and b!111067 (not c!19776)) b!111069))

(declare-fun m!126277 () Bool)

(assert (=> b!111068 m!126277))

(assert (=> d!30975 d!31413))

(assert (=> bm!11774 d!30791))

(assert (=> bm!11731 d!30927))

(declare-fun b!111070 () Bool)

(declare-fun e!72205 () Bool)

(declare-fun e!72206 () Bool)

(assert (=> b!111070 (= e!72205 e!72206)))

(declare-fun c!19779 () Bool)

(declare-fun e!72207 () Bool)

(assert (=> b!111070 (= c!19779 e!72207)))

(declare-fun res!54858 () Bool)

(assert (=> b!111070 (=> (not res!54858) (not e!72207))))

(assert (=> b!111070 (= res!54858 (bvslt #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))))))

(declare-fun b!111071 () Bool)

(assert (=> b!111071 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))))))

(assert (=> b!111071 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2327 (_values!2609 newMap!16))))))

(declare-fun e!72201 () Bool)

(declare-fun lt!57304 () ListLongMap!1553)

(assert (=> b!111071 (= e!72201 (= (apply!100 lt!57304 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)) (get!1347 (select (arr!2069 (_values!2609 newMap!16)) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2626 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!111072 () Bool)

(declare-fun e!72202 () Bool)

(assert (=> b!111072 (= e!72202 (= lt!57304 (getCurrentListMapNoExtraKeys!104 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2626 newMap!16))))))

(declare-fun bm!11852 () Bool)

(declare-fun call!11855 () ListLongMap!1553)

(assert (=> bm!11852 (= call!11855 (getCurrentListMapNoExtraKeys!104 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2626 newMap!16)))))

(declare-fun b!111073 () Bool)

(declare-fun e!72203 () ListLongMap!1553)

(assert (=> b!111073 (= e!72203 (ListLongMap!1554 Nil!1624))))

(declare-fun b!111074 () Bool)

(declare-fun e!72204 () ListLongMap!1553)

(assert (=> b!111074 (= e!72203 e!72204)))

(declare-fun c!19777 () Bool)

(assert (=> b!111074 (= c!19777 (validKeyInArray!0 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!111075 () Bool)

(declare-fun res!54855 () Bool)

(assert (=> b!111075 (=> (not res!54855) (not e!72205))))

(assert (=> b!111075 (= res!54855 (not (contains!827 lt!57304 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!111076 () Bool)

(assert (=> b!111076 (= e!72206 e!72201)))

(assert (=> b!111076 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))))))

(declare-fun res!54856 () Bool)

(assert (=> b!111076 (= res!54856 (contains!827 lt!57304 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!111076 (=> (not res!54856) (not e!72201))))

(declare-fun d!31415 () Bool)

(assert (=> d!31415 e!72205))

(declare-fun res!54857 () Bool)

(assert (=> d!31415 (=> (not res!54857) (not e!72205))))

(assert (=> d!31415 (= res!54857 (not (contains!827 lt!57304 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!31415 (= lt!57304 e!72203)))

(declare-fun c!19778 () Bool)

(assert (=> d!31415 (= c!19778 (bvsge #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))))))

(assert (=> d!31415 (validMask!0 (mask!6793 newMap!16))))

(assert (=> d!31415 (= (getCurrentListMapNoExtraKeys!104 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) lt!57304)))

(declare-fun b!111077 () Bool)

(assert (=> b!111077 (= e!72202 (isEmpty!380 lt!57304))))

(declare-fun b!111078 () Bool)

(assert (=> b!111078 (= e!72207 (validKeyInArray!0 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!111078 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!111079 () Bool)

(declare-fun lt!57302 () Unit!3390)

(declare-fun lt!57305 () Unit!3390)

(assert (=> b!111079 (= lt!57302 lt!57305)))

(declare-fun lt!57300 () V!3241)

(declare-fun lt!57299 () ListLongMap!1553)

(declare-fun lt!57301 () (_ BitVec 64))

(declare-fun lt!57303 () (_ BitVec 64))

(assert (=> b!111079 (not (contains!827 (+!139 lt!57299 (tuple2!2397 lt!57303 lt!57300)) lt!57301))))

(assert (=> b!111079 (= lt!57305 (addStillNotContains!49 lt!57299 lt!57303 lt!57300 lt!57301))))

(assert (=> b!111079 (= lt!57301 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!111079 (= lt!57300 (get!1347 (select (arr!2069 (_values!2609 newMap!16)) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2626 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!111079 (= lt!57303 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!111079 (= lt!57299 call!11855)))

(assert (=> b!111079 (= e!72204 (+!139 call!11855 (tuple2!2397 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000) (get!1347 (select (arr!2069 (_values!2609 newMap!16)) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2626 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!111080 () Bool)

(assert (=> b!111080 (= e!72204 call!11855)))

(declare-fun b!111081 () Bool)

(assert (=> b!111081 (= e!72206 e!72202)))

(declare-fun c!19780 () Bool)

(assert (=> b!111081 (= c!19780 (bvslt #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))))))

(assert (= (and d!31415 c!19778) b!111073))

(assert (= (and d!31415 (not c!19778)) b!111074))

(assert (= (and b!111074 c!19777) b!111079))

(assert (= (and b!111074 (not c!19777)) b!111080))

(assert (= (or b!111079 b!111080) bm!11852))

(assert (= (and d!31415 res!54857) b!111075))

(assert (= (and b!111075 res!54855) b!111070))

(assert (= (and b!111070 res!54858) b!111078))

(assert (= (and b!111070 c!19779) b!111076))

(assert (= (and b!111070 (not c!19779)) b!111081))

(assert (= (and b!111076 res!54856) b!111071))

(assert (= (and b!111081 c!19780) b!111072))

(assert (= (and b!111081 (not c!19780)) b!111077))

(declare-fun b_lambda!4961 () Bool)

(assert (=> (not b_lambda!4961) (not b!111071)))

(assert (=> b!111071 t!5766))

(declare-fun b_and!6829 () Bool)

(assert (= b_and!6825 (and (=> t!5766 result!3533) b_and!6829)))

(assert (=> b!111071 t!5768))

(declare-fun b_and!6831 () Bool)

(assert (= b_and!6827 (and (=> t!5768 result!3535) b_and!6831)))

(declare-fun b_lambda!4963 () Bool)

(assert (=> (not b_lambda!4963) (not b!111079)))

(assert (=> b!111079 t!5766))

(declare-fun b_and!6833 () Bool)

(assert (= b_and!6829 (and (=> t!5766 result!3533) b_and!6833)))

(assert (=> b!111079 t!5768))

(declare-fun b_and!6835 () Bool)

(assert (= b_and!6831 (and (=> t!5768 result!3535) b_and!6835)))

(assert (=> b!111071 m!124447))

(assert (=> b!111071 m!124447))

(declare-fun m!126279 () Bool)

(assert (=> b!111071 m!126279))

(assert (=> b!111071 m!124445))

(assert (=> b!111071 m!124445))

(assert (=> b!111071 m!124451))

(assert (=> b!111071 m!124453))

(assert (=> b!111071 m!124451))

(assert (=> b!111078 m!124447))

(assert (=> b!111078 m!124447))

(assert (=> b!111078 m!124463))

(declare-fun m!126281 () Bool)

(assert (=> b!111077 m!126281))

(assert (=> b!111076 m!124447))

(assert (=> b!111076 m!124447))

(declare-fun m!126283 () Bool)

(assert (=> b!111076 m!126283))

(declare-fun m!126285 () Bool)

(assert (=> b!111075 m!126285))

(declare-fun m!126287 () Bool)

(assert (=> b!111072 m!126287))

(assert (=> b!111074 m!124447))

(assert (=> b!111074 m!124447))

(assert (=> b!111074 m!124463))

(declare-fun m!126289 () Bool)

(assert (=> d!31415 m!126289))

(assert (=> d!31415 m!124269))

(assert (=> bm!11852 m!126287))

(assert (=> b!111079 m!124447))

(declare-fun m!126291 () Bool)

(assert (=> b!111079 m!126291))

(declare-fun m!126293 () Bool)

(assert (=> b!111079 m!126293))

(declare-fun m!126295 () Bool)

(assert (=> b!111079 m!126295))

(declare-fun m!126297 () Bool)

(assert (=> b!111079 m!126297))

(assert (=> b!111079 m!124445))

(assert (=> b!111079 m!124445))

(assert (=> b!111079 m!124451))

(assert (=> b!111079 m!124453))

(assert (=> b!111079 m!126295))

(assert (=> b!111079 m!124451))

(assert (=> bm!11737 d!31415))

(declare-fun d!31417 () Bool)

(assert (=> d!31417 (contains!827 (+!139 lt!56753 (tuple2!2397 lt!56766 (zeroValue!2497 newMap!16))) lt!56750)))

(declare-fun lt!57306 () Unit!3390)

(assert (=> d!31417 (= lt!57306 (choose!700 lt!56753 lt!56766 (zeroValue!2497 newMap!16) lt!56750))))

(assert (=> d!31417 (contains!827 lt!56753 lt!56750)))

(assert (=> d!31417 (= (addStillContains!76 lt!56753 lt!56766 (zeroValue!2497 newMap!16) lt!56750) lt!57306)))

(declare-fun bs!4573 () Bool)

(assert (= bs!4573 d!31417))

(assert (=> bs!4573 m!124709))

(assert (=> bs!4573 m!124709))

(assert (=> bs!4573 m!124711))

(declare-fun m!126299 () Bool)

(assert (=> bs!4573 m!126299))

(declare-fun m!126301 () Bool)

(assert (=> bs!4573 m!126301))

(assert (=> b!110223 d!31417))

(declare-fun d!31419 () Bool)

(assert (=> d!31419 (= (apply!100 (+!139 lt!56768 (tuple2!2397 lt!56759 (zeroValue!2497 newMap!16))) lt!56754) (get!1350 (getValueByKey!156 (toList!792 (+!139 lt!56768 (tuple2!2397 lt!56759 (zeroValue!2497 newMap!16)))) lt!56754)))))

(declare-fun bs!4574 () Bool)

(assert (= bs!4574 d!31419))

(declare-fun m!126303 () Bool)

(assert (=> bs!4574 m!126303))

(assert (=> bs!4574 m!126303))

(declare-fun m!126305 () Bool)

(assert (=> bs!4574 m!126305))

(assert (=> b!110223 d!31419))

(declare-fun d!31421 () Bool)

(assert (=> d!31421 (= (apply!100 lt!56757 lt!56761) (get!1350 (getValueByKey!156 (toList!792 lt!56757) lt!56761)))))

(declare-fun bs!4575 () Bool)

(assert (= bs!4575 d!31421))

(declare-fun m!126307 () Bool)

(assert (=> bs!4575 m!126307))

(assert (=> bs!4575 m!126307))

(declare-fun m!126309 () Bool)

(assert (=> bs!4575 m!126309))

(assert (=> b!110223 d!31421))

(declare-fun d!31423 () Bool)

(assert (=> d!31423 (= (apply!100 lt!56768 lt!56754) (get!1350 (getValueByKey!156 (toList!792 lt!56768) lt!56754)))))

(declare-fun bs!4576 () Bool)

(assert (= bs!4576 d!31423))

(declare-fun m!126311 () Bool)

(assert (=> bs!4576 m!126311))

(assert (=> bs!4576 m!126311))

(declare-fun m!126313 () Bool)

(assert (=> bs!4576 m!126313))

(assert (=> b!110223 d!31423))

(declare-fun d!31425 () Bool)

(assert (=> d!31425 (= (apply!100 (+!139 lt!56757 (tuple2!2397 lt!56755 (minValue!2497 newMap!16))) lt!56761) (get!1350 (getValueByKey!156 (toList!792 (+!139 lt!56757 (tuple2!2397 lt!56755 (minValue!2497 newMap!16)))) lt!56761)))))

(declare-fun bs!4577 () Bool)

(assert (= bs!4577 d!31425))

(declare-fun m!126315 () Bool)

(assert (=> bs!4577 m!126315))

(assert (=> bs!4577 m!126315))

(declare-fun m!126317 () Bool)

(assert (=> bs!4577 m!126317))

(assert (=> b!110223 d!31425))

(declare-fun d!31427 () Bool)

(declare-fun e!72208 () Bool)

(assert (=> d!31427 e!72208))

(declare-fun res!54859 () Bool)

(assert (=> d!31427 (=> (not res!54859) (not e!72208))))

(declare-fun lt!57308 () ListLongMap!1553)

(assert (=> d!31427 (= res!54859 (contains!827 lt!57308 (_1!1209 (tuple2!2397 lt!56755 (minValue!2497 newMap!16)))))))

(declare-fun lt!57307 () List!1627)

(assert (=> d!31427 (= lt!57308 (ListLongMap!1554 lt!57307))))

(declare-fun lt!57309 () Unit!3390)

(declare-fun lt!57310 () Unit!3390)

(assert (=> d!31427 (= lt!57309 lt!57310)))

(assert (=> d!31427 (= (getValueByKey!156 lt!57307 (_1!1209 (tuple2!2397 lt!56755 (minValue!2497 newMap!16)))) (Some!161 (_2!1209 (tuple2!2397 lt!56755 (minValue!2497 newMap!16)))))))

(assert (=> d!31427 (= lt!57310 (lemmaContainsTupThenGetReturnValue!75 lt!57307 (_1!1209 (tuple2!2397 lt!56755 (minValue!2497 newMap!16))) (_2!1209 (tuple2!2397 lt!56755 (minValue!2497 newMap!16)))))))

(assert (=> d!31427 (= lt!57307 (insertStrictlySorted!78 (toList!792 lt!56757) (_1!1209 (tuple2!2397 lt!56755 (minValue!2497 newMap!16))) (_2!1209 (tuple2!2397 lt!56755 (minValue!2497 newMap!16)))))))

(assert (=> d!31427 (= (+!139 lt!56757 (tuple2!2397 lt!56755 (minValue!2497 newMap!16))) lt!57308)))

(declare-fun b!111082 () Bool)

(declare-fun res!54860 () Bool)

(assert (=> b!111082 (=> (not res!54860) (not e!72208))))

(assert (=> b!111082 (= res!54860 (= (getValueByKey!156 (toList!792 lt!57308) (_1!1209 (tuple2!2397 lt!56755 (minValue!2497 newMap!16)))) (Some!161 (_2!1209 (tuple2!2397 lt!56755 (minValue!2497 newMap!16))))))))

(declare-fun b!111083 () Bool)

(assert (=> b!111083 (= e!72208 (contains!829 (toList!792 lt!57308) (tuple2!2397 lt!56755 (minValue!2497 newMap!16))))))

(assert (= (and d!31427 res!54859) b!111082))

(assert (= (and b!111082 res!54860) b!111083))

(declare-fun m!126319 () Bool)

(assert (=> d!31427 m!126319))

(declare-fun m!126321 () Bool)

(assert (=> d!31427 m!126321))

(declare-fun m!126323 () Bool)

(assert (=> d!31427 m!126323))

(declare-fun m!126325 () Bool)

(assert (=> d!31427 m!126325))

(declare-fun m!126327 () Bool)

(assert (=> b!111082 m!126327))

(declare-fun m!126329 () Bool)

(assert (=> b!111083 m!126329))

(assert (=> b!110223 d!31427))

(declare-fun d!31429 () Bool)

(declare-fun e!72209 () Bool)

(assert (=> d!31429 e!72209))

(declare-fun res!54861 () Bool)

(assert (=> d!31429 (=> (not res!54861) (not e!72209))))

(declare-fun lt!57312 () ListLongMap!1553)

(assert (=> d!31429 (= res!54861 (contains!827 lt!57312 (_1!1209 (tuple2!2397 lt!56763 (minValue!2497 newMap!16)))))))

(declare-fun lt!57311 () List!1627)

(assert (=> d!31429 (= lt!57312 (ListLongMap!1554 lt!57311))))

(declare-fun lt!57313 () Unit!3390)

(declare-fun lt!57314 () Unit!3390)

(assert (=> d!31429 (= lt!57313 lt!57314)))

(assert (=> d!31429 (= (getValueByKey!156 lt!57311 (_1!1209 (tuple2!2397 lt!56763 (minValue!2497 newMap!16)))) (Some!161 (_2!1209 (tuple2!2397 lt!56763 (minValue!2497 newMap!16)))))))

(assert (=> d!31429 (= lt!57314 (lemmaContainsTupThenGetReturnValue!75 lt!57311 (_1!1209 (tuple2!2397 lt!56763 (minValue!2497 newMap!16))) (_2!1209 (tuple2!2397 lt!56763 (minValue!2497 newMap!16)))))))

(assert (=> d!31429 (= lt!57311 (insertStrictlySorted!78 (toList!792 lt!56752) (_1!1209 (tuple2!2397 lt!56763 (minValue!2497 newMap!16))) (_2!1209 (tuple2!2397 lt!56763 (minValue!2497 newMap!16)))))))

(assert (=> d!31429 (= (+!139 lt!56752 (tuple2!2397 lt!56763 (minValue!2497 newMap!16))) lt!57312)))

(declare-fun b!111084 () Bool)

(declare-fun res!54862 () Bool)

(assert (=> b!111084 (=> (not res!54862) (not e!72209))))

(assert (=> b!111084 (= res!54862 (= (getValueByKey!156 (toList!792 lt!57312) (_1!1209 (tuple2!2397 lt!56763 (minValue!2497 newMap!16)))) (Some!161 (_2!1209 (tuple2!2397 lt!56763 (minValue!2497 newMap!16))))))))

(declare-fun b!111085 () Bool)

(assert (=> b!111085 (= e!72209 (contains!829 (toList!792 lt!57312) (tuple2!2397 lt!56763 (minValue!2497 newMap!16))))))

(assert (= (and d!31429 res!54861) b!111084))

(assert (= (and b!111084 res!54862) b!111085))

(declare-fun m!126331 () Bool)

(assert (=> d!31429 m!126331))

(declare-fun m!126333 () Bool)

(assert (=> d!31429 m!126333))

(declare-fun m!126335 () Bool)

(assert (=> d!31429 m!126335))

(declare-fun m!126337 () Bool)

(assert (=> d!31429 m!126337))

(declare-fun m!126339 () Bool)

(assert (=> b!111084 m!126339))

(declare-fun m!126341 () Bool)

(assert (=> b!111085 m!126341))

(assert (=> b!110223 d!31429))

(declare-fun d!31431 () Bool)

(assert (=> d!31431 (= (apply!100 (+!139 lt!56757 (tuple2!2397 lt!56755 (minValue!2497 newMap!16))) lt!56761) (apply!100 lt!56757 lt!56761))))

(declare-fun lt!57315 () Unit!3390)

(assert (=> d!31431 (= lt!57315 (choose!701 lt!56757 lt!56755 (minValue!2497 newMap!16) lt!56761))))

(declare-fun e!72210 () Bool)

(assert (=> d!31431 e!72210))

(declare-fun res!54863 () Bool)

(assert (=> d!31431 (=> (not res!54863) (not e!72210))))

(assert (=> d!31431 (= res!54863 (contains!827 lt!56757 lt!56761))))

(assert (=> d!31431 (= (addApplyDifferent!76 lt!56757 lt!56755 (minValue!2497 newMap!16) lt!56761) lt!57315)))

(declare-fun b!111086 () Bool)

(assert (=> b!111086 (= e!72210 (not (= lt!56761 lt!56755)))))

(assert (= (and d!31431 res!54863) b!111086))

(assert (=> d!31431 m!124693))

(assert (=> d!31431 m!124695))

(declare-fun m!126343 () Bool)

(assert (=> d!31431 m!126343))

(declare-fun m!126345 () Bool)

(assert (=> d!31431 m!126345))

(assert (=> d!31431 m!124705))

(assert (=> d!31431 m!124693))

(assert (=> b!110223 d!31431))

(declare-fun d!31433 () Bool)

(assert (=> d!31433 (= (apply!100 (+!139 lt!56768 (tuple2!2397 lt!56759 (zeroValue!2497 newMap!16))) lt!56754) (apply!100 lt!56768 lt!56754))))

(declare-fun lt!57316 () Unit!3390)

(assert (=> d!31433 (= lt!57316 (choose!701 lt!56768 lt!56759 (zeroValue!2497 newMap!16) lt!56754))))

(declare-fun e!72211 () Bool)

(assert (=> d!31433 e!72211))

(declare-fun res!54864 () Bool)

(assert (=> d!31433 (=> (not res!54864) (not e!72211))))

(assert (=> d!31433 (= res!54864 (contains!827 lt!56768 lt!56754))))

(assert (=> d!31433 (= (addApplyDifferent!76 lt!56768 lt!56759 (zeroValue!2497 newMap!16) lt!56754) lt!57316)))

(declare-fun b!111087 () Bool)

(assert (=> b!111087 (= e!72211 (not (= lt!56754 lt!56759)))))

(assert (= (and d!31433 res!54864) b!111087))

(assert (=> d!31433 m!124701))

(assert (=> d!31433 m!124703))

(declare-fun m!126347 () Bool)

(assert (=> d!31433 m!126347))

(declare-fun m!126349 () Bool)

(assert (=> d!31433 m!126349))

(assert (=> d!31433 m!124717))

(assert (=> d!31433 m!124701))

(assert (=> b!110223 d!31433))

(declare-fun d!31435 () Bool)

(assert (=> d!31435 (= (apply!100 (+!139 lt!56752 (tuple2!2397 lt!56763 (minValue!2497 newMap!16))) lt!56756) (get!1350 (getValueByKey!156 (toList!792 (+!139 lt!56752 (tuple2!2397 lt!56763 (minValue!2497 newMap!16)))) lt!56756)))))

(declare-fun bs!4578 () Bool)

(assert (= bs!4578 d!31435))

(declare-fun m!126351 () Bool)

(assert (=> bs!4578 m!126351))

(assert (=> bs!4578 m!126351))

(declare-fun m!126353 () Bool)

(assert (=> bs!4578 m!126353))

(assert (=> b!110223 d!31435))

(declare-fun d!31437 () Bool)

(declare-fun e!72212 () Bool)

(assert (=> d!31437 e!72212))

(declare-fun res!54865 () Bool)

(assert (=> d!31437 (=> (not res!54865) (not e!72212))))

(declare-fun lt!57318 () ListLongMap!1553)

(assert (=> d!31437 (= res!54865 (contains!827 lt!57318 (_1!1209 (tuple2!2397 lt!56759 (zeroValue!2497 newMap!16)))))))

(declare-fun lt!57317 () List!1627)

(assert (=> d!31437 (= lt!57318 (ListLongMap!1554 lt!57317))))

(declare-fun lt!57319 () Unit!3390)

(declare-fun lt!57320 () Unit!3390)

(assert (=> d!31437 (= lt!57319 lt!57320)))

(assert (=> d!31437 (= (getValueByKey!156 lt!57317 (_1!1209 (tuple2!2397 lt!56759 (zeroValue!2497 newMap!16)))) (Some!161 (_2!1209 (tuple2!2397 lt!56759 (zeroValue!2497 newMap!16)))))))

(assert (=> d!31437 (= lt!57320 (lemmaContainsTupThenGetReturnValue!75 lt!57317 (_1!1209 (tuple2!2397 lt!56759 (zeroValue!2497 newMap!16))) (_2!1209 (tuple2!2397 lt!56759 (zeroValue!2497 newMap!16)))))))

(assert (=> d!31437 (= lt!57317 (insertStrictlySorted!78 (toList!792 lt!56768) (_1!1209 (tuple2!2397 lt!56759 (zeroValue!2497 newMap!16))) (_2!1209 (tuple2!2397 lt!56759 (zeroValue!2497 newMap!16)))))))

(assert (=> d!31437 (= (+!139 lt!56768 (tuple2!2397 lt!56759 (zeroValue!2497 newMap!16))) lt!57318)))

(declare-fun b!111088 () Bool)

(declare-fun res!54866 () Bool)

(assert (=> b!111088 (=> (not res!54866) (not e!72212))))

(assert (=> b!111088 (= res!54866 (= (getValueByKey!156 (toList!792 lt!57318) (_1!1209 (tuple2!2397 lt!56759 (zeroValue!2497 newMap!16)))) (Some!161 (_2!1209 (tuple2!2397 lt!56759 (zeroValue!2497 newMap!16))))))))

(declare-fun b!111089 () Bool)

(assert (=> b!111089 (= e!72212 (contains!829 (toList!792 lt!57318) (tuple2!2397 lt!56759 (zeroValue!2497 newMap!16))))))

(assert (= (and d!31437 res!54865) b!111088))

(assert (= (and b!111088 res!54866) b!111089))

(declare-fun m!126355 () Bool)

(assert (=> d!31437 m!126355))

(declare-fun m!126357 () Bool)

(assert (=> d!31437 m!126357))

(declare-fun m!126359 () Bool)

(assert (=> d!31437 m!126359))

(declare-fun m!126361 () Bool)

(assert (=> d!31437 m!126361))

(declare-fun m!126363 () Bool)

(assert (=> b!111088 m!126363))

(declare-fun m!126365 () Bool)

(assert (=> b!111089 m!126365))

(assert (=> b!110223 d!31437))

(assert (=> b!110223 d!31053))

(declare-fun d!31439 () Bool)

(assert (=> d!31439 (= (apply!100 (+!139 lt!56752 (tuple2!2397 lt!56763 (minValue!2497 newMap!16))) lt!56756) (apply!100 lt!56752 lt!56756))))

(declare-fun lt!57321 () Unit!3390)

(assert (=> d!31439 (= lt!57321 (choose!701 lt!56752 lt!56763 (minValue!2497 newMap!16) lt!56756))))

(declare-fun e!72213 () Bool)

(assert (=> d!31439 e!72213))

(declare-fun res!54867 () Bool)

(assert (=> d!31439 (=> (not res!54867) (not e!72213))))

(assert (=> d!31439 (= res!54867 (contains!827 lt!56752 lt!56756))))

(assert (=> d!31439 (= (addApplyDifferent!76 lt!56752 lt!56763 (minValue!2497 newMap!16) lt!56756) lt!57321)))

(declare-fun b!111090 () Bool)

(assert (=> b!111090 (= e!72213 (not (= lt!56756 lt!56763)))))

(assert (= (and d!31439 res!54867) b!111090))

(assert (=> d!31439 m!124697))

(assert (=> d!31439 m!124721))

(declare-fun m!126367 () Bool)

(assert (=> d!31439 m!126367))

(declare-fun m!126369 () Bool)

(assert (=> d!31439 m!126369))

(assert (=> d!31439 m!124699))

(assert (=> d!31439 m!124697))

(assert (=> b!110223 d!31439))

(declare-fun d!31441 () Bool)

(assert (=> d!31441 (= (apply!100 lt!56752 lt!56756) (get!1350 (getValueByKey!156 (toList!792 lt!56752) lt!56756)))))

(declare-fun bs!4579 () Bool)

(assert (= bs!4579 d!31441))

(declare-fun m!126371 () Bool)

(assert (=> bs!4579 m!126371))

(assert (=> bs!4579 m!126371))

(declare-fun m!126373 () Bool)

(assert (=> bs!4579 m!126373))

(assert (=> b!110223 d!31441))

(declare-fun d!31443 () Bool)

(declare-fun e!72215 () Bool)

(assert (=> d!31443 e!72215))

(declare-fun res!54868 () Bool)

(assert (=> d!31443 (=> res!54868 e!72215)))

(declare-fun lt!57322 () Bool)

(assert (=> d!31443 (= res!54868 (not lt!57322))))

(declare-fun lt!57323 () Bool)

(assert (=> d!31443 (= lt!57322 lt!57323)))

(declare-fun lt!57324 () Unit!3390)

(declare-fun e!72214 () Unit!3390)

(assert (=> d!31443 (= lt!57324 e!72214)))

(declare-fun c!19781 () Bool)

(assert (=> d!31443 (= c!19781 lt!57323)))

(assert (=> d!31443 (= lt!57323 (containsKey!160 (toList!792 (+!139 lt!56753 (tuple2!2397 lt!56766 (zeroValue!2497 newMap!16)))) lt!56750))))

(assert (=> d!31443 (= (contains!827 (+!139 lt!56753 (tuple2!2397 lt!56766 (zeroValue!2497 newMap!16))) lt!56750) lt!57322)))

(declare-fun b!111091 () Bool)

(declare-fun lt!57325 () Unit!3390)

(assert (=> b!111091 (= e!72214 lt!57325)))

(assert (=> b!111091 (= lt!57325 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 (+!139 lt!56753 (tuple2!2397 lt!56766 (zeroValue!2497 newMap!16)))) lt!56750))))

(assert (=> b!111091 (isDefined!110 (getValueByKey!156 (toList!792 (+!139 lt!56753 (tuple2!2397 lt!56766 (zeroValue!2497 newMap!16)))) lt!56750))))

(declare-fun b!111092 () Bool)

(declare-fun Unit!3451 () Unit!3390)

(assert (=> b!111092 (= e!72214 Unit!3451)))

(declare-fun b!111093 () Bool)

(assert (=> b!111093 (= e!72215 (isDefined!110 (getValueByKey!156 (toList!792 (+!139 lt!56753 (tuple2!2397 lt!56766 (zeroValue!2497 newMap!16)))) lt!56750)))))

(assert (= (and d!31443 c!19781) b!111091))

(assert (= (and d!31443 (not c!19781)) b!111092))

(assert (= (and d!31443 (not res!54868)) b!111093))

(declare-fun m!126375 () Bool)

(assert (=> d!31443 m!126375))

(declare-fun m!126377 () Bool)

(assert (=> b!111091 m!126377))

(declare-fun m!126379 () Bool)

(assert (=> b!111091 m!126379))

(assert (=> b!111091 m!126379))

(declare-fun m!126381 () Bool)

(assert (=> b!111091 m!126381))

(assert (=> b!111093 m!126379))

(assert (=> b!111093 m!126379))

(assert (=> b!111093 m!126381))

(assert (=> b!110223 d!31443))

(declare-fun d!31445 () Bool)

(declare-fun e!72216 () Bool)

(assert (=> d!31445 e!72216))

(declare-fun res!54869 () Bool)

(assert (=> d!31445 (=> (not res!54869) (not e!72216))))

(declare-fun lt!57327 () ListLongMap!1553)

(assert (=> d!31445 (= res!54869 (contains!827 lt!57327 (_1!1209 (tuple2!2397 lt!56766 (zeroValue!2497 newMap!16)))))))

(declare-fun lt!57326 () List!1627)

(assert (=> d!31445 (= lt!57327 (ListLongMap!1554 lt!57326))))

(declare-fun lt!57328 () Unit!3390)

(declare-fun lt!57329 () Unit!3390)

(assert (=> d!31445 (= lt!57328 lt!57329)))

(assert (=> d!31445 (= (getValueByKey!156 lt!57326 (_1!1209 (tuple2!2397 lt!56766 (zeroValue!2497 newMap!16)))) (Some!161 (_2!1209 (tuple2!2397 lt!56766 (zeroValue!2497 newMap!16)))))))

(assert (=> d!31445 (= lt!57329 (lemmaContainsTupThenGetReturnValue!75 lt!57326 (_1!1209 (tuple2!2397 lt!56766 (zeroValue!2497 newMap!16))) (_2!1209 (tuple2!2397 lt!56766 (zeroValue!2497 newMap!16)))))))

(assert (=> d!31445 (= lt!57326 (insertStrictlySorted!78 (toList!792 lt!56753) (_1!1209 (tuple2!2397 lt!56766 (zeroValue!2497 newMap!16))) (_2!1209 (tuple2!2397 lt!56766 (zeroValue!2497 newMap!16)))))))

(assert (=> d!31445 (= (+!139 lt!56753 (tuple2!2397 lt!56766 (zeroValue!2497 newMap!16))) lt!57327)))

(declare-fun b!111094 () Bool)

(declare-fun res!54870 () Bool)

(assert (=> b!111094 (=> (not res!54870) (not e!72216))))

(assert (=> b!111094 (= res!54870 (= (getValueByKey!156 (toList!792 lt!57327) (_1!1209 (tuple2!2397 lt!56766 (zeroValue!2497 newMap!16)))) (Some!161 (_2!1209 (tuple2!2397 lt!56766 (zeroValue!2497 newMap!16))))))))

(declare-fun b!111095 () Bool)

(assert (=> b!111095 (= e!72216 (contains!829 (toList!792 lt!57327) (tuple2!2397 lt!56766 (zeroValue!2497 newMap!16))))))

(assert (= (and d!31445 res!54869) b!111094))

(assert (= (and b!111094 res!54870) b!111095))

(declare-fun m!126383 () Bool)

(assert (=> d!31445 m!126383))

(declare-fun m!126385 () Bool)

(assert (=> d!31445 m!126385))

(declare-fun m!126387 () Bool)

(assert (=> d!31445 m!126387))

(declare-fun m!126389 () Bool)

(assert (=> d!31445 m!126389))

(declare-fun m!126391 () Bool)

(assert (=> b!111094 m!126391))

(declare-fun m!126393 () Bool)

(assert (=> b!111095 m!126393))

(assert (=> b!110223 d!31445))

(assert (=> b!110336 d!31205))

(assert (=> b!110190 d!31079))

(declare-fun d!31447 () Bool)

(declare-fun c!19782 () Bool)

(assert (=> d!31447 (= c!19782 ((_ is Nil!1624) (toList!792 lt!56388)))))

(declare-fun e!72217 () (InoxSet tuple2!2396))

(assert (=> d!31447 (= (content!113 (toList!792 lt!56388)) e!72217)))

(declare-fun b!111096 () Bool)

(assert (=> b!111096 (= e!72217 ((as const (Array tuple2!2396 Bool)) false))))

(declare-fun b!111097 () Bool)

(assert (=> b!111097 (= e!72217 ((_ map or) (store ((as const (Array tuple2!2396 Bool)) false) (h!2222 (toList!792 lt!56388)) true) (content!113 (t!5755 (toList!792 lt!56388)))))))

(assert (= (and d!31447 c!19782) b!111096))

(assert (= (and d!31447 (not c!19782)) b!111097))

(declare-fun m!126395 () Bool)

(assert (=> b!111097 m!126395))

(declare-fun m!126397 () Bool)

(assert (=> b!111097 m!126397))

(assert (=> d!30803 d!31447))

(declare-fun d!31449 () Bool)

(assert (=> d!31449 (isDefined!110 (getValueByKey!156 (toList!792 lt!56425) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!57330 () Unit!3390)

(assert (=> d!31449 (= lt!57330 (choose!699 (toList!792 lt!56425) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!72218 () Bool)

(assert (=> d!31449 e!72218))

(declare-fun res!54871 () Bool)

(assert (=> d!31449 (=> (not res!54871) (not e!72218))))

(assert (=> d!31449 (= res!54871 (isStrictlySorted!306 (toList!792 lt!56425)))))

(assert (=> d!31449 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 lt!56425) #b0000000000000000000000000000000000000000000000000000000000000000) lt!57330)))

(declare-fun b!111098 () Bool)

(assert (=> b!111098 (= e!72218 (containsKey!160 (toList!792 lt!56425) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!31449 res!54871) b!111098))

(assert (=> d!31449 m!124651))

(assert (=> d!31449 m!124651))

(assert (=> d!31449 m!124653))

(declare-fun m!126399 () Bool)

(assert (=> d!31449 m!126399))

(assert (=> d!31449 m!126239))

(assert (=> b!111098 m!124647))

(assert (=> b!110191 d!31449))

(assert (=> b!110191 d!31267))

(assert (=> b!110191 d!31269))

(declare-fun d!31451 () Bool)

(declare-fun e!72220 () Bool)

(assert (=> d!31451 e!72220))

(declare-fun res!54872 () Bool)

(assert (=> d!31451 (=> res!54872 e!72220)))

(declare-fun lt!57331 () Bool)

(assert (=> d!31451 (= res!54872 (not lt!57331))))

(declare-fun lt!57332 () Bool)

(assert (=> d!31451 (= lt!57331 lt!57332)))

(declare-fun lt!57333 () Unit!3390)

(declare-fun e!72219 () Unit!3390)

(assert (=> d!31451 (= lt!57333 e!72219)))

(declare-fun c!19783 () Bool)

(assert (=> d!31451 (= c!19783 lt!57332)))

(assert (=> d!31451 (= lt!57332 (containsKey!160 (toList!792 lt!56730) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> d!31451 (= (contains!827 lt!56730 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) lt!57331)))

(declare-fun b!111099 () Bool)

(declare-fun lt!57334 () Unit!3390)

(assert (=> b!111099 (= e!72219 lt!57334)))

(assert (=> b!111099 (= lt!57334 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 lt!56730) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!111099 (isDefined!110 (getValueByKey!156 (toList!792 lt!56730) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!111100 () Bool)

(declare-fun Unit!3452 () Unit!3390)

(assert (=> b!111100 (= e!72219 Unit!3452)))

(declare-fun b!111101 () Bool)

(assert (=> b!111101 (= e!72220 (isDefined!110 (getValueByKey!156 (toList!792 lt!56730) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(assert (= (and d!31451 c!19783) b!111099))

(assert (= (and d!31451 (not c!19783)) b!111100))

(assert (= (and d!31451 (not res!54872)) b!111101))

(assert (=> d!31451 m!124577))

(declare-fun m!126401 () Bool)

(assert (=> d!31451 m!126401))

(assert (=> b!111099 m!124577))

(declare-fun m!126403 () Bool)

(assert (=> b!111099 m!126403))

(assert (=> b!111099 m!124577))

(assert (=> b!111099 m!125915))

(assert (=> b!111099 m!125915))

(declare-fun m!126405 () Bool)

(assert (=> b!111099 m!126405))

(assert (=> b!111101 m!124577))

(assert (=> b!111101 m!125915))

(assert (=> b!111101 m!125915))

(assert (=> b!111101 m!126405))

(assert (=> b!110161 d!31451))

(declare-fun d!31453 () Bool)

(assert (=> d!31453 (isDefined!110 (getValueByKey!156 (toList!792 lt!56399) (_1!1209 lt!56300)))))

(declare-fun lt!57335 () Unit!3390)

(assert (=> d!31453 (= lt!57335 (choose!699 (toList!792 lt!56399) (_1!1209 lt!56300)))))

(declare-fun e!72221 () Bool)

(assert (=> d!31453 e!72221))

(declare-fun res!54873 () Bool)

(assert (=> d!31453 (=> (not res!54873) (not e!72221))))

(assert (=> d!31453 (= res!54873 (isStrictlySorted!306 (toList!792 lt!56399)))))

(assert (=> d!31453 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 lt!56399) (_1!1209 lt!56300)) lt!57335)))

(declare-fun b!111102 () Bool)

(assert (=> b!111102 (= e!72221 (containsKey!160 (toList!792 lt!56399) (_1!1209 lt!56300)))))

(assert (= (and d!31453 res!54873) b!111102))

(assert (=> d!31453 m!124071))

(assert (=> d!31453 m!124071))

(assert (=> d!31453 m!124331))

(declare-fun m!126407 () Bool)

(assert (=> d!31453 m!126407))

(declare-fun m!126409 () Bool)

(assert (=> d!31453 m!126409))

(assert (=> b!111102 m!124327))

(assert (=> b!109972 d!31453))

(assert (=> b!109972 d!31273))

(assert (=> b!109972 d!30855))

(assert (=> d!30809 d!30807))

(declare-fun d!31455 () Bool)

(assert (=> d!31455 (= (getValueByKey!156 lt!56398 (_1!1209 lt!56300)) (Some!161 (_2!1209 lt!56300)))))

(assert (=> d!31455 true))

(declare-fun _$22!447 () Unit!3390)

(assert (=> d!31455 (= (choose!691 lt!56398 (_1!1209 lt!56300) (_2!1209 lt!56300)) _$22!447)))

(declare-fun bs!4580 () Bool)

(assert (= bs!4580 d!31455))

(assert (=> bs!4580 m!124065))

(assert (=> d!30809 d!31455))

(declare-fun d!31457 () Bool)

(declare-fun res!54874 () Bool)

(declare-fun e!72222 () Bool)

(assert (=> d!31457 (=> res!54874 e!72222)))

(assert (=> d!31457 (= res!54874 (or ((_ is Nil!1624) lt!56398) ((_ is Nil!1624) (t!5755 lt!56398))))))

(assert (=> d!31457 (= (isStrictlySorted!306 lt!56398) e!72222)))

(declare-fun b!111103 () Bool)

(declare-fun e!72223 () Bool)

(assert (=> b!111103 (= e!72222 e!72223)))

(declare-fun res!54875 () Bool)

(assert (=> b!111103 (=> (not res!54875) (not e!72223))))

(assert (=> b!111103 (= res!54875 (bvslt (_1!1209 (h!2222 lt!56398)) (_1!1209 (h!2222 (t!5755 lt!56398)))))))

(declare-fun b!111104 () Bool)

(assert (=> b!111104 (= e!72223 (isStrictlySorted!306 (t!5755 lt!56398)))))

(assert (= (and d!31457 (not res!54874)) b!111103))

(assert (= (and b!111103 res!54875) b!111104))

(declare-fun m!126411 () Bool)

(assert (=> b!111104 m!126411))

(assert (=> d!30809 d!31457))

(declare-fun d!31459 () Bool)

(assert (=> d!31459 (= (get!1349 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!110205 d!31459))

(declare-fun d!31461 () Bool)

(declare-fun lt!57336 () Bool)

(assert (=> d!31461 (= lt!57336 (select (content!113 (t!5755 (toList!792 lt!56388))) lt!56299))))

(declare-fun e!72224 () Bool)

(assert (=> d!31461 (= lt!57336 e!72224)))

(declare-fun res!54876 () Bool)

(assert (=> d!31461 (=> (not res!54876) (not e!72224))))

(assert (=> d!31461 (= res!54876 ((_ is Cons!1623) (t!5755 (toList!792 lt!56388))))))

(assert (=> d!31461 (= (contains!829 (t!5755 (toList!792 lt!56388)) lt!56299) lt!57336)))

(declare-fun b!111105 () Bool)

(declare-fun e!72225 () Bool)

(assert (=> b!111105 (= e!72224 e!72225)))

(declare-fun res!54877 () Bool)

(assert (=> b!111105 (=> res!54877 e!72225)))

(assert (=> b!111105 (= res!54877 (= (h!2222 (t!5755 (toList!792 lt!56388))) lt!56299))))

(declare-fun b!111106 () Bool)

(assert (=> b!111106 (= e!72225 (contains!829 (t!5755 (t!5755 (toList!792 lt!56388))) lt!56299))))

(assert (= (and d!31461 res!54876) b!111105))

(assert (= (and b!111105 (not res!54877)) b!111106))

(assert (=> d!31461 m!126397))

(declare-fun m!126413 () Bool)

(assert (=> d!31461 m!126413))

(declare-fun m!126415 () Bool)

(assert (=> b!111106 m!126415))

(assert (=> b!109971 d!31461))

(declare-fun d!31463 () Bool)

(assert (=> d!31463 (isDefined!110 (getValueByKey!156 (toList!792 e!71432) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))

(declare-fun lt!57337 () Unit!3390)

(assert (=> d!31463 (= lt!57337 (choose!699 (toList!792 e!71432) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))

(declare-fun e!72226 () Bool)

(assert (=> d!31463 e!72226))

(declare-fun res!54878 () Bool)

(assert (=> d!31463 (=> (not res!54878) (not e!72226))))

(assert (=> d!31463 (= res!54878 (isStrictlySorted!306 (toList!792 e!71432)))))

(assert (=> d!31463 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 e!71432) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) lt!57337)))

(declare-fun b!111107 () Bool)

(assert (=> b!111107 (= e!72226 (containsKey!160 (toList!792 e!71432) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))

(assert (= (and d!31463 res!54878) b!111107))

(assert (=> d!31463 m!123865))

(assert (=> d!31463 m!124751))

(assert (=> d!31463 m!124751))

(assert (=> d!31463 m!124753))

(assert (=> d!31463 m!123865))

(declare-fun m!126417 () Bool)

(assert (=> d!31463 m!126417))

(declare-fun m!126419 () Bool)

(assert (=> d!31463 m!126419))

(assert (=> b!111107 m!123865))

(assert (=> b!111107 m!124747))

(assert (=> b!110242 d!31463))

(assert (=> b!110242 d!31331))

(assert (=> b!110242 d!31333))

(declare-fun e!72228 () Option!162)

(declare-fun b!111110 () Bool)

(assert (=> b!111110 (= e!72228 (getValueByKey!156 (t!5755 (toList!792 lt!56912)) (_1!1209 (ite (or c!19448 c!19451) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(declare-fun d!31465 () Bool)

(declare-fun c!19784 () Bool)

(assert (=> d!31465 (= c!19784 (and ((_ is Cons!1623) (toList!792 lt!56912)) (= (_1!1209 (h!2222 (toList!792 lt!56912))) (_1!1209 (ite (or c!19448 c!19451) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))))

(declare-fun e!72227 () Option!162)

(assert (=> d!31465 (= (getValueByKey!156 (toList!792 lt!56912) (_1!1209 (ite (or c!19448 c!19451) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))) e!72227)))

(declare-fun b!111108 () Bool)

(assert (=> b!111108 (= e!72227 (Some!161 (_2!1209 (h!2222 (toList!792 lt!56912)))))))

(declare-fun b!111109 () Bool)

(assert (=> b!111109 (= e!72227 e!72228)))

(declare-fun c!19785 () Bool)

(assert (=> b!111109 (= c!19785 (and ((_ is Cons!1623) (toList!792 lt!56912)) (not (= (_1!1209 (h!2222 (toList!792 lt!56912))) (_1!1209 (ite (or c!19448 c!19451) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))))))))

(declare-fun b!111111 () Bool)

(assert (=> b!111111 (= e!72228 None!160)))

(assert (= (and d!31465 c!19784) b!111108))

(assert (= (and d!31465 (not c!19784)) b!111109))

(assert (= (and b!111109 c!19785) b!111110))

(assert (= (and b!111109 (not c!19785)) b!111111))

(declare-fun m!126421 () Bool)

(assert (=> b!111110 m!126421))

(assert (=> b!110374 d!31465))

(declare-fun d!31467 () Bool)

(declare-fun res!54879 () Bool)

(declare-fun e!72229 () Bool)

(assert (=> d!31467 (=> res!54879 e!72229)))

(assert (=> d!31467 (= res!54879 (and ((_ is Cons!1623) (toList!792 lt!56425)) (= (_1!1209 (h!2222 (toList!792 lt!56425))) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!31467 (= (containsKey!160 (toList!792 lt!56425) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!72229)))

(declare-fun b!111112 () Bool)

(declare-fun e!72230 () Bool)

(assert (=> b!111112 (= e!72229 e!72230)))

(declare-fun res!54880 () Bool)

(assert (=> b!111112 (=> (not res!54880) (not e!72230))))

(assert (=> b!111112 (= res!54880 (and (or (not ((_ is Cons!1623) (toList!792 lt!56425))) (bvsle (_1!1209 (h!2222 (toList!792 lt!56425))) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1623) (toList!792 lt!56425)) (bvslt (_1!1209 (h!2222 (toList!792 lt!56425))) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!111113 () Bool)

(assert (=> b!111113 (= e!72230 (containsKey!160 (t!5755 (toList!792 lt!56425)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!31467 (not res!54879)) b!111112))

(assert (= (and b!111112 res!54880) b!111113))

(assert (=> b!111113 m!124087))

(declare-fun m!126423 () Bool)

(assert (=> b!111113 m!126423))

(assert (=> d!30929 d!31467))

(declare-fun b!111114 () Bool)

(declare-fun res!54882 () Bool)

(declare-fun e!72231 () Bool)

(assert (=> b!111114 (=> (not res!54882) (not e!72231))))

(assert (=> b!111114 (= res!54882 (and (= (size!2327 (_values!2609 (_2!1210 lt!56499))) (bvadd (mask!6793 (_2!1210 lt!56499)) #b00000000000000000000000000000001)) (= (size!2326 (_keys!4339 (_2!1210 lt!56499))) (size!2327 (_values!2609 (_2!1210 lt!56499)))) (bvsge (_size!507 (_2!1210 lt!56499)) #b00000000000000000000000000000000) (bvsle (_size!507 (_2!1210 lt!56499)) (bvadd (mask!6793 (_2!1210 lt!56499)) #b00000000000000000000000000000001))))))

(declare-fun b!111115 () Bool)

(declare-fun res!54883 () Bool)

(assert (=> b!111115 (=> (not res!54883) (not e!72231))))

(assert (=> b!111115 (= res!54883 (bvsge (size!2332 (_2!1210 lt!56499)) (_size!507 (_2!1210 lt!56499))))))

(declare-fun d!31469 () Bool)

(declare-fun res!54884 () Bool)

(assert (=> d!31469 (=> (not res!54884) (not e!72231))))

(assert (=> d!31469 (= res!54884 (validMask!0 (mask!6793 (_2!1210 lt!56499))))))

(assert (=> d!31469 (= (simpleValid!76 (_2!1210 lt!56499)) e!72231)))

(declare-fun b!111117 () Bool)

(assert (=> b!111117 (= e!72231 (and (bvsge (extraKeys!2423 (_2!1210 lt!56499)) #b00000000000000000000000000000000) (bvsle (extraKeys!2423 (_2!1210 lt!56499)) #b00000000000000000000000000000011) (bvsge (_vacant!507 (_2!1210 lt!56499)) #b00000000000000000000000000000000)))))

(declare-fun b!111116 () Bool)

(declare-fun res!54881 () Bool)

(assert (=> b!111116 (=> (not res!54881) (not e!72231))))

(assert (=> b!111116 (= res!54881 (= (size!2332 (_2!1210 lt!56499)) (bvadd (_size!507 (_2!1210 lt!56499)) (bvsdiv (bvadd (extraKeys!2423 (_2!1210 lt!56499)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(assert (= (and d!31469 res!54884) b!111114))

(assert (= (and b!111114 res!54882) b!111115))

(assert (= (and b!111115 res!54883) b!111116))

(assert (= (and b!111116 res!54881) b!111117))

(declare-fun m!126425 () Bool)

(assert (=> b!111115 m!126425))

(declare-fun m!126427 () Bool)

(assert (=> d!31469 m!126427))

(assert (=> b!111116 m!126425))

(assert (=> d!30827 d!31469))

(assert (=> d!30839 d!31081))

(declare-fun d!31471 () Bool)

(declare-fun e!72233 () Bool)

(assert (=> d!31471 e!72233))

(declare-fun res!54885 () Bool)

(assert (=> d!31471 (=> res!54885 e!72233)))

(declare-fun lt!57338 () Bool)

(assert (=> d!31471 (= res!54885 (not lt!57338))))

(declare-fun lt!57339 () Bool)

(assert (=> d!31471 (= lt!57338 lt!57339)))

(declare-fun lt!57340 () Unit!3390)

(declare-fun e!72232 () Unit!3390)

(assert (=> d!31471 (= lt!57340 e!72232)))

(declare-fun c!19786 () Bool)

(assert (=> d!31471 (= c!19786 lt!57339)))

(assert (=> d!31471 (= lt!57339 (containsKey!160 (toList!792 lt!56912) (_1!1209 (ite (or c!19448 c!19451) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(assert (=> d!31471 (= (contains!827 lt!56912 (_1!1209 (ite (or c!19448 c!19451) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))) lt!57338)))

(declare-fun b!111118 () Bool)

(declare-fun lt!57341 () Unit!3390)

(assert (=> b!111118 (= e!72232 lt!57341)))

(assert (=> b!111118 (= lt!57341 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 lt!56912) (_1!1209 (ite (or c!19448 c!19451) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(assert (=> b!111118 (isDefined!110 (getValueByKey!156 (toList!792 lt!56912) (_1!1209 (ite (or c!19448 c!19451) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(declare-fun b!111119 () Bool)

(declare-fun Unit!3453 () Unit!3390)

(assert (=> b!111119 (= e!72232 Unit!3453)))

(declare-fun b!111120 () Bool)

(assert (=> b!111120 (= e!72233 (isDefined!110 (getValueByKey!156 (toList!792 lt!56912) (_1!1209 (ite (or c!19448 c!19451) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))))

(assert (= (and d!31471 c!19786) b!111118))

(assert (= (and d!31471 (not c!19786)) b!111119))

(assert (= (and d!31471 (not res!54885)) b!111120))

(declare-fun m!126429 () Bool)

(assert (=> d!31471 m!126429))

(declare-fun m!126431 () Bool)

(assert (=> b!111118 m!126431))

(assert (=> b!111118 m!124945))

(assert (=> b!111118 m!124945))

(declare-fun m!126433 () Bool)

(assert (=> b!111118 m!126433))

(assert (=> b!111120 m!124945))

(assert (=> b!111120 m!124945))

(assert (=> b!111120 m!126433))

(assert (=> d!30947 d!31471))

(declare-fun b!111123 () Bool)

(declare-fun e!72235 () Option!162)

(assert (=> b!111123 (= e!72235 (getValueByKey!156 (t!5755 lt!56911) (_1!1209 (ite (or c!19448 c!19451) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(declare-fun d!31473 () Bool)

(declare-fun c!19787 () Bool)

(assert (=> d!31473 (= c!19787 (and ((_ is Cons!1623) lt!56911) (= (_1!1209 (h!2222 lt!56911)) (_1!1209 (ite (or c!19448 c!19451) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))))

(declare-fun e!72234 () Option!162)

(assert (=> d!31473 (= (getValueByKey!156 lt!56911 (_1!1209 (ite (or c!19448 c!19451) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))) e!72234)))

(declare-fun b!111121 () Bool)

(assert (=> b!111121 (= e!72234 (Some!161 (_2!1209 (h!2222 lt!56911))))))

(declare-fun b!111122 () Bool)

(assert (=> b!111122 (= e!72234 e!72235)))

(declare-fun c!19788 () Bool)

(assert (=> b!111122 (= c!19788 (and ((_ is Cons!1623) lt!56911) (not (= (_1!1209 (h!2222 lt!56911)) (_1!1209 (ite (or c!19448 c!19451) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))))))))

(declare-fun b!111124 () Bool)

(assert (=> b!111124 (= e!72235 None!160)))

(assert (= (and d!31473 c!19787) b!111121))

(assert (= (and d!31473 (not c!19787)) b!111122))

(assert (= (and b!111122 c!19788) b!111123))

(assert (= (and b!111122 (not c!19788)) b!111124))

(declare-fun m!126435 () Bool)

(assert (=> b!111123 m!126435))

(assert (=> d!30947 d!31473))

(declare-fun d!31475 () Bool)

(assert (=> d!31475 (= (getValueByKey!156 lt!56911 (_1!1209 (ite (or c!19448 c!19451) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))) (Some!161 (_2!1209 (ite (or c!19448 c!19451) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(declare-fun lt!57342 () Unit!3390)

(assert (=> d!31475 (= lt!57342 (choose!691 lt!56911 (_1!1209 (ite (or c!19448 c!19451) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))) (_2!1209 (ite (or c!19448 c!19451) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(declare-fun e!72236 () Bool)

(assert (=> d!31475 e!72236))

(declare-fun res!54886 () Bool)

(assert (=> d!31475 (=> (not res!54886) (not e!72236))))

(assert (=> d!31475 (= res!54886 (isStrictlySorted!306 lt!56911))))

(assert (=> d!31475 (= (lemmaContainsTupThenGetReturnValue!75 lt!56911 (_1!1209 (ite (or c!19448 c!19451) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))) (_2!1209 (ite (or c!19448 c!19451) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))) lt!57342)))

(declare-fun b!111125 () Bool)

(declare-fun res!54887 () Bool)

(assert (=> b!111125 (=> (not res!54887) (not e!72236))))

(assert (=> b!111125 (= res!54887 (containsKey!160 lt!56911 (_1!1209 (ite (or c!19448 c!19451) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(declare-fun b!111126 () Bool)

(assert (=> b!111126 (= e!72236 (contains!829 lt!56911 (tuple2!2397 (_1!1209 (ite (or c!19448 c!19451) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))) (_2!1209 (ite (or c!19448 c!19451) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))))

(assert (= (and d!31475 res!54886) b!111125))

(assert (= (and b!111125 res!54887) b!111126))

(assert (=> d!31475 m!124939))

(declare-fun m!126437 () Bool)

(assert (=> d!31475 m!126437))

(declare-fun m!126439 () Bool)

(assert (=> d!31475 m!126439))

(declare-fun m!126441 () Bool)

(assert (=> b!111125 m!126441))

(declare-fun m!126443 () Bool)

(assert (=> b!111126 m!126443))

(assert (=> d!30947 d!31475))

(declare-fun b!111127 () Bool)

(declare-fun c!19792 () Bool)

(declare-fun c!19789 () Bool)

(declare-fun e!72238 () List!1627)

(assert (=> b!111127 (= e!72238 (ite c!19789 (t!5755 (toList!792 (ite c!19448 call!11713 (ite c!19451 call!11714 call!11715)))) (ite c!19792 (Cons!1623 (h!2222 (toList!792 (ite c!19448 call!11713 (ite c!19451 call!11714 call!11715)))) (t!5755 (toList!792 (ite c!19448 call!11713 (ite c!19451 call!11714 call!11715))))) Nil!1624)))))

(declare-fun b!111128 () Bool)

(assert (=> b!111128 (= e!72238 (insertStrictlySorted!78 (t!5755 (toList!792 (ite c!19448 call!11713 (ite c!19451 call!11714 call!11715)))) (_1!1209 (ite (or c!19448 c!19451) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))) (_2!1209 (ite (or c!19448 c!19451) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(declare-fun bm!11853 () Bool)

(declare-fun call!11858 () List!1627)

(declare-fun call!11856 () List!1627)

(assert (=> bm!11853 (= call!11858 call!11856)))

(declare-fun b!111129 () Bool)

(declare-fun e!72237 () List!1627)

(declare-fun call!11857 () List!1627)

(assert (=> b!111129 (= e!72237 call!11857)))

(declare-fun b!111130 () Bool)

(assert (=> b!111130 (= c!19792 (and ((_ is Cons!1623) (toList!792 (ite c!19448 call!11713 (ite c!19451 call!11714 call!11715)))) (bvsgt (_1!1209 (h!2222 (toList!792 (ite c!19448 call!11713 (ite c!19451 call!11714 call!11715))))) (_1!1209 (ite (or c!19448 c!19451) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))))

(declare-fun e!72240 () List!1627)

(assert (=> b!111130 (= e!72240 e!72237)))

(declare-fun b!111131 () Bool)

(declare-fun res!54889 () Bool)

(declare-fun e!72239 () Bool)

(assert (=> b!111131 (=> (not res!54889) (not e!72239))))

(declare-fun lt!57343 () List!1627)

(assert (=> b!111131 (= res!54889 (containsKey!160 lt!57343 (_1!1209 (ite (or c!19448 c!19451) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(declare-fun b!111133 () Bool)

(assert (=> b!111133 (= e!72237 call!11857)))

(declare-fun bm!11854 () Bool)

(assert (=> bm!11854 (= call!11857 call!11858)))

(declare-fun b!111134 () Bool)

(assert (=> b!111134 (= e!72240 call!11858)))

(declare-fun b!111135 () Bool)

(declare-fun e!72241 () List!1627)

(assert (=> b!111135 (= e!72241 e!72240)))

(assert (=> b!111135 (= c!19789 (and ((_ is Cons!1623) (toList!792 (ite c!19448 call!11713 (ite c!19451 call!11714 call!11715)))) (= (_1!1209 (h!2222 (toList!792 (ite c!19448 call!11713 (ite c!19451 call!11714 call!11715))))) (_1!1209 (ite (or c!19448 c!19451) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))))

(declare-fun d!31477 () Bool)

(assert (=> d!31477 e!72239))

(declare-fun res!54888 () Bool)

(assert (=> d!31477 (=> (not res!54888) (not e!72239))))

(assert (=> d!31477 (= res!54888 (isStrictlySorted!306 lt!57343))))

(assert (=> d!31477 (= lt!57343 e!72241)))

(declare-fun c!19791 () Bool)

(assert (=> d!31477 (= c!19791 (and ((_ is Cons!1623) (toList!792 (ite c!19448 call!11713 (ite c!19451 call!11714 call!11715)))) (bvslt (_1!1209 (h!2222 (toList!792 (ite c!19448 call!11713 (ite c!19451 call!11714 call!11715))))) (_1!1209 (ite (or c!19448 c!19451) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))))

(assert (=> d!31477 (isStrictlySorted!306 (toList!792 (ite c!19448 call!11713 (ite c!19451 call!11714 call!11715))))))

(assert (=> d!31477 (= (insertStrictlySorted!78 (toList!792 (ite c!19448 call!11713 (ite c!19451 call!11714 call!11715))) (_1!1209 (ite (or c!19448 c!19451) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))) (_2!1209 (ite (or c!19448 c!19451) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))) lt!57343)))

(declare-fun b!111132 () Bool)

(assert (=> b!111132 (= e!72241 call!11856)))

(declare-fun b!111136 () Bool)

(assert (=> b!111136 (= e!72239 (contains!829 lt!57343 (tuple2!2397 (_1!1209 (ite (or c!19448 c!19451) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))) (_2!1209 (ite (or c!19448 c!19451) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))))))

(declare-fun bm!11855 () Bool)

(assert (=> bm!11855 (= call!11856 ($colon$colon!82 e!72238 (ite c!19791 (h!2222 (toList!792 (ite c!19448 call!11713 (ite c!19451 call!11714 call!11715)))) (tuple2!2397 (_1!1209 (ite (or c!19448 c!19451) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))) (_2!1209 (ite (or c!19448 c!19451) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))))))))

(declare-fun c!19790 () Bool)

(assert (=> bm!11855 (= c!19790 c!19791)))

(assert (= (and d!31477 c!19791) b!111132))

(assert (= (and d!31477 (not c!19791)) b!111135))

(assert (= (and b!111135 c!19789) b!111134))

(assert (= (and b!111135 (not c!19789)) b!111130))

(assert (= (and b!111130 c!19792) b!111129))

(assert (= (and b!111130 (not c!19792)) b!111133))

(assert (= (or b!111129 b!111133) bm!11854))

(assert (= (or b!111134 bm!11854) bm!11853))

(assert (= (or b!111132 bm!11853) bm!11855))

(assert (= (and bm!11855 c!19790) b!111128))

(assert (= (and bm!11855 (not c!19790)) b!111127))

(assert (= (and d!31477 res!54888) b!111131))

(assert (= (and b!111131 res!54889) b!111136))

(declare-fun m!126445 () Bool)

(assert (=> d!31477 m!126445))

(declare-fun m!126447 () Bool)

(assert (=> d!31477 m!126447))

(declare-fun m!126449 () Bool)

(assert (=> b!111131 m!126449))

(declare-fun m!126451 () Bool)

(assert (=> bm!11855 m!126451))

(declare-fun m!126453 () Bool)

(assert (=> b!111128 m!126453))

(declare-fun m!126455 () Bool)

(assert (=> b!111136 m!126455))

(assert (=> d!30947 d!31477))

(declare-fun d!31479 () Bool)

(assert (=> d!31479 (= (get!1350 (getValueByKey!156 (toList!792 lt!56576) lt!56580)) (v!2926 (getValueByKey!156 (toList!792 lt!56576) lt!56580)))))

(assert (=> d!30963 d!31479))

(declare-fun b!111139 () Bool)

(declare-fun e!72243 () Option!162)

(assert (=> b!111139 (= e!72243 (getValueByKey!156 (t!5755 (toList!792 lt!56576)) lt!56580))))

(declare-fun d!31481 () Bool)

(declare-fun c!19793 () Bool)

(assert (=> d!31481 (= c!19793 (and ((_ is Cons!1623) (toList!792 lt!56576)) (= (_1!1209 (h!2222 (toList!792 lt!56576))) lt!56580)))))

(declare-fun e!72242 () Option!162)

(assert (=> d!31481 (= (getValueByKey!156 (toList!792 lt!56576) lt!56580) e!72242)))

(declare-fun b!111137 () Bool)

(assert (=> b!111137 (= e!72242 (Some!161 (_2!1209 (h!2222 (toList!792 lt!56576)))))))

(declare-fun b!111138 () Bool)

(assert (=> b!111138 (= e!72242 e!72243)))

(declare-fun c!19794 () Bool)

(assert (=> b!111138 (= c!19794 (and ((_ is Cons!1623) (toList!792 lt!56576)) (not (= (_1!1209 (h!2222 (toList!792 lt!56576))) lt!56580))))))

(declare-fun b!111140 () Bool)

(assert (=> b!111140 (= e!72243 None!160)))

(assert (= (and d!31481 c!19793) b!111137))

(assert (= (and d!31481 (not c!19793)) b!111138))

(assert (= (and b!111138 c!19794) b!111139))

(assert (= (and b!111138 (not c!19794)) b!111140))

(declare-fun m!126457 () Bool)

(assert (=> b!111139 m!126457))

(assert (=> d!30963 d!31481))

(declare-fun c!19795 () Bool)

(declare-fun c!19798 () Bool)

(declare-fun b!111141 () Bool)

(declare-fun e!72245 () List!1627)

(assert (=> b!111141 (= e!72245 (ite c!19795 (t!5755 (t!5755 (toList!792 lt!56303))) (ite c!19798 (Cons!1623 (h!2222 (t!5755 (toList!792 lt!56303))) (t!5755 (t!5755 (toList!792 lt!56303)))) Nil!1624)))))

(declare-fun b!111142 () Bool)

(assert (=> b!111142 (= e!72245 (insertStrictlySorted!78 (t!5755 (t!5755 (toList!792 lt!56303))) (_1!1209 lt!56300) (_2!1209 lt!56300)))))

(declare-fun bm!11856 () Bool)

(declare-fun call!11861 () List!1627)

(declare-fun call!11859 () List!1627)

(assert (=> bm!11856 (= call!11861 call!11859)))

(declare-fun b!111143 () Bool)

(declare-fun e!72244 () List!1627)

(declare-fun call!11860 () List!1627)

(assert (=> b!111143 (= e!72244 call!11860)))

(declare-fun b!111144 () Bool)

(assert (=> b!111144 (= c!19798 (and ((_ is Cons!1623) (t!5755 (toList!792 lt!56303))) (bvsgt (_1!1209 (h!2222 (t!5755 (toList!792 lt!56303)))) (_1!1209 lt!56300))))))

(declare-fun e!72247 () List!1627)

(assert (=> b!111144 (= e!72247 e!72244)))

(declare-fun b!111145 () Bool)

(declare-fun res!54891 () Bool)

(declare-fun e!72246 () Bool)

(assert (=> b!111145 (=> (not res!54891) (not e!72246))))

(declare-fun lt!57344 () List!1627)

(assert (=> b!111145 (= res!54891 (containsKey!160 lt!57344 (_1!1209 lt!56300)))))

(declare-fun b!111147 () Bool)

(assert (=> b!111147 (= e!72244 call!11860)))

(declare-fun bm!11857 () Bool)

(assert (=> bm!11857 (= call!11860 call!11861)))

(declare-fun b!111148 () Bool)

(assert (=> b!111148 (= e!72247 call!11861)))

(declare-fun b!111149 () Bool)

(declare-fun e!72248 () List!1627)

(assert (=> b!111149 (= e!72248 e!72247)))

(assert (=> b!111149 (= c!19795 (and ((_ is Cons!1623) (t!5755 (toList!792 lt!56303))) (= (_1!1209 (h!2222 (t!5755 (toList!792 lt!56303)))) (_1!1209 lt!56300))))))

(declare-fun d!31483 () Bool)

(assert (=> d!31483 e!72246))

(declare-fun res!54890 () Bool)

(assert (=> d!31483 (=> (not res!54890) (not e!72246))))

(assert (=> d!31483 (= res!54890 (isStrictlySorted!306 lt!57344))))

(assert (=> d!31483 (= lt!57344 e!72248)))

(declare-fun c!19797 () Bool)

(assert (=> d!31483 (= c!19797 (and ((_ is Cons!1623) (t!5755 (toList!792 lt!56303))) (bvslt (_1!1209 (h!2222 (t!5755 (toList!792 lt!56303)))) (_1!1209 lt!56300))))))

(assert (=> d!31483 (isStrictlySorted!306 (t!5755 (toList!792 lt!56303)))))

(assert (=> d!31483 (= (insertStrictlySorted!78 (t!5755 (toList!792 lt!56303)) (_1!1209 lt!56300) (_2!1209 lt!56300)) lt!57344)))

(declare-fun b!111146 () Bool)

(assert (=> b!111146 (= e!72248 call!11859)))

(declare-fun b!111150 () Bool)

(assert (=> b!111150 (= e!72246 (contains!829 lt!57344 (tuple2!2397 (_1!1209 lt!56300) (_2!1209 lt!56300))))))

(declare-fun bm!11858 () Bool)

(assert (=> bm!11858 (= call!11859 ($colon$colon!82 e!72245 (ite c!19797 (h!2222 (t!5755 (toList!792 lt!56303))) (tuple2!2397 (_1!1209 lt!56300) (_2!1209 lt!56300)))))))

(declare-fun c!19796 () Bool)

(assert (=> bm!11858 (= c!19796 c!19797)))

(assert (= (and d!31483 c!19797) b!111146))

(assert (= (and d!31483 (not c!19797)) b!111149))

(assert (= (and b!111149 c!19795) b!111148))

(assert (= (and b!111149 (not c!19795)) b!111144))

(assert (= (and b!111144 c!19798) b!111143))

(assert (= (and b!111144 (not c!19798)) b!111147))

(assert (= (or b!111143 b!111147) bm!11857))

(assert (= (or b!111148 bm!11857) bm!11856))

(assert (= (or b!111146 bm!11856) bm!11858))

(assert (= (and bm!11858 c!19796) b!111142))

(assert (= (and bm!11858 (not c!19796)) b!111141))

(assert (= (and d!31483 res!54890) b!111145))

(assert (= (and b!111145 res!54891) b!111150))

(declare-fun m!126459 () Bool)

(assert (=> d!31483 m!126459))

(assert (=> d!31483 m!125867))

(declare-fun m!126461 () Bool)

(assert (=> b!111145 m!126461))

(declare-fun m!126463 () Bool)

(assert (=> bm!11858 m!126463))

(declare-fun m!126465 () Bool)

(assert (=> b!111142 m!126465))

(declare-fun m!126467 () Bool)

(assert (=> b!111150 m!126467))

(assert (=> b!110255 d!31483))

(declare-fun d!31485 () Bool)

(declare-fun res!54892 () Bool)

(declare-fun e!72249 () Bool)

(assert (=> d!31485 (=> res!54892 e!72249)))

(assert (=> d!31485 (= res!54892 (or ((_ is Nil!1624) lt!56790) ((_ is Nil!1624) (t!5755 lt!56790))))))

(assert (=> d!31485 (= (isStrictlySorted!306 lt!56790) e!72249)))

(declare-fun b!111151 () Bool)

(declare-fun e!72250 () Bool)

(assert (=> b!111151 (= e!72249 e!72250)))

(declare-fun res!54893 () Bool)

(assert (=> b!111151 (=> (not res!54893) (not e!72250))))

(assert (=> b!111151 (= res!54893 (bvslt (_1!1209 (h!2222 lt!56790)) (_1!1209 (h!2222 (t!5755 lt!56790)))))))

(declare-fun b!111152 () Bool)

(assert (=> b!111152 (= e!72250 (isStrictlySorted!306 (t!5755 lt!56790)))))

(assert (= (and d!31485 (not res!54892)) b!111151))

(assert (= (and b!111151 res!54893) b!111152))

(declare-fun m!126469 () Bool)

(assert (=> b!111152 m!126469))

(assert (=> d!30905 d!31485))

(assert (=> d!30905 d!31345))

(declare-fun d!31487 () Bool)

(declare-fun lt!57345 () Bool)

(assert (=> d!31487 (= lt!57345 (select (content!113 lt!56402) (tuple2!2397 (_1!1209 lt!56299) (_2!1209 lt!56299))))))

(declare-fun e!72251 () Bool)

(assert (=> d!31487 (= lt!57345 e!72251)))

(declare-fun res!54894 () Bool)

(assert (=> d!31487 (=> (not res!54894) (not e!72251))))

(assert (=> d!31487 (= res!54894 ((_ is Cons!1623) lt!56402))))

(assert (=> d!31487 (= (contains!829 lt!56402 (tuple2!2397 (_1!1209 lt!56299) (_2!1209 lt!56299))) lt!57345)))

(declare-fun b!111153 () Bool)

(declare-fun e!72252 () Bool)

(assert (=> b!111153 (= e!72251 e!72252)))

(declare-fun res!54895 () Bool)

(assert (=> b!111153 (=> res!54895 e!72252)))

(assert (=> b!111153 (= res!54895 (= (h!2222 lt!56402) (tuple2!2397 (_1!1209 lt!56299) (_2!1209 lt!56299))))))

(declare-fun b!111154 () Bool)

(assert (=> b!111154 (= e!72252 (contains!829 (t!5755 lt!56402) (tuple2!2397 (_1!1209 lt!56299) (_2!1209 lt!56299))))))

(assert (= (and d!31487 res!54894) b!111153))

(assert (= (and b!111153 (not res!54895)) b!111154))

(declare-fun m!126471 () Bool)

(assert (=> d!31487 m!126471))

(declare-fun m!126473 () Bool)

(assert (=> d!31487 m!126473))

(declare-fun m!126475 () Bool)

(assert (=> b!111154 m!126475))

(assert (=> b!110175 d!31487))

(declare-fun d!31489 () Bool)

(declare-fun e!72254 () Bool)

(assert (=> d!31489 e!72254))

(declare-fun res!54896 () Bool)

(assert (=> d!31489 (=> res!54896 e!72254)))

(declare-fun lt!57346 () Bool)

(assert (=> d!31489 (= res!54896 (not lt!57346))))

(declare-fun lt!57347 () Bool)

(assert (=> d!31489 (= lt!57346 lt!57347)))

(declare-fun lt!57348 () Unit!3390)

(declare-fun e!72253 () Unit!3390)

(assert (=> d!31489 (= lt!57348 e!72253)))

(declare-fun c!19799 () Bool)

(assert (=> d!31489 (= c!19799 lt!57347)))

(assert (=> d!31489 (= lt!57347 (containsKey!160 (toList!792 lt!56765) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!31489 (= (contains!827 lt!56765 #b1000000000000000000000000000000000000000000000000000000000000000) lt!57346)))

(declare-fun b!111155 () Bool)

(declare-fun lt!57349 () Unit!3390)

(assert (=> b!111155 (= e!72253 lt!57349)))

(assert (=> b!111155 (= lt!57349 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 lt!56765) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!111155 (isDefined!110 (getValueByKey!156 (toList!792 lt!56765) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!111156 () Bool)

(declare-fun Unit!3454 () Unit!3390)

(assert (=> b!111156 (= e!72253 Unit!3454)))

(declare-fun b!111157 () Bool)

(assert (=> b!111157 (= e!72254 (isDefined!110 (getValueByKey!156 (toList!792 lt!56765) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!31489 c!19799) b!111155))

(assert (= (and d!31489 (not c!19799)) b!111156))

(assert (= (and d!31489 (not res!54896)) b!111157))

(declare-fun m!126477 () Bool)

(assert (=> d!31489 m!126477))

(declare-fun m!126479 () Bool)

(assert (=> b!111155 m!126479))

(declare-fun m!126481 () Bool)

(assert (=> b!111155 m!126481))

(assert (=> b!111155 m!126481))

(declare-fun m!126483 () Bool)

(assert (=> b!111155 m!126483))

(assert (=> b!111157 m!126481))

(assert (=> b!111157 m!126481))

(assert (=> b!111157 m!126483))

(assert (=> bm!11757 d!31489))

(declare-fun e!72267 () SeekEntryResult!264)

(declare-fun b!111176 () Bool)

(assert (=> b!111176 (= e!72267 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (mask!6793 newMap!16)) #b00000000000000000000000000000000 (mask!6793 newMap!16)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (_keys!4339 newMap!16) (mask!6793 newMap!16)))))

(declare-fun b!111177 () Bool)

(declare-fun e!72265 () Bool)

(declare-fun lt!57355 () SeekEntryResult!264)

(assert (=> b!111177 (= e!72265 (bvsge (x!13951 lt!57355) #b01111111111111111111111111111110))))

(declare-fun b!111178 () Bool)

(declare-fun e!72269 () Bool)

(assert (=> b!111178 (= e!72265 e!72269)))

(declare-fun res!54905 () Bool)

(assert (=> b!111178 (= res!54905 (and ((_ is Intermediate!264) lt!57355) (not (undefined!1076 lt!57355)) (bvslt (x!13951 lt!57355) #b01111111111111111111111111111110) (bvsge (x!13951 lt!57355) #b00000000000000000000000000000000) (bvsge (x!13951 lt!57355) #b00000000000000000000000000000000)))))

(assert (=> b!111178 (=> (not res!54905) (not e!72269))))

(declare-fun b!111179 () Bool)

(declare-fun e!72266 () SeekEntryResult!264)

(assert (=> b!111179 (= e!72266 e!72267)))

(declare-fun c!19807 () Bool)

(declare-fun lt!57354 () (_ BitVec 64))

(assert (=> b!111179 (= c!19807 (or (= lt!57354 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) (= (bvadd lt!57354 lt!57354) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!111180 () Bool)

(assert (=> b!111180 (and (bvsge (index!3208 lt!57355) #b00000000000000000000000000000000) (bvslt (index!3208 lt!57355) (size!2326 (_keys!4339 newMap!16))))))

(declare-fun e!72268 () Bool)

(assert (=> b!111180 (= e!72268 (= (select (arr!2068 (_keys!4339 newMap!16)) (index!3208 lt!57355)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!31491 () Bool)

(assert (=> d!31491 e!72265))

(declare-fun c!19808 () Bool)

(assert (=> d!31491 (= c!19808 (and ((_ is Intermediate!264) lt!57355) (undefined!1076 lt!57355)))))

(assert (=> d!31491 (= lt!57355 e!72266)))

(declare-fun c!19806 () Bool)

(assert (=> d!31491 (= c!19806 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(assert (=> d!31491 (= lt!57354 (select (arr!2068 (_keys!4339 newMap!16)) (toIndex!0 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (mask!6793 newMap!16))))))

(assert (=> d!31491 (validMask!0 (mask!6793 newMap!16))))

(assert (=> d!31491 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (mask!6793 newMap!16)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (_keys!4339 newMap!16) (mask!6793 newMap!16)) lt!57355)))

(declare-fun b!111181 () Bool)

(assert (=> b!111181 (= e!72266 (Intermediate!264 true (toIndex!0 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (mask!6793 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!111182 () Bool)

(assert (=> b!111182 (and (bvsge (index!3208 lt!57355) #b00000000000000000000000000000000) (bvslt (index!3208 lt!57355) (size!2326 (_keys!4339 newMap!16))))))

(declare-fun res!54904 () Bool)

(assert (=> b!111182 (= res!54904 (= (select (arr!2068 (_keys!4339 newMap!16)) (index!3208 lt!57355)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!111182 (=> res!54904 e!72268)))

(declare-fun b!111183 () Bool)

(assert (=> b!111183 (= e!72267 (Intermediate!264 false (toIndex!0 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (mask!6793 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!111184 () Bool)

(assert (=> b!111184 (and (bvsge (index!3208 lt!57355) #b00000000000000000000000000000000) (bvslt (index!3208 lt!57355) (size!2326 (_keys!4339 newMap!16))))))

(declare-fun res!54903 () Bool)

(assert (=> b!111184 (= res!54903 (= (select (arr!2068 (_keys!4339 newMap!16)) (index!3208 lt!57355)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))

(assert (=> b!111184 (=> res!54903 e!72268)))

(assert (=> b!111184 (= e!72269 e!72268)))

(assert (= (and d!31491 c!19806) b!111181))

(assert (= (and d!31491 (not c!19806)) b!111179))

(assert (= (and b!111179 c!19807) b!111183))

(assert (= (and b!111179 (not c!19807)) b!111176))

(assert (= (and d!31491 c!19808) b!111177))

(assert (= (and d!31491 (not c!19808)) b!111178))

(assert (= (and b!111178 res!54905) b!111184))

(assert (= (and b!111184 (not res!54903)) b!111182))

(assert (= (and b!111182 (not res!54904)) b!111180))

(assert (=> d!31491 m!124263))

(declare-fun m!126485 () Bool)

(assert (=> d!31491 m!126485))

(assert (=> d!31491 m!124269))

(declare-fun m!126487 () Bool)

(assert (=> b!111184 m!126487))

(assert (=> b!111182 m!126487))

(assert (=> b!111180 m!126487))

(assert (=> b!111176 m!124263))

(declare-fun m!126489 () Bool)

(assert (=> b!111176 m!126489))

(assert (=> b!111176 m!126489))

(assert (=> b!111176 m!123865))

(declare-fun m!126491 () Bool)

(assert (=> b!111176 m!126491))

(assert (=> d!30791 d!31491))

(declare-fun d!31493 () Bool)

(declare-fun lt!57361 () (_ BitVec 32))

(declare-fun lt!57360 () (_ BitVec 32))

(assert (=> d!31493 (= lt!57361 (bvmul (bvxor lt!57360 (bvlshr lt!57360 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!31493 (= lt!57360 ((_ extract 31 0) (bvand (bvxor (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (bvlshr (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!31493 (and (bvsge (mask!6793 newMap!16) #b00000000000000000000000000000000) (let ((res!54906 (let ((h!2224 ((_ extract 31 0) (bvand (bvxor (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (bvlshr (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!14054 (bvmul (bvxor h!2224 (bvlshr h!2224 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!14054 (bvlshr x!14054 #b00000000000000000000000000001101)) (mask!6793 newMap!16)))))) (and (bvslt res!54906 (bvadd (mask!6793 newMap!16) #b00000000000000000000000000000001)) (bvsge res!54906 #b00000000000000000000000000000000))))))

(assert (=> d!31493 (= (toIndex!0 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (mask!6793 newMap!16)) (bvand (bvxor lt!57361 (bvlshr lt!57361 #b00000000000000000000000000001101)) (mask!6793 newMap!16)))))

(assert (=> d!30791 d!31493))

(assert (=> d!30791 d!31081))

(declare-fun d!31495 () Bool)

(declare-fun res!54907 () Bool)

(declare-fun e!72270 () Bool)

(assert (=> d!31495 (=> res!54907 e!72270)))

(assert (=> d!31495 (= res!54907 (and ((_ is Cons!1623) (toList!792 lt!56589)) (= (_1!1209 (h!2222 (toList!792 lt!56589))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!31495 (= (containsKey!160 (toList!792 lt!56589) #b1000000000000000000000000000000000000000000000000000000000000000) e!72270)))

(declare-fun b!111185 () Bool)

(declare-fun e!72271 () Bool)

(assert (=> b!111185 (= e!72270 e!72271)))

(declare-fun res!54908 () Bool)

(assert (=> b!111185 (=> (not res!54908) (not e!72271))))

(assert (=> b!111185 (= res!54908 (and (or (not ((_ is Cons!1623) (toList!792 lt!56589))) (bvsle (_1!1209 (h!2222 (toList!792 lt!56589))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1623) (toList!792 lt!56589)) (bvslt (_1!1209 (h!2222 (toList!792 lt!56589))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!111186 () Bool)

(assert (=> b!111186 (= e!72271 (containsKey!160 (t!5755 (toList!792 lt!56589)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!31495 (not res!54907)) b!111185))

(assert (= (and b!111185 res!54908) b!111186))

(declare-fun m!126493 () Bool)

(assert (=> b!111186 m!126493))

(assert (=> d!30829 d!31495))

(declare-fun d!31497 () Bool)

(assert (=> d!31497 (contains!827 (getCurrentListMap!469 (_keys!4339 newMap!16) lt!56515 (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) (select (arr!2068 (_keys!4339 newMap!16)) (index!3207 lt!56493)))))

(assert (=> d!31497 true))

(declare-fun _$16!132 () Unit!3390)

(assert (=> d!31497 (= (choose!694 (_keys!4339 newMap!16) lt!56515 (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (index!3207 lt!56493) (defaultEntry!2626 newMap!16)) _$16!132)))

(declare-fun bs!4581 () Bool)

(assert (= bs!4581 d!31497))

(assert (=> bs!4581 m!124427))

(assert (=> bs!4581 m!124141))

(assert (=> bs!4581 m!124427))

(assert (=> bs!4581 m!124141))

(assert (=> bs!4581 m!124429))

(assert (=> d!30833 d!31497))

(assert (=> d!30833 d!31081))

(declare-fun d!31499 () Bool)

(declare-fun res!54909 () Bool)

(declare-fun e!72272 () Bool)

(assert (=> d!31499 (=> res!54909 e!72272)))

(assert (=> d!31499 (= res!54909 (and ((_ is Cons!1623) (toList!792 lt!56399)) (= (_1!1209 (h!2222 (toList!792 lt!56399))) (_1!1209 lt!56300))))))

(assert (=> d!31499 (= (containsKey!160 (toList!792 lt!56399) (_1!1209 lt!56300)) e!72272)))

(declare-fun b!111187 () Bool)

(declare-fun e!72273 () Bool)

(assert (=> b!111187 (= e!72272 e!72273)))

(declare-fun res!54910 () Bool)

(assert (=> b!111187 (=> (not res!54910) (not e!72273))))

(assert (=> b!111187 (= res!54910 (and (or (not ((_ is Cons!1623) (toList!792 lt!56399))) (bvsle (_1!1209 (h!2222 (toList!792 lt!56399))) (_1!1209 lt!56300))) ((_ is Cons!1623) (toList!792 lt!56399)) (bvslt (_1!1209 (h!2222 (toList!792 lt!56399))) (_1!1209 lt!56300))))))

(declare-fun b!111188 () Bool)

(assert (=> b!111188 (= e!72273 (containsKey!160 (t!5755 (toList!792 lt!56399)) (_1!1209 lt!56300)))))

(assert (= (and d!31499 (not res!54909)) b!111187))

(assert (= (and b!111187 res!54910) b!111188))

(declare-fun m!126495 () Bool)

(assert (=> b!111188 m!126495))

(assert (=> d!30805 d!31499))

(assert (=> b!110078 d!31205))

(declare-fun d!31501 () Bool)

(declare-fun res!54911 () Bool)

(declare-fun e!72274 () Bool)

(assert (=> d!31501 (=> res!54911 e!72274)))

(assert (=> d!31501 (= res!54911 (or ((_ is Nil!1624) lt!56632) ((_ is Nil!1624) (t!5755 lt!56632))))))

(assert (=> d!31501 (= (isStrictlySorted!306 lt!56632) e!72274)))

(declare-fun b!111189 () Bool)

(declare-fun e!72275 () Bool)

(assert (=> b!111189 (= e!72274 e!72275)))

(declare-fun res!54912 () Bool)

(assert (=> b!111189 (=> (not res!54912) (not e!72275))))

(assert (=> b!111189 (= res!54912 (bvslt (_1!1209 (h!2222 lt!56632)) (_1!1209 (h!2222 (t!5755 lt!56632)))))))

(declare-fun b!111190 () Bool)

(assert (=> b!111190 (= e!72275 (isStrictlySorted!306 (t!5755 lt!56632)))))

(assert (= (and d!31501 (not res!54911)) b!111189))

(assert (= (and b!111189 res!54912) b!111190))

(declare-fun m!126497 () Bool)

(assert (=> b!111190 m!126497))

(assert (=> d!30811 d!31501))

(declare-fun d!31503 () Bool)

(declare-fun res!54913 () Bool)

(declare-fun e!72276 () Bool)

(assert (=> d!31503 (=> res!54913 e!72276)))

(assert (=> d!31503 (= res!54913 (or ((_ is Nil!1624) (toList!792 (+!139 lt!56303 lt!56299))) ((_ is Nil!1624) (t!5755 (toList!792 (+!139 lt!56303 lt!56299))))))))

(assert (=> d!31503 (= (isStrictlySorted!306 (toList!792 (+!139 lt!56303 lt!56299))) e!72276)))

(declare-fun b!111191 () Bool)

(declare-fun e!72277 () Bool)

(assert (=> b!111191 (= e!72276 e!72277)))

(declare-fun res!54914 () Bool)

(assert (=> b!111191 (=> (not res!54914) (not e!72277))))

(assert (=> b!111191 (= res!54914 (bvslt (_1!1209 (h!2222 (toList!792 (+!139 lt!56303 lt!56299)))) (_1!1209 (h!2222 (t!5755 (toList!792 (+!139 lt!56303 lt!56299)))))))))

(declare-fun b!111192 () Bool)

(assert (=> b!111192 (= e!72277 (isStrictlySorted!306 (t!5755 (toList!792 (+!139 lt!56303 lt!56299)))))))

(assert (= (and d!31503 (not res!54913)) b!111191))

(assert (= (and b!111191 res!54914) b!111192))

(assert (=> b!111192 m!125879))

(assert (=> d!30811 d!31503))

(declare-fun d!31505 () Bool)

(assert (=> d!31505 (isDefined!110 (getValueByKey!156 (toList!792 (+!139 lt!56577 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))) lt!56574))))

(declare-fun lt!57362 () Unit!3390)

(assert (=> d!31505 (= lt!57362 (choose!699 (toList!792 (+!139 lt!56577 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))) lt!56574))))

(declare-fun e!72278 () Bool)

(assert (=> d!31505 e!72278))

(declare-fun res!54915 () Bool)

(assert (=> d!31505 (=> (not res!54915) (not e!72278))))

(assert (=> d!31505 (= res!54915 (isStrictlySorted!306 (toList!792 (+!139 lt!56577 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(assert (=> d!31505 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 (+!139 lt!56577 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))) lt!56574) lt!57362)))

(declare-fun b!111193 () Bool)

(assert (=> b!111193 (= e!72278 (containsKey!160 (toList!792 (+!139 lt!56577 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))) lt!56574))))

(assert (= (and d!31505 res!54915) b!111193))

(assert (=> d!31505 m!124985))

(assert (=> d!31505 m!124985))

(assert (=> d!31505 m!124987))

(declare-fun m!126499 () Bool)

(assert (=> d!31505 m!126499))

(declare-fun m!126501 () Bool)

(assert (=> d!31505 m!126501))

(assert (=> b!111193 m!124981))

(assert (=> b!110393 d!31505))

(assert (=> b!110393 d!31319))

(assert (=> b!110393 d!31321))

(declare-fun d!31507 () Bool)

(assert (=> d!31507 (= (apply!100 lt!56684 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1350 (getValueByKey!156 (toList!792 lt!56684) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4582 () Bool)

(assert (= bs!4582 d!31507))

(declare-fun m!126503 () Bool)

(assert (=> bs!4582 m!126503))

(assert (=> bs!4582 m!126503))

(declare-fun m!126505 () Bool)

(assert (=> bs!4582 m!126505))

(assert (=> b!110097 d!31507))

(declare-fun d!31509 () Bool)

(declare-fun lt!57363 () Bool)

(assert (=> d!31509 (= lt!57363 (select (content!113 (toList!792 lt!56799)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!72279 () Bool)

(assert (=> d!31509 (= lt!57363 e!72279)))

(declare-fun res!54916 () Bool)

(assert (=> d!31509 (=> (not res!54916) (not e!72279))))

(assert (=> d!31509 (= res!54916 ((_ is Cons!1623) (toList!792 lt!56799)))))

(assert (=> d!31509 (= (contains!829 (toList!792 lt!56799) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!57363)))

(declare-fun b!111194 () Bool)

(declare-fun e!72280 () Bool)

(assert (=> b!111194 (= e!72279 e!72280)))

(declare-fun res!54917 () Bool)

(assert (=> b!111194 (=> res!54917 e!72280)))

(assert (=> b!111194 (= res!54917 (= (h!2222 (toList!792 lt!56799)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!111195 () Bool)

(assert (=> b!111195 (= e!72280 (contains!829 (t!5755 (toList!792 lt!56799)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!31509 res!54916) b!111194))

(assert (= (and b!111194 (not res!54917)) b!111195))

(declare-fun m!126507 () Bool)

(assert (=> d!31509 m!126507))

(declare-fun m!126509 () Bool)

(assert (=> d!31509 m!126509))

(declare-fun m!126511 () Bool)

(assert (=> b!111195 m!126511))

(assert (=> b!110272 d!31509))

(declare-fun d!31511 () Bool)

(declare-fun res!54918 () Bool)

(declare-fun e!72281 () Bool)

(assert (=> d!31511 (=> res!54918 e!72281)))

(assert (=> d!31511 (= res!54918 (and ((_ is Cons!1623) (toList!792 lt!56425)) (= (_1!1209 (h!2222 (toList!792 lt!56425))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!31511 (= (containsKey!160 (toList!792 lt!56425) #b0000000000000000000000000000000000000000000000000000000000000000) e!72281)))

(declare-fun b!111196 () Bool)

(declare-fun e!72282 () Bool)

(assert (=> b!111196 (= e!72281 e!72282)))

(declare-fun res!54919 () Bool)

(assert (=> b!111196 (=> (not res!54919) (not e!72282))))

(assert (=> b!111196 (= res!54919 (and (or (not ((_ is Cons!1623) (toList!792 lt!56425))) (bvsle (_1!1209 (h!2222 (toList!792 lt!56425))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1623) (toList!792 lt!56425)) (bvslt (_1!1209 (h!2222 (toList!792 lt!56425))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!111197 () Bool)

(assert (=> b!111197 (= e!72282 (containsKey!160 (t!5755 (toList!792 lt!56425)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!31511 (not res!54918)) b!111196))

(assert (= (and b!111196 res!54919) b!111197))

(declare-fun m!126513 () Bool)

(assert (=> b!111197 m!126513))

(assert (=> d!30871 d!31511))

(declare-fun d!31513 () Bool)

(declare-fun res!54920 () Bool)

(declare-fun e!72283 () Bool)

(assert (=> d!31513 (=> res!54920 e!72283)))

(assert (=> d!31513 (= res!54920 (= (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))

(assert (=> d!31513 (= (arrayContainsKey!0 (_keys!4339 (v!2920 (underlying!363 thiss!992))) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!72283)))

(declare-fun b!111198 () Bool)

(declare-fun e!72284 () Bool)

(assert (=> b!111198 (= e!72283 e!72284)))

(declare-fun res!54921 () Bool)

(assert (=> b!111198 (=> (not res!54921) (not e!72284))))

(assert (=> b!111198 (= res!54921 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2326 (_keys!4339 (v!2920 (underlying!363 thiss!992))))))))

(declare-fun b!111199 () Bool)

(assert (=> b!111199 (= e!72284 (arrayContainsKey!0 (_keys!4339 (v!2920 (underlying!363 thiss!992))) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!31513 (not res!54920)) b!111198))

(assert (= (and b!111198 res!54921) b!111199))

(assert (=> d!31513 m!125353))

(assert (=> b!111199 m!123865))

(declare-fun m!126515 () Bool)

(assert (=> b!111199 m!126515))

(assert (=> b!110370 d!31513))

(assert (=> d!30937 d!30935))

(declare-fun d!31515 () Bool)

(assert (=> d!31515 (= (getValueByKey!156 lt!56387 (_1!1209 lt!56299)) (Some!161 (_2!1209 lt!56299)))))

(assert (=> d!31515 true))

(declare-fun _$22!448 () Unit!3390)

(assert (=> d!31515 (= (choose!691 lt!56387 (_1!1209 lt!56299) (_2!1209 lt!56299)) _$22!448)))

(declare-fun bs!4583 () Bool)

(assert (= bs!4583 d!31515))

(assert (=> bs!4583 m!124031))

(assert (=> d!30937 d!31515))

(declare-fun d!31517 () Bool)

(declare-fun res!54922 () Bool)

(declare-fun e!72285 () Bool)

(assert (=> d!31517 (=> res!54922 e!72285)))

(assert (=> d!31517 (= res!54922 (or ((_ is Nil!1624) lt!56387) ((_ is Nil!1624) (t!5755 lt!56387))))))

(assert (=> d!31517 (= (isStrictlySorted!306 lt!56387) e!72285)))

(declare-fun b!111200 () Bool)

(declare-fun e!72286 () Bool)

(assert (=> b!111200 (= e!72285 e!72286)))

(declare-fun res!54923 () Bool)

(assert (=> b!111200 (=> (not res!54923) (not e!72286))))

(assert (=> b!111200 (= res!54923 (bvslt (_1!1209 (h!2222 lt!56387)) (_1!1209 (h!2222 (t!5755 lt!56387)))))))

(declare-fun b!111201 () Bool)

(assert (=> b!111201 (= e!72286 (isStrictlySorted!306 (t!5755 lt!56387)))))

(assert (= (and d!31517 (not res!54922)) b!111200))

(assert (= (and b!111200 res!54923) b!111201))

(declare-fun m!126517 () Bool)

(assert (=> b!111201 m!126517))

(assert (=> d!30937 d!31517))

(declare-fun b!111202 () Bool)

(declare-fun res!54925 () Bool)

(declare-fun e!72287 () Bool)

(assert (=> b!111202 (=> (not res!54925) (not e!72287))))

(assert (=> b!111202 (= res!54925 (and (= (size!2327 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd (mask!6793 (v!2920 (underlying!363 thiss!992))) #b00000000000000000000000000000001)) (= (size!2326 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (size!2327 (_values!2609 (v!2920 (underlying!363 thiss!992))))) (bvsge (_size!507 (v!2920 (underlying!363 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!507 (v!2920 (underlying!363 thiss!992))) (bvadd (mask!6793 (v!2920 (underlying!363 thiss!992))) #b00000000000000000000000000000001))))))

(declare-fun b!111203 () Bool)

(declare-fun res!54926 () Bool)

(assert (=> b!111203 (=> (not res!54926) (not e!72287))))

(assert (=> b!111203 (= res!54926 (bvsge (size!2332 (v!2920 (underlying!363 thiss!992))) (_size!507 (v!2920 (underlying!363 thiss!992)))))))

(declare-fun d!31519 () Bool)

(declare-fun res!54927 () Bool)

(assert (=> d!31519 (=> (not res!54927) (not e!72287))))

(assert (=> d!31519 (= res!54927 (validMask!0 (mask!6793 (v!2920 (underlying!363 thiss!992)))))))

(assert (=> d!31519 (= (simpleValid!76 (v!2920 (underlying!363 thiss!992))) e!72287)))

(declare-fun b!111205 () Bool)

(assert (=> b!111205 (= e!72287 (and (bvsge (extraKeys!2423 (v!2920 (underlying!363 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2423 (v!2920 (underlying!363 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!507 (v!2920 (underlying!363 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun b!111204 () Bool)

(declare-fun res!54924 () Bool)

(assert (=> b!111204 (=> (not res!54924) (not e!72287))))

(assert (=> b!111204 (= res!54924 (= (size!2332 (v!2920 (underlying!363 thiss!992))) (bvadd (_size!507 (v!2920 (underlying!363 thiss!992))) (bvsdiv (bvadd (extraKeys!2423 (v!2920 (underlying!363 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(assert (= (and d!31519 res!54927) b!111202))

(assert (= (and b!111202 res!54925) b!111203))

(assert (= (and b!111203 res!54926) b!111204))

(assert (= (and b!111204 res!54924) b!111205))

(declare-fun m!126519 () Bool)

(assert (=> b!111203 m!126519))

(assert (=> d!31519 m!123901))

(assert (=> b!111204 m!126519))

(assert (=> d!30825 d!31519))

(declare-fun d!31521 () Bool)

(assert (=> d!31521 (= (get!1350 (getValueByKey!156 (toList!792 lt!56589) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2926 (getValueByKey!156 (toList!792 lt!56589) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!30955 d!31521))

(assert (=> d!30955 d!31365))

(declare-fun d!31523 () Bool)

(assert (=> d!31523 (isDefined!110 (getValueByKey!156 (toList!792 lt!56425) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!57364 () Unit!3390)

(assert (=> d!31523 (= lt!57364 (choose!699 (toList!792 lt!56425) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!72288 () Bool)

(assert (=> d!31523 e!72288))

(declare-fun res!54928 () Bool)

(assert (=> d!31523 (=> (not res!54928) (not e!72288))))

(assert (=> d!31523 (= res!54928 (isStrictlySorted!306 (toList!792 lt!56425)))))

(assert (=> d!31523 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 lt!56425) #b1000000000000000000000000000000000000000000000000000000000000000) lt!57364)))

(declare-fun b!111206 () Bool)

(assert (=> b!111206 (= e!72288 (containsKey!160 (toList!792 lt!56425) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!31523 res!54928) b!111206))

(assert (=> d!31523 m!124567))

(assert (=> d!31523 m!124567))

(assert (=> d!31523 m!124569))

(declare-fun m!126521 () Bool)

(assert (=> d!31523 m!126521))

(assert (=> d!31523 m!126239))

(assert (=> b!111206 m!124563))

(assert (=> b!110132 d!31523))

(assert (=> b!110132 d!31349))

(assert (=> b!110132 d!31351))

(declare-fun d!31525 () Bool)

(declare-fun c!19809 () Bool)

(assert (=> d!31525 (= c!19809 ((_ is Nil!1624) (toList!792 lt!56392)))))

(declare-fun e!72289 () (InoxSet tuple2!2396))

(assert (=> d!31525 (= (content!113 (toList!792 lt!56392)) e!72289)))

(declare-fun b!111207 () Bool)

(assert (=> b!111207 (= e!72289 ((as const (Array tuple2!2396 Bool)) false))))

(declare-fun b!111208 () Bool)

(assert (=> b!111208 (= e!72289 ((_ map or) (store ((as const (Array tuple2!2396 Bool)) false) (h!2222 (toList!792 lt!56392)) true) (content!113 (t!5755 (toList!792 lt!56392)))))))

(assert (= (and d!31525 c!19809) b!111207))

(assert (= (and d!31525 (not c!19809)) b!111208))

(declare-fun m!126523 () Bool)

(assert (=> b!111208 m!126523))

(declare-fun m!126525 () Bool)

(assert (=> b!111208 m!126525))

(assert (=> d!30815 d!31525))

(declare-fun d!31527 () Bool)

(declare-fun lt!57365 () Bool)

(assert (=> d!31527 (= lt!57365 (select (content!113 (toList!792 lt!56950)) (tuple2!2397 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))))

(declare-fun e!72290 () Bool)

(assert (=> d!31527 (= lt!57365 e!72290)))

(declare-fun res!54929 () Bool)

(assert (=> d!31527 (=> (not res!54929) (not e!72290))))

(assert (=> d!31527 (= res!54929 ((_ is Cons!1623) (toList!792 lt!56950)))))

(assert (=> d!31527 (= (contains!829 (toList!792 lt!56950) (tuple2!2397 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))) lt!57365)))

(declare-fun b!111209 () Bool)

(declare-fun e!72291 () Bool)

(assert (=> b!111209 (= e!72290 e!72291)))

(declare-fun res!54930 () Bool)

(assert (=> b!111209 (=> res!54930 e!72291)))

(assert (=> b!111209 (= res!54930 (= (h!2222 (toList!792 lt!56950)) (tuple2!2397 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))))

(declare-fun b!111210 () Bool)

(assert (=> b!111210 (= e!72291 (contains!829 (t!5755 (toList!792 lt!56950)) (tuple2!2397 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))))

(assert (= (and d!31527 res!54929) b!111209))

(assert (= (and b!111209 (not res!54930)) b!111210))

(declare-fun m!126527 () Bool)

(assert (=> d!31527 m!126527))

(declare-fun m!126529 () Bool)

(assert (=> d!31527 m!126529))

(declare-fun m!126531 () Bool)

(assert (=> b!111210 m!126531))

(assert (=> b!110409 d!31527))

(declare-fun d!31529 () Bool)

(declare-fun res!54931 () Bool)

(declare-fun e!72292 () Bool)

(assert (=> d!31529 (=> res!54931 e!72292)))

(assert (=> d!31529 (= res!54931 (and ((_ is Cons!1623) (toList!792 (+!139 lt!56577 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))) (= (_1!1209 (h!2222 (toList!792 (+!139 lt!56577 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))) lt!56574)))))

(assert (=> d!31529 (= (containsKey!160 (toList!792 (+!139 lt!56577 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))) lt!56574) e!72292)))

(declare-fun b!111211 () Bool)

(declare-fun e!72293 () Bool)

(assert (=> b!111211 (= e!72292 e!72293)))

(declare-fun res!54932 () Bool)

(assert (=> b!111211 (=> (not res!54932) (not e!72293))))

(assert (=> b!111211 (= res!54932 (and (or (not ((_ is Cons!1623) (toList!792 (+!139 lt!56577 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))) (bvsle (_1!1209 (h!2222 (toList!792 (+!139 lt!56577 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))) lt!56574)) ((_ is Cons!1623) (toList!792 (+!139 lt!56577 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))) (bvslt (_1!1209 (h!2222 (toList!792 (+!139 lt!56577 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))) lt!56574)))))

(declare-fun b!111212 () Bool)

(assert (=> b!111212 (= e!72293 (containsKey!160 (t!5755 (toList!792 (+!139 lt!56577 (tuple2!2397 lt!56590 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))) lt!56574))))

(assert (= (and d!31529 (not res!54931)) b!111211))

(assert (= (and b!111211 res!54932) b!111212))

(declare-fun m!126533 () Bool)

(assert (=> b!111212 m!126533))

(assert (=> d!30965 d!31529))

(declare-fun d!31531 () Bool)

(declare-fun res!54933 () Bool)

(declare-fun e!72294 () Bool)

(assert (=> d!31531 (=> res!54933 e!72294)))

(assert (=> d!31531 (= res!54933 (or ((_ is Nil!1624) lt!56907) ((_ is Nil!1624) (t!5755 lt!56907))))))

(assert (=> d!31531 (= (isStrictlySorted!306 lt!56907) e!72294)))

(declare-fun b!111213 () Bool)

(declare-fun e!72295 () Bool)

(assert (=> b!111213 (= e!72294 e!72295)))

(declare-fun res!54934 () Bool)

(assert (=> b!111213 (=> (not res!54934) (not e!72295))))

(assert (=> b!111213 (= res!54934 (bvslt (_1!1209 (h!2222 lt!56907)) (_1!1209 (h!2222 (t!5755 lt!56907)))))))

(declare-fun b!111214 () Bool)

(assert (=> b!111214 (= e!72295 (isStrictlySorted!306 (t!5755 lt!56907)))))

(assert (= (and d!31531 (not res!54933)) b!111213))

(assert (= (and b!111213 res!54934) b!111214))

(declare-fun m!126535 () Bool)

(assert (=> b!111214 m!126535))

(assert (=> d!30939 d!31531))

(declare-fun d!31533 () Bool)

(declare-fun res!54935 () Bool)

(declare-fun e!72296 () Bool)

(assert (=> d!31533 (=> res!54935 e!72296)))

(assert (=> d!31533 (= res!54935 (or ((_ is Nil!1624) (toList!792 (+!139 lt!56303 lt!56300))) ((_ is Nil!1624) (t!5755 (toList!792 (+!139 lt!56303 lt!56300))))))))

(assert (=> d!31533 (= (isStrictlySorted!306 (toList!792 (+!139 lt!56303 lt!56300))) e!72296)))

(declare-fun b!111215 () Bool)

(declare-fun e!72297 () Bool)

(assert (=> b!111215 (= e!72296 e!72297)))

(declare-fun res!54936 () Bool)

(assert (=> b!111215 (=> (not res!54936) (not e!72297))))

(assert (=> b!111215 (= res!54936 (bvslt (_1!1209 (h!2222 (toList!792 (+!139 lt!56303 lt!56300)))) (_1!1209 (h!2222 (t!5755 (toList!792 (+!139 lt!56303 lt!56300)))))))))

(declare-fun b!111216 () Bool)

(assert (=> b!111216 (= e!72297 (isStrictlySorted!306 (t!5755 (toList!792 (+!139 lt!56303 lt!56300)))))))

(assert (= (and d!31533 (not res!54935)) b!111215))

(assert (= (and b!111215 res!54936) b!111216))

(declare-fun m!126537 () Bool)

(assert (=> b!111216 m!126537))

(assert (=> d!30939 d!31533))

(declare-fun d!31535 () Bool)

(assert (=> d!31535 (isDefined!110 (getValueByKey!156 (toList!792 call!11685) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))

(declare-fun lt!57366 () Unit!3390)

(assert (=> d!31535 (= lt!57366 (choose!699 (toList!792 call!11685) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))

(declare-fun e!72298 () Bool)

(assert (=> d!31535 e!72298))

(declare-fun res!54937 () Bool)

(assert (=> d!31535 (=> (not res!54937) (not e!72298))))

(assert (=> d!31535 (= res!54937 (isStrictlySorted!306 (toList!792 call!11685)))))

(assert (=> d!31535 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 call!11685) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) lt!57366)))

(declare-fun b!111217 () Bool)

(assert (=> b!111217 (= e!72298 (containsKey!160 (toList!792 call!11685) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))

(assert (= (and d!31535 res!54937) b!111217))

(assert (=> d!31535 m!123865))

(assert (=> d!31535 m!124961))

(assert (=> d!31535 m!124961))

(assert (=> d!31535 m!124963))

(assert (=> d!31535 m!123865))

(declare-fun m!126539 () Bool)

(assert (=> d!31535 m!126539))

(declare-fun m!126541 () Bool)

(assert (=> d!31535 m!126541))

(assert (=> b!111217 m!123865))

(assert (=> b!111217 m!124957))

(assert (=> b!110388 d!31535))

(assert (=> b!110388 d!31377))

(assert (=> b!110388 d!31379))

(declare-fun d!31537 () Bool)

(assert (=> d!31537 (isDefined!110 (getValueByKey!156 (toList!792 lt!56589) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!57367 () Unit!3390)

(assert (=> d!31537 (= lt!57367 (choose!699 (toList!792 lt!56589) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!72299 () Bool)

(assert (=> d!31537 e!72299))

(declare-fun res!54938 () Bool)

(assert (=> d!31537 (=> (not res!54938) (not e!72299))))

(assert (=> d!31537 (= res!54938 (isStrictlySorted!306 (toList!792 lt!56589)))))

(assert (=> d!31537 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 lt!56589) #b0000000000000000000000000000000000000000000000000000000000000000) lt!57367)))

(declare-fun b!111218 () Bool)

(assert (=> b!111218 (= e!72299 (containsKey!160 (toList!792 lt!56589) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!31537 res!54938) b!111218))

(assert (=> d!31537 m!124735))

(assert (=> d!31537 m!124735))

(assert (=> d!31537 m!124737))

(declare-fun m!126543 () Bool)

(assert (=> d!31537 m!126543))

(assert (=> d!31537 m!126261))

(assert (=> b!111218 m!124731))

(assert (=> b!110233 d!31537))

(assert (=> b!110233 d!31363))

(assert (=> b!110233 d!31365))

(assert (=> b!110367 d!30771))

(declare-fun d!31539 () Bool)

(declare-fun e!72301 () Bool)

(assert (=> d!31539 e!72301))

(declare-fun res!54939 () Bool)

(assert (=> d!31539 (=> res!54939 e!72301)))

(declare-fun lt!57368 () Bool)

(assert (=> d!31539 (= res!54939 (not lt!57368))))

(declare-fun lt!57369 () Bool)

(assert (=> d!31539 (= lt!57368 lt!57369)))

(declare-fun lt!57370 () Unit!3390)

(declare-fun e!72300 () Unit!3390)

(assert (=> d!31539 (= lt!57370 e!72300)))

(declare-fun c!19810 () Bool)

(assert (=> d!31539 (= c!19810 lt!57369)))

(assert (=> d!31539 (= lt!57369 (containsKey!160 (toList!792 lt!56799) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!31539 (= (contains!827 lt!56799 (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!57368)))

(declare-fun b!111219 () Bool)

(declare-fun lt!57371 () Unit!3390)

(assert (=> b!111219 (= e!72300 lt!57371)))

(assert (=> b!111219 (= lt!57371 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 lt!56799) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!111219 (isDefined!110 (getValueByKey!156 (toList!792 lt!56799) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!111220 () Bool)

(declare-fun Unit!3455 () Unit!3390)

(assert (=> b!111220 (= e!72300 Unit!3455)))

(declare-fun b!111221 () Bool)

(assert (=> b!111221 (= e!72301 (isDefined!110 (getValueByKey!156 (toList!792 lt!56799) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!31539 c!19810) b!111219))

(assert (= (and d!31539 (not c!19810)) b!111220))

(assert (= (and d!31539 (not res!54939)) b!111221))

(declare-fun m!126545 () Bool)

(assert (=> d!31539 m!126545))

(declare-fun m!126547 () Bool)

(assert (=> b!111219 m!126547))

(assert (=> b!111219 m!124801))

(assert (=> b!111219 m!124801))

(declare-fun m!126549 () Bool)

(assert (=> b!111219 m!126549))

(assert (=> b!111221 m!124801))

(assert (=> b!111221 m!124801))

(assert (=> b!111221 m!126549))

(assert (=> d!30913 d!31539))

(declare-fun e!72303 () Option!162)

(declare-fun b!111224 () Bool)

(assert (=> b!111224 (= e!72303 (getValueByKey!156 (t!5755 lt!56798) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun c!19811 () Bool)

(declare-fun d!31541 () Bool)

(assert (=> d!31541 (= c!19811 (and ((_ is Cons!1623) lt!56798) (= (_1!1209 (h!2222 lt!56798)) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!72302 () Option!162)

(assert (=> d!31541 (= (getValueByKey!156 lt!56798 (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!72302)))

(declare-fun b!111222 () Bool)

(assert (=> b!111222 (= e!72302 (Some!161 (_2!1209 (h!2222 lt!56798))))))

(declare-fun b!111223 () Bool)

(assert (=> b!111223 (= e!72302 e!72303)))

(declare-fun c!19812 () Bool)

(assert (=> b!111223 (= c!19812 (and ((_ is Cons!1623) lt!56798) (not (= (_1!1209 (h!2222 lt!56798)) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!111225 () Bool)

(assert (=> b!111225 (= e!72303 None!160)))

(assert (= (and d!31541 c!19811) b!111222))

(assert (= (and d!31541 (not c!19811)) b!111223))

(assert (= (and b!111223 c!19812) b!111224))

(assert (= (and b!111223 (not c!19812)) b!111225))

(declare-fun m!126551 () Bool)

(assert (=> b!111224 m!126551))

(assert (=> d!30913 d!31541))

(declare-fun d!31543 () Bool)

(assert (=> d!31543 (= (getValueByKey!156 lt!56798 (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!161 (_2!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!57372 () Unit!3390)

(assert (=> d!31543 (= lt!57372 (choose!691 lt!56798 (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!72304 () Bool)

(assert (=> d!31543 e!72304))

(declare-fun res!54940 () Bool)

(assert (=> d!31543 (=> (not res!54940) (not e!72304))))

(assert (=> d!31543 (= res!54940 (isStrictlySorted!306 lt!56798))))

(assert (=> d!31543 (= (lemmaContainsTupThenGetReturnValue!75 lt!56798 (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!57372)))

(declare-fun b!111226 () Bool)

(declare-fun res!54941 () Bool)

(assert (=> b!111226 (=> (not res!54941) (not e!72304))))

(assert (=> b!111226 (= res!54941 (containsKey!160 lt!56798 (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!111227 () Bool)

(assert (=> b!111227 (= e!72304 (contains!829 lt!56798 (tuple2!2397 (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!31543 res!54940) b!111226))

(assert (= (and b!111226 res!54941) b!111227))

(assert (=> d!31543 m!124795))

(declare-fun m!126553 () Bool)

(assert (=> d!31543 m!126553))

(declare-fun m!126555 () Bool)

(assert (=> d!31543 m!126555))

(declare-fun m!126557 () Bool)

(assert (=> b!111226 m!126557))

(declare-fun m!126559 () Bool)

(assert (=> b!111227 m!126559))

(assert (=> d!30913 d!31543))

(declare-fun e!72306 () List!1627)

(declare-fun b!111228 () Bool)

(declare-fun c!19813 () Bool)

(declare-fun c!19816 () Bool)

(assert (=> b!111228 (= e!72306 (ite c!19813 (t!5755 (toList!792 call!11623)) (ite c!19816 (Cons!1623 (h!2222 (toList!792 call!11623)) (t!5755 (toList!792 call!11623))) Nil!1624)))))

(declare-fun b!111229 () Bool)

(assert (=> b!111229 (= e!72306 (insertStrictlySorted!78 (t!5755 (toList!792 call!11623)) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!11859 () Bool)

(declare-fun call!11864 () List!1627)

(declare-fun call!11862 () List!1627)

(assert (=> bm!11859 (= call!11864 call!11862)))

(declare-fun b!111230 () Bool)

(declare-fun e!72305 () List!1627)

(declare-fun call!11863 () List!1627)

(assert (=> b!111230 (= e!72305 call!11863)))

(declare-fun b!111231 () Bool)

(assert (=> b!111231 (= c!19816 (and ((_ is Cons!1623) (toList!792 call!11623)) (bvsgt (_1!1209 (h!2222 (toList!792 call!11623))) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!72308 () List!1627)

(assert (=> b!111231 (= e!72308 e!72305)))

(declare-fun b!111232 () Bool)

(declare-fun res!54943 () Bool)

(declare-fun e!72307 () Bool)

(assert (=> b!111232 (=> (not res!54943) (not e!72307))))

(declare-fun lt!57373 () List!1627)

(assert (=> b!111232 (= res!54943 (containsKey!160 lt!57373 (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!111234 () Bool)

(assert (=> b!111234 (= e!72305 call!11863)))

(declare-fun bm!11860 () Bool)

(assert (=> bm!11860 (= call!11863 call!11864)))

(declare-fun b!111235 () Bool)

(assert (=> b!111235 (= e!72308 call!11864)))

(declare-fun b!111236 () Bool)

(declare-fun e!72309 () List!1627)

(assert (=> b!111236 (= e!72309 e!72308)))

(assert (=> b!111236 (= c!19813 (and ((_ is Cons!1623) (toList!792 call!11623)) (= (_1!1209 (h!2222 (toList!792 call!11623))) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun d!31545 () Bool)

(assert (=> d!31545 e!72307))

(declare-fun res!54942 () Bool)

(assert (=> d!31545 (=> (not res!54942) (not e!72307))))

(assert (=> d!31545 (= res!54942 (isStrictlySorted!306 lt!57373))))

(assert (=> d!31545 (= lt!57373 e!72309)))

(declare-fun c!19815 () Bool)

(assert (=> d!31545 (= c!19815 (and ((_ is Cons!1623) (toList!792 call!11623)) (bvslt (_1!1209 (h!2222 (toList!792 call!11623))) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!31545 (isStrictlySorted!306 (toList!792 call!11623))))

(assert (=> d!31545 (= (insertStrictlySorted!78 (toList!792 call!11623) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!57373)))

(declare-fun b!111233 () Bool)

(assert (=> b!111233 (= e!72309 call!11862)))

(declare-fun b!111237 () Bool)

(assert (=> b!111237 (= e!72307 (contains!829 lt!57373 (tuple2!2397 (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun bm!11861 () Bool)

(assert (=> bm!11861 (= call!11862 ($colon$colon!82 e!72306 (ite c!19815 (h!2222 (toList!792 call!11623)) (tuple2!2397 (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!19814 () Bool)

(assert (=> bm!11861 (= c!19814 c!19815)))

(assert (= (and d!31545 c!19815) b!111233))

(assert (= (and d!31545 (not c!19815)) b!111236))

(assert (= (and b!111236 c!19813) b!111235))

(assert (= (and b!111236 (not c!19813)) b!111231))

(assert (= (and b!111231 c!19816) b!111230))

(assert (= (and b!111231 (not c!19816)) b!111234))

(assert (= (or b!111230 b!111234) bm!11860))

(assert (= (or b!111235 bm!11860) bm!11859))

(assert (= (or b!111233 bm!11859) bm!11861))

(assert (= (and bm!11861 c!19814) b!111229))

(assert (= (and bm!11861 (not c!19814)) b!111228))

(assert (= (and d!31545 res!54942) b!111232))

(assert (= (and b!111232 res!54943) b!111237))

(declare-fun m!126561 () Bool)

(assert (=> d!31545 m!126561))

(declare-fun m!126563 () Bool)

(assert (=> d!31545 m!126563))

(declare-fun m!126565 () Bool)

(assert (=> b!111232 m!126565))

(declare-fun m!126567 () Bool)

(assert (=> bm!11861 m!126567))

(declare-fun m!126569 () Bool)

(assert (=> b!111229 m!126569))

(declare-fun m!126571 () Bool)

(assert (=> b!111237 m!126571))

(assert (=> d!30913 d!31545))

(declare-fun b!111240 () Bool)

(declare-fun e!72311 () Option!162)

(assert (=> b!111240 (= e!72311 (getValueByKey!156 (t!5755 (t!5755 (toList!792 lt!56388))) (_1!1209 lt!56299)))))

(declare-fun d!31547 () Bool)

(declare-fun c!19817 () Bool)

(assert (=> d!31547 (= c!19817 (and ((_ is Cons!1623) (t!5755 (toList!792 lt!56388))) (= (_1!1209 (h!2222 (t!5755 (toList!792 lt!56388)))) (_1!1209 lt!56299))))))

(declare-fun e!72310 () Option!162)

(assert (=> d!31547 (= (getValueByKey!156 (t!5755 (toList!792 lt!56388)) (_1!1209 lt!56299)) e!72310)))

(declare-fun b!111238 () Bool)

(assert (=> b!111238 (= e!72310 (Some!161 (_2!1209 (h!2222 (t!5755 (toList!792 lt!56388))))))))

(declare-fun b!111239 () Bool)

(assert (=> b!111239 (= e!72310 e!72311)))

(declare-fun c!19818 () Bool)

(assert (=> b!111239 (= c!19818 (and ((_ is Cons!1623) (t!5755 (toList!792 lt!56388))) (not (= (_1!1209 (h!2222 (t!5755 (toList!792 lt!56388)))) (_1!1209 lt!56299)))))))

(declare-fun b!111241 () Bool)

(assert (=> b!111241 (= e!72311 None!160)))

(assert (= (and d!31547 c!19817) b!111238))

(assert (= (and d!31547 (not c!19817)) b!111239))

(assert (= (and b!111239 c!19818) b!111240))

(assert (= (and b!111239 (not c!19818)) b!111241))

(declare-fun m!126573 () Bool)

(assert (=> b!111240 m!126573))

(assert (=> b!110202 d!31547))

(declare-fun d!31549 () Bool)

(assert (=> d!31549 (= (get!1350 (getValueByKey!156 (toList!792 (+!139 lt!56576 (tuple2!2397 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))) lt!56580)) (v!2926 (getValueByKey!156 (toList!792 (+!139 lt!56576 (tuple2!2397 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))) lt!56580)))))

(assert (=> d!30977 d!31549))

(declare-fun b!111244 () Bool)

(declare-fun e!72313 () Option!162)

(assert (=> b!111244 (= e!72313 (getValueByKey!156 (t!5755 (toList!792 (+!139 lt!56576 (tuple2!2397 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))) lt!56580))))

(declare-fun c!19819 () Bool)

(declare-fun d!31551 () Bool)

(assert (=> d!31551 (= c!19819 (and ((_ is Cons!1623) (toList!792 (+!139 lt!56576 (tuple2!2397 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))) (= (_1!1209 (h!2222 (toList!792 (+!139 lt!56576 (tuple2!2397 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))) lt!56580)))))

(declare-fun e!72312 () Option!162)

(assert (=> d!31551 (= (getValueByKey!156 (toList!792 (+!139 lt!56576 (tuple2!2397 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))) lt!56580) e!72312)))

(declare-fun b!111242 () Bool)

(assert (=> b!111242 (= e!72312 (Some!161 (_2!1209 (h!2222 (toList!792 (+!139 lt!56576 (tuple2!2397 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))))))))

(declare-fun b!111243 () Bool)

(assert (=> b!111243 (= e!72312 e!72313)))

(declare-fun c!19820 () Bool)

(assert (=> b!111243 (= c!19820 (and ((_ is Cons!1623) (toList!792 (+!139 lt!56576 (tuple2!2397 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992))))))) (not (= (_1!1209 (h!2222 (toList!792 (+!139 lt!56576 (tuple2!2397 lt!56587 (minValue!2497 (v!2920 (underlying!363 thiss!992)))))))) lt!56580))))))

(declare-fun b!111245 () Bool)

(assert (=> b!111245 (= e!72313 None!160)))

(assert (= (and d!31551 c!19819) b!111242))

(assert (= (and d!31551 (not c!19819)) b!111243))

(assert (= (and b!111243 c!19820) b!111244))

(assert (= (and b!111243 (not c!19820)) b!111245))

(declare-fun m!126575 () Bool)

(assert (=> b!111244 m!126575))

(assert (=> d!30977 d!31551))

(declare-fun c!19821 () Bool)

(declare-fun c!19824 () Bool)

(declare-fun b!111246 () Bool)

(declare-fun e!72315 () List!1627)

(assert (=> b!111246 (= e!72315 (ite c!19821 (t!5755 (t!5755 (toList!792 (+!139 lt!56303 lt!56300)))) (ite c!19824 (Cons!1623 (h!2222 (t!5755 (toList!792 (+!139 lt!56303 lt!56300)))) (t!5755 (t!5755 (toList!792 (+!139 lt!56303 lt!56300))))) Nil!1624)))))

(declare-fun b!111247 () Bool)

(assert (=> b!111247 (= e!72315 (insertStrictlySorted!78 (t!5755 (t!5755 (toList!792 (+!139 lt!56303 lt!56300)))) (_1!1209 lt!56299) (_2!1209 lt!56299)))))

(declare-fun bm!11862 () Bool)

(declare-fun call!11867 () List!1627)

(declare-fun call!11865 () List!1627)

(assert (=> bm!11862 (= call!11867 call!11865)))

(declare-fun b!111248 () Bool)

(declare-fun e!72314 () List!1627)

(declare-fun call!11866 () List!1627)

(assert (=> b!111248 (= e!72314 call!11866)))

(declare-fun b!111249 () Bool)

(assert (=> b!111249 (= c!19824 (and ((_ is Cons!1623) (t!5755 (toList!792 (+!139 lt!56303 lt!56300)))) (bvsgt (_1!1209 (h!2222 (t!5755 (toList!792 (+!139 lt!56303 lt!56300))))) (_1!1209 lt!56299))))))

(declare-fun e!72317 () List!1627)

(assert (=> b!111249 (= e!72317 e!72314)))

(declare-fun b!111250 () Bool)

(declare-fun res!54945 () Bool)

(declare-fun e!72316 () Bool)

(assert (=> b!111250 (=> (not res!54945) (not e!72316))))

(declare-fun lt!57374 () List!1627)

(assert (=> b!111250 (= res!54945 (containsKey!160 lt!57374 (_1!1209 lt!56299)))))

(declare-fun b!111252 () Bool)

(assert (=> b!111252 (= e!72314 call!11866)))

(declare-fun bm!11863 () Bool)

(assert (=> bm!11863 (= call!11866 call!11867)))

(declare-fun b!111253 () Bool)

(assert (=> b!111253 (= e!72317 call!11867)))

(declare-fun b!111254 () Bool)

(declare-fun e!72318 () List!1627)

(assert (=> b!111254 (= e!72318 e!72317)))

(assert (=> b!111254 (= c!19821 (and ((_ is Cons!1623) (t!5755 (toList!792 (+!139 lt!56303 lt!56300)))) (= (_1!1209 (h!2222 (t!5755 (toList!792 (+!139 lt!56303 lt!56300))))) (_1!1209 lt!56299))))))

(declare-fun d!31553 () Bool)

(assert (=> d!31553 e!72316))

(declare-fun res!54944 () Bool)

(assert (=> d!31553 (=> (not res!54944) (not e!72316))))

(assert (=> d!31553 (= res!54944 (isStrictlySorted!306 lt!57374))))

(assert (=> d!31553 (= lt!57374 e!72318)))

(declare-fun c!19823 () Bool)

(assert (=> d!31553 (= c!19823 (and ((_ is Cons!1623) (t!5755 (toList!792 (+!139 lt!56303 lt!56300)))) (bvslt (_1!1209 (h!2222 (t!5755 (toList!792 (+!139 lt!56303 lt!56300))))) (_1!1209 lt!56299))))))

(assert (=> d!31553 (isStrictlySorted!306 (t!5755 (toList!792 (+!139 lt!56303 lt!56300))))))

(assert (=> d!31553 (= (insertStrictlySorted!78 (t!5755 (toList!792 (+!139 lt!56303 lt!56300))) (_1!1209 lt!56299) (_2!1209 lt!56299)) lt!57374)))

(declare-fun b!111251 () Bool)

(assert (=> b!111251 (= e!72318 call!11865)))

(declare-fun b!111255 () Bool)

(assert (=> b!111255 (= e!72316 (contains!829 lt!57374 (tuple2!2397 (_1!1209 lt!56299) (_2!1209 lt!56299))))))

(declare-fun bm!11864 () Bool)

(assert (=> bm!11864 (= call!11865 ($colon$colon!82 e!72315 (ite c!19823 (h!2222 (t!5755 (toList!792 (+!139 lt!56303 lt!56300)))) (tuple2!2397 (_1!1209 lt!56299) (_2!1209 lt!56299)))))))

(declare-fun c!19822 () Bool)

(assert (=> bm!11864 (= c!19822 c!19823)))

(assert (= (and d!31553 c!19823) b!111251))

(assert (= (and d!31553 (not c!19823)) b!111254))

(assert (= (and b!111254 c!19821) b!111253))

(assert (= (and b!111254 (not c!19821)) b!111249))

(assert (= (and b!111249 c!19824) b!111248))

(assert (= (and b!111249 (not c!19824)) b!111252))

(assert (= (or b!111248 b!111252) bm!11863))

(assert (= (or b!111253 bm!11863) bm!11862))

(assert (= (or b!111251 bm!11862) bm!11864))

(assert (= (and bm!11864 c!19822) b!111247))

(assert (= (and bm!11864 (not c!19822)) b!111246))

(assert (= (and d!31553 res!54944) b!111250))

(assert (= (and b!111250 res!54945) b!111255))

(declare-fun m!126577 () Bool)

(assert (=> d!31553 m!126577))

(assert (=> d!31553 m!126537))

(declare-fun m!126579 () Bool)

(assert (=> b!111250 m!126579))

(declare-fun m!126581 () Bool)

(assert (=> bm!11864 m!126581))

(declare-fun m!126583 () Bool)

(assert (=> b!111247 m!126583))

(declare-fun m!126585 () Bool)

(assert (=> b!111255 m!126585))

(assert (=> b!110354 d!31553))

(declare-fun d!31555 () Bool)

(assert (=> d!31555 (= (apply!100 lt!56706 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1350 (getValueByKey!156 (toList!792 lt!56706) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4584 () Bool)

(assert (= bs!4584 d!31555))

(assert (=> bs!4584 m!125775))

(assert (=> bs!4584 m!125775))

(declare-fun m!126587 () Bool)

(assert (=> bs!4584 m!126587))

(assert (=> b!110101 d!31555))

(declare-fun d!31557 () Bool)

(declare-fun res!54946 () Bool)

(declare-fun e!72319 () Bool)

(assert (=> d!31557 (=> res!54946 e!72319)))

(assert (=> d!31557 (= res!54946 (and ((_ is Cons!1623) (toList!792 e!71432)) (= (_1!1209 (h!2222 (toList!792 e!71432))) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355))))))

(assert (=> d!31557 (= (containsKey!160 (toList!792 e!71432) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) e!72319)))

(declare-fun b!111256 () Bool)

(declare-fun e!72320 () Bool)

(assert (=> b!111256 (= e!72319 e!72320)))

(declare-fun res!54947 () Bool)

(assert (=> b!111256 (=> (not res!54947) (not e!72320))))

(assert (=> b!111256 (= res!54947 (and (or (not ((_ is Cons!1623) (toList!792 e!71432))) (bvsle (_1!1209 (h!2222 (toList!792 e!71432))) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355))) ((_ is Cons!1623) (toList!792 e!71432)) (bvslt (_1!1209 (h!2222 (toList!792 e!71432))) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355))))))

(declare-fun b!111257 () Bool)

(assert (=> b!111257 (= e!72320 (containsKey!160 (t!5755 (toList!792 e!71432)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))

(assert (= (and d!31557 (not res!54946)) b!111256))

(assert (= (and b!111256 res!54947) b!111257))

(assert (=> b!111257 m!123865))

(declare-fun m!126589 () Bool)

(assert (=> b!111257 m!126589))

(assert (=> d!30897 d!31557))

(declare-fun d!31559 () Bool)

(assert (=> d!31559 (= (isDefined!110 (getValueByKey!156 (toList!792 lt!56403) (_1!1209 lt!56299))) (not (isEmpty!382 (getValueByKey!156 (toList!792 lt!56403) (_1!1209 lt!56299)))))))

(declare-fun bs!4585 () Bool)

(assert (= bs!4585 d!31559))

(assert (=> bs!4585 m!124083))

(declare-fun m!126591 () Bool)

(assert (=> bs!4585 m!126591))

(assert (=> b!110169 d!31559))

(assert (=> b!110169 d!30851))

(declare-fun d!31561 () Bool)

(assert (=> d!31561 (= (get!1348 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2919 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!110204 d!31561))

(declare-fun d!31563 () Bool)

(declare-fun e!72322 () Bool)

(assert (=> d!31563 e!72322))

(declare-fun res!54948 () Bool)

(assert (=> d!31563 (=> res!54948 e!72322)))

(declare-fun lt!57375 () Bool)

(assert (=> d!31563 (= res!54948 (not lt!57375))))

(declare-fun lt!57376 () Bool)

(assert (=> d!31563 (= lt!57375 lt!57376)))

(declare-fun lt!57377 () Unit!3390)

(declare-fun e!72321 () Unit!3390)

(assert (=> d!31563 (= lt!57377 e!72321)))

(declare-fun c!19825 () Bool)

(assert (=> d!31563 (= c!19825 lt!57376)))

(assert (=> d!31563 (= lt!57376 (containsKey!160 (toList!792 lt!56950) (_1!1209 (tuple2!2397 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(assert (=> d!31563 (= (contains!827 lt!56950 (_1!1209 (tuple2!2397 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))) lt!57375)))

(declare-fun b!111258 () Bool)

(declare-fun lt!57378 () Unit!3390)

(assert (=> b!111258 (= e!72321 lt!57378)))

(assert (=> b!111258 (= lt!57378 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 lt!56950) (_1!1209 (tuple2!2397 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(assert (=> b!111258 (isDefined!110 (getValueByKey!156 (toList!792 lt!56950) (_1!1209 (tuple2!2397 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun b!111259 () Bool)

(declare-fun Unit!3456 () Unit!3390)

(assert (=> b!111259 (= e!72321 Unit!3456)))

(declare-fun b!111260 () Bool)

(assert (=> b!111260 (= e!72322 (isDefined!110 (getValueByKey!156 (toList!792 lt!56950) (_1!1209 (tuple2!2397 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(assert (= (and d!31563 c!19825) b!111258))

(assert (= (and d!31563 (not c!19825)) b!111259))

(assert (= (and d!31563 (not res!54948)) b!111260))

(declare-fun m!126593 () Bool)

(assert (=> d!31563 m!126593))

(declare-fun m!126595 () Bool)

(assert (=> b!111258 m!126595))

(assert (=> b!111258 m!125061))

(assert (=> b!111258 m!125061))

(declare-fun m!126597 () Bool)

(assert (=> b!111258 m!126597))

(assert (=> b!111260 m!125061))

(assert (=> b!111260 m!125061))

(assert (=> b!111260 m!126597))

(assert (=> d!30987 d!31563))

(declare-fun e!72324 () Option!162)

(declare-fun b!111263 () Bool)

(assert (=> b!111263 (= e!72324 (getValueByKey!156 (t!5755 lt!56949) (_1!1209 (tuple2!2397 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun c!19826 () Bool)

(declare-fun d!31565 () Bool)

(assert (=> d!31565 (= c!19826 (and ((_ is Cons!1623) lt!56949) (= (_1!1209 (h!2222 lt!56949)) (_1!1209 (tuple2!2397 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(declare-fun e!72323 () Option!162)

(assert (=> d!31565 (= (getValueByKey!156 lt!56949 (_1!1209 (tuple2!2397 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))) e!72323)))

(declare-fun b!111261 () Bool)

(assert (=> b!111261 (= e!72323 (Some!161 (_2!1209 (h!2222 lt!56949))))))

(declare-fun b!111262 () Bool)

(assert (=> b!111262 (= e!72323 e!72324)))

(declare-fun c!19827 () Bool)

(assert (=> b!111262 (= c!19827 (and ((_ is Cons!1623) lt!56949) (not (= (_1!1209 (h!2222 lt!56949)) (_1!1209 (tuple2!2397 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))))

(declare-fun b!111264 () Bool)

(assert (=> b!111264 (= e!72324 None!160)))

(assert (= (and d!31565 c!19826) b!111261))

(assert (= (and d!31565 (not c!19826)) b!111262))

(assert (= (and b!111262 c!19827) b!111263))

(assert (= (and b!111262 (not c!19827)) b!111264))

(declare-fun m!126599 () Bool)

(assert (=> b!111263 m!126599))

(assert (=> d!30987 d!31565))

(declare-fun d!31567 () Bool)

(assert (=> d!31567 (= (getValueByKey!156 lt!56949 (_1!1209 (tuple2!2397 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))) (Some!161 (_2!1209 (tuple2!2397 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun lt!57379 () Unit!3390)

(assert (=> d!31567 (= lt!57379 (choose!691 lt!56949 (_1!1209 (tuple2!2397 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))) (_2!1209 (tuple2!2397 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun e!72325 () Bool)

(assert (=> d!31567 e!72325))

(declare-fun res!54949 () Bool)

(assert (=> d!31567 (=> (not res!54949) (not e!72325))))

(assert (=> d!31567 (= res!54949 (isStrictlySorted!306 lt!56949))))

(assert (=> d!31567 (= (lemmaContainsTupThenGetReturnValue!75 lt!56949 (_1!1209 (tuple2!2397 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))) (_2!1209 (tuple2!2397 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))) lt!57379)))

(declare-fun b!111265 () Bool)

(declare-fun res!54950 () Bool)

(assert (=> b!111265 (=> (not res!54950) (not e!72325))))

(assert (=> b!111265 (= res!54950 (containsKey!160 lt!56949 (_1!1209 (tuple2!2397 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun b!111266 () Bool)

(assert (=> b!111266 (= e!72325 (contains!829 lt!56949 (tuple2!2397 (_1!1209 (tuple2!2397 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))) (_2!1209 (tuple2!2397 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(assert (= (and d!31567 res!54949) b!111265))

(assert (= (and b!111265 res!54950) b!111266))

(assert (=> d!31567 m!125055))

(declare-fun m!126601 () Bool)

(assert (=> d!31567 m!126601))

(declare-fun m!126603 () Bool)

(assert (=> d!31567 m!126603))

(declare-fun m!126605 () Bool)

(assert (=> b!111265 m!126605))

(declare-fun m!126607 () Bool)

(assert (=> b!111266 m!126607))

(assert (=> d!30987 d!31567))

(declare-fun c!19831 () Bool)

(declare-fun b!111267 () Bool)

(declare-fun e!72327 () List!1627)

(declare-fun c!19828 () Bool)

(assert (=> b!111267 (= e!72327 (ite c!19828 (t!5755 (toList!792 lt!56592)) (ite c!19831 (Cons!1623 (h!2222 (toList!792 lt!56592)) (t!5755 (toList!792 lt!56592))) Nil!1624)))))

(declare-fun b!111268 () Bool)

(assert (=> b!111268 (= e!72327 (insertStrictlySorted!78 (t!5755 (toList!792 lt!56592)) (_1!1209 (tuple2!2397 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))) (_2!1209 (tuple2!2397 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun bm!11865 () Bool)

(declare-fun call!11870 () List!1627)

(declare-fun call!11868 () List!1627)

(assert (=> bm!11865 (= call!11870 call!11868)))

(declare-fun b!111269 () Bool)

(declare-fun e!72326 () List!1627)

(declare-fun call!11869 () List!1627)

(assert (=> b!111269 (= e!72326 call!11869)))

(declare-fun b!111270 () Bool)

(assert (=> b!111270 (= c!19831 (and ((_ is Cons!1623) (toList!792 lt!56592)) (bvsgt (_1!1209 (h!2222 (toList!792 lt!56592))) (_1!1209 (tuple2!2397 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(declare-fun e!72329 () List!1627)

(assert (=> b!111270 (= e!72329 e!72326)))

(declare-fun b!111271 () Bool)

(declare-fun res!54952 () Bool)

(declare-fun e!72328 () Bool)

(assert (=> b!111271 (=> (not res!54952) (not e!72328))))

(declare-fun lt!57380 () List!1627)

(assert (=> b!111271 (= res!54952 (containsKey!160 lt!57380 (_1!1209 (tuple2!2397 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun b!111273 () Bool)

(assert (=> b!111273 (= e!72326 call!11869)))

(declare-fun bm!11866 () Bool)

(assert (=> bm!11866 (= call!11869 call!11870)))

(declare-fun b!111274 () Bool)

(assert (=> b!111274 (= e!72329 call!11870)))

(declare-fun b!111275 () Bool)

(declare-fun e!72330 () List!1627)

(assert (=> b!111275 (= e!72330 e!72329)))

(assert (=> b!111275 (= c!19828 (and ((_ is Cons!1623) (toList!792 lt!56592)) (= (_1!1209 (h!2222 (toList!792 lt!56592))) (_1!1209 (tuple2!2397 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(declare-fun d!31569 () Bool)

(assert (=> d!31569 e!72328))

(declare-fun res!54951 () Bool)

(assert (=> d!31569 (=> (not res!54951) (not e!72328))))

(assert (=> d!31569 (= res!54951 (isStrictlySorted!306 lt!57380))))

(assert (=> d!31569 (= lt!57380 e!72330)))

(declare-fun c!19830 () Bool)

(assert (=> d!31569 (= c!19830 (and ((_ is Cons!1623) (toList!792 lt!56592)) (bvslt (_1!1209 (h!2222 (toList!792 lt!56592))) (_1!1209 (tuple2!2397 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(assert (=> d!31569 (isStrictlySorted!306 (toList!792 lt!56592))))

(assert (=> d!31569 (= (insertStrictlySorted!78 (toList!792 lt!56592) (_1!1209 (tuple2!2397 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))) (_2!1209 (tuple2!2397 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))) lt!57380)))

(declare-fun b!111272 () Bool)

(assert (=> b!111272 (= e!72330 call!11868)))

(declare-fun b!111276 () Bool)

(assert (=> b!111276 (= e!72328 (contains!829 lt!57380 (tuple2!2397 (_1!1209 (tuple2!2397 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))) (_2!1209 (tuple2!2397 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(declare-fun bm!11867 () Bool)

(assert (=> bm!11867 (= call!11868 ($colon$colon!82 e!72327 (ite c!19830 (h!2222 (toList!792 lt!56592)) (tuple2!2397 (_1!1209 (tuple2!2397 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))) (_2!1209 (tuple2!2397 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))))

(declare-fun c!19829 () Bool)

(assert (=> bm!11867 (= c!19829 c!19830)))

(assert (= (and d!31569 c!19830) b!111272))

(assert (= (and d!31569 (not c!19830)) b!111275))

(assert (= (and b!111275 c!19828) b!111274))

(assert (= (and b!111275 (not c!19828)) b!111270))

(assert (= (and b!111270 c!19831) b!111269))

(assert (= (and b!111270 (not c!19831)) b!111273))

(assert (= (or b!111269 b!111273) bm!11866))

(assert (= (or b!111274 bm!11866) bm!11865))

(assert (= (or b!111272 bm!11865) bm!11867))

(assert (= (and bm!11867 c!19829) b!111268))

(assert (= (and bm!11867 (not c!19829)) b!111267))

(assert (= (and d!31569 res!54951) b!111271))

(assert (= (and b!111271 res!54952) b!111276))

(declare-fun m!126609 () Bool)

(assert (=> d!31569 m!126609))

(declare-fun m!126611 () Bool)

(assert (=> d!31569 m!126611))

(declare-fun m!126613 () Bool)

(assert (=> b!111271 m!126613))

(declare-fun m!126615 () Bool)

(assert (=> bm!11867 m!126615))

(declare-fun m!126617 () Bool)

(assert (=> b!111268 m!126617))

(declare-fun m!126619 () Bool)

(assert (=> b!111276 m!126619))

(assert (=> d!30987 d!31569))

(declare-fun d!31571 () Bool)

(declare-fun e!72331 () Bool)

(assert (=> d!31571 e!72331))

(declare-fun res!54953 () Bool)

(assert (=> d!31571 (=> (not res!54953) (not e!72331))))

(declare-fun lt!57382 () ListLongMap!1553)

(assert (=> d!31571 (= res!54953 (contains!827 lt!57382 (_1!1209 (ite (or c!19497 c!19500) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!19423 c!19416) lt!56306 (zeroValue!2497 newMap!16))) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16)))))))))

(declare-fun lt!57381 () List!1627)

(assert (=> d!31571 (= lt!57382 (ListLongMap!1554 lt!57381))))

(declare-fun lt!57383 () Unit!3390)

(declare-fun lt!57384 () Unit!3390)

(assert (=> d!31571 (= lt!57383 lt!57384)))

(assert (=> d!31571 (= (getValueByKey!156 lt!57381 (_1!1209 (ite (or c!19497 c!19500) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!19423 c!19416) lt!56306 (zeroValue!2497 newMap!16))) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16)))))) (Some!161 (_2!1209 (ite (or c!19497 c!19500) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!19423 c!19416) lt!56306 (zeroValue!2497 newMap!16))) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16)))))))))

(assert (=> d!31571 (= lt!57384 (lemmaContainsTupThenGetReturnValue!75 lt!57381 (_1!1209 (ite (or c!19497 c!19500) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!19423 c!19416) lt!56306 (zeroValue!2497 newMap!16))) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16))))) (_2!1209 (ite (or c!19497 c!19500) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!19423 c!19416) lt!56306 (zeroValue!2497 newMap!16))) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16)))))))))

(assert (=> d!31571 (= lt!57381 (insertStrictlySorted!78 (toList!792 (ite c!19497 call!11742 (ite c!19500 call!11743 call!11744))) (_1!1209 (ite (or c!19497 c!19500) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!19423 c!19416) lt!56306 (zeroValue!2497 newMap!16))) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16))))) (_2!1209 (ite (or c!19497 c!19500) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!19423 c!19416) lt!56306 (zeroValue!2497 newMap!16))) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16)))))))))

(assert (=> d!31571 (= (+!139 (ite c!19497 call!11742 (ite c!19500 call!11743 call!11744)) (ite (or c!19497 c!19500) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!19423 c!19416) lt!56306 (zeroValue!2497 newMap!16))) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16))))) lt!57382)))

(declare-fun b!111277 () Bool)

(declare-fun res!54954 () Bool)

(assert (=> b!111277 (=> (not res!54954) (not e!72331))))

(assert (=> b!111277 (= res!54954 (= (getValueByKey!156 (toList!792 lt!57382) (_1!1209 (ite (or c!19497 c!19500) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!19423 c!19416) lt!56306 (zeroValue!2497 newMap!16))) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16)))))) (Some!161 (_2!1209 (ite (or c!19497 c!19500) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!19423 c!19416) lt!56306 (zeroValue!2497 newMap!16))) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16))))))))))

(declare-fun b!111278 () Bool)

(assert (=> b!111278 (= e!72331 (contains!829 (toList!792 lt!57382) (ite (or c!19497 c!19500) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!19423 c!19416) lt!56306 (zeroValue!2497 newMap!16))) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!19423 (ite c!19416 (minValue!2497 newMap!16) lt!56306) (minValue!2497 newMap!16))))))))

(assert (= (and d!31571 res!54953) b!111277))

(assert (= (and b!111277 res!54954) b!111278))

(declare-fun m!126621 () Bool)

(assert (=> d!31571 m!126621))

(declare-fun m!126623 () Bool)

(assert (=> d!31571 m!126623))

(declare-fun m!126625 () Bool)

(assert (=> d!31571 m!126625))

(declare-fun m!126627 () Bool)

(assert (=> d!31571 m!126627))

(declare-fun m!126629 () Bool)

(assert (=> b!111277 m!126629))

(declare-fun m!126631 () Bool)

(assert (=> b!111278 m!126631))

(assert (=> bm!11745 d!31571))

(declare-fun d!31573 () Bool)

(declare-fun e!72333 () Bool)

(assert (=> d!31573 e!72333))

(declare-fun res!54955 () Bool)

(assert (=> d!31573 (=> res!54955 e!72333)))

(declare-fun lt!57385 () Bool)

(assert (=> d!31573 (= res!54955 (not lt!57385))))

(declare-fun lt!57386 () Bool)

(assert (=> d!31573 (= lt!57385 lt!57386)))

(declare-fun lt!57387 () Unit!3390)

(declare-fun e!72332 () Unit!3390)

(assert (=> d!31573 (= lt!57387 e!72332)))

(declare-fun c!19832 () Bool)

(assert (=> d!31573 (= c!19832 lt!57386)))

(assert (=> d!31573 (= lt!57386 (containsKey!160 (toList!792 lt!56730) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!31573 (= (contains!827 lt!56730 #b1000000000000000000000000000000000000000000000000000000000000000) lt!57385)))

(declare-fun b!111279 () Bool)

(declare-fun lt!57388 () Unit!3390)

(assert (=> b!111279 (= e!72332 lt!57388)))

(assert (=> b!111279 (= lt!57388 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 lt!56730) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!111279 (isDefined!110 (getValueByKey!156 (toList!792 lt!56730) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!111280 () Bool)

(declare-fun Unit!3457 () Unit!3390)

(assert (=> b!111280 (= e!72332 Unit!3457)))

(declare-fun b!111281 () Bool)

(assert (=> b!111281 (= e!72333 (isDefined!110 (getValueByKey!156 (toList!792 lt!56730) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!31573 c!19832) b!111279))

(assert (= (and d!31573 (not c!19832)) b!111280))

(assert (= (and d!31573 (not res!54955)) b!111281))

(declare-fun m!126633 () Bool)

(assert (=> d!31573 m!126633))

(declare-fun m!126635 () Bool)

(assert (=> b!111279 m!126635))

(declare-fun m!126637 () Bool)

(assert (=> b!111279 m!126637))

(assert (=> b!111279 m!126637))

(declare-fun m!126639 () Bool)

(assert (=> b!111279 m!126639))

(assert (=> b!111281 m!126637))

(assert (=> b!111281 m!126637))

(assert (=> b!111281 m!126639))

(assert (=> b!110160 d!31573))

(declare-fun d!31575 () Bool)

(assert (=> d!31575 (= (apply!100 lt!56765 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)) (get!1350 (getValueByKey!156 (toList!792 lt!56765) (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!4586 () Bool)

(assert (= bs!4586 d!31575))

(assert (=> bs!4586 m!124447))

(declare-fun m!126641 () Bool)

(assert (=> bs!4586 m!126641))

(assert (=> bs!4586 m!126641))

(declare-fun m!126643 () Bool)

(assert (=> bs!4586 m!126643))

(assert (=> b!110216 d!31575))

(declare-fun d!31577 () Bool)

(declare-fun c!19833 () Bool)

(assert (=> d!31577 (= c!19833 ((_ is ValueCellFull!1004) (select (arr!2069 (ite c!19423 (_values!2609 newMap!16) lt!56515)) #b00000000000000000000000000000000)))))

(declare-fun e!72334 () V!3241)

(assert (=> d!31577 (= (get!1347 (select (arr!2069 (ite c!19423 (_values!2609 newMap!16) lt!56515)) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2626 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!72334)))

(declare-fun b!111282 () Bool)

(assert (=> b!111282 (= e!72334 (get!1348 (select (arr!2069 (ite c!19423 (_values!2609 newMap!16) lt!56515)) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2626 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!111283 () Bool)

(assert (=> b!111283 (= e!72334 (get!1349 (select (arr!2069 (ite c!19423 (_values!2609 newMap!16) lt!56515)) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2626 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!31577 c!19833) b!111282))

(assert (= (and d!31577 (not c!19833)) b!111283))

(assert (=> b!111282 m!124677))

(assert (=> b!111282 m!124451))

(declare-fun m!126645 () Bool)

(assert (=> b!111282 m!126645))

(assert (=> b!111283 m!124677))

(assert (=> b!111283 m!124451))

(declare-fun m!126647 () Bool)

(assert (=> b!111283 m!126647))

(assert (=> b!110216 d!31577))

(declare-fun d!31579 () Bool)

(declare-fun res!54956 () Bool)

(declare-fun e!72335 () Bool)

(assert (=> d!31579 (=> res!54956 e!72335)))

(assert (=> d!31579 (= res!54956 (and ((_ is Cons!1623) lt!56402) (= (_1!1209 (h!2222 lt!56402)) (_1!1209 lt!56299))))))

(assert (=> d!31579 (= (containsKey!160 lt!56402 (_1!1209 lt!56299)) e!72335)))

(declare-fun b!111284 () Bool)

(declare-fun e!72336 () Bool)

(assert (=> b!111284 (= e!72335 e!72336)))

(declare-fun res!54957 () Bool)

(assert (=> b!111284 (=> (not res!54957) (not e!72336))))

(assert (=> b!111284 (= res!54957 (and (or (not ((_ is Cons!1623) lt!56402)) (bvsle (_1!1209 (h!2222 lt!56402)) (_1!1209 lt!56299))) ((_ is Cons!1623) lt!56402) (bvslt (_1!1209 (h!2222 lt!56402)) (_1!1209 lt!56299))))))

(declare-fun b!111285 () Bool)

(assert (=> b!111285 (= e!72336 (containsKey!160 (t!5755 lt!56402) (_1!1209 lt!56299)))))

(assert (= (and d!31579 (not res!54956)) b!111284))

(assert (= (and b!111284 res!54957) b!111285))

(declare-fun m!126649 () Bool)

(assert (=> b!111285 m!126649))

(assert (=> b!110174 d!31579))

(declare-fun d!31581 () Bool)

(declare-fun res!54958 () Bool)

(declare-fun e!72337 () Bool)

(assert (=> d!31581 (=> res!54958 e!72337)))

(assert (=> d!31581 (= res!54958 (and ((_ is Cons!1623) (toList!792 lt!56425)) (= (_1!1209 (h!2222 (toList!792 lt!56425))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!31581 (= (containsKey!160 (toList!792 lt!56425) #b1000000000000000000000000000000000000000000000000000000000000000) e!72337)))

(declare-fun b!111286 () Bool)

(declare-fun e!72338 () Bool)

(assert (=> b!111286 (= e!72337 e!72338)))

(declare-fun res!54959 () Bool)

(assert (=> b!111286 (=> (not res!54959) (not e!72338))))

(assert (=> b!111286 (= res!54959 (and (or (not ((_ is Cons!1623) (toList!792 lt!56425))) (bvsle (_1!1209 (h!2222 (toList!792 lt!56425))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1623) (toList!792 lt!56425)) (bvslt (_1!1209 (h!2222 (toList!792 lt!56425))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!111287 () Bool)

(assert (=> b!111287 (= e!72338 (containsKey!160 (t!5755 (toList!792 lt!56425)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!31581 (not res!54958)) b!111286))

(assert (= (and b!111286 res!54959) b!111287))

(declare-fun m!126651 () Bool)

(assert (=> b!111287 m!126651))

(assert (=> d!30849 d!31581))

(declare-fun d!31583 () Bool)

(declare-fun res!54960 () Bool)

(declare-fun e!72339 () Bool)

(assert (=> d!31583 (=> res!54960 e!72339)))

(assert (=> d!31583 (= res!54960 (and ((_ is Cons!1623) (toList!792 lt!56589)) (= (_1!1209 (h!2222 (toList!792 lt!56589))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!31583 (= (containsKey!160 (toList!792 lt!56589) #b0000000000000000000000000000000000000000000000000000000000000000) e!72339)))

(declare-fun b!111288 () Bool)

(declare-fun e!72340 () Bool)

(assert (=> b!111288 (= e!72339 e!72340)))

(declare-fun res!54961 () Bool)

(assert (=> b!111288 (=> (not res!54961) (not e!72340))))

(assert (=> b!111288 (= res!54961 (and (or (not ((_ is Cons!1623) (toList!792 lt!56589))) (bvsle (_1!1209 (h!2222 (toList!792 lt!56589))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1623) (toList!792 lt!56589)) (bvslt (_1!1209 (h!2222 (toList!792 lt!56589))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!111289 () Bool)

(assert (=> b!111289 (= e!72340 (containsKey!160 (t!5755 (toList!792 lt!56589)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!31583 (not res!54960)) b!111288))

(assert (= (and b!111288 res!54961) b!111289))

(declare-fun m!126653 () Bool)

(assert (=> b!111289 m!126653))

(assert (=> d!30891 d!31583))

(declare-fun b!111292 () Bool)

(declare-fun e!72342 () Option!162)

(assert (=> b!111292 (= e!72342 (getValueByKey!156 (t!5755 (toList!792 lt!56799)) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun d!31585 () Bool)

(declare-fun c!19834 () Bool)

(assert (=> d!31585 (= c!19834 (and ((_ is Cons!1623) (toList!792 lt!56799)) (= (_1!1209 (h!2222 (toList!792 lt!56799))) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!72341 () Option!162)

(assert (=> d!31585 (= (getValueByKey!156 (toList!792 lt!56799) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!72341)))

(declare-fun b!111290 () Bool)

(assert (=> b!111290 (= e!72341 (Some!161 (_2!1209 (h!2222 (toList!792 lt!56799)))))))

(declare-fun b!111291 () Bool)

(assert (=> b!111291 (= e!72341 e!72342)))

(declare-fun c!19835 () Bool)

(assert (=> b!111291 (= c!19835 (and ((_ is Cons!1623) (toList!792 lt!56799)) (not (= (_1!1209 (h!2222 (toList!792 lt!56799))) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1347 (select (arr!2069 (_values!2609 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!387 (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!111293 () Bool)

(assert (=> b!111293 (= e!72342 None!160)))

(assert (= (and d!31585 c!19834) b!111290))

(assert (= (and d!31585 (not c!19834)) b!111291))

(assert (= (and b!111291 c!19835) b!111292))

(assert (= (and b!111291 (not c!19835)) b!111293))

(declare-fun m!126655 () Bool)

(assert (=> b!111292 m!126655))

(assert (=> b!110271 d!31585))

(assert (=> bm!11744 d!31167))

(declare-fun bm!11868 () Bool)

(declare-fun call!11871 () (_ BitVec 32))

(assert (=> bm!11868 (= call!11871 (arrayCountValidKeys!0 (_keys!4339 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2326 (_keys!4339 newMap!16))))))

(declare-fun b!111294 () Bool)

(declare-fun e!72343 () (_ BitVec 32))

(assert (=> b!111294 (= e!72343 call!11871)))

(declare-fun b!111295 () Bool)

(assert (=> b!111295 (= e!72343 (bvadd #b00000000000000000000000000000001 call!11871))))

(declare-fun b!111296 () Bool)

(declare-fun e!72344 () (_ BitVec 32))

(assert (=> b!111296 (= e!72344 #b00000000000000000000000000000000)))

(declare-fun d!31587 () Bool)

(declare-fun lt!57389 () (_ BitVec 32))

(assert (=> d!31587 (and (bvsge lt!57389 #b00000000000000000000000000000000) (bvsle lt!57389 (bvsub (size!2326 (_keys!4339 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!31587 (= lt!57389 e!72344)))

(declare-fun c!19837 () Bool)

(assert (=> d!31587 (= c!19837 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2326 (_keys!4339 newMap!16))))))

(assert (=> d!31587 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2326 (_keys!4339 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2326 (_keys!4339 newMap!16)) (size!2326 (_keys!4339 newMap!16))))))

(assert (=> d!31587 (= (arrayCountValidKeys!0 (_keys!4339 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2326 (_keys!4339 newMap!16))) lt!57389)))

(declare-fun b!111297 () Bool)

(assert (=> b!111297 (= e!72344 e!72343)))

(declare-fun c!19836 () Bool)

(assert (=> b!111297 (= c!19836 (validKeyInArray!0 (select (arr!2068 (_keys!4339 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!31587 c!19837) b!111296))

(assert (= (and d!31587 (not c!19837)) b!111297))

(assert (= (and b!111297 c!19836) b!111295))

(assert (= (and b!111297 (not c!19836)) b!111294))

(assert (= (or b!111295 b!111294) bm!11868))

(declare-fun m!126657 () Bool)

(assert (=> bm!11868 m!126657))

(assert (=> b!111297 m!125385))

(assert (=> b!111297 m!125385))

(assert (=> b!111297 m!125857))

(assert (=> bm!11782 d!31587))

(declare-fun d!31589 () Bool)

(declare-fun lt!57390 () Bool)

(assert (=> d!31589 (= lt!57390 (select (content!113 lt!56391) (tuple2!2397 (_1!1209 lt!56300) (_2!1209 lt!56300))))))

(declare-fun e!72345 () Bool)

(assert (=> d!31589 (= lt!57390 e!72345)))

(declare-fun res!54962 () Bool)

(assert (=> d!31589 (=> (not res!54962) (not e!72345))))

(assert (=> d!31589 (= res!54962 ((_ is Cons!1623) lt!56391))))

(assert (=> d!31589 (= (contains!829 lt!56391 (tuple2!2397 (_1!1209 lt!56300) (_2!1209 lt!56300))) lt!57390)))

(declare-fun b!111298 () Bool)

(declare-fun e!72346 () Bool)

(assert (=> b!111298 (= e!72345 e!72346)))

(declare-fun res!54963 () Bool)

(assert (=> b!111298 (=> res!54963 e!72346)))

(assert (=> b!111298 (= res!54963 (= (h!2222 lt!56391) (tuple2!2397 (_1!1209 lt!56300) (_2!1209 lt!56300))))))

(declare-fun b!111299 () Bool)

(assert (=> b!111299 (= e!72346 (contains!829 (t!5755 lt!56391) (tuple2!2397 (_1!1209 lt!56300) (_2!1209 lt!56300))))))

(assert (= (and d!31589 res!54962) b!111298))

(assert (= (and b!111298 (not res!54963)) b!111299))

(declare-fun m!126659 () Bool)

(assert (=> d!31589 m!126659))

(declare-fun m!126661 () Bool)

(assert (=> d!31589 m!126661))

(declare-fun m!126663 () Bool)

(assert (=> b!111299 m!126663))

(assert (=> b!110253 d!31589))

(declare-fun d!31591 () Bool)

(declare-fun res!54964 () Bool)

(declare-fun e!72347 () Bool)

(assert (=> d!31591 (=> res!54964 e!72347)))

(assert (=> d!31591 (= res!54964 (and ((_ is Cons!1623) (toList!792 call!11685)) (= (_1!1209 (h!2222 (toList!792 call!11685))) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355))))))

(assert (=> d!31591 (= (containsKey!160 (toList!792 call!11685) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)) e!72347)))

(declare-fun b!111300 () Bool)

(declare-fun e!72348 () Bool)

(assert (=> b!111300 (= e!72347 e!72348)))

(declare-fun res!54965 () Bool)

(assert (=> b!111300 (=> (not res!54965) (not e!72348))))

(assert (=> b!111300 (= res!54965 (and (or (not ((_ is Cons!1623) (toList!792 call!11685))) (bvsle (_1!1209 (h!2222 (toList!792 call!11685))) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355))) ((_ is Cons!1623) (toList!792 call!11685)) (bvslt (_1!1209 (h!2222 (toList!792 call!11685))) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355))))))

(declare-fun b!111301 () Bool)

(assert (=> b!111301 (= e!72348 (containsKey!160 (t!5755 (toList!792 call!11685)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355)))))

(assert (= (and d!31591 (not res!54964)) b!111300))

(assert (= (and b!111300 res!54965) b!111301))

(assert (=> b!111301 m!123865))

(declare-fun m!126665 () Bool)

(assert (=> b!111301 m!126665))

(assert (=> d!30959 d!31591))

(declare-fun b!111302 () Bool)

(declare-fun e!72352 () Bool)

(assert (=> b!111302 (= e!72352 (contains!830 Nil!1623 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!111303 () Bool)

(declare-fun e!72350 () Bool)

(declare-fun e!72349 () Bool)

(assert (=> b!111303 (= e!72350 e!72349)))

(declare-fun res!54966 () Bool)

(assert (=> b!111303 (=> (not res!54966) (not e!72349))))

(assert (=> b!111303 (= res!54966 (not e!72352))))

(declare-fun res!54967 () Bool)

(assert (=> b!111303 (=> (not res!54967) (not e!72352))))

(assert (=> b!111303 (= res!54967 (validKeyInArray!0 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun bm!11869 () Bool)

(declare-fun call!11872 () Bool)

(declare-fun c!19838 () Bool)

(assert (=> bm!11869 (= call!11872 (arrayNoDuplicates!0 (_keys!4339 (v!2920 (underlying!363 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!19838 (Cons!1622 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) #b00000000000000000000000000000000) Nil!1623) Nil!1623)))))

(declare-fun d!31593 () Bool)

(declare-fun res!54968 () Bool)

(assert (=> d!31593 (=> res!54968 e!72350)))

(assert (=> d!31593 (= res!54968 (bvsge #b00000000000000000000000000000000 (size!2326 (_keys!4339 (v!2920 (underlying!363 thiss!992))))))))

(assert (=> d!31593 (= (arrayNoDuplicates!0 (_keys!4339 (v!2920 (underlying!363 thiss!992))) #b00000000000000000000000000000000 Nil!1623) e!72350)))

(declare-fun b!111304 () Bool)

(declare-fun e!72351 () Bool)

(assert (=> b!111304 (= e!72351 call!11872)))

(declare-fun b!111305 () Bool)

(assert (=> b!111305 (= e!72351 call!11872)))

(declare-fun b!111306 () Bool)

(assert (=> b!111306 (= e!72349 e!72351)))

(assert (=> b!111306 (= c!19838 (validKeyInArray!0 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (= (and d!31593 (not res!54968)) b!111303))

(assert (= (and b!111303 res!54967) b!111302))

(assert (= (and b!111303 res!54966) b!111306))

(assert (= (and b!111306 c!19838) b!111305))

(assert (= (and b!111306 (not c!19838)) b!111304))

(assert (= (or b!111305 b!111304) bm!11869))

(declare-fun m!126667 () Bool)

(assert (=> b!111302 m!126667))

(assert (=> b!111302 m!126667))

(declare-fun m!126669 () Bool)

(assert (=> b!111302 m!126669))

(assert (=> b!111303 m!126667))

(assert (=> b!111303 m!126667))

(declare-fun m!126671 () Bool)

(assert (=> b!111303 m!126671))

(assert (=> bm!11869 m!126667))

(declare-fun m!126673 () Bool)

(assert (=> bm!11869 m!126673))

(assert (=> b!111306 m!126667))

(assert (=> b!111306 m!126667))

(assert (=> b!111306 m!126671))

(assert (=> b!110059 d!31593))

(declare-fun d!31595 () Bool)

(assert (=> d!31595 (= (isDefined!110 (getValueByKey!156 (toList!792 lt!56589) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!382 (getValueByKey!156 (toList!792 lt!56589) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!4587 () Bool)

(assert (= bs!4587 d!31595))

(assert (=> bs!4587 m!124441))

(declare-fun m!126675 () Bool)

(assert (=> bs!4587 m!126675))

(assert (=> b!110077 d!31595))

(assert (=> b!110077 d!31113))

(declare-fun b!111309 () Bool)

(declare-fun e!72354 () Option!162)

(assert (=> b!111309 (= e!72354 (getValueByKey!156 (t!5755 (toList!792 lt!56950)) (_1!1209 (tuple2!2397 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(declare-fun c!19839 () Bool)

(declare-fun d!31597 () Bool)

(assert (=> d!31597 (= c!19839 (and ((_ is Cons!1623) (toList!792 lt!56950)) (= (_1!1209 (h!2222 (toList!792 lt!56950))) (_1!1209 (tuple2!2397 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))))))

(declare-fun e!72353 () Option!162)

(assert (=> d!31597 (= (getValueByKey!156 (toList!792 lt!56950) (_1!1209 (tuple2!2397 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))) e!72353)))

(declare-fun b!111307 () Bool)

(assert (=> b!111307 (= e!72353 (Some!161 (_2!1209 (h!2222 (toList!792 lt!56950)))))))

(declare-fun b!111308 () Bool)

(assert (=> b!111308 (= e!72353 e!72354)))

(declare-fun c!19840 () Bool)

(assert (=> b!111308 (= c!19840 (and ((_ is Cons!1623) (toList!792 lt!56950)) (not (= (_1!1209 (h!2222 (toList!792 lt!56950))) (_1!1209 (tuple2!2397 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))))

(declare-fun b!111310 () Bool)

(assert (=> b!111310 (= e!72354 None!160)))

(assert (= (and d!31597 c!19839) b!111307))

(assert (= (and d!31597 (not c!19839)) b!111308))

(assert (= (and b!111308 c!19840) b!111309))

(assert (= (and b!111308 (not c!19840)) b!111310))

(declare-fun m!126677 () Bool)

(assert (=> b!111309 m!126677))

(assert (=> b!110408 d!31597))

(declare-fun d!31599 () Bool)

(assert (=> d!31599 (= (inRange!0 (index!3207 lt!56780) (mask!6793 newMap!16)) (and (bvsge (index!3207 lt!56780) #b00000000000000000000000000000000) (bvslt (index!3207 lt!56780) (bvadd (mask!6793 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!110240 d!31599))

(assert (=> b!110089 d!31205))

(declare-fun d!31601 () Bool)

(declare-fun lt!57391 () Bool)

(assert (=> d!31601 (= lt!57391 (select (content!113 (toList!792 lt!56609)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))))

(declare-fun e!72355 () Bool)

(assert (=> d!31601 (= lt!57391 e!72355)))

(declare-fun res!54969 () Bool)

(assert (=> d!31601 (=> (not res!54969) (not e!72355))))

(assert (=> d!31601 (= res!54969 ((_ is Cons!1623) (toList!792 lt!56609)))))

(assert (=> d!31601 (= (contains!829 (toList!792 lt!56609) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)) lt!57391)))

(declare-fun b!111311 () Bool)

(declare-fun e!72356 () Bool)

(assert (=> b!111311 (= e!72355 e!72356)))

(declare-fun res!54970 () Bool)

(assert (=> b!111311 (=> res!54970 e!72356)))

(assert (=> b!111311 (= res!54970 (= (h!2222 (toList!792 lt!56609)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))))

(declare-fun b!111312 () Bool)

(assert (=> b!111312 (= e!72356 (contains!829 (t!5755 (toList!792 lt!56609)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))))

(assert (= (and d!31601 res!54969) b!111311))

(assert (= (and b!111311 (not res!54970)) b!111312))

(declare-fun m!126679 () Bool)

(assert (=> d!31601 m!126679))

(declare-fun m!126681 () Bool)

(assert (=> d!31601 m!126681))

(declare-fun m!126683 () Bool)

(assert (=> b!111312 m!126683))

(assert (=> b!109961 d!31601))

(declare-fun b!111313 () Bool)

(declare-fun e!72360 () Bool)

(assert (=> b!111313 (= e!72360 (contains!830 Nil!1623 (select (arr!2068 (_keys!4339 (_2!1210 lt!56499))) #b00000000000000000000000000000000)))))

(declare-fun b!111314 () Bool)

(declare-fun e!72358 () Bool)

(declare-fun e!72357 () Bool)

(assert (=> b!111314 (= e!72358 e!72357)))

(declare-fun res!54971 () Bool)

(assert (=> b!111314 (=> (not res!54971) (not e!72357))))

(assert (=> b!111314 (= res!54971 (not e!72360))))

(declare-fun res!54972 () Bool)

(assert (=> b!111314 (=> (not res!54972) (not e!72360))))

(assert (=> b!111314 (= res!54972 (validKeyInArray!0 (select (arr!2068 (_keys!4339 (_2!1210 lt!56499))) #b00000000000000000000000000000000)))))

(declare-fun bm!11870 () Bool)

(declare-fun call!11873 () Bool)

(declare-fun c!19841 () Bool)

(assert (=> bm!11870 (= call!11873 (arrayNoDuplicates!0 (_keys!4339 (_2!1210 lt!56499)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!19841 (Cons!1622 (select (arr!2068 (_keys!4339 (_2!1210 lt!56499))) #b00000000000000000000000000000000) Nil!1623) Nil!1623)))))

(declare-fun d!31603 () Bool)

(declare-fun res!54973 () Bool)

(assert (=> d!31603 (=> res!54973 e!72358)))

(assert (=> d!31603 (= res!54973 (bvsge #b00000000000000000000000000000000 (size!2326 (_keys!4339 (_2!1210 lt!56499)))))))

(assert (=> d!31603 (= (arrayNoDuplicates!0 (_keys!4339 (_2!1210 lt!56499)) #b00000000000000000000000000000000 Nil!1623) e!72358)))

(declare-fun b!111315 () Bool)

(declare-fun e!72359 () Bool)

(assert (=> b!111315 (= e!72359 call!11873)))

(declare-fun b!111316 () Bool)

(assert (=> b!111316 (= e!72359 call!11873)))

(declare-fun b!111317 () Bool)

(assert (=> b!111317 (= e!72357 e!72359)))

(assert (=> b!111317 (= c!19841 (validKeyInArray!0 (select (arr!2068 (_keys!4339 (_2!1210 lt!56499))) #b00000000000000000000000000000000)))))

(assert (= (and d!31603 (not res!54973)) b!111314))

(assert (= (and b!111314 res!54972) b!111313))

(assert (= (and b!111314 res!54971) b!111317))

(assert (= (and b!111317 c!19841) b!111316))

(assert (= (and b!111317 (not c!19841)) b!111315))

(assert (= (or b!111316 b!111315) bm!11870))

(declare-fun m!126685 () Bool)

(assert (=> b!111313 m!126685))

(assert (=> b!111313 m!126685))

(declare-fun m!126687 () Bool)

(assert (=> b!111313 m!126687))

(assert (=> b!111314 m!126685))

(assert (=> b!111314 m!126685))

(declare-fun m!126689 () Bool)

(assert (=> b!111314 m!126689))

(assert (=> bm!11870 m!126685))

(declare-fun m!126691 () Bool)

(assert (=> bm!11870 m!126691))

(assert (=> b!111317 m!126685))

(assert (=> b!111317 m!126685))

(assert (=> b!111317 m!126689))

(assert (=> b!110062 d!31603))

(declare-fun d!31605 () Bool)

(assert (=> d!31605 (= (isDefined!110 (getValueByKey!156 (toList!792 call!11694) (select (arr!2068 (_keys!4339 newMap!16)) (index!3207 lt!56493)))) (not (isEmpty!382 (getValueByKey!156 (toList!792 call!11694) (select (arr!2068 (_keys!4339 newMap!16)) (index!3207 lt!56493))))))))

(declare-fun bs!4588 () Bool)

(assert (= bs!4588 d!31605))

(assert (=> bs!4588 m!124421))

(declare-fun m!126693 () Bool)

(assert (=> bs!4588 m!126693))

(assert (=> b!110068 d!31605))

(declare-fun b!111320 () Bool)

(declare-fun e!72362 () Option!162)

(assert (=> b!111320 (= e!72362 (getValueByKey!156 (t!5755 (toList!792 call!11694)) (select (arr!2068 (_keys!4339 newMap!16)) (index!3207 lt!56493))))))

(declare-fun d!31607 () Bool)

(declare-fun c!19842 () Bool)

(assert (=> d!31607 (= c!19842 (and ((_ is Cons!1623) (toList!792 call!11694)) (= (_1!1209 (h!2222 (toList!792 call!11694))) (select (arr!2068 (_keys!4339 newMap!16)) (index!3207 lt!56493)))))))

(declare-fun e!72361 () Option!162)

(assert (=> d!31607 (= (getValueByKey!156 (toList!792 call!11694) (select (arr!2068 (_keys!4339 newMap!16)) (index!3207 lt!56493))) e!72361)))

(declare-fun b!111318 () Bool)

(assert (=> b!111318 (= e!72361 (Some!161 (_2!1209 (h!2222 (toList!792 call!11694)))))))

(declare-fun b!111319 () Bool)

(assert (=> b!111319 (= e!72361 e!72362)))

(declare-fun c!19843 () Bool)

(assert (=> b!111319 (= c!19843 (and ((_ is Cons!1623) (toList!792 call!11694)) (not (= (_1!1209 (h!2222 (toList!792 call!11694))) (select (arr!2068 (_keys!4339 newMap!16)) (index!3207 lt!56493))))))))

(declare-fun b!111321 () Bool)

(assert (=> b!111321 (= e!72362 None!160)))

(assert (= (and d!31607 c!19842) b!111318))

(assert (= (and d!31607 (not c!19842)) b!111319))

(assert (= (and b!111319 c!19843) b!111320))

(assert (= (and b!111319 (not c!19843)) b!111321))

(assert (=> b!111320 m!124141))

(declare-fun m!126695 () Bool)

(assert (=> b!111320 m!126695))

(assert (=> b!110068 d!31607))

(assert (=> b!110320 d!30895))

(assert (=> d!30853 d!31081))

(declare-fun d!31609 () Bool)

(declare-fun lt!57392 () Bool)

(assert (=> d!31609 (= lt!57392 (select (content!113 lt!56398) (tuple2!2397 (_1!1209 lt!56300) (_2!1209 lt!56300))))))

(declare-fun e!72363 () Bool)

(assert (=> d!31609 (= lt!57392 e!72363)))

(declare-fun res!54974 () Bool)

(assert (=> d!31609 (=> (not res!54974) (not e!72363))))

(assert (=> d!31609 (= res!54974 ((_ is Cons!1623) lt!56398))))

(assert (=> d!31609 (= (contains!829 lt!56398 (tuple2!2397 (_1!1209 lt!56300) (_2!1209 lt!56300))) lt!57392)))

(declare-fun b!111322 () Bool)

(declare-fun e!72364 () Bool)

(assert (=> b!111322 (= e!72363 e!72364)))

(declare-fun res!54975 () Bool)

(assert (=> b!111322 (=> res!54975 e!72364)))

(assert (=> b!111322 (= res!54975 (= (h!2222 lt!56398) (tuple2!2397 (_1!1209 lt!56300) (_2!1209 lt!56300))))))

(declare-fun b!111323 () Bool)

(assert (=> b!111323 (= e!72364 (contains!829 (t!5755 lt!56398) (tuple2!2397 (_1!1209 lt!56300) (_2!1209 lt!56300))))))

(assert (= (and d!31609 res!54974) b!111322))

(assert (= (and b!111322 (not res!54975)) b!111323))

(declare-fun m!126697 () Bool)

(assert (=> d!31609 m!126697))

(declare-fun m!126699 () Bool)

(assert (=> d!31609 m!126699))

(declare-fun m!126701 () Bool)

(assert (=> b!111323 m!126701))

(assert (=> b!109992 d!31609))

(declare-fun d!31611 () Bool)

(declare-fun e!72365 () Bool)

(assert (=> d!31611 e!72365))

(declare-fun res!54976 () Bool)

(assert (=> d!31611 (=> (not res!54976) (not e!72365))))

(declare-fun lt!57394 () ListLongMap!1553)

(assert (=> d!31611 (= res!54976 (contains!827 lt!57394 (_1!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16)))))))

(declare-fun lt!57393 () List!1627)

(assert (=> d!31611 (= lt!57394 (ListLongMap!1554 lt!57393))))

(declare-fun lt!57395 () Unit!3390)

(declare-fun lt!57396 () Unit!3390)

(assert (=> d!31611 (= lt!57395 lt!57396)))

(assert (=> d!31611 (= (getValueByKey!156 lt!57393 (_1!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16)))) (Some!161 (_2!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16)))))))

(assert (=> d!31611 (= lt!57396 (lemmaContainsTupThenGetReturnValue!75 lt!57393 (_1!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16))) (_2!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16)))))))

(assert (=> d!31611 (= lt!57393 (insertStrictlySorted!78 (toList!792 call!11762) (_1!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16))) (_2!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16)))))))

(assert (=> d!31611 (= (+!139 call!11762 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16))) lt!57394)))

(declare-fun b!111324 () Bool)

(declare-fun res!54977 () Bool)

(assert (=> b!111324 (=> (not res!54977) (not e!72365))))

(assert (=> b!111324 (= res!54977 (= (getValueByKey!156 (toList!792 lt!57394) (_1!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16)))) (Some!161 (_2!1209 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16))))))))

(declare-fun b!111325 () Bool)

(assert (=> b!111325 (= e!72365 (contains!829 (toList!792 lt!57394) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16))))))

(assert (= (and d!31611 res!54976) b!111324))

(assert (= (and b!111324 res!54977) b!111325))

(declare-fun m!126703 () Bool)

(assert (=> d!31611 m!126703))

(declare-fun m!126705 () Bool)

(assert (=> d!31611 m!126705))

(declare-fun m!126707 () Bool)

(assert (=> d!31611 m!126707))

(declare-fun m!126709 () Bool)

(assert (=> d!31611 m!126709))

(declare-fun m!126711 () Bool)

(assert (=> b!111324 m!126711))

(declare-fun m!126713 () Bool)

(assert (=> b!111325 m!126713))

(assert (=> b!110220 d!31611))

(declare-fun b!111328 () Bool)

(declare-fun e!72367 () Option!162)

(assert (=> b!111328 (= e!72367 (getValueByKey!156 (t!5755 (toList!792 lt!56609)) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))

(declare-fun d!31613 () Bool)

(declare-fun c!19844 () Bool)

(assert (=> d!31613 (= c!19844 (and ((_ is Cons!1623) (toList!792 lt!56609)) (= (_1!1209 (h!2222 (toList!792 lt!56609))) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))))))

(declare-fun e!72366 () Option!162)

(assert (=> d!31613 (= (getValueByKey!156 (toList!792 lt!56609) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))) e!72366)))

(declare-fun b!111326 () Bool)

(assert (=> b!111326 (= e!72366 (Some!161 (_2!1209 (h!2222 (toList!792 lt!56609)))))))

(declare-fun b!111327 () Bool)

(assert (=> b!111327 (= e!72366 e!72367)))

(declare-fun c!19845 () Bool)

(assert (=> b!111327 (= c!19845 (and ((_ is Cons!1623) (toList!792 lt!56609)) (not (= (_1!1209 (h!2222 (toList!792 lt!56609))) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))))

(declare-fun b!111329 () Bool)

(assert (=> b!111329 (= e!72367 None!160)))

(assert (= (and d!31613 c!19844) b!111326))

(assert (= (and d!31613 (not c!19844)) b!111327))

(assert (= (and b!111327 c!19845) b!111328))

(assert (= (and b!111327 (not c!19845)) b!111329))

(declare-fun m!126715 () Bool)

(assert (=> b!111328 m!126715))

(assert (=> b!109960 d!31613))

(declare-fun d!31615 () Bool)

(assert (=> d!31615 (= (get!1350 (getValueByKey!156 (toList!792 (+!139 lt!56592 (tuple2!2397 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))) lt!56578)) (v!2926 (getValueByKey!156 (toList!792 (+!139 lt!56592 (tuple2!2397 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))) lt!56578)))))

(assert (=> d!30979 d!31615))

(declare-fun e!72369 () Option!162)

(declare-fun b!111332 () Bool)

(assert (=> b!111332 (= e!72369 (getValueByKey!156 (t!5755 (toList!792 (+!139 lt!56592 (tuple2!2397 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))) lt!56578))))

(declare-fun d!31617 () Bool)

(declare-fun c!19846 () Bool)

(assert (=> d!31617 (= c!19846 (and ((_ is Cons!1623) (toList!792 (+!139 lt!56592 (tuple2!2397 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))) (= (_1!1209 (h!2222 (toList!792 (+!139 lt!56592 (tuple2!2397 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))) lt!56578)))))

(declare-fun e!72368 () Option!162)

(assert (=> d!31617 (= (getValueByKey!156 (toList!792 (+!139 lt!56592 (tuple2!2397 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))) lt!56578) e!72368)))

(declare-fun b!111330 () Bool)

(assert (=> b!111330 (= e!72368 (Some!161 (_2!1209 (h!2222 (toList!792 (+!139 lt!56592 (tuple2!2397 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))))))))

(declare-fun b!111331 () Bool)

(assert (=> b!111331 (= e!72368 e!72369)))

(declare-fun c!19847 () Bool)

(assert (=> b!111331 (= c!19847 (and ((_ is Cons!1623) (toList!792 (+!139 lt!56592 (tuple2!2397 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))) (not (= (_1!1209 (h!2222 (toList!792 (+!139 lt!56592 (tuple2!2397 lt!56583 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))) lt!56578))))))

(declare-fun b!111333 () Bool)

(assert (=> b!111333 (= e!72369 None!160)))

(assert (= (and d!31617 c!19846) b!111330))

(assert (= (and d!31617 (not c!19846)) b!111331))

(assert (= (and b!111331 c!19847) b!111332))

(assert (= (and b!111331 (not c!19847)) b!111333))

(declare-fun m!126717 () Bool)

(assert (=> b!111332 m!126717))

(assert (=> d!30979 d!31617))

(declare-fun d!31619 () Bool)

(assert (=> d!31619 (= (content!114 Nil!1623) ((as const (Array (_ BitVec 64) Bool)) false))))

(assert (=> d!30817 d!31619))

(declare-fun d!31621 () Bool)

(declare-fun e!72371 () Bool)

(assert (=> d!31621 e!72371))

(declare-fun res!54978 () Bool)

(assert (=> d!31621 (=> res!54978 e!72371)))

(declare-fun lt!57397 () Bool)

(assert (=> d!31621 (= res!54978 (not lt!57397))))

(declare-fun lt!57398 () Bool)

(assert (=> d!31621 (= lt!57397 lt!57398)))

(declare-fun lt!57399 () Unit!3390)

(declare-fun e!72370 () Unit!3390)

(assert (=> d!31621 (= lt!57399 e!72370)))

(declare-fun c!19848 () Bool)

(assert (=> d!31621 (= c!19848 lt!57398)))

(assert (=> d!31621 (= lt!57398 (containsKey!160 (toList!792 lt!56765) (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!31621 (= (contains!827 lt!56765 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)) lt!57397)))

(declare-fun b!111334 () Bool)

(declare-fun lt!57400 () Unit!3390)

(assert (=> b!111334 (= e!72370 lt!57400)))

(assert (=> b!111334 (= lt!57400 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 lt!56765) (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!111334 (isDefined!110 (getValueByKey!156 (toList!792 lt!56765) (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!111335 () Bool)

(declare-fun Unit!3458 () Unit!3390)

(assert (=> b!111335 (= e!72370 Unit!3458)))

(declare-fun b!111336 () Bool)

(assert (=> b!111336 (= e!72371 (isDefined!110 (getValueByKey!156 (toList!792 lt!56765) (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!31621 c!19848) b!111334))

(assert (= (and d!31621 (not c!19848)) b!111335))

(assert (= (and d!31621 (not res!54978)) b!111336))

(assert (=> d!31621 m!124447))

(declare-fun m!126719 () Bool)

(assert (=> d!31621 m!126719))

(assert (=> b!111334 m!124447))

(declare-fun m!126721 () Bool)

(assert (=> b!111334 m!126721))

(assert (=> b!111334 m!124447))

(assert (=> b!111334 m!126641))

(assert (=> b!111334 m!126641))

(declare-fun m!126723 () Bool)

(assert (=> b!111334 m!126723))

(assert (=> b!111336 m!124447))

(assert (=> b!111336 m!126641))

(assert (=> b!111336 m!126641))

(assert (=> b!111336 m!126723))

(assert (=> b!110215 d!31621))

(declare-fun d!31623 () Bool)

(declare-fun e!72373 () Bool)

(assert (=> d!31623 e!72373))

(declare-fun res!54979 () Bool)

(assert (=> d!31623 (=> res!54979 e!72373)))

(declare-fun lt!57401 () Bool)

(assert (=> d!31623 (= res!54979 (not lt!57401))))

(declare-fun lt!57402 () Bool)

(assert (=> d!31623 (= lt!57401 lt!57402)))

(declare-fun lt!57403 () Unit!3390)

(declare-fun e!72372 () Unit!3390)

(assert (=> d!31623 (= lt!57403 e!72372)))

(declare-fun c!19849 () Bool)

(assert (=> d!31623 (= c!19849 lt!57402)))

(assert (=> d!31623 (= lt!57402 (containsKey!160 (toList!792 lt!56609) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))

(assert (=> d!31623 (= (contains!827 lt!56609 (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))) lt!57401)))

(declare-fun b!111337 () Bool)

(declare-fun lt!57404 () Unit!3390)

(assert (=> b!111337 (= e!72372 lt!57404)))

(assert (=> b!111337 (= lt!57404 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 lt!56609) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))

(assert (=> b!111337 (isDefined!110 (getValueByKey!156 (toList!792 lt!56609) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))

(declare-fun b!111338 () Bool)

(declare-fun Unit!3459 () Unit!3390)

(assert (=> b!111338 (= e!72372 Unit!3459)))

(declare-fun b!111339 () Bool)

(assert (=> b!111339 (= e!72373 (isDefined!110 (getValueByKey!156 (toList!792 lt!56609) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))))))

(assert (= (and d!31623 c!19849) b!111337))

(assert (= (and d!31623 (not c!19849)) b!111338))

(assert (= (and d!31623 (not res!54979)) b!111339))

(declare-fun m!126725 () Bool)

(assert (=> d!31623 m!126725))

(declare-fun m!126727 () Bool)

(assert (=> b!111337 m!126727))

(assert (=> b!111337 m!124293))

(assert (=> b!111337 m!124293))

(declare-fun m!126729 () Bool)

(assert (=> b!111337 m!126729))

(assert (=> b!111339 m!124293))

(assert (=> b!111339 m!124293))

(assert (=> b!111339 m!126729))

(assert (=> d!30797 d!31623))

(declare-fun b!111342 () Bool)

(declare-fun e!72375 () Option!162)

(assert (=> b!111342 (= e!72375 (getValueByKey!156 (t!5755 lt!56608) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))

(declare-fun d!31625 () Bool)

(declare-fun c!19850 () Bool)

(assert (=> d!31625 (= c!19850 (and ((_ is Cons!1623) lt!56608) (= (_1!1209 (h!2222 lt!56608)) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))))))

(declare-fun e!72374 () Option!162)

(assert (=> d!31625 (= (getValueByKey!156 lt!56608 (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))) e!72374)))

(declare-fun b!111340 () Bool)

(assert (=> b!111340 (= e!72374 (Some!161 (_2!1209 (h!2222 lt!56608))))))

(declare-fun b!111341 () Bool)

(assert (=> b!111341 (= e!72374 e!72375)))

(declare-fun c!19851 () Bool)

(assert (=> b!111341 (= c!19851 (and ((_ is Cons!1623) lt!56608) (not (= (_1!1209 (h!2222 lt!56608)) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))))

(declare-fun b!111343 () Bool)

(assert (=> b!111343 (= e!72375 None!160)))

(assert (= (and d!31625 c!19850) b!111340))

(assert (= (and d!31625 (not c!19850)) b!111341))

(assert (= (and b!111341 c!19851) b!111342))

(assert (= (and b!111341 (not c!19851)) b!111343))

(declare-fun m!126731 () Bool)

(assert (=> b!111342 m!126731))

(assert (=> d!30797 d!31625))

(declare-fun d!31627 () Bool)

(assert (=> d!31627 (= (getValueByKey!156 lt!56608 (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))) (Some!161 (_2!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))

(declare-fun lt!57405 () Unit!3390)

(assert (=> d!31627 (= lt!57405 (choose!691 lt!56608 (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)) (_2!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))

(declare-fun e!72376 () Bool)

(assert (=> d!31627 e!72376))

(declare-fun res!54980 () Bool)

(assert (=> d!31627 (=> (not res!54980) (not e!72376))))

(assert (=> d!31627 (= res!54980 (isStrictlySorted!306 lt!56608))))

(assert (=> d!31627 (= (lemmaContainsTupThenGetReturnValue!75 lt!56608 (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)) (_2!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))) lt!57405)))

(declare-fun b!111344 () Bool)

(declare-fun res!54981 () Bool)

(assert (=> b!111344 (=> (not res!54981) (not e!72376))))

(assert (=> b!111344 (= res!54981 (containsKey!160 lt!56608 (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))

(declare-fun b!111345 () Bool)

(assert (=> b!111345 (= e!72376 (contains!829 lt!56608 (tuple2!2397 (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)) (_2!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))))))

(assert (= (and d!31627 res!54980) b!111344))

(assert (= (and b!111344 res!54981) b!111345))

(assert (=> d!31627 m!124287))

(declare-fun m!126733 () Bool)

(assert (=> d!31627 m!126733))

(declare-fun m!126735 () Bool)

(assert (=> d!31627 m!126735))

(declare-fun m!126737 () Bool)

(assert (=> b!111344 m!126737))

(declare-fun m!126739 () Bool)

(assert (=> b!111345 m!126739))

(assert (=> d!30797 d!31627))

(declare-fun c!19852 () Bool)

(declare-fun e!72378 () List!1627)

(declare-fun b!111346 () Bool)

(declare-fun c!19855 () Bool)

(assert (=> b!111346 (= e!72378 (ite c!19852 (t!5755 (toList!792 (+!139 lt!56303 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))) (ite c!19855 (Cons!1623 (h!2222 (toList!792 (+!139 lt!56303 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))) (t!5755 (toList!792 (+!139 lt!56303 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))) Nil!1624)))))

(declare-fun b!111347 () Bool)

(assert (=> b!111347 (= e!72378 (insertStrictlySorted!78 (t!5755 (toList!792 (+!139 lt!56303 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)) (_2!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))

(declare-fun bm!11871 () Bool)

(declare-fun call!11876 () List!1627)

(declare-fun call!11874 () List!1627)

(assert (=> bm!11871 (= call!11876 call!11874)))

(declare-fun b!111348 () Bool)

(declare-fun e!72377 () List!1627)

(declare-fun call!11875 () List!1627)

(assert (=> b!111348 (= e!72377 call!11875)))

(declare-fun b!111349 () Bool)

(assert (=> b!111349 (= c!19855 (and ((_ is Cons!1623) (toList!792 (+!139 lt!56303 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))) (bvsgt (_1!1209 (h!2222 (toList!792 (+!139 lt!56303 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))))))

(declare-fun e!72380 () List!1627)

(assert (=> b!111349 (= e!72380 e!72377)))

(declare-fun b!111350 () Bool)

(declare-fun res!54983 () Bool)

(declare-fun e!72379 () Bool)

(assert (=> b!111350 (=> (not res!54983) (not e!72379))))

(declare-fun lt!57406 () List!1627)

(assert (=> b!111350 (= res!54983 (containsKey!160 lt!57406 (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))

(declare-fun b!111352 () Bool)

(assert (=> b!111352 (= e!72377 call!11875)))

(declare-fun bm!11872 () Bool)

(assert (=> bm!11872 (= call!11875 call!11876)))

(declare-fun b!111353 () Bool)

(assert (=> b!111353 (= e!72380 call!11876)))

(declare-fun b!111354 () Bool)

(declare-fun e!72381 () List!1627)

(assert (=> b!111354 (= e!72381 e!72380)))

(assert (=> b!111354 (= c!19852 (and ((_ is Cons!1623) (toList!792 (+!139 lt!56303 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))) (= (_1!1209 (h!2222 (toList!792 (+!139 lt!56303 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))))))

(declare-fun d!31629 () Bool)

(assert (=> d!31629 e!72379))

(declare-fun res!54982 () Bool)

(assert (=> d!31629 (=> (not res!54982) (not e!72379))))

(assert (=> d!31629 (= res!54982 (isStrictlySorted!306 lt!57406))))

(assert (=> d!31629 (= lt!57406 e!72381)))

(declare-fun c!19854 () Bool)

(assert (=> d!31629 (= c!19854 (and ((_ is Cons!1623) (toList!792 (+!139 lt!56303 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))) (bvslt (_1!1209 (h!2222 (toList!792 (+!139 lt!56303 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))))))

(assert (=> d!31629 (isStrictlySorted!306 (toList!792 (+!139 lt!56303 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))))))

(assert (=> d!31629 (= (insertStrictlySorted!78 (toList!792 (+!139 lt!56303 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992)))))) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)) (_2!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))) lt!57406)))

(declare-fun b!111351 () Bool)

(assert (=> b!111351 (= e!72381 call!11874)))

(declare-fun b!111355 () Bool)

(assert (=> b!111355 (= e!72379 (contains!829 lt!57406 (tuple2!2397 (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)) (_2!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))))))

(declare-fun bm!11873 () Bool)

(assert (=> bm!11873 (= call!11874 ($colon$colon!82 e!72378 (ite c!19854 (h!2222 (toList!792 (+!139 lt!56303 (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))) (tuple2!2397 (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)) (_2!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))))

(declare-fun c!19853 () Bool)

(assert (=> bm!11873 (= c!19853 c!19854)))

(assert (= (and d!31629 c!19854) b!111351))

(assert (= (and d!31629 (not c!19854)) b!111354))

(assert (= (and b!111354 c!19852) b!111353))

(assert (= (and b!111354 (not c!19852)) b!111349))

(assert (= (and b!111349 c!19855) b!111348))

(assert (= (and b!111349 (not c!19855)) b!111352))

(assert (= (or b!111348 b!111352) bm!11872))

(assert (= (or b!111353 bm!11872) bm!11871))

(assert (= (or b!111351 bm!11871) bm!11873))

(assert (= (and bm!11873 c!19853) b!111347))

(assert (= (and bm!11873 (not c!19853)) b!111346))

(assert (= (and d!31629 res!54982) b!111350))

(assert (= (and b!111350 res!54983) b!111355))

(declare-fun m!126741 () Bool)

(assert (=> d!31629 m!126741))

(declare-fun m!126743 () Bool)

(assert (=> d!31629 m!126743))

(declare-fun m!126745 () Bool)

(assert (=> b!111350 m!126745))

(declare-fun m!126747 () Bool)

(assert (=> bm!11873 m!126747))

(declare-fun m!126749 () Bool)

(assert (=> b!111347 m!126749))

(declare-fun m!126751 () Bool)

(assert (=> b!111355 m!126751))

(assert (=> d!30797 d!31629))

(declare-fun d!31631 () Bool)

(declare-fun lt!57407 () Bool)

(assert (=> d!31631 (= lt!57407 (select (content!113 (t!5755 (toList!792 lt!56392))) lt!56300))))

(declare-fun e!72382 () Bool)

(assert (=> d!31631 (= lt!57407 e!72382)))

(declare-fun res!54984 () Bool)

(assert (=> d!31631 (=> (not res!54984) (not e!72382))))

(assert (=> d!31631 (= res!54984 ((_ is Cons!1623) (t!5755 (toList!792 lt!56392))))))

(assert (=> d!31631 (= (contains!829 (t!5755 (toList!792 lt!56392)) lt!56300) lt!57407)))

(declare-fun b!111356 () Bool)

(declare-fun e!72383 () Bool)

(assert (=> b!111356 (= e!72382 e!72383)))

(declare-fun res!54985 () Bool)

(assert (=> b!111356 (=> res!54985 e!72383)))

(assert (=> b!111356 (= res!54985 (= (h!2222 (t!5755 (toList!792 lt!56392))) lt!56300))))

(declare-fun b!111357 () Bool)

(assert (=> b!111357 (= e!72383 (contains!829 (t!5755 (t!5755 (toList!792 lt!56392))) lt!56300))))

(assert (= (and d!31631 res!54984) b!111356))

(assert (= (and b!111356 (not res!54985)) b!111357))

(assert (=> d!31631 m!126525))

(declare-fun m!126753 () Bool)

(assert (=> d!31631 m!126753))

(declare-fun m!126755 () Bool)

(assert (=> b!111357 m!126755))

(assert (=> b!110026 d!31631))

(assert (=> d!30843 d!31081))

(assert (=> b!110159 d!31271))

(declare-fun b!111358 () Bool)

(declare-fun e!72384 () Bool)

(assert (=> b!111358 (= e!72384 (validKeyInArray!0 (select (arr!2068 (_keys!4339 (_2!1210 lt!56499))) #b00000000000000000000000000000000)))))

(declare-fun b!111359 () Bool)

(declare-fun e!72393 () Bool)

(declare-fun e!72385 () Bool)

(assert (=> b!111359 (= e!72393 e!72385)))

(declare-fun res!54991 () Bool)

(declare-fun call!11881 () Bool)

(assert (=> b!111359 (= res!54991 call!11881)))

(assert (=> b!111359 (=> (not res!54991) (not e!72385))))

(declare-fun b!111360 () Bool)

(declare-fun lt!57424 () ListLongMap!1553)

(assert (=> b!111360 (= e!72385 (= (apply!100 lt!57424 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2497 (_2!1210 lt!56499))))))

(declare-fun b!111361 () Bool)

(assert (=> b!111361 (= e!72393 (not call!11881))))

(declare-fun d!31633 () Bool)

(declare-fun e!72395 () Bool)

(assert (=> d!31633 e!72395))

(declare-fun res!54988 () Bool)

(assert (=> d!31633 (=> (not res!54988) (not e!72395))))

(assert (=> d!31633 (= res!54988 (or (bvsge #b00000000000000000000000000000000 (size!2326 (_keys!4339 (_2!1210 lt!56499)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2326 (_keys!4339 (_2!1210 lt!56499)))))))))

(declare-fun lt!57426 () ListLongMap!1553)

(assert (=> d!31633 (= lt!57424 lt!57426)))

(declare-fun lt!57410 () Unit!3390)

(declare-fun e!72390 () Unit!3390)

(assert (=> d!31633 (= lt!57410 e!72390)))

(declare-fun c!19857 () Bool)

(declare-fun e!72391 () Bool)

(assert (=> d!31633 (= c!19857 e!72391)))

(declare-fun res!54990 () Bool)

(assert (=> d!31633 (=> (not res!54990) (not e!72391))))

(assert (=> d!31633 (= res!54990 (bvslt #b00000000000000000000000000000000 (size!2326 (_keys!4339 (_2!1210 lt!56499)))))))

(declare-fun e!72396 () ListLongMap!1553)

(assert (=> d!31633 (= lt!57426 e!72396)))

(declare-fun c!19856 () Bool)

(assert (=> d!31633 (= c!19856 (and (not (= (bvand (extraKeys!2423 (_2!1210 lt!56499)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2423 (_2!1210 lt!56499)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!31633 (validMask!0 (mask!6793 (_2!1210 lt!56499)))))

(assert (=> d!31633 (= (getCurrentListMap!469 (_keys!4339 (_2!1210 lt!56499)) (_values!2609 (_2!1210 lt!56499)) (mask!6793 (_2!1210 lt!56499)) (extraKeys!2423 (_2!1210 lt!56499)) (zeroValue!2497 (_2!1210 lt!56499)) (minValue!2497 (_2!1210 lt!56499)) #b00000000000000000000000000000000 (defaultEntry!2626 (_2!1210 lt!56499))) lt!57424)))

(declare-fun b!111362 () Bool)

(assert (=> b!111362 (= e!72395 e!72393)))

(declare-fun c!19861 () Bool)

(assert (=> b!111362 (= c!19861 (not (= (bvand (extraKeys!2423 (_2!1210 lt!56499)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!111363 () Bool)

(declare-fun e!72392 () ListLongMap!1553)

(assert (=> b!111363 (= e!72396 e!72392)))

(declare-fun c!19859 () Bool)

(assert (=> b!111363 (= c!19859 (and (not (= (bvand (extraKeys!2423 (_2!1210 lt!56499)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2423 (_2!1210 lt!56499)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11874 () Bool)

(declare-fun call!11879 () ListLongMap!1553)

(declare-fun call!11878 () ListLongMap!1553)

(assert (=> bm!11874 (= call!11879 call!11878)))

(declare-fun bm!11875 () Bool)

(declare-fun call!11877 () ListLongMap!1553)

(assert (=> bm!11875 (= call!11878 call!11877)))

(declare-fun b!111364 () Bool)

(declare-fun res!54994 () Bool)

(assert (=> b!111364 (=> (not res!54994) (not e!72395))))

(declare-fun e!72389 () Bool)

(assert (=> b!111364 (= res!54994 e!72389)))

(declare-fun res!54993 () Bool)

(assert (=> b!111364 (=> res!54993 e!72389)))

(assert (=> b!111364 (= res!54993 (not e!72384))))

(declare-fun res!54989 () Bool)

(assert (=> b!111364 (=> (not res!54989) (not e!72384))))

(assert (=> b!111364 (= res!54989 (bvslt #b00000000000000000000000000000000 (size!2326 (_keys!4339 (_2!1210 lt!56499)))))))

(declare-fun b!111365 () Bool)

(declare-fun e!72387 () Bool)

(declare-fun e!72386 () Bool)

(assert (=> b!111365 (= e!72387 e!72386)))

(declare-fun res!54986 () Bool)

(declare-fun call!11883 () Bool)

(assert (=> b!111365 (= res!54986 call!11883)))

(assert (=> b!111365 (=> (not res!54986) (not e!72386))))

(declare-fun bm!11876 () Bool)

(declare-fun call!11880 () ListLongMap!1553)

(declare-fun call!11882 () ListLongMap!1553)

(assert (=> bm!11876 (= call!11880 call!11882)))

(declare-fun b!111366 () Bool)

(assert (=> b!111366 (= e!72387 (not call!11883))))

(declare-fun b!111367 () Bool)

(declare-fun e!72388 () Bool)

(assert (=> b!111367 (= e!72389 e!72388)))

(declare-fun res!54987 () Bool)

(assert (=> b!111367 (=> (not res!54987) (not e!72388))))

(assert (=> b!111367 (= res!54987 (contains!827 lt!57424 (select (arr!2068 (_keys!4339 (_2!1210 lt!56499))) #b00000000000000000000000000000000)))))

(assert (=> b!111367 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2326 (_keys!4339 (_2!1210 lt!56499)))))))

(declare-fun b!111368 () Bool)

(assert (=> b!111368 (= e!72388 (= (apply!100 lt!57424 (select (arr!2068 (_keys!4339 (_2!1210 lt!56499))) #b00000000000000000000000000000000)) (get!1347 (select (arr!2069 (_values!2609 (_2!1210 lt!56499))) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2626 (_2!1210 lt!56499)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!111368 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2327 (_values!2609 (_2!1210 lt!56499)))))))

(assert (=> b!111368 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2326 (_keys!4339 (_2!1210 lt!56499)))))))

(declare-fun bm!11877 () Bool)

(assert (=> bm!11877 (= call!11881 (contains!827 lt!57424 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!11878 () Bool)

(assert (=> bm!11878 (= call!11883 (contains!827 lt!57424 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!111369 () Bool)

(assert (=> b!111369 (= e!72391 (validKeyInArray!0 (select (arr!2068 (_keys!4339 (_2!1210 lt!56499))) #b00000000000000000000000000000000)))))

(declare-fun b!111370 () Bool)

(declare-fun res!54992 () Bool)

(assert (=> b!111370 (=> (not res!54992) (not e!72395))))

(assert (=> b!111370 (= res!54992 e!72387)))

(declare-fun c!19860 () Bool)

(assert (=> b!111370 (= c!19860 (not (= (bvand (extraKeys!2423 (_2!1210 lt!56499)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!11879 () Bool)

(assert (=> bm!11879 (= call!11877 (getCurrentListMapNoExtraKeys!104 (_keys!4339 (_2!1210 lt!56499)) (_values!2609 (_2!1210 lt!56499)) (mask!6793 (_2!1210 lt!56499)) (extraKeys!2423 (_2!1210 lt!56499)) (zeroValue!2497 (_2!1210 lt!56499)) (minValue!2497 (_2!1210 lt!56499)) #b00000000000000000000000000000000 (defaultEntry!2626 (_2!1210 lt!56499))))))

(declare-fun b!111371 () Bool)

(declare-fun e!72394 () ListLongMap!1553)

(assert (=> b!111371 (= e!72394 call!11879)))

(declare-fun b!111372 () Bool)

(assert (=> b!111372 (= e!72396 (+!139 call!11882 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (_2!1210 lt!56499)))))))

(declare-fun b!111373 () Bool)

(assert (=> b!111373 (= e!72392 call!11880)))

(declare-fun b!111374 () Bool)

(declare-fun Unit!3460 () Unit!3390)

(assert (=> b!111374 (= e!72390 Unit!3460)))

(declare-fun b!111375 () Bool)

(declare-fun lt!57417 () Unit!3390)

(assert (=> b!111375 (= e!72390 lt!57417)))

(declare-fun lt!57412 () ListLongMap!1553)

(assert (=> b!111375 (= lt!57412 (getCurrentListMapNoExtraKeys!104 (_keys!4339 (_2!1210 lt!56499)) (_values!2609 (_2!1210 lt!56499)) (mask!6793 (_2!1210 lt!56499)) (extraKeys!2423 (_2!1210 lt!56499)) (zeroValue!2497 (_2!1210 lt!56499)) (minValue!2497 (_2!1210 lt!56499)) #b00000000000000000000000000000000 (defaultEntry!2626 (_2!1210 lt!56499))))))

(declare-fun lt!57425 () (_ BitVec 64))

(assert (=> b!111375 (= lt!57425 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57409 () (_ BitVec 64))

(assert (=> b!111375 (= lt!57409 (select (arr!2068 (_keys!4339 (_2!1210 lt!56499))) #b00000000000000000000000000000000))))

(declare-fun lt!57429 () Unit!3390)

(assert (=> b!111375 (= lt!57429 (addStillContains!76 lt!57412 lt!57425 (zeroValue!2497 (_2!1210 lt!56499)) lt!57409))))

(assert (=> b!111375 (contains!827 (+!139 lt!57412 (tuple2!2397 lt!57425 (zeroValue!2497 (_2!1210 lt!56499)))) lt!57409)))

(declare-fun lt!57423 () Unit!3390)

(assert (=> b!111375 (= lt!57423 lt!57429)))

(declare-fun lt!57411 () ListLongMap!1553)

(assert (=> b!111375 (= lt!57411 (getCurrentListMapNoExtraKeys!104 (_keys!4339 (_2!1210 lt!56499)) (_values!2609 (_2!1210 lt!56499)) (mask!6793 (_2!1210 lt!56499)) (extraKeys!2423 (_2!1210 lt!56499)) (zeroValue!2497 (_2!1210 lt!56499)) (minValue!2497 (_2!1210 lt!56499)) #b00000000000000000000000000000000 (defaultEntry!2626 (_2!1210 lt!56499))))))

(declare-fun lt!57422 () (_ BitVec 64))

(assert (=> b!111375 (= lt!57422 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57415 () (_ BitVec 64))

(assert (=> b!111375 (= lt!57415 (select (arr!2068 (_keys!4339 (_2!1210 lt!56499))) #b00000000000000000000000000000000))))

(declare-fun lt!57421 () Unit!3390)

(assert (=> b!111375 (= lt!57421 (addApplyDifferent!76 lt!57411 lt!57422 (minValue!2497 (_2!1210 lt!56499)) lt!57415))))

(assert (=> b!111375 (= (apply!100 (+!139 lt!57411 (tuple2!2397 lt!57422 (minValue!2497 (_2!1210 lt!56499)))) lt!57415) (apply!100 lt!57411 lt!57415))))

(declare-fun lt!57408 () Unit!3390)

(assert (=> b!111375 (= lt!57408 lt!57421)))

(declare-fun lt!57427 () ListLongMap!1553)

(assert (=> b!111375 (= lt!57427 (getCurrentListMapNoExtraKeys!104 (_keys!4339 (_2!1210 lt!56499)) (_values!2609 (_2!1210 lt!56499)) (mask!6793 (_2!1210 lt!56499)) (extraKeys!2423 (_2!1210 lt!56499)) (zeroValue!2497 (_2!1210 lt!56499)) (minValue!2497 (_2!1210 lt!56499)) #b00000000000000000000000000000000 (defaultEntry!2626 (_2!1210 lt!56499))))))

(declare-fun lt!57418 () (_ BitVec 64))

(assert (=> b!111375 (= lt!57418 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57413 () (_ BitVec 64))

(assert (=> b!111375 (= lt!57413 (select (arr!2068 (_keys!4339 (_2!1210 lt!56499))) #b00000000000000000000000000000000))))

(declare-fun lt!57419 () Unit!3390)

(assert (=> b!111375 (= lt!57419 (addApplyDifferent!76 lt!57427 lt!57418 (zeroValue!2497 (_2!1210 lt!56499)) lt!57413))))

(assert (=> b!111375 (= (apply!100 (+!139 lt!57427 (tuple2!2397 lt!57418 (zeroValue!2497 (_2!1210 lt!56499)))) lt!57413) (apply!100 lt!57427 lt!57413))))

(declare-fun lt!57428 () Unit!3390)

(assert (=> b!111375 (= lt!57428 lt!57419)))

(declare-fun lt!57416 () ListLongMap!1553)

(assert (=> b!111375 (= lt!57416 (getCurrentListMapNoExtraKeys!104 (_keys!4339 (_2!1210 lt!56499)) (_values!2609 (_2!1210 lt!56499)) (mask!6793 (_2!1210 lt!56499)) (extraKeys!2423 (_2!1210 lt!56499)) (zeroValue!2497 (_2!1210 lt!56499)) (minValue!2497 (_2!1210 lt!56499)) #b00000000000000000000000000000000 (defaultEntry!2626 (_2!1210 lt!56499))))))

(declare-fun lt!57414 () (_ BitVec 64))

(assert (=> b!111375 (= lt!57414 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57420 () (_ BitVec 64))

(assert (=> b!111375 (= lt!57420 (select (arr!2068 (_keys!4339 (_2!1210 lt!56499))) #b00000000000000000000000000000000))))

(assert (=> b!111375 (= lt!57417 (addApplyDifferent!76 lt!57416 lt!57414 (minValue!2497 (_2!1210 lt!56499)) lt!57420))))

(assert (=> b!111375 (= (apply!100 (+!139 lt!57416 (tuple2!2397 lt!57414 (minValue!2497 (_2!1210 lt!56499)))) lt!57420) (apply!100 lt!57416 lt!57420))))

(declare-fun b!111376 () Bool)

(declare-fun c!19858 () Bool)

(assert (=> b!111376 (= c!19858 (and (not (= (bvand (extraKeys!2423 (_2!1210 lt!56499)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2423 (_2!1210 lt!56499)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!111376 (= e!72392 e!72394)))

(declare-fun b!111377 () Bool)

(assert (=> b!111377 (= e!72386 (= (apply!100 lt!57424 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2497 (_2!1210 lt!56499))))))

(declare-fun b!111378 () Bool)

(assert (=> b!111378 (= e!72394 call!11880)))

(declare-fun bm!11880 () Bool)

(assert (=> bm!11880 (= call!11882 (+!139 (ite c!19856 call!11877 (ite c!19859 call!11878 call!11879)) (ite (or c!19856 c!19859) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (_2!1210 lt!56499))) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 (_2!1210 lt!56499))))))))

(assert (= (and d!31633 c!19856) b!111372))

(assert (= (and d!31633 (not c!19856)) b!111363))

(assert (= (and b!111363 c!19859) b!111373))

(assert (= (and b!111363 (not c!19859)) b!111376))

(assert (= (and b!111376 c!19858) b!111378))

(assert (= (and b!111376 (not c!19858)) b!111371))

(assert (= (or b!111378 b!111371) bm!11874))

(assert (= (or b!111373 bm!11874) bm!11875))

(assert (= (or b!111373 b!111378) bm!11876))

(assert (= (or b!111372 bm!11875) bm!11879))

(assert (= (or b!111372 bm!11876) bm!11880))

(assert (= (and d!31633 res!54990) b!111369))

(assert (= (and d!31633 c!19857) b!111375))

(assert (= (and d!31633 (not c!19857)) b!111374))

(assert (= (and d!31633 res!54988) b!111364))

(assert (= (and b!111364 res!54989) b!111358))

(assert (= (and b!111364 (not res!54993)) b!111367))

(assert (= (and b!111367 res!54987) b!111368))

(assert (= (and b!111364 res!54994) b!111370))

(assert (= (and b!111370 c!19860) b!111365))

(assert (= (and b!111370 (not c!19860)) b!111366))

(assert (= (and b!111365 res!54986) b!111377))

(assert (= (or b!111365 b!111366) bm!11878))

(assert (= (and b!111370 res!54992) b!111362))

(assert (= (and b!111362 c!19861) b!111359))

(assert (= (and b!111362 (not c!19861)) b!111361))

(assert (= (and b!111359 res!54991) b!111360))

(assert (= (or b!111359 b!111361) bm!11877))

(declare-fun b_lambda!4965 () Bool)

(assert (=> (not b_lambda!4965) (not b!111368)))

(declare-fun tb!2109 () Bool)

(declare-fun t!5771 () Bool)

(assert (=> (and b!109508 (= (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) (defaultEntry!2626 (_2!1210 lt!56499))) t!5771) tb!2109))

(declare-fun result!3537 () Bool)

(assert (=> tb!2109 (= result!3537 tp_is_empty!2695)))

(assert (=> b!111368 t!5771))

(declare-fun b_and!6837 () Bool)

(assert (= b_and!6833 (and (=> t!5771 result!3537) b_and!6837)))

(declare-fun tb!2111 () Bool)

(declare-fun t!5773 () Bool)

(assert (=> (and b!109512 (= (defaultEntry!2626 newMap!16) (defaultEntry!2626 (_2!1210 lt!56499))) t!5773) tb!2111))

(declare-fun result!3539 () Bool)

(assert (= result!3539 result!3537))

(assert (=> b!111368 t!5773))

(declare-fun b_and!6839 () Bool)

(assert (= b_and!6835 (and (=> t!5773 result!3539) b_and!6839)))

(declare-fun m!126757 () Bool)

(assert (=> b!111368 m!126757))

(assert (=> b!111368 m!126685))

(declare-fun m!126759 () Bool)

(assert (=> b!111368 m!126759))

(declare-fun m!126761 () Bool)

(assert (=> b!111368 m!126761))

(assert (=> b!111368 m!126685))

(assert (=> b!111368 m!126757))

(assert (=> b!111368 m!126761))

(declare-fun m!126763 () Bool)

(assert (=> b!111368 m!126763))

(assert (=> b!111367 m!126685))

(assert (=> b!111367 m!126685))

(declare-fun m!126765 () Bool)

(assert (=> b!111367 m!126765))

(assert (=> d!31633 m!126427))

(declare-fun m!126767 () Bool)

(assert (=> bm!11880 m!126767))

(declare-fun m!126769 () Bool)

(assert (=> b!111360 m!126769))

(declare-fun m!126771 () Bool)

(assert (=> bm!11879 m!126771))

(assert (=> b!111369 m!126685))

(assert (=> b!111369 m!126685))

(assert (=> b!111369 m!126689))

(assert (=> b!111358 m!126685))

(assert (=> b!111358 m!126685))

(assert (=> b!111358 m!126689))

(declare-fun m!126773 () Bool)

(assert (=> b!111377 m!126773))

(declare-fun m!126775 () Bool)

(assert (=> b!111375 m!126775))

(declare-fun m!126777 () Bool)

(assert (=> b!111375 m!126777))

(declare-fun m!126779 () Bool)

(assert (=> b!111375 m!126779))

(declare-fun m!126781 () Bool)

(assert (=> b!111375 m!126781))

(declare-fun m!126783 () Bool)

(assert (=> b!111375 m!126783))

(declare-fun m!126785 () Bool)

(assert (=> b!111375 m!126785))

(assert (=> b!111375 m!126775))

(declare-fun m!126787 () Bool)

(assert (=> b!111375 m!126787))

(declare-fun m!126789 () Bool)

(assert (=> b!111375 m!126789))

(assert (=> b!111375 m!126771))

(declare-fun m!126791 () Bool)

(assert (=> b!111375 m!126791))

(declare-fun m!126793 () Bool)

(assert (=> b!111375 m!126793))

(declare-fun m!126795 () Bool)

(assert (=> b!111375 m!126795))

(declare-fun m!126797 () Bool)

(assert (=> b!111375 m!126797))

(declare-fun m!126799 () Bool)

(assert (=> b!111375 m!126799))

(declare-fun m!126801 () Bool)

(assert (=> b!111375 m!126801))

(assert (=> b!111375 m!126791))

(assert (=> b!111375 m!126685))

(assert (=> b!111375 m!126779))

(declare-fun m!126803 () Bool)

(assert (=> b!111375 m!126803))

(assert (=> b!111375 m!126783))

(declare-fun m!126805 () Bool)

(assert (=> bm!11878 m!126805))

(declare-fun m!126807 () Bool)

(assert (=> b!111372 m!126807))

(declare-fun m!126809 () Bool)

(assert (=> bm!11877 m!126809))

(assert (=> d!30951 d!31633))

(declare-fun bm!11881 () Bool)

(declare-fun call!11884 () Bool)

(assert (=> bm!11881 (= call!11884 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4339 (v!2920 (underlying!363 thiss!992))) (mask!6793 (v!2920 (underlying!363 thiss!992)))))))

(declare-fun d!31635 () Bool)

(declare-fun res!54995 () Bool)

(declare-fun e!72398 () Bool)

(assert (=> d!31635 (=> res!54995 e!72398)))

(assert (=> d!31635 (= res!54995 (bvsge #b00000000000000000000000000000000 (size!2326 (_keys!4339 (v!2920 (underlying!363 thiss!992))))))))

(assert (=> d!31635 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4339 (v!2920 (underlying!363 thiss!992))) (mask!6793 (v!2920 (underlying!363 thiss!992)))) e!72398)))

(declare-fun b!111379 () Bool)

(declare-fun e!72397 () Bool)

(assert (=> b!111379 (= e!72397 call!11884)))

(declare-fun b!111380 () Bool)

(declare-fun e!72399 () Bool)

(assert (=> b!111380 (= e!72397 e!72399)))

(declare-fun lt!57431 () (_ BitVec 64))

(assert (=> b!111380 (= lt!57431 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!57430 () Unit!3390)

(assert (=> b!111380 (= lt!57430 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4339 (v!2920 (underlying!363 thiss!992))) lt!57431 #b00000000000000000000000000000000))))

(assert (=> b!111380 (arrayContainsKey!0 (_keys!4339 (v!2920 (underlying!363 thiss!992))) lt!57431 #b00000000000000000000000000000000)))

(declare-fun lt!57432 () Unit!3390)

(assert (=> b!111380 (= lt!57432 lt!57430)))

(declare-fun res!54996 () Bool)

(assert (=> b!111380 (= res!54996 (= (seekEntryOrOpen!0 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) #b00000000000000000000000000000000) (_keys!4339 (v!2920 (underlying!363 thiss!992))) (mask!6793 (v!2920 (underlying!363 thiss!992)))) (Found!264 #b00000000000000000000000000000000)))))

(assert (=> b!111380 (=> (not res!54996) (not e!72399))))

(declare-fun b!111381 () Bool)

(assert (=> b!111381 (= e!72399 call!11884)))

(declare-fun b!111382 () Bool)

(assert (=> b!111382 (= e!72398 e!72397)))

(declare-fun c!19862 () Bool)

(assert (=> b!111382 (= c!19862 (validKeyInArray!0 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (= (and d!31635 (not res!54995)) b!111382))

(assert (= (and b!111382 c!19862) b!111380))

(assert (= (and b!111382 (not c!19862)) b!111379))

(assert (= (and b!111380 res!54996) b!111381))

(assert (= (or b!111381 b!111379) bm!11881))

(declare-fun m!126811 () Bool)

(assert (=> bm!11881 m!126811))

(assert (=> b!111380 m!126667))

(declare-fun m!126813 () Bool)

(assert (=> b!111380 m!126813))

(declare-fun m!126815 () Bool)

(assert (=> b!111380 m!126815))

(assert (=> b!111380 m!126667))

(declare-fun m!126817 () Bool)

(assert (=> b!111380 m!126817))

(assert (=> b!111382 m!126667))

(assert (=> b!111382 m!126667))

(assert (=> b!111382 m!126671))

(assert (=> b!110058 d!31635))

(declare-fun d!31637 () Bool)

(declare-fun lt!57433 () Bool)

(assert (=> d!31637 (= lt!57433 (select (content!113 lt!56387) (tuple2!2397 (_1!1209 lt!56299) (_2!1209 lt!56299))))))

(declare-fun e!72400 () Bool)

(assert (=> d!31637 (= lt!57433 e!72400)))

(declare-fun res!54997 () Bool)

(assert (=> d!31637 (=> (not res!54997) (not e!72400))))

(assert (=> d!31637 (= res!54997 ((_ is Cons!1623) lt!56387))))

(assert (=> d!31637 (= (contains!829 lt!56387 (tuple2!2397 (_1!1209 lt!56299) (_2!1209 lt!56299))) lt!57433)))

(declare-fun b!111383 () Bool)

(declare-fun e!72401 () Bool)

(assert (=> b!111383 (= e!72400 e!72401)))

(declare-fun res!54998 () Bool)

(assert (=> b!111383 (=> res!54998 e!72401)))

(assert (=> b!111383 (= res!54998 (= (h!2222 lt!56387) (tuple2!2397 (_1!1209 lt!56299) (_2!1209 lt!56299))))))

(declare-fun b!111384 () Bool)

(assert (=> b!111384 (= e!72401 (contains!829 (t!5755 lt!56387) (tuple2!2397 (_1!1209 lt!56299) (_2!1209 lt!56299))))))

(assert (= (and d!31637 res!54997) b!111383))

(assert (= (and b!111383 (not res!54998)) b!111384))

(declare-fun m!126819 () Bool)

(assert (=> d!31637 m!126819))

(declare-fun m!126821 () Bool)

(assert (=> d!31637 m!126821))

(declare-fun m!126823 () Bool)

(assert (=> b!111384 m!126823))

(assert (=> b!110352 d!31637))

(declare-fun b!111387 () Bool)

(declare-fun e!72403 () Option!162)

(assert (=> b!111387 (= e!72403 (getValueByKey!156 (t!5755 (t!5755 (toList!792 lt!56392))) (_1!1209 lt!56300)))))

(declare-fun d!31639 () Bool)

(declare-fun c!19863 () Bool)

(assert (=> d!31639 (= c!19863 (and ((_ is Cons!1623) (t!5755 (toList!792 lt!56392))) (= (_1!1209 (h!2222 (t!5755 (toList!792 lt!56392)))) (_1!1209 lt!56300))))))

(declare-fun e!72402 () Option!162)

(assert (=> d!31639 (= (getValueByKey!156 (t!5755 (toList!792 lt!56392)) (_1!1209 lt!56300)) e!72402)))

(declare-fun b!111385 () Bool)

(assert (=> b!111385 (= e!72402 (Some!161 (_2!1209 (h!2222 (t!5755 (toList!792 lt!56392))))))))

(declare-fun b!111386 () Bool)

(assert (=> b!111386 (= e!72402 e!72403)))

(declare-fun c!19864 () Bool)

(assert (=> b!111386 (= c!19864 (and ((_ is Cons!1623) (t!5755 (toList!792 lt!56392))) (not (= (_1!1209 (h!2222 (t!5755 (toList!792 lt!56392)))) (_1!1209 lt!56300)))))))

(declare-fun b!111388 () Bool)

(assert (=> b!111388 (= e!72403 None!160)))

(assert (= (and d!31639 c!19863) b!111385))

(assert (= (and d!31639 (not c!19863)) b!111386))

(assert (= (and b!111386 c!19864) b!111387))

(assert (= (and b!111386 (not c!19864)) b!111388))

(declare-fun m!126825 () Bool)

(assert (=> b!111387 m!126825))

(assert (=> b!110196 d!31639))

(declare-fun lt!57434 () Bool)

(declare-fun d!31641 () Bool)

(assert (=> d!31641 (= lt!57434 (select (content!113 (toList!792 lt!56803)) (tuple2!2397 lt!56424 lt!56421)))))

(declare-fun e!72404 () Bool)

(assert (=> d!31641 (= lt!57434 e!72404)))

(declare-fun res!54999 () Bool)

(assert (=> d!31641 (=> (not res!54999) (not e!72404))))

(assert (=> d!31641 (= res!54999 ((_ is Cons!1623) (toList!792 lt!56803)))))

(assert (=> d!31641 (= (contains!829 (toList!792 lt!56803) (tuple2!2397 lt!56424 lt!56421)) lt!57434)))

(declare-fun b!111389 () Bool)

(declare-fun e!72405 () Bool)

(assert (=> b!111389 (= e!72404 e!72405)))

(declare-fun res!55000 () Bool)

(assert (=> b!111389 (=> res!55000 e!72405)))

(assert (=> b!111389 (= res!55000 (= (h!2222 (toList!792 lt!56803)) (tuple2!2397 lt!56424 lt!56421)))))

(declare-fun b!111390 () Bool)

(assert (=> b!111390 (= e!72405 (contains!829 (t!5755 (toList!792 lt!56803)) (tuple2!2397 lt!56424 lt!56421)))))

(assert (= (and d!31641 res!54999) b!111389))

(assert (= (and b!111389 (not res!55000)) b!111390))

(declare-fun m!126827 () Bool)

(assert (=> d!31641 m!126827))

(declare-fun m!126829 () Bool)

(assert (=> d!31641 m!126829))

(declare-fun m!126831 () Bool)

(assert (=> b!111390 m!126831))

(assert (=> b!110274 d!31641))

(assert (=> b!110099 d!31205))

(assert (=> d!30819 d!30791))

(declare-fun b!111407 () Bool)

(declare-fun e!72417 () Bool)

(declare-fun call!11890 () Bool)

(assert (=> b!111407 (= e!72417 (not call!11890))))

(declare-fun b!111408 () Bool)

(declare-fun e!72416 () Bool)

(declare-fun lt!57437 () SeekEntryResult!264)

(assert (=> b!111408 (= e!72416 ((_ is Undefined!264) lt!57437))))

(declare-fun bm!11886 () Bool)

(declare-fun c!19869 () Bool)

(declare-fun call!11889 () Bool)

(assert (=> bm!11886 (= call!11889 (inRange!0 (ite c!19869 (index!3206 lt!57437) (index!3209 lt!57437)) (mask!6793 newMap!16)))))

(declare-fun b!111410 () Bool)

(declare-fun e!72415 () Bool)

(assert (=> b!111410 (= e!72415 e!72416)))

(declare-fun c!19870 () Bool)

(assert (=> b!111410 (= c!19870 ((_ is MissingVacant!264) lt!57437))))

(declare-fun b!111411 () Bool)

(declare-fun res!55010 () Bool)

(declare-fun e!72414 () Bool)

(assert (=> b!111411 (=> (not res!55010) (not e!72414))))

(assert (=> b!111411 (= res!55010 (= (select (arr!2068 (_keys!4339 newMap!16)) (index!3209 lt!57437)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!111412 () Bool)

(assert (=> b!111412 (= e!72414 (not call!11890))))

(declare-fun b!111413 () Bool)

(declare-fun res!55009 () Bool)

(assert (=> b!111413 (= res!55009 (= (select (arr!2068 (_keys!4339 newMap!16)) (index!3206 lt!57437)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!111413 (=> (not res!55009) (not e!72417))))

(declare-fun bm!11887 () Bool)

(assert (=> bm!11887 (= call!11890 (arrayContainsKey!0 (_keys!4339 newMap!16) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!111414 () Bool)

(declare-fun res!55011 () Bool)

(assert (=> b!111414 (=> (not res!55011) (not e!72414))))

(assert (=> b!111414 (= res!55011 call!11889)))

(assert (=> b!111414 (= e!72416 e!72414)))

(declare-fun d!31643 () Bool)

(assert (=> d!31643 e!72415))

(assert (=> d!31643 (= c!19869 ((_ is MissingZero!264) lt!57437))))

(assert (=> d!31643 (= lt!57437 (seekEntryOrOpen!0 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (_keys!4339 newMap!16) (mask!6793 newMap!16)))))

(assert (=> d!31643 true))

(declare-fun _$34!908 () Unit!3390)

(assert (=> d!31643 (= (choose!692 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) (defaultEntry!2626 newMap!16)) _$34!908)))

(declare-fun b!111409 () Bool)

(assert (=> b!111409 (= e!72415 e!72417)))

(declare-fun res!55012 () Bool)

(assert (=> b!111409 (= res!55012 call!11889)))

(assert (=> b!111409 (=> (not res!55012) (not e!72417))))

(assert (= (and d!31643 c!19869) b!111409))

(assert (= (and d!31643 (not c!19869)) b!111410))

(assert (= (and b!111409 res!55012) b!111413))

(assert (= (and b!111413 res!55009) b!111407))

(assert (= (and b!111410 c!19870) b!111414))

(assert (= (and b!111410 (not c!19870)) b!111408))

(assert (= (and b!111414 res!55011) b!111411))

(assert (= (and b!111411 res!55010) b!111412))

(assert (= (or b!111409 b!111414) bm!11886))

(assert (= (or b!111407 b!111412) bm!11887))

(assert (=> d!31643 m!123865))

(assert (=> d!31643 m!124149))

(declare-fun m!126833 () Bool)

(assert (=> b!111413 m!126833))

(declare-fun m!126835 () Bool)

(assert (=> b!111411 m!126835))

(declare-fun m!126837 () Bool)

(assert (=> bm!11886 m!126837))

(assert (=> bm!11887 m!123865))

(assert (=> bm!11887 m!124165))

(assert (=> d!30819 d!31643))

(assert (=> d!30819 d!31081))

(assert (=> b!110326 d!31097))

(declare-fun d!31645 () Bool)

(declare-fun e!72418 () Bool)

(assert (=> d!31645 e!72418))

(declare-fun res!55013 () Bool)

(assert (=> d!31645 (=> (not res!55013) (not e!72418))))

(declare-fun lt!57439 () ListLongMap!1553)

(assert (=> d!31645 (= res!55013 (contains!827 lt!57439 (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))

(declare-fun lt!57438 () List!1627)

(assert (=> d!31645 (= lt!57439 (ListLongMap!1554 lt!57438))))

(declare-fun lt!57440 () Unit!3390)

(declare-fun lt!57441 () Unit!3390)

(assert (=> d!31645 (= lt!57440 lt!57441)))

(assert (=> d!31645 (= (getValueByKey!156 lt!57438 (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))) (Some!161 (_2!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))

(assert (=> d!31645 (= lt!57441 (lemmaContainsTupThenGetReturnValue!75 lt!57438 (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)) (_2!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))

(assert (=> d!31645 (= lt!57438 (insertStrictlySorted!78 (toList!792 (map!1281 newMap!16)) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)) (_2!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))))))

(assert (=> d!31645 (= (+!139 (map!1281 newMap!16) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)) lt!57439)))

(declare-fun b!111415 () Bool)

(declare-fun res!55014 () Bool)

(assert (=> b!111415 (=> (not res!55014) (not e!72418))))

(assert (=> b!111415 (= res!55014 (= (getValueByKey!156 (toList!792 lt!57439) (_1!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306))) (Some!161 (_2!1209 (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))))))

(declare-fun b!111416 () Bool)

(assert (=> b!111416 (= e!72418 (contains!829 (toList!792 lt!57439) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))))

(assert (= (and d!31645 res!55013) b!111415))

(assert (= (and b!111415 res!55014) b!111416))

(declare-fun m!126839 () Bool)

(assert (=> d!31645 m!126839))

(declare-fun m!126841 () Bool)

(assert (=> d!31645 m!126841))

(declare-fun m!126843 () Bool)

(assert (=> d!31645 m!126843))

(declare-fun m!126845 () Bool)

(assert (=> d!31645 m!126845))

(declare-fun m!126847 () Bool)

(assert (=> b!111415 m!126847))

(declare-fun m!126849 () Bool)

(assert (=> b!111416 m!126849))

(assert (=> b!110326 d!31645))

(assert (=> b!110326 d!30777))

(declare-fun d!31647 () Bool)

(assert (=> d!31647 (isDefined!110 (getValueByKey!156 (toList!792 lt!56403) (_1!1209 lt!56299)))))

(declare-fun lt!57442 () Unit!3390)

(assert (=> d!31647 (= lt!57442 (choose!699 (toList!792 lt!56403) (_1!1209 lt!56299)))))

(declare-fun e!72419 () Bool)

(assert (=> d!31647 e!72419))

(declare-fun res!55015 () Bool)

(assert (=> d!31647 (=> (not res!55015) (not e!72419))))

(assert (=> d!31647 (= res!55015 (isStrictlySorted!306 (toList!792 lt!56403)))))

(assert (=> d!31647 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 lt!56403) (_1!1209 lt!56299)) lt!57442)))

(declare-fun b!111417 () Bool)

(assert (=> b!111417 (= e!72419 (containsKey!160 (toList!792 lt!56403) (_1!1209 lt!56299)))))

(assert (= (and d!31647 res!55015) b!111417))

(assert (=> d!31647 m!124083))

(assert (=> d!31647 m!124083))

(assert (=> d!31647 m!124609))

(declare-fun m!126851 () Bool)

(assert (=> d!31647 m!126851))

(declare-fun m!126853 () Bool)

(assert (=> d!31647 m!126853))

(assert (=> b!111417 m!124605))

(assert (=> b!110167 d!31647))

(assert (=> b!110167 d!31559))

(assert (=> b!110167 d!30851))

(declare-fun d!31649 () Bool)

(assert (=> d!31649 (= (apply!100 (+!139 lt!56671 (tuple2!2397 lt!56682 (minValue!2497 newMap!16))) lt!56675) (apply!100 lt!56671 lt!56675))))

(declare-fun lt!57443 () Unit!3390)

(assert (=> d!31649 (= lt!57443 (choose!701 lt!56671 lt!56682 (minValue!2497 newMap!16) lt!56675))))

(declare-fun e!72420 () Bool)

(assert (=> d!31649 e!72420))

(declare-fun res!55016 () Bool)

(assert (=> d!31649 (=> (not res!55016) (not e!72420))))

(assert (=> d!31649 (= res!55016 (contains!827 lt!56671 lt!56675))))

(assert (=> d!31649 (= (addApplyDifferent!76 lt!56671 lt!56682 (minValue!2497 newMap!16) lt!56675) lt!57443)))

(declare-fun b!111418 () Bool)

(assert (=> b!111418 (= e!72420 (not (= lt!56675 lt!56682)))))

(assert (= (and d!31649 res!55016) b!111418))

(assert (=> d!31649 m!124471))

(assert (=> d!31649 m!124495))

(declare-fun m!126855 () Bool)

(assert (=> d!31649 m!126855))

(declare-fun m!126857 () Bool)

(assert (=> d!31649 m!126857))

(assert (=> d!31649 m!124473))

(assert (=> d!31649 m!124471))

(assert (=> b!110095 d!31649))

(declare-fun d!31651 () Bool)

(assert (=> d!31651 (= (apply!100 (+!139 lt!56671 (tuple2!2397 lt!56682 (minValue!2497 newMap!16))) lt!56675) (get!1350 (getValueByKey!156 (toList!792 (+!139 lt!56671 (tuple2!2397 lt!56682 (minValue!2497 newMap!16)))) lt!56675)))))

(declare-fun bs!4589 () Bool)

(assert (= bs!4589 d!31651))

(declare-fun m!126859 () Bool)

(assert (=> bs!4589 m!126859))

(assert (=> bs!4589 m!126859))

(declare-fun m!126861 () Bool)

(assert (=> bs!4589 m!126861))

(assert (=> b!110095 d!31651))

(declare-fun d!31653 () Bool)

(assert (=> d!31653 (= (apply!100 (+!139 lt!56676 (tuple2!2397 lt!56674 (minValue!2497 newMap!16))) lt!56680) (get!1350 (getValueByKey!156 (toList!792 (+!139 lt!56676 (tuple2!2397 lt!56674 (minValue!2497 newMap!16)))) lt!56680)))))

(declare-fun bs!4590 () Bool)

(assert (= bs!4590 d!31653))

(declare-fun m!126863 () Bool)

(assert (=> bs!4590 m!126863))

(assert (=> bs!4590 m!126863))

(declare-fun m!126865 () Bool)

(assert (=> bs!4590 m!126865))

(assert (=> b!110095 d!31653))

(declare-fun d!31655 () Bool)

(assert (=> d!31655 (= (apply!100 lt!56676 lt!56680) (get!1350 (getValueByKey!156 (toList!792 lt!56676) lt!56680)))))

(declare-fun bs!4591 () Bool)

(assert (= bs!4591 d!31655))

(declare-fun m!126867 () Bool)

(assert (=> bs!4591 m!126867))

(assert (=> bs!4591 m!126867))

(declare-fun m!126869 () Bool)

(assert (=> bs!4591 m!126869))

(assert (=> b!110095 d!31655))

(declare-fun d!31657 () Bool)

(assert (=> d!31657 (= (apply!100 (+!139 lt!56676 (tuple2!2397 lt!56674 (minValue!2497 newMap!16))) lt!56680) (apply!100 lt!56676 lt!56680))))

(declare-fun lt!57444 () Unit!3390)

(assert (=> d!31657 (= lt!57444 (choose!701 lt!56676 lt!56674 (minValue!2497 newMap!16) lt!56680))))

(declare-fun e!72421 () Bool)

(assert (=> d!31657 e!72421))

(declare-fun res!55017 () Bool)

(assert (=> d!31657 (=> (not res!55017) (not e!72421))))

(assert (=> d!31657 (= res!55017 (contains!827 lt!56676 lt!56680))))

(assert (=> d!31657 (= (addApplyDifferent!76 lt!56676 lt!56674 (minValue!2497 newMap!16) lt!56680) lt!57444)))

(declare-fun b!111419 () Bool)

(assert (=> b!111419 (= e!72421 (not (= lt!56680 lt!56674)))))

(assert (= (and d!31657 res!55017) b!111419))

(assert (=> d!31657 m!124467))

(assert (=> d!31657 m!124469))

(declare-fun m!126871 () Bool)

(assert (=> d!31657 m!126871))

(declare-fun m!126873 () Bool)

(assert (=> d!31657 m!126873))

(assert (=> d!31657 m!124479))

(assert (=> d!31657 m!124467))

(assert (=> b!110095 d!31657))

(declare-fun d!31659 () Bool)

(declare-fun e!72422 () Bool)

(assert (=> d!31659 e!72422))

(declare-fun res!55018 () Bool)

(assert (=> d!31659 (=> (not res!55018) (not e!72422))))

(declare-fun lt!57446 () ListLongMap!1553)

(assert (=> d!31659 (= res!55018 (contains!827 lt!57446 (_1!1209 (tuple2!2397 lt!56682 (minValue!2497 newMap!16)))))))

(declare-fun lt!57445 () List!1627)

(assert (=> d!31659 (= lt!57446 (ListLongMap!1554 lt!57445))))

(declare-fun lt!57447 () Unit!3390)

(declare-fun lt!57448 () Unit!3390)

(assert (=> d!31659 (= lt!57447 lt!57448)))

(assert (=> d!31659 (= (getValueByKey!156 lt!57445 (_1!1209 (tuple2!2397 lt!56682 (minValue!2497 newMap!16)))) (Some!161 (_2!1209 (tuple2!2397 lt!56682 (minValue!2497 newMap!16)))))))

(assert (=> d!31659 (= lt!57448 (lemmaContainsTupThenGetReturnValue!75 lt!57445 (_1!1209 (tuple2!2397 lt!56682 (minValue!2497 newMap!16))) (_2!1209 (tuple2!2397 lt!56682 (minValue!2497 newMap!16)))))))

(assert (=> d!31659 (= lt!57445 (insertStrictlySorted!78 (toList!792 lt!56671) (_1!1209 (tuple2!2397 lt!56682 (minValue!2497 newMap!16))) (_2!1209 (tuple2!2397 lt!56682 (minValue!2497 newMap!16)))))))

(assert (=> d!31659 (= (+!139 lt!56671 (tuple2!2397 lt!56682 (minValue!2497 newMap!16))) lt!57446)))

(declare-fun b!111420 () Bool)

(declare-fun res!55019 () Bool)

(assert (=> b!111420 (=> (not res!55019) (not e!72422))))

(assert (=> b!111420 (= res!55019 (= (getValueByKey!156 (toList!792 lt!57446) (_1!1209 (tuple2!2397 lt!56682 (minValue!2497 newMap!16)))) (Some!161 (_2!1209 (tuple2!2397 lt!56682 (minValue!2497 newMap!16))))))))

(declare-fun b!111421 () Bool)

(assert (=> b!111421 (= e!72422 (contains!829 (toList!792 lt!57446) (tuple2!2397 lt!56682 (minValue!2497 newMap!16))))))

(assert (= (and d!31659 res!55018) b!111420))

(assert (= (and b!111420 res!55019) b!111421))

(declare-fun m!126875 () Bool)

(assert (=> d!31659 m!126875))

(declare-fun m!126877 () Bool)

(assert (=> d!31659 m!126877))

(declare-fun m!126879 () Bool)

(assert (=> d!31659 m!126879))

(declare-fun m!126881 () Bool)

(assert (=> d!31659 m!126881))

(declare-fun m!126883 () Bool)

(assert (=> b!111420 m!126883))

(declare-fun m!126885 () Bool)

(assert (=> b!111421 m!126885))

(assert (=> b!110095 d!31659))

(declare-fun d!31661 () Bool)

(assert (=> d!31661 (contains!827 (+!139 lt!56672 (tuple2!2397 lt!56685 (zeroValue!2497 newMap!16))) lt!56669)))

(declare-fun lt!57449 () Unit!3390)

(assert (=> d!31661 (= lt!57449 (choose!700 lt!56672 lt!56685 (zeroValue!2497 newMap!16) lt!56669))))

(assert (=> d!31661 (contains!827 lt!56672 lt!56669)))

(assert (=> d!31661 (= (addStillContains!76 lt!56672 lt!56685 (zeroValue!2497 newMap!16) lt!56669) lt!57449)))

(declare-fun bs!4592 () Bool)

(assert (= bs!4592 d!31661))

(assert (=> bs!4592 m!124483))

(assert (=> bs!4592 m!124483))

(assert (=> bs!4592 m!124485))

(declare-fun m!126887 () Bool)

(assert (=> bs!4592 m!126887))

(declare-fun m!126889 () Bool)

(assert (=> bs!4592 m!126889))

(assert (=> b!110095 d!31661))

(declare-fun d!31663 () Bool)

(assert (=> d!31663 (= (apply!100 lt!56687 lt!56673) (get!1350 (getValueByKey!156 (toList!792 lt!56687) lt!56673)))))

(declare-fun bs!4593 () Bool)

(assert (= bs!4593 d!31663))

(declare-fun m!126891 () Bool)

(assert (=> bs!4593 m!126891))

(assert (=> bs!4593 m!126891))

(declare-fun m!126893 () Bool)

(assert (=> bs!4593 m!126893))

(assert (=> b!110095 d!31663))

(declare-fun d!31665 () Bool)

(declare-fun e!72423 () Bool)

(assert (=> d!31665 e!72423))

(declare-fun res!55020 () Bool)

(assert (=> d!31665 (=> (not res!55020) (not e!72423))))

(declare-fun lt!57451 () ListLongMap!1553)

(assert (=> d!31665 (= res!55020 (contains!827 lt!57451 (_1!1209 (tuple2!2397 lt!56678 (zeroValue!2497 newMap!16)))))))

(declare-fun lt!57450 () List!1627)

(assert (=> d!31665 (= lt!57451 (ListLongMap!1554 lt!57450))))

(declare-fun lt!57452 () Unit!3390)

(declare-fun lt!57453 () Unit!3390)

(assert (=> d!31665 (= lt!57452 lt!57453)))

(assert (=> d!31665 (= (getValueByKey!156 lt!57450 (_1!1209 (tuple2!2397 lt!56678 (zeroValue!2497 newMap!16)))) (Some!161 (_2!1209 (tuple2!2397 lt!56678 (zeroValue!2497 newMap!16)))))))

(assert (=> d!31665 (= lt!57453 (lemmaContainsTupThenGetReturnValue!75 lt!57450 (_1!1209 (tuple2!2397 lt!56678 (zeroValue!2497 newMap!16))) (_2!1209 (tuple2!2397 lt!56678 (zeroValue!2497 newMap!16)))))))

(assert (=> d!31665 (= lt!57450 (insertStrictlySorted!78 (toList!792 lt!56687) (_1!1209 (tuple2!2397 lt!56678 (zeroValue!2497 newMap!16))) (_2!1209 (tuple2!2397 lt!56678 (zeroValue!2497 newMap!16)))))))

(assert (=> d!31665 (= (+!139 lt!56687 (tuple2!2397 lt!56678 (zeroValue!2497 newMap!16))) lt!57451)))

(declare-fun b!111422 () Bool)

(declare-fun res!55021 () Bool)

(assert (=> b!111422 (=> (not res!55021) (not e!72423))))

(assert (=> b!111422 (= res!55021 (= (getValueByKey!156 (toList!792 lt!57451) (_1!1209 (tuple2!2397 lt!56678 (zeroValue!2497 newMap!16)))) (Some!161 (_2!1209 (tuple2!2397 lt!56678 (zeroValue!2497 newMap!16))))))))

(declare-fun b!111423 () Bool)

(assert (=> b!111423 (= e!72423 (contains!829 (toList!792 lt!57451) (tuple2!2397 lt!56678 (zeroValue!2497 newMap!16))))))

(assert (= (and d!31665 res!55020) b!111422))

(assert (= (and b!111422 res!55021) b!111423))

(declare-fun m!126895 () Bool)

(assert (=> d!31665 m!126895))

(declare-fun m!126897 () Bool)

(assert (=> d!31665 m!126897))

(declare-fun m!126899 () Bool)

(assert (=> d!31665 m!126899))

(declare-fun m!126901 () Bool)

(assert (=> d!31665 m!126901))

(declare-fun m!126903 () Bool)

(assert (=> b!111422 m!126903))

(declare-fun m!126905 () Bool)

(assert (=> b!111423 m!126905))

(assert (=> b!110095 d!31665))

(declare-fun d!31667 () Bool)

(assert (=> d!31667 (= (apply!100 lt!56671 lt!56675) (get!1350 (getValueByKey!156 (toList!792 lt!56671) lt!56675)))))

(declare-fun bs!4594 () Bool)

(assert (= bs!4594 d!31667))

(declare-fun m!126907 () Bool)

(assert (=> bs!4594 m!126907))

(assert (=> bs!4594 m!126907))

(declare-fun m!126909 () Bool)

(assert (=> bs!4594 m!126909))

(assert (=> b!110095 d!31667))

(declare-fun d!31669 () Bool)

(declare-fun e!72424 () Bool)

(assert (=> d!31669 e!72424))

(declare-fun res!55022 () Bool)

(assert (=> d!31669 (=> (not res!55022) (not e!72424))))

(declare-fun lt!57455 () ListLongMap!1553)

(assert (=> d!31669 (= res!55022 (contains!827 lt!57455 (_1!1209 (tuple2!2397 lt!56685 (zeroValue!2497 newMap!16)))))))

(declare-fun lt!57454 () List!1627)

(assert (=> d!31669 (= lt!57455 (ListLongMap!1554 lt!57454))))

(declare-fun lt!57456 () Unit!3390)

(declare-fun lt!57457 () Unit!3390)

(assert (=> d!31669 (= lt!57456 lt!57457)))

(assert (=> d!31669 (= (getValueByKey!156 lt!57454 (_1!1209 (tuple2!2397 lt!56685 (zeroValue!2497 newMap!16)))) (Some!161 (_2!1209 (tuple2!2397 lt!56685 (zeroValue!2497 newMap!16)))))))

(assert (=> d!31669 (= lt!57457 (lemmaContainsTupThenGetReturnValue!75 lt!57454 (_1!1209 (tuple2!2397 lt!56685 (zeroValue!2497 newMap!16))) (_2!1209 (tuple2!2397 lt!56685 (zeroValue!2497 newMap!16)))))))

(assert (=> d!31669 (= lt!57454 (insertStrictlySorted!78 (toList!792 lt!56672) (_1!1209 (tuple2!2397 lt!56685 (zeroValue!2497 newMap!16))) (_2!1209 (tuple2!2397 lt!56685 (zeroValue!2497 newMap!16)))))))

(assert (=> d!31669 (= (+!139 lt!56672 (tuple2!2397 lt!56685 (zeroValue!2497 newMap!16))) lt!57455)))

(declare-fun b!111424 () Bool)

(declare-fun res!55023 () Bool)

(assert (=> b!111424 (=> (not res!55023) (not e!72424))))

(assert (=> b!111424 (= res!55023 (= (getValueByKey!156 (toList!792 lt!57455) (_1!1209 (tuple2!2397 lt!56685 (zeroValue!2497 newMap!16)))) (Some!161 (_2!1209 (tuple2!2397 lt!56685 (zeroValue!2497 newMap!16))))))))

(declare-fun b!111425 () Bool)

(assert (=> b!111425 (= e!72424 (contains!829 (toList!792 lt!57455) (tuple2!2397 lt!56685 (zeroValue!2497 newMap!16))))))

(assert (= (and d!31669 res!55022) b!111424))

(assert (= (and b!111424 res!55023) b!111425))

(declare-fun m!126911 () Bool)

(assert (=> d!31669 m!126911))

(declare-fun m!126913 () Bool)

(assert (=> d!31669 m!126913))

(declare-fun m!126915 () Bool)

(assert (=> d!31669 m!126915))

(declare-fun m!126917 () Bool)

(assert (=> d!31669 m!126917))

(declare-fun m!126919 () Bool)

(assert (=> b!111424 m!126919))

(declare-fun m!126921 () Bool)

(assert (=> b!111425 m!126921))

(assert (=> b!110095 d!31669))

(declare-fun d!31671 () Bool)

(declare-fun e!72426 () Bool)

(assert (=> d!31671 e!72426))

(declare-fun res!55024 () Bool)

(assert (=> d!31671 (=> res!55024 e!72426)))

(declare-fun lt!57458 () Bool)

(assert (=> d!31671 (= res!55024 (not lt!57458))))

(declare-fun lt!57459 () Bool)

(assert (=> d!31671 (= lt!57458 lt!57459)))

(declare-fun lt!57460 () Unit!3390)

(declare-fun e!72425 () Unit!3390)

(assert (=> d!31671 (= lt!57460 e!72425)))

(declare-fun c!19871 () Bool)

(assert (=> d!31671 (= c!19871 lt!57459)))

(assert (=> d!31671 (= lt!57459 (containsKey!160 (toList!792 (+!139 lt!56672 (tuple2!2397 lt!56685 (zeroValue!2497 newMap!16)))) lt!56669))))

(assert (=> d!31671 (= (contains!827 (+!139 lt!56672 (tuple2!2397 lt!56685 (zeroValue!2497 newMap!16))) lt!56669) lt!57458)))

(declare-fun b!111426 () Bool)

(declare-fun lt!57461 () Unit!3390)

(assert (=> b!111426 (= e!72425 lt!57461)))

(assert (=> b!111426 (= lt!57461 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 (+!139 lt!56672 (tuple2!2397 lt!56685 (zeroValue!2497 newMap!16)))) lt!56669))))

(assert (=> b!111426 (isDefined!110 (getValueByKey!156 (toList!792 (+!139 lt!56672 (tuple2!2397 lt!56685 (zeroValue!2497 newMap!16)))) lt!56669))))

(declare-fun b!111427 () Bool)

(declare-fun Unit!3461 () Unit!3390)

(assert (=> b!111427 (= e!72425 Unit!3461)))

(declare-fun b!111428 () Bool)

(assert (=> b!111428 (= e!72426 (isDefined!110 (getValueByKey!156 (toList!792 (+!139 lt!56672 (tuple2!2397 lt!56685 (zeroValue!2497 newMap!16)))) lt!56669)))))

(assert (= (and d!31671 c!19871) b!111426))

(assert (= (and d!31671 (not c!19871)) b!111427))

(assert (= (and d!31671 (not res!55024)) b!111428))

(declare-fun m!126923 () Bool)

(assert (=> d!31671 m!126923))

(declare-fun m!126925 () Bool)

(assert (=> b!111426 m!126925))

(declare-fun m!126927 () Bool)

(assert (=> b!111426 m!126927))

(assert (=> b!111426 m!126927))

(declare-fun m!126929 () Bool)

(assert (=> b!111426 m!126929))

(assert (=> b!111428 m!126927))

(assert (=> b!111428 m!126927))

(assert (=> b!111428 m!126929))

(assert (=> b!110095 d!31671))

(declare-fun d!31673 () Bool)

(declare-fun e!72427 () Bool)

(assert (=> d!31673 e!72427))

(declare-fun res!55025 () Bool)

(assert (=> d!31673 (=> (not res!55025) (not e!72427))))

(declare-fun lt!57463 () ListLongMap!1553)

(assert (=> d!31673 (= res!55025 (contains!827 lt!57463 (_1!1209 (tuple2!2397 lt!56674 (minValue!2497 newMap!16)))))))

(declare-fun lt!57462 () List!1627)

(assert (=> d!31673 (= lt!57463 (ListLongMap!1554 lt!57462))))

(declare-fun lt!57464 () Unit!3390)

(declare-fun lt!57465 () Unit!3390)

(assert (=> d!31673 (= lt!57464 lt!57465)))

(assert (=> d!31673 (= (getValueByKey!156 lt!57462 (_1!1209 (tuple2!2397 lt!56674 (minValue!2497 newMap!16)))) (Some!161 (_2!1209 (tuple2!2397 lt!56674 (minValue!2497 newMap!16)))))))

(assert (=> d!31673 (= lt!57465 (lemmaContainsTupThenGetReturnValue!75 lt!57462 (_1!1209 (tuple2!2397 lt!56674 (minValue!2497 newMap!16))) (_2!1209 (tuple2!2397 lt!56674 (minValue!2497 newMap!16)))))))

(assert (=> d!31673 (= lt!57462 (insertStrictlySorted!78 (toList!792 lt!56676) (_1!1209 (tuple2!2397 lt!56674 (minValue!2497 newMap!16))) (_2!1209 (tuple2!2397 lt!56674 (minValue!2497 newMap!16)))))))

(assert (=> d!31673 (= (+!139 lt!56676 (tuple2!2397 lt!56674 (minValue!2497 newMap!16))) lt!57463)))

(declare-fun b!111429 () Bool)

(declare-fun res!55026 () Bool)

(assert (=> b!111429 (=> (not res!55026) (not e!72427))))

(assert (=> b!111429 (= res!55026 (= (getValueByKey!156 (toList!792 lt!57463) (_1!1209 (tuple2!2397 lt!56674 (minValue!2497 newMap!16)))) (Some!161 (_2!1209 (tuple2!2397 lt!56674 (minValue!2497 newMap!16))))))))

(declare-fun b!111430 () Bool)

(assert (=> b!111430 (= e!72427 (contains!829 (toList!792 lt!57463) (tuple2!2397 lt!56674 (minValue!2497 newMap!16))))))

(assert (= (and d!31673 res!55025) b!111429))

(assert (= (and b!111429 res!55026) b!111430))

(declare-fun m!126931 () Bool)

(assert (=> d!31673 m!126931))

(declare-fun m!126933 () Bool)

(assert (=> d!31673 m!126933))

(declare-fun m!126935 () Bool)

(assert (=> d!31673 m!126935))

(declare-fun m!126937 () Bool)

(assert (=> d!31673 m!126937))

(declare-fun m!126939 () Bool)

(assert (=> b!111429 m!126939))

(declare-fun m!126941 () Bool)

(assert (=> b!111430 m!126941))

(assert (=> b!110095 d!31673))

(declare-fun d!31675 () Bool)

(assert (=> d!31675 (= (apply!100 (+!139 lt!56687 (tuple2!2397 lt!56678 (zeroValue!2497 newMap!16))) lt!56673) (get!1350 (getValueByKey!156 (toList!792 (+!139 lt!56687 (tuple2!2397 lt!56678 (zeroValue!2497 newMap!16)))) lt!56673)))))

(declare-fun bs!4595 () Bool)

(assert (= bs!4595 d!31675))

(declare-fun m!126943 () Bool)

(assert (=> bs!4595 m!126943))

(assert (=> bs!4595 m!126943))

(declare-fun m!126945 () Bool)

(assert (=> bs!4595 m!126945))

(assert (=> b!110095 d!31675))

(declare-fun d!31677 () Bool)

(assert (=> d!31677 (= (apply!100 (+!139 lt!56687 (tuple2!2397 lt!56678 (zeroValue!2497 newMap!16))) lt!56673) (apply!100 lt!56687 lt!56673))))

(declare-fun lt!57466 () Unit!3390)

(assert (=> d!31677 (= lt!57466 (choose!701 lt!56687 lt!56678 (zeroValue!2497 newMap!16) lt!56673))))

(declare-fun e!72428 () Bool)

(assert (=> d!31677 e!72428))

(declare-fun res!55027 () Bool)

(assert (=> d!31677 (=> (not res!55027) (not e!72428))))

(assert (=> d!31677 (= res!55027 (contains!827 lt!56687 lt!56673))))

(assert (=> d!31677 (= (addApplyDifferent!76 lt!56687 lt!56678 (zeroValue!2497 newMap!16) lt!56673) lt!57466)))

(declare-fun b!111431 () Bool)

(assert (=> b!111431 (= e!72428 (not (= lt!56673 lt!56678)))))

(assert (= (and d!31677 res!55027) b!111431))

(assert (=> d!31677 m!124475))

(assert (=> d!31677 m!124477))

(declare-fun m!126947 () Bool)

(assert (=> d!31677 m!126947))

(declare-fun m!126949 () Bool)

(assert (=> d!31677 m!126949))

(assert (=> d!31677 m!124491))

(assert (=> d!31677 m!124475))

(assert (=> b!110095 d!31677))

(assert (=> b!110095 d!31415))

(declare-fun b!111434 () Bool)

(declare-fun e!72430 () Option!162)

(assert (=> b!111434 (= e!72430 (getValueByKey!156 (t!5755 (t!5755 (toList!792 lt!56399))) (_1!1209 lt!56300)))))

(declare-fun d!31679 () Bool)

(declare-fun c!19872 () Bool)

(assert (=> d!31679 (= c!19872 (and ((_ is Cons!1623) (t!5755 (toList!792 lt!56399))) (= (_1!1209 (h!2222 (t!5755 (toList!792 lt!56399)))) (_1!1209 lt!56300))))))

(declare-fun e!72429 () Option!162)

(assert (=> d!31679 (= (getValueByKey!156 (t!5755 (toList!792 lt!56399)) (_1!1209 lt!56300)) e!72429)))

(declare-fun b!111432 () Bool)

(assert (=> b!111432 (= e!72429 (Some!161 (_2!1209 (h!2222 (t!5755 (toList!792 lt!56399))))))))

(declare-fun b!111433 () Bool)

(assert (=> b!111433 (= e!72429 e!72430)))

(declare-fun c!19873 () Bool)

(assert (=> b!111433 (= c!19873 (and ((_ is Cons!1623) (t!5755 (toList!792 lt!56399))) (not (= (_1!1209 (h!2222 (t!5755 (toList!792 lt!56399)))) (_1!1209 lt!56300)))))))

(declare-fun b!111435 () Bool)

(assert (=> b!111435 (= e!72430 None!160)))

(assert (= (and d!31679 c!19872) b!111432))

(assert (= (and d!31679 (not c!19872)) b!111433))

(assert (= (and b!111433 c!19873) b!111434))

(assert (= (and b!111433 (not c!19873)) b!111435))

(declare-fun m!126951 () Bool)

(assert (=> b!111434 m!126951))

(assert (=> b!110153 d!31679))

(declare-fun d!31681 () Bool)

(assert (not d!31681))

(assert (=> b!110032 d!31681))

(declare-fun d!31683 () Bool)

(declare-fun c!19874 () Bool)

(assert (=> d!31683 (= c!19874 ((_ is Nil!1624) (toList!792 lt!56399)))))

(declare-fun e!72431 () (InoxSet tuple2!2396))

(assert (=> d!31683 (= (content!113 (toList!792 lt!56399)) e!72431)))

(declare-fun b!111436 () Bool)

(assert (=> b!111436 (= e!72431 ((as const (Array tuple2!2396 Bool)) false))))

(declare-fun b!111437 () Bool)

(assert (=> b!111437 (= e!72431 ((_ map or) (store ((as const (Array tuple2!2396 Bool)) false) (h!2222 (toList!792 lt!56399)) true) (content!113 (t!5755 (toList!792 lt!56399)))))))

(assert (= (and d!31683 c!19874) b!111436))

(assert (= (and d!31683 (not c!19874)) b!111437))

(declare-fun m!126953 () Bool)

(assert (=> b!111437 m!126953))

(declare-fun m!126955 () Bool)

(assert (=> b!111437 m!126955))

(assert (=> d!30921 d!31683))

(assert (=> bm!11773 d!30927))

(assert (=> b!110247 d!31041))

(assert (=> b!110247 d!30875))

(declare-fun d!31685 () Bool)

(assert (=> d!31685 (= (inRange!0 (ite c!19486 (index!3206 lt!56645) (index!3209 lt!56645)) (mask!6793 newMap!16)) (and (bvsge (ite c!19486 (index!3206 lt!56645) (index!3209 lt!56645)) #b00000000000000000000000000000000) (bvslt (ite c!19486 (index!3206 lt!56645) (index!3209 lt!56645)) (bvadd (mask!6793 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!11730 d!31685))

(declare-fun d!31687 () Bool)

(declare-fun e!72433 () Bool)

(assert (=> d!31687 e!72433))

(declare-fun res!55028 () Bool)

(assert (=> d!31687 (=> res!55028 e!72433)))

(declare-fun lt!57467 () Bool)

(assert (=> d!31687 (= res!55028 (not lt!57467))))

(declare-fun lt!57468 () Bool)

(assert (=> d!31687 (= lt!57467 lt!57468)))

(declare-fun lt!57469 () Unit!3390)

(declare-fun e!72432 () Unit!3390)

(assert (=> d!31687 (= lt!57469 e!72432)))

(declare-fun c!19875 () Bool)

(assert (=> d!31687 (= c!19875 lt!57468)))

(assert (=> d!31687 (= lt!57468 (containsKey!160 (toList!792 lt!56684) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!31687 (= (contains!827 lt!56684 #b0000000000000000000000000000000000000000000000000000000000000000) lt!57467)))

(declare-fun b!111438 () Bool)

(declare-fun lt!57470 () Unit!3390)

(assert (=> b!111438 (= e!72432 lt!57470)))

(assert (=> b!111438 (= lt!57470 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 lt!56684) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!111438 (isDefined!110 (getValueByKey!156 (toList!792 lt!56684) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!111439 () Bool)

(declare-fun Unit!3462 () Unit!3390)

(assert (=> b!111439 (= e!72432 Unit!3462)))

(declare-fun b!111440 () Bool)

(assert (=> b!111440 (= e!72433 (isDefined!110 (getValueByKey!156 (toList!792 lt!56684) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!31687 c!19875) b!111438))

(assert (= (and d!31687 (not c!19875)) b!111439))

(assert (= (and d!31687 (not res!55028)) b!111440))

(declare-fun m!126957 () Bool)

(assert (=> d!31687 m!126957))

(declare-fun m!126959 () Bool)

(assert (=> b!111438 m!126959))

(assert (=> b!111438 m!126503))

(assert (=> b!111438 m!126503))

(declare-fun m!126961 () Bool)

(assert (=> b!111438 m!126961))

(assert (=> b!111440 m!126503))

(assert (=> b!111440 m!126503))

(assert (=> b!111440 m!126961))

(assert (=> bm!11736 d!31687))

(declare-fun b!111441 () Bool)

(declare-fun e!72437 () Bool)

(assert (=> b!111441 (= e!72437 (contains!830 (ite c!19559 (Cons!1622 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000) Nil!1623) Nil!1623) (select (arr!2068 (_keys!4339 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!111442 () Bool)

(declare-fun e!72435 () Bool)

(declare-fun e!72434 () Bool)

(assert (=> b!111442 (= e!72435 e!72434)))

(declare-fun res!55029 () Bool)

(assert (=> b!111442 (=> (not res!55029) (not e!72434))))

(assert (=> b!111442 (= res!55029 (not e!72437))))

(declare-fun res!55030 () Bool)

(assert (=> b!111442 (=> (not res!55030) (not e!72437))))

(assert (=> b!111442 (= res!55030 (validKeyInArray!0 (select (arr!2068 (_keys!4339 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun bm!11888 () Bool)

(declare-fun c!19876 () Bool)

(declare-fun call!11891 () Bool)

(assert (=> bm!11888 (= call!11891 (arrayNoDuplicates!0 (_keys!4339 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!19876 (Cons!1622 (select (arr!2068 (_keys!4339 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!19559 (Cons!1622 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000) Nil!1623) Nil!1623)) (ite c!19559 (Cons!1622 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000) Nil!1623) Nil!1623))))))

(declare-fun d!31689 () Bool)

(declare-fun res!55031 () Bool)

(assert (=> d!31689 (=> res!55031 e!72435)))

(assert (=> d!31689 (= res!55031 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2326 (_keys!4339 newMap!16))))))

(assert (=> d!31689 (= (arrayNoDuplicates!0 (_keys!4339 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!19559 (Cons!1622 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000) Nil!1623) Nil!1623)) e!72435)))

(declare-fun b!111443 () Bool)

(declare-fun e!72436 () Bool)

(assert (=> b!111443 (= e!72436 call!11891)))

(declare-fun b!111444 () Bool)

(assert (=> b!111444 (= e!72436 call!11891)))

(declare-fun b!111445 () Bool)

(assert (=> b!111445 (= e!72434 e!72436)))

(assert (=> b!111445 (= c!19876 (validKeyInArray!0 (select (arr!2068 (_keys!4339 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!31689 (not res!55031)) b!111442))

(assert (= (and b!111442 res!55030) b!111441))

(assert (= (and b!111442 res!55029) b!111445))

(assert (= (and b!111445 c!19876) b!111444))

(assert (= (and b!111445 (not c!19876)) b!111443))

(assert (= (or b!111444 b!111443) bm!11888))

(assert (=> b!111441 m!125385))

(assert (=> b!111441 m!125385))

(declare-fun m!126963 () Bool)

(assert (=> b!111441 m!126963))

(assert (=> b!111442 m!125385))

(assert (=> b!111442 m!125385))

(assert (=> b!111442 m!125857))

(assert (=> bm!11888 m!125385))

(declare-fun m!126965 () Bool)

(assert (=> bm!11888 m!126965))

(assert (=> b!111445 m!125385))

(assert (=> b!111445 m!125385))

(assert (=> b!111445 m!125857))

(assert (=> bm!11776 d!31689))

(declare-fun d!31691 () Bool)

(declare-fun res!55032 () Bool)

(declare-fun e!72438 () Bool)

(assert (=> d!31691 (=> res!55032 e!72438)))

(assert (=> d!31691 (= res!55032 (and ((_ is Cons!1623) lt!56391) (= (_1!1209 (h!2222 lt!56391)) (_1!1209 lt!56300))))))

(assert (=> d!31691 (= (containsKey!160 lt!56391 (_1!1209 lt!56300)) e!72438)))

(declare-fun b!111446 () Bool)

(declare-fun e!72439 () Bool)

(assert (=> b!111446 (= e!72438 e!72439)))

(declare-fun res!55033 () Bool)

(assert (=> b!111446 (=> (not res!55033) (not e!72439))))

(assert (=> b!111446 (= res!55033 (and (or (not ((_ is Cons!1623) lt!56391)) (bvsle (_1!1209 (h!2222 lt!56391)) (_1!1209 lt!56300))) ((_ is Cons!1623) lt!56391) (bvslt (_1!1209 (h!2222 lt!56391)) (_1!1209 lt!56300))))))

(declare-fun b!111447 () Bool)

(assert (=> b!111447 (= e!72439 (containsKey!160 (t!5755 lt!56391) (_1!1209 lt!56300)))))

(assert (= (and d!31691 (not res!55032)) b!111446))

(assert (= (and b!111446 res!55033) b!111447))

(declare-fun m!126967 () Bool)

(assert (=> b!111447 m!126967))

(assert (=> b!110252 d!31691))

(declare-fun b!111450 () Bool)

(declare-fun e!72441 () Option!162)

(assert (=> b!111450 (= e!72441 (getValueByKey!156 (t!5755 (t!5755 lt!56402)) (_1!1209 lt!56299)))))

(declare-fun d!31693 () Bool)

(declare-fun c!19877 () Bool)

(assert (=> d!31693 (= c!19877 (and ((_ is Cons!1623) (t!5755 lt!56402)) (= (_1!1209 (h!2222 (t!5755 lt!56402))) (_1!1209 lt!56299))))))

(declare-fun e!72440 () Option!162)

(assert (=> d!31693 (= (getValueByKey!156 (t!5755 lt!56402) (_1!1209 lt!56299)) e!72440)))

(declare-fun b!111448 () Bool)

(assert (=> b!111448 (= e!72440 (Some!161 (_2!1209 (h!2222 (t!5755 lt!56402)))))))

(declare-fun b!111449 () Bool)

(assert (=> b!111449 (= e!72440 e!72441)))

(declare-fun c!19878 () Bool)

(assert (=> b!111449 (= c!19878 (and ((_ is Cons!1623) (t!5755 lt!56402)) (not (= (_1!1209 (h!2222 (t!5755 lt!56402))) (_1!1209 lt!56299)))))))

(declare-fun b!111451 () Bool)

(assert (=> b!111451 (= e!72441 None!160)))

(assert (= (and d!31693 c!19877) b!111448))

(assert (= (and d!31693 (not c!19877)) b!111449))

(assert (= (and b!111449 c!19878) b!111450))

(assert (= (and b!111449 (not c!19878)) b!111451))

(declare-fun m!126969 () Bool)

(assert (=> b!111450 m!126969))

(assert (=> b!110172 d!31693))

(assert (=> b!110131 d!31205))

(declare-fun bm!11889 () Bool)

(declare-fun call!11892 () Bool)

(assert (=> bm!11889 (= call!11892 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4339 (_2!1210 lt!56499)) (mask!6793 (_2!1210 lt!56499))))))

(declare-fun d!31695 () Bool)

(declare-fun res!55034 () Bool)

(declare-fun e!72443 () Bool)

(assert (=> d!31695 (=> res!55034 e!72443)))

(assert (=> d!31695 (= res!55034 (bvsge #b00000000000000000000000000000000 (size!2326 (_keys!4339 (_2!1210 lt!56499)))))))

(assert (=> d!31695 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4339 (_2!1210 lt!56499)) (mask!6793 (_2!1210 lt!56499))) e!72443)))

(declare-fun b!111452 () Bool)

(declare-fun e!72442 () Bool)

(assert (=> b!111452 (= e!72442 call!11892)))

(declare-fun b!111453 () Bool)

(declare-fun e!72444 () Bool)

(assert (=> b!111453 (= e!72442 e!72444)))

(declare-fun lt!57472 () (_ BitVec 64))

(assert (=> b!111453 (= lt!57472 (select (arr!2068 (_keys!4339 (_2!1210 lt!56499))) #b00000000000000000000000000000000))))

(declare-fun lt!57471 () Unit!3390)

(assert (=> b!111453 (= lt!57471 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4339 (_2!1210 lt!56499)) lt!57472 #b00000000000000000000000000000000))))

(assert (=> b!111453 (arrayContainsKey!0 (_keys!4339 (_2!1210 lt!56499)) lt!57472 #b00000000000000000000000000000000)))

(declare-fun lt!57473 () Unit!3390)

(assert (=> b!111453 (= lt!57473 lt!57471)))

(declare-fun res!55035 () Bool)

(assert (=> b!111453 (= res!55035 (= (seekEntryOrOpen!0 (select (arr!2068 (_keys!4339 (_2!1210 lt!56499))) #b00000000000000000000000000000000) (_keys!4339 (_2!1210 lt!56499)) (mask!6793 (_2!1210 lt!56499))) (Found!264 #b00000000000000000000000000000000)))))

(assert (=> b!111453 (=> (not res!55035) (not e!72444))))

(declare-fun b!111454 () Bool)

(assert (=> b!111454 (= e!72444 call!11892)))

(declare-fun b!111455 () Bool)

(assert (=> b!111455 (= e!72443 e!72442)))

(declare-fun c!19879 () Bool)

(assert (=> b!111455 (= c!19879 (validKeyInArray!0 (select (arr!2068 (_keys!4339 (_2!1210 lt!56499))) #b00000000000000000000000000000000)))))

(assert (= (and d!31695 (not res!55034)) b!111455))

(assert (= (and b!111455 c!19879) b!111453))

(assert (= (and b!111455 (not c!19879)) b!111452))

(assert (= (and b!111453 res!55035) b!111454))

(assert (= (or b!111454 b!111452) bm!11889))

(declare-fun m!126971 () Bool)

(assert (=> bm!11889 m!126971))

(assert (=> b!111453 m!126685))

(declare-fun m!126973 () Bool)

(assert (=> b!111453 m!126973))

(declare-fun m!126975 () Bool)

(assert (=> b!111453 m!126975))

(assert (=> b!111453 m!126685))

(declare-fun m!126977 () Bool)

(assert (=> b!111453 m!126977))

(assert (=> b!111455 m!126685))

(assert (=> b!111455 m!126685))

(assert (=> b!111455 m!126689))

(assert (=> b!110061 d!31695))

(declare-fun d!31697 () Bool)

(declare-fun res!55036 () Bool)

(declare-fun e!72445 () Bool)

(assert (=> d!31697 (=> res!55036 e!72445)))

(assert (=> d!31697 (= res!55036 (and ((_ is Cons!1623) lt!56737) (= (_1!1209 (h!2222 lt!56737)) (_1!1209 lt!56299))))))

(assert (=> d!31697 (= (containsKey!160 lt!56737 (_1!1209 lt!56299)) e!72445)))

(declare-fun b!111456 () Bool)

(declare-fun e!72446 () Bool)

(assert (=> b!111456 (= e!72445 e!72446)))

(declare-fun res!55037 () Bool)

(assert (=> b!111456 (=> (not res!55037) (not e!72446))))

(assert (=> b!111456 (= res!55037 (and (or (not ((_ is Cons!1623) lt!56737)) (bvsle (_1!1209 (h!2222 lt!56737)) (_1!1209 lt!56299))) ((_ is Cons!1623) lt!56737) (bvslt (_1!1209 (h!2222 lt!56737)) (_1!1209 lt!56299))))))

(declare-fun b!111457 () Bool)

(assert (=> b!111457 (= e!72446 (containsKey!160 (t!5755 lt!56737) (_1!1209 lt!56299)))))

(assert (= (and d!31697 (not res!55036)) b!111456))

(assert (= (and b!111456 res!55037) b!111457))

(declare-fun m!126979 () Bool)

(assert (=> b!111457 m!126979))

(assert (=> b!110180 d!31697))

(declare-fun d!31699 () Bool)

(declare-fun res!55038 () Bool)

(declare-fun e!72447 () Bool)

(assert (=> d!31699 (=> res!55038 e!72447)))

(assert (=> d!31699 (= res!55038 (and ((_ is Cons!1623) lt!56632) (= (_1!1209 (h!2222 lt!56632)) (_1!1209 lt!56300))))))

(assert (=> d!31699 (= (containsKey!160 lt!56632 (_1!1209 lt!56300)) e!72447)))

(declare-fun b!111458 () Bool)

(declare-fun e!72448 () Bool)

(assert (=> b!111458 (= e!72447 e!72448)))

(declare-fun res!55039 () Bool)

(assert (=> b!111458 (=> (not res!55039) (not e!72448))))

(assert (=> b!111458 (= res!55039 (and (or (not ((_ is Cons!1623) lt!56632)) (bvsle (_1!1209 (h!2222 lt!56632)) (_1!1209 lt!56300))) ((_ is Cons!1623) lt!56632) (bvslt (_1!1209 (h!2222 lt!56632)) (_1!1209 lt!56300))))))

(declare-fun b!111459 () Bool)

(assert (=> b!111459 (= e!72448 (containsKey!160 (t!5755 lt!56632) (_1!1209 lt!56300)))))

(assert (= (and d!31699 (not res!55038)) b!111458))

(assert (= (and b!111458 res!55039) b!111459))

(declare-fun m!126981 () Bool)

(assert (=> b!111459 m!126981))

(assert (=> b!110017 d!31699))

(declare-fun d!31701 () Bool)

(declare-fun res!55040 () Bool)

(declare-fun e!72449 () Bool)

(assert (=> d!31701 (=> res!55040 e!72449)))

(assert (=> d!31701 (= res!55040 (and ((_ is Cons!1623) lt!56398) (= (_1!1209 (h!2222 lt!56398)) (_1!1209 lt!56300))))))

(assert (=> d!31701 (= (containsKey!160 lt!56398 (_1!1209 lt!56300)) e!72449)))

(declare-fun b!111460 () Bool)

(declare-fun e!72450 () Bool)

(assert (=> b!111460 (= e!72449 e!72450)))

(declare-fun res!55041 () Bool)

(assert (=> b!111460 (=> (not res!55041) (not e!72450))))

(assert (=> b!111460 (= res!55041 (and (or (not ((_ is Cons!1623) lt!56398)) (bvsle (_1!1209 (h!2222 lt!56398)) (_1!1209 lt!56300))) ((_ is Cons!1623) lt!56398) (bvslt (_1!1209 (h!2222 lt!56398)) (_1!1209 lt!56300))))))

(declare-fun b!111461 () Bool)

(assert (=> b!111461 (= e!72450 (containsKey!160 (t!5755 lt!56398) (_1!1209 lt!56300)))))

(assert (= (and d!31701 (not res!55040)) b!111460))

(assert (= (and b!111460 res!55041) b!111461))

(declare-fun m!126983 () Bool)

(assert (=> b!111461 m!126983))

(assert (=> b!109991 d!31701))

(declare-fun d!31703 () Bool)

(assert (=> d!31703 (= (get!1350 (getValueByKey!156 (toList!792 lt!56592) lt!56578)) (v!2926 (getValueByKey!156 (toList!792 lt!56592) lt!56578)))))

(assert (=> d!30989 d!31703))

(declare-fun b!111464 () Bool)

(declare-fun e!72452 () Option!162)

(assert (=> b!111464 (= e!72452 (getValueByKey!156 (t!5755 (toList!792 lt!56592)) lt!56578))))

(declare-fun d!31705 () Bool)

(declare-fun c!19880 () Bool)

(assert (=> d!31705 (= c!19880 (and ((_ is Cons!1623) (toList!792 lt!56592)) (= (_1!1209 (h!2222 (toList!792 lt!56592))) lt!56578)))))

(declare-fun e!72451 () Option!162)

(assert (=> d!31705 (= (getValueByKey!156 (toList!792 lt!56592) lt!56578) e!72451)))

(declare-fun b!111462 () Bool)

(assert (=> b!111462 (= e!72451 (Some!161 (_2!1209 (h!2222 (toList!792 lt!56592)))))))

(declare-fun b!111463 () Bool)

(assert (=> b!111463 (= e!72451 e!72452)))

(declare-fun c!19881 () Bool)

(assert (=> b!111463 (= c!19881 (and ((_ is Cons!1623) (toList!792 lt!56592)) (not (= (_1!1209 (h!2222 (toList!792 lt!56592))) lt!56578))))))

(declare-fun b!111465 () Bool)

(assert (=> b!111465 (= e!72452 None!160)))

(assert (= (and d!31705 c!19880) b!111462))

(assert (= (and d!31705 (not c!19880)) b!111463))

(assert (= (and b!111463 c!19881) b!111464))

(assert (= (and b!111463 (not c!19881)) b!111465))

(declare-fun m!126985 () Bool)

(assert (=> b!111464 m!126985))

(assert (=> d!30989 d!31705))

(declare-fun d!31707 () Bool)

(declare-fun res!55042 () Bool)

(declare-fun e!72453 () Bool)

(assert (=> d!31707 (=> res!55042 e!72453)))

(assert (=> d!31707 (= res!55042 (and ((_ is Cons!1623) (toList!792 lt!56403)) (= (_1!1209 (h!2222 (toList!792 lt!56403))) (_1!1209 lt!56299))))))

(assert (=> d!31707 (= (containsKey!160 (toList!792 lt!56403) (_1!1209 lt!56299)) e!72453)))

(declare-fun b!111466 () Bool)

(declare-fun e!72454 () Bool)

(assert (=> b!111466 (= e!72453 e!72454)))

(declare-fun res!55043 () Bool)

(assert (=> b!111466 (=> (not res!55043) (not e!72454))))

(assert (=> b!111466 (= res!55043 (and (or (not ((_ is Cons!1623) (toList!792 lt!56403))) (bvsle (_1!1209 (h!2222 (toList!792 lt!56403))) (_1!1209 lt!56299))) ((_ is Cons!1623) (toList!792 lt!56403)) (bvslt (_1!1209 (h!2222 (toList!792 lt!56403))) (_1!1209 lt!56299))))))

(declare-fun b!111467 () Bool)

(assert (=> b!111467 (= e!72454 (containsKey!160 (t!5755 (toList!792 lt!56403)) (_1!1209 lt!56299)))))

(assert (= (and d!31707 (not res!55042)) b!111466))

(assert (= (and b!111466 res!55043) b!111467))

(declare-fun m!126987 () Bool)

(assert (=> b!111467 m!126987))

(assert (=> d!30859 d!31707))

(declare-fun d!31709 () Bool)

(declare-fun e!72456 () Bool)

(assert (=> d!31709 e!72456))

(declare-fun res!55044 () Bool)

(assert (=> d!31709 (=> res!55044 e!72456)))

(declare-fun lt!57474 () Bool)

(assert (=> d!31709 (= res!55044 (not lt!57474))))

(declare-fun lt!57475 () Bool)

(assert (=> d!31709 (= lt!57474 lt!57475)))

(declare-fun lt!57476 () Unit!3390)

(declare-fun e!72455 () Unit!3390)

(assert (=> d!31709 (= lt!57476 e!72455)))

(declare-fun c!19882 () Bool)

(assert (=> d!31709 (= c!19882 lt!57475)))

(assert (=> d!31709 (= lt!57475 (containsKey!160 (toList!792 lt!56684) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!31709 (= (contains!827 lt!56684 #b1000000000000000000000000000000000000000000000000000000000000000) lt!57474)))

(declare-fun b!111468 () Bool)

(declare-fun lt!57477 () Unit!3390)

(assert (=> b!111468 (= e!72455 lt!57477)))

(assert (=> b!111468 (= lt!57477 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 lt!56684) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!111468 (isDefined!110 (getValueByKey!156 (toList!792 lt!56684) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!111469 () Bool)

(declare-fun Unit!3463 () Unit!3390)

(assert (=> b!111469 (= e!72455 Unit!3463)))

(declare-fun b!111470 () Bool)

(assert (=> b!111470 (= e!72456 (isDefined!110 (getValueByKey!156 (toList!792 lt!56684) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!31709 c!19882) b!111468))

(assert (= (and d!31709 (not c!19882)) b!111469))

(assert (= (and d!31709 (not res!55044)) b!111470))

(declare-fun m!126989 () Bool)

(assert (=> d!31709 m!126989))

(declare-fun m!126991 () Bool)

(assert (=> b!111468 m!126991))

(assert (=> b!111468 m!126043))

(assert (=> b!111468 m!126043))

(declare-fun m!126993 () Bool)

(assert (=> b!111468 m!126993))

(assert (=> b!111470 m!126043))

(assert (=> b!111470 m!126043))

(assert (=> b!111470 m!126993))

(assert (=> bm!11735 d!31709))

(assert (=> b!110333 d!31205))

(declare-fun d!31711 () Bool)

(assert (=> d!31711 (= (get!1350 (getValueByKey!156 (toList!792 lt!56589) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!2926 (getValueByKey!156 (toList!792 lt!56589) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!30993 d!31711))

(assert (=> d!30993 d!31239))

(assert (=> b!110270 d!31091))

(assert (=> b!110270 d!31093))

(declare-fun b!111471 () Bool)

(declare-fun e!72460 () Bool)

(assert (=> b!111471 (= e!72460 (contains!830 (ite c!19522 (Cons!1622 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!19435 (Cons!1622 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) Nil!1623) Nil!1623)) (ite c!19435 (Cons!1622 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) Nil!1623) Nil!1623)) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!111472 () Bool)

(declare-fun e!72458 () Bool)

(declare-fun e!72457 () Bool)

(assert (=> b!111472 (= e!72458 e!72457)))

(declare-fun res!55045 () Bool)

(assert (=> b!111472 (=> (not res!55045) (not e!72457))))

(assert (=> b!111472 (= res!55045 (not e!72460))))

(declare-fun res!55046 () Bool)

(assert (=> b!111472 (=> (not res!55046) (not e!72460))))

(assert (=> b!111472 (= res!55046 (validKeyInArray!0 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun bm!11890 () Bool)

(declare-fun c!19883 () Bool)

(declare-fun call!11893 () Bool)

(assert (=> bm!11890 (= call!11893 (arrayNoDuplicates!0 (_keys!4339 (v!2920 (underlying!363 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!19883 (Cons!1622 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!19522 (Cons!1622 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!19435 (Cons!1622 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) Nil!1623) Nil!1623)) (ite c!19435 (Cons!1622 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) Nil!1623) Nil!1623))) (ite c!19522 (Cons!1622 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!19435 (Cons!1622 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) Nil!1623) Nil!1623)) (ite c!19435 (Cons!1622 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) Nil!1623) Nil!1623)))))))

(declare-fun d!31713 () Bool)

(declare-fun res!55047 () Bool)

(assert (=> d!31713 (=> res!55047 e!72458)))

(assert (=> d!31713 (= res!55047 (bvsge (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2326 (_keys!4339 (v!2920 (underlying!363 thiss!992))))))))

(assert (=> d!31713 (= (arrayNoDuplicates!0 (_keys!4339 (v!2920 (underlying!363 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!19522 (Cons!1622 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!19435 (Cons!1622 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) Nil!1623) Nil!1623)) (ite c!19435 (Cons!1622 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) Nil!1623) Nil!1623))) e!72458)))

(declare-fun b!111473 () Bool)

(declare-fun e!72459 () Bool)

(assert (=> b!111473 (= e!72459 call!11893)))

(declare-fun b!111474 () Bool)

(assert (=> b!111474 (= e!72459 call!11893)))

(declare-fun b!111475 () Bool)

(assert (=> b!111475 (= e!72457 e!72459)))

(assert (=> b!111475 (= c!19883 (validKeyInArray!0 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (= (and d!31713 (not res!55047)) b!111472))

(assert (= (and b!111472 res!55046) b!111471))

(assert (= (and b!111472 res!55045) b!111475))

(assert (= (and b!111475 c!19883) b!111474))

(assert (= (and b!111475 (not c!19883)) b!111473))

(assert (= (or b!111474 b!111473) bm!11890))

(declare-fun m!126995 () Bool)

(assert (=> b!111471 m!126995))

(assert (=> b!111471 m!126995))

(declare-fun m!126997 () Bool)

(assert (=> b!111471 m!126997))

(assert (=> b!111472 m!126995))

(assert (=> b!111472 m!126995))

(declare-fun m!126999 () Bool)

(assert (=> b!111472 m!126999))

(assert (=> bm!11890 m!126995))

(declare-fun m!127001 () Bool)

(assert (=> bm!11890 m!127001))

(assert (=> b!111475 m!126995))

(assert (=> b!111475 m!126995))

(assert (=> b!111475 m!126999))

(assert (=> bm!11753 d!31713))

(declare-fun d!31715 () Bool)

(declare-fun e!72462 () Bool)

(assert (=> d!31715 e!72462))

(declare-fun res!55048 () Bool)

(assert (=> d!31715 (=> res!55048 e!72462)))

(declare-fun lt!57478 () Bool)

(assert (=> d!31715 (= res!55048 (not lt!57478))))

(declare-fun lt!57479 () Bool)

(assert (=> d!31715 (= lt!57478 lt!57479)))

(declare-fun lt!57480 () Unit!3390)

(declare-fun e!72461 () Unit!3390)

(assert (=> d!31715 (= lt!57480 e!72461)))

(declare-fun c!19884 () Bool)

(assert (=> d!31715 (= c!19884 lt!57479)))

(assert (=> d!31715 (= lt!57479 (containsKey!160 (toList!792 (getCurrentListMap!469 (_keys!4339 newMap!16) lt!56515 (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16))) (select (arr!2068 (_keys!4339 newMap!16)) (index!3207 lt!56493))))))

(assert (=> d!31715 (= (contains!827 (getCurrentListMap!469 (_keys!4339 newMap!16) lt!56515 (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) (select (arr!2068 (_keys!4339 newMap!16)) (index!3207 lt!56493))) lt!57478)))

(declare-fun b!111476 () Bool)

(declare-fun lt!57481 () Unit!3390)

(assert (=> b!111476 (= e!72461 lt!57481)))

(assert (=> b!111476 (= lt!57481 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 (getCurrentListMap!469 (_keys!4339 newMap!16) lt!56515 (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16))) (select (arr!2068 (_keys!4339 newMap!16)) (index!3207 lt!56493))))))

(assert (=> b!111476 (isDefined!110 (getValueByKey!156 (toList!792 (getCurrentListMap!469 (_keys!4339 newMap!16) lt!56515 (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16))) (select (arr!2068 (_keys!4339 newMap!16)) (index!3207 lt!56493))))))

(declare-fun b!111477 () Bool)

(declare-fun Unit!3464 () Unit!3390)

(assert (=> b!111477 (= e!72461 Unit!3464)))

(declare-fun b!111478 () Bool)

(assert (=> b!111478 (= e!72462 (isDefined!110 (getValueByKey!156 (toList!792 (getCurrentListMap!469 (_keys!4339 newMap!16) lt!56515 (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16))) (select (arr!2068 (_keys!4339 newMap!16)) (index!3207 lt!56493)))))))

(assert (= (and d!31715 c!19884) b!111476))

(assert (= (and d!31715 (not c!19884)) b!111477))

(assert (= (and d!31715 (not res!55048)) b!111478))

(assert (=> d!31715 m!124141))

(declare-fun m!127003 () Bool)

(assert (=> d!31715 m!127003))

(assert (=> b!111476 m!124141))

(declare-fun m!127005 () Bool)

(assert (=> b!111476 m!127005))

(assert (=> b!111476 m!124141))

(declare-fun m!127007 () Bool)

(assert (=> b!111476 m!127007))

(assert (=> b!111476 m!127007))

(declare-fun m!127009 () Bool)

(assert (=> b!111476 m!127009))

(assert (=> b!111478 m!124141))

(assert (=> b!111478 m!127007))

(assert (=> b!111478 m!127007))

(assert (=> b!111478 m!127009))

(assert (=> b!110071 d!31715))

(declare-fun b!111479 () Bool)

(declare-fun e!72463 () Bool)

(assert (=> b!111479 (= e!72463 (validKeyInArray!0 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!111480 () Bool)

(declare-fun e!72472 () Bool)

(declare-fun e!72464 () Bool)

(assert (=> b!111480 (= e!72472 e!72464)))

(declare-fun res!55054 () Bool)

(declare-fun call!11898 () Bool)

(assert (=> b!111480 (= res!55054 call!11898)))

(assert (=> b!111480 (=> (not res!55054) (not e!72464))))

(declare-fun b!111481 () Bool)

(declare-fun lt!57498 () ListLongMap!1553)

(assert (=> b!111481 (= e!72464 (= (apply!100 lt!57498 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2497 newMap!16)))))

(declare-fun b!111482 () Bool)

(assert (=> b!111482 (= e!72472 (not call!11898))))

(declare-fun d!31717 () Bool)

(declare-fun e!72474 () Bool)

(assert (=> d!31717 e!72474))

(declare-fun res!55051 () Bool)

(assert (=> d!31717 (=> (not res!55051) (not e!72474))))

(assert (=> d!31717 (= res!55051 (or (bvsge #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))))))))

(declare-fun lt!57500 () ListLongMap!1553)

(assert (=> d!31717 (= lt!57498 lt!57500)))

(declare-fun lt!57484 () Unit!3390)

(declare-fun e!72469 () Unit!3390)

(assert (=> d!31717 (= lt!57484 e!72469)))

(declare-fun c!19886 () Bool)

(declare-fun e!72470 () Bool)

(assert (=> d!31717 (= c!19886 e!72470)))

(declare-fun res!55053 () Bool)

(assert (=> d!31717 (=> (not res!55053) (not e!72470))))

(assert (=> d!31717 (= res!55053 (bvslt #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))))))

(declare-fun e!72475 () ListLongMap!1553)

(assert (=> d!31717 (= lt!57500 e!72475)))

(declare-fun c!19885 () Bool)

(assert (=> d!31717 (= c!19885 (and (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!31717 (validMask!0 (mask!6793 newMap!16))))

(assert (=> d!31717 (= (getCurrentListMap!469 (_keys!4339 newMap!16) lt!56515 (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) lt!57498)))

(declare-fun b!111483 () Bool)

(assert (=> b!111483 (= e!72474 e!72472)))

(declare-fun c!19890 () Bool)

(assert (=> b!111483 (= c!19890 (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!111484 () Bool)

(declare-fun e!72471 () ListLongMap!1553)

(assert (=> b!111484 (= e!72475 e!72471)))

(declare-fun c!19888 () Bool)

(assert (=> b!111484 (= c!19888 (and (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11891 () Bool)

(declare-fun call!11896 () ListLongMap!1553)

(declare-fun call!11895 () ListLongMap!1553)

(assert (=> bm!11891 (= call!11896 call!11895)))

(declare-fun bm!11892 () Bool)

(declare-fun call!11894 () ListLongMap!1553)

(assert (=> bm!11892 (= call!11895 call!11894)))

(declare-fun b!111485 () Bool)

(declare-fun res!55057 () Bool)

(assert (=> b!111485 (=> (not res!55057) (not e!72474))))

(declare-fun e!72468 () Bool)

(assert (=> b!111485 (= res!55057 e!72468)))

(declare-fun res!55056 () Bool)

(assert (=> b!111485 (=> res!55056 e!72468)))

(assert (=> b!111485 (= res!55056 (not e!72463))))

(declare-fun res!55052 () Bool)

(assert (=> b!111485 (=> (not res!55052) (not e!72463))))

(assert (=> b!111485 (= res!55052 (bvslt #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))))))

(declare-fun b!111486 () Bool)

(declare-fun e!72466 () Bool)

(declare-fun e!72465 () Bool)

(assert (=> b!111486 (= e!72466 e!72465)))

(declare-fun res!55049 () Bool)

(declare-fun call!11900 () Bool)

(assert (=> b!111486 (= res!55049 call!11900)))

(assert (=> b!111486 (=> (not res!55049) (not e!72465))))

(declare-fun bm!11893 () Bool)

(declare-fun call!11897 () ListLongMap!1553)

(declare-fun call!11899 () ListLongMap!1553)

(assert (=> bm!11893 (= call!11897 call!11899)))

(declare-fun b!111487 () Bool)

(assert (=> b!111487 (= e!72466 (not call!11900))))

(declare-fun b!111488 () Bool)

(declare-fun e!72467 () Bool)

(assert (=> b!111488 (= e!72468 e!72467)))

(declare-fun res!55050 () Bool)

(assert (=> b!111488 (=> (not res!55050) (not e!72467))))

(assert (=> b!111488 (= res!55050 (contains!827 lt!57498 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!111488 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))))))

(declare-fun b!111489 () Bool)

(assert (=> b!111489 (= e!72467 (= (apply!100 lt!57498 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)) (get!1347 (select (arr!2069 lt!56515) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2626 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!111489 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2327 lt!56515)))))

(assert (=> b!111489 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))))))

(declare-fun bm!11894 () Bool)

(assert (=> bm!11894 (= call!11898 (contains!827 lt!57498 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!11895 () Bool)

(assert (=> bm!11895 (= call!11900 (contains!827 lt!57498 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!111490 () Bool)

(assert (=> b!111490 (= e!72470 (validKeyInArray!0 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!111491 () Bool)

(declare-fun res!55055 () Bool)

(assert (=> b!111491 (=> (not res!55055) (not e!72474))))

(assert (=> b!111491 (= res!55055 e!72466)))

(declare-fun c!19889 () Bool)

(assert (=> b!111491 (= c!19889 (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!11896 () Bool)

(assert (=> bm!11896 (= call!11894 (getCurrentListMapNoExtraKeys!104 (_keys!4339 newMap!16) lt!56515 (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun b!111492 () Bool)

(declare-fun e!72473 () ListLongMap!1553)

(assert (=> b!111492 (= e!72473 call!11896)))

(declare-fun b!111493 () Bool)

(assert (=> b!111493 (= e!72475 (+!139 call!11899 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16))))))

(declare-fun b!111494 () Bool)

(assert (=> b!111494 (= e!72471 call!11897)))

(declare-fun b!111495 () Bool)

(declare-fun Unit!3465 () Unit!3390)

(assert (=> b!111495 (= e!72469 Unit!3465)))

(declare-fun b!111496 () Bool)

(declare-fun lt!57491 () Unit!3390)

(assert (=> b!111496 (= e!72469 lt!57491)))

(declare-fun lt!57486 () ListLongMap!1553)

(assert (=> b!111496 (= lt!57486 (getCurrentListMapNoExtraKeys!104 (_keys!4339 newMap!16) lt!56515 (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!57499 () (_ BitVec 64))

(assert (=> b!111496 (= lt!57499 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57483 () (_ BitVec 64))

(assert (=> b!111496 (= lt!57483 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!57503 () Unit!3390)

(assert (=> b!111496 (= lt!57503 (addStillContains!76 lt!57486 lt!57499 (zeroValue!2497 newMap!16) lt!57483))))

(assert (=> b!111496 (contains!827 (+!139 lt!57486 (tuple2!2397 lt!57499 (zeroValue!2497 newMap!16))) lt!57483)))

(declare-fun lt!57497 () Unit!3390)

(assert (=> b!111496 (= lt!57497 lt!57503)))

(declare-fun lt!57485 () ListLongMap!1553)

(assert (=> b!111496 (= lt!57485 (getCurrentListMapNoExtraKeys!104 (_keys!4339 newMap!16) lt!56515 (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!57496 () (_ BitVec 64))

(assert (=> b!111496 (= lt!57496 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57489 () (_ BitVec 64))

(assert (=> b!111496 (= lt!57489 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!57495 () Unit!3390)

(assert (=> b!111496 (= lt!57495 (addApplyDifferent!76 lt!57485 lt!57496 (minValue!2497 newMap!16) lt!57489))))

(assert (=> b!111496 (= (apply!100 (+!139 lt!57485 (tuple2!2397 lt!57496 (minValue!2497 newMap!16))) lt!57489) (apply!100 lt!57485 lt!57489))))

(declare-fun lt!57482 () Unit!3390)

(assert (=> b!111496 (= lt!57482 lt!57495)))

(declare-fun lt!57501 () ListLongMap!1553)

(assert (=> b!111496 (= lt!57501 (getCurrentListMapNoExtraKeys!104 (_keys!4339 newMap!16) lt!56515 (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!57492 () (_ BitVec 64))

(assert (=> b!111496 (= lt!57492 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57487 () (_ BitVec 64))

(assert (=> b!111496 (= lt!57487 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!57493 () Unit!3390)

(assert (=> b!111496 (= lt!57493 (addApplyDifferent!76 lt!57501 lt!57492 (zeroValue!2497 newMap!16) lt!57487))))

(assert (=> b!111496 (= (apply!100 (+!139 lt!57501 (tuple2!2397 lt!57492 (zeroValue!2497 newMap!16))) lt!57487) (apply!100 lt!57501 lt!57487))))

(declare-fun lt!57502 () Unit!3390)

(assert (=> b!111496 (= lt!57502 lt!57493)))

(declare-fun lt!57490 () ListLongMap!1553)

(assert (=> b!111496 (= lt!57490 (getCurrentListMapNoExtraKeys!104 (_keys!4339 newMap!16) lt!56515 (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!57488 () (_ BitVec 64))

(assert (=> b!111496 (= lt!57488 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57494 () (_ BitVec 64))

(assert (=> b!111496 (= lt!57494 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!111496 (= lt!57491 (addApplyDifferent!76 lt!57490 lt!57488 (minValue!2497 newMap!16) lt!57494))))

(assert (=> b!111496 (= (apply!100 (+!139 lt!57490 (tuple2!2397 lt!57488 (minValue!2497 newMap!16))) lt!57494) (apply!100 lt!57490 lt!57494))))

(declare-fun b!111497 () Bool)

(declare-fun c!19887 () Bool)

(assert (=> b!111497 (= c!19887 (and (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!111497 (= e!72471 e!72473)))

(declare-fun b!111498 () Bool)

(assert (=> b!111498 (= e!72465 (= (apply!100 lt!57498 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2497 newMap!16)))))

(declare-fun b!111499 () Bool)

(assert (=> b!111499 (= e!72473 call!11897)))

(declare-fun bm!11897 () Bool)

(assert (=> bm!11897 (= call!11899 (+!139 (ite c!19885 call!11894 (ite c!19888 call!11895 call!11896)) (ite (or c!19885 c!19888) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 newMap!16)) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16)))))))

(assert (= (and d!31717 c!19885) b!111493))

(assert (= (and d!31717 (not c!19885)) b!111484))

(assert (= (and b!111484 c!19888) b!111494))

(assert (= (and b!111484 (not c!19888)) b!111497))

(assert (= (and b!111497 c!19887) b!111499))

(assert (= (and b!111497 (not c!19887)) b!111492))

(assert (= (or b!111499 b!111492) bm!11891))

(assert (= (or b!111494 bm!11891) bm!11892))

(assert (= (or b!111494 b!111499) bm!11893))

(assert (= (or b!111493 bm!11892) bm!11896))

(assert (= (or b!111493 bm!11893) bm!11897))

(assert (= (and d!31717 res!55053) b!111490))

(assert (= (and d!31717 c!19886) b!111496))

(assert (= (and d!31717 (not c!19886)) b!111495))

(assert (= (and d!31717 res!55051) b!111485))

(assert (= (and b!111485 res!55052) b!111479))

(assert (= (and b!111485 (not res!55056)) b!111488))

(assert (= (and b!111488 res!55050) b!111489))

(assert (= (and b!111485 res!55057) b!111491))

(assert (= (and b!111491 c!19889) b!111486))

(assert (= (and b!111491 (not c!19889)) b!111487))

(assert (= (and b!111486 res!55049) b!111498))

(assert (= (or b!111486 b!111487) bm!11895))

(assert (= (and b!111491 res!55055) b!111483))

(assert (= (and b!111483 c!19890) b!111480))

(assert (= (and b!111483 (not c!19890)) b!111482))

(assert (= (and b!111480 res!55054) b!111481))

(assert (= (or b!111480 b!111482) bm!11894))

(declare-fun b_lambda!4967 () Bool)

(assert (=> (not b_lambda!4967) (not b!111489)))

(assert (=> b!111489 t!5766))

(declare-fun b_and!6841 () Bool)

(assert (= b_and!6837 (and (=> t!5766 result!3533) b_and!6841)))

(assert (=> b!111489 t!5768))

(declare-fun b_and!6843 () Bool)

(assert (= b_and!6839 (and (=> t!5768 result!3535) b_and!6843)))

(declare-fun m!127011 () Bool)

(assert (=> b!111489 m!127011))

(assert (=> b!111489 m!124447))

(declare-fun m!127013 () Bool)

(assert (=> b!111489 m!127013))

(assert (=> b!111489 m!124451))

(assert (=> b!111489 m!124447))

(assert (=> b!111489 m!127011))

(assert (=> b!111489 m!124451))

(declare-fun m!127015 () Bool)

(assert (=> b!111489 m!127015))

(assert (=> b!111488 m!124447))

(assert (=> b!111488 m!124447))

(declare-fun m!127017 () Bool)

(assert (=> b!111488 m!127017))

(assert (=> d!31717 m!124269))

(declare-fun m!127019 () Bool)

(assert (=> bm!11897 m!127019))

(declare-fun m!127021 () Bool)

(assert (=> b!111481 m!127021))

(declare-fun m!127023 () Bool)

(assert (=> bm!11896 m!127023))

(assert (=> b!111490 m!124447))

(assert (=> b!111490 m!124447))

(assert (=> b!111490 m!124463))

(assert (=> b!111479 m!124447))

(assert (=> b!111479 m!124447))

(assert (=> b!111479 m!124463))

(declare-fun m!127025 () Bool)

(assert (=> b!111498 m!127025))

(declare-fun m!127027 () Bool)

(assert (=> b!111496 m!127027))

(declare-fun m!127029 () Bool)

(assert (=> b!111496 m!127029))

(declare-fun m!127031 () Bool)

(assert (=> b!111496 m!127031))

(declare-fun m!127033 () Bool)

(assert (=> b!111496 m!127033))

(declare-fun m!127035 () Bool)

(assert (=> b!111496 m!127035))

(declare-fun m!127037 () Bool)

(assert (=> b!111496 m!127037))

(assert (=> b!111496 m!127027))

(declare-fun m!127039 () Bool)

(assert (=> b!111496 m!127039))

(declare-fun m!127041 () Bool)

(assert (=> b!111496 m!127041))

(assert (=> b!111496 m!127023))

(declare-fun m!127043 () Bool)

(assert (=> b!111496 m!127043))

(declare-fun m!127045 () Bool)

(assert (=> b!111496 m!127045))

(declare-fun m!127047 () Bool)

(assert (=> b!111496 m!127047))

(declare-fun m!127049 () Bool)

(assert (=> b!111496 m!127049))

(declare-fun m!127051 () Bool)

(assert (=> b!111496 m!127051))

(declare-fun m!127053 () Bool)

(assert (=> b!111496 m!127053))

(assert (=> b!111496 m!127043))

(assert (=> b!111496 m!124447))

(assert (=> b!111496 m!127031))

(declare-fun m!127055 () Bool)

(assert (=> b!111496 m!127055))

(assert (=> b!111496 m!127035))

(declare-fun m!127057 () Bool)

(assert (=> bm!11895 m!127057))

(declare-fun m!127059 () Bool)

(assert (=> b!111493 m!127059))

(declare-fun m!127061 () Bool)

(assert (=> bm!11894 m!127061))

(assert (=> b!110071 d!31717))

(declare-fun d!31719 () Bool)

(assert (=> d!31719 (= (apply!100 lt!56706 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1350 (getValueByKey!156 (toList!792 lt!56706) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4596 () Bool)

(assert (= bs!4596 d!31719))

(assert (=> bs!4596 m!125483))

(assert (=> bs!4596 m!125483))

(declare-fun m!127063 () Bool)

(assert (=> bs!4596 m!127063))

(assert (=> b!110118 d!31719))

(declare-fun d!31721 () Bool)

(declare-fun e!72476 () Bool)

(assert (=> d!31721 e!72476))

(declare-fun res!55058 () Bool)

(assert (=> d!31721 (=> (not res!55058) (not e!72476))))

(declare-fun lt!57505 () ListLongMap!1553)

(assert (=> d!31721 (= res!55058 (contains!827 lt!57505 (_1!1209 (ite (or c!19529 c!19532) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 newMap!16)) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16))))))))

(declare-fun lt!57504 () List!1627)

(assert (=> d!31721 (= lt!57505 (ListLongMap!1554 lt!57504))))

(declare-fun lt!57506 () Unit!3390)

(declare-fun lt!57507 () Unit!3390)

(assert (=> d!31721 (= lt!57506 lt!57507)))

(assert (=> d!31721 (= (getValueByKey!156 lt!57504 (_1!1209 (ite (or c!19529 c!19532) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 newMap!16)) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16))))) (Some!161 (_2!1209 (ite (or c!19529 c!19532) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 newMap!16)) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16))))))))

(assert (=> d!31721 (= lt!57507 (lemmaContainsTupThenGetReturnValue!75 lt!57504 (_1!1209 (ite (or c!19529 c!19532) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 newMap!16)) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16)))) (_2!1209 (ite (or c!19529 c!19532) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 newMap!16)) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16))))))))

(assert (=> d!31721 (= lt!57504 (insertStrictlySorted!78 (toList!792 (ite c!19529 call!11757 (ite c!19532 call!11758 call!11759))) (_1!1209 (ite (or c!19529 c!19532) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 newMap!16)) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16)))) (_2!1209 (ite (or c!19529 c!19532) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 newMap!16)) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16))))))))

(assert (=> d!31721 (= (+!139 (ite c!19529 call!11757 (ite c!19532 call!11758 call!11759)) (ite (or c!19529 c!19532) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 newMap!16)) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16)))) lt!57505)))

(declare-fun b!111500 () Bool)

(declare-fun res!55059 () Bool)

(assert (=> b!111500 (=> (not res!55059) (not e!72476))))

(assert (=> b!111500 (= res!55059 (= (getValueByKey!156 (toList!792 lt!57505) (_1!1209 (ite (or c!19529 c!19532) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 newMap!16)) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16))))) (Some!161 (_2!1209 (ite (or c!19529 c!19532) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 newMap!16)) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16)))))))))

(declare-fun b!111501 () Bool)

(assert (=> b!111501 (= e!72476 (contains!829 (toList!792 lt!57505) (ite (or c!19529 c!19532) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 newMap!16)) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16)))))))

(assert (= (and d!31721 res!55058) b!111500))

(assert (= (and b!111500 res!55059) b!111501))

(declare-fun m!127065 () Bool)

(assert (=> d!31721 m!127065))

(declare-fun m!127067 () Bool)

(assert (=> d!31721 m!127067))

(declare-fun m!127069 () Bool)

(assert (=> d!31721 m!127069))

(declare-fun m!127071 () Bool)

(assert (=> d!31721 m!127071))

(declare-fun m!127073 () Bool)

(assert (=> b!111500 m!127073))

(declare-fun m!127075 () Bool)

(assert (=> b!111501 m!127075))

(assert (=> bm!11760 d!31721))

(declare-fun bm!11898 () Bool)

(declare-fun call!11901 () (_ BitVec 32))

(assert (=> bm!11898 (= call!11901 (arrayCountValidKeys!0 (_keys!4339 (v!2920 (underlying!363 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2326 (_keys!4339 (v!2920 (underlying!363 thiss!992))))))))

(declare-fun b!111502 () Bool)

(declare-fun e!72477 () (_ BitVec 32))

(assert (=> b!111502 (= e!72477 call!11901)))

(declare-fun b!111503 () Bool)

(assert (=> b!111503 (= e!72477 (bvadd #b00000000000000000000000000000001 call!11901))))

(declare-fun b!111504 () Bool)

(declare-fun e!72478 () (_ BitVec 32))

(assert (=> b!111504 (= e!72478 #b00000000000000000000000000000000)))

(declare-fun d!31723 () Bool)

(declare-fun lt!57508 () (_ BitVec 32))

(assert (=> d!31723 (and (bvsge lt!57508 #b00000000000000000000000000000000) (bvsle lt!57508 (bvsub (size!2326 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (=> d!31723 (= lt!57508 e!72478)))

(declare-fun c!19892 () Bool)

(assert (=> d!31723 (= c!19892 (bvsge #b00000000000000000000000000000000 (size!2326 (_keys!4339 (v!2920 (underlying!363 thiss!992))))))))

(assert (=> d!31723 (and (bvsle #b00000000000000000000000000000000 (size!2326 (_keys!4339 (v!2920 (underlying!363 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2326 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (size!2326 (_keys!4339 (v!2920 (underlying!363 thiss!992))))))))

(assert (=> d!31723 (= (arrayCountValidKeys!0 (_keys!4339 (v!2920 (underlying!363 thiss!992))) #b00000000000000000000000000000000 (size!2326 (_keys!4339 (v!2920 (underlying!363 thiss!992))))) lt!57508)))

(declare-fun b!111505 () Bool)

(assert (=> b!111505 (= e!72478 e!72477)))

(declare-fun c!19891 () Bool)

(assert (=> b!111505 (= c!19891 (validKeyInArray!0 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (= (and d!31723 c!19892) b!111504))

(assert (= (and d!31723 (not c!19892)) b!111505))

(assert (= (and b!111505 c!19891) b!111503))

(assert (= (and b!111505 (not c!19891)) b!111502))

(assert (= (or b!111503 b!111502) bm!11898))

(declare-fun m!127077 () Bool)

(assert (=> bm!11898 m!127077))

(assert (=> b!111505 m!126667))

(assert (=> b!111505 m!126667))

(assert (=> b!111505 m!126671))

(assert (=> b!110057 d!31723))

(declare-fun d!31725 () Bool)

(declare-fun lt!57509 () Bool)

(assert (=> d!31725 (= lt!57509 (select (content!113 (toList!792 lt!56605)) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))))

(declare-fun e!72479 () Bool)

(assert (=> d!31725 (= lt!57509 e!72479)))

(declare-fun res!55060 () Bool)

(assert (=> d!31725 (=> (not res!55060) (not e!72479))))

(assert (=> d!31725 (= res!55060 ((_ is Cons!1623) (toList!792 lt!56605)))))

(assert (=> d!31725 (= (contains!829 (toList!792 lt!56605) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))) lt!57509)))

(declare-fun b!111506 () Bool)

(declare-fun e!72480 () Bool)

(assert (=> b!111506 (= e!72479 e!72480)))

(declare-fun res!55061 () Bool)

(assert (=> b!111506 (=> res!55061 e!72480)))

(assert (=> b!111506 (= res!55061 (= (h!2222 (toList!792 lt!56605)) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))))

(declare-fun b!111507 () Bool)

(assert (=> b!111507 (= e!72480 (contains!829 (t!5755 (toList!792 lt!56605)) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 (v!2920 (underlying!363 thiss!992))))))))

(assert (= (and d!31725 res!55060) b!111506))

(assert (= (and b!111506 (not res!55061)) b!111507))

(declare-fun m!127079 () Bool)

(assert (=> d!31725 m!127079))

(declare-fun m!127081 () Bool)

(assert (=> d!31725 m!127081))

(declare-fun m!127083 () Bool)

(assert (=> b!111507 m!127083))

(assert (=> b!109959 d!31725))

(declare-fun d!31727 () Bool)

(declare-fun res!55062 () Bool)

(declare-fun e!72481 () Bool)

(assert (=> d!31727 (=> res!55062 e!72481)))

(assert (=> d!31727 (= res!55062 (and ((_ is Cons!1623) lt!56387) (= (_1!1209 (h!2222 lt!56387)) (_1!1209 lt!56299))))))

(assert (=> d!31727 (= (containsKey!160 lt!56387 (_1!1209 lt!56299)) e!72481)))

(declare-fun b!111508 () Bool)

(declare-fun e!72482 () Bool)

(assert (=> b!111508 (= e!72481 e!72482)))

(declare-fun res!55063 () Bool)

(assert (=> b!111508 (=> (not res!55063) (not e!72482))))

(assert (=> b!111508 (= res!55063 (and (or (not ((_ is Cons!1623) lt!56387)) (bvsle (_1!1209 (h!2222 lt!56387)) (_1!1209 lt!56299))) ((_ is Cons!1623) lt!56387) (bvslt (_1!1209 (h!2222 lt!56387)) (_1!1209 lt!56299))))))

(declare-fun b!111509 () Bool)

(assert (=> b!111509 (= e!72482 (containsKey!160 (t!5755 lt!56387) (_1!1209 lt!56299)))))

(assert (= (and d!31727 (not res!55062)) b!111508))

(assert (= (and b!111508 res!55063) b!111509))

(declare-fun m!127085 () Bool)

(assert (=> b!111509 m!127085))

(assert (=> b!110351 d!31727))

(declare-fun d!31729 () Bool)

(assert (=> d!31729 (= ($colon$colon!82 e!71568 (ite c!19480 (h!2222 (toList!792 (+!139 lt!56303 lt!56299))) (tuple2!2397 (_1!1209 lt!56300) (_2!1209 lt!56300)))) (Cons!1623 (ite c!19480 (h!2222 (toList!792 (+!139 lt!56303 lt!56299))) (tuple2!2397 (_1!1209 lt!56300) (_2!1209 lt!56300))) e!71568))))

(assert (=> bm!11725 d!31729))

(declare-fun b!111512 () Bool)

(declare-fun e!72484 () Option!162)

(assert (=> b!111512 (= e!72484 (getValueByKey!156 (t!5755 (toList!792 lt!56803)) (_1!1209 (tuple2!2397 lt!56424 lt!56421))))))

(declare-fun d!31731 () Bool)

(declare-fun c!19893 () Bool)

(assert (=> d!31731 (= c!19893 (and ((_ is Cons!1623) (toList!792 lt!56803)) (= (_1!1209 (h!2222 (toList!792 lt!56803))) (_1!1209 (tuple2!2397 lt!56424 lt!56421)))))))

(declare-fun e!72483 () Option!162)

(assert (=> d!31731 (= (getValueByKey!156 (toList!792 lt!56803) (_1!1209 (tuple2!2397 lt!56424 lt!56421))) e!72483)))

(declare-fun b!111510 () Bool)

(assert (=> b!111510 (= e!72483 (Some!161 (_2!1209 (h!2222 (toList!792 lt!56803)))))))

(declare-fun b!111511 () Bool)

(assert (=> b!111511 (= e!72483 e!72484)))

(declare-fun c!19894 () Bool)

(assert (=> b!111511 (= c!19894 (and ((_ is Cons!1623) (toList!792 lt!56803)) (not (= (_1!1209 (h!2222 (toList!792 lt!56803))) (_1!1209 (tuple2!2397 lt!56424 lt!56421))))))))

(declare-fun b!111513 () Bool)

(assert (=> b!111513 (= e!72484 None!160)))

(assert (= (and d!31731 c!19893) b!111510))

(assert (= (and d!31731 (not c!19893)) b!111511))

(assert (= (and b!111511 c!19894) b!111512))

(assert (= (and b!111511 (not c!19894)) b!111513))

(declare-fun m!127087 () Bool)

(assert (=> b!111512 m!127087))

(assert (=> b!110273 d!31731))

(declare-fun d!31733 () Bool)

(declare-fun lt!57510 () Bool)

(assert (=> d!31733 (= lt!57510 (select (content!113 (t!5755 (toList!792 lt!56399))) lt!56300))))

(declare-fun e!72485 () Bool)

(assert (=> d!31733 (= lt!57510 e!72485)))

(declare-fun res!55064 () Bool)

(assert (=> d!31733 (=> (not res!55064) (not e!72485))))

(assert (=> d!31733 (= res!55064 ((_ is Cons!1623) (t!5755 (toList!792 lt!56399))))))

(assert (=> d!31733 (= (contains!829 (t!5755 (toList!792 lt!56399)) lt!56300) lt!57510)))

(declare-fun b!111514 () Bool)

(declare-fun e!72486 () Bool)

(assert (=> b!111514 (= e!72485 e!72486)))

(declare-fun res!55065 () Bool)

(assert (=> b!111514 (=> res!55065 e!72486)))

(assert (=> b!111514 (= res!55065 (= (h!2222 (t!5755 (toList!792 lt!56399))) lt!56300))))

(declare-fun b!111515 () Bool)

(assert (=> b!111515 (= e!72486 (contains!829 (t!5755 (t!5755 (toList!792 lt!56399))) lt!56300))))

(assert (= (and d!31733 res!55064) b!111514))

(assert (= (and b!111514 (not res!55065)) b!111515))

(assert (=> d!31733 m!126955))

(declare-fun m!127089 () Bool)

(assert (=> d!31733 m!127089))

(declare-fun m!127091 () Bool)

(assert (=> b!111515 m!127091))

(assert (=> b!110280 d!31733))

(declare-fun bm!11899 () Bool)

(declare-fun call!11902 () (_ BitVec 32))

(assert (=> bm!11899 (= call!11902 (arrayCountValidKeys!0 (_keys!4339 (_2!1210 lt!56499)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2326 (_keys!4339 (_2!1210 lt!56499)))))))

(declare-fun b!111516 () Bool)

(declare-fun e!72487 () (_ BitVec 32))

(assert (=> b!111516 (= e!72487 call!11902)))

(declare-fun b!111517 () Bool)

(assert (=> b!111517 (= e!72487 (bvadd #b00000000000000000000000000000001 call!11902))))

(declare-fun b!111518 () Bool)

(declare-fun e!72488 () (_ BitVec 32))

(assert (=> b!111518 (= e!72488 #b00000000000000000000000000000000)))

(declare-fun d!31735 () Bool)

(declare-fun lt!57511 () (_ BitVec 32))

(assert (=> d!31735 (and (bvsge lt!57511 #b00000000000000000000000000000000) (bvsle lt!57511 (bvsub (size!2326 (_keys!4339 (_2!1210 lt!56499))) #b00000000000000000000000000000000)))))

(assert (=> d!31735 (= lt!57511 e!72488)))

(declare-fun c!19896 () Bool)

(assert (=> d!31735 (= c!19896 (bvsge #b00000000000000000000000000000000 (size!2326 (_keys!4339 (_2!1210 lt!56499)))))))

(assert (=> d!31735 (and (bvsle #b00000000000000000000000000000000 (size!2326 (_keys!4339 (_2!1210 lt!56499)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2326 (_keys!4339 (_2!1210 lt!56499))) (size!2326 (_keys!4339 (_2!1210 lt!56499)))))))

(assert (=> d!31735 (= (arrayCountValidKeys!0 (_keys!4339 (_2!1210 lt!56499)) #b00000000000000000000000000000000 (size!2326 (_keys!4339 (_2!1210 lt!56499)))) lt!57511)))

(declare-fun b!111519 () Bool)

(assert (=> b!111519 (= e!72488 e!72487)))

(declare-fun c!19895 () Bool)

(assert (=> b!111519 (= c!19895 (validKeyInArray!0 (select (arr!2068 (_keys!4339 (_2!1210 lt!56499))) #b00000000000000000000000000000000)))))

(assert (= (and d!31735 c!19896) b!111518))

(assert (= (and d!31735 (not c!19896)) b!111519))

(assert (= (and b!111519 c!19895) b!111517))

(assert (= (and b!111519 (not c!19895)) b!111516))

(assert (= (or b!111517 b!111516) bm!11899))

(declare-fun m!127093 () Bool)

(assert (=> bm!11899 m!127093))

(assert (=> b!111519 m!126685))

(assert (=> b!111519 m!126685))

(assert (=> b!111519 m!126689))

(assert (=> b!110060 d!31735))

(declare-fun d!31737 () Bool)

(assert (=> d!31737 (isDefined!110 (getValueByKey!156 (toList!792 call!11694) (select (arr!2068 (_keys!4339 newMap!16)) (index!3207 lt!56493))))))

(declare-fun lt!57512 () Unit!3390)

(assert (=> d!31737 (= lt!57512 (choose!699 (toList!792 call!11694) (select (arr!2068 (_keys!4339 newMap!16)) (index!3207 lt!56493))))))

(declare-fun e!72489 () Bool)

(assert (=> d!31737 e!72489))

(declare-fun res!55066 () Bool)

(assert (=> d!31737 (=> (not res!55066) (not e!72489))))

(assert (=> d!31737 (= res!55066 (isStrictlySorted!306 (toList!792 call!11694)))))

(assert (=> d!31737 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 call!11694) (select (arr!2068 (_keys!4339 newMap!16)) (index!3207 lt!56493))) lt!57512)))

(declare-fun b!111520 () Bool)

(assert (=> b!111520 (= e!72489 (containsKey!160 (toList!792 call!11694) (select (arr!2068 (_keys!4339 newMap!16)) (index!3207 lt!56493))))))

(assert (= (and d!31737 res!55066) b!111520))

(assert (=> d!31737 m!124141))

(assert (=> d!31737 m!124421))

(assert (=> d!31737 m!124421))

(assert (=> d!31737 m!124423))

(assert (=> d!31737 m!124141))

(declare-fun m!127095 () Bool)

(assert (=> d!31737 m!127095))

(declare-fun m!127097 () Bool)

(assert (=> d!31737 m!127097))

(assert (=> b!111520 m!124141))

(assert (=> b!111520 m!124417))

(assert (=> b!110066 d!31737))

(assert (=> b!110066 d!31605))

(assert (=> b!110066 d!31607))

(declare-fun d!31739 () Bool)

(declare-fun lt!57513 () Bool)

(assert (=> d!31739 (= lt!57513 (select (content!113 (toList!792 lt!56613)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))))

(declare-fun e!72490 () Bool)

(assert (=> d!31739 (= lt!57513 e!72490)))

(declare-fun res!55067 () Bool)

(assert (=> d!31739 (=> (not res!55067) (not e!72490))))

(assert (=> d!31739 (= res!55067 ((_ is Cons!1623) (toList!792 lt!56613)))))

(assert (=> d!31739 (= (contains!829 (toList!792 lt!56613) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)) lt!57513)))

(declare-fun b!111521 () Bool)

(declare-fun e!72491 () Bool)

(assert (=> b!111521 (= e!72490 e!72491)))

(declare-fun res!55068 () Bool)

(assert (=> b!111521 (=> res!55068 e!72491)))

(assert (=> b!111521 (= res!55068 (= (h!2222 (toList!792 lt!56613)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))))

(declare-fun b!111522 () Bool)

(assert (=> b!111522 (= e!72491 (contains!829 (t!5755 (toList!792 lt!56613)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)))))

(assert (= (and d!31739 res!55067) b!111521))

(assert (= (and b!111521 (not res!55068)) b!111522))

(declare-fun m!127099 () Bool)

(assert (=> d!31739 m!127099))

(declare-fun m!127101 () Bool)

(assert (=> d!31739 m!127101))

(declare-fun m!127103 () Bool)

(assert (=> b!111522 m!127103))

(assert (=> b!109963 d!31739))

(declare-fun d!31741 () Bool)

(declare-fun e!72493 () Bool)

(assert (=> d!31741 e!72493))

(declare-fun res!55069 () Bool)

(assert (=> d!31741 (=> res!55069 e!72493)))

(declare-fun lt!57514 () Bool)

(assert (=> d!31741 (= res!55069 (not lt!57514))))

(declare-fun lt!57515 () Bool)

(assert (=> d!31741 (= lt!57514 lt!57515)))

(declare-fun lt!57516 () Unit!3390)

(declare-fun e!72492 () Unit!3390)

(assert (=> d!31741 (= lt!57516 e!72492)))

(declare-fun c!19897 () Bool)

(assert (=> d!31741 (= c!19897 lt!57515)))

(assert (=> d!31741 (= lt!57515 (containsKey!160 (toList!792 lt!56803) (_1!1209 (tuple2!2397 lt!56424 lt!56421))))))

(assert (=> d!31741 (= (contains!827 lt!56803 (_1!1209 (tuple2!2397 lt!56424 lt!56421))) lt!57514)))

(declare-fun b!111523 () Bool)

(declare-fun lt!57517 () Unit!3390)

(assert (=> b!111523 (= e!72492 lt!57517)))

(assert (=> b!111523 (= lt!57517 (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 lt!56803) (_1!1209 (tuple2!2397 lt!56424 lt!56421))))))

(assert (=> b!111523 (isDefined!110 (getValueByKey!156 (toList!792 lt!56803) (_1!1209 (tuple2!2397 lt!56424 lt!56421))))))

(declare-fun b!111524 () Bool)

(declare-fun Unit!3466 () Unit!3390)

(assert (=> b!111524 (= e!72492 Unit!3466)))

(declare-fun b!111525 () Bool)

(assert (=> b!111525 (= e!72493 (isDefined!110 (getValueByKey!156 (toList!792 lt!56803) (_1!1209 (tuple2!2397 lt!56424 lt!56421)))))))

(assert (= (and d!31741 c!19897) b!111523))

(assert (= (and d!31741 (not c!19897)) b!111524))

(assert (= (and d!31741 (not res!55069)) b!111525))

(declare-fun m!127105 () Bool)

(assert (=> d!31741 m!127105))

(declare-fun m!127107 () Bool)

(assert (=> b!111523 m!127107))

(assert (=> b!111523 m!124813))

(assert (=> b!111523 m!124813))

(declare-fun m!127109 () Bool)

(assert (=> b!111523 m!127109))

(assert (=> b!111525 m!124813))

(assert (=> b!111525 m!124813))

(assert (=> b!111525 m!127109))

(assert (=> d!30915 d!31741))

(declare-fun e!72495 () Option!162)

(declare-fun b!111528 () Bool)

(assert (=> b!111528 (= e!72495 (getValueByKey!156 (t!5755 lt!56802) (_1!1209 (tuple2!2397 lt!56424 lt!56421))))))

(declare-fun d!31743 () Bool)

(declare-fun c!19898 () Bool)

(assert (=> d!31743 (= c!19898 (and ((_ is Cons!1623) lt!56802) (= (_1!1209 (h!2222 lt!56802)) (_1!1209 (tuple2!2397 lt!56424 lt!56421)))))))

(declare-fun e!72494 () Option!162)

(assert (=> d!31743 (= (getValueByKey!156 lt!56802 (_1!1209 (tuple2!2397 lt!56424 lt!56421))) e!72494)))

(declare-fun b!111526 () Bool)

(assert (=> b!111526 (= e!72494 (Some!161 (_2!1209 (h!2222 lt!56802))))))

(declare-fun b!111527 () Bool)

(assert (=> b!111527 (= e!72494 e!72495)))

(declare-fun c!19899 () Bool)

(assert (=> b!111527 (= c!19899 (and ((_ is Cons!1623) lt!56802) (not (= (_1!1209 (h!2222 lt!56802)) (_1!1209 (tuple2!2397 lt!56424 lt!56421))))))))

(declare-fun b!111529 () Bool)

(assert (=> b!111529 (= e!72495 None!160)))

(assert (= (and d!31743 c!19898) b!111526))

(assert (= (and d!31743 (not c!19898)) b!111527))

(assert (= (and b!111527 c!19899) b!111528))

(assert (= (and b!111527 (not c!19899)) b!111529))

(declare-fun m!127111 () Bool)

(assert (=> b!111528 m!127111))

(assert (=> d!30915 d!31743))

(declare-fun d!31745 () Bool)

(assert (=> d!31745 (= (getValueByKey!156 lt!56802 (_1!1209 (tuple2!2397 lt!56424 lt!56421))) (Some!161 (_2!1209 (tuple2!2397 lt!56424 lt!56421))))))

(declare-fun lt!57518 () Unit!3390)

(assert (=> d!31745 (= lt!57518 (choose!691 lt!56802 (_1!1209 (tuple2!2397 lt!56424 lt!56421)) (_2!1209 (tuple2!2397 lt!56424 lt!56421))))))

(declare-fun e!72496 () Bool)

(assert (=> d!31745 e!72496))

(declare-fun res!55070 () Bool)

(assert (=> d!31745 (=> (not res!55070) (not e!72496))))

(assert (=> d!31745 (= res!55070 (isStrictlySorted!306 lt!56802))))

(assert (=> d!31745 (= (lemmaContainsTupThenGetReturnValue!75 lt!56802 (_1!1209 (tuple2!2397 lt!56424 lt!56421)) (_2!1209 (tuple2!2397 lt!56424 lt!56421))) lt!57518)))

(declare-fun b!111530 () Bool)

(declare-fun res!55071 () Bool)

(assert (=> b!111530 (=> (not res!55071) (not e!72496))))

(assert (=> b!111530 (= res!55071 (containsKey!160 lt!56802 (_1!1209 (tuple2!2397 lt!56424 lt!56421))))))

(declare-fun b!111531 () Bool)

(assert (=> b!111531 (= e!72496 (contains!829 lt!56802 (tuple2!2397 (_1!1209 (tuple2!2397 lt!56424 lt!56421)) (_2!1209 (tuple2!2397 lt!56424 lt!56421)))))))

(assert (= (and d!31745 res!55070) b!111530))

(assert (= (and b!111530 res!55071) b!111531))

(assert (=> d!31745 m!124807))

(declare-fun m!127113 () Bool)

(assert (=> d!31745 m!127113))

(declare-fun m!127115 () Bool)

(assert (=> d!31745 m!127115))

(declare-fun m!127117 () Bool)

(assert (=> b!111530 m!127117))

(declare-fun m!127119 () Bool)

(assert (=> b!111531 m!127119))

(assert (=> d!30915 d!31745))

(declare-fun c!19900 () Bool)

(declare-fun e!72498 () List!1627)

(declare-fun c!19903 () Bool)

(declare-fun b!111532 () Bool)

(assert (=> b!111532 (= e!72498 (ite c!19900 (t!5755 (toList!792 lt!56420)) (ite c!19903 (Cons!1623 (h!2222 (toList!792 lt!56420)) (t!5755 (toList!792 lt!56420))) Nil!1624)))))

(declare-fun b!111533 () Bool)

(assert (=> b!111533 (= e!72498 (insertStrictlySorted!78 (t!5755 (toList!792 lt!56420)) (_1!1209 (tuple2!2397 lt!56424 lt!56421)) (_2!1209 (tuple2!2397 lt!56424 lt!56421))))))

(declare-fun bm!11900 () Bool)

(declare-fun call!11905 () List!1627)

(declare-fun call!11903 () List!1627)

(assert (=> bm!11900 (= call!11905 call!11903)))

(declare-fun b!111534 () Bool)

(declare-fun e!72497 () List!1627)

(declare-fun call!11904 () List!1627)

(assert (=> b!111534 (= e!72497 call!11904)))

(declare-fun b!111535 () Bool)

(assert (=> b!111535 (= c!19903 (and ((_ is Cons!1623) (toList!792 lt!56420)) (bvsgt (_1!1209 (h!2222 (toList!792 lt!56420))) (_1!1209 (tuple2!2397 lt!56424 lt!56421)))))))

(declare-fun e!72500 () List!1627)

(assert (=> b!111535 (= e!72500 e!72497)))

(declare-fun b!111536 () Bool)

(declare-fun res!55073 () Bool)

(declare-fun e!72499 () Bool)

(assert (=> b!111536 (=> (not res!55073) (not e!72499))))

(declare-fun lt!57519 () List!1627)

(assert (=> b!111536 (= res!55073 (containsKey!160 lt!57519 (_1!1209 (tuple2!2397 lt!56424 lt!56421))))))

(declare-fun b!111538 () Bool)

(assert (=> b!111538 (= e!72497 call!11904)))

(declare-fun bm!11901 () Bool)

(assert (=> bm!11901 (= call!11904 call!11905)))

(declare-fun b!111539 () Bool)

(assert (=> b!111539 (= e!72500 call!11905)))

(declare-fun b!111540 () Bool)

(declare-fun e!72501 () List!1627)

(assert (=> b!111540 (= e!72501 e!72500)))

(assert (=> b!111540 (= c!19900 (and ((_ is Cons!1623) (toList!792 lt!56420)) (= (_1!1209 (h!2222 (toList!792 lt!56420))) (_1!1209 (tuple2!2397 lt!56424 lt!56421)))))))

(declare-fun d!31747 () Bool)

(assert (=> d!31747 e!72499))

(declare-fun res!55072 () Bool)

(assert (=> d!31747 (=> (not res!55072) (not e!72499))))

(assert (=> d!31747 (= res!55072 (isStrictlySorted!306 lt!57519))))

(assert (=> d!31747 (= lt!57519 e!72501)))

(declare-fun c!19902 () Bool)

(assert (=> d!31747 (= c!19902 (and ((_ is Cons!1623) (toList!792 lt!56420)) (bvslt (_1!1209 (h!2222 (toList!792 lt!56420))) (_1!1209 (tuple2!2397 lt!56424 lt!56421)))))))

(assert (=> d!31747 (isStrictlySorted!306 (toList!792 lt!56420))))

(assert (=> d!31747 (= (insertStrictlySorted!78 (toList!792 lt!56420) (_1!1209 (tuple2!2397 lt!56424 lt!56421)) (_2!1209 (tuple2!2397 lt!56424 lt!56421))) lt!57519)))

(declare-fun b!111537 () Bool)

(assert (=> b!111537 (= e!72501 call!11903)))

(declare-fun b!111541 () Bool)

(assert (=> b!111541 (= e!72499 (contains!829 lt!57519 (tuple2!2397 (_1!1209 (tuple2!2397 lt!56424 lt!56421)) (_2!1209 (tuple2!2397 lt!56424 lt!56421)))))))

(declare-fun bm!11902 () Bool)

(assert (=> bm!11902 (= call!11903 ($colon$colon!82 e!72498 (ite c!19902 (h!2222 (toList!792 lt!56420)) (tuple2!2397 (_1!1209 (tuple2!2397 lt!56424 lt!56421)) (_2!1209 (tuple2!2397 lt!56424 lt!56421))))))))

(declare-fun c!19901 () Bool)

(assert (=> bm!11902 (= c!19901 c!19902)))

(assert (= (and d!31747 c!19902) b!111537))

(assert (= (and d!31747 (not c!19902)) b!111540))

(assert (= (and b!111540 c!19900) b!111539))

(assert (= (and b!111540 (not c!19900)) b!111535))

(assert (= (and b!111535 c!19903) b!111534))

(assert (= (and b!111535 (not c!19903)) b!111538))

(assert (= (or b!111534 b!111538) bm!11901))

(assert (= (or b!111539 bm!11901) bm!11900))

(assert (= (or b!111537 bm!11900) bm!11902))

(assert (= (and bm!11902 c!19901) b!111533))

(assert (= (and bm!11902 (not c!19901)) b!111532))

(assert (= (and d!31747 res!55072) b!111536))

(assert (= (and b!111536 res!55073) b!111541))

(declare-fun m!127121 () Bool)

(assert (=> d!31747 m!127121))

(declare-fun m!127123 () Bool)

(assert (=> d!31747 m!127123))

(declare-fun m!127125 () Bool)

(assert (=> b!111536 m!127125))

(declare-fun m!127127 () Bool)

(assert (=> bm!11902 m!127127))

(declare-fun m!127129 () Bool)

(assert (=> b!111533 m!127129))

(declare-fun m!127131 () Bool)

(assert (=> b!111541 m!127131))

(assert (=> d!30915 d!31747))

(declare-fun d!31749 () Bool)

(assert (=> d!31749 (= (+!139 (getCurrentListMap!469 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) (tuple2!2397 (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306)) (getCurrentListMap!469 (_keys!4339 newMap!16) (array!4368 (store (arr!2069 (_values!2609 newMap!16)) (index!3207 lt!56493) (ValueCellFull!1004 lt!56306)) (size!2327 (_values!2609 newMap!16))) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(assert (=> d!31749 true))

(declare-fun _$5!116 () Unit!3390)

(assert (=> d!31749 (= (choose!695 (_keys!4339 newMap!16) (_values!2609 newMap!16) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) (index!3207 lt!56493) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) from!355) lt!56306 (defaultEntry!2626 newMap!16)) _$5!116)))

(declare-fun bs!4597 () Bool)

(assert (= bs!4597 d!31749))

(assert (=> bs!4597 m!124133))

(assert (=> bs!4597 m!124133))

(assert (=> bs!4597 m!124433))

(assert (=> bs!4597 m!124137))

(assert (=> bs!4597 m!124435))

(assert (=> d!30835 d!31749))

(assert (=> d!30835 d!31081))

(declare-fun d!31751 () Bool)

(assert (=> d!31751 (isDefined!110 (getValueByKey!156 (toList!792 lt!56589) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!57520 () Unit!3390)

(assert (=> d!31751 (= lt!57520 (choose!699 (toList!792 lt!56589) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!72502 () Bool)

(assert (=> d!31751 e!72502))

(declare-fun res!55074 () Bool)

(assert (=> d!31751 (=> (not res!55074) (not e!72502))))

(assert (=> d!31751 (= res!55074 (isStrictlySorted!306 (toList!792 lt!56589)))))

(assert (=> d!31751 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!109 (toList!792 lt!56589) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!57520)))

(declare-fun b!111542 () Bool)

(assert (=> b!111542 (= e!72502 (containsKey!160 (toList!792 lt!56589) (select (arr!2068 (_keys!4339 (v!2920 (underlying!363 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!31751 res!55074) b!111542))

(assert (=> d!31751 m!124087))

(assert (=> d!31751 m!124441))

(assert (=> d!31751 m!124441))

(assert (=> d!31751 m!124443))

(assert (=> d!31751 m!124087))

(declare-fun m!127133 () Bool)

(assert (=> d!31751 m!127133))

(assert (=> d!31751 m!126261))

(assert (=> b!111542 m!124087))

(assert (=> b!111542 m!124437))

(assert (=> b!110075 d!31751))

(assert (=> b!110075 d!31595))

(assert (=> b!110075 d!31113))

(assert (=> b!110074 d!31031))

(assert (=> b!110074 d!30839))

(declare-fun b!111543 () Bool)

(declare-fun e!72503 () Bool)

(assert (=> b!111543 (= e!72503 (validKeyInArray!0 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!111544 () Bool)

(declare-fun e!72512 () Bool)

(declare-fun e!72504 () Bool)

(assert (=> b!111544 (= e!72512 e!72504)))

(declare-fun res!55080 () Bool)

(declare-fun call!11910 () Bool)

(assert (=> b!111544 (= res!55080 call!11910)))

(assert (=> b!111544 (=> (not res!55080) (not e!72504))))

(declare-fun b!111545 () Bool)

(declare-fun lt!57537 () ListLongMap!1553)

(assert (=> b!111545 (= e!72504 (= (apply!100 lt!57537 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2497 newMap!16)))))

(declare-fun b!111546 () Bool)

(assert (=> b!111546 (= e!72512 (not call!11910))))

(declare-fun d!31753 () Bool)

(declare-fun e!72514 () Bool)

(assert (=> d!31753 e!72514))

(declare-fun res!55077 () Bool)

(assert (=> d!31753 (=> (not res!55077) (not e!72514))))

(assert (=> d!31753 (= res!55077 (or (bvsge #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))))))))

(declare-fun lt!57539 () ListLongMap!1553)

(assert (=> d!31753 (= lt!57537 lt!57539)))

(declare-fun lt!57523 () Unit!3390)

(declare-fun e!72509 () Unit!3390)

(assert (=> d!31753 (= lt!57523 e!72509)))

(declare-fun c!19905 () Bool)

(declare-fun e!72510 () Bool)

(assert (=> d!31753 (= c!19905 e!72510)))

(declare-fun res!55079 () Bool)

(assert (=> d!31753 (=> (not res!55079) (not e!72510))))

(assert (=> d!31753 (= res!55079 (bvslt #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))))))

(declare-fun e!72515 () ListLongMap!1553)

(assert (=> d!31753 (= lt!57539 e!72515)))

(declare-fun c!19904 () Bool)

(assert (=> d!31753 (= c!19904 (and (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!31753 (validMask!0 (mask!6793 newMap!16))))

(assert (=> d!31753 (= (getCurrentListMap!469 (_keys!4339 newMap!16) (array!4368 (store (arr!2069 (_values!2609 newMap!16)) (index!3207 lt!56493) (ValueCellFull!1004 lt!56306)) (size!2327 (_values!2609 newMap!16))) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)) lt!57537)))

(declare-fun b!111547 () Bool)

(assert (=> b!111547 (= e!72514 e!72512)))

(declare-fun c!19909 () Bool)

(assert (=> b!111547 (= c!19909 (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!111548 () Bool)

(declare-fun e!72511 () ListLongMap!1553)

(assert (=> b!111548 (= e!72515 e!72511)))

(declare-fun c!19907 () Bool)

(assert (=> b!111548 (= c!19907 (and (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!11903 () Bool)

(declare-fun call!11908 () ListLongMap!1553)

(declare-fun call!11907 () ListLongMap!1553)

(assert (=> bm!11903 (= call!11908 call!11907)))

(declare-fun bm!11904 () Bool)

(declare-fun call!11906 () ListLongMap!1553)

(assert (=> bm!11904 (= call!11907 call!11906)))

(declare-fun b!111549 () Bool)

(declare-fun res!55083 () Bool)

(assert (=> b!111549 (=> (not res!55083) (not e!72514))))

(declare-fun e!72508 () Bool)

(assert (=> b!111549 (= res!55083 e!72508)))

(declare-fun res!55082 () Bool)

(assert (=> b!111549 (=> res!55082 e!72508)))

(assert (=> b!111549 (= res!55082 (not e!72503))))

(declare-fun res!55078 () Bool)

(assert (=> b!111549 (=> (not res!55078) (not e!72503))))

(assert (=> b!111549 (= res!55078 (bvslt #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))))))

(declare-fun b!111550 () Bool)

(declare-fun e!72506 () Bool)

(declare-fun e!72505 () Bool)

(assert (=> b!111550 (= e!72506 e!72505)))

(declare-fun res!55075 () Bool)

(declare-fun call!11912 () Bool)

(assert (=> b!111550 (= res!55075 call!11912)))

(assert (=> b!111550 (=> (not res!55075) (not e!72505))))

(declare-fun bm!11905 () Bool)

(declare-fun call!11909 () ListLongMap!1553)

(declare-fun call!11911 () ListLongMap!1553)

(assert (=> bm!11905 (= call!11909 call!11911)))

(declare-fun b!111551 () Bool)

(assert (=> b!111551 (= e!72506 (not call!11912))))

(declare-fun b!111552 () Bool)

(declare-fun e!72507 () Bool)

(assert (=> b!111552 (= e!72508 e!72507)))

(declare-fun res!55076 () Bool)

(assert (=> b!111552 (=> (not res!55076) (not e!72507))))

(assert (=> b!111552 (= res!55076 (contains!827 lt!57537 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!111552 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))))))

(declare-fun b!111553 () Bool)

(assert (=> b!111553 (= e!72507 (= (apply!100 lt!57537 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)) (get!1347 (select (arr!2069 (array!4368 (store (arr!2069 (_values!2609 newMap!16)) (index!3207 lt!56493) (ValueCellFull!1004 lt!56306)) (size!2327 (_values!2609 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!387 (defaultEntry!2626 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!111553 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2327 (array!4368 (store (arr!2069 (_values!2609 newMap!16)) (index!3207 lt!56493) (ValueCellFull!1004 lt!56306)) (size!2327 (_values!2609 newMap!16))))))))

(assert (=> b!111553 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2326 (_keys!4339 newMap!16))))))

(declare-fun bm!11906 () Bool)

(assert (=> bm!11906 (= call!11910 (contains!827 lt!57537 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!11907 () Bool)

(assert (=> bm!11907 (= call!11912 (contains!827 lt!57537 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!111554 () Bool)

(assert (=> b!111554 (= e!72510 (validKeyInArray!0 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!111555 () Bool)

(declare-fun res!55081 () Bool)

(assert (=> b!111555 (=> (not res!55081) (not e!72514))))

(assert (=> b!111555 (= res!55081 e!72506)))

(declare-fun c!19908 () Bool)

(assert (=> b!111555 (= c!19908 (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!11908 () Bool)

(assert (=> bm!11908 (= call!11906 (getCurrentListMapNoExtraKeys!104 (_keys!4339 newMap!16) (array!4368 (store (arr!2069 (_values!2609 newMap!16)) (index!3207 lt!56493) (ValueCellFull!1004 lt!56306)) (size!2327 (_values!2609 newMap!16))) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun b!111556 () Bool)

(declare-fun e!72513 () ListLongMap!1553)

(assert (=> b!111556 (= e!72513 call!11908)))

(declare-fun b!111557 () Bool)

(assert (=> b!111557 (= e!72515 (+!139 call!11911 (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16))))))

(declare-fun b!111558 () Bool)

(assert (=> b!111558 (= e!72511 call!11909)))

(declare-fun b!111559 () Bool)

(declare-fun Unit!3467 () Unit!3390)

(assert (=> b!111559 (= e!72509 Unit!3467)))

(declare-fun b!111560 () Bool)

(declare-fun lt!57530 () Unit!3390)

(assert (=> b!111560 (= e!72509 lt!57530)))

(declare-fun lt!57525 () ListLongMap!1553)

(assert (=> b!111560 (= lt!57525 (getCurrentListMapNoExtraKeys!104 (_keys!4339 newMap!16) (array!4368 (store (arr!2069 (_values!2609 newMap!16)) (index!3207 lt!56493) (ValueCellFull!1004 lt!56306)) (size!2327 (_values!2609 newMap!16))) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!57538 () (_ BitVec 64))

(assert (=> b!111560 (= lt!57538 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57522 () (_ BitVec 64))

(assert (=> b!111560 (= lt!57522 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!57542 () Unit!3390)

(assert (=> b!111560 (= lt!57542 (addStillContains!76 lt!57525 lt!57538 (zeroValue!2497 newMap!16) lt!57522))))

(assert (=> b!111560 (contains!827 (+!139 lt!57525 (tuple2!2397 lt!57538 (zeroValue!2497 newMap!16))) lt!57522)))

(declare-fun lt!57536 () Unit!3390)

(assert (=> b!111560 (= lt!57536 lt!57542)))

(declare-fun lt!57524 () ListLongMap!1553)

(assert (=> b!111560 (= lt!57524 (getCurrentListMapNoExtraKeys!104 (_keys!4339 newMap!16) (array!4368 (store (arr!2069 (_values!2609 newMap!16)) (index!3207 lt!56493) (ValueCellFull!1004 lt!56306)) (size!2327 (_values!2609 newMap!16))) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!57535 () (_ BitVec 64))

(assert (=> b!111560 (= lt!57535 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57528 () (_ BitVec 64))

(assert (=> b!111560 (= lt!57528 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!57534 () Unit!3390)

(assert (=> b!111560 (= lt!57534 (addApplyDifferent!76 lt!57524 lt!57535 (minValue!2497 newMap!16) lt!57528))))

(assert (=> b!111560 (= (apply!100 (+!139 lt!57524 (tuple2!2397 lt!57535 (minValue!2497 newMap!16))) lt!57528) (apply!100 lt!57524 lt!57528))))

(declare-fun lt!57521 () Unit!3390)

(assert (=> b!111560 (= lt!57521 lt!57534)))

(declare-fun lt!57540 () ListLongMap!1553)

(assert (=> b!111560 (= lt!57540 (getCurrentListMapNoExtraKeys!104 (_keys!4339 newMap!16) (array!4368 (store (arr!2069 (_values!2609 newMap!16)) (index!3207 lt!56493) (ValueCellFull!1004 lt!56306)) (size!2327 (_values!2609 newMap!16))) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!57531 () (_ BitVec 64))

(assert (=> b!111560 (= lt!57531 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57526 () (_ BitVec 64))

(assert (=> b!111560 (= lt!57526 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!57532 () Unit!3390)

(assert (=> b!111560 (= lt!57532 (addApplyDifferent!76 lt!57540 lt!57531 (zeroValue!2497 newMap!16) lt!57526))))

(assert (=> b!111560 (= (apply!100 (+!139 lt!57540 (tuple2!2397 lt!57531 (zeroValue!2497 newMap!16))) lt!57526) (apply!100 lt!57540 lt!57526))))

(declare-fun lt!57541 () Unit!3390)

(assert (=> b!111560 (= lt!57541 lt!57532)))

(declare-fun lt!57529 () ListLongMap!1553)

(assert (=> b!111560 (= lt!57529 (getCurrentListMapNoExtraKeys!104 (_keys!4339 newMap!16) (array!4368 (store (arr!2069 (_values!2609 newMap!16)) (index!3207 lt!56493) (ValueCellFull!1004 lt!56306)) (size!2327 (_values!2609 newMap!16))) (mask!6793 newMap!16) (extraKeys!2423 newMap!16) (zeroValue!2497 newMap!16) (minValue!2497 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2626 newMap!16)))))

(declare-fun lt!57527 () (_ BitVec 64))

(assert (=> b!111560 (= lt!57527 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!57533 () (_ BitVec 64))

(assert (=> b!111560 (= lt!57533 (select (arr!2068 (_keys!4339 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!111560 (= lt!57530 (addApplyDifferent!76 lt!57529 lt!57527 (minValue!2497 newMap!16) lt!57533))))

(assert (=> b!111560 (= (apply!100 (+!139 lt!57529 (tuple2!2397 lt!57527 (minValue!2497 newMap!16))) lt!57533) (apply!100 lt!57529 lt!57533))))

(declare-fun b!111561 () Bool)

(declare-fun c!19906 () Bool)

(assert (=> b!111561 (= c!19906 (and (not (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2423 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!111561 (= e!72511 e!72513)))

(declare-fun b!111562 () Bool)

(assert (=> b!111562 (= e!72505 (= (apply!100 lt!57537 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2497 newMap!16)))))

(declare-fun b!111563 () Bool)

(assert (=> b!111563 (= e!72513 call!11909)))

(declare-fun bm!11909 () Bool)

(assert (=> bm!11909 (= call!11911 (+!139 (ite c!19904 call!11906 (ite c!19907 call!11907 call!11908)) (ite (or c!19904 c!19907) (tuple2!2397 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2497 newMap!16)) (tuple2!2397 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2497 newMap!16)))))))

(assert (= (and d!31753 c!19904) b!111557))

(assert (= (and d!31753 (not c!19904)) b!111548))

(assert (= (and b!111548 c!19907) b!111558))

(assert (= (and b!111548 (not c!19907)) b!111561))

(assert (= (and b!111561 c!19906) b!111563))

(assert (= (and b!111561 (not c!19906)) b!111556))

(assert (= (or b!111563 b!111556) bm!11903))

(assert (= (or b!111558 bm!11903) bm!11904))

(assert (= (or b!111558 b!111563) bm!11905))

(assert (= (or b!111557 bm!11904) bm!11908))

(assert (= (or b!111557 bm!11905) bm!11909))

(assert (= (and d!31753 res!55079) b!111554))

(assert (= (and d!31753 c!19905) b!111560))

(assert (= (and d!31753 (not c!19905)) b!111559))

(assert (= (and d!31753 res!55077) b!111549))

(assert (= (and b!111549 res!55078) b!111543))

(assert (= (and b!111549 (not res!55082)) b!111552))

(assert (= (and b!111552 res!55076) b!111553))

(assert (= (and b!111549 res!55083) b!111555))

(assert (= (and b!111555 c!19908) b!111550))

(assert (= (and b!111555 (not c!19908)) b!111551))

(assert (= (and b!111550 res!55075) b!111562))

(assert (= (or b!111550 b!111551) bm!11907))

(assert (= (and b!111555 res!55081) b!111547))

(assert (= (and b!111547 c!19909) b!111544))

(assert (= (and b!111547 (not c!19909)) b!111546))

(assert (= (and b!111544 res!55080) b!111545))

(assert (= (or b!111544 b!111546) bm!11906))

(declare-fun b_lambda!4969 () Bool)

(assert (=> (not b_lambda!4969) (not b!111553)))

(assert (=> b!111553 t!5766))

(declare-fun b_and!6845 () Bool)

(assert (= b_and!6841 (and (=> t!5766 result!3533) b_and!6845)))

(assert (=> b!111553 t!5768))

(declare-fun b_and!6847 () Bool)

(assert (= b_and!6843 (and (=> t!5768 result!3535) b_and!6847)))

(declare-fun m!127135 () Bool)

(assert (=> b!111553 m!127135))

(assert (=> b!111553 m!124447))

(declare-fun m!127137 () Bool)

(assert (=> b!111553 m!127137))

(assert (=> b!111553 m!124451))

(assert (=> b!111553 m!124447))

(assert (=> b!111553 m!127135))

(assert (=> b!111553 m!124451))

(declare-fun m!127139 () Bool)

(assert (=> b!111553 m!127139))

(assert (=> b!111552 m!124447))

(assert (=> b!111552 m!124447))

(declare-fun m!127141 () Bool)

(assert (=> b!111552 m!127141))

(assert (=> d!31753 m!124269))

(declare-fun m!127143 () Bool)

(assert (=> bm!11909 m!127143))

(declare-fun m!127145 () Bool)

(assert (=> b!111545 m!127145))

(declare-fun m!127147 () Bool)

(assert (=> bm!11908 m!127147))

(assert (=> b!111554 m!124447))

(assert (=> b!111554 m!124447))

(assert (=> b!111554 m!124463))

(assert (=> b!111543 m!124447))

(assert (=> b!111543 m!124447))

(assert (=> b!111543 m!124463))

(declare-fun m!127149 () Bool)

(assert (=> b!111562 m!127149))

(declare-fun m!127151 () Bool)

(assert (=> b!111560 m!127151))

(declare-fun m!127153 () Bool)

(assert (=> b!111560 m!127153))

(declare-fun m!127155 () Bool)

(assert (=> b!111560 m!127155))

(declare-fun m!127157 () Bool)

(assert (=> b!111560 m!127157))

(declare-fun m!127159 () Bool)

(assert (=> b!111560 m!127159))

(declare-fun m!127161 () Bool)

(assert (=> b!111560 m!127161))

(assert (=> b!111560 m!127151))

(declare-fun m!127163 () Bool)

(assert (=> b!111560 m!127163))

(declare-fun m!127165 () Bool)

(assert (=> b!111560 m!127165))

(assert (=> b!111560 m!127147))

(declare-fun m!127167 () Bool)

(assert (=> b!111560 m!127167))

(declare-fun m!127169 () Bool)

(assert (=> b!111560 m!127169))

(declare-fun m!127171 () Bool)

(assert (=> b!111560 m!127171))

(declare-fun m!127173 () Bool)

(assert (=> b!111560 m!127173))

(declare-fun m!127175 () Bool)

(assert (=> b!111560 m!127175))

(declare-fun m!127177 () Bool)

(assert (=> b!111560 m!127177))

(assert (=> b!111560 m!127167))

(assert (=> b!111560 m!124447))

(assert (=> b!111560 m!127155))

(declare-fun m!127179 () Bool)

(assert (=> b!111560 m!127179))

(assert (=> b!111560 m!127159))

(declare-fun m!127181 () Bool)

(assert (=> bm!11907 m!127181))

(declare-fun m!127183 () Bool)

(assert (=> b!111557 m!127183))

(declare-fun m!127185 () Bool)

(assert (=> bm!11906 m!127185))

(assert (=> b!110074 d!31753))

(assert (=> b!110110 d!31205))

(declare-fun d!31755 () Bool)

(assert (=> d!31755 (= (get!1350 (getValueByKey!156 (toList!792 lt!56581) lt!56585)) (v!2926 (getValueByKey!156 (toList!792 lt!56581) lt!56585)))))

(assert (=> d!30981 d!31755))

(declare-fun b!111566 () Bool)

(declare-fun e!72517 () Option!162)

(assert (=> b!111566 (= e!72517 (getValueByKey!156 (t!5755 (toList!792 lt!56581)) lt!56585))))

(declare-fun d!31757 () Bool)

(declare-fun c!19910 () Bool)

(assert (=> d!31757 (= c!19910 (and ((_ is Cons!1623) (toList!792 lt!56581)) (= (_1!1209 (h!2222 (toList!792 lt!56581))) lt!56585)))))

(declare-fun e!72516 () Option!162)

(assert (=> d!31757 (= (getValueByKey!156 (toList!792 lt!56581) lt!56585) e!72516)))

(declare-fun b!111564 () Bool)

(assert (=> b!111564 (= e!72516 (Some!161 (_2!1209 (h!2222 (toList!792 lt!56581)))))))

(declare-fun b!111565 () Bool)

(assert (=> b!111565 (= e!72516 e!72517)))

(declare-fun c!19911 () Bool)

(assert (=> b!111565 (= c!19911 (and ((_ is Cons!1623) (toList!792 lt!56581)) (not (= (_1!1209 (h!2222 (toList!792 lt!56581))) lt!56585))))))

(declare-fun b!111567 () Bool)

(assert (=> b!111567 (= e!72517 None!160)))

(assert (= (and d!31757 c!19910) b!111564))

(assert (= (and d!31757 (not c!19910)) b!111565))

(assert (= (and b!111565 c!19911) b!111566))

(assert (= (and b!111565 (not c!19911)) b!111567))

(declare-fun m!127187 () Bool)

(assert (=> b!111566 m!127187))

(assert (=> d!30981 d!31757))

(assert (=> b!110346 d!31229))

(assert (=> b!110346 d!30879))

(declare-fun d!31759 () Bool)

(assert (=> d!31759 (= (apply!100 lt!56765 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1350 (getValueByKey!156 (toList!792 lt!56765) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4598 () Bool)

(assert (= bs!4598 d!31759))

(assert (=> bs!4598 m!126481))

(assert (=> bs!4598 m!126481))

(declare-fun m!127189 () Bool)

(assert (=> bs!4598 m!127189))

(assert (=> b!110208 d!31759))

(declare-fun condMapEmpty!4013 () Bool)

(declare-fun mapDefault!4013 () ValueCell!1004)

(assert (=> mapNonEmpty!4012 (= condMapEmpty!4013 (= mapRest!4012 ((as const (Array (_ BitVec 32) ValueCell!1004)) mapDefault!4013)))))

(declare-fun e!72518 () Bool)

(declare-fun mapRes!4013 () Bool)

(assert (=> mapNonEmpty!4012 (= tp!10042 (and e!72518 mapRes!4013))))

(declare-fun b!111569 () Bool)

(assert (=> b!111569 (= e!72518 tp_is_empty!2695)))

(declare-fun mapIsEmpty!4013 () Bool)

(assert (=> mapIsEmpty!4013 mapRes!4013))

(declare-fun mapNonEmpty!4013 () Bool)

(declare-fun tp!10043 () Bool)

(declare-fun e!72519 () Bool)

(assert (=> mapNonEmpty!4013 (= mapRes!4013 (and tp!10043 e!72519))))

(declare-fun mapRest!4013 () (Array (_ BitVec 32) ValueCell!1004))

(declare-fun mapValue!4013 () ValueCell!1004)

(declare-fun mapKey!4013 () (_ BitVec 32))

(assert (=> mapNonEmpty!4013 (= mapRest!4012 (store mapRest!4013 mapKey!4013 mapValue!4013))))

(declare-fun b!111568 () Bool)

(assert (=> b!111568 (= e!72519 tp_is_empty!2695)))

(assert (= (and mapNonEmpty!4012 condMapEmpty!4013) mapIsEmpty!4013))

(assert (= (and mapNonEmpty!4012 (not condMapEmpty!4013)) mapNonEmpty!4013))

(assert (= (and mapNonEmpty!4013 ((_ is ValueCellFull!1004) mapValue!4013)) b!111568))

(assert (= (and mapNonEmpty!4012 ((_ is ValueCellFull!1004) mapDefault!4013)) b!111569))

(declare-fun m!127191 () Bool)

(assert (=> mapNonEmpty!4013 m!127191))

(declare-fun condMapEmpty!4014 () Bool)

(declare-fun mapDefault!4014 () ValueCell!1004)

(assert (=> mapNonEmpty!4011 (= condMapEmpty!4014 (= mapRest!4011 ((as const (Array (_ BitVec 32) ValueCell!1004)) mapDefault!4014)))))

(declare-fun e!72520 () Bool)

(declare-fun mapRes!4014 () Bool)

(assert (=> mapNonEmpty!4011 (= tp!10041 (and e!72520 mapRes!4014))))

(declare-fun b!111571 () Bool)

(assert (=> b!111571 (= e!72520 tp_is_empty!2695)))

(declare-fun mapIsEmpty!4014 () Bool)

(assert (=> mapIsEmpty!4014 mapRes!4014))

(declare-fun mapNonEmpty!4014 () Bool)

(declare-fun tp!10044 () Bool)

(declare-fun e!72521 () Bool)

(assert (=> mapNonEmpty!4014 (= mapRes!4014 (and tp!10044 e!72521))))

(declare-fun mapKey!4014 () (_ BitVec 32))

(declare-fun mapValue!4014 () ValueCell!1004)

(declare-fun mapRest!4014 () (Array (_ BitVec 32) ValueCell!1004))

(assert (=> mapNonEmpty!4014 (= mapRest!4011 (store mapRest!4014 mapKey!4014 mapValue!4014))))

(declare-fun b!111570 () Bool)

(assert (=> b!111570 (= e!72521 tp_is_empty!2695)))

(assert (= (and mapNonEmpty!4011 condMapEmpty!4014) mapIsEmpty!4014))

(assert (= (and mapNonEmpty!4011 (not condMapEmpty!4014)) mapNonEmpty!4014))

(assert (= (and mapNonEmpty!4014 ((_ is ValueCellFull!1004) mapValue!4014)) b!111570))

(assert (= (and mapNonEmpty!4011 ((_ is ValueCellFull!1004) mapDefault!4014)) b!111571))

(declare-fun m!127193 () Bool)

(assert (=> mapNonEmpty!4014 m!127193))

(declare-fun b_lambda!4971 () Bool)

(assert (= b_lambda!4947 (or (and b!109508 b_free!2557 (= (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) (defaultEntry!2626 newMap!16))) (and b!109512 b_free!2559) b_lambda!4971)))

(declare-fun b_lambda!4973 () Bool)

(assert (= b_lambda!4967 (or (and b!109508 b_free!2557 (= (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) (defaultEntry!2626 newMap!16))) (and b!109512 b_free!2559) b_lambda!4973)))

(declare-fun b_lambda!4975 () Bool)

(assert (= b_lambda!4949 (or (and b!109508 b_free!2557) (and b!109512 b_free!2559 (= (defaultEntry!2626 newMap!16) (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))))) b_lambda!4975)))

(declare-fun b_lambda!4977 () Bool)

(assert (= b_lambda!4957 (or (and b!109508 b_free!2557 (= (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) (defaultEntry!2626 newMap!16))) (and b!109512 b_free!2559) b_lambda!4977)))

(declare-fun b_lambda!4979 () Bool)

(assert (= b_lambda!4963 (or (and b!109508 b_free!2557 (= (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) (defaultEntry!2626 newMap!16))) (and b!109512 b_free!2559) b_lambda!4979)))

(declare-fun b_lambda!4981 () Bool)

(assert (= b_lambda!4951 (or (and b!109508 b_free!2557) (and b!109512 b_free!2559 (= (defaultEntry!2626 newMap!16) (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))))) b_lambda!4981)))

(declare-fun b_lambda!4983 () Bool)

(assert (= b_lambda!4945 (or (and b!109508 b_free!2557 (= (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) (defaultEntry!2626 newMap!16))) (and b!109512 b_free!2559) b_lambda!4983)))

(declare-fun b_lambda!4985 () Bool)

(assert (= b_lambda!4941 (or (and b!109508 b_free!2557 (= (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) (defaultEntry!2626 newMap!16))) (and b!109512 b_free!2559) b_lambda!4985)))

(declare-fun b_lambda!4987 () Bool)

(assert (= b_lambda!4959 (or (and b!109508 b_free!2557 (= (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) (defaultEntry!2626 newMap!16))) (and b!109512 b_free!2559) b_lambda!4987)))

(declare-fun b_lambda!4989 () Bool)

(assert (= b_lambda!4969 (or (and b!109508 b_free!2557 (= (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) (defaultEntry!2626 newMap!16))) (and b!109512 b_free!2559) b_lambda!4989)))

(declare-fun b_lambda!4991 () Bool)

(assert (= b_lambda!4953 (or (and b!109508 b_free!2557 (= (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) (defaultEntry!2626 newMap!16))) (and b!109512 b_free!2559) b_lambda!4991)))

(declare-fun b_lambda!4993 () Bool)

(assert (= b_lambda!4955 (or (and b!109508 b_free!2557 (= (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) (defaultEntry!2626 newMap!16))) (and b!109512 b_free!2559) b_lambda!4993)))

(declare-fun b_lambda!4995 () Bool)

(assert (= b_lambda!4943 (or (and b!109508 b_free!2557 (= (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) (defaultEntry!2626 newMap!16))) (and b!109512 b_free!2559) b_lambda!4995)))

(declare-fun b_lambda!4997 () Bool)

(assert (= b_lambda!4961 (or (and b!109508 b_free!2557 (= (defaultEntry!2626 (v!2920 (underlying!363 thiss!992))) (defaultEntry!2626 newMap!16))) (and b!109512 b_free!2559) b_lambda!4997)))

(check-sat (not b!111525) (not b!110465) (not b!110934) (not b!111562) (not d!31455) (not d!31657) (not b!110765) (not b!111339) (not b!111268) (not b!110924) (not b_lambda!4965) (not d!31315) (not d!30999) (not b!110637) (not b!111218) (not b!110703) (not b!110597) (not d!31401) (not b!110522) (not b!110851) (not d!31489) (not b!111123) (not b!111442) (not b!111297) (not b!110544) (not b!110780) (not b!111031) (not b_lambda!4971) (not d!31273) (not b!111266) (not b!111188) (not b!110728) (not bm!11825) (not b!111384) (not b!111125) (not b_lambda!4975) (not d!31415) (not b!111192) (not bm!11887) (not bm!11805) (not b!111303) (not d!31071) (not b!110565) (not b!111320) (not d!31655) (not b!110546) (not b!111098) (not d!31429) (not b!110502) (not b!110492) (not b!110811) (not b!111074) (not d!31243) (not b!110942) (not d!31717) (not b!110661) (not b!110532) (not b!111195) (not b!111447) (not d!31381) (not b!111107) (not b!111542) (not b!110726) (not b_next!2559) (not b!110537) (not d!31645) (not b!111260) (not b!110911) (not b!111490) (not d!31471) (not d!31189) (not b!111089) (not b!111530) (not b_lambda!4939) (not d!31229) (not d!31311) (not b!111197) (not b!110628) (not b!110489) (not d!31627) (not b!111554) (not b!110664) (not b!111342) (not b!110804) (not d!31563) (not d!31373) (not b!110987) (not b!111334) (not b!110957) (not d!31185) (not b!111034) (not b!111204) (not b!111055) (not d!31567) (not b!110959) (not b!111387) (not b!111323) (not b!110530) (not d!31133) (not d!31751) (not b!111024) (not d!31637) (not b_lambda!4933) (not d!31237) (not d!31139) (not b!111421) (not b!110487) (not b!110690) (not b!111285) (not b!110667) (not d!31759) (not bm!11909) (not b!111437) (not b!111088) (not b!110767) (not b!110903) (not b!110589) (not d!31221) (not bm!11879) (not b!111018) (not d!31641) (not b!110697) (not b!111145) (not b!110696) (not bm!11831) (not d!31091) (not b!110928) (not d!31611) (not b!111515) (not b_lambda!4973) (not b!111457) (not bm!11836) (not d!31039) (not b!111289) (not bm!11902) (not d!31023) (not b!111093) (not b!111142) (not d!31403) (not bm!11803) (not bm!11864) (not d!31195) (not d!31377) (not d!31667) (not b!111528) (not d!31219) (not d!31385) (not d!31173) (not b!111488) (not b!110711) (not d!31463) (not b!111277) (not b!111357) (not b!110656) (not d!31527) (not b!110669) (not b!111058) (not b!111232) (not d!31425) (not b!110823) (not b!111420) (not d!31439) (not d!31575) (not b!110453) (not d!31207) (not b!110951) (not d!31209) (not b!110548) (not b!111065) (not bm!11899) (not b!111118) (not d!31553) (not d!31151) (not b_next!2557) (not d!31087) (not bm!11906) (not d!31469) (not d!31037) (not d!31319) (not b!110666) (not b!111271) (not bm!11802) (not d!31571) (not b!110559) (not b!111136) (not d!31487) (not d!31445) (not d!31155) (not b!110977) (not b!110753) (not b!110624) (not b!111113) (not d!31555) (not b!110639) (not d!31171) (not d!31291) (not b!111206) (not bm!11818) (not b!110592) (not b!111520) (not b!110652) (not b!111279) (not b!110503) (not b!110420) (not d!31433) (not b!110446) (not b!111094) (not b!111021) (not bm!11798) (not bm!11895) (not b!110801) (not b!111287) (not bm!11855) (not b!111344) (not b!111075) (not d!31099) b_and!6847 (not b_lambda!4907) (not d!31749) (not d!30995) (not b!111072) (not b!111061) (not b!110569) (not b!110551) (not bm!11819) (not d!31125) (not b!111131) (not b!111278) (not b!110438) b_and!6845 (not b!111434) (not b!110740) (not d!31313) (not b!110581) (not b!110443) (not b!111312) (not d!31435) (not b!110736) (not b!110772) (not b!111461) (not b!111155) (not d!31545) (not b!111317) (not b!110622) (not b!111489) (not d!31005) (not b_lambda!4915) (not b!110950) (not b!111360) (not b!110533) (not bm!11877) (not b!111126) (not b!111237) (not b!110561) (not b!111522) (not b!110709) (not b!111369) (not d!31305) (not b!110417) (not b_lambda!4977) (not d!31353) (not b!110874) (not b!111472) (not bm!11837) (not b!110821) (not b!110793) (not bm!11812) (not b!110584) (not b!111390) (not d!31157) (not b!111455) (not b!111190) (not d!31629) (not b!111545) (not b!111039) (not bm!11868) (not b!110586) (not b!111345) (not b!111078) (not bm!11894) (not d!31253) (not b!111476) (not b!111255) (not b!110670) (not bm!11870) (not bm!11801) (not b!110782) (not b!110743) (not b!111468) (not b!111560) (not b!110796) (not b!111052) (not d!31659) (not b!110770) (not b!110741) (not b_lambda!4991) (not bm!11848) (not b_lambda!4989) (not d!31297) (not b!111543) (not b!110967) (not bm!11809) (not b!110495) (not b!110681) (not bm!11869) (not b!110662) (not b!111471) (not b!110692) (not d!31753) (not b!111372) (not d!31671) (not b!110674) (not b!111276) (not b!110527) (not b!110620) (not bm!11896) (not b!110979) (not b!110826) (not d!31537) (not bm!11799) (not d!31177) (not b!111552) (not b!110466) (not b!110474) (not b!111519) (not bm!11890) (not b!110642) (not b!111498) (not b!110616) (not bm!11888) (not d!31335) (not b!111423) (not b!110813) (not b!110756) (not b!110484) (not d!31507) (not b_lambda!4993) (not bm!11828) (not b_lambda!4979) (not b!111139) (not d!31159) (not b!110512) (not d!31653) (not d!31053) (not d!31049) (not b!110704) (not d!31595) (not b!110464) (not bm!11785) (not b!110550) (not b!110920) (not b!110930) (not b!111193) (not d!31363) (not d!31057) (not b!110415) (not b!110764) (not d!31675) (not b!111336) (not d!31437) (not b!111229) (not b!111244) (not b!110876) (not mapNonEmpty!4014) (not b!111415) (not d!31741) (not d!31169) (not b!111263) (not b!111475) (not b!111470) (not d!31621) (not b!110901) (not b!110515) (not d!31251) (not d!31631) (not b!111050) (not b!110514) (not b!111032) (not b!110949) (not d!31431) (not d!31453) (not b!110938) (not d!31539) (not b!110579) (not b!110859) (not b!110783) (not b!111367) (not d!31213) (not bm!11845) (not d!31687) (not b!111115) (not b!111152) (not b!110504) (not d!31163) (not b!111416) (not b!111240) (not b!110754) (not b!111368) (not d!31167) (not b_lambda!4919) (not b!110541) (not b!110702) (not b!110964) (not d!31647) (not b!110882) (not b!111157) (not b!110693) (not b!111541) (not d!31085) (not d!31045) (not b!110428) (not b!110864) (not b!111536) (not d!31285) (not b!110605) (not d!31559) (not b!110657) (not b!110658) (not b!111430) (not b!111027) (not b!110543) (not d!31259) (not b!110720) (not b!111375) (not b!110912) (not b!110573) (not b!110691) (not d!31075) (not b!111210) (not d!31101) (not b!110610) (not d!31589) (not b!110884) (not b!111084) (not d!31261) (not d!31077) (not d!31389) (not b!111302) (not bm!11815) (not d!31451) (not d!31497) (not b!110807) (not b!111464) (not b!110994) (not d!31017) (not d!31651) (not b!110900) (not b!111438) (not d!31543) (not b!111507) (not b!111219) (not b!111014) (not d!31357) (not d!31721) (not d!31397) (not b_lambda!4931) (not b!111512) (not b!110790) (not b!110723) (not b!110982) (not b!111226) (not b!111082) (not b!111257) (not b!111203) (not d!31331) (not b!111097) (not d!31475) (not b!111306) (not b!111501) (not b!110777) (not d!31633) (not b!111377) (not d!31131) (not d!31405) (not bm!11908) (not b!111553) (not b!110910) (not d!31279) (not d!31051) (not b!110668) (not b!111426) (not b!110562) (not b!111523) (not b!111247) (not d!31519) (not b!110937) (not b!111221) (not bm!11786) (not bm!11873) (not d!31605) (not bm!11897) (not b!110713) (not d!31095) (not d!31601) (not d!31281) (not b!111445) (not b!110567) (not bm!11808) (not b!110549) (not d!31165) (not b!110748) (not d!31745) (not b!111154) (not bm!11844) (not d!31289) (not d!31025) (not b!111040) (not d!31231) (not b!111023) (not b!110751) (not bm!11822) (not d!31027) (not b!110535) (not b!111071) (not bm!11790) (not b!110844) (not b!110591) (not d!31477) (not b!111104) (not d!31409) (not b!111258) (not b!110700) (not b!111459) (not b!110701) (not b!110771) (not b!110842) (not d!31149) (not d!31665) (not b!110583) (not b!110594) (not b!111224) (not b!110831) (not b!110892) (not d!31117) (not bm!11851) (not b!111453) (not b!111382) (not bm!11800) (not d!31419) (not b!110472) (not b!111212) (not d!31121) (not b!110774) (not b_lambda!4983) (not b!111199) (not d!31663) (not b!111217) (not b!110694) (not d!31515) (not b!110618) (not b_lambda!4937) (not b!110457) (not b!111208) (not bm!11804) (not b!111128) (not b!110848) (not b!111496) (not bm!11878) (not d!31669) (not d!31233) (not d!31035) (not b_lambda!4997) (not d!31523) (not b!110712) (not b!111056) (not bm!11794) (not b!110641) (not b!110716) (not d!31339) (not b!110433) (not b!111186) (not d!31199) (not b!111106) (not d!31483) (not b!111425) (not b!110659) (not b!110939) (not d!31449) (not b!111481) (not d!31709) (not d!31019) (not b!110897) (not d!31367) (not b!110517) (not b!111533) (not d!31129) (not bm!11838) (not d!31107) (not d!31301) (not b!110915) (not b!110614) (not b!111095) (not bm!11791) (not b!111301) (not b!111265) (not b!110455) (not b!111116) (not mapNonEmpty!4013) (not d!31369) (not d!31137) (not b!111292) (not b!110791) (not b!111380) (not b!110564) (not b!110435) (not b!111079) (not b_lambda!4917) (not d!31443) (not bm!11867) (not b!110969) (not b!111083) (not d!31349) (not b!110838) (not d!31183) (not d!31317) (not d!31277) (not d!31643) (not b!111214) (not b!110536) (not b_lambda!4985) (not d!31673) (not b!111099) (not b!111493) (not b!110759) (not b!110869) (not b!111063) (not d!31573) (not b!111077) (not b!110611) (not b!110853) (not b!110788) (not b!111478) (not b!110990) (not b!111150) (not d!31001) (not b!110665) (not b!110971) (not b!111325) (not b!110650) (not bm!11881) (not b!110485) (not b!111428) (not bm!11852) (not d!31739) (not d!31203) (not b!111358) (not b!110647) (not b!111337) (not b!110437) (not b!111042) (not d!31747) (not d!31427) (not b!111313) (not bm!11842) (not b!110440) (not d!31535) (not b!111557) (not b!110954) (not b!110568) (not d!31097) (not b!111441) (not b!111417) (not b!111314) (not b!110602) (not d!31423) (not d!31103) (not d!31395) (not b!111120) (not b!111053) (not b!110931) (not d!31043) (not b!111085) (not d!31399) (not b!110746) (not b!110856) (not d!31141) (not b!111440) (not bm!11858) (not d!31421) (not d!31217) (not bm!11889) (not b!111051) (not b!111328) (not d!31013) (not d!31031) (not b!110448) (not d!31161) (not b!110689) (not b!110493) (not d!31737) (not b!110633) (not b!111101) (not d!31417) (not b!111500) (not b!110718) (not b!110725) (not b!110816) (not b!110879) (not b_lambda!4935) (not b!111422) (not b!110488) (not b!110962) (not b!111227) (not b!111068) (not b!111505) (not b!111110) (not b!111566) tp_is_empty!2695 (not b!110899) (not d!31307) (not d!31387) (not d!31247) (not b!110654) (not b!110731) (not bm!11886) (not bm!11843) (not d!31609) (not d!31341) (not d!31661) (not d!31441) (not b_lambda!4981) (not b!110881) (not b!111350) (not b!110699) (not b!110576) (not b!111076) (not b!110850) (not d!31371) (not b!111531) (not b_lambda!4987) (not b!111045) (not b!110539) (not d!31733) (not b!111091) (not b!111299) (not b!110608) (not b!110523) (not b!110785) (not b!111424) (not b!110507) (not b!110510) (not b!110425) (not b!110974) (not b!111250) (not b!110745) (not b!111102) (not d!31505) (not b_lambda!4995) (not bm!11898) (not b!110738) (not bm!11861) (not d!31461) (not d!31327) (not d!31393) (not b!111467) (not b!110846) (not b!111281) (not d!31623) (not d!31337) (not d!31041) (not b!110469) (not b!111355) (not b!110872) (not d!31009) (not d!31725) (not d!31123) (not b!110976) (not b!111479) (not b!111037) (not b!110887) (not d!31323) (not b!111029) (not b!110644) (not b!110769) (not d!31569) (not b!110422) (not d!31649) (not b!110678) (not b!110918) (not b!111011) (not b!111309) (not b!111176) (not b!110423) (not b!111324) (not b!110861) (not bm!11792) (not d!31179) (not bm!11880) (not bm!11793) (not d!31267) (not b!110834) (not d!31263) (not d!31089) (not d!31509) (not b!110809) (not d!31491) (not b!110940) (not d!31235) (not d!31295) (not b!110566) (not bm!11907) (not b!110547) (not b!111429) (not b!110858) (not d!31181) (not d!31175) (not b!111201) (not d!31115) (not b!111016) (not d!31007) (not b!110687) (not d!31677) (not b!111347) (not b!111216) (not b!111332) (not b!110521) (not d!31715) (not d!31359) (not d!31193) (not b!111282) (not d!31015) (not b!111283) (not b!111509) (not d!31719) (not b!111450) (not d!31227) (not bm!11835))
(check-sat b_and!6845 b_and!6847 (not b_next!2557) (not b_next!2559))
