; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!3494 () Bool)

(assert start!3494)

(declare-fun b!23142 () Bool)

(declare-fun b_free!759 () Bool)

(declare-fun b_next!759 () Bool)

(assert (=> b!23142 (= b_free!759 (not b_next!759))))

(declare-fun tp!3524 () Bool)

(declare-fun b_and!1481 () Bool)

(assert (=> b!23142 (= tp!3524 b_and!1481)))

(declare-fun mapNonEmpty!1025 () Bool)

(declare-fun mapRes!1025 () Bool)

(declare-fun tp!3523 () Bool)

(declare-fun e!15050 () Bool)

(assert (=> mapNonEmpty!1025 (= mapRes!1025 (and tp!3523 e!15050))))

(declare-fun mapKey!1025 () (_ BitVec 32))

(declare-datatypes ((V!1189 0))(
  ( (V!1190 (val!538 Int)) )
))
(declare-datatypes ((ValueCell!312 0))(
  ( (ValueCellFull!312 (v!1603 V!1189)) (EmptyCell!312) )
))
(declare-fun mapRest!1025 () (Array (_ BitVec 32) ValueCell!312))

(declare-datatypes ((array!1283 0))(
  ( (array!1284 (arr!607 (Array (_ BitVec 32) ValueCell!312)) (size!703 (_ BitVec 32))) )
))
(declare-datatypes ((array!1285 0))(
  ( (array!1286 (arr!608 (Array (_ BitVec 32) (_ BitVec 64))) (size!704 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!210 0))(
  ( (LongMapFixedSize!211 (defaultEntry!1743 Int) (mask!4730 (_ BitVec 32)) (extraKeys!1641 (_ BitVec 32)) (zeroValue!1666 V!1189) (minValue!1666 V!1189) (_size!150 (_ BitVec 32)) (_keys!3164 array!1285) (_values!1729 array!1283) (_vacant!150 (_ BitVec 32))) )
))
(declare-datatypes ((Cell!210 0))(
  ( (Cell!211 (v!1604 LongMapFixedSize!210)) )
))
(declare-datatypes ((LongMap!210 0))(
  ( (LongMap!211 (underlying!116 Cell!210)) )
))
(declare-fun thiss!938 () LongMap!210)

(declare-fun mapValue!1025 () ValueCell!312)

(assert (=> mapNonEmpty!1025 (= (arr!607 (_values!1729 (v!1604 (underlying!116 thiss!938)))) (store mapRest!1025 mapKey!1025 mapValue!1025))))

(declare-fun b!23136 () Bool)

(declare-fun c!2934 () Bool)

(declare-fun lt!8160 () Bool)

(assert (=> b!23136 (= c!2934 (and (not (= (bvand (extraKeys!1641 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) lt!8160))))

(declare-datatypes ((tuple2!954 0))(
  ( (tuple2!955 (_1!486 Bool) (_2!486 Cell!210)) )
))
(declare-fun e!15046 () tuple2!954)

(declare-fun e!15053 () tuple2!954)

(assert (=> b!23136 (= e!15046 e!15053)))

(declare-fun res!14332 () Bool)

(declare-fun e!15045 () Bool)

(assert (=> start!3494 (=> (not res!14332) (not e!15045))))

(declare-fun valid!102 (LongMap!210) Bool)

(assert (=> start!3494 (= res!14332 (valid!102 thiss!938))))

(assert (=> start!3494 e!15045))

(declare-fun e!15054 () Bool)

(assert (=> start!3494 e!15054))

(declare-fun b!23137 () Bool)

(declare-fun res!14333 () Bool)

(declare-fun e!15044 () Bool)

(assert (=> b!23137 (=> (not res!14333) (not e!15044))))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> b!23137 (= res!14333 (validMask!0 (mask!4730 (v!1604 (underlying!116 thiss!938)))))))

(declare-fun bm!1852 () Bool)

(declare-datatypes ((tuple2!956 0))(
  ( (tuple2!957 (_1!487 Bool) (_2!487 LongMapFixedSize!210)) )
))
(declare-fun call!1856 () tuple2!956)

(declare-fun call!1855 () tuple2!956)

(assert (=> bm!1852 (= call!1856 call!1855)))

(declare-fun b!23138 () Bool)

(declare-fun tp_is_empty!1023 () Bool)

(assert (=> b!23138 (= e!15050 tp_is_empty!1023)))

(declare-fun b!23139 () Bool)

(assert (=> b!23139 (= e!15045 e!15044)))

(declare-fun res!14331 () Bool)

(assert (=> b!23139 (=> (not res!14331) (not e!15044))))

(declare-fun e!15048 () tuple2!954)

(assert (=> b!23139 (= res!14331 (_1!486 e!15048))))

(declare-fun c!2932 () Bool)

(assert (=> b!23139 (= c!2932 (and (not lt!8160) (not (= (bvand (extraKeys!1641 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> b!23139 (= lt!8160 (= (bvand (extraKeys!1641 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000000000000001) #b00000000000000000000000000000000))))

(declare-fun lt!8161 () LongMapFixedSize!210)

(declare-fun getNewLongMapFixedSize!33 ((_ BitVec 32) Int) LongMapFixedSize!210)

(declare-fun computeNewMask!29 (LongMap!210 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!23139 (= lt!8161 (getNewLongMapFixedSize!33 (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) (defaultEntry!1743 (v!1604 (underlying!116 thiss!938)))))))

(declare-fun b!23140 () Bool)

(declare-fun lt!8162 () tuple2!956)

(assert (=> b!23140 (= lt!8162 call!1856)))

(assert (=> b!23140 (= e!15046 (tuple2!955 (_1!487 lt!8162) (Cell!211 (_2!487 lt!8162))))))

(declare-fun b!23141 () Bool)

(declare-fun lt!8163 () tuple2!956)

(assert (=> b!23141 (= e!15053 (tuple2!955 (_1!487 lt!8163) (Cell!211 (_2!487 lt!8163))))))

(assert (=> b!23141 (= lt!8163 call!1856)))

(declare-fun e!15047 () Bool)

(declare-fun e!15055 () Bool)

(declare-fun array_inv!409 (array!1285) Bool)

(declare-fun array_inv!410 (array!1283) Bool)

(assert (=> b!23142 (= e!15047 (and tp!3524 tp_is_empty!1023 (array_inv!409 (_keys!3164 (v!1604 (underlying!116 thiss!938)))) (array_inv!410 (_values!1729 (v!1604 (underlying!116 thiss!938)))) e!15055))))

(declare-fun b!23143 () Bool)

(declare-fun lt!8158 () tuple2!956)

(declare-fun lt!8159 () tuple2!956)

(assert (=> b!23143 (= e!15048 (tuple2!955 (and (_1!487 lt!8158) (_1!487 lt!8159)) (Cell!211 (_2!487 lt!8159))))))

(assert (=> b!23143 (= lt!8158 call!1855)))

(declare-fun update!32 (LongMapFixedSize!210 (_ BitVec 64) V!1189) tuple2!956)

(assert (=> b!23143 (= lt!8159 (update!32 (_2!487 lt!8158) #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))

(declare-fun b!23144 () Bool)

(declare-fun e!15051 () Bool)

(assert (=> b!23144 (= e!15054 e!15051)))

(declare-fun b!23145 () Bool)

(assert (=> b!23145 (= e!15044 (not (= (size!704 (_keys!3164 (v!1604 (underlying!116 thiss!938)))) (bvadd #b00000000000000000000000000000001 (mask!4730 (v!1604 (underlying!116 thiss!938)))))))))

(declare-fun bm!1853 () Bool)

(declare-fun c!2933 () Bool)

(assert (=> bm!1853 (= call!1855 (update!32 lt!8161 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))

(declare-fun b!23146 () Bool)

(declare-fun e!15052 () Bool)

(assert (=> b!23146 (= e!15055 (and e!15052 mapRes!1025))))

(declare-fun condMapEmpty!1025 () Bool)

(declare-fun mapDefault!1025 () ValueCell!312)

(assert (=> b!23146 (= condMapEmpty!1025 (= (arr!607 (_values!1729 (v!1604 (underlying!116 thiss!938)))) ((as const (Array (_ BitVec 32) ValueCell!312)) mapDefault!1025)))))

(declare-fun mapIsEmpty!1025 () Bool)

(assert (=> mapIsEmpty!1025 mapRes!1025))

(declare-fun b!23147 () Bool)

(assert (=> b!23147 (= e!15053 (tuple2!955 true (Cell!211 lt!8161)))))

(declare-fun b!23148 () Bool)

(assert (=> b!23148 (= e!15052 tp_is_empty!1023)))

(declare-fun b!23149 () Bool)

(assert (=> b!23149 (= e!15048 e!15046)))

(assert (=> b!23149 (= c!2933 (and (not lt!8160) (= (bvand (extraKeys!1641 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!23150 () Bool)

(assert (=> b!23150 (= e!15051 e!15047)))

(assert (= (and start!3494 res!14332) b!23139))

(assert (= (and b!23139 c!2932) b!23143))

(assert (= (and b!23139 (not c!2932)) b!23149))

(assert (= (and b!23149 c!2933) b!23140))

(assert (= (and b!23149 (not c!2933)) b!23136))

(assert (= (and b!23136 c!2934) b!23141))

(assert (= (and b!23136 (not c!2934)) b!23147))

(assert (= (or b!23140 b!23141) bm!1852))

(assert (= (or b!23143 bm!1852) bm!1853))

(assert (= (and b!23139 res!14331) b!23137))

(assert (= (and b!23137 res!14333) b!23145))

(assert (= (and b!23146 condMapEmpty!1025) mapIsEmpty!1025))

(assert (= (and b!23146 (not condMapEmpty!1025)) mapNonEmpty!1025))

(get-info :version)

(assert (= (and mapNonEmpty!1025 ((_ is ValueCellFull!312) mapValue!1025)) b!23138))

(assert (= (and b!23146 ((_ is ValueCellFull!312) mapDefault!1025)) b!23148))

(assert (= b!23142 b!23146))

(assert (= b!23150 b!23142))

(assert (= b!23144 b!23150))

(assert (= start!3494 b!23144))

(declare-fun m!16742 () Bool)

(assert (=> start!3494 m!16742))

(declare-fun m!16744 () Bool)

(assert (=> b!23142 m!16744))

(declare-fun m!16746 () Bool)

(assert (=> b!23142 m!16746))

(declare-fun m!16748 () Bool)

(assert (=> mapNonEmpty!1025 m!16748))

(declare-fun m!16750 () Bool)

(assert (=> b!23139 m!16750))

(assert (=> b!23139 m!16750))

(declare-fun m!16752 () Bool)

(assert (=> b!23139 m!16752))

(declare-fun m!16754 () Bool)

(assert (=> bm!1853 m!16754))

(declare-fun m!16756 () Bool)

(assert (=> b!23143 m!16756))

(declare-fun m!16758 () Bool)

(assert (=> b!23137 m!16758))

(check-sat tp_is_empty!1023 b_and!1481 (not b!23143) (not b_next!759) (not mapNonEmpty!1025) (not b!23139) (not bm!1853) (not b!23142) (not start!3494) (not b!23137))
(check-sat b_and!1481 (not b_next!759))
(get-model)

(declare-fun b!23280 () Bool)

(declare-fun e!15147 () Bool)

(declare-datatypes ((SeekEntryResult!54 0))(
  ( (MissingZero!54 (index!2337 (_ BitVec 32))) (Found!54 (index!2338 (_ BitVec 32))) (Intermediate!54 (undefined!866 Bool) (index!2339 (_ BitVec 32)) (x!5576 (_ BitVec 32))) (Undefined!54) (MissingVacant!54 (index!2340 (_ BitVec 32))) )
))
(declare-fun lt!8238 () SeekEntryResult!54)

(assert (=> b!23280 (= e!15147 ((_ is Undefined!54) lt!8238))))

(declare-fun bm!1908 () Bool)

(declare-fun call!1914 () Bool)

(declare-fun call!1918 () Bool)

(assert (=> bm!1908 (= call!1914 call!1918)))

(declare-fun b!23281 () Bool)

(declare-fun e!15136 () tuple2!956)

(declare-fun e!15156 () tuple2!956)

(assert (=> b!23281 (= e!15136 e!15156)))

(declare-fun c!2978 () Bool)

(declare-fun lt!8254 () SeekEntryResult!54)

(assert (=> b!23281 (= c!2978 ((_ is MissingZero!54) lt!8254))))

(declare-fun bm!1909 () Bool)

(declare-datatypes ((tuple2!960 0))(
  ( (tuple2!961 (_1!489 (_ BitVec 64)) (_2!489 V!1189)) )
))
(declare-datatypes ((List!568 0))(
  ( (Nil!565) (Cons!564 (h!1130 tuple2!960) (t!3239 List!568)) )
))
(declare-datatypes ((ListLongMap!567 0))(
  ( (ListLongMap!568 (toList!299 List!568)) )
))
(declare-fun call!1924 () ListLongMap!567)

(declare-fun call!1932 () ListLongMap!567)

(assert (=> bm!1909 (= call!1924 call!1932)))

(declare-fun b!23282 () Bool)

(declare-fun e!15157 () Bool)

(declare-fun call!1928 () ListLongMap!567)

(declare-fun call!1917 () ListLongMap!567)

(assert (=> b!23282 (= e!15157 (= call!1928 call!1917))))

(declare-fun c!2983 () Bool)

(declare-fun e!15151 () ListLongMap!567)

(declare-fun call!1920 () ListLongMap!567)

(declare-fun c!2984 () Bool)

(declare-fun bm!1910 () Bool)

(declare-fun +!45 (ListLongMap!567 tuple2!960) ListLongMap!567)

(assert (=> bm!1910 (= call!1920 (+!45 e!15151 (ite c!2984 (ite c!2983 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(declare-fun c!2985 () Bool)

(assert (=> bm!1910 (= c!2985 c!2984)))

(declare-fun b!23283 () Bool)

(declare-datatypes ((Unit!512 0))(
  ( (Unit!513) )
))
(declare-fun lt!8237 () Unit!512)

(declare-fun lt!8255 () Unit!512)

(assert (=> b!23283 (= lt!8237 lt!8255)))

(declare-fun call!1929 () ListLongMap!567)

(declare-fun call!1923 () ListLongMap!567)

(assert (=> b!23283 (= call!1929 call!1923)))

(declare-fun lt!8244 () (_ BitVec 32))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!10 (array!1285 array!1283 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!1189 V!1189 V!1189 Int) Unit!512)

(assert (=> b!23283 (= lt!8255 (lemmaChangeZeroKeyThenAddPairToListMap!10 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) lt!8244 (zeroValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8161) (defaultEntry!1743 lt!8161)))))

(assert (=> b!23283 (= lt!8244 (bvor (extraKeys!1641 lt!8161) #b00000000000000000000000000000001))))

(declare-fun e!15155 () tuple2!956)

(assert (=> b!23283 (= e!15155 (tuple2!957 true (LongMapFixedSize!211 (defaultEntry!1743 lt!8161) (mask!4730 lt!8161) (bvor (extraKeys!1641 lt!8161) #b00000000000000000000000000000001) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8161) (_size!150 lt!8161) (_keys!3164 lt!8161) (_values!1729 lt!8161) (_vacant!150 lt!8161))))))

(declare-fun b!23284 () Bool)

(declare-fun e!15146 () Bool)

(declare-fun lt!8246 () SeekEntryResult!54)

(assert (=> b!23284 (= e!15146 ((_ is Undefined!54) lt!8246))))

(declare-fun b!23285 () Bool)

(declare-fun e!15150 () Bool)

(declare-fun lt!8262 () SeekEntryResult!54)

(assert (=> b!23285 (= e!15150 (= (select (arr!608 (_keys!3164 lt!8161)) (index!2338 lt!8262)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!23286 () Bool)

(declare-fun e!15137 () Bool)

(declare-fun call!1921 () Bool)

(assert (=> b!23286 (= e!15137 (not call!1921))))

(declare-fun b!23287 () Bool)

(declare-fun e!15142 () tuple2!956)

(assert (=> b!23287 (= e!15142 e!15155)))

(assert (=> b!23287 (= c!2983 (= (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!23288 () Bool)

(declare-fun e!15143 () Unit!512)

(declare-fun lt!8252 () Unit!512)

(assert (=> b!23288 (= e!15143 lt!8252)))

(declare-fun call!1915 () Unit!512)

(assert (=> b!23288 (= lt!8252 call!1915)))

(declare-fun lt!8259 () SeekEntryResult!54)

(declare-fun call!1922 () SeekEntryResult!54)

(assert (=> b!23288 (= lt!8259 call!1922)))

(declare-fun res!14377 () Bool)

(assert (=> b!23288 (= res!14377 ((_ is Found!54) lt!8259))))

(declare-fun e!15144 () Bool)

(assert (=> b!23288 (=> (not res!14377) (not e!15144))))

(assert (=> b!23288 e!15144))

(declare-fun b!23289 () Bool)

(declare-fun res!14373 () Bool)

(declare-fun e!15154 () Bool)

(assert (=> b!23289 (=> (not res!14373) (not e!15154))))

(declare-fun call!1933 () Bool)

(assert (=> b!23289 (= res!14373 call!1933)))

(declare-fun e!15152 () Bool)

(assert (=> b!23289 (= e!15152 e!15154)))

(declare-fun e!15149 () Bool)

(declare-fun b!23290 () Bool)

(assert (=> b!23290 (= e!15149 (= call!1928 (+!45 call!1917 (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(declare-fun b!23291 () Bool)

(declare-fun res!14376 () Bool)

(assert (=> b!23291 (=> (not res!14376) (not e!15137))))

(assert (=> b!23291 (= res!14376 (= (select (arr!608 (_keys!3164 lt!8161)) (index!2337 lt!8238)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!1911 () Bool)

(declare-fun call!1931 () Bool)

(assert (=> bm!1911 (= call!1933 call!1931)))

(declare-fun b!23292 () Bool)

(declare-fun res!14374 () Bool)

(declare-fun call!1926 () Bool)

(assert (=> b!23292 (= res!14374 call!1926)))

(assert (=> b!23292 (=> (not res!14374) (not e!15150))))

(declare-fun bm!1912 () Bool)

(declare-fun arrayContainsKey!0 (array!1285 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> bm!1912 (= call!1918 (arrayContainsKey!0 (_keys!3164 lt!8161) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) #b00000000000000000000000000000000))))

(declare-fun b!23293 () Bool)

(declare-fun c!2972 () Bool)

(assert (=> b!23293 (= c!2972 ((_ is MissingVacant!54) lt!8246))))

(assert (=> b!23293 (= e!15152 e!15146)))

(declare-fun b!23294 () Bool)

(declare-fun res!14372 () Bool)

(assert (=> b!23294 (= res!14372 (= (select (arr!608 (_keys!3164 lt!8161)) (index!2340 lt!8238)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!15138 () Bool)

(assert (=> b!23294 (=> (not res!14372) (not e!15138))))

(declare-fun bm!1913 () Bool)

(assert (=> bm!1913 (= call!1929 call!1920)))

(declare-fun b!23295 () Bool)

(assert (=> b!23295 (= e!15154 (not call!1914))))

(declare-fun bm!1914 () Bool)

(declare-fun call!1912 () SeekEntryResult!54)

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!1285 (_ BitVec 32)) SeekEntryResult!54)

(assert (=> bm!1914 (= call!1912 (seekEntryOrOpen!0 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (_keys!3164 lt!8161) (mask!4730 lt!8161)))))

(declare-fun bm!1915 () Bool)

(assert (=> bm!1915 (= call!1921 call!1918)))

(declare-fun b!23296 () Bool)

(declare-fun e!15139 () ListLongMap!567)

(assert (=> b!23296 (= e!15139 call!1924)))

(declare-fun b!23297 () Bool)

(declare-fun lt!8242 () tuple2!956)

(declare-fun call!1930 () tuple2!956)

(assert (=> b!23297 (= lt!8242 call!1930)))

(assert (=> b!23297 (= e!15156 (tuple2!957 (_1!487 lt!8242) (_2!487 lt!8242)))))

(declare-fun b!23298 () Bool)

(declare-fun e!15145 () tuple2!956)

(assert (=> b!23298 (= e!15142 e!15145)))

(assert (=> b!23298 (= lt!8254 (seekEntryOrOpen!0 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (_keys!3164 lt!8161) (mask!4730 lt!8161)))))

(declare-fun c!2982 () Bool)

(assert (=> b!23298 (= c!2982 ((_ is Undefined!54) lt!8254))))

(declare-fun b!23299 () Bool)

(declare-fun e!15140 () Unit!512)

(declare-fun Unit!514 () Unit!512)

(assert (=> b!23299 (= e!15140 Unit!514)))

(declare-fun lt!8251 () Unit!512)

(assert (=> b!23299 (= lt!8251 call!1915)))

(declare-fun call!1911 () SeekEntryResult!54)

(assert (=> b!23299 (= lt!8262 call!1911)))

(declare-fun res!14379 () Bool)

(assert (=> b!23299 (= res!14379 ((_ is Found!54) lt!8262))))

(assert (=> b!23299 (=> (not res!14379) (not e!15150))))

(assert (=> b!23299 e!15150))

(declare-fun lt!8258 () Unit!512)

(assert (=> b!23299 (= lt!8258 lt!8251)))

(assert (=> b!23299 false))

(declare-fun b!23300 () Bool)

(declare-fun res!14384 () Bool)

(assert (=> b!23300 (=> (not res!14384) (not e!15154))))

(assert (=> b!23300 (= res!14384 (= (select (arr!608 (_keys!3164 lt!8161)) (index!2337 lt!8246)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!23301 () Bool)

(declare-fun lt!8245 () Unit!512)

(declare-fun lt!8240 () Unit!512)

(assert (=> b!23301 (= lt!8245 lt!8240)))

(declare-fun call!1913 () Bool)

(assert (=> b!23301 call!1913))

(declare-fun lt!8260 () array!1283)

(declare-fun lemmaValidKeyInArrayIsInListMap!10 (array!1285 array!1283 (_ BitVec 32) (_ BitVec 32) V!1189 V!1189 (_ BitVec 32) Int) Unit!512)

(assert (=> b!23301 (= lt!8240 (lemmaValidKeyInArrayIsInListMap!10 (_keys!3164 lt!8161) lt!8260 (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) (index!2338 lt!8254) (defaultEntry!1743 lt!8161)))))

(assert (=> b!23301 (= lt!8260 (array!1284 (store (arr!607 (_values!1729 lt!8161)) (index!2338 lt!8254) (ValueCellFull!312 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (size!703 (_values!1729 lt!8161))))))

(declare-fun lt!8243 () Unit!512)

(declare-fun lt!8239 () Unit!512)

(assert (=> b!23301 (= lt!8243 lt!8239)))

(assert (=> b!23301 (= call!1920 call!1924)))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!10 (array!1285 array!1283 (_ BitVec 32) (_ BitVec 32) V!1189 V!1189 (_ BitVec 32) (_ BitVec 64) V!1189 Int) Unit!512)

(assert (=> b!23301 (= lt!8239 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!10 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) (index!2338 lt!8254) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (defaultEntry!1743 lt!8161)))))

(declare-fun lt!8261 () Unit!512)

(assert (=> b!23301 (= lt!8261 e!15143)))

(declare-fun c!2976 () Bool)

(declare-fun contains!230 (ListLongMap!567 (_ BitVec 64)) Bool)

(declare-fun getCurrentListMap!130 (array!1285 array!1283 (_ BitVec 32) (_ BitVec 32) V!1189 V!1189 (_ BitVec 32) Int) ListLongMap!567)

(assert (=> b!23301 (= c!2976 (contains!230 (getCurrentListMap!130 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!23301 (= e!15156 (tuple2!957 true (LongMapFixedSize!211 (defaultEntry!1743 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) (_size!150 lt!8161) (_keys!3164 lt!8161) (array!1284 (store (arr!607 (_values!1729 lt!8161)) (index!2338 lt!8254) (ValueCellFull!312 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (size!703 (_values!1729 lt!8161))) (_vacant!150 lt!8161))))))

(declare-fun b!23302 () Bool)

(declare-fun call!1916 () ListLongMap!567)

(assert (=> b!23302 (= e!15151 call!1916)))

(declare-fun b!23303 () Bool)

(assert (=> b!23303 (= e!15151 (getCurrentListMap!130 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))))

(declare-fun bm!1916 () Bool)

(declare-fun c!2975 () Bool)

(declare-fun updateHelperNewKey!10 (LongMapFixedSize!210 (_ BitVec 64) V!1189 (_ BitVec 32)) tuple2!956)

(assert (=> bm!1916 (= call!1930 (updateHelperNewKey!10 lt!8161 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254))))))

(declare-fun bm!1917 () Bool)

(declare-fun call!1925 () ListLongMap!567)

(assert (=> bm!1917 (= call!1916 call!1925)))

(declare-fun b!23304 () Bool)

(assert (=> b!23304 (= e!15139 call!1925)))

(declare-fun c!2977 () Bool)

(declare-fun c!2981 () Bool)

(declare-fun c!2973 () Bool)

(declare-fun bm!1918 () Bool)

(declare-fun call!1919 () Bool)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!1918 (= call!1919 (inRange!0 (ite c!2982 (ite c!2977 (index!2338 lt!8262) (ite c!2973 (index!2337 lt!8238) (index!2340 lt!8238))) (ite c!2976 (index!2338 lt!8259) (ite c!2981 (index!2337 lt!8246) (index!2340 lt!8246)))) (mask!4730 lt!8161)))))

(declare-fun b!23305 () Bool)

(declare-fun res!14371 () Bool)

(assert (=> b!23305 (=> (not res!14371) (not e!15137))))

(declare-fun call!1934 () Bool)

(assert (=> b!23305 (= res!14371 call!1934)))

(declare-fun e!15153 () Bool)

(assert (=> b!23305 (= e!15153 e!15137)))

(declare-fun bm!1919 () Bool)

(assert (=> bm!1919 (= call!1923 call!1932)))

(declare-fun b!23306 () Bool)

(assert (=> b!23306 (= c!2975 ((_ is MissingVacant!54) lt!8254))))

(assert (=> b!23306 (= e!15145 e!15136)))

(declare-fun b!23307 () Bool)

(assert (=> b!23307 (= e!15147 e!15138)))

(declare-fun res!14383 () Bool)

(assert (=> b!23307 (= res!14383 call!1934)))

(assert (=> b!23307 (=> (not res!14383) (not e!15138))))

(declare-fun b!23308 () Bool)

(declare-fun c!2979 () Bool)

(assert (=> b!23308 (= c!2979 ((_ is MissingVacant!54) lt!8238))))

(assert (=> b!23308 (= e!15153 e!15147)))

(declare-fun lt!8241 () (_ BitVec 32))

(declare-fun bm!1920 () Bool)

(assert (=> bm!1920 (= call!1932 (getCurrentListMap!130 (_keys!3164 lt!8161) (ite (or c!2984 c!2982) (_values!1729 lt!8161) (array!1284 (store (arr!607 (_values!1729 lt!8161)) (index!2338 lt!8254) (ValueCellFull!312 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (size!703 (_values!1729 lt!8161)))) (mask!4730 lt!8161) (ite c!2984 (ite c!2983 lt!8244 lt!8241) (extraKeys!1641 lt!8161)) (ite (and c!2984 c!2983) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (zeroValue!1666 lt!8161)) (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161)) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))))

(declare-fun call!1927 () Unit!512)

(declare-fun bm!1921 () Bool)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!10 (array!1285 array!1283 (_ BitVec 32) (_ BitVec 32) V!1189 V!1189 (_ BitVec 64) Int) Unit!512)

(assert (=> bm!1921 (= call!1927 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!10 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (defaultEntry!1743 lt!8161)))))

(declare-fun bm!1922 () Bool)

(assert (=> bm!1922 (= call!1922 call!1912)))

(declare-fun b!23309 () Bool)

(declare-fun e!15141 () Bool)

(assert (=> b!23309 (= e!15141 e!15157)))

(declare-fun c!2974 () Bool)

(declare-fun lt!8249 () tuple2!956)

(assert (=> b!23309 (= c!2974 (_1!487 lt!8249))))

(declare-fun b!23310 () Bool)

(declare-fun e!15148 () Bool)

(assert (=> b!23310 (= e!15146 e!15148)))

(declare-fun res!14375 () Bool)

(assert (=> b!23310 (= res!14375 call!1933)))

(assert (=> b!23310 (=> (not res!14375) (not e!15148))))

(declare-fun bm!1923 () Bool)

(assert (=> bm!1923 (= call!1911 call!1912)))

(declare-fun b!23311 () Bool)

(declare-fun lt!8236 () tuple2!956)

(assert (=> b!23311 (= e!15136 (tuple2!957 (_1!487 lt!8236) (_2!487 lt!8236)))))

(assert (=> b!23311 (= lt!8236 call!1930)))

(declare-fun bm!1924 () Bool)

(declare-fun map!407 (LongMapFixedSize!210) ListLongMap!567)

(assert (=> bm!1924 (= call!1928 (map!407 (_2!487 lt!8249)))))

(declare-fun b!23312 () Bool)

(declare-fun lt!8257 () Unit!512)

(assert (=> b!23312 (= e!15140 lt!8257)))

(assert (=> b!23312 (= lt!8257 call!1927)))

(assert (=> b!23312 (= lt!8238 call!1911)))

(assert (=> b!23312 (= c!2973 ((_ is MissingZero!54) lt!8238))))

(assert (=> b!23312 e!15153))

(declare-fun d!3985 () Bool)

(assert (=> d!3985 e!15141))

(declare-fun res!14380 () Bool)

(assert (=> d!3985 (=> (not res!14380) (not e!15141))))

(declare-fun valid!104 (LongMapFixedSize!210) Bool)

(assert (=> d!3985 (= res!14380 (valid!104 (_2!487 lt!8249)))))

(assert (=> d!3985 (= lt!8249 e!15142)))

(assert (=> d!3985 (= c!2984 (= (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (bvneg (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!3985 (valid!104 lt!8161)))

(assert (=> d!3985 (= (update!32 lt!8161 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) lt!8249)))

(declare-fun bm!1925 () Bool)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!10 (array!1285 array!1283 (_ BitVec 32) (_ BitVec 32) V!1189 V!1189 (_ BitVec 64) Int) Unit!512)

(assert (=> bm!1925 (= call!1915 (lemmaInListMapThenSeekEntryOrOpenFindsIt!10 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (defaultEntry!1743 lt!8161)))))

(declare-fun bm!1926 () Bool)

(assert (=> bm!1926 (= call!1934 call!1926)))

(declare-fun bm!1927 () Bool)

(assert (=> bm!1927 (= call!1917 (map!407 lt!8161))))

(declare-fun bm!1928 () Bool)

(declare-fun c!2980 () Bool)

(assert (=> bm!1928 (= c!2980 c!2982)))

(assert (=> bm!1928 (= call!1913 (contains!230 e!15139 (ite c!2982 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (select (arr!608 (_keys!3164 lt!8161)) (index!2338 lt!8254)))))))

(declare-fun b!23313 () Bool)

(declare-fun Unit!515 () Unit!512)

(assert (=> b!23313 (= e!15143 Unit!515)))

(declare-fun lt!8256 () Unit!512)

(assert (=> b!23313 (= lt!8256 call!1927)))

(assert (=> b!23313 (= lt!8246 call!1922)))

(assert (=> b!23313 (= c!2981 ((_ is MissingZero!54) lt!8246))))

(assert (=> b!23313 e!15152))

(declare-fun lt!8248 () Unit!512)

(assert (=> b!23313 (= lt!8248 lt!8256)))

(assert (=> b!23313 false))

(declare-fun bm!1929 () Bool)

(assert (=> bm!1929 (= call!1931 call!1919)))

(declare-fun b!23314 () Bool)

(declare-fun lt!8247 () Unit!512)

(declare-fun lt!8253 () Unit!512)

(assert (=> b!23314 (= lt!8247 lt!8253)))

(assert (=> b!23314 (= call!1929 call!1923)))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!10 (array!1285 array!1283 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!1189 V!1189 V!1189 Int) Unit!512)

(assert (=> b!23314 (= lt!8253 (lemmaChangeLongMinValueKeyThenAddPairToListMap!10 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) lt!8241 (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (defaultEntry!1743 lt!8161)))))

(assert (=> b!23314 (= lt!8241 (bvor (extraKeys!1641 lt!8161) #b00000000000000000000000000000010))))

(assert (=> b!23314 (= e!15155 (tuple2!957 true (LongMapFixedSize!211 (defaultEntry!1743 lt!8161) (mask!4730 lt!8161) (bvor (extraKeys!1641 lt!8161) #b00000000000000000000000000000010) (zeroValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (_size!150 lt!8161) (_keys!3164 lt!8161) (_values!1729 lt!8161) (_vacant!150 lt!8161))))))

(declare-fun b!23315 () Bool)

(assert (=> b!23315 (= e!15144 (= (select (arr!608 (_keys!3164 lt!8161)) (index!2338 lt!8259)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!23316 () Bool)

(assert (=> b!23316 (= e!15138 (not call!1921))))

(declare-fun bm!1930 () Bool)

(assert (=> bm!1930 (= call!1926 call!1919)))

(declare-fun b!23317 () Bool)

(declare-fun res!14381 () Bool)

(assert (=> b!23317 (= res!14381 call!1931)))

(assert (=> b!23317 (=> (not res!14381) (not e!15144))))

(declare-fun b!23318 () Bool)

(assert (=> b!23318 (= e!15157 e!15149)))

(declare-fun res!14382 () Bool)

(assert (=> b!23318 (= res!14382 (contains!230 call!1928 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!23318 (=> (not res!14382) (not e!15149))))

(declare-fun b!23319 () Bool)

(declare-fun lt!8250 () Unit!512)

(assert (=> b!23319 (= lt!8250 e!15140)))

(assert (=> b!23319 (= c!2977 call!1913)))

(assert (=> b!23319 (= e!15145 (tuple2!957 false lt!8161))))

(declare-fun b!23320 () Bool)

(declare-fun res!14378 () Bool)

(assert (=> b!23320 (= res!14378 (= (select (arr!608 (_keys!3164 lt!8161)) (index!2340 lt!8246)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!23320 (=> (not res!14378) (not e!15148))))

(declare-fun bm!1931 () Bool)

(assert (=> bm!1931 (= call!1925 (getCurrentListMap!130 (_keys!3164 lt!8161) (ite c!2984 (_values!1729 lt!8161) lt!8260) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))))

(declare-fun b!23321 () Bool)

(assert (=> b!23321 (= e!15148 (not call!1914))))

(assert (= (and d!3985 c!2984) b!23287))

(assert (= (and d!3985 (not c!2984)) b!23298))

(assert (= (and b!23287 c!2983) b!23283))

(assert (= (and b!23287 (not c!2983)) b!23314))

(assert (= (or b!23283 b!23314) bm!1919))

(assert (= (or b!23283 b!23314) bm!1917))

(assert (= (or b!23283 b!23314) bm!1913))

(assert (= (and b!23298 c!2982) b!23319))

(assert (= (and b!23298 (not c!2982)) b!23306))

(assert (= (and b!23319 c!2977) b!23299))

(assert (= (and b!23319 (not c!2977)) b!23312))

(assert (= (and b!23299 res!14379) b!23292))

(assert (= (and b!23292 res!14374) b!23285))

(assert (= (and b!23312 c!2973) b!23305))

(assert (= (and b!23312 (not c!2973)) b!23308))

(assert (= (and b!23305 res!14371) b!23291))

(assert (= (and b!23291 res!14376) b!23286))

(assert (= (and b!23308 c!2979) b!23307))

(assert (= (and b!23308 (not c!2979)) b!23280))

(assert (= (and b!23307 res!14383) b!23294))

(assert (= (and b!23294 res!14372) b!23316))

(assert (= (or b!23305 b!23307) bm!1926))

(assert (= (or b!23286 b!23316) bm!1915))

(assert (= (or b!23292 bm!1926) bm!1930))

(assert (= (or b!23299 b!23312) bm!1923))

(assert (= (and b!23306 c!2975) b!23311))

(assert (= (and b!23306 (not c!2975)) b!23281))

(assert (= (and b!23281 c!2978) b!23297))

(assert (= (and b!23281 (not c!2978)) b!23301))

(assert (= (and b!23301 c!2976) b!23288))

(assert (= (and b!23301 (not c!2976)) b!23313))

(assert (= (and b!23288 res!14377) b!23317))

(assert (= (and b!23317 res!14381) b!23315))

(assert (= (and b!23313 c!2981) b!23289))

(assert (= (and b!23313 (not c!2981)) b!23293))

(assert (= (and b!23289 res!14373) b!23300))

(assert (= (and b!23300 res!14384) b!23295))

(assert (= (and b!23293 c!2972) b!23310))

(assert (= (and b!23293 (not c!2972)) b!23284))

(assert (= (and b!23310 res!14375) b!23320))

(assert (= (and b!23320 res!14378) b!23321))

(assert (= (or b!23289 b!23310) bm!1911))

(assert (= (or b!23295 b!23321) bm!1908))

(assert (= (or b!23317 bm!1911) bm!1929))

(assert (= (or b!23288 b!23313) bm!1922))

(assert (= (or b!23311 b!23297) bm!1916))

(assert (= (or bm!1923 bm!1922) bm!1914))

(assert (= (or bm!1915 bm!1908) bm!1912))

(assert (= (or b!23319 b!23301) bm!1909))

(assert (= (or bm!1930 bm!1929) bm!1918))

(assert (= (or b!23299 b!23288) bm!1925))

(assert (= (or b!23312 b!23313) bm!1921))

(assert (= (or b!23319 b!23301) bm!1928))

(assert (= (and bm!1928 c!2980) b!23296))

(assert (= (and bm!1928 (not c!2980)) b!23304))

(assert (= (or bm!1919 bm!1909) bm!1920))

(assert (= (or bm!1917 b!23304) bm!1931))

(assert (= (or bm!1913 b!23301) bm!1910))

(assert (= (and bm!1910 c!2985) b!23302))

(assert (= (and bm!1910 (not c!2985)) b!23303))

(assert (= (and d!3985 res!14380) b!23309))

(assert (= (and b!23309 c!2974) b!23318))

(assert (= (and b!23309 (not c!2974)) b!23282))

(assert (= (and b!23318 res!14382) b!23290))

(assert (= (or b!23318 b!23290 b!23282) bm!1924))

(assert (= (or b!23290 b!23282) bm!1927))

(declare-fun m!16778 () Bool)

(assert (=> b!23315 m!16778))

(declare-fun m!16780 () Bool)

(assert (=> b!23320 m!16780))

(declare-fun m!16782 () Bool)

(assert (=> b!23294 m!16782))

(declare-fun m!16784 () Bool)

(assert (=> b!23283 m!16784))

(declare-fun m!16786 () Bool)

(assert (=> b!23318 m!16786))

(declare-fun m!16788 () Bool)

(assert (=> bm!1925 m!16788))

(declare-fun m!16790 () Bool)

(assert (=> b!23303 m!16790))

(declare-fun m!16792 () Bool)

(assert (=> bm!1920 m!16792))

(declare-fun m!16794 () Bool)

(assert (=> bm!1920 m!16794))

(declare-fun m!16796 () Bool)

(assert (=> d!3985 m!16796))

(declare-fun m!16798 () Bool)

(assert (=> d!3985 m!16798))

(declare-fun m!16800 () Bool)

(assert (=> bm!1927 m!16800))

(declare-fun m!16802 () Bool)

(assert (=> b!23285 m!16802))

(declare-fun m!16804 () Bool)

(assert (=> bm!1912 m!16804))

(declare-fun m!16806 () Bool)

(assert (=> bm!1928 m!16806))

(declare-fun m!16808 () Bool)

(assert (=> bm!1928 m!16808))

(declare-fun m!16810 () Bool)

(assert (=> bm!1931 m!16810))

(assert (=> b!23301 m!16790))

(assert (=> b!23301 m!16792))

(declare-fun m!16812 () Bool)

(assert (=> b!23301 m!16812))

(assert (=> b!23301 m!16790))

(declare-fun m!16814 () Bool)

(assert (=> b!23301 m!16814))

(declare-fun m!16816 () Bool)

(assert (=> b!23301 m!16816))

(declare-fun m!16818 () Bool)

(assert (=> bm!1916 m!16818))

(declare-fun m!16820 () Bool)

(assert (=> bm!1910 m!16820))

(declare-fun m!16822 () Bool)

(assert (=> b!23291 m!16822))

(declare-fun m!16824 () Bool)

(assert (=> bm!1918 m!16824))

(declare-fun m!16826 () Bool)

(assert (=> bm!1924 m!16826))

(declare-fun m!16828 () Bool)

(assert (=> bm!1914 m!16828))

(declare-fun m!16830 () Bool)

(assert (=> b!23314 m!16830))

(assert (=> b!23298 m!16828))

(declare-fun m!16832 () Bool)

(assert (=> b!23290 m!16832))

(declare-fun m!16834 () Bool)

(assert (=> b!23300 m!16834))

(declare-fun m!16836 () Bool)

(assert (=> bm!1921 m!16836))

(assert (=> bm!1853 d!3985))

(declare-fun d!3987 () Bool)

(assert (=> d!3987 (= (valid!102 thiss!938) (valid!104 (v!1604 (underlying!116 thiss!938))))))

(declare-fun bs!949 () Bool)

(assert (= bs!949 d!3987))

(declare-fun m!16838 () Bool)

(assert (=> bs!949 m!16838))

(assert (=> start!3494 d!3987))

(declare-fun d!3989 () Bool)

(assert (=> d!3989 (= (array_inv!409 (_keys!3164 (v!1604 (underlying!116 thiss!938)))) (bvsge (size!704 (_keys!3164 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000000))))

(assert (=> b!23142 d!3989))

(declare-fun d!3991 () Bool)

(assert (=> d!3991 (= (array_inv!410 (_values!1729 (v!1604 (underlying!116 thiss!938)))) (bvsge (size!703 (_values!1729 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000000))))

(assert (=> b!23142 d!3991))

(declare-fun d!3993 () Bool)

(assert (=> d!3993 (= (validMask!0 (mask!4730 (v!1604 (underlying!116 thiss!938)))) (and (or (= (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000000000000111) (= (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000000000001111) (= (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000000000011111) (= (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000000000111111) (= (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000000001111111) (= (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000000011111111) (= (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000000111111111) (= (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000001111111111) (= (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000011111111111) (= (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000111111111111) (= (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00000000000000000001111111111111) (= (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00000000000000000011111111111111) (= (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00000000000000000111111111111111) (= (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00000000000000001111111111111111) (= (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00000000000000011111111111111111) (= (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00000000000000111111111111111111) (= (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00000000000001111111111111111111) (= (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00000000000011111111111111111111) (= (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00000000000111111111111111111111) (= (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00000000001111111111111111111111) (= (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00000000011111111111111111111111) (= (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00000000111111111111111111111111) (= (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00000001111111111111111111111111) (= (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00000011111111111111111111111111) (= (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00000111111111111111111111111111) (= (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00001111111111111111111111111111) (= (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00011111111111111111111111111111) (= (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00111111111111111111111111111111)) (bvsle (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00111111111111111111111111111111)))))

(assert (=> b!23137 d!3993))

(declare-fun b!23322 () Bool)

(declare-fun e!15169 () Bool)

(declare-fun lt!8265 () SeekEntryResult!54)

(assert (=> b!23322 (= e!15169 ((_ is Undefined!54) lt!8265))))

(declare-fun bm!1932 () Bool)

(declare-fun call!1938 () Bool)

(declare-fun call!1942 () Bool)

(assert (=> bm!1932 (= call!1938 call!1942)))

(declare-fun b!23323 () Bool)

(declare-fun e!15158 () tuple2!956)

(declare-fun e!15178 () tuple2!956)

(assert (=> b!23323 (= e!15158 e!15178)))

(declare-fun c!2992 () Bool)

(declare-fun lt!8281 () SeekEntryResult!54)

(assert (=> b!23323 (= c!2992 ((_ is MissingZero!54) lt!8281))))

(declare-fun bm!1933 () Bool)

(declare-fun call!1948 () ListLongMap!567)

(declare-fun call!1956 () ListLongMap!567)

(assert (=> bm!1933 (= call!1948 call!1956)))

(declare-fun b!23324 () Bool)

(declare-fun e!15179 () Bool)

(declare-fun call!1952 () ListLongMap!567)

(declare-fun call!1941 () ListLongMap!567)

(assert (=> b!23324 (= e!15179 (= call!1952 call!1941))))

(declare-fun c!2998 () Bool)

(declare-fun e!15173 () ListLongMap!567)

(declare-fun call!1944 () ListLongMap!567)

(declare-fun c!2997 () Bool)

(declare-fun bm!1934 () Bool)

(assert (=> bm!1934 (= call!1944 (+!45 e!15173 (ite c!2998 (ite c!2997 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(declare-fun c!2999 () Bool)

(assert (=> bm!1934 (= c!2999 c!2998)))

(declare-fun b!23325 () Bool)

(declare-fun lt!8264 () Unit!512)

(declare-fun lt!8282 () Unit!512)

(assert (=> b!23325 (= lt!8264 lt!8282)))

(declare-fun call!1953 () ListLongMap!567)

(declare-fun call!1947 () ListLongMap!567)

(assert (=> b!23325 (= call!1953 call!1947)))

(declare-fun lt!8271 () (_ BitVec 32))

(assert (=> b!23325 (= lt!8282 (lemmaChangeZeroKeyThenAddPairToListMap!10 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) lt!8271 (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (_2!487 lt!8158)) (defaultEntry!1743 (_2!487 lt!8158))))))

(assert (=> b!23325 (= lt!8271 (bvor (extraKeys!1641 (_2!487 lt!8158)) #b00000000000000000000000000000001))))

(declare-fun e!15177 () tuple2!956)

(assert (=> b!23325 (= e!15177 (tuple2!957 true (LongMapFixedSize!211 (defaultEntry!1743 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (bvor (extraKeys!1641 (_2!487 lt!8158)) #b00000000000000000000000000000001) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (_2!487 lt!8158)) (_size!150 (_2!487 lt!8158)) (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (_vacant!150 (_2!487 lt!8158)))))))

(declare-fun b!23326 () Bool)

(declare-fun e!15168 () Bool)

(declare-fun lt!8273 () SeekEntryResult!54)

(assert (=> b!23326 (= e!15168 ((_ is Undefined!54) lt!8273))))

(declare-fun b!23327 () Bool)

(declare-fun e!15172 () Bool)

(declare-fun lt!8289 () SeekEntryResult!54)

(assert (=> b!23327 (= e!15172 (= (select (arr!608 (_keys!3164 (_2!487 lt!8158))) (index!2338 lt!8289)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!23328 () Bool)

(declare-fun e!15159 () Bool)

(declare-fun call!1945 () Bool)

(assert (=> b!23328 (= e!15159 (not call!1945))))

(declare-fun b!23329 () Bool)

(declare-fun e!15164 () tuple2!956)

(assert (=> b!23329 (= e!15164 e!15177)))

(assert (=> b!23329 (= c!2997 (= #b1000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!23330 () Bool)

(declare-fun e!15165 () Unit!512)

(declare-fun lt!8279 () Unit!512)

(assert (=> b!23330 (= e!15165 lt!8279)))

(declare-fun call!1939 () Unit!512)

(assert (=> b!23330 (= lt!8279 call!1939)))

(declare-fun lt!8286 () SeekEntryResult!54)

(declare-fun call!1946 () SeekEntryResult!54)

(assert (=> b!23330 (= lt!8286 call!1946)))

(declare-fun res!14391 () Bool)

(assert (=> b!23330 (= res!14391 ((_ is Found!54) lt!8286))))

(declare-fun e!15166 () Bool)

(assert (=> b!23330 (=> (not res!14391) (not e!15166))))

(assert (=> b!23330 e!15166))

(declare-fun b!23331 () Bool)

(declare-fun res!14387 () Bool)

(declare-fun e!15176 () Bool)

(assert (=> b!23331 (=> (not res!14387) (not e!15176))))

(declare-fun call!1957 () Bool)

(assert (=> b!23331 (= res!14387 call!1957)))

(declare-fun e!15174 () Bool)

(assert (=> b!23331 (= e!15174 e!15176)))

(declare-fun b!23332 () Bool)

(declare-fun e!15171 () Bool)

(assert (=> b!23332 (= e!15171 (= call!1952 (+!45 call!1941 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(declare-fun b!23333 () Bool)

(declare-fun res!14390 () Bool)

(assert (=> b!23333 (=> (not res!14390) (not e!15159))))

(assert (=> b!23333 (= res!14390 (= (select (arr!608 (_keys!3164 (_2!487 lt!8158))) (index!2337 lt!8265)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!1935 () Bool)

(declare-fun call!1955 () Bool)

(assert (=> bm!1935 (= call!1957 call!1955)))

(declare-fun b!23334 () Bool)

(declare-fun res!14388 () Bool)

(declare-fun call!1950 () Bool)

(assert (=> b!23334 (= res!14388 call!1950)))

(assert (=> b!23334 (=> (not res!14388) (not e!15172))))

(declare-fun bm!1936 () Bool)

(assert (=> bm!1936 (= call!1942 (arrayContainsKey!0 (_keys!3164 (_2!487 lt!8158)) #b1000000000000000000000000000000000000000000000000000000000000000 #b00000000000000000000000000000000))))

(declare-fun b!23335 () Bool)

(declare-fun c!2986 () Bool)

(assert (=> b!23335 (= c!2986 ((_ is MissingVacant!54) lt!8273))))

(assert (=> b!23335 (= e!15174 e!15168)))

(declare-fun b!23336 () Bool)

(declare-fun res!14386 () Bool)

(assert (=> b!23336 (= res!14386 (= (select (arr!608 (_keys!3164 (_2!487 lt!8158))) (index!2340 lt!8265)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!15160 () Bool)

(assert (=> b!23336 (=> (not res!14386) (not e!15160))))

(declare-fun bm!1937 () Bool)

(assert (=> bm!1937 (= call!1953 call!1944)))

(declare-fun b!23337 () Bool)

(assert (=> b!23337 (= e!15176 (not call!1938))))

(declare-fun bm!1938 () Bool)

(declare-fun call!1936 () SeekEntryResult!54)

(assert (=> bm!1938 (= call!1936 (seekEntryOrOpen!0 #b1000000000000000000000000000000000000000000000000000000000000000 (_keys!3164 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158))))))

(declare-fun bm!1939 () Bool)

(assert (=> bm!1939 (= call!1945 call!1942)))

(declare-fun b!23338 () Bool)

(declare-fun e!15161 () ListLongMap!567)

(assert (=> b!23338 (= e!15161 call!1948)))

(declare-fun b!23339 () Bool)

(declare-fun lt!8269 () tuple2!956)

(declare-fun call!1954 () tuple2!956)

(assert (=> b!23339 (= lt!8269 call!1954)))

(assert (=> b!23339 (= e!15178 (tuple2!957 (_1!487 lt!8269) (_2!487 lt!8269)))))

(declare-fun b!23340 () Bool)

(declare-fun e!15167 () tuple2!956)

(assert (=> b!23340 (= e!15164 e!15167)))

(assert (=> b!23340 (= lt!8281 (seekEntryOrOpen!0 #b1000000000000000000000000000000000000000000000000000000000000000 (_keys!3164 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158))))))

(declare-fun c!2996 () Bool)

(assert (=> b!23340 (= c!2996 ((_ is Undefined!54) lt!8281))))

(declare-fun b!23341 () Bool)

(declare-fun e!15162 () Unit!512)

(declare-fun Unit!516 () Unit!512)

(assert (=> b!23341 (= e!15162 Unit!516)))

(declare-fun lt!8278 () Unit!512)

(assert (=> b!23341 (= lt!8278 call!1939)))

(declare-fun call!1935 () SeekEntryResult!54)

(assert (=> b!23341 (= lt!8289 call!1935)))

(declare-fun res!14393 () Bool)

(assert (=> b!23341 (= res!14393 ((_ is Found!54) lt!8289))))

(assert (=> b!23341 (=> (not res!14393) (not e!15172))))

(assert (=> b!23341 e!15172))

(declare-fun lt!8285 () Unit!512)

(assert (=> b!23341 (= lt!8285 lt!8278)))

(assert (=> b!23341 false))

(declare-fun b!23342 () Bool)

(declare-fun res!14398 () Bool)

(assert (=> b!23342 (=> (not res!14398) (not e!15176))))

(assert (=> b!23342 (= res!14398 (= (select (arr!608 (_keys!3164 (_2!487 lt!8158))) (index!2337 lt!8273)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!23343 () Bool)

(declare-fun lt!8272 () Unit!512)

(declare-fun lt!8267 () Unit!512)

(assert (=> b!23343 (= lt!8272 lt!8267)))

(declare-fun call!1937 () Bool)

(assert (=> b!23343 call!1937))

(declare-fun lt!8287 () array!1283)

(assert (=> b!23343 (= lt!8267 (lemmaValidKeyInArrayIsInListMap!10 (_keys!3164 (_2!487 lt!8158)) lt!8287 (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) (index!2338 lt!8281) (defaultEntry!1743 (_2!487 lt!8158))))))

(assert (=> b!23343 (= lt!8287 (array!1284 (store (arr!607 (_values!1729 (_2!487 lt!8158))) (index!2338 lt!8281) (ValueCellFull!312 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!703 (_values!1729 (_2!487 lt!8158)))))))

(declare-fun lt!8270 () Unit!512)

(declare-fun lt!8266 () Unit!512)

(assert (=> b!23343 (= lt!8270 lt!8266)))

(assert (=> b!23343 (= call!1944 call!1948)))

(assert (=> b!23343 (= lt!8266 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!10 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) (index!2338 lt!8281) #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (defaultEntry!1743 (_2!487 lt!8158))))))

(declare-fun lt!8288 () Unit!512)

(assert (=> b!23343 (= lt!8288 e!15165)))

(declare-fun c!2990 () Bool)

(assert (=> b!23343 (= c!2990 (contains!230 (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!23343 (= e!15178 (tuple2!957 true (LongMapFixedSize!211 (defaultEntry!1743 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) (_size!150 (_2!487 lt!8158)) (_keys!3164 (_2!487 lt!8158)) (array!1284 (store (arr!607 (_values!1729 (_2!487 lt!8158))) (index!2338 lt!8281) (ValueCellFull!312 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!703 (_values!1729 (_2!487 lt!8158)))) (_vacant!150 (_2!487 lt!8158)))))))

(declare-fun b!23344 () Bool)

(declare-fun call!1940 () ListLongMap!567)

(assert (=> b!23344 (= e!15173 call!1940)))

(declare-fun b!23345 () Bool)

(assert (=> b!23345 (= e!15173 (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))

(declare-fun bm!1940 () Bool)

(declare-fun c!2989 () Bool)

(assert (=> bm!1940 (= call!1954 (updateHelperNewKey!10 (_2!487 lt!8158) #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281))))))

(declare-fun bm!1941 () Bool)

(declare-fun call!1949 () ListLongMap!567)

(assert (=> bm!1941 (= call!1940 call!1949)))

(declare-fun b!23346 () Bool)

(assert (=> b!23346 (= e!15161 call!1949)))

(declare-fun c!2991 () Bool)

(declare-fun c!2995 () Bool)

(declare-fun call!1943 () Bool)

(declare-fun c!2987 () Bool)

(declare-fun bm!1942 () Bool)

(assert (=> bm!1942 (= call!1943 (inRange!0 (ite c!2996 (ite c!2991 (index!2338 lt!8289) (ite c!2987 (index!2337 lt!8265) (index!2340 lt!8265))) (ite c!2990 (index!2338 lt!8286) (ite c!2995 (index!2337 lt!8273) (index!2340 lt!8273)))) (mask!4730 (_2!487 lt!8158))))))

(declare-fun b!23347 () Bool)

(declare-fun res!14385 () Bool)

(assert (=> b!23347 (=> (not res!14385) (not e!15159))))

(declare-fun call!1958 () Bool)

(assert (=> b!23347 (= res!14385 call!1958)))

(declare-fun e!15175 () Bool)

(assert (=> b!23347 (= e!15175 e!15159)))

(declare-fun bm!1943 () Bool)

(assert (=> bm!1943 (= call!1947 call!1956)))

(declare-fun b!23348 () Bool)

(assert (=> b!23348 (= c!2989 ((_ is MissingVacant!54) lt!8281))))

(assert (=> b!23348 (= e!15167 e!15158)))

(declare-fun b!23349 () Bool)

(assert (=> b!23349 (= e!15169 e!15160)))

(declare-fun res!14397 () Bool)

(assert (=> b!23349 (= res!14397 call!1958)))

(assert (=> b!23349 (=> (not res!14397) (not e!15160))))

(declare-fun b!23350 () Bool)

(declare-fun c!2993 () Bool)

(assert (=> b!23350 (= c!2993 ((_ is MissingVacant!54) lt!8265))))

(assert (=> b!23350 (= e!15175 e!15169)))

(declare-fun bm!1944 () Bool)

(declare-fun lt!8268 () (_ BitVec 32))

(assert (=> bm!1944 (= call!1956 (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) (ite (or c!2998 c!2996) (_values!1729 (_2!487 lt!8158)) (array!1284 (store (arr!607 (_values!1729 (_2!487 lt!8158))) (index!2338 lt!8281) (ValueCellFull!312 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!703 (_values!1729 (_2!487 lt!8158))))) (mask!4730 (_2!487 lt!8158)) (ite c!2998 (ite c!2997 lt!8271 lt!8268) (extraKeys!1641 (_2!487 lt!8158))) (ite (and c!2998 c!2997) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 (_2!487 lt!8158))) (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158))) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))

(declare-fun bm!1945 () Bool)

(declare-fun call!1951 () Unit!512)

(assert (=> bm!1945 (= call!1951 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!10 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b1000000000000000000000000000000000000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))

(declare-fun bm!1946 () Bool)

(assert (=> bm!1946 (= call!1946 call!1936)))

(declare-fun b!23351 () Bool)

(declare-fun e!15163 () Bool)

(assert (=> b!23351 (= e!15163 e!15179)))

(declare-fun c!2988 () Bool)

(declare-fun lt!8276 () tuple2!956)

(assert (=> b!23351 (= c!2988 (_1!487 lt!8276))))

(declare-fun b!23352 () Bool)

(declare-fun e!15170 () Bool)

(assert (=> b!23352 (= e!15168 e!15170)))

(declare-fun res!14389 () Bool)

(assert (=> b!23352 (= res!14389 call!1957)))

(assert (=> b!23352 (=> (not res!14389) (not e!15170))))

(declare-fun bm!1947 () Bool)

(assert (=> bm!1947 (= call!1935 call!1936)))

(declare-fun b!23353 () Bool)

(declare-fun lt!8263 () tuple2!956)

(assert (=> b!23353 (= e!15158 (tuple2!957 (_1!487 lt!8263) (_2!487 lt!8263)))))

(assert (=> b!23353 (= lt!8263 call!1954)))

(declare-fun bm!1948 () Bool)

(assert (=> bm!1948 (= call!1952 (map!407 (_2!487 lt!8276)))))

(declare-fun b!23354 () Bool)

(declare-fun lt!8284 () Unit!512)

(assert (=> b!23354 (= e!15162 lt!8284)))

(assert (=> b!23354 (= lt!8284 call!1951)))

(assert (=> b!23354 (= lt!8265 call!1935)))

(assert (=> b!23354 (= c!2987 ((_ is MissingZero!54) lt!8265))))

(assert (=> b!23354 e!15175))

(declare-fun d!3995 () Bool)

(assert (=> d!3995 e!15163))

(declare-fun res!14394 () Bool)

(assert (=> d!3995 (=> (not res!14394) (not e!15163))))

(assert (=> d!3995 (= res!14394 (valid!104 (_2!487 lt!8276)))))

(assert (=> d!3995 (= lt!8276 e!15164)))

(assert (=> d!3995 (= c!2998 (= #b1000000000000000000000000000000000000000000000000000000000000000 (bvneg #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!3995 (valid!104 (_2!487 lt!8158))))

(assert (=> d!3995 (= (update!32 (_2!487 lt!8158) #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))) lt!8276)))

(declare-fun bm!1949 () Bool)

(assert (=> bm!1949 (= call!1939 (lemmaInListMapThenSeekEntryOrOpenFindsIt!10 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b1000000000000000000000000000000000000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))

(declare-fun bm!1950 () Bool)

(assert (=> bm!1950 (= call!1958 call!1950)))

(declare-fun bm!1951 () Bool)

(assert (=> bm!1951 (= call!1941 (map!407 (_2!487 lt!8158)))))

(declare-fun bm!1952 () Bool)

(declare-fun c!2994 () Bool)

(assert (=> bm!1952 (= c!2994 c!2996)))

(assert (=> bm!1952 (= call!1937 (contains!230 e!15161 (ite c!2996 #b1000000000000000000000000000000000000000000000000000000000000000 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) (index!2338 lt!8281)))))))

(declare-fun b!23355 () Bool)

(declare-fun Unit!517 () Unit!512)

(assert (=> b!23355 (= e!15165 Unit!517)))

(declare-fun lt!8283 () Unit!512)

(assert (=> b!23355 (= lt!8283 call!1951)))

(assert (=> b!23355 (= lt!8273 call!1946)))

(assert (=> b!23355 (= c!2995 ((_ is MissingZero!54) lt!8273))))

(assert (=> b!23355 e!15174))

(declare-fun lt!8275 () Unit!512)

(assert (=> b!23355 (= lt!8275 lt!8283)))

(assert (=> b!23355 false))

(declare-fun bm!1953 () Bool)

(assert (=> bm!1953 (= call!1955 call!1943)))

(declare-fun b!23356 () Bool)

(declare-fun lt!8274 () Unit!512)

(declare-fun lt!8280 () Unit!512)

(assert (=> b!23356 (= lt!8274 lt!8280)))

(assert (=> b!23356 (= call!1953 call!1947)))

(assert (=> b!23356 (= lt!8280 (lemmaChangeLongMinValueKeyThenAddPairToListMap!10 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) lt!8268 (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (defaultEntry!1743 (_2!487 lt!8158))))))

(assert (=> b!23356 (= lt!8268 (bvor (extraKeys!1641 (_2!487 lt!8158)) #b00000000000000000000000000000010))))

(assert (=> b!23356 (= e!15177 (tuple2!957 true (LongMapFixedSize!211 (defaultEntry!1743 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (bvor (extraKeys!1641 (_2!487 lt!8158)) #b00000000000000000000000000000010) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (_size!150 (_2!487 lt!8158)) (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (_vacant!150 (_2!487 lt!8158)))))))

(declare-fun b!23357 () Bool)

(assert (=> b!23357 (= e!15166 (= (select (arr!608 (_keys!3164 (_2!487 lt!8158))) (index!2338 lt!8286)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!23358 () Bool)

(assert (=> b!23358 (= e!15160 (not call!1945))))

(declare-fun bm!1954 () Bool)

(assert (=> bm!1954 (= call!1950 call!1943)))

(declare-fun b!23359 () Bool)

(declare-fun res!14395 () Bool)

(assert (=> b!23359 (= res!14395 call!1955)))

(assert (=> b!23359 (=> (not res!14395) (not e!15166))))

(declare-fun b!23360 () Bool)

(assert (=> b!23360 (= e!15179 e!15171)))

(declare-fun res!14396 () Bool)

(assert (=> b!23360 (= res!14396 (contains!230 call!1952 #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!23360 (=> (not res!14396) (not e!15171))))

(declare-fun b!23361 () Bool)

(declare-fun lt!8277 () Unit!512)

(assert (=> b!23361 (= lt!8277 e!15162)))

(assert (=> b!23361 (= c!2991 call!1937)))

(assert (=> b!23361 (= e!15167 (tuple2!957 false (_2!487 lt!8158)))))

(declare-fun b!23362 () Bool)

(declare-fun res!14392 () Bool)

(assert (=> b!23362 (= res!14392 (= (select (arr!608 (_keys!3164 (_2!487 lt!8158))) (index!2340 lt!8273)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!23362 (=> (not res!14392) (not e!15170))))

(declare-fun bm!1955 () Bool)

(assert (=> bm!1955 (= call!1949 (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) (ite c!2998 (_values!1729 (_2!487 lt!8158)) lt!8287) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))

(declare-fun b!23363 () Bool)

(assert (=> b!23363 (= e!15170 (not call!1938))))

(assert (= (and d!3995 c!2998) b!23329))

(assert (= (and d!3995 (not c!2998)) b!23340))

(assert (= (and b!23329 c!2997) b!23325))

(assert (= (and b!23329 (not c!2997)) b!23356))

(assert (= (or b!23325 b!23356) bm!1943))

(assert (= (or b!23325 b!23356) bm!1941))

(assert (= (or b!23325 b!23356) bm!1937))

(assert (= (and b!23340 c!2996) b!23361))

(assert (= (and b!23340 (not c!2996)) b!23348))

(assert (= (and b!23361 c!2991) b!23341))

(assert (= (and b!23361 (not c!2991)) b!23354))

(assert (= (and b!23341 res!14393) b!23334))

(assert (= (and b!23334 res!14388) b!23327))

(assert (= (and b!23354 c!2987) b!23347))

(assert (= (and b!23354 (not c!2987)) b!23350))

(assert (= (and b!23347 res!14385) b!23333))

(assert (= (and b!23333 res!14390) b!23328))

(assert (= (and b!23350 c!2993) b!23349))

(assert (= (and b!23350 (not c!2993)) b!23322))

(assert (= (and b!23349 res!14397) b!23336))

(assert (= (and b!23336 res!14386) b!23358))

(assert (= (or b!23347 b!23349) bm!1950))

(assert (= (or b!23328 b!23358) bm!1939))

(assert (= (or b!23334 bm!1950) bm!1954))

(assert (= (or b!23341 b!23354) bm!1947))

(assert (= (and b!23348 c!2989) b!23353))

(assert (= (and b!23348 (not c!2989)) b!23323))

(assert (= (and b!23323 c!2992) b!23339))

(assert (= (and b!23323 (not c!2992)) b!23343))

(assert (= (and b!23343 c!2990) b!23330))

(assert (= (and b!23343 (not c!2990)) b!23355))

(assert (= (and b!23330 res!14391) b!23359))

(assert (= (and b!23359 res!14395) b!23357))

(assert (= (and b!23355 c!2995) b!23331))

(assert (= (and b!23355 (not c!2995)) b!23335))

(assert (= (and b!23331 res!14387) b!23342))

(assert (= (and b!23342 res!14398) b!23337))

(assert (= (and b!23335 c!2986) b!23352))

(assert (= (and b!23335 (not c!2986)) b!23326))

(assert (= (and b!23352 res!14389) b!23362))

(assert (= (and b!23362 res!14392) b!23363))

(assert (= (or b!23331 b!23352) bm!1935))

(assert (= (or b!23337 b!23363) bm!1932))

(assert (= (or b!23359 bm!1935) bm!1953))

(assert (= (or b!23330 b!23355) bm!1946))

(assert (= (or b!23353 b!23339) bm!1940))

(assert (= (or bm!1947 bm!1946) bm!1938))

(assert (= (or bm!1939 bm!1932) bm!1936))

(assert (= (or b!23361 b!23343) bm!1933))

(assert (= (or bm!1954 bm!1953) bm!1942))

(assert (= (or b!23341 b!23330) bm!1949))

(assert (= (or b!23354 b!23355) bm!1945))

(assert (= (or b!23361 b!23343) bm!1952))

(assert (= (and bm!1952 c!2994) b!23338))

(assert (= (and bm!1952 (not c!2994)) b!23346))

(assert (= (or bm!1943 bm!1933) bm!1944))

(assert (= (or bm!1941 b!23346) bm!1955))

(assert (= (or bm!1937 b!23343) bm!1934))

(assert (= (and bm!1934 c!2999) b!23344))

(assert (= (and bm!1934 (not c!2999)) b!23345))

(assert (= (and d!3995 res!14394) b!23351))

(assert (= (and b!23351 c!2988) b!23360))

(assert (= (and b!23351 (not c!2988)) b!23324))

(assert (= (and b!23360 res!14396) b!23332))

(assert (= (or b!23360 b!23332 b!23324) bm!1948))

(assert (= (or b!23332 b!23324) bm!1951))

(declare-fun m!16840 () Bool)

(assert (=> b!23357 m!16840))

(declare-fun m!16842 () Bool)

(assert (=> b!23362 m!16842))

(declare-fun m!16844 () Bool)

(assert (=> b!23336 m!16844))

(declare-fun m!16846 () Bool)

(assert (=> b!23325 m!16846))

(declare-fun m!16848 () Bool)

(assert (=> b!23360 m!16848))

(declare-fun m!16850 () Bool)

(assert (=> bm!1949 m!16850))

(declare-fun m!16852 () Bool)

(assert (=> b!23345 m!16852))

(declare-fun m!16854 () Bool)

(assert (=> bm!1944 m!16854))

(declare-fun m!16856 () Bool)

(assert (=> bm!1944 m!16856))

(declare-fun m!16858 () Bool)

(assert (=> d!3995 m!16858))

(declare-fun m!16860 () Bool)

(assert (=> d!3995 m!16860))

(declare-fun m!16862 () Bool)

(assert (=> bm!1951 m!16862))

(declare-fun m!16864 () Bool)

(assert (=> b!23327 m!16864))

(declare-fun m!16866 () Bool)

(assert (=> bm!1936 m!16866))

(declare-fun m!16868 () Bool)

(assert (=> bm!1952 m!16868))

(declare-fun m!16870 () Bool)

(assert (=> bm!1952 m!16870))

(declare-fun m!16872 () Bool)

(assert (=> bm!1955 m!16872))

(assert (=> b!23343 m!16852))

(assert (=> b!23343 m!16854))

(declare-fun m!16874 () Bool)

(assert (=> b!23343 m!16874))

(assert (=> b!23343 m!16852))

(declare-fun m!16876 () Bool)

(assert (=> b!23343 m!16876))

(declare-fun m!16878 () Bool)

(assert (=> b!23343 m!16878))

(declare-fun m!16880 () Bool)

(assert (=> bm!1940 m!16880))

(declare-fun m!16882 () Bool)

(assert (=> bm!1934 m!16882))

(declare-fun m!16884 () Bool)

(assert (=> b!23333 m!16884))

(declare-fun m!16886 () Bool)

(assert (=> bm!1942 m!16886))

(declare-fun m!16888 () Bool)

(assert (=> bm!1948 m!16888))

(declare-fun m!16890 () Bool)

(assert (=> bm!1938 m!16890))

(declare-fun m!16892 () Bool)

(assert (=> b!23356 m!16892))

(assert (=> b!23340 m!16890))

(declare-fun m!16894 () Bool)

(assert (=> b!23332 m!16894))

(declare-fun m!16896 () Bool)

(assert (=> b!23342 m!16896))

(declare-fun m!16898 () Bool)

(assert (=> bm!1945 m!16898))

(assert (=> b!23143 d!3995))

(declare-fun b!23376 () Bool)

(declare-fun e!15187 () Unit!512)

(declare-fun Unit!518 () Unit!512)

(assert (=> b!23376 (= e!15187 Unit!518)))

(declare-fun lt!8355 () tuple2!960)

(declare-fun lt!8353 () LongMapFixedSize!210)

(declare-fun head!830 (List!568) tuple2!960)

(assert (=> b!23376 (= lt!8355 (head!830 (toList!299 (map!407 lt!8353))))))

(declare-fun lt!8350 () array!1285)

(assert (=> b!23376 (= lt!8350 (array!1286 ((as const (Array (_ BitVec 32) (_ BitVec 64))) #b0000000000000000000000000000000000000000000000000000000000000000) (bvadd (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001)))))

(declare-fun lt!8337 () (_ BitVec 32))

(assert (=> b!23376 (= lt!8337 #b00000000000000000000000000000000)))

(declare-fun lt!8344 () Unit!512)

(declare-fun lemmaKeyInListMapIsInArray!91 (array!1285 array!1283 (_ BitVec 32) (_ BitVec 32) V!1189 V!1189 (_ BitVec 64) Int) Unit!512)

(declare-fun dynLambda!144 (Int (_ BitVec 64)) V!1189)

(assert (=> b!23376 (= lt!8344 (lemmaKeyInListMapIsInArray!91 lt!8350 (array!1284 ((as const (Array (_ BitVec 32) ValueCell!312)) EmptyCell!312) (bvadd (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001)) (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) lt!8337 (dynLambda!144 (defaultEntry!1743 (v!1604 (underlying!116 thiss!938))) #b0000000000000000000000000000000000000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (v!1604 (underlying!116 thiss!938))) #b0000000000000000000000000000000000000000000000000000000000000000) (_1!489 lt!8355) (defaultEntry!1743 (v!1604 (underlying!116 thiss!938)))))))

(declare-fun c!3004 () Bool)

(assert (=> b!23376 (= c!3004 (and (not (= (_1!489 lt!8355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (_1!489 lt!8355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun e!15186 () Bool)

(assert (=> b!23376 e!15186))

(declare-fun lt!8357 () Unit!512)

(assert (=> b!23376 (= lt!8357 lt!8344)))

(declare-fun lt!8340 () (_ BitVec 32))

(declare-fun arrayScanForKey!0 (array!1285 (_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!23376 (= lt!8340 (arrayScanForKey!0 (array!1286 ((as const (Array (_ BitVec 32) (_ BitVec 64))) #b0000000000000000000000000000000000000000000000000000000000000000) (bvadd (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001)) (_1!489 lt!8355) #b00000000000000000000000000000000))))

(assert (=> b!23376 false))

(declare-fun b!23377 () Bool)

(declare-fun res!14404 () Bool)

(declare-fun e!15188 () Bool)

(assert (=> b!23377 (=> (not res!14404) (not e!15188))))

(declare-fun lt!8345 () LongMapFixedSize!210)

(assert (=> b!23377 (= res!14404 (= (mask!4730 lt!8345) (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938))))))))

(declare-fun b!23379 () Bool)

(assert (=> b!23379 (= e!15188 (= (map!407 lt!8345) (ListLongMap!568 Nil!565)))))

(declare-fun b!23380 () Bool)

(assert (=> b!23380 (= e!15186 (arrayContainsKey!0 lt!8350 (_1!489 lt!8355) #b00000000000000000000000000000000))))

(declare-fun b!23381 () Bool)

(declare-fun Unit!519 () Unit!512)

(assert (=> b!23381 (= e!15187 Unit!519)))

(declare-fun d!3997 () Bool)

(assert (=> d!3997 e!15188))

(declare-fun res!14403 () Bool)

(assert (=> d!3997 (=> (not res!14403) (not e!15188))))

(assert (=> d!3997 (= res!14403 (valid!104 lt!8345))))

(assert (=> d!3997 (= lt!8345 lt!8353)))

(declare-fun lt!8358 () Unit!512)

(assert (=> d!3997 (= lt!8358 e!15187)))

(declare-fun c!3005 () Bool)

(assert (=> d!3997 (= c!3005 (not (= (map!407 lt!8353) (ListLongMap!568 Nil!565))))))

(declare-fun lt!8343 () Unit!512)

(declare-fun lt!8336 () Unit!512)

(assert (=> d!3997 (= lt!8343 lt!8336)))

(declare-fun lt!8338 () array!1285)

(declare-fun lt!8351 () (_ BitVec 32))

(declare-datatypes ((List!569 0))(
  ( (Nil!566) (Cons!565 (h!1131 (_ BitVec 64)) (t!3240 List!569)) )
))
(declare-fun lt!8352 () List!569)

(declare-fun arrayNoDuplicates!0 (array!1285 (_ BitVec 32) List!569) Bool)

(assert (=> d!3997 (arrayNoDuplicates!0 lt!8338 lt!8351 lt!8352)))

(declare-fun lemmaArrayNoDuplicatesInAll0Array!0 (array!1285 (_ BitVec 32) (_ BitVec 32) List!569) Unit!512)

(assert (=> d!3997 (= lt!8336 (lemmaArrayNoDuplicatesInAll0Array!0 lt!8338 lt!8351 (bvadd (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001) lt!8352))))

(assert (=> d!3997 (= lt!8352 Nil!566)))

(assert (=> d!3997 (= lt!8351 #b00000000000000000000000000000000)))

(assert (=> d!3997 (= lt!8338 (array!1286 ((as const (Array (_ BitVec 32) (_ BitVec 64))) #b0000000000000000000000000000000000000000000000000000000000000000) (bvadd (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001)))))

(declare-fun lt!8346 () Unit!512)

(declare-fun lt!8348 () Unit!512)

(assert (=> d!3997 (= lt!8346 lt!8348)))

(declare-fun lt!8354 () (_ BitVec 32))

(declare-fun lt!8341 () array!1285)

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!1285 (_ BitVec 32)) Bool)

(assert (=> d!3997 (arrayForallSeekEntryOrOpenFound!0 lt!8354 lt!8341 (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))))))

(declare-fun lemmaArrayForallSeekEntryOrOpenFoundAlwaysTrueFor0Array!0 (array!1285 (_ BitVec 32) (_ BitVec 32)) Unit!512)

(assert (=> d!3997 (= lt!8348 (lemmaArrayForallSeekEntryOrOpenFoundAlwaysTrueFor0Array!0 lt!8341 (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) lt!8354))))

(assert (=> d!3997 (= lt!8354 #b00000000000000000000000000000000)))

(assert (=> d!3997 (= lt!8341 (array!1286 ((as const (Array (_ BitVec 32) (_ BitVec 64))) #b0000000000000000000000000000000000000000000000000000000000000000) (bvadd (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001)))))

(declare-fun lt!8339 () Unit!512)

(declare-fun lt!8349 () Unit!512)

(assert (=> d!3997 (= lt!8339 lt!8349)))

(declare-fun lt!8356 () array!1285)

(declare-fun lt!8342 () (_ BitVec 32))

(declare-fun lt!8347 () (_ BitVec 32))

(declare-fun arrayCountValidKeys!0 (array!1285 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!3997 (= (arrayCountValidKeys!0 lt!8356 lt!8342 lt!8347) #b00000000000000000000000000000000)))

(declare-fun lemmaArrayCountValidKeysOfFilled0ArrayIs0!0 (array!1285 (_ BitVec 32) (_ BitVec 32)) Unit!512)

(assert (=> d!3997 (= lt!8349 (lemmaArrayCountValidKeysOfFilled0ArrayIs0!0 lt!8356 lt!8342 lt!8347))))

(assert (=> d!3997 (= lt!8347 (bvadd (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001))))

(assert (=> d!3997 (= lt!8342 #b00000000000000000000000000000000)))

(assert (=> d!3997 (= lt!8356 (array!1286 ((as const (Array (_ BitVec 32) (_ BitVec 64))) #b0000000000000000000000000000000000000000000000000000000000000000) (bvadd (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001)))))

(assert (=> d!3997 (= lt!8353 (LongMapFixedSize!211 (defaultEntry!1743 (v!1604 (underlying!116 thiss!938))) (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000000 (dynLambda!144 (defaultEntry!1743 (v!1604 (underlying!116 thiss!938))) #b0000000000000000000000000000000000000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (v!1604 (underlying!116 thiss!938))) #b0000000000000000000000000000000000000000000000000000000000000000) #b00000000000000000000000000000000 (array!1286 ((as const (Array (_ BitVec 32) (_ BitVec 64))) #b0000000000000000000000000000000000000000000000000000000000000000) (bvadd (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001)) (array!1284 ((as const (Array (_ BitVec 32) ValueCell!312)) EmptyCell!312) (bvadd (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001)) #b00000000000000000000000000000000))))

(assert (=> d!3997 (validMask!0 (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))))))

(assert (=> d!3997 (= (getNewLongMapFixedSize!33 (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) (defaultEntry!1743 (v!1604 (underlying!116 thiss!938)))) lt!8345)))

(declare-fun b!23378 () Bool)

(assert (=> b!23378 (= e!15186 (ite (= (_1!489 lt!8355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand lt!8337 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!8337 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!3997 c!3005) b!23376))

(assert (= (and d!3997 (not c!3005)) b!23381))

(assert (= (and b!23376 c!3004) b!23380))

(assert (= (and b!23376 (not c!3004)) b!23378))

(assert (= (and d!3997 res!14403) b!23377))

(assert (= (and b!23377 res!14404) b!23379))

(declare-fun b_lambda!1575 () Bool)

(assert (=> (not b_lambda!1575) (not b!23376)))

(declare-fun t!3238 () Bool)

(declare-fun tb!657 () Bool)

(assert (=> (and b!23142 (= (defaultEntry!1743 (v!1604 (underlying!116 thiss!938))) (defaultEntry!1743 (v!1604 (underlying!116 thiss!938)))) t!3238) tb!657))

(declare-fun result!1093 () Bool)

(assert (=> tb!657 (= result!1093 tp_is_empty!1023)))

(assert (=> b!23376 t!3238))

(declare-fun b_and!1485 () Bool)

(assert (= b_and!1481 (and (=> t!3238 result!1093) b_and!1485)))

(declare-fun b_lambda!1577 () Bool)

(assert (=> (not b_lambda!1577) (not d!3997)))

(assert (=> d!3997 t!3238))

(declare-fun b_and!1487 () Bool)

(assert (= b_and!1485 (and (=> t!3238 result!1093) b_and!1487)))

(assert (=> b!23376 m!16750))

(declare-fun m!16900 () Bool)

(assert (=> b!23376 m!16900))

(assert (=> b!23376 m!16900))

(declare-fun m!16902 () Bool)

(assert (=> b!23376 m!16902))

(declare-fun m!16904 () Bool)

(assert (=> b!23376 m!16904))

(declare-fun m!16906 () Bool)

(assert (=> b!23376 m!16906))

(assert (=> b!23376 m!16900))

(declare-fun m!16908 () Bool)

(assert (=> b!23376 m!16908))

(declare-fun m!16910 () Bool)

(assert (=> b!23379 m!16910))

(declare-fun m!16912 () Bool)

(assert (=> b!23380 m!16912))

(declare-fun m!16914 () Bool)

(assert (=> d!3997 m!16914))

(declare-fun m!16916 () Bool)

(assert (=> d!3997 m!16916))

(assert (=> d!3997 m!16750))

(declare-fun m!16918 () Bool)

(assert (=> d!3997 m!16918))

(assert (=> d!3997 m!16750))

(declare-fun m!16920 () Bool)

(assert (=> d!3997 m!16920))

(declare-fun m!16922 () Bool)

(assert (=> d!3997 m!16922))

(assert (=> d!3997 m!16750))

(declare-fun m!16924 () Bool)

(assert (=> d!3997 m!16924))

(declare-fun m!16926 () Bool)

(assert (=> d!3997 m!16926))

(assert (=> d!3997 m!16906))

(declare-fun m!16928 () Bool)

(assert (=> d!3997 m!16928))

(assert (=> d!3997 m!16900))

(assert (=> b!23139 d!3997))

(declare-fun d!3999 () Bool)

(declare-fun e!15194 () Bool)

(assert (=> d!3999 e!15194))

(declare-fun res!14407 () Bool)

(assert (=> d!3999 (=> (not res!14407) (not e!15194))))

(declare-fun lt!8364 () (_ BitVec 32))

(assert (=> d!3999 (= res!14407 (validMask!0 lt!8364))))

(declare-datatypes ((tuple2!962 0))(
  ( (tuple2!963 (_1!490 Unit!512) (_2!490 (_ BitVec 32))) )
))
(declare-fun e!15193 () tuple2!962)

(assert (=> d!3999 (= lt!8364 (_2!490 e!15193))))

(declare-fun c!3008 () Bool)

(declare-fun lt!8363 () tuple2!962)

(assert (=> d!3999 (= c!3008 (and (bvsgt (_2!490 lt!8363) #b00000000000000000000000000001000) (bvslt (bvmul #b00000000000000000000000000001000 (_size!150 (v!1604 (underlying!116 thiss!938)))) (_2!490 lt!8363)) (bvsge (bvadd (bvand (bvashr (_2!490 lt!8363) #b00000000000000000000000000000001) #b00111111111111111111111111111111) #b00000000000000000000000000000001) (_size!150 (v!1604 (underlying!116 thiss!938))))))))

(declare-fun Unit!520 () Unit!512)

(declare-fun Unit!521 () Unit!512)

(assert (=> d!3999 (= lt!8363 (ite (and (bvsge (bvmul #b00000000000000000000000000000010 (bvadd (_size!150 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))))) (mask!4730 (v!1604 (underlying!116 thiss!938)))) (bvsle (bvmul #b00000000000000000000000000000101 (_vacant!150 (v!1604 (underlying!116 thiss!938)))) (mask!4730 (v!1604 (underlying!116 thiss!938))))) (tuple2!963 Unit!520 (bvand (bvadd (bvshl (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000000000000001) #b00000000000000000000000000000001) #b00111111111111111111111111111111)) (tuple2!963 Unit!521 (mask!4730 (v!1604 (underlying!116 thiss!938))))))))

(assert (=> d!3999 (validMask!0 (mask!4730 (v!1604 (underlying!116 thiss!938))))))

(assert (=> d!3999 (= (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) lt!8364)))

(declare-fun b!23390 () Bool)

(declare-fun computeNewMaskWhile!14 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) tuple2!962)

(assert (=> b!23390 (= e!15193 (computeNewMaskWhile!14 (_size!150 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (mask!4730 (v!1604 (underlying!116 thiss!938))) (_2!490 lt!8363)))))

(declare-fun b!23391 () Bool)

(declare-fun Unit!522 () Unit!512)

(assert (=> b!23391 (= e!15193 (tuple2!963 Unit!522 (_2!490 lt!8363)))))

(declare-fun b!23392 () Bool)

(assert (=> b!23392 (= e!15194 (bvsle (_size!150 (v!1604 (underlying!116 thiss!938))) (bvadd lt!8364 #b00000000000000000000000000000001)))))

(assert (= (and d!3999 c!3008) b!23390))

(assert (= (and d!3999 (not c!3008)) b!23391))

(assert (= (and d!3999 res!14407) b!23392))

(declare-fun m!16930 () Bool)

(assert (=> d!3999 m!16930))

(assert (=> d!3999 m!16758))

(declare-fun m!16932 () Bool)

(assert (=> b!23390 m!16932))

(assert (=> b!23139 d!3999))

(declare-fun mapIsEmpty!1031 () Bool)

(declare-fun mapRes!1031 () Bool)

(assert (=> mapIsEmpty!1031 mapRes!1031))

(declare-fun b!23400 () Bool)

(declare-fun e!15200 () Bool)

(assert (=> b!23400 (= e!15200 tp_is_empty!1023)))

(declare-fun b!23399 () Bool)

(declare-fun e!15199 () Bool)

(assert (=> b!23399 (= e!15199 tp_is_empty!1023)))

(declare-fun mapNonEmpty!1031 () Bool)

(declare-fun tp!3533 () Bool)

(assert (=> mapNonEmpty!1031 (= mapRes!1031 (and tp!3533 e!15199))))

(declare-fun mapRest!1031 () (Array (_ BitVec 32) ValueCell!312))

(declare-fun mapKey!1031 () (_ BitVec 32))

(declare-fun mapValue!1031 () ValueCell!312)

(assert (=> mapNonEmpty!1031 (= mapRest!1025 (store mapRest!1031 mapKey!1031 mapValue!1031))))

(declare-fun condMapEmpty!1031 () Bool)

(declare-fun mapDefault!1031 () ValueCell!312)

(assert (=> mapNonEmpty!1025 (= condMapEmpty!1031 (= mapRest!1025 ((as const (Array (_ BitVec 32) ValueCell!312)) mapDefault!1031)))))

(assert (=> mapNonEmpty!1025 (= tp!3523 (and e!15200 mapRes!1031))))

(assert (= (and mapNonEmpty!1025 condMapEmpty!1031) mapIsEmpty!1031))

(assert (= (and mapNonEmpty!1025 (not condMapEmpty!1031)) mapNonEmpty!1031))

(assert (= (and mapNonEmpty!1031 ((_ is ValueCellFull!312) mapValue!1031)) b!23399))

(assert (= (and mapNonEmpty!1025 ((_ is ValueCellFull!312) mapDefault!1031)) b!23400))

(declare-fun m!16934 () Bool)

(assert (=> mapNonEmpty!1031 m!16934))

(declare-fun b_lambda!1579 () Bool)

(assert (= b_lambda!1577 (or (and b!23142 b_free!759) b_lambda!1579)))

(declare-fun b_lambda!1581 () Bool)

(assert (= b_lambda!1575 (or (and b!23142 b_free!759) b_lambda!1581)))

(check-sat (not b!23314) (not d!3995) (not bm!1955) (not mapNonEmpty!1031) (not bm!1945) b_and!1487 (not bm!1938) (not b!23325) (not bm!1916) (not b!23340) (not bm!1944) (not bm!1948) (not b!23345) (not d!3999) (not b!23379) (not b!23283) (not bm!1925) tp_is_empty!1023 (not b!23360) (not d!3987) (not d!3997) (not b!23380) (not bm!1934) (not bm!1940) (not bm!1910) (not b!23298) (not b!23303) (not bm!1924) (not b!23356) (not b_next!759) (not bm!1951) (not b_lambda!1581) (not b!23343) (not bm!1931) (not bm!1952) (not bm!1918) (not bm!1927) (not b_lambda!1579) (not bm!1920) (not bm!1949) (not bm!1928) (not b!23332) (not b!23376) (not bm!1921) (not bm!1912) (not b!23290) (not bm!1914) (not b!23318) (not b!23301) (not b!23390) (not bm!1936) (not bm!1942) (not d!3985))
(check-sat b_and!1487 (not b_next!759))
(get-model)

(declare-fun d!4001 () Bool)

(declare-fun res!14412 () Bool)

(declare-fun e!15205 () Bool)

(assert (=> d!4001 (=> res!14412 e!15205)))

(assert (=> d!4001 (= res!14412 (= (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!4001 (= (arrayContainsKey!0 (_keys!3164 lt!8161) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) #b00000000000000000000000000000000) e!15205)))

(declare-fun b!23405 () Bool)

(declare-fun e!15206 () Bool)

(assert (=> b!23405 (= e!15205 e!15206)))

(declare-fun res!14413 () Bool)

(assert (=> b!23405 (=> (not res!14413) (not e!15206))))

(assert (=> b!23405 (= res!14413 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!704 (_keys!3164 lt!8161))))))

(declare-fun b!23406 () Bool)

(assert (=> b!23406 (= e!15206 (arrayContainsKey!0 (_keys!3164 lt!8161) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!4001 (not res!14412)) b!23405))

(assert (= (and b!23405 res!14413) b!23406))

(declare-fun m!16936 () Bool)

(assert (=> d!4001 m!16936))

(declare-fun m!16938 () Bool)

(assert (=> b!23406 m!16938))

(assert (=> bm!1912 d!4001))

(declare-fun b!23415 () Bool)

(declare-fun e!15212 () (_ BitVec 32))

(declare-fun e!15211 () (_ BitVec 32))

(assert (=> b!23415 (= e!15212 e!15211)))

(declare-fun c!3013 () Bool)

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!23415 (= c!3013 (validKeyInArray!0 (select (arr!608 lt!8356) lt!8342)))))

(declare-fun b!23416 () Bool)

(declare-fun call!1961 () (_ BitVec 32))

(assert (=> b!23416 (= e!15211 call!1961)))

(declare-fun bm!1958 () Bool)

(assert (=> bm!1958 (= call!1961 (arrayCountValidKeys!0 lt!8356 (bvadd lt!8342 #b00000000000000000000000000000001) lt!8347))))

(declare-fun b!23418 () Bool)

(assert (=> b!23418 (= e!15211 (bvadd #b00000000000000000000000000000001 call!1961))))

(declare-fun b!23417 () Bool)

(assert (=> b!23417 (= e!15212 #b00000000000000000000000000000000)))

(declare-fun d!4003 () Bool)

(declare-fun lt!8367 () (_ BitVec 32))

(assert (=> d!4003 (and (bvsge lt!8367 #b00000000000000000000000000000000) (bvsle lt!8367 (bvsub (size!704 lt!8356) lt!8342)))))

(assert (=> d!4003 (= lt!8367 e!15212)))

(declare-fun c!3014 () Bool)

(assert (=> d!4003 (= c!3014 (bvsge lt!8342 lt!8347))))

(assert (=> d!4003 (and (bvsle lt!8342 lt!8347) (bvsge lt!8342 #b00000000000000000000000000000000) (bvsle lt!8347 (size!704 lt!8356)))))

(assert (=> d!4003 (= (arrayCountValidKeys!0 lt!8356 lt!8342 lt!8347) lt!8367)))

(assert (= (and d!4003 c!3014) b!23417))

(assert (= (and d!4003 (not c!3014)) b!23415))

(assert (= (and b!23415 c!3013) b!23418))

(assert (= (and b!23415 (not c!3013)) b!23416))

(assert (= (or b!23418 b!23416) bm!1958))

(declare-fun m!16940 () Bool)

(assert (=> b!23415 m!16940))

(assert (=> b!23415 m!16940))

(declare-fun m!16942 () Bool)

(assert (=> b!23415 m!16942))

(declare-fun m!16944 () Bool)

(assert (=> bm!1958 m!16944))

(assert (=> d!3997 d!4003))

(declare-fun b!23427 () Bool)

(declare-fun e!15219 () Bool)

(declare-fun e!15220 () Bool)

(assert (=> b!23427 (= e!15219 e!15220)))

(declare-fun c!3017 () Bool)

(assert (=> b!23427 (= c!3017 (validKeyInArray!0 (select (arr!608 lt!8341) lt!8354)))))

(declare-fun d!4005 () Bool)

(declare-fun res!14418 () Bool)

(assert (=> d!4005 (=> res!14418 e!15219)))

(assert (=> d!4005 (= res!14418 (bvsge lt!8354 (size!704 lt!8341)))))

(assert (=> d!4005 (= (arrayForallSeekEntryOrOpenFound!0 lt!8354 lt!8341 (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938))))) e!15219)))

(declare-fun b!23428 () Bool)

(declare-fun e!15221 () Bool)

(declare-fun call!1964 () Bool)

(assert (=> b!23428 (= e!15221 call!1964)))

(declare-fun bm!1961 () Bool)

(assert (=> bm!1961 (= call!1964 (arrayForallSeekEntryOrOpenFound!0 (bvadd lt!8354 #b00000000000000000000000000000001) lt!8341 (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938))))))))

(declare-fun b!23429 () Bool)

(assert (=> b!23429 (= e!15220 call!1964)))

(declare-fun b!23430 () Bool)

(assert (=> b!23430 (= e!15220 e!15221)))

(declare-fun lt!8374 () (_ BitVec 64))

(assert (=> b!23430 (= lt!8374 (select (arr!608 lt!8341) lt!8354))))

(declare-fun lt!8376 () Unit!512)

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!1285 (_ BitVec 64) (_ BitVec 32)) Unit!512)

(assert (=> b!23430 (= lt!8376 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!8341 lt!8374 lt!8354))))

(assert (=> b!23430 (arrayContainsKey!0 lt!8341 lt!8374 #b00000000000000000000000000000000)))

(declare-fun lt!8375 () Unit!512)

(assert (=> b!23430 (= lt!8375 lt!8376)))

(declare-fun res!14419 () Bool)

(assert (=> b!23430 (= res!14419 (= (seekEntryOrOpen!0 (select (arr!608 lt!8341) lt!8354) lt!8341 (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938))))) (Found!54 lt!8354)))))

(assert (=> b!23430 (=> (not res!14419) (not e!15221))))

(assert (= (and d!4005 (not res!14418)) b!23427))

(assert (= (and b!23427 c!3017) b!23430))

(assert (= (and b!23427 (not c!3017)) b!23429))

(assert (= (and b!23430 res!14419) b!23428))

(assert (= (or b!23428 b!23429) bm!1961))

(declare-fun m!16946 () Bool)

(assert (=> b!23427 m!16946))

(assert (=> b!23427 m!16946))

(declare-fun m!16948 () Bool)

(assert (=> b!23427 m!16948))

(assert (=> bm!1961 m!16750))

(declare-fun m!16950 () Bool)

(assert (=> bm!1961 m!16950))

(assert (=> b!23430 m!16946))

(declare-fun m!16952 () Bool)

(assert (=> b!23430 m!16952))

(declare-fun m!16954 () Bool)

(assert (=> b!23430 m!16954))

(assert (=> b!23430 m!16946))

(assert (=> b!23430 m!16750))

(declare-fun m!16956 () Bool)

(assert (=> b!23430 m!16956))

(assert (=> d!3997 d!4005))

(declare-fun d!4007 () Bool)

(assert (=> d!4007 (= (validMask!0 (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938))))) (and (or (= (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000111) (= (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000001111) (= (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000011111) (= (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000111111) (= (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000001111111) (= (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000011111111) (= (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000111111111) (= (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000001111111111) (= (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000011111111111) (= (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000111111111111) (= (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000001111111111111) (= (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000011111111111111) (= (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000111111111111111) (= (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000001111111111111111) (= (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000011111111111111111) (= (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000111111111111111111) (= (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000001111111111111111111) (= (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000011111111111111111111) (= (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000111111111111111111111) (= (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000001111111111111111111111) (= (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000011111111111111111111111) (= (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000111111111111111111111111) (= (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000001111111111111111111111111) (= (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000011111111111111111111111111) (= (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000111111111111111111111111111) (= (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00001111111111111111111111111111) (= (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00011111111111111111111111111111) (= (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00111111111111111111111111111111)) (bvsle (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00111111111111111111111111111111)))))

(assert (=> d!3997 d!4007))

(declare-fun d!4009 () Bool)

(assert (=> d!4009 (= (map!407 lt!8353) (getCurrentListMap!130 (_keys!3164 lt!8353) (_values!1729 lt!8353) (mask!4730 lt!8353) (extraKeys!1641 lt!8353) (zeroValue!1666 lt!8353) (minValue!1666 lt!8353) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8353)))))

(declare-fun bs!950 () Bool)

(assert (= bs!950 d!4009))

(declare-fun m!16958 () Bool)

(assert (=> bs!950 m!16958))

(assert (=> d!3997 d!4009))

(declare-fun d!4011 () Bool)

(declare-fun res!14426 () Bool)

(declare-fun e!15224 () Bool)

(assert (=> d!4011 (=> (not res!14426) (not e!15224))))

(declare-fun simpleValid!20 (LongMapFixedSize!210) Bool)

(assert (=> d!4011 (= res!14426 (simpleValid!20 lt!8345))))

(assert (=> d!4011 (= (valid!104 lt!8345) e!15224)))

(declare-fun b!23437 () Bool)

(declare-fun res!14427 () Bool)

(assert (=> b!23437 (=> (not res!14427) (not e!15224))))

(assert (=> b!23437 (= res!14427 (= (arrayCountValidKeys!0 (_keys!3164 lt!8345) #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8345))) (_size!150 lt!8345)))))

(declare-fun b!23438 () Bool)

(declare-fun res!14428 () Bool)

(assert (=> b!23438 (=> (not res!14428) (not e!15224))))

(assert (=> b!23438 (= res!14428 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3164 lt!8345) (mask!4730 lt!8345)))))

(declare-fun b!23439 () Bool)

(assert (=> b!23439 (= e!15224 (arrayNoDuplicates!0 (_keys!3164 lt!8345) #b00000000000000000000000000000000 Nil!566))))

(assert (= (and d!4011 res!14426) b!23437))

(assert (= (and b!23437 res!14427) b!23438))

(assert (= (and b!23438 res!14428) b!23439))

(declare-fun m!16960 () Bool)

(assert (=> d!4011 m!16960))

(declare-fun m!16962 () Bool)

(assert (=> b!23437 m!16962))

(declare-fun m!16964 () Bool)

(assert (=> b!23438 m!16964))

(declare-fun m!16966 () Bool)

(assert (=> b!23439 m!16966))

(assert (=> d!3997 d!4011))

(declare-fun b!23450 () Bool)

(declare-fun e!15233 () Bool)

(declare-fun call!1967 () Bool)

(assert (=> b!23450 (= e!15233 call!1967)))

(declare-fun d!4013 () Bool)

(declare-fun res!14436 () Bool)

(declare-fun e!15234 () Bool)

(assert (=> d!4013 (=> res!14436 e!15234)))

(assert (=> d!4013 (= res!14436 (bvsge lt!8351 (size!704 lt!8338)))))

(assert (=> d!4013 (= (arrayNoDuplicates!0 lt!8338 lt!8351 lt!8352) e!15234)))

(declare-fun b!23451 () Bool)

(declare-fun e!15236 () Bool)

(assert (=> b!23451 (= e!15236 e!15233)))

(declare-fun c!3020 () Bool)

(assert (=> b!23451 (= c!3020 (validKeyInArray!0 (select (arr!608 lt!8338) lt!8351)))))

(declare-fun b!23452 () Bool)

(assert (=> b!23452 (= e!15233 call!1967)))

(declare-fun e!15235 () Bool)

(declare-fun b!23453 () Bool)

(declare-fun contains!231 (List!569 (_ BitVec 64)) Bool)

(assert (=> b!23453 (= e!15235 (contains!231 lt!8352 (select (arr!608 lt!8338) lt!8351)))))

(declare-fun bm!1964 () Bool)

(assert (=> bm!1964 (= call!1967 (arrayNoDuplicates!0 lt!8338 (bvadd lt!8351 #b00000000000000000000000000000001) (ite c!3020 (Cons!565 (select (arr!608 lt!8338) lt!8351) lt!8352) lt!8352)))))

(declare-fun b!23454 () Bool)

(assert (=> b!23454 (= e!15234 e!15236)))

(declare-fun res!14435 () Bool)

(assert (=> b!23454 (=> (not res!14435) (not e!15236))))

(assert (=> b!23454 (= res!14435 (not e!15235))))

(declare-fun res!14437 () Bool)

(assert (=> b!23454 (=> (not res!14437) (not e!15235))))

(assert (=> b!23454 (= res!14437 (validKeyInArray!0 (select (arr!608 lt!8338) lt!8351)))))

(assert (= (and d!4013 (not res!14436)) b!23454))

(assert (= (and b!23454 res!14437) b!23453))

(assert (= (and b!23454 res!14435) b!23451))

(assert (= (and b!23451 c!3020) b!23452))

(assert (= (and b!23451 (not c!3020)) b!23450))

(assert (= (or b!23452 b!23450) bm!1964))

(declare-fun m!16968 () Bool)

(assert (=> b!23451 m!16968))

(assert (=> b!23451 m!16968))

(declare-fun m!16970 () Bool)

(assert (=> b!23451 m!16970))

(assert (=> b!23453 m!16968))

(assert (=> b!23453 m!16968))

(declare-fun m!16972 () Bool)

(assert (=> b!23453 m!16972))

(assert (=> bm!1964 m!16968))

(declare-fun m!16974 () Bool)

(assert (=> bm!1964 m!16974))

(assert (=> b!23454 m!16968))

(assert (=> b!23454 m!16968))

(assert (=> b!23454 m!16970))

(assert (=> d!3997 d!4013))

(declare-fun d!4015 () Bool)

(assert (=> d!4015 (arrayForallSeekEntryOrOpenFound!0 lt!8354 lt!8341 (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))))))

(declare-fun lt!8379 () Unit!512)

(declare-fun choose!34 (array!1285 (_ BitVec 32) (_ BitVec 32)) Unit!512)

(assert (=> d!4015 (= lt!8379 (choose!34 lt!8341 (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) lt!8354))))

(assert (=> d!4015 (validMask!0 (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))))))

(assert (=> d!4015 (= (lemmaArrayForallSeekEntryOrOpenFoundAlwaysTrueFor0Array!0 lt!8341 (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) lt!8354) lt!8379)))

(declare-fun bs!951 () Bool)

(assert (= bs!951 d!4015))

(assert (=> bs!951 m!16750))

(assert (=> bs!951 m!16920))

(assert (=> bs!951 m!16750))

(declare-fun m!16976 () Bool)

(assert (=> bs!951 m!16976))

(assert (=> bs!951 m!16750))

(assert (=> bs!951 m!16918))

(assert (=> d!3997 d!4015))

(declare-fun d!4017 () Bool)

(assert (=> d!4017 (arrayNoDuplicates!0 lt!8338 lt!8351 lt!8352)))

(declare-fun lt!8382 () Unit!512)

(declare-fun choose!111 (array!1285 (_ BitVec 32) (_ BitVec 32) List!569) Unit!512)

(assert (=> d!4017 (= lt!8382 (choose!111 lt!8338 lt!8351 (bvadd (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001) lt!8352))))

(assert (=> d!4017 (= (size!704 lt!8338) (bvadd (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001))))

(assert (=> d!4017 (= (lemmaArrayNoDuplicatesInAll0Array!0 lt!8338 lt!8351 (bvadd (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001) lt!8352) lt!8382)))

(declare-fun bs!952 () Bool)

(assert (= bs!952 d!4017))

(assert (=> bs!952 m!16922))

(declare-fun m!16978 () Bool)

(assert (=> bs!952 m!16978))

(assert (=> d!3997 d!4017))

(declare-fun d!4019 () Bool)

(assert (=> d!4019 (= (arrayCountValidKeys!0 lt!8356 lt!8342 lt!8347) #b00000000000000000000000000000000)))

(declare-fun lt!8385 () Unit!512)

(declare-fun choose!59 (array!1285 (_ BitVec 32) (_ BitVec 32)) Unit!512)

(assert (=> d!4019 (= lt!8385 (choose!59 lt!8356 lt!8342 lt!8347))))

(assert (=> d!4019 (bvslt (size!704 lt!8356) #b01111111111111111111111111111111)))

(assert (=> d!4019 (= (lemmaArrayCountValidKeysOfFilled0ArrayIs0!0 lt!8356 lt!8342 lt!8347) lt!8385)))

(declare-fun bs!953 () Bool)

(assert (= bs!953 d!4019))

(assert (=> bs!953 m!16914))

(declare-fun m!16980 () Bool)

(assert (=> bs!953 m!16980))

(assert (=> d!3997 d!4019))

(declare-fun bm!1979 () Bool)

(declare-fun call!1983 () Bool)

(declare-fun lt!8447 () ListLongMap!567)

(assert (=> bm!1979 (= call!1983 (contains!230 lt!8447 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!1980 () Bool)

(declare-fun call!1985 () Bool)

(assert (=> bm!1980 (= call!1985 (contains!230 lt!8447 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!23497 () Bool)

(declare-fun e!15270 () Bool)

(declare-fun e!15271 () Bool)

(assert (=> b!23497 (= e!15270 e!15271)))

(declare-fun res!14464 () Bool)

(assert (=> b!23497 (=> (not res!14464) (not e!15271))))

(assert (=> b!23497 (= res!14464 (contains!230 lt!8447 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000)))))

(assert (=> b!23497 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))))))

(declare-fun b!23498 () Bool)

(declare-fun e!15264 () Unit!512)

(declare-fun lt!8432 () Unit!512)

(assert (=> b!23498 (= e!15264 lt!8432)))

(declare-fun lt!8444 () ListLongMap!567)

(declare-fun getCurrentListMapNoExtraKeys!15 (array!1285 array!1283 (_ BitVec 32) (_ BitVec 32) V!1189 V!1189 (_ BitVec 32) Int) ListLongMap!567)

(assert (=> b!23498 (= lt!8444 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!487 lt!8158)) (ite c!2998 (_values!1729 (_2!487 lt!8158)) lt!8287) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))

(declare-fun lt!8439 () (_ BitVec 64))

(assert (=> b!23498 (= lt!8439 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!8448 () (_ BitVec 64))

(assert (=> b!23498 (= lt!8448 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000))))

(declare-fun lt!8440 () Unit!512)

(declare-fun addStillContains!14 (ListLongMap!567 (_ BitVec 64) V!1189 (_ BitVec 64)) Unit!512)

(assert (=> b!23498 (= lt!8440 (addStillContains!14 lt!8444 lt!8439 (zeroValue!1666 (_2!487 lt!8158)) lt!8448))))

(assert (=> b!23498 (contains!230 (+!45 lt!8444 (tuple2!961 lt!8439 (zeroValue!1666 (_2!487 lt!8158)))) lt!8448)))

(declare-fun lt!8451 () Unit!512)

(assert (=> b!23498 (= lt!8451 lt!8440)))

(declare-fun lt!8435 () ListLongMap!567)

(assert (=> b!23498 (= lt!8435 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!487 lt!8158)) (ite c!2998 (_values!1729 (_2!487 lt!8158)) lt!8287) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))

(declare-fun lt!8450 () (_ BitVec 64))

(assert (=> b!23498 (= lt!8450 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!8449 () (_ BitVec 64))

(assert (=> b!23498 (= lt!8449 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000))))

(declare-fun lt!8434 () Unit!512)

(declare-fun addApplyDifferent!14 (ListLongMap!567 (_ BitVec 64) V!1189 (_ BitVec 64)) Unit!512)

(assert (=> b!23498 (= lt!8434 (addApplyDifferent!14 lt!8435 lt!8450 (minValue!1666 (_2!487 lt!8158)) lt!8449))))

(declare-fun apply!29 (ListLongMap!567 (_ BitVec 64)) V!1189)

(assert (=> b!23498 (= (apply!29 (+!45 lt!8435 (tuple2!961 lt!8450 (minValue!1666 (_2!487 lt!8158)))) lt!8449) (apply!29 lt!8435 lt!8449))))

(declare-fun lt!8433 () Unit!512)

(assert (=> b!23498 (= lt!8433 lt!8434)))

(declare-fun lt!8442 () ListLongMap!567)

(assert (=> b!23498 (= lt!8442 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!487 lt!8158)) (ite c!2998 (_values!1729 (_2!487 lt!8158)) lt!8287) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))

(declare-fun lt!8445 () (_ BitVec 64))

(assert (=> b!23498 (= lt!8445 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!8431 () (_ BitVec 64))

(assert (=> b!23498 (= lt!8431 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000))))

(declare-fun lt!8436 () Unit!512)

(assert (=> b!23498 (= lt!8436 (addApplyDifferent!14 lt!8442 lt!8445 (zeroValue!1666 (_2!487 lt!8158)) lt!8431))))

(assert (=> b!23498 (= (apply!29 (+!45 lt!8442 (tuple2!961 lt!8445 (zeroValue!1666 (_2!487 lt!8158)))) lt!8431) (apply!29 lt!8442 lt!8431))))

(declare-fun lt!8441 () Unit!512)

(assert (=> b!23498 (= lt!8441 lt!8436)))

(declare-fun lt!8443 () ListLongMap!567)

(assert (=> b!23498 (= lt!8443 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!487 lt!8158)) (ite c!2998 (_values!1729 (_2!487 lt!8158)) lt!8287) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))

(declare-fun lt!8438 () (_ BitVec 64))

(assert (=> b!23498 (= lt!8438 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!8430 () (_ BitVec 64))

(assert (=> b!23498 (= lt!8430 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000))))

(assert (=> b!23498 (= lt!8432 (addApplyDifferent!14 lt!8443 lt!8438 (minValue!1666 (_2!487 lt!8158)) lt!8430))))

(assert (=> b!23498 (= (apply!29 (+!45 lt!8443 (tuple2!961 lt!8438 (minValue!1666 (_2!487 lt!8158)))) lt!8430) (apply!29 lt!8443 lt!8430))))

(declare-fun call!1986 () ListLongMap!567)

(declare-fun bm!1981 () Bool)

(assert (=> bm!1981 (= call!1986 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!487 lt!8158)) (ite c!2998 (_values!1729 (_2!487 lt!8158)) lt!8287) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))

(declare-fun b!23499 () Bool)

(declare-fun res!14459 () Bool)

(declare-fun e!15267 () Bool)

(assert (=> b!23499 (=> (not res!14459) (not e!15267))))

(declare-fun e!15263 () Bool)

(assert (=> b!23499 (= res!14459 e!15263)))

(declare-fun c!3035 () Bool)

(assert (=> b!23499 (= c!3035 (not (= (bvand (extraKeys!1641 (_2!487 lt!8158)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!23500 () Bool)

(declare-fun e!15275 () Bool)

(assert (=> b!23500 (= e!15275 (not call!1985))))

(declare-fun b!23501 () Bool)

(assert (=> b!23501 (= e!15263 (not call!1983))))

(declare-fun bm!1982 () Bool)

(declare-fun call!1987 () ListLongMap!567)

(assert (=> bm!1982 (= call!1987 call!1986)))

(declare-fun b!23502 () Bool)

(declare-fun e!15273 () ListLongMap!567)

(declare-fun call!1988 () ListLongMap!567)

(assert (=> b!23502 (= e!15273 call!1988)))

(declare-fun b!23503 () Bool)

(declare-fun res!14462 () Bool)

(assert (=> b!23503 (=> (not res!14462) (not e!15267))))

(assert (=> b!23503 (= res!14462 e!15270)))

(declare-fun res!14457 () Bool)

(assert (=> b!23503 (=> res!14457 e!15270)))

(declare-fun e!15266 () Bool)

(assert (=> b!23503 (= res!14457 (not e!15266))))

(declare-fun res!14461 () Bool)

(assert (=> b!23503 (=> (not res!14461) (not e!15266))))

(assert (=> b!23503 (= res!14461 (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))))))

(declare-fun b!23505 () Bool)

(declare-fun e!15268 () ListLongMap!567)

(assert (=> b!23505 (= e!15268 call!1988)))

(declare-fun b!23506 () Bool)

(declare-fun e!15269 () Bool)

(assert (=> b!23506 (= e!15263 e!15269)))

(declare-fun res!14463 () Bool)

(assert (=> b!23506 (= res!14463 call!1983)))

(assert (=> b!23506 (=> (not res!14463) (not e!15269))))

(declare-fun b!23507 () Bool)

(assert (=> b!23507 (= e!15267 e!15275)))

(declare-fun c!3033 () Bool)

(assert (=> b!23507 (= c!3033 (not (= (bvand (extraKeys!1641 (_2!487 lt!8158)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!1983 () Bool)

(declare-fun call!1982 () ListLongMap!567)

(assert (=> bm!1983 (= call!1982 call!1987)))

(declare-fun b!23508 () Bool)

(assert (=> b!23508 (= e!15273 call!1982)))

(declare-fun b!23509 () Bool)

(declare-fun e!15274 () Bool)

(assert (=> b!23509 (= e!15274 (= (apply!29 lt!8447 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!1666 (_2!487 lt!8158))))))

(declare-fun b!23510 () Bool)

(declare-fun c!3036 () Bool)

(assert (=> b!23510 (= c!3036 (and (not (= (bvand (extraKeys!1641 (_2!487 lt!8158)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 (_2!487 lt!8158)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!23510 (= e!15268 e!15273)))

(declare-fun b!23511 () Bool)

(assert (=> b!23511 (= e!15266 (validKeyInArray!0 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000)))))

(declare-fun bm!1984 () Bool)

(declare-fun call!1984 () ListLongMap!567)

(assert (=> bm!1984 (= call!1988 call!1984)))

(declare-fun b!23512 () Bool)

(assert (=> b!23512 (= e!15275 e!15274)))

(declare-fun res!14460 () Bool)

(assert (=> b!23512 (= res!14460 call!1985)))

(assert (=> b!23512 (=> (not res!14460) (not e!15274))))

(declare-fun bm!1985 () Bool)

(declare-fun c!3034 () Bool)

(declare-fun c!3038 () Bool)

(assert (=> bm!1985 (= call!1984 (+!45 (ite c!3034 call!1986 (ite c!3038 call!1987 call!1982)) (ite (or c!3034 c!3038) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (_2!487 lt!8158))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!487 lt!8158))))))))

(declare-fun b!23513 () Bool)

(assert (=> b!23513 (= e!15269 (= (apply!29 lt!8447 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!1666 (_2!487 lt!8158))))))

(declare-fun b!23514 () Bool)

(declare-fun e!15265 () ListLongMap!567)

(assert (=> b!23514 (= e!15265 e!15268)))

(assert (=> b!23514 (= c!3038 (and (not (= (bvand (extraKeys!1641 (_2!487 lt!8158)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 (_2!487 lt!8158)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!23515 () Bool)

(declare-fun e!15272 () Bool)

(assert (=> b!23515 (= e!15272 (validKeyInArray!0 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000)))))

(declare-fun b!23504 () Bool)

(assert (=> b!23504 (= e!15265 (+!45 call!1984 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!487 lt!8158)))))))

(declare-fun d!4021 () Bool)

(assert (=> d!4021 e!15267))

(declare-fun res!14456 () Bool)

(assert (=> d!4021 (=> (not res!14456) (not e!15267))))

(assert (=> d!4021 (= res!14456 (or (bvsge #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))))))))

(declare-fun lt!8437 () ListLongMap!567)

(assert (=> d!4021 (= lt!8447 lt!8437)))

(declare-fun lt!8446 () Unit!512)

(assert (=> d!4021 (= lt!8446 e!15264)))

(declare-fun c!3037 () Bool)

(assert (=> d!4021 (= c!3037 e!15272)))

(declare-fun res!14458 () Bool)

(assert (=> d!4021 (=> (not res!14458) (not e!15272))))

(assert (=> d!4021 (= res!14458 (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))))))

(assert (=> d!4021 (= lt!8437 e!15265)))

(assert (=> d!4021 (= c!3034 (and (not (= (bvand (extraKeys!1641 (_2!487 lt!8158)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!1641 (_2!487 lt!8158)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!4021 (validMask!0 (mask!4730 (_2!487 lt!8158)))))

(assert (=> d!4021 (= (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) (ite c!2998 (_values!1729 (_2!487 lt!8158)) lt!8287) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))) lt!8447)))

(declare-fun b!23516 () Bool)

(declare-fun Unit!523 () Unit!512)

(assert (=> b!23516 (= e!15264 Unit!523)))

(declare-fun b!23517 () Bool)

(declare-fun get!390 (ValueCell!312 V!1189) V!1189)

(assert (=> b!23517 (= e!15271 (= (apply!29 lt!8447 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000)) (get!390 (select (arr!607 (ite c!2998 (_values!1729 (_2!487 lt!8158)) lt!8287)) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (_2!487 lt!8158)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!23517 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!703 (ite c!2998 (_values!1729 (_2!487 lt!8158)) lt!8287))))))

(assert (=> b!23517 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))))))

(assert (= (and d!4021 c!3034) b!23504))

(assert (= (and d!4021 (not c!3034)) b!23514))

(assert (= (and b!23514 c!3038) b!23505))

(assert (= (and b!23514 (not c!3038)) b!23510))

(assert (= (and b!23510 c!3036) b!23502))

(assert (= (and b!23510 (not c!3036)) b!23508))

(assert (= (or b!23502 b!23508) bm!1983))

(assert (= (or b!23505 bm!1983) bm!1982))

(assert (= (or b!23505 b!23502) bm!1984))

(assert (= (or b!23504 bm!1982) bm!1981))

(assert (= (or b!23504 bm!1984) bm!1985))

(assert (= (and d!4021 res!14458) b!23515))

(assert (= (and d!4021 c!3037) b!23498))

(assert (= (and d!4021 (not c!3037)) b!23516))

(assert (= (and d!4021 res!14456) b!23503))

(assert (= (and b!23503 res!14461) b!23511))

(assert (= (and b!23503 (not res!14457)) b!23497))

(assert (= (and b!23497 res!14464) b!23517))

(assert (= (and b!23503 res!14462) b!23499))

(assert (= (and b!23499 c!3035) b!23506))

(assert (= (and b!23499 (not c!3035)) b!23501))

(assert (= (and b!23506 res!14463) b!23513))

(assert (= (or b!23506 b!23501) bm!1979))

(assert (= (and b!23499 res!14459) b!23507))

(assert (= (and b!23507 c!3033) b!23512))

(assert (= (and b!23507 (not c!3033)) b!23500))

(assert (= (and b!23512 res!14460) b!23509))

(assert (= (or b!23512 b!23500) bm!1980))

(declare-fun b_lambda!1583 () Bool)

(assert (=> (not b_lambda!1583) (not b!23517)))

(declare-fun t!3242 () Bool)

(declare-fun tb!659 () Bool)

(assert (=> (and b!23142 (= (defaultEntry!1743 (v!1604 (underlying!116 thiss!938))) (defaultEntry!1743 (_2!487 lt!8158))) t!3242) tb!659))

(declare-fun result!1099 () Bool)

(assert (=> tb!659 (= result!1099 tp_is_empty!1023)))

(assert (=> b!23517 t!3242))

(declare-fun b_and!1489 () Bool)

(assert (= b_and!1487 (and (=> t!3242 result!1099) b_and!1489)))

(declare-fun m!16982 () Bool)

(assert (=> bm!1981 m!16982))

(declare-fun m!16984 () Bool)

(assert (=> b!23513 m!16984))

(declare-fun m!16986 () Bool)

(assert (=> b!23515 m!16986))

(assert (=> b!23515 m!16986))

(declare-fun m!16988 () Bool)

(assert (=> b!23515 m!16988))

(declare-fun m!16990 () Bool)

(assert (=> d!4021 m!16990))

(assert (=> b!23497 m!16986))

(assert (=> b!23497 m!16986))

(declare-fun m!16992 () Bool)

(assert (=> b!23497 m!16992))

(declare-fun m!16994 () Bool)

(assert (=> b!23498 m!16994))

(declare-fun m!16996 () Bool)

(assert (=> b!23498 m!16996))

(declare-fun m!16998 () Bool)

(assert (=> b!23498 m!16998))

(assert (=> b!23498 m!16996))

(declare-fun m!17000 () Bool)

(assert (=> b!23498 m!17000))

(declare-fun m!17002 () Bool)

(assert (=> b!23498 m!17002))

(declare-fun m!17004 () Bool)

(assert (=> b!23498 m!17004))

(declare-fun m!17006 () Bool)

(assert (=> b!23498 m!17006))

(declare-fun m!17008 () Bool)

(assert (=> b!23498 m!17008))

(declare-fun m!17010 () Bool)

(assert (=> b!23498 m!17010))

(declare-fun m!17012 () Bool)

(assert (=> b!23498 m!17012))

(assert (=> b!23498 m!16998))

(declare-fun m!17014 () Bool)

(assert (=> b!23498 m!17014))

(declare-fun m!17016 () Bool)

(assert (=> b!23498 m!17016))

(assert (=> b!23498 m!17004))

(declare-fun m!17018 () Bool)

(assert (=> b!23498 m!17018))

(assert (=> b!23498 m!16986))

(declare-fun m!17020 () Bool)

(assert (=> b!23498 m!17020))

(assert (=> b!23498 m!16982))

(declare-fun m!17022 () Bool)

(assert (=> b!23498 m!17022))

(assert (=> b!23498 m!17010))

(assert (=> b!23511 m!16986))

(assert (=> b!23511 m!16986))

(assert (=> b!23511 m!16988))

(declare-fun m!17024 () Bool)

(assert (=> b!23517 m!17024))

(assert (=> b!23517 m!17024))

(declare-fun m!17026 () Bool)

(assert (=> b!23517 m!17026))

(declare-fun m!17028 () Bool)

(assert (=> b!23517 m!17028))

(assert (=> b!23517 m!17026))

(assert (=> b!23517 m!16986))

(declare-fun m!17030 () Bool)

(assert (=> b!23517 m!17030))

(assert (=> b!23517 m!16986))

(declare-fun m!17032 () Bool)

(assert (=> bm!1980 m!17032))

(declare-fun m!17034 () Bool)

(assert (=> bm!1979 m!17034))

(declare-fun m!17036 () Bool)

(assert (=> b!23504 m!17036))

(declare-fun m!17038 () Bool)

(assert (=> b!23509 m!17038))

(declare-fun m!17040 () Bool)

(assert (=> bm!1985 m!17040))

(assert (=> bm!1955 d!4021))

(declare-fun b!23534 () Bool)

(declare-fun res!14474 () Bool)

(declare-fun e!15286 () Bool)

(assert (=> b!23534 (=> (not res!14474) (not e!15286))))

(declare-fun lt!8456 () SeekEntryResult!54)

(assert (=> b!23534 (= res!14474 (= (select (arr!608 (_keys!3164 (_2!487 lt!8158))) (index!2340 lt!8456)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!23534 (and (bvsge (index!2340 lt!8456) #b00000000000000000000000000000000) (bvslt (index!2340 lt!8456) (size!704 (_keys!3164 (_2!487 lt!8158)))))))

(declare-fun b!23535 () Bool)

(declare-fun e!15284 () Bool)

(assert (=> b!23535 (= e!15284 ((_ is Undefined!54) lt!8456))))

(declare-fun b!23536 () Bool)

(assert (=> b!23536 (and (bvsge (index!2337 lt!8456) #b00000000000000000000000000000000) (bvslt (index!2337 lt!8456) (size!704 (_keys!3164 (_2!487 lt!8158)))))))

(declare-fun res!14473 () Bool)

(assert (=> b!23536 (= res!14473 (= (select (arr!608 (_keys!3164 (_2!487 lt!8158))) (index!2337 lt!8456)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!15287 () Bool)

(assert (=> b!23536 (=> (not res!14473) (not e!15287))))

(declare-fun b!23537 () Bool)

(declare-fun call!1993 () Bool)

(assert (=> b!23537 (= e!15286 (not call!1993))))

(declare-fun b!23538 () Bool)

(declare-fun res!14475 () Bool)

(assert (=> b!23538 (=> (not res!14475) (not e!15286))))

(declare-fun call!1994 () Bool)

(assert (=> b!23538 (= res!14475 call!1994)))

(assert (=> b!23538 (= e!15284 e!15286)))

(declare-fun bm!1990 () Bool)

(declare-fun c!3044 () Bool)

(assert (=> bm!1990 (= call!1994 (inRange!0 (ite c!3044 (index!2337 lt!8456) (index!2340 lt!8456)) (mask!4730 (_2!487 lt!8158))))))

(declare-fun b!23539 () Bool)

(declare-fun e!15285 () Bool)

(assert (=> b!23539 (= e!15285 e!15284)))

(declare-fun c!3043 () Bool)

(assert (=> b!23539 (= c!3043 ((_ is MissingVacant!54) lt!8456))))

(declare-fun b!23540 () Bool)

(assert (=> b!23540 (= e!15287 (not call!1993))))

(declare-fun d!4023 () Bool)

(assert (=> d!4023 e!15285))

(assert (=> d!4023 (= c!3044 ((_ is MissingZero!54) lt!8456))))

(assert (=> d!4023 (= lt!8456 (seekEntryOrOpen!0 #b1000000000000000000000000000000000000000000000000000000000000000 (_keys!3164 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158))))))

(declare-fun lt!8457 () Unit!512)

(declare-fun choose!203 (array!1285 array!1283 (_ BitVec 32) (_ BitVec 32) V!1189 V!1189 (_ BitVec 64) Int) Unit!512)

(assert (=> d!4023 (= lt!8457 (choose!203 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b1000000000000000000000000000000000000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))

(assert (=> d!4023 (validMask!0 (mask!4730 (_2!487 lt!8158)))))

(assert (=> d!4023 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!10 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b1000000000000000000000000000000000000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))) lt!8457)))

(declare-fun b!23541 () Bool)

(assert (=> b!23541 (= e!15285 e!15287)))

(declare-fun res!14476 () Bool)

(assert (=> b!23541 (= res!14476 call!1994)))

(assert (=> b!23541 (=> (not res!14476) (not e!15287))))

(declare-fun bm!1991 () Bool)

(assert (=> bm!1991 (= call!1993 (arrayContainsKey!0 (_keys!3164 (_2!487 lt!8158)) #b1000000000000000000000000000000000000000000000000000000000000000 #b00000000000000000000000000000000))))

(assert (= (and d!4023 c!3044) b!23541))

(assert (= (and d!4023 (not c!3044)) b!23539))

(assert (= (and b!23541 res!14476) b!23536))

(assert (= (and b!23536 res!14473) b!23540))

(assert (= (and b!23539 c!3043) b!23538))

(assert (= (and b!23539 (not c!3043)) b!23535))

(assert (= (and b!23538 res!14475) b!23534))

(assert (= (and b!23534 res!14474) b!23537))

(assert (= (or b!23541 b!23538) bm!1990))

(assert (= (or b!23540 b!23537) bm!1991))

(assert (=> d!4023 m!16890))

(declare-fun m!17042 () Bool)

(assert (=> d!4023 m!17042))

(assert (=> d!4023 m!16990))

(declare-fun m!17044 () Bool)

(assert (=> b!23534 m!17044))

(declare-fun m!17046 () Bool)

(assert (=> bm!1990 m!17046))

(declare-fun m!17048 () Bool)

(assert (=> b!23536 m!17048))

(assert (=> bm!1991 m!16866))

(assert (=> bm!1945 d!4023))

(declare-fun d!4025 () Bool)

(declare-fun e!15292 () Bool)

(assert (=> d!4025 e!15292))

(declare-fun res!14479 () Bool)

(assert (=> d!4025 (=> res!14479 e!15292)))

(declare-fun lt!8466 () Bool)

(assert (=> d!4025 (= res!14479 (not lt!8466))))

(declare-fun lt!8467 () Bool)

(assert (=> d!4025 (= lt!8466 lt!8467)))

(declare-fun lt!8468 () Unit!512)

(declare-fun e!15293 () Unit!512)

(assert (=> d!4025 (= lt!8468 e!15293)))

(declare-fun c!3047 () Bool)

(assert (=> d!4025 (= c!3047 lt!8467)))

(declare-fun containsKey!25 (List!568 (_ BitVec 64)) Bool)

(assert (=> d!4025 (= lt!8467 (containsKey!25 (toList!299 call!1928) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!4025 (= (contains!230 call!1928 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) lt!8466)))

(declare-fun b!23548 () Bool)

(declare-fun lt!8469 () Unit!512)

(assert (=> b!23548 (= e!15293 lt!8469)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!22 (List!568 (_ BitVec 64)) Unit!512)

(assert (=> b!23548 (= lt!8469 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!299 call!1928) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-datatypes ((Option!67 0))(
  ( (Some!66 (v!1611 V!1189)) (None!65) )
))
(declare-fun isDefined!23 (Option!67) Bool)

(declare-fun getValueByKey!61 (List!568 (_ BitVec 64)) Option!67)

(assert (=> b!23548 (isDefined!23 (getValueByKey!61 (toList!299 call!1928) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!23549 () Bool)

(declare-fun Unit!524 () Unit!512)

(assert (=> b!23549 (= e!15293 Unit!524)))

(declare-fun b!23550 () Bool)

(assert (=> b!23550 (= e!15292 (isDefined!23 (getValueByKey!61 (toList!299 call!1928) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!4025 c!3047) b!23548))

(assert (= (and d!4025 (not c!3047)) b!23549))

(assert (= (and d!4025 (not res!14479)) b!23550))

(declare-fun m!17050 () Bool)

(assert (=> d!4025 m!17050))

(declare-fun m!17052 () Bool)

(assert (=> b!23548 m!17052))

(declare-fun m!17054 () Bool)

(assert (=> b!23548 m!17054))

(assert (=> b!23548 m!17054))

(declare-fun m!17056 () Bool)

(assert (=> b!23548 m!17056))

(assert (=> b!23550 m!17054))

(assert (=> b!23550 m!17054))

(assert (=> b!23550 m!17056))

(assert (=> b!23318 d!4025))

(declare-fun d!4027 () Bool)

(assert (=> d!4027 (= (head!830 (toList!299 (map!407 lt!8353))) (h!1130 (toList!299 (map!407 lt!8353))))))

(assert (=> b!23376 d!4027))

(assert (=> b!23376 d!4009))

(declare-fun d!4029 () Bool)

(declare-fun e!15296 () Bool)

(assert (=> d!4029 e!15296))

(declare-fun c!3050 () Bool)

(assert (=> d!4029 (= c!3050 (and (not (= (_1!489 lt!8355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (_1!489 lt!8355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!8472 () Unit!512)

(declare-fun choose!204 (array!1285 array!1283 (_ BitVec 32) (_ BitVec 32) V!1189 V!1189 (_ BitVec 64) Int) Unit!512)

(assert (=> d!4029 (= lt!8472 (choose!204 lt!8350 (array!1284 ((as const (Array (_ BitVec 32) ValueCell!312)) EmptyCell!312) (bvadd (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001)) (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) lt!8337 (dynLambda!144 (defaultEntry!1743 (v!1604 (underlying!116 thiss!938))) #b0000000000000000000000000000000000000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (v!1604 (underlying!116 thiss!938))) #b0000000000000000000000000000000000000000000000000000000000000000) (_1!489 lt!8355) (defaultEntry!1743 (v!1604 (underlying!116 thiss!938)))))))

(assert (=> d!4029 (validMask!0 (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))))))

(assert (=> d!4029 (= (lemmaKeyInListMapIsInArray!91 lt!8350 (array!1284 ((as const (Array (_ BitVec 32) ValueCell!312)) EmptyCell!312) (bvadd (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001)) (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) lt!8337 (dynLambda!144 (defaultEntry!1743 (v!1604 (underlying!116 thiss!938))) #b0000000000000000000000000000000000000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (v!1604 (underlying!116 thiss!938))) #b0000000000000000000000000000000000000000000000000000000000000000) (_1!489 lt!8355) (defaultEntry!1743 (v!1604 (underlying!116 thiss!938)))) lt!8472)))

(declare-fun b!23555 () Bool)

(assert (=> b!23555 (= e!15296 (arrayContainsKey!0 lt!8350 (_1!489 lt!8355) #b00000000000000000000000000000000))))

(declare-fun b!23556 () Bool)

(assert (=> b!23556 (= e!15296 (ite (= (_1!489 lt!8355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand lt!8337 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!8337 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!4029 c!3050) b!23555))

(assert (= (and d!4029 (not c!3050)) b!23556))

(assert (=> d!4029 m!16750))

(assert (=> d!4029 m!16900))

(assert (=> d!4029 m!16900))

(declare-fun m!17058 () Bool)

(assert (=> d!4029 m!17058))

(assert (=> d!4029 m!16750))

(assert (=> d!4029 m!16918))

(assert (=> b!23555 m!16912))

(assert (=> b!23376 d!4029))

(declare-fun d!4031 () Bool)

(declare-fun lt!8475 () (_ BitVec 32))

(assert (=> d!4031 (and (or (bvslt lt!8475 #b00000000000000000000000000000000) (bvsge lt!8475 (size!704 (array!1286 ((as const (Array (_ BitVec 32) (_ BitVec 64))) #b0000000000000000000000000000000000000000000000000000000000000000) (bvadd (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001)))) (and (bvsge lt!8475 #b00000000000000000000000000000000) (bvslt lt!8475 (size!704 (array!1286 ((as const (Array (_ BitVec 32) (_ BitVec 64))) #b0000000000000000000000000000000000000000000000000000000000000000) (bvadd (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001)))))) (bvsge lt!8475 #b00000000000000000000000000000000) (bvslt lt!8475 (size!704 (array!1286 ((as const (Array (_ BitVec 32) (_ BitVec 64))) #b0000000000000000000000000000000000000000000000000000000000000000) (bvadd (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001)))) (= (select (arr!608 (array!1286 ((as const (Array (_ BitVec 32) (_ BitVec 64))) #b0000000000000000000000000000000000000000000000000000000000000000) (bvadd (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001))) lt!8475) (_1!489 lt!8355)))))

(declare-fun e!15299 () (_ BitVec 32))

(assert (=> d!4031 (= lt!8475 e!15299)))

(declare-fun c!3053 () Bool)

(assert (=> d!4031 (= c!3053 (= (select (arr!608 (array!1286 ((as const (Array (_ BitVec 32) (_ BitVec 64))) #b0000000000000000000000000000000000000000000000000000000000000000) (bvadd (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001))) #b00000000000000000000000000000000) (_1!489 lt!8355)))))

(assert (=> d!4031 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (array!1286 ((as const (Array (_ BitVec 32) (_ BitVec 64))) #b0000000000000000000000000000000000000000000000000000000000000000) (bvadd (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001)))) (bvslt (size!704 (array!1286 ((as const (Array (_ BitVec 32) (_ BitVec 64))) #b0000000000000000000000000000000000000000000000000000000000000000) (bvadd (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001))) #b01111111111111111111111111111111))))

(assert (=> d!4031 (= (arrayScanForKey!0 (array!1286 ((as const (Array (_ BitVec 32) (_ BitVec 64))) #b0000000000000000000000000000000000000000000000000000000000000000) (bvadd (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001)) (_1!489 lt!8355) #b00000000000000000000000000000000) lt!8475)))

(declare-fun b!23561 () Bool)

(assert (=> b!23561 (= e!15299 #b00000000000000000000000000000000)))

(declare-fun b!23562 () Bool)

(assert (=> b!23562 (= e!15299 (arrayScanForKey!0 (array!1286 ((as const (Array (_ BitVec 32) (_ BitVec 64))) #b0000000000000000000000000000000000000000000000000000000000000000) (bvadd (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001)) (_1!489 lt!8355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!4031 c!3053) b!23561))

(assert (= (and d!4031 (not c!3053)) b!23562))

(declare-fun m!17060 () Bool)

(assert (=> d!4031 m!17060))

(declare-fun m!17062 () Bool)

(assert (=> d!4031 m!17062))

(declare-fun m!17064 () Bool)

(assert (=> b!23562 m!17064))

(assert (=> b!23376 d!4031))

(declare-fun b!23575 () Bool)

(declare-fun e!15307 () SeekEntryResult!54)

(declare-fun lt!8482 () SeekEntryResult!54)

(assert (=> b!23575 (= e!15307 (MissingZero!54 (index!2339 lt!8482)))))

(declare-fun b!23576 () Bool)

(declare-fun e!15308 () SeekEntryResult!54)

(assert (=> b!23576 (= e!15308 Undefined!54)))

(declare-fun b!23577 () Bool)

(declare-fun e!15306 () SeekEntryResult!54)

(assert (=> b!23577 (= e!15306 (Found!54 (index!2339 lt!8482)))))

(declare-fun d!4033 () Bool)

(declare-fun lt!8484 () SeekEntryResult!54)

(assert (=> d!4033 (and (or ((_ is Undefined!54) lt!8484) (not ((_ is Found!54) lt!8484)) (and (bvsge (index!2338 lt!8484) #b00000000000000000000000000000000) (bvslt (index!2338 lt!8484) (size!704 (_keys!3164 (_2!487 lt!8158)))))) (or ((_ is Undefined!54) lt!8484) ((_ is Found!54) lt!8484) (not ((_ is MissingZero!54) lt!8484)) (and (bvsge (index!2337 lt!8484) #b00000000000000000000000000000000) (bvslt (index!2337 lt!8484) (size!704 (_keys!3164 (_2!487 lt!8158)))))) (or ((_ is Undefined!54) lt!8484) ((_ is Found!54) lt!8484) ((_ is MissingZero!54) lt!8484) (not ((_ is MissingVacant!54) lt!8484)) (and (bvsge (index!2340 lt!8484) #b00000000000000000000000000000000) (bvslt (index!2340 lt!8484) (size!704 (_keys!3164 (_2!487 lt!8158)))))) (or ((_ is Undefined!54) lt!8484) (ite ((_ is Found!54) lt!8484) (= (select (arr!608 (_keys!3164 (_2!487 lt!8158))) (index!2338 lt!8484)) #b1000000000000000000000000000000000000000000000000000000000000000) (ite ((_ is MissingZero!54) lt!8484) (= (select (arr!608 (_keys!3164 (_2!487 lt!8158))) (index!2337 lt!8484)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!54) lt!8484) (= (select (arr!608 (_keys!3164 (_2!487 lt!8158))) (index!2340 lt!8484)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!4033 (= lt!8484 e!15308)))

(declare-fun c!3060 () Bool)

(assert (=> d!4033 (= c!3060 (and ((_ is Intermediate!54) lt!8482) (undefined!866 lt!8482)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!1285 (_ BitVec 32)) SeekEntryResult!54)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!4033 (= lt!8482 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 #b1000000000000000000000000000000000000000000000000000000000000000 (mask!4730 (_2!487 lt!8158))) #b1000000000000000000000000000000000000000000000000000000000000000 (_keys!3164 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158))))))

(assert (=> d!4033 (validMask!0 (mask!4730 (_2!487 lt!8158)))))

(assert (=> d!4033 (= (seekEntryOrOpen!0 #b1000000000000000000000000000000000000000000000000000000000000000 (_keys!3164 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158))) lt!8484)))

(declare-fun b!23578 () Bool)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!1285 (_ BitVec 32)) SeekEntryResult!54)

(assert (=> b!23578 (= e!15307 (seekKeyOrZeroReturnVacant!0 (x!5576 lt!8482) (index!2339 lt!8482) (index!2339 lt!8482) #b1000000000000000000000000000000000000000000000000000000000000000 (_keys!3164 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158))))))

(declare-fun b!23579 () Bool)

(assert (=> b!23579 (= e!15308 e!15306)))

(declare-fun lt!8483 () (_ BitVec 64))

(assert (=> b!23579 (= lt!8483 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) (index!2339 lt!8482)))))

(declare-fun c!3062 () Bool)

(assert (=> b!23579 (= c!3062 (= lt!8483 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!23580 () Bool)

(declare-fun c!3061 () Bool)

(assert (=> b!23580 (= c!3061 (= lt!8483 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!23580 (= e!15306 e!15307)))

(assert (= (and d!4033 c!3060) b!23576))

(assert (= (and d!4033 (not c!3060)) b!23579))

(assert (= (and b!23579 c!3062) b!23577))

(assert (= (and b!23579 (not c!3062)) b!23580))

(assert (= (and b!23580 c!3061) b!23575))

(assert (= (and b!23580 (not c!3061)) b!23578))

(declare-fun m!17066 () Bool)

(assert (=> d!4033 m!17066))

(declare-fun m!17068 () Bool)

(assert (=> d!4033 m!17068))

(declare-fun m!17070 () Bool)

(assert (=> d!4033 m!17070))

(assert (=> d!4033 m!17066))

(assert (=> d!4033 m!16990))

(declare-fun m!17072 () Bool)

(assert (=> d!4033 m!17072))

(declare-fun m!17074 () Bool)

(assert (=> d!4033 m!17074))

(declare-fun m!17076 () Bool)

(assert (=> b!23578 m!17076))

(declare-fun m!17078 () Bool)

(assert (=> b!23579 m!17078))

(assert (=> bm!1938 d!4033))

(declare-fun d!4035 () Bool)

(assert (=> d!4035 (= (inRange!0 (ite c!2982 (ite c!2977 (index!2338 lt!8262) (ite c!2973 (index!2337 lt!8238) (index!2340 lt!8238))) (ite c!2976 (index!2338 lt!8259) (ite c!2981 (index!2337 lt!8246) (index!2340 lt!8246)))) (mask!4730 lt!8161)) (and (bvsge (ite c!2982 (ite c!2977 (index!2338 lt!8262) (ite c!2973 (index!2337 lt!8238) (index!2340 lt!8238))) (ite c!2976 (index!2338 lt!8259) (ite c!2981 (index!2337 lt!8246) (index!2340 lt!8246)))) #b00000000000000000000000000000000) (bvslt (ite c!2982 (ite c!2977 (index!2338 lt!8262) (ite c!2973 (index!2337 lt!8238) (index!2340 lt!8238))) (ite c!2976 (index!2338 lt!8259) (ite c!2981 (index!2337 lt!8246) (index!2340 lt!8246)))) (bvadd (mask!4730 lt!8161) #b00000000000000000000000000000001))))))

(assert (=> bm!1918 d!4035))

(declare-fun d!4037 () Bool)

(declare-fun e!15309 () Bool)

(assert (=> d!4037 e!15309))

(declare-fun res!14480 () Bool)

(assert (=> d!4037 (=> res!14480 e!15309)))

(declare-fun lt!8485 () Bool)

(assert (=> d!4037 (= res!14480 (not lt!8485))))

(declare-fun lt!8486 () Bool)

(assert (=> d!4037 (= lt!8485 lt!8486)))

(declare-fun lt!8487 () Unit!512)

(declare-fun e!15310 () Unit!512)

(assert (=> d!4037 (= lt!8487 e!15310)))

(declare-fun c!3063 () Bool)

(assert (=> d!4037 (= c!3063 lt!8486)))

(assert (=> d!4037 (= lt!8486 (containsKey!25 (toList!299 call!1952) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!4037 (= (contains!230 call!1952 #b1000000000000000000000000000000000000000000000000000000000000000) lt!8485)))

(declare-fun b!23581 () Bool)

(declare-fun lt!8488 () Unit!512)

(assert (=> b!23581 (= e!15310 lt!8488)))

(assert (=> b!23581 (= lt!8488 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!299 call!1952) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!23581 (isDefined!23 (getValueByKey!61 (toList!299 call!1952) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!23582 () Bool)

(declare-fun Unit!525 () Unit!512)

(assert (=> b!23582 (= e!15310 Unit!525)))

(declare-fun b!23583 () Bool)

(assert (=> b!23583 (= e!15309 (isDefined!23 (getValueByKey!61 (toList!299 call!1952) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!4037 c!3063) b!23581))

(assert (= (and d!4037 (not c!3063)) b!23582))

(assert (= (and d!4037 (not res!14480)) b!23583))

(declare-fun m!17080 () Bool)

(assert (=> d!4037 m!17080))

(declare-fun m!17082 () Bool)

(assert (=> b!23581 m!17082))

(declare-fun m!17084 () Bool)

(assert (=> b!23581 m!17084))

(assert (=> b!23581 m!17084))

(declare-fun m!17086 () Bool)

(assert (=> b!23581 m!17086))

(assert (=> b!23583 m!17084))

(assert (=> b!23583 m!17084))

(assert (=> b!23583 m!17086))

(assert (=> b!23360 d!4037))

(declare-fun bm!1992 () Bool)

(declare-fun call!1996 () Bool)

(declare-fun lt!8506 () ListLongMap!567)

(assert (=> bm!1992 (= call!1996 (contains!230 lt!8506 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!1993 () Bool)

(declare-fun call!1998 () Bool)

(assert (=> bm!1993 (= call!1998 (contains!230 lt!8506 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!23584 () Bool)

(declare-fun e!15318 () Bool)

(declare-fun e!15319 () Bool)

(assert (=> b!23584 (= e!15318 e!15319)))

(declare-fun res!14489 () Bool)

(assert (=> b!23584 (=> (not res!14489) (not e!15319))))

(assert (=> b!23584 (= res!14489 (contains!230 lt!8506 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000)))))

(assert (=> b!23584 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))))))

(declare-fun b!23585 () Bool)

(declare-fun e!15312 () Unit!512)

(declare-fun lt!8491 () Unit!512)

(assert (=> b!23585 (= e!15312 lt!8491)))

(declare-fun lt!8503 () ListLongMap!567)

(assert (=> b!23585 (= lt!8503 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!487 lt!8158)) (ite (or c!2998 c!2996) (_values!1729 (_2!487 lt!8158)) (array!1284 (store (arr!607 (_values!1729 (_2!487 lt!8158))) (index!2338 lt!8281) (ValueCellFull!312 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!703 (_values!1729 (_2!487 lt!8158))))) (mask!4730 (_2!487 lt!8158)) (ite c!2998 (ite c!2997 lt!8271 lt!8268) (extraKeys!1641 (_2!487 lt!8158))) (ite (and c!2998 c!2997) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 (_2!487 lt!8158))) (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158))) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))

(declare-fun lt!8498 () (_ BitVec 64))

(assert (=> b!23585 (= lt!8498 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!8507 () (_ BitVec 64))

(assert (=> b!23585 (= lt!8507 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000))))

(declare-fun lt!8499 () Unit!512)

(assert (=> b!23585 (= lt!8499 (addStillContains!14 lt!8503 lt!8498 (ite (and c!2998 c!2997) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 (_2!487 lt!8158))) lt!8507))))

(assert (=> b!23585 (contains!230 (+!45 lt!8503 (tuple2!961 lt!8498 (ite (and c!2998 c!2997) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 (_2!487 lt!8158))))) lt!8507)))

(declare-fun lt!8510 () Unit!512)

(assert (=> b!23585 (= lt!8510 lt!8499)))

(declare-fun lt!8494 () ListLongMap!567)

(assert (=> b!23585 (= lt!8494 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!487 lt!8158)) (ite (or c!2998 c!2996) (_values!1729 (_2!487 lt!8158)) (array!1284 (store (arr!607 (_values!1729 (_2!487 lt!8158))) (index!2338 lt!8281) (ValueCellFull!312 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!703 (_values!1729 (_2!487 lt!8158))))) (mask!4730 (_2!487 lt!8158)) (ite c!2998 (ite c!2997 lt!8271 lt!8268) (extraKeys!1641 (_2!487 lt!8158))) (ite (and c!2998 c!2997) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 (_2!487 lt!8158))) (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158))) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))

(declare-fun lt!8509 () (_ BitVec 64))

(assert (=> b!23585 (= lt!8509 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!8508 () (_ BitVec 64))

(assert (=> b!23585 (= lt!8508 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000))))

(declare-fun lt!8493 () Unit!512)

(assert (=> b!23585 (= lt!8493 (addApplyDifferent!14 lt!8494 lt!8509 (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158))) lt!8508))))

(assert (=> b!23585 (= (apply!29 (+!45 lt!8494 (tuple2!961 lt!8509 (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158))))) lt!8508) (apply!29 lt!8494 lt!8508))))

(declare-fun lt!8492 () Unit!512)

(assert (=> b!23585 (= lt!8492 lt!8493)))

(declare-fun lt!8501 () ListLongMap!567)

(assert (=> b!23585 (= lt!8501 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!487 lt!8158)) (ite (or c!2998 c!2996) (_values!1729 (_2!487 lt!8158)) (array!1284 (store (arr!607 (_values!1729 (_2!487 lt!8158))) (index!2338 lt!8281) (ValueCellFull!312 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!703 (_values!1729 (_2!487 lt!8158))))) (mask!4730 (_2!487 lt!8158)) (ite c!2998 (ite c!2997 lt!8271 lt!8268) (extraKeys!1641 (_2!487 lt!8158))) (ite (and c!2998 c!2997) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 (_2!487 lt!8158))) (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158))) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))

(declare-fun lt!8504 () (_ BitVec 64))

(assert (=> b!23585 (= lt!8504 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!8490 () (_ BitVec 64))

(assert (=> b!23585 (= lt!8490 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000))))

(declare-fun lt!8495 () Unit!512)

(assert (=> b!23585 (= lt!8495 (addApplyDifferent!14 lt!8501 lt!8504 (ite (and c!2998 c!2997) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 (_2!487 lt!8158))) lt!8490))))

(assert (=> b!23585 (= (apply!29 (+!45 lt!8501 (tuple2!961 lt!8504 (ite (and c!2998 c!2997) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 (_2!487 lt!8158))))) lt!8490) (apply!29 lt!8501 lt!8490))))

(declare-fun lt!8500 () Unit!512)

(assert (=> b!23585 (= lt!8500 lt!8495)))

(declare-fun lt!8502 () ListLongMap!567)

(assert (=> b!23585 (= lt!8502 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!487 lt!8158)) (ite (or c!2998 c!2996) (_values!1729 (_2!487 lt!8158)) (array!1284 (store (arr!607 (_values!1729 (_2!487 lt!8158))) (index!2338 lt!8281) (ValueCellFull!312 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!703 (_values!1729 (_2!487 lt!8158))))) (mask!4730 (_2!487 lt!8158)) (ite c!2998 (ite c!2997 lt!8271 lt!8268) (extraKeys!1641 (_2!487 lt!8158))) (ite (and c!2998 c!2997) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 (_2!487 lt!8158))) (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158))) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))

(declare-fun lt!8497 () (_ BitVec 64))

(assert (=> b!23585 (= lt!8497 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!8489 () (_ BitVec 64))

(assert (=> b!23585 (= lt!8489 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000))))

(assert (=> b!23585 (= lt!8491 (addApplyDifferent!14 lt!8502 lt!8497 (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158))) lt!8489))))

(assert (=> b!23585 (= (apply!29 (+!45 lt!8502 (tuple2!961 lt!8497 (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158))))) lt!8489) (apply!29 lt!8502 lt!8489))))

(declare-fun call!1999 () ListLongMap!567)

(declare-fun bm!1994 () Bool)

(assert (=> bm!1994 (= call!1999 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!487 lt!8158)) (ite (or c!2998 c!2996) (_values!1729 (_2!487 lt!8158)) (array!1284 (store (arr!607 (_values!1729 (_2!487 lt!8158))) (index!2338 lt!8281) (ValueCellFull!312 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!703 (_values!1729 (_2!487 lt!8158))))) (mask!4730 (_2!487 lt!8158)) (ite c!2998 (ite c!2997 lt!8271 lt!8268) (extraKeys!1641 (_2!487 lt!8158))) (ite (and c!2998 c!2997) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 (_2!487 lt!8158))) (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158))) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))

(declare-fun b!23586 () Bool)

(declare-fun res!14484 () Bool)

(declare-fun e!15315 () Bool)

(assert (=> b!23586 (=> (not res!14484) (not e!15315))))

(declare-fun e!15311 () Bool)

(assert (=> b!23586 (= res!14484 e!15311)))

(declare-fun c!3066 () Bool)

(assert (=> b!23586 (= c!3066 (not (= (bvand (ite c!2998 (ite c!2997 lt!8271 lt!8268) (extraKeys!1641 (_2!487 lt!8158))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!23587 () Bool)

(declare-fun e!15323 () Bool)

(assert (=> b!23587 (= e!15323 (not call!1998))))

(declare-fun b!23588 () Bool)

(assert (=> b!23588 (= e!15311 (not call!1996))))

(declare-fun bm!1995 () Bool)

(declare-fun call!2000 () ListLongMap!567)

(assert (=> bm!1995 (= call!2000 call!1999)))

(declare-fun b!23589 () Bool)

(declare-fun e!15321 () ListLongMap!567)

(declare-fun call!2001 () ListLongMap!567)

(assert (=> b!23589 (= e!15321 call!2001)))

(declare-fun b!23590 () Bool)

(declare-fun res!14487 () Bool)

(assert (=> b!23590 (=> (not res!14487) (not e!15315))))

(assert (=> b!23590 (= res!14487 e!15318)))

(declare-fun res!14482 () Bool)

(assert (=> b!23590 (=> res!14482 e!15318)))

(declare-fun e!15314 () Bool)

(assert (=> b!23590 (= res!14482 (not e!15314))))

(declare-fun res!14486 () Bool)

(assert (=> b!23590 (=> (not res!14486) (not e!15314))))

(assert (=> b!23590 (= res!14486 (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))))))

(declare-fun b!23592 () Bool)

(declare-fun e!15316 () ListLongMap!567)

(assert (=> b!23592 (= e!15316 call!2001)))

(declare-fun b!23593 () Bool)

(declare-fun e!15317 () Bool)

(assert (=> b!23593 (= e!15311 e!15317)))

(declare-fun res!14488 () Bool)

(assert (=> b!23593 (= res!14488 call!1996)))

(assert (=> b!23593 (=> (not res!14488) (not e!15317))))

(declare-fun b!23594 () Bool)

(assert (=> b!23594 (= e!15315 e!15323)))

(declare-fun c!3064 () Bool)

(assert (=> b!23594 (= c!3064 (not (= (bvand (ite c!2998 (ite c!2997 lt!8271 lt!8268) (extraKeys!1641 (_2!487 lt!8158))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!1996 () Bool)

(declare-fun call!1995 () ListLongMap!567)

(assert (=> bm!1996 (= call!1995 call!2000)))

(declare-fun b!23595 () Bool)

(assert (=> b!23595 (= e!15321 call!1995)))

(declare-fun b!23596 () Bool)

(declare-fun e!15322 () Bool)

(assert (=> b!23596 (= e!15322 (= (apply!29 lt!8506 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158)))))))

(declare-fun b!23597 () Bool)

(declare-fun c!3067 () Bool)

(assert (=> b!23597 (= c!3067 (and (not (= (bvand (ite c!2998 (ite c!2997 lt!8271 lt!8268) (extraKeys!1641 (_2!487 lt!8158))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!2998 (ite c!2997 lt!8271 lt!8268) (extraKeys!1641 (_2!487 lt!8158))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!23597 (= e!15316 e!15321)))

(declare-fun b!23598 () Bool)

(assert (=> b!23598 (= e!15314 (validKeyInArray!0 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000)))))

(declare-fun bm!1997 () Bool)

(declare-fun call!1997 () ListLongMap!567)

(assert (=> bm!1997 (= call!2001 call!1997)))

(declare-fun b!23599 () Bool)

(assert (=> b!23599 (= e!15323 e!15322)))

(declare-fun res!14485 () Bool)

(assert (=> b!23599 (= res!14485 call!1998)))

(assert (=> b!23599 (=> (not res!14485) (not e!15322))))

(declare-fun bm!1998 () Bool)

(declare-fun c!3069 () Bool)

(declare-fun c!3065 () Bool)

(assert (=> bm!1998 (= call!1997 (+!45 (ite c!3065 call!1999 (ite c!3069 call!2000 call!1995)) (ite (or c!3065 c!3069) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!2998 c!2997) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 (_2!487 lt!8158)))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158)))))))))

(declare-fun b!23600 () Bool)

(assert (=> b!23600 (= e!15317 (= (apply!29 lt!8506 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!2998 c!2997) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 (_2!487 lt!8158)))))))

(declare-fun b!23601 () Bool)

(declare-fun e!15313 () ListLongMap!567)

(assert (=> b!23601 (= e!15313 e!15316)))

(assert (=> b!23601 (= c!3069 (and (not (= (bvand (ite c!2998 (ite c!2997 lt!8271 lt!8268) (extraKeys!1641 (_2!487 lt!8158))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!2998 (ite c!2997 lt!8271 lt!8268) (extraKeys!1641 (_2!487 lt!8158))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!23602 () Bool)

(declare-fun e!15320 () Bool)

(assert (=> b!23602 (= e!15320 (validKeyInArray!0 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000)))))

(declare-fun b!23591 () Bool)

(assert (=> b!23591 (= e!15313 (+!45 call!1997 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158))))))))

(declare-fun d!4039 () Bool)

(assert (=> d!4039 e!15315))

(declare-fun res!14481 () Bool)

(assert (=> d!4039 (=> (not res!14481) (not e!15315))))

(assert (=> d!4039 (= res!14481 (or (bvsge #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))))))))

(declare-fun lt!8496 () ListLongMap!567)

(assert (=> d!4039 (= lt!8506 lt!8496)))

(declare-fun lt!8505 () Unit!512)

(assert (=> d!4039 (= lt!8505 e!15312)))

(declare-fun c!3068 () Bool)

(assert (=> d!4039 (= c!3068 e!15320)))

(declare-fun res!14483 () Bool)

(assert (=> d!4039 (=> (not res!14483) (not e!15320))))

(assert (=> d!4039 (= res!14483 (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))))))

(assert (=> d!4039 (= lt!8496 e!15313)))

(assert (=> d!4039 (= c!3065 (and (not (= (bvand (ite c!2998 (ite c!2997 lt!8271 lt!8268) (extraKeys!1641 (_2!487 lt!8158))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!2998 (ite c!2997 lt!8271 lt!8268) (extraKeys!1641 (_2!487 lt!8158))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!4039 (validMask!0 (mask!4730 (_2!487 lt!8158)))))

(assert (=> d!4039 (= (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) (ite (or c!2998 c!2996) (_values!1729 (_2!487 lt!8158)) (array!1284 (store (arr!607 (_values!1729 (_2!487 lt!8158))) (index!2338 lt!8281) (ValueCellFull!312 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!703 (_values!1729 (_2!487 lt!8158))))) (mask!4730 (_2!487 lt!8158)) (ite c!2998 (ite c!2997 lt!8271 lt!8268) (extraKeys!1641 (_2!487 lt!8158))) (ite (and c!2998 c!2997) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 (_2!487 lt!8158))) (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158))) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))) lt!8506)))

(declare-fun b!23603 () Bool)

(declare-fun Unit!526 () Unit!512)

(assert (=> b!23603 (= e!15312 Unit!526)))

(declare-fun b!23604 () Bool)

(assert (=> b!23604 (= e!15319 (= (apply!29 lt!8506 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000)) (get!390 (select (arr!607 (ite (or c!2998 c!2996) (_values!1729 (_2!487 lt!8158)) (array!1284 (store (arr!607 (_values!1729 (_2!487 lt!8158))) (index!2338 lt!8281) (ValueCellFull!312 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!703 (_values!1729 (_2!487 lt!8158)))))) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (_2!487 lt!8158)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!23604 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!703 (ite (or c!2998 c!2996) (_values!1729 (_2!487 lt!8158)) (array!1284 (store (arr!607 (_values!1729 (_2!487 lt!8158))) (index!2338 lt!8281) (ValueCellFull!312 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!703 (_values!1729 (_2!487 lt!8158))))))))))

(assert (=> b!23604 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))))))

(assert (= (and d!4039 c!3065) b!23591))

(assert (= (and d!4039 (not c!3065)) b!23601))

(assert (= (and b!23601 c!3069) b!23592))

(assert (= (and b!23601 (not c!3069)) b!23597))

(assert (= (and b!23597 c!3067) b!23589))

(assert (= (and b!23597 (not c!3067)) b!23595))

(assert (= (or b!23589 b!23595) bm!1996))

(assert (= (or b!23592 bm!1996) bm!1995))

(assert (= (or b!23592 b!23589) bm!1997))

(assert (= (or b!23591 bm!1995) bm!1994))

(assert (= (or b!23591 bm!1997) bm!1998))

(assert (= (and d!4039 res!14483) b!23602))

(assert (= (and d!4039 c!3068) b!23585))

(assert (= (and d!4039 (not c!3068)) b!23603))

(assert (= (and d!4039 res!14481) b!23590))

(assert (= (and b!23590 res!14486) b!23598))

(assert (= (and b!23590 (not res!14482)) b!23584))

(assert (= (and b!23584 res!14489) b!23604))

(assert (= (and b!23590 res!14487) b!23586))

(assert (= (and b!23586 c!3066) b!23593))

(assert (= (and b!23586 (not c!3066)) b!23588))

(assert (= (and b!23593 res!14488) b!23600))

(assert (= (or b!23593 b!23588) bm!1992))

(assert (= (and b!23586 res!14484) b!23594))

(assert (= (and b!23594 c!3064) b!23599))

(assert (= (and b!23594 (not c!3064)) b!23587))

(assert (= (and b!23599 res!14485) b!23596))

(assert (= (or b!23599 b!23587) bm!1993))

(declare-fun b_lambda!1585 () Bool)

(assert (=> (not b_lambda!1585) (not b!23604)))

(assert (=> b!23604 t!3242))

(declare-fun b_and!1491 () Bool)

(assert (= b_and!1489 (and (=> t!3242 result!1099) b_and!1491)))

(declare-fun m!17088 () Bool)

(assert (=> bm!1994 m!17088))

(declare-fun m!17090 () Bool)

(assert (=> b!23600 m!17090))

(assert (=> b!23602 m!16986))

(assert (=> b!23602 m!16986))

(assert (=> b!23602 m!16988))

(assert (=> d!4039 m!16990))

(assert (=> b!23584 m!16986))

(assert (=> b!23584 m!16986))

(declare-fun m!17092 () Bool)

(assert (=> b!23584 m!17092))

(declare-fun m!17094 () Bool)

(assert (=> b!23585 m!17094))

(declare-fun m!17096 () Bool)

(assert (=> b!23585 m!17096))

(declare-fun m!17098 () Bool)

(assert (=> b!23585 m!17098))

(assert (=> b!23585 m!17096))

(declare-fun m!17100 () Bool)

(assert (=> b!23585 m!17100))

(declare-fun m!17102 () Bool)

(assert (=> b!23585 m!17102))

(declare-fun m!17104 () Bool)

(assert (=> b!23585 m!17104))

(declare-fun m!17106 () Bool)

(assert (=> b!23585 m!17106))

(declare-fun m!17108 () Bool)

(assert (=> b!23585 m!17108))

(declare-fun m!17110 () Bool)

(assert (=> b!23585 m!17110))

(declare-fun m!17112 () Bool)

(assert (=> b!23585 m!17112))

(assert (=> b!23585 m!17098))

(declare-fun m!17114 () Bool)

(assert (=> b!23585 m!17114))

(declare-fun m!17116 () Bool)

(assert (=> b!23585 m!17116))

(assert (=> b!23585 m!17104))

(declare-fun m!17118 () Bool)

(assert (=> b!23585 m!17118))

(assert (=> b!23585 m!16986))

(declare-fun m!17120 () Bool)

(assert (=> b!23585 m!17120))

(assert (=> b!23585 m!17088))

(declare-fun m!17122 () Bool)

(assert (=> b!23585 m!17122))

(assert (=> b!23585 m!17110))

(assert (=> b!23598 m!16986))

(assert (=> b!23598 m!16986))

(assert (=> b!23598 m!16988))

(declare-fun m!17124 () Bool)

(assert (=> b!23604 m!17124))

(assert (=> b!23604 m!17124))

(assert (=> b!23604 m!17026))

(declare-fun m!17126 () Bool)

(assert (=> b!23604 m!17126))

(assert (=> b!23604 m!17026))

(assert (=> b!23604 m!16986))

(declare-fun m!17128 () Bool)

(assert (=> b!23604 m!17128))

(assert (=> b!23604 m!16986))

(declare-fun m!17130 () Bool)

(assert (=> bm!1993 m!17130))

(declare-fun m!17132 () Bool)

(assert (=> bm!1992 m!17132))

(declare-fun m!17134 () Bool)

(assert (=> b!23591 m!17134))

(declare-fun m!17136 () Bool)

(assert (=> b!23596 m!17136))

(declare-fun m!17138 () Bool)

(assert (=> bm!1998 m!17138))

(assert (=> bm!1944 d!4039))

(declare-fun d!4041 () Bool)

(declare-fun e!15326 () Bool)

(assert (=> d!4041 e!15326))

(declare-fun res!14494 () Bool)

(assert (=> d!4041 (=> (not res!14494) (not e!15326))))

(declare-fun lt!8521 () ListLongMap!567)

(assert (=> d!4041 (= res!14494 (contains!230 lt!8521 (_1!489 (ite c!2998 (ite c!2997 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(declare-fun lt!8520 () List!568)

(assert (=> d!4041 (= lt!8521 (ListLongMap!568 lt!8520))))

(declare-fun lt!8519 () Unit!512)

(declare-fun lt!8522 () Unit!512)

(assert (=> d!4041 (= lt!8519 lt!8522)))

(assert (=> d!4041 (= (getValueByKey!61 lt!8520 (_1!489 (ite c!2998 (ite c!2997 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (Some!66 (_2!489 (ite c!2998 (ite c!2997 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(declare-fun lemmaContainsTupThenGetReturnValue!18 (List!568 (_ BitVec 64) V!1189) Unit!512)

(assert (=> d!4041 (= lt!8522 (lemmaContainsTupThenGetReturnValue!18 lt!8520 (_1!489 (ite c!2998 (ite c!2997 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (_2!489 (ite c!2998 (ite c!2997 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(declare-fun insertStrictlySorted!18 (List!568 (_ BitVec 64) V!1189) List!568)

(assert (=> d!4041 (= lt!8520 (insertStrictlySorted!18 (toList!299 e!15173) (_1!489 (ite c!2998 (ite c!2997 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (_2!489 (ite c!2998 (ite c!2997 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(assert (=> d!4041 (= (+!45 e!15173 (ite c!2998 (ite c!2997 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) lt!8521)))

(declare-fun b!23609 () Bool)

(declare-fun res!14495 () Bool)

(assert (=> b!23609 (=> (not res!14495) (not e!15326))))

(assert (=> b!23609 (= res!14495 (= (getValueByKey!61 (toList!299 lt!8521) (_1!489 (ite c!2998 (ite c!2997 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (Some!66 (_2!489 (ite c!2998 (ite c!2997 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(declare-fun b!23610 () Bool)

(declare-fun contains!232 (List!568 tuple2!960) Bool)

(assert (=> b!23610 (= e!15326 (contains!232 (toList!299 lt!8521) (ite c!2998 (ite c!2997 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(assert (= (and d!4041 res!14494) b!23609))

(assert (= (and b!23609 res!14495) b!23610))

(declare-fun m!17140 () Bool)

(assert (=> d!4041 m!17140))

(declare-fun m!17142 () Bool)

(assert (=> d!4041 m!17142))

(declare-fun m!17144 () Bool)

(assert (=> d!4041 m!17144))

(declare-fun m!17146 () Bool)

(assert (=> d!4041 m!17146))

(declare-fun m!17148 () Bool)

(assert (=> b!23609 m!17148))

(declare-fun m!17150 () Bool)

(assert (=> b!23610 m!17150))

(assert (=> bm!1934 d!4041))

(declare-fun d!4043 () Bool)

(assert (=> d!4043 (= (map!407 (_2!487 lt!8276)) (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8276)) (_values!1729 (_2!487 lt!8276)) (mask!4730 (_2!487 lt!8276)) (extraKeys!1641 (_2!487 lt!8276)) (zeroValue!1666 (_2!487 lt!8276)) (minValue!1666 (_2!487 lt!8276)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8276))))))

(declare-fun bs!954 () Bool)

(assert (= bs!954 d!4043))

(declare-fun m!17152 () Bool)

(assert (=> bs!954 m!17152))

(assert (=> bm!1948 d!4043))

(declare-fun d!4045 () Bool)

(assert (=> d!4045 (= (map!407 lt!8345) (getCurrentListMap!130 (_keys!3164 lt!8345) (_values!1729 lt!8345) (mask!4730 lt!8345) (extraKeys!1641 lt!8345) (zeroValue!1666 lt!8345) (minValue!1666 lt!8345) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8345)))))

(declare-fun bs!955 () Bool)

(assert (= bs!955 d!4045))

(declare-fun m!17154 () Bool)

(assert (=> bs!955 m!17154))

(assert (=> b!23379 d!4045))

(declare-fun d!4047 () Bool)

(declare-fun res!14496 () Bool)

(declare-fun e!15327 () Bool)

(assert (=> d!4047 (=> res!14496 e!15327)))

(assert (=> d!4047 (= res!14496 (= (select (arr!608 lt!8350) #b00000000000000000000000000000000) (_1!489 lt!8355)))))

(assert (=> d!4047 (= (arrayContainsKey!0 lt!8350 (_1!489 lt!8355) #b00000000000000000000000000000000) e!15327)))

(declare-fun b!23611 () Bool)

(declare-fun e!15328 () Bool)

(assert (=> b!23611 (= e!15327 e!15328)))

(declare-fun res!14497 () Bool)

(assert (=> b!23611 (=> (not res!14497) (not e!15328))))

(assert (=> b!23611 (= res!14497 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!704 lt!8350)))))

(declare-fun b!23612 () Bool)

(assert (=> b!23612 (= e!15328 (arrayContainsKey!0 lt!8350 (_1!489 lt!8355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!4047 (not res!14496)) b!23611))

(assert (= (and b!23611 res!14497) b!23612))

(declare-fun m!17156 () Bool)

(assert (=> d!4047 m!17156))

(declare-fun m!17158 () Bool)

(assert (=> b!23612 m!17158))

(assert (=> b!23380 d!4047))

(assert (=> b!23340 d!4033))

(declare-fun d!4049 () Bool)

(declare-fun res!14498 () Bool)

(declare-fun e!15329 () Bool)

(assert (=> d!4049 (=> (not res!14498) (not e!15329))))

(assert (=> d!4049 (= res!14498 (simpleValid!20 (_2!487 lt!8276)))))

(assert (=> d!4049 (= (valid!104 (_2!487 lt!8276)) e!15329)))

(declare-fun b!23613 () Bool)

(declare-fun res!14499 () Bool)

(assert (=> b!23613 (=> (not res!14499) (not e!15329))))

(assert (=> b!23613 (= res!14499 (= (arrayCountValidKeys!0 (_keys!3164 (_2!487 lt!8276)) #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8276)))) (_size!150 (_2!487 lt!8276))))))

(declare-fun b!23614 () Bool)

(declare-fun res!14500 () Bool)

(assert (=> b!23614 (=> (not res!14500) (not e!15329))))

(assert (=> b!23614 (= res!14500 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3164 (_2!487 lt!8276)) (mask!4730 (_2!487 lt!8276))))))

(declare-fun b!23615 () Bool)

(assert (=> b!23615 (= e!15329 (arrayNoDuplicates!0 (_keys!3164 (_2!487 lt!8276)) #b00000000000000000000000000000000 Nil!566))))

(assert (= (and d!4049 res!14498) b!23613))

(assert (= (and b!23613 res!14499) b!23614))

(assert (= (and b!23614 res!14500) b!23615))

(declare-fun m!17160 () Bool)

(assert (=> d!4049 m!17160))

(declare-fun m!17162 () Bool)

(assert (=> b!23613 m!17162))

(declare-fun m!17164 () Bool)

(assert (=> b!23614 m!17164))

(declare-fun m!17166 () Bool)

(assert (=> b!23615 m!17166))

(assert (=> d!3995 d!4049))

(declare-fun d!4051 () Bool)

(declare-fun res!14501 () Bool)

(declare-fun e!15330 () Bool)

(assert (=> d!4051 (=> (not res!14501) (not e!15330))))

(assert (=> d!4051 (= res!14501 (simpleValid!20 (_2!487 lt!8158)))))

(assert (=> d!4051 (= (valid!104 (_2!487 lt!8158)) e!15330)))

(declare-fun b!23616 () Bool)

(declare-fun res!14502 () Bool)

(assert (=> b!23616 (=> (not res!14502) (not e!15330))))

(assert (=> b!23616 (= res!14502 (= (arrayCountValidKeys!0 (_keys!3164 (_2!487 lt!8158)) #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))) (_size!150 (_2!487 lt!8158))))))

(declare-fun b!23617 () Bool)

(declare-fun res!14503 () Bool)

(assert (=> b!23617 (=> (not res!14503) (not e!15330))))

(assert (=> b!23617 (= res!14503 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3164 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158))))))

(declare-fun b!23618 () Bool)

(assert (=> b!23618 (= e!15330 (arrayNoDuplicates!0 (_keys!3164 (_2!487 lt!8158)) #b00000000000000000000000000000000 Nil!566))))

(assert (= (and d!4051 res!14501) b!23616))

(assert (= (and b!23616 res!14502) b!23617))

(assert (= (and b!23617 res!14503) b!23618))

(declare-fun m!17168 () Bool)

(assert (=> d!4051 m!17168))

(declare-fun m!17170 () Bool)

(assert (=> b!23616 m!17170))

(declare-fun m!17172 () Bool)

(assert (=> b!23617 m!17172))

(declare-fun m!17174 () Bool)

(assert (=> b!23618 m!17174))

(assert (=> d!3995 d!4051))

(declare-fun b!23619 () Bool)

(declare-fun e!15332 () SeekEntryResult!54)

(declare-fun lt!8523 () SeekEntryResult!54)

(assert (=> b!23619 (= e!15332 (MissingZero!54 (index!2339 lt!8523)))))

(declare-fun b!23620 () Bool)

(declare-fun e!15333 () SeekEntryResult!54)

(assert (=> b!23620 (= e!15333 Undefined!54)))

(declare-fun b!23621 () Bool)

(declare-fun e!15331 () SeekEntryResult!54)

(assert (=> b!23621 (= e!15331 (Found!54 (index!2339 lt!8523)))))

(declare-fun lt!8525 () SeekEntryResult!54)

(declare-fun d!4053 () Bool)

(assert (=> d!4053 (and (or ((_ is Undefined!54) lt!8525) (not ((_ is Found!54) lt!8525)) (and (bvsge (index!2338 lt!8525) #b00000000000000000000000000000000) (bvslt (index!2338 lt!8525) (size!704 (_keys!3164 lt!8161))))) (or ((_ is Undefined!54) lt!8525) ((_ is Found!54) lt!8525) (not ((_ is MissingZero!54) lt!8525)) (and (bvsge (index!2337 lt!8525) #b00000000000000000000000000000000) (bvslt (index!2337 lt!8525) (size!704 (_keys!3164 lt!8161))))) (or ((_ is Undefined!54) lt!8525) ((_ is Found!54) lt!8525) ((_ is MissingZero!54) lt!8525) (not ((_ is MissingVacant!54) lt!8525)) (and (bvsge (index!2340 lt!8525) #b00000000000000000000000000000000) (bvslt (index!2340 lt!8525) (size!704 (_keys!3164 lt!8161))))) (or ((_ is Undefined!54) lt!8525) (ite ((_ is Found!54) lt!8525) (= (select (arr!608 (_keys!3164 lt!8161)) (index!2338 lt!8525)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite ((_ is MissingZero!54) lt!8525) (= (select (arr!608 (_keys!3164 lt!8161)) (index!2337 lt!8525)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!54) lt!8525) (= (select (arr!608 (_keys!3164 lt!8161)) (index!2340 lt!8525)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!4053 (= lt!8525 e!15333)))

(declare-fun c!3070 () Bool)

(assert (=> d!4053 (= c!3070 (and ((_ is Intermediate!54) lt!8523) (undefined!866 lt!8523)))))

(assert (=> d!4053 (= lt!8523 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (mask!4730 lt!8161)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (_keys!3164 lt!8161) (mask!4730 lt!8161)))))

(assert (=> d!4053 (validMask!0 (mask!4730 lt!8161))))

(assert (=> d!4053 (= (seekEntryOrOpen!0 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (_keys!3164 lt!8161) (mask!4730 lt!8161)) lt!8525)))

(declare-fun b!23622 () Bool)

(assert (=> b!23622 (= e!15332 (seekKeyOrZeroReturnVacant!0 (x!5576 lt!8523) (index!2339 lt!8523) (index!2339 lt!8523) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (_keys!3164 lt!8161) (mask!4730 lt!8161)))))

(declare-fun b!23623 () Bool)

(assert (=> b!23623 (= e!15333 e!15331)))

(declare-fun lt!8524 () (_ BitVec 64))

(assert (=> b!23623 (= lt!8524 (select (arr!608 (_keys!3164 lt!8161)) (index!2339 lt!8523)))))

(declare-fun c!3072 () Bool)

(assert (=> b!23623 (= c!3072 (= lt!8524 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!23624 () Bool)

(declare-fun c!3071 () Bool)

(assert (=> b!23624 (= c!3071 (= lt!8524 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!23624 (= e!15331 e!15332)))

(assert (= (and d!4053 c!3070) b!23620))

(assert (= (and d!4053 (not c!3070)) b!23623))

(assert (= (and b!23623 c!3072) b!23621))

(assert (= (and b!23623 (not c!3072)) b!23624))

(assert (= (and b!23624 c!3071) b!23619))

(assert (= (and b!23624 (not c!3071)) b!23622))

(declare-fun m!17176 () Bool)

(assert (=> d!4053 m!17176))

(declare-fun m!17178 () Bool)

(assert (=> d!4053 m!17178))

(declare-fun m!17180 () Bool)

(assert (=> d!4053 m!17180))

(assert (=> d!4053 m!17176))

(declare-fun m!17182 () Bool)

(assert (=> d!4053 m!17182))

(declare-fun m!17184 () Bool)

(assert (=> d!4053 m!17184))

(declare-fun m!17186 () Bool)

(assert (=> d!4053 m!17186))

(declare-fun m!17188 () Bool)

(assert (=> b!23622 m!17188))

(declare-fun m!17190 () Bool)

(assert (=> b!23623 m!17190))

(assert (=> bm!1914 d!4053))

(declare-fun d!4055 () Bool)

(assert (=> d!4055 (= (+!45 (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) lt!8271 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))

(declare-fun lt!8528 () Unit!512)

(declare-fun choose!205 (array!1285 array!1283 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!1189 V!1189 V!1189 Int) Unit!512)

(assert (=> d!4055 (= lt!8528 (choose!205 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) lt!8271 (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (_2!487 lt!8158)) (defaultEntry!1743 (_2!487 lt!8158))))))

(assert (=> d!4055 (validMask!0 (mask!4730 (_2!487 lt!8158)))))

(assert (=> d!4055 (= (lemmaChangeZeroKeyThenAddPairToListMap!10 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) lt!8271 (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (_2!487 lt!8158)) (defaultEntry!1743 (_2!487 lt!8158))) lt!8528)))

(declare-fun bs!956 () Bool)

(assert (= bs!956 d!4055))

(declare-fun m!17192 () Bool)

(assert (=> bs!956 m!17192))

(assert (=> bs!956 m!16990))

(assert (=> bs!956 m!16852))

(declare-fun m!17194 () Bool)

(assert (=> bs!956 m!17194))

(declare-fun m!17196 () Bool)

(assert (=> bs!956 m!17196))

(assert (=> bs!956 m!16852))

(assert (=> b!23325 d!4055))

(declare-fun bm!1999 () Bool)

(declare-fun call!2003 () Bool)

(declare-fun lt!8546 () ListLongMap!567)

(assert (=> bm!1999 (= call!2003 (contains!230 lt!8546 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!2000 () Bool)

(declare-fun call!2005 () Bool)

(assert (=> bm!2000 (= call!2005 (contains!230 lt!8546 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!23625 () Bool)

(declare-fun e!15341 () Bool)

(declare-fun e!15342 () Bool)

(assert (=> b!23625 (= e!15341 e!15342)))

(declare-fun res!14512 () Bool)

(assert (=> b!23625 (=> (not res!14512) (not e!15342))))

(assert (=> b!23625 (= res!14512 (contains!230 lt!8546 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000)))))

(assert (=> b!23625 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))))))

(declare-fun b!23626 () Bool)

(declare-fun e!15335 () Unit!512)

(declare-fun lt!8531 () Unit!512)

(assert (=> b!23626 (= e!15335 lt!8531)))

(declare-fun lt!8543 () ListLongMap!567)

(assert (=> b!23626 (= lt!8543 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8161) (ite (or c!2984 c!2982) (_values!1729 lt!8161) (array!1284 (store (arr!607 (_values!1729 lt!8161)) (index!2338 lt!8254) (ValueCellFull!312 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (size!703 (_values!1729 lt!8161)))) (mask!4730 lt!8161) (ite c!2984 (ite c!2983 lt!8244 lt!8241) (extraKeys!1641 lt!8161)) (ite (and c!2984 c!2983) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (zeroValue!1666 lt!8161)) (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161)) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))))

(declare-fun lt!8538 () (_ BitVec 64))

(assert (=> b!23626 (= lt!8538 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!8547 () (_ BitVec 64))

(assert (=> b!23626 (= lt!8547 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000))))

(declare-fun lt!8539 () Unit!512)

(assert (=> b!23626 (= lt!8539 (addStillContains!14 lt!8543 lt!8538 (ite (and c!2984 c!2983) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (zeroValue!1666 lt!8161)) lt!8547))))

(assert (=> b!23626 (contains!230 (+!45 lt!8543 (tuple2!961 lt!8538 (ite (and c!2984 c!2983) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (zeroValue!1666 lt!8161)))) lt!8547)))

(declare-fun lt!8550 () Unit!512)

(assert (=> b!23626 (= lt!8550 lt!8539)))

(declare-fun lt!8534 () ListLongMap!567)

(assert (=> b!23626 (= lt!8534 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8161) (ite (or c!2984 c!2982) (_values!1729 lt!8161) (array!1284 (store (arr!607 (_values!1729 lt!8161)) (index!2338 lt!8254) (ValueCellFull!312 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (size!703 (_values!1729 lt!8161)))) (mask!4730 lt!8161) (ite c!2984 (ite c!2983 lt!8244 lt!8241) (extraKeys!1641 lt!8161)) (ite (and c!2984 c!2983) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (zeroValue!1666 lt!8161)) (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161)) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))))

(declare-fun lt!8549 () (_ BitVec 64))

(assert (=> b!23626 (= lt!8549 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!8548 () (_ BitVec 64))

(assert (=> b!23626 (= lt!8548 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000))))

(declare-fun lt!8533 () Unit!512)

(assert (=> b!23626 (= lt!8533 (addApplyDifferent!14 lt!8534 lt!8549 (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161)) lt!8548))))

(assert (=> b!23626 (= (apply!29 (+!45 lt!8534 (tuple2!961 lt!8549 (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161)))) lt!8548) (apply!29 lt!8534 lt!8548))))

(declare-fun lt!8532 () Unit!512)

(assert (=> b!23626 (= lt!8532 lt!8533)))

(declare-fun lt!8541 () ListLongMap!567)

(assert (=> b!23626 (= lt!8541 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8161) (ite (or c!2984 c!2982) (_values!1729 lt!8161) (array!1284 (store (arr!607 (_values!1729 lt!8161)) (index!2338 lt!8254) (ValueCellFull!312 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (size!703 (_values!1729 lt!8161)))) (mask!4730 lt!8161) (ite c!2984 (ite c!2983 lt!8244 lt!8241) (extraKeys!1641 lt!8161)) (ite (and c!2984 c!2983) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (zeroValue!1666 lt!8161)) (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161)) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))))

(declare-fun lt!8544 () (_ BitVec 64))

(assert (=> b!23626 (= lt!8544 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!8530 () (_ BitVec 64))

(assert (=> b!23626 (= lt!8530 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000))))

(declare-fun lt!8535 () Unit!512)

(assert (=> b!23626 (= lt!8535 (addApplyDifferent!14 lt!8541 lt!8544 (ite (and c!2984 c!2983) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (zeroValue!1666 lt!8161)) lt!8530))))

(assert (=> b!23626 (= (apply!29 (+!45 lt!8541 (tuple2!961 lt!8544 (ite (and c!2984 c!2983) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (zeroValue!1666 lt!8161)))) lt!8530) (apply!29 lt!8541 lt!8530))))

(declare-fun lt!8540 () Unit!512)

(assert (=> b!23626 (= lt!8540 lt!8535)))

(declare-fun lt!8542 () ListLongMap!567)

(assert (=> b!23626 (= lt!8542 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8161) (ite (or c!2984 c!2982) (_values!1729 lt!8161) (array!1284 (store (arr!607 (_values!1729 lt!8161)) (index!2338 lt!8254) (ValueCellFull!312 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (size!703 (_values!1729 lt!8161)))) (mask!4730 lt!8161) (ite c!2984 (ite c!2983 lt!8244 lt!8241) (extraKeys!1641 lt!8161)) (ite (and c!2984 c!2983) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (zeroValue!1666 lt!8161)) (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161)) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))))

(declare-fun lt!8537 () (_ BitVec 64))

(assert (=> b!23626 (= lt!8537 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!8529 () (_ BitVec 64))

(assert (=> b!23626 (= lt!8529 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000))))

(assert (=> b!23626 (= lt!8531 (addApplyDifferent!14 lt!8542 lt!8537 (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161)) lt!8529))))

(assert (=> b!23626 (= (apply!29 (+!45 lt!8542 (tuple2!961 lt!8537 (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161)))) lt!8529) (apply!29 lt!8542 lt!8529))))

(declare-fun bm!2001 () Bool)

(declare-fun call!2006 () ListLongMap!567)

(assert (=> bm!2001 (= call!2006 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8161) (ite (or c!2984 c!2982) (_values!1729 lt!8161) (array!1284 (store (arr!607 (_values!1729 lt!8161)) (index!2338 lt!8254) (ValueCellFull!312 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (size!703 (_values!1729 lt!8161)))) (mask!4730 lt!8161) (ite c!2984 (ite c!2983 lt!8244 lt!8241) (extraKeys!1641 lt!8161)) (ite (and c!2984 c!2983) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (zeroValue!1666 lt!8161)) (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161)) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))))

(declare-fun b!23627 () Bool)

(declare-fun res!14507 () Bool)

(declare-fun e!15338 () Bool)

(assert (=> b!23627 (=> (not res!14507) (not e!15338))))

(declare-fun e!15334 () Bool)

(assert (=> b!23627 (= res!14507 e!15334)))

(declare-fun c!3075 () Bool)

(assert (=> b!23627 (= c!3075 (not (= (bvand (ite c!2984 (ite c!2983 lt!8244 lt!8241) (extraKeys!1641 lt!8161)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!23628 () Bool)

(declare-fun e!15346 () Bool)

(assert (=> b!23628 (= e!15346 (not call!2005))))

(declare-fun b!23629 () Bool)

(assert (=> b!23629 (= e!15334 (not call!2003))))

(declare-fun bm!2002 () Bool)

(declare-fun call!2007 () ListLongMap!567)

(assert (=> bm!2002 (= call!2007 call!2006)))

(declare-fun b!23630 () Bool)

(declare-fun e!15344 () ListLongMap!567)

(declare-fun call!2008 () ListLongMap!567)

(assert (=> b!23630 (= e!15344 call!2008)))

(declare-fun b!23631 () Bool)

(declare-fun res!14510 () Bool)

(assert (=> b!23631 (=> (not res!14510) (not e!15338))))

(assert (=> b!23631 (= res!14510 e!15341)))

(declare-fun res!14505 () Bool)

(assert (=> b!23631 (=> res!14505 e!15341)))

(declare-fun e!15337 () Bool)

(assert (=> b!23631 (= res!14505 (not e!15337))))

(declare-fun res!14509 () Bool)

(assert (=> b!23631 (=> (not res!14509) (not e!15337))))

(assert (=> b!23631 (= res!14509 (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))))))

(declare-fun b!23633 () Bool)

(declare-fun e!15339 () ListLongMap!567)

(assert (=> b!23633 (= e!15339 call!2008)))

(declare-fun b!23634 () Bool)

(declare-fun e!15340 () Bool)

(assert (=> b!23634 (= e!15334 e!15340)))

(declare-fun res!14511 () Bool)

(assert (=> b!23634 (= res!14511 call!2003)))

(assert (=> b!23634 (=> (not res!14511) (not e!15340))))

(declare-fun b!23635 () Bool)

(assert (=> b!23635 (= e!15338 e!15346)))

(declare-fun c!3073 () Bool)

(assert (=> b!23635 (= c!3073 (not (= (bvand (ite c!2984 (ite c!2983 lt!8244 lt!8241) (extraKeys!1641 lt!8161)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!2003 () Bool)

(declare-fun call!2002 () ListLongMap!567)

(assert (=> bm!2003 (= call!2002 call!2007)))

(declare-fun b!23636 () Bool)

(assert (=> b!23636 (= e!15344 call!2002)))

(declare-fun b!23637 () Bool)

(declare-fun e!15345 () Bool)

(assert (=> b!23637 (= e!15345 (= (apply!29 lt!8546 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161))))))

(declare-fun c!3076 () Bool)

(declare-fun b!23638 () Bool)

(assert (=> b!23638 (= c!3076 (and (not (= (bvand (ite c!2984 (ite c!2983 lt!8244 lt!8241) (extraKeys!1641 lt!8161)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!2984 (ite c!2983 lt!8244 lt!8241) (extraKeys!1641 lt!8161)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!23638 (= e!15339 e!15344)))

(declare-fun b!23639 () Bool)

(assert (=> b!23639 (= e!15337 (validKeyInArray!0 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000)))))

(declare-fun bm!2004 () Bool)

(declare-fun call!2004 () ListLongMap!567)

(assert (=> bm!2004 (= call!2008 call!2004)))

(declare-fun b!23640 () Bool)

(assert (=> b!23640 (= e!15346 e!15345)))

(declare-fun res!14508 () Bool)

(assert (=> b!23640 (= res!14508 call!2005)))

(assert (=> b!23640 (=> (not res!14508) (not e!15345))))

(declare-fun c!3074 () Bool)

(declare-fun bm!2005 () Bool)

(declare-fun c!3078 () Bool)

(assert (=> bm!2005 (= call!2004 (+!45 (ite c!3074 call!2006 (ite c!3078 call!2007 call!2002)) (ite (or c!3074 c!3078) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!2984 c!2983) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (zeroValue!1666 lt!8161))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161))))))))

(declare-fun b!23641 () Bool)

(assert (=> b!23641 (= e!15340 (= (apply!29 lt!8546 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!2984 c!2983) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (zeroValue!1666 lt!8161))))))

(declare-fun b!23642 () Bool)

(declare-fun e!15336 () ListLongMap!567)

(assert (=> b!23642 (= e!15336 e!15339)))

(assert (=> b!23642 (= c!3078 (and (not (= (bvand (ite c!2984 (ite c!2983 lt!8244 lt!8241) (extraKeys!1641 lt!8161)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!2984 (ite c!2983 lt!8244 lt!8241) (extraKeys!1641 lt!8161)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!23643 () Bool)

(declare-fun e!15343 () Bool)

(assert (=> b!23643 (= e!15343 (validKeyInArray!0 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000)))))

(declare-fun b!23632 () Bool)

(assert (=> b!23632 (= e!15336 (+!45 call!2004 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161)))))))

(declare-fun d!4057 () Bool)

(assert (=> d!4057 e!15338))

(declare-fun res!14504 () Bool)

(assert (=> d!4057 (=> (not res!14504) (not e!15338))))

(assert (=> d!4057 (= res!14504 (or (bvsge #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))))))))

(declare-fun lt!8536 () ListLongMap!567)

(assert (=> d!4057 (= lt!8546 lt!8536)))

(declare-fun lt!8545 () Unit!512)

(assert (=> d!4057 (= lt!8545 e!15335)))

(declare-fun c!3077 () Bool)

(assert (=> d!4057 (= c!3077 e!15343)))

(declare-fun res!14506 () Bool)

(assert (=> d!4057 (=> (not res!14506) (not e!15343))))

(assert (=> d!4057 (= res!14506 (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))))))

(assert (=> d!4057 (= lt!8536 e!15336)))

(assert (=> d!4057 (= c!3074 (and (not (= (bvand (ite c!2984 (ite c!2983 lt!8244 lt!8241) (extraKeys!1641 lt!8161)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!2984 (ite c!2983 lt!8244 lt!8241) (extraKeys!1641 lt!8161)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!4057 (validMask!0 (mask!4730 lt!8161))))

(assert (=> d!4057 (= (getCurrentListMap!130 (_keys!3164 lt!8161) (ite (or c!2984 c!2982) (_values!1729 lt!8161) (array!1284 (store (arr!607 (_values!1729 lt!8161)) (index!2338 lt!8254) (ValueCellFull!312 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (size!703 (_values!1729 lt!8161)))) (mask!4730 lt!8161) (ite c!2984 (ite c!2983 lt!8244 lt!8241) (extraKeys!1641 lt!8161)) (ite (and c!2984 c!2983) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (zeroValue!1666 lt!8161)) (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161)) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)) lt!8546)))

(declare-fun b!23644 () Bool)

(declare-fun Unit!527 () Unit!512)

(assert (=> b!23644 (= e!15335 Unit!527)))

(declare-fun b!23645 () Bool)

(assert (=> b!23645 (= e!15342 (= (apply!29 lt!8546 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000)) (get!390 (select (arr!607 (ite (or c!2984 c!2982) (_values!1729 lt!8161) (array!1284 (store (arr!607 (_values!1729 lt!8161)) (index!2338 lt!8254) (ValueCellFull!312 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (size!703 (_values!1729 lt!8161))))) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 lt!8161) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!23645 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!703 (ite (or c!2984 c!2982) (_values!1729 lt!8161) (array!1284 (store (arr!607 (_values!1729 lt!8161)) (index!2338 lt!8254) (ValueCellFull!312 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (size!703 (_values!1729 lt!8161)))))))))

(assert (=> b!23645 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))))))

(assert (= (and d!4057 c!3074) b!23632))

(assert (= (and d!4057 (not c!3074)) b!23642))

(assert (= (and b!23642 c!3078) b!23633))

(assert (= (and b!23642 (not c!3078)) b!23638))

(assert (= (and b!23638 c!3076) b!23630))

(assert (= (and b!23638 (not c!3076)) b!23636))

(assert (= (or b!23630 b!23636) bm!2003))

(assert (= (or b!23633 bm!2003) bm!2002))

(assert (= (or b!23633 b!23630) bm!2004))

(assert (= (or b!23632 bm!2002) bm!2001))

(assert (= (or b!23632 bm!2004) bm!2005))

(assert (= (and d!4057 res!14506) b!23643))

(assert (= (and d!4057 c!3077) b!23626))

(assert (= (and d!4057 (not c!3077)) b!23644))

(assert (= (and d!4057 res!14504) b!23631))

(assert (= (and b!23631 res!14509) b!23639))

(assert (= (and b!23631 (not res!14505)) b!23625))

(assert (= (and b!23625 res!14512) b!23645))

(assert (= (and b!23631 res!14510) b!23627))

(assert (= (and b!23627 c!3075) b!23634))

(assert (= (and b!23627 (not c!3075)) b!23629))

(assert (= (and b!23634 res!14511) b!23641))

(assert (= (or b!23634 b!23629) bm!1999))

(assert (= (and b!23627 res!14507) b!23635))

(assert (= (and b!23635 c!3073) b!23640))

(assert (= (and b!23635 (not c!3073)) b!23628))

(assert (= (and b!23640 res!14508) b!23637))

(assert (= (or b!23640 b!23628) bm!2000))

(declare-fun b_lambda!1587 () Bool)

(assert (=> (not b_lambda!1587) (not b!23645)))

(declare-fun tb!661 () Bool)

(declare-fun t!3244 () Bool)

(assert (=> (and b!23142 (= (defaultEntry!1743 (v!1604 (underlying!116 thiss!938))) (defaultEntry!1743 lt!8161)) t!3244) tb!661))

(declare-fun result!1101 () Bool)

(assert (=> tb!661 (= result!1101 tp_is_empty!1023)))

(assert (=> b!23645 t!3244))

(declare-fun b_and!1493 () Bool)

(assert (= b_and!1491 (and (=> t!3244 result!1101) b_and!1493)))

(declare-fun m!17198 () Bool)

(assert (=> bm!2001 m!17198))

(declare-fun m!17200 () Bool)

(assert (=> b!23641 m!17200))

(assert (=> b!23643 m!16936))

(assert (=> b!23643 m!16936))

(declare-fun m!17202 () Bool)

(assert (=> b!23643 m!17202))

(assert (=> d!4057 m!17182))

(assert (=> b!23625 m!16936))

(assert (=> b!23625 m!16936))

(declare-fun m!17204 () Bool)

(assert (=> b!23625 m!17204))

(declare-fun m!17206 () Bool)

(assert (=> b!23626 m!17206))

(declare-fun m!17208 () Bool)

(assert (=> b!23626 m!17208))

(declare-fun m!17210 () Bool)

(assert (=> b!23626 m!17210))

(assert (=> b!23626 m!17208))

(declare-fun m!17212 () Bool)

(assert (=> b!23626 m!17212))

(declare-fun m!17214 () Bool)

(assert (=> b!23626 m!17214))

(declare-fun m!17216 () Bool)

(assert (=> b!23626 m!17216))

(declare-fun m!17218 () Bool)

(assert (=> b!23626 m!17218))

(declare-fun m!17220 () Bool)

(assert (=> b!23626 m!17220))

(declare-fun m!17222 () Bool)

(assert (=> b!23626 m!17222))

(declare-fun m!17224 () Bool)

(assert (=> b!23626 m!17224))

(assert (=> b!23626 m!17210))

(declare-fun m!17226 () Bool)

(assert (=> b!23626 m!17226))

(declare-fun m!17228 () Bool)

(assert (=> b!23626 m!17228))

(assert (=> b!23626 m!17216))

(declare-fun m!17230 () Bool)

(assert (=> b!23626 m!17230))

(assert (=> b!23626 m!16936))

(declare-fun m!17232 () Bool)

(assert (=> b!23626 m!17232))

(assert (=> b!23626 m!17198))

(declare-fun m!17234 () Bool)

(assert (=> b!23626 m!17234))

(assert (=> b!23626 m!17222))

(assert (=> b!23639 m!16936))

(assert (=> b!23639 m!16936))

(assert (=> b!23639 m!17202))

(declare-fun m!17236 () Bool)

(assert (=> b!23645 m!17236))

(assert (=> b!23645 m!17236))

(declare-fun m!17238 () Bool)

(assert (=> b!23645 m!17238))

(declare-fun m!17240 () Bool)

(assert (=> b!23645 m!17240))

(assert (=> b!23645 m!17238))

(assert (=> b!23645 m!16936))

(declare-fun m!17242 () Bool)

(assert (=> b!23645 m!17242))

(assert (=> b!23645 m!16936))

(declare-fun m!17244 () Bool)

(assert (=> bm!2000 m!17244))

(declare-fun m!17246 () Bool)

(assert (=> bm!1999 m!17246))

(declare-fun m!17248 () Bool)

(assert (=> b!23632 m!17248))

(declare-fun m!17250 () Bool)

(assert (=> b!23637 m!17250))

(declare-fun m!17252 () Bool)

(assert (=> bm!2005 m!17252))

(assert (=> bm!1920 d!4057))

(declare-fun bm!2006 () Bool)

(declare-fun call!2010 () Bool)

(declare-fun lt!8568 () ListLongMap!567)

(assert (=> bm!2006 (= call!2010 (contains!230 lt!8568 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!2007 () Bool)

(declare-fun call!2012 () Bool)

(assert (=> bm!2007 (= call!2012 (contains!230 lt!8568 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!23646 () Bool)

(declare-fun e!15354 () Bool)

(declare-fun e!15355 () Bool)

(assert (=> b!23646 (= e!15354 e!15355)))

(declare-fun res!14521 () Bool)

(assert (=> b!23646 (=> (not res!14521) (not e!15355))))

(assert (=> b!23646 (= res!14521 (contains!230 lt!8568 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000)))))

(assert (=> b!23646 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))))))

(declare-fun b!23647 () Bool)

(declare-fun e!15348 () Unit!512)

(declare-fun lt!8553 () Unit!512)

(assert (=> b!23647 (= e!15348 lt!8553)))

(declare-fun lt!8565 () ListLongMap!567)

(assert (=> b!23647 (= lt!8565 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8161) (ite c!2984 (_values!1729 lt!8161) lt!8260) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))))

(declare-fun lt!8560 () (_ BitVec 64))

(assert (=> b!23647 (= lt!8560 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!8569 () (_ BitVec 64))

(assert (=> b!23647 (= lt!8569 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000))))

(declare-fun lt!8561 () Unit!512)

(assert (=> b!23647 (= lt!8561 (addStillContains!14 lt!8565 lt!8560 (zeroValue!1666 lt!8161) lt!8569))))

(assert (=> b!23647 (contains!230 (+!45 lt!8565 (tuple2!961 lt!8560 (zeroValue!1666 lt!8161))) lt!8569)))

(declare-fun lt!8572 () Unit!512)

(assert (=> b!23647 (= lt!8572 lt!8561)))

(declare-fun lt!8556 () ListLongMap!567)

(assert (=> b!23647 (= lt!8556 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8161) (ite c!2984 (_values!1729 lt!8161) lt!8260) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))))

(declare-fun lt!8571 () (_ BitVec 64))

(assert (=> b!23647 (= lt!8571 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!8570 () (_ BitVec 64))

(assert (=> b!23647 (= lt!8570 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000))))

(declare-fun lt!8555 () Unit!512)

(assert (=> b!23647 (= lt!8555 (addApplyDifferent!14 lt!8556 lt!8571 (minValue!1666 lt!8161) lt!8570))))

(assert (=> b!23647 (= (apply!29 (+!45 lt!8556 (tuple2!961 lt!8571 (minValue!1666 lt!8161))) lt!8570) (apply!29 lt!8556 lt!8570))))

(declare-fun lt!8554 () Unit!512)

(assert (=> b!23647 (= lt!8554 lt!8555)))

(declare-fun lt!8563 () ListLongMap!567)

(assert (=> b!23647 (= lt!8563 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8161) (ite c!2984 (_values!1729 lt!8161) lt!8260) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))))

(declare-fun lt!8566 () (_ BitVec 64))

(assert (=> b!23647 (= lt!8566 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!8552 () (_ BitVec 64))

(assert (=> b!23647 (= lt!8552 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000))))

(declare-fun lt!8557 () Unit!512)

(assert (=> b!23647 (= lt!8557 (addApplyDifferent!14 lt!8563 lt!8566 (zeroValue!1666 lt!8161) lt!8552))))

(assert (=> b!23647 (= (apply!29 (+!45 lt!8563 (tuple2!961 lt!8566 (zeroValue!1666 lt!8161))) lt!8552) (apply!29 lt!8563 lt!8552))))

(declare-fun lt!8562 () Unit!512)

(assert (=> b!23647 (= lt!8562 lt!8557)))

(declare-fun lt!8564 () ListLongMap!567)

(assert (=> b!23647 (= lt!8564 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8161) (ite c!2984 (_values!1729 lt!8161) lt!8260) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))))

(declare-fun lt!8559 () (_ BitVec 64))

(assert (=> b!23647 (= lt!8559 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!8551 () (_ BitVec 64))

(assert (=> b!23647 (= lt!8551 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000))))

(assert (=> b!23647 (= lt!8553 (addApplyDifferent!14 lt!8564 lt!8559 (minValue!1666 lt!8161) lt!8551))))

(assert (=> b!23647 (= (apply!29 (+!45 lt!8564 (tuple2!961 lt!8559 (minValue!1666 lt!8161))) lt!8551) (apply!29 lt!8564 lt!8551))))

(declare-fun call!2013 () ListLongMap!567)

(declare-fun bm!2008 () Bool)

(assert (=> bm!2008 (= call!2013 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8161) (ite c!2984 (_values!1729 lt!8161) lt!8260) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))))

(declare-fun b!23648 () Bool)

(declare-fun res!14516 () Bool)

(declare-fun e!15351 () Bool)

(assert (=> b!23648 (=> (not res!14516) (not e!15351))))

(declare-fun e!15347 () Bool)

(assert (=> b!23648 (= res!14516 e!15347)))

(declare-fun c!3081 () Bool)

(assert (=> b!23648 (= c!3081 (not (= (bvand (extraKeys!1641 lt!8161) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!23649 () Bool)

(declare-fun e!15359 () Bool)

(assert (=> b!23649 (= e!15359 (not call!2012))))

(declare-fun b!23650 () Bool)

(assert (=> b!23650 (= e!15347 (not call!2010))))

(declare-fun bm!2009 () Bool)

(declare-fun call!2014 () ListLongMap!567)

(assert (=> bm!2009 (= call!2014 call!2013)))

(declare-fun b!23651 () Bool)

(declare-fun e!15357 () ListLongMap!567)

(declare-fun call!2015 () ListLongMap!567)

(assert (=> b!23651 (= e!15357 call!2015)))

(declare-fun b!23652 () Bool)

(declare-fun res!14519 () Bool)

(assert (=> b!23652 (=> (not res!14519) (not e!15351))))

(assert (=> b!23652 (= res!14519 e!15354)))

(declare-fun res!14514 () Bool)

(assert (=> b!23652 (=> res!14514 e!15354)))

(declare-fun e!15350 () Bool)

(assert (=> b!23652 (= res!14514 (not e!15350))))

(declare-fun res!14518 () Bool)

(assert (=> b!23652 (=> (not res!14518) (not e!15350))))

(assert (=> b!23652 (= res!14518 (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))))))

(declare-fun b!23654 () Bool)

(declare-fun e!15352 () ListLongMap!567)

(assert (=> b!23654 (= e!15352 call!2015)))

(declare-fun b!23655 () Bool)

(declare-fun e!15353 () Bool)

(assert (=> b!23655 (= e!15347 e!15353)))

(declare-fun res!14520 () Bool)

(assert (=> b!23655 (= res!14520 call!2010)))

(assert (=> b!23655 (=> (not res!14520) (not e!15353))))

(declare-fun b!23656 () Bool)

(assert (=> b!23656 (= e!15351 e!15359)))

(declare-fun c!3079 () Bool)

(assert (=> b!23656 (= c!3079 (not (= (bvand (extraKeys!1641 lt!8161) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!2010 () Bool)

(declare-fun call!2009 () ListLongMap!567)

(assert (=> bm!2010 (= call!2009 call!2014)))

(declare-fun b!23657 () Bool)

(assert (=> b!23657 (= e!15357 call!2009)))

(declare-fun b!23658 () Bool)

(declare-fun e!15358 () Bool)

(assert (=> b!23658 (= e!15358 (= (apply!29 lt!8568 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!1666 lt!8161)))))

(declare-fun b!23659 () Bool)

(declare-fun c!3082 () Bool)

(assert (=> b!23659 (= c!3082 (and (not (= (bvand (extraKeys!1641 lt!8161) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 lt!8161) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!23659 (= e!15352 e!15357)))

(declare-fun b!23660 () Bool)

(assert (=> b!23660 (= e!15350 (validKeyInArray!0 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000)))))

(declare-fun bm!2011 () Bool)

(declare-fun call!2011 () ListLongMap!567)

(assert (=> bm!2011 (= call!2015 call!2011)))

(declare-fun b!23661 () Bool)

(assert (=> b!23661 (= e!15359 e!15358)))

(declare-fun res!14517 () Bool)

(assert (=> b!23661 (= res!14517 call!2012)))

(assert (=> b!23661 (=> (not res!14517) (not e!15358))))

(declare-fun c!3084 () Bool)

(declare-fun bm!2012 () Bool)

(declare-fun c!3080 () Bool)

(assert (=> bm!2012 (= call!2011 (+!45 (ite c!3080 call!2013 (ite c!3084 call!2014 call!2009)) (ite (or c!3080 c!3084) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 lt!8161)) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8161)))))))

(declare-fun b!23662 () Bool)

(assert (=> b!23662 (= e!15353 (= (apply!29 lt!8568 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!1666 lt!8161)))))

(declare-fun b!23663 () Bool)

(declare-fun e!15349 () ListLongMap!567)

(assert (=> b!23663 (= e!15349 e!15352)))

(assert (=> b!23663 (= c!3084 (and (not (= (bvand (extraKeys!1641 lt!8161) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 lt!8161) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!23664 () Bool)

(declare-fun e!15356 () Bool)

(assert (=> b!23664 (= e!15356 (validKeyInArray!0 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000)))))

(declare-fun b!23653 () Bool)

(assert (=> b!23653 (= e!15349 (+!45 call!2011 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8161))))))

(declare-fun d!4059 () Bool)

(assert (=> d!4059 e!15351))

(declare-fun res!14513 () Bool)

(assert (=> d!4059 (=> (not res!14513) (not e!15351))))

(assert (=> d!4059 (= res!14513 (or (bvsge #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))))))))

(declare-fun lt!8558 () ListLongMap!567)

(assert (=> d!4059 (= lt!8568 lt!8558)))

(declare-fun lt!8567 () Unit!512)

(assert (=> d!4059 (= lt!8567 e!15348)))

(declare-fun c!3083 () Bool)

(assert (=> d!4059 (= c!3083 e!15356)))

(declare-fun res!14515 () Bool)

(assert (=> d!4059 (=> (not res!14515) (not e!15356))))

(assert (=> d!4059 (= res!14515 (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))))))

(assert (=> d!4059 (= lt!8558 e!15349)))

(assert (=> d!4059 (= c!3080 (and (not (= (bvand (extraKeys!1641 lt!8161) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!1641 lt!8161) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!4059 (validMask!0 (mask!4730 lt!8161))))

(assert (=> d!4059 (= (getCurrentListMap!130 (_keys!3164 lt!8161) (ite c!2984 (_values!1729 lt!8161) lt!8260) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)) lt!8568)))

(declare-fun b!23665 () Bool)

(declare-fun Unit!528 () Unit!512)

(assert (=> b!23665 (= e!15348 Unit!528)))

(declare-fun b!23666 () Bool)

(assert (=> b!23666 (= e!15355 (= (apply!29 lt!8568 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000)) (get!390 (select (arr!607 (ite c!2984 (_values!1729 lt!8161) lt!8260)) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 lt!8161) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!23666 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!703 (ite c!2984 (_values!1729 lt!8161) lt!8260))))))

(assert (=> b!23666 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))))))

(assert (= (and d!4059 c!3080) b!23653))

(assert (= (and d!4059 (not c!3080)) b!23663))

(assert (= (and b!23663 c!3084) b!23654))

(assert (= (and b!23663 (not c!3084)) b!23659))

(assert (= (and b!23659 c!3082) b!23651))

(assert (= (and b!23659 (not c!3082)) b!23657))

(assert (= (or b!23651 b!23657) bm!2010))

(assert (= (or b!23654 bm!2010) bm!2009))

(assert (= (or b!23654 b!23651) bm!2011))

(assert (= (or b!23653 bm!2009) bm!2008))

(assert (= (or b!23653 bm!2011) bm!2012))

(assert (= (and d!4059 res!14515) b!23664))

(assert (= (and d!4059 c!3083) b!23647))

(assert (= (and d!4059 (not c!3083)) b!23665))

(assert (= (and d!4059 res!14513) b!23652))

(assert (= (and b!23652 res!14518) b!23660))

(assert (= (and b!23652 (not res!14514)) b!23646))

(assert (= (and b!23646 res!14521) b!23666))

(assert (= (and b!23652 res!14519) b!23648))

(assert (= (and b!23648 c!3081) b!23655))

(assert (= (and b!23648 (not c!3081)) b!23650))

(assert (= (and b!23655 res!14520) b!23662))

(assert (= (or b!23655 b!23650) bm!2006))

(assert (= (and b!23648 res!14516) b!23656))

(assert (= (and b!23656 c!3079) b!23661))

(assert (= (and b!23656 (not c!3079)) b!23649))

(assert (= (and b!23661 res!14517) b!23658))

(assert (= (or b!23661 b!23649) bm!2007))

(declare-fun b_lambda!1589 () Bool)

(assert (=> (not b_lambda!1589) (not b!23666)))

(assert (=> b!23666 t!3244))

(declare-fun b_and!1495 () Bool)

(assert (= b_and!1493 (and (=> t!3244 result!1101) b_and!1495)))

(declare-fun m!17254 () Bool)

(assert (=> bm!2008 m!17254))

(declare-fun m!17256 () Bool)

(assert (=> b!23662 m!17256))

(assert (=> b!23664 m!16936))

(assert (=> b!23664 m!16936))

(assert (=> b!23664 m!17202))

(assert (=> d!4059 m!17182))

(assert (=> b!23646 m!16936))

(assert (=> b!23646 m!16936))

(declare-fun m!17258 () Bool)

(assert (=> b!23646 m!17258))

(declare-fun m!17260 () Bool)

(assert (=> b!23647 m!17260))

(declare-fun m!17262 () Bool)

(assert (=> b!23647 m!17262))

(declare-fun m!17264 () Bool)

(assert (=> b!23647 m!17264))

(assert (=> b!23647 m!17262))

(declare-fun m!17266 () Bool)

(assert (=> b!23647 m!17266))

(declare-fun m!17268 () Bool)

(assert (=> b!23647 m!17268))

(declare-fun m!17270 () Bool)

(assert (=> b!23647 m!17270))

(declare-fun m!17272 () Bool)

(assert (=> b!23647 m!17272))

(declare-fun m!17274 () Bool)

(assert (=> b!23647 m!17274))

(declare-fun m!17276 () Bool)

(assert (=> b!23647 m!17276))

(declare-fun m!17278 () Bool)

(assert (=> b!23647 m!17278))

(assert (=> b!23647 m!17264))

(declare-fun m!17280 () Bool)

(assert (=> b!23647 m!17280))

(declare-fun m!17282 () Bool)

(assert (=> b!23647 m!17282))

(assert (=> b!23647 m!17270))

(declare-fun m!17284 () Bool)

(assert (=> b!23647 m!17284))

(assert (=> b!23647 m!16936))

(declare-fun m!17286 () Bool)

(assert (=> b!23647 m!17286))

(assert (=> b!23647 m!17254))

(declare-fun m!17288 () Bool)

(assert (=> b!23647 m!17288))

(assert (=> b!23647 m!17276))

(assert (=> b!23660 m!16936))

(assert (=> b!23660 m!16936))

(assert (=> b!23660 m!17202))

(declare-fun m!17290 () Bool)

(assert (=> b!23666 m!17290))

(assert (=> b!23666 m!17290))

(assert (=> b!23666 m!17238))

(declare-fun m!17292 () Bool)

(assert (=> b!23666 m!17292))

(assert (=> b!23666 m!17238))

(assert (=> b!23666 m!16936))

(declare-fun m!17294 () Bool)

(assert (=> b!23666 m!17294))

(assert (=> b!23666 m!16936))

(declare-fun m!17296 () Bool)

(assert (=> bm!2007 m!17296))

(declare-fun m!17298 () Bool)

(assert (=> bm!2006 m!17298))

(declare-fun m!17300 () Bool)

(assert (=> b!23653 m!17300))

(declare-fun m!17302 () Bool)

(assert (=> b!23658 m!17302))

(declare-fun m!17304 () Bool)

(assert (=> bm!2012 m!17304))

(assert (=> bm!1931 d!4059))

(declare-fun d!4061 () Bool)

(declare-fun res!14522 () Bool)

(declare-fun e!15360 () Bool)

(assert (=> d!4061 (=> (not res!14522) (not e!15360))))

(assert (=> d!4061 (= res!14522 (simpleValid!20 (v!1604 (underlying!116 thiss!938))))))

(assert (=> d!4061 (= (valid!104 (v!1604 (underlying!116 thiss!938))) e!15360)))

(declare-fun b!23667 () Bool)

(declare-fun res!14523 () Bool)

(assert (=> b!23667 (=> (not res!14523) (not e!15360))))

(assert (=> b!23667 (= res!14523 (= (arrayCountValidKeys!0 (_keys!3164 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000000000000000 (size!704 (_keys!3164 (v!1604 (underlying!116 thiss!938))))) (_size!150 (v!1604 (underlying!116 thiss!938)))))))

(declare-fun b!23668 () Bool)

(declare-fun res!14524 () Bool)

(assert (=> b!23668 (=> (not res!14524) (not e!15360))))

(assert (=> b!23668 (= res!14524 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3164 (v!1604 (underlying!116 thiss!938))) (mask!4730 (v!1604 (underlying!116 thiss!938)))))))

(declare-fun b!23669 () Bool)

(assert (=> b!23669 (= e!15360 (arrayNoDuplicates!0 (_keys!3164 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000000000000000 Nil!566))))

(assert (= (and d!4061 res!14522) b!23667))

(assert (= (and b!23667 res!14523) b!23668))

(assert (= (and b!23668 res!14524) b!23669))

(declare-fun m!17306 () Bool)

(assert (=> d!4061 m!17306))

(declare-fun m!17308 () Bool)

(assert (=> b!23667 m!17308))

(declare-fun m!17310 () Bool)

(assert (=> b!23668 m!17310))

(declare-fun m!17312 () Bool)

(assert (=> b!23669 m!17312))

(assert (=> d!3987 d!4061))

(declare-fun d!4063 () Bool)

(declare-fun lt!8577 () tuple2!962)

(assert (=> d!4063 (or (bvsle (_2!490 lt!8577) #b00000000000000000000000000001000) (bvsge (bvmul #b00000000000000000000000000001000 (_size!150 (v!1604 (underlying!116 thiss!938)))) (_2!490 lt!8577)) (bvslt (bvadd (bvand (bvashr (_2!490 lt!8577) #b00000000000000000000000000000001) #b00111111111111111111111111111111) #b00000000000000000000000000000001) (_size!150 (v!1604 (underlying!116 thiss!938)))))))

(declare-fun e!15363 () tuple2!962)

(assert (=> d!4063 (= lt!8577 e!15363)))

(declare-fun c!3087 () Bool)

(declare-fun lt!8578 () (_ BitVec 32))

(assert (=> d!4063 (= c!3087 (and (bvsgt lt!8578 #b00000000000000000000000000001000) (bvslt (bvmul #b00000000000000000000000000001000 (_size!150 (v!1604 (underlying!116 thiss!938)))) lt!8578) (bvsge (bvadd (bvand (bvashr lt!8578 #b00000000000000000000000000000001) #b00111111111111111111111111111111) #b00000000000000000000000000000001) (_size!150 (v!1604 (underlying!116 thiss!938))))))))

(assert (=> d!4063 (= lt!8578 (bvlshr (_2!490 lt!8363) #b00000000000000000000000000000001))))

(assert (=> d!4063 (and (bvsgt (_2!490 lt!8363) #b00000000000000000000000000001000) (bvslt (bvmul #b00000000000000000000000000001000 (_size!150 (v!1604 (underlying!116 thiss!938)))) (_2!490 lt!8363)) (bvsge (bvadd (bvand (bvashr (_2!490 lt!8363) #b00000000000000000000000000000001) #b00111111111111111111111111111111) #b00000000000000000000000000000001) (_size!150 (v!1604 (underlying!116 thiss!938)))))))

(assert (=> d!4063 (= (computeNewMaskWhile!14 (_size!150 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (mask!4730 (v!1604 (underlying!116 thiss!938))) (_2!490 lt!8363)) lt!8577)))

(declare-fun b!23674 () Bool)

(assert (=> b!23674 (= e!15363 (computeNewMaskWhile!14 (_size!150 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (mask!4730 (v!1604 (underlying!116 thiss!938))) lt!8578))))

(declare-fun b!23675 () Bool)

(declare-fun Unit!529 () Unit!512)

(assert (=> b!23675 (= e!15363 (tuple2!963 Unit!529 lt!8578))))

(assert (= (and d!4063 c!3087) b!23674))

(assert (= (and d!4063 (not c!3087)) b!23675))

(declare-fun m!17315 () Bool)

(assert (=> b!23674 m!17315))

(assert (=> b!23390 d!4063))

(declare-fun b!23676 () Bool)

(declare-fun res!14526 () Bool)

(declare-fun e!15366 () Bool)

(assert (=> b!23676 (=> (not res!14526) (not e!15366))))

(declare-fun lt!8579 () SeekEntryResult!54)

(assert (=> b!23676 (= res!14526 (= (select (arr!608 (_keys!3164 lt!8161)) (index!2340 lt!8579)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!23676 (and (bvsge (index!2340 lt!8579) #b00000000000000000000000000000000) (bvslt (index!2340 lt!8579) (size!704 (_keys!3164 lt!8161))))))

(declare-fun b!23677 () Bool)

(declare-fun e!15364 () Bool)

(assert (=> b!23677 (= e!15364 ((_ is Undefined!54) lt!8579))))

(declare-fun b!23678 () Bool)

(assert (=> b!23678 (and (bvsge (index!2337 lt!8579) #b00000000000000000000000000000000) (bvslt (index!2337 lt!8579) (size!704 (_keys!3164 lt!8161))))))

(declare-fun res!14525 () Bool)

(assert (=> b!23678 (= res!14525 (= (select (arr!608 (_keys!3164 lt!8161)) (index!2337 lt!8579)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!15367 () Bool)

(assert (=> b!23678 (=> (not res!14525) (not e!15367))))

(declare-fun b!23679 () Bool)

(declare-fun call!2016 () Bool)

(assert (=> b!23679 (= e!15366 (not call!2016))))

(declare-fun b!23680 () Bool)

(declare-fun res!14527 () Bool)

(assert (=> b!23680 (=> (not res!14527) (not e!15366))))

(declare-fun call!2017 () Bool)

(assert (=> b!23680 (= res!14527 call!2017)))

(assert (=> b!23680 (= e!15364 e!15366)))

(declare-fun c!3089 () Bool)

(declare-fun bm!2013 () Bool)

(assert (=> bm!2013 (= call!2017 (inRange!0 (ite c!3089 (index!2337 lt!8579) (index!2340 lt!8579)) (mask!4730 lt!8161)))))

(declare-fun b!23681 () Bool)

(declare-fun e!15365 () Bool)

(assert (=> b!23681 (= e!15365 e!15364)))

(declare-fun c!3088 () Bool)

(assert (=> b!23681 (= c!3088 ((_ is MissingVacant!54) lt!8579))))

(declare-fun b!23682 () Bool)

(assert (=> b!23682 (= e!15367 (not call!2016))))

(declare-fun d!4065 () Bool)

(assert (=> d!4065 e!15365))

(assert (=> d!4065 (= c!3089 ((_ is MissingZero!54) lt!8579))))

(assert (=> d!4065 (= lt!8579 (seekEntryOrOpen!0 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (_keys!3164 lt!8161) (mask!4730 lt!8161)))))

(declare-fun lt!8580 () Unit!512)

(assert (=> d!4065 (= lt!8580 (choose!203 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (defaultEntry!1743 lt!8161)))))

(assert (=> d!4065 (validMask!0 (mask!4730 lt!8161))))

(assert (=> d!4065 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!10 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (defaultEntry!1743 lt!8161)) lt!8580)))

(declare-fun b!23683 () Bool)

(assert (=> b!23683 (= e!15365 e!15367)))

(declare-fun res!14528 () Bool)

(assert (=> b!23683 (= res!14528 call!2017)))

(assert (=> b!23683 (=> (not res!14528) (not e!15367))))

(declare-fun bm!2014 () Bool)

(assert (=> bm!2014 (= call!2016 (arrayContainsKey!0 (_keys!3164 lt!8161) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) #b00000000000000000000000000000000))))

(assert (= (and d!4065 c!3089) b!23683))

(assert (= (and d!4065 (not c!3089)) b!23681))

(assert (= (and b!23683 res!14528) b!23678))

(assert (= (and b!23678 res!14525) b!23682))

(assert (= (and b!23681 c!3088) b!23680))

(assert (= (and b!23681 (not c!3088)) b!23677))

(assert (= (and b!23680 res!14527) b!23676))

(assert (= (and b!23676 res!14526) b!23679))

(assert (= (or b!23683 b!23680) bm!2013))

(assert (= (or b!23682 b!23679) bm!2014))

(assert (=> d!4065 m!16828))

(declare-fun m!17317 () Bool)

(assert (=> d!4065 m!17317))

(assert (=> d!4065 m!17182))

(declare-fun m!17319 () Bool)

(assert (=> b!23676 m!17319))

(declare-fun m!17321 () Bool)

(assert (=> bm!2013 m!17321))

(declare-fun m!17323 () Bool)

(assert (=> b!23678 m!17323))

(assert (=> bm!2014 m!16804))

(assert (=> bm!1921 d!4065))

(declare-fun d!4067 () Bool)

(declare-fun e!15368 () Bool)

(assert (=> d!4067 e!15368))

(declare-fun res!14529 () Bool)

(assert (=> d!4067 (=> res!14529 e!15368)))

(declare-fun lt!8581 () Bool)

(assert (=> d!4067 (= res!14529 (not lt!8581))))

(declare-fun lt!8582 () Bool)

(assert (=> d!4067 (= lt!8581 lt!8582)))

(declare-fun lt!8583 () Unit!512)

(declare-fun e!15369 () Unit!512)

(assert (=> d!4067 (= lt!8583 e!15369)))

(declare-fun c!3090 () Bool)

(assert (=> d!4067 (= c!3090 lt!8582)))

(assert (=> d!4067 (= lt!8582 (containsKey!25 (toList!299 e!15161) (ite c!2996 #b1000000000000000000000000000000000000000000000000000000000000000 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) (index!2338 lt!8281)))))))

(assert (=> d!4067 (= (contains!230 e!15161 (ite c!2996 #b1000000000000000000000000000000000000000000000000000000000000000 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) (index!2338 lt!8281)))) lt!8581)))

(declare-fun b!23684 () Bool)

(declare-fun lt!8584 () Unit!512)

(assert (=> b!23684 (= e!15369 lt!8584)))

(assert (=> b!23684 (= lt!8584 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!299 e!15161) (ite c!2996 #b1000000000000000000000000000000000000000000000000000000000000000 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) (index!2338 lt!8281)))))))

(assert (=> b!23684 (isDefined!23 (getValueByKey!61 (toList!299 e!15161) (ite c!2996 #b1000000000000000000000000000000000000000000000000000000000000000 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) (index!2338 lt!8281)))))))

(declare-fun b!23685 () Bool)

(declare-fun Unit!530 () Unit!512)

(assert (=> b!23685 (= e!15369 Unit!530)))

(declare-fun b!23686 () Bool)

(assert (=> b!23686 (= e!15368 (isDefined!23 (getValueByKey!61 (toList!299 e!15161) (ite c!2996 #b1000000000000000000000000000000000000000000000000000000000000000 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) (index!2338 lt!8281))))))))

(assert (= (and d!4067 c!3090) b!23684))

(assert (= (and d!4067 (not c!3090)) b!23685))

(assert (= (and d!4067 (not res!14529)) b!23686))

(declare-fun m!17325 () Bool)

(assert (=> d!4067 m!17325))

(declare-fun m!17327 () Bool)

(assert (=> b!23684 m!17327))

(declare-fun m!17329 () Bool)

(assert (=> b!23684 m!17329))

(assert (=> b!23684 m!17329))

(declare-fun m!17331 () Bool)

(assert (=> b!23684 m!17331))

(assert (=> b!23686 m!17329))

(assert (=> b!23686 m!17329))

(assert (=> b!23686 m!17331))

(assert (=> bm!1952 d!4067))

(declare-fun b!23721 () Bool)

(declare-fun res!14552 () Bool)

(declare-fun e!15387 () Bool)

(assert (=> b!23721 (=> (not res!14552) (not e!15387))))

(declare-fun lt!8650 () tuple2!956)

(assert (=> b!23721 (= res!14552 (valid!104 (_2!487 lt!8650)))))

(declare-fun call!2028 () Bool)

(declare-fun c!3102 () Bool)

(declare-fun lt!8665 () SeekEntryResult!54)

(declare-fun lt!8663 () SeekEntryResult!54)

(declare-fun c!3099 () Bool)

(declare-fun bm!2023 () Bool)

(assert (=> bm!2023 (= call!2028 (inRange!0 (ite c!3099 (index!2338 lt!8663) (ite c!3102 (index!2337 lt!8665) (index!2340 lt!8665))) (mask!4730 (_2!487 lt!8158))))))

(declare-fun b!23722 () Bool)

(declare-fun res!14554 () Bool)

(declare-fun e!15392 () Bool)

(assert (=> b!23722 (=> (not res!14554) (not e!15392))))

(declare-fun call!2027 () Bool)

(assert (=> b!23722 (= res!14554 call!2027)))

(declare-fun e!15386 () Bool)

(assert (=> b!23722 (= e!15386 e!15392)))

(declare-fun d!4069 () Bool)

(assert (=> d!4069 e!15387))

(declare-fun res!14549 () Bool)

(assert (=> d!4069 (=> (not res!14549) (not e!15387))))

(assert (=> d!4069 (= res!14549 (_1!487 lt!8650))))

(assert (=> d!4069 (= lt!8650 (tuple2!957 true (LongMapFixedSize!211 (defaultEntry!1743 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) (bvadd (_size!150 (_2!487 lt!8158)) #b00000000000000000000000000000001) (array!1286 (store (arr!608 (_keys!3164 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000) (size!704 (_keys!3164 (_2!487 lt!8158)))) (array!1284 (store (arr!607 (_values!1729 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) (ValueCellFull!312 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!703 (_values!1729 (_2!487 lt!8158)))) (_vacant!150 (_2!487 lt!8158)))))))

(declare-fun lt!8648 () Unit!512)

(declare-fun lt!8673 () Unit!512)

(assert (=> d!4069 (= lt!8648 lt!8673)))

(declare-fun lt!8669 () array!1283)

(declare-fun lt!8664 () array!1285)

(assert (=> d!4069 (contains!230 (getCurrentListMap!130 lt!8664 lt!8669 (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))) (select (store (arr!608 (_keys!3164 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281))))))

(assert (=> d!4069 (= lt!8673 (lemmaValidKeyInArrayIsInListMap!10 lt!8664 lt!8669 (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) (defaultEntry!1743 (_2!487 lt!8158))))))

(assert (=> d!4069 (= lt!8669 (array!1284 (store (arr!607 (_values!1729 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) (ValueCellFull!312 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!703 (_values!1729 (_2!487 lt!8158)))))))

(assert (=> d!4069 (= lt!8664 (array!1286 (store (arr!608 (_keys!3164 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000) (size!704 (_keys!3164 (_2!487 lt!8158)))))))

(declare-fun lt!8658 () Unit!512)

(declare-fun lt!8672 () Unit!512)

(assert (=> d!4069 (= lt!8658 lt!8672)))

(declare-fun lt!8661 () array!1285)

(assert (=> d!4069 (= (arrayCountValidKeys!0 lt!8661 (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) (bvadd (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!1285 (_ BitVec 32)) Unit!512)

(assert (=> d!4069 (= lt!8672 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!8661 (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281))))))

(assert (=> d!4069 (= lt!8661 (array!1286 (store (arr!608 (_keys!3164 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000) (size!704 (_keys!3164 (_2!487 lt!8158)))))))

(declare-fun lt!8666 () Unit!512)

(declare-fun lt!8662 () Unit!512)

(assert (=> d!4069 (= lt!8666 lt!8662)))

(declare-fun lt!8647 () array!1285)

(assert (=> d!4069 (arrayContainsKey!0 lt!8647 #b1000000000000000000000000000000000000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!4069 (= lt!8662 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!8647 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281))))))

(assert (=> d!4069 (= lt!8647 (array!1286 (store (arr!608 (_keys!3164 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000) (size!704 (_keys!3164 (_2!487 lt!8158)))))))

(declare-fun lt!8653 () Unit!512)

(declare-fun lt!8667 () Unit!512)

(assert (=> d!4069 (= lt!8653 lt!8667)))

(assert (=> d!4069 (= (+!45 (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (getCurrentListMap!130 (array!1286 (store (arr!608 (_keys!3164 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000) (size!704 (_keys!3164 (_2!487 lt!8158)))) (array!1284 (store (arr!607 (_values!1729 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) (ValueCellFull!312 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!703 (_values!1729 (_2!487 lt!8158)))) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!3 (array!1285 array!1283 (_ BitVec 32) (_ BitVec 32) V!1189 V!1189 (_ BitVec 32) (_ BitVec 64) V!1189 Int) Unit!512)

(assert (=> d!4069 (= lt!8667 (lemmaAddValidKeyToArrayThenAddPairToListMap!3 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (defaultEntry!1743 (_2!487 lt!8158))))))

(declare-fun lt!8651 () Unit!512)

(declare-fun lt!8646 () Unit!512)

(assert (=> d!4069 (= lt!8651 lt!8646)))

(assert (=> d!4069 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!1286 (store (arr!608 (_keys!3164 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000) (size!704 (_keys!3164 (_2!487 lt!8158)))) (mask!4730 (_2!487 lt!8158)))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!1285 (_ BitVec 32) (_ BitVec 32)) Unit!512)

(assert (=> d!4069 (= lt!8646 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 #b1000000000000000000000000000000000000000000000000000000000000000 (_keys!3164 (_2!487 lt!8158)) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) (mask!4730 (_2!487 lt!8158))))))

(declare-fun lt!8655 () Unit!512)

(declare-fun lt!8659 () Unit!512)

(assert (=> d!4069 (= lt!8655 lt!8659)))

(assert (=> d!4069 (= (arrayCountValidKeys!0 (array!1286 (store (arr!608 (_keys!3164 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000) (size!704 (_keys!3164 (_2!487 lt!8158)))) #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))) (bvadd (arrayCountValidKeys!0 (_keys!3164 (_2!487 lt!8158)) #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!1285 (_ BitVec 32) (_ BitVec 64)) Unit!512)

(assert (=> d!4069 (= lt!8659 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3164 (_2!487 lt!8158)) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!8654 () Unit!512)

(declare-fun lt!8674 () Unit!512)

(assert (=> d!4069 (= lt!8654 lt!8674)))

(declare-fun lt!8657 () List!569)

(declare-fun lt!8652 () (_ BitVec 32))

(assert (=> d!4069 (arrayNoDuplicates!0 (array!1286 (store (arr!608 (_keys!3164 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000) (size!704 (_keys!3164 (_2!487 lt!8158)))) lt!8652 lt!8657)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!1285 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!569) Unit!512)

(assert (=> d!4069 (= lt!8674 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3164 (_2!487 lt!8158)) #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) lt!8652 lt!8657))))

(assert (=> d!4069 (= lt!8657 Nil!566)))

(assert (=> d!4069 (= lt!8652 #b00000000000000000000000000000000)))

(declare-fun lt!8668 () Unit!512)

(declare-fun e!15393 () Unit!512)

(assert (=> d!4069 (= lt!8668 e!15393)))

(declare-fun c!3100 () Bool)

(assert (=> d!4069 (= c!3100 (arrayContainsKey!0 (_keys!3164 (_2!487 lt!8158)) #b1000000000000000000000000000000000000000000000000000000000000000 #b00000000000000000000000000000000))))

(declare-fun lt!8649 () Unit!512)

(declare-fun e!15391 () Unit!512)

(assert (=> d!4069 (= lt!8649 e!15391)))

(assert (=> d!4069 (= c!3099 (contains!230 (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!4069 (valid!104 (_2!487 lt!8158))))

(assert (=> d!4069 (= (updateHelperNewKey!10 (_2!487 lt!8158) #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281))) lt!8650)))

(declare-fun b!23723 () Bool)

(declare-fun res!14555 () Bool)

(assert (=> b!23723 (=> (not res!14555) (not e!15387))))

(assert (=> b!23723 (= res!14555 (contains!230 (map!407 (_2!487 lt!8650)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!23724 () Bool)

(declare-fun Unit!531 () Unit!512)

(assert (=> b!23724 (= e!15391 Unit!531)))

(declare-fun lt!8671 () Unit!512)

(assert (=> b!23724 (= lt!8671 (lemmaInListMapThenSeekEntryOrOpenFindsIt!10 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b1000000000000000000000000000000000000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))

(declare-fun call!2029 () SeekEntryResult!54)

(assert (=> b!23724 (= lt!8663 call!2029)))

(declare-fun res!14551 () Bool)

(assert (=> b!23724 (= res!14551 ((_ is Found!54) lt!8663))))

(declare-fun e!15388 () Bool)

(assert (=> b!23724 (=> (not res!14551) (not e!15388))))

(assert (=> b!23724 e!15388))

(declare-fun lt!8645 () Unit!512)

(assert (=> b!23724 (= lt!8645 lt!8671)))

(assert (=> b!23724 false))

(declare-fun b!23725 () Bool)

(declare-fun e!15390 () Bool)

(declare-fun call!2026 () Bool)

(assert (=> b!23725 (= e!15390 (not call!2026))))

(declare-fun b!23726 () Bool)

(assert (=> b!23726 (= e!15392 (not call!2026))))

(declare-fun b!23727 () Bool)

(declare-fun e!15389 () Bool)

(assert (=> b!23727 (= e!15389 ((_ is Undefined!54) lt!8665))))

(declare-fun b!23728 () Bool)

(declare-fun c!3101 () Bool)

(assert (=> b!23728 (= c!3101 ((_ is MissingVacant!54) lt!8665))))

(assert (=> b!23728 (= e!15386 e!15389)))

(declare-fun bm!2024 () Bool)

(assert (=> bm!2024 (= call!2027 call!2028)))

(declare-fun bm!2025 () Bool)

(assert (=> bm!2025 (= call!2026 (arrayContainsKey!0 (_keys!3164 (_2!487 lt!8158)) #b1000000000000000000000000000000000000000000000000000000000000000 #b00000000000000000000000000000000))))

(declare-fun b!23729 () Bool)

(declare-fun Unit!532 () Unit!512)

(assert (=> b!23729 (= e!15393 Unit!532)))

(declare-fun b!23730 () Bool)

(declare-fun res!14553 () Bool)

(assert (=> b!23730 (= res!14553 (= (select (arr!608 (_keys!3164 (_2!487 lt!8158))) (index!2340 lt!8665)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!23730 (=> (not res!14553) (not e!15390))))

(declare-fun b!23731 () Bool)

(assert (=> b!23731 (= e!15388 (= (select (arr!608 (_keys!3164 (_2!487 lt!8158))) (index!2338 lt!8663)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!23732 () Bool)

(declare-fun lt!8670 () Unit!512)

(assert (=> b!23732 (= e!15391 lt!8670)))

(assert (=> b!23732 (= lt!8670 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!10 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b1000000000000000000000000000000000000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))

(assert (=> b!23732 (= lt!8665 call!2029)))

(assert (=> b!23732 (= c!3102 ((_ is MissingZero!54) lt!8665))))

(assert (=> b!23732 e!15386))

(declare-fun b!23733 () Bool)

(declare-fun Unit!533 () Unit!512)

(assert (=> b!23733 (= e!15393 Unit!533)))

(declare-fun lt!8656 () Unit!512)

(declare-fun lemmaArrayContainsKeyThenInListMap!3 (array!1285 array!1283 (_ BitVec 32) (_ BitVec 32) V!1189 V!1189 (_ BitVec 64) (_ BitVec 32) Int) Unit!512)

(assert (=> b!23733 (= lt!8656 (lemmaArrayContainsKeyThenInListMap!3 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b1000000000000000000000000000000000000000000000000000000000000000 #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))

(assert (=> b!23733 (contains!230 (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))) #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!8660 () Unit!512)

(assert (=> b!23733 (= lt!8660 lt!8656)))

(assert (=> b!23733 false))

(declare-fun bm!2026 () Bool)

(assert (=> bm!2026 (= call!2029 (seekEntryOrOpen!0 #b1000000000000000000000000000000000000000000000000000000000000000 (_keys!3164 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158))))))

(declare-fun b!23734 () Bool)

(assert (=> b!23734 (= e!15389 e!15390)))

(declare-fun res!14548 () Bool)

(assert (=> b!23734 (= res!14548 call!2027)))

(assert (=> b!23734 (=> (not res!14548) (not e!15390))))

(declare-fun b!23735 () Bool)

(declare-fun res!14556 () Bool)

(assert (=> b!23735 (=> (not res!14556) (not e!15392))))

(assert (=> b!23735 (= res!14556 (= (select (arr!608 (_keys!3164 (_2!487 lt!8158))) (index!2337 lt!8665)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!23736 () Bool)

(declare-fun res!14550 () Bool)

(assert (=> b!23736 (= res!14550 call!2028)))

(assert (=> b!23736 (=> (not res!14550) (not e!15388))))

(declare-fun b!23737 () Bool)

(assert (=> b!23737 (= e!15387 (= (map!407 (_2!487 lt!8650)) (+!45 (map!407 (_2!487 lt!8158)) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(assert (= (and d!4069 c!3099) b!23724))

(assert (= (and d!4069 (not c!3099)) b!23732))

(assert (= (and b!23724 res!14551) b!23736))

(assert (= (and b!23736 res!14550) b!23731))

(assert (= (and b!23732 c!3102) b!23722))

(assert (= (and b!23732 (not c!3102)) b!23728))

(assert (= (and b!23722 res!14554) b!23735))

(assert (= (and b!23735 res!14556) b!23726))

(assert (= (and b!23728 c!3101) b!23734))

(assert (= (and b!23728 (not c!3101)) b!23727))

(assert (= (and b!23734 res!14548) b!23730))

(assert (= (and b!23730 res!14553) b!23725))

(assert (= (or b!23722 b!23734) bm!2024))

(assert (= (or b!23726 b!23725) bm!2025))

(assert (= (or b!23736 bm!2024) bm!2023))

(assert (= (or b!23724 b!23732) bm!2026))

(assert (= (and d!4069 c!3100) b!23733))

(assert (= (and d!4069 (not c!3100)) b!23729))

(assert (= (and d!4069 res!14549) b!23721))

(assert (= (and b!23721 res!14552) b!23723))

(assert (= (and b!23723 res!14555) b!23737))

(declare-fun m!17333 () Bool)

(assert (=> b!23721 m!17333))

(declare-fun m!17335 () Bool)

(assert (=> b!23733 m!17335))

(assert (=> b!23733 m!16852))

(assert (=> b!23733 m!16852))

(assert (=> b!23733 m!16876))

(assert (=> b!23732 m!16898))

(declare-fun m!17337 () Bool)

(assert (=> d!4069 m!17337))

(assert (=> d!4069 m!16852))

(assert (=> d!4069 m!16876))

(declare-fun m!17339 () Bool)

(assert (=> d!4069 m!17339))

(declare-fun m!17341 () Bool)

(assert (=> d!4069 m!17341))

(declare-fun m!17343 () Bool)

(assert (=> d!4069 m!17343))

(declare-fun m!17345 () Bool)

(assert (=> d!4069 m!17345))

(declare-fun m!17347 () Bool)

(assert (=> d!4069 m!17347))

(declare-fun m!17349 () Bool)

(assert (=> d!4069 m!17349))

(assert (=> d!4069 m!16852))

(assert (=> d!4069 m!16866))

(assert (=> d!4069 m!16852))

(declare-fun m!17351 () Bool)

(assert (=> d!4069 m!17351))

(declare-fun m!17353 () Bool)

(assert (=> d!4069 m!17353))

(declare-fun m!17355 () Bool)

(assert (=> d!4069 m!17355))

(declare-fun m!17357 () Bool)

(assert (=> d!4069 m!17357))

(declare-fun m!17359 () Bool)

(assert (=> d!4069 m!17359))

(declare-fun m!17361 () Bool)

(assert (=> d!4069 m!17361))

(declare-fun m!17363 () Bool)

(assert (=> d!4069 m!17363))

(declare-fun m!17365 () Bool)

(assert (=> d!4069 m!17365))

(assert (=> d!4069 m!16860))

(assert (=> d!4069 m!17170))

(declare-fun m!17367 () Bool)

(assert (=> d!4069 m!17367))

(assert (=> d!4069 m!17341))

(assert (=> d!4069 m!17359))

(declare-fun m!17369 () Bool)

(assert (=> d!4069 m!17369))

(declare-fun m!17371 () Bool)

(assert (=> d!4069 m!17371))

(declare-fun m!17373 () Bool)

(assert (=> d!4069 m!17373))

(assert (=> bm!2025 m!16866))

(assert (=> bm!2026 m!16890))

(declare-fun m!17375 () Bool)

(assert (=> b!23737 m!17375))

(assert (=> b!23737 m!16862))

(assert (=> b!23737 m!16862))

(declare-fun m!17377 () Bool)

(assert (=> b!23737 m!17377))

(assert (=> b!23723 m!17375))

(assert (=> b!23723 m!17375))

(declare-fun m!17379 () Bool)

(assert (=> b!23723 m!17379))

(assert (=> b!23724 m!16850))

(declare-fun m!17381 () Bool)

(assert (=> b!23735 m!17381))

(declare-fun m!17383 () Bool)

(assert (=> bm!2023 m!17383))

(declare-fun m!17385 () Bool)

(assert (=> b!23731 m!17385))

(declare-fun m!17387 () Bool)

(assert (=> b!23730 m!17387))

(assert (=> bm!1940 d!4069))

(declare-fun bm!2027 () Bool)

(declare-fun call!2031 () Bool)

(declare-fun lt!8692 () ListLongMap!567)

(assert (=> bm!2027 (= call!2031 (contains!230 lt!8692 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!2028 () Bool)

(declare-fun call!2033 () Bool)

(assert (=> bm!2028 (= call!2033 (contains!230 lt!8692 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!23738 () Bool)

(declare-fun e!15401 () Bool)

(declare-fun e!15402 () Bool)

(assert (=> b!23738 (= e!15401 e!15402)))

(declare-fun res!14565 () Bool)

(assert (=> b!23738 (=> (not res!14565) (not e!15402))))

(assert (=> b!23738 (= res!14565 (contains!230 lt!8692 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000)))))

(assert (=> b!23738 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))))))

(declare-fun b!23739 () Bool)

(declare-fun e!15395 () Unit!512)

(declare-fun lt!8677 () Unit!512)

(assert (=> b!23739 (= e!15395 lt!8677)))

(declare-fun lt!8689 () ListLongMap!567)

(assert (=> b!23739 (= lt!8689 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))

(declare-fun lt!8684 () (_ BitVec 64))

(assert (=> b!23739 (= lt!8684 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!8693 () (_ BitVec 64))

(assert (=> b!23739 (= lt!8693 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000))))

(declare-fun lt!8685 () Unit!512)

(assert (=> b!23739 (= lt!8685 (addStillContains!14 lt!8689 lt!8684 (zeroValue!1666 (_2!487 lt!8158)) lt!8693))))

(assert (=> b!23739 (contains!230 (+!45 lt!8689 (tuple2!961 lt!8684 (zeroValue!1666 (_2!487 lt!8158)))) lt!8693)))

(declare-fun lt!8696 () Unit!512)

(assert (=> b!23739 (= lt!8696 lt!8685)))

(declare-fun lt!8680 () ListLongMap!567)

(assert (=> b!23739 (= lt!8680 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))

(declare-fun lt!8695 () (_ BitVec 64))

(assert (=> b!23739 (= lt!8695 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!8694 () (_ BitVec 64))

(assert (=> b!23739 (= lt!8694 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000))))

(declare-fun lt!8679 () Unit!512)

(assert (=> b!23739 (= lt!8679 (addApplyDifferent!14 lt!8680 lt!8695 (minValue!1666 (_2!487 lt!8158)) lt!8694))))

(assert (=> b!23739 (= (apply!29 (+!45 lt!8680 (tuple2!961 lt!8695 (minValue!1666 (_2!487 lt!8158)))) lt!8694) (apply!29 lt!8680 lt!8694))))

(declare-fun lt!8678 () Unit!512)

(assert (=> b!23739 (= lt!8678 lt!8679)))

(declare-fun lt!8687 () ListLongMap!567)

(assert (=> b!23739 (= lt!8687 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))

(declare-fun lt!8690 () (_ BitVec 64))

(assert (=> b!23739 (= lt!8690 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!8676 () (_ BitVec 64))

(assert (=> b!23739 (= lt!8676 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000))))

(declare-fun lt!8681 () Unit!512)

(assert (=> b!23739 (= lt!8681 (addApplyDifferent!14 lt!8687 lt!8690 (zeroValue!1666 (_2!487 lt!8158)) lt!8676))))

(assert (=> b!23739 (= (apply!29 (+!45 lt!8687 (tuple2!961 lt!8690 (zeroValue!1666 (_2!487 lt!8158)))) lt!8676) (apply!29 lt!8687 lt!8676))))

(declare-fun lt!8686 () Unit!512)

(assert (=> b!23739 (= lt!8686 lt!8681)))

(declare-fun lt!8688 () ListLongMap!567)

(assert (=> b!23739 (= lt!8688 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))

(declare-fun lt!8683 () (_ BitVec 64))

(assert (=> b!23739 (= lt!8683 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!8675 () (_ BitVec 64))

(assert (=> b!23739 (= lt!8675 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000))))

(assert (=> b!23739 (= lt!8677 (addApplyDifferent!14 lt!8688 lt!8683 (minValue!1666 (_2!487 lt!8158)) lt!8675))))

(assert (=> b!23739 (= (apply!29 (+!45 lt!8688 (tuple2!961 lt!8683 (minValue!1666 (_2!487 lt!8158)))) lt!8675) (apply!29 lt!8688 lt!8675))))

(declare-fun bm!2029 () Bool)

(declare-fun call!2034 () ListLongMap!567)

(assert (=> bm!2029 (= call!2034 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))

(declare-fun b!23740 () Bool)

(declare-fun res!14560 () Bool)

(declare-fun e!15398 () Bool)

(assert (=> b!23740 (=> (not res!14560) (not e!15398))))

(declare-fun e!15394 () Bool)

(assert (=> b!23740 (= res!14560 e!15394)))

(declare-fun c!3105 () Bool)

(assert (=> b!23740 (= c!3105 (not (= (bvand (extraKeys!1641 (_2!487 lt!8158)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!23741 () Bool)

(declare-fun e!15406 () Bool)

(assert (=> b!23741 (= e!15406 (not call!2033))))

(declare-fun b!23742 () Bool)

(assert (=> b!23742 (= e!15394 (not call!2031))))

(declare-fun bm!2030 () Bool)

(declare-fun call!2035 () ListLongMap!567)

(assert (=> bm!2030 (= call!2035 call!2034)))

(declare-fun b!23743 () Bool)

(declare-fun e!15404 () ListLongMap!567)

(declare-fun call!2036 () ListLongMap!567)

(assert (=> b!23743 (= e!15404 call!2036)))

(declare-fun b!23744 () Bool)

(declare-fun res!14563 () Bool)

(assert (=> b!23744 (=> (not res!14563) (not e!15398))))

(assert (=> b!23744 (= res!14563 e!15401)))

(declare-fun res!14558 () Bool)

(assert (=> b!23744 (=> res!14558 e!15401)))

(declare-fun e!15397 () Bool)

(assert (=> b!23744 (= res!14558 (not e!15397))))

(declare-fun res!14562 () Bool)

(assert (=> b!23744 (=> (not res!14562) (not e!15397))))

(assert (=> b!23744 (= res!14562 (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))))))

(declare-fun b!23746 () Bool)

(declare-fun e!15399 () ListLongMap!567)

(assert (=> b!23746 (= e!15399 call!2036)))

(declare-fun b!23747 () Bool)

(declare-fun e!15400 () Bool)

(assert (=> b!23747 (= e!15394 e!15400)))

(declare-fun res!14564 () Bool)

(assert (=> b!23747 (= res!14564 call!2031)))

(assert (=> b!23747 (=> (not res!14564) (not e!15400))))

(declare-fun b!23748 () Bool)

(assert (=> b!23748 (= e!15398 e!15406)))

(declare-fun c!3103 () Bool)

(assert (=> b!23748 (= c!3103 (not (= (bvand (extraKeys!1641 (_2!487 lt!8158)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!2031 () Bool)

(declare-fun call!2030 () ListLongMap!567)

(assert (=> bm!2031 (= call!2030 call!2035)))

(declare-fun b!23749 () Bool)

(assert (=> b!23749 (= e!15404 call!2030)))

(declare-fun b!23750 () Bool)

(declare-fun e!15405 () Bool)

(assert (=> b!23750 (= e!15405 (= (apply!29 lt!8692 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!1666 (_2!487 lt!8158))))))

(declare-fun b!23751 () Bool)

(declare-fun c!3106 () Bool)

(assert (=> b!23751 (= c!3106 (and (not (= (bvand (extraKeys!1641 (_2!487 lt!8158)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 (_2!487 lt!8158)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!23751 (= e!15399 e!15404)))

(declare-fun b!23752 () Bool)

(assert (=> b!23752 (= e!15397 (validKeyInArray!0 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000)))))

(declare-fun bm!2032 () Bool)

(declare-fun call!2032 () ListLongMap!567)

(assert (=> bm!2032 (= call!2036 call!2032)))

(declare-fun b!23753 () Bool)

(assert (=> b!23753 (= e!15406 e!15405)))

(declare-fun res!14561 () Bool)

(assert (=> b!23753 (= res!14561 call!2033)))

(assert (=> b!23753 (=> (not res!14561) (not e!15405))))

(declare-fun c!3104 () Bool)

(declare-fun c!3108 () Bool)

(declare-fun bm!2033 () Bool)

(assert (=> bm!2033 (= call!2032 (+!45 (ite c!3104 call!2034 (ite c!3108 call!2035 call!2030)) (ite (or c!3104 c!3108) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (_2!487 lt!8158))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!487 lt!8158))))))))

(declare-fun b!23754 () Bool)

(assert (=> b!23754 (= e!15400 (= (apply!29 lt!8692 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!1666 (_2!487 lt!8158))))))

(declare-fun b!23755 () Bool)

(declare-fun e!15396 () ListLongMap!567)

(assert (=> b!23755 (= e!15396 e!15399)))

(assert (=> b!23755 (= c!3108 (and (not (= (bvand (extraKeys!1641 (_2!487 lt!8158)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 (_2!487 lt!8158)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!23756 () Bool)

(declare-fun e!15403 () Bool)

(assert (=> b!23756 (= e!15403 (validKeyInArray!0 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000)))))

(declare-fun b!23745 () Bool)

(assert (=> b!23745 (= e!15396 (+!45 call!2032 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!487 lt!8158)))))))

(declare-fun d!4071 () Bool)

(assert (=> d!4071 e!15398))

(declare-fun res!14557 () Bool)

(assert (=> d!4071 (=> (not res!14557) (not e!15398))))

(assert (=> d!4071 (= res!14557 (or (bvsge #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))))))))

(declare-fun lt!8682 () ListLongMap!567)

(assert (=> d!4071 (= lt!8692 lt!8682)))

(declare-fun lt!8691 () Unit!512)

(assert (=> d!4071 (= lt!8691 e!15395)))

(declare-fun c!3107 () Bool)

(assert (=> d!4071 (= c!3107 e!15403)))

(declare-fun res!14559 () Bool)

(assert (=> d!4071 (=> (not res!14559) (not e!15403))))

(assert (=> d!4071 (= res!14559 (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))))))

(assert (=> d!4071 (= lt!8682 e!15396)))

(assert (=> d!4071 (= c!3104 (and (not (= (bvand (extraKeys!1641 (_2!487 lt!8158)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!1641 (_2!487 lt!8158)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!4071 (validMask!0 (mask!4730 (_2!487 lt!8158)))))

(assert (=> d!4071 (= (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))) lt!8692)))

(declare-fun b!23757 () Bool)

(declare-fun Unit!534 () Unit!512)

(assert (=> b!23757 (= e!15395 Unit!534)))

(declare-fun b!23758 () Bool)

(assert (=> b!23758 (= e!15402 (= (apply!29 lt!8692 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000)) (get!390 (select (arr!607 (_values!1729 (_2!487 lt!8158))) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (_2!487 lt!8158)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!23758 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!703 (_values!1729 (_2!487 lt!8158)))))))

(assert (=> b!23758 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))))))

(assert (= (and d!4071 c!3104) b!23745))

(assert (= (and d!4071 (not c!3104)) b!23755))

(assert (= (and b!23755 c!3108) b!23746))

(assert (= (and b!23755 (not c!3108)) b!23751))

(assert (= (and b!23751 c!3106) b!23743))

(assert (= (and b!23751 (not c!3106)) b!23749))

(assert (= (or b!23743 b!23749) bm!2031))

(assert (= (or b!23746 bm!2031) bm!2030))

(assert (= (or b!23746 b!23743) bm!2032))

(assert (= (or b!23745 bm!2030) bm!2029))

(assert (= (or b!23745 bm!2032) bm!2033))

(assert (= (and d!4071 res!14559) b!23756))

(assert (= (and d!4071 c!3107) b!23739))

(assert (= (and d!4071 (not c!3107)) b!23757))

(assert (= (and d!4071 res!14557) b!23744))

(assert (= (and b!23744 res!14562) b!23752))

(assert (= (and b!23744 (not res!14558)) b!23738))

(assert (= (and b!23738 res!14565) b!23758))

(assert (= (and b!23744 res!14563) b!23740))

(assert (= (and b!23740 c!3105) b!23747))

(assert (= (and b!23740 (not c!3105)) b!23742))

(assert (= (and b!23747 res!14564) b!23754))

(assert (= (or b!23747 b!23742) bm!2027))

(assert (= (and b!23740 res!14560) b!23748))

(assert (= (and b!23748 c!3103) b!23753))

(assert (= (and b!23748 (not c!3103)) b!23741))

(assert (= (and b!23753 res!14561) b!23750))

(assert (= (or b!23753 b!23741) bm!2028))

(declare-fun b_lambda!1591 () Bool)

(assert (=> (not b_lambda!1591) (not b!23758)))

(assert (=> b!23758 t!3242))

(declare-fun b_and!1497 () Bool)

(assert (= b_and!1495 (and (=> t!3242 result!1099) b_and!1497)))

(declare-fun m!17389 () Bool)

(assert (=> bm!2029 m!17389))

(declare-fun m!17391 () Bool)

(assert (=> b!23754 m!17391))

(assert (=> b!23756 m!16986))

(assert (=> b!23756 m!16986))

(assert (=> b!23756 m!16988))

(assert (=> d!4071 m!16990))

(assert (=> b!23738 m!16986))

(assert (=> b!23738 m!16986))

(declare-fun m!17393 () Bool)

(assert (=> b!23738 m!17393))

(declare-fun m!17395 () Bool)

(assert (=> b!23739 m!17395))

(declare-fun m!17397 () Bool)

(assert (=> b!23739 m!17397))

(declare-fun m!17399 () Bool)

(assert (=> b!23739 m!17399))

(assert (=> b!23739 m!17397))

(declare-fun m!17401 () Bool)

(assert (=> b!23739 m!17401))

(declare-fun m!17403 () Bool)

(assert (=> b!23739 m!17403))

(declare-fun m!17405 () Bool)

(assert (=> b!23739 m!17405))

(declare-fun m!17407 () Bool)

(assert (=> b!23739 m!17407))

(declare-fun m!17409 () Bool)

(assert (=> b!23739 m!17409))

(declare-fun m!17411 () Bool)

(assert (=> b!23739 m!17411))

(declare-fun m!17413 () Bool)

(assert (=> b!23739 m!17413))

(assert (=> b!23739 m!17399))

(declare-fun m!17415 () Bool)

(assert (=> b!23739 m!17415))

(declare-fun m!17417 () Bool)

(assert (=> b!23739 m!17417))

(assert (=> b!23739 m!17405))

(declare-fun m!17419 () Bool)

(assert (=> b!23739 m!17419))

(assert (=> b!23739 m!16986))

(declare-fun m!17421 () Bool)

(assert (=> b!23739 m!17421))

(assert (=> b!23739 m!17389))

(declare-fun m!17423 () Bool)

(assert (=> b!23739 m!17423))

(assert (=> b!23739 m!17411))

(assert (=> b!23752 m!16986))

(assert (=> b!23752 m!16986))

(assert (=> b!23752 m!16988))

(declare-fun m!17425 () Bool)

(assert (=> b!23758 m!17425))

(assert (=> b!23758 m!17425))

(assert (=> b!23758 m!17026))

(declare-fun m!17427 () Bool)

(assert (=> b!23758 m!17427))

(assert (=> b!23758 m!17026))

(assert (=> b!23758 m!16986))

(declare-fun m!17429 () Bool)

(assert (=> b!23758 m!17429))

(assert (=> b!23758 m!16986))

(declare-fun m!17431 () Bool)

(assert (=> bm!2028 m!17431))

(declare-fun m!17433 () Bool)

(assert (=> bm!2027 m!17433))

(declare-fun m!17435 () Bool)

(assert (=> b!23745 m!17435))

(declare-fun m!17437 () Bool)

(assert (=> b!23750 m!17437))

(declare-fun m!17439 () Bool)

(assert (=> bm!2033 m!17439))

(assert (=> b!23345 d!4071))

(declare-fun d!4073 () Bool)

(assert (=> d!4073 (= (+!45 (getCurrentListMap!130 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (getCurrentListMap!130 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) lt!8244 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))))

(declare-fun lt!8697 () Unit!512)

(assert (=> d!4073 (= lt!8697 (choose!205 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) lt!8244 (zeroValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8161) (defaultEntry!1743 lt!8161)))))

(assert (=> d!4073 (validMask!0 (mask!4730 lt!8161))))

(assert (=> d!4073 (= (lemmaChangeZeroKeyThenAddPairToListMap!10 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) lt!8244 (zeroValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8161) (defaultEntry!1743 lt!8161)) lt!8697)))

(declare-fun bs!957 () Bool)

(assert (= bs!957 d!4073))

(declare-fun m!17441 () Bool)

(assert (=> bs!957 m!17441))

(assert (=> bs!957 m!17182))

(assert (=> bs!957 m!16790))

(declare-fun m!17443 () Bool)

(assert (=> bs!957 m!17443))

(declare-fun m!17445 () Bool)

(assert (=> bs!957 m!17445))

(assert (=> bs!957 m!16790))

(assert (=> b!23283 d!4073))

(declare-fun d!4075 () Bool)

(declare-fun e!15409 () Bool)

(assert (=> d!4075 e!15409))

(declare-fun res!14568 () Bool)

(assert (=> d!4075 (=> (not res!14568) (not e!15409))))

(assert (=> d!4075 (= res!14568 (and (bvsge (index!2338 lt!8254) #b00000000000000000000000000000000) (bvslt (index!2338 lt!8254) (size!704 (_keys!3164 lt!8161)))))))

(declare-fun lt!8700 () Unit!512)

(declare-fun choose!206 (array!1285 array!1283 (_ BitVec 32) (_ BitVec 32) V!1189 V!1189 (_ BitVec 32) Int) Unit!512)

(assert (=> d!4075 (= lt!8700 (choose!206 (_keys!3164 lt!8161) lt!8260 (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) (index!2338 lt!8254) (defaultEntry!1743 lt!8161)))))

(assert (=> d!4075 (validMask!0 (mask!4730 lt!8161))))

(assert (=> d!4075 (= (lemmaValidKeyInArrayIsInListMap!10 (_keys!3164 lt!8161) lt!8260 (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) (index!2338 lt!8254) (defaultEntry!1743 lt!8161)) lt!8700)))

(declare-fun b!23761 () Bool)

(assert (=> b!23761 (= e!15409 (contains!230 (getCurrentListMap!130 (_keys!3164 lt!8161) lt!8260 (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)) (select (arr!608 (_keys!3164 lt!8161)) (index!2338 lt!8254))))))

(assert (= (and d!4075 res!14568) b!23761))

(declare-fun m!17447 () Bool)

(assert (=> d!4075 m!17447))

(assert (=> d!4075 m!17182))

(declare-fun m!17449 () Bool)

(assert (=> b!23761 m!17449))

(assert (=> b!23761 m!16806))

(assert (=> b!23761 m!17449))

(assert (=> b!23761 m!16806))

(declare-fun m!17451 () Bool)

(assert (=> b!23761 m!17451))

(assert (=> b!23301 d!4075))

(declare-fun d!4077 () Bool)

(declare-fun e!15412 () Bool)

(assert (=> d!4077 e!15412))

(declare-fun res!14571 () Bool)

(assert (=> d!4077 (=> (not res!14571) (not e!15412))))

(assert (=> d!4077 (= res!14571 (and (bvsge (index!2338 lt!8254) #b00000000000000000000000000000000) (bvslt (index!2338 lt!8254) (size!703 (_values!1729 lt!8161)))))))

(declare-fun lt!8703 () Unit!512)

(declare-fun choose!207 (array!1285 array!1283 (_ BitVec 32) (_ BitVec 32) V!1189 V!1189 (_ BitVec 32) (_ BitVec 64) V!1189 Int) Unit!512)

(assert (=> d!4077 (= lt!8703 (choose!207 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) (index!2338 lt!8254) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (defaultEntry!1743 lt!8161)))))

(assert (=> d!4077 (validMask!0 (mask!4730 lt!8161))))

(assert (=> d!4077 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!10 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) (index!2338 lt!8254) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (defaultEntry!1743 lt!8161)) lt!8703)))

(declare-fun b!23764 () Bool)

(assert (=> b!23764 (= e!15412 (= (+!45 (getCurrentListMap!130 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (getCurrentListMap!130 (_keys!3164 lt!8161) (array!1284 (store (arr!607 (_values!1729 lt!8161)) (index!2338 lt!8254) (ValueCellFull!312 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (size!703 (_values!1729 lt!8161))) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161))))))

(assert (= (and d!4077 res!14571) b!23764))

(declare-fun m!17453 () Bool)

(assert (=> d!4077 m!17453))

(assert (=> d!4077 m!17182))

(assert (=> b!23764 m!16790))

(assert (=> b!23764 m!16790))

(declare-fun m!17455 () Bool)

(assert (=> b!23764 m!17455))

(assert (=> b!23764 m!16792))

(declare-fun m!17457 () Bool)

(assert (=> b!23764 m!17457))

(assert (=> b!23301 d!4077))

(declare-fun d!4079 () Bool)

(declare-fun e!15413 () Bool)

(assert (=> d!4079 e!15413))

(declare-fun res!14572 () Bool)

(assert (=> d!4079 (=> res!14572 e!15413)))

(declare-fun lt!8704 () Bool)

(assert (=> d!4079 (= res!14572 (not lt!8704))))

(declare-fun lt!8705 () Bool)

(assert (=> d!4079 (= lt!8704 lt!8705)))

(declare-fun lt!8706 () Unit!512)

(declare-fun e!15414 () Unit!512)

(assert (=> d!4079 (= lt!8706 e!15414)))

(declare-fun c!3109 () Bool)

(assert (=> d!4079 (= c!3109 lt!8705)))

(assert (=> d!4079 (= lt!8705 (containsKey!25 (toList!299 (getCurrentListMap!130 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161))) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!4079 (= (contains!230 (getCurrentListMap!130 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) lt!8704)))

(declare-fun b!23765 () Bool)

(declare-fun lt!8707 () Unit!512)

(assert (=> b!23765 (= e!15414 lt!8707)))

(assert (=> b!23765 (= lt!8707 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!299 (getCurrentListMap!130 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161))) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!23765 (isDefined!23 (getValueByKey!61 (toList!299 (getCurrentListMap!130 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161))) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!23766 () Bool)

(declare-fun Unit!535 () Unit!512)

(assert (=> b!23766 (= e!15414 Unit!535)))

(declare-fun b!23767 () Bool)

(assert (=> b!23767 (= e!15413 (isDefined!23 (getValueByKey!61 (toList!299 (getCurrentListMap!130 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161))) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!4079 c!3109) b!23765))

(assert (= (and d!4079 (not c!3109)) b!23766))

(assert (= (and d!4079 (not res!14572)) b!23767))

(declare-fun m!17459 () Bool)

(assert (=> d!4079 m!17459))

(declare-fun m!17461 () Bool)

(assert (=> b!23765 m!17461))

(declare-fun m!17463 () Bool)

(assert (=> b!23765 m!17463))

(assert (=> b!23765 m!17463))

(declare-fun m!17465 () Bool)

(assert (=> b!23765 m!17465))

(assert (=> b!23767 m!17463))

(assert (=> b!23767 m!17463))

(assert (=> b!23767 m!17465))

(assert (=> b!23301 d!4079))

(declare-fun bm!2034 () Bool)

(declare-fun call!2038 () Bool)

(declare-fun lt!8725 () ListLongMap!567)

(assert (=> bm!2034 (= call!2038 (contains!230 lt!8725 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!2035 () Bool)

(declare-fun call!2040 () Bool)

(assert (=> bm!2035 (= call!2040 (contains!230 lt!8725 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!23768 () Bool)

(declare-fun e!15422 () Bool)

(declare-fun e!15423 () Bool)

(assert (=> b!23768 (= e!15422 e!15423)))

(declare-fun res!14581 () Bool)

(assert (=> b!23768 (=> (not res!14581) (not e!15423))))

(assert (=> b!23768 (= res!14581 (contains!230 lt!8725 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000)))))

(assert (=> b!23768 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))))))

(declare-fun b!23769 () Bool)

(declare-fun e!15416 () Unit!512)

(declare-fun lt!8710 () Unit!512)

(assert (=> b!23769 (= e!15416 lt!8710)))

(declare-fun lt!8722 () ListLongMap!567)

(assert (=> b!23769 (= lt!8722 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))))

(declare-fun lt!8717 () (_ BitVec 64))

(assert (=> b!23769 (= lt!8717 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!8726 () (_ BitVec 64))

(assert (=> b!23769 (= lt!8726 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000))))

(declare-fun lt!8718 () Unit!512)

(assert (=> b!23769 (= lt!8718 (addStillContains!14 lt!8722 lt!8717 (zeroValue!1666 lt!8161) lt!8726))))

(assert (=> b!23769 (contains!230 (+!45 lt!8722 (tuple2!961 lt!8717 (zeroValue!1666 lt!8161))) lt!8726)))

(declare-fun lt!8729 () Unit!512)

(assert (=> b!23769 (= lt!8729 lt!8718)))

(declare-fun lt!8713 () ListLongMap!567)

(assert (=> b!23769 (= lt!8713 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))))

(declare-fun lt!8728 () (_ BitVec 64))

(assert (=> b!23769 (= lt!8728 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!8727 () (_ BitVec 64))

(assert (=> b!23769 (= lt!8727 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000))))

(declare-fun lt!8712 () Unit!512)

(assert (=> b!23769 (= lt!8712 (addApplyDifferent!14 lt!8713 lt!8728 (minValue!1666 lt!8161) lt!8727))))

(assert (=> b!23769 (= (apply!29 (+!45 lt!8713 (tuple2!961 lt!8728 (minValue!1666 lt!8161))) lt!8727) (apply!29 lt!8713 lt!8727))))

(declare-fun lt!8711 () Unit!512)

(assert (=> b!23769 (= lt!8711 lt!8712)))

(declare-fun lt!8720 () ListLongMap!567)

(assert (=> b!23769 (= lt!8720 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))))

(declare-fun lt!8723 () (_ BitVec 64))

(assert (=> b!23769 (= lt!8723 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!8709 () (_ BitVec 64))

(assert (=> b!23769 (= lt!8709 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000))))

(declare-fun lt!8714 () Unit!512)

(assert (=> b!23769 (= lt!8714 (addApplyDifferent!14 lt!8720 lt!8723 (zeroValue!1666 lt!8161) lt!8709))))

(assert (=> b!23769 (= (apply!29 (+!45 lt!8720 (tuple2!961 lt!8723 (zeroValue!1666 lt!8161))) lt!8709) (apply!29 lt!8720 lt!8709))))

(declare-fun lt!8719 () Unit!512)

(assert (=> b!23769 (= lt!8719 lt!8714)))

(declare-fun lt!8721 () ListLongMap!567)

(assert (=> b!23769 (= lt!8721 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))))

(declare-fun lt!8716 () (_ BitVec 64))

(assert (=> b!23769 (= lt!8716 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!8708 () (_ BitVec 64))

(assert (=> b!23769 (= lt!8708 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000))))

(assert (=> b!23769 (= lt!8710 (addApplyDifferent!14 lt!8721 lt!8716 (minValue!1666 lt!8161) lt!8708))))

(assert (=> b!23769 (= (apply!29 (+!45 lt!8721 (tuple2!961 lt!8716 (minValue!1666 lt!8161))) lt!8708) (apply!29 lt!8721 lt!8708))))

(declare-fun bm!2036 () Bool)

(declare-fun call!2041 () ListLongMap!567)

(assert (=> bm!2036 (= call!2041 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))))

(declare-fun b!23770 () Bool)

(declare-fun res!14576 () Bool)

(declare-fun e!15419 () Bool)

(assert (=> b!23770 (=> (not res!14576) (not e!15419))))

(declare-fun e!15415 () Bool)

(assert (=> b!23770 (= res!14576 e!15415)))

(declare-fun c!3112 () Bool)

(assert (=> b!23770 (= c!3112 (not (= (bvand (extraKeys!1641 lt!8161) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!23771 () Bool)

(declare-fun e!15427 () Bool)

(assert (=> b!23771 (= e!15427 (not call!2040))))

(declare-fun b!23772 () Bool)

(assert (=> b!23772 (= e!15415 (not call!2038))))

(declare-fun bm!2037 () Bool)

(declare-fun call!2042 () ListLongMap!567)

(assert (=> bm!2037 (= call!2042 call!2041)))

(declare-fun b!23773 () Bool)

(declare-fun e!15425 () ListLongMap!567)

(declare-fun call!2043 () ListLongMap!567)

(assert (=> b!23773 (= e!15425 call!2043)))

(declare-fun b!23774 () Bool)

(declare-fun res!14579 () Bool)

(assert (=> b!23774 (=> (not res!14579) (not e!15419))))

(assert (=> b!23774 (= res!14579 e!15422)))

(declare-fun res!14574 () Bool)

(assert (=> b!23774 (=> res!14574 e!15422)))

(declare-fun e!15418 () Bool)

(assert (=> b!23774 (= res!14574 (not e!15418))))

(declare-fun res!14578 () Bool)

(assert (=> b!23774 (=> (not res!14578) (not e!15418))))

(assert (=> b!23774 (= res!14578 (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))))))

(declare-fun b!23776 () Bool)

(declare-fun e!15420 () ListLongMap!567)

(assert (=> b!23776 (= e!15420 call!2043)))

(declare-fun b!23777 () Bool)

(declare-fun e!15421 () Bool)

(assert (=> b!23777 (= e!15415 e!15421)))

(declare-fun res!14580 () Bool)

(assert (=> b!23777 (= res!14580 call!2038)))

(assert (=> b!23777 (=> (not res!14580) (not e!15421))))

(declare-fun b!23778 () Bool)

(assert (=> b!23778 (= e!15419 e!15427)))

(declare-fun c!3110 () Bool)

(assert (=> b!23778 (= c!3110 (not (= (bvand (extraKeys!1641 lt!8161) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!2038 () Bool)

(declare-fun call!2037 () ListLongMap!567)

(assert (=> bm!2038 (= call!2037 call!2042)))

(declare-fun b!23779 () Bool)

(assert (=> b!23779 (= e!15425 call!2037)))

(declare-fun b!23780 () Bool)

(declare-fun e!15426 () Bool)

(assert (=> b!23780 (= e!15426 (= (apply!29 lt!8725 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!1666 lt!8161)))))

(declare-fun b!23781 () Bool)

(declare-fun c!3113 () Bool)

(assert (=> b!23781 (= c!3113 (and (not (= (bvand (extraKeys!1641 lt!8161) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 lt!8161) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!23781 (= e!15420 e!15425)))

(declare-fun b!23782 () Bool)

(assert (=> b!23782 (= e!15418 (validKeyInArray!0 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000)))))

(declare-fun bm!2039 () Bool)

(declare-fun call!2039 () ListLongMap!567)

(assert (=> bm!2039 (= call!2043 call!2039)))

(declare-fun b!23783 () Bool)

(assert (=> b!23783 (= e!15427 e!15426)))

(declare-fun res!14577 () Bool)

(assert (=> b!23783 (= res!14577 call!2040)))

(assert (=> b!23783 (=> (not res!14577) (not e!15426))))

(declare-fun c!3111 () Bool)

(declare-fun c!3115 () Bool)

(declare-fun bm!2040 () Bool)

(assert (=> bm!2040 (= call!2039 (+!45 (ite c!3111 call!2041 (ite c!3115 call!2042 call!2037)) (ite (or c!3111 c!3115) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 lt!8161)) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8161)))))))

(declare-fun b!23784 () Bool)

(assert (=> b!23784 (= e!15421 (= (apply!29 lt!8725 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!1666 lt!8161)))))

(declare-fun b!23785 () Bool)

(declare-fun e!15417 () ListLongMap!567)

(assert (=> b!23785 (= e!15417 e!15420)))

(assert (=> b!23785 (= c!3115 (and (not (= (bvand (extraKeys!1641 lt!8161) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 lt!8161) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!23786 () Bool)

(declare-fun e!15424 () Bool)

(assert (=> b!23786 (= e!15424 (validKeyInArray!0 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000)))))

(declare-fun b!23775 () Bool)

(assert (=> b!23775 (= e!15417 (+!45 call!2039 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8161))))))

(declare-fun d!4081 () Bool)

(assert (=> d!4081 e!15419))

(declare-fun res!14573 () Bool)

(assert (=> d!4081 (=> (not res!14573) (not e!15419))))

(assert (=> d!4081 (= res!14573 (or (bvsge #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))))))))

(declare-fun lt!8715 () ListLongMap!567)

(assert (=> d!4081 (= lt!8725 lt!8715)))

(declare-fun lt!8724 () Unit!512)

(assert (=> d!4081 (= lt!8724 e!15416)))

(declare-fun c!3114 () Bool)

(assert (=> d!4081 (= c!3114 e!15424)))

(declare-fun res!14575 () Bool)

(assert (=> d!4081 (=> (not res!14575) (not e!15424))))

(assert (=> d!4081 (= res!14575 (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))))))

(assert (=> d!4081 (= lt!8715 e!15417)))

(assert (=> d!4081 (= c!3111 (and (not (= (bvand (extraKeys!1641 lt!8161) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!1641 lt!8161) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!4081 (validMask!0 (mask!4730 lt!8161))))

(assert (=> d!4081 (= (getCurrentListMap!130 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)) lt!8725)))

(declare-fun b!23787 () Bool)

(declare-fun Unit!536 () Unit!512)

(assert (=> b!23787 (= e!15416 Unit!536)))

(declare-fun b!23788 () Bool)

(assert (=> b!23788 (= e!15423 (= (apply!29 lt!8725 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000)) (get!390 (select (arr!607 (_values!1729 lt!8161)) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 lt!8161) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!23788 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!703 (_values!1729 lt!8161))))))

(assert (=> b!23788 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))))))

(assert (= (and d!4081 c!3111) b!23775))

(assert (= (and d!4081 (not c!3111)) b!23785))

(assert (= (and b!23785 c!3115) b!23776))

(assert (= (and b!23785 (not c!3115)) b!23781))

(assert (= (and b!23781 c!3113) b!23773))

(assert (= (and b!23781 (not c!3113)) b!23779))

(assert (= (or b!23773 b!23779) bm!2038))

(assert (= (or b!23776 bm!2038) bm!2037))

(assert (= (or b!23776 b!23773) bm!2039))

(assert (= (or b!23775 bm!2037) bm!2036))

(assert (= (or b!23775 bm!2039) bm!2040))

(assert (= (and d!4081 res!14575) b!23786))

(assert (= (and d!4081 c!3114) b!23769))

(assert (= (and d!4081 (not c!3114)) b!23787))

(assert (= (and d!4081 res!14573) b!23774))

(assert (= (and b!23774 res!14578) b!23782))

(assert (= (and b!23774 (not res!14574)) b!23768))

(assert (= (and b!23768 res!14581) b!23788))

(assert (= (and b!23774 res!14579) b!23770))

(assert (= (and b!23770 c!3112) b!23777))

(assert (= (and b!23770 (not c!3112)) b!23772))

(assert (= (and b!23777 res!14580) b!23784))

(assert (= (or b!23777 b!23772) bm!2034))

(assert (= (and b!23770 res!14576) b!23778))

(assert (= (and b!23778 c!3110) b!23783))

(assert (= (and b!23778 (not c!3110)) b!23771))

(assert (= (and b!23783 res!14577) b!23780))

(assert (= (or b!23783 b!23771) bm!2035))

(declare-fun b_lambda!1593 () Bool)

(assert (=> (not b_lambda!1593) (not b!23788)))

(assert (=> b!23788 t!3244))

(declare-fun b_and!1499 () Bool)

(assert (= b_and!1497 (and (=> t!3244 result!1101) b_and!1499)))

(declare-fun m!17467 () Bool)

(assert (=> bm!2036 m!17467))

(declare-fun m!17469 () Bool)

(assert (=> b!23784 m!17469))

(assert (=> b!23786 m!16936))

(assert (=> b!23786 m!16936))

(assert (=> b!23786 m!17202))

(assert (=> d!4081 m!17182))

(assert (=> b!23768 m!16936))

(assert (=> b!23768 m!16936))

(declare-fun m!17471 () Bool)

(assert (=> b!23768 m!17471))

(declare-fun m!17473 () Bool)

(assert (=> b!23769 m!17473))

(declare-fun m!17475 () Bool)

(assert (=> b!23769 m!17475))

(declare-fun m!17477 () Bool)

(assert (=> b!23769 m!17477))

(assert (=> b!23769 m!17475))

(declare-fun m!17479 () Bool)

(assert (=> b!23769 m!17479))

(declare-fun m!17481 () Bool)

(assert (=> b!23769 m!17481))

(declare-fun m!17483 () Bool)

(assert (=> b!23769 m!17483))

(declare-fun m!17485 () Bool)

(assert (=> b!23769 m!17485))

(declare-fun m!17487 () Bool)

(assert (=> b!23769 m!17487))

(declare-fun m!17489 () Bool)

(assert (=> b!23769 m!17489))

(declare-fun m!17491 () Bool)

(assert (=> b!23769 m!17491))

(assert (=> b!23769 m!17477))

(declare-fun m!17493 () Bool)

(assert (=> b!23769 m!17493))

(declare-fun m!17495 () Bool)

(assert (=> b!23769 m!17495))

(assert (=> b!23769 m!17483))

(declare-fun m!17497 () Bool)

(assert (=> b!23769 m!17497))

(assert (=> b!23769 m!16936))

(declare-fun m!17499 () Bool)

(assert (=> b!23769 m!17499))

(assert (=> b!23769 m!17467))

(declare-fun m!17501 () Bool)

(assert (=> b!23769 m!17501))

(assert (=> b!23769 m!17489))

(assert (=> b!23782 m!16936))

(assert (=> b!23782 m!16936))

(assert (=> b!23782 m!17202))

(declare-fun m!17503 () Bool)

(assert (=> b!23788 m!17503))

(assert (=> b!23788 m!17503))

(assert (=> b!23788 m!17238))

(declare-fun m!17505 () Bool)

(assert (=> b!23788 m!17505))

(assert (=> b!23788 m!17238))

(assert (=> b!23788 m!16936))

(declare-fun m!17507 () Bool)

(assert (=> b!23788 m!17507))

(assert (=> b!23788 m!16936))

(declare-fun m!17509 () Bool)

(assert (=> bm!2035 m!17509))

(declare-fun m!17511 () Bool)

(assert (=> bm!2034 m!17511))

(declare-fun m!17513 () Bool)

(assert (=> b!23775 m!17513))

(declare-fun m!17515 () Bool)

(assert (=> b!23780 m!17515))

(declare-fun m!17517 () Bool)

(assert (=> bm!2040 m!17517))

(assert (=> b!23301 d!4081))

(declare-fun d!4083 () Bool)

(declare-fun res!14582 () Bool)

(declare-fun e!15428 () Bool)

(assert (=> d!4083 (=> (not res!14582) (not e!15428))))

(assert (=> d!4083 (= res!14582 (simpleValid!20 (_2!487 lt!8249)))))

(assert (=> d!4083 (= (valid!104 (_2!487 lt!8249)) e!15428)))

(declare-fun b!23789 () Bool)

(declare-fun res!14583 () Bool)

(assert (=> b!23789 (=> (not res!14583) (not e!15428))))

(assert (=> b!23789 (= res!14583 (= (arrayCountValidKeys!0 (_keys!3164 (_2!487 lt!8249)) #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8249)))) (_size!150 (_2!487 lt!8249))))))

(declare-fun b!23790 () Bool)

(declare-fun res!14584 () Bool)

(assert (=> b!23790 (=> (not res!14584) (not e!15428))))

(assert (=> b!23790 (= res!14584 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3164 (_2!487 lt!8249)) (mask!4730 (_2!487 lt!8249))))))

(declare-fun b!23791 () Bool)

(assert (=> b!23791 (= e!15428 (arrayNoDuplicates!0 (_keys!3164 (_2!487 lt!8249)) #b00000000000000000000000000000000 Nil!566))))

(assert (= (and d!4083 res!14582) b!23789))

(assert (= (and b!23789 res!14583) b!23790))

(assert (= (and b!23790 res!14584) b!23791))

(declare-fun m!17519 () Bool)

(assert (=> d!4083 m!17519))

(declare-fun m!17521 () Bool)

(assert (=> b!23789 m!17521))

(declare-fun m!17523 () Bool)

(assert (=> b!23790 m!17523))

(declare-fun m!17525 () Bool)

(assert (=> b!23791 m!17525))

(assert (=> d!3985 d!4083))

(declare-fun d!4085 () Bool)

(declare-fun res!14585 () Bool)

(declare-fun e!15429 () Bool)

(assert (=> d!4085 (=> (not res!14585) (not e!15429))))

(assert (=> d!4085 (= res!14585 (simpleValid!20 lt!8161))))

(assert (=> d!4085 (= (valid!104 lt!8161) e!15429)))

(declare-fun b!23792 () Bool)

(declare-fun res!14586 () Bool)

(assert (=> b!23792 (=> (not res!14586) (not e!15429))))

(assert (=> b!23792 (= res!14586 (= (arrayCountValidKeys!0 (_keys!3164 lt!8161) #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))) (_size!150 lt!8161)))))

(declare-fun b!23793 () Bool)

(declare-fun res!14587 () Bool)

(assert (=> b!23793 (=> (not res!14587) (not e!15429))))

(assert (=> b!23793 (= res!14587 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3164 lt!8161) (mask!4730 lt!8161)))))

(declare-fun b!23794 () Bool)

(assert (=> b!23794 (= e!15429 (arrayNoDuplicates!0 (_keys!3164 lt!8161) #b00000000000000000000000000000000 Nil!566))))

(assert (= (and d!4085 res!14585) b!23792))

(assert (= (and b!23792 res!14586) b!23793))

(assert (= (and b!23793 res!14587) b!23794))

(declare-fun m!17527 () Bool)

(assert (=> d!4085 m!17527))

(declare-fun m!17529 () Bool)

(assert (=> b!23792 m!17529))

(declare-fun m!17531 () Bool)

(assert (=> b!23793 m!17531))

(declare-fun m!17533 () Bool)

(assert (=> b!23794 m!17533))

(assert (=> d!3985 d!4085))

(declare-fun d!4087 () Bool)

(declare-fun e!15432 () Bool)

(assert (=> d!4087 e!15432))

(declare-fun res!14592 () Bool)

(assert (=> d!4087 (=> (not res!14592) (not e!15432))))

(declare-fun lt!8734 () SeekEntryResult!54)

(assert (=> d!4087 (= res!14592 ((_ is Found!54) lt!8734))))

(assert (=> d!4087 (= lt!8734 (seekEntryOrOpen!0 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (_keys!3164 lt!8161) (mask!4730 lt!8161)))))

(declare-fun lt!8735 () Unit!512)

(declare-fun choose!208 (array!1285 array!1283 (_ BitVec 32) (_ BitVec 32) V!1189 V!1189 (_ BitVec 64) Int) Unit!512)

(assert (=> d!4087 (= lt!8735 (choose!208 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (defaultEntry!1743 lt!8161)))))

(assert (=> d!4087 (validMask!0 (mask!4730 lt!8161))))

(assert (=> d!4087 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!10 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (defaultEntry!1743 lt!8161)) lt!8735)))

(declare-fun b!23799 () Bool)

(declare-fun res!14593 () Bool)

(assert (=> b!23799 (=> (not res!14593) (not e!15432))))

(assert (=> b!23799 (= res!14593 (inRange!0 (index!2338 lt!8734) (mask!4730 lt!8161)))))

(declare-fun b!23800 () Bool)

(assert (=> b!23800 (= e!15432 (= (select (arr!608 (_keys!3164 lt!8161)) (index!2338 lt!8734)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!23800 (and (bvsge (index!2338 lt!8734) #b00000000000000000000000000000000) (bvslt (index!2338 lt!8734) (size!704 (_keys!3164 lt!8161))))))

(assert (= (and d!4087 res!14592) b!23799))

(assert (= (and b!23799 res!14593) b!23800))

(assert (=> d!4087 m!16828))

(declare-fun m!17535 () Bool)

(assert (=> d!4087 m!17535))

(assert (=> d!4087 m!17182))

(declare-fun m!17537 () Bool)

(assert (=> b!23799 m!17537))

(declare-fun m!17539 () Bool)

(assert (=> b!23800 m!17539))

(assert (=> bm!1925 d!4087))

(declare-fun d!4089 () Bool)

(declare-fun e!15433 () Bool)

(assert (=> d!4089 e!15433))

(declare-fun res!14594 () Bool)

(assert (=> d!4089 (=> (not res!14594) (not e!15433))))

(assert (=> d!4089 (= res!14594 (and (bvsge (index!2338 lt!8281) #b00000000000000000000000000000000) (bvslt (index!2338 lt!8281) (size!704 (_keys!3164 (_2!487 lt!8158))))))))

(declare-fun lt!8736 () Unit!512)

(assert (=> d!4089 (= lt!8736 (choose!206 (_keys!3164 (_2!487 lt!8158)) lt!8287 (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) (index!2338 lt!8281) (defaultEntry!1743 (_2!487 lt!8158))))))

(assert (=> d!4089 (validMask!0 (mask!4730 (_2!487 lt!8158)))))

(assert (=> d!4089 (= (lemmaValidKeyInArrayIsInListMap!10 (_keys!3164 (_2!487 lt!8158)) lt!8287 (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) (index!2338 lt!8281) (defaultEntry!1743 (_2!487 lt!8158))) lt!8736)))

(declare-fun b!23801 () Bool)

(assert (=> b!23801 (= e!15433 (contains!230 (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) lt!8287 (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))) (select (arr!608 (_keys!3164 (_2!487 lt!8158))) (index!2338 lt!8281))))))

(assert (= (and d!4089 res!14594) b!23801))

(declare-fun m!17541 () Bool)

(assert (=> d!4089 m!17541))

(assert (=> d!4089 m!16990))

(declare-fun m!17543 () Bool)

(assert (=> b!23801 m!17543))

(assert (=> b!23801 m!16868))

(assert (=> b!23801 m!17543))

(assert (=> b!23801 m!16868))

(declare-fun m!17545 () Bool)

(assert (=> b!23801 m!17545))

(assert (=> b!23343 d!4089))

(declare-fun d!4091 () Bool)

(declare-fun e!15434 () Bool)

(assert (=> d!4091 e!15434))

(declare-fun res!14595 () Bool)

(assert (=> d!4091 (=> (not res!14595) (not e!15434))))

(assert (=> d!4091 (= res!14595 (and (bvsge (index!2338 lt!8281) #b00000000000000000000000000000000) (bvslt (index!2338 lt!8281) (size!703 (_values!1729 (_2!487 lt!8158))))))))

(declare-fun lt!8737 () Unit!512)

(assert (=> d!4091 (= lt!8737 (choose!207 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) (index!2338 lt!8281) #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (defaultEntry!1743 (_2!487 lt!8158))))))

(assert (=> d!4091 (validMask!0 (mask!4730 (_2!487 lt!8158)))))

(assert (=> d!4091 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!10 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) (index!2338 lt!8281) #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (defaultEntry!1743 (_2!487 lt!8158))) lt!8737)))

(declare-fun b!23802 () Bool)

(assert (=> b!23802 (= e!15434 (= (+!45 (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) (array!1284 (store (arr!607 (_values!1729 (_2!487 lt!8158))) (index!2338 lt!8281) (ValueCellFull!312 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!703 (_values!1729 (_2!487 lt!8158)))) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158)))))))

(assert (= (and d!4091 res!14595) b!23802))

(declare-fun m!17547 () Bool)

(assert (=> d!4091 m!17547))

(assert (=> d!4091 m!16990))

(assert (=> b!23802 m!16852))

(assert (=> b!23802 m!16852))

(assert (=> b!23802 m!17351))

(assert (=> b!23802 m!16854))

(declare-fun m!17549 () Bool)

(assert (=> b!23802 m!17549))

(assert (=> b!23343 d!4091))

(declare-fun d!4093 () Bool)

(declare-fun e!15435 () Bool)

(assert (=> d!4093 e!15435))

(declare-fun res!14596 () Bool)

(assert (=> d!4093 (=> res!14596 e!15435)))

(declare-fun lt!8738 () Bool)

(assert (=> d!4093 (= res!14596 (not lt!8738))))

(declare-fun lt!8739 () Bool)

(assert (=> d!4093 (= lt!8738 lt!8739)))

(declare-fun lt!8740 () Unit!512)

(declare-fun e!15436 () Unit!512)

(assert (=> d!4093 (= lt!8740 e!15436)))

(declare-fun c!3116 () Bool)

(assert (=> d!4093 (= c!3116 lt!8739)))

(assert (=> d!4093 (= lt!8739 (containsKey!25 (toList!299 (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158)))) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!4093 (= (contains!230 (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))) #b1000000000000000000000000000000000000000000000000000000000000000) lt!8738)))

(declare-fun b!23803 () Bool)

(declare-fun lt!8741 () Unit!512)

(assert (=> b!23803 (= e!15436 lt!8741)))

(assert (=> b!23803 (= lt!8741 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!299 (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158)))) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!23803 (isDefined!23 (getValueByKey!61 (toList!299 (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158)))) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!23804 () Bool)

(declare-fun Unit!537 () Unit!512)

(assert (=> b!23804 (= e!15436 Unit!537)))

(declare-fun b!23805 () Bool)

(assert (=> b!23805 (= e!15435 (isDefined!23 (getValueByKey!61 (toList!299 (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158)))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!4093 c!3116) b!23803))

(assert (= (and d!4093 (not c!3116)) b!23804))

(assert (= (and d!4093 (not res!14596)) b!23805))

(declare-fun m!17551 () Bool)

(assert (=> d!4093 m!17551))

(declare-fun m!17553 () Bool)

(assert (=> b!23803 m!17553))

(declare-fun m!17555 () Bool)

(assert (=> b!23803 m!17555))

(assert (=> b!23803 m!17555))

(declare-fun m!17557 () Bool)

(assert (=> b!23803 m!17557))

(assert (=> b!23805 m!17555))

(assert (=> b!23805 m!17555))

(assert (=> b!23805 m!17557))

(assert (=> b!23343 d!4093))

(assert (=> b!23343 d!4071))

(declare-fun d!4095 () Bool)

(declare-fun e!15437 () Bool)

(assert (=> d!4095 e!15437))

(declare-fun res!14597 () Bool)

(assert (=> d!4095 (=> (not res!14597) (not e!15437))))

(declare-fun lt!8742 () SeekEntryResult!54)

(assert (=> d!4095 (= res!14597 ((_ is Found!54) lt!8742))))

(assert (=> d!4095 (= lt!8742 (seekEntryOrOpen!0 #b1000000000000000000000000000000000000000000000000000000000000000 (_keys!3164 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158))))))

(declare-fun lt!8743 () Unit!512)

(assert (=> d!4095 (= lt!8743 (choose!208 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b1000000000000000000000000000000000000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))

(assert (=> d!4095 (validMask!0 (mask!4730 (_2!487 lt!8158)))))

(assert (=> d!4095 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!10 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b1000000000000000000000000000000000000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))) lt!8743)))

(declare-fun b!23806 () Bool)

(declare-fun res!14598 () Bool)

(assert (=> b!23806 (=> (not res!14598) (not e!15437))))

(assert (=> b!23806 (= res!14598 (inRange!0 (index!2338 lt!8742) (mask!4730 (_2!487 lt!8158))))))

(declare-fun b!23807 () Bool)

(assert (=> b!23807 (= e!15437 (= (select (arr!608 (_keys!3164 (_2!487 lt!8158))) (index!2338 lt!8742)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!23807 (and (bvsge (index!2338 lt!8742) #b00000000000000000000000000000000) (bvslt (index!2338 lt!8742) (size!704 (_keys!3164 (_2!487 lt!8158)))))))

(assert (= (and d!4095 res!14597) b!23806))

(assert (= (and b!23806 res!14598) b!23807))

(assert (=> d!4095 m!16890))

(declare-fun m!17559 () Bool)

(assert (=> d!4095 m!17559))

(assert (=> d!4095 m!16990))

(declare-fun m!17561 () Bool)

(assert (=> b!23806 m!17561))

(declare-fun m!17563 () Bool)

(assert (=> b!23807 m!17563))

(assert (=> bm!1949 d!4095))

(declare-fun d!4097 () Bool)

(declare-fun e!15438 () Bool)

(assert (=> d!4097 e!15438))

(declare-fun res!14599 () Bool)

(assert (=> d!4097 (=> (not res!14599) (not e!15438))))

(declare-fun lt!8746 () ListLongMap!567)

(assert (=> d!4097 (= res!14599 (contains!230 lt!8746 (_1!489 (ite c!2984 (ite c!2983 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(declare-fun lt!8745 () List!568)

(assert (=> d!4097 (= lt!8746 (ListLongMap!568 lt!8745))))

(declare-fun lt!8744 () Unit!512)

(declare-fun lt!8747 () Unit!512)

(assert (=> d!4097 (= lt!8744 lt!8747)))

(assert (=> d!4097 (= (getValueByKey!61 lt!8745 (_1!489 (ite c!2984 (ite c!2983 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))) (Some!66 (_2!489 (ite c!2984 (ite c!2983 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(assert (=> d!4097 (= lt!8747 (lemmaContainsTupThenGetReturnValue!18 lt!8745 (_1!489 (ite c!2984 (ite c!2983 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (_2!489 (ite c!2984 (ite c!2983 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(assert (=> d!4097 (= lt!8745 (insertStrictlySorted!18 (toList!299 e!15151) (_1!489 (ite c!2984 (ite c!2983 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (_2!489 (ite c!2984 (ite c!2983 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(assert (=> d!4097 (= (+!45 e!15151 (ite c!2984 (ite c!2983 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) lt!8746)))

(declare-fun b!23808 () Bool)

(declare-fun res!14600 () Bool)

(assert (=> b!23808 (=> (not res!14600) (not e!15438))))

(assert (=> b!23808 (= res!14600 (= (getValueByKey!61 (toList!299 lt!8746) (_1!489 (ite c!2984 (ite c!2983 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))) (Some!66 (_2!489 (ite c!2984 (ite c!2983 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))))

(declare-fun b!23809 () Bool)

(assert (=> b!23809 (= e!15438 (contains!232 (toList!299 lt!8746) (ite c!2984 (ite c!2983 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(assert (= (and d!4097 res!14599) b!23808))

(assert (= (and b!23808 res!14600) b!23809))

(declare-fun m!17565 () Bool)

(assert (=> d!4097 m!17565))

(declare-fun m!17567 () Bool)

(assert (=> d!4097 m!17567))

(declare-fun m!17569 () Bool)

(assert (=> d!4097 m!17569))

(declare-fun m!17571 () Bool)

(assert (=> d!4097 m!17571))

(declare-fun m!17573 () Bool)

(assert (=> b!23808 m!17573))

(declare-fun m!17575 () Bool)

(assert (=> b!23809 m!17575))

(assert (=> bm!1910 d!4097))

(declare-fun d!4099 () Bool)

(assert (=> d!4099 (= (map!407 (_2!487 lt!8158)) (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))

(declare-fun bs!958 () Bool)

(assert (= bs!958 d!4099))

(assert (=> bs!958 m!16852))

(assert (=> bm!1951 d!4099))

(declare-fun d!4101 () Bool)

(assert (=> d!4101 (= (map!407 (_2!487 lt!8249)) (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8249)) (_values!1729 (_2!487 lt!8249)) (mask!4730 (_2!487 lt!8249)) (extraKeys!1641 (_2!487 lt!8249)) (zeroValue!1666 (_2!487 lt!8249)) (minValue!1666 (_2!487 lt!8249)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8249))))))

(declare-fun bs!959 () Bool)

(assert (= bs!959 d!4101))

(declare-fun m!17577 () Bool)

(assert (=> bs!959 m!17577))

(assert (=> bm!1924 d!4101))

(assert (=> b!23298 d!4053))

(declare-fun d!4103 () Bool)

(assert (=> d!4103 (= (validMask!0 lt!8364) (and (or (= lt!8364 #b00000000000000000000000000000111) (= lt!8364 #b00000000000000000000000000001111) (= lt!8364 #b00000000000000000000000000011111) (= lt!8364 #b00000000000000000000000000111111) (= lt!8364 #b00000000000000000000000001111111) (= lt!8364 #b00000000000000000000000011111111) (= lt!8364 #b00000000000000000000000111111111) (= lt!8364 #b00000000000000000000001111111111) (= lt!8364 #b00000000000000000000011111111111) (= lt!8364 #b00000000000000000000111111111111) (= lt!8364 #b00000000000000000001111111111111) (= lt!8364 #b00000000000000000011111111111111) (= lt!8364 #b00000000000000000111111111111111) (= lt!8364 #b00000000000000001111111111111111) (= lt!8364 #b00000000000000011111111111111111) (= lt!8364 #b00000000000000111111111111111111) (= lt!8364 #b00000000000001111111111111111111) (= lt!8364 #b00000000000011111111111111111111) (= lt!8364 #b00000000000111111111111111111111) (= lt!8364 #b00000000001111111111111111111111) (= lt!8364 #b00000000011111111111111111111111) (= lt!8364 #b00000000111111111111111111111111) (= lt!8364 #b00000001111111111111111111111111) (= lt!8364 #b00000011111111111111111111111111) (= lt!8364 #b00000111111111111111111111111111) (= lt!8364 #b00001111111111111111111111111111) (= lt!8364 #b00011111111111111111111111111111) (= lt!8364 #b00111111111111111111111111111111)) (bvsle lt!8364 #b00111111111111111111111111111111)))))

(assert (=> d!3999 d!4103))

(assert (=> d!3999 d!3993))

(declare-fun d!4105 () Bool)

(declare-fun res!14601 () Bool)

(declare-fun e!15439 () Bool)

(assert (=> d!4105 (=> res!14601 e!15439)))

(assert (=> d!4105 (= res!14601 (= (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!4105 (= (arrayContainsKey!0 (_keys!3164 (_2!487 lt!8158)) #b1000000000000000000000000000000000000000000000000000000000000000 #b00000000000000000000000000000000) e!15439)))

(declare-fun b!23810 () Bool)

(declare-fun e!15440 () Bool)

(assert (=> b!23810 (= e!15439 e!15440)))

(declare-fun res!14602 () Bool)

(assert (=> b!23810 (=> (not res!14602) (not e!15440))))

(assert (=> b!23810 (= res!14602 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!704 (_keys!3164 (_2!487 lt!8158)))))))

(declare-fun b!23811 () Bool)

(assert (=> b!23811 (= e!15440 (arrayContainsKey!0 (_keys!3164 (_2!487 lt!8158)) #b1000000000000000000000000000000000000000000000000000000000000000 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!4105 (not res!14601)) b!23810))

(assert (= (and b!23810 res!14602) b!23811))

(assert (=> d!4105 m!16986))

(declare-fun m!17579 () Bool)

(assert (=> b!23811 m!17579))

(assert (=> bm!1936 d!4105))

(declare-fun d!4107 () Bool)

(declare-fun e!15441 () Bool)

(assert (=> d!4107 e!15441))

(declare-fun res!14603 () Bool)

(assert (=> d!4107 (=> (not res!14603) (not e!15441))))

(declare-fun lt!8750 () ListLongMap!567)

(assert (=> d!4107 (= res!14603 (contains!230 lt!8750 (_1!489 (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(declare-fun lt!8749 () List!568)

(assert (=> d!4107 (= lt!8750 (ListLongMap!568 lt!8749))))

(declare-fun lt!8748 () Unit!512)

(declare-fun lt!8751 () Unit!512)

(assert (=> d!4107 (= lt!8748 lt!8751)))

(assert (=> d!4107 (= (getValueByKey!61 lt!8749 (_1!489 (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (Some!66 (_2!489 (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(assert (=> d!4107 (= lt!8751 (lemmaContainsTupThenGetReturnValue!18 lt!8749 (_1!489 (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (_2!489 (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(assert (=> d!4107 (= lt!8749 (insertStrictlySorted!18 (toList!299 call!1917) (_1!489 (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (_2!489 (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(assert (=> d!4107 (= (+!45 call!1917 (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) lt!8750)))

(declare-fun b!23812 () Bool)

(declare-fun res!14604 () Bool)

(assert (=> b!23812 (=> (not res!14604) (not e!15441))))

(assert (=> b!23812 (= res!14604 (= (getValueByKey!61 (toList!299 lt!8750) (_1!489 (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (Some!66 (_2!489 (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(declare-fun b!23813 () Bool)

(assert (=> b!23813 (= e!15441 (contains!232 (toList!299 lt!8750) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(assert (= (and d!4107 res!14603) b!23812))

(assert (= (and b!23812 res!14604) b!23813))

(declare-fun m!17581 () Bool)

(assert (=> d!4107 m!17581))

(declare-fun m!17583 () Bool)

(assert (=> d!4107 m!17583))

(declare-fun m!17585 () Bool)

(assert (=> d!4107 m!17585))

(declare-fun m!17587 () Bool)

(assert (=> d!4107 m!17587))

(declare-fun m!17589 () Bool)

(assert (=> b!23812 m!17589))

(declare-fun m!17591 () Bool)

(assert (=> b!23813 m!17591))

(assert (=> b!23290 d!4107))

(declare-fun d!4109 () Bool)

(assert (=> d!4109 (= (+!45 (getCurrentListMap!130 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (getCurrentListMap!130 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) lt!8241 (zeroValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))))

(declare-fun lt!8754 () Unit!512)

(declare-fun choose!209 (array!1285 array!1283 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!1189 V!1189 V!1189 Int) Unit!512)

(assert (=> d!4109 (= lt!8754 (choose!209 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) lt!8241 (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (defaultEntry!1743 lt!8161)))))

(assert (=> d!4109 (validMask!0 (mask!4730 lt!8161))))

(assert (=> d!4109 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!10 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) lt!8241 (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (defaultEntry!1743 lt!8161)) lt!8754)))

(declare-fun bs!960 () Bool)

(assert (= bs!960 d!4109))

(assert (=> bs!960 m!17182))

(assert (=> bs!960 m!16790))

(declare-fun m!17593 () Bool)

(assert (=> bs!960 m!17593))

(declare-fun m!17595 () Bool)

(assert (=> bs!960 m!17595))

(declare-fun m!17597 () Bool)

(assert (=> bs!960 m!17597))

(assert (=> bs!960 m!16790))

(assert (=> b!23314 d!4109))

(declare-fun d!4111 () Bool)

(declare-fun e!15442 () Bool)

(assert (=> d!4111 e!15442))

(declare-fun res!14605 () Bool)

(assert (=> d!4111 (=> (not res!14605) (not e!15442))))

(declare-fun lt!8757 () ListLongMap!567)

(assert (=> d!4111 (= res!14605 (contains!230 lt!8757 (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(declare-fun lt!8756 () List!568)

(assert (=> d!4111 (= lt!8757 (ListLongMap!568 lt!8756))))

(declare-fun lt!8755 () Unit!512)

(declare-fun lt!8758 () Unit!512)

(assert (=> d!4111 (= lt!8755 lt!8758)))

(assert (=> d!4111 (= (getValueByKey!61 lt!8756 (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (Some!66 (_2!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(assert (=> d!4111 (= lt!8758 (lemmaContainsTupThenGetReturnValue!18 lt!8756 (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (_2!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(assert (=> d!4111 (= lt!8756 (insertStrictlySorted!18 (toList!299 call!1941) (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (_2!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(assert (=> d!4111 (= (+!45 call!1941 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) lt!8757)))

(declare-fun b!23814 () Bool)

(declare-fun res!14606 () Bool)

(assert (=> b!23814 (=> (not res!14606) (not e!15442))))

(assert (=> b!23814 (= res!14606 (= (getValueByKey!61 (toList!299 lt!8757) (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (Some!66 (_2!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(declare-fun b!23815 () Bool)

(assert (=> b!23815 (= e!15442 (contains!232 (toList!299 lt!8757) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))

(assert (= (and d!4111 res!14605) b!23814))

(assert (= (and b!23814 res!14606) b!23815))

(declare-fun m!17599 () Bool)

(assert (=> d!4111 m!17599))

(declare-fun m!17601 () Bool)

(assert (=> d!4111 m!17601))

(declare-fun m!17603 () Bool)

(assert (=> d!4111 m!17603))

(declare-fun m!17605 () Bool)

(assert (=> d!4111 m!17605))

(declare-fun m!17607 () Bool)

(assert (=> b!23814 m!17607))

(declare-fun m!17609 () Bool)

(assert (=> b!23815 m!17609))

(assert (=> b!23332 d!4111))

(declare-fun d!4113 () Bool)

(assert (=> d!4113 (= (+!45 (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) lt!8268 (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))

(declare-fun lt!8759 () Unit!512)

(assert (=> d!4113 (= lt!8759 (choose!209 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) lt!8268 (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (defaultEntry!1743 (_2!487 lt!8158))))))

(assert (=> d!4113 (validMask!0 (mask!4730 (_2!487 lt!8158)))))

(assert (=> d!4113 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!10 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) lt!8268 (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (defaultEntry!1743 (_2!487 lt!8158))) lt!8759)))

(declare-fun bs!961 () Bool)

(assert (= bs!961 d!4113))

(assert (=> bs!961 m!16990))

(assert (=> bs!961 m!16852))

(assert (=> bs!961 m!17351))

(declare-fun m!17611 () Bool)

(assert (=> bs!961 m!17611))

(declare-fun m!17613 () Bool)

(assert (=> bs!961 m!17613))

(assert (=> bs!961 m!16852))

(assert (=> b!23356 d!4113))

(declare-fun d!4115 () Bool)

(assert (=> d!4115 (= (map!407 lt!8161) (getCurrentListMap!130 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))))

(declare-fun bs!962 () Bool)

(assert (= bs!962 d!4115))

(assert (=> bs!962 m!16790))

(assert (=> bm!1927 d!4115))

(declare-fun d!4117 () Bool)

(declare-fun e!15443 () Bool)

(assert (=> d!4117 e!15443))

(declare-fun res!14607 () Bool)

(assert (=> d!4117 (=> res!14607 e!15443)))

(declare-fun lt!8760 () Bool)

(assert (=> d!4117 (= res!14607 (not lt!8760))))

(declare-fun lt!8761 () Bool)

(assert (=> d!4117 (= lt!8760 lt!8761)))

(declare-fun lt!8762 () Unit!512)

(declare-fun e!15444 () Unit!512)

(assert (=> d!4117 (= lt!8762 e!15444)))

(declare-fun c!3117 () Bool)

(assert (=> d!4117 (= c!3117 lt!8761)))

(assert (=> d!4117 (= lt!8761 (containsKey!25 (toList!299 e!15139) (ite c!2982 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (select (arr!608 (_keys!3164 lt!8161)) (index!2338 lt!8254)))))))

(assert (=> d!4117 (= (contains!230 e!15139 (ite c!2982 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (select (arr!608 (_keys!3164 lt!8161)) (index!2338 lt!8254)))) lt!8760)))

(declare-fun b!23816 () Bool)

(declare-fun lt!8763 () Unit!512)

(assert (=> b!23816 (= e!15444 lt!8763)))

(assert (=> b!23816 (= lt!8763 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!299 e!15139) (ite c!2982 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (select (arr!608 (_keys!3164 lt!8161)) (index!2338 lt!8254)))))))

(assert (=> b!23816 (isDefined!23 (getValueByKey!61 (toList!299 e!15139) (ite c!2982 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (select (arr!608 (_keys!3164 lt!8161)) (index!2338 lt!8254)))))))

(declare-fun b!23817 () Bool)

(declare-fun Unit!538 () Unit!512)

(assert (=> b!23817 (= e!15444 Unit!538)))

(declare-fun b!23818 () Bool)

(assert (=> b!23818 (= e!15443 (isDefined!23 (getValueByKey!61 (toList!299 e!15139) (ite c!2982 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (select (arr!608 (_keys!3164 lt!8161)) (index!2338 lt!8254))))))))

(assert (= (and d!4117 c!3117) b!23816))

(assert (= (and d!4117 (not c!3117)) b!23817))

(assert (= (and d!4117 (not res!14607)) b!23818))

(declare-fun m!17615 () Bool)

(assert (=> d!4117 m!17615))

(declare-fun m!17617 () Bool)

(assert (=> b!23816 m!17617))

(declare-fun m!17619 () Bool)

(assert (=> b!23816 m!17619))

(assert (=> b!23816 m!17619))

(declare-fun m!17621 () Bool)

(assert (=> b!23816 m!17621))

(assert (=> b!23818 m!17619))

(assert (=> b!23818 m!17619))

(assert (=> b!23818 m!17621))

(assert (=> bm!1928 d!4117))

(declare-fun b!23819 () Bool)

(declare-fun res!14612 () Bool)

(declare-fun e!15446 () Bool)

(assert (=> b!23819 (=> (not res!14612) (not e!15446))))

(declare-fun lt!8769 () tuple2!956)

(assert (=> b!23819 (= res!14612 (valid!104 (_2!487 lt!8769)))))

(declare-fun c!3118 () Bool)

(declare-fun bm!2041 () Bool)

(declare-fun call!2046 () Bool)

(declare-fun lt!8784 () SeekEntryResult!54)

(declare-fun lt!8782 () SeekEntryResult!54)

(declare-fun c!3121 () Bool)

(assert (=> bm!2041 (= call!2046 (inRange!0 (ite c!3118 (index!2338 lt!8782) (ite c!3121 (index!2337 lt!8784) (index!2340 lt!8784))) (mask!4730 lt!8161)))))

(declare-fun b!23820 () Bool)

(declare-fun res!14614 () Bool)

(declare-fun e!15451 () Bool)

(assert (=> b!23820 (=> (not res!14614) (not e!15451))))

(declare-fun call!2045 () Bool)

(assert (=> b!23820 (= res!14614 call!2045)))

(declare-fun e!15445 () Bool)

(assert (=> b!23820 (= e!15445 e!15451)))

(declare-fun d!4119 () Bool)

(assert (=> d!4119 e!15446))

(declare-fun res!14609 () Bool)

(assert (=> d!4119 (=> (not res!14609) (not e!15446))))

(assert (=> d!4119 (= res!14609 (_1!487 lt!8769))))

(assert (=> d!4119 (= lt!8769 (tuple2!957 true (LongMapFixedSize!211 (defaultEntry!1743 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) (bvadd (_size!150 lt!8161) #b00000000000000000000000000000001) (array!1286 (store (arr!608 (_keys!3164 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (size!704 (_keys!3164 lt!8161))) (array!1284 (store (arr!607 (_values!1729 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ValueCellFull!312 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (size!703 (_values!1729 lt!8161))) (_vacant!150 lt!8161))))))

(declare-fun lt!8767 () Unit!512)

(declare-fun lt!8792 () Unit!512)

(assert (=> d!4119 (= lt!8767 lt!8792)))

(declare-fun lt!8788 () array!1283)

(declare-fun lt!8783 () array!1285)

(assert (=> d!4119 (contains!230 (getCurrentListMap!130 lt!8783 lt!8788 (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)) (select (store (arr!608 (_keys!3164 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254))))))

(assert (=> d!4119 (= lt!8792 (lemmaValidKeyInArrayIsInListMap!10 lt!8783 lt!8788 (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (defaultEntry!1743 lt!8161)))))

(assert (=> d!4119 (= lt!8788 (array!1284 (store (arr!607 (_values!1729 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ValueCellFull!312 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (size!703 (_values!1729 lt!8161))))))

(assert (=> d!4119 (= lt!8783 (array!1286 (store (arr!608 (_keys!3164 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (size!704 (_keys!3164 lt!8161))))))

(declare-fun lt!8777 () Unit!512)

(declare-fun lt!8791 () Unit!512)

(assert (=> d!4119 (= lt!8777 lt!8791)))

(declare-fun lt!8780 () array!1285)

(assert (=> d!4119 (= (arrayCountValidKeys!0 lt!8780 (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (bvadd (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(assert (=> d!4119 (= lt!8791 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!8780 (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254))))))

(assert (=> d!4119 (= lt!8780 (array!1286 (store (arr!608 (_keys!3164 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (size!704 (_keys!3164 lt!8161))))))

(declare-fun lt!8785 () Unit!512)

(declare-fun lt!8781 () Unit!512)

(assert (=> d!4119 (= lt!8785 lt!8781)))

(declare-fun lt!8766 () array!1285)

(assert (=> d!4119 (arrayContainsKey!0 lt!8766 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) #b00000000000000000000000000000000)))

(assert (=> d!4119 (= lt!8781 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!8766 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254))))))

(assert (=> d!4119 (= lt!8766 (array!1286 (store (arr!608 (_keys!3164 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (size!704 (_keys!3164 lt!8161))))))

(declare-fun lt!8772 () Unit!512)

(declare-fun lt!8786 () Unit!512)

(assert (=> d!4119 (= lt!8772 lt!8786)))

(assert (=> d!4119 (= (+!45 (getCurrentListMap!130 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (getCurrentListMap!130 (array!1286 (store (arr!608 (_keys!3164 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (size!704 (_keys!3164 lt!8161))) (array!1284 (store (arr!607 (_values!1729 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ValueCellFull!312 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (size!703 (_values!1729 lt!8161))) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))))

(assert (=> d!4119 (= lt!8786 (lemmaAddValidKeyToArrayThenAddPairToListMap!3 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (defaultEntry!1743 lt!8161)))))

(declare-fun lt!8770 () Unit!512)

(declare-fun lt!8765 () Unit!512)

(assert (=> d!4119 (= lt!8770 lt!8765)))

(assert (=> d!4119 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!1286 (store (arr!608 (_keys!3164 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (size!704 (_keys!3164 lt!8161))) (mask!4730 lt!8161))))

(assert (=> d!4119 (= lt!8765 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (_keys!3164 lt!8161) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (mask!4730 lt!8161)))))

(declare-fun lt!8774 () Unit!512)

(declare-fun lt!8778 () Unit!512)

(assert (=> d!4119 (= lt!8774 lt!8778)))

(assert (=> d!4119 (= (arrayCountValidKeys!0 (array!1286 (store (arr!608 (_keys!3164 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (size!704 (_keys!3164 lt!8161))) #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))) (bvadd (arrayCountValidKeys!0 (_keys!3164 lt!8161) #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))) #b00000000000000000000000000000001))))

(assert (=> d!4119 (= lt!8778 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3164 lt!8161) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun lt!8773 () Unit!512)

(declare-fun lt!8793 () Unit!512)

(assert (=> d!4119 (= lt!8773 lt!8793)))

(declare-fun lt!8771 () (_ BitVec 32))

(declare-fun lt!8776 () List!569)

(assert (=> d!4119 (arrayNoDuplicates!0 (array!1286 (store (arr!608 (_keys!3164 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (size!704 (_keys!3164 lt!8161))) lt!8771 lt!8776)))

(assert (=> d!4119 (= lt!8793 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3164 lt!8161) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) lt!8771 lt!8776))))

(assert (=> d!4119 (= lt!8776 Nil!566)))

(assert (=> d!4119 (= lt!8771 #b00000000000000000000000000000000)))

(declare-fun lt!8787 () Unit!512)

(declare-fun e!15452 () Unit!512)

(assert (=> d!4119 (= lt!8787 e!15452)))

(declare-fun c!3119 () Bool)

(assert (=> d!4119 (= c!3119 (arrayContainsKey!0 (_keys!3164 lt!8161) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) #b00000000000000000000000000000000))))

(declare-fun lt!8768 () Unit!512)

(declare-fun e!15450 () Unit!512)

(assert (=> d!4119 (= lt!8768 e!15450)))

(assert (=> d!4119 (= c!3118 (contains!230 (getCurrentListMap!130 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!4119 (valid!104 lt!8161)))

(assert (=> d!4119 (= (updateHelperNewKey!10 lt!8161 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254))) lt!8769)))

(declare-fun b!23821 () Bool)

(declare-fun res!14615 () Bool)

(assert (=> b!23821 (=> (not res!14615) (not e!15446))))

(assert (=> b!23821 (= res!14615 (contains!230 (map!407 (_2!487 lt!8769)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!23822 () Bool)

(declare-fun Unit!539 () Unit!512)

(assert (=> b!23822 (= e!15450 Unit!539)))

(declare-fun lt!8790 () Unit!512)

(assert (=> b!23822 (= lt!8790 (lemmaInListMapThenSeekEntryOrOpenFindsIt!10 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (defaultEntry!1743 lt!8161)))))

(declare-fun call!2047 () SeekEntryResult!54)

(assert (=> b!23822 (= lt!8782 call!2047)))

(declare-fun res!14611 () Bool)

(assert (=> b!23822 (= res!14611 ((_ is Found!54) lt!8782))))

(declare-fun e!15447 () Bool)

(assert (=> b!23822 (=> (not res!14611) (not e!15447))))

(assert (=> b!23822 e!15447))

(declare-fun lt!8764 () Unit!512)

(assert (=> b!23822 (= lt!8764 lt!8790)))

(assert (=> b!23822 false))

(declare-fun b!23823 () Bool)

(declare-fun e!15449 () Bool)

(declare-fun call!2044 () Bool)

(assert (=> b!23823 (= e!15449 (not call!2044))))

(declare-fun b!23824 () Bool)

(assert (=> b!23824 (= e!15451 (not call!2044))))

(declare-fun b!23825 () Bool)

(declare-fun e!15448 () Bool)

(assert (=> b!23825 (= e!15448 ((_ is Undefined!54) lt!8784))))

(declare-fun b!23826 () Bool)

(declare-fun c!3120 () Bool)

(assert (=> b!23826 (= c!3120 ((_ is MissingVacant!54) lt!8784))))

(assert (=> b!23826 (= e!15445 e!15448)))

(declare-fun bm!2042 () Bool)

(assert (=> bm!2042 (= call!2045 call!2046)))

(declare-fun bm!2043 () Bool)

(assert (=> bm!2043 (= call!2044 (arrayContainsKey!0 (_keys!3164 lt!8161) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) #b00000000000000000000000000000000))))

(declare-fun b!23827 () Bool)

(declare-fun Unit!540 () Unit!512)

(assert (=> b!23827 (= e!15452 Unit!540)))

(declare-fun b!23828 () Bool)

(declare-fun res!14613 () Bool)

(assert (=> b!23828 (= res!14613 (= (select (arr!608 (_keys!3164 lt!8161)) (index!2340 lt!8784)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!23828 (=> (not res!14613) (not e!15449))))

(declare-fun b!23829 () Bool)

(assert (=> b!23829 (= e!15447 (= (select (arr!608 (_keys!3164 lt!8161)) (index!2338 lt!8782)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!23830 () Bool)

(declare-fun lt!8789 () Unit!512)

(assert (=> b!23830 (= e!15450 lt!8789)))

(assert (=> b!23830 (= lt!8789 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!10 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (defaultEntry!1743 lt!8161)))))

(assert (=> b!23830 (= lt!8784 call!2047)))

(assert (=> b!23830 (= c!3121 ((_ is MissingZero!54) lt!8784))))

(assert (=> b!23830 e!15445))

(declare-fun b!23831 () Bool)

(declare-fun Unit!541 () Unit!512)

(assert (=> b!23831 (= e!15452 Unit!541)))

(declare-fun lt!8775 () Unit!512)

(assert (=> b!23831 (= lt!8775 (lemmaArrayContainsKeyThenInListMap!3 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))))

(assert (=> b!23831 (contains!230 (getCurrentListMap!130 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!8779 () Unit!512)

(assert (=> b!23831 (= lt!8779 lt!8775)))

(assert (=> b!23831 false))

(declare-fun bm!2044 () Bool)

(assert (=> bm!2044 (= call!2047 (seekEntryOrOpen!0 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (_keys!3164 lt!8161) (mask!4730 lt!8161)))))

(declare-fun b!23832 () Bool)

(assert (=> b!23832 (= e!15448 e!15449)))

(declare-fun res!14608 () Bool)

(assert (=> b!23832 (= res!14608 call!2045)))

(assert (=> b!23832 (=> (not res!14608) (not e!15449))))

(declare-fun b!23833 () Bool)

(declare-fun res!14616 () Bool)

(assert (=> b!23833 (=> (not res!14616) (not e!15451))))

(assert (=> b!23833 (= res!14616 (= (select (arr!608 (_keys!3164 lt!8161)) (index!2337 lt!8784)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!23834 () Bool)

(declare-fun res!14610 () Bool)

(assert (=> b!23834 (= res!14610 call!2046)))

(assert (=> b!23834 (=> (not res!14610) (not e!15447))))

(declare-fun b!23835 () Bool)

(assert (=> b!23835 (= e!15446 (= (map!407 (_2!487 lt!8769)) (+!45 (map!407 lt!8161) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(assert (= (and d!4119 c!3118) b!23822))

(assert (= (and d!4119 (not c!3118)) b!23830))

(assert (= (and b!23822 res!14611) b!23834))

(assert (= (and b!23834 res!14610) b!23829))

(assert (= (and b!23830 c!3121) b!23820))

(assert (= (and b!23830 (not c!3121)) b!23826))

(assert (= (and b!23820 res!14614) b!23833))

(assert (= (and b!23833 res!14616) b!23824))

(assert (= (and b!23826 c!3120) b!23832))

(assert (= (and b!23826 (not c!3120)) b!23825))

(assert (= (and b!23832 res!14608) b!23828))

(assert (= (and b!23828 res!14613) b!23823))

(assert (= (or b!23820 b!23832) bm!2042))

(assert (= (or b!23824 b!23823) bm!2043))

(assert (= (or b!23834 bm!2042) bm!2041))

(assert (= (or b!23822 b!23830) bm!2044))

(assert (= (and d!4119 c!3119) b!23831))

(assert (= (and d!4119 (not c!3119)) b!23827))

(assert (= (and d!4119 res!14609) b!23819))

(assert (= (and b!23819 res!14612) b!23821))

(assert (= (and b!23821 res!14615) b!23835))

(declare-fun m!17623 () Bool)

(assert (=> b!23819 m!17623))

(declare-fun m!17625 () Bool)

(assert (=> b!23831 m!17625))

(assert (=> b!23831 m!16790))

(assert (=> b!23831 m!16790))

(assert (=> b!23831 m!16814))

(assert (=> b!23830 m!16836))

(declare-fun m!17627 () Bool)

(assert (=> d!4119 m!17627))

(assert (=> d!4119 m!16790))

(assert (=> d!4119 m!16814))

(declare-fun m!17629 () Bool)

(assert (=> d!4119 m!17629))

(declare-fun m!17631 () Bool)

(assert (=> d!4119 m!17631))

(declare-fun m!17633 () Bool)

(assert (=> d!4119 m!17633))

(declare-fun m!17635 () Bool)

(assert (=> d!4119 m!17635))

(declare-fun m!17637 () Bool)

(assert (=> d!4119 m!17637))

(declare-fun m!17639 () Bool)

(assert (=> d!4119 m!17639))

(assert (=> d!4119 m!16790))

(assert (=> d!4119 m!16804))

(assert (=> d!4119 m!16790))

(assert (=> d!4119 m!17455))

(declare-fun m!17641 () Bool)

(assert (=> d!4119 m!17641))

(declare-fun m!17643 () Bool)

(assert (=> d!4119 m!17643))

(declare-fun m!17645 () Bool)

(assert (=> d!4119 m!17645))

(declare-fun m!17647 () Bool)

(assert (=> d!4119 m!17647))

(declare-fun m!17649 () Bool)

(assert (=> d!4119 m!17649))

(declare-fun m!17651 () Bool)

(assert (=> d!4119 m!17651))

(declare-fun m!17653 () Bool)

(assert (=> d!4119 m!17653))

(assert (=> d!4119 m!16798))

(assert (=> d!4119 m!17529))

(declare-fun m!17655 () Bool)

(assert (=> d!4119 m!17655))

(assert (=> d!4119 m!17631))

(assert (=> d!4119 m!17647))

(declare-fun m!17657 () Bool)

(assert (=> d!4119 m!17657))

(declare-fun m!17659 () Bool)

(assert (=> d!4119 m!17659))

(declare-fun m!17661 () Bool)

(assert (=> d!4119 m!17661))

(assert (=> bm!2043 m!16804))

(assert (=> bm!2044 m!16828))

(declare-fun m!17663 () Bool)

(assert (=> b!23835 m!17663))

(assert (=> b!23835 m!16800))

(assert (=> b!23835 m!16800))

(declare-fun m!17665 () Bool)

(assert (=> b!23835 m!17665))

(assert (=> b!23821 m!17663))

(assert (=> b!23821 m!17663))

(declare-fun m!17667 () Bool)

(assert (=> b!23821 m!17667))

(assert (=> b!23822 m!16788))

(declare-fun m!17669 () Bool)

(assert (=> b!23833 m!17669))

(declare-fun m!17671 () Bool)

(assert (=> bm!2041 m!17671))

(declare-fun m!17673 () Bool)

(assert (=> b!23829 m!17673))

(declare-fun m!17675 () Bool)

(assert (=> b!23828 m!17675))

(assert (=> bm!1916 d!4119))

(declare-fun d!4121 () Bool)

(assert (=> d!4121 (= (inRange!0 (ite c!2996 (ite c!2991 (index!2338 lt!8289) (ite c!2987 (index!2337 lt!8265) (index!2340 lt!8265))) (ite c!2990 (index!2338 lt!8286) (ite c!2995 (index!2337 lt!8273) (index!2340 lt!8273)))) (mask!4730 (_2!487 lt!8158))) (and (bvsge (ite c!2996 (ite c!2991 (index!2338 lt!8289) (ite c!2987 (index!2337 lt!8265) (index!2340 lt!8265))) (ite c!2990 (index!2338 lt!8286) (ite c!2995 (index!2337 lt!8273) (index!2340 lt!8273)))) #b00000000000000000000000000000000) (bvslt (ite c!2996 (ite c!2991 (index!2338 lt!8289) (ite c!2987 (index!2337 lt!8265) (index!2340 lt!8265))) (ite c!2990 (index!2338 lt!8286) (ite c!2995 (index!2337 lt!8273) (index!2340 lt!8273)))) (bvadd (mask!4730 (_2!487 lt!8158)) #b00000000000000000000000000000001))))))

(assert (=> bm!1942 d!4121))

(assert (=> b!23303 d!4081))

(declare-fun mapIsEmpty!1032 () Bool)

(declare-fun mapRes!1032 () Bool)

(assert (=> mapIsEmpty!1032 mapRes!1032))

(declare-fun b!23837 () Bool)

(declare-fun e!15454 () Bool)

(assert (=> b!23837 (= e!15454 tp_is_empty!1023)))

(declare-fun b!23836 () Bool)

(declare-fun e!15453 () Bool)

(assert (=> b!23836 (= e!15453 tp_is_empty!1023)))

(declare-fun mapNonEmpty!1032 () Bool)

(declare-fun tp!3534 () Bool)

(assert (=> mapNonEmpty!1032 (= mapRes!1032 (and tp!3534 e!15453))))

(declare-fun mapValue!1032 () ValueCell!312)

(declare-fun mapKey!1032 () (_ BitVec 32))

(declare-fun mapRest!1032 () (Array (_ BitVec 32) ValueCell!312))

(assert (=> mapNonEmpty!1032 (= mapRest!1031 (store mapRest!1032 mapKey!1032 mapValue!1032))))

(declare-fun condMapEmpty!1032 () Bool)

(declare-fun mapDefault!1032 () ValueCell!312)

(assert (=> mapNonEmpty!1031 (= condMapEmpty!1032 (= mapRest!1031 ((as const (Array (_ BitVec 32) ValueCell!312)) mapDefault!1032)))))

(assert (=> mapNonEmpty!1031 (= tp!3533 (and e!15454 mapRes!1032))))

(assert (= (and mapNonEmpty!1031 condMapEmpty!1032) mapIsEmpty!1032))

(assert (= (and mapNonEmpty!1031 (not condMapEmpty!1032)) mapNonEmpty!1032))

(assert (= (and mapNonEmpty!1032 ((_ is ValueCellFull!312) mapValue!1032)) b!23836))

(assert (= (and mapNonEmpty!1031 ((_ is ValueCellFull!312) mapDefault!1032)) b!23837))

(declare-fun m!17677 () Bool)

(assert (=> mapNonEmpty!1032 m!17677))

(check-sat (not b!23618) (not b!23813) (not b!23669) (not b!23513) (not b!23584) (not bm!1998) (not b!23724) (not b!23637) (not b!23617) (not b!23613) (not b!23750) (not b!23660) (not b!23437) (not d!4015) (not b!23686) (not d!4085) (not b!23754) (not b!23790) (not b!23548) (not bm!2006) (not bm!1993) (not b!23600) (not b!23775) (not d!4067) (not d!4025) (not b!23427) (not b!23737) (not b!23758) (not b!23509) (not bm!1961) (not d!4017) (not bm!2036) (not b!23830) (not d!4069) (not bm!1992) (not b!23667) (not d!4029) (not bm!2027) (not b!23641) (not b!23511) (not b!23604) (not b!23782) (not b!23504) (not b!23738) tp_is_empty!1023 (not bm!2034) (not b!23406) (not d!4021) (not b!23818) (not d!4023) (not bm!2026) (not bm!2007) (not d!4097) (not b!23612) (not b!23602) (not b!23786) (not b!23646) (not bm!1994) (not bm!1990) (not b!23788) (not b!23439) (not b!23454) b_and!1499 (not b!23803) (not b!23639) (not b!23684) (not bm!2043) (not b!23658) (not b!23769) (not bm!2025) (not bm!1958) (not b!23802) (not b!23562) (not bm!2029) (not d!4077) (not d!4071) (not d!4117) (not b_lambda!1587) (not b!23622) (not b!23616) (not b!23765) (not b!23653) (not d!4065) (not b!23789) (not b!23822) (not b_lambda!1591) (not b!23578) (not b!23632) (not d!4099) (not b!23581) (not d!4111) (not d!4107) (not d!4037) (not b_lambda!1583) (not b!23453) (not bm!2044) (not bm!2001) (not b!23767) (not b!23723) (not b!23662) (not bm!1985) (not d!4059) (not b_lambda!1585) (not b!23745) (not b!23583) (not b!23610) (not b!23515) (not bm!2028) (not b!23666) (not d!4009) (not b!23811) (not b_next!759) (not bm!2000) (not d!4101) (not b!23831) (not d!4041) (not b!23814) (not bm!2005) (not d!4073) (not b!23816) (not b!23764) (not b!23517) (not b!23808) (not b!23793) (not d!4083) (not b!23732) (not b!23791) (not d!4033) (not b_lambda!1589) (not b_lambda!1581) (not d!4095) (not d!4075) (not b!23591) (not b!23756) (not d!4061) (not b!23438) (not b!23809) (not b!23430) (not bm!2033) (not b!23498) (not d!4057) (not b!23598) (not b!23415) (not b!23451) (not bm!1964) (not bm!2023) (not bm!2035) (not b!23721) (not b!23733) (not b_lambda!1579) (not d!4109) (not b!23615) (not b!23835) (not b_lambda!1593) (not b!23761) (not bm!2008) (not d!4045) (not bm!2014) (not bm!1999) (not b!23625) (not b!23815) (not b!23664) (not b!23821) (not b!23780) (not d!4113) (not b!23812) (not b!23819) (not d!4093) (not b!23805) (not d!4011) (not b!23668) (not d!4051) (not d!4039) (not b!23647) (not bm!1980) (not b!23801) (not bm!2012) (not bm!1991) (not b!23497) (not d!4079) (not bm!1981) (not b!23555) (not b!23794) (not b!23752) (not d!4055) (not b!23674) (not b!23609) (not mapNonEmpty!1032) (not d!4087) (not d!4053) (not b!23784) (not b!23739) (not b!23626) (not d!4115) (not b!23806) (not d!4019) (not bm!2013) (not b!23596) (not bm!2041) (not b!23792) (not b!23585) (not b!23645) (not b!23768) (not d!4091) (not d!4049) (not bm!2040) (not d!4081) (not b!23614) (not b!23550) (not b!23643) (not d!4089) (not b!23799) (not bm!1979) (not d!4119) (not d!4043))
(check-sat b_and!1499 (not b_next!759))
(get-model)

(declare-fun d!4123 () Bool)

(declare-fun e!15455 () Bool)

(assert (=> d!4123 e!15455))

(declare-fun res!14617 () Bool)

(assert (=> d!4123 (=> res!14617 e!15455)))

(declare-fun lt!8794 () Bool)

(assert (=> d!4123 (= res!14617 (not lt!8794))))

(declare-fun lt!8795 () Bool)

(assert (=> d!4123 (= lt!8794 lt!8795)))

(declare-fun lt!8796 () Unit!512)

(declare-fun e!15456 () Unit!512)

(assert (=> d!4123 (= lt!8796 e!15456)))

(declare-fun c!3122 () Bool)

(assert (=> d!4123 (= c!3122 lt!8795)))

(assert (=> d!4123 (= lt!8795 (containsKey!25 (toList!299 lt!8506) (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000)))))

(assert (=> d!4123 (= (contains!230 lt!8506 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000)) lt!8794)))

(declare-fun b!23838 () Bool)

(declare-fun lt!8797 () Unit!512)

(assert (=> b!23838 (= e!15456 lt!8797)))

(assert (=> b!23838 (= lt!8797 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!299 lt!8506) (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000)))))

(assert (=> b!23838 (isDefined!23 (getValueByKey!61 (toList!299 lt!8506) (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000)))))

(declare-fun b!23839 () Bool)

(declare-fun Unit!542 () Unit!512)

(assert (=> b!23839 (= e!15456 Unit!542)))

(declare-fun b!23840 () Bool)

(assert (=> b!23840 (= e!15455 (isDefined!23 (getValueByKey!61 (toList!299 lt!8506) (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000))))))

(assert (= (and d!4123 c!3122) b!23838))

(assert (= (and d!4123 (not c!3122)) b!23839))

(assert (= (and d!4123 (not res!14617)) b!23840))

(assert (=> d!4123 m!16986))

(declare-fun m!17679 () Bool)

(assert (=> d!4123 m!17679))

(assert (=> b!23838 m!16986))

(declare-fun m!17681 () Bool)

(assert (=> b!23838 m!17681))

(assert (=> b!23838 m!16986))

(declare-fun m!17683 () Bool)

(assert (=> b!23838 m!17683))

(assert (=> b!23838 m!17683))

(declare-fun m!17685 () Bool)

(assert (=> b!23838 m!17685))

(assert (=> b!23840 m!16986))

(assert (=> b!23840 m!17683))

(assert (=> b!23840 m!17683))

(assert (=> b!23840 m!17685))

(assert (=> b!23584 d!4123))

(declare-fun d!4125 () Bool)

(assert (=> d!4125 (= (validKeyInArray!0 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000)) (and (not (= (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!23660 d!4125))

(declare-fun d!4127 () Bool)

(declare-fun e!15457 () Bool)

(assert (=> d!4127 e!15457))

(declare-fun res!14618 () Bool)

(assert (=> d!4127 (=> res!14618 e!15457)))

(declare-fun lt!8798 () Bool)

(assert (=> d!4127 (= res!14618 (not lt!8798))))

(declare-fun lt!8799 () Bool)

(assert (=> d!4127 (= lt!8798 lt!8799)))

(declare-fun lt!8800 () Unit!512)

(declare-fun e!15458 () Unit!512)

(assert (=> d!4127 (= lt!8800 e!15458)))

(declare-fun c!3123 () Bool)

(assert (=> d!4127 (= c!3123 lt!8799)))

(assert (=> d!4127 (= lt!8799 (containsKey!25 (toList!299 (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) lt!8287 (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158)))) (select (arr!608 (_keys!3164 (_2!487 lt!8158))) (index!2338 lt!8281))))))

(assert (=> d!4127 (= (contains!230 (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) lt!8287 (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))) (select (arr!608 (_keys!3164 (_2!487 lt!8158))) (index!2338 lt!8281))) lt!8798)))

(declare-fun b!23841 () Bool)

(declare-fun lt!8801 () Unit!512)

(assert (=> b!23841 (= e!15458 lt!8801)))

(assert (=> b!23841 (= lt!8801 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!299 (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) lt!8287 (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158)))) (select (arr!608 (_keys!3164 (_2!487 lt!8158))) (index!2338 lt!8281))))))

(assert (=> b!23841 (isDefined!23 (getValueByKey!61 (toList!299 (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) lt!8287 (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158)))) (select (arr!608 (_keys!3164 (_2!487 lt!8158))) (index!2338 lt!8281))))))

(declare-fun b!23842 () Bool)

(declare-fun Unit!543 () Unit!512)

(assert (=> b!23842 (= e!15458 Unit!543)))

(declare-fun b!23843 () Bool)

(assert (=> b!23843 (= e!15457 (isDefined!23 (getValueByKey!61 (toList!299 (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) lt!8287 (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158)))) (select (arr!608 (_keys!3164 (_2!487 lt!8158))) (index!2338 lt!8281)))))))

(assert (= (and d!4127 c!3123) b!23841))

(assert (= (and d!4127 (not c!3123)) b!23842))

(assert (= (and d!4127 (not res!14618)) b!23843))

(assert (=> d!4127 m!16868))

(declare-fun m!17687 () Bool)

(assert (=> d!4127 m!17687))

(assert (=> b!23841 m!16868))

(declare-fun m!17689 () Bool)

(assert (=> b!23841 m!17689))

(assert (=> b!23841 m!16868))

(declare-fun m!17691 () Bool)

(assert (=> b!23841 m!17691))

(assert (=> b!23841 m!17691))

(declare-fun m!17693 () Bool)

(assert (=> b!23841 m!17693))

(assert (=> b!23843 m!16868))

(assert (=> b!23843 m!17691))

(assert (=> b!23843 m!17691))

(assert (=> b!23843 m!17693))

(assert (=> b!23801 d!4127))

(declare-fun bm!2045 () Bool)

(declare-fun call!2049 () Bool)

(declare-fun lt!8819 () ListLongMap!567)

(assert (=> bm!2045 (= call!2049 (contains!230 lt!8819 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!2046 () Bool)

(declare-fun call!2051 () Bool)

(assert (=> bm!2046 (= call!2051 (contains!230 lt!8819 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!23844 () Bool)

(declare-fun e!15466 () Bool)

(declare-fun e!15467 () Bool)

(assert (=> b!23844 (= e!15466 e!15467)))

(declare-fun res!14627 () Bool)

(assert (=> b!23844 (=> (not res!14627) (not e!15467))))

(assert (=> b!23844 (= res!14627 (contains!230 lt!8819 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000)))))

(assert (=> b!23844 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))))))

(declare-fun b!23845 () Bool)

(declare-fun e!15460 () Unit!512)

(declare-fun lt!8804 () Unit!512)

(assert (=> b!23845 (= e!15460 lt!8804)))

(declare-fun lt!8816 () ListLongMap!567)

(assert (=> b!23845 (= lt!8816 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!487 lt!8158)) lt!8287 (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))

(declare-fun lt!8811 () (_ BitVec 64))

(assert (=> b!23845 (= lt!8811 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!8820 () (_ BitVec 64))

(assert (=> b!23845 (= lt!8820 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000))))

(declare-fun lt!8812 () Unit!512)

(assert (=> b!23845 (= lt!8812 (addStillContains!14 lt!8816 lt!8811 (zeroValue!1666 (_2!487 lt!8158)) lt!8820))))

(assert (=> b!23845 (contains!230 (+!45 lt!8816 (tuple2!961 lt!8811 (zeroValue!1666 (_2!487 lt!8158)))) lt!8820)))

(declare-fun lt!8823 () Unit!512)

(assert (=> b!23845 (= lt!8823 lt!8812)))

(declare-fun lt!8807 () ListLongMap!567)

(assert (=> b!23845 (= lt!8807 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!487 lt!8158)) lt!8287 (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))

(declare-fun lt!8822 () (_ BitVec 64))

(assert (=> b!23845 (= lt!8822 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!8821 () (_ BitVec 64))

(assert (=> b!23845 (= lt!8821 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000))))

(declare-fun lt!8806 () Unit!512)

(assert (=> b!23845 (= lt!8806 (addApplyDifferent!14 lt!8807 lt!8822 (minValue!1666 (_2!487 lt!8158)) lt!8821))))

(assert (=> b!23845 (= (apply!29 (+!45 lt!8807 (tuple2!961 lt!8822 (minValue!1666 (_2!487 lt!8158)))) lt!8821) (apply!29 lt!8807 lt!8821))))

(declare-fun lt!8805 () Unit!512)

(assert (=> b!23845 (= lt!8805 lt!8806)))

(declare-fun lt!8814 () ListLongMap!567)

(assert (=> b!23845 (= lt!8814 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!487 lt!8158)) lt!8287 (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))

(declare-fun lt!8817 () (_ BitVec 64))

(assert (=> b!23845 (= lt!8817 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!8803 () (_ BitVec 64))

(assert (=> b!23845 (= lt!8803 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000))))

(declare-fun lt!8808 () Unit!512)

(assert (=> b!23845 (= lt!8808 (addApplyDifferent!14 lt!8814 lt!8817 (zeroValue!1666 (_2!487 lt!8158)) lt!8803))))

(assert (=> b!23845 (= (apply!29 (+!45 lt!8814 (tuple2!961 lt!8817 (zeroValue!1666 (_2!487 lt!8158)))) lt!8803) (apply!29 lt!8814 lt!8803))))

(declare-fun lt!8813 () Unit!512)

(assert (=> b!23845 (= lt!8813 lt!8808)))

(declare-fun lt!8815 () ListLongMap!567)

(assert (=> b!23845 (= lt!8815 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!487 lt!8158)) lt!8287 (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))

(declare-fun lt!8810 () (_ BitVec 64))

(assert (=> b!23845 (= lt!8810 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!8802 () (_ BitVec 64))

(assert (=> b!23845 (= lt!8802 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000))))

(assert (=> b!23845 (= lt!8804 (addApplyDifferent!14 lt!8815 lt!8810 (minValue!1666 (_2!487 lt!8158)) lt!8802))))

(assert (=> b!23845 (= (apply!29 (+!45 lt!8815 (tuple2!961 lt!8810 (minValue!1666 (_2!487 lt!8158)))) lt!8802) (apply!29 lt!8815 lt!8802))))

(declare-fun bm!2047 () Bool)

(declare-fun call!2052 () ListLongMap!567)

(assert (=> bm!2047 (= call!2052 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!487 lt!8158)) lt!8287 (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))

(declare-fun b!23846 () Bool)

(declare-fun res!14622 () Bool)

(declare-fun e!15463 () Bool)

(assert (=> b!23846 (=> (not res!14622) (not e!15463))))

(declare-fun e!15459 () Bool)

(assert (=> b!23846 (= res!14622 e!15459)))

(declare-fun c!3126 () Bool)

(assert (=> b!23846 (= c!3126 (not (= (bvand (extraKeys!1641 (_2!487 lt!8158)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!23847 () Bool)

(declare-fun e!15471 () Bool)

(assert (=> b!23847 (= e!15471 (not call!2051))))

(declare-fun b!23848 () Bool)

(assert (=> b!23848 (= e!15459 (not call!2049))))

(declare-fun bm!2048 () Bool)

(declare-fun call!2053 () ListLongMap!567)

(assert (=> bm!2048 (= call!2053 call!2052)))

(declare-fun b!23849 () Bool)

(declare-fun e!15469 () ListLongMap!567)

(declare-fun call!2054 () ListLongMap!567)

(assert (=> b!23849 (= e!15469 call!2054)))

(declare-fun b!23850 () Bool)

(declare-fun res!14625 () Bool)

(assert (=> b!23850 (=> (not res!14625) (not e!15463))))

(assert (=> b!23850 (= res!14625 e!15466)))

(declare-fun res!14620 () Bool)

(assert (=> b!23850 (=> res!14620 e!15466)))

(declare-fun e!15462 () Bool)

(assert (=> b!23850 (= res!14620 (not e!15462))))

(declare-fun res!14624 () Bool)

(assert (=> b!23850 (=> (not res!14624) (not e!15462))))

(assert (=> b!23850 (= res!14624 (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))))))

(declare-fun b!23852 () Bool)

(declare-fun e!15464 () ListLongMap!567)

(assert (=> b!23852 (= e!15464 call!2054)))

(declare-fun b!23853 () Bool)

(declare-fun e!15465 () Bool)

(assert (=> b!23853 (= e!15459 e!15465)))

(declare-fun res!14626 () Bool)

(assert (=> b!23853 (= res!14626 call!2049)))

(assert (=> b!23853 (=> (not res!14626) (not e!15465))))

(declare-fun b!23854 () Bool)

(assert (=> b!23854 (= e!15463 e!15471)))

(declare-fun c!3124 () Bool)

(assert (=> b!23854 (= c!3124 (not (= (bvand (extraKeys!1641 (_2!487 lt!8158)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!2049 () Bool)

(declare-fun call!2048 () ListLongMap!567)

(assert (=> bm!2049 (= call!2048 call!2053)))

(declare-fun b!23855 () Bool)

(assert (=> b!23855 (= e!15469 call!2048)))

(declare-fun b!23856 () Bool)

(declare-fun e!15470 () Bool)

(assert (=> b!23856 (= e!15470 (= (apply!29 lt!8819 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!1666 (_2!487 lt!8158))))))

(declare-fun b!23857 () Bool)

(declare-fun c!3127 () Bool)

(assert (=> b!23857 (= c!3127 (and (not (= (bvand (extraKeys!1641 (_2!487 lt!8158)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 (_2!487 lt!8158)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!23857 (= e!15464 e!15469)))

(declare-fun b!23858 () Bool)

(assert (=> b!23858 (= e!15462 (validKeyInArray!0 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000)))))

(declare-fun bm!2050 () Bool)

(declare-fun call!2050 () ListLongMap!567)

(assert (=> bm!2050 (= call!2054 call!2050)))

(declare-fun b!23859 () Bool)

(assert (=> b!23859 (= e!15471 e!15470)))

(declare-fun res!14623 () Bool)

(assert (=> b!23859 (= res!14623 call!2051)))

(assert (=> b!23859 (=> (not res!14623) (not e!15470))))

(declare-fun c!3125 () Bool)

(declare-fun c!3129 () Bool)

(declare-fun bm!2051 () Bool)

(assert (=> bm!2051 (= call!2050 (+!45 (ite c!3125 call!2052 (ite c!3129 call!2053 call!2048)) (ite (or c!3125 c!3129) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (_2!487 lt!8158))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!487 lt!8158))))))))

(declare-fun b!23860 () Bool)

(assert (=> b!23860 (= e!15465 (= (apply!29 lt!8819 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!1666 (_2!487 lt!8158))))))

(declare-fun b!23861 () Bool)

(declare-fun e!15461 () ListLongMap!567)

(assert (=> b!23861 (= e!15461 e!15464)))

(assert (=> b!23861 (= c!3129 (and (not (= (bvand (extraKeys!1641 (_2!487 lt!8158)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 (_2!487 lt!8158)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!23862 () Bool)

(declare-fun e!15468 () Bool)

(assert (=> b!23862 (= e!15468 (validKeyInArray!0 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000)))))

(declare-fun b!23851 () Bool)

(assert (=> b!23851 (= e!15461 (+!45 call!2050 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!487 lt!8158)))))))

(declare-fun d!4129 () Bool)

(assert (=> d!4129 e!15463))

(declare-fun res!14619 () Bool)

(assert (=> d!4129 (=> (not res!14619) (not e!15463))))

(assert (=> d!4129 (= res!14619 (or (bvsge #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))))))))

(declare-fun lt!8809 () ListLongMap!567)

(assert (=> d!4129 (= lt!8819 lt!8809)))

(declare-fun lt!8818 () Unit!512)

(assert (=> d!4129 (= lt!8818 e!15460)))

(declare-fun c!3128 () Bool)

(assert (=> d!4129 (= c!3128 e!15468)))

(declare-fun res!14621 () Bool)

(assert (=> d!4129 (=> (not res!14621) (not e!15468))))

(assert (=> d!4129 (= res!14621 (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))))))

(assert (=> d!4129 (= lt!8809 e!15461)))

(assert (=> d!4129 (= c!3125 (and (not (= (bvand (extraKeys!1641 (_2!487 lt!8158)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!1641 (_2!487 lt!8158)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!4129 (validMask!0 (mask!4730 (_2!487 lt!8158)))))

(assert (=> d!4129 (= (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) lt!8287 (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))) lt!8819)))

(declare-fun b!23863 () Bool)

(declare-fun Unit!544 () Unit!512)

(assert (=> b!23863 (= e!15460 Unit!544)))

(declare-fun b!23864 () Bool)

(assert (=> b!23864 (= e!15467 (= (apply!29 lt!8819 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000)) (get!390 (select (arr!607 lt!8287) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (_2!487 lt!8158)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!23864 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!703 lt!8287)))))

(assert (=> b!23864 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))))))

(assert (= (and d!4129 c!3125) b!23851))

(assert (= (and d!4129 (not c!3125)) b!23861))

(assert (= (and b!23861 c!3129) b!23852))

(assert (= (and b!23861 (not c!3129)) b!23857))

(assert (= (and b!23857 c!3127) b!23849))

(assert (= (and b!23857 (not c!3127)) b!23855))

(assert (= (or b!23849 b!23855) bm!2049))

(assert (= (or b!23852 bm!2049) bm!2048))

(assert (= (or b!23852 b!23849) bm!2050))

(assert (= (or b!23851 bm!2048) bm!2047))

(assert (= (or b!23851 bm!2050) bm!2051))

(assert (= (and d!4129 res!14621) b!23862))

(assert (= (and d!4129 c!3128) b!23845))

(assert (= (and d!4129 (not c!3128)) b!23863))

(assert (= (and d!4129 res!14619) b!23850))

(assert (= (and b!23850 res!14624) b!23858))

(assert (= (and b!23850 (not res!14620)) b!23844))

(assert (= (and b!23844 res!14627) b!23864))

(assert (= (and b!23850 res!14625) b!23846))

(assert (= (and b!23846 c!3126) b!23853))

(assert (= (and b!23846 (not c!3126)) b!23848))

(assert (= (and b!23853 res!14626) b!23860))

(assert (= (or b!23853 b!23848) bm!2045))

(assert (= (and b!23846 res!14622) b!23854))

(assert (= (and b!23854 c!3124) b!23859))

(assert (= (and b!23854 (not c!3124)) b!23847))

(assert (= (and b!23859 res!14623) b!23856))

(assert (= (or b!23859 b!23847) bm!2046))

(declare-fun b_lambda!1595 () Bool)

(assert (=> (not b_lambda!1595) (not b!23864)))

(assert (=> b!23864 t!3242))

(declare-fun b_and!1501 () Bool)

(assert (= b_and!1499 (and (=> t!3242 result!1099) b_and!1501)))

(declare-fun m!17695 () Bool)

(assert (=> bm!2047 m!17695))

(declare-fun m!17697 () Bool)

(assert (=> b!23860 m!17697))

(assert (=> b!23862 m!16986))

(assert (=> b!23862 m!16986))

(assert (=> b!23862 m!16988))

(assert (=> d!4129 m!16990))

(assert (=> b!23844 m!16986))

(assert (=> b!23844 m!16986))

(declare-fun m!17699 () Bool)

(assert (=> b!23844 m!17699))

(declare-fun m!17701 () Bool)

(assert (=> b!23845 m!17701))

(declare-fun m!17703 () Bool)

(assert (=> b!23845 m!17703))

(declare-fun m!17705 () Bool)

(assert (=> b!23845 m!17705))

(assert (=> b!23845 m!17703))

(declare-fun m!17707 () Bool)

(assert (=> b!23845 m!17707))

(declare-fun m!17709 () Bool)

(assert (=> b!23845 m!17709))

(declare-fun m!17711 () Bool)

(assert (=> b!23845 m!17711))

(declare-fun m!17713 () Bool)

(assert (=> b!23845 m!17713))

(declare-fun m!17715 () Bool)

(assert (=> b!23845 m!17715))

(declare-fun m!17717 () Bool)

(assert (=> b!23845 m!17717))

(declare-fun m!17719 () Bool)

(assert (=> b!23845 m!17719))

(assert (=> b!23845 m!17705))

(declare-fun m!17721 () Bool)

(assert (=> b!23845 m!17721))

(declare-fun m!17723 () Bool)

(assert (=> b!23845 m!17723))

(assert (=> b!23845 m!17711))

(declare-fun m!17725 () Bool)

(assert (=> b!23845 m!17725))

(assert (=> b!23845 m!16986))

(declare-fun m!17727 () Bool)

(assert (=> b!23845 m!17727))

(assert (=> b!23845 m!17695))

(declare-fun m!17729 () Bool)

(assert (=> b!23845 m!17729))

(assert (=> b!23845 m!17717))

(assert (=> b!23858 m!16986))

(assert (=> b!23858 m!16986))

(assert (=> b!23858 m!16988))

(declare-fun m!17731 () Bool)

(assert (=> b!23864 m!17731))

(assert (=> b!23864 m!17731))

(assert (=> b!23864 m!17026))

(declare-fun m!17733 () Bool)

(assert (=> b!23864 m!17733))

(assert (=> b!23864 m!17026))

(assert (=> b!23864 m!16986))

(declare-fun m!17735 () Bool)

(assert (=> b!23864 m!17735))

(assert (=> b!23864 m!16986))

(declare-fun m!17737 () Bool)

(assert (=> bm!2046 m!17737))

(declare-fun m!17739 () Bool)

(assert (=> bm!2045 m!17739))

(declare-fun m!17741 () Bool)

(assert (=> b!23851 m!17741))

(declare-fun m!17743 () Bool)

(assert (=> b!23856 m!17743))

(declare-fun m!17745 () Bool)

(assert (=> bm!2051 m!17745))

(assert (=> b!23801 d!4129))

(declare-fun d!4131 () Bool)

(assert (=> d!4131 (= (validKeyInArray!0 (select (arr!608 lt!8341) lt!8354)) (and (not (= (select (arr!608 lt!8341) lt!8354) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!608 lt!8341) lt!8354) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!23427 d!4131))

(declare-fun d!4133 () Bool)

(declare-fun c!3134 () Bool)

(assert (=> d!4133 (= c!3134 (and ((_ is Cons!564) (toList!299 lt!8757)) (= (_1!489 (h!1130 (toList!299 lt!8757))) (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(declare-fun e!15476 () Option!67)

(assert (=> d!4133 (= (getValueByKey!61 (toList!299 lt!8757) (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) e!15476)))

(declare-fun b!23873 () Bool)

(assert (=> b!23873 (= e!15476 (Some!66 (_2!489 (h!1130 (toList!299 lt!8757)))))))

(declare-fun b!23876 () Bool)

(declare-fun e!15477 () Option!67)

(assert (=> b!23876 (= e!15477 None!65)))

(declare-fun b!23874 () Bool)

(assert (=> b!23874 (= e!15476 e!15477)))

(declare-fun c!3135 () Bool)

(assert (=> b!23874 (= c!3135 (and ((_ is Cons!564) (toList!299 lt!8757)) (not (= (_1!489 (h!1130 (toList!299 lt!8757))) (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(declare-fun b!23875 () Bool)

(assert (=> b!23875 (= e!15477 (getValueByKey!61 (t!3239 (toList!299 lt!8757)) (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(assert (= (and d!4133 c!3134) b!23873))

(assert (= (and d!4133 (not c!3134)) b!23874))

(assert (= (and b!23874 c!3135) b!23875))

(assert (= (and b!23874 (not c!3135)) b!23876))

(declare-fun m!17747 () Bool)

(assert (=> b!23875 m!17747))

(assert (=> b!23814 d!4133))

(assert (=> b!23782 d!4125))

(declare-fun d!4135 () Bool)

(declare-fun e!15478 () Bool)

(assert (=> d!4135 e!15478))

(declare-fun res!14628 () Bool)

(assert (=> d!4135 (=> (not res!14628) (not e!15478))))

(declare-fun lt!8826 () ListLongMap!567)

(assert (=> d!4135 (= res!14628 (contains!230 lt!8826 (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!487 lt!8158))))))))

(declare-fun lt!8825 () List!568)

(assert (=> d!4135 (= lt!8826 (ListLongMap!568 lt!8825))))

(declare-fun lt!8824 () Unit!512)

(declare-fun lt!8827 () Unit!512)

(assert (=> d!4135 (= lt!8824 lt!8827)))

(assert (=> d!4135 (= (getValueByKey!61 lt!8825 (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!487 lt!8158))))) (Some!66 (_2!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!487 lt!8158))))))))

(assert (=> d!4135 (= lt!8827 (lemmaContainsTupThenGetReturnValue!18 lt!8825 (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!487 lt!8158)))) (_2!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!487 lt!8158))))))))

(assert (=> d!4135 (= lt!8825 (insertStrictlySorted!18 (toList!299 call!1984) (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!487 lt!8158)))) (_2!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!487 lt!8158))))))))

(assert (=> d!4135 (= (+!45 call!1984 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!487 lt!8158)))) lt!8826)))

(declare-fun b!23877 () Bool)

(declare-fun res!14629 () Bool)

(assert (=> b!23877 (=> (not res!14629) (not e!15478))))

(assert (=> b!23877 (= res!14629 (= (getValueByKey!61 (toList!299 lt!8826) (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!487 lt!8158))))) (Some!66 (_2!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!487 lt!8158)))))))))

(declare-fun b!23878 () Bool)

(assert (=> b!23878 (= e!15478 (contains!232 (toList!299 lt!8826) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!487 lt!8158)))))))

(assert (= (and d!4135 res!14628) b!23877))

(assert (= (and b!23877 res!14629) b!23878))

(declare-fun m!17749 () Bool)

(assert (=> d!4135 m!17749))

(declare-fun m!17751 () Bool)

(assert (=> d!4135 m!17751))

(declare-fun m!17753 () Bool)

(assert (=> d!4135 m!17753))

(declare-fun m!17755 () Bool)

(assert (=> d!4135 m!17755))

(declare-fun m!17757 () Bool)

(assert (=> b!23877 m!17757))

(declare-fun m!17759 () Bool)

(assert (=> b!23878 m!17759))

(assert (=> b!23504 d!4135))

(declare-fun b!23903 () Bool)

(declare-fun e!15495 () Bool)

(declare-fun e!15498 () Bool)

(assert (=> b!23903 (= e!15495 e!15498)))

(declare-fun c!3146 () Bool)

(assert (=> b!23903 (= c!3146 (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))))))

(declare-fun b!23904 () Bool)

(declare-fun e!15497 () Bool)

(assert (=> b!23904 (= e!15495 e!15497)))

(assert (=> b!23904 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))))))

(declare-fun res!14639 () Bool)

(declare-fun lt!8843 () ListLongMap!567)

(assert (=> b!23904 (= res!14639 (contains!230 lt!8843 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000)))))

(assert (=> b!23904 (=> (not res!14639) (not e!15497))))

(declare-fun bm!2054 () Bool)

(declare-fun call!2057 () ListLongMap!567)

(assert (=> bm!2054 (= call!2057 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8161) (ite (or c!2984 c!2982) (_values!1729 lt!8161) (array!1284 (store (arr!607 (_values!1729 lt!8161)) (index!2338 lt!8254) (ValueCellFull!312 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (size!703 (_values!1729 lt!8161)))) (mask!4730 lt!8161) (ite c!2984 (ite c!2983 lt!8244 lt!8241) (extraKeys!1641 lt!8161)) (ite (and c!2984 c!2983) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (zeroValue!1666 lt!8161)) (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!1743 lt!8161)))))

(declare-fun b!23905 () Bool)

(declare-fun isEmpty!172 (ListLongMap!567) Bool)

(assert (=> b!23905 (= e!15498 (isEmpty!172 lt!8843))))

(declare-fun b!23906 () Bool)

(declare-fun e!15496 () Bool)

(assert (=> b!23906 (= e!15496 (validKeyInArray!0 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000)))))

(assert (=> b!23906 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!23907 () Bool)

(declare-fun res!14640 () Bool)

(declare-fun e!15499 () Bool)

(assert (=> b!23907 (=> (not res!14640) (not e!15499))))

(assert (=> b!23907 (= res!14640 (not (contains!230 lt!8843 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!23908 () Bool)

(declare-fun e!15493 () ListLongMap!567)

(assert (=> b!23908 (= e!15493 (ListLongMap!568 Nil!565))))

(declare-fun d!4137 () Bool)

(assert (=> d!4137 e!15499))

(declare-fun res!14638 () Bool)

(assert (=> d!4137 (=> (not res!14638) (not e!15499))))

(assert (=> d!4137 (= res!14638 (not (contains!230 lt!8843 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!4137 (= lt!8843 e!15493)))

(declare-fun c!3145 () Bool)

(assert (=> d!4137 (= c!3145 (bvsge #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))))))

(assert (=> d!4137 (validMask!0 (mask!4730 lt!8161))))

(assert (=> d!4137 (= (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8161) (ite (or c!2984 c!2982) (_values!1729 lt!8161) (array!1284 (store (arr!607 (_values!1729 lt!8161)) (index!2338 lt!8254) (ValueCellFull!312 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (size!703 (_values!1729 lt!8161)))) (mask!4730 lt!8161) (ite c!2984 (ite c!2983 lt!8244 lt!8241) (extraKeys!1641 lt!8161)) (ite (and c!2984 c!2983) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (zeroValue!1666 lt!8161)) (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161)) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)) lt!8843)))

(declare-fun b!23909 () Bool)

(assert (=> b!23909 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))))))

(assert (=> b!23909 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!703 (ite (or c!2984 c!2982) (_values!1729 lt!8161) (array!1284 (store (arr!607 (_values!1729 lt!8161)) (index!2338 lt!8254) (ValueCellFull!312 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (size!703 (_values!1729 lt!8161)))))))))

(assert (=> b!23909 (= e!15497 (= (apply!29 lt!8843 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000)) (get!390 (select (arr!607 (ite (or c!2984 c!2982) (_values!1729 lt!8161) (array!1284 (store (arr!607 (_values!1729 lt!8161)) (index!2338 lt!8254) (ValueCellFull!312 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (size!703 (_values!1729 lt!8161))))) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 lt!8161) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!23910 () Bool)

(declare-fun e!15494 () ListLongMap!567)

(assert (=> b!23910 (= e!15494 call!2057)))

(declare-fun b!23911 () Bool)

(assert (=> b!23911 (= e!15499 e!15495)))

(declare-fun c!3147 () Bool)

(assert (=> b!23911 (= c!3147 e!15496)))

(declare-fun res!14641 () Bool)

(assert (=> b!23911 (=> (not res!14641) (not e!15496))))

(assert (=> b!23911 (= res!14641 (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))))))

(declare-fun b!23912 () Bool)

(declare-fun lt!8845 () Unit!512)

(declare-fun lt!8842 () Unit!512)

(assert (=> b!23912 (= lt!8845 lt!8842)))

(declare-fun lt!8847 () ListLongMap!567)

(declare-fun lt!8846 () (_ BitVec 64))

(declare-fun lt!8848 () (_ BitVec 64))

(declare-fun lt!8844 () V!1189)

(assert (=> b!23912 (not (contains!230 (+!45 lt!8847 (tuple2!961 lt!8846 lt!8844)) lt!8848))))

(declare-fun addStillNotContains!2 (ListLongMap!567 (_ BitVec 64) V!1189 (_ BitVec 64)) Unit!512)

(assert (=> b!23912 (= lt!8842 (addStillNotContains!2 lt!8847 lt!8846 lt!8844 lt!8848))))

(assert (=> b!23912 (= lt!8848 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!23912 (= lt!8844 (get!390 (select (arr!607 (ite (or c!2984 c!2982) (_values!1729 lt!8161) (array!1284 (store (arr!607 (_values!1729 lt!8161)) (index!2338 lt!8254) (ValueCellFull!312 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (size!703 (_values!1729 lt!8161))))) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 lt!8161) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!23912 (= lt!8846 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000))))

(assert (=> b!23912 (= lt!8847 call!2057)))

(assert (=> b!23912 (= e!15494 (+!45 call!2057 (tuple2!961 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000) (get!390 (select (arr!607 (ite (or c!2984 c!2982) (_values!1729 lt!8161) (array!1284 (store (arr!607 (_values!1729 lt!8161)) (index!2338 lt!8254) (ValueCellFull!312 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (size!703 (_values!1729 lt!8161))))) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 lt!8161) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!23913 () Bool)

(assert (=> b!23913 (= e!15493 e!15494)))

(declare-fun c!3144 () Bool)

(assert (=> b!23913 (= c!3144 (validKeyInArray!0 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000)))))

(declare-fun b!23914 () Bool)

(assert (=> b!23914 (= e!15498 (= lt!8843 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8161) (ite (or c!2984 c!2982) (_values!1729 lt!8161) (array!1284 (store (arr!607 (_values!1729 lt!8161)) (index!2338 lt!8254) (ValueCellFull!312 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (size!703 (_values!1729 lt!8161)))) (mask!4730 lt!8161) (ite c!2984 (ite c!2983 lt!8244 lt!8241) (extraKeys!1641 lt!8161)) (ite (and c!2984 c!2983) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (zeroValue!1666 lt!8161)) (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!1743 lt!8161))))))

(assert (= (and d!4137 c!3145) b!23908))

(assert (= (and d!4137 (not c!3145)) b!23913))

(assert (= (and b!23913 c!3144) b!23912))

(assert (= (and b!23913 (not c!3144)) b!23910))

(assert (= (or b!23912 b!23910) bm!2054))

(assert (= (and d!4137 res!14638) b!23907))

(assert (= (and b!23907 res!14640) b!23911))

(assert (= (and b!23911 res!14641) b!23906))

(assert (= (and b!23911 c!3147) b!23904))

(assert (= (and b!23911 (not c!3147)) b!23903))

(assert (= (and b!23904 res!14639) b!23909))

(assert (= (and b!23903 c!3146) b!23914))

(assert (= (and b!23903 (not c!3146)) b!23905))

(declare-fun b_lambda!1597 () Bool)

(assert (=> (not b_lambda!1597) (not b!23909)))

(assert (=> b!23909 t!3244))

(declare-fun b_and!1503 () Bool)

(assert (= b_and!1501 (and (=> t!3244 result!1101) b_and!1503)))

(declare-fun b_lambda!1599 () Bool)

(assert (=> (not b_lambda!1599) (not b!23912)))

(assert (=> b!23912 t!3244))

(declare-fun b_and!1505 () Bool)

(assert (= b_and!1503 (and (=> t!3244 result!1101) b_and!1505)))

(assert (=> b!23904 m!16936))

(assert (=> b!23904 m!16936))

(declare-fun m!17761 () Bool)

(assert (=> b!23904 m!17761))

(assert (=> b!23912 m!17238))

(declare-fun m!17763 () Bool)

(assert (=> b!23912 m!17763))

(assert (=> b!23912 m!17236))

(declare-fun m!17765 () Bool)

(assert (=> b!23912 m!17765))

(assert (=> b!23912 m!17765))

(declare-fun m!17767 () Bool)

(assert (=> b!23912 m!17767))

(assert (=> b!23912 m!17236))

(assert (=> b!23912 m!17238))

(assert (=> b!23912 m!17240))

(assert (=> b!23912 m!16936))

(declare-fun m!17769 () Bool)

(assert (=> b!23912 m!17769))

(assert (=> b!23909 m!17238))

(assert (=> b!23909 m!17236))

(assert (=> b!23909 m!17238))

(assert (=> b!23909 m!17240))

(assert (=> b!23909 m!17236))

(assert (=> b!23909 m!16936))

(assert (=> b!23909 m!16936))

(declare-fun m!17771 () Bool)

(assert (=> b!23909 m!17771))

(declare-fun m!17773 () Bool)

(assert (=> d!4137 m!17773))

(assert (=> d!4137 m!17182))

(assert (=> b!23913 m!16936))

(assert (=> b!23913 m!16936))

(assert (=> b!23913 m!17202))

(declare-fun m!17775 () Bool)

(assert (=> b!23905 m!17775))

(declare-fun m!17777 () Bool)

(assert (=> b!23907 m!17777))

(assert (=> b!23906 m!16936))

(assert (=> b!23906 m!16936))

(assert (=> b!23906 m!17202))

(declare-fun m!17779 () Bool)

(assert (=> bm!2054 m!17779))

(assert (=> b!23914 m!17779))

(assert (=> bm!2001 d!4137))

(declare-fun d!4139 () Bool)

(declare-fun get!391 (Option!67) V!1189)

(assert (=> d!4139 (= (apply!29 lt!8506 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000)) (get!391 (getValueByKey!61 (toList!299 lt!8506) (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000))))))

(declare-fun bs!963 () Bool)

(assert (= bs!963 d!4139))

(assert (=> bs!963 m!16986))

(assert (=> bs!963 m!17683))

(assert (=> bs!963 m!17683))

(declare-fun m!17781 () Bool)

(assert (=> bs!963 m!17781))

(assert (=> b!23604 d!4139))

(declare-fun d!4141 () Bool)

(declare-fun c!3150 () Bool)

(assert (=> d!4141 (= c!3150 ((_ is ValueCellFull!312) (select (arr!607 (ite (or c!2998 c!2996) (_values!1729 (_2!487 lt!8158)) (array!1284 (store (arr!607 (_values!1729 (_2!487 lt!8158))) (index!2338 lt!8281) (ValueCellFull!312 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!703 (_values!1729 (_2!487 lt!8158)))))) #b00000000000000000000000000000000)))))

(declare-fun e!15502 () V!1189)

(assert (=> d!4141 (= (get!390 (select (arr!607 (ite (or c!2998 c!2996) (_values!1729 (_2!487 lt!8158)) (array!1284 (store (arr!607 (_values!1729 (_2!487 lt!8158))) (index!2338 lt!8281) (ValueCellFull!312 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!703 (_values!1729 (_2!487 lt!8158)))))) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (_2!487 lt!8158)) #b0000000000000000000000000000000000000000000000000000000000000000)) e!15502)))

(declare-fun b!23919 () Bool)

(declare-fun get!392 (ValueCell!312 V!1189) V!1189)

(assert (=> b!23919 (= e!15502 (get!392 (select (arr!607 (ite (or c!2998 c!2996) (_values!1729 (_2!487 lt!8158)) (array!1284 (store (arr!607 (_values!1729 (_2!487 lt!8158))) (index!2338 lt!8281) (ValueCellFull!312 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!703 (_values!1729 (_2!487 lt!8158)))))) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (_2!487 lt!8158)) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!23920 () Bool)

(declare-fun get!393 (ValueCell!312 V!1189) V!1189)

(assert (=> b!23920 (= e!15502 (get!393 (select (arr!607 (ite (or c!2998 c!2996) (_values!1729 (_2!487 lt!8158)) (array!1284 (store (arr!607 (_values!1729 (_2!487 lt!8158))) (index!2338 lt!8281) (ValueCellFull!312 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!703 (_values!1729 (_2!487 lt!8158)))))) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (_2!487 lt!8158)) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!4141 c!3150) b!23919))

(assert (= (and d!4141 (not c!3150)) b!23920))

(assert (=> b!23919 m!17124))

(assert (=> b!23919 m!17026))

(declare-fun m!17783 () Bool)

(assert (=> b!23919 m!17783))

(assert (=> b!23920 m!17124))

(assert (=> b!23920 m!17026))

(declare-fun m!17785 () Bool)

(assert (=> b!23920 m!17785))

(assert (=> b!23604 d!4141))

(declare-fun d!4143 () Bool)

(assert (=> d!4143 (= (+!45 (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) (array!1284 (store (arr!607 (_values!1729 (_2!487 lt!8158))) (index!2338 lt!8281) (ValueCellFull!312 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!703 (_values!1729 (_2!487 lt!8158)))) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))

(assert (=> d!4143 true))

(declare-fun _$5!55 () Unit!512)

(assert (=> d!4143 (= (choose!207 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) (index!2338 lt!8281) #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (defaultEntry!1743 (_2!487 lt!8158))) _$5!55)))

(declare-fun bs!964 () Bool)

(assert (= bs!964 d!4143))

(assert (=> bs!964 m!16852))

(assert (=> bs!964 m!16852))

(assert (=> bs!964 m!17351))

(assert (=> bs!964 m!16854))

(assert (=> bs!964 m!17549))

(assert (=> d!4091 d!4143))

(declare-fun d!4145 () Bool)

(assert (=> d!4145 (= (validMask!0 (mask!4730 (_2!487 lt!8158))) (and (or (= (mask!4730 (_2!487 lt!8158)) #b00000000000000000000000000000111) (= (mask!4730 (_2!487 lt!8158)) #b00000000000000000000000000001111) (= (mask!4730 (_2!487 lt!8158)) #b00000000000000000000000000011111) (= (mask!4730 (_2!487 lt!8158)) #b00000000000000000000000000111111) (= (mask!4730 (_2!487 lt!8158)) #b00000000000000000000000001111111) (= (mask!4730 (_2!487 lt!8158)) #b00000000000000000000000011111111) (= (mask!4730 (_2!487 lt!8158)) #b00000000000000000000000111111111) (= (mask!4730 (_2!487 lt!8158)) #b00000000000000000000001111111111) (= (mask!4730 (_2!487 lt!8158)) #b00000000000000000000011111111111) (= (mask!4730 (_2!487 lt!8158)) #b00000000000000000000111111111111) (= (mask!4730 (_2!487 lt!8158)) #b00000000000000000001111111111111) (= (mask!4730 (_2!487 lt!8158)) #b00000000000000000011111111111111) (= (mask!4730 (_2!487 lt!8158)) #b00000000000000000111111111111111) (= (mask!4730 (_2!487 lt!8158)) #b00000000000000001111111111111111) (= (mask!4730 (_2!487 lt!8158)) #b00000000000000011111111111111111) (= (mask!4730 (_2!487 lt!8158)) #b00000000000000111111111111111111) (= (mask!4730 (_2!487 lt!8158)) #b00000000000001111111111111111111) (= (mask!4730 (_2!487 lt!8158)) #b00000000000011111111111111111111) (= (mask!4730 (_2!487 lt!8158)) #b00000000000111111111111111111111) (= (mask!4730 (_2!487 lt!8158)) #b00000000001111111111111111111111) (= (mask!4730 (_2!487 lt!8158)) #b00000000011111111111111111111111) (= (mask!4730 (_2!487 lt!8158)) #b00000000111111111111111111111111) (= (mask!4730 (_2!487 lt!8158)) #b00000001111111111111111111111111) (= (mask!4730 (_2!487 lt!8158)) #b00000011111111111111111111111111) (= (mask!4730 (_2!487 lt!8158)) #b00000111111111111111111111111111) (= (mask!4730 (_2!487 lt!8158)) #b00001111111111111111111111111111) (= (mask!4730 (_2!487 lt!8158)) #b00011111111111111111111111111111) (= (mask!4730 (_2!487 lt!8158)) #b00111111111111111111111111111111)) (bvsle (mask!4730 (_2!487 lt!8158)) #b00111111111111111111111111111111)))))

(assert (=> d!4091 d!4145))

(declare-fun b!23921 () Bool)

(declare-fun e!15504 () (_ BitVec 32))

(declare-fun e!15503 () (_ BitVec 32))

(assert (=> b!23921 (= e!15504 e!15503)))

(declare-fun c!3151 () Bool)

(assert (=> b!23921 (= c!3151 (validKeyInArray!0 (select (arr!608 (_keys!3164 lt!8345)) #b00000000000000000000000000000000)))))

(declare-fun b!23922 () Bool)

(declare-fun call!2058 () (_ BitVec 32))

(assert (=> b!23922 (= e!15503 call!2058)))

(declare-fun bm!2055 () Bool)

(assert (=> bm!2055 (= call!2058 (arrayCountValidKeys!0 (_keys!3164 lt!8345) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!704 (_keys!3164 lt!8345))))))

(declare-fun b!23924 () Bool)

(assert (=> b!23924 (= e!15503 (bvadd #b00000000000000000000000000000001 call!2058))))

(declare-fun b!23923 () Bool)

(assert (=> b!23923 (= e!15504 #b00000000000000000000000000000000)))

(declare-fun d!4147 () Bool)

(declare-fun lt!8849 () (_ BitVec 32))

(assert (=> d!4147 (and (bvsge lt!8849 #b00000000000000000000000000000000) (bvsle lt!8849 (bvsub (size!704 (_keys!3164 lt!8345)) #b00000000000000000000000000000000)))))

(assert (=> d!4147 (= lt!8849 e!15504)))

(declare-fun c!3152 () Bool)

(assert (=> d!4147 (= c!3152 (bvsge #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8345))))))

(assert (=> d!4147 (and (bvsle #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8345))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!704 (_keys!3164 lt!8345)) (size!704 (_keys!3164 lt!8345))))))

(assert (=> d!4147 (= (arrayCountValidKeys!0 (_keys!3164 lt!8345) #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8345))) lt!8849)))

(assert (= (and d!4147 c!3152) b!23923))

(assert (= (and d!4147 (not c!3152)) b!23921))

(assert (= (and b!23921 c!3151) b!23924))

(assert (= (and b!23921 (not c!3151)) b!23922))

(assert (= (or b!23924 b!23922) bm!2055))

(declare-fun m!17787 () Bool)

(assert (=> b!23921 m!17787))

(assert (=> b!23921 m!17787))

(declare-fun m!17789 () Bool)

(assert (=> b!23921 m!17789))

(declare-fun m!17791 () Bool)

(assert (=> bm!2055 m!17791))

(assert (=> b!23437 d!4147))

(declare-fun d!4149 () Bool)

(declare-fun e!15505 () Bool)

(assert (=> d!4149 e!15505))

(declare-fun res!14642 () Bool)

(assert (=> d!4149 (=> res!14642 e!15505)))

(declare-fun lt!8850 () Bool)

(assert (=> d!4149 (= res!14642 (not lt!8850))))

(declare-fun lt!8851 () Bool)

(assert (=> d!4149 (= lt!8850 lt!8851)))

(declare-fun lt!8852 () Unit!512)

(declare-fun e!15506 () Unit!512)

(assert (=> d!4149 (= lt!8852 e!15506)))

(declare-fun c!3153 () Bool)

(assert (=> d!4149 (= c!3153 lt!8851)))

(assert (=> d!4149 (= lt!8851 (containsKey!25 (toList!299 lt!8568) (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000)))))

(assert (=> d!4149 (= (contains!230 lt!8568 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000)) lt!8850)))

(declare-fun b!23925 () Bool)

(declare-fun lt!8853 () Unit!512)

(assert (=> b!23925 (= e!15506 lt!8853)))

(assert (=> b!23925 (= lt!8853 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!299 lt!8568) (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000)))))

(assert (=> b!23925 (isDefined!23 (getValueByKey!61 (toList!299 lt!8568) (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000)))))

(declare-fun b!23926 () Bool)

(declare-fun Unit!545 () Unit!512)

(assert (=> b!23926 (= e!15506 Unit!545)))

(declare-fun b!23927 () Bool)

(assert (=> b!23927 (= e!15505 (isDefined!23 (getValueByKey!61 (toList!299 lt!8568) (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000))))))

(assert (= (and d!4149 c!3153) b!23925))

(assert (= (and d!4149 (not c!3153)) b!23926))

(assert (= (and d!4149 (not res!14642)) b!23927))

(assert (=> d!4149 m!16936))

(declare-fun m!17793 () Bool)

(assert (=> d!4149 m!17793))

(assert (=> b!23925 m!16936))

(declare-fun m!17795 () Bool)

(assert (=> b!23925 m!17795))

(assert (=> b!23925 m!16936))

(declare-fun m!17797 () Bool)

(assert (=> b!23925 m!17797))

(assert (=> b!23925 m!17797))

(declare-fun m!17799 () Bool)

(assert (=> b!23925 m!17799))

(assert (=> b!23927 m!16936))

(assert (=> b!23927 m!17797))

(assert (=> b!23927 m!17797))

(assert (=> b!23927 m!17799))

(assert (=> b!23646 d!4149))

(declare-fun b!23928 () Bool)

(declare-fun e!15509 () Bool)

(declare-fun e!15512 () Bool)

(assert (=> b!23928 (= e!15509 e!15512)))

(declare-fun c!3156 () Bool)

(assert (=> b!23928 (= c!3156 (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))))))

(declare-fun b!23929 () Bool)

(declare-fun e!15511 () Bool)

(assert (=> b!23929 (= e!15509 e!15511)))

(assert (=> b!23929 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))))))

(declare-fun res!14644 () Bool)

(declare-fun lt!8855 () ListLongMap!567)

(assert (=> b!23929 (= res!14644 (contains!230 lt!8855 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000)))))

(assert (=> b!23929 (=> (not res!14644) (not e!15511))))

(declare-fun bm!2056 () Bool)

(declare-fun call!2059 () ListLongMap!567)

(assert (=> bm!2056 (= call!2059 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!1743 lt!8161)))))

(declare-fun b!23930 () Bool)

(assert (=> b!23930 (= e!15512 (isEmpty!172 lt!8855))))

(declare-fun b!23931 () Bool)

(declare-fun e!15510 () Bool)

(assert (=> b!23931 (= e!15510 (validKeyInArray!0 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000)))))

(assert (=> b!23931 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!23932 () Bool)

(declare-fun res!14645 () Bool)

(declare-fun e!15513 () Bool)

(assert (=> b!23932 (=> (not res!14645) (not e!15513))))

(assert (=> b!23932 (= res!14645 (not (contains!230 lt!8855 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!23933 () Bool)

(declare-fun e!15507 () ListLongMap!567)

(assert (=> b!23933 (= e!15507 (ListLongMap!568 Nil!565))))

(declare-fun d!4151 () Bool)

(assert (=> d!4151 e!15513))

(declare-fun res!14643 () Bool)

(assert (=> d!4151 (=> (not res!14643) (not e!15513))))

(assert (=> d!4151 (= res!14643 (not (contains!230 lt!8855 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!4151 (= lt!8855 e!15507)))

(declare-fun c!3155 () Bool)

(assert (=> d!4151 (= c!3155 (bvsge #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))))))

(assert (=> d!4151 (validMask!0 (mask!4730 lt!8161))))

(assert (=> d!4151 (= (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)) lt!8855)))

(declare-fun b!23934 () Bool)

(assert (=> b!23934 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))))))

(assert (=> b!23934 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!703 (_values!1729 lt!8161))))))

(assert (=> b!23934 (= e!15511 (= (apply!29 lt!8855 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000)) (get!390 (select (arr!607 (_values!1729 lt!8161)) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 lt!8161) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!23935 () Bool)

(declare-fun e!15508 () ListLongMap!567)

(assert (=> b!23935 (= e!15508 call!2059)))

(declare-fun b!23936 () Bool)

(assert (=> b!23936 (= e!15513 e!15509)))

(declare-fun c!3157 () Bool)

(assert (=> b!23936 (= c!3157 e!15510)))

(declare-fun res!14646 () Bool)

(assert (=> b!23936 (=> (not res!14646) (not e!15510))))

(assert (=> b!23936 (= res!14646 (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))))))

(declare-fun b!23937 () Bool)

(declare-fun lt!8857 () Unit!512)

(declare-fun lt!8854 () Unit!512)

(assert (=> b!23937 (= lt!8857 lt!8854)))

(declare-fun lt!8856 () V!1189)

(declare-fun lt!8858 () (_ BitVec 64))

(declare-fun lt!8859 () ListLongMap!567)

(declare-fun lt!8860 () (_ BitVec 64))

(assert (=> b!23937 (not (contains!230 (+!45 lt!8859 (tuple2!961 lt!8858 lt!8856)) lt!8860))))

(assert (=> b!23937 (= lt!8854 (addStillNotContains!2 lt!8859 lt!8858 lt!8856 lt!8860))))

(assert (=> b!23937 (= lt!8860 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!23937 (= lt!8856 (get!390 (select (arr!607 (_values!1729 lt!8161)) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 lt!8161) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!23937 (= lt!8858 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000))))

(assert (=> b!23937 (= lt!8859 call!2059)))

(assert (=> b!23937 (= e!15508 (+!45 call!2059 (tuple2!961 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000) (get!390 (select (arr!607 (_values!1729 lt!8161)) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 lt!8161) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!23938 () Bool)

(assert (=> b!23938 (= e!15507 e!15508)))

(declare-fun c!3154 () Bool)

(assert (=> b!23938 (= c!3154 (validKeyInArray!0 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000)))))

(declare-fun b!23939 () Bool)

(assert (=> b!23939 (= e!15512 (= lt!8855 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!1743 lt!8161))))))

(assert (= (and d!4151 c!3155) b!23933))

(assert (= (and d!4151 (not c!3155)) b!23938))

(assert (= (and b!23938 c!3154) b!23937))

(assert (= (and b!23938 (not c!3154)) b!23935))

(assert (= (or b!23937 b!23935) bm!2056))

(assert (= (and d!4151 res!14643) b!23932))

(assert (= (and b!23932 res!14645) b!23936))

(assert (= (and b!23936 res!14646) b!23931))

(assert (= (and b!23936 c!3157) b!23929))

(assert (= (and b!23936 (not c!3157)) b!23928))

(assert (= (and b!23929 res!14644) b!23934))

(assert (= (and b!23928 c!3156) b!23939))

(assert (= (and b!23928 (not c!3156)) b!23930))

(declare-fun b_lambda!1601 () Bool)

(assert (=> (not b_lambda!1601) (not b!23934)))

(assert (=> b!23934 t!3244))

(declare-fun b_and!1507 () Bool)

(assert (= b_and!1505 (and (=> t!3244 result!1101) b_and!1507)))

(declare-fun b_lambda!1603 () Bool)

(assert (=> (not b_lambda!1603) (not b!23937)))

(assert (=> b!23937 t!3244))

(declare-fun b_and!1509 () Bool)

(assert (= b_and!1507 (and (=> t!3244 result!1101) b_and!1509)))

(assert (=> b!23929 m!16936))

(assert (=> b!23929 m!16936))

(declare-fun m!17801 () Bool)

(assert (=> b!23929 m!17801))

(assert (=> b!23937 m!17238))

(declare-fun m!17803 () Bool)

(assert (=> b!23937 m!17803))

(assert (=> b!23937 m!17503))

(declare-fun m!17805 () Bool)

(assert (=> b!23937 m!17805))

(assert (=> b!23937 m!17805))

(declare-fun m!17807 () Bool)

(assert (=> b!23937 m!17807))

(assert (=> b!23937 m!17503))

(assert (=> b!23937 m!17238))

(assert (=> b!23937 m!17505))

(assert (=> b!23937 m!16936))

(declare-fun m!17809 () Bool)

(assert (=> b!23937 m!17809))

(assert (=> b!23934 m!17238))

(assert (=> b!23934 m!17503))

(assert (=> b!23934 m!17238))

(assert (=> b!23934 m!17505))

(assert (=> b!23934 m!17503))

(assert (=> b!23934 m!16936))

(assert (=> b!23934 m!16936))

(declare-fun m!17811 () Bool)

(assert (=> b!23934 m!17811))

(declare-fun m!17813 () Bool)

(assert (=> d!4151 m!17813))

(assert (=> d!4151 m!17182))

(assert (=> b!23938 m!16936))

(assert (=> b!23938 m!16936))

(assert (=> b!23938 m!17202))

(declare-fun m!17815 () Bool)

(assert (=> b!23930 m!17815))

(declare-fun m!17817 () Bool)

(assert (=> b!23932 m!17817))

(assert (=> b!23931 m!16936))

(assert (=> b!23931 m!16936))

(assert (=> b!23931 m!17202))

(declare-fun m!17819 () Bool)

(assert (=> bm!2056 m!17819))

(assert (=> b!23939 m!17819))

(assert (=> b!23769 d!4151))

(declare-fun d!4153 () Bool)

(declare-fun e!15514 () Bool)

(assert (=> d!4153 e!15514))

(declare-fun res!14647 () Bool)

(assert (=> d!4153 (=> res!14647 e!15514)))

(declare-fun lt!8861 () Bool)

(assert (=> d!4153 (= res!14647 (not lt!8861))))

(declare-fun lt!8862 () Bool)

(assert (=> d!4153 (= lt!8861 lt!8862)))

(declare-fun lt!8863 () Unit!512)

(declare-fun e!15515 () Unit!512)

(assert (=> d!4153 (= lt!8863 e!15515)))

(declare-fun c!3158 () Bool)

(assert (=> d!4153 (= c!3158 lt!8862)))

(assert (=> d!4153 (= lt!8862 (containsKey!25 (toList!299 (+!45 lt!8722 (tuple2!961 lt!8717 (zeroValue!1666 lt!8161)))) lt!8726))))

(assert (=> d!4153 (= (contains!230 (+!45 lt!8722 (tuple2!961 lt!8717 (zeroValue!1666 lt!8161))) lt!8726) lt!8861)))

(declare-fun b!23940 () Bool)

(declare-fun lt!8864 () Unit!512)

(assert (=> b!23940 (= e!15515 lt!8864)))

(assert (=> b!23940 (= lt!8864 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!299 (+!45 lt!8722 (tuple2!961 lt!8717 (zeroValue!1666 lt!8161)))) lt!8726))))

(assert (=> b!23940 (isDefined!23 (getValueByKey!61 (toList!299 (+!45 lt!8722 (tuple2!961 lt!8717 (zeroValue!1666 lt!8161)))) lt!8726))))

(declare-fun b!23941 () Bool)

(declare-fun Unit!546 () Unit!512)

(assert (=> b!23941 (= e!15515 Unit!546)))

(declare-fun b!23942 () Bool)

(assert (=> b!23942 (= e!15514 (isDefined!23 (getValueByKey!61 (toList!299 (+!45 lt!8722 (tuple2!961 lt!8717 (zeroValue!1666 lt!8161)))) lt!8726)))))

(assert (= (and d!4153 c!3158) b!23940))

(assert (= (and d!4153 (not c!3158)) b!23941))

(assert (= (and d!4153 (not res!14647)) b!23942))

(declare-fun m!17821 () Bool)

(assert (=> d!4153 m!17821))

(declare-fun m!17823 () Bool)

(assert (=> b!23940 m!17823))

(declare-fun m!17825 () Bool)

(assert (=> b!23940 m!17825))

(assert (=> b!23940 m!17825))

(declare-fun m!17827 () Bool)

(assert (=> b!23940 m!17827))

(assert (=> b!23942 m!17825))

(assert (=> b!23942 m!17825))

(assert (=> b!23942 m!17827))

(assert (=> b!23769 d!4153))

(declare-fun d!4155 () Bool)

(assert (=> d!4155 (= (apply!29 lt!8720 lt!8709) (get!391 (getValueByKey!61 (toList!299 lt!8720) lt!8709)))))

(declare-fun bs!965 () Bool)

(assert (= bs!965 d!4155))

(declare-fun m!17829 () Bool)

(assert (=> bs!965 m!17829))

(assert (=> bs!965 m!17829))

(declare-fun m!17831 () Bool)

(assert (=> bs!965 m!17831))

(assert (=> b!23769 d!4155))

(declare-fun d!4157 () Bool)

(assert (=> d!4157 (= (apply!29 (+!45 lt!8721 (tuple2!961 lt!8716 (minValue!1666 lt!8161))) lt!8708) (get!391 (getValueByKey!61 (toList!299 (+!45 lt!8721 (tuple2!961 lt!8716 (minValue!1666 lt!8161)))) lt!8708)))))

(declare-fun bs!966 () Bool)

(assert (= bs!966 d!4157))

(declare-fun m!17833 () Bool)

(assert (=> bs!966 m!17833))

(assert (=> bs!966 m!17833))

(declare-fun m!17835 () Bool)

(assert (=> bs!966 m!17835))

(assert (=> b!23769 d!4157))

(declare-fun d!4159 () Bool)

(declare-fun e!15516 () Bool)

(assert (=> d!4159 e!15516))

(declare-fun res!14648 () Bool)

(assert (=> d!4159 (=> (not res!14648) (not e!15516))))

(declare-fun lt!8867 () ListLongMap!567)

(assert (=> d!4159 (= res!14648 (contains!230 lt!8867 (_1!489 (tuple2!961 lt!8716 (minValue!1666 lt!8161)))))))

(declare-fun lt!8866 () List!568)

(assert (=> d!4159 (= lt!8867 (ListLongMap!568 lt!8866))))

(declare-fun lt!8865 () Unit!512)

(declare-fun lt!8868 () Unit!512)

(assert (=> d!4159 (= lt!8865 lt!8868)))

(assert (=> d!4159 (= (getValueByKey!61 lt!8866 (_1!489 (tuple2!961 lt!8716 (minValue!1666 lt!8161)))) (Some!66 (_2!489 (tuple2!961 lt!8716 (minValue!1666 lt!8161)))))))

(assert (=> d!4159 (= lt!8868 (lemmaContainsTupThenGetReturnValue!18 lt!8866 (_1!489 (tuple2!961 lt!8716 (minValue!1666 lt!8161))) (_2!489 (tuple2!961 lt!8716 (minValue!1666 lt!8161)))))))

(assert (=> d!4159 (= lt!8866 (insertStrictlySorted!18 (toList!299 lt!8721) (_1!489 (tuple2!961 lt!8716 (minValue!1666 lt!8161))) (_2!489 (tuple2!961 lt!8716 (minValue!1666 lt!8161)))))))

(assert (=> d!4159 (= (+!45 lt!8721 (tuple2!961 lt!8716 (minValue!1666 lt!8161))) lt!8867)))

(declare-fun b!23943 () Bool)

(declare-fun res!14649 () Bool)

(assert (=> b!23943 (=> (not res!14649) (not e!15516))))

(assert (=> b!23943 (= res!14649 (= (getValueByKey!61 (toList!299 lt!8867) (_1!489 (tuple2!961 lt!8716 (minValue!1666 lt!8161)))) (Some!66 (_2!489 (tuple2!961 lt!8716 (minValue!1666 lt!8161))))))))

(declare-fun b!23944 () Bool)

(assert (=> b!23944 (= e!15516 (contains!232 (toList!299 lt!8867) (tuple2!961 lt!8716 (minValue!1666 lt!8161))))))

(assert (= (and d!4159 res!14648) b!23943))

(assert (= (and b!23943 res!14649) b!23944))

(declare-fun m!17837 () Bool)

(assert (=> d!4159 m!17837))

(declare-fun m!17839 () Bool)

(assert (=> d!4159 m!17839))

(declare-fun m!17841 () Bool)

(assert (=> d!4159 m!17841))

(declare-fun m!17843 () Bool)

(assert (=> d!4159 m!17843))

(declare-fun m!17845 () Bool)

(assert (=> b!23943 m!17845))

(declare-fun m!17847 () Bool)

(assert (=> b!23944 m!17847))

(assert (=> b!23769 d!4159))

(declare-fun d!4161 () Bool)

(assert (=> d!4161 (= (apply!29 (+!45 lt!8720 (tuple2!961 lt!8723 (zeroValue!1666 lt!8161))) lt!8709) (apply!29 lt!8720 lt!8709))))

(declare-fun lt!8871 () Unit!512)

(declare-fun choose!210 (ListLongMap!567 (_ BitVec 64) V!1189 (_ BitVec 64)) Unit!512)

(assert (=> d!4161 (= lt!8871 (choose!210 lt!8720 lt!8723 (zeroValue!1666 lt!8161) lt!8709))))

(declare-fun e!15519 () Bool)

(assert (=> d!4161 e!15519))

(declare-fun res!14652 () Bool)

(assert (=> d!4161 (=> (not res!14652) (not e!15519))))

(assert (=> d!4161 (= res!14652 (contains!230 lt!8720 lt!8709))))

(assert (=> d!4161 (= (addApplyDifferent!14 lt!8720 lt!8723 (zeroValue!1666 lt!8161) lt!8709) lt!8871)))

(declare-fun b!23948 () Bool)

(assert (=> b!23948 (= e!15519 (not (= lt!8709 lt!8723)))))

(assert (= (and d!4161 res!14652) b!23948))

(assert (=> d!4161 m!17475))

(assert (=> d!4161 m!17479))

(assert (=> d!4161 m!17475))

(declare-fun m!17849 () Bool)

(assert (=> d!4161 m!17849))

(declare-fun m!17851 () Bool)

(assert (=> d!4161 m!17851))

(assert (=> d!4161 m!17499))

(assert (=> b!23769 d!4161))

(declare-fun d!4163 () Bool)

(declare-fun e!15520 () Bool)

(assert (=> d!4163 e!15520))

(declare-fun res!14653 () Bool)

(assert (=> d!4163 (=> (not res!14653) (not e!15520))))

(declare-fun lt!8874 () ListLongMap!567)

(assert (=> d!4163 (= res!14653 (contains!230 lt!8874 (_1!489 (tuple2!961 lt!8723 (zeroValue!1666 lt!8161)))))))

(declare-fun lt!8873 () List!568)

(assert (=> d!4163 (= lt!8874 (ListLongMap!568 lt!8873))))

(declare-fun lt!8872 () Unit!512)

(declare-fun lt!8875 () Unit!512)

(assert (=> d!4163 (= lt!8872 lt!8875)))

(assert (=> d!4163 (= (getValueByKey!61 lt!8873 (_1!489 (tuple2!961 lt!8723 (zeroValue!1666 lt!8161)))) (Some!66 (_2!489 (tuple2!961 lt!8723 (zeroValue!1666 lt!8161)))))))

(assert (=> d!4163 (= lt!8875 (lemmaContainsTupThenGetReturnValue!18 lt!8873 (_1!489 (tuple2!961 lt!8723 (zeroValue!1666 lt!8161))) (_2!489 (tuple2!961 lt!8723 (zeroValue!1666 lt!8161)))))))

(assert (=> d!4163 (= lt!8873 (insertStrictlySorted!18 (toList!299 lt!8720) (_1!489 (tuple2!961 lt!8723 (zeroValue!1666 lt!8161))) (_2!489 (tuple2!961 lt!8723 (zeroValue!1666 lt!8161)))))))

(assert (=> d!4163 (= (+!45 lt!8720 (tuple2!961 lt!8723 (zeroValue!1666 lt!8161))) lt!8874)))

(declare-fun b!23949 () Bool)

(declare-fun res!14654 () Bool)

(assert (=> b!23949 (=> (not res!14654) (not e!15520))))

(assert (=> b!23949 (= res!14654 (= (getValueByKey!61 (toList!299 lt!8874) (_1!489 (tuple2!961 lt!8723 (zeroValue!1666 lt!8161)))) (Some!66 (_2!489 (tuple2!961 lt!8723 (zeroValue!1666 lt!8161))))))))

(declare-fun b!23950 () Bool)

(assert (=> b!23950 (= e!15520 (contains!232 (toList!299 lt!8874) (tuple2!961 lt!8723 (zeroValue!1666 lt!8161))))))

(assert (= (and d!4163 res!14653) b!23949))

(assert (= (and b!23949 res!14654) b!23950))

(declare-fun m!17853 () Bool)

(assert (=> d!4163 m!17853))

(declare-fun m!17855 () Bool)

(assert (=> d!4163 m!17855))

(declare-fun m!17857 () Bool)

(assert (=> d!4163 m!17857))

(declare-fun m!17859 () Bool)

(assert (=> d!4163 m!17859))

(declare-fun m!17861 () Bool)

(assert (=> b!23949 m!17861))

(declare-fun m!17863 () Bool)

(assert (=> b!23950 m!17863))

(assert (=> b!23769 d!4163))

(declare-fun d!4165 () Bool)

(assert (=> d!4165 (= (apply!29 lt!8721 lt!8708) (get!391 (getValueByKey!61 (toList!299 lt!8721) lt!8708)))))

(declare-fun bs!967 () Bool)

(assert (= bs!967 d!4165))

(declare-fun m!17865 () Bool)

(assert (=> bs!967 m!17865))

(assert (=> bs!967 m!17865))

(declare-fun m!17867 () Bool)

(assert (=> bs!967 m!17867))

(assert (=> b!23769 d!4165))

(declare-fun d!4167 () Bool)

(assert (=> d!4167 (contains!230 (+!45 lt!8722 (tuple2!961 lt!8717 (zeroValue!1666 lt!8161))) lt!8726)))

(declare-fun lt!8878 () Unit!512)

(declare-fun choose!211 (ListLongMap!567 (_ BitVec 64) V!1189 (_ BitVec 64)) Unit!512)

(assert (=> d!4167 (= lt!8878 (choose!211 lt!8722 lt!8717 (zeroValue!1666 lt!8161) lt!8726))))

(assert (=> d!4167 (contains!230 lt!8722 lt!8726)))

(assert (=> d!4167 (= (addStillContains!14 lt!8722 lt!8717 (zeroValue!1666 lt!8161) lt!8726) lt!8878)))

(declare-fun bs!968 () Bool)

(assert (= bs!968 d!4167))

(assert (=> bs!968 m!17483))

(assert (=> bs!968 m!17483))

(assert (=> bs!968 m!17485))

(declare-fun m!17869 () Bool)

(assert (=> bs!968 m!17869))

(declare-fun m!17871 () Bool)

(assert (=> bs!968 m!17871))

(assert (=> b!23769 d!4167))

(declare-fun d!4169 () Bool)

(assert (=> d!4169 (= (apply!29 lt!8713 lt!8727) (get!391 (getValueByKey!61 (toList!299 lt!8713) lt!8727)))))

(declare-fun bs!969 () Bool)

(assert (= bs!969 d!4169))

(declare-fun m!17873 () Bool)

(assert (=> bs!969 m!17873))

(assert (=> bs!969 m!17873))

(declare-fun m!17875 () Bool)

(assert (=> bs!969 m!17875))

(assert (=> b!23769 d!4169))

(declare-fun d!4171 () Bool)

(assert (=> d!4171 (= (apply!29 (+!45 lt!8713 (tuple2!961 lt!8728 (minValue!1666 lt!8161))) lt!8727) (get!391 (getValueByKey!61 (toList!299 (+!45 lt!8713 (tuple2!961 lt!8728 (minValue!1666 lt!8161)))) lt!8727)))))

(declare-fun bs!970 () Bool)

(assert (= bs!970 d!4171))

(declare-fun m!17877 () Bool)

(assert (=> bs!970 m!17877))

(assert (=> bs!970 m!17877))

(declare-fun m!17879 () Bool)

(assert (=> bs!970 m!17879))

(assert (=> b!23769 d!4171))

(declare-fun d!4173 () Bool)

(assert (=> d!4173 (= (apply!29 (+!45 lt!8721 (tuple2!961 lt!8716 (minValue!1666 lt!8161))) lt!8708) (apply!29 lt!8721 lt!8708))))

(declare-fun lt!8879 () Unit!512)

(assert (=> d!4173 (= lt!8879 (choose!210 lt!8721 lt!8716 (minValue!1666 lt!8161) lt!8708))))

(declare-fun e!15521 () Bool)

(assert (=> d!4173 e!15521))

(declare-fun res!14655 () Bool)

(assert (=> d!4173 (=> (not res!14655) (not e!15521))))

(assert (=> d!4173 (= res!14655 (contains!230 lt!8721 lt!8708))))

(assert (=> d!4173 (= (addApplyDifferent!14 lt!8721 lt!8716 (minValue!1666 lt!8161) lt!8708) lt!8879)))

(declare-fun b!23952 () Bool)

(assert (=> b!23952 (= e!15521 (not (= lt!8708 lt!8716)))))

(assert (= (and d!4173 res!14655) b!23952))

(assert (=> d!4173 m!17489))

(assert (=> d!4173 m!17491))

(assert (=> d!4173 m!17489))

(declare-fun m!17881 () Bool)

(assert (=> d!4173 m!17881))

(declare-fun m!17883 () Bool)

(assert (=> d!4173 m!17883))

(assert (=> d!4173 m!17473))

(assert (=> b!23769 d!4173))

(declare-fun d!4175 () Bool)

(declare-fun e!15522 () Bool)

(assert (=> d!4175 e!15522))

(declare-fun res!14656 () Bool)

(assert (=> d!4175 (=> (not res!14656) (not e!15522))))

(declare-fun lt!8882 () ListLongMap!567)

(assert (=> d!4175 (= res!14656 (contains!230 lt!8882 (_1!489 (tuple2!961 lt!8717 (zeroValue!1666 lt!8161)))))))

(declare-fun lt!8881 () List!568)

(assert (=> d!4175 (= lt!8882 (ListLongMap!568 lt!8881))))

(declare-fun lt!8880 () Unit!512)

(declare-fun lt!8883 () Unit!512)

(assert (=> d!4175 (= lt!8880 lt!8883)))

(assert (=> d!4175 (= (getValueByKey!61 lt!8881 (_1!489 (tuple2!961 lt!8717 (zeroValue!1666 lt!8161)))) (Some!66 (_2!489 (tuple2!961 lt!8717 (zeroValue!1666 lt!8161)))))))

(assert (=> d!4175 (= lt!8883 (lemmaContainsTupThenGetReturnValue!18 lt!8881 (_1!489 (tuple2!961 lt!8717 (zeroValue!1666 lt!8161))) (_2!489 (tuple2!961 lt!8717 (zeroValue!1666 lt!8161)))))))

(assert (=> d!4175 (= lt!8881 (insertStrictlySorted!18 (toList!299 lt!8722) (_1!489 (tuple2!961 lt!8717 (zeroValue!1666 lt!8161))) (_2!489 (tuple2!961 lt!8717 (zeroValue!1666 lt!8161)))))))

(assert (=> d!4175 (= (+!45 lt!8722 (tuple2!961 lt!8717 (zeroValue!1666 lt!8161))) lt!8882)))

(declare-fun b!23953 () Bool)

(declare-fun res!14657 () Bool)

(assert (=> b!23953 (=> (not res!14657) (not e!15522))))

(assert (=> b!23953 (= res!14657 (= (getValueByKey!61 (toList!299 lt!8882) (_1!489 (tuple2!961 lt!8717 (zeroValue!1666 lt!8161)))) (Some!66 (_2!489 (tuple2!961 lt!8717 (zeroValue!1666 lt!8161))))))))

(declare-fun b!23954 () Bool)

(assert (=> b!23954 (= e!15522 (contains!232 (toList!299 lt!8882) (tuple2!961 lt!8717 (zeroValue!1666 lt!8161))))))

(assert (= (and d!4175 res!14656) b!23953))

(assert (= (and b!23953 res!14657) b!23954))

(declare-fun m!17885 () Bool)

(assert (=> d!4175 m!17885))

(declare-fun m!17887 () Bool)

(assert (=> d!4175 m!17887))

(declare-fun m!17889 () Bool)

(assert (=> d!4175 m!17889))

(declare-fun m!17891 () Bool)

(assert (=> d!4175 m!17891))

(declare-fun m!17893 () Bool)

(assert (=> b!23953 m!17893))

(declare-fun m!17895 () Bool)

(assert (=> b!23954 m!17895))

(assert (=> b!23769 d!4175))

(declare-fun d!4177 () Bool)

(assert (=> d!4177 (= (apply!29 (+!45 lt!8720 (tuple2!961 lt!8723 (zeroValue!1666 lt!8161))) lt!8709) (get!391 (getValueByKey!61 (toList!299 (+!45 lt!8720 (tuple2!961 lt!8723 (zeroValue!1666 lt!8161)))) lt!8709)))))

(declare-fun bs!971 () Bool)

(assert (= bs!971 d!4177))

(declare-fun m!17897 () Bool)

(assert (=> bs!971 m!17897))

(assert (=> bs!971 m!17897))

(declare-fun m!17899 () Bool)

(assert (=> bs!971 m!17899))

(assert (=> b!23769 d!4177))

(declare-fun d!4179 () Bool)

(declare-fun e!15523 () Bool)

(assert (=> d!4179 e!15523))

(declare-fun res!14658 () Bool)

(assert (=> d!4179 (=> (not res!14658) (not e!15523))))

(declare-fun lt!8886 () ListLongMap!567)

(assert (=> d!4179 (= res!14658 (contains!230 lt!8886 (_1!489 (tuple2!961 lt!8728 (minValue!1666 lt!8161)))))))

(declare-fun lt!8885 () List!568)

(assert (=> d!4179 (= lt!8886 (ListLongMap!568 lt!8885))))

(declare-fun lt!8884 () Unit!512)

(declare-fun lt!8887 () Unit!512)

(assert (=> d!4179 (= lt!8884 lt!8887)))

(assert (=> d!4179 (= (getValueByKey!61 lt!8885 (_1!489 (tuple2!961 lt!8728 (minValue!1666 lt!8161)))) (Some!66 (_2!489 (tuple2!961 lt!8728 (minValue!1666 lt!8161)))))))

(assert (=> d!4179 (= lt!8887 (lemmaContainsTupThenGetReturnValue!18 lt!8885 (_1!489 (tuple2!961 lt!8728 (minValue!1666 lt!8161))) (_2!489 (tuple2!961 lt!8728 (minValue!1666 lt!8161)))))))

(assert (=> d!4179 (= lt!8885 (insertStrictlySorted!18 (toList!299 lt!8713) (_1!489 (tuple2!961 lt!8728 (minValue!1666 lt!8161))) (_2!489 (tuple2!961 lt!8728 (minValue!1666 lt!8161)))))))

(assert (=> d!4179 (= (+!45 lt!8713 (tuple2!961 lt!8728 (minValue!1666 lt!8161))) lt!8886)))

(declare-fun b!23955 () Bool)

(declare-fun res!14659 () Bool)

(assert (=> b!23955 (=> (not res!14659) (not e!15523))))

(assert (=> b!23955 (= res!14659 (= (getValueByKey!61 (toList!299 lt!8886) (_1!489 (tuple2!961 lt!8728 (minValue!1666 lt!8161)))) (Some!66 (_2!489 (tuple2!961 lt!8728 (minValue!1666 lt!8161))))))))

(declare-fun b!23956 () Bool)

(assert (=> b!23956 (= e!15523 (contains!232 (toList!299 lt!8886) (tuple2!961 lt!8728 (minValue!1666 lt!8161))))))

(assert (= (and d!4179 res!14658) b!23955))

(assert (= (and b!23955 res!14659) b!23956))

(declare-fun m!17901 () Bool)

(assert (=> d!4179 m!17901))

(declare-fun m!17903 () Bool)

(assert (=> d!4179 m!17903))

(declare-fun m!17905 () Bool)

(assert (=> d!4179 m!17905))

(declare-fun m!17907 () Bool)

(assert (=> d!4179 m!17907))

(declare-fun m!17909 () Bool)

(assert (=> b!23955 m!17909))

(declare-fun m!17911 () Bool)

(assert (=> b!23956 m!17911))

(assert (=> b!23769 d!4179))

(declare-fun d!4181 () Bool)

(assert (=> d!4181 (= (apply!29 (+!45 lt!8713 (tuple2!961 lt!8728 (minValue!1666 lt!8161))) lt!8727) (apply!29 lt!8713 lt!8727))))

(declare-fun lt!8888 () Unit!512)

(assert (=> d!4181 (= lt!8888 (choose!210 lt!8713 lt!8728 (minValue!1666 lt!8161) lt!8727))))

(declare-fun e!15524 () Bool)

(assert (=> d!4181 e!15524))

(declare-fun res!14660 () Bool)

(assert (=> d!4181 (=> (not res!14660) (not e!15524))))

(assert (=> d!4181 (= res!14660 (contains!230 lt!8713 lt!8727))))

(assert (=> d!4181 (= (addApplyDifferent!14 lt!8713 lt!8728 (minValue!1666 lt!8161) lt!8727) lt!8888)))

(declare-fun b!23957 () Bool)

(assert (=> b!23957 (= e!15524 (not (= lt!8727 lt!8728)))))

(assert (= (and d!4181 res!14660) b!23957))

(assert (=> d!4181 m!17477))

(assert (=> d!4181 m!17493))

(assert (=> d!4181 m!17477))

(declare-fun m!17913 () Bool)

(assert (=> d!4181 m!17913))

(declare-fun m!17915 () Bool)

(assert (=> d!4181 m!17915))

(assert (=> d!4181 m!17495))

(assert (=> b!23769 d!4181))

(declare-fun d!4183 () Bool)

(declare-fun e!15525 () Bool)

(assert (=> d!4183 e!15525))

(declare-fun res!14661 () Bool)

(assert (=> d!4183 (=> (not res!14661) (not e!15525))))

(declare-fun lt!8891 () ListLongMap!567)

(assert (=> d!4183 (= res!14661 (contains!230 lt!8891 (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158)))))))))

(declare-fun lt!8890 () List!568)

(assert (=> d!4183 (= lt!8891 (ListLongMap!568 lt!8890))))

(declare-fun lt!8889 () Unit!512)

(declare-fun lt!8892 () Unit!512)

(assert (=> d!4183 (= lt!8889 lt!8892)))

(assert (=> d!4183 (= (getValueByKey!61 lt!8890 (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158)))))) (Some!66 (_2!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158)))))))))

(assert (=> d!4183 (= lt!8892 (lemmaContainsTupThenGetReturnValue!18 lt!8890 (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158))))) (_2!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158)))))))))

(assert (=> d!4183 (= lt!8890 (insertStrictlySorted!18 (toList!299 call!1997) (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158))))) (_2!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158)))))))))

(assert (=> d!4183 (= (+!45 call!1997 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158))))) lt!8891)))

(declare-fun b!23958 () Bool)

(declare-fun res!14662 () Bool)

(assert (=> b!23958 (=> (not res!14662) (not e!15525))))

(assert (=> b!23958 (= res!14662 (= (getValueByKey!61 (toList!299 lt!8891) (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158)))))) (Some!66 (_2!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158))))))))))

(declare-fun b!23959 () Bool)

(assert (=> b!23959 (= e!15525 (contains!232 (toList!299 lt!8891) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158))))))))

(assert (= (and d!4183 res!14661) b!23958))

(assert (= (and b!23958 res!14662) b!23959))

(declare-fun m!17917 () Bool)

(assert (=> d!4183 m!17917))

(declare-fun m!17919 () Bool)

(assert (=> d!4183 m!17919))

(declare-fun m!17921 () Bool)

(assert (=> d!4183 m!17921))

(declare-fun m!17923 () Bool)

(assert (=> d!4183 m!17923))

(declare-fun m!17925 () Bool)

(assert (=> b!23958 m!17925))

(declare-fun m!17927 () Bool)

(assert (=> b!23959 m!17927))

(assert (=> b!23591 d!4183))

(declare-fun d!4185 () Bool)

(assert (=> d!4185 (contains!230 (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))) #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!8895 () Unit!512)

(declare-fun choose!212 (array!1285 array!1283 (_ BitVec 32) (_ BitVec 32) V!1189 V!1189 (_ BitVec 64) (_ BitVec 32) Int) Unit!512)

(assert (=> d!4185 (= lt!8895 (choose!212 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b1000000000000000000000000000000000000000000000000000000000000000 #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))

(assert (=> d!4185 (validMask!0 (mask!4730 (_2!487 lt!8158)))))

(assert (=> d!4185 (= (lemmaArrayContainsKeyThenInListMap!3 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b1000000000000000000000000000000000000000000000000000000000000000 #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))) lt!8895)))

(declare-fun bs!972 () Bool)

(assert (= bs!972 d!4185))

(assert (=> bs!972 m!16852))

(assert (=> bs!972 m!16852))

(assert (=> bs!972 m!16876))

(declare-fun m!17929 () Bool)

(assert (=> bs!972 m!17929))

(assert (=> bs!972 m!16990))

(assert (=> b!23733 d!4185))

(assert (=> b!23733 d!4093))

(assert (=> b!23733 d!4071))

(declare-fun d!4187 () Bool)

(assert (=> d!4187 (contains!230 (getCurrentListMap!130 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!8896 () Unit!512)

(assert (=> d!4187 (= lt!8896 (choose!212 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))))

(assert (=> d!4187 (validMask!0 (mask!4730 lt!8161))))

(assert (=> d!4187 (= (lemmaArrayContainsKeyThenInListMap!3 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)) lt!8896)))

(declare-fun bs!973 () Bool)

(assert (= bs!973 d!4187))

(assert (=> bs!973 m!16790))

(assert (=> bs!973 m!16790))

(assert (=> bs!973 m!16814))

(declare-fun m!17931 () Bool)

(assert (=> bs!973 m!17931))

(assert (=> bs!973 m!17182))

(assert (=> b!23831 d!4187))

(assert (=> b!23831 d!4079))

(assert (=> b!23831 d!4081))

(declare-fun d!4189 () Bool)

(assert (=> d!4189 (= (apply!29 (+!45 lt!8442 (tuple2!961 lt!8445 (zeroValue!1666 (_2!487 lt!8158)))) lt!8431) (apply!29 lt!8442 lt!8431))))

(declare-fun lt!8897 () Unit!512)

(assert (=> d!4189 (= lt!8897 (choose!210 lt!8442 lt!8445 (zeroValue!1666 (_2!487 lt!8158)) lt!8431))))

(declare-fun e!15526 () Bool)

(assert (=> d!4189 e!15526))

(declare-fun res!14663 () Bool)

(assert (=> d!4189 (=> (not res!14663) (not e!15526))))

(assert (=> d!4189 (= res!14663 (contains!230 lt!8442 lt!8431))))

(assert (=> d!4189 (= (addApplyDifferent!14 lt!8442 lt!8445 (zeroValue!1666 (_2!487 lt!8158)) lt!8431) lt!8897)))

(declare-fun b!23960 () Bool)

(assert (=> b!23960 (= e!15526 (not (= lt!8431 lt!8445)))))

(assert (= (and d!4189 res!14663) b!23960))

(assert (=> d!4189 m!16996))

(assert (=> d!4189 m!17000))

(assert (=> d!4189 m!16996))

(declare-fun m!17933 () Bool)

(assert (=> d!4189 m!17933))

(declare-fun m!17935 () Bool)

(assert (=> d!4189 m!17935))

(assert (=> d!4189 m!17020))

(assert (=> b!23498 d!4189))

(declare-fun d!4191 () Bool)

(assert (=> d!4191 (= (apply!29 lt!8442 lt!8431) (get!391 (getValueByKey!61 (toList!299 lt!8442) lt!8431)))))

(declare-fun bs!974 () Bool)

(assert (= bs!974 d!4191))

(declare-fun m!17937 () Bool)

(assert (=> bs!974 m!17937))

(assert (=> bs!974 m!17937))

(declare-fun m!17939 () Bool)

(assert (=> bs!974 m!17939))

(assert (=> b!23498 d!4191))

(declare-fun d!4193 () Bool)

(assert (=> d!4193 (= (apply!29 (+!45 lt!8443 (tuple2!961 lt!8438 (minValue!1666 (_2!487 lt!8158)))) lt!8430) (get!391 (getValueByKey!61 (toList!299 (+!45 lt!8443 (tuple2!961 lt!8438 (minValue!1666 (_2!487 lt!8158))))) lt!8430)))))

(declare-fun bs!975 () Bool)

(assert (= bs!975 d!4193))

(declare-fun m!17941 () Bool)

(assert (=> bs!975 m!17941))

(assert (=> bs!975 m!17941))

(declare-fun m!17943 () Bool)

(assert (=> bs!975 m!17943))

(assert (=> b!23498 d!4193))

(declare-fun d!4195 () Bool)

(assert (=> d!4195 (= (apply!29 (+!45 lt!8435 (tuple2!961 lt!8450 (minValue!1666 (_2!487 lt!8158)))) lt!8449) (apply!29 lt!8435 lt!8449))))

(declare-fun lt!8898 () Unit!512)

(assert (=> d!4195 (= lt!8898 (choose!210 lt!8435 lt!8450 (minValue!1666 (_2!487 lt!8158)) lt!8449))))

(declare-fun e!15527 () Bool)

(assert (=> d!4195 e!15527))

(declare-fun res!14664 () Bool)

(assert (=> d!4195 (=> (not res!14664) (not e!15527))))

(assert (=> d!4195 (= res!14664 (contains!230 lt!8435 lt!8449))))

(assert (=> d!4195 (= (addApplyDifferent!14 lt!8435 lt!8450 (minValue!1666 (_2!487 lt!8158)) lt!8449) lt!8898)))

(declare-fun b!23961 () Bool)

(assert (=> b!23961 (= e!15527 (not (= lt!8449 lt!8450)))))

(assert (= (and d!4195 res!14664) b!23961))

(assert (=> d!4195 m!16998))

(assert (=> d!4195 m!17014))

(assert (=> d!4195 m!16998))

(declare-fun m!17945 () Bool)

(assert (=> d!4195 m!17945))

(declare-fun m!17947 () Bool)

(assert (=> d!4195 m!17947))

(assert (=> d!4195 m!17016))

(assert (=> b!23498 d!4195))

(declare-fun d!4197 () Bool)

(assert (=> d!4197 (= (apply!29 (+!45 lt!8442 (tuple2!961 lt!8445 (zeroValue!1666 (_2!487 lt!8158)))) lt!8431) (get!391 (getValueByKey!61 (toList!299 (+!45 lt!8442 (tuple2!961 lt!8445 (zeroValue!1666 (_2!487 lt!8158))))) lt!8431)))))

(declare-fun bs!976 () Bool)

(assert (= bs!976 d!4197))

(declare-fun m!17949 () Bool)

(assert (=> bs!976 m!17949))

(assert (=> bs!976 m!17949))

(declare-fun m!17951 () Bool)

(assert (=> bs!976 m!17951))

(assert (=> b!23498 d!4197))

(declare-fun d!4199 () Bool)

(assert (=> d!4199 (= (apply!29 lt!8443 lt!8430) (get!391 (getValueByKey!61 (toList!299 lt!8443) lt!8430)))))

(declare-fun bs!977 () Bool)

(assert (= bs!977 d!4199))

(declare-fun m!17953 () Bool)

(assert (=> bs!977 m!17953))

(assert (=> bs!977 m!17953))

(declare-fun m!17955 () Bool)

(assert (=> bs!977 m!17955))

(assert (=> b!23498 d!4199))

(declare-fun d!4201 () Bool)

(declare-fun e!15528 () Bool)

(assert (=> d!4201 e!15528))

(declare-fun res!14665 () Bool)

(assert (=> d!4201 (=> (not res!14665) (not e!15528))))

(declare-fun lt!8901 () ListLongMap!567)

(assert (=> d!4201 (= res!14665 (contains!230 lt!8901 (_1!489 (tuple2!961 lt!8438 (minValue!1666 (_2!487 lt!8158))))))))

(declare-fun lt!8900 () List!568)

(assert (=> d!4201 (= lt!8901 (ListLongMap!568 lt!8900))))

(declare-fun lt!8899 () Unit!512)

(declare-fun lt!8902 () Unit!512)

(assert (=> d!4201 (= lt!8899 lt!8902)))

(assert (=> d!4201 (= (getValueByKey!61 lt!8900 (_1!489 (tuple2!961 lt!8438 (minValue!1666 (_2!487 lt!8158))))) (Some!66 (_2!489 (tuple2!961 lt!8438 (minValue!1666 (_2!487 lt!8158))))))))

(assert (=> d!4201 (= lt!8902 (lemmaContainsTupThenGetReturnValue!18 lt!8900 (_1!489 (tuple2!961 lt!8438 (minValue!1666 (_2!487 lt!8158)))) (_2!489 (tuple2!961 lt!8438 (minValue!1666 (_2!487 lt!8158))))))))

(assert (=> d!4201 (= lt!8900 (insertStrictlySorted!18 (toList!299 lt!8443) (_1!489 (tuple2!961 lt!8438 (minValue!1666 (_2!487 lt!8158)))) (_2!489 (tuple2!961 lt!8438 (minValue!1666 (_2!487 lt!8158))))))))

(assert (=> d!4201 (= (+!45 lt!8443 (tuple2!961 lt!8438 (minValue!1666 (_2!487 lt!8158)))) lt!8901)))

(declare-fun b!23962 () Bool)

(declare-fun res!14666 () Bool)

(assert (=> b!23962 (=> (not res!14666) (not e!15528))))

(assert (=> b!23962 (= res!14666 (= (getValueByKey!61 (toList!299 lt!8901) (_1!489 (tuple2!961 lt!8438 (minValue!1666 (_2!487 lt!8158))))) (Some!66 (_2!489 (tuple2!961 lt!8438 (minValue!1666 (_2!487 lt!8158)))))))))

(declare-fun b!23963 () Bool)

(assert (=> b!23963 (= e!15528 (contains!232 (toList!299 lt!8901) (tuple2!961 lt!8438 (minValue!1666 (_2!487 lt!8158)))))))

(assert (= (and d!4201 res!14665) b!23962))

(assert (= (and b!23962 res!14666) b!23963))

(declare-fun m!17957 () Bool)

(assert (=> d!4201 m!17957))

(declare-fun m!17959 () Bool)

(assert (=> d!4201 m!17959))

(declare-fun m!17961 () Bool)

(assert (=> d!4201 m!17961))

(declare-fun m!17963 () Bool)

(assert (=> d!4201 m!17963))

(declare-fun m!17965 () Bool)

(assert (=> b!23962 m!17965))

(declare-fun m!17967 () Bool)

(assert (=> b!23963 m!17967))

(assert (=> b!23498 d!4201))

(declare-fun d!4203 () Bool)

(assert (=> d!4203 (= (apply!29 lt!8435 lt!8449) (get!391 (getValueByKey!61 (toList!299 lt!8435) lt!8449)))))

(declare-fun bs!978 () Bool)

(assert (= bs!978 d!4203))

(declare-fun m!17969 () Bool)

(assert (=> bs!978 m!17969))

(assert (=> bs!978 m!17969))

(declare-fun m!17971 () Bool)

(assert (=> bs!978 m!17971))

(assert (=> b!23498 d!4203))

(declare-fun d!4205 () Bool)

(declare-fun e!15529 () Bool)

(assert (=> d!4205 e!15529))

(declare-fun res!14667 () Bool)

(assert (=> d!4205 (=> (not res!14667) (not e!15529))))

(declare-fun lt!8905 () ListLongMap!567)

(assert (=> d!4205 (= res!14667 (contains!230 lt!8905 (_1!489 (tuple2!961 lt!8439 (zeroValue!1666 (_2!487 lt!8158))))))))

(declare-fun lt!8904 () List!568)

(assert (=> d!4205 (= lt!8905 (ListLongMap!568 lt!8904))))

(declare-fun lt!8903 () Unit!512)

(declare-fun lt!8906 () Unit!512)

(assert (=> d!4205 (= lt!8903 lt!8906)))

(assert (=> d!4205 (= (getValueByKey!61 lt!8904 (_1!489 (tuple2!961 lt!8439 (zeroValue!1666 (_2!487 lt!8158))))) (Some!66 (_2!489 (tuple2!961 lt!8439 (zeroValue!1666 (_2!487 lt!8158))))))))

(assert (=> d!4205 (= lt!8906 (lemmaContainsTupThenGetReturnValue!18 lt!8904 (_1!489 (tuple2!961 lt!8439 (zeroValue!1666 (_2!487 lt!8158)))) (_2!489 (tuple2!961 lt!8439 (zeroValue!1666 (_2!487 lt!8158))))))))

(assert (=> d!4205 (= lt!8904 (insertStrictlySorted!18 (toList!299 lt!8444) (_1!489 (tuple2!961 lt!8439 (zeroValue!1666 (_2!487 lt!8158)))) (_2!489 (tuple2!961 lt!8439 (zeroValue!1666 (_2!487 lt!8158))))))))

(assert (=> d!4205 (= (+!45 lt!8444 (tuple2!961 lt!8439 (zeroValue!1666 (_2!487 lt!8158)))) lt!8905)))

(declare-fun b!23964 () Bool)

(declare-fun res!14668 () Bool)

(assert (=> b!23964 (=> (not res!14668) (not e!15529))))

(assert (=> b!23964 (= res!14668 (= (getValueByKey!61 (toList!299 lt!8905) (_1!489 (tuple2!961 lt!8439 (zeroValue!1666 (_2!487 lt!8158))))) (Some!66 (_2!489 (tuple2!961 lt!8439 (zeroValue!1666 (_2!487 lt!8158)))))))))

(declare-fun b!23965 () Bool)

(assert (=> b!23965 (= e!15529 (contains!232 (toList!299 lt!8905) (tuple2!961 lt!8439 (zeroValue!1666 (_2!487 lt!8158)))))))

(assert (= (and d!4205 res!14667) b!23964))

(assert (= (and b!23964 res!14668) b!23965))

(declare-fun m!17973 () Bool)

(assert (=> d!4205 m!17973))

(declare-fun m!17975 () Bool)

(assert (=> d!4205 m!17975))

(declare-fun m!17977 () Bool)

(assert (=> d!4205 m!17977))

(declare-fun m!17979 () Bool)

(assert (=> d!4205 m!17979))

(declare-fun m!17981 () Bool)

(assert (=> b!23964 m!17981))

(declare-fun m!17983 () Bool)

(assert (=> b!23965 m!17983))

(assert (=> b!23498 d!4205))

(declare-fun d!4207 () Bool)

(assert (=> d!4207 (= (apply!29 (+!45 lt!8435 (tuple2!961 lt!8450 (minValue!1666 (_2!487 lt!8158)))) lt!8449) (get!391 (getValueByKey!61 (toList!299 (+!45 lt!8435 (tuple2!961 lt!8450 (minValue!1666 (_2!487 lt!8158))))) lt!8449)))))

(declare-fun bs!979 () Bool)

(assert (= bs!979 d!4207))

(declare-fun m!17985 () Bool)

(assert (=> bs!979 m!17985))

(assert (=> bs!979 m!17985))

(declare-fun m!17987 () Bool)

(assert (=> bs!979 m!17987))

(assert (=> b!23498 d!4207))

(declare-fun d!4209 () Bool)

(declare-fun e!15530 () Bool)

(assert (=> d!4209 e!15530))

(declare-fun res!14669 () Bool)

(assert (=> d!4209 (=> (not res!14669) (not e!15530))))

(declare-fun lt!8909 () ListLongMap!567)

(assert (=> d!4209 (= res!14669 (contains!230 lt!8909 (_1!489 (tuple2!961 lt!8450 (minValue!1666 (_2!487 lt!8158))))))))

(declare-fun lt!8908 () List!568)

(assert (=> d!4209 (= lt!8909 (ListLongMap!568 lt!8908))))

(declare-fun lt!8907 () Unit!512)

(declare-fun lt!8910 () Unit!512)

(assert (=> d!4209 (= lt!8907 lt!8910)))

(assert (=> d!4209 (= (getValueByKey!61 lt!8908 (_1!489 (tuple2!961 lt!8450 (minValue!1666 (_2!487 lt!8158))))) (Some!66 (_2!489 (tuple2!961 lt!8450 (minValue!1666 (_2!487 lt!8158))))))))

(assert (=> d!4209 (= lt!8910 (lemmaContainsTupThenGetReturnValue!18 lt!8908 (_1!489 (tuple2!961 lt!8450 (minValue!1666 (_2!487 lt!8158)))) (_2!489 (tuple2!961 lt!8450 (minValue!1666 (_2!487 lt!8158))))))))

(assert (=> d!4209 (= lt!8908 (insertStrictlySorted!18 (toList!299 lt!8435) (_1!489 (tuple2!961 lt!8450 (minValue!1666 (_2!487 lt!8158)))) (_2!489 (tuple2!961 lt!8450 (minValue!1666 (_2!487 lt!8158))))))))

(assert (=> d!4209 (= (+!45 lt!8435 (tuple2!961 lt!8450 (minValue!1666 (_2!487 lt!8158)))) lt!8909)))

(declare-fun b!23966 () Bool)

(declare-fun res!14670 () Bool)

(assert (=> b!23966 (=> (not res!14670) (not e!15530))))

(assert (=> b!23966 (= res!14670 (= (getValueByKey!61 (toList!299 lt!8909) (_1!489 (tuple2!961 lt!8450 (minValue!1666 (_2!487 lt!8158))))) (Some!66 (_2!489 (tuple2!961 lt!8450 (minValue!1666 (_2!487 lt!8158)))))))))

(declare-fun b!23967 () Bool)

(assert (=> b!23967 (= e!15530 (contains!232 (toList!299 lt!8909) (tuple2!961 lt!8450 (minValue!1666 (_2!487 lt!8158)))))))

(assert (= (and d!4209 res!14669) b!23966))

(assert (= (and b!23966 res!14670) b!23967))

(declare-fun m!17989 () Bool)

(assert (=> d!4209 m!17989))

(declare-fun m!17991 () Bool)

(assert (=> d!4209 m!17991))

(declare-fun m!17993 () Bool)

(assert (=> d!4209 m!17993))

(declare-fun m!17995 () Bool)

(assert (=> d!4209 m!17995))

(declare-fun m!17997 () Bool)

(assert (=> b!23966 m!17997))

(declare-fun m!17999 () Bool)

(assert (=> b!23967 m!17999))

(assert (=> b!23498 d!4209))

(declare-fun d!4211 () Bool)

(declare-fun e!15531 () Bool)

(assert (=> d!4211 e!15531))

(declare-fun res!14671 () Bool)

(assert (=> d!4211 (=> (not res!14671) (not e!15531))))

(declare-fun lt!8913 () ListLongMap!567)

(assert (=> d!4211 (= res!14671 (contains!230 lt!8913 (_1!489 (tuple2!961 lt!8445 (zeroValue!1666 (_2!487 lt!8158))))))))

(declare-fun lt!8912 () List!568)

(assert (=> d!4211 (= lt!8913 (ListLongMap!568 lt!8912))))

(declare-fun lt!8911 () Unit!512)

(declare-fun lt!8914 () Unit!512)

(assert (=> d!4211 (= lt!8911 lt!8914)))

(assert (=> d!4211 (= (getValueByKey!61 lt!8912 (_1!489 (tuple2!961 lt!8445 (zeroValue!1666 (_2!487 lt!8158))))) (Some!66 (_2!489 (tuple2!961 lt!8445 (zeroValue!1666 (_2!487 lt!8158))))))))

(assert (=> d!4211 (= lt!8914 (lemmaContainsTupThenGetReturnValue!18 lt!8912 (_1!489 (tuple2!961 lt!8445 (zeroValue!1666 (_2!487 lt!8158)))) (_2!489 (tuple2!961 lt!8445 (zeroValue!1666 (_2!487 lt!8158))))))))

(assert (=> d!4211 (= lt!8912 (insertStrictlySorted!18 (toList!299 lt!8442) (_1!489 (tuple2!961 lt!8445 (zeroValue!1666 (_2!487 lt!8158)))) (_2!489 (tuple2!961 lt!8445 (zeroValue!1666 (_2!487 lt!8158))))))))

(assert (=> d!4211 (= (+!45 lt!8442 (tuple2!961 lt!8445 (zeroValue!1666 (_2!487 lt!8158)))) lt!8913)))

(declare-fun b!23968 () Bool)

(declare-fun res!14672 () Bool)

(assert (=> b!23968 (=> (not res!14672) (not e!15531))))

(assert (=> b!23968 (= res!14672 (= (getValueByKey!61 (toList!299 lt!8913) (_1!489 (tuple2!961 lt!8445 (zeroValue!1666 (_2!487 lt!8158))))) (Some!66 (_2!489 (tuple2!961 lt!8445 (zeroValue!1666 (_2!487 lt!8158)))))))))

(declare-fun b!23969 () Bool)

(assert (=> b!23969 (= e!15531 (contains!232 (toList!299 lt!8913) (tuple2!961 lt!8445 (zeroValue!1666 (_2!487 lt!8158)))))))

(assert (= (and d!4211 res!14671) b!23968))

(assert (= (and b!23968 res!14672) b!23969))

(declare-fun m!18001 () Bool)

(assert (=> d!4211 m!18001))

(declare-fun m!18003 () Bool)

(assert (=> d!4211 m!18003))

(declare-fun m!18005 () Bool)

(assert (=> d!4211 m!18005))

(declare-fun m!18007 () Bool)

(assert (=> d!4211 m!18007))

(declare-fun m!18009 () Bool)

(assert (=> b!23968 m!18009))

(declare-fun m!18011 () Bool)

(assert (=> b!23969 m!18011))

(assert (=> b!23498 d!4211))

(declare-fun b!23970 () Bool)

(declare-fun e!15534 () Bool)

(declare-fun e!15537 () Bool)

(assert (=> b!23970 (= e!15534 e!15537)))

(declare-fun c!3161 () Bool)

(assert (=> b!23970 (= c!3161 (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))))))

(declare-fun b!23971 () Bool)

(declare-fun e!15536 () Bool)

(assert (=> b!23971 (= e!15534 e!15536)))

(assert (=> b!23971 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))))))

(declare-fun res!14674 () Bool)

(declare-fun lt!8916 () ListLongMap!567)

(assert (=> b!23971 (= res!14674 (contains!230 lt!8916 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000)))))

(assert (=> b!23971 (=> (not res!14674) (not e!15536))))

(declare-fun call!2060 () ListLongMap!567)

(declare-fun bm!2057 () Bool)

(assert (=> bm!2057 (= call!2060 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!487 lt!8158)) (ite c!2998 (_values!1729 (_2!487 lt!8158)) lt!8287) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!1743 (_2!487 lt!8158))))))

(declare-fun b!23972 () Bool)

(assert (=> b!23972 (= e!15537 (isEmpty!172 lt!8916))))

(declare-fun b!23973 () Bool)

(declare-fun e!15535 () Bool)

(assert (=> b!23973 (= e!15535 (validKeyInArray!0 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000)))))

(assert (=> b!23973 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!23974 () Bool)

(declare-fun res!14675 () Bool)

(declare-fun e!15538 () Bool)

(assert (=> b!23974 (=> (not res!14675) (not e!15538))))

(assert (=> b!23974 (= res!14675 (not (contains!230 lt!8916 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!23975 () Bool)

(declare-fun e!15532 () ListLongMap!567)

(assert (=> b!23975 (= e!15532 (ListLongMap!568 Nil!565))))

(declare-fun d!4213 () Bool)

(assert (=> d!4213 e!15538))

(declare-fun res!14673 () Bool)

(assert (=> d!4213 (=> (not res!14673) (not e!15538))))

(assert (=> d!4213 (= res!14673 (not (contains!230 lt!8916 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!4213 (= lt!8916 e!15532)))

(declare-fun c!3160 () Bool)

(assert (=> d!4213 (= c!3160 (bvsge #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))))))

(assert (=> d!4213 (validMask!0 (mask!4730 (_2!487 lt!8158)))))

(assert (=> d!4213 (= (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!487 lt!8158)) (ite c!2998 (_values!1729 (_2!487 lt!8158)) lt!8287) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))) lt!8916)))

(declare-fun b!23976 () Bool)

(assert (=> b!23976 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))))))

(assert (=> b!23976 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!703 (ite c!2998 (_values!1729 (_2!487 lt!8158)) lt!8287))))))

(assert (=> b!23976 (= e!15536 (= (apply!29 lt!8916 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000)) (get!390 (select (arr!607 (ite c!2998 (_values!1729 (_2!487 lt!8158)) lt!8287)) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (_2!487 lt!8158)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!23977 () Bool)

(declare-fun e!15533 () ListLongMap!567)

(assert (=> b!23977 (= e!15533 call!2060)))

(declare-fun b!23978 () Bool)

(assert (=> b!23978 (= e!15538 e!15534)))

(declare-fun c!3162 () Bool)

(assert (=> b!23978 (= c!3162 e!15535)))

(declare-fun res!14676 () Bool)

(assert (=> b!23978 (=> (not res!14676) (not e!15535))))

(assert (=> b!23978 (= res!14676 (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))))))

(declare-fun b!23979 () Bool)

(declare-fun lt!8918 () Unit!512)

(declare-fun lt!8915 () Unit!512)

(assert (=> b!23979 (= lt!8918 lt!8915)))

(declare-fun lt!8921 () (_ BitVec 64))

(declare-fun lt!8919 () (_ BitVec 64))

(declare-fun lt!8917 () V!1189)

(declare-fun lt!8920 () ListLongMap!567)

(assert (=> b!23979 (not (contains!230 (+!45 lt!8920 (tuple2!961 lt!8919 lt!8917)) lt!8921))))

(assert (=> b!23979 (= lt!8915 (addStillNotContains!2 lt!8920 lt!8919 lt!8917 lt!8921))))

(assert (=> b!23979 (= lt!8921 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!23979 (= lt!8917 (get!390 (select (arr!607 (ite c!2998 (_values!1729 (_2!487 lt!8158)) lt!8287)) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (_2!487 lt!8158)) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!23979 (= lt!8919 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000))))

(assert (=> b!23979 (= lt!8920 call!2060)))

(assert (=> b!23979 (= e!15533 (+!45 call!2060 (tuple2!961 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000) (get!390 (select (arr!607 (ite c!2998 (_values!1729 (_2!487 lt!8158)) lt!8287)) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (_2!487 lt!8158)) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!23980 () Bool)

(assert (=> b!23980 (= e!15532 e!15533)))

(declare-fun c!3159 () Bool)

(assert (=> b!23980 (= c!3159 (validKeyInArray!0 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000)))))

(declare-fun b!23981 () Bool)

(assert (=> b!23981 (= e!15537 (= lt!8916 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!487 lt!8158)) (ite c!2998 (_values!1729 (_2!487 lt!8158)) lt!8287) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!1743 (_2!487 lt!8158)))))))

(assert (= (and d!4213 c!3160) b!23975))

(assert (= (and d!4213 (not c!3160)) b!23980))

(assert (= (and b!23980 c!3159) b!23979))

(assert (= (and b!23980 (not c!3159)) b!23977))

(assert (= (or b!23979 b!23977) bm!2057))

(assert (= (and d!4213 res!14673) b!23974))

(assert (= (and b!23974 res!14675) b!23978))

(assert (= (and b!23978 res!14676) b!23973))

(assert (= (and b!23978 c!3162) b!23971))

(assert (= (and b!23978 (not c!3162)) b!23970))

(assert (= (and b!23971 res!14674) b!23976))

(assert (= (and b!23970 c!3161) b!23981))

(assert (= (and b!23970 (not c!3161)) b!23972))

(declare-fun b_lambda!1605 () Bool)

(assert (=> (not b_lambda!1605) (not b!23976)))

(assert (=> b!23976 t!3242))

(declare-fun b_and!1511 () Bool)

(assert (= b_and!1509 (and (=> t!3242 result!1099) b_and!1511)))

(declare-fun b_lambda!1607 () Bool)

(assert (=> (not b_lambda!1607) (not b!23979)))

(assert (=> b!23979 t!3242))

(declare-fun b_and!1513 () Bool)

(assert (= b_and!1511 (and (=> t!3242 result!1099) b_and!1513)))

(assert (=> b!23971 m!16986))

(assert (=> b!23971 m!16986))

(declare-fun m!18013 () Bool)

(assert (=> b!23971 m!18013))

(assert (=> b!23979 m!17026))

(declare-fun m!18015 () Bool)

(assert (=> b!23979 m!18015))

(assert (=> b!23979 m!17024))

(declare-fun m!18017 () Bool)

(assert (=> b!23979 m!18017))

(assert (=> b!23979 m!18017))

(declare-fun m!18019 () Bool)

(assert (=> b!23979 m!18019))

(assert (=> b!23979 m!17024))

(assert (=> b!23979 m!17026))

(assert (=> b!23979 m!17028))

(assert (=> b!23979 m!16986))

(declare-fun m!18021 () Bool)

(assert (=> b!23979 m!18021))

(assert (=> b!23976 m!17026))

(assert (=> b!23976 m!17024))

(assert (=> b!23976 m!17026))

(assert (=> b!23976 m!17028))

(assert (=> b!23976 m!17024))

(assert (=> b!23976 m!16986))

(assert (=> b!23976 m!16986))

(declare-fun m!18023 () Bool)

(assert (=> b!23976 m!18023))

(declare-fun m!18025 () Bool)

(assert (=> d!4213 m!18025))

(assert (=> d!4213 m!16990))

(assert (=> b!23980 m!16986))

(assert (=> b!23980 m!16986))

(assert (=> b!23980 m!16988))

(declare-fun m!18027 () Bool)

(assert (=> b!23972 m!18027))

(declare-fun m!18029 () Bool)

(assert (=> b!23974 m!18029))

(assert (=> b!23973 m!16986))

(assert (=> b!23973 m!16986))

(assert (=> b!23973 m!16988))

(declare-fun m!18031 () Bool)

(assert (=> bm!2057 m!18031))

(assert (=> b!23981 m!18031))

(assert (=> b!23498 d!4213))

(declare-fun d!4215 () Bool)

(declare-fun e!15539 () Bool)

(assert (=> d!4215 e!15539))

(declare-fun res!14677 () Bool)

(assert (=> d!4215 (=> res!14677 e!15539)))

(declare-fun lt!8922 () Bool)

(assert (=> d!4215 (= res!14677 (not lt!8922))))

(declare-fun lt!8923 () Bool)

(assert (=> d!4215 (= lt!8922 lt!8923)))

(declare-fun lt!8924 () Unit!512)

(declare-fun e!15540 () Unit!512)

(assert (=> d!4215 (= lt!8924 e!15540)))

(declare-fun c!3163 () Bool)

(assert (=> d!4215 (= c!3163 lt!8923)))

(assert (=> d!4215 (= lt!8923 (containsKey!25 (toList!299 (+!45 lt!8444 (tuple2!961 lt!8439 (zeroValue!1666 (_2!487 lt!8158))))) lt!8448))))

(assert (=> d!4215 (= (contains!230 (+!45 lt!8444 (tuple2!961 lt!8439 (zeroValue!1666 (_2!487 lt!8158)))) lt!8448) lt!8922)))

(declare-fun b!23982 () Bool)

(declare-fun lt!8925 () Unit!512)

(assert (=> b!23982 (= e!15540 lt!8925)))

(assert (=> b!23982 (= lt!8925 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!299 (+!45 lt!8444 (tuple2!961 lt!8439 (zeroValue!1666 (_2!487 lt!8158))))) lt!8448))))

(assert (=> b!23982 (isDefined!23 (getValueByKey!61 (toList!299 (+!45 lt!8444 (tuple2!961 lt!8439 (zeroValue!1666 (_2!487 lt!8158))))) lt!8448))))

(declare-fun b!23983 () Bool)

(declare-fun Unit!547 () Unit!512)

(assert (=> b!23983 (= e!15540 Unit!547)))

(declare-fun b!23984 () Bool)

(assert (=> b!23984 (= e!15539 (isDefined!23 (getValueByKey!61 (toList!299 (+!45 lt!8444 (tuple2!961 lt!8439 (zeroValue!1666 (_2!487 lt!8158))))) lt!8448)))))

(assert (= (and d!4215 c!3163) b!23982))

(assert (= (and d!4215 (not c!3163)) b!23983))

(assert (= (and d!4215 (not res!14677)) b!23984))

(declare-fun m!18033 () Bool)

(assert (=> d!4215 m!18033))

(declare-fun m!18035 () Bool)

(assert (=> b!23982 m!18035))

(declare-fun m!18037 () Bool)

(assert (=> b!23982 m!18037))

(assert (=> b!23982 m!18037))

(declare-fun m!18039 () Bool)

(assert (=> b!23982 m!18039))

(assert (=> b!23984 m!18037))

(assert (=> b!23984 m!18037))

(assert (=> b!23984 m!18039))

(assert (=> b!23498 d!4215))

(declare-fun d!4217 () Bool)

(assert (=> d!4217 (contains!230 (+!45 lt!8444 (tuple2!961 lt!8439 (zeroValue!1666 (_2!487 lt!8158)))) lt!8448)))

(declare-fun lt!8926 () Unit!512)

(assert (=> d!4217 (= lt!8926 (choose!211 lt!8444 lt!8439 (zeroValue!1666 (_2!487 lt!8158)) lt!8448))))

(assert (=> d!4217 (contains!230 lt!8444 lt!8448)))

(assert (=> d!4217 (= (addStillContains!14 lt!8444 lt!8439 (zeroValue!1666 (_2!487 lt!8158)) lt!8448) lt!8926)))

(declare-fun bs!980 () Bool)

(assert (= bs!980 d!4217))

(assert (=> bs!980 m!17004))

(assert (=> bs!980 m!17004))

(assert (=> bs!980 m!17006))

(declare-fun m!18041 () Bool)

(assert (=> bs!980 m!18041))

(declare-fun m!18043 () Bool)

(assert (=> bs!980 m!18043))

(assert (=> b!23498 d!4217))

(declare-fun d!4219 () Bool)

(assert (=> d!4219 (= (apply!29 (+!45 lt!8443 (tuple2!961 lt!8438 (minValue!1666 (_2!487 lt!8158)))) lt!8430) (apply!29 lt!8443 lt!8430))))

(declare-fun lt!8927 () Unit!512)

(assert (=> d!4219 (= lt!8927 (choose!210 lt!8443 lt!8438 (minValue!1666 (_2!487 lt!8158)) lt!8430))))

(declare-fun e!15541 () Bool)

(assert (=> d!4219 e!15541))

(declare-fun res!14678 () Bool)

(assert (=> d!4219 (=> (not res!14678) (not e!15541))))

(assert (=> d!4219 (= res!14678 (contains!230 lt!8443 lt!8430))))

(assert (=> d!4219 (= (addApplyDifferent!14 lt!8443 lt!8438 (minValue!1666 (_2!487 lt!8158)) lt!8430) lt!8927)))

(declare-fun b!23985 () Bool)

(assert (=> b!23985 (= e!15541 (not (= lt!8430 lt!8438)))))

(assert (= (and d!4219 res!14678) b!23985))

(assert (=> d!4219 m!17010))

(assert (=> d!4219 m!17012))

(assert (=> d!4219 m!17010))

(declare-fun m!18045 () Bool)

(assert (=> d!4219 m!18045))

(declare-fun m!18047 () Bool)

(assert (=> d!4219 m!18047))

(assert (=> d!4219 m!16994))

(assert (=> b!23498 d!4219))

(declare-fun d!4221 () Bool)

(assert (=> d!4221 (= (validKeyInArray!0 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000)) (and (not (= (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!23598 d!4221))

(declare-fun d!4223 () Bool)

(declare-fun e!15542 () Bool)

(assert (=> d!4223 e!15542))

(declare-fun res!14679 () Bool)

(assert (=> d!4223 (=> res!14679 e!15542)))

(declare-fun lt!8928 () Bool)

(assert (=> d!4223 (= res!14679 (not lt!8928))))

(declare-fun lt!8929 () Bool)

(assert (=> d!4223 (= lt!8928 lt!8929)))

(declare-fun lt!8930 () Unit!512)

(declare-fun e!15543 () Unit!512)

(assert (=> d!4223 (= lt!8930 e!15543)))

(declare-fun c!3164 () Bool)

(assert (=> d!4223 (= c!3164 lt!8929)))

(assert (=> d!4223 (= lt!8929 (containsKey!25 (toList!299 lt!8757) (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(assert (=> d!4223 (= (contains!230 lt!8757 (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) lt!8928)))

(declare-fun b!23986 () Bool)

(declare-fun lt!8931 () Unit!512)

(assert (=> b!23986 (= e!15543 lt!8931)))

(assert (=> b!23986 (= lt!8931 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!299 lt!8757) (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(assert (=> b!23986 (isDefined!23 (getValueByKey!61 (toList!299 lt!8757) (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(declare-fun b!23987 () Bool)

(declare-fun Unit!548 () Unit!512)

(assert (=> b!23987 (= e!15543 Unit!548)))

(declare-fun b!23988 () Bool)

(assert (=> b!23988 (= e!15542 (isDefined!23 (getValueByKey!61 (toList!299 lt!8757) (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(assert (= (and d!4223 c!3164) b!23986))

(assert (= (and d!4223 (not c!3164)) b!23987))

(assert (= (and d!4223 (not res!14679)) b!23988))

(declare-fun m!18049 () Bool)

(assert (=> d!4223 m!18049))

(declare-fun m!18051 () Bool)

(assert (=> b!23986 m!18051))

(assert (=> b!23986 m!17607))

(assert (=> b!23986 m!17607))

(declare-fun m!18053 () Bool)

(assert (=> b!23986 m!18053))

(assert (=> b!23988 m!17607))

(assert (=> b!23988 m!17607))

(assert (=> b!23988 m!18053))

(assert (=> d!4111 d!4223))

(declare-fun d!4225 () Bool)

(declare-fun c!3165 () Bool)

(assert (=> d!4225 (= c!3165 (and ((_ is Cons!564) lt!8756) (= (_1!489 (h!1130 lt!8756)) (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(declare-fun e!15544 () Option!67)

(assert (=> d!4225 (= (getValueByKey!61 lt!8756 (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) e!15544)))

(declare-fun b!23989 () Bool)

(assert (=> b!23989 (= e!15544 (Some!66 (_2!489 (h!1130 lt!8756))))))

(declare-fun b!23992 () Bool)

(declare-fun e!15545 () Option!67)

(assert (=> b!23992 (= e!15545 None!65)))

(declare-fun b!23990 () Bool)

(assert (=> b!23990 (= e!15544 e!15545)))

(declare-fun c!3166 () Bool)

(assert (=> b!23990 (= c!3166 (and ((_ is Cons!564) lt!8756) (not (= (_1!489 (h!1130 lt!8756)) (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(declare-fun b!23991 () Bool)

(assert (=> b!23991 (= e!15545 (getValueByKey!61 (t!3239 lt!8756) (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(assert (= (and d!4225 c!3165) b!23989))

(assert (= (and d!4225 (not c!3165)) b!23990))

(assert (= (and b!23990 c!3166) b!23991))

(assert (= (and b!23990 (not c!3166)) b!23992))

(declare-fun m!18055 () Bool)

(assert (=> b!23991 m!18055))

(assert (=> d!4111 d!4225))

(declare-fun d!4227 () Bool)

(assert (=> d!4227 (= (getValueByKey!61 lt!8756 (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (Some!66 (_2!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(declare-fun lt!8934 () Unit!512)

(declare-fun choose!213 (List!568 (_ BitVec 64) V!1189) Unit!512)

(assert (=> d!4227 (= lt!8934 (choose!213 lt!8756 (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (_2!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(declare-fun e!15548 () Bool)

(assert (=> d!4227 e!15548))

(declare-fun res!14684 () Bool)

(assert (=> d!4227 (=> (not res!14684) (not e!15548))))

(declare-fun isStrictlySorted!171 (List!568) Bool)

(assert (=> d!4227 (= res!14684 (isStrictlySorted!171 lt!8756))))

(assert (=> d!4227 (= (lemmaContainsTupThenGetReturnValue!18 lt!8756 (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (_2!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) lt!8934)))

(declare-fun b!23997 () Bool)

(declare-fun res!14685 () Bool)

(assert (=> b!23997 (=> (not res!14685) (not e!15548))))

(assert (=> b!23997 (= res!14685 (containsKey!25 lt!8756 (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(declare-fun b!23998 () Bool)

(assert (=> b!23998 (= e!15548 (contains!232 lt!8756 (tuple2!961 (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (_2!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(assert (= (and d!4227 res!14684) b!23997))

(assert (= (and b!23997 res!14685) b!23998))

(assert (=> d!4227 m!17601))

(declare-fun m!18057 () Bool)

(assert (=> d!4227 m!18057))

(declare-fun m!18059 () Bool)

(assert (=> d!4227 m!18059))

(declare-fun m!18061 () Bool)

(assert (=> b!23997 m!18061))

(declare-fun m!18063 () Bool)

(assert (=> b!23998 m!18063))

(assert (=> d!4111 d!4227))

(declare-fun b!24019 () Bool)

(declare-fun e!15562 () List!568)

(declare-fun e!15559 () List!568)

(assert (=> b!24019 (= e!15562 e!15559)))

(declare-fun c!3178 () Bool)

(assert (=> b!24019 (= c!3178 (and ((_ is Cons!564) (toList!299 call!1941)) (= (_1!489 (h!1130 (toList!299 call!1941))) (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(declare-fun b!24020 () Bool)

(declare-fun res!14691 () Bool)

(declare-fun e!15563 () Bool)

(assert (=> b!24020 (=> (not res!14691) (not e!15563))))

(declare-fun lt!8937 () List!568)

(assert (=> b!24020 (= res!14691 (containsKey!25 lt!8937 (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(declare-fun d!4229 () Bool)

(assert (=> d!4229 e!15563))

(declare-fun res!14690 () Bool)

(assert (=> d!4229 (=> (not res!14690) (not e!15563))))

(assert (=> d!4229 (= res!14690 (isStrictlySorted!171 lt!8937))))

(assert (=> d!4229 (= lt!8937 e!15562)))

(declare-fun c!3176 () Bool)

(assert (=> d!4229 (= c!3176 (and ((_ is Cons!564) (toList!299 call!1941)) (bvslt (_1!489 (h!1130 (toList!299 call!1941))) (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(assert (=> d!4229 (isStrictlySorted!171 (toList!299 call!1941))))

(assert (=> d!4229 (= (insertStrictlySorted!18 (toList!299 call!1941) (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (_2!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) lt!8937)))

(declare-fun b!24021 () Bool)

(declare-fun call!2067 () List!568)

(assert (=> b!24021 (= e!15562 call!2067)))

(declare-fun b!24022 () Bool)

(declare-fun e!15560 () List!568)

(declare-fun call!2068 () List!568)

(assert (=> b!24022 (= e!15560 call!2068)))

(declare-fun b!24023 () Bool)

(assert (=> b!24023 (= e!15560 call!2068)))

(declare-fun bm!2064 () Bool)

(declare-fun call!2069 () List!568)

(assert (=> bm!2064 (= call!2069 call!2067)))

(declare-fun bm!2065 () Bool)

(assert (=> bm!2065 (= call!2068 call!2069)))

(declare-fun bm!2066 () Bool)

(declare-fun e!15561 () List!568)

(declare-fun $colon$colon!31 (List!568 tuple2!960) List!568)

(assert (=> bm!2066 (= call!2067 ($colon$colon!31 e!15561 (ite c!3176 (h!1130 (toList!299 call!1941)) (tuple2!961 (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (_2!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(declare-fun c!3177 () Bool)

(assert (=> bm!2066 (= c!3177 c!3176)))

(declare-fun c!3175 () Bool)

(declare-fun b!24024 () Bool)

(assert (=> b!24024 (= e!15561 (ite c!3178 (t!3239 (toList!299 call!1941)) (ite c!3175 (Cons!564 (h!1130 (toList!299 call!1941)) (t!3239 (toList!299 call!1941))) Nil!565)))))

(declare-fun b!24025 () Bool)

(assert (=> b!24025 (= e!15563 (contains!232 lt!8937 (tuple2!961 (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (_2!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(declare-fun b!24026 () Bool)

(assert (=> b!24026 (= c!3175 (and ((_ is Cons!564) (toList!299 call!1941)) (bvsgt (_1!489 (h!1130 (toList!299 call!1941))) (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(assert (=> b!24026 (= e!15559 e!15560)))

(declare-fun b!24027 () Bool)

(assert (=> b!24027 (= e!15561 (insertStrictlySorted!18 (t!3239 (toList!299 call!1941)) (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (_2!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(declare-fun b!24028 () Bool)

(assert (=> b!24028 (= e!15559 call!2069)))

(assert (= (and d!4229 c!3176) b!24021))

(assert (= (and d!4229 (not c!3176)) b!24019))

(assert (= (and b!24019 c!3178) b!24028))

(assert (= (and b!24019 (not c!3178)) b!24026))

(assert (= (and b!24026 c!3175) b!24022))

(assert (= (and b!24026 (not c!3175)) b!24023))

(assert (= (or b!24022 b!24023) bm!2065))

(assert (= (or b!24028 bm!2065) bm!2064))

(assert (= (or b!24021 bm!2064) bm!2066))

(assert (= (and bm!2066 c!3177) b!24027))

(assert (= (and bm!2066 (not c!3177)) b!24024))

(assert (= (and d!4229 res!14690) b!24020))

(assert (= (and b!24020 res!14691) b!24025))

(declare-fun m!18065 () Bool)

(assert (=> d!4229 m!18065))

(declare-fun m!18067 () Bool)

(assert (=> d!4229 m!18067))

(declare-fun m!18069 () Bool)

(assert (=> b!24027 m!18069))

(declare-fun m!18071 () Bool)

(assert (=> b!24020 m!18071))

(declare-fun m!18073 () Bool)

(assert (=> b!24025 m!18073))

(declare-fun m!18075 () Bool)

(assert (=> bm!2066 m!18075))

(assert (=> d!4111 d!4229))

(declare-fun d!4231 () Bool)

(declare-fun e!15564 () Bool)

(assert (=> d!4231 e!15564))

(declare-fun res!14692 () Bool)

(assert (=> d!4231 (=> (not res!14692) (not e!15564))))

(declare-fun lt!8940 () ListLongMap!567)

(assert (=> d!4231 (= res!14692 (contains!230 lt!8940 (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8161)))))))

(declare-fun lt!8939 () List!568)

(assert (=> d!4231 (= lt!8940 (ListLongMap!568 lt!8939))))

(declare-fun lt!8938 () Unit!512)

(declare-fun lt!8941 () Unit!512)

(assert (=> d!4231 (= lt!8938 lt!8941)))

(assert (=> d!4231 (= (getValueByKey!61 lt!8939 (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8161)))) (Some!66 (_2!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8161)))))))

(assert (=> d!4231 (= lt!8941 (lemmaContainsTupThenGetReturnValue!18 lt!8939 (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8161))) (_2!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8161)))))))

(assert (=> d!4231 (= lt!8939 (insertStrictlySorted!18 (toList!299 call!2039) (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8161))) (_2!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8161)))))))

(assert (=> d!4231 (= (+!45 call!2039 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8161))) lt!8940)))

(declare-fun b!24029 () Bool)

(declare-fun res!14693 () Bool)

(assert (=> b!24029 (=> (not res!14693) (not e!15564))))

(assert (=> b!24029 (= res!14693 (= (getValueByKey!61 (toList!299 lt!8940) (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8161)))) (Some!66 (_2!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8161))))))))

(declare-fun b!24030 () Bool)

(assert (=> b!24030 (= e!15564 (contains!232 (toList!299 lt!8940) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8161))))))

(assert (= (and d!4231 res!14692) b!24029))

(assert (= (and b!24029 res!14693) b!24030))

(declare-fun m!18077 () Bool)

(assert (=> d!4231 m!18077))

(declare-fun m!18079 () Bool)

(assert (=> d!4231 m!18079))

(declare-fun m!18081 () Bool)

(assert (=> d!4231 m!18081))

(declare-fun m!18083 () Bool)

(assert (=> d!4231 m!18083))

(declare-fun m!18085 () Bool)

(assert (=> b!24029 m!18085))

(declare-fun m!18087 () Bool)

(assert (=> b!24030 m!18087))

(assert (=> b!23775 d!4231))

(declare-fun d!4233 () Bool)

(declare-fun e!15565 () Bool)

(assert (=> d!4233 e!15565))

(declare-fun res!14694 () Bool)

(assert (=> d!4233 (=> (not res!14694) (not e!15565))))

(declare-fun lt!8944 () ListLongMap!567)

(assert (=> d!4233 (= res!14694 (contains!230 lt!8944 (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8161)))))))

(declare-fun lt!8943 () List!568)

(assert (=> d!4233 (= lt!8944 (ListLongMap!568 lt!8943))))

(declare-fun lt!8942 () Unit!512)

(declare-fun lt!8945 () Unit!512)

(assert (=> d!4233 (= lt!8942 lt!8945)))

(assert (=> d!4233 (= (getValueByKey!61 lt!8943 (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8161)))) (Some!66 (_2!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8161)))))))

(assert (=> d!4233 (= lt!8945 (lemmaContainsTupThenGetReturnValue!18 lt!8943 (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8161))) (_2!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8161)))))))

(assert (=> d!4233 (= lt!8943 (insertStrictlySorted!18 (toList!299 call!2011) (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8161))) (_2!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8161)))))))

(assert (=> d!4233 (= (+!45 call!2011 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8161))) lt!8944)))

(declare-fun b!24031 () Bool)

(declare-fun res!14695 () Bool)

(assert (=> b!24031 (=> (not res!14695) (not e!15565))))

(assert (=> b!24031 (= res!14695 (= (getValueByKey!61 (toList!299 lt!8944) (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8161)))) (Some!66 (_2!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8161))))))))

(declare-fun b!24032 () Bool)

(assert (=> b!24032 (= e!15565 (contains!232 (toList!299 lt!8944) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8161))))))

(assert (= (and d!4233 res!14694) b!24031))

(assert (= (and b!24031 res!14695) b!24032))

(declare-fun m!18089 () Bool)

(assert (=> d!4233 m!18089))

(declare-fun m!18091 () Bool)

(assert (=> d!4233 m!18091))

(declare-fun m!18093 () Bool)

(assert (=> d!4233 m!18093))

(declare-fun m!18095 () Bool)

(assert (=> d!4233 m!18095))

(declare-fun m!18097 () Bool)

(assert (=> b!24031 m!18097))

(declare-fun m!18099 () Bool)

(assert (=> b!24032 m!18099))

(assert (=> b!23653 d!4233))

(declare-fun b!24044 () Bool)

(declare-fun e!15568 () Bool)

(assert (=> b!24044 (= e!15568 (and (bvsge (extraKeys!1641 (_2!487 lt!8276)) #b00000000000000000000000000000000) (bvsle (extraKeys!1641 (_2!487 lt!8276)) #b00000000000000000000000000000011) (bvsge (_vacant!150 (_2!487 lt!8276)) #b00000000000000000000000000000000)))))

(declare-fun b!24041 () Bool)

(declare-fun res!14704 () Bool)

(assert (=> b!24041 (=> (not res!14704) (not e!15568))))

(assert (=> b!24041 (= res!14704 (and (= (size!703 (_values!1729 (_2!487 lt!8276))) (bvadd (mask!4730 (_2!487 lt!8276)) #b00000000000000000000000000000001)) (= (size!704 (_keys!3164 (_2!487 lt!8276))) (size!703 (_values!1729 (_2!487 lt!8276)))) (bvsge (_size!150 (_2!487 lt!8276)) #b00000000000000000000000000000000) (bvsle (_size!150 (_2!487 lt!8276)) (bvadd (mask!4730 (_2!487 lt!8276)) #b00000000000000000000000000000001))))))

(declare-fun b!24042 () Bool)

(declare-fun res!14705 () Bool)

(assert (=> b!24042 (=> (not res!14705) (not e!15568))))

(declare-fun size!711 (LongMapFixedSize!210) (_ BitVec 32))

(assert (=> b!24042 (= res!14705 (bvsge (size!711 (_2!487 lt!8276)) (_size!150 (_2!487 lt!8276))))))

(declare-fun b!24043 () Bool)

(declare-fun res!14707 () Bool)

(assert (=> b!24043 (=> (not res!14707) (not e!15568))))

(assert (=> b!24043 (= res!14707 (= (size!711 (_2!487 lt!8276)) (bvadd (_size!150 (_2!487 lt!8276)) (bvsdiv (bvadd (extraKeys!1641 (_2!487 lt!8276)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun d!4235 () Bool)

(declare-fun res!14706 () Bool)

(assert (=> d!4235 (=> (not res!14706) (not e!15568))))

(assert (=> d!4235 (= res!14706 (validMask!0 (mask!4730 (_2!487 lt!8276))))))

(assert (=> d!4235 (= (simpleValid!20 (_2!487 lt!8276)) e!15568)))

(assert (= (and d!4235 res!14706) b!24041))

(assert (= (and b!24041 res!14704) b!24042))

(assert (= (and b!24042 res!14705) b!24043))

(assert (= (and b!24043 res!14707) b!24044))

(declare-fun m!18101 () Bool)

(assert (=> b!24042 m!18101))

(assert (=> b!24043 m!18101))

(declare-fun m!18103 () Bool)

(assert (=> d!4235 m!18103))

(assert (=> d!4049 d!4235))

(assert (=> d!4087 d!4053))

(declare-fun d!4237 () Bool)

(declare-fun e!15571 () Bool)

(assert (=> d!4237 e!15571))

(declare-fun res!14712 () Bool)

(assert (=> d!4237 (=> (not res!14712) (not e!15571))))

(declare-fun lt!8948 () SeekEntryResult!54)

(assert (=> d!4237 (= res!14712 ((_ is Found!54) lt!8948))))

(assert (=> d!4237 (= lt!8948 (seekEntryOrOpen!0 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (_keys!3164 lt!8161) (mask!4730 lt!8161)))))

(assert (=> d!4237 true))

(declare-fun _$33!35 () Unit!512)

(assert (=> d!4237 (= (choose!208 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (defaultEntry!1743 lt!8161)) _$33!35)))

(declare-fun b!24049 () Bool)

(declare-fun res!14713 () Bool)

(assert (=> b!24049 (=> (not res!14713) (not e!15571))))

(assert (=> b!24049 (= res!14713 (inRange!0 (index!2338 lt!8948) (mask!4730 lt!8161)))))

(declare-fun b!24050 () Bool)

(assert (=> b!24050 (= e!15571 (= (select (arr!608 (_keys!3164 lt!8161)) (index!2338 lt!8948)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!4237 res!14712) b!24049))

(assert (= (and b!24049 res!14713) b!24050))

(assert (=> d!4237 m!16828))

(declare-fun m!18105 () Bool)

(assert (=> b!24049 m!18105))

(declare-fun m!18107 () Bool)

(assert (=> b!24050 m!18107))

(assert (=> d!4087 d!4237))

(declare-fun d!4239 () Bool)

(assert (=> d!4239 (= (validMask!0 (mask!4730 lt!8161)) (and (or (= (mask!4730 lt!8161) #b00000000000000000000000000000111) (= (mask!4730 lt!8161) #b00000000000000000000000000001111) (= (mask!4730 lt!8161) #b00000000000000000000000000011111) (= (mask!4730 lt!8161) #b00000000000000000000000000111111) (= (mask!4730 lt!8161) #b00000000000000000000000001111111) (= (mask!4730 lt!8161) #b00000000000000000000000011111111) (= (mask!4730 lt!8161) #b00000000000000000000000111111111) (= (mask!4730 lt!8161) #b00000000000000000000001111111111) (= (mask!4730 lt!8161) #b00000000000000000000011111111111) (= (mask!4730 lt!8161) #b00000000000000000000111111111111) (= (mask!4730 lt!8161) #b00000000000000000001111111111111) (= (mask!4730 lt!8161) #b00000000000000000011111111111111) (= (mask!4730 lt!8161) #b00000000000000000111111111111111) (= (mask!4730 lt!8161) #b00000000000000001111111111111111) (= (mask!4730 lt!8161) #b00000000000000011111111111111111) (= (mask!4730 lt!8161) #b00000000000000111111111111111111) (= (mask!4730 lt!8161) #b00000000000001111111111111111111) (= (mask!4730 lt!8161) #b00000000000011111111111111111111) (= (mask!4730 lt!8161) #b00000000000111111111111111111111) (= (mask!4730 lt!8161) #b00000000001111111111111111111111) (= (mask!4730 lt!8161) #b00000000011111111111111111111111) (= (mask!4730 lt!8161) #b00000000111111111111111111111111) (= (mask!4730 lt!8161) #b00000001111111111111111111111111) (= (mask!4730 lt!8161) #b00000011111111111111111111111111) (= (mask!4730 lt!8161) #b00000111111111111111111111111111) (= (mask!4730 lt!8161) #b00001111111111111111111111111111) (= (mask!4730 lt!8161) #b00011111111111111111111111111111) (= (mask!4730 lt!8161) #b00111111111111111111111111111111)) (bvsle (mask!4730 lt!8161) #b00111111111111111111111111111111)))))

(assert (=> d!4087 d!4239))

(assert (=> b!23626 d!4137))

(declare-fun d!4241 () Bool)

(declare-fun e!15572 () Bool)

(assert (=> d!4241 e!15572))

(declare-fun res!14714 () Bool)

(assert (=> d!4241 (=> (not res!14714) (not e!15572))))

(declare-fun lt!8951 () ListLongMap!567)

(assert (=> d!4241 (= res!14714 (contains!230 lt!8951 (_1!489 (tuple2!961 lt!8544 (ite (and c!2984 c!2983) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (zeroValue!1666 lt!8161))))))))

(declare-fun lt!8950 () List!568)

(assert (=> d!4241 (= lt!8951 (ListLongMap!568 lt!8950))))

(declare-fun lt!8949 () Unit!512)

(declare-fun lt!8952 () Unit!512)

(assert (=> d!4241 (= lt!8949 lt!8952)))

(assert (=> d!4241 (= (getValueByKey!61 lt!8950 (_1!489 (tuple2!961 lt!8544 (ite (and c!2984 c!2983) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (zeroValue!1666 lt!8161))))) (Some!66 (_2!489 (tuple2!961 lt!8544 (ite (and c!2984 c!2983) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (zeroValue!1666 lt!8161))))))))

(assert (=> d!4241 (= lt!8952 (lemmaContainsTupThenGetReturnValue!18 lt!8950 (_1!489 (tuple2!961 lt!8544 (ite (and c!2984 c!2983) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (zeroValue!1666 lt!8161)))) (_2!489 (tuple2!961 lt!8544 (ite (and c!2984 c!2983) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (zeroValue!1666 lt!8161))))))))

(assert (=> d!4241 (= lt!8950 (insertStrictlySorted!18 (toList!299 lt!8541) (_1!489 (tuple2!961 lt!8544 (ite (and c!2984 c!2983) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (zeroValue!1666 lt!8161)))) (_2!489 (tuple2!961 lt!8544 (ite (and c!2984 c!2983) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (zeroValue!1666 lt!8161))))))))

(assert (=> d!4241 (= (+!45 lt!8541 (tuple2!961 lt!8544 (ite (and c!2984 c!2983) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (zeroValue!1666 lt!8161)))) lt!8951)))

(declare-fun b!24051 () Bool)

(declare-fun res!14715 () Bool)

(assert (=> b!24051 (=> (not res!14715) (not e!15572))))

(assert (=> b!24051 (= res!14715 (= (getValueByKey!61 (toList!299 lt!8951) (_1!489 (tuple2!961 lt!8544 (ite (and c!2984 c!2983) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (zeroValue!1666 lt!8161))))) (Some!66 (_2!489 (tuple2!961 lt!8544 (ite (and c!2984 c!2983) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (zeroValue!1666 lt!8161)))))))))

(declare-fun b!24052 () Bool)

(assert (=> b!24052 (= e!15572 (contains!232 (toList!299 lt!8951) (tuple2!961 lt!8544 (ite (and c!2984 c!2983) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (zeroValue!1666 lt!8161)))))))

(assert (= (and d!4241 res!14714) b!24051))

(assert (= (and b!24051 res!14715) b!24052))

(declare-fun m!18109 () Bool)

(assert (=> d!4241 m!18109))

(declare-fun m!18111 () Bool)

(assert (=> d!4241 m!18111))

(declare-fun m!18113 () Bool)

(assert (=> d!4241 m!18113))

(declare-fun m!18115 () Bool)

(assert (=> d!4241 m!18115))

(declare-fun m!18117 () Bool)

(assert (=> b!24051 m!18117))

(declare-fun m!18119 () Bool)

(assert (=> b!24052 m!18119))

(assert (=> b!23626 d!4241))

(declare-fun d!4243 () Bool)

(assert (=> d!4243 (= (apply!29 (+!45 lt!8542 (tuple2!961 lt!8537 (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161)))) lt!8529) (get!391 (getValueByKey!61 (toList!299 (+!45 lt!8542 (tuple2!961 lt!8537 (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161))))) lt!8529)))))

(declare-fun bs!981 () Bool)

(assert (= bs!981 d!4243))

(declare-fun m!18121 () Bool)

(assert (=> bs!981 m!18121))

(assert (=> bs!981 m!18121))

(declare-fun m!18123 () Bool)

(assert (=> bs!981 m!18123))

(assert (=> b!23626 d!4243))

(declare-fun d!4245 () Bool)

(assert (=> d!4245 (contains!230 (+!45 lt!8543 (tuple2!961 lt!8538 (ite (and c!2984 c!2983) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (zeroValue!1666 lt!8161)))) lt!8547)))

(declare-fun lt!8953 () Unit!512)

(assert (=> d!4245 (= lt!8953 (choose!211 lt!8543 lt!8538 (ite (and c!2984 c!2983) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (zeroValue!1666 lt!8161)) lt!8547))))

(assert (=> d!4245 (contains!230 lt!8543 lt!8547)))

(assert (=> d!4245 (= (addStillContains!14 lt!8543 lt!8538 (ite (and c!2984 c!2983) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (zeroValue!1666 lt!8161)) lt!8547) lt!8953)))

(declare-fun bs!982 () Bool)

(assert (= bs!982 d!4245))

(assert (=> bs!982 m!17216))

(assert (=> bs!982 m!17216))

(assert (=> bs!982 m!17218))

(declare-fun m!18125 () Bool)

(assert (=> bs!982 m!18125))

(declare-fun m!18127 () Bool)

(assert (=> bs!982 m!18127))

(assert (=> b!23626 d!4245))

(declare-fun d!4247 () Bool)

(assert (=> d!4247 (= (apply!29 (+!45 lt!8542 (tuple2!961 lt!8537 (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161)))) lt!8529) (apply!29 lt!8542 lt!8529))))

(declare-fun lt!8954 () Unit!512)

(assert (=> d!4247 (= lt!8954 (choose!210 lt!8542 lt!8537 (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161)) lt!8529))))

(declare-fun e!15573 () Bool)

(assert (=> d!4247 e!15573))

(declare-fun res!14716 () Bool)

(assert (=> d!4247 (=> (not res!14716) (not e!15573))))

(assert (=> d!4247 (= res!14716 (contains!230 lt!8542 lt!8529))))

(assert (=> d!4247 (= (addApplyDifferent!14 lt!8542 lt!8537 (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161)) lt!8529) lt!8954)))

(declare-fun b!24053 () Bool)

(assert (=> b!24053 (= e!15573 (not (= lt!8529 lt!8537)))))

(assert (= (and d!4247 res!14716) b!24053))

(assert (=> d!4247 m!17222))

(assert (=> d!4247 m!17224))

(assert (=> d!4247 m!17222))

(declare-fun m!18129 () Bool)

(assert (=> d!4247 m!18129))

(declare-fun m!18131 () Bool)

(assert (=> d!4247 m!18131))

(assert (=> d!4247 m!17206))

(assert (=> b!23626 d!4247))

(declare-fun d!4249 () Bool)

(assert (=> d!4249 (= (apply!29 lt!8542 lt!8529) (get!391 (getValueByKey!61 (toList!299 lt!8542) lt!8529)))))

(declare-fun bs!983 () Bool)

(assert (= bs!983 d!4249))

(declare-fun m!18133 () Bool)

(assert (=> bs!983 m!18133))

(assert (=> bs!983 m!18133))

(declare-fun m!18135 () Bool)

(assert (=> bs!983 m!18135))

(assert (=> b!23626 d!4249))

(declare-fun d!4251 () Bool)

(assert (=> d!4251 (= (apply!29 (+!45 lt!8534 (tuple2!961 lt!8549 (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161)))) lt!8548) (get!391 (getValueByKey!61 (toList!299 (+!45 lt!8534 (tuple2!961 lt!8549 (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161))))) lt!8548)))))

(declare-fun bs!984 () Bool)

(assert (= bs!984 d!4251))

(declare-fun m!18137 () Bool)

(assert (=> bs!984 m!18137))

(assert (=> bs!984 m!18137))

(declare-fun m!18139 () Bool)

(assert (=> bs!984 m!18139))

(assert (=> b!23626 d!4251))

(declare-fun d!4253 () Bool)

(assert (=> d!4253 (= (apply!29 lt!8541 lt!8530) (get!391 (getValueByKey!61 (toList!299 lt!8541) lt!8530)))))

(declare-fun bs!985 () Bool)

(assert (= bs!985 d!4253))

(declare-fun m!18141 () Bool)

(assert (=> bs!985 m!18141))

(assert (=> bs!985 m!18141))

(declare-fun m!18143 () Bool)

(assert (=> bs!985 m!18143))

(assert (=> b!23626 d!4253))

(declare-fun d!4255 () Bool)

(declare-fun e!15574 () Bool)

(assert (=> d!4255 e!15574))

(declare-fun res!14717 () Bool)

(assert (=> d!4255 (=> res!14717 e!15574)))

(declare-fun lt!8955 () Bool)

(assert (=> d!4255 (= res!14717 (not lt!8955))))

(declare-fun lt!8956 () Bool)

(assert (=> d!4255 (= lt!8955 lt!8956)))

(declare-fun lt!8957 () Unit!512)

(declare-fun e!15575 () Unit!512)

(assert (=> d!4255 (= lt!8957 e!15575)))

(declare-fun c!3179 () Bool)

(assert (=> d!4255 (= c!3179 lt!8956)))

(assert (=> d!4255 (= lt!8956 (containsKey!25 (toList!299 (+!45 lt!8543 (tuple2!961 lt!8538 (ite (and c!2984 c!2983) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (zeroValue!1666 lt!8161))))) lt!8547))))

(assert (=> d!4255 (= (contains!230 (+!45 lt!8543 (tuple2!961 lt!8538 (ite (and c!2984 c!2983) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (zeroValue!1666 lt!8161)))) lt!8547) lt!8955)))

(declare-fun b!24054 () Bool)

(declare-fun lt!8958 () Unit!512)

(assert (=> b!24054 (= e!15575 lt!8958)))

(assert (=> b!24054 (= lt!8958 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!299 (+!45 lt!8543 (tuple2!961 lt!8538 (ite (and c!2984 c!2983) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (zeroValue!1666 lt!8161))))) lt!8547))))

(assert (=> b!24054 (isDefined!23 (getValueByKey!61 (toList!299 (+!45 lt!8543 (tuple2!961 lt!8538 (ite (and c!2984 c!2983) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (zeroValue!1666 lt!8161))))) lt!8547))))

(declare-fun b!24055 () Bool)

(declare-fun Unit!549 () Unit!512)

(assert (=> b!24055 (= e!15575 Unit!549)))

(declare-fun b!24056 () Bool)

(assert (=> b!24056 (= e!15574 (isDefined!23 (getValueByKey!61 (toList!299 (+!45 lt!8543 (tuple2!961 lt!8538 (ite (and c!2984 c!2983) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (zeroValue!1666 lt!8161))))) lt!8547)))))

(assert (= (and d!4255 c!3179) b!24054))

(assert (= (and d!4255 (not c!3179)) b!24055))

(assert (= (and d!4255 (not res!14717)) b!24056))

(declare-fun m!18145 () Bool)

(assert (=> d!4255 m!18145))

(declare-fun m!18147 () Bool)

(assert (=> b!24054 m!18147))

(declare-fun m!18149 () Bool)

(assert (=> b!24054 m!18149))

(assert (=> b!24054 m!18149))

(declare-fun m!18151 () Bool)

(assert (=> b!24054 m!18151))

(assert (=> b!24056 m!18149))

(assert (=> b!24056 m!18149))

(assert (=> b!24056 m!18151))

(assert (=> b!23626 d!4255))

(declare-fun d!4257 () Bool)

(assert (=> d!4257 (= (apply!29 (+!45 lt!8541 (tuple2!961 lt!8544 (ite (and c!2984 c!2983) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (zeroValue!1666 lt!8161)))) lt!8530) (apply!29 lt!8541 lt!8530))))

(declare-fun lt!8959 () Unit!512)

(assert (=> d!4257 (= lt!8959 (choose!210 lt!8541 lt!8544 (ite (and c!2984 c!2983) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (zeroValue!1666 lt!8161)) lt!8530))))

(declare-fun e!15576 () Bool)

(assert (=> d!4257 e!15576))

(declare-fun res!14718 () Bool)

(assert (=> d!4257 (=> (not res!14718) (not e!15576))))

(assert (=> d!4257 (= res!14718 (contains!230 lt!8541 lt!8530))))

(assert (=> d!4257 (= (addApplyDifferent!14 lt!8541 lt!8544 (ite (and c!2984 c!2983) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (zeroValue!1666 lt!8161)) lt!8530) lt!8959)))

(declare-fun b!24057 () Bool)

(assert (=> b!24057 (= e!15576 (not (= lt!8530 lt!8544)))))

(assert (= (and d!4257 res!14718) b!24057))

(assert (=> d!4257 m!17208))

(assert (=> d!4257 m!17212))

(assert (=> d!4257 m!17208))

(declare-fun m!18153 () Bool)

(assert (=> d!4257 m!18153))

(declare-fun m!18155 () Bool)

(assert (=> d!4257 m!18155))

(assert (=> d!4257 m!17232))

(assert (=> b!23626 d!4257))

(declare-fun d!4259 () Bool)

(assert (=> d!4259 (= (apply!29 (+!45 lt!8534 (tuple2!961 lt!8549 (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161)))) lt!8548) (apply!29 lt!8534 lt!8548))))

(declare-fun lt!8960 () Unit!512)

(assert (=> d!4259 (= lt!8960 (choose!210 lt!8534 lt!8549 (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161)) lt!8548))))

(declare-fun e!15577 () Bool)

(assert (=> d!4259 e!15577))

(declare-fun res!14719 () Bool)

(assert (=> d!4259 (=> (not res!14719) (not e!15577))))

(assert (=> d!4259 (= res!14719 (contains!230 lt!8534 lt!8548))))

(assert (=> d!4259 (= (addApplyDifferent!14 lt!8534 lt!8549 (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161)) lt!8548) lt!8960)))

(declare-fun b!24058 () Bool)

(assert (=> b!24058 (= e!15577 (not (= lt!8548 lt!8549)))))

(assert (= (and d!4259 res!14719) b!24058))

(assert (=> d!4259 m!17210))

(assert (=> d!4259 m!17226))

(assert (=> d!4259 m!17210))

(declare-fun m!18157 () Bool)

(assert (=> d!4259 m!18157))

(declare-fun m!18159 () Bool)

(assert (=> d!4259 m!18159))

(assert (=> d!4259 m!17228))

(assert (=> b!23626 d!4259))

(declare-fun d!4261 () Bool)

(assert (=> d!4261 (= (apply!29 (+!45 lt!8541 (tuple2!961 lt!8544 (ite (and c!2984 c!2983) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (zeroValue!1666 lt!8161)))) lt!8530) (get!391 (getValueByKey!61 (toList!299 (+!45 lt!8541 (tuple2!961 lt!8544 (ite (and c!2984 c!2983) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (zeroValue!1666 lt!8161))))) lt!8530)))))

(declare-fun bs!986 () Bool)

(assert (= bs!986 d!4261))

(declare-fun m!18161 () Bool)

(assert (=> bs!986 m!18161))

(assert (=> bs!986 m!18161))

(declare-fun m!18163 () Bool)

(assert (=> bs!986 m!18163))

(assert (=> b!23626 d!4261))

(declare-fun d!4263 () Bool)

(declare-fun e!15578 () Bool)

(assert (=> d!4263 e!15578))

(declare-fun res!14720 () Bool)

(assert (=> d!4263 (=> (not res!14720) (not e!15578))))

(declare-fun lt!8963 () ListLongMap!567)

(assert (=> d!4263 (= res!14720 (contains!230 lt!8963 (_1!489 (tuple2!961 lt!8537 (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161))))))))

(declare-fun lt!8962 () List!568)

(assert (=> d!4263 (= lt!8963 (ListLongMap!568 lt!8962))))

(declare-fun lt!8961 () Unit!512)

(declare-fun lt!8964 () Unit!512)

(assert (=> d!4263 (= lt!8961 lt!8964)))

(assert (=> d!4263 (= (getValueByKey!61 lt!8962 (_1!489 (tuple2!961 lt!8537 (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161))))) (Some!66 (_2!489 (tuple2!961 lt!8537 (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161))))))))

(assert (=> d!4263 (= lt!8964 (lemmaContainsTupThenGetReturnValue!18 lt!8962 (_1!489 (tuple2!961 lt!8537 (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161)))) (_2!489 (tuple2!961 lt!8537 (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161))))))))

(assert (=> d!4263 (= lt!8962 (insertStrictlySorted!18 (toList!299 lt!8542) (_1!489 (tuple2!961 lt!8537 (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161)))) (_2!489 (tuple2!961 lt!8537 (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161))))))))

(assert (=> d!4263 (= (+!45 lt!8542 (tuple2!961 lt!8537 (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161)))) lt!8963)))

(declare-fun b!24059 () Bool)

(declare-fun res!14721 () Bool)

(assert (=> b!24059 (=> (not res!14721) (not e!15578))))

(assert (=> b!24059 (= res!14721 (= (getValueByKey!61 (toList!299 lt!8963) (_1!489 (tuple2!961 lt!8537 (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161))))) (Some!66 (_2!489 (tuple2!961 lt!8537 (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161)))))))))

(declare-fun b!24060 () Bool)

(assert (=> b!24060 (= e!15578 (contains!232 (toList!299 lt!8963) (tuple2!961 lt!8537 (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161)))))))

(assert (= (and d!4263 res!14720) b!24059))

(assert (= (and b!24059 res!14721) b!24060))

(declare-fun m!18165 () Bool)

(assert (=> d!4263 m!18165))

(declare-fun m!18167 () Bool)

(assert (=> d!4263 m!18167))

(declare-fun m!18169 () Bool)

(assert (=> d!4263 m!18169))

(declare-fun m!18171 () Bool)

(assert (=> d!4263 m!18171))

(declare-fun m!18173 () Bool)

(assert (=> b!24059 m!18173))

(declare-fun m!18175 () Bool)

(assert (=> b!24060 m!18175))

(assert (=> b!23626 d!4263))

(declare-fun d!4265 () Bool)

(declare-fun e!15579 () Bool)

(assert (=> d!4265 e!15579))

(declare-fun res!14722 () Bool)

(assert (=> d!4265 (=> (not res!14722) (not e!15579))))

(declare-fun lt!8967 () ListLongMap!567)

(assert (=> d!4265 (= res!14722 (contains!230 lt!8967 (_1!489 (tuple2!961 lt!8549 (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161))))))))

(declare-fun lt!8966 () List!568)

(assert (=> d!4265 (= lt!8967 (ListLongMap!568 lt!8966))))

(declare-fun lt!8965 () Unit!512)

(declare-fun lt!8968 () Unit!512)

(assert (=> d!4265 (= lt!8965 lt!8968)))

(assert (=> d!4265 (= (getValueByKey!61 lt!8966 (_1!489 (tuple2!961 lt!8549 (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161))))) (Some!66 (_2!489 (tuple2!961 lt!8549 (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161))))))))

(assert (=> d!4265 (= lt!8968 (lemmaContainsTupThenGetReturnValue!18 lt!8966 (_1!489 (tuple2!961 lt!8549 (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161)))) (_2!489 (tuple2!961 lt!8549 (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161))))))))

(assert (=> d!4265 (= lt!8966 (insertStrictlySorted!18 (toList!299 lt!8534) (_1!489 (tuple2!961 lt!8549 (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161)))) (_2!489 (tuple2!961 lt!8549 (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161))))))))

(assert (=> d!4265 (= (+!45 lt!8534 (tuple2!961 lt!8549 (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161)))) lt!8967)))

(declare-fun b!24061 () Bool)

(declare-fun res!14723 () Bool)

(assert (=> b!24061 (=> (not res!14723) (not e!15579))))

(assert (=> b!24061 (= res!14723 (= (getValueByKey!61 (toList!299 lt!8967) (_1!489 (tuple2!961 lt!8549 (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161))))) (Some!66 (_2!489 (tuple2!961 lt!8549 (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161)))))))))

(declare-fun b!24062 () Bool)

(assert (=> b!24062 (= e!15579 (contains!232 (toList!299 lt!8967) (tuple2!961 lt!8549 (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161)))))))

(assert (= (and d!4265 res!14722) b!24061))

(assert (= (and b!24061 res!14723) b!24062))

(declare-fun m!18177 () Bool)

(assert (=> d!4265 m!18177))

(declare-fun m!18179 () Bool)

(assert (=> d!4265 m!18179))

(declare-fun m!18181 () Bool)

(assert (=> d!4265 m!18181))

(declare-fun m!18183 () Bool)

(assert (=> d!4265 m!18183))

(declare-fun m!18185 () Bool)

(assert (=> b!24061 m!18185))

(declare-fun m!18187 () Bool)

(assert (=> b!24062 m!18187))

(assert (=> b!23626 d!4265))

(declare-fun d!4267 () Bool)

(declare-fun e!15580 () Bool)

(assert (=> d!4267 e!15580))

(declare-fun res!14724 () Bool)

(assert (=> d!4267 (=> (not res!14724) (not e!15580))))

(declare-fun lt!8971 () ListLongMap!567)

(assert (=> d!4267 (= res!14724 (contains!230 lt!8971 (_1!489 (tuple2!961 lt!8538 (ite (and c!2984 c!2983) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (zeroValue!1666 lt!8161))))))))

(declare-fun lt!8970 () List!568)

(assert (=> d!4267 (= lt!8971 (ListLongMap!568 lt!8970))))

(declare-fun lt!8969 () Unit!512)

(declare-fun lt!8972 () Unit!512)

(assert (=> d!4267 (= lt!8969 lt!8972)))

(assert (=> d!4267 (= (getValueByKey!61 lt!8970 (_1!489 (tuple2!961 lt!8538 (ite (and c!2984 c!2983) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (zeroValue!1666 lt!8161))))) (Some!66 (_2!489 (tuple2!961 lt!8538 (ite (and c!2984 c!2983) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (zeroValue!1666 lt!8161))))))))

(assert (=> d!4267 (= lt!8972 (lemmaContainsTupThenGetReturnValue!18 lt!8970 (_1!489 (tuple2!961 lt!8538 (ite (and c!2984 c!2983) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (zeroValue!1666 lt!8161)))) (_2!489 (tuple2!961 lt!8538 (ite (and c!2984 c!2983) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (zeroValue!1666 lt!8161))))))))

(assert (=> d!4267 (= lt!8970 (insertStrictlySorted!18 (toList!299 lt!8543) (_1!489 (tuple2!961 lt!8538 (ite (and c!2984 c!2983) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (zeroValue!1666 lt!8161)))) (_2!489 (tuple2!961 lt!8538 (ite (and c!2984 c!2983) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (zeroValue!1666 lt!8161))))))))

(assert (=> d!4267 (= (+!45 lt!8543 (tuple2!961 lt!8538 (ite (and c!2984 c!2983) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (zeroValue!1666 lt!8161)))) lt!8971)))

(declare-fun b!24063 () Bool)

(declare-fun res!14725 () Bool)

(assert (=> b!24063 (=> (not res!14725) (not e!15580))))

(assert (=> b!24063 (= res!14725 (= (getValueByKey!61 (toList!299 lt!8971) (_1!489 (tuple2!961 lt!8538 (ite (and c!2984 c!2983) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (zeroValue!1666 lt!8161))))) (Some!66 (_2!489 (tuple2!961 lt!8538 (ite (and c!2984 c!2983) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (zeroValue!1666 lt!8161)))))))))

(declare-fun b!24064 () Bool)

(assert (=> b!24064 (= e!15580 (contains!232 (toList!299 lt!8971) (tuple2!961 lt!8538 (ite (and c!2984 c!2983) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (zeroValue!1666 lt!8161)))))))

(assert (= (and d!4267 res!14724) b!24063))

(assert (= (and b!24063 res!14725) b!24064))

(declare-fun m!18189 () Bool)

(assert (=> d!4267 m!18189))

(declare-fun m!18191 () Bool)

(assert (=> d!4267 m!18191))

(declare-fun m!18193 () Bool)

(assert (=> d!4267 m!18193))

(declare-fun m!18195 () Bool)

(assert (=> d!4267 m!18195))

(declare-fun m!18197 () Bool)

(assert (=> b!24063 m!18197))

(declare-fun m!18199 () Bool)

(assert (=> b!24064 m!18199))

(assert (=> b!23626 d!4267))

(declare-fun d!4269 () Bool)

(assert (=> d!4269 (= (apply!29 lt!8534 lt!8548) (get!391 (getValueByKey!61 (toList!299 lt!8534) lt!8548)))))

(declare-fun bs!987 () Bool)

(assert (= bs!987 d!4269))

(declare-fun m!18201 () Bool)

(assert (=> bs!987 m!18201))

(assert (=> bs!987 m!18201))

(declare-fun m!18203 () Bool)

(assert (=> bs!987 m!18203))

(assert (=> b!23626 d!4269))

(declare-fun b!24068 () Bool)

(declare-fun e!15581 () Bool)

(assert (=> b!24068 (= e!15581 (and (bvsge (extraKeys!1641 lt!8161) #b00000000000000000000000000000000) (bvsle (extraKeys!1641 lt!8161) #b00000000000000000000000000000011) (bvsge (_vacant!150 lt!8161) #b00000000000000000000000000000000)))))

(declare-fun b!24065 () Bool)

(declare-fun res!14726 () Bool)

(assert (=> b!24065 (=> (not res!14726) (not e!15581))))

(assert (=> b!24065 (= res!14726 (and (= (size!703 (_values!1729 lt!8161)) (bvadd (mask!4730 lt!8161) #b00000000000000000000000000000001)) (= (size!704 (_keys!3164 lt!8161)) (size!703 (_values!1729 lt!8161))) (bvsge (_size!150 lt!8161) #b00000000000000000000000000000000) (bvsle (_size!150 lt!8161) (bvadd (mask!4730 lt!8161) #b00000000000000000000000000000001))))))

(declare-fun b!24066 () Bool)

(declare-fun res!14727 () Bool)

(assert (=> b!24066 (=> (not res!14727) (not e!15581))))

(assert (=> b!24066 (= res!14727 (bvsge (size!711 lt!8161) (_size!150 lt!8161)))))

(declare-fun b!24067 () Bool)

(declare-fun res!14729 () Bool)

(assert (=> b!24067 (=> (not res!14729) (not e!15581))))

(assert (=> b!24067 (= res!14729 (= (size!711 lt!8161) (bvadd (_size!150 lt!8161) (bvsdiv (bvadd (extraKeys!1641 lt!8161) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun d!4271 () Bool)

(declare-fun res!14728 () Bool)

(assert (=> d!4271 (=> (not res!14728) (not e!15581))))

(assert (=> d!4271 (= res!14728 (validMask!0 (mask!4730 lt!8161)))))

(assert (=> d!4271 (= (simpleValid!20 lt!8161) e!15581)))

(assert (= (and d!4271 res!14728) b!24065))

(assert (= (and b!24065 res!14726) b!24066))

(assert (= (and b!24066 res!14727) b!24067))

(assert (= (and b!24067 res!14729) b!24068))

(declare-fun m!18205 () Bool)

(assert (=> b!24066 m!18205))

(assert (=> b!24067 m!18205))

(assert (=> d!4271 m!17182))

(assert (=> d!4085 d!4271))

(declare-fun d!4273 () Bool)

(declare-fun e!15582 () Bool)

(assert (=> d!4273 e!15582))

(declare-fun res!14730 () Bool)

(assert (=> d!4273 (=> res!14730 e!15582)))

(declare-fun lt!8973 () Bool)

(assert (=> d!4273 (= res!14730 (not lt!8973))))

(declare-fun lt!8974 () Bool)

(assert (=> d!4273 (= lt!8973 lt!8974)))

(declare-fun lt!8975 () Unit!512)

(declare-fun e!15583 () Unit!512)

(assert (=> d!4273 (= lt!8975 e!15583)))

(declare-fun c!3180 () Bool)

(assert (=> d!4273 (= c!3180 lt!8974)))

(assert (=> d!4273 (= lt!8974 (containsKey!25 (toList!299 lt!8521) (_1!489 (ite c!2998 (ite c!2997 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(assert (=> d!4273 (= (contains!230 lt!8521 (_1!489 (ite c!2998 (ite c!2997 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) lt!8973)))

(declare-fun b!24069 () Bool)

(declare-fun lt!8976 () Unit!512)

(assert (=> b!24069 (= e!15583 lt!8976)))

(assert (=> b!24069 (= lt!8976 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!299 lt!8521) (_1!489 (ite c!2998 (ite c!2997 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(assert (=> b!24069 (isDefined!23 (getValueByKey!61 (toList!299 lt!8521) (_1!489 (ite c!2998 (ite c!2997 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(declare-fun b!24070 () Bool)

(declare-fun Unit!550 () Unit!512)

(assert (=> b!24070 (= e!15583 Unit!550)))

(declare-fun b!24071 () Bool)

(assert (=> b!24071 (= e!15582 (isDefined!23 (getValueByKey!61 (toList!299 lt!8521) (_1!489 (ite c!2998 (ite c!2997 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(assert (= (and d!4273 c!3180) b!24069))

(assert (= (and d!4273 (not c!3180)) b!24070))

(assert (= (and d!4273 (not res!14730)) b!24071))

(declare-fun m!18207 () Bool)

(assert (=> d!4273 m!18207))

(declare-fun m!18209 () Bool)

(assert (=> b!24069 m!18209))

(assert (=> b!24069 m!17148))

(assert (=> b!24069 m!17148))

(declare-fun m!18211 () Bool)

(assert (=> b!24069 m!18211))

(assert (=> b!24071 m!17148))

(assert (=> b!24071 m!17148))

(assert (=> b!24071 m!18211))

(assert (=> d!4041 d!4273))

(declare-fun d!4275 () Bool)

(declare-fun c!3181 () Bool)

(assert (=> d!4275 (= c!3181 (and ((_ is Cons!564) lt!8520) (= (_1!489 (h!1130 lt!8520)) (_1!489 (ite c!2998 (ite c!2997 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(declare-fun e!15584 () Option!67)

(assert (=> d!4275 (= (getValueByKey!61 lt!8520 (_1!489 (ite c!2998 (ite c!2997 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) e!15584)))

(declare-fun b!24072 () Bool)

(assert (=> b!24072 (= e!15584 (Some!66 (_2!489 (h!1130 lt!8520))))))

(declare-fun b!24075 () Bool)

(declare-fun e!15585 () Option!67)

(assert (=> b!24075 (= e!15585 None!65)))

(declare-fun b!24073 () Bool)

(assert (=> b!24073 (= e!15584 e!15585)))

(declare-fun c!3182 () Bool)

(assert (=> b!24073 (= c!3182 (and ((_ is Cons!564) lt!8520) (not (= (_1!489 (h!1130 lt!8520)) (_1!489 (ite c!2998 (ite c!2997 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))))

(declare-fun b!24074 () Bool)

(assert (=> b!24074 (= e!15585 (getValueByKey!61 (t!3239 lt!8520) (_1!489 (ite c!2998 (ite c!2997 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(assert (= (and d!4275 c!3181) b!24072))

(assert (= (and d!4275 (not c!3181)) b!24073))

(assert (= (and b!24073 c!3182) b!24074))

(assert (= (and b!24073 (not c!3182)) b!24075))

(declare-fun m!18213 () Bool)

(assert (=> b!24074 m!18213))

(assert (=> d!4041 d!4275))

(declare-fun d!4277 () Bool)

(assert (=> d!4277 (= (getValueByKey!61 lt!8520 (_1!489 (ite c!2998 (ite c!2997 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (Some!66 (_2!489 (ite c!2998 (ite c!2997 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(declare-fun lt!8977 () Unit!512)

(assert (=> d!4277 (= lt!8977 (choose!213 lt!8520 (_1!489 (ite c!2998 (ite c!2997 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (_2!489 (ite c!2998 (ite c!2997 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(declare-fun e!15586 () Bool)

(assert (=> d!4277 e!15586))

(declare-fun res!14731 () Bool)

(assert (=> d!4277 (=> (not res!14731) (not e!15586))))

(assert (=> d!4277 (= res!14731 (isStrictlySorted!171 lt!8520))))

(assert (=> d!4277 (= (lemmaContainsTupThenGetReturnValue!18 lt!8520 (_1!489 (ite c!2998 (ite c!2997 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (_2!489 (ite c!2998 (ite c!2997 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) lt!8977)))

(declare-fun b!24076 () Bool)

(declare-fun res!14732 () Bool)

(assert (=> b!24076 (=> (not res!14732) (not e!15586))))

(assert (=> b!24076 (= res!14732 (containsKey!25 lt!8520 (_1!489 (ite c!2998 (ite c!2997 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(declare-fun b!24077 () Bool)

(assert (=> b!24077 (= e!15586 (contains!232 lt!8520 (tuple2!961 (_1!489 (ite c!2998 (ite c!2997 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (_2!489 (ite c!2998 (ite c!2997 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(assert (= (and d!4277 res!14731) b!24076))

(assert (= (and b!24076 res!14732) b!24077))

(assert (=> d!4277 m!17142))

(declare-fun m!18215 () Bool)

(assert (=> d!4277 m!18215))

(declare-fun m!18217 () Bool)

(assert (=> d!4277 m!18217))

(declare-fun m!18219 () Bool)

(assert (=> b!24076 m!18219))

(declare-fun m!18221 () Bool)

(assert (=> b!24077 m!18221))

(assert (=> d!4041 d!4277))

(declare-fun b!24078 () Bool)

(declare-fun e!15590 () List!568)

(declare-fun e!15587 () List!568)

(assert (=> b!24078 (= e!15590 e!15587)))

(declare-fun c!3186 () Bool)

(assert (=> b!24078 (= c!3186 (and ((_ is Cons!564) (toList!299 e!15173)) (= (_1!489 (h!1130 (toList!299 e!15173))) (_1!489 (ite c!2998 (ite c!2997 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(declare-fun b!24079 () Bool)

(declare-fun res!14734 () Bool)

(declare-fun e!15591 () Bool)

(assert (=> b!24079 (=> (not res!14734) (not e!15591))))

(declare-fun lt!8978 () List!568)

(assert (=> b!24079 (= res!14734 (containsKey!25 lt!8978 (_1!489 (ite c!2998 (ite c!2997 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(declare-fun d!4279 () Bool)

(assert (=> d!4279 e!15591))

(declare-fun res!14733 () Bool)

(assert (=> d!4279 (=> (not res!14733) (not e!15591))))

(assert (=> d!4279 (= res!14733 (isStrictlySorted!171 lt!8978))))

(assert (=> d!4279 (= lt!8978 e!15590)))

(declare-fun c!3184 () Bool)

(assert (=> d!4279 (= c!3184 (and ((_ is Cons!564) (toList!299 e!15173)) (bvslt (_1!489 (h!1130 (toList!299 e!15173))) (_1!489 (ite c!2998 (ite c!2997 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(assert (=> d!4279 (isStrictlySorted!171 (toList!299 e!15173))))

(assert (=> d!4279 (= (insertStrictlySorted!18 (toList!299 e!15173) (_1!489 (ite c!2998 (ite c!2997 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (_2!489 (ite c!2998 (ite c!2997 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) lt!8978)))

(declare-fun b!24080 () Bool)

(declare-fun call!2070 () List!568)

(assert (=> b!24080 (= e!15590 call!2070)))

(declare-fun b!24081 () Bool)

(declare-fun e!15588 () List!568)

(declare-fun call!2071 () List!568)

(assert (=> b!24081 (= e!15588 call!2071)))

(declare-fun b!24082 () Bool)

(assert (=> b!24082 (= e!15588 call!2071)))

(declare-fun bm!2067 () Bool)

(declare-fun call!2072 () List!568)

(assert (=> bm!2067 (= call!2072 call!2070)))

(declare-fun bm!2068 () Bool)

(assert (=> bm!2068 (= call!2071 call!2072)))

(declare-fun bm!2069 () Bool)

(declare-fun e!15589 () List!568)

(assert (=> bm!2069 (= call!2070 ($colon$colon!31 e!15589 (ite c!3184 (h!1130 (toList!299 e!15173)) (tuple2!961 (_1!489 (ite c!2998 (ite c!2997 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (_2!489 (ite c!2998 (ite c!2997 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))))

(declare-fun c!3185 () Bool)

(assert (=> bm!2069 (= c!3185 c!3184)))

(declare-fun b!24083 () Bool)

(declare-fun c!3183 () Bool)

(assert (=> b!24083 (= e!15589 (ite c!3186 (t!3239 (toList!299 e!15173)) (ite c!3183 (Cons!564 (h!1130 (toList!299 e!15173)) (t!3239 (toList!299 e!15173))) Nil!565)))))

(declare-fun b!24084 () Bool)

(assert (=> b!24084 (= e!15591 (contains!232 lt!8978 (tuple2!961 (_1!489 (ite c!2998 (ite c!2997 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (_2!489 (ite c!2998 (ite c!2997 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(declare-fun b!24085 () Bool)

(assert (=> b!24085 (= c!3183 (and ((_ is Cons!564) (toList!299 e!15173)) (bvsgt (_1!489 (h!1130 (toList!299 e!15173))) (_1!489 (ite c!2998 (ite c!2997 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(assert (=> b!24085 (= e!15587 e!15588)))

(declare-fun b!24086 () Bool)

(assert (=> b!24086 (= e!15589 (insertStrictlySorted!18 (t!3239 (toList!299 e!15173)) (_1!489 (ite c!2998 (ite c!2997 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (_2!489 (ite c!2998 (ite c!2997 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(declare-fun b!24087 () Bool)

(assert (=> b!24087 (= e!15587 call!2072)))

(assert (= (and d!4279 c!3184) b!24080))

(assert (= (and d!4279 (not c!3184)) b!24078))

(assert (= (and b!24078 c!3186) b!24087))

(assert (= (and b!24078 (not c!3186)) b!24085))

(assert (= (and b!24085 c!3183) b!24081))

(assert (= (and b!24085 (not c!3183)) b!24082))

(assert (= (or b!24081 b!24082) bm!2068))

(assert (= (or b!24087 bm!2068) bm!2067))

(assert (= (or b!24080 bm!2067) bm!2069))

(assert (= (and bm!2069 c!3185) b!24086))

(assert (= (and bm!2069 (not c!3185)) b!24083))

(assert (= (and d!4279 res!14733) b!24079))

(assert (= (and b!24079 res!14734) b!24084))

(declare-fun m!18223 () Bool)

(assert (=> d!4279 m!18223))

(declare-fun m!18225 () Bool)

(assert (=> d!4279 m!18225))

(declare-fun m!18227 () Bool)

(assert (=> b!24086 m!18227))

(declare-fun m!18229 () Bool)

(assert (=> b!24079 m!18229))

(declare-fun m!18231 () Bool)

(assert (=> b!24084 m!18231))

(declare-fun m!18233 () Bool)

(assert (=> bm!2069 m!18233))

(assert (=> d!4041 d!4279))

(declare-fun d!4281 () Bool)

(assert (=> d!4281 (= (apply!29 lt!8447 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000)) (get!391 (getValueByKey!61 (toList!299 lt!8447) (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000))))))

(declare-fun bs!988 () Bool)

(assert (= bs!988 d!4281))

(assert (=> bs!988 m!16986))

(declare-fun m!18235 () Bool)

(assert (=> bs!988 m!18235))

(assert (=> bs!988 m!18235))

(declare-fun m!18237 () Bool)

(assert (=> bs!988 m!18237))

(assert (=> b!23517 d!4281))

(declare-fun c!3187 () Bool)

(declare-fun d!4283 () Bool)

(assert (=> d!4283 (= c!3187 ((_ is ValueCellFull!312) (select (arr!607 (ite c!2998 (_values!1729 (_2!487 lt!8158)) lt!8287)) #b00000000000000000000000000000000)))))

(declare-fun e!15592 () V!1189)

(assert (=> d!4283 (= (get!390 (select (arr!607 (ite c!2998 (_values!1729 (_2!487 lt!8158)) lt!8287)) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (_2!487 lt!8158)) #b0000000000000000000000000000000000000000000000000000000000000000)) e!15592)))

(declare-fun b!24088 () Bool)

(assert (=> b!24088 (= e!15592 (get!392 (select (arr!607 (ite c!2998 (_values!1729 (_2!487 lt!8158)) lt!8287)) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (_2!487 lt!8158)) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!24089 () Bool)

(assert (=> b!24089 (= e!15592 (get!393 (select (arr!607 (ite c!2998 (_values!1729 (_2!487 lt!8158)) lt!8287)) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (_2!487 lt!8158)) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!4283 c!3187) b!24088))

(assert (= (and d!4283 (not c!3187)) b!24089))

(assert (=> b!24088 m!17024))

(assert (=> b!24088 m!17026))

(declare-fun m!18239 () Bool)

(assert (=> b!24088 m!18239))

(assert (=> b!24089 m!17024))

(assert (=> b!24089 m!17026))

(declare-fun m!18241 () Bool)

(assert (=> b!24089 m!18241))

(assert (=> b!23517 d!4283))

(declare-fun d!4285 () Bool)

(assert (=> d!4285 (= (validKeyInArray!0 (select (arr!608 lt!8338) lt!8351)) (and (not (= (select (arr!608 lt!8338) lt!8351) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!608 lt!8338) lt!8351) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!23451 d!4285))

(declare-fun d!4287 () Bool)

(declare-fun e!15593 () Bool)

(assert (=> d!4287 e!15593))

(declare-fun res!14735 () Bool)

(assert (=> d!4287 (=> res!14735 e!15593)))

(declare-fun lt!8979 () Bool)

(assert (=> d!4287 (= res!14735 (not lt!8979))))

(declare-fun lt!8980 () Bool)

(assert (=> d!4287 (= lt!8979 lt!8980)))

(declare-fun lt!8981 () Unit!512)

(declare-fun e!15594 () Unit!512)

(assert (=> d!4287 (= lt!8981 e!15594)))

(declare-fun c!3188 () Bool)

(assert (=> d!4287 (= c!3188 lt!8980)))

(assert (=> d!4287 (= lt!8980 (containsKey!25 (toList!299 lt!8506) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!4287 (= (contains!230 lt!8506 #b1000000000000000000000000000000000000000000000000000000000000000) lt!8979)))

(declare-fun b!24090 () Bool)

(declare-fun lt!8982 () Unit!512)

(assert (=> b!24090 (= e!15594 lt!8982)))

(assert (=> b!24090 (= lt!8982 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!299 lt!8506) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!24090 (isDefined!23 (getValueByKey!61 (toList!299 lt!8506) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24091 () Bool)

(declare-fun Unit!551 () Unit!512)

(assert (=> b!24091 (= e!15594 Unit!551)))

(declare-fun b!24092 () Bool)

(assert (=> b!24092 (= e!15593 (isDefined!23 (getValueByKey!61 (toList!299 lt!8506) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!4287 c!3188) b!24090))

(assert (= (and d!4287 (not c!3188)) b!24091))

(assert (= (and d!4287 (not res!14735)) b!24092))

(declare-fun m!18243 () Bool)

(assert (=> d!4287 m!18243))

(declare-fun m!18245 () Bool)

(assert (=> b!24090 m!18245))

(declare-fun m!18247 () Bool)

(assert (=> b!24090 m!18247))

(assert (=> b!24090 m!18247))

(declare-fun m!18249 () Bool)

(assert (=> b!24090 m!18249))

(assert (=> b!24092 m!18247))

(assert (=> b!24092 m!18247))

(assert (=> b!24092 m!18249))

(assert (=> bm!1993 d!4287))

(declare-fun d!4289 () Bool)

(declare-fun isEmpty!173 (Option!67) Bool)

(assert (=> d!4289 (= (isDefined!23 (getValueByKey!61 (toList!299 call!1928) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (not (isEmpty!173 (getValueByKey!61 (toList!299 call!1928) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun bs!989 () Bool)

(assert (= bs!989 d!4289))

(assert (=> bs!989 m!17054))

(declare-fun m!18251 () Bool)

(assert (=> bs!989 m!18251))

(assert (=> b!23550 d!4289))

(declare-fun d!4291 () Bool)

(declare-fun c!3189 () Bool)

(assert (=> d!4291 (= c!3189 (and ((_ is Cons!564) (toList!299 call!1928)) (= (_1!489 (h!1130 (toList!299 call!1928))) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun e!15595 () Option!67)

(assert (=> d!4291 (= (getValueByKey!61 (toList!299 call!1928) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) e!15595)))

(declare-fun b!24093 () Bool)

(assert (=> b!24093 (= e!15595 (Some!66 (_2!489 (h!1130 (toList!299 call!1928)))))))

(declare-fun b!24096 () Bool)

(declare-fun e!15596 () Option!67)

(assert (=> b!24096 (= e!15596 None!65)))

(declare-fun b!24094 () Bool)

(assert (=> b!24094 (= e!15595 e!15596)))

(declare-fun c!3190 () Bool)

(assert (=> b!24094 (= c!3190 (and ((_ is Cons!564) (toList!299 call!1928)) (not (= (_1!489 (h!1130 (toList!299 call!1928))) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!24095 () Bool)

(assert (=> b!24095 (= e!15596 (getValueByKey!61 (t!3239 (toList!299 call!1928)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!4291 c!3189) b!24093))

(assert (= (and d!4291 (not c!3189)) b!24094))

(assert (= (and b!24094 c!3190) b!24095))

(assert (= (and b!24094 (not c!3190)) b!24096))

(declare-fun m!18253 () Bool)

(assert (=> b!24095 m!18253))

(assert (=> b!23550 d!4291))

(declare-fun b!24100 () Bool)

(declare-fun e!15597 () Bool)

(assert (=> b!24100 (= e!15597 (and (bvsge (extraKeys!1641 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000000000000000) (bvsle (extraKeys!1641 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000000000000011) (bvsge (_vacant!150 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000000000000000)))))

(declare-fun b!24097 () Bool)

(declare-fun res!14736 () Bool)

(assert (=> b!24097 (=> (not res!14736) (not e!15597))))

(assert (=> b!24097 (= res!14736 (and (= (size!703 (_values!1729 (v!1604 (underlying!116 thiss!938)))) (bvadd (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000000000000001)) (= (size!704 (_keys!3164 (v!1604 (underlying!116 thiss!938)))) (size!703 (_values!1729 (v!1604 (underlying!116 thiss!938))))) (bvsge (_size!150 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000000000000000) (bvsle (_size!150 (v!1604 (underlying!116 thiss!938))) (bvadd (mask!4730 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000000000000001))))))

(declare-fun b!24098 () Bool)

(declare-fun res!14737 () Bool)

(assert (=> b!24098 (=> (not res!14737) (not e!15597))))

(assert (=> b!24098 (= res!14737 (bvsge (size!711 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))))))

(declare-fun b!24099 () Bool)

(declare-fun res!14739 () Bool)

(assert (=> b!24099 (=> (not res!14739) (not e!15597))))

(assert (=> b!24099 (= res!14739 (= (size!711 (v!1604 (underlying!116 thiss!938))) (bvadd (_size!150 (v!1604 (underlying!116 thiss!938))) (bvsdiv (bvadd (extraKeys!1641 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun d!4293 () Bool)

(declare-fun res!14738 () Bool)

(assert (=> d!4293 (=> (not res!14738) (not e!15597))))

(assert (=> d!4293 (= res!14738 (validMask!0 (mask!4730 (v!1604 (underlying!116 thiss!938)))))))

(assert (=> d!4293 (= (simpleValid!20 (v!1604 (underlying!116 thiss!938))) e!15597)))

(assert (= (and d!4293 res!14738) b!24097))

(assert (= (and b!24097 res!14736) b!24098))

(assert (= (and b!24098 res!14737) b!24099))

(assert (= (and b!24099 res!14739) b!24100))

(declare-fun m!18255 () Bool)

(assert (=> b!24098 m!18255))

(assert (=> b!24099 m!18255))

(assert (=> d!4293 m!16758))

(assert (=> d!4061 d!4293))

(declare-fun d!4295 () Bool)

(assert (=> d!4295 (= (apply!29 (+!45 lt!8688 (tuple2!961 lt!8683 (minValue!1666 (_2!487 lt!8158)))) lt!8675) (get!391 (getValueByKey!61 (toList!299 (+!45 lt!8688 (tuple2!961 lt!8683 (minValue!1666 (_2!487 lt!8158))))) lt!8675)))))

(declare-fun bs!990 () Bool)

(assert (= bs!990 d!4295))

(declare-fun m!18257 () Bool)

(assert (=> bs!990 m!18257))

(assert (=> bs!990 m!18257))

(declare-fun m!18259 () Bool)

(assert (=> bs!990 m!18259))

(assert (=> b!23739 d!4295))

(declare-fun d!4297 () Bool)

(assert (=> d!4297 (= (apply!29 lt!8687 lt!8676) (get!391 (getValueByKey!61 (toList!299 lt!8687) lt!8676)))))

(declare-fun bs!991 () Bool)

(assert (= bs!991 d!4297))

(declare-fun m!18261 () Bool)

(assert (=> bs!991 m!18261))

(assert (=> bs!991 m!18261))

(declare-fun m!18263 () Bool)

(assert (=> bs!991 m!18263))

(assert (=> b!23739 d!4297))

(declare-fun b!24101 () Bool)

(declare-fun e!15600 () Bool)

(declare-fun e!15603 () Bool)

(assert (=> b!24101 (= e!15600 e!15603)))

(declare-fun c!3193 () Bool)

(assert (=> b!24101 (= c!3193 (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))))))

(declare-fun b!24102 () Bool)

(declare-fun e!15602 () Bool)

(assert (=> b!24102 (= e!15600 e!15602)))

(assert (=> b!24102 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))))))

(declare-fun res!14741 () Bool)

(declare-fun lt!8984 () ListLongMap!567)

(assert (=> b!24102 (= res!14741 (contains!230 lt!8984 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000)))))

(assert (=> b!24102 (=> (not res!14741) (not e!15602))))

(declare-fun bm!2070 () Bool)

(declare-fun call!2073 () ListLongMap!567)

(assert (=> bm!2070 (= call!2073 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!1743 (_2!487 lt!8158))))))

(declare-fun b!24103 () Bool)

(assert (=> b!24103 (= e!15603 (isEmpty!172 lt!8984))))

(declare-fun b!24104 () Bool)

(declare-fun e!15601 () Bool)

(assert (=> b!24104 (= e!15601 (validKeyInArray!0 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000)))))

(assert (=> b!24104 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!24105 () Bool)

(declare-fun res!14742 () Bool)

(declare-fun e!15604 () Bool)

(assert (=> b!24105 (=> (not res!14742) (not e!15604))))

(assert (=> b!24105 (= res!14742 (not (contains!230 lt!8984 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!24106 () Bool)

(declare-fun e!15598 () ListLongMap!567)

(assert (=> b!24106 (= e!15598 (ListLongMap!568 Nil!565))))

(declare-fun d!4299 () Bool)

(assert (=> d!4299 e!15604))

(declare-fun res!14740 () Bool)

(assert (=> d!4299 (=> (not res!14740) (not e!15604))))

(assert (=> d!4299 (= res!14740 (not (contains!230 lt!8984 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!4299 (= lt!8984 e!15598)))

(declare-fun c!3192 () Bool)

(assert (=> d!4299 (= c!3192 (bvsge #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))))))

(assert (=> d!4299 (validMask!0 (mask!4730 (_2!487 lt!8158)))))

(assert (=> d!4299 (= (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))) lt!8984)))

(declare-fun b!24107 () Bool)

(assert (=> b!24107 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))))))

(assert (=> b!24107 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!703 (_values!1729 (_2!487 lt!8158)))))))

(assert (=> b!24107 (= e!15602 (= (apply!29 lt!8984 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000)) (get!390 (select (arr!607 (_values!1729 (_2!487 lt!8158))) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (_2!487 lt!8158)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!24108 () Bool)

(declare-fun e!15599 () ListLongMap!567)

(assert (=> b!24108 (= e!15599 call!2073)))

(declare-fun b!24109 () Bool)

(assert (=> b!24109 (= e!15604 e!15600)))

(declare-fun c!3194 () Bool)

(assert (=> b!24109 (= c!3194 e!15601)))

(declare-fun res!14743 () Bool)

(assert (=> b!24109 (=> (not res!14743) (not e!15601))))

(assert (=> b!24109 (= res!14743 (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))))))

(declare-fun b!24110 () Bool)

(declare-fun lt!8986 () Unit!512)

(declare-fun lt!8983 () Unit!512)

(assert (=> b!24110 (= lt!8986 lt!8983)))

(declare-fun lt!8988 () ListLongMap!567)

(declare-fun lt!8985 () V!1189)

(declare-fun lt!8989 () (_ BitVec 64))

(declare-fun lt!8987 () (_ BitVec 64))

(assert (=> b!24110 (not (contains!230 (+!45 lt!8988 (tuple2!961 lt!8987 lt!8985)) lt!8989))))

(assert (=> b!24110 (= lt!8983 (addStillNotContains!2 lt!8988 lt!8987 lt!8985 lt!8989))))

(assert (=> b!24110 (= lt!8989 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!24110 (= lt!8985 (get!390 (select (arr!607 (_values!1729 (_2!487 lt!8158))) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (_2!487 lt!8158)) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!24110 (= lt!8987 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000))))

(assert (=> b!24110 (= lt!8988 call!2073)))

(assert (=> b!24110 (= e!15599 (+!45 call!2073 (tuple2!961 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000) (get!390 (select (arr!607 (_values!1729 (_2!487 lt!8158))) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (_2!487 lt!8158)) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!24111 () Bool)

(assert (=> b!24111 (= e!15598 e!15599)))

(declare-fun c!3191 () Bool)

(assert (=> b!24111 (= c!3191 (validKeyInArray!0 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000)))))

(declare-fun b!24112 () Bool)

(assert (=> b!24112 (= e!15603 (= lt!8984 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!1743 (_2!487 lt!8158)))))))

(assert (= (and d!4299 c!3192) b!24106))

(assert (= (and d!4299 (not c!3192)) b!24111))

(assert (= (and b!24111 c!3191) b!24110))

(assert (= (and b!24111 (not c!3191)) b!24108))

(assert (= (or b!24110 b!24108) bm!2070))

(assert (= (and d!4299 res!14740) b!24105))

(assert (= (and b!24105 res!14742) b!24109))

(assert (= (and b!24109 res!14743) b!24104))

(assert (= (and b!24109 c!3194) b!24102))

(assert (= (and b!24109 (not c!3194)) b!24101))

(assert (= (and b!24102 res!14741) b!24107))

(assert (= (and b!24101 c!3193) b!24112))

(assert (= (and b!24101 (not c!3193)) b!24103))

(declare-fun b_lambda!1609 () Bool)

(assert (=> (not b_lambda!1609) (not b!24107)))

(assert (=> b!24107 t!3242))

(declare-fun b_and!1515 () Bool)

(assert (= b_and!1513 (and (=> t!3242 result!1099) b_and!1515)))

(declare-fun b_lambda!1611 () Bool)

(assert (=> (not b_lambda!1611) (not b!24110)))

(assert (=> b!24110 t!3242))

(declare-fun b_and!1517 () Bool)

(assert (= b_and!1515 (and (=> t!3242 result!1099) b_and!1517)))

(assert (=> b!24102 m!16986))

(assert (=> b!24102 m!16986))

(declare-fun m!18265 () Bool)

(assert (=> b!24102 m!18265))

(assert (=> b!24110 m!17026))

(declare-fun m!18267 () Bool)

(assert (=> b!24110 m!18267))

(assert (=> b!24110 m!17425))

(declare-fun m!18269 () Bool)

(assert (=> b!24110 m!18269))

(assert (=> b!24110 m!18269))

(declare-fun m!18271 () Bool)

(assert (=> b!24110 m!18271))

(assert (=> b!24110 m!17425))

(assert (=> b!24110 m!17026))

(assert (=> b!24110 m!17427))

(assert (=> b!24110 m!16986))

(declare-fun m!18273 () Bool)

(assert (=> b!24110 m!18273))

(assert (=> b!24107 m!17026))

(assert (=> b!24107 m!17425))

(assert (=> b!24107 m!17026))

(assert (=> b!24107 m!17427))

(assert (=> b!24107 m!17425))

(assert (=> b!24107 m!16986))

(assert (=> b!24107 m!16986))

(declare-fun m!18275 () Bool)

(assert (=> b!24107 m!18275))

(declare-fun m!18277 () Bool)

(assert (=> d!4299 m!18277))

(assert (=> d!4299 m!16990))

(assert (=> b!24111 m!16986))

(assert (=> b!24111 m!16986))

(assert (=> b!24111 m!16988))

(declare-fun m!18279 () Bool)

(assert (=> b!24103 m!18279))

(declare-fun m!18281 () Bool)

(assert (=> b!24105 m!18281))

(assert (=> b!24104 m!16986))

(assert (=> b!24104 m!16986))

(assert (=> b!24104 m!16988))

(declare-fun m!18283 () Bool)

(assert (=> bm!2070 m!18283))

(assert (=> b!24112 m!18283))

(assert (=> b!23739 d!4299))

(declare-fun d!4301 () Bool)

(assert (=> d!4301 (= (apply!29 lt!8680 lt!8694) (get!391 (getValueByKey!61 (toList!299 lt!8680) lt!8694)))))

(declare-fun bs!992 () Bool)

(assert (= bs!992 d!4301))

(declare-fun m!18285 () Bool)

(assert (=> bs!992 m!18285))

(assert (=> bs!992 m!18285))

(declare-fun m!18287 () Bool)

(assert (=> bs!992 m!18287))

(assert (=> b!23739 d!4301))

(declare-fun d!4303 () Bool)

(assert (=> d!4303 (contains!230 (+!45 lt!8689 (tuple2!961 lt!8684 (zeroValue!1666 (_2!487 lt!8158)))) lt!8693)))

(declare-fun lt!8990 () Unit!512)

(assert (=> d!4303 (= lt!8990 (choose!211 lt!8689 lt!8684 (zeroValue!1666 (_2!487 lt!8158)) lt!8693))))

(assert (=> d!4303 (contains!230 lt!8689 lt!8693)))

(assert (=> d!4303 (= (addStillContains!14 lt!8689 lt!8684 (zeroValue!1666 (_2!487 lt!8158)) lt!8693) lt!8990)))

(declare-fun bs!993 () Bool)

(assert (= bs!993 d!4303))

(assert (=> bs!993 m!17405))

(assert (=> bs!993 m!17405))

(assert (=> bs!993 m!17407))

(declare-fun m!18289 () Bool)

(assert (=> bs!993 m!18289))

(declare-fun m!18291 () Bool)

(assert (=> bs!993 m!18291))

(assert (=> b!23739 d!4303))

(declare-fun d!4305 () Bool)

(declare-fun e!15605 () Bool)

(assert (=> d!4305 e!15605))

(declare-fun res!14744 () Bool)

(assert (=> d!4305 (=> (not res!14744) (not e!15605))))

(declare-fun lt!8993 () ListLongMap!567)

(assert (=> d!4305 (= res!14744 (contains!230 lt!8993 (_1!489 (tuple2!961 lt!8683 (minValue!1666 (_2!487 lt!8158))))))))

(declare-fun lt!8992 () List!568)

(assert (=> d!4305 (= lt!8993 (ListLongMap!568 lt!8992))))

(declare-fun lt!8991 () Unit!512)

(declare-fun lt!8994 () Unit!512)

(assert (=> d!4305 (= lt!8991 lt!8994)))

(assert (=> d!4305 (= (getValueByKey!61 lt!8992 (_1!489 (tuple2!961 lt!8683 (minValue!1666 (_2!487 lt!8158))))) (Some!66 (_2!489 (tuple2!961 lt!8683 (minValue!1666 (_2!487 lt!8158))))))))

(assert (=> d!4305 (= lt!8994 (lemmaContainsTupThenGetReturnValue!18 lt!8992 (_1!489 (tuple2!961 lt!8683 (minValue!1666 (_2!487 lt!8158)))) (_2!489 (tuple2!961 lt!8683 (minValue!1666 (_2!487 lt!8158))))))))

(assert (=> d!4305 (= lt!8992 (insertStrictlySorted!18 (toList!299 lt!8688) (_1!489 (tuple2!961 lt!8683 (minValue!1666 (_2!487 lt!8158)))) (_2!489 (tuple2!961 lt!8683 (minValue!1666 (_2!487 lt!8158))))))))

(assert (=> d!4305 (= (+!45 lt!8688 (tuple2!961 lt!8683 (minValue!1666 (_2!487 lt!8158)))) lt!8993)))

(declare-fun b!24113 () Bool)

(declare-fun res!14745 () Bool)

(assert (=> b!24113 (=> (not res!14745) (not e!15605))))

(assert (=> b!24113 (= res!14745 (= (getValueByKey!61 (toList!299 lt!8993) (_1!489 (tuple2!961 lt!8683 (minValue!1666 (_2!487 lt!8158))))) (Some!66 (_2!489 (tuple2!961 lt!8683 (minValue!1666 (_2!487 lt!8158)))))))))

(declare-fun b!24114 () Bool)

(assert (=> b!24114 (= e!15605 (contains!232 (toList!299 lt!8993) (tuple2!961 lt!8683 (minValue!1666 (_2!487 lt!8158)))))))

(assert (= (and d!4305 res!14744) b!24113))

(assert (= (and b!24113 res!14745) b!24114))

(declare-fun m!18293 () Bool)

(assert (=> d!4305 m!18293))

(declare-fun m!18295 () Bool)

(assert (=> d!4305 m!18295))

(declare-fun m!18297 () Bool)

(assert (=> d!4305 m!18297))

(declare-fun m!18299 () Bool)

(assert (=> d!4305 m!18299))

(declare-fun m!18301 () Bool)

(assert (=> b!24113 m!18301))

(declare-fun m!18303 () Bool)

(assert (=> b!24114 m!18303))

(assert (=> b!23739 d!4305))

(declare-fun d!4307 () Bool)

(assert (=> d!4307 (= (apply!29 (+!45 lt!8687 (tuple2!961 lt!8690 (zeroValue!1666 (_2!487 lt!8158)))) lt!8676) (apply!29 lt!8687 lt!8676))))

(declare-fun lt!8995 () Unit!512)

(assert (=> d!4307 (= lt!8995 (choose!210 lt!8687 lt!8690 (zeroValue!1666 (_2!487 lt!8158)) lt!8676))))

(declare-fun e!15606 () Bool)

(assert (=> d!4307 e!15606))

(declare-fun res!14746 () Bool)

(assert (=> d!4307 (=> (not res!14746) (not e!15606))))

(assert (=> d!4307 (= res!14746 (contains!230 lt!8687 lt!8676))))

(assert (=> d!4307 (= (addApplyDifferent!14 lt!8687 lt!8690 (zeroValue!1666 (_2!487 lt!8158)) lt!8676) lt!8995)))

(declare-fun b!24115 () Bool)

(assert (=> b!24115 (= e!15606 (not (= lt!8676 lt!8690)))))

(assert (= (and d!4307 res!14746) b!24115))

(assert (=> d!4307 m!17397))

(assert (=> d!4307 m!17401))

(assert (=> d!4307 m!17397))

(declare-fun m!18305 () Bool)

(assert (=> d!4307 m!18305))

(declare-fun m!18307 () Bool)

(assert (=> d!4307 m!18307))

(assert (=> d!4307 m!17421))

(assert (=> b!23739 d!4307))

(declare-fun d!4309 () Bool)

(declare-fun e!15607 () Bool)

(assert (=> d!4309 e!15607))

(declare-fun res!14747 () Bool)

(assert (=> d!4309 (=> (not res!14747) (not e!15607))))

(declare-fun lt!8998 () ListLongMap!567)

(assert (=> d!4309 (= res!14747 (contains!230 lt!8998 (_1!489 (tuple2!961 lt!8695 (minValue!1666 (_2!487 lt!8158))))))))

(declare-fun lt!8997 () List!568)

(assert (=> d!4309 (= lt!8998 (ListLongMap!568 lt!8997))))

(declare-fun lt!8996 () Unit!512)

(declare-fun lt!8999 () Unit!512)

(assert (=> d!4309 (= lt!8996 lt!8999)))

(assert (=> d!4309 (= (getValueByKey!61 lt!8997 (_1!489 (tuple2!961 lt!8695 (minValue!1666 (_2!487 lt!8158))))) (Some!66 (_2!489 (tuple2!961 lt!8695 (minValue!1666 (_2!487 lt!8158))))))))

(assert (=> d!4309 (= lt!8999 (lemmaContainsTupThenGetReturnValue!18 lt!8997 (_1!489 (tuple2!961 lt!8695 (minValue!1666 (_2!487 lt!8158)))) (_2!489 (tuple2!961 lt!8695 (minValue!1666 (_2!487 lt!8158))))))))

(assert (=> d!4309 (= lt!8997 (insertStrictlySorted!18 (toList!299 lt!8680) (_1!489 (tuple2!961 lt!8695 (minValue!1666 (_2!487 lt!8158)))) (_2!489 (tuple2!961 lt!8695 (minValue!1666 (_2!487 lt!8158))))))))

(assert (=> d!4309 (= (+!45 lt!8680 (tuple2!961 lt!8695 (minValue!1666 (_2!487 lt!8158)))) lt!8998)))

(declare-fun b!24116 () Bool)

(declare-fun res!14748 () Bool)

(assert (=> b!24116 (=> (not res!14748) (not e!15607))))

(assert (=> b!24116 (= res!14748 (= (getValueByKey!61 (toList!299 lt!8998) (_1!489 (tuple2!961 lt!8695 (minValue!1666 (_2!487 lt!8158))))) (Some!66 (_2!489 (tuple2!961 lt!8695 (minValue!1666 (_2!487 lt!8158)))))))))

(declare-fun b!24117 () Bool)

(assert (=> b!24117 (= e!15607 (contains!232 (toList!299 lt!8998) (tuple2!961 lt!8695 (minValue!1666 (_2!487 lt!8158)))))))

(assert (= (and d!4309 res!14747) b!24116))

(assert (= (and b!24116 res!14748) b!24117))

(declare-fun m!18309 () Bool)

(assert (=> d!4309 m!18309))

(declare-fun m!18311 () Bool)

(assert (=> d!4309 m!18311))

(declare-fun m!18313 () Bool)

(assert (=> d!4309 m!18313))

(declare-fun m!18315 () Bool)

(assert (=> d!4309 m!18315))

(declare-fun m!18317 () Bool)

(assert (=> b!24116 m!18317))

(declare-fun m!18319 () Bool)

(assert (=> b!24117 m!18319))

(assert (=> b!23739 d!4309))

(declare-fun d!4311 () Bool)

(declare-fun e!15608 () Bool)

(assert (=> d!4311 e!15608))

(declare-fun res!14749 () Bool)

(assert (=> d!4311 (=> res!14749 e!15608)))

(declare-fun lt!9000 () Bool)

(assert (=> d!4311 (= res!14749 (not lt!9000))))

(declare-fun lt!9001 () Bool)

(assert (=> d!4311 (= lt!9000 lt!9001)))

(declare-fun lt!9002 () Unit!512)

(declare-fun e!15609 () Unit!512)

(assert (=> d!4311 (= lt!9002 e!15609)))

(declare-fun c!3195 () Bool)

(assert (=> d!4311 (= c!3195 lt!9001)))

(assert (=> d!4311 (= lt!9001 (containsKey!25 (toList!299 (+!45 lt!8689 (tuple2!961 lt!8684 (zeroValue!1666 (_2!487 lt!8158))))) lt!8693))))

(assert (=> d!4311 (= (contains!230 (+!45 lt!8689 (tuple2!961 lt!8684 (zeroValue!1666 (_2!487 lt!8158)))) lt!8693) lt!9000)))

(declare-fun b!24118 () Bool)

(declare-fun lt!9003 () Unit!512)

(assert (=> b!24118 (= e!15609 lt!9003)))

(assert (=> b!24118 (= lt!9003 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!299 (+!45 lt!8689 (tuple2!961 lt!8684 (zeroValue!1666 (_2!487 lt!8158))))) lt!8693))))

(assert (=> b!24118 (isDefined!23 (getValueByKey!61 (toList!299 (+!45 lt!8689 (tuple2!961 lt!8684 (zeroValue!1666 (_2!487 lt!8158))))) lt!8693))))

(declare-fun b!24119 () Bool)

(declare-fun Unit!552 () Unit!512)

(assert (=> b!24119 (= e!15609 Unit!552)))

(declare-fun b!24120 () Bool)

(assert (=> b!24120 (= e!15608 (isDefined!23 (getValueByKey!61 (toList!299 (+!45 lt!8689 (tuple2!961 lt!8684 (zeroValue!1666 (_2!487 lt!8158))))) lt!8693)))))

(assert (= (and d!4311 c!3195) b!24118))

(assert (= (and d!4311 (not c!3195)) b!24119))

(assert (= (and d!4311 (not res!14749)) b!24120))

(declare-fun m!18321 () Bool)

(assert (=> d!4311 m!18321))

(declare-fun m!18323 () Bool)

(assert (=> b!24118 m!18323))

(declare-fun m!18325 () Bool)

(assert (=> b!24118 m!18325))

(assert (=> b!24118 m!18325))

(declare-fun m!18327 () Bool)

(assert (=> b!24118 m!18327))

(assert (=> b!24120 m!18325))

(assert (=> b!24120 m!18325))

(assert (=> b!24120 m!18327))

(assert (=> b!23739 d!4311))

(declare-fun d!4313 () Bool)

(declare-fun e!15610 () Bool)

(assert (=> d!4313 e!15610))

(declare-fun res!14750 () Bool)

(assert (=> d!4313 (=> (not res!14750) (not e!15610))))

(declare-fun lt!9006 () ListLongMap!567)

(assert (=> d!4313 (= res!14750 (contains!230 lt!9006 (_1!489 (tuple2!961 lt!8684 (zeroValue!1666 (_2!487 lt!8158))))))))

(declare-fun lt!9005 () List!568)

(assert (=> d!4313 (= lt!9006 (ListLongMap!568 lt!9005))))

(declare-fun lt!9004 () Unit!512)

(declare-fun lt!9007 () Unit!512)

(assert (=> d!4313 (= lt!9004 lt!9007)))

(assert (=> d!4313 (= (getValueByKey!61 lt!9005 (_1!489 (tuple2!961 lt!8684 (zeroValue!1666 (_2!487 lt!8158))))) (Some!66 (_2!489 (tuple2!961 lt!8684 (zeroValue!1666 (_2!487 lt!8158))))))))

(assert (=> d!4313 (= lt!9007 (lemmaContainsTupThenGetReturnValue!18 lt!9005 (_1!489 (tuple2!961 lt!8684 (zeroValue!1666 (_2!487 lt!8158)))) (_2!489 (tuple2!961 lt!8684 (zeroValue!1666 (_2!487 lt!8158))))))))

(assert (=> d!4313 (= lt!9005 (insertStrictlySorted!18 (toList!299 lt!8689) (_1!489 (tuple2!961 lt!8684 (zeroValue!1666 (_2!487 lt!8158)))) (_2!489 (tuple2!961 lt!8684 (zeroValue!1666 (_2!487 lt!8158))))))))

(assert (=> d!4313 (= (+!45 lt!8689 (tuple2!961 lt!8684 (zeroValue!1666 (_2!487 lt!8158)))) lt!9006)))

(declare-fun b!24121 () Bool)

(declare-fun res!14751 () Bool)

(assert (=> b!24121 (=> (not res!14751) (not e!15610))))

(assert (=> b!24121 (= res!14751 (= (getValueByKey!61 (toList!299 lt!9006) (_1!489 (tuple2!961 lt!8684 (zeroValue!1666 (_2!487 lt!8158))))) (Some!66 (_2!489 (tuple2!961 lt!8684 (zeroValue!1666 (_2!487 lt!8158)))))))))

(declare-fun b!24122 () Bool)

(assert (=> b!24122 (= e!15610 (contains!232 (toList!299 lt!9006) (tuple2!961 lt!8684 (zeroValue!1666 (_2!487 lt!8158)))))))

(assert (= (and d!4313 res!14750) b!24121))

(assert (= (and b!24121 res!14751) b!24122))

(declare-fun m!18329 () Bool)

(assert (=> d!4313 m!18329))

(declare-fun m!18331 () Bool)

(assert (=> d!4313 m!18331))

(declare-fun m!18333 () Bool)

(assert (=> d!4313 m!18333))

(declare-fun m!18335 () Bool)

(assert (=> d!4313 m!18335))

(declare-fun m!18337 () Bool)

(assert (=> b!24121 m!18337))

(declare-fun m!18339 () Bool)

(assert (=> b!24122 m!18339))

(assert (=> b!23739 d!4313))

(declare-fun d!4315 () Bool)

(declare-fun e!15611 () Bool)

(assert (=> d!4315 e!15611))

(declare-fun res!14752 () Bool)

(assert (=> d!4315 (=> (not res!14752) (not e!15611))))

(declare-fun lt!9010 () ListLongMap!567)

(assert (=> d!4315 (= res!14752 (contains!230 lt!9010 (_1!489 (tuple2!961 lt!8690 (zeroValue!1666 (_2!487 lt!8158))))))))

(declare-fun lt!9009 () List!568)

(assert (=> d!4315 (= lt!9010 (ListLongMap!568 lt!9009))))

(declare-fun lt!9008 () Unit!512)

(declare-fun lt!9011 () Unit!512)

(assert (=> d!4315 (= lt!9008 lt!9011)))

(assert (=> d!4315 (= (getValueByKey!61 lt!9009 (_1!489 (tuple2!961 lt!8690 (zeroValue!1666 (_2!487 lt!8158))))) (Some!66 (_2!489 (tuple2!961 lt!8690 (zeroValue!1666 (_2!487 lt!8158))))))))

(assert (=> d!4315 (= lt!9011 (lemmaContainsTupThenGetReturnValue!18 lt!9009 (_1!489 (tuple2!961 lt!8690 (zeroValue!1666 (_2!487 lt!8158)))) (_2!489 (tuple2!961 lt!8690 (zeroValue!1666 (_2!487 lt!8158))))))))

(assert (=> d!4315 (= lt!9009 (insertStrictlySorted!18 (toList!299 lt!8687) (_1!489 (tuple2!961 lt!8690 (zeroValue!1666 (_2!487 lt!8158)))) (_2!489 (tuple2!961 lt!8690 (zeroValue!1666 (_2!487 lt!8158))))))))

(assert (=> d!4315 (= (+!45 lt!8687 (tuple2!961 lt!8690 (zeroValue!1666 (_2!487 lt!8158)))) lt!9010)))

(declare-fun b!24123 () Bool)

(declare-fun res!14753 () Bool)

(assert (=> b!24123 (=> (not res!14753) (not e!15611))))

(assert (=> b!24123 (= res!14753 (= (getValueByKey!61 (toList!299 lt!9010) (_1!489 (tuple2!961 lt!8690 (zeroValue!1666 (_2!487 lt!8158))))) (Some!66 (_2!489 (tuple2!961 lt!8690 (zeroValue!1666 (_2!487 lt!8158)))))))))

(declare-fun b!24124 () Bool)

(assert (=> b!24124 (= e!15611 (contains!232 (toList!299 lt!9010) (tuple2!961 lt!8690 (zeroValue!1666 (_2!487 lt!8158)))))))

(assert (= (and d!4315 res!14752) b!24123))

(assert (= (and b!24123 res!14753) b!24124))

(declare-fun m!18341 () Bool)

(assert (=> d!4315 m!18341))

(declare-fun m!18343 () Bool)

(assert (=> d!4315 m!18343))

(declare-fun m!18345 () Bool)

(assert (=> d!4315 m!18345))

(declare-fun m!18347 () Bool)

(assert (=> d!4315 m!18347))

(declare-fun m!18349 () Bool)

(assert (=> b!24123 m!18349))

(declare-fun m!18351 () Bool)

(assert (=> b!24124 m!18351))

(assert (=> b!23739 d!4315))

(declare-fun d!4317 () Bool)

(assert (=> d!4317 (= (apply!29 (+!45 lt!8687 (tuple2!961 lt!8690 (zeroValue!1666 (_2!487 lt!8158)))) lt!8676) (get!391 (getValueByKey!61 (toList!299 (+!45 lt!8687 (tuple2!961 lt!8690 (zeroValue!1666 (_2!487 lt!8158))))) lt!8676)))))

(declare-fun bs!994 () Bool)

(assert (= bs!994 d!4317))

(declare-fun m!18353 () Bool)

(assert (=> bs!994 m!18353))

(assert (=> bs!994 m!18353))

(declare-fun m!18355 () Bool)

(assert (=> bs!994 m!18355))

(assert (=> b!23739 d!4317))

(declare-fun d!4319 () Bool)

(assert (=> d!4319 (= (apply!29 lt!8688 lt!8675) (get!391 (getValueByKey!61 (toList!299 lt!8688) lt!8675)))))

(declare-fun bs!995 () Bool)

(assert (= bs!995 d!4319))

(declare-fun m!18357 () Bool)

(assert (=> bs!995 m!18357))

(assert (=> bs!995 m!18357))

(declare-fun m!18359 () Bool)

(assert (=> bs!995 m!18359))

(assert (=> b!23739 d!4319))

(declare-fun d!4321 () Bool)

(assert (=> d!4321 (= (apply!29 (+!45 lt!8680 (tuple2!961 lt!8695 (minValue!1666 (_2!487 lt!8158)))) lt!8694) (get!391 (getValueByKey!61 (toList!299 (+!45 lt!8680 (tuple2!961 lt!8695 (minValue!1666 (_2!487 lt!8158))))) lt!8694)))))

(declare-fun bs!996 () Bool)

(assert (= bs!996 d!4321))

(declare-fun m!18361 () Bool)

(assert (=> bs!996 m!18361))

(assert (=> bs!996 m!18361))

(declare-fun m!18363 () Bool)

(assert (=> bs!996 m!18363))

(assert (=> b!23739 d!4321))

(declare-fun d!4323 () Bool)

(assert (=> d!4323 (= (apply!29 (+!45 lt!8680 (tuple2!961 lt!8695 (minValue!1666 (_2!487 lt!8158)))) lt!8694) (apply!29 lt!8680 lt!8694))))

(declare-fun lt!9012 () Unit!512)

(assert (=> d!4323 (= lt!9012 (choose!210 lt!8680 lt!8695 (minValue!1666 (_2!487 lt!8158)) lt!8694))))

(declare-fun e!15612 () Bool)

(assert (=> d!4323 e!15612))

(declare-fun res!14754 () Bool)

(assert (=> d!4323 (=> (not res!14754) (not e!15612))))

(assert (=> d!4323 (= res!14754 (contains!230 lt!8680 lt!8694))))

(assert (=> d!4323 (= (addApplyDifferent!14 lt!8680 lt!8695 (minValue!1666 (_2!487 lt!8158)) lt!8694) lt!9012)))

(declare-fun b!24125 () Bool)

(assert (=> b!24125 (= e!15612 (not (= lt!8694 lt!8695)))))

(assert (= (and d!4323 res!14754) b!24125))

(assert (=> d!4323 m!17399))

(assert (=> d!4323 m!17415))

(assert (=> d!4323 m!17399))

(declare-fun m!18365 () Bool)

(assert (=> d!4323 m!18365))

(declare-fun m!18367 () Bool)

(assert (=> d!4323 m!18367))

(assert (=> d!4323 m!17417))

(assert (=> b!23739 d!4323))

(declare-fun d!4325 () Bool)

(assert (=> d!4325 (= (apply!29 (+!45 lt!8688 (tuple2!961 lt!8683 (minValue!1666 (_2!487 lt!8158)))) lt!8675) (apply!29 lt!8688 lt!8675))))

(declare-fun lt!9013 () Unit!512)

(assert (=> d!4325 (= lt!9013 (choose!210 lt!8688 lt!8683 (minValue!1666 (_2!487 lt!8158)) lt!8675))))

(declare-fun e!15613 () Bool)

(assert (=> d!4325 e!15613))

(declare-fun res!14755 () Bool)

(assert (=> d!4325 (=> (not res!14755) (not e!15613))))

(assert (=> d!4325 (= res!14755 (contains!230 lt!8688 lt!8675))))

(assert (=> d!4325 (= (addApplyDifferent!14 lt!8688 lt!8683 (minValue!1666 (_2!487 lt!8158)) lt!8675) lt!9013)))

(declare-fun b!24126 () Bool)

(assert (=> b!24126 (= e!15613 (not (= lt!8675 lt!8683)))))

(assert (= (and d!4325 res!14755) b!24126))

(assert (=> d!4325 m!17411))

(assert (=> d!4325 m!17413))

(assert (=> d!4325 m!17411))

(declare-fun m!18369 () Bool)

(assert (=> d!4325 m!18369))

(declare-fun m!18371 () Bool)

(assert (=> d!4325 m!18371))

(assert (=> d!4325 m!17395))

(assert (=> b!23739 d!4325))

(declare-fun d!4327 () Bool)

(declare-fun e!15614 () Bool)

(assert (=> d!4327 e!15614))

(declare-fun res!14756 () Bool)

(assert (=> d!4327 (=> (not res!14756) (not e!15614))))

(declare-fun lt!9016 () ListLongMap!567)

(assert (=> d!4327 (= res!14756 (contains!230 lt!9016 (_1!489 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(declare-fun lt!9015 () List!568)

(assert (=> d!4327 (= lt!9016 (ListLongMap!568 lt!9015))))

(declare-fun lt!9014 () Unit!512)

(declare-fun lt!9017 () Unit!512)

(assert (=> d!4327 (= lt!9014 lt!9017)))

(assert (=> d!4327 (= (getValueByKey!61 lt!9015 (_1!489 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (Some!66 (_2!489 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(assert (=> d!4327 (= lt!9017 (lemmaContainsTupThenGetReturnValue!18 lt!9015 (_1!489 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (_2!489 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(assert (=> d!4327 (= lt!9015 (insertStrictlySorted!18 (toList!299 (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158)))) (_1!489 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (_2!489 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(assert (=> d!4327 (= (+!45 (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) lt!9016)))

(declare-fun b!24127 () Bool)

(declare-fun res!14757 () Bool)

(assert (=> b!24127 (=> (not res!14757) (not e!15614))))

(assert (=> b!24127 (= res!14757 (= (getValueByKey!61 (toList!299 lt!9016) (_1!489 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (Some!66 (_2!489 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(declare-fun b!24128 () Bool)

(assert (=> b!24128 (= e!15614 (contains!232 (toList!299 lt!9016) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))

(assert (= (and d!4327 res!14756) b!24127))

(assert (= (and b!24127 res!14757) b!24128))

(declare-fun m!18373 () Bool)

(assert (=> d!4327 m!18373))

(declare-fun m!18375 () Bool)

(assert (=> d!4327 m!18375))

(declare-fun m!18377 () Bool)

(assert (=> d!4327 m!18377))

(declare-fun m!18379 () Bool)

(assert (=> d!4327 m!18379))

(declare-fun m!18381 () Bool)

(assert (=> b!24127 m!18381))

(declare-fun m!18383 () Bool)

(assert (=> b!24128 m!18383))

(assert (=> d!4055 d!4327))

(assert (=> d!4055 d!4071))

(declare-fun d!4329 () Bool)

(assert (=> d!4329 (= (+!45 (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) lt!8271 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))

(assert (=> d!4329 true))

(declare-fun _$7!37 () Unit!512)

(assert (=> d!4329 (= (choose!205 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) lt!8271 (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (_2!487 lt!8158)) (defaultEntry!1743 (_2!487 lt!8158))) _$7!37)))

(declare-fun bs!997 () Bool)

(assert (= bs!997 d!4329))

(assert (=> bs!997 m!16852))

(assert (=> bs!997 m!16852))

(assert (=> bs!997 m!17194))

(assert (=> bs!997 m!17192))

(assert (=> d!4055 d!4329))

(assert (=> d!4055 d!4145))

(declare-fun bm!2071 () Bool)

(declare-fun call!2075 () Bool)

(declare-fun lt!9035 () ListLongMap!567)

(assert (=> bm!2071 (= call!2075 (contains!230 lt!9035 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!2072 () Bool)

(declare-fun call!2077 () Bool)

(assert (=> bm!2072 (= call!2077 (contains!230 lt!9035 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24129 () Bool)

(declare-fun e!15622 () Bool)

(declare-fun e!15623 () Bool)

(assert (=> b!24129 (= e!15622 e!15623)))

(declare-fun res!14766 () Bool)

(assert (=> b!24129 (=> (not res!14766) (not e!15623))))

(assert (=> b!24129 (= res!14766 (contains!230 lt!9035 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000)))))

(assert (=> b!24129 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))))))

(declare-fun b!24130 () Bool)

(declare-fun e!15616 () Unit!512)

(declare-fun lt!9020 () Unit!512)

(assert (=> b!24130 (= e!15616 lt!9020)))

(declare-fun lt!9032 () ListLongMap!567)

(assert (=> b!24130 (= lt!9032 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) lt!8271 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))

(declare-fun lt!9027 () (_ BitVec 64))

(assert (=> b!24130 (= lt!9027 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9036 () (_ BitVec 64))

(assert (=> b!24130 (= lt!9036 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000))))

(declare-fun lt!9028 () Unit!512)

(assert (=> b!24130 (= lt!9028 (addStillContains!14 lt!9032 lt!9027 (minValue!1666 (v!1604 (underlying!116 thiss!938))) lt!9036))))

(assert (=> b!24130 (contains!230 (+!45 lt!9032 (tuple2!961 lt!9027 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) lt!9036)))

(declare-fun lt!9039 () Unit!512)

(assert (=> b!24130 (= lt!9039 lt!9028)))

(declare-fun lt!9023 () ListLongMap!567)

(assert (=> b!24130 (= lt!9023 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) lt!8271 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))

(declare-fun lt!9038 () (_ BitVec 64))

(assert (=> b!24130 (= lt!9038 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9037 () (_ BitVec 64))

(assert (=> b!24130 (= lt!9037 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000))))

(declare-fun lt!9022 () Unit!512)

(assert (=> b!24130 (= lt!9022 (addApplyDifferent!14 lt!9023 lt!9038 (minValue!1666 (_2!487 lt!8158)) lt!9037))))

(assert (=> b!24130 (= (apply!29 (+!45 lt!9023 (tuple2!961 lt!9038 (minValue!1666 (_2!487 lt!8158)))) lt!9037) (apply!29 lt!9023 lt!9037))))

(declare-fun lt!9021 () Unit!512)

(assert (=> b!24130 (= lt!9021 lt!9022)))

(declare-fun lt!9030 () ListLongMap!567)

(assert (=> b!24130 (= lt!9030 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) lt!8271 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))

(declare-fun lt!9033 () (_ BitVec 64))

(assert (=> b!24130 (= lt!9033 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9019 () (_ BitVec 64))

(assert (=> b!24130 (= lt!9019 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000))))

(declare-fun lt!9024 () Unit!512)

(assert (=> b!24130 (= lt!9024 (addApplyDifferent!14 lt!9030 lt!9033 (minValue!1666 (v!1604 (underlying!116 thiss!938))) lt!9019))))

(assert (=> b!24130 (= (apply!29 (+!45 lt!9030 (tuple2!961 lt!9033 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) lt!9019) (apply!29 lt!9030 lt!9019))))

(declare-fun lt!9029 () Unit!512)

(assert (=> b!24130 (= lt!9029 lt!9024)))

(declare-fun lt!9031 () ListLongMap!567)

(assert (=> b!24130 (= lt!9031 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) lt!8271 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))

(declare-fun lt!9026 () (_ BitVec 64))

(assert (=> b!24130 (= lt!9026 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9018 () (_ BitVec 64))

(assert (=> b!24130 (= lt!9018 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000))))

(assert (=> b!24130 (= lt!9020 (addApplyDifferent!14 lt!9031 lt!9026 (minValue!1666 (_2!487 lt!8158)) lt!9018))))

(assert (=> b!24130 (= (apply!29 (+!45 lt!9031 (tuple2!961 lt!9026 (minValue!1666 (_2!487 lt!8158)))) lt!9018) (apply!29 lt!9031 lt!9018))))

(declare-fun call!2078 () ListLongMap!567)

(declare-fun bm!2073 () Bool)

(assert (=> bm!2073 (= call!2078 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) lt!8271 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))

(declare-fun b!24131 () Bool)

(declare-fun res!14761 () Bool)

(declare-fun e!15619 () Bool)

(assert (=> b!24131 (=> (not res!14761) (not e!15619))))

(declare-fun e!15615 () Bool)

(assert (=> b!24131 (= res!14761 e!15615)))

(declare-fun c!3198 () Bool)

(assert (=> b!24131 (= c!3198 (not (= (bvand lt!8271 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!24132 () Bool)

(declare-fun e!15627 () Bool)

(assert (=> b!24132 (= e!15627 (not call!2077))))

(declare-fun b!24133 () Bool)

(assert (=> b!24133 (= e!15615 (not call!2075))))

(declare-fun bm!2074 () Bool)

(declare-fun call!2079 () ListLongMap!567)

(assert (=> bm!2074 (= call!2079 call!2078)))

(declare-fun b!24134 () Bool)

(declare-fun e!15625 () ListLongMap!567)

(declare-fun call!2080 () ListLongMap!567)

(assert (=> b!24134 (= e!15625 call!2080)))

(declare-fun b!24135 () Bool)

(declare-fun res!14764 () Bool)

(assert (=> b!24135 (=> (not res!14764) (not e!15619))))

(assert (=> b!24135 (= res!14764 e!15622)))

(declare-fun res!14759 () Bool)

(assert (=> b!24135 (=> res!14759 e!15622)))

(declare-fun e!15618 () Bool)

(assert (=> b!24135 (= res!14759 (not e!15618))))

(declare-fun res!14763 () Bool)

(assert (=> b!24135 (=> (not res!14763) (not e!15618))))

(assert (=> b!24135 (= res!14763 (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))))))

(declare-fun b!24137 () Bool)

(declare-fun e!15620 () ListLongMap!567)

(assert (=> b!24137 (= e!15620 call!2080)))

(declare-fun b!24138 () Bool)

(declare-fun e!15621 () Bool)

(assert (=> b!24138 (= e!15615 e!15621)))

(declare-fun res!14765 () Bool)

(assert (=> b!24138 (= res!14765 call!2075)))

(assert (=> b!24138 (=> (not res!14765) (not e!15621))))

(declare-fun b!24139 () Bool)

(assert (=> b!24139 (= e!15619 e!15627)))

(declare-fun c!3196 () Bool)

(assert (=> b!24139 (= c!3196 (not (= (bvand lt!8271 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!2075 () Bool)

(declare-fun call!2074 () ListLongMap!567)

(assert (=> bm!2075 (= call!2074 call!2079)))

(declare-fun b!24140 () Bool)

(assert (=> b!24140 (= e!15625 call!2074)))

(declare-fun b!24141 () Bool)

(declare-fun e!15626 () Bool)

(assert (=> b!24141 (= e!15626 (= (apply!29 lt!9035 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!1666 (_2!487 lt!8158))))))

(declare-fun b!24142 () Bool)

(declare-fun c!3199 () Bool)

(assert (=> b!24142 (= c!3199 (and (not (= (bvand lt!8271 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!8271 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!24142 (= e!15620 e!15625)))

(declare-fun b!24143 () Bool)

(assert (=> b!24143 (= e!15618 (validKeyInArray!0 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000)))))

(declare-fun bm!2076 () Bool)

(declare-fun call!2076 () ListLongMap!567)

(assert (=> bm!2076 (= call!2080 call!2076)))

(declare-fun b!24144 () Bool)

(assert (=> b!24144 (= e!15627 e!15626)))

(declare-fun res!14762 () Bool)

(assert (=> b!24144 (= res!14762 call!2077)))

(assert (=> b!24144 (=> (not res!14762) (not e!15626))))

(declare-fun c!3201 () Bool)

(declare-fun bm!2077 () Bool)

(declare-fun c!3197 () Bool)

(assert (=> bm!2077 (= call!2076 (+!45 (ite c!3197 call!2078 (ite c!3201 call!2079 call!2074)) (ite (or c!3197 c!3201) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!487 lt!8158))))))))

(declare-fun b!24145 () Bool)

(assert (=> b!24145 (= e!15621 (= (apply!29 lt!9035 #b0000000000000000000000000000000000000000000000000000000000000000) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))

(declare-fun b!24146 () Bool)

(declare-fun e!15617 () ListLongMap!567)

(assert (=> b!24146 (= e!15617 e!15620)))

(assert (=> b!24146 (= c!3201 (and (not (= (bvand lt!8271 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!8271 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!24147 () Bool)

(declare-fun e!15624 () Bool)

(assert (=> b!24147 (= e!15624 (validKeyInArray!0 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000)))))

(declare-fun b!24136 () Bool)

(assert (=> b!24136 (= e!15617 (+!45 call!2076 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!487 lt!8158)))))))

(declare-fun d!4331 () Bool)

(assert (=> d!4331 e!15619))

(declare-fun res!14758 () Bool)

(assert (=> d!4331 (=> (not res!14758) (not e!15619))))

(assert (=> d!4331 (= res!14758 (or (bvsge #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))))))))

(declare-fun lt!9025 () ListLongMap!567)

(assert (=> d!4331 (= lt!9035 lt!9025)))

(declare-fun lt!9034 () Unit!512)

(assert (=> d!4331 (= lt!9034 e!15616)))

(declare-fun c!3200 () Bool)

(assert (=> d!4331 (= c!3200 e!15624)))

(declare-fun res!14760 () Bool)

(assert (=> d!4331 (=> (not res!14760) (not e!15624))))

(assert (=> d!4331 (= res!14760 (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))))))

(assert (=> d!4331 (= lt!9025 e!15617)))

(assert (=> d!4331 (= c!3197 (and (not (= (bvand lt!8271 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!8271 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!4331 (validMask!0 (mask!4730 (_2!487 lt!8158)))))

(assert (=> d!4331 (= (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) lt!8271 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))) lt!9035)))

(declare-fun b!24148 () Bool)

(declare-fun Unit!553 () Unit!512)

(assert (=> b!24148 (= e!15616 Unit!553)))

(declare-fun b!24149 () Bool)

(assert (=> b!24149 (= e!15623 (= (apply!29 lt!9035 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000)) (get!390 (select (arr!607 (_values!1729 (_2!487 lt!8158))) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (_2!487 lt!8158)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!24149 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!703 (_values!1729 (_2!487 lt!8158)))))))

(assert (=> b!24149 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))))))

(assert (= (and d!4331 c!3197) b!24136))

(assert (= (and d!4331 (not c!3197)) b!24146))

(assert (= (and b!24146 c!3201) b!24137))

(assert (= (and b!24146 (not c!3201)) b!24142))

(assert (= (and b!24142 c!3199) b!24134))

(assert (= (and b!24142 (not c!3199)) b!24140))

(assert (= (or b!24134 b!24140) bm!2075))

(assert (= (or b!24137 bm!2075) bm!2074))

(assert (= (or b!24137 b!24134) bm!2076))

(assert (= (or b!24136 bm!2074) bm!2073))

(assert (= (or b!24136 bm!2076) bm!2077))

(assert (= (and d!4331 res!14760) b!24147))

(assert (= (and d!4331 c!3200) b!24130))

(assert (= (and d!4331 (not c!3200)) b!24148))

(assert (= (and d!4331 res!14758) b!24135))

(assert (= (and b!24135 res!14763) b!24143))

(assert (= (and b!24135 (not res!14759)) b!24129))

(assert (= (and b!24129 res!14766) b!24149))

(assert (= (and b!24135 res!14764) b!24131))

(assert (= (and b!24131 c!3198) b!24138))

(assert (= (and b!24131 (not c!3198)) b!24133))

(assert (= (and b!24138 res!14765) b!24145))

(assert (= (or b!24138 b!24133) bm!2071))

(assert (= (and b!24131 res!14761) b!24139))

(assert (= (and b!24139 c!3196) b!24144))

(assert (= (and b!24139 (not c!3196)) b!24132))

(assert (= (and b!24144 res!14762) b!24141))

(assert (= (or b!24144 b!24132) bm!2072))

(declare-fun b_lambda!1613 () Bool)

(assert (=> (not b_lambda!1613) (not b!24149)))

(assert (=> b!24149 t!3242))

(declare-fun b_and!1519 () Bool)

(assert (= b_and!1517 (and (=> t!3242 result!1099) b_and!1519)))

(declare-fun m!18385 () Bool)

(assert (=> bm!2073 m!18385))

(declare-fun m!18387 () Bool)

(assert (=> b!24145 m!18387))

(assert (=> b!24147 m!16986))

(assert (=> b!24147 m!16986))

(assert (=> b!24147 m!16988))

(assert (=> d!4331 m!16990))

(assert (=> b!24129 m!16986))

(assert (=> b!24129 m!16986))

(declare-fun m!18389 () Bool)

(assert (=> b!24129 m!18389))

(declare-fun m!18391 () Bool)

(assert (=> b!24130 m!18391))

(declare-fun m!18393 () Bool)

(assert (=> b!24130 m!18393))

(declare-fun m!18395 () Bool)

(assert (=> b!24130 m!18395))

(assert (=> b!24130 m!18393))

(declare-fun m!18397 () Bool)

(assert (=> b!24130 m!18397))

(declare-fun m!18399 () Bool)

(assert (=> b!24130 m!18399))

(declare-fun m!18401 () Bool)

(assert (=> b!24130 m!18401))

(declare-fun m!18403 () Bool)

(assert (=> b!24130 m!18403))

(declare-fun m!18405 () Bool)

(assert (=> b!24130 m!18405))

(declare-fun m!18407 () Bool)

(assert (=> b!24130 m!18407))

(declare-fun m!18409 () Bool)

(assert (=> b!24130 m!18409))

(assert (=> b!24130 m!18395))

(declare-fun m!18411 () Bool)

(assert (=> b!24130 m!18411))

(declare-fun m!18413 () Bool)

(assert (=> b!24130 m!18413))

(assert (=> b!24130 m!18401))

(declare-fun m!18415 () Bool)

(assert (=> b!24130 m!18415))

(assert (=> b!24130 m!16986))

(declare-fun m!18417 () Bool)

(assert (=> b!24130 m!18417))

(assert (=> b!24130 m!18385))

(declare-fun m!18419 () Bool)

(assert (=> b!24130 m!18419))

(assert (=> b!24130 m!18407))

(assert (=> b!24143 m!16986))

(assert (=> b!24143 m!16986))

(assert (=> b!24143 m!16988))

(assert (=> b!24149 m!17425))

(assert (=> b!24149 m!17425))

(assert (=> b!24149 m!17026))

(assert (=> b!24149 m!17427))

(assert (=> b!24149 m!17026))

(assert (=> b!24149 m!16986))

(declare-fun m!18421 () Bool)

(assert (=> b!24149 m!18421))

(assert (=> b!24149 m!16986))

(declare-fun m!18423 () Bool)

(assert (=> bm!2072 m!18423))

(declare-fun m!18425 () Bool)

(assert (=> bm!2071 m!18425))

(declare-fun m!18427 () Bool)

(assert (=> b!24136 m!18427))

(declare-fun m!18429 () Bool)

(assert (=> b!24141 m!18429))

(declare-fun m!18431 () Bool)

(assert (=> bm!2077 m!18431))

(assert (=> d!4055 d!4331))

(declare-fun b!24153 () Bool)

(declare-fun e!15628 () Bool)

(assert (=> b!24153 (= e!15628 (and (bvsge (extraKeys!1641 (_2!487 lt!8249)) #b00000000000000000000000000000000) (bvsle (extraKeys!1641 (_2!487 lt!8249)) #b00000000000000000000000000000011) (bvsge (_vacant!150 (_2!487 lt!8249)) #b00000000000000000000000000000000)))))

(declare-fun b!24150 () Bool)

(declare-fun res!14767 () Bool)

(assert (=> b!24150 (=> (not res!14767) (not e!15628))))

(assert (=> b!24150 (= res!14767 (and (= (size!703 (_values!1729 (_2!487 lt!8249))) (bvadd (mask!4730 (_2!487 lt!8249)) #b00000000000000000000000000000001)) (= (size!704 (_keys!3164 (_2!487 lt!8249))) (size!703 (_values!1729 (_2!487 lt!8249)))) (bvsge (_size!150 (_2!487 lt!8249)) #b00000000000000000000000000000000) (bvsle (_size!150 (_2!487 lt!8249)) (bvadd (mask!4730 (_2!487 lt!8249)) #b00000000000000000000000000000001))))))

(declare-fun b!24151 () Bool)

(declare-fun res!14768 () Bool)

(assert (=> b!24151 (=> (not res!14768) (not e!15628))))

(assert (=> b!24151 (= res!14768 (bvsge (size!711 (_2!487 lt!8249)) (_size!150 (_2!487 lt!8249))))))

(declare-fun b!24152 () Bool)

(declare-fun res!14770 () Bool)

(assert (=> b!24152 (=> (not res!14770) (not e!15628))))

(assert (=> b!24152 (= res!14770 (= (size!711 (_2!487 lt!8249)) (bvadd (_size!150 (_2!487 lt!8249)) (bvsdiv (bvadd (extraKeys!1641 (_2!487 lt!8249)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun d!4333 () Bool)

(declare-fun res!14769 () Bool)

(assert (=> d!4333 (=> (not res!14769) (not e!15628))))

(assert (=> d!4333 (= res!14769 (validMask!0 (mask!4730 (_2!487 lt!8249))))))

(assert (=> d!4333 (= (simpleValid!20 (_2!487 lt!8249)) e!15628)))

(assert (= (and d!4333 res!14769) b!24150))

(assert (= (and b!24150 res!14767) b!24151))

(assert (= (and b!24151 res!14768) b!24152))

(assert (= (and b!24152 res!14770) b!24153))

(declare-fun m!18433 () Bool)

(assert (=> b!24151 m!18433))

(assert (=> b!24152 m!18433))

(declare-fun m!18435 () Bool)

(assert (=> d!4333 m!18435))

(assert (=> d!4083 d!4333))

(declare-fun d!4335 () Bool)

(declare-fun e!15629 () Bool)

(assert (=> d!4335 e!15629))

(declare-fun res!14771 () Bool)

(assert (=> d!4335 (=> res!14771 e!15629)))

(declare-fun lt!9040 () Bool)

(assert (=> d!4335 (= res!14771 (not lt!9040))))

(declare-fun lt!9041 () Bool)

(assert (=> d!4335 (= lt!9040 lt!9041)))

(declare-fun lt!9042 () Unit!512)

(declare-fun e!15630 () Unit!512)

(assert (=> d!4335 (= lt!9042 e!15630)))

(declare-fun c!3202 () Bool)

(assert (=> d!4335 (= c!3202 lt!9041)))

(assert (=> d!4335 (= lt!9041 (containsKey!25 (toList!299 lt!8568) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!4335 (= (contains!230 lt!8568 #b1000000000000000000000000000000000000000000000000000000000000000) lt!9040)))

(declare-fun b!24154 () Bool)

(declare-fun lt!9043 () Unit!512)

(assert (=> b!24154 (= e!15630 lt!9043)))

(assert (=> b!24154 (= lt!9043 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!299 lt!8568) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!24154 (isDefined!23 (getValueByKey!61 (toList!299 lt!8568) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24155 () Bool)

(declare-fun Unit!554 () Unit!512)

(assert (=> b!24155 (= e!15630 Unit!554)))

(declare-fun b!24156 () Bool)

(assert (=> b!24156 (= e!15629 (isDefined!23 (getValueByKey!61 (toList!299 lt!8568) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!4335 c!3202) b!24154))

(assert (= (and d!4335 (not c!3202)) b!24155))

(assert (= (and d!4335 (not res!14771)) b!24156))

(declare-fun m!18437 () Bool)

(assert (=> d!4335 m!18437))

(declare-fun m!18439 () Bool)

(assert (=> b!24154 m!18439))

(declare-fun m!18441 () Bool)

(assert (=> b!24154 m!18441))

(assert (=> b!24154 m!18441))

(declare-fun m!18443 () Bool)

(assert (=> b!24154 m!18443))

(assert (=> b!24156 m!18441))

(assert (=> b!24156 m!18441))

(assert (=> b!24156 m!18443))

(assert (=> bm!2007 d!4335))

(assert (=> d!4039 d!4145))

(declare-fun bm!2078 () Bool)

(declare-fun call!2082 () Bool)

(declare-fun lt!9061 () ListLongMap!567)

(assert (=> bm!2078 (= call!2082 (contains!230 lt!9061 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!2079 () Bool)

(declare-fun call!2084 () Bool)

(assert (=> bm!2079 (= call!2084 (contains!230 lt!9061 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24157 () Bool)

(declare-fun e!15638 () Bool)

(declare-fun e!15639 () Bool)

(assert (=> b!24157 (= e!15638 e!15639)))

(declare-fun res!14780 () Bool)

(assert (=> b!24157 (=> (not res!14780) (not e!15639))))

(assert (=> b!24157 (= res!14780 (contains!230 lt!9061 (select (arr!608 (_keys!3164 lt!8345)) #b00000000000000000000000000000000)))))

(assert (=> b!24157 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8345))))))

(declare-fun b!24158 () Bool)

(declare-fun e!15632 () Unit!512)

(declare-fun lt!9046 () Unit!512)

(assert (=> b!24158 (= e!15632 lt!9046)))

(declare-fun lt!9058 () ListLongMap!567)

(assert (=> b!24158 (= lt!9058 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8345) (_values!1729 lt!8345) (mask!4730 lt!8345) (extraKeys!1641 lt!8345) (zeroValue!1666 lt!8345) (minValue!1666 lt!8345) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8345)))))

(declare-fun lt!9053 () (_ BitVec 64))

(assert (=> b!24158 (= lt!9053 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9062 () (_ BitVec 64))

(assert (=> b!24158 (= lt!9062 (select (arr!608 (_keys!3164 lt!8345)) #b00000000000000000000000000000000))))

(declare-fun lt!9054 () Unit!512)

(assert (=> b!24158 (= lt!9054 (addStillContains!14 lt!9058 lt!9053 (zeroValue!1666 lt!8345) lt!9062))))

(assert (=> b!24158 (contains!230 (+!45 lt!9058 (tuple2!961 lt!9053 (zeroValue!1666 lt!8345))) lt!9062)))

(declare-fun lt!9065 () Unit!512)

(assert (=> b!24158 (= lt!9065 lt!9054)))

(declare-fun lt!9049 () ListLongMap!567)

(assert (=> b!24158 (= lt!9049 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8345) (_values!1729 lt!8345) (mask!4730 lt!8345) (extraKeys!1641 lt!8345) (zeroValue!1666 lt!8345) (minValue!1666 lt!8345) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8345)))))

(declare-fun lt!9064 () (_ BitVec 64))

(assert (=> b!24158 (= lt!9064 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9063 () (_ BitVec 64))

(assert (=> b!24158 (= lt!9063 (select (arr!608 (_keys!3164 lt!8345)) #b00000000000000000000000000000000))))

(declare-fun lt!9048 () Unit!512)

(assert (=> b!24158 (= lt!9048 (addApplyDifferent!14 lt!9049 lt!9064 (minValue!1666 lt!8345) lt!9063))))

(assert (=> b!24158 (= (apply!29 (+!45 lt!9049 (tuple2!961 lt!9064 (minValue!1666 lt!8345))) lt!9063) (apply!29 lt!9049 lt!9063))))

(declare-fun lt!9047 () Unit!512)

(assert (=> b!24158 (= lt!9047 lt!9048)))

(declare-fun lt!9056 () ListLongMap!567)

(assert (=> b!24158 (= lt!9056 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8345) (_values!1729 lt!8345) (mask!4730 lt!8345) (extraKeys!1641 lt!8345) (zeroValue!1666 lt!8345) (minValue!1666 lt!8345) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8345)))))

(declare-fun lt!9059 () (_ BitVec 64))

(assert (=> b!24158 (= lt!9059 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9045 () (_ BitVec 64))

(assert (=> b!24158 (= lt!9045 (select (arr!608 (_keys!3164 lt!8345)) #b00000000000000000000000000000000))))

(declare-fun lt!9050 () Unit!512)

(assert (=> b!24158 (= lt!9050 (addApplyDifferent!14 lt!9056 lt!9059 (zeroValue!1666 lt!8345) lt!9045))))

(assert (=> b!24158 (= (apply!29 (+!45 lt!9056 (tuple2!961 lt!9059 (zeroValue!1666 lt!8345))) lt!9045) (apply!29 lt!9056 lt!9045))))

(declare-fun lt!9055 () Unit!512)

(assert (=> b!24158 (= lt!9055 lt!9050)))

(declare-fun lt!9057 () ListLongMap!567)

(assert (=> b!24158 (= lt!9057 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8345) (_values!1729 lt!8345) (mask!4730 lt!8345) (extraKeys!1641 lt!8345) (zeroValue!1666 lt!8345) (minValue!1666 lt!8345) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8345)))))

(declare-fun lt!9052 () (_ BitVec 64))

(assert (=> b!24158 (= lt!9052 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9044 () (_ BitVec 64))

(assert (=> b!24158 (= lt!9044 (select (arr!608 (_keys!3164 lt!8345)) #b00000000000000000000000000000000))))

(assert (=> b!24158 (= lt!9046 (addApplyDifferent!14 lt!9057 lt!9052 (minValue!1666 lt!8345) lt!9044))))

(assert (=> b!24158 (= (apply!29 (+!45 lt!9057 (tuple2!961 lt!9052 (minValue!1666 lt!8345))) lt!9044) (apply!29 lt!9057 lt!9044))))

(declare-fun bm!2080 () Bool)

(declare-fun call!2085 () ListLongMap!567)

(assert (=> bm!2080 (= call!2085 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8345) (_values!1729 lt!8345) (mask!4730 lt!8345) (extraKeys!1641 lt!8345) (zeroValue!1666 lt!8345) (minValue!1666 lt!8345) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8345)))))

(declare-fun b!24159 () Bool)

(declare-fun res!14775 () Bool)

(declare-fun e!15635 () Bool)

(assert (=> b!24159 (=> (not res!14775) (not e!15635))))

(declare-fun e!15631 () Bool)

(assert (=> b!24159 (= res!14775 e!15631)))

(declare-fun c!3205 () Bool)

(assert (=> b!24159 (= c!3205 (not (= (bvand (extraKeys!1641 lt!8345) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!24160 () Bool)

(declare-fun e!15643 () Bool)

(assert (=> b!24160 (= e!15643 (not call!2084))))

(declare-fun b!24161 () Bool)

(assert (=> b!24161 (= e!15631 (not call!2082))))

(declare-fun bm!2081 () Bool)

(declare-fun call!2086 () ListLongMap!567)

(assert (=> bm!2081 (= call!2086 call!2085)))

(declare-fun b!24162 () Bool)

(declare-fun e!15641 () ListLongMap!567)

(declare-fun call!2087 () ListLongMap!567)

(assert (=> b!24162 (= e!15641 call!2087)))

(declare-fun b!24163 () Bool)

(declare-fun res!14778 () Bool)

(assert (=> b!24163 (=> (not res!14778) (not e!15635))))

(assert (=> b!24163 (= res!14778 e!15638)))

(declare-fun res!14773 () Bool)

(assert (=> b!24163 (=> res!14773 e!15638)))

(declare-fun e!15634 () Bool)

(assert (=> b!24163 (= res!14773 (not e!15634))))

(declare-fun res!14777 () Bool)

(assert (=> b!24163 (=> (not res!14777) (not e!15634))))

(assert (=> b!24163 (= res!14777 (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8345))))))

(declare-fun b!24165 () Bool)

(declare-fun e!15636 () ListLongMap!567)

(assert (=> b!24165 (= e!15636 call!2087)))

(declare-fun b!24166 () Bool)

(declare-fun e!15637 () Bool)

(assert (=> b!24166 (= e!15631 e!15637)))

(declare-fun res!14779 () Bool)

(assert (=> b!24166 (= res!14779 call!2082)))

(assert (=> b!24166 (=> (not res!14779) (not e!15637))))

(declare-fun b!24167 () Bool)

(assert (=> b!24167 (= e!15635 e!15643)))

(declare-fun c!3203 () Bool)

(assert (=> b!24167 (= c!3203 (not (= (bvand (extraKeys!1641 lt!8345) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!2082 () Bool)

(declare-fun call!2081 () ListLongMap!567)

(assert (=> bm!2082 (= call!2081 call!2086)))

(declare-fun b!24168 () Bool)

(assert (=> b!24168 (= e!15641 call!2081)))

(declare-fun b!24169 () Bool)

(declare-fun e!15642 () Bool)

(assert (=> b!24169 (= e!15642 (= (apply!29 lt!9061 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!1666 lt!8345)))))

(declare-fun b!24170 () Bool)

(declare-fun c!3206 () Bool)

(assert (=> b!24170 (= c!3206 (and (not (= (bvand (extraKeys!1641 lt!8345) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 lt!8345) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!24170 (= e!15636 e!15641)))

(declare-fun b!24171 () Bool)

(assert (=> b!24171 (= e!15634 (validKeyInArray!0 (select (arr!608 (_keys!3164 lt!8345)) #b00000000000000000000000000000000)))))

(declare-fun bm!2083 () Bool)

(declare-fun call!2083 () ListLongMap!567)

(assert (=> bm!2083 (= call!2087 call!2083)))

(declare-fun b!24172 () Bool)

(assert (=> b!24172 (= e!15643 e!15642)))

(declare-fun res!14776 () Bool)

(assert (=> b!24172 (= res!14776 call!2084)))

(assert (=> b!24172 (=> (not res!14776) (not e!15642))))

(declare-fun c!3208 () Bool)

(declare-fun c!3204 () Bool)

(declare-fun bm!2084 () Bool)

(assert (=> bm!2084 (= call!2083 (+!45 (ite c!3204 call!2085 (ite c!3208 call!2086 call!2081)) (ite (or c!3204 c!3208) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 lt!8345)) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8345)))))))

(declare-fun b!24173 () Bool)

(assert (=> b!24173 (= e!15637 (= (apply!29 lt!9061 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!1666 lt!8345)))))

(declare-fun b!24174 () Bool)

(declare-fun e!15633 () ListLongMap!567)

(assert (=> b!24174 (= e!15633 e!15636)))

(assert (=> b!24174 (= c!3208 (and (not (= (bvand (extraKeys!1641 lt!8345) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 lt!8345) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!24175 () Bool)

(declare-fun e!15640 () Bool)

(assert (=> b!24175 (= e!15640 (validKeyInArray!0 (select (arr!608 (_keys!3164 lt!8345)) #b00000000000000000000000000000000)))))

(declare-fun b!24164 () Bool)

(assert (=> b!24164 (= e!15633 (+!45 call!2083 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8345))))))

(declare-fun d!4337 () Bool)

(assert (=> d!4337 e!15635))

(declare-fun res!14772 () Bool)

(assert (=> d!4337 (=> (not res!14772) (not e!15635))))

(assert (=> d!4337 (= res!14772 (or (bvsge #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8345))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8345))))))))

(declare-fun lt!9051 () ListLongMap!567)

(assert (=> d!4337 (= lt!9061 lt!9051)))

(declare-fun lt!9060 () Unit!512)

(assert (=> d!4337 (= lt!9060 e!15632)))

(declare-fun c!3207 () Bool)

(assert (=> d!4337 (= c!3207 e!15640)))

(declare-fun res!14774 () Bool)

(assert (=> d!4337 (=> (not res!14774) (not e!15640))))

(assert (=> d!4337 (= res!14774 (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8345))))))

(assert (=> d!4337 (= lt!9051 e!15633)))

(assert (=> d!4337 (= c!3204 (and (not (= (bvand (extraKeys!1641 lt!8345) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!1641 lt!8345) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!4337 (validMask!0 (mask!4730 lt!8345))))

(assert (=> d!4337 (= (getCurrentListMap!130 (_keys!3164 lt!8345) (_values!1729 lt!8345) (mask!4730 lt!8345) (extraKeys!1641 lt!8345) (zeroValue!1666 lt!8345) (minValue!1666 lt!8345) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8345)) lt!9061)))

(declare-fun b!24176 () Bool)

(declare-fun Unit!555 () Unit!512)

(assert (=> b!24176 (= e!15632 Unit!555)))

(declare-fun b!24177 () Bool)

(assert (=> b!24177 (= e!15639 (= (apply!29 lt!9061 (select (arr!608 (_keys!3164 lt!8345)) #b00000000000000000000000000000000)) (get!390 (select (arr!607 (_values!1729 lt!8345)) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 lt!8345) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!24177 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!703 (_values!1729 lt!8345))))))

(assert (=> b!24177 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8345))))))

(assert (= (and d!4337 c!3204) b!24164))

(assert (= (and d!4337 (not c!3204)) b!24174))

(assert (= (and b!24174 c!3208) b!24165))

(assert (= (and b!24174 (not c!3208)) b!24170))

(assert (= (and b!24170 c!3206) b!24162))

(assert (= (and b!24170 (not c!3206)) b!24168))

(assert (= (or b!24162 b!24168) bm!2082))

(assert (= (or b!24165 bm!2082) bm!2081))

(assert (= (or b!24165 b!24162) bm!2083))

(assert (= (or b!24164 bm!2081) bm!2080))

(assert (= (or b!24164 bm!2083) bm!2084))

(assert (= (and d!4337 res!14774) b!24175))

(assert (= (and d!4337 c!3207) b!24158))

(assert (= (and d!4337 (not c!3207)) b!24176))

(assert (= (and d!4337 res!14772) b!24163))

(assert (= (and b!24163 res!14777) b!24171))

(assert (= (and b!24163 (not res!14773)) b!24157))

(assert (= (and b!24157 res!14780) b!24177))

(assert (= (and b!24163 res!14778) b!24159))

(assert (= (and b!24159 c!3205) b!24166))

(assert (= (and b!24159 (not c!3205)) b!24161))

(assert (= (and b!24166 res!14779) b!24173))

(assert (= (or b!24166 b!24161) bm!2078))

(assert (= (and b!24159 res!14775) b!24167))

(assert (= (and b!24167 c!3203) b!24172))

(assert (= (and b!24167 (not c!3203)) b!24160))

(assert (= (and b!24172 res!14776) b!24169))

(assert (= (or b!24172 b!24160) bm!2079))

(declare-fun b_lambda!1615 () Bool)

(assert (=> (not b_lambda!1615) (not b!24177)))

(declare-fun t!3246 () Bool)

(declare-fun tb!663 () Bool)

(assert (=> (and b!23142 (= (defaultEntry!1743 (v!1604 (underlying!116 thiss!938))) (defaultEntry!1743 lt!8345)) t!3246) tb!663))

(declare-fun result!1103 () Bool)

(assert (=> tb!663 (= result!1103 tp_is_empty!1023)))

(assert (=> b!24177 t!3246))

(declare-fun b_and!1521 () Bool)

(assert (= b_and!1519 (and (=> t!3246 result!1103) b_and!1521)))

(declare-fun m!18445 () Bool)

(assert (=> bm!2080 m!18445))

(declare-fun m!18447 () Bool)

(assert (=> b!24173 m!18447))

(assert (=> b!24175 m!17787))

(assert (=> b!24175 m!17787))

(assert (=> b!24175 m!17789))

(declare-fun m!18449 () Bool)

(assert (=> d!4337 m!18449))

(assert (=> b!24157 m!17787))

(assert (=> b!24157 m!17787))

(declare-fun m!18451 () Bool)

(assert (=> b!24157 m!18451))

(declare-fun m!18453 () Bool)

(assert (=> b!24158 m!18453))

(declare-fun m!18455 () Bool)

(assert (=> b!24158 m!18455))

(declare-fun m!18457 () Bool)

(assert (=> b!24158 m!18457))

(assert (=> b!24158 m!18455))

(declare-fun m!18459 () Bool)

(assert (=> b!24158 m!18459))

(declare-fun m!18461 () Bool)

(assert (=> b!24158 m!18461))

(declare-fun m!18463 () Bool)

(assert (=> b!24158 m!18463))

(declare-fun m!18465 () Bool)

(assert (=> b!24158 m!18465))

(declare-fun m!18467 () Bool)

(assert (=> b!24158 m!18467))

(declare-fun m!18469 () Bool)

(assert (=> b!24158 m!18469))

(declare-fun m!18471 () Bool)

(assert (=> b!24158 m!18471))

(assert (=> b!24158 m!18457))

(declare-fun m!18473 () Bool)

(assert (=> b!24158 m!18473))

(declare-fun m!18475 () Bool)

(assert (=> b!24158 m!18475))

(assert (=> b!24158 m!18463))

(declare-fun m!18477 () Bool)

(assert (=> b!24158 m!18477))

(assert (=> b!24158 m!17787))

(declare-fun m!18479 () Bool)

(assert (=> b!24158 m!18479))

(assert (=> b!24158 m!18445))

(declare-fun m!18481 () Bool)

(assert (=> b!24158 m!18481))

(assert (=> b!24158 m!18469))

(assert (=> b!24171 m!17787))

(assert (=> b!24171 m!17787))

(assert (=> b!24171 m!17789))

(declare-fun m!18483 () Bool)

(assert (=> b!24177 m!18483))

(assert (=> b!24177 m!18483))

(declare-fun m!18485 () Bool)

(assert (=> b!24177 m!18485))

(declare-fun m!18487 () Bool)

(assert (=> b!24177 m!18487))

(assert (=> b!24177 m!18485))

(assert (=> b!24177 m!17787))

(declare-fun m!18489 () Bool)

(assert (=> b!24177 m!18489))

(assert (=> b!24177 m!17787))

(declare-fun m!18491 () Bool)

(assert (=> bm!2079 m!18491))

(declare-fun m!18493 () Bool)

(assert (=> bm!2078 m!18493))

(declare-fun m!18495 () Bool)

(assert (=> b!24164 m!18495))

(declare-fun m!18497 () Bool)

(assert (=> b!24169 m!18497))

(declare-fun m!18499 () Bool)

(assert (=> bm!2084 m!18499))

(assert (=> d!4045 d!4337))

(assert (=> b!23830 d!4065))

(assert (=> b!23511 d!4221))

(declare-fun d!4339 () Bool)

(declare-fun e!15644 () Bool)

(assert (=> d!4339 e!15644))

(declare-fun res!14781 () Bool)

(assert (=> d!4339 (=> res!14781 e!15644)))

(declare-fun lt!9066 () Bool)

(assert (=> d!4339 (= res!14781 (not lt!9066))))

(declare-fun lt!9067 () Bool)

(assert (=> d!4339 (= lt!9066 lt!9067)))

(declare-fun lt!9068 () Unit!512)

(declare-fun e!15645 () Unit!512)

(assert (=> d!4339 (= lt!9068 e!15645)))

(declare-fun c!3209 () Bool)

(assert (=> d!4339 (= c!3209 lt!9067)))

(assert (=> d!4339 (= lt!9067 (containsKey!25 (toList!299 lt!8725) (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000)))))

(assert (=> d!4339 (= (contains!230 lt!8725 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000)) lt!9066)))

(declare-fun b!24178 () Bool)

(declare-fun lt!9069 () Unit!512)

(assert (=> b!24178 (= e!15645 lt!9069)))

(assert (=> b!24178 (= lt!9069 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!299 lt!8725) (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000)))))

(assert (=> b!24178 (isDefined!23 (getValueByKey!61 (toList!299 lt!8725) (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000)))))

(declare-fun b!24179 () Bool)

(declare-fun Unit!556 () Unit!512)

(assert (=> b!24179 (= e!15645 Unit!556)))

(declare-fun b!24180 () Bool)

(assert (=> b!24180 (= e!15644 (isDefined!23 (getValueByKey!61 (toList!299 lt!8725) (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000))))))

(assert (= (and d!4339 c!3209) b!24178))

(assert (= (and d!4339 (not c!3209)) b!24179))

(assert (= (and d!4339 (not res!14781)) b!24180))

(assert (=> d!4339 m!16936))

(declare-fun m!18501 () Bool)

(assert (=> d!4339 m!18501))

(assert (=> b!24178 m!16936))

(declare-fun m!18503 () Bool)

(assert (=> b!24178 m!18503))

(assert (=> b!24178 m!16936))

(declare-fun m!18505 () Bool)

(assert (=> b!24178 m!18505))

(assert (=> b!24178 m!18505))

(declare-fun m!18507 () Bool)

(assert (=> b!24178 m!18507))

(assert (=> b!24180 m!16936))

(assert (=> b!24180 m!18505))

(assert (=> b!24180 m!18505))

(assert (=> b!24180 m!18507))

(assert (=> b!23768 d!4339))

(assert (=> bm!2029 d!4299))

(declare-fun d!4341 () Bool)

(assert (=> d!4341 (= (apply!29 lt!8725 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000)) (get!391 (getValueByKey!61 (toList!299 lt!8725) (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000))))))

(declare-fun bs!998 () Bool)

(assert (= bs!998 d!4341))

(assert (=> bs!998 m!16936))

(assert (=> bs!998 m!18505))

(assert (=> bs!998 m!18505))

(declare-fun m!18509 () Bool)

(assert (=> bs!998 m!18509))

(assert (=> b!23788 d!4341))

(declare-fun d!4343 () Bool)

(declare-fun c!3210 () Bool)

(assert (=> d!4343 (= c!3210 ((_ is ValueCellFull!312) (select (arr!607 (_values!1729 lt!8161)) #b00000000000000000000000000000000)))))

(declare-fun e!15646 () V!1189)

(assert (=> d!4343 (= (get!390 (select (arr!607 (_values!1729 lt!8161)) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 lt!8161) #b0000000000000000000000000000000000000000000000000000000000000000)) e!15646)))

(declare-fun b!24181 () Bool)

(assert (=> b!24181 (= e!15646 (get!392 (select (arr!607 (_values!1729 lt!8161)) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 lt!8161) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!24182 () Bool)

(assert (=> b!24182 (= e!15646 (get!393 (select (arr!607 (_values!1729 lt!8161)) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 lt!8161) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!4343 c!3210) b!24181))

(assert (= (and d!4343 (not c!3210)) b!24182))

(assert (=> b!24181 m!17503))

(assert (=> b!24181 m!17238))

(declare-fun m!18511 () Bool)

(assert (=> b!24181 m!18511))

(assert (=> b!24182 m!17503))

(assert (=> b!24182 m!17238))

(declare-fun m!18513 () Bool)

(assert (=> b!24182 m!18513))

(assert (=> b!23788 d!4343))

(declare-fun d!4345 () Bool)

(assert (=> d!4345 (= (apply!29 lt!8568 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000)) (get!391 (getValueByKey!61 (toList!299 lt!8568) (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000))))))

(declare-fun bs!999 () Bool)

(assert (= bs!999 d!4345))

(assert (=> bs!999 m!16936))

(assert (=> bs!999 m!17797))

(assert (=> bs!999 m!17797))

(declare-fun m!18515 () Bool)

(assert (=> bs!999 m!18515))

(assert (=> b!23666 d!4345))

(declare-fun d!4347 () Bool)

(declare-fun c!3211 () Bool)

(assert (=> d!4347 (= c!3211 ((_ is ValueCellFull!312) (select (arr!607 (ite c!2984 (_values!1729 lt!8161) lt!8260)) #b00000000000000000000000000000000)))))

(declare-fun e!15647 () V!1189)

(assert (=> d!4347 (= (get!390 (select (arr!607 (ite c!2984 (_values!1729 lt!8161) lt!8260)) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 lt!8161) #b0000000000000000000000000000000000000000000000000000000000000000)) e!15647)))

(declare-fun b!24183 () Bool)

(assert (=> b!24183 (= e!15647 (get!392 (select (arr!607 (ite c!2984 (_values!1729 lt!8161) lt!8260)) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 lt!8161) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!24184 () Bool)

(assert (=> b!24184 (= e!15647 (get!393 (select (arr!607 (ite c!2984 (_values!1729 lt!8161) lt!8260)) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 lt!8161) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!4347 c!3211) b!24183))

(assert (= (and d!4347 (not c!3211)) b!24184))

(assert (=> b!24183 m!17290))

(assert (=> b!24183 m!17238))

(declare-fun m!18517 () Bool)

(assert (=> b!24183 m!18517))

(assert (=> b!24184 m!17290))

(assert (=> b!24184 m!17238))

(declare-fun m!18519 () Bool)

(assert (=> b!24184 m!18519))

(assert (=> b!23666 d!4347))

(assert (=> b!23732 d!4023))

(declare-fun b!24188 () Bool)

(declare-fun e!15648 () Bool)

(assert (=> b!24188 (= e!15648 (and (bvsge (extraKeys!1641 (_2!487 lt!8158)) #b00000000000000000000000000000000) (bvsle (extraKeys!1641 (_2!487 lt!8158)) #b00000000000000000000000000000011) (bvsge (_vacant!150 (_2!487 lt!8158)) #b00000000000000000000000000000000)))))

(declare-fun b!24185 () Bool)

(declare-fun res!14782 () Bool)

(assert (=> b!24185 (=> (not res!14782) (not e!15648))))

(assert (=> b!24185 (= res!14782 (and (= (size!703 (_values!1729 (_2!487 lt!8158))) (bvadd (mask!4730 (_2!487 lt!8158)) #b00000000000000000000000000000001)) (= (size!704 (_keys!3164 (_2!487 lt!8158))) (size!703 (_values!1729 (_2!487 lt!8158)))) (bvsge (_size!150 (_2!487 lt!8158)) #b00000000000000000000000000000000) (bvsle (_size!150 (_2!487 lt!8158)) (bvadd (mask!4730 (_2!487 lt!8158)) #b00000000000000000000000000000001))))))

(declare-fun b!24186 () Bool)

(declare-fun res!14783 () Bool)

(assert (=> b!24186 (=> (not res!14783) (not e!15648))))

(assert (=> b!24186 (= res!14783 (bvsge (size!711 (_2!487 lt!8158)) (_size!150 (_2!487 lt!8158))))))

(declare-fun b!24187 () Bool)

(declare-fun res!14785 () Bool)

(assert (=> b!24187 (=> (not res!14785) (not e!15648))))

(assert (=> b!24187 (= res!14785 (= (size!711 (_2!487 lt!8158)) (bvadd (_size!150 (_2!487 lt!8158)) (bvsdiv (bvadd (extraKeys!1641 (_2!487 lt!8158)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun d!4349 () Bool)

(declare-fun res!14784 () Bool)

(assert (=> d!4349 (=> (not res!14784) (not e!15648))))

(assert (=> d!4349 (= res!14784 (validMask!0 (mask!4730 (_2!487 lt!8158))))))

(assert (=> d!4349 (= (simpleValid!20 (_2!487 lt!8158)) e!15648)))

(assert (= (and d!4349 res!14784) b!24185))

(assert (= (and b!24185 res!14782) b!24186))

(assert (= (and b!24186 res!14783) b!24187))

(assert (= (and b!24187 res!14785) b!24188))

(declare-fun m!18521 () Bool)

(assert (=> b!24186 m!18521))

(assert (=> b!24187 m!18521))

(assert (=> d!4349 m!16990))

(assert (=> d!4051 d!4349))

(declare-fun b!24207 () Bool)

(declare-fun e!15661 () Bool)

(declare-fun e!15659 () Bool)

(assert (=> b!24207 (= e!15661 e!15659)))

(declare-fun res!14792 () Bool)

(declare-fun lt!9075 () SeekEntryResult!54)

(assert (=> b!24207 (= res!14792 (and ((_ is Intermediate!54) lt!9075) (not (undefined!866 lt!9075)) (bvslt (x!5576 lt!9075) #b01111111111111111111111111111110) (bvsge (x!5576 lt!9075) #b00000000000000000000000000000000) (bvsge (x!5576 lt!9075) #b00000000000000000000000000000000)))))

(assert (=> b!24207 (=> (not res!14792) (not e!15659))))

(declare-fun b!24208 () Bool)

(declare-fun e!15662 () SeekEntryResult!54)

(declare-fun e!15660 () SeekEntryResult!54)

(assert (=> b!24208 (= e!15662 e!15660)))

(declare-fun c!3220 () Bool)

(declare-fun lt!9074 () (_ BitVec 64))

(assert (=> b!24208 (= c!3220 (or (= lt!9074 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (= (bvadd lt!9074 lt!9074) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!24209 () Bool)

(assert (=> b!24209 (and (bvsge (index!2339 lt!9075) #b00000000000000000000000000000000) (bvslt (index!2339 lt!9075) (size!704 (_keys!3164 lt!8161))))))

(declare-fun res!14793 () Bool)

(assert (=> b!24209 (= res!14793 (= (select (arr!608 (_keys!3164 lt!8161)) (index!2339 lt!9075)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!15663 () Bool)

(assert (=> b!24209 (=> res!14793 e!15663)))

(declare-fun d!4351 () Bool)

(assert (=> d!4351 e!15661))

(declare-fun c!3219 () Bool)

(assert (=> d!4351 (= c!3219 (and ((_ is Intermediate!54) lt!9075) (undefined!866 lt!9075)))))

(assert (=> d!4351 (= lt!9075 e!15662)))

(declare-fun c!3218 () Bool)

(assert (=> d!4351 (= c!3218 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(assert (=> d!4351 (= lt!9074 (select (arr!608 (_keys!3164 lt!8161)) (toIndex!0 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (mask!4730 lt!8161))))))

(assert (=> d!4351 (validMask!0 (mask!4730 lt!8161))))

(assert (=> d!4351 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (mask!4730 lt!8161)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (_keys!3164 lt!8161) (mask!4730 lt!8161)) lt!9075)))

(declare-fun b!24210 () Bool)

(assert (=> b!24210 (and (bvsge (index!2339 lt!9075) #b00000000000000000000000000000000) (bvslt (index!2339 lt!9075) (size!704 (_keys!3164 lt!8161))))))

(assert (=> b!24210 (= e!15663 (= (select (arr!608 (_keys!3164 lt!8161)) (index!2339 lt!9075)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24211 () Bool)

(assert (=> b!24211 (= e!15661 (bvsge (x!5576 lt!9075) #b01111111111111111111111111111110))))

(declare-fun b!24212 () Bool)

(assert (=> b!24212 (= e!15662 (Intermediate!54 true (toIndex!0 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (mask!4730 lt!8161)) #b00000000000000000000000000000000))))

(declare-fun b!24213 () Bool)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!24213 (= e!15660 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (mask!4730 lt!8161)) #b00000000000000000000000000000000 (mask!4730 lt!8161)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (_keys!3164 lt!8161) (mask!4730 lt!8161)))))

(declare-fun b!24214 () Bool)

(assert (=> b!24214 (and (bvsge (index!2339 lt!9075) #b00000000000000000000000000000000) (bvslt (index!2339 lt!9075) (size!704 (_keys!3164 lt!8161))))))

(declare-fun res!14794 () Bool)

(assert (=> b!24214 (= res!14794 (= (select (arr!608 (_keys!3164 lt!8161)) (index!2339 lt!9075)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!24214 (=> res!14794 e!15663)))

(assert (=> b!24214 (= e!15659 e!15663)))

(declare-fun b!24215 () Bool)

(assert (=> b!24215 (= e!15660 (Intermediate!54 false (toIndex!0 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (mask!4730 lt!8161)) #b00000000000000000000000000000000))))

(assert (= (and d!4351 c!3218) b!24212))

(assert (= (and d!4351 (not c!3218)) b!24208))

(assert (= (and b!24208 c!3220) b!24215))

(assert (= (and b!24208 (not c!3220)) b!24213))

(assert (= (and d!4351 c!3219) b!24211))

(assert (= (and d!4351 (not c!3219)) b!24207))

(assert (= (and b!24207 res!14792) b!24214))

(assert (= (and b!24214 (not res!14794)) b!24209))

(assert (= (and b!24209 (not res!14793)) b!24210))

(declare-fun m!18523 () Bool)

(assert (=> b!24210 m!18523))

(assert (=> d!4351 m!17176))

(declare-fun m!18525 () Bool)

(assert (=> d!4351 m!18525))

(assert (=> d!4351 m!17182))

(assert (=> b!24213 m!17176))

(declare-fun m!18527 () Bool)

(assert (=> b!24213 m!18527))

(assert (=> b!24213 m!18527))

(declare-fun m!18529 () Bool)

(assert (=> b!24213 m!18529))

(assert (=> b!24214 m!18523))

(assert (=> b!24209 m!18523))

(assert (=> d!4053 d!4351))

(declare-fun d!4353 () Bool)

(declare-fun lt!9081 () (_ BitVec 32))

(declare-fun lt!9080 () (_ BitVec 32))

(assert (=> d!4353 (= lt!9081 (bvmul (bvxor lt!9080 (bvlshr lt!9080 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!4353 (= lt!9080 ((_ extract 31 0) (bvand (bvxor (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (bvlshr (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!4353 (and (bvsge (mask!4730 lt!8161) #b00000000000000000000000000000000) (let ((res!14795 (let ((h!1132 ((_ extract 31 0) (bvand (bvxor (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (bvlshr (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!5835 (bvmul (bvxor h!1132 (bvlshr h!1132 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!5835 (bvlshr x!5835 #b00000000000000000000000000001101)) (mask!4730 lt!8161)))))) (and (bvslt res!14795 (bvadd (mask!4730 lt!8161) #b00000000000000000000000000000001)) (bvsge res!14795 #b00000000000000000000000000000000))))))

(assert (=> d!4353 (= (toIndex!0 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (mask!4730 lt!8161)) (bvand (bvxor lt!9081 (bvlshr lt!9081 #b00000000000000000000000000001101)) (mask!4730 lt!8161)))))

(assert (=> d!4053 d!4353))

(assert (=> d!4053 d!4239))

(declare-fun d!4355 () Bool)

(declare-fun e!15664 () Bool)

(assert (=> d!4355 e!15664))

(declare-fun res!14796 () Bool)

(assert (=> d!4355 (=> res!14796 e!15664)))

(declare-fun lt!9082 () Bool)

(assert (=> d!4355 (= res!14796 (not lt!9082))))

(declare-fun lt!9083 () Bool)

(assert (=> d!4355 (= lt!9082 lt!9083)))

(declare-fun lt!9084 () Unit!512)

(declare-fun e!15665 () Unit!512)

(assert (=> d!4355 (= lt!9084 e!15665)))

(declare-fun c!3221 () Bool)

(assert (=> d!4355 (= c!3221 lt!9083)))

(assert (=> d!4355 (= lt!9083 (containsKey!25 (toList!299 lt!8447) (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000)))))

(assert (=> d!4355 (= (contains!230 lt!8447 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000)) lt!9082)))

(declare-fun b!24216 () Bool)

(declare-fun lt!9085 () Unit!512)

(assert (=> b!24216 (= e!15665 lt!9085)))

(assert (=> b!24216 (= lt!9085 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!299 lt!8447) (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000)))))

(assert (=> b!24216 (isDefined!23 (getValueByKey!61 (toList!299 lt!8447) (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000)))))

(declare-fun b!24217 () Bool)

(declare-fun Unit!557 () Unit!512)

(assert (=> b!24217 (= e!15665 Unit!557)))

(declare-fun b!24218 () Bool)

(assert (=> b!24218 (= e!15664 (isDefined!23 (getValueByKey!61 (toList!299 lt!8447) (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000))))))

(assert (= (and d!4355 c!3221) b!24216))

(assert (= (and d!4355 (not c!3221)) b!24217))

(assert (= (and d!4355 (not res!14796)) b!24218))

(assert (=> d!4355 m!16986))

(declare-fun m!18531 () Bool)

(assert (=> d!4355 m!18531))

(assert (=> b!24216 m!16986))

(declare-fun m!18533 () Bool)

(assert (=> b!24216 m!18533))

(assert (=> b!24216 m!16986))

(assert (=> b!24216 m!18235))

(assert (=> b!24216 m!18235))

(declare-fun m!18535 () Bool)

(assert (=> b!24216 m!18535))

(assert (=> b!24218 m!16986))

(assert (=> b!24218 m!18235))

(assert (=> b!24218 m!18235))

(assert (=> b!24218 m!18535))

(assert (=> b!23497 d!4355))

(declare-fun d!4357 () Bool)

(declare-fun e!15666 () Bool)

(assert (=> d!4357 e!15666))

(declare-fun res!14797 () Bool)

(assert (=> d!4357 (=> res!14797 e!15666)))

(declare-fun lt!9086 () Bool)

(assert (=> d!4357 (= res!14797 (not lt!9086))))

(declare-fun lt!9087 () Bool)

(assert (=> d!4357 (= lt!9086 lt!9087)))

(declare-fun lt!9088 () Unit!512)

(declare-fun e!15667 () Unit!512)

(assert (=> d!4357 (= lt!9088 e!15667)))

(declare-fun c!3222 () Bool)

(assert (=> d!4357 (= c!3222 lt!9087)))

(assert (=> d!4357 (= lt!9087 (containsKey!25 (toList!299 lt!8546) (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000)))))

(assert (=> d!4357 (= (contains!230 lt!8546 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000)) lt!9086)))

(declare-fun b!24219 () Bool)

(declare-fun lt!9089 () Unit!512)

(assert (=> b!24219 (= e!15667 lt!9089)))

(assert (=> b!24219 (= lt!9089 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!299 lt!8546) (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000)))))

(assert (=> b!24219 (isDefined!23 (getValueByKey!61 (toList!299 lt!8546) (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000)))))

(declare-fun b!24220 () Bool)

(declare-fun Unit!558 () Unit!512)

(assert (=> b!24220 (= e!15667 Unit!558)))

(declare-fun b!24221 () Bool)

(assert (=> b!24221 (= e!15666 (isDefined!23 (getValueByKey!61 (toList!299 lt!8546) (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000))))))

(assert (= (and d!4357 c!3222) b!24219))

(assert (= (and d!4357 (not c!3222)) b!24220))

(assert (= (and d!4357 (not res!14797)) b!24221))

(assert (=> d!4357 m!16936))

(declare-fun m!18537 () Bool)

(assert (=> d!4357 m!18537))

(assert (=> b!24219 m!16936))

(declare-fun m!18539 () Bool)

(assert (=> b!24219 m!18539))

(assert (=> b!24219 m!16936))

(declare-fun m!18541 () Bool)

(assert (=> b!24219 m!18541))

(assert (=> b!24219 m!18541))

(declare-fun m!18543 () Bool)

(assert (=> b!24219 m!18543))

(assert (=> b!24221 m!16936))

(assert (=> b!24221 m!18541))

(assert (=> b!24221 m!18541))

(assert (=> b!24221 m!18543))

(assert (=> b!23625 d!4357))

(assert (=> b!23602 d!4221))

(assert (=> b!23752 d!4221))

(declare-fun d!4359 () Bool)

(declare-fun e!15668 () Bool)

(assert (=> d!4359 e!15668))

(declare-fun res!14798 () Bool)

(assert (=> d!4359 (=> res!14798 e!15668)))

(declare-fun lt!9090 () Bool)

(assert (=> d!4359 (= res!14798 (not lt!9090))))

(declare-fun lt!9091 () Bool)

(assert (=> d!4359 (= lt!9090 lt!9091)))

(declare-fun lt!9092 () Unit!512)

(declare-fun e!15669 () Unit!512)

(assert (=> d!4359 (= lt!9092 e!15669)))

(declare-fun c!3223 () Bool)

(assert (=> d!4359 (= c!3223 lt!9091)))

(assert (=> d!4359 (= lt!9091 (containsKey!25 (toList!299 lt!8506) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!4359 (= (contains!230 lt!8506 #b0000000000000000000000000000000000000000000000000000000000000000) lt!9090)))

(declare-fun b!24222 () Bool)

(declare-fun lt!9093 () Unit!512)

(assert (=> b!24222 (= e!15669 lt!9093)))

(assert (=> b!24222 (= lt!9093 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!299 lt!8506) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!24222 (isDefined!23 (getValueByKey!61 (toList!299 lt!8506) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24223 () Bool)

(declare-fun Unit!559 () Unit!512)

(assert (=> b!24223 (= e!15669 Unit!559)))

(declare-fun b!24224 () Bool)

(assert (=> b!24224 (= e!15668 (isDefined!23 (getValueByKey!61 (toList!299 lt!8506) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!4359 c!3223) b!24222))

(assert (= (and d!4359 (not c!3223)) b!24223))

(assert (= (and d!4359 (not res!14798)) b!24224))

(declare-fun m!18545 () Bool)

(assert (=> d!4359 m!18545))

(declare-fun m!18547 () Bool)

(assert (=> b!24222 m!18547))

(declare-fun m!18549 () Bool)

(assert (=> b!24222 m!18549))

(assert (=> b!24222 m!18549))

(declare-fun m!18551 () Bool)

(assert (=> b!24222 m!18551))

(assert (=> b!24224 m!18549))

(assert (=> b!24224 m!18549))

(assert (=> b!24224 m!18551))

(assert (=> bm!1992 d!4359))

(assert (=> d!4115 d!4081))

(declare-fun d!4361 () Bool)

(assert (=> d!4361 (= (inRange!0 (ite c!3044 (index!2337 lt!8456) (index!2340 lt!8456)) (mask!4730 (_2!487 lt!8158))) (and (bvsge (ite c!3044 (index!2337 lt!8456) (index!2340 lt!8456)) #b00000000000000000000000000000000) (bvslt (ite c!3044 (index!2337 lt!8456) (index!2340 lt!8456)) (bvadd (mask!4730 (_2!487 lt!8158)) #b00000000000000000000000000000001))))))

(assert (=> bm!1990 d!4361))

(declare-fun d!4363 () Bool)

(assert (=> d!4363 (= (apply!29 lt!8568 #b1000000000000000000000000000000000000000000000000000000000000000) (get!391 (getValueByKey!61 (toList!299 lt!8568) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!1000 () Bool)

(assert (= bs!1000 d!4363))

(assert (=> bs!1000 m!18441))

(assert (=> bs!1000 m!18441))

(declare-fun m!18553 () Bool)

(assert (=> bs!1000 m!18553))

(assert (=> b!23658 d!4363))

(assert (=> b!23724 d!4095))

(assert (=> b!23822 d!4087))

(assert (=> b!23664 d!4125))

(declare-fun b!24225 () Bool)

(declare-fun e!15670 () Bool)

(declare-fun call!2088 () Bool)

(assert (=> b!24225 (= e!15670 call!2088)))

(declare-fun d!4365 () Bool)

(declare-fun res!14800 () Bool)

(declare-fun e!15671 () Bool)

(assert (=> d!4365 (=> res!14800 e!15671)))

(assert (=> d!4365 (= res!14800 (bvsge #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8276)))))))

(assert (=> d!4365 (= (arrayNoDuplicates!0 (_keys!3164 (_2!487 lt!8276)) #b00000000000000000000000000000000 Nil!566) e!15671)))

(declare-fun b!24226 () Bool)

(declare-fun e!15673 () Bool)

(assert (=> b!24226 (= e!15673 e!15670)))

(declare-fun c!3224 () Bool)

(assert (=> b!24226 (= c!3224 (validKeyInArray!0 (select (arr!608 (_keys!3164 (_2!487 lt!8276))) #b00000000000000000000000000000000)))))

(declare-fun b!24227 () Bool)

(assert (=> b!24227 (= e!15670 call!2088)))

(declare-fun b!24228 () Bool)

(declare-fun e!15672 () Bool)

(assert (=> b!24228 (= e!15672 (contains!231 Nil!566 (select (arr!608 (_keys!3164 (_2!487 lt!8276))) #b00000000000000000000000000000000)))))

(declare-fun bm!2085 () Bool)

(assert (=> bm!2085 (= call!2088 (arrayNoDuplicates!0 (_keys!3164 (_2!487 lt!8276)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!3224 (Cons!565 (select (arr!608 (_keys!3164 (_2!487 lt!8276))) #b00000000000000000000000000000000) Nil!566) Nil!566)))))

(declare-fun b!24229 () Bool)

(assert (=> b!24229 (= e!15671 e!15673)))

(declare-fun res!14799 () Bool)

(assert (=> b!24229 (=> (not res!14799) (not e!15673))))

(assert (=> b!24229 (= res!14799 (not e!15672))))

(declare-fun res!14801 () Bool)

(assert (=> b!24229 (=> (not res!14801) (not e!15672))))

(assert (=> b!24229 (= res!14801 (validKeyInArray!0 (select (arr!608 (_keys!3164 (_2!487 lt!8276))) #b00000000000000000000000000000000)))))

(assert (= (and d!4365 (not res!14800)) b!24229))

(assert (= (and b!24229 res!14801) b!24228))

(assert (= (and b!24229 res!14799) b!24226))

(assert (= (and b!24226 c!3224) b!24227))

(assert (= (and b!24226 (not c!3224)) b!24225))

(assert (= (or b!24227 b!24225) bm!2085))

(declare-fun m!18555 () Bool)

(assert (=> b!24226 m!18555))

(assert (=> b!24226 m!18555))

(declare-fun m!18557 () Bool)

(assert (=> b!24226 m!18557))

(assert (=> b!24228 m!18555))

(assert (=> b!24228 m!18555))

(declare-fun m!18559 () Bool)

(assert (=> b!24228 m!18559))

(assert (=> bm!2085 m!18555))

(declare-fun m!18561 () Bool)

(assert (=> bm!2085 m!18561))

(assert (=> b!24229 m!18555))

(assert (=> b!24229 m!18555))

(assert (=> b!24229 m!18557))

(assert (=> b!23615 d!4365))

(declare-fun d!4367 () Bool)

(assert (=> d!4367 (= (apply!29 lt!8725 #b1000000000000000000000000000000000000000000000000000000000000000) (get!391 (getValueByKey!61 (toList!299 lt!8725) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!1001 () Bool)

(assert (= bs!1001 d!4367))

(declare-fun m!18563 () Bool)

(assert (=> bs!1001 m!18563))

(assert (=> bs!1001 m!18563))

(declare-fun m!18565 () Bool)

(assert (=> bs!1001 m!18565))

(assert (=> b!23780 d!4367))

(declare-fun d!4369 () Bool)

(declare-fun e!15674 () Bool)

(assert (=> d!4369 e!15674))

(declare-fun res!14802 () Bool)

(assert (=> d!4369 (=> res!14802 e!15674)))

(declare-fun lt!9094 () Bool)

(assert (=> d!4369 (= res!14802 (not lt!9094))))

(declare-fun lt!9095 () Bool)

(assert (=> d!4369 (= lt!9094 lt!9095)))

(declare-fun lt!9096 () Unit!512)

(declare-fun e!15675 () Unit!512)

(assert (=> d!4369 (= lt!9096 e!15675)))

(declare-fun c!3225 () Bool)

(assert (=> d!4369 (= c!3225 lt!9095)))

(assert (=> d!4369 (= lt!9095 (containsKey!25 (toList!299 lt!8568) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!4369 (= (contains!230 lt!8568 #b0000000000000000000000000000000000000000000000000000000000000000) lt!9094)))

(declare-fun b!24230 () Bool)

(declare-fun lt!9097 () Unit!512)

(assert (=> b!24230 (= e!15675 lt!9097)))

(assert (=> b!24230 (= lt!9097 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!299 lt!8568) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!24230 (isDefined!23 (getValueByKey!61 (toList!299 lt!8568) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24231 () Bool)

(declare-fun Unit!560 () Unit!512)

(assert (=> b!24231 (= e!15675 Unit!560)))

(declare-fun b!24232 () Bool)

(assert (=> b!24232 (= e!15674 (isDefined!23 (getValueByKey!61 (toList!299 lt!8568) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!4369 c!3225) b!24230))

(assert (= (and d!4369 (not c!3225)) b!24231))

(assert (= (and d!4369 (not res!14802)) b!24232))

(declare-fun m!18567 () Bool)

(assert (=> d!4369 m!18567))

(declare-fun m!18569 () Bool)

(assert (=> b!24230 m!18569))

(declare-fun m!18571 () Bool)

(assert (=> b!24230 m!18571))

(assert (=> b!24230 m!18571))

(declare-fun m!18573 () Bool)

(assert (=> b!24230 m!18573))

(assert (=> b!24232 m!18571))

(assert (=> b!24232 m!18571))

(assert (=> b!24232 m!18573))

(assert (=> bm!2006 d!4369))

(declare-fun b!24233 () Bool)

(declare-fun e!15676 () Bool)

(declare-fun call!2089 () Bool)

(assert (=> b!24233 (= e!15676 call!2089)))

(declare-fun d!4371 () Bool)

(declare-fun res!14804 () Bool)

(declare-fun e!15677 () Bool)

(assert (=> d!4371 (=> res!14804 e!15677)))

(assert (=> d!4371 (= res!14804 (bvsge #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))))))

(assert (=> d!4371 (= (arrayNoDuplicates!0 (_keys!3164 (_2!487 lt!8158)) #b00000000000000000000000000000000 Nil!566) e!15677)))

(declare-fun b!24234 () Bool)

(declare-fun e!15679 () Bool)

(assert (=> b!24234 (= e!15679 e!15676)))

(declare-fun c!3226 () Bool)

(assert (=> b!24234 (= c!3226 (validKeyInArray!0 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000)))))

(declare-fun b!24235 () Bool)

(assert (=> b!24235 (= e!15676 call!2089)))

(declare-fun b!24236 () Bool)

(declare-fun e!15678 () Bool)

(assert (=> b!24236 (= e!15678 (contains!231 Nil!566 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000)))))

(declare-fun bm!2086 () Bool)

(assert (=> bm!2086 (= call!2089 (arrayNoDuplicates!0 (_keys!3164 (_2!487 lt!8158)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!3226 (Cons!565 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000) Nil!566) Nil!566)))))

(declare-fun b!24237 () Bool)

(assert (=> b!24237 (= e!15677 e!15679)))

(declare-fun res!14803 () Bool)

(assert (=> b!24237 (=> (not res!14803) (not e!15679))))

(assert (=> b!24237 (= res!14803 (not e!15678))))

(declare-fun res!14805 () Bool)

(assert (=> b!24237 (=> (not res!14805) (not e!15678))))

(assert (=> b!24237 (= res!14805 (validKeyInArray!0 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000)))))

(assert (= (and d!4371 (not res!14804)) b!24237))

(assert (= (and b!24237 res!14805) b!24236))

(assert (= (and b!24237 res!14803) b!24234))

(assert (= (and b!24234 c!3226) b!24235))

(assert (= (and b!24234 (not c!3226)) b!24233))

(assert (= (or b!24235 b!24233) bm!2086))

(assert (=> b!24234 m!16986))

(assert (=> b!24234 m!16986))

(assert (=> b!24234 m!16988))

(assert (=> b!24236 m!16986))

(assert (=> b!24236 m!16986))

(declare-fun m!18575 () Bool)

(assert (=> b!24236 m!18575))

(assert (=> bm!2086 m!16986))

(declare-fun m!18577 () Bool)

(assert (=> bm!2086 m!18577))

(assert (=> b!24237 m!16986))

(assert (=> b!24237 m!16986))

(assert (=> b!24237 m!16988))

(assert (=> b!23618 d!4371))

(declare-fun d!4373 () Bool)

(declare-fun e!15680 () Bool)

(assert (=> d!4373 e!15680))

(declare-fun res!14806 () Bool)

(assert (=> d!4373 (=> res!14806 e!15680)))

(declare-fun lt!9098 () Bool)

(assert (=> d!4373 (= res!14806 (not lt!9098))))

(declare-fun lt!9099 () Bool)

(assert (=> d!4373 (= lt!9098 lt!9099)))

(declare-fun lt!9100 () Unit!512)

(declare-fun e!15681 () Unit!512)

(assert (=> d!4373 (= lt!9100 e!15681)))

(declare-fun c!3227 () Bool)

(assert (=> d!4373 (= c!3227 lt!9099)))

(assert (=> d!4373 (= lt!9099 (containsKey!25 (toList!299 lt!8725) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!4373 (= (contains!230 lt!8725 #b0000000000000000000000000000000000000000000000000000000000000000) lt!9098)))

(declare-fun b!24238 () Bool)

(declare-fun lt!9101 () Unit!512)

(assert (=> b!24238 (= e!15681 lt!9101)))

(assert (=> b!24238 (= lt!9101 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!299 lt!8725) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!24238 (isDefined!23 (getValueByKey!61 (toList!299 lt!8725) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24239 () Bool)

(declare-fun Unit!561 () Unit!512)

(assert (=> b!24239 (= e!15681 Unit!561)))

(declare-fun b!24240 () Bool)

(assert (=> b!24240 (= e!15680 (isDefined!23 (getValueByKey!61 (toList!299 lt!8725) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!4373 c!3227) b!24238))

(assert (= (and d!4373 (not c!3227)) b!24239))

(assert (= (and d!4373 (not res!14806)) b!24240))

(declare-fun m!18579 () Bool)

(assert (=> d!4373 m!18579))

(declare-fun m!18581 () Bool)

(assert (=> b!24238 m!18581))

(declare-fun m!18583 () Bool)

(assert (=> b!24238 m!18583))

(assert (=> b!24238 m!18583))

(declare-fun m!18585 () Bool)

(assert (=> b!24238 m!18585))

(assert (=> b!24240 m!18583))

(assert (=> b!24240 m!18583))

(assert (=> b!24240 m!18585))

(assert (=> bm!2034 d!4373))

(declare-fun d!4375 () Bool)

(declare-fun e!15682 () Bool)

(assert (=> d!4375 e!15682))

(declare-fun res!14807 () Bool)

(assert (=> d!4375 (=> res!14807 e!15682)))

(declare-fun lt!9102 () Bool)

(assert (=> d!4375 (= res!14807 (not lt!9102))))

(declare-fun lt!9103 () Bool)

(assert (=> d!4375 (= lt!9102 lt!9103)))

(declare-fun lt!9104 () Unit!512)

(declare-fun e!15683 () Unit!512)

(assert (=> d!4375 (= lt!9104 e!15683)))

(declare-fun c!3228 () Bool)

(assert (=> d!4375 (= c!3228 lt!9103)))

(assert (=> d!4375 (= lt!9103 (containsKey!25 (toList!299 lt!8692) (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000)))))

(assert (=> d!4375 (= (contains!230 lt!8692 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000)) lt!9102)))

(declare-fun b!24241 () Bool)

(declare-fun lt!9105 () Unit!512)

(assert (=> b!24241 (= e!15683 lt!9105)))

(assert (=> b!24241 (= lt!9105 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!299 lt!8692) (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000)))))

(assert (=> b!24241 (isDefined!23 (getValueByKey!61 (toList!299 lt!8692) (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000)))))

(declare-fun b!24242 () Bool)

(declare-fun Unit!562 () Unit!512)

(assert (=> b!24242 (= e!15683 Unit!562)))

(declare-fun b!24243 () Bool)

(assert (=> b!24243 (= e!15682 (isDefined!23 (getValueByKey!61 (toList!299 lt!8692) (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000))))))

(assert (= (and d!4375 c!3228) b!24241))

(assert (= (and d!4375 (not c!3228)) b!24242))

(assert (= (and d!4375 (not res!14807)) b!24243))

(assert (=> d!4375 m!16986))

(declare-fun m!18587 () Bool)

(assert (=> d!4375 m!18587))

(assert (=> b!24241 m!16986))

(declare-fun m!18589 () Bool)

(assert (=> b!24241 m!18589))

(assert (=> b!24241 m!16986))

(declare-fun m!18591 () Bool)

(assert (=> b!24241 m!18591))

(assert (=> b!24241 m!18591))

(declare-fun m!18593 () Bool)

(assert (=> b!24241 m!18593))

(assert (=> b!24243 m!16986))

(assert (=> b!24243 m!18591))

(assert (=> b!24243 m!18591))

(assert (=> b!24243 m!18593))

(assert (=> b!23738 d!4375))

(declare-fun d!4377 () Bool)

(assert (=> d!4377 (= (apply!29 lt!8546 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000)) (get!391 (getValueByKey!61 (toList!299 lt!8546) (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000))))))

(declare-fun bs!1002 () Bool)

(assert (= bs!1002 d!4377))

(assert (=> bs!1002 m!16936))

(assert (=> bs!1002 m!18541))

(assert (=> bs!1002 m!18541))

(declare-fun m!18595 () Bool)

(assert (=> bs!1002 m!18595))

(assert (=> b!23645 d!4377))

(declare-fun d!4379 () Bool)

(declare-fun c!3229 () Bool)

(assert (=> d!4379 (= c!3229 ((_ is ValueCellFull!312) (select (arr!607 (ite (or c!2984 c!2982) (_values!1729 lt!8161) (array!1284 (store (arr!607 (_values!1729 lt!8161)) (index!2338 lt!8254) (ValueCellFull!312 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (size!703 (_values!1729 lt!8161))))) #b00000000000000000000000000000000)))))

(declare-fun e!15684 () V!1189)

(assert (=> d!4379 (= (get!390 (select (arr!607 (ite (or c!2984 c!2982) (_values!1729 lt!8161) (array!1284 (store (arr!607 (_values!1729 lt!8161)) (index!2338 lt!8254) (ValueCellFull!312 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (size!703 (_values!1729 lt!8161))))) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 lt!8161) #b0000000000000000000000000000000000000000000000000000000000000000)) e!15684)))

(declare-fun b!24244 () Bool)

(assert (=> b!24244 (= e!15684 (get!392 (select (arr!607 (ite (or c!2984 c!2982) (_values!1729 lt!8161) (array!1284 (store (arr!607 (_values!1729 lt!8161)) (index!2338 lt!8254) (ValueCellFull!312 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (size!703 (_values!1729 lt!8161))))) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 lt!8161) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!24245 () Bool)

(assert (=> b!24245 (= e!15684 (get!393 (select (arr!607 (ite (or c!2984 c!2982) (_values!1729 lt!8161) (array!1284 (store (arr!607 (_values!1729 lt!8161)) (index!2338 lt!8254) (ValueCellFull!312 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (size!703 (_values!1729 lt!8161))))) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 lt!8161) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!4379 c!3229) b!24244))

(assert (= (and d!4379 (not c!3229)) b!24245))

(assert (=> b!24244 m!17236))

(assert (=> b!24244 m!17238))

(declare-fun m!18597 () Bool)

(assert (=> b!24244 m!18597))

(assert (=> b!24245 m!17236))

(assert (=> b!24245 m!17238))

(declare-fun m!18599 () Bool)

(assert (=> b!24245 m!18599))

(assert (=> b!23645 d!4379))

(declare-fun d!4381 () Bool)

(declare-fun e!15685 () Bool)

(assert (=> d!4381 e!15685))

(declare-fun res!14808 () Bool)

(assert (=> d!4381 (=> res!14808 e!15685)))

(declare-fun lt!9106 () Bool)

(assert (=> d!4381 (= res!14808 (not lt!9106))))

(declare-fun lt!9107 () Bool)

(assert (=> d!4381 (= lt!9106 lt!9107)))

(declare-fun lt!9108 () Unit!512)

(declare-fun e!15686 () Unit!512)

(assert (=> d!4381 (= lt!9108 e!15686)))

(declare-fun c!3230 () Bool)

(assert (=> d!4381 (= c!3230 lt!9107)))

(assert (=> d!4381 (= lt!9107 (containsKey!25 (toList!299 lt!8725) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!4381 (= (contains!230 lt!8725 #b1000000000000000000000000000000000000000000000000000000000000000) lt!9106)))

(declare-fun b!24246 () Bool)

(declare-fun lt!9109 () Unit!512)

(assert (=> b!24246 (= e!15686 lt!9109)))

(assert (=> b!24246 (= lt!9109 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!299 lt!8725) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!24246 (isDefined!23 (getValueByKey!61 (toList!299 lt!8725) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24247 () Bool)

(declare-fun Unit!563 () Unit!512)

(assert (=> b!24247 (= e!15686 Unit!563)))

(declare-fun b!24248 () Bool)

(assert (=> b!24248 (= e!15685 (isDefined!23 (getValueByKey!61 (toList!299 lt!8725) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!4381 c!3230) b!24246))

(assert (= (and d!4381 (not c!3230)) b!24247))

(assert (= (and d!4381 (not res!14808)) b!24248))

(declare-fun m!18601 () Bool)

(assert (=> d!4381 m!18601))

(declare-fun m!18603 () Bool)

(assert (=> b!24246 m!18603))

(assert (=> b!24246 m!18563))

(assert (=> b!24246 m!18563))

(declare-fun m!18605 () Bool)

(assert (=> b!24246 m!18605))

(assert (=> b!24248 m!18563))

(assert (=> b!24248 m!18563))

(assert (=> b!24248 m!18605))

(assert (=> bm!2035 d!4381))

(assert (=> d!4081 d!4239))

(assert (=> d!4059 d!4239))

(declare-fun d!4383 () Bool)

(declare-fun e!15687 () Bool)

(assert (=> d!4383 e!15687))

(declare-fun res!14809 () Bool)

(assert (=> d!4383 (=> (not res!14809) (not e!15687))))

(declare-fun lt!9112 () ListLongMap!567)

(assert (=> d!4383 (= res!14809 (contains!230 lt!9112 (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161))))))))

(declare-fun lt!9111 () List!568)

(assert (=> d!4383 (= lt!9112 (ListLongMap!568 lt!9111))))

(declare-fun lt!9110 () Unit!512)

(declare-fun lt!9113 () Unit!512)

(assert (=> d!4383 (= lt!9110 lt!9113)))

(assert (=> d!4383 (= (getValueByKey!61 lt!9111 (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161))))) (Some!66 (_2!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161))))))))

(assert (=> d!4383 (= lt!9113 (lemmaContainsTupThenGetReturnValue!18 lt!9111 (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161)))) (_2!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161))))))))

(assert (=> d!4383 (= lt!9111 (insertStrictlySorted!18 (toList!299 call!2004) (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161)))) (_2!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161))))))))

(assert (=> d!4383 (= (+!45 call!2004 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161)))) lt!9112)))

(declare-fun b!24249 () Bool)

(declare-fun res!14810 () Bool)

(assert (=> b!24249 (=> (not res!14810) (not e!15687))))

(assert (=> b!24249 (= res!14810 (= (getValueByKey!61 (toList!299 lt!9112) (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161))))) (Some!66 (_2!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161)))))))))

(declare-fun b!24250 () Bool)

(assert (=> b!24250 (= e!15687 (contains!232 (toList!299 lt!9112) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161)))))))

(assert (= (and d!4383 res!14809) b!24249))

(assert (= (and b!24249 res!14810) b!24250))

(declare-fun m!18607 () Bool)

(assert (=> d!4383 m!18607))

(declare-fun m!18609 () Bool)

(assert (=> d!4383 m!18609))

(declare-fun m!18611 () Bool)

(assert (=> d!4383 m!18611))

(declare-fun m!18613 () Bool)

(assert (=> d!4383 m!18613))

(declare-fun m!18615 () Bool)

(assert (=> b!24249 m!18615))

(declare-fun m!18617 () Bool)

(assert (=> b!24250 m!18617))

(assert (=> b!23632 d!4383))

(declare-fun d!4385 () Bool)

(declare-fun e!15688 () Bool)

(assert (=> d!4385 e!15688))

(declare-fun res!14811 () Bool)

(assert (=> d!4385 (=> (not res!14811) (not e!15688))))

(declare-fun lt!9116 () ListLongMap!567)

(assert (=> d!4385 (= res!14811 (contains!230 lt!9116 (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!487 lt!8158))))))))

(declare-fun lt!9115 () List!568)

(assert (=> d!4385 (= lt!9116 (ListLongMap!568 lt!9115))))

(declare-fun lt!9114 () Unit!512)

(declare-fun lt!9117 () Unit!512)

(assert (=> d!4385 (= lt!9114 lt!9117)))

(assert (=> d!4385 (= (getValueByKey!61 lt!9115 (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!487 lt!8158))))) (Some!66 (_2!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!487 lt!8158))))))))

(assert (=> d!4385 (= lt!9117 (lemmaContainsTupThenGetReturnValue!18 lt!9115 (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!487 lt!8158)))) (_2!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!487 lt!8158))))))))

(assert (=> d!4385 (= lt!9115 (insertStrictlySorted!18 (toList!299 call!2032) (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!487 lt!8158)))) (_2!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!487 lt!8158))))))))

(assert (=> d!4385 (= (+!45 call!2032 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!487 lt!8158)))) lt!9116)))

(declare-fun b!24251 () Bool)

(declare-fun res!14812 () Bool)

(assert (=> b!24251 (=> (not res!14812) (not e!15688))))

(assert (=> b!24251 (= res!14812 (= (getValueByKey!61 (toList!299 lt!9116) (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!487 lt!8158))))) (Some!66 (_2!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!487 lt!8158)))))))))

(declare-fun b!24252 () Bool)

(assert (=> b!24252 (= e!15688 (contains!232 (toList!299 lt!9116) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!487 lt!8158)))))))

(assert (= (and d!4385 res!14811) b!24251))

(assert (= (and b!24251 res!14812) b!24252))

(declare-fun m!18619 () Bool)

(assert (=> d!4385 m!18619))

(declare-fun m!18621 () Bool)

(assert (=> d!4385 m!18621))

(declare-fun m!18623 () Bool)

(assert (=> d!4385 m!18623))

(declare-fun m!18625 () Bool)

(assert (=> d!4385 m!18625))

(declare-fun m!18627 () Bool)

(assert (=> b!24251 m!18627))

(declare-fun m!18629 () Bool)

(assert (=> b!24252 m!18629))

(assert (=> b!23745 d!4385))

(declare-fun d!4387 () Bool)

(assert (=> d!4387 (= (+!45 (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) lt!8268 (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))

(assert (=> d!4387 true))

(declare-fun _$8!39 () Unit!512)

(assert (=> d!4387 (= (choose!209 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) lt!8268 (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (defaultEntry!1743 (_2!487 lt!8158))) _$8!39)))

(declare-fun bs!1003 () Bool)

(assert (= bs!1003 d!4387))

(assert (=> bs!1003 m!16852))

(assert (=> bs!1003 m!16852))

(assert (=> bs!1003 m!17351))

(assert (=> bs!1003 m!17613))

(assert (=> d!4113 d!4387))

(assert (=> d!4113 d!4071))

(declare-fun bm!2087 () Bool)

(declare-fun call!2091 () Bool)

(declare-fun lt!9135 () ListLongMap!567)

(assert (=> bm!2087 (= call!2091 (contains!230 lt!9135 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!2088 () Bool)

(declare-fun call!2093 () Bool)

(assert (=> bm!2088 (= call!2093 (contains!230 lt!9135 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24253 () Bool)

(declare-fun e!15696 () Bool)

(declare-fun e!15697 () Bool)

(assert (=> b!24253 (= e!15696 e!15697)))

(declare-fun res!14821 () Bool)

(assert (=> b!24253 (=> (not res!14821) (not e!15697))))

(assert (=> b!24253 (= res!14821 (contains!230 lt!9135 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000)))))

(assert (=> b!24253 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))))))

(declare-fun b!24254 () Bool)

(declare-fun e!15690 () Unit!512)

(declare-fun lt!9120 () Unit!512)

(assert (=> b!24254 (= e!15690 lt!9120)))

(declare-fun lt!9132 () ListLongMap!567)

(assert (=> b!24254 (= lt!9132 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) lt!8268 (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))

(declare-fun lt!9127 () (_ BitVec 64))

(assert (=> b!24254 (= lt!9127 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9136 () (_ BitVec 64))

(assert (=> b!24254 (= lt!9136 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000))))

(declare-fun lt!9128 () Unit!512)

(assert (=> b!24254 (= lt!9128 (addStillContains!14 lt!9132 lt!9127 (zeroValue!1666 (_2!487 lt!8158)) lt!9136))))

(assert (=> b!24254 (contains!230 (+!45 lt!9132 (tuple2!961 lt!9127 (zeroValue!1666 (_2!487 lt!8158)))) lt!9136)))

(declare-fun lt!9139 () Unit!512)

(assert (=> b!24254 (= lt!9139 lt!9128)))

(declare-fun lt!9123 () ListLongMap!567)

(assert (=> b!24254 (= lt!9123 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) lt!8268 (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))

(declare-fun lt!9138 () (_ BitVec 64))

(assert (=> b!24254 (= lt!9138 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9137 () (_ BitVec 64))

(assert (=> b!24254 (= lt!9137 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000))))

(declare-fun lt!9122 () Unit!512)

(assert (=> b!24254 (= lt!9122 (addApplyDifferent!14 lt!9123 lt!9138 (minValue!1666 (v!1604 (underlying!116 thiss!938))) lt!9137))))

(assert (=> b!24254 (= (apply!29 (+!45 lt!9123 (tuple2!961 lt!9138 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) lt!9137) (apply!29 lt!9123 lt!9137))))

(declare-fun lt!9121 () Unit!512)

(assert (=> b!24254 (= lt!9121 lt!9122)))

(declare-fun lt!9130 () ListLongMap!567)

(assert (=> b!24254 (= lt!9130 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) lt!8268 (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))

(declare-fun lt!9133 () (_ BitVec 64))

(assert (=> b!24254 (= lt!9133 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9119 () (_ BitVec 64))

(assert (=> b!24254 (= lt!9119 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000))))

(declare-fun lt!9124 () Unit!512)

(assert (=> b!24254 (= lt!9124 (addApplyDifferent!14 lt!9130 lt!9133 (zeroValue!1666 (_2!487 lt!8158)) lt!9119))))

(assert (=> b!24254 (= (apply!29 (+!45 lt!9130 (tuple2!961 lt!9133 (zeroValue!1666 (_2!487 lt!8158)))) lt!9119) (apply!29 lt!9130 lt!9119))))

(declare-fun lt!9129 () Unit!512)

(assert (=> b!24254 (= lt!9129 lt!9124)))

(declare-fun lt!9131 () ListLongMap!567)

(assert (=> b!24254 (= lt!9131 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) lt!8268 (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))

(declare-fun lt!9126 () (_ BitVec 64))

(assert (=> b!24254 (= lt!9126 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9118 () (_ BitVec 64))

(assert (=> b!24254 (= lt!9118 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000))))

(assert (=> b!24254 (= lt!9120 (addApplyDifferent!14 lt!9131 lt!9126 (minValue!1666 (v!1604 (underlying!116 thiss!938))) lt!9118))))

(assert (=> b!24254 (= (apply!29 (+!45 lt!9131 (tuple2!961 lt!9126 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) lt!9118) (apply!29 lt!9131 lt!9118))))

(declare-fun bm!2089 () Bool)

(declare-fun call!2094 () ListLongMap!567)

(assert (=> bm!2089 (= call!2094 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) lt!8268 (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))

(declare-fun b!24255 () Bool)

(declare-fun res!14816 () Bool)

(declare-fun e!15693 () Bool)

(assert (=> b!24255 (=> (not res!14816) (not e!15693))))

(declare-fun e!15689 () Bool)

(assert (=> b!24255 (= res!14816 e!15689)))

(declare-fun c!3233 () Bool)

(assert (=> b!24255 (= c!3233 (not (= (bvand lt!8268 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!24256 () Bool)

(declare-fun e!15701 () Bool)

(assert (=> b!24256 (= e!15701 (not call!2093))))

(declare-fun b!24257 () Bool)

(assert (=> b!24257 (= e!15689 (not call!2091))))

(declare-fun bm!2090 () Bool)

(declare-fun call!2095 () ListLongMap!567)

(assert (=> bm!2090 (= call!2095 call!2094)))

(declare-fun b!24258 () Bool)

(declare-fun e!15699 () ListLongMap!567)

(declare-fun call!2096 () ListLongMap!567)

(assert (=> b!24258 (= e!15699 call!2096)))

(declare-fun b!24259 () Bool)

(declare-fun res!14819 () Bool)

(assert (=> b!24259 (=> (not res!14819) (not e!15693))))

(assert (=> b!24259 (= res!14819 e!15696)))

(declare-fun res!14814 () Bool)

(assert (=> b!24259 (=> res!14814 e!15696)))

(declare-fun e!15692 () Bool)

(assert (=> b!24259 (= res!14814 (not e!15692))))

(declare-fun res!14818 () Bool)

(assert (=> b!24259 (=> (not res!14818) (not e!15692))))

(assert (=> b!24259 (= res!14818 (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))))))

(declare-fun b!24261 () Bool)

(declare-fun e!15694 () ListLongMap!567)

(assert (=> b!24261 (= e!15694 call!2096)))

(declare-fun b!24262 () Bool)

(declare-fun e!15695 () Bool)

(assert (=> b!24262 (= e!15689 e!15695)))

(declare-fun res!14820 () Bool)

(assert (=> b!24262 (= res!14820 call!2091)))

(assert (=> b!24262 (=> (not res!14820) (not e!15695))))

(declare-fun b!24263 () Bool)

(assert (=> b!24263 (= e!15693 e!15701)))

(declare-fun c!3231 () Bool)

(assert (=> b!24263 (= c!3231 (not (= (bvand lt!8268 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!2091 () Bool)

(declare-fun call!2090 () ListLongMap!567)

(assert (=> bm!2091 (= call!2090 call!2095)))

(declare-fun b!24264 () Bool)

(assert (=> b!24264 (= e!15699 call!2090)))

(declare-fun b!24265 () Bool)

(declare-fun e!15700 () Bool)

(assert (=> b!24265 (= e!15700 (= (apply!29 lt!9135 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))

(declare-fun b!24266 () Bool)

(declare-fun c!3234 () Bool)

(assert (=> b!24266 (= c!3234 (and (not (= (bvand lt!8268 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!8268 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!24266 (= e!15694 e!15699)))

(declare-fun b!24267 () Bool)

(assert (=> b!24267 (= e!15692 (validKeyInArray!0 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000)))))

(declare-fun bm!2092 () Bool)

(declare-fun call!2092 () ListLongMap!567)

(assert (=> bm!2092 (= call!2096 call!2092)))

(declare-fun b!24268 () Bool)

(assert (=> b!24268 (= e!15701 e!15700)))

(declare-fun res!14817 () Bool)

(assert (=> b!24268 (= res!14817 call!2093)))

(assert (=> b!24268 (=> (not res!14817) (not e!15700))))

(declare-fun bm!2093 () Bool)

(declare-fun c!3232 () Bool)

(declare-fun c!3236 () Bool)

(assert (=> bm!2093 (= call!2092 (+!45 (ite c!3232 call!2094 (ite c!3236 call!2095 call!2090)) (ite (or c!3232 c!3236) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (_2!487 lt!8158))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(declare-fun b!24269 () Bool)

(assert (=> b!24269 (= e!15695 (= (apply!29 lt!9135 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!1666 (_2!487 lt!8158))))))

(declare-fun b!24270 () Bool)

(declare-fun e!15691 () ListLongMap!567)

(assert (=> b!24270 (= e!15691 e!15694)))

(assert (=> b!24270 (= c!3236 (and (not (= (bvand lt!8268 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!8268 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!24271 () Bool)

(declare-fun e!15698 () Bool)

(assert (=> b!24271 (= e!15698 (validKeyInArray!0 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000)))))

(declare-fun b!24260 () Bool)

(assert (=> b!24260 (= e!15691 (+!45 call!2092 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))

(declare-fun d!4389 () Bool)

(assert (=> d!4389 e!15693))

(declare-fun res!14813 () Bool)

(assert (=> d!4389 (=> (not res!14813) (not e!15693))))

(assert (=> d!4389 (= res!14813 (or (bvsge #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))))))))

(declare-fun lt!9125 () ListLongMap!567)

(assert (=> d!4389 (= lt!9135 lt!9125)))

(declare-fun lt!9134 () Unit!512)

(assert (=> d!4389 (= lt!9134 e!15690)))

(declare-fun c!3235 () Bool)

(assert (=> d!4389 (= c!3235 e!15698)))

(declare-fun res!14815 () Bool)

(assert (=> d!4389 (=> (not res!14815) (not e!15698))))

(assert (=> d!4389 (= res!14815 (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))))))

(assert (=> d!4389 (= lt!9125 e!15691)))

(assert (=> d!4389 (= c!3232 (and (not (= (bvand lt!8268 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!8268 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!4389 (validMask!0 (mask!4730 (_2!487 lt!8158)))))

(assert (=> d!4389 (= (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) lt!8268 (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))) lt!9135)))

(declare-fun b!24272 () Bool)

(declare-fun Unit!564 () Unit!512)

(assert (=> b!24272 (= e!15690 Unit!564)))

(declare-fun b!24273 () Bool)

(assert (=> b!24273 (= e!15697 (= (apply!29 lt!9135 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000)) (get!390 (select (arr!607 (_values!1729 (_2!487 lt!8158))) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (_2!487 lt!8158)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!24273 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!703 (_values!1729 (_2!487 lt!8158)))))))

(assert (=> b!24273 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))))))

(assert (= (and d!4389 c!3232) b!24260))

(assert (= (and d!4389 (not c!3232)) b!24270))

(assert (= (and b!24270 c!3236) b!24261))

(assert (= (and b!24270 (not c!3236)) b!24266))

(assert (= (and b!24266 c!3234) b!24258))

(assert (= (and b!24266 (not c!3234)) b!24264))

(assert (= (or b!24258 b!24264) bm!2091))

(assert (= (or b!24261 bm!2091) bm!2090))

(assert (= (or b!24261 b!24258) bm!2092))

(assert (= (or b!24260 bm!2090) bm!2089))

(assert (= (or b!24260 bm!2092) bm!2093))

(assert (= (and d!4389 res!14815) b!24271))

(assert (= (and d!4389 c!3235) b!24254))

(assert (= (and d!4389 (not c!3235)) b!24272))

(assert (= (and d!4389 res!14813) b!24259))

(assert (= (and b!24259 res!14818) b!24267))

(assert (= (and b!24259 (not res!14814)) b!24253))

(assert (= (and b!24253 res!14821) b!24273))

(assert (= (and b!24259 res!14819) b!24255))

(assert (= (and b!24255 c!3233) b!24262))

(assert (= (and b!24255 (not c!3233)) b!24257))

(assert (= (and b!24262 res!14820) b!24269))

(assert (= (or b!24262 b!24257) bm!2087))

(assert (= (and b!24255 res!14816) b!24263))

(assert (= (and b!24263 c!3231) b!24268))

(assert (= (and b!24263 (not c!3231)) b!24256))

(assert (= (and b!24268 res!14817) b!24265))

(assert (= (or b!24268 b!24256) bm!2088))

(declare-fun b_lambda!1617 () Bool)

(assert (=> (not b_lambda!1617) (not b!24273)))

(assert (=> b!24273 t!3242))

(declare-fun b_and!1523 () Bool)

(assert (= b_and!1521 (and (=> t!3242 result!1099) b_and!1523)))

(declare-fun m!18631 () Bool)

(assert (=> bm!2089 m!18631))

(declare-fun m!18633 () Bool)

(assert (=> b!24269 m!18633))

(assert (=> b!24271 m!16986))

(assert (=> b!24271 m!16986))

(assert (=> b!24271 m!16988))

(assert (=> d!4389 m!16990))

(assert (=> b!24253 m!16986))

(assert (=> b!24253 m!16986))

(declare-fun m!18635 () Bool)

(assert (=> b!24253 m!18635))

(declare-fun m!18637 () Bool)

(assert (=> b!24254 m!18637))

(declare-fun m!18639 () Bool)

(assert (=> b!24254 m!18639))

(declare-fun m!18641 () Bool)

(assert (=> b!24254 m!18641))

(assert (=> b!24254 m!18639))

(declare-fun m!18643 () Bool)

(assert (=> b!24254 m!18643))

(declare-fun m!18645 () Bool)

(assert (=> b!24254 m!18645))

(declare-fun m!18647 () Bool)

(assert (=> b!24254 m!18647))

(declare-fun m!18649 () Bool)

(assert (=> b!24254 m!18649))

(declare-fun m!18651 () Bool)

(assert (=> b!24254 m!18651))

(declare-fun m!18653 () Bool)

(assert (=> b!24254 m!18653))

(declare-fun m!18655 () Bool)

(assert (=> b!24254 m!18655))

(assert (=> b!24254 m!18641))

(declare-fun m!18657 () Bool)

(assert (=> b!24254 m!18657))

(declare-fun m!18659 () Bool)

(assert (=> b!24254 m!18659))

(assert (=> b!24254 m!18647))

(declare-fun m!18661 () Bool)

(assert (=> b!24254 m!18661))

(assert (=> b!24254 m!16986))

(declare-fun m!18663 () Bool)

(assert (=> b!24254 m!18663))

(assert (=> b!24254 m!18631))

(declare-fun m!18665 () Bool)

(assert (=> b!24254 m!18665))

(assert (=> b!24254 m!18653))

(assert (=> b!24267 m!16986))

(assert (=> b!24267 m!16986))

(assert (=> b!24267 m!16988))

(assert (=> b!24273 m!17425))

(assert (=> b!24273 m!17425))

(assert (=> b!24273 m!17026))

(assert (=> b!24273 m!17427))

(assert (=> b!24273 m!17026))

(assert (=> b!24273 m!16986))

(declare-fun m!18667 () Bool)

(assert (=> b!24273 m!18667))

(assert (=> b!24273 m!16986))

(declare-fun m!18669 () Bool)

(assert (=> bm!2088 m!18669))

(declare-fun m!18671 () Bool)

(assert (=> bm!2087 m!18671))

(declare-fun m!18673 () Bool)

(assert (=> b!24260 m!18673))

(declare-fun m!18675 () Bool)

(assert (=> b!24265 m!18675))

(declare-fun m!18677 () Bool)

(assert (=> bm!2093 m!18677))

(assert (=> d!4113 d!4389))

(declare-fun d!4391 () Bool)

(declare-fun e!15702 () Bool)

(assert (=> d!4391 e!15702))

(declare-fun res!14822 () Bool)

(assert (=> d!4391 (=> (not res!14822) (not e!15702))))

(declare-fun lt!9142 () ListLongMap!567)

(assert (=> d!4391 (= res!14822 (contains!230 lt!9142 (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(declare-fun lt!9141 () List!568)

(assert (=> d!4391 (= lt!9142 (ListLongMap!568 lt!9141))))

(declare-fun lt!9140 () Unit!512)

(declare-fun lt!9143 () Unit!512)

(assert (=> d!4391 (= lt!9140 lt!9143)))

(assert (=> d!4391 (= (getValueByKey!61 lt!9141 (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (Some!66 (_2!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(assert (=> d!4391 (= lt!9143 (lemmaContainsTupThenGetReturnValue!18 lt!9141 (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (_2!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(assert (=> d!4391 (= lt!9141 (insertStrictlySorted!18 (toList!299 (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158)))) (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (_2!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(assert (=> d!4391 (= (+!45 (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) lt!9142)))

(declare-fun b!24274 () Bool)

(declare-fun res!14823 () Bool)

(assert (=> b!24274 (=> (not res!14823) (not e!15702))))

(assert (=> b!24274 (= res!14823 (= (getValueByKey!61 (toList!299 lt!9142) (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (Some!66 (_2!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(declare-fun b!24275 () Bool)

(assert (=> b!24275 (= e!15702 (contains!232 (toList!299 lt!9142) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))

(assert (= (and d!4391 res!14822) b!24274))

(assert (= (and b!24274 res!14823) b!24275))

(declare-fun m!18679 () Bool)

(assert (=> d!4391 m!18679))

(declare-fun m!18681 () Bool)

(assert (=> d!4391 m!18681))

(declare-fun m!18683 () Bool)

(assert (=> d!4391 m!18683))

(declare-fun m!18685 () Bool)

(assert (=> d!4391 m!18685))

(declare-fun m!18687 () Bool)

(assert (=> b!24274 m!18687))

(declare-fun m!18689 () Bool)

(assert (=> b!24275 m!18689))

(assert (=> d!4113 d!4391))

(assert (=> d!4113 d!4145))

(declare-fun d!4393 () Bool)

(assert (=> d!4393 (contains!230 (getCurrentListMap!130 (_keys!3164 lt!8161) lt!8260 (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)) (select (arr!608 (_keys!3164 lt!8161)) (index!2338 lt!8254)))))

(assert (=> d!4393 true))

(declare-fun _$16!71 () Unit!512)

(assert (=> d!4393 (= (choose!206 (_keys!3164 lt!8161) lt!8260 (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) (index!2338 lt!8254) (defaultEntry!1743 lt!8161)) _$16!71)))

(declare-fun bs!1004 () Bool)

(assert (= bs!1004 d!4393))

(assert (=> bs!1004 m!17449))

(assert (=> bs!1004 m!16806))

(assert (=> bs!1004 m!17449))

(assert (=> bs!1004 m!16806))

(assert (=> bs!1004 m!17451))

(assert (=> d!4075 d!4393))

(assert (=> d!4075 d!4239))

(assert (=> d!4019 d!4003))

(declare-fun d!4395 () Bool)

(assert (=> d!4395 (= (arrayCountValidKeys!0 lt!8356 lt!8342 lt!8347) #b00000000000000000000000000000000)))

(assert (=> d!4395 true))

(declare-fun _$88!16 () Unit!512)

(assert (=> d!4395 (= (choose!59 lt!8356 lt!8342 lt!8347) _$88!16)))

(declare-fun bs!1005 () Bool)

(assert (= bs!1005 d!4395))

(assert (=> bs!1005 m!16914))

(assert (=> d!4019 d!4395))

(assert (=> b!23639 d!4125))

(declare-fun d!4397 () Bool)

(declare-fun e!15703 () Bool)

(assert (=> d!4397 e!15703))

(declare-fun res!14824 () Bool)

(assert (=> d!4397 (=> res!14824 e!15703)))

(declare-fun lt!9144 () Bool)

(assert (=> d!4397 (= res!14824 (not lt!9144))))

(declare-fun lt!9145 () Bool)

(assert (=> d!4397 (= lt!9144 lt!9145)))

(declare-fun lt!9146 () Unit!512)

(declare-fun e!15704 () Unit!512)

(assert (=> d!4397 (= lt!9146 e!15704)))

(declare-fun c!3237 () Bool)

(assert (=> d!4397 (= c!3237 lt!9145)))

(assert (=> d!4397 (= lt!9145 (containsKey!25 (toList!299 lt!8447) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!4397 (= (contains!230 lt!8447 #b1000000000000000000000000000000000000000000000000000000000000000) lt!9144)))

(declare-fun b!24276 () Bool)

(declare-fun lt!9147 () Unit!512)

(assert (=> b!24276 (= e!15704 lt!9147)))

(assert (=> b!24276 (= lt!9147 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!299 lt!8447) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!24276 (isDefined!23 (getValueByKey!61 (toList!299 lt!8447) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24277 () Bool)

(declare-fun Unit!565 () Unit!512)

(assert (=> b!24277 (= e!15704 Unit!565)))

(declare-fun b!24278 () Bool)

(assert (=> b!24278 (= e!15703 (isDefined!23 (getValueByKey!61 (toList!299 lt!8447) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!4397 c!3237) b!24276))

(assert (= (and d!4397 (not c!3237)) b!24277))

(assert (= (and d!4397 (not res!14824)) b!24278))

(declare-fun m!18691 () Bool)

(assert (=> d!4397 m!18691))

(declare-fun m!18693 () Bool)

(assert (=> b!24276 m!18693))

(declare-fun m!18695 () Bool)

(assert (=> b!24276 m!18695))

(assert (=> b!24276 m!18695))

(declare-fun m!18697 () Bool)

(assert (=> b!24276 m!18697))

(assert (=> b!24278 m!18695))

(assert (=> b!24278 m!18695))

(assert (=> b!24278 m!18697))

(assert (=> bm!1980 d!4397))

(declare-fun bm!2094 () Bool)

(declare-fun call!2098 () Bool)

(declare-fun lt!9165 () ListLongMap!567)

(assert (=> bm!2094 (= call!2098 (contains!230 lt!9165 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!2095 () Bool)

(declare-fun call!2100 () Bool)

(assert (=> bm!2095 (= call!2100 (contains!230 lt!9165 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24279 () Bool)

(declare-fun e!15712 () Bool)

(declare-fun e!15713 () Bool)

(assert (=> b!24279 (= e!15712 e!15713)))

(declare-fun res!14833 () Bool)

(assert (=> b!24279 (=> (not res!14833) (not e!15713))))

(assert (=> b!24279 (= res!14833 (contains!230 lt!9165 (select (arr!608 lt!8664) #b00000000000000000000000000000000)))))

(assert (=> b!24279 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 lt!8664)))))

(declare-fun b!24280 () Bool)

(declare-fun e!15706 () Unit!512)

(declare-fun lt!9150 () Unit!512)

(assert (=> b!24280 (= e!15706 lt!9150)))

(declare-fun lt!9162 () ListLongMap!567)

(assert (=> b!24280 (= lt!9162 (getCurrentListMapNoExtraKeys!15 lt!8664 lt!8669 (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))

(declare-fun lt!9157 () (_ BitVec 64))

(assert (=> b!24280 (= lt!9157 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9166 () (_ BitVec 64))

(assert (=> b!24280 (= lt!9166 (select (arr!608 lt!8664) #b00000000000000000000000000000000))))

(declare-fun lt!9158 () Unit!512)

(assert (=> b!24280 (= lt!9158 (addStillContains!14 lt!9162 lt!9157 (zeroValue!1666 (_2!487 lt!8158)) lt!9166))))

(assert (=> b!24280 (contains!230 (+!45 lt!9162 (tuple2!961 lt!9157 (zeroValue!1666 (_2!487 lt!8158)))) lt!9166)))

(declare-fun lt!9169 () Unit!512)

(assert (=> b!24280 (= lt!9169 lt!9158)))

(declare-fun lt!9153 () ListLongMap!567)

(assert (=> b!24280 (= lt!9153 (getCurrentListMapNoExtraKeys!15 lt!8664 lt!8669 (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))

(declare-fun lt!9168 () (_ BitVec 64))

(assert (=> b!24280 (= lt!9168 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9167 () (_ BitVec 64))

(assert (=> b!24280 (= lt!9167 (select (arr!608 lt!8664) #b00000000000000000000000000000000))))

(declare-fun lt!9152 () Unit!512)

(assert (=> b!24280 (= lt!9152 (addApplyDifferent!14 lt!9153 lt!9168 (minValue!1666 (_2!487 lt!8158)) lt!9167))))

(assert (=> b!24280 (= (apply!29 (+!45 lt!9153 (tuple2!961 lt!9168 (minValue!1666 (_2!487 lt!8158)))) lt!9167) (apply!29 lt!9153 lt!9167))))

(declare-fun lt!9151 () Unit!512)

(assert (=> b!24280 (= lt!9151 lt!9152)))

(declare-fun lt!9160 () ListLongMap!567)

(assert (=> b!24280 (= lt!9160 (getCurrentListMapNoExtraKeys!15 lt!8664 lt!8669 (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))

(declare-fun lt!9163 () (_ BitVec 64))

(assert (=> b!24280 (= lt!9163 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9149 () (_ BitVec 64))

(assert (=> b!24280 (= lt!9149 (select (arr!608 lt!8664) #b00000000000000000000000000000000))))

(declare-fun lt!9154 () Unit!512)

(assert (=> b!24280 (= lt!9154 (addApplyDifferent!14 lt!9160 lt!9163 (zeroValue!1666 (_2!487 lt!8158)) lt!9149))))

(assert (=> b!24280 (= (apply!29 (+!45 lt!9160 (tuple2!961 lt!9163 (zeroValue!1666 (_2!487 lt!8158)))) lt!9149) (apply!29 lt!9160 lt!9149))))

(declare-fun lt!9159 () Unit!512)

(assert (=> b!24280 (= lt!9159 lt!9154)))

(declare-fun lt!9161 () ListLongMap!567)

(assert (=> b!24280 (= lt!9161 (getCurrentListMapNoExtraKeys!15 lt!8664 lt!8669 (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))

(declare-fun lt!9156 () (_ BitVec 64))

(assert (=> b!24280 (= lt!9156 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9148 () (_ BitVec 64))

(assert (=> b!24280 (= lt!9148 (select (arr!608 lt!8664) #b00000000000000000000000000000000))))

(assert (=> b!24280 (= lt!9150 (addApplyDifferent!14 lt!9161 lt!9156 (minValue!1666 (_2!487 lt!8158)) lt!9148))))

(assert (=> b!24280 (= (apply!29 (+!45 lt!9161 (tuple2!961 lt!9156 (minValue!1666 (_2!487 lt!8158)))) lt!9148) (apply!29 lt!9161 lt!9148))))

(declare-fun bm!2096 () Bool)

(declare-fun call!2101 () ListLongMap!567)

(assert (=> bm!2096 (= call!2101 (getCurrentListMapNoExtraKeys!15 lt!8664 lt!8669 (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))

(declare-fun b!24281 () Bool)

(declare-fun res!14828 () Bool)

(declare-fun e!15709 () Bool)

(assert (=> b!24281 (=> (not res!14828) (not e!15709))))

(declare-fun e!15705 () Bool)

(assert (=> b!24281 (= res!14828 e!15705)))

(declare-fun c!3240 () Bool)

(assert (=> b!24281 (= c!3240 (not (= (bvand (extraKeys!1641 (_2!487 lt!8158)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!24282 () Bool)

(declare-fun e!15717 () Bool)

(assert (=> b!24282 (= e!15717 (not call!2100))))

(declare-fun b!24283 () Bool)

(assert (=> b!24283 (= e!15705 (not call!2098))))

(declare-fun bm!2097 () Bool)

(declare-fun call!2102 () ListLongMap!567)

(assert (=> bm!2097 (= call!2102 call!2101)))

(declare-fun b!24284 () Bool)

(declare-fun e!15715 () ListLongMap!567)

(declare-fun call!2103 () ListLongMap!567)

(assert (=> b!24284 (= e!15715 call!2103)))

(declare-fun b!24285 () Bool)

(declare-fun res!14831 () Bool)

(assert (=> b!24285 (=> (not res!14831) (not e!15709))))

(assert (=> b!24285 (= res!14831 e!15712)))

(declare-fun res!14826 () Bool)

(assert (=> b!24285 (=> res!14826 e!15712)))

(declare-fun e!15708 () Bool)

(assert (=> b!24285 (= res!14826 (not e!15708))))

(declare-fun res!14830 () Bool)

(assert (=> b!24285 (=> (not res!14830) (not e!15708))))

(assert (=> b!24285 (= res!14830 (bvslt #b00000000000000000000000000000000 (size!704 lt!8664)))))

(declare-fun b!24287 () Bool)

(declare-fun e!15710 () ListLongMap!567)

(assert (=> b!24287 (= e!15710 call!2103)))

(declare-fun b!24288 () Bool)

(declare-fun e!15711 () Bool)

(assert (=> b!24288 (= e!15705 e!15711)))

(declare-fun res!14832 () Bool)

(assert (=> b!24288 (= res!14832 call!2098)))

(assert (=> b!24288 (=> (not res!14832) (not e!15711))))

(declare-fun b!24289 () Bool)

(assert (=> b!24289 (= e!15709 e!15717)))

(declare-fun c!3238 () Bool)

(assert (=> b!24289 (= c!3238 (not (= (bvand (extraKeys!1641 (_2!487 lt!8158)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!2098 () Bool)

(declare-fun call!2097 () ListLongMap!567)

(assert (=> bm!2098 (= call!2097 call!2102)))

(declare-fun b!24290 () Bool)

(assert (=> b!24290 (= e!15715 call!2097)))

(declare-fun b!24291 () Bool)

(declare-fun e!15716 () Bool)

(assert (=> b!24291 (= e!15716 (= (apply!29 lt!9165 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!1666 (_2!487 lt!8158))))))

(declare-fun b!24292 () Bool)

(declare-fun c!3241 () Bool)

(assert (=> b!24292 (= c!3241 (and (not (= (bvand (extraKeys!1641 (_2!487 lt!8158)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 (_2!487 lt!8158)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!24292 (= e!15710 e!15715)))

(declare-fun b!24293 () Bool)

(assert (=> b!24293 (= e!15708 (validKeyInArray!0 (select (arr!608 lt!8664) #b00000000000000000000000000000000)))))

(declare-fun bm!2099 () Bool)

(declare-fun call!2099 () ListLongMap!567)

(assert (=> bm!2099 (= call!2103 call!2099)))

(declare-fun b!24294 () Bool)

(assert (=> b!24294 (= e!15717 e!15716)))

(declare-fun res!14829 () Bool)

(assert (=> b!24294 (= res!14829 call!2100)))

(assert (=> b!24294 (=> (not res!14829) (not e!15716))))

(declare-fun c!3243 () Bool)

(declare-fun bm!2100 () Bool)

(declare-fun c!3239 () Bool)

(assert (=> bm!2100 (= call!2099 (+!45 (ite c!3239 call!2101 (ite c!3243 call!2102 call!2097)) (ite (or c!3239 c!3243) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (_2!487 lt!8158))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!487 lt!8158))))))))

(declare-fun b!24295 () Bool)

(assert (=> b!24295 (= e!15711 (= (apply!29 lt!9165 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!1666 (_2!487 lt!8158))))))

(declare-fun b!24296 () Bool)

(declare-fun e!15707 () ListLongMap!567)

(assert (=> b!24296 (= e!15707 e!15710)))

(assert (=> b!24296 (= c!3243 (and (not (= (bvand (extraKeys!1641 (_2!487 lt!8158)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 (_2!487 lt!8158)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!24297 () Bool)

(declare-fun e!15714 () Bool)

(assert (=> b!24297 (= e!15714 (validKeyInArray!0 (select (arr!608 lt!8664) #b00000000000000000000000000000000)))))

(declare-fun b!24286 () Bool)

(assert (=> b!24286 (= e!15707 (+!45 call!2099 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!487 lt!8158)))))))

(declare-fun d!4399 () Bool)

(assert (=> d!4399 e!15709))

(declare-fun res!14825 () Bool)

(assert (=> d!4399 (=> (not res!14825) (not e!15709))))

(assert (=> d!4399 (= res!14825 (or (bvsge #b00000000000000000000000000000000 (size!704 lt!8664)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 lt!8664)))))))

(declare-fun lt!9155 () ListLongMap!567)

(assert (=> d!4399 (= lt!9165 lt!9155)))

(declare-fun lt!9164 () Unit!512)

(assert (=> d!4399 (= lt!9164 e!15706)))

(declare-fun c!3242 () Bool)

(assert (=> d!4399 (= c!3242 e!15714)))

(declare-fun res!14827 () Bool)

(assert (=> d!4399 (=> (not res!14827) (not e!15714))))

(assert (=> d!4399 (= res!14827 (bvslt #b00000000000000000000000000000000 (size!704 lt!8664)))))

(assert (=> d!4399 (= lt!9155 e!15707)))

(assert (=> d!4399 (= c!3239 (and (not (= (bvand (extraKeys!1641 (_2!487 lt!8158)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!1641 (_2!487 lt!8158)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!4399 (validMask!0 (mask!4730 (_2!487 lt!8158)))))

(assert (=> d!4399 (= (getCurrentListMap!130 lt!8664 lt!8669 (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))) lt!9165)))

(declare-fun b!24298 () Bool)

(declare-fun Unit!566 () Unit!512)

(assert (=> b!24298 (= e!15706 Unit!566)))

(declare-fun b!24299 () Bool)

(assert (=> b!24299 (= e!15713 (= (apply!29 lt!9165 (select (arr!608 lt!8664) #b00000000000000000000000000000000)) (get!390 (select (arr!607 lt!8669) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (_2!487 lt!8158)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!24299 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!703 lt!8669)))))

(assert (=> b!24299 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 lt!8664)))))

(assert (= (and d!4399 c!3239) b!24286))

(assert (= (and d!4399 (not c!3239)) b!24296))

(assert (= (and b!24296 c!3243) b!24287))

(assert (= (and b!24296 (not c!3243)) b!24292))

(assert (= (and b!24292 c!3241) b!24284))

(assert (= (and b!24292 (not c!3241)) b!24290))

(assert (= (or b!24284 b!24290) bm!2098))

(assert (= (or b!24287 bm!2098) bm!2097))

(assert (= (or b!24287 b!24284) bm!2099))

(assert (= (or b!24286 bm!2097) bm!2096))

(assert (= (or b!24286 bm!2099) bm!2100))

(assert (= (and d!4399 res!14827) b!24297))

(assert (= (and d!4399 c!3242) b!24280))

(assert (= (and d!4399 (not c!3242)) b!24298))

(assert (= (and d!4399 res!14825) b!24285))

(assert (= (and b!24285 res!14830) b!24293))

(assert (= (and b!24285 (not res!14826)) b!24279))

(assert (= (and b!24279 res!14833) b!24299))

(assert (= (and b!24285 res!14831) b!24281))

(assert (= (and b!24281 c!3240) b!24288))

(assert (= (and b!24281 (not c!3240)) b!24283))

(assert (= (and b!24288 res!14832) b!24295))

(assert (= (or b!24288 b!24283) bm!2094))

(assert (= (and b!24281 res!14828) b!24289))

(assert (= (and b!24289 c!3238) b!24294))

(assert (= (and b!24289 (not c!3238)) b!24282))

(assert (= (and b!24294 res!14829) b!24291))

(assert (= (or b!24294 b!24282) bm!2095))

(declare-fun b_lambda!1619 () Bool)

(assert (=> (not b_lambda!1619) (not b!24299)))

(assert (=> b!24299 t!3242))

(declare-fun b_and!1525 () Bool)

(assert (= b_and!1523 (and (=> t!3242 result!1099) b_and!1525)))

(declare-fun m!18699 () Bool)

(assert (=> bm!2096 m!18699))

(declare-fun m!18701 () Bool)

(assert (=> b!24295 m!18701))

(declare-fun m!18703 () Bool)

(assert (=> b!24297 m!18703))

(assert (=> b!24297 m!18703))

(declare-fun m!18705 () Bool)

(assert (=> b!24297 m!18705))

(assert (=> d!4399 m!16990))

(assert (=> b!24279 m!18703))

(assert (=> b!24279 m!18703))

(declare-fun m!18707 () Bool)

(assert (=> b!24279 m!18707))

(declare-fun m!18709 () Bool)

(assert (=> b!24280 m!18709))

(declare-fun m!18711 () Bool)

(assert (=> b!24280 m!18711))

(declare-fun m!18713 () Bool)

(assert (=> b!24280 m!18713))

(assert (=> b!24280 m!18711))

(declare-fun m!18715 () Bool)

(assert (=> b!24280 m!18715))

(declare-fun m!18717 () Bool)

(assert (=> b!24280 m!18717))

(declare-fun m!18719 () Bool)

(assert (=> b!24280 m!18719))

(declare-fun m!18721 () Bool)

(assert (=> b!24280 m!18721))

(declare-fun m!18723 () Bool)

(assert (=> b!24280 m!18723))

(declare-fun m!18725 () Bool)

(assert (=> b!24280 m!18725))

(declare-fun m!18727 () Bool)

(assert (=> b!24280 m!18727))

(assert (=> b!24280 m!18713))

(declare-fun m!18729 () Bool)

(assert (=> b!24280 m!18729))

(declare-fun m!18731 () Bool)

(assert (=> b!24280 m!18731))

(assert (=> b!24280 m!18719))

(declare-fun m!18733 () Bool)

(assert (=> b!24280 m!18733))

(assert (=> b!24280 m!18703))

(declare-fun m!18735 () Bool)

(assert (=> b!24280 m!18735))

(assert (=> b!24280 m!18699))

(declare-fun m!18737 () Bool)

(assert (=> b!24280 m!18737))

(assert (=> b!24280 m!18725))

(assert (=> b!24293 m!18703))

(assert (=> b!24293 m!18703))

(assert (=> b!24293 m!18705))

(declare-fun m!18739 () Bool)

(assert (=> b!24299 m!18739))

(assert (=> b!24299 m!18739))

(assert (=> b!24299 m!17026))

(declare-fun m!18741 () Bool)

(assert (=> b!24299 m!18741))

(assert (=> b!24299 m!17026))

(assert (=> b!24299 m!18703))

(declare-fun m!18743 () Bool)

(assert (=> b!24299 m!18743))

(assert (=> b!24299 m!18703))

(declare-fun m!18745 () Bool)

(assert (=> bm!2095 m!18745))

(declare-fun m!18747 () Bool)

(assert (=> bm!2094 m!18747))

(declare-fun m!18749 () Bool)

(assert (=> b!24286 m!18749))

(declare-fun m!18751 () Bool)

(assert (=> b!24291 m!18751))

(declare-fun m!18753 () Bool)

(assert (=> bm!2100 m!18753))

(assert (=> d!4069 d!4399))

(declare-fun e!15723 () Bool)

(declare-fun b!24311 () Bool)

(assert (=> b!24311 (= e!15723 (= (arrayCountValidKeys!0 (array!1286 (store (arr!608 (_keys!3164 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000) (size!704 (_keys!3164 (_2!487 lt!8158)))) #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))) (bvadd (arrayCountValidKeys!0 (_keys!3164 (_2!487 lt!8158)) #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))) #b00000000000000000000000000000001)))))

(declare-fun d!4401 () Bool)

(assert (=> d!4401 e!15723))

(declare-fun res!14844 () Bool)

(assert (=> d!4401 (=> (not res!14844) (not e!15723))))

(assert (=> d!4401 (= res!14844 (and (bvsge (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b00000000000000000000000000000000) (bvslt (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) (size!704 (_keys!3164 (_2!487 lt!8158))))))))

(declare-fun lt!9172 () Unit!512)

(declare-fun choose!1 (array!1285 (_ BitVec 32) (_ BitVec 64)) Unit!512)

(assert (=> d!4401 (= lt!9172 (choose!1 (_keys!3164 (_2!487 lt!8158)) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!15722 () Bool)

(assert (=> d!4401 e!15722))

(declare-fun res!14845 () Bool)

(assert (=> d!4401 (=> (not res!14845) (not e!15722))))

(assert (=> d!4401 (= res!14845 (and (bvsge (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b00000000000000000000000000000000) (bvslt (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) (size!704 (_keys!3164 (_2!487 lt!8158))))))))

(assert (=> d!4401 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3164 (_2!487 lt!8158)) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000) lt!9172)))

(declare-fun b!24308 () Bool)

(declare-fun res!14843 () Bool)

(assert (=> b!24308 (=> (not res!14843) (not e!15722))))

(assert (=> b!24308 (= res!14843 (not (validKeyInArray!0 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281))))))))

(declare-fun b!24309 () Bool)

(declare-fun res!14842 () Bool)

(assert (=> b!24309 (=> (not res!14842) (not e!15722))))

(assert (=> b!24309 (= res!14842 (validKeyInArray!0 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24310 () Bool)

(assert (=> b!24310 (= e!15722 (bvslt (size!704 (_keys!3164 (_2!487 lt!8158))) #b01111111111111111111111111111111))))

(assert (= (and d!4401 res!14845) b!24308))

(assert (= (and b!24308 res!14843) b!24309))

(assert (= (and b!24309 res!14842) b!24310))

(assert (= (and d!4401 res!14844) b!24311))

(assert (=> b!24311 m!17363))

(assert (=> b!24311 m!17361))

(assert (=> b!24311 m!17170))

(declare-fun m!18755 () Bool)

(assert (=> d!4401 m!18755))

(declare-fun m!18757 () Bool)

(assert (=> b!24308 m!18757))

(assert (=> b!24308 m!18757))

(declare-fun m!18759 () Bool)

(assert (=> b!24308 m!18759))

(declare-fun m!18761 () Bool)

(assert (=> b!24309 m!18761))

(assert (=> d!4069 d!4401))

(declare-fun b!24312 () Bool)

(declare-fun e!15725 () (_ BitVec 32))

(declare-fun e!15724 () (_ BitVec 32))

(assert (=> b!24312 (= e!15725 e!15724)))

(declare-fun c!3244 () Bool)

(assert (=> b!24312 (= c!3244 (validKeyInArray!0 (select (arr!608 (array!1286 (store (arr!608 (_keys!3164 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000) (size!704 (_keys!3164 (_2!487 lt!8158))))) #b00000000000000000000000000000000)))))

(declare-fun b!24313 () Bool)

(declare-fun call!2104 () (_ BitVec 32))

(assert (=> b!24313 (= e!15724 call!2104)))

(declare-fun bm!2101 () Bool)

(assert (=> bm!2101 (= call!2104 (arrayCountValidKeys!0 (array!1286 (store (arr!608 (_keys!3164 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000) (size!704 (_keys!3164 (_2!487 lt!8158)))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!704 (_keys!3164 (_2!487 lt!8158)))))))

(declare-fun b!24315 () Bool)

(assert (=> b!24315 (= e!15724 (bvadd #b00000000000000000000000000000001 call!2104))))

(declare-fun b!24314 () Bool)

(assert (=> b!24314 (= e!15725 #b00000000000000000000000000000000)))

(declare-fun d!4403 () Bool)

(declare-fun lt!9173 () (_ BitVec 32))

(assert (=> d!4403 (and (bvsge lt!9173 #b00000000000000000000000000000000) (bvsle lt!9173 (bvsub (size!704 (array!1286 (store (arr!608 (_keys!3164 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000) (size!704 (_keys!3164 (_2!487 lt!8158))))) #b00000000000000000000000000000000)))))

(assert (=> d!4403 (= lt!9173 e!15725)))

(declare-fun c!3245 () Bool)

(assert (=> d!4403 (= c!3245 (bvsge #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))))))

(assert (=> d!4403 (and (bvsle #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!704 (_keys!3164 (_2!487 lt!8158))) (size!704 (array!1286 (store (arr!608 (_keys!3164 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000) (size!704 (_keys!3164 (_2!487 lt!8158)))))))))

(assert (=> d!4403 (= (arrayCountValidKeys!0 (array!1286 (store (arr!608 (_keys!3164 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000) (size!704 (_keys!3164 (_2!487 lt!8158)))) #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))) lt!9173)))

(assert (= (and d!4403 c!3245) b!24314))

(assert (= (and d!4403 (not c!3245)) b!24312))

(assert (= (and b!24312 c!3244) b!24315))

(assert (= (and b!24312 (not c!3244)) b!24313))

(assert (= (or b!24315 b!24313) bm!2101))

(declare-fun m!18763 () Bool)

(assert (=> b!24312 m!18763))

(assert (=> b!24312 m!18763))

(declare-fun m!18765 () Bool)

(assert (=> b!24312 m!18765))

(declare-fun m!18767 () Bool)

(assert (=> bm!2101 m!18767))

(assert (=> d!4069 d!4403))

(declare-fun d!4405 () Bool)

(assert (=> d!4405 (= (arrayCountValidKeys!0 lt!8661 (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) (bvadd (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!9176 () Unit!512)

(declare-fun choose!2 (array!1285 (_ BitVec 32)) Unit!512)

(assert (=> d!4405 (= lt!9176 (choose!2 lt!8661 (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281))))))

(declare-fun e!15728 () Bool)

(assert (=> d!4405 e!15728))

(declare-fun res!14850 () Bool)

(assert (=> d!4405 (=> (not res!14850) (not e!15728))))

(assert (=> d!4405 (= res!14850 (and (bvsge (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b00000000000000000000000000000000) (bvslt (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) (size!704 lt!8661))))))

(assert (=> d!4405 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!8661 (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281))) lt!9176)))

(declare-fun b!24320 () Bool)

(declare-fun res!14851 () Bool)

(assert (=> b!24320 (=> (not res!14851) (not e!15728))))

(assert (=> b!24320 (= res!14851 (validKeyInArray!0 (select (arr!608 lt!8661) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)))))))

(declare-fun b!24321 () Bool)

(assert (=> b!24321 (= e!15728 (bvslt (size!704 lt!8661) #b01111111111111111111111111111111))))

(assert (= (and d!4405 res!14850) b!24320))

(assert (= (and b!24320 res!14851) b!24321))

(assert (=> d!4405 m!17353))

(declare-fun m!18769 () Bool)

(assert (=> d!4405 m!18769))

(declare-fun m!18771 () Bool)

(assert (=> b!24320 m!18771))

(assert (=> b!24320 m!18771))

(declare-fun m!18773 () Bool)

(assert (=> b!24320 m!18773))

(assert (=> d!4069 d!4405))

(assert (=> d!4069 d!4093))

(declare-fun d!4407 () Bool)

(declare-fun e!15729 () Bool)

(assert (=> d!4407 e!15729))

(declare-fun res!14852 () Bool)

(assert (=> d!4407 (=> (not res!14852) (not e!15729))))

(assert (=> d!4407 (= res!14852 (and (bvsge (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b00000000000000000000000000000000) (bvslt (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) (size!704 lt!8664))))))

(declare-fun lt!9177 () Unit!512)

(assert (=> d!4407 (= lt!9177 (choose!206 lt!8664 lt!8669 (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) (defaultEntry!1743 (_2!487 lt!8158))))))

(assert (=> d!4407 (validMask!0 (mask!4730 (_2!487 lt!8158)))))

(assert (=> d!4407 (= (lemmaValidKeyInArrayIsInListMap!10 lt!8664 lt!8669 (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) (defaultEntry!1743 (_2!487 lt!8158))) lt!9177)))

(declare-fun b!24322 () Bool)

(assert (=> b!24322 (= e!15729 (contains!230 (getCurrentListMap!130 lt!8664 lt!8669 (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))) (select (arr!608 lt!8664) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)))))))

(assert (= (and d!4407 res!14852) b!24322))

(declare-fun m!18775 () Bool)

(assert (=> d!4407 m!18775))

(assert (=> d!4407 m!16990))

(assert (=> b!24322 m!17341))

(declare-fun m!18777 () Bool)

(assert (=> b!24322 m!18777))

(assert (=> b!24322 m!17341))

(assert (=> b!24322 m!18777))

(declare-fun m!18779 () Bool)

(assert (=> b!24322 m!18779))

(assert (=> d!4069 d!4407))

(assert (=> d!4069 d!4051))

(declare-fun b!24323 () Bool)

(declare-fun e!15730 () Bool)

(declare-fun call!2105 () Bool)

(assert (=> b!24323 (= e!15730 call!2105)))

(declare-fun d!4409 () Bool)

(declare-fun res!14854 () Bool)

(declare-fun e!15731 () Bool)

(assert (=> d!4409 (=> res!14854 e!15731)))

(assert (=> d!4409 (= res!14854 (bvsge lt!8652 (size!704 (array!1286 (store (arr!608 (_keys!3164 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000) (size!704 (_keys!3164 (_2!487 lt!8158)))))))))

(assert (=> d!4409 (= (arrayNoDuplicates!0 (array!1286 (store (arr!608 (_keys!3164 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000) (size!704 (_keys!3164 (_2!487 lt!8158)))) lt!8652 lt!8657) e!15731)))

(declare-fun b!24324 () Bool)

(declare-fun e!15733 () Bool)

(assert (=> b!24324 (= e!15733 e!15730)))

(declare-fun c!3246 () Bool)

(assert (=> b!24324 (= c!3246 (validKeyInArray!0 (select (arr!608 (array!1286 (store (arr!608 (_keys!3164 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000) (size!704 (_keys!3164 (_2!487 lt!8158))))) lt!8652)))))

(declare-fun b!24325 () Bool)

(assert (=> b!24325 (= e!15730 call!2105)))

(declare-fun e!15732 () Bool)

(declare-fun b!24326 () Bool)

(assert (=> b!24326 (= e!15732 (contains!231 lt!8657 (select (arr!608 (array!1286 (store (arr!608 (_keys!3164 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000) (size!704 (_keys!3164 (_2!487 lt!8158))))) lt!8652)))))

(declare-fun bm!2102 () Bool)

(assert (=> bm!2102 (= call!2105 (arrayNoDuplicates!0 (array!1286 (store (arr!608 (_keys!3164 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000) (size!704 (_keys!3164 (_2!487 lt!8158)))) (bvadd lt!8652 #b00000000000000000000000000000001) (ite c!3246 (Cons!565 (select (arr!608 (array!1286 (store (arr!608 (_keys!3164 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000) (size!704 (_keys!3164 (_2!487 lt!8158))))) lt!8652) lt!8657) lt!8657)))))

(declare-fun b!24327 () Bool)

(assert (=> b!24327 (= e!15731 e!15733)))

(declare-fun res!14853 () Bool)

(assert (=> b!24327 (=> (not res!14853) (not e!15733))))

(assert (=> b!24327 (= res!14853 (not e!15732))))

(declare-fun res!14855 () Bool)

(assert (=> b!24327 (=> (not res!14855) (not e!15732))))

(assert (=> b!24327 (= res!14855 (validKeyInArray!0 (select (arr!608 (array!1286 (store (arr!608 (_keys!3164 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000) (size!704 (_keys!3164 (_2!487 lt!8158))))) lt!8652)))))

(assert (= (and d!4409 (not res!14854)) b!24327))

(assert (= (and b!24327 res!14855) b!24326))

(assert (= (and b!24327 res!14853) b!24324))

(assert (= (and b!24324 c!3246) b!24325))

(assert (= (and b!24324 (not c!3246)) b!24323))

(assert (= (or b!24325 b!24323) bm!2102))

(declare-fun m!18781 () Bool)

(assert (=> b!24324 m!18781))

(assert (=> b!24324 m!18781))

(declare-fun m!18783 () Bool)

(assert (=> b!24324 m!18783))

(assert (=> b!24326 m!18781))

(assert (=> b!24326 m!18781))

(declare-fun m!18785 () Bool)

(assert (=> b!24326 m!18785))

(assert (=> bm!2102 m!18781))

(declare-fun m!18787 () Bool)

(assert (=> bm!2102 m!18787))

(assert (=> b!24327 m!18781))

(assert (=> b!24327 m!18781))

(assert (=> b!24327 m!18783))

(assert (=> d!4069 d!4409))

(declare-fun d!4411 () Bool)

(declare-fun e!15736 () Bool)

(assert (=> d!4411 e!15736))

(declare-fun res!14858 () Bool)

(assert (=> d!4411 (=> (not res!14858) (not e!15736))))

(assert (=> d!4411 (= res!14858 (and (bvsge (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b00000000000000000000000000000000) (bvslt (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) (size!704 (_keys!3164 (_2!487 lt!8158)))) (bvslt (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) (size!703 (_values!1729 (_2!487 lt!8158))))))))

(declare-fun lt!9180 () Unit!512)

(declare-fun choose!214 (array!1285 array!1283 (_ BitVec 32) (_ BitVec 32) V!1189 V!1189 (_ BitVec 32) (_ BitVec 64) V!1189 Int) Unit!512)

(assert (=> d!4411 (= lt!9180 (choose!214 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (defaultEntry!1743 (_2!487 lt!8158))))))

(assert (=> d!4411 (validMask!0 (mask!4730 (_2!487 lt!8158)))))

(assert (=> d!4411 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!3 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))) (defaultEntry!1743 (_2!487 lt!8158))) lt!9180)))

(declare-fun b!24330 () Bool)

(assert (=> b!24330 (= e!15736 (= (+!45 (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (getCurrentListMap!130 (array!1286 (store (arr!608 (_keys!3164 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000) (size!704 (_keys!3164 (_2!487 lt!8158)))) (array!1284 (store (arr!607 (_values!1729 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) (ValueCellFull!312 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!703 (_values!1729 (_2!487 lt!8158)))) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158)))))))

(assert (= (and d!4411 res!14858) b!24330))

(declare-fun m!18789 () Bool)

(assert (=> d!4411 m!18789))

(assert (=> d!4411 m!16990))

(assert (=> b!24330 m!17337))

(assert (=> b!24330 m!17355))

(assert (=> b!24330 m!16852))

(assert (=> b!24330 m!17363))

(assert (=> b!24330 m!16852))

(assert (=> b!24330 m!17351))

(assert (=> d!4069 d!4411))

(declare-fun d!4413 () Bool)

(declare-fun e!15737 () Bool)

(assert (=> d!4413 e!15737))

(declare-fun res!14859 () Bool)

(assert (=> d!4413 (=> res!14859 e!15737)))

(declare-fun lt!9181 () Bool)

(assert (=> d!4413 (= res!14859 (not lt!9181))))

(declare-fun lt!9182 () Bool)

(assert (=> d!4413 (= lt!9181 lt!9182)))

(declare-fun lt!9183 () Unit!512)

(declare-fun e!15738 () Unit!512)

(assert (=> d!4413 (= lt!9183 e!15738)))

(declare-fun c!3247 () Bool)

(assert (=> d!4413 (= c!3247 lt!9182)))

(assert (=> d!4413 (= lt!9182 (containsKey!25 (toList!299 (getCurrentListMap!130 lt!8664 lt!8669 (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158)))) (select (store (arr!608 (_keys!3164 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)))))))

(assert (=> d!4413 (= (contains!230 (getCurrentListMap!130 lt!8664 lt!8669 (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))) (select (store (arr!608 (_keys!3164 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)))) lt!9181)))

(declare-fun b!24331 () Bool)

(declare-fun lt!9184 () Unit!512)

(assert (=> b!24331 (= e!15738 lt!9184)))

(assert (=> b!24331 (= lt!9184 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!299 (getCurrentListMap!130 lt!8664 lt!8669 (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158)))) (select (store (arr!608 (_keys!3164 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)))))))

(assert (=> b!24331 (isDefined!23 (getValueByKey!61 (toList!299 (getCurrentListMap!130 lt!8664 lt!8669 (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158)))) (select (store (arr!608 (_keys!3164 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)))))))

(declare-fun b!24332 () Bool)

(declare-fun Unit!567 () Unit!512)

(assert (=> b!24332 (= e!15738 Unit!567)))

(declare-fun b!24333 () Bool)

(assert (=> b!24333 (= e!15737 (isDefined!23 (getValueByKey!61 (toList!299 (getCurrentListMap!130 lt!8664 lt!8669 (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158)))) (select (store (arr!608 (_keys!3164 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281))))))))

(assert (= (and d!4413 c!3247) b!24331))

(assert (= (and d!4413 (not c!3247)) b!24332))

(assert (= (and d!4413 (not res!14859)) b!24333))

(assert (=> d!4413 m!17359))

(declare-fun m!18791 () Bool)

(assert (=> d!4413 m!18791))

(assert (=> b!24331 m!17359))

(declare-fun m!18793 () Bool)

(assert (=> b!24331 m!18793))

(assert (=> b!24331 m!17359))

(declare-fun m!18795 () Bool)

(assert (=> b!24331 m!18795))

(assert (=> b!24331 m!18795))

(declare-fun m!18797 () Bool)

(assert (=> b!24331 m!18797))

(assert (=> b!24333 m!17359))

(assert (=> b!24333 m!18795))

(assert (=> b!24333 m!18795))

(assert (=> b!24333 m!18797))

(assert (=> d!4069 d!4413))

(declare-fun d!4415 () Bool)

(assert (=> d!4415 (arrayContainsKey!0 lt!8647 #b1000000000000000000000000000000000000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun lt!9187 () Unit!512)

(declare-fun choose!13 (array!1285 (_ BitVec 64) (_ BitVec 32)) Unit!512)

(assert (=> d!4415 (= lt!9187 (choose!13 lt!8647 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281))))))

(assert (=> d!4415 (bvsge (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b00000000000000000000000000000000)))

(assert (=> d!4415 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!8647 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281))) lt!9187)))

(declare-fun bs!1006 () Bool)

(assert (= bs!1006 d!4415))

(assert (=> bs!1006 m!17367))

(declare-fun m!18799 () Bool)

(assert (=> bs!1006 m!18799))

(assert (=> d!4069 d!4415))

(declare-fun bm!2103 () Bool)

(declare-fun call!2107 () Bool)

(declare-fun lt!9205 () ListLongMap!567)

(assert (=> bm!2103 (= call!2107 (contains!230 lt!9205 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!2104 () Bool)

(declare-fun call!2109 () Bool)

(assert (=> bm!2104 (= call!2109 (contains!230 lt!9205 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24334 () Bool)

(declare-fun e!15746 () Bool)

(declare-fun e!15747 () Bool)

(assert (=> b!24334 (= e!15746 e!15747)))

(declare-fun res!14868 () Bool)

(assert (=> b!24334 (=> (not res!14868) (not e!15747))))

(assert (=> b!24334 (= res!14868 (contains!230 lt!9205 (select (arr!608 (array!1286 (store (arr!608 (_keys!3164 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000) (size!704 (_keys!3164 (_2!487 lt!8158))))) #b00000000000000000000000000000000)))))

(assert (=> b!24334 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (array!1286 (store (arr!608 (_keys!3164 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000) (size!704 (_keys!3164 (_2!487 lt!8158)))))))))

(declare-fun b!24335 () Bool)

(declare-fun e!15740 () Unit!512)

(declare-fun lt!9190 () Unit!512)

(assert (=> b!24335 (= e!15740 lt!9190)))

(declare-fun lt!9202 () ListLongMap!567)

(assert (=> b!24335 (= lt!9202 (getCurrentListMapNoExtraKeys!15 (array!1286 (store (arr!608 (_keys!3164 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000) (size!704 (_keys!3164 (_2!487 lt!8158)))) (array!1284 (store (arr!607 (_values!1729 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) (ValueCellFull!312 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!703 (_values!1729 (_2!487 lt!8158)))) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))

(declare-fun lt!9197 () (_ BitVec 64))

(assert (=> b!24335 (= lt!9197 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9206 () (_ BitVec 64))

(assert (=> b!24335 (= lt!9206 (select (arr!608 (array!1286 (store (arr!608 (_keys!3164 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000) (size!704 (_keys!3164 (_2!487 lt!8158))))) #b00000000000000000000000000000000))))

(declare-fun lt!9198 () Unit!512)

(assert (=> b!24335 (= lt!9198 (addStillContains!14 lt!9202 lt!9197 (zeroValue!1666 (_2!487 lt!8158)) lt!9206))))

(assert (=> b!24335 (contains!230 (+!45 lt!9202 (tuple2!961 lt!9197 (zeroValue!1666 (_2!487 lt!8158)))) lt!9206)))

(declare-fun lt!9209 () Unit!512)

(assert (=> b!24335 (= lt!9209 lt!9198)))

(declare-fun lt!9193 () ListLongMap!567)

(assert (=> b!24335 (= lt!9193 (getCurrentListMapNoExtraKeys!15 (array!1286 (store (arr!608 (_keys!3164 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000) (size!704 (_keys!3164 (_2!487 lt!8158)))) (array!1284 (store (arr!607 (_values!1729 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) (ValueCellFull!312 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!703 (_values!1729 (_2!487 lt!8158)))) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))

(declare-fun lt!9208 () (_ BitVec 64))

(assert (=> b!24335 (= lt!9208 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9207 () (_ BitVec 64))

(assert (=> b!24335 (= lt!9207 (select (arr!608 (array!1286 (store (arr!608 (_keys!3164 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000) (size!704 (_keys!3164 (_2!487 lt!8158))))) #b00000000000000000000000000000000))))

(declare-fun lt!9192 () Unit!512)

(assert (=> b!24335 (= lt!9192 (addApplyDifferent!14 lt!9193 lt!9208 (minValue!1666 (_2!487 lt!8158)) lt!9207))))

(assert (=> b!24335 (= (apply!29 (+!45 lt!9193 (tuple2!961 lt!9208 (minValue!1666 (_2!487 lt!8158)))) lt!9207) (apply!29 lt!9193 lt!9207))))

(declare-fun lt!9191 () Unit!512)

(assert (=> b!24335 (= lt!9191 lt!9192)))

(declare-fun lt!9200 () ListLongMap!567)

(assert (=> b!24335 (= lt!9200 (getCurrentListMapNoExtraKeys!15 (array!1286 (store (arr!608 (_keys!3164 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000) (size!704 (_keys!3164 (_2!487 lt!8158)))) (array!1284 (store (arr!607 (_values!1729 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) (ValueCellFull!312 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!703 (_values!1729 (_2!487 lt!8158)))) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))

(declare-fun lt!9203 () (_ BitVec 64))

(assert (=> b!24335 (= lt!9203 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9189 () (_ BitVec 64))

(assert (=> b!24335 (= lt!9189 (select (arr!608 (array!1286 (store (arr!608 (_keys!3164 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000) (size!704 (_keys!3164 (_2!487 lt!8158))))) #b00000000000000000000000000000000))))

(declare-fun lt!9194 () Unit!512)

(assert (=> b!24335 (= lt!9194 (addApplyDifferent!14 lt!9200 lt!9203 (zeroValue!1666 (_2!487 lt!8158)) lt!9189))))

(assert (=> b!24335 (= (apply!29 (+!45 lt!9200 (tuple2!961 lt!9203 (zeroValue!1666 (_2!487 lt!8158)))) lt!9189) (apply!29 lt!9200 lt!9189))))

(declare-fun lt!9199 () Unit!512)

(assert (=> b!24335 (= lt!9199 lt!9194)))

(declare-fun lt!9201 () ListLongMap!567)

(assert (=> b!24335 (= lt!9201 (getCurrentListMapNoExtraKeys!15 (array!1286 (store (arr!608 (_keys!3164 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000) (size!704 (_keys!3164 (_2!487 lt!8158)))) (array!1284 (store (arr!607 (_values!1729 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) (ValueCellFull!312 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!703 (_values!1729 (_2!487 lt!8158)))) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))

(declare-fun lt!9196 () (_ BitVec 64))

(assert (=> b!24335 (= lt!9196 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9188 () (_ BitVec 64))

(assert (=> b!24335 (= lt!9188 (select (arr!608 (array!1286 (store (arr!608 (_keys!3164 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000) (size!704 (_keys!3164 (_2!487 lt!8158))))) #b00000000000000000000000000000000))))

(assert (=> b!24335 (= lt!9190 (addApplyDifferent!14 lt!9201 lt!9196 (minValue!1666 (_2!487 lt!8158)) lt!9188))))

(assert (=> b!24335 (= (apply!29 (+!45 lt!9201 (tuple2!961 lt!9196 (minValue!1666 (_2!487 lt!8158)))) lt!9188) (apply!29 lt!9201 lt!9188))))

(declare-fun bm!2105 () Bool)

(declare-fun call!2110 () ListLongMap!567)

(assert (=> bm!2105 (= call!2110 (getCurrentListMapNoExtraKeys!15 (array!1286 (store (arr!608 (_keys!3164 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000) (size!704 (_keys!3164 (_2!487 lt!8158)))) (array!1284 (store (arr!607 (_values!1729 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) (ValueCellFull!312 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!703 (_values!1729 (_2!487 lt!8158)))) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))

(declare-fun b!24336 () Bool)

(declare-fun res!14863 () Bool)

(declare-fun e!15743 () Bool)

(assert (=> b!24336 (=> (not res!14863) (not e!15743))))

(declare-fun e!15739 () Bool)

(assert (=> b!24336 (= res!14863 e!15739)))

(declare-fun c!3250 () Bool)

(assert (=> b!24336 (= c!3250 (not (= (bvand (extraKeys!1641 (_2!487 lt!8158)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!24337 () Bool)

(declare-fun e!15751 () Bool)

(assert (=> b!24337 (= e!15751 (not call!2109))))

(declare-fun b!24338 () Bool)

(assert (=> b!24338 (= e!15739 (not call!2107))))

(declare-fun bm!2106 () Bool)

(declare-fun call!2111 () ListLongMap!567)

(assert (=> bm!2106 (= call!2111 call!2110)))

(declare-fun b!24339 () Bool)

(declare-fun e!15749 () ListLongMap!567)

(declare-fun call!2112 () ListLongMap!567)

(assert (=> b!24339 (= e!15749 call!2112)))

(declare-fun b!24340 () Bool)

(declare-fun res!14866 () Bool)

(assert (=> b!24340 (=> (not res!14866) (not e!15743))))

(assert (=> b!24340 (= res!14866 e!15746)))

(declare-fun res!14861 () Bool)

(assert (=> b!24340 (=> res!14861 e!15746)))

(declare-fun e!15742 () Bool)

(assert (=> b!24340 (= res!14861 (not e!15742))))

(declare-fun res!14865 () Bool)

(assert (=> b!24340 (=> (not res!14865) (not e!15742))))

(assert (=> b!24340 (= res!14865 (bvslt #b00000000000000000000000000000000 (size!704 (array!1286 (store (arr!608 (_keys!3164 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000) (size!704 (_keys!3164 (_2!487 lt!8158)))))))))

(declare-fun b!24342 () Bool)

(declare-fun e!15744 () ListLongMap!567)

(assert (=> b!24342 (= e!15744 call!2112)))

(declare-fun b!24343 () Bool)

(declare-fun e!15745 () Bool)

(assert (=> b!24343 (= e!15739 e!15745)))

(declare-fun res!14867 () Bool)

(assert (=> b!24343 (= res!14867 call!2107)))

(assert (=> b!24343 (=> (not res!14867) (not e!15745))))

(declare-fun b!24344 () Bool)

(assert (=> b!24344 (= e!15743 e!15751)))

(declare-fun c!3248 () Bool)

(assert (=> b!24344 (= c!3248 (not (= (bvand (extraKeys!1641 (_2!487 lt!8158)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!2107 () Bool)

(declare-fun call!2106 () ListLongMap!567)

(assert (=> bm!2107 (= call!2106 call!2111)))

(declare-fun b!24345 () Bool)

(assert (=> b!24345 (= e!15749 call!2106)))

(declare-fun b!24346 () Bool)

(declare-fun e!15750 () Bool)

(assert (=> b!24346 (= e!15750 (= (apply!29 lt!9205 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!1666 (_2!487 lt!8158))))))

(declare-fun b!24347 () Bool)

(declare-fun c!3251 () Bool)

(assert (=> b!24347 (= c!3251 (and (not (= (bvand (extraKeys!1641 (_2!487 lt!8158)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 (_2!487 lt!8158)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!24347 (= e!15744 e!15749)))

(declare-fun b!24348 () Bool)

(assert (=> b!24348 (= e!15742 (validKeyInArray!0 (select (arr!608 (array!1286 (store (arr!608 (_keys!3164 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000) (size!704 (_keys!3164 (_2!487 lt!8158))))) #b00000000000000000000000000000000)))))

(declare-fun bm!2108 () Bool)

(declare-fun call!2108 () ListLongMap!567)

(assert (=> bm!2108 (= call!2112 call!2108)))

(declare-fun b!24349 () Bool)

(assert (=> b!24349 (= e!15751 e!15750)))

(declare-fun res!14864 () Bool)

(assert (=> b!24349 (= res!14864 call!2109)))

(assert (=> b!24349 (=> (not res!14864) (not e!15750))))

(declare-fun c!3249 () Bool)

(declare-fun c!3253 () Bool)

(declare-fun bm!2109 () Bool)

(assert (=> bm!2109 (= call!2108 (+!45 (ite c!3249 call!2110 (ite c!3253 call!2111 call!2106)) (ite (or c!3249 c!3253) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (_2!487 lt!8158))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!487 lt!8158))))))))

(declare-fun b!24350 () Bool)

(assert (=> b!24350 (= e!15745 (= (apply!29 lt!9205 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!1666 (_2!487 lt!8158))))))

(declare-fun b!24351 () Bool)

(declare-fun e!15741 () ListLongMap!567)

(assert (=> b!24351 (= e!15741 e!15744)))

(assert (=> b!24351 (= c!3253 (and (not (= (bvand (extraKeys!1641 (_2!487 lt!8158)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 (_2!487 lt!8158)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun e!15748 () Bool)

(declare-fun b!24352 () Bool)

(assert (=> b!24352 (= e!15748 (validKeyInArray!0 (select (arr!608 (array!1286 (store (arr!608 (_keys!3164 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000) (size!704 (_keys!3164 (_2!487 lt!8158))))) #b00000000000000000000000000000000)))))

(declare-fun b!24341 () Bool)

(assert (=> b!24341 (= e!15741 (+!45 call!2108 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!487 lt!8158)))))))

(declare-fun d!4417 () Bool)

(assert (=> d!4417 e!15743))

(declare-fun res!14860 () Bool)

(assert (=> d!4417 (=> (not res!14860) (not e!15743))))

(assert (=> d!4417 (= res!14860 (or (bvsge #b00000000000000000000000000000000 (size!704 (array!1286 (store (arr!608 (_keys!3164 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000) (size!704 (_keys!3164 (_2!487 lt!8158)))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (array!1286 (store (arr!608 (_keys!3164 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000) (size!704 (_keys!3164 (_2!487 lt!8158)))))))))))

(declare-fun lt!9195 () ListLongMap!567)

(assert (=> d!4417 (= lt!9205 lt!9195)))

(declare-fun lt!9204 () Unit!512)

(assert (=> d!4417 (= lt!9204 e!15740)))

(declare-fun c!3252 () Bool)

(assert (=> d!4417 (= c!3252 e!15748)))

(declare-fun res!14862 () Bool)

(assert (=> d!4417 (=> (not res!14862) (not e!15748))))

(assert (=> d!4417 (= res!14862 (bvslt #b00000000000000000000000000000000 (size!704 (array!1286 (store (arr!608 (_keys!3164 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000) (size!704 (_keys!3164 (_2!487 lt!8158)))))))))

(assert (=> d!4417 (= lt!9195 e!15741)))

(assert (=> d!4417 (= c!3249 (and (not (= (bvand (extraKeys!1641 (_2!487 lt!8158)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!1641 (_2!487 lt!8158)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!4417 (validMask!0 (mask!4730 (_2!487 lt!8158)))))

(assert (=> d!4417 (= (getCurrentListMap!130 (array!1286 (store (arr!608 (_keys!3164 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000) (size!704 (_keys!3164 (_2!487 lt!8158)))) (array!1284 (store (arr!607 (_values!1729 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) (ValueCellFull!312 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!703 (_values!1729 (_2!487 lt!8158)))) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))) lt!9205)))

(declare-fun b!24353 () Bool)

(declare-fun Unit!568 () Unit!512)

(assert (=> b!24353 (= e!15740 Unit!568)))

(declare-fun b!24354 () Bool)

(assert (=> b!24354 (= e!15747 (= (apply!29 lt!9205 (select (arr!608 (array!1286 (store (arr!608 (_keys!3164 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000) (size!704 (_keys!3164 (_2!487 lt!8158))))) #b00000000000000000000000000000000)) (get!390 (select (arr!607 (array!1284 (store (arr!607 (_values!1729 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) (ValueCellFull!312 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!703 (_values!1729 (_2!487 lt!8158))))) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (_2!487 lt!8158)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!24354 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!703 (array!1284 (store (arr!607 (_values!1729 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) (ValueCellFull!312 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!703 (_values!1729 (_2!487 lt!8158)))))))))

(assert (=> b!24354 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (array!1286 (store (arr!608 (_keys!3164 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000) (size!704 (_keys!3164 (_2!487 lt!8158)))))))))

(assert (= (and d!4417 c!3249) b!24341))

(assert (= (and d!4417 (not c!3249)) b!24351))

(assert (= (and b!24351 c!3253) b!24342))

(assert (= (and b!24351 (not c!3253)) b!24347))

(assert (= (and b!24347 c!3251) b!24339))

(assert (= (and b!24347 (not c!3251)) b!24345))

(assert (= (or b!24339 b!24345) bm!2107))

(assert (= (or b!24342 bm!2107) bm!2106))

(assert (= (or b!24342 b!24339) bm!2108))

(assert (= (or b!24341 bm!2106) bm!2105))

(assert (= (or b!24341 bm!2108) bm!2109))

(assert (= (and d!4417 res!14862) b!24352))

(assert (= (and d!4417 c!3252) b!24335))

(assert (= (and d!4417 (not c!3252)) b!24353))

(assert (= (and d!4417 res!14860) b!24340))

(assert (= (and b!24340 res!14865) b!24348))

(assert (= (and b!24340 (not res!14861)) b!24334))

(assert (= (and b!24334 res!14868) b!24354))

(assert (= (and b!24340 res!14866) b!24336))

(assert (= (and b!24336 c!3250) b!24343))

(assert (= (and b!24336 (not c!3250)) b!24338))

(assert (= (and b!24343 res!14867) b!24350))

(assert (= (or b!24343 b!24338) bm!2103))

(assert (= (and b!24336 res!14863) b!24344))

(assert (= (and b!24344 c!3248) b!24349))

(assert (= (and b!24344 (not c!3248)) b!24337))

(assert (= (and b!24349 res!14864) b!24346))

(assert (= (or b!24349 b!24337) bm!2104))

(declare-fun b_lambda!1621 () Bool)

(assert (=> (not b_lambda!1621) (not b!24354)))

(assert (=> b!24354 t!3242))

(declare-fun b_and!1527 () Bool)

(assert (= b_and!1525 (and (=> t!3242 result!1099) b_and!1527)))

(declare-fun m!18801 () Bool)

(assert (=> bm!2105 m!18801))

(declare-fun m!18803 () Bool)

(assert (=> b!24350 m!18803))

(assert (=> b!24352 m!18763))

(assert (=> b!24352 m!18763))

(assert (=> b!24352 m!18765))

(assert (=> d!4417 m!16990))

(assert (=> b!24334 m!18763))

(assert (=> b!24334 m!18763))

(declare-fun m!18805 () Bool)

(assert (=> b!24334 m!18805))

(declare-fun m!18807 () Bool)

(assert (=> b!24335 m!18807))

(declare-fun m!18809 () Bool)

(assert (=> b!24335 m!18809))

(declare-fun m!18811 () Bool)

(assert (=> b!24335 m!18811))

(assert (=> b!24335 m!18809))

(declare-fun m!18813 () Bool)

(assert (=> b!24335 m!18813))

(declare-fun m!18815 () Bool)

(assert (=> b!24335 m!18815))

(declare-fun m!18817 () Bool)

(assert (=> b!24335 m!18817))

(declare-fun m!18819 () Bool)

(assert (=> b!24335 m!18819))

(declare-fun m!18821 () Bool)

(assert (=> b!24335 m!18821))

(declare-fun m!18823 () Bool)

(assert (=> b!24335 m!18823))

(declare-fun m!18825 () Bool)

(assert (=> b!24335 m!18825))

(assert (=> b!24335 m!18811))

(declare-fun m!18827 () Bool)

(assert (=> b!24335 m!18827))

(declare-fun m!18829 () Bool)

(assert (=> b!24335 m!18829))

(assert (=> b!24335 m!18817))

(declare-fun m!18831 () Bool)

(assert (=> b!24335 m!18831))

(assert (=> b!24335 m!18763))

(declare-fun m!18833 () Bool)

(assert (=> b!24335 m!18833))

(assert (=> b!24335 m!18801))

(declare-fun m!18835 () Bool)

(assert (=> b!24335 m!18835))

(assert (=> b!24335 m!18823))

(assert (=> b!24348 m!18763))

(assert (=> b!24348 m!18763))

(assert (=> b!24348 m!18765))

(declare-fun m!18837 () Bool)

(assert (=> b!24354 m!18837))

(assert (=> b!24354 m!18837))

(assert (=> b!24354 m!17026))

(declare-fun m!18839 () Bool)

(assert (=> b!24354 m!18839))

(assert (=> b!24354 m!17026))

(assert (=> b!24354 m!18763))

(declare-fun m!18841 () Bool)

(assert (=> b!24354 m!18841))

(assert (=> b!24354 m!18763))

(declare-fun m!18843 () Bool)

(assert (=> bm!2104 m!18843))

(declare-fun m!18845 () Bool)

(assert (=> bm!2103 m!18845))

(declare-fun m!18847 () Bool)

(assert (=> b!24341 m!18847))

(declare-fun m!18849 () Bool)

(assert (=> b!24346 m!18849))

(declare-fun m!18851 () Bool)

(assert (=> bm!2109 m!18851))

(assert (=> d!4069 d!4417))

(assert (=> d!4069 d!4071))

(declare-fun d!4419 () Bool)

(declare-fun e!15754 () Bool)

(assert (=> d!4419 e!15754))

(declare-fun res!14871 () Bool)

(assert (=> d!4419 (=> (not res!14871) (not e!15754))))

(assert (=> d!4419 (= res!14871 (and (bvsge (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b00000000000000000000000000000000) (bvslt (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) (size!704 (_keys!3164 (_2!487 lt!8158))))))))

(declare-fun lt!9212 () Unit!512)

(declare-fun choose!102 ((_ BitVec 64) array!1285 (_ BitVec 32) (_ BitVec 32)) Unit!512)

(assert (=> d!4419 (= lt!9212 (choose!102 #b1000000000000000000000000000000000000000000000000000000000000000 (_keys!3164 (_2!487 lt!8158)) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) (mask!4730 (_2!487 lt!8158))))))

(assert (=> d!4419 (validMask!0 (mask!4730 (_2!487 lt!8158)))))

(assert (=> d!4419 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 #b1000000000000000000000000000000000000000000000000000000000000000 (_keys!3164 (_2!487 lt!8158)) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) (mask!4730 (_2!487 lt!8158))) lt!9212)))

(declare-fun b!24357 () Bool)

(assert (=> b!24357 (= e!15754 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!1286 (store (arr!608 (_keys!3164 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000) (size!704 (_keys!3164 (_2!487 lt!8158)))) (mask!4730 (_2!487 lt!8158))))))

(assert (= (and d!4419 res!14871) b!24357))

(declare-fun m!18853 () Bool)

(assert (=> d!4419 m!18853))

(assert (=> d!4419 m!16990))

(assert (=> b!24357 m!17363))

(assert (=> b!24357 m!17345))

(assert (=> d!4069 d!4419))

(assert (=> d!4069 d!4391))

(declare-fun b!24358 () Bool)

(declare-fun e!15756 () (_ BitVec 32))

(declare-fun e!15755 () (_ BitVec 32))

(assert (=> b!24358 (= e!15756 e!15755)))

(declare-fun c!3254 () Bool)

(assert (=> b!24358 (= c!3254 (validKeyInArray!0 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000)))))

(declare-fun b!24359 () Bool)

(declare-fun call!2113 () (_ BitVec 32))

(assert (=> b!24359 (= e!15755 call!2113)))

(declare-fun bm!2110 () Bool)

(assert (=> bm!2110 (= call!2113 (arrayCountValidKeys!0 (_keys!3164 (_2!487 lt!8158)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!704 (_keys!3164 (_2!487 lt!8158)))))))

(declare-fun b!24361 () Bool)

(assert (=> b!24361 (= e!15755 (bvadd #b00000000000000000000000000000001 call!2113))))

(declare-fun b!24360 () Bool)

(assert (=> b!24360 (= e!15756 #b00000000000000000000000000000000)))

(declare-fun d!4421 () Bool)

(declare-fun lt!9213 () (_ BitVec 32))

(assert (=> d!4421 (and (bvsge lt!9213 #b00000000000000000000000000000000) (bvsle lt!9213 (bvsub (size!704 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000)))))

(assert (=> d!4421 (= lt!9213 e!15756)))

(declare-fun c!3255 () Bool)

(assert (=> d!4421 (= c!3255 (bvsge #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))))))

(assert (=> d!4421 (and (bvsle #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!704 (_keys!3164 (_2!487 lt!8158))) (size!704 (_keys!3164 (_2!487 lt!8158)))))))

(assert (=> d!4421 (= (arrayCountValidKeys!0 (_keys!3164 (_2!487 lt!8158)) #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))) lt!9213)))

(assert (= (and d!4421 c!3255) b!24360))

(assert (= (and d!4421 (not c!3255)) b!24358))

(assert (= (and b!24358 c!3254) b!24361))

(assert (= (and b!24358 (not c!3254)) b!24359))

(assert (= (or b!24361 b!24359) bm!2110))

(assert (=> b!24358 m!16986))

(assert (=> b!24358 m!16986))

(assert (=> b!24358 m!16988))

(declare-fun m!18855 () Bool)

(assert (=> bm!2110 m!18855))

(assert (=> d!4069 d!4421))

(declare-fun b!24362 () Bool)

(declare-fun e!15757 () Bool)

(declare-fun e!15758 () Bool)

(assert (=> b!24362 (= e!15757 e!15758)))

(declare-fun c!3256 () Bool)

(assert (=> b!24362 (= c!3256 (validKeyInArray!0 (select (arr!608 (array!1286 (store (arr!608 (_keys!3164 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000) (size!704 (_keys!3164 (_2!487 lt!8158))))) #b00000000000000000000000000000000)))))

(declare-fun d!4423 () Bool)

(declare-fun res!14872 () Bool)

(assert (=> d!4423 (=> res!14872 e!15757)))

(assert (=> d!4423 (= res!14872 (bvsge #b00000000000000000000000000000000 (size!704 (array!1286 (store (arr!608 (_keys!3164 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000) (size!704 (_keys!3164 (_2!487 lt!8158)))))))))

(assert (=> d!4423 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!1286 (store (arr!608 (_keys!3164 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000) (size!704 (_keys!3164 (_2!487 lt!8158)))) (mask!4730 (_2!487 lt!8158))) e!15757)))

(declare-fun b!24363 () Bool)

(declare-fun e!15759 () Bool)

(declare-fun call!2114 () Bool)

(assert (=> b!24363 (= e!15759 call!2114)))

(declare-fun bm!2111 () Bool)

(assert (=> bm!2111 (= call!2114 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!1286 (store (arr!608 (_keys!3164 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000) (size!704 (_keys!3164 (_2!487 lt!8158)))) (mask!4730 (_2!487 lt!8158))))))

(declare-fun b!24364 () Bool)

(assert (=> b!24364 (= e!15758 call!2114)))

(declare-fun b!24365 () Bool)

(assert (=> b!24365 (= e!15758 e!15759)))

(declare-fun lt!9214 () (_ BitVec 64))

(assert (=> b!24365 (= lt!9214 (select (arr!608 (array!1286 (store (arr!608 (_keys!3164 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000) (size!704 (_keys!3164 (_2!487 lt!8158))))) #b00000000000000000000000000000000))))

(declare-fun lt!9216 () Unit!512)

(assert (=> b!24365 (= lt!9216 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!1286 (store (arr!608 (_keys!3164 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000) (size!704 (_keys!3164 (_2!487 lt!8158)))) lt!9214 #b00000000000000000000000000000000))))

(assert (=> b!24365 (arrayContainsKey!0 (array!1286 (store (arr!608 (_keys!3164 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000) (size!704 (_keys!3164 (_2!487 lt!8158)))) lt!9214 #b00000000000000000000000000000000)))

(declare-fun lt!9215 () Unit!512)

(assert (=> b!24365 (= lt!9215 lt!9216)))

(declare-fun res!14873 () Bool)

(assert (=> b!24365 (= res!14873 (= (seekEntryOrOpen!0 (select (arr!608 (array!1286 (store (arr!608 (_keys!3164 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000) (size!704 (_keys!3164 (_2!487 lt!8158))))) #b00000000000000000000000000000000) (array!1286 (store (arr!608 (_keys!3164 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000) (size!704 (_keys!3164 (_2!487 lt!8158)))) (mask!4730 (_2!487 lt!8158))) (Found!54 #b00000000000000000000000000000000)))))

(assert (=> b!24365 (=> (not res!14873) (not e!15759))))

(assert (= (and d!4423 (not res!14872)) b!24362))

(assert (= (and b!24362 c!3256) b!24365))

(assert (= (and b!24362 (not c!3256)) b!24364))

(assert (= (and b!24365 res!14873) b!24363))

(assert (= (or b!24363 b!24364) bm!2111))

(assert (=> b!24362 m!18763))

(assert (=> b!24362 m!18763))

(assert (=> b!24362 m!18765))

(declare-fun m!18857 () Bool)

(assert (=> bm!2111 m!18857))

(assert (=> b!24365 m!18763))

(declare-fun m!18859 () Bool)

(assert (=> b!24365 m!18859))

(declare-fun m!18861 () Bool)

(assert (=> b!24365 m!18861))

(assert (=> b!24365 m!18763))

(declare-fun m!18863 () Bool)

(assert (=> b!24365 m!18863))

(assert (=> d!4069 d!4423))

(declare-fun d!4425 () Bool)

(declare-fun res!14874 () Bool)

(declare-fun e!15760 () Bool)

(assert (=> d!4425 (=> res!14874 e!15760)))

(assert (=> d!4425 (= res!14874 (= (select (arr!608 lt!8647) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!4425 (= (arrayContainsKey!0 lt!8647 #b1000000000000000000000000000000000000000000000000000000000000000 #b00000000000000000000000000000000) e!15760)))

(declare-fun b!24366 () Bool)

(declare-fun e!15761 () Bool)

(assert (=> b!24366 (= e!15760 e!15761)))

(declare-fun res!14875 () Bool)

(assert (=> b!24366 (=> (not res!14875) (not e!15761))))

(assert (=> b!24366 (= res!14875 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!704 lt!8647)))))

(declare-fun b!24367 () Bool)

(assert (=> b!24367 (= e!15761 (arrayContainsKey!0 lt!8647 #b1000000000000000000000000000000000000000000000000000000000000000 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!4425 (not res!14874)) b!24366))

(assert (= (and b!24366 res!14875) b!24367))

(declare-fun m!18865 () Bool)

(assert (=> d!4425 m!18865))

(declare-fun m!18867 () Bool)

(assert (=> b!24367 m!18867))

(assert (=> d!4069 d!4425))

(declare-fun d!4427 () Bool)

(declare-fun e!15764 () Bool)

(assert (=> d!4427 e!15764))

(declare-fun res!14878 () Bool)

(assert (=> d!4427 (=> (not res!14878) (not e!15764))))

(assert (=> d!4427 (= res!14878 (and (bvsge (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b00000000000000000000000000000000) (bvslt (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) (size!704 (_keys!3164 (_2!487 lt!8158))))))))

(declare-fun lt!9219 () Unit!512)

(declare-fun choose!41 (array!1285 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!569) Unit!512)

(assert (=> d!4427 (= lt!9219 (choose!41 (_keys!3164 (_2!487 lt!8158)) #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) lt!8652 lt!8657))))

(assert (=> d!4427 (bvslt (size!704 (_keys!3164 (_2!487 lt!8158))) #b01111111111111111111111111111111)))

(assert (=> d!4427 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3164 (_2!487 lt!8158)) #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) lt!8652 lt!8657) lt!9219)))

(declare-fun b!24370 () Bool)

(assert (=> b!24370 (= e!15764 (arrayNoDuplicates!0 (array!1286 (store (arr!608 (_keys!3164 (_2!487 lt!8158))) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b1000000000000000000000000000000000000000000000000000000000000000) (size!704 (_keys!3164 (_2!487 lt!8158)))) lt!8652 lt!8657))))

(assert (= (and d!4427 res!14878) b!24370))

(declare-fun m!18869 () Bool)

(assert (=> d!4427 m!18869))

(assert (=> b!24370 m!17363))

(assert (=> b!24370 m!17357))

(assert (=> d!4069 d!4427))

(assert (=> d!4069 d!4105))

(declare-fun b!24371 () Bool)

(declare-fun e!15766 () (_ BitVec 32))

(declare-fun e!15765 () (_ BitVec 32))

(assert (=> b!24371 (= e!15766 e!15765)))

(declare-fun c!3257 () Bool)

(assert (=> b!24371 (= c!3257 (validKeyInArray!0 (select (arr!608 lt!8661) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)))))))

(declare-fun b!24372 () Bool)

(declare-fun call!2115 () (_ BitVec 32))

(assert (=> b!24372 (= e!15765 call!2115)))

(declare-fun bm!2112 () Bool)

(assert (=> bm!2112 (= call!2115 (arrayCountValidKeys!0 lt!8661 (bvadd (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b00000000000000000000000000000001) (bvadd (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b00000000000000000000000000000001)))))

(declare-fun b!24374 () Bool)

(assert (=> b!24374 (= e!15765 (bvadd #b00000000000000000000000000000001 call!2115))))

(declare-fun b!24373 () Bool)

(assert (=> b!24373 (= e!15766 #b00000000000000000000000000000000)))

(declare-fun lt!9220 () (_ BitVec 32))

(declare-fun d!4429 () Bool)

(assert (=> d!4429 (and (bvsge lt!9220 #b00000000000000000000000000000000) (bvsle lt!9220 (bvsub (size!704 lt!8661) (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)))))))

(assert (=> d!4429 (= lt!9220 e!15766)))

(declare-fun c!3258 () Bool)

(assert (=> d!4429 (= c!3258 (bvsge (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) (bvadd (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b00000000000000000000000000000001)))))

(assert (=> d!4429 (and (bvsle (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) (bvadd (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b00000000000000000000000000000001)) (bvsge (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b00000000000000000000000000000001) (size!704 lt!8661)))))

(assert (=> d!4429 (= (arrayCountValidKeys!0 lt!8661 (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) (bvadd (ite c!2989 (index!2340 lt!8281) (index!2337 lt!8281)) #b00000000000000000000000000000001)) lt!9220)))

(assert (= (and d!4429 c!3258) b!24373))

(assert (= (and d!4429 (not c!3258)) b!24371))

(assert (= (and b!24371 c!3257) b!24374))

(assert (= (and b!24371 (not c!3257)) b!24372))

(assert (= (or b!24374 b!24372) bm!2112))

(assert (=> b!24371 m!18771))

(assert (=> b!24371 m!18771))

(assert (=> b!24371 m!18773))

(declare-fun m!18871 () Bool)

(assert (=> bm!2112 m!18871))

(assert (=> d!4069 d!4429))

(declare-fun d!4431 () Bool)

(assert (=> d!4431 (= (apply!29 lt!8506 #b1000000000000000000000000000000000000000000000000000000000000000) (get!391 (getValueByKey!61 (toList!299 lt!8506) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!1007 () Bool)

(assert (= bs!1007 d!4431))

(assert (=> bs!1007 m!18247))

(assert (=> bs!1007 m!18247))

(declare-fun m!18873 () Bool)

(assert (=> bs!1007 m!18873))

(assert (=> b!23596 d!4431))

(declare-fun d!4433 () Bool)

(declare-fun lt!9221 () tuple2!962)

(assert (=> d!4433 (or (bvsle (_2!490 lt!9221) #b00000000000000000000000000001000) (bvsge (bvmul #b00000000000000000000000000001000 (_size!150 (v!1604 (underlying!116 thiss!938)))) (_2!490 lt!9221)) (bvslt (bvadd (bvand (bvashr (_2!490 lt!9221) #b00000000000000000000000000000001) #b00111111111111111111111111111111) #b00000000000000000000000000000001) (_size!150 (v!1604 (underlying!116 thiss!938)))))))

(declare-fun e!15767 () tuple2!962)

(assert (=> d!4433 (= lt!9221 e!15767)))

(declare-fun c!3259 () Bool)

(declare-fun lt!9222 () (_ BitVec 32))

(assert (=> d!4433 (= c!3259 (and (bvsgt lt!9222 #b00000000000000000000000000001000) (bvslt (bvmul #b00000000000000000000000000001000 (_size!150 (v!1604 (underlying!116 thiss!938)))) lt!9222) (bvsge (bvadd (bvand (bvashr lt!9222 #b00000000000000000000000000000001) #b00111111111111111111111111111111) #b00000000000000000000000000000001) (_size!150 (v!1604 (underlying!116 thiss!938))))))))

(assert (=> d!4433 (= lt!9222 (bvlshr lt!8578 #b00000000000000000000000000000001))))

(assert (=> d!4433 (and (bvsgt lt!8578 #b00000000000000000000000000001000) (bvslt (bvmul #b00000000000000000000000000001000 (_size!150 (v!1604 (underlying!116 thiss!938)))) lt!8578) (bvsge (bvadd (bvand (bvashr lt!8578 #b00000000000000000000000000000001) #b00111111111111111111111111111111) #b00000000000000000000000000000001) (_size!150 (v!1604 (underlying!116 thiss!938)))))))

(assert (=> d!4433 (= (computeNewMaskWhile!14 (_size!150 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (mask!4730 (v!1604 (underlying!116 thiss!938))) lt!8578) lt!9221)))

(declare-fun b!24375 () Bool)

(assert (=> b!24375 (= e!15767 (computeNewMaskWhile!14 (_size!150 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (mask!4730 (v!1604 (underlying!116 thiss!938))) lt!9222))))

(declare-fun b!24376 () Bool)

(declare-fun Unit!569 () Unit!512)

(assert (=> b!24376 (= e!15767 (tuple2!963 Unit!569 lt!9222))))

(assert (= (and d!4433 c!3259) b!24375))

(assert (= (and d!4433 (not c!3259)) b!24376))

(declare-fun m!18875 () Bool)

(assert (=> b!24375 m!18875))

(assert (=> b!23674 d!4433))

(declare-fun d!4435 () Bool)

(declare-fun e!15768 () Bool)

(assert (=> d!4435 e!15768))

(declare-fun res!14879 () Bool)

(assert (=> d!4435 (=> res!14879 e!15768)))

(declare-fun lt!9223 () Bool)

(assert (=> d!4435 (= res!14879 (not lt!9223))))

(declare-fun lt!9224 () Bool)

(assert (=> d!4435 (= lt!9223 lt!9224)))

(declare-fun lt!9225 () Unit!512)

(declare-fun e!15769 () Unit!512)

(assert (=> d!4435 (= lt!9225 e!15769)))

(declare-fun c!3260 () Bool)

(assert (=> d!4435 (= c!3260 lt!9224)))

(assert (=> d!4435 (= lt!9224 (containsKey!25 (toList!299 (map!407 (_2!487 lt!8650))) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!4435 (= (contains!230 (map!407 (_2!487 lt!8650)) #b1000000000000000000000000000000000000000000000000000000000000000) lt!9223)))

(declare-fun b!24377 () Bool)

(declare-fun lt!9226 () Unit!512)

(assert (=> b!24377 (= e!15769 lt!9226)))

(assert (=> b!24377 (= lt!9226 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!299 (map!407 (_2!487 lt!8650))) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!24377 (isDefined!23 (getValueByKey!61 (toList!299 (map!407 (_2!487 lt!8650))) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24378 () Bool)

(declare-fun Unit!570 () Unit!512)

(assert (=> b!24378 (= e!15769 Unit!570)))

(declare-fun b!24379 () Bool)

(assert (=> b!24379 (= e!15768 (isDefined!23 (getValueByKey!61 (toList!299 (map!407 (_2!487 lt!8650))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!4435 c!3260) b!24377))

(assert (= (and d!4435 (not c!3260)) b!24378))

(assert (= (and d!4435 (not res!14879)) b!24379))

(declare-fun m!18877 () Bool)

(assert (=> d!4435 m!18877))

(declare-fun m!18879 () Bool)

(assert (=> b!24377 m!18879))

(declare-fun m!18881 () Bool)

(assert (=> b!24377 m!18881))

(assert (=> b!24377 m!18881))

(declare-fun m!18883 () Bool)

(assert (=> b!24377 m!18883))

(assert (=> b!24379 m!18881))

(assert (=> b!24379 m!18881))

(assert (=> b!24379 m!18883))

(assert (=> b!23723 d!4435))

(declare-fun d!4437 () Bool)

(assert (=> d!4437 (= (map!407 (_2!487 lt!8650)) (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8650)) (_values!1729 (_2!487 lt!8650)) (mask!4730 (_2!487 lt!8650)) (extraKeys!1641 (_2!487 lt!8650)) (zeroValue!1666 (_2!487 lt!8650)) (minValue!1666 (_2!487 lt!8650)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8650))))))

(declare-fun bs!1008 () Bool)

(assert (= bs!1008 d!4437))

(declare-fun m!18885 () Bool)

(assert (=> bs!1008 m!18885))

(assert (=> b!23723 d!4437))

(declare-fun d!4439 () Bool)

(declare-fun e!15770 () Bool)

(assert (=> d!4439 e!15770))

(declare-fun res!14880 () Bool)

(assert (=> d!4439 (=> res!14880 e!15770)))

(declare-fun lt!9227 () Bool)

(assert (=> d!4439 (= res!14880 (not lt!9227))))

(declare-fun lt!9228 () Bool)

(assert (=> d!4439 (= lt!9227 lt!9228)))

(declare-fun lt!9229 () Unit!512)

(declare-fun e!15771 () Unit!512)

(assert (=> d!4439 (= lt!9229 e!15771)))

(declare-fun c!3261 () Bool)

(assert (=> d!4439 (= c!3261 lt!9228)))

(assert (=> d!4439 (= lt!9228 (containsKey!25 (toList!299 lt!8546) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!4439 (= (contains!230 lt!8546 #b1000000000000000000000000000000000000000000000000000000000000000) lt!9227)))

(declare-fun b!24380 () Bool)

(declare-fun lt!9230 () Unit!512)

(assert (=> b!24380 (= e!15771 lt!9230)))

(assert (=> b!24380 (= lt!9230 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!299 lt!8546) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!24380 (isDefined!23 (getValueByKey!61 (toList!299 lt!8546) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24381 () Bool)

(declare-fun Unit!571 () Unit!512)

(assert (=> b!24381 (= e!15771 Unit!571)))

(declare-fun b!24382 () Bool)

(assert (=> b!24382 (= e!15770 (isDefined!23 (getValueByKey!61 (toList!299 lt!8546) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!4439 c!3261) b!24380))

(assert (= (and d!4439 (not c!3261)) b!24381))

(assert (= (and d!4439 (not res!14880)) b!24382))

(declare-fun m!18887 () Bool)

(assert (=> d!4439 m!18887))

(declare-fun m!18889 () Bool)

(assert (=> b!24380 m!18889))

(declare-fun m!18891 () Bool)

(assert (=> b!24380 m!18891))

(assert (=> b!24380 m!18891))

(declare-fun m!18893 () Bool)

(assert (=> b!24380 m!18893))

(assert (=> b!24382 m!18891))

(assert (=> b!24382 m!18891))

(assert (=> b!24382 m!18893))

(assert (=> bm!2000 d!4439))

(declare-fun d!4441 () Bool)

(declare-fun e!15774 () Bool)

(assert (=> d!4441 e!15774))

(declare-fun c!3264 () Bool)

(assert (=> d!4441 (= c!3264 (and (not (= (_1!489 lt!8355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (_1!489 lt!8355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!4441 true))

(declare-fun _$15!77 () Unit!512)

(assert (=> d!4441 (= (choose!204 lt!8350 (array!1284 ((as const (Array (_ BitVec 32) ValueCell!312)) EmptyCell!312) (bvadd (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001)) (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) lt!8337 (dynLambda!144 (defaultEntry!1743 (v!1604 (underlying!116 thiss!938))) #b0000000000000000000000000000000000000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (v!1604 (underlying!116 thiss!938))) #b0000000000000000000000000000000000000000000000000000000000000000) (_1!489 lt!8355) (defaultEntry!1743 (v!1604 (underlying!116 thiss!938)))) _$15!77)))

(declare-fun b!24387 () Bool)

(assert (=> b!24387 (= e!15774 (arrayContainsKey!0 lt!8350 (_1!489 lt!8355) #b00000000000000000000000000000000))))

(declare-fun b!24388 () Bool)

(assert (=> b!24388 (= e!15774 (ite (= (_1!489 lt!8355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand lt!8337 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!8337 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!4441 c!3264) b!24387))

(assert (= (and d!4441 (not c!3264)) b!24388))

(assert (=> b!24387 m!16912))

(assert (=> d!4029 d!4441))

(assert (=> d!4029 d!4007))

(declare-fun d!4443 () Bool)

(declare-fun e!15775 () Bool)

(assert (=> d!4443 e!15775))

(declare-fun res!14881 () Bool)

(assert (=> d!4443 (=> res!14881 e!15775)))

(declare-fun lt!9231 () Bool)

(assert (=> d!4443 (= res!14881 (not lt!9231))))

(declare-fun lt!9232 () Bool)

(assert (=> d!4443 (= lt!9231 lt!9232)))

(declare-fun lt!9233 () Unit!512)

(declare-fun e!15776 () Unit!512)

(assert (=> d!4443 (= lt!9233 e!15776)))

(declare-fun c!3265 () Bool)

(assert (=> d!4443 (= c!3265 lt!9232)))

(assert (=> d!4443 (= lt!9232 (containsKey!25 (toList!299 (map!407 (_2!487 lt!8769))) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!4443 (= (contains!230 (map!407 (_2!487 lt!8769)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) lt!9231)))

(declare-fun b!24389 () Bool)

(declare-fun lt!9234 () Unit!512)

(assert (=> b!24389 (= e!15776 lt!9234)))

(assert (=> b!24389 (= lt!9234 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!299 (map!407 (_2!487 lt!8769))) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!24389 (isDefined!23 (getValueByKey!61 (toList!299 (map!407 (_2!487 lt!8769))) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!24390 () Bool)

(declare-fun Unit!572 () Unit!512)

(assert (=> b!24390 (= e!15776 Unit!572)))

(declare-fun b!24391 () Bool)

(assert (=> b!24391 (= e!15775 (isDefined!23 (getValueByKey!61 (toList!299 (map!407 (_2!487 lt!8769))) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!4443 c!3265) b!24389))

(assert (= (and d!4443 (not c!3265)) b!24390))

(assert (= (and d!4443 (not res!14881)) b!24391))

(declare-fun m!18895 () Bool)

(assert (=> d!4443 m!18895))

(declare-fun m!18897 () Bool)

(assert (=> b!24389 m!18897))

(declare-fun m!18899 () Bool)

(assert (=> b!24389 m!18899))

(assert (=> b!24389 m!18899))

(declare-fun m!18901 () Bool)

(assert (=> b!24389 m!18901))

(assert (=> b!24391 m!18899))

(assert (=> b!24391 m!18899))

(assert (=> b!24391 m!18901))

(assert (=> b!23821 d!4443))

(declare-fun d!4445 () Bool)

(assert (=> d!4445 (= (map!407 (_2!487 lt!8769)) (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8769)) (_values!1729 (_2!487 lt!8769)) (mask!4730 (_2!487 lt!8769)) (extraKeys!1641 (_2!487 lt!8769)) (zeroValue!1666 (_2!487 lt!8769)) (minValue!1666 (_2!487 lt!8769)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8769))))))

(declare-fun bs!1009 () Bool)

(assert (= bs!1009 d!4445))

(declare-fun m!18903 () Bool)

(assert (=> bs!1009 m!18903))

(assert (=> b!23821 d!4445))

(declare-fun lt!9237 () Bool)

(declare-fun d!4447 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!15 (List!568) (InoxSet tuple2!960))

(assert (=> d!4447 (= lt!9237 (select (content!15 (toList!299 lt!8750)) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(declare-fun e!15781 () Bool)

(assert (=> d!4447 (= lt!9237 e!15781)))

(declare-fun res!14887 () Bool)

(assert (=> d!4447 (=> (not res!14887) (not e!15781))))

(assert (=> d!4447 (= res!14887 ((_ is Cons!564) (toList!299 lt!8750)))))

(assert (=> d!4447 (= (contains!232 (toList!299 lt!8750) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) lt!9237)))

(declare-fun b!24396 () Bool)

(declare-fun e!15782 () Bool)

(assert (=> b!24396 (= e!15781 e!15782)))

(declare-fun res!14886 () Bool)

(assert (=> b!24396 (=> res!14886 e!15782)))

(assert (=> b!24396 (= res!14886 (= (h!1130 (toList!299 lt!8750)) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(declare-fun b!24397 () Bool)

(assert (=> b!24397 (= e!15782 (contains!232 (t!3239 (toList!299 lt!8750)) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(assert (= (and d!4447 res!14887) b!24396))

(assert (= (and b!24396 (not res!14886)) b!24397))

(declare-fun m!18905 () Bool)

(assert (=> d!4447 m!18905))

(declare-fun m!18907 () Bool)

(assert (=> d!4447 m!18907))

(declare-fun m!18909 () Bool)

(assert (=> b!24397 m!18909))

(assert (=> b!23813 d!4447))

(declare-fun b!24398 () Bool)

(declare-fun e!15783 () Bool)

(declare-fun e!15784 () Bool)

(assert (=> b!24398 (= e!15783 e!15784)))

(declare-fun c!3266 () Bool)

(assert (=> b!24398 (= c!3266 (validKeyInArray!0 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000)))))

(declare-fun d!4449 () Bool)

(declare-fun res!14888 () Bool)

(assert (=> d!4449 (=> res!14888 e!15783)))

(assert (=> d!4449 (= res!14888 (bvsge #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))))))

(assert (=> d!4449 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3164 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158))) e!15783)))

(declare-fun b!24399 () Bool)

(declare-fun e!15785 () Bool)

(declare-fun call!2116 () Bool)

(assert (=> b!24399 (= e!15785 call!2116)))

(declare-fun bm!2113 () Bool)

(assert (=> bm!2113 (= call!2116 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3164 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158))))))

(declare-fun b!24400 () Bool)

(assert (=> b!24400 (= e!15784 call!2116)))

(declare-fun b!24401 () Bool)

(assert (=> b!24401 (= e!15784 e!15785)))

(declare-fun lt!9238 () (_ BitVec 64))

(assert (=> b!24401 (= lt!9238 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000))))

(declare-fun lt!9240 () Unit!512)

(assert (=> b!24401 (= lt!9240 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3164 (_2!487 lt!8158)) lt!9238 #b00000000000000000000000000000000))))

(assert (=> b!24401 (arrayContainsKey!0 (_keys!3164 (_2!487 lt!8158)) lt!9238 #b00000000000000000000000000000000)))

(declare-fun lt!9239 () Unit!512)

(assert (=> b!24401 (= lt!9239 lt!9240)))

(declare-fun res!14889 () Bool)

(assert (=> b!24401 (= res!14889 (= (seekEntryOrOpen!0 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000) (_keys!3164 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158))) (Found!54 #b00000000000000000000000000000000)))))

(assert (=> b!24401 (=> (not res!14889) (not e!15785))))

(assert (= (and d!4449 (not res!14888)) b!24398))

(assert (= (and b!24398 c!3266) b!24401))

(assert (= (and b!24398 (not c!3266)) b!24400))

(assert (= (and b!24401 res!14889) b!24399))

(assert (= (or b!24399 b!24400) bm!2113))

(assert (=> b!24398 m!16986))

(assert (=> b!24398 m!16986))

(assert (=> b!24398 m!16988))

(declare-fun m!18911 () Bool)

(assert (=> bm!2113 m!18911))

(assert (=> b!24401 m!16986))

(declare-fun m!18913 () Bool)

(assert (=> b!24401 m!18913))

(declare-fun m!18915 () Bool)

(assert (=> b!24401 m!18915))

(assert (=> b!24401 m!16986))

(declare-fun m!18917 () Bool)

(assert (=> b!24401 m!18917))

(assert (=> b!23617 d!4449))

(assert (=> d!4057 d!4239))

(declare-fun bm!2114 () Bool)

(declare-fun call!2118 () Bool)

(declare-fun lt!9258 () ListLongMap!567)

(assert (=> bm!2114 (= call!2118 (contains!230 lt!9258 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!2115 () Bool)

(declare-fun call!2120 () Bool)

(assert (=> bm!2115 (= call!2120 (contains!230 lt!9258 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24402 () Bool)

(declare-fun e!15793 () Bool)

(declare-fun e!15794 () Bool)

(assert (=> b!24402 (= e!15793 e!15794)))

(declare-fun res!14898 () Bool)

(assert (=> b!24402 (=> (not res!14898) (not e!15794))))

(assert (=> b!24402 (= res!14898 (contains!230 lt!9258 (select (arr!608 lt!8783) #b00000000000000000000000000000000)))))

(assert (=> b!24402 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 lt!8783)))))

(declare-fun b!24403 () Bool)

(declare-fun e!15787 () Unit!512)

(declare-fun lt!9243 () Unit!512)

(assert (=> b!24403 (= e!15787 lt!9243)))

(declare-fun lt!9255 () ListLongMap!567)

(assert (=> b!24403 (= lt!9255 (getCurrentListMapNoExtraKeys!15 lt!8783 lt!8788 (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))))

(declare-fun lt!9250 () (_ BitVec 64))

(assert (=> b!24403 (= lt!9250 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9259 () (_ BitVec 64))

(assert (=> b!24403 (= lt!9259 (select (arr!608 lt!8783) #b00000000000000000000000000000000))))

(declare-fun lt!9251 () Unit!512)

(assert (=> b!24403 (= lt!9251 (addStillContains!14 lt!9255 lt!9250 (zeroValue!1666 lt!8161) lt!9259))))

(assert (=> b!24403 (contains!230 (+!45 lt!9255 (tuple2!961 lt!9250 (zeroValue!1666 lt!8161))) lt!9259)))

(declare-fun lt!9262 () Unit!512)

(assert (=> b!24403 (= lt!9262 lt!9251)))

(declare-fun lt!9246 () ListLongMap!567)

(assert (=> b!24403 (= lt!9246 (getCurrentListMapNoExtraKeys!15 lt!8783 lt!8788 (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))))

(declare-fun lt!9261 () (_ BitVec 64))

(assert (=> b!24403 (= lt!9261 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9260 () (_ BitVec 64))

(assert (=> b!24403 (= lt!9260 (select (arr!608 lt!8783) #b00000000000000000000000000000000))))

(declare-fun lt!9245 () Unit!512)

(assert (=> b!24403 (= lt!9245 (addApplyDifferent!14 lt!9246 lt!9261 (minValue!1666 lt!8161) lt!9260))))

(assert (=> b!24403 (= (apply!29 (+!45 lt!9246 (tuple2!961 lt!9261 (minValue!1666 lt!8161))) lt!9260) (apply!29 lt!9246 lt!9260))))

(declare-fun lt!9244 () Unit!512)

(assert (=> b!24403 (= lt!9244 lt!9245)))

(declare-fun lt!9253 () ListLongMap!567)

(assert (=> b!24403 (= lt!9253 (getCurrentListMapNoExtraKeys!15 lt!8783 lt!8788 (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))))

(declare-fun lt!9256 () (_ BitVec 64))

(assert (=> b!24403 (= lt!9256 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9242 () (_ BitVec 64))

(assert (=> b!24403 (= lt!9242 (select (arr!608 lt!8783) #b00000000000000000000000000000000))))

(declare-fun lt!9247 () Unit!512)

(assert (=> b!24403 (= lt!9247 (addApplyDifferent!14 lt!9253 lt!9256 (zeroValue!1666 lt!8161) lt!9242))))

(assert (=> b!24403 (= (apply!29 (+!45 lt!9253 (tuple2!961 lt!9256 (zeroValue!1666 lt!8161))) lt!9242) (apply!29 lt!9253 lt!9242))))

(declare-fun lt!9252 () Unit!512)

(assert (=> b!24403 (= lt!9252 lt!9247)))

(declare-fun lt!9254 () ListLongMap!567)

(assert (=> b!24403 (= lt!9254 (getCurrentListMapNoExtraKeys!15 lt!8783 lt!8788 (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))))

(declare-fun lt!9249 () (_ BitVec 64))

(assert (=> b!24403 (= lt!9249 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9241 () (_ BitVec 64))

(assert (=> b!24403 (= lt!9241 (select (arr!608 lt!8783) #b00000000000000000000000000000000))))

(assert (=> b!24403 (= lt!9243 (addApplyDifferent!14 lt!9254 lt!9249 (minValue!1666 lt!8161) lt!9241))))

(assert (=> b!24403 (= (apply!29 (+!45 lt!9254 (tuple2!961 lt!9249 (minValue!1666 lt!8161))) lt!9241) (apply!29 lt!9254 lt!9241))))

(declare-fun bm!2116 () Bool)

(declare-fun call!2121 () ListLongMap!567)

(assert (=> bm!2116 (= call!2121 (getCurrentListMapNoExtraKeys!15 lt!8783 lt!8788 (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))))

(declare-fun b!24404 () Bool)

(declare-fun res!14893 () Bool)

(declare-fun e!15790 () Bool)

(assert (=> b!24404 (=> (not res!14893) (not e!15790))))

(declare-fun e!15786 () Bool)

(assert (=> b!24404 (= res!14893 e!15786)))

(declare-fun c!3269 () Bool)

(assert (=> b!24404 (= c!3269 (not (= (bvand (extraKeys!1641 lt!8161) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!24405 () Bool)

(declare-fun e!15798 () Bool)

(assert (=> b!24405 (= e!15798 (not call!2120))))

(declare-fun b!24406 () Bool)

(assert (=> b!24406 (= e!15786 (not call!2118))))

(declare-fun bm!2117 () Bool)

(declare-fun call!2122 () ListLongMap!567)

(assert (=> bm!2117 (= call!2122 call!2121)))

(declare-fun b!24407 () Bool)

(declare-fun e!15796 () ListLongMap!567)

(declare-fun call!2123 () ListLongMap!567)

(assert (=> b!24407 (= e!15796 call!2123)))

(declare-fun b!24408 () Bool)

(declare-fun res!14896 () Bool)

(assert (=> b!24408 (=> (not res!14896) (not e!15790))))

(assert (=> b!24408 (= res!14896 e!15793)))

(declare-fun res!14891 () Bool)

(assert (=> b!24408 (=> res!14891 e!15793)))

(declare-fun e!15789 () Bool)

(assert (=> b!24408 (= res!14891 (not e!15789))))

(declare-fun res!14895 () Bool)

(assert (=> b!24408 (=> (not res!14895) (not e!15789))))

(assert (=> b!24408 (= res!14895 (bvslt #b00000000000000000000000000000000 (size!704 lt!8783)))))

(declare-fun b!24410 () Bool)

(declare-fun e!15791 () ListLongMap!567)

(assert (=> b!24410 (= e!15791 call!2123)))

(declare-fun b!24411 () Bool)

(declare-fun e!15792 () Bool)

(assert (=> b!24411 (= e!15786 e!15792)))

(declare-fun res!14897 () Bool)

(assert (=> b!24411 (= res!14897 call!2118)))

(assert (=> b!24411 (=> (not res!14897) (not e!15792))))

(declare-fun b!24412 () Bool)

(assert (=> b!24412 (= e!15790 e!15798)))

(declare-fun c!3267 () Bool)

(assert (=> b!24412 (= c!3267 (not (= (bvand (extraKeys!1641 lt!8161) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!2118 () Bool)

(declare-fun call!2117 () ListLongMap!567)

(assert (=> bm!2118 (= call!2117 call!2122)))

(declare-fun b!24413 () Bool)

(assert (=> b!24413 (= e!15796 call!2117)))

(declare-fun b!24414 () Bool)

(declare-fun e!15797 () Bool)

(assert (=> b!24414 (= e!15797 (= (apply!29 lt!9258 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!1666 lt!8161)))))

(declare-fun b!24415 () Bool)

(declare-fun c!3270 () Bool)

(assert (=> b!24415 (= c!3270 (and (not (= (bvand (extraKeys!1641 lt!8161) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 lt!8161) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!24415 (= e!15791 e!15796)))

(declare-fun b!24416 () Bool)

(assert (=> b!24416 (= e!15789 (validKeyInArray!0 (select (arr!608 lt!8783) #b00000000000000000000000000000000)))))

(declare-fun bm!2119 () Bool)

(declare-fun call!2119 () ListLongMap!567)

(assert (=> bm!2119 (= call!2123 call!2119)))

(declare-fun b!24417 () Bool)

(assert (=> b!24417 (= e!15798 e!15797)))

(declare-fun res!14894 () Bool)

(assert (=> b!24417 (= res!14894 call!2120)))

(assert (=> b!24417 (=> (not res!14894) (not e!15797))))

(declare-fun c!3272 () Bool)

(declare-fun bm!2120 () Bool)

(declare-fun c!3268 () Bool)

(assert (=> bm!2120 (= call!2119 (+!45 (ite c!3268 call!2121 (ite c!3272 call!2122 call!2117)) (ite (or c!3268 c!3272) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 lt!8161)) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8161)))))))

(declare-fun b!24418 () Bool)

(assert (=> b!24418 (= e!15792 (= (apply!29 lt!9258 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!1666 lt!8161)))))

(declare-fun b!24419 () Bool)

(declare-fun e!15788 () ListLongMap!567)

(assert (=> b!24419 (= e!15788 e!15791)))

(assert (=> b!24419 (= c!3272 (and (not (= (bvand (extraKeys!1641 lt!8161) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 lt!8161) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!24420 () Bool)

(declare-fun e!15795 () Bool)

(assert (=> b!24420 (= e!15795 (validKeyInArray!0 (select (arr!608 lt!8783) #b00000000000000000000000000000000)))))

(declare-fun b!24409 () Bool)

(assert (=> b!24409 (= e!15788 (+!45 call!2119 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8161))))))

(declare-fun d!4451 () Bool)

(assert (=> d!4451 e!15790))

(declare-fun res!14890 () Bool)

(assert (=> d!4451 (=> (not res!14890) (not e!15790))))

(assert (=> d!4451 (= res!14890 (or (bvsge #b00000000000000000000000000000000 (size!704 lt!8783)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 lt!8783)))))))

(declare-fun lt!9248 () ListLongMap!567)

(assert (=> d!4451 (= lt!9258 lt!9248)))

(declare-fun lt!9257 () Unit!512)

(assert (=> d!4451 (= lt!9257 e!15787)))

(declare-fun c!3271 () Bool)

(assert (=> d!4451 (= c!3271 e!15795)))

(declare-fun res!14892 () Bool)

(assert (=> d!4451 (=> (not res!14892) (not e!15795))))

(assert (=> d!4451 (= res!14892 (bvslt #b00000000000000000000000000000000 (size!704 lt!8783)))))

(assert (=> d!4451 (= lt!9248 e!15788)))

(assert (=> d!4451 (= c!3268 (and (not (= (bvand (extraKeys!1641 lt!8161) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!1641 lt!8161) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!4451 (validMask!0 (mask!4730 lt!8161))))

(assert (=> d!4451 (= (getCurrentListMap!130 lt!8783 lt!8788 (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)) lt!9258)))

(declare-fun b!24421 () Bool)

(declare-fun Unit!573 () Unit!512)

(assert (=> b!24421 (= e!15787 Unit!573)))

(declare-fun b!24422 () Bool)

(assert (=> b!24422 (= e!15794 (= (apply!29 lt!9258 (select (arr!608 lt!8783) #b00000000000000000000000000000000)) (get!390 (select (arr!607 lt!8788) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 lt!8161) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!24422 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!703 lt!8788)))))

(assert (=> b!24422 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 lt!8783)))))

(assert (= (and d!4451 c!3268) b!24409))

(assert (= (and d!4451 (not c!3268)) b!24419))

(assert (= (and b!24419 c!3272) b!24410))

(assert (= (and b!24419 (not c!3272)) b!24415))

(assert (= (and b!24415 c!3270) b!24407))

(assert (= (and b!24415 (not c!3270)) b!24413))

(assert (= (or b!24407 b!24413) bm!2118))

(assert (= (or b!24410 bm!2118) bm!2117))

(assert (= (or b!24410 b!24407) bm!2119))

(assert (= (or b!24409 bm!2117) bm!2116))

(assert (= (or b!24409 bm!2119) bm!2120))

(assert (= (and d!4451 res!14892) b!24420))

(assert (= (and d!4451 c!3271) b!24403))

(assert (= (and d!4451 (not c!3271)) b!24421))

(assert (= (and d!4451 res!14890) b!24408))

(assert (= (and b!24408 res!14895) b!24416))

(assert (= (and b!24408 (not res!14891)) b!24402))

(assert (= (and b!24402 res!14898) b!24422))

(assert (= (and b!24408 res!14896) b!24404))

(assert (= (and b!24404 c!3269) b!24411))

(assert (= (and b!24404 (not c!3269)) b!24406))

(assert (= (and b!24411 res!14897) b!24418))

(assert (= (or b!24411 b!24406) bm!2114))

(assert (= (and b!24404 res!14893) b!24412))

(assert (= (and b!24412 c!3267) b!24417))

(assert (= (and b!24412 (not c!3267)) b!24405))

(assert (= (and b!24417 res!14894) b!24414))

(assert (= (or b!24417 b!24405) bm!2115))

(declare-fun b_lambda!1623 () Bool)

(assert (=> (not b_lambda!1623) (not b!24422)))

(assert (=> b!24422 t!3244))

(declare-fun b_and!1529 () Bool)

(assert (= b_and!1527 (and (=> t!3244 result!1101) b_and!1529)))

(declare-fun m!18919 () Bool)

(assert (=> bm!2116 m!18919))

(declare-fun m!18921 () Bool)

(assert (=> b!24418 m!18921))

(declare-fun m!18923 () Bool)

(assert (=> b!24420 m!18923))

(assert (=> b!24420 m!18923))

(declare-fun m!18925 () Bool)

(assert (=> b!24420 m!18925))

(assert (=> d!4451 m!17182))

(assert (=> b!24402 m!18923))

(assert (=> b!24402 m!18923))

(declare-fun m!18927 () Bool)

(assert (=> b!24402 m!18927))

(declare-fun m!18929 () Bool)

(assert (=> b!24403 m!18929))

(declare-fun m!18931 () Bool)

(assert (=> b!24403 m!18931))

(declare-fun m!18933 () Bool)

(assert (=> b!24403 m!18933))

(assert (=> b!24403 m!18931))

(declare-fun m!18935 () Bool)

(assert (=> b!24403 m!18935))

(declare-fun m!18937 () Bool)

(assert (=> b!24403 m!18937))

(declare-fun m!18939 () Bool)

(assert (=> b!24403 m!18939))

(declare-fun m!18941 () Bool)

(assert (=> b!24403 m!18941))

(declare-fun m!18943 () Bool)

(assert (=> b!24403 m!18943))

(declare-fun m!18945 () Bool)

(assert (=> b!24403 m!18945))

(declare-fun m!18947 () Bool)

(assert (=> b!24403 m!18947))

(assert (=> b!24403 m!18933))

(declare-fun m!18949 () Bool)

(assert (=> b!24403 m!18949))

(declare-fun m!18951 () Bool)

(assert (=> b!24403 m!18951))

(assert (=> b!24403 m!18939))

(declare-fun m!18953 () Bool)

(assert (=> b!24403 m!18953))

(assert (=> b!24403 m!18923))

(declare-fun m!18955 () Bool)

(assert (=> b!24403 m!18955))

(assert (=> b!24403 m!18919))

(declare-fun m!18957 () Bool)

(assert (=> b!24403 m!18957))

(assert (=> b!24403 m!18945))

(assert (=> b!24416 m!18923))

(assert (=> b!24416 m!18923))

(assert (=> b!24416 m!18925))

(declare-fun m!18959 () Bool)

(assert (=> b!24422 m!18959))

(assert (=> b!24422 m!18959))

(assert (=> b!24422 m!17238))

(declare-fun m!18961 () Bool)

(assert (=> b!24422 m!18961))

(assert (=> b!24422 m!17238))

(assert (=> b!24422 m!18923))

(declare-fun m!18963 () Bool)

(assert (=> b!24422 m!18963))

(assert (=> b!24422 m!18923))

(declare-fun m!18965 () Bool)

(assert (=> bm!2115 m!18965))

(declare-fun m!18967 () Bool)

(assert (=> bm!2114 m!18967))

(declare-fun m!18969 () Bool)

(assert (=> b!24409 m!18969))

(declare-fun m!18971 () Bool)

(assert (=> b!24414 m!18971))

(declare-fun m!18973 () Bool)

(assert (=> bm!2120 m!18973))

(assert (=> d!4119 d!4451))

(assert (=> d!4119 d!4081))

(declare-fun b!24423 () Bool)

(declare-fun e!15799 () Bool)

(declare-fun e!15800 () Bool)

(assert (=> b!24423 (= e!15799 e!15800)))

(declare-fun c!3273 () Bool)

(assert (=> b!24423 (= c!3273 (validKeyInArray!0 (select (arr!608 (array!1286 (store (arr!608 (_keys!3164 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (size!704 (_keys!3164 lt!8161)))) #b00000000000000000000000000000000)))))

(declare-fun d!4453 () Bool)

(declare-fun res!14899 () Bool)

(assert (=> d!4453 (=> res!14899 e!15799)))

(assert (=> d!4453 (= res!14899 (bvsge #b00000000000000000000000000000000 (size!704 (array!1286 (store (arr!608 (_keys!3164 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (size!704 (_keys!3164 lt!8161))))))))

(assert (=> d!4453 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!1286 (store (arr!608 (_keys!3164 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (size!704 (_keys!3164 lt!8161))) (mask!4730 lt!8161)) e!15799)))

(declare-fun b!24424 () Bool)

(declare-fun e!15801 () Bool)

(declare-fun call!2124 () Bool)

(assert (=> b!24424 (= e!15801 call!2124)))

(declare-fun bm!2121 () Bool)

(assert (=> bm!2121 (= call!2124 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!1286 (store (arr!608 (_keys!3164 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (size!704 (_keys!3164 lt!8161))) (mask!4730 lt!8161)))))

(declare-fun b!24425 () Bool)

(assert (=> b!24425 (= e!15800 call!2124)))

(declare-fun b!24426 () Bool)

(assert (=> b!24426 (= e!15800 e!15801)))

(declare-fun lt!9263 () (_ BitVec 64))

(assert (=> b!24426 (= lt!9263 (select (arr!608 (array!1286 (store (arr!608 (_keys!3164 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (size!704 (_keys!3164 lt!8161)))) #b00000000000000000000000000000000))))

(declare-fun lt!9265 () Unit!512)

(assert (=> b!24426 (= lt!9265 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!1286 (store (arr!608 (_keys!3164 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (size!704 (_keys!3164 lt!8161))) lt!9263 #b00000000000000000000000000000000))))

(assert (=> b!24426 (arrayContainsKey!0 (array!1286 (store (arr!608 (_keys!3164 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (size!704 (_keys!3164 lt!8161))) lt!9263 #b00000000000000000000000000000000)))

(declare-fun lt!9264 () Unit!512)

(assert (=> b!24426 (= lt!9264 lt!9265)))

(declare-fun res!14900 () Bool)

(assert (=> b!24426 (= res!14900 (= (seekEntryOrOpen!0 (select (arr!608 (array!1286 (store (arr!608 (_keys!3164 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (size!704 (_keys!3164 lt!8161)))) #b00000000000000000000000000000000) (array!1286 (store (arr!608 (_keys!3164 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (size!704 (_keys!3164 lt!8161))) (mask!4730 lt!8161)) (Found!54 #b00000000000000000000000000000000)))))

(assert (=> b!24426 (=> (not res!14900) (not e!15801))))

(assert (= (and d!4453 (not res!14899)) b!24423))

(assert (= (and b!24423 c!3273) b!24426))

(assert (= (and b!24423 (not c!3273)) b!24425))

(assert (= (and b!24426 res!14900) b!24424))

(assert (= (or b!24424 b!24425) bm!2121))

(declare-fun m!18975 () Bool)

(assert (=> b!24423 m!18975))

(assert (=> b!24423 m!18975))

(declare-fun m!18977 () Bool)

(assert (=> b!24423 m!18977))

(declare-fun m!18979 () Bool)

(assert (=> bm!2121 m!18979))

(assert (=> b!24426 m!18975))

(declare-fun m!18981 () Bool)

(assert (=> b!24426 m!18981))

(declare-fun m!18983 () Bool)

(assert (=> b!24426 m!18983))

(assert (=> b!24426 m!18975))

(declare-fun m!18985 () Bool)

(assert (=> b!24426 m!18985))

(assert (=> d!4119 d!4453))

(declare-fun d!4455 () Bool)

(declare-fun e!15802 () Bool)

(assert (=> d!4455 e!15802))

(declare-fun res!14901 () Bool)

(assert (=> d!4455 (=> (not res!14901) (not e!15802))))

(assert (=> d!4455 (= res!14901 (and (bvsge (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) #b00000000000000000000000000000000) (bvslt (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (size!704 (_keys!3164 lt!8161))) (bvslt (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (size!703 (_values!1729 lt!8161)))))))

(declare-fun lt!9266 () Unit!512)

(assert (=> d!4455 (= lt!9266 (choose!214 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (defaultEntry!1743 lt!8161)))))

(assert (=> d!4455 (validMask!0 (mask!4730 lt!8161))))

(assert (=> d!4455 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!3 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (defaultEntry!1743 lt!8161)) lt!9266)))

(declare-fun b!24427 () Bool)

(assert (=> b!24427 (= e!15802 (= (+!45 (getCurrentListMap!130 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (getCurrentListMap!130 (array!1286 (store (arr!608 (_keys!3164 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (size!704 (_keys!3164 lt!8161))) (array!1284 (store (arr!607 (_values!1729 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ValueCellFull!312 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (size!703 (_values!1729 lt!8161))) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161))))))

(assert (= (and d!4455 res!14901) b!24427))

(declare-fun m!18987 () Bool)

(assert (=> d!4455 m!18987))

(assert (=> d!4455 m!17182))

(assert (=> b!24427 m!17627))

(assert (=> b!24427 m!17643))

(assert (=> b!24427 m!16790))

(assert (=> b!24427 m!17651))

(assert (=> b!24427 m!16790))

(assert (=> b!24427 m!17455))

(assert (=> d!4119 d!4455))

(declare-fun d!4457 () Bool)

(assert (=> d!4457 (= (arrayCountValidKeys!0 lt!8780 (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (bvadd (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!9267 () Unit!512)

(assert (=> d!4457 (= lt!9267 (choose!2 lt!8780 (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254))))))

(declare-fun e!15803 () Bool)

(assert (=> d!4457 e!15803))

(declare-fun res!14902 () Bool)

(assert (=> d!4457 (=> (not res!14902) (not e!15803))))

(assert (=> d!4457 (= res!14902 (and (bvsge (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) #b00000000000000000000000000000000) (bvslt (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (size!704 lt!8780))))))

(assert (=> d!4457 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!8780 (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254))) lt!9267)))

(declare-fun b!24428 () Bool)

(declare-fun res!14903 () Bool)

(assert (=> b!24428 (=> (not res!14903) (not e!15803))))

(assert (=> b!24428 (= res!14903 (validKeyInArray!0 (select (arr!608 lt!8780) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)))))))

(declare-fun b!24429 () Bool)

(assert (=> b!24429 (= e!15803 (bvslt (size!704 lt!8780) #b01111111111111111111111111111111))))

(assert (= (and d!4457 res!14902) b!24428))

(assert (= (and b!24428 res!14903) b!24429))

(assert (=> d!4457 m!17641))

(declare-fun m!18989 () Bool)

(assert (=> d!4457 m!18989))

(declare-fun m!18991 () Bool)

(assert (=> b!24428 m!18991))

(assert (=> b!24428 m!18991))

(declare-fun m!18993 () Bool)

(assert (=> b!24428 m!18993))

(assert (=> d!4119 d!4457))

(declare-fun d!4459 () Bool)

(declare-fun e!15804 () Bool)

(assert (=> d!4459 e!15804))

(declare-fun res!14904 () Bool)

(assert (=> d!4459 (=> (not res!14904) (not e!15804))))

(assert (=> d!4459 (= res!14904 (and (bvsge (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) #b00000000000000000000000000000000) (bvslt (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (size!704 (_keys!3164 lt!8161)))))))

(declare-fun lt!9268 () Unit!512)

(assert (=> d!4459 (= lt!9268 (choose!41 (_keys!3164 lt!8161) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) lt!8771 lt!8776))))

(assert (=> d!4459 (bvslt (size!704 (_keys!3164 lt!8161)) #b01111111111111111111111111111111)))

(assert (=> d!4459 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3164 lt!8161) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) lt!8771 lt!8776) lt!9268)))

(declare-fun b!24430 () Bool)

(assert (=> b!24430 (= e!15804 (arrayNoDuplicates!0 (array!1286 (store (arr!608 (_keys!3164 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (size!704 (_keys!3164 lt!8161))) lt!8771 lt!8776))))

(assert (= (and d!4459 res!14904) b!24430))

(declare-fun m!18995 () Bool)

(assert (=> d!4459 m!18995))

(assert (=> b!24430 m!17651))

(assert (=> b!24430 m!17645))

(assert (=> d!4119 d!4459))

(assert (=> d!4119 d!4085))

(declare-fun b!24431 () Bool)

(declare-fun e!15806 () (_ BitVec 32))

(declare-fun e!15805 () (_ BitVec 32))

(assert (=> b!24431 (= e!15806 e!15805)))

(declare-fun c!3274 () Bool)

(assert (=> b!24431 (= c!3274 (validKeyInArray!0 (select (arr!608 (array!1286 (store (arr!608 (_keys!3164 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (size!704 (_keys!3164 lt!8161)))) #b00000000000000000000000000000000)))))

(declare-fun b!24432 () Bool)

(declare-fun call!2125 () (_ BitVec 32))

(assert (=> b!24432 (= e!15805 call!2125)))

(declare-fun bm!2122 () Bool)

(assert (=> bm!2122 (= call!2125 (arrayCountValidKeys!0 (array!1286 (store (arr!608 (_keys!3164 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (size!704 (_keys!3164 lt!8161))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!704 (_keys!3164 lt!8161))))))

(declare-fun b!24434 () Bool)

(assert (=> b!24434 (= e!15805 (bvadd #b00000000000000000000000000000001 call!2125))))

(declare-fun b!24433 () Bool)

(assert (=> b!24433 (= e!15806 #b00000000000000000000000000000000)))

(declare-fun lt!9269 () (_ BitVec 32))

(declare-fun d!4461 () Bool)

(assert (=> d!4461 (and (bvsge lt!9269 #b00000000000000000000000000000000) (bvsle lt!9269 (bvsub (size!704 (array!1286 (store (arr!608 (_keys!3164 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (size!704 (_keys!3164 lt!8161)))) #b00000000000000000000000000000000)))))

(assert (=> d!4461 (= lt!9269 e!15806)))

(declare-fun c!3275 () Bool)

(assert (=> d!4461 (= c!3275 (bvsge #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))))))

(assert (=> d!4461 (and (bvsle #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!704 (_keys!3164 lt!8161)) (size!704 (array!1286 (store (arr!608 (_keys!3164 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (size!704 (_keys!3164 lt!8161))))))))

(assert (=> d!4461 (= (arrayCountValidKeys!0 (array!1286 (store (arr!608 (_keys!3164 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (size!704 (_keys!3164 lt!8161))) #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))) lt!9269)))

(assert (= (and d!4461 c!3275) b!24433))

(assert (= (and d!4461 (not c!3275)) b!24431))

(assert (= (and b!24431 c!3274) b!24434))

(assert (= (and b!24431 (not c!3274)) b!24432))

(assert (= (or b!24434 b!24432) bm!2122))

(assert (=> b!24431 m!18975))

(assert (=> b!24431 m!18975))

(assert (=> b!24431 m!18977))

(declare-fun m!18997 () Bool)

(assert (=> bm!2122 m!18997))

(assert (=> d!4119 d!4461))

(assert (=> d!4119 d!4001))

(declare-fun b!24438 () Bool)

(declare-fun e!15808 () Bool)

(assert (=> b!24438 (= e!15808 (= (arrayCountValidKeys!0 (array!1286 (store (arr!608 (_keys!3164 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (size!704 (_keys!3164 lt!8161))) #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))) (bvadd (arrayCountValidKeys!0 (_keys!3164 lt!8161) #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))) #b00000000000000000000000000000001)))))

(declare-fun d!4463 () Bool)

(assert (=> d!4463 e!15808))

(declare-fun res!14907 () Bool)

(assert (=> d!4463 (=> (not res!14907) (not e!15808))))

(assert (=> d!4463 (= res!14907 (and (bvsge (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) #b00000000000000000000000000000000) (bvslt (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (size!704 (_keys!3164 lt!8161)))))))

(declare-fun lt!9270 () Unit!512)

(assert (=> d!4463 (= lt!9270 (choose!1 (_keys!3164 lt!8161) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!15807 () Bool)

(assert (=> d!4463 e!15807))

(declare-fun res!14908 () Bool)

(assert (=> d!4463 (=> (not res!14908) (not e!15807))))

(assert (=> d!4463 (= res!14908 (and (bvsge (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) #b00000000000000000000000000000000) (bvslt (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (size!704 (_keys!3164 lt!8161)))))))

(assert (=> d!4463 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3164 lt!8161) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) lt!9270)))

(declare-fun b!24435 () Bool)

(declare-fun res!14906 () Bool)

(assert (=> b!24435 (=> (not res!14906) (not e!15807))))

(assert (=> b!24435 (= res!14906 (not (validKeyInArray!0 (select (arr!608 (_keys!3164 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254))))))))

(declare-fun b!24436 () Bool)

(declare-fun res!14905 () Bool)

(assert (=> b!24436 (=> (not res!14905) (not e!15807))))

(assert (=> b!24436 (= res!14905 (validKeyInArray!0 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!24437 () Bool)

(assert (=> b!24437 (= e!15807 (bvslt (size!704 (_keys!3164 lt!8161)) #b01111111111111111111111111111111))))

(assert (= (and d!4463 res!14908) b!24435))

(assert (= (and b!24435 res!14906) b!24436))

(assert (= (and b!24436 res!14905) b!24437))

(assert (= (and d!4463 res!14907) b!24438))

(assert (=> b!24438 m!17651))

(assert (=> b!24438 m!17649))

(assert (=> b!24438 m!17529))

(declare-fun m!18999 () Bool)

(assert (=> d!4463 m!18999))

(declare-fun m!19001 () Bool)

(assert (=> b!24435 m!19001))

(assert (=> b!24435 m!19001))

(declare-fun m!19003 () Bool)

(assert (=> b!24435 m!19003))

(declare-fun m!19005 () Bool)

(assert (=> b!24436 m!19005))

(assert (=> d!4119 d!4463))

(declare-fun d!4465 () Bool)

(declare-fun e!15809 () Bool)

(assert (=> d!4465 e!15809))

(declare-fun res!14909 () Bool)

(assert (=> d!4465 (=> (not res!14909) (not e!15809))))

(assert (=> d!4465 (= res!14909 (and (bvsge (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) #b00000000000000000000000000000000) (bvslt (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (size!704 lt!8783))))))

(declare-fun lt!9271 () Unit!512)

(assert (=> d!4465 (= lt!9271 (choose!206 lt!8783 lt!8788 (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (defaultEntry!1743 lt!8161)))))

(assert (=> d!4465 (validMask!0 (mask!4730 lt!8161))))

(assert (=> d!4465 (= (lemmaValidKeyInArrayIsInListMap!10 lt!8783 lt!8788 (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (defaultEntry!1743 lt!8161)) lt!9271)))

(declare-fun b!24439 () Bool)

(assert (=> b!24439 (= e!15809 (contains!230 (getCurrentListMap!130 lt!8783 lt!8788 (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)) (select (arr!608 lt!8783) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)))))))

(assert (= (and d!4465 res!14909) b!24439))

(declare-fun m!19007 () Bool)

(assert (=> d!4465 m!19007))

(assert (=> d!4465 m!17182))

(assert (=> b!24439 m!17631))

(declare-fun m!19009 () Bool)

(assert (=> b!24439 m!19009))

(assert (=> b!24439 m!17631))

(assert (=> b!24439 m!19009))

(declare-fun m!19011 () Bool)

(assert (=> b!24439 m!19011))

(assert (=> d!4119 d!4465))

(declare-fun d!4467 () Bool)

(declare-fun res!14910 () Bool)

(declare-fun e!15810 () Bool)

(assert (=> d!4467 (=> res!14910 e!15810)))

(assert (=> d!4467 (= res!14910 (= (select (arr!608 lt!8766) #b00000000000000000000000000000000) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!4467 (= (arrayContainsKey!0 lt!8766 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) #b00000000000000000000000000000000) e!15810)))

(declare-fun b!24440 () Bool)

(declare-fun e!15811 () Bool)

(assert (=> b!24440 (= e!15810 e!15811)))

(declare-fun res!14911 () Bool)

(assert (=> b!24440 (=> (not res!14911) (not e!15811))))

(assert (=> b!24440 (= res!14911 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!704 lt!8766)))))

(declare-fun b!24441 () Bool)

(assert (=> b!24441 (= e!15811 (arrayContainsKey!0 lt!8766 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!4467 (not res!14910)) b!24440))

(assert (= (and b!24440 res!14911) b!24441))

(declare-fun m!19013 () Bool)

(assert (=> d!4467 m!19013))

(declare-fun m!19015 () Bool)

(assert (=> b!24441 m!19015))

(assert (=> d!4119 d!4467))

(declare-fun b!24442 () Bool)

(declare-fun e!15812 () Bool)

(declare-fun call!2126 () Bool)

(assert (=> b!24442 (= e!15812 call!2126)))

(declare-fun d!4469 () Bool)

(declare-fun res!14913 () Bool)

(declare-fun e!15813 () Bool)

(assert (=> d!4469 (=> res!14913 e!15813)))

(assert (=> d!4469 (= res!14913 (bvsge lt!8771 (size!704 (array!1286 (store (arr!608 (_keys!3164 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (size!704 (_keys!3164 lt!8161))))))))

(assert (=> d!4469 (= (arrayNoDuplicates!0 (array!1286 (store (arr!608 (_keys!3164 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (size!704 (_keys!3164 lt!8161))) lt!8771 lt!8776) e!15813)))

(declare-fun b!24443 () Bool)

(declare-fun e!15815 () Bool)

(assert (=> b!24443 (= e!15815 e!15812)))

(declare-fun c!3276 () Bool)

(assert (=> b!24443 (= c!3276 (validKeyInArray!0 (select (arr!608 (array!1286 (store (arr!608 (_keys!3164 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (size!704 (_keys!3164 lt!8161)))) lt!8771)))))

(declare-fun b!24444 () Bool)

(assert (=> b!24444 (= e!15812 call!2126)))

(declare-fun e!15814 () Bool)

(declare-fun b!24445 () Bool)

(assert (=> b!24445 (= e!15814 (contains!231 lt!8776 (select (arr!608 (array!1286 (store (arr!608 (_keys!3164 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (size!704 (_keys!3164 lt!8161)))) lt!8771)))))

(declare-fun bm!2123 () Bool)

(assert (=> bm!2123 (= call!2126 (arrayNoDuplicates!0 (array!1286 (store (arr!608 (_keys!3164 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (size!704 (_keys!3164 lt!8161))) (bvadd lt!8771 #b00000000000000000000000000000001) (ite c!3276 (Cons!565 (select (arr!608 (array!1286 (store (arr!608 (_keys!3164 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (size!704 (_keys!3164 lt!8161)))) lt!8771) lt!8776) lt!8776)))))

(declare-fun b!24446 () Bool)

(assert (=> b!24446 (= e!15813 e!15815)))

(declare-fun res!14912 () Bool)

(assert (=> b!24446 (=> (not res!14912) (not e!15815))))

(assert (=> b!24446 (= res!14912 (not e!15814))))

(declare-fun res!14914 () Bool)

(assert (=> b!24446 (=> (not res!14914) (not e!15814))))

(assert (=> b!24446 (= res!14914 (validKeyInArray!0 (select (arr!608 (array!1286 (store (arr!608 (_keys!3164 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (size!704 (_keys!3164 lt!8161)))) lt!8771)))))

(assert (= (and d!4469 (not res!14913)) b!24446))

(assert (= (and b!24446 res!14914) b!24445))

(assert (= (and b!24446 res!14912) b!24443))

(assert (= (and b!24443 c!3276) b!24444))

(assert (= (and b!24443 (not c!3276)) b!24442))

(assert (= (or b!24444 b!24442) bm!2123))

(declare-fun m!19017 () Bool)

(assert (=> b!24443 m!19017))

(assert (=> b!24443 m!19017))

(declare-fun m!19019 () Bool)

(assert (=> b!24443 m!19019))

(assert (=> b!24445 m!19017))

(assert (=> b!24445 m!19017))

(declare-fun m!19021 () Bool)

(assert (=> b!24445 m!19021))

(assert (=> bm!2123 m!19017))

(declare-fun m!19023 () Bool)

(assert (=> bm!2123 m!19023))

(assert (=> b!24446 m!19017))

(assert (=> b!24446 m!19017))

(assert (=> b!24446 m!19019))

(assert (=> d!4119 d!4469))

(declare-fun b!24447 () Bool)

(declare-fun e!15817 () (_ BitVec 32))

(declare-fun e!15816 () (_ BitVec 32))

(assert (=> b!24447 (= e!15817 e!15816)))

(declare-fun c!3277 () Bool)

(assert (=> b!24447 (= c!3277 (validKeyInArray!0 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000)))))

(declare-fun b!24448 () Bool)

(declare-fun call!2127 () (_ BitVec 32))

(assert (=> b!24448 (= e!15816 call!2127)))

(declare-fun bm!2124 () Bool)

(assert (=> bm!2124 (= call!2127 (arrayCountValidKeys!0 (_keys!3164 lt!8161) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!704 (_keys!3164 lt!8161))))))

(declare-fun b!24450 () Bool)

(assert (=> b!24450 (= e!15816 (bvadd #b00000000000000000000000000000001 call!2127))))

(declare-fun b!24449 () Bool)

(assert (=> b!24449 (= e!15817 #b00000000000000000000000000000000)))

(declare-fun d!4471 () Bool)

(declare-fun lt!9272 () (_ BitVec 32))

(assert (=> d!4471 (and (bvsge lt!9272 #b00000000000000000000000000000000) (bvsle lt!9272 (bvsub (size!704 (_keys!3164 lt!8161)) #b00000000000000000000000000000000)))))

(assert (=> d!4471 (= lt!9272 e!15817)))

(declare-fun c!3278 () Bool)

(assert (=> d!4471 (= c!3278 (bvsge #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))))))

(assert (=> d!4471 (and (bvsle #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!704 (_keys!3164 lt!8161)) (size!704 (_keys!3164 lt!8161))))))

(assert (=> d!4471 (= (arrayCountValidKeys!0 (_keys!3164 lt!8161) #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))) lt!9272)))

(assert (= (and d!4471 c!3278) b!24449))

(assert (= (and d!4471 (not c!3278)) b!24447))

(assert (= (and b!24447 c!3277) b!24450))

(assert (= (and b!24447 (not c!3277)) b!24448))

(assert (= (or b!24450 b!24448) bm!2124))

(assert (=> b!24447 m!16936))

(assert (=> b!24447 m!16936))

(assert (=> b!24447 m!17202))

(declare-fun m!19025 () Bool)

(assert (=> bm!2124 m!19025))

(assert (=> d!4119 d!4471))

(declare-fun d!4473 () Bool)

(declare-fun e!15818 () Bool)

(assert (=> d!4473 e!15818))

(declare-fun res!14915 () Bool)

(assert (=> d!4473 (=> res!14915 e!15818)))

(declare-fun lt!9273 () Bool)

(assert (=> d!4473 (= res!14915 (not lt!9273))))

(declare-fun lt!9274 () Bool)

(assert (=> d!4473 (= lt!9273 lt!9274)))

(declare-fun lt!9275 () Unit!512)

(declare-fun e!15819 () Unit!512)

(assert (=> d!4473 (= lt!9275 e!15819)))

(declare-fun c!3279 () Bool)

(assert (=> d!4473 (= c!3279 lt!9274)))

(assert (=> d!4473 (= lt!9274 (containsKey!25 (toList!299 (getCurrentListMap!130 lt!8783 lt!8788 (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161))) (select (store (arr!608 (_keys!3164 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)))))))

(assert (=> d!4473 (= (contains!230 (getCurrentListMap!130 lt!8783 lt!8788 (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)) (select (store (arr!608 (_keys!3164 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)))) lt!9273)))

(declare-fun b!24451 () Bool)

(declare-fun lt!9276 () Unit!512)

(assert (=> b!24451 (= e!15819 lt!9276)))

(assert (=> b!24451 (= lt!9276 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!299 (getCurrentListMap!130 lt!8783 lt!8788 (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161))) (select (store (arr!608 (_keys!3164 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)))))))

(assert (=> b!24451 (isDefined!23 (getValueByKey!61 (toList!299 (getCurrentListMap!130 lt!8783 lt!8788 (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161))) (select (store (arr!608 (_keys!3164 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)))))))

(declare-fun b!24452 () Bool)

(declare-fun Unit!574 () Unit!512)

(assert (=> b!24452 (= e!15819 Unit!574)))

(declare-fun b!24453 () Bool)

(assert (=> b!24453 (= e!15818 (isDefined!23 (getValueByKey!61 (toList!299 (getCurrentListMap!130 lt!8783 lt!8788 (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161))) (select (store (arr!608 (_keys!3164 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254))))))))

(assert (= (and d!4473 c!3279) b!24451))

(assert (= (and d!4473 (not c!3279)) b!24452))

(assert (= (and d!4473 (not res!14915)) b!24453))

(assert (=> d!4473 m!17647))

(declare-fun m!19027 () Bool)

(assert (=> d!4473 m!19027))

(assert (=> b!24451 m!17647))

(declare-fun m!19029 () Bool)

(assert (=> b!24451 m!19029))

(assert (=> b!24451 m!17647))

(declare-fun m!19031 () Bool)

(assert (=> b!24451 m!19031))

(assert (=> b!24451 m!19031))

(declare-fun m!19033 () Bool)

(assert (=> b!24451 m!19033))

(assert (=> b!24453 m!17647))

(assert (=> b!24453 m!19031))

(assert (=> b!24453 m!19031))

(assert (=> b!24453 m!19033))

(assert (=> d!4119 d!4473))

(declare-fun d!4475 () Bool)

(declare-fun e!15820 () Bool)

(assert (=> d!4475 e!15820))

(declare-fun res!14916 () Bool)

(assert (=> d!4475 (=> (not res!14916) (not e!15820))))

(declare-fun lt!9279 () ListLongMap!567)

(assert (=> d!4475 (= res!14916 (contains!230 lt!9279 (_1!489 (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(declare-fun lt!9278 () List!568)

(assert (=> d!4475 (= lt!9279 (ListLongMap!568 lt!9278))))

(declare-fun lt!9277 () Unit!512)

(declare-fun lt!9280 () Unit!512)

(assert (=> d!4475 (= lt!9277 lt!9280)))

(assert (=> d!4475 (= (getValueByKey!61 lt!9278 (_1!489 (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (Some!66 (_2!489 (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(assert (=> d!4475 (= lt!9280 (lemmaContainsTupThenGetReturnValue!18 lt!9278 (_1!489 (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (_2!489 (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(assert (=> d!4475 (= lt!9278 (insertStrictlySorted!18 (toList!299 (getCurrentListMap!130 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161))) (_1!489 (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (_2!489 (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(assert (=> d!4475 (= (+!45 (getCurrentListMap!130 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) lt!9279)))

(declare-fun b!24454 () Bool)

(declare-fun res!14917 () Bool)

(assert (=> b!24454 (=> (not res!14917) (not e!15820))))

(assert (=> b!24454 (= res!14917 (= (getValueByKey!61 (toList!299 lt!9279) (_1!489 (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (Some!66 (_2!489 (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(declare-fun b!24455 () Bool)

(assert (=> b!24455 (= e!15820 (contains!232 (toList!299 lt!9279) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(assert (= (and d!4475 res!14916) b!24454))

(assert (= (and b!24454 res!14917) b!24455))

(declare-fun m!19035 () Bool)

(assert (=> d!4475 m!19035))

(declare-fun m!19037 () Bool)

(assert (=> d!4475 m!19037))

(declare-fun m!19039 () Bool)

(assert (=> d!4475 m!19039))

(declare-fun m!19041 () Bool)

(assert (=> d!4475 m!19041))

(declare-fun m!19043 () Bool)

(assert (=> b!24454 m!19043))

(declare-fun m!19045 () Bool)

(assert (=> b!24455 m!19045))

(assert (=> d!4119 d!4475))

(declare-fun bm!2125 () Bool)

(declare-fun call!2129 () Bool)

(declare-fun lt!9298 () ListLongMap!567)

(assert (=> bm!2125 (= call!2129 (contains!230 lt!9298 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!2126 () Bool)

(declare-fun call!2131 () Bool)

(assert (=> bm!2126 (= call!2131 (contains!230 lt!9298 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24456 () Bool)

(declare-fun e!15828 () Bool)

(declare-fun e!15829 () Bool)

(assert (=> b!24456 (= e!15828 e!15829)))

(declare-fun res!14926 () Bool)

(assert (=> b!24456 (=> (not res!14926) (not e!15829))))

(assert (=> b!24456 (= res!14926 (contains!230 lt!9298 (select (arr!608 (array!1286 (store (arr!608 (_keys!3164 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (size!704 (_keys!3164 lt!8161)))) #b00000000000000000000000000000000)))))

(assert (=> b!24456 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (array!1286 (store (arr!608 (_keys!3164 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (size!704 (_keys!3164 lt!8161))))))))

(declare-fun b!24457 () Bool)

(declare-fun e!15822 () Unit!512)

(declare-fun lt!9283 () Unit!512)

(assert (=> b!24457 (= e!15822 lt!9283)))

(declare-fun lt!9295 () ListLongMap!567)

(assert (=> b!24457 (= lt!9295 (getCurrentListMapNoExtraKeys!15 (array!1286 (store (arr!608 (_keys!3164 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (size!704 (_keys!3164 lt!8161))) (array!1284 (store (arr!607 (_values!1729 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ValueCellFull!312 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (size!703 (_values!1729 lt!8161))) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))))

(declare-fun lt!9290 () (_ BitVec 64))

(assert (=> b!24457 (= lt!9290 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9299 () (_ BitVec 64))

(assert (=> b!24457 (= lt!9299 (select (arr!608 (array!1286 (store (arr!608 (_keys!3164 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (size!704 (_keys!3164 lt!8161)))) #b00000000000000000000000000000000))))

(declare-fun lt!9291 () Unit!512)

(assert (=> b!24457 (= lt!9291 (addStillContains!14 lt!9295 lt!9290 (zeroValue!1666 lt!8161) lt!9299))))

(assert (=> b!24457 (contains!230 (+!45 lt!9295 (tuple2!961 lt!9290 (zeroValue!1666 lt!8161))) lt!9299)))

(declare-fun lt!9302 () Unit!512)

(assert (=> b!24457 (= lt!9302 lt!9291)))

(declare-fun lt!9286 () ListLongMap!567)

(assert (=> b!24457 (= lt!9286 (getCurrentListMapNoExtraKeys!15 (array!1286 (store (arr!608 (_keys!3164 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (size!704 (_keys!3164 lt!8161))) (array!1284 (store (arr!607 (_values!1729 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ValueCellFull!312 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (size!703 (_values!1729 lt!8161))) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))))

(declare-fun lt!9301 () (_ BitVec 64))

(assert (=> b!24457 (= lt!9301 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9300 () (_ BitVec 64))

(assert (=> b!24457 (= lt!9300 (select (arr!608 (array!1286 (store (arr!608 (_keys!3164 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (size!704 (_keys!3164 lt!8161)))) #b00000000000000000000000000000000))))

(declare-fun lt!9285 () Unit!512)

(assert (=> b!24457 (= lt!9285 (addApplyDifferent!14 lt!9286 lt!9301 (minValue!1666 lt!8161) lt!9300))))

(assert (=> b!24457 (= (apply!29 (+!45 lt!9286 (tuple2!961 lt!9301 (minValue!1666 lt!8161))) lt!9300) (apply!29 lt!9286 lt!9300))))

(declare-fun lt!9284 () Unit!512)

(assert (=> b!24457 (= lt!9284 lt!9285)))

(declare-fun lt!9293 () ListLongMap!567)

(assert (=> b!24457 (= lt!9293 (getCurrentListMapNoExtraKeys!15 (array!1286 (store (arr!608 (_keys!3164 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (size!704 (_keys!3164 lt!8161))) (array!1284 (store (arr!607 (_values!1729 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ValueCellFull!312 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (size!703 (_values!1729 lt!8161))) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))))

(declare-fun lt!9296 () (_ BitVec 64))

(assert (=> b!24457 (= lt!9296 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9282 () (_ BitVec 64))

(assert (=> b!24457 (= lt!9282 (select (arr!608 (array!1286 (store (arr!608 (_keys!3164 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (size!704 (_keys!3164 lt!8161)))) #b00000000000000000000000000000000))))

(declare-fun lt!9287 () Unit!512)

(assert (=> b!24457 (= lt!9287 (addApplyDifferent!14 lt!9293 lt!9296 (zeroValue!1666 lt!8161) lt!9282))))

(assert (=> b!24457 (= (apply!29 (+!45 lt!9293 (tuple2!961 lt!9296 (zeroValue!1666 lt!8161))) lt!9282) (apply!29 lt!9293 lt!9282))))

(declare-fun lt!9292 () Unit!512)

(assert (=> b!24457 (= lt!9292 lt!9287)))

(declare-fun lt!9294 () ListLongMap!567)

(assert (=> b!24457 (= lt!9294 (getCurrentListMapNoExtraKeys!15 (array!1286 (store (arr!608 (_keys!3164 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (size!704 (_keys!3164 lt!8161))) (array!1284 (store (arr!607 (_values!1729 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ValueCellFull!312 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (size!703 (_values!1729 lt!8161))) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))))

(declare-fun lt!9289 () (_ BitVec 64))

(assert (=> b!24457 (= lt!9289 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9281 () (_ BitVec 64))

(assert (=> b!24457 (= lt!9281 (select (arr!608 (array!1286 (store (arr!608 (_keys!3164 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (size!704 (_keys!3164 lt!8161)))) #b00000000000000000000000000000000))))

(assert (=> b!24457 (= lt!9283 (addApplyDifferent!14 lt!9294 lt!9289 (minValue!1666 lt!8161) lt!9281))))

(assert (=> b!24457 (= (apply!29 (+!45 lt!9294 (tuple2!961 lt!9289 (minValue!1666 lt!8161))) lt!9281) (apply!29 lt!9294 lt!9281))))

(declare-fun call!2132 () ListLongMap!567)

(declare-fun bm!2127 () Bool)

(assert (=> bm!2127 (= call!2132 (getCurrentListMapNoExtraKeys!15 (array!1286 (store (arr!608 (_keys!3164 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (size!704 (_keys!3164 lt!8161))) (array!1284 (store (arr!607 (_values!1729 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ValueCellFull!312 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (size!703 (_values!1729 lt!8161))) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))))

(declare-fun b!24458 () Bool)

(declare-fun res!14921 () Bool)

(declare-fun e!15825 () Bool)

(assert (=> b!24458 (=> (not res!14921) (not e!15825))))

(declare-fun e!15821 () Bool)

(assert (=> b!24458 (= res!14921 e!15821)))

(declare-fun c!3282 () Bool)

(assert (=> b!24458 (= c!3282 (not (= (bvand (extraKeys!1641 lt!8161) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!24459 () Bool)

(declare-fun e!15833 () Bool)

(assert (=> b!24459 (= e!15833 (not call!2131))))

(declare-fun b!24460 () Bool)

(assert (=> b!24460 (= e!15821 (not call!2129))))

(declare-fun bm!2128 () Bool)

(declare-fun call!2133 () ListLongMap!567)

(assert (=> bm!2128 (= call!2133 call!2132)))

(declare-fun b!24461 () Bool)

(declare-fun e!15831 () ListLongMap!567)

(declare-fun call!2134 () ListLongMap!567)

(assert (=> b!24461 (= e!15831 call!2134)))

(declare-fun b!24462 () Bool)

(declare-fun res!14924 () Bool)

(assert (=> b!24462 (=> (not res!14924) (not e!15825))))

(assert (=> b!24462 (= res!14924 e!15828)))

(declare-fun res!14919 () Bool)

(assert (=> b!24462 (=> res!14919 e!15828)))

(declare-fun e!15824 () Bool)

(assert (=> b!24462 (= res!14919 (not e!15824))))

(declare-fun res!14923 () Bool)

(assert (=> b!24462 (=> (not res!14923) (not e!15824))))

(assert (=> b!24462 (= res!14923 (bvslt #b00000000000000000000000000000000 (size!704 (array!1286 (store (arr!608 (_keys!3164 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (size!704 (_keys!3164 lt!8161))))))))

(declare-fun b!24464 () Bool)

(declare-fun e!15826 () ListLongMap!567)

(assert (=> b!24464 (= e!15826 call!2134)))

(declare-fun b!24465 () Bool)

(declare-fun e!15827 () Bool)

(assert (=> b!24465 (= e!15821 e!15827)))

(declare-fun res!14925 () Bool)

(assert (=> b!24465 (= res!14925 call!2129)))

(assert (=> b!24465 (=> (not res!14925) (not e!15827))))

(declare-fun b!24466 () Bool)

(assert (=> b!24466 (= e!15825 e!15833)))

(declare-fun c!3280 () Bool)

(assert (=> b!24466 (= c!3280 (not (= (bvand (extraKeys!1641 lt!8161) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!2129 () Bool)

(declare-fun call!2128 () ListLongMap!567)

(assert (=> bm!2129 (= call!2128 call!2133)))

(declare-fun b!24467 () Bool)

(assert (=> b!24467 (= e!15831 call!2128)))

(declare-fun b!24468 () Bool)

(declare-fun e!15832 () Bool)

(assert (=> b!24468 (= e!15832 (= (apply!29 lt!9298 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!1666 lt!8161)))))

(declare-fun b!24469 () Bool)

(declare-fun c!3283 () Bool)

(assert (=> b!24469 (= c!3283 (and (not (= (bvand (extraKeys!1641 lt!8161) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 lt!8161) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!24469 (= e!15826 e!15831)))

(declare-fun b!24470 () Bool)

(assert (=> b!24470 (= e!15824 (validKeyInArray!0 (select (arr!608 (array!1286 (store (arr!608 (_keys!3164 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (size!704 (_keys!3164 lt!8161)))) #b00000000000000000000000000000000)))))

(declare-fun bm!2130 () Bool)

(declare-fun call!2130 () ListLongMap!567)

(assert (=> bm!2130 (= call!2134 call!2130)))

(declare-fun b!24471 () Bool)

(assert (=> b!24471 (= e!15833 e!15832)))

(declare-fun res!14922 () Bool)

(assert (=> b!24471 (= res!14922 call!2131)))

(assert (=> b!24471 (=> (not res!14922) (not e!15832))))

(declare-fun bm!2131 () Bool)

(declare-fun c!3285 () Bool)

(declare-fun c!3281 () Bool)

(assert (=> bm!2131 (= call!2130 (+!45 (ite c!3281 call!2132 (ite c!3285 call!2133 call!2128)) (ite (or c!3281 c!3285) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 lt!8161)) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8161)))))))

(declare-fun b!24472 () Bool)

(assert (=> b!24472 (= e!15827 (= (apply!29 lt!9298 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!1666 lt!8161)))))

(declare-fun b!24473 () Bool)

(declare-fun e!15823 () ListLongMap!567)

(assert (=> b!24473 (= e!15823 e!15826)))

(assert (=> b!24473 (= c!3285 (and (not (= (bvand (extraKeys!1641 lt!8161) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 lt!8161) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun e!15830 () Bool)

(declare-fun b!24474 () Bool)

(assert (=> b!24474 (= e!15830 (validKeyInArray!0 (select (arr!608 (array!1286 (store (arr!608 (_keys!3164 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (size!704 (_keys!3164 lt!8161)))) #b00000000000000000000000000000000)))))

(declare-fun b!24463 () Bool)

(assert (=> b!24463 (= e!15823 (+!45 call!2130 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8161))))))

(declare-fun d!4477 () Bool)

(assert (=> d!4477 e!15825))

(declare-fun res!14918 () Bool)

(assert (=> d!4477 (=> (not res!14918) (not e!15825))))

(assert (=> d!4477 (= res!14918 (or (bvsge #b00000000000000000000000000000000 (size!704 (array!1286 (store (arr!608 (_keys!3164 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (size!704 (_keys!3164 lt!8161))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (array!1286 (store (arr!608 (_keys!3164 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (size!704 (_keys!3164 lt!8161))))))))))

(declare-fun lt!9288 () ListLongMap!567)

(assert (=> d!4477 (= lt!9298 lt!9288)))

(declare-fun lt!9297 () Unit!512)

(assert (=> d!4477 (= lt!9297 e!15822)))

(declare-fun c!3284 () Bool)

(assert (=> d!4477 (= c!3284 e!15830)))

(declare-fun res!14920 () Bool)

(assert (=> d!4477 (=> (not res!14920) (not e!15830))))

(assert (=> d!4477 (= res!14920 (bvslt #b00000000000000000000000000000000 (size!704 (array!1286 (store (arr!608 (_keys!3164 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (size!704 (_keys!3164 lt!8161))))))))

(assert (=> d!4477 (= lt!9288 e!15823)))

(assert (=> d!4477 (= c!3281 (and (not (= (bvand (extraKeys!1641 lt!8161) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!1641 lt!8161) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!4477 (validMask!0 (mask!4730 lt!8161))))

(assert (=> d!4477 (= (getCurrentListMap!130 (array!1286 (store (arr!608 (_keys!3164 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (size!704 (_keys!3164 lt!8161))) (array!1284 (store (arr!607 (_values!1729 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ValueCellFull!312 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (size!703 (_values!1729 lt!8161))) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)) lt!9298)))

(declare-fun b!24475 () Bool)

(declare-fun Unit!575 () Unit!512)

(assert (=> b!24475 (= e!15822 Unit!575)))

(declare-fun b!24476 () Bool)

(assert (=> b!24476 (= e!15829 (= (apply!29 lt!9298 (select (arr!608 (array!1286 (store (arr!608 (_keys!3164 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (size!704 (_keys!3164 lt!8161)))) #b00000000000000000000000000000000)) (get!390 (select (arr!607 (array!1284 (store (arr!607 (_values!1729 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ValueCellFull!312 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (size!703 (_values!1729 lt!8161)))) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 lt!8161) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!24476 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!703 (array!1284 (store (arr!607 (_values!1729 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ValueCellFull!312 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (size!703 (_values!1729 lt!8161))))))))

(assert (=> b!24476 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (array!1286 (store (arr!608 (_keys!3164 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (size!704 (_keys!3164 lt!8161))))))))

(assert (= (and d!4477 c!3281) b!24463))

(assert (= (and d!4477 (not c!3281)) b!24473))

(assert (= (and b!24473 c!3285) b!24464))

(assert (= (and b!24473 (not c!3285)) b!24469))

(assert (= (and b!24469 c!3283) b!24461))

(assert (= (and b!24469 (not c!3283)) b!24467))

(assert (= (or b!24461 b!24467) bm!2129))

(assert (= (or b!24464 bm!2129) bm!2128))

(assert (= (or b!24464 b!24461) bm!2130))

(assert (= (or b!24463 bm!2128) bm!2127))

(assert (= (or b!24463 bm!2130) bm!2131))

(assert (= (and d!4477 res!14920) b!24474))

(assert (= (and d!4477 c!3284) b!24457))

(assert (= (and d!4477 (not c!3284)) b!24475))

(assert (= (and d!4477 res!14918) b!24462))

(assert (= (and b!24462 res!14923) b!24470))

(assert (= (and b!24462 (not res!14919)) b!24456))

(assert (= (and b!24456 res!14926) b!24476))

(assert (= (and b!24462 res!14924) b!24458))

(assert (= (and b!24458 c!3282) b!24465))

(assert (= (and b!24458 (not c!3282)) b!24460))

(assert (= (and b!24465 res!14925) b!24472))

(assert (= (or b!24465 b!24460) bm!2125))

(assert (= (and b!24458 res!14921) b!24466))

(assert (= (and b!24466 c!3280) b!24471))

(assert (= (and b!24466 (not c!3280)) b!24459))

(assert (= (and b!24471 res!14922) b!24468))

(assert (= (or b!24471 b!24459) bm!2126))

(declare-fun b_lambda!1625 () Bool)

(assert (=> (not b_lambda!1625) (not b!24476)))

(assert (=> b!24476 t!3244))

(declare-fun b_and!1531 () Bool)

(assert (= b_and!1529 (and (=> t!3244 result!1101) b_and!1531)))

(declare-fun m!19047 () Bool)

(assert (=> bm!2127 m!19047))

(declare-fun m!19049 () Bool)

(assert (=> b!24472 m!19049))

(assert (=> b!24474 m!18975))

(assert (=> b!24474 m!18975))

(assert (=> b!24474 m!18977))

(assert (=> d!4477 m!17182))

(assert (=> b!24456 m!18975))

(assert (=> b!24456 m!18975))

(declare-fun m!19051 () Bool)

(assert (=> b!24456 m!19051))

(declare-fun m!19053 () Bool)

(assert (=> b!24457 m!19053))

(declare-fun m!19055 () Bool)

(assert (=> b!24457 m!19055))

(declare-fun m!19057 () Bool)

(assert (=> b!24457 m!19057))

(assert (=> b!24457 m!19055))

(declare-fun m!19059 () Bool)

(assert (=> b!24457 m!19059))

(declare-fun m!19061 () Bool)

(assert (=> b!24457 m!19061))

(declare-fun m!19063 () Bool)

(assert (=> b!24457 m!19063))

(declare-fun m!19065 () Bool)

(assert (=> b!24457 m!19065))

(declare-fun m!19067 () Bool)

(assert (=> b!24457 m!19067))

(declare-fun m!19069 () Bool)

(assert (=> b!24457 m!19069))

(declare-fun m!19071 () Bool)

(assert (=> b!24457 m!19071))

(assert (=> b!24457 m!19057))

(declare-fun m!19073 () Bool)

(assert (=> b!24457 m!19073))

(declare-fun m!19075 () Bool)

(assert (=> b!24457 m!19075))

(assert (=> b!24457 m!19063))

(declare-fun m!19077 () Bool)

(assert (=> b!24457 m!19077))

(assert (=> b!24457 m!18975))

(declare-fun m!19079 () Bool)

(assert (=> b!24457 m!19079))

(assert (=> b!24457 m!19047))

(declare-fun m!19081 () Bool)

(assert (=> b!24457 m!19081))

(assert (=> b!24457 m!19069))

(assert (=> b!24470 m!18975))

(assert (=> b!24470 m!18975))

(assert (=> b!24470 m!18977))

(declare-fun m!19083 () Bool)

(assert (=> b!24476 m!19083))

(assert (=> b!24476 m!19083))

(assert (=> b!24476 m!17238))

(declare-fun m!19085 () Bool)

(assert (=> b!24476 m!19085))

(assert (=> b!24476 m!17238))

(assert (=> b!24476 m!18975))

(declare-fun m!19087 () Bool)

(assert (=> b!24476 m!19087))

(assert (=> b!24476 m!18975))

(declare-fun m!19089 () Bool)

(assert (=> bm!2126 m!19089))

(declare-fun m!19091 () Bool)

(assert (=> bm!2125 m!19091))

(declare-fun m!19093 () Bool)

(assert (=> b!24463 m!19093))

(declare-fun m!19095 () Bool)

(assert (=> b!24468 m!19095))

(declare-fun m!19097 () Bool)

(assert (=> bm!2131 m!19097))

(assert (=> d!4119 d!4477))

(declare-fun b!24477 () Bool)

(declare-fun e!15835 () (_ BitVec 32))

(declare-fun e!15834 () (_ BitVec 32))

(assert (=> b!24477 (= e!15835 e!15834)))

(declare-fun c!3286 () Bool)

(assert (=> b!24477 (= c!3286 (validKeyInArray!0 (select (arr!608 lt!8780) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)))))))

(declare-fun b!24478 () Bool)

(declare-fun call!2135 () (_ BitVec 32))

(assert (=> b!24478 (= e!15834 call!2135)))

(declare-fun bm!2132 () Bool)

(assert (=> bm!2132 (= call!2135 (arrayCountValidKeys!0 lt!8780 (bvadd (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) #b00000000000000000000000000000001) (bvadd (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) #b00000000000000000000000000000001)))))

(declare-fun b!24480 () Bool)

(assert (=> b!24480 (= e!15834 (bvadd #b00000000000000000000000000000001 call!2135))))

(declare-fun b!24479 () Bool)

(assert (=> b!24479 (= e!15835 #b00000000000000000000000000000000)))

(declare-fun d!4479 () Bool)

(declare-fun lt!9303 () (_ BitVec 32))

(assert (=> d!4479 (and (bvsge lt!9303 #b00000000000000000000000000000000) (bvsle lt!9303 (bvsub (size!704 lt!8780) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)))))))

(assert (=> d!4479 (= lt!9303 e!15835)))

(declare-fun c!3287 () Bool)

(assert (=> d!4479 (= c!3287 (bvsge (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (bvadd (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) #b00000000000000000000000000000001)))))

(assert (=> d!4479 (and (bvsle (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (bvadd (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) #b00000000000000000000000000000001)) (bvsge (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) #b00000000000000000000000000000001) (size!704 lt!8780)))))

(assert (=> d!4479 (= (arrayCountValidKeys!0 lt!8780 (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (bvadd (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) #b00000000000000000000000000000001)) lt!9303)))

(assert (= (and d!4479 c!3287) b!24479))

(assert (= (and d!4479 (not c!3287)) b!24477))

(assert (= (and b!24477 c!3286) b!24480))

(assert (= (and b!24477 (not c!3286)) b!24478))

(assert (= (or b!24480 b!24478) bm!2132))

(assert (=> b!24477 m!18991))

(assert (=> b!24477 m!18991))

(assert (=> b!24477 m!18993))

(declare-fun m!19099 () Bool)

(assert (=> bm!2132 m!19099))

(assert (=> d!4119 d!4479))

(declare-fun d!4481 () Bool)

(assert (=> d!4481 (arrayContainsKey!0 lt!8766 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) #b00000000000000000000000000000000)))

(declare-fun lt!9304 () Unit!512)

(assert (=> d!4481 (= lt!9304 (choose!13 lt!8766 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254))))))

(assert (=> d!4481 (bvsge (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) #b00000000000000000000000000000000)))

(assert (=> d!4481 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!8766 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254))) lt!9304)))

(declare-fun bs!1010 () Bool)

(assert (= bs!1010 d!4481))

(assert (=> bs!1010 m!17655))

(declare-fun m!19101 () Bool)

(assert (=> bs!1010 m!19101))

(assert (=> d!4119 d!4481))

(declare-fun d!4483 () Bool)

(declare-fun e!15836 () Bool)

(assert (=> d!4483 e!15836))

(declare-fun res!14927 () Bool)

(assert (=> d!4483 (=> (not res!14927) (not e!15836))))

(assert (=> d!4483 (= res!14927 (and (bvsge (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) #b00000000000000000000000000000000) (bvslt (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (size!704 (_keys!3164 lt!8161)))))))

(declare-fun lt!9305 () Unit!512)

(assert (=> d!4483 (= lt!9305 (choose!102 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (_keys!3164 lt!8161) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (mask!4730 lt!8161)))))

(assert (=> d!4483 (validMask!0 (mask!4730 lt!8161))))

(assert (=> d!4483 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (_keys!3164 lt!8161) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (mask!4730 lt!8161)) lt!9305)))

(declare-fun b!24481 () Bool)

(assert (=> b!24481 (= e!15836 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!1286 (store (arr!608 (_keys!3164 lt!8161)) (ite c!2975 (index!2340 lt!8254) (index!2337 lt!8254)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (size!704 (_keys!3164 lt!8161))) (mask!4730 lt!8161)))))

(assert (= (and d!4483 res!14927) b!24481))

(declare-fun m!19103 () Bool)

(assert (=> d!4483 m!19103))

(assert (=> d!4483 m!17182))

(assert (=> b!24481 m!17651))

(assert (=> b!24481 m!17635))

(assert (=> d!4119 d!4483))

(assert (=> d!4119 d!4079))

(assert (=> d!4073 d!4081))

(declare-fun bm!2133 () Bool)

(declare-fun call!2137 () Bool)

(declare-fun lt!9323 () ListLongMap!567)

(assert (=> bm!2133 (= call!2137 (contains!230 lt!9323 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!2134 () Bool)

(declare-fun call!2139 () Bool)

(assert (=> bm!2134 (= call!2139 (contains!230 lt!9323 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24482 () Bool)

(declare-fun e!15844 () Bool)

(declare-fun e!15845 () Bool)

(assert (=> b!24482 (= e!15844 e!15845)))

(declare-fun res!14936 () Bool)

(assert (=> b!24482 (=> (not res!14936) (not e!15845))))

(assert (=> b!24482 (= res!14936 (contains!230 lt!9323 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000)))))

(assert (=> b!24482 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))))))

(declare-fun b!24483 () Bool)

(declare-fun e!15838 () Unit!512)

(declare-fun lt!9308 () Unit!512)

(assert (=> b!24483 (= e!15838 lt!9308)))

(declare-fun lt!9320 () ListLongMap!567)

(assert (=> b!24483 (= lt!9320 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) lt!8244 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))))

(declare-fun lt!9315 () (_ BitVec 64))

(assert (=> b!24483 (= lt!9315 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9324 () (_ BitVec 64))

(assert (=> b!24483 (= lt!9324 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000))))

(declare-fun lt!9316 () Unit!512)

(assert (=> b!24483 (= lt!9316 (addStillContains!14 lt!9320 lt!9315 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) lt!9324))))

(assert (=> b!24483 (contains!230 (+!45 lt!9320 (tuple2!961 lt!9315 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) lt!9324)))

(declare-fun lt!9327 () Unit!512)

(assert (=> b!24483 (= lt!9327 lt!9316)))

(declare-fun lt!9311 () ListLongMap!567)

(assert (=> b!24483 (= lt!9311 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) lt!8244 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))))

(declare-fun lt!9326 () (_ BitVec 64))

(assert (=> b!24483 (= lt!9326 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9325 () (_ BitVec 64))

(assert (=> b!24483 (= lt!9325 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000))))

(declare-fun lt!9310 () Unit!512)

(assert (=> b!24483 (= lt!9310 (addApplyDifferent!14 lt!9311 lt!9326 (minValue!1666 lt!8161) lt!9325))))

(assert (=> b!24483 (= (apply!29 (+!45 lt!9311 (tuple2!961 lt!9326 (minValue!1666 lt!8161))) lt!9325) (apply!29 lt!9311 lt!9325))))

(declare-fun lt!9309 () Unit!512)

(assert (=> b!24483 (= lt!9309 lt!9310)))

(declare-fun lt!9318 () ListLongMap!567)

(assert (=> b!24483 (= lt!9318 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) lt!8244 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))))

(declare-fun lt!9321 () (_ BitVec 64))

(assert (=> b!24483 (= lt!9321 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9307 () (_ BitVec 64))

(assert (=> b!24483 (= lt!9307 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000))))

(declare-fun lt!9312 () Unit!512)

(assert (=> b!24483 (= lt!9312 (addApplyDifferent!14 lt!9318 lt!9321 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) lt!9307))))

(assert (=> b!24483 (= (apply!29 (+!45 lt!9318 (tuple2!961 lt!9321 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) lt!9307) (apply!29 lt!9318 lt!9307))))

(declare-fun lt!9317 () Unit!512)

(assert (=> b!24483 (= lt!9317 lt!9312)))

(declare-fun lt!9319 () ListLongMap!567)

(assert (=> b!24483 (= lt!9319 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) lt!8244 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))))

(declare-fun lt!9314 () (_ BitVec 64))

(assert (=> b!24483 (= lt!9314 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9306 () (_ BitVec 64))

(assert (=> b!24483 (= lt!9306 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000))))

(assert (=> b!24483 (= lt!9308 (addApplyDifferent!14 lt!9319 lt!9314 (minValue!1666 lt!8161) lt!9306))))

(assert (=> b!24483 (= (apply!29 (+!45 lt!9319 (tuple2!961 lt!9314 (minValue!1666 lt!8161))) lt!9306) (apply!29 lt!9319 lt!9306))))

(declare-fun bm!2135 () Bool)

(declare-fun call!2140 () ListLongMap!567)

(assert (=> bm!2135 (= call!2140 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) lt!8244 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))))

(declare-fun b!24484 () Bool)

(declare-fun res!14931 () Bool)

(declare-fun e!15841 () Bool)

(assert (=> b!24484 (=> (not res!14931) (not e!15841))))

(declare-fun e!15837 () Bool)

(assert (=> b!24484 (= res!14931 e!15837)))

(declare-fun c!3290 () Bool)

(assert (=> b!24484 (= c!3290 (not (= (bvand lt!8244 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!24485 () Bool)

(declare-fun e!15849 () Bool)

(assert (=> b!24485 (= e!15849 (not call!2139))))

(declare-fun b!24486 () Bool)

(assert (=> b!24486 (= e!15837 (not call!2137))))

(declare-fun bm!2136 () Bool)

(declare-fun call!2141 () ListLongMap!567)

(assert (=> bm!2136 (= call!2141 call!2140)))

(declare-fun b!24487 () Bool)

(declare-fun e!15847 () ListLongMap!567)

(declare-fun call!2142 () ListLongMap!567)

(assert (=> b!24487 (= e!15847 call!2142)))

(declare-fun b!24488 () Bool)

(declare-fun res!14934 () Bool)

(assert (=> b!24488 (=> (not res!14934) (not e!15841))))

(assert (=> b!24488 (= res!14934 e!15844)))

(declare-fun res!14929 () Bool)

(assert (=> b!24488 (=> res!14929 e!15844)))

(declare-fun e!15840 () Bool)

(assert (=> b!24488 (= res!14929 (not e!15840))))

(declare-fun res!14933 () Bool)

(assert (=> b!24488 (=> (not res!14933) (not e!15840))))

(assert (=> b!24488 (= res!14933 (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))))))

(declare-fun b!24490 () Bool)

(declare-fun e!15842 () ListLongMap!567)

(assert (=> b!24490 (= e!15842 call!2142)))

(declare-fun b!24491 () Bool)

(declare-fun e!15843 () Bool)

(assert (=> b!24491 (= e!15837 e!15843)))

(declare-fun res!14935 () Bool)

(assert (=> b!24491 (= res!14935 call!2137)))

(assert (=> b!24491 (=> (not res!14935) (not e!15843))))

(declare-fun b!24492 () Bool)

(assert (=> b!24492 (= e!15841 e!15849)))

(declare-fun c!3288 () Bool)

(assert (=> b!24492 (= c!3288 (not (= (bvand lt!8244 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!2137 () Bool)

(declare-fun call!2136 () ListLongMap!567)

(assert (=> bm!2137 (= call!2136 call!2141)))

(declare-fun b!24493 () Bool)

(assert (=> b!24493 (= e!15847 call!2136)))

(declare-fun b!24494 () Bool)

(declare-fun e!15848 () Bool)

(assert (=> b!24494 (= e!15848 (= (apply!29 lt!9323 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!1666 lt!8161)))))

(declare-fun b!24495 () Bool)

(declare-fun c!3291 () Bool)

(assert (=> b!24495 (= c!3291 (and (not (= (bvand lt!8244 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!8244 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!24495 (= e!15842 e!15847)))

(declare-fun b!24496 () Bool)

(assert (=> b!24496 (= e!15840 (validKeyInArray!0 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000)))))

(declare-fun bm!2138 () Bool)

(declare-fun call!2138 () ListLongMap!567)

(assert (=> bm!2138 (= call!2142 call!2138)))

(declare-fun b!24497 () Bool)

(assert (=> b!24497 (= e!15849 e!15848)))

(declare-fun res!14932 () Bool)

(assert (=> b!24497 (= res!14932 call!2139)))

(assert (=> b!24497 (=> (not res!14932) (not e!15848))))

(declare-fun bm!2139 () Bool)

(declare-fun c!3293 () Bool)

(declare-fun c!3289 () Bool)

(assert (=> bm!2139 (= call!2138 (+!45 (ite c!3289 call!2140 (ite c!3293 call!2141 call!2136)) (ite (or c!3289 c!3293) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8161)))))))

(declare-fun b!24498 () Bool)

(assert (=> b!24498 (= e!15843 (= (apply!29 lt!9323 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))

(declare-fun b!24499 () Bool)

(declare-fun e!15839 () ListLongMap!567)

(assert (=> b!24499 (= e!15839 e!15842)))

(assert (=> b!24499 (= c!3293 (and (not (= (bvand lt!8244 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!8244 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!24500 () Bool)

(declare-fun e!15846 () Bool)

(assert (=> b!24500 (= e!15846 (validKeyInArray!0 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000)))))

(declare-fun b!24489 () Bool)

(assert (=> b!24489 (= e!15839 (+!45 call!2138 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8161))))))

(declare-fun d!4485 () Bool)

(assert (=> d!4485 e!15841))

(declare-fun res!14928 () Bool)

(assert (=> d!4485 (=> (not res!14928) (not e!15841))))

(assert (=> d!4485 (= res!14928 (or (bvsge #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))))))))

(declare-fun lt!9313 () ListLongMap!567)

(assert (=> d!4485 (= lt!9323 lt!9313)))

(declare-fun lt!9322 () Unit!512)

(assert (=> d!4485 (= lt!9322 e!15838)))

(declare-fun c!3292 () Bool)

(assert (=> d!4485 (= c!3292 e!15846)))

(declare-fun res!14930 () Bool)

(assert (=> d!4485 (=> (not res!14930) (not e!15846))))

(assert (=> d!4485 (= res!14930 (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))))))

(assert (=> d!4485 (= lt!9313 e!15839)))

(assert (=> d!4485 (= c!3289 (and (not (= (bvand lt!8244 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!8244 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!4485 (validMask!0 (mask!4730 lt!8161))))

(assert (=> d!4485 (= (getCurrentListMap!130 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) lt!8244 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)) lt!9323)))

(declare-fun b!24501 () Bool)

(declare-fun Unit!576 () Unit!512)

(assert (=> b!24501 (= e!15838 Unit!576)))

(declare-fun b!24502 () Bool)

(assert (=> b!24502 (= e!15845 (= (apply!29 lt!9323 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000)) (get!390 (select (arr!607 (_values!1729 lt!8161)) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 lt!8161) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!24502 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!703 (_values!1729 lt!8161))))))

(assert (=> b!24502 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))))))

(assert (= (and d!4485 c!3289) b!24489))

(assert (= (and d!4485 (not c!3289)) b!24499))

(assert (= (and b!24499 c!3293) b!24490))

(assert (= (and b!24499 (not c!3293)) b!24495))

(assert (= (and b!24495 c!3291) b!24487))

(assert (= (and b!24495 (not c!3291)) b!24493))

(assert (= (or b!24487 b!24493) bm!2137))

(assert (= (or b!24490 bm!2137) bm!2136))

(assert (= (or b!24490 b!24487) bm!2138))

(assert (= (or b!24489 bm!2136) bm!2135))

(assert (= (or b!24489 bm!2138) bm!2139))

(assert (= (and d!4485 res!14930) b!24500))

(assert (= (and d!4485 c!3292) b!24483))

(assert (= (and d!4485 (not c!3292)) b!24501))

(assert (= (and d!4485 res!14928) b!24488))

(assert (= (and b!24488 res!14933) b!24496))

(assert (= (and b!24488 (not res!14929)) b!24482))

(assert (= (and b!24482 res!14936) b!24502))

(assert (= (and b!24488 res!14934) b!24484))

(assert (= (and b!24484 c!3290) b!24491))

(assert (= (and b!24484 (not c!3290)) b!24486))

(assert (= (and b!24491 res!14935) b!24498))

(assert (= (or b!24491 b!24486) bm!2133))

(assert (= (and b!24484 res!14931) b!24492))

(assert (= (and b!24492 c!3288) b!24497))

(assert (= (and b!24492 (not c!3288)) b!24485))

(assert (= (and b!24497 res!14932) b!24494))

(assert (= (or b!24497 b!24485) bm!2134))

(declare-fun b_lambda!1627 () Bool)

(assert (=> (not b_lambda!1627) (not b!24502)))

(assert (=> b!24502 t!3244))

(declare-fun b_and!1533 () Bool)

(assert (= b_and!1531 (and (=> t!3244 result!1101) b_and!1533)))

(declare-fun m!19105 () Bool)

(assert (=> bm!2135 m!19105))

(declare-fun m!19107 () Bool)

(assert (=> b!24498 m!19107))

(assert (=> b!24500 m!16936))

(assert (=> b!24500 m!16936))

(assert (=> b!24500 m!17202))

(assert (=> d!4485 m!17182))

(assert (=> b!24482 m!16936))

(assert (=> b!24482 m!16936))

(declare-fun m!19109 () Bool)

(assert (=> b!24482 m!19109))

(declare-fun m!19111 () Bool)

(assert (=> b!24483 m!19111))

(declare-fun m!19113 () Bool)

(assert (=> b!24483 m!19113))

(declare-fun m!19115 () Bool)

(assert (=> b!24483 m!19115))

(assert (=> b!24483 m!19113))

(declare-fun m!19117 () Bool)

(assert (=> b!24483 m!19117))

(declare-fun m!19119 () Bool)

(assert (=> b!24483 m!19119))

(declare-fun m!19121 () Bool)

(assert (=> b!24483 m!19121))

(declare-fun m!19123 () Bool)

(assert (=> b!24483 m!19123))

(declare-fun m!19125 () Bool)

(assert (=> b!24483 m!19125))

(declare-fun m!19127 () Bool)

(assert (=> b!24483 m!19127))

(declare-fun m!19129 () Bool)

(assert (=> b!24483 m!19129))

(assert (=> b!24483 m!19115))

(declare-fun m!19131 () Bool)

(assert (=> b!24483 m!19131))

(declare-fun m!19133 () Bool)

(assert (=> b!24483 m!19133))

(assert (=> b!24483 m!19121))

(declare-fun m!19135 () Bool)

(assert (=> b!24483 m!19135))

(assert (=> b!24483 m!16936))

(declare-fun m!19137 () Bool)

(assert (=> b!24483 m!19137))

(assert (=> b!24483 m!19105))

(declare-fun m!19139 () Bool)

(assert (=> b!24483 m!19139))

(assert (=> b!24483 m!19127))

(assert (=> b!24496 m!16936))

(assert (=> b!24496 m!16936))

(assert (=> b!24496 m!17202))

(assert (=> b!24502 m!17503))

(assert (=> b!24502 m!17503))

(assert (=> b!24502 m!17238))

(assert (=> b!24502 m!17505))

(assert (=> b!24502 m!17238))

(assert (=> b!24502 m!16936))

(declare-fun m!19141 () Bool)

(assert (=> b!24502 m!19141))

(assert (=> b!24502 m!16936))

(declare-fun m!19143 () Bool)

(assert (=> bm!2134 m!19143))

(declare-fun m!19145 () Bool)

(assert (=> bm!2133 m!19145))

(declare-fun m!19147 () Bool)

(assert (=> b!24489 m!19147))

(declare-fun m!19149 () Bool)

(assert (=> b!24494 m!19149))

(declare-fun m!19151 () Bool)

(assert (=> bm!2139 m!19151))

(assert (=> d!4073 d!4485))

(declare-fun d!4487 () Bool)

(declare-fun e!15850 () Bool)

(assert (=> d!4487 e!15850))

(declare-fun res!14937 () Bool)

(assert (=> d!4487 (=> (not res!14937) (not e!15850))))

(declare-fun lt!9330 () ListLongMap!567)

(assert (=> d!4487 (= res!14937 (contains!230 lt!9330 (_1!489 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(declare-fun lt!9329 () List!568)

(assert (=> d!4487 (= lt!9330 (ListLongMap!568 lt!9329))))

(declare-fun lt!9328 () Unit!512)

(declare-fun lt!9331 () Unit!512)

(assert (=> d!4487 (= lt!9328 lt!9331)))

(assert (=> d!4487 (= (getValueByKey!61 lt!9329 (_1!489 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (Some!66 (_2!489 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(assert (=> d!4487 (= lt!9331 (lemmaContainsTupThenGetReturnValue!18 lt!9329 (_1!489 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (_2!489 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(assert (=> d!4487 (= lt!9329 (insertStrictlySorted!18 (toList!299 (getCurrentListMap!130 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161))) (_1!489 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (_2!489 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(assert (=> d!4487 (= (+!45 (getCurrentListMap!130 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) lt!9330)))

(declare-fun b!24503 () Bool)

(declare-fun res!14938 () Bool)

(assert (=> b!24503 (=> (not res!14938) (not e!15850))))

(assert (=> b!24503 (= res!14938 (= (getValueByKey!61 (toList!299 lt!9330) (_1!489 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (Some!66 (_2!489 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(declare-fun b!24504 () Bool)

(assert (=> b!24504 (= e!15850 (contains!232 (toList!299 lt!9330) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(assert (= (and d!4487 res!14937) b!24503))

(assert (= (and b!24503 res!14938) b!24504))

(declare-fun m!19153 () Bool)

(assert (=> d!4487 m!19153))

(declare-fun m!19155 () Bool)

(assert (=> d!4487 m!19155))

(declare-fun m!19157 () Bool)

(assert (=> d!4487 m!19157))

(declare-fun m!19159 () Bool)

(assert (=> d!4487 m!19159))

(declare-fun m!19161 () Bool)

(assert (=> b!24503 m!19161))

(declare-fun m!19163 () Bool)

(assert (=> b!24504 m!19163))

(assert (=> d!4073 d!4487))

(assert (=> d!4073 d!4239))

(declare-fun d!4489 () Bool)

(assert (=> d!4489 (= (+!45 (getCurrentListMap!130 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (getCurrentListMap!130 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) lt!8244 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))))

(assert (=> d!4489 true))

(declare-fun _$7!38 () Unit!512)

(assert (=> d!4489 (= (choose!205 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) lt!8244 (zeroValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 lt!8161) (defaultEntry!1743 lt!8161)) _$7!38)))

(declare-fun bs!1011 () Bool)

(assert (= bs!1011 d!4489))

(assert (=> bs!1011 m!16790))

(assert (=> bs!1011 m!16790))

(assert (=> bs!1011 m!17443))

(assert (=> bs!1011 m!17441))

(assert (=> d!4073 d!4489))

(declare-fun b!24505 () Bool)

(declare-fun e!15851 () Bool)

(declare-fun e!15852 () Bool)

(assert (=> b!24505 (= e!15851 e!15852)))

(declare-fun c!3294 () Bool)

(assert (=> b!24505 (= c!3294 (validKeyInArray!0 (select (arr!608 (_keys!3164 (_2!487 lt!8276))) #b00000000000000000000000000000000)))))

(declare-fun d!4491 () Bool)

(declare-fun res!14939 () Bool)

(assert (=> d!4491 (=> res!14939 e!15851)))

(assert (=> d!4491 (= res!14939 (bvsge #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8276)))))))

(assert (=> d!4491 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3164 (_2!487 lt!8276)) (mask!4730 (_2!487 lt!8276))) e!15851)))

(declare-fun b!24506 () Bool)

(declare-fun e!15853 () Bool)

(declare-fun call!2143 () Bool)

(assert (=> b!24506 (= e!15853 call!2143)))

(declare-fun bm!2140 () Bool)

(assert (=> bm!2140 (= call!2143 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3164 (_2!487 lt!8276)) (mask!4730 (_2!487 lt!8276))))))

(declare-fun b!24507 () Bool)

(assert (=> b!24507 (= e!15852 call!2143)))

(declare-fun b!24508 () Bool)

(assert (=> b!24508 (= e!15852 e!15853)))

(declare-fun lt!9332 () (_ BitVec 64))

(assert (=> b!24508 (= lt!9332 (select (arr!608 (_keys!3164 (_2!487 lt!8276))) #b00000000000000000000000000000000))))

(declare-fun lt!9334 () Unit!512)

(assert (=> b!24508 (= lt!9334 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3164 (_2!487 lt!8276)) lt!9332 #b00000000000000000000000000000000))))

(assert (=> b!24508 (arrayContainsKey!0 (_keys!3164 (_2!487 lt!8276)) lt!9332 #b00000000000000000000000000000000)))

(declare-fun lt!9333 () Unit!512)

(assert (=> b!24508 (= lt!9333 lt!9334)))

(declare-fun res!14940 () Bool)

(assert (=> b!24508 (= res!14940 (= (seekEntryOrOpen!0 (select (arr!608 (_keys!3164 (_2!487 lt!8276))) #b00000000000000000000000000000000) (_keys!3164 (_2!487 lt!8276)) (mask!4730 (_2!487 lt!8276))) (Found!54 #b00000000000000000000000000000000)))))

(assert (=> b!24508 (=> (not res!14940) (not e!15853))))

(assert (= (and d!4491 (not res!14939)) b!24505))

(assert (= (and b!24505 c!3294) b!24508))

(assert (= (and b!24505 (not c!3294)) b!24507))

(assert (= (and b!24508 res!14940) b!24506))

(assert (= (or b!24506 b!24507) bm!2140))

(assert (=> b!24505 m!18555))

(assert (=> b!24505 m!18555))

(assert (=> b!24505 m!18557))

(declare-fun m!19165 () Bool)

(assert (=> bm!2140 m!19165))

(assert (=> b!24508 m!18555))

(declare-fun m!19167 () Bool)

(assert (=> b!24508 m!19167))

(declare-fun m!19169 () Bool)

(assert (=> b!24508 m!19169))

(assert (=> b!24508 m!18555))

(declare-fun m!19171 () Bool)

(assert (=> b!24508 m!19171))

(assert (=> b!23614 d!4491))

(declare-fun d!4493 () Bool)

(declare-fun lt!9335 () Bool)

(assert (=> d!4493 (= lt!9335 (select (content!15 (toList!299 lt!8521)) (ite c!2998 (ite c!2997 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(declare-fun e!15854 () Bool)

(assert (=> d!4493 (= lt!9335 e!15854)))

(declare-fun res!14942 () Bool)

(assert (=> d!4493 (=> (not res!14942) (not e!15854))))

(assert (=> d!4493 (= res!14942 ((_ is Cons!564) (toList!299 lt!8521)))))

(assert (=> d!4493 (= (contains!232 (toList!299 lt!8521) (ite c!2998 (ite c!2997 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) lt!9335)))

(declare-fun b!24509 () Bool)

(declare-fun e!15855 () Bool)

(assert (=> b!24509 (= e!15854 e!15855)))

(declare-fun res!14941 () Bool)

(assert (=> b!24509 (=> res!14941 e!15855)))

(assert (=> b!24509 (= res!14941 (= (h!1130 (toList!299 lt!8521)) (ite c!2998 (ite c!2997 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(declare-fun b!24510 () Bool)

(assert (=> b!24510 (= e!15855 (contains!232 (t!3239 (toList!299 lt!8521)) (ite c!2998 (ite c!2997 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(assert (= (and d!4493 res!14942) b!24509))

(assert (= (and b!24509 (not res!14941)) b!24510))

(declare-fun m!19173 () Bool)

(assert (=> d!4493 m!19173))

(declare-fun m!19175 () Bool)

(assert (=> d!4493 m!19175))

(declare-fun m!19177 () Bool)

(assert (=> b!24510 m!19177))

(assert (=> b!23610 d!4493))

(declare-fun d!4495 () Bool)

(assert (=> d!4495 (= (isDefined!23 (getValueByKey!61 (toList!299 (getCurrentListMap!130 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161))) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) (not (isEmpty!173 (getValueByKey!61 (toList!299 (getCurrentListMap!130 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161))) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun bs!1012 () Bool)

(assert (= bs!1012 d!4495))

(assert (=> bs!1012 m!17463))

(declare-fun m!19179 () Bool)

(assert (=> bs!1012 m!19179))

(assert (=> b!23767 d!4495))

(declare-fun c!3295 () Bool)

(declare-fun d!4497 () Bool)

(assert (=> d!4497 (= c!3295 (and ((_ is Cons!564) (toList!299 (getCurrentListMap!130 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))) (= (_1!489 (h!1130 (toList!299 (getCurrentListMap!130 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161))))) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun e!15856 () Option!67)

(assert (=> d!4497 (= (getValueByKey!61 (toList!299 (getCurrentListMap!130 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161))) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) e!15856)))

(declare-fun b!24511 () Bool)

(assert (=> b!24511 (= e!15856 (Some!66 (_2!489 (h!1130 (toList!299 (getCurrentListMap!130 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))))))))

(declare-fun b!24514 () Bool)

(declare-fun e!15857 () Option!67)

(assert (=> b!24514 (= e!15857 None!65)))

(declare-fun b!24512 () Bool)

(assert (=> b!24512 (= e!15856 e!15857)))

(declare-fun c!3296 () Bool)

(assert (=> b!24512 (= c!3296 (and ((_ is Cons!564) (toList!299 (getCurrentListMap!130 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))) (not (= (_1!489 (h!1130 (toList!299 (getCurrentListMap!130 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161))))) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!24513 () Bool)

(assert (=> b!24513 (= e!15857 (getValueByKey!61 (t!3239 (toList!299 (getCurrentListMap!130 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!4497 c!3295) b!24511))

(assert (= (and d!4497 (not c!3295)) b!24512))

(assert (= (and b!24512 c!3296) b!24513))

(assert (= (and b!24512 (not c!3296)) b!24514))

(declare-fun m!19181 () Bool)

(assert (=> b!24513 m!19181))

(assert (=> b!23767 d!4497))

(declare-fun d!4499 () Bool)

(assert (=> d!4499 (= (isDefined!23 (getValueByKey!61 (toList!299 e!15161) (ite c!2996 #b1000000000000000000000000000000000000000000000000000000000000000 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) (index!2338 lt!8281))))) (not (isEmpty!173 (getValueByKey!61 (toList!299 e!15161) (ite c!2996 #b1000000000000000000000000000000000000000000000000000000000000000 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) (index!2338 lt!8281)))))))))

(declare-fun bs!1013 () Bool)

(assert (= bs!1013 d!4499))

(assert (=> bs!1013 m!17329))

(declare-fun m!19183 () Bool)

(assert (=> bs!1013 m!19183))

(assert (=> b!23686 d!4499))

(declare-fun d!4501 () Bool)

(declare-fun c!3297 () Bool)

(assert (=> d!4501 (= c!3297 (and ((_ is Cons!564) (toList!299 e!15161)) (= (_1!489 (h!1130 (toList!299 e!15161))) (ite c!2996 #b1000000000000000000000000000000000000000000000000000000000000000 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) (index!2338 lt!8281))))))))

(declare-fun e!15858 () Option!67)

(assert (=> d!4501 (= (getValueByKey!61 (toList!299 e!15161) (ite c!2996 #b1000000000000000000000000000000000000000000000000000000000000000 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) (index!2338 lt!8281)))) e!15858)))

(declare-fun b!24515 () Bool)

(assert (=> b!24515 (= e!15858 (Some!66 (_2!489 (h!1130 (toList!299 e!15161)))))))

(declare-fun b!24518 () Bool)

(declare-fun e!15859 () Option!67)

(assert (=> b!24518 (= e!15859 None!65)))

(declare-fun b!24516 () Bool)

(assert (=> b!24516 (= e!15858 e!15859)))

(declare-fun c!3298 () Bool)

(assert (=> b!24516 (= c!3298 (and ((_ is Cons!564) (toList!299 e!15161)) (not (= (_1!489 (h!1130 (toList!299 e!15161))) (ite c!2996 #b1000000000000000000000000000000000000000000000000000000000000000 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) (index!2338 lt!8281)))))))))

(declare-fun b!24517 () Bool)

(assert (=> b!24517 (= e!15859 (getValueByKey!61 (t!3239 (toList!299 e!15161)) (ite c!2996 #b1000000000000000000000000000000000000000000000000000000000000000 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) (index!2338 lt!8281)))))))

(assert (= (and d!4501 c!3297) b!24515))

(assert (= (and d!4501 (not c!3297)) b!24516))

(assert (= (and b!24516 c!3298) b!24517))

(assert (= (and b!24516 (not c!3298)) b!24518))

(declare-fun m!19185 () Bool)

(assert (=> b!24517 m!19185))

(assert (=> b!23686 d!4501))

(declare-fun d!4503 () Bool)

(assert (=> d!4503 (= (inRange!0 (ite c!3089 (index!2337 lt!8579) (index!2340 lt!8579)) (mask!4730 lt!8161)) (and (bvsge (ite c!3089 (index!2337 lt!8579) (index!2340 lt!8579)) #b00000000000000000000000000000000) (bvslt (ite c!3089 (index!2337 lt!8579) (index!2340 lt!8579)) (bvadd (mask!4730 lt!8161) #b00000000000000000000000000000001))))))

(assert (=> bm!2013 d!4503))

(declare-fun d!4505 () Bool)

(assert (=> d!4505 (isDefined!23 (getValueByKey!61 (toList!299 call!1928) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun lt!9338 () Unit!512)

(declare-fun choose!215 (List!568 (_ BitVec 64)) Unit!512)

(assert (=> d!4505 (= lt!9338 (choose!215 (toList!299 call!1928) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!15862 () Bool)

(assert (=> d!4505 e!15862))

(declare-fun res!14945 () Bool)

(assert (=> d!4505 (=> (not res!14945) (not e!15862))))

(assert (=> d!4505 (= res!14945 (isStrictlySorted!171 (toList!299 call!1928)))))

(assert (=> d!4505 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!299 call!1928) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) lt!9338)))

(declare-fun b!24521 () Bool)

(assert (=> b!24521 (= e!15862 (containsKey!25 (toList!299 call!1928) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!4505 res!14945) b!24521))

(assert (=> d!4505 m!17054))

(assert (=> d!4505 m!17054))

(assert (=> d!4505 m!17056))

(declare-fun m!19187 () Bool)

(assert (=> d!4505 m!19187))

(declare-fun m!19189 () Bool)

(assert (=> d!4505 m!19189))

(assert (=> b!24521 m!17050))

(assert (=> b!23548 d!4505))

(assert (=> b!23548 d!4289))

(assert (=> b!23548 d!4291))

(declare-fun d!4507 () Bool)

(declare-fun e!15863 () Bool)

(assert (=> d!4507 e!15863))

(declare-fun res!14946 () Bool)

(assert (=> d!4507 (=> res!14946 e!15863)))

(declare-fun lt!9339 () Bool)

(assert (=> d!4507 (= res!14946 (not lt!9339))))

(declare-fun lt!9340 () Bool)

(assert (=> d!4507 (= lt!9339 lt!9340)))

(declare-fun lt!9341 () Unit!512)

(declare-fun e!15864 () Unit!512)

(assert (=> d!4507 (= lt!9341 e!15864)))

(declare-fun c!3299 () Bool)

(assert (=> d!4507 (= c!3299 lt!9340)))

(assert (=> d!4507 (= lt!9340 (containsKey!25 (toList!299 lt!8692) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!4507 (= (contains!230 lt!8692 #b1000000000000000000000000000000000000000000000000000000000000000) lt!9339)))

(declare-fun b!24522 () Bool)

(declare-fun lt!9342 () Unit!512)

(assert (=> b!24522 (= e!15864 lt!9342)))

(assert (=> b!24522 (= lt!9342 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!299 lt!8692) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!24522 (isDefined!23 (getValueByKey!61 (toList!299 lt!8692) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24523 () Bool)

(declare-fun Unit!577 () Unit!512)

(assert (=> b!24523 (= e!15864 Unit!577)))

(declare-fun b!24524 () Bool)

(assert (=> b!24524 (= e!15863 (isDefined!23 (getValueByKey!61 (toList!299 lt!8692) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!4507 c!3299) b!24522))

(assert (= (and d!4507 (not c!3299)) b!24523))

(assert (= (and d!4507 (not res!14946)) b!24524))

(declare-fun m!19191 () Bool)

(assert (=> d!4507 m!19191))

(declare-fun m!19193 () Bool)

(assert (=> b!24522 m!19193))

(declare-fun m!19195 () Bool)

(assert (=> b!24522 m!19195))

(assert (=> b!24522 m!19195))

(declare-fun m!19197 () Bool)

(assert (=> b!24522 m!19197))

(assert (=> b!24524 m!19195))

(assert (=> b!24524 m!19195))

(assert (=> b!24524 m!19197))

(assert (=> bm!2028 d!4507))

(declare-fun d!4509 () Bool)

(assert (=> d!4509 (= (apply!29 lt!8692 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000)) (get!391 (getValueByKey!61 (toList!299 lt!8692) (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000))))))

(declare-fun bs!1014 () Bool)

(assert (= bs!1014 d!4509))

(assert (=> bs!1014 m!16986))

(assert (=> bs!1014 m!18591))

(assert (=> bs!1014 m!18591))

(declare-fun m!19199 () Bool)

(assert (=> bs!1014 m!19199))

(assert (=> b!23758 d!4509))

(declare-fun d!4511 () Bool)

(declare-fun c!3300 () Bool)

(assert (=> d!4511 (= c!3300 ((_ is ValueCellFull!312) (select (arr!607 (_values!1729 (_2!487 lt!8158))) #b00000000000000000000000000000000)))))

(declare-fun e!15865 () V!1189)

(assert (=> d!4511 (= (get!390 (select (arr!607 (_values!1729 (_2!487 lt!8158))) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (_2!487 lt!8158)) #b0000000000000000000000000000000000000000000000000000000000000000)) e!15865)))

(declare-fun b!24525 () Bool)

(assert (=> b!24525 (= e!15865 (get!392 (select (arr!607 (_values!1729 (_2!487 lt!8158))) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (_2!487 lt!8158)) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!24526 () Bool)

(assert (=> b!24526 (= e!15865 (get!393 (select (arr!607 (_values!1729 (_2!487 lt!8158))) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (_2!487 lt!8158)) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!4511 c!3300) b!24525))

(assert (= (and d!4511 (not c!3300)) b!24526))

(assert (=> b!24525 m!17425))

(assert (=> b!24525 m!17026))

(declare-fun m!19201 () Bool)

(assert (=> b!24525 m!19201))

(assert (=> b!24526 m!17425))

(assert (=> b!24526 m!17026))

(declare-fun m!19203 () Bool)

(assert (=> b!24526 m!19203))

(assert (=> b!23758 d!4511))

(declare-fun b!24527 () Bool)

(declare-fun e!15866 () Bool)

(declare-fun call!2144 () Bool)

(assert (=> b!24527 (= e!15866 call!2144)))

(declare-fun d!4513 () Bool)

(declare-fun res!14948 () Bool)

(declare-fun e!15867 () Bool)

(assert (=> d!4513 (=> res!14948 e!15867)))

(assert (=> d!4513 (= res!14948 (bvsge #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))))))

(assert (=> d!4513 (= (arrayNoDuplicates!0 (_keys!3164 lt!8161) #b00000000000000000000000000000000 Nil!566) e!15867)))

(declare-fun b!24528 () Bool)

(declare-fun e!15869 () Bool)

(assert (=> b!24528 (= e!15869 e!15866)))

(declare-fun c!3301 () Bool)

(assert (=> b!24528 (= c!3301 (validKeyInArray!0 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000)))))

(declare-fun b!24529 () Bool)

(assert (=> b!24529 (= e!15866 call!2144)))

(declare-fun b!24530 () Bool)

(declare-fun e!15868 () Bool)

(assert (=> b!24530 (= e!15868 (contains!231 Nil!566 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000)))))

(declare-fun bm!2141 () Bool)

(assert (=> bm!2141 (= call!2144 (arrayNoDuplicates!0 (_keys!3164 lt!8161) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!3301 (Cons!565 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000) Nil!566) Nil!566)))))

(declare-fun b!24531 () Bool)

(assert (=> b!24531 (= e!15867 e!15869)))

(declare-fun res!14947 () Bool)

(assert (=> b!24531 (=> (not res!14947) (not e!15869))))

(assert (=> b!24531 (= res!14947 (not e!15868))))

(declare-fun res!14949 () Bool)

(assert (=> b!24531 (=> (not res!14949) (not e!15868))))

(assert (=> b!24531 (= res!14949 (validKeyInArray!0 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000)))))

(assert (= (and d!4513 (not res!14948)) b!24531))

(assert (= (and b!24531 res!14949) b!24530))

(assert (= (and b!24531 res!14947) b!24528))

(assert (= (and b!24528 c!3301) b!24529))

(assert (= (and b!24528 (not c!3301)) b!24527))

(assert (= (or b!24529 b!24527) bm!2141))

(assert (=> b!24528 m!16936))

(assert (=> b!24528 m!16936))

(assert (=> b!24528 m!17202))

(assert (=> b!24530 m!16936))

(assert (=> b!24530 m!16936))

(declare-fun m!19205 () Bool)

(assert (=> b!24530 m!19205))

(assert (=> bm!2141 m!16936))

(declare-fun m!19207 () Bool)

(assert (=> bm!2141 m!19207))

(assert (=> b!24531 m!16936))

(assert (=> b!24531 m!16936))

(assert (=> b!24531 m!17202))

(assert (=> b!23794 d!4513))

(declare-fun d!4515 () Bool)

(assert (=> d!4515 (= (apply!29 lt!8447 #b1000000000000000000000000000000000000000000000000000000000000000) (get!391 (getValueByKey!61 (toList!299 lt!8447) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!1015 () Bool)

(assert (= bs!1015 d!4515))

(assert (=> bs!1015 m!18695))

(assert (=> bs!1015 m!18695))

(declare-fun m!19209 () Bool)

(assert (=> bs!1015 m!19209))

(assert (=> b!23509 d!4515))

(declare-fun b!24532 () Bool)

(declare-fun e!15870 () Bool)

(declare-fun call!2145 () Bool)

(assert (=> b!24532 (= e!15870 call!2145)))

(declare-fun d!4517 () Bool)

(declare-fun res!14951 () Bool)

(declare-fun e!15871 () Bool)

(assert (=> d!4517 (=> res!14951 e!15871)))

(assert (=> d!4517 (= res!14951 (bvsge #b00000000000000000000000000000000 (size!704 (_keys!3164 (v!1604 (underlying!116 thiss!938))))))))

(assert (=> d!4517 (= (arrayNoDuplicates!0 (_keys!3164 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000000000000000 Nil!566) e!15871)))

(declare-fun b!24533 () Bool)

(declare-fun e!15873 () Bool)

(assert (=> b!24533 (= e!15873 e!15870)))

(declare-fun c!3302 () Bool)

(assert (=> b!24533 (= c!3302 (validKeyInArray!0 (select (arr!608 (_keys!3164 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000000)))))

(declare-fun b!24534 () Bool)

(assert (=> b!24534 (= e!15870 call!2145)))

(declare-fun b!24535 () Bool)

(declare-fun e!15872 () Bool)

(assert (=> b!24535 (= e!15872 (contains!231 Nil!566 (select (arr!608 (_keys!3164 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000000)))))

(declare-fun bm!2142 () Bool)

(assert (=> bm!2142 (= call!2145 (arrayNoDuplicates!0 (_keys!3164 (v!1604 (underlying!116 thiss!938))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!3302 (Cons!565 (select (arr!608 (_keys!3164 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000000) Nil!566) Nil!566)))))

(declare-fun b!24536 () Bool)

(assert (=> b!24536 (= e!15871 e!15873)))

(declare-fun res!14950 () Bool)

(assert (=> b!24536 (=> (not res!14950) (not e!15873))))

(assert (=> b!24536 (= res!14950 (not e!15872))))

(declare-fun res!14952 () Bool)

(assert (=> b!24536 (=> (not res!14952) (not e!15872))))

(assert (=> b!24536 (= res!14952 (validKeyInArray!0 (select (arr!608 (_keys!3164 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000000)))))

(assert (= (and d!4517 (not res!14951)) b!24536))

(assert (= (and b!24536 res!14952) b!24535))

(assert (= (and b!24536 res!14950) b!24533))

(assert (= (and b!24533 c!3302) b!24534))

(assert (= (and b!24533 (not c!3302)) b!24532))

(assert (= (or b!24534 b!24532) bm!2142))

(declare-fun m!19211 () Bool)

(assert (=> b!24533 m!19211))

(assert (=> b!24533 m!19211))

(declare-fun m!19213 () Bool)

(assert (=> b!24533 m!19213))

(assert (=> b!24535 m!19211))

(assert (=> b!24535 m!19211))

(declare-fun m!19215 () Bool)

(assert (=> b!24535 m!19215))

(assert (=> bm!2142 m!19211))

(declare-fun m!19217 () Bool)

(assert (=> bm!2142 m!19217))

(assert (=> b!24536 m!19211))

(assert (=> b!24536 m!19211))

(assert (=> b!24536 m!19213))

(assert (=> b!23669 d!4517))

(assert (=> b!23786 d!4125))

(assert (=> b!23515 d!4221))

(declare-fun b!24537 () Bool)

(declare-fun e!15874 () Bool)

(declare-fun call!2146 () Bool)

(assert (=> b!24537 (= e!15874 call!2146)))

(declare-fun d!4519 () Bool)

(declare-fun res!14954 () Bool)

(declare-fun e!15875 () Bool)

(assert (=> d!4519 (=> res!14954 e!15875)))

(assert (=> d!4519 (= res!14954 (bvsge #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8249)))))))

(assert (=> d!4519 (= (arrayNoDuplicates!0 (_keys!3164 (_2!487 lt!8249)) #b00000000000000000000000000000000 Nil!566) e!15875)))

(declare-fun b!24538 () Bool)

(declare-fun e!15877 () Bool)

(assert (=> b!24538 (= e!15877 e!15874)))

(declare-fun c!3303 () Bool)

(assert (=> b!24538 (= c!3303 (validKeyInArray!0 (select (arr!608 (_keys!3164 (_2!487 lt!8249))) #b00000000000000000000000000000000)))))

(declare-fun b!24539 () Bool)

(assert (=> b!24539 (= e!15874 call!2146)))

(declare-fun b!24540 () Bool)

(declare-fun e!15876 () Bool)

(assert (=> b!24540 (= e!15876 (contains!231 Nil!566 (select (arr!608 (_keys!3164 (_2!487 lt!8249))) #b00000000000000000000000000000000)))))

(declare-fun bm!2143 () Bool)

(assert (=> bm!2143 (= call!2146 (arrayNoDuplicates!0 (_keys!3164 (_2!487 lt!8249)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!3303 (Cons!565 (select (arr!608 (_keys!3164 (_2!487 lt!8249))) #b00000000000000000000000000000000) Nil!566) Nil!566)))))

(declare-fun b!24541 () Bool)

(assert (=> b!24541 (= e!15875 e!15877)))

(declare-fun res!14953 () Bool)

(assert (=> b!24541 (=> (not res!14953) (not e!15877))))

(assert (=> b!24541 (= res!14953 (not e!15876))))

(declare-fun res!14955 () Bool)

(assert (=> b!24541 (=> (not res!14955) (not e!15876))))

(assert (=> b!24541 (= res!14955 (validKeyInArray!0 (select (arr!608 (_keys!3164 (_2!487 lt!8249))) #b00000000000000000000000000000000)))))

(assert (= (and d!4519 (not res!14954)) b!24541))

(assert (= (and b!24541 res!14955) b!24540))

(assert (= (and b!24541 res!14953) b!24538))

(assert (= (and b!24538 c!3303) b!24539))

(assert (= (and b!24538 (not c!3303)) b!24537))

(assert (= (or b!24539 b!24537) bm!2143))

(declare-fun m!19219 () Bool)

(assert (=> b!24538 m!19219))

(assert (=> b!24538 m!19219))

(declare-fun m!19221 () Bool)

(assert (=> b!24538 m!19221))

(assert (=> b!24540 m!19219))

(assert (=> b!24540 m!19219))

(declare-fun m!19223 () Bool)

(assert (=> b!24540 m!19223))

(assert (=> bm!2143 m!19219))

(declare-fun m!19225 () Bool)

(assert (=> bm!2143 m!19225))

(assert (=> b!24541 m!19219))

(assert (=> b!24541 m!19219))

(assert (=> b!24541 m!19221))

(assert (=> b!23791 d!4519))

(declare-fun d!4521 () Bool)

(declare-fun e!15878 () Bool)

(assert (=> d!4521 e!15878))

(declare-fun res!14956 () Bool)

(assert (=> d!4521 (=> res!14956 e!15878)))

(declare-fun lt!9343 () Bool)

(assert (=> d!4521 (= res!14956 (not lt!9343))))

(declare-fun lt!9344 () Bool)

(assert (=> d!4521 (= lt!9343 lt!9344)))

(declare-fun lt!9345 () Unit!512)

(declare-fun e!15879 () Unit!512)

(assert (=> d!4521 (= lt!9345 e!15879)))

(declare-fun c!3304 () Bool)

(assert (=> d!4521 (= c!3304 lt!9344)))

(assert (=> d!4521 (= lt!9344 (containsKey!25 (toList!299 lt!8447) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!4521 (= (contains!230 lt!8447 #b0000000000000000000000000000000000000000000000000000000000000000) lt!9343)))

(declare-fun b!24542 () Bool)

(declare-fun lt!9346 () Unit!512)

(assert (=> b!24542 (= e!15879 lt!9346)))

(assert (=> b!24542 (= lt!9346 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!299 lt!8447) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!24542 (isDefined!23 (getValueByKey!61 (toList!299 lt!8447) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24543 () Bool)

(declare-fun Unit!578 () Unit!512)

(assert (=> b!24543 (= e!15879 Unit!578)))

(declare-fun b!24544 () Bool)

(assert (=> b!24544 (= e!15878 (isDefined!23 (getValueByKey!61 (toList!299 lt!8447) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!4521 c!3304) b!24542))

(assert (= (and d!4521 (not c!3304)) b!24543))

(assert (= (and d!4521 (not res!14956)) b!24544))

(declare-fun m!19227 () Bool)

(assert (=> d!4521 m!19227))

(declare-fun m!19229 () Bool)

(assert (=> b!24542 m!19229))

(declare-fun m!19231 () Bool)

(assert (=> b!24542 m!19231))

(assert (=> b!24542 m!19231))

(declare-fun m!19233 () Bool)

(assert (=> b!24542 m!19233))

(assert (=> b!24544 m!19231))

(assert (=> b!24544 m!19231))

(assert (=> b!24544 m!19233))

(assert (=> bm!1979 d!4521))

(assert (=> b!23737 d!4437))

(declare-fun d!4523 () Bool)

(declare-fun e!15880 () Bool)

(assert (=> d!4523 e!15880))

(declare-fun res!14957 () Bool)

(assert (=> d!4523 (=> (not res!14957) (not e!15880))))

(declare-fun lt!9349 () ListLongMap!567)

(assert (=> d!4523 (= res!14957 (contains!230 lt!9349 (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(declare-fun lt!9348 () List!568)

(assert (=> d!4523 (= lt!9349 (ListLongMap!568 lt!9348))))

(declare-fun lt!9347 () Unit!512)

(declare-fun lt!9350 () Unit!512)

(assert (=> d!4523 (= lt!9347 lt!9350)))

(assert (=> d!4523 (= (getValueByKey!61 lt!9348 (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (Some!66 (_2!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(assert (=> d!4523 (= lt!9350 (lemmaContainsTupThenGetReturnValue!18 lt!9348 (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (_2!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(assert (=> d!4523 (= lt!9348 (insertStrictlySorted!18 (toList!299 (map!407 (_2!487 lt!8158))) (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (_2!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(assert (=> d!4523 (= (+!45 (map!407 (_2!487 lt!8158)) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) lt!9349)))

(declare-fun b!24545 () Bool)

(declare-fun res!14958 () Bool)

(assert (=> b!24545 (=> (not res!14958) (not e!15880))))

(assert (=> b!24545 (= res!14958 (= (getValueByKey!61 (toList!299 lt!9349) (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (Some!66 (_2!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(declare-fun b!24546 () Bool)

(assert (=> b!24546 (= e!15880 (contains!232 (toList!299 lt!9349) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))

(assert (= (and d!4523 res!14957) b!24545))

(assert (= (and b!24545 res!14958) b!24546))

(declare-fun m!19235 () Bool)

(assert (=> d!4523 m!19235))

(declare-fun m!19237 () Bool)

(assert (=> d!4523 m!19237))

(declare-fun m!19239 () Bool)

(assert (=> d!4523 m!19239))

(declare-fun m!19241 () Bool)

(assert (=> d!4523 m!19241))

(declare-fun m!19243 () Bool)

(assert (=> b!24545 m!19243))

(declare-fun m!19245 () Bool)

(assert (=> b!24546 m!19245))

(assert (=> b!23737 d!4523))

(assert (=> b!23737 d!4099))

(declare-fun d!4525 () Bool)

(assert (=> d!4525 (= (isDefined!23 (getValueByKey!61 (toList!299 call!1952) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!173 (getValueByKey!61 (toList!299 call!1952) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!1016 () Bool)

(assert (= bs!1016 d!4525))

(assert (=> bs!1016 m!17084))

(declare-fun m!19247 () Bool)

(assert (=> bs!1016 m!19247))

(assert (=> b!23583 d!4525))

(declare-fun d!4527 () Bool)

(declare-fun c!3305 () Bool)

(assert (=> d!4527 (= c!3305 (and ((_ is Cons!564) (toList!299 call!1952)) (= (_1!489 (h!1130 (toList!299 call!1952))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!15881 () Option!67)

(assert (=> d!4527 (= (getValueByKey!61 (toList!299 call!1952) #b1000000000000000000000000000000000000000000000000000000000000000) e!15881)))

(declare-fun b!24547 () Bool)

(assert (=> b!24547 (= e!15881 (Some!66 (_2!489 (h!1130 (toList!299 call!1952)))))))

(declare-fun b!24550 () Bool)

(declare-fun e!15882 () Option!67)

(assert (=> b!24550 (= e!15882 None!65)))

(declare-fun b!24548 () Bool)

(assert (=> b!24548 (= e!15881 e!15882)))

(declare-fun c!3306 () Bool)

(assert (=> b!24548 (= c!3306 (and ((_ is Cons!564) (toList!299 call!1952)) (not (= (_1!489 (h!1130 (toList!299 call!1952))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!24549 () Bool)

(assert (=> b!24549 (= e!15882 (getValueByKey!61 (t!3239 (toList!299 call!1952)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!4527 c!3305) b!24547))

(assert (= (and d!4527 (not c!3305)) b!24548))

(assert (= (and b!24548 c!3306) b!24549))

(assert (= (and b!24548 (not c!3306)) b!24550))

(declare-fun m!19249 () Bool)

(assert (=> b!24549 m!19249))

(assert (=> b!23583 d!4527))

(assert (=> b!23835 d!4445))

(declare-fun d!4529 () Bool)

(declare-fun e!15883 () Bool)

(assert (=> d!4529 e!15883))

(declare-fun res!14959 () Bool)

(assert (=> d!4529 (=> (not res!14959) (not e!15883))))

(declare-fun lt!9353 () ListLongMap!567)

(assert (=> d!4529 (= res!14959 (contains!230 lt!9353 (_1!489 (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(declare-fun lt!9352 () List!568)

(assert (=> d!4529 (= lt!9353 (ListLongMap!568 lt!9352))))

(declare-fun lt!9351 () Unit!512)

(declare-fun lt!9354 () Unit!512)

(assert (=> d!4529 (= lt!9351 lt!9354)))

(assert (=> d!4529 (= (getValueByKey!61 lt!9352 (_1!489 (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (Some!66 (_2!489 (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(assert (=> d!4529 (= lt!9354 (lemmaContainsTupThenGetReturnValue!18 lt!9352 (_1!489 (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (_2!489 (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(assert (=> d!4529 (= lt!9352 (insertStrictlySorted!18 (toList!299 (map!407 lt!8161)) (_1!489 (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (_2!489 (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(assert (=> d!4529 (= (+!45 (map!407 lt!8161) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) lt!9353)))

(declare-fun b!24551 () Bool)

(declare-fun res!14960 () Bool)

(assert (=> b!24551 (=> (not res!14960) (not e!15883))))

(assert (=> b!24551 (= res!14960 (= (getValueByKey!61 (toList!299 lt!9353) (_1!489 (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (Some!66 (_2!489 (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(declare-fun b!24552 () Bool)

(assert (=> b!24552 (= e!15883 (contains!232 (toList!299 lt!9353) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(assert (= (and d!4529 res!14959) b!24551))

(assert (= (and b!24551 res!14960) b!24552))

(declare-fun m!19251 () Bool)

(assert (=> d!4529 m!19251))

(declare-fun m!19253 () Bool)

(assert (=> d!4529 m!19253))

(declare-fun m!19255 () Bool)

(assert (=> d!4529 m!19255))

(declare-fun m!19257 () Bool)

(assert (=> d!4529 m!19257))

(declare-fun m!19259 () Bool)

(assert (=> b!24551 m!19259))

(declare-fun m!19261 () Bool)

(assert (=> b!24552 m!19261))

(assert (=> b!23835 d!4529))

(assert (=> b!23835 d!4115))

(assert (=> d!4095 d!4033))

(declare-fun d!4531 () Bool)

(declare-fun e!15884 () Bool)

(assert (=> d!4531 e!15884))

(declare-fun res!14961 () Bool)

(assert (=> d!4531 (=> (not res!14961) (not e!15884))))

(declare-fun lt!9355 () SeekEntryResult!54)

(assert (=> d!4531 (= res!14961 ((_ is Found!54) lt!9355))))

(assert (=> d!4531 (= lt!9355 (seekEntryOrOpen!0 #b1000000000000000000000000000000000000000000000000000000000000000 (_keys!3164 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158))))))

(assert (=> d!4531 true))

(declare-fun _$33!36 () Unit!512)

(assert (=> d!4531 (= (choose!208 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b1000000000000000000000000000000000000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))) _$33!36)))

(declare-fun b!24553 () Bool)

(declare-fun res!14962 () Bool)

(assert (=> b!24553 (=> (not res!14962) (not e!15884))))

(assert (=> b!24553 (= res!14962 (inRange!0 (index!2338 lt!9355) (mask!4730 (_2!487 lt!8158))))))

(declare-fun b!24554 () Bool)

(assert (=> b!24554 (= e!15884 (= (select (arr!608 (_keys!3164 (_2!487 lt!8158))) (index!2338 lt!9355)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!4531 res!14961) b!24553))

(assert (= (and b!24553 res!14962) b!24554))

(assert (=> d!4531 m!16890))

(declare-fun m!19263 () Bool)

(assert (=> b!24553 m!19263))

(declare-fun m!19265 () Bool)

(assert (=> b!24554 m!19265))

(assert (=> d!4095 d!4531))

(assert (=> d!4095 d!4145))

(assert (=> b!23616 d!4421))

(declare-fun d!4533 () Bool)

(assert (=> d!4533 (arrayContainsKey!0 lt!8341 lt!8374 #b00000000000000000000000000000000)))

(declare-fun lt!9356 () Unit!512)

(assert (=> d!4533 (= lt!9356 (choose!13 lt!8341 lt!8374 lt!8354))))

(assert (=> d!4533 (bvsge lt!8354 #b00000000000000000000000000000000)))

(assert (=> d!4533 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!8341 lt!8374 lt!8354) lt!9356)))

(declare-fun bs!1017 () Bool)

(assert (= bs!1017 d!4533))

(assert (=> bs!1017 m!16954))

(declare-fun m!19267 () Bool)

(assert (=> bs!1017 m!19267))

(assert (=> b!23430 d!4533))

(declare-fun d!4535 () Bool)

(declare-fun res!14963 () Bool)

(declare-fun e!15885 () Bool)

(assert (=> d!4535 (=> res!14963 e!15885)))

(assert (=> d!4535 (= res!14963 (= (select (arr!608 lt!8341) #b00000000000000000000000000000000) lt!8374))))

(assert (=> d!4535 (= (arrayContainsKey!0 lt!8341 lt!8374 #b00000000000000000000000000000000) e!15885)))

(declare-fun b!24555 () Bool)

(declare-fun e!15886 () Bool)

(assert (=> b!24555 (= e!15885 e!15886)))

(declare-fun res!14964 () Bool)

(assert (=> b!24555 (=> (not res!14964) (not e!15886))))

(assert (=> b!24555 (= res!14964 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!704 lt!8341)))))

(declare-fun b!24556 () Bool)

(assert (=> b!24556 (= e!15886 (arrayContainsKey!0 lt!8341 lt!8374 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!4535 (not res!14963)) b!24555))

(assert (= (and b!24555 res!14964) b!24556))

(declare-fun m!19269 () Bool)

(assert (=> d!4535 m!19269))

(declare-fun m!19271 () Bool)

(assert (=> b!24556 m!19271))

(assert (=> b!23430 d!4535))

(declare-fun b!24557 () Bool)

(declare-fun e!15888 () SeekEntryResult!54)

(declare-fun lt!9357 () SeekEntryResult!54)

(assert (=> b!24557 (= e!15888 (MissingZero!54 (index!2339 lt!9357)))))

(declare-fun b!24558 () Bool)

(declare-fun e!15889 () SeekEntryResult!54)

(assert (=> b!24558 (= e!15889 Undefined!54)))

(declare-fun b!24559 () Bool)

(declare-fun e!15887 () SeekEntryResult!54)

(assert (=> b!24559 (= e!15887 (Found!54 (index!2339 lt!9357)))))

(declare-fun d!4537 () Bool)

(declare-fun lt!9359 () SeekEntryResult!54)

(assert (=> d!4537 (and (or ((_ is Undefined!54) lt!9359) (not ((_ is Found!54) lt!9359)) (and (bvsge (index!2338 lt!9359) #b00000000000000000000000000000000) (bvslt (index!2338 lt!9359) (size!704 lt!8341)))) (or ((_ is Undefined!54) lt!9359) ((_ is Found!54) lt!9359) (not ((_ is MissingZero!54) lt!9359)) (and (bvsge (index!2337 lt!9359) #b00000000000000000000000000000000) (bvslt (index!2337 lt!9359) (size!704 lt!8341)))) (or ((_ is Undefined!54) lt!9359) ((_ is Found!54) lt!9359) ((_ is MissingZero!54) lt!9359) (not ((_ is MissingVacant!54) lt!9359)) (and (bvsge (index!2340 lt!9359) #b00000000000000000000000000000000) (bvslt (index!2340 lt!9359) (size!704 lt!8341)))) (or ((_ is Undefined!54) lt!9359) (ite ((_ is Found!54) lt!9359) (= (select (arr!608 lt!8341) (index!2338 lt!9359)) (select (arr!608 lt!8341) lt!8354)) (ite ((_ is MissingZero!54) lt!9359) (= (select (arr!608 lt!8341) (index!2337 lt!9359)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!54) lt!9359) (= (select (arr!608 lt!8341) (index!2340 lt!9359)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!4537 (= lt!9359 e!15889)))

(declare-fun c!3307 () Bool)

(assert (=> d!4537 (= c!3307 (and ((_ is Intermediate!54) lt!9357) (undefined!866 lt!9357)))))

(assert (=> d!4537 (= lt!9357 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!608 lt!8341) lt!8354) (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938))))) (select (arr!608 lt!8341) lt!8354) lt!8341 (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938))))))))

(assert (=> d!4537 (validMask!0 (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))))))

(assert (=> d!4537 (= (seekEntryOrOpen!0 (select (arr!608 lt!8341) lt!8354) lt!8341 (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938))))) lt!9359)))

(declare-fun b!24560 () Bool)

(assert (=> b!24560 (= e!15888 (seekKeyOrZeroReturnVacant!0 (x!5576 lt!9357) (index!2339 lt!9357) (index!2339 lt!9357) (select (arr!608 lt!8341) lt!8354) lt!8341 (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938))))))))

(declare-fun b!24561 () Bool)

(assert (=> b!24561 (= e!15889 e!15887)))

(declare-fun lt!9358 () (_ BitVec 64))

(assert (=> b!24561 (= lt!9358 (select (arr!608 lt!8341) (index!2339 lt!9357)))))

(declare-fun c!3309 () Bool)

(assert (=> b!24561 (= c!3309 (= lt!9358 (select (arr!608 lt!8341) lt!8354)))))

(declare-fun b!24562 () Bool)

(declare-fun c!3308 () Bool)

(assert (=> b!24562 (= c!3308 (= lt!9358 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!24562 (= e!15887 e!15888)))

(assert (= (and d!4537 c!3307) b!24558))

(assert (= (and d!4537 (not c!3307)) b!24561))

(assert (= (and b!24561 c!3309) b!24559))

(assert (= (and b!24561 (not c!3309)) b!24562))

(assert (= (and b!24562 c!3308) b!24557))

(assert (= (and b!24562 (not c!3308)) b!24560))

(declare-fun m!19273 () Bool)

(assert (=> d!4537 m!19273))

(assert (=> d!4537 m!16946))

(assert (=> d!4537 m!16750))

(declare-fun m!19275 () Bool)

(assert (=> d!4537 m!19275))

(declare-fun m!19277 () Bool)

(assert (=> d!4537 m!19277))

(assert (=> d!4537 m!16946))

(assert (=> d!4537 m!16750))

(assert (=> d!4537 m!19273))

(assert (=> d!4537 m!16750))

(assert (=> d!4537 m!16918))

(declare-fun m!19279 () Bool)

(assert (=> d!4537 m!19279))

(declare-fun m!19281 () Bool)

(assert (=> d!4537 m!19281))

(assert (=> b!24560 m!16946))

(assert (=> b!24560 m!16750))

(declare-fun m!19283 () Bool)

(assert (=> b!24560 m!19283))

(declare-fun m!19285 () Bool)

(assert (=> b!24561 m!19285))

(assert (=> b!23430 d!4537))

(declare-fun b!24575 () Bool)

(declare-fun c!3318 () Bool)

(declare-fun lt!9364 () (_ BitVec 64))

(assert (=> b!24575 (= c!3318 (= lt!9364 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!15897 () SeekEntryResult!54)

(declare-fun e!15896 () SeekEntryResult!54)

(assert (=> b!24575 (= e!15897 e!15896)))

(declare-fun d!4539 () Bool)

(declare-fun lt!9365 () SeekEntryResult!54)

(assert (=> d!4539 (and (or ((_ is Undefined!54) lt!9365) (not ((_ is Found!54) lt!9365)) (and (bvsge (index!2338 lt!9365) #b00000000000000000000000000000000) (bvslt (index!2338 lt!9365) (size!704 (_keys!3164 (_2!487 lt!8158)))))) (or ((_ is Undefined!54) lt!9365) ((_ is Found!54) lt!9365) (not ((_ is MissingVacant!54) lt!9365)) (not (= (index!2340 lt!9365) (index!2339 lt!8482))) (and (bvsge (index!2340 lt!9365) #b00000000000000000000000000000000) (bvslt (index!2340 lt!9365) (size!704 (_keys!3164 (_2!487 lt!8158)))))) (or ((_ is Undefined!54) lt!9365) (ite ((_ is Found!54) lt!9365) (= (select (arr!608 (_keys!3164 (_2!487 lt!8158))) (index!2338 lt!9365)) #b1000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!54) lt!9365) (= (index!2340 lt!9365) (index!2339 lt!8482)) (= (select (arr!608 (_keys!3164 (_2!487 lt!8158))) (index!2340 lt!9365)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!15898 () SeekEntryResult!54)

(assert (=> d!4539 (= lt!9365 e!15898)))

(declare-fun c!3317 () Bool)

(assert (=> d!4539 (= c!3317 (bvsge (x!5576 lt!8482) #b01111111111111111111111111111110))))

(assert (=> d!4539 (= lt!9364 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) (index!2339 lt!8482)))))

(assert (=> d!4539 (validMask!0 (mask!4730 (_2!487 lt!8158)))))

(assert (=> d!4539 (= (seekKeyOrZeroReturnVacant!0 (x!5576 lt!8482) (index!2339 lt!8482) (index!2339 lt!8482) #b1000000000000000000000000000000000000000000000000000000000000000 (_keys!3164 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158))) lt!9365)))

(declare-fun b!24576 () Bool)

(assert (=> b!24576 (= e!15897 (Found!54 (index!2339 lt!8482)))))

(declare-fun b!24577 () Bool)

(assert (=> b!24577 (= e!15898 Undefined!54)))

(declare-fun b!24578 () Bool)

(assert (=> b!24578 (= e!15898 e!15897)))

(declare-fun c!3316 () Bool)

(assert (=> b!24578 (= c!3316 (= lt!9364 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24579 () Bool)

(assert (=> b!24579 (= e!15896 (MissingVacant!54 (index!2339 lt!8482)))))

(declare-fun b!24580 () Bool)

(assert (=> b!24580 (= e!15896 (seekKeyOrZeroReturnVacant!0 (bvadd (x!5576 lt!8482) #b00000000000000000000000000000001) (nextIndex!0 (index!2339 lt!8482) (x!5576 lt!8482) (mask!4730 (_2!487 lt!8158))) (index!2339 lt!8482) #b1000000000000000000000000000000000000000000000000000000000000000 (_keys!3164 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158))))))

(assert (= (and d!4539 c!3317) b!24577))

(assert (= (and d!4539 (not c!3317)) b!24578))

(assert (= (and b!24578 c!3316) b!24576))

(assert (= (and b!24578 (not c!3316)) b!24575))

(assert (= (and b!24575 c!3318) b!24579))

(assert (= (and b!24575 (not c!3318)) b!24580))

(declare-fun m!19287 () Bool)

(assert (=> d!4539 m!19287))

(declare-fun m!19289 () Bool)

(assert (=> d!4539 m!19289))

(assert (=> d!4539 m!17078))

(assert (=> d!4539 m!16990))

(declare-fun m!19291 () Bool)

(assert (=> b!24580 m!19291))

(assert (=> b!24580 m!19291))

(declare-fun m!19293 () Bool)

(assert (=> b!24580 m!19293))

(assert (=> b!23578 d!4539))

(declare-fun lt!9366 () Bool)

(declare-fun d!4541 () Bool)

(assert (=> d!4541 (= lt!9366 (select (content!15 (toList!299 lt!8746)) (ite c!2984 (ite c!2983 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(declare-fun e!15899 () Bool)

(assert (=> d!4541 (= lt!9366 e!15899)))

(declare-fun res!14966 () Bool)

(assert (=> d!4541 (=> (not res!14966) (not e!15899))))

(assert (=> d!4541 (= res!14966 ((_ is Cons!564) (toList!299 lt!8746)))))

(assert (=> d!4541 (= (contains!232 (toList!299 lt!8746) (ite c!2984 (ite c!2983 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) lt!9366)))

(declare-fun b!24581 () Bool)

(declare-fun e!15900 () Bool)

(assert (=> b!24581 (= e!15899 e!15900)))

(declare-fun res!14965 () Bool)

(assert (=> b!24581 (=> res!14965 e!15900)))

(assert (=> b!24581 (= res!14965 (= (h!1130 (toList!299 lt!8746)) (ite c!2984 (ite c!2983 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(declare-fun b!24582 () Bool)

(assert (=> b!24582 (= e!15900 (contains!232 (t!3239 (toList!299 lt!8746)) (ite c!2984 (ite c!2983 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(assert (= (and d!4541 res!14966) b!24581))

(assert (= (and b!24581 (not res!14965)) b!24582))

(declare-fun m!19295 () Bool)

(assert (=> d!4541 m!19295))

(declare-fun m!19297 () Bool)

(assert (=> d!4541 m!19297))

(declare-fun m!19299 () Bool)

(assert (=> b!24582 m!19299))

(assert (=> b!23809 d!4541))

(declare-fun d!4543 () Bool)

(declare-fun e!15901 () Bool)

(assert (=> d!4543 e!15901))

(declare-fun res!14967 () Bool)

(assert (=> d!4543 (=> res!14967 e!15901)))

(declare-fun lt!9367 () Bool)

(assert (=> d!4543 (= res!14967 (not lt!9367))))

(declare-fun lt!9368 () Bool)

(assert (=> d!4543 (= lt!9367 lt!9368)))

(declare-fun lt!9369 () Unit!512)

(declare-fun e!15902 () Unit!512)

(assert (=> d!4543 (= lt!9369 e!15902)))

(declare-fun c!3319 () Bool)

(assert (=> d!4543 (= c!3319 lt!9368)))

(assert (=> d!4543 (= lt!9368 (containsKey!25 (toList!299 lt!8546) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!4543 (= (contains!230 lt!8546 #b0000000000000000000000000000000000000000000000000000000000000000) lt!9367)))

(declare-fun b!24583 () Bool)

(declare-fun lt!9370 () Unit!512)

(assert (=> b!24583 (= e!15902 lt!9370)))

(assert (=> b!24583 (= lt!9370 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!299 lt!8546) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!24583 (isDefined!23 (getValueByKey!61 (toList!299 lt!8546) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24584 () Bool)

(declare-fun Unit!579 () Unit!512)

(assert (=> b!24584 (= e!15902 Unit!579)))

(declare-fun b!24585 () Bool)

(assert (=> b!24585 (= e!15901 (isDefined!23 (getValueByKey!61 (toList!299 lt!8546) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!4543 c!3319) b!24583))

(assert (= (and d!4543 (not c!3319)) b!24584))

(assert (= (and d!4543 (not res!14967)) b!24585))

(declare-fun m!19301 () Bool)

(assert (=> d!4543 m!19301))

(declare-fun m!19303 () Bool)

(assert (=> b!24583 m!19303))

(declare-fun m!19305 () Bool)

(assert (=> b!24583 m!19305))

(assert (=> b!24583 m!19305))

(declare-fun m!19307 () Bool)

(assert (=> b!24583 m!19307))

(assert (=> b!24585 m!19305))

(assert (=> b!24585 m!19305))

(assert (=> b!24585 m!19307))

(assert (=> bm!1999 d!4543))

(declare-fun d!4545 () Bool)

(assert (=> d!4545 (= (apply!29 lt!8692 #b1000000000000000000000000000000000000000000000000000000000000000) (get!391 (getValueByKey!61 (toList!299 lt!8692) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!1018 () Bool)

(assert (= bs!1018 d!4545))

(assert (=> bs!1018 m!19195))

(assert (=> bs!1018 m!19195))

(declare-fun m!19309 () Bool)

(assert (=> bs!1018 m!19309))

(assert (=> b!23750 d!4545))

(declare-fun d!4547 () Bool)

(assert (=> d!4547 (= (apply!29 lt!8506 #b0000000000000000000000000000000000000000000000000000000000000000) (get!391 (getValueByKey!61 (toList!299 lt!8506) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!1019 () Bool)

(assert (= bs!1019 d!4547))

(assert (=> bs!1019 m!18549))

(assert (=> bs!1019 m!18549))

(declare-fun m!19311 () Bool)

(assert (=> bs!1019 m!19311))

(assert (=> b!23600 d!4547))

(declare-fun b!24586 () Bool)

(declare-fun e!15904 () (_ BitVec 32))

(declare-fun e!15903 () (_ BitVec 32))

(assert (=> b!24586 (= e!15904 e!15903)))

(declare-fun c!3320 () Bool)

(assert (=> b!24586 (= c!3320 (validKeyInArray!0 (select (arr!608 (_keys!3164 (_2!487 lt!8276))) #b00000000000000000000000000000000)))))

(declare-fun b!24587 () Bool)

(declare-fun call!2147 () (_ BitVec 32))

(assert (=> b!24587 (= e!15903 call!2147)))

(declare-fun bm!2144 () Bool)

(assert (=> bm!2144 (= call!2147 (arrayCountValidKeys!0 (_keys!3164 (_2!487 lt!8276)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!704 (_keys!3164 (_2!487 lt!8276)))))))

(declare-fun b!24589 () Bool)

(assert (=> b!24589 (= e!15903 (bvadd #b00000000000000000000000000000001 call!2147))))

(declare-fun b!24588 () Bool)

(assert (=> b!24588 (= e!15904 #b00000000000000000000000000000000)))

(declare-fun d!4549 () Bool)

(declare-fun lt!9371 () (_ BitVec 32))

(assert (=> d!4549 (and (bvsge lt!9371 #b00000000000000000000000000000000) (bvsle lt!9371 (bvsub (size!704 (_keys!3164 (_2!487 lt!8276))) #b00000000000000000000000000000000)))))

(assert (=> d!4549 (= lt!9371 e!15904)))

(declare-fun c!3321 () Bool)

(assert (=> d!4549 (= c!3321 (bvsge #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8276)))))))

(assert (=> d!4549 (and (bvsle #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8276)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!704 (_keys!3164 (_2!487 lt!8276))) (size!704 (_keys!3164 (_2!487 lt!8276)))))))

(assert (=> d!4549 (= (arrayCountValidKeys!0 (_keys!3164 (_2!487 lt!8276)) #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8276)))) lt!9371)))

(assert (= (and d!4549 c!3321) b!24588))

(assert (= (and d!4549 (not c!3321)) b!24586))

(assert (= (and b!24586 c!3320) b!24589))

(assert (= (and b!24586 (not c!3320)) b!24587))

(assert (= (or b!24589 b!24587) bm!2144))

(assert (=> b!24586 m!18555))

(assert (=> b!24586 m!18555))

(assert (=> b!24586 m!18557))

(declare-fun m!19313 () Bool)

(assert (=> bm!2144 m!19313))

(assert (=> b!23613 d!4549))

(assert (=> d!4023 d!4033))

(declare-fun b!24606 () Bool)

(declare-fun res!14977 () Bool)

(declare-fun e!15915 () Bool)

(assert (=> b!24606 (=> (not res!14977) (not e!15915))))

(declare-fun lt!9374 () SeekEntryResult!54)

(assert (=> b!24606 (= res!14977 (= (select (arr!608 (_keys!3164 (_2!487 lt!8158))) (index!2340 lt!9374)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24607 () Bool)

(declare-fun e!15913 () Bool)

(declare-fun call!2152 () Bool)

(assert (=> b!24607 (= e!15913 (not call!2152))))

(declare-fun b!24608 () Bool)

(declare-fun e!15914 () Bool)

(declare-fun e!15916 () Bool)

(assert (=> b!24608 (= e!15914 e!15916)))

(declare-fun c!3327 () Bool)

(assert (=> b!24608 (= c!3327 ((_ is MissingVacant!54) lt!9374))))

(declare-fun bm!2149 () Bool)

(declare-fun call!2153 () Bool)

(declare-fun c!3326 () Bool)

(assert (=> bm!2149 (= call!2153 (inRange!0 (ite c!3326 (index!2337 lt!9374) (index!2340 lt!9374)) (mask!4730 (_2!487 lt!8158))))))

(declare-fun b!24609 () Bool)

(declare-fun res!14978 () Bool)

(assert (=> b!24609 (=> (not res!14978) (not e!15915))))

(assert (=> b!24609 (= res!14978 call!2153)))

(assert (=> b!24609 (= e!15916 e!15915)))

(declare-fun bm!2150 () Bool)

(assert (=> bm!2150 (= call!2152 (arrayContainsKey!0 (_keys!3164 (_2!487 lt!8158)) #b1000000000000000000000000000000000000000000000000000000000000000 #b00000000000000000000000000000000))))

(declare-fun b!24610 () Bool)

(assert (=> b!24610 (= e!15916 ((_ is Undefined!54) lt!9374))))

(declare-fun d!4551 () Bool)

(assert (=> d!4551 e!15914))

(assert (=> d!4551 (= c!3326 ((_ is MissingZero!54) lt!9374))))

(assert (=> d!4551 (= lt!9374 (seekEntryOrOpen!0 #b1000000000000000000000000000000000000000000000000000000000000000 (_keys!3164 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158))))))

(assert (=> d!4551 true))

(declare-fun _$34!747 () Unit!512)

(assert (=> d!4551 (= (choose!203 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b1000000000000000000000000000000000000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))) _$34!747)))

(declare-fun b!24611 () Bool)

(declare-fun res!14976 () Bool)

(assert (=> b!24611 (= res!14976 (= (select (arr!608 (_keys!3164 (_2!487 lt!8158))) (index!2337 lt!9374)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!24611 (=> (not res!14976) (not e!15913))))

(declare-fun b!24612 () Bool)

(assert (=> b!24612 (= e!15914 e!15913)))

(declare-fun res!14979 () Bool)

(assert (=> b!24612 (= res!14979 call!2153)))

(assert (=> b!24612 (=> (not res!14979) (not e!15913))))

(declare-fun b!24613 () Bool)

(assert (=> b!24613 (= e!15915 (not call!2152))))

(assert (= (and d!4551 c!3326) b!24612))

(assert (= (and d!4551 (not c!3326)) b!24608))

(assert (= (and b!24612 res!14979) b!24611))

(assert (= (and b!24611 res!14976) b!24607))

(assert (= (and b!24608 c!3327) b!24609))

(assert (= (and b!24608 (not c!3327)) b!24610))

(assert (= (and b!24609 res!14978) b!24606))

(assert (= (and b!24606 res!14977) b!24613))

(assert (= (or b!24612 b!24609) bm!2149))

(assert (= (or b!24607 b!24613) bm!2150))

(declare-fun m!19315 () Bool)

(assert (=> b!24606 m!19315))

(declare-fun m!19317 () Bool)

(assert (=> bm!2149 m!19317))

(assert (=> bm!2150 m!16866))

(assert (=> d!4551 m!16890))

(declare-fun m!19319 () Bool)

(assert (=> b!24611 m!19319))

(assert (=> d!4023 d!4551))

(assert (=> d!4023 d!4145))

(declare-fun d!4553 () Bool)

(declare-fun e!15917 () Bool)

(assert (=> d!4553 e!15917))

(declare-fun res!14980 () Bool)

(assert (=> d!4553 (=> res!14980 e!15917)))

(declare-fun lt!9375 () Bool)

(assert (=> d!4553 (= res!14980 (not lt!9375))))

(declare-fun lt!9376 () Bool)

(assert (=> d!4553 (= lt!9375 lt!9376)))

(declare-fun lt!9377 () Unit!512)

(declare-fun e!15918 () Unit!512)

(assert (=> d!4553 (= lt!9377 e!15918)))

(declare-fun c!3328 () Bool)

(assert (=> d!4553 (= c!3328 lt!9376)))

(assert (=> d!4553 (= lt!9376 (containsKey!25 (toList!299 lt!8692) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!4553 (= (contains!230 lt!8692 #b0000000000000000000000000000000000000000000000000000000000000000) lt!9375)))

(declare-fun b!24614 () Bool)

(declare-fun lt!9378 () Unit!512)

(assert (=> b!24614 (= e!15918 lt!9378)))

(assert (=> b!24614 (= lt!9378 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!299 lt!8692) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!24614 (isDefined!23 (getValueByKey!61 (toList!299 lt!8692) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24615 () Bool)

(declare-fun Unit!580 () Unit!512)

(assert (=> b!24615 (= e!15918 Unit!580)))

(declare-fun b!24616 () Bool)

(assert (=> b!24616 (= e!15917 (isDefined!23 (getValueByKey!61 (toList!299 lt!8692) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!4553 c!3328) b!24614))

(assert (= (and d!4553 (not c!3328)) b!24615))

(assert (= (and d!4553 (not res!14980)) b!24616))

(declare-fun m!19321 () Bool)

(assert (=> d!4553 m!19321))

(declare-fun m!19323 () Bool)

(assert (=> b!24614 m!19323))

(declare-fun m!19325 () Bool)

(assert (=> b!24614 m!19325))

(assert (=> b!24614 m!19325))

(declare-fun m!19327 () Bool)

(assert (=> b!24614 m!19327))

(assert (=> b!24616 m!19325))

(assert (=> b!24616 m!19325))

(assert (=> b!24616 m!19327))

(assert (=> bm!2027 d!4553))

(declare-fun b!24617 () Bool)

(declare-fun e!15920 () (_ BitVec 32))

(declare-fun e!15919 () (_ BitVec 32))

(assert (=> b!24617 (= e!15920 e!15919)))

(declare-fun c!3329 () Bool)

(assert (=> b!24617 (= c!3329 (validKeyInArray!0 (select (arr!608 lt!8356) (bvadd lt!8342 #b00000000000000000000000000000001))))))

(declare-fun b!24618 () Bool)

(declare-fun call!2154 () (_ BitVec 32))

(assert (=> b!24618 (= e!15919 call!2154)))

(declare-fun bm!2151 () Bool)

(assert (=> bm!2151 (= call!2154 (arrayCountValidKeys!0 lt!8356 (bvadd lt!8342 #b00000000000000000000000000000001 #b00000000000000000000000000000001) lt!8347))))

(declare-fun b!24620 () Bool)

(assert (=> b!24620 (= e!15919 (bvadd #b00000000000000000000000000000001 call!2154))))

(declare-fun b!24619 () Bool)

(assert (=> b!24619 (= e!15920 #b00000000000000000000000000000000)))

(declare-fun d!4555 () Bool)

(declare-fun lt!9379 () (_ BitVec 32))

(assert (=> d!4555 (and (bvsge lt!9379 #b00000000000000000000000000000000) (bvsle lt!9379 (bvsub (size!704 lt!8356) (bvadd lt!8342 #b00000000000000000000000000000001))))))

(assert (=> d!4555 (= lt!9379 e!15920)))

(declare-fun c!3330 () Bool)

(assert (=> d!4555 (= c!3330 (bvsge (bvadd lt!8342 #b00000000000000000000000000000001) lt!8347))))

(assert (=> d!4555 (and (bvsle (bvadd lt!8342 #b00000000000000000000000000000001) lt!8347) (bvsge (bvadd lt!8342 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle lt!8347 (size!704 lt!8356)))))

(assert (=> d!4555 (= (arrayCountValidKeys!0 lt!8356 (bvadd lt!8342 #b00000000000000000000000000000001) lt!8347) lt!9379)))

(assert (= (and d!4555 c!3330) b!24619))

(assert (= (and d!4555 (not c!3330)) b!24617))

(assert (= (and b!24617 c!3329) b!24620))

(assert (= (and b!24617 (not c!3329)) b!24618))

(assert (= (or b!24620 b!24618) bm!2151))

(declare-fun m!19329 () Bool)

(assert (=> b!24617 m!19329))

(assert (=> b!24617 m!19329))

(declare-fun m!19331 () Bool)

(assert (=> b!24617 m!19331))

(declare-fun m!19333 () Bool)

(assert (=> bm!2151 m!19333))

(assert (=> bm!1958 d!4555))

(declare-fun d!4557 () Bool)

(declare-fun c!3331 () Bool)

(assert (=> d!4557 (= c!3331 (and ((_ is Cons!564) (toList!299 lt!8521)) (= (_1!489 (h!1130 (toList!299 lt!8521))) (_1!489 (ite c!2998 (ite c!2997 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(declare-fun e!15921 () Option!67)

(assert (=> d!4557 (= (getValueByKey!61 (toList!299 lt!8521) (_1!489 (ite c!2998 (ite c!2997 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) e!15921)))

(declare-fun b!24621 () Bool)

(assert (=> b!24621 (= e!15921 (Some!66 (_2!489 (h!1130 (toList!299 lt!8521)))))))

(declare-fun b!24624 () Bool)

(declare-fun e!15922 () Option!67)

(assert (=> b!24624 (= e!15922 None!65)))

(declare-fun b!24622 () Bool)

(assert (=> b!24622 (= e!15921 e!15922)))

(declare-fun c!3332 () Bool)

(assert (=> b!24622 (= c!3332 (and ((_ is Cons!564) (toList!299 lt!8521)) (not (= (_1!489 (h!1130 (toList!299 lt!8521))) (_1!489 (ite c!2998 (ite c!2997 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))))

(declare-fun b!24623 () Bool)

(assert (=> b!24623 (= e!15922 (getValueByKey!61 (t!3239 (toList!299 lt!8521)) (_1!489 (ite c!2998 (ite c!2997 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(assert (= (and d!4557 c!3331) b!24621))

(assert (= (and d!4557 (not c!3331)) b!24622))

(assert (= (and b!24622 c!3332) b!24623))

(assert (= (and b!24622 (not c!3332)) b!24624))

(declare-fun m!19335 () Bool)

(assert (=> b!24623 m!19335))

(assert (=> b!23609 d!4557))

(declare-fun d!4559 () Bool)

(declare-fun lt!9380 () (_ BitVec 32))

(assert (=> d!4559 (and (or (bvslt lt!9380 #b00000000000000000000000000000000) (bvsge lt!9380 (size!704 (array!1286 ((as const (Array (_ BitVec 32) (_ BitVec 64))) #b0000000000000000000000000000000000000000000000000000000000000000) (bvadd (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001)))) (and (bvsge lt!9380 #b00000000000000000000000000000000) (bvslt lt!9380 (size!704 (array!1286 ((as const (Array (_ BitVec 32) (_ BitVec 64))) #b0000000000000000000000000000000000000000000000000000000000000000) (bvadd (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001)))))) (bvsge lt!9380 #b00000000000000000000000000000000) (bvslt lt!9380 (size!704 (array!1286 ((as const (Array (_ BitVec 32) (_ BitVec 64))) #b0000000000000000000000000000000000000000000000000000000000000000) (bvadd (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001)))) (= (select (arr!608 (array!1286 ((as const (Array (_ BitVec 32) (_ BitVec 64))) #b0000000000000000000000000000000000000000000000000000000000000000) (bvadd (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001))) lt!9380) (_1!489 lt!8355)))))

(declare-fun e!15923 () (_ BitVec 32))

(assert (=> d!4559 (= lt!9380 e!15923)))

(declare-fun c!3333 () Bool)

(assert (=> d!4559 (= c!3333 (= (select (arr!608 (array!1286 ((as const (Array (_ BitVec 32) (_ BitVec 64))) #b0000000000000000000000000000000000000000000000000000000000000000) (bvadd (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_1!489 lt!8355)))))

(assert (=> d!4559 (and (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!704 (array!1286 ((as const (Array (_ BitVec 32) (_ BitVec 64))) #b0000000000000000000000000000000000000000000000000000000000000000) (bvadd (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001)))) (bvslt (size!704 (array!1286 ((as const (Array (_ BitVec 32) (_ BitVec 64))) #b0000000000000000000000000000000000000000000000000000000000000000) (bvadd (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001))) #b01111111111111111111111111111111))))

(assert (=> d!4559 (= (arrayScanForKey!0 (array!1286 ((as const (Array (_ BitVec 32) (_ BitVec 64))) #b0000000000000000000000000000000000000000000000000000000000000000) (bvadd (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001)) (_1!489 lt!8355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) lt!9380)))

(declare-fun b!24625 () Bool)

(assert (=> b!24625 (= e!15923 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))

(declare-fun b!24626 () Bool)

(assert (=> b!24626 (= e!15923 (arrayScanForKey!0 (array!1286 ((as const (Array (_ BitVec 32) (_ BitVec 64))) #b0000000000000000000000000000000000000000000000000000000000000000) (bvadd (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001)) (_1!489 lt!8355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!4559 c!3333) b!24625))

(assert (= (and d!4559 (not c!3333)) b!24626))

(declare-fun m!19337 () Bool)

(assert (=> d!4559 m!19337))

(declare-fun m!19339 () Bool)

(assert (=> d!4559 m!19339))

(declare-fun m!19341 () Bool)

(assert (=> b!24626 m!19341))

(assert (=> b!23562 d!4559))

(declare-fun b!24627 () Bool)

(declare-fun e!15925 () (_ BitVec 32))

(declare-fun e!15924 () (_ BitVec 32))

(assert (=> b!24627 (= e!15925 e!15924)))

(declare-fun c!3334 () Bool)

(assert (=> b!24627 (= c!3334 (validKeyInArray!0 (select (arr!608 (_keys!3164 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000000)))))

(declare-fun b!24628 () Bool)

(declare-fun call!2155 () (_ BitVec 32))

(assert (=> b!24628 (= e!15924 call!2155)))

(declare-fun bm!2152 () Bool)

(assert (=> bm!2152 (= call!2155 (arrayCountValidKeys!0 (_keys!3164 (v!1604 (underlying!116 thiss!938))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!704 (_keys!3164 (v!1604 (underlying!116 thiss!938))))))))

(declare-fun b!24630 () Bool)

(assert (=> b!24630 (= e!15924 (bvadd #b00000000000000000000000000000001 call!2155))))

(declare-fun b!24629 () Bool)

(assert (=> b!24629 (= e!15925 #b00000000000000000000000000000000)))

(declare-fun d!4561 () Bool)

(declare-fun lt!9381 () (_ BitVec 32))

(assert (=> d!4561 (and (bvsge lt!9381 #b00000000000000000000000000000000) (bvsle lt!9381 (bvsub (size!704 (_keys!3164 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000000)))))

(assert (=> d!4561 (= lt!9381 e!15925)))

(declare-fun c!3335 () Bool)

(assert (=> d!4561 (= c!3335 (bvsge #b00000000000000000000000000000000 (size!704 (_keys!3164 (v!1604 (underlying!116 thiss!938))))))))

(assert (=> d!4561 (and (bvsle #b00000000000000000000000000000000 (size!704 (_keys!3164 (v!1604 (underlying!116 thiss!938))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!704 (_keys!3164 (v!1604 (underlying!116 thiss!938)))) (size!704 (_keys!3164 (v!1604 (underlying!116 thiss!938))))))))

(assert (=> d!4561 (= (arrayCountValidKeys!0 (_keys!3164 (v!1604 (underlying!116 thiss!938))) #b00000000000000000000000000000000 (size!704 (_keys!3164 (v!1604 (underlying!116 thiss!938))))) lt!9381)))

(assert (= (and d!4561 c!3335) b!24629))

(assert (= (and d!4561 (not c!3335)) b!24627))

(assert (= (and b!24627 c!3334) b!24630))

(assert (= (and b!24627 (not c!3334)) b!24628))

(assert (= (or b!24630 b!24628) bm!2152))

(assert (=> b!24627 m!19211))

(assert (=> b!24627 m!19211))

(assert (=> b!24627 m!19213))

(declare-fun m!19343 () Bool)

(assert (=> bm!2152 m!19343))

(assert (=> b!23667 d!4561))

(assert (=> b!23643 d!4125))

(assert (=> b!23555 d!4047))

(assert (=> b!23792 d!4471))

(declare-fun d!4563 () Bool)

(assert (=> d!4563 (= (inRange!0 (index!2338 lt!8734) (mask!4730 lt!8161)) (and (bvsge (index!2338 lt!8734) #b00000000000000000000000000000000) (bvslt (index!2338 lt!8734) (bvadd (mask!4730 lt!8161) #b00000000000000000000000000000001))))))

(assert (=> b!23799 d!4563))

(assert (=> bm!2025 d!4105))

(assert (=> bm!2043 d!4001))

(declare-fun d!4565 () Bool)

(assert (=> d!4565 (= (isDefined!23 (getValueByKey!61 (toList!299 (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158)))) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!173 (getValueByKey!61 (toList!299 (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158)))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!1020 () Bool)

(assert (= bs!1020 d!4565))

(assert (=> bs!1020 m!17555))

(declare-fun m!19345 () Bool)

(assert (=> bs!1020 m!19345))

(assert (=> b!23805 d!4565))

(declare-fun d!4567 () Bool)

(declare-fun c!3336 () Bool)

(assert (=> d!4567 (= c!3336 (and ((_ is Cons!564) (toList!299 (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))) (= (_1!489 (h!1130 (toList!299 (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158)))))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!15926 () Option!67)

(assert (=> d!4567 (= (getValueByKey!61 (toList!299 (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158)))) #b1000000000000000000000000000000000000000000000000000000000000000) e!15926)))

(declare-fun b!24631 () Bool)

(assert (=> b!24631 (= e!15926 (Some!66 (_2!489 (h!1130 (toList!299 (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))))))

(declare-fun b!24634 () Bool)

(declare-fun e!15927 () Option!67)

(assert (=> b!24634 (= e!15927 None!65)))

(declare-fun b!24632 () Bool)

(assert (=> b!24632 (= e!15926 e!15927)))

(declare-fun c!3337 () Bool)

(assert (=> b!24632 (= c!3337 (and ((_ is Cons!564) (toList!299 (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))) (not (= (_1!489 (h!1130 (toList!299 (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158)))))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!24633 () Bool)

(assert (=> b!24633 (= e!15927 (getValueByKey!61 (t!3239 (toList!299 (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!4567 c!3336) b!24631))

(assert (= (and d!4567 (not c!3336)) b!24632))

(assert (= (and b!24632 c!3337) b!24633))

(assert (= (and b!24632 (not c!3337)) b!24634))

(declare-fun m!19347 () Bool)

(assert (=> b!24633 m!19347))

(assert (=> b!23805 d!4567))

(declare-fun d!4569 () Bool)

(assert (=> d!4569 (= (apply!29 lt!8568 #b0000000000000000000000000000000000000000000000000000000000000000) (get!391 (getValueByKey!61 (toList!299 lt!8568) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!1021 () Bool)

(assert (= bs!1021 d!4569))

(assert (=> bs!1021 m!18571))

(assert (=> bs!1021 m!18571))

(declare-fun m!19349 () Bool)

(assert (=> bs!1021 m!19349))

(assert (=> b!23662 d!4569))

(declare-fun b!24635 () Bool)

(declare-fun c!3340 () Bool)

(declare-fun lt!9382 () (_ BitVec 64))

(assert (=> b!24635 (= c!3340 (= lt!9382 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!15929 () SeekEntryResult!54)

(declare-fun e!15928 () SeekEntryResult!54)

(assert (=> b!24635 (= e!15929 e!15928)))

(declare-fun lt!9383 () SeekEntryResult!54)

(declare-fun d!4571 () Bool)

(assert (=> d!4571 (and (or ((_ is Undefined!54) lt!9383) (not ((_ is Found!54) lt!9383)) (and (bvsge (index!2338 lt!9383) #b00000000000000000000000000000000) (bvslt (index!2338 lt!9383) (size!704 (_keys!3164 lt!8161))))) (or ((_ is Undefined!54) lt!9383) ((_ is Found!54) lt!9383) (not ((_ is MissingVacant!54) lt!9383)) (not (= (index!2340 lt!9383) (index!2339 lt!8523))) (and (bvsge (index!2340 lt!9383) #b00000000000000000000000000000000) (bvslt (index!2340 lt!9383) (size!704 (_keys!3164 lt!8161))))) (or ((_ is Undefined!54) lt!9383) (ite ((_ is Found!54) lt!9383) (= (select (arr!608 (_keys!3164 lt!8161)) (index!2338 lt!9383)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) (and ((_ is MissingVacant!54) lt!9383) (= (index!2340 lt!9383) (index!2339 lt!8523)) (= (select (arr!608 (_keys!3164 lt!8161)) (index!2340 lt!9383)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!15930 () SeekEntryResult!54)

(assert (=> d!4571 (= lt!9383 e!15930)))

(declare-fun c!3339 () Bool)

(assert (=> d!4571 (= c!3339 (bvsge (x!5576 lt!8523) #b01111111111111111111111111111110))))

(assert (=> d!4571 (= lt!9382 (select (arr!608 (_keys!3164 lt!8161)) (index!2339 lt!8523)))))

(assert (=> d!4571 (validMask!0 (mask!4730 lt!8161))))

(assert (=> d!4571 (= (seekKeyOrZeroReturnVacant!0 (x!5576 lt!8523) (index!2339 lt!8523) (index!2339 lt!8523) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (_keys!3164 lt!8161) (mask!4730 lt!8161)) lt!9383)))

(declare-fun b!24636 () Bool)

(assert (=> b!24636 (= e!15929 (Found!54 (index!2339 lt!8523)))))

(declare-fun b!24637 () Bool)

(assert (=> b!24637 (= e!15930 Undefined!54)))

(declare-fun b!24638 () Bool)

(assert (=> b!24638 (= e!15930 e!15929)))

(declare-fun c!3338 () Bool)

(assert (=> b!24638 (= c!3338 (= lt!9382 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!24639 () Bool)

(assert (=> b!24639 (= e!15928 (MissingVacant!54 (index!2339 lt!8523)))))

(declare-fun b!24640 () Bool)

(assert (=> b!24640 (= e!15928 (seekKeyOrZeroReturnVacant!0 (bvadd (x!5576 lt!8523) #b00000000000000000000000000000001) (nextIndex!0 (index!2339 lt!8523) (x!5576 lt!8523) (mask!4730 lt!8161)) (index!2339 lt!8523) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (_keys!3164 lt!8161) (mask!4730 lt!8161)))))

(assert (= (and d!4571 c!3339) b!24637))

(assert (= (and d!4571 (not c!3339)) b!24638))

(assert (= (and b!24638 c!3338) b!24636))

(assert (= (and b!24638 (not c!3338)) b!24635))

(assert (= (and b!24635 c!3340) b!24639))

(assert (= (and b!24635 (not c!3340)) b!24640))

(declare-fun m!19351 () Bool)

(assert (=> d!4571 m!19351))

(declare-fun m!19353 () Bool)

(assert (=> d!4571 m!19353))

(assert (=> d!4571 m!17190))

(assert (=> d!4571 m!17182))

(declare-fun m!19355 () Bool)

(assert (=> b!24640 m!19355))

(assert (=> b!24640 m!19355))

(declare-fun m!19357 () Bool)

(assert (=> b!24640 m!19357))

(assert (=> b!23622 d!4571))

(declare-fun d!4573 () Bool)

(declare-fun e!15931 () Bool)

(assert (=> d!4573 e!15931))

(declare-fun res!14981 () Bool)

(assert (=> d!4573 (=> res!14981 e!15931)))

(declare-fun lt!9384 () Bool)

(assert (=> d!4573 (= res!14981 (not lt!9384))))

(declare-fun lt!9385 () Bool)

(assert (=> d!4573 (= lt!9384 lt!9385)))

(declare-fun lt!9386 () Unit!512)

(declare-fun e!15932 () Unit!512)

(assert (=> d!4573 (= lt!9386 e!15932)))

(declare-fun c!3341 () Bool)

(assert (=> d!4573 (= c!3341 lt!9385)))

(assert (=> d!4573 (= lt!9385 (containsKey!25 (toList!299 lt!8750) (_1!489 (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(assert (=> d!4573 (= (contains!230 lt!8750 (_1!489 (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) lt!9384)))

(declare-fun b!24641 () Bool)

(declare-fun lt!9387 () Unit!512)

(assert (=> b!24641 (= e!15932 lt!9387)))

(assert (=> b!24641 (= lt!9387 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!299 lt!8750) (_1!489 (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(assert (=> b!24641 (isDefined!23 (getValueByKey!61 (toList!299 lt!8750) (_1!489 (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(declare-fun b!24642 () Bool)

(declare-fun Unit!581 () Unit!512)

(assert (=> b!24642 (= e!15932 Unit!581)))

(declare-fun b!24643 () Bool)

(assert (=> b!24643 (= e!15931 (isDefined!23 (getValueByKey!61 (toList!299 lt!8750) (_1!489 (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(assert (= (and d!4573 c!3341) b!24641))

(assert (= (and d!4573 (not c!3341)) b!24642))

(assert (= (and d!4573 (not res!14981)) b!24643))

(declare-fun m!19359 () Bool)

(assert (=> d!4573 m!19359))

(declare-fun m!19361 () Bool)

(assert (=> b!24641 m!19361))

(assert (=> b!24641 m!17589))

(assert (=> b!24641 m!17589))

(declare-fun m!19363 () Bool)

(assert (=> b!24641 m!19363))

(assert (=> b!24643 m!17589))

(assert (=> b!24643 m!17589))

(assert (=> b!24643 m!19363))

(assert (=> d!4107 d!4573))

(declare-fun c!3342 () Bool)

(declare-fun d!4575 () Bool)

(assert (=> d!4575 (= c!3342 (and ((_ is Cons!564) lt!8749) (= (_1!489 (h!1130 lt!8749)) (_1!489 (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(declare-fun e!15933 () Option!67)

(assert (=> d!4575 (= (getValueByKey!61 lt!8749 (_1!489 (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) e!15933)))

(declare-fun b!24644 () Bool)

(assert (=> b!24644 (= e!15933 (Some!66 (_2!489 (h!1130 lt!8749))))))

(declare-fun b!24647 () Bool)

(declare-fun e!15934 () Option!67)

(assert (=> b!24647 (= e!15934 None!65)))

(declare-fun b!24645 () Bool)

(assert (=> b!24645 (= e!15933 e!15934)))

(declare-fun c!3343 () Bool)

(assert (=> b!24645 (= c!3343 (and ((_ is Cons!564) lt!8749) (not (= (_1!489 (h!1130 lt!8749)) (_1!489 (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))))

(declare-fun b!24646 () Bool)

(assert (=> b!24646 (= e!15934 (getValueByKey!61 (t!3239 lt!8749) (_1!489 (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(assert (= (and d!4575 c!3342) b!24644))

(assert (= (and d!4575 (not c!3342)) b!24645))

(assert (= (and b!24645 c!3343) b!24646))

(assert (= (and b!24645 (not c!3343)) b!24647))

(declare-fun m!19365 () Bool)

(assert (=> b!24646 m!19365))

(assert (=> d!4107 d!4575))

(declare-fun d!4577 () Bool)

(assert (=> d!4577 (= (getValueByKey!61 lt!8749 (_1!489 (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (Some!66 (_2!489 (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(declare-fun lt!9388 () Unit!512)

(assert (=> d!4577 (= lt!9388 (choose!213 lt!8749 (_1!489 (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (_2!489 (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(declare-fun e!15935 () Bool)

(assert (=> d!4577 e!15935))

(declare-fun res!14982 () Bool)

(assert (=> d!4577 (=> (not res!14982) (not e!15935))))

(assert (=> d!4577 (= res!14982 (isStrictlySorted!171 lt!8749))))

(assert (=> d!4577 (= (lemmaContainsTupThenGetReturnValue!18 lt!8749 (_1!489 (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (_2!489 (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) lt!9388)))

(declare-fun b!24648 () Bool)

(declare-fun res!14983 () Bool)

(assert (=> b!24648 (=> (not res!14983) (not e!15935))))

(assert (=> b!24648 (= res!14983 (containsKey!25 lt!8749 (_1!489 (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(declare-fun b!24649 () Bool)

(assert (=> b!24649 (= e!15935 (contains!232 lt!8749 (tuple2!961 (_1!489 (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (_2!489 (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(assert (= (and d!4577 res!14982) b!24648))

(assert (= (and b!24648 res!14983) b!24649))

(assert (=> d!4577 m!17583))

(declare-fun m!19367 () Bool)

(assert (=> d!4577 m!19367))

(declare-fun m!19369 () Bool)

(assert (=> d!4577 m!19369))

(declare-fun m!19371 () Bool)

(assert (=> b!24648 m!19371))

(declare-fun m!19373 () Bool)

(assert (=> b!24649 m!19373))

(assert (=> d!4107 d!4577))

(declare-fun b!24650 () Bool)

(declare-fun e!15939 () List!568)

(declare-fun e!15936 () List!568)

(assert (=> b!24650 (= e!15939 e!15936)))

(declare-fun c!3347 () Bool)

(assert (=> b!24650 (= c!3347 (and ((_ is Cons!564) (toList!299 call!1917)) (= (_1!489 (h!1130 (toList!299 call!1917))) (_1!489 (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(declare-fun b!24651 () Bool)

(declare-fun res!14985 () Bool)

(declare-fun e!15940 () Bool)

(assert (=> b!24651 (=> (not res!14985) (not e!15940))))

(declare-fun lt!9389 () List!568)

(assert (=> b!24651 (= res!14985 (containsKey!25 lt!9389 (_1!489 (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(declare-fun d!4579 () Bool)

(assert (=> d!4579 e!15940))

(declare-fun res!14984 () Bool)

(assert (=> d!4579 (=> (not res!14984) (not e!15940))))

(assert (=> d!4579 (= res!14984 (isStrictlySorted!171 lt!9389))))

(assert (=> d!4579 (= lt!9389 e!15939)))

(declare-fun c!3345 () Bool)

(assert (=> d!4579 (= c!3345 (and ((_ is Cons!564) (toList!299 call!1917)) (bvslt (_1!489 (h!1130 (toList!299 call!1917))) (_1!489 (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(assert (=> d!4579 (isStrictlySorted!171 (toList!299 call!1917))))

(assert (=> d!4579 (= (insertStrictlySorted!18 (toList!299 call!1917) (_1!489 (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (_2!489 (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) lt!9389)))

(declare-fun b!24652 () Bool)

(declare-fun call!2156 () List!568)

(assert (=> b!24652 (= e!15939 call!2156)))

(declare-fun b!24653 () Bool)

(declare-fun e!15937 () List!568)

(declare-fun call!2157 () List!568)

(assert (=> b!24653 (= e!15937 call!2157)))

(declare-fun b!24654 () Bool)

(assert (=> b!24654 (= e!15937 call!2157)))

(declare-fun bm!2153 () Bool)

(declare-fun call!2158 () List!568)

(assert (=> bm!2153 (= call!2158 call!2156)))

(declare-fun bm!2154 () Bool)

(assert (=> bm!2154 (= call!2157 call!2158)))

(declare-fun bm!2155 () Bool)

(declare-fun e!15938 () List!568)

(assert (=> bm!2155 (= call!2156 ($colon$colon!31 e!15938 (ite c!3345 (h!1130 (toList!299 call!1917)) (tuple2!961 (_1!489 (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (_2!489 (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))))

(declare-fun c!3346 () Bool)

(assert (=> bm!2155 (= c!3346 c!3345)))

(declare-fun b!24655 () Bool)

(declare-fun c!3344 () Bool)

(assert (=> b!24655 (= e!15938 (ite c!3347 (t!3239 (toList!299 call!1917)) (ite c!3344 (Cons!564 (h!1130 (toList!299 call!1917)) (t!3239 (toList!299 call!1917))) Nil!565)))))

(declare-fun b!24656 () Bool)

(assert (=> b!24656 (= e!15940 (contains!232 lt!9389 (tuple2!961 (_1!489 (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (_2!489 (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(declare-fun b!24657 () Bool)

(assert (=> b!24657 (= c!3344 (and ((_ is Cons!564) (toList!299 call!1917)) (bvsgt (_1!489 (h!1130 (toList!299 call!1917))) (_1!489 (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(assert (=> b!24657 (= e!15936 e!15937)))

(declare-fun b!24658 () Bool)

(assert (=> b!24658 (= e!15938 (insertStrictlySorted!18 (t!3239 (toList!299 call!1917)) (_1!489 (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (_2!489 (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(declare-fun b!24659 () Bool)

(assert (=> b!24659 (= e!15936 call!2158)))

(assert (= (and d!4579 c!3345) b!24652))

(assert (= (and d!4579 (not c!3345)) b!24650))

(assert (= (and b!24650 c!3347) b!24659))

(assert (= (and b!24650 (not c!3347)) b!24657))

(assert (= (and b!24657 c!3344) b!24653))

(assert (= (and b!24657 (not c!3344)) b!24654))

(assert (= (or b!24653 b!24654) bm!2154))

(assert (= (or b!24659 bm!2154) bm!2153))

(assert (= (or b!24652 bm!2153) bm!2155))

(assert (= (and bm!2155 c!3346) b!24658))

(assert (= (and bm!2155 (not c!3346)) b!24655))

(assert (= (and d!4579 res!14984) b!24651))

(assert (= (and b!24651 res!14985) b!24656))

(declare-fun m!19375 () Bool)

(assert (=> d!4579 m!19375))

(declare-fun m!19377 () Bool)

(assert (=> d!4579 m!19377))

(declare-fun m!19379 () Bool)

(assert (=> b!24658 m!19379))

(declare-fun m!19381 () Bool)

(assert (=> b!24651 m!19381))

(declare-fun m!19383 () Bool)

(assert (=> b!24656 m!19383))

(declare-fun m!19385 () Bool)

(assert (=> bm!2155 m!19385))

(assert (=> d!4107 d!4579))

(declare-fun b!24660 () Bool)

(declare-fun e!15941 () Bool)

(declare-fun e!15942 () Bool)

(assert (=> b!24660 (= e!15941 e!15942)))

(declare-fun c!3348 () Bool)

(assert (=> b!24660 (= c!3348 (validKeyInArray!0 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000)))))

(declare-fun d!4581 () Bool)

(declare-fun res!14986 () Bool)

(assert (=> d!4581 (=> res!14986 e!15941)))

(assert (=> d!4581 (= res!14986 (bvsge #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))))))

(assert (=> d!4581 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3164 lt!8161) (mask!4730 lt!8161)) e!15941)))

(declare-fun b!24661 () Bool)

(declare-fun e!15943 () Bool)

(declare-fun call!2159 () Bool)

(assert (=> b!24661 (= e!15943 call!2159)))

(declare-fun bm!2156 () Bool)

(assert (=> bm!2156 (= call!2159 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3164 lt!8161) (mask!4730 lt!8161)))))

(declare-fun b!24662 () Bool)

(assert (=> b!24662 (= e!15942 call!2159)))

(declare-fun b!24663 () Bool)

(assert (=> b!24663 (= e!15942 e!15943)))

(declare-fun lt!9390 () (_ BitVec 64))

(assert (=> b!24663 (= lt!9390 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000))))

(declare-fun lt!9392 () Unit!512)

(assert (=> b!24663 (= lt!9392 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3164 lt!8161) lt!9390 #b00000000000000000000000000000000))))

(assert (=> b!24663 (arrayContainsKey!0 (_keys!3164 lt!8161) lt!9390 #b00000000000000000000000000000000)))

(declare-fun lt!9391 () Unit!512)

(assert (=> b!24663 (= lt!9391 lt!9392)))

(declare-fun res!14987 () Bool)

(assert (=> b!24663 (= res!14987 (= (seekEntryOrOpen!0 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000) (_keys!3164 lt!8161) (mask!4730 lt!8161)) (Found!54 #b00000000000000000000000000000000)))))

(assert (=> b!24663 (=> (not res!14987) (not e!15943))))

(assert (= (and d!4581 (not res!14986)) b!24660))

(assert (= (and b!24660 c!3348) b!24663))

(assert (= (and b!24660 (not c!3348)) b!24662))

(assert (= (and b!24663 res!14987) b!24661))

(assert (= (or b!24661 b!24662) bm!2156))

(assert (=> b!24660 m!16936))

(assert (=> b!24660 m!16936))

(assert (=> b!24660 m!17202))

(declare-fun m!19387 () Bool)

(assert (=> bm!2156 m!19387))

(assert (=> b!24663 m!16936))

(declare-fun m!19389 () Bool)

(assert (=> b!24663 m!19389))

(declare-fun m!19391 () Bool)

(assert (=> b!24663 m!19391))

(assert (=> b!24663 m!16936))

(declare-fun m!19393 () Bool)

(assert (=> b!24663 m!19393))

(assert (=> b!23793 d!4581))

(assert (=> d!4015 d!4005))

(declare-fun d!4583 () Bool)

(assert (=> d!4583 (arrayForallSeekEntryOrOpenFound!0 lt!8354 lt!8341 (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))))))

(assert (=> d!4583 true))

(declare-fun _$30!30 () Unit!512)

(assert (=> d!4583 (= (choose!34 lt!8341 (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) lt!8354) _$30!30)))

(declare-fun bs!1022 () Bool)

(assert (= bs!1022 d!4583))

(assert (=> bs!1022 m!16750))

(assert (=> bs!1022 m!16920))

(assert (=> d!4015 d!4583))

(assert (=> d!4015 d!4007))

(declare-fun b!24664 () Bool)

(declare-fun e!15944 () Bool)

(declare-fun e!15945 () Bool)

(assert (=> b!24664 (= e!15944 e!15945)))

(declare-fun c!3349 () Bool)

(assert (=> b!24664 (= c!3349 (validKeyInArray!0 (select (arr!608 (_keys!3164 (_2!487 lt!8249))) #b00000000000000000000000000000000)))))

(declare-fun d!4585 () Bool)

(declare-fun res!14988 () Bool)

(assert (=> d!4585 (=> res!14988 e!15944)))

(assert (=> d!4585 (= res!14988 (bvsge #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8249)))))))

(assert (=> d!4585 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3164 (_2!487 lt!8249)) (mask!4730 (_2!487 lt!8249))) e!15944)))

(declare-fun b!24665 () Bool)

(declare-fun e!15946 () Bool)

(declare-fun call!2160 () Bool)

(assert (=> b!24665 (= e!15946 call!2160)))

(declare-fun bm!2157 () Bool)

(assert (=> bm!2157 (= call!2160 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3164 (_2!487 lt!8249)) (mask!4730 (_2!487 lt!8249))))))

(declare-fun b!24666 () Bool)

(assert (=> b!24666 (= e!15945 call!2160)))

(declare-fun b!24667 () Bool)

(assert (=> b!24667 (= e!15945 e!15946)))

(declare-fun lt!9393 () (_ BitVec 64))

(assert (=> b!24667 (= lt!9393 (select (arr!608 (_keys!3164 (_2!487 lt!8249))) #b00000000000000000000000000000000))))

(declare-fun lt!9395 () Unit!512)

(assert (=> b!24667 (= lt!9395 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3164 (_2!487 lt!8249)) lt!9393 #b00000000000000000000000000000000))))

(assert (=> b!24667 (arrayContainsKey!0 (_keys!3164 (_2!487 lt!8249)) lt!9393 #b00000000000000000000000000000000)))

(declare-fun lt!9394 () Unit!512)

(assert (=> b!24667 (= lt!9394 lt!9395)))

(declare-fun res!14989 () Bool)

(assert (=> b!24667 (= res!14989 (= (seekEntryOrOpen!0 (select (arr!608 (_keys!3164 (_2!487 lt!8249))) #b00000000000000000000000000000000) (_keys!3164 (_2!487 lt!8249)) (mask!4730 (_2!487 lt!8249))) (Found!54 #b00000000000000000000000000000000)))))

(assert (=> b!24667 (=> (not res!14989) (not e!15946))))

(assert (= (and d!4585 (not res!14988)) b!24664))

(assert (= (and b!24664 c!3349) b!24667))

(assert (= (and b!24664 (not c!3349)) b!24666))

(assert (= (and b!24667 res!14989) b!24665))

(assert (= (or b!24665 b!24666) bm!2157))

(assert (=> b!24664 m!19219))

(assert (=> b!24664 m!19219))

(assert (=> b!24664 m!19221))

(declare-fun m!19395 () Bool)

(assert (=> bm!2157 m!19395))

(assert (=> b!24667 m!19219))

(declare-fun m!19397 () Bool)

(assert (=> b!24667 m!19397))

(declare-fun m!19399 () Bool)

(assert (=> b!24667 m!19399))

(assert (=> b!24667 m!19219))

(declare-fun m!19401 () Bool)

(assert (=> b!24667 m!19401))

(assert (=> b!23790 d!4585))

(declare-fun b!24668 () Bool)

(declare-fun e!15947 () Bool)

(declare-fun e!15948 () Bool)

(assert (=> b!24668 (= e!15947 e!15948)))

(declare-fun c!3350 () Bool)

(assert (=> b!24668 (= c!3350 (validKeyInArray!0 (select (arr!608 (_keys!3164 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000000)))))

(declare-fun d!4587 () Bool)

(declare-fun res!14990 () Bool)

(assert (=> d!4587 (=> res!14990 e!15947)))

(assert (=> d!4587 (= res!14990 (bvsge #b00000000000000000000000000000000 (size!704 (_keys!3164 (v!1604 (underlying!116 thiss!938))))))))

(assert (=> d!4587 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3164 (v!1604 (underlying!116 thiss!938))) (mask!4730 (v!1604 (underlying!116 thiss!938)))) e!15947)))

(declare-fun b!24669 () Bool)

(declare-fun e!15949 () Bool)

(declare-fun call!2161 () Bool)

(assert (=> b!24669 (= e!15949 call!2161)))

(declare-fun bm!2158 () Bool)

(assert (=> bm!2158 (= call!2161 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3164 (v!1604 (underlying!116 thiss!938))) (mask!4730 (v!1604 (underlying!116 thiss!938)))))))

(declare-fun b!24670 () Bool)

(assert (=> b!24670 (= e!15948 call!2161)))

(declare-fun b!24671 () Bool)

(assert (=> b!24671 (= e!15948 e!15949)))

(declare-fun lt!9396 () (_ BitVec 64))

(assert (=> b!24671 (= lt!9396 (select (arr!608 (_keys!3164 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000000))))

(declare-fun lt!9398 () Unit!512)

(assert (=> b!24671 (= lt!9398 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3164 (v!1604 (underlying!116 thiss!938))) lt!9396 #b00000000000000000000000000000000))))

(assert (=> b!24671 (arrayContainsKey!0 (_keys!3164 (v!1604 (underlying!116 thiss!938))) lt!9396 #b00000000000000000000000000000000)))

(declare-fun lt!9397 () Unit!512)

(assert (=> b!24671 (= lt!9397 lt!9398)))

(declare-fun res!14991 () Bool)

(assert (=> b!24671 (= res!14991 (= (seekEntryOrOpen!0 (select (arr!608 (_keys!3164 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000000) (_keys!3164 (v!1604 (underlying!116 thiss!938))) (mask!4730 (v!1604 (underlying!116 thiss!938)))) (Found!54 #b00000000000000000000000000000000)))))

(assert (=> b!24671 (=> (not res!14991) (not e!15949))))

(assert (= (and d!4587 (not res!14990)) b!24668))

(assert (= (and b!24668 c!3350) b!24671))

(assert (= (and b!24668 (not c!3350)) b!24670))

(assert (= (and b!24671 res!14991) b!24669))

(assert (= (or b!24669 b!24670) bm!2158))

(assert (=> b!24668 m!19211))

(assert (=> b!24668 m!19211))

(assert (=> b!24668 m!19213))

(declare-fun m!19403 () Bool)

(assert (=> bm!2158 m!19403))

(assert (=> b!24671 m!19211))

(declare-fun m!19405 () Bool)

(assert (=> b!24671 m!19405))

(declare-fun m!19407 () Bool)

(assert (=> b!24671 m!19407))

(assert (=> b!24671 m!19211))

(declare-fun m!19409 () Bool)

(assert (=> b!24671 m!19409))

(assert (=> b!23668 d!4587))

(assert (=> d!4071 d!4145))

(declare-fun d!4589 () Bool)

(assert (=> d!4589 (contains!230 (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) lt!8287 (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))) (select (arr!608 (_keys!3164 (_2!487 lt!8158))) (index!2338 lt!8281)))))

(assert (=> d!4589 true))

(declare-fun _$16!72 () Unit!512)

(assert (=> d!4589 (= (choose!206 (_keys!3164 (_2!487 lt!8158)) lt!8287 (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) (index!2338 lt!8281) (defaultEntry!1743 (_2!487 lt!8158))) _$16!72)))

(declare-fun bs!1023 () Bool)

(assert (= bs!1023 d!4589))

(assert (=> bs!1023 m!17543))

(assert (=> bs!1023 m!16868))

(assert (=> bs!1023 m!17543))

(assert (=> bs!1023 m!16868))

(assert (=> bs!1023 m!17545))

(assert (=> d!4089 d!4589))

(assert (=> d!4089 d!4145))

(declare-fun d!4591 () Bool)

(assert (=> d!4591 (= (apply!29 lt!8546 #b1000000000000000000000000000000000000000000000000000000000000000) (get!391 (getValueByKey!61 (toList!299 lt!8546) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!1024 () Bool)

(assert (= bs!1024 d!4591))

(assert (=> bs!1024 m!18891))

(assert (=> bs!1024 m!18891))

(declare-fun m!19411 () Bool)

(assert (=> bs!1024 m!19411))

(assert (=> b!23637 d!4591))

(declare-fun bm!2159 () Bool)

(declare-fun call!2163 () Bool)

(declare-fun lt!9416 () ListLongMap!567)

(assert (=> bm!2159 (= call!2163 (contains!230 lt!9416 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!2160 () Bool)

(declare-fun call!2165 () Bool)

(assert (=> bm!2160 (= call!2165 (contains!230 lt!9416 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24672 () Bool)

(declare-fun e!15957 () Bool)

(declare-fun e!15958 () Bool)

(assert (=> b!24672 (= e!15957 e!15958)))

(declare-fun res!15000 () Bool)

(assert (=> b!24672 (=> (not res!15000) (not e!15958))))

(assert (=> b!24672 (= res!15000 (contains!230 lt!9416 (select (arr!608 (_keys!3164 (_2!487 lt!8249))) #b00000000000000000000000000000000)))))

(assert (=> b!24672 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8249)))))))

(declare-fun b!24673 () Bool)

(declare-fun e!15951 () Unit!512)

(declare-fun lt!9401 () Unit!512)

(assert (=> b!24673 (= e!15951 lt!9401)))

(declare-fun lt!9413 () ListLongMap!567)

(assert (=> b!24673 (= lt!9413 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!487 lt!8249)) (_values!1729 (_2!487 lt!8249)) (mask!4730 (_2!487 lt!8249)) (extraKeys!1641 (_2!487 lt!8249)) (zeroValue!1666 (_2!487 lt!8249)) (minValue!1666 (_2!487 lt!8249)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8249))))))

(declare-fun lt!9408 () (_ BitVec 64))

(assert (=> b!24673 (= lt!9408 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9417 () (_ BitVec 64))

(assert (=> b!24673 (= lt!9417 (select (arr!608 (_keys!3164 (_2!487 lt!8249))) #b00000000000000000000000000000000))))

(declare-fun lt!9409 () Unit!512)

(assert (=> b!24673 (= lt!9409 (addStillContains!14 lt!9413 lt!9408 (zeroValue!1666 (_2!487 lt!8249)) lt!9417))))

(assert (=> b!24673 (contains!230 (+!45 lt!9413 (tuple2!961 lt!9408 (zeroValue!1666 (_2!487 lt!8249)))) lt!9417)))

(declare-fun lt!9420 () Unit!512)

(assert (=> b!24673 (= lt!9420 lt!9409)))

(declare-fun lt!9404 () ListLongMap!567)

(assert (=> b!24673 (= lt!9404 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!487 lt!8249)) (_values!1729 (_2!487 lt!8249)) (mask!4730 (_2!487 lt!8249)) (extraKeys!1641 (_2!487 lt!8249)) (zeroValue!1666 (_2!487 lt!8249)) (minValue!1666 (_2!487 lt!8249)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8249))))))

(declare-fun lt!9419 () (_ BitVec 64))

(assert (=> b!24673 (= lt!9419 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9418 () (_ BitVec 64))

(assert (=> b!24673 (= lt!9418 (select (arr!608 (_keys!3164 (_2!487 lt!8249))) #b00000000000000000000000000000000))))

(declare-fun lt!9403 () Unit!512)

(assert (=> b!24673 (= lt!9403 (addApplyDifferent!14 lt!9404 lt!9419 (minValue!1666 (_2!487 lt!8249)) lt!9418))))

(assert (=> b!24673 (= (apply!29 (+!45 lt!9404 (tuple2!961 lt!9419 (minValue!1666 (_2!487 lt!8249)))) lt!9418) (apply!29 lt!9404 lt!9418))))

(declare-fun lt!9402 () Unit!512)

(assert (=> b!24673 (= lt!9402 lt!9403)))

(declare-fun lt!9411 () ListLongMap!567)

(assert (=> b!24673 (= lt!9411 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!487 lt!8249)) (_values!1729 (_2!487 lt!8249)) (mask!4730 (_2!487 lt!8249)) (extraKeys!1641 (_2!487 lt!8249)) (zeroValue!1666 (_2!487 lt!8249)) (minValue!1666 (_2!487 lt!8249)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8249))))))

(declare-fun lt!9414 () (_ BitVec 64))

(assert (=> b!24673 (= lt!9414 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9400 () (_ BitVec 64))

(assert (=> b!24673 (= lt!9400 (select (arr!608 (_keys!3164 (_2!487 lt!8249))) #b00000000000000000000000000000000))))

(declare-fun lt!9405 () Unit!512)

(assert (=> b!24673 (= lt!9405 (addApplyDifferent!14 lt!9411 lt!9414 (zeroValue!1666 (_2!487 lt!8249)) lt!9400))))

(assert (=> b!24673 (= (apply!29 (+!45 lt!9411 (tuple2!961 lt!9414 (zeroValue!1666 (_2!487 lt!8249)))) lt!9400) (apply!29 lt!9411 lt!9400))))

(declare-fun lt!9410 () Unit!512)

(assert (=> b!24673 (= lt!9410 lt!9405)))

(declare-fun lt!9412 () ListLongMap!567)

(assert (=> b!24673 (= lt!9412 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!487 lt!8249)) (_values!1729 (_2!487 lt!8249)) (mask!4730 (_2!487 lt!8249)) (extraKeys!1641 (_2!487 lt!8249)) (zeroValue!1666 (_2!487 lt!8249)) (minValue!1666 (_2!487 lt!8249)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8249))))))

(declare-fun lt!9407 () (_ BitVec 64))

(assert (=> b!24673 (= lt!9407 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9399 () (_ BitVec 64))

(assert (=> b!24673 (= lt!9399 (select (arr!608 (_keys!3164 (_2!487 lt!8249))) #b00000000000000000000000000000000))))

(assert (=> b!24673 (= lt!9401 (addApplyDifferent!14 lt!9412 lt!9407 (minValue!1666 (_2!487 lt!8249)) lt!9399))))

(assert (=> b!24673 (= (apply!29 (+!45 lt!9412 (tuple2!961 lt!9407 (minValue!1666 (_2!487 lt!8249)))) lt!9399) (apply!29 lt!9412 lt!9399))))

(declare-fun bm!2161 () Bool)

(declare-fun call!2166 () ListLongMap!567)

(assert (=> bm!2161 (= call!2166 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!487 lt!8249)) (_values!1729 (_2!487 lt!8249)) (mask!4730 (_2!487 lt!8249)) (extraKeys!1641 (_2!487 lt!8249)) (zeroValue!1666 (_2!487 lt!8249)) (minValue!1666 (_2!487 lt!8249)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8249))))))

(declare-fun b!24674 () Bool)

(declare-fun res!14995 () Bool)

(declare-fun e!15954 () Bool)

(assert (=> b!24674 (=> (not res!14995) (not e!15954))))

(declare-fun e!15950 () Bool)

(assert (=> b!24674 (= res!14995 e!15950)))

(declare-fun c!3353 () Bool)

(assert (=> b!24674 (= c!3353 (not (= (bvand (extraKeys!1641 (_2!487 lt!8249)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!24675 () Bool)

(declare-fun e!15962 () Bool)

(assert (=> b!24675 (= e!15962 (not call!2165))))

(declare-fun b!24676 () Bool)

(assert (=> b!24676 (= e!15950 (not call!2163))))

(declare-fun bm!2162 () Bool)

(declare-fun call!2167 () ListLongMap!567)

(assert (=> bm!2162 (= call!2167 call!2166)))

(declare-fun b!24677 () Bool)

(declare-fun e!15960 () ListLongMap!567)

(declare-fun call!2168 () ListLongMap!567)

(assert (=> b!24677 (= e!15960 call!2168)))

(declare-fun b!24678 () Bool)

(declare-fun res!14998 () Bool)

(assert (=> b!24678 (=> (not res!14998) (not e!15954))))

(assert (=> b!24678 (= res!14998 e!15957)))

(declare-fun res!14993 () Bool)

(assert (=> b!24678 (=> res!14993 e!15957)))

(declare-fun e!15953 () Bool)

(assert (=> b!24678 (= res!14993 (not e!15953))))

(declare-fun res!14997 () Bool)

(assert (=> b!24678 (=> (not res!14997) (not e!15953))))

(assert (=> b!24678 (= res!14997 (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8249)))))))

(declare-fun b!24680 () Bool)

(declare-fun e!15955 () ListLongMap!567)

(assert (=> b!24680 (= e!15955 call!2168)))

(declare-fun b!24681 () Bool)

(declare-fun e!15956 () Bool)

(assert (=> b!24681 (= e!15950 e!15956)))

(declare-fun res!14999 () Bool)

(assert (=> b!24681 (= res!14999 call!2163)))

(assert (=> b!24681 (=> (not res!14999) (not e!15956))))

(declare-fun b!24682 () Bool)

(assert (=> b!24682 (= e!15954 e!15962)))

(declare-fun c!3351 () Bool)

(assert (=> b!24682 (= c!3351 (not (= (bvand (extraKeys!1641 (_2!487 lt!8249)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!2163 () Bool)

(declare-fun call!2162 () ListLongMap!567)

(assert (=> bm!2163 (= call!2162 call!2167)))

(declare-fun b!24683 () Bool)

(assert (=> b!24683 (= e!15960 call!2162)))

(declare-fun b!24684 () Bool)

(declare-fun e!15961 () Bool)

(assert (=> b!24684 (= e!15961 (= (apply!29 lt!9416 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!1666 (_2!487 lt!8249))))))

(declare-fun b!24685 () Bool)

(declare-fun c!3354 () Bool)

(assert (=> b!24685 (= c!3354 (and (not (= (bvand (extraKeys!1641 (_2!487 lt!8249)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 (_2!487 lt!8249)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!24685 (= e!15955 e!15960)))

(declare-fun b!24686 () Bool)

(assert (=> b!24686 (= e!15953 (validKeyInArray!0 (select (arr!608 (_keys!3164 (_2!487 lt!8249))) #b00000000000000000000000000000000)))))

(declare-fun bm!2164 () Bool)

(declare-fun call!2164 () ListLongMap!567)

(assert (=> bm!2164 (= call!2168 call!2164)))

(declare-fun b!24687 () Bool)

(assert (=> b!24687 (= e!15962 e!15961)))

(declare-fun res!14996 () Bool)

(assert (=> b!24687 (= res!14996 call!2165)))

(assert (=> b!24687 (=> (not res!14996) (not e!15961))))

(declare-fun c!3352 () Bool)

(declare-fun c!3356 () Bool)

(declare-fun bm!2165 () Bool)

(assert (=> bm!2165 (= call!2164 (+!45 (ite c!3352 call!2166 (ite c!3356 call!2167 call!2162)) (ite (or c!3352 c!3356) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (_2!487 lt!8249))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!487 lt!8249))))))))

(declare-fun b!24688 () Bool)

(assert (=> b!24688 (= e!15956 (= (apply!29 lt!9416 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!1666 (_2!487 lt!8249))))))

(declare-fun b!24689 () Bool)

(declare-fun e!15952 () ListLongMap!567)

(assert (=> b!24689 (= e!15952 e!15955)))

(assert (=> b!24689 (= c!3356 (and (not (= (bvand (extraKeys!1641 (_2!487 lt!8249)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 (_2!487 lt!8249)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!24690 () Bool)

(declare-fun e!15959 () Bool)

(assert (=> b!24690 (= e!15959 (validKeyInArray!0 (select (arr!608 (_keys!3164 (_2!487 lt!8249))) #b00000000000000000000000000000000)))))

(declare-fun b!24679 () Bool)

(assert (=> b!24679 (= e!15952 (+!45 call!2164 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!487 lt!8249)))))))

(declare-fun d!4593 () Bool)

(assert (=> d!4593 e!15954))

(declare-fun res!14992 () Bool)

(assert (=> d!4593 (=> (not res!14992) (not e!15954))))

(assert (=> d!4593 (= res!14992 (or (bvsge #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8249)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8249)))))))))

(declare-fun lt!9406 () ListLongMap!567)

(assert (=> d!4593 (= lt!9416 lt!9406)))

(declare-fun lt!9415 () Unit!512)

(assert (=> d!4593 (= lt!9415 e!15951)))

(declare-fun c!3355 () Bool)

(assert (=> d!4593 (= c!3355 e!15959)))

(declare-fun res!14994 () Bool)

(assert (=> d!4593 (=> (not res!14994) (not e!15959))))

(assert (=> d!4593 (= res!14994 (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8249)))))))

(assert (=> d!4593 (= lt!9406 e!15952)))

(assert (=> d!4593 (= c!3352 (and (not (= (bvand (extraKeys!1641 (_2!487 lt!8249)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!1641 (_2!487 lt!8249)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!4593 (validMask!0 (mask!4730 (_2!487 lt!8249)))))

(assert (=> d!4593 (= (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8249)) (_values!1729 (_2!487 lt!8249)) (mask!4730 (_2!487 lt!8249)) (extraKeys!1641 (_2!487 lt!8249)) (zeroValue!1666 (_2!487 lt!8249)) (minValue!1666 (_2!487 lt!8249)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8249))) lt!9416)))

(declare-fun b!24691 () Bool)

(declare-fun Unit!582 () Unit!512)

(assert (=> b!24691 (= e!15951 Unit!582)))

(declare-fun b!24692 () Bool)

(assert (=> b!24692 (= e!15958 (= (apply!29 lt!9416 (select (arr!608 (_keys!3164 (_2!487 lt!8249))) #b00000000000000000000000000000000)) (get!390 (select (arr!607 (_values!1729 (_2!487 lt!8249))) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (_2!487 lt!8249)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!24692 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!703 (_values!1729 (_2!487 lt!8249)))))))

(assert (=> b!24692 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8249)))))))

(assert (= (and d!4593 c!3352) b!24679))

(assert (= (and d!4593 (not c!3352)) b!24689))

(assert (= (and b!24689 c!3356) b!24680))

(assert (= (and b!24689 (not c!3356)) b!24685))

(assert (= (and b!24685 c!3354) b!24677))

(assert (= (and b!24685 (not c!3354)) b!24683))

(assert (= (or b!24677 b!24683) bm!2163))

(assert (= (or b!24680 bm!2163) bm!2162))

(assert (= (or b!24680 b!24677) bm!2164))

(assert (= (or b!24679 bm!2162) bm!2161))

(assert (= (or b!24679 bm!2164) bm!2165))

(assert (= (and d!4593 res!14994) b!24690))

(assert (= (and d!4593 c!3355) b!24673))

(assert (= (and d!4593 (not c!3355)) b!24691))

(assert (= (and d!4593 res!14992) b!24678))

(assert (= (and b!24678 res!14997) b!24686))

(assert (= (and b!24678 (not res!14993)) b!24672))

(assert (= (and b!24672 res!15000) b!24692))

(assert (= (and b!24678 res!14998) b!24674))

(assert (= (and b!24674 c!3353) b!24681))

(assert (= (and b!24674 (not c!3353)) b!24676))

(assert (= (and b!24681 res!14999) b!24688))

(assert (= (or b!24681 b!24676) bm!2159))

(assert (= (and b!24674 res!14995) b!24682))

(assert (= (and b!24682 c!3351) b!24687))

(assert (= (and b!24682 (not c!3351)) b!24675))

(assert (= (and b!24687 res!14996) b!24684))

(assert (= (or b!24687 b!24675) bm!2160))

(declare-fun b_lambda!1629 () Bool)

(assert (=> (not b_lambda!1629) (not b!24692)))

(declare-fun tb!665 () Bool)

(declare-fun t!3248 () Bool)

(assert (=> (and b!23142 (= (defaultEntry!1743 (v!1604 (underlying!116 thiss!938))) (defaultEntry!1743 (_2!487 lt!8249))) t!3248) tb!665))

(declare-fun result!1105 () Bool)

(assert (=> tb!665 (= result!1105 tp_is_empty!1023)))

(assert (=> b!24692 t!3248))

(declare-fun b_and!1535 () Bool)

(assert (= b_and!1533 (and (=> t!3248 result!1105) b_and!1535)))

(declare-fun m!19413 () Bool)

(assert (=> bm!2161 m!19413))

(declare-fun m!19415 () Bool)

(assert (=> b!24688 m!19415))

(assert (=> b!24690 m!19219))

(assert (=> b!24690 m!19219))

(assert (=> b!24690 m!19221))

(assert (=> d!4593 m!18435))

(assert (=> b!24672 m!19219))

(assert (=> b!24672 m!19219))

(declare-fun m!19417 () Bool)

(assert (=> b!24672 m!19417))

(declare-fun m!19419 () Bool)

(assert (=> b!24673 m!19419))

(declare-fun m!19421 () Bool)

(assert (=> b!24673 m!19421))

(declare-fun m!19423 () Bool)

(assert (=> b!24673 m!19423))

(assert (=> b!24673 m!19421))

(declare-fun m!19425 () Bool)

(assert (=> b!24673 m!19425))

(declare-fun m!19427 () Bool)

(assert (=> b!24673 m!19427))

(declare-fun m!19429 () Bool)

(assert (=> b!24673 m!19429))

(declare-fun m!19431 () Bool)

(assert (=> b!24673 m!19431))

(declare-fun m!19433 () Bool)

(assert (=> b!24673 m!19433))

(declare-fun m!19435 () Bool)

(assert (=> b!24673 m!19435))

(declare-fun m!19437 () Bool)

(assert (=> b!24673 m!19437))

(assert (=> b!24673 m!19423))

(declare-fun m!19439 () Bool)

(assert (=> b!24673 m!19439))

(declare-fun m!19441 () Bool)

(assert (=> b!24673 m!19441))

(assert (=> b!24673 m!19429))

(declare-fun m!19443 () Bool)

(assert (=> b!24673 m!19443))

(assert (=> b!24673 m!19219))

(declare-fun m!19445 () Bool)

(assert (=> b!24673 m!19445))

(assert (=> b!24673 m!19413))

(declare-fun m!19447 () Bool)

(assert (=> b!24673 m!19447))

(assert (=> b!24673 m!19435))

(assert (=> b!24686 m!19219))

(assert (=> b!24686 m!19219))

(assert (=> b!24686 m!19221))

(declare-fun m!19449 () Bool)

(assert (=> b!24692 m!19449))

(assert (=> b!24692 m!19449))

(declare-fun m!19451 () Bool)

(assert (=> b!24692 m!19451))

(declare-fun m!19453 () Bool)

(assert (=> b!24692 m!19453))

(assert (=> b!24692 m!19451))

(assert (=> b!24692 m!19219))

(declare-fun m!19455 () Bool)

(assert (=> b!24692 m!19455))

(assert (=> b!24692 m!19219))

(declare-fun m!19457 () Bool)

(assert (=> bm!2160 m!19457))

(declare-fun m!19459 () Bool)

(assert (=> bm!2159 m!19459))

(declare-fun m!19461 () Bool)

(assert (=> b!24679 m!19461))

(declare-fun m!19463 () Bool)

(assert (=> b!24684 m!19463))

(declare-fun m!19465 () Bool)

(assert (=> bm!2165 m!19465))

(assert (=> d!4101 d!4593))

(declare-fun c!3357 () Bool)

(declare-fun d!4595 () Bool)

(assert (=> d!4595 (= c!3357 (and ((_ is Cons!564) (toList!299 lt!8750)) (= (_1!489 (h!1130 (toList!299 lt!8750))) (_1!489 (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(declare-fun e!15963 () Option!67)

(assert (=> d!4595 (= (getValueByKey!61 (toList!299 lt!8750) (_1!489 (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) e!15963)))

(declare-fun b!24693 () Bool)

(assert (=> b!24693 (= e!15963 (Some!66 (_2!489 (h!1130 (toList!299 lt!8750)))))))

(declare-fun b!24696 () Bool)

(declare-fun e!15964 () Option!67)

(assert (=> b!24696 (= e!15964 None!65)))

(declare-fun b!24694 () Bool)

(assert (=> b!24694 (= e!15963 e!15964)))

(declare-fun c!3358 () Bool)

(assert (=> b!24694 (= c!3358 (and ((_ is Cons!564) (toList!299 lt!8750)) (not (= (_1!489 (h!1130 (toList!299 lt!8750))) (_1!489 (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))))

(declare-fun b!24695 () Bool)

(assert (=> b!24695 (= e!15964 (getValueByKey!61 (t!3239 (toList!299 lt!8750)) (_1!489 (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(assert (= (and d!4595 c!3357) b!24693))

(assert (= (and d!4595 (not c!3357)) b!24694))

(assert (= (and b!24694 c!3358) b!24695))

(assert (= (and b!24694 (not c!3358)) b!24696))

(declare-fun m!19467 () Bool)

(assert (=> b!24695 m!19467))

(assert (=> b!23812 d!4595))

(declare-fun d!4597 () Bool)

(assert (=> d!4597 (= (inRange!0 (ite c!3099 (index!2338 lt!8663) (ite c!3102 (index!2337 lt!8665) (index!2340 lt!8665))) (mask!4730 (_2!487 lt!8158))) (and (bvsge (ite c!3099 (index!2338 lt!8663) (ite c!3102 (index!2337 lt!8665) (index!2340 lt!8665))) #b00000000000000000000000000000000) (bvslt (ite c!3099 (index!2338 lt!8663) (ite c!3102 (index!2337 lt!8665) (index!2340 lt!8665))) (bvadd (mask!4730 (_2!487 lt!8158)) #b00000000000000000000000000000001))))))

(assert (=> bm!2023 d!4597))

(declare-fun d!4599 () Bool)

(assert (=> d!4599 (= (inRange!0 (ite c!3118 (index!2338 lt!8782) (ite c!3121 (index!2337 lt!8784) (index!2340 lt!8784))) (mask!4730 lt!8161)) (and (bvsge (ite c!3118 (index!2338 lt!8782) (ite c!3121 (index!2337 lt!8784) (index!2340 lt!8784))) #b00000000000000000000000000000000) (bvslt (ite c!3118 (index!2338 lt!8782) (ite c!3121 (index!2337 lt!8784) (index!2340 lt!8784))) (bvadd (mask!4730 lt!8161) #b00000000000000000000000000000001))))))

(assert (=> bm!2041 d!4599))

(declare-fun d!4601 () Bool)

(assert (=> d!4601 (= (+!45 (getCurrentListMap!130 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (getCurrentListMap!130 (_keys!3164 lt!8161) (array!1284 (store (arr!607 (_values!1729 lt!8161)) (index!2338 lt!8254) (ValueCellFull!312 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (size!703 (_values!1729 lt!8161))) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))))

(assert (=> d!4601 true))

(declare-fun _$5!56 () Unit!512)

(assert (=> d!4601 (= (choose!207 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) (index!2338 lt!8254) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (defaultEntry!1743 lt!8161)) _$5!56)))

(declare-fun bs!1025 () Bool)

(assert (= bs!1025 d!4601))

(assert (=> bs!1025 m!16790))

(assert (=> bs!1025 m!16790))

(assert (=> bs!1025 m!17455))

(assert (=> bs!1025 m!16792))

(assert (=> bs!1025 m!17457))

(assert (=> d!4077 d!4601))

(assert (=> d!4077 d!4239))

(declare-fun d!4603 () Bool)

(declare-fun e!15965 () Bool)

(assert (=> d!4603 e!15965))

(declare-fun res!15001 () Bool)

(assert (=> d!4603 (=> (not res!15001) (not e!15965))))

(declare-fun lt!9423 () ListLongMap!567)

(assert (=> d!4603 (= res!15001 (contains!230 lt!9423 (_1!489 (ite (or c!3065 c!3069) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!2998 c!2997) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 (_2!487 lt!8158)))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158))))))))))

(declare-fun lt!9422 () List!568)

(assert (=> d!4603 (= lt!9423 (ListLongMap!568 lt!9422))))

(declare-fun lt!9421 () Unit!512)

(declare-fun lt!9424 () Unit!512)

(assert (=> d!4603 (= lt!9421 lt!9424)))

(assert (=> d!4603 (= (getValueByKey!61 lt!9422 (_1!489 (ite (or c!3065 c!3069) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!2998 c!2997) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 (_2!487 lt!8158)))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158))))))) (Some!66 (_2!489 (ite (or c!3065 c!3069) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!2998 c!2997) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 (_2!487 lt!8158)))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158))))))))))

(assert (=> d!4603 (= lt!9424 (lemmaContainsTupThenGetReturnValue!18 lt!9422 (_1!489 (ite (or c!3065 c!3069) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!2998 c!2997) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 (_2!487 lt!8158)))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158)))))) (_2!489 (ite (or c!3065 c!3069) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!2998 c!2997) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 (_2!487 lt!8158)))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158))))))))))

(assert (=> d!4603 (= lt!9422 (insertStrictlySorted!18 (toList!299 (ite c!3065 call!1999 (ite c!3069 call!2000 call!1995))) (_1!489 (ite (or c!3065 c!3069) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!2998 c!2997) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 (_2!487 lt!8158)))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158)))))) (_2!489 (ite (or c!3065 c!3069) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!2998 c!2997) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 (_2!487 lt!8158)))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158))))))))))

(assert (=> d!4603 (= (+!45 (ite c!3065 call!1999 (ite c!3069 call!2000 call!1995)) (ite (or c!3065 c!3069) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!2998 c!2997) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 (_2!487 lt!8158)))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158)))))) lt!9423)))

(declare-fun b!24697 () Bool)

(declare-fun res!15002 () Bool)

(assert (=> b!24697 (=> (not res!15002) (not e!15965))))

(assert (=> b!24697 (= res!15002 (= (getValueByKey!61 (toList!299 lt!9423) (_1!489 (ite (or c!3065 c!3069) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!2998 c!2997) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 (_2!487 lt!8158)))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158))))))) (Some!66 (_2!489 (ite (or c!3065 c!3069) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!2998 c!2997) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 (_2!487 lt!8158)))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158)))))))))))

(declare-fun b!24698 () Bool)

(assert (=> b!24698 (= e!15965 (contains!232 (toList!299 lt!9423) (ite (or c!3065 c!3069) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!2998 c!2997) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 (_2!487 lt!8158)))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158)))))))))

(assert (= (and d!4603 res!15001) b!24697))

(assert (= (and b!24697 res!15002) b!24698))

(declare-fun m!19469 () Bool)

(assert (=> d!4603 m!19469))

(declare-fun m!19471 () Bool)

(assert (=> d!4603 m!19471))

(declare-fun m!19473 () Bool)

(assert (=> d!4603 m!19473))

(declare-fun m!19475 () Bool)

(assert (=> d!4603 m!19475))

(declare-fun m!19477 () Bool)

(assert (=> b!24697 m!19477))

(declare-fun m!19479 () Bool)

(assert (=> b!24698 m!19479))

(assert (=> bm!1998 d!4603))

(declare-fun d!4605 () Bool)

(assert (=> d!4605 (isDefined!23 (getValueByKey!61 (toList!299 (getCurrentListMap!130 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161))) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun lt!9425 () Unit!512)

(assert (=> d!4605 (= lt!9425 (choose!215 (toList!299 (getCurrentListMap!130 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161))) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!15966 () Bool)

(assert (=> d!4605 e!15966))

(declare-fun res!15003 () Bool)

(assert (=> d!4605 (=> (not res!15003) (not e!15966))))

(assert (=> d!4605 (= res!15003 (isStrictlySorted!171 (toList!299 (getCurrentListMap!130 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))))))

(assert (=> d!4605 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!299 (getCurrentListMap!130 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161))) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) lt!9425)))

(declare-fun b!24699 () Bool)

(assert (=> b!24699 (= e!15966 (containsKey!25 (toList!299 (getCurrentListMap!130 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161))) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!4605 res!15003) b!24699))

(assert (=> d!4605 m!17463))

(assert (=> d!4605 m!17463))

(assert (=> d!4605 m!17465))

(declare-fun m!19481 () Bool)

(assert (=> d!4605 m!19481))

(declare-fun m!19483 () Bool)

(assert (=> d!4605 m!19483))

(assert (=> b!24699 m!17459))

(assert (=> b!23765 d!4605))

(assert (=> b!23765 d!4495))

(assert (=> b!23765 d!4497))

(declare-fun d!4607 () Bool)

(assert (=> d!4607 (= (inRange!0 (index!2338 lt!8742) (mask!4730 (_2!487 lt!8158))) (and (bvsge (index!2338 lt!8742) #b00000000000000000000000000000000) (bvslt (index!2338 lt!8742) (bvadd (mask!4730 (_2!487 lt!8158)) #b00000000000000000000000000000001))))))

(assert (=> b!23806 d!4607))

(declare-fun d!4609 () Bool)

(declare-fun res!15004 () Bool)

(declare-fun e!15967 () Bool)

(assert (=> d!4609 (=> res!15004 e!15967)))

(assert (=> d!4609 (= res!15004 (= (select (arr!608 (_keys!3164 lt!8161)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!4609 (= (arrayContainsKey!0 (_keys!3164 lt!8161) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!15967)))

(declare-fun b!24700 () Bool)

(declare-fun e!15968 () Bool)

(assert (=> b!24700 (= e!15967 e!15968)))

(declare-fun res!15005 () Bool)

(assert (=> b!24700 (=> (not res!15005) (not e!15968))))

(assert (=> b!24700 (= res!15005 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!704 (_keys!3164 lt!8161))))))

(declare-fun b!24701 () Bool)

(assert (=> b!24701 (= e!15968 (arrayContainsKey!0 (_keys!3164 lt!8161) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!4609 (not res!15004)) b!24700))

(assert (= (and b!24700 res!15005) b!24701))

(declare-fun m!19485 () Bool)

(assert (=> d!4609 m!19485))

(declare-fun m!19487 () Bool)

(assert (=> b!24701 m!19487))

(assert (=> b!23406 d!4609))

(declare-fun d!4611 () Bool)

(declare-fun e!15969 () Bool)

(assert (=> d!4611 e!15969))

(declare-fun res!15006 () Bool)

(assert (=> d!4611 (=> (not res!15006) (not e!15969))))

(declare-fun lt!9428 () ListLongMap!567)

(assert (=> d!4611 (= res!15006 (contains!230 lt!9428 (_1!489 (ite (or c!3111 c!3115) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 lt!8161)) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8161))))))))

(declare-fun lt!9427 () List!568)

(assert (=> d!4611 (= lt!9428 (ListLongMap!568 lt!9427))))

(declare-fun lt!9426 () Unit!512)

(declare-fun lt!9429 () Unit!512)

(assert (=> d!4611 (= lt!9426 lt!9429)))

(assert (=> d!4611 (= (getValueByKey!61 lt!9427 (_1!489 (ite (or c!3111 c!3115) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 lt!8161)) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8161))))) (Some!66 (_2!489 (ite (or c!3111 c!3115) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 lt!8161)) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8161))))))))

(assert (=> d!4611 (= lt!9429 (lemmaContainsTupThenGetReturnValue!18 lt!9427 (_1!489 (ite (or c!3111 c!3115) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 lt!8161)) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8161)))) (_2!489 (ite (or c!3111 c!3115) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 lt!8161)) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8161))))))))

(assert (=> d!4611 (= lt!9427 (insertStrictlySorted!18 (toList!299 (ite c!3111 call!2041 (ite c!3115 call!2042 call!2037))) (_1!489 (ite (or c!3111 c!3115) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 lt!8161)) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8161)))) (_2!489 (ite (or c!3111 c!3115) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 lt!8161)) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8161))))))))

(assert (=> d!4611 (= (+!45 (ite c!3111 call!2041 (ite c!3115 call!2042 call!2037)) (ite (or c!3111 c!3115) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 lt!8161)) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8161)))) lt!9428)))

(declare-fun b!24702 () Bool)

(declare-fun res!15007 () Bool)

(assert (=> b!24702 (=> (not res!15007) (not e!15969))))

(assert (=> b!24702 (= res!15007 (= (getValueByKey!61 (toList!299 lt!9428) (_1!489 (ite (or c!3111 c!3115) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 lt!8161)) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8161))))) (Some!66 (_2!489 (ite (or c!3111 c!3115) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 lt!8161)) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8161)))))))))

(declare-fun b!24703 () Bool)

(assert (=> b!24703 (= e!15969 (contains!232 (toList!299 lt!9428) (ite (or c!3111 c!3115) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 lt!8161)) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8161)))))))

(assert (= (and d!4611 res!15006) b!24702))

(assert (= (and b!24702 res!15007) b!24703))

(declare-fun m!19489 () Bool)

(assert (=> d!4611 m!19489))

(declare-fun m!19491 () Bool)

(assert (=> d!4611 m!19491))

(declare-fun m!19493 () Bool)

(assert (=> d!4611 m!19493))

(declare-fun m!19495 () Bool)

(assert (=> d!4611 m!19495))

(declare-fun m!19497 () Bool)

(assert (=> b!24702 m!19497))

(declare-fun m!19499 () Bool)

(assert (=> b!24703 m!19499))

(assert (=> bm!2040 d!4611))

(assert (=> b!23454 d!4285))

(declare-fun d!4613 () Bool)

(declare-fun e!15970 () Bool)

(assert (=> d!4613 e!15970))

(declare-fun res!15008 () Bool)

(assert (=> d!4613 (=> (not res!15008) (not e!15970))))

(declare-fun lt!9432 () ListLongMap!567)

(assert (=> d!4613 (= res!15008 (contains!230 lt!9432 (_1!489 (ite (or c!3080 c!3084) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 lt!8161)) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8161))))))))

(declare-fun lt!9431 () List!568)

(assert (=> d!4613 (= lt!9432 (ListLongMap!568 lt!9431))))

(declare-fun lt!9430 () Unit!512)

(declare-fun lt!9433 () Unit!512)

(assert (=> d!4613 (= lt!9430 lt!9433)))

(assert (=> d!4613 (= (getValueByKey!61 lt!9431 (_1!489 (ite (or c!3080 c!3084) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 lt!8161)) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8161))))) (Some!66 (_2!489 (ite (or c!3080 c!3084) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 lt!8161)) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8161))))))))

(assert (=> d!4613 (= lt!9433 (lemmaContainsTupThenGetReturnValue!18 lt!9431 (_1!489 (ite (or c!3080 c!3084) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 lt!8161)) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8161)))) (_2!489 (ite (or c!3080 c!3084) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 lt!8161)) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8161))))))))

(assert (=> d!4613 (= lt!9431 (insertStrictlySorted!18 (toList!299 (ite c!3080 call!2013 (ite c!3084 call!2014 call!2009))) (_1!489 (ite (or c!3080 c!3084) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 lt!8161)) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8161)))) (_2!489 (ite (or c!3080 c!3084) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 lt!8161)) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8161))))))))

(assert (=> d!4613 (= (+!45 (ite c!3080 call!2013 (ite c!3084 call!2014 call!2009)) (ite (or c!3080 c!3084) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 lt!8161)) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8161)))) lt!9432)))

(declare-fun b!24704 () Bool)

(declare-fun res!15009 () Bool)

(assert (=> b!24704 (=> (not res!15009) (not e!15970))))

(assert (=> b!24704 (= res!15009 (= (getValueByKey!61 (toList!299 lt!9432) (_1!489 (ite (or c!3080 c!3084) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 lt!8161)) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8161))))) (Some!66 (_2!489 (ite (or c!3080 c!3084) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 lt!8161)) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8161)))))))))

(declare-fun b!24705 () Bool)

(assert (=> b!24705 (= e!15970 (contains!232 (toList!299 lt!9432) (ite (or c!3080 c!3084) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 lt!8161)) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8161)))))))

(assert (= (and d!4613 res!15008) b!24704))

(assert (= (and b!24704 res!15009) b!24705))

(declare-fun m!19501 () Bool)

(assert (=> d!4613 m!19501))

(declare-fun m!19503 () Bool)

(assert (=> d!4613 m!19503))

(declare-fun m!19505 () Bool)

(assert (=> d!4613 m!19505))

(declare-fun m!19507 () Bool)

(assert (=> d!4613 m!19507))

(declare-fun m!19509 () Bool)

(assert (=> b!24704 m!19509))

(declare-fun m!19511 () Bool)

(assert (=> b!24705 m!19511))

(assert (=> bm!2012 d!4613))

(declare-fun b!24709 () Bool)

(declare-fun e!15971 () Bool)

(assert (=> b!24709 (= e!15971 (and (bvsge (extraKeys!1641 lt!8345) #b00000000000000000000000000000000) (bvsle (extraKeys!1641 lt!8345) #b00000000000000000000000000000011) (bvsge (_vacant!150 lt!8345) #b00000000000000000000000000000000)))))

(declare-fun b!24706 () Bool)

(declare-fun res!15010 () Bool)

(assert (=> b!24706 (=> (not res!15010) (not e!15971))))

(assert (=> b!24706 (= res!15010 (and (= (size!703 (_values!1729 lt!8345)) (bvadd (mask!4730 lt!8345) #b00000000000000000000000000000001)) (= (size!704 (_keys!3164 lt!8345)) (size!703 (_values!1729 lt!8345))) (bvsge (_size!150 lt!8345) #b00000000000000000000000000000000) (bvsle (_size!150 lt!8345) (bvadd (mask!4730 lt!8345) #b00000000000000000000000000000001))))))

(declare-fun b!24707 () Bool)

(declare-fun res!15011 () Bool)

(assert (=> b!24707 (=> (not res!15011) (not e!15971))))

(assert (=> b!24707 (= res!15011 (bvsge (size!711 lt!8345) (_size!150 lt!8345)))))

(declare-fun b!24708 () Bool)

(declare-fun res!15013 () Bool)

(assert (=> b!24708 (=> (not res!15013) (not e!15971))))

(assert (=> b!24708 (= res!15013 (= (size!711 lt!8345) (bvadd (_size!150 lt!8345) (bvsdiv (bvadd (extraKeys!1641 lt!8345) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun d!4615 () Bool)

(declare-fun res!15012 () Bool)

(assert (=> d!4615 (=> (not res!15012) (not e!15971))))

(assert (=> d!4615 (= res!15012 (validMask!0 (mask!4730 lt!8345)))))

(assert (=> d!4615 (= (simpleValid!20 lt!8345) e!15971)))

(assert (= (and d!4615 res!15012) b!24706))

(assert (= (and b!24706 res!15010) b!24707))

(assert (= (and b!24707 res!15011) b!24708))

(assert (= (and b!24708 res!15013) b!24709))

(declare-fun m!19513 () Bool)

(assert (=> b!24707 m!19513))

(assert (=> b!24708 m!19513))

(assert (=> d!4615 m!18449))

(assert (=> d!4011 d!4615))

(declare-fun d!4617 () Bool)

(declare-fun res!15018 () Bool)

(declare-fun e!15976 () Bool)

(assert (=> d!4617 (=> res!15018 e!15976)))

(assert (=> d!4617 (= res!15018 (and ((_ is Cons!564) (toList!299 call!1952)) (= (_1!489 (h!1130 (toList!299 call!1952))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!4617 (= (containsKey!25 (toList!299 call!1952) #b1000000000000000000000000000000000000000000000000000000000000000) e!15976)))

(declare-fun b!24714 () Bool)

(declare-fun e!15977 () Bool)

(assert (=> b!24714 (= e!15976 e!15977)))

(declare-fun res!15019 () Bool)

(assert (=> b!24714 (=> (not res!15019) (not e!15977))))

(assert (=> b!24714 (= res!15019 (and (or (not ((_ is Cons!564) (toList!299 call!1952))) (bvsle (_1!489 (h!1130 (toList!299 call!1952))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!564) (toList!299 call!1952)) (bvslt (_1!489 (h!1130 (toList!299 call!1952))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!24715 () Bool)

(assert (=> b!24715 (= e!15977 (containsKey!25 (t!3239 (toList!299 call!1952)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!4617 (not res!15018)) b!24714))

(assert (= (and b!24714 res!15019) b!24715))

(declare-fun m!19515 () Bool)

(assert (=> b!24715 m!19515))

(assert (=> d!4037 d!4617))

(assert (=> b!23764 d!4475))

(assert (=> b!23764 d!4081))

(declare-fun bm!2166 () Bool)

(declare-fun call!2170 () Bool)

(declare-fun lt!9451 () ListLongMap!567)

(assert (=> bm!2166 (= call!2170 (contains!230 lt!9451 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!2167 () Bool)

(declare-fun call!2172 () Bool)

(assert (=> bm!2167 (= call!2172 (contains!230 lt!9451 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24716 () Bool)

(declare-fun e!15985 () Bool)

(declare-fun e!15986 () Bool)

(assert (=> b!24716 (= e!15985 e!15986)))

(declare-fun res!15028 () Bool)

(assert (=> b!24716 (=> (not res!15028) (not e!15986))))

(assert (=> b!24716 (= res!15028 (contains!230 lt!9451 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000)))))

(assert (=> b!24716 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))))))

(declare-fun b!24717 () Bool)

(declare-fun e!15979 () Unit!512)

(declare-fun lt!9436 () Unit!512)

(assert (=> b!24717 (= e!15979 lt!9436)))

(declare-fun lt!9448 () ListLongMap!567)

(assert (=> b!24717 (= lt!9448 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8161) (array!1284 (store (arr!607 (_values!1729 lt!8161)) (index!2338 lt!8254) (ValueCellFull!312 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (size!703 (_values!1729 lt!8161))) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))))

(declare-fun lt!9443 () (_ BitVec 64))

(assert (=> b!24717 (= lt!9443 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9452 () (_ BitVec 64))

(assert (=> b!24717 (= lt!9452 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000))))

(declare-fun lt!9444 () Unit!512)

(assert (=> b!24717 (= lt!9444 (addStillContains!14 lt!9448 lt!9443 (zeroValue!1666 lt!8161) lt!9452))))

(assert (=> b!24717 (contains!230 (+!45 lt!9448 (tuple2!961 lt!9443 (zeroValue!1666 lt!8161))) lt!9452)))

(declare-fun lt!9455 () Unit!512)

(assert (=> b!24717 (= lt!9455 lt!9444)))

(declare-fun lt!9439 () ListLongMap!567)

(assert (=> b!24717 (= lt!9439 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8161) (array!1284 (store (arr!607 (_values!1729 lt!8161)) (index!2338 lt!8254) (ValueCellFull!312 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (size!703 (_values!1729 lt!8161))) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))))

(declare-fun lt!9454 () (_ BitVec 64))

(assert (=> b!24717 (= lt!9454 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9453 () (_ BitVec 64))

(assert (=> b!24717 (= lt!9453 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000))))

(declare-fun lt!9438 () Unit!512)

(assert (=> b!24717 (= lt!9438 (addApplyDifferent!14 lt!9439 lt!9454 (minValue!1666 lt!8161) lt!9453))))

(assert (=> b!24717 (= (apply!29 (+!45 lt!9439 (tuple2!961 lt!9454 (minValue!1666 lt!8161))) lt!9453) (apply!29 lt!9439 lt!9453))))

(declare-fun lt!9437 () Unit!512)

(assert (=> b!24717 (= lt!9437 lt!9438)))

(declare-fun lt!9446 () ListLongMap!567)

(assert (=> b!24717 (= lt!9446 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8161) (array!1284 (store (arr!607 (_values!1729 lt!8161)) (index!2338 lt!8254) (ValueCellFull!312 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (size!703 (_values!1729 lt!8161))) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))))

(declare-fun lt!9449 () (_ BitVec 64))

(assert (=> b!24717 (= lt!9449 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9435 () (_ BitVec 64))

(assert (=> b!24717 (= lt!9435 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000))))

(declare-fun lt!9440 () Unit!512)

(assert (=> b!24717 (= lt!9440 (addApplyDifferent!14 lt!9446 lt!9449 (zeroValue!1666 lt!8161) lt!9435))))

(assert (=> b!24717 (= (apply!29 (+!45 lt!9446 (tuple2!961 lt!9449 (zeroValue!1666 lt!8161))) lt!9435) (apply!29 lt!9446 lt!9435))))

(declare-fun lt!9445 () Unit!512)

(assert (=> b!24717 (= lt!9445 lt!9440)))

(declare-fun lt!9447 () ListLongMap!567)

(assert (=> b!24717 (= lt!9447 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8161) (array!1284 (store (arr!607 (_values!1729 lt!8161)) (index!2338 lt!8254) (ValueCellFull!312 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (size!703 (_values!1729 lt!8161))) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))))

(declare-fun lt!9442 () (_ BitVec 64))

(assert (=> b!24717 (= lt!9442 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9434 () (_ BitVec 64))

(assert (=> b!24717 (= lt!9434 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000))))

(assert (=> b!24717 (= lt!9436 (addApplyDifferent!14 lt!9447 lt!9442 (minValue!1666 lt!8161) lt!9434))))

(assert (=> b!24717 (= (apply!29 (+!45 lt!9447 (tuple2!961 lt!9442 (minValue!1666 lt!8161))) lt!9434) (apply!29 lt!9447 lt!9434))))

(declare-fun call!2173 () ListLongMap!567)

(declare-fun bm!2168 () Bool)

(assert (=> bm!2168 (= call!2173 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8161) (array!1284 (store (arr!607 (_values!1729 lt!8161)) (index!2338 lt!8254) (ValueCellFull!312 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (size!703 (_values!1729 lt!8161))) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))))

(declare-fun b!24718 () Bool)

(declare-fun res!15023 () Bool)

(declare-fun e!15982 () Bool)

(assert (=> b!24718 (=> (not res!15023) (not e!15982))))

(declare-fun e!15978 () Bool)

(assert (=> b!24718 (= res!15023 e!15978)))

(declare-fun c!3361 () Bool)

(assert (=> b!24718 (= c!3361 (not (= (bvand (extraKeys!1641 lt!8161) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!24719 () Bool)

(declare-fun e!15990 () Bool)

(assert (=> b!24719 (= e!15990 (not call!2172))))

(declare-fun b!24720 () Bool)

(assert (=> b!24720 (= e!15978 (not call!2170))))

(declare-fun bm!2169 () Bool)

(declare-fun call!2174 () ListLongMap!567)

(assert (=> bm!2169 (= call!2174 call!2173)))

(declare-fun b!24721 () Bool)

(declare-fun e!15988 () ListLongMap!567)

(declare-fun call!2175 () ListLongMap!567)

(assert (=> b!24721 (= e!15988 call!2175)))

(declare-fun b!24722 () Bool)

(declare-fun res!15026 () Bool)

(assert (=> b!24722 (=> (not res!15026) (not e!15982))))

(assert (=> b!24722 (= res!15026 e!15985)))

(declare-fun res!15021 () Bool)

(assert (=> b!24722 (=> res!15021 e!15985)))

(declare-fun e!15981 () Bool)

(assert (=> b!24722 (= res!15021 (not e!15981))))

(declare-fun res!15025 () Bool)

(assert (=> b!24722 (=> (not res!15025) (not e!15981))))

(assert (=> b!24722 (= res!15025 (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))))))

(declare-fun b!24724 () Bool)

(declare-fun e!15983 () ListLongMap!567)

(assert (=> b!24724 (= e!15983 call!2175)))

(declare-fun b!24725 () Bool)

(declare-fun e!15984 () Bool)

(assert (=> b!24725 (= e!15978 e!15984)))

(declare-fun res!15027 () Bool)

(assert (=> b!24725 (= res!15027 call!2170)))

(assert (=> b!24725 (=> (not res!15027) (not e!15984))))

(declare-fun b!24726 () Bool)

(assert (=> b!24726 (= e!15982 e!15990)))

(declare-fun c!3359 () Bool)

(assert (=> b!24726 (= c!3359 (not (= (bvand (extraKeys!1641 lt!8161) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!2170 () Bool)

(declare-fun call!2169 () ListLongMap!567)

(assert (=> bm!2170 (= call!2169 call!2174)))

(declare-fun b!24727 () Bool)

(assert (=> b!24727 (= e!15988 call!2169)))

(declare-fun b!24728 () Bool)

(declare-fun e!15989 () Bool)

(assert (=> b!24728 (= e!15989 (= (apply!29 lt!9451 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!1666 lt!8161)))))

(declare-fun b!24729 () Bool)

(declare-fun c!3362 () Bool)

(assert (=> b!24729 (= c!3362 (and (not (= (bvand (extraKeys!1641 lt!8161) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 lt!8161) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!24729 (= e!15983 e!15988)))

(declare-fun b!24730 () Bool)

(assert (=> b!24730 (= e!15981 (validKeyInArray!0 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000)))))

(declare-fun bm!2171 () Bool)

(declare-fun call!2171 () ListLongMap!567)

(assert (=> bm!2171 (= call!2175 call!2171)))

(declare-fun b!24731 () Bool)

(assert (=> b!24731 (= e!15990 e!15989)))

(declare-fun res!15024 () Bool)

(assert (=> b!24731 (= res!15024 call!2172)))

(assert (=> b!24731 (=> (not res!15024) (not e!15989))))

(declare-fun c!3360 () Bool)

(declare-fun bm!2172 () Bool)

(declare-fun c!3364 () Bool)

(assert (=> bm!2172 (= call!2171 (+!45 (ite c!3360 call!2173 (ite c!3364 call!2174 call!2169)) (ite (or c!3360 c!3364) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 lt!8161)) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8161)))))))

(declare-fun b!24732 () Bool)

(assert (=> b!24732 (= e!15984 (= (apply!29 lt!9451 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!1666 lt!8161)))))

(declare-fun b!24733 () Bool)

(declare-fun e!15980 () ListLongMap!567)

(assert (=> b!24733 (= e!15980 e!15983)))

(assert (=> b!24733 (= c!3364 (and (not (= (bvand (extraKeys!1641 lt!8161) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 lt!8161) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!24734 () Bool)

(declare-fun e!15987 () Bool)

(assert (=> b!24734 (= e!15987 (validKeyInArray!0 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000)))))

(declare-fun b!24723 () Bool)

(assert (=> b!24723 (= e!15980 (+!45 call!2171 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8161))))))

(declare-fun d!4619 () Bool)

(assert (=> d!4619 e!15982))

(declare-fun res!15020 () Bool)

(assert (=> d!4619 (=> (not res!15020) (not e!15982))))

(assert (=> d!4619 (= res!15020 (or (bvsge #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))))))))

(declare-fun lt!9441 () ListLongMap!567)

(assert (=> d!4619 (= lt!9451 lt!9441)))

(declare-fun lt!9450 () Unit!512)

(assert (=> d!4619 (= lt!9450 e!15979)))

(declare-fun c!3363 () Bool)

(assert (=> d!4619 (= c!3363 e!15987)))

(declare-fun res!15022 () Bool)

(assert (=> d!4619 (=> (not res!15022) (not e!15987))))

(assert (=> d!4619 (= res!15022 (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))))))

(assert (=> d!4619 (= lt!9441 e!15980)))

(assert (=> d!4619 (= c!3360 (and (not (= (bvand (extraKeys!1641 lt!8161) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!1641 lt!8161) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!4619 (validMask!0 (mask!4730 lt!8161))))

(assert (=> d!4619 (= (getCurrentListMap!130 (_keys!3164 lt!8161) (array!1284 (store (arr!607 (_values!1729 lt!8161)) (index!2338 lt!8254) (ValueCellFull!312 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (size!703 (_values!1729 lt!8161))) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)) lt!9451)))

(declare-fun b!24735 () Bool)

(declare-fun Unit!583 () Unit!512)

(assert (=> b!24735 (= e!15979 Unit!583)))

(declare-fun b!24736 () Bool)

(assert (=> b!24736 (= e!15986 (= (apply!29 lt!9451 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000)) (get!390 (select (arr!607 (array!1284 (store (arr!607 (_values!1729 lt!8161)) (index!2338 lt!8254) (ValueCellFull!312 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (size!703 (_values!1729 lt!8161)))) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 lt!8161) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!24736 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!703 (array!1284 (store (arr!607 (_values!1729 lt!8161)) (index!2338 lt!8254) (ValueCellFull!312 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (size!703 (_values!1729 lt!8161))))))))

(assert (=> b!24736 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))))))

(assert (= (and d!4619 c!3360) b!24723))

(assert (= (and d!4619 (not c!3360)) b!24733))

(assert (= (and b!24733 c!3364) b!24724))

(assert (= (and b!24733 (not c!3364)) b!24729))

(assert (= (and b!24729 c!3362) b!24721))

(assert (= (and b!24729 (not c!3362)) b!24727))

(assert (= (or b!24721 b!24727) bm!2170))

(assert (= (or b!24724 bm!2170) bm!2169))

(assert (= (or b!24724 b!24721) bm!2171))

(assert (= (or b!24723 bm!2169) bm!2168))

(assert (= (or b!24723 bm!2171) bm!2172))

(assert (= (and d!4619 res!15022) b!24734))

(assert (= (and d!4619 c!3363) b!24717))

(assert (= (and d!4619 (not c!3363)) b!24735))

(assert (= (and d!4619 res!15020) b!24722))

(assert (= (and b!24722 res!15025) b!24730))

(assert (= (and b!24722 (not res!15021)) b!24716))

(assert (= (and b!24716 res!15028) b!24736))

(assert (= (and b!24722 res!15026) b!24718))

(assert (= (and b!24718 c!3361) b!24725))

(assert (= (and b!24718 (not c!3361)) b!24720))

(assert (= (and b!24725 res!15027) b!24732))

(assert (= (or b!24725 b!24720) bm!2166))

(assert (= (and b!24718 res!15023) b!24726))

(assert (= (and b!24726 c!3359) b!24731))

(assert (= (and b!24726 (not c!3359)) b!24719))

(assert (= (and b!24731 res!15024) b!24728))

(assert (= (or b!24731 b!24719) bm!2167))

(declare-fun b_lambda!1631 () Bool)

(assert (=> (not b_lambda!1631) (not b!24736)))

(assert (=> b!24736 t!3244))

(declare-fun b_and!1537 () Bool)

(assert (= b_and!1535 (and (=> t!3244 result!1101) b_and!1537)))

(declare-fun m!19517 () Bool)

(assert (=> bm!2168 m!19517))

(declare-fun m!19519 () Bool)

(assert (=> b!24732 m!19519))

(assert (=> b!24734 m!16936))

(assert (=> b!24734 m!16936))

(assert (=> b!24734 m!17202))

(assert (=> d!4619 m!17182))

(assert (=> b!24716 m!16936))

(assert (=> b!24716 m!16936))

(declare-fun m!19521 () Bool)

(assert (=> b!24716 m!19521))

(declare-fun m!19523 () Bool)

(assert (=> b!24717 m!19523))

(declare-fun m!19525 () Bool)

(assert (=> b!24717 m!19525))

(declare-fun m!19527 () Bool)

(assert (=> b!24717 m!19527))

(assert (=> b!24717 m!19525))

(declare-fun m!19529 () Bool)

(assert (=> b!24717 m!19529))

(declare-fun m!19531 () Bool)

(assert (=> b!24717 m!19531))

(declare-fun m!19533 () Bool)

(assert (=> b!24717 m!19533))

(declare-fun m!19535 () Bool)

(assert (=> b!24717 m!19535))

(declare-fun m!19537 () Bool)

(assert (=> b!24717 m!19537))

(declare-fun m!19539 () Bool)

(assert (=> b!24717 m!19539))

(declare-fun m!19541 () Bool)

(assert (=> b!24717 m!19541))

(assert (=> b!24717 m!19527))

(declare-fun m!19543 () Bool)

(assert (=> b!24717 m!19543))

(declare-fun m!19545 () Bool)

(assert (=> b!24717 m!19545))

(assert (=> b!24717 m!19533))

(declare-fun m!19547 () Bool)

(assert (=> b!24717 m!19547))

(assert (=> b!24717 m!16936))

(declare-fun m!19549 () Bool)

(assert (=> b!24717 m!19549))

(assert (=> b!24717 m!19517))

(declare-fun m!19551 () Bool)

(assert (=> b!24717 m!19551))

(assert (=> b!24717 m!19539))

(assert (=> b!24730 m!16936))

(assert (=> b!24730 m!16936))

(assert (=> b!24730 m!17202))

(declare-fun m!19553 () Bool)

(assert (=> b!24736 m!19553))

(assert (=> b!24736 m!19553))

(assert (=> b!24736 m!17238))

(declare-fun m!19555 () Bool)

(assert (=> b!24736 m!19555))

(assert (=> b!24736 m!17238))

(assert (=> b!24736 m!16936))

(declare-fun m!19557 () Bool)

(assert (=> b!24736 m!19557))

(assert (=> b!24736 m!16936))

(declare-fun m!19559 () Bool)

(assert (=> bm!2167 m!19559))

(declare-fun m!19561 () Bool)

(assert (=> bm!2166 m!19561))

(declare-fun m!19563 () Bool)

(assert (=> b!24723 m!19563))

(declare-fun m!19565 () Bool)

(assert (=> b!24728 m!19565))

(declare-fun m!19567 () Bool)

(assert (=> bm!2172 m!19567))

(assert (=> b!23764 d!4619))

(declare-fun d!4621 () Bool)

(assert (=> d!4621 (isDefined!23 (getValueByKey!61 (toList!299 e!15161) (ite c!2996 #b1000000000000000000000000000000000000000000000000000000000000000 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) (index!2338 lt!8281)))))))

(declare-fun lt!9456 () Unit!512)

(assert (=> d!4621 (= lt!9456 (choose!215 (toList!299 e!15161) (ite c!2996 #b1000000000000000000000000000000000000000000000000000000000000000 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) (index!2338 lt!8281)))))))

(declare-fun e!15991 () Bool)

(assert (=> d!4621 e!15991))

(declare-fun res!15029 () Bool)

(assert (=> d!4621 (=> (not res!15029) (not e!15991))))

(assert (=> d!4621 (= res!15029 (isStrictlySorted!171 (toList!299 e!15161)))))

(assert (=> d!4621 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!299 e!15161) (ite c!2996 #b1000000000000000000000000000000000000000000000000000000000000000 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) (index!2338 lt!8281)))) lt!9456)))

(declare-fun b!24737 () Bool)

(assert (=> b!24737 (= e!15991 (containsKey!25 (toList!299 e!15161) (ite c!2996 #b1000000000000000000000000000000000000000000000000000000000000000 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) (index!2338 lt!8281)))))))

(assert (= (and d!4621 res!15029) b!24737))

(assert (=> d!4621 m!17329))

(assert (=> d!4621 m!17329))

(assert (=> d!4621 m!17331))

(declare-fun m!19569 () Bool)

(assert (=> d!4621 m!19569))

(declare-fun m!19571 () Bool)

(assert (=> d!4621 m!19571))

(assert (=> b!24737 m!17325))

(assert (=> b!23684 d!4621))

(assert (=> b!23684 d!4499))

(assert (=> b!23684 d!4501))

(assert (=> b!23802 d!4391))

(assert (=> b!23802 d!4071))

(declare-fun bm!2173 () Bool)

(declare-fun call!2177 () Bool)

(declare-fun lt!9474 () ListLongMap!567)

(assert (=> bm!2173 (= call!2177 (contains!230 lt!9474 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!2174 () Bool)

(declare-fun call!2179 () Bool)

(assert (=> bm!2174 (= call!2179 (contains!230 lt!9474 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24738 () Bool)

(declare-fun e!15999 () Bool)

(declare-fun e!16000 () Bool)

(assert (=> b!24738 (= e!15999 e!16000)))

(declare-fun res!15038 () Bool)

(assert (=> b!24738 (=> (not res!15038) (not e!16000))))

(assert (=> b!24738 (= res!15038 (contains!230 lt!9474 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000)))))

(assert (=> b!24738 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))))))

(declare-fun b!24739 () Bool)

(declare-fun e!15993 () Unit!512)

(declare-fun lt!9459 () Unit!512)

(assert (=> b!24739 (= e!15993 lt!9459)))

(declare-fun lt!9471 () ListLongMap!567)

(assert (=> b!24739 (= lt!9471 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!487 lt!8158)) (array!1284 (store (arr!607 (_values!1729 (_2!487 lt!8158))) (index!2338 lt!8281) (ValueCellFull!312 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!703 (_values!1729 (_2!487 lt!8158)))) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))

(declare-fun lt!9466 () (_ BitVec 64))

(assert (=> b!24739 (= lt!9466 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9475 () (_ BitVec 64))

(assert (=> b!24739 (= lt!9475 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000))))

(declare-fun lt!9467 () Unit!512)

(assert (=> b!24739 (= lt!9467 (addStillContains!14 lt!9471 lt!9466 (zeroValue!1666 (_2!487 lt!8158)) lt!9475))))

(assert (=> b!24739 (contains!230 (+!45 lt!9471 (tuple2!961 lt!9466 (zeroValue!1666 (_2!487 lt!8158)))) lt!9475)))

(declare-fun lt!9478 () Unit!512)

(assert (=> b!24739 (= lt!9478 lt!9467)))

(declare-fun lt!9462 () ListLongMap!567)

(assert (=> b!24739 (= lt!9462 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!487 lt!8158)) (array!1284 (store (arr!607 (_values!1729 (_2!487 lt!8158))) (index!2338 lt!8281) (ValueCellFull!312 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!703 (_values!1729 (_2!487 lt!8158)))) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))

(declare-fun lt!9477 () (_ BitVec 64))

(assert (=> b!24739 (= lt!9477 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9476 () (_ BitVec 64))

(assert (=> b!24739 (= lt!9476 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000))))

(declare-fun lt!9461 () Unit!512)

(assert (=> b!24739 (= lt!9461 (addApplyDifferent!14 lt!9462 lt!9477 (minValue!1666 (_2!487 lt!8158)) lt!9476))))

(assert (=> b!24739 (= (apply!29 (+!45 lt!9462 (tuple2!961 lt!9477 (minValue!1666 (_2!487 lt!8158)))) lt!9476) (apply!29 lt!9462 lt!9476))))

(declare-fun lt!9460 () Unit!512)

(assert (=> b!24739 (= lt!9460 lt!9461)))

(declare-fun lt!9469 () ListLongMap!567)

(assert (=> b!24739 (= lt!9469 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!487 lt!8158)) (array!1284 (store (arr!607 (_values!1729 (_2!487 lt!8158))) (index!2338 lt!8281) (ValueCellFull!312 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!703 (_values!1729 (_2!487 lt!8158)))) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))

(declare-fun lt!9472 () (_ BitVec 64))

(assert (=> b!24739 (= lt!9472 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9458 () (_ BitVec 64))

(assert (=> b!24739 (= lt!9458 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000))))

(declare-fun lt!9463 () Unit!512)

(assert (=> b!24739 (= lt!9463 (addApplyDifferent!14 lt!9469 lt!9472 (zeroValue!1666 (_2!487 lt!8158)) lt!9458))))

(assert (=> b!24739 (= (apply!29 (+!45 lt!9469 (tuple2!961 lt!9472 (zeroValue!1666 (_2!487 lt!8158)))) lt!9458) (apply!29 lt!9469 lt!9458))))

(declare-fun lt!9468 () Unit!512)

(assert (=> b!24739 (= lt!9468 lt!9463)))

(declare-fun lt!9470 () ListLongMap!567)

(assert (=> b!24739 (= lt!9470 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!487 lt!8158)) (array!1284 (store (arr!607 (_values!1729 (_2!487 lt!8158))) (index!2338 lt!8281) (ValueCellFull!312 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!703 (_values!1729 (_2!487 lt!8158)))) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))

(declare-fun lt!9465 () (_ BitVec 64))

(assert (=> b!24739 (= lt!9465 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9457 () (_ BitVec 64))

(assert (=> b!24739 (= lt!9457 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000))))

(assert (=> b!24739 (= lt!9459 (addApplyDifferent!14 lt!9470 lt!9465 (minValue!1666 (_2!487 lt!8158)) lt!9457))))

(assert (=> b!24739 (= (apply!29 (+!45 lt!9470 (tuple2!961 lt!9465 (minValue!1666 (_2!487 lt!8158)))) lt!9457) (apply!29 lt!9470 lt!9457))))

(declare-fun bm!2175 () Bool)

(declare-fun call!2180 () ListLongMap!567)

(assert (=> bm!2175 (= call!2180 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!487 lt!8158)) (array!1284 (store (arr!607 (_values!1729 (_2!487 lt!8158))) (index!2338 lt!8281) (ValueCellFull!312 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!703 (_values!1729 (_2!487 lt!8158)))) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))

(declare-fun b!24740 () Bool)

(declare-fun res!15033 () Bool)

(declare-fun e!15996 () Bool)

(assert (=> b!24740 (=> (not res!15033) (not e!15996))))

(declare-fun e!15992 () Bool)

(assert (=> b!24740 (= res!15033 e!15992)))

(declare-fun c!3367 () Bool)

(assert (=> b!24740 (= c!3367 (not (= (bvand (extraKeys!1641 (_2!487 lt!8158)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!24741 () Bool)

(declare-fun e!16004 () Bool)

(assert (=> b!24741 (= e!16004 (not call!2179))))

(declare-fun b!24742 () Bool)

(assert (=> b!24742 (= e!15992 (not call!2177))))

(declare-fun bm!2176 () Bool)

(declare-fun call!2181 () ListLongMap!567)

(assert (=> bm!2176 (= call!2181 call!2180)))

(declare-fun b!24743 () Bool)

(declare-fun e!16002 () ListLongMap!567)

(declare-fun call!2182 () ListLongMap!567)

(assert (=> b!24743 (= e!16002 call!2182)))

(declare-fun b!24744 () Bool)

(declare-fun res!15036 () Bool)

(assert (=> b!24744 (=> (not res!15036) (not e!15996))))

(assert (=> b!24744 (= res!15036 e!15999)))

(declare-fun res!15031 () Bool)

(assert (=> b!24744 (=> res!15031 e!15999)))

(declare-fun e!15995 () Bool)

(assert (=> b!24744 (= res!15031 (not e!15995))))

(declare-fun res!15035 () Bool)

(assert (=> b!24744 (=> (not res!15035) (not e!15995))))

(assert (=> b!24744 (= res!15035 (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))))))

(declare-fun b!24746 () Bool)

(declare-fun e!15997 () ListLongMap!567)

(assert (=> b!24746 (= e!15997 call!2182)))

(declare-fun b!24747 () Bool)

(declare-fun e!15998 () Bool)

(assert (=> b!24747 (= e!15992 e!15998)))

(declare-fun res!15037 () Bool)

(assert (=> b!24747 (= res!15037 call!2177)))

(assert (=> b!24747 (=> (not res!15037) (not e!15998))))

(declare-fun b!24748 () Bool)

(assert (=> b!24748 (= e!15996 e!16004)))

(declare-fun c!3365 () Bool)

(assert (=> b!24748 (= c!3365 (not (= (bvand (extraKeys!1641 (_2!487 lt!8158)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!2177 () Bool)

(declare-fun call!2176 () ListLongMap!567)

(assert (=> bm!2177 (= call!2176 call!2181)))

(declare-fun b!24749 () Bool)

(assert (=> b!24749 (= e!16002 call!2176)))

(declare-fun b!24750 () Bool)

(declare-fun e!16003 () Bool)

(assert (=> b!24750 (= e!16003 (= (apply!29 lt!9474 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!1666 (_2!487 lt!8158))))))

(declare-fun b!24751 () Bool)

(declare-fun c!3368 () Bool)

(assert (=> b!24751 (= c!3368 (and (not (= (bvand (extraKeys!1641 (_2!487 lt!8158)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 (_2!487 lt!8158)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!24751 (= e!15997 e!16002)))

(declare-fun b!24752 () Bool)

(assert (=> b!24752 (= e!15995 (validKeyInArray!0 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000)))))

(declare-fun bm!2178 () Bool)

(declare-fun call!2178 () ListLongMap!567)

(assert (=> bm!2178 (= call!2182 call!2178)))

(declare-fun b!24753 () Bool)

(assert (=> b!24753 (= e!16004 e!16003)))

(declare-fun res!15034 () Bool)

(assert (=> b!24753 (= res!15034 call!2179)))

(assert (=> b!24753 (=> (not res!15034) (not e!16003))))

(declare-fun bm!2179 () Bool)

(declare-fun c!3366 () Bool)

(declare-fun c!3370 () Bool)

(assert (=> bm!2179 (= call!2178 (+!45 (ite c!3366 call!2180 (ite c!3370 call!2181 call!2176)) (ite (or c!3366 c!3370) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (_2!487 lt!8158))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!487 lt!8158))))))))

(declare-fun b!24754 () Bool)

(assert (=> b!24754 (= e!15998 (= (apply!29 lt!9474 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!1666 (_2!487 lt!8158))))))

(declare-fun b!24755 () Bool)

(declare-fun e!15994 () ListLongMap!567)

(assert (=> b!24755 (= e!15994 e!15997)))

(assert (=> b!24755 (= c!3370 (and (not (= (bvand (extraKeys!1641 (_2!487 lt!8158)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 (_2!487 lt!8158)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!24756 () Bool)

(declare-fun e!16001 () Bool)

(assert (=> b!24756 (= e!16001 (validKeyInArray!0 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000)))))

(declare-fun b!24745 () Bool)

(assert (=> b!24745 (= e!15994 (+!45 call!2178 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!487 lt!8158)))))))

(declare-fun d!4623 () Bool)

(assert (=> d!4623 e!15996))

(declare-fun res!15030 () Bool)

(assert (=> d!4623 (=> (not res!15030) (not e!15996))))

(assert (=> d!4623 (= res!15030 (or (bvsge #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))))))))

(declare-fun lt!9464 () ListLongMap!567)

(assert (=> d!4623 (= lt!9474 lt!9464)))

(declare-fun lt!9473 () Unit!512)

(assert (=> d!4623 (= lt!9473 e!15993)))

(declare-fun c!3369 () Bool)

(assert (=> d!4623 (= c!3369 e!16001)))

(declare-fun res!15032 () Bool)

(assert (=> d!4623 (=> (not res!15032) (not e!16001))))

(assert (=> d!4623 (= res!15032 (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))))))

(assert (=> d!4623 (= lt!9464 e!15994)))

(assert (=> d!4623 (= c!3366 (and (not (= (bvand (extraKeys!1641 (_2!487 lt!8158)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!1641 (_2!487 lt!8158)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!4623 (validMask!0 (mask!4730 (_2!487 lt!8158)))))

(assert (=> d!4623 (= (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) (array!1284 (store (arr!607 (_values!1729 (_2!487 lt!8158))) (index!2338 lt!8281) (ValueCellFull!312 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!703 (_values!1729 (_2!487 lt!8158)))) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))) lt!9474)))

(declare-fun b!24757 () Bool)

(declare-fun Unit!584 () Unit!512)

(assert (=> b!24757 (= e!15993 Unit!584)))

(declare-fun b!24758 () Bool)

(assert (=> b!24758 (= e!16000 (= (apply!29 lt!9474 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000)) (get!390 (select (arr!607 (array!1284 (store (arr!607 (_values!1729 (_2!487 lt!8158))) (index!2338 lt!8281) (ValueCellFull!312 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!703 (_values!1729 (_2!487 lt!8158))))) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (_2!487 lt!8158)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!24758 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!703 (array!1284 (store (arr!607 (_values!1729 (_2!487 lt!8158))) (index!2338 lt!8281) (ValueCellFull!312 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!703 (_values!1729 (_2!487 lt!8158)))))))))

(assert (=> b!24758 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))))))

(assert (= (and d!4623 c!3366) b!24745))

(assert (= (and d!4623 (not c!3366)) b!24755))

(assert (= (and b!24755 c!3370) b!24746))

(assert (= (and b!24755 (not c!3370)) b!24751))

(assert (= (and b!24751 c!3368) b!24743))

(assert (= (and b!24751 (not c!3368)) b!24749))

(assert (= (or b!24743 b!24749) bm!2177))

(assert (= (or b!24746 bm!2177) bm!2176))

(assert (= (or b!24746 b!24743) bm!2178))

(assert (= (or b!24745 bm!2176) bm!2175))

(assert (= (or b!24745 bm!2178) bm!2179))

(assert (= (and d!4623 res!15032) b!24756))

(assert (= (and d!4623 c!3369) b!24739))

(assert (= (and d!4623 (not c!3369)) b!24757))

(assert (= (and d!4623 res!15030) b!24744))

(assert (= (and b!24744 res!15035) b!24752))

(assert (= (and b!24744 (not res!15031)) b!24738))

(assert (= (and b!24738 res!15038) b!24758))

(assert (= (and b!24744 res!15036) b!24740))

(assert (= (and b!24740 c!3367) b!24747))

(assert (= (and b!24740 (not c!3367)) b!24742))

(assert (= (and b!24747 res!15037) b!24754))

(assert (= (or b!24747 b!24742) bm!2173))

(assert (= (and b!24740 res!15033) b!24748))

(assert (= (and b!24748 c!3365) b!24753))

(assert (= (and b!24748 (not c!3365)) b!24741))

(assert (= (and b!24753 res!15034) b!24750))

(assert (= (or b!24753 b!24741) bm!2174))

(declare-fun b_lambda!1633 () Bool)

(assert (=> (not b_lambda!1633) (not b!24758)))

(assert (=> b!24758 t!3242))

(declare-fun b_and!1539 () Bool)

(assert (= b_and!1537 (and (=> t!3242 result!1099) b_and!1539)))

(declare-fun m!19573 () Bool)

(assert (=> bm!2175 m!19573))

(declare-fun m!19575 () Bool)

(assert (=> b!24754 m!19575))

(assert (=> b!24756 m!16986))

(assert (=> b!24756 m!16986))

(assert (=> b!24756 m!16988))

(assert (=> d!4623 m!16990))

(assert (=> b!24738 m!16986))

(assert (=> b!24738 m!16986))

(declare-fun m!19577 () Bool)

(assert (=> b!24738 m!19577))

(declare-fun m!19579 () Bool)

(assert (=> b!24739 m!19579))

(declare-fun m!19581 () Bool)

(assert (=> b!24739 m!19581))

(declare-fun m!19583 () Bool)

(assert (=> b!24739 m!19583))

(assert (=> b!24739 m!19581))

(declare-fun m!19585 () Bool)

(assert (=> b!24739 m!19585))

(declare-fun m!19587 () Bool)

(assert (=> b!24739 m!19587))

(declare-fun m!19589 () Bool)

(assert (=> b!24739 m!19589))

(declare-fun m!19591 () Bool)

(assert (=> b!24739 m!19591))

(declare-fun m!19593 () Bool)

(assert (=> b!24739 m!19593))

(declare-fun m!19595 () Bool)

(assert (=> b!24739 m!19595))

(declare-fun m!19597 () Bool)

(assert (=> b!24739 m!19597))

(assert (=> b!24739 m!19583))

(declare-fun m!19599 () Bool)

(assert (=> b!24739 m!19599))

(declare-fun m!19601 () Bool)

(assert (=> b!24739 m!19601))

(assert (=> b!24739 m!19589))

(declare-fun m!19603 () Bool)

(assert (=> b!24739 m!19603))

(assert (=> b!24739 m!16986))

(declare-fun m!19605 () Bool)

(assert (=> b!24739 m!19605))

(assert (=> b!24739 m!19573))

(declare-fun m!19607 () Bool)

(assert (=> b!24739 m!19607))

(assert (=> b!24739 m!19595))

(assert (=> b!24752 m!16986))

(assert (=> b!24752 m!16986))

(assert (=> b!24752 m!16988))

(declare-fun m!19609 () Bool)

(assert (=> b!24758 m!19609))

(assert (=> b!24758 m!19609))

(assert (=> b!24758 m!17026))

(declare-fun m!19611 () Bool)

(assert (=> b!24758 m!19611))

(assert (=> b!24758 m!17026))

(assert (=> b!24758 m!16986))

(declare-fun m!19613 () Bool)

(assert (=> b!24758 m!19613))

(assert (=> b!24758 m!16986))

(declare-fun m!19615 () Bool)

(assert (=> bm!2174 m!19615))

(declare-fun m!19617 () Bool)

(assert (=> bm!2173 m!19617))

(declare-fun m!19619 () Bool)

(assert (=> b!24745 m!19619))

(declare-fun m!19621 () Bool)

(assert (=> b!24750 m!19621))

(declare-fun m!19623 () Bool)

(assert (=> bm!2179 m!19623))

(assert (=> b!23802 d!4623))

(declare-fun d!4625 () Bool)

(declare-fun e!16005 () Bool)

(assert (=> d!4625 e!16005))

(declare-fun res!15039 () Bool)

(assert (=> d!4625 (=> res!15039 e!16005)))

(declare-fun lt!9479 () Bool)

(assert (=> d!4625 (= res!15039 (not lt!9479))))

(declare-fun lt!9480 () Bool)

(assert (=> d!4625 (= lt!9479 lt!9480)))

(declare-fun lt!9481 () Unit!512)

(declare-fun e!16006 () Unit!512)

(assert (=> d!4625 (= lt!9481 e!16006)))

(declare-fun c!3371 () Bool)

(assert (=> d!4625 (= c!3371 lt!9480)))

(assert (=> d!4625 (= lt!9480 (containsKey!25 (toList!299 lt!8746) (_1!489 (ite c!2984 (ite c!2983 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(assert (=> d!4625 (= (contains!230 lt!8746 (_1!489 (ite c!2984 (ite c!2983 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))) lt!9479)))

(declare-fun b!24759 () Bool)

(declare-fun lt!9482 () Unit!512)

(assert (=> b!24759 (= e!16006 lt!9482)))

(assert (=> b!24759 (= lt!9482 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!299 lt!8746) (_1!489 (ite c!2984 (ite c!2983 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(assert (=> b!24759 (isDefined!23 (getValueByKey!61 (toList!299 lt!8746) (_1!489 (ite c!2984 (ite c!2983 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(declare-fun b!24760 () Bool)

(declare-fun Unit!585 () Unit!512)

(assert (=> b!24760 (= e!16006 Unit!585)))

(declare-fun b!24761 () Bool)

(assert (=> b!24761 (= e!16005 (isDefined!23 (getValueByKey!61 (toList!299 lt!8746) (_1!489 (ite c!2984 (ite c!2983 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))))

(assert (= (and d!4625 c!3371) b!24759))

(assert (= (and d!4625 (not c!3371)) b!24760))

(assert (= (and d!4625 (not res!15039)) b!24761))

(declare-fun m!19625 () Bool)

(assert (=> d!4625 m!19625))

(declare-fun m!19627 () Bool)

(assert (=> b!24759 m!19627))

(assert (=> b!24759 m!17573))

(assert (=> b!24759 m!17573))

(declare-fun m!19629 () Bool)

(assert (=> b!24759 m!19629))

(assert (=> b!24761 m!17573))

(assert (=> b!24761 m!17573))

(assert (=> b!24761 m!19629))

(assert (=> d!4097 d!4625))

(declare-fun c!3372 () Bool)

(declare-fun d!4627 () Bool)

(assert (=> d!4627 (= c!3372 (and ((_ is Cons!564) lt!8745) (= (_1!489 (h!1130 lt!8745)) (_1!489 (ite c!2984 (ite c!2983 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))))

(declare-fun e!16007 () Option!67)

(assert (=> d!4627 (= (getValueByKey!61 lt!8745 (_1!489 (ite c!2984 (ite c!2983 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))) e!16007)))

(declare-fun b!24762 () Bool)

(assert (=> b!24762 (= e!16007 (Some!66 (_2!489 (h!1130 lt!8745))))))

(declare-fun b!24765 () Bool)

(declare-fun e!16008 () Option!67)

(assert (=> b!24765 (= e!16008 None!65)))

(declare-fun b!24763 () Bool)

(assert (=> b!24763 (= e!16007 e!16008)))

(declare-fun c!3373 () Bool)

(assert (=> b!24763 (= c!3373 (and ((_ is Cons!564) lt!8745) (not (= (_1!489 (h!1130 lt!8745)) (_1!489 (ite c!2984 (ite c!2983 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))))

(declare-fun b!24764 () Bool)

(assert (=> b!24764 (= e!16008 (getValueByKey!61 (t!3239 lt!8745) (_1!489 (ite c!2984 (ite c!2983 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(assert (= (and d!4627 c!3372) b!24762))

(assert (= (and d!4627 (not c!3372)) b!24763))

(assert (= (and b!24763 c!3373) b!24764))

(assert (= (and b!24763 (not c!3373)) b!24765))

(declare-fun m!19631 () Bool)

(assert (=> b!24764 m!19631))

(assert (=> d!4097 d!4627))

(declare-fun d!4629 () Bool)

(assert (=> d!4629 (= (getValueByKey!61 lt!8745 (_1!489 (ite c!2984 (ite c!2983 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))) (Some!66 (_2!489 (ite c!2984 (ite c!2983 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(declare-fun lt!9483 () Unit!512)

(assert (=> d!4629 (= lt!9483 (choose!213 lt!8745 (_1!489 (ite c!2984 (ite c!2983 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (_2!489 (ite c!2984 (ite c!2983 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(declare-fun e!16009 () Bool)

(assert (=> d!4629 e!16009))

(declare-fun res!15040 () Bool)

(assert (=> d!4629 (=> (not res!15040) (not e!16009))))

(assert (=> d!4629 (= res!15040 (isStrictlySorted!171 lt!8745))))

(assert (=> d!4629 (= (lemmaContainsTupThenGetReturnValue!18 lt!8745 (_1!489 (ite c!2984 (ite c!2983 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (_2!489 (ite c!2984 (ite c!2983 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))) lt!9483)))

(declare-fun b!24766 () Bool)

(declare-fun res!15041 () Bool)

(assert (=> b!24766 (=> (not res!15041) (not e!16009))))

(assert (=> b!24766 (= res!15041 (containsKey!25 lt!8745 (_1!489 (ite c!2984 (ite c!2983 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(declare-fun b!24767 () Bool)

(assert (=> b!24767 (= e!16009 (contains!232 lt!8745 (tuple2!961 (_1!489 (ite c!2984 (ite c!2983 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (_2!489 (ite c!2984 (ite c!2983 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))))

(assert (= (and d!4629 res!15040) b!24766))

(assert (= (and b!24766 res!15041) b!24767))

(assert (=> d!4629 m!17567))

(declare-fun m!19633 () Bool)

(assert (=> d!4629 m!19633))

(declare-fun m!19635 () Bool)

(assert (=> d!4629 m!19635))

(declare-fun m!19637 () Bool)

(assert (=> b!24766 m!19637))

(declare-fun m!19639 () Bool)

(assert (=> b!24767 m!19639))

(assert (=> d!4097 d!4629))

(declare-fun b!24768 () Bool)

(declare-fun e!16013 () List!568)

(declare-fun e!16010 () List!568)

(assert (=> b!24768 (= e!16013 e!16010)))

(declare-fun c!3377 () Bool)

(assert (=> b!24768 (= c!3377 (and ((_ is Cons!564) (toList!299 e!15151)) (= (_1!489 (h!1130 (toList!299 e!15151))) (_1!489 (ite c!2984 (ite c!2983 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))))

(declare-fun b!24769 () Bool)

(declare-fun res!15043 () Bool)

(declare-fun e!16014 () Bool)

(assert (=> b!24769 (=> (not res!15043) (not e!16014))))

(declare-fun lt!9484 () List!568)

(assert (=> b!24769 (= res!15043 (containsKey!25 lt!9484 (_1!489 (ite c!2984 (ite c!2983 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(declare-fun d!4631 () Bool)

(assert (=> d!4631 e!16014))

(declare-fun res!15042 () Bool)

(assert (=> d!4631 (=> (not res!15042) (not e!16014))))

(assert (=> d!4631 (= res!15042 (isStrictlySorted!171 lt!9484))))

(assert (=> d!4631 (= lt!9484 e!16013)))

(declare-fun c!3375 () Bool)

(assert (=> d!4631 (= c!3375 (and ((_ is Cons!564) (toList!299 e!15151)) (bvslt (_1!489 (h!1130 (toList!299 e!15151))) (_1!489 (ite c!2984 (ite c!2983 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))))

(assert (=> d!4631 (isStrictlySorted!171 (toList!299 e!15151))))

(assert (=> d!4631 (= (insertStrictlySorted!18 (toList!299 e!15151) (_1!489 (ite c!2984 (ite c!2983 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (_2!489 (ite c!2984 (ite c!2983 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))) lt!9484)))

(declare-fun b!24770 () Bool)

(declare-fun call!2183 () List!568)

(assert (=> b!24770 (= e!16013 call!2183)))

(declare-fun b!24771 () Bool)

(declare-fun e!16011 () List!568)

(declare-fun call!2184 () List!568)

(assert (=> b!24771 (= e!16011 call!2184)))

(declare-fun b!24772 () Bool)

(assert (=> b!24772 (= e!16011 call!2184)))

(declare-fun bm!2180 () Bool)

(declare-fun call!2185 () List!568)

(assert (=> bm!2180 (= call!2185 call!2183)))

(declare-fun bm!2181 () Bool)

(assert (=> bm!2181 (= call!2184 call!2185)))

(declare-fun e!16012 () List!568)

(declare-fun bm!2182 () Bool)

(assert (=> bm!2182 (= call!2183 ($colon$colon!31 e!16012 (ite c!3375 (h!1130 (toList!299 e!15151)) (tuple2!961 (_1!489 (ite c!2984 (ite c!2983 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (_2!489 (ite c!2984 (ite c!2983 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))))

(declare-fun c!3376 () Bool)

(assert (=> bm!2182 (= c!3376 c!3375)))

(declare-fun c!3374 () Bool)

(declare-fun b!24773 () Bool)

(assert (=> b!24773 (= e!16012 (ite c!3377 (t!3239 (toList!299 e!15151)) (ite c!3374 (Cons!564 (h!1130 (toList!299 e!15151)) (t!3239 (toList!299 e!15151))) Nil!565)))))

(declare-fun b!24774 () Bool)

(assert (=> b!24774 (= e!16014 (contains!232 lt!9484 (tuple2!961 (_1!489 (ite c!2984 (ite c!2983 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (_2!489 (ite c!2984 (ite c!2983 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))))

(declare-fun b!24775 () Bool)

(assert (=> b!24775 (= c!3374 (and ((_ is Cons!564) (toList!299 e!15151)) (bvsgt (_1!489 (h!1130 (toList!299 e!15151))) (_1!489 (ite c!2984 (ite c!2983 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))))

(assert (=> b!24775 (= e!16010 e!16011)))

(declare-fun b!24776 () Bool)

(assert (=> b!24776 (= e!16012 (insertStrictlySorted!18 (t!3239 (toList!299 e!15151)) (_1!489 (ite c!2984 (ite c!2983 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (_2!489 (ite c!2984 (ite c!2983 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(declare-fun b!24777 () Bool)

(assert (=> b!24777 (= e!16010 call!2185)))

(assert (= (and d!4631 c!3375) b!24770))

(assert (= (and d!4631 (not c!3375)) b!24768))

(assert (= (and b!24768 c!3377) b!24777))

(assert (= (and b!24768 (not c!3377)) b!24775))

(assert (= (and b!24775 c!3374) b!24771))

(assert (= (and b!24775 (not c!3374)) b!24772))

(assert (= (or b!24771 b!24772) bm!2181))

(assert (= (or b!24777 bm!2181) bm!2180))

(assert (= (or b!24770 bm!2180) bm!2182))

(assert (= (and bm!2182 c!3376) b!24776))

(assert (= (and bm!2182 (not c!3376)) b!24773))

(assert (= (and d!4631 res!15042) b!24769))

(assert (= (and b!24769 res!15043) b!24774))

(declare-fun m!19641 () Bool)

(assert (=> d!4631 m!19641))

(declare-fun m!19643 () Bool)

(assert (=> d!4631 m!19643))

(declare-fun m!19645 () Bool)

(assert (=> b!24776 m!19645))

(declare-fun m!19647 () Bool)

(assert (=> b!24769 m!19647))

(declare-fun m!19649 () Bool)

(assert (=> b!24774 m!19649))

(declare-fun m!19651 () Bool)

(assert (=> bm!2182 m!19651))

(assert (=> d!4097 d!4631))

(declare-fun d!4633 () Bool)

(declare-fun res!15044 () Bool)

(declare-fun e!16015 () Bool)

(assert (=> d!4633 (=> res!15044 e!16015)))

(assert (=> d!4633 (= res!15044 (and ((_ is Cons!564) (toList!299 call!1928)) (= (_1!489 (h!1130 (toList!299 call!1928))) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!4633 (= (containsKey!25 (toList!299 call!1928) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) e!16015)))

(declare-fun b!24778 () Bool)

(declare-fun e!16016 () Bool)

(assert (=> b!24778 (= e!16015 e!16016)))

(declare-fun res!15045 () Bool)

(assert (=> b!24778 (=> (not res!15045) (not e!16016))))

(assert (=> b!24778 (= res!15045 (and (or (not ((_ is Cons!564) (toList!299 call!1928))) (bvsle (_1!489 (h!1130 (toList!299 call!1928))) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) ((_ is Cons!564) (toList!299 call!1928)) (bvslt (_1!489 (h!1130 (toList!299 call!1928))) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!24779 () Bool)

(assert (=> b!24779 (= e!16016 (containsKey!25 (t!3239 (toList!299 call!1928)) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!4633 (not res!15044)) b!24778))

(assert (= (and b!24778 res!15045) b!24779))

(declare-fun m!19653 () Bool)

(assert (=> b!24779 m!19653))

(assert (=> d!4025 d!4633))

(declare-fun d!4635 () Bool)

(assert (=> d!4635 (= (apply!29 lt!8725 #b0000000000000000000000000000000000000000000000000000000000000000) (get!391 (getValueByKey!61 (toList!299 lt!8725) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!1026 () Bool)

(assert (= bs!1026 d!4635))

(assert (=> bs!1026 m!18583))

(assert (=> bs!1026 m!18583))

(declare-fun m!19655 () Bool)

(assert (=> bs!1026 m!19655))

(assert (=> b!23784 d!4635))

(assert (=> b!23756 d!4221))

(declare-fun b!24780 () Bool)

(declare-fun e!16018 () (_ BitVec 32))

(declare-fun e!16017 () (_ BitVec 32))

(assert (=> b!24780 (= e!16018 e!16017)))

(declare-fun c!3378 () Bool)

(assert (=> b!24780 (= c!3378 (validKeyInArray!0 (select (arr!608 (_keys!3164 (_2!487 lt!8249))) #b00000000000000000000000000000000)))))

(declare-fun b!24781 () Bool)

(declare-fun call!2186 () (_ BitVec 32))

(assert (=> b!24781 (= e!16017 call!2186)))

(declare-fun bm!2183 () Bool)

(assert (=> bm!2183 (= call!2186 (arrayCountValidKeys!0 (_keys!3164 (_2!487 lt!8249)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!704 (_keys!3164 (_2!487 lt!8249)))))))

(declare-fun b!24783 () Bool)

(assert (=> b!24783 (= e!16017 (bvadd #b00000000000000000000000000000001 call!2186))))

(declare-fun b!24782 () Bool)

(assert (=> b!24782 (= e!16018 #b00000000000000000000000000000000)))

(declare-fun d!4637 () Bool)

(declare-fun lt!9485 () (_ BitVec 32))

(assert (=> d!4637 (and (bvsge lt!9485 #b00000000000000000000000000000000) (bvsle lt!9485 (bvsub (size!704 (_keys!3164 (_2!487 lt!8249))) #b00000000000000000000000000000000)))))

(assert (=> d!4637 (= lt!9485 e!16018)))

(declare-fun c!3379 () Bool)

(assert (=> d!4637 (= c!3379 (bvsge #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8249)))))))

(assert (=> d!4637 (and (bvsle #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8249)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!704 (_keys!3164 (_2!487 lt!8249))) (size!704 (_keys!3164 (_2!487 lt!8249)))))))

(assert (=> d!4637 (= (arrayCountValidKeys!0 (_keys!3164 (_2!487 lt!8249)) #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8249)))) lt!9485)))

(assert (= (and d!4637 c!3379) b!24782))

(assert (= (and d!4637 (not c!3379)) b!24780))

(assert (= (and b!24780 c!3378) b!24783))

(assert (= (and b!24780 (not c!3378)) b!24781))

(assert (= (or b!24783 b!24781) bm!2183))

(assert (=> b!24780 m!19219))

(assert (=> b!24780 m!19219))

(assert (=> b!24780 m!19221))

(declare-fun m!19657 () Bool)

(assert (=> bm!2183 m!19657))

(assert (=> b!23789 d!4637))

(declare-fun d!4639 () Bool)

(assert (=> d!4639 (= (isDefined!23 (getValueByKey!61 (toList!299 e!15139) (ite c!2982 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (select (arr!608 (_keys!3164 lt!8161)) (index!2338 lt!8254))))) (not (isEmpty!173 (getValueByKey!61 (toList!299 e!15139) (ite c!2982 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (select (arr!608 (_keys!3164 lt!8161)) (index!2338 lt!8254)))))))))

(declare-fun bs!1027 () Bool)

(assert (= bs!1027 d!4639))

(assert (=> bs!1027 m!17619))

(declare-fun m!19659 () Bool)

(assert (=> bs!1027 m!19659))

(assert (=> b!23818 d!4639))

(declare-fun c!3380 () Bool)

(declare-fun d!4641 () Bool)

(assert (=> d!4641 (= c!3380 (and ((_ is Cons!564) (toList!299 e!15139)) (= (_1!489 (h!1130 (toList!299 e!15139))) (ite c!2982 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (select (arr!608 (_keys!3164 lt!8161)) (index!2338 lt!8254))))))))

(declare-fun e!16019 () Option!67)

(assert (=> d!4641 (= (getValueByKey!61 (toList!299 e!15139) (ite c!2982 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (select (arr!608 (_keys!3164 lt!8161)) (index!2338 lt!8254)))) e!16019)))

(declare-fun b!24784 () Bool)

(assert (=> b!24784 (= e!16019 (Some!66 (_2!489 (h!1130 (toList!299 e!15139)))))))

(declare-fun b!24787 () Bool)

(declare-fun e!16020 () Option!67)

(assert (=> b!24787 (= e!16020 None!65)))

(declare-fun b!24785 () Bool)

(assert (=> b!24785 (= e!16019 e!16020)))

(declare-fun c!3381 () Bool)

(assert (=> b!24785 (= c!3381 (and ((_ is Cons!564) (toList!299 e!15139)) (not (= (_1!489 (h!1130 (toList!299 e!15139))) (ite c!2982 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (select (arr!608 (_keys!3164 lt!8161)) (index!2338 lt!8254)))))))))

(declare-fun b!24786 () Bool)

(assert (=> b!24786 (= e!16020 (getValueByKey!61 (t!3239 (toList!299 e!15139)) (ite c!2982 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (select (arr!608 (_keys!3164 lt!8161)) (index!2338 lt!8254)))))))

(assert (= (and d!4641 c!3380) b!24784))

(assert (= (and d!4641 (not c!3380)) b!24785))

(assert (= (and b!24785 c!3381) b!24786))

(assert (= (and b!24785 (not c!3381)) b!24787))

(declare-fun m!19661 () Bool)

(assert (=> b!24786 m!19661))

(assert (=> b!23818 d!4641))

(declare-fun d!4643 () Bool)

(declare-fun e!16021 () Bool)

(assert (=> d!4643 e!16021))

(declare-fun res!15046 () Bool)

(assert (=> d!4643 (=> res!15046 e!16021)))

(declare-fun lt!9486 () Bool)

(assert (=> d!4643 (= res!15046 (not lt!9486))))

(declare-fun lt!9487 () Bool)

(assert (=> d!4643 (= lt!9486 lt!9487)))

(declare-fun lt!9488 () Unit!512)

(declare-fun e!16022 () Unit!512)

(assert (=> d!4643 (= lt!9488 e!16022)))

(declare-fun c!3382 () Bool)

(assert (=> d!4643 (= c!3382 lt!9487)))

(assert (=> d!4643 (= lt!9487 (containsKey!25 (toList!299 (getCurrentListMap!130 (_keys!3164 lt!8161) lt!8260 (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161))) (select (arr!608 (_keys!3164 lt!8161)) (index!2338 lt!8254))))))

(assert (=> d!4643 (= (contains!230 (getCurrentListMap!130 (_keys!3164 lt!8161) lt!8260 (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)) (select (arr!608 (_keys!3164 lt!8161)) (index!2338 lt!8254))) lt!9486)))

(declare-fun b!24788 () Bool)

(declare-fun lt!9489 () Unit!512)

(assert (=> b!24788 (= e!16022 lt!9489)))

(assert (=> b!24788 (= lt!9489 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!299 (getCurrentListMap!130 (_keys!3164 lt!8161) lt!8260 (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161))) (select (arr!608 (_keys!3164 lt!8161)) (index!2338 lt!8254))))))

(assert (=> b!24788 (isDefined!23 (getValueByKey!61 (toList!299 (getCurrentListMap!130 (_keys!3164 lt!8161) lt!8260 (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161))) (select (arr!608 (_keys!3164 lt!8161)) (index!2338 lt!8254))))))

(declare-fun b!24789 () Bool)

(declare-fun Unit!586 () Unit!512)

(assert (=> b!24789 (= e!16022 Unit!586)))

(declare-fun b!24790 () Bool)

(assert (=> b!24790 (= e!16021 (isDefined!23 (getValueByKey!61 (toList!299 (getCurrentListMap!130 (_keys!3164 lt!8161) lt!8260 (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161))) (select (arr!608 (_keys!3164 lt!8161)) (index!2338 lt!8254)))))))

(assert (= (and d!4643 c!3382) b!24788))

(assert (= (and d!4643 (not c!3382)) b!24789))

(assert (= (and d!4643 (not res!15046)) b!24790))

(assert (=> d!4643 m!16806))

(declare-fun m!19663 () Bool)

(assert (=> d!4643 m!19663))

(assert (=> b!24788 m!16806))

(declare-fun m!19665 () Bool)

(assert (=> b!24788 m!19665))

(assert (=> b!24788 m!16806))

(declare-fun m!19667 () Bool)

(assert (=> b!24788 m!19667))

(assert (=> b!24788 m!19667))

(declare-fun m!19669 () Bool)

(assert (=> b!24788 m!19669))

(assert (=> b!24790 m!16806))

(assert (=> b!24790 m!19667))

(assert (=> b!24790 m!19667))

(assert (=> b!24790 m!19669))

(assert (=> b!23761 d!4643))

(declare-fun bm!2184 () Bool)

(declare-fun call!2188 () Bool)

(declare-fun lt!9507 () ListLongMap!567)

(assert (=> bm!2184 (= call!2188 (contains!230 lt!9507 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!2185 () Bool)

(declare-fun call!2190 () Bool)

(assert (=> bm!2185 (= call!2190 (contains!230 lt!9507 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24791 () Bool)

(declare-fun e!16030 () Bool)

(declare-fun e!16031 () Bool)

(assert (=> b!24791 (= e!16030 e!16031)))

(declare-fun res!15055 () Bool)

(assert (=> b!24791 (=> (not res!15055) (not e!16031))))

(assert (=> b!24791 (= res!15055 (contains!230 lt!9507 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000)))))

(assert (=> b!24791 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))))))

(declare-fun b!24792 () Bool)

(declare-fun e!16024 () Unit!512)

(declare-fun lt!9492 () Unit!512)

(assert (=> b!24792 (= e!16024 lt!9492)))

(declare-fun lt!9504 () ListLongMap!567)

(assert (=> b!24792 (= lt!9504 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8161) lt!8260 (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))))

(declare-fun lt!9499 () (_ BitVec 64))

(assert (=> b!24792 (= lt!9499 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9508 () (_ BitVec 64))

(assert (=> b!24792 (= lt!9508 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000))))

(declare-fun lt!9500 () Unit!512)

(assert (=> b!24792 (= lt!9500 (addStillContains!14 lt!9504 lt!9499 (zeroValue!1666 lt!8161) lt!9508))))

(assert (=> b!24792 (contains!230 (+!45 lt!9504 (tuple2!961 lt!9499 (zeroValue!1666 lt!8161))) lt!9508)))

(declare-fun lt!9511 () Unit!512)

(assert (=> b!24792 (= lt!9511 lt!9500)))

(declare-fun lt!9495 () ListLongMap!567)

(assert (=> b!24792 (= lt!9495 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8161) lt!8260 (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))))

(declare-fun lt!9510 () (_ BitVec 64))

(assert (=> b!24792 (= lt!9510 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9509 () (_ BitVec 64))

(assert (=> b!24792 (= lt!9509 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000))))

(declare-fun lt!9494 () Unit!512)

(assert (=> b!24792 (= lt!9494 (addApplyDifferent!14 lt!9495 lt!9510 (minValue!1666 lt!8161) lt!9509))))

(assert (=> b!24792 (= (apply!29 (+!45 lt!9495 (tuple2!961 lt!9510 (minValue!1666 lt!8161))) lt!9509) (apply!29 lt!9495 lt!9509))))

(declare-fun lt!9493 () Unit!512)

(assert (=> b!24792 (= lt!9493 lt!9494)))

(declare-fun lt!9502 () ListLongMap!567)

(assert (=> b!24792 (= lt!9502 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8161) lt!8260 (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))))

(declare-fun lt!9505 () (_ BitVec 64))

(assert (=> b!24792 (= lt!9505 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9491 () (_ BitVec 64))

(assert (=> b!24792 (= lt!9491 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000))))

(declare-fun lt!9496 () Unit!512)

(assert (=> b!24792 (= lt!9496 (addApplyDifferent!14 lt!9502 lt!9505 (zeroValue!1666 lt!8161) lt!9491))))

(assert (=> b!24792 (= (apply!29 (+!45 lt!9502 (tuple2!961 lt!9505 (zeroValue!1666 lt!8161))) lt!9491) (apply!29 lt!9502 lt!9491))))

(declare-fun lt!9501 () Unit!512)

(assert (=> b!24792 (= lt!9501 lt!9496)))

(declare-fun lt!9503 () ListLongMap!567)

(assert (=> b!24792 (= lt!9503 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8161) lt!8260 (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))))

(declare-fun lt!9498 () (_ BitVec 64))

(assert (=> b!24792 (= lt!9498 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9490 () (_ BitVec 64))

(assert (=> b!24792 (= lt!9490 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000))))

(assert (=> b!24792 (= lt!9492 (addApplyDifferent!14 lt!9503 lt!9498 (minValue!1666 lt!8161) lt!9490))))

(assert (=> b!24792 (= (apply!29 (+!45 lt!9503 (tuple2!961 lt!9498 (minValue!1666 lt!8161))) lt!9490) (apply!29 lt!9503 lt!9490))))

(declare-fun bm!2186 () Bool)

(declare-fun call!2191 () ListLongMap!567)

(assert (=> bm!2186 (= call!2191 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8161) lt!8260 (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))))

(declare-fun b!24793 () Bool)

(declare-fun res!15050 () Bool)

(declare-fun e!16027 () Bool)

(assert (=> b!24793 (=> (not res!15050) (not e!16027))))

(declare-fun e!16023 () Bool)

(assert (=> b!24793 (= res!15050 e!16023)))

(declare-fun c!3385 () Bool)

(assert (=> b!24793 (= c!3385 (not (= (bvand (extraKeys!1641 lt!8161) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!24794 () Bool)

(declare-fun e!16035 () Bool)

(assert (=> b!24794 (= e!16035 (not call!2190))))

(declare-fun b!24795 () Bool)

(assert (=> b!24795 (= e!16023 (not call!2188))))

(declare-fun bm!2187 () Bool)

(declare-fun call!2192 () ListLongMap!567)

(assert (=> bm!2187 (= call!2192 call!2191)))

(declare-fun b!24796 () Bool)

(declare-fun e!16033 () ListLongMap!567)

(declare-fun call!2193 () ListLongMap!567)

(assert (=> b!24796 (= e!16033 call!2193)))

(declare-fun b!24797 () Bool)

(declare-fun res!15053 () Bool)

(assert (=> b!24797 (=> (not res!15053) (not e!16027))))

(assert (=> b!24797 (= res!15053 e!16030)))

(declare-fun res!15048 () Bool)

(assert (=> b!24797 (=> res!15048 e!16030)))

(declare-fun e!16026 () Bool)

(assert (=> b!24797 (= res!15048 (not e!16026))))

(declare-fun res!15052 () Bool)

(assert (=> b!24797 (=> (not res!15052) (not e!16026))))

(assert (=> b!24797 (= res!15052 (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))))))

(declare-fun b!24799 () Bool)

(declare-fun e!16028 () ListLongMap!567)

(assert (=> b!24799 (= e!16028 call!2193)))

(declare-fun b!24800 () Bool)

(declare-fun e!16029 () Bool)

(assert (=> b!24800 (= e!16023 e!16029)))

(declare-fun res!15054 () Bool)

(assert (=> b!24800 (= res!15054 call!2188)))

(assert (=> b!24800 (=> (not res!15054) (not e!16029))))

(declare-fun b!24801 () Bool)

(assert (=> b!24801 (= e!16027 e!16035)))

(declare-fun c!3383 () Bool)

(assert (=> b!24801 (= c!3383 (not (= (bvand (extraKeys!1641 lt!8161) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!2188 () Bool)

(declare-fun call!2187 () ListLongMap!567)

(assert (=> bm!2188 (= call!2187 call!2192)))

(declare-fun b!24802 () Bool)

(assert (=> b!24802 (= e!16033 call!2187)))

(declare-fun b!24803 () Bool)

(declare-fun e!16034 () Bool)

(assert (=> b!24803 (= e!16034 (= (apply!29 lt!9507 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!1666 lt!8161)))))

(declare-fun b!24804 () Bool)

(declare-fun c!3386 () Bool)

(assert (=> b!24804 (= c!3386 (and (not (= (bvand (extraKeys!1641 lt!8161) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 lt!8161) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!24804 (= e!16028 e!16033)))

(declare-fun b!24805 () Bool)

(assert (=> b!24805 (= e!16026 (validKeyInArray!0 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000)))))

(declare-fun bm!2189 () Bool)

(declare-fun call!2189 () ListLongMap!567)

(assert (=> bm!2189 (= call!2193 call!2189)))

(declare-fun b!24806 () Bool)

(assert (=> b!24806 (= e!16035 e!16034)))

(declare-fun res!15051 () Bool)

(assert (=> b!24806 (= res!15051 call!2190)))

(assert (=> b!24806 (=> (not res!15051) (not e!16034))))

(declare-fun c!3388 () Bool)

(declare-fun bm!2190 () Bool)

(declare-fun c!3384 () Bool)

(assert (=> bm!2190 (= call!2189 (+!45 (ite c!3384 call!2191 (ite c!3388 call!2192 call!2187)) (ite (or c!3384 c!3388) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 lt!8161)) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8161)))))))

(declare-fun b!24807 () Bool)

(assert (=> b!24807 (= e!16029 (= (apply!29 lt!9507 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!1666 lt!8161)))))

(declare-fun b!24808 () Bool)

(declare-fun e!16025 () ListLongMap!567)

(assert (=> b!24808 (= e!16025 e!16028)))

(assert (=> b!24808 (= c!3388 (and (not (= (bvand (extraKeys!1641 lt!8161) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 lt!8161) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!24809 () Bool)

(declare-fun e!16032 () Bool)

(assert (=> b!24809 (= e!16032 (validKeyInArray!0 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000)))))

(declare-fun b!24798 () Bool)

(assert (=> b!24798 (= e!16025 (+!45 call!2189 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8161))))))

(declare-fun d!4645 () Bool)

(assert (=> d!4645 e!16027))

(declare-fun res!15047 () Bool)

(assert (=> d!4645 (=> (not res!15047) (not e!16027))))

(assert (=> d!4645 (= res!15047 (or (bvsge #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))))))))

(declare-fun lt!9497 () ListLongMap!567)

(assert (=> d!4645 (= lt!9507 lt!9497)))

(declare-fun lt!9506 () Unit!512)

(assert (=> d!4645 (= lt!9506 e!16024)))

(declare-fun c!3387 () Bool)

(assert (=> d!4645 (= c!3387 e!16032)))

(declare-fun res!15049 () Bool)

(assert (=> d!4645 (=> (not res!15049) (not e!16032))))

(assert (=> d!4645 (= res!15049 (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))))))

(assert (=> d!4645 (= lt!9497 e!16025)))

(assert (=> d!4645 (= c!3384 (and (not (= (bvand (extraKeys!1641 lt!8161) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!1641 lt!8161) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!4645 (validMask!0 (mask!4730 lt!8161))))

(assert (=> d!4645 (= (getCurrentListMap!130 (_keys!3164 lt!8161) lt!8260 (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)) lt!9507)))

(declare-fun b!24810 () Bool)

(declare-fun Unit!587 () Unit!512)

(assert (=> b!24810 (= e!16024 Unit!587)))

(declare-fun b!24811 () Bool)

(assert (=> b!24811 (= e!16031 (= (apply!29 lt!9507 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000)) (get!390 (select (arr!607 lt!8260) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 lt!8161) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!24811 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!703 lt!8260)))))

(assert (=> b!24811 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))))))

(assert (= (and d!4645 c!3384) b!24798))

(assert (= (and d!4645 (not c!3384)) b!24808))

(assert (= (and b!24808 c!3388) b!24799))

(assert (= (and b!24808 (not c!3388)) b!24804))

(assert (= (and b!24804 c!3386) b!24796))

(assert (= (and b!24804 (not c!3386)) b!24802))

(assert (= (or b!24796 b!24802) bm!2188))

(assert (= (or b!24799 bm!2188) bm!2187))

(assert (= (or b!24799 b!24796) bm!2189))

(assert (= (or b!24798 bm!2187) bm!2186))

(assert (= (or b!24798 bm!2189) bm!2190))

(assert (= (and d!4645 res!15049) b!24809))

(assert (= (and d!4645 c!3387) b!24792))

(assert (= (and d!4645 (not c!3387)) b!24810))

(assert (= (and d!4645 res!15047) b!24797))

(assert (= (and b!24797 res!15052) b!24805))

(assert (= (and b!24797 (not res!15048)) b!24791))

(assert (= (and b!24791 res!15055) b!24811))

(assert (= (and b!24797 res!15053) b!24793))

(assert (= (and b!24793 c!3385) b!24800))

(assert (= (and b!24793 (not c!3385)) b!24795))

(assert (= (and b!24800 res!15054) b!24807))

(assert (= (or b!24800 b!24795) bm!2184))

(assert (= (and b!24793 res!15050) b!24801))

(assert (= (and b!24801 c!3383) b!24806))

(assert (= (and b!24801 (not c!3383)) b!24794))

(assert (= (and b!24806 res!15051) b!24803))

(assert (= (or b!24806 b!24794) bm!2185))

(declare-fun b_lambda!1635 () Bool)

(assert (=> (not b_lambda!1635) (not b!24811)))

(assert (=> b!24811 t!3244))

(declare-fun b_and!1541 () Bool)

(assert (= b_and!1539 (and (=> t!3244 result!1101) b_and!1541)))

(declare-fun m!19671 () Bool)

(assert (=> bm!2186 m!19671))

(declare-fun m!19673 () Bool)

(assert (=> b!24807 m!19673))

(assert (=> b!24809 m!16936))

(assert (=> b!24809 m!16936))

(assert (=> b!24809 m!17202))

(assert (=> d!4645 m!17182))

(assert (=> b!24791 m!16936))

(assert (=> b!24791 m!16936))

(declare-fun m!19675 () Bool)

(assert (=> b!24791 m!19675))

(declare-fun m!19677 () Bool)

(assert (=> b!24792 m!19677))

(declare-fun m!19679 () Bool)

(assert (=> b!24792 m!19679))

(declare-fun m!19681 () Bool)

(assert (=> b!24792 m!19681))

(assert (=> b!24792 m!19679))

(declare-fun m!19683 () Bool)

(assert (=> b!24792 m!19683))

(declare-fun m!19685 () Bool)

(assert (=> b!24792 m!19685))

(declare-fun m!19687 () Bool)

(assert (=> b!24792 m!19687))

(declare-fun m!19689 () Bool)

(assert (=> b!24792 m!19689))

(declare-fun m!19691 () Bool)

(assert (=> b!24792 m!19691))

(declare-fun m!19693 () Bool)

(assert (=> b!24792 m!19693))

(declare-fun m!19695 () Bool)

(assert (=> b!24792 m!19695))

(assert (=> b!24792 m!19681))

(declare-fun m!19697 () Bool)

(assert (=> b!24792 m!19697))

(declare-fun m!19699 () Bool)

(assert (=> b!24792 m!19699))

(assert (=> b!24792 m!19687))

(declare-fun m!19701 () Bool)

(assert (=> b!24792 m!19701))

(assert (=> b!24792 m!16936))

(declare-fun m!19703 () Bool)

(assert (=> b!24792 m!19703))

(assert (=> b!24792 m!19671))

(declare-fun m!19705 () Bool)

(assert (=> b!24792 m!19705))

(assert (=> b!24792 m!19693))

(assert (=> b!24805 m!16936))

(assert (=> b!24805 m!16936))

(assert (=> b!24805 m!17202))

(declare-fun m!19707 () Bool)

(assert (=> b!24811 m!19707))

(assert (=> b!24811 m!19707))

(assert (=> b!24811 m!17238))

(declare-fun m!19709 () Bool)

(assert (=> b!24811 m!19709))

(assert (=> b!24811 m!17238))

(assert (=> b!24811 m!16936))

(declare-fun m!19711 () Bool)

(assert (=> b!24811 m!19711))

(assert (=> b!24811 m!16936))

(declare-fun m!19713 () Bool)

(assert (=> bm!2185 m!19713))

(declare-fun m!19715 () Bool)

(assert (=> bm!2184 m!19715))

(declare-fun m!19717 () Bool)

(assert (=> b!24798 m!19717))

(declare-fun m!19719 () Bool)

(assert (=> b!24803 m!19719))

(declare-fun m!19721 () Bool)

(assert (=> bm!2190 m!19721))

(assert (=> b!23761 d!4645))

(declare-fun bm!2191 () Bool)

(declare-fun call!2195 () Bool)

(declare-fun lt!9529 () ListLongMap!567)

(assert (=> bm!2191 (= call!2195 (contains!230 lt!9529 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!2192 () Bool)

(declare-fun call!2197 () Bool)

(assert (=> bm!2192 (= call!2197 (contains!230 lt!9529 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24812 () Bool)

(declare-fun e!16043 () Bool)

(declare-fun e!16044 () Bool)

(assert (=> b!24812 (= e!16043 e!16044)))

(declare-fun res!15064 () Bool)

(assert (=> b!24812 (=> (not res!15064) (not e!16044))))

(assert (=> b!24812 (= res!15064 (contains!230 lt!9529 (select (arr!608 (_keys!3164 lt!8353)) #b00000000000000000000000000000000)))))

(assert (=> b!24812 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8353))))))

(declare-fun b!24813 () Bool)

(declare-fun e!16037 () Unit!512)

(declare-fun lt!9514 () Unit!512)

(assert (=> b!24813 (= e!16037 lt!9514)))

(declare-fun lt!9526 () ListLongMap!567)

(assert (=> b!24813 (= lt!9526 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8353) (_values!1729 lt!8353) (mask!4730 lt!8353) (extraKeys!1641 lt!8353) (zeroValue!1666 lt!8353) (minValue!1666 lt!8353) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8353)))))

(declare-fun lt!9521 () (_ BitVec 64))

(assert (=> b!24813 (= lt!9521 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9530 () (_ BitVec 64))

(assert (=> b!24813 (= lt!9530 (select (arr!608 (_keys!3164 lt!8353)) #b00000000000000000000000000000000))))

(declare-fun lt!9522 () Unit!512)

(assert (=> b!24813 (= lt!9522 (addStillContains!14 lt!9526 lt!9521 (zeroValue!1666 lt!8353) lt!9530))))

(assert (=> b!24813 (contains!230 (+!45 lt!9526 (tuple2!961 lt!9521 (zeroValue!1666 lt!8353))) lt!9530)))

(declare-fun lt!9533 () Unit!512)

(assert (=> b!24813 (= lt!9533 lt!9522)))

(declare-fun lt!9517 () ListLongMap!567)

(assert (=> b!24813 (= lt!9517 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8353) (_values!1729 lt!8353) (mask!4730 lt!8353) (extraKeys!1641 lt!8353) (zeroValue!1666 lt!8353) (minValue!1666 lt!8353) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8353)))))

(declare-fun lt!9532 () (_ BitVec 64))

(assert (=> b!24813 (= lt!9532 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9531 () (_ BitVec 64))

(assert (=> b!24813 (= lt!9531 (select (arr!608 (_keys!3164 lt!8353)) #b00000000000000000000000000000000))))

(declare-fun lt!9516 () Unit!512)

(assert (=> b!24813 (= lt!9516 (addApplyDifferent!14 lt!9517 lt!9532 (minValue!1666 lt!8353) lt!9531))))

(assert (=> b!24813 (= (apply!29 (+!45 lt!9517 (tuple2!961 lt!9532 (minValue!1666 lt!8353))) lt!9531) (apply!29 lt!9517 lt!9531))))

(declare-fun lt!9515 () Unit!512)

(assert (=> b!24813 (= lt!9515 lt!9516)))

(declare-fun lt!9524 () ListLongMap!567)

(assert (=> b!24813 (= lt!9524 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8353) (_values!1729 lt!8353) (mask!4730 lt!8353) (extraKeys!1641 lt!8353) (zeroValue!1666 lt!8353) (minValue!1666 lt!8353) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8353)))))

(declare-fun lt!9527 () (_ BitVec 64))

(assert (=> b!24813 (= lt!9527 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9513 () (_ BitVec 64))

(assert (=> b!24813 (= lt!9513 (select (arr!608 (_keys!3164 lt!8353)) #b00000000000000000000000000000000))))

(declare-fun lt!9518 () Unit!512)

(assert (=> b!24813 (= lt!9518 (addApplyDifferent!14 lt!9524 lt!9527 (zeroValue!1666 lt!8353) lt!9513))))

(assert (=> b!24813 (= (apply!29 (+!45 lt!9524 (tuple2!961 lt!9527 (zeroValue!1666 lt!8353))) lt!9513) (apply!29 lt!9524 lt!9513))))

(declare-fun lt!9523 () Unit!512)

(assert (=> b!24813 (= lt!9523 lt!9518)))

(declare-fun lt!9525 () ListLongMap!567)

(assert (=> b!24813 (= lt!9525 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8353) (_values!1729 lt!8353) (mask!4730 lt!8353) (extraKeys!1641 lt!8353) (zeroValue!1666 lt!8353) (minValue!1666 lt!8353) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8353)))))

(declare-fun lt!9520 () (_ BitVec 64))

(assert (=> b!24813 (= lt!9520 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9512 () (_ BitVec 64))

(assert (=> b!24813 (= lt!9512 (select (arr!608 (_keys!3164 lt!8353)) #b00000000000000000000000000000000))))

(assert (=> b!24813 (= lt!9514 (addApplyDifferent!14 lt!9525 lt!9520 (minValue!1666 lt!8353) lt!9512))))

(assert (=> b!24813 (= (apply!29 (+!45 lt!9525 (tuple2!961 lt!9520 (minValue!1666 lt!8353))) lt!9512) (apply!29 lt!9525 lt!9512))))

(declare-fun bm!2193 () Bool)

(declare-fun call!2198 () ListLongMap!567)

(assert (=> bm!2193 (= call!2198 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8353) (_values!1729 lt!8353) (mask!4730 lt!8353) (extraKeys!1641 lt!8353) (zeroValue!1666 lt!8353) (minValue!1666 lt!8353) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8353)))))

(declare-fun b!24814 () Bool)

(declare-fun res!15059 () Bool)

(declare-fun e!16040 () Bool)

(assert (=> b!24814 (=> (not res!15059) (not e!16040))))

(declare-fun e!16036 () Bool)

(assert (=> b!24814 (= res!15059 e!16036)))

(declare-fun c!3391 () Bool)

(assert (=> b!24814 (= c!3391 (not (= (bvand (extraKeys!1641 lt!8353) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!24815 () Bool)

(declare-fun e!16048 () Bool)

(assert (=> b!24815 (= e!16048 (not call!2197))))

(declare-fun b!24816 () Bool)

(assert (=> b!24816 (= e!16036 (not call!2195))))

(declare-fun bm!2194 () Bool)

(declare-fun call!2199 () ListLongMap!567)

(assert (=> bm!2194 (= call!2199 call!2198)))

(declare-fun b!24817 () Bool)

(declare-fun e!16046 () ListLongMap!567)

(declare-fun call!2200 () ListLongMap!567)

(assert (=> b!24817 (= e!16046 call!2200)))

(declare-fun b!24818 () Bool)

(declare-fun res!15062 () Bool)

(assert (=> b!24818 (=> (not res!15062) (not e!16040))))

(assert (=> b!24818 (= res!15062 e!16043)))

(declare-fun res!15057 () Bool)

(assert (=> b!24818 (=> res!15057 e!16043)))

(declare-fun e!16039 () Bool)

(assert (=> b!24818 (= res!15057 (not e!16039))))

(declare-fun res!15061 () Bool)

(assert (=> b!24818 (=> (not res!15061) (not e!16039))))

(assert (=> b!24818 (= res!15061 (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8353))))))

(declare-fun b!24820 () Bool)

(declare-fun e!16041 () ListLongMap!567)

(assert (=> b!24820 (= e!16041 call!2200)))

(declare-fun b!24821 () Bool)

(declare-fun e!16042 () Bool)

(assert (=> b!24821 (= e!16036 e!16042)))

(declare-fun res!15063 () Bool)

(assert (=> b!24821 (= res!15063 call!2195)))

(assert (=> b!24821 (=> (not res!15063) (not e!16042))))

(declare-fun b!24822 () Bool)

(assert (=> b!24822 (= e!16040 e!16048)))

(declare-fun c!3389 () Bool)

(assert (=> b!24822 (= c!3389 (not (= (bvand (extraKeys!1641 lt!8353) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!2195 () Bool)

(declare-fun call!2194 () ListLongMap!567)

(assert (=> bm!2195 (= call!2194 call!2199)))

(declare-fun b!24823 () Bool)

(assert (=> b!24823 (= e!16046 call!2194)))

(declare-fun b!24824 () Bool)

(declare-fun e!16047 () Bool)

(assert (=> b!24824 (= e!16047 (= (apply!29 lt!9529 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!1666 lt!8353)))))

(declare-fun b!24825 () Bool)

(declare-fun c!3392 () Bool)

(assert (=> b!24825 (= c!3392 (and (not (= (bvand (extraKeys!1641 lt!8353) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 lt!8353) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!24825 (= e!16041 e!16046)))

(declare-fun b!24826 () Bool)

(assert (=> b!24826 (= e!16039 (validKeyInArray!0 (select (arr!608 (_keys!3164 lt!8353)) #b00000000000000000000000000000000)))))

(declare-fun bm!2196 () Bool)

(declare-fun call!2196 () ListLongMap!567)

(assert (=> bm!2196 (= call!2200 call!2196)))

(declare-fun b!24827 () Bool)

(assert (=> b!24827 (= e!16048 e!16047)))

(declare-fun res!15060 () Bool)

(assert (=> b!24827 (= res!15060 call!2197)))

(assert (=> b!24827 (=> (not res!15060) (not e!16047))))

(declare-fun bm!2197 () Bool)

(declare-fun c!3390 () Bool)

(declare-fun c!3394 () Bool)

(assert (=> bm!2197 (= call!2196 (+!45 (ite c!3390 call!2198 (ite c!3394 call!2199 call!2194)) (ite (or c!3390 c!3394) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 lt!8353)) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8353)))))))

(declare-fun b!24828 () Bool)

(assert (=> b!24828 (= e!16042 (= (apply!29 lt!9529 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!1666 lt!8353)))))

(declare-fun b!24829 () Bool)

(declare-fun e!16038 () ListLongMap!567)

(assert (=> b!24829 (= e!16038 e!16041)))

(assert (=> b!24829 (= c!3394 (and (not (= (bvand (extraKeys!1641 lt!8353) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 lt!8353) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!24830 () Bool)

(declare-fun e!16045 () Bool)

(assert (=> b!24830 (= e!16045 (validKeyInArray!0 (select (arr!608 (_keys!3164 lt!8353)) #b00000000000000000000000000000000)))))

(declare-fun b!24819 () Bool)

(assert (=> b!24819 (= e!16038 (+!45 call!2196 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 lt!8353))))))

(declare-fun d!4647 () Bool)

(assert (=> d!4647 e!16040))

(declare-fun res!15056 () Bool)

(assert (=> d!4647 (=> (not res!15056) (not e!16040))))

(assert (=> d!4647 (= res!15056 (or (bvsge #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8353))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8353))))))))

(declare-fun lt!9519 () ListLongMap!567)

(assert (=> d!4647 (= lt!9529 lt!9519)))

(declare-fun lt!9528 () Unit!512)

(assert (=> d!4647 (= lt!9528 e!16037)))

(declare-fun c!3393 () Bool)

(assert (=> d!4647 (= c!3393 e!16045)))

(declare-fun res!15058 () Bool)

(assert (=> d!4647 (=> (not res!15058) (not e!16045))))

(assert (=> d!4647 (= res!15058 (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8353))))))

(assert (=> d!4647 (= lt!9519 e!16038)))

(assert (=> d!4647 (= c!3390 (and (not (= (bvand (extraKeys!1641 lt!8353) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!1641 lt!8353) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!4647 (validMask!0 (mask!4730 lt!8353))))

(assert (=> d!4647 (= (getCurrentListMap!130 (_keys!3164 lt!8353) (_values!1729 lt!8353) (mask!4730 lt!8353) (extraKeys!1641 lt!8353) (zeroValue!1666 lt!8353) (minValue!1666 lt!8353) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8353)) lt!9529)))

(declare-fun b!24831 () Bool)

(declare-fun Unit!588 () Unit!512)

(assert (=> b!24831 (= e!16037 Unit!588)))

(declare-fun b!24832 () Bool)

(assert (=> b!24832 (= e!16044 (= (apply!29 lt!9529 (select (arr!608 (_keys!3164 lt!8353)) #b00000000000000000000000000000000)) (get!390 (select (arr!607 (_values!1729 lt!8353)) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 lt!8353) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!24832 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!703 (_values!1729 lt!8353))))))

(assert (=> b!24832 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8353))))))

(assert (= (and d!4647 c!3390) b!24819))

(assert (= (and d!4647 (not c!3390)) b!24829))

(assert (= (and b!24829 c!3394) b!24820))

(assert (= (and b!24829 (not c!3394)) b!24825))

(assert (= (and b!24825 c!3392) b!24817))

(assert (= (and b!24825 (not c!3392)) b!24823))

(assert (= (or b!24817 b!24823) bm!2195))

(assert (= (or b!24820 bm!2195) bm!2194))

(assert (= (or b!24820 b!24817) bm!2196))

(assert (= (or b!24819 bm!2194) bm!2193))

(assert (= (or b!24819 bm!2196) bm!2197))

(assert (= (and d!4647 res!15058) b!24830))

(assert (= (and d!4647 c!3393) b!24813))

(assert (= (and d!4647 (not c!3393)) b!24831))

(assert (= (and d!4647 res!15056) b!24818))

(assert (= (and b!24818 res!15061) b!24826))

(assert (= (and b!24818 (not res!15057)) b!24812))

(assert (= (and b!24812 res!15064) b!24832))

(assert (= (and b!24818 res!15062) b!24814))

(assert (= (and b!24814 c!3391) b!24821))

(assert (= (and b!24814 (not c!3391)) b!24816))

(assert (= (and b!24821 res!15063) b!24828))

(assert (= (or b!24821 b!24816) bm!2191))

(assert (= (and b!24814 res!15059) b!24822))

(assert (= (and b!24822 c!3389) b!24827))

(assert (= (and b!24822 (not c!3389)) b!24815))

(assert (= (and b!24827 res!15060) b!24824))

(assert (= (or b!24827 b!24815) bm!2192))

(declare-fun b_lambda!1637 () Bool)

(assert (=> (not b_lambda!1637) (not b!24832)))

(declare-fun t!3250 () Bool)

(declare-fun tb!667 () Bool)

(assert (=> (and b!23142 (= (defaultEntry!1743 (v!1604 (underlying!116 thiss!938))) (defaultEntry!1743 lt!8353)) t!3250) tb!667))

(declare-fun result!1107 () Bool)

(assert (=> tb!667 (= result!1107 tp_is_empty!1023)))

(assert (=> b!24832 t!3250))

(declare-fun b_and!1543 () Bool)

(assert (= b_and!1541 (and (=> t!3250 result!1107) b_and!1543)))

(declare-fun m!19723 () Bool)

(assert (=> bm!2193 m!19723))

(declare-fun m!19725 () Bool)

(assert (=> b!24828 m!19725))

(declare-fun m!19727 () Bool)

(assert (=> b!24830 m!19727))

(assert (=> b!24830 m!19727))

(declare-fun m!19729 () Bool)

(assert (=> b!24830 m!19729))

(declare-fun m!19731 () Bool)

(assert (=> d!4647 m!19731))

(assert (=> b!24812 m!19727))

(assert (=> b!24812 m!19727))

(declare-fun m!19733 () Bool)

(assert (=> b!24812 m!19733))

(declare-fun m!19735 () Bool)

(assert (=> b!24813 m!19735))

(declare-fun m!19737 () Bool)

(assert (=> b!24813 m!19737))

(declare-fun m!19739 () Bool)

(assert (=> b!24813 m!19739))

(assert (=> b!24813 m!19737))

(declare-fun m!19741 () Bool)

(assert (=> b!24813 m!19741))

(declare-fun m!19743 () Bool)

(assert (=> b!24813 m!19743))

(declare-fun m!19745 () Bool)

(assert (=> b!24813 m!19745))

(declare-fun m!19747 () Bool)

(assert (=> b!24813 m!19747))

(declare-fun m!19749 () Bool)

(assert (=> b!24813 m!19749))

(declare-fun m!19751 () Bool)

(assert (=> b!24813 m!19751))

(declare-fun m!19753 () Bool)

(assert (=> b!24813 m!19753))

(assert (=> b!24813 m!19739))

(declare-fun m!19755 () Bool)

(assert (=> b!24813 m!19755))

(declare-fun m!19757 () Bool)

(assert (=> b!24813 m!19757))

(assert (=> b!24813 m!19745))

(declare-fun m!19759 () Bool)

(assert (=> b!24813 m!19759))

(assert (=> b!24813 m!19727))

(declare-fun m!19761 () Bool)

(assert (=> b!24813 m!19761))

(assert (=> b!24813 m!19723))

(declare-fun m!19763 () Bool)

(assert (=> b!24813 m!19763))

(assert (=> b!24813 m!19751))

(assert (=> b!24826 m!19727))

(assert (=> b!24826 m!19727))

(assert (=> b!24826 m!19729))

(declare-fun m!19765 () Bool)

(assert (=> b!24832 m!19765))

(assert (=> b!24832 m!19765))

(declare-fun m!19767 () Bool)

(assert (=> b!24832 m!19767))

(declare-fun m!19769 () Bool)

(assert (=> b!24832 m!19769))

(assert (=> b!24832 m!19767))

(assert (=> b!24832 m!19727))

(declare-fun m!19771 () Bool)

(assert (=> b!24832 m!19771))

(assert (=> b!24832 m!19727))

(declare-fun m!19773 () Bool)

(assert (=> bm!2192 m!19773))

(declare-fun m!19775 () Bool)

(assert (=> bm!2191 m!19775))

(declare-fun m!19777 () Bool)

(assert (=> b!24819 m!19777))

(declare-fun m!19779 () Bool)

(assert (=> b!24824 m!19779))

(declare-fun m!19781 () Bool)

(assert (=> bm!2197 m!19781))

(assert (=> d!4009 d!4647))

(declare-fun d!4649 () Bool)

(assert (=> d!4649 (isDefined!23 (getValueByKey!61 (toList!299 call!1952) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!9534 () Unit!512)

(assert (=> d!4649 (= lt!9534 (choose!215 (toList!299 call!1952) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!16049 () Bool)

(assert (=> d!4649 e!16049))

(declare-fun res!15065 () Bool)

(assert (=> d!4649 (=> (not res!15065) (not e!16049))))

(assert (=> d!4649 (= res!15065 (isStrictlySorted!171 (toList!299 call!1952)))))

(assert (=> d!4649 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!299 call!1952) #b1000000000000000000000000000000000000000000000000000000000000000) lt!9534)))

(declare-fun b!24833 () Bool)

(assert (=> b!24833 (= e!16049 (containsKey!25 (toList!299 call!1952) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!4649 res!15065) b!24833))

(assert (=> d!4649 m!17084))

(assert (=> d!4649 m!17084))

(assert (=> d!4649 m!17086))

(declare-fun m!19783 () Bool)

(assert (=> d!4649 m!19783))

(declare-fun m!19785 () Bool)

(assert (=> d!4649 m!19785))

(assert (=> b!24833 m!17080))

(assert (=> b!23581 d!4649))

(assert (=> b!23581 d!4525))

(assert (=> b!23581 d!4527))

(declare-fun d!4651 () Bool)

(declare-fun c!3395 () Bool)

(assert (=> d!4651 (= c!3395 (and ((_ is Cons!564) (toList!299 lt!8746)) (= (_1!489 (h!1130 (toList!299 lt!8746))) (_1!489 (ite c!2984 (ite c!2983 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))))

(declare-fun e!16050 () Option!67)

(assert (=> d!4651 (= (getValueByKey!61 (toList!299 lt!8746) (_1!489 (ite c!2984 (ite c!2983 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))) e!16050)))

(declare-fun b!24834 () Bool)

(assert (=> b!24834 (= e!16050 (Some!66 (_2!489 (h!1130 (toList!299 lt!8746)))))))

(declare-fun b!24837 () Bool)

(declare-fun e!16051 () Option!67)

(assert (=> b!24837 (= e!16051 None!65)))

(declare-fun b!24835 () Bool)

(assert (=> b!24835 (= e!16050 e!16051)))

(declare-fun c!3396 () Bool)

(assert (=> b!24835 (= c!3396 (and ((_ is Cons!564) (toList!299 lt!8746)) (not (= (_1!489 (h!1130 (toList!299 lt!8746))) (_1!489 (ite c!2984 (ite c!2983 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))))

(declare-fun b!24836 () Bool)

(assert (=> b!24836 (= e!16051 (getValueByKey!61 (t!3239 (toList!299 lt!8746)) (_1!489 (ite c!2984 (ite c!2983 (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (tuple2!961 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(assert (= (and d!4651 c!3395) b!24834))

(assert (= (and d!4651 (not c!3395)) b!24835))

(assert (= (and b!24835 c!3396) b!24836))

(assert (= (and b!24835 (not c!3396)) b!24837))

(declare-fun m!19787 () Bool)

(assert (=> b!24836 m!19787))

(assert (=> b!23808 d!4651))

(declare-fun b!24838 () Bool)

(declare-fun e!16054 () Bool)

(declare-fun e!16052 () Bool)

(assert (=> b!24838 (= e!16054 e!16052)))

(declare-fun res!15066 () Bool)

(declare-fun lt!9536 () SeekEntryResult!54)

(assert (=> b!24838 (= res!15066 (and ((_ is Intermediate!54) lt!9536) (not (undefined!866 lt!9536)) (bvslt (x!5576 lt!9536) #b01111111111111111111111111111110) (bvsge (x!5576 lt!9536) #b00000000000000000000000000000000) (bvsge (x!5576 lt!9536) #b00000000000000000000000000000000)))))

(assert (=> b!24838 (=> (not res!15066) (not e!16052))))

(declare-fun b!24839 () Bool)

(declare-fun e!16055 () SeekEntryResult!54)

(declare-fun e!16053 () SeekEntryResult!54)

(assert (=> b!24839 (= e!16055 e!16053)))

(declare-fun c!3399 () Bool)

(declare-fun lt!9535 () (_ BitVec 64))

(assert (=> b!24839 (= c!3399 (or (= lt!9535 #b1000000000000000000000000000000000000000000000000000000000000000) (= (bvadd lt!9535 lt!9535) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!24840 () Bool)

(assert (=> b!24840 (and (bvsge (index!2339 lt!9536) #b00000000000000000000000000000000) (bvslt (index!2339 lt!9536) (size!704 (_keys!3164 (_2!487 lt!8158)))))))

(declare-fun res!15067 () Bool)

(assert (=> b!24840 (= res!15067 (= (select (arr!608 (_keys!3164 (_2!487 lt!8158))) (index!2339 lt!9536)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!16056 () Bool)

(assert (=> b!24840 (=> res!15067 e!16056)))

(declare-fun d!4653 () Bool)

(assert (=> d!4653 e!16054))

(declare-fun c!3398 () Bool)

(assert (=> d!4653 (= c!3398 (and ((_ is Intermediate!54) lt!9536) (undefined!866 lt!9536)))))

(assert (=> d!4653 (= lt!9536 e!16055)))

(declare-fun c!3397 () Bool)

(assert (=> d!4653 (= c!3397 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(assert (=> d!4653 (= lt!9535 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) (toIndex!0 #b1000000000000000000000000000000000000000000000000000000000000000 (mask!4730 (_2!487 lt!8158)))))))

(assert (=> d!4653 (validMask!0 (mask!4730 (_2!487 lt!8158)))))

(assert (=> d!4653 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 #b1000000000000000000000000000000000000000000000000000000000000000 (mask!4730 (_2!487 lt!8158))) #b1000000000000000000000000000000000000000000000000000000000000000 (_keys!3164 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158))) lt!9536)))

(declare-fun b!24841 () Bool)

(assert (=> b!24841 (and (bvsge (index!2339 lt!9536) #b00000000000000000000000000000000) (bvslt (index!2339 lt!9536) (size!704 (_keys!3164 (_2!487 lt!8158)))))))

(assert (=> b!24841 (= e!16056 (= (select (arr!608 (_keys!3164 (_2!487 lt!8158))) (index!2339 lt!9536)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24842 () Bool)

(assert (=> b!24842 (= e!16054 (bvsge (x!5576 lt!9536) #b01111111111111111111111111111110))))

(declare-fun b!24843 () Bool)

(assert (=> b!24843 (= e!16055 (Intermediate!54 true (toIndex!0 #b1000000000000000000000000000000000000000000000000000000000000000 (mask!4730 (_2!487 lt!8158))) #b00000000000000000000000000000000))))

(declare-fun b!24844 () Bool)

(assert (=> b!24844 (= e!16053 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 #b1000000000000000000000000000000000000000000000000000000000000000 (mask!4730 (_2!487 lt!8158))) #b00000000000000000000000000000000 (mask!4730 (_2!487 lt!8158))) #b1000000000000000000000000000000000000000000000000000000000000000 (_keys!3164 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158))))))

(declare-fun b!24845 () Bool)

(assert (=> b!24845 (and (bvsge (index!2339 lt!9536) #b00000000000000000000000000000000) (bvslt (index!2339 lt!9536) (size!704 (_keys!3164 (_2!487 lt!8158)))))))

(declare-fun res!15068 () Bool)

(assert (=> b!24845 (= res!15068 (= (select (arr!608 (_keys!3164 (_2!487 lt!8158))) (index!2339 lt!9536)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!24845 (=> res!15068 e!16056)))

(assert (=> b!24845 (= e!16052 e!16056)))

(declare-fun b!24846 () Bool)

(assert (=> b!24846 (= e!16053 (Intermediate!54 false (toIndex!0 #b1000000000000000000000000000000000000000000000000000000000000000 (mask!4730 (_2!487 lt!8158))) #b00000000000000000000000000000000))))

(assert (= (and d!4653 c!3397) b!24843))

(assert (= (and d!4653 (not c!3397)) b!24839))

(assert (= (and b!24839 c!3399) b!24846))

(assert (= (and b!24839 (not c!3399)) b!24844))

(assert (= (and d!4653 c!3398) b!24842))

(assert (= (and d!4653 (not c!3398)) b!24838))

(assert (= (and b!24838 res!15066) b!24845))

(assert (= (and b!24845 (not res!15068)) b!24840))

(assert (= (and b!24840 (not res!15067)) b!24841))

(declare-fun m!19789 () Bool)

(assert (=> b!24841 m!19789))

(assert (=> d!4653 m!17066))

(declare-fun m!19791 () Bool)

(assert (=> d!4653 m!19791))

(assert (=> d!4653 m!16990))

(assert (=> b!24844 m!17066))

(declare-fun m!19793 () Bool)

(assert (=> b!24844 m!19793))

(assert (=> b!24844 m!19793))

(declare-fun m!19795 () Bool)

(assert (=> b!24844 m!19795))

(assert (=> b!24845 m!19789))

(assert (=> b!24840 m!19789))

(assert (=> d!4033 d!4653))

(declare-fun d!4655 () Bool)

(declare-fun lt!9538 () (_ BitVec 32))

(declare-fun lt!9537 () (_ BitVec 32))

(assert (=> d!4655 (= lt!9538 (bvmul (bvxor lt!9537 (bvlshr lt!9537 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!4655 (= lt!9537 ((_ extract 31 0) (bvand (bvxor #b1000000000000000000000000000000000000000000000000000000000000000 (bvlshr #b1000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!4655 (and (bvsge (mask!4730 (_2!487 lt!8158)) #b00000000000000000000000000000000) (let ((res!14795 (let ((h!1132 ((_ extract 31 0) (bvand (bvxor #b1000000000000000000000000000000000000000000000000000000000000000 (bvlshr #b1000000000000000000000000000000000000000000000000000000000000000 #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!5835 (bvmul (bvxor h!1132 (bvlshr h!1132 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!5835 (bvlshr x!5835 #b00000000000000000000000000001101)) (mask!4730 (_2!487 lt!8158))))))) (and (bvslt res!14795 (bvadd (mask!4730 (_2!487 lt!8158)) #b00000000000000000000000000000001)) (bvsge res!14795 #b00000000000000000000000000000000))))))

(assert (=> d!4655 (= (toIndex!0 #b1000000000000000000000000000000000000000000000000000000000000000 (mask!4730 (_2!487 lt!8158))) (bvand (bvxor lt!9538 (bvlshr lt!9538 #b00000000000000000000000000001101)) (mask!4730 (_2!487 lt!8158))))))

(assert (=> d!4033 d!4655))

(assert (=> d!4033 d!4145))

(declare-fun d!4657 () Bool)

(assert (=> d!4657 (= (apply!29 lt!8447 #b0000000000000000000000000000000000000000000000000000000000000000) (get!391 (getValueByKey!61 (toList!299 lt!8447) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!1028 () Bool)

(assert (= bs!1028 d!4657))

(assert (=> bs!1028 m!19231))

(assert (=> bs!1028 m!19231))

(declare-fun m!19797 () Bool)

(assert (=> bs!1028 m!19797))

(assert (=> b!23513 d!4657))

(declare-fun bm!2198 () Bool)

(declare-fun call!2202 () Bool)

(declare-fun lt!9556 () ListLongMap!567)

(assert (=> bm!2198 (= call!2202 (contains!230 lt!9556 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!2199 () Bool)

(declare-fun call!2204 () Bool)

(assert (=> bm!2199 (= call!2204 (contains!230 lt!9556 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24847 () Bool)

(declare-fun e!16064 () Bool)

(declare-fun e!16065 () Bool)

(assert (=> b!24847 (= e!16064 e!16065)))

(declare-fun res!15077 () Bool)

(assert (=> b!24847 (=> (not res!15077) (not e!16065))))

(assert (=> b!24847 (= res!15077 (contains!230 lt!9556 (select (arr!608 (_keys!3164 (_2!487 lt!8276))) #b00000000000000000000000000000000)))))

(assert (=> b!24847 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8276)))))))

(declare-fun b!24848 () Bool)

(declare-fun e!16058 () Unit!512)

(declare-fun lt!9541 () Unit!512)

(assert (=> b!24848 (= e!16058 lt!9541)))

(declare-fun lt!9553 () ListLongMap!567)

(assert (=> b!24848 (= lt!9553 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!487 lt!8276)) (_values!1729 (_2!487 lt!8276)) (mask!4730 (_2!487 lt!8276)) (extraKeys!1641 (_2!487 lt!8276)) (zeroValue!1666 (_2!487 lt!8276)) (minValue!1666 (_2!487 lt!8276)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8276))))))

(declare-fun lt!9548 () (_ BitVec 64))

(assert (=> b!24848 (= lt!9548 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9557 () (_ BitVec 64))

(assert (=> b!24848 (= lt!9557 (select (arr!608 (_keys!3164 (_2!487 lt!8276))) #b00000000000000000000000000000000))))

(declare-fun lt!9549 () Unit!512)

(assert (=> b!24848 (= lt!9549 (addStillContains!14 lt!9553 lt!9548 (zeroValue!1666 (_2!487 lt!8276)) lt!9557))))

(assert (=> b!24848 (contains!230 (+!45 lt!9553 (tuple2!961 lt!9548 (zeroValue!1666 (_2!487 lt!8276)))) lt!9557)))

(declare-fun lt!9560 () Unit!512)

(assert (=> b!24848 (= lt!9560 lt!9549)))

(declare-fun lt!9544 () ListLongMap!567)

(assert (=> b!24848 (= lt!9544 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!487 lt!8276)) (_values!1729 (_2!487 lt!8276)) (mask!4730 (_2!487 lt!8276)) (extraKeys!1641 (_2!487 lt!8276)) (zeroValue!1666 (_2!487 lt!8276)) (minValue!1666 (_2!487 lt!8276)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8276))))))

(declare-fun lt!9559 () (_ BitVec 64))

(assert (=> b!24848 (= lt!9559 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9558 () (_ BitVec 64))

(assert (=> b!24848 (= lt!9558 (select (arr!608 (_keys!3164 (_2!487 lt!8276))) #b00000000000000000000000000000000))))

(declare-fun lt!9543 () Unit!512)

(assert (=> b!24848 (= lt!9543 (addApplyDifferent!14 lt!9544 lt!9559 (minValue!1666 (_2!487 lt!8276)) lt!9558))))

(assert (=> b!24848 (= (apply!29 (+!45 lt!9544 (tuple2!961 lt!9559 (minValue!1666 (_2!487 lt!8276)))) lt!9558) (apply!29 lt!9544 lt!9558))))

(declare-fun lt!9542 () Unit!512)

(assert (=> b!24848 (= lt!9542 lt!9543)))

(declare-fun lt!9551 () ListLongMap!567)

(assert (=> b!24848 (= lt!9551 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!487 lt!8276)) (_values!1729 (_2!487 lt!8276)) (mask!4730 (_2!487 lt!8276)) (extraKeys!1641 (_2!487 lt!8276)) (zeroValue!1666 (_2!487 lt!8276)) (minValue!1666 (_2!487 lt!8276)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8276))))))

(declare-fun lt!9554 () (_ BitVec 64))

(assert (=> b!24848 (= lt!9554 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9540 () (_ BitVec 64))

(assert (=> b!24848 (= lt!9540 (select (arr!608 (_keys!3164 (_2!487 lt!8276))) #b00000000000000000000000000000000))))

(declare-fun lt!9545 () Unit!512)

(assert (=> b!24848 (= lt!9545 (addApplyDifferent!14 lt!9551 lt!9554 (zeroValue!1666 (_2!487 lt!8276)) lt!9540))))

(assert (=> b!24848 (= (apply!29 (+!45 lt!9551 (tuple2!961 lt!9554 (zeroValue!1666 (_2!487 lt!8276)))) lt!9540) (apply!29 lt!9551 lt!9540))))

(declare-fun lt!9550 () Unit!512)

(assert (=> b!24848 (= lt!9550 lt!9545)))

(declare-fun lt!9552 () ListLongMap!567)

(assert (=> b!24848 (= lt!9552 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!487 lt!8276)) (_values!1729 (_2!487 lt!8276)) (mask!4730 (_2!487 lt!8276)) (extraKeys!1641 (_2!487 lt!8276)) (zeroValue!1666 (_2!487 lt!8276)) (minValue!1666 (_2!487 lt!8276)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8276))))))

(declare-fun lt!9547 () (_ BitVec 64))

(assert (=> b!24848 (= lt!9547 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9539 () (_ BitVec 64))

(assert (=> b!24848 (= lt!9539 (select (arr!608 (_keys!3164 (_2!487 lt!8276))) #b00000000000000000000000000000000))))

(assert (=> b!24848 (= lt!9541 (addApplyDifferent!14 lt!9552 lt!9547 (minValue!1666 (_2!487 lt!8276)) lt!9539))))

(assert (=> b!24848 (= (apply!29 (+!45 lt!9552 (tuple2!961 lt!9547 (minValue!1666 (_2!487 lt!8276)))) lt!9539) (apply!29 lt!9552 lt!9539))))

(declare-fun bm!2200 () Bool)

(declare-fun call!2205 () ListLongMap!567)

(assert (=> bm!2200 (= call!2205 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!487 lt!8276)) (_values!1729 (_2!487 lt!8276)) (mask!4730 (_2!487 lt!8276)) (extraKeys!1641 (_2!487 lt!8276)) (zeroValue!1666 (_2!487 lt!8276)) (minValue!1666 (_2!487 lt!8276)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8276))))))

(declare-fun b!24849 () Bool)

(declare-fun res!15072 () Bool)

(declare-fun e!16061 () Bool)

(assert (=> b!24849 (=> (not res!15072) (not e!16061))))

(declare-fun e!16057 () Bool)

(assert (=> b!24849 (= res!15072 e!16057)))

(declare-fun c!3402 () Bool)

(assert (=> b!24849 (= c!3402 (not (= (bvand (extraKeys!1641 (_2!487 lt!8276)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!24850 () Bool)

(declare-fun e!16069 () Bool)

(assert (=> b!24850 (= e!16069 (not call!2204))))

(declare-fun b!24851 () Bool)

(assert (=> b!24851 (= e!16057 (not call!2202))))

(declare-fun bm!2201 () Bool)

(declare-fun call!2206 () ListLongMap!567)

(assert (=> bm!2201 (= call!2206 call!2205)))

(declare-fun b!24852 () Bool)

(declare-fun e!16067 () ListLongMap!567)

(declare-fun call!2207 () ListLongMap!567)

(assert (=> b!24852 (= e!16067 call!2207)))

(declare-fun b!24853 () Bool)

(declare-fun res!15075 () Bool)

(assert (=> b!24853 (=> (not res!15075) (not e!16061))))

(assert (=> b!24853 (= res!15075 e!16064)))

(declare-fun res!15070 () Bool)

(assert (=> b!24853 (=> res!15070 e!16064)))

(declare-fun e!16060 () Bool)

(assert (=> b!24853 (= res!15070 (not e!16060))))

(declare-fun res!15074 () Bool)

(assert (=> b!24853 (=> (not res!15074) (not e!16060))))

(assert (=> b!24853 (= res!15074 (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8276)))))))

(declare-fun b!24855 () Bool)

(declare-fun e!16062 () ListLongMap!567)

(assert (=> b!24855 (= e!16062 call!2207)))

(declare-fun b!24856 () Bool)

(declare-fun e!16063 () Bool)

(assert (=> b!24856 (= e!16057 e!16063)))

(declare-fun res!15076 () Bool)

(assert (=> b!24856 (= res!15076 call!2202)))

(assert (=> b!24856 (=> (not res!15076) (not e!16063))))

(declare-fun b!24857 () Bool)

(assert (=> b!24857 (= e!16061 e!16069)))

(declare-fun c!3400 () Bool)

(assert (=> b!24857 (= c!3400 (not (= (bvand (extraKeys!1641 (_2!487 lt!8276)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!2202 () Bool)

(declare-fun call!2201 () ListLongMap!567)

(assert (=> bm!2202 (= call!2201 call!2206)))

(declare-fun b!24858 () Bool)

(assert (=> b!24858 (= e!16067 call!2201)))

(declare-fun b!24859 () Bool)

(declare-fun e!16068 () Bool)

(assert (=> b!24859 (= e!16068 (= (apply!29 lt!9556 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!1666 (_2!487 lt!8276))))))

(declare-fun b!24860 () Bool)

(declare-fun c!3403 () Bool)

(assert (=> b!24860 (= c!3403 (and (not (= (bvand (extraKeys!1641 (_2!487 lt!8276)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 (_2!487 lt!8276)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!24860 (= e!16062 e!16067)))

(declare-fun b!24861 () Bool)

(assert (=> b!24861 (= e!16060 (validKeyInArray!0 (select (arr!608 (_keys!3164 (_2!487 lt!8276))) #b00000000000000000000000000000000)))))

(declare-fun bm!2203 () Bool)

(declare-fun call!2203 () ListLongMap!567)

(assert (=> bm!2203 (= call!2207 call!2203)))

(declare-fun b!24862 () Bool)

(assert (=> b!24862 (= e!16069 e!16068)))

(declare-fun res!15073 () Bool)

(assert (=> b!24862 (= res!15073 call!2204)))

(assert (=> b!24862 (=> (not res!15073) (not e!16068))))

(declare-fun c!3401 () Bool)

(declare-fun c!3405 () Bool)

(declare-fun bm!2204 () Bool)

(assert (=> bm!2204 (= call!2203 (+!45 (ite c!3401 call!2205 (ite c!3405 call!2206 call!2201)) (ite (or c!3401 c!3405) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (_2!487 lt!8276))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!487 lt!8276))))))))

(declare-fun b!24863 () Bool)

(assert (=> b!24863 (= e!16063 (= (apply!29 lt!9556 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!1666 (_2!487 lt!8276))))))

(declare-fun b!24864 () Bool)

(declare-fun e!16059 () ListLongMap!567)

(assert (=> b!24864 (= e!16059 e!16062)))

(assert (=> b!24864 (= c!3405 (and (not (= (bvand (extraKeys!1641 (_2!487 lt!8276)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1641 (_2!487 lt!8276)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!24865 () Bool)

(declare-fun e!16066 () Bool)

(assert (=> b!24865 (= e!16066 (validKeyInArray!0 (select (arr!608 (_keys!3164 (_2!487 lt!8276))) #b00000000000000000000000000000000)))))

(declare-fun b!24854 () Bool)

(assert (=> b!24854 (= e!16059 (+!45 call!2203 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!487 lt!8276)))))))

(declare-fun d!4659 () Bool)

(assert (=> d!4659 e!16061))

(declare-fun res!15069 () Bool)

(assert (=> d!4659 (=> (not res!15069) (not e!16061))))

(assert (=> d!4659 (= res!15069 (or (bvsge #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8276)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8276)))))))))

(declare-fun lt!9546 () ListLongMap!567)

(assert (=> d!4659 (= lt!9556 lt!9546)))

(declare-fun lt!9555 () Unit!512)

(assert (=> d!4659 (= lt!9555 e!16058)))

(declare-fun c!3404 () Bool)

(assert (=> d!4659 (= c!3404 e!16066)))

(declare-fun res!15071 () Bool)

(assert (=> d!4659 (=> (not res!15071) (not e!16066))))

(assert (=> d!4659 (= res!15071 (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8276)))))))

(assert (=> d!4659 (= lt!9546 e!16059)))

(assert (=> d!4659 (= c!3401 (and (not (= (bvand (extraKeys!1641 (_2!487 lt!8276)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!1641 (_2!487 lt!8276)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!4659 (validMask!0 (mask!4730 (_2!487 lt!8276)))))

(assert (=> d!4659 (= (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8276)) (_values!1729 (_2!487 lt!8276)) (mask!4730 (_2!487 lt!8276)) (extraKeys!1641 (_2!487 lt!8276)) (zeroValue!1666 (_2!487 lt!8276)) (minValue!1666 (_2!487 lt!8276)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8276))) lt!9556)))

(declare-fun b!24866 () Bool)

(declare-fun Unit!589 () Unit!512)

(assert (=> b!24866 (= e!16058 Unit!589)))

(declare-fun b!24867 () Bool)

(assert (=> b!24867 (= e!16065 (= (apply!29 lt!9556 (select (arr!608 (_keys!3164 (_2!487 lt!8276))) #b00000000000000000000000000000000)) (get!390 (select (arr!607 (_values!1729 (_2!487 lt!8276))) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (_2!487 lt!8276)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!24867 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!703 (_values!1729 (_2!487 lt!8276)))))))

(assert (=> b!24867 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8276)))))))

(assert (= (and d!4659 c!3401) b!24854))

(assert (= (and d!4659 (not c!3401)) b!24864))

(assert (= (and b!24864 c!3405) b!24855))

(assert (= (and b!24864 (not c!3405)) b!24860))

(assert (= (and b!24860 c!3403) b!24852))

(assert (= (and b!24860 (not c!3403)) b!24858))

(assert (= (or b!24852 b!24858) bm!2202))

(assert (= (or b!24855 bm!2202) bm!2201))

(assert (= (or b!24855 b!24852) bm!2203))

(assert (= (or b!24854 bm!2201) bm!2200))

(assert (= (or b!24854 bm!2203) bm!2204))

(assert (= (and d!4659 res!15071) b!24865))

(assert (= (and d!4659 c!3404) b!24848))

(assert (= (and d!4659 (not c!3404)) b!24866))

(assert (= (and d!4659 res!15069) b!24853))

(assert (= (and b!24853 res!15074) b!24861))

(assert (= (and b!24853 (not res!15070)) b!24847))

(assert (= (and b!24847 res!15077) b!24867))

(assert (= (and b!24853 res!15075) b!24849))

(assert (= (and b!24849 c!3402) b!24856))

(assert (= (and b!24849 (not c!3402)) b!24851))

(assert (= (and b!24856 res!15076) b!24863))

(assert (= (or b!24856 b!24851) bm!2198))

(assert (= (and b!24849 res!15072) b!24857))

(assert (= (and b!24857 c!3400) b!24862))

(assert (= (and b!24857 (not c!3400)) b!24850))

(assert (= (and b!24862 res!15073) b!24859))

(assert (= (or b!24862 b!24850) bm!2199))

(declare-fun b_lambda!1639 () Bool)

(assert (=> (not b_lambda!1639) (not b!24867)))

(declare-fun tb!669 () Bool)

(declare-fun t!3252 () Bool)

(assert (=> (and b!23142 (= (defaultEntry!1743 (v!1604 (underlying!116 thiss!938))) (defaultEntry!1743 (_2!487 lt!8276))) t!3252) tb!669))

(declare-fun result!1109 () Bool)

(assert (=> tb!669 (= result!1109 tp_is_empty!1023)))

(assert (=> b!24867 t!3252))

(declare-fun b_and!1545 () Bool)

(assert (= b_and!1543 (and (=> t!3252 result!1109) b_and!1545)))

(declare-fun m!19799 () Bool)

(assert (=> bm!2200 m!19799))

(declare-fun m!19801 () Bool)

(assert (=> b!24863 m!19801))

(assert (=> b!24865 m!18555))

(assert (=> b!24865 m!18555))

(assert (=> b!24865 m!18557))

(assert (=> d!4659 m!18103))

(assert (=> b!24847 m!18555))

(assert (=> b!24847 m!18555))

(declare-fun m!19803 () Bool)

(assert (=> b!24847 m!19803))

(declare-fun m!19805 () Bool)

(assert (=> b!24848 m!19805))

(declare-fun m!19807 () Bool)

(assert (=> b!24848 m!19807))

(declare-fun m!19809 () Bool)

(assert (=> b!24848 m!19809))

(assert (=> b!24848 m!19807))

(declare-fun m!19811 () Bool)

(assert (=> b!24848 m!19811))

(declare-fun m!19813 () Bool)

(assert (=> b!24848 m!19813))

(declare-fun m!19815 () Bool)

(assert (=> b!24848 m!19815))

(declare-fun m!19817 () Bool)

(assert (=> b!24848 m!19817))

(declare-fun m!19819 () Bool)

(assert (=> b!24848 m!19819))

(declare-fun m!19821 () Bool)

(assert (=> b!24848 m!19821))

(declare-fun m!19823 () Bool)

(assert (=> b!24848 m!19823))

(assert (=> b!24848 m!19809))

(declare-fun m!19825 () Bool)

(assert (=> b!24848 m!19825))

(declare-fun m!19827 () Bool)

(assert (=> b!24848 m!19827))

(assert (=> b!24848 m!19815))

(declare-fun m!19829 () Bool)

(assert (=> b!24848 m!19829))

(assert (=> b!24848 m!18555))

(declare-fun m!19831 () Bool)

(assert (=> b!24848 m!19831))

(assert (=> b!24848 m!19799))

(declare-fun m!19833 () Bool)

(assert (=> b!24848 m!19833))

(assert (=> b!24848 m!19821))

(assert (=> b!24861 m!18555))

(assert (=> b!24861 m!18555))

(assert (=> b!24861 m!18557))

(declare-fun m!19835 () Bool)

(assert (=> b!24867 m!19835))

(assert (=> b!24867 m!19835))

(declare-fun m!19837 () Bool)

(assert (=> b!24867 m!19837))

(declare-fun m!19839 () Bool)

(assert (=> b!24867 m!19839))

(assert (=> b!24867 m!19837))

(assert (=> b!24867 m!18555))

(declare-fun m!19841 () Bool)

(assert (=> b!24867 m!19841))

(assert (=> b!24867 m!18555))

(declare-fun m!19843 () Bool)

(assert (=> bm!2199 m!19843))

(declare-fun m!19845 () Bool)

(assert (=> bm!2198 m!19845))

(declare-fun m!19847 () Bool)

(assert (=> b!24854 m!19847))

(declare-fun m!19849 () Bool)

(assert (=> b!24859 m!19849))

(declare-fun m!19851 () Bool)

(assert (=> bm!2204 m!19851))

(assert (=> d!4043 d!4659))

(declare-fun d!4661 () Bool)

(assert (=> d!4661 (= (apply!29 lt!8546 #b0000000000000000000000000000000000000000000000000000000000000000) (get!391 (getValueByKey!61 (toList!299 lt!8546) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!1029 () Bool)

(assert (= bs!1029 d!4661))

(assert (=> bs!1029 m!19305))

(assert (=> bs!1029 m!19305))

(declare-fun m!19853 () Bool)

(assert (=> bs!1029 m!19853))

(assert (=> b!23641 d!4661))

(declare-fun b!24868 () Bool)

(declare-fun e!16070 () Bool)

(declare-fun call!2208 () Bool)

(assert (=> b!24868 (= e!16070 call!2208)))

(declare-fun d!4663 () Bool)

(declare-fun res!15079 () Bool)

(declare-fun e!16071 () Bool)

(assert (=> d!4663 (=> res!15079 e!16071)))

(assert (=> d!4663 (= res!15079 (bvsge (bvadd lt!8351 #b00000000000000000000000000000001) (size!704 lt!8338)))))

(assert (=> d!4663 (= (arrayNoDuplicates!0 lt!8338 (bvadd lt!8351 #b00000000000000000000000000000001) (ite c!3020 (Cons!565 (select (arr!608 lt!8338) lt!8351) lt!8352) lt!8352)) e!16071)))

(declare-fun b!24869 () Bool)

(declare-fun e!16073 () Bool)

(assert (=> b!24869 (= e!16073 e!16070)))

(declare-fun c!3406 () Bool)

(assert (=> b!24869 (= c!3406 (validKeyInArray!0 (select (arr!608 lt!8338) (bvadd lt!8351 #b00000000000000000000000000000001))))))

(declare-fun b!24870 () Bool)

(assert (=> b!24870 (= e!16070 call!2208)))

(declare-fun e!16072 () Bool)

(declare-fun b!24871 () Bool)

(assert (=> b!24871 (= e!16072 (contains!231 (ite c!3020 (Cons!565 (select (arr!608 lt!8338) lt!8351) lt!8352) lt!8352) (select (arr!608 lt!8338) (bvadd lt!8351 #b00000000000000000000000000000001))))))

(declare-fun bm!2205 () Bool)

(assert (=> bm!2205 (= call!2208 (arrayNoDuplicates!0 lt!8338 (bvadd lt!8351 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!3406 (Cons!565 (select (arr!608 lt!8338) (bvadd lt!8351 #b00000000000000000000000000000001)) (ite c!3020 (Cons!565 (select (arr!608 lt!8338) lt!8351) lt!8352) lt!8352)) (ite c!3020 (Cons!565 (select (arr!608 lt!8338) lt!8351) lt!8352) lt!8352))))))

(declare-fun b!24872 () Bool)

(assert (=> b!24872 (= e!16071 e!16073)))

(declare-fun res!15078 () Bool)

(assert (=> b!24872 (=> (not res!15078) (not e!16073))))

(assert (=> b!24872 (= res!15078 (not e!16072))))

(declare-fun res!15080 () Bool)

(assert (=> b!24872 (=> (not res!15080) (not e!16072))))

(assert (=> b!24872 (= res!15080 (validKeyInArray!0 (select (arr!608 lt!8338) (bvadd lt!8351 #b00000000000000000000000000000001))))))

(assert (= (and d!4663 (not res!15079)) b!24872))

(assert (= (and b!24872 res!15080) b!24871))

(assert (= (and b!24872 res!15078) b!24869))

(assert (= (and b!24869 c!3406) b!24870))

(assert (= (and b!24869 (not c!3406)) b!24868))

(assert (= (or b!24870 b!24868) bm!2205))

(declare-fun m!19855 () Bool)

(assert (=> b!24869 m!19855))

(assert (=> b!24869 m!19855))

(declare-fun m!19857 () Bool)

(assert (=> b!24869 m!19857))

(assert (=> b!24871 m!19855))

(assert (=> b!24871 m!19855))

(declare-fun m!19859 () Bool)

(assert (=> b!24871 m!19859))

(assert (=> bm!2205 m!19855))

(declare-fun m!19861 () Bool)

(assert (=> bm!2205 m!19861))

(assert (=> b!24872 m!19855))

(assert (=> b!24872 m!19855))

(assert (=> b!24872 m!19857))

(assert (=> bm!1964 d!4663))

(declare-fun b!24873 () Bool)

(declare-fun e!16076 () Bool)

(declare-fun e!16079 () Bool)

(assert (=> b!24873 (= e!16076 e!16079)))

(declare-fun c!3409 () Bool)

(assert (=> b!24873 (= c!3409 (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))))))

(declare-fun b!24874 () Bool)

(declare-fun e!16078 () Bool)

(assert (=> b!24874 (= e!16076 e!16078)))

(assert (=> b!24874 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))))))

(declare-fun res!15082 () Bool)

(declare-fun lt!9562 () ListLongMap!567)

(assert (=> b!24874 (= res!15082 (contains!230 lt!9562 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000)))))

(assert (=> b!24874 (=> (not res!15082) (not e!16078))))

(declare-fun bm!2206 () Bool)

(declare-fun call!2209 () ListLongMap!567)

(assert (=> bm!2206 (= call!2209 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!487 lt!8158)) (ite (or c!2998 c!2996) (_values!1729 (_2!487 lt!8158)) (array!1284 (store (arr!607 (_values!1729 (_2!487 lt!8158))) (index!2338 lt!8281) (ValueCellFull!312 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!703 (_values!1729 (_2!487 lt!8158))))) (mask!4730 (_2!487 lt!8158)) (ite c!2998 (ite c!2997 lt!8271 lt!8268) (extraKeys!1641 (_2!487 lt!8158))) (ite (and c!2998 c!2997) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 (_2!487 lt!8158))) (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!1743 (_2!487 lt!8158))))))

(declare-fun b!24875 () Bool)

(assert (=> b!24875 (= e!16079 (isEmpty!172 lt!9562))))

(declare-fun b!24876 () Bool)

(declare-fun e!16077 () Bool)

(assert (=> b!24876 (= e!16077 (validKeyInArray!0 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000)))))

(assert (=> b!24876 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!24877 () Bool)

(declare-fun res!15083 () Bool)

(declare-fun e!16080 () Bool)

(assert (=> b!24877 (=> (not res!15083) (not e!16080))))

(assert (=> b!24877 (= res!15083 (not (contains!230 lt!9562 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!24878 () Bool)

(declare-fun e!16074 () ListLongMap!567)

(assert (=> b!24878 (= e!16074 (ListLongMap!568 Nil!565))))

(declare-fun d!4665 () Bool)

(assert (=> d!4665 e!16080))

(declare-fun res!15081 () Bool)

(assert (=> d!4665 (=> (not res!15081) (not e!16080))))

(assert (=> d!4665 (= res!15081 (not (contains!230 lt!9562 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!4665 (= lt!9562 e!16074)))

(declare-fun c!3408 () Bool)

(assert (=> d!4665 (= c!3408 (bvsge #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))))))

(assert (=> d!4665 (validMask!0 (mask!4730 (_2!487 lt!8158)))))

(assert (=> d!4665 (= (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!487 lt!8158)) (ite (or c!2998 c!2996) (_values!1729 (_2!487 lt!8158)) (array!1284 (store (arr!607 (_values!1729 (_2!487 lt!8158))) (index!2338 lt!8281) (ValueCellFull!312 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!703 (_values!1729 (_2!487 lt!8158))))) (mask!4730 (_2!487 lt!8158)) (ite c!2998 (ite c!2997 lt!8271 lt!8268) (extraKeys!1641 (_2!487 lt!8158))) (ite (and c!2998 c!2997) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 (_2!487 lt!8158))) (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158))) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))) lt!9562)))

(declare-fun b!24879 () Bool)

(assert (=> b!24879 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))))))

(assert (=> b!24879 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!703 (ite (or c!2998 c!2996) (_values!1729 (_2!487 lt!8158)) (array!1284 (store (arr!607 (_values!1729 (_2!487 lt!8158))) (index!2338 lt!8281) (ValueCellFull!312 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!703 (_values!1729 (_2!487 lt!8158))))))))))

(assert (=> b!24879 (= e!16078 (= (apply!29 lt!9562 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000)) (get!390 (select (arr!607 (ite (or c!2998 c!2996) (_values!1729 (_2!487 lt!8158)) (array!1284 (store (arr!607 (_values!1729 (_2!487 lt!8158))) (index!2338 lt!8281) (ValueCellFull!312 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!703 (_values!1729 (_2!487 lt!8158)))))) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (_2!487 lt!8158)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!24880 () Bool)

(declare-fun e!16075 () ListLongMap!567)

(assert (=> b!24880 (= e!16075 call!2209)))

(declare-fun b!24881 () Bool)

(assert (=> b!24881 (= e!16080 e!16076)))

(declare-fun c!3410 () Bool)

(assert (=> b!24881 (= c!3410 e!16077)))

(declare-fun res!15084 () Bool)

(assert (=> b!24881 (=> (not res!15084) (not e!16077))))

(assert (=> b!24881 (= res!15084 (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8158)))))))

(declare-fun b!24882 () Bool)

(declare-fun lt!9564 () Unit!512)

(declare-fun lt!9561 () Unit!512)

(assert (=> b!24882 (= lt!9564 lt!9561)))

(declare-fun lt!9566 () ListLongMap!567)

(declare-fun lt!9565 () (_ BitVec 64))

(declare-fun lt!9563 () V!1189)

(declare-fun lt!9567 () (_ BitVec 64))

(assert (=> b!24882 (not (contains!230 (+!45 lt!9566 (tuple2!961 lt!9565 lt!9563)) lt!9567))))

(assert (=> b!24882 (= lt!9561 (addStillNotContains!2 lt!9566 lt!9565 lt!9563 lt!9567))))

(assert (=> b!24882 (= lt!9567 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!24882 (= lt!9563 (get!390 (select (arr!607 (ite (or c!2998 c!2996) (_values!1729 (_2!487 lt!8158)) (array!1284 (store (arr!607 (_values!1729 (_2!487 lt!8158))) (index!2338 lt!8281) (ValueCellFull!312 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!703 (_values!1729 (_2!487 lt!8158)))))) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (_2!487 lt!8158)) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!24882 (= lt!9565 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000))))

(assert (=> b!24882 (= lt!9566 call!2209)))

(assert (=> b!24882 (= e!16075 (+!45 call!2209 (tuple2!961 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000) (get!390 (select (arr!607 (ite (or c!2998 c!2996) (_values!1729 (_2!487 lt!8158)) (array!1284 (store (arr!607 (_values!1729 (_2!487 lt!8158))) (index!2338 lt!8281) (ValueCellFull!312 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!703 (_values!1729 (_2!487 lt!8158)))))) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 (_2!487 lt!8158)) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!24883 () Bool)

(assert (=> b!24883 (= e!16074 e!16075)))

(declare-fun c!3407 () Bool)

(assert (=> b!24883 (= c!3407 (validKeyInArray!0 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) #b00000000000000000000000000000000)))))

(declare-fun b!24884 () Bool)

(assert (=> b!24884 (= e!16079 (= lt!9562 (getCurrentListMapNoExtraKeys!15 (_keys!3164 (_2!487 lt!8158)) (ite (or c!2998 c!2996) (_values!1729 (_2!487 lt!8158)) (array!1284 (store (arr!607 (_values!1729 (_2!487 lt!8158))) (index!2338 lt!8281) (ValueCellFull!312 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (size!703 (_values!1729 (_2!487 lt!8158))))) (mask!4730 (_2!487 lt!8158)) (ite c!2998 (ite c!2997 lt!8271 lt!8268) (extraKeys!1641 (_2!487 lt!8158))) (ite (and c!2998 c!2997) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 (_2!487 lt!8158))) (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!1743 (_2!487 lt!8158)))))))

(assert (= (and d!4665 c!3408) b!24878))

(assert (= (and d!4665 (not c!3408)) b!24883))

(assert (= (and b!24883 c!3407) b!24882))

(assert (= (and b!24883 (not c!3407)) b!24880))

(assert (= (or b!24882 b!24880) bm!2206))

(assert (= (and d!4665 res!15081) b!24877))

(assert (= (and b!24877 res!15083) b!24881))

(assert (= (and b!24881 res!15084) b!24876))

(assert (= (and b!24881 c!3410) b!24874))

(assert (= (and b!24881 (not c!3410)) b!24873))

(assert (= (and b!24874 res!15082) b!24879))

(assert (= (and b!24873 c!3409) b!24884))

(assert (= (and b!24873 (not c!3409)) b!24875))

(declare-fun b_lambda!1641 () Bool)

(assert (=> (not b_lambda!1641) (not b!24879)))

(assert (=> b!24879 t!3242))

(declare-fun b_and!1547 () Bool)

(assert (= b_and!1545 (and (=> t!3242 result!1099) b_and!1547)))

(declare-fun b_lambda!1643 () Bool)

(assert (=> (not b_lambda!1643) (not b!24882)))

(assert (=> b!24882 t!3242))

(declare-fun b_and!1549 () Bool)

(assert (= b_and!1547 (and (=> t!3242 result!1099) b_and!1549)))

(assert (=> b!24874 m!16986))

(assert (=> b!24874 m!16986))

(declare-fun m!19863 () Bool)

(assert (=> b!24874 m!19863))

(assert (=> b!24882 m!17026))

(declare-fun m!19865 () Bool)

(assert (=> b!24882 m!19865))

(assert (=> b!24882 m!17124))

(declare-fun m!19867 () Bool)

(assert (=> b!24882 m!19867))

(assert (=> b!24882 m!19867))

(declare-fun m!19869 () Bool)

(assert (=> b!24882 m!19869))

(assert (=> b!24882 m!17124))

(assert (=> b!24882 m!17026))

(assert (=> b!24882 m!17126))

(assert (=> b!24882 m!16986))

(declare-fun m!19871 () Bool)

(assert (=> b!24882 m!19871))

(assert (=> b!24879 m!17026))

(assert (=> b!24879 m!17124))

(assert (=> b!24879 m!17026))

(assert (=> b!24879 m!17126))

(assert (=> b!24879 m!17124))

(assert (=> b!24879 m!16986))

(assert (=> b!24879 m!16986))

(declare-fun m!19873 () Bool)

(assert (=> b!24879 m!19873))

(declare-fun m!19875 () Bool)

(assert (=> d!4665 m!19875))

(assert (=> d!4665 m!16990))

(assert (=> b!24883 m!16986))

(assert (=> b!24883 m!16986))

(assert (=> b!24883 m!16988))

(declare-fun m!19877 () Bool)

(assert (=> b!24875 m!19877))

(declare-fun m!19879 () Bool)

(assert (=> b!24877 m!19879))

(assert (=> b!24876 m!16986))

(assert (=> b!24876 m!16986))

(assert (=> b!24876 m!16988))

(declare-fun m!19881 () Bool)

(assert (=> bm!2206 m!19881))

(assert (=> b!24884 m!19881))

(assert (=> bm!1994 d!4665))

(assert (=> bm!1991 d!4105))

(declare-fun b!24885 () Bool)

(declare-fun e!16081 () Bool)

(declare-fun e!16082 () Bool)

(assert (=> b!24885 (= e!16081 e!16082)))

(declare-fun c!3411 () Bool)

(assert (=> b!24885 (= c!3411 (validKeyInArray!0 (select (arr!608 lt!8341) (bvadd lt!8354 #b00000000000000000000000000000001))))))

(declare-fun d!4667 () Bool)

(declare-fun res!15085 () Bool)

(assert (=> d!4667 (=> res!15085 e!16081)))

(assert (=> d!4667 (= res!15085 (bvsge (bvadd lt!8354 #b00000000000000000000000000000001) (size!704 lt!8341)))))

(assert (=> d!4667 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd lt!8354 #b00000000000000000000000000000001) lt!8341 (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938))))) e!16081)))

(declare-fun b!24886 () Bool)

(declare-fun e!16083 () Bool)

(declare-fun call!2210 () Bool)

(assert (=> b!24886 (= e!16083 call!2210)))

(declare-fun bm!2207 () Bool)

(assert (=> bm!2207 (= call!2210 (arrayForallSeekEntryOrOpenFound!0 (bvadd lt!8354 #b00000000000000000000000000000001 #b00000000000000000000000000000001) lt!8341 (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938))))))))

(declare-fun b!24887 () Bool)

(assert (=> b!24887 (= e!16082 call!2210)))

(declare-fun b!24888 () Bool)

(assert (=> b!24888 (= e!16082 e!16083)))

(declare-fun lt!9568 () (_ BitVec 64))

(assert (=> b!24888 (= lt!9568 (select (arr!608 lt!8341) (bvadd lt!8354 #b00000000000000000000000000000001)))))

(declare-fun lt!9570 () Unit!512)

(assert (=> b!24888 (= lt!9570 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!8341 lt!9568 (bvadd lt!8354 #b00000000000000000000000000000001)))))

(assert (=> b!24888 (arrayContainsKey!0 lt!8341 lt!9568 #b00000000000000000000000000000000)))

(declare-fun lt!9569 () Unit!512)

(assert (=> b!24888 (= lt!9569 lt!9570)))

(declare-fun res!15086 () Bool)

(assert (=> b!24888 (= res!15086 (= (seekEntryOrOpen!0 (select (arr!608 lt!8341) (bvadd lt!8354 #b00000000000000000000000000000001)) lt!8341 (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938))))) (Found!54 (bvadd lt!8354 #b00000000000000000000000000000001))))))

(assert (=> b!24888 (=> (not res!15086) (not e!16083))))

(assert (= (and d!4667 (not res!15085)) b!24885))

(assert (= (and b!24885 c!3411) b!24888))

(assert (= (and b!24885 (not c!3411)) b!24887))

(assert (= (and b!24888 res!15086) b!24886))

(assert (= (or b!24886 b!24887) bm!2207))

(declare-fun m!19883 () Bool)

(assert (=> b!24885 m!19883))

(assert (=> b!24885 m!19883))

(declare-fun m!19885 () Bool)

(assert (=> b!24885 m!19885))

(assert (=> bm!2207 m!16750))

(declare-fun m!19887 () Bool)

(assert (=> bm!2207 m!19887))

(assert (=> b!24888 m!19883))

(declare-fun m!19889 () Bool)

(assert (=> b!24888 m!19889))

(declare-fun m!19891 () Bool)

(assert (=> b!24888 m!19891))

(assert (=> b!24888 m!19883))

(assert (=> b!24888 m!16750))

(declare-fun m!19893 () Bool)

(assert (=> b!24888 m!19893))

(assert (=> bm!1961 d!4667))

(declare-fun d!4669 () Bool)

(assert (=> d!4669 (isDefined!23 (getValueByKey!61 (toList!299 (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158)))) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!9571 () Unit!512)

(assert (=> d!4669 (= lt!9571 (choose!215 (toList!299 (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158)))) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!16084 () Bool)

(assert (=> d!4669 e!16084))

(declare-fun res!15087 () Bool)

(assert (=> d!4669 (=> (not res!15087) (not e!16084))))

(assert (=> d!4669 (= res!15087 (isStrictlySorted!171 (toList!299 (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))))))

(assert (=> d!4669 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!299 (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158)))) #b1000000000000000000000000000000000000000000000000000000000000000) lt!9571)))

(declare-fun b!24889 () Bool)

(assert (=> b!24889 (= e!16084 (containsKey!25 (toList!299 (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158)))) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!4669 res!15087) b!24889))

(assert (=> d!4669 m!17555))

(assert (=> d!4669 m!17555))

(assert (=> d!4669 m!17557))

(declare-fun m!19895 () Bool)

(assert (=> d!4669 m!19895))

(declare-fun m!19897 () Bool)

(assert (=> d!4669 m!19897))

(assert (=> b!24889 m!17551))

(assert (=> b!23803 d!4669))

(assert (=> b!23803 d!4565))

(assert (=> b!23803 d!4567))

(declare-fun b!24890 () Bool)

(declare-fun e!16085 () Bool)

(declare-fun call!2211 () Bool)

(assert (=> b!24890 (= e!16085 call!2211)))

(declare-fun d!4671 () Bool)

(declare-fun res!15089 () Bool)

(declare-fun e!16086 () Bool)

(assert (=> d!4671 (=> res!15089 e!16086)))

(assert (=> d!4671 (= res!15089 (bvsge #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8345))))))

(assert (=> d!4671 (= (arrayNoDuplicates!0 (_keys!3164 lt!8345) #b00000000000000000000000000000000 Nil!566) e!16086)))

(declare-fun b!24891 () Bool)

(declare-fun e!16088 () Bool)

(assert (=> b!24891 (= e!16088 e!16085)))

(declare-fun c!3412 () Bool)

(assert (=> b!24891 (= c!3412 (validKeyInArray!0 (select (arr!608 (_keys!3164 lt!8345)) #b00000000000000000000000000000000)))))

(declare-fun b!24892 () Bool)

(assert (=> b!24892 (= e!16085 call!2211)))

(declare-fun b!24893 () Bool)

(declare-fun e!16087 () Bool)

(assert (=> b!24893 (= e!16087 (contains!231 Nil!566 (select (arr!608 (_keys!3164 lt!8345)) #b00000000000000000000000000000000)))))

(declare-fun bm!2208 () Bool)

(assert (=> bm!2208 (= call!2211 (arrayNoDuplicates!0 (_keys!3164 lt!8345) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!3412 (Cons!565 (select (arr!608 (_keys!3164 lt!8345)) #b00000000000000000000000000000000) Nil!566) Nil!566)))))

(declare-fun b!24894 () Bool)

(assert (=> b!24894 (= e!16086 e!16088)))

(declare-fun res!15088 () Bool)

(assert (=> b!24894 (=> (not res!15088) (not e!16088))))

(assert (=> b!24894 (= res!15088 (not e!16087))))

(declare-fun res!15090 () Bool)

(assert (=> b!24894 (=> (not res!15090) (not e!16087))))

(assert (=> b!24894 (= res!15090 (validKeyInArray!0 (select (arr!608 (_keys!3164 lt!8345)) #b00000000000000000000000000000000)))))

(assert (= (and d!4671 (not res!15089)) b!24894))

(assert (= (and b!24894 res!15090) b!24893))

(assert (= (and b!24894 res!15088) b!24891))

(assert (= (and b!24891 c!3412) b!24892))

(assert (= (and b!24891 (not c!3412)) b!24890))

(assert (= (or b!24892 b!24890) bm!2208))

(assert (=> b!24891 m!17787))

(assert (=> b!24891 m!17787))

(assert (=> b!24891 m!17789))

(assert (=> b!24893 m!17787))

(assert (=> b!24893 m!17787))

(declare-fun m!19899 () Bool)

(assert (=> b!24893 m!19899))

(assert (=> bm!2208 m!17787))

(declare-fun m!19901 () Bool)

(assert (=> bm!2208 m!19901))

(assert (=> b!24894 m!17787))

(assert (=> b!24894 m!17787))

(assert (=> b!24894 m!17789))

(assert (=> b!23439 d!4671))

(declare-fun b!24895 () Bool)

(declare-fun e!16091 () Bool)

(declare-fun e!16094 () Bool)

(assert (=> b!24895 (= e!16091 e!16094)))

(declare-fun c!3415 () Bool)

(assert (=> b!24895 (= c!3415 (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))))))

(declare-fun b!24896 () Bool)

(declare-fun e!16093 () Bool)

(assert (=> b!24896 (= e!16091 e!16093)))

(assert (=> b!24896 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))))))

(declare-fun res!15092 () Bool)

(declare-fun lt!9573 () ListLongMap!567)

(assert (=> b!24896 (= res!15092 (contains!230 lt!9573 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000)))))

(assert (=> b!24896 (=> (not res!15092) (not e!16093))))

(declare-fun bm!2209 () Bool)

(declare-fun call!2212 () ListLongMap!567)

(assert (=> bm!2209 (= call!2212 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8161) (ite c!2984 (_values!1729 lt!8161) lt!8260) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!1743 lt!8161)))))

(declare-fun b!24897 () Bool)

(assert (=> b!24897 (= e!16094 (isEmpty!172 lt!9573))))

(declare-fun b!24898 () Bool)

(declare-fun e!16092 () Bool)

(assert (=> b!24898 (= e!16092 (validKeyInArray!0 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000)))))

(assert (=> b!24898 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!24899 () Bool)

(declare-fun res!15093 () Bool)

(declare-fun e!16095 () Bool)

(assert (=> b!24899 (=> (not res!15093) (not e!16095))))

(assert (=> b!24899 (= res!15093 (not (contains!230 lt!9573 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!24900 () Bool)

(declare-fun e!16089 () ListLongMap!567)

(assert (=> b!24900 (= e!16089 (ListLongMap!568 Nil!565))))

(declare-fun d!4673 () Bool)

(assert (=> d!4673 e!16095))

(declare-fun res!15091 () Bool)

(assert (=> d!4673 (=> (not res!15091) (not e!16095))))

(assert (=> d!4673 (= res!15091 (not (contains!230 lt!9573 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!4673 (= lt!9573 e!16089)))

(declare-fun c!3414 () Bool)

(assert (=> d!4673 (= c!3414 (bvsge #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))))))

(assert (=> d!4673 (validMask!0 (mask!4730 lt!8161))))

(assert (=> d!4673 (= (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8161) (ite c!2984 (_values!1729 lt!8161) lt!8260) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)) lt!9573)))

(declare-fun b!24901 () Bool)

(assert (=> b!24901 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))))))

(assert (=> b!24901 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!703 (ite c!2984 (_values!1729 lt!8161) lt!8260))))))

(assert (=> b!24901 (= e!16093 (= (apply!29 lt!9573 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000)) (get!390 (select (arr!607 (ite c!2984 (_values!1729 lt!8161) lt!8260)) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 lt!8161) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!24902 () Bool)

(declare-fun e!16090 () ListLongMap!567)

(assert (=> b!24902 (= e!16090 call!2212)))

(declare-fun b!24903 () Bool)

(assert (=> b!24903 (= e!16095 e!16091)))

(declare-fun c!3416 () Bool)

(assert (=> b!24903 (= c!3416 e!16092)))

(declare-fun res!15094 () Bool)

(assert (=> b!24903 (=> (not res!15094) (not e!16092))))

(assert (=> b!24903 (= res!15094 (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))))))

(declare-fun b!24904 () Bool)

(declare-fun lt!9575 () Unit!512)

(declare-fun lt!9572 () Unit!512)

(assert (=> b!24904 (= lt!9575 lt!9572)))

(declare-fun lt!9574 () V!1189)

(declare-fun lt!9578 () (_ BitVec 64))

(declare-fun lt!9577 () ListLongMap!567)

(declare-fun lt!9576 () (_ BitVec 64))

(assert (=> b!24904 (not (contains!230 (+!45 lt!9577 (tuple2!961 lt!9576 lt!9574)) lt!9578))))

(assert (=> b!24904 (= lt!9572 (addStillNotContains!2 lt!9577 lt!9576 lt!9574 lt!9578))))

(assert (=> b!24904 (= lt!9578 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!24904 (= lt!9574 (get!390 (select (arr!607 (ite c!2984 (_values!1729 lt!8161) lt!8260)) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 lt!8161) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!24904 (= lt!9576 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000))))

(assert (=> b!24904 (= lt!9577 call!2212)))

(assert (=> b!24904 (= e!16090 (+!45 call!2212 (tuple2!961 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000) (get!390 (select (arr!607 (ite c!2984 (_values!1729 lt!8161) lt!8260)) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 lt!8161) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!24905 () Bool)

(assert (=> b!24905 (= e!16089 e!16090)))

(declare-fun c!3413 () Bool)

(assert (=> b!24905 (= c!3413 (validKeyInArray!0 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000)))))

(declare-fun b!24906 () Bool)

(assert (=> b!24906 (= e!16094 (= lt!9573 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8161) (ite c!2984 (_values!1729 lt!8161) lt!8260) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!1743 lt!8161))))))

(assert (= (and d!4673 c!3414) b!24900))

(assert (= (and d!4673 (not c!3414)) b!24905))

(assert (= (and b!24905 c!3413) b!24904))

(assert (= (and b!24905 (not c!3413)) b!24902))

(assert (= (or b!24904 b!24902) bm!2209))

(assert (= (and d!4673 res!15091) b!24899))

(assert (= (and b!24899 res!15093) b!24903))

(assert (= (and b!24903 res!15094) b!24898))

(assert (= (and b!24903 c!3416) b!24896))

(assert (= (and b!24903 (not c!3416)) b!24895))

(assert (= (and b!24896 res!15092) b!24901))

(assert (= (and b!24895 c!3415) b!24906))

(assert (= (and b!24895 (not c!3415)) b!24897))

(declare-fun b_lambda!1645 () Bool)

(assert (=> (not b_lambda!1645) (not b!24901)))

(assert (=> b!24901 t!3244))

(declare-fun b_and!1551 () Bool)

(assert (= b_and!1549 (and (=> t!3244 result!1101) b_and!1551)))

(declare-fun b_lambda!1647 () Bool)

(assert (=> (not b_lambda!1647) (not b!24904)))

(assert (=> b!24904 t!3244))

(declare-fun b_and!1553 () Bool)

(assert (= b_and!1551 (and (=> t!3244 result!1101) b_and!1553)))

(assert (=> b!24896 m!16936))

(assert (=> b!24896 m!16936))

(declare-fun m!19903 () Bool)

(assert (=> b!24896 m!19903))

(assert (=> b!24904 m!17238))

(declare-fun m!19905 () Bool)

(assert (=> b!24904 m!19905))

(assert (=> b!24904 m!17290))

(declare-fun m!19907 () Bool)

(assert (=> b!24904 m!19907))

(assert (=> b!24904 m!19907))

(declare-fun m!19909 () Bool)

(assert (=> b!24904 m!19909))

(assert (=> b!24904 m!17290))

(assert (=> b!24904 m!17238))

(assert (=> b!24904 m!17292))

(assert (=> b!24904 m!16936))

(declare-fun m!19911 () Bool)

(assert (=> b!24904 m!19911))

(assert (=> b!24901 m!17238))

(assert (=> b!24901 m!17290))

(assert (=> b!24901 m!17238))

(assert (=> b!24901 m!17292))

(assert (=> b!24901 m!17290))

(assert (=> b!24901 m!16936))

(assert (=> b!24901 m!16936))

(declare-fun m!19913 () Bool)

(assert (=> b!24901 m!19913))

(declare-fun m!19915 () Bool)

(assert (=> d!4673 m!19915))

(assert (=> d!4673 m!17182))

(assert (=> b!24905 m!16936))

(assert (=> b!24905 m!16936))

(assert (=> b!24905 m!17202))

(declare-fun m!19917 () Bool)

(assert (=> b!24897 m!19917))

(declare-fun m!19919 () Bool)

(assert (=> b!24899 m!19919))

(assert (=> b!24898 m!16936))

(assert (=> b!24898 m!16936))

(assert (=> b!24898 m!17202))

(declare-fun m!19921 () Bool)

(assert (=> bm!2209 m!19921))

(assert (=> b!24906 m!19921))

(assert (=> bm!2008 d!4673))

(declare-fun d!4675 () Bool)

(assert (=> d!4675 (= (apply!29 lt!8692 #b0000000000000000000000000000000000000000000000000000000000000000) (get!391 (getValueByKey!61 (toList!299 lt!8692) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!1030 () Bool)

(assert (= bs!1030 d!4675))

(assert (=> bs!1030 m!19325))

(assert (=> bs!1030 m!19325))

(declare-fun m!19923 () Bool)

(assert (=> bs!1030 m!19923))

(assert (=> b!23754 d!4675))

(assert (=> d!4065 d!4053))

(declare-fun b!24907 () Bool)

(declare-fun res!15096 () Bool)

(declare-fun e!16098 () Bool)

(assert (=> b!24907 (=> (not res!15096) (not e!16098))))

(declare-fun lt!9579 () SeekEntryResult!54)

(assert (=> b!24907 (= res!15096 (= (select (arr!608 (_keys!3164 lt!8161)) (index!2340 lt!9579)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24908 () Bool)

(declare-fun e!16096 () Bool)

(declare-fun call!2213 () Bool)

(assert (=> b!24908 (= e!16096 (not call!2213))))

(declare-fun b!24909 () Bool)

(declare-fun e!16097 () Bool)

(declare-fun e!16099 () Bool)

(assert (=> b!24909 (= e!16097 e!16099)))

(declare-fun c!3418 () Bool)

(assert (=> b!24909 (= c!3418 ((_ is MissingVacant!54) lt!9579))))

(declare-fun call!2214 () Bool)

(declare-fun bm!2210 () Bool)

(declare-fun c!3417 () Bool)

(assert (=> bm!2210 (= call!2214 (inRange!0 (ite c!3417 (index!2337 lt!9579) (index!2340 lt!9579)) (mask!4730 lt!8161)))))

(declare-fun b!24910 () Bool)

(declare-fun res!15097 () Bool)

(assert (=> b!24910 (=> (not res!15097) (not e!16098))))

(assert (=> b!24910 (= res!15097 call!2214)))

(assert (=> b!24910 (= e!16099 e!16098)))

(declare-fun bm!2211 () Bool)

(assert (=> bm!2211 (= call!2213 (arrayContainsKey!0 (_keys!3164 lt!8161) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) #b00000000000000000000000000000000))))

(declare-fun b!24911 () Bool)

(assert (=> b!24911 (= e!16099 ((_ is Undefined!54) lt!9579))))

(declare-fun d!4677 () Bool)

(assert (=> d!4677 e!16097))

(assert (=> d!4677 (= c!3417 ((_ is MissingZero!54) lt!9579))))

(assert (=> d!4677 (= lt!9579 (seekEntryOrOpen!0 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (_keys!3164 lt!8161) (mask!4730 lt!8161)))))

(assert (=> d!4677 true))

(declare-fun _$34!748 () Unit!512)

(assert (=> d!4677 (= (choose!203 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (defaultEntry!1743 lt!8161)) _$34!748)))

(declare-fun b!24912 () Bool)

(declare-fun res!15095 () Bool)

(assert (=> b!24912 (= res!15095 (= (select (arr!608 (_keys!3164 lt!8161)) (index!2337 lt!9579)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!24912 (=> (not res!15095) (not e!16096))))

(declare-fun b!24913 () Bool)

(assert (=> b!24913 (= e!16097 e!16096)))

(declare-fun res!15098 () Bool)

(assert (=> b!24913 (= res!15098 call!2214)))

(assert (=> b!24913 (=> (not res!15098) (not e!16096))))

(declare-fun b!24914 () Bool)

(assert (=> b!24914 (= e!16098 (not call!2213))))

(assert (= (and d!4677 c!3417) b!24913))

(assert (= (and d!4677 (not c!3417)) b!24909))

(assert (= (and b!24913 res!15098) b!24912))

(assert (= (and b!24912 res!15095) b!24908))

(assert (= (and b!24909 c!3418) b!24910))

(assert (= (and b!24909 (not c!3418)) b!24911))

(assert (= (and b!24910 res!15097) b!24907))

(assert (= (and b!24907 res!15096) b!24914))

(assert (= (or b!24913 b!24910) bm!2210))

(assert (= (or b!24908 b!24914) bm!2211))

(declare-fun m!19925 () Bool)

(assert (=> b!24907 m!19925))

(declare-fun m!19927 () Bool)

(assert (=> bm!2210 m!19927))

(assert (=> bm!2211 m!16804))

(assert (=> d!4677 m!16828))

(declare-fun m!19929 () Bool)

(assert (=> b!24912 m!19929))

(assert (=> d!4065 d!4677))

(assert (=> d!4065 d!4239))

(assert (=> d!4109 d!4081))

(declare-fun d!4679 () Bool)

(declare-fun e!16100 () Bool)

(assert (=> d!4679 e!16100))

(declare-fun res!15099 () Bool)

(assert (=> d!4679 (=> (not res!15099) (not e!16100))))

(declare-fun lt!9582 () ListLongMap!567)

(assert (=> d!4679 (= res!15099 (contains!230 lt!9582 (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(declare-fun lt!9581 () List!568)

(assert (=> d!4679 (= lt!9582 (ListLongMap!568 lt!9581))))

(declare-fun lt!9580 () Unit!512)

(declare-fun lt!9583 () Unit!512)

(assert (=> d!4679 (= lt!9580 lt!9583)))

(assert (=> d!4679 (= (getValueByKey!61 lt!9581 (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (Some!66 (_2!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(assert (=> d!4679 (= lt!9583 (lemmaContainsTupThenGetReturnValue!18 lt!9581 (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (_2!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(assert (=> d!4679 (= lt!9581 (insertStrictlySorted!18 (toList!299 (getCurrentListMap!130 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161))) (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (_2!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(assert (=> d!4679 (= (+!45 (getCurrentListMap!130 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) lt!9582)))

(declare-fun b!24915 () Bool)

(declare-fun res!15100 () Bool)

(assert (=> b!24915 (=> (not res!15100) (not e!16100))))

(assert (=> b!24915 (= res!15100 (= (getValueByKey!61 (toList!299 lt!9582) (_1!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))) (Some!66 (_2!489 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))))

(declare-fun b!24916 () Bool)

(assert (=> b!24916 (= e!16100 (contains!232 (toList!299 lt!9582) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(assert (= (and d!4679 res!15099) b!24915))

(assert (= (and b!24915 res!15100) b!24916))

(declare-fun m!19931 () Bool)

(assert (=> d!4679 m!19931))

(declare-fun m!19933 () Bool)

(assert (=> d!4679 m!19933))

(declare-fun m!19935 () Bool)

(assert (=> d!4679 m!19935))

(declare-fun m!19937 () Bool)

(assert (=> d!4679 m!19937))

(declare-fun m!19939 () Bool)

(assert (=> b!24915 m!19939))

(declare-fun m!19941 () Bool)

(assert (=> b!24916 m!19941))

(assert (=> d!4109 d!4679))

(declare-fun bm!2212 () Bool)

(declare-fun call!2216 () Bool)

(declare-fun lt!9601 () ListLongMap!567)

(assert (=> bm!2212 (= call!2216 (contains!230 lt!9601 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!2213 () Bool)

(declare-fun call!2218 () Bool)

(assert (=> bm!2213 (= call!2218 (contains!230 lt!9601 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!24917 () Bool)

(declare-fun e!16108 () Bool)

(declare-fun e!16109 () Bool)

(assert (=> b!24917 (= e!16108 e!16109)))

(declare-fun res!15109 () Bool)

(assert (=> b!24917 (=> (not res!15109) (not e!16109))))

(assert (=> b!24917 (= res!15109 (contains!230 lt!9601 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000)))))

(assert (=> b!24917 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))))))

(declare-fun b!24918 () Bool)

(declare-fun e!16102 () Unit!512)

(declare-fun lt!9586 () Unit!512)

(assert (=> b!24918 (= e!16102 lt!9586)))

(declare-fun lt!9598 () ListLongMap!567)

(assert (=> b!24918 (= lt!9598 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) lt!8241 (zeroValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))))

(declare-fun lt!9593 () (_ BitVec 64))

(assert (=> b!24918 (= lt!9593 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9602 () (_ BitVec 64))

(assert (=> b!24918 (= lt!9602 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000))))

(declare-fun lt!9594 () Unit!512)

(assert (=> b!24918 (= lt!9594 (addStillContains!14 lt!9598 lt!9593 (zeroValue!1666 lt!8161) lt!9602))))

(assert (=> b!24918 (contains!230 (+!45 lt!9598 (tuple2!961 lt!9593 (zeroValue!1666 lt!8161))) lt!9602)))

(declare-fun lt!9605 () Unit!512)

(assert (=> b!24918 (= lt!9605 lt!9594)))

(declare-fun lt!9589 () ListLongMap!567)

(assert (=> b!24918 (= lt!9589 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) lt!8241 (zeroValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))))

(declare-fun lt!9604 () (_ BitVec 64))

(assert (=> b!24918 (= lt!9604 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9603 () (_ BitVec 64))

(assert (=> b!24918 (= lt!9603 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000))))

(declare-fun lt!9588 () Unit!512)

(assert (=> b!24918 (= lt!9588 (addApplyDifferent!14 lt!9589 lt!9604 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) lt!9603))))

(assert (=> b!24918 (= (apply!29 (+!45 lt!9589 (tuple2!961 lt!9604 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) lt!9603) (apply!29 lt!9589 lt!9603))))

(declare-fun lt!9587 () Unit!512)

(assert (=> b!24918 (= lt!9587 lt!9588)))

(declare-fun lt!9596 () ListLongMap!567)

(assert (=> b!24918 (= lt!9596 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) lt!8241 (zeroValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))))

(declare-fun lt!9599 () (_ BitVec 64))

(assert (=> b!24918 (= lt!9599 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9585 () (_ BitVec 64))

(assert (=> b!24918 (= lt!9585 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000))))

(declare-fun lt!9590 () Unit!512)

(assert (=> b!24918 (= lt!9590 (addApplyDifferent!14 lt!9596 lt!9599 (zeroValue!1666 lt!8161) lt!9585))))

(assert (=> b!24918 (= (apply!29 (+!45 lt!9596 (tuple2!961 lt!9599 (zeroValue!1666 lt!8161))) lt!9585) (apply!29 lt!9596 lt!9585))))

(declare-fun lt!9595 () Unit!512)

(assert (=> b!24918 (= lt!9595 lt!9590)))

(declare-fun lt!9597 () ListLongMap!567)

(assert (=> b!24918 (= lt!9597 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) lt!8241 (zeroValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))))

(declare-fun lt!9592 () (_ BitVec 64))

(assert (=> b!24918 (= lt!9592 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!9584 () (_ BitVec 64))

(assert (=> b!24918 (= lt!9584 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000))))

(assert (=> b!24918 (= lt!9586 (addApplyDifferent!14 lt!9597 lt!9592 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) lt!9584))))

(assert (=> b!24918 (= (apply!29 (+!45 lt!9597 (tuple2!961 lt!9592 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) lt!9584) (apply!29 lt!9597 lt!9584))))

(declare-fun call!2219 () ListLongMap!567)

(declare-fun bm!2214 () Bool)

(assert (=> bm!2214 (= call!2219 (getCurrentListMapNoExtraKeys!15 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) lt!8241 (zeroValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))))

(declare-fun b!24919 () Bool)

(declare-fun res!15104 () Bool)

(declare-fun e!16105 () Bool)

(assert (=> b!24919 (=> (not res!15104) (not e!16105))))

(declare-fun e!16101 () Bool)

(assert (=> b!24919 (= res!15104 e!16101)))

(declare-fun c!3421 () Bool)

(assert (=> b!24919 (= c!3421 (not (= (bvand lt!8241 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!24920 () Bool)

(declare-fun e!16113 () Bool)

(assert (=> b!24920 (= e!16113 (not call!2218))))

(declare-fun b!24921 () Bool)

(assert (=> b!24921 (= e!16101 (not call!2216))))

(declare-fun bm!2215 () Bool)

(declare-fun call!2220 () ListLongMap!567)

(assert (=> bm!2215 (= call!2220 call!2219)))

(declare-fun b!24922 () Bool)

(declare-fun e!16111 () ListLongMap!567)

(declare-fun call!2221 () ListLongMap!567)

(assert (=> b!24922 (= e!16111 call!2221)))

(declare-fun b!24923 () Bool)

(declare-fun res!15107 () Bool)

(assert (=> b!24923 (=> (not res!15107) (not e!16105))))

(assert (=> b!24923 (= res!15107 e!16108)))

(declare-fun res!15102 () Bool)

(assert (=> b!24923 (=> res!15102 e!16108)))

(declare-fun e!16104 () Bool)

(assert (=> b!24923 (= res!15102 (not e!16104))))

(declare-fun res!15106 () Bool)

(assert (=> b!24923 (=> (not res!15106) (not e!16104))))

(assert (=> b!24923 (= res!15106 (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))))))

(declare-fun b!24925 () Bool)

(declare-fun e!16106 () ListLongMap!567)

(assert (=> b!24925 (= e!16106 call!2221)))

(declare-fun b!24926 () Bool)

(declare-fun e!16107 () Bool)

(assert (=> b!24926 (= e!16101 e!16107)))

(declare-fun res!15108 () Bool)

(assert (=> b!24926 (= res!15108 call!2216)))

(assert (=> b!24926 (=> (not res!15108) (not e!16107))))

(declare-fun b!24927 () Bool)

(assert (=> b!24927 (= e!16105 e!16113)))

(declare-fun c!3419 () Bool)

(assert (=> b!24927 (= c!3419 (not (= (bvand lt!8241 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!2216 () Bool)

(declare-fun call!2215 () ListLongMap!567)

(assert (=> bm!2216 (= call!2215 call!2220)))

(declare-fun b!24928 () Bool)

(assert (=> b!24928 (= e!16111 call!2215)))

(declare-fun e!16112 () Bool)

(declare-fun b!24929 () Bool)

(assert (=> b!24929 (= e!16112 (= (apply!29 lt!9601 #b1000000000000000000000000000000000000000000000000000000000000000) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))

(declare-fun b!24930 () Bool)

(declare-fun c!3422 () Bool)

(assert (=> b!24930 (= c!3422 (and (not (= (bvand lt!8241 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!8241 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!24930 (= e!16106 e!16111)))

(declare-fun b!24931 () Bool)

(assert (=> b!24931 (= e!16104 (validKeyInArray!0 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000)))))

(declare-fun bm!2217 () Bool)

(declare-fun call!2217 () ListLongMap!567)

(assert (=> bm!2217 (= call!2221 call!2217)))

(declare-fun b!24932 () Bool)

(assert (=> b!24932 (= e!16113 e!16112)))

(declare-fun res!15105 () Bool)

(assert (=> b!24932 (= res!15105 call!2218)))

(assert (=> b!24932 (=> (not res!15105) (not e!16112))))

(declare-fun c!3424 () Bool)

(declare-fun bm!2218 () Bool)

(declare-fun c!3420 () Bool)

(assert (=> bm!2218 (= call!2217 (+!45 (ite c!3420 call!2219 (ite c!3424 call!2220 call!2215)) (ite (or c!3420 c!3424) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 lt!8161)) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))))

(declare-fun b!24933 () Bool)

(assert (=> b!24933 (= e!16107 (= (apply!29 lt!9601 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!1666 lt!8161)))))

(declare-fun b!24934 () Bool)

(declare-fun e!16103 () ListLongMap!567)

(assert (=> b!24934 (= e!16103 e!16106)))

(assert (=> b!24934 (= c!3424 (and (not (= (bvand lt!8241 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!8241 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!24935 () Bool)

(declare-fun e!16110 () Bool)

(assert (=> b!24935 (= e!16110 (validKeyInArray!0 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000)))))

(declare-fun b!24924 () Bool)

(assert (=> b!24924 (= e!16103 (+!45 call!2217 (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))))))

(declare-fun d!4681 () Bool)

(assert (=> d!4681 e!16105))

(declare-fun res!15101 () Bool)

(assert (=> d!4681 (=> (not res!15101) (not e!16105))))

(assert (=> d!4681 (= res!15101 (or (bvsge #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))))))))

(declare-fun lt!9591 () ListLongMap!567)

(assert (=> d!4681 (= lt!9601 lt!9591)))

(declare-fun lt!9600 () Unit!512)

(assert (=> d!4681 (= lt!9600 e!16102)))

(declare-fun c!3423 () Bool)

(assert (=> d!4681 (= c!3423 e!16110)))

(declare-fun res!15103 () Bool)

(assert (=> d!4681 (=> (not res!15103) (not e!16110))))

(assert (=> d!4681 (= res!15103 (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))))))

(assert (=> d!4681 (= lt!9591 e!16103)))

(assert (=> d!4681 (= c!3420 (and (not (= (bvand lt!8241 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!8241 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!4681 (validMask!0 (mask!4730 lt!8161))))

(assert (=> d!4681 (= (getCurrentListMap!130 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) lt!8241 (zeroValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)) lt!9601)))

(declare-fun b!24936 () Bool)

(declare-fun Unit!590 () Unit!512)

(assert (=> b!24936 (= e!16102 Unit!590)))

(declare-fun b!24937 () Bool)

(assert (=> b!24937 (= e!16109 (= (apply!29 lt!9601 (select (arr!608 (_keys!3164 lt!8161)) #b00000000000000000000000000000000)) (get!390 (select (arr!607 (_values!1729 lt!8161)) #b00000000000000000000000000000000) (dynLambda!144 (defaultEntry!1743 lt!8161) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!24937 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!703 (_values!1729 lt!8161))))))

(assert (=> b!24937 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8161))))))

(assert (= (and d!4681 c!3420) b!24924))

(assert (= (and d!4681 (not c!3420)) b!24934))

(assert (= (and b!24934 c!3424) b!24925))

(assert (= (and b!24934 (not c!3424)) b!24930))

(assert (= (and b!24930 c!3422) b!24922))

(assert (= (and b!24930 (not c!3422)) b!24928))

(assert (= (or b!24922 b!24928) bm!2216))

(assert (= (or b!24925 bm!2216) bm!2215))

(assert (= (or b!24925 b!24922) bm!2217))

(assert (= (or b!24924 bm!2215) bm!2214))

(assert (= (or b!24924 bm!2217) bm!2218))

(assert (= (and d!4681 res!15103) b!24935))

(assert (= (and d!4681 c!3423) b!24918))

(assert (= (and d!4681 (not c!3423)) b!24936))

(assert (= (and d!4681 res!15101) b!24923))

(assert (= (and b!24923 res!15106) b!24931))

(assert (= (and b!24923 (not res!15102)) b!24917))

(assert (= (and b!24917 res!15109) b!24937))

(assert (= (and b!24923 res!15107) b!24919))

(assert (= (and b!24919 c!3421) b!24926))

(assert (= (and b!24919 (not c!3421)) b!24921))

(assert (= (and b!24926 res!15108) b!24933))

(assert (= (or b!24926 b!24921) bm!2212))

(assert (= (and b!24919 res!15104) b!24927))

(assert (= (and b!24927 c!3419) b!24932))

(assert (= (and b!24927 (not c!3419)) b!24920))

(assert (= (and b!24932 res!15105) b!24929))

(assert (= (or b!24932 b!24920) bm!2213))

(declare-fun b_lambda!1649 () Bool)

(assert (=> (not b_lambda!1649) (not b!24937)))

(assert (=> b!24937 t!3244))

(declare-fun b_and!1555 () Bool)

(assert (= b_and!1553 (and (=> t!3244 result!1101) b_and!1555)))

(declare-fun m!19943 () Bool)

(assert (=> bm!2214 m!19943))

(declare-fun m!19945 () Bool)

(assert (=> b!24933 m!19945))

(assert (=> b!24935 m!16936))

(assert (=> b!24935 m!16936))

(assert (=> b!24935 m!17202))

(assert (=> d!4681 m!17182))

(assert (=> b!24917 m!16936))

(assert (=> b!24917 m!16936))

(declare-fun m!19947 () Bool)

(assert (=> b!24917 m!19947))

(declare-fun m!19949 () Bool)

(assert (=> b!24918 m!19949))

(declare-fun m!19951 () Bool)

(assert (=> b!24918 m!19951))

(declare-fun m!19953 () Bool)

(assert (=> b!24918 m!19953))

(assert (=> b!24918 m!19951))

(declare-fun m!19955 () Bool)

(assert (=> b!24918 m!19955))

(declare-fun m!19957 () Bool)

(assert (=> b!24918 m!19957))

(declare-fun m!19959 () Bool)

(assert (=> b!24918 m!19959))

(declare-fun m!19961 () Bool)

(assert (=> b!24918 m!19961))

(declare-fun m!19963 () Bool)

(assert (=> b!24918 m!19963))

(declare-fun m!19965 () Bool)

(assert (=> b!24918 m!19965))

(declare-fun m!19967 () Bool)

(assert (=> b!24918 m!19967))

(assert (=> b!24918 m!19953))

(declare-fun m!19969 () Bool)

(assert (=> b!24918 m!19969))

(declare-fun m!19971 () Bool)

(assert (=> b!24918 m!19971))

(assert (=> b!24918 m!19959))

(declare-fun m!19973 () Bool)

(assert (=> b!24918 m!19973))

(assert (=> b!24918 m!16936))

(declare-fun m!19975 () Bool)

(assert (=> b!24918 m!19975))

(assert (=> b!24918 m!19943))

(declare-fun m!19977 () Bool)

(assert (=> b!24918 m!19977))

(assert (=> b!24918 m!19965))

(assert (=> b!24931 m!16936))

(assert (=> b!24931 m!16936))

(assert (=> b!24931 m!17202))

(assert (=> b!24937 m!17503))

(assert (=> b!24937 m!17503))

(assert (=> b!24937 m!17238))

(assert (=> b!24937 m!17505))

(assert (=> b!24937 m!17238))

(assert (=> b!24937 m!16936))

(declare-fun m!19979 () Bool)

(assert (=> b!24937 m!19979))

(assert (=> b!24937 m!16936))

(declare-fun m!19981 () Bool)

(assert (=> bm!2213 m!19981))

(declare-fun m!19983 () Bool)

(assert (=> bm!2212 m!19983))

(declare-fun m!19985 () Bool)

(assert (=> b!24924 m!19985))

(declare-fun m!19987 () Bool)

(assert (=> b!24929 m!19987))

(declare-fun m!19989 () Bool)

(assert (=> bm!2218 m!19989))

(assert (=> d!4109 d!4681))

(assert (=> d!4109 d!4239))

(declare-fun d!4683 () Bool)

(assert (=> d!4683 (= (+!45 (getCurrentListMap!130 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))))) (getCurrentListMap!130 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) lt!8241 (zeroValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))))

(assert (=> d!4683 true))

(declare-fun _$8!40 () Unit!512)

(assert (=> d!4683 (= (choose!209 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) lt!8241 (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (defaultEntry!1743 lt!8161)) _$8!40)))

(declare-fun bs!1031 () Bool)

(assert (= bs!1031 d!4683))

(assert (=> bs!1031 m!16790))

(assert (=> bs!1031 m!16790))

(assert (=> bs!1031 m!17593))

(assert (=> bs!1031 m!17597))

(assert (=> d!4109 d!4683))

(assert (=> d!4021 d!4145))

(declare-fun d!4685 () Bool)

(declare-fun res!15110 () Bool)

(declare-fun e!16114 () Bool)

(assert (=> d!4685 (=> res!15110 e!16114)))

(assert (=> d!4685 (= res!15110 (and ((_ is Cons!564) (toList!299 (getCurrentListMap!130 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))) (= (_1!489 (h!1130 (toList!299 (getCurrentListMap!130 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161))))) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!4685 (= (containsKey!25 (toList!299 (getCurrentListMap!130 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161))) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)) e!16114)))

(declare-fun b!24938 () Bool)

(declare-fun e!16115 () Bool)

(assert (=> b!24938 (= e!16114 e!16115)))

(declare-fun res!15111 () Bool)

(assert (=> b!24938 (=> (not res!15111) (not e!16115))))

(assert (=> b!24938 (= res!15111 (and (or (not ((_ is Cons!564) (toList!299 (getCurrentListMap!130 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161))))) (bvsle (_1!489 (h!1130 (toList!299 (getCurrentListMap!130 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161))))) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))) ((_ is Cons!564) (toList!299 (getCurrentListMap!130 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))) (bvslt (_1!489 (h!1130 (toList!299 (getCurrentListMap!130 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161))))) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!24939 () Bool)

(assert (=> b!24939 (= e!16115 (containsKey!25 (t!3239 (toList!299 (getCurrentListMap!130 (_keys!3164 lt!8161) (_values!1729 lt!8161) (mask!4730 lt!8161) (extraKeys!1641 lt!8161) (zeroValue!1666 lt!8161) (minValue!1666 lt!8161) #b00000000000000000000000000000000 (defaultEntry!1743 lt!8161)))) (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!4685 (not res!15110)) b!24938))

(assert (= (and b!24938 res!15111) b!24939))

(declare-fun m!19991 () Bool)

(assert (=> b!24939 m!19991))

(assert (=> d!4079 d!4685))

(declare-fun d!4687 () Bool)

(declare-fun res!15112 () Bool)

(declare-fun e!16116 () Bool)

(assert (=> d!4687 (=> (not res!15112) (not e!16116))))

(assert (=> d!4687 (= res!15112 (simpleValid!20 (_2!487 lt!8650)))))

(assert (=> d!4687 (= (valid!104 (_2!487 lt!8650)) e!16116)))

(declare-fun b!24940 () Bool)

(declare-fun res!15113 () Bool)

(assert (=> b!24940 (=> (not res!15113) (not e!16116))))

(assert (=> b!24940 (= res!15113 (= (arrayCountValidKeys!0 (_keys!3164 (_2!487 lt!8650)) #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8650)))) (_size!150 (_2!487 lt!8650))))))

(declare-fun b!24941 () Bool)

(declare-fun res!15114 () Bool)

(assert (=> b!24941 (=> (not res!15114) (not e!16116))))

(assert (=> b!24941 (= res!15114 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3164 (_2!487 lt!8650)) (mask!4730 (_2!487 lt!8650))))))

(declare-fun b!24942 () Bool)

(assert (=> b!24942 (= e!16116 (arrayNoDuplicates!0 (_keys!3164 (_2!487 lt!8650)) #b00000000000000000000000000000000 Nil!566))))

(assert (= (and d!4687 res!15112) b!24940))

(assert (= (and b!24940 res!15113) b!24941))

(assert (= (and b!24941 res!15114) b!24942))

(declare-fun m!19993 () Bool)

(assert (=> d!4687 m!19993))

(declare-fun m!19995 () Bool)

(assert (=> b!24940 m!19995))

(declare-fun m!19997 () Bool)

(assert (=> b!24941 m!19997))

(declare-fun m!19999 () Bool)

(assert (=> b!24942 m!19999))

(assert (=> b!23721 d!4687))

(declare-fun d!4689 () Bool)

(declare-fun e!16117 () Bool)

(assert (=> d!4689 e!16117))

(declare-fun res!15115 () Bool)

(assert (=> d!4689 (=> (not res!15115) (not e!16117))))

(declare-fun lt!9608 () ListLongMap!567)

(assert (=> d!4689 (= res!15115 (contains!230 lt!9608 (_1!489 (ite (or c!3034 c!3038) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (_2!487 lt!8158))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!487 lt!8158)))))))))

(declare-fun lt!9607 () List!568)

(assert (=> d!4689 (= lt!9608 (ListLongMap!568 lt!9607))))

(declare-fun lt!9606 () Unit!512)

(declare-fun lt!9609 () Unit!512)

(assert (=> d!4689 (= lt!9606 lt!9609)))

(assert (=> d!4689 (= (getValueByKey!61 lt!9607 (_1!489 (ite (or c!3034 c!3038) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (_2!487 lt!8158))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!487 lt!8158)))))) (Some!66 (_2!489 (ite (or c!3034 c!3038) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (_2!487 lt!8158))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!487 lt!8158)))))))))

(assert (=> d!4689 (= lt!9609 (lemmaContainsTupThenGetReturnValue!18 lt!9607 (_1!489 (ite (or c!3034 c!3038) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (_2!487 lt!8158))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!487 lt!8158))))) (_2!489 (ite (or c!3034 c!3038) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (_2!487 lt!8158))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!487 lt!8158)))))))))

(assert (=> d!4689 (= lt!9607 (insertStrictlySorted!18 (toList!299 (ite c!3034 call!1986 (ite c!3038 call!1987 call!1982))) (_1!489 (ite (or c!3034 c!3038) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (_2!487 lt!8158))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!487 lt!8158))))) (_2!489 (ite (or c!3034 c!3038) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (_2!487 lt!8158))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!487 lt!8158)))))))))

(assert (=> d!4689 (= (+!45 (ite c!3034 call!1986 (ite c!3038 call!1987 call!1982)) (ite (or c!3034 c!3038) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (_2!487 lt!8158))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!487 lt!8158))))) lt!9608)))

(declare-fun b!24943 () Bool)

(declare-fun res!15116 () Bool)

(assert (=> b!24943 (=> (not res!15116) (not e!16117))))

(assert (=> b!24943 (= res!15116 (= (getValueByKey!61 (toList!299 lt!9608) (_1!489 (ite (or c!3034 c!3038) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (_2!487 lt!8158))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!487 lt!8158)))))) (Some!66 (_2!489 (ite (or c!3034 c!3038) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (_2!487 lt!8158))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!487 lt!8158))))))))))

(declare-fun b!24944 () Bool)

(assert (=> b!24944 (= e!16117 (contains!232 (toList!299 lt!9608) (ite (or c!3034 c!3038) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (_2!487 lt!8158))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!487 lt!8158))))))))

(assert (= (and d!4689 res!15115) b!24943))

(assert (= (and b!24943 res!15116) b!24944))

(declare-fun m!20001 () Bool)

(assert (=> d!4689 m!20001))

(declare-fun m!20003 () Bool)

(assert (=> d!4689 m!20003))

(declare-fun m!20005 () Bool)

(assert (=> d!4689 m!20005))

(declare-fun m!20007 () Bool)

(assert (=> d!4689 m!20007))

(declare-fun m!20009 () Bool)

(assert (=> b!24943 m!20009))

(declare-fun m!20011 () Bool)

(assert (=> b!24944 m!20011))

(assert (=> bm!1985 d!4689))

(declare-fun d!4691 () Bool)

(declare-fun res!15117 () Bool)

(declare-fun e!16118 () Bool)

(assert (=> d!4691 (=> (not res!15117) (not e!16118))))

(assert (=> d!4691 (= res!15117 (simpleValid!20 (_2!487 lt!8769)))))

(assert (=> d!4691 (= (valid!104 (_2!487 lt!8769)) e!16118)))

(declare-fun b!24945 () Bool)

(declare-fun res!15118 () Bool)

(assert (=> b!24945 (=> (not res!15118) (not e!16118))))

(assert (=> b!24945 (= res!15118 (= (arrayCountValidKeys!0 (_keys!3164 (_2!487 lt!8769)) #b00000000000000000000000000000000 (size!704 (_keys!3164 (_2!487 lt!8769)))) (_size!150 (_2!487 lt!8769))))))

(declare-fun b!24946 () Bool)

(declare-fun res!15119 () Bool)

(assert (=> b!24946 (=> (not res!15119) (not e!16118))))

(assert (=> b!24946 (= res!15119 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3164 (_2!487 lt!8769)) (mask!4730 (_2!487 lt!8769))))))

(declare-fun b!24947 () Bool)

(assert (=> b!24947 (= e!16118 (arrayNoDuplicates!0 (_keys!3164 (_2!487 lt!8769)) #b00000000000000000000000000000000 Nil!566))))

(assert (= (and d!4691 res!15117) b!24945))

(assert (= (and b!24945 res!15118) b!24946))

(assert (= (and b!24946 res!15119) b!24947))

(declare-fun m!20013 () Bool)

(assert (=> d!4691 m!20013))

(declare-fun m!20015 () Bool)

(assert (=> b!24945 m!20015))

(declare-fun m!20017 () Bool)

(assert (=> b!24946 m!20017))

(declare-fun m!20019 () Bool)

(assert (=> b!24947 m!20019))

(assert (=> b!23819 d!4691))

(declare-fun d!4693 () Bool)

(declare-fun res!15120 () Bool)

(declare-fun e!16119 () Bool)

(assert (=> d!4693 (=> res!15120 e!16119)))

(assert (=> d!4693 (= res!15120 (and ((_ is Cons!564) (toList!299 e!15161)) (= (_1!489 (h!1130 (toList!299 e!15161))) (ite c!2996 #b1000000000000000000000000000000000000000000000000000000000000000 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) (index!2338 lt!8281))))))))

(assert (=> d!4693 (= (containsKey!25 (toList!299 e!15161) (ite c!2996 #b1000000000000000000000000000000000000000000000000000000000000000 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) (index!2338 lt!8281)))) e!16119)))

(declare-fun b!24948 () Bool)

(declare-fun e!16120 () Bool)

(assert (=> b!24948 (= e!16119 e!16120)))

(declare-fun res!15121 () Bool)

(assert (=> b!24948 (=> (not res!15121) (not e!16120))))

(assert (=> b!24948 (= res!15121 (and (or (not ((_ is Cons!564) (toList!299 e!15161))) (bvsle (_1!489 (h!1130 (toList!299 e!15161))) (ite c!2996 #b1000000000000000000000000000000000000000000000000000000000000000 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) (index!2338 lt!8281))))) ((_ is Cons!564) (toList!299 e!15161)) (bvslt (_1!489 (h!1130 (toList!299 e!15161))) (ite c!2996 #b1000000000000000000000000000000000000000000000000000000000000000 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) (index!2338 lt!8281))))))))

(declare-fun b!24949 () Bool)

(assert (=> b!24949 (= e!16120 (containsKey!25 (t!3239 (toList!299 e!15161)) (ite c!2996 #b1000000000000000000000000000000000000000000000000000000000000000 (select (arr!608 (_keys!3164 (_2!487 lt!8158))) (index!2338 lt!8281)))))))

(assert (= (and d!4693 (not res!15120)) b!24948))

(assert (= (and b!24948 res!15121) b!24949))

(declare-fun m!20021 () Bool)

(assert (=> b!24949 m!20021))

(assert (=> d!4067 d!4693))

(declare-fun d!4695 () Bool)

(declare-fun e!16121 () Bool)

(assert (=> d!4695 e!16121))

(declare-fun res!15122 () Bool)

(assert (=> d!4695 (=> (not res!15122) (not e!16121))))

(declare-fun lt!9612 () ListLongMap!567)

(assert (=> d!4695 (= res!15122 (contains!230 lt!9612 (_1!489 (ite (or c!3074 c!3078) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!2984 c!2983) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (zeroValue!1666 lt!8161))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161)))))))))

(declare-fun lt!9611 () List!568)

(assert (=> d!4695 (= lt!9612 (ListLongMap!568 lt!9611))))

(declare-fun lt!9610 () Unit!512)

(declare-fun lt!9613 () Unit!512)

(assert (=> d!4695 (= lt!9610 lt!9613)))

(assert (=> d!4695 (= (getValueByKey!61 lt!9611 (_1!489 (ite (or c!3074 c!3078) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!2984 c!2983) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (zeroValue!1666 lt!8161))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161)))))) (Some!66 (_2!489 (ite (or c!3074 c!3078) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!2984 c!2983) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (zeroValue!1666 lt!8161))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161)))))))))

(assert (=> d!4695 (= lt!9613 (lemmaContainsTupThenGetReturnValue!18 lt!9611 (_1!489 (ite (or c!3074 c!3078) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!2984 c!2983) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (zeroValue!1666 lt!8161))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161))))) (_2!489 (ite (or c!3074 c!3078) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!2984 c!2983) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (zeroValue!1666 lt!8161))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161)))))))))

(assert (=> d!4695 (= lt!9611 (insertStrictlySorted!18 (toList!299 (ite c!3074 call!2006 (ite c!3078 call!2007 call!2002))) (_1!489 (ite (or c!3074 c!3078) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!2984 c!2983) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (zeroValue!1666 lt!8161))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161))))) (_2!489 (ite (or c!3074 c!3078) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!2984 c!2983) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (zeroValue!1666 lt!8161))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161)))))))))

(assert (=> d!4695 (= (+!45 (ite c!3074 call!2006 (ite c!3078 call!2007 call!2002)) (ite (or c!3074 c!3078) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!2984 c!2983) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (zeroValue!1666 lt!8161))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161))))) lt!9612)))

(declare-fun b!24950 () Bool)

(declare-fun res!15123 () Bool)

(assert (=> b!24950 (=> (not res!15123) (not e!16121))))

(assert (=> b!24950 (= res!15123 (= (getValueByKey!61 (toList!299 lt!9612) (_1!489 (ite (or c!3074 c!3078) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!2984 c!2983) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (zeroValue!1666 lt!8161))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161)))))) (Some!66 (_2!489 (ite (or c!3074 c!3078) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!2984 c!2983) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (zeroValue!1666 lt!8161))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161))))))))))

(declare-fun b!24951 () Bool)

(assert (=> b!24951 (= e!16121 (contains!232 (toList!299 lt!9612) (ite (or c!3074 c!3078) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!2984 c!2983) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (zeroValue!1666 lt!8161))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!2984 (ite c!2983 (minValue!1666 lt!8161) (ite (or c!2932 c!2933) (zeroValue!1666 (v!1604 (underlying!116 thiss!938))) (minValue!1666 (v!1604 (underlying!116 thiss!938))))) (minValue!1666 lt!8161))))))))

(assert (= (and d!4695 res!15122) b!24950))

(assert (= (and b!24950 res!15123) b!24951))

(declare-fun m!20023 () Bool)

(assert (=> d!4695 m!20023))

(declare-fun m!20025 () Bool)

(assert (=> d!4695 m!20025))

(declare-fun m!20027 () Bool)

(assert (=> d!4695 m!20027))

(declare-fun m!20029 () Bool)

(assert (=> d!4695 m!20029))

(declare-fun m!20031 () Bool)

(assert (=> b!24950 m!20031))

(declare-fun m!20033 () Bool)

(assert (=> b!24951 m!20033))

(assert (=> bm!2005 d!4695))

(declare-fun d!4697 () Bool)

(declare-fun lt!9616 () Bool)

(declare-fun content!16 (List!569) (InoxSet (_ BitVec 64)))

(assert (=> d!4697 (= lt!9616 (select (content!16 lt!8352) (select (arr!608 lt!8338) lt!8351)))))

(declare-fun e!16126 () Bool)

(assert (=> d!4697 (= lt!9616 e!16126)))

(declare-fun res!15128 () Bool)

(assert (=> d!4697 (=> (not res!15128) (not e!16126))))

(assert (=> d!4697 (= res!15128 ((_ is Cons!565) lt!8352))))

(assert (=> d!4697 (= (contains!231 lt!8352 (select (arr!608 lt!8338) lt!8351)) lt!9616)))

(declare-fun b!24956 () Bool)

(declare-fun e!16127 () Bool)

(assert (=> b!24956 (= e!16126 e!16127)))

(declare-fun res!15129 () Bool)

(assert (=> b!24956 (=> res!15129 e!16127)))

(assert (=> b!24956 (= res!15129 (= (h!1131 lt!8352) (select (arr!608 lt!8338) lt!8351)))))

(declare-fun b!24957 () Bool)

(assert (=> b!24957 (= e!16127 (contains!231 (t!3240 lt!8352) (select (arr!608 lt!8338) lt!8351)))))

(assert (= (and d!4697 res!15128) b!24956))

(assert (= (and b!24956 (not res!15129)) b!24957))

(declare-fun m!20035 () Bool)

(assert (=> d!4697 m!20035))

(assert (=> d!4697 m!16968))

(declare-fun m!20037 () Bool)

(assert (=> d!4697 m!20037))

(assert (=> b!24957 m!16968))

(declare-fun m!20039 () Bool)

(assert (=> b!24957 m!20039))

(assert (=> b!23453 d!4697))

(declare-fun d!4699 () Bool)

(declare-fun e!16128 () Bool)

(assert (=> d!4699 e!16128))

(declare-fun res!15130 () Bool)

(assert (=> d!4699 (=> (not res!15130) (not e!16128))))

(declare-fun lt!9619 () ListLongMap!567)

(assert (=> d!4699 (= res!15130 (contains!230 lt!9619 (_1!489 (tuple2!961 lt!8497 (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158)))))))))

(declare-fun lt!9618 () List!568)

(assert (=> d!4699 (= lt!9619 (ListLongMap!568 lt!9618))))

(declare-fun lt!9617 () Unit!512)

(declare-fun lt!9620 () Unit!512)

(assert (=> d!4699 (= lt!9617 lt!9620)))

(assert (=> d!4699 (= (getValueByKey!61 lt!9618 (_1!489 (tuple2!961 lt!8497 (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158)))))) (Some!66 (_2!489 (tuple2!961 lt!8497 (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158)))))))))

(assert (=> d!4699 (= lt!9620 (lemmaContainsTupThenGetReturnValue!18 lt!9618 (_1!489 (tuple2!961 lt!8497 (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158))))) (_2!489 (tuple2!961 lt!8497 (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158)))))))))

(assert (=> d!4699 (= lt!9618 (insertStrictlySorted!18 (toList!299 lt!8502) (_1!489 (tuple2!961 lt!8497 (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158))))) (_2!489 (tuple2!961 lt!8497 (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158)))))))))

(assert (=> d!4699 (= (+!45 lt!8502 (tuple2!961 lt!8497 (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158))))) lt!9619)))

(declare-fun b!24958 () Bool)

(declare-fun res!15131 () Bool)

(assert (=> b!24958 (=> (not res!15131) (not e!16128))))

(assert (=> b!24958 (= res!15131 (= (getValueByKey!61 (toList!299 lt!9619) (_1!489 (tuple2!961 lt!8497 (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158)))))) (Some!66 (_2!489 (tuple2!961 lt!8497 (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158))))))))))

(declare-fun b!24959 () Bool)

(assert (=> b!24959 (= e!16128 (contains!232 (toList!299 lt!9619) (tuple2!961 lt!8497 (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158))))))))

(assert (= (and d!4699 res!15130) b!24958))

(assert (= (and b!24958 res!15131) b!24959))

(declare-fun m!20041 () Bool)

(assert (=> d!4699 m!20041))

(declare-fun m!20043 () Bool)

(assert (=> d!4699 m!20043))

(declare-fun m!20045 () Bool)

(assert (=> d!4699 m!20045))

(declare-fun m!20047 () Bool)

(assert (=> d!4699 m!20047))

(declare-fun m!20049 () Bool)

(assert (=> b!24958 m!20049))

(declare-fun m!20051 () Bool)

(assert (=> b!24959 m!20051))

(assert (=> b!23585 d!4699))

(declare-fun d!4701 () Bool)

(assert (=> d!4701 (= (apply!29 (+!45 lt!8501 (tuple2!961 lt!8504 (ite (and c!2998 c!2997) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 (_2!487 lt!8158))))) lt!8490) (apply!29 lt!8501 lt!8490))))

(declare-fun lt!9621 () Unit!512)

(assert (=> d!4701 (= lt!9621 (choose!210 lt!8501 lt!8504 (ite (and c!2998 c!2997) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 (_2!487 lt!8158))) lt!8490))))

(declare-fun e!16129 () Bool)

(assert (=> d!4701 e!16129))

(declare-fun res!15132 () Bool)

(assert (=> d!4701 (=> (not res!15132) (not e!16129))))

(assert (=> d!4701 (= res!15132 (contains!230 lt!8501 lt!8490))))

(assert (=> d!4701 (= (addApplyDifferent!14 lt!8501 lt!8504 (ite (and c!2998 c!2997) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 (_2!487 lt!8158))) lt!8490) lt!9621)))

(declare-fun b!24960 () Bool)

(assert (=> b!24960 (= e!16129 (not (= lt!8490 lt!8504)))))

(assert (= (and d!4701 res!15132) b!24960))

(assert (=> d!4701 m!17096))

(assert (=> d!4701 m!17100))

(assert (=> d!4701 m!17096))

(declare-fun m!20053 () Bool)

(assert (=> d!4701 m!20053))

(declare-fun m!20055 () Bool)

(assert (=> d!4701 m!20055))

(assert (=> d!4701 m!17120))

(assert (=> b!23585 d!4701))

(declare-fun d!4703 () Bool)

(assert (=> d!4703 (= (apply!29 (+!45 lt!8494 (tuple2!961 lt!8509 (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158))))) lt!8508) (get!391 (getValueByKey!61 (toList!299 (+!45 lt!8494 (tuple2!961 lt!8509 (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158)))))) lt!8508)))))

(declare-fun bs!1032 () Bool)

(assert (= bs!1032 d!4703))

(declare-fun m!20057 () Bool)

(assert (=> bs!1032 m!20057))

(assert (=> bs!1032 m!20057))

(declare-fun m!20059 () Bool)

(assert (=> bs!1032 m!20059))

(assert (=> b!23585 d!4703))

(declare-fun d!4705 () Bool)

(assert (=> d!4705 (= (apply!29 (+!45 lt!8502 (tuple2!961 lt!8497 (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158))))) lt!8489) (apply!29 lt!8502 lt!8489))))

(declare-fun lt!9622 () Unit!512)

(assert (=> d!4705 (= lt!9622 (choose!210 lt!8502 lt!8497 (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158))) lt!8489))))

(declare-fun e!16130 () Bool)

(assert (=> d!4705 e!16130))

(declare-fun res!15133 () Bool)

(assert (=> d!4705 (=> (not res!15133) (not e!16130))))

(assert (=> d!4705 (= res!15133 (contains!230 lt!8502 lt!8489))))

(assert (=> d!4705 (= (addApplyDifferent!14 lt!8502 lt!8497 (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158))) lt!8489) lt!9622)))

(declare-fun b!24961 () Bool)

(assert (=> b!24961 (= e!16130 (not (= lt!8489 lt!8497)))))

(assert (= (and d!4705 res!15133) b!24961))

(assert (=> d!4705 m!17110))

(assert (=> d!4705 m!17112))

(assert (=> d!4705 m!17110))

(declare-fun m!20061 () Bool)

(assert (=> d!4705 m!20061))

(declare-fun m!20063 () Bool)

(assert (=> d!4705 m!20063))

(assert (=> d!4705 m!17094))

(assert (=> b!23585 d!4705))

(declare-fun d!4707 () Bool)

(assert (=> d!4707 (contains!230 (+!45 lt!8503 (tuple2!961 lt!8498 (ite (and c!2998 c!2997) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 (_2!487 lt!8158))))) lt!8507)))

(declare-fun lt!9623 () Unit!512)

(assert (=> d!4707 (= lt!9623 (choose!211 lt!8503 lt!8498 (ite (and c!2998 c!2997) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 (_2!487 lt!8158))) lt!8507))))

(assert (=> d!4707 (contains!230 lt!8503 lt!8507)))

(assert (=> d!4707 (= (addStillContains!14 lt!8503 lt!8498 (ite (and c!2998 c!2997) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 (_2!487 lt!8158))) lt!8507) lt!9623)))

(declare-fun bs!1033 () Bool)

(assert (= bs!1033 d!4707))

(assert (=> bs!1033 m!17104))

(assert (=> bs!1033 m!17104))

(assert (=> bs!1033 m!17106))

(declare-fun m!20065 () Bool)

(assert (=> bs!1033 m!20065))

(declare-fun m!20067 () Bool)

(assert (=> bs!1033 m!20067))

(assert (=> b!23585 d!4707))

(assert (=> b!23585 d!4665))

(declare-fun d!4709 () Bool)

(assert (=> d!4709 (= (apply!29 lt!8501 lt!8490) (get!391 (getValueByKey!61 (toList!299 lt!8501) lt!8490)))))

(declare-fun bs!1034 () Bool)

(assert (= bs!1034 d!4709))

(declare-fun m!20069 () Bool)

(assert (=> bs!1034 m!20069))

(assert (=> bs!1034 m!20069))

(declare-fun m!20071 () Bool)

(assert (=> bs!1034 m!20071))

(assert (=> b!23585 d!4709))

(declare-fun d!4711 () Bool)

(assert (=> d!4711 (= (apply!29 lt!8502 lt!8489) (get!391 (getValueByKey!61 (toList!299 lt!8502) lt!8489)))))

(declare-fun bs!1035 () Bool)

(assert (= bs!1035 d!4711))

(declare-fun m!20073 () Bool)

(assert (=> bs!1035 m!20073))

(assert (=> bs!1035 m!20073))

(declare-fun m!20075 () Bool)

(assert (=> bs!1035 m!20075))

(assert (=> b!23585 d!4711))

(declare-fun d!4713 () Bool)

(assert (=> d!4713 (= (apply!29 (+!45 lt!8502 (tuple2!961 lt!8497 (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158))))) lt!8489) (get!391 (getValueByKey!61 (toList!299 (+!45 lt!8502 (tuple2!961 lt!8497 (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158)))))) lt!8489)))))

(declare-fun bs!1036 () Bool)

(assert (= bs!1036 d!4713))

(declare-fun m!20077 () Bool)

(assert (=> bs!1036 m!20077))

(assert (=> bs!1036 m!20077))

(declare-fun m!20079 () Bool)

(assert (=> bs!1036 m!20079))

(assert (=> b!23585 d!4713))

(declare-fun d!4715 () Bool)

(assert (=> d!4715 (= (apply!29 lt!8494 lt!8508) (get!391 (getValueByKey!61 (toList!299 lt!8494) lt!8508)))))

(declare-fun bs!1037 () Bool)

(assert (= bs!1037 d!4715))

(declare-fun m!20081 () Bool)

(assert (=> bs!1037 m!20081))

(assert (=> bs!1037 m!20081))

(declare-fun m!20083 () Bool)

(assert (=> bs!1037 m!20083))

(assert (=> b!23585 d!4715))

(declare-fun d!4717 () Bool)

(declare-fun e!16131 () Bool)

(assert (=> d!4717 e!16131))

(declare-fun res!15134 () Bool)

(assert (=> d!4717 (=> (not res!15134) (not e!16131))))

(declare-fun lt!9626 () ListLongMap!567)

(assert (=> d!4717 (= res!15134 (contains!230 lt!9626 (_1!489 (tuple2!961 lt!8509 (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158)))))))))

(declare-fun lt!9625 () List!568)

(assert (=> d!4717 (= lt!9626 (ListLongMap!568 lt!9625))))

(declare-fun lt!9624 () Unit!512)

(declare-fun lt!9627 () Unit!512)

(assert (=> d!4717 (= lt!9624 lt!9627)))

(assert (=> d!4717 (= (getValueByKey!61 lt!9625 (_1!489 (tuple2!961 lt!8509 (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158)))))) (Some!66 (_2!489 (tuple2!961 lt!8509 (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158)))))))))

(assert (=> d!4717 (= lt!9627 (lemmaContainsTupThenGetReturnValue!18 lt!9625 (_1!489 (tuple2!961 lt!8509 (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158))))) (_2!489 (tuple2!961 lt!8509 (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158)))))))))

(assert (=> d!4717 (= lt!9625 (insertStrictlySorted!18 (toList!299 lt!8494) (_1!489 (tuple2!961 lt!8509 (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158))))) (_2!489 (tuple2!961 lt!8509 (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158)))))))))

(assert (=> d!4717 (= (+!45 lt!8494 (tuple2!961 lt!8509 (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158))))) lt!9626)))

(declare-fun b!24962 () Bool)

(declare-fun res!15135 () Bool)

(assert (=> b!24962 (=> (not res!15135) (not e!16131))))

(assert (=> b!24962 (= res!15135 (= (getValueByKey!61 (toList!299 lt!9626) (_1!489 (tuple2!961 lt!8509 (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158)))))) (Some!66 (_2!489 (tuple2!961 lt!8509 (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158))))))))))

(declare-fun b!24963 () Bool)

(assert (=> b!24963 (= e!16131 (contains!232 (toList!299 lt!9626) (tuple2!961 lt!8509 (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158))))))))

(assert (= (and d!4717 res!15134) b!24962))

(assert (= (and b!24962 res!15135) b!24963))

(declare-fun m!20085 () Bool)

(assert (=> d!4717 m!20085))

(declare-fun m!20087 () Bool)

(assert (=> d!4717 m!20087))

(declare-fun m!20089 () Bool)

(assert (=> d!4717 m!20089))

(declare-fun m!20091 () Bool)

(assert (=> d!4717 m!20091))

(declare-fun m!20093 () Bool)

(assert (=> b!24962 m!20093))

(declare-fun m!20095 () Bool)

(assert (=> b!24963 m!20095))

(assert (=> b!23585 d!4717))

(declare-fun d!4719 () Bool)

(assert (=> d!4719 (= (apply!29 (+!45 lt!8494 (tuple2!961 lt!8509 (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158))))) lt!8508) (apply!29 lt!8494 lt!8508))))

(declare-fun lt!9628 () Unit!512)

(assert (=> d!4719 (= lt!9628 (choose!210 lt!8494 lt!8509 (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158))) lt!8508))))

(declare-fun e!16132 () Bool)

(assert (=> d!4719 e!16132))

(declare-fun res!15136 () Bool)

(assert (=> d!4719 (=> (not res!15136) (not e!16132))))

(assert (=> d!4719 (= res!15136 (contains!230 lt!8494 lt!8508))))

(assert (=> d!4719 (= (addApplyDifferent!14 lt!8494 lt!8509 (ite c!2998 (ite c!2997 (minValue!1666 (_2!487 lt!8158)) (minValue!1666 (v!1604 (underlying!116 thiss!938)))) (minValue!1666 (_2!487 lt!8158))) lt!8508) lt!9628)))

(declare-fun b!24964 () Bool)

(assert (=> b!24964 (= e!16132 (not (= lt!8508 lt!8509)))))

(assert (= (and d!4719 res!15136) b!24964))

(assert (=> d!4719 m!17098))

(assert (=> d!4719 m!17114))

(assert (=> d!4719 m!17098))

(declare-fun m!20097 () Bool)

(assert (=> d!4719 m!20097))

(declare-fun m!20099 () Bool)

(assert (=> d!4719 m!20099))

(assert (=> d!4719 m!17116))

(assert (=> b!23585 d!4719))

(declare-fun d!4721 () Bool)

(assert (=> d!4721 (= (apply!29 (+!45 lt!8501 (tuple2!961 lt!8504 (ite (and c!2998 c!2997) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 (_2!487 lt!8158))))) lt!8490) (get!391 (getValueByKey!61 (toList!299 (+!45 lt!8501 (tuple2!961 lt!8504 (ite (and c!2998 c!2997) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 (_2!487 lt!8158)))))) lt!8490)))))

(declare-fun bs!1038 () Bool)

(assert (= bs!1038 d!4721))

(declare-fun m!20101 () Bool)

(assert (=> bs!1038 m!20101))

(assert (=> bs!1038 m!20101))

(declare-fun m!20103 () Bool)

(assert (=> bs!1038 m!20103))

(assert (=> b!23585 d!4721))

(declare-fun d!4723 () Bool)

(declare-fun e!16133 () Bool)

(assert (=> d!4723 e!16133))

(declare-fun res!15137 () Bool)

(assert (=> d!4723 (=> (not res!15137) (not e!16133))))

(declare-fun lt!9631 () ListLongMap!567)

(assert (=> d!4723 (= res!15137 (contains!230 lt!9631 (_1!489 (tuple2!961 lt!8504 (ite (and c!2998 c!2997) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 (_2!487 lt!8158)))))))))

(declare-fun lt!9630 () List!568)

(assert (=> d!4723 (= lt!9631 (ListLongMap!568 lt!9630))))

(declare-fun lt!9629 () Unit!512)

(declare-fun lt!9632 () Unit!512)

(assert (=> d!4723 (= lt!9629 lt!9632)))

(assert (=> d!4723 (= (getValueByKey!61 lt!9630 (_1!489 (tuple2!961 lt!8504 (ite (and c!2998 c!2997) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 (_2!487 lt!8158)))))) (Some!66 (_2!489 (tuple2!961 lt!8504 (ite (and c!2998 c!2997) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 (_2!487 lt!8158)))))))))

(assert (=> d!4723 (= lt!9632 (lemmaContainsTupThenGetReturnValue!18 lt!9630 (_1!489 (tuple2!961 lt!8504 (ite (and c!2998 c!2997) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 (_2!487 lt!8158))))) (_2!489 (tuple2!961 lt!8504 (ite (and c!2998 c!2997) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 (_2!487 lt!8158)))))))))

(assert (=> d!4723 (= lt!9630 (insertStrictlySorted!18 (toList!299 lt!8501) (_1!489 (tuple2!961 lt!8504 (ite (and c!2998 c!2997) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 (_2!487 lt!8158))))) (_2!489 (tuple2!961 lt!8504 (ite (and c!2998 c!2997) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 (_2!487 lt!8158)))))))))

(assert (=> d!4723 (= (+!45 lt!8501 (tuple2!961 lt!8504 (ite (and c!2998 c!2997) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 (_2!487 lt!8158))))) lt!9631)))

(declare-fun b!24965 () Bool)

(declare-fun res!15138 () Bool)

(assert (=> b!24965 (=> (not res!15138) (not e!16133))))

(assert (=> b!24965 (= res!15138 (= (getValueByKey!61 (toList!299 lt!9631) (_1!489 (tuple2!961 lt!8504 (ite (and c!2998 c!2997) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 (_2!487 lt!8158)))))) (Some!66 (_2!489 (tuple2!961 lt!8504 (ite (and c!2998 c!2997) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 (_2!487 lt!8158))))))))))

(declare-fun b!24966 () Bool)

(assert (=> b!24966 (= e!16133 (contains!232 (toList!299 lt!9631) (tuple2!961 lt!8504 (ite (and c!2998 c!2997) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 (_2!487 lt!8158))))))))

(assert (= (and d!4723 res!15137) b!24965))

(assert (= (and b!24965 res!15138) b!24966))

(declare-fun m!20105 () Bool)

(assert (=> d!4723 m!20105))

(declare-fun m!20107 () Bool)

(assert (=> d!4723 m!20107))

(declare-fun m!20109 () Bool)

(assert (=> d!4723 m!20109))

(declare-fun m!20111 () Bool)

(assert (=> d!4723 m!20111))

(declare-fun m!20113 () Bool)

(assert (=> b!24965 m!20113))

(declare-fun m!20115 () Bool)

(assert (=> b!24966 m!20115))

(assert (=> b!23585 d!4723))

(declare-fun d!4725 () Bool)

(declare-fun e!16134 () Bool)

(assert (=> d!4725 e!16134))

(declare-fun res!15139 () Bool)

(assert (=> d!4725 (=> res!15139 e!16134)))

(declare-fun lt!9633 () Bool)

(assert (=> d!4725 (= res!15139 (not lt!9633))))

(declare-fun lt!9634 () Bool)

(assert (=> d!4725 (= lt!9633 lt!9634)))

(declare-fun lt!9635 () Unit!512)

(declare-fun e!16135 () Unit!512)

(assert (=> d!4725 (= lt!9635 e!16135)))

(declare-fun c!3425 () Bool)

(assert (=> d!4725 (= c!3425 lt!9634)))

(assert (=> d!4725 (= lt!9634 (containsKey!25 (toList!299 (+!45 lt!8503 (tuple2!961 lt!8498 (ite (and c!2998 c!2997) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 (_2!487 lt!8158)))))) lt!8507))))

(assert (=> d!4725 (= (contains!230 (+!45 lt!8503 (tuple2!961 lt!8498 (ite (and c!2998 c!2997) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 (_2!487 lt!8158))))) lt!8507) lt!9633)))

(declare-fun b!24967 () Bool)

(declare-fun lt!9636 () Unit!512)

(assert (=> b!24967 (= e!16135 lt!9636)))

(assert (=> b!24967 (= lt!9636 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!299 (+!45 lt!8503 (tuple2!961 lt!8498 (ite (and c!2998 c!2997) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 (_2!487 lt!8158)))))) lt!8507))))

(assert (=> b!24967 (isDefined!23 (getValueByKey!61 (toList!299 (+!45 lt!8503 (tuple2!961 lt!8498 (ite (and c!2998 c!2997) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 (_2!487 lt!8158)))))) lt!8507))))

(declare-fun b!24968 () Bool)

(declare-fun Unit!591 () Unit!512)

(assert (=> b!24968 (= e!16135 Unit!591)))

(declare-fun b!24969 () Bool)

(assert (=> b!24969 (= e!16134 (isDefined!23 (getValueByKey!61 (toList!299 (+!45 lt!8503 (tuple2!961 lt!8498 (ite (and c!2998 c!2997) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 (_2!487 lt!8158)))))) lt!8507)))))

(assert (= (and d!4725 c!3425) b!24967))

(assert (= (and d!4725 (not c!3425)) b!24968))

(assert (= (and d!4725 (not res!15139)) b!24969))

(declare-fun m!20117 () Bool)

(assert (=> d!4725 m!20117))

(declare-fun m!20119 () Bool)

(assert (=> b!24967 m!20119))

(declare-fun m!20121 () Bool)

(assert (=> b!24967 m!20121))

(assert (=> b!24967 m!20121))

(declare-fun m!20123 () Bool)

(assert (=> b!24967 m!20123))

(assert (=> b!24969 m!20121))

(assert (=> b!24969 m!20121))

(assert (=> b!24969 m!20123))

(assert (=> b!23585 d!4725))

(declare-fun d!4727 () Bool)

(declare-fun e!16136 () Bool)

(assert (=> d!4727 e!16136))

(declare-fun res!15140 () Bool)

(assert (=> d!4727 (=> (not res!15140) (not e!16136))))

(declare-fun lt!9639 () ListLongMap!567)

(assert (=> d!4727 (= res!15140 (contains!230 lt!9639 (_1!489 (tuple2!961 lt!8498 (ite (and c!2998 c!2997) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 (_2!487 lt!8158)))))))))

(declare-fun lt!9638 () List!568)

(assert (=> d!4727 (= lt!9639 (ListLongMap!568 lt!9638))))

(declare-fun lt!9637 () Unit!512)

(declare-fun lt!9640 () Unit!512)

(assert (=> d!4727 (= lt!9637 lt!9640)))

(assert (=> d!4727 (= (getValueByKey!61 lt!9638 (_1!489 (tuple2!961 lt!8498 (ite (and c!2998 c!2997) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 (_2!487 lt!8158)))))) (Some!66 (_2!489 (tuple2!961 lt!8498 (ite (and c!2998 c!2997) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 (_2!487 lt!8158)))))))))

(assert (=> d!4727 (= lt!9640 (lemmaContainsTupThenGetReturnValue!18 lt!9638 (_1!489 (tuple2!961 lt!8498 (ite (and c!2998 c!2997) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 (_2!487 lt!8158))))) (_2!489 (tuple2!961 lt!8498 (ite (and c!2998 c!2997) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 (_2!487 lt!8158)))))))))

(assert (=> d!4727 (= lt!9638 (insertStrictlySorted!18 (toList!299 lt!8503) (_1!489 (tuple2!961 lt!8498 (ite (and c!2998 c!2997) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 (_2!487 lt!8158))))) (_2!489 (tuple2!961 lt!8498 (ite (and c!2998 c!2997) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 (_2!487 lt!8158)))))))))

(assert (=> d!4727 (= (+!45 lt!8503 (tuple2!961 lt!8498 (ite (and c!2998 c!2997) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 (_2!487 lt!8158))))) lt!9639)))

(declare-fun b!24970 () Bool)

(declare-fun res!15141 () Bool)

(assert (=> b!24970 (=> (not res!15141) (not e!16136))))

(assert (=> b!24970 (= res!15141 (= (getValueByKey!61 (toList!299 lt!9639) (_1!489 (tuple2!961 lt!8498 (ite (and c!2998 c!2997) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 (_2!487 lt!8158)))))) (Some!66 (_2!489 (tuple2!961 lt!8498 (ite (and c!2998 c!2997) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 (_2!487 lt!8158))))))))))

(declare-fun b!24971 () Bool)

(assert (=> b!24971 (= e!16136 (contains!232 (toList!299 lt!9639) (tuple2!961 lt!8498 (ite (and c!2998 c!2997) (minValue!1666 (v!1604 (underlying!116 thiss!938))) (zeroValue!1666 (_2!487 lt!8158))))))))

(assert (= (and d!4727 res!15140) b!24970))

(assert (= (and b!24970 res!15141) b!24971))

(declare-fun m!20125 () Bool)

(assert (=> d!4727 m!20125))

(declare-fun m!20127 () Bool)

(assert (=> d!4727 m!20127))

(declare-fun m!20129 () Bool)

(assert (=> d!4727 m!20129))

(declare-fun m!20131 () Bool)

(assert (=> d!4727 m!20131))

(declare-fun m!20133 () Bool)

(assert (=> b!24970 m!20133))

(declare-fun m!20135 () Bool)

(assert (=> b!24971 m!20135))

(assert (=> b!23585 d!4727))

(declare-fun d!4729 () Bool)

(declare-fun lt!9641 () Bool)

(assert (=> d!4729 (= lt!9641 (select (content!15 (toList!299 lt!8757)) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))

(declare-fun e!16137 () Bool)

(assert (=> d!4729 (= lt!9641 e!16137)))

(declare-fun res!15143 () Bool)

(assert (=> d!4729 (=> (not res!15143) (not e!16137))))

(assert (=> d!4729 (= res!15143 ((_ is Cons!564) (toList!299 lt!8757)))))

(assert (=> d!4729 (= (contains!232 (toList!299 lt!8757) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))) lt!9641)))

(declare-fun b!24972 () Bool)

(declare-fun e!16138 () Bool)

(assert (=> b!24972 (= e!16137 e!16138)))

(declare-fun res!15142 () Bool)

(assert (=> b!24972 (=> res!15142 e!16138)))

(assert (=> b!24972 (= res!15142 (= (h!1130 (toList!299 lt!8757)) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))

(declare-fun b!24973 () Bool)

(assert (=> b!24973 (= e!16138 (contains!232 (t!3239 (toList!299 lt!8757)) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (v!1604 (underlying!116 thiss!938))))))))

(assert (= (and d!4729 res!15143) b!24972))

(assert (= (and b!24972 (not res!15142)) b!24973))

(declare-fun m!20137 () Bool)

(assert (=> d!4729 m!20137))

(declare-fun m!20139 () Bool)

(assert (=> d!4729 m!20139))

(declare-fun m!20141 () Bool)

(assert (=> b!24973 m!20141))

(assert (=> b!23815 d!4729))

(declare-fun b!24974 () Bool)

(declare-fun e!16139 () Bool)

(declare-fun e!16140 () Bool)

(assert (=> b!24974 (= e!16139 e!16140)))

(declare-fun c!3426 () Bool)

(assert (=> b!24974 (= c!3426 (validKeyInArray!0 (select (arr!608 (_keys!3164 lt!8345)) #b00000000000000000000000000000000)))))

(declare-fun d!4731 () Bool)

(declare-fun res!15144 () Bool)

(assert (=> d!4731 (=> res!15144 e!16139)))

(assert (=> d!4731 (= res!15144 (bvsge #b00000000000000000000000000000000 (size!704 (_keys!3164 lt!8345))))))

(assert (=> d!4731 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3164 lt!8345) (mask!4730 lt!8345)) e!16139)))

(declare-fun b!24975 () Bool)

(declare-fun e!16141 () Bool)

(declare-fun call!2222 () Bool)

(assert (=> b!24975 (= e!16141 call!2222)))

(declare-fun bm!2219 () Bool)

(assert (=> bm!2219 (= call!2222 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3164 lt!8345) (mask!4730 lt!8345)))))

(declare-fun b!24976 () Bool)

(assert (=> b!24976 (= e!16140 call!2222)))

(declare-fun b!24977 () Bool)

(assert (=> b!24977 (= e!16140 e!16141)))

(declare-fun lt!9642 () (_ BitVec 64))

(assert (=> b!24977 (= lt!9642 (select (arr!608 (_keys!3164 lt!8345)) #b00000000000000000000000000000000))))

(declare-fun lt!9644 () Unit!512)

(assert (=> b!24977 (= lt!9644 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3164 lt!8345) lt!9642 #b00000000000000000000000000000000))))

(assert (=> b!24977 (arrayContainsKey!0 (_keys!3164 lt!8345) lt!9642 #b00000000000000000000000000000000)))

(declare-fun lt!9643 () Unit!512)

(assert (=> b!24977 (= lt!9643 lt!9644)))

(declare-fun res!15145 () Bool)

(assert (=> b!24977 (= res!15145 (= (seekEntryOrOpen!0 (select (arr!608 (_keys!3164 lt!8345)) #b00000000000000000000000000000000) (_keys!3164 lt!8345) (mask!4730 lt!8345)) (Found!54 #b00000000000000000000000000000000)))))

(assert (=> b!24977 (=> (not res!15145) (not e!16141))))

(assert (= (and d!4731 (not res!15144)) b!24974))

(assert (= (and b!24974 c!3426) b!24977))

(assert (= (and b!24974 (not c!3426)) b!24976))

(assert (= (and b!24977 res!15145) b!24975))

(assert (= (or b!24975 b!24976) bm!2219))

(assert (=> b!24974 m!17787))

(assert (=> b!24974 m!17787))

(assert (=> b!24974 m!17789))

(declare-fun m!20143 () Bool)

(assert (=> bm!2219 m!20143))

(assert (=> b!24977 m!17787))

(declare-fun m!20145 () Bool)

(assert (=> b!24977 m!20145))

(declare-fun m!20147 () Bool)

(assert (=> b!24977 m!20147))

(assert (=> b!24977 m!17787))

(declare-fun m!20149 () Bool)

(assert (=> b!24977 m!20149))

(assert (=> b!23438 d!4731))

(declare-fun d!4733 () Bool)

(declare-fun res!15146 () Bool)

(declare-fun e!16142 () Bool)

(assert (=> d!4733 (=> res!15146 e!16142)))

(assert (=> d!4733 (= res!15146 (and ((_ is Cons!564) (toList!299 e!15139)) (= (_1!489 (h!1130 (toList!299 e!15139))) (ite c!2982 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (select (arr!608 (_keys!3164 lt!8161)) (index!2338 lt!8254))))))))

(assert (=> d!4733 (= (containsKey!25 (toList!299 e!15139) (ite c!2982 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (select (arr!608 (_keys!3164 lt!8161)) (index!2338 lt!8254)))) e!16142)))

(declare-fun b!24978 () Bool)

(declare-fun e!16143 () Bool)

(assert (=> b!24978 (= e!16142 e!16143)))

(declare-fun res!15147 () Bool)

(assert (=> b!24978 (=> (not res!15147) (not e!16143))))

(assert (=> b!24978 (= res!15147 (and (or (not ((_ is Cons!564) (toList!299 e!15139))) (bvsle (_1!489 (h!1130 (toList!299 e!15139))) (ite c!2982 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (select (arr!608 (_keys!3164 lt!8161)) (index!2338 lt!8254))))) ((_ is Cons!564) (toList!299 e!15139)) (bvslt (_1!489 (h!1130 (toList!299 e!15139))) (ite c!2982 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (select (arr!608 (_keys!3164 lt!8161)) (index!2338 lt!8254))))))))

(declare-fun b!24979 () Bool)

(assert (=> b!24979 (= e!16143 (containsKey!25 (t!3239 (toList!299 e!15139)) (ite c!2982 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (select (arr!608 (_keys!3164 lt!8161)) (index!2338 lt!8254)))))))

(assert (= (and d!4733 (not res!15146)) b!24978))

(assert (= (and b!24978 res!15147) b!24979))

(declare-fun m!20151 () Bool)

(assert (=> b!24979 m!20151))

(assert (=> d!4117 d!4733))

(declare-fun d!4735 () Bool)

(declare-fun e!16144 () Bool)

(assert (=> d!4735 e!16144))

(declare-fun res!15148 () Bool)

(assert (=> d!4735 (=> (not res!15148) (not e!16144))))

(declare-fun lt!9647 () ListLongMap!567)

(assert (=> d!4735 (= res!15148 (contains!230 lt!9647 (_1!489 (tuple2!961 lt!8566 (zeroValue!1666 lt!8161)))))))

(declare-fun lt!9646 () List!568)

(assert (=> d!4735 (= lt!9647 (ListLongMap!568 lt!9646))))

(declare-fun lt!9645 () Unit!512)

(declare-fun lt!9648 () Unit!512)

(assert (=> d!4735 (= lt!9645 lt!9648)))

(assert (=> d!4735 (= (getValueByKey!61 lt!9646 (_1!489 (tuple2!961 lt!8566 (zeroValue!1666 lt!8161)))) (Some!66 (_2!489 (tuple2!961 lt!8566 (zeroValue!1666 lt!8161)))))))

(assert (=> d!4735 (= lt!9648 (lemmaContainsTupThenGetReturnValue!18 lt!9646 (_1!489 (tuple2!961 lt!8566 (zeroValue!1666 lt!8161))) (_2!489 (tuple2!961 lt!8566 (zeroValue!1666 lt!8161)))))))

(assert (=> d!4735 (= lt!9646 (insertStrictlySorted!18 (toList!299 lt!8563) (_1!489 (tuple2!961 lt!8566 (zeroValue!1666 lt!8161))) (_2!489 (tuple2!961 lt!8566 (zeroValue!1666 lt!8161)))))))

(assert (=> d!4735 (= (+!45 lt!8563 (tuple2!961 lt!8566 (zeroValue!1666 lt!8161))) lt!9647)))

(declare-fun b!24980 () Bool)

(declare-fun res!15149 () Bool)

(assert (=> b!24980 (=> (not res!15149) (not e!16144))))

(assert (=> b!24980 (= res!15149 (= (getValueByKey!61 (toList!299 lt!9647) (_1!489 (tuple2!961 lt!8566 (zeroValue!1666 lt!8161)))) (Some!66 (_2!489 (tuple2!961 lt!8566 (zeroValue!1666 lt!8161))))))))

(declare-fun b!24981 () Bool)

(assert (=> b!24981 (= e!16144 (contains!232 (toList!299 lt!9647) (tuple2!961 lt!8566 (zeroValue!1666 lt!8161))))))

(assert (= (and d!4735 res!15148) b!24980))

(assert (= (and b!24980 res!15149) b!24981))

(declare-fun m!20153 () Bool)

(assert (=> d!4735 m!20153))

(declare-fun m!20155 () Bool)

(assert (=> d!4735 m!20155))

(declare-fun m!20157 () Bool)

(assert (=> d!4735 m!20157))

(declare-fun m!20159 () Bool)

(assert (=> d!4735 m!20159))

(declare-fun m!20161 () Bool)

(assert (=> b!24980 m!20161))

(declare-fun m!20163 () Bool)

(assert (=> b!24981 m!20163))

(assert (=> b!23647 d!4735))

(declare-fun d!4737 () Bool)

(assert (=> d!4737 (= (apply!29 lt!8563 lt!8552) (get!391 (getValueByKey!61 (toList!299 lt!8563) lt!8552)))))

(declare-fun bs!1039 () Bool)

(assert (= bs!1039 d!4737))

(declare-fun m!20165 () Bool)

(assert (=> bs!1039 m!20165))

(assert (=> bs!1039 m!20165))

(declare-fun m!20167 () Bool)

(assert (=> bs!1039 m!20167))

(assert (=> b!23647 d!4737))

(declare-fun d!4739 () Bool)

(assert (=> d!4739 (= (apply!29 (+!45 lt!8563 (tuple2!961 lt!8566 (zeroValue!1666 lt!8161))) lt!8552) (get!391 (getValueByKey!61 (toList!299 (+!45 lt!8563 (tuple2!961 lt!8566 (zeroValue!1666 lt!8161)))) lt!8552)))))

(declare-fun bs!1040 () Bool)

(assert (= bs!1040 d!4739))

(declare-fun m!20169 () Bool)

(assert (=> bs!1040 m!20169))

(assert (=> bs!1040 m!20169))

(declare-fun m!20171 () Bool)

(assert (=> bs!1040 m!20171))

(assert (=> b!23647 d!4739))

(assert (=> b!23647 d!4673))

(declare-fun d!4741 () Bool)

(assert (=> d!4741 (= (apply!29 (+!45 lt!8563 (tuple2!961 lt!8566 (zeroValue!1666 lt!8161))) lt!8552) (apply!29 lt!8563 lt!8552))))

(declare-fun lt!9649 () Unit!512)

(assert (=> d!4741 (= lt!9649 (choose!210 lt!8563 lt!8566 (zeroValue!1666 lt!8161) lt!8552))))

(declare-fun e!16145 () Bool)

(assert (=> d!4741 e!16145))

(declare-fun res!15150 () Bool)

(assert (=> d!4741 (=> (not res!15150) (not e!16145))))

(assert (=> d!4741 (= res!15150 (contains!230 lt!8563 lt!8552))))

(assert (=> d!4741 (= (addApplyDifferent!14 lt!8563 lt!8566 (zeroValue!1666 lt!8161) lt!8552) lt!9649)))

(declare-fun b!24982 () Bool)

(assert (=> b!24982 (= e!16145 (not (= lt!8552 lt!8566)))))

(assert (= (and d!4741 res!15150) b!24982))

(assert (=> d!4741 m!17262))

(assert (=> d!4741 m!17266))

(assert (=> d!4741 m!17262))

(declare-fun m!20173 () Bool)

(assert (=> d!4741 m!20173))

(declare-fun m!20175 () Bool)

(assert (=> d!4741 m!20175))

(assert (=> d!4741 m!17286))

(assert (=> b!23647 d!4741))

(declare-fun d!4743 () Bool)

(assert (=> d!4743 (= (apply!29 (+!45 lt!8556 (tuple2!961 lt!8571 (minValue!1666 lt!8161))) lt!8570) (get!391 (getValueByKey!61 (toList!299 (+!45 lt!8556 (tuple2!961 lt!8571 (minValue!1666 lt!8161)))) lt!8570)))))

(declare-fun bs!1041 () Bool)

(assert (= bs!1041 d!4743))

(declare-fun m!20177 () Bool)

(assert (=> bs!1041 m!20177))

(assert (=> bs!1041 m!20177))

(declare-fun m!20179 () Bool)

(assert (=> bs!1041 m!20179))

(assert (=> b!23647 d!4743))

(declare-fun d!4745 () Bool)

(assert (=> d!4745 (= (apply!29 (+!45 lt!8564 (tuple2!961 lt!8559 (minValue!1666 lt!8161))) lt!8551) (get!391 (getValueByKey!61 (toList!299 (+!45 lt!8564 (tuple2!961 lt!8559 (minValue!1666 lt!8161)))) lt!8551)))))

(declare-fun bs!1042 () Bool)

(assert (= bs!1042 d!4745))

(declare-fun m!20181 () Bool)

(assert (=> bs!1042 m!20181))

(assert (=> bs!1042 m!20181))

(declare-fun m!20183 () Bool)

(assert (=> bs!1042 m!20183))

(assert (=> b!23647 d!4745))

(declare-fun d!4747 () Bool)

(declare-fun e!16146 () Bool)

(assert (=> d!4747 e!16146))

(declare-fun res!15151 () Bool)

(assert (=> d!4747 (=> (not res!15151) (not e!16146))))

(declare-fun lt!9652 () ListLongMap!567)

(assert (=> d!4747 (= res!15151 (contains!230 lt!9652 (_1!489 (tuple2!961 lt!8571 (minValue!1666 lt!8161)))))))

(declare-fun lt!9651 () List!568)

(assert (=> d!4747 (= lt!9652 (ListLongMap!568 lt!9651))))

(declare-fun lt!9650 () Unit!512)

(declare-fun lt!9653 () Unit!512)

(assert (=> d!4747 (= lt!9650 lt!9653)))

(assert (=> d!4747 (= (getValueByKey!61 lt!9651 (_1!489 (tuple2!961 lt!8571 (minValue!1666 lt!8161)))) (Some!66 (_2!489 (tuple2!961 lt!8571 (minValue!1666 lt!8161)))))))

(assert (=> d!4747 (= lt!9653 (lemmaContainsTupThenGetReturnValue!18 lt!9651 (_1!489 (tuple2!961 lt!8571 (minValue!1666 lt!8161))) (_2!489 (tuple2!961 lt!8571 (minValue!1666 lt!8161)))))))

(assert (=> d!4747 (= lt!9651 (insertStrictlySorted!18 (toList!299 lt!8556) (_1!489 (tuple2!961 lt!8571 (minValue!1666 lt!8161))) (_2!489 (tuple2!961 lt!8571 (minValue!1666 lt!8161)))))))

(assert (=> d!4747 (= (+!45 lt!8556 (tuple2!961 lt!8571 (minValue!1666 lt!8161))) lt!9652)))

(declare-fun b!24983 () Bool)

(declare-fun res!15152 () Bool)

(assert (=> b!24983 (=> (not res!15152) (not e!16146))))

(assert (=> b!24983 (= res!15152 (= (getValueByKey!61 (toList!299 lt!9652) (_1!489 (tuple2!961 lt!8571 (minValue!1666 lt!8161)))) (Some!66 (_2!489 (tuple2!961 lt!8571 (minValue!1666 lt!8161))))))))

(declare-fun b!24984 () Bool)

(assert (=> b!24984 (= e!16146 (contains!232 (toList!299 lt!9652) (tuple2!961 lt!8571 (minValue!1666 lt!8161))))))

(assert (= (and d!4747 res!15151) b!24983))

(assert (= (and b!24983 res!15152) b!24984))

(declare-fun m!20185 () Bool)

(assert (=> d!4747 m!20185))

(declare-fun m!20187 () Bool)

(assert (=> d!4747 m!20187))

(declare-fun m!20189 () Bool)

(assert (=> d!4747 m!20189))

(declare-fun m!20191 () Bool)

(assert (=> d!4747 m!20191))

(declare-fun m!20193 () Bool)

(assert (=> b!24983 m!20193))

(declare-fun m!20195 () Bool)

(assert (=> b!24984 m!20195))

(assert (=> b!23647 d!4747))

(declare-fun d!4749 () Bool)

(assert (=> d!4749 (= (apply!29 (+!45 lt!8556 (tuple2!961 lt!8571 (minValue!1666 lt!8161))) lt!8570) (apply!29 lt!8556 lt!8570))))

(declare-fun lt!9654 () Unit!512)

(assert (=> d!4749 (= lt!9654 (choose!210 lt!8556 lt!8571 (minValue!1666 lt!8161) lt!8570))))

(declare-fun e!16147 () Bool)

(assert (=> d!4749 e!16147))

(declare-fun res!15153 () Bool)

(assert (=> d!4749 (=> (not res!15153) (not e!16147))))

(assert (=> d!4749 (= res!15153 (contains!230 lt!8556 lt!8570))))

(assert (=> d!4749 (= (addApplyDifferent!14 lt!8556 lt!8571 (minValue!1666 lt!8161) lt!8570) lt!9654)))

(declare-fun b!24985 () Bool)

(assert (=> b!24985 (= e!16147 (not (= lt!8570 lt!8571)))))

(assert (= (and d!4749 res!15153) b!24985))

(assert (=> d!4749 m!17264))

(assert (=> d!4749 m!17280))

(assert (=> d!4749 m!17264))

(declare-fun m!20197 () Bool)

(assert (=> d!4749 m!20197))

(declare-fun m!20199 () Bool)

(assert (=> d!4749 m!20199))

(assert (=> d!4749 m!17282))

(assert (=> b!23647 d!4749))

(declare-fun d!4751 () Bool)

(assert (=> d!4751 (= (apply!29 (+!45 lt!8564 (tuple2!961 lt!8559 (minValue!1666 lt!8161))) lt!8551) (apply!29 lt!8564 lt!8551))))

(declare-fun lt!9655 () Unit!512)

(assert (=> d!4751 (= lt!9655 (choose!210 lt!8564 lt!8559 (minValue!1666 lt!8161) lt!8551))))

(declare-fun e!16148 () Bool)

(assert (=> d!4751 e!16148))

(declare-fun res!15154 () Bool)

(assert (=> d!4751 (=> (not res!15154) (not e!16148))))

(assert (=> d!4751 (= res!15154 (contains!230 lt!8564 lt!8551))))

(assert (=> d!4751 (= (addApplyDifferent!14 lt!8564 lt!8559 (minValue!1666 lt!8161) lt!8551) lt!9655)))

(declare-fun b!24986 () Bool)

(assert (=> b!24986 (= e!16148 (not (= lt!8551 lt!8559)))))

(assert (= (and d!4751 res!15154) b!24986))

(assert (=> d!4751 m!17276))

(assert (=> d!4751 m!17278))

(assert (=> d!4751 m!17276))

(declare-fun m!20201 () Bool)

(assert (=> d!4751 m!20201))

(declare-fun m!20203 () Bool)

(assert (=> d!4751 m!20203))

(assert (=> d!4751 m!17260))

(assert (=> b!23647 d!4751))

(declare-fun d!4753 () Bool)

(assert (=> d!4753 (contains!230 (+!45 lt!8565 (tuple2!961 lt!8560 (zeroValue!1666 lt!8161))) lt!8569)))

(declare-fun lt!9656 () Unit!512)

(assert (=> d!4753 (= lt!9656 (choose!211 lt!8565 lt!8560 (zeroValue!1666 lt!8161) lt!8569))))

(assert (=> d!4753 (contains!230 lt!8565 lt!8569)))

(assert (=> d!4753 (= (addStillContains!14 lt!8565 lt!8560 (zeroValue!1666 lt!8161) lt!8569) lt!9656)))

(declare-fun bs!1043 () Bool)

(assert (= bs!1043 d!4753))

(assert (=> bs!1043 m!17270))

(assert (=> bs!1043 m!17270))

(assert (=> bs!1043 m!17272))

(declare-fun m!20205 () Bool)

(assert (=> bs!1043 m!20205))

(declare-fun m!20207 () Bool)

(assert (=> bs!1043 m!20207))

(assert (=> b!23647 d!4753))

(declare-fun d!4755 () Bool)

(assert (=> d!4755 (= (apply!29 lt!8556 lt!8570) (get!391 (getValueByKey!61 (toList!299 lt!8556) lt!8570)))))

(declare-fun bs!1044 () Bool)

(assert (= bs!1044 d!4755))

(declare-fun m!20209 () Bool)

(assert (=> bs!1044 m!20209))

(assert (=> bs!1044 m!20209))

(declare-fun m!20211 () Bool)

(assert (=> bs!1044 m!20211))

(assert (=> b!23647 d!4755))

(declare-fun d!4757 () Bool)

(declare-fun e!16149 () Bool)

(assert (=> d!4757 e!16149))

(declare-fun res!15155 () Bool)

(assert (=> d!4757 (=> res!15155 e!16149)))

(declare-fun lt!9657 () Bool)

(assert (=> d!4757 (= res!15155 (not lt!9657))))

(declare-fun lt!9658 () Bool)

(assert (=> d!4757 (= lt!9657 lt!9658)))

(declare-fun lt!9659 () Unit!512)

(declare-fun e!16150 () Unit!512)

(assert (=> d!4757 (= lt!9659 e!16150)))

(declare-fun c!3427 () Bool)

(assert (=> d!4757 (= c!3427 lt!9658)))

(assert (=> d!4757 (= lt!9658 (containsKey!25 (toList!299 (+!45 lt!8565 (tuple2!961 lt!8560 (zeroValue!1666 lt!8161)))) lt!8569))))

(assert (=> d!4757 (= (contains!230 (+!45 lt!8565 (tuple2!961 lt!8560 (zeroValue!1666 lt!8161))) lt!8569) lt!9657)))

(declare-fun b!24987 () Bool)

(declare-fun lt!9660 () Unit!512)

(assert (=> b!24987 (= e!16150 lt!9660)))

(assert (=> b!24987 (= lt!9660 (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!299 (+!45 lt!8565 (tuple2!961 lt!8560 (zeroValue!1666 lt!8161)))) lt!8569))))

(assert (=> b!24987 (isDefined!23 (getValueByKey!61 (toList!299 (+!45 lt!8565 (tuple2!961 lt!8560 (zeroValue!1666 lt!8161)))) lt!8569))))

(declare-fun b!24988 () Bool)

(declare-fun Unit!592 () Unit!512)

(assert (=> b!24988 (= e!16150 Unit!592)))

(declare-fun b!24989 () Bool)

(assert (=> b!24989 (= e!16149 (isDefined!23 (getValueByKey!61 (toList!299 (+!45 lt!8565 (tuple2!961 lt!8560 (zeroValue!1666 lt!8161)))) lt!8569)))))

(assert (= (and d!4757 c!3427) b!24987))

(assert (= (and d!4757 (not c!3427)) b!24988))

(assert (= (and d!4757 (not res!15155)) b!24989))

(declare-fun m!20213 () Bool)

(assert (=> d!4757 m!20213))

(declare-fun m!20215 () Bool)

(assert (=> b!24987 m!20215))

(declare-fun m!20217 () Bool)

(assert (=> b!24987 m!20217))

(assert (=> b!24987 m!20217))

(declare-fun m!20219 () Bool)

(assert (=> b!24987 m!20219))

(assert (=> b!24989 m!20217))

(assert (=> b!24989 m!20217))

(assert (=> b!24989 m!20219))

(assert (=> b!23647 d!4757))

(declare-fun d!4759 () Bool)

(declare-fun e!16151 () Bool)

(assert (=> d!4759 e!16151))

(declare-fun res!15156 () Bool)

(assert (=> d!4759 (=> (not res!15156) (not e!16151))))

(declare-fun lt!9663 () ListLongMap!567)

(assert (=> d!4759 (= res!15156 (contains!230 lt!9663 (_1!489 (tuple2!961 lt!8559 (minValue!1666 lt!8161)))))))

(declare-fun lt!9662 () List!568)

(assert (=> d!4759 (= lt!9663 (ListLongMap!568 lt!9662))))

(declare-fun lt!9661 () Unit!512)

(declare-fun lt!9664 () Unit!512)

(assert (=> d!4759 (= lt!9661 lt!9664)))

(assert (=> d!4759 (= (getValueByKey!61 lt!9662 (_1!489 (tuple2!961 lt!8559 (minValue!1666 lt!8161)))) (Some!66 (_2!489 (tuple2!961 lt!8559 (minValue!1666 lt!8161)))))))

(assert (=> d!4759 (= lt!9664 (lemmaContainsTupThenGetReturnValue!18 lt!9662 (_1!489 (tuple2!961 lt!8559 (minValue!1666 lt!8161))) (_2!489 (tuple2!961 lt!8559 (minValue!1666 lt!8161)))))))

(assert (=> d!4759 (= lt!9662 (insertStrictlySorted!18 (toList!299 lt!8564) (_1!489 (tuple2!961 lt!8559 (minValue!1666 lt!8161))) (_2!489 (tuple2!961 lt!8559 (minValue!1666 lt!8161)))))))

(assert (=> d!4759 (= (+!45 lt!8564 (tuple2!961 lt!8559 (minValue!1666 lt!8161))) lt!9663)))

(declare-fun b!24990 () Bool)

(declare-fun res!15157 () Bool)

(assert (=> b!24990 (=> (not res!15157) (not e!16151))))

(assert (=> b!24990 (= res!15157 (= (getValueByKey!61 (toList!299 lt!9663) (_1!489 (tuple2!961 lt!8559 (minValue!1666 lt!8161)))) (Some!66 (_2!489 (tuple2!961 lt!8559 (minValue!1666 lt!8161))))))))

(declare-fun b!24991 () Bool)

(assert (=> b!24991 (= e!16151 (contains!232 (toList!299 lt!9663) (tuple2!961 lt!8559 (minValue!1666 lt!8161))))))

(assert (= (and d!4759 res!15156) b!24990))

(assert (= (and b!24990 res!15157) b!24991))

(declare-fun m!20221 () Bool)

(assert (=> d!4759 m!20221))

(declare-fun m!20223 () Bool)

(assert (=> d!4759 m!20223))

(declare-fun m!20225 () Bool)

(assert (=> d!4759 m!20225))

(declare-fun m!20227 () Bool)

(assert (=> d!4759 m!20227))

(declare-fun m!20229 () Bool)

(assert (=> b!24990 m!20229))

(declare-fun m!20231 () Bool)

(assert (=> b!24991 m!20231))

(assert (=> b!23647 d!4759))

(declare-fun d!4761 () Bool)

(assert (=> d!4761 (= (apply!29 lt!8564 lt!8551) (get!391 (getValueByKey!61 (toList!299 lt!8564) lt!8551)))))

(declare-fun bs!1045 () Bool)

(assert (= bs!1045 d!4761))

(declare-fun m!20233 () Bool)

(assert (=> bs!1045 m!20233))

(assert (=> bs!1045 m!20233))

(declare-fun m!20235 () Bool)

(assert (=> bs!1045 m!20235))

(assert (=> b!23647 d!4761))

(declare-fun d!4763 () Bool)

(declare-fun e!16152 () Bool)

(assert (=> d!4763 e!16152))

(declare-fun res!15158 () Bool)

(assert (=> d!4763 (=> (not res!15158) (not e!16152))))

(declare-fun lt!9667 () ListLongMap!567)

(assert (=> d!4763 (= res!15158 (contains!230 lt!9667 (_1!489 (tuple2!961 lt!8560 (zeroValue!1666 lt!8161)))))))

(declare-fun lt!9666 () List!568)

(assert (=> d!4763 (= lt!9667 (ListLongMap!568 lt!9666))))

(declare-fun lt!9665 () Unit!512)

(declare-fun lt!9668 () Unit!512)

(assert (=> d!4763 (= lt!9665 lt!9668)))

(assert (=> d!4763 (= (getValueByKey!61 lt!9666 (_1!489 (tuple2!961 lt!8560 (zeroValue!1666 lt!8161)))) (Some!66 (_2!489 (tuple2!961 lt!8560 (zeroValue!1666 lt!8161)))))))

(assert (=> d!4763 (= lt!9668 (lemmaContainsTupThenGetReturnValue!18 lt!9666 (_1!489 (tuple2!961 lt!8560 (zeroValue!1666 lt!8161))) (_2!489 (tuple2!961 lt!8560 (zeroValue!1666 lt!8161)))))))

(assert (=> d!4763 (= lt!9666 (insertStrictlySorted!18 (toList!299 lt!8565) (_1!489 (tuple2!961 lt!8560 (zeroValue!1666 lt!8161))) (_2!489 (tuple2!961 lt!8560 (zeroValue!1666 lt!8161)))))))

(assert (=> d!4763 (= (+!45 lt!8565 (tuple2!961 lt!8560 (zeroValue!1666 lt!8161))) lt!9667)))

(declare-fun b!24992 () Bool)

(declare-fun res!15159 () Bool)

(assert (=> b!24992 (=> (not res!15159) (not e!16152))))

(assert (=> b!24992 (= res!15159 (= (getValueByKey!61 (toList!299 lt!9667) (_1!489 (tuple2!961 lt!8560 (zeroValue!1666 lt!8161)))) (Some!66 (_2!489 (tuple2!961 lt!8560 (zeroValue!1666 lt!8161))))))))

(declare-fun b!24993 () Bool)

(assert (=> b!24993 (= e!16152 (contains!232 (toList!299 lt!9667) (tuple2!961 lt!8560 (zeroValue!1666 lt!8161))))))

(assert (= (and d!4763 res!15158) b!24992))

(assert (= (and b!24992 res!15159) b!24993))

(declare-fun m!20237 () Bool)

(assert (=> d!4763 m!20237))

(declare-fun m!20239 () Bool)

(assert (=> d!4763 m!20239))

(declare-fun m!20241 () Bool)

(assert (=> d!4763 m!20241))

(declare-fun m!20243 () Bool)

(assert (=> d!4763 m!20243))

(declare-fun m!20245 () Bool)

(assert (=> b!24992 m!20245))

(declare-fun m!20247 () Bool)

(assert (=> b!24993 m!20247))

(assert (=> b!23647 d!4763))

(assert (=> bm!2014 d!4001))

(declare-fun d!4765 () Bool)

(assert (=> d!4765 (= (validKeyInArray!0 (select (arr!608 lt!8356) lt!8342)) (and (not (= (select (arr!608 lt!8356) lt!8342) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!608 lt!8356) lt!8342) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!23415 d!4765))

(assert (=> d!4017 d!4013))

(declare-fun d!4767 () Bool)

(assert (=> d!4767 (arrayNoDuplicates!0 lt!8338 lt!8351 lt!8352)))

(assert (=> d!4767 true))

(declare-fun res!15162 () Unit!512)

(assert (=> d!4767 (= (choose!111 lt!8338 lt!8351 (bvadd (computeNewMask!29 thiss!938 (mask!4730 (v!1604 (underlying!116 thiss!938))) (_vacant!150 (v!1604 (underlying!116 thiss!938))) (_size!150 (v!1604 (underlying!116 thiss!938)))) #b00000000000000000000000000000001) lt!8352) res!15162)))

(declare-fun bs!1046 () Bool)

(assert (= bs!1046 d!4767))

(assert (=> bs!1046 m!16922))

(assert (=> d!4017 d!4767))

(declare-fun d!4769 () Bool)

(declare-fun res!15163 () Bool)

(declare-fun e!16153 () Bool)

(assert (=> d!4769 (=> res!15163 e!16153)))

(assert (=> d!4769 (= res!15163 (= (select (arr!608 (_keys!3164 (_2!487 lt!8158))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!4769 (= (arrayContainsKey!0 (_keys!3164 (_2!487 lt!8158)) #b1000000000000000000000000000000000000000000000000000000000000000 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!16153)))

(declare-fun b!24994 () Bool)

(declare-fun e!16154 () Bool)

(assert (=> b!24994 (= e!16153 e!16154)))

(declare-fun res!15164 () Bool)

(assert (=> b!24994 (=> (not res!15164) (not e!16154))))

(assert (=> b!24994 (= res!15164 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!704 (_keys!3164 (_2!487 lt!8158)))))))

(declare-fun b!24995 () Bool)

(assert (=> b!24995 (= e!16154 (arrayContainsKey!0 (_keys!3164 (_2!487 lt!8158)) #b1000000000000000000000000000000000000000000000000000000000000000 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!4769 (not res!15163)) b!24994))

(assert (= (and b!24994 res!15164) b!24995))

(declare-fun m!20249 () Bool)

(assert (=> d!4769 m!20249))

(declare-fun m!20251 () Bool)

(assert (=> b!24995 m!20251))

(assert (=> b!23811 d!4769))

(declare-fun d!4771 () Bool)

(declare-fun e!16155 () Bool)

(assert (=> d!4771 e!16155))

(declare-fun res!15165 () Bool)

(assert (=> d!4771 (=> (not res!15165) (not e!16155))))

(declare-fun lt!9671 () ListLongMap!567)

(assert (=> d!4771 (= res!15165 (contains!230 lt!9671 (_1!489 (ite (or c!3104 c!3108) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (_2!487 lt!8158))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!487 lt!8158)))))))))

(declare-fun lt!9670 () List!568)

(assert (=> d!4771 (= lt!9671 (ListLongMap!568 lt!9670))))

(declare-fun lt!9669 () Unit!512)

(declare-fun lt!9672 () Unit!512)

(assert (=> d!4771 (= lt!9669 lt!9672)))

(assert (=> d!4771 (= (getValueByKey!61 lt!9670 (_1!489 (ite (or c!3104 c!3108) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (_2!487 lt!8158))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!487 lt!8158)))))) (Some!66 (_2!489 (ite (or c!3104 c!3108) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (_2!487 lt!8158))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!487 lt!8158)))))))))

(assert (=> d!4771 (= lt!9672 (lemmaContainsTupThenGetReturnValue!18 lt!9670 (_1!489 (ite (or c!3104 c!3108) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (_2!487 lt!8158))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!487 lt!8158))))) (_2!489 (ite (or c!3104 c!3108) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (_2!487 lt!8158))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!487 lt!8158)))))))))

(assert (=> d!4771 (= lt!9670 (insertStrictlySorted!18 (toList!299 (ite c!3104 call!2034 (ite c!3108 call!2035 call!2030))) (_1!489 (ite (or c!3104 c!3108) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (_2!487 lt!8158))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!487 lt!8158))))) (_2!489 (ite (or c!3104 c!3108) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (_2!487 lt!8158))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!487 lt!8158)))))))))

(assert (=> d!4771 (= (+!45 (ite c!3104 call!2034 (ite c!3108 call!2035 call!2030)) (ite (or c!3104 c!3108) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (_2!487 lt!8158))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!487 lt!8158))))) lt!9671)))

(declare-fun b!24996 () Bool)

(declare-fun res!15166 () Bool)

(assert (=> b!24996 (=> (not res!15166) (not e!16155))))

(assert (=> b!24996 (= res!15166 (= (getValueByKey!61 (toList!299 lt!9671) (_1!489 (ite (or c!3104 c!3108) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (_2!487 lt!8158))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!487 lt!8158)))))) (Some!66 (_2!489 (ite (or c!3104 c!3108) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (_2!487 lt!8158))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!487 lt!8158))))))))))

(declare-fun b!24997 () Bool)

(assert (=> b!24997 (= e!16155 (contains!232 (toList!299 lt!9671) (ite (or c!3104 c!3108) (tuple2!961 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1666 (_2!487 lt!8158))) (tuple2!961 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1666 (_2!487 lt!8158))))))))

(assert (= (and d!4771 res!15165) b!24996))

(assert (= (and b!24996 res!15166) b!24997))

(declare-fun m!20253 () Bool)

(assert (=> d!4771 m!20253))

(declare-fun m!20255 () Bool)

(assert (=> d!4771 m!20255))

(declare-fun m!20257 () Bool)

(assert (=> d!4771 m!20257))

(declare-fun m!20259 () Bool)

(assert (=> d!4771 m!20259))

(declare-fun m!20261 () Bool)

(assert (=> b!24996 m!20261))

(declare-fun m!20263 () Bool)

(assert (=> b!24997 m!20263))

(assert (=> bm!2033 d!4771))

(assert (=> bm!2026 d!4033))

(assert (=> bm!2044 d!4053))

(assert (=> d!4099 d!4071))

(assert (=> bm!2036 d!4151))

(declare-fun d!4773 () Bool)

(declare-fun res!15167 () Bool)

(declare-fun e!16156 () Bool)

(assert (=> d!4773 (=> res!15167 e!16156)))

(assert (=> d!4773 (= res!15167 (= (select (arr!608 lt!8350) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_1!489 lt!8355)))))

(assert (=> d!4773 (= (arrayContainsKey!0 lt!8350 (_1!489 lt!8355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!16156)))

(declare-fun b!24998 () Bool)

(declare-fun e!16157 () Bool)

(assert (=> b!24998 (= e!16156 e!16157)))

(declare-fun res!15168 () Bool)

(assert (=> b!24998 (=> (not res!15168) (not e!16157))))

(assert (=> b!24998 (= res!15168 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!704 lt!8350)))))

(declare-fun b!24999 () Bool)

(assert (=> b!24999 (= e!16157 (arrayContainsKey!0 lt!8350 (_1!489 lt!8355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!4773 (not res!15167)) b!24998))

(assert (= (and b!24998 res!15168) b!24999))

(declare-fun m!20265 () Bool)

(assert (=> d!4773 m!20265))

(declare-fun m!20267 () Bool)

(assert (=> b!24999 m!20267))

(assert (=> b!23612 d!4773))

(assert (=> bm!1981 d!4213))

(declare-fun d!4775 () Bool)

(assert (=> d!4775 (isDefined!23 (getValueByKey!61 (toList!299 e!15139) (ite c!2982 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (select (arr!608 (_keys!3164 lt!8161)) (index!2338 lt!8254)))))))

(declare-fun lt!9673 () Unit!512)

(assert (=> d!4775 (= lt!9673 (choose!215 (toList!299 e!15139) (ite c!2982 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (select (arr!608 (_keys!3164 lt!8161)) (index!2338 lt!8254)))))))

(declare-fun e!16158 () Bool)

(assert (=> d!4775 e!16158))

(declare-fun res!15169 () Bool)

(assert (=> d!4775 (=> (not res!15169) (not e!16158))))

(assert (=> d!4775 (= res!15169 (isStrictlySorted!171 (toList!299 e!15139)))))

(assert (=> d!4775 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!22 (toList!299 e!15139) (ite c!2982 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (select (arr!608 (_keys!3164 lt!8161)) (index!2338 lt!8254)))) lt!9673)))

(declare-fun b!25000 () Bool)

(assert (=> b!25000 (= e!16158 (containsKey!25 (toList!299 e!15139) (ite c!2982 (ite (or c!2932 c!2933) #b0000000000000000000000000000000000000000000000000000000000000000 #b1000000000000000000000000000000000000000000000000000000000000000) (select (arr!608 (_keys!3164 lt!8161)) (index!2338 lt!8254)))))))

(assert (= (and d!4775 res!15169) b!25000))

(assert (=> d!4775 m!17619))

(assert (=> d!4775 m!17619))

(assert (=> d!4775 m!17621))

(declare-fun m!20269 () Bool)

(assert (=> d!4775 m!20269))

(declare-fun m!20271 () Bool)

(assert (=> d!4775 m!20271))

(assert (=> b!25000 m!17615))

(assert (=> b!23816 d!4775))

(assert (=> b!23816 d!4639))

(assert (=> b!23816 d!4641))

(declare-fun d!4777 () Bool)

(declare-fun res!15170 () Bool)

(declare-fun e!16159 () Bool)

(assert (=> d!4777 (=> res!15170 e!16159)))

(assert (=> d!4777 (= res!15170 (and ((_ is Cons!564) (toList!299 (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))) (= (_1!489 (h!1130 (toList!299 (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158)))))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!4777 (= (containsKey!25 (toList!299 (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158)))) #b1000000000000000000000000000000000000000000000000000000000000000) e!16159)))

(declare-fun b!25001 () Bool)

(declare-fun e!16160 () Bool)

(assert (=> b!25001 (= e!16159 e!16160)))

(declare-fun res!15171 () Bool)

(assert (=> b!25001 (=> (not res!15171) (not e!16160))))

(assert (=> b!25001 (= res!15171 (and (or (not ((_ is Cons!564) (toList!299 (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158)))))) (bvsle (_1!489 (h!1130 (toList!299 (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158)))))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!564) (toList!299 (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))) (bvslt (_1!489 (h!1130 (toList!299 (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158)))))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!25002 () Bool)

(assert (=> b!25002 (= e!16160 (containsKey!25 (t!3239 (toList!299 (getCurrentListMap!130 (_keys!3164 (_2!487 lt!8158)) (_values!1729 (_2!487 lt!8158)) (mask!4730 (_2!487 lt!8158)) (extraKeys!1641 (_2!487 lt!8158)) (zeroValue!1666 (_2!487 lt!8158)) (minValue!1666 (_2!487 lt!8158)) #b00000000000000000000000000000000 (defaultEntry!1743 (_2!487 lt!8158))))) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!4777 (not res!15170)) b!25001))

(assert (= (and b!25001 res!15171) b!25002))

(declare-fun m!20273 () Bool)

(assert (=> b!25002 m!20273))

(assert (=> d!4093 d!4777))

(declare-fun mapIsEmpty!1033 () Bool)

(declare-fun mapRes!1033 () Bool)

(assert (=> mapIsEmpty!1033 mapRes!1033))

(declare-fun b!25004 () Bool)

(declare-fun e!16162 () Bool)

(assert (=> b!25004 (= e!16162 tp_is_empty!1023)))

(declare-fun b!25003 () Bool)

(declare-fun e!16161 () Bool)

(assert (=> b!25003 (= e!16161 tp_is_empty!1023)))

(declare-fun mapNonEmpty!1033 () Bool)

(declare-fun tp!3535 () Bool)

(assert (=> mapNonEmpty!1033 (= mapRes!1033 (and tp!3535 e!16161))))

(declare-fun mapValue!1033 () ValueCell!312)

(declare-fun mapRest!1033 () (Array (_ BitVec 32) ValueCell!312))

(declare-fun mapKey!1033 () (_ BitVec 32))

(assert (=> mapNonEmpty!1033 (= mapRest!1032 (store mapRest!1033 mapKey!1033 mapValue!1033))))

(declare-fun condMapEmpty!1033 () Bool)

(declare-fun mapDefault!1033 () ValueCell!312)

(assert (=> mapNonEmpty!1032 (= condMapEmpty!1033 (= mapRest!1032 ((as const (Array (_ BitVec 32) ValueCell!312)) mapDefault!1033)))))

(assert (=> mapNonEmpty!1032 (= tp!3534 (and e!16162 mapRes!1033))))

(assert (= (and mapNonEmpty!1032 condMapEmpty!1033) mapIsEmpty!1033))

(assert (= (and mapNonEmpty!1032 (not condMapEmpty!1033)) mapNonEmpty!1033))

(assert (= (and mapNonEmpty!1033 ((_ is ValueCellFull!312) mapValue!1033)) b!25003))

(assert (= (and mapNonEmpty!1032 ((_ is ValueCellFull!312) mapDefault!1033)) b!25004))

(declare-fun m!20275 () Bool)

(assert (=> mapNonEmpty!1033 m!20275))

(declare-fun b_lambda!1651 () Bool)

(assert (= b_lambda!1587 (or (and b!23142 b_free!759 (= (defaultEntry!1743 (v!1604 (underlying!116 thiss!938))) (defaultEntry!1743 lt!8161))) b_lambda!1651)))

(declare-fun b_lambda!1653 () Bool)

(assert (= b_lambda!1593 (or (and b!23142 b_free!759 (= (defaultEntry!1743 (v!1604 (underlying!116 thiss!938))) (defaultEntry!1743 lt!8161))) b_lambda!1653)))

(declare-fun b_lambda!1655 () Bool)

(assert (= b_lambda!1589 (or (and b!23142 b_free!759 (= (defaultEntry!1743 (v!1604 (underlying!116 thiss!938))) (defaultEntry!1743 lt!8161))) b_lambda!1655)))

(declare-fun b_lambda!1657 () Bool)

(assert (= b_lambda!1591 (or (and b!23142 b_free!759 (= (defaultEntry!1743 (v!1604 (underlying!116 thiss!938))) (defaultEntry!1743 (_2!487 lt!8158)))) b_lambda!1657)))

(declare-fun b_lambda!1659 () Bool)

(assert (= b_lambda!1583 (or (and b!23142 b_free!759 (= (defaultEntry!1743 (v!1604 (underlying!116 thiss!938))) (defaultEntry!1743 (_2!487 lt!8158)))) b_lambda!1659)))

(declare-fun b_lambda!1661 () Bool)

(assert (= b_lambda!1585 (or (and b!23142 b_free!759 (= (defaultEntry!1743 (v!1604 (underlying!116 thiss!938))) (defaultEntry!1743 (_2!487 lt!8158)))) b_lambda!1661)))

(check-sat (not bm!2066) (not d!4281) (not b!24430) (not b!24526) (not d!4483) (not b!24226) (not b!24178) (not bm!2142) (not b!24330) (not d!4383) (not b!24989) (not b!24882) (not d!4411) (not b!24977) (not b!24056) (not b!23963) (not b!24175) (not b!24884) (not b!24379) (not d!4621) (not b!24549) (not b!23875) (not d!4243) (not b!24904) (not b_lambda!1619) (not b!24791) (not b!24173) (not d!4713) (not d!4269) (not b_lambda!1645) (not d!4331) (not b!24728) (not b!24297) (not b!23920) (not bm!2206) (not d!4305) (not d!4699) (not b_lambda!1649) (not b!24238) (not b!23984) (not b!23905) (not bm!2140) (not b!24528) (not b!24402) (not d!4373) (not b!24020) (not d!4139) (not d!4355) (not d!4387) (not b!23973) (not b!24128) (not b!24124) (not b_lambda!1613) (not b!24271) (not d!4715) (not d!4775) (not bm!2132) (not d!4753) (not b!23856) (not b!24463) (not d!4635) (not b!24069) (not bm!2172) (not b!24054) (not b!24064) (not bm!2218) (not b!24788) (not bm!2114) (not d!4215) (not d!4683) (not d!4545) (not b!24248) (not b!24245) (not bm!2166) (not bm!2133) (not d!4451) (not d!4445) (not b!23966) (not d!4543) (not b!24692) (not b!24187) (not b!23840) (not b!24229) (not d!4631) (not bm!2110) (not d!4679) (not b!24695) (not b_lambda!1595) (not b!24859) (not b!24224) (not bm!2158) (not b!23877) (not b!23979) (not b!24477) (not b!24949) (not d!4307) (not bm!2127) (not d!4143) (not b_lambda!1655) (not b!24560) b_and!1555 (not d!4493) (not b!24940) (not b!24446) (not b!24997) (not b!24397) (not d!4309) (not b!24077) (not bm!2086) (not b!24358) (not bm!2103) (not b!24531) (not b!24061) (not d!4273) (not b!24232) (not b!24098) (not d!4419) (not b!24758) (not bm!2152) (not d!4401) (not d!4167) (not bm!2073) (not b!24377) (not b!24738) (not d!4625) (not b!23919) (not bm!2085) (not b!23954) (not b!23981) (not d!4489) (not bm!2116) (not b!23942) (not b!23914) (not bm!2069) (not b!24121) (not d!4577) (not bm!2120) (not bm!2046) (not b!24324) (not bm!2131) (not b!24875) (not d!4223) (not d!4767) (not bm!2183) (not d!4605) (not d!4279) (not b!24183) (not b!24236) (not d!4533) (not b!24970) (not b!24980) (not b!24957) (not b!23934) (not b!24947) (not b!24803) (not b!24095) (not b!24254) (not d!4591) (not b!24127) (not bm!2055) (not b!24769) (not d!4745) (not b!24435) (not d!4523) (not bm!2168) (not b!24312) (not b!23976) (not b!24833) (not b!24906) tp_is_empty!1023 (not b!24428) (not b!24832) (not b!24984) (not d!4677) (not b!24141) (not b!24807) (not b!23930) (not b!23955) (not bm!2161) (not b!24517) (not b!24951) (not b_lambda!1599) (not d!4151) (not b!23878) (not b!24269) (not d!4261) (not b_lambda!1653) (not bm!2186) (not b_lambda!1661) (not b!24129) (not bm!2121) (not b!23913) (not bm!2115) (not d!4203) (not b!24894) (not b!24439) (not b!24813) (not b!24536) (not bm!2109) (not d!4237) (not b!24114) (not bm!2156) (not bm!2056) (not b!24690) (not b!24688) (not d!4691) (not b!24076) (not b!24848) (not b!24626) (not b!24522) (not d!4751) (not bm!2214) (not b!24965) (not b_lambda!1635) (not b!24556) (not b!24510) (not b!24764) (not b!24481) (not bm!2094) (not b!24546) (not d!4615) (not d!4333) (not b!23932) (not d!4749) (not bm!2080) (not b!24891) (not b!24929) (not d!4579) (not b!23943) (not d!4687) (not b!24935) (not b!24059) (not d!4211) (not d!4571) (not b!24234) (not bm!2079) (not d!4257) (not b!24246) (not d!4601) (not b!24896) (not d!4439) (not d!4435) (not b!24273) (not b!24104) (not b!24117) (not b!24545) (not bm!2087) (not d!4185) (not bm!2111) (not b!24032) (not d!4763) (not bm!2197) (not d!4169) (not bm!2210) (not b!25000) (not d!4329) (not b!24483) (not b!24651) (not b!24811) (not b!24899) (not bm!2165) (not d!4475) (not b!24828) (not b!24646) (not b!23843) (not bm!2149) (not b!23844) (not b!24286) (not d!4653) (not b!24944) (not d!4487) (not b!24295) (not b!23982) (not b!24901) (not bm!2205) (not b!24030) (not b!23972) (not d!4161) (not d!4399) (not b!24525) (not d!4317) (not b!24244) (not b!24981) (not d!4613) (not b!24118) (not b!24427) (not bm!2185) (not b!23971) (not b!24679) (not b!24521) (not b!24812) (not d!4701) (not bm!2089) (not b!24792) (not b!24250) (not b!23968) (not d!4179) (not b!23921) (not d!4463) (not b!24084) (not d!4573) (not b!24186) (not b!24752) (not d!4175) (not b!24371) (not b!23906) (not bm!2179) (not d!4407) (not d!4299) (not b!24025) (not b!24701) (not b!24241) (not b!24293) (not d!4209) (not bm!2198) (not b!24663) (not b!24147) (not b_lambda!1615) (not b!23991) (not d!4249) (not bm!2100) (not b!24120) (not bm!2175) (not b!24699) (not b!24403) (not bm!2208) (not b!24299) (not b!24779) (not b!24992) (not b!24983) (not bm!2159) (not b!24702) (not bm!2184) (not b!24152) (not d!4759) (not b!23956) (not bm!2143) (not b!25002) (not bm!2084) (not b!24398) (not b!23937) (not b!24468) (not bm!2045) (not d!4201) (not b_lambda!1617) (not d!4395) (not b!24704) (not b!24673) (not d!4531) (not b!24051) (not d!4287) (not b!24658) (not b!24991) (not b!24278) (not d!4155) (not b!24668) (not b!24177) (not d!4241) (not d!4589) (not b!24616) (not d!4593) (not b!24280) (not mapNonEmpty!1033) (not d!4541) (not bm!2057) (not b!24942) (not b!24375) (not d!4707) (not b!24830) (not bm!2126) (not b!24113) (not b!24697) (not b!24924) (not d!4359) (not b!24086) (not b!24717) (not d!4177) (not d!4345) (not bm!2160) (not b!24158) (not b!24219) (not b!24582) (not b!24391) (not b!24279) (not b_lambda!1611) (not d!4341) (not d!4293) (not b!24213) (not b!24790) (not b!24143) (not b!24320) (not d!4415) (not b!23851) (not b!24627) (not d!4217) (not b!24530) (not d!4455) (not d!4181) (not bm!2104) (not d!4397) (not b!24322) (not b!24362) (not b!24387) (not d!4199) (not d!4311) (not d!4313) (not b!24504) (not d!4669) (not b!24401) (not d!4761) (not b!24333) (not d!4205) (not d!4737) (not d!4227) (not b!23988) (not b!24365) (not b!24352) (not b!24457) (not b_lambda!1633) (not b!24066) (not b!24249) (not b!24370) (not b!24660) (not bm!2144) (not d!4551) (not d!4295) (not b!24426) (not d!4755) (not b!24684) (not b!24164) (not d!4127) (not b!24357) (not b!24897) (not b!24963) (not b!24730) (not b!24640) (not bm!2093) (not d!4717) (not b!24585) (not b!23929) (not b!24447) (not b!24732) (not b!24780) (not b!24308) (not b_lambda!1605) (not bm!2125) (not b!24734) (not b!24767) (not d!4505) (not b!24309) (not b!24063) (not bm!2182) (not d!4499) (not b!24905) (not d!4659) (not b!24708) (not d!4639) (not d!4123) (not d!4197) (not bm!2051) (not b!24445) (not bm!2070) (not b!24861) (not b!24974) (not b!24836) (not b!23912) (not d!4231) (not bm!2096) (not b!24498) (not b!24774) (not b!24745) (not d!4727) (not b!23841) (not d!4187) (not b!24145) (not b!24649) (not b_lambda!1639) (not d!4339) (not b!24049) (not bm!2113) (not b!23997) (not b!24470) (not b!24110) (not b!24863) (not bm!2219) (not d!4447) (not d!4325) (not bm!2095) (not b!24418) (not bm!2102) (not d!4335) (not bm!2212) (not d!4417) (not d!4643) (not b!23858) (not b_next!759) (not b!24917) (not b!24759) (not b!24671) (not d!4389) (not d!4297) (not b!24871) (not b!24348) (not b!24541) (not bm!2071) (not d!4375) (not d!4289) (not b!24474) (not d!4711) (not b!24122) (not d!4629) (not b!24154) (not d!4271) (not b_lambda!1631) (not d!4267) (not b!24151) (not b!23927) (not bm!2207) (not d!4405) (not b!24276) (not d!4723) (not b!23907) (not b!23959) (not d!4321) (not b!24552) (not d!4515) (not b!24540) (not d!4529) (not b!24052) (not d!4443) (not b!23980) (not bm!2193) (not b!24489) (not b_lambda!1643) (not b!24171) (not d!4263) (not b!23967) (not b!24476) (not b!24218) (not b!24876) (not b!24805) (not d!4743) (not b!24872) (not b_lambda!1581) (not b!24918) (not b!24062) (not b!24937) (not b!24503) (not b!24456) (not d!4565) (not b!23974) (not b!24354) (not b!24180) (not b!24885) (not b!24500) (not d!4219) (not b!23862) (not d!4235) (not b!24941) (not d!4303) (not bm!2123) (not bm!2213) (not b!24623) (not b!24614) (not b!24698) (not b!24535) (not b!24423) (not b!24482) (not b!24715) (not d!4173) (not d!4459) (not b!24969) (not b!24331) (not bm!2199) (not b!24739) (not b!24029) (not b!24184) (not b!24737) (not b!24993) (not b!24939) (not b!24844) (not b!24334) (not b!24505) (not d!4673) (not b!23969) (not b!24586) (not b!23953) (not d!4377) (not b!24879) (not d!4351) (not d!4183) (not b!24267) (not d!4473) (not d!4739) (not d!4547) (not b!23949) (not bm!2157) (not d!4729) (not b!24824) (not b!24265) (not bm!2101) (not b!24888) (not b!24416) (not b!24990) (not b_lambda!1625) (not b!24761) (not b!24809) (not b!24703) (not b!24865) (not b!24067) (not b!24643) (not b!24253) (not d!4657) (not b!24551) (not b!24766) (not b!24995) (not b!24513) (not b!24786) (not b!24996) (not bm!2150) (not d!4393) (not b_lambda!1621) (not b!24102) (not b!24776) (not b!24958) (not b!24182) (not d!4509) (not b!24157) (not d!4649) (not b!24496) (not d!4337) (not b!24869) (not b!24723) (not bm!2139) (not b!24107) (not b!24346) (not d!4189) (not b!24389) (not b!24950) (not b!24538) (not bm!2072) (not b_lambda!1623) (not d!4603) (not b!24414) (not b!24090) (not b_lambda!1597) (not b!24754) (not d!4129) (not b!24436) (not b!24237) (not b_lambda!1579) (not b!24105) (not b!24641) (not b!23860) (not d!4757) (not b!24959) (not b!24111) (not b!24707) (not bm!2122) (not b_lambda!1657) (not d!4247) (not b!24116) (not d!4735) (not b!24819) (not bm!2078) (not b!24453) (not d!4521) (not b!24367) (not b!24031) (not b!24335) (not bm!2105) (not b!24441) (not d!4327) (not d!4525) (not b!24291) (not b_lambda!1627) (not d!4681) (not bm!2167) (not d!4253) (not b!24826) (not b!24274) (not b_lambda!1647) (not d!4207) (not bm!2155) (not b_lambda!1629) (not b!24409) (not b!24971) (not b!24544) (not d!4485) (not b!23909) (not b_lambda!1659) (not b!24112) (not b!23925) (not b!24071) (not b!24893) (not bm!2173) (not b!24664) (not b!24472) (not bm!2191) (not b!24422) (not b!24341) (not b!24169) (not d!4191) (not b!24222) (not b!24043) (not d!4719) (not b!23950) (not b!24705) (not b!24260) (not b!24617) (not b!24716) (not b!24382) (not d!4251) (not d!4553) (not d!4357) (not b!24136) (not d!4265) (not b!24915) (not b!24252) (not b!24181) (not d!4427) (not d!4363) (not bm!2141) (not d!4537) (not b!24079) (not b!24966) (not b!24580) (not b!24240) (not bm!2151) (not b!23931) (not d!4695) (not b!24502) (not d!4647) (not bm!2174) (not d!4495) (not d!4315) (not b!24686) (not d!4539) (not b!24228) (not b!24216) (not d!4391) (not bm!2192) (not d!4747) (not b!23838) (not d!4277) (not b_lambda!1637) (not b!24275) (not d!4741) (not b!24798) (not b!24962) (not b!23940) (not d!4611) (not d!4195) (not bm!2211) (not b!24103) (not b!24667) (not d!4619) (not b!24967) (not b!24221) (not b!23962) (not d!4413) (not d!4301) (not b_lambda!1607) (not d!4367) (not d!4319) (not b!24933) (not b!24092) (not bm!2124) (not d!4171) (not d!4569) (not b!24946) (not d!4149) (not b_lambda!1641) (not d!4477) (not b!24508) (not b!24088) (not b!24099) (not d!4381) (not b!24656) (not b!23845) (not b_lambda!1651) (not b!24542) (not b!23998) (not d!4157) (not b!24156) (not d!4665) (not b!24327) (not b!24874) (not b!24931) (not b!24750) (not b_lambda!1609) (not bm!2134) (not b!24847) (not b!24420) (not d!4675) (not b!24898) (not b!24999) (not b!24943) (not d!4259) (not d!4159) (not d!4457) (not b!23864) (not d!4645) (not d!4623) (not d!4137) (not b!24553) (not b_lambda!1603) (not bm!2190) (not b!24987) (not d!4255) (not b!24380) (not bm!2112) (not b!23938) (not bm!2135) (not b!24672) (not d!4689) (not bm!2200) (not bm!2077) (not d!4709) (not b!24877) (not b!24060) (not bm!2054) (not b!23904) (not b!24089) (not d!4385) (not b!24311) (not b!24149) (not d!4213) (not bm!2088) (not b!24438) (not b!24736) (not b!24326) (not b!24883) (not b!24916) (not b!24524) (not b!24230) (not d!4507) (not b!24451) (not b!23965) (not b!23944) (not b!24455) (not d!4431) (not b!24243) (not b!24633) (not d!4703) (not bm!2047) (not b!24443) (not b!24454) (not b!24123) (not b!23986) (not b!24854) (not b!24533) (not bm!2209) (not d!4771) (not b!24867) (not d!4437) (not d!4245) (not b!24979) (not d!4705) (not d!4369) (not d!4481) (not d!4165) (not b!24889) (not b!23958) (not b!23939) (not d!4135) (not b!24494) (not d!4153) (not b!24074) (not d!4697) (not b_lambda!1601) (not bm!2204) (not b!24042) (not b!24973) (not b!24648) (not d!4465) (not d!4229) (not b!24350) (not b!24130) (not d!4661) (not d!4233) (not b!23964) (not b!24756) (not d!4193) (not d!4163) (not d!4323) (not d!4725) (not b!24027) (not d!4349) (not b!24945) (not b!24251) (not b!24583) (not d!4721) (not b!24431) (not d!4583))
(check-sat b_and!1555 (not b_next!759))
