; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!10518 () Bool)

(assert start!10518)

(declare-fun b!82790 () Bool)

(declare-fun b_free!2221 () Bool)

(declare-fun b_next!2221 () Bool)

(assert (=> b!82790 (= b_free!2221 (not b_next!2221))))

(declare-fun tp!8880 () Bool)

(declare-fun b_and!5037 () Bool)

(assert (=> b!82790 (= tp!8880 b_and!5037)))

(declare-fun b!82787 () Bool)

(declare-fun b_free!2223 () Bool)

(declare-fun b_next!2223 () Bool)

(assert (=> b!82787 (= b_free!2223 (not b_next!2223))))

(declare-fun tp!8882 () Bool)

(declare-fun b_and!5039 () Bool)

(assert (=> b!82787 (= tp!8882 b_and!5039)))

(declare-fun b!82775 () Bool)

(declare-fun e!54033 () Bool)

(declare-fun e!54036 () Bool)

(declare-fun mapRes!3367 () Bool)

(assert (=> b!82775 (= e!54033 (and e!54036 mapRes!3367))))

(declare-fun condMapEmpty!3367 () Bool)

(declare-datatypes ((V!3017 0))(
  ( (V!3018 (val!1308 Int)) )
))
(declare-datatypes ((array!3997 0))(
  ( (array!3998 (arr!1904 (Array (_ BitVec 32) (_ BitVec 64))) (size!2147 (_ BitVec 32))) )
))
(declare-datatypes ((ValueCell!920 0))(
  ( (ValueCellFull!920 (v!2631 V!3017)) (EmptyCell!920) )
))
(declare-datatypes ((array!3999 0))(
  ( (array!4000 (arr!1905 (Array (_ BitVec 32) ValueCell!920)) (size!2148 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!748 0))(
  ( (LongMapFixedSize!749 (defaultEntry!2316 Int) (mask!6334 (_ BitVec 32)) (extraKeys!2159 (_ BitVec 32)) (zeroValue!2210 V!3017) (minValue!2210 V!3017) (_size!423 (_ BitVec 32)) (_keys!3984 array!3997) (_values!2299 array!3999) (_vacant!423 (_ BitVec 32))) )
))
(declare-fun newMap!16 () LongMapFixedSize!748)

(declare-fun mapDefault!3368 () ValueCell!920)

(assert (=> b!82775 (= condMapEmpty!3367 (= (arr!1905 (_values!2299 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!920)) mapDefault!3368)))))

(declare-fun b!82776 () Bool)

(declare-fun e!54037 () Bool)

(declare-fun e!54050 () Bool)

(assert (=> b!82776 (= e!54037 e!54050)))

(declare-fun res!42892 () Bool)

(assert (=> b!82776 (=> (not res!42892) (not e!54050))))

(declare-datatypes ((Cell!556 0))(
  ( (Cell!557 (v!2632 LongMapFixedSize!748)) )
))
(declare-datatypes ((LongMap!556 0))(
  ( (LongMap!557 (underlying!289 Cell!556)) )
))
(declare-fun thiss!992 () LongMap!556)

(declare-fun from!355 () (_ BitVec 32))

(assert (=> b!82776 (= res!42892 (and (not (= (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!38784 () V!3017)

(declare-fun get!1198 (ValueCell!920 V!3017) V!3017)

(declare-fun dynLambda!343 (Int (_ BitVec 64)) V!3017)

(assert (=> b!82776 (= lt!38784 (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) from!355) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!82777 () Bool)

(declare-fun e!54049 () Bool)

(declare-fun e!54044 () Bool)

(assert (=> b!82777 (= e!54049 e!54044)))

(declare-fun res!42888 () Bool)

(declare-fun e!54040 () Bool)

(assert (=> start!10518 (=> (not res!42888) (not e!54040))))

(declare-fun valid!333 (LongMap!556) Bool)

(assert (=> start!10518 (= res!42888 (valid!333 thiss!992))))

(assert (=> start!10518 e!54040))

(assert (=> start!10518 e!54049))

(assert (=> start!10518 true))

(declare-fun e!54048 () Bool)

(assert (=> start!10518 e!54048))

(declare-fun b!82778 () Bool)

(declare-datatypes ((Unit!2413 0))(
  ( (Unit!2414) )
))
(declare-fun e!54045 () Unit!2413)

(declare-fun Unit!2415 () Unit!2413)

(assert (=> b!82778 (= e!54045 Unit!2415)))

(declare-fun b!82779 () Bool)

(declare-fun e!54043 () Bool)

(assert (=> b!82779 (= e!54050 e!54043)))

(declare-fun res!42894 () Bool)

(assert (=> b!82779 (=> (not res!42894) (not e!54043))))

(declare-datatypes ((tuple2!2180 0))(
  ( (tuple2!2181 (_1!1101 Bool) (_2!1101 LongMapFixedSize!748)) )
))
(declare-fun lt!38778 () tuple2!2180)

(assert (=> b!82779 (= res!42894 (and (_1!1101 lt!38778) (bvsgt from!355 #b00000000000000000000000000000000)))))

(declare-fun lt!38767 () Unit!2413)

(assert (=> b!82779 (= lt!38767 e!54045)))

(declare-datatypes ((tuple2!2182 0))(
  ( (tuple2!2183 (_1!1102 (_ BitVec 64)) (_2!1102 V!3017)) )
))
(declare-datatypes ((List!1504 0))(
  ( (Nil!1501) (Cons!1500 (h!2090 tuple2!2182) (t!5196 List!1504)) )
))
(declare-datatypes ((ListLongMap!1437 0))(
  ( (ListLongMap!1438 (toList!734 List!1504)) )
))
(declare-fun lt!38770 () ListLongMap!1437)

(declare-fun c!13173 () Bool)

(declare-fun contains!744 (ListLongMap!1437 (_ BitVec 64)) Bool)

(assert (=> b!82779 (= c!13173 (contains!744 lt!38770 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))

(declare-fun update!122 (LongMapFixedSize!748 (_ BitVec 64) V!3017) tuple2!2180)

(assert (=> b!82779 (= lt!38778 (update!122 newMap!16 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))

(declare-fun mapIsEmpty!3367 () Bool)

(assert (=> mapIsEmpty!3367 mapRes!3367))

(declare-fun b!82780 () Bool)

(declare-fun e!54042 () Bool)

(assert (=> b!82780 (= e!54043 (not e!54042))))

(declare-fun res!42889 () Bool)

(assert (=> b!82780 (=> res!42889 e!54042)))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> b!82780 (= res!42889 (not (validMask!0 (mask!6334 (v!2632 (underlying!289 thiss!992))))))))

(declare-fun lt!38775 () tuple2!2182)

(declare-fun lt!38768 () ListLongMap!1437)

(declare-fun lt!38773 () ListLongMap!1437)

(declare-fun lt!38779 () tuple2!2182)

(declare-fun +!105 (ListLongMap!1437 tuple2!2182) ListLongMap!1437)

(assert (=> b!82780 (= (+!105 lt!38768 lt!38779) (+!105 (+!105 lt!38773 lt!38779) lt!38775))))

(assert (=> b!82780 (= lt!38779 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))

(declare-fun lt!38769 () Unit!2413)

(declare-fun addCommutativeForDiffKeys!25 (ListLongMap!1437 (_ BitVec 64) V!3017 (_ BitVec 64) V!3017) Unit!2413)

(assert (=> b!82780 (= lt!38769 (addCommutativeForDiffKeys!25 lt!38773 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))

(declare-fun lt!38781 () ListLongMap!1437)

(assert (=> b!82780 (= lt!38781 lt!38768)))

(assert (=> b!82780 (= lt!38768 (+!105 lt!38773 lt!38775))))

(declare-fun lt!38783 () ListLongMap!1437)

(declare-fun lt!38772 () tuple2!2182)

(assert (=> b!82780 (= lt!38781 (+!105 lt!38783 lt!38772))))

(declare-fun lt!38771 () ListLongMap!1437)

(assert (=> b!82780 (= lt!38773 (+!105 lt!38771 lt!38772))))

(assert (=> b!82780 (= lt!38772 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))

(assert (=> b!82780 (= lt!38783 (+!105 lt!38771 lt!38775))))

(assert (=> b!82780 (= lt!38775 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))

(declare-fun lt!38774 () Unit!2413)

(assert (=> b!82780 (= lt!38774 (addCommutativeForDiffKeys!25 lt!38771 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))

(declare-fun getCurrentListMapNoExtraKeys!70 (array!3997 array!3999 (_ BitVec 32) (_ BitVec 32) V!3017 V!3017 (_ BitVec 32) Int) ListLongMap!1437)

(assert (=> b!82780 (= lt!38771 (getCurrentListMapNoExtraKeys!70 (_keys!3984 (v!2632 (underlying!289 thiss!992))) (_values!2299 (v!2632 (underlying!289 thiss!992))) (mask!6334 (v!2632 (underlying!289 thiss!992))) (extraKeys!2159 (v!2632 (underlying!289 thiss!992))) (zeroValue!2210 (v!2632 (underlying!289 thiss!992))) (minValue!2210 (v!2632 (underlying!289 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2316 (v!2632 (underlying!289 thiss!992)))))))

(declare-fun mapNonEmpty!3367 () Bool)

(declare-fun mapRes!3368 () Bool)

(declare-fun tp!8879 () Bool)

(declare-fun e!54046 () Bool)

(assert (=> mapNonEmpty!3367 (= mapRes!3368 (and tp!8879 e!54046))))

(declare-fun mapValue!3368 () ValueCell!920)

(declare-fun mapKey!3368 () (_ BitVec 32))

(declare-fun mapRest!3367 () (Array (_ BitVec 32) ValueCell!920))

(assert (=> mapNonEmpty!3367 (= (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (store mapRest!3367 mapKey!3368 mapValue!3368))))

(declare-fun b!82781 () Bool)

(declare-fun tp_is_empty!2527 () Bool)

(assert (=> b!82781 (= e!54046 tp_is_empty!2527)))

(declare-fun b!82782 () Bool)

(assert (=> b!82782 (= e!54042 (or (not (= (size!2148 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 (mask!6334 (v!2632 (underlying!289 thiss!992)))))) (not (= (size!2147 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (size!2148 (_values!2299 (v!2632 (underlying!289 thiss!992)))))) (bvslt (mask!6334 (v!2632 (underlying!289 thiss!992))) #b00000000000000000000000000000000) (bvsge (extraKeys!2159 (v!2632 (underlying!289 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun b!82783 () Bool)

(declare-fun res!42893 () Bool)

(assert (=> b!82783 (=> (not res!42893) (not e!54040))))

(assert (=> b!82783 (= res!42893 (bvsge (bvadd #b00000000000000000000000000000001 (mask!6334 newMap!16)) (_size!423 (v!2632 (underlying!289 thiss!992)))))))

(declare-fun b!82784 () Bool)

(declare-fun e!54039 () Bool)

(assert (=> b!82784 (= e!54039 tp_is_empty!2527)))

(declare-fun b!82785 () Bool)

(declare-fun e!54034 () Bool)

(declare-fun e!54035 () Bool)

(assert (=> b!82785 (= e!54034 (and e!54035 mapRes!3368))))

(declare-fun condMapEmpty!3368 () Bool)

(declare-fun mapDefault!3367 () ValueCell!920)

(assert (=> b!82785 (= condMapEmpty!3368 (= (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!920)) mapDefault!3367)))))

(declare-fun b!82786 () Bool)

(declare-fun Unit!2416 () Unit!2413)

(assert (=> b!82786 (= e!54045 Unit!2416)))

(declare-fun lt!38777 () Unit!2413)

(declare-fun lemmaListMapContainsThenArrayContainsFrom!57 (array!3997 array!3999 (_ BitVec 32) (_ BitVec 32) V!3017 V!3017 (_ BitVec 64) (_ BitVec 32) Int) Unit!2413)

(assert (=> b!82786 (= lt!38777 (lemmaListMapContainsThenArrayContainsFrom!57 (_keys!3984 (v!2632 (underlying!289 thiss!992))) (_values!2299 (v!2632 (underlying!289 thiss!992))) (mask!6334 (v!2632 (underlying!289 thiss!992))) (extraKeys!2159 (v!2632 (underlying!289 thiss!992))) (zeroValue!2210 (v!2632 (underlying!289 thiss!992))) (minValue!2210 (v!2632 (underlying!289 thiss!992))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2316 (v!2632 (underlying!289 thiss!992)))))))

(declare-fun arrayContainsKey!0 (array!3997 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> b!82786 (arrayContainsKey!0 (_keys!3984 (v!2632 (underlying!289 thiss!992))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355))))

(declare-fun lt!38782 () Unit!2413)

(declare-fun lemmaNoDuplicateFromThenFromBigger!0 (array!3997 (_ BitVec 32) (_ BitVec 32)) Unit!2413)

(assert (=> b!82786 (= lt!38782 (lemmaNoDuplicateFromThenFromBigger!0 (_keys!3984 (v!2632 (underlying!289 thiss!992))) #b00000000000000000000000000000000 from!355))))

(declare-datatypes ((List!1505 0))(
  ( (Nil!1502) (Cons!1501 (h!2091 (_ BitVec 64)) (t!5197 List!1505)) )
))
(declare-fun arrayNoDuplicates!0 (array!3997 (_ BitVec 32) List!1505) Bool)

(assert (=> b!82786 (arrayNoDuplicates!0 (_keys!3984 (v!2632 (underlying!289 thiss!992))) from!355 Nil!1502)))

(declare-fun lt!38776 () Unit!2413)

(declare-fun lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (array!3997 (_ BitVec 32) (_ BitVec 64) List!1505) Unit!2413)

(assert (=> b!82786 (= lt!38776 (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!3984 (v!2632 (underlying!289 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (Cons!1501 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) Nil!1502)))))

(assert (=> b!82786 false))

(declare-fun array_inv!1175 (array!3997) Bool)

(declare-fun array_inv!1176 (array!3999) Bool)

(assert (=> b!82787 (= e!54048 (and tp!8882 tp_is_empty!2527 (array_inv!1175 (_keys!3984 newMap!16)) (array_inv!1176 (_values!2299 newMap!16)) e!54033))))

(declare-fun b!82788 () Bool)

(declare-fun e!54038 () Bool)

(assert (=> b!82788 (= e!54044 e!54038)))

(declare-fun b!82789 () Bool)

(assert (=> b!82789 (= e!54040 e!54037)))

(declare-fun res!42891 () Bool)

(assert (=> b!82789 (=> (not res!42891) (not e!54037))))

(declare-fun lt!38780 () ListLongMap!1437)

(assert (=> b!82789 (= res!42891 (= lt!38780 lt!38770))))

(declare-fun map!1193 (LongMapFixedSize!748) ListLongMap!1437)

(assert (=> b!82789 (= lt!38770 (map!1193 newMap!16))))

(declare-fun getCurrentListMap!429 (array!3997 array!3999 (_ BitVec 32) (_ BitVec 32) V!3017 V!3017 (_ BitVec 32) Int) ListLongMap!1437)

(assert (=> b!82789 (= lt!38780 (getCurrentListMap!429 (_keys!3984 (v!2632 (underlying!289 thiss!992))) (_values!2299 (v!2632 (underlying!289 thiss!992))) (mask!6334 (v!2632 (underlying!289 thiss!992))) (extraKeys!2159 (v!2632 (underlying!289 thiss!992))) (zeroValue!2210 (v!2632 (underlying!289 thiss!992))) (minValue!2210 (v!2632 (underlying!289 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2316 (v!2632 (underlying!289 thiss!992)))))))

(assert (=> b!82790 (= e!54038 (and tp!8880 tp_is_empty!2527 (array_inv!1175 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (array_inv!1176 (_values!2299 (v!2632 (underlying!289 thiss!992)))) e!54034))))

(declare-fun b!82791 () Bool)

(declare-fun res!42895 () Bool)

(assert (=> b!82791 (=> (not res!42895) (not e!54040))))

(assert (=> b!82791 (= res!42895 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2147 (_keys!3984 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun mapIsEmpty!3368 () Bool)

(assert (=> mapIsEmpty!3368 mapRes!3368))

(declare-fun b!82792 () Bool)

(declare-fun res!42890 () Bool)

(assert (=> b!82792 (=> (not res!42890) (not e!54040))))

(declare-fun valid!334 (LongMapFixedSize!748) Bool)

(assert (=> b!82792 (= res!42890 (valid!334 newMap!16))))

(declare-fun b!82793 () Bool)

(assert (=> b!82793 (= e!54036 tp_is_empty!2527)))

(declare-fun mapNonEmpty!3368 () Bool)

(declare-fun tp!8881 () Bool)

(assert (=> mapNonEmpty!3368 (= mapRes!3367 (and tp!8881 e!54039))))

(declare-fun mapKey!3367 () (_ BitVec 32))

(declare-fun mapValue!3367 () ValueCell!920)

(declare-fun mapRest!3368 () (Array (_ BitVec 32) ValueCell!920))

(assert (=> mapNonEmpty!3368 (= (arr!1905 (_values!2299 newMap!16)) (store mapRest!3368 mapKey!3367 mapValue!3367))))

(declare-fun b!82794 () Bool)

(assert (=> b!82794 (= e!54035 tp_is_empty!2527)))

(assert (= (and start!10518 res!42888) b!82791))

(assert (= (and b!82791 res!42895) b!82792))

(assert (= (and b!82792 res!42890) b!82783))

(assert (= (and b!82783 res!42893) b!82789))

(assert (= (and b!82789 res!42891) b!82776))

(assert (= (and b!82776 res!42892) b!82779))

(assert (= (and b!82779 c!13173) b!82786))

(assert (= (and b!82779 (not c!13173)) b!82778))

(assert (= (and b!82779 res!42894) b!82780))

(assert (= (and b!82780 (not res!42889)) b!82782))

(assert (= (and b!82785 condMapEmpty!3368) mapIsEmpty!3368))

(assert (= (and b!82785 (not condMapEmpty!3368)) mapNonEmpty!3367))

(get-info :version)

(assert (= (and mapNonEmpty!3367 ((_ is ValueCellFull!920) mapValue!3368)) b!82781))

(assert (= (and b!82785 ((_ is ValueCellFull!920) mapDefault!3367)) b!82794))

(assert (= b!82790 b!82785))

(assert (= b!82788 b!82790))

(assert (= b!82777 b!82788))

(assert (= start!10518 b!82777))

(assert (= (and b!82775 condMapEmpty!3367) mapIsEmpty!3367))

(assert (= (and b!82775 (not condMapEmpty!3367)) mapNonEmpty!3368))

(assert (= (and mapNonEmpty!3368 ((_ is ValueCellFull!920) mapValue!3367)) b!82784))

(assert (= (and b!82775 ((_ is ValueCellFull!920) mapDefault!3368)) b!82793))

(assert (= b!82787 b!82775))

(assert (= start!10518 b!82787))

(declare-fun b_lambda!3691 () Bool)

(assert (=> (not b_lambda!3691) (not b!82776)))

(declare-fun t!5193 () Bool)

(declare-fun tb!1661 () Bool)

(assert (=> (and b!82790 (= (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) (defaultEntry!2316 (v!2632 (underlying!289 thiss!992)))) t!5193) tb!1661))

(declare-fun result!2875 () Bool)

(assert (=> tb!1661 (= result!2875 tp_is_empty!2527)))

(assert (=> b!82776 t!5193))

(declare-fun b_and!5041 () Bool)

(assert (= b_and!5037 (and (=> t!5193 result!2875) b_and!5041)))

(declare-fun t!5195 () Bool)

(declare-fun tb!1663 () Bool)

(assert (=> (and b!82787 (= (defaultEntry!2316 newMap!16) (defaultEntry!2316 (v!2632 (underlying!289 thiss!992)))) t!5195) tb!1663))

(declare-fun result!2879 () Bool)

(assert (= result!2879 result!2875))

(assert (=> b!82776 t!5195))

(declare-fun b_and!5043 () Bool)

(assert (= b_and!5039 (and (=> t!5195 result!2879) b_and!5043)))

(declare-fun m!85721 () Bool)

(assert (=> b!82776 m!85721))

(declare-fun m!85723 () Bool)

(assert (=> b!82776 m!85723))

(declare-fun m!85725 () Bool)

(assert (=> b!82776 m!85725))

(assert (=> b!82776 m!85723))

(assert (=> b!82776 m!85725))

(declare-fun m!85727 () Bool)

(assert (=> b!82776 m!85727))

(assert (=> b!82779 m!85721))

(assert (=> b!82779 m!85721))

(declare-fun m!85729 () Bool)

(assert (=> b!82779 m!85729))

(assert (=> b!82779 m!85721))

(declare-fun m!85731 () Bool)

(assert (=> b!82779 m!85731))

(declare-fun m!85733 () Bool)

(assert (=> b!82787 m!85733))

(declare-fun m!85735 () Bool)

(assert (=> b!82787 m!85735))

(declare-fun m!85737 () Bool)

(assert (=> b!82786 m!85737))

(declare-fun m!85739 () Bool)

(assert (=> b!82786 m!85739))

(assert (=> b!82786 m!85721))

(declare-fun m!85741 () Bool)

(assert (=> b!82786 m!85741))

(assert (=> b!82786 m!85721))

(assert (=> b!82786 m!85721))

(declare-fun m!85743 () Bool)

(assert (=> b!82786 m!85743))

(assert (=> b!82786 m!85721))

(declare-fun m!85745 () Bool)

(assert (=> b!82786 m!85745))

(declare-fun m!85747 () Bool)

(assert (=> b!82789 m!85747))

(declare-fun m!85749 () Bool)

(assert (=> b!82789 m!85749))

(declare-fun m!85751 () Bool)

(assert (=> b!82792 m!85751))

(declare-fun m!85753 () Bool)

(assert (=> b!82790 m!85753))

(declare-fun m!85755 () Bool)

(assert (=> b!82790 m!85755))

(assert (=> b!82780 m!85721))

(declare-fun m!85757 () Bool)

(assert (=> b!82780 m!85757))

(declare-fun m!85759 () Bool)

(assert (=> b!82780 m!85759))

(declare-fun m!85761 () Bool)

(assert (=> b!82780 m!85761))

(declare-fun m!85763 () Bool)

(assert (=> b!82780 m!85763))

(declare-fun m!85765 () Bool)

(assert (=> b!82780 m!85765))

(assert (=> b!82780 m!85721))

(assert (=> b!82780 m!85721))

(declare-fun m!85767 () Bool)

(assert (=> b!82780 m!85767))

(declare-fun m!85769 () Bool)

(assert (=> b!82780 m!85769))

(declare-fun m!85771 () Bool)

(assert (=> b!82780 m!85771))

(declare-fun m!85773 () Bool)

(assert (=> b!82780 m!85773))

(declare-fun m!85775 () Bool)

(assert (=> b!82780 m!85775))

(assert (=> b!82780 m!85759))

(declare-fun m!85777 () Bool)

(assert (=> b!82780 m!85777))

(declare-fun m!85779 () Bool)

(assert (=> mapNonEmpty!3367 m!85779))

(declare-fun m!85781 () Bool)

(assert (=> start!10518 m!85781))

(declare-fun m!85783 () Bool)

(assert (=> mapNonEmpty!3368 m!85783))

(check-sat (not b!82776) b_and!5043 (not b!82792) (not mapNonEmpty!3368) (not b_next!2221) (not b_lambda!3691) (not b!82780) (not b!82779) (not b!82787) (not mapNonEmpty!3367) (not b!82790) (not start!10518) b_and!5041 (not b!82789) (not b!82786) tp_is_empty!2527 (not b_next!2223))
(check-sat b_and!5041 b_and!5043 (not b_next!2221) (not b_next!2223))
(get-model)

(declare-fun b_lambda!3697 () Bool)

(assert (= b_lambda!3691 (or (and b!82790 b_free!2221) (and b!82787 b_free!2223 (= (defaultEntry!2316 newMap!16) (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))))) b_lambda!3697)))

(check-sat (not b!82776) b_and!5043 (not b!82792) (not mapNonEmpty!3368) (not b!82780) (not b!82779) (not b!82787) (not mapNonEmpty!3367) (not b!82790) (not start!10518) b_and!5041 (not b!82789) (not b!82786) (not b_next!2221) (not b_lambda!3697) tp_is_empty!2527 (not b_next!2223))
(check-sat b_and!5041 b_and!5043 (not b_next!2221) (not b_next!2223))
(get-model)

(declare-fun d!20897 () Bool)

(declare-fun res!42950 () Bool)

(declare-fun e!54161 () Bool)

(assert (=> d!20897 (=> (not res!42950) (not e!54161))))

(declare-fun simpleValid!57 (LongMapFixedSize!748) Bool)

(assert (=> d!20897 (= res!42950 (simpleValid!57 newMap!16))))

(assert (=> d!20897 (= (valid!334 newMap!16) e!54161)))

(declare-fun b!82927 () Bool)

(declare-fun res!42951 () Bool)

(assert (=> b!82927 (=> (not res!42951) (not e!54161))))

(declare-fun arrayCountValidKeys!0 (array!3997 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!82927 (= res!42951 (= (arrayCountValidKeys!0 (_keys!3984 newMap!16) #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))) (_size!423 newMap!16)))))

(declare-fun b!82928 () Bool)

(declare-fun res!42952 () Bool)

(assert (=> b!82928 (=> (not res!42952) (not e!54161))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!3997 (_ BitVec 32)) Bool)

(assert (=> b!82928 (= res!42952 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3984 newMap!16) (mask!6334 newMap!16)))))

(declare-fun b!82929 () Bool)

(assert (=> b!82929 (= e!54161 (arrayNoDuplicates!0 (_keys!3984 newMap!16) #b00000000000000000000000000000000 Nil!1502))))

(assert (= (and d!20897 res!42950) b!82927))

(assert (= (and b!82927 res!42951) b!82928))

(assert (= (and b!82928 res!42952) b!82929))

(declare-fun m!85913 () Bool)

(assert (=> d!20897 m!85913))

(declare-fun m!85915 () Bool)

(assert (=> b!82927 m!85915))

(declare-fun m!85917 () Bool)

(assert (=> b!82928 m!85917))

(declare-fun m!85919 () Bool)

(assert (=> b!82929 m!85919))

(assert (=> b!82792 d!20897))

(declare-fun d!20899 () Bool)

(declare-fun e!54167 () Bool)

(assert (=> d!20899 e!54167))

(declare-fun res!42955 () Bool)

(assert (=> d!20899 (=> res!42955 e!54167)))

(declare-fun lt!38901 () Bool)

(assert (=> d!20899 (= res!42955 (not lt!38901))))

(declare-fun lt!38904 () Bool)

(assert (=> d!20899 (= lt!38901 lt!38904)))

(declare-fun lt!38903 () Unit!2413)

(declare-fun e!54166 () Unit!2413)

(assert (=> d!20899 (= lt!38903 e!54166)))

(declare-fun c!13182 () Bool)

(assert (=> d!20899 (= c!13182 lt!38904)))

(declare-fun containsKey!143 (List!1504 (_ BitVec 64)) Bool)

(assert (=> d!20899 (= lt!38904 (containsKey!143 (toList!734 lt!38770) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))

(assert (=> d!20899 (= (contains!744 lt!38770 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) lt!38901)))

(declare-fun b!82936 () Bool)

(declare-fun lt!38902 () Unit!2413)

(assert (=> b!82936 (= e!54166 lt!38902)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!91 (List!1504 (_ BitVec 64)) Unit!2413)

(assert (=> b!82936 (= lt!38902 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 lt!38770) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))

(declare-datatypes ((Option!146 0))(
  ( (Some!145 (v!2638 V!3017)) (None!144) )
))
(declare-fun isDefined!92 (Option!146) Bool)

(declare-fun getValueByKey!140 (List!1504 (_ BitVec 64)) Option!146)

(assert (=> b!82936 (isDefined!92 (getValueByKey!140 (toList!734 lt!38770) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))

(declare-fun b!82937 () Bool)

(declare-fun Unit!2421 () Unit!2413)

(assert (=> b!82937 (= e!54166 Unit!2421)))

(declare-fun b!82938 () Bool)

(assert (=> b!82938 (= e!54167 (isDefined!92 (getValueByKey!140 (toList!734 lt!38770) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355))))))

(assert (= (and d!20899 c!13182) b!82936))

(assert (= (and d!20899 (not c!13182)) b!82937))

(assert (= (and d!20899 (not res!42955)) b!82938))

(assert (=> d!20899 m!85721))

(declare-fun m!85921 () Bool)

(assert (=> d!20899 m!85921))

(assert (=> b!82936 m!85721))

(declare-fun m!85923 () Bool)

(assert (=> b!82936 m!85923))

(assert (=> b!82936 m!85721))

(declare-fun m!85925 () Bool)

(assert (=> b!82936 m!85925))

(assert (=> b!82936 m!85925))

(declare-fun m!85927 () Bool)

(assert (=> b!82936 m!85927))

(assert (=> b!82938 m!85721))

(assert (=> b!82938 m!85925))

(assert (=> b!82938 m!85925))

(assert (=> b!82938 m!85927))

(assert (=> b!82779 d!20899))

(declare-datatypes ((SeekEntryResult!236 0))(
  ( (MissingZero!236 (index!3080 (_ BitVec 32))) (Found!236 (index!3081 (_ BitVec 32))) (Intermediate!236 (undefined!1048 Bool) (index!3082 (_ BitVec 32)) (x!11845 (_ BitVec 32))) (Undefined!236) (MissingVacant!236 (index!3083 (_ BitVec 32))) )
))
(declare-fun lt!38961 () SeekEntryResult!236)

(declare-fun c!13215 () Bool)

(declare-fun c!13217 () Bool)

(declare-fun lt!38985 () (_ BitVec 32))

(declare-fun c!13224 () Bool)

(declare-fun call!7772 () ListLongMap!1437)

(declare-fun bm!7748 () Bool)

(declare-fun lt!38982 () (_ BitVec 32))

(assert (=> bm!7748 (= call!7772 (getCurrentListMap!429 (_keys!3984 newMap!16) (ite (or c!13224 c!13217) (_values!2299 newMap!16) (array!4000 (store (arr!1905 (_values!2299 newMap!16)) (index!3081 lt!38961) (ValueCellFull!920 lt!38784)) (size!2148 (_values!2299 newMap!16)))) (mask!6334 newMap!16) (ite c!13224 (ite c!13215 lt!38982 lt!38985) (extraKeys!2159 newMap!16)) (ite (and c!13224 c!13215) lt!38784 (zeroValue!2210 newMap!16)) (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun b!83023 () Bool)

(declare-fun lt!38979 () Unit!2413)

(declare-fun lt!38983 () Unit!2413)

(assert (=> b!83023 (= lt!38979 lt!38983)))

(declare-fun call!7768 () ListLongMap!1437)

(declare-fun call!7771 () ListLongMap!1437)

(assert (=> b!83023 (= call!7768 call!7771)))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!30 (array!3997 array!3999 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3017 V!3017 V!3017 Int) Unit!2413)

(assert (=> b!83023 (= lt!38983 (lemmaChangeZeroKeyThenAddPairToListMap!30 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) lt!38982 (zeroValue!2210 newMap!16) lt!38784 (minValue!2210 newMap!16) (defaultEntry!2316 newMap!16)))))

(assert (=> b!83023 (= lt!38982 (bvor (extraKeys!2159 newMap!16) #b00000000000000000000000000000001))))

(declare-fun e!54230 () tuple2!2180)

(assert (=> b!83023 (= e!54230 (tuple2!2181 true (LongMapFixedSize!749 (defaultEntry!2316 newMap!16) (mask!6334 newMap!16) (bvor (extraKeys!2159 newMap!16) #b00000000000000000000000000000001) lt!38784 (minValue!2210 newMap!16) (_size!423 newMap!16) (_keys!3984 newMap!16) (_values!2299 newMap!16) (_vacant!423 newMap!16))))))

(declare-fun b!83024 () Bool)

(declare-fun res!42984 () Bool)

(declare-fun e!54232 () Bool)

(assert (=> b!83024 (=> (not res!42984) (not e!54232))))

(declare-fun lt!38963 () SeekEntryResult!236)

(assert (=> b!83024 (= res!42984 (= (select (arr!1904 (_keys!3984 newMap!16)) (index!3080 lt!38963)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!83025 () Bool)

(declare-fun e!54217 () tuple2!2180)

(assert (=> b!83025 (= e!54217 e!54230)))

(assert (=> b!83025 (= c!13215 (= (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!83026 () Bool)

(declare-fun res!42986 () Bool)

(declare-fun e!54214 () Bool)

(assert (=> b!83026 (=> (not res!42986) (not e!54214))))

(declare-fun call!7770 () Bool)

(assert (=> b!83026 (= res!42986 call!7770)))

(declare-fun e!54233 () Bool)

(assert (=> b!83026 (= e!54233 e!54214)))

(declare-fun b!83027 () Bool)

(declare-fun e!54220 () tuple2!2180)

(declare-fun lt!38959 () tuple2!2180)

(assert (=> b!83027 (= e!54220 (tuple2!2181 (_1!1101 lt!38959) (_2!1101 lt!38959)))))

(declare-fun call!7760 () tuple2!2180)

(assert (=> b!83027 (= lt!38959 call!7760)))

(declare-fun b!83028 () Bool)

(declare-fun e!54215 () Bool)

(declare-fun call!7753 () Bool)

(assert (=> b!83028 (= e!54215 (not call!7753))))

(declare-fun bm!7749 () Bool)

(declare-fun call!7764 () Bool)

(declare-fun call!7761 () Bool)

(assert (=> bm!7749 (= call!7764 call!7761)))

(declare-fun b!83029 () Bool)

(declare-fun res!42985 () Bool)

(declare-fun call!7758 () Bool)

(assert (=> b!83029 (= res!42985 call!7758)))

(declare-fun e!54223 () Bool)

(assert (=> b!83029 (=> (not res!42985) (not e!54223))))

(declare-fun b!83030 () Bool)

(declare-fun res!42994 () Bool)

(assert (=> b!83030 (=> (not res!42994) (not e!54232))))

(assert (=> b!83030 (= res!42994 call!7764)))

(declare-fun e!54221 () Bool)

(assert (=> b!83030 (= e!54221 e!54232)))

(declare-fun bm!7750 () Bool)

(declare-fun c!13222 () Bool)

(assert (=> bm!7750 (= c!13222 c!13217)))

(declare-fun call!7763 () Bool)

(declare-fun e!54228 () ListLongMap!1437)

(assert (=> bm!7750 (= call!7763 (contains!744 e!54228 (ite c!13217 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (select (arr!1904 (_keys!3984 newMap!16)) (index!3081 lt!38961)))))))

(declare-fun b!83031 () Bool)

(declare-fun e!54227 () Bool)

(declare-fun e!54226 () Bool)

(assert (=> b!83031 (= e!54227 e!54226)))

(declare-fun res!42996 () Bool)

(assert (=> b!83031 (= res!42996 call!7770)))

(assert (=> b!83031 (=> (not res!42996) (not e!54226))))

(declare-fun b!83032 () Bool)

(declare-fun lt!38984 () SeekEntryResult!236)

(assert (=> b!83032 (= e!54223 (= (select (arr!1904 (_keys!3984 newMap!16)) (index!3081 lt!38984)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))

(declare-fun bm!7751 () Bool)

(declare-fun call!7773 () Unit!2413)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!30 (array!3997 array!3999 (_ BitVec 32) (_ BitVec 32) V!3017 V!3017 (_ BitVec 64) Int) Unit!2413)

(assert (=> bm!7751 (= call!7773 (lemmaInListMapThenSeekEntryOrOpenFindsIt!30 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (defaultEntry!2316 newMap!16)))))

(declare-fun b!83033 () Bool)

(declare-fun res!42995 () Bool)

(assert (=> b!83033 (=> (not res!42995) (not e!54214))))

(declare-fun lt!38981 () SeekEntryResult!236)

(assert (=> b!83033 (= res!42995 (= (select (arr!1904 (_keys!3984 newMap!16)) (index!3080 lt!38981)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7752 () Bool)

(assert (=> bm!7752 (= call!7770 call!7758)))

(declare-fun bm!7753 () Bool)

(declare-fun call!7767 () Bool)

(assert (=> bm!7753 (= call!7758 call!7767)))

(declare-fun b!83034 () Bool)

(declare-fun e!54216 () tuple2!2180)

(assert (=> b!83034 (= e!54220 e!54216)))

(declare-fun c!13219 () Bool)

(assert (=> b!83034 (= c!13219 ((_ is MissingZero!236) lt!38961))))

(declare-fun bm!7754 () Bool)

(declare-fun call!7774 () ListLongMap!1437)

(assert (=> bm!7754 (= call!7774 (map!1193 newMap!16))))

(declare-fun b!83035 () Bool)

(declare-fun c!13221 () Bool)

(assert (=> b!83035 (= c!13221 ((_ is MissingVacant!236) lt!38981))))

(assert (=> b!83035 (= e!54233 e!54227)))

(declare-fun d!20901 () Bool)

(declare-fun e!54222 () Bool)

(assert (=> d!20901 e!54222))

(declare-fun res!42991 () Bool)

(assert (=> d!20901 (=> (not res!42991) (not e!54222))))

(declare-fun lt!38973 () tuple2!2180)

(assert (=> d!20901 (= res!42991 (valid!334 (_2!1101 lt!38973)))))

(assert (=> d!20901 (= lt!38973 e!54217)))

(assert (=> d!20901 (= c!13224 (= (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (bvneg (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355))))))

(assert (=> d!20901 (valid!334 newMap!16)))

(assert (=> d!20901 (= (update!122 newMap!16 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784) lt!38973)))

(declare-fun b!83036 () Bool)

(declare-fun call!7752 () Bool)

(assert (=> b!83036 (= e!54214 (not call!7752))))

(declare-fun b!83037 () Bool)

(declare-fun e!54231 () Bool)

(declare-fun call!7756 () ListLongMap!1437)

(assert (=> b!83037 (= e!54231 (= call!7756 call!7774))))

(declare-fun bm!7755 () Bool)

(declare-fun lt!38974 () array!3999)

(declare-fun call!7762 () ListLongMap!1437)

(assert (=> bm!7755 (= call!7762 (getCurrentListMap!429 (_keys!3984 newMap!16) (ite c!13224 (_values!2299 newMap!16) lt!38974) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun b!83038 () Bool)

(declare-fun res!42992 () Bool)

(assert (=> b!83038 (= res!42992 call!7761)))

(declare-fun e!54225 () Bool)

(assert (=> b!83038 (=> (not res!42992) (not e!54225))))

(declare-fun b!83039 () Bool)

(assert (=> b!83039 (= e!54228 call!7762)))

(declare-fun b!83040 () Bool)

(declare-fun e!54229 () ListLongMap!1437)

(declare-fun call!7766 () ListLongMap!1437)

(assert (=> b!83040 (= e!54229 call!7766)))

(declare-fun b!83041 () Bool)

(assert (=> b!83041 (= e!54226 (not call!7752))))

(declare-fun b!83042 () Bool)

(assert (=> b!83042 (= e!54229 (getCurrentListMap!429 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun call!7769 () Bool)

(declare-fun bm!7756 () Bool)

(assert (=> bm!7756 (= call!7769 (arrayContainsKey!0 (_keys!3984 newMap!16) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!83043 () Bool)

(declare-fun e!54212 () Bool)

(assert (=> b!83043 (= e!54212 e!54215)))

(declare-fun res!42987 () Bool)

(assert (=> b!83043 (= res!42987 call!7764)))

(assert (=> b!83043 (=> (not res!42987) (not e!54215))))

(declare-fun b!83044 () Bool)

(declare-fun e!54213 () Unit!2413)

(declare-fun Unit!2422 () Unit!2413)

(assert (=> b!83044 (= e!54213 Unit!2422)))

(declare-fun lt!38968 () Unit!2413)

(declare-fun call!7757 () Unit!2413)

(assert (=> b!83044 (= lt!38968 call!7757)))

(declare-fun call!7751 () SeekEntryResult!236)

(assert (=> b!83044 (= lt!38963 call!7751)))

(declare-fun c!13223 () Bool)

(assert (=> b!83044 (= c!13223 ((_ is MissingZero!236) lt!38963))))

(assert (=> b!83044 e!54221))

(declare-fun lt!38975 () Unit!2413)

(assert (=> b!83044 (= lt!38975 lt!38968)))

(assert (=> b!83044 false))

(declare-fun b!83045 () Bool)

(declare-fun lt!38964 () Unit!2413)

(declare-fun lt!38960 () Unit!2413)

(assert (=> b!83045 (= lt!38964 lt!38960)))

(assert (=> b!83045 (= call!7768 call!7771)))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!30 (array!3997 array!3999 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3017 V!3017 V!3017 Int) Unit!2413)

(assert (=> b!83045 (= lt!38960 (lemmaChangeLongMinValueKeyThenAddPairToListMap!30 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) lt!38985 (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) lt!38784 (defaultEntry!2316 newMap!16)))))

(assert (=> b!83045 (= lt!38985 (bvor (extraKeys!2159 newMap!16) #b00000000000000000000000000000010))))

(assert (=> b!83045 (= e!54230 (tuple2!2181 true (LongMapFixedSize!749 (defaultEntry!2316 newMap!16) (mask!6334 newMap!16) (bvor (extraKeys!2159 newMap!16) #b00000000000000000000000000000010) (zeroValue!2210 newMap!16) lt!38784 (_size!423 newMap!16) (_keys!3984 newMap!16) (_values!2299 newMap!16) (_vacant!423 newMap!16))))))

(declare-fun b!83046 () Bool)

(declare-fun call!7765 () ListLongMap!1437)

(assert (=> b!83046 (= e!54228 call!7765)))

(declare-fun b!83047 () Bool)

(declare-fun c!13212 () Bool)

(assert (=> b!83047 (= c!13212 ((_ is MissingVacant!236) lt!38963))))

(assert (=> b!83047 (= e!54221 e!54212)))

(declare-fun bm!7757 () Bool)

(declare-fun call!7755 () SeekEntryResult!236)

(assert (=> bm!7757 (= call!7751 call!7755)))

(declare-fun b!83048 () Bool)

(declare-fun lt!38970 () Unit!2413)

(assert (=> b!83048 (= e!54213 lt!38970)))

(assert (=> b!83048 (= lt!38970 call!7773)))

(declare-fun lt!38969 () SeekEntryResult!236)

(assert (=> b!83048 (= lt!38969 call!7751)))

(declare-fun res!42989 () Bool)

(assert (=> b!83048 (= res!42989 ((_ is Found!236) lt!38969))))

(assert (=> b!83048 (=> (not res!42989) (not e!54225))))

(assert (=> b!83048 e!54225))

(declare-fun bm!7758 () Bool)

(declare-fun call!7754 () ListLongMap!1437)

(assert (=> bm!7758 (= call!7754 (+!105 e!54229 (ite c!13224 (ite c!13215 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(declare-fun c!13218 () Bool)

(assert (=> bm!7758 (= c!13218 c!13224)))

(declare-fun bm!7759 () Bool)

(assert (=> bm!7759 (= call!7752 call!7769)))

(declare-fun b!83049 () Bool)

(declare-fun lt!38962 () tuple2!2180)

(assert (=> b!83049 (= lt!38962 call!7760)))

(assert (=> b!83049 (= e!54216 (tuple2!2181 (_1!1101 lt!38962) (_2!1101 lt!38962)))))

(declare-fun c!13216 () Bool)

(declare-fun c!13213 () Bool)

(declare-fun bm!7760 () Bool)

(declare-fun c!13211 () Bool)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!7760 (= call!7767 (inRange!0 (ite c!13217 (ite c!13216 (index!3081 lt!38984) (ite c!13211 (index!3080 lt!38981) (index!3083 lt!38981))) (ite c!13213 (index!3081 lt!38969) (ite c!13223 (index!3080 lt!38963) (index!3083 lt!38963)))) (mask!6334 newMap!16)))))

(declare-fun b!83050 () Bool)

(declare-fun lt!38966 () Unit!2413)

(declare-fun e!54218 () Unit!2413)

(assert (=> b!83050 (= lt!38966 e!54218)))

(assert (=> b!83050 (= c!13216 call!7763)))

(declare-fun e!54219 () tuple2!2180)

(assert (=> b!83050 (= e!54219 (tuple2!2181 false newMap!16))))

(declare-fun bm!7761 () Bool)

(assert (=> bm!7761 (= call!7756 (map!1193 (_2!1101 lt!38973)))))

(declare-fun bm!7762 () Bool)

(assert (=> bm!7762 (= call!7753 call!7769)))

(declare-fun bm!7763 () Bool)

(declare-fun call!7759 () SeekEntryResult!236)

(assert (=> bm!7763 (= call!7759 call!7755)))

(declare-fun bm!7764 () Bool)

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!3997 (_ BitVec 32)) SeekEntryResult!236)

(assert (=> bm!7764 (= call!7755 (seekEntryOrOpen!0 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (_keys!3984 newMap!16) (mask!6334 newMap!16)))))

(declare-fun b!83051 () Bool)

(assert (=> b!83051 (= e!54232 (not call!7753))))

(declare-fun bm!7765 () Bool)

(assert (=> bm!7765 (= call!7765 call!7772)))

(declare-fun b!83052 () Bool)

(declare-fun Unit!2423 () Unit!2413)

(assert (=> b!83052 (= e!54218 Unit!2423)))

(declare-fun lt!38976 () Unit!2413)

(assert (=> b!83052 (= lt!38976 call!7773)))

(assert (=> b!83052 (= lt!38984 call!7759)))

(declare-fun res!42993 () Bool)

(assert (=> b!83052 (= res!42993 ((_ is Found!236) lt!38984))))

(assert (=> b!83052 (=> (not res!42993) (not e!54223))))

(assert (=> b!83052 e!54223))

(declare-fun lt!38980 () Unit!2413)

(assert (=> b!83052 (= lt!38980 lt!38976)))

(assert (=> b!83052 false))

(declare-fun b!83053 () Bool)

(assert (=> b!83053 (= e!54212 ((_ is Undefined!236) lt!38963))))

(declare-fun b!83054 () Bool)

(assert (=> b!83054 (= e!54217 e!54219)))

(assert (=> b!83054 (= lt!38961 (seekEntryOrOpen!0 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (_keys!3984 newMap!16) (mask!6334 newMap!16)))))

(assert (=> b!83054 (= c!13217 ((_ is Undefined!236) lt!38961))))

(declare-fun b!83055 () Bool)

(declare-fun res!42988 () Bool)

(assert (=> b!83055 (= res!42988 (= (select (arr!1904 (_keys!3984 newMap!16)) (index!3083 lt!38981)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!83055 (=> (not res!42988) (not e!54226))))

(declare-fun bm!7766 () Bool)

(assert (=> bm!7766 (= call!7768 call!7754)))

(declare-fun b!83056 () Bool)

(declare-fun lt!38971 () Unit!2413)

(assert (=> b!83056 (= e!54218 lt!38971)))

(assert (=> b!83056 (= lt!38971 call!7757)))

(assert (=> b!83056 (= lt!38981 call!7759)))

(assert (=> b!83056 (= c!13211 ((_ is MissingZero!236) lt!38981))))

(assert (=> b!83056 e!54233))

(declare-fun e!54224 () Bool)

(declare-fun b!83057 () Bool)

(assert (=> b!83057 (= e!54224 (= call!7756 (+!105 call!7774 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(declare-fun bm!7767 () Bool)

(declare-fun c!13220 () Bool)

(declare-fun updateHelperNewKey!30 (LongMapFixedSize!748 (_ BitVec 64) V!3017 (_ BitVec 32)) tuple2!2180)

(assert (=> bm!7767 (= call!7760 (updateHelperNewKey!30 newMap!16 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784 (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961))))))

(declare-fun bm!7768 () Bool)

(assert (=> bm!7768 (= call!7771 call!7772)))

(declare-fun b!83058 () Bool)

(assert (=> b!83058 (= e!54225 (= (select (arr!1904 (_keys!3984 newMap!16)) (index!3081 lt!38969)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))

(declare-fun bm!7769 () Bool)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!30 (array!3997 array!3999 (_ BitVec 32) (_ BitVec 32) V!3017 V!3017 (_ BitVec 64) Int) Unit!2413)

(assert (=> bm!7769 (= call!7757 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!30 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (defaultEntry!2316 newMap!16)))))

(declare-fun b!83059 () Bool)

(assert (=> b!83059 (= e!54231 e!54224)))

(declare-fun res!42990 () Bool)

(assert (=> b!83059 (= res!42990 (contains!744 call!7756 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))

(assert (=> b!83059 (=> (not res!42990) (not e!54224))))

(declare-fun b!83060 () Bool)

(assert (=> b!83060 (= e!54222 e!54231)))

(declare-fun c!13214 () Bool)

(assert (=> b!83060 (= c!13214 (_1!1101 lt!38973))))

(declare-fun b!83061 () Bool)

(declare-fun res!42997 () Bool)

(assert (=> b!83061 (= res!42997 (= (select (arr!1904 (_keys!3984 newMap!16)) (index!3083 lt!38963)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!83061 (=> (not res!42997) (not e!54215))))

(declare-fun bm!7770 () Bool)

(assert (=> bm!7770 (= call!7766 call!7762)))

(declare-fun bm!7771 () Bool)

(assert (=> bm!7771 (= call!7761 call!7767)))

(declare-fun b!83062 () Bool)

(assert (=> b!83062 (= c!13220 ((_ is MissingVacant!236) lt!38961))))

(assert (=> b!83062 (= e!54219 e!54220)))

(declare-fun b!83063 () Bool)

(assert (=> b!83063 (= e!54227 ((_ is Undefined!236) lt!38981))))

(declare-fun b!83064 () Bool)

(declare-fun lt!38967 () Unit!2413)

(declare-fun lt!38977 () Unit!2413)

(assert (=> b!83064 (= lt!38967 lt!38977)))

(assert (=> b!83064 call!7763))

(declare-fun lemmaValidKeyInArrayIsInListMap!90 (array!3997 array!3999 (_ BitVec 32) (_ BitVec 32) V!3017 V!3017 (_ BitVec 32) Int) Unit!2413)

(assert (=> b!83064 (= lt!38977 (lemmaValidKeyInArrayIsInListMap!90 (_keys!3984 newMap!16) lt!38974 (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (index!3081 lt!38961) (defaultEntry!2316 newMap!16)))))

(assert (=> b!83064 (= lt!38974 (array!4000 (store (arr!1905 (_values!2299 newMap!16)) (index!3081 lt!38961) (ValueCellFull!920 lt!38784)) (size!2148 (_values!2299 newMap!16))))))

(declare-fun lt!38965 () Unit!2413)

(declare-fun lt!38978 () Unit!2413)

(assert (=> b!83064 (= lt!38965 lt!38978)))

(assert (=> b!83064 (= call!7754 call!7765)))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!30 (array!3997 array!3999 (_ BitVec 32) (_ BitVec 32) V!3017 V!3017 (_ BitVec 32) (_ BitVec 64) V!3017 Int) Unit!2413)

(assert (=> b!83064 (= lt!38978 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!30 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (index!3081 lt!38961) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!38972 () Unit!2413)

(assert (=> b!83064 (= lt!38972 e!54213)))

(assert (=> b!83064 (= c!13213 (contains!744 (getCurrentListMap!429 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))

(assert (=> b!83064 (= e!54216 (tuple2!2181 true (LongMapFixedSize!749 (defaultEntry!2316 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (_size!423 newMap!16) (_keys!3984 newMap!16) (array!4000 (store (arr!1905 (_values!2299 newMap!16)) (index!3081 lt!38961) (ValueCellFull!920 lt!38784)) (size!2148 (_values!2299 newMap!16))) (_vacant!423 newMap!16))))))

(assert (= (and d!20901 c!13224) b!83025))

(assert (= (and d!20901 (not c!13224)) b!83054))

(assert (= (and b!83025 c!13215) b!83023))

(assert (= (and b!83025 (not c!13215)) b!83045))

(assert (= (or b!83023 b!83045) bm!7768))

(assert (= (or b!83023 b!83045) bm!7770))

(assert (= (or b!83023 b!83045) bm!7766))

(assert (= (and b!83054 c!13217) b!83050))

(assert (= (and b!83054 (not c!13217)) b!83062))

(assert (= (and b!83050 c!13216) b!83052))

(assert (= (and b!83050 (not c!13216)) b!83056))

(assert (= (and b!83052 res!42993) b!83029))

(assert (= (and b!83029 res!42985) b!83032))

(assert (= (and b!83056 c!13211) b!83026))

(assert (= (and b!83056 (not c!13211)) b!83035))

(assert (= (and b!83026 res!42986) b!83033))

(assert (= (and b!83033 res!42995) b!83036))

(assert (= (and b!83035 c!13221) b!83031))

(assert (= (and b!83035 (not c!13221)) b!83063))

(assert (= (and b!83031 res!42996) b!83055))

(assert (= (and b!83055 res!42988) b!83041))

(assert (= (or b!83026 b!83031) bm!7752))

(assert (= (or b!83036 b!83041) bm!7759))

(assert (= (or b!83029 bm!7752) bm!7753))

(assert (= (or b!83052 b!83056) bm!7763))

(assert (= (and b!83062 c!13220) b!83027))

(assert (= (and b!83062 (not c!13220)) b!83034))

(assert (= (and b!83034 c!13219) b!83049))

(assert (= (and b!83034 (not c!13219)) b!83064))

(assert (= (and b!83064 c!13213) b!83048))

(assert (= (and b!83064 (not c!13213)) b!83044))

(assert (= (and b!83048 res!42989) b!83038))

(assert (= (and b!83038 res!42992) b!83058))

(assert (= (and b!83044 c!13223) b!83030))

(assert (= (and b!83044 (not c!13223)) b!83047))

(assert (= (and b!83030 res!42994) b!83024))

(assert (= (and b!83024 res!42984) b!83051))

(assert (= (and b!83047 c!13212) b!83043))

(assert (= (and b!83047 (not c!13212)) b!83053))

(assert (= (and b!83043 res!42987) b!83061))

(assert (= (and b!83061 res!42997) b!83028))

(assert (= (or b!83030 b!83043) bm!7749))

(assert (= (or b!83051 b!83028) bm!7762))

(assert (= (or b!83038 bm!7749) bm!7771))

(assert (= (or b!83048 b!83044) bm!7757))

(assert (= (or b!83027 b!83049) bm!7767))

(assert (= (or bm!7759 bm!7762) bm!7756))

(assert (= (or b!83050 b!83064) bm!7765))

(assert (= (or bm!7763 bm!7757) bm!7764))

(assert (= (or bm!7753 bm!7771) bm!7760))

(assert (= (or b!83056 b!83044) bm!7769))

(assert (= (or b!83052 b!83048) bm!7751))

(assert (= (or b!83050 b!83064) bm!7750))

(assert (= (and bm!7750 c!13222) b!83046))

(assert (= (and bm!7750 (not c!13222)) b!83039))

(assert (= (or bm!7770 b!83039) bm!7755))

(assert (= (or bm!7768 bm!7765) bm!7748))

(assert (= (or bm!7766 b!83064) bm!7758))

(assert (= (and bm!7758 c!13218) b!83040))

(assert (= (and bm!7758 (not c!13218)) b!83042))

(assert (= (and d!20901 res!42991) b!83060))

(assert (= (and b!83060 c!13214) b!83059))

(assert (= (and b!83060 (not c!13214)) b!83037))

(assert (= (and b!83059 res!42990) b!83057))

(assert (= (or b!83059 b!83057 b!83037) bm!7761))

(assert (= (or b!83057 b!83037) bm!7754))

(declare-fun m!85929 () Bool)

(assert (=> bm!7760 m!85929))

(declare-fun m!85931 () Bool)

(assert (=> b!83058 m!85931))

(declare-fun m!85933 () Bool)

(assert (=> b!83057 m!85933))

(declare-fun m!85935 () Bool)

(assert (=> b!83023 m!85935))

(assert (=> bm!7769 m!85721))

(declare-fun m!85937 () Bool)

(assert (=> bm!7769 m!85937))

(assert (=> b!83054 m!85721))

(declare-fun m!85939 () Bool)

(assert (=> b!83054 m!85939))

(declare-fun m!85941 () Bool)

(assert (=> b!83064 m!85941))

(declare-fun m!85943 () Bool)

(assert (=> b!83064 m!85943))

(declare-fun m!85945 () Bool)

(assert (=> b!83064 m!85945))

(assert (=> b!83064 m!85721))

(declare-fun m!85947 () Bool)

(assert (=> b!83064 m!85947))

(assert (=> b!83064 m!85945))

(assert (=> b!83064 m!85721))

(declare-fun m!85949 () Bool)

(assert (=> b!83064 m!85949))

(declare-fun m!85951 () Bool)

(assert (=> bm!7750 m!85951))

(declare-fun m!85953 () Bool)

(assert (=> bm!7750 m!85953))

(declare-fun m!85955 () Bool)

(assert (=> d!20901 m!85955))

(assert (=> d!20901 m!85751))

(assert (=> bm!7754 m!85747))

(assert (=> b!83042 m!85945))

(assert (=> b!83059 m!85721))

(declare-fun m!85957 () Bool)

(assert (=> b!83059 m!85957))

(declare-fun m!85959 () Bool)

(assert (=> bm!7755 m!85959))

(assert (=> bm!7748 m!85941))

(declare-fun m!85961 () Bool)

(assert (=> bm!7748 m!85961))

(assert (=> bm!7767 m!85721))

(declare-fun m!85963 () Bool)

(assert (=> bm!7767 m!85963))

(declare-fun m!85965 () Bool)

(assert (=> bm!7758 m!85965))

(declare-fun m!85967 () Bool)

(assert (=> b!83045 m!85967))

(assert (=> bm!7764 m!85721))

(assert (=> bm!7764 m!85939))

(declare-fun m!85969 () Bool)

(assert (=> b!83024 m!85969))

(declare-fun m!85971 () Bool)

(assert (=> b!83032 m!85971))

(declare-fun m!85973 () Bool)

(assert (=> b!83061 m!85973))

(declare-fun m!85975 () Bool)

(assert (=> b!83033 m!85975))

(assert (=> bm!7751 m!85721))

(declare-fun m!85977 () Bool)

(assert (=> bm!7751 m!85977))

(assert (=> bm!7756 m!85721))

(declare-fun m!85979 () Bool)

(assert (=> bm!7756 m!85979))

(declare-fun m!85981 () Bool)

(assert (=> b!83055 m!85981))

(declare-fun m!85983 () Bool)

(assert (=> bm!7761 m!85983))

(assert (=> b!82779 d!20901))

(declare-fun d!20903 () Bool)

(assert (=> d!20903 (= (array_inv!1175 (_keys!3984 newMap!16)) (bvsge (size!2147 (_keys!3984 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!82787 d!20903))

(declare-fun d!20905 () Bool)

(assert (=> d!20905 (= (array_inv!1176 (_values!2299 newMap!16)) (bvsge (size!2148 (_values!2299 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!82787 d!20905))

(declare-fun d!20907 () Bool)

(assert (=> d!20907 (not (arrayContainsKey!0 (_keys!3984 (v!2632 (underlying!289 thiss!992))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!38988 () Unit!2413)

(declare-fun choose!68 (array!3997 (_ BitVec 32) (_ BitVec 64) List!1505) Unit!2413)

(assert (=> d!20907 (= lt!38988 (choose!68 (_keys!3984 (v!2632 (underlying!289 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (Cons!1501 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) Nil!1502)))))

(assert (=> d!20907 (bvslt (size!2147 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!20907 (= (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!3984 (v!2632 (underlying!289 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (Cons!1501 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) Nil!1502)) lt!38988)))

(declare-fun bs!3516 () Bool)

(assert (= bs!3516 d!20907))

(assert (=> bs!3516 m!85721))

(assert (=> bs!3516 m!85743))

(assert (=> bs!3516 m!85721))

(declare-fun m!85985 () Bool)

(assert (=> bs!3516 m!85985))

(assert (=> b!82786 d!20907))

(declare-fun d!20909 () Bool)

(assert (=> d!20909 (arrayNoDuplicates!0 (_keys!3984 (v!2632 (underlying!289 thiss!992))) from!355 Nil!1502)))

(declare-fun lt!38991 () Unit!2413)

(declare-fun choose!39 (array!3997 (_ BitVec 32) (_ BitVec 32)) Unit!2413)

(assert (=> d!20909 (= lt!38991 (choose!39 (_keys!3984 (v!2632 (underlying!289 thiss!992))) #b00000000000000000000000000000000 from!355))))

(assert (=> d!20909 (bvslt (size!2147 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!20909 (= (lemmaNoDuplicateFromThenFromBigger!0 (_keys!3984 (v!2632 (underlying!289 thiss!992))) #b00000000000000000000000000000000 from!355) lt!38991)))

(declare-fun bs!3517 () Bool)

(assert (= bs!3517 d!20909))

(assert (=> bs!3517 m!85739))

(declare-fun m!85987 () Bool)

(assert (=> bs!3517 m!85987))

(assert (=> b!82786 d!20909))

(declare-fun d!20911 () Bool)

(declare-fun res!43002 () Bool)

(declare-fun e!54238 () Bool)

(assert (=> d!20911 (=> res!43002 e!54238)))

(assert (=> d!20911 (= res!43002 (= (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))

(assert (=> d!20911 (= (arrayContainsKey!0 (_keys!3984 (v!2632 (underlying!289 thiss!992))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)) e!54238)))

(declare-fun b!83069 () Bool)

(declare-fun e!54239 () Bool)

(assert (=> b!83069 (= e!54238 e!54239)))

(declare-fun res!43003 () Bool)

(assert (=> b!83069 (=> (not res!43003) (not e!54239))))

(assert (=> b!83069 (= res!43003 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2147 (_keys!3984 (v!2632 (underlying!289 thiss!992))))))))

(declare-fun b!83070 () Bool)

(assert (=> b!83070 (= e!54239 (arrayContainsKey!0 (_keys!3984 (v!2632 (underlying!289 thiss!992))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (= (and d!20911 (not res!43002)) b!83069))

(assert (= (and b!83069 res!43003) b!83070))

(declare-fun m!85989 () Bool)

(assert (=> d!20911 m!85989))

(assert (=> b!83070 m!85721))

(declare-fun m!85991 () Bool)

(assert (=> b!83070 m!85991))

(assert (=> b!82786 d!20911))

(declare-fun d!20913 () Bool)

(declare-fun e!54242 () Bool)

(assert (=> d!20913 e!54242))

(declare-fun c!13227 () Bool)

(assert (=> d!20913 (= c!13227 (and (not (= (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!38994 () Unit!2413)

(declare-fun choose!490 (array!3997 array!3999 (_ BitVec 32) (_ BitVec 32) V!3017 V!3017 (_ BitVec 64) (_ BitVec 32) Int) Unit!2413)

(assert (=> d!20913 (= lt!38994 (choose!490 (_keys!3984 (v!2632 (underlying!289 thiss!992))) (_values!2299 (v!2632 (underlying!289 thiss!992))) (mask!6334 (v!2632 (underlying!289 thiss!992))) (extraKeys!2159 (v!2632 (underlying!289 thiss!992))) (zeroValue!2210 (v!2632 (underlying!289 thiss!992))) (minValue!2210 (v!2632 (underlying!289 thiss!992))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2316 (v!2632 (underlying!289 thiss!992)))))))

(assert (=> d!20913 (validMask!0 (mask!6334 (v!2632 (underlying!289 thiss!992))))))

(assert (=> d!20913 (= (lemmaListMapContainsThenArrayContainsFrom!57 (_keys!3984 (v!2632 (underlying!289 thiss!992))) (_values!2299 (v!2632 (underlying!289 thiss!992))) (mask!6334 (v!2632 (underlying!289 thiss!992))) (extraKeys!2159 (v!2632 (underlying!289 thiss!992))) (zeroValue!2210 (v!2632 (underlying!289 thiss!992))) (minValue!2210 (v!2632 (underlying!289 thiss!992))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2316 (v!2632 (underlying!289 thiss!992)))) lt!38994)))

(declare-fun b!83075 () Bool)

(assert (=> b!83075 (= e!54242 (arrayContainsKey!0 (_keys!3984 (v!2632 (underlying!289 thiss!992))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!83076 () Bool)

(assert (=> b!83076 (= e!54242 (ite (= (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2159 (v!2632 (underlying!289 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2159 (v!2632 (underlying!289 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!20913 c!13227) b!83075))

(assert (= (and d!20913 (not c!13227)) b!83076))

(assert (=> d!20913 m!85721))

(declare-fun m!85993 () Bool)

(assert (=> d!20913 m!85993))

(assert (=> d!20913 m!85763))

(assert (=> b!83075 m!85721))

(assert (=> b!83075 m!85743))

(assert (=> b!82786 d!20913))

(declare-fun b!83087 () Bool)

(declare-fun e!54254 () Bool)

(declare-fun call!7777 () Bool)

(assert (=> b!83087 (= e!54254 call!7777)))

(declare-fun b!83088 () Bool)

(assert (=> b!83088 (= e!54254 call!7777)))

(declare-fun b!83089 () Bool)

(declare-fun e!54253 () Bool)

(declare-fun e!54252 () Bool)

(assert (=> b!83089 (= e!54253 e!54252)))

(declare-fun res!43011 () Bool)

(assert (=> b!83089 (=> (not res!43011) (not e!54252))))

(declare-fun e!54251 () Bool)

(assert (=> b!83089 (= res!43011 (not e!54251))))

(declare-fun res!43010 () Bool)

(assert (=> b!83089 (=> (not res!43010) (not e!54251))))

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!83089 (= res!43010 (validKeyInArray!0 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))

(declare-fun d!20915 () Bool)

(declare-fun res!43012 () Bool)

(assert (=> d!20915 (=> res!43012 e!54253)))

(assert (=> d!20915 (= res!43012 (bvsge from!355 (size!2147 (_keys!3984 (v!2632 (underlying!289 thiss!992))))))))

(assert (=> d!20915 (= (arrayNoDuplicates!0 (_keys!3984 (v!2632 (underlying!289 thiss!992))) from!355 Nil!1502) e!54253)))

(declare-fun b!83090 () Bool)

(declare-fun contains!745 (List!1505 (_ BitVec 64)) Bool)

(assert (=> b!83090 (= e!54251 (contains!745 Nil!1502 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))

(declare-fun b!83091 () Bool)

(assert (=> b!83091 (= e!54252 e!54254)))

(declare-fun c!13230 () Bool)

(assert (=> b!83091 (= c!13230 (validKeyInArray!0 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))

(declare-fun bm!7774 () Bool)

(assert (=> bm!7774 (= call!7777 (arrayNoDuplicates!0 (_keys!3984 (v!2632 (underlying!289 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!13230 (Cons!1501 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) Nil!1502) Nil!1502)))))

(assert (= (and d!20915 (not res!43012)) b!83089))

(assert (= (and b!83089 res!43010) b!83090))

(assert (= (and b!83089 res!43011) b!83091))

(assert (= (and b!83091 c!13230) b!83088))

(assert (= (and b!83091 (not c!13230)) b!83087))

(assert (= (or b!83088 b!83087) bm!7774))

(assert (=> b!83089 m!85721))

(assert (=> b!83089 m!85721))

(declare-fun m!85995 () Bool)

(assert (=> b!83089 m!85995))

(assert (=> b!83090 m!85721))

(assert (=> b!83090 m!85721))

(declare-fun m!85997 () Bool)

(assert (=> b!83090 m!85997))

(assert (=> b!83091 m!85721))

(assert (=> b!83091 m!85721))

(assert (=> b!83091 m!85995))

(assert (=> bm!7774 m!85721))

(declare-fun m!85999 () Bool)

(assert (=> bm!7774 m!85999))

(assert (=> b!82786 d!20915))

(declare-fun d!20917 () Bool)

(declare-fun e!54257 () Bool)

(assert (=> d!20917 e!54257))

(declare-fun res!43018 () Bool)

(assert (=> d!20917 (=> (not res!43018) (not e!54257))))

(declare-fun lt!39004 () ListLongMap!1437)

(assert (=> d!20917 (= res!43018 (contains!744 lt!39004 (_1!1102 lt!38779)))))

(declare-fun lt!39006 () List!1504)

(assert (=> d!20917 (= lt!39004 (ListLongMap!1438 lt!39006))))

(declare-fun lt!39003 () Unit!2413)

(declare-fun lt!39005 () Unit!2413)

(assert (=> d!20917 (= lt!39003 lt!39005)))

(assert (=> d!20917 (= (getValueByKey!140 lt!39006 (_1!1102 lt!38779)) (Some!145 (_2!1102 lt!38779)))))

(declare-fun lemmaContainsTupThenGetReturnValue!57 (List!1504 (_ BitVec 64) V!3017) Unit!2413)

(assert (=> d!20917 (= lt!39005 (lemmaContainsTupThenGetReturnValue!57 lt!39006 (_1!1102 lt!38779) (_2!1102 lt!38779)))))

(declare-fun insertStrictlySorted!60 (List!1504 (_ BitVec 64) V!3017) List!1504)

(assert (=> d!20917 (= lt!39006 (insertStrictlySorted!60 (toList!734 lt!38768) (_1!1102 lt!38779) (_2!1102 lt!38779)))))

(assert (=> d!20917 (= (+!105 lt!38768 lt!38779) lt!39004)))

(declare-fun b!83096 () Bool)

(declare-fun res!43017 () Bool)

(assert (=> b!83096 (=> (not res!43017) (not e!54257))))

(assert (=> b!83096 (= res!43017 (= (getValueByKey!140 (toList!734 lt!39004) (_1!1102 lt!38779)) (Some!145 (_2!1102 lt!38779))))))

(declare-fun b!83097 () Bool)

(declare-fun contains!746 (List!1504 tuple2!2182) Bool)

(assert (=> b!83097 (= e!54257 (contains!746 (toList!734 lt!39004) lt!38779))))

(assert (= (and d!20917 res!43018) b!83096))

(assert (= (and b!83096 res!43017) b!83097))

(declare-fun m!86001 () Bool)

(assert (=> d!20917 m!86001))

(declare-fun m!86003 () Bool)

(assert (=> d!20917 m!86003))

(declare-fun m!86005 () Bool)

(assert (=> d!20917 m!86005))

(declare-fun m!86007 () Bool)

(assert (=> d!20917 m!86007))

(declare-fun m!86009 () Bool)

(assert (=> b!83096 m!86009))

(declare-fun m!86011 () Bool)

(assert (=> b!83097 m!86011))

(assert (=> b!82780 d!20917))

(declare-fun d!20919 () Bool)

(declare-fun e!54258 () Bool)

(assert (=> d!20919 e!54258))

(declare-fun res!43020 () Bool)

(assert (=> d!20919 (=> (not res!43020) (not e!54258))))

(declare-fun lt!39008 () ListLongMap!1437)

(assert (=> d!20919 (= res!43020 (contains!744 lt!39008 (_1!1102 lt!38775)))))

(declare-fun lt!39010 () List!1504)

(assert (=> d!20919 (= lt!39008 (ListLongMap!1438 lt!39010))))

(declare-fun lt!39007 () Unit!2413)

(declare-fun lt!39009 () Unit!2413)

(assert (=> d!20919 (= lt!39007 lt!39009)))

(assert (=> d!20919 (= (getValueByKey!140 lt!39010 (_1!1102 lt!38775)) (Some!145 (_2!1102 lt!38775)))))

(assert (=> d!20919 (= lt!39009 (lemmaContainsTupThenGetReturnValue!57 lt!39010 (_1!1102 lt!38775) (_2!1102 lt!38775)))))

(assert (=> d!20919 (= lt!39010 (insertStrictlySorted!60 (toList!734 (+!105 lt!38773 lt!38779)) (_1!1102 lt!38775) (_2!1102 lt!38775)))))

(assert (=> d!20919 (= (+!105 (+!105 lt!38773 lt!38779) lt!38775) lt!39008)))

(declare-fun b!83098 () Bool)

(declare-fun res!43019 () Bool)

(assert (=> b!83098 (=> (not res!43019) (not e!54258))))

(assert (=> b!83098 (= res!43019 (= (getValueByKey!140 (toList!734 lt!39008) (_1!1102 lt!38775)) (Some!145 (_2!1102 lt!38775))))))

(declare-fun b!83099 () Bool)

(assert (=> b!83099 (= e!54258 (contains!746 (toList!734 lt!39008) lt!38775))))

(assert (= (and d!20919 res!43020) b!83098))

(assert (= (and b!83098 res!43019) b!83099))

(declare-fun m!86013 () Bool)

(assert (=> d!20919 m!86013))

(declare-fun m!86015 () Bool)

(assert (=> d!20919 m!86015))

(declare-fun m!86017 () Bool)

(assert (=> d!20919 m!86017))

(declare-fun m!86019 () Bool)

(assert (=> d!20919 m!86019))

(declare-fun m!86021 () Bool)

(assert (=> b!83098 m!86021))

(declare-fun m!86023 () Bool)

(assert (=> b!83099 m!86023))

(assert (=> b!82780 d!20919))

(declare-fun d!20921 () Bool)

(declare-fun e!54259 () Bool)

(assert (=> d!20921 e!54259))

(declare-fun res!43022 () Bool)

(assert (=> d!20921 (=> (not res!43022) (not e!54259))))

(declare-fun lt!39012 () ListLongMap!1437)

(assert (=> d!20921 (= res!43022 (contains!744 lt!39012 (_1!1102 lt!38772)))))

(declare-fun lt!39014 () List!1504)

(assert (=> d!20921 (= lt!39012 (ListLongMap!1438 lt!39014))))

(declare-fun lt!39011 () Unit!2413)

(declare-fun lt!39013 () Unit!2413)

(assert (=> d!20921 (= lt!39011 lt!39013)))

(assert (=> d!20921 (= (getValueByKey!140 lt!39014 (_1!1102 lt!38772)) (Some!145 (_2!1102 lt!38772)))))

(assert (=> d!20921 (= lt!39013 (lemmaContainsTupThenGetReturnValue!57 lt!39014 (_1!1102 lt!38772) (_2!1102 lt!38772)))))

(assert (=> d!20921 (= lt!39014 (insertStrictlySorted!60 (toList!734 lt!38771) (_1!1102 lt!38772) (_2!1102 lt!38772)))))

(assert (=> d!20921 (= (+!105 lt!38771 lt!38772) lt!39012)))

(declare-fun b!83100 () Bool)

(declare-fun res!43021 () Bool)

(assert (=> b!83100 (=> (not res!43021) (not e!54259))))

(assert (=> b!83100 (= res!43021 (= (getValueByKey!140 (toList!734 lt!39012) (_1!1102 lt!38772)) (Some!145 (_2!1102 lt!38772))))))

(declare-fun b!83101 () Bool)

(assert (=> b!83101 (= e!54259 (contains!746 (toList!734 lt!39012) lt!38772))))

(assert (= (and d!20921 res!43022) b!83100))

(assert (= (and b!83100 res!43021) b!83101))

(declare-fun m!86025 () Bool)

(assert (=> d!20921 m!86025))

(declare-fun m!86027 () Bool)

(assert (=> d!20921 m!86027))

(declare-fun m!86029 () Bool)

(assert (=> d!20921 m!86029))

(declare-fun m!86031 () Bool)

(assert (=> d!20921 m!86031))

(declare-fun m!86033 () Bool)

(assert (=> b!83100 m!86033))

(declare-fun m!86035 () Bool)

(assert (=> b!83101 m!86035))

(assert (=> b!82780 d!20921))

(declare-fun d!20923 () Bool)

(assert (=> d!20923 (= (+!105 (+!105 lt!38771 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))) (+!105 (+!105 lt!38771 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))

(declare-fun lt!39017 () Unit!2413)

(declare-fun choose!491 (ListLongMap!1437 (_ BitVec 64) V!3017 (_ BitVec 64) V!3017) Unit!2413)

(assert (=> d!20923 (= lt!39017 (choose!491 lt!38771 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))

(assert (=> d!20923 (not (= (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!20923 (= (addCommutativeForDiffKeys!25 lt!38771 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))) lt!39017)))

(declare-fun bs!3518 () Bool)

(assert (= bs!3518 d!20923))

(assert (=> bs!3518 m!85721))

(declare-fun m!86037 () Bool)

(assert (=> bs!3518 m!86037))

(declare-fun m!86039 () Bool)

(assert (=> bs!3518 m!86039))

(declare-fun m!86041 () Bool)

(assert (=> bs!3518 m!86041))

(declare-fun m!86043 () Bool)

(assert (=> bs!3518 m!86043))

(assert (=> bs!3518 m!86043))

(declare-fun m!86045 () Bool)

(assert (=> bs!3518 m!86045))

(assert (=> bs!3518 m!86039))

(assert (=> b!82780 d!20923))

(declare-fun b!83126 () Bool)

(declare-fun e!54277 () ListLongMap!1437)

(assert (=> b!83126 (= e!54277 (ListLongMap!1438 Nil!1501))))

(declare-fun b!83127 () Bool)

(declare-fun e!54280 () Bool)

(declare-fun e!54279 () Bool)

(assert (=> b!83127 (= e!54280 e!54279)))

(assert (=> b!83127 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2147 (_keys!3984 (v!2632 (underlying!289 thiss!992))))))))

(declare-fun res!43034 () Bool)

(declare-fun lt!39036 () ListLongMap!1437)

(assert (=> b!83127 (= res!43034 (contains!744 lt!39036 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!83127 (=> (not res!43034) (not e!54279))))

(declare-fun b!83128 () Bool)

(declare-fun e!54278 () Bool)

(assert (=> b!83128 (= e!54280 e!54278)))

(declare-fun c!13241 () Bool)

(assert (=> b!83128 (= c!13241 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2147 (_keys!3984 (v!2632 (underlying!289 thiss!992))))))))

(declare-fun b!83129 () Bool)

(declare-fun e!54275 () ListLongMap!1437)

(assert (=> b!83129 (= e!54277 e!54275)))

(declare-fun c!13242 () Bool)

(assert (=> b!83129 (= c!13242 (validKeyInArray!0 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!83130 () Bool)

(declare-fun call!7780 () ListLongMap!1437)

(assert (=> b!83130 (= e!54275 call!7780)))

(declare-fun bm!7777 () Bool)

(assert (=> bm!7777 (= call!7780 (getCurrentListMapNoExtraKeys!70 (_keys!3984 (v!2632 (underlying!289 thiss!992))) (_values!2299 (v!2632 (underlying!289 thiss!992))) (mask!6334 (v!2632 (underlying!289 thiss!992))) (extraKeys!2159 (v!2632 (underlying!289 thiss!992))) (zeroValue!2210 (v!2632 (underlying!289 thiss!992))) (minValue!2210 (v!2632 (underlying!289 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2316 (v!2632 (underlying!289 thiss!992)))))))

(declare-fun b!83131 () Bool)

(declare-fun res!43032 () Bool)

(declare-fun e!54274 () Bool)

(assert (=> b!83131 (=> (not res!43032) (not e!54274))))

(assert (=> b!83131 (= res!43032 (not (contains!744 lt!39036 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!83132 () Bool)

(declare-fun lt!39037 () Unit!2413)

(declare-fun lt!39038 () Unit!2413)

(assert (=> b!83132 (= lt!39037 lt!39038)))

(declare-fun lt!39033 () (_ BitVec 64))

(declare-fun lt!39032 () ListLongMap!1437)

(declare-fun lt!39035 () V!3017)

(declare-fun lt!39034 () (_ BitVec 64))

(assert (=> b!83132 (not (contains!744 (+!105 lt!39032 (tuple2!2183 lt!39033 lt!39035)) lt!39034))))

(declare-fun addStillNotContains!32 (ListLongMap!1437 (_ BitVec 64) V!3017 (_ BitVec 64)) Unit!2413)

(assert (=> b!83132 (= lt!39038 (addStillNotContains!32 lt!39032 lt!39033 lt!39035 lt!39034))))

(assert (=> b!83132 (= lt!39034 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!83132 (= lt!39035 (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!83132 (= lt!39033 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!83132 (= lt!39032 call!7780)))

(assert (=> b!83132 (= e!54275 (+!105 call!7780 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!83133 () Bool)

(declare-fun e!54276 () Bool)

(assert (=> b!83133 (= e!54276 (validKeyInArray!0 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!83133 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(declare-fun b!83134 () Bool)

(assert (=> b!83134 (= e!54274 e!54280)))

(declare-fun c!13240 () Bool)

(assert (=> b!83134 (= c!13240 e!54276)))

(declare-fun res!43033 () Bool)

(assert (=> b!83134 (=> (not res!43033) (not e!54276))))

(assert (=> b!83134 (= res!43033 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2147 (_keys!3984 (v!2632 (underlying!289 thiss!992))))))))

(declare-fun b!83135 () Bool)

(assert (=> b!83135 (= e!54278 (= lt!39036 (getCurrentListMapNoExtraKeys!70 (_keys!3984 (v!2632 (underlying!289 thiss!992))) (_values!2299 (v!2632 (underlying!289 thiss!992))) (mask!6334 (v!2632 (underlying!289 thiss!992))) (extraKeys!2159 (v!2632 (underlying!289 thiss!992))) (zeroValue!2210 (v!2632 (underlying!289 thiss!992))) (minValue!2210 (v!2632 (underlying!289 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))))))))

(declare-fun b!83136 () Bool)

(assert (=> b!83136 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2147 (_keys!3984 (v!2632 (underlying!289 thiss!992))))))))

(assert (=> b!83136 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2148 (_values!2299 (v!2632 (underlying!289 thiss!992))))))))

(declare-fun apply!81 (ListLongMap!1437 (_ BitVec 64)) V!3017)

(assert (=> b!83136 (= e!54279 (= (apply!81 lt!39036 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!20925 () Bool)

(assert (=> d!20925 e!54274))

(declare-fun res!43031 () Bool)

(assert (=> d!20925 (=> (not res!43031) (not e!54274))))

(assert (=> d!20925 (= res!43031 (not (contains!744 lt!39036 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!20925 (= lt!39036 e!54277)))

(declare-fun c!13239 () Bool)

(assert (=> d!20925 (= c!13239 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2147 (_keys!3984 (v!2632 (underlying!289 thiss!992))))))))

(assert (=> d!20925 (validMask!0 (mask!6334 (v!2632 (underlying!289 thiss!992))))))

(assert (=> d!20925 (= (getCurrentListMapNoExtraKeys!70 (_keys!3984 (v!2632 (underlying!289 thiss!992))) (_values!2299 (v!2632 (underlying!289 thiss!992))) (mask!6334 (v!2632 (underlying!289 thiss!992))) (extraKeys!2159 (v!2632 (underlying!289 thiss!992))) (zeroValue!2210 (v!2632 (underlying!289 thiss!992))) (minValue!2210 (v!2632 (underlying!289 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2316 (v!2632 (underlying!289 thiss!992)))) lt!39036)))

(declare-fun b!83137 () Bool)

(declare-fun isEmpty!338 (ListLongMap!1437) Bool)

(assert (=> b!83137 (= e!54278 (isEmpty!338 lt!39036))))

(assert (= (and d!20925 c!13239) b!83126))

(assert (= (and d!20925 (not c!13239)) b!83129))

(assert (= (and b!83129 c!13242) b!83132))

(assert (= (and b!83129 (not c!13242)) b!83130))

(assert (= (or b!83132 b!83130) bm!7777))

(assert (= (and d!20925 res!43031) b!83131))

(assert (= (and b!83131 res!43032) b!83134))

(assert (= (and b!83134 res!43033) b!83133))

(assert (= (and b!83134 c!13240) b!83127))

(assert (= (and b!83134 (not c!13240)) b!83128))

(assert (= (and b!83127 res!43034) b!83136))

(assert (= (and b!83128 c!13241) b!83135))

(assert (= (and b!83128 (not c!13241)) b!83137))

(declare-fun b_lambda!3699 () Bool)

(assert (=> (not b_lambda!3699) (not b!83132)))

(assert (=> b!83132 t!5193))

(declare-fun b_and!5061 () Bool)

(assert (= b_and!5041 (and (=> t!5193 result!2875) b_and!5061)))

(assert (=> b!83132 t!5195))

(declare-fun b_and!5063 () Bool)

(assert (= b_and!5043 (and (=> t!5195 result!2879) b_and!5063)))

(declare-fun b_lambda!3701 () Bool)

(assert (=> (not b_lambda!3701) (not b!83136)))

(assert (=> b!83136 t!5193))

(declare-fun b_and!5065 () Bool)

(assert (= b_and!5061 (and (=> t!5193 result!2875) b_and!5065)))

(assert (=> b!83136 t!5195))

(declare-fun b_and!5067 () Bool)

(assert (= b_and!5063 (and (=> t!5195 result!2879) b_and!5067)))

(assert (=> b!83127 m!85989))

(assert (=> b!83127 m!85989))

(declare-fun m!86047 () Bool)

(assert (=> b!83127 m!86047))

(declare-fun m!86049 () Bool)

(assert (=> b!83137 m!86049))

(declare-fun m!86051 () Bool)

(assert (=> b!83131 m!86051))

(declare-fun m!86053 () Bool)

(assert (=> bm!7777 m!86053))

(assert (=> b!83135 m!86053))

(declare-fun m!86055 () Bool)

(assert (=> d!20925 m!86055))

(assert (=> d!20925 m!85763))

(assert (=> b!83133 m!85989))

(assert (=> b!83133 m!85989))

(declare-fun m!86057 () Bool)

(assert (=> b!83133 m!86057))

(assert (=> b!83136 m!85989))

(declare-fun m!86059 () Bool)

(assert (=> b!83136 m!86059))

(assert (=> b!83136 m!85989))

(declare-fun m!86061 () Bool)

(assert (=> b!83136 m!86061))

(assert (=> b!83136 m!85725))

(assert (=> b!83136 m!86061))

(assert (=> b!83136 m!85725))

(declare-fun m!86063 () Bool)

(assert (=> b!83136 m!86063))

(assert (=> b!83129 m!85989))

(assert (=> b!83129 m!85989))

(assert (=> b!83129 m!86057))

(declare-fun m!86065 () Bool)

(assert (=> b!83132 m!86065))

(assert (=> b!83132 m!86065))

(declare-fun m!86067 () Bool)

(assert (=> b!83132 m!86067))

(assert (=> b!83132 m!85989))

(declare-fun m!86069 () Bool)

(assert (=> b!83132 m!86069))

(assert (=> b!83132 m!85725))

(assert (=> b!83132 m!86061))

(assert (=> b!83132 m!85725))

(assert (=> b!83132 m!86063))

(declare-fun m!86071 () Bool)

(assert (=> b!83132 m!86071))

(assert (=> b!83132 m!86061))

(assert (=> b!82780 d!20925))

(declare-fun d!20927 () Bool)

(declare-fun e!54281 () Bool)

(assert (=> d!20927 e!54281))

(declare-fun res!43036 () Bool)

(assert (=> d!20927 (=> (not res!43036) (not e!54281))))

(declare-fun lt!39040 () ListLongMap!1437)

(assert (=> d!20927 (= res!43036 (contains!744 lt!39040 (_1!1102 lt!38779)))))

(declare-fun lt!39042 () List!1504)

(assert (=> d!20927 (= lt!39040 (ListLongMap!1438 lt!39042))))

(declare-fun lt!39039 () Unit!2413)

(declare-fun lt!39041 () Unit!2413)

(assert (=> d!20927 (= lt!39039 lt!39041)))

(assert (=> d!20927 (= (getValueByKey!140 lt!39042 (_1!1102 lt!38779)) (Some!145 (_2!1102 lt!38779)))))

(assert (=> d!20927 (= lt!39041 (lemmaContainsTupThenGetReturnValue!57 lt!39042 (_1!1102 lt!38779) (_2!1102 lt!38779)))))

(assert (=> d!20927 (= lt!39042 (insertStrictlySorted!60 (toList!734 lt!38773) (_1!1102 lt!38779) (_2!1102 lt!38779)))))

(assert (=> d!20927 (= (+!105 lt!38773 lt!38779) lt!39040)))

(declare-fun b!83138 () Bool)

(declare-fun res!43035 () Bool)

(assert (=> b!83138 (=> (not res!43035) (not e!54281))))

(assert (=> b!83138 (= res!43035 (= (getValueByKey!140 (toList!734 lt!39040) (_1!1102 lt!38779)) (Some!145 (_2!1102 lt!38779))))))

(declare-fun b!83139 () Bool)

(assert (=> b!83139 (= e!54281 (contains!746 (toList!734 lt!39040) lt!38779))))

(assert (= (and d!20927 res!43036) b!83138))

(assert (= (and b!83138 res!43035) b!83139))

(declare-fun m!86073 () Bool)

(assert (=> d!20927 m!86073))

(declare-fun m!86075 () Bool)

(assert (=> d!20927 m!86075))

(declare-fun m!86077 () Bool)

(assert (=> d!20927 m!86077))

(declare-fun m!86079 () Bool)

(assert (=> d!20927 m!86079))

(declare-fun m!86081 () Bool)

(assert (=> b!83138 m!86081))

(declare-fun m!86083 () Bool)

(assert (=> b!83139 m!86083))

(assert (=> b!82780 d!20927))

(declare-fun d!20929 () Bool)

(declare-fun e!54282 () Bool)

(assert (=> d!20929 e!54282))

(declare-fun res!43038 () Bool)

(assert (=> d!20929 (=> (not res!43038) (not e!54282))))

(declare-fun lt!39044 () ListLongMap!1437)

(assert (=> d!20929 (= res!43038 (contains!744 lt!39044 (_1!1102 lt!38775)))))

(declare-fun lt!39046 () List!1504)

(assert (=> d!20929 (= lt!39044 (ListLongMap!1438 lt!39046))))

(declare-fun lt!39043 () Unit!2413)

(declare-fun lt!39045 () Unit!2413)

(assert (=> d!20929 (= lt!39043 lt!39045)))

(assert (=> d!20929 (= (getValueByKey!140 lt!39046 (_1!1102 lt!38775)) (Some!145 (_2!1102 lt!38775)))))

(assert (=> d!20929 (= lt!39045 (lemmaContainsTupThenGetReturnValue!57 lt!39046 (_1!1102 lt!38775) (_2!1102 lt!38775)))))

(assert (=> d!20929 (= lt!39046 (insertStrictlySorted!60 (toList!734 lt!38771) (_1!1102 lt!38775) (_2!1102 lt!38775)))))

(assert (=> d!20929 (= (+!105 lt!38771 lt!38775) lt!39044)))

(declare-fun b!83140 () Bool)

(declare-fun res!43037 () Bool)

(assert (=> b!83140 (=> (not res!43037) (not e!54282))))

(assert (=> b!83140 (= res!43037 (= (getValueByKey!140 (toList!734 lt!39044) (_1!1102 lt!38775)) (Some!145 (_2!1102 lt!38775))))))

(declare-fun b!83141 () Bool)

(assert (=> b!83141 (= e!54282 (contains!746 (toList!734 lt!39044) lt!38775))))

(assert (= (and d!20929 res!43038) b!83140))

(assert (= (and b!83140 res!43037) b!83141))

(declare-fun m!86085 () Bool)

(assert (=> d!20929 m!86085))

(declare-fun m!86087 () Bool)

(assert (=> d!20929 m!86087))

(declare-fun m!86089 () Bool)

(assert (=> d!20929 m!86089))

(declare-fun m!86091 () Bool)

(assert (=> d!20929 m!86091))

(declare-fun m!86093 () Bool)

(assert (=> b!83140 m!86093))

(declare-fun m!86095 () Bool)

(assert (=> b!83141 m!86095))

(assert (=> b!82780 d!20929))

(declare-fun d!20931 () Bool)

(assert (=> d!20931 (= (+!105 (+!105 lt!38773 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) (+!105 (+!105 lt!38773 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))

(declare-fun lt!39047 () Unit!2413)

(assert (=> d!20931 (= lt!39047 (choose!491 lt!38773 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))

(assert (=> d!20931 (not (= (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!20931 (= (addCommutativeForDiffKeys!25 lt!38773 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))) lt!39047)))

(declare-fun bs!3519 () Bool)

(assert (= bs!3519 d!20931))

(assert (=> bs!3519 m!85721))

(declare-fun m!86097 () Bool)

(assert (=> bs!3519 m!86097))

(declare-fun m!86099 () Bool)

(assert (=> bs!3519 m!86099))

(declare-fun m!86101 () Bool)

(assert (=> bs!3519 m!86101))

(declare-fun m!86103 () Bool)

(assert (=> bs!3519 m!86103))

(assert (=> bs!3519 m!86103))

(declare-fun m!86105 () Bool)

(assert (=> bs!3519 m!86105))

(assert (=> bs!3519 m!86099))

(assert (=> b!82780 d!20931))

(declare-fun d!20933 () Bool)

(declare-fun e!54283 () Bool)

(assert (=> d!20933 e!54283))

(declare-fun res!43040 () Bool)

(assert (=> d!20933 (=> (not res!43040) (not e!54283))))

(declare-fun lt!39049 () ListLongMap!1437)

(assert (=> d!20933 (= res!43040 (contains!744 lt!39049 (_1!1102 lt!38772)))))

(declare-fun lt!39051 () List!1504)

(assert (=> d!20933 (= lt!39049 (ListLongMap!1438 lt!39051))))

(declare-fun lt!39048 () Unit!2413)

(declare-fun lt!39050 () Unit!2413)

(assert (=> d!20933 (= lt!39048 lt!39050)))

(assert (=> d!20933 (= (getValueByKey!140 lt!39051 (_1!1102 lt!38772)) (Some!145 (_2!1102 lt!38772)))))

(assert (=> d!20933 (= lt!39050 (lemmaContainsTupThenGetReturnValue!57 lt!39051 (_1!1102 lt!38772) (_2!1102 lt!38772)))))

(assert (=> d!20933 (= lt!39051 (insertStrictlySorted!60 (toList!734 lt!38783) (_1!1102 lt!38772) (_2!1102 lt!38772)))))

(assert (=> d!20933 (= (+!105 lt!38783 lt!38772) lt!39049)))

(declare-fun b!83142 () Bool)

(declare-fun res!43039 () Bool)

(assert (=> b!83142 (=> (not res!43039) (not e!54283))))

(assert (=> b!83142 (= res!43039 (= (getValueByKey!140 (toList!734 lt!39049) (_1!1102 lt!38772)) (Some!145 (_2!1102 lt!38772))))))

(declare-fun b!83143 () Bool)

(assert (=> b!83143 (= e!54283 (contains!746 (toList!734 lt!39049) lt!38772))))

(assert (= (and d!20933 res!43040) b!83142))

(assert (= (and b!83142 res!43039) b!83143))

(declare-fun m!86107 () Bool)

(assert (=> d!20933 m!86107))

(declare-fun m!86109 () Bool)

(assert (=> d!20933 m!86109))

(declare-fun m!86111 () Bool)

(assert (=> d!20933 m!86111))

(declare-fun m!86113 () Bool)

(assert (=> d!20933 m!86113))

(declare-fun m!86115 () Bool)

(assert (=> b!83142 m!86115))

(declare-fun m!86117 () Bool)

(assert (=> b!83143 m!86117))

(assert (=> b!82780 d!20933))

(declare-fun d!20935 () Bool)

(assert (=> d!20935 (= (validMask!0 (mask!6334 (v!2632 (underlying!289 thiss!992)))) (and (or (= (mask!6334 (v!2632 (underlying!289 thiss!992))) #b00000000000000000000000000000111) (= (mask!6334 (v!2632 (underlying!289 thiss!992))) #b00000000000000000000000000001111) (= (mask!6334 (v!2632 (underlying!289 thiss!992))) #b00000000000000000000000000011111) (= (mask!6334 (v!2632 (underlying!289 thiss!992))) #b00000000000000000000000000111111) (= (mask!6334 (v!2632 (underlying!289 thiss!992))) #b00000000000000000000000001111111) (= (mask!6334 (v!2632 (underlying!289 thiss!992))) #b00000000000000000000000011111111) (= (mask!6334 (v!2632 (underlying!289 thiss!992))) #b00000000000000000000000111111111) (= (mask!6334 (v!2632 (underlying!289 thiss!992))) #b00000000000000000000001111111111) (= (mask!6334 (v!2632 (underlying!289 thiss!992))) #b00000000000000000000011111111111) (= (mask!6334 (v!2632 (underlying!289 thiss!992))) #b00000000000000000000111111111111) (= (mask!6334 (v!2632 (underlying!289 thiss!992))) #b00000000000000000001111111111111) (= (mask!6334 (v!2632 (underlying!289 thiss!992))) #b00000000000000000011111111111111) (= (mask!6334 (v!2632 (underlying!289 thiss!992))) #b00000000000000000111111111111111) (= (mask!6334 (v!2632 (underlying!289 thiss!992))) #b00000000000000001111111111111111) (= (mask!6334 (v!2632 (underlying!289 thiss!992))) #b00000000000000011111111111111111) (= (mask!6334 (v!2632 (underlying!289 thiss!992))) #b00000000000000111111111111111111) (= (mask!6334 (v!2632 (underlying!289 thiss!992))) #b00000000000001111111111111111111) (= (mask!6334 (v!2632 (underlying!289 thiss!992))) #b00000000000011111111111111111111) (= (mask!6334 (v!2632 (underlying!289 thiss!992))) #b00000000000111111111111111111111) (= (mask!6334 (v!2632 (underlying!289 thiss!992))) #b00000000001111111111111111111111) (= (mask!6334 (v!2632 (underlying!289 thiss!992))) #b00000000011111111111111111111111) (= (mask!6334 (v!2632 (underlying!289 thiss!992))) #b00000000111111111111111111111111) (= (mask!6334 (v!2632 (underlying!289 thiss!992))) #b00000001111111111111111111111111) (= (mask!6334 (v!2632 (underlying!289 thiss!992))) #b00000011111111111111111111111111) (= (mask!6334 (v!2632 (underlying!289 thiss!992))) #b00000111111111111111111111111111) (= (mask!6334 (v!2632 (underlying!289 thiss!992))) #b00001111111111111111111111111111) (= (mask!6334 (v!2632 (underlying!289 thiss!992))) #b00011111111111111111111111111111) (= (mask!6334 (v!2632 (underlying!289 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!6334 (v!2632 (underlying!289 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> b!82780 d!20935))

(declare-fun d!20937 () Bool)

(declare-fun e!54284 () Bool)

(assert (=> d!20937 e!54284))

(declare-fun res!43042 () Bool)

(assert (=> d!20937 (=> (not res!43042) (not e!54284))))

(declare-fun lt!39053 () ListLongMap!1437)

(assert (=> d!20937 (= res!43042 (contains!744 lt!39053 (_1!1102 lt!38775)))))

(declare-fun lt!39055 () List!1504)

(assert (=> d!20937 (= lt!39053 (ListLongMap!1438 lt!39055))))

(declare-fun lt!39052 () Unit!2413)

(declare-fun lt!39054 () Unit!2413)

(assert (=> d!20937 (= lt!39052 lt!39054)))

(assert (=> d!20937 (= (getValueByKey!140 lt!39055 (_1!1102 lt!38775)) (Some!145 (_2!1102 lt!38775)))))

(assert (=> d!20937 (= lt!39054 (lemmaContainsTupThenGetReturnValue!57 lt!39055 (_1!1102 lt!38775) (_2!1102 lt!38775)))))

(assert (=> d!20937 (= lt!39055 (insertStrictlySorted!60 (toList!734 lt!38773) (_1!1102 lt!38775) (_2!1102 lt!38775)))))

(assert (=> d!20937 (= (+!105 lt!38773 lt!38775) lt!39053)))

(declare-fun b!83144 () Bool)

(declare-fun res!43041 () Bool)

(assert (=> b!83144 (=> (not res!43041) (not e!54284))))

(assert (=> b!83144 (= res!43041 (= (getValueByKey!140 (toList!734 lt!39053) (_1!1102 lt!38775)) (Some!145 (_2!1102 lt!38775))))))

(declare-fun b!83145 () Bool)

(assert (=> b!83145 (= e!54284 (contains!746 (toList!734 lt!39053) lt!38775))))

(assert (= (and d!20937 res!43042) b!83144))

(assert (= (and b!83144 res!43041) b!83145))

(declare-fun m!86119 () Bool)

(assert (=> d!20937 m!86119))

(declare-fun m!86121 () Bool)

(assert (=> d!20937 m!86121))

(declare-fun m!86123 () Bool)

(assert (=> d!20937 m!86123))

(declare-fun m!86125 () Bool)

(assert (=> d!20937 m!86125))

(declare-fun m!86127 () Bool)

(assert (=> b!83144 m!86127))

(declare-fun m!86129 () Bool)

(assert (=> b!83145 m!86129))

(assert (=> b!82780 d!20937))

(declare-fun d!20939 () Bool)

(assert (=> d!20939 (= (valid!333 thiss!992) (valid!334 (v!2632 (underlying!289 thiss!992))))))

(declare-fun bs!3520 () Bool)

(assert (= bs!3520 d!20939))

(declare-fun m!86131 () Bool)

(assert (=> bs!3520 m!86131))

(assert (=> start!10518 d!20939))

(declare-fun d!20941 () Bool)

(assert (=> d!20941 (= (array_inv!1175 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvsge (size!2147 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!82790 d!20941))

(declare-fun d!20943 () Bool)

(assert (=> d!20943 (= (array_inv!1176 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvsge (size!2148 (_values!2299 (v!2632 (underlying!289 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!82790 d!20943))

(declare-fun d!20945 () Bool)

(declare-fun c!13245 () Bool)

(assert (=> d!20945 (= c!13245 ((_ is ValueCellFull!920) (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) from!355)))))

(declare-fun e!54287 () V!3017)

(assert (=> d!20945 (= (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) from!355) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!54287)))

(declare-fun b!83150 () Bool)

(declare-fun get!1199 (ValueCell!920 V!3017) V!3017)

(assert (=> b!83150 (= e!54287 (get!1199 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) from!355) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!83151 () Bool)

(declare-fun get!1200 (ValueCell!920 V!3017) V!3017)

(assert (=> b!83151 (= e!54287 (get!1200 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) from!355) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!20945 c!13245) b!83150))

(assert (= (and d!20945 (not c!13245)) b!83151))

(assert (=> b!83150 m!85723))

(assert (=> b!83150 m!85725))

(declare-fun m!86133 () Bool)

(assert (=> b!83150 m!86133))

(assert (=> b!83151 m!85723))

(assert (=> b!83151 m!85725))

(declare-fun m!86135 () Bool)

(assert (=> b!83151 m!86135))

(assert (=> b!82776 d!20945))

(declare-fun d!20947 () Bool)

(assert (=> d!20947 (= (map!1193 newMap!16) (getCurrentListMap!429 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun bs!3521 () Bool)

(assert (= bs!3521 d!20947))

(assert (=> bs!3521 m!85945))

(assert (=> b!82789 d!20947))

(declare-fun b!83194 () Bool)

(declare-fun e!54321 () Unit!2413)

(declare-fun Unit!2424 () Unit!2413)

(assert (=> b!83194 (= e!54321 Unit!2424)))

(declare-fun b!83195 () Bool)

(declare-fun e!54326 () Bool)

(declare-fun e!54314 () Bool)

(assert (=> b!83195 (= e!54326 e!54314)))

(declare-fun c!13262 () Bool)

(assert (=> b!83195 (= c!13262 (not (= (bvand (extraKeys!2159 (v!2632 (underlying!289 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun call!7797 () ListLongMap!1437)

(declare-fun call!7798 () ListLongMap!1437)

(declare-fun c!13258 () Bool)

(declare-fun c!13263 () Bool)

(declare-fun bm!7792 () Bool)

(declare-fun call!7801 () ListLongMap!1437)

(declare-fun call!7796 () ListLongMap!1437)

(assert (=> bm!7792 (= call!7798 (+!105 (ite c!13263 call!7801 (ite c!13258 call!7796 call!7797)) (ite (or c!13263 c!13258) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun bm!7793 () Bool)

(declare-fun call!7800 () Bool)

(declare-fun lt!39113 () ListLongMap!1437)

(assert (=> bm!7793 (= call!7800 (contains!744 lt!39113 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!54322 () Bool)

(declare-fun b!83196 () Bool)

(assert (=> b!83196 (= e!54322 (= (apply!81 lt!39113 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!83196 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2148 (_values!2299 (v!2632 (underlying!289 thiss!992))))))))

(assert (=> b!83196 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2147 (_keys!3984 (v!2632 (underlying!289 thiss!992))))))))

(declare-fun b!83197 () Bool)

(declare-fun call!7799 () Bool)

(assert (=> b!83197 (= e!54314 (not call!7799))))

(declare-fun b!83198 () Bool)

(declare-fun e!54325 () Bool)

(assert (=> b!83198 (= e!54325 (validKeyInArray!0 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun bm!7794 () Bool)

(assert (=> bm!7794 (= call!7799 (contains!744 lt!39113 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!83200 () Bool)

(declare-fun e!54315 () Bool)

(assert (=> b!83200 (= e!54315 (= (apply!81 lt!39113 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))

(declare-fun b!83201 () Bool)

(declare-fun res!43069 () Bool)

(assert (=> b!83201 (=> (not res!43069) (not e!54326))))

(declare-fun e!54323 () Bool)

(assert (=> b!83201 (= res!43069 e!54323)))

(declare-fun c!13259 () Bool)

(assert (=> b!83201 (= c!13259 (not (= (bvand (extraKeys!2159 (v!2632 (underlying!289 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!7795 () Bool)

(declare-fun call!7795 () ListLongMap!1437)

(assert (=> bm!7795 (= call!7795 call!7798)))

(declare-fun b!83202 () Bool)

(assert (=> b!83202 (= e!54323 e!54315)))

(declare-fun res!43066 () Bool)

(assert (=> b!83202 (= res!43066 call!7800)))

(assert (=> b!83202 (=> (not res!43066) (not e!54315))))

(declare-fun b!83203 () Bool)

(declare-fun lt!39106 () Unit!2413)

(assert (=> b!83203 (= e!54321 lt!39106)))

(declare-fun lt!39109 () ListLongMap!1437)

(assert (=> b!83203 (= lt!39109 (getCurrentListMapNoExtraKeys!70 (_keys!3984 (v!2632 (underlying!289 thiss!992))) (_values!2299 (v!2632 (underlying!289 thiss!992))) (mask!6334 (v!2632 (underlying!289 thiss!992))) (extraKeys!2159 (v!2632 (underlying!289 thiss!992))) (zeroValue!2210 (v!2632 (underlying!289 thiss!992))) (minValue!2210 (v!2632 (underlying!289 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2316 (v!2632 (underlying!289 thiss!992)))))))

(declare-fun lt!39102 () (_ BitVec 64))

(assert (=> b!83203 (= lt!39102 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39118 () (_ BitVec 64))

(assert (=> b!83203 (= lt!39118 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!39114 () Unit!2413)

(declare-fun addStillContains!57 (ListLongMap!1437 (_ BitVec 64) V!3017 (_ BitVec 64)) Unit!2413)

(assert (=> b!83203 (= lt!39114 (addStillContains!57 lt!39109 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))) lt!39118))))

(assert (=> b!83203 (contains!744 (+!105 lt!39109 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))) lt!39118)))

(declare-fun lt!39104 () Unit!2413)

(assert (=> b!83203 (= lt!39104 lt!39114)))

(declare-fun lt!39121 () ListLongMap!1437)

(assert (=> b!83203 (= lt!39121 (getCurrentListMapNoExtraKeys!70 (_keys!3984 (v!2632 (underlying!289 thiss!992))) (_values!2299 (v!2632 (underlying!289 thiss!992))) (mask!6334 (v!2632 (underlying!289 thiss!992))) (extraKeys!2159 (v!2632 (underlying!289 thiss!992))) (zeroValue!2210 (v!2632 (underlying!289 thiss!992))) (minValue!2210 (v!2632 (underlying!289 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2316 (v!2632 (underlying!289 thiss!992)))))))

(declare-fun lt!39103 () (_ BitVec 64))

(assert (=> b!83203 (= lt!39103 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39107 () (_ BitVec 64))

(assert (=> b!83203 (= lt!39107 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!39120 () Unit!2413)

(declare-fun addApplyDifferent!57 (ListLongMap!1437 (_ BitVec 64) V!3017 (_ BitVec 64)) Unit!2413)

(assert (=> b!83203 (= lt!39120 (addApplyDifferent!57 lt!39121 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992))) lt!39107))))

(assert (=> b!83203 (= (apply!81 (+!105 lt!39121 (tuple2!2183 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) lt!39107) (apply!81 lt!39121 lt!39107))))

(declare-fun lt!39119 () Unit!2413)

(assert (=> b!83203 (= lt!39119 lt!39120)))

(declare-fun lt!39108 () ListLongMap!1437)

(assert (=> b!83203 (= lt!39108 (getCurrentListMapNoExtraKeys!70 (_keys!3984 (v!2632 (underlying!289 thiss!992))) (_values!2299 (v!2632 (underlying!289 thiss!992))) (mask!6334 (v!2632 (underlying!289 thiss!992))) (extraKeys!2159 (v!2632 (underlying!289 thiss!992))) (zeroValue!2210 (v!2632 (underlying!289 thiss!992))) (minValue!2210 (v!2632 (underlying!289 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2316 (v!2632 (underlying!289 thiss!992)))))))

(declare-fun lt!39112 () (_ BitVec 64))

(assert (=> b!83203 (= lt!39112 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39117 () (_ BitVec 64))

(assert (=> b!83203 (= lt!39117 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!39111 () Unit!2413)

(assert (=> b!83203 (= lt!39111 (addApplyDifferent!57 lt!39108 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))) lt!39117))))

(assert (=> b!83203 (= (apply!81 (+!105 lt!39108 (tuple2!2183 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))) lt!39117) (apply!81 lt!39108 lt!39117))))

(declare-fun lt!39110 () Unit!2413)

(assert (=> b!83203 (= lt!39110 lt!39111)))

(declare-fun lt!39115 () ListLongMap!1437)

(assert (=> b!83203 (= lt!39115 (getCurrentListMapNoExtraKeys!70 (_keys!3984 (v!2632 (underlying!289 thiss!992))) (_values!2299 (v!2632 (underlying!289 thiss!992))) (mask!6334 (v!2632 (underlying!289 thiss!992))) (extraKeys!2159 (v!2632 (underlying!289 thiss!992))) (zeroValue!2210 (v!2632 (underlying!289 thiss!992))) (minValue!2210 (v!2632 (underlying!289 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2316 (v!2632 (underlying!289 thiss!992)))))))

(declare-fun lt!39105 () (_ BitVec 64))

(assert (=> b!83203 (= lt!39105 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39101 () (_ BitVec 64))

(assert (=> b!83203 (= lt!39101 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!83203 (= lt!39106 (addApplyDifferent!57 lt!39115 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992))) lt!39101))))

(assert (=> b!83203 (= (apply!81 (+!105 lt!39115 (tuple2!2183 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) lt!39101) (apply!81 lt!39115 lt!39101))))

(declare-fun bm!7796 () Bool)

(assert (=> bm!7796 (= call!7801 (getCurrentListMapNoExtraKeys!70 (_keys!3984 (v!2632 (underlying!289 thiss!992))) (_values!2299 (v!2632 (underlying!289 thiss!992))) (mask!6334 (v!2632 (underlying!289 thiss!992))) (extraKeys!2159 (v!2632 (underlying!289 thiss!992))) (zeroValue!2210 (v!2632 (underlying!289 thiss!992))) (minValue!2210 (v!2632 (underlying!289 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2316 (v!2632 (underlying!289 thiss!992)))))))

(declare-fun b!83204 () Bool)

(declare-fun e!54319 () ListLongMap!1437)

(assert (=> b!83204 (= e!54319 call!7795)))

(declare-fun bm!7797 () Bool)

(assert (=> bm!7797 (= call!7796 call!7801)))

(declare-fun d!20949 () Bool)

(assert (=> d!20949 e!54326))

(declare-fun res!43068 () Bool)

(assert (=> d!20949 (=> (not res!43068) (not e!54326))))

(assert (=> d!20949 (= res!43068 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2147 (_keys!3984 (v!2632 (underlying!289 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2147 (_keys!3984 (v!2632 (underlying!289 thiss!992))))))))))

(declare-fun lt!39100 () ListLongMap!1437)

(assert (=> d!20949 (= lt!39113 lt!39100)))

(declare-fun lt!39116 () Unit!2413)

(assert (=> d!20949 (= lt!39116 e!54321)))

(declare-fun c!13260 () Bool)

(declare-fun e!54318 () Bool)

(assert (=> d!20949 (= c!13260 e!54318)))

(declare-fun res!43064 () Bool)

(assert (=> d!20949 (=> (not res!43064) (not e!54318))))

(assert (=> d!20949 (= res!43064 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2147 (_keys!3984 (v!2632 (underlying!289 thiss!992))))))))

(declare-fun e!54324 () ListLongMap!1437)

(assert (=> d!20949 (= lt!39100 e!54324)))

(assert (=> d!20949 (= c!13263 (and (not (= (bvand (extraKeys!2159 (v!2632 (underlying!289 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2159 (v!2632 (underlying!289 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!20949 (validMask!0 (mask!6334 (v!2632 (underlying!289 thiss!992))))))

(assert (=> d!20949 (= (getCurrentListMap!429 (_keys!3984 (v!2632 (underlying!289 thiss!992))) (_values!2299 (v!2632 (underlying!289 thiss!992))) (mask!6334 (v!2632 (underlying!289 thiss!992))) (extraKeys!2159 (v!2632 (underlying!289 thiss!992))) (zeroValue!2210 (v!2632 (underlying!289 thiss!992))) (minValue!2210 (v!2632 (underlying!289 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2316 (v!2632 (underlying!289 thiss!992)))) lt!39113)))

(declare-fun b!83199 () Bool)

(declare-fun c!13261 () Bool)

(assert (=> b!83199 (= c!13261 (and (not (= (bvand (extraKeys!2159 (v!2632 (underlying!289 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2159 (v!2632 (underlying!289 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!54316 () ListLongMap!1437)

(assert (=> b!83199 (= e!54316 e!54319)))

(declare-fun b!83205 () Bool)

(declare-fun res!43067 () Bool)

(assert (=> b!83205 (=> (not res!43067) (not e!54326))))

(declare-fun e!54317 () Bool)

(assert (=> b!83205 (= res!43067 e!54317)))

(declare-fun res!43063 () Bool)

(assert (=> b!83205 (=> res!43063 e!54317)))

(assert (=> b!83205 (= res!43063 (not e!54325))))

(declare-fun res!43061 () Bool)

(assert (=> b!83205 (=> (not res!43061) (not e!54325))))

(assert (=> b!83205 (= res!43061 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2147 (_keys!3984 (v!2632 (underlying!289 thiss!992))))))))

(declare-fun bm!7798 () Bool)

(assert (=> bm!7798 (= call!7797 call!7796)))

(declare-fun b!83206 () Bool)

(assert (=> b!83206 (= e!54324 (+!105 call!7798 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))

(declare-fun b!83207 () Bool)

(assert (=> b!83207 (= e!54316 call!7795)))

(declare-fun b!83208 () Bool)

(declare-fun e!54320 () Bool)

(assert (=> b!83208 (= e!54314 e!54320)))

(declare-fun res!43062 () Bool)

(assert (=> b!83208 (= res!43062 call!7799)))

(assert (=> b!83208 (=> (not res!43062) (not e!54320))))

(declare-fun b!83209 () Bool)

(assert (=> b!83209 (= e!54319 call!7797)))

(declare-fun b!83210 () Bool)

(assert (=> b!83210 (= e!54324 e!54316)))

(assert (=> b!83210 (= c!13258 (and (not (= (bvand (extraKeys!2159 (v!2632 (underlying!289 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2159 (v!2632 (underlying!289 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!83211 () Bool)

(assert (=> b!83211 (= e!54317 e!54322)))

(declare-fun res!43065 () Bool)

(assert (=> b!83211 (=> (not res!43065) (not e!54322))))

(assert (=> b!83211 (= res!43065 (contains!744 lt!39113 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!83211 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2147 (_keys!3984 (v!2632 (underlying!289 thiss!992))))))))

(declare-fun b!83212 () Bool)

(assert (=> b!83212 (= e!54323 (not call!7800))))

(declare-fun b!83213 () Bool)

(assert (=> b!83213 (= e!54320 (= (apply!81 lt!39113 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))

(declare-fun b!83214 () Bool)

(assert (=> b!83214 (= e!54318 (validKeyInArray!0 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!20949 c!13263) b!83206))

(assert (= (and d!20949 (not c!13263)) b!83210))

(assert (= (and b!83210 c!13258) b!83207))

(assert (= (and b!83210 (not c!13258)) b!83199))

(assert (= (and b!83199 c!13261) b!83204))

(assert (= (and b!83199 (not c!13261)) b!83209))

(assert (= (or b!83204 b!83209) bm!7798))

(assert (= (or b!83207 bm!7798) bm!7797))

(assert (= (or b!83207 b!83204) bm!7795))

(assert (= (or b!83206 bm!7797) bm!7796))

(assert (= (or b!83206 bm!7795) bm!7792))

(assert (= (and d!20949 res!43064) b!83214))

(assert (= (and d!20949 c!13260) b!83203))

(assert (= (and d!20949 (not c!13260)) b!83194))

(assert (= (and d!20949 res!43068) b!83205))

(assert (= (and b!83205 res!43061) b!83198))

(assert (= (and b!83205 (not res!43063)) b!83211))

(assert (= (and b!83211 res!43065) b!83196))

(assert (= (and b!83205 res!43067) b!83201))

(assert (= (and b!83201 c!13259) b!83202))

(assert (= (and b!83201 (not c!13259)) b!83212))

(assert (= (and b!83202 res!43066) b!83200))

(assert (= (or b!83202 b!83212) bm!7793))

(assert (= (and b!83201 res!43069) b!83195))

(assert (= (and b!83195 c!13262) b!83208))

(assert (= (and b!83195 (not c!13262)) b!83197))

(assert (= (and b!83208 res!43062) b!83213))

(assert (= (or b!83208 b!83197) bm!7794))

(declare-fun b_lambda!3703 () Bool)

(assert (=> (not b_lambda!3703) (not b!83196)))

(assert (=> b!83196 t!5193))

(declare-fun b_and!5069 () Bool)

(assert (= b_and!5065 (and (=> t!5193 result!2875) b_and!5069)))

(assert (=> b!83196 t!5195))

(declare-fun b_and!5071 () Bool)

(assert (= b_and!5067 (and (=> t!5195 result!2879) b_and!5071)))

(assert (=> b!83214 m!85989))

(assert (=> b!83214 m!85989))

(assert (=> b!83214 m!86057))

(assert (=> b!83196 m!86061))

(assert (=> b!83196 m!85989))

(declare-fun m!86137 () Bool)

(assert (=> b!83196 m!86137))

(assert (=> b!83196 m!85989))

(assert (=> b!83196 m!85725))

(assert (=> b!83196 m!86061))

(assert (=> b!83196 m!85725))

(assert (=> b!83196 m!86063))

(assert (=> d!20949 m!85763))

(declare-fun m!86139 () Bool)

(assert (=> b!83213 m!86139))

(declare-fun m!86141 () Bool)

(assert (=> b!83203 m!86141))

(declare-fun m!86143 () Bool)

(assert (=> b!83203 m!86143))

(declare-fun m!86145 () Bool)

(assert (=> b!83203 m!86145))

(declare-fun m!86147 () Bool)

(assert (=> b!83203 m!86147))

(assert (=> b!83203 m!86143))

(declare-fun m!86149 () Bool)

(assert (=> b!83203 m!86149))

(declare-fun m!86151 () Bool)

(assert (=> b!83203 m!86151))

(declare-fun m!86153 () Bool)

(assert (=> b!83203 m!86153))

(declare-fun m!86155 () Bool)

(assert (=> b!83203 m!86155))

(declare-fun m!86157 () Bool)

(assert (=> b!83203 m!86157))

(declare-fun m!86159 () Bool)

(assert (=> b!83203 m!86159))

(assert (=> b!83203 m!85773))

(assert (=> b!83203 m!85989))

(assert (=> b!83203 m!86157))

(assert (=> b!83203 m!86151))

(assert (=> b!83203 m!86145))

(declare-fun m!86161 () Bool)

(assert (=> b!83203 m!86161))

(declare-fun m!86163 () Bool)

(assert (=> b!83203 m!86163))

(declare-fun m!86165 () Bool)

(assert (=> b!83203 m!86165))

(declare-fun m!86167 () Bool)

(assert (=> b!83203 m!86167))

(declare-fun m!86169 () Bool)

(assert (=> b!83203 m!86169))

(declare-fun m!86171 () Bool)

(assert (=> b!83206 m!86171))

(declare-fun m!86173 () Bool)

(assert (=> bm!7792 m!86173))

(assert (=> b!83211 m!85989))

(assert (=> b!83211 m!85989))

(declare-fun m!86175 () Bool)

(assert (=> b!83211 m!86175))

(assert (=> bm!7796 m!85773))

(declare-fun m!86177 () Bool)

(assert (=> bm!7794 m!86177))

(assert (=> b!83198 m!85989))

(assert (=> b!83198 m!85989))

(assert (=> b!83198 m!86057))

(declare-fun m!86179 () Bool)

(assert (=> bm!7793 m!86179))

(declare-fun m!86181 () Bool)

(assert (=> b!83200 m!86181))

(assert (=> b!82789 d!20949))

(declare-fun b!83222 () Bool)

(declare-fun e!54331 () Bool)

(assert (=> b!83222 (= e!54331 tp_is_empty!2527)))

(declare-fun mapNonEmpty!3383 () Bool)

(declare-fun mapRes!3383 () Bool)

(declare-fun tp!8909 () Bool)

(declare-fun e!54332 () Bool)

(assert (=> mapNonEmpty!3383 (= mapRes!3383 (and tp!8909 e!54332))))

(declare-fun mapKey!3383 () (_ BitVec 32))

(declare-fun mapRest!3383 () (Array (_ BitVec 32) ValueCell!920))

(declare-fun mapValue!3383 () ValueCell!920)

(assert (=> mapNonEmpty!3383 (= mapRest!3367 (store mapRest!3383 mapKey!3383 mapValue!3383))))

(declare-fun mapIsEmpty!3383 () Bool)

(assert (=> mapIsEmpty!3383 mapRes!3383))

(declare-fun b!83221 () Bool)

(assert (=> b!83221 (= e!54332 tp_is_empty!2527)))

(declare-fun condMapEmpty!3383 () Bool)

(declare-fun mapDefault!3383 () ValueCell!920)

(assert (=> mapNonEmpty!3367 (= condMapEmpty!3383 (= mapRest!3367 ((as const (Array (_ BitVec 32) ValueCell!920)) mapDefault!3383)))))

(assert (=> mapNonEmpty!3367 (= tp!8879 (and e!54331 mapRes!3383))))

(assert (= (and mapNonEmpty!3367 condMapEmpty!3383) mapIsEmpty!3383))

(assert (= (and mapNonEmpty!3367 (not condMapEmpty!3383)) mapNonEmpty!3383))

(assert (= (and mapNonEmpty!3383 ((_ is ValueCellFull!920) mapValue!3383)) b!83221))

(assert (= (and mapNonEmpty!3367 ((_ is ValueCellFull!920) mapDefault!3383)) b!83222))

(declare-fun m!86183 () Bool)

(assert (=> mapNonEmpty!3383 m!86183))

(declare-fun b!83224 () Bool)

(declare-fun e!54333 () Bool)

(assert (=> b!83224 (= e!54333 tp_is_empty!2527)))

(declare-fun mapNonEmpty!3384 () Bool)

(declare-fun mapRes!3384 () Bool)

(declare-fun tp!8910 () Bool)

(declare-fun e!54334 () Bool)

(assert (=> mapNonEmpty!3384 (= mapRes!3384 (and tp!8910 e!54334))))

(declare-fun mapKey!3384 () (_ BitVec 32))

(declare-fun mapRest!3384 () (Array (_ BitVec 32) ValueCell!920))

(declare-fun mapValue!3384 () ValueCell!920)

(assert (=> mapNonEmpty!3384 (= mapRest!3368 (store mapRest!3384 mapKey!3384 mapValue!3384))))

(declare-fun mapIsEmpty!3384 () Bool)

(assert (=> mapIsEmpty!3384 mapRes!3384))

(declare-fun b!83223 () Bool)

(assert (=> b!83223 (= e!54334 tp_is_empty!2527)))

(declare-fun condMapEmpty!3384 () Bool)

(declare-fun mapDefault!3384 () ValueCell!920)

(assert (=> mapNonEmpty!3368 (= condMapEmpty!3384 (= mapRest!3368 ((as const (Array (_ BitVec 32) ValueCell!920)) mapDefault!3384)))))

(assert (=> mapNonEmpty!3368 (= tp!8881 (and e!54333 mapRes!3384))))

(assert (= (and mapNonEmpty!3368 condMapEmpty!3384) mapIsEmpty!3384))

(assert (= (and mapNonEmpty!3368 (not condMapEmpty!3384)) mapNonEmpty!3384))

(assert (= (and mapNonEmpty!3384 ((_ is ValueCellFull!920) mapValue!3384)) b!83223))

(assert (= (and mapNonEmpty!3368 ((_ is ValueCellFull!920) mapDefault!3384)) b!83224))

(declare-fun m!86185 () Bool)

(assert (=> mapNonEmpty!3384 m!86185))

(declare-fun b_lambda!3705 () Bool)

(assert (= b_lambda!3701 (or (and b!82790 b_free!2221) (and b!82787 b_free!2223 (= (defaultEntry!2316 newMap!16) (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))))) b_lambda!3705)))

(declare-fun b_lambda!3707 () Bool)

(assert (= b_lambda!3699 (or (and b!82790 b_free!2221) (and b!82787 b_free!2223 (= (defaultEntry!2316 newMap!16) (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))))) b_lambda!3707)))

(declare-fun b_lambda!3709 () Bool)

(assert (= b_lambda!3703 (or (and b!82790 b_free!2221) (and b!82787 b_free!2223 (= (defaultEntry!2316 newMap!16) (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))))) b_lambda!3709)))

(check-sat (not bm!7764) b_and!5071 (not b!83139) (not d!20929) (not bm!7769) (not b!83099) (not d!20923) (not b!83140) (not b!83196) (not d!20949) (not d!20925) (not b!83042) (not d!20931) (not b!83214) (not bm!7792) (not b!83091) (not b!83132) (not d!20927) (not b!83096) (not d!20939) (not mapNonEmpty!3384) (not b!83203) (not b!83150) (not b!83100) (not bm!7751) (not d!20901) (not b!83054) (not bm!7754) (not d!20913) (not b!83135) (not b!83200) (not b!83145) (not bm!7796) (not b_lambda!3705) (not b!83101) (not bm!7774) (not b!83127) (not b!83211) (not b!83070) (not b!82938) (not d!20921) (not d!20899) (not bm!7748) (not b_next!2221) (not b!83098) (not d!20907) (not b_lambda!3697) (not b!83137) (not d!20897) (not b!83141) (not b!83059) (not b!83045) (not b!83129) (not b!83097) (not b!83144) (not d!20919) (not bm!7794) (not b!82929) (not d!20933) (not bm!7755) (not bm!7767) tp_is_empty!2527 (not b!82927) (not b_next!2223) (not b!82928) (not bm!7793) (not d!20947) (not bm!7750) (not b!83138) (not bm!7760) (not d!20909) (not b!82936) (not b!83057) (not b_lambda!3707) (not b!83133) (not b!83131) (not b!83023) (not d!20937) (not b!83075) (not b!83064) (not b!83143) (not b!83198) (not b!83213) (not mapNonEmpty!3383) (not bm!7777) (not b!83089) (not b!83206) (not bm!7758) (not b!83090) (not b!83142) (not b_lambda!3709) b_and!5069 (not bm!7756) (not bm!7761) (not d!20917) (not b!83136) (not b!83151))
(check-sat b_and!5069 b_and!5071 (not b_next!2221) (not b_next!2223))
(get-model)

(declare-fun b!83235 () Bool)

(declare-fun e!54340 () Option!146)

(assert (=> b!83235 (= e!54340 (getValueByKey!140 (t!5196 (toList!734 lt!39008)) (_1!1102 lt!38775)))))

(declare-fun d!20951 () Bool)

(declare-fun c!13268 () Bool)

(assert (=> d!20951 (= c!13268 (and ((_ is Cons!1500) (toList!734 lt!39008)) (= (_1!1102 (h!2090 (toList!734 lt!39008))) (_1!1102 lt!38775))))))

(declare-fun e!54339 () Option!146)

(assert (=> d!20951 (= (getValueByKey!140 (toList!734 lt!39008) (_1!1102 lt!38775)) e!54339)))

(declare-fun b!83233 () Bool)

(assert (=> b!83233 (= e!54339 (Some!145 (_2!1102 (h!2090 (toList!734 lt!39008)))))))

(declare-fun b!83234 () Bool)

(assert (=> b!83234 (= e!54339 e!54340)))

(declare-fun c!13269 () Bool)

(assert (=> b!83234 (= c!13269 (and ((_ is Cons!1500) (toList!734 lt!39008)) (not (= (_1!1102 (h!2090 (toList!734 lt!39008))) (_1!1102 lt!38775)))))))

(declare-fun b!83236 () Bool)

(assert (=> b!83236 (= e!54340 None!144)))

(assert (= (and d!20951 c!13268) b!83233))

(assert (= (and d!20951 (not c!13268)) b!83234))

(assert (= (and b!83234 c!13269) b!83235))

(assert (= (and b!83234 (not c!13269)) b!83236))

(declare-fun m!86187 () Bool)

(assert (=> b!83235 m!86187))

(assert (=> b!83098 d!20951))

(declare-fun d!20953 () Bool)

(declare-fun e!54341 () Bool)

(assert (=> d!20953 e!54341))

(declare-fun res!43071 () Bool)

(assert (=> d!20953 (=> (not res!43071) (not e!54341))))

(declare-fun lt!39123 () ListLongMap!1437)

(assert (=> d!20953 (= res!43071 (contains!744 lt!39123 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(declare-fun lt!39125 () List!1504)

(assert (=> d!20953 (= lt!39123 (ListLongMap!1438 lt!39125))))

(declare-fun lt!39122 () Unit!2413)

(declare-fun lt!39124 () Unit!2413)

(assert (=> d!20953 (= lt!39122 lt!39124)))

(assert (=> d!20953 (= (getValueByKey!140 lt!39125 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))) (Some!145 (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(assert (=> d!20953 (= lt!39124 (lemmaContainsTupThenGetReturnValue!57 lt!39125 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(assert (=> d!20953 (= lt!39125 (insertStrictlySorted!60 (toList!734 call!7774) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(assert (=> d!20953 (= (+!105 call!7774 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) lt!39123)))

(declare-fun b!83237 () Bool)

(declare-fun res!43070 () Bool)

(assert (=> b!83237 (=> (not res!43070) (not e!54341))))

(assert (=> b!83237 (= res!43070 (= (getValueByKey!140 (toList!734 lt!39123) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))) (Some!145 (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))

(declare-fun b!83238 () Bool)

(assert (=> b!83238 (= e!54341 (contains!746 (toList!734 lt!39123) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))

(assert (= (and d!20953 res!43071) b!83237))

(assert (= (and b!83237 res!43070) b!83238))

(declare-fun m!86189 () Bool)

(assert (=> d!20953 m!86189))

(declare-fun m!86191 () Bool)

(assert (=> d!20953 m!86191))

(declare-fun m!86193 () Bool)

(assert (=> d!20953 m!86193))

(declare-fun m!86195 () Bool)

(assert (=> d!20953 m!86195))

(declare-fun m!86197 () Bool)

(assert (=> b!83237 m!86197))

(declare-fun m!86199 () Bool)

(assert (=> b!83238 m!86199))

(assert (=> b!83057 d!20953))

(declare-fun d!20955 () Bool)

(declare-fun e!54343 () Bool)

(assert (=> d!20955 e!54343))

(declare-fun res!43072 () Bool)

(assert (=> d!20955 (=> res!43072 e!54343)))

(declare-fun lt!39126 () Bool)

(assert (=> d!20955 (= res!43072 (not lt!39126))))

(declare-fun lt!39129 () Bool)

(assert (=> d!20955 (= lt!39126 lt!39129)))

(declare-fun lt!39128 () Unit!2413)

(declare-fun e!54342 () Unit!2413)

(assert (=> d!20955 (= lt!39128 e!54342)))

(declare-fun c!13270 () Bool)

(assert (=> d!20955 (= c!13270 lt!39129)))

(assert (=> d!20955 (= lt!39129 (containsKey!143 (toList!734 lt!39113) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!20955 (= (contains!744 lt!39113 #b1000000000000000000000000000000000000000000000000000000000000000) lt!39126)))

(declare-fun b!83239 () Bool)

(declare-fun lt!39127 () Unit!2413)

(assert (=> b!83239 (= e!54342 lt!39127)))

(assert (=> b!83239 (= lt!39127 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 lt!39113) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!83239 (isDefined!92 (getValueByKey!140 (toList!734 lt!39113) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!83240 () Bool)

(declare-fun Unit!2425 () Unit!2413)

(assert (=> b!83240 (= e!54342 Unit!2425)))

(declare-fun b!83241 () Bool)

(assert (=> b!83241 (= e!54343 (isDefined!92 (getValueByKey!140 (toList!734 lt!39113) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!20955 c!13270) b!83239))

(assert (= (and d!20955 (not c!13270)) b!83240))

(assert (= (and d!20955 (not res!43072)) b!83241))

(declare-fun m!86201 () Bool)

(assert (=> d!20955 m!86201))

(declare-fun m!86203 () Bool)

(assert (=> b!83239 m!86203))

(declare-fun m!86205 () Bool)

(assert (=> b!83239 m!86205))

(assert (=> b!83239 m!86205))

(declare-fun m!86207 () Bool)

(assert (=> b!83239 m!86207))

(assert (=> b!83241 m!86205))

(assert (=> b!83241 m!86205))

(assert (=> b!83241 m!86207))

(assert (=> bm!7794 d!20955))

(declare-fun b!83244 () Bool)

(declare-fun e!54345 () Option!146)

(assert (=> b!83244 (= e!54345 (getValueByKey!140 (t!5196 (toList!734 lt!39004)) (_1!1102 lt!38779)))))

(declare-fun d!20957 () Bool)

(declare-fun c!13271 () Bool)

(assert (=> d!20957 (= c!13271 (and ((_ is Cons!1500) (toList!734 lt!39004)) (= (_1!1102 (h!2090 (toList!734 lt!39004))) (_1!1102 lt!38779))))))

(declare-fun e!54344 () Option!146)

(assert (=> d!20957 (= (getValueByKey!140 (toList!734 lt!39004) (_1!1102 lt!38779)) e!54344)))

(declare-fun b!83242 () Bool)

(assert (=> b!83242 (= e!54344 (Some!145 (_2!1102 (h!2090 (toList!734 lt!39004)))))))

(declare-fun b!83243 () Bool)

(assert (=> b!83243 (= e!54344 e!54345)))

(declare-fun c!13272 () Bool)

(assert (=> b!83243 (= c!13272 (and ((_ is Cons!1500) (toList!734 lt!39004)) (not (= (_1!1102 (h!2090 (toList!734 lt!39004))) (_1!1102 lt!38779)))))))

(declare-fun b!83245 () Bool)

(assert (=> b!83245 (= e!54345 None!144)))

(assert (= (and d!20957 c!13271) b!83242))

(assert (= (and d!20957 (not c!13271)) b!83243))

(assert (= (and b!83243 c!13272) b!83244))

(assert (= (and b!83243 (not c!13272)) b!83245))

(declare-fun m!86209 () Bool)

(assert (=> b!83244 m!86209))

(assert (=> b!83096 d!20957))

(declare-fun b!83246 () Bool)

(declare-fun e!54353 () Unit!2413)

(declare-fun Unit!2426 () Unit!2413)

(assert (=> b!83246 (= e!54353 Unit!2426)))

(declare-fun b!83247 () Bool)

(declare-fun e!54358 () Bool)

(declare-fun e!54346 () Bool)

(assert (=> b!83247 (= e!54358 e!54346)))

(declare-fun c!13277 () Bool)

(assert (=> b!83247 (= c!13277 (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!7799 () Bool)

(declare-fun call!7804 () ListLongMap!1437)

(declare-fun c!13273 () Bool)

(declare-fun call!7808 () ListLongMap!1437)

(declare-fun c!13278 () Bool)

(declare-fun call!7805 () ListLongMap!1437)

(declare-fun call!7803 () ListLongMap!1437)

(assert (=> bm!7799 (= call!7805 (+!105 (ite c!13278 call!7808 (ite c!13273 call!7803 call!7804)) (ite (or c!13278 c!13273) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16)))))))

(declare-fun bm!7800 () Bool)

(declare-fun call!7807 () Bool)

(declare-fun lt!39143 () ListLongMap!1437)

(assert (=> bm!7800 (= call!7807 (contains!744 lt!39143 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!83248 () Bool)

(declare-fun e!54354 () Bool)

(assert (=> b!83248 (= e!54354 (= (apply!81 lt!39143 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)) (get!1198 (select (arr!1905 (_values!2299 newMap!16)) #b00000000000000000000000000000000) (dynLambda!343 (defaultEntry!2316 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!83248 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2148 (_values!2299 newMap!16))))))

(assert (=> b!83248 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))))))

(declare-fun b!83249 () Bool)

(declare-fun call!7806 () Bool)

(assert (=> b!83249 (= e!54346 (not call!7806))))

(declare-fun b!83250 () Bool)

(declare-fun e!54357 () Bool)

(assert (=> b!83250 (= e!54357 (validKeyInArray!0 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!7801 () Bool)

(assert (=> bm!7801 (= call!7806 (contains!744 lt!39143 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!83252 () Bool)

(declare-fun e!54347 () Bool)

(assert (=> b!83252 (= e!54347 (= (apply!81 lt!39143 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2210 newMap!16)))))

(declare-fun b!83253 () Bool)

(declare-fun res!43081 () Bool)

(assert (=> b!83253 (=> (not res!43081) (not e!54358))))

(declare-fun e!54355 () Bool)

(assert (=> b!83253 (= res!43081 e!54355)))

(declare-fun c!13274 () Bool)

(assert (=> b!83253 (= c!13274 (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!7802 () Bool)

(declare-fun call!7802 () ListLongMap!1437)

(assert (=> bm!7802 (= call!7802 call!7805)))

(declare-fun b!83254 () Bool)

(assert (=> b!83254 (= e!54355 e!54347)))

(declare-fun res!43078 () Bool)

(assert (=> b!83254 (= res!43078 call!7807)))

(assert (=> b!83254 (=> (not res!43078) (not e!54347))))

(declare-fun b!83255 () Bool)

(declare-fun lt!39136 () Unit!2413)

(assert (=> b!83255 (= e!54353 lt!39136)))

(declare-fun lt!39139 () ListLongMap!1437)

(assert (=> b!83255 (= lt!39139 (getCurrentListMapNoExtraKeys!70 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39132 () (_ BitVec 64))

(assert (=> b!83255 (= lt!39132 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39148 () (_ BitVec 64))

(assert (=> b!83255 (= lt!39148 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!39144 () Unit!2413)

(assert (=> b!83255 (= lt!39144 (addStillContains!57 lt!39139 lt!39132 (zeroValue!2210 newMap!16) lt!39148))))

(assert (=> b!83255 (contains!744 (+!105 lt!39139 (tuple2!2183 lt!39132 (zeroValue!2210 newMap!16))) lt!39148)))

(declare-fun lt!39134 () Unit!2413)

(assert (=> b!83255 (= lt!39134 lt!39144)))

(declare-fun lt!39151 () ListLongMap!1437)

(assert (=> b!83255 (= lt!39151 (getCurrentListMapNoExtraKeys!70 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39133 () (_ BitVec 64))

(assert (=> b!83255 (= lt!39133 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39137 () (_ BitVec 64))

(assert (=> b!83255 (= lt!39137 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!39150 () Unit!2413)

(assert (=> b!83255 (= lt!39150 (addApplyDifferent!57 lt!39151 lt!39133 (minValue!2210 newMap!16) lt!39137))))

(assert (=> b!83255 (= (apply!81 (+!105 lt!39151 (tuple2!2183 lt!39133 (minValue!2210 newMap!16))) lt!39137) (apply!81 lt!39151 lt!39137))))

(declare-fun lt!39149 () Unit!2413)

(assert (=> b!83255 (= lt!39149 lt!39150)))

(declare-fun lt!39138 () ListLongMap!1437)

(assert (=> b!83255 (= lt!39138 (getCurrentListMapNoExtraKeys!70 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39142 () (_ BitVec 64))

(assert (=> b!83255 (= lt!39142 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39147 () (_ BitVec 64))

(assert (=> b!83255 (= lt!39147 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!39141 () Unit!2413)

(assert (=> b!83255 (= lt!39141 (addApplyDifferent!57 lt!39138 lt!39142 (zeroValue!2210 newMap!16) lt!39147))))

(assert (=> b!83255 (= (apply!81 (+!105 lt!39138 (tuple2!2183 lt!39142 (zeroValue!2210 newMap!16))) lt!39147) (apply!81 lt!39138 lt!39147))))

(declare-fun lt!39140 () Unit!2413)

(assert (=> b!83255 (= lt!39140 lt!39141)))

(declare-fun lt!39145 () ListLongMap!1437)

(assert (=> b!83255 (= lt!39145 (getCurrentListMapNoExtraKeys!70 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39135 () (_ BitVec 64))

(assert (=> b!83255 (= lt!39135 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39131 () (_ BitVec 64))

(assert (=> b!83255 (= lt!39131 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!83255 (= lt!39136 (addApplyDifferent!57 lt!39145 lt!39135 (minValue!2210 newMap!16) lt!39131))))

(assert (=> b!83255 (= (apply!81 (+!105 lt!39145 (tuple2!2183 lt!39135 (minValue!2210 newMap!16))) lt!39131) (apply!81 lt!39145 lt!39131))))

(declare-fun bm!7803 () Bool)

(assert (=> bm!7803 (= call!7808 (getCurrentListMapNoExtraKeys!70 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun b!83256 () Bool)

(declare-fun e!54351 () ListLongMap!1437)

(assert (=> b!83256 (= e!54351 call!7802)))

(declare-fun bm!7804 () Bool)

(assert (=> bm!7804 (= call!7803 call!7808)))

(declare-fun d!20959 () Bool)

(assert (=> d!20959 e!54358))

(declare-fun res!43080 () Bool)

(assert (=> d!20959 (=> (not res!43080) (not e!54358))))

(assert (=> d!20959 (= res!43080 (or (bvsge #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))))))))

(declare-fun lt!39130 () ListLongMap!1437)

(assert (=> d!20959 (= lt!39143 lt!39130)))

(declare-fun lt!39146 () Unit!2413)

(assert (=> d!20959 (= lt!39146 e!54353)))

(declare-fun c!13275 () Bool)

(declare-fun e!54350 () Bool)

(assert (=> d!20959 (= c!13275 e!54350)))

(declare-fun res!43076 () Bool)

(assert (=> d!20959 (=> (not res!43076) (not e!54350))))

(assert (=> d!20959 (= res!43076 (bvslt #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))))))

(declare-fun e!54356 () ListLongMap!1437)

(assert (=> d!20959 (= lt!39130 e!54356)))

(assert (=> d!20959 (= c!13278 (and (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!20959 (validMask!0 (mask!6334 newMap!16))))

(assert (=> d!20959 (= (getCurrentListMap!429 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) lt!39143)))

(declare-fun b!83251 () Bool)

(declare-fun c!13276 () Bool)

(assert (=> b!83251 (= c!13276 (and (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!54348 () ListLongMap!1437)

(assert (=> b!83251 (= e!54348 e!54351)))

(declare-fun b!83257 () Bool)

(declare-fun res!43079 () Bool)

(assert (=> b!83257 (=> (not res!43079) (not e!54358))))

(declare-fun e!54349 () Bool)

(assert (=> b!83257 (= res!43079 e!54349)))

(declare-fun res!43075 () Bool)

(assert (=> b!83257 (=> res!43075 e!54349)))

(assert (=> b!83257 (= res!43075 (not e!54357))))

(declare-fun res!43073 () Bool)

(assert (=> b!83257 (=> (not res!43073) (not e!54357))))

(assert (=> b!83257 (= res!43073 (bvslt #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))))))

(declare-fun bm!7805 () Bool)

(assert (=> bm!7805 (= call!7804 call!7803)))

(declare-fun b!83258 () Bool)

(assert (=> b!83258 (= e!54356 (+!105 call!7805 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16))))))

(declare-fun b!83259 () Bool)

(assert (=> b!83259 (= e!54348 call!7802)))

(declare-fun b!83260 () Bool)

(declare-fun e!54352 () Bool)

(assert (=> b!83260 (= e!54346 e!54352)))

(declare-fun res!43074 () Bool)

(assert (=> b!83260 (= res!43074 call!7806)))

(assert (=> b!83260 (=> (not res!43074) (not e!54352))))

(declare-fun b!83261 () Bool)

(assert (=> b!83261 (= e!54351 call!7804)))

(declare-fun b!83262 () Bool)

(assert (=> b!83262 (= e!54356 e!54348)))

(assert (=> b!83262 (= c!13273 (and (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!83263 () Bool)

(assert (=> b!83263 (= e!54349 e!54354)))

(declare-fun res!43077 () Bool)

(assert (=> b!83263 (=> (not res!43077) (not e!54354))))

(assert (=> b!83263 (= res!43077 (contains!744 lt!39143 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!83263 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))))))

(declare-fun b!83264 () Bool)

(assert (=> b!83264 (= e!54355 (not call!7807))))

(declare-fun b!83265 () Bool)

(assert (=> b!83265 (= e!54352 (= (apply!81 lt!39143 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2210 newMap!16)))))

(declare-fun b!83266 () Bool)

(assert (=> b!83266 (= e!54350 (validKeyInArray!0 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!20959 c!13278) b!83258))

(assert (= (and d!20959 (not c!13278)) b!83262))

(assert (= (and b!83262 c!13273) b!83259))

(assert (= (and b!83262 (not c!13273)) b!83251))

(assert (= (and b!83251 c!13276) b!83256))

(assert (= (and b!83251 (not c!13276)) b!83261))

(assert (= (or b!83256 b!83261) bm!7805))

(assert (= (or b!83259 bm!7805) bm!7804))

(assert (= (or b!83259 b!83256) bm!7802))

(assert (= (or b!83258 bm!7804) bm!7803))

(assert (= (or b!83258 bm!7802) bm!7799))

(assert (= (and d!20959 res!43076) b!83266))

(assert (= (and d!20959 c!13275) b!83255))

(assert (= (and d!20959 (not c!13275)) b!83246))

(assert (= (and d!20959 res!43080) b!83257))

(assert (= (and b!83257 res!43073) b!83250))

(assert (= (and b!83257 (not res!43075)) b!83263))

(assert (= (and b!83263 res!43077) b!83248))

(assert (= (and b!83257 res!43079) b!83253))

(assert (= (and b!83253 c!13274) b!83254))

(assert (= (and b!83253 (not c!13274)) b!83264))

(assert (= (and b!83254 res!43078) b!83252))

(assert (= (or b!83254 b!83264) bm!7800))

(assert (= (and b!83253 res!43081) b!83247))

(assert (= (and b!83247 c!13277) b!83260))

(assert (= (and b!83247 (not c!13277)) b!83249))

(assert (= (and b!83260 res!43074) b!83265))

(assert (= (or b!83260 b!83249) bm!7801))

(declare-fun b_lambda!3711 () Bool)

(assert (=> (not b_lambda!3711) (not b!83248)))

(declare-fun tb!1673 () Bool)

(declare-fun t!5209 () Bool)

(assert (=> (and b!82790 (= (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) (defaultEntry!2316 newMap!16)) t!5209) tb!1673))

(declare-fun result!2895 () Bool)

(assert (=> tb!1673 (= result!2895 tp_is_empty!2527)))

(assert (=> b!83248 t!5209))

(declare-fun b_and!5073 () Bool)

(assert (= b_and!5069 (and (=> t!5209 result!2895) b_and!5073)))

(declare-fun t!5211 () Bool)

(declare-fun tb!1675 () Bool)

(assert (=> (and b!82787 (= (defaultEntry!2316 newMap!16) (defaultEntry!2316 newMap!16)) t!5211) tb!1675))

(declare-fun result!2897 () Bool)

(assert (= result!2897 result!2895))

(assert (=> b!83248 t!5211))

(declare-fun b_and!5075 () Bool)

(assert (= b_and!5071 (and (=> t!5211 result!2897) b_and!5075)))

(declare-fun m!86211 () Bool)

(assert (=> b!83266 m!86211))

(assert (=> b!83266 m!86211))

(declare-fun m!86213 () Bool)

(assert (=> b!83266 m!86213))

(declare-fun m!86215 () Bool)

(assert (=> b!83248 m!86215))

(assert (=> b!83248 m!86211))

(declare-fun m!86217 () Bool)

(assert (=> b!83248 m!86217))

(assert (=> b!83248 m!86211))

(declare-fun m!86219 () Bool)

(assert (=> b!83248 m!86219))

(assert (=> b!83248 m!86215))

(assert (=> b!83248 m!86219))

(declare-fun m!86221 () Bool)

(assert (=> b!83248 m!86221))

(declare-fun m!86223 () Bool)

(assert (=> d!20959 m!86223))

(declare-fun m!86225 () Bool)

(assert (=> b!83265 m!86225))

(declare-fun m!86227 () Bool)

(assert (=> b!83255 m!86227))

(declare-fun m!86229 () Bool)

(assert (=> b!83255 m!86229))

(declare-fun m!86231 () Bool)

(assert (=> b!83255 m!86231))

(declare-fun m!86233 () Bool)

(assert (=> b!83255 m!86233))

(assert (=> b!83255 m!86229))

(declare-fun m!86235 () Bool)

(assert (=> b!83255 m!86235))

(declare-fun m!86237 () Bool)

(assert (=> b!83255 m!86237))

(declare-fun m!86239 () Bool)

(assert (=> b!83255 m!86239))

(declare-fun m!86241 () Bool)

(assert (=> b!83255 m!86241))

(declare-fun m!86243 () Bool)

(assert (=> b!83255 m!86243))

(declare-fun m!86245 () Bool)

(assert (=> b!83255 m!86245))

(declare-fun m!86247 () Bool)

(assert (=> b!83255 m!86247))

(assert (=> b!83255 m!86211))

(assert (=> b!83255 m!86243))

(assert (=> b!83255 m!86237))

(assert (=> b!83255 m!86231))

(declare-fun m!86249 () Bool)

(assert (=> b!83255 m!86249))

(declare-fun m!86251 () Bool)

(assert (=> b!83255 m!86251))

(declare-fun m!86253 () Bool)

(assert (=> b!83255 m!86253))

(declare-fun m!86255 () Bool)

(assert (=> b!83255 m!86255))

(declare-fun m!86257 () Bool)

(assert (=> b!83255 m!86257))

(declare-fun m!86259 () Bool)

(assert (=> b!83258 m!86259))

(declare-fun m!86261 () Bool)

(assert (=> bm!7799 m!86261))

(assert (=> b!83263 m!86211))

(assert (=> b!83263 m!86211))

(declare-fun m!86263 () Bool)

(assert (=> b!83263 m!86263))

(assert (=> bm!7803 m!86247))

(declare-fun m!86265 () Bool)

(assert (=> bm!7801 m!86265))

(assert (=> b!83250 m!86211))

(assert (=> b!83250 m!86211))

(assert (=> b!83250 m!86213))

(declare-fun m!86267 () Bool)

(assert (=> bm!7800 m!86267))

(declare-fun m!86269 () Bool)

(assert (=> b!83252 m!86269))

(assert (=> d!20947 d!20959))

(declare-fun d!20961 () Bool)

(declare-fun res!43082 () Bool)

(declare-fun e!54359 () Bool)

(assert (=> d!20961 (=> res!43082 e!54359)))

(assert (=> d!20961 (= res!43082 (= (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))

(assert (=> d!20961 (= (arrayContainsKey!0 (_keys!3984 (v!2632 (underlying!289 thiss!992))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) e!54359)))

(declare-fun b!83267 () Bool)

(declare-fun e!54360 () Bool)

(assert (=> b!83267 (= e!54359 e!54360)))

(declare-fun res!43083 () Bool)

(assert (=> b!83267 (=> (not res!43083) (not e!54360))))

(assert (=> b!83267 (= res!43083 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2147 (_keys!3984 (v!2632 (underlying!289 thiss!992))))))))

(declare-fun b!83268 () Bool)

(assert (=> b!83268 (= e!54360 (arrayContainsKey!0 (_keys!3984 (v!2632 (underlying!289 thiss!992))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!20961 (not res!43082)) b!83267))

(assert (= (and b!83267 res!43083) b!83268))

(declare-fun m!86271 () Bool)

(assert (=> d!20961 m!86271))

(assert (=> b!83268 m!85721))

(declare-fun m!86273 () Bool)

(assert (=> b!83268 m!86273))

(assert (=> b!83070 d!20961))

(declare-fun b!83269 () Bool)

(declare-fun e!54364 () Bool)

(declare-fun call!7809 () Bool)

(assert (=> b!83269 (= e!54364 call!7809)))

(declare-fun b!83270 () Bool)

(assert (=> b!83270 (= e!54364 call!7809)))

(declare-fun b!83271 () Bool)

(declare-fun e!54363 () Bool)

(declare-fun e!54362 () Bool)

(assert (=> b!83271 (= e!54363 e!54362)))

(declare-fun res!43085 () Bool)

(assert (=> b!83271 (=> (not res!43085) (not e!54362))))

(declare-fun e!54361 () Bool)

(assert (=> b!83271 (= res!43085 (not e!54361))))

(declare-fun res!43084 () Bool)

(assert (=> b!83271 (=> (not res!43084) (not e!54361))))

(assert (=> b!83271 (= res!43084 (validKeyInArray!0 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun d!20963 () Bool)

(declare-fun res!43086 () Bool)

(assert (=> d!20963 (=> res!43086 e!54363)))

(assert (=> d!20963 (= res!43086 (bvsge (bvadd from!355 #b00000000000000000000000000000001) (size!2147 (_keys!3984 (v!2632 (underlying!289 thiss!992))))))))

(assert (=> d!20963 (= (arrayNoDuplicates!0 (_keys!3984 (v!2632 (underlying!289 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!13230 (Cons!1501 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) Nil!1502) Nil!1502)) e!54363)))

(declare-fun b!83272 () Bool)

(assert (=> b!83272 (= e!54361 (contains!745 (ite c!13230 (Cons!1501 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) Nil!1502) Nil!1502) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!83273 () Bool)

(assert (=> b!83273 (= e!54362 e!54364)))

(declare-fun c!13279 () Bool)

(assert (=> b!83273 (= c!13279 (validKeyInArray!0 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun bm!7806 () Bool)

(assert (=> bm!7806 (= call!7809 (arrayNoDuplicates!0 (_keys!3984 (v!2632 (underlying!289 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!13279 (Cons!1501 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!13230 (Cons!1501 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) Nil!1502) Nil!1502)) (ite c!13230 (Cons!1501 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) Nil!1502) Nil!1502))))))

(assert (= (and d!20963 (not res!43086)) b!83271))

(assert (= (and b!83271 res!43084) b!83272))

(assert (= (and b!83271 res!43085) b!83273))

(assert (= (and b!83273 c!13279) b!83270))

(assert (= (and b!83273 (not c!13279)) b!83269))

(assert (= (or b!83270 b!83269) bm!7806))

(declare-fun m!86275 () Bool)

(assert (=> b!83271 m!86275))

(assert (=> b!83271 m!86275))

(declare-fun m!86277 () Bool)

(assert (=> b!83271 m!86277))

(assert (=> b!83272 m!86275))

(assert (=> b!83272 m!86275))

(declare-fun m!86279 () Bool)

(assert (=> b!83272 m!86279))

(assert (=> b!83273 m!86275))

(assert (=> b!83273 m!86275))

(assert (=> b!83273 m!86277))

(assert (=> bm!7806 m!86275))

(declare-fun m!86281 () Bool)

(assert (=> bm!7806 m!86281))

(assert (=> bm!7774 d!20963))

(declare-fun d!20965 () Bool)

(declare-fun e!54367 () Bool)

(assert (=> d!20965 e!54367))

(declare-fun res!43092 () Bool)

(assert (=> d!20965 (=> (not res!43092) (not e!54367))))

(declare-fun lt!39156 () SeekEntryResult!236)

(assert (=> d!20965 (= res!43092 ((_ is Found!236) lt!39156))))

(assert (=> d!20965 (= lt!39156 (seekEntryOrOpen!0 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (_keys!3984 newMap!16) (mask!6334 newMap!16)))))

(declare-fun lt!39157 () Unit!2413)

(declare-fun choose!492 (array!3997 array!3999 (_ BitVec 32) (_ BitVec 32) V!3017 V!3017 (_ BitVec 64) Int) Unit!2413)

(assert (=> d!20965 (= lt!39157 (choose!492 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (defaultEntry!2316 newMap!16)))))

(assert (=> d!20965 (validMask!0 (mask!6334 newMap!16))))

(assert (=> d!20965 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!30 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (defaultEntry!2316 newMap!16)) lt!39157)))

(declare-fun b!83278 () Bool)

(declare-fun res!43091 () Bool)

(assert (=> b!83278 (=> (not res!43091) (not e!54367))))

(assert (=> b!83278 (= res!43091 (inRange!0 (index!3081 lt!39156) (mask!6334 newMap!16)))))

(declare-fun b!83279 () Bool)

(assert (=> b!83279 (= e!54367 (= (select (arr!1904 (_keys!3984 newMap!16)) (index!3081 lt!39156)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))

(assert (=> b!83279 (and (bvsge (index!3081 lt!39156) #b00000000000000000000000000000000) (bvslt (index!3081 lt!39156) (size!2147 (_keys!3984 newMap!16))))))

(assert (= (and d!20965 res!43092) b!83278))

(assert (= (and b!83278 res!43091) b!83279))

(assert (=> d!20965 m!85721))

(assert (=> d!20965 m!85939))

(assert (=> d!20965 m!85721))

(declare-fun m!86283 () Bool)

(assert (=> d!20965 m!86283))

(assert (=> d!20965 m!86223))

(declare-fun m!86285 () Bool)

(assert (=> b!83278 m!86285))

(declare-fun m!86287 () Bool)

(assert (=> b!83279 m!86287))

(assert (=> bm!7751 d!20965))

(declare-fun b!83288 () Bool)

(declare-fun e!54376 () Bool)

(declare-fun e!54374 () Bool)

(assert (=> b!83288 (= e!54376 e!54374)))

(declare-fun c!13282 () Bool)

(assert (=> b!83288 (= c!13282 (validKeyInArray!0 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!20967 () Bool)

(declare-fun res!43098 () Bool)

(assert (=> d!20967 (=> res!43098 e!54376)))

(assert (=> d!20967 (= res!43098 (bvsge #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))))))

(assert (=> d!20967 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3984 newMap!16) (mask!6334 newMap!16)) e!54376)))

(declare-fun b!83289 () Bool)

(declare-fun e!54375 () Bool)

(declare-fun call!7812 () Bool)

(assert (=> b!83289 (= e!54375 call!7812)))

(declare-fun b!83290 () Bool)

(assert (=> b!83290 (= e!54374 call!7812)))

(declare-fun bm!7809 () Bool)

(assert (=> bm!7809 (= call!7812 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3984 newMap!16) (mask!6334 newMap!16)))))

(declare-fun b!83291 () Bool)

(assert (=> b!83291 (= e!54374 e!54375)))

(declare-fun lt!39166 () (_ BitVec 64))

(assert (=> b!83291 (= lt!39166 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!39164 () Unit!2413)

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!3997 (_ BitVec 64) (_ BitVec 32)) Unit!2413)

(assert (=> b!83291 (= lt!39164 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3984 newMap!16) lt!39166 #b00000000000000000000000000000000))))

(assert (=> b!83291 (arrayContainsKey!0 (_keys!3984 newMap!16) lt!39166 #b00000000000000000000000000000000)))

(declare-fun lt!39165 () Unit!2413)

(assert (=> b!83291 (= lt!39165 lt!39164)))

(declare-fun res!43097 () Bool)

(assert (=> b!83291 (= res!43097 (= (seekEntryOrOpen!0 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000) (_keys!3984 newMap!16) (mask!6334 newMap!16)) (Found!236 #b00000000000000000000000000000000)))))

(assert (=> b!83291 (=> (not res!43097) (not e!54375))))

(assert (= (and d!20967 (not res!43098)) b!83288))

(assert (= (and b!83288 c!13282) b!83291))

(assert (= (and b!83288 (not c!13282)) b!83290))

(assert (= (and b!83291 res!43097) b!83289))

(assert (= (or b!83289 b!83290) bm!7809))

(assert (=> b!83288 m!86211))

(assert (=> b!83288 m!86211))

(assert (=> b!83288 m!86213))

(declare-fun m!86289 () Bool)

(assert (=> bm!7809 m!86289))

(assert (=> b!83291 m!86211))

(declare-fun m!86291 () Bool)

(assert (=> b!83291 m!86291))

(declare-fun m!86293 () Bool)

(assert (=> b!83291 m!86293))

(assert (=> b!83291 m!86211))

(declare-fun m!86295 () Bool)

(assert (=> b!83291 m!86295))

(assert (=> b!82928 d!20967))

(declare-fun d!20969 () Bool)

(declare-fun e!54378 () Bool)

(assert (=> d!20969 e!54378))

(declare-fun res!43099 () Bool)

(assert (=> d!20969 (=> res!43099 e!54378)))

(declare-fun lt!39167 () Bool)

(assert (=> d!20969 (= res!43099 (not lt!39167))))

(declare-fun lt!39170 () Bool)

(assert (=> d!20969 (= lt!39167 lt!39170)))

(declare-fun lt!39169 () Unit!2413)

(declare-fun e!54377 () Unit!2413)

(assert (=> d!20969 (= lt!39169 e!54377)))

(declare-fun c!13283 () Bool)

(assert (=> d!20969 (= c!13283 lt!39170)))

(assert (=> d!20969 (= lt!39170 (containsKey!143 (toList!734 lt!39036) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!20969 (= (contains!744 lt!39036 #b1000000000000000000000000000000000000000000000000000000000000000) lt!39167)))

(declare-fun b!83292 () Bool)

(declare-fun lt!39168 () Unit!2413)

(assert (=> b!83292 (= e!54377 lt!39168)))

(assert (=> b!83292 (= lt!39168 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 lt!39036) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!83292 (isDefined!92 (getValueByKey!140 (toList!734 lt!39036) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!83293 () Bool)

(declare-fun Unit!2427 () Unit!2413)

(assert (=> b!83293 (= e!54377 Unit!2427)))

(declare-fun b!83294 () Bool)

(assert (=> b!83294 (= e!54378 (isDefined!92 (getValueByKey!140 (toList!734 lt!39036) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!20969 c!13283) b!83292))

(assert (= (and d!20969 (not c!13283)) b!83293))

(assert (= (and d!20969 (not res!43099)) b!83294))

(declare-fun m!86297 () Bool)

(assert (=> d!20969 m!86297))

(declare-fun m!86299 () Bool)

(assert (=> b!83292 m!86299))

(declare-fun m!86301 () Bool)

(assert (=> b!83292 m!86301))

(assert (=> b!83292 m!86301))

(declare-fun m!86303 () Bool)

(assert (=> b!83292 m!86303))

(assert (=> b!83294 m!86301))

(assert (=> b!83294 m!86301))

(assert (=> b!83294 m!86303))

(assert (=> b!83131 d!20969))

(declare-fun b!83304 () Bool)

(declare-fun res!43109 () Bool)

(declare-fun e!54381 () Bool)

(assert (=> b!83304 (=> (not res!43109) (not e!54381))))

(declare-fun size!2153 (LongMapFixedSize!748) (_ BitVec 32))

(assert (=> b!83304 (= res!43109 (bvsge (size!2153 newMap!16) (_size!423 newMap!16)))))

(declare-fun b!83305 () Bool)

(declare-fun res!43111 () Bool)

(assert (=> b!83305 (=> (not res!43111) (not e!54381))))

(assert (=> b!83305 (= res!43111 (= (size!2153 newMap!16) (bvadd (_size!423 newMap!16) (bvsdiv (bvadd (extraKeys!2159 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!83303 () Bool)

(declare-fun res!43108 () Bool)

(assert (=> b!83303 (=> (not res!43108) (not e!54381))))

(assert (=> b!83303 (= res!43108 (and (= (size!2148 (_values!2299 newMap!16)) (bvadd (mask!6334 newMap!16) #b00000000000000000000000000000001)) (= (size!2147 (_keys!3984 newMap!16)) (size!2148 (_values!2299 newMap!16))) (bvsge (_size!423 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!423 newMap!16) (bvadd (mask!6334 newMap!16) #b00000000000000000000000000000001))))))

(declare-fun b!83306 () Bool)

(assert (=> b!83306 (= e!54381 (and (bvsge (extraKeys!2159 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!2159 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!423 newMap!16) #b00000000000000000000000000000000)))))

(declare-fun d!20971 () Bool)

(declare-fun res!43110 () Bool)

(assert (=> d!20971 (=> (not res!43110) (not e!54381))))

(assert (=> d!20971 (= res!43110 (validMask!0 (mask!6334 newMap!16)))))

(assert (=> d!20971 (= (simpleValid!57 newMap!16) e!54381)))

(assert (= (and d!20971 res!43110) b!83303))

(assert (= (and b!83303 res!43108) b!83304))

(assert (= (and b!83304 res!43109) b!83305))

(assert (= (and b!83305 res!43111) b!83306))

(declare-fun m!86305 () Bool)

(assert (=> b!83304 m!86305))

(assert (=> b!83305 m!86305))

(assert (=> d!20971 m!86223))

(assert (=> d!20897 d!20971))

(declare-fun d!20973 () Bool)

(declare-fun lt!39173 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!88 (List!1505) (InoxSet (_ BitVec 64)))

(assert (=> d!20973 (= lt!39173 (select (content!88 Nil!1502) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))

(declare-fun e!54387 () Bool)

(assert (=> d!20973 (= lt!39173 e!54387)))

(declare-fun res!43117 () Bool)

(assert (=> d!20973 (=> (not res!43117) (not e!54387))))

(assert (=> d!20973 (= res!43117 ((_ is Cons!1501) Nil!1502))))

(assert (=> d!20973 (= (contains!745 Nil!1502 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) lt!39173)))

(declare-fun b!83311 () Bool)

(declare-fun e!54386 () Bool)

(assert (=> b!83311 (= e!54387 e!54386)))

(declare-fun res!43116 () Bool)

(assert (=> b!83311 (=> res!43116 e!54386)))

(assert (=> b!83311 (= res!43116 (= (h!2091 Nil!1502) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))

(declare-fun b!83312 () Bool)

(assert (=> b!83312 (= e!54386 (contains!745 (t!5197 Nil!1502) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))

(assert (= (and d!20973 res!43117) b!83311))

(assert (= (and b!83311 (not res!43116)) b!83312))

(declare-fun m!86307 () Bool)

(assert (=> d!20973 m!86307))

(assert (=> d!20973 m!85721))

(declare-fun m!86309 () Bool)

(assert (=> d!20973 m!86309))

(assert (=> b!83312 m!85721))

(declare-fun m!86311 () Bool)

(assert (=> b!83312 m!86311))

(assert (=> b!83090 d!20973))

(declare-fun b!83315 () Bool)

(declare-fun e!54389 () Option!146)

(assert (=> b!83315 (= e!54389 (getValueByKey!140 (t!5196 (toList!734 lt!39012)) (_1!1102 lt!38772)))))

(declare-fun d!20975 () Bool)

(declare-fun c!13284 () Bool)

(assert (=> d!20975 (= c!13284 (and ((_ is Cons!1500) (toList!734 lt!39012)) (= (_1!1102 (h!2090 (toList!734 lt!39012))) (_1!1102 lt!38772))))))

(declare-fun e!54388 () Option!146)

(assert (=> d!20975 (= (getValueByKey!140 (toList!734 lt!39012) (_1!1102 lt!38772)) e!54388)))

(declare-fun b!83313 () Bool)

(assert (=> b!83313 (= e!54388 (Some!145 (_2!1102 (h!2090 (toList!734 lt!39012)))))))

(declare-fun b!83314 () Bool)

(assert (=> b!83314 (= e!54388 e!54389)))

(declare-fun c!13285 () Bool)

(assert (=> b!83314 (= c!13285 (and ((_ is Cons!1500) (toList!734 lt!39012)) (not (= (_1!1102 (h!2090 (toList!734 lt!39012))) (_1!1102 lt!38772)))))))

(declare-fun b!83316 () Bool)

(assert (=> b!83316 (= e!54389 None!144)))

(assert (= (and d!20975 c!13284) b!83313))

(assert (= (and d!20975 (not c!13284)) b!83314))

(assert (= (and b!83314 c!13285) b!83315))

(assert (= (and b!83314 (not c!13285)) b!83316))

(declare-fun m!86313 () Bool)

(assert (=> b!83315 m!86313))

(assert (=> b!83100 d!20975))

(declare-fun d!20977 () Bool)

(declare-fun lt!39176 () Bool)

(declare-fun content!89 (List!1504) (InoxSet tuple2!2182))

(assert (=> d!20977 (= lt!39176 (select (content!89 (toList!734 lt!39040)) lt!38779))))

(declare-fun e!54394 () Bool)

(assert (=> d!20977 (= lt!39176 e!54394)))

(declare-fun res!43123 () Bool)

(assert (=> d!20977 (=> (not res!43123) (not e!54394))))

(assert (=> d!20977 (= res!43123 ((_ is Cons!1500) (toList!734 lt!39040)))))

(assert (=> d!20977 (= (contains!746 (toList!734 lt!39040) lt!38779) lt!39176)))

(declare-fun b!83321 () Bool)

(declare-fun e!54395 () Bool)

(assert (=> b!83321 (= e!54394 e!54395)))

(declare-fun res!43122 () Bool)

(assert (=> b!83321 (=> res!43122 e!54395)))

(assert (=> b!83321 (= res!43122 (= (h!2090 (toList!734 lt!39040)) lt!38779))))

(declare-fun b!83322 () Bool)

(assert (=> b!83322 (= e!54395 (contains!746 (t!5196 (toList!734 lt!39040)) lt!38779))))

(assert (= (and d!20977 res!43123) b!83321))

(assert (= (and b!83321 (not res!43122)) b!83322))

(declare-fun m!86315 () Bool)

(assert (=> d!20977 m!86315))

(declare-fun m!86317 () Bool)

(assert (=> d!20977 m!86317))

(declare-fun m!86319 () Bool)

(assert (=> b!83322 m!86319))

(assert (=> b!83139 d!20977))

(assert (=> d!20907 d!20911))

(declare-fun d!20979 () Bool)

(assert (=> d!20979 (not (arrayContainsKey!0 (_keys!3984 (v!2632 (underlying!289 thiss!992))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> d!20979 true))

(declare-fun _$68!70 () Unit!2413)

(assert (=> d!20979 (= (choose!68 (_keys!3984 (v!2632 (underlying!289 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (Cons!1501 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) Nil!1502)) _$68!70)))

(declare-fun bs!3522 () Bool)

(assert (= bs!3522 d!20979))

(assert (=> bs!3522 m!85721))

(assert (=> bs!3522 m!85743))

(assert (=> d!20907 d!20979))

(declare-fun d!20981 () Bool)

(declare-fun e!54396 () Bool)

(assert (=> d!20981 e!54396))

(declare-fun res!43125 () Bool)

(assert (=> d!20981 (=> (not res!43125) (not e!54396))))

(declare-fun lt!39178 () ListLongMap!1437)

(assert (=> d!20981 (= res!43125 (contains!744 lt!39178 (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun lt!39180 () List!1504)

(assert (=> d!20981 (= lt!39178 (ListLongMap!1438 lt!39180))))

(declare-fun lt!39177 () Unit!2413)

(declare-fun lt!39179 () Unit!2413)

(assert (=> d!20981 (= lt!39177 lt!39179)))

(assert (=> d!20981 (= (getValueByKey!140 lt!39180 (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))) (Some!145 (_2!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(assert (=> d!20981 (= lt!39179 (lemmaContainsTupThenGetReturnValue!57 lt!39180 (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(assert (=> d!20981 (= lt!39180 (insertStrictlySorted!60 (toList!734 lt!38771) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(assert (=> d!20981 (= (+!105 lt!38771 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))) lt!39178)))

(declare-fun b!83323 () Bool)

(declare-fun res!43124 () Bool)

(assert (=> b!83323 (=> (not res!43124) (not e!54396))))

(assert (=> b!83323 (= res!43124 (= (getValueByKey!140 (toList!734 lt!39178) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))) (Some!145 (_2!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(declare-fun b!83324 () Bool)

(assert (=> b!83324 (= e!54396 (contains!746 (toList!734 lt!39178) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))))

(assert (= (and d!20981 res!43125) b!83323))

(assert (= (and b!83323 res!43124) b!83324))

(declare-fun m!86321 () Bool)

(assert (=> d!20981 m!86321))

(declare-fun m!86323 () Bool)

(assert (=> d!20981 m!86323))

(declare-fun m!86325 () Bool)

(assert (=> d!20981 m!86325))

(declare-fun m!86327 () Bool)

(assert (=> d!20981 m!86327))

(declare-fun m!86329 () Bool)

(assert (=> b!83323 m!86329))

(declare-fun m!86331 () Bool)

(assert (=> b!83324 m!86331))

(assert (=> d!20923 d!20981))

(declare-fun d!20983 () Bool)

(declare-fun e!54397 () Bool)

(assert (=> d!20983 e!54397))

(declare-fun res!43127 () Bool)

(assert (=> d!20983 (=> (not res!43127) (not e!54397))))

(declare-fun lt!39182 () ListLongMap!1437)

(assert (=> d!20983 (= res!43127 (contains!744 lt!39182 (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun lt!39184 () List!1504)

(assert (=> d!20983 (= lt!39182 (ListLongMap!1438 lt!39184))))

(declare-fun lt!39181 () Unit!2413)

(declare-fun lt!39183 () Unit!2413)

(assert (=> d!20983 (= lt!39181 lt!39183)))

(assert (=> d!20983 (= (getValueByKey!140 lt!39184 (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))) (Some!145 (_2!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(assert (=> d!20983 (= lt!39183 (lemmaContainsTupThenGetReturnValue!57 lt!39184 (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(assert (=> d!20983 (= lt!39184 (insertStrictlySorted!60 (toList!734 (+!105 lt!38771 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(assert (=> d!20983 (= (+!105 (+!105 lt!38771 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))) lt!39182)))

(declare-fun b!83325 () Bool)

(declare-fun res!43126 () Bool)

(assert (=> b!83325 (=> (not res!43126) (not e!54397))))

(assert (=> b!83325 (= res!43126 (= (getValueByKey!140 (toList!734 lt!39182) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))) (Some!145 (_2!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(declare-fun b!83326 () Bool)

(assert (=> b!83326 (= e!54397 (contains!746 (toList!734 lt!39182) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))))

(assert (= (and d!20983 res!43127) b!83325))

(assert (= (and b!83325 res!43126) b!83326))

(declare-fun m!86333 () Bool)

(assert (=> d!20983 m!86333))

(declare-fun m!86335 () Bool)

(assert (=> d!20983 m!86335))

(declare-fun m!86337 () Bool)

(assert (=> d!20983 m!86337))

(declare-fun m!86339 () Bool)

(assert (=> d!20983 m!86339))

(declare-fun m!86341 () Bool)

(assert (=> b!83325 m!86341))

(declare-fun m!86343 () Bool)

(assert (=> b!83326 m!86343))

(assert (=> d!20923 d!20983))

(declare-fun d!20985 () Bool)

(declare-fun e!54398 () Bool)

(assert (=> d!20985 e!54398))

(declare-fun res!43129 () Bool)

(assert (=> d!20985 (=> (not res!43129) (not e!54398))))

(declare-fun lt!39186 () ListLongMap!1437)

(assert (=> d!20985 (= res!43129 (contains!744 lt!39186 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(declare-fun lt!39188 () List!1504)

(assert (=> d!20985 (= lt!39186 (ListLongMap!1438 lt!39188))))

(declare-fun lt!39185 () Unit!2413)

(declare-fun lt!39187 () Unit!2413)

(assert (=> d!20985 (= lt!39185 lt!39187)))

(assert (=> d!20985 (= (getValueByKey!140 lt!39188 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))) (Some!145 (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(assert (=> d!20985 (= lt!39187 (lemmaContainsTupThenGetReturnValue!57 lt!39188 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(assert (=> d!20985 (= lt!39188 (insertStrictlySorted!60 (toList!734 (+!105 lt!38771 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(assert (=> d!20985 (= (+!105 (+!105 lt!38771 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) lt!39186)))

(declare-fun b!83327 () Bool)

(declare-fun res!43128 () Bool)

(assert (=> b!83327 (=> (not res!43128) (not e!54398))))

(assert (=> b!83327 (= res!43128 (= (getValueByKey!140 (toList!734 lt!39186) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))) (Some!145 (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))

(declare-fun b!83328 () Bool)

(assert (=> b!83328 (= e!54398 (contains!746 (toList!734 lt!39186) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))

(assert (= (and d!20985 res!43129) b!83327))

(assert (= (and b!83327 res!43128) b!83328))

(declare-fun m!86345 () Bool)

(assert (=> d!20985 m!86345))

(declare-fun m!86347 () Bool)

(assert (=> d!20985 m!86347))

(declare-fun m!86349 () Bool)

(assert (=> d!20985 m!86349))

(declare-fun m!86351 () Bool)

(assert (=> d!20985 m!86351))

(declare-fun m!86353 () Bool)

(assert (=> b!83327 m!86353))

(declare-fun m!86355 () Bool)

(assert (=> b!83328 m!86355))

(assert (=> d!20923 d!20985))

(declare-fun d!20987 () Bool)

(declare-fun e!54399 () Bool)

(assert (=> d!20987 e!54399))

(declare-fun res!43131 () Bool)

(assert (=> d!20987 (=> (not res!43131) (not e!54399))))

(declare-fun lt!39190 () ListLongMap!1437)

(assert (=> d!20987 (= res!43131 (contains!744 lt!39190 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(declare-fun lt!39192 () List!1504)

(assert (=> d!20987 (= lt!39190 (ListLongMap!1438 lt!39192))))

(declare-fun lt!39189 () Unit!2413)

(declare-fun lt!39191 () Unit!2413)

(assert (=> d!20987 (= lt!39189 lt!39191)))

(assert (=> d!20987 (= (getValueByKey!140 lt!39192 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))) (Some!145 (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(assert (=> d!20987 (= lt!39191 (lemmaContainsTupThenGetReturnValue!57 lt!39192 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(assert (=> d!20987 (= lt!39192 (insertStrictlySorted!60 (toList!734 lt!38771) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(assert (=> d!20987 (= (+!105 lt!38771 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) lt!39190)))

(declare-fun b!83329 () Bool)

(declare-fun res!43130 () Bool)

(assert (=> b!83329 (=> (not res!43130) (not e!54399))))

(assert (=> b!83329 (= res!43130 (= (getValueByKey!140 (toList!734 lt!39190) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))) (Some!145 (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))

(declare-fun b!83330 () Bool)

(assert (=> b!83330 (= e!54399 (contains!746 (toList!734 lt!39190) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))

(assert (= (and d!20987 res!43131) b!83329))

(assert (= (and b!83329 res!43130) b!83330))

(declare-fun m!86357 () Bool)

(assert (=> d!20987 m!86357))

(declare-fun m!86359 () Bool)

(assert (=> d!20987 m!86359))

(declare-fun m!86361 () Bool)

(assert (=> d!20987 m!86361))

(declare-fun m!86363 () Bool)

(assert (=> d!20987 m!86363))

(declare-fun m!86365 () Bool)

(assert (=> b!83329 m!86365))

(declare-fun m!86367 () Bool)

(assert (=> b!83330 m!86367))

(assert (=> d!20923 d!20987))

(declare-fun d!20989 () Bool)

(assert (=> d!20989 (= (+!105 (+!105 lt!38771 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))) (+!105 (+!105 lt!38771 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))

(assert (=> d!20989 true))

(declare-fun _$28!138 () Unit!2413)

(assert (=> d!20989 (= (choose!491 lt!38771 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))) _$28!138)))

(declare-fun bs!3523 () Bool)

(assert (= bs!3523 d!20989))

(assert (=> bs!3523 m!86039))

(assert (=> bs!3523 m!86039))

(assert (=> bs!3523 m!86041))

(assert (=> bs!3523 m!86043))

(assert (=> bs!3523 m!86043))

(assert (=> bs!3523 m!86045))

(assert (=> d!20923 d!20989))

(declare-fun d!20991 () Bool)

(declare-fun e!54401 () Bool)

(assert (=> d!20991 e!54401))

(declare-fun res!43132 () Bool)

(assert (=> d!20991 (=> res!43132 e!54401)))

(declare-fun lt!39193 () Bool)

(assert (=> d!20991 (= res!43132 (not lt!39193))))

(declare-fun lt!39196 () Bool)

(assert (=> d!20991 (= lt!39193 lt!39196)))

(declare-fun lt!39195 () Unit!2413)

(declare-fun e!54400 () Unit!2413)

(assert (=> d!20991 (= lt!39195 e!54400)))

(declare-fun c!13286 () Bool)

(assert (=> d!20991 (= c!13286 lt!39196)))

(assert (=> d!20991 (= lt!39196 (containsKey!143 (toList!734 lt!39012) (_1!1102 lt!38772)))))

(assert (=> d!20991 (= (contains!744 lt!39012 (_1!1102 lt!38772)) lt!39193)))

(declare-fun b!83331 () Bool)

(declare-fun lt!39194 () Unit!2413)

(assert (=> b!83331 (= e!54400 lt!39194)))

(assert (=> b!83331 (= lt!39194 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 lt!39012) (_1!1102 lt!38772)))))

(assert (=> b!83331 (isDefined!92 (getValueByKey!140 (toList!734 lt!39012) (_1!1102 lt!38772)))))

(declare-fun b!83332 () Bool)

(declare-fun Unit!2428 () Unit!2413)

(assert (=> b!83332 (= e!54400 Unit!2428)))

(declare-fun b!83333 () Bool)

(assert (=> b!83333 (= e!54401 (isDefined!92 (getValueByKey!140 (toList!734 lt!39012) (_1!1102 lt!38772))))))

(assert (= (and d!20991 c!13286) b!83331))

(assert (= (and d!20991 (not c!13286)) b!83332))

(assert (= (and d!20991 (not res!43132)) b!83333))

(declare-fun m!86369 () Bool)

(assert (=> d!20991 m!86369))

(declare-fun m!86371 () Bool)

(assert (=> b!83331 m!86371))

(assert (=> b!83331 m!86033))

(assert (=> b!83331 m!86033))

(declare-fun m!86373 () Bool)

(assert (=> b!83331 m!86373))

(assert (=> b!83333 m!86033))

(assert (=> b!83333 m!86033))

(assert (=> b!83333 m!86373))

(assert (=> d!20921 d!20991))

(declare-fun b!83336 () Bool)

(declare-fun e!54403 () Option!146)

(assert (=> b!83336 (= e!54403 (getValueByKey!140 (t!5196 lt!39014) (_1!1102 lt!38772)))))

(declare-fun d!20993 () Bool)

(declare-fun c!13287 () Bool)

(assert (=> d!20993 (= c!13287 (and ((_ is Cons!1500) lt!39014) (= (_1!1102 (h!2090 lt!39014)) (_1!1102 lt!38772))))))

(declare-fun e!54402 () Option!146)

(assert (=> d!20993 (= (getValueByKey!140 lt!39014 (_1!1102 lt!38772)) e!54402)))

(declare-fun b!83334 () Bool)

(assert (=> b!83334 (= e!54402 (Some!145 (_2!1102 (h!2090 lt!39014))))))

(declare-fun b!83335 () Bool)

(assert (=> b!83335 (= e!54402 e!54403)))

(declare-fun c!13288 () Bool)

(assert (=> b!83335 (= c!13288 (and ((_ is Cons!1500) lt!39014) (not (= (_1!1102 (h!2090 lt!39014)) (_1!1102 lt!38772)))))))

(declare-fun b!83337 () Bool)

(assert (=> b!83337 (= e!54403 None!144)))

(assert (= (and d!20993 c!13287) b!83334))

(assert (= (and d!20993 (not c!13287)) b!83335))

(assert (= (and b!83335 c!13288) b!83336))

(assert (= (and b!83335 (not c!13288)) b!83337))

(declare-fun m!86375 () Bool)

(assert (=> b!83336 m!86375))

(assert (=> d!20921 d!20993))

(declare-fun d!20995 () Bool)

(assert (=> d!20995 (= (getValueByKey!140 lt!39014 (_1!1102 lt!38772)) (Some!145 (_2!1102 lt!38772)))))

(declare-fun lt!39199 () Unit!2413)

(declare-fun choose!493 (List!1504 (_ BitVec 64) V!3017) Unit!2413)

(assert (=> d!20995 (= lt!39199 (choose!493 lt!39014 (_1!1102 lt!38772) (_2!1102 lt!38772)))))

(declare-fun e!54406 () Bool)

(assert (=> d!20995 e!54406))

(declare-fun res!43137 () Bool)

(assert (=> d!20995 (=> (not res!43137) (not e!54406))))

(declare-fun isStrictlySorted!284 (List!1504) Bool)

(assert (=> d!20995 (= res!43137 (isStrictlySorted!284 lt!39014))))

(assert (=> d!20995 (= (lemmaContainsTupThenGetReturnValue!57 lt!39014 (_1!1102 lt!38772) (_2!1102 lt!38772)) lt!39199)))

(declare-fun b!83342 () Bool)

(declare-fun res!43138 () Bool)

(assert (=> b!83342 (=> (not res!43138) (not e!54406))))

(assert (=> b!83342 (= res!43138 (containsKey!143 lt!39014 (_1!1102 lt!38772)))))

(declare-fun b!83343 () Bool)

(assert (=> b!83343 (= e!54406 (contains!746 lt!39014 (tuple2!2183 (_1!1102 lt!38772) (_2!1102 lt!38772))))))

(assert (= (and d!20995 res!43137) b!83342))

(assert (= (and b!83342 res!43138) b!83343))

(assert (=> d!20995 m!86027))

(declare-fun m!86377 () Bool)

(assert (=> d!20995 m!86377))

(declare-fun m!86379 () Bool)

(assert (=> d!20995 m!86379))

(declare-fun m!86381 () Bool)

(assert (=> b!83342 m!86381))

(declare-fun m!86383 () Bool)

(assert (=> b!83343 m!86383))

(assert (=> d!20921 d!20995))

(declare-fun c!13300 () Bool)

(declare-fun c!13297 () Bool)

(declare-fun b!83365 () Bool)

(declare-fun e!54417 () List!1504)

(assert (=> b!83365 (= e!54417 (ite c!13300 (t!5196 (toList!734 lt!38771)) (ite c!13297 (Cons!1500 (h!2090 (toList!734 lt!38771)) (t!5196 (toList!734 lt!38771))) Nil!1501)))))

(declare-fun c!13298 () Bool)

(declare-fun bm!7816 () Bool)

(declare-fun call!7819 () List!1504)

(declare-fun $colon$colon!70 (List!1504 tuple2!2182) List!1504)

(assert (=> bm!7816 (= call!7819 ($colon$colon!70 e!54417 (ite c!13298 (h!2090 (toList!734 lt!38771)) (tuple2!2183 (_1!1102 lt!38772) (_2!1102 lt!38772)))))))

(declare-fun c!13299 () Bool)

(assert (=> bm!7816 (= c!13299 c!13298)))

(declare-fun b!83366 () Bool)

(declare-fun e!54421 () List!1504)

(declare-fun call!7821 () List!1504)

(assert (=> b!83366 (= e!54421 call!7821)))

(declare-fun b!83367 () Bool)

(declare-fun e!54419 () List!1504)

(assert (=> b!83367 (= e!54419 call!7819)))

(declare-fun bm!7817 () Bool)

(assert (=> bm!7817 (= call!7821 call!7819)))

(declare-fun bm!7818 () Bool)

(declare-fun call!7820 () List!1504)

(assert (=> bm!7818 (= call!7820 call!7821)))

(declare-fun b!83368 () Bool)

(assert (=> b!83368 (= e!54417 (insertStrictlySorted!60 (t!5196 (toList!734 lt!38771)) (_1!1102 lt!38772) (_2!1102 lt!38772)))))

(declare-fun b!83369 () Bool)

(declare-fun e!54420 () List!1504)

(assert (=> b!83369 (= e!54420 call!7820)))

(declare-fun b!83370 () Bool)

(assert (=> b!83370 (= e!54419 e!54421)))

(assert (=> b!83370 (= c!13300 (and ((_ is Cons!1500) (toList!734 lt!38771)) (= (_1!1102 (h!2090 (toList!734 lt!38771))) (_1!1102 lt!38772))))))

(declare-fun b!83371 () Bool)

(declare-fun e!54418 () Bool)

(declare-fun lt!39202 () List!1504)

(assert (=> b!83371 (= e!54418 (contains!746 lt!39202 (tuple2!2183 (_1!1102 lt!38772) (_2!1102 lt!38772))))))

(declare-fun b!83364 () Bool)

(declare-fun res!43144 () Bool)

(assert (=> b!83364 (=> (not res!43144) (not e!54418))))

(assert (=> b!83364 (= res!43144 (containsKey!143 lt!39202 (_1!1102 lt!38772)))))

(declare-fun d!20997 () Bool)

(assert (=> d!20997 e!54418))

(declare-fun res!43143 () Bool)

(assert (=> d!20997 (=> (not res!43143) (not e!54418))))

(assert (=> d!20997 (= res!43143 (isStrictlySorted!284 lt!39202))))

(assert (=> d!20997 (= lt!39202 e!54419)))

(assert (=> d!20997 (= c!13298 (and ((_ is Cons!1500) (toList!734 lt!38771)) (bvslt (_1!1102 (h!2090 (toList!734 lt!38771))) (_1!1102 lt!38772))))))

(assert (=> d!20997 (isStrictlySorted!284 (toList!734 lt!38771))))

(assert (=> d!20997 (= (insertStrictlySorted!60 (toList!734 lt!38771) (_1!1102 lt!38772) (_2!1102 lt!38772)) lt!39202)))

(declare-fun b!83372 () Bool)

(assert (=> b!83372 (= e!54420 call!7820)))

(declare-fun b!83373 () Bool)

(assert (=> b!83373 (= c!13297 (and ((_ is Cons!1500) (toList!734 lt!38771)) (bvsgt (_1!1102 (h!2090 (toList!734 lt!38771))) (_1!1102 lt!38772))))))

(assert (=> b!83373 (= e!54421 e!54420)))

(assert (= (and d!20997 c!13298) b!83367))

(assert (= (and d!20997 (not c!13298)) b!83370))

(assert (= (and b!83370 c!13300) b!83366))

(assert (= (and b!83370 (not c!13300)) b!83373))

(assert (= (and b!83373 c!13297) b!83369))

(assert (= (and b!83373 (not c!13297)) b!83372))

(assert (= (or b!83369 b!83372) bm!7818))

(assert (= (or b!83366 bm!7818) bm!7817))

(assert (= (or b!83367 bm!7817) bm!7816))

(assert (= (and bm!7816 c!13299) b!83368))

(assert (= (and bm!7816 (not c!13299)) b!83365))

(assert (= (and d!20997 res!43143) b!83364))

(assert (= (and b!83364 res!43144) b!83371))

(declare-fun m!86385 () Bool)

(assert (=> d!20997 m!86385))

(declare-fun m!86387 () Bool)

(assert (=> d!20997 m!86387))

(declare-fun m!86389 () Bool)

(assert (=> b!83368 m!86389))

(declare-fun m!86391 () Bool)

(assert (=> bm!7816 m!86391))

(declare-fun m!86393 () Bool)

(assert (=> b!83364 m!86393))

(declare-fun m!86395 () Bool)

(assert (=> b!83371 m!86395))

(assert (=> d!20921 d!20997))

(declare-fun d!20999 () Bool)

(declare-fun get!1201 (Option!146) V!3017)

(assert (=> d!20999 (= (apply!81 lt!39113 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1201 (getValueByKey!140 (toList!734 lt!39113) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!3524 () Bool)

(assert (= bs!3524 d!20999))

(assert (=> bs!3524 m!85989))

(declare-fun m!86397 () Bool)

(assert (=> bs!3524 m!86397))

(assert (=> bs!3524 m!86397))

(declare-fun m!86399 () Bool)

(assert (=> bs!3524 m!86399))

(assert (=> b!83196 d!20999))

(declare-fun d!21001 () Bool)

(declare-fun c!13301 () Bool)

(assert (=> d!21001 (= c!13301 ((_ is ValueCellFull!920) (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!54422 () V!3017)

(assert (=> d!21001 (= (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!54422)))

(declare-fun b!83374 () Bool)

(assert (=> b!83374 (= e!54422 (get!1199 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!83375 () Bool)

(assert (=> b!83375 (= e!54422 (get!1200 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!21001 c!13301) b!83374))

(assert (= (and d!21001 (not c!13301)) b!83375))

(assert (=> b!83374 m!86061))

(assert (=> b!83374 m!85725))

(declare-fun m!86401 () Bool)

(assert (=> b!83374 m!86401))

(assert (=> b!83375 m!86061))

(assert (=> b!83375 m!85725))

(declare-fun m!86403 () Bool)

(assert (=> b!83375 m!86403))

(assert (=> b!83196 d!21001))

(declare-fun d!21003 () Bool)

(declare-fun lt!39203 () Bool)

(assert (=> d!21003 (= lt!39203 (select (content!89 (toList!734 lt!39053)) lt!38775))))

(declare-fun e!54423 () Bool)

(assert (=> d!21003 (= lt!39203 e!54423)))

(declare-fun res!43146 () Bool)

(assert (=> d!21003 (=> (not res!43146) (not e!54423))))

(assert (=> d!21003 (= res!43146 ((_ is Cons!1500) (toList!734 lt!39053)))))

(assert (=> d!21003 (= (contains!746 (toList!734 lt!39053) lt!38775) lt!39203)))

(declare-fun b!83376 () Bool)

(declare-fun e!54424 () Bool)

(assert (=> b!83376 (= e!54423 e!54424)))

(declare-fun res!43145 () Bool)

(assert (=> b!83376 (=> res!43145 e!54424)))

(assert (=> b!83376 (= res!43145 (= (h!2090 (toList!734 lt!39053)) lt!38775))))

(declare-fun b!83377 () Bool)

(assert (=> b!83377 (= e!54424 (contains!746 (t!5196 (toList!734 lt!39053)) lt!38775))))

(assert (= (and d!21003 res!43146) b!83376))

(assert (= (and b!83376 (not res!43145)) b!83377))

(declare-fun m!86405 () Bool)

(assert (=> d!21003 m!86405))

(declare-fun m!86407 () Bool)

(assert (=> d!21003 m!86407))

(declare-fun m!86409 () Bool)

(assert (=> b!83377 m!86409))

(assert (=> b!83145 d!21003))

(declare-fun d!21005 () Bool)

(declare-fun e!54426 () Bool)

(assert (=> d!21005 e!54426))

(declare-fun res!43147 () Bool)

(assert (=> d!21005 (=> res!43147 e!54426)))

(declare-fun lt!39204 () Bool)

(assert (=> d!21005 (= res!43147 (not lt!39204))))

(declare-fun lt!39207 () Bool)

(assert (=> d!21005 (= lt!39204 lt!39207)))

(declare-fun lt!39206 () Unit!2413)

(declare-fun e!54425 () Unit!2413)

(assert (=> d!21005 (= lt!39206 e!54425)))

(declare-fun c!13302 () Bool)

(assert (=> d!21005 (= c!13302 lt!39207)))

(assert (=> d!21005 (= lt!39207 (containsKey!143 (toList!734 lt!39036) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!21005 (= (contains!744 lt!39036 #b0000000000000000000000000000000000000000000000000000000000000000) lt!39204)))

(declare-fun b!83378 () Bool)

(declare-fun lt!39205 () Unit!2413)

(assert (=> b!83378 (= e!54425 lt!39205)))

(assert (=> b!83378 (= lt!39205 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 lt!39036) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!83378 (isDefined!92 (getValueByKey!140 (toList!734 lt!39036) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!83379 () Bool)

(declare-fun Unit!2429 () Unit!2413)

(assert (=> b!83379 (= e!54425 Unit!2429)))

(declare-fun b!83380 () Bool)

(assert (=> b!83380 (= e!54426 (isDefined!92 (getValueByKey!140 (toList!734 lt!39036) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!21005 c!13302) b!83378))

(assert (= (and d!21005 (not c!13302)) b!83379))

(assert (= (and d!21005 (not res!43147)) b!83380))

(declare-fun m!86411 () Bool)

(assert (=> d!21005 m!86411))

(declare-fun m!86413 () Bool)

(assert (=> b!83378 m!86413))

(declare-fun m!86415 () Bool)

(assert (=> b!83378 m!86415))

(assert (=> b!83378 m!86415))

(declare-fun m!86417 () Bool)

(assert (=> b!83378 m!86417))

(assert (=> b!83380 m!86415))

(assert (=> b!83380 m!86415))

(assert (=> b!83380 m!86417))

(assert (=> d!20925 d!21005))

(assert (=> d!20925 d!20935))

(declare-fun d!21007 () Bool)

(assert (=> d!21007 (= (validKeyInArray!0 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!83198 d!21007))

(assert (=> b!83214 d!21007))

(declare-fun d!21009 () Bool)

(declare-fun lt!39208 () Bool)

(assert (=> d!21009 (= lt!39208 (select (content!89 (toList!734 lt!39044)) lt!38775))))

(declare-fun e!54427 () Bool)

(assert (=> d!21009 (= lt!39208 e!54427)))

(declare-fun res!43149 () Bool)

(assert (=> d!21009 (=> (not res!43149) (not e!54427))))

(assert (=> d!21009 (= res!43149 ((_ is Cons!1500) (toList!734 lt!39044)))))

(assert (=> d!21009 (= (contains!746 (toList!734 lt!39044) lt!38775) lt!39208)))

(declare-fun b!83381 () Bool)

(declare-fun e!54428 () Bool)

(assert (=> b!83381 (= e!54427 e!54428)))

(declare-fun res!43148 () Bool)

(assert (=> b!83381 (=> res!43148 e!54428)))

(assert (=> b!83381 (= res!43148 (= (h!2090 (toList!734 lt!39044)) lt!38775))))

(declare-fun b!83382 () Bool)

(assert (=> b!83382 (= e!54428 (contains!746 (t!5196 (toList!734 lt!39044)) lt!38775))))

(assert (= (and d!21009 res!43149) b!83381))

(assert (= (and b!83381 (not res!43148)) b!83382))

(declare-fun m!86419 () Bool)

(assert (=> d!21009 m!86419))

(declare-fun m!86421 () Bool)

(assert (=> d!21009 m!86421))

(declare-fun m!86423 () Bool)

(assert (=> b!83382 m!86423))

(assert (=> b!83141 d!21009))

(declare-fun d!21011 () Bool)

(assert (=> d!21011 (= (get!1200 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) from!355) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!83151 d!21011))

(declare-fun b!83395 () Bool)

(declare-fun e!54437 () SeekEntryResult!236)

(declare-fun lt!39215 () SeekEntryResult!236)

(assert (=> b!83395 (= e!54437 (MissingZero!236 (index!3082 lt!39215)))))

(declare-fun b!83396 () Bool)

(declare-fun c!13309 () Bool)

(declare-fun lt!39217 () (_ BitVec 64))

(assert (=> b!83396 (= c!13309 (= lt!39217 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!54435 () SeekEntryResult!236)

(assert (=> b!83396 (= e!54435 e!54437)))

(declare-fun b!83397 () Bool)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!3997 (_ BitVec 32)) SeekEntryResult!236)

(assert (=> b!83397 (= e!54437 (seekKeyOrZeroReturnVacant!0 (x!11845 lt!39215) (index!3082 lt!39215) (index!3082 lt!39215) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (_keys!3984 newMap!16) (mask!6334 newMap!16)))))

(declare-fun b!83399 () Bool)

(declare-fun e!54436 () SeekEntryResult!236)

(assert (=> b!83399 (= e!54436 e!54435)))

(assert (=> b!83399 (= lt!39217 (select (arr!1904 (_keys!3984 newMap!16)) (index!3082 lt!39215)))))

(declare-fun c!13311 () Bool)

(assert (=> b!83399 (= c!13311 (= lt!39217 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))

(declare-fun b!83400 () Bool)

(assert (=> b!83400 (= e!54435 (Found!236 (index!3082 lt!39215)))))

(declare-fun d!21013 () Bool)

(declare-fun lt!39216 () SeekEntryResult!236)

(assert (=> d!21013 (and (or ((_ is Undefined!236) lt!39216) (not ((_ is Found!236) lt!39216)) (and (bvsge (index!3081 lt!39216) #b00000000000000000000000000000000) (bvslt (index!3081 lt!39216) (size!2147 (_keys!3984 newMap!16))))) (or ((_ is Undefined!236) lt!39216) ((_ is Found!236) lt!39216) (not ((_ is MissingZero!236) lt!39216)) (and (bvsge (index!3080 lt!39216) #b00000000000000000000000000000000) (bvslt (index!3080 lt!39216) (size!2147 (_keys!3984 newMap!16))))) (or ((_ is Undefined!236) lt!39216) ((_ is Found!236) lt!39216) ((_ is MissingZero!236) lt!39216) (not ((_ is MissingVacant!236) lt!39216)) (and (bvsge (index!3083 lt!39216) #b00000000000000000000000000000000) (bvslt (index!3083 lt!39216) (size!2147 (_keys!3984 newMap!16))))) (or ((_ is Undefined!236) lt!39216) (ite ((_ is Found!236) lt!39216) (= (select (arr!1904 (_keys!3984 newMap!16)) (index!3081 lt!39216)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) (ite ((_ is MissingZero!236) lt!39216) (= (select (arr!1904 (_keys!3984 newMap!16)) (index!3080 lt!39216)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!236) lt!39216) (= (select (arr!1904 (_keys!3984 newMap!16)) (index!3083 lt!39216)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!21013 (= lt!39216 e!54436)))

(declare-fun c!13310 () Bool)

(assert (=> d!21013 (= c!13310 (and ((_ is Intermediate!236) lt!39215) (undefined!1048 lt!39215)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!3997 (_ BitVec 32)) SeekEntryResult!236)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!21013 (= lt!39215 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (mask!6334 newMap!16)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (_keys!3984 newMap!16) (mask!6334 newMap!16)))))

(assert (=> d!21013 (validMask!0 (mask!6334 newMap!16))))

(assert (=> d!21013 (= (seekEntryOrOpen!0 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (_keys!3984 newMap!16) (mask!6334 newMap!16)) lt!39216)))

(declare-fun b!83398 () Bool)

(assert (=> b!83398 (= e!54436 Undefined!236)))

(assert (= (and d!21013 c!13310) b!83398))

(assert (= (and d!21013 (not c!13310)) b!83399))

(assert (= (and b!83399 c!13311) b!83400))

(assert (= (and b!83399 (not c!13311)) b!83396))

(assert (= (and b!83396 c!13309) b!83395))

(assert (= (and b!83396 (not c!13309)) b!83397))

(assert (=> b!83397 m!85721))

(declare-fun m!86425 () Bool)

(assert (=> b!83397 m!86425))

(declare-fun m!86427 () Bool)

(assert (=> b!83399 m!86427))

(declare-fun m!86429 () Bool)

(assert (=> d!21013 m!86429))

(declare-fun m!86431 () Bool)

(assert (=> d!21013 m!86431))

(assert (=> d!21013 m!85721))

(declare-fun m!86433 () Bool)

(assert (=> d!21013 m!86433))

(assert (=> d!21013 m!86223))

(declare-fun m!86435 () Bool)

(assert (=> d!21013 m!86435))

(assert (=> d!21013 m!86433))

(assert (=> d!21013 m!85721))

(declare-fun m!86437 () Bool)

(assert (=> d!21013 m!86437))

(assert (=> b!83054 d!21013))

(declare-fun d!21015 () Bool)

(declare-fun res!43150 () Bool)

(declare-fun e!54438 () Bool)

(assert (=> d!21015 (=> res!43150 e!54438)))

(assert (=> d!21015 (= res!43150 (= (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))

(assert (=> d!21015 (= (arrayContainsKey!0 (_keys!3984 newMap!16) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) #b00000000000000000000000000000000) e!54438)))

(declare-fun b!83401 () Bool)

(declare-fun e!54439 () Bool)

(assert (=> b!83401 (= e!54438 e!54439)))

(declare-fun res!43151 () Bool)

(assert (=> b!83401 (=> (not res!43151) (not e!54439))))

(assert (=> b!83401 (= res!43151 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2147 (_keys!3984 newMap!16))))))

(declare-fun b!83402 () Bool)

(assert (=> b!83402 (= e!54439 (arrayContainsKey!0 (_keys!3984 newMap!16) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!21015 (not res!43150)) b!83401))

(assert (= (and b!83401 res!43151) b!83402))

(assert (=> d!21015 m!86211))

(assert (=> b!83402 m!85721))

(declare-fun m!86439 () Bool)

(assert (=> b!83402 m!86439))

(assert (=> bm!7756 d!21015))

(declare-fun b!83405 () Bool)

(declare-fun e!54441 () Option!146)

(assert (=> b!83405 (= e!54441 (getValueByKey!140 (t!5196 (toList!734 lt!39049)) (_1!1102 lt!38772)))))

(declare-fun d!21017 () Bool)

(declare-fun c!13312 () Bool)

(assert (=> d!21017 (= c!13312 (and ((_ is Cons!1500) (toList!734 lt!39049)) (= (_1!1102 (h!2090 (toList!734 lt!39049))) (_1!1102 lt!38772))))))

(declare-fun e!54440 () Option!146)

(assert (=> d!21017 (= (getValueByKey!140 (toList!734 lt!39049) (_1!1102 lt!38772)) e!54440)))

(declare-fun b!83403 () Bool)

(assert (=> b!83403 (= e!54440 (Some!145 (_2!1102 (h!2090 (toList!734 lt!39049)))))))

(declare-fun b!83404 () Bool)

(assert (=> b!83404 (= e!54440 e!54441)))

(declare-fun c!13313 () Bool)

(assert (=> b!83404 (= c!13313 (and ((_ is Cons!1500) (toList!734 lt!39049)) (not (= (_1!1102 (h!2090 (toList!734 lt!39049))) (_1!1102 lt!38772)))))))

(declare-fun b!83406 () Bool)

(assert (=> b!83406 (= e!54441 None!144)))

(assert (= (and d!21017 c!13312) b!83403))

(assert (= (and d!21017 (not c!13312)) b!83404))

(assert (= (and b!83404 c!13313) b!83405))

(assert (= (and b!83404 (not c!13313)) b!83406))

(declare-fun m!86441 () Bool)

(assert (=> b!83405 m!86441))

(assert (=> b!83142 d!21017))

(declare-fun d!21019 () Bool)

(declare-fun e!54442 () Bool)

(assert (=> d!21019 e!54442))

(declare-fun res!43153 () Bool)

(assert (=> d!21019 (=> (not res!43153) (not e!54442))))

(declare-fun lt!39219 () ListLongMap!1437)

(assert (=> d!21019 (= res!43153 (contains!744 lt!39219 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun lt!39221 () List!1504)

(assert (=> d!21019 (= lt!39219 (ListLongMap!1438 lt!39221))))

(declare-fun lt!39218 () Unit!2413)

(declare-fun lt!39220 () Unit!2413)

(assert (=> d!21019 (= lt!39218 lt!39220)))

(assert (=> d!21019 (= (getValueByKey!140 lt!39221 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))) (Some!145 (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(assert (=> d!21019 (= lt!39220 (lemmaContainsTupThenGetReturnValue!57 lt!39221 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(assert (=> d!21019 (= lt!39221 (insertStrictlySorted!60 (toList!734 call!7798) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(assert (=> d!21019 (= (+!105 call!7798 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) lt!39219)))

(declare-fun b!83407 () Bool)

(declare-fun res!43152 () Bool)

(assert (=> b!83407 (=> (not res!43152) (not e!54442))))

(assert (=> b!83407 (= res!43152 (= (getValueByKey!140 (toList!734 lt!39219) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))) (Some!145 (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(declare-fun b!83408 () Bool)

(assert (=> b!83408 (= e!54442 (contains!746 (toList!734 lt!39219) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))

(assert (= (and d!21019 res!43153) b!83407))

(assert (= (and b!83407 res!43152) b!83408))

(declare-fun m!86443 () Bool)

(assert (=> d!21019 m!86443))

(declare-fun m!86445 () Bool)

(assert (=> d!21019 m!86445))

(declare-fun m!86447 () Bool)

(assert (=> d!21019 m!86447))

(declare-fun m!86449 () Bool)

(assert (=> d!21019 m!86449))

(declare-fun m!86451 () Bool)

(assert (=> b!83407 m!86451))

(declare-fun m!86453 () Bool)

(assert (=> b!83408 m!86453))

(assert (=> b!83206 d!21019))

(declare-fun d!21021 () Bool)

(assert (=> d!21021 (= (map!1193 (_2!1101 lt!38973)) (getCurrentListMap!429 (_keys!3984 (_2!1101 lt!38973)) (_values!2299 (_2!1101 lt!38973)) (mask!6334 (_2!1101 lt!38973)) (extraKeys!2159 (_2!1101 lt!38973)) (zeroValue!2210 (_2!1101 lt!38973)) (minValue!2210 (_2!1101 lt!38973)) #b00000000000000000000000000000000 (defaultEntry!2316 (_2!1101 lt!38973))))))

(declare-fun bs!3525 () Bool)

(assert (= bs!3525 d!21021))

(declare-fun m!86455 () Bool)

(assert (=> bs!3525 m!86455))

(assert (=> bm!7761 d!21021))

(declare-fun d!21023 () Bool)

(declare-fun e!54444 () Bool)

(assert (=> d!21023 e!54444))

(declare-fun res!43154 () Bool)

(assert (=> d!21023 (=> res!43154 e!54444)))

(declare-fun lt!39222 () Bool)

(assert (=> d!21023 (= res!43154 (not lt!39222))))

(declare-fun lt!39225 () Bool)

(assert (=> d!21023 (= lt!39222 lt!39225)))

(declare-fun lt!39224 () Unit!2413)

(declare-fun e!54443 () Unit!2413)

(assert (=> d!21023 (= lt!39224 e!54443)))

(declare-fun c!13314 () Bool)

(assert (=> d!21023 (= c!13314 lt!39225)))

(assert (=> d!21023 (= lt!39225 (containsKey!143 (toList!734 lt!39008) (_1!1102 lt!38775)))))

(assert (=> d!21023 (= (contains!744 lt!39008 (_1!1102 lt!38775)) lt!39222)))

(declare-fun b!83409 () Bool)

(declare-fun lt!39223 () Unit!2413)

(assert (=> b!83409 (= e!54443 lt!39223)))

(assert (=> b!83409 (= lt!39223 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 lt!39008) (_1!1102 lt!38775)))))

(assert (=> b!83409 (isDefined!92 (getValueByKey!140 (toList!734 lt!39008) (_1!1102 lt!38775)))))

(declare-fun b!83410 () Bool)

(declare-fun Unit!2430 () Unit!2413)

(assert (=> b!83410 (= e!54443 Unit!2430)))

(declare-fun b!83411 () Bool)

(assert (=> b!83411 (= e!54444 (isDefined!92 (getValueByKey!140 (toList!734 lt!39008) (_1!1102 lt!38775))))))

(assert (= (and d!21023 c!13314) b!83409))

(assert (= (and d!21023 (not c!13314)) b!83410))

(assert (= (and d!21023 (not res!43154)) b!83411))

(declare-fun m!86457 () Bool)

(assert (=> d!21023 m!86457))

(declare-fun m!86459 () Bool)

(assert (=> b!83409 m!86459))

(assert (=> b!83409 m!86021))

(assert (=> b!83409 m!86021))

(declare-fun m!86461 () Bool)

(assert (=> b!83409 m!86461))

(assert (=> b!83411 m!86021))

(assert (=> b!83411 m!86021))

(assert (=> b!83411 m!86461))

(assert (=> d!20919 d!21023))

(declare-fun b!83414 () Bool)

(declare-fun e!54446 () Option!146)

(assert (=> b!83414 (= e!54446 (getValueByKey!140 (t!5196 lt!39010) (_1!1102 lt!38775)))))

(declare-fun d!21025 () Bool)

(declare-fun c!13315 () Bool)

(assert (=> d!21025 (= c!13315 (and ((_ is Cons!1500) lt!39010) (= (_1!1102 (h!2090 lt!39010)) (_1!1102 lt!38775))))))

(declare-fun e!54445 () Option!146)

(assert (=> d!21025 (= (getValueByKey!140 lt!39010 (_1!1102 lt!38775)) e!54445)))

(declare-fun b!83412 () Bool)

(assert (=> b!83412 (= e!54445 (Some!145 (_2!1102 (h!2090 lt!39010))))))

(declare-fun b!83413 () Bool)

(assert (=> b!83413 (= e!54445 e!54446)))

(declare-fun c!13316 () Bool)

(assert (=> b!83413 (= c!13316 (and ((_ is Cons!1500) lt!39010) (not (= (_1!1102 (h!2090 lt!39010)) (_1!1102 lt!38775)))))))

(declare-fun b!83415 () Bool)

(assert (=> b!83415 (= e!54446 None!144)))

(assert (= (and d!21025 c!13315) b!83412))

(assert (= (and d!21025 (not c!13315)) b!83413))

(assert (= (and b!83413 c!13316) b!83414))

(assert (= (and b!83413 (not c!13316)) b!83415))

(declare-fun m!86463 () Bool)

(assert (=> b!83414 m!86463))

(assert (=> d!20919 d!21025))

(declare-fun d!21027 () Bool)

(assert (=> d!21027 (= (getValueByKey!140 lt!39010 (_1!1102 lt!38775)) (Some!145 (_2!1102 lt!38775)))))

(declare-fun lt!39226 () Unit!2413)

(assert (=> d!21027 (= lt!39226 (choose!493 lt!39010 (_1!1102 lt!38775) (_2!1102 lt!38775)))))

(declare-fun e!54447 () Bool)

(assert (=> d!21027 e!54447))

(declare-fun res!43155 () Bool)

(assert (=> d!21027 (=> (not res!43155) (not e!54447))))

(assert (=> d!21027 (= res!43155 (isStrictlySorted!284 lt!39010))))

(assert (=> d!21027 (= (lemmaContainsTupThenGetReturnValue!57 lt!39010 (_1!1102 lt!38775) (_2!1102 lt!38775)) lt!39226)))

(declare-fun b!83416 () Bool)

(declare-fun res!43156 () Bool)

(assert (=> b!83416 (=> (not res!43156) (not e!54447))))

(assert (=> b!83416 (= res!43156 (containsKey!143 lt!39010 (_1!1102 lt!38775)))))

(declare-fun b!83417 () Bool)

(assert (=> b!83417 (= e!54447 (contains!746 lt!39010 (tuple2!2183 (_1!1102 lt!38775) (_2!1102 lt!38775))))))

(assert (= (and d!21027 res!43155) b!83416))

(assert (= (and b!83416 res!43156) b!83417))

(assert (=> d!21027 m!86015))

(declare-fun m!86465 () Bool)

(assert (=> d!21027 m!86465))

(declare-fun m!86467 () Bool)

(assert (=> d!21027 m!86467))

(declare-fun m!86469 () Bool)

(assert (=> b!83416 m!86469))

(declare-fun m!86471 () Bool)

(assert (=> b!83417 m!86471))

(assert (=> d!20919 d!21027))

(declare-fun c!13317 () Bool)

(declare-fun c!13320 () Bool)

(declare-fun b!83419 () Bool)

(declare-fun e!54448 () List!1504)

(assert (=> b!83419 (= e!54448 (ite c!13320 (t!5196 (toList!734 (+!105 lt!38773 lt!38779))) (ite c!13317 (Cons!1500 (h!2090 (toList!734 (+!105 lt!38773 lt!38779))) (t!5196 (toList!734 (+!105 lt!38773 lt!38779)))) Nil!1501)))))

(declare-fun bm!7819 () Bool)

(declare-fun c!13318 () Bool)

(declare-fun call!7822 () List!1504)

(assert (=> bm!7819 (= call!7822 ($colon$colon!70 e!54448 (ite c!13318 (h!2090 (toList!734 (+!105 lt!38773 lt!38779))) (tuple2!2183 (_1!1102 lt!38775) (_2!1102 lt!38775)))))))

(declare-fun c!13319 () Bool)

(assert (=> bm!7819 (= c!13319 c!13318)))

(declare-fun b!83420 () Bool)

(declare-fun e!54452 () List!1504)

(declare-fun call!7824 () List!1504)

(assert (=> b!83420 (= e!54452 call!7824)))

(declare-fun b!83421 () Bool)

(declare-fun e!54450 () List!1504)

(assert (=> b!83421 (= e!54450 call!7822)))

(declare-fun bm!7820 () Bool)

(assert (=> bm!7820 (= call!7824 call!7822)))

(declare-fun bm!7821 () Bool)

(declare-fun call!7823 () List!1504)

(assert (=> bm!7821 (= call!7823 call!7824)))

(declare-fun b!83422 () Bool)

(assert (=> b!83422 (= e!54448 (insertStrictlySorted!60 (t!5196 (toList!734 (+!105 lt!38773 lt!38779))) (_1!1102 lt!38775) (_2!1102 lt!38775)))))

(declare-fun b!83423 () Bool)

(declare-fun e!54451 () List!1504)

(assert (=> b!83423 (= e!54451 call!7823)))

(declare-fun b!83424 () Bool)

(assert (=> b!83424 (= e!54450 e!54452)))

(assert (=> b!83424 (= c!13320 (and ((_ is Cons!1500) (toList!734 (+!105 lt!38773 lt!38779))) (= (_1!1102 (h!2090 (toList!734 (+!105 lt!38773 lt!38779)))) (_1!1102 lt!38775))))))

(declare-fun b!83425 () Bool)

(declare-fun e!54449 () Bool)

(declare-fun lt!39227 () List!1504)

(assert (=> b!83425 (= e!54449 (contains!746 lt!39227 (tuple2!2183 (_1!1102 lt!38775) (_2!1102 lt!38775))))))

(declare-fun b!83418 () Bool)

(declare-fun res!43158 () Bool)

(assert (=> b!83418 (=> (not res!43158) (not e!54449))))

(assert (=> b!83418 (= res!43158 (containsKey!143 lt!39227 (_1!1102 lt!38775)))))

(declare-fun d!21029 () Bool)

(assert (=> d!21029 e!54449))

(declare-fun res!43157 () Bool)

(assert (=> d!21029 (=> (not res!43157) (not e!54449))))

(assert (=> d!21029 (= res!43157 (isStrictlySorted!284 lt!39227))))

(assert (=> d!21029 (= lt!39227 e!54450)))

(assert (=> d!21029 (= c!13318 (and ((_ is Cons!1500) (toList!734 (+!105 lt!38773 lt!38779))) (bvslt (_1!1102 (h!2090 (toList!734 (+!105 lt!38773 lt!38779)))) (_1!1102 lt!38775))))))

(assert (=> d!21029 (isStrictlySorted!284 (toList!734 (+!105 lt!38773 lt!38779)))))

(assert (=> d!21029 (= (insertStrictlySorted!60 (toList!734 (+!105 lt!38773 lt!38779)) (_1!1102 lt!38775) (_2!1102 lt!38775)) lt!39227)))

(declare-fun b!83426 () Bool)

(assert (=> b!83426 (= e!54451 call!7823)))

(declare-fun b!83427 () Bool)

(assert (=> b!83427 (= c!13317 (and ((_ is Cons!1500) (toList!734 (+!105 lt!38773 lt!38779))) (bvsgt (_1!1102 (h!2090 (toList!734 (+!105 lt!38773 lt!38779)))) (_1!1102 lt!38775))))))

(assert (=> b!83427 (= e!54452 e!54451)))

(assert (= (and d!21029 c!13318) b!83421))

(assert (= (and d!21029 (not c!13318)) b!83424))

(assert (= (and b!83424 c!13320) b!83420))

(assert (= (and b!83424 (not c!13320)) b!83427))

(assert (= (and b!83427 c!13317) b!83423))

(assert (= (and b!83427 (not c!13317)) b!83426))

(assert (= (or b!83423 b!83426) bm!7821))

(assert (= (or b!83420 bm!7821) bm!7820))

(assert (= (or b!83421 bm!7820) bm!7819))

(assert (= (and bm!7819 c!13319) b!83422))

(assert (= (and bm!7819 (not c!13319)) b!83419))

(assert (= (and d!21029 res!43157) b!83418))

(assert (= (and b!83418 res!43158) b!83425))

(declare-fun m!86473 () Bool)

(assert (=> d!21029 m!86473))

(declare-fun m!86475 () Bool)

(assert (=> d!21029 m!86475))

(declare-fun m!86477 () Bool)

(assert (=> b!83422 m!86477))

(declare-fun m!86479 () Bool)

(assert (=> bm!7819 m!86479))

(declare-fun m!86481 () Bool)

(assert (=> b!83418 m!86481))

(declare-fun m!86483 () Bool)

(assert (=> b!83425 m!86483))

(assert (=> d!20919 d!21029))

(declare-fun d!21031 () Bool)

(declare-fun res!43163 () Bool)

(declare-fun e!54457 () Bool)

(assert (=> d!21031 (=> res!43163 e!54457)))

(assert (=> d!21031 (= res!43163 (and ((_ is Cons!1500) (toList!734 lt!38770)) (= (_1!1102 (h!2090 (toList!734 lt!38770))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355))))))

(assert (=> d!21031 (= (containsKey!143 (toList!734 lt!38770) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) e!54457)))

(declare-fun b!83432 () Bool)

(declare-fun e!54458 () Bool)

(assert (=> b!83432 (= e!54457 e!54458)))

(declare-fun res!43164 () Bool)

(assert (=> b!83432 (=> (not res!43164) (not e!54458))))

(assert (=> b!83432 (= res!43164 (and (or (not ((_ is Cons!1500) (toList!734 lt!38770))) (bvsle (_1!1102 (h!2090 (toList!734 lt!38770))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355))) ((_ is Cons!1500) (toList!734 lt!38770)) (bvslt (_1!1102 (h!2090 (toList!734 lt!38770))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355))))))

(declare-fun b!83433 () Bool)

(assert (=> b!83433 (= e!54458 (containsKey!143 (t!5196 (toList!734 lt!38770)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))

(assert (= (and d!21031 (not res!43163)) b!83432))

(assert (= (and b!83432 res!43164) b!83433))

(assert (=> b!83433 m!85721))

(declare-fun m!86485 () Bool)

(assert (=> b!83433 m!86485))

(assert (=> d!20899 d!21031))

(declare-fun b!83434 () Bool)

(declare-fun e!54466 () Unit!2413)

(declare-fun Unit!2431 () Unit!2413)

(assert (=> b!83434 (= e!54466 Unit!2431)))

(declare-fun b!83435 () Bool)

(declare-fun e!54471 () Bool)

(declare-fun e!54459 () Bool)

(assert (=> b!83435 (= e!54471 e!54459)))

(declare-fun c!13325 () Bool)

(assert (=> b!83435 (= c!13325 (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun call!7828 () ListLongMap!1437)

(declare-fun call!7831 () ListLongMap!1437)

(declare-fun call!7826 () ListLongMap!1437)

(declare-fun c!13321 () Bool)

(declare-fun c!13326 () Bool)

(declare-fun bm!7822 () Bool)

(declare-fun call!7827 () ListLongMap!1437)

(assert (=> bm!7822 (= call!7828 (+!105 (ite c!13326 call!7831 (ite c!13321 call!7826 call!7827)) (ite (or c!13326 c!13321) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16)))))))

(declare-fun bm!7823 () Bool)

(declare-fun call!7830 () Bool)

(declare-fun lt!39241 () ListLongMap!1437)

(assert (=> bm!7823 (= call!7830 (contains!744 lt!39241 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!83436 () Bool)

(declare-fun e!54467 () Bool)

(assert (=> b!83436 (= e!54467 (= (apply!81 lt!39241 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)) (get!1198 (select (arr!1905 (ite c!13224 (_values!2299 newMap!16) lt!38974)) #b00000000000000000000000000000000) (dynLambda!343 (defaultEntry!2316 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!83436 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2148 (ite c!13224 (_values!2299 newMap!16) lt!38974))))))

(assert (=> b!83436 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))))))

(declare-fun b!83437 () Bool)

(declare-fun call!7829 () Bool)

(assert (=> b!83437 (= e!54459 (not call!7829))))

(declare-fun b!83438 () Bool)

(declare-fun e!54470 () Bool)

(assert (=> b!83438 (= e!54470 (validKeyInArray!0 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!7824 () Bool)

(assert (=> bm!7824 (= call!7829 (contains!744 lt!39241 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!83440 () Bool)

(declare-fun e!54460 () Bool)

(assert (=> b!83440 (= e!54460 (= (apply!81 lt!39241 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2210 newMap!16)))))

(declare-fun b!83441 () Bool)

(declare-fun res!43173 () Bool)

(assert (=> b!83441 (=> (not res!43173) (not e!54471))))

(declare-fun e!54468 () Bool)

(assert (=> b!83441 (= res!43173 e!54468)))

(declare-fun c!13322 () Bool)

(assert (=> b!83441 (= c!13322 (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!7825 () Bool)

(declare-fun call!7825 () ListLongMap!1437)

(assert (=> bm!7825 (= call!7825 call!7828)))

(declare-fun b!83442 () Bool)

(assert (=> b!83442 (= e!54468 e!54460)))

(declare-fun res!43170 () Bool)

(assert (=> b!83442 (= res!43170 call!7830)))

(assert (=> b!83442 (=> (not res!43170) (not e!54460))))

(declare-fun b!83443 () Bool)

(declare-fun lt!39234 () Unit!2413)

(assert (=> b!83443 (= e!54466 lt!39234)))

(declare-fun lt!39237 () ListLongMap!1437)

(assert (=> b!83443 (= lt!39237 (getCurrentListMapNoExtraKeys!70 (_keys!3984 newMap!16) (ite c!13224 (_values!2299 newMap!16) lt!38974) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39230 () (_ BitVec 64))

(assert (=> b!83443 (= lt!39230 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39246 () (_ BitVec 64))

(assert (=> b!83443 (= lt!39246 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!39242 () Unit!2413)

(assert (=> b!83443 (= lt!39242 (addStillContains!57 lt!39237 lt!39230 (zeroValue!2210 newMap!16) lt!39246))))

(assert (=> b!83443 (contains!744 (+!105 lt!39237 (tuple2!2183 lt!39230 (zeroValue!2210 newMap!16))) lt!39246)))

(declare-fun lt!39232 () Unit!2413)

(assert (=> b!83443 (= lt!39232 lt!39242)))

(declare-fun lt!39249 () ListLongMap!1437)

(assert (=> b!83443 (= lt!39249 (getCurrentListMapNoExtraKeys!70 (_keys!3984 newMap!16) (ite c!13224 (_values!2299 newMap!16) lt!38974) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39231 () (_ BitVec 64))

(assert (=> b!83443 (= lt!39231 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39235 () (_ BitVec 64))

(assert (=> b!83443 (= lt!39235 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!39248 () Unit!2413)

(assert (=> b!83443 (= lt!39248 (addApplyDifferent!57 lt!39249 lt!39231 (minValue!2210 newMap!16) lt!39235))))

(assert (=> b!83443 (= (apply!81 (+!105 lt!39249 (tuple2!2183 lt!39231 (minValue!2210 newMap!16))) lt!39235) (apply!81 lt!39249 lt!39235))))

(declare-fun lt!39247 () Unit!2413)

(assert (=> b!83443 (= lt!39247 lt!39248)))

(declare-fun lt!39236 () ListLongMap!1437)

(assert (=> b!83443 (= lt!39236 (getCurrentListMapNoExtraKeys!70 (_keys!3984 newMap!16) (ite c!13224 (_values!2299 newMap!16) lt!38974) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39240 () (_ BitVec 64))

(assert (=> b!83443 (= lt!39240 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39245 () (_ BitVec 64))

(assert (=> b!83443 (= lt!39245 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!39239 () Unit!2413)

(assert (=> b!83443 (= lt!39239 (addApplyDifferent!57 lt!39236 lt!39240 (zeroValue!2210 newMap!16) lt!39245))))

(assert (=> b!83443 (= (apply!81 (+!105 lt!39236 (tuple2!2183 lt!39240 (zeroValue!2210 newMap!16))) lt!39245) (apply!81 lt!39236 lt!39245))))

(declare-fun lt!39238 () Unit!2413)

(assert (=> b!83443 (= lt!39238 lt!39239)))

(declare-fun lt!39243 () ListLongMap!1437)

(assert (=> b!83443 (= lt!39243 (getCurrentListMapNoExtraKeys!70 (_keys!3984 newMap!16) (ite c!13224 (_values!2299 newMap!16) lt!38974) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39233 () (_ BitVec 64))

(assert (=> b!83443 (= lt!39233 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39229 () (_ BitVec 64))

(assert (=> b!83443 (= lt!39229 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!83443 (= lt!39234 (addApplyDifferent!57 lt!39243 lt!39233 (minValue!2210 newMap!16) lt!39229))))

(assert (=> b!83443 (= (apply!81 (+!105 lt!39243 (tuple2!2183 lt!39233 (minValue!2210 newMap!16))) lt!39229) (apply!81 lt!39243 lt!39229))))

(declare-fun bm!7826 () Bool)

(assert (=> bm!7826 (= call!7831 (getCurrentListMapNoExtraKeys!70 (_keys!3984 newMap!16) (ite c!13224 (_values!2299 newMap!16) lt!38974) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun b!83444 () Bool)

(declare-fun e!54464 () ListLongMap!1437)

(assert (=> b!83444 (= e!54464 call!7825)))

(declare-fun bm!7827 () Bool)

(assert (=> bm!7827 (= call!7826 call!7831)))

(declare-fun d!21033 () Bool)

(assert (=> d!21033 e!54471))

(declare-fun res!43172 () Bool)

(assert (=> d!21033 (=> (not res!43172) (not e!54471))))

(assert (=> d!21033 (= res!43172 (or (bvsge #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))))))))

(declare-fun lt!39228 () ListLongMap!1437)

(assert (=> d!21033 (= lt!39241 lt!39228)))

(declare-fun lt!39244 () Unit!2413)

(assert (=> d!21033 (= lt!39244 e!54466)))

(declare-fun c!13323 () Bool)

(declare-fun e!54463 () Bool)

(assert (=> d!21033 (= c!13323 e!54463)))

(declare-fun res!43168 () Bool)

(assert (=> d!21033 (=> (not res!43168) (not e!54463))))

(assert (=> d!21033 (= res!43168 (bvslt #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))))))

(declare-fun e!54469 () ListLongMap!1437)

(assert (=> d!21033 (= lt!39228 e!54469)))

(assert (=> d!21033 (= c!13326 (and (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!21033 (validMask!0 (mask!6334 newMap!16))))

(assert (=> d!21033 (= (getCurrentListMap!429 (_keys!3984 newMap!16) (ite c!13224 (_values!2299 newMap!16) lt!38974) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) lt!39241)))

(declare-fun b!83439 () Bool)

(declare-fun c!13324 () Bool)

(assert (=> b!83439 (= c!13324 (and (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!54461 () ListLongMap!1437)

(assert (=> b!83439 (= e!54461 e!54464)))

(declare-fun b!83445 () Bool)

(declare-fun res!43171 () Bool)

(assert (=> b!83445 (=> (not res!43171) (not e!54471))))

(declare-fun e!54462 () Bool)

(assert (=> b!83445 (= res!43171 e!54462)))

(declare-fun res!43167 () Bool)

(assert (=> b!83445 (=> res!43167 e!54462)))

(assert (=> b!83445 (= res!43167 (not e!54470))))

(declare-fun res!43165 () Bool)

(assert (=> b!83445 (=> (not res!43165) (not e!54470))))

(assert (=> b!83445 (= res!43165 (bvslt #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))))))

(declare-fun bm!7828 () Bool)

(assert (=> bm!7828 (= call!7827 call!7826)))

(declare-fun b!83446 () Bool)

(assert (=> b!83446 (= e!54469 (+!105 call!7828 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16))))))

(declare-fun b!83447 () Bool)

(assert (=> b!83447 (= e!54461 call!7825)))

(declare-fun b!83448 () Bool)

(declare-fun e!54465 () Bool)

(assert (=> b!83448 (= e!54459 e!54465)))

(declare-fun res!43166 () Bool)

(assert (=> b!83448 (= res!43166 call!7829)))

(assert (=> b!83448 (=> (not res!43166) (not e!54465))))

(declare-fun b!83449 () Bool)

(assert (=> b!83449 (= e!54464 call!7827)))

(declare-fun b!83450 () Bool)

(assert (=> b!83450 (= e!54469 e!54461)))

(assert (=> b!83450 (= c!13321 (and (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!83451 () Bool)

(assert (=> b!83451 (= e!54462 e!54467)))

(declare-fun res!43169 () Bool)

(assert (=> b!83451 (=> (not res!43169) (not e!54467))))

(assert (=> b!83451 (= res!43169 (contains!744 lt!39241 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!83451 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))))))

(declare-fun b!83452 () Bool)

(assert (=> b!83452 (= e!54468 (not call!7830))))

(declare-fun b!83453 () Bool)

(assert (=> b!83453 (= e!54465 (= (apply!81 lt!39241 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2210 newMap!16)))))

(declare-fun b!83454 () Bool)

(assert (=> b!83454 (= e!54463 (validKeyInArray!0 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!21033 c!13326) b!83446))

(assert (= (and d!21033 (not c!13326)) b!83450))

(assert (= (and b!83450 c!13321) b!83447))

(assert (= (and b!83450 (not c!13321)) b!83439))

(assert (= (and b!83439 c!13324) b!83444))

(assert (= (and b!83439 (not c!13324)) b!83449))

(assert (= (or b!83444 b!83449) bm!7828))

(assert (= (or b!83447 bm!7828) bm!7827))

(assert (= (or b!83447 b!83444) bm!7825))

(assert (= (or b!83446 bm!7827) bm!7826))

(assert (= (or b!83446 bm!7825) bm!7822))

(assert (= (and d!21033 res!43168) b!83454))

(assert (= (and d!21033 c!13323) b!83443))

(assert (= (and d!21033 (not c!13323)) b!83434))

(assert (= (and d!21033 res!43172) b!83445))

(assert (= (and b!83445 res!43165) b!83438))

(assert (= (and b!83445 (not res!43167)) b!83451))

(assert (= (and b!83451 res!43169) b!83436))

(assert (= (and b!83445 res!43171) b!83441))

(assert (= (and b!83441 c!13322) b!83442))

(assert (= (and b!83441 (not c!13322)) b!83452))

(assert (= (and b!83442 res!43170) b!83440))

(assert (= (or b!83442 b!83452) bm!7823))

(assert (= (and b!83441 res!43173) b!83435))

(assert (= (and b!83435 c!13325) b!83448))

(assert (= (and b!83435 (not c!13325)) b!83437))

(assert (= (and b!83448 res!43166) b!83453))

(assert (= (or b!83448 b!83437) bm!7824))

(declare-fun b_lambda!3713 () Bool)

(assert (=> (not b_lambda!3713) (not b!83436)))

(assert (=> b!83436 t!5209))

(declare-fun b_and!5077 () Bool)

(assert (= b_and!5073 (and (=> t!5209 result!2895) b_and!5077)))

(assert (=> b!83436 t!5211))

(declare-fun b_and!5079 () Bool)

(assert (= b_and!5075 (and (=> t!5211 result!2897) b_and!5079)))

(assert (=> b!83454 m!86211))

(assert (=> b!83454 m!86211))

(assert (=> b!83454 m!86213))

(declare-fun m!86487 () Bool)

(assert (=> b!83436 m!86487))

(assert (=> b!83436 m!86211))

(declare-fun m!86489 () Bool)

(assert (=> b!83436 m!86489))

(assert (=> b!83436 m!86211))

(assert (=> b!83436 m!86219))

(assert (=> b!83436 m!86487))

(assert (=> b!83436 m!86219))

(declare-fun m!86491 () Bool)

(assert (=> b!83436 m!86491))

(assert (=> d!21033 m!86223))

(declare-fun m!86493 () Bool)

(assert (=> b!83453 m!86493))

(declare-fun m!86495 () Bool)

(assert (=> b!83443 m!86495))

(declare-fun m!86497 () Bool)

(assert (=> b!83443 m!86497))

(declare-fun m!86499 () Bool)

(assert (=> b!83443 m!86499))

(declare-fun m!86501 () Bool)

(assert (=> b!83443 m!86501))

(assert (=> b!83443 m!86497))

(declare-fun m!86503 () Bool)

(assert (=> b!83443 m!86503))

(declare-fun m!86505 () Bool)

(assert (=> b!83443 m!86505))

(declare-fun m!86507 () Bool)

(assert (=> b!83443 m!86507))

(declare-fun m!86509 () Bool)

(assert (=> b!83443 m!86509))

(declare-fun m!86511 () Bool)

(assert (=> b!83443 m!86511))

(declare-fun m!86513 () Bool)

(assert (=> b!83443 m!86513))

(declare-fun m!86515 () Bool)

(assert (=> b!83443 m!86515))

(assert (=> b!83443 m!86211))

(assert (=> b!83443 m!86511))

(assert (=> b!83443 m!86505))

(assert (=> b!83443 m!86499))

(declare-fun m!86517 () Bool)

(assert (=> b!83443 m!86517))

(declare-fun m!86519 () Bool)

(assert (=> b!83443 m!86519))

(declare-fun m!86521 () Bool)

(assert (=> b!83443 m!86521))

(declare-fun m!86523 () Bool)

(assert (=> b!83443 m!86523))

(declare-fun m!86525 () Bool)

(assert (=> b!83443 m!86525))

(declare-fun m!86527 () Bool)

(assert (=> b!83446 m!86527))

(declare-fun m!86529 () Bool)

(assert (=> bm!7822 m!86529))

(assert (=> b!83451 m!86211))

(assert (=> b!83451 m!86211))

(declare-fun m!86531 () Bool)

(assert (=> b!83451 m!86531))

(assert (=> bm!7826 m!86515))

(declare-fun m!86533 () Bool)

(assert (=> bm!7824 m!86533))

(assert (=> b!83438 m!86211))

(assert (=> b!83438 m!86211))

(assert (=> b!83438 m!86213))

(declare-fun m!86535 () Bool)

(assert (=> bm!7823 m!86535))

(declare-fun m!86537 () Bool)

(assert (=> b!83440 m!86537))

(assert (=> bm!7755 d!21033))

(declare-fun d!21035 () Bool)

(declare-fun e!54472 () Bool)

(assert (=> d!21035 e!54472))

(declare-fun res!43175 () Bool)

(assert (=> d!21035 (=> (not res!43175) (not e!54472))))

(declare-fun lt!39251 () ListLongMap!1437)

(assert (=> d!21035 (= res!43175 (contains!744 lt!39251 (_1!1102 (ite (or c!13263 c!13258) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(declare-fun lt!39253 () List!1504)

(assert (=> d!21035 (= lt!39251 (ListLongMap!1438 lt!39253))))

(declare-fun lt!39250 () Unit!2413)

(declare-fun lt!39252 () Unit!2413)

(assert (=> d!21035 (= lt!39250 lt!39252)))

(assert (=> d!21035 (= (getValueByKey!140 lt!39253 (_1!1102 (ite (or c!13263 c!13258) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))) (Some!145 (_2!1102 (ite (or c!13263 c!13258) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(assert (=> d!21035 (= lt!39252 (lemmaContainsTupThenGetReturnValue!57 lt!39253 (_1!1102 (ite (or c!13263 c!13258) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))) (_2!1102 (ite (or c!13263 c!13258) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(assert (=> d!21035 (= lt!39253 (insertStrictlySorted!60 (toList!734 (ite c!13263 call!7801 (ite c!13258 call!7796 call!7797))) (_1!1102 (ite (or c!13263 c!13258) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))) (_2!1102 (ite (or c!13263 c!13258) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(assert (=> d!21035 (= (+!105 (ite c!13263 call!7801 (ite c!13258 call!7796 call!7797)) (ite (or c!13263 c!13258) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))) lt!39251)))

(declare-fun b!83455 () Bool)

(declare-fun res!43174 () Bool)

(assert (=> b!83455 (=> (not res!43174) (not e!54472))))

(assert (=> b!83455 (= res!43174 (= (getValueByKey!140 (toList!734 lt!39251) (_1!1102 (ite (or c!13263 c!13258) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))) (Some!145 (_2!1102 (ite (or c!13263 c!13258) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))))

(declare-fun b!83456 () Bool)

(assert (=> b!83456 (= e!54472 (contains!746 (toList!734 lt!39251) (ite (or c!13263 c!13258) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(assert (= (and d!21035 res!43175) b!83455))

(assert (= (and b!83455 res!43174) b!83456))

(declare-fun m!86539 () Bool)

(assert (=> d!21035 m!86539))

(declare-fun m!86541 () Bool)

(assert (=> d!21035 m!86541))

(declare-fun m!86543 () Bool)

(assert (=> d!21035 m!86543))

(declare-fun m!86545 () Bool)

(assert (=> d!21035 m!86545))

(declare-fun m!86547 () Bool)

(assert (=> b!83455 m!86547))

(declare-fun m!86549 () Bool)

(assert (=> b!83456 m!86549))

(assert (=> bm!7792 d!21035))

(declare-fun d!21037 () Bool)

(assert (=> d!21037 (= (+!105 (getCurrentListMap!429 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784)) (getCurrentListMap!429 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) lt!38982 lt!38784 (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39256 () Unit!2413)

(declare-fun choose!494 (array!3997 array!3999 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3017 V!3017 V!3017 Int) Unit!2413)

(assert (=> d!21037 (= lt!39256 (choose!494 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) lt!38982 (zeroValue!2210 newMap!16) lt!38784 (minValue!2210 newMap!16) (defaultEntry!2316 newMap!16)))))

(assert (=> d!21037 (validMask!0 (mask!6334 newMap!16))))

(assert (=> d!21037 (= (lemmaChangeZeroKeyThenAddPairToListMap!30 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) lt!38982 (zeroValue!2210 newMap!16) lt!38784 (minValue!2210 newMap!16) (defaultEntry!2316 newMap!16)) lt!39256)))

(declare-fun bs!3526 () Bool)

(assert (= bs!3526 d!21037))

(assert (=> bs!3526 m!85945))

(declare-fun m!86551 () Bool)

(assert (=> bs!3526 m!86551))

(declare-fun m!86553 () Bool)

(assert (=> bs!3526 m!86553))

(assert (=> bs!3526 m!85945))

(declare-fun m!86555 () Bool)

(assert (=> bs!3526 m!86555))

(assert (=> bs!3526 m!86223))

(assert (=> b!83023 d!21037))

(declare-fun d!21039 () Bool)

(declare-fun e!54474 () Bool)

(assert (=> d!21039 e!54474))

(declare-fun res!43176 () Bool)

(assert (=> d!21039 (=> res!43176 e!54474)))

(declare-fun lt!39257 () Bool)

(assert (=> d!21039 (= res!43176 (not lt!39257))))

(declare-fun lt!39260 () Bool)

(assert (=> d!21039 (= lt!39257 lt!39260)))

(declare-fun lt!39259 () Unit!2413)

(declare-fun e!54473 () Unit!2413)

(assert (=> d!21039 (= lt!39259 e!54473)))

(declare-fun c!13327 () Bool)

(assert (=> d!21039 (= c!13327 lt!39260)))

(assert (=> d!21039 (= lt!39260 (containsKey!143 (toList!734 call!7756) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))

(assert (=> d!21039 (= (contains!744 call!7756 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) lt!39257)))

(declare-fun b!83457 () Bool)

(declare-fun lt!39258 () Unit!2413)

(assert (=> b!83457 (= e!54473 lt!39258)))

(assert (=> b!83457 (= lt!39258 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 call!7756) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))

(assert (=> b!83457 (isDefined!92 (getValueByKey!140 (toList!734 call!7756) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))

(declare-fun b!83458 () Bool)

(declare-fun Unit!2432 () Unit!2413)

(assert (=> b!83458 (= e!54473 Unit!2432)))

(declare-fun b!83459 () Bool)

(assert (=> b!83459 (= e!54474 (isDefined!92 (getValueByKey!140 (toList!734 call!7756) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355))))))

(assert (= (and d!21039 c!13327) b!83457))

(assert (= (and d!21039 (not c!13327)) b!83458))

(assert (= (and d!21039 (not res!43176)) b!83459))

(assert (=> d!21039 m!85721))

(declare-fun m!86557 () Bool)

(assert (=> d!21039 m!86557))

(assert (=> b!83457 m!85721))

(declare-fun m!86559 () Bool)

(assert (=> b!83457 m!86559))

(assert (=> b!83457 m!85721))

(declare-fun m!86561 () Bool)

(assert (=> b!83457 m!86561))

(assert (=> b!83457 m!86561))

(declare-fun m!86563 () Bool)

(assert (=> b!83457 m!86563))

(assert (=> b!83459 m!85721))

(assert (=> b!83459 m!86561))

(assert (=> b!83459 m!86561))

(assert (=> b!83459 m!86563))

(assert (=> b!83059 d!21039))

(declare-fun b!83460 () Bool)

(declare-fun e!54478 () Bool)

(declare-fun call!7832 () Bool)

(assert (=> b!83460 (= e!54478 call!7832)))

(declare-fun b!83461 () Bool)

(assert (=> b!83461 (= e!54478 call!7832)))

(declare-fun b!83462 () Bool)

(declare-fun e!54477 () Bool)

(declare-fun e!54476 () Bool)

(assert (=> b!83462 (= e!54477 e!54476)))

(declare-fun res!43178 () Bool)

(assert (=> b!83462 (=> (not res!43178) (not e!54476))))

(declare-fun e!54475 () Bool)

(assert (=> b!83462 (= res!43178 (not e!54475))))

(declare-fun res!43177 () Bool)

(assert (=> b!83462 (=> (not res!43177) (not e!54475))))

(assert (=> b!83462 (= res!43177 (validKeyInArray!0 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!21041 () Bool)

(declare-fun res!43179 () Bool)

(assert (=> d!21041 (=> res!43179 e!54477)))

(assert (=> d!21041 (= res!43179 (bvsge #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))))))

(assert (=> d!21041 (= (arrayNoDuplicates!0 (_keys!3984 newMap!16) #b00000000000000000000000000000000 Nil!1502) e!54477)))

(declare-fun b!83463 () Bool)

(assert (=> b!83463 (= e!54475 (contains!745 Nil!1502 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!83464 () Bool)

(assert (=> b!83464 (= e!54476 e!54478)))

(declare-fun c!13328 () Bool)

(assert (=> b!83464 (= c!13328 (validKeyInArray!0 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!7829 () Bool)

(assert (=> bm!7829 (= call!7832 (arrayNoDuplicates!0 (_keys!3984 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!13328 (Cons!1501 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000) Nil!1502) Nil!1502)))))

(assert (= (and d!21041 (not res!43179)) b!83462))

(assert (= (and b!83462 res!43177) b!83463))

(assert (= (and b!83462 res!43178) b!83464))

(assert (= (and b!83464 c!13328) b!83461))

(assert (= (and b!83464 (not c!13328)) b!83460))

(assert (= (or b!83461 b!83460) bm!7829))

(assert (=> b!83462 m!86211))

(assert (=> b!83462 m!86211))

(assert (=> b!83462 m!86213))

(assert (=> b!83463 m!86211))

(assert (=> b!83463 m!86211))

(declare-fun m!86565 () Bool)

(assert (=> b!83463 m!86565))

(assert (=> b!83464 m!86211))

(assert (=> b!83464 m!86211))

(assert (=> b!83464 m!86213))

(assert (=> bm!7829 m!86211))

(declare-fun m!86567 () Bool)

(assert (=> bm!7829 m!86567))

(assert (=> b!82929 d!21041))

(declare-fun d!21043 () Bool)

(declare-fun e!54479 () Bool)

(assert (=> d!21043 e!54479))

(declare-fun res!43181 () Bool)

(assert (=> d!21043 (=> (not res!43181) (not e!54479))))

(declare-fun lt!39262 () ListLongMap!1437)

(assert (=> d!21043 (= res!43181 (contains!744 lt!39262 (_1!1102 (tuple2!2183 lt!39033 lt!39035))))))

(declare-fun lt!39264 () List!1504)

(assert (=> d!21043 (= lt!39262 (ListLongMap!1438 lt!39264))))

(declare-fun lt!39261 () Unit!2413)

(declare-fun lt!39263 () Unit!2413)

(assert (=> d!21043 (= lt!39261 lt!39263)))

(assert (=> d!21043 (= (getValueByKey!140 lt!39264 (_1!1102 (tuple2!2183 lt!39033 lt!39035))) (Some!145 (_2!1102 (tuple2!2183 lt!39033 lt!39035))))))

(assert (=> d!21043 (= lt!39263 (lemmaContainsTupThenGetReturnValue!57 lt!39264 (_1!1102 (tuple2!2183 lt!39033 lt!39035)) (_2!1102 (tuple2!2183 lt!39033 lt!39035))))))

(assert (=> d!21043 (= lt!39264 (insertStrictlySorted!60 (toList!734 lt!39032) (_1!1102 (tuple2!2183 lt!39033 lt!39035)) (_2!1102 (tuple2!2183 lt!39033 lt!39035))))))

(assert (=> d!21043 (= (+!105 lt!39032 (tuple2!2183 lt!39033 lt!39035)) lt!39262)))

(declare-fun b!83465 () Bool)

(declare-fun res!43180 () Bool)

(assert (=> b!83465 (=> (not res!43180) (not e!54479))))

(assert (=> b!83465 (= res!43180 (= (getValueByKey!140 (toList!734 lt!39262) (_1!1102 (tuple2!2183 lt!39033 lt!39035))) (Some!145 (_2!1102 (tuple2!2183 lt!39033 lt!39035)))))))

(declare-fun b!83466 () Bool)

(assert (=> b!83466 (= e!54479 (contains!746 (toList!734 lt!39262) (tuple2!2183 lt!39033 lt!39035)))))

(assert (= (and d!21043 res!43181) b!83465))

(assert (= (and b!83465 res!43180) b!83466))

(declare-fun m!86569 () Bool)

(assert (=> d!21043 m!86569))

(declare-fun m!86571 () Bool)

(assert (=> d!21043 m!86571))

(declare-fun m!86573 () Bool)

(assert (=> d!21043 m!86573))

(declare-fun m!86575 () Bool)

(assert (=> d!21043 m!86575))

(declare-fun m!86577 () Bool)

(assert (=> b!83465 m!86577))

(declare-fun m!86579 () Bool)

(assert (=> b!83466 m!86579))

(assert (=> b!83132 d!21043))

(assert (=> b!83132 d!21001))

(declare-fun d!21045 () Bool)

(declare-fun e!54481 () Bool)

(assert (=> d!21045 e!54481))

(declare-fun res!43182 () Bool)

(assert (=> d!21045 (=> res!43182 e!54481)))

(declare-fun lt!39265 () Bool)

(assert (=> d!21045 (= res!43182 (not lt!39265))))

(declare-fun lt!39268 () Bool)

(assert (=> d!21045 (= lt!39265 lt!39268)))

(declare-fun lt!39267 () Unit!2413)

(declare-fun e!54480 () Unit!2413)

(assert (=> d!21045 (= lt!39267 e!54480)))

(declare-fun c!13329 () Bool)

(assert (=> d!21045 (= c!13329 lt!39268)))

(assert (=> d!21045 (= lt!39268 (containsKey!143 (toList!734 (+!105 lt!39032 (tuple2!2183 lt!39033 lt!39035))) lt!39034))))

(assert (=> d!21045 (= (contains!744 (+!105 lt!39032 (tuple2!2183 lt!39033 lt!39035)) lt!39034) lt!39265)))

(declare-fun b!83467 () Bool)

(declare-fun lt!39266 () Unit!2413)

(assert (=> b!83467 (= e!54480 lt!39266)))

(assert (=> b!83467 (= lt!39266 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 (+!105 lt!39032 (tuple2!2183 lt!39033 lt!39035))) lt!39034))))

(assert (=> b!83467 (isDefined!92 (getValueByKey!140 (toList!734 (+!105 lt!39032 (tuple2!2183 lt!39033 lt!39035))) lt!39034))))

(declare-fun b!83468 () Bool)

(declare-fun Unit!2433 () Unit!2413)

(assert (=> b!83468 (= e!54480 Unit!2433)))

(declare-fun b!83469 () Bool)

(assert (=> b!83469 (= e!54481 (isDefined!92 (getValueByKey!140 (toList!734 (+!105 lt!39032 (tuple2!2183 lt!39033 lt!39035))) lt!39034)))))

(assert (= (and d!21045 c!13329) b!83467))

(assert (= (and d!21045 (not c!13329)) b!83468))

(assert (= (and d!21045 (not res!43182)) b!83469))

(declare-fun m!86581 () Bool)

(assert (=> d!21045 m!86581))

(declare-fun m!86583 () Bool)

(assert (=> b!83467 m!86583))

(declare-fun m!86585 () Bool)

(assert (=> b!83467 m!86585))

(assert (=> b!83467 m!86585))

(declare-fun m!86587 () Bool)

(assert (=> b!83467 m!86587))

(assert (=> b!83469 m!86585))

(assert (=> b!83469 m!86585))

(assert (=> b!83469 m!86587))

(assert (=> b!83132 d!21045))

(declare-fun d!21047 () Bool)

(declare-fun e!54482 () Bool)

(assert (=> d!21047 e!54482))

(declare-fun res!43184 () Bool)

(assert (=> d!21047 (=> (not res!43184) (not e!54482))))

(declare-fun lt!39270 () ListLongMap!1437)

(assert (=> d!21047 (= res!43184 (contains!744 lt!39270 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!39272 () List!1504)

(assert (=> d!21047 (= lt!39270 (ListLongMap!1438 lt!39272))))

(declare-fun lt!39269 () Unit!2413)

(declare-fun lt!39271 () Unit!2413)

(assert (=> d!21047 (= lt!39269 lt!39271)))

(assert (=> d!21047 (= (getValueByKey!140 lt!39272 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!145 (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!21047 (= lt!39271 (lemmaContainsTupThenGetReturnValue!57 lt!39272 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!21047 (= lt!39272 (insertStrictlySorted!60 (toList!734 call!7780) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!21047 (= (+!105 call!7780 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!39270)))

(declare-fun b!83470 () Bool)

(declare-fun res!43183 () Bool)

(assert (=> b!83470 (=> (not res!43183) (not e!54482))))

(assert (=> b!83470 (= res!43183 (= (getValueByKey!140 (toList!734 lt!39270) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!145 (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!83471 () Bool)

(assert (=> b!83471 (= e!54482 (contains!746 (toList!734 lt!39270) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!21047 res!43184) b!83470))

(assert (= (and b!83470 res!43183) b!83471))

(declare-fun m!86589 () Bool)

(assert (=> d!21047 m!86589))

(declare-fun m!86591 () Bool)

(assert (=> d!21047 m!86591))

(declare-fun m!86593 () Bool)

(assert (=> d!21047 m!86593))

(declare-fun m!86595 () Bool)

(assert (=> d!21047 m!86595))

(declare-fun m!86597 () Bool)

(assert (=> b!83470 m!86597))

(declare-fun m!86599 () Bool)

(assert (=> b!83471 m!86599))

(assert (=> b!83132 d!21047))

(declare-fun d!21049 () Bool)

(assert (=> d!21049 (not (contains!744 (+!105 lt!39032 (tuple2!2183 lt!39033 lt!39035)) lt!39034))))

(declare-fun lt!39275 () Unit!2413)

(declare-fun choose!495 (ListLongMap!1437 (_ BitVec 64) V!3017 (_ BitVec 64)) Unit!2413)

(assert (=> d!21049 (= lt!39275 (choose!495 lt!39032 lt!39033 lt!39035 lt!39034))))

(declare-fun e!54485 () Bool)

(assert (=> d!21049 e!54485))

(declare-fun res!43187 () Bool)

(assert (=> d!21049 (=> (not res!43187) (not e!54485))))

(assert (=> d!21049 (= res!43187 (not (contains!744 lt!39032 lt!39034)))))

(assert (=> d!21049 (= (addStillNotContains!32 lt!39032 lt!39033 lt!39035 lt!39034) lt!39275)))

(declare-fun b!83475 () Bool)

(assert (=> b!83475 (= e!54485 (not (= lt!39033 lt!39034)))))

(assert (= (and d!21049 res!43187) b!83475))

(assert (=> d!21049 m!86065))

(assert (=> d!21049 m!86065))

(assert (=> d!21049 m!86067))

(declare-fun m!86601 () Bool)

(assert (=> d!21049 m!86601))

(declare-fun m!86603 () Bool)

(assert (=> d!21049 m!86603))

(assert (=> b!83132 d!21049))

(declare-fun d!21051 () Bool)

(assert (=> d!21051 (= (inRange!0 (ite c!13217 (ite c!13216 (index!3081 lt!38984) (ite c!13211 (index!3080 lt!38981) (index!3083 lt!38981))) (ite c!13213 (index!3081 lt!38969) (ite c!13223 (index!3080 lt!38963) (index!3083 lt!38963)))) (mask!6334 newMap!16)) (and (bvsge (ite c!13217 (ite c!13216 (index!3081 lt!38984) (ite c!13211 (index!3080 lt!38981) (index!3083 lt!38981))) (ite c!13213 (index!3081 lt!38969) (ite c!13223 (index!3080 lt!38963) (index!3083 lt!38963)))) #b00000000000000000000000000000000) (bvslt (ite c!13217 (ite c!13216 (index!3081 lt!38984) (ite c!13211 (index!3080 lt!38981) (index!3083 lt!38981))) (ite c!13213 (index!3081 lt!38969) (ite c!13223 (index!3080 lt!38963) (index!3083 lt!38963)))) (bvadd (mask!6334 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!7760 d!21051))

(assert (=> bm!7754 d!20947))

(declare-fun d!21053 () Bool)

(assert (=> d!21053 (= (apply!81 lt!39036 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1201 (getValueByKey!140 (toList!734 lt!39036) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!3527 () Bool)

(assert (= bs!3527 d!21053))

(assert (=> bs!3527 m!85989))

(declare-fun m!86605 () Bool)

(assert (=> bs!3527 m!86605))

(assert (=> bs!3527 m!86605))

(declare-fun m!86607 () Bool)

(assert (=> bs!3527 m!86607))

(assert (=> b!83136 d!21053))

(assert (=> b!83136 d!21001))

(declare-fun d!21055 () Bool)

(assert (=> d!21055 (= (+!105 (getCurrentListMap!429 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784)) (getCurrentListMap!429 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) lt!38985 (zeroValue!2210 newMap!16) lt!38784 #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39278 () Unit!2413)

(declare-fun choose!496 (array!3997 array!3999 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3017 V!3017 V!3017 Int) Unit!2413)

(assert (=> d!21055 (= lt!39278 (choose!496 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) lt!38985 (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) lt!38784 (defaultEntry!2316 newMap!16)))))

(assert (=> d!21055 (validMask!0 (mask!6334 newMap!16))))

(assert (=> d!21055 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!30 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) lt!38985 (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) lt!38784 (defaultEntry!2316 newMap!16)) lt!39278)))

(declare-fun bs!3528 () Bool)

(assert (= bs!3528 d!21055))

(assert (=> bs!3528 m!86223))

(declare-fun m!86609 () Bool)

(assert (=> bs!3528 m!86609))

(assert (=> bs!3528 m!85945))

(declare-fun m!86611 () Bool)

(assert (=> bs!3528 m!86611))

(assert (=> bs!3528 m!85945))

(declare-fun m!86613 () Bool)

(assert (=> bs!3528 m!86613))

(assert (=> b!83045 d!21055))

(declare-fun d!21057 () Bool)

(assert (=> d!21057 (= (apply!81 lt!39113 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1201 (getValueByKey!140 (toList!734 lt!39113) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3529 () Bool)

(assert (= bs!3529 d!21057))

(declare-fun m!86615 () Bool)

(assert (=> bs!3529 m!86615))

(assert (=> bs!3529 m!86615))

(declare-fun m!86617 () Bool)

(assert (=> bs!3529 m!86617))

(assert (=> b!83200 d!21057))

(declare-fun d!21059 () Bool)

(assert (=> d!21059 (= (validKeyInArray!0 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) (and (not (= (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!83089 d!21059))

(declare-fun d!21061 () Bool)

(declare-fun e!54487 () Bool)

(assert (=> d!21061 e!54487))

(declare-fun res!43188 () Bool)

(assert (=> d!21061 (=> res!43188 e!54487)))

(declare-fun lt!39279 () Bool)

(assert (=> d!21061 (= res!43188 (not lt!39279))))

(declare-fun lt!39282 () Bool)

(assert (=> d!21061 (= lt!39279 lt!39282)))

(declare-fun lt!39281 () Unit!2413)

(declare-fun e!54486 () Unit!2413)

(assert (=> d!21061 (= lt!39281 e!54486)))

(declare-fun c!13330 () Bool)

(assert (=> d!21061 (= c!13330 lt!39282)))

(assert (=> d!21061 (= lt!39282 (containsKey!143 (toList!734 e!54228) (ite c!13217 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (select (arr!1904 (_keys!3984 newMap!16)) (index!3081 lt!38961)))))))

(assert (=> d!21061 (= (contains!744 e!54228 (ite c!13217 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (select (arr!1904 (_keys!3984 newMap!16)) (index!3081 lt!38961)))) lt!39279)))

(declare-fun b!83476 () Bool)

(declare-fun lt!39280 () Unit!2413)

(assert (=> b!83476 (= e!54486 lt!39280)))

(assert (=> b!83476 (= lt!39280 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 e!54228) (ite c!13217 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (select (arr!1904 (_keys!3984 newMap!16)) (index!3081 lt!38961)))))))

(assert (=> b!83476 (isDefined!92 (getValueByKey!140 (toList!734 e!54228) (ite c!13217 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (select (arr!1904 (_keys!3984 newMap!16)) (index!3081 lt!38961)))))))

(declare-fun b!83477 () Bool)

(declare-fun Unit!2434 () Unit!2413)

(assert (=> b!83477 (= e!54486 Unit!2434)))

(declare-fun b!83478 () Bool)

(assert (=> b!83478 (= e!54487 (isDefined!92 (getValueByKey!140 (toList!734 e!54228) (ite c!13217 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (select (arr!1904 (_keys!3984 newMap!16)) (index!3081 lt!38961))))))))

(assert (= (and d!21061 c!13330) b!83476))

(assert (= (and d!21061 (not c!13330)) b!83477))

(assert (= (and d!21061 (not res!43188)) b!83478))

(declare-fun m!86619 () Bool)

(assert (=> d!21061 m!86619))

(declare-fun m!86621 () Bool)

(assert (=> b!83476 m!86621))

(declare-fun m!86623 () Bool)

(assert (=> b!83476 m!86623))

(assert (=> b!83476 m!86623))

(declare-fun m!86625 () Bool)

(assert (=> b!83476 m!86625))

(assert (=> b!83478 m!86623))

(assert (=> b!83478 m!86623))

(assert (=> b!83478 m!86625))

(assert (=> bm!7750 d!21061))

(assert (=> b!83129 d!21007))

(declare-fun d!21063 () Bool)

(declare-fun e!54489 () Bool)

(assert (=> d!21063 e!54489))

(declare-fun res!43189 () Bool)

(assert (=> d!21063 (=> res!43189 e!54489)))

(declare-fun lt!39283 () Bool)

(assert (=> d!21063 (= res!43189 (not lt!39283))))

(declare-fun lt!39286 () Bool)

(assert (=> d!21063 (= lt!39283 lt!39286)))

(declare-fun lt!39285 () Unit!2413)

(declare-fun e!54488 () Unit!2413)

(assert (=> d!21063 (= lt!39285 e!54488)))

(declare-fun c!13331 () Bool)

(assert (=> d!21063 (= c!13331 lt!39286)))

(assert (=> d!21063 (= lt!39286 (containsKey!143 (toList!734 lt!39036) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!21063 (= (contains!744 lt!39036 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!39283)))

(declare-fun b!83479 () Bool)

(declare-fun lt!39284 () Unit!2413)

(assert (=> b!83479 (= e!54488 lt!39284)))

(assert (=> b!83479 (= lt!39284 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 lt!39036) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!83479 (isDefined!92 (getValueByKey!140 (toList!734 lt!39036) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!83480 () Bool)

(declare-fun Unit!2435 () Unit!2413)

(assert (=> b!83480 (= e!54488 Unit!2435)))

(declare-fun b!83481 () Bool)

(assert (=> b!83481 (= e!54489 (isDefined!92 (getValueByKey!140 (toList!734 lt!39036) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!21063 c!13331) b!83479))

(assert (= (and d!21063 (not c!13331)) b!83480))

(assert (= (and d!21063 (not res!43189)) b!83481))

(assert (=> d!21063 m!85989))

(declare-fun m!86627 () Bool)

(assert (=> d!21063 m!86627))

(assert (=> b!83479 m!85989))

(declare-fun m!86629 () Bool)

(assert (=> b!83479 m!86629))

(assert (=> b!83479 m!85989))

(assert (=> b!83479 m!86605))

(assert (=> b!83479 m!86605))

(declare-fun m!86631 () Bool)

(assert (=> b!83479 m!86631))

(assert (=> b!83481 m!85989))

(assert (=> b!83481 m!86605))

(assert (=> b!83481 m!86605))

(assert (=> b!83481 m!86631))

(assert (=> b!83127 d!21063))

(declare-fun d!21065 () Bool)

(declare-fun lt!39287 () Bool)

(assert (=> d!21065 (= lt!39287 (select (content!89 (toList!734 lt!39004)) lt!38779))))

(declare-fun e!54490 () Bool)

(assert (=> d!21065 (= lt!39287 e!54490)))

(declare-fun res!43191 () Bool)

(assert (=> d!21065 (=> (not res!43191) (not e!54490))))

(assert (=> d!21065 (= res!43191 ((_ is Cons!1500) (toList!734 lt!39004)))))

(assert (=> d!21065 (= (contains!746 (toList!734 lt!39004) lt!38779) lt!39287)))

(declare-fun b!83482 () Bool)

(declare-fun e!54491 () Bool)

(assert (=> b!83482 (= e!54490 e!54491)))

(declare-fun res!43190 () Bool)

(assert (=> b!83482 (=> res!43190 e!54491)))

(assert (=> b!83482 (= res!43190 (= (h!2090 (toList!734 lt!39004)) lt!38779))))

(declare-fun b!83483 () Bool)

(assert (=> b!83483 (= e!54491 (contains!746 (t!5196 (toList!734 lt!39004)) lt!38779))))

(assert (= (and d!21065 res!43191) b!83482))

(assert (= (and b!83482 (not res!43190)) b!83483))

(declare-fun m!86633 () Bool)

(assert (=> d!21065 m!86633))

(declare-fun m!86635 () Bool)

(assert (=> d!21065 m!86635))

(declare-fun m!86637 () Bool)

(assert (=> b!83483 m!86637))

(assert (=> b!83097 d!21065))

(declare-fun b!83484 () Bool)

(declare-fun e!54495 () ListLongMap!1437)

(assert (=> b!83484 (= e!54495 (ListLongMap!1438 Nil!1501))))

(declare-fun b!83485 () Bool)

(declare-fun e!54498 () Bool)

(declare-fun e!54497 () Bool)

(assert (=> b!83485 (= e!54498 e!54497)))

(assert (=> b!83485 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2147 (_keys!3984 (v!2632 (underlying!289 thiss!992))))))))

(declare-fun lt!39292 () ListLongMap!1437)

(declare-fun res!43195 () Bool)

(assert (=> b!83485 (= res!43195 (contains!744 lt!39292 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!83485 (=> (not res!43195) (not e!54497))))

(declare-fun b!83486 () Bool)

(declare-fun e!54496 () Bool)

(assert (=> b!83486 (= e!54498 e!54496)))

(declare-fun c!13334 () Bool)

(assert (=> b!83486 (= c!13334 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2147 (_keys!3984 (v!2632 (underlying!289 thiss!992))))))))

(declare-fun b!83487 () Bool)

(declare-fun e!54493 () ListLongMap!1437)

(assert (=> b!83487 (= e!54495 e!54493)))

(declare-fun c!13335 () Bool)

(assert (=> b!83487 (= c!13335 (validKeyInArray!0 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!83488 () Bool)

(declare-fun call!7833 () ListLongMap!1437)

(assert (=> b!83488 (= e!54493 call!7833)))

(declare-fun bm!7830 () Bool)

(assert (=> bm!7830 (= call!7833 (getCurrentListMapNoExtraKeys!70 (_keys!3984 (v!2632 (underlying!289 thiss!992))) (_values!2299 (v!2632 (underlying!289 thiss!992))) (mask!6334 (v!2632 (underlying!289 thiss!992))) (extraKeys!2159 (v!2632 (underlying!289 thiss!992))) (zeroValue!2210 (v!2632 (underlying!289 thiss!992))) (minValue!2210 (v!2632 (underlying!289 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2316 (v!2632 (underlying!289 thiss!992)))))))

(declare-fun b!83489 () Bool)

(declare-fun res!43193 () Bool)

(declare-fun e!54492 () Bool)

(assert (=> b!83489 (=> (not res!43193) (not e!54492))))

(assert (=> b!83489 (= res!43193 (not (contains!744 lt!39292 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!83490 () Bool)

(declare-fun lt!39293 () Unit!2413)

(declare-fun lt!39294 () Unit!2413)

(assert (=> b!83490 (= lt!39293 lt!39294)))

(declare-fun lt!39290 () (_ BitVec 64))

(declare-fun lt!39289 () (_ BitVec 64))

(declare-fun lt!39288 () ListLongMap!1437)

(declare-fun lt!39291 () V!3017)

(assert (=> b!83490 (not (contains!744 (+!105 lt!39288 (tuple2!2183 lt!39289 lt!39291)) lt!39290))))

(assert (=> b!83490 (= lt!39294 (addStillNotContains!32 lt!39288 lt!39289 lt!39291 lt!39290))))

(assert (=> b!83490 (= lt!39290 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!83490 (= lt!39291 (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!83490 (= lt!39289 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (=> b!83490 (= lt!39288 call!7833)))

(assert (=> b!83490 (= e!54493 (+!105 call!7833 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!83491 () Bool)

(declare-fun e!54494 () Bool)

(assert (=> b!83491 (= e!54494 (validKeyInArray!0 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!83491 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!83492 () Bool)

(assert (=> b!83492 (= e!54492 e!54498)))

(declare-fun c!13333 () Bool)

(assert (=> b!83492 (= c!13333 e!54494)))

(declare-fun res!43194 () Bool)

(assert (=> b!83492 (=> (not res!43194) (not e!54494))))

(assert (=> b!83492 (= res!43194 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2147 (_keys!3984 (v!2632 (underlying!289 thiss!992))))))))

(declare-fun b!83493 () Bool)

(assert (=> b!83493 (= e!54496 (= lt!39292 (getCurrentListMapNoExtraKeys!70 (_keys!3984 (v!2632 (underlying!289 thiss!992))) (_values!2299 (v!2632 (underlying!289 thiss!992))) (mask!6334 (v!2632 (underlying!289 thiss!992))) (extraKeys!2159 (v!2632 (underlying!289 thiss!992))) (zeroValue!2210 (v!2632 (underlying!289 thiss!992))) (minValue!2210 (v!2632 (underlying!289 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))))))))

(declare-fun b!83494 () Bool)

(assert (=> b!83494 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2147 (_keys!3984 (v!2632 (underlying!289 thiss!992))))))))

(assert (=> b!83494 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2148 (_values!2299 (v!2632 (underlying!289 thiss!992))))))))

(assert (=> b!83494 (= e!54497 (= (apply!81 lt!39292 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!21067 () Bool)

(assert (=> d!21067 e!54492))

(declare-fun res!43192 () Bool)

(assert (=> d!21067 (=> (not res!43192) (not e!54492))))

(assert (=> d!21067 (= res!43192 (not (contains!744 lt!39292 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!21067 (= lt!39292 e!54495)))

(declare-fun c!13332 () Bool)

(assert (=> d!21067 (= c!13332 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2147 (_keys!3984 (v!2632 (underlying!289 thiss!992))))))))

(assert (=> d!21067 (validMask!0 (mask!6334 (v!2632 (underlying!289 thiss!992))))))

(assert (=> d!21067 (= (getCurrentListMapNoExtraKeys!70 (_keys!3984 (v!2632 (underlying!289 thiss!992))) (_values!2299 (v!2632 (underlying!289 thiss!992))) (mask!6334 (v!2632 (underlying!289 thiss!992))) (extraKeys!2159 (v!2632 (underlying!289 thiss!992))) (zeroValue!2210 (v!2632 (underlying!289 thiss!992))) (minValue!2210 (v!2632 (underlying!289 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2316 (v!2632 (underlying!289 thiss!992)))) lt!39292)))

(declare-fun b!83495 () Bool)

(assert (=> b!83495 (= e!54496 (isEmpty!338 lt!39292))))

(assert (= (and d!21067 c!13332) b!83484))

(assert (= (and d!21067 (not c!13332)) b!83487))

(assert (= (and b!83487 c!13335) b!83490))

(assert (= (and b!83487 (not c!13335)) b!83488))

(assert (= (or b!83490 b!83488) bm!7830))

(assert (= (and d!21067 res!43192) b!83489))

(assert (= (and b!83489 res!43193) b!83492))

(assert (= (and b!83492 res!43194) b!83491))

(assert (= (and b!83492 c!13333) b!83485))

(assert (= (and b!83492 (not c!13333)) b!83486))

(assert (= (and b!83485 res!43195) b!83494))

(assert (= (and b!83486 c!13334) b!83493))

(assert (= (and b!83486 (not c!13334)) b!83495))

(declare-fun b_lambda!3715 () Bool)

(assert (=> (not b_lambda!3715) (not b!83490)))

(assert (=> b!83490 t!5193))

(declare-fun b_and!5081 () Bool)

(assert (= b_and!5077 (and (=> t!5193 result!2875) b_and!5081)))

(assert (=> b!83490 t!5195))

(declare-fun b_and!5083 () Bool)

(assert (= b_and!5079 (and (=> t!5195 result!2879) b_and!5083)))

(declare-fun b_lambda!3717 () Bool)

(assert (=> (not b_lambda!3717) (not b!83494)))

(assert (=> b!83494 t!5193))

(declare-fun b_and!5085 () Bool)

(assert (= b_and!5081 (and (=> t!5193 result!2875) b_and!5085)))

(assert (=> b!83494 t!5195))

(declare-fun b_and!5087 () Bool)

(assert (= b_and!5083 (and (=> t!5195 result!2879) b_and!5087)))

(assert (=> b!83485 m!86271))

(assert (=> b!83485 m!86271))

(declare-fun m!86639 () Bool)

(assert (=> b!83485 m!86639))

(declare-fun m!86641 () Bool)

(assert (=> b!83495 m!86641))

(declare-fun m!86643 () Bool)

(assert (=> b!83489 m!86643))

(declare-fun m!86645 () Bool)

(assert (=> bm!7830 m!86645))

(assert (=> b!83493 m!86645))

(declare-fun m!86647 () Bool)

(assert (=> d!21067 m!86647))

(assert (=> d!21067 m!85763))

(assert (=> b!83491 m!86271))

(assert (=> b!83491 m!86271))

(declare-fun m!86649 () Bool)

(assert (=> b!83491 m!86649))

(assert (=> b!83494 m!86271))

(declare-fun m!86651 () Bool)

(assert (=> b!83494 m!86651))

(assert (=> b!83494 m!86271))

(declare-fun m!86653 () Bool)

(assert (=> b!83494 m!86653))

(assert (=> b!83494 m!85725))

(assert (=> b!83494 m!86653))

(assert (=> b!83494 m!85725))

(declare-fun m!86655 () Bool)

(assert (=> b!83494 m!86655))

(assert (=> b!83487 m!86271))

(assert (=> b!83487 m!86271))

(assert (=> b!83487 m!86649))

(declare-fun m!86657 () Bool)

(assert (=> b!83490 m!86657))

(assert (=> b!83490 m!86657))

(declare-fun m!86659 () Bool)

(assert (=> b!83490 m!86659))

(assert (=> b!83490 m!86271))

(declare-fun m!86661 () Bool)

(assert (=> b!83490 m!86661))

(assert (=> b!83490 m!85725))

(assert (=> b!83490 m!86653))

(assert (=> b!83490 m!85725))

(assert (=> b!83490 m!86655))

(declare-fun m!86663 () Bool)

(assert (=> b!83490 m!86663))

(assert (=> b!83490 m!86653))

(assert (=> bm!7777 d!21067))

(declare-fun d!21069 () Bool)

(declare-fun e!54500 () Bool)

(assert (=> d!21069 e!54500))

(declare-fun res!43196 () Bool)

(assert (=> d!21069 (=> res!43196 e!54500)))

(declare-fun lt!39295 () Bool)

(assert (=> d!21069 (= res!43196 (not lt!39295))))

(declare-fun lt!39298 () Bool)

(assert (=> d!21069 (= lt!39295 lt!39298)))

(declare-fun lt!39297 () Unit!2413)

(declare-fun e!54499 () Unit!2413)

(assert (=> d!21069 (= lt!39297 e!54499)))

(declare-fun c!13336 () Bool)

(assert (=> d!21069 (= c!13336 lt!39298)))

(assert (=> d!21069 (= lt!39298 (containsKey!143 (toList!734 lt!39049) (_1!1102 lt!38772)))))

(assert (=> d!21069 (= (contains!744 lt!39049 (_1!1102 lt!38772)) lt!39295)))

(declare-fun b!83496 () Bool)

(declare-fun lt!39296 () Unit!2413)

(assert (=> b!83496 (= e!54499 lt!39296)))

(assert (=> b!83496 (= lt!39296 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 lt!39049) (_1!1102 lt!38772)))))

(assert (=> b!83496 (isDefined!92 (getValueByKey!140 (toList!734 lt!39049) (_1!1102 lt!38772)))))

(declare-fun b!83497 () Bool)

(declare-fun Unit!2436 () Unit!2413)

(assert (=> b!83497 (= e!54499 Unit!2436)))

(declare-fun b!83498 () Bool)

(assert (=> b!83498 (= e!54500 (isDefined!92 (getValueByKey!140 (toList!734 lt!39049) (_1!1102 lt!38772))))))

(assert (= (and d!21069 c!13336) b!83496))

(assert (= (and d!21069 (not c!13336)) b!83497))

(assert (= (and d!21069 (not res!43196)) b!83498))

(declare-fun m!86665 () Bool)

(assert (=> d!21069 m!86665))

(declare-fun m!86667 () Bool)

(assert (=> b!83496 m!86667))

(assert (=> b!83496 m!86115))

(assert (=> b!83496 m!86115))

(declare-fun m!86669 () Bool)

(assert (=> b!83496 m!86669))

(assert (=> b!83498 m!86115))

(assert (=> b!83498 m!86115))

(assert (=> b!83498 m!86669))

(assert (=> d!20933 d!21069))

(declare-fun b!83501 () Bool)

(declare-fun e!54502 () Option!146)

(assert (=> b!83501 (= e!54502 (getValueByKey!140 (t!5196 lt!39051) (_1!1102 lt!38772)))))

(declare-fun d!21071 () Bool)

(declare-fun c!13337 () Bool)

(assert (=> d!21071 (= c!13337 (and ((_ is Cons!1500) lt!39051) (= (_1!1102 (h!2090 lt!39051)) (_1!1102 lt!38772))))))

(declare-fun e!54501 () Option!146)

(assert (=> d!21071 (= (getValueByKey!140 lt!39051 (_1!1102 lt!38772)) e!54501)))

(declare-fun b!83499 () Bool)

(assert (=> b!83499 (= e!54501 (Some!145 (_2!1102 (h!2090 lt!39051))))))

(declare-fun b!83500 () Bool)

(assert (=> b!83500 (= e!54501 e!54502)))

(declare-fun c!13338 () Bool)

(assert (=> b!83500 (= c!13338 (and ((_ is Cons!1500) lt!39051) (not (= (_1!1102 (h!2090 lt!39051)) (_1!1102 lt!38772)))))))

(declare-fun b!83502 () Bool)

(assert (=> b!83502 (= e!54502 None!144)))

(assert (= (and d!21071 c!13337) b!83499))

(assert (= (and d!21071 (not c!13337)) b!83500))

(assert (= (and b!83500 c!13338) b!83501))

(assert (= (and b!83500 (not c!13338)) b!83502))

(declare-fun m!86671 () Bool)

(assert (=> b!83501 m!86671))

(assert (=> d!20933 d!21071))

(declare-fun d!21073 () Bool)

(assert (=> d!21073 (= (getValueByKey!140 lt!39051 (_1!1102 lt!38772)) (Some!145 (_2!1102 lt!38772)))))

(declare-fun lt!39299 () Unit!2413)

(assert (=> d!21073 (= lt!39299 (choose!493 lt!39051 (_1!1102 lt!38772) (_2!1102 lt!38772)))))

(declare-fun e!54503 () Bool)

(assert (=> d!21073 e!54503))

(declare-fun res!43197 () Bool)

(assert (=> d!21073 (=> (not res!43197) (not e!54503))))

(assert (=> d!21073 (= res!43197 (isStrictlySorted!284 lt!39051))))

(assert (=> d!21073 (= (lemmaContainsTupThenGetReturnValue!57 lt!39051 (_1!1102 lt!38772) (_2!1102 lt!38772)) lt!39299)))

(declare-fun b!83503 () Bool)

(declare-fun res!43198 () Bool)

(assert (=> b!83503 (=> (not res!43198) (not e!54503))))

(assert (=> b!83503 (= res!43198 (containsKey!143 lt!39051 (_1!1102 lt!38772)))))

(declare-fun b!83504 () Bool)

(assert (=> b!83504 (= e!54503 (contains!746 lt!39051 (tuple2!2183 (_1!1102 lt!38772) (_2!1102 lt!38772))))))

(assert (= (and d!21073 res!43197) b!83503))

(assert (= (and b!83503 res!43198) b!83504))

(assert (=> d!21073 m!86109))

(declare-fun m!86673 () Bool)

(assert (=> d!21073 m!86673))

(declare-fun m!86675 () Bool)

(assert (=> d!21073 m!86675))

(declare-fun m!86677 () Bool)

(assert (=> b!83503 m!86677))

(declare-fun m!86679 () Bool)

(assert (=> b!83504 m!86679))

(assert (=> d!20933 d!21073))

(declare-fun c!13342 () Bool)

(declare-fun b!83506 () Bool)

(declare-fun e!54504 () List!1504)

(declare-fun c!13339 () Bool)

(assert (=> b!83506 (= e!54504 (ite c!13342 (t!5196 (toList!734 lt!38783)) (ite c!13339 (Cons!1500 (h!2090 (toList!734 lt!38783)) (t!5196 (toList!734 lt!38783))) Nil!1501)))))

(declare-fun bm!7831 () Bool)

(declare-fun c!13340 () Bool)

(declare-fun call!7834 () List!1504)

(assert (=> bm!7831 (= call!7834 ($colon$colon!70 e!54504 (ite c!13340 (h!2090 (toList!734 lt!38783)) (tuple2!2183 (_1!1102 lt!38772) (_2!1102 lt!38772)))))))

(declare-fun c!13341 () Bool)

(assert (=> bm!7831 (= c!13341 c!13340)))

(declare-fun b!83507 () Bool)

(declare-fun e!54508 () List!1504)

(declare-fun call!7836 () List!1504)

(assert (=> b!83507 (= e!54508 call!7836)))

(declare-fun b!83508 () Bool)

(declare-fun e!54506 () List!1504)

(assert (=> b!83508 (= e!54506 call!7834)))

(declare-fun bm!7832 () Bool)

(assert (=> bm!7832 (= call!7836 call!7834)))

(declare-fun bm!7833 () Bool)

(declare-fun call!7835 () List!1504)

(assert (=> bm!7833 (= call!7835 call!7836)))

(declare-fun b!83509 () Bool)

(assert (=> b!83509 (= e!54504 (insertStrictlySorted!60 (t!5196 (toList!734 lt!38783)) (_1!1102 lt!38772) (_2!1102 lt!38772)))))

(declare-fun b!83510 () Bool)

(declare-fun e!54507 () List!1504)

(assert (=> b!83510 (= e!54507 call!7835)))

(declare-fun b!83511 () Bool)

(assert (=> b!83511 (= e!54506 e!54508)))

(assert (=> b!83511 (= c!13342 (and ((_ is Cons!1500) (toList!734 lt!38783)) (= (_1!1102 (h!2090 (toList!734 lt!38783))) (_1!1102 lt!38772))))))

(declare-fun b!83512 () Bool)

(declare-fun e!54505 () Bool)

(declare-fun lt!39300 () List!1504)

(assert (=> b!83512 (= e!54505 (contains!746 lt!39300 (tuple2!2183 (_1!1102 lt!38772) (_2!1102 lt!38772))))))

(declare-fun b!83505 () Bool)

(declare-fun res!43200 () Bool)

(assert (=> b!83505 (=> (not res!43200) (not e!54505))))

(assert (=> b!83505 (= res!43200 (containsKey!143 lt!39300 (_1!1102 lt!38772)))))

(declare-fun d!21075 () Bool)

(assert (=> d!21075 e!54505))

(declare-fun res!43199 () Bool)

(assert (=> d!21075 (=> (not res!43199) (not e!54505))))

(assert (=> d!21075 (= res!43199 (isStrictlySorted!284 lt!39300))))

(assert (=> d!21075 (= lt!39300 e!54506)))

(assert (=> d!21075 (= c!13340 (and ((_ is Cons!1500) (toList!734 lt!38783)) (bvslt (_1!1102 (h!2090 (toList!734 lt!38783))) (_1!1102 lt!38772))))))

(assert (=> d!21075 (isStrictlySorted!284 (toList!734 lt!38783))))

(assert (=> d!21075 (= (insertStrictlySorted!60 (toList!734 lt!38783) (_1!1102 lt!38772) (_2!1102 lt!38772)) lt!39300)))

(declare-fun b!83513 () Bool)

(assert (=> b!83513 (= e!54507 call!7835)))

(declare-fun b!83514 () Bool)

(assert (=> b!83514 (= c!13339 (and ((_ is Cons!1500) (toList!734 lt!38783)) (bvsgt (_1!1102 (h!2090 (toList!734 lt!38783))) (_1!1102 lt!38772))))))

(assert (=> b!83514 (= e!54508 e!54507)))

(assert (= (and d!21075 c!13340) b!83508))

(assert (= (and d!21075 (not c!13340)) b!83511))

(assert (= (and b!83511 c!13342) b!83507))

(assert (= (and b!83511 (not c!13342)) b!83514))

(assert (= (and b!83514 c!13339) b!83510))

(assert (= (and b!83514 (not c!13339)) b!83513))

(assert (= (or b!83510 b!83513) bm!7833))

(assert (= (or b!83507 bm!7833) bm!7832))

(assert (= (or b!83508 bm!7832) bm!7831))

(assert (= (and bm!7831 c!13341) b!83509))

(assert (= (and bm!7831 (not c!13341)) b!83506))

(assert (= (and d!21075 res!43199) b!83505))

(assert (= (and b!83505 res!43200) b!83512))

(declare-fun m!86681 () Bool)

(assert (=> d!21075 m!86681))

(declare-fun m!86683 () Bool)

(assert (=> d!21075 m!86683))

(declare-fun m!86685 () Bool)

(assert (=> b!83509 m!86685))

(declare-fun m!86687 () Bool)

(assert (=> bm!7831 m!86687))

(declare-fun m!86689 () Bool)

(assert (=> b!83505 m!86689))

(declare-fun m!86691 () Bool)

(assert (=> b!83512 m!86691))

(assert (=> d!20933 d!21075))

(declare-fun d!21077 () Bool)

(declare-fun lt!39301 () Bool)

(assert (=> d!21077 (= lt!39301 (select (content!89 (toList!734 lt!39012)) lt!38772))))

(declare-fun e!54509 () Bool)

(assert (=> d!21077 (= lt!39301 e!54509)))

(declare-fun res!43202 () Bool)

(assert (=> d!21077 (=> (not res!43202) (not e!54509))))

(assert (=> d!21077 (= res!43202 ((_ is Cons!1500) (toList!734 lt!39012)))))

(assert (=> d!21077 (= (contains!746 (toList!734 lt!39012) lt!38772) lt!39301)))

(declare-fun b!83515 () Bool)

(declare-fun e!54510 () Bool)

(assert (=> b!83515 (= e!54509 e!54510)))

(declare-fun res!43201 () Bool)

(assert (=> b!83515 (=> res!43201 e!54510)))

(assert (=> b!83515 (= res!43201 (= (h!2090 (toList!734 lt!39012)) lt!38772))))

(declare-fun b!83516 () Bool)

(assert (=> b!83516 (= e!54510 (contains!746 (t!5196 (toList!734 lt!39012)) lt!38772))))

(assert (= (and d!21077 res!43202) b!83515))

(assert (= (and b!83515 (not res!43201)) b!83516))

(declare-fun m!86693 () Bool)

(assert (=> d!21077 m!86693))

(declare-fun m!86695 () Bool)

(assert (=> d!21077 m!86695))

(declare-fun m!86697 () Bool)

(assert (=> b!83516 m!86697))

(assert (=> b!83101 d!21077))

(declare-fun d!21079 () Bool)

(declare-fun lt!39302 () Bool)

(assert (=> d!21079 (= lt!39302 (select (content!89 (toList!734 lt!39008)) lt!38775))))

(declare-fun e!54511 () Bool)

(assert (=> d!21079 (= lt!39302 e!54511)))

(declare-fun res!43204 () Bool)

(assert (=> d!21079 (=> (not res!43204) (not e!54511))))

(assert (=> d!21079 (= res!43204 ((_ is Cons!1500) (toList!734 lt!39008)))))

(assert (=> d!21079 (= (contains!746 (toList!734 lt!39008) lt!38775) lt!39302)))

(declare-fun b!83517 () Bool)

(declare-fun e!54512 () Bool)

(assert (=> b!83517 (= e!54511 e!54512)))

(declare-fun res!43203 () Bool)

(assert (=> b!83517 (=> res!43203 e!54512)))

(assert (=> b!83517 (= res!43203 (= (h!2090 (toList!734 lt!39008)) lt!38775))))

(declare-fun b!83518 () Bool)

(assert (=> b!83518 (= e!54512 (contains!746 (t!5196 (toList!734 lt!39008)) lt!38775))))

(assert (= (and d!21079 res!43204) b!83517))

(assert (= (and b!83517 (not res!43203)) b!83518))

(declare-fun m!86699 () Bool)

(assert (=> d!21079 m!86699))

(declare-fun m!86701 () Bool)

(assert (=> d!21079 m!86701))

(declare-fun m!86703 () Bool)

(assert (=> b!83518 m!86703))

(assert (=> b!83099 d!21079))

(declare-fun d!21081 () Bool)

(declare-fun e!54514 () Bool)

(assert (=> d!21081 e!54514))

(declare-fun res!43205 () Bool)

(assert (=> d!21081 (=> res!43205 e!54514)))

(declare-fun lt!39303 () Bool)

(assert (=> d!21081 (= res!43205 (not lt!39303))))

(declare-fun lt!39306 () Bool)

(assert (=> d!21081 (= lt!39303 lt!39306)))

(declare-fun lt!39305 () Unit!2413)

(declare-fun e!54513 () Unit!2413)

(assert (=> d!21081 (= lt!39305 e!54513)))

(declare-fun c!13343 () Bool)

(assert (=> d!21081 (= c!13343 lt!39306)))

(assert (=> d!21081 (= lt!39306 (containsKey!143 (toList!734 (+!105 lt!39109 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))) lt!39118))))

(assert (=> d!21081 (= (contains!744 (+!105 lt!39109 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))) lt!39118) lt!39303)))

(declare-fun b!83519 () Bool)

(declare-fun lt!39304 () Unit!2413)

(assert (=> b!83519 (= e!54513 lt!39304)))

(assert (=> b!83519 (= lt!39304 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 (+!105 lt!39109 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))) lt!39118))))

(assert (=> b!83519 (isDefined!92 (getValueByKey!140 (toList!734 (+!105 lt!39109 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))) lt!39118))))

(declare-fun b!83520 () Bool)

(declare-fun Unit!2437 () Unit!2413)

(assert (=> b!83520 (= e!54513 Unit!2437)))

(declare-fun b!83521 () Bool)

(assert (=> b!83521 (= e!54514 (isDefined!92 (getValueByKey!140 (toList!734 (+!105 lt!39109 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))) lt!39118)))))

(assert (= (and d!21081 c!13343) b!83519))

(assert (= (and d!21081 (not c!13343)) b!83520))

(assert (= (and d!21081 (not res!43205)) b!83521))

(declare-fun m!86705 () Bool)

(assert (=> d!21081 m!86705))

(declare-fun m!86707 () Bool)

(assert (=> b!83519 m!86707))

(declare-fun m!86709 () Bool)

(assert (=> b!83519 m!86709))

(assert (=> b!83519 m!86709))

(declare-fun m!86711 () Bool)

(assert (=> b!83519 m!86711))

(assert (=> b!83521 m!86709))

(assert (=> b!83521 m!86709))

(assert (=> b!83521 m!86711))

(assert (=> b!83203 d!21081))

(declare-fun d!21083 () Bool)

(assert (=> d!21083 (= (apply!81 lt!39121 lt!39107) (get!1201 (getValueByKey!140 (toList!734 lt!39121) lt!39107)))))

(declare-fun bs!3530 () Bool)

(assert (= bs!3530 d!21083))

(declare-fun m!86713 () Bool)

(assert (=> bs!3530 m!86713))

(assert (=> bs!3530 m!86713))

(declare-fun m!86715 () Bool)

(assert (=> bs!3530 m!86715))

(assert (=> b!83203 d!21083))

(declare-fun d!21085 () Bool)

(declare-fun e!54515 () Bool)

(assert (=> d!21085 e!54515))

(declare-fun res!43207 () Bool)

(assert (=> d!21085 (=> (not res!43207) (not e!54515))))

(declare-fun lt!39308 () ListLongMap!1437)

(assert (=> d!21085 (= res!43207 (contains!744 lt!39308 (_1!1102 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun lt!39310 () List!1504)

(assert (=> d!21085 (= lt!39308 (ListLongMap!1438 lt!39310))))

(declare-fun lt!39307 () Unit!2413)

(declare-fun lt!39309 () Unit!2413)

(assert (=> d!21085 (= lt!39307 lt!39309)))

(assert (=> d!21085 (= (getValueByKey!140 lt!39310 (_1!1102 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))) (Some!145 (_2!1102 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(assert (=> d!21085 (= lt!39309 (lemmaContainsTupThenGetReturnValue!57 lt!39310 (_1!1102 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(assert (=> d!21085 (= lt!39310 (insertStrictlySorted!60 (toList!734 lt!39109) (_1!1102 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(assert (=> d!21085 (= (+!105 lt!39109 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))) lt!39308)))

(declare-fun b!83522 () Bool)

(declare-fun res!43206 () Bool)

(assert (=> b!83522 (=> (not res!43206) (not e!54515))))

(assert (=> b!83522 (= res!43206 (= (getValueByKey!140 (toList!734 lt!39308) (_1!1102 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))) (Some!145 (_2!1102 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(declare-fun b!83523 () Bool)

(assert (=> b!83523 (= e!54515 (contains!746 (toList!734 lt!39308) (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))))

(assert (= (and d!21085 res!43207) b!83522))

(assert (= (and b!83522 res!43206) b!83523))

(declare-fun m!86717 () Bool)

(assert (=> d!21085 m!86717))

(declare-fun m!86719 () Bool)

(assert (=> d!21085 m!86719))

(declare-fun m!86721 () Bool)

(assert (=> d!21085 m!86721))

(declare-fun m!86723 () Bool)

(assert (=> d!21085 m!86723))

(declare-fun m!86725 () Bool)

(assert (=> b!83522 m!86725))

(declare-fun m!86727 () Bool)

(assert (=> b!83523 m!86727))

(assert (=> b!83203 d!21085))

(declare-fun d!21087 () Bool)

(assert (=> d!21087 (contains!744 (+!105 lt!39109 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))) lt!39118)))

(declare-fun lt!39313 () Unit!2413)

(declare-fun choose!497 (ListLongMap!1437 (_ BitVec 64) V!3017 (_ BitVec 64)) Unit!2413)

(assert (=> d!21087 (= lt!39313 (choose!497 lt!39109 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))) lt!39118))))

(assert (=> d!21087 (contains!744 lt!39109 lt!39118)))

(assert (=> d!21087 (= (addStillContains!57 lt!39109 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))) lt!39118) lt!39313)))

(declare-fun bs!3531 () Bool)

(assert (= bs!3531 d!21087))

(assert (=> bs!3531 m!86151))

(assert (=> bs!3531 m!86151))

(assert (=> bs!3531 m!86153))

(declare-fun m!86729 () Bool)

(assert (=> bs!3531 m!86729))

(declare-fun m!86731 () Bool)

(assert (=> bs!3531 m!86731))

(assert (=> b!83203 d!21087))

(declare-fun d!21089 () Bool)

(assert (=> d!21089 (= (apply!81 lt!39115 lt!39101) (get!1201 (getValueByKey!140 (toList!734 lt!39115) lt!39101)))))

(declare-fun bs!3532 () Bool)

(assert (= bs!3532 d!21089))

(declare-fun m!86733 () Bool)

(assert (=> bs!3532 m!86733))

(assert (=> bs!3532 m!86733))

(declare-fun m!86735 () Bool)

(assert (=> bs!3532 m!86735))

(assert (=> b!83203 d!21089))

(declare-fun d!21091 () Bool)

(declare-fun e!54516 () Bool)

(assert (=> d!21091 e!54516))

(declare-fun res!43209 () Bool)

(assert (=> d!21091 (=> (not res!43209) (not e!54516))))

(declare-fun lt!39315 () ListLongMap!1437)

(assert (=> d!21091 (= res!43209 (contains!744 lt!39315 (_1!1102 (tuple2!2183 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun lt!39317 () List!1504)

(assert (=> d!21091 (= lt!39315 (ListLongMap!1438 lt!39317))))

(declare-fun lt!39314 () Unit!2413)

(declare-fun lt!39316 () Unit!2413)

(assert (=> d!21091 (= lt!39314 lt!39316)))

(assert (=> d!21091 (= (getValueByKey!140 lt!39317 (_1!1102 (tuple2!2183 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))) (Some!145 (_2!1102 (tuple2!2183 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(assert (=> d!21091 (= lt!39316 (lemmaContainsTupThenGetReturnValue!57 lt!39317 (_1!1102 (tuple2!2183 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(assert (=> d!21091 (= lt!39317 (insertStrictlySorted!60 (toList!734 lt!39121) (_1!1102 (tuple2!2183 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(assert (=> d!21091 (= (+!105 lt!39121 (tuple2!2183 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) lt!39315)))

(declare-fun b!83525 () Bool)

(declare-fun res!43208 () Bool)

(assert (=> b!83525 (=> (not res!43208) (not e!54516))))

(assert (=> b!83525 (= res!43208 (= (getValueByKey!140 (toList!734 lt!39315) (_1!1102 (tuple2!2183 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))) (Some!145 (_2!1102 (tuple2!2183 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(declare-fun b!83526 () Bool)

(assert (=> b!83526 (= e!54516 (contains!746 (toList!734 lt!39315) (tuple2!2183 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))

(assert (= (and d!21091 res!43209) b!83525))

(assert (= (and b!83525 res!43208) b!83526))

(declare-fun m!86737 () Bool)

(assert (=> d!21091 m!86737))

(declare-fun m!86739 () Bool)

(assert (=> d!21091 m!86739))

(declare-fun m!86741 () Bool)

(assert (=> d!21091 m!86741))

(declare-fun m!86743 () Bool)

(assert (=> d!21091 m!86743))

(declare-fun m!86745 () Bool)

(assert (=> b!83525 m!86745))

(declare-fun m!86747 () Bool)

(assert (=> b!83526 m!86747))

(assert (=> b!83203 d!21091))

(declare-fun d!21093 () Bool)

(assert (=> d!21093 (= (apply!81 (+!105 lt!39121 (tuple2!2183 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) lt!39107) (apply!81 lt!39121 lt!39107))))

(declare-fun lt!39320 () Unit!2413)

(declare-fun choose!498 (ListLongMap!1437 (_ BitVec 64) V!3017 (_ BitVec 64)) Unit!2413)

(assert (=> d!21093 (= lt!39320 (choose!498 lt!39121 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992))) lt!39107))))

(declare-fun e!54519 () Bool)

(assert (=> d!21093 e!54519))

(declare-fun res!43212 () Bool)

(assert (=> d!21093 (=> (not res!43212) (not e!54519))))

(assert (=> d!21093 (= res!43212 (contains!744 lt!39121 lt!39107))))

(assert (=> d!21093 (= (addApplyDifferent!57 lt!39121 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992))) lt!39107) lt!39320)))

(declare-fun b!83530 () Bool)

(assert (=> b!83530 (= e!54519 (not (= lt!39107 lt!39103)))))

(assert (= (and d!21093 res!43212) b!83530))

(assert (=> d!21093 m!86157))

(assert (=> d!21093 m!86157))

(assert (=> d!21093 m!86159))

(declare-fun m!86749 () Bool)

(assert (=> d!21093 m!86749))

(assert (=> d!21093 m!86169))

(declare-fun m!86751 () Bool)

(assert (=> d!21093 m!86751))

(assert (=> b!83203 d!21093))

(declare-fun d!21095 () Bool)

(assert (=> d!21095 (= (apply!81 (+!105 lt!39121 (tuple2!2183 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) lt!39107) (get!1201 (getValueByKey!140 (toList!734 (+!105 lt!39121 (tuple2!2183 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))) lt!39107)))))

(declare-fun bs!3533 () Bool)

(assert (= bs!3533 d!21095))

(declare-fun m!86753 () Bool)

(assert (=> bs!3533 m!86753))

(assert (=> bs!3533 m!86753))

(declare-fun m!86755 () Bool)

(assert (=> bs!3533 m!86755))

(assert (=> b!83203 d!21095))

(declare-fun d!21097 () Bool)

(assert (=> d!21097 (= (apply!81 (+!105 lt!39115 (tuple2!2183 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) lt!39101) (get!1201 (getValueByKey!140 (toList!734 (+!105 lt!39115 (tuple2!2183 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))) lt!39101)))))

(declare-fun bs!3534 () Bool)

(assert (= bs!3534 d!21097))

(declare-fun m!86757 () Bool)

(assert (=> bs!3534 m!86757))

(assert (=> bs!3534 m!86757))

(declare-fun m!86759 () Bool)

(assert (=> bs!3534 m!86759))

(assert (=> b!83203 d!21097))

(declare-fun d!21099 () Bool)

(declare-fun e!54520 () Bool)

(assert (=> d!21099 e!54520))

(declare-fun res!43214 () Bool)

(assert (=> d!21099 (=> (not res!43214) (not e!54520))))

(declare-fun lt!39322 () ListLongMap!1437)

(assert (=> d!21099 (= res!43214 (contains!744 lt!39322 (_1!1102 (tuple2!2183 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun lt!39324 () List!1504)

(assert (=> d!21099 (= lt!39322 (ListLongMap!1438 lt!39324))))

(declare-fun lt!39321 () Unit!2413)

(declare-fun lt!39323 () Unit!2413)

(assert (=> d!21099 (= lt!39321 lt!39323)))

(assert (=> d!21099 (= (getValueByKey!140 lt!39324 (_1!1102 (tuple2!2183 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))) (Some!145 (_2!1102 (tuple2!2183 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(assert (=> d!21099 (= lt!39323 (lemmaContainsTupThenGetReturnValue!57 lt!39324 (_1!1102 (tuple2!2183 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(assert (=> d!21099 (= lt!39324 (insertStrictlySorted!60 (toList!734 lt!39108) (_1!1102 (tuple2!2183 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(assert (=> d!21099 (= (+!105 lt!39108 (tuple2!2183 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))) lt!39322)))

(declare-fun b!83531 () Bool)

(declare-fun res!43213 () Bool)

(assert (=> b!83531 (=> (not res!43213) (not e!54520))))

(assert (=> b!83531 (= res!43213 (= (getValueByKey!140 (toList!734 lt!39322) (_1!1102 (tuple2!2183 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))) (Some!145 (_2!1102 (tuple2!2183 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(declare-fun b!83532 () Bool)

(assert (=> b!83532 (= e!54520 (contains!746 (toList!734 lt!39322) (tuple2!2183 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))))

(assert (= (and d!21099 res!43214) b!83531))

(assert (= (and b!83531 res!43213) b!83532))

(declare-fun m!86761 () Bool)

(assert (=> d!21099 m!86761))

(declare-fun m!86763 () Bool)

(assert (=> d!21099 m!86763))

(declare-fun m!86765 () Bool)

(assert (=> d!21099 m!86765))

(declare-fun m!86767 () Bool)

(assert (=> d!21099 m!86767))

(declare-fun m!86769 () Bool)

(assert (=> b!83531 m!86769))

(declare-fun m!86771 () Bool)

(assert (=> b!83532 m!86771))

(assert (=> b!83203 d!21099))

(declare-fun d!21101 () Bool)

(assert (=> d!21101 (= (apply!81 (+!105 lt!39108 (tuple2!2183 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))) lt!39117) (apply!81 lt!39108 lt!39117))))

(declare-fun lt!39325 () Unit!2413)

(assert (=> d!21101 (= lt!39325 (choose!498 lt!39108 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))) lt!39117))))

(declare-fun e!54521 () Bool)

(assert (=> d!21101 e!54521))

(declare-fun res!43215 () Bool)

(assert (=> d!21101 (=> (not res!43215) (not e!54521))))

(assert (=> d!21101 (= res!43215 (contains!744 lt!39108 lt!39117))))

(assert (=> d!21101 (= (addApplyDifferent!57 lt!39108 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))) lt!39117) lt!39325)))

(declare-fun b!83533 () Bool)

(assert (=> b!83533 (= e!54521 (not (= lt!39117 lt!39112)))))

(assert (= (and d!21101 res!43215) b!83533))

(assert (=> d!21101 m!86145))

(assert (=> d!21101 m!86145))

(assert (=> d!21101 m!86161))

(declare-fun m!86773 () Bool)

(assert (=> d!21101 m!86773))

(assert (=> d!21101 m!86147))

(declare-fun m!86775 () Bool)

(assert (=> d!21101 m!86775))

(assert (=> b!83203 d!21101))

(assert (=> b!83203 d!20925))

(declare-fun d!21103 () Bool)

(assert (=> d!21103 (= (apply!81 (+!105 lt!39115 (tuple2!2183 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) lt!39101) (apply!81 lt!39115 lt!39101))))

(declare-fun lt!39326 () Unit!2413)

(assert (=> d!21103 (= lt!39326 (choose!498 lt!39115 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992))) lt!39101))))

(declare-fun e!54522 () Bool)

(assert (=> d!21103 e!54522))

(declare-fun res!43216 () Bool)

(assert (=> d!21103 (=> (not res!43216) (not e!54522))))

(assert (=> d!21103 (= res!43216 (contains!744 lt!39115 lt!39101))))

(assert (=> d!21103 (= (addApplyDifferent!57 lt!39115 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992))) lt!39101) lt!39326)))

(declare-fun b!83534 () Bool)

(assert (=> b!83534 (= e!54522 (not (= lt!39101 lt!39105)))))

(assert (= (and d!21103 res!43216) b!83534))

(assert (=> d!21103 m!86143))

(assert (=> d!21103 m!86143))

(assert (=> d!21103 m!86149))

(declare-fun m!86777 () Bool)

(assert (=> d!21103 m!86777))

(assert (=> d!21103 m!86163))

(declare-fun m!86779 () Bool)

(assert (=> d!21103 m!86779))

(assert (=> b!83203 d!21103))

(declare-fun d!21105 () Bool)

(assert (=> d!21105 (= (apply!81 (+!105 lt!39108 (tuple2!2183 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))) lt!39117) (get!1201 (getValueByKey!140 (toList!734 (+!105 lt!39108 (tuple2!2183 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))) lt!39117)))))

(declare-fun bs!3535 () Bool)

(assert (= bs!3535 d!21105))

(declare-fun m!86781 () Bool)

(assert (=> bs!3535 m!86781))

(assert (=> bs!3535 m!86781))

(declare-fun m!86783 () Bool)

(assert (=> bs!3535 m!86783))

(assert (=> b!83203 d!21105))

(declare-fun d!21107 () Bool)

(assert (=> d!21107 (= (apply!81 lt!39108 lt!39117) (get!1201 (getValueByKey!140 (toList!734 lt!39108) lt!39117)))))

(declare-fun bs!3536 () Bool)

(assert (= bs!3536 d!21107))

(declare-fun m!86785 () Bool)

(assert (=> bs!3536 m!86785))

(assert (=> bs!3536 m!86785))

(declare-fun m!86787 () Bool)

(assert (=> bs!3536 m!86787))

(assert (=> b!83203 d!21107))

(declare-fun d!21109 () Bool)

(declare-fun e!54523 () Bool)

(assert (=> d!21109 e!54523))

(declare-fun res!43218 () Bool)

(assert (=> d!21109 (=> (not res!43218) (not e!54523))))

(declare-fun lt!39328 () ListLongMap!1437)

(assert (=> d!21109 (= res!43218 (contains!744 lt!39328 (_1!1102 (tuple2!2183 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun lt!39330 () List!1504)

(assert (=> d!21109 (= lt!39328 (ListLongMap!1438 lt!39330))))

(declare-fun lt!39327 () Unit!2413)

(declare-fun lt!39329 () Unit!2413)

(assert (=> d!21109 (= lt!39327 lt!39329)))

(assert (=> d!21109 (= (getValueByKey!140 lt!39330 (_1!1102 (tuple2!2183 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))) (Some!145 (_2!1102 (tuple2!2183 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(assert (=> d!21109 (= lt!39329 (lemmaContainsTupThenGetReturnValue!57 lt!39330 (_1!1102 (tuple2!2183 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(assert (=> d!21109 (= lt!39330 (insertStrictlySorted!60 (toList!734 lt!39115) (_1!1102 (tuple2!2183 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(assert (=> d!21109 (= (+!105 lt!39115 (tuple2!2183 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) lt!39328)))

(declare-fun b!83535 () Bool)

(declare-fun res!43217 () Bool)

(assert (=> b!83535 (=> (not res!43217) (not e!54523))))

(assert (=> b!83535 (= res!43217 (= (getValueByKey!140 (toList!734 lt!39328) (_1!1102 (tuple2!2183 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))) (Some!145 (_2!1102 (tuple2!2183 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(declare-fun b!83536 () Bool)

(assert (=> b!83536 (= e!54523 (contains!746 (toList!734 lt!39328) (tuple2!2183 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))

(assert (= (and d!21109 res!43218) b!83535))

(assert (= (and b!83535 res!43217) b!83536))

(declare-fun m!86789 () Bool)

(assert (=> d!21109 m!86789))

(declare-fun m!86791 () Bool)

(assert (=> d!21109 m!86791))

(declare-fun m!86793 () Bool)

(assert (=> d!21109 m!86793))

(declare-fun m!86795 () Bool)

(assert (=> d!21109 m!86795))

(declare-fun m!86797 () Bool)

(assert (=> b!83535 m!86797))

(declare-fun m!86799 () Bool)

(assert (=> b!83536 m!86799))

(assert (=> b!83203 d!21109))

(declare-fun b!83571 () Bool)

(declare-fun res!43237 () Bool)

(declare-fun e!54546 () Bool)

(assert (=> b!83571 (=> (not res!43237) (not e!54546))))

(declare-fun lt!39413 () tuple2!2180)

(assert (=> b!83571 (= res!43237 (contains!744 (map!1193 (_2!1101 lt!39413)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))

(declare-fun b!83572 () Bool)

(declare-fun e!54543 () Bool)

(declare-fun lt!39417 () SeekEntryResult!236)

(assert (=> b!83572 (= e!54543 (= (select (arr!1904 (_keys!3984 newMap!16)) (index!3081 lt!39417)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))

(declare-fun b!83573 () Bool)

(declare-fun e!54547 () Unit!2413)

(declare-fun Unit!2438 () Unit!2413)

(assert (=> b!83573 (= e!54547 Unit!2438)))

(declare-fun b!83574 () Bool)

(declare-fun c!13352 () Bool)

(declare-fun lt!39401 () SeekEntryResult!236)

(assert (=> b!83574 (= c!13352 ((_ is MissingVacant!236) lt!39401))))

(declare-fun e!54540 () Bool)

(declare-fun e!54542 () Bool)

(assert (=> b!83574 (= e!54540 e!54542)))

(declare-fun b!83575 () Bool)

(declare-fun res!43240 () Bool)

(assert (=> b!83575 (=> (not res!43240) (not e!54546))))

(assert (=> b!83575 (= res!43240 (valid!334 (_2!1101 lt!39413)))))

(declare-fun d!21111 () Bool)

(assert (=> d!21111 e!54546))

(declare-fun res!43244 () Bool)

(assert (=> d!21111 (=> (not res!43244) (not e!54546))))

(assert (=> d!21111 (= res!43244 (_1!1101 lt!39413))))

(assert (=> d!21111 (= lt!39413 (tuple2!2181 true (LongMapFixedSize!749 (defaultEntry!2316 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (bvadd (_size!423 newMap!16) #b00000000000000000000000000000001) (array!3998 (store (arr!1904 (_keys!3984 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) (size!2147 (_keys!3984 newMap!16))) (array!4000 (store (arr!1905 (_values!2299 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (ValueCellFull!920 lt!38784)) (size!2148 (_values!2299 newMap!16))) (_vacant!423 newMap!16))))))

(declare-fun lt!39397 () Unit!2413)

(declare-fun lt!39408 () Unit!2413)

(assert (=> d!21111 (= lt!39397 lt!39408)))

(declare-fun lt!39416 () array!3997)

(declare-fun lt!39395 () array!3999)

(assert (=> d!21111 (contains!744 (getCurrentListMap!429 lt!39416 lt!39395 (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) (select (store (arr!1904 (_keys!3984 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961))))))

(assert (=> d!21111 (= lt!39408 (lemmaValidKeyInArrayIsInListMap!90 lt!39416 lt!39395 (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (defaultEntry!2316 newMap!16)))))

(assert (=> d!21111 (= lt!39395 (array!4000 (store (arr!1905 (_values!2299 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (ValueCellFull!920 lt!38784)) (size!2148 (_values!2299 newMap!16))))))

(assert (=> d!21111 (= lt!39416 (array!3998 (store (arr!1904 (_keys!3984 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) (size!2147 (_keys!3984 newMap!16))))))

(declare-fun lt!39393 () Unit!2413)

(declare-fun lt!39414 () Unit!2413)

(assert (=> d!21111 (= lt!39393 lt!39414)))

(declare-fun lt!39419 () array!3997)

(assert (=> d!21111 (= (arrayCountValidKeys!0 lt!39419 (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (bvadd (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!3997 (_ BitVec 32)) Unit!2413)

(assert (=> d!21111 (= lt!39414 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!39419 (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961))))))

(assert (=> d!21111 (= lt!39419 (array!3998 (store (arr!1904 (_keys!3984 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) (size!2147 (_keys!3984 newMap!16))))))

(declare-fun lt!39394 () Unit!2413)

(declare-fun lt!39415 () Unit!2413)

(assert (=> d!21111 (= lt!39394 lt!39415)))

(declare-fun lt!39404 () array!3997)

(assert (=> d!21111 (arrayContainsKey!0 lt!39404 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(assert (=> d!21111 (= lt!39415 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!39404 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961))))))

(assert (=> d!21111 (= lt!39404 (array!3998 (store (arr!1904 (_keys!3984 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) (size!2147 (_keys!3984 newMap!16))))))

(declare-fun lt!39392 () Unit!2413)

(declare-fun lt!39409 () Unit!2413)

(assert (=> d!21111 (= lt!39392 lt!39409)))

(assert (=> d!21111 (= (+!105 (getCurrentListMap!429 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) (getCurrentListMap!429 (array!3998 (store (arr!1904 (_keys!3984 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) (size!2147 (_keys!3984 newMap!16))) (array!4000 (store (arr!1905 (_values!2299 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (ValueCellFull!920 lt!38784)) (size!2148 (_values!2299 newMap!16))) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!18 (array!3997 array!3999 (_ BitVec 32) (_ BitVec 32) V!3017 V!3017 (_ BitVec 32) (_ BitVec 64) V!3017 Int) Unit!2413)

(assert (=> d!21111 (= lt!39409 (lemmaAddValidKeyToArrayThenAddPairToListMap!18 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39418 () Unit!2413)

(declare-fun lt!39391 () Unit!2413)

(assert (=> d!21111 (= lt!39418 lt!39391)))

(assert (=> d!21111 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3998 (store (arr!1904 (_keys!3984 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) (size!2147 (_keys!3984 newMap!16))) (mask!6334 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!3997 (_ BitVec 32) (_ BitVec 32)) Unit!2413)

(assert (=> d!21111 (= lt!39391 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (_keys!3984 newMap!16) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (mask!6334 newMap!16)))))

(declare-fun lt!39406 () Unit!2413)

(declare-fun lt!39410 () Unit!2413)

(assert (=> d!21111 (= lt!39406 lt!39410)))

(assert (=> d!21111 (= (arrayCountValidKeys!0 (array!3998 (store (arr!1904 (_keys!3984 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) (size!2147 (_keys!3984 newMap!16))) #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!3984 newMap!16) #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!3997 (_ BitVec 32) (_ BitVec 64)) Unit!2413)

(assert (=> d!21111 (= lt!39410 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3984 newMap!16) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))

(declare-fun lt!39399 () Unit!2413)

(declare-fun lt!39411 () Unit!2413)

(assert (=> d!21111 (= lt!39399 lt!39411)))

(declare-fun lt!39396 () List!1505)

(declare-fun lt!39412 () (_ BitVec 32))

(assert (=> d!21111 (arrayNoDuplicates!0 (array!3998 (store (arr!1904 (_keys!3984 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) (size!2147 (_keys!3984 newMap!16))) lt!39412 lt!39396)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!3997 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1505) Unit!2413)

(assert (=> d!21111 (= lt!39411 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3984 newMap!16) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) lt!39412 lt!39396))))

(assert (=> d!21111 (= lt!39396 Nil!1502)))

(assert (=> d!21111 (= lt!39412 #b00000000000000000000000000000000)))

(declare-fun lt!39403 () Unit!2413)

(assert (=> d!21111 (= lt!39403 e!54547)))

(declare-fun c!13353 () Bool)

(assert (=> d!21111 (= c!13353 (arrayContainsKey!0 (_keys!3984 newMap!16) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!39420 () Unit!2413)

(declare-fun e!54544 () Unit!2413)

(assert (=> d!21111 (= lt!39420 e!54544)))

(declare-fun c!13354 () Bool)

(assert (=> d!21111 (= c!13354 (contains!744 (getCurrentListMap!429 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))

(assert (=> d!21111 (valid!334 newMap!16)))

(assert (=> d!21111 (= (updateHelperNewKey!30 newMap!16 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784 (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961))) lt!39413)))

(declare-fun call!7846 () SeekEntryResult!236)

(declare-fun bm!7842 () Bool)

(assert (=> bm!7842 (= call!7846 (seekEntryOrOpen!0 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (_keys!3984 newMap!16) (mask!6334 newMap!16)))))

(declare-fun b!83576 () Bool)

(declare-fun e!54545 () Bool)

(assert (=> b!83576 (= e!54542 e!54545)))

(declare-fun res!43239 () Bool)

(declare-fun call!7848 () Bool)

(assert (=> b!83576 (= res!43239 call!7848)))

(assert (=> b!83576 (=> (not res!43239) (not e!54545))))

(declare-fun b!83577 () Bool)

(declare-fun res!43241 () Bool)

(declare-fun e!54541 () Bool)

(assert (=> b!83577 (=> (not res!43241) (not e!54541))))

(assert (=> b!83577 (= res!43241 call!7848)))

(assert (=> b!83577 (= e!54540 e!54541)))

(declare-fun b!83578 () Bool)

(declare-fun res!43245 () Bool)

(assert (=> b!83578 (= res!43245 (= (select (arr!1904 (_keys!3984 newMap!16)) (index!3083 lt!39401)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!83578 (=> (not res!43245) (not e!54545))))

(declare-fun b!83579 () Bool)

(declare-fun call!7847 () Bool)

(assert (=> b!83579 (= e!54541 (not call!7847))))

(declare-fun b!83580 () Bool)

(assert (=> b!83580 (= e!54542 ((_ is Undefined!236) lt!39401))))

(declare-fun bm!7843 () Bool)

(assert (=> bm!7843 (= call!7847 (arrayContainsKey!0 (_keys!3984 newMap!16) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!83581 () Bool)

(declare-fun Unit!2439 () Unit!2413)

(assert (=> b!83581 (= e!54547 Unit!2439)))

(declare-fun lt!39398 () Unit!2413)

(declare-fun lemmaArrayContainsKeyThenInListMap!18 (array!3997 array!3999 (_ BitVec 32) (_ BitVec 32) V!3017 V!3017 (_ BitVec 64) (_ BitVec 32) Int) Unit!2413)

(assert (=> b!83581 (= lt!39398 (lemmaArrayContainsKeyThenInListMap!18 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(assert (=> b!83581 (contains!744 (getCurrentListMap!429 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355))))

(declare-fun lt!39402 () Unit!2413)

(assert (=> b!83581 (= lt!39402 lt!39398)))

(assert (=> b!83581 false))

(declare-fun b!83582 () Bool)

(declare-fun res!43238 () Bool)

(assert (=> b!83582 (=> (not res!43238) (not e!54541))))

(assert (=> b!83582 (= res!43238 (= (select (arr!1904 (_keys!3984 newMap!16)) (index!3080 lt!39401)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!7844 () Bool)

(declare-fun call!7845 () Bool)

(assert (=> bm!7844 (= call!7848 call!7845)))

(declare-fun b!83583 () Bool)

(declare-fun Unit!2440 () Unit!2413)

(assert (=> b!83583 (= e!54544 Unit!2440)))

(declare-fun lt!39405 () Unit!2413)

(assert (=> b!83583 (= lt!39405 (lemmaInListMapThenSeekEntryOrOpenFindsIt!30 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (defaultEntry!2316 newMap!16)))))

(assert (=> b!83583 (= lt!39417 call!7846)))

(declare-fun res!43242 () Bool)

(assert (=> b!83583 (= res!43242 ((_ is Found!236) lt!39417))))

(assert (=> b!83583 (=> (not res!43242) (not e!54543))))

(assert (=> b!83583 e!54543))

(declare-fun lt!39400 () Unit!2413)

(assert (=> b!83583 (= lt!39400 lt!39405)))

(assert (=> b!83583 false))

(declare-fun b!83584 () Bool)

(declare-fun res!43243 () Bool)

(assert (=> b!83584 (= res!43243 call!7845)))

(assert (=> b!83584 (=> (not res!43243) (not e!54543))))

(declare-fun b!83585 () Bool)

(assert (=> b!83585 (= e!54545 (not call!7847))))

(declare-fun b!83586 () Bool)

(declare-fun lt!39407 () Unit!2413)

(assert (=> b!83586 (= e!54544 lt!39407)))

(assert (=> b!83586 (= lt!39407 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!30 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (defaultEntry!2316 newMap!16)))))

(assert (=> b!83586 (= lt!39401 call!7846)))

(declare-fun c!13355 () Bool)

(assert (=> b!83586 (= c!13355 ((_ is MissingZero!236) lt!39401))))

(assert (=> b!83586 e!54540))

(declare-fun b!83587 () Bool)

(assert (=> b!83587 (= e!54546 (= (map!1193 (_2!1101 lt!39413)) (+!105 (map!1193 newMap!16) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(declare-fun bm!7845 () Bool)

(assert (=> bm!7845 (= call!7845 (inRange!0 (ite c!13354 (index!3081 lt!39417) (ite c!13355 (index!3080 lt!39401) (index!3083 lt!39401))) (mask!6334 newMap!16)))))

(assert (= (and d!21111 c!13354) b!83583))

(assert (= (and d!21111 (not c!13354)) b!83586))

(assert (= (and b!83583 res!43242) b!83584))

(assert (= (and b!83584 res!43243) b!83572))

(assert (= (and b!83586 c!13355) b!83577))

(assert (= (and b!83586 (not c!13355)) b!83574))

(assert (= (and b!83577 res!43241) b!83582))

(assert (= (and b!83582 res!43238) b!83579))

(assert (= (and b!83574 c!13352) b!83576))

(assert (= (and b!83574 (not c!13352)) b!83580))

(assert (= (and b!83576 res!43239) b!83578))

(assert (= (and b!83578 res!43245) b!83585))

(assert (= (or b!83577 b!83576) bm!7844))

(assert (= (or b!83579 b!83585) bm!7843))

(assert (= (or b!83584 bm!7844) bm!7845))

(assert (= (or b!83583 b!83586) bm!7842))

(assert (= (and d!21111 c!13353) b!83581))

(assert (= (and d!21111 (not c!13353)) b!83573))

(assert (= (and d!21111 res!43244) b!83575))

(assert (= (and b!83575 res!43240) b!83571))

(assert (= (and b!83571 res!43237) b!83587))

(assert (=> bm!7842 m!85721))

(assert (=> bm!7842 m!85939))

(assert (=> b!83586 m!85721))

(assert (=> b!83586 m!85937))

(declare-fun m!86801 () Bool)

(assert (=> b!83582 m!86801))

(declare-fun m!86803 () Bool)

(assert (=> b!83571 m!86803))

(assert (=> b!83571 m!86803))

(assert (=> b!83571 m!85721))

(declare-fun m!86805 () Bool)

(assert (=> b!83571 m!86805))

(declare-fun m!86807 () Bool)

(assert (=> bm!7845 m!86807))

(assert (=> bm!7843 m!85721))

(assert (=> bm!7843 m!85979))

(declare-fun m!86809 () Bool)

(assert (=> b!83572 m!86809))

(assert (=> d!21111 m!85945))

(declare-fun m!86811 () Bool)

(assert (=> d!21111 m!86811))

(assert (=> d!21111 m!85721))

(declare-fun m!86813 () Bool)

(assert (=> d!21111 m!86813))

(assert (=> d!21111 m!85721))

(declare-fun m!86815 () Bool)

(assert (=> d!21111 m!86815))

(declare-fun m!86817 () Bool)

(assert (=> d!21111 m!86817))

(assert (=> d!21111 m!85945))

(declare-fun m!86819 () Bool)

(assert (=> d!21111 m!86819))

(declare-fun m!86821 () Bool)

(assert (=> d!21111 m!86821))

(declare-fun m!86823 () Bool)

(assert (=> d!21111 m!86823))

(assert (=> d!21111 m!85721))

(declare-fun m!86825 () Bool)

(assert (=> d!21111 m!86825))

(assert (=> d!21111 m!85751))

(declare-fun m!86827 () Bool)

(assert (=> d!21111 m!86827))

(assert (=> d!21111 m!85945))

(assert (=> d!21111 m!85721))

(assert (=> d!21111 m!85949))

(assert (=> d!21111 m!85915))

(declare-fun m!86829 () Bool)

(assert (=> d!21111 m!86829))

(declare-fun m!86831 () Bool)

(assert (=> d!21111 m!86831))

(assert (=> d!21111 m!85721))

(declare-fun m!86833 () Bool)

(assert (=> d!21111 m!86833))

(declare-fun m!86835 () Bool)

(assert (=> d!21111 m!86835))

(assert (=> d!21111 m!85721))

(declare-fun m!86837 () Bool)

(assert (=> d!21111 m!86837))

(declare-fun m!86839 () Bool)

(assert (=> d!21111 m!86839))

(declare-fun m!86841 () Bool)

(assert (=> d!21111 m!86841))

(assert (=> d!21111 m!85721))

(assert (=> d!21111 m!85979))

(declare-fun m!86843 () Bool)

(assert (=> d!21111 m!86843))

(declare-fun m!86845 () Bool)

(assert (=> d!21111 m!86845))

(assert (=> d!21111 m!86821))

(assert (=> d!21111 m!86819))

(assert (=> d!21111 m!85721))

(declare-fun m!86847 () Bool)

(assert (=> d!21111 m!86847))

(declare-fun m!86849 () Bool)

(assert (=> b!83578 m!86849))

(assert (=> b!83587 m!86803))

(assert (=> b!83587 m!85747))

(assert (=> b!83587 m!85747))

(declare-fun m!86851 () Bool)

(assert (=> b!83587 m!86851))

(assert (=> b!83583 m!85721))

(assert (=> b!83583 m!85977))

(declare-fun m!86853 () Bool)

(assert (=> b!83575 m!86853))

(assert (=> b!83581 m!85721))

(declare-fun m!86855 () Bool)

(assert (=> b!83581 m!86855))

(assert (=> b!83581 m!85945))

(assert (=> b!83581 m!85945))

(assert (=> b!83581 m!85721))

(assert (=> b!83581 m!85949))

(assert (=> bm!7767 d!21111))

(declare-fun b!83596 () Bool)

(declare-fun e!54552 () (_ BitVec 32))

(declare-fun call!7851 () (_ BitVec 32))

(assert (=> b!83596 (= e!54552 call!7851)))

(declare-fun b!83597 () Bool)

(declare-fun e!54553 () (_ BitVec 32))

(assert (=> b!83597 (= e!54553 #b00000000000000000000000000000000)))

(declare-fun b!83598 () Bool)

(assert (=> b!83598 (= e!54553 e!54552)))

(declare-fun c!13360 () Bool)

(assert (=> b!83598 (= c!13360 (validKeyInArray!0 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!7848 () Bool)

(assert (=> bm!7848 (= call!7851 (arrayCountValidKeys!0 (_keys!3984 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2147 (_keys!3984 newMap!16))))))

(declare-fun d!21113 () Bool)

(declare-fun lt!39423 () (_ BitVec 32))

(assert (=> d!21113 (and (bvsge lt!39423 #b00000000000000000000000000000000) (bvsle lt!39423 (bvsub (size!2147 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!21113 (= lt!39423 e!54553)))

(declare-fun c!13361 () Bool)

(assert (=> d!21113 (= c!13361 (bvsge #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))))))

(assert (=> d!21113 (and (bvsle #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2147 (_keys!3984 newMap!16)) (size!2147 (_keys!3984 newMap!16))))))

(assert (=> d!21113 (= (arrayCountValidKeys!0 (_keys!3984 newMap!16) #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))) lt!39423)))

(declare-fun b!83599 () Bool)

(assert (=> b!83599 (= e!54552 (bvadd #b00000000000000000000000000000001 call!7851))))

(assert (= (and d!21113 c!13361) b!83597))

(assert (= (and d!21113 (not c!13361)) b!83598))

(assert (= (and b!83598 c!13360) b!83599))

(assert (= (and b!83598 (not c!13360)) b!83596))

(assert (= (or b!83599 b!83596) bm!7848))

(assert (=> b!83598 m!86211))

(assert (=> b!83598 m!86211))

(assert (=> b!83598 m!86213))

(declare-fun m!86857 () Bool)

(assert (=> bm!7848 m!86857))

(assert (=> b!82927 d!21113))

(assert (=> b!83091 d!21059))

(declare-fun b!83602 () Bool)

(declare-fun e!54555 () Option!146)

(assert (=> b!83602 (= e!54555 (getValueByKey!140 (t!5196 (toList!734 lt!39044)) (_1!1102 lt!38775)))))

(declare-fun d!21115 () Bool)

(declare-fun c!13362 () Bool)

(assert (=> d!21115 (= c!13362 (and ((_ is Cons!1500) (toList!734 lt!39044)) (= (_1!1102 (h!2090 (toList!734 lt!39044))) (_1!1102 lt!38775))))))

(declare-fun e!54554 () Option!146)

(assert (=> d!21115 (= (getValueByKey!140 (toList!734 lt!39044) (_1!1102 lt!38775)) e!54554)))

(declare-fun b!83600 () Bool)

(assert (=> b!83600 (= e!54554 (Some!145 (_2!1102 (h!2090 (toList!734 lt!39044)))))))

(declare-fun b!83601 () Bool)

(assert (=> b!83601 (= e!54554 e!54555)))

(declare-fun c!13363 () Bool)

(assert (=> b!83601 (= c!13363 (and ((_ is Cons!1500) (toList!734 lt!39044)) (not (= (_1!1102 (h!2090 (toList!734 lt!39044))) (_1!1102 lt!38775)))))))

(declare-fun b!83603 () Bool)

(assert (=> b!83603 (= e!54555 None!144)))

(assert (= (and d!21115 c!13362) b!83600))

(assert (= (and d!21115 (not c!13362)) b!83601))

(assert (= (and b!83601 c!13363) b!83602))

(assert (= (and b!83601 (not c!13363)) b!83603))

(declare-fun m!86859 () Bool)

(assert (=> b!83602 m!86859))

(assert (=> b!83140 d!21115))

(declare-fun d!21117 () Bool)

(declare-fun e!54557 () Bool)

(assert (=> d!21117 e!54557))

(declare-fun res!43246 () Bool)

(assert (=> d!21117 (=> res!43246 e!54557)))

(declare-fun lt!39424 () Bool)

(assert (=> d!21117 (= res!43246 (not lt!39424))))

(declare-fun lt!39427 () Bool)

(assert (=> d!21117 (= lt!39424 lt!39427)))

(declare-fun lt!39426 () Unit!2413)

(declare-fun e!54556 () Unit!2413)

(assert (=> d!21117 (= lt!39426 e!54556)))

(declare-fun c!13364 () Bool)

(assert (=> d!21117 (= c!13364 lt!39427)))

(assert (=> d!21117 (= lt!39427 (containsKey!143 (toList!734 lt!39113) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!21117 (= (contains!744 lt!39113 #b0000000000000000000000000000000000000000000000000000000000000000) lt!39424)))

(declare-fun b!83604 () Bool)

(declare-fun lt!39425 () Unit!2413)

(assert (=> b!83604 (= e!54556 lt!39425)))

(assert (=> b!83604 (= lt!39425 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 lt!39113) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!83604 (isDefined!92 (getValueByKey!140 (toList!734 lt!39113) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!83605 () Bool)

(declare-fun Unit!2441 () Unit!2413)

(assert (=> b!83605 (= e!54556 Unit!2441)))

(declare-fun b!83606 () Bool)

(assert (=> b!83606 (= e!54557 (isDefined!92 (getValueByKey!140 (toList!734 lt!39113) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!21117 c!13364) b!83604))

(assert (= (and d!21117 (not c!13364)) b!83605))

(assert (= (and d!21117 (not res!43246)) b!83606))

(declare-fun m!86861 () Bool)

(assert (=> d!21117 m!86861))

(declare-fun m!86863 () Bool)

(assert (=> b!83604 m!86863))

(assert (=> b!83604 m!86615))

(assert (=> b!83604 m!86615))

(declare-fun m!86865 () Bool)

(assert (=> b!83604 m!86865))

(assert (=> b!83606 m!86615))

(assert (=> b!83606 m!86615))

(assert (=> b!83606 m!86865))

(assert (=> bm!7793 d!21117))

(declare-fun d!21119 () Bool)

(assert (=> d!21119 (= (get!1199 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) from!355) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2631 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) from!355)))))

(assert (=> b!83150 d!21119))

(declare-fun d!21121 () Bool)

(declare-fun e!54559 () Bool)

(assert (=> d!21121 e!54559))

(declare-fun res!43247 () Bool)

(assert (=> d!21121 (=> res!43247 e!54559)))

(declare-fun lt!39428 () Bool)

(assert (=> d!21121 (= res!43247 (not lt!39428))))

(declare-fun lt!39431 () Bool)

(assert (=> d!21121 (= lt!39428 lt!39431)))

(declare-fun lt!39430 () Unit!2413)

(declare-fun e!54558 () Unit!2413)

(assert (=> d!21121 (= lt!39430 e!54558)))

(declare-fun c!13365 () Bool)

(assert (=> d!21121 (= c!13365 lt!39431)))

(assert (=> d!21121 (= lt!39431 (containsKey!143 (toList!734 lt!39113) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!21121 (= (contains!744 lt!39113 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!39428)))

(declare-fun b!83607 () Bool)

(declare-fun lt!39429 () Unit!2413)

(assert (=> b!83607 (= e!54558 lt!39429)))

(assert (=> b!83607 (= lt!39429 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 lt!39113) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!83607 (isDefined!92 (getValueByKey!140 (toList!734 lt!39113) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!83608 () Bool)

(declare-fun Unit!2442 () Unit!2413)

(assert (=> b!83608 (= e!54558 Unit!2442)))

(declare-fun b!83609 () Bool)

(assert (=> b!83609 (= e!54559 (isDefined!92 (getValueByKey!140 (toList!734 lt!39113) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!21121 c!13365) b!83607))

(assert (= (and d!21121 (not c!13365)) b!83608))

(assert (= (and d!21121 (not res!43247)) b!83609))

(assert (=> d!21121 m!85989))

(declare-fun m!86867 () Bool)

(assert (=> d!21121 m!86867))

(assert (=> b!83607 m!85989))

(declare-fun m!86869 () Bool)

(assert (=> b!83607 m!86869))

(assert (=> b!83607 m!85989))

(assert (=> b!83607 m!86397))

(assert (=> b!83607 m!86397))

(declare-fun m!86871 () Bool)

(assert (=> b!83607 m!86871))

(assert (=> b!83609 m!85989))

(assert (=> b!83609 m!86397))

(assert (=> b!83609 m!86397))

(assert (=> b!83609 m!86871))

(assert (=> b!83211 d!21121))

(declare-fun b!83612 () Bool)

(declare-fun e!54561 () Option!146)

(assert (=> b!83612 (= e!54561 (getValueByKey!140 (t!5196 (toList!734 lt!39040)) (_1!1102 lt!38779)))))

(declare-fun d!21123 () Bool)

(declare-fun c!13366 () Bool)

(assert (=> d!21123 (= c!13366 (and ((_ is Cons!1500) (toList!734 lt!39040)) (= (_1!1102 (h!2090 (toList!734 lt!39040))) (_1!1102 lt!38779))))))

(declare-fun e!54560 () Option!146)

(assert (=> d!21123 (= (getValueByKey!140 (toList!734 lt!39040) (_1!1102 lt!38779)) e!54560)))

(declare-fun b!83610 () Bool)

(assert (=> b!83610 (= e!54560 (Some!145 (_2!1102 (h!2090 (toList!734 lt!39040)))))))

(declare-fun b!83611 () Bool)

(assert (=> b!83611 (= e!54560 e!54561)))

(declare-fun c!13367 () Bool)

(assert (=> b!83611 (= c!13367 (and ((_ is Cons!1500) (toList!734 lt!39040)) (not (= (_1!1102 (h!2090 (toList!734 lt!39040))) (_1!1102 lt!38779)))))))

(declare-fun b!83613 () Bool)

(assert (=> b!83613 (= e!54561 None!144)))

(assert (= (and d!21123 c!13366) b!83610))

(assert (= (and d!21123 (not c!13366)) b!83611))

(assert (= (and b!83611 c!13367) b!83612))

(assert (= (and b!83611 (not c!13367)) b!83613))

(declare-fun m!86873 () Bool)

(assert (=> b!83612 m!86873))

(assert (=> b!83138 d!21123))

(declare-fun d!21125 () Bool)

(assert (=> d!21125 (= (apply!81 lt!39113 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1201 (getValueByKey!140 (toList!734 lt!39113) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3537 () Bool)

(assert (= bs!3537 d!21125))

(assert (=> bs!3537 m!86205))

(assert (=> bs!3537 m!86205))

(declare-fun m!86875 () Bool)

(assert (=> bs!3537 m!86875))

(assert (=> b!83213 d!21125))

(declare-fun d!21127 () Bool)

(declare-fun res!43248 () Bool)

(declare-fun e!54562 () Bool)

(assert (=> d!21127 (=> (not res!43248) (not e!54562))))

(assert (=> d!21127 (= res!43248 (simpleValid!57 (_2!1101 lt!38973)))))

(assert (=> d!21127 (= (valid!334 (_2!1101 lt!38973)) e!54562)))

(declare-fun b!83614 () Bool)

(declare-fun res!43249 () Bool)

(assert (=> b!83614 (=> (not res!43249) (not e!54562))))

(assert (=> b!83614 (= res!43249 (= (arrayCountValidKeys!0 (_keys!3984 (_2!1101 lt!38973)) #b00000000000000000000000000000000 (size!2147 (_keys!3984 (_2!1101 lt!38973)))) (_size!423 (_2!1101 lt!38973))))))

(declare-fun b!83615 () Bool)

(declare-fun res!43250 () Bool)

(assert (=> b!83615 (=> (not res!43250) (not e!54562))))

(assert (=> b!83615 (= res!43250 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3984 (_2!1101 lt!38973)) (mask!6334 (_2!1101 lt!38973))))))

(declare-fun b!83616 () Bool)

(assert (=> b!83616 (= e!54562 (arrayNoDuplicates!0 (_keys!3984 (_2!1101 lt!38973)) #b00000000000000000000000000000000 Nil!1502))))

(assert (= (and d!21127 res!43248) b!83614))

(assert (= (and b!83614 res!43249) b!83615))

(assert (= (and b!83615 res!43250) b!83616))

(declare-fun m!86877 () Bool)

(assert (=> d!21127 m!86877))

(declare-fun m!86879 () Bool)

(assert (=> b!83614 m!86879))

(declare-fun m!86881 () Bool)

(assert (=> b!83615 m!86881))

(declare-fun m!86883 () Bool)

(assert (=> b!83616 m!86883))

(assert (=> d!20901 d!21127))

(assert (=> d!20901 d!20897))

(assert (=> b!83042 d!20959))

(declare-fun b!83619 () Bool)

(declare-fun e!54564 () Option!146)

(assert (=> b!83619 (= e!54564 (getValueByKey!140 (t!5196 (toList!734 lt!39053)) (_1!1102 lt!38775)))))

(declare-fun d!21129 () Bool)

(declare-fun c!13368 () Bool)

(assert (=> d!21129 (= c!13368 (and ((_ is Cons!1500) (toList!734 lt!39053)) (= (_1!1102 (h!2090 (toList!734 lt!39053))) (_1!1102 lt!38775))))))

(declare-fun e!54563 () Option!146)

(assert (=> d!21129 (= (getValueByKey!140 (toList!734 lt!39053) (_1!1102 lt!38775)) e!54563)))

(declare-fun b!83617 () Bool)

(assert (=> b!83617 (= e!54563 (Some!145 (_2!1102 (h!2090 (toList!734 lt!39053)))))))

(declare-fun b!83618 () Bool)

(assert (=> b!83618 (= e!54563 e!54564)))

(declare-fun c!13369 () Bool)

(assert (=> b!83618 (= c!13369 (and ((_ is Cons!1500) (toList!734 lt!39053)) (not (= (_1!1102 (h!2090 (toList!734 lt!39053))) (_1!1102 lt!38775)))))))

(declare-fun b!83620 () Bool)

(assert (=> b!83620 (= e!54564 None!144)))

(assert (= (and d!21129 c!13368) b!83617))

(assert (= (and d!21129 (not c!13368)) b!83618))

(assert (= (and b!83618 c!13369) b!83619))

(assert (= (and b!83618 (not c!13369)) b!83620))

(declare-fun m!86885 () Bool)

(assert (=> b!83619 m!86885))

(assert (=> b!83144 d!21129))

(declare-fun d!21131 () Bool)

(declare-fun res!43251 () Bool)

(declare-fun e!54565 () Bool)

(assert (=> d!21131 (=> (not res!43251) (not e!54565))))

(assert (=> d!21131 (= res!43251 (simpleValid!57 (v!2632 (underlying!289 thiss!992))))))

(assert (=> d!21131 (= (valid!334 (v!2632 (underlying!289 thiss!992))) e!54565)))

(declare-fun b!83621 () Bool)

(declare-fun res!43252 () Bool)

(assert (=> b!83621 (=> (not res!43252) (not e!54565))))

(assert (=> b!83621 (= res!43252 (= (arrayCountValidKeys!0 (_keys!3984 (v!2632 (underlying!289 thiss!992))) #b00000000000000000000000000000000 (size!2147 (_keys!3984 (v!2632 (underlying!289 thiss!992))))) (_size!423 (v!2632 (underlying!289 thiss!992)))))))

(declare-fun b!83622 () Bool)

(declare-fun res!43253 () Bool)

(assert (=> b!83622 (=> (not res!43253) (not e!54565))))

(assert (=> b!83622 (= res!43253 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3984 (v!2632 (underlying!289 thiss!992))) (mask!6334 (v!2632 (underlying!289 thiss!992)))))))

(declare-fun b!83623 () Bool)

(assert (=> b!83623 (= e!54565 (arrayNoDuplicates!0 (_keys!3984 (v!2632 (underlying!289 thiss!992))) #b00000000000000000000000000000000 Nil!1502))))

(assert (= (and d!21131 res!43251) b!83621))

(assert (= (and b!83621 res!43252) b!83622))

(assert (= (and b!83622 res!43253) b!83623))

(declare-fun m!86887 () Bool)

(assert (=> d!21131 m!86887))

(declare-fun m!86889 () Bool)

(assert (=> b!83621 m!86889))

(declare-fun m!86891 () Bool)

(assert (=> b!83622 m!86891))

(declare-fun m!86893 () Bool)

(assert (=> b!83623 m!86893))

(assert (=> d!20939 d!21131))

(declare-fun d!21133 () Bool)

(declare-fun e!54567 () Bool)

(assert (=> d!21133 e!54567))

(declare-fun res!43254 () Bool)

(assert (=> d!21133 (=> res!43254 e!54567)))

(declare-fun lt!39432 () Bool)

(assert (=> d!21133 (= res!43254 (not lt!39432))))

(declare-fun lt!39435 () Bool)

(assert (=> d!21133 (= lt!39432 lt!39435)))

(declare-fun lt!39434 () Unit!2413)

(declare-fun e!54566 () Unit!2413)

(assert (=> d!21133 (= lt!39434 e!54566)))

(declare-fun c!13370 () Bool)

(assert (=> d!21133 (= c!13370 lt!39435)))

(assert (=> d!21133 (= lt!39435 (containsKey!143 (toList!734 lt!39004) (_1!1102 lt!38779)))))

(assert (=> d!21133 (= (contains!744 lt!39004 (_1!1102 lt!38779)) lt!39432)))

(declare-fun b!83624 () Bool)

(declare-fun lt!39433 () Unit!2413)

(assert (=> b!83624 (= e!54566 lt!39433)))

(assert (=> b!83624 (= lt!39433 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 lt!39004) (_1!1102 lt!38779)))))

(assert (=> b!83624 (isDefined!92 (getValueByKey!140 (toList!734 lt!39004) (_1!1102 lt!38779)))))

(declare-fun b!83625 () Bool)

(declare-fun Unit!2443 () Unit!2413)

(assert (=> b!83625 (= e!54566 Unit!2443)))

(declare-fun b!83626 () Bool)

(assert (=> b!83626 (= e!54567 (isDefined!92 (getValueByKey!140 (toList!734 lt!39004) (_1!1102 lt!38779))))))

(assert (= (and d!21133 c!13370) b!83624))

(assert (= (and d!21133 (not c!13370)) b!83625))

(assert (= (and d!21133 (not res!43254)) b!83626))

(declare-fun m!86895 () Bool)

(assert (=> d!21133 m!86895))

(declare-fun m!86897 () Bool)

(assert (=> b!83624 m!86897))

(assert (=> b!83624 m!86009))

(assert (=> b!83624 m!86009))

(declare-fun m!86899 () Bool)

(assert (=> b!83624 m!86899))

(assert (=> b!83626 m!86009))

(assert (=> b!83626 m!86009))

(assert (=> b!83626 m!86899))

(assert (=> d!20917 d!21133))

(declare-fun b!83629 () Bool)

(declare-fun e!54569 () Option!146)

(assert (=> b!83629 (= e!54569 (getValueByKey!140 (t!5196 lt!39006) (_1!1102 lt!38779)))))

(declare-fun d!21135 () Bool)

(declare-fun c!13371 () Bool)

(assert (=> d!21135 (= c!13371 (and ((_ is Cons!1500) lt!39006) (= (_1!1102 (h!2090 lt!39006)) (_1!1102 lt!38779))))))

(declare-fun e!54568 () Option!146)

(assert (=> d!21135 (= (getValueByKey!140 lt!39006 (_1!1102 lt!38779)) e!54568)))

(declare-fun b!83627 () Bool)

(assert (=> b!83627 (= e!54568 (Some!145 (_2!1102 (h!2090 lt!39006))))))

(declare-fun b!83628 () Bool)

(assert (=> b!83628 (= e!54568 e!54569)))

(declare-fun c!13372 () Bool)

(assert (=> b!83628 (= c!13372 (and ((_ is Cons!1500) lt!39006) (not (= (_1!1102 (h!2090 lt!39006)) (_1!1102 lt!38779)))))))

(declare-fun b!83630 () Bool)

(assert (=> b!83630 (= e!54569 None!144)))

(assert (= (and d!21135 c!13371) b!83627))

(assert (= (and d!21135 (not c!13371)) b!83628))

(assert (= (and b!83628 c!13372) b!83629))

(assert (= (and b!83628 (not c!13372)) b!83630))

(declare-fun m!86901 () Bool)

(assert (=> b!83629 m!86901))

(assert (=> d!20917 d!21135))

(declare-fun d!21137 () Bool)

(assert (=> d!21137 (= (getValueByKey!140 lt!39006 (_1!1102 lt!38779)) (Some!145 (_2!1102 lt!38779)))))

(declare-fun lt!39436 () Unit!2413)

(assert (=> d!21137 (= lt!39436 (choose!493 lt!39006 (_1!1102 lt!38779) (_2!1102 lt!38779)))))

(declare-fun e!54570 () Bool)

(assert (=> d!21137 e!54570))

(declare-fun res!43255 () Bool)

(assert (=> d!21137 (=> (not res!43255) (not e!54570))))

(assert (=> d!21137 (= res!43255 (isStrictlySorted!284 lt!39006))))

(assert (=> d!21137 (= (lemmaContainsTupThenGetReturnValue!57 lt!39006 (_1!1102 lt!38779) (_2!1102 lt!38779)) lt!39436)))

(declare-fun b!83631 () Bool)

(declare-fun res!43256 () Bool)

(assert (=> b!83631 (=> (not res!43256) (not e!54570))))

(assert (=> b!83631 (= res!43256 (containsKey!143 lt!39006 (_1!1102 lt!38779)))))

(declare-fun b!83632 () Bool)

(assert (=> b!83632 (= e!54570 (contains!746 lt!39006 (tuple2!2183 (_1!1102 lt!38779) (_2!1102 lt!38779))))))

(assert (= (and d!21137 res!43255) b!83631))

(assert (= (and b!83631 res!43256) b!83632))

(assert (=> d!21137 m!86003))

(declare-fun m!86903 () Bool)

(assert (=> d!21137 m!86903))

(declare-fun m!86905 () Bool)

(assert (=> d!21137 m!86905))

(declare-fun m!86907 () Bool)

(assert (=> b!83631 m!86907))

(declare-fun m!86909 () Bool)

(assert (=> b!83632 m!86909))

(assert (=> d!20917 d!21137))

(declare-fun e!54571 () List!1504)

(declare-fun c!13373 () Bool)

(declare-fun b!83634 () Bool)

(declare-fun c!13376 () Bool)

(assert (=> b!83634 (= e!54571 (ite c!13376 (t!5196 (toList!734 lt!38768)) (ite c!13373 (Cons!1500 (h!2090 (toList!734 lt!38768)) (t!5196 (toList!734 lt!38768))) Nil!1501)))))

(declare-fun call!7852 () List!1504)

(declare-fun c!13374 () Bool)

(declare-fun bm!7849 () Bool)

(assert (=> bm!7849 (= call!7852 ($colon$colon!70 e!54571 (ite c!13374 (h!2090 (toList!734 lt!38768)) (tuple2!2183 (_1!1102 lt!38779) (_2!1102 lt!38779)))))))

(declare-fun c!13375 () Bool)

(assert (=> bm!7849 (= c!13375 c!13374)))

(declare-fun b!83635 () Bool)

(declare-fun e!54575 () List!1504)

(declare-fun call!7854 () List!1504)

(assert (=> b!83635 (= e!54575 call!7854)))

(declare-fun b!83636 () Bool)

(declare-fun e!54573 () List!1504)

(assert (=> b!83636 (= e!54573 call!7852)))

(declare-fun bm!7850 () Bool)

(assert (=> bm!7850 (= call!7854 call!7852)))

(declare-fun bm!7851 () Bool)

(declare-fun call!7853 () List!1504)

(assert (=> bm!7851 (= call!7853 call!7854)))

(declare-fun b!83637 () Bool)

(assert (=> b!83637 (= e!54571 (insertStrictlySorted!60 (t!5196 (toList!734 lt!38768)) (_1!1102 lt!38779) (_2!1102 lt!38779)))))

(declare-fun b!83638 () Bool)

(declare-fun e!54574 () List!1504)

(assert (=> b!83638 (= e!54574 call!7853)))

(declare-fun b!83639 () Bool)

(assert (=> b!83639 (= e!54573 e!54575)))

(assert (=> b!83639 (= c!13376 (and ((_ is Cons!1500) (toList!734 lt!38768)) (= (_1!1102 (h!2090 (toList!734 lt!38768))) (_1!1102 lt!38779))))))

(declare-fun b!83640 () Bool)

(declare-fun e!54572 () Bool)

(declare-fun lt!39437 () List!1504)

(assert (=> b!83640 (= e!54572 (contains!746 lt!39437 (tuple2!2183 (_1!1102 lt!38779) (_2!1102 lt!38779))))))

(declare-fun b!83633 () Bool)

(declare-fun res!43258 () Bool)

(assert (=> b!83633 (=> (not res!43258) (not e!54572))))

(assert (=> b!83633 (= res!43258 (containsKey!143 lt!39437 (_1!1102 lt!38779)))))

(declare-fun d!21139 () Bool)

(assert (=> d!21139 e!54572))

(declare-fun res!43257 () Bool)

(assert (=> d!21139 (=> (not res!43257) (not e!54572))))

(assert (=> d!21139 (= res!43257 (isStrictlySorted!284 lt!39437))))

(assert (=> d!21139 (= lt!39437 e!54573)))

(assert (=> d!21139 (= c!13374 (and ((_ is Cons!1500) (toList!734 lt!38768)) (bvslt (_1!1102 (h!2090 (toList!734 lt!38768))) (_1!1102 lt!38779))))))

(assert (=> d!21139 (isStrictlySorted!284 (toList!734 lt!38768))))

(assert (=> d!21139 (= (insertStrictlySorted!60 (toList!734 lt!38768) (_1!1102 lt!38779) (_2!1102 lt!38779)) lt!39437)))

(declare-fun b!83641 () Bool)

(assert (=> b!83641 (= e!54574 call!7853)))

(declare-fun b!83642 () Bool)

(assert (=> b!83642 (= c!13373 (and ((_ is Cons!1500) (toList!734 lt!38768)) (bvsgt (_1!1102 (h!2090 (toList!734 lt!38768))) (_1!1102 lt!38779))))))

(assert (=> b!83642 (= e!54575 e!54574)))

(assert (= (and d!21139 c!13374) b!83636))

(assert (= (and d!21139 (not c!13374)) b!83639))

(assert (= (and b!83639 c!13376) b!83635))

(assert (= (and b!83639 (not c!13376)) b!83642))

(assert (= (and b!83642 c!13373) b!83638))

(assert (= (and b!83642 (not c!13373)) b!83641))

(assert (= (or b!83638 b!83641) bm!7851))

(assert (= (or b!83635 bm!7851) bm!7850))

(assert (= (or b!83636 bm!7850) bm!7849))

(assert (= (and bm!7849 c!13375) b!83637))

(assert (= (and bm!7849 (not c!13375)) b!83634))

(assert (= (and d!21139 res!43257) b!83633))

(assert (= (and b!83633 res!43258) b!83640))

(declare-fun m!86911 () Bool)

(assert (=> d!21139 m!86911))

(declare-fun m!86913 () Bool)

(assert (=> d!21139 m!86913))

(declare-fun m!86915 () Bool)

(assert (=> b!83637 m!86915))

(declare-fun m!86917 () Bool)

(assert (=> bm!7849 m!86917))

(declare-fun m!86919 () Bool)

(assert (=> b!83633 m!86919))

(declare-fun m!86921 () Bool)

(assert (=> b!83640 m!86921))

(assert (=> d!20917 d!21139))

(declare-fun b!83643 () Bool)

(declare-fun e!54583 () Unit!2413)

(declare-fun Unit!2444 () Unit!2413)

(assert (=> b!83643 (= e!54583 Unit!2444)))

(declare-fun b!83644 () Bool)

(declare-fun e!54588 () Bool)

(declare-fun e!54576 () Bool)

(assert (=> b!83644 (= e!54588 e!54576)))

(declare-fun c!13381 () Bool)

(assert (=> b!83644 (= c!13381 (not (= (bvand (ite c!13224 (ite c!13215 lt!38982 lt!38985) (extraKeys!2159 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun call!7856 () ListLongMap!1437)

(declare-fun call!7861 () ListLongMap!1437)

(declare-fun call!7858 () ListLongMap!1437)

(declare-fun bm!7852 () Bool)

(declare-fun c!13382 () Bool)

(declare-fun call!7857 () ListLongMap!1437)

(declare-fun c!13377 () Bool)

(assert (=> bm!7852 (= call!7858 (+!105 (ite c!13382 call!7861 (ite c!13377 call!7856 call!7857)) (ite (or c!13382 c!13377) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13224 c!13215) lt!38784 (zeroValue!2210 newMap!16))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16))))))))

(declare-fun bm!7853 () Bool)

(declare-fun call!7860 () Bool)

(declare-fun lt!39451 () ListLongMap!1437)

(assert (=> bm!7853 (= call!7860 (contains!744 lt!39451 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!83645 () Bool)

(declare-fun e!54584 () Bool)

(assert (=> b!83645 (= e!54584 (= (apply!81 lt!39451 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)) (get!1198 (select (arr!1905 (ite (or c!13224 c!13217) (_values!2299 newMap!16) (array!4000 (store (arr!1905 (_values!2299 newMap!16)) (index!3081 lt!38961) (ValueCellFull!920 lt!38784)) (size!2148 (_values!2299 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!343 (defaultEntry!2316 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!83645 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2148 (ite (or c!13224 c!13217) (_values!2299 newMap!16) (array!4000 (store (arr!1905 (_values!2299 newMap!16)) (index!3081 lt!38961) (ValueCellFull!920 lt!38784)) (size!2148 (_values!2299 newMap!16)))))))))

(assert (=> b!83645 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))))))

(declare-fun b!83646 () Bool)

(declare-fun call!7859 () Bool)

(assert (=> b!83646 (= e!54576 (not call!7859))))

(declare-fun b!83647 () Bool)

(declare-fun e!54587 () Bool)

(assert (=> b!83647 (= e!54587 (validKeyInArray!0 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!7854 () Bool)

(assert (=> bm!7854 (= call!7859 (contains!744 lt!39451 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!54577 () Bool)

(declare-fun b!83649 () Bool)

(assert (=> b!83649 (= e!54577 (= (apply!81 lt!39451 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!13224 c!13215) lt!38784 (zeroValue!2210 newMap!16))))))

(declare-fun b!83650 () Bool)

(declare-fun res!43267 () Bool)

(assert (=> b!83650 (=> (not res!43267) (not e!54588))))

(declare-fun e!54585 () Bool)

(assert (=> b!83650 (= res!43267 e!54585)))

(declare-fun c!13378 () Bool)

(assert (=> b!83650 (= c!13378 (not (= (bvand (ite c!13224 (ite c!13215 lt!38982 lt!38985) (extraKeys!2159 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!7855 () Bool)

(declare-fun call!7855 () ListLongMap!1437)

(assert (=> bm!7855 (= call!7855 call!7858)))

(declare-fun b!83651 () Bool)

(assert (=> b!83651 (= e!54585 e!54577)))

(declare-fun res!43264 () Bool)

(assert (=> b!83651 (= res!43264 call!7860)))

(assert (=> b!83651 (=> (not res!43264) (not e!54577))))

(declare-fun b!83652 () Bool)

(declare-fun lt!39444 () Unit!2413)

(assert (=> b!83652 (= e!54583 lt!39444)))

(declare-fun lt!39447 () ListLongMap!1437)

(assert (=> b!83652 (= lt!39447 (getCurrentListMapNoExtraKeys!70 (_keys!3984 newMap!16) (ite (or c!13224 c!13217) (_values!2299 newMap!16) (array!4000 (store (arr!1905 (_values!2299 newMap!16)) (index!3081 lt!38961) (ValueCellFull!920 lt!38784)) (size!2148 (_values!2299 newMap!16)))) (mask!6334 newMap!16) (ite c!13224 (ite c!13215 lt!38982 lt!38985) (extraKeys!2159 newMap!16)) (ite (and c!13224 c!13215) lt!38784 (zeroValue!2210 newMap!16)) (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39440 () (_ BitVec 64))

(assert (=> b!83652 (= lt!39440 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39456 () (_ BitVec 64))

(assert (=> b!83652 (= lt!39456 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!39452 () Unit!2413)

(assert (=> b!83652 (= lt!39452 (addStillContains!57 lt!39447 lt!39440 (ite (and c!13224 c!13215) lt!38784 (zeroValue!2210 newMap!16)) lt!39456))))

(assert (=> b!83652 (contains!744 (+!105 lt!39447 (tuple2!2183 lt!39440 (ite (and c!13224 c!13215) lt!38784 (zeroValue!2210 newMap!16)))) lt!39456)))

(declare-fun lt!39442 () Unit!2413)

(assert (=> b!83652 (= lt!39442 lt!39452)))

(declare-fun lt!39459 () ListLongMap!1437)

(assert (=> b!83652 (= lt!39459 (getCurrentListMapNoExtraKeys!70 (_keys!3984 newMap!16) (ite (or c!13224 c!13217) (_values!2299 newMap!16) (array!4000 (store (arr!1905 (_values!2299 newMap!16)) (index!3081 lt!38961) (ValueCellFull!920 lt!38784)) (size!2148 (_values!2299 newMap!16)))) (mask!6334 newMap!16) (ite c!13224 (ite c!13215 lt!38982 lt!38985) (extraKeys!2159 newMap!16)) (ite (and c!13224 c!13215) lt!38784 (zeroValue!2210 newMap!16)) (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39441 () (_ BitVec 64))

(assert (=> b!83652 (= lt!39441 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39445 () (_ BitVec 64))

(assert (=> b!83652 (= lt!39445 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!39458 () Unit!2413)

(assert (=> b!83652 (= lt!39458 (addApplyDifferent!57 lt!39459 lt!39441 (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16)) lt!39445))))

(assert (=> b!83652 (= (apply!81 (+!105 lt!39459 (tuple2!2183 lt!39441 (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16)))) lt!39445) (apply!81 lt!39459 lt!39445))))

(declare-fun lt!39457 () Unit!2413)

(assert (=> b!83652 (= lt!39457 lt!39458)))

(declare-fun lt!39446 () ListLongMap!1437)

(assert (=> b!83652 (= lt!39446 (getCurrentListMapNoExtraKeys!70 (_keys!3984 newMap!16) (ite (or c!13224 c!13217) (_values!2299 newMap!16) (array!4000 (store (arr!1905 (_values!2299 newMap!16)) (index!3081 lt!38961) (ValueCellFull!920 lt!38784)) (size!2148 (_values!2299 newMap!16)))) (mask!6334 newMap!16) (ite c!13224 (ite c!13215 lt!38982 lt!38985) (extraKeys!2159 newMap!16)) (ite (and c!13224 c!13215) lt!38784 (zeroValue!2210 newMap!16)) (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39450 () (_ BitVec 64))

(assert (=> b!83652 (= lt!39450 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39455 () (_ BitVec 64))

(assert (=> b!83652 (= lt!39455 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!39449 () Unit!2413)

(assert (=> b!83652 (= lt!39449 (addApplyDifferent!57 lt!39446 lt!39450 (ite (and c!13224 c!13215) lt!38784 (zeroValue!2210 newMap!16)) lt!39455))))

(assert (=> b!83652 (= (apply!81 (+!105 lt!39446 (tuple2!2183 lt!39450 (ite (and c!13224 c!13215) lt!38784 (zeroValue!2210 newMap!16)))) lt!39455) (apply!81 lt!39446 lt!39455))))

(declare-fun lt!39448 () Unit!2413)

(assert (=> b!83652 (= lt!39448 lt!39449)))

(declare-fun lt!39453 () ListLongMap!1437)

(assert (=> b!83652 (= lt!39453 (getCurrentListMapNoExtraKeys!70 (_keys!3984 newMap!16) (ite (or c!13224 c!13217) (_values!2299 newMap!16) (array!4000 (store (arr!1905 (_values!2299 newMap!16)) (index!3081 lt!38961) (ValueCellFull!920 lt!38784)) (size!2148 (_values!2299 newMap!16)))) (mask!6334 newMap!16) (ite c!13224 (ite c!13215 lt!38982 lt!38985) (extraKeys!2159 newMap!16)) (ite (and c!13224 c!13215) lt!38784 (zeroValue!2210 newMap!16)) (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39443 () (_ BitVec 64))

(assert (=> b!83652 (= lt!39443 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39439 () (_ BitVec 64))

(assert (=> b!83652 (= lt!39439 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!83652 (= lt!39444 (addApplyDifferent!57 lt!39453 lt!39443 (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16)) lt!39439))))

(assert (=> b!83652 (= (apply!81 (+!105 lt!39453 (tuple2!2183 lt!39443 (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16)))) lt!39439) (apply!81 lt!39453 lt!39439))))

(declare-fun bm!7856 () Bool)

(assert (=> bm!7856 (= call!7861 (getCurrentListMapNoExtraKeys!70 (_keys!3984 newMap!16) (ite (or c!13224 c!13217) (_values!2299 newMap!16) (array!4000 (store (arr!1905 (_values!2299 newMap!16)) (index!3081 lt!38961) (ValueCellFull!920 lt!38784)) (size!2148 (_values!2299 newMap!16)))) (mask!6334 newMap!16) (ite c!13224 (ite c!13215 lt!38982 lt!38985) (extraKeys!2159 newMap!16)) (ite (and c!13224 c!13215) lt!38784 (zeroValue!2210 newMap!16)) (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun b!83653 () Bool)

(declare-fun e!54581 () ListLongMap!1437)

(assert (=> b!83653 (= e!54581 call!7855)))

(declare-fun bm!7857 () Bool)

(assert (=> bm!7857 (= call!7856 call!7861)))

(declare-fun d!21141 () Bool)

(assert (=> d!21141 e!54588))

(declare-fun res!43266 () Bool)

(assert (=> d!21141 (=> (not res!43266) (not e!54588))))

(assert (=> d!21141 (= res!43266 (or (bvsge #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))))))))

(declare-fun lt!39438 () ListLongMap!1437)

(assert (=> d!21141 (= lt!39451 lt!39438)))

(declare-fun lt!39454 () Unit!2413)

(assert (=> d!21141 (= lt!39454 e!54583)))

(declare-fun c!13379 () Bool)

(declare-fun e!54580 () Bool)

(assert (=> d!21141 (= c!13379 e!54580)))

(declare-fun res!43262 () Bool)

(assert (=> d!21141 (=> (not res!43262) (not e!54580))))

(assert (=> d!21141 (= res!43262 (bvslt #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))))))

(declare-fun e!54586 () ListLongMap!1437)

(assert (=> d!21141 (= lt!39438 e!54586)))

(assert (=> d!21141 (= c!13382 (and (not (= (bvand (ite c!13224 (ite c!13215 lt!38982 lt!38985) (extraKeys!2159 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!13224 (ite c!13215 lt!38982 lt!38985) (extraKeys!2159 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!21141 (validMask!0 (mask!6334 newMap!16))))

(assert (=> d!21141 (= (getCurrentListMap!429 (_keys!3984 newMap!16) (ite (or c!13224 c!13217) (_values!2299 newMap!16) (array!4000 (store (arr!1905 (_values!2299 newMap!16)) (index!3081 lt!38961) (ValueCellFull!920 lt!38784)) (size!2148 (_values!2299 newMap!16)))) (mask!6334 newMap!16) (ite c!13224 (ite c!13215 lt!38982 lt!38985) (extraKeys!2159 newMap!16)) (ite (and c!13224 c!13215) lt!38784 (zeroValue!2210 newMap!16)) (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) lt!39451)))

(declare-fun c!13380 () Bool)

(declare-fun b!83648 () Bool)

(assert (=> b!83648 (= c!13380 (and (not (= (bvand (ite c!13224 (ite c!13215 lt!38982 lt!38985) (extraKeys!2159 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!13224 (ite c!13215 lt!38982 lt!38985) (extraKeys!2159 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!54578 () ListLongMap!1437)

(assert (=> b!83648 (= e!54578 e!54581)))

(declare-fun b!83654 () Bool)

(declare-fun res!43265 () Bool)

(assert (=> b!83654 (=> (not res!43265) (not e!54588))))

(declare-fun e!54579 () Bool)

(assert (=> b!83654 (= res!43265 e!54579)))

(declare-fun res!43261 () Bool)

(assert (=> b!83654 (=> res!43261 e!54579)))

(assert (=> b!83654 (= res!43261 (not e!54587))))

(declare-fun res!43259 () Bool)

(assert (=> b!83654 (=> (not res!43259) (not e!54587))))

(assert (=> b!83654 (= res!43259 (bvslt #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))))))

(declare-fun bm!7858 () Bool)

(assert (=> bm!7858 (= call!7857 call!7856)))

(declare-fun b!83655 () Bool)

(assert (=> b!83655 (= e!54586 (+!105 call!7858 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16)))))))

(declare-fun b!83656 () Bool)

(assert (=> b!83656 (= e!54578 call!7855)))

(declare-fun b!83657 () Bool)

(declare-fun e!54582 () Bool)

(assert (=> b!83657 (= e!54576 e!54582)))

(declare-fun res!43260 () Bool)

(assert (=> b!83657 (= res!43260 call!7859)))

(assert (=> b!83657 (=> (not res!43260) (not e!54582))))

(declare-fun b!83658 () Bool)

(assert (=> b!83658 (= e!54581 call!7857)))

(declare-fun b!83659 () Bool)

(assert (=> b!83659 (= e!54586 e!54578)))

(assert (=> b!83659 (= c!13377 (and (not (= (bvand (ite c!13224 (ite c!13215 lt!38982 lt!38985) (extraKeys!2159 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!13224 (ite c!13215 lt!38982 lt!38985) (extraKeys!2159 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!83660 () Bool)

(assert (=> b!83660 (= e!54579 e!54584)))

(declare-fun res!43263 () Bool)

(assert (=> b!83660 (=> (not res!43263) (not e!54584))))

(assert (=> b!83660 (= res!43263 (contains!744 lt!39451 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!83660 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))))))

(declare-fun b!83661 () Bool)

(assert (=> b!83661 (= e!54585 (not call!7860))))

(declare-fun b!83662 () Bool)

(assert (=> b!83662 (= e!54582 (= (apply!81 lt!39451 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16))))))

(declare-fun b!83663 () Bool)

(assert (=> b!83663 (= e!54580 (validKeyInArray!0 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!21141 c!13382) b!83655))

(assert (= (and d!21141 (not c!13382)) b!83659))

(assert (= (and b!83659 c!13377) b!83656))

(assert (= (and b!83659 (not c!13377)) b!83648))

(assert (= (and b!83648 c!13380) b!83653))

(assert (= (and b!83648 (not c!13380)) b!83658))

(assert (= (or b!83653 b!83658) bm!7858))

(assert (= (or b!83656 bm!7858) bm!7857))

(assert (= (or b!83656 b!83653) bm!7855))

(assert (= (or b!83655 bm!7857) bm!7856))

(assert (= (or b!83655 bm!7855) bm!7852))

(assert (= (and d!21141 res!43262) b!83663))

(assert (= (and d!21141 c!13379) b!83652))

(assert (= (and d!21141 (not c!13379)) b!83643))

(assert (= (and d!21141 res!43266) b!83654))

(assert (= (and b!83654 res!43259) b!83647))

(assert (= (and b!83654 (not res!43261)) b!83660))

(assert (= (and b!83660 res!43263) b!83645))

(assert (= (and b!83654 res!43265) b!83650))

(assert (= (and b!83650 c!13378) b!83651))

(assert (= (and b!83650 (not c!13378)) b!83661))

(assert (= (and b!83651 res!43264) b!83649))

(assert (= (or b!83651 b!83661) bm!7853))

(assert (= (and b!83650 res!43267) b!83644))

(assert (= (and b!83644 c!13381) b!83657))

(assert (= (and b!83644 (not c!13381)) b!83646))

(assert (= (and b!83657 res!43260) b!83662))

(assert (= (or b!83657 b!83646) bm!7854))

(declare-fun b_lambda!3719 () Bool)

(assert (=> (not b_lambda!3719) (not b!83645)))

(assert (=> b!83645 t!5209))

(declare-fun b_and!5089 () Bool)

(assert (= b_and!5085 (and (=> t!5209 result!2895) b_and!5089)))

(assert (=> b!83645 t!5211))

(declare-fun b_and!5091 () Bool)

(assert (= b_and!5087 (and (=> t!5211 result!2897) b_and!5091)))

(assert (=> b!83663 m!86211))

(assert (=> b!83663 m!86211))

(assert (=> b!83663 m!86213))

(declare-fun m!86923 () Bool)

(assert (=> b!83645 m!86923))

(assert (=> b!83645 m!86211))

(declare-fun m!86925 () Bool)

(assert (=> b!83645 m!86925))

(assert (=> b!83645 m!86211))

(assert (=> b!83645 m!86219))

(assert (=> b!83645 m!86923))

(assert (=> b!83645 m!86219))

(declare-fun m!86927 () Bool)

(assert (=> b!83645 m!86927))

(assert (=> d!21141 m!86223))

(declare-fun m!86929 () Bool)

(assert (=> b!83662 m!86929))

(declare-fun m!86931 () Bool)

(assert (=> b!83652 m!86931))

(declare-fun m!86933 () Bool)

(assert (=> b!83652 m!86933))

(declare-fun m!86935 () Bool)

(assert (=> b!83652 m!86935))

(declare-fun m!86937 () Bool)

(assert (=> b!83652 m!86937))

(assert (=> b!83652 m!86933))

(declare-fun m!86939 () Bool)

(assert (=> b!83652 m!86939))

(declare-fun m!86941 () Bool)

(assert (=> b!83652 m!86941))

(declare-fun m!86943 () Bool)

(assert (=> b!83652 m!86943))

(declare-fun m!86945 () Bool)

(assert (=> b!83652 m!86945))

(declare-fun m!86947 () Bool)

(assert (=> b!83652 m!86947))

(declare-fun m!86949 () Bool)

(assert (=> b!83652 m!86949))

(declare-fun m!86951 () Bool)

(assert (=> b!83652 m!86951))

(assert (=> b!83652 m!86211))

(assert (=> b!83652 m!86947))

(assert (=> b!83652 m!86941))

(assert (=> b!83652 m!86935))

(declare-fun m!86953 () Bool)

(assert (=> b!83652 m!86953))

(declare-fun m!86955 () Bool)

(assert (=> b!83652 m!86955))

(declare-fun m!86957 () Bool)

(assert (=> b!83652 m!86957))

(declare-fun m!86959 () Bool)

(assert (=> b!83652 m!86959))

(declare-fun m!86961 () Bool)

(assert (=> b!83652 m!86961))

(declare-fun m!86963 () Bool)

(assert (=> b!83655 m!86963))

(declare-fun m!86965 () Bool)

(assert (=> bm!7852 m!86965))

(assert (=> b!83660 m!86211))

(assert (=> b!83660 m!86211))

(declare-fun m!86967 () Bool)

(assert (=> b!83660 m!86967))

(assert (=> bm!7856 m!86951))

(declare-fun m!86969 () Bool)

(assert (=> bm!7854 m!86969))

(assert (=> b!83647 m!86211))

(assert (=> b!83647 m!86211))

(assert (=> b!83647 m!86213))

(declare-fun m!86971 () Bool)

(assert (=> bm!7853 m!86971))

(declare-fun m!86973 () Bool)

(assert (=> b!83649 m!86973))

(assert (=> bm!7748 d!21141))

(assert (=> d!20909 d!20915))

(declare-fun d!21143 () Bool)

(assert (=> d!21143 (arrayNoDuplicates!0 (_keys!3984 (v!2632 (underlying!289 thiss!992))) from!355 Nil!1502)))

(assert (=> d!21143 true))

(declare-fun _$71!111 () Unit!2413)

(assert (=> d!21143 (= (choose!39 (_keys!3984 (v!2632 (underlying!289 thiss!992))) #b00000000000000000000000000000000 from!355) _$71!111)))

(declare-fun bs!3538 () Bool)

(assert (= bs!3538 d!21143))

(assert (=> bs!3538 m!85739))

(assert (=> d!20909 d!21143))

(declare-fun d!21145 () Bool)

(declare-fun e!54590 () Bool)

(assert (=> d!21145 e!54590))

(declare-fun res!43268 () Bool)

(assert (=> d!21145 (=> res!43268 e!54590)))

(declare-fun lt!39460 () Bool)

(assert (=> d!21145 (= res!43268 (not lt!39460))))

(declare-fun lt!39463 () Bool)

(assert (=> d!21145 (= lt!39460 lt!39463)))

(declare-fun lt!39462 () Unit!2413)

(declare-fun e!54589 () Unit!2413)

(assert (=> d!21145 (= lt!39462 e!54589)))

(declare-fun c!13383 () Bool)

(assert (=> d!21145 (= c!13383 lt!39463)))

(assert (=> d!21145 (= lt!39463 (containsKey!143 (toList!734 lt!39053) (_1!1102 lt!38775)))))

(assert (=> d!21145 (= (contains!744 lt!39053 (_1!1102 lt!38775)) lt!39460)))

(declare-fun b!83664 () Bool)

(declare-fun lt!39461 () Unit!2413)

(assert (=> b!83664 (= e!54589 lt!39461)))

(assert (=> b!83664 (= lt!39461 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 lt!39053) (_1!1102 lt!38775)))))

(assert (=> b!83664 (isDefined!92 (getValueByKey!140 (toList!734 lt!39053) (_1!1102 lt!38775)))))

(declare-fun b!83665 () Bool)

(declare-fun Unit!2445 () Unit!2413)

(assert (=> b!83665 (= e!54589 Unit!2445)))

(declare-fun b!83666 () Bool)

(assert (=> b!83666 (= e!54590 (isDefined!92 (getValueByKey!140 (toList!734 lt!39053) (_1!1102 lt!38775))))))

(assert (= (and d!21145 c!13383) b!83664))

(assert (= (and d!21145 (not c!13383)) b!83665))

(assert (= (and d!21145 (not res!43268)) b!83666))

(declare-fun m!86975 () Bool)

(assert (=> d!21145 m!86975))

(declare-fun m!86977 () Bool)

(assert (=> b!83664 m!86977))

(assert (=> b!83664 m!86127))

(assert (=> b!83664 m!86127))

(declare-fun m!86979 () Bool)

(assert (=> b!83664 m!86979))

(assert (=> b!83666 m!86127))

(assert (=> b!83666 m!86127))

(assert (=> b!83666 m!86979))

(assert (=> d!20937 d!21145))

(declare-fun b!83669 () Bool)

(declare-fun e!54592 () Option!146)

(assert (=> b!83669 (= e!54592 (getValueByKey!140 (t!5196 lt!39055) (_1!1102 lt!38775)))))

(declare-fun d!21147 () Bool)

(declare-fun c!13384 () Bool)

(assert (=> d!21147 (= c!13384 (and ((_ is Cons!1500) lt!39055) (= (_1!1102 (h!2090 lt!39055)) (_1!1102 lt!38775))))))

(declare-fun e!54591 () Option!146)

(assert (=> d!21147 (= (getValueByKey!140 lt!39055 (_1!1102 lt!38775)) e!54591)))

(declare-fun b!83667 () Bool)

(assert (=> b!83667 (= e!54591 (Some!145 (_2!1102 (h!2090 lt!39055))))))

(declare-fun b!83668 () Bool)

(assert (=> b!83668 (= e!54591 e!54592)))

(declare-fun c!13385 () Bool)

(assert (=> b!83668 (= c!13385 (and ((_ is Cons!1500) lt!39055) (not (= (_1!1102 (h!2090 lt!39055)) (_1!1102 lt!38775)))))))

(declare-fun b!83670 () Bool)

(assert (=> b!83670 (= e!54592 None!144)))

(assert (= (and d!21147 c!13384) b!83667))

(assert (= (and d!21147 (not c!13384)) b!83668))

(assert (= (and b!83668 c!13385) b!83669))

(assert (= (and b!83668 (not c!13385)) b!83670))

(declare-fun m!86981 () Bool)

(assert (=> b!83669 m!86981))

(assert (=> d!20937 d!21147))

(declare-fun d!21149 () Bool)

(assert (=> d!21149 (= (getValueByKey!140 lt!39055 (_1!1102 lt!38775)) (Some!145 (_2!1102 lt!38775)))))

(declare-fun lt!39464 () Unit!2413)

(assert (=> d!21149 (= lt!39464 (choose!493 lt!39055 (_1!1102 lt!38775) (_2!1102 lt!38775)))))

(declare-fun e!54593 () Bool)

(assert (=> d!21149 e!54593))

(declare-fun res!43269 () Bool)

(assert (=> d!21149 (=> (not res!43269) (not e!54593))))

(assert (=> d!21149 (= res!43269 (isStrictlySorted!284 lt!39055))))

(assert (=> d!21149 (= (lemmaContainsTupThenGetReturnValue!57 lt!39055 (_1!1102 lt!38775) (_2!1102 lt!38775)) lt!39464)))

(declare-fun b!83671 () Bool)

(declare-fun res!43270 () Bool)

(assert (=> b!83671 (=> (not res!43270) (not e!54593))))

(assert (=> b!83671 (= res!43270 (containsKey!143 lt!39055 (_1!1102 lt!38775)))))

(declare-fun b!83672 () Bool)

(assert (=> b!83672 (= e!54593 (contains!746 lt!39055 (tuple2!2183 (_1!1102 lt!38775) (_2!1102 lt!38775))))))

(assert (= (and d!21149 res!43269) b!83671))

(assert (= (and b!83671 res!43270) b!83672))

(assert (=> d!21149 m!86121))

(declare-fun m!86983 () Bool)

(assert (=> d!21149 m!86983))

(declare-fun m!86985 () Bool)

(assert (=> d!21149 m!86985))

(declare-fun m!86987 () Bool)

(assert (=> b!83671 m!86987))

(declare-fun m!86989 () Bool)

(assert (=> b!83672 m!86989))

(assert (=> d!20937 d!21149))

(declare-fun c!13386 () Bool)

(declare-fun b!83674 () Bool)

(declare-fun e!54594 () List!1504)

(declare-fun c!13389 () Bool)

(assert (=> b!83674 (= e!54594 (ite c!13389 (t!5196 (toList!734 lt!38773)) (ite c!13386 (Cons!1500 (h!2090 (toList!734 lt!38773)) (t!5196 (toList!734 lt!38773))) Nil!1501)))))

(declare-fun bm!7859 () Bool)

(declare-fun call!7862 () List!1504)

(declare-fun c!13387 () Bool)

(assert (=> bm!7859 (= call!7862 ($colon$colon!70 e!54594 (ite c!13387 (h!2090 (toList!734 lt!38773)) (tuple2!2183 (_1!1102 lt!38775) (_2!1102 lt!38775)))))))

(declare-fun c!13388 () Bool)

(assert (=> bm!7859 (= c!13388 c!13387)))

(declare-fun b!83675 () Bool)

(declare-fun e!54598 () List!1504)

(declare-fun call!7864 () List!1504)

(assert (=> b!83675 (= e!54598 call!7864)))

(declare-fun b!83676 () Bool)

(declare-fun e!54596 () List!1504)

(assert (=> b!83676 (= e!54596 call!7862)))

(declare-fun bm!7860 () Bool)

(assert (=> bm!7860 (= call!7864 call!7862)))

(declare-fun bm!7861 () Bool)

(declare-fun call!7863 () List!1504)

(assert (=> bm!7861 (= call!7863 call!7864)))

(declare-fun b!83677 () Bool)

(assert (=> b!83677 (= e!54594 (insertStrictlySorted!60 (t!5196 (toList!734 lt!38773)) (_1!1102 lt!38775) (_2!1102 lt!38775)))))

(declare-fun b!83678 () Bool)

(declare-fun e!54597 () List!1504)

(assert (=> b!83678 (= e!54597 call!7863)))

(declare-fun b!83679 () Bool)

(assert (=> b!83679 (= e!54596 e!54598)))

(assert (=> b!83679 (= c!13389 (and ((_ is Cons!1500) (toList!734 lt!38773)) (= (_1!1102 (h!2090 (toList!734 lt!38773))) (_1!1102 lt!38775))))))

(declare-fun b!83680 () Bool)

(declare-fun e!54595 () Bool)

(declare-fun lt!39465 () List!1504)

(assert (=> b!83680 (= e!54595 (contains!746 lt!39465 (tuple2!2183 (_1!1102 lt!38775) (_2!1102 lt!38775))))))

(declare-fun b!83673 () Bool)

(declare-fun res!43272 () Bool)

(assert (=> b!83673 (=> (not res!43272) (not e!54595))))

(assert (=> b!83673 (= res!43272 (containsKey!143 lt!39465 (_1!1102 lt!38775)))))

(declare-fun d!21151 () Bool)

(assert (=> d!21151 e!54595))

(declare-fun res!43271 () Bool)

(assert (=> d!21151 (=> (not res!43271) (not e!54595))))

(assert (=> d!21151 (= res!43271 (isStrictlySorted!284 lt!39465))))

(assert (=> d!21151 (= lt!39465 e!54596)))

(assert (=> d!21151 (= c!13387 (and ((_ is Cons!1500) (toList!734 lt!38773)) (bvslt (_1!1102 (h!2090 (toList!734 lt!38773))) (_1!1102 lt!38775))))))

(assert (=> d!21151 (isStrictlySorted!284 (toList!734 lt!38773))))

(assert (=> d!21151 (= (insertStrictlySorted!60 (toList!734 lt!38773) (_1!1102 lt!38775) (_2!1102 lt!38775)) lt!39465)))

(declare-fun b!83681 () Bool)

(assert (=> b!83681 (= e!54597 call!7863)))

(declare-fun b!83682 () Bool)

(assert (=> b!83682 (= c!13386 (and ((_ is Cons!1500) (toList!734 lt!38773)) (bvsgt (_1!1102 (h!2090 (toList!734 lt!38773))) (_1!1102 lt!38775))))))

(assert (=> b!83682 (= e!54598 e!54597)))

(assert (= (and d!21151 c!13387) b!83676))

(assert (= (and d!21151 (not c!13387)) b!83679))

(assert (= (and b!83679 c!13389) b!83675))

(assert (= (and b!83679 (not c!13389)) b!83682))

(assert (= (and b!83682 c!13386) b!83678))

(assert (= (and b!83682 (not c!13386)) b!83681))

(assert (= (or b!83678 b!83681) bm!7861))

(assert (= (or b!83675 bm!7861) bm!7860))

(assert (= (or b!83676 bm!7860) bm!7859))

(assert (= (and bm!7859 c!13388) b!83677))

(assert (= (and bm!7859 (not c!13388)) b!83674))

(assert (= (and d!21151 res!43271) b!83673))

(assert (= (and b!83673 res!43272) b!83680))

(declare-fun m!86991 () Bool)

(assert (=> d!21151 m!86991))

(declare-fun m!86993 () Bool)

(assert (=> d!21151 m!86993))

(declare-fun m!86995 () Bool)

(assert (=> b!83677 m!86995))

(declare-fun m!86997 () Bool)

(assert (=> bm!7859 m!86997))

(declare-fun m!86999 () Bool)

(assert (=> b!83673 m!86999))

(declare-fun m!87001 () Bool)

(assert (=> b!83680 m!87001))

(assert (=> d!20937 d!21151))

(declare-fun d!21153 () Bool)

(declare-fun isEmpty!339 (List!1504) Bool)

(assert (=> d!21153 (= (isEmpty!338 lt!39036) (isEmpty!339 (toList!734 lt!39036)))))

(declare-fun bs!3539 () Bool)

(assert (= bs!3539 d!21153))

(declare-fun m!87003 () Bool)

(assert (=> bs!3539 m!87003))

(assert (=> b!83137 d!21153))

(declare-fun d!21155 () Bool)

(declare-fun e!54599 () Bool)

(assert (=> d!21155 e!54599))

(declare-fun res!43274 () Bool)

(assert (=> d!21155 (=> (not res!43274) (not e!54599))))

(declare-fun lt!39467 () ListLongMap!1437)

(assert (=> d!21155 (= res!43274 (contains!744 lt!39467 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(declare-fun lt!39469 () List!1504)

(assert (=> d!21155 (= lt!39467 (ListLongMap!1438 lt!39469))))

(declare-fun lt!39466 () Unit!2413)

(declare-fun lt!39468 () Unit!2413)

(assert (=> d!21155 (= lt!39466 lt!39468)))

(assert (=> d!21155 (= (getValueByKey!140 lt!39469 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))) (Some!145 (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(assert (=> d!21155 (= lt!39468 (lemmaContainsTupThenGetReturnValue!57 lt!39469 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(assert (=> d!21155 (= lt!39469 (insertStrictlySorted!60 (toList!734 (+!105 lt!38773 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(assert (=> d!21155 (= (+!105 (+!105 lt!38773 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) lt!39467)))

(declare-fun b!83683 () Bool)

(declare-fun res!43273 () Bool)

(assert (=> b!83683 (=> (not res!43273) (not e!54599))))

(assert (=> b!83683 (= res!43273 (= (getValueByKey!140 (toList!734 lt!39467) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))) (Some!145 (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))

(declare-fun b!83684 () Bool)

(assert (=> b!83684 (= e!54599 (contains!746 (toList!734 lt!39467) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))

(assert (= (and d!21155 res!43274) b!83683))

(assert (= (and b!83683 res!43273) b!83684))

(declare-fun m!87005 () Bool)

(assert (=> d!21155 m!87005))

(declare-fun m!87007 () Bool)

(assert (=> d!21155 m!87007))

(declare-fun m!87009 () Bool)

(assert (=> d!21155 m!87009))

(declare-fun m!87011 () Bool)

(assert (=> d!21155 m!87011))

(declare-fun m!87013 () Bool)

(assert (=> b!83683 m!87013))

(declare-fun m!87015 () Bool)

(assert (=> b!83684 m!87015))

(assert (=> d!20931 d!21155))

(declare-fun d!21157 () Bool)

(declare-fun e!54600 () Bool)

(assert (=> d!21157 e!54600))

(declare-fun res!43276 () Bool)

(assert (=> d!21157 (=> (not res!43276) (not e!54600))))

(declare-fun lt!39471 () ListLongMap!1437)

(assert (=> d!21157 (= res!43276 (contains!744 lt!39471 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun lt!39473 () List!1504)

(assert (=> d!21157 (= lt!39471 (ListLongMap!1438 lt!39473))))

(declare-fun lt!39470 () Unit!2413)

(declare-fun lt!39472 () Unit!2413)

(assert (=> d!21157 (= lt!39470 lt!39472)))

(assert (=> d!21157 (= (getValueByKey!140 lt!39473 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))) (Some!145 (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(assert (=> d!21157 (= lt!39472 (lemmaContainsTupThenGetReturnValue!57 lt!39473 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(assert (=> d!21157 (= lt!39473 (insertStrictlySorted!60 (toList!734 lt!38773) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(assert (=> d!21157 (= (+!105 lt!38773 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) lt!39471)))

(declare-fun b!83685 () Bool)

(declare-fun res!43275 () Bool)

(assert (=> b!83685 (=> (not res!43275) (not e!54600))))

(assert (=> b!83685 (= res!43275 (= (getValueByKey!140 (toList!734 lt!39471) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))) (Some!145 (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(declare-fun b!83686 () Bool)

(assert (=> b!83686 (= e!54600 (contains!746 (toList!734 lt!39471) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))

(assert (= (and d!21157 res!43276) b!83685))

(assert (= (and b!83685 res!43275) b!83686))

(declare-fun m!87017 () Bool)

(assert (=> d!21157 m!87017))

(declare-fun m!87019 () Bool)

(assert (=> d!21157 m!87019))

(declare-fun m!87021 () Bool)

(assert (=> d!21157 m!87021))

(declare-fun m!87023 () Bool)

(assert (=> d!21157 m!87023))

(declare-fun m!87025 () Bool)

(assert (=> b!83685 m!87025))

(declare-fun m!87027 () Bool)

(assert (=> b!83686 m!87027))

(assert (=> d!20931 d!21157))

(declare-fun d!21159 () Bool)

(assert (=> d!21159 (= (+!105 (+!105 lt!38773 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) (+!105 (+!105 lt!38773 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))

(assert (=> d!21159 true))

(declare-fun _$28!139 () Unit!2413)

(assert (=> d!21159 (= (choose!491 lt!38773 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))) _$28!139)))

(declare-fun bs!3540 () Bool)

(assert (= bs!3540 d!21159))

(assert (=> bs!3540 m!86099))

(assert (=> bs!3540 m!86099))

(assert (=> bs!3540 m!86101))

(assert (=> bs!3540 m!86103))

(assert (=> bs!3540 m!86103))

(assert (=> bs!3540 m!86105))

(assert (=> d!20931 d!21159))

(declare-fun d!21161 () Bool)

(declare-fun e!54601 () Bool)

(assert (=> d!21161 e!54601))

(declare-fun res!43278 () Bool)

(assert (=> d!21161 (=> (not res!43278) (not e!54601))))

(declare-fun lt!39475 () ListLongMap!1437)

(assert (=> d!21161 (= res!43278 (contains!744 lt!39475 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun lt!39477 () List!1504)

(assert (=> d!21161 (= lt!39475 (ListLongMap!1438 lt!39477))))

(declare-fun lt!39474 () Unit!2413)

(declare-fun lt!39476 () Unit!2413)

(assert (=> d!21161 (= lt!39474 lt!39476)))

(assert (=> d!21161 (= (getValueByKey!140 lt!39477 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))) (Some!145 (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(assert (=> d!21161 (= lt!39476 (lemmaContainsTupThenGetReturnValue!57 lt!39477 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(assert (=> d!21161 (= lt!39477 (insertStrictlySorted!60 (toList!734 (+!105 lt!38773 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(assert (=> d!21161 (= (+!105 (+!105 lt!38773 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) lt!39475)))

(declare-fun b!83687 () Bool)

(declare-fun res!43277 () Bool)

(assert (=> b!83687 (=> (not res!43277) (not e!54601))))

(assert (=> b!83687 (= res!43277 (= (getValueByKey!140 (toList!734 lt!39475) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))) (Some!145 (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(declare-fun b!83688 () Bool)

(assert (=> b!83688 (= e!54601 (contains!746 (toList!734 lt!39475) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))

(assert (= (and d!21161 res!43278) b!83687))

(assert (= (and b!83687 res!43277) b!83688))

(declare-fun m!87029 () Bool)

(assert (=> d!21161 m!87029))

(declare-fun m!87031 () Bool)

(assert (=> d!21161 m!87031))

(declare-fun m!87033 () Bool)

(assert (=> d!21161 m!87033))

(declare-fun m!87035 () Bool)

(assert (=> d!21161 m!87035))

(declare-fun m!87037 () Bool)

(assert (=> b!83687 m!87037))

(declare-fun m!87039 () Bool)

(assert (=> b!83688 m!87039))

(assert (=> d!20931 d!21161))

(declare-fun d!21163 () Bool)

(declare-fun e!54602 () Bool)

(assert (=> d!21163 e!54602))

(declare-fun res!43280 () Bool)

(assert (=> d!21163 (=> (not res!43280) (not e!54602))))

(declare-fun lt!39479 () ListLongMap!1437)

(assert (=> d!21163 (= res!43280 (contains!744 lt!39479 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(declare-fun lt!39481 () List!1504)

(assert (=> d!21163 (= lt!39479 (ListLongMap!1438 lt!39481))))

(declare-fun lt!39478 () Unit!2413)

(declare-fun lt!39480 () Unit!2413)

(assert (=> d!21163 (= lt!39478 lt!39480)))

(assert (=> d!21163 (= (getValueByKey!140 lt!39481 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))) (Some!145 (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(assert (=> d!21163 (= lt!39480 (lemmaContainsTupThenGetReturnValue!57 lt!39481 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(assert (=> d!21163 (= lt!39481 (insertStrictlySorted!60 (toList!734 lt!38773) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(assert (=> d!21163 (= (+!105 lt!38773 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) lt!39479)))

(declare-fun b!83689 () Bool)

(declare-fun res!43279 () Bool)

(assert (=> b!83689 (=> (not res!43279) (not e!54602))))

(assert (=> b!83689 (= res!43279 (= (getValueByKey!140 (toList!734 lt!39479) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))) (Some!145 (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))

(declare-fun b!83690 () Bool)

(assert (=> b!83690 (= e!54602 (contains!746 (toList!734 lt!39479) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))

(assert (= (and d!21163 res!43280) b!83689))

(assert (= (and b!83689 res!43279) b!83690))

(declare-fun m!87041 () Bool)

(assert (=> d!21163 m!87041))

(declare-fun m!87043 () Bool)

(assert (=> d!21163 m!87043))

(declare-fun m!87045 () Bool)

(assert (=> d!21163 m!87045))

(declare-fun m!87047 () Bool)

(assert (=> d!21163 m!87047))

(declare-fun m!87049 () Bool)

(assert (=> b!83689 m!87049))

(declare-fun m!87051 () Bool)

(assert (=> b!83690 m!87051))

(assert (=> d!20931 d!21163))

(declare-fun d!21165 () Bool)

(declare-fun lt!39482 () Bool)

(assert (=> d!21165 (= lt!39482 (select (content!89 (toList!734 lt!39049)) lt!38772))))

(declare-fun e!54603 () Bool)

(assert (=> d!21165 (= lt!39482 e!54603)))

(declare-fun res!43282 () Bool)

(assert (=> d!21165 (=> (not res!43282) (not e!54603))))

(assert (=> d!21165 (= res!43282 ((_ is Cons!1500) (toList!734 lt!39049)))))

(assert (=> d!21165 (= (contains!746 (toList!734 lt!39049) lt!38772) lt!39482)))

(declare-fun b!83691 () Bool)

(declare-fun e!54604 () Bool)

(assert (=> b!83691 (= e!54603 e!54604)))

(declare-fun res!43281 () Bool)

(assert (=> b!83691 (=> res!43281 e!54604)))

(assert (=> b!83691 (= res!43281 (= (h!2090 (toList!734 lt!39049)) lt!38772))))

(declare-fun b!83692 () Bool)

(assert (=> b!83692 (= e!54604 (contains!746 (t!5196 (toList!734 lt!39049)) lt!38772))))

(assert (= (and d!21165 res!43282) b!83691))

(assert (= (and b!83691 (not res!43281)) b!83692))

(declare-fun m!87053 () Bool)

(assert (=> d!21165 m!87053))

(declare-fun m!87055 () Bool)

(assert (=> d!21165 m!87055))

(declare-fun m!87057 () Bool)

(assert (=> b!83692 m!87057))

(assert (=> b!83143 d!21165))

(assert (=> b!83075 d!20911))

(declare-fun d!21167 () Bool)

(declare-fun e!54607 () Bool)

(assert (=> d!21167 e!54607))

(declare-fun res!43285 () Bool)

(assert (=> d!21167 (=> (not res!43285) (not e!54607))))

(assert (=> d!21167 (= res!43285 (and (bvsge (index!3081 lt!38961) #b00000000000000000000000000000000) (bvslt (index!3081 lt!38961) (size!2147 (_keys!3984 newMap!16)))))))

(declare-fun lt!39485 () Unit!2413)

(declare-fun choose!499 (array!3997 array!3999 (_ BitVec 32) (_ BitVec 32) V!3017 V!3017 (_ BitVec 32) Int) Unit!2413)

(assert (=> d!21167 (= lt!39485 (choose!499 (_keys!3984 newMap!16) lt!38974 (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (index!3081 lt!38961) (defaultEntry!2316 newMap!16)))))

(assert (=> d!21167 (validMask!0 (mask!6334 newMap!16))))

(assert (=> d!21167 (= (lemmaValidKeyInArrayIsInListMap!90 (_keys!3984 newMap!16) lt!38974 (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (index!3081 lt!38961) (defaultEntry!2316 newMap!16)) lt!39485)))

(declare-fun b!83695 () Bool)

(assert (=> b!83695 (= e!54607 (contains!744 (getCurrentListMap!429 (_keys!3984 newMap!16) lt!38974 (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) (select (arr!1904 (_keys!3984 newMap!16)) (index!3081 lt!38961))))))

(assert (= (and d!21167 res!43285) b!83695))

(declare-fun m!87059 () Bool)

(assert (=> d!21167 m!87059))

(assert (=> d!21167 m!86223))

(declare-fun m!87061 () Bool)

(assert (=> b!83695 m!87061))

(assert (=> b!83695 m!85951))

(assert (=> b!83695 m!87061))

(assert (=> b!83695 m!85951))

(declare-fun m!87063 () Bool)

(assert (=> b!83695 m!87063))

(assert (=> b!83064 d!21167))

(declare-fun d!21169 () Bool)

(declare-fun e!54610 () Bool)

(assert (=> d!21169 e!54610))

(declare-fun res!43288 () Bool)

(assert (=> d!21169 (=> (not res!43288) (not e!54610))))

(assert (=> d!21169 (= res!43288 (and (bvsge (index!3081 lt!38961) #b00000000000000000000000000000000) (bvslt (index!3081 lt!38961) (size!2148 (_values!2299 newMap!16)))))))

(declare-fun lt!39488 () Unit!2413)

(declare-fun choose!500 (array!3997 array!3999 (_ BitVec 32) (_ BitVec 32) V!3017 V!3017 (_ BitVec 32) (_ BitVec 64) V!3017 Int) Unit!2413)

(assert (=> d!21169 (= lt!39488 (choose!500 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (index!3081 lt!38961) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784 (defaultEntry!2316 newMap!16)))))

(assert (=> d!21169 (validMask!0 (mask!6334 newMap!16))))

(assert (=> d!21169 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!30 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (index!3081 lt!38961) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784 (defaultEntry!2316 newMap!16)) lt!39488)))

(declare-fun b!83698 () Bool)

(assert (=> b!83698 (= e!54610 (= (+!105 (getCurrentListMap!429 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) (getCurrentListMap!429 (_keys!3984 newMap!16) (array!4000 (store (arr!1905 (_values!2299 newMap!16)) (index!3081 lt!38961) (ValueCellFull!920 lt!38784)) (size!2148 (_values!2299 newMap!16))) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16))))))

(assert (= (and d!21169 res!43288) b!83698))

(assert (=> d!21169 m!85721))

(declare-fun m!87065 () Bool)

(assert (=> d!21169 m!87065))

(assert (=> d!21169 m!86223))

(assert (=> b!83698 m!85945))

(assert (=> b!83698 m!85945))

(assert (=> b!83698 m!86811))

(assert (=> b!83698 m!85941))

(declare-fun m!87067 () Bool)

(assert (=> b!83698 m!87067))

(assert (=> b!83064 d!21169))

(declare-fun d!21171 () Bool)

(declare-fun e!54612 () Bool)

(assert (=> d!21171 e!54612))

(declare-fun res!43289 () Bool)

(assert (=> d!21171 (=> res!43289 e!54612)))

(declare-fun lt!39489 () Bool)

(assert (=> d!21171 (= res!43289 (not lt!39489))))

(declare-fun lt!39492 () Bool)

(assert (=> d!21171 (= lt!39489 lt!39492)))

(declare-fun lt!39491 () Unit!2413)

(declare-fun e!54611 () Unit!2413)

(assert (=> d!21171 (= lt!39491 e!54611)))

(declare-fun c!13390 () Bool)

(assert (=> d!21171 (= c!13390 lt!39492)))

(assert (=> d!21171 (= lt!39492 (containsKey!143 (toList!734 (getCurrentListMap!429 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))

(assert (=> d!21171 (= (contains!744 (getCurrentListMap!429 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) lt!39489)))

(declare-fun b!83699 () Bool)

(declare-fun lt!39490 () Unit!2413)

(assert (=> b!83699 (= e!54611 lt!39490)))

(assert (=> b!83699 (= lt!39490 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 (getCurrentListMap!429 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))

(assert (=> b!83699 (isDefined!92 (getValueByKey!140 (toList!734 (getCurrentListMap!429 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))

(declare-fun b!83700 () Bool)

(declare-fun Unit!2446 () Unit!2413)

(assert (=> b!83700 (= e!54611 Unit!2446)))

(declare-fun b!83701 () Bool)

(assert (=> b!83701 (= e!54612 (isDefined!92 (getValueByKey!140 (toList!734 (getCurrentListMap!429 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355))))))

(assert (= (and d!21171 c!13390) b!83699))

(assert (= (and d!21171 (not c!13390)) b!83700))

(assert (= (and d!21171 (not res!43289)) b!83701))

(assert (=> d!21171 m!85721))

(declare-fun m!87069 () Bool)

(assert (=> d!21171 m!87069))

(assert (=> b!83699 m!85721))

(declare-fun m!87071 () Bool)

(assert (=> b!83699 m!87071))

(assert (=> b!83699 m!85721))

(declare-fun m!87073 () Bool)

(assert (=> b!83699 m!87073))

(assert (=> b!83699 m!87073))

(declare-fun m!87075 () Bool)

(assert (=> b!83699 m!87075))

(assert (=> b!83701 m!85721))

(assert (=> b!83701 m!87073))

(assert (=> b!83701 m!87073))

(assert (=> b!83701 m!87075))

(assert (=> b!83064 d!21171))

(assert (=> b!83064 d!20959))

(assert (=> bm!7764 d!21013))

(assert (=> b!83133 d!21007))

(assert (=> bm!7796 d!20925))

(declare-fun b!83718 () Bool)

(declare-fun res!43299 () Bool)

(declare-fun e!54623 () Bool)

(assert (=> b!83718 (=> (not res!43299) (not e!54623))))

(declare-fun lt!39497 () SeekEntryResult!236)

(assert (=> b!83718 (= res!43299 (= (select (arr!1904 (_keys!3984 newMap!16)) (index!3083 lt!39497)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!83718 (and (bvsge (index!3083 lt!39497) #b00000000000000000000000000000000) (bvslt (index!3083 lt!39497) (size!2147 (_keys!3984 newMap!16))))))

(declare-fun b!83720 () Bool)

(declare-fun e!54621 () Bool)

(declare-fun e!54622 () Bool)

(assert (=> b!83720 (= e!54621 e!54622)))

(declare-fun c!13396 () Bool)

(assert (=> b!83720 (= c!13396 ((_ is MissingVacant!236) lt!39497))))

(declare-fun c!13395 () Bool)

(declare-fun call!7869 () Bool)

(declare-fun bm!7866 () Bool)

(assert (=> bm!7866 (= call!7869 (inRange!0 (ite c!13395 (index!3080 lt!39497) (index!3083 lt!39497)) (mask!6334 newMap!16)))))

(declare-fun b!83721 () Bool)

(assert (=> b!83721 (= e!54622 ((_ is Undefined!236) lt!39497))))

(declare-fun b!83722 () Bool)

(declare-fun e!54624 () Bool)

(declare-fun call!7870 () Bool)

(assert (=> b!83722 (= e!54624 (not call!7870))))

(declare-fun b!83723 () Bool)

(declare-fun res!43301 () Bool)

(assert (=> b!83723 (=> (not res!43301) (not e!54623))))

(assert (=> b!83723 (= res!43301 call!7869)))

(assert (=> b!83723 (= e!54622 e!54623)))

(declare-fun bm!7867 () Bool)

(assert (=> bm!7867 (= call!7870 (arrayContainsKey!0 (_keys!3984 newMap!16) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!83719 () Bool)

(assert (=> b!83719 (= e!54621 e!54624)))

(declare-fun res!43300 () Bool)

(assert (=> b!83719 (= res!43300 call!7869)))

(assert (=> b!83719 (=> (not res!43300) (not e!54624))))

(declare-fun d!21173 () Bool)

(assert (=> d!21173 e!54621))

(assert (=> d!21173 (= c!13395 ((_ is MissingZero!236) lt!39497))))

(assert (=> d!21173 (= lt!39497 (seekEntryOrOpen!0 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (_keys!3984 newMap!16) (mask!6334 newMap!16)))))

(declare-fun lt!39498 () Unit!2413)

(declare-fun choose!501 (array!3997 array!3999 (_ BitVec 32) (_ BitVec 32) V!3017 V!3017 (_ BitVec 64) Int) Unit!2413)

(assert (=> d!21173 (= lt!39498 (choose!501 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (defaultEntry!2316 newMap!16)))))

(assert (=> d!21173 (validMask!0 (mask!6334 newMap!16))))

(assert (=> d!21173 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!30 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (defaultEntry!2316 newMap!16)) lt!39498)))

(declare-fun b!83724 () Bool)

(assert (=> b!83724 (and (bvsge (index!3080 lt!39497) #b00000000000000000000000000000000) (bvslt (index!3080 lt!39497) (size!2147 (_keys!3984 newMap!16))))))

(declare-fun res!43298 () Bool)

(assert (=> b!83724 (= res!43298 (= (select (arr!1904 (_keys!3984 newMap!16)) (index!3080 lt!39497)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!83724 (=> (not res!43298) (not e!54624))))

(declare-fun b!83725 () Bool)

(assert (=> b!83725 (= e!54623 (not call!7870))))

(assert (= (and d!21173 c!13395) b!83719))

(assert (= (and d!21173 (not c!13395)) b!83720))

(assert (= (and b!83719 res!43300) b!83724))

(assert (= (and b!83724 res!43298) b!83722))

(assert (= (and b!83720 c!13396) b!83723))

(assert (= (and b!83720 (not c!13396)) b!83721))

(assert (= (and b!83723 res!43301) b!83718))

(assert (= (and b!83718 res!43299) b!83725))

(assert (= (or b!83719 b!83723) bm!7866))

(assert (= (or b!83722 b!83725) bm!7867))

(declare-fun m!87077 () Bool)

(assert (=> b!83718 m!87077))

(declare-fun m!87079 () Bool)

(assert (=> bm!7866 m!87079))

(assert (=> bm!7867 m!85721))

(assert (=> bm!7867 m!85979))

(assert (=> d!21173 m!85721))

(assert (=> d!21173 m!85939))

(assert (=> d!21173 m!85721))

(declare-fun m!87081 () Bool)

(assert (=> d!21173 m!87081))

(assert (=> d!21173 m!86223))

(declare-fun m!87083 () Bool)

(assert (=> b!83724 m!87083))

(assert (=> bm!7769 d!21173))

(declare-fun d!21175 () Bool)

(declare-fun e!54625 () Bool)

(assert (=> d!21175 e!54625))

(declare-fun res!43303 () Bool)

(assert (=> d!21175 (=> (not res!43303) (not e!54625))))

(declare-fun lt!39500 () ListLongMap!1437)

(assert (=> d!21175 (= res!43303 (contains!744 lt!39500 (_1!1102 (ite c!13224 (ite c!13215 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))

(declare-fun lt!39502 () List!1504)

(assert (=> d!21175 (= lt!39500 (ListLongMap!1438 lt!39502))))

(declare-fun lt!39499 () Unit!2413)

(declare-fun lt!39501 () Unit!2413)

(assert (=> d!21175 (= lt!39499 lt!39501)))

(assert (=> d!21175 (= (getValueByKey!140 lt!39502 (_1!1102 (ite c!13224 (ite c!13215 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))) (Some!145 (_2!1102 (ite c!13224 (ite c!13215 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))

(assert (=> d!21175 (= lt!39501 (lemmaContainsTupThenGetReturnValue!57 lt!39502 (_1!1102 (ite c!13224 (ite c!13215 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))) (_2!1102 (ite c!13224 (ite c!13215 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))

(assert (=> d!21175 (= lt!39502 (insertStrictlySorted!60 (toList!734 e!54229) (_1!1102 (ite c!13224 (ite c!13215 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))) (_2!1102 (ite c!13224 (ite c!13215 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))

(assert (=> d!21175 (= (+!105 e!54229 (ite c!13224 (ite c!13215 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))) lt!39500)))

(declare-fun b!83726 () Bool)

(declare-fun res!43302 () Bool)

(assert (=> b!83726 (=> (not res!43302) (not e!54625))))

(assert (=> b!83726 (= res!43302 (= (getValueByKey!140 (toList!734 lt!39500) (_1!1102 (ite c!13224 (ite c!13215 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))) (Some!145 (_2!1102 (ite c!13224 (ite c!13215 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))))

(declare-fun b!83727 () Bool)

(assert (=> b!83727 (= e!54625 (contains!746 (toList!734 lt!39500) (ite c!13224 (ite c!13215 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(assert (= (and d!21175 res!43303) b!83726))

(assert (= (and b!83726 res!43302) b!83727))

(declare-fun m!87085 () Bool)

(assert (=> d!21175 m!87085))

(declare-fun m!87087 () Bool)

(assert (=> d!21175 m!87087))

(declare-fun m!87089 () Bool)

(assert (=> d!21175 m!87089))

(declare-fun m!87091 () Bool)

(assert (=> d!21175 m!87091))

(declare-fun m!87093 () Bool)

(assert (=> b!83726 m!87093))

(declare-fun m!87095 () Bool)

(assert (=> b!83727 m!87095))

(assert (=> bm!7758 d!21175))

(assert (=> d!20949 d!20935))

(declare-fun d!21177 () Bool)

(declare-fun e!54627 () Bool)

(assert (=> d!21177 e!54627))

(declare-fun res!43304 () Bool)

(assert (=> d!21177 (=> res!43304 e!54627)))

(declare-fun lt!39503 () Bool)

(assert (=> d!21177 (= res!43304 (not lt!39503))))

(declare-fun lt!39506 () Bool)

(assert (=> d!21177 (= lt!39503 lt!39506)))

(declare-fun lt!39505 () Unit!2413)

(declare-fun e!54626 () Unit!2413)

(assert (=> d!21177 (= lt!39505 e!54626)))

(declare-fun c!13397 () Bool)

(assert (=> d!21177 (= c!13397 lt!39506)))

(assert (=> d!21177 (= lt!39506 (containsKey!143 (toList!734 lt!39044) (_1!1102 lt!38775)))))

(assert (=> d!21177 (= (contains!744 lt!39044 (_1!1102 lt!38775)) lt!39503)))

(declare-fun b!83728 () Bool)

(declare-fun lt!39504 () Unit!2413)

(assert (=> b!83728 (= e!54626 lt!39504)))

(assert (=> b!83728 (= lt!39504 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 lt!39044) (_1!1102 lt!38775)))))

(assert (=> b!83728 (isDefined!92 (getValueByKey!140 (toList!734 lt!39044) (_1!1102 lt!38775)))))

(declare-fun b!83729 () Bool)

(declare-fun Unit!2447 () Unit!2413)

(assert (=> b!83729 (= e!54626 Unit!2447)))

(declare-fun b!83730 () Bool)

(assert (=> b!83730 (= e!54627 (isDefined!92 (getValueByKey!140 (toList!734 lt!39044) (_1!1102 lt!38775))))))

(assert (= (and d!21177 c!13397) b!83728))

(assert (= (and d!21177 (not c!13397)) b!83729))

(assert (= (and d!21177 (not res!43304)) b!83730))

(declare-fun m!87097 () Bool)

(assert (=> d!21177 m!87097))

(declare-fun m!87099 () Bool)

(assert (=> b!83728 m!87099))

(assert (=> b!83728 m!86093))

(assert (=> b!83728 m!86093))

(declare-fun m!87101 () Bool)

(assert (=> b!83728 m!87101))

(assert (=> b!83730 m!86093))

(assert (=> b!83730 m!86093))

(assert (=> b!83730 m!87101))

(assert (=> d!20929 d!21177))

(declare-fun b!83733 () Bool)

(declare-fun e!54629 () Option!146)

(assert (=> b!83733 (= e!54629 (getValueByKey!140 (t!5196 lt!39046) (_1!1102 lt!38775)))))

(declare-fun d!21179 () Bool)

(declare-fun c!13398 () Bool)

(assert (=> d!21179 (= c!13398 (and ((_ is Cons!1500) lt!39046) (= (_1!1102 (h!2090 lt!39046)) (_1!1102 lt!38775))))))

(declare-fun e!54628 () Option!146)

(assert (=> d!21179 (= (getValueByKey!140 lt!39046 (_1!1102 lt!38775)) e!54628)))

(declare-fun b!83731 () Bool)

(assert (=> b!83731 (= e!54628 (Some!145 (_2!1102 (h!2090 lt!39046))))))

(declare-fun b!83732 () Bool)

(assert (=> b!83732 (= e!54628 e!54629)))

(declare-fun c!13399 () Bool)

(assert (=> b!83732 (= c!13399 (and ((_ is Cons!1500) lt!39046) (not (= (_1!1102 (h!2090 lt!39046)) (_1!1102 lt!38775)))))))

(declare-fun b!83734 () Bool)

(assert (=> b!83734 (= e!54629 None!144)))

(assert (= (and d!21179 c!13398) b!83731))

(assert (= (and d!21179 (not c!13398)) b!83732))

(assert (= (and b!83732 c!13399) b!83733))

(assert (= (and b!83732 (not c!13399)) b!83734))

(declare-fun m!87103 () Bool)

(assert (=> b!83733 m!87103))

(assert (=> d!20929 d!21179))

(declare-fun d!21181 () Bool)

(assert (=> d!21181 (= (getValueByKey!140 lt!39046 (_1!1102 lt!38775)) (Some!145 (_2!1102 lt!38775)))))

(declare-fun lt!39507 () Unit!2413)

(assert (=> d!21181 (= lt!39507 (choose!493 lt!39046 (_1!1102 lt!38775) (_2!1102 lt!38775)))))

(declare-fun e!54630 () Bool)

(assert (=> d!21181 e!54630))

(declare-fun res!43305 () Bool)

(assert (=> d!21181 (=> (not res!43305) (not e!54630))))

(assert (=> d!21181 (= res!43305 (isStrictlySorted!284 lt!39046))))

(assert (=> d!21181 (= (lemmaContainsTupThenGetReturnValue!57 lt!39046 (_1!1102 lt!38775) (_2!1102 lt!38775)) lt!39507)))

(declare-fun b!83735 () Bool)

(declare-fun res!43306 () Bool)

(assert (=> b!83735 (=> (not res!43306) (not e!54630))))

(assert (=> b!83735 (= res!43306 (containsKey!143 lt!39046 (_1!1102 lt!38775)))))

(declare-fun b!83736 () Bool)

(assert (=> b!83736 (= e!54630 (contains!746 lt!39046 (tuple2!2183 (_1!1102 lt!38775) (_2!1102 lt!38775))))))

(assert (= (and d!21181 res!43305) b!83735))

(assert (= (and b!83735 res!43306) b!83736))

(assert (=> d!21181 m!86087))

(declare-fun m!87105 () Bool)

(assert (=> d!21181 m!87105))

(declare-fun m!87107 () Bool)

(assert (=> d!21181 m!87107))

(declare-fun m!87109 () Bool)

(assert (=> b!83735 m!87109))

(declare-fun m!87111 () Bool)

(assert (=> b!83736 m!87111))

(assert (=> d!20929 d!21181))

(declare-fun e!54631 () List!1504)

(declare-fun c!13403 () Bool)

(declare-fun b!83738 () Bool)

(declare-fun c!13400 () Bool)

(assert (=> b!83738 (= e!54631 (ite c!13403 (t!5196 (toList!734 lt!38771)) (ite c!13400 (Cons!1500 (h!2090 (toList!734 lt!38771)) (t!5196 (toList!734 lt!38771))) Nil!1501)))))

(declare-fun bm!7868 () Bool)

(declare-fun call!7871 () List!1504)

(declare-fun c!13401 () Bool)

(assert (=> bm!7868 (= call!7871 ($colon$colon!70 e!54631 (ite c!13401 (h!2090 (toList!734 lt!38771)) (tuple2!2183 (_1!1102 lt!38775) (_2!1102 lt!38775)))))))

(declare-fun c!13402 () Bool)

(assert (=> bm!7868 (= c!13402 c!13401)))

(declare-fun b!83739 () Bool)

(declare-fun e!54635 () List!1504)

(declare-fun call!7873 () List!1504)

(assert (=> b!83739 (= e!54635 call!7873)))

(declare-fun b!83740 () Bool)

(declare-fun e!54633 () List!1504)

(assert (=> b!83740 (= e!54633 call!7871)))

(declare-fun bm!7869 () Bool)

(assert (=> bm!7869 (= call!7873 call!7871)))

(declare-fun bm!7870 () Bool)

(declare-fun call!7872 () List!1504)

(assert (=> bm!7870 (= call!7872 call!7873)))

(declare-fun b!83741 () Bool)

(assert (=> b!83741 (= e!54631 (insertStrictlySorted!60 (t!5196 (toList!734 lt!38771)) (_1!1102 lt!38775) (_2!1102 lt!38775)))))

(declare-fun b!83742 () Bool)

(declare-fun e!54634 () List!1504)

(assert (=> b!83742 (= e!54634 call!7872)))

(declare-fun b!83743 () Bool)

(assert (=> b!83743 (= e!54633 e!54635)))

(assert (=> b!83743 (= c!13403 (and ((_ is Cons!1500) (toList!734 lt!38771)) (= (_1!1102 (h!2090 (toList!734 lt!38771))) (_1!1102 lt!38775))))))

(declare-fun b!83744 () Bool)

(declare-fun e!54632 () Bool)

(declare-fun lt!39508 () List!1504)

(assert (=> b!83744 (= e!54632 (contains!746 lt!39508 (tuple2!2183 (_1!1102 lt!38775) (_2!1102 lt!38775))))))

(declare-fun b!83737 () Bool)

(declare-fun res!43308 () Bool)

(assert (=> b!83737 (=> (not res!43308) (not e!54632))))

(assert (=> b!83737 (= res!43308 (containsKey!143 lt!39508 (_1!1102 lt!38775)))))

(declare-fun d!21183 () Bool)

(assert (=> d!21183 e!54632))

(declare-fun res!43307 () Bool)

(assert (=> d!21183 (=> (not res!43307) (not e!54632))))

(assert (=> d!21183 (= res!43307 (isStrictlySorted!284 lt!39508))))

(assert (=> d!21183 (= lt!39508 e!54633)))

(assert (=> d!21183 (= c!13401 (and ((_ is Cons!1500) (toList!734 lt!38771)) (bvslt (_1!1102 (h!2090 (toList!734 lt!38771))) (_1!1102 lt!38775))))))

(assert (=> d!21183 (isStrictlySorted!284 (toList!734 lt!38771))))

(assert (=> d!21183 (= (insertStrictlySorted!60 (toList!734 lt!38771) (_1!1102 lt!38775) (_2!1102 lt!38775)) lt!39508)))

(declare-fun b!83745 () Bool)

(assert (=> b!83745 (= e!54634 call!7872)))

(declare-fun b!83746 () Bool)

(assert (=> b!83746 (= c!13400 (and ((_ is Cons!1500) (toList!734 lt!38771)) (bvsgt (_1!1102 (h!2090 (toList!734 lt!38771))) (_1!1102 lt!38775))))))

(assert (=> b!83746 (= e!54635 e!54634)))

(assert (= (and d!21183 c!13401) b!83740))

(assert (= (and d!21183 (not c!13401)) b!83743))

(assert (= (and b!83743 c!13403) b!83739))

(assert (= (and b!83743 (not c!13403)) b!83746))

(assert (= (and b!83746 c!13400) b!83742))

(assert (= (and b!83746 (not c!13400)) b!83745))

(assert (= (or b!83742 b!83745) bm!7870))

(assert (= (or b!83739 bm!7870) bm!7869))

(assert (= (or b!83740 bm!7869) bm!7868))

(assert (= (and bm!7868 c!13402) b!83741))

(assert (= (and bm!7868 (not c!13402)) b!83738))

(assert (= (and d!21183 res!43307) b!83737))

(assert (= (and b!83737 res!43308) b!83744))

(declare-fun m!87113 () Bool)

(assert (=> d!21183 m!87113))

(assert (=> d!21183 m!86387))

(declare-fun m!87115 () Bool)

(assert (=> b!83741 m!87115))

(declare-fun m!87117 () Bool)

(assert (=> bm!7868 m!87117))

(declare-fun m!87119 () Bool)

(assert (=> b!83737 m!87119))

(declare-fun m!87121 () Bool)

(assert (=> b!83744 m!87121))

(assert (=> d!20929 d!21183))

(declare-fun d!21185 () Bool)

(declare-fun e!54638 () Bool)

(assert (=> d!21185 e!54638))

(declare-fun c!13406 () Bool)

(assert (=> d!21185 (= c!13406 (and (not (= (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!21185 true))

(declare-fun _$29!105 () Unit!2413)

(assert (=> d!21185 (= (choose!490 (_keys!3984 (v!2632 (underlying!289 thiss!992))) (_values!2299 (v!2632 (underlying!289 thiss!992))) (mask!6334 (v!2632 (underlying!289 thiss!992))) (extraKeys!2159 (v!2632 (underlying!289 thiss!992))) (zeroValue!2210 (v!2632 (underlying!289 thiss!992))) (minValue!2210 (v!2632 (underlying!289 thiss!992))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2316 (v!2632 (underlying!289 thiss!992)))) _$29!105)))

(declare-fun b!83751 () Bool)

(assert (=> b!83751 (= e!54638 (arrayContainsKey!0 (_keys!3984 (v!2632 (underlying!289 thiss!992))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!83752 () Bool)

(assert (=> b!83752 (= e!54638 (ite (= (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2159 (v!2632 (underlying!289 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2159 (v!2632 (underlying!289 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!21185 c!13406) b!83751))

(assert (= (and d!21185 (not c!13406)) b!83752))

(assert (=> b!83751 m!85721))

(assert (=> b!83751 m!85743))

(assert (=> d!20913 d!21185))

(assert (=> d!20913 d!20935))

(declare-fun d!21187 () Bool)

(declare-fun isEmpty!340 (Option!146) Bool)

(assert (=> d!21187 (= (isDefined!92 (getValueByKey!140 (toList!734 lt!38770) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355))) (not (isEmpty!340 (getValueByKey!140 (toList!734 lt!38770) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))))

(declare-fun bs!3541 () Bool)

(assert (= bs!3541 d!21187))

(assert (=> bs!3541 m!85925))

(declare-fun m!87123 () Bool)

(assert (=> bs!3541 m!87123))

(assert (=> b!82938 d!21187))

(declare-fun e!54640 () Option!146)

(declare-fun b!83755 () Bool)

(assert (=> b!83755 (= e!54640 (getValueByKey!140 (t!5196 (toList!734 lt!38770)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))

(declare-fun d!21189 () Bool)

(declare-fun c!13407 () Bool)

(assert (=> d!21189 (= c!13407 (and ((_ is Cons!1500) (toList!734 lt!38770)) (= (_1!1102 (h!2090 (toList!734 lt!38770))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355))))))

(declare-fun e!54639 () Option!146)

(assert (=> d!21189 (= (getValueByKey!140 (toList!734 lt!38770) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) e!54639)))

(declare-fun b!83753 () Bool)

(assert (=> b!83753 (= e!54639 (Some!145 (_2!1102 (h!2090 (toList!734 lt!38770)))))))

(declare-fun b!83754 () Bool)

(assert (=> b!83754 (= e!54639 e!54640)))

(declare-fun c!13408 () Bool)

(assert (=> b!83754 (= c!13408 (and ((_ is Cons!1500) (toList!734 lt!38770)) (not (= (_1!1102 (h!2090 (toList!734 lt!38770))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))))

(declare-fun b!83756 () Bool)

(assert (=> b!83756 (= e!54640 None!144)))

(assert (= (and d!21189 c!13407) b!83753))

(assert (= (and d!21189 (not c!13407)) b!83754))

(assert (= (and b!83754 c!13408) b!83755))

(assert (= (and b!83754 (not c!13408)) b!83756))

(assert (=> b!83755 m!85721))

(declare-fun m!87125 () Bool)

(assert (=> b!83755 m!87125))

(assert (=> b!82938 d!21189))

(declare-fun d!21191 () Bool)

(assert (=> d!21191 (isDefined!92 (getValueByKey!140 (toList!734 lt!38770) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))

(declare-fun lt!39511 () Unit!2413)

(declare-fun choose!502 (List!1504 (_ BitVec 64)) Unit!2413)

(assert (=> d!21191 (= lt!39511 (choose!502 (toList!734 lt!38770) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))

(declare-fun e!54643 () Bool)

(assert (=> d!21191 e!54643))

(declare-fun res!43311 () Bool)

(assert (=> d!21191 (=> (not res!43311) (not e!54643))))

(assert (=> d!21191 (= res!43311 (isStrictlySorted!284 (toList!734 lt!38770)))))

(assert (=> d!21191 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 lt!38770) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) lt!39511)))

(declare-fun b!83759 () Bool)

(assert (=> b!83759 (= e!54643 (containsKey!143 (toList!734 lt!38770) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))

(assert (= (and d!21191 res!43311) b!83759))

(assert (=> d!21191 m!85721))

(assert (=> d!21191 m!85925))

(assert (=> d!21191 m!85925))

(assert (=> d!21191 m!85927))

(assert (=> d!21191 m!85721))

(declare-fun m!87127 () Bool)

(assert (=> d!21191 m!87127))

(declare-fun m!87129 () Bool)

(assert (=> d!21191 m!87129))

(assert (=> b!83759 m!85721))

(assert (=> b!83759 m!85921))

(assert (=> b!82936 d!21191))

(assert (=> b!82936 d!21187))

(assert (=> b!82936 d!21189))

(declare-fun d!21193 () Bool)

(declare-fun e!54645 () Bool)

(assert (=> d!21193 e!54645))

(declare-fun res!43312 () Bool)

(assert (=> d!21193 (=> res!43312 e!54645)))

(declare-fun lt!39512 () Bool)

(assert (=> d!21193 (= res!43312 (not lt!39512))))

(declare-fun lt!39515 () Bool)

(assert (=> d!21193 (= lt!39512 lt!39515)))

(declare-fun lt!39514 () Unit!2413)

(declare-fun e!54644 () Unit!2413)

(assert (=> d!21193 (= lt!39514 e!54644)))

(declare-fun c!13409 () Bool)

(assert (=> d!21193 (= c!13409 lt!39515)))

(assert (=> d!21193 (= lt!39515 (containsKey!143 (toList!734 lt!39040) (_1!1102 lt!38779)))))

(assert (=> d!21193 (= (contains!744 lt!39040 (_1!1102 lt!38779)) lt!39512)))

(declare-fun b!83760 () Bool)

(declare-fun lt!39513 () Unit!2413)

(assert (=> b!83760 (= e!54644 lt!39513)))

(assert (=> b!83760 (= lt!39513 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 lt!39040) (_1!1102 lt!38779)))))

(assert (=> b!83760 (isDefined!92 (getValueByKey!140 (toList!734 lt!39040) (_1!1102 lt!38779)))))

(declare-fun b!83761 () Bool)

(declare-fun Unit!2448 () Unit!2413)

(assert (=> b!83761 (= e!54644 Unit!2448)))

(declare-fun b!83762 () Bool)

(assert (=> b!83762 (= e!54645 (isDefined!92 (getValueByKey!140 (toList!734 lt!39040) (_1!1102 lt!38779))))))

(assert (= (and d!21193 c!13409) b!83760))

(assert (= (and d!21193 (not c!13409)) b!83761))

(assert (= (and d!21193 (not res!43312)) b!83762))

(declare-fun m!87131 () Bool)

(assert (=> d!21193 m!87131))

(declare-fun m!87133 () Bool)

(assert (=> b!83760 m!87133))

(assert (=> b!83760 m!86081))

(assert (=> b!83760 m!86081))

(declare-fun m!87135 () Bool)

(assert (=> b!83760 m!87135))

(assert (=> b!83762 m!86081))

(assert (=> b!83762 m!86081))

(assert (=> b!83762 m!87135))

(assert (=> d!20927 d!21193))

(declare-fun b!83765 () Bool)

(declare-fun e!54647 () Option!146)

(assert (=> b!83765 (= e!54647 (getValueByKey!140 (t!5196 lt!39042) (_1!1102 lt!38779)))))

(declare-fun d!21195 () Bool)

(declare-fun c!13410 () Bool)

(assert (=> d!21195 (= c!13410 (and ((_ is Cons!1500) lt!39042) (= (_1!1102 (h!2090 lt!39042)) (_1!1102 lt!38779))))))

(declare-fun e!54646 () Option!146)

(assert (=> d!21195 (= (getValueByKey!140 lt!39042 (_1!1102 lt!38779)) e!54646)))

(declare-fun b!83763 () Bool)

(assert (=> b!83763 (= e!54646 (Some!145 (_2!1102 (h!2090 lt!39042))))))

(declare-fun b!83764 () Bool)

(assert (=> b!83764 (= e!54646 e!54647)))

(declare-fun c!13411 () Bool)

(assert (=> b!83764 (= c!13411 (and ((_ is Cons!1500) lt!39042) (not (= (_1!1102 (h!2090 lt!39042)) (_1!1102 lt!38779)))))))

(declare-fun b!83766 () Bool)

(assert (=> b!83766 (= e!54647 None!144)))

(assert (= (and d!21195 c!13410) b!83763))

(assert (= (and d!21195 (not c!13410)) b!83764))

(assert (= (and b!83764 c!13411) b!83765))

(assert (= (and b!83764 (not c!13411)) b!83766))

(declare-fun m!87137 () Bool)

(assert (=> b!83765 m!87137))

(assert (=> d!20927 d!21195))

(declare-fun d!21197 () Bool)

(assert (=> d!21197 (= (getValueByKey!140 lt!39042 (_1!1102 lt!38779)) (Some!145 (_2!1102 lt!38779)))))

(declare-fun lt!39516 () Unit!2413)

(assert (=> d!21197 (= lt!39516 (choose!493 lt!39042 (_1!1102 lt!38779) (_2!1102 lt!38779)))))

(declare-fun e!54648 () Bool)

(assert (=> d!21197 e!54648))

(declare-fun res!43313 () Bool)

(assert (=> d!21197 (=> (not res!43313) (not e!54648))))

(assert (=> d!21197 (= res!43313 (isStrictlySorted!284 lt!39042))))

(assert (=> d!21197 (= (lemmaContainsTupThenGetReturnValue!57 lt!39042 (_1!1102 lt!38779) (_2!1102 lt!38779)) lt!39516)))

(declare-fun b!83767 () Bool)

(declare-fun res!43314 () Bool)

(assert (=> b!83767 (=> (not res!43314) (not e!54648))))

(assert (=> b!83767 (= res!43314 (containsKey!143 lt!39042 (_1!1102 lt!38779)))))

(declare-fun b!83768 () Bool)

(assert (=> b!83768 (= e!54648 (contains!746 lt!39042 (tuple2!2183 (_1!1102 lt!38779) (_2!1102 lt!38779))))))

(assert (= (and d!21197 res!43313) b!83767))

(assert (= (and b!83767 res!43314) b!83768))

(assert (=> d!21197 m!86075))

(declare-fun m!87139 () Bool)

(assert (=> d!21197 m!87139))

(declare-fun m!87141 () Bool)

(assert (=> d!21197 m!87141))

(declare-fun m!87143 () Bool)

(assert (=> b!83767 m!87143))

(declare-fun m!87145 () Bool)

(assert (=> b!83768 m!87145))

(assert (=> d!20927 d!21197))

(declare-fun b!83770 () Bool)

(declare-fun c!13412 () Bool)

(declare-fun e!54649 () List!1504)

(declare-fun c!13415 () Bool)

(assert (=> b!83770 (= e!54649 (ite c!13415 (t!5196 (toList!734 lt!38773)) (ite c!13412 (Cons!1500 (h!2090 (toList!734 lt!38773)) (t!5196 (toList!734 lt!38773))) Nil!1501)))))

(declare-fun c!13413 () Bool)

(declare-fun bm!7871 () Bool)

(declare-fun call!7874 () List!1504)

(assert (=> bm!7871 (= call!7874 ($colon$colon!70 e!54649 (ite c!13413 (h!2090 (toList!734 lt!38773)) (tuple2!2183 (_1!1102 lt!38779) (_2!1102 lt!38779)))))))

(declare-fun c!13414 () Bool)

(assert (=> bm!7871 (= c!13414 c!13413)))

(declare-fun b!83771 () Bool)

(declare-fun e!54653 () List!1504)

(declare-fun call!7876 () List!1504)

(assert (=> b!83771 (= e!54653 call!7876)))

(declare-fun b!83772 () Bool)

(declare-fun e!54651 () List!1504)

(assert (=> b!83772 (= e!54651 call!7874)))

(declare-fun bm!7872 () Bool)

(assert (=> bm!7872 (= call!7876 call!7874)))

(declare-fun bm!7873 () Bool)

(declare-fun call!7875 () List!1504)

(assert (=> bm!7873 (= call!7875 call!7876)))

(declare-fun b!83773 () Bool)

(assert (=> b!83773 (= e!54649 (insertStrictlySorted!60 (t!5196 (toList!734 lt!38773)) (_1!1102 lt!38779) (_2!1102 lt!38779)))))

(declare-fun b!83774 () Bool)

(declare-fun e!54652 () List!1504)

(assert (=> b!83774 (= e!54652 call!7875)))

(declare-fun b!83775 () Bool)

(assert (=> b!83775 (= e!54651 e!54653)))

(assert (=> b!83775 (= c!13415 (and ((_ is Cons!1500) (toList!734 lt!38773)) (= (_1!1102 (h!2090 (toList!734 lt!38773))) (_1!1102 lt!38779))))))

(declare-fun b!83776 () Bool)

(declare-fun e!54650 () Bool)

(declare-fun lt!39517 () List!1504)

(assert (=> b!83776 (= e!54650 (contains!746 lt!39517 (tuple2!2183 (_1!1102 lt!38779) (_2!1102 lt!38779))))))

(declare-fun b!83769 () Bool)

(declare-fun res!43316 () Bool)

(assert (=> b!83769 (=> (not res!43316) (not e!54650))))

(assert (=> b!83769 (= res!43316 (containsKey!143 lt!39517 (_1!1102 lt!38779)))))

(declare-fun d!21199 () Bool)

(assert (=> d!21199 e!54650))

(declare-fun res!43315 () Bool)

(assert (=> d!21199 (=> (not res!43315) (not e!54650))))

(assert (=> d!21199 (= res!43315 (isStrictlySorted!284 lt!39517))))

(assert (=> d!21199 (= lt!39517 e!54651)))

(assert (=> d!21199 (= c!13413 (and ((_ is Cons!1500) (toList!734 lt!38773)) (bvslt (_1!1102 (h!2090 (toList!734 lt!38773))) (_1!1102 lt!38779))))))

(assert (=> d!21199 (isStrictlySorted!284 (toList!734 lt!38773))))

(assert (=> d!21199 (= (insertStrictlySorted!60 (toList!734 lt!38773) (_1!1102 lt!38779) (_2!1102 lt!38779)) lt!39517)))

(declare-fun b!83777 () Bool)

(assert (=> b!83777 (= e!54652 call!7875)))

(declare-fun b!83778 () Bool)

(assert (=> b!83778 (= c!13412 (and ((_ is Cons!1500) (toList!734 lt!38773)) (bvsgt (_1!1102 (h!2090 (toList!734 lt!38773))) (_1!1102 lt!38779))))))

(assert (=> b!83778 (= e!54653 e!54652)))

(assert (= (and d!21199 c!13413) b!83772))

(assert (= (and d!21199 (not c!13413)) b!83775))

(assert (= (and b!83775 c!13415) b!83771))

(assert (= (and b!83775 (not c!13415)) b!83778))

(assert (= (and b!83778 c!13412) b!83774))

(assert (= (and b!83778 (not c!13412)) b!83777))

(assert (= (or b!83774 b!83777) bm!7873))

(assert (= (or b!83771 bm!7873) bm!7872))

(assert (= (or b!83772 bm!7872) bm!7871))

(assert (= (and bm!7871 c!13414) b!83773))

(assert (= (and bm!7871 (not c!13414)) b!83770))

(assert (= (and d!21199 res!43315) b!83769))

(assert (= (and b!83769 res!43316) b!83776))

(declare-fun m!87147 () Bool)

(assert (=> d!21199 m!87147))

(assert (=> d!21199 m!86993))

(declare-fun m!87149 () Bool)

(assert (=> b!83773 m!87149))

(declare-fun m!87151 () Bool)

(assert (=> bm!7871 m!87151))

(declare-fun m!87153 () Bool)

(assert (=> b!83769 m!87153))

(declare-fun m!87155 () Bool)

(assert (=> b!83776 m!87155))

(assert (=> d!20927 d!21199))

(assert (=> b!83135 d!21067))

(declare-fun b!83780 () Bool)

(declare-fun e!54654 () Bool)

(assert (=> b!83780 (= e!54654 tp_is_empty!2527)))

(declare-fun mapNonEmpty!3385 () Bool)

(declare-fun mapRes!3385 () Bool)

(declare-fun tp!8911 () Bool)

(declare-fun e!54655 () Bool)

(assert (=> mapNonEmpty!3385 (= mapRes!3385 (and tp!8911 e!54655))))

(declare-fun mapRest!3385 () (Array (_ BitVec 32) ValueCell!920))

(declare-fun mapValue!3385 () ValueCell!920)

(declare-fun mapKey!3385 () (_ BitVec 32))

(assert (=> mapNonEmpty!3385 (= mapRest!3384 (store mapRest!3385 mapKey!3385 mapValue!3385))))

(declare-fun mapIsEmpty!3385 () Bool)

(assert (=> mapIsEmpty!3385 mapRes!3385))

(declare-fun b!83779 () Bool)

(assert (=> b!83779 (= e!54655 tp_is_empty!2527)))

(declare-fun condMapEmpty!3385 () Bool)

(declare-fun mapDefault!3385 () ValueCell!920)

(assert (=> mapNonEmpty!3384 (= condMapEmpty!3385 (= mapRest!3384 ((as const (Array (_ BitVec 32) ValueCell!920)) mapDefault!3385)))))

(assert (=> mapNonEmpty!3384 (= tp!8910 (and e!54654 mapRes!3385))))

(assert (= (and mapNonEmpty!3384 condMapEmpty!3385) mapIsEmpty!3385))

(assert (= (and mapNonEmpty!3384 (not condMapEmpty!3385)) mapNonEmpty!3385))

(assert (= (and mapNonEmpty!3385 ((_ is ValueCellFull!920) mapValue!3385)) b!83779))

(assert (= (and mapNonEmpty!3384 ((_ is ValueCellFull!920) mapDefault!3385)) b!83780))

(declare-fun m!87157 () Bool)

(assert (=> mapNonEmpty!3385 m!87157))

(declare-fun b!83782 () Bool)

(declare-fun e!54656 () Bool)

(assert (=> b!83782 (= e!54656 tp_is_empty!2527)))

(declare-fun mapNonEmpty!3386 () Bool)

(declare-fun mapRes!3386 () Bool)

(declare-fun tp!8912 () Bool)

(declare-fun e!54657 () Bool)

(assert (=> mapNonEmpty!3386 (= mapRes!3386 (and tp!8912 e!54657))))

(declare-fun mapRest!3386 () (Array (_ BitVec 32) ValueCell!920))

(declare-fun mapKey!3386 () (_ BitVec 32))

(declare-fun mapValue!3386 () ValueCell!920)

(assert (=> mapNonEmpty!3386 (= mapRest!3383 (store mapRest!3386 mapKey!3386 mapValue!3386))))

(declare-fun mapIsEmpty!3386 () Bool)

(assert (=> mapIsEmpty!3386 mapRes!3386))

(declare-fun b!83781 () Bool)

(assert (=> b!83781 (= e!54657 tp_is_empty!2527)))

(declare-fun condMapEmpty!3386 () Bool)

(declare-fun mapDefault!3386 () ValueCell!920)

(assert (=> mapNonEmpty!3383 (= condMapEmpty!3386 (= mapRest!3383 ((as const (Array (_ BitVec 32) ValueCell!920)) mapDefault!3386)))))

(assert (=> mapNonEmpty!3383 (= tp!8909 (and e!54656 mapRes!3386))))

(assert (= (and mapNonEmpty!3383 condMapEmpty!3386) mapIsEmpty!3386))

(assert (= (and mapNonEmpty!3383 (not condMapEmpty!3386)) mapNonEmpty!3386))

(assert (= (and mapNonEmpty!3386 ((_ is ValueCellFull!920) mapValue!3386)) b!83781))

(assert (= (and mapNonEmpty!3383 ((_ is ValueCellFull!920) mapDefault!3386)) b!83782))

(declare-fun m!87159 () Bool)

(assert (=> mapNonEmpty!3386 m!87159))

(declare-fun b_lambda!3721 () Bool)

(assert (= b_lambda!3713 (or (and b!82790 b_free!2221 (= (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) (defaultEntry!2316 newMap!16))) (and b!82787 b_free!2223) b_lambda!3721)))

(declare-fun b_lambda!3723 () Bool)

(assert (= b_lambda!3717 (or (and b!82790 b_free!2221) (and b!82787 b_free!2223 (= (defaultEntry!2316 newMap!16) (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))))) b_lambda!3723)))

(declare-fun b_lambda!3725 () Bool)

(assert (= b_lambda!3715 (or (and b!82790 b_free!2221) (and b!82787 b_free!2223 (= (defaultEntry!2316 newMap!16) (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))))) b_lambda!3725)))

(declare-fun b_lambda!3727 () Bool)

(assert (= b_lambda!3711 (or (and b!82790 b_free!2221 (= (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) (defaultEntry!2316 newMap!16))) (and b!82787 b_free!2223) b_lambda!3727)))

(declare-fun b_lambda!3729 () Bool)

(assert (= b_lambda!3719 (or (and b!82790 b_free!2221 (= (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) (defaultEntry!2316 newMap!16))) (and b!82787 b_free!2223) b_lambda!3729)))

(check-sat (not d!21053) (not b!83443) (not d!21175) (not b!83476) (not bm!7823) (not b!83466) (not bm!7800) (not d!21151) (not b!83464) (not b!83422) (not d!20983) (not bm!7809) (not b!83433) (not b!83759) (not b!83516) (not b!83741) (not b!83689) (not b!83614) (not bm!7830) (not d!21149) (not b!83575) (not b!83571) (not b!83606) (not b!83505) (not b!83626) (not b!83522) (not b!83375) (not bm!7831) (not b!83615) (not b!83271) (not d!20973) (not d!21141) (not b!83294) (not bm!7848) (not d!21029) (not b!83728) (not b!83258) (not d!21099) (not b!83417) (not b!83769) (not d!20985) (not b_lambda!3727) (not b!83531) (not d!21019) (not b!83241) (not b!83629) (not d!21137) (not b!83324) (not d!21183) (not bm!7816) (not b!83687) (not b!83536) (not b!83235) (not b!83483) (not b!83523) (not b!83327) (not d!21117) (not b!83266) (not b!83532) (not d!21027) (not bm!7819) (not b!83263) (not b!83336) (not d!21155) (not d!21191) (not b!83329) (not d!21005) (not d!21133) (not d!21103) (not d!21021) (not d!21169) (not b!83382) (not d!21081) (not d!21093) (not b!83690) (not b!83765) (not b!83692) (not b!83456) (not b!83490) (not d!21173) (not b!83637) (not d!21063) (not b!83669) (not d!21049) (not b!83735) (not b!83405) (not b!83726) (not d!21087) (not d!20969) (not d!21003) (not b!83342) (not bm!7806) (not d!21111) (not b!83504) (not b!83604) (not b!83343) (not d!21177) (not b!83695) (not b_lambda!3705) (not b!83751) (not b!83619) (not b!83481) (not d!21039) (not b!83478) (not b!83239) (not d!21109) (not b!83312) (not b!83454) (not b_lambda!3725) (not d!21101) (not b!83467) (not b!83655) (not d!21193) (not d!21033) (not b!83662) (not d!20953) (not b!83485) (not d!21165) (not d!21067) (not mapNonEmpty!3385) (not d!20977) (not b!83503) (not b!83647) (not d!21037) (not b!83762) (not b!83471) (not b!83616) (not b!83535) (not b!83278) (not b!83418) (not b!83455) (not b!83767) (not b!83402) (not b!83760) (not d!21091) (not b!83305) (not d!21105) (not b!83773) (not b!83583) (not b!83463) (not d!21075) (not bm!7829) (not b!83273) (not d!20979) (not b!83496) (not b!83414) (not b!83436) (not b!83409) (not d!21139) (not b!83364) (not d!21013) (not b!83268) (not d!21145) (not b!83586) (not d!21083) (not d!21097) (not d!21009) (not b!83493) (not b!83622) (not b!83649) (not b!83686) (not b!83416) b_and!5091 (not d!21159) (not bm!7824) (not b_next!2221) (not d!21089) (not b!83407) (not b_lambda!3697) (not bm!7799) (not b!83664) (not d!21157) (not b!83652) (not b!83315) (not b_lambda!3721) (not b!83237) (not d!21107) (not b!83677) (not b!83640) (not b!83479) (not b!83701) (not b!83666) (not d!21187) (not d!20971) (not d!21065) (not bm!7826) (not bm!7803) (not b!83291) (not b!83501) (not b!83459) (not b!83698) (not d!21131) (not b!83380) (not b!83518) (not d!21125) (not b!83587) (not d!21061) (not d!21197) (not b!83623) (not b!83736) (not b!83633) (not d!20999) (not b!83378) (not b!83683) (not d!21035) (not b!83252) (not d!21121) (not bm!7867) (not b!83371) (not bm!7859) (not b!83250) (not b!83333) (not d!21163) (not b!83489) (not d!20989) (not b!83521) (not b!83255) (not d!21047) (not bm!7822) (not b!83265) (not bm!7843) (not d!21085) (not b!83244) (not b!83248) (not b!83451) (not bm!7853) tp_is_empty!2527 (not b!83737) (not b!83498) (not b!83374) (not b!83491) (not b!83331) (not b!83326) (not b!83328) (not mapNonEmpty!3386) (not b_next!2223) (not b!83645) (not b!83663) (not b!83673) (not b!83672) (not d!21079) (not b!83609) (not b!83684) (not b!83607) (not d!21023) (not d!20981) (not b!83776) (not b!83525) (not bm!7845) (not d!21153) b_and!5089 (not d!21043) (not d!21143) (not b!83730) (not d!20997) (not d!21073) (not b!83457) (not b!83288) (not b!83397) (not b!83512) (not d!20991) (not b!83494) (not b!83509) (not b!83699) (not b!83440) (not d!21069) (not bm!7871) (not b!83322) (not b!83632) (not b!83304) (not b_lambda!3707) (not b!83368) (not b!83519) (not bm!7801) (not d!21045) (not b!83465) (not b_lambda!3729) (not b!83438) (not d!21199) (not b!83768) (not d!21167) (not b!83238) (not b!83744) (not b_lambda!3723) (not b!83612) (not b!83408) (not b!83621) (not d!21171) (not b!83581) (not b!83733) (not b!83487) (not d!21055) (not b!83526) (not bm!7856) (not d!21127) (not d!21095) (not b!83727) (not b!83462) (not d!20965) (not d!21161) (not b!83470) (not b!83330) (not bm!7852) (not b!83680) (not bm!7866) (not b!83660) (not b!83292) (not bm!7868) (not b!83624) (not b!83671) (not b!83446) (not b!83469) (not d!21057) (not bm!7842) (not b!83631) (not b!83323) (not d!21181) (not d!20955) (not d!20995) (not b!83688) (not b!83325) (not b_lambda!3709) (not b!83685) (not b!83602) (not d!20959) (not d!21077) (not b!83598) (not b!83755) (not b!83411) (not d!20987) (not bm!7849) (not b!83272) (not b!83495) (not b!83453) (not b!83425) (not b!83377) (not bm!7854))
(check-sat b_and!5089 b_and!5091 (not b_next!2221) (not b_next!2223))
(get-model)

(declare-fun d!21201 () Bool)

(assert (=> d!21201 (isDefined!92 (getValueByKey!140 (toList!734 lt!39044) (_1!1102 lt!38775)))))

(declare-fun lt!39518 () Unit!2413)

(assert (=> d!21201 (= lt!39518 (choose!502 (toList!734 lt!39044) (_1!1102 lt!38775)))))

(declare-fun e!54658 () Bool)

(assert (=> d!21201 e!54658))

(declare-fun res!43317 () Bool)

(assert (=> d!21201 (=> (not res!43317) (not e!54658))))

(assert (=> d!21201 (= res!43317 (isStrictlySorted!284 (toList!734 lt!39044)))))

(assert (=> d!21201 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 lt!39044) (_1!1102 lt!38775)) lt!39518)))

(declare-fun b!83783 () Bool)

(assert (=> b!83783 (= e!54658 (containsKey!143 (toList!734 lt!39044) (_1!1102 lt!38775)))))

(assert (= (and d!21201 res!43317) b!83783))

(assert (=> d!21201 m!86093))

(assert (=> d!21201 m!86093))

(assert (=> d!21201 m!87101))

(declare-fun m!87161 () Bool)

(assert (=> d!21201 m!87161))

(declare-fun m!87163 () Bool)

(assert (=> d!21201 m!87163))

(assert (=> b!83783 m!87097))

(assert (=> b!83728 d!21201))

(declare-fun d!21203 () Bool)

(assert (=> d!21203 (= (isDefined!92 (getValueByKey!140 (toList!734 lt!39044) (_1!1102 lt!38775))) (not (isEmpty!340 (getValueByKey!140 (toList!734 lt!39044) (_1!1102 lt!38775)))))))

(declare-fun bs!3542 () Bool)

(assert (= bs!3542 d!21203))

(assert (=> bs!3542 m!86093))

(declare-fun m!87165 () Bool)

(assert (=> bs!3542 m!87165))

(assert (=> b!83728 d!21203))

(assert (=> b!83728 d!21115))

(declare-fun d!21205 () Bool)

(declare-fun res!43318 () Bool)

(declare-fun e!54659 () Bool)

(assert (=> d!21205 (=> res!43318 e!54659)))

(assert (=> d!21205 (= res!43318 (and ((_ is Cons!1500) lt!39437) (= (_1!1102 (h!2090 lt!39437)) (_1!1102 lt!38779))))))

(assert (=> d!21205 (= (containsKey!143 lt!39437 (_1!1102 lt!38779)) e!54659)))

(declare-fun b!83784 () Bool)

(declare-fun e!54660 () Bool)

(assert (=> b!83784 (= e!54659 e!54660)))

(declare-fun res!43319 () Bool)

(assert (=> b!83784 (=> (not res!43319) (not e!54660))))

(assert (=> b!83784 (= res!43319 (and (or (not ((_ is Cons!1500) lt!39437)) (bvsle (_1!1102 (h!2090 lt!39437)) (_1!1102 lt!38779))) ((_ is Cons!1500) lt!39437) (bvslt (_1!1102 (h!2090 lt!39437)) (_1!1102 lt!38779))))))

(declare-fun b!83785 () Bool)

(assert (=> b!83785 (= e!54660 (containsKey!143 (t!5196 lt!39437) (_1!1102 lt!38779)))))

(assert (= (and d!21205 (not res!43318)) b!83784))

(assert (= (and b!83784 res!43319) b!83785))

(declare-fun m!87167 () Bool)

(assert (=> b!83785 m!87167))

(assert (=> b!83633 d!21205))

(declare-fun d!21207 () Bool)

(declare-fun e!54661 () Bool)

(assert (=> d!21207 e!54661))

(declare-fun res!43321 () Bool)

(assert (=> d!21207 (=> (not res!43321) (not e!54661))))

(declare-fun lt!39520 () ListLongMap!1437)

(assert (=> d!21207 (= res!43321 (contains!744 lt!39520 (_1!1102 (ite (or c!13278 c!13273) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16))))))))

(declare-fun lt!39522 () List!1504)

(assert (=> d!21207 (= lt!39520 (ListLongMap!1438 lt!39522))))

(declare-fun lt!39519 () Unit!2413)

(declare-fun lt!39521 () Unit!2413)

(assert (=> d!21207 (= lt!39519 lt!39521)))

(assert (=> d!21207 (= (getValueByKey!140 lt!39522 (_1!1102 (ite (or c!13278 c!13273) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16))))) (Some!145 (_2!1102 (ite (or c!13278 c!13273) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16))))))))

(assert (=> d!21207 (= lt!39521 (lemmaContainsTupThenGetReturnValue!57 lt!39522 (_1!1102 (ite (or c!13278 c!13273) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16)))) (_2!1102 (ite (or c!13278 c!13273) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16))))))))

(assert (=> d!21207 (= lt!39522 (insertStrictlySorted!60 (toList!734 (ite c!13278 call!7808 (ite c!13273 call!7803 call!7804))) (_1!1102 (ite (or c!13278 c!13273) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16)))) (_2!1102 (ite (or c!13278 c!13273) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16))))))))

(assert (=> d!21207 (= (+!105 (ite c!13278 call!7808 (ite c!13273 call!7803 call!7804)) (ite (or c!13278 c!13273) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16)))) lt!39520)))

(declare-fun b!83786 () Bool)

(declare-fun res!43320 () Bool)

(assert (=> b!83786 (=> (not res!43320) (not e!54661))))

(assert (=> b!83786 (= res!43320 (= (getValueByKey!140 (toList!734 lt!39520) (_1!1102 (ite (or c!13278 c!13273) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16))))) (Some!145 (_2!1102 (ite (or c!13278 c!13273) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16)))))))))

(declare-fun b!83787 () Bool)

(assert (=> b!83787 (= e!54661 (contains!746 (toList!734 lt!39520) (ite (or c!13278 c!13273) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16)))))))

(assert (= (and d!21207 res!43321) b!83786))

(assert (= (and b!83786 res!43320) b!83787))

(declare-fun m!87169 () Bool)

(assert (=> d!21207 m!87169))

(declare-fun m!87171 () Bool)

(assert (=> d!21207 m!87171))

(declare-fun m!87173 () Bool)

(assert (=> d!21207 m!87173))

(declare-fun m!87175 () Bool)

(assert (=> d!21207 m!87175))

(declare-fun m!87177 () Bool)

(assert (=> b!83786 m!87177))

(declare-fun m!87179 () Bool)

(assert (=> b!83787 m!87179))

(assert (=> bm!7799 d!21207))

(declare-fun d!21209 () Bool)

(assert (=> d!21209 (= (isDefined!92 (getValueByKey!140 (toList!734 lt!39053) (_1!1102 lt!38775))) (not (isEmpty!340 (getValueByKey!140 (toList!734 lt!39053) (_1!1102 lt!38775)))))))

(declare-fun bs!3543 () Bool)

(assert (= bs!3543 d!21209))

(assert (=> bs!3543 m!86127))

(declare-fun m!87181 () Bool)

(assert (=> bs!3543 m!87181))

(assert (=> b!83666 d!21209))

(assert (=> b!83666 d!21129))

(declare-fun d!21211 () Bool)

(declare-fun e!54663 () Bool)

(assert (=> d!21211 e!54663))

(declare-fun res!43322 () Bool)

(assert (=> d!21211 (=> res!43322 e!54663)))

(declare-fun lt!39523 () Bool)

(assert (=> d!21211 (= res!43322 (not lt!39523))))

(declare-fun lt!39526 () Bool)

(assert (=> d!21211 (= lt!39523 lt!39526)))

(declare-fun lt!39525 () Unit!2413)

(declare-fun e!54662 () Unit!2413)

(assert (=> d!21211 (= lt!39525 e!54662)))

(declare-fun c!13416 () Bool)

(assert (=> d!21211 (= c!13416 lt!39526)))

(assert (=> d!21211 (= lt!39526 (containsKey!143 (toList!734 lt!39178) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(assert (=> d!21211 (= (contains!744 lt!39178 (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))) lt!39523)))

(declare-fun b!83788 () Bool)

(declare-fun lt!39524 () Unit!2413)

(assert (=> b!83788 (= e!54662 lt!39524)))

(assert (=> b!83788 (= lt!39524 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 lt!39178) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(assert (=> b!83788 (isDefined!92 (getValueByKey!140 (toList!734 lt!39178) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun b!83789 () Bool)

(declare-fun Unit!2449 () Unit!2413)

(assert (=> b!83789 (= e!54662 Unit!2449)))

(declare-fun b!83790 () Bool)

(assert (=> b!83790 (= e!54663 (isDefined!92 (getValueByKey!140 (toList!734 lt!39178) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(assert (= (and d!21211 c!13416) b!83788))

(assert (= (and d!21211 (not c!13416)) b!83789))

(assert (= (and d!21211 (not res!43322)) b!83790))

(declare-fun m!87183 () Bool)

(assert (=> d!21211 m!87183))

(declare-fun m!87185 () Bool)

(assert (=> b!83788 m!87185))

(assert (=> b!83788 m!86329))

(assert (=> b!83788 m!86329))

(declare-fun m!87187 () Bool)

(assert (=> b!83788 m!87187))

(assert (=> b!83790 m!86329))

(assert (=> b!83790 m!86329))

(assert (=> b!83790 m!87187))

(assert (=> d!20981 d!21211))

(declare-fun b!83793 () Bool)

(declare-fun e!54665 () Option!146)

(assert (=> b!83793 (= e!54665 (getValueByKey!140 (t!5196 lt!39180) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun d!21213 () Bool)

(declare-fun c!13417 () Bool)

(assert (=> d!21213 (= c!13417 (and ((_ is Cons!1500) lt!39180) (= (_1!1102 (h!2090 lt!39180)) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(declare-fun e!54664 () Option!146)

(assert (=> d!21213 (= (getValueByKey!140 lt!39180 (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))) e!54664)))

(declare-fun b!83791 () Bool)

(assert (=> b!83791 (= e!54664 (Some!145 (_2!1102 (h!2090 lt!39180))))))

(declare-fun b!83792 () Bool)

(assert (=> b!83792 (= e!54664 e!54665)))

(declare-fun c!13418 () Bool)

(assert (=> b!83792 (= c!13418 (and ((_ is Cons!1500) lt!39180) (not (= (_1!1102 (h!2090 lt!39180)) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))))

(declare-fun b!83794 () Bool)

(assert (=> b!83794 (= e!54665 None!144)))

(assert (= (and d!21213 c!13417) b!83791))

(assert (= (and d!21213 (not c!13417)) b!83792))

(assert (= (and b!83792 c!13418) b!83793))

(assert (= (and b!83792 (not c!13418)) b!83794))

(declare-fun m!87189 () Bool)

(assert (=> b!83793 m!87189))

(assert (=> d!20981 d!21213))

(declare-fun d!21215 () Bool)

(assert (=> d!21215 (= (getValueByKey!140 lt!39180 (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))) (Some!145 (_2!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun lt!39527 () Unit!2413)

(assert (=> d!21215 (= lt!39527 (choose!493 lt!39180 (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun e!54666 () Bool)

(assert (=> d!21215 e!54666))

(declare-fun res!43323 () Bool)

(assert (=> d!21215 (=> (not res!43323) (not e!54666))))

(assert (=> d!21215 (= res!43323 (isStrictlySorted!284 lt!39180))))

(assert (=> d!21215 (= (lemmaContainsTupThenGetReturnValue!57 lt!39180 (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))) lt!39527)))

(declare-fun b!83795 () Bool)

(declare-fun res!43324 () Bool)

(assert (=> b!83795 (=> (not res!43324) (not e!54666))))

(assert (=> b!83795 (= res!43324 (containsKey!143 lt!39180 (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun b!83796 () Bool)

(assert (=> b!83796 (= e!54666 (contains!746 lt!39180 (tuple2!2183 (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(assert (= (and d!21215 res!43323) b!83795))

(assert (= (and b!83795 res!43324) b!83796))

(assert (=> d!21215 m!86323))

(declare-fun m!87191 () Bool)

(assert (=> d!21215 m!87191))

(declare-fun m!87193 () Bool)

(assert (=> d!21215 m!87193))

(declare-fun m!87195 () Bool)

(assert (=> b!83795 m!87195))

(declare-fun m!87197 () Bool)

(assert (=> b!83796 m!87197))

(assert (=> d!20981 d!21215))

(declare-fun b!83798 () Bool)

(declare-fun c!13419 () Bool)

(declare-fun e!54667 () List!1504)

(declare-fun c!13422 () Bool)

(assert (=> b!83798 (= e!54667 (ite c!13422 (t!5196 (toList!734 lt!38771)) (ite c!13419 (Cons!1500 (h!2090 (toList!734 lt!38771)) (t!5196 (toList!734 lt!38771))) Nil!1501)))))

(declare-fun call!7877 () List!1504)

(declare-fun c!13420 () Bool)

(declare-fun bm!7874 () Bool)

(assert (=> bm!7874 (= call!7877 ($colon$colon!70 e!54667 (ite c!13420 (h!2090 (toList!734 lt!38771)) (tuple2!2183 (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))))

(declare-fun c!13421 () Bool)

(assert (=> bm!7874 (= c!13421 c!13420)))

(declare-fun b!83799 () Bool)

(declare-fun e!54671 () List!1504)

(declare-fun call!7879 () List!1504)

(assert (=> b!83799 (= e!54671 call!7879)))

(declare-fun b!83800 () Bool)

(declare-fun e!54669 () List!1504)

(assert (=> b!83800 (= e!54669 call!7877)))

(declare-fun bm!7875 () Bool)

(assert (=> bm!7875 (= call!7879 call!7877)))

(declare-fun bm!7876 () Bool)

(declare-fun call!7878 () List!1504)

(assert (=> bm!7876 (= call!7878 call!7879)))

(declare-fun b!83801 () Bool)

(assert (=> b!83801 (= e!54667 (insertStrictlySorted!60 (t!5196 (toList!734 lt!38771)) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun b!83802 () Bool)

(declare-fun e!54670 () List!1504)

(assert (=> b!83802 (= e!54670 call!7878)))

(declare-fun b!83803 () Bool)

(assert (=> b!83803 (= e!54669 e!54671)))

(assert (=> b!83803 (= c!13422 (and ((_ is Cons!1500) (toList!734 lt!38771)) (= (_1!1102 (h!2090 (toList!734 lt!38771))) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(declare-fun b!83804 () Bool)

(declare-fun e!54668 () Bool)

(declare-fun lt!39528 () List!1504)

(assert (=> b!83804 (= e!54668 (contains!746 lt!39528 (tuple2!2183 (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(declare-fun b!83797 () Bool)

(declare-fun res!43326 () Bool)

(assert (=> b!83797 (=> (not res!43326) (not e!54668))))

(assert (=> b!83797 (= res!43326 (containsKey!143 lt!39528 (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun d!21217 () Bool)

(assert (=> d!21217 e!54668))

(declare-fun res!43325 () Bool)

(assert (=> d!21217 (=> (not res!43325) (not e!54668))))

(assert (=> d!21217 (= res!43325 (isStrictlySorted!284 lt!39528))))

(assert (=> d!21217 (= lt!39528 e!54669)))

(assert (=> d!21217 (= c!13420 (and ((_ is Cons!1500) (toList!734 lt!38771)) (bvslt (_1!1102 (h!2090 (toList!734 lt!38771))) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(assert (=> d!21217 (isStrictlySorted!284 (toList!734 lt!38771))))

(assert (=> d!21217 (= (insertStrictlySorted!60 (toList!734 lt!38771) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))) lt!39528)))

(declare-fun b!83805 () Bool)

(assert (=> b!83805 (= e!54670 call!7878)))

(declare-fun b!83806 () Bool)

(assert (=> b!83806 (= c!13419 (and ((_ is Cons!1500) (toList!734 lt!38771)) (bvsgt (_1!1102 (h!2090 (toList!734 lt!38771))) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(assert (=> b!83806 (= e!54671 e!54670)))

(assert (= (and d!21217 c!13420) b!83800))

(assert (= (and d!21217 (not c!13420)) b!83803))

(assert (= (and b!83803 c!13422) b!83799))

(assert (= (and b!83803 (not c!13422)) b!83806))

(assert (= (and b!83806 c!13419) b!83802))

(assert (= (and b!83806 (not c!13419)) b!83805))

(assert (= (or b!83802 b!83805) bm!7876))

(assert (= (or b!83799 bm!7876) bm!7875))

(assert (= (or b!83800 bm!7875) bm!7874))

(assert (= (and bm!7874 c!13421) b!83801))

(assert (= (and bm!7874 (not c!13421)) b!83798))

(assert (= (and d!21217 res!43325) b!83797))

(assert (= (and b!83797 res!43326) b!83804))

(declare-fun m!87199 () Bool)

(assert (=> d!21217 m!87199))

(assert (=> d!21217 m!86387))

(declare-fun m!87201 () Bool)

(assert (=> b!83801 m!87201))

(declare-fun m!87203 () Bool)

(assert (=> bm!7874 m!87203))

(declare-fun m!87205 () Bool)

(assert (=> b!83797 m!87205))

(declare-fun m!87207 () Bool)

(assert (=> b!83804 m!87207))

(assert (=> d!20981 d!21217))

(declare-fun d!21219 () Bool)

(assert (=> d!21219 (isDefined!92 (getValueByKey!140 (toList!734 call!7756) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))

(declare-fun lt!39529 () Unit!2413)

(assert (=> d!21219 (= lt!39529 (choose!502 (toList!734 call!7756) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))

(declare-fun e!54672 () Bool)

(assert (=> d!21219 e!54672))

(declare-fun res!43327 () Bool)

(assert (=> d!21219 (=> (not res!43327) (not e!54672))))

(assert (=> d!21219 (= res!43327 (isStrictlySorted!284 (toList!734 call!7756)))))

(assert (=> d!21219 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 call!7756) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) lt!39529)))

(declare-fun b!83807 () Bool)

(assert (=> b!83807 (= e!54672 (containsKey!143 (toList!734 call!7756) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))

(assert (= (and d!21219 res!43327) b!83807))

(assert (=> d!21219 m!85721))

(assert (=> d!21219 m!86561))

(assert (=> d!21219 m!86561))

(assert (=> d!21219 m!86563))

(assert (=> d!21219 m!85721))

(declare-fun m!87209 () Bool)

(assert (=> d!21219 m!87209))

(declare-fun m!87211 () Bool)

(assert (=> d!21219 m!87211))

(assert (=> b!83807 m!85721))

(assert (=> b!83807 m!86557))

(assert (=> b!83457 d!21219))

(declare-fun d!21221 () Bool)

(assert (=> d!21221 (= (isDefined!92 (getValueByKey!140 (toList!734 call!7756) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355))) (not (isEmpty!340 (getValueByKey!140 (toList!734 call!7756) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))))

(declare-fun bs!3544 () Bool)

(assert (= bs!3544 d!21221))

(assert (=> bs!3544 m!86561))

(declare-fun m!87213 () Bool)

(assert (=> bs!3544 m!87213))

(assert (=> b!83457 d!21221))

(declare-fun e!54674 () Option!146)

(declare-fun b!83810 () Bool)

(assert (=> b!83810 (= e!54674 (getValueByKey!140 (t!5196 (toList!734 call!7756)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))

(declare-fun c!13423 () Bool)

(declare-fun d!21223 () Bool)

(assert (=> d!21223 (= c!13423 (and ((_ is Cons!1500) (toList!734 call!7756)) (= (_1!1102 (h!2090 (toList!734 call!7756))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355))))))

(declare-fun e!54673 () Option!146)

(assert (=> d!21223 (= (getValueByKey!140 (toList!734 call!7756) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) e!54673)))

(declare-fun b!83808 () Bool)

(assert (=> b!83808 (= e!54673 (Some!145 (_2!1102 (h!2090 (toList!734 call!7756)))))))

(declare-fun b!83809 () Bool)

(assert (=> b!83809 (= e!54673 e!54674)))

(declare-fun c!13424 () Bool)

(assert (=> b!83809 (= c!13424 (and ((_ is Cons!1500) (toList!734 call!7756)) (not (= (_1!1102 (h!2090 (toList!734 call!7756))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))))

(declare-fun b!83811 () Bool)

(assert (=> b!83811 (= e!54674 None!144)))

(assert (= (and d!21223 c!13423) b!83808))

(assert (= (and d!21223 (not c!13423)) b!83809))

(assert (= (and b!83809 c!13424) b!83810))

(assert (= (and b!83809 (not c!13424)) b!83811))

(assert (=> b!83810 m!85721))

(declare-fun m!87215 () Bool)

(assert (=> b!83810 m!87215))

(assert (=> b!83457 d!21223))

(declare-fun d!21225 () Bool)

(declare-fun e!54676 () Bool)

(assert (=> d!21225 e!54676))

(declare-fun res!43328 () Bool)

(assert (=> d!21225 (=> res!43328 e!54676)))

(declare-fun lt!39530 () Bool)

(assert (=> d!21225 (= res!43328 (not lt!39530))))

(declare-fun lt!39533 () Bool)

(assert (=> d!21225 (= lt!39530 lt!39533)))

(declare-fun lt!39532 () Unit!2413)

(declare-fun e!54675 () Unit!2413)

(assert (=> d!21225 (= lt!39532 e!54675)))

(declare-fun c!13425 () Bool)

(assert (=> d!21225 (= c!13425 lt!39533)))

(assert (=> d!21225 (= lt!39533 (containsKey!143 (toList!734 lt!39322) (_1!1102 (tuple2!2183 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(assert (=> d!21225 (= (contains!744 lt!39322 (_1!1102 (tuple2!2183 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))) lt!39530)))

(declare-fun b!83812 () Bool)

(declare-fun lt!39531 () Unit!2413)

(assert (=> b!83812 (= e!54675 lt!39531)))

(assert (=> b!83812 (= lt!39531 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 lt!39322) (_1!1102 (tuple2!2183 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(assert (=> b!83812 (isDefined!92 (getValueByKey!140 (toList!734 lt!39322) (_1!1102 (tuple2!2183 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun b!83813 () Bool)

(declare-fun Unit!2450 () Unit!2413)

(assert (=> b!83813 (= e!54675 Unit!2450)))

(declare-fun b!83814 () Bool)

(assert (=> b!83814 (= e!54676 (isDefined!92 (getValueByKey!140 (toList!734 lt!39322) (_1!1102 (tuple2!2183 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(assert (= (and d!21225 c!13425) b!83812))

(assert (= (and d!21225 (not c!13425)) b!83813))

(assert (= (and d!21225 (not res!43328)) b!83814))

(declare-fun m!87217 () Bool)

(assert (=> d!21225 m!87217))

(declare-fun m!87219 () Bool)

(assert (=> b!83812 m!87219))

(assert (=> b!83812 m!86769))

(assert (=> b!83812 m!86769))

(declare-fun m!87221 () Bool)

(assert (=> b!83812 m!87221))

(assert (=> b!83814 m!86769))

(assert (=> b!83814 m!86769))

(assert (=> b!83814 m!87221))

(assert (=> d!21099 d!21225))

(declare-fun e!54678 () Option!146)

(declare-fun b!83817 () Bool)

(assert (=> b!83817 (= e!54678 (getValueByKey!140 (t!5196 lt!39324) (_1!1102 (tuple2!2183 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun c!13426 () Bool)

(declare-fun d!21227 () Bool)

(assert (=> d!21227 (= c!13426 (and ((_ is Cons!1500) lt!39324) (= (_1!1102 (h!2090 lt!39324)) (_1!1102 (tuple2!2183 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(declare-fun e!54677 () Option!146)

(assert (=> d!21227 (= (getValueByKey!140 lt!39324 (_1!1102 (tuple2!2183 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))) e!54677)))

(declare-fun b!83815 () Bool)

(assert (=> b!83815 (= e!54677 (Some!145 (_2!1102 (h!2090 lt!39324))))))

(declare-fun b!83816 () Bool)

(assert (=> b!83816 (= e!54677 e!54678)))

(declare-fun c!13427 () Bool)

(assert (=> b!83816 (= c!13427 (and ((_ is Cons!1500) lt!39324) (not (= (_1!1102 (h!2090 lt!39324)) (_1!1102 (tuple2!2183 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))))

(declare-fun b!83818 () Bool)

(assert (=> b!83818 (= e!54678 None!144)))

(assert (= (and d!21227 c!13426) b!83815))

(assert (= (and d!21227 (not c!13426)) b!83816))

(assert (= (and b!83816 c!13427) b!83817))

(assert (= (and b!83816 (not c!13427)) b!83818))

(declare-fun m!87223 () Bool)

(assert (=> b!83817 m!87223))

(assert (=> d!21099 d!21227))

(declare-fun d!21229 () Bool)

(assert (=> d!21229 (= (getValueByKey!140 lt!39324 (_1!1102 (tuple2!2183 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))) (Some!145 (_2!1102 (tuple2!2183 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun lt!39534 () Unit!2413)

(assert (=> d!21229 (= lt!39534 (choose!493 lt!39324 (_1!1102 (tuple2!2183 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun e!54679 () Bool)

(assert (=> d!21229 e!54679))

(declare-fun res!43329 () Bool)

(assert (=> d!21229 (=> (not res!43329) (not e!54679))))

(assert (=> d!21229 (= res!43329 (isStrictlySorted!284 lt!39324))))

(assert (=> d!21229 (= (lemmaContainsTupThenGetReturnValue!57 lt!39324 (_1!1102 (tuple2!2183 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))) lt!39534)))

(declare-fun b!83819 () Bool)

(declare-fun res!43330 () Bool)

(assert (=> b!83819 (=> (not res!43330) (not e!54679))))

(assert (=> b!83819 (= res!43330 (containsKey!143 lt!39324 (_1!1102 (tuple2!2183 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun b!83820 () Bool)

(assert (=> b!83820 (= e!54679 (contains!746 lt!39324 (tuple2!2183 (_1!1102 (tuple2!2183 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(assert (= (and d!21229 res!43329) b!83819))

(assert (= (and b!83819 res!43330) b!83820))

(assert (=> d!21229 m!86763))

(declare-fun m!87225 () Bool)

(assert (=> d!21229 m!87225))

(declare-fun m!87227 () Bool)

(assert (=> d!21229 m!87227))

(declare-fun m!87229 () Bool)

(assert (=> b!83819 m!87229))

(declare-fun m!87231 () Bool)

(assert (=> b!83820 m!87231))

(assert (=> d!21099 d!21229))

(declare-fun c!13431 () Bool)

(declare-fun c!13428 () Bool)

(declare-fun e!54680 () List!1504)

(declare-fun b!83822 () Bool)

(assert (=> b!83822 (= e!54680 (ite c!13431 (t!5196 (toList!734 lt!39108)) (ite c!13428 (Cons!1500 (h!2090 (toList!734 lt!39108)) (t!5196 (toList!734 lt!39108))) Nil!1501)))))

(declare-fun bm!7877 () Bool)

(declare-fun c!13429 () Bool)

(declare-fun call!7880 () List!1504)

(assert (=> bm!7877 (= call!7880 ($colon$colon!70 e!54680 (ite c!13429 (h!2090 (toList!734 lt!39108)) (tuple2!2183 (_1!1102 (tuple2!2183 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))))

(declare-fun c!13430 () Bool)

(assert (=> bm!7877 (= c!13430 c!13429)))

(declare-fun b!83823 () Bool)

(declare-fun e!54684 () List!1504)

(declare-fun call!7882 () List!1504)

(assert (=> b!83823 (= e!54684 call!7882)))

(declare-fun b!83824 () Bool)

(declare-fun e!54682 () List!1504)

(assert (=> b!83824 (= e!54682 call!7880)))

(declare-fun bm!7878 () Bool)

(assert (=> bm!7878 (= call!7882 call!7880)))

(declare-fun bm!7879 () Bool)

(declare-fun call!7881 () List!1504)

(assert (=> bm!7879 (= call!7881 call!7882)))

(declare-fun b!83825 () Bool)

(assert (=> b!83825 (= e!54680 (insertStrictlySorted!60 (t!5196 (toList!734 lt!39108)) (_1!1102 (tuple2!2183 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun b!83826 () Bool)

(declare-fun e!54683 () List!1504)

(assert (=> b!83826 (= e!54683 call!7881)))

(declare-fun b!83827 () Bool)

(assert (=> b!83827 (= e!54682 e!54684)))

(assert (=> b!83827 (= c!13431 (and ((_ is Cons!1500) (toList!734 lt!39108)) (= (_1!1102 (h!2090 (toList!734 lt!39108))) (_1!1102 (tuple2!2183 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(declare-fun e!54681 () Bool)

(declare-fun lt!39535 () List!1504)

(declare-fun b!83828 () Bool)

(assert (=> b!83828 (= e!54681 (contains!746 lt!39535 (tuple2!2183 (_1!1102 (tuple2!2183 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(declare-fun b!83821 () Bool)

(declare-fun res!43332 () Bool)

(assert (=> b!83821 (=> (not res!43332) (not e!54681))))

(assert (=> b!83821 (= res!43332 (containsKey!143 lt!39535 (_1!1102 (tuple2!2183 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun d!21231 () Bool)

(assert (=> d!21231 e!54681))

(declare-fun res!43331 () Bool)

(assert (=> d!21231 (=> (not res!43331) (not e!54681))))

(assert (=> d!21231 (= res!43331 (isStrictlySorted!284 lt!39535))))

(assert (=> d!21231 (= lt!39535 e!54682)))

(assert (=> d!21231 (= c!13429 (and ((_ is Cons!1500) (toList!734 lt!39108)) (bvslt (_1!1102 (h!2090 (toList!734 lt!39108))) (_1!1102 (tuple2!2183 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(assert (=> d!21231 (isStrictlySorted!284 (toList!734 lt!39108))))

(assert (=> d!21231 (= (insertStrictlySorted!60 (toList!734 lt!39108) (_1!1102 (tuple2!2183 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))) lt!39535)))

(declare-fun b!83829 () Bool)

(assert (=> b!83829 (= e!54683 call!7881)))

(declare-fun b!83830 () Bool)

(assert (=> b!83830 (= c!13428 (and ((_ is Cons!1500) (toList!734 lt!39108)) (bvsgt (_1!1102 (h!2090 (toList!734 lt!39108))) (_1!1102 (tuple2!2183 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(assert (=> b!83830 (= e!54684 e!54683)))

(assert (= (and d!21231 c!13429) b!83824))

(assert (= (and d!21231 (not c!13429)) b!83827))

(assert (= (and b!83827 c!13431) b!83823))

(assert (= (and b!83827 (not c!13431)) b!83830))

(assert (= (and b!83830 c!13428) b!83826))

(assert (= (and b!83830 (not c!13428)) b!83829))

(assert (= (or b!83826 b!83829) bm!7879))

(assert (= (or b!83823 bm!7879) bm!7878))

(assert (= (or b!83824 bm!7878) bm!7877))

(assert (= (and bm!7877 c!13430) b!83825))

(assert (= (and bm!7877 (not c!13430)) b!83822))

(assert (= (and d!21231 res!43331) b!83821))

(assert (= (and b!83821 res!43332) b!83828))

(declare-fun m!87233 () Bool)

(assert (=> d!21231 m!87233))

(declare-fun m!87235 () Bool)

(assert (=> d!21231 m!87235))

(declare-fun m!87237 () Bool)

(assert (=> b!83825 m!87237))

(declare-fun m!87239 () Bool)

(assert (=> bm!7877 m!87239))

(declare-fun m!87241 () Bool)

(assert (=> b!83821 m!87241))

(declare-fun m!87243 () Bool)

(assert (=> b!83828 m!87243))

(assert (=> d!21099 d!21231))

(declare-fun d!21233 () Bool)

(assert (=> d!21233 (isDefined!92 (getValueByKey!140 (toList!734 lt!39113) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!39536 () Unit!2413)

(assert (=> d!21233 (= lt!39536 (choose!502 (toList!734 lt!39113) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!54685 () Bool)

(assert (=> d!21233 e!54685))

(declare-fun res!43333 () Bool)

(assert (=> d!21233 (=> (not res!43333) (not e!54685))))

(assert (=> d!21233 (= res!43333 (isStrictlySorted!284 (toList!734 lt!39113)))))

(assert (=> d!21233 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 lt!39113) #b1000000000000000000000000000000000000000000000000000000000000000) lt!39536)))

(declare-fun b!83831 () Bool)

(assert (=> b!83831 (= e!54685 (containsKey!143 (toList!734 lt!39113) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!21233 res!43333) b!83831))

(assert (=> d!21233 m!86205))

(assert (=> d!21233 m!86205))

(assert (=> d!21233 m!86207))

(declare-fun m!87245 () Bool)

(assert (=> d!21233 m!87245))

(declare-fun m!87247 () Bool)

(assert (=> d!21233 m!87247))

(assert (=> b!83831 m!86201))

(assert (=> b!83239 d!21233))

(declare-fun d!21235 () Bool)

(assert (=> d!21235 (= (isDefined!92 (getValueByKey!140 (toList!734 lt!39113) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!340 (getValueByKey!140 (toList!734 lt!39113) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3545 () Bool)

(assert (= bs!3545 d!21235))

(assert (=> bs!3545 m!86205))

(declare-fun m!87249 () Bool)

(assert (=> bs!3545 m!87249))

(assert (=> b!83239 d!21235))

(declare-fun b!83834 () Bool)

(declare-fun e!54687 () Option!146)

(assert (=> b!83834 (= e!54687 (getValueByKey!140 (t!5196 (toList!734 lt!39113)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!21237 () Bool)

(declare-fun c!13432 () Bool)

(assert (=> d!21237 (= c!13432 (and ((_ is Cons!1500) (toList!734 lt!39113)) (= (_1!1102 (h!2090 (toList!734 lt!39113))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!54686 () Option!146)

(assert (=> d!21237 (= (getValueByKey!140 (toList!734 lt!39113) #b1000000000000000000000000000000000000000000000000000000000000000) e!54686)))

(declare-fun b!83832 () Bool)

(assert (=> b!83832 (= e!54686 (Some!145 (_2!1102 (h!2090 (toList!734 lt!39113)))))))

(declare-fun b!83833 () Bool)

(assert (=> b!83833 (= e!54686 e!54687)))

(declare-fun c!13433 () Bool)

(assert (=> b!83833 (= c!13433 (and ((_ is Cons!1500) (toList!734 lt!39113)) (not (= (_1!1102 (h!2090 (toList!734 lt!39113))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!83835 () Bool)

(assert (=> b!83835 (= e!54687 None!144)))

(assert (= (and d!21237 c!13432) b!83832))

(assert (= (and d!21237 (not c!13432)) b!83833))

(assert (= (and b!83833 c!13433) b!83834))

(assert (= (and b!83833 (not c!13433)) b!83835))

(declare-fun m!87251 () Bool)

(assert (=> b!83834 m!87251))

(assert (=> b!83239 d!21237))

(declare-fun lt!39537 () Bool)

(declare-fun d!21239 () Bool)

(assert (=> d!21239 (= lt!39537 (select (content!89 (toList!734 lt!39262)) (tuple2!2183 lt!39033 lt!39035)))))

(declare-fun e!54688 () Bool)

(assert (=> d!21239 (= lt!39537 e!54688)))

(declare-fun res!43335 () Bool)

(assert (=> d!21239 (=> (not res!43335) (not e!54688))))

(assert (=> d!21239 (= res!43335 ((_ is Cons!1500) (toList!734 lt!39262)))))

(assert (=> d!21239 (= (contains!746 (toList!734 lt!39262) (tuple2!2183 lt!39033 lt!39035)) lt!39537)))

(declare-fun b!83836 () Bool)

(declare-fun e!54689 () Bool)

(assert (=> b!83836 (= e!54688 e!54689)))

(declare-fun res!43334 () Bool)

(assert (=> b!83836 (=> res!43334 e!54689)))

(assert (=> b!83836 (= res!43334 (= (h!2090 (toList!734 lt!39262)) (tuple2!2183 lt!39033 lt!39035)))))

(declare-fun b!83837 () Bool)

(assert (=> b!83837 (= e!54689 (contains!746 (t!5196 (toList!734 lt!39262)) (tuple2!2183 lt!39033 lt!39035)))))

(assert (= (and d!21239 res!43335) b!83836))

(assert (= (and b!83836 (not res!43334)) b!83837))

(declare-fun m!87253 () Bool)

(assert (=> d!21239 m!87253))

(declare-fun m!87255 () Bool)

(assert (=> d!21239 m!87255))

(declare-fun m!87257 () Bool)

(assert (=> b!83837 m!87257))

(assert (=> b!83466 d!21239))

(declare-fun d!21241 () Bool)

(assert (=> d!21241 (= (isDefined!92 (getValueByKey!140 (toList!734 lt!39036) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!340 (getValueByKey!140 (toList!734 lt!39036) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3546 () Bool)

(assert (= bs!3546 d!21241))

(assert (=> bs!3546 m!86415))

(declare-fun m!87259 () Bool)

(assert (=> bs!3546 m!87259))

(assert (=> b!83380 d!21241))

(declare-fun b!83840 () Bool)

(declare-fun e!54691 () Option!146)

(assert (=> b!83840 (= e!54691 (getValueByKey!140 (t!5196 (toList!734 lt!39036)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!21243 () Bool)

(declare-fun c!13434 () Bool)

(assert (=> d!21243 (= c!13434 (and ((_ is Cons!1500) (toList!734 lt!39036)) (= (_1!1102 (h!2090 (toList!734 lt!39036))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!54690 () Option!146)

(assert (=> d!21243 (= (getValueByKey!140 (toList!734 lt!39036) #b0000000000000000000000000000000000000000000000000000000000000000) e!54690)))

(declare-fun b!83838 () Bool)

(assert (=> b!83838 (= e!54690 (Some!145 (_2!1102 (h!2090 (toList!734 lt!39036)))))))

(declare-fun b!83839 () Bool)

(assert (=> b!83839 (= e!54690 e!54691)))

(declare-fun c!13435 () Bool)

(assert (=> b!83839 (= c!13435 (and ((_ is Cons!1500) (toList!734 lt!39036)) (not (= (_1!1102 (h!2090 (toList!734 lt!39036))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!83841 () Bool)

(assert (=> b!83841 (= e!54691 None!144)))

(assert (= (and d!21243 c!13434) b!83838))

(assert (= (and d!21243 (not c!13434)) b!83839))

(assert (= (and b!83839 c!13435) b!83840))

(assert (= (and b!83839 (not c!13435)) b!83841))

(declare-fun m!87261 () Bool)

(assert (=> b!83840 m!87261))

(assert (=> b!83380 d!21243))

(declare-fun d!21245 () Bool)

(assert (=> d!21245 (isDefined!92 (getValueByKey!140 (toList!734 (+!105 lt!39109 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))) lt!39118))))

(declare-fun lt!39538 () Unit!2413)

(assert (=> d!21245 (= lt!39538 (choose!502 (toList!734 (+!105 lt!39109 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))) lt!39118))))

(declare-fun e!54692 () Bool)

(assert (=> d!21245 e!54692))

(declare-fun res!43336 () Bool)

(assert (=> d!21245 (=> (not res!43336) (not e!54692))))

(assert (=> d!21245 (= res!43336 (isStrictlySorted!284 (toList!734 (+!105 lt!39109 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(assert (=> d!21245 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 (+!105 lt!39109 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))) lt!39118) lt!39538)))

(declare-fun b!83842 () Bool)

(assert (=> b!83842 (= e!54692 (containsKey!143 (toList!734 (+!105 lt!39109 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))) lt!39118))))

(assert (= (and d!21245 res!43336) b!83842))

(assert (=> d!21245 m!86709))

(assert (=> d!21245 m!86709))

(assert (=> d!21245 m!86711))

(declare-fun m!87263 () Bool)

(assert (=> d!21245 m!87263))

(declare-fun m!87265 () Bool)

(assert (=> d!21245 m!87265))

(assert (=> b!83842 m!86705))

(assert (=> b!83519 d!21245))

(declare-fun d!21247 () Bool)

(assert (=> d!21247 (= (isDefined!92 (getValueByKey!140 (toList!734 (+!105 lt!39109 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))) lt!39118)) (not (isEmpty!340 (getValueByKey!140 (toList!734 (+!105 lt!39109 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))) lt!39118))))))

(declare-fun bs!3547 () Bool)

(assert (= bs!3547 d!21247))

(assert (=> bs!3547 m!86709))

(declare-fun m!87267 () Bool)

(assert (=> bs!3547 m!87267))

(assert (=> b!83519 d!21247))

(declare-fun b!83845 () Bool)

(declare-fun e!54694 () Option!146)

(assert (=> b!83845 (= e!54694 (getValueByKey!140 (t!5196 (toList!734 (+!105 lt!39109 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))) lt!39118))))

(declare-fun d!21249 () Bool)

(declare-fun c!13436 () Bool)

(assert (=> d!21249 (= c!13436 (and ((_ is Cons!1500) (toList!734 (+!105 lt!39109 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))) (= (_1!1102 (h!2090 (toList!734 (+!105 lt!39109 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))) lt!39118)))))

(declare-fun e!54693 () Option!146)

(assert (=> d!21249 (= (getValueByKey!140 (toList!734 (+!105 lt!39109 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))) lt!39118) e!54693)))

(declare-fun b!83843 () Bool)

(assert (=> b!83843 (= e!54693 (Some!145 (_2!1102 (h!2090 (toList!734 (+!105 lt!39109 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))))))))

(declare-fun b!83844 () Bool)

(assert (=> b!83844 (= e!54693 e!54694)))

(declare-fun c!13437 () Bool)

(assert (=> b!83844 (= c!13437 (and ((_ is Cons!1500) (toList!734 (+!105 lt!39109 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))) (not (= (_1!1102 (h!2090 (toList!734 (+!105 lt!39109 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))) lt!39118))))))

(declare-fun b!83846 () Bool)

(assert (=> b!83846 (= e!54694 None!144)))

(assert (= (and d!21249 c!13436) b!83843))

(assert (= (and d!21249 (not c!13436)) b!83844))

(assert (= (and b!83844 c!13437) b!83845))

(assert (= (and b!83844 (not c!13437)) b!83846))

(declare-fun m!87269 () Bool)

(assert (=> b!83845 m!87269))

(assert (=> b!83519 d!21249))

(assert (=> d!21087 d!21081))

(assert (=> d!21087 d!21085))

(declare-fun d!21251 () Bool)

(assert (=> d!21251 (contains!744 (+!105 lt!39109 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))) lt!39118)))

(assert (=> d!21251 true))

(declare-fun _$35!327 () Unit!2413)

(assert (=> d!21251 (= (choose!497 lt!39109 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))) lt!39118) _$35!327)))

(declare-fun bs!3548 () Bool)

(assert (= bs!3548 d!21251))

(assert (=> bs!3548 m!86151))

(assert (=> bs!3548 m!86151))

(assert (=> bs!3548 m!86153))

(assert (=> d!21087 d!21251))

(declare-fun d!21253 () Bool)

(declare-fun e!54696 () Bool)

(assert (=> d!21253 e!54696))

(declare-fun res!43337 () Bool)

(assert (=> d!21253 (=> res!43337 e!54696)))

(declare-fun lt!39539 () Bool)

(assert (=> d!21253 (= res!43337 (not lt!39539))))

(declare-fun lt!39542 () Bool)

(assert (=> d!21253 (= lt!39539 lt!39542)))

(declare-fun lt!39541 () Unit!2413)

(declare-fun e!54695 () Unit!2413)

(assert (=> d!21253 (= lt!39541 e!54695)))

(declare-fun c!13438 () Bool)

(assert (=> d!21253 (= c!13438 lt!39542)))

(assert (=> d!21253 (= lt!39542 (containsKey!143 (toList!734 lt!39109) lt!39118))))

(assert (=> d!21253 (= (contains!744 lt!39109 lt!39118) lt!39539)))

(declare-fun b!83848 () Bool)

(declare-fun lt!39540 () Unit!2413)

(assert (=> b!83848 (= e!54695 lt!39540)))

(assert (=> b!83848 (= lt!39540 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 lt!39109) lt!39118))))

(assert (=> b!83848 (isDefined!92 (getValueByKey!140 (toList!734 lt!39109) lt!39118))))

(declare-fun b!83849 () Bool)

(declare-fun Unit!2451 () Unit!2413)

(assert (=> b!83849 (= e!54695 Unit!2451)))

(declare-fun b!83850 () Bool)

(assert (=> b!83850 (= e!54696 (isDefined!92 (getValueByKey!140 (toList!734 lt!39109) lt!39118)))))

(assert (= (and d!21253 c!13438) b!83848))

(assert (= (and d!21253 (not c!13438)) b!83849))

(assert (= (and d!21253 (not res!43337)) b!83850))

(declare-fun m!87271 () Bool)

(assert (=> d!21253 m!87271))

(declare-fun m!87273 () Bool)

(assert (=> b!83848 m!87273))

(declare-fun m!87275 () Bool)

(assert (=> b!83848 m!87275))

(assert (=> b!83848 m!87275))

(declare-fun m!87277 () Bool)

(assert (=> b!83848 m!87277))

(assert (=> b!83850 m!87275))

(assert (=> b!83850 m!87275))

(assert (=> b!83850 m!87277))

(assert (=> d!21087 d!21253))

(declare-fun c!13439 () Bool)

(declare-fun c!13442 () Bool)

(declare-fun e!54697 () List!1504)

(declare-fun b!83852 () Bool)

(assert (=> b!83852 (= e!54697 (ite c!13442 (t!5196 (t!5196 (toList!734 lt!38773))) (ite c!13439 (Cons!1500 (h!2090 (t!5196 (toList!734 lt!38773))) (t!5196 (t!5196 (toList!734 lt!38773)))) Nil!1501)))))

(declare-fun bm!7880 () Bool)

(declare-fun call!7883 () List!1504)

(declare-fun c!13440 () Bool)

(assert (=> bm!7880 (= call!7883 ($colon$colon!70 e!54697 (ite c!13440 (h!2090 (t!5196 (toList!734 lt!38773))) (tuple2!2183 (_1!1102 lt!38779) (_2!1102 lt!38779)))))))

(declare-fun c!13441 () Bool)

(assert (=> bm!7880 (= c!13441 c!13440)))

(declare-fun b!83853 () Bool)

(declare-fun e!54701 () List!1504)

(declare-fun call!7885 () List!1504)

(assert (=> b!83853 (= e!54701 call!7885)))

(declare-fun b!83854 () Bool)

(declare-fun e!54699 () List!1504)

(assert (=> b!83854 (= e!54699 call!7883)))

(declare-fun bm!7881 () Bool)

(assert (=> bm!7881 (= call!7885 call!7883)))

(declare-fun bm!7882 () Bool)

(declare-fun call!7884 () List!1504)

(assert (=> bm!7882 (= call!7884 call!7885)))

(declare-fun b!83855 () Bool)

(assert (=> b!83855 (= e!54697 (insertStrictlySorted!60 (t!5196 (t!5196 (toList!734 lt!38773))) (_1!1102 lt!38779) (_2!1102 lt!38779)))))

(declare-fun b!83856 () Bool)

(declare-fun e!54700 () List!1504)

(assert (=> b!83856 (= e!54700 call!7884)))

(declare-fun b!83857 () Bool)

(assert (=> b!83857 (= e!54699 e!54701)))

(assert (=> b!83857 (= c!13442 (and ((_ is Cons!1500) (t!5196 (toList!734 lt!38773))) (= (_1!1102 (h!2090 (t!5196 (toList!734 lt!38773)))) (_1!1102 lt!38779))))))

(declare-fun b!83858 () Bool)

(declare-fun e!54698 () Bool)

(declare-fun lt!39543 () List!1504)

(assert (=> b!83858 (= e!54698 (contains!746 lt!39543 (tuple2!2183 (_1!1102 lt!38779) (_2!1102 lt!38779))))))

(declare-fun b!83851 () Bool)

(declare-fun res!43339 () Bool)

(assert (=> b!83851 (=> (not res!43339) (not e!54698))))

(assert (=> b!83851 (= res!43339 (containsKey!143 lt!39543 (_1!1102 lt!38779)))))

(declare-fun d!21255 () Bool)

(assert (=> d!21255 e!54698))

(declare-fun res!43338 () Bool)

(assert (=> d!21255 (=> (not res!43338) (not e!54698))))

(assert (=> d!21255 (= res!43338 (isStrictlySorted!284 lt!39543))))

(assert (=> d!21255 (= lt!39543 e!54699)))

(assert (=> d!21255 (= c!13440 (and ((_ is Cons!1500) (t!5196 (toList!734 lt!38773))) (bvslt (_1!1102 (h!2090 (t!5196 (toList!734 lt!38773)))) (_1!1102 lt!38779))))))

(assert (=> d!21255 (isStrictlySorted!284 (t!5196 (toList!734 lt!38773)))))

(assert (=> d!21255 (= (insertStrictlySorted!60 (t!5196 (toList!734 lt!38773)) (_1!1102 lt!38779) (_2!1102 lt!38779)) lt!39543)))

(declare-fun b!83859 () Bool)

(assert (=> b!83859 (= e!54700 call!7884)))

(declare-fun b!83860 () Bool)

(assert (=> b!83860 (= c!13439 (and ((_ is Cons!1500) (t!5196 (toList!734 lt!38773))) (bvsgt (_1!1102 (h!2090 (t!5196 (toList!734 lt!38773)))) (_1!1102 lt!38779))))))

(assert (=> b!83860 (= e!54701 e!54700)))

(assert (= (and d!21255 c!13440) b!83854))

(assert (= (and d!21255 (not c!13440)) b!83857))

(assert (= (and b!83857 c!13442) b!83853))

(assert (= (and b!83857 (not c!13442)) b!83860))

(assert (= (and b!83860 c!13439) b!83856))

(assert (= (and b!83860 (not c!13439)) b!83859))

(assert (= (or b!83856 b!83859) bm!7882))

(assert (= (or b!83853 bm!7882) bm!7881))

(assert (= (or b!83854 bm!7881) bm!7880))

(assert (= (and bm!7880 c!13441) b!83855))

(assert (= (and bm!7880 (not c!13441)) b!83852))

(assert (= (and d!21255 res!43338) b!83851))

(assert (= (and b!83851 res!43339) b!83858))

(declare-fun m!87279 () Bool)

(assert (=> d!21255 m!87279))

(declare-fun m!87281 () Bool)

(assert (=> d!21255 m!87281))

(declare-fun m!87283 () Bool)

(assert (=> b!83855 m!87283))

(declare-fun m!87285 () Bool)

(assert (=> bm!7880 m!87285))

(declare-fun m!87287 () Bool)

(assert (=> b!83851 m!87287))

(declare-fun m!87289 () Bool)

(assert (=> b!83858 m!87289))

(assert (=> b!83773 d!21255))

(declare-fun d!21257 () Bool)

(declare-fun e!54703 () Bool)

(assert (=> d!21257 e!54703))

(declare-fun res!43340 () Bool)

(assert (=> d!21257 (=> res!43340 e!54703)))

(declare-fun lt!39544 () Bool)

(assert (=> d!21257 (= res!43340 (not lt!39544))))

(declare-fun lt!39547 () Bool)

(assert (=> d!21257 (= lt!39544 lt!39547)))

(declare-fun lt!39546 () Unit!2413)

(declare-fun e!54702 () Unit!2413)

(assert (=> d!21257 (= lt!39546 e!54702)))

(declare-fun c!13443 () Bool)

(assert (=> d!21257 (= c!13443 lt!39547)))

(assert (=> d!21257 (= lt!39547 (containsKey!143 (toList!734 lt!39471) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(assert (=> d!21257 (= (contains!744 lt!39471 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))) lt!39544)))

(declare-fun b!83861 () Bool)

(declare-fun lt!39545 () Unit!2413)

(assert (=> b!83861 (= e!54702 lt!39545)))

(assert (=> b!83861 (= lt!39545 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 lt!39471) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(assert (=> b!83861 (isDefined!92 (getValueByKey!140 (toList!734 lt!39471) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun b!83862 () Bool)

(declare-fun Unit!2452 () Unit!2413)

(assert (=> b!83862 (= e!54702 Unit!2452)))

(declare-fun b!83863 () Bool)

(assert (=> b!83863 (= e!54703 (isDefined!92 (getValueByKey!140 (toList!734 lt!39471) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(assert (= (and d!21257 c!13443) b!83861))

(assert (= (and d!21257 (not c!13443)) b!83862))

(assert (= (and d!21257 (not res!43340)) b!83863))

(declare-fun m!87291 () Bool)

(assert (=> d!21257 m!87291))

(declare-fun m!87293 () Bool)

(assert (=> b!83861 m!87293))

(assert (=> b!83861 m!87025))

(assert (=> b!83861 m!87025))

(declare-fun m!87295 () Bool)

(assert (=> b!83861 m!87295))

(assert (=> b!83863 m!87025))

(assert (=> b!83863 m!87025))

(assert (=> b!83863 m!87295))

(assert (=> d!21157 d!21257))

(declare-fun b!83866 () Bool)

(declare-fun e!54705 () Option!146)

(assert (=> b!83866 (= e!54705 (getValueByKey!140 (t!5196 lt!39473) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun d!21259 () Bool)

(declare-fun c!13444 () Bool)

(assert (=> d!21259 (= c!13444 (and ((_ is Cons!1500) lt!39473) (= (_1!1102 (h!2090 lt!39473)) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(declare-fun e!54704 () Option!146)

(assert (=> d!21259 (= (getValueByKey!140 lt!39473 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))) e!54704)))

(declare-fun b!83864 () Bool)

(assert (=> b!83864 (= e!54704 (Some!145 (_2!1102 (h!2090 lt!39473))))))

(declare-fun b!83865 () Bool)

(assert (=> b!83865 (= e!54704 e!54705)))

(declare-fun c!13445 () Bool)

(assert (=> b!83865 (= c!13445 (and ((_ is Cons!1500) lt!39473) (not (= (_1!1102 (h!2090 lt!39473)) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))))

(declare-fun b!83867 () Bool)

(assert (=> b!83867 (= e!54705 None!144)))

(assert (= (and d!21259 c!13444) b!83864))

(assert (= (and d!21259 (not c!13444)) b!83865))

(assert (= (and b!83865 c!13445) b!83866))

(assert (= (and b!83865 (not c!13445)) b!83867))

(declare-fun m!87297 () Bool)

(assert (=> b!83866 m!87297))

(assert (=> d!21157 d!21259))

(declare-fun d!21261 () Bool)

(assert (=> d!21261 (= (getValueByKey!140 lt!39473 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))) (Some!145 (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun lt!39548 () Unit!2413)

(assert (=> d!21261 (= lt!39548 (choose!493 lt!39473 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun e!54706 () Bool)

(assert (=> d!21261 e!54706))

(declare-fun res!43341 () Bool)

(assert (=> d!21261 (=> (not res!43341) (not e!54706))))

(assert (=> d!21261 (= res!43341 (isStrictlySorted!284 lt!39473))))

(assert (=> d!21261 (= (lemmaContainsTupThenGetReturnValue!57 lt!39473 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))) lt!39548)))

(declare-fun b!83868 () Bool)

(declare-fun res!43342 () Bool)

(assert (=> b!83868 (=> (not res!43342) (not e!54706))))

(assert (=> b!83868 (= res!43342 (containsKey!143 lt!39473 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun b!83869 () Bool)

(assert (=> b!83869 (= e!54706 (contains!746 lt!39473 (tuple2!2183 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(assert (= (and d!21261 res!43341) b!83868))

(assert (= (and b!83868 res!43342) b!83869))

(assert (=> d!21261 m!87019))

(declare-fun m!87299 () Bool)

(assert (=> d!21261 m!87299))

(declare-fun m!87301 () Bool)

(assert (=> d!21261 m!87301))

(declare-fun m!87303 () Bool)

(assert (=> b!83868 m!87303))

(declare-fun m!87305 () Bool)

(assert (=> b!83869 m!87305))

(assert (=> d!21157 d!21261))

(declare-fun c!13446 () Bool)

(declare-fun b!83871 () Bool)

(declare-fun e!54707 () List!1504)

(declare-fun c!13449 () Bool)

(assert (=> b!83871 (= e!54707 (ite c!13449 (t!5196 (toList!734 lt!38773)) (ite c!13446 (Cons!1500 (h!2090 (toList!734 lt!38773)) (t!5196 (toList!734 lt!38773))) Nil!1501)))))

(declare-fun bm!7883 () Bool)

(declare-fun c!13447 () Bool)

(declare-fun call!7886 () List!1504)

(assert (=> bm!7883 (= call!7886 ($colon$colon!70 e!54707 (ite c!13447 (h!2090 (toList!734 lt!38773)) (tuple2!2183 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))))

(declare-fun c!13448 () Bool)

(assert (=> bm!7883 (= c!13448 c!13447)))

(declare-fun b!83872 () Bool)

(declare-fun e!54711 () List!1504)

(declare-fun call!7888 () List!1504)

(assert (=> b!83872 (= e!54711 call!7888)))

(declare-fun b!83873 () Bool)

(declare-fun e!54709 () List!1504)

(assert (=> b!83873 (= e!54709 call!7886)))

(declare-fun bm!7884 () Bool)

(assert (=> bm!7884 (= call!7888 call!7886)))

(declare-fun bm!7885 () Bool)

(declare-fun call!7887 () List!1504)

(assert (=> bm!7885 (= call!7887 call!7888)))

(declare-fun b!83874 () Bool)

(assert (=> b!83874 (= e!54707 (insertStrictlySorted!60 (t!5196 (toList!734 lt!38773)) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun b!83875 () Bool)

(declare-fun e!54710 () List!1504)

(assert (=> b!83875 (= e!54710 call!7887)))

(declare-fun b!83876 () Bool)

(assert (=> b!83876 (= e!54709 e!54711)))

(assert (=> b!83876 (= c!13449 (and ((_ is Cons!1500) (toList!734 lt!38773)) (= (_1!1102 (h!2090 (toList!734 lt!38773))) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(declare-fun b!83877 () Bool)

(declare-fun e!54708 () Bool)

(declare-fun lt!39549 () List!1504)

(assert (=> b!83877 (= e!54708 (contains!746 lt!39549 (tuple2!2183 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(declare-fun b!83870 () Bool)

(declare-fun res!43344 () Bool)

(assert (=> b!83870 (=> (not res!43344) (not e!54708))))

(assert (=> b!83870 (= res!43344 (containsKey!143 lt!39549 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun d!21263 () Bool)

(assert (=> d!21263 e!54708))

(declare-fun res!43343 () Bool)

(assert (=> d!21263 (=> (not res!43343) (not e!54708))))

(assert (=> d!21263 (= res!43343 (isStrictlySorted!284 lt!39549))))

(assert (=> d!21263 (= lt!39549 e!54709)))

(assert (=> d!21263 (= c!13447 (and ((_ is Cons!1500) (toList!734 lt!38773)) (bvslt (_1!1102 (h!2090 (toList!734 lt!38773))) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(assert (=> d!21263 (isStrictlySorted!284 (toList!734 lt!38773))))

(assert (=> d!21263 (= (insertStrictlySorted!60 (toList!734 lt!38773) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))) lt!39549)))

(declare-fun b!83878 () Bool)

(assert (=> b!83878 (= e!54710 call!7887)))

(declare-fun b!83879 () Bool)

(assert (=> b!83879 (= c!13446 (and ((_ is Cons!1500) (toList!734 lt!38773)) (bvsgt (_1!1102 (h!2090 (toList!734 lt!38773))) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(assert (=> b!83879 (= e!54711 e!54710)))

(assert (= (and d!21263 c!13447) b!83873))

(assert (= (and d!21263 (not c!13447)) b!83876))

(assert (= (and b!83876 c!13449) b!83872))

(assert (= (and b!83876 (not c!13449)) b!83879))

(assert (= (and b!83879 c!13446) b!83875))

(assert (= (and b!83879 (not c!13446)) b!83878))

(assert (= (or b!83875 b!83878) bm!7885))

(assert (= (or b!83872 bm!7885) bm!7884))

(assert (= (or b!83873 bm!7884) bm!7883))

(assert (= (and bm!7883 c!13448) b!83874))

(assert (= (and bm!7883 (not c!13448)) b!83871))

(assert (= (and d!21263 res!43343) b!83870))

(assert (= (and b!83870 res!43344) b!83877))

(declare-fun m!87307 () Bool)

(assert (=> d!21263 m!87307))

(assert (=> d!21263 m!86993))

(declare-fun m!87309 () Bool)

(assert (=> b!83874 m!87309))

(declare-fun m!87311 () Bool)

(assert (=> bm!7883 m!87311))

(declare-fun m!87313 () Bool)

(assert (=> b!83870 m!87313))

(declare-fun m!87315 () Bool)

(assert (=> b!83877 m!87315))

(assert (=> d!21157 d!21263))

(declare-fun d!21265 () Bool)

(assert (=> d!21265 (= (+!105 (getCurrentListMap!429 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) (getCurrentListMap!429 (_keys!3984 newMap!16) (array!4000 (store (arr!1905 (_values!2299 newMap!16)) (index!3081 lt!38961) (ValueCellFull!920 lt!38784)) (size!2148 (_values!2299 newMap!16))) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(assert (=> d!21265 true))

(declare-fun _$5!89 () Unit!2413)

(assert (=> d!21265 (= (choose!500 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (index!3081 lt!38961) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784 (defaultEntry!2316 newMap!16)) _$5!89)))

(declare-fun bs!3549 () Bool)

(assert (= bs!3549 d!21265))

(assert (=> bs!3549 m!85945))

(assert (=> bs!3549 m!85945))

(assert (=> bs!3549 m!86811))

(assert (=> bs!3549 m!85941))

(assert (=> bs!3549 m!87067))

(assert (=> d!21169 d!21265))

(declare-fun d!21267 () Bool)

(assert (=> d!21267 (= (validMask!0 (mask!6334 newMap!16)) (and (or (= (mask!6334 newMap!16) #b00000000000000000000000000000111) (= (mask!6334 newMap!16) #b00000000000000000000000000001111) (= (mask!6334 newMap!16) #b00000000000000000000000000011111) (= (mask!6334 newMap!16) #b00000000000000000000000000111111) (= (mask!6334 newMap!16) #b00000000000000000000000001111111) (= (mask!6334 newMap!16) #b00000000000000000000000011111111) (= (mask!6334 newMap!16) #b00000000000000000000000111111111) (= (mask!6334 newMap!16) #b00000000000000000000001111111111) (= (mask!6334 newMap!16) #b00000000000000000000011111111111) (= (mask!6334 newMap!16) #b00000000000000000000111111111111) (= (mask!6334 newMap!16) #b00000000000000000001111111111111) (= (mask!6334 newMap!16) #b00000000000000000011111111111111) (= (mask!6334 newMap!16) #b00000000000000000111111111111111) (= (mask!6334 newMap!16) #b00000000000000001111111111111111) (= (mask!6334 newMap!16) #b00000000000000011111111111111111) (= (mask!6334 newMap!16) #b00000000000000111111111111111111) (= (mask!6334 newMap!16) #b00000000000001111111111111111111) (= (mask!6334 newMap!16) #b00000000000011111111111111111111) (= (mask!6334 newMap!16) #b00000000000111111111111111111111) (= (mask!6334 newMap!16) #b00000000001111111111111111111111) (= (mask!6334 newMap!16) #b00000000011111111111111111111111) (= (mask!6334 newMap!16) #b00000000111111111111111111111111) (= (mask!6334 newMap!16) #b00000001111111111111111111111111) (= (mask!6334 newMap!16) #b00000011111111111111111111111111) (= (mask!6334 newMap!16) #b00000111111111111111111111111111) (= (mask!6334 newMap!16) #b00001111111111111111111111111111) (= (mask!6334 newMap!16) #b00011111111111111111111111111111) (= (mask!6334 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!6334 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!21169 d!21267))

(declare-fun d!21269 () Bool)

(assert (=> d!21269 (= (isDefined!92 (getValueByKey!140 (toList!734 lt!39113) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!340 (getValueByKey!140 (toList!734 lt!39113) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!3550 () Bool)

(assert (= bs!3550 d!21269))

(assert (=> bs!3550 m!86397))

(declare-fun m!87317 () Bool)

(assert (=> bs!3550 m!87317))

(assert (=> b!83609 d!21269))

(declare-fun b!83882 () Bool)

(declare-fun e!54713 () Option!146)

(assert (=> b!83882 (= e!54713 (getValueByKey!140 (t!5196 (toList!734 lt!39113)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun c!13450 () Bool)

(declare-fun d!21271 () Bool)

(assert (=> d!21271 (= c!13450 (and ((_ is Cons!1500) (toList!734 lt!39113)) (= (_1!1102 (h!2090 (toList!734 lt!39113))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun e!54712 () Option!146)

(assert (=> d!21271 (= (getValueByKey!140 (toList!734 lt!39113) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!54712)))

(declare-fun b!83880 () Bool)

(assert (=> b!83880 (= e!54712 (Some!145 (_2!1102 (h!2090 (toList!734 lt!39113)))))))

(declare-fun b!83881 () Bool)

(assert (=> b!83881 (= e!54712 e!54713)))

(declare-fun c!13451 () Bool)

(assert (=> b!83881 (= c!13451 (and ((_ is Cons!1500) (toList!734 lt!39113)) (not (= (_1!1102 (h!2090 (toList!734 lt!39113))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!83883 () Bool)

(assert (=> b!83883 (= e!54713 None!144)))

(assert (= (and d!21271 c!13450) b!83880))

(assert (= (and d!21271 (not c!13450)) b!83881))

(assert (= (and b!83881 c!13451) b!83882))

(assert (= (and b!83881 (not c!13451)) b!83883))

(assert (=> b!83882 m!85989))

(declare-fun m!87319 () Bool)

(assert (=> b!83882 m!87319))

(assert (=> b!83609 d!21271))

(declare-fun b!83886 () Bool)

(declare-fun e!54715 () Option!146)

(assert (=> b!83886 (= e!54715 (getValueByKey!140 (t!5196 (t!5196 lt!39046)) (_1!1102 lt!38775)))))

(declare-fun d!21273 () Bool)

(declare-fun c!13452 () Bool)

(assert (=> d!21273 (= c!13452 (and ((_ is Cons!1500) (t!5196 lt!39046)) (= (_1!1102 (h!2090 (t!5196 lt!39046))) (_1!1102 lt!38775))))))

(declare-fun e!54714 () Option!146)

(assert (=> d!21273 (= (getValueByKey!140 (t!5196 lt!39046) (_1!1102 lt!38775)) e!54714)))

(declare-fun b!83884 () Bool)

(assert (=> b!83884 (= e!54714 (Some!145 (_2!1102 (h!2090 (t!5196 lt!39046)))))))

(declare-fun b!83885 () Bool)

(assert (=> b!83885 (= e!54714 e!54715)))

(declare-fun c!13453 () Bool)

(assert (=> b!83885 (= c!13453 (and ((_ is Cons!1500) (t!5196 lt!39046)) (not (= (_1!1102 (h!2090 (t!5196 lt!39046))) (_1!1102 lt!38775)))))))

(declare-fun b!83887 () Bool)

(assert (=> b!83887 (= e!54715 None!144)))

(assert (= (and d!21273 c!13452) b!83884))

(assert (= (and d!21273 (not c!13452)) b!83885))

(assert (= (and b!83885 c!13453) b!83886))

(assert (= (and b!83885 (not c!13453)) b!83887))

(declare-fun m!87321 () Bool)

(assert (=> b!83886 m!87321))

(assert (=> b!83733 d!21273))

(declare-fun b!83890 () Bool)

(declare-fun e!54717 () Option!146)

(assert (=> b!83890 (= e!54717 (getValueByKey!140 (t!5196 (t!5196 (toList!734 lt!39012))) (_1!1102 lt!38772)))))

(declare-fun d!21275 () Bool)

(declare-fun c!13454 () Bool)

(assert (=> d!21275 (= c!13454 (and ((_ is Cons!1500) (t!5196 (toList!734 lt!39012))) (= (_1!1102 (h!2090 (t!5196 (toList!734 lt!39012)))) (_1!1102 lt!38772))))))

(declare-fun e!54716 () Option!146)

(assert (=> d!21275 (= (getValueByKey!140 (t!5196 (toList!734 lt!39012)) (_1!1102 lt!38772)) e!54716)))

(declare-fun b!83888 () Bool)

(assert (=> b!83888 (= e!54716 (Some!145 (_2!1102 (h!2090 (t!5196 (toList!734 lt!39012))))))))

(declare-fun b!83889 () Bool)

(assert (=> b!83889 (= e!54716 e!54717)))

(declare-fun c!13455 () Bool)

(assert (=> b!83889 (= c!13455 (and ((_ is Cons!1500) (t!5196 (toList!734 lt!39012))) (not (= (_1!1102 (h!2090 (t!5196 (toList!734 lt!39012)))) (_1!1102 lt!38772)))))))

(declare-fun b!83891 () Bool)

(assert (=> b!83891 (= e!54717 None!144)))

(assert (= (and d!21275 c!13454) b!83888))

(assert (= (and d!21275 (not c!13454)) b!83889))

(assert (= (and b!83889 c!13455) b!83890))

(assert (= (and b!83889 (not c!13455)) b!83891))

(declare-fun m!87323 () Bool)

(assert (=> b!83890 m!87323))

(assert (=> b!83315 d!21275))

(declare-fun d!21277 () Bool)

(declare-fun res!43345 () Bool)

(declare-fun e!54718 () Bool)

(assert (=> d!21277 (=> res!43345 e!54718)))

(assert (=> d!21277 (= res!43345 (and ((_ is Cons!1500) lt!39051) (= (_1!1102 (h!2090 lt!39051)) (_1!1102 lt!38772))))))

(assert (=> d!21277 (= (containsKey!143 lt!39051 (_1!1102 lt!38772)) e!54718)))

(declare-fun b!83892 () Bool)

(declare-fun e!54719 () Bool)

(assert (=> b!83892 (= e!54718 e!54719)))

(declare-fun res!43346 () Bool)

(assert (=> b!83892 (=> (not res!43346) (not e!54719))))

(assert (=> b!83892 (= res!43346 (and (or (not ((_ is Cons!1500) lt!39051)) (bvsle (_1!1102 (h!2090 lt!39051)) (_1!1102 lt!38772))) ((_ is Cons!1500) lt!39051) (bvslt (_1!1102 (h!2090 lt!39051)) (_1!1102 lt!38772))))))

(declare-fun b!83893 () Bool)

(assert (=> b!83893 (= e!54719 (containsKey!143 (t!5196 lt!39051) (_1!1102 lt!38772)))))

(assert (= (and d!21277 (not res!43345)) b!83892))

(assert (= (and b!83892 res!43346) b!83893))

(declare-fun m!87325 () Bool)

(assert (=> b!83893 m!87325))

(assert (=> b!83503 d!21277))

(declare-fun c!13459 () Bool)

(declare-fun c!13456 () Bool)

(declare-fun e!54720 () List!1504)

(declare-fun b!83895 () Bool)

(assert (=> b!83895 (= e!54720 (ite c!13459 (t!5196 (t!5196 (toList!734 lt!38773))) (ite c!13456 (Cons!1500 (h!2090 (t!5196 (toList!734 lt!38773))) (t!5196 (t!5196 (toList!734 lt!38773)))) Nil!1501)))))

(declare-fun bm!7886 () Bool)

(declare-fun call!7889 () List!1504)

(declare-fun c!13457 () Bool)

(assert (=> bm!7886 (= call!7889 ($colon$colon!70 e!54720 (ite c!13457 (h!2090 (t!5196 (toList!734 lt!38773))) (tuple2!2183 (_1!1102 lt!38775) (_2!1102 lt!38775)))))))

(declare-fun c!13458 () Bool)

(assert (=> bm!7886 (= c!13458 c!13457)))

(declare-fun b!83896 () Bool)

(declare-fun e!54724 () List!1504)

(declare-fun call!7891 () List!1504)

(assert (=> b!83896 (= e!54724 call!7891)))

(declare-fun b!83897 () Bool)

(declare-fun e!54722 () List!1504)

(assert (=> b!83897 (= e!54722 call!7889)))

(declare-fun bm!7887 () Bool)

(assert (=> bm!7887 (= call!7891 call!7889)))

(declare-fun bm!7888 () Bool)

(declare-fun call!7890 () List!1504)

(assert (=> bm!7888 (= call!7890 call!7891)))

(declare-fun b!83898 () Bool)

(assert (=> b!83898 (= e!54720 (insertStrictlySorted!60 (t!5196 (t!5196 (toList!734 lt!38773))) (_1!1102 lt!38775) (_2!1102 lt!38775)))))

(declare-fun b!83899 () Bool)

(declare-fun e!54723 () List!1504)

(assert (=> b!83899 (= e!54723 call!7890)))

(declare-fun b!83900 () Bool)

(assert (=> b!83900 (= e!54722 e!54724)))

(assert (=> b!83900 (= c!13459 (and ((_ is Cons!1500) (t!5196 (toList!734 lt!38773))) (= (_1!1102 (h!2090 (t!5196 (toList!734 lt!38773)))) (_1!1102 lt!38775))))))

(declare-fun b!83901 () Bool)

(declare-fun e!54721 () Bool)

(declare-fun lt!39550 () List!1504)

(assert (=> b!83901 (= e!54721 (contains!746 lt!39550 (tuple2!2183 (_1!1102 lt!38775) (_2!1102 lt!38775))))))

(declare-fun b!83894 () Bool)

(declare-fun res!43348 () Bool)

(assert (=> b!83894 (=> (not res!43348) (not e!54721))))

(assert (=> b!83894 (= res!43348 (containsKey!143 lt!39550 (_1!1102 lt!38775)))))

(declare-fun d!21279 () Bool)

(assert (=> d!21279 e!54721))

(declare-fun res!43347 () Bool)

(assert (=> d!21279 (=> (not res!43347) (not e!54721))))

(assert (=> d!21279 (= res!43347 (isStrictlySorted!284 lt!39550))))

(assert (=> d!21279 (= lt!39550 e!54722)))

(assert (=> d!21279 (= c!13457 (and ((_ is Cons!1500) (t!5196 (toList!734 lt!38773))) (bvslt (_1!1102 (h!2090 (t!5196 (toList!734 lt!38773)))) (_1!1102 lt!38775))))))

(assert (=> d!21279 (isStrictlySorted!284 (t!5196 (toList!734 lt!38773)))))

(assert (=> d!21279 (= (insertStrictlySorted!60 (t!5196 (toList!734 lt!38773)) (_1!1102 lt!38775) (_2!1102 lt!38775)) lt!39550)))

(declare-fun b!83902 () Bool)

(assert (=> b!83902 (= e!54723 call!7890)))

(declare-fun b!83903 () Bool)

(assert (=> b!83903 (= c!13456 (and ((_ is Cons!1500) (t!5196 (toList!734 lt!38773))) (bvsgt (_1!1102 (h!2090 (t!5196 (toList!734 lt!38773)))) (_1!1102 lt!38775))))))

(assert (=> b!83903 (= e!54724 e!54723)))

(assert (= (and d!21279 c!13457) b!83897))

(assert (= (and d!21279 (not c!13457)) b!83900))

(assert (= (and b!83900 c!13459) b!83896))

(assert (= (and b!83900 (not c!13459)) b!83903))

(assert (= (and b!83903 c!13456) b!83899))

(assert (= (and b!83903 (not c!13456)) b!83902))

(assert (= (or b!83899 b!83902) bm!7888))

(assert (= (or b!83896 bm!7888) bm!7887))

(assert (= (or b!83897 bm!7887) bm!7886))

(assert (= (and bm!7886 c!13458) b!83898))

(assert (= (and bm!7886 (not c!13458)) b!83895))

(assert (= (and d!21279 res!43347) b!83894))

(assert (= (and b!83894 res!43348) b!83901))

(declare-fun m!87327 () Bool)

(assert (=> d!21279 m!87327))

(assert (=> d!21279 m!87281))

(declare-fun m!87329 () Bool)

(assert (=> b!83898 m!87329))

(declare-fun m!87331 () Bool)

(assert (=> bm!7886 m!87331))

(declare-fun m!87333 () Bool)

(assert (=> b!83894 m!87333))

(declare-fun m!87335 () Bool)

(assert (=> b!83901 m!87335))

(assert (=> b!83677 d!21279))

(declare-fun d!21281 () Bool)

(assert (=> d!21281 (= (isDefined!92 (getValueByKey!140 (toList!734 lt!39036) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!340 (getValueByKey!140 (toList!734 lt!39036) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3551 () Bool)

(assert (= bs!3551 d!21281))

(assert (=> bs!3551 m!86301))

(declare-fun m!87337 () Bool)

(assert (=> bs!3551 m!87337))

(assert (=> b!83294 d!21281))

(declare-fun b!83906 () Bool)

(declare-fun e!54726 () Option!146)

(assert (=> b!83906 (= e!54726 (getValueByKey!140 (t!5196 (toList!734 lt!39036)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!21283 () Bool)

(declare-fun c!13460 () Bool)

(assert (=> d!21283 (= c!13460 (and ((_ is Cons!1500) (toList!734 lt!39036)) (= (_1!1102 (h!2090 (toList!734 lt!39036))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!54725 () Option!146)

(assert (=> d!21283 (= (getValueByKey!140 (toList!734 lt!39036) #b1000000000000000000000000000000000000000000000000000000000000000) e!54725)))

(declare-fun b!83904 () Bool)

(assert (=> b!83904 (= e!54725 (Some!145 (_2!1102 (h!2090 (toList!734 lt!39036)))))))

(declare-fun b!83905 () Bool)

(assert (=> b!83905 (= e!54725 e!54726)))

(declare-fun c!13461 () Bool)

(assert (=> b!83905 (= c!13461 (and ((_ is Cons!1500) (toList!734 lt!39036)) (not (= (_1!1102 (h!2090 (toList!734 lt!39036))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!83907 () Bool)

(assert (=> b!83907 (= e!54726 None!144)))

(assert (= (and d!21283 c!13460) b!83904))

(assert (= (and d!21283 (not c!13460)) b!83905))

(assert (= (and b!83905 c!13461) b!83906))

(assert (= (and b!83905 (not c!13461)) b!83907))

(declare-fun m!87339 () Bool)

(assert (=> b!83906 m!87339))

(assert (=> b!83294 d!21283))

(declare-fun d!21285 () Bool)

(declare-fun e!54728 () Bool)

(assert (=> d!21285 e!54728))

(declare-fun res!43349 () Bool)

(assert (=> d!21285 (=> res!43349 e!54728)))

(declare-fun lt!39551 () Bool)

(assert (=> d!21285 (= res!43349 (not lt!39551))))

(declare-fun lt!39554 () Bool)

(assert (=> d!21285 (= lt!39551 lt!39554)))

(declare-fun lt!39553 () Unit!2413)

(declare-fun e!54727 () Unit!2413)

(assert (=> d!21285 (= lt!39553 e!54727)))

(declare-fun c!13462 () Bool)

(assert (=> d!21285 (= c!13462 lt!39554)))

(assert (=> d!21285 (= lt!39554 (containsKey!143 (toList!734 lt!39241) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!21285 (= (contains!744 lt!39241 #b1000000000000000000000000000000000000000000000000000000000000000) lt!39551)))

(declare-fun b!83908 () Bool)

(declare-fun lt!39552 () Unit!2413)

(assert (=> b!83908 (= e!54727 lt!39552)))

(assert (=> b!83908 (= lt!39552 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 lt!39241) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!83908 (isDefined!92 (getValueByKey!140 (toList!734 lt!39241) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!83909 () Bool)

(declare-fun Unit!2453 () Unit!2413)

(assert (=> b!83909 (= e!54727 Unit!2453)))

(declare-fun b!83910 () Bool)

(assert (=> b!83910 (= e!54728 (isDefined!92 (getValueByKey!140 (toList!734 lt!39241) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!21285 c!13462) b!83908))

(assert (= (and d!21285 (not c!13462)) b!83909))

(assert (= (and d!21285 (not res!43349)) b!83910))

(declare-fun m!87341 () Bool)

(assert (=> d!21285 m!87341))

(declare-fun m!87343 () Bool)

(assert (=> b!83908 m!87343))

(declare-fun m!87345 () Bool)

(assert (=> b!83908 m!87345))

(assert (=> b!83908 m!87345))

(declare-fun m!87347 () Bool)

(assert (=> b!83908 m!87347))

(assert (=> b!83910 m!87345))

(assert (=> b!83910 m!87345))

(assert (=> b!83910 m!87347))

(assert (=> bm!7824 d!21285))

(assert (=> d!21191 d!21187))

(assert (=> d!21191 d!21189))

(declare-fun d!21287 () Bool)

(assert (=> d!21287 (isDefined!92 (getValueByKey!140 (toList!734 lt!38770) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))

(assert (=> d!21287 true))

(declare-fun _$12!332 () Unit!2413)

(assert (=> d!21287 (= (choose!502 (toList!734 lt!38770) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) _$12!332)))

(declare-fun bs!3552 () Bool)

(assert (= bs!3552 d!21287))

(assert (=> bs!3552 m!85721))

(assert (=> bs!3552 m!85925))

(assert (=> bs!3552 m!85925))

(assert (=> bs!3552 m!85927))

(assert (=> d!21191 d!21287))

(declare-fun d!21289 () Bool)

(declare-fun res!43354 () Bool)

(declare-fun e!54733 () Bool)

(assert (=> d!21289 (=> res!43354 e!54733)))

(assert (=> d!21289 (= res!43354 (or ((_ is Nil!1501) (toList!734 lt!38770)) ((_ is Nil!1501) (t!5196 (toList!734 lt!38770)))))))

(assert (=> d!21289 (= (isStrictlySorted!284 (toList!734 lt!38770)) e!54733)))

(declare-fun b!83915 () Bool)

(declare-fun e!54734 () Bool)

(assert (=> b!83915 (= e!54733 e!54734)))

(declare-fun res!43355 () Bool)

(assert (=> b!83915 (=> (not res!43355) (not e!54734))))

(assert (=> b!83915 (= res!43355 (bvslt (_1!1102 (h!2090 (toList!734 lt!38770))) (_1!1102 (h!2090 (t!5196 (toList!734 lt!38770))))))))

(declare-fun b!83916 () Bool)

(assert (=> b!83916 (= e!54734 (isStrictlySorted!284 (t!5196 (toList!734 lt!38770))))))

(assert (= (and d!21289 (not res!43354)) b!83915))

(assert (= (and b!83915 res!43355) b!83916))

(declare-fun m!87349 () Bool)

(assert (=> b!83916 m!87349))

(assert (=> d!21191 d!21289))

(declare-fun d!21291 () Bool)

(declare-fun e!54735 () Bool)

(assert (=> d!21291 e!54735))

(declare-fun res!43357 () Bool)

(assert (=> d!21291 (=> (not res!43357) (not e!54735))))

(declare-fun lt!39556 () ListLongMap!1437)

(assert (=> d!21291 (= res!43357 (contains!744 lt!39556 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16)))))))

(declare-fun lt!39558 () List!1504)

(assert (=> d!21291 (= lt!39556 (ListLongMap!1438 lt!39558))))

(declare-fun lt!39555 () Unit!2413)

(declare-fun lt!39557 () Unit!2413)

(assert (=> d!21291 (= lt!39555 lt!39557)))

(assert (=> d!21291 (= (getValueByKey!140 lt!39558 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16)))) (Some!145 (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16)))))))

(assert (=> d!21291 (= lt!39557 (lemmaContainsTupThenGetReturnValue!57 lt!39558 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16)))))))

(assert (=> d!21291 (= lt!39558 (insertStrictlySorted!60 (toList!734 call!7805) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16)))))))

(assert (=> d!21291 (= (+!105 call!7805 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16))) lt!39556)))

(declare-fun b!83917 () Bool)

(declare-fun res!43356 () Bool)

(assert (=> b!83917 (=> (not res!43356) (not e!54735))))

(assert (=> b!83917 (= res!43356 (= (getValueByKey!140 (toList!734 lt!39556) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16)))) (Some!145 (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16))))))))

(declare-fun b!83918 () Bool)

(assert (=> b!83918 (= e!54735 (contains!746 (toList!734 lt!39556) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16))))))

(assert (= (and d!21291 res!43357) b!83917))

(assert (= (and b!83917 res!43356) b!83918))

(declare-fun m!87351 () Bool)

(assert (=> d!21291 m!87351))

(declare-fun m!87353 () Bool)

(assert (=> d!21291 m!87353))

(declare-fun m!87355 () Bool)

(assert (=> d!21291 m!87355))

(declare-fun m!87357 () Bool)

(assert (=> d!21291 m!87357))

(declare-fun m!87359 () Bool)

(assert (=> b!83917 m!87359))

(declare-fun m!87361 () Bool)

(assert (=> b!83918 m!87361))

(assert (=> b!83258 d!21291))

(declare-fun d!21293 () Bool)

(declare-fun e!54737 () Bool)

(assert (=> d!21293 e!54737))

(declare-fun res!43358 () Bool)

(assert (=> d!21293 (=> res!43358 e!54737)))

(declare-fun lt!39559 () Bool)

(assert (=> d!21293 (= res!43358 (not lt!39559))))

(declare-fun lt!39562 () Bool)

(assert (=> d!21293 (= lt!39559 lt!39562)))

(declare-fun lt!39561 () Unit!2413)

(declare-fun e!54736 () Unit!2413)

(assert (=> d!21293 (= lt!39561 e!54736)))

(declare-fun c!13463 () Bool)

(assert (=> d!21293 (= c!13463 lt!39562)))

(assert (=> d!21293 (= lt!39562 (containsKey!143 (toList!734 (map!1193 (_2!1101 lt!39413))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))

(assert (=> d!21293 (= (contains!744 (map!1193 (_2!1101 lt!39413)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) lt!39559)))

(declare-fun b!83919 () Bool)

(declare-fun lt!39560 () Unit!2413)

(assert (=> b!83919 (= e!54736 lt!39560)))

(assert (=> b!83919 (= lt!39560 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 (map!1193 (_2!1101 lt!39413))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))

(assert (=> b!83919 (isDefined!92 (getValueByKey!140 (toList!734 (map!1193 (_2!1101 lt!39413))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))

(declare-fun b!83920 () Bool)

(declare-fun Unit!2454 () Unit!2413)

(assert (=> b!83920 (= e!54736 Unit!2454)))

(declare-fun b!83921 () Bool)

(assert (=> b!83921 (= e!54737 (isDefined!92 (getValueByKey!140 (toList!734 (map!1193 (_2!1101 lt!39413))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355))))))

(assert (= (and d!21293 c!13463) b!83919))

(assert (= (and d!21293 (not c!13463)) b!83920))

(assert (= (and d!21293 (not res!43358)) b!83921))

(assert (=> d!21293 m!85721))

(declare-fun m!87363 () Bool)

(assert (=> d!21293 m!87363))

(assert (=> b!83919 m!85721))

(declare-fun m!87365 () Bool)

(assert (=> b!83919 m!87365))

(assert (=> b!83919 m!85721))

(declare-fun m!87367 () Bool)

(assert (=> b!83919 m!87367))

(assert (=> b!83919 m!87367))

(declare-fun m!87369 () Bool)

(assert (=> b!83919 m!87369))

(assert (=> b!83921 m!85721))

(assert (=> b!83921 m!87367))

(assert (=> b!83921 m!87367))

(assert (=> b!83921 m!87369))

(assert (=> b!83571 d!21293))

(declare-fun d!21295 () Bool)

(assert (=> d!21295 (= (map!1193 (_2!1101 lt!39413)) (getCurrentListMap!429 (_keys!3984 (_2!1101 lt!39413)) (_values!2299 (_2!1101 lt!39413)) (mask!6334 (_2!1101 lt!39413)) (extraKeys!2159 (_2!1101 lt!39413)) (zeroValue!2210 (_2!1101 lt!39413)) (minValue!2210 (_2!1101 lt!39413)) #b00000000000000000000000000000000 (defaultEntry!2316 (_2!1101 lt!39413))))))

(declare-fun bs!3553 () Bool)

(assert (= bs!3553 d!21295))

(declare-fun m!87371 () Bool)

(assert (=> bs!3553 m!87371))

(assert (=> b!83571 d!21295))

(declare-fun d!21297 () Bool)

(declare-fun e!54738 () Bool)

(assert (=> d!21297 e!54738))

(declare-fun res!43360 () Bool)

(assert (=> d!21297 (=> (not res!43360) (not e!54738))))

(declare-fun lt!39564 () ListLongMap!1437)

(assert (=> d!21297 (= res!43360 (contains!744 lt!39564 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(declare-fun lt!39566 () List!1504)

(assert (=> d!21297 (= lt!39564 (ListLongMap!1438 lt!39566))))

(declare-fun lt!39563 () Unit!2413)

(declare-fun lt!39565 () Unit!2413)

(assert (=> d!21297 (= lt!39563 lt!39565)))

(assert (=> d!21297 (= (getValueByKey!140 lt!39566 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))) (Some!145 (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(assert (=> d!21297 (= lt!39565 (lemmaContainsTupThenGetReturnValue!57 lt!39566 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(assert (=> d!21297 (= lt!39566 (insertStrictlySorted!60 (toList!734 (getCurrentListMap!429 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16))) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(assert (=> d!21297 (= (+!105 (getCurrentListMap!429 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) lt!39564)))

(declare-fun b!83922 () Bool)

(declare-fun res!43359 () Bool)

(assert (=> b!83922 (=> (not res!43359) (not e!54738))))

(assert (=> b!83922 (= res!43359 (= (getValueByKey!140 (toList!734 lt!39564) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))) (Some!145 (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))

(declare-fun b!83923 () Bool)

(assert (=> b!83923 (= e!54738 (contains!746 (toList!734 lt!39564) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))

(assert (= (and d!21297 res!43360) b!83922))

(assert (= (and b!83922 res!43359) b!83923))

(declare-fun m!87373 () Bool)

(assert (=> d!21297 m!87373))

(declare-fun m!87375 () Bool)

(assert (=> d!21297 m!87375))

(declare-fun m!87377 () Bool)

(assert (=> d!21297 m!87377))

(declare-fun m!87379 () Bool)

(assert (=> d!21297 m!87379))

(declare-fun m!87381 () Bool)

(assert (=> b!83922 m!87381))

(declare-fun m!87383 () Bool)

(assert (=> b!83923 m!87383))

(assert (=> b!83698 d!21297))

(assert (=> b!83698 d!20959))

(declare-fun b!83924 () Bool)

(declare-fun e!54746 () Unit!2413)

(declare-fun Unit!2455 () Unit!2413)

(assert (=> b!83924 (= e!54746 Unit!2455)))

(declare-fun b!83925 () Bool)

(declare-fun e!54751 () Bool)

(declare-fun e!54739 () Bool)

(assert (=> b!83925 (= e!54751 e!54739)))

(declare-fun c!13468 () Bool)

(assert (=> b!83925 (= c!13468 (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun call!7898 () ListLongMap!1437)

(declare-fun call!7894 () ListLongMap!1437)

(declare-fun bm!7889 () Bool)

(declare-fun c!13469 () Bool)

(declare-fun call!7893 () ListLongMap!1437)

(declare-fun call!7895 () ListLongMap!1437)

(declare-fun c!13464 () Bool)

(assert (=> bm!7889 (= call!7895 (+!105 (ite c!13469 call!7898 (ite c!13464 call!7893 call!7894)) (ite (or c!13469 c!13464) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16)))))))

(declare-fun bm!7890 () Bool)

(declare-fun call!7897 () Bool)

(declare-fun lt!39580 () ListLongMap!1437)

(assert (=> bm!7890 (= call!7897 (contains!744 lt!39580 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!54747 () Bool)

(declare-fun b!83926 () Bool)

(assert (=> b!83926 (= e!54747 (= (apply!81 lt!39580 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)) (get!1198 (select (arr!1905 (array!4000 (store (arr!1905 (_values!2299 newMap!16)) (index!3081 lt!38961) (ValueCellFull!920 lt!38784)) (size!2148 (_values!2299 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!343 (defaultEntry!2316 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!83926 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2148 (array!4000 (store (arr!1905 (_values!2299 newMap!16)) (index!3081 lt!38961) (ValueCellFull!920 lt!38784)) (size!2148 (_values!2299 newMap!16))))))))

(assert (=> b!83926 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))))))

(declare-fun b!83927 () Bool)

(declare-fun call!7896 () Bool)

(assert (=> b!83927 (= e!54739 (not call!7896))))

(declare-fun b!83928 () Bool)

(declare-fun e!54750 () Bool)

(assert (=> b!83928 (= e!54750 (validKeyInArray!0 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!7891 () Bool)

(assert (=> bm!7891 (= call!7896 (contains!744 lt!39580 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!83930 () Bool)

(declare-fun e!54740 () Bool)

(assert (=> b!83930 (= e!54740 (= (apply!81 lt!39580 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2210 newMap!16)))))

(declare-fun b!83931 () Bool)

(declare-fun res!43369 () Bool)

(assert (=> b!83931 (=> (not res!43369) (not e!54751))))

(declare-fun e!54748 () Bool)

(assert (=> b!83931 (= res!43369 e!54748)))

(declare-fun c!13465 () Bool)

(assert (=> b!83931 (= c!13465 (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!7892 () Bool)

(declare-fun call!7892 () ListLongMap!1437)

(assert (=> bm!7892 (= call!7892 call!7895)))

(declare-fun b!83932 () Bool)

(assert (=> b!83932 (= e!54748 e!54740)))

(declare-fun res!43366 () Bool)

(assert (=> b!83932 (= res!43366 call!7897)))

(assert (=> b!83932 (=> (not res!43366) (not e!54740))))

(declare-fun b!83933 () Bool)

(declare-fun lt!39573 () Unit!2413)

(assert (=> b!83933 (= e!54746 lt!39573)))

(declare-fun lt!39576 () ListLongMap!1437)

(assert (=> b!83933 (= lt!39576 (getCurrentListMapNoExtraKeys!70 (_keys!3984 newMap!16) (array!4000 (store (arr!1905 (_values!2299 newMap!16)) (index!3081 lt!38961) (ValueCellFull!920 lt!38784)) (size!2148 (_values!2299 newMap!16))) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39569 () (_ BitVec 64))

(assert (=> b!83933 (= lt!39569 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39585 () (_ BitVec 64))

(assert (=> b!83933 (= lt!39585 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!39581 () Unit!2413)

(assert (=> b!83933 (= lt!39581 (addStillContains!57 lt!39576 lt!39569 (zeroValue!2210 newMap!16) lt!39585))))

(assert (=> b!83933 (contains!744 (+!105 lt!39576 (tuple2!2183 lt!39569 (zeroValue!2210 newMap!16))) lt!39585)))

(declare-fun lt!39571 () Unit!2413)

(assert (=> b!83933 (= lt!39571 lt!39581)))

(declare-fun lt!39588 () ListLongMap!1437)

(assert (=> b!83933 (= lt!39588 (getCurrentListMapNoExtraKeys!70 (_keys!3984 newMap!16) (array!4000 (store (arr!1905 (_values!2299 newMap!16)) (index!3081 lt!38961) (ValueCellFull!920 lt!38784)) (size!2148 (_values!2299 newMap!16))) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39570 () (_ BitVec 64))

(assert (=> b!83933 (= lt!39570 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39574 () (_ BitVec 64))

(assert (=> b!83933 (= lt!39574 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!39587 () Unit!2413)

(assert (=> b!83933 (= lt!39587 (addApplyDifferent!57 lt!39588 lt!39570 (minValue!2210 newMap!16) lt!39574))))

(assert (=> b!83933 (= (apply!81 (+!105 lt!39588 (tuple2!2183 lt!39570 (minValue!2210 newMap!16))) lt!39574) (apply!81 lt!39588 lt!39574))))

(declare-fun lt!39586 () Unit!2413)

(assert (=> b!83933 (= lt!39586 lt!39587)))

(declare-fun lt!39575 () ListLongMap!1437)

(assert (=> b!83933 (= lt!39575 (getCurrentListMapNoExtraKeys!70 (_keys!3984 newMap!16) (array!4000 (store (arr!1905 (_values!2299 newMap!16)) (index!3081 lt!38961) (ValueCellFull!920 lt!38784)) (size!2148 (_values!2299 newMap!16))) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39579 () (_ BitVec 64))

(assert (=> b!83933 (= lt!39579 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39584 () (_ BitVec 64))

(assert (=> b!83933 (= lt!39584 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!39578 () Unit!2413)

(assert (=> b!83933 (= lt!39578 (addApplyDifferent!57 lt!39575 lt!39579 (zeroValue!2210 newMap!16) lt!39584))))

(assert (=> b!83933 (= (apply!81 (+!105 lt!39575 (tuple2!2183 lt!39579 (zeroValue!2210 newMap!16))) lt!39584) (apply!81 lt!39575 lt!39584))))

(declare-fun lt!39577 () Unit!2413)

(assert (=> b!83933 (= lt!39577 lt!39578)))

(declare-fun lt!39582 () ListLongMap!1437)

(assert (=> b!83933 (= lt!39582 (getCurrentListMapNoExtraKeys!70 (_keys!3984 newMap!16) (array!4000 (store (arr!1905 (_values!2299 newMap!16)) (index!3081 lt!38961) (ValueCellFull!920 lt!38784)) (size!2148 (_values!2299 newMap!16))) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39572 () (_ BitVec 64))

(assert (=> b!83933 (= lt!39572 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39568 () (_ BitVec 64))

(assert (=> b!83933 (= lt!39568 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!83933 (= lt!39573 (addApplyDifferent!57 lt!39582 lt!39572 (minValue!2210 newMap!16) lt!39568))))

(assert (=> b!83933 (= (apply!81 (+!105 lt!39582 (tuple2!2183 lt!39572 (minValue!2210 newMap!16))) lt!39568) (apply!81 lt!39582 lt!39568))))

(declare-fun bm!7893 () Bool)

(assert (=> bm!7893 (= call!7898 (getCurrentListMapNoExtraKeys!70 (_keys!3984 newMap!16) (array!4000 (store (arr!1905 (_values!2299 newMap!16)) (index!3081 lt!38961) (ValueCellFull!920 lt!38784)) (size!2148 (_values!2299 newMap!16))) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun b!83934 () Bool)

(declare-fun e!54744 () ListLongMap!1437)

(assert (=> b!83934 (= e!54744 call!7892)))

(declare-fun bm!7894 () Bool)

(assert (=> bm!7894 (= call!7893 call!7898)))

(declare-fun d!21299 () Bool)

(assert (=> d!21299 e!54751))

(declare-fun res!43368 () Bool)

(assert (=> d!21299 (=> (not res!43368) (not e!54751))))

(assert (=> d!21299 (= res!43368 (or (bvsge #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))))))))

(declare-fun lt!39567 () ListLongMap!1437)

(assert (=> d!21299 (= lt!39580 lt!39567)))

(declare-fun lt!39583 () Unit!2413)

(assert (=> d!21299 (= lt!39583 e!54746)))

(declare-fun c!13466 () Bool)

(declare-fun e!54743 () Bool)

(assert (=> d!21299 (= c!13466 e!54743)))

(declare-fun res!43364 () Bool)

(assert (=> d!21299 (=> (not res!43364) (not e!54743))))

(assert (=> d!21299 (= res!43364 (bvslt #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))))))

(declare-fun e!54749 () ListLongMap!1437)

(assert (=> d!21299 (= lt!39567 e!54749)))

(assert (=> d!21299 (= c!13469 (and (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!21299 (validMask!0 (mask!6334 newMap!16))))

(assert (=> d!21299 (= (getCurrentListMap!429 (_keys!3984 newMap!16) (array!4000 (store (arr!1905 (_values!2299 newMap!16)) (index!3081 lt!38961) (ValueCellFull!920 lt!38784)) (size!2148 (_values!2299 newMap!16))) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) lt!39580)))

(declare-fun b!83929 () Bool)

(declare-fun c!13467 () Bool)

(assert (=> b!83929 (= c!13467 (and (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!54741 () ListLongMap!1437)

(assert (=> b!83929 (= e!54741 e!54744)))

(declare-fun b!83935 () Bool)

(declare-fun res!43367 () Bool)

(assert (=> b!83935 (=> (not res!43367) (not e!54751))))

(declare-fun e!54742 () Bool)

(assert (=> b!83935 (= res!43367 e!54742)))

(declare-fun res!43363 () Bool)

(assert (=> b!83935 (=> res!43363 e!54742)))

(assert (=> b!83935 (= res!43363 (not e!54750))))

(declare-fun res!43361 () Bool)

(assert (=> b!83935 (=> (not res!43361) (not e!54750))))

(assert (=> b!83935 (= res!43361 (bvslt #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))))))

(declare-fun bm!7895 () Bool)

(assert (=> bm!7895 (= call!7894 call!7893)))

(declare-fun b!83936 () Bool)

(assert (=> b!83936 (= e!54749 (+!105 call!7895 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16))))))

(declare-fun b!83937 () Bool)

(assert (=> b!83937 (= e!54741 call!7892)))

(declare-fun b!83938 () Bool)

(declare-fun e!54745 () Bool)

(assert (=> b!83938 (= e!54739 e!54745)))

(declare-fun res!43362 () Bool)

(assert (=> b!83938 (= res!43362 call!7896)))

(assert (=> b!83938 (=> (not res!43362) (not e!54745))))

(declare-fun b!83939 () Bool)

(assert (=> b!83939 (= e!54744 call!7894)))

(declare-fun b!83940 () Bool)

(assert (=> b!83940 (= e!54749 e!54741)))

(assert (=> b!83940 (= c!13464 (and (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!83941 () Bool)

(assert (=> b!83941 (= e!54742 e!54747)))

(declare-fun res!43365 () Bool)

(assert (=> b!83941 (=> (not res!43365) (not e!54747))))

(assert (=> b!83941 (= res!43365 (contains!744 lt!39580 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!83941 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))))))

(declare-fun b!83942 () Bool)

(assert (=> b!83942 (= e!54748 (not call!7897))))

(declare-fun b!83943 () Bool)

(assert (=> b!83943 (= e!54745 (= (apply!81 lt!39580 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2210 newMap!16)))))

(declare-fun b!83944 () Bool)

(assert (=> b!83944 (= e!54743 (validKeyInArray!0 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!21299 c!13469) b!83936))

(assert (= (and d!21299 (not c!13469)) b!83940))

(assert (= (and b!83940 c!13464) b!83937))

(assert (= (and b!83940 (not c!13464)) b!83929))

(assert (= (and b!83929 c!13467) b!83934))

(assert (= (and b!83929 (not c!13467)) b!83939))

(assert (= (or b!83934 b!83939) bm!7895))

(assert (= (or b!83937 bm!7895) bm!7894))

(assert (= (or b!83937 b!83934) bm!7892))

(assert (= (or b!83936 bm!7894) bm!7893))

(assert (= (or b!83936 bm!7892) bm!7889))

(assert (= (and d!21299 res!43364) b!83944))

(assert (= (and d!21299 c!13466) b!83933))

(assert (= (and d!21299 (not c!13466)) b!83924))

(assert (= (and d!21299 res!43368) b!83935))

(assert (= (and b!83935 res!43361) b!83928))

(assert (= (and b!83935 (not res!43363)) b!83941))

(assert (= (and b!83941 res!43365) b!83926))

(assert (= (and b!83935 res!43367) b!83931))

(assert (= (and b!83931 c!13465) b!83932))

(assert (= (and b!83931 (not c!13465)) b!83942))

(assert (= (and b!83932 res!43366) b!83930))

(assert (= (or b!83932 b!83942) bm!7890))

(assert (= (and b!83931 res!43369) b!83925))

(assert (= (and b!83925 c!13468) b!83938))

(assert (= (and b!83925 (not c!13468)) b!83927))

(assert (= (and b!83938 res!43362) b!83943))

(assert (= (or b!83938 b!83927) bm!7891))

(declare-fun b_lambda!3731 () Bool)

(assert (=> (not b_lambda!3731) (not b!83926)))

(assert (=> b!83926 t!5209))

(declare-fun b_and!5093 () Bool)

(assert (= b_and!5089 (and (=> t!5209 result!2895) b_and!5093)))

(assert (=> b!83926 t!5211))

(declare-fun b_and!5095 () Bool)

(assert (= b_and!5091 (and (=> t!5211 result!2897) b_and!5095)))

(assert (=> b!83944 m!86211))

(assert (=> b!83944 m!86211))

(assert (=> b!83944 m!86213))

(declare-fun m!87385 () Bool)

(assert (=> b!83926 m!87385))

(assert (=> b!83926 m!86211))

(declare-fun m!87387 () Bool)

(assert (=> b!83926 m!87387))

(assert (=> b!83926 m!86211))

(assert (=> b!83926 m!86219))

(assert (=> b!83926 m!87385))

(assert (=> b!83926 m!86219))

(declare-fun m!87389 () Bool)

(assert (=> b!83926 m!87389))

(assert (=> d!21299 m!86223))

(declare-fun m!87391 () Bool)

(assert (=> b!83943 m!87391))

(declare-fun m!87393 () Bool)

(assert (=> b!83933 m!87393))

(declare-fun m!87395 () Bool)

(assert (=> b!83933 m!87395))

(declare-fun m!87397 () Bool)

(assert (=> b!83933 m!87397))

(declare-fun m!87399 () Bool)

(assert (=> b!83933 m!87399))

(assert (=> b!83933 m!87395))

(declare-fun m!87401 () Bool)

(assert (=> b!83933 m!87401))

(declare-fun m!87403 () Bool)

(assert (=> b!83933 m!87403))

(declare-fun m!87405 () Bool)

(assert (=> b!83933 m!87405))

(declare-fun m!87407 () Bool)

(assert (=> b!83933 m!87407))

(declare-fun m!87409 () Bool)

(assert (=> b!83933 m!87409))

(declare-fun m!87411 () Bool)

(assert (=> b!83933 m!87411))

(declare-fun m!87413 () Bool)

(assert (=> b!83933 m!87413))

(assert (=> b!83933 m!86211))

(assert (=> b!83933 m!87409))

(assert (=> b!83933 m!87403))

(assert (=> b!83933 m!87397))

(declare-fun m!87415 () Bool)

(assert (=> b!83933 m!87415))

(declare-fun m!87417 () Bool)

(assert (=> b!83933 m!87417))

(declare-fun m!87419 () Bool)

(assert (=> b!83933 m!87419))

(declare-fun m!87421 () Bool)

(assert (=> b!83933 m!87421))

(declare-fun m!87423 () Bool)

(assert (=> b!83933 m!87423))

(declare-fun m!87425 () Bool)

(assert (=> b!83936 m!87425))

(declare-fun m!87427 () Bool)

(assert (=> bm!7889 m!87427))

(assert (=> b!83941 m!86211))

(assert (=> b!83941 m!86211))

(declare-fun m!87429 () Bool)

(assert (=> b!83941 m!87429))

(assert (=> bm!7893 m!87413))

(declare-fun m!87431 () Bool)

(assert (=> bm!7891 m!87431))

(assert (=> b!83928 m!86211))

(assert (=> b!83928 m!86211))

(assert (=> b!83928 m!86213))

(declare-fun m!87433 () Bool)

(assert (=> bm!7890 m!87433))

(declare-fun m!87435 () Bool)

(assert (=> b!83930 m!87435))

(assert (=> b!83698 d!21299))

(declare-fun b!83946 () Bool)

(declare-fun res!43371 () Bool)

(declare-fun e!54752 () Bool)

(assert (=> b!83946 (=> (not res!43371) (not e!54752))))

(assert (=> b!83946 (= res!43371 (bvsge (size!2153 (_2!1101 lt!38973)) (_size!423 (_2!1101 lt!38973))))))

(declare-fun b!83947 () Bool)

(declare-fun res!43373 () Bool)

(assert (=> b!83947 (=> (not res!43373) (not e!54752))))

(assert (=> b!83947 (= res!43373 (= (size!2153 (_2!1101 lt!38973)) (bvadd (_size!423 (_2!1101 lt!38973)) (bvsdiv (bvadd (extraKeys!2159 (_2!1101 lt!38973)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!83945 () Bool)

(declare-fun res!43370 () Bool)

(assert (=> b!83945 (=> (not res!43370) (not e!54752))))

(assert (=> b!83945 (= res!43370 (and (= (size!2148 (_values!2299 (_2!1101 lt!38973))) (bvadd (mask!6334 (_2!1101 lt!38973)) #b00000000000000000000000000000001)) (= (size!2147 (_keys!3984 (_2!1101 lt!38973))) (size!2148 (_values!2299 (_2!1101 lt!38973)))) (bvsge (_size!423 (_2!1101 lt!38973)) #b00000000000000000000000000000000) (bvsle (_size!423 (_2!1101 lt!38973)) (bvadd (mask!6334 (_2!1101 lt!38973)) #b00000000000000000000000000000001))))))

(declare-fun b!83948 () Bool)

(assert (=> b!83948 (= e!54752 (and (bvsge (extraKeys!2159 (_2!1101 lt!38973)) #b00000000000000000000000000000000) (bvsle (extraKeys!2159 (_2!1101 lt!38973)) #b00000000000000000000000000000011) (bvsge (_vacant!423 (_2!1101 lt!38973)) #b00000000000000000000000000000000)))))

(declare-fun d!21301 () Bool)

(declare-fun res!43372 () Bool)

(assert (=> d!21301 (=> (not res!43372) (not e!54752))))

(assert (=> d!21301 (= res!43372 (validMask!0 (mask!6334 (_2!1101 lt!38973))))))

(assert (=> d!21301 (= (simpleValid!57 (_2!1101 lt!38973)) e!54752)))

(assert (= (and d!21301 res!43372) b!83945))

(assert (= (and b!83945 res!43370) b!83946))

(assert (= (and b!83946 res!43371) b!83947))

(assert (= (and b!83947 res!43373) b!83948))

(declare-fun m!87437 () Bool)

(assert (=> b!83946 m!87437))

(assert (=> b!83947 m!87437))

(declare-fun m!87439 () Bool)

(assert (=> d!21301 m!87439))

(assert (=> d!21127 d!21301))

(declare-fun lt!39589 () Bool)

(declare-fun d!21303 () Bool)

(assert (=> d!21303 (= lt!39589 (select (content!89 (toList!734 lt!39479)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))

(declare-fun e!54753 () Bool)

(assert (=> d!21303 (= lt!39589 e!54753)))

(declare-fun res!43375 () Bool)

(assert (=> d!21303 (=> (not res!43375) (not e!54753))))

(assert (=> d!21303 (= res!43375 ((_ is Cons!1500) (toList!734 lt!39479)))))

(assert (=> d!21303 (= (contains!746 (toList!734 lt!39479) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) lt!39589)))

(declare-fun b!83949 () Bool)

(declare-fun e!54754 () Bool)

(assert (=> b!83949 (= e!54753 e!54754)))

(declare-fun res!43374 () Bool)

(assert (=> b!83949 (=> res!43374 e!54754)))

(assert (=> b!83949 (= res!43374 (= (h!2090 (toList!734 lt!39479)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))

(declare-fun b!83950 () Bool)

(assert (=> b!83950 (= e!54754 (contains!746 (t!5196 (toList!734 lt!39479)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))

(assert (= (and d!21303 res!43375) b!83949))

(assert (= (and b!83949 (not res!43374)) b!83950))

(declare-fun m!87441 () Bool)

(assert (=> d!21303 m!87441))

(declare-fun m!87443 () Bool)

(assert (=> d!21303 m!87443))

(declare-fun m!87445 () Bool)

(assert (=> b!83950 m!87445))

(assert (=> b!83690 d!21303))

(declare-fun c!13470 () Bool)

(declare-fun b!83952 () Bool)

(declare-fun c!13473 () Bool)

(declare-fun e!54755 () List!1504)

(assert (=> b!83952 (= e!54755 (ite c!13473 (t!5196 (t!5196 (toList!734 lt!38783))) (ite c!13470 (Cons!1500 (h!2090 (t!5196 (toList!734 lt!38783))) (t!5196 (t!5196 (toList!734 lt!38783)))) Nil!1501)))))

(declare-fun c!13471 () Bool)

(declare-fun call!7899 () List!1504)

(declare-fun bm!7896 () Bool)

(assert (=> bm!7896 (= call!7899 ($colon$colon!70 e!54755 (ite c!13471 (h!2090 (t!5196 (toList!734 lt!38783))) (tuple2!2183 (_1!1102 lt!38772) (_2!1102 lt!38772)))))))

(declare-fun c!13472 () Bool)

(assert (=> bm!7896 (= c!13472 c!13471)))

(declare-fun b!83953 () Bool)

(declare-fun e!54759 () List!1504)

(declare-fun call!7901 () List!1504)

(assert (=> b!83953 (= e!54759 call!7901)))

(declare-fun b!83954 () Bool)

(declare-fun e!54757 () List!1504)

(assert (=> b!83954 (= e!54757 call!7899)))

(declare-fun bm!7897 () Bool)

(assert (=> bm!7897 (= call!7901 call!7899)))

(declare-fun bm!7898 () Bool)

(declare-fun call!7900 () List!1504)

(assert (=> bm!7898 (= call!7900 call!7901)))

(declare-fun b!83955 () Bool)

(assert (=> b!83955 (= e!54755 (insertStrictlySorted!60 (t!5196 (t!5196 (toList!734 lt!38783))) (_1!1102 lt!38772) (_2!1102 lt!38772)))))

(declare-fun b!83956 () Bool)

(declare-fun e!54758 () List!1504)

(assert (=> b!83956 (= e!54758 call!7900)))

(declare-fun b!83957 () Bool)

(assert (=> b!83957 (= e!54757 e!54759)))

(assert (=> b!83957 (= c!13473 (and ((_ is Cons!1500) (t!5196 (toList!734 lt!38783))) (= (_1!1102 (h!2090 (t!5196 (toList!734 lt!38783)))) (_1!1102 lt!38772))))))

(declare-fun b!83958 () Bool)

(declare-fun e!54756 () Bool)

(declare-fun lt!39590 () List!1504)

(assert (=> b!83958 (= e!54756 (contains!746 lt!39590 (tuple2!2183 (_1!1102 lt!38772) (_2!1102 lt!38772))))))

(declare-fun b!83951 () Bool)

(declare-fun res!43377 () Bool)

(assert (=> b!83951 (=> (not res!43377) (not e!54756))))

(assert (=> b!83951 (= res!43377 (containsKey!143 lt!39590 (_1!1102 lt!38772)))))

(declare-fun d!21305 () Bool)

(assert (=> d!21305 e!54756))

(declare-fun res!43376 () Bool)

(assert (=> d!21305 (=> (not res!43376) (not e!54756))))

(assert (=> d!21305 (= res!43376 (isStrictlySorted!284 lt!39590))))

(assert (=> d!21305 (= lt!39590 e!54757)))

(assert (=> d!21305 (= c!13471 (and ((_ is Cons!1500) (t!5196 (toList!734 lt!38783))) (bvslt (_1!1102 (h!2090 (t!5196 (toList!734 lt!38783)))) (_1!1102 lt!38772))))))

(assert (=> d!21305 (isStrictlySorted!284 (t!5196 (toList!734 lt!38783)))))

(assert (=> d!21305 (= (insertStrictlySorted!60 (t!5196 (toList!734 lt!38783)) (_1!1102 lt!38772) (_2!1102 lt!38772)) lt!39590)))

(declare-fun b!83959 () Bool)

(assert (=> b!83959 (= e!54758 call!7900)))

(declare-fun b!83960 () Bool)

(assert (=> b!83960 (= c!13470 (and ((_ is Cons!1500) (t!5196 (toList!734 lt!38783))) (bvsgt (_1!1102 (h!2090 (t!5196 (toList!734 lt!38783)))) (_1!1102 lt!38772))))))

(assert (=> b!83960 (= e!54759 e!54758)))

(assert (= (and d!21305 c!13471) b!83954))

(assert (= (and d!21305 (not c!13471)) b!83957))

(assert (= (and b!83957 c!13473) b!83953))

(assert (= (and b!83957 (not c!13473)) b!83960))

(assert (= (and b!83960 c!13470) b!83956))

(assert (= (and b!83960 (not c!13470)) b!83959))

(assert (= (or b!83956 b!83959) bm!7898))

(assert (= (or b!83953 bm!7898) bm!7897))

(assert (= (or b!83954 bm!7897) bm!7896))

(assert (= (and bm!7896 c!13472) b!83955))

(assert (= (and bm!7896 (not c!13472)) b!83952))

(assert (= (and d!21305 res!43376) b!83951))

(assert (= (and b!83951 res!43377) b!83958))

(declare-fun m!87447 () Bool)

(assert (=> d!21305 m!87447))

(declare-fun m!87449 () Bool)

(assert (=> d!21305 m!87449))

(declare-fun m!87451 () Bool)

(assert (=> b!83955 m!87451))

(declare-fun m!87453 () Bool)

(assert (=> bm!7896 m!87453))

(declare-fun m!87455 () Bool)

(assert (=> b!83951 m!87455))

(declare-fun m!87457 () Bool)

(assert (=> b!83958 m!87457))

(assert (=> b!83509 d!21305))

(declare-fun b!83961 () Bool)

(declare-fun e!54760 () (_ BitVec 32))

(declare-fun call!7902 () (_ BitVec 32))

(assert (=> b!83961 (= e!54760 call!7902)))

(declare-fun b!83962 () Bool)

(declare-fun e!54761 () (_ BitVec 32))

(assert (=> b!83962 (= e!54761 #b00000000000000000000000000000000)))

(declare-fun b!83963 () Bool)

(assert (=> b!83963 (= e!54761 e!54760)))

(declare-fun c!13474 () Bool)

(assert (=> b!83963 (= c!13474 (validKeyInArray!0 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun bm!7899 () Bool)

(assert (=> bm!7899 (= call!7902 (arrayCountValidKeys!0 (_keys!3984 (v!2632 (underlying!289 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2147 (_keys!3984 (v!2632 (underlying!289 thiss!992))))))))

(declare-fun d!21307 () Bool)

(declare-fun lt!39591 () (_ BitVec 32))

(assert (=> d!21307 (and (bvsge lt!39591 #b00000000000000000000000000000000) (bvsle lt!39591 (bvsub (size!2147 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (=> d!21307 (= lt!39591 e!54761)))

(declare-fun c!13475 () Bool)

(assert (=> d!21307 (= c!13475 (bvsge #b00000000000000000000000000000000 (size!2147 (_keys!3984 (v!2632 (underlying!289 thiss!992))))))))

(assert (=> d!21307 (and (bvsle #b00000000000000000000000000000000 (size!2147 (_keys!3984 (v!2632 (underlying!289 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2147 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (size!2147 (_keys!3984 (v!2632 (underlying!289 thiss!992))))))))

(assert (=> d!21307 (= (arrayCountValidKeys!0 (_keys!3984 (v!2632 (underlying!289 thiss!992))) #b00000000000000000000000000000000 (size!2147 (_keys!3984 (v!2632 (underlying!289 thiss!992))))) lt!39591)))

(declare-fun b!83964 () Bool)

(assert (=> b!83964 (= e!54760 (bvadd #b00000000000000000000000000000001 call!7902))))

(assert (= (and d!21307 c!13475) b!83962))

(assert (= (and d!21307 (not c!13475)) b!83963))

(assert (= (and b!83963 c!13474) b!83964))

(assert (= (and b!83963 (not c!13474)) b!83961))

(assert (= (or b!83964 b!83961) bm!7899))

(declare-fun m!87459 () Bool)

(assert (=> b!83963 m!87459))

(assert (=> b!83963 m!87459))

(declare-fun m!87461 () Bool)

(assert (=> b!83963 m!87461))

(declare-fun m!87463 () Bool)

(assert (=> bm!7899 m!87463))

(assert (=> b!83621 d!21307))

(declare-fun lt!39592 () Bool)

(declare-fun d!21309 () Bool)

(assert (=> d!21309 (= lt!39592 (select (content!89 (toList!734 lt!39322)) (tuple2!2183 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))))

(declare-fun e!54762 () Bool)

(assert (=> d!21309 (= lt!39592 e!54762)))

(declare-fun res!43379 () Bool)

(assert (=> d!21309 (=> (not res!43379) (not e!54762))))

(assert (=> d!21309 (= res!43379 ((_ is Cons!1500) (toList!734 lt!39322)))))

(assert (=> d!21309 (= (contains!746 (toList!734 lt!39322) (tuple2!2183 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))) lt!39592)))

(declare-fun b!83965 () Bool)

(declare-fun e!54763 () Bool)

(assert (=> b!83965 (= e!54762 e!54763)))

(declare-fun res!43378 () Bool)

(assert (=> b!83965 (=> res!43378 e!54763)))

(assert (=> b!83965 (= res!43378 (= (h!2090 (toList!734 lt!39322)) (tuple2!2183 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))))

(declare-fun b!83966 () Bool)

(assert (=> b!83966 (= e!54763 (contains!746 (t!5196 (toList!734 lt!39322)) (tuple2!2183 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))))

(assert (= (and d!21309 res!43379) b!83965))

(assert (= (and b!83965 (not res!43378)) b!83966))

(declare-fun m!87465 () Bool)

(assert (=> d!21309 m!87465))

(declare-fun m!87467 () Bool)

(assert (=> d!21309 m!87467))

(declare-fun m!87469 () Bool)

(assert (=> b!83966 m!87469))

(assert (=> b!83532 d!21309))

(declare-fun d!21311 () Bool)

(declare-fun res!43380 () Bool)

(declare-fun e!54764 () Bool)

(assert (=> d!21311 (=> res!43380 e!54764)))

(assert (=> d!21311 (= res!43380 (or ((_ is Nil!1501) lt!39227) ((_ is Nil!1501) (t!5196 lt!39227))))))

(assert (=> d!21311 (= (isStrictlySorted!284 lt!39227) e!54764)))

(declare-fun b!83967 () Bool)

(declare-fun e!54765 () Bool)

(assert (=> b!83967 (= e!54764 e!54765)))

(declare-fun res!43381 () Bool)

(assert (=> b!83967 (=> (not res!43381) (not e!54765))))

(assert (=> b!83967 (= res!43381 (bvslt (_1!1102 (h!2090 lt!39227)) (_1!1102 (h!2090 (t!5196 lt!39227)))))))

(declare-fun b!83968 () Bool)

(assert (=> b!83968 (= e!54765 (isStrictlySorted!284 (t!5196 lt!39227)))))

(assert (= (and d!21311 (not res!43380)) b!83967))

(assert (= (and b!83967 res!43381) b!83968))

(declare-fun m!87471 () Bool)

(assert (=> b!83968 m!87471))

(assert (=> d!21029 d!21311))

(declare-fun d!21313 () Bool)

(declare-fun res!43382 () Bool)

(declare-fun e!54766 () Bool)

(assert (=> d!21313 (=> res!43382 e!54766)))

(assert (=> d!21313 (= res!43382 (or ((_ is Nil!1501) (toList!734 (+!105 lt!38773 lt!38779))) ((_ is Nil!1501) (t!5196 (toList!734 (+!105 lt!38773 lt!38779))))))))

(assert (=> d!21313 (= (isStrictlySorted!284 (toList!734 (+!105 lt!38773 lt!38779))) e!54766)))

(declare-fun b!83969 () Bool)

(declare-fun e!54767 () Bool)

(assert (=> b!83969 (= e!54766 e!54767)))

(declare-fun res!43383 () Bool)

(assert (=> b!83969 (=> (not res!43383) (not e!54767))))

(assert (=> b!83969 (= res!43383 (bvslt (_1!1102 (h!2090 (toList!734 (+!105 lt!38773 lt!38779)))) (_1!1102 (h!2090 (t!5196 (toList!734 (+!105 lt!38773 lt!38779)))))))))

(declare-fun b!83970 () Bool)

(assert (=> b!83970 (= e!54767 (isStrictlySorted!284 (t!5196 (toList!734 (+!105 lt!38773 lt!38779)))))))

(assert (= (and d!21313 (not res!43382)) b!83969))

(assert (= (and b!83969 res!43383) b!83970))

(declare-fun m!87473 () Bool)

(assert (=> b!83970 m!87473))

(assert (=> d!21029 d!21313))

(declare-fun d!21315 () Bool)

(declare-fun lt!39593 () Bool)

(assert (=> d!21315 (= lt!39593 (select (content!89 (toList!734 lt!39178)) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))))

(declare-fun e!54768 () Bool)

(assert (=> d!21315 (= lt!39593 e!54768)))

(declare-fun res!43385 () Bool)

(assert (=> d!21315 (=> (not res!43385) (not e!54768))))

(assert (=> d!21315 (= res!43385 ((_ is Cons!1500) (toList!734 lt!39178)))))

(assert (=> d!21315 (= (contains!746 (toList!734 lt!39178) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))) lt!39593)))

(declare-fun b!83971 () Bool)

(declare-fun e!54769 () Bool)

(assert (=> b!83971 (= e!54768 e!54769)))

(declare-fun res!43384 () Bool)

(assert (=> b!83971 (=> res!43384 e!54769)))

(assert (=> b!83971 (= res!43384 (= (h!2090 (toList!734 lt!39178)) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))))

(declare-fun b!83972 () Bool)

(assert (=> b!83972 (= e!54769 (contains!746 (t!5196 (toList!734 lt!39178)) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))))

(assert (= (and d!21315 res!43385) b!83971))

(assert (= (and b!83971 (not res!43384)) b!83972))

(declare-fun m!87475 () Bool)

(assert (=> d!21315 m!87475))

(declare-fun m!87477 () Bool)

(assert (=> d!21315 m!87477))

(declare-fun m!87479 () Bool)

(assert (=> b!83972 m!87479))

(assert (=> b!83324 d!21315))

(declare-fun d!21317 () Bool)

(assert (=> d!21317 (= (isDefined!92 (getValueByKey!140 (toList!734 lt!39113) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!340 (getValueByKey!140 (toList!734 lt!39113) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3554 () Bool)

(assert (= bs!3554 d!21317))

(assert (=> bs!3554 m!86615))

(declare-fun m!87481 () Bool)

(assert (=> bs!3554 m!87481))

(assert (=> b!83606 d!21317))

(declare-fun b!83975 () Bool)

(declare-fun e!54771 () Option!146)

(assert (=> b!83975 (= e!54771 (getValueByKey!140 (t!5196 (toList!734 lt!39113)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!21319 () Bool)

(declare-fun c!13476 () Bool)

(assert (=> d!21319 (= c!13476 (and ((_ is Cons!1500) (toList!734 lt!39113)) (= (_1!1102 (h!2090 (toList!734 lt!39113))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!54770 () Option!146)

(assert (=> d!21319 (= (getValueByKey!140 (toList!734 lt!39113) #b0000000000000000000000000000000000000000000000000000000000000000) e!54770)))

(declare-fun b!83973 () Bool)

(assert (=> b!83973 (= e!54770 (Some!145 (_2!1102 (h!2090 (toList!734 lt!39113)))))))

(declare-fun b!83974 () Bool)

(assert (=> b!83974 (= e!54770 e!54771)))

(declare-fun c!13477 () Bool)

(assert (=> b!83974 (= c!13477 (and ((_ is Cons!1500) (toList!734 lt!39113)) (not (= (_1!1102 (h!2090 (toList!734 lt!39113))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!83976 () Bool)

(assert (=> b!83976 (= e!54771 None!144)))

(assert (= (and d!21319 c!13476) b!83973))

(assert (= (and d!21319 (not c!13476)) b!83974))

(assert (= (and b!83974 c!13477) b!83975))

(assert (= (and b!83974 (not c!13477)) b!83976))

(declare-fun m!87483 () Bool)

(assert (=> b!83975 m!87483))

(assert (=> b!83606 d!21319))

(declare-fun d!21321 () Bool)

(assert (=> d!21321 (= (get!1199 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2631 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!83374 d!21321))

(declare-fun d!21323 () Bool)

(assert (=> d!21323 (= (get!1201 (getValueByKey!140 (toList!734 lt!39113) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2638 (getValueByKey!140 (toList!734 lt!39113) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!21057 d!21323))

(assert (=> d!21057 d!21319))

(declare-fun d!21325 () Bool)

(declare-fun lt!39594 () Bool)

(assert (=> d!21325 (= lt!39594 (select (content!89 (toList!734 lt!39471)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))

(declare-fun e!54772 () Bool)

(assert (=> d!21325 (= lt!39594 e!54772)))

(declare-fun res!43387 () Bool)

(assert (=> d!21325 (=> (not res!43387) (not e!54772))))

(assert (=> d!21325 (= res!43387 ((_ is Cons!1500) (toList!734 lt!39471)))))

(assert (=> d!21325 (= (contains!746 (toList!734 lt!39471) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) lt!39594)))

(declare-fun b!83977 () Bool)

(declare-fun e!54773 () Bool)

(assert (=> b!83977 (= e!54772 e!54773)))

(declare-fun res!43386 () Bool)

(assert (=> b!83977 (=> res!43386 e!54773)))

(assert (=> b!83977 (= res!43386 (= (h!2090 (toList!734 lt!39471)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))

(declare-fun b!83978 () Bool)

(assert (=> b!83978 (= e!54773 (contains!746 (t!5196 (toList!734 lt!39471)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))

(assert (= (and d!21325 res!43387) b!83977))

(assert (= (and b!83977 (not res!43386)) b!83978))

(declare-fun m!87485 () Bool)

(assert (=> d!21325 m!87485))

(declare-fun m!87487 () Bool)

(assert (=> d!21325 m!87487))

(declare-fun m!87489 () Bool)

(assert (=> b!83978 m!87489))

(assert (=> b!83686 d!21325))

(declare-fun d!21327 () Bool)

(declare-fun lt!39595 () Bool)

(assert (=> d!21327 (= lt!39595 (select (content!89 lt!39042) (tuple2!2183 (_1!1102 lt!38779) (_2!1102 lt!38779))))))

(declare-fun e!54774 () Bool)

(assert (=> d!21327 (= lt!39595 e!54774)))

(declare-fun res!43389 () Bool)

(assert (=> d!21327 (=> (not res!43389) (not e!54774))))

(assert (=> d!21327 (= res!43389 ((_ is Cons!1500) lt!39042))))

(assert (=> d!21327 (= (contains!746 lt!39042 (tuple2!2183 (_1!1102 lt!38779) (_2!1102 lt!38779))) lt!39595)))

(declare-fun b!83979 () Bool)

(declare-fun e!54775 () Bool)

(assert (=> b!83979 (= e!54774 e!54775)))

(declare-fun res!43388 () Bool)

(assert (=> b!83979 (=> res!43388 e!54775)))

(assert (=> b!83979 (= res!43388 (= (h!2090 lt!39042) (tuple2!2183 (_1!1102 lt!38779) (_2!1102 lt!38779))))))

(declare-fun b!83980 () Bool)

(assert (=> b!83980 (= e!54775 (contains!746 (t!5196 lt!39042) (tuple2!2183 (_1!1102 lt!38779) (_2!1102 lt!38779))))))

(assert (= (and d!21327 res!43389) b!83979))

(assert (= (and b!83979 (not res!43388)) b!83980))

(declare-fun m!87491 () Bool)

(assert (=> d!21327 m!87491))

(declare-fun m!87493 () Bool)

(assert (=> d!21327 m!87493))

(declare-fun m!87495 () Bool)

(assert (=> b!83980 m!87495))

(assert (=> b!83768 d!21327))

(declare-fun d!21329 () Bool)

(assert (=> d!21329 (= (validKeyInArray!0 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!83288 d!21329))

(declare-fun d!21331 () Bool)

(assert (=> d!21331 (= (isDefined!92 (getValueByKey!140 (toList!734 lt!39049) (_1!1102 lt!38772))) (not (isEmpty!340 (getValueByKey!140 (toList!734 lt!39049) (_1!1102 lt!38772)))))))

(declare-fun bs!3555 () Bool)

(assert (= bs!3555 d!21331))

(assert (=> bs!3555 m!86115))

(declare-fun m!87497 () Bool)

(assert (=> bs!3555 m!87497))

(assert (=> b!83498 d!21331))

(assert (=> b!83498 d!21017))

(declare-fun d!21333 () Bool)

(assert (=> d!21333 (= (isDefined!92 (getValueByKey!140 (toList!734 (getCurrentListMap!429 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355))) (not (isEmpty!340 (getValueByKey!140 (toList!734 (getCurrentListMap!429 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))))

(declare-fun bs!3556 () Bool)

(assert (= bs!3556 d!21333))

(assert (=> bs!3556 m!87073))

(declare-fun m!87499 () Bool)

(assert (=> bs!3556 m!87499))

(assert (=> b!83701 d!21333))

(declare-fun e!54777 () Option!146)

(declare-fun b!83983 () Bool)

(assert (=> b!83983 (= e!54777 (getValueByKey!140 (t!5196 (toList!734 (getCurrentListMap!429 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))

(declare-fun c!13478 () Bool)

(declare-fun d!21335 () Bool)

(assert (=> d!21335 (= c!13478 (and ((_ is Cons!1500) (toList!734 (getCurrentListMap!429 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))) (= (_1!1102 (h!2090 (toList!734 (getCurrentListMap!429 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16))))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355))))))

(declare-fun e!54776 () Option!146)

(assert (=> d!21335 (= (getValueByKey!140 (toList!734 (getCurrentListMap!429 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) e!54776)))

(declare-fun b!83981 () Bool)

(assert (=> b!83981 (= e!54776 (Some!145 (_2!1102 (h!2090 (toList!734 (getCurrentListMap!429 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))))))

(declare-fun b!83982 () Bool)

(assert (=> b!83982 (= e!54776 e!54777)))

(declare-fun c!13479 () Bool)

(assert (=> b!83982 (= c!13479 (and ((_ is Cons!1500) (toList!734 (getCurrentListMap!429 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))) (not (= (_1!1102 (h!2090 (toList!734 (getCurrentListMap!429 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16))))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))))

(declare-fun b!83984 () Bool)

(assert (=> b!83984 (= e!54777 None!144)))

(assert (= (and d!21335 c!13478) b!83981))

(assert (= (and d!21335 (not c!13478)) b!83982))

(assert (= (and b!83982 c!13479) b!83983))

(assert (= (and b!83982 (not c!13479)) b!83984))

(assert (=> b!83983 m!85721))

(declare-fun m!87501 () Bool)

(assert (=> b!83983 m!87501))

(assert (=> b!83701 d!21335))

(assert (=> d!21141 d!21267))

(declare-fun d!21337 () Bool)

(declare-fun lt!39596 () Bool)

(assert (=> d!21337 (= lt!39596 (select (content!89 lt!39055) (tuple2!2183 (_1!1102 lt!38775) (_2!1102 lt!38775))))))

(declare-fun e!54778 () Bool)

(assert (=> d!21337 (= lt!39596 e!54778)))

(declare-fun res!43391 () Bool)

(assert (=> d!21337 (=> (not res!43391) (not e!54778))))

(assert (=> d!21337 (= res!43391 ((_ is Cons!1500) lt!39055))))

(assert (=> d!21337 (= (contains!746 lt!39055 (tuple2!2183 (_1!1102 lt!38775) (_2!1102 lt!38775))) lt!39596)))

(declare-fun b!83985 () Bool)

(declare-fun e!54779 () Bool)

(assert (=> b!83985 (= e!54778 e!54779)))

(declare-fun res!43390 () Bool)

(assert (=> b!83985 (=> res!43390 e!54779)))

(assert (=> b!83985 (= res!43390 (= (h!2090 lt!39055) (tuple2!2183 (_1!1102 lt!38775) (_2!1102 lt!38775))))))

(declare-fun b!83986 () Bool)

(assert (=> b!83986 (= e!54779 (contains!746 (t!5196 lt!39055) (tuple2!2183 (_1!1102 lt!38775) (_2!1102 lt!38775))))))

(assert (= (and d!21337 res!43391) b!83985))

(assert (= (and b!83985 (not res!43390)) b!83986))

(declare-fun m!87503 () Bool)

(assert (=> d!21337 m!87503))

(declare-fun m!87505 () Bool)

(assert (=> d!21337 m!87505))

(declare-fun m!87507 () Bool)

(assert (=> b!83986 m!87507))

(assert (=> b!83672 d!21337))

(declare-fun d!21339 () Bool)

(declare-fun res!43392 () Bool)

(declare-fun e!54780 () Bool)

(assert (=> d!21339 (=> res!43392 e!54780)))

(assert (=> d!21339 (= res!43392 (or ((_ is Nil!1501) lt!39437) ((_ is Nil!1501) (t!5196 lt!39437))))))

(assert (=> d!21339 (= (isStrictlySorted!284 lt!39437) e!54780)))

(declare-fun b!83987 () Bool)

(declare-fun e!54781 () Bool)

(assert (=> b!83987 (= e!54780 e!54781)))

(declare-fun res!43393 () Bool)

(assert (=> b!83987 (=> (not res!43393) (not e!54781))))

(assert (=> b!83987 (= res!43393 (bvslt (_1!1102 (h!2090 lt!39437)) (_1!1102 (h!2090 (t!5196 lt!39437)))))))

(declare-fun b!83988 () Bool)

(assert (=> b!83988 (= e!54781 (isStrictlySorted!284 (t!5196 lt!39437)))))

(assert (= (and d!21339 (not res!43392)) b!83987))

(assert (= (and b!83987 res!43393) b!83988))

(declare-fun m!87509 () Bool)

(assert (=> b!83988 m!87509))

(assert (=> d!21139 d!21339))

(declare-fun d!21341 () Bool)

(declare-fun res!43394 () Bool)

(declare-fun e!54782 () Bool)

(assert (=> d!21341 (=> res!43394 e!54782)))

(assert (=> d!21341 (= res!43394 (or ((_ is Nil!1501) (toList!734 lt!38768)) ((_ is Nil!1501) (t!5196 (toList!734 lt!38768)))))))

(assert (=> d!21341 (= (isStrictlySorted!284 (toList!734 lt!38768)) e!54782)))

(declare-fun b!83989 () Bool)

(declare-fun e!54783 () Bool)

(assert (=> b!83989 (= e!54782 e!54783)))

(declare-fun res!43395 () Bool)

(assert (=> b!83989 (=> (not res!43395) (not e!54783))))

(assert (=> b!83989 (= res!43395 (bvslt (_1!1102 (h!2090 (toList!734 lt!38768))) (_1!1102 (h!2090 (t!5196 (toList!734 lt!38768))))))))

(declare-fun b!83990 () Bool)

(assert (=> b!83990 (= e!54783 (isStrictlySorted!284 (t!5196 (toList!734 lt!38768))))))

(assert (= (and d!21341 (not res!43394)) b!83989))

(assert (= (and b!83989 res!43395) b!83990))

(declare-fun m!87511 () Bool)

(assert (=> b!83990 m!87511))

(assert (=> d!21139 d!21341))

(declare-fun d!21343 () Bool)

(declare-fun e!54785 () Bool)

(assert (=> d!21343 e!54785))

(declare-fun res!43396 () Bool)

(assert (=> d!21343 (=> res!43396 e!54785)))

(declare-fun lt!39597 () Bool)

(assert (=> d!21343 (= res!43396 (not lt!39597))))

(declare-fun lt!39600 () Bool)

(assert (=> d!21343 (= lt!39597 lt!39600)))

(declare-fun lt!39599 () Unit!2413)

(declare-fun e!54784 () Unit!2413)

(assert (=> d!21343 (= lt!39599 e!54784)))

(declare-fun c!13480 () Bool)

(assert (=> d!21343 (= c!13480 lt!39600)))

(assert (=> d!21343 (= lt!39600 (containsKey!143 (toList!734 (getCurrentListMap!429 (_keys!3984 newMap!16) lt!38974 (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16))) (select (arr!1904 (_keys!3984 newMap!16)) (index!3081 lt!38961))))))

(assert (=> d!21343 (= (contains!744 (getCurrentListMap!429 (_keys!3984 newMap!16) lt!38974 (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) (select (arr!1904 (_keys!3984 newMap!16)) (index!3081 lt!38961))) lt!39597)))

(declare-fun b!83991 () Bool)

(declare-fun lt!39598 () Unit!2413)

(assert (=> b!83991 (= e!54784 lt!39598)))

(assert (=> b!83991 (= lt!39598 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 (getCurrentListMap!429 (_keys!3984 newMap!16) lt!38974 (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16))) (select (arr!1904 (_keys!3984 newMap!16)) (index!3081 lt!38961))))))

(assert (=> b!83991 (isDefined!92 (getValueByKey!140 (toList!734 (getCurrentListMap!429 (_keys!3984 newMap!16) lt!38974 (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16))) (select (arr!1904 (_keys!3984 newMap!16)) (index!3081 lt!38961))))))

(declare-fun b!83992 () Bool)

(declare-fun Unit!2456 () Unit!2413)

(assert (=> b!83992 (= e!54784 Unit!2456)))

(declare-fun b!83993 () Bool)

(assert (=> b!83993 (= e!54785 (isDefined!92 (getValueByKey!140 (toList!734 (getCurrentListMap!429 (_keys!3984 newMap!16) lt!38974 (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16))) (select (arr!1904 (_keys!3984 newMap!16)) (index!3081 lt!38961)))))))

(assert (= (and d!21343 c!13480) b!83991))

(assert (= (and d!21343 (not c!13480)) b!83992))

(assert (= (and d!21343 (not res!43396)) b!83993))

(assert (=> d!21343 m!85951))

(declare-fun m!87513 () Bool)

(assert (=> d!21343 m!87513))

(assert (=> b!83991 m!85951))

(declare-fun m!87515 () Bool)

(assert (=> b!83991 m!87515))

(assert (=> b!83991 m!85951))

(declare-fun m!87517 () Bool)

(assert (=> b!83991 m!87517))

(assert (=> b!83991 m!87517))

(declare-fun m!87519 () Bool)

(assert (=> b!83991 m!87519))

(assert (=> b!83993 m!85951))

(assert (=> b!83993 m!87517))

(assert (=> b!83993 m!87517))

(assert (=> b!83993 m!87519))

(assert (=> b!83695 d!21343))

(declare-fun b!83994 () Bool)

(declare-fun e!54793 () Unit!2413)

(declare-fun Unit!2457 () Unit!2413)

(assert (=> b!83994 (= e!54793 Unit!2457)))

(declare-fun b!83995 () Bool)

(declare-fun e!54798 () Bool)

(declare-fun e!54786 () Bool)

(assert (=> b!83995 (= e!54798 e!54786)))

(declare-fun c!13485 () Bool)

(assert (=> b!83995 (= c!13485 (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun call!7904 () ListLongMap!1437)

(declare-fun call!7909 () ListLongMap!1437)

(declare-fun c!13481 () Bool)

(declare-fun c!13486 () Bool)

(declare-fun call!7905 () ListLongMap!1437)

(declare-fun call!7906 () ListLongMap!1437)

(declare-fun bm!7900 () Bool)

(assert (=> bm!7900 (= call!7906 (+!105 (ite c!13486 call!7909 (ite c!13481 call!7904 call!7905)) (ite (or c!13486 c!13481) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16)))))))

(declare-fun bm!7901 () Bool)

(declare-fun call!7908 () Bool)

(declare-fun lt!39614 () ListLongMap!1437)

(assert (=> bm!7901 (= call!7908 (contains!744 lt!39614 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!83996 () Bool)

(declare-fun e!54794 () Bool)

(assert (=> b!83996 (= e!54794 (= (apply!81 lt!39614 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)) (get!1198 (select (arr!1905 lt!38974) #b00000000000000000000000000000000) (dynLambda!343 (defaultEntry!2316 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!83996 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2148 lt!38974)))))

(assert (=> b!83996 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))))))

(declare-fun b!83997 () Bool)

(declare-fun call!7907 () Bool)

(assert (=> b!83997 (= e!54786 (not call!7907))))

(declare-fun b!83998 () Bool)

(declare-fun e!54797 () Bool)

(assert (=> b!83998 (= e!54797 (validKeyInArray!0 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!7902 () Bool)

(assert (=> bm!7902 (= call!7907 (contains!744 lt!39614 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!84000 () Bool)

(declare-fun e!54787 () Bool)

(assert (=> b!84000 (= e!54787 (= (apply!81 lt!39614 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2210 newMap!16)))))

(declare-fun b!84001 () Bool)

(declare-fun res!43405 () Bool)

(assert (=> b!84001 (=> (not res!43405) (not e!54798))))

(declare-fun e!54795 () Bool)

(assert (=> b!84001 (= res!43405 e!54795)))

(declare-fun c!13482 () Bool)

(assert (=> b!84001 (= c!13482 (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!7903 () Bool)

(declare-fun call!7903 () ListLongMap!1437)

(assert (=> bm!7903 (= call!7903 call!7906)))

(declare-fun b!84002 () Bool)

(assert (=> b!84002 (= e!54795 e!54787)))

(declare-fun res!43402 () Bool)

(assert (=> b!84002 (= res!43402 call!7908)))

(assert (=> b!84002 (=> (not res!43402) (not e!54787))))

(declare-fun b!84003 () Bool)

(declare-fun lt!39607 () Unit!2413)

(assert (=> b!84003 (= e!54793 lt!39607)))

(declare-fun lt!39610 () ListLongMap!1437)

(assert (=> b!84003 (= lt!39610 (getCurrentListMapNoExtraKeys!70 (_keys!3984 newMap!16) lt!38974 (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39603 () (_ BitVec 64))

(assert (=> b!84003 (= lt!39603 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39619 () (_ BitVec 64))

(assert (=> b!84003 (= lt!39619 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!39615 () Unit!2413)

(assert (=> b!84003 (= lt!39615 (addStillContains!57 lt!39610 lt!39603 (zeroValue!2210 newMap!16) lt!39619))))

(assert (=> b!84003 (contains!744 (+!105 lt!39610 (tuple2!2183 lt!39603 (zeroValue!2210 newMap!16))) lt!39619)))

(declare-fun lt!39605 () Unit!2413)

(assert (=> b!84003 (= lt!39605 lt!39615)))

(declare-fun lt!39622 () ListLongMap!1437)

(assert (=> b!84003 (= lt!39622 (getCurrentListMapNoExtraKeys!70 (_keys!3984 newMap!16) lt!38974 (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39604 () (_ BitVec 64))

(assert (=> b!84003 (= lt!39604 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39608 () (_ BitVec 64))

(assert (=> b!84003 (= lt!39608 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!39621 () Unit!2413)

(assert (=> b!84003 (= lt!39621 (addApplyDifferent!57 lt!39622 lt!39604 (minValue!2210 newMap!16) lt!39608))))

(assert (=> b!84003 (= (apply!81 (+!105 lt!39622 (tuple2!2183 lt!39604 (minValue!2210 newMap!16))) lt!39608) (apply!81 lt!39622 lt!39608))))

(declare-fun lt!39620 () Unit!2413)

(assert (=> b!84003 (= lt!39620 lt!39621)))

(declare-fun lt!39609 () ListLongMap!1437)

(assert (=> b!84003 (= lt!39609 (getCurrentListMapNoExtraKeys!70 (_keys!3984 newMap!16) lt!38974 (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39613 () (_ BitVec 64))

(assert (=> b!84003 (= lt!39613 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39618 () (_ BitVec 64))

(assert (=> b!84003 (= lt!39618 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!39612 () Unit!2413)

(assert (=> b!84003 (= lt!39612 (addApplyDifferent!57 lt!39609 lt!39613 (zeroValue!2210 newMap!16) lt!39618))))

(assert (=> b!84003 (= (apply!81 (+!105 lt!39609 (tuple2!2183 lt!39613 (zeroValue!2210 newMap!16))) lt!39618) (apply!81 lt!39609 lt!39618))))

(declare-fun lt!39611 () Unit!2413)

(assert (=> b!84003 (= lt!39611 lt!39612)))

(declare-fun lt!39616 () ListLongMap!1437)

(assert (=> b!84003 (= lt!39616 (getCurrentListMapNoExtraKeys!70 (_keys!3984 newMap!16) lt!38974 (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39606 () (_ BitVec 64))

(assert (=> b!84003 (= lt!39606 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39602 () (_ BitVec 64))

(assert (=> b!84003 (= lt!39602 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!84003 (= lt!39607 (addApplyDifferent!57 lt!39616 lt!39606 (minValue!2210 newMap!16) lt!39602))))

(assert (=> b!84003 (= (apply!81 (+!105 lt!39616 (tuple2!2183 lt!39606 (minValue!2210 newMap!16))) lt!39602) (apply!81 lt!39616 lt!39602))))

(declare-fun bm!7904 () Bool)

(assert (=> bm!7904 (= call!7909 (getCurrentListMapNoExtraKeys!70 (_keys!3984 newMap!16) lt!38974 (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun b!84004 () Bool)

(declare-fun e!54791 () ListLongMap!1437)

(assert (=> b!84004 (= e!54791 call!7903)))

(declare-fun bm!7905 () Bool)

(assert (=> bm!7905 (= call!7904 call!7909)))

(declare-fun d!21345 () Bool)

(assert (=> d!21345 e!54798))

(declare-fun res!43404 () Bool)

(assert (=> d!21345 (=> (not res!43404) (not e!54798))))

(assert (=> d!21345 (= res!43404 (or (bvsge #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))))))))

(declare-fun lt!39601 () ListLongMap!1437)

(assert (=> d!21345 (= lt!39614 lt!39601)))

(declare-fun lt!39617 () Unit!2413)

(assert (=> d!21345 (= lt!39617 e!54793)))

(declare-fun c!13483 () Bool)

(declare-fun e!54790 () Bool)

(assert (=> d!21345 (= c!13483 e!54790)))

(declare-fun res!43400 () Bool)

(assert (=> d!21345 (=> (not res!43400) (not e!54790))))

(assert (=> d!21345 (= res!43400 (bvslt #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))))))

(declare-fun e!54796 () ListLongMap!1437)

(assert (=> d!21345 (= lt!39601 e!54796)))

(assert (=> d!21345 (= c!13486 (and (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!21345 (validMask!0 (mask!6334 newMap!16))))

(assert (=> d!21345 (= (getCurrentListMap!429 (_keys!3984 newMap!16) lt!38974 (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) lt!39614)))

(declare-fun b!83999 () Bool)

(declare-fun c!13484 () Bool)

(assert (=> b!83999 (= c!13484 (and (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!54788 () ListLongMap!1437)

(assert (=> b!83999 (= e!54788 e!54791)))

(declare-fun b!84005 () Bool)

(declare-fun res!43403 () Bool)

(assert (=> b!84005 (=> (not res!43403) (not e!54798))))

(declare-fun e!54789 () Bool)

(assert (=> b!84005 (= res!43403 e!54789)))

(declare-fun res!43399 () Bool)

(assert (=> b!84005 (=> res!43399 e!54789)))

(assert (=> b!84005 (= res!43399 (not e!54797))))

(declare-fun res!43397 () Bool)

(assert (=> b!84005 (=> (not res!43397) (not e!54797))))

(assert (=> b!84005 (= res!43397 (bvslt #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))))))

(declare-fun bm!7906 () Bool)

(assert (=> bm!7906 (= call!7905 call!7904)))

(declare-fun b!84006 () Bool)

(assert (=> b!84006 (= e!54796 (+!105 call!7906 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16))))))

(declare-fun b!84007 () Bool)

(assert (=> b!84007 (= e!54788 call!7903)))

(declare-fun b!84008 () Bool)

(declare-fun e!54792 () Bool)

(assert (=> b!84008 (= e!54786 e!54792)))

(declare-fun res!43398 () Bool)

(assert (=> b!84008 (= res!43398 call!7907)))

(assert (=> b!84008 (=> (not res!43398) (not e!54792))))

(declare-fun b!84009 () Bool)

(assert (=> b!84009 (= e!54791 call!7905)))

(declare-fun b!84010 () Bool)

(assert (=> b!84010 (= e!54796 e!54788)))

(assert (=> b!84010 (= c!13481 (and (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!84011 () Bool)

(assert (=> b!84011 (= e!54789 e!54794)))

(declare-fun res!43401 () Bool)

(assert (=> b!84011 (=> (not res!43401) (not e!54794))))

(assert (=> b!84011 (= res!43401 (contains!744 lt!39614 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!84011 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))))))

(declare-fun b!84012 () Bool)

(assert (=> b!84012 (= e!54795 (not call!7908))))

(declare-fun b!84013 () Bool)

(assert (=> b!84013 (= e!54792 (= (apply!81 lt!39614 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2210 newMap!16)))))

(declare-fun b!84014 () Bool)

(assert (=> b!84014 (= e!54790 (validKeyInArray!0 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!21345 c!13486) b!84006))

(assert (= (and d!21345 (not c!13486)) b!84010))

(assert (= (and b!84010 c!13481) b!84007))

(assert (= (and b!84010 (not c!13481)) b!83999))

(assert (= (and b!83999 c!13484) b!84004))

(assert (= (and b!83999 (not c!13484)) b!84009))

(assert (= (or b!84004 b!84009) bm!7906))

(assert (= (or b!84007 bm!7906) bm!7905))

(assert (= (or b!84007 b!84004) bm!7903))

(assert (= (or b!84006 bm!7905) bm!7904))

(assert (= (or b!84006 bm!7903) bm!7900))

(assert (= (and d!21345 res!43400) b!84014))

(assert (= (and d!21345 c!13483) b!84003))

(assert (= (and d!21345 (not c!13483)) b!83994))

(assert (= (and d!21345 res!43404) b!84005))

(assert (= (and b!84005 res!43397) b!83998))

(assert (= (and b!84005 (not res!43399)) b!84011))

(assert (= (and b!84011 res!43401) b!83996))

(assert (= (and b!84005 res!43403) b!84001))

(assert (= (and b!84001 c!13482) b!84002))

(assert (= (and b!84001 (not c!13482)) b!84012))

(assert (= (and b!84002 res!43402) b!84000))

(assert (= (or b!84002 b!84012) bm!7901))

(assert (= (and b!84001 res!43405) b!83995))

(assert (= (and b!83995 c!13485) b!84008))

(assert (= (and b!83995 (not c!13485)) b!83997))

(assert (= (and b!84008 res!43398) b!84013))

(assert (= (or b!84008 b!83997) bm!7902))

(declare-fun b_lambda!3733 () Bool)

(assert (=> (not b_lambda!3733) (not b!83996)))

(assert (=> b!83996 t!5209))

(declare-fun b_and!5097 () Bool)

(assert (= b_and!5093 (and (=> t!5209 result!2895) b_and!5097)))

(assert (=> b!83996 t!5211))

(declare-fun b_and!5099 () Bool)

(assert (= b_and!5095 (and (=> t!5211 result!2897) b_and!5099)))

(assert (=> b!84014 m!86211))

(assert (=> b!84014 m!86211))

(assert (=> b!84014 m!86213))

(declare-fun m!87521 () Bool)

(assert (=> b!83996 m!87521))

(assert (=> b!83996 m!86211))

(declare-fun m!87523 () Bool)

(assert (=> b!83996 m!87523))

(assert (=> b!83996 m!86211))

(assert (=> b!83996 m!86219))

(assert (=> b!83996 m!87521))

(assert (=> b!83996 m!86219))

(declare-fun m!87525 () Bool)

(assert (=> b!83996 m!87525))

(assert (=> d!21345 m!86223))

(declare-fun m!87527 () Bool)

(assert (=> b!84013 m!87527))

(declare-fun m!87529 () Bool)

(assert (=> b!84003 m!87529))

(declare-fun m!87531 () Bool)

(assert (=> b!84003 m!87531))

(declare-fun m!87533 () Bool)

(assert (=> b!84003 m!87533))

(declare-fun m!87535 () Bool)

(assert (=> b!84003 m!87535))

(assert (=> b!84003 m!87531))

(declare-fun m!87537 () Bool)

(assert (=> b!84003 m!87537))

(declare-fun m!87539 () Bool)

(assert (=> b!84003 m!87539))

(declare-fun m!87541 () Bool)

(assert (=> b!84003 m!87541))

(declare-fun m!87543 () Bool)

(assert (=> b!84003 m!87543))

(declare-fun m!87545 () Bool)

(assert (=> b!84003 m!87545))

(declare-fun m!87547 () Bool)

(assert (=> b!84003 m!87547))

(declare-fun m!87549 () Bool)

(assert (=> b!84003 m!87549))

(assert (=> b!84003 m!86211))

(assert (=> b!84003 m!87545))

(assert (=> b!84003 m!87539))

(assert (=> b!84003 m!87533))

(declare-fun m!87551 () Bool)

(assert (=> b!84003 m!87551))

(declare-fun m!87553 () Bool)

(assert (=> b!84003 m!87553))

(declare-fun m!87555 () Bool)

(assert (=> b!84003 m!87555))

(declare-fun m!87557 () Bool)

(assert (=> b!84003 m!87557))

(declare-fun m!87559 () Bool)

(assert (=> b!84003 m!87559))

(declare-fun m!87561 () Bool)

(assert (=> b!84006 m!87561))

(declare-fun m!87563 () Bool)

(assert (=> bm!7900 m!87563))

(assert (=> b!84011 m!86211))

(assert (=> b!84011 m!86211))

(declare-fun m!87565 () Bool)

(assert (=> b!84011 m!87565))

(assert (=> bm!7904 m!87549))

(declare-fun m!87567 () Bool)

(assert (=> bm!7902 m!87567))

(assert (=> b!83998 m!86211))

(assert (=> b!83998 m!86211))

(assert (=> b!83998 m!86213))

(declare-fun m!87569 () Bool)

(assert (=> bm!7901 m!87569))

(declare-fun m!87571 () Bool)

(assert (=> b!84000 m!87571))

(assert (=> b!83695 d!21345))

(assert (=> b!83464 d!21329))

(declare-fun d!21347 () Bool)

(assert (=> d!21347 (= (apply!81 lt!39451 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1201 (getValueByKey!140 (toList!734 lt!39451) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3557 () Bool)

(assert (= bs!3557 d!21347))

(declare-fun m!87573 () Bool)

(assert (=> bs!3557 m!87573))

(assert (=> bs!3557 m!87573))

(declare-fun m!87575 () Bool)

(assert (=> bs!3557 m!87575))

(assert (=> b!83649 d!21347))

(declare-fun b!84017 () Bool)

(declare-fun e!54800 () Option!146)

(assert (=> b!84017 (= e!54800 (getValueByKey!140 (t!5196 (toList!734 lt!39219)) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun d!21349 () Bool)

(declare-fun c!13487 () Bool)

(assert (=> d!21349 (= c!13487 (and ((_ is Cons!1500) (toList!734 lt!39219)) (= (_1!1102 (h!2090 (toList!734 lt!39219))) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(declare-fun e!54799 () Option!146)

(assert (=> d!21349 (= (getValueByKey!140 (toList!734 lt!39219) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))) e!54799)))

(declare-fun b!84015 () Bool)

(assert (=> b!84015 (= e!54799 (Some!145 (_2!1102 (h!2090 (toList!734 lt!39219)))))))

(declare-fun b!84016 () Bool)

(assert (=> b!84016 (= e!54799 e!54800)))

(declare-fun c!13488 () Bool)

(assert (=> b!84016 (= c!13488 (and ((_ is Cons!1500) (toList!734 lt!39219)) (not (= (_1!1102 (h!2090 (toList!734 lt!39219))) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))))

(declare-fun b!84018 () Bool)

(assert (=> b!84018 (= e!54800 None!144)))

(assert (= (and d!21349 c!13487) b!84015))

(assert (= (and d!21349 (not c!13487)) b!84016))

(assert (= (and b!84016 c!13488) b!84017))

(assert (= (and b!84016 (not c!13488)) b!84018))

(declare-fun m!87577 () Bool)

(assert (=> b!84017 m!87577))

(assert (=> b!83407 d!21349))

(declare-fun b!84021 () Bool)

(declare-fun e!54802 () Option!146)

(assert (=> b!84021 (= e!54802 (getValueByKey!140 (t!5196 (t!5196 (toList!734 lt!39053))) (_1!1102 lt!38775)))))

(declare-fun d!21351 () Bool)

(declare-fun c!13489 () Bool)

(assert (=> d!21351 (= c!13489 (and ((_ is Cons!1500) (t!5196 (toList!734 lt!39053))) (= (_1!1102 (h!2090 (t!5196 (toList!734 lt!39053)))) (_1!1102 lt!38775))))))

(declare-fun e!54801 () Option!146)

(assert (=> d!21351 (= (getValueByKey!140 (t!5196 (toList!734 lt!39053)) (_1!1102 lt!38775)) e!54801)))

(declare-fun b!84019 () Bool)

(assert (=> b!84019 (= e!54801 (Some!145 (_2!1102 (h!2090 (t!5196 (toList!734 lt!39053))))))))

(declare-fun b!84020 () Bool)

(assert (=> b!84020 (= e!54801 e!54802)))

(declare-fun c!13490 () Bool)

(assert (=> b!84020 (= c!13490 (and ((_ is Cons!1500) (t!5196 (toList!734 lt!39053))) (not (= (_1!1102 (h!2090 (t!5196 (toList!734 lt!39053)))) (_1!1102 lt!38775)))))))

(declare-fun b!84022 () Bool)

(assert (=> b!84022 (= e!54802 None!144)))

(assert (= (and d!21351 c!13489) b!84019))

(assert (= (and d!21351 (not c!13489)) b!84020))

(assert (= (and b!84020 c!13490) b!84021))

(assert (= (and b!84020 (not c!13490)) b!84022))

(declare-fun m!87579 () Bool)

(assert (=> b!84021 m!87579))

(assert (=> b!83619 d!21351))

(declare-fun b!84025 () Bool)

(declare-fun e!54804 () Option!146)

(assert (=> b!84025 (= e!54804 (getValueByKey!140 (t!5196 (toList!734 lt!39262)) (_1!1102 (tuple2!2183 lt!39033 lt!39035))))))

(declare-fun d!21353 () Bool)

(declare-fun c!13491 () Bool)

(assert (=> d!21353 (= c!13491 (and ((_ is Cons!1500) (toList!734 lt!39262)) (= (_1!1102 (h!2090 (toList!734 lt!39262))) (_1!1102 (tuple2!2183 lt!39033 lt!39035)))))))

(declare-fun e!54803 () Option!146)

(assert (=> d!21353 (= (getValueByKey!140 (toList!734 lt!39262) (_1!1102 (tuple2!2183 lt!39033 lt!39035))) e!54803)))

(declare-fun b!84023 () Bool)

(assert (=> b!84023 (= e!54803 (Some!145 (_2!1102 (h!2090 (toList!734 lt!39262)))))))

(declare-fun b!84024 () Bool)

(assert (=> b!84024 (= e!54803 e!54804)))

(declare-fun c!13492 () Bool)

(assert (=> b!84024 (= c!13492 (and ((_ is Cons!1500) (toList!734 lt!39262)) (not (= (_1!1102 (h!2090 (toList!734 lt!39262))) (_1!1102 (tuple2!2183 lt!39033 lt!39035))))))))

(declare-fun b!84026 () Bool)

(assert (=> b!84026 (= e!54804 None!144)))

(assert (= (and d!21353 c!13491) b!84023))

(assert (= (and d!21353 (not c!13491)) b!84024))

(assert (= (and b!84024 c!13492) b!84025))

(assert (= (and b!84024 (not c!13492)) b!84026))

(declare-fun m!87581 () Bool)

(assert (=> b!84025 m!87581))

(assert (=> b!83465 d!21353))

(declare-fun b!84027 () Bool)

(declare-fun e!54812 () Unit!2413)

(declare-fun Unit!2458 () Unit!2413)

(assert (=> b!84027 (= e!54812 Unit!2458)))

(declare-fun b!84028 () Bool)

(declare-fun e!54817 () Bool)

(declare-fun e!54805 () Bool)

(assert (=> b!84028 (= e!54817 e!54805)))

(declare-fun c!13497 () Bool)

(assert (=> b!84028 (= c!13497 (not (= (bvand (extraKeys!2159 (_2!1101 lt!38973)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun call!7912 () ListLongMap!1437)

(declare-fun c!13493 () Bool)

(declare-fun c!13498 () Bool)

(declare-fun bm!7907 () Bool)

(declare-fun call!7913 () ListLongMap!1437)

(declare-fun call!7916 () ListLongMap!1437)

(declare-fun call!7911 () ListLongMap!1437)

(assert (=> bm!7907 (= call!7913 (+!105 (ite c!13498 call!7916 (ite c!13493 call!7911 call!7912)) (ite (or c!13498 c!13493) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (_2!1101 lt!38973))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (_2!1101 lt!38973))))))))

(declare-fun bm!7908 () Bool)

(declare-fun call!7915 () Bool)

(declare-fun lt!39636 () ListLongMap!1437)

(assert (=> bm!7908 (= call!7915 (contains!744 lt!39636 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!84029 () Bool)

(declare-fun e!54813 () Bool)

(assert (=> b!84029 (= e!54813 (= (apply!81 lt!39636 (select (arr!1904 (_keys!3984 (_2!1101 lt!38973))) #b00000000000000000000000000000000)) (get!1198 (select (arr!1905 (_values!2299 (_2!1101 lt!38973))) #b00000000000000000000000000000000) (dynLambda!343 (defaultEntry!2316 (_2!1101 lt!38973)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!84029 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2148 (_values!2299 (_2!1101 lt!38973)))))))

(assert (=> b!84029 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2147 (_keys!3984 (_2!1101 lt!38973)))))))

(declare-fun b!84030 () Bool)

(declare-fun call!7914 () Bool)

(assert (=> b!84030 (= e!54805 (not call!7914))))

(declare-fun b!84031 () Bool)

(declare-fun e!54816 () Bool)

(assert (=> b!84031 (= e!54816 (validKeyInArray!0 (select (arr!1904 (_keys!3984 (_2!1101 lt!38973))) #b00000000000000000000000000000000)))))

(declare-fun bm!7909 () Bool)

(assert (=> bm!7909 (= call!7914 (contains!744 lt!39636 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!84033 () Bool)

(declare-fun e!54806 () Bool)

(assert (=> b!84033 (= e!54806 (= (apply!81 lt!39636 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2210 (_2!1101 lt!38973))))))

(declare-fun b!84034 () Bool)

(declare-fun res!43414 () Bool)

(assert (=> b!84034 (=> (not res!43414) (not e!54817))))

(declare-fun e!54814 () Bool)

(assert (=> b!84034 (= res!43414 e!54814)))

(declare-fun c!13494 () Bool)

(assert (=> b!84034 (= c!13494 (not (= (bvand (extraKeys!2159 (_2!1101 lt!38973)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!7910 () Bool)

(declare-fun call!7910 () ListLongMap!1437)

(assert (=> bm!7910 (= call!7910 call!7913)))

(declare-fun b!84035 () Bool)

(assert (=> b!84035 (= e!54814 e!54806)))

(declare-fun res!43411 () Bool)

(assert (=> b!84035 (= res!43411 call!7915)))

(assert (=> b!84035 (=> (not res!43411) (not e!54806))))

(declare-fun b!84036 () Bool)

(declare-fun lt!39629 () Unit!2413)

(assert (=> b!84036 (= e!54812 lt!39629)))

(declare-fun lt!39632 () ListLongMap!1437)

(assert (=> b!84036 (= lt!39632 (getCurrentListMapNoExtraKeys!70 (_keys!3984 (_2!1101 lt!38973)) (_values!2299 (_2!1101 lt!38973)) (mask!6334 (_2!1101 lt!38973)) (extraKeys!2159 (_2!1101 lt!38973)) (zeroValue!2210 (_2!1101 lt!38973)) (minValue!2210 (_2!1101 lt!38973)) #b00000000000000000000000000000000 (defaultEntry!2316 (_2!1101 lt!38973))))))

(declare-fun lt!39625 () (_ BitVec 64))

(assert (=> b!84036 (= lt!39625 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39641 () (_ BitVec 64))

(assert (=> b!84036 (= lt!39641 (select (arr!1904 (_keys!3984 (_2!1101 lt!38973))) #b00000000000000000000000000000000))))

(declare-fun lt!39637 () Unit!2413)

(assert (=> b!84036 (= lt!39637 (addStillContains!57 lt!39632 lt!39625 (zeroValue!2210 (_2!1101 lt!38973)) lt!39641))))

(assert (=> b!84036 (contains!744 (+!105 lt!39632 (tuple2!2183 lt!39625 (zeroValue!2210 (_2!1101 lt!38973)))) lt!39641)))

(declare-fun lt!39627 () Unit!2413)

(assert (=> b!84036 (= lt!39627 lt!39637)))

(declare-fun lt!39644 () ListLongMap!1437)

(assert (=> b!84036 (= lt!39644 (getCurrentListMapNoExtraKeys!70 (_keys!3984 (_2!1101 lt!38973)) (_values!2299 (_2!1101 lt!38973)) (mask!6334 (_2!1101 lt!38973)) (extraKeys!2159 (_2!1101 lt!38973)) (zeroValue!2210 (_2!1101 lt!38973)) (minValue!2210 (_2!1101 lt!38973)) #b00000000000000000000000000000000 (defaultEntry!2316 (_2!1101 lt!38973))))))

(declare-fun lt!39626 () (_ BitVec 64))

(assert (=> b!84036 (= lt!39626 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39630 () (_ BitVec 64))

(assert (=> b!84036 (= lt!39630 (select (arr!1904 (_keys!3984 (_2!1101 lt!38973))) #b00000000000000000000000000000000))))

(declare-fun lt!39643 () Unit!2413)

(assert (=> b!84036 (= lt!39643 (addApplyDifferent!57 lt!39644 lt!39626 (minValue!2210 (_2!1101 lt!38973)) lt!39630))))

(assert (=> b!84036 (= (apply!81 (+!105 lt!39644 (tuple2!2183 lt!39626 (minValue!2210 (_2!1101 lt!38973)))) lt!39630) (apply!81 lt!39644 lt!39630))))

(declare-fun lt!39642 () Unit!2413)

(assert (=> b!84036 (= lt!39642 lt!39643)))

(declare-fun lt!39631 () ListLongMap!1437)

(assert (=> b!84036 (= lt!39631 (getCurrentListMapNoExtraKeys!70 (_keys!3984 (_2!1101 lt!38973)) (_values!2299 (_2!1101 lt!38973)) (mask!6334 (_2!1101 lt!38973)) (extraKeys!2159 (_2!1101 lt!38973)) (zeroValue!2210 (_2!1101 lt!38973)) (minValue!2210 (_2!1101 lt!38973)) #b00000000000000000000000000000000 (defaultEntry!2316 (_2!1101 lt!38973))))))

(declare-fun lt!39635 () (_ BitVec 64))

(assert (=> b!84036 (= lt!39635 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39640 () (_ BitVec 64))

(assert (=> b!84036 (= lt!39640 (select (arr!1904 (_keys!3984 (_2!1101 lt!38973))) #b00000000000000000000000000000000))))

(declare-fun lt!39634 () Unit!2413)

(assert (=> b!84036 (= lt!39634 (addApplyDifferent!57 lt!39631 lt!39635 (zeroValue!2210 (_2!1101 lt!38973)) lt!39640))))

(assert (=> b!84036 (= (apply!81 (+!105 lt!39631 (tuple2!2183 lt!39635 (zeroValue!2210 (_2!1101 lt!38973)))) lt!39640) (apply!81 lt!39631 lt!39640))))

(declare-fun lt!39633 () Unit!2413)

(assert (=> b!84036 (= lt!39633 lt!39634)))

(declare-fun lt!39638 () ListLongMap!1437)

(assert (=> b!84036 (= lt!39638 (getCurrentListMapNoExtraKeys!70 (_keys!3984 (_2!1101 lt!38973)) (_values!2299 (_2!1101 lt!38973)) (mask!6334 (_2!1101 lt!38973)) (extraKeys!2159 (_2!1101 lt!38973)) (zeroValue!2210 (_2!1101 lt!38973)) (minValue!2210 (_2!1101 lt!38973)) #b00000000000000000000000000000000 (defaultEntry!2316 (_2!1101 lt!38973))))))

(declare-fun lt!39628 () (_ BitVec 64))

(assert (=> b!84036 (= lt!39628 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39624 () (_ BitVec 64))

(assert (=> b!84036 (= lt!39624 (select (arr!1904 (_keys!3984 (_2!1101 lt!38973))) #b00000000000000000000000000000000))))

(assert (=> b!84036 (= lt!39629 (addApplyDifferent!57 lt!39638 lt!39628 (minValue!2210 (_2!1101 lt!38973)) lt!39624))))

(assert (=> b!84036 (= (apply!81 (+!105 lt!39638 (tuple2!2183 lt!39628 (minValue!2210 (_2!1101 lt!38973)))) lt!39624) (apply!81 lt!39638 lt!39624))))

(declare-fun bm!7911 () Bool)

(assert (=> bm!7911 (= call!7916 (getCurrentListMapNoExtraKeys!70 (_keys!3984 (_2!1101 lt!38973)) (_values!2299 (_2!1101 lt!38973)) (mask!6334 (_2!1101 lt!38973)) (extraKeys!2159 (_2!1101 lt!38973)) (zeroValue!2210 (_2!1101 lt!38973)) (minValue!2210 (_2!1101 lt!38973)) #b00000000000000000000000000000000 (defaultEntry!2316 (_2!1101 lt!38973))))))

(declare-fun b!84037 () Bool)

(declare-fun e!54810 () ListLongMap!1437)

(assert (=> b!84037 (= e!54810 call!7910)))

(declare-fun bm!7912 () Bool)

(assert (=> bm!7912 (= call!7911 call!7916)))

(declare-fun d!21355 () Bool)

(assert (=> d!21355 e!54817))

(declare-fun res!43413 () Bool)

(assert (=> d!21355 (=> (not res!43413) (not e!54817))))

(assert (=> d!21355 (= res!43413 (or (bvsge #b00000000000000000000000000000000 (size!2147 (_keys!3984 (_2!1101 lt!38973)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2147 (_keys!3984 (_2!1101 lt!38973)))))))))

(declare-fun lt!39623 () ListLongMap!1437)

(assert (=> d!21355 (= lt!39636 lt!39623)))

(declare-fun lt!39639 () Unit!2413)

(assert (=> d!21355 (= lt!39639 e!54812)))

(declare-fun c!13495 () Bool)

(declare-fun e!54809 () Bool)

(assert (=> d!21355 (= c!13495 e!54809)))

(declare-fun res!43409 () Bool)

(assert (=> d!21355 (=> (not res!43409) (not e!54809))))

(assert (=> d!21355 (= res!43409 (bvslt #b00000000000000000000000000000000 (size!2147 (_keys!3984 (_2!1101 lt!38973)))))))

(declare-fun e!54815 () ListLongMap!1437)

(assert (=> d!21355 (= lt!39623 e!54815)))

(assert (=> d!21355 (= c!13498 (and (not (= (bvand (extraKeys!2159 (_2!1101 lt!38973)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2159 (_2!1101 lt!38973)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!21355 (validMask!0 (mask!6334 (_2!1101 lt!38973)))))

(assert (=> d!21355 (= (getCurrentListMap!429 (_keys!3984 (_2!1101 lt!38973)) (_values!2299 (_2!1101 lt!38973)) (mask!6334 (_2!1101 lt!38973)) (extraKeys!2159 (_2!1101 lt!38973)) (zeroValue!2210 (_2!1101 lt!38973)) (minValue!2210 (_2!1101 lt!38973)) #b00000000000000000000000000000000 (defaultEntry!2316 (_2!1101 lt!38973))) lt!39636)))

(declare-fun b!84032 () Bool)

(declare-fun c!13496 () Bool)

(assert (=> b!84032 (= c!13496 (and (not (= (bvand (extraKeys!2159 (_2!1101 lt!38973)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2159 (_2!1101 lt!38973)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!54807 () ListLongMap!1437)

(assert (=> b!84032 (= e!54807 e!54810)))

(declare-fun b!84038 () Bool)

(declare-fun res!43412 () Bool)

(assert (=> b!84038 (=> (not res!43412) (not e!54817))))

(declare-fun e!54808 () Bool)

(assert (=> b!84038 (= res!43412 e!54808)))

(declare-fun res!43408 () Bool)

(assert (=> b!84038 (=> res!43408 e!54808)))

(assert (=> b!84038 (= res!43408 (not e!54816))))

(declare-fun res!43406 () Bool)

(assert (=> b!84038 (=> (not res!43406) (not e!54816))))

(assert (=> b!84038 (= res!43406 (bvslt #b00000000000000000000000000000000 (size!2147 (_keys!3984 (_2!1101 lt!38973)))))))

(declare-fun bm!7913 () Bool)

(assert (=> bm!7913 (= call!7912 call!7911)))

(declare-fun b!84039 () Bool)

(assert (=> b!84039 (= e!54815 (+!105 call!7913 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (_2!1101 lt!38973)))))))

(declare-fun b!84040 () Bool)

(assert (=> b!84040 (= e!54807 call!7910)))

(declare-fun b!84041 () Bool)

(declare-fun e!54811 () Bool)

(assert (=> b!84041 (= e!54805 e!54811)))

(declare-fun res!43407 () Bool)

(assert (=> b!84041 (= res!43407 call!7914)))

(assert (=> b!84041 (=> (not res!43407) (not e!54811))))

(declare-fun b!84042 () Bool)

(assert (=> b!84042 (= e!54810 call!7912)))

(declare-fun b!84043 () Bool)

(assert (=> b!84043 (= e!54815 e!54807)))

(assert (=> b!84043 (= c!13493 (and (not (= (bvand (extraKeys!2159 (_2!1101 lt!38973)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2159 (_2!1101 lt!38973)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!84044 () Bool)

(assert (=> b!84044 (= e!54808 e!54813)))

(declare-fun res!43410 () Bool)

(assert (=> b!84044 (=> (not res!43410) (not e!54813))))

(assert (=> b!84044 (= res!43410 (contains!744 lt!39636 (select (arr!1904 (_keys!3984 (_2!1101 lt!38973))) #b00000000000000000000000000000000)))))

(assert (=> b!84044 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2147 (_keys!3984 (_2!1101 lt!38973)))))))

(declare-fun b!84045 () Bool)

(assert (=> b!84045 (= e!54814 (not call!7915))))

(declare-fun b!84046 () Bool)

(assert (=> b!84046 (= e!54811 (= (apply!81 lt!39636 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2210 (_2!1101 lt!38973))))))

(declare-fun b!84047 () Bool)

(assert (=> b!84047 (= e!54809 (validKeyInArray!0 (select (arr!1904 (_keys!3984 (_2!1101 lt!38973))) #b00000000000000000000000000000000)))))

(assert (= (and d!21355 c!13498) b!84039))

(assert (= (and d!21355 (not c!13498)) b!84043))

(assert (= (and b!84043 c!13493) b!84040))

(assert (= (and b!84043 (not c!13493)) b!84032))

(assert (= (and b!84032 c!13496) b!84037))

(assert (= (and b!84032 (not c!13496)) b!84042))

(assert (= (or b!84037 b!84042) bm!7913))

(assert (= (or b!84040 bm!7913) bm!7912))

(assert (= (or b!84040 b!84037) bm!7910))

(assert (= (or b!84039 bm!7912) bm!7911))

(assert (= (or b!84039 bm!7910) bm!7907))

(assert (= (and d!21355 res!43409) b!84047))

(assert (= (and d!21355 c!13495) b!84036))

(assert (= (and d!21355 (not c!13495)) b!84027))

(assert (= (and d!21355 res!43413) b!84038))

(assert (= (and b!84038 res!43406) b!84031))

(assert (= (and b!84038 (not res!43408)) b!84044))

(assert (= (and b!84044 res!43410) b!84029))

(assert (= (and b!84038 res!43412) b!84034))

(assert (= (and b!84034 c!13494) b!84035))

(assert (= (and b!84034 (not c!13494)) b!84045))

(assert (= (and b!84035 res!43411) b!84033))

(assert (= (or b!84035 b!84045) bm!7908))

(assert (= (and b!84034 res!43414) b!84028))

(assert (= (and b!84028 c!13497) b!84041))

(assert (= (and b!84028 (not c!13497)) b!84030))

(assert (= (and b!84041 res!43407) b!84046))

(assert (= (or b!84041 b!84030) bm!7909))

(declare-fun b_lambda!3735 () Bool)

(assert (=> (not b_lambda!3735) (not b!84029)))

(declare-fun t!5213 () Bool)

(declare-fun tb!1677 () Bool)

(assert (=> (and b!82790 (= (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) (defaultEntry!2316 (_2!1101 lt!38973))) t!5213) tb!1677))

(declare-fun result!2899 () Bool)

(assert (=> tb!1677 (= result!2899 tp_is_empty!2527)))

(assert (=> b!84029 t!5213))

(declare-fun b_and!5101 () Bool)

(assert (= b_and!5097 (and (=> t!5213 result!2899) b_and!5101)))

(declare-fun t!5215 () Bool)

(declare-fun tb!1679 () Bool)

(assert (=> (and b!82787 (= (defaultEntry!2316 newMap!16) (defaultEntry!2316 (_2!1101 lt!38973))) t!5215) tb!1679))

(declare-fun result!2901 () Bool)

(assert (= result!2901 result!2899))

(assert (=> b!84029 t!5215))

(declare-fun b_and!5103 () Bool)

(assert (= b_and!5099 (and (=> t!5215 result!2901) b_and!5103)))

(declare-fun m!87583 () Bool)

(assert (=> b!84047 m!87583))

(assert (=> b!84047 m!87583))

(declare-fun m!87585 () Bool)

(assert (=> b!84047 m!87585))

(declare-fun m!87587 () Bool)

(assert (=> b!84029 m!87587))

(assert (=> b!84029 m!87583))

(declare-fun m!87589 () Bool)

(assert (=> b!84029 m!87589))

(assert (=> b!84029 m!87583))

(declare-fun m!87591 () Bool)

(assert (=> b!84029 m!87591))

(assert (=> b!84029 m!87587))

(assert (=> b!84029 m!87591))

(declare-fun m!87593 () Bool)

(assert (=> b!84029 m!87593))

(assert (=> d!21355 m!87439))

(declare-fun m!87595 () Bool)

(assert (=> b!84046 m!87595))

(declare-fun m!87597 () Bool)

(assert (=> b!84036 m!87597))

(declare-fun m!87599 () Bool)

(assert (=> b!84036 m!87599))

(declare-fun m!87601 () Bool)

(assert (=> b!84036 m!87601))

(declare-fun m!87603 () Bool)

(assert (=> b!84036 m!87603))

(assert (=> b!84036 m!87599))

(declare-fun m!87605 () Bool)

(assert (=> b!84036 m!87605))

(declare-fun m!87607 () Bool)

(assert (=> b!84036 m!87607))

(declare-fun m!87609 () Bool)

(assert (=> b!84036 m!87609))

(declare-fun m!87611 () Bool)

(assert (=> b!84036 m!87611))

(declare-fun m!87613 () Bool)

(assert (=> b!84036 m!87613))

(declare-fun m!87615 () Bool)

(assert (=> b!84036 m!87615))

(declare-fun m!87617 () Bool)

(assert (=> b!84036 m!87617))

(assert (=> b!84036 m!87583))

(assert (=> b!84036 m!87613))

(assert (=> b!84036 m!87607))

(assert (=> b!84036 m!87601))

(declare-fun m!87619 () Bool)

(assert (=> b!84036 m!87619))

(declare-fun m!87621 () Bool)

(assert (=> b!84036 m!87621))

(declare-fun m!87623 () Bool)

(assert (=> b!84036 m!87623))

(declare-fun m!87625 () Bool)

(assert (=> b!84036 m!87625))

(declare-fun m!87627 () Bool)

(assert (=> b!84036 m!87627))

(declare-fun m!87629 () Bool)

(assert (=> b!84039 m!87629))

(declare-fun m!87631 () Bool)

(assert (=> bm!7907 m!87631))

(assert (=> b!84044 m!87583))

(assert (=> b!84044 m!87583))

(declare-fun m!87633 () Bool)

(assert (=> b!84044 m!87633))

(assert (=> bm!7911 m!87617))

(declare-fun m!87635 () Bool)

(assert (=> bm!7909 m!87635))

(assert (=> b!84031 m!87583))

(assert (=> b!84031 m!87583))

(assert (=> b!84031 m!87585))

(declare-fun m!87637 () Bool)

(assert (=> bm!7908 m!87637))

(declare-fun m!87639 () Bool)

(assert (=> b!84033 m!87639))

(assert (=> d!21021 d!21355))

(declare-fun d!21357 () Bool)

(declare-fun e!54819 () Bool)

(assert (=> d!21357 e!54819))

(declare-fun res!43415 () Bool)

(assert (=> d!21357 (=> res!43415 e!54819)))

(declare-fun lt!39645 () Bool)

(assert (=> d!21357 (= res!43415 (not lt!39645))))

(declare-fun lt!39648 () Bool)

(assert (=> d!21357 (= lt!39645 lt!39648)))

(declare-fun lt!39647 () Unit!2413)

(declare-fun e!54818 () Unit!2413)

(assert (=> d!21357 (= lt!39647 e!54818)))

(declare-fun c!13499 () Bool)

(assert (=> d!21357 (= c!13499 lt!39648)))

(assert (=> d!21357 (= lt!39648 (containsKey!143 (toList!734 lt!39451) (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!21357 (= (contains!744 lt!39451 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)) lt!39645)))

(declare-fun b!84048 () Bool)

(declare-fun lt!39646 () Unit!2413)

(assert (=> b!84048 (= e!54818 lt!39646)))

(assert (=> b!84048 (= lt!39646 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 lt!39451) (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!84048 (isDefined!92 (getValueByKey!140 (toList!734 lt!39451) (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!84049 () Bool)

(declare-fun Unit!2459 () Unit!2413)

(assert (=> b!84049 (= e!54818 Unit!2459)))

(declare-fun b!84050 () Bool)

(assert (=> b!84050 (= e!54819 (isDefined!92 (getValueByKey!140 (toList!734 lt!39451) (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!21357 c!13499) b!84048))

(assert (= (and d!21357 (not c!13499)) b!84049))

(assert (= (and d!21357 (not res!43415)) b!84050))

(assert (=> d!21357 m!86211))

(declare-fun m!87641 () Bool)

(assert (=> d!21357 m!87641))

(assert (=> b!84048 m!86211))

(declare-fun m!87643 () Bool)

(assert (=> b!84048 m!87643))

(assert (=> b!84048 m!86211))

(declare-fun m!87645 () Bool)

(assert (=> b!84048 m!87645))

(assert (=> b!84048 m!87645))

(declare-fun m!87647 () Bool)

(assert (=> b!84048 m!87647))

(assert (=> b!84050 m!86211))

(assert (=> b!84050 m!87645))

(assert (=> b!84050 m!87645))

(assert (=> b!84050 m!87647))

(assert (=> b!83660 d!21357))

(declare-fun d!21359 () Bool)

(declare-fun lt!39649 () Bool)

(assert (=> d!21359 (= lt!39649 (select (content!89 lt!39010) (tuple2!2183 (_1!1102 lt!38775) (_2!1102 lt!38775))))))

(declare-fun e!54820 () Bool)

(assert (=> d!21359 (= lt!39649 e!54820)))

(declare-fun res!43417 () Bool)

(assert (=> d!21359 (=> (not res!43417) (not e!54820))))

(assert (=> d!21359 (= res!43417 ((_ is Cons!1500) lt!39010))))

(assert (=> d!21359 (= (contains!746 lt!39010 (tuple2!2183 (_1!1102 lt!38775) (_2!1102 lt!38775))) lt!39649)))

(declare-fun b!84051 () Bool)

(declare-fun e!54821 () Bool)

(assert (=> b!84051 (= e!54820 e!54821)))

(declare-fun res!43416 () Bool)

(assert (=> b!84051 (=> res!43416 e!54821)))

(assert (=> b!84051 (= res!43416 (= (h!2090 lt!39010) (tuple2!2183 (_1!1102 lt!38775) (_2!1102 lt!38775))))))

(declare-fun b!84052 () Bool)

(assert (=> b!84052 (= e!54821 (contains!746 (t!5196 lt!39010) (tuple2!2183 (_1!1102 lt!38775) (_2!1102 lt!38775))))))

(assert (= (and d!21359 res!43417) b!84051))

(assert (= (and b!84051 (not res!43416)) b!84052))

(declare-fun m!87649 () Bool)

(assert (=> d!21359 m!87649))

(declare-fun m!87651 () Bool)

(assert (=> d!21359 m!87651))

(declare-fun m!87653 () Bool)

(assert (=> b!84052 m!87653))

(assert (=> b!83417 d!21359))

(declare-fun d!21361 () Bool)

(assert (=> d!21361 (= (apply!81 lt!39143 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1201 (getValueByKey!140 (toList!734 lt!39143) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3558 () Bool)

(assert (= bs!3558 d!21361))

(declare-fun m!87655 () Bool)

(assert (=> bs!3558 m!87655))

(assert (=> bs!3558 m!87655))

(declare-fun m!87657 () Bool)

(assert (=> bs!3558 m!87657))

(assert (=> b!83265 d!21361))

(declare-fun lt!39650 () Bool)

(declare-fun d!21363 () Bool)

(assert (=> d!21363 (= lt!39650 (select (content!89 (toList!734 lt!39328)) (tuple2!2183 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))

(declare-fun e!54822 () Bool)

(assert (=> d!21363 (= lt!39650 e!54822)))

(declare-fun res!43419 () Bool)

(assert (=> d!21363 (=> (not res!43419) (not e!54822))))

(assert (=> d!21363 (= res!43419 ((_ is Cons!1500) (toList!734 lt!39328)))))

(assert (=> d!21363 (= (contains!746 (toList!734 lt!39328) (tuple2!2183 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) lt!39650)))

(declare-fun b!84053 () Bool)

(declare-fun e!54823 () Bool)

(assert (=> b!84053 (= e!54822 e!54823)))

(declare-fun res!43418 () Bool)

(assert (=> b!84053 (=> res!43418 e!54823)))

(assert (=> b!84053 (= res!43418 (= (h!2090 (toList!734 lt!39328)) (tuple2!2183 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))

(declare-fun b!84054 () Bool)

(assert (=> b!84054 (= e!54823 (contains!746 (t!5196 (toList!734 lt!39328)) (tuple2!2183 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))

(assert (= (and d!21363 res!43419) b!84053))

(assert (= (and b!84053 (not res!43418)) b!84054))

(declare-fun m!87659 () Bool)

(assert (=> d!21363 m!87659))

(declare-fun m!87661 () Bool)

(assert (=> d!21363 m!87661))

(declare-fun m!87663 () Bool)

(assert (=> b!84054 m!87663))

(assert (=> b!83536 d!21363))

(declare-fun d!21365 () Bool)

(declare-fun res!43420 () Bool)

(declare-fun e!54824 () Bool)

(assert (=> d!21365 (=> res!43420 e!54824)))

(assert (=> d!21365 (= res!43420 (and ((_ is Cons!1500) (toList!734 (+!105 lt!39109 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))) (= (_1!1102 (h!2090 (toList!734 (+!105 lt!39109 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))) lt!39118)))))

(assert (=> d!21365 (= (containsKey!143 (toList!734 (+!105 lt!39109 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))) lt!39118) e!54824)))

(declare-fun b!84055 () Bool)

(declare-fun e!54825 () Bool)

(assert (=> b!84055 (= e!54824 e!54825)))

(declare-fun res!43421 () Bool)

(assert (=> b!84055 (=> (not res!43421) (not e!54825))))

(assert (=> b!84055 (= res!43421 (and (or (not ((_ is Cons!1500) (toList!734 (+!105 lt!39109 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))) (bvsle (_1!1102 (h!2090 (toList!734 (+!105 lt!39109 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))) lt!39118)) ((_ is Cons!1500) (toList!734 (+!105 lt!39109 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))) (bvslt (_1!1102 (h!2090 (toList!734 (+!105 lt!39109 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))) lt!39118)))))

(declare-fun b!84056 () Bool)

(assert (=> b!84056 (= e!54825 (containsKey!143 (t!5196 (toList!734 (+!105 lt!39109 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))) lt!39118))))

(assert (= (and d!21365 (not res!43420)) b!84055))

(assert (= (and b!84055 res!43421) b!84056))

(declare-fun m!87665 () Bool)

(assert (=> b!84056 m!87665))

(assert (=> d!21081 d!21365))

(assert (=> d!21049 d!21045))

(assert (=> d!21049 d!21043))

(declare-fun d!21367 () Bool)

(assert (=> d!21367 (not (contains!744 (+!105 lt!39032 (tuple2!2183 lt!39033 lt!39035)) lt!39034))))

(assert (=> d!21367 true))

(declare-fun _$36!310 () Unit!2413)

(assert (=> d!21367 (= (choose!495 lt!39032 lt!39033 lt!39035 lt!39034) _$36!310)))

(declare-fun bs!3559 () Bool)

(assert (= bs!3559 d!21367))

(assert (=> bs!3559 m!86065))

(assert (=> bs!3559 m!86065))

(assert (=> bs!3559 m!86067))

(assert (=> d!21049 d!21367))

(declare-fun d!21369 () Bool)

(declare-fun e!54827 () Bool)

(assert (=> d!21369 e!54827))

(declare-fun res!43422 () Bool)

(assert (=> d!21369 (=> res!43422 e!54827)))

(declare-fun lt!39651 () Bool)

(assert (=> d!21369 (= res!43422 (not lt!39651))))

(declare-fun lt!39654 () Bool)

(assert (=> d!21369 (= lt!39651 lt!39654)))

(declare-fun lt!39653 () Unit!2413)

(declare-fun e!54826 () Unit!2413)

(assert (=> d!21369 (= lt!39653 e!54826)))

(declare-fun c!13500 () Bool)

(assert (=> d!21369 (= c!13500 lt!39654)))

(assert (=> d!21369 (= lt!39654 (containsKey!143 (toList!734 lt!39032) lt!39034))))

(assert (=> d!21369 (= (contains!744 lt!39032 lt!39034) lt!39651)))

(declare-fun b!84058 () Bool)

(declare-fun lt!39652 () Unit!2413)

(assert (=> b!84058 (= e!54826 lt!39652)))

(assert (=> b!84058 (= lt!39652 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 lt!39032) lt!39034))))

(assert (=> b!84058 (isDefined!92 (getValueByKey!140 (toList!734 lt!39032) lt!39034))))

(declare-fun b!84059 () Bool)

(declare-fun Unit!2460 () Unit!2413)

(assert (=> b!84059 (= e!54826 Unit!2460)))

(declare-fun b!84060 () Bool)

(assert (=> b!84060 (= e!54827 (isDefined!92 (getValueByKey!140 (toList!734 lt!39032) lt!39034)))))

(assert (= (and d!21369 c!13500) b!84058))

(assert (= (and d!21369 (not c!13500)) b!84059))

(assert (= (and d!21369 (not res!43422)) b!84060))

(declare-fun m!87667 () Bool)

(assert (=> d!21369 m!87667))

(declare-fun m!87669 () Bool)

(assert (=> b!84058 m!87669))

(declare-fun m!87671 () Bool)

(assert (=> b!84058 m!87671))

(assert (=> b!84058 m!87671))

(declare-fun m!87673 () Bool)

(assert (=> b!84058 m!87673))

(assert (=> b!84060 m!87671))

(assert (=> b!84060 m!87671))

(assert (=> b!84060 m!87673))

(assert (=> d!21049 d!21369))

(declare-fun d!21371 () Bool)

(declare-fun lt!39655 () Bool)

(assert (=> d!21371 (= lt!39655 (select (content!89 lt!39006) (tuple2!2183 (_1!1102 lt!38779) (_2!1102 lt!38779))))))

(declare-fun e!54828 () Bool)

(assert (=> d!21371 (= lt!39655 e!54828)))

(declare-fun res!43424 () Bool)

(assert (=> d!21371 (=> (not res!43424) (not e!54828))))

(assert (=> d!21371 (= res!43424 ((_ is Cons!1500) lt!39006))))

(assert (=> d!21371 (= (contains!746 lt!39006 (tuple2!2183 (_1!1102 lt!38779) (_2!1102 lt!38779))) lt!39655)))

(declare-fun b!84061 () Bool)

(declare-fun e!54829 () Bool)

(assert (=> b!84061 (= e!54828 e!54829)))

(declare-fun res!43423 () Bool)

(assert (=> b!84061 (=> res!43423 e!54829)))

(assert (=> b!84061 (= res!43423 (= (h!2090 lt!39006) (tuple2!2183 (_1!1102 lt!38779) (_2!1102 lt!38779))))))

(declare-fun b!84062 () Bool)

(assert (=> b!84062 (= e!54829 (contains!746 (t!5196 lt!39006) (tuple2!2183 (_1!1102 lt!38779) (_2!1102 lt!38779))))))

(assert (= (and d!21371 res!43424) b!84061))

(assert (= (and b!84061 (not res!43423)) b!84062))

(declare-fun m!87675 () Bool)

(assert (=> d!21371 m!87675))

(declare-fun m!87677 () Bool)

(assert (=> d!21371 m!87677))

(declare-fun m!87679 () Bool)

(assert (=> b!84062 m!87679))

(assert (=> b!83632 d!21371))

(declare-fun d!21373 () Bool)

(declare-fun c!13503 () Bool)

(assert (=> d!21373 (= c!13503 ((_ is Nil!1501) (toList!734 lt!39053)))))

(declare-fun e!54832 () (InoxSet tuple2!2182))

(assert (=> d!21373 (= (content!89 (toList!734 lt!39053)) e!54832)))

(declare-fun b!84067 () Bool)

(assert (=> b!84067 (= e!54832 ((as const (Array tuple2!2182 Bool)) false))))

(declare-fun b!84068 () Bool)

(assert (=> b!84068 (= e!54832 ((_ map or) (store ((as const (Array tuple2!2182 Bool)) false) (h!2090 (toList!734 lt!39053)) true) (content!89 (t!5196 (toList!734 lt!39053)))))))

(assert (= (and d!21373 c!13503) b!84067))

(assert (= (and d!21373 (not c!13503)) b!84068))

(declare-fun m!87681 () Bool)

(assert (=> b!84068 m!87681))

(declare-fun m!87683 () Bool)

(assert (=> b!84068 m!87683))

(assert (=> d!21003 d!21373))

(declare-fun d!21375 () Bool)

(assert (=> d!21375 (= (validKeyInArray!0 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!83487 d!21375))

(declare-fun e!54834 () Option!146)

(declare-fun b!84071 () Bool)

(assert (=> b!84071 (= e!54834 (getValueByKey!140 (t!5196 (toList!734 lt!39479)) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(declare-fun c!13504 () Bool)

(declare-fun d!21377 () Bool)

(assert (=> d!21377 (= c!13504 (and ((_ is Cons!1500) (toList!734 lt!39479)) (= (_1!1102 (h!2090 (toList!734 lt!39479))) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))

(declare-fun e!54833 () Option!146)

(assert (=> d!21377 (= (getValueByKey!140 (toList!734 lt!39479) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))) e!54833)))

(declare-fun b!84069 () Bool)

(assert (=> b!84069 (= e!54833 (Some!145 (_2!1102 (h!2090 (toList!734 lt!39479)))))))

(declare-fun b!84070 () Bool)

(assert (=> b!84070 (= e!54833 e!54834)))

(declare-fun c!13505 () Bool)

(assert (=> b!84070 (= c!13505 (and ((_ is Cons!1500) (toList!734 lt!39479)) (not (= (_1!1102 (h!2090 (toList!734 lt!39479))) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))))

(declare-fun b!84072 () Bool)

(assert (=> b!84072 (= e!54834 None!144)))

(assert (= (and d!21377 c!13504) b!84069))

(assert (= (and d!21377 (not c!13504)) b!84070))

(assert (= (and b!84070 c!13505) b!84071))

(assert (= (and b!84070 (not c!13505)) b!84072))

(declare-fun m!87685 () Bool)

(assert (=> b!84071 m!87685))

(assert (=> b!83689 d!21377))

(declare-fun d!21379 () Bool)

(assert (=> d!21379 (= (get!1201 (getValueByKey!140 (toList!734 lt!39115) lt!39101)) (v!2638 (getValueByKey!140 (toList!734 lt!39115) lt!39101)))))

(assert (=> d!21089 d!21379))

(declare-fun b!84075 () Bool)

(declare-fun e!54836 () Option!146)

(assert (=> b!84075 (= e!54836 (getValueByKey!140 (t!5196 (toList!734 lt!39115)) lt!39101))))

(declare-fun d!21381 () Bool)

(declare-fun c!13506 () Bool)

(assert (=> d!21381 (= c!13506 (and ((_ is Cons!1500) (toList!734 lt!39115)) (= (_1!1102 (h!2090 (toList!734 lt!39115))) lt!39101)))))

(declare-fun e!54835 () Option!146)

(assert (=> d!21381 (= (getValueByKey!140 (toList!734 lt!39115) lt!39101) e!54835)))

(declare-fun b!84073 () Bool)

(assert (=> b!84073 (= e!54835 (Some!145 (_2!1102 (h!2090 (toList!734 lt!39115)))))))

(declare-fun b!84074 () Bool)

(assert (=> b!84074 (= e!54835 e!54836)))

(declare-fun c!13507 () Bool)

(assert (=> b!84074 (= c!13507 (and ((_ is Cons!1500) (toList!734 lt!39115)) (not (= (_1!1102 (h!2090 (toList!734 lt!39115))) lt!39101))))))

(declare-fun b!84076 () Bool)

(assert (=> b!84076 (= e!54836 None!144)))

(assert (= (and d!21381 c!13506) b!84073))

(assert (= (and d!21381 (not c!13506)) b!84074))

(assert (= (and b!84074 c!13507) b!84075))

(assert (= (and b!84074 (not c!13507)) b!84076))

(declare-fun m!87687 () Bool)

(assert (=> b!84075 m!87687))

(assert (=> d!21089 d!21381))

(declare-fun d!21383 () Bool)

(declare-fun c!13508 () Bool)

(assert (=> d!21383 (= c!13508 ((_ is Nil!1501) (toList!734 lt!39004)))))

(declare-fun e!54837 () (InoxSet tuple2!2182))

(assert (=> d!21383 (= (content!89 (toList!734 lt!39004)) e!54837)))

(declare-fun b!84077 () Bool)

(assert (=> b!84077 (= e!54837 ((as const (Array tuple2!2182 Bool)) false))))

(declare-fun b!84078 () Bool)

(assert (=> b!84078 (= e!54837 ((_ map or) (store ((as const (Array tuple2!2182 Bool)) false) (h!2090 (toList!734 lt!39004)) true) (content!89 (t!5196 (toList!734 lt!39004)))))))

(assert (= (and d!21383 c!13508) b!84077))

(assert (= (and d!21383 (not c!13508)) b!84078))

(declare-fun m!87689 () Bool)

(assert (=> b!84078 m!87689))

(declare-fun m!87691 () Bool)

(assert (=> b!84078 m!87691))

(assert (=> d!21065 d!21383))

(declare-fun b!84081 () Bool)

(declare-fun e!54839 () Option!146)

(assert (=> b!84081 (= e!54839 (getValueByKey!140 (t!5196 (toList!734 lt!39178)) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun d!21385 () Bool)

(declare-fun c!13509 () Bool)

(assert (=> d!21385 (= c!13509 (and ((_ is Cons!1500) (toList!734 lt!39178)) (= (_1!1102 (h!2090 (toList!734 lt!39178))) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(declare-fun e!54838 () Option!146)

(assert (=> d!21385 (= (getValueByKey!140 (toList!734 lt!39178) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))) e!54838)))

(declare-fun b!84079 () Bool)

(assert (=> b!84079 (= e!54838 (Some!145 (_2!1102 (h!2090 (toList!734 lt!39178)))))))

(declare-fun b!84080 () Bool)

(assert (=> b!84080 (= e!54838 e!54839)))

(declare-fun c!13510 () Bool)

(assert (=> b!84080 (= c!13510 (and ((_ is Cons!1500) (toList!734 lt!39178)) (not (= (_1!1102 (h!2090 (toList!734 lt!39178))) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))))

(declare-fun b!84082 () Bool)

(assert (=> b!84082 (= e!54839 None!144)))

(assert (= (and d!21385 c!13509) b!84079))

(assert (= (and d!21385 (not c!13509)) b!84080))

(assert (= (and b!84080 c!13510) b!84081))

(assert (= (and b!84080 (not c!13510)) b!84082))

(declare-fun m!87693 () Bool)

(assert (=> b!84081 m!87693))

(assert (=> b!83323 d!21385))

(declare-fun e!54841 () Option!146)

(declare-fun b!84085 () Bool)

(assert (=> b!84085 (= e!54841 (getValueByKey!140 (t!5196 (toList!734 lt!39322)) (_1!1102 (tuple2!2183 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun c!13511 () Bool)

(declare-fun d!21387 () Bool)

(assert (=> d!21387 (= c!13511 (and ((_ is Cons!1500) (toList!734 lt!39322)) (= (_1!1102 (h!2090 (toList!734 lt!39322))) (_1!1102 (tuple2!2183 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(declare-fun e!54840 () Option!146)

(assert (=> d!21387 (= (getValueByKey!140 (toList!734 lt!39322) (_1!1102 (tuple2!2183 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))) e!54840)))

(declare-fun b!84083 () Bool)

(assert (=> b!84083 (= e!54840 (Some!145 (_2!1102 (h!2090 (toList!734 lt!39322)))))))

(declare-fun b!84084 () Bool)

(assert (=> b!84084 (= e!54840 e!54841)))

(declare-fun c!13512 () Bool)

(assert (=> b!84084 (= c!13512 (and ((_ is Cons!1500) (toList!734 lt!39322)) (not (= (_1!1102 (h!2090 (toList!734 lt!39322))) (_1!1102 (tuple2!2183 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))))

(declare-fun b!84086 () Bool)

(assert (=> b!84086 (= e!54841 None!144)))

(assert (= (and d!21387 c!13511) b!84083))

(assert (= (and d!21387 (not c!13511)) b!84084))

(assert (= (and b!84084 c!13512) b!84085))

(assert (= (and b!84084 (not c!13512)) b!84086))

(declare-fun m!87695 () Bool)

(assert (=> b!84085 m!87695))

(assert (=> b!83531 d!21387))

(declare-fun d!21389 () Bool)

(declare-fun e!54843 () Bool)

(assert (=> d!21389 e!54843))

(declare-fun res!43425 () Bool)

(assert (=> d!21389 (=> res!43425 e!54843)))

(declare-fun lt!39656 () Bool)

(assert (=> d!21389 (= res!43425 (not lt!39656))))

(declare-fun lt!39659 () Bool)

(assert (=> d!21389 (= lt!39656 lt!39659)))

(declare-fun lt!39658 () Unit!2413)

(declare-fun e!54842 () Unit!2413)

(assert (=> d!21389 (= lt!39658 e!54842)))

(declare-fun c!13513 () Bool)

(assert (=> d!21389 (= c!13513 lt!39659)))

(assert (=> d!21389 (= lt!39659 (containsKey!143 (toList!734 lt!39479) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(assert (=> d!21389 (= (contains!744 lt!39479 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))) lt!39656)))

(declare-fun b!84087 () Bool)

(declare-fun lt!39657 () Unit!2413)

(assert (=> b!84087 (= e!54842 lt!39657)))

(assert (=> b!84087 (= lt!39657 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 lt!39479) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(assert (=> b!84087 (isDefined!92 (getValueByKey!140 (toList!734 lt!39479) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(declare-fun b!84088 () Bool)

(declare-fun Unit!2461 () Unit!2413)

(assert (=> b!84088 (= e!54842 Unit!2461)))

(declare-fun b!84089 () Bool)

(assert (=> b!84089 (= e!54843 (isDefined!92 (getValueByKey!140 (toList!734 lt!39479) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))

(assert (= (and d!21389 c!13513) b!84087))

(assert (= (and d!21389 (not c!13513)) b!84088))

(assert (= (and d!21389 (not res!43425)) b!84089))

(declare-fun m!87697 () Bool)

(assert (=> d!21389 m!87697))

(declare-fun m!87699 () Bool)

(assert (=> b!84087 m!87699))

(assert (=> b!84087 m!87049))

(assert (=> b!84087 m!87049))

(declare-fun m!87701 () Bool)

(assert (=> b!84087 m!87701))

(assert (=> b!84089 m!87049))

(assert (=> b!84089 m!87049))

(assert (=> b!84089 m!87701))

(assert (=> d!21163 d!21389))

(declare-fun e!54845 () Option!146)

(declare-fun b!84092 () Bool)

(assert (=> b!84092 (= e!54845 (getValueByKey!140 (t!5196 lt!39481) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(declare-fun d!21391 () Bool)

(declare-fun c!13514 () Bool)

(assert (=> d!21391 (= c!13514 (and ((_ is Cons!1500) lt!39481) (= (_1!1102 (h!2090 lt!39481)) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))

(declare-fun e!54844 () Option!146)

(assert (=> d!21391 (= (getValueByKey!140 lt!39481 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))) e!54844)))

(declare-fun b!84090 () Bool)

(assert (=> b!84090 (= e!54844 (Some!145 (_2!1102 (h!2090 lt!39481))))))

(declare-fun b!84091 () Bool)

(assert (=> b!84091 (= e!54844 e!54845)))

(declare-fun c!13515 () Bool)

(assert (=> b!84091 (= c!13515 (and ((_ is Cons!1500) lt!39481) (not (= (_1!1102 (h!2090 lt!39481)) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))))

(declare-fun b!84093 () Bool)

(assert (=> b!84093 (= e!54845 None!144)))

(assert (= (and d!21391 c!13514) b!84090))

(assert (= (and d!21391 (not c!13514)) b!84091))

(assert (= (and b!84091 c!13515) b!84092))

(assert (= (and b!84091 (not c!13515)) b!84093))

(declare-fun m!87703 () Bool)

(assert (=> b!84092 m!87703))

(assert (=> d!21163 d!21391))

(declare-fun d!21393 () Bool)

(assert (=> d!21393 (= (getValueByKey!140 lt!39481 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))) (Some!145 (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(declare-fun lt!39660 () Unit!2413)

(assert (=> d!21393 (= lt!39660 (choose!493 lt!39481 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(declare-fun e!54846 () Bool)

(assert (=> d!21393 e!54846))

(declare-fun res!43426 () Bool)

(assert (=> d!21393 (=> (not res!43426) (not e!54846))))

(assert (=> d!21393 (= res!43426 (isStrictlySorted!284 lt!39481))))

(assert (=> d!21393 (= (lemmaContainsTupThenGetReturnValue!57 lt!39481 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))) lt!39660)))

(declare-fun b!84094 () Bool)

(declare-fun res!43427 () Bool)

(assert (=> b!84094 (=> (not res!43427) (not e!54846))))

(assert (=> b!84094 (= res!43427 (containsKey!143 lt!39481 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(declare-fun b!84095 () Bool)

(assert (=> b!84095 (= e!54846 (contains!746 lt!39481 (tuple2!2183 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))

(assert (= (and d!21393 res!43426) b!84094))

(assert (= (and b!84094 res!43427) b!84095))

(assert (=> d!21393 m!87043))

(declare-fun m!87705 () Bool)

(assert (=> d!21393 m!87705))

(declare-fun m!87707 () Bool)

(assert (=> d!21393 m!87707))

(declare-fun m!87709 () Bool)

(assert (=> b!84094 m!87709))

(declare-fun m!87711 () Bool)

(assert (=> b!84095 m!87711))

(assert (=> d!21163 d!21393))

(declare-fun b!84097 () Bool)

(declare-fun c!13519 () Bool)

(declare-fun e!54847 () List!1504)

(declare-fun c!13516 () Bool)

(assert (=> b!84097 (= e!54847 (ite c!13519 (t!5196 (toList!734 lt!38773)) (ite c!13516 (Cons!1500 (h!2090 (toList!734 lt!38773)) (t!5196 (toList!734 lt!38773))) Nil!1501)))))

(declare-fun bm!7914 () Bool)

(declare-fun call!7917 () List!1504)

(declare-fun c!13517 () Bool)

(assert (=> bm!7914 (= call!7917 ($colon$colon!70 e!54847 (ite c!13517 (h!2090 (toList!734 lt!38773)) (tuple2!2183 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))))

(declare-fun c!13518 () Bool)

(assert (=> bm!7914 (= c!13518 c!13517)))

(declare-fun b!84098 () Bool)

(declare-fun e!54851 () List!1504)

(declare-fun call!7919 () List!1504)

(assert (=> b!84098 (= e!54851 call!7919)))

(declare-fun b!84099 () Bool)

(declare-fun e!54849 () List!1504)

(assert (=> b!84099 (= e!54849 call!7917)))

(declare-fun bm!7915 () Bool)

(assert (=> bm!7915 (= call!7919 call!7917)))

(declare-fun bm!7916 () Bool)

(declare-fun call!7918 () List!1504)

(assert (=> bm!7916 (= call!7918 call!7919)))

(declare-fun b!84100 () Bool)

(assert (=> b!84100 (= e!54847 (insertStrictlySorted!60 (t!5196 (toList!734 lt!38773)) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(declare-fun b!84101 () Bool)

(declare-fun e!54850 () List!1504)

(assert (=> b!84101 (= e!54850 call!7918)))

(declare-fun b!84102 () Bool)

(assert (=> b!84102 (= e!54849 e!54851)))

(assert (=> b!84102 (= c!13519 (and ((_ is Cons!1500) (toList!734 lt!38773)) (= (_1!1102 (h!2090 (toList!734 lt!38773))) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))

(declare-fun lt!39661 () List!1504)

(declare-fun b!84103 () Bool)

(declare-fun e!54848 () Bool)

(assert (=> b!84103 (= e!54848 (contains!746 lt!39661 (tuple2!2183 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))

(declare-fun b!84096 () Bool)

(declare-fun res!43429 () Bool)

(assert (=> b!84096 (=> (not res!43429) (not e!54848))))

(assert (=> b!84096 (= res!43429 (containsKey!143 lt!39661 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(declare-fun d!21395 () Bool)

(assert (=> d!21395 e!54848))

(declare-fun res!43428 () Bool)

(assert (=> d!21395 (=> (not res!43428) (not e!54848))))

(assert (=> d!21395 (= res!43428 (isStrictlySorted!284 lt!39661))))

(assert (=> d!21395 (= lt!39661 e!54849)))

(assert (=> d!21395 (= c!13517 (and ((_ is Cons!1500) (toList!734 lt!38773)) (bvslt (_1!1102 (h!2090 (toList!734 lt!38773))) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))

(assert (=> d!21395 (isStrictlySorted!284 (toList!734 lt!38773))))

(assert (=> d!21395 (= (insertStrictlySorted!60 (toList!734 lt!38773) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))) lt!39661)))

(declare-fun b!84104 () Bool)

(assert (=> b!84104 (= e!54850 call!7918)))

(declare-fun b!84105 () Bool)

(assert (=> b!84105 (= c!13516 (and ((_ is Cons!1500) (toList!734 lt!38773)) (bvsgt (_1!1102 (h!2090 (toList!734 lt!38773))) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))

(assert (=> b!84105 (= e!54851 e!54850)))

(assert (= (and d!21395 c!13517) b!84099))

(assert (= (and d!21395 (not c!13517)) b!84102))

(assert (= (and b!84102 c!13519) b!84098))

(assert (= (and b!84102 (not c!13519)) b!84105))

(assert (= (and b!84105 c!13516) b!84101))

(assert (= (and b!84105 (not c!13516)) b!84104))

(assert (= (or b!84101 b!84104) bm!7916))

(assert (= (or b!84098 bm!7916) bm!7915))

(assert (= (or b!84099 bm!7915) bm!7914))

(assert (= (and bm!7914 c!13518) b!84100))

(assert (= (and bm!7914 (not c!13518)) b!84097))

(assert (= (and d!21395 res!43428) b!84096))

(assert (= (and b!84096 res!43429) b!84103))

(declare-fun m!87713 () Bool)

(assert (=> d!21395 m!87713))

(assert (=> d!21395 m!86993))

(declare-fun m!87715 () Bool)

(assert (=> b!84100 m!87715))

(declare-fun m!87717 () Bool)

(assert (=> bm!7914 m!87717))

(declare-fun m!87719 () Bool)

(assert (=> b!84096 m!87719))

(declare-fun m!87721 () Bool)

(assert (=> b!84103 m!87721))

(assert (=> d!21163 d!21395))

(declare-fun d!21397 () Bool)

(declare-fun res!43430 () Bool)

(declare-fun e!54852 () Bool)

(assert (=> d!21397 (=> res!43430 e!54852)))

(assert (=> d!21397 (= res!43430 (and ((_ is Cons!1500) (toList!734 lt!39044)) (= (_1!1102 (h!2090 (toList!734 lt!39044))) (_1!1102 lt!38775))))))

(assert (=> d!21397 (= (containsKey!143 (toList!734 lt!39044) (_1!1102 lt!38775)) e!54852)))

(declare-fun b!84106 () Bool)

(declare-fun e!54853 () Bool)

(assert (=> b!84106 (= e!54852 e!54853)))

(declare-fun res!43431 () Bool)

(assert (=> b!84106 (=> (not res!43431) (not e!54853))))

(assert (=> b!84106 (= res!43431 (and (or (not ((_ is Cons!1500) (toList!734 lt!39044))) (bvsle (_1!1102 (h!2090 (toList!734 lt!39044))) (_1!1102 lt!38775))) ((_ is Cons!1500) (toList!734 lt!39044)) (bvslt (_1!1102 (h!2090 (toList!734 lt!39044))) (_1!1102 lt!38775))))))

(declare-fun b!84107 () Bool)

(assert (=> b!84107 (= e!54853 (containsKey!143 (t!5196 (toList!734 lt!39044)) (_1!1102 lt!38775)))))

(assert (= (and d!21397 (not res!43430)) b!84106))

(assert (= (and b!84106 res!43431) b!84107))

(declare-fun m!87723 () Bool)

(assert (=> b!84107 m!87723))

(assert (=> d!21177 d!21397))

(declare-fun d!21399 () Bool)

(assert (=> d!21399 (= (isDefined!92 (getValueByKey!140 (toList!734 lt!39036) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!340 (getValueByKey!140 (toList!734 lt!39036) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!3560 () Bool)

(assert (= bs!3560 d!21399))

(assert (=> bs!3560 m!86605))

(declare-fun m!87725 () Bool)

(assert (=> bs!3560 m!87725))

(assert (=> b!83481 d!21399))

(declare-fun b!84110 () Bool)

(declare-fun e!54855 () Option!146)

(assert (=> b!84110 (= e!54855 (getValueByKey!140 (t!5196 (toList!734 lt!39036)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun d!21401 () Bool)

(declare-fun c!13520 () Bool)

(assert (=> d!21401 (= c!13520 (and ((_ is Cons!1500) (toList!734 lt!39036)) (= (_1!1102 (h!2090 (toList!734 lt!39036))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun e!54854 () Option!146)

(assert (=> d!21401 (= (getValueByKey!140 (toList!734 lt!39036) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!54854)))

(declare-fun b!84108 () Bool)

(assert (=> b!84108 (= e!54854 (Some!145 (_2!1102 (h!2090 (toList!734 lt!39036)))))))

(declare-fun b!84109 () Bool)

(assert (=> b!84109 (= e!54854 e!54855)))

(declare-fun c!13521 () Bool)

(assert (=> b!84109 (= c!13521 (and ((_ is Cons!1500) (toList!734 lt!39036)) (not (= (_1!1102 (h!2090 (toList!734 lt!39036))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!84111 () Bool)

(assert (=> b!84111 (= e!54855 None!144)))

(assert (= (and d!21401 c!13520) b!84108))

(assert (= (and d!21401 (not c!13520)) b!84109))

(assert (= (and b!84109 c!13521) b!84110))

(assert (= (and b!84109 (not c!13521)) b!84111))

(assert (=> b!84110 m!85989))

(declare-fun m!87727 () Bool)

(assert (=> b!84110 m!87727))

(assert (=> b!83481 d!21401))

(declare-fun b!84114 () Bool)

(declare-fun e!54857 () Option!146)

(assert (=> b!84114 (= e!54857 (getValueByKey!140 (t!5196 (toList!734 lt!39471)) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun d!21403 () Bool)

(declare-fun c!13522 () Bool)

(assert (=> d!21403 (= c!13522 (and ((_ is Cons!1500) (toList!734 lt!39471)) (= (_1!1102 (h!2090 (toList!734 lt!39471))) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(declare-fun e!54856 () Option!146)

(assert (=> d!21403 (= (getValueByKey!140 (toList!734 lt!39471) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))) e!54856)))

(declare-fun b!84112 () Bool)

(assert (=> b!84112 (= e!54856 (Some!145 (_2!1102 (h!2090 (toList!734 lt!39471)))))))

(declare-fun b!84113 () Bool)

(assert (=> b!84113 (= e!54856 e!54857)))

(declare-fun c!13523 () Bool)

(assert (=> b!84113 (= c!13523 (and ((_ is Cons!1500) (toList!734 lt!39471)) (not (= (_1!1102 (h!2090 (toList!734 lt!39471))) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))))

(declare-fun b!84115 () Bool)

(assert (=> b!84115 (= e!54857 None!144)))

(assert (= (and d!21403 c!13522) b!84112))

(assert (= (and d!21403 (not c!13522)) b!84113))

(assert (= (and b!84113 c!13523) b!84114))

(assert (= (and b!84113 (not c!13523)) b!84115))

(declare-fun m!87729 () Bool)

(assert (=> b!84114 m!87729))

(assert (=> b!83685 d!21403))

(declare-fun d!21405 () Bool)

(declare-fun res!43432 () Bool)

(declare-fun e!54858 () Bool)

(assert (=> d!21405 (=> res!43432 e!54858)))

(assert (=> d!21405 (= res!43432 (and ((_ is Cons!1500) lt!39042) (= (_1!1102 (h!2090 lt!39042)) (_1!1102 lt!38779))))))

(assert (=> d!21405 (= (containsKey!143 lt!39042 (_1!1102 lt!38779)) e!54858)))

(declare-fun b!84116 () Bool)

(declare-fun e!54859 () Bool)

(assert (=> b!84116 (= e!54858 e!54859)))

(declare-fun res!43433 () Bool)

(assert (=> b!84116 (=> (not res!43433) (not e!54859))))

(assert (=> b!84116 (= res!43433 (and (or (not ((_ is Cons!1500) lt!39042)) (bvsle (_1!1102 (h!2090 lt!39042)) (_1!1102 lt!38779))) ((_ is Cons!1500) lt!39042) (bvslt (_1!1102 (h!2090 lt!39042)) (_1!1102 lt!38779))))))

(declare-fun b!84117 () Bool)

(assert (=> b!84117 (= e!54859 (containsKey!143 (t!5196 lt!39042) (_1!1102 lt!38779)))))

(assert (= (and d!21405 (not res!43432)) b!84116))

(assert (= (and b!84116 res!43433) b!84117))

(declare-fun m!87731 () Bool)

(assert (=> b!84117 m!87731))

(assert (=> b!83767 d!21405))

(declare-fun d!21407 () Bool)

(declare-fun e!54861 () Bool)

(assert (=> d!21407 e!54861))

(declare-fun res!43434 () Bool)

(assert (=> d!21407 (=> res!43434 e!54861)))

(declare-fun lt!39662 () Bool)

(assert (=> d!21407 (= res!43434 (not lt!39662))))

(declare-fun lt!39665 () Bool)

(assert (=> d!21407 (= lt!39662 lt!39665)))

(declare-fun lt!39664 () Unit!2413)

(declare-fun e!54860 () Unit!2413)

(assert (=> d!21407 (= lt!39664 e!54860)))

(declare-fun c!13524 () Bool)

(assert (=> d!21407 (= c!13524 lt!39665)))

(assert (=> d!21407 (= lt!39665 (containsKey!143 (toList!734 lt!39241) (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!21407 (= (contains!744 lt!39241 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)) lt!39662)))

(declare-fun b!84118 () Bool)

(declare-fun lt!39663 () Unit!2413)

(assert (=> b!84118 (= e!54860 lt!39663)))

(assert (=> b!84118 (= lt!39663 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 lt!39241) (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!84118 (isDefined!92 (getValueByKey!140 (toList!734 lt!39241) (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!84119 () Bool)

(declare-fun Unit!2462 () Unit!2413)

(assert (=> b!84119 (= e!54860 Unit!2462)))

(declare-fun b!84120 () Bool)

(assert (=> b!84120 (= e!54861 (isDefined!92 (getValueByKey!140 (toList!734 lt!39241) (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!21407 c!13524) b!84118))

(assert (= (and d!21407 (not c!13524)) b!84119))

(assert (= (and d!21407 (not res!43434)) b!84120))

(assert (=> d!21407 m!86211))

(declare-fun m!87733 () Bool)

(assert (=> d!21407 m!87733))

(assert (=> b!84118 m!86211))

(declare-fun m!87735 () Bool)

(assert (=> b!84118 m!87735))

(assert (=> b!84118 m!86211))

(declare-fun m!87737 () Bool)

(assert (=> b!84118 m!87737))

(assert (=> b!84118 m!87737))

(declare-fun m!87739 () Bool)

(assert (=> b!84118 m!87739))

(assert (=> b!84120 m!86211))

(assert (=> b!84120 m!87737))

(assert (=> b!84120 m!87737))

(assert (=> b!84120 m!87739))

(assert (=> b!83451 d!21407))

(declare-fun d!21409 () Bool)

(assert (=> d!21409 (= (apply!81 (+!105 lt!39115 (tuple2!2183 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) lt!39101) (apply!81 lt!39115 lt!39101))))

(assert (=> d!21409 true))

(declare-fun _$34!831 () Unit!2413)

(assert (=> d!21409 (= (choose!498 lt!39115 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992))) lt!39101) _$34!831)))

(declare-fun bs!3561 () Bool)

(assert (= bs!3561 d!21409))

(assert (=> bs!3561 m!86143))

(assert (=> bs!3561 m!86143))

(assert (=> bs!3561 m!86149))

(assert (=> bs!3561 m!86163))

(assert (=> d!21103 d!21409))

(declare-fun d!21411 () Bool)

(declare-fun e!54863 () Bool)

(assert (=> d!21411 e!54863))

(declare-fun res!43435 () Bool)

(assert (=> d!21411 (=> res!43435 e!54863)))

(declare-fun lt!39666 () Bool)

(assert (=> d!21411 (= res!43435 (not lt!39666))))

(declare-fun lt!39669 () Bool)

(assert (=> d!21411 (= lt!39666 lt!39669)))

(declare-fun lt!39668 () Unit!2413)

(declare-fun e!54862 () Unit!2413)

(assert (=> d!21411 (= lt!39668 e!54862)))

(declare-fun c!13525 () Bool)

(assert (=> d!21411 (= c!13525 lt!39669)))

(assert (=> d!21411 (= lt!39669 (containsKey!143 (toList!734 lt!39115) lt!39101))))

(assert (=> d!21411 (= (contains!744 lt!39115 lt!39101) lt!39666)))

(declare-fun b!84122 () Bool)

(declare-fun lt!39667 () Unit!2413)

(assert (=> b!84122 (= e!54862 lt!39667)))

(assert (=> b!84122 (= lt!39667 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 lt!39115) lt!39101))))

(assert (=> b!84122 (isDefined!92 (getValueByKey!140 (toList!734 lt!39115) lt!39101))))

(declare-fun b!84123 () Bool)

(declare-fun Unit!2463 () Unit!2413)

(assert (=> b!84123 (= e!54862 Unit!2463)))

(declare-fun b!84124 () Bool)

(assert (=> b!84124 (= e!54863 (isDefined!92 (getValueByKey!140 (toList!734 lt!39115) lt!39101)))))

(assert (= (and d!21411 c!13525) b!84122))

(assert (= (and d!21411 (not c!13525)) b!84123))

(assert (= (and d!21411 (not res!43435)) b!84124))

(declare-fun m!87741 () Bool)

(assert (=> d!21411 m!87741))

(declare-fun m!87743 () Bool)

(assert (=> b!84122 m!87743))

(assert (=> b!84122 m!86733))

(assert (=> b!84122 m!86733))

(declare-fun m!87745 () Bool)

(assert (=> b!84122 m!87745))

(assert (=> b!84124 m!86733))

(assert (=> b!84124 m!86733))

(assert (=> b!84124 m!87745))

(assert (=> d!21103 d!21411))

(assert (=> d!21103 d!21089))

(assert (=> d!21103 d!21109))

(assert (=> d!21103 d!21097))

(assert (=> b!83759 d!21031))

(declare-fun d!21413 () Bool)

(declare-fun lt!39670 () Bool)

(assert (=> d!21413 (= lt!39670 (select (content!89 lt!39014) (tuple2!2183 (_1!1102 lt!38772) (_2!1102 lt!38772))))))

(declare-fun e!54864 () Bool)

(assert (=> d!21413 (= lt!39670 e!54864)))

(declare-fun res!43437 () Bool)

(assert (=> d!21413 (=> (not res!43437) (not e!54864))))

(assert (=> d!21413 (= res!43437 ((_ is Cons!1500) lt!39014))))

(assert (=> d!21413 (= (contains!746 lt!39014 (tuple2!2183 (_1!1102 lt!38772) (_2!1102 lt!38772))) lt!39670)))

(declare-fun b!84125 () Bool)

(declare-fun e!54865 () Bool)

(assert (=> b!84125 (= e!54864 e!54865)))

(declare-fun res!43436 () Bool)

(assert (=> b!84125 (=> res!43436 e!54865)))

(assert (=> b!84125 (= res!43436 (= (h!2090 lt!39014) (tuple2!2183 (_1!1102 lt!38772) (_2!1102 lt!38772))))))

(declare-fun b!84126 () Bool)

(assert (=> b!84126 (= e!54865 (contains!746 (t!5196 lt!39014) (tuple2!2183 (_1!1102 lt!38772) (_2!1102 lt!38772))))))

(assert (= (and d!21413 res!43437) b!84125))

(assert (= (and b!84125 (not res!43436)) b!84126))

(declare-fun m!87747 () Bool)

(assert (=> d!21413 m!87747))

(declare-fun m!87749 () Bool)

(assert (=> d!21413 m!87749))

(declare-fun m!87751 () Bool)

(assert (=> b!84126 m!87751))

(assert (=> b!83343 d!21413))

(assert (=> d!20965 d!21013))

(declare-fun d!21415 () Bool)

(declare-fun e!54868 () Bool)

(assert (=> d!21415 e!54868))

(declare-fun res!43443 () Bool)

(assert (=> d!21415 (=> (not res!43443) (not e!54868))))

(declare-fun lt!39673 () SeekEntryResult!236)

(assert (=> d!21415 (= res!43443 ((_ is Found!236) lt!39673))))

(assert (=> d!21415 (= lt!39673 (seekEntryOrOpen!0 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (_keys!3984 newMap!16) (mask!6334 newMap!16)))))

(assert (=> d!21415 true))

(declare-fun _$33!69 () Unit!2413)

(assert (=> d!21415 (= (choose!492 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (defaultEntry!2316 newMap!16)) _$33!69)))

(declare-fun b!84131 () Bool)

(declare-fun res!43442 () Bool)

(assert (=> b!84131 (=> (not res!43442) (not e!54868))))

(assert (=> b!84131 (= res!43442 (inRange!0 (index!3081 lt!39673) (mask!6334 newMap!16)))))

(declare-fun b!84132 () Bool)

(assert (=> b!84132 (= e!54868 (= (select (arr!1904 (_keys!3984 newMap!16)) (index!3081 lt!39673)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))

(assert (= (and d!21415 res!43443) b!84131))

(assert (= (and b!84131 res!43442) b!84132))

(assert (=> d!21415 m!85721))

(assert (=> d!21415 m!85939))

(declare-fun m!87753 () Bool)

(assert (=> b!84131 m!87753))

(declare-fun m!87755 () Bool)

(assert (=> b!84132 m!87755))

(assert (=> d!20965 d!21415))

(assert (=> d!20965 d!21267))

(declare-fun d!21417 () Bool)

(declare-fun res!43444 () Bool)

(declare-fun e!54869 () Bool)

(assert (=> d!21417 (=> res!43444 e!54869)))

(assert (=> d!21417 (= res!43444 (and ((_ is Cons!1500) (toList!734 lt!39113)) (= (_1!1102 (h!2090 (toList!734 lt!39113))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!21417 (= (containsKey!143 (toList!734 lt!39113) #b1000000000000000000000000000000000000000000000000000000000000000) e!54869)))

(declare-fun b!84133 () Bool)

(declare-fun e!54870 () Bool)

(assert (=> b!84133 (= e!54869 e!54870)))

(declare-fun res!43445 () Bool)

(assert (=> b!84133 (=> (not res!43445) (not e!54870))))

(assert (=> b!84133 (= res!43445 (and (or (not ((_ is Cons!1500) (toList!734 lt!39113))) (bvsle (_1!1102 (h!2090 (toList!734 lt!39113))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1500) (toList!734 lt!39113)) (bvslt (_1!1102 (h!2090 (toList!734 lt!39113))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!84134 () Bool)

(assert (=> b!84134 (= e!54870 (containsKey!143 (t!5196 (toList!734 lt!39113)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!21417 (not res!43444)) b!84133))

(assert (= (and b!84133 res!43445) b!84134))

(declare-fun m!87757 () Bool)

(assert (=> b!84134 m!87757))

(assert (=> d!20955 d!21417))

(declare-fun d!21419 () Bool)

(declare-fun res!43446 () Bool)

(declare-fun e!54871 () Bool)

(assert (=> d!21419 (=> res!43446 e!54871)))

(assert (=> d!21419 (= res!43446 (and ((_ is Cons!1500) (toList!734 call!7756)) (= (_1!1102 (h!2090 (toList!734 call!7756))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355))))))

(assert (=> d!21419 (= (containsKey!143 (toList!734 call!7756) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) e!54871)))

(declare-fun b!84135 () Bool)

(declare-fun e!54872 () Bool)

(assert (=> b!84135 (= e!54871 e!54872)))

(declare-fun res!43447 () Bool)

(assert (=> b!84135 (=> (not res!43447) (not e!54872))))

(assert (=> b!84135 (= res!43447 (and (or (not ((_ is Cons!1500) (toList!734 call!7756))) (bvsle (_1!1102 (h!2090 (toList!734 call!7756))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355))) ((_ is Cons!1500) (toList!734 call!7756)) (bvslt (_1!1102 (h!2090 (toList!734 call!7756))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355))))))

(declare-fun b!84136 () Bool)

(assert (=> b!84136 (= e!54872 (containsKey!143 (t!5196 (toList!734 call!7756)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))

(assert (= (and d!21419 (not res!43446)) b!84135))

(assert (= (and b!84135 res!43447) b!84136))

(assert (=> b!84136 m!85721))

(declare-fun m!87759 () Bool)

(assert (=> b!84136 m!87759))

(assert (=> d!21039 d!21419))

(declare-fun d!21421 () Bool)

(declare-fun e!54874 () Bool)

(assert (=> d!21421 e!54874))

(declare-fun res!43448 () Bool)

(assert (=> d!21421 (=> res!43448 e!54874)))

(declare-fun lt!39674 () Bool)

(assert (=> d!21421 (= res!43448 (not lt!39674))))

(declare-fun lt!39677 () Bool)

(assert (=> d!21421 (= lt!39674 lt!39677)))

(declare-fun lt!39676 () Unit!2413)

(declare-fun e!54873 () Unit!2413)

(assert (=> d!21421 (= lt!39676 e!54873)))

(declare-fun c!13526 () Bool)

(assert (=> d!21421 (= c!13526 lt!39677)))

(assert (=> d!21421 (= lt!39677 (containsKey!143 (toList!734 lt!39262) (_1!1102 (tuple2!2183 lt!39033 lt!39035))))))

(assert (=> d!21421 (= (contains!744 lt!39262 (_1!1102 (tuple2!2183 lt!39033 lt!39035))) lt!39674)))

(declare-fun b!84137 () Bool)

(declare-fun lt!39675 () Unit!2413)

(assert (=> b!84137 (= e!54873 lt!39675)))

(assert (=> b!84137 (= lt!39675 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 lt!39262) (_1!1102 (tuple2!2183 lt!39033 lt!39035))))))

(assert (=> b!84137 (isDefined!92 (getValueByKey!140 (toList!734 lt!39262) (_1!1102 (tuple2!2183 lt!39033 lt!39035))))))

(declare-fun b!84138 () Bool)

(declare-fun Unit!2464 () Unit!2413)

(assert (=> b!84138 (= e!54873 Unit!2464)))

(declare-fun b!84139 () Bool)

(assert (=> b!84139 (= e!54874 (isDefined!92 (getValueByKey!140 (toList!734 lt!39262) (_1!1102 (tuple2!2183 lt!39033 lt!39035)))))))

(assert (= (and d!21421 c!13526) b!84137))

(assert (= (and d!21421 (not c!13526)) b!84138))

(assert (= (and d!21421 (not res!43448)) b!84139))

(declare-fun m!87761 () Bool)

(assert (=> d!21421 m!87761))

(declare-fun m!87763 () Bool)

(assert (=> b!84137 m!87763))

(assert (=> b!84137 m!86577))

(assert (=> b!84137 m!86577))

(declare-fun m!87765 () Bool)

(assert (=> b!84137 m!87765))

(assert (=> b!84139 m!86577))

(assert (=> b!84139 m!86577))

(assert (=> b!84139 m!87765))

(assert (=> d!21043 d!21421))

(declare-fun e!54876 () Option!146)

(declare-fun b!84142 () Bool)

(assert (=> b!84142 (= e!54876 (getValueByKey!140 (t!5196 lt!39264) (_1!1102 (tuple2!2183 lt!39033 lt!39035))))))

(declare-fun c!13527 () Bool)

(declare-fun d!21423 () Bool)

(assert (=> d!21423 (= c!13527 (and ((_ is Cons!1500) lt!39264) (= (_1!1102 (h!2090 lt!39264)) (_1!1102 (tuple2!2183 lt!39033 lt!39035)))))))

(declare-fun e!54875 () Option!146)

(assert (=> d!21423 (= (getValueByKey!140 lt!39264 (_1!1102 (tuple2!2183 lt!39033 lt!39035))) e!54875)))

(declare-fun b!84140 () Bool)

(assert (=> b!84140 (= e!54875 (Some!145 (_2!1102 (h!2090 lt!39264))))))

(declare-fun b!84141 () Bool)

(assert (=> b!84141 (= e!54875 e!54876)))

(declare-fun c!13528 () Bool)

(assert (=> b!84141 (= c!13528 (and ((_ is Cons!1500) lt!39264) (not (= (_1!1102 (h!2090 lt!39264)) (_1!1102 (tuple2!2183 lt!39033 lt!39035))))))))

(declare-fun b!84143 () Bool)

(assert (=> b!84143 (= e!54876 None!144)))

(assert (= (and d!21423 c!13527) b!84140))

(assert (= (and d!21423 (not c!13527)) b!84141))

(assert (= (and b!84141 c!13528) b!84142))

(assert (= (and b!84141 (not c!13528)) b!84143))

(declare-fun m!87767 () Bool)

(assert (=> b!84142 m!87767))

(assert (=> d!21043 d!21423))

(declare-fun d!21425 () Bool)

(assert (=> d!21425 (= (getValueByKey!140 lt!39264 (_1!1102 (tuple2!2183 lt!39033 lt!39035))) (Some!145 (_2!1102 (tuple2!2183 lt!39033 lt!39035))))))

(declare-fun lt!39678 () Unit!2413)

(assert (=> d!21425 (= lt!39678 (choose!493 lt!39264 (_1!1102 (tuple2!2183 lt!39033 lt!39035)) (_2!1102 (tuple2!2183 lt!39033 lt!39035))))))

(declare-fun e!54877 () Bool)

(assert (=> d!21425 e!54877))

(declare-fun res!43449 () Bool)

(assert (=> d!21425 (=> (not res!43449) (not e!54877))))

(assert (=> d!21425 (= res!43449 (isStrictlySorted!284 lt!39264))))

(assert (=> d!21425 (= (lemmaContainsTupThenGetReturnValue!57 lt!39264 (_1!1102 (tuple2!2183 lt!39033 lt!39035)) (_2!1102 (tuple2!2183 lt!39033 lt!39035))) lt!39678)))

(declare-fun b!84144 () Bool)

(declare-fun res!43450 () Bool)

(assert (=> b!84144 (=> (not res!43450) (not e!54877))))

(assert (=> b!84144 (= res!43450 (containsKey!143 lt!39264 (_1!1102 (tuple2!2183 lt!39033 lt!39035))))))

(declare-fun b!84145 () Bool)

(assert (=> b!84145 (= e!54877 (contains!746 lt!39264 (tuple2!2183 (_1!1102 (tuple2!2183 lt!39033 lt!39035)) (_2!1102 (tuple2!2183 lt!39033 lt!39035)))))))

(assert (= (and d!21425 res!43449) b!84144))

(assert (= (and b!84144 res!43450) b!84145))

(assert (=> d!21425 m!86571))

(declare-fun m!87769 () Bool)

(assert (=> d!21425 m!87769))

(declare-fun m!87771 () Bool)

(assert (=> d!21425 m!87771))

(declare-fun m!87773 () Bool)

(assert (=> b!84144 m!87773))

(declare-fun m!87775 () Bool)

(assert (=> b!84145 m!87775))

(assert (=> d!21043 d!21425))

(declare-fun c!13532 () Bool)

(declare-fun b!84147 () Bool)

(declare-fun e!54878 () List!1504)

(declare-fun c!13529 () Bool)

(assert (=> b!84147 (= e!54878 (ite c!13532 (t!5196 (toList!734 lt!39032)) (ite c!13529 (Cons!1500 (h!2090 (toList!734 lt!39032)) (t!5196 (toList!734 lt!39032))) Nil!1501)))))

(declare-fun bm!7917 () Bool)

(declare-fun c!13530 () Bool)

(declare-fun call!7920 () List!1504)

(assert (=> bm!7917 (= call!7920 ($colon$colon!70 e!54878 (ite c!13530 (h!2090 (toList!734 lt!39032)) (tuple2!2183 (_1!1102 (tuple2!2183 lt!39033 lt!39035)) (_2!1102 (tuple2!2183 lt!39033 lt!39035))))))))

(declare-fun c!13531 () Bool)

(assert (=> bm!7917 (= c!13531 c!13530)))

(declare-fun b!84148 () Bool)

(declare-fun e!54882 () List!1504)

(declare-fun call!7922 () List!1504)

(assert (=> b!84148 (= e!54882 call!7922)))

(declare-fun b!84149 () Bool)

(declare-fun e!54880 () List!1504)

(assert (=> b!84149 (= e!54880 call!7920)))

(declare-fun bm!7918 () Bool)

(assert (=> bm!7918 (= call!7922 call!7920)))

(declare-fun bm!7919 () Bool)

(declare-fun call!7921 () List!1504)

(assert (=> bm!7919 (= call!7921 call!7922)))

(declare-fun b!84150 () Bool)

(assert (=> b!84150 (= e!54878 (insertStrictlySorted!60 (t!5196 (toList!734 lt!39032)) (_1!1102 (tuple2!2183 lt!39033 lt!39035)) (_2!1102 (tuple2!2183 lt!39033 lt!39035))))))

(declare-fun b!84151 () Bool)

(declare-fun e!54881 () List!1504)

(assert (=> b!84151 (= e!54881 call!7921)))

(declare-fun b!84152 () Bool)

(assert (=> b!84152 (= e!54880 e!54882)))

(assert (=> b!84152 (= c!13532 (and ((_ is Cons!1500) (toList!734 lt!39032)) (= (_1!1102 (h!2090 (toList!734 lt!39032))) (_1!1102 (tuple2!2183 lt!39033 lt!39035)))))))

(declare-fun lt!39679 () List!1504)

(declare-fun e!54879 () Bool)

(declare-fun b!84153 () Bool)

(assert (=> b!84153 (= e!54879 (contains!746 lt!39679 (tuple2!2183 (_1!1102 (tuple2!2183 lt!39033 lt!39035)) (_2!1102 (tuple2!2183 lt!39033 lt!39035)))))))

(declare-fun b!84146 () Bool)

(declare-fun res!43452 () Bool)

(assert (=> b!84146 (=> (not res!43452) (not e!54879))))

(assert (=> b!84146 (= res!43452 (containsKey!143 lt!39679 (_1!1102 (tuple2!2183 lt!39033 lt!39035))))))

(declare-fun d!21427 () Bool)

(assert (=> d!21427 e!54879))

(declare-fun res!43451 () Bool)

(assert (=> d!21427 (=> (not res!43451) (not e!54879))))

(assert (=> d!21427 (= res!43451 (isStrictlySorted!284 lt!39679))))

(assert (=> d!21427 (= lt!39679 e!54880)))

(assert (=> d!21427 (= c!13530 (and ((_ is Cons!1500) (toList!734 lt!39032)) (bvslt (_1!1102 (h!2090 (toList!734 lt!39032))) (_1!1102 (tuple2!2183 lt!39033 lt!39035)))))))

(assert (=> d!21427 (isStrictlySorted!284 (toList!734 lt!39032))))

(assert (=> d!21427 (= (insertStrictlySorted!60 (toList!734 lt!39032) (_1!1102 (tuple2!2183 lt!39033 lt!39035)) (_2!1102 (tuple2!2183 lt!39033 lt!39035))) lt!39679)))

(declare-fun b!84154 () Bool)

(assert (=> b!84154 (= e!54881 call!7921)))

(declare-fun b!84155 () Bool)

(assert (=> b!84155 (= c!13529 (and ((_ is Cons!1500) (toList!734 lt!39032)) (bvsgt (_1!1102 (h!2090 (toList!734 lt!39032))) (_1!1102 (tuple2!2183 lt!39033 lt!39035)))))))

(assert (=> b!84155 (= e!54882 e!54881)))

(assert (= (and d!21427 c!13530) b!84149))

(assert (= (and d!21427 (not c!13530)) b!84152))

(assert (= (and b!84152 c!13532) b!84148))

(assert (= (and b!84152 (not c!13532)) b!84155))

(assert (= (and b!84155 c!13529) b!84151))

(assert (= (and b!84155 (not c!13529)) b!84154))

(assert (= (or b!84151 b!84154) bm!7919))

(assert (= (or b!84148 bm!7919) bm!7918))

(assert (= (or b!84149 bm!7918) bm!7917))

(assert (= (and bm!7917 c!13531) b!84150))

(assert (= (and bm!7917 (not c!13531)) b!84147))

(assert (= (and d!21427 res!43451) b!84146))

(assert (= (and b!84146 res!43452) b!84153))

(declare-fun m!87777 () Bool)

(assert (=> d!21427 m!87777))

(declare-fun m!87779 () Bool)

(assert (=> d!21427 m!87779))

(declare-fun m!87781 () Bool)

(assert (=> b!84150 m!87781))

(declare-fun m!87783 () Bool)

(assert (=> bm!7917 m!87783))

(declare-fun m!87785 () Bool)

(assert (=> b!84146 m!87785))

(declare-fun m!87787 () Bool)

(assert (=> b!84153 m!87787))

(assert (=> d!21043 d!21427))

(declare-fun d!21429 () Bool)

(assert (=> d!21429 (= (isDefined!92 (getValueByKey!140 (toList!734 (+!105 lt!39032 (tuple2!2183 lt!39033 lt!39035))) lt!39034)) (not (isEmpty!340 (getValueByKey!140 (toList!734 (+!105 lt!39032 (tuple2!2183 lt!39033 lt!39035))) lt!39034))))))

(declare-fun bs!3562 () Bool)

(assert (= bs!3562 d!21429))

(assert (=> bs!3562 m!86585))

(declare-fun m!87789 () Bool)

(assert (=> bs!3562 m!87789))

(assert (=> b!83469 d!21429))

(declare-fun e!54884 () Option!146)

(declare-fun b!84158 () Bool)

(assert (=> b!84158 (= e!54884 (getValueByKey!140 (t!5196 (toList!734 (+!105 lt!39032 (tuple2!2183 lt!39033 lt!39035)))) lt!39034))))

(declare-fun c!13533 () Bool)

(declare-fun d!21431 () Bool)

(assert (=> d!21431 (= c!13533 (and ((_ is Cons!1500) (toList!734 (+!105 lt!39032 (tuple2!2183 lt!39033 lt!39035)))) (= (_1!1102 (h!2090 (toList!734 (+!105 lt!39032 (tuple2!2183 lt!39033 lt!39035))))) lt!39034)))))

(declare-fun e!54883 () Option!146)

(assert (=> d!21431 (= (getValueByKey!140 (toList!734 (+!105 lt!39032 (tuple2!2183 lt!39033 lt!39035))) lt!39034) e!54883)))

(declare-fun b!84156 () Bool)

(assert (=> b!84156 (= e!54883 (Some!145 (_2!1102 (h!2090 (toList!734 (+!105 lt!39032 (tuple2!2183 lt!39033 lt!39035)))))))))

(declare-fun b!84157 () Bool)

(assert (=> b!84157 (= e!54883 e!54884)))

(declare-fun c!13534 () Bool)

(assert (=> b!84157 (= c!13534 (and ((_ is Cons!1500) (toList!734 (+!105 lt!39032 (tuple2!2183 lt!39033 lt!39035)))) (not (= (_1!1102 (h!2090 (toList!734 (+!105 lt!39032 (tuple2!2183 lt!39033 lt!39035))))) lt!39034))))))

(declare-fun b!84159 () Bool)

(assert (=> b!84159 (= e!54884 None!144)))

(assert (= (and d!21431 c!13533) b!84156))

(assert (= (and d!21431 (not c!13533)) b!84157))

(assert (= (and b!84157 c!13534) b!84158))

(assert (= (and b!84157 (not c!13534)) b!84159))

(declare-fun m!87791 () Bool)

(assert (=> b!84158 m!87791))

(assert (=> b!83469 d!21431))

(assert (=> b!83266 d!21329))

(declare-fun d!21433 () Bool)

(declare-fun res!43453 () Bool)

(declare-fun e!54885 () Bool)

(assert (=> d!21433 (=> res!43453 e!54885)))

(assert (=> d!21433 (= res!43453 (and ((_ is Cons!1500) lt!39055) (= (_1!1102 (h!2090 lt!39055)) (_1!1102 lt!38775))))))

(assert (=> d!21433 (= (containsKey!143 lt!39055 (_1!1102 lt!38775)) e!54885)))

(declare-fun b!84160 () Bool)

(declare-fun e!54886 () Bool)

(assert (=> b!84160 (= e!54885 e!54886)))

(declare-fun res!43454 () Bool)

(assert (=> b!84160 (=> (not res!43454) (not e!54886))))

(assert (=> b!84160 (= res!43454 (and (or (not ((_ is Cons!1500) lt!39055)) (bvsle (_1!1102 (h!2090 lt!39055)) (_1!1102 lt!38775))) ((_ is Cons!1500) lt!39055) (bvslt (_1!1102 (h!2090 lt!39055)) (_1!1102 lt!38775))))))

(declare-fun b!84161 () Bool)

(assert (=> b!84161 (= e!54886 (containsKey!143 (t!5196 lt!39055) (_1!1102 lt!38775)))))

(assert (= (and d!21433 (not res!43453)) b!84160))

(assert (= (and b!84160 res!43454) b!84161))

(declare-fun m!87793 () Bool)

(assert (=> b!84161 m!87793))

(assert (=> b!83671 d!21433))

(declare-fun d!21435 () Bool)

(assert (=> d!21435 (= (isEmpty!338 lt!39292) (isEmpty!339 (toList!734 lt!39292)))))

(declare-fun bs!3563 () Bool)

(assert (= bs!3563 d!21435))

(declare-fun m!87795 () Bool)

(assert (=> bs!3563 m!87795))

(assert (=> b!83495 d!21435))

(declare-fun d!21437 () Bool)

(declare-fun res!43455 () Bool)

(declare-fun e!54887 () Bool)

(assert (=> d!21437 (=> res!43455 e!54887)))

(assert (=> d!21437 (= res!43455 (and ((_ is Cons!1500) lt!39227) (= (_1!1102 (h!2090 lt!39227)) (_1!1102 lt!38775))))))

(assert (=> d!21437 (= (containsKey!143 lt!39227 (_1!1102 lt!38775)) e!54887)))

(declare-fun b!84162 () Bool)

(declare-fun e!54888 () Bool)

(assert (=> b!84162 (= e!54887 e!54888)))

(declare-fun res!43456 () Bool)

(assert (=> b!84162 (=> (not res!43456) (not e!54888))))

(assert (=> b!84162 (= res!43456 (and (or (not ((_ is Cons!1500) lt!39227)) (bvsle (_1!1102 (h!2090 lt!39227)) (_1!1102 lt!38775))) ((_ is Cons!1500) lt!39227) (bvslt (_1!1102 (h!2090 lt!39227)) (_1!1102 lt!38775))))))

(declare-fun b!84163 () Bool)

(assert (=> b!84163 (= e!54888 (containsKey!143 (t!5196 lt!39227) (_1!1102 lt!38775)))))

(assert (= (and d!21437 (not res!43455)) b!84162))

(assert (= (and b!84162 res!43456) b!84163))

(declare-fun m!87797 () Bool)

(assert (=> b!84163 m!87797))

(assert (=> b!83418 d!21437))

(declare-fun d!21439 () Bool)

(declare-fun lt!39680 () Bool)

(assert (=> d!21439 (= lt!39680 (select (content!88 Nil!1502) (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!54890 () Bool)

(assert (=> d!21439 (= lt!39680 e!54890)))

(declare-fun res!43458 () Bool)

(assert (=> d!21439 (=> (not res!43458) (not e!54890))))

(assert (=> d!21439 (= res!43458 ((_ is Cons!1501) Nil!1502))))

(assert (=> d!21439 (= (contains!745 Nil!1502 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)) lt!39680)))

(declare-fun b!84164 () Bool)

(declare-fun e!54889 () Bool)

(assert (=> b!84164 (= e!54890 e!54889)))

(declare-fun res!43457 () Bool)

(assert (=> b!84164 (=> res!43457 e!54889)))

(assert (=> b!84164 (= res!43457 (= (h!2091 Nil!1502) (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!84165 () Bool)

(assert (=> b!84165 (= e!54889 (contains!745 (t!5197 Nil!1502) (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!21439 res!43458) b!84164))

(assert (= (and b!84164 (not res!43457)) b!84165))

(assert (=> d!21439 m!86307))

(assert (=> d!21439 m!86211))

(declare-fun m!87799 () Bool)

(assert (=> d!21439 m!87799))

(assert (=> b!84165 m!86211))

(declare-fun m!87801 () Bool)

(assert (=> b!84165 m!87801))

(assert (=> b!83463 d!21439))

(declare-fun d!21441 () Bool)

(declare-fun lt!39681 () Bool)

(assert (=> d!21441 (= lt!39681 (select (content!89 (t!5196 (toList!734 lt!39008))) lt!38775))))

(declare-fun e!54891 () Bool)

(assert (=> d!21441 (= lt!39681 e!54891)))

(declare-fun res!43460 () Bool)

(assert (=> d!21441 (=> (not res!43460) (not e!54891))))

(assert (=> d!21441 (= res!43460 ((_ is Cons!1500) (t!5196 (toList!734 lt!39008))))))

(assert (=> d!21441 (= (contains!746 (t!5196 (toList!734 lt!39008)) lt!38775) lt!39681)))

(declare-fun b!84166 () Bool)

(declare-fun e!54892 () Bool)

(assert (=> b!84166 (= e!54891 e!54892)))

(declare-fun res!43459 () Bool)

(assert (=> b!84166 (=> res!43459 e!54892)))

(assert (=> b!84166 (= res!43459 (= (h!2090 (t!5196 (toList!734 lt!39008))) lt!38775))))

(declare-fun b!84167 () Bool)

(assert (=> b!84167 (= e!54892 (contains!746 (t!5196 (t!5196 (toList!734 lt!39008))) lt!38775))))

(assert (= (and d!21441 res!43460) b!84166))

(assert (= (and b!84166 (not res!43459)) b!84167))

(declare-fun m!87803 () Bool)

(assert (=> d!21441 m!87803))

(declare-fun m!87805 () Bool)

(assert (=> d!21441 m!87805))

(declare-fun m!87807 () Bool)

(assert (=> b!84167 m!87807))

(assert (=> b!83518 d!21441))

(declare-fun d!21443 () Bool)

(declare-fun e!54894 () Bool)

(assert (=> d!21443 e!54894))

(declare-fun res!43461 () Bool)

(assert (=> d!21443 (=> res!43461 e!54894)))

(declare-fun lt!39682 () Bool)

(assert (=> d!21443 (= res!43461 (not lt!39682))))

(declare-fun lt!39685 () Bool)

(assert (=> d!21443 (= lt!39682 lt!39685)))

(declare-fun lt!39684 () Unit!2413)

(declare-fun e!54893 () Unit!2413)

(assert (=> d!21443 (= lt!39684 e!54893)))

(declare-fun c!13535 () Bool)

(assert (=> d!21443 (= c!13535 lt!39685)))

(assert (=> d!21443 (= lt!39685 (containsKey!143 (toList!734 lt!39451) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!21443 (= (contains!744 lt!39451 #b1000000000000000000000000000000000000000000000000000000000000000) lt!39682)))

(declare-fun b!84168 () Bool)

(declare-fun lt!39683 () Unit!2413)

(assert (=> b!84168 (= e!54893 lt!39683)))

(assert (=> b!84168 (= lt!39683 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 lt!39451) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!84168 (isDefined!92 (getValueByKey!140 (toList!734 lt!39451) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!84169 () Bool)

(declare-fun Unit!2465 () Unit!2413)

(assert (=> b!84169 (= e!54893 Unit!2465)))

(declare-fun b!84170 () Bool)

(assert (=> b!84170 (= e!54894 (isDefined!92 (getValueByKey!140 (toList!734 lt!39451) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!21443 c!13535) b!84168))

(assert (= (and d!21443 (not c!13535)) b!84169))

(assert (= (and d!21443 (not res!43461)) b!84170))

(declare-fun m!87809 () Bool)

(assert (=> d!21443 m!87809))

(declare-fun m!87811 () Bool)

(assert (=> b!84168 m!87811))

(declare-fun m!87813 () Bool)

(assert (=> b!84168 m!87813))

(assert (=> b!84168 m!87813))

(declare-fun m!87815 () Bool)

(assert (=> b!84168 m!87815))

(assert (=> b!84170 m!87813))

(assert (=> b!84170 m!87813))

(assert (=> b!84170 m!87815))

(assert (=> bm!7854 d!21443))

(assert (=> d!20989 d!20983))

(assert (=> d!20989 d!20987))

(assert (=> d!20989 d!20985))

(assert (=> d!20989 d!20981))

(declare-fun d!21445 () Bool)

(assert (=> d!21445 (= (isDefined!92 (getValueByKey!140 (toList!734 lt!39040) (_1!1102 lt!38779))) (not (isEmpty!340 (getValueByKey!140 (toList!734 lt!39040) (_1!1102 lt!38779)))))))

(declare-fun bs!3564 () Bool)

(assert (= bs!3564 d!21445))

(assert (=> bs!3564 m!86081))

(declare-fun m!87817 () Bool)

(assert (=> bs!3564 m!87817))

(assert (=> b!83762 d!21445))

(assert (=> b!83762 d!21123))

(declare-fun d!21447 () Bool)

(assert (=> d!21447 (= (get!1201 (getValueByKey!140 (toList!734 lt!39108) lt!39117)) (v!2638 (getValueByKey!140 (toList!734 lt!39108) lt!39117)))))

(assert (=> d!21107 d!21447))

(declare-fun b!84173 () Bool)

(declare-fun e!54896 () Option!146)

(assert (=> b!84173 (= e!54896 (getValueByKey!140 (t!5196 (toList!734 lt!39108)) lt!39117))))

(declare-fun d!21449 () Bool)

(declare-fun c!13536 () Bool)

(assert (=> d!21449 (= c!13536 (and ((_ is Cons!1500) (toList!734 lt!39108)) (= (_1!1102 (h!2090 (toList!734 lt!39108))) lt!39117)))))

(declare-fun e!54895 () Option!146)

(assert (=> d!21449 (= (getValueByKey!140 (toList!734 lt!39108) lt!39117) e!54895)))

(declare-fun b!84171 () Bool)

(assert (=> b!84171 (= e!54895 (Some!145 (_2!1102 (h!2090 (toList!734 lt!39108)))))))

(declare-fun b!84172 () Bool)

(assert (=> b!84172 (= e!54895 e!54896)))

(declare-fun c!13537 () Bool)

(assert (=> b!84172 (= c!13537 (and ((_ is Cons!1500) (toList!734 lt!39108)) (not (= (_1!1102 (h!2090 (toList!734 lt!39108))) lt!39117))))))

(declare-fun b!84174 () Bool)

(assert (=> b!84174 (= e!54896 None!144)))

(assert (= (and d!21449 c!13536) b!84171))

(assert (= (and d!21449 (not c!13536)) b!84172))

(assert (= (and b!84172 c!13537) b!84173))

(assert (= (and b!84172 (not c!13537)) b!84174))

(declare-fun m!87819 () Bool)

(assert (=> b!84173 m!87819))

(assert (=> d!21107 d!21449))

(declare-fun b!84177 () Bool)

(declare-fun e!54898 () Option!146)

(assert (=> b!84177 (= e!54898 (getValueByKey!140 (t!5196 (t!5196 (toList!734 lt!39004))) (_1!1102 lt!38779)))))

(declare-fun d!21451 () Bool)

(declare-fun c!13538 () Bool)

(assert (=> d!21451 (= c!13538 (and ((_ is Cons!1500) (t!5196 (toList!734 lt!39004))) (= (_1!1102 (h!2090 (t!5196 (toList!734 lt!39004)))) (_1!1102 lt!38779))))))

(declare-fun e!54897 () Option!146)

(assert (=> d!21451 (= (getValueByKey!140 (t!5196 (toList!734 lt!39004)) (_1!1102 lt!38779)) e!54897)))

(declare-fun b!84175 () Bool)

(assert (=> b!84175 (= e!54897 (Some!145 (_2!1102 (h!2090 (t!5196 (toList!734 lt!39004))))))))

(declare-fun b!84176 () Bool)

(assert (=> b!84176 (= e!54897 e!54898)))

(declare-fun c!13539 () Bool)

(assert (=> b!84176 (= c!13539 (and ((_ is Cons!1500) (t!5196 (toList!734 lt!39004))) (not (= (_1!1102 (h!2090 (t!5196 (toList!734 lt!39004)))) (_1!1102 lt!38779)))))))

(declare-fun b!84178 () Bool)

(assert (=> b!84178 (= e!54898 None!144)))

(assert (= (and d!21451 c!13538) b!84175))

(assert (= (and d!21451 (not c!13538)) b!84176))

(assert (= (and b!84176 c!13539) b!84177))

(assert (= (and b!84176 (not c!13539)) b!84178))

(declare-fun m!87821 () Bool)

(assert (=> b!84177 m!87821))

(assert (=> b!83244 d!21451))

(declare-fun d!21453 () Bool)

(declare-fun e!54900 () Bool)

(assert (=> d!21453 e!54900))

(declare-fun res!43462 () Bool)

(assert (=> d!21453 (=> res!43462 e!54900)))

(declare-fun lt!39686 () Bool)

(assert (=> d!21453 (= res!43462 (not lt!39686))))

(declare-fun lt!39689 () Bool)

(assert (=> d!21453 (= lt!39686 lt!39689)))

(declare-fun lt!39688 () Unit!2413)

(declare-fun e!54899 () Unit!2413)

(assert (=> d!21453 (= lt!39688 e!54899)))

(declare-fun c!13540 () Bool)

(assert (=> d!21453 (= c!13540 lt!39689)))

(assert (=> d!21453 (= lt!39689 (containsKey!143 (toList!734 lt!39308) (_1!1102 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(assert (=> d!21453 (= (contains!744 lt!39308 (_1!1102 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))) lt!39686)))

(declare-fun b!84179 () Bool)

(declare-fun lt!39687 () Unit!2413)

(assert (=> b!84179 (= e!54899 lt!39687)))

(assert (=> b!84179 (= lt!39687 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 lt!39308) (_1!1102 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(assert (=> b!84179 (isDefined!92 (getValueByKey!140 (toList!734 lt!39308) (_1!1102 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun b!84180 () Bool)

(declare-fun Unit!2466 () Unit!2413)

(assert (=> b!84180 (= e!54899 Unit!2466)))

(declare-fun b!84181 () Bool)

(assert (=> b!84181 (= e!54900 (isDefined!92 (getValueByKey!140 (toList!734 lt!39308) (_1!1102 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(assert (= (and d!21453 c!13540) b!84179))

(assert (= (and d!21453 (not c!13540)) b!84180))

(assert (= (and d!21453 (not res!43462)) b!84181))

(declare-fun m!87823 () Bool)

(assert (=> d!21453 m!87823))

(declare-fun m!87825 () Bool)

(assert (=> b!84179 m!87825))

(assert (=> b!84179 m!86725))

(assert (=> b!84179 m!86725))

(declare-fun m!87827 () Bool)

(assert (=> b!84179 m!87827))

(assert (=> b!84181 m!86725))

(assert (=> b!84181 m!86725))

(assert (=> b!84181 m!87827))

(assert (=> d!21085 d!21453))

(declare-fun e!54902 () Option!146)

(declare-fun b!84184 () Bool)

(assert (=> b!84184 (= e!54902 (getValueByKey!140 (t!5196 lt!39310) (_1!1102 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun c!13541 () Bool)

(declare-fun d!21455 () Bool)

(assert (=> d!21455 (= c!13541 (and ((_ is Cons!1500) lt!39310) (= (_1!1102 (h!2090 lt!39310)) (_1!1102 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(declare-fun e!54901 () Option!146)

(assert (=> d!21455 (= (getValueByKey!140 lt!39310 (_1!1102 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))) e!54901)))

(declare-fun b!84182 () Bool)

(assert (=> b!84182 (= e!54901 (Some!145 (_2!1102 (h!2090 lt!39310))))))

(declare-fun b!84183 () Bool)

(assert (=> b!84183 (= e!54901 e!54902)))

(declare-fun c!13542 () Bool)

(assert (=> b!84183 (= c!13542 (and ((_ is Cons!1500) lt!39310) (not (= (_1!1102 (h!2090 lt!39310)) (_1!1102 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))))

(declare-fun b!84185 () Bool)

(assert (=> b!84185 (= e!54902 None!144)))

(assert (= (and d!21455 c!13541) b!84182))

(assert (= (and d!21455 (not c!13541)) b!84183))

(assert (= (and b!84183 c!13542) b!84184))

(assert (= (and b!84183 (not c!13542)) b!84185))

(declare-fun m!87829 () Bool)

(assert (=> b!84184 m!87829))

(assert (=> d!21085 d!21455))

(declare-fun d!21457 () Bool)

(assert (=> d!21457 (= (getValueByKey!140 lt!39310 (_1!1102 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))) (Some!145 (_2!1102 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun lt!39690 () Unit!2413)

(assert (=> d!21457 (= lt!39690 (choose!493 lt!39310 (_1!1102 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun e!54903 () Bool)

(assert (=> d!21457 e!54903))

(declare-fun res!43463 () Bool)

(assert (=> d!21457 (=> (not res!43463) (not e!54903))))

(assert (=> d!21457 (= res!43463 (isStrictlySorted!284 lt!39310))))

(assert (=> d!21457 (= (lemmaContainsTupThenGetReturnValue!57 lt!39310 (_1!1102 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))) lt!39690)))

(declare-fun b!84186 () Bool)

(declare-fun res!43464 () Bool)

(assert (=> b!84186 (=> (not res!43464) (not e!54903))))

(assert (=> b!84186 (= res!43464 (containsKey!143 lt!39310 (_1!1102 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun b!84187 () Bool)

(assert (=> b!84187 (= e!54903 (contains!746 lt!39310 (tuple2!2183 (_1!1102 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(assert (= (and d!21457 res!43463) b!84186))

(assert (= (and b!84186 res!43464) b!84187))

(assert (=> d!21457 m!86719))

(declare-fun m!87831 () Bool)

(assert (=> d!21457 m!87831))

(declare-fun m!87833 () Bool)

(assert (=> d!21457 m!87833))

(declare-fun m!87835 () Bool)

(assert (=> b!84186 m!87835))

(declare-fun m!87837 () Bool)

(assert (=> b!84187 m!87837))

(assert (=> d!21085 d!21457))

(declare-fun c!13546 () Bool)

(declare-fun b!84189 () Bool)

(declare-fun e!54904 () List!1504)

(declare-fun c!13543 () Bool)

(assert (=> b!84189 (= e!54904 (ite c!13546 (t!5196 (toList!734 lt!39109)) (ite c!13543 (Cons!1500 (h!2090 (toList!734 lt!39109)) (t!5196 (toList!734 lt!39109))) Nil!1501)))))

(declare-fun c!13544 () Bool)

(declare-fun bm!7920 () Bool)

(declare-fun call!7923 () List!1504)

(assert (=> bm!7920 (= call!7923 ($colon$colon!70 e!54904 (ite c!13544 (h!2090 (toList!734 lt!39109)) (tuple2!2183 (_1!1102 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))))

(declare-fun c!13545 () Bool)

(assert (=> bm!7920 (= c!13545 c!13544)))

(declare-fun b!84190 () Bool)

(declare-fun e!54908 () List!1504)

(declare-fun call!7925 () List!1504)

(assert (=> b!84190 (= e!54908 call!7925)))

(declare-fun b!84191 () Bool)

(declare-fun e!54906 () List!1504)

(assert (=> b!84191 (= e!54906 call!7923)))

(declare-fun bm!7921 () Bool)

(assert (=> bm!7921 (= call!7925 call!7923)))

(declare-fun bm!7922 () Bool)

(declare-fun call!7924 () List!1504)

(assert (=> bm!7922 (= call!7924 call!7925)))

(declare-fun b!84192 () Bool)

(assert (=> b!84192 (= e!54904 (insertStrictlySorted!60 (t!5196 (toList!734 lt!39109)) (_1!1102 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun b!84193 () Bool)

(declare-fun e!54907 () List!1504)

(assert (=> b!84193 (= e!54907 call!7924)))

(declare-fun b!84194 () Bool)

(assert (=> b!84194 (= e!54906 e!54908)))

(assert (=> b!84194 (= c!13546 (and ((_ is Cons!1500) (toList!734 lt!39109)) (= (_1!1102 (h!2090 (toList!734 lt!39109))) (_1!1102 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(declare-fun b!84195 () Bool)

(declare-fun e!54905 () Bool)

(declare-fun lt!39691 () List!1504)

(assert (=> b!84195 (= e!54905 (contains!746 lt!39691 (tuple2!2183 (_1!1102 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(declare-fun b!84188 () Bool)

(declare-fun res!43466 () Bool)

(assert (=> b!84188 (=> (not res!43466) (not e!54905))))

(assert (=> b!84188 (= res!43466 (containsKey!143 lt!39691 (_1!1102 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun d!21459 () Bool)

(assert (=> d!21459 e!54905))

(declare-fun res!43465 () Bool)

(assert (=> d!21459 (=> (not res!43465) (not e!54905))))

(assert (=> d!21459 (= res!43465 (isStrictlySorted!284 lt!39691))))

(assert (=> d!21459 (= lt!39691 e!54906)))

(assert (=> d!21459 (= c!13544 (and ((_ is Cons!1500) (toList!734 lt!39109)) (bvslt (_1!1102 (h!2090 (toList!734 lt!39109))) (_1!1102 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(assert (=> d!21459 (isStrictlySorted!284 (toList!734 lt!39109))))

(assert (=> d!21459 (= (insertStrictlySorted!60 (toList!734 lt!39109) (_1!1102 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))) lt!39691)))

(declare-fun b!84196 () Bool)

(assert (=> b!84196 (= e!54907 call!7924)))

(declare-fun b!84197 () Bool)

(assert (=> b!84197 (= c!13543 (and ((_ is Cons!1500) (toList!734 lt!39109)) (bvsgt (_1!1102 (h!2090 (toList!734 lt!39109))) (_1!1102 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(assert (=> b!84197 (= e!54908 e!54907)))

(assert (= (and d!21459 c!13544) b!84191))

(assert (= (and d!21459 (not c!13544)) b!84194))

(assert (= (and b!84194 c!13546) b!84190))

(assert (= (and b!84194 (not c!13546)) b!84197))

(assert (= (and b!84197 c!13543) b!84193))

(assert (= (and b!84197 (not c!13543)) b!84196))

(assert (= (or b!84193 b!84196) bm!7922))

(assert (= (or b!84190 bm!7922) bm!7921))

(assert (= (or b!84191 bm!7921) bm!7920))

(assert (= (and bm!7920 c!13545) b!84192))

(assert (= (and bm!7920 (not c!13545)) b!84189))

(assert (= (and d!21459 res!43465) b!84188))

(assert (= (and b!84188 res!43466) b!84195))

(declare-fun m!87839 () Bool)

(assert (=> d!21459 m!87839))

(declare-fun m!87841 () Bool)

(assert (=> d!21459 m!87841))

(declare-fun m!87843 () Bool)

(assert (=> b!84192 m!87843))

(declare-fun m!87845 () Bool)

(assert (=> bm!7920 m!87845))

(declare-fun m!87847 () Bool)

(assert (=> b!84188 m!87847))

(declare-fun m!87849 () Bool)

(assert (=> b!84195 m!87849))

(assert (=> d!21085 d!21459))

(declare-fun d!21461 () Bool)

(declare-fun e!54910 () Bool)

(assert (=> d!21461 e!54910))

(declare-fun res!43467 () Bool)

(assert (=> d!21461 (=> res!43467 e!54910)))

(declare-fun lt!39692 () Bool)

(assert (=> d!21461 (= res!43467 (not lt!39692))))

(declare-fun lt!39695 () Bool)

(assert (=> d!21461 (= lt!39692 lt!39695)))

(declare-fun lt!39694 () Unit!2413)

(declare-fun e!54909 () Unit!2413)

(assert (=> d!21461 (= lt!39694 e!54909)))

(declare-fun c!13547 () Bool)

(assert (=> d!21461 (= c!13547 lt!39695)))

(assert (=> d!21461 (= lt!39695 (containsKey!143 (toList!734 lt!39292) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!21461 (= (contains!744 lt!39292 #b1000000000000000000000000000000000000000000000000000000000000000) lt!39692)))

(declare-fun b!84198 () Bool)

(declare-fun lt!39693 () Unit!2413)

(assert (=> b!84198 (= e!54909 lt!39693)))

(assert (=> b!84198 (= lt!39693 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 lt!39292) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!84198 (isDefined!92 (getValueByKey!140 (toList!734 lt!39292) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!84199 () Bool)

(declare-fun Unit!2467 () Unit!2413)

(assert (=> b!84199 (= e!54909 Unit!2467)))

(declare-fun b!84200 () Bool)

(assert (=> b!84200 (= e!54910 (isDefined!92 (getValueByKey!140 (toList!734 lt!39292) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!21461 c!13547) b!84198))

(assert (= (and d!21461 (not c!13547)) b!84199))

(assert (= (and d!21461 (not res!43467)) b!84200))

(declare-fun m!87851 () Bool)

(assert (=> d!21461 m!87851))

(declare-fun m!87853 () Bool)

(assert (=> b!84198 m!87853))

(declare-fun m!87855 () Bool)

(assert (=> b!84198 m!87855))

(assert (=> b!84198 m!87855))

(declare-fun m!87857 () Bool)

(assert (=> b!84198 m!87857))

(assert (=> b!84200 m!87855))

(assert (=> b!84200 m!87855))

(assert (=> b!84200 m!87857))

(assert (=> b!83489 d!21461))

(assert (=> b!83730 d!21203))

(assert (=> b!83730 d!21115))

(declare-fun lt!39696 () Bool)

(declare-fun d!21463 () Bool)

(assert (=> d!21463 (= lt!39696 (select (content!89 (toList!734 lt!39123)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))

(declare-fun e!54911 () Bool)

(assert (=> d!21463 (= lt!39696 e!54911)))

(declare-fun res!43469 () Bool)

(assert (=> d!21463 (=> (not res!43469) (not e!54911))))

(assert (=> d!21463 (= res!43469 ((_ is Cons!1500) (toList!734 lt!39123)))))

(assert (=> d!21463 (= (contains!746 (toList!734 lt!39123) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) lt!39696)))

(declare-fun b!84201 () Bool)

(declare-fun e!54912 () Bool)

(assert (=> b!84201 (= e!54911 e!54912)))

(declare-fun res!43468 () Bool)

(assert (=> b!84201 (=> res!43468 e!54912)))

(assert (=> b!84201 (= res!43468 (= (h!2090 (toList!734 lt!39123)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))

(declare-fun b!84202 () Bool)

(assert (=> b!84202 (= e!54912 (contains!746 (t!5196 (toList!734 lt!39123)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))

(assert (= (and d!21463 res!43469) b!84201))

(assert (= (and b!84201 (not res!43468)) b!84202))

(declare-fun m!87859 () Bool)

(assert (=> d!21463 m!87859))

(declare-fun m!87861 () Bool)

(assert (=> d!21463 m!87861))

(declare-fun m!87863 () Bool)

(assert (=> b!84202 m!87863))

(assert (=> b!83238 d!21463))

(declare-fun d!21465 () Bool)

(declare-fun e!54913 () Bool)

(assert (=> d!21465 e!54913))

(declare-fun res!43471 () Bool)

(assert (=> d!21465 (=> (not res!43471) (not e!54913))))

(declare-fun lt!39698 () ListLongMap!1437)

(assert (=> d!21465 (= res!43471 (contains!744 lt!39698 (_1!1102 (ite (or c!13382 c!13377) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13224 c!13215) lt!38784 (zeroValue!2210 newMap!16))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16)))))))))

(declare-fun lt!39700 () List!1504)

(assert (=> d!21465 (= lt!39698 (ListLongMap!1438 lt!39700))))

(declare-fun lt!39697 () Unit!2413)

(declare-fun lt!39699 () Unit!2413)

(assert (=> d!21465 (= lt!39697 lt!39699)))

(assert (=> d!21465 (= (getValueByKey!140 lt!39700 (_1!1102 (ite (or c!13382 c!13377) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13224 c!13215) lt!38784 (zeroValue!2210 newMap!16))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16)))))) (Some!145 (_2!1102 (ite (or c!13382 c!13377) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13224 c!13215) lt!38784 (zeroValue!2210 newMap!16))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16)))))))))

(assert (=> d!21465 (= lt!39699 (lemmaContainsTupThenGetReturnValue!57 lt!39700 (_1!1102 (ite (or c!13382 c!13377) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13224 c!13215) lt!38784 (zeroValue!2210 newMap!16))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16))))) (_2!1102 (ite (or c!13382 c!13377) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13224 c!13215) lt!38784 (zeroValue!2210 newMap!16))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16)))))))))

(assert (=> d!21465 (= lt!39700 (insertStrictlySorted!60 (toList!734 (ite c!13382 call!7861 (ite c!13377 call!7856 call!7857))) (_1!1102 (ite (or c!13382 c!13377) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13224 c!13215) lt!38784 (zeroValue!2210 newMap!16))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16))))) (_2!1102 (ite (or c!13382 c!13377) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13224 c!13215) lt!38784 (zeroValue!2210 newMap!16))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16)))))))))

(assert (=> d!21465 (= (+!105 (ite c!13382 call!7861 (ite c!13377 call!7856 call!7857)) (ite (or c!13382 c!13377) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13224 c!13215) lt!38784 (zeroValue!2210 newMap!16))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16))))) lt!39698)))

(declare-fun b!84203 () Bool)

(declare-fun res!43470 () Bool)

(assert (=> b!84203 (=> (not res!43470) (not e!54913))))

(assert (=> b!84203 (= res!43470 (= (getValueByKey!140 (toList!734 lt!39698) (_1!1102 (ite (or c!13382 c!13377) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13224 c!13215) lt!38784 (zeroValue!2210 newMap!16))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16)))))) (Some!145 (_2!1102 (ite (or c!13382 c!13377) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13224 c!13215) lt!38784 (zeroValue!2210 newMap!16))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16))))))))))

(declare-fun b!84204 () Bool)

(assert (=> b!84204 (= e!54913 (contains!746 (toList!734 lt!39698) (ite (or c!13382 c!13377) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13224 c!13215) lt!38784 (zeroValue!2210 newMap!16))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16))))))))

(assert (= (and d!21465 res!43471) b!84203))

(assert (= (and b!84203 res!43470) b!84204))

(declare-fun m!87865 () Bool)

(assert (=> d!21465 m!87865))

(declare-fun m!87867 () Bool)

(assert (=> d!21465 m!87867))

(declare-fun m!87869 () Bool)

(assert (=> d!21465 m!87869))

(declare-fun m!87871 () Bool)

(assert (=> d!21465 m!87871))

(declare-fun m!87873 () Bool)

(assert (=> b!84203 m!87873))

(declare-fun m!87875 () Bool)

(assert (=> b!84204 m!87875))

(assert (=> bm!7852 d!21465))

(declare-fun d!21467 () Bool)

(assert (=> d!21467 (= (apply!81 lt!39143 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)) (get!1201 (getValueByKey!140 (toList!734 lt!39143) (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3565 () Bool)

(assert (= bs!3565 d!21467))

(assert (=> bs!3565 m!86211))

(declare-fun m!87877 () Bool)

(assert (=> bs!3565 m!87877))

(assert (=> bs!3565 m!87877))

(declare-fun m!87879 () Bool)

(assert (=> bs!3565 m!87879))

(assert (=> b!83248 d!21467))

(declare-fun d!21469 () Bool)

(declare-fun c!13548 () Bool)

(assert (=> d!21469 (= c!13548 ((_ is ValueCellFull!920) (select (arr!1905 (_values!2299 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!54914 () V!3017)

(assert (=> d!21469 (= (get!1198 (select (arr!1905 (_values!2299 newMap!16)) #b00000000000000000000000000000000) (dynLambda!343 (defaultEntry!2316 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!54914)))

(declare-fun b!84205 () Bool)

(assert (=> b!84205 (= e!54914 (get!1199 (select (arr!1905 (_values!2299 newMap!16)) #b00000000000000000000000000000000) (dynLambda!343 (defaultEntry!2316 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!84206 () Bool)

(assert (=> b!84206 (= e!54914 (get!1200 (select (arr!1905 (_values!2299 newMap!16)) #b00000000000000000000000000000000) (dynLambda!343 (defaultEntry!2316 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!21469 c!13548) b!84205))

(assert (= (and d!21469 (not c!13548)) b!84206))

(assert (=> b!84205 m!86215))

(assert (=> b!84205 m!86219))

(declare-fun m!87881 () Bool)

(assert (=> b!84205 m!87881))

(assert (=> b!84206 m!86215))

(assert (=> b!84206 m!86219))

(declare-fun m!87883 () Bool)

(assert (=> b!84206 m!87883))

(assert (=> b!83248 d!21469))

(declare-fun b!84219 () Bool)

(declare-fun e!54923 () SeekEntryResult!236)

(assert (=> b!84219 (= e!54923 Undefined!236)))

(declare-fun b!84221 () Bool)

(declare-fun e!54922 () SeekEntryResult!236)

(assert (=> b!84221 (= e!54922 (Found!236 (index!3082 lt!39215)))))

(declare-fun b!84222 () Bool)

(declare-fun e!54921 () SeekEntryResult!236)

(assert (=> b!84222 (= e!54921 (MissingVacant!236 (index!3082 lt!39215)))))

(declare-fun b!84223 () Bool)

(declare-fun c!13555 () Bool)

(declare-fun lt!39705 () (_ BitVec 64))

(assert (=> b!84223 (= c!13555 (= lt!39705 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!84223 (= e!54922 e!54921)))

(declare-fun b!84224 () Bool)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!84224 (= e!54921 (seekKeyOrZeroReturnVacant!0 (bvadd (x!11845 lt!39215) #b00000000000000000000000000000001) (nextIndex!0 (index!3082 lt!39215) (bvadd (x!11845 lt!39215) #b00000000000000000000000000000001) (mask!6334 newMap!16)) (index!3082 lt!39215) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (_keys!3984 newMap!16) (mask!6334 newMap!16)))))

(declare-fun b!84220 () Bool)

(assert (=> b!84220 (= e!54923 e!54922)))

(declare-fun c!13556 () Bool)

(assert (=> b!84220 (= c!13556 (= lt!39705 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))

(declare-fun d!21471 () Bool)

(declare-fun lt!39706 () SeekEntryResult!236)

(assert (=> d!21471 (and (or ((_ is Undefined!236) lt!39706) (not ((_ is Found!236) lt!39706)) (and (bvsge (index!3081 lt!39706) #b00000000000000000000000000000000) (bvslt (index!3081 lt!39706) (size!2147 (_keys!3984 newMap!16))))) (or ((_ is Undefined!236) lt!39706) ((_ is Found!236) lt!39706) (not ((_ is MissingVacant!236) lt!39706)) (not (= (index!3083 lt!39706) (index!3082 lt!39215))) (and (bvsge (index!3083 lt!39706) #b00000000000000000000000000000000) (bvslt (index!3083 lt!39706) (size!2147 (_keys!3984 newMap!16))))) (or ((_ is Undefined!236) lt!39706) (ite ((_ is Found!236) lt!39706) (= (select (arr!1904 (_keys!3984 newMap!16)) (index!3081 lt!39706)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) (and ((_ is MissingVacant!236) lt!39706) (= (index!3083 lt!39706) (index!3082 lt!39215)) (= (select (arr!1904 (_keys!3984 newMap!16)) (index!3083 lt!39706)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!21471 (= lt!39706 e!54923)))

(declare-fun c!13557 () Bool)

(assert (=> d!21471 (= c!13557 (bvsge (x!11845 lt!39215) #b01111111111111111111111111111110))))

(assert (=> d!21471 (= lt!39705 (select (arr!1904 (_keys!3984 newMap!16)) (index!3082 lt!39215)))))

(assert (=> d!21471 (validMask!0 (mask!6334 newMap!16))))

(assert (=> d!21471 (= (seekKeyOrZeroReturnVacant!0 (x!11845 lt!39215) (index!3082 lt!39215) (index!3082 lt!39215) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (_keys!3984 newMap!16) (mask!6334 newMap!16)) lt!39706)))

(assert (= (and d!21471 c!13557) b!84219))

(assert (= (and d!21471 (not c!13557)) b!84220))

(assert (= (and b!84220 c!13556) b!84221))

(assert (= (and b!84220 (not c!13556)) b!84223))

(assert (= (and b!84223 c!13555) b!84222))

(assert (= (and b!84223 (not c!13555)) b!84224))

(declare-fun m!87885 () Bool)

(assert (=> b!84224 m!87885))

(assert (=> b!84224 m!87885))

(assert (=> b!84224 m!85721))

(declare-fun m!87887 () Bool)

(assert (=> b!84224 m!87887))

(declare-fun m!87889 () Bool)

(assert (=> d!21471 m!87889))

(declare-fun m!87891 () Bool)

(assert (=> d!21471 m!87891))

(assert (=> d!21471 m!86427))

(assert (=> d!21471 m!86223))

(assert (=> b!83397 d!21471))

(declare-fun d!21473 () Bool)

(declare-fun e!54925 () Bool)

(assert (=> d!21473 e!54925))

(declare-fun res!43472 () Bool)

(assert (=> d!21473 (=> res!43472 e!54925)))

(declare-fun lt!39707 () Bool)

(assert (=> d!21473 (= res!43472 (not lt!39707))))

(declare-fun lt!39710 () Bool)

(assert (=> d!21473 (= lt!39707 lt!39710)))

(declare-fun lt!39709 () Unit!2413)

(declare-fun e!54924 () Unit!2413)

(assert (=> d!21473 (= lt!39709 e!54924)))

(declare-fun c!13558 () Bool)

(assert (=> d!21473 (= c!13558 lt!39710)))

(assert (=> d!21473 (= lt!39710 (containsKey!143 (toList!734 lt!39467) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(assert (=> d!21473 (= (contains!744 lt!39467 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))) lt!39707)))

(declare-fun b!84225 () Bool)

(declare-fun lt!39708 () Unit!2413)

(assert (=> b!84225 (= e!54924 lt!39708)))

(assert (=> b!84225 (= lt!39708 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 lt!39467) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(assert (=> b!84225 (isDefined!92 (getValueByKey!140 (toList!734 lt!39467) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(declare-fun b!84226 () Bool)

(declare-fun Unit!2468 () Unit!2413)

(assert (=> b!84226 (= e!54924 Unit!2468)))

(declare-fun b!84227 () Bool)

(assert (=> b!84227 (= e!54925 (isDefined!92 (getValueByKey!140 (toList!734 lt!39467) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))

(assert (= (and d!21473 c!13558) b!84225))

(assert (= (and d!21473 (not c!13558)) b!84226))

(assert (= (and d!21473 (not res!43472)) b!84227))

(declare-fun m!87893 () Bool)

(assert (=> d!21473 m!87893))

(declare-fun m!87895 () Bool)

(assert (=> b!84225 m!87895))

(assert (=> b!84225 m!87013))

(assert (=> b!84225 m!87013))

(declare-fun m!87897 () Bool)

(assert (=> b!84225 m!87897))

(assert (=> b!84227 m!87013))

(assert (=> b!84227 m!87013))

(assert (=> b!84227 m!87897))

(assert (=> d!21155 d!21473))

(declare-fun e!54927 () Option!146)

(declare-fun b!84230 () Bool)

(assert (=> b!84230 (= e!54927 (getValueByKey!140 (t!5196 lt!39469) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(declare-fun d!21475 () Bool)

(declare-fun c!13559 () Bool)

(assert (=> d!21475 (= c!13559 (and ((_ is Cons!1500) lt!39469) (= (_1!1102 (h!2090 lt!39469)) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))

(declare-fun e!54926 () Option!146)

(assert (=> d!21475 (= (getValueByKey!140 lt!39469 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))) e!54926)))

(declare-fun b!84228 () Bool)

(assert (=> b!84228 (= e!54926 (Some!145 (_2!1102 (h!2090 lt!39469))))))

(declare-fun b!84229 () Bool)

(assert (=> b!84229 (= e!54926 e!54927)))

(declare-fun c!13560 () Bool)

(assert (=> b!84229 (= c!13560 (and ((_ is Cons!1500) lt!39469) (not (= (_1!1102 (h!2090 lt!39469)) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))))

(declare-fun b!84231 () Bool)

(assert (=> b!84231 (= e!54927 None!144)))

(assert (= (and d!21475 c!13559) b!84228))

(assert (= (and d!21475 (not c!13559)) b!84229))

(assert (= (and b!84229 c!13560) b!84230))

(assert (= (and b!84229 (not c!13560)) b!84231))

(declare-fun m!87899 () Bool)

(assert (=> b!84230 m!87899))

(assert (=> d!21155 d!21475))

(declare-fun d!21477 () Bool)

(assert (=> d!21477 (= (getValueByKey!140 lt!39469 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))) (Some!145 (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(declare-fun lt!39711 () Unit!2413)

(assert (=> d!21477 (= lt!39711 (choose!493 lt!39469 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(declare-fun e!54928 () Bool)

(assert (=> d!21477 e!54928))

(declare-fun res!43473 () Bool)

(assert (=> d!21477 (=> (not res!43473) (not e!54928))))

(assert (=> d!21477 (= res!43473 (isStrictlySorted!284 lt!39469))))

(assert (=> d!21477 (= (lemmaContainsTupThenGetReturnValue!57 lt!39469 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))) lt!39711)))

(declare-fun b!84232 () Bool)

(declare-fun res!43474 () Bool)

(assert (=> b!84232 (=> (not res!43474) (not e!54928))))

(assert (=> b!84232 (= res!43474 (containsKey!143 lt!39469 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(declare-fun b!84233 () Bool)

(assert (=> b!84233 (= e!54928 (contains!746 lt!39469 (tuple2!2183 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))

(assert (= (and d!21477 res!43473) b!84232))

(assert (= (and b!84232 res!43474) b!84233))

(assert (=> d!21477 m!87007))

(declare-fun m!87901 () Bool)

(assert (=> d!21477 m!87901))

(declare-fun m!87903 () Bool)

(assert (=> d!21477 m!87903))

(declare-fun m!87905 () Bool)

(assert (=> b!84232 m!87905))

(declare-fun m!87907 () Bool)

(assert (=> b!84233 m!87907))

(assert (=> d!21155 d!21477))

(declare-fun c!13561 () Bool)

(declare-fun e!54929 () List!1504)

(declare-fun c!13564 () Bool)

(declare-fun b!84235 () Bool)

(assert (=> b!84235 (= e!54929 (ite c!13564 (t!5196 (toList!734 (+!105 lt!38773 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))) (ite c!13561 (Cons!1500 (h!2090 (toList!734 (+!105 lt!38773 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))) (t!5196 (toList!734 (+!105 lt!38773 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))) Nil!1501)))))

(declare-fun c!13562 () Bool)

(declare-fun bm!7923 () Bool)

(declare-fun call!7926 () List!1504)

(assert (=> bm!7923 (= call!7926 ($colon$colon!70 e!54929 (ite c!13562 (h!2090 (toList!734 (+!105 lt!38773 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))) (tuple2!2183 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))))

(declare-fun c!13563 () Bool)

(assert (=> bm!7923 (= c!13563 c!13562)))

(declare-fun b!84236 () Bool)

(declare-fun e!54933 () List!1504)

(declare-fun call!7928 () List!1504)

(assert (=> b!84236 (= e!54933 call!7928)))

(declare-fun b!84237 () Bool)

(declare-fun e!54931 () List!1504)

(assert (=> b!84237 (= e!54931 call!7926)))

(declare-fun bm!7924 () Bool)

(assert (=> bm!7924 (= call!7928 call!7926)))

(declare-fun bm!7925 () Bool)

(declare-fun call!7927 () List!1504)

(assert (=> bm!7925 (= call!7927 call!7928)))

(declare-fun b!84238 () Bool)

(assert (=> b!84238 (= e!54929 (insertStrictlySorted!60 (t!5196 (toList!734 (+!105 lt!38773 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(declare-fun b!84239 () Bool)

(declare-fun e!54932 () List!1504)

(assert (=> b!84239 (= e!54932 call!7927)))

(declare-fun b!84240 () Bool)

(assert (=> b!84240 (= e!54931 e!54933)))

(assert (=> b!84240 (= c!13564 (and ((_ is Cons!1500) (toList!734 (+!105 lt!38773 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))) (= (_1!1102 (h!2090 (toList!734 (+!105 lt!38773 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))

(declare-fun e!54930 () Bool)

(declare-fun b!84241 () Bool)

(declare-fun lt!39712 () List!1504)

(assert (=> b!84241 (= e!54930 (contains!746 lt!39712 (tuple2!2183 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))

(declare-fun b!84234 () Bool)

(declare-fun res!43476 () Bool)

(assert (=> b!84234 (=> (not res!43476) (not e!54930))))

(assert (=> b!84234 (= res!43476 (containsKey!143 lt!39712 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(declare-fun d!21479 () Bool)

(assert (=> d!21479 e!54930))

(declare-fun res!43475 () Bool)

(assert (=> d!21479 (=> (not res!43475) (not e!54930))))

(assert (=> d!21479 (= res!43475 (isStrictlySorted!284 lt!39712))))

(assert (=> d!21479 (= lt!39712 e!54931)))

(assert (=> d!21479 (= c!13562 (and ((_ is Cons!1500) (toList!734 (+!105 lt!38773 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))) (bvslt (_1!1102 (h!2090 (toList!734 (+!105 lt!38773 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))

(assert (=> d!21479 (isStrictlySorted!284 (toList!734 (+!105 lt!38773 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(assert (=> d!21479 (= (insertStrictlySorted!60 (toList!734 (+!105 lt!38773 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))) lt!39712)))

(declare-fun b!84242 () Bool)

(assert (=> b!84242 (= e!54932 call!7927)))

(declare-fun b!84243 () Bool)

(assert (=> b!84243 (= c!13561 (and ((_ is Cons!1500) (toList!734 (+!105 lt!38773 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))) (bvsgt (_1!1102 (h!2090 (toList!734 (+!105 lt!38773 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))

(assert (=> b!84243 (= e!54933 e!54932)))

(assert (= (and d!21479 c!13562) b!84237))

(assert (= (and d!21479 (not c!13562)) b!84240))

(assert (= (and b!84240 c!13564) b!84236))

(assert (= (and b!84240 (not c!13564)) b!84243))

(assert (= (and b!84243 c!13561) b!84239))

(assert (= (and b!84243 (not c!13561)) b!84242))

(assert (= (or b!84239 b!84242) bm!7925))

(assert (= (or b!84236 bm!7925) bm!7924))

(assert (= (or b!84237 bm!7924) bm!7923))

(assert (= (and bm!7923 c!13563) b!84238))

(assert (= (and bm!7923 (not c!13563)) b!84235))

(assert (= (and d!21479 res!43475) b!84234))

(assert (= (and b!84234 res!43476) b!84241))

(declare-fun m!87909 () Bool)

(assert (=> d!21479 m!87909))

(declare-fun m!87911 () Bool)

(assert (=> d!21479 m!87911))

(declare-fun m!87913 () Bool)

(assert (=> b!84238 m!87913))

(declare-fun m!87915 () Bool)

(assert (=> bm!7923 m!87915))

(declare-fun m!87917 () Bool)

(assert (=> b!84234 m!87917))

(declare-fun m!87919 () Bool)

(assert (=> b!84241 m!87919))

(assert (=> d!21155 d!21479))

(declare-fun d!21481 () Bool)

(declare-fun res!43477 () Bool)

(declare-fun e!54934 () Bool)

(assert (=> d!21481 (=> res!43477 e!54934)))

(assert (=> d!21481 (= res!43477 (and ((_ is Cons!1500) lt!39300) (= (_1!1102 (h!2090 lt!39300)) (_1!1102 lt!38772))))))

(assert (=> d!21481 (= (containsKey!143 lt!39300 (_1!1102 lt!38772)) e!54934)))

(declare-fun b!84244 () Bool)

(declare-fun e!54935 () Bool)

(assert (=> b!84244 (= e!54934 e!54935)))

(declare-fun res!43478 () Bool)

(assert (=> b!84244 (=> (not res!43478) (not e!54935))))

(assert (=> b!84244 (= res!43478 (and (or (not ((_ is Cons!1500) lt!39300)) (bvsle (_1!1102 (h!2090 lt!39300)) (_1!1102 lt!38772))) ((_ is Cons!1500) lt!39300) (bvslt (_1!1102 (h!2090 lt!39300)) (_1!1102 lt!38772))))))

(declare-fun b!84245 () Bool)

(assert (=> b!84245 (= e!54935 (containsKey!143 (t!5196 lt!39300) (_1!1102 lt!38772)))))

(assert (= (and d!21481 (not res!43477)) b!84244))

(assert (= (and b!84244 res!43478) b!84245))

(declare-fun m!87921 () Bool)

(assert (=> b!84245 m!87921))

(assert (=> b!83505 d!21481))

(declare-fun d!21483 () Bool)

(declare-fun res!43479 () Bool)

(declare-fun e!54936 () Bool)

(assert (=> d!21483 (=> res!43479 e!54936)))

(assert (=> d!21483 (= res!43479 (or ((_ is Nil!1501) lt!39517) ((_ is Nil!1501) (t!5196 lt!39517))))))

(assert (=> d!21483 (= (isStrictlySorted!284 lt!39517) e!54936)))

(declare-fun b!84246 () Bool)

(declare-fun e!54937 () Bool)

(assert (=> b!84246 (= e!54936 e!54937)))

(declare-fun res!43480 () Bool)

(assert (=> b!84246 (=> (not res!43480) (not e!54937))))

(assert (=> b!84246 (= res!43480 (bvslt (_1!1102 (h!2090 lt!39517)) (_1!1102 (h!2090 (t!5196 lt!39517)))))))

(declare-fun b!84247 () Bool)

(assert (=> b!84247 (= e!54937 (isStrictlySorted!284 (t!5196 lt!39517)))))

(assert (= (and d!21483 (not res!43479)) b!84246))

(assert (= (and b!84246 res!43480) b!84247))

(declare-fun m!87923 () Bool)

(assert (=> b!84247 m!87923))

(assert (=> d!21199 d!21483))

(declare-fun d!21485 () Bool)

(declare-fun res!43481 () Bool)

(declare-fun e!54938 () Bool)

(assert (=> d!21485 (=> res!43481 e!54938)))

(assert (=> d!21485 (= res!43481 (or ((_ is Nil!1501) (toList!734 lt!38773)) ((_ is Nil!1501) (t!5196 (toList!734 lt!38773)))))))

(assert (=> d!21485 (= (isStrictlySorted!284 (toList!734 lt!38773)) e!54938)))

(declare-fun b!84248 () Bool)

(declare-fun e!54939 () Bool)

(assert (=> b!84248 (= e!54938 e!54939)))

(declare-fun res!43482 () Bool)

(assert (=> b!84248 (=> (not res!43482) (not e!54939))))

(assert (=> b!84248 (= res!43482 (bvslt (_1!1102 (h!2090 (toList!734 lt!38773))) (_1!1102 (h!2090 (t!5196 (toList!734 lt!38773))))))))

(declare-fun b!84249 () Bool)

(assert (=> b!84249 (= e!54939 (isStrictlySorted!284 (t!5196 (toList!734 lt!38773))))))

(assert (= (and d!21485 (not res!43481)) b!84248))

(assert (= (and b!84248 res!43482) b!84249))

(assert (=> b!84249 m!87281))

(assert (=> d!21199 d!21485))

(declare-fun d!21487 () Bool)

(assert (not d!21487))

(assert (=> b!83312 d!21487))

(declare-fun d!21489 () Bool)

(assert (=> d!21489 (= ($colon$colon!70 e!54571 (ite c!13374 (h!2090 (toList!734 lt!38768)) (tuple2!2183 (_1!1102 lt!38779) (_2!1102 lt!38779)))) (Cons!1500 (ite c!13374 (h!2090 (toList!734 lt!38768)) (tuple2!2183 (_1!1102 lt!38779) (_2!1102 lt!38779))) e!54571))))

(assert (=> bm!7849 d!21489))

(assert (=> b!83241 d!21235))

(assert (=> b!83241 d!21237))

(assert (=> d!21173 d!21013))

(declare-fun bm!7930 () Bool)

(declare-fun lt!39715 () SeekEntryResult!236)

(declare-fun call!7933 () Bool)

(declare-fun c!13569 () Bool)

(assert (=> bm!7930 (= call!7933 (inRange!0 (ite c!13569 (index!3080 lt!39715) (index!3083 lt!39715)) (mask!6334 newMap!16)))))

(declare-fun b!84266 () Bool)

(declare-fun res!43491 () Bool)

(declare-fun e!54948 () Bool)

(assert (=> b!84266 (=> (not res!43491) (not e!54948))))

(assert (=> b!84266 (= res!43491 (= (select (arr!1904 (_keys!3984 newMap!16)) (index!3083 lt!39715)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun call!7934 () Bool)

(declare-fun bm!7931 () Bool)

(assert (=> bm!7931 (= call!7934 (arrayContainsKey!0 (_keys!3984 newMap!16) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!84267 () Bool)

(declare-fun e!54951 () Bool)

(declare-fun e!54950 () Bool)

(assert (=> b!84267 (= e!54951 e!54950)))

(declare-fun res!43492 () Bool)

(assert (=> b!84267 (= res!43492 call!7933)))

(assert (=> b!84267 (=> (not res!43492) (not e!54950))))

(declare-fun b!84268 () Bool)

(declare-fun e!54949 () Bool)

(assert (=> b!84268 (= e!54951 e!54949)))

(declare-fun c!13570 () Bool)

(assert (=> b!84268 (= c!13570 ((_ is MissingVacant!236) lt!39715))))

(declare-fun b!84269 () Bool)

(declare-fun res!43494 () Bool)

(assert (=> b!84269 (=> (not res!43494) (not e!54948))))

(assert (=> b!84269 (= res!43494 call!7933)))

(assert (=> b!84269 (= e!54949 e!54948)))

(declare-fun d!21491 () Bool)

(assert (=> d!21491 e!54951))

(assert (=> d!21491 (= c!13569 ((_ is MissingZero!236) lt!39715))))

(assert (=> d!21491 (= lt!39715 (seekEntryOrOpen!0 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (_keys!3984 newMap!16) (mask!6334 newMap!16)))))

(assert (=> d!21491 true))

(declare-fun _$34!834 () Unit!2413)

(assert (=> d!21491 (= (choose!501 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (defaultEntry!2316 newMap!16)) _$34!834)))

(declare-fun b!84270 () Bool)

(declare-fun res!43493 () Bool)

(assert (=> b!84270 (= res!43493 (= (select (arr!1904 (_keys!3984 newMap!16)) (index!3080 lt!39715)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!84270 (=> (not res!43493) (not e!54950))))

(declare-fun b!84271 () Bool)

(assert (=> b!84271 (= e!54950 (not call!7934))))

(declare-fun b!84272 () Bool)

(assert (=> b!84272 (= e!54948 (not call!7934))))

(declare-fun b!84273 () Bool)

(assert (=> b!84273 (= e!54949 ((_ is Undefined!236) lt!39715))))

(assert (= (and d!21491 c!13569) b!84267))

(assert (= (and d!21491 (not c!13569)) b!84268))

(assert (= (and b!84267 res!43492) b!84270))

(assert (= (and b!84270 res!43493) b!84271))

(assert (= (and b!84268 c!13570) b!84269))

(assert (= (and b!84268 (not c!13570)) b!84273))

(assert (= (and b!84269 res!43494) b!84266))

(assert (= (and b!84266 res!43491) b!84272))

(assert (= (or b!84267 b!84269) bm!7930))

(assert (= (or b!84271 b!84272) bm!7931))

(assert (=> bm!7931 m!85721))

(assert (=> bm!7931 m!85979))

(declare-fun m!87925 () Bool)

(assert (=> b!84266 m!87925))

(assert (=> d!21491 m!85721))

(assert (=> d!21491 m!85939))

(declare-fun m!87927 () Bool)

(assert (=> bm!7930 m!87927))

(declare-fun m!87929 () Bool)

(assert (=> b!84270 m!87929))

(assert (=> d!21173 d!21491))

(assert (=> d!21173 d!21267))

(declare-fun lt!39716 () Bool)

(declare-fun d!21493 () Bool)

(assert (=> d!21493 (= lt!39716 (select (content!89 (toList!734 lt!39270)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!54952 () Bool)

(assert (=> d!21493 (= lt!39716 e!54952)))

(declare-fun res!43496 () Bool)

(assert (=> d!21493 (=> (not res!43496) (not e!54952))))

(assert (=> d!21493 (= res!43496 ((_ is Cons!1500) (toList!734 lt!39270)))))

(assert (=> d!21493 (= (contains!746 (toList!734 lt!39270) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!39716)))

(declare-fun b!84274 () Bool)

(declare-fun e!54953 () Bool)

(assert (=> b!84274 (= e!54952 e!54953)))

(declare-fun res!43495 () Bool)

(assert (=> b!84274 (=> res!43495 e!54953)))

(assert (=> b!84274 (= res!43495 (= (h!2090 (toList!734 lt!39270)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!84275 () Bool)

(assert (=> b!84275 (= e!54953 (contains!746 (t!5196 (toList!734 lt!39270)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!21493 res!43496) b!84274))

(assert (= (and b!84274 (not res!43495)) b!84275))

(declare-fun m!87931 () Bool)

(assert (=> d!21493 m!87931))

(declare-fun m!87933 () Bool)

(assert (=> d!21493 m!87933))

(declare-fun m!87935 () Bool)

(assert (=> b!84275 m!87935))

(assert (=> b!83471 d!21493))

(declare-fun d!21495 () Bool)

(assert (=> d!21495 (= (isEmpty!339 (toList!734 lt!39036)) ((_ is Nil!1501) (toList!734 lt!39036)))))

(assert (=> d!21153 d!21495))

(declare-fun d!21497 () Bool)

(assert (=> d!21497 (= (inRange!0 (ite c!13395 (index!3080 lt!39497) (index!3083 lt!39497)) (mask!6334 newMap!16)) (and (bvsge (ite c!13395 (index!3080 lt!39497) (index!3083 lt!39497)) #b00000000000000000000000000000000) (bvslt (ite c!13395 (index!3080 lt!39497) (index!3083 lt!39497)) (bvadd (mask!6334 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!7866 d!21497))

(declare-fun d!21499 () Bool)

(declare-fun res!43497 () Bool)

(declare-fun e!54954 () Bool)

(assert (=> d!21499 (=> res!43497 e!54954)))

(assert (=> d!21499 (= res!43497 (or ((_ is Nil!1501) lt!39465) ((_ is Nil!1501) (t!5196 lt!39465))))))

(assert (=> d!21499 (= (isStrictlySorted!284 lt!39465) e!54954)))

(declare-fun b!84276 () Bool)

(declare-fun e!54955 () Bool)

(assert (=> b!84276 (= e!54954 e!54955)))

(declare-fun res!43498 () Bool)

(assert (=> b!84276 (=> (not res!43498) (not e!54955))))

(assert (=> b!84276 (= res!43498 (bvslt (_1!1102 (h!2090 lt!39465)) (_1!1102 (h!2090 (t!5196 lt!39465)))))))

(declare-fun b!84277 () Bool)

(assert (=> b!84277 (= e!54955 (isStrictlySorted!284 (t!5196 lt!39465)))))

(assert (= (and d!21499 (not res!43497)) b!84276))

(assert (= (and b!84276 res!43498) b!84277))

(declare-fun m!87937 () Bool)

(assert (=> b!84277 m!87937))

(assert (=> d!21151 d!21499))

(assert (=> d!21151 d!21485))

(assert (=> b!83587 d!21295))

(declare-fun d!21501 () Bool)

(declare-fun e!54956 () Bool)

(assert (=> d!21501 e!54956))

(declare-fun res!43500 () Bool)

(assert (=> d!21501 (=> (not res!43500) (not e!54956))))

(declare-fun lt!39718 () ListLongMap!1437)

(assert (=> d!21501 (= res!43500 (contains!744 lt!39718 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(declare-fun lt!39720 () List!1504)

(assert (=> d!21501 (= lt!39718 (ListLongMap!1438 lt!39720))))

(declare-fun lt!39717 () Unit!2413)

(declare-fun lt!39719 () Unit!2413)

(assert (=> d!21501 (= lt!39717 lt!39719)))

(assert (=> d!21501 (= (getValueByKey!140 lt!39720 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))) (Some!145 (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(assert (=> d!21501 (= lt!39719 (lemmaContainsTupThenGetReturnValue!57 lt!39720 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(assert (=> d!21501 (= lt!39720 (insertStrictlySorted!60 (toList!734 (map!1193 newMap!16)) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(assert (=> d!21501 (= (+!105 (map!1193 newMap!16) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) lt!39718)))

(declare-fun b!84278 () Bool)

(declare-fun res!43499 () Bool)

(assert (=> b!84278 (=> (not res!43499) (not e!54956))))

(assert (=> b!84278 (= res!43499 (= (getValueByKey!140 (toList!734 lt!39718) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))) (Some!145 (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))

(declare-fun b!84279 () Bool)

(assert (=> b!84279 (= e!54956 (contains!746 (toList!734 lt!39718) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))

(assert (= (and d!21501 res!43500) b!84278))

(assert (= (and b!84278 res!43499) b!84279))

(declare-fun m!87939 () Bool)

(assert (=> d!21501 m!87939))

(declare-fun m!87941 () Bool)

(assert (=> d!21501 m!87941))

(declare-fun m!87943 () Bool)

(assert (=> d!21501 m!87943))

(declare-fun m!87945 () Bool)

(assert (=> d!21501 m!87945))

(declare-fun m!87947 () Bool)

(assert (=> b!84278 m!87947))

(declare-fun m!87949 () Bool)

(assert (=> b!84279 m!87949))

(assert (=> b!83587 d!21501))

(assert (=> b!83587 d!20947))

(assert (=> b!83454 d!21329))

(assert (=> b!83751 d!20911))

(declare-fun lt!39721 () Bool)

(declare-fun d!21503 () Bool)

(assert (=> d!21503 (= lt!39721 (select (content!89 (toList!734 lt!39190)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))

(declare-fun e!54957 () Bool)

(assert (=> d!21503 (= lt!39721 e!54957)))

(declare-fun res!43502 () Bool)

(assert (=> d!21503 (=> (not res!43502) (not e!54957))))

(assert (=> d!21503 (= res!43502 ((_ is Cons!1500) (toList!734 lt!39190)))))

(assert (=> d!21503 (= (contains!746 (toList!734 lt!39190) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) lt!39721)))

(declare-fun b!84280 () Bool)

(declare-fun e!54958 () Bool)

(assert (=> b!84280 (= e!54957 e!54958)))

(declare-fun res!43501 () Bool)

(assert (=> b!84280 (=> res!43501 e!54958)))

(assert (=> b!84280 (= res!43501 (= (h!2090 (toList!734 lt!39190)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))

(declare-fun b!84281 () Bool)

(assert (=> b!84281 (= e!54958 (contains!746 (t!5196 (toList!734 lt!39190)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))

(assert (= (and d!21503 res!43502) b!84280))

(assert (= (and b!84280 (not res!43501)) b!84281))

(declare-fun m!87951 () Bool)

(assert (=> d!21503 m!87951))

(declare-fun m!87953 () Bool)

(assert (=> d!21503 m!87953))

(declare-fun m!87955 () Bool)

(assert (=> b!84281 m!87955))

(assert (=> b!83330 d!21503))

(declare-fun d!21505 () Bool)

(declare-fun e!54973 () Bool)

(assert (=> d!21505 e!54973))

(declare-fun c!13579 () Bool)

(declare-fun lt!39727 () SeekEntryResult!236)

(assert (=> d!21505 (= c!13579 (and ((_ is Intermediate!236) lt!39727) (undefined!1048 lt!39727)))))

(declare-fun e!54971 () SeekEntryResult!236)

(assert (=> d!21505 (= lt!39727 e!54971)))

(declare-fun c!13577 () Bool)

(assert (=> d!21505 (= c!13577 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(declare-fun lt!39726 () (_ BitVec 64))

(assert (=> d!21505 (= lt!39726 (select (arr!1904 (_keys!3984 newMap!16)) (toIndex!0 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (mask!6334 newMap!16))))))

(assert (=> d!21505 (validMask!0 (mask!6334 newMap!16))))

(assert (=> d!21505 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (mask!6334 newMap!16)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (_keys!3984 newMap!16) (mask!6334 newMap!16)) lt!39727)))

(declare-fun b!84300 () Bool)

(assert (=> b!84300 (and (bvsge (index!3082 lt!39727) #b00000000000000000000000000000000) (bvslt (index!3082 lt!39727) (size!2147 (_keys!3984 newMap!16))))))

(declare-fun res!43511 () Bool)

(assert (=> b!84300 (= res!43511 (= (select (arr!1904 (_keys!3984 newMap!16)) (index!3082 lt!39727)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))

(declare-fun e!54969 () Bool)

(assert (=> b!84300 (=> res!43511 e!54969)))

(declare-fun e!54970 () Bool)

(assert (=> b!84300 (= e!54970 e!54969)))

(declare-fun b!84301 () Bool)

(assert (=> b!84301 (= e!54973 (bvsge (x!11845 lt!39727) #b01111111111111111111111111111110))))

(declare-fun e!54972 () SeekEntryResult!236)

(declare-fun b!84302 () Bool)

(assert (=> b!84302 (= e!54972 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (mask!6334 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (mask!6334 newMap!16)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (_keys!3984 newMap!16) (mask!6334 newMap!16)))))

(declare-fun b!84303 () Bool)

(assert (=> b!84303 (= e!54973 e!54970)))

(declare-fun res!43510 () Bool)

(assert (=> b!84303 (= res!43510 (and ((_ is Intermediate!236) lt!39727) (not (undefined!1048 lt!39727)) (bvslt (x!11845 lt!39727) #b01111111111111111111111111111110) (bvsge (x!11845 lt!39727) #b00000000000000000000000000000000) (bvsge (x!11845 lt!39727) #b00000000000000000000000000000000)))))

(assert (=> b!84303 (=> (not res!43510) (not e!54970))))

(declare-fun b!84304 () Bool)

(assert (=> b!84304 (and (bvsge (index!3082 lt!39727) #b00000000000000000000000000000000) (bvslt (index!3082 lt!39727) (size!2147 (_keys!3984 newMap!16))))))

(assert (=> b!84304 (= e!54969 (= (select (arr!1904 (_keys!3984 newMap!16)) (index!3082 lt!39727)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!84305 () Bool)

(assert (=> b!84305 (and (bvsge (index!3082 lt!39727) #b00000000000000000000000000000000) (bvslt (index!3082 lt!39727) (size!2147 (_keys!3984 newMap!16))))))

(declare-fun res!43509 () Bool)

(assert (=> b!84305 (= res!43509 (= (select (arr!1904 (_keys!3984 newMap!16)) (index!3082 lt!39727)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!84305 (=> res!43509 e!54969)))

(declare-fun b!84306 () Bool)

(assert (=> b!84306 (= e!54971 (Intermediate!236 true (toIndex!0 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (mask!6334 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!84307 () Bool)

(assert (=> b!84307 (= e!54972 (Intermediate!236 false (toIndex!0 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (mask!6334 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!84308 () Bool)

(assert (=> b!84308 (= e!54971 e!54972)))

(declare-fun c!13578 () Bool)

(assert (=> b!84308 (= c!13578 (or (= lt!39726 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) (= (bvadd lt!39726 lt!39726) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!21505 c!13577) b!84306))

(assert (= (and d!21505 (not c!13577)) b!84308))

(assert (= (and b!84308 c!13578) b!84307))

(assert (= (and b!84308 (not c!13578)) b!84302))

(assert (= (and d!21505 c!13579) b!84301))

(assert (= (and d!21505 (not c!13579)) b!84303))

(assert (= (and b!84303 res!43510) b!84300))

(assert (= (and b!84300 (not res!43511)) b!84305))

(assert (= (and b!84305 (not res!43509)) b!84304))

(declare-fun m!87957 () Bool)

(assert (=> b!84304 m!87957))

(assert (=> b!84300 m!87957))

(assert (=> b!84302 m!86433))

(declare-fun m!87959 () Bool)

(assert (=> b!84302 m!87959))

(assert (=> b!84302 m!87959))

(assert (=> b!84302 m!85721))

(declare-fun m!87961 () Bool)

(assert (=> b!84302 m!87961))

(assert (=> b!84305 m!87957))

(assert (=> d!21505 m!86433))

(declare-fun m!87963 () Bool)

(assert (=> d!21505 m!87963))

(assert (=> d!21505 m!86223))

(assert (=> d!21013 d!21505))

(declare-fun d!21507 () Bool)

(declare-fun lt!39733 () (_ BitVec 32))

(declare-fun lt!39732 () (_ BitVec 32))

(assert (=> d!21507 (= lt!39733 (bvmul (bvxor lt!39732 (bvlshr lt!39732 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!21507 (= lt!39732 ((_ extract 31 0) (bvand (bvxor (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (bvlshr (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!21507 (and (bvsge (mask!6334 newMap!16) #b00000000000000000000000000000000) (let ((res!43512 (let ((h!2094 ((_ extract 31 0) (bvand (bvxor (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (bvlshr (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!11948 (bvmul (bvxor h!2094 (bvlshr h!2094 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!11948 (bvlshr x!11948 #b00000000000000000000000000001101)) (mask!6334 newMap!16)))))) (and (bvslt res!43512 (bvadd (mask!6334 newMap!16) #b00000000000000000000000000000001)) (bvsge res!43512 #b00000000000000000000000000000000))))))

(assert (=> d!21507 (= (toIndex!0 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (mask!6334 newMap!16)) (bvand (bvxor lt!39733 (bvlshr lt!39733 #b00000000000000000000000000001101)) (mask!6334 newMap!16)))))

(assert (=> d!21013 d!21507))

(assert (=> d!21013 d!21267))

(declare-fun e!54974 () List!1504)

(declare-fun c!13583 () Bool)

(declare-fun b!84310 () Bool)

(declare-fun c!13580 () Bool)

(assert (=> b!84310 (= e!54974 (ite c!13583 (t!5196 (t!5196 (toList!734 lt!38771))) (ite c!13580 (Cons!1500 (h!2090 (t!5196 (toList!734 lt!38771))) (t!5196 (t!5196 (toList!734 lt!38771)))) Nil!1501)))))

(declare-fun bm!7932 () Bool)

(declare-fun c!13581 () Bool)

(declare-fun call!7935 () List!1504)

(assert (=> bm!7932 (= call!7935 ($colon$colon!70 e!54974 (ite c!13581 (h!2090 (t!5196 (toList!734 lt!38771))) (tuple2!2183 (_1!1102 lt!38775) (_2!1102 lt!38775)))))))

(declare-fun c!13582 () Bool)

(assert (=> bm!7932 (= c!13582 c!13581)))

(declare-fun b!84311 () Bool)

(declare-fun e!54978 () List!1504)

(declare-fun call!7937 () List!1504)

(assert (=> b!84311 (= e!54978 call!7937)))

(declare-fun b!84312 () Bool)

(declare-fun e!54976 () List!1504)

(assert (=> b!84312 (= e!54976 call!7935)))

(declare-fun bm!7933 () Bool)

(assert (=> bm!7933 (= call!7937 call!7935)))

(declare-fun bm!7934 () Bool)

(declare-fun call!7936 () List!1504)

(assert (=> bm!7934 (= call!7936 call!7937)))

(declare-fun b!84313 () Bool)

(assert (=> b!84313 (= e!54974 (insertStrictlySorted!60 (t!5196 (t!5196 (toList!734 lt!38771))) (_1!1102 lt!38775) (_2!1102 lt!38775)))))

(declare-fun b!84314 () Bool)

(declare-fun e!54977 () List!1504)

(assert (=> b!84314 (= e!54977 call!7936)))

(declare-fun b!84315 () Bool)

(assert (=> b!84315 (= e!54976 e!54978)))

(assert (=> b!84315 (= c!13583 (and ((_ is Cons!1500) (t!5196 (toList!734 lt!38771))) (= (_1!1102 (h!2090 (t!5196 (toList!734 lt!38771)))) (_1!1102 lt!38775))))))

(declare-fun b!84316 () Bool)

(declare-fun e!54975 () Bool)

(declare-fun lt!39734 () List!1504)

(assert (=> b!84316 (= e!54975 (contains!746 lt!39734 (tuple2!2183 (_1!1102 lt!38775) (_2!1102 lt!38775))))))

(declare-fun b!84309 () Bool)

(declare-fun res!43514 () Bool)

(assert (=> b!84309 (=> (not res!43514) (not e!54975))))

(assert (=> b!84309 (= res!43514 (containsKey!143 lt!39734 (_1!1102 lt!38775)))))

(declare-fun d!21509 () Bool)

(assert (=> d!21509 e!54975))

(declare-fun res!43513 () Bool)

(assert (=> d!21509 (=> (not res!43513) (not e!54975))))

(assert (=> d!21509 (= res!43513 (isStrictlySorted!284 lt!39734))))

(assert (=> d!21509 (= lt!39734 e!54976)))

(assert (=> d!21509 (= c!13581 (and ((_ is Cons!1500) (t!5196 (toList!734 lt!38771))) (bvslt (_1!1102 (h!2090 (t!5196 (toList!734 lt!38771)))) (_1!1102 lt!38775))))))

(assert (=> d!21509 (isStrictlySorted!284 (t!5196 (toList!734 lt!38771)))))

(assert (=> d!21509 (= (insertStrictlySorted!60 (t!5196 (toList!734 lt!38771)) (_1!1102 lt!38775) (_2!1102 lt!38775)) lt!39734)))

(declare-fun b!84317 () Bool)

(assert (=> b!84317 (= e!54977 call!7936)))

(declare-fun b!84318 () Bool)

(assert (=> b!84318 (= c!13580 (and ((_ is Cons!1500) (t!5196 (toList!734 lt!38771))) (bvsgt (_1!1102 (h!2090 (t!5196 (toList!734 lt!38771)))) (_1!1102 lt!38775))))))

(assert (=> b!84318 (= e!54978 e!54977)))

(assert (= (and d!21509 c!13581) b!84312))

(assert (= (and d!21509 (not c!13581)) b!84315))

(assert (= (and b!84315 c!13583) b!84311))

(assert (= (and b!84315 (not c!13583)) b!84318))

(assert (= (and b!84318 c!13580) b!84314))

(assert (= (and b!84318 (not c!13580)) b!84317))

(assert (= (or b!84314 b!84317) bm!7934))

(assert (= (or b!84311 bm!7934) bm!7933))

(assert (= (or b!84312 bm!7933) bm!7932))

(assert (= (and bm!7932 c!13582) b!84313))

(assert (= (and bm!7932 (not c!13582)) b!84310))

(assert (= (and d!21509 res!43513) b!84309))

(assert (= (and b!84309 res!43514) b!84316))

(declare-fun m!87965 () Bool)

(assert (=> d!21509 m!87965))

(declare-fun m!87967 () Bool)

(assert (=> d!21509 m!87967))

(declare-fun m!87969 () Bool)

(assert (=> b!84313 m!87969))

(declare-fun m!87971 () Bool)

(assert (=> bm!7932 m!87971))

(declare-fun m!87973 () Bool)

(assert (=> b!84309 m!87973))

(declare-fun m!87975 () Bool)

(assert (=> b!84316 m!87975))

(assert (=> b!83741 d!21509))

(declare-fun d!21511 () Bool)

(declare-fun e!54979 () Bool)

(assert (=> d!21511 e!54979))

(declare-fun res!43516 () Bool)

(assert (=> d!21511 (=> (not res!43516) (not e!54979))))

(declare-fun lt!39736 () ListLongMap!1437)

(assert (=> d!21511 (= res!43516 (contains!744 lt!39736 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16))))))))

(declare-fun lt!39738 () List!1504)

(assert (=> d!21511 (= lt!39736 (ListLongMap!1438 lt!39738))))

(declare-fun lt!39735 () Unit!2413)

(declare-fun lt!39737 () Unit!2413)

(assert (=> d!21511 (= lt!39735 lt!39737)))

(assert (=> d!21511 (= (getValueByKey!140 lt!39738 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16))))) (Some!145 (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16))))))))

(assert (=> d!21511 (= lt!39737 (lemmaContainsTupThenGetReturnValue!57 lt!39738 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16)))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16))))))))

(assert (=> d!21511 (= lt!39738 (insertStrictlySorted!60 (toList!734 call!7858) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16)))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16))))))))

(assert (=> d!21511 (= (+!105 call!7858 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16)))) lt!39736)))

(declare-fun b!84319 () Bool)

(declare-fun res!43515 () Bool)

(assert (=> b!84319 (=> (not res!43515) (not e!54979))))

(assert (=> b!84319 (= res!43515 (= (getValueByKey!140 (toList!734 lt!39736) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16))))) (Some!145 (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16)))))))))

(declare-fun b!84320 () Bool)

(assert (=> b!84320 (= e!54979 (contains!746 (toList!734 lt!39736) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16)))))))

(assert (= (and d!21511 res!43516) b!84319))

(assert (= (and b!84319 res!43515) b!84320))

(declare-fun m!87977 () Bool)

(assert (=> d!21511 m!87977))

(declare-fun m!87979 () Bool)

(assert (=> d!21511 m!87979))

(declare-fun m!87981 () Bool)

(assert (=> d!21511 m!87981))

(declare-fun m!87983 () Bool)

(assert (=> d!21511 m!87983))

(declare-fun m!87985 () Bool)

(assert (=> b!84319 m!87985))

(declare-fun m!87987 () Bool)

(assert (=> b!84320 m!87987))

(assert (=> b!83655 d!21511))

(declare-fun d!21513 () Bool)

(declare-fun lt!39739 () Bool)

(assert (=> d!21513 (= lt!39739 (select (content!89 (toList!734 lt!39475)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))

(declare-fun e!54980 () Bool)

(assert (=> d!21513 (= lt!39739 e!54980)))

(declare-fun res!43518 () Bool)

(assert (=> d!21513 (=> (not res!43518) (not e!54980))))

(assert (=> d!21513 (= res!43518 ((_ is Cons!1500) (toList!734 lt!39475)))))

(assert (=> d!21513 (= (contains!746 (toList!734 lt!39475) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) lt!39739)))

(declare-fun b!84321 () Bool)

(declare-fun e!54981 () Bool)

(assert (=> b!84321 (= e!54980 e!54981)))

(declare-fun res!43517 () Bool)

(assert (=> b!84321 (=> res!43517 e!54981)))

(assert (=> b!84321 (= res!43517 (= (h!2090 (toList!734 lt!39475)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))

(declare-fun b!84322 () Bool)

(assert (=> b!84322 (= e!54981 (contains!746 (t!5196 (toList!734 lt!39475)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))

(assert (= (and d!21513 res!43518) b!84321))

(assert (= (and b!84321 (not res!43517)) b!84322))

(declare-fun m!87989 () Bool)

(assert (=> d!21513 m!87989))

(declare-fun m!87991 () Bool)

(assert (=> d!21513 m!87991))

(declare-fun m!87993 () Bool)

(assert (=> b!84322 m!87993))

(assert (=> b!83688 d!21513))

(declare-fun d!21515 () Bool)

(declare-fun lt!39740 () Bool)

(assert (=> d!21515 (= lt!39740 (select (content!89 (toList!734 lt!39500)) (ite c!13224 (ite c!13215 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(declare-fun e!54982 () Bool)

(assert (=> d!21515 (= lt!39740 e!54982)))

(declare-fun res!43520 () Bool)

(assert (=> d!21515 (=> (not res!43520) (not e!54982))))

(assert (=> d!21515 (= res!43520 ((_ is Cons!1500) (toList!734 lt!39500)))))

(assert (=> d!21515 (= (contains!746 (toList!734 lt!39500) (ite c!13224 (ite c!13215 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))) lt!39740)))

(declare-fun b!84323 () Bool)

(declare-fun e!54983 () Bool)

(assert (=> b!84323 (= e!54982 e!54983)))

(declare-fun res!43519 () Bool)

(assert (=> b!84323 (=> res!43519 e!54983)))

(assert (=> b!84323 (= res!43519 (= (h!2090 (toList!734 lt!39500)) (ite c!13224 (ite c!13215 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(declare-fun b!84324 () Bool)

(assert (=> b!84324 (= e!54983 (contains!746 (t!5196 (toList!734 lt!39500)) (ite c!13224 (ite c!13215 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(assert (= (and d!21515 res!43520) b!84323))

(assert (= (and b!84323 (not res!43519)) b!84324))

(declare-fun m!87995 () Bool)

(assert (=> d!21515 m!87995))

(declare-fun m!87997 () Bool)

(assert (=> d!21515 m!87997))

(declare-fun m!87999 () Bool)

(assert (=> b!84324 m!87999))

(assert (=> b!83727 d!21515))

(declare-fun d!21517 () Bool)

(assert (=> d!21517 (= (content!88 Nil!1502) ((as const (Array (_ BitVec 64) Bool)) false))))

(assert (=> d!20973 d!21517))

(declare-fun lt!39741 () Bool)

(declare-fun d!21519 () Bool)

(assert (=> d!21519 (= lt!39741 (select (content!89 (toList!734 lt!39308)) (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))))

(declare-fun e!54984 () Bool)

(assert (=> d!21519 (= lt!39741 e!54984)))

(declare-fun res!43522 () Bool)

(assert (=> d!21519 (=> (not res!43522) (not e!54984))))

(assert (=> d!21519 (= res!43522 ((_ is Cons!1500) (toList!734 lt!39308)))))

(assert (=> d!21519 (= (contains!746 (toList!734 lt!39308) (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))) lt!39741)))

(declare-fun b!84325 () Bool)

(declare-fun e!54985 () Bool)

(assert (=> b!84325 (= e!54984 e!54985)))

(declare-fun res!43521 () Bool)

(assert (=> b!84325 (=> res!43521 e!54985)))

(assert (=> b!84325 (= res!43521 (= (h!2090 (toList!734 lt!39308)) (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))))

(declare-fun b!84326 () Bool)

(assert (=> b!84326 (= e!54985 (contains!746 (t!5196 (toList!734 lt!39308)) (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))))

(assert (= (and d!21519 res!43522) b!84325))

(assert (= (and b!84325 (not res!43521)) b!84326))

(declare-fun m!88001 () Bool)

(assert (=> d!21519 m!88001))

(declare-fun m!88003 () Bool)

(assert (=> d!21519 m!88003))

(declare-fun m!88005 () Bool)

(assert (=> b!84326 m!88005))

(assert (=> b!83523 d!21519))

(declare-fun d!21521 () Bool)

(declare-fun e!54986 () Bool)

(assert (=> d!21521 e!54986))

(declare-fun res!43524 () Bool)

(assert (=> d!21521 (=> (not res!43524) (not e!54986))))

(declare-fun lt!39743 () ListLongMap!1437)

(assert (=> d!21521 (= res!43524 (contains!744 lt!39743 (_1!1102 (ite (or c!13326 c!13321) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16))))))))

(declare-fun lt!39745 () List!1504)

(assert (=> d!21521 (= lt!39743 (ListLongMap!1438 lt!39745))))

(declare-fun lt!39742 () Unit!2413)

(declare-fun lt!39744 () Unit!2413)

(assert (=> d!21521 (= lt!39742 lt!39744)))

(assert (=> d!21521 (= (getValueByKey!140 lt!39745 (_1!1102 (ite (or c!13326 c!13321) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16))))) (Some!145 (_2!1102 (ite (or c!13326 c!13321) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16))))))))

(assert (=> d!21521 (= lt!39744 (lemmaContainsTupThenGetReturnValue!57 lt!39745 (_1!1102 (ite (or c!13326 c!13321) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16)))) (_2!1102 (ite (or c!13326 c!13321) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16))))))))

(assert (=> d!21521 (= lt!39745 (insertStrictlySorted!60 (toList!734 (ite c!13326 call!7831 (ite c!13321 call!7826 call!7827))) (_1!1102 (ite (or c!13326 c!13321) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16)))) (_2!1102 (ite (or c!13326 c!13321) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16))))))))

(assert (=> d!21521 (= (+!105 (ite c!13326 call!7831 (ite c!13321 call!7826 call!7827)) (ite (or c!13326 c!13321) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16)))) lt!39743)))

(declare-fun b!84327 () Bool)

(declare-fun res!43523 () Bool)

(assert (=> b!84327 (=> (not res!43523) (not e!54986))))

(assert (=> b!84327 (= res!43523 (= (getValueByKey!140 (toList!734 lt!39743) (_1!1102 (ite (or c!13326 c!13321) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16))))) (Some!145 (_2!1102 (ite (or c!13326 c!13321) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16)))))))))

(declare-fun b!84328 () Bool)

(assert (=> b!84328 (= e!54986 (contains!746 (toList!734 lt!39743) (ite (or c!13326 c!13321) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16)))))))

(assert (= (and d!21521 res!43524) b!84327))

(assert (= (and b!84327 res!43523) b!84328))

(declare-fun m!88007 () Bool)

(assert (=> d!21521 m!88007))

(declare-fun m!88009 () Bool)

(assert (=> d!21521 m!88009))

(declare-fun m!88011 () Bool)

(assert (=> d!21521 m!88011))

(declare-fun m!88013 () Bool)

(assert (=> d!21521 m!88013))

(declare-fun m!88015 () Bool)

(assert (=> b!84327 m!88015))

(declare-fun m!88017 () Bool)

(assert (=> b!84328 m!88017))

(assert (=> bm!7822 d!21521))

(declare-fun d!21523 () Bool)

(declare-fun e!54987 () Bool)

(assert (=> d!21523 e!54987))

(declare-fun res!43526 () Bool)

(assert (=> d!21523 (=> (not res!43526) (not e!54987))))

(declare-fun lt!39747 () ListLongMap!1437)

(assert (=> d!21523 (= res!43526 (contains!744 lt!39747 (_1!1102 (tuple2!2183 lt!39142 (zeroValue!2210 newMap!16)))))))

(declare-fun lt!39749 () List!1504)

(assert (=> d!21523 (= lt!39747 (ListLongMap!1438 lt!39749))))

(declare-fun lt!39746 () Unit!2413)

(declare-fun lt!39748 () Unit!2413)

(assert (=> d!21523 (= lt!39746 lt!39748)))

(assert (=> d!21523 (= (getValueByKey!140 lt!39749 (_1!1102 (tuple2!2183 lt!39142 (zeroValue!2210 newMap!16)))) (Some!145 (_2!1102 (tuple2!2183 lt!39142 (zeroValue!2210 newMap!16)))))))

(assert (=> d!21523 (= lt!39748 (lemmaContainsTupThenGetReturnValue!57 lt!39749 (_1!1102 (tuple2!2183 lt!39142 (zeroValue!2210 newMap!16))) (_2!1102 (tuple2!2183 lt!39142 (zeroValue!2210 newMap!16)))))))

(assert (=> d!21523 (= lt!39749 (insertStrictlySorted!60 (toList!734 lt!39138) (_1!1102 (tuple2!2183 lt!39142 (zeroValue!2210 newMap!16))) (_2!1102 (tuple2!2183 lt!39142 (zeroValue!2210 newMap!16)))))))

(assert (=> d!21523 (= (+!105 lt!39138 (tuple2!2183 lt!39142 (zeroValue!2210 newMap!16))) lt!39747)))

(declare-fun b!84329 () Bool)

(declare-fun res!43525 () Bool)

(assert (=> b!84329 (=> (not res!43525) (not e!54987))))

(assert (=> b!84329 (= res!43525 (= (getValueByKey!140 (toList!734 lt!39747) (_1!1102 (tuple2!2183 lt!39142 (zeroValue!2210 newMap!16)))) (Some!145 (_2!1102 (tuple2!2183 lt!39142 (zeroValue!2210 newMap!16))))))))

(declare-fun b!84330 () Bool)

(assert (=> b!84330 (= e!54987 (contains!746 (toList!734 lt!39747) (tuple2!2183 lt!39142 (zeroValue!2210 newMap!16))))))

(assert (= (and d!21523 res!43526) b!84329))

(assert (= (and b!84329 res!43525) b!84330))

(declare-fun m!88019 () Bool)

(assert (=> d!21523 m!88019))

(declare-fun m!88021 () Bool)

(assert (=> d!21523 m!88021))

(declare-fun m!88023 () Bool)

(assert (=> d!21523 m!88023))

(declare-fun m!88025 () Bool)

(assert (=> d!21523 m!88025))

(declare-fun m!88027 () Bool)

(assert (=> b!84329 m!88027))

(declare-fun m!88029 () Bool)

(assert (=> b!84330 m!88029))

(assert (=> b!83255 d!21523))

(declare-fun d!21525 () Bool)

(assert (=> d!21525 (= (apply!81 (+!105 lt!39145 (tuple2!2183 lt!39135 (minValue!2210 newMap!16))) lt!39131) (apply!81 lt!39145 lt!39131))))

(declare-fun lt!39750 () Unit!2413)

(assert (=> d!21525 (= lt!39750 (choose!498 lt!39145 lt!39135 (minValue!2210 newMap!16) lt!39131))))

(declare-fun e!54988 () Bool)

(assert (=> d!21525 e!54988))

(declare-fun res!43527 () Bool)

(assert (=> d!21525 (=> (not res!43527) (not e!54988))))

(assert (=> d!21525 (= res!43527 (contains!744 lt!39145 lt!39131))))

(assert (=> d!21525 (= (addApplyDifferent!57 lt!39145 lt!39135 (minValue!2210 newMap!16) lt!39131) lt!39750)))

(declare-fun b!84331 () Bool)

(assert (=> b!84331 (= e!54988 (not (= lt!39131 lt!39135)))))

(assert (= (and d!21525 res!43527) b!84331))

(assert (=> d!21525 m!86229))

(assert (=> d!21525 m!86229))

(assert (=> d!21525 m!86235))

(declare-fun m!88031 () Bool)

(assert (=> d!21525 m!88031))

(assert (=> d!21525 m!86251))

(declare-fun m!88033 () Bool)

(assert (=> d!21525 m!88033))

(assert (=> b!83255 d!21525))

(declare-fun d!21527 () Bool)

(assert (=> d!21527 (= (apply!81 (+!105 lt!39145 (tuple2!2183 lt!39135 (minValue!2210 newMap!16))) lt!39131) (get!1201 (getValueByKey!140 (toList!734 (+!105 lt!39145 (tuple2!2183 lt!39135 (minValue!2210 newMap!16)))) lt!39131)))))

(declare-fun bs!3566 () Bool)

(assert (= bs!3566 d!21527))

(declare-fun m!88035 () Bool)

(assert (=> bs!3566 m!88035))

(assert (=> bs!3566 m!88035))

(declare-fun m!88037 () Bool)

(assert (=> bs!3566 m!88037))

(assert (=> b!83255 d!21527))

(declare-fun d!21529 () Bool)

(declare-fun e!54989 () Bool)

(assert (=> d!21529 e!54989))

(declare-fun res!43529 () Bool)

(assert (=> d!21529 (=> (not res!43529) (not e!54989))))

(declare-fun lt!39752 () ListLongMap!1437)

(assert (=> d!21529 (= res!43529 (contains!744 lt!39752 (_1!1102 (tuple2!2183 lt!39135 (minValue!2210 newMap!16)))))))

(declare-fun lt!39754 () List!1504)

(assert (=> d!21529 (= lt!39752 (ListLongMap!1438 lt!39754))))

(declare-fun lt!39751 () Unit!2413)

(declare-fun lt!39753 () Unit!2413)

(assert (=> d!21529 (= lt!39751 lt!39753)))

(assert (=> d!21529 (= (getValueByKey!140 lt!39754 (_1!1102 (tuple2!2183 lt!39135 (minValue!2210 newMap!16)))) (Some!145 (_2!1102 (tuple2!2183 lt!39135 (minValue!2210 newMap!16)))))))

(assert (=> d!21529 (= lt!39753 (lemmaContainsTupThenGetReturnValue!57 lt!39754 (_1!1102 (tuple2!2183 lt!39135 (minValue!2210 newMap!16))) (_2!1102 (tuple2!2183 lt!39135 (minValue!2210 newMap!16)))))))

(assert (=> d!21529 (= lt!39754 (insertStrictlySorted!60 (toList!734 lt!39145) (_1!1102 (tuple2!2183 lt!39135 (minValue!2210 newMap!16))) (_2!1102 (tuple2!2183 lt!39135 (minValue!2210 newMap!16)))))))

(assert (=> d!21529 (= (+!105 lt!39145 (tuple2!2183 lt!39135 (minValue!2210 newMap!16))) lt!39752)))

(declare-fun b!84332 () Bool)

(declare-fun res!43528 () Bool)

(assert (=> b!84332 (=> (not res!43528) (not e!54989))))

(assert (=> b!84332 (= res!43528 (= (getValueByKey!140 (toList!734 lt!39752) (_1!1102 (tuple2!2183 lt!39135 (minValue!2210 newMap!16)))) (Some!145 (_2!1102 (tuple2!2183 lt!39135 (minValue!2210 newMap!16))))))))

(declare-fun b!84333 () Bool)

(assert (=> b!84333 (= e!54989 (contains!746 (toList!734 lt!39752) (tuple2!2183 lt!39135 (minValue!2210 newMap!16))))))

(assert (= (and d!21529 res!43529) b!84332))

(assert (= (and b!84332 res!43528) b!84333))

(declare-fun m!88039 () Bool)

(assert (=> d!21529 m!88039))

(declare-fun m!88041 () Bool)

(assert (=> d!21529 m!88041))

(declare-fun m!88043 () Bool)

(assert (=> d!21529 m!88043))

(declare-fun m!88045 () Bool)

(assert (=> d!21529 m!88045))

(declare-fun m!88047 () Bool)

(assert (=> b!84332 m!88047))

(declare-fun m!88049 () Bool)

(assert (=> b!84333 m!88049))

(assert (=> b!83255 d!21529))

(declare-fun d!21531 () Bool)

(declare-fun e!54990 () Bool)

(assert (=> d!21531 e!54990))

(declare-fun res!43531 () Bool)

(assert (=> d!21531 (=> (not res!43531) (not e!54990))))

(declare-fun lt!39756 () ListLongMap!1437)

(assert (=> d!21531 (= res!43531 (contains!744 lt!39756 (_1!1102 (tuple2!2183 lt!39132 (zeroValue!2210 newMap!16)))))))

(declare-fun lt!39758 () List!1504)

(assert (=> d!21531 (= lt!39756 (ListLongMap!1438 lt!39758))))

(declare-fun lt!39755 () Unit!2413)

(declare-fun lt!39757 () Unit!2413)

(assert (=> d!21531 (= lt!39755 lt!39757)))

(assert (=> d!21531 (= (getValueByKey!140 lt!39758 (_1!1102 (tuple2!2183 lt!39132 (zeroValue!2210 newMap!16)))) (Some!145 (_2!1102 (tuple2!2183 lt!39132 (zeroValue!2210 newMap!16)))))))

(assert (=> d!21531 (= lt!39757 (lemmaContainsTupThenGetReturnValue!57 lt!39758 (_1!1102 (tuple2!2183 lt!39132 (zeroValue!2210 newMap!16))) (_2!1102 (tuple2!2183 lt!39132 (zeroValue!2210 newMap!16)))))))

(assert (=> d!21531 (= lt!39758 (insertStrictlySorted!60 (toList!734 lt!39139) (_1!1102 (tuple2!2183 lt!39132 (zeroValue!2210 newMap!16))) (_2!1102 (tuple2!2183 lt!39132 (zeroValue!2210 newMap!16)))))))

(assert (=> d!21531 (= (+!105 lt!39139 (tuple2!2183 lt!39132 (zeroValue!2210 newMap!16))) lt!39756)))

(declare-fun b!84334 () Bool)

(declare-fun res!43530 () Bool)

(assert (=> b!84334 (=> (not res!43530) (not e!54990))))

(assert (=> b!84334 (= res!43530 (= (getValueByKey!140 (toList!734 lt!39756) (_1!1102 (tuple2!2183 lt!39132 (zeroValue!2210 newMap!16)))) (Some!145 (_2!1102 (tuple2!2183 lt!39132 (zeroValue!2210 newMap!16))))))))

(declare-fun b!84335 () Bool)

(assert (=> b!84335 (= e!54990 (contains!746 (toList!734 lt!39756) (tuple2!2183 lt!39132 (zeroValue!2210 newMap!16))))))

(assert (= (and d!21531 res!43531) b!84334))

(assert (= (and b!84334 res!43530) b!84335))

(declare-fun m!88051 () Bool)

(assert (=> d!21531 m!88051))

(declare-fun m!88053 () Bool)

(assert (=> d!21531 m!88053))

(declare-fun m!88055 () Bool)

(assert (=> d!21531 m!88055))

(declare-fun m!88057 () Bool)

(assert (=> d!21531 m!88057))

(declare-fun m!88059 () Bool)

(assert (=> b!84334 m!88059))

(declare-fun m!88061 () Bool)

(assert (=> b!84335 m!88061))

(assert (=> b!83255 d!21531))

(declare-fun d!21533 () Bool)

(assert (=> d!21533 (= (apply!81 (+!105 lt!39151 (tuple2!2183 lt!39133 (minValue!2210 newMap!16))) lt!39137) (apply!81 lt!39151 lt!39137))))

(declare-fun lt!39759 () Unit!2413)

(assert (=> d!21533 (= lt!39759 (choose!498 lt!39151 lt!39133 (minValue!2210 newMap!16) lt!39137))))

(declare-fun e!54991 () Bool)

(assert (=> d!21533 e!54991))

(declare-fun res!43532 () Bool)

(assert (=> d!21533 (=> (not res!43532) (not e!54991))))

(assert (=> d!21533 (= res!43532 (contains!744 lt!39151 lt!39137))))

(assert (=> d!21533 (= (addApplyDifferent!57 lt!39151 lt!39133 (minValue!2210 newMap!16) lt!39137) lt!39759)))

(declare-fun b!84336 () Bool)

(assert (=> b!84336 (= e!54991 (not (= lt!39137 lt!39133)))))

(assert (= (and d!21533 res!43532) b!84336))

(assert (=> d!21533 m!86243))

(assert (=> d!21533 m!86243))

(assert (=> d!21533 m!86245))

(declare-fun m!88063 () Bool)

(assert (=> d!21533 m!88063))

(assert (=> d!21533 m!86257))

(declare-fun m!88065 () Bool)

(assert (=> d!21533 m!88065))

(assert (=> b!83255 d!21533))

(declare-fun d!21535 () Bool)

(assert (=> d!21535 (= (apply!81 (+!105 lt!39151 (tuple2!2183 lt!39133 (minValue!2210 newMap!16))) lt!39137) (get!1201 (getValueByKey!140 (toList!734 (+!105 lt!39151 (tuple2!2183 lt!39133 (minValue!2210 newMap!16)))) lt!39137)))))

(declare-fun bs!3567 () Bool)

(assert (= bs!3567 d!21535))

(declare-fun m!88067 () Bool)

(assert (=> bs!3567 m!88067))

(assert (=> bs!3567 m!88067))

(declare-fun m!88069 () Bool)

(assert (=> bs!3567 m!88069))

(assert (=> b!83255 d!21535))

(declare-fun d!21537 () Bool)

(assert (=> d!21537 (= (apply!81 lt!39151 lt!39137) (get!1201 (getValueByKey!140 (toList!734 lt!39151) lt!39137)))))

(declare-fun bs!3568 () Bool)

(assert (= bs!3568 d!21537))

(declare-fun m!88071 () Bool)

(assert (=> bs!3568 m!88071))

(assert (=> bs!3568 m!88071))

(declare-fun m!88073 () Bool)

(assert (=> bs!3568 m!88073))

(assert (=> b!83255 d!21537))

(declare-fun d!21539 () Bool)

(assert (=> d!21539 (= (apply!81 (+!105 lt!39138 (tuple2!2183 lt!39142 (zeroValue!2210 newMap!16))) lt!39147) (apply!81 lt!39138 lt!39147))))

(declare-fun lt!39760 () Unit!2413)

(assert (=> d!21539 (= lt!39760 (choose!498 lt!39138 lt!39142 (zeroValue!2210 newMap!16) lt!39147))))

(declare-fun e!54992 () Bool)

(assert (=> d!21539 e!54992))

(declare-fun res!43533 () Bool)

(assert (=> d!21539 (=> (not res!43533) (not e!54992))))

(assert (=> d!21539 (= res!43533 (contains!744 lt!39138 lt!39147))))

(assert (=> d!21539 (= (addApplyDifferent!57 lt!39138 lt!39142 (zeroValue!2210 newMap!16) lt!39147) lt!39760)))

(declare-fun b!84337 () Bool)

(assert (=> b!84337 (= e!54992 (not (= lt!39147 lt!39142)))))

(assert (= (and d!21539 res!43533) b!84337))

(assert (=> d!21539 m!86231))

(assert (=> d!21539 m!86231))

(assert (=> d!21539 m!86249))

(declare-fun m!88075 () Bool)

(assert (=> d!21539 m!88075))

(assert (=> d!21539 m!86233))

(declare-fun m!88077 () Bool)

(assert (=> d!21539 m!88077))

(assert (=> b!83255 d!21539))

(declare-fun d!21541 () Bool)

(declare-fun e!54994 () Bool)

(assert (=> d!21541 e!54994))

(declare-fun res!43534 () Bool)

(assert (=> d!21541 (=> res!43534 e!54994)))

(declare-fun lt!39761 () Bool)

(assert (=> d!21541 (= res!43534 (not lt!39761))))

(declare-fun lt!39764 () Bool)

(assert (=> d!21541 (= lt!39761 lt!39764)))

(declare-fun lt!39763 () Unit!2413)

(declare-fun e!54993 () Unit!2413)

(assert (=> d!21541 (= lt!39763 e!54993)))

(declare-fun c!13584 () Bool)

(assert (=> d!21541 (= c!13584 lt!39764)))

(assert (=> d!21541 (= lt!39764 (containsKey!143 (toList!734 (+!105 lt!39139 (tuple2!2183 lt!39132 (zeroValue!2210 newMap!16)))) lt!39148))))

(assert (=> d!21541 (= (contains!744 (+!105 lt!39139 (tuple2!2183 lt!39132 (zeroValue!2210 newMap!16))) lt!39148) lt!39761)))

(declare-fun b!84338 () Bool)

(declare-fun lt!39762 () Unit!2413)

(assert (=> b!84338 (= e!54993 lt!39762)))

(assert (=> b!84338 (= lt!39762 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 (+!105 lt!39139 (tuple2!2183 lt!39132 (zeroValue!2210 newMap!16)))) lt!39148))))

(assert (=> b!84338 (isDefined!92 (getValueByKey!140 (toList!734 (+!105 lt!39139 (tuple2!2183 lt!39132 (zeroValue!2210 newMap!16)))) lt!39148))))

(declare-fun b!84339 () Bool)

(declare-fun Unit!2469 () Unit!2413)

(assert (=> b!84339 (= e!54993 Unit!2469)))

(declare-fun b!84340 () Bool)

(assert (=> b!84340 (= e!54994 (isDefined!92 (getValueByKey!140 (toList!734 (+!105 lt!39139 (tuple2!2183 lt!39132 (zeroValue!2210 newMap!16)))) lt!39148)))))

(assert (= (and d!21541 c!13584) b!84338))

(assert (= (and d!21541 (not c!13584)) b!84339))

(assert (= (and d!21541 (not res!43534)) b!84340))

(declare-fun m!88079 () Bool)

(assert (=> d!21541 m!88079))

(declare-fun m!88081 () Bool)

(assert (=> b!84338 m!88081))

(declare-fun m!88083 () Bool)

(assert (=> b!84338 m!88083))

(assert (=> b!84338 m!88083))

(declare-fun m!88085 () Bool)

(assert (=> b!84338 m!88085))

(assert (=> b!84340 m!88083))

(assert (=> b!84340 m!88083))

(assert (=> b!84340 m!88085))

(assert (=> b!83255 d!21541))

(declare-fun d!21543 () Bool)

(declare-fun e!54995 () Bool)

(assert (=> d!21543 e!54995))

(declare-fun res!43536 () Bool)

(assert (=> d!21543 (=> (not res!43536) (not e!54995))))

(declare-fun lt!39766 () ListLongMap!1437)

(assert (=> d!21543 (= res!43536 (contains!744 lt!39766 (_1!1102 (tuple2!2183 lt!39133 (minValue!2210 newMap!16)))))))

(declare-fun lt!39768 () List!1504)

(assert (=> d!21543 (= lt!39766 (ListLongMap!1438 lt!39768))))

(declare-fun lt!39765 () Unit!2413)

(declare-fun lt!39767 () Unit!2413)

(assert (=> d!21543 (= lt!39765 lt!39767)))

(assert (=> d!21543 (= (getValueByKey!140 lt!39768 (_1!1102 (tuple2!2183 lt!39133 (minValue!2210 newMap!16)))) (Some!145 (_2!1102 (tuple2!2183 lt!39133 (minValue!2210 newMap!16)))))))

(assert (=> d!21543 (= lt!39767 (lemmaContainsTupThenGetReturnValue!57 lt!39768 (_1!1102 (tuple2!2183 lt!39133 (minValue!2210 newMap!16))) (_2!1102 (tuple2!2183 lt!39133 (minValue!2210 newMap!16)))))))

(assert (=> d!21543 (= lt!39768 (insertStrictlySorted!60 (toList!734 lt!39151) (_1!1102 (tuple2!2183 lt!39133 (minValue!2210 newMap!16))) (_2!1102 (tuple2!2183 lt!39133 (minValue!2210 newMap!16)))))))

(assert (=> d!21543 (= (+!105 lt!39151 (tuple2!2183 lt!39133 (minValue!2210 newMap!16))) lt!39766)))

(declare-fun b!84341 () Bool)

(declare-fun res!43535 () Bool)

(assert (=> b!84341 (=> (not res!43535) (not e!54995))))

(assert (=> b!84341 (= res!43535 (= (getValueByKey!140 (toList!734 lt!39766) (_1!1102 (tuple2!2183 lt!39133 (minValue!2210 newMap!16)))) (Some!145 (_2!1102 (tuple2!2183 lt!39133 (minValue!2210 newMap!16))))))))

(declare-fun b!84342 () Bool)

(assert (=> b!84342 (= e!54995 (contains!746 (toList!734 lt!39766) (tuple2!2183 lt!39133 (minValue!2210 newMap!16))))))

(assert (= (and d!21543 res!43536) b!84341))

(assert (= (and b!84341 res!43535) b!84342))

(declare-fun m!88087 () Bool)

(assert (=> d!21543 m!88087))

(declare-fun m!88089 () Bool)

(assert (=> d!21543 m!88089))

(declare-fun m!88091 () Bool)

(assert (=> d!21543 m!88091))

(declare-fun m!88093 () Bool)

(assert (=> d!21543 m!88093))

(declare-fun m!88095 () Bool)

(assert (=> b!84341 m!88095))

(declare-fun m!88097 () Bool)

(assert (=> b!84342 m!88097))

(assert (=> b!83255 d!21543))

(declare-fun d!21545 () Bool)

(assert (=> d!21545 (contains!744 (+!105 lt!39139 (tuple2!2183 lt!39132 (zeroValue!2210 newMap!16))) lt!39148)))

(declare-fun lt!39769 () Unit!2413)

(assert (=> d!21545 (= lt!39769 (choose!497 lt!39139 lt!39132 (zeroValue!2210 newMap!16) lt!39148))))

(assert (=> d!21545 (contains!744 lt!39139 lt!39148)))

(assert (=> d!21545 (= (addStillContains!57 lt!39139 lt!39132 (zeroValue!2210 newMap!16) lt!39148) lt!39769)))

(declare-fun bs!3569 () Bool)

(assert (= bs!3569 d!21545))

(assert (=> bs!3569 m!86237))

(assert (=> bs!3569 m!86237))

(assert (=> bs!3569 m!86239))

(declare-fun m!88099 () Bool)

(assert (=> bs!3569 m!88099))

(declare-fun m!88101 () Bool)

(assert (=> bs!3569 m!88101))

(assert (=> b!83255 d!21545))

(declare-fun d!21547 () Bool)

(assert (=> d!21547 (= (apply!81 lt!39145 lt!39131) (get!1201 (getValueByKey!140 (toList!734 lt!39145) lt!39131)))))

(declare-fun bs!3570 () Bool)

(assert (= bs!3570 d!21547))

(declare-fun m!88103 () Bool)

(assert (=> bs!3570 m!88103))

(assert (=> bs!3570 m!88103))

(declare-fun m!88105 () Bool)

(assert (=> bs!3570 m!88105))

(assert (=> b!83255 d!21547))

(declare-fun d!21549 () Bool)

(assert (=> d!21549 (= (apply!81 (+!105 lt!39138 (tuple2!2183 lt!39142 (zeroValue!2210 newMap!16))) lt!39147) (get!1201 (getValueByKey!140 (toList!734 (+!105 lt!39138 (tuple2!2183 lt!39142 (zeroValue!2210 newMap!16)))) lt!39147)))))

(declare-fun bs!3571 () Bool)

(assert (= bs!3571 d!21549))

(declare-fun m!88107 () Bool)

(assert (=> bs!3571 m!88107))

(assert (=> bs!3571 m!88107))

(declare-fun m!88109 () Bool)

(assert (=> bs!3571 m!88109))

(assert (=> b!83255 d!21549))

(declare-fun d!21551 () Bool)

(assert (=> d!21551 (= (apply!81 lt!39138 lt!39147) (get!1201 (getValueByKey!140 (toList!734 lt!39138) lt!39147)))))

(declare-fun bs!3572 () Bool)

(assert (= bs!3572 d!21551))

(declare-fun m!88111 () Bool)

(assert (=> bs!3572 m!88111))

(assert (=> bs!3572 m!88111))

(declare-fun m!88113 () Bool)

(assert (=> bs!3572 m!88113))

(assert (=> b!83255 d!21551))

(declare-fun b!84343 () Bool)

(declare-fun e!54999 () ListLongMap!1437)

(assert (=> b!84343 (= e!54999 (ListLongMap!1438 Nil!1501))))

(declare-fun b!84344 () Bool)

(declare-fun e!55002 () Bool)

(declare-fun e!55001 () Bool)

(assert (=> b!84344 (= e!55002 e!55001)))

(assert (=> b!84344 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))))))

(declare-fun res!43540 () Bool)

(declare-fun lt!39774 () ListLongMap!1437)

(assert (=> b!84344 (= res!43540 (contains!744 lt!39774 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!84344 (=> (not res!43540) (not e!55001))))

(declare-fun b!84345 () Bool)

(declare-fun e!55000 () Bool)

(assert (=> b!84345 (= e!55002 e!55000)))

(declare-fun c!13587 () Bool)

(assert (=> b!84345 (= c!13587 (bvslt #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))))))

(declare-fun b!84346 () Bool)

(declare-fun e!54997 () ListLongMap!1437)

(assert (=> b!84346 (= e!54999 e!54997)))

(declare-fun c!13588 () Bool)

(assert (=> b!84346 (= c!13588 (validKeyInArray!0 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!84347 () Bool)

(declare-fun call!7938 () ListLongMap!1437)

(assert (=> b!84347 (= e!54997 call!7938)))

(declare-fun bm!7935 () Bool)

(assert (=> bm!7935 (= call!7938 (getCurrentListMapNoExtraKeys!70 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2316 newMap!16)))))

(declare-fun b!84348 () Bool)

(declare-fun res!43538 () Bool)

(declare-fun e!54996 () Bool)

(assert (=> b!84348 (=> (not res!43538) (not e!54996))))

(assert (=> b!84348 (= res!43538 (not (contains!744 lt!39774 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!84349 () Bool)

(declare-fun lt!39775 () Unit!2413)

(declare-fun lt!39776 () Unit!2413)

(assert (=> b!84349 (= lt!39775 lt!39776)))

(declare-fun lt!39773 () V!3017)

(declare-fun lt!39771 () (_ BitVec 64))

(declare-fun lt!39770 () ListLongMap!1437)

(declare-fun lt!39772 () (_ BitVec 64))

(assert (=> b!84349 (not (contains!744 (+!105 lt!39770 (tuple2!2183 lt!39771 lt!39773)) lt!39772))))

(assert (=> b!84349 (= lt!39776 (addStillNotContains!32 lt!39770 lt!39771 lt!39773 lt!39772))))

(assert (=> b!84349 (= lt!39772 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!84349 (= lt!39773 (get!1198 (select (arr!1905 (_values!2299 newMap!16)) #b00000000000000000000000000000000) (dynLambda!343 (defaultEntry!2316 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!84349 (= lt!39771 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!84349 (= lt!39770 call!7938)))

(assert (=> b!84349 (= e!54997 (+!105 call!7938 (tuple2!2183 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000) (get!1198 (select (arr!1905 (_values!2299 newMap!16)) #b00000000000000000000000000000000) (dynLambda!343 (defaultEntry!2316 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!84350 () Bool)

(declare-fun e!54998 () Bool)

(assert (=> b!84350 (= e!54998 (validKeyInArray!0 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!84350 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!84351 () Bool)

(assert (=> b!84351 (= e!54996 e!55002)))

(declare-fun c!13586 () Bool)

(assert (=> b!84351 (= c!13586 e!54998)))

(declare-fun res!43539 () Bool)

(assert (=> b!84351 (=> (not res!43539) (not e!54998))))

(assert (=> b!84351 (= res!43539 (bvslt #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))))))

(declare-fun b!84352 () Bool)

(assert (=> b!84352 (= e!55000 (= lt!39774 (getCurrentListMapNoExtraKeys!70 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2316 newMap!16))))))

(declare-fun b!84353 () Bool)

(assert (=> b!84353 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))))))

(assert (=> b!84353 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2148 (_values!2299 newMap!16))))))

(assert (=> b!84353 (= e!55001 (= (apply!81 lt!39774 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)) (get!1198 (select (arr!1905 (_values!2299 newMap!16)) #b00000000000000000000000000000000) (dynLambda!343 (defaultEntry!2316 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!21553 () Bool)

(assert (=> d!21553 e!54996))

(declare-fun res!43537 () Bool)

(assert (=> d!21553 (=> (not res!43537) (not e!54996))))

(assert (=> d!21553 (= res!43537 (not (contains!744 lt!39774 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!21553 (= lt!39774 e!54999)))

(declare-fun c!13585 () Bool)

(assert (=> d!21553 (= c!13585 (bvsge #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))))))

(assert (=> d!21553 (validMask!0 (mask!6334 newMap!16))))

(assert (=> d!21553 (= (getCurrentListMapNoExtraKeys!70 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) lt!39774)))

(declare-fun b!84354 () Bool)

(assert (=> b!84354 (= e!55000 (isEmpty!338 lt!39774))))

(assert (= (and d!21553 c!13585) b!84343))

(assert (= (and d!21553 (not c!13585)) b!84346))

(assert (= (and b!84346 c!13588) b!84349))

(assert (= (and b!84346 (not c!13588)) b!84347))

(assert (= (or b!84349 b!84347) bm!7935))

(assert (= (and d!21553 res!43537) b!84348))

(assert (= (and b!84348 res!43538) b!84351))

(assert (= (and b!84351 res!43539) b!84350))

(assert (= (and b!84351 c!13586) b!84344))

(assert (= (and b!84351 (not c!13586)) b!84345))

(assert (= (and b!84344 res!43540) b!84353))

(assert (= (and b!84345 c!13587) b!84352))

(assert (= (and b!84345 (not c!13587)) b!84354))

(declare-fun b_lambda!3737 () Bool)

(assert (=> (not b_lambda!3737) (not b!84349)))

(assert (=> b!84349 t!5209))

(declare-fun b_and!5105 () Bool)

(assert (= b_and!5101 (and (=> t!5209 result!2895) b_and!5105)))

(assert (=> b!84349 t!5211))

(declare-fun b_and!5107 () Bool)

(assert (= b_and!5103 (and (=> t!5211 result!2897) b_and!5107)))

(declare-fun b_lambda!3739 () Bool)

(assert (=> (not b_lambda!3739) (not b!84353)))

(assert (=> b!84353 t!5209))

(declare-fun b_and!5109 () Bool)

(assert (= b_and!5105 (and (=> t!5209 result!2895) b_and!5109)))

(assert (=> b!84353 t!5211))

(declare-fun b_and!5111 () Bool)

(assert (= b_and!5107 (and (=> t!5211 result!2897) b_and!5111)))

(assert (=> b!84344 m!86211))

(assert (=> b!84344 m!86211))

(declare-fun m!88115 () Bool)

(assert (=> b!84344 m!88115))

(declare-fun m!88117 () Bool)

(assert (=> b!84354 m!88117))

(declare-fun m!88119 () Bool)

(assert (=> b!84348 m!88119))

(declare-fun m!88121 () Bool)

(assert (=> bm!7935 m!88121))

(assert (=> b!84352 m!88121))

(declare-fun m!88123 () Bool)

(assert (=> d!21553 m!88123))

(assert (=> d!21553 m!86223))

(assert (=> b!84350 m!86211))

(assert (=> b!84350 m!86211))

(assert (=> b!84350 m!86213))

(assert (=> b!84353 m!86211))

(declare-fun m!88125 () Bool)

(assert (=> b!84353 m!88125))

(assert (=> b!84353 m!86211))

(assert (=> b!84353 m!86215))

(assert (=> b!84353 m!86219))

(assert (=> b!84353 m!86215))

(assert (=> b!84353 m!86219))

(assert (=> b!84353 m!86221))

(assert (=> b!84346 m!86211))

(assert (=> b!84346 m!86211))

(assert (=> b!84346 m!86213))

(declare-fun m!88127 () Bool)

(assert (=> b!84349 m!88127))

(assert (=> b!84349 m!88127))

(declare-fun m!88129 () Bool)

(assert (=> b!84349 m!88129))

(assert (=> b!84349 m!86211))

(declare-fun m!88131 () Bool)

(assert (=> b!84349 m!88131))

(assert (=> b!84349 m!86219))

(assert (=> b!84349 m!86215))

(assert (=> b!84349 m!86219))

(assert (=> b!84349 m!86221))

(declare-fun m!88133 () Bool)

(assert (=> b!84349 m!88133))

(assert (=> b!84349 m!86215))

(assert (=> b!83255 d!21553))

(declare-fun lt!39777 () Bool)

(declare-fun d!21555 () Bool)

(assert (=> d!21555 (= lt!39777 (select (content!89 (toList!734 lt!39467)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))

(declare-fun e!55003 () Bool)

(assert (=> d!21555 (= lt!39777 e!55003)))

(declare-fun res!43542 () Bool)

(assert (=> d!21555 (=> (not res!43542) (not e!55003))))

(assert (=> d!21555 (= res!43542 ((_ is Cons!1500) (toList!734 lt!39467)))))

(assert (=> d!21555 (= (contains!746 (toList!734 lt!39467) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) lt!39777)))

(declare-fun b!84355 () Bool)

(declare-fun e!55004 () Bool)

(assert (=> b!84355 (= e!55003 e!55004)))

(declare-fun res!43541 () Bool)

(assert (=> b!84355 (=> res!43541 e!55004)))

(assert (=> b!84355 (= res!43541 (= (h!2090 (toList!734 lt!39467)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))

(declare-fun b!84356 () Bool)

(assert (=> b!84356 (= e!55004 (contains!746 (t!5196 (toList!734 lt!39467)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))

(assert (= (and d!21555 res!43542) b!84355))

(assert (= (and b!84355 (not res!43541)) b!84356))

(declare-fun m!88135 () Bool)

(assert (=> d!21555 m!88135))

(declare-fun m!88137 () Bool)

(assert (=> d!21555 m!88137))

(declare-fun m!88139 () Bool)

(assert (=> b!84356 m!88139))

(assert (=> b!83684 d!21555))

(declare-fun d!21557 () Bool)

(declare-fun e!55005 () Bool)

(assert (=> d!21557 e!55005))

(declare-fun res!43544 () Bool)

(assert (=> d!21557 (=> (not res!43544) (not e!55005))))

(declare-fun lt!39779 () ListLongMap!1437)

(assert (=> d!21557 (= res!43544 (contains!744 lt!39779 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784))))))

(declare-fun lt!39781 () List!1504)

(assert (=> d!21557 (= lt!39779 (ListLongMap!1438 lt!39781))))

(declare-fun lt!39778 () Unit!2413)

(declare-fun lt!39780 () Unit!2413)

(assert (=> d!21557 (= lt!39778 lt!39780)))

(assert (=> d!21557 (= (getValueByKey!140 lt!39781 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784))) (Some!145 (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784))))))

(assert (=> d!21557 (= lt!39780 (lemmaContainsTupThenGetReturnValue!57 lt!39781 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784)) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784))))))

(assert (=> d!21557 (= lt!39781 (insertStrictlySorted!60 (toList!734 (getCurrentListMap!429 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16))) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784)) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784))))))

(assert (=> d!21557 (= (+!105 (getCurrentListMap!429 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784)) lt!39779)))

(declare-fun b!84357 () Bool)

(declare-fun res!43543 () Bool)

(assert (=> b!84357 (=> (not res!43543) (not e!55005))))

(assert (=> b!84357 (= res!43543 (= (getValueByKey!140 (toList!734 lt!39779) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784))) (Some!145 (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784)))))))

(declare-fun b!84358 () Bool)

(assert (=> b!84358 (= e!55005 (contains!746 (toList!734 lt!39779) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784)))))

(assert (= (and d!21557 res!43544) b!84357))

(assert (= (and b!84357 res!43543) b!84358))

(declare-fun m!88141 () Bool)

(assert (=> d!21557 m!88141))

(declare-fun m!88143 () Bool)

(assert (=> d!21557 m!88143))

(declare-fun m!88145 () Bool)

(assert (=> d!21557 m!88145))

(declare-fun m!88147 () Bool)

(assert (=> d!21557 m!88147))

(declare-fun m!88149 () Bool)

(assert (=> b!84357 m!88149))

(declare-fun m!88151 () Bool)

(assert (=> b!84358 m!88151))

(assert (=> d!21055 d!21557))

(declare-fun b!84359 () Bool)

(declare-fun e!55013 () Unit!2413)

(declare-fun Unit!2470 () Unit!2413)

(assert (=> b!84359 (= e!55013 Unit!2470)))

(declare-fun b!84360 () Bool)

(declare-fun e!55018 () Bool)

(declare-fun e!55006 () Bool)

(assert (=> b!84360 (= e!55018 e!55006)))

(declare-fun c!13593 () Bool)

(assert (=> b!84360 (= c!13593 (not (= (bvand lt!38985 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun c!13594 () Bool)

(declare-fun bm!7936 () Bool)

(declare-fun call!7941 () ListLongMap!1437)

(declare-fun call!7942 () ListLongMap!1437)

(declare-fun c!13589 () Bool)

(declare-fun call!7940 () ListLongMap!1437)

(declare-fun call!7945 () ListLongMap!1437)

(assert (=> bm!7936 (= call!7942 (+!105 (ite c!13594 call!7945 (ite c!13589 call!7940 call!7941)) (ite (or c!13594 c!13589) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784))))))

(declare-fun bm!7937 () Bool)

(declare-fun call!7944 () Bool)

(declare-fun lt!39795 () ListLongMap!1437)

(assert (=> bm!7937 (= call!7944 (contains!744 lt!39795 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!84361 () Bool)

(declare-fun e!55014 () Bool)

(assert (=> b!84361 (= e!55014 (= (apply!81 lt!39795 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)) (get!1198 (select (arr!1905 (_values!2299 newMap!16)) #b00000000000000000000000000000000) (dynLambda!343 (defaultEntry!2316 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!84361 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2148 (_values!2299 newMap!16))))))

(assert (=> b!84361 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))))))

(declare-fun b!84362 () Bool)

(declare-fun call!7943 () Bool)

(assert (=> b!84362 (= e!55006 (not call!7943))))

(declare-fun b!84363 () Bool)

(declare-fun e!55017 () Bool)

(assert (=> b!84363 (= e!55017 (validKeyInArray!0 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!7938 () Bool)

(assert (=> bm!7938 (= call!7943 (contains!744 lt!39795 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!84365 () Bool)

(declare-fun e!55007 () Bool)

(assert (=> b!84365 (= e!55007 (= (apply!81 lt!39795 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2210 newMap!16)))))

(declare-fun b!84366 () Bool)

(declare-fun res!43553 () Bool)

(assert (=> b!84366 (=> (not res!43553) (not e!55018))))

(declare-fun e!55015 () Bool)

(assert (=> b!84366 (= res!43553 e!55015)))

(declare-fun c!13590 () Bool)

(assert (=> b!84366 (= c!13590 (not (= (bvand lt!38985 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!7939 () Bool)

(declare-fun call!7939 () ListLongMap!1437)

(assert (=> bm!7939 (= call!7939 call!7942)))

(declare-fun b!84367 () Bool)

(assert (=> b!84367 (= e!55015 e!55007)))

(declare-fun res!43550 () Bool)

(assert (=> b!84367 (= res!43550 call!7944)))

(assert (=> b!84367 (=> (not res!43550) (not e!55007))))

(declare-fun b!84368 () Bool)

(declare-fun lt!39788 () Unit!2413)

(assert (=> b!84368 (= e!55013 lt!39788)))

(declare-fun lt!39791 () ListLongMap!1437)

(assert (=> b!84368 (= lt!39791 (getCurrentListMapNoExtraKeys!70 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) lt!38985 (zeroValue!2210 newMap!16) lt!38784 #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39784 () (_ BitVec 64))

(assert (=> b!84368 (= lt!39784 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39800 () (_ BitVec 64))

(assert (=> b!84368 (= lt!39800 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!39796 () Unit!2413)

(assert (=> b!84368 (= lt!39796 (addStillContains!57 lt!39791 lt!39784 (zeroValue!2210 newMap!16) lt!39800))))

(assert (=> b!84368 (contains!744 (+!105 lt!39791 (tuple2!2183 lt!39784 (zeroValue!2210 newMap!16))) lt!39800)))

(declare-fun lt!39786 () Unit!2413)

(assert (=> b!84368 (= lt!39786 lt!39796)))

(declare-fun lt!39803 () ListLongMap!1437)

(assert (=> b!84368 (= lt!39803 (getCurrentListMapNoExtraKeys!70 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) lt!38985 (zeroValue!2210 newMap!16) lt!38784 #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39785 () (_ BitVec 64))

(assert (=> b!84368 (= lt!39785 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39789 () (_ BitVec 64))

(assert (=> b!84368 (= lt!39789 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!39802 () Unit!2413)

(assert (=> b!84368 (= lt!39802 (addApplyDifferent!57 lt!39803 lt!39785 lt!38784 lt!39789))))

(assert (=> b!84368 (= (apply!81 (+!105 lt!39803 (tuple2!2183 lt!39785 lt!38784)) lt!39789) (apply!81 lt!39803 lt!39789))))

(declare-fun lt!39801 () Unit!2413)

(assert (=> b!84368 (= lt!39801 lt!39802)))

(declare-fun lt!39790 () ListLongMap!1437)

(assert (=> b!84368 (= lt!39790 (getCurrentListMapNoExtraKeys!70 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) lt!38985 (zeroValue!2210 newMap!16) lt!38784 #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39794 () (_ BitVec 64))

(assert (=> b!84368 (= lt!39794 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39799 () (_ BitVec 64))

(assert (=> b!84368 (= lt!39799 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!39793 () Unit!2413)

(assert (=> b!84368 (= lt!39793 (addApplyDifferent!57 lt!39790 lt!39794 (zeroValue!2210 newMap!16) lt!39799))))

(assert (=> b!84368 (= (apply!81 (+!105 lt!39790 (tuple2!2183 lt!39794 (zeroValue!2210 newMap!16))) lt!39799) (apply!81 lt!39790 lt!39799))))

(declare-fun lt!39792 () Unit!2413)

(assert (=> b!84368 (= lt!39792 lt!39793)))

(declare-fun lt!39797 () ListLongMap!1437)

(assert (=> b!84368 (= lt!39797 (getCurrentListMapNoExtraKeys!70 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) lt!38985 (zeroValue!2210 newMap!16) lt!38784 #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39787 () (_ BitVec 64))

(assert (=> b!84368 (= lt!39787 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39783 () (_ BitVec 64))

(assert (=> b!84368 (= lt!39783 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!84368 (= lt!39788 (addApplyDifferent!57 lt!39797 lt!39787 lt!38784 lt!39783))))

(assert (=> b!84368 (= (apply!81 (+!105 lt!39797 (tuple2!2183 lt!39787 lt!38784)) lt!39783) (apply!81 lt!39797 lt!39783))))

(declare-fun bm!7940 () Bool)

(assert (=> bm!7940 (= call!7945 (getCurrentListMapNoExtraKeys!70 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) lt!38985 (zeroValue!2210 newMap!16) lt!38784 #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun b!84369 () Bool)

(declare-fun e!55011 () ListLongMap!1437)

(assert (=> b!84369 (= e!55011 call!7939)))

(declare-fun bm!7941 () Bool)

(assert (=> bm!7941 (= call!7940 call!7945)))

(declare-fun d!21559 () Bool)

(assert (=> d!21559 e!55018))

(declare-fun res!43552 () Bool)

(assert (=> d!21559 (=> (not res!43552) (not e!55018))))

(assert (=> d!21559 (= res!43552 (or (bvsge #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))))))))

(declare-fun lt!39782 () ListLongMap!1437)

(assert (=> d!21559 (= lt!39795 lt!39782)))

(declare-fun lt!39798 () Unit!2413)

(assert (=> d!21559 (= lt!39798 e!55013)))

(declare-fun c!13591 () Bool)

(declare-fun e!55010 () Bool)

(assert (=> d!21559 (= c!13591 e!55010)))

(declare-fun res!43548 () Bool)

(assert (=> d!21559 (=> (not res!43548) (not e!55010))))

(assert (=> d!21559 (= res!43548 (bvslt #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))))))

(declare-fun e!55016 () ListLongMap!1437)

(assert (=> d!21559 (= lt!39782 e!55016)))

(assert (=> d!21559 (= c!13594 (and (not (= (bvand lt!38985 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!38985 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!21559 (validMask!0 (mask!6334 newMap!16))))

(assert (=> d!21559 (= (getCurrentListMap!429 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) lt!38985 (zeroValue!2210 newMap!16) lt!38784 #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) lt!39795)))

(declare-fun b!84364 () Bool)

(declare-fun c!13592 () Bool)

(assert (=> b!84364 (= c!13592 (and (not (= (bvand lt!38985 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!38985 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!55008 () ListLongMap!1437)

(assert (=> b!84364 (= e!55008 e!55011)))

(declare-fun b!84370 () Bool)

(declare-fun res!43551 () Bool)

(assert (=> b!84370 (=> (not res!43551) (not e!55018))))

(declare-fun e!55009 () Bool)

(assert (=> b!84370 (= res!43551 e!55009)))

(declare-fun res!43547 () Bool)

(assert (=> b!84370 (=> res!43547 e!55009)))

(assert (=> b!84370 (= res!43547 (not e!55017))))

(declare-fun res!43545 () Bool)

(assert (=> b!84370 (=> (not res!43545) (not e!55017))))

(assert (=> b!84370 (= res!43545 (bvslt #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))))))

(declare-fun bm!7942 () Bool)

(assert (=> bm!7942 (= call!7941 call!7940)))

(declare-fun b!84371 () Bool)

(assert (=> b!84371 (= e!55016 (+!105 call!7942 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784)))))

(declare-fun b!84372 () Bool)

(assert (=> b!84372 (= e!55008 call!7939)))

(declare-fun b!84373 () Bool)

(declare-fun e!55012 () Bool)

(assert (=> b!84373 (= e!55006 e!55012)))

(declare-fun res!43546 () Bool)

(assert (=> b!84373 (= res!43546 call!7943)))

(assert (=> b!84373 (=> (not res!43546) (not e!55012))))

(declare-fun b!84374 () Bool)

(assert (=> b!84374 (= e!55011 call!7941)))

(declare-fun b!84375 () Bool)

(assert (=> b!84375 (= e!55016 e!55008)))

(assert (=> b!84375 (= c!13589 (and (not (= (bvand lt!38985 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!38985 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!84376 () Bool)

(assert (=> b!84376 (= e!55009 e!55014)))

(declare-fun res!43549 () Bool)

(assert (=> b!84376 (=> (not res!43549) (not e!55014))))

(assert (=> b!84376 (= res!43549 (contains!744 lt!39795 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!84376 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))))))

(declare-fun b!84377 () Bool)

(assert (=> b!84377 (= e!55015 (not call!7944))))

(declare-fun b!84378 () Bool)

(assert (=> b!84378 (= e!55012 (= (apply!81 lt!39795 #b1000000000000000000000000000000000000000000000000000000000000000) lt!38784))))

(declare-fun b!84379 () Bool)

(assert (=> b!84379 (= e!55010 (validKeyInArray!0 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!21559 c!13594) b!84371))

(assert (= (and d!21559 (not c!13594)) b!84375))

(assert (= (and b!84375 c!13589) b!84372))

(assert (= (and b!84375 (not c!13589)) b!84364))

(assert (= (and b!84364 c!13592) b!84369))

(assert (= (and b!84364 (not c!13592)) b!84374))

(assert (= (or b!84369 b!84374) bm!7942))

(assert (= (or b!84372 bm!7942) bm!7941))

(assert (= (or b!84372 b!84369) bm!7939))

(assert (= (or b!84371 bm!7941) bm!7940))

(assert (= (or b!84371 bm!7939) bm!7936))

(assert (= (and d!21559 res!43548) b!84379))

(assert (= (and d!21559 c!13591) b!84368))

(assert (= (and d!21559 (not c!13591)) b!84359))

(assert (= (and d!21559 res!43552) b!84370))

(assert (= (and b!84370 res!43545) b!84363))

(assert (= (and b!84370 (not res!43547)) b!84376))

(assert (= (and b!84376 res!43549) b!84361))

(assert (= (and b!84370 res!43551) b!84366))

(assert (= (and b!84366 c!13590) b!84367))

(assert (= (and b!84366 (not c!13590)) b!84377))

(assert (= (and b!84367 res!43550) b!84365))

(assert (= (or b!84367 b!84377) bm!7937))

(assert (= (and b!84366 res!43553) b!84360))

(assert (= (and b!84360 c!13593) b!84373))

(assert (= (and b!84360 (not c!13593)) b!84362))

(assert (= (and b!84373 res!43546) b!84378))

(assert (= (or b!84373 b!84362) bm!7938))

(declare-fun b_lambda!3741 () Bool)

(assert (=> (not b_lambda!3741) (not b!84361)))

(assert (=> b!84361 t!5209))

(declare-fun b_and!5113 () Bool)

(assert (= b_and!5109 (and (=> t!5209 result!2895) b_and!5113)))

(assert (=> b!84361 t!5211))

(declare-fun b_and!5115 () Bool)

(assert (= b_and!5111 (and (=> t!5211 result!2897) b_and!5115)))

(assert (=> b!84379 m!86211))

(assert (=> b!84379 m!86211))

(assert (=> b!84379 m!86213))

(assert (=> b!84361 m!86215))

(assert (=> b!84361 m!86211))

(declare-fun m!88153 () Bool)

(assert (=> b!84361 m!88153))

(assert (=> b!84361 m!86211))

(assert (=> b!84361 m!86219))

(assert (=> b!84361 m!86215))

(assert (=> b!84361 m!86219))

(assert (=> b!84361 m!86221))

(assert (=> d!21559 m!86223))

(declare-fun m!88155 () Bool)

(assert (=> b!84378 m!88155))

(declare-fun m!88157 () Bool)

(assert (=> b!84368 m!88157))

(declare-fun m!88159 () Bool)

(assert (=> b!84368 m!88159))

(declare-fun m!88161 () Bool)

(assert (=> b!84368 m!88161))

(declare-fun m!88163 () Bool)

(assert (=> b!84368 m!88163))

(assert (=> b!84368 m!88159))

(declare-fun m!88165 () Bool)

(assert (=> b!84368 m!88165))

(declare-fun m!88167 () Bool)

(assert (=> b!84368 m!88167))

(declare-fun m!88169 () Bool)

(assert (=> b!84368 m!88169))

(declare-fun m!88171 () Bool)

(assert (=> b!84368 m!88171))

(declare-fun m!88173 () Bool)

(assert (=> b!84368 m!88173))

(declare-fun m!88175 () Bool)

(assert (=> b!84368 m!88175))

(declare-fun m!88177 () Bool)

(assert (=> b!84368 m!88177))

(assert (=> b!84368 m!86211))

(assert (=> b!84368 m!88173))

(assert (=> b!84368 m!88167))

(assert (=> b!84368 m!88161))

(declare-fun m!88179 () Bool)

(assert (=> b!84368 m!88179))

(declare-fun m!88181 () Bool)

(assert (=> b!84368 m!88181))

(declare-fun m!88183 () Bool)

(assert (=> b!84368 m!88183))

(declare-fun m!88185 () Bool)

(assert (=> b!84368 m!88185))

(declare-fun m!88187 () Bool)

(assert (=> b!84368 m!88187))

(declare-fun m!88189 () Bool)

(assert (=> b!84371 m!88189))

(declare-fun m!88191 () Bool)

(assert (=> bm!7936 m!88191))

(assert (=> b!84376 m!86211))

(assert (=> b!84376 m!86211))

(declare-fun m!88193 () Bool)

(assert (=> b!84376 m!88193))

(assert (=> bm!7940 m!88177))

(declare-fun m!88195 () Bool)

(assert (=> bm!7938 m!88195))

(assert (=> b!84363 m!86211))

(assert (=> b!84363 m!86211))

(assert (=> b!84363 m!86213))

(declare-fun m!88197 () Bool)

(assert (=> bm!7937 m!88197))

(declare-fun m!88199 () Bool)

(assert (=> b!84365 m!88199))

(assert (=> d!21055 d!21559))

(assert (=> d!21055 d!21267))

(declare-fun d!21561 () Bool)

(assert (=> d!21561 (= (+!105 (getCurrentListMap!429 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784)) (getCurrentListMap!429 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) lt!38985 (zeroValue!2210 newMap!16) lt!38784 #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(assert (=> d!21561 true))

(declare-fun _$8!73 () Unit!2413)

(assert (=> d!21561 (= (choose!496 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) lt!38985 (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) lt!38784 (defaultEntry!2316 newMap!16)) _$8!73)))

(declare-fun bs!3573 () Bool)

(assert (= bs!3573 d!21561))

(assert (=> bs!3573 m!85945))

(assert (=> bs!3573 m!85945))

(assert (=> bs!3573 m!86613))

(assert (=> bs!3573 m!86609))

(assert (=> d!21055 d!21561))

(assert (=> d!21055 d!20959))

(declare-fun b!84380 () Bool)

(declare-fun e!55022 () Bool)

(declare-fun call!7946 () Bool)

(assert (=> b!84380 (= e!55022 call!7946)))

(declare-fun b!84381 () Bool)

(assert (=> b!84381 (= e!55022 call!7946)))

(declare-fun b!84382 () Bool)

(declare-fun e!55021 () Bool)

(declare-fun e!55020 () Bool)

(assert (=> b!84382 (= e!55021 e!55020)))

(declare-fun res!43555 () Bool)

(assert (=> b!84382 (=> (not res!43555) (not e!55020))))

(declare-fun e!55019 () Bool)

(assert (=> b!84382 (= res!43555 (not e!55019))))

(declare-fun res!43554 () Bool)

(assert (=> b!84382 (=> (not res!43554) (not e!55019))))

(assert (=> b!84382 (= res!43554 (validKeyInArray!0 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun d!21563 () Bool)

(declare-fun res!43556 () Bool)

(assert (=> d!21563 (=> res!43556 e!55021)))

(assert (=> d!21563 (= res!43556 (bvsge #b00000000000000000000000000000000 (size!2147 (_keys!3984 (v!2632 (underlying!289 thiss!992))))))))

(assert (=> d!21563 (= (arrayNoDuplicates!0 (_keys!3984 (v!2632 (underlying!289 thiss!992))) #b00000000000000000000000000000000 Nil!1502) e!55021)))

(declare-fun b!84383 () Bool)

(assert (=> b!84383 (= e!55019 (contains!745 Nil!1502 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!84384 () Bool)

(assert (=> b!84384 (= e!55020 e!55022)))

(declare-fun c!13595 () Bool)

(assert (=> b!84384 (= c!13595 (validKeyInArray!0 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun bm!7943 () Bool)

(assert (=> bm!7943 (= call!7946 (arrayNoDuplicates!0 (_keys!3984 (v!2632 (underlying!289 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!13595 (Cons!1501 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) #b00000000000000000000000000000000) Nil!1502) Nil!1502)))))

(assert (= (and d!21563 (not res!43556)) b!84382))

(assert (= (and b!84382 res!43554) b!84383))

(assert (= (and b!84382 res!43555) b!84384))

(assert (= (and b!84384 c!13595) b!84381))

(assert (= (and b!84384 (not c!13595)) b!84380))

(assert (= (or b!84381 b!84380) bm!7943))

(assert (=> b!84382 m!87459))

(assert (=> b!84382 m!87459))

(assert (=> b!84382 m!87461))

(assert (=> b!84383 m!87459))

(assert (=> b!84383 m!87459))

(declare-fun m!88201 () Bool)

(assert (=> b!84383 m!88201))

(assert (=> b!84384 m!87459))

(assert (=> b!84384 m!87459))

(assert (=> b!84384 m!87461))

(assert (=> bm!7943 m!87459))

(declare-fun m!88203 () Bool)

(assert (=> bm!7943 m!88203))

(assert (=> b!83623 d!21563))

(declare-fun d!21565 () Bool)

(declare-fun res!43557 () Bool)

(declare-fun e!55023 () Bool)

(assert (=> d!21565 (=> res!43557 e!55023)))

(assert (=> d!21565 (= res!43557 (and ((_ is Cons!1500) lt!39202) (= (_1!1102 (h!2090 lt!39202)) (_1!1102 lt!38772))))))

(assert (=> d!21565 (= (containsKey!143 lt!39202 (_1!1102 lt!38772)) e!55023)))

(declare-fun b!84385 () Bool)

(declare-fun e!55024 () Bool)

(assert (=> b!84385 (= e!55023 e!55024)))

(declare-fun res!43558 () Bool)

(assert (=> b!84385 (=> (not res!43558) (not e!55024))))

(assert (=> b!84385 (= res!43558 (and (or (not ((_ is Cons!1500) lt!39202)) (bvsle (_1!1102 (h!2090 lt!39202)) (_1!1102 lt!38772))) ((_ is Cons!1500) lt!39202) (bvslt (_1!1102 (h!2090 lt!39202)) (_1!1102 lt!38772))))))

(declare-fun b!84386 () Bool)

(assert (=> b!84386 (= e!55024 (containsKey!143 (t!5196 lt!39202) (_1!1102 lt!38772)))))

(assert (= (and d!21565 (not res!43557)) b!84385))

(assert (= (and b!84385 res!43558) b!84386))

(declare-fun m!88205 () Bool)

(assert (=> b!84386 m!88205))

(assert (=> b!83364 d!21565))

(declare-fun d!21567 () Bool)

(declare-fun lt!39804 () Bool)

(assert (=> d!21567 (= lt!39804 (select (content!89 lt!39046) (tuple2!2183 (_1!1102 lt!38775) (_2!1102 lt!38775))))))

(declare-fun e!55025 () Bool)

(assert (=> d!21567 (= lt!39804 e!55025)))

(declare-fun res!43560 () Bool)

(assert (=> d!21567 (=> (not res!43560) (not e!55025))))

(assert (=> d!21567 (= res!43560 ((_ is Cons!1500) lt!39046))))

(assert (=> d!21567 (= (contains!746 lt!39046 (tuple2!2183 (_1!1102 lt!38775) (_2!1102 lt!38775))) lt!39804)))

(declare-fun b!84387 () Bool)

(declare-fun e!55026 () Bool)

(assert (=> b!84387 (= e!55025 e!55026)))

(declare-fun res!43559 () Bool)

(assert (=> b!84387 (=> res!43559 e!55026)))

(assert (=> b!84387 (= res!43559 (= (h!2090 lt!39046) (tuple2!2183 (_1!1102 lt!38775) (_2!1102 lt!38775))))))

(declare-fun b!84388 () Bool)

(assert (=> b!84388 (= e!55026 (contains!746 (t!5196 lt!39046) (tuple2!2183 (_1!1102 lt!38775) (_2!1102 lt!38775))))))

(assert (= (and d!21567 res!43560) b!84387))

(assert (= (and b!84387 (not res!43559)) b!84388))

(declare-fun m!88207 () Bool)

(assert (=> d!21567 m!88207))

(declare-fun m!88209 () Bool)

(assert (=> d!21567 m!88209))

(declare-fun m!88211 () Bool)

(assert (=> b!84388 m!88211))

(assert (=> b!83736 d!21567))

(declare-fun d!21569 () Bool)

(declare-fun lt!39805 () Bool)

(assert (=> d!21569 (= lt!39805 (select (content!89 lt!39517) (tuple2!2183 (_1!1102 lt!38779) (_2!1102 lt!38779))))))

(declare-fun e!55027 () Bool)

(assert (=> d!21569 (= lt!39805 e!55027)))

(declare-fun res!43562 () Bool)

(assert (=> d!21569 (=> (not res!43562) (not e!55027))))

(assert (=> d!21569 (= res!43562 ((_ is Cons!1500) lt!39517))))

(assert (=> d!21569 (= (contains!746 lt!39517 (tuple2!2183 (_1!1102 lt!38779) (_2!1102 lt!38779))) lt!39805)))

(declare-fun b!84389 () Bool)

(declare-fun e!55028 () Bool)

(assert (=> b!84389 (= e!55027 e!55028)))

(declare-fun res!43561 () Bool)

(assert (=> b!84389 (=> res!43561 e!55028)))

(assert (=> b!84389 (= res!43561 (= (h!2090 lt!39517) (tuple2!2183 (_1!1102 lt!38779) (_2!1102 lt!38779))))))

(declare-fun b!84390 () Bool)

(assert (=> b!84390 (= e!55028 (contains!746 (t!5196 lt!39517) (tuple2!2183 (_1!1102 lt!38779) (_2!1102 lt!38779))))))

(assert (= (and d!21569 res!43562) b!84389))

(assert (= (and b!84389 (not res!43561)) b!84390))

(declare-fun m!88213 () Bool)

(assert (=> d!21569 m!88213))

(declare-fun m!88215 () Bool)

(assert (=> d!21569 m!88215))

(declare-fun m!88217 () Bool)

(assert (=> b!84390 m!88217))

(assert (=> b!83776 d!21569))

(declare-fun d!21571 () Bool)

(declare-fun res!43563 () Bool)

(declare-fun e!55029 () Bool)

(assert (=> d!21571 (=> res!43563 e!55029)))

(assert (=> d!21571 (= res!43563 (or ((_ is Nil!1501) lt!39300) ((_ is Nil!1501) (t!5196 lt!39300))))))

(assert (=> d!21571 (= (isStrictlySorted!284 lt!39300) e!55029)))

(declare-fun b!84391 () Bool)

(declare-fun e!55030 () Bool)

(assert (=> b!84391 (= e!55029 e!55030)))

(declare-fun res!43564 () Bool)

(assert (=> b!84391 (=> (not res!43564) (not e!55030))))

(assert (=> b!84391 (= res!43564 (bvslt (_1!1102 (h!2090 lt!39300)) (_1!1102 (h!2090 (t!5196 lt!39300)))))))

(declare-fun b!84392 () Bool)

(assert (=> b!84392 (= e!55030 (isStrictlySorted!284 (t!5196 lt!39300)))))

(assert (= (and d!21571 (not res!43563)) b!84391))

(assert (= (and b!84391 res!43564) b!84392))

(declare-fun m!88219 () Bool)

(assert (=> b!84392 m!88219))

(assert (=> d!21075 d!21571))

(declare-fun d!21573 () Bool)

(declare-fun res!43565 () Bool)

(declare-fun e!55031 () Bool)

(assert (=> d!21573 (=> res!43565 e!55031)))

(assert (=> d!21573 (= res!43565 (or ((_ is Nil!1501) (toList!734 lt!38783)) ((_ is Nil!1501) (t!5196 (toList!734 lt!38783)))))))

(assert (=> d!21573 (= (isStrictlySorted!284 (toList!734 lt!38783)) e!55031)))

(declare-fun b!84393 () Bool)

(declare-fun e!55032 () Bool)

(assert (=> b!84393 (= e!55031 e!55032)))

(declare-fun res!43566 () Bool)

(assert (=> b!84393 (=> (not res!43566) (not e!55032))))

(assert (=> b!84393 (= res!43566 (bvslt (_1!1102 (h!2090 (toList!734 lt!38783))) (_1!1102 (h!2090 (t!5196 (toList!734 lt!38783))))))))

(declare-fun b!84394 () Bool)

(assert (=> b!84394 (= e!55032 (isStrictlySorted!284 (t!5196 (toList!734 lt!38783))))))

(assert (= (and d!21573 (not res!43565)) b!84393))

(assert (= (and b!84393 res!43566) b!84394))

(assert (=> b!84394 m!87449))

(assert (=> d!21075 d!21573))

(assert (=> d!21197 d!21195))

(declare-fun d!21575 () Bool)

(assert (=> d!21575 (= (getValueByKey!140 lt!39042 (_1!1102 lt!38779)) (Some!145 (_2!1102 lt!38779)))))

(assert (=> d!21575 true))

(declare-fun _$22!409 () Unit!2413)

(assert (=> d!21575 (= (choose!493 lt!39042 (_1!1102 lt!38779) (_2!1102 lt!38779)) _$22!409)))

(declare-fun bs!3574 () Bool)

(assert (= bs!3574 d!21575))

(assert (=> bs!3574 m!86075))

(assert (=> d!21197 d!21575))

(declare-fun d!21577 () Bool)

(declare-fun res!43567 () Bool)

(declare-fun e!55033 () Bool)

(assert (=> d!21577 (=> res!43567 e!55033)))

(assert (=> d!21577 (= res!43567 (or ((_ is Nil!1501) lt!39042) ((_ is Nil!1501) (t!5196 lt!39042))))))

(assert (=> d!21577 (= (isStrictlySorted!284 lt!39042) e!55033)))

(declare-fun b!84395 () Bool)

(declare-fun e!55034 () Bool)

(assert (=> b!84395 (= e!55033 e!55034)))

(declare-fun res!43568 () Bool)

(assert (=> b!84395 (=> (not res!43568) (not e!55034))))

(assert (=> b!84395 (= res!43568 (bvslt (_1!1102 (h!2090 lt!39042)) (_1!1102 (h!2090 (t!5196 lt!39042)))))))

(declare-fun b!84396 () Bool)

(assert (=> b!84396 (= e!55034 (isStrictlySorted!284 (t!5196 lt!39042)))))

(assert (= (and d!21577 (not res!43567)) b!84395))

(assert (= (and b!84395 res!43568) b!84396))

(declare-fun m!88221 () Bool)

(assert (=> b!84396 m!88221))

(assert (=> d!21197 d!21577))

(assert (=> bm!7843 d!21015))

(declare-fun d!21579 () Bool)

(declare-fun c!13596 () Bool)

(assert (=> d!21579 (= c!13596 ((_ is Nil!1501) (toList!734 lt!39012)))))

(declare-fun e!55035 () (InoxSet tuple2!2182))

(assert (=> d!21579 (= (content!89 (toList!734 lt!39012)) e!55035)))

(declare-fun b!84397 () Bool)

(assert (=> b!84397 (= e!55035 ((as const (Array tuple2!2182 Bool)) false))))

(declare-fun b!84398 () Bool)

(assert (=> b!84398 (= e!55035 ((_ map or) (store ((as const (Array tuple2!2182 Bool)) false) (h!2090 (toList!734 lt!39012)) true) (content!89 (t!5196 (toList!734 lt!39012)))))))

(assert (= (and d!21579 c!13596) b!84397))

(assert (= (and d!21579 (not c!13596)) b!84398))

(declare-fun m!88223 () Bool)

(assert (=> b!84398 m!88223))

(declare-fun m!88225 () Bool)

(assert (=> b!84398 m!88225))

(assert (=> d!21077 d!21579))

(declare-fun d!21581 () Bool)

(declare-fun e!55036 () Bool)

(assert (=> d!21581 e!55036))

(declare-fun res!43570 () Bool)

(assert (=> d!21581 (=> (not res!43570) (not e!55036))))

(declare-fun lt!39807 () ListLongMap!1437)

(assert (=> d!21581 (= res!43570 (contains!744 lt!39807 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16)))))))

(declare-fun lt!39809 () List!1504)

(assert (=> d!21581 (= lt!39807 (ListLongMap!1438 lt!39809))))

(declare-fun lt!39806 () Unit!2413)

(declare-fun lt!39808 () Unit!2413)

(assert (=> d!21581 (= lt!39806 lt!39808)))

(assert (=> d!21581 (= (getValueByKey!140 lt!39809 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16)))) (Some!145 (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16)))))))

(assert (=> d!21581 (= lt!39808 (lemmaContainsTupThenGetReturnValue!57 lt!39809 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16)))))))

(assert (=> d!21581 (= lt!39809 (insertStrictlySorted!60 (toList!734 call!7828) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16)))))))

(assert (=> d!21581 (= (+!105 call!7828 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16))) lt!39807)))

(declare-fun b!84399 () Bool)

(declare-fun res!43569 () Bool)

(assert (=> b!84399 (=> (not res!43569) (not e!55036))))

(assert (=> b!84399 (= res!43569 (= (getValueByKey!140 (toList!734 lt!39807) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16)))) (Some!145 (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16))))))))

(declare-fun b!84400 () Bool)

(assert (=> b!84400 (= e!55036 (contains!746 (toList!734 lt!39807) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16))))))

(assert (= (and d!21581 res!43570) b!84399))

(assert (= (and b!84399 res!43569) b!84400))

(declare-fun m!88227 () Bool)

(assert (=> d!21581 m!88227))

(declare-fun m!88229 () Bool)

(assert (=> d!21581 m!88229))

(declare-fun m!88231 () Bool)

(assert (=> d!21581 m!88231))

(declare-fun m!88233 () Bool)

(assert (=> d!21581 m!88233))

(declare-fun m!88235 () Bool)

(assert (=> b!84399 m!88235))

(declare-fun m!88237 () Bool)

(assert (=> b!84400 m!88237))

(assert (=> b!83446 d!21581))

(declare-fun d!21583 () Bool)

(assert (=> d!21583 (= (get!1201 (getValueByKey!140 (toList!734 (+!105 lt!39121 (tuple2!2183 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))) lt!39107)) (v!2638 (getValueByKey!140 (toList!734 (+!105 lt!39121 (tuple2!2183 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))) lt!39107)))))

(assert (=> d!21095 d!21583))

(declare-fun e!55038 () Option!146)

(declare-fun b!84403 () Bool)

(assert (=> b!84403 (= e!55038 (getValueByKey!140 (t!5196 (toList!734 (+!105 lt!39121 (tuple2!2183 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))) lt!39107))))

(declare-fun c!13597 () Bool)

(declare-fun d!21585 () Bool)

(assert (=> d!21585 (= c!13597 (and ((_ is Cons!1500) (toList!734 (+!105 lt!39121 (tuple2!2183 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))) (= (_1!1102 (h!2090 (toList!734 (+!105 lt!39121 (tuple2!2183 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))) lt!39107)))))

(declare-fun e!55037 () Option!146)

(assert (=> d!21585 (= (getValueByKey!140 (toList!734 (+!105 lt!39121 (tuple2!2183 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))) lt!39107) e!55037)))

(declare-fun b!84401 () Bool)

(assert (=> b!84401 (= e!55037 (Some!145 (_2!1102 (h!2090 (toList!734 (+!105 lt!39121 (tuple2!2183 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))))

(declare-fun b!84402 () Bool)

(assert (=> b!84402 (= e!55037 e!55038)))

(declare-fun c!13598 () Bool)

(assert (=> b!84402 (= c!13598 (and ((_ is Cons!1500) (toList!734 (+!105 lt!39121 (tuple2!2183 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))) (not (= (_1!1102 (h!2090 (toList!734 (+!105 lt!39121 (tuple2!2183 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))) lt!39107))))))

(declare-fun b!84404 () Bool)

(assert (=> b!84404 (= e!55038 None!144)))

(assert (= (and d!21585 c!13597) b!84401))

(assert (= (and d!21585 (not c!13597)) b!84402))

(assert (= (and b!84402 c!13598) b!84403))

(assert (= (and b!84402 (not c!13598)) b!84404))

(declare-fun m!88239 () Bool)

(assert (=> b!84403 m!88239))

(assert (=> d!21095 d!21585))

(declare-fun c!13599 () Bool)

(declare-fun c!13602 () Bool)

(declare-fun b!84406 () Bool)

(declare-fun e!55039 () List!1504)

(assert (=> b!84406 (= e!55039 (ite c!13602 (t!5196 (t!5196 (toList!734 lt!38771))) (ite c!13599 (Cons!1500 (h!2090 (t!5196 (toList!734 lt!38771))) (t!5196 (t!5196 (toList!734 lt!38771)))) Nil!1501)))))

(declare-fun c!13600 () Bool)

(declare-fun bm!7944 () Bool)

(declare-fun call!7947 () List!1504)

(assert (=> bm!7944 (= call!7947 ($colon$colon!70 e!55039 (ite c!13600 (h!2090 (t!5196 (toList!734 lt!38771))) (tuple2!2183 (_1!1102 lt!38772) (_2!1102 lt!38772)))))))

(declare-fun c!13601 () Bool)

(assert (=> bm!7944 (= c!13601 c!13600)))

(declare-fun b!84407 () Bool)

(declare-fun e!55043 () List!1504)

(declare-fun call!7949 () List!1504)

(assert (=> b!84407 (= e!55043 call!7949)))

(declare-fun b!84408 () Bool)

(declare-fun e!55041 () List!1504)

(assert (=> b!84408 (= e!55041 call!7947)))

(declare-fun bm!7945 () Bool)

(assert (=> bm!7945 (= call!7949 call!7947)))

(declare-fun bm!7946 () Bool)

(declare-fun call!7948 () List!1504)

(assert (=> bm!7946 (= call!7948 call!7949)))

(declare-fun b!84409 () Bool)

(assert (=> b!84409 (= e!55039 (insertStrictlySorted!60 (t!5196 (t!5196 (toList!734 lt!38771))) (_1!1102 lt!38772) (_2!1102 lt!38772)))))

(declare-fun b!84410 () Bool)

(declare-fun e!55042 () List!1504)

(assert (=> b!84410 (= e!55042 call!7948)))

(declare-fun b!84411 () Bool)

(assert (=> b!84411 (= e!55041 e!55043)))

(assert (=> b!84411 (= c!13602 (and ((_ is Cons!1500) (t!5196 (toList!734 lt!38771))) (= (_1!1102 (h!2090 (t!5196 (toList!734 lt!38771)))) (_1!1102 lt!38772))))))

(declare-fun b!84412 () Bool)

(declare-fun e!55040 () Bool)

(declare-fun lt!39810 () List!1504)

(assert (=> b!84412 (= e!55040 (contains!746 lt!39810 (tuple2!2183 (_1!1102 lt!38772) (_2!1102 lt!38772))))))

(declare-fun b!84405 () Bool)

(declare-fun res!43572 () Bool)

(assert (=> b!84405 (=> (not res!43572) (not e!55040))))

(assert (=> b!84405 (= res!43572 (containsKey!143 lt!39810 (_1!1102 lt!38772)))))

(declare-fun d!21587 () Bool)

(assert (=> d!21587 e!55040))

(declare-fun res!43571 () Bool)

(assert (=> d!21587 (=> (not res!43571) (not e!55040))))

(assert (=> d!21587 (= res!43571 (isStrictlySorted!284 lt!39810))))

(assert (=> d!21587 (= lt!39810 e!55041)))

(assert (=> d!21587 (= c!13600 (and ((_ is Cons!1500) (t!5196 (toList!734 lt!38771))) (bvslt (_1!1102 (h!2090 (t!5196 (toList!734 lt!38771)))) (_1!1102 lt!38772))))))

(assert (=> d!21587 (isStrictlySorted!284 (t!5196 (toList!734 lt!38771)))))

(assert (=> d!21587 (= (insertStrictlySorted!60 (t!5196 (toList!734 lt!38771)) (_1!1102 lt!38772) (_2!1102 lt!38772)) lt!39810)))

(declare-fun b!84413 () Bool)

(assert (=> b!84413 (= e!55042 call!7948)))

(declare-fun b!84414 () Bool)

(assert (=> b!84414 (= c!13599 (and ((_ is Cons!1500) (t!5196 (toList!734 lt!38771))) (bvsgt (_1!1102 (h!2090 (t!5196 (toList!734 lt!38771)))) (_1!1102 lt!38772))))))

(assert (=> b!84414 (= e!55043 e!55042)))

(assert (= (and d!21587 c!13600) b!84408))

(assert (= (and d!21587 (not c!13600)) b!84411))

(assert (= (and b!84411 c!13602) b!84407))

(assert (= (and b!84411 (not c!13602)) b!84414))

(assert (= (and b!84414 c!13599) b!84410))

(assert (= (and b!84414 (not c!13599)) b!84413))

(assert (= (or b!84410 b!84413) bm!7946))

(assert (= (or b!84407 bm!7946) bm!7945))

(assert (= (or b!84408 bm!7945) bm!7944))

(assert (= (and bm!7944 c!13601) b!84409))

(assert (= (and bm!7944 (not c!13601)) b!84406))

(assert (= (and d!21587 res!43571) b!84405))

(assert (= (and b!84405 res!43572) b!84412))

(declare-fun m!88241 () Bool)

(assert (=> d!21587 m!88241))

(assert (=> d!21587 m!87967))

(declare-fun m!88243 () Bool)

(assert (=> b!84409 m!88243))

(declare-fun m!88245 () Bool)

(assert (=> bm!7944 m!88245))

(declare-fun m!88247 () Bool)

(assert (=> b!84405 m!88247))

(declare-fun m!88249 () Bool)

(assert (=> b!84412 m!88249))

(assert (=> b!83368 d!21587))

(declare-fun e!55045 () Option!146)

(declare-fun b!84417 () Bool)

(assert (=> b!84417 (= e!55045 (getValueByKey!140 (t!5196 (toList!734 lt!39123)) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(declare-fun c!13603 () Bool)

(declare-fun d!21589 () Bool)

(assert (=> d!21589 (= c!13603 (and ((_ is Cons!1500) (toList!734 lt!39123)) (= (_1!1102 (h!2090 (toList!734 lt!39123))) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))

(declare-fun e!55044 () Option!146)

(assert (=> d!21589 (= (getValueByKey!140 (toList!734 lt!39123) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))) e!55044)))

(declare-fun b!84415 () Bool)

(assert (=> b!84415 (= e!55044 (Some!145 (_2!1102 (h!2090 (toList!734 lt!39123)))))))

(declare-fun b!84416 () Bool)

(assert (=> b!84416 (= e!55044 e!55045)))

(declare-fun c!13604 () Bool)

(assert (=> b!84416 (= c!13604 (and ((_ is Cons!1500) (toList!734 lt!39123)) (not (= (_1!1102 (h!2090 (toList!734 lt!39123))) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))))

(declare-fun b!84418 () Bool)

(assert (=> b!84418 (= e!55045 None!144)))

(assert (= (and d!21589 c!13603) b!84415))

(assert (= (and d!21589 (not c!13603)) b!84416))

(assert (= (and b!84416 c!13604) b!84417))

(assert (= (and b!84416 (not c!13604)) b!84418))

(declare-fun m!88251 () Bool)

(assert (=> b!84417 m!88251))

(assert (=> b!83237 d!21589))

(declare-fun b!84419 () Bool)

(declare-fun e!55049 () ListLongMap!1437)

(assert (=> b!84419 (= e!55049 (ListLongMap!1438 Nil!1501))))

(declare-fun b!84420 () Bool)

(declare-fun e!55052 () Bool)

(declare-fun e!55051 () Bool)

(assert (=> b!84420 (= e!55052 e!55051)))

(assert (=> b!84420 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2147 (_keys!3984 (v!2632 (underlying!289 thiss!992))))))))

(declare-fun res!43576 () Bool)

(declare-fun lt!39815 () ListLongMap!1437)

(assert (=> b!84420 (= res!43576 (contains!744 lt!39815 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!84420 (=> (not res!43576) (not e!55051))))

(declare-fun b!84421 () Bool)

(declare-fun e!55050 () Bool)

(assert (=> b!84421 (= e!55052 e!55050)))

(declare-fun c!13607 () Bool)

(assert (=> b!84421 (= c!13607 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2147 (_keys!3984 (v!2632 (underlying!289 thiss!992))))))))

(declare-fun b!84422 () Bool)

(declare-fun e!55047 () ListLongMap!1437)

(assert (=> b!84422 (= e!55049 e!55047)))

(declare-fun c!13608 () Bool)

(assert (=> b!84422 (= c!13608 (validKeyInArray!0 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!84423 () Bool)

(declare-fun call!7950 () ListLongMap!1437)

(assert (=> b!84423 (= e!55047 call!7950)))

(declare-fun bm!7947 () Bool)

(assert (=> bm!7947 (= call!7950 (getCurrentListMapNoExtraKeys!70 (_keys!3984 (v!2632 (underlying!289 thiss!992))) (_values!2299 (v!2632 (underlying!289 thiss!992))) (mask!6334 (v!2632 (underlying!289 thiss!992))) (extraKeys!2159 (v!2632 (underlying!289 thiss!992))) (zeroValue!2210 (v!2632 (underlying!289 thiss!992))) (minValue!2210 (v!2632 (underlying!289 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2316 (v!2632 (underlying!289 thiss!992)))))))

(declare-fun b!84424 () Bool)

(declare-fun res!43574 () Bool)

(declare-fun e!55046 () Bool)

(assert (=> b!84424 (=> (not res!43574) (not e!55046))))

(assert (=> b!84424 (= res!43574 (not (contains!744 lt!39815 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!84425 () Bool)

(declare-fun lt!39816 () Unit!2413)

(declare-fun lt!39817 () Unit!2413)

(assert (=> b!84425 (= lt!39816 lt!39817)))

(declare-fun lt!39814 () V!3017)

(declare-fun lt!39813 () (_ BitVec 64))

(declare-fun lt!39811 () ListLongMap!1437)

(declare-fun lt!39812 () (_ BitVec 64))

(assert (=> b!84425 (not (contains!744 (+!105 lt!39811 (tuple2!2183 lt!39812 lt!39814)) lt!39813))))

(assert (=> b!84425 (= lt!39817 (addStillNotContains!32 lt!39811 lt!39812 lt!39814 lt!39813))))

(assert (=> b!84425 (= lt!39813 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!84425 (= lt!39814 (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!84425 (= lt!39812 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (=> b!84425 (= lt!39811 call!7950)))

(assert (=> b!84425 (= e!55047 (+!105 call!7950 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!84426 () Bool)

(declare-fun e!55048 () Bool)

(assert (=> b!84426 (= e!55048 (validKeyInArray!0 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!84426 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!84427 () Bool)

(assert (=> b!84427 (= e!55046 e!55052)))

(declare-fun c!13606 () Bool)

(assert (=> b!84427 (= c!13606 e!55048)))

(declare-fun res!43575 () Bool)

(assert (=> b!84427 (=> (not res!43575) (not e!55048))))

(assert (=> b!84427 (= res!43575 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2147 (_keys!3984 (v!2632 (underlying!289 thiss!992))))))))

(declare-fun b!84428 () Bool)

(assert (=> b!84428 (= e!55050 (= lt!39815 (getCurrentListMapNoExtraKeys!70 (_keys!3984 (v!2632 (underlying!289 thiss!992))) (_values!2299 (v!2632 (underlying!289 thiss!992))) (mask!6334 (v!2632 (underlying!289 thiss!992))) (extraKeys!2159 (v!2632 (underlying!289 thiss!992))) (zeroValue!2210 (v!2632 (underlying!289 thiss!992))) (minValue!2210 (v!2632 (underlying!289 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))))))))

(declare-fun b!84429 () Bool)

(assert (=> b!84429 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2147 (_keys!3984 (v!2632 (underlying!289 thiss!992))))))))

(assert (=> b!84429 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2148 (_values!2299 (v!2632 (underlying!289 thiss!992))))))))

(assert (=> b!84429 (= e!55051 (= (apply!81 lt!39815 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!21591 () Bool)

(assert (=> d!21591 e!55046))

(declare-fun res!43573 () Bool)

(assert (=> d!21591 (=> (not res!43573) (not e!55046))))

(assert (=> d!21591 (= res!43573 (not (contains!744 lt!39815 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!21591 (= lt!39815 e!55049)))

(declare-fun c!13605 () Bool)

(assert (=> d!21591 (= c!13605 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2147 (_keys!3984 (v!2632 (underlying!289 thiss!992))))))))

(assert (=> d!21591 (validMask!0 (mask!6334 (v!2632 (underlying!289 thiss!992))))))

(assert (=> d!21591 (= (getCurrentListMapNoExtraKeys!70 (_keys!3984 (v!2632 (underlying!289 thiss!992))) (_values!2299 (v!2632 (underlying!289 thiss!992))) (mask!6334 (v!2632 (underlying!289 thiss!992))) (extraKeys!2159 (v!2632 (underlying!289 thiss!992))) (zeroValue!2210 (v!2632 (underlying!289 thiss!992))) (minValue!2210 (v!2632 (underlying!289 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2316 (v!2632 (underlying!289 thiss!992)))) lt!39815)))

(declare-fun b!84430 () Bool)

(assert (=> b!84430 (= e!55050 (isEmpty!338 lt!39815))))

(assert (= (and d!21591 c!13605) b!84419))

(assert (= (and d!21591 (not c!13605)) b!84422))

(assert (= (and b!84422 c!13608) b!84425))

(assert (= (and b!84422 (not c!13608)) b!84423))

(assert (= (or b!84425 b!84423) bm!7947))

(assert (= (and d!21591 res!43573) b!84424))

(assert (= (and b!84424 res!43574) b!84427))

(assert (= (and b!84427 res!43575) b!84426))

(assert (= (and b!84427 c!13606) b!84420))

(assert (= (and b!84427 (not c!13606)) b!84421))

(assert (= (and b!84420 res!43576) b!84429))

(assert (= (and b!84421 c!13607) b!84428))

(assert (= (and b!84421 (not c!13607)) b!84430))

(declare-fun b_lambda!3743 () Bool)

(assert (=> (not b_lambda!3743) (not b!84425)))

(assert (=> b!84425 t!5193))

(declare-fun b_and!5117 () Bool)

(assert (= b_and!5113 (and (=> t!5193 result!2875) b_and!5117)))

(assert (=> b!84425 t!5195))

(declare-fun b_and!5119 () Bool)

(assert (= b_and!5115 (and (=> t!5195 result!2879) b_and!5119)))

(declare-fun b_lambda!3745 () Bool)

(assert (=> (not b_lambda!3745) (not b!84429)))

(assert (=> b!84429 t!5193))

(declare-fun b_and!5121 () Bool)

(assert (= b_and!5117 (and (=> t!5193 result!2875) b_and!5121)))

(assert (=> b!84429 t!5195))

(declare-fun b_and!5123 () Bool)

(assert (= b_and!5119 (and (=> t!5195 result!2879) b_and!5123)))

(declare-fun m!88253 () Bool)

(assert (=> b!84420 m!88253))

(assert (=> b!84420 m!88253))

(declare-fun m!88255 () Bool)

(assert (=> b!84420 m!88255))

(declare-fun m!88257 () Bool)

(assert (=> b!84430 m!88257))

(declare-fun m!88259 () Bool)

(assert (=> b!84424 m!88259))

(declare-fun m!88261 () Bool)

(assert (=> bm!7947 m!88261))

(assert (=> b!84428 m!88261))

(declare-fun m!88263 () Bool)

(assert (=> d!21591 m!88263))

(assert (=> d!21591 m!85763))

(assert (=> b!84426 m!88253))

(assert (=> b!84426 m!88253))

(declare-fun m!88265 () Bool)

(assert (=> b!84426 m!88265))

(assert (=> b!84429 m!88253))

(declare-fun m!88267 () Bool)

(assert (=> b!84429 m!88267))

(assert (=> b!84429 m!88253))

(declare-fun m!88269 () Bool)

(assert (=> b!84429 m!88269))

(assert (=> b!84429 m!85725))

(assert (=> b!84429 m!88269))

(assert (=> b!84429 m!85725))

(declare-fun m!88271 () Bool)

(assert (=> b!84429 m!88271))

(assert (=> b!84422 m!88253))

(assert (=> b!84422 m!88253))

(assert (=> b!84422 m!88265))

(declare-fun m!88273 () Bool)

(assert (=> b!84425 m!88273))

(assert (=> b!84425 m!88273))

(declare-fun m!88275 () Bool)

(assert (=> b!84425 m!88275))

(assert (=> b!84425 m!88253))

(declare-fun m!88277 () Bool)

(assert (=> b!84425 m!88277))

(assert (=> b!84425 m!85725))

(assert (=> b!84425 m!88269))

(assert (=> b!84425 m!85725))

(assert (=> b!84425 m!88271))

(declare-fun m!88279 () Bool)

(assert (=> b!84425 m!88279))

(assert (=> b!84425 m!88269))

(assert (=> bm!7830 d!21591))

(declare-fun d!21593 () Bool)

(declare-fun c!13609 () Bool)

(assert (=> d!21593 (= c!13609 ((_ is Nil!1501) (toList!734 lt!39008)))))

(declare-fun e!55053 () (InoxSet tuple2!2182))

(assert (=> d!21593 (= (content!89 (toList!734 lt!39008)) e!55053)))

(declare-fun b!84431 () Bool)

(assert (=> b!84431 (= e!55053 ((as const (Array tuple2!2182 Bool)) false))))

(declare-fun b!84432 () Bool)

(assert (=> b!84432 (= e!55053 ((_ map or) (store ((as const (Array tuple2!2182 Bool)) false) (h!2090 (toList!734 lt!39008)) true) (content!89 (t!5196 (toList!734 lt!39008)))))))

(assert (= (and d!21593 c!13609) b!84431))

(assert (= (and d!21593 (not c!13609)) b!84432))

(declare-fun m!88281 () Bool)

(assert (=> b!84432 m!88281))

(assert (=> b!84432 m!87803))

(assert (=> d!21079 d!21593))

(declare-fun d!21595 () Bool)

(declare-fun res!43577 () Bool)

(declare-fun e!55054 () Bool)

(assert (=> d!21595 (=> res!43577 e!55054)))

(assert (=> d!21595 (= res!43577 (or ((_ is Nil!1501) lt!39202) ((_ is Nil!1501) (t!5196 lt!39202))))))

(assert (=> d!21595 (= (isStrictlySorted!284 lt!39202) e!55054)))

(declare-fun b!84433 () Bool)

(declare-fun e!55055 () Bool)

(assert (=> b!84433 (= e!55054 e!55055)))

(declare-fun res!43578 () Bool)

(assert (=> b!84433 (=> (not res!43578) (not e!55055))))

(assert (=> b!84433 (= res!43578 (bvslt (_1!1102 (h!2090 lt!39202)) (_1!1102 (h!2090 (t!5196 lt!39202)))))))

(declare-fun b!84434 () Bool)

(assert (=> b!84434 (= e!55055 (isStrictlySorted!284 (t!5196 lt!39202)))))

(assert (= (and d!21595 (not res!43577)) b!84433))

(assert (= (and b!84433 res!43578) b!84434))

(declare-fun m!88283 () Bool)

(assert (=> b!84434 m!88283))

(assert (=> d!20997 d!21595))

(declare-fun d!21597 () Bool)

(declare-fun res!43579 () Bool)

(declare-fun e!55056 () Bool)

(assert (=> d!21597 (=> res!43579 e!55056)))

(assert (=> d!21597 (= res!43579 (or ((_ is Nil!1501) (toList!734 lt!38771)) ((_ is Nil!1501) (t!5196 (toList!734 lt!38771)))))))

(assert (=> d!21597 (= (isStrictlySorted!284 (toList!734 lt!38771)) e!55056)))

(declare-fun b!84435 () Bool)

(declare-fun e!55057 () Bool)

(assert (=> b!84435 (= e!55056 e!55057)))

(declare-fun res!43580 () Bool)

(assert (=> b!84435 (=> (not res!43580) (not e!55057))))

(assert (=> b!84435 (= res!43580 (bvslt (_1!1102 (h!2090 (toList!734 lt!38771))) (_1!1102 (h!2090 (t!5196 (toList!734 lt!38771))))))))

(declare-fun b!84436 () Bool)

(assert (=> b!84436 (= e!55057 (isStrictlySorted!284 (t!5196 (toList!734 lt!38771))))))

(assert (= (and d!21597 (not res!43579)) b!84435))

(assert (= (and b!84435 res!43580) b!84436))

(assert (=> b!84436 m!87967))

(assert (=> d!20997 d!21597))

(declare-fun d!21599 () Bool)

(declare-fun res!43581 () Bool)

(declare-fun e!55058 () Bool)

(assert (=> d!21599 (=> res!43581 e!55058)))

(assert (=> d!21599 (= res!43581 (and ((_ is Cons!1500) (toList!734 e!54228)) (= (_1!1102 (h!2090 (toList!734 e!54228))) (ite c!13217 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (select (arr!1904 (_keys!3984 newMap!16)) (index!3081 lt!38961))))))))

(assert (=> d!21599 (= (containsKey!143 (toList!734 e!54228) (ite c!13217 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (select (arr!1904 (_keys!3984 newMap!16)) (index!3081 lt!38961)))) e!55058)))

(declare-fun b!84437 () Bool)

(declare-fun e!55059 () Bool)

(assert (=> b!84437 (= e!55058 e!55059)))

(declare-fun res!43582 () Bool)

(assert (=> b!84437 (=> (not res!43582) (not e!55059))))

(assert (=> b!84437 (= res!43582 (and (or (not ((_ is Cons!1500) (toList!734 e!54228))) (bvsle (_1!1102 (h!2090 (toList!734 e!54228))) (ite c!13217 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (select (arr!1904 (_keys!3984 newMap!16)) (index!3081 lt!38961))))) ((_ is Cons!1500) (toList!734 e!54228)) (bvslt (_1!1102 (h!2090 (toList!734 e!54228))) (ite c!13217 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (select (arr!1904 (_keys!3984 newMap!16)) (index!3081 lt!38961))))))))

(declare-fun b!84438 () Bool)

(assert (=> b!84438 (= e!55059 (containsKey!143 (t!5196 (toList!734 e!54228)) (ite c!13217 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (select (arr!1904 (_keys!3984 newMap!16)) (index!3081 lt!38961)))))))

(assert (= (and d!21599 (not res!43581)) b!84437))

(assert (= (and b!84437 res!43582) b!84438))

(declare-fun m!88285 () Bool)

(assert (=> b!84438 m!88285))

(assert (=> d!21061 d!21599))

(declare-fun d!21601 () Bool)

(declare-fun e!55061 () Bool)

(assert (=> d!21601 e!55061))

(declare-fun res!43583 () Bool)

(assert (=> d!21601 (=> res!43583 e!55061)))

(declare-fun lt!39818 () Bool)

(assert (=> d!21601 (= res!43583 (not lt!39818))))

(declare-fun lt!39821 () Bool)

(assert (=> d!21601 (= lt!39818 lt!39821)))

(declare-fun lt!39820 () Unit!2413)

(declare-fun e!55060 () Unit!2413)

(assert (=> d!21601 (= lt!39820 e!55060)))

(declare-fun c!13610 () Bool)

(assert (=> d!21601 (= c!13610 lt!39821)))

(assert (=> d!21601 (= lt!39821 (containsKey!143 (toList!734 lt!39219) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(assert (=> d!21601 (= (contains!744 lt!39219 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))) lt!39818)))

(declare-fun b!84439 () Bool)

(declare-fun lt!39819 () Unit!2413)

(assert (=> b!84439 (= e!55060 lt!39819)))

(assert (=> b!84439 (= lt!39819 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 lt!39219) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(assert (=> b!84439 (isDefined!92 (getValueByKey!140 (toList!734 lt!39219) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun b!84440 () Bool)

(declare-fun Unit!2471 () Unit!2413)

(assert (=> b!84440 (= e!55060 Unit!2471)))

(declare-fun b!84441 () Bool)

(assert (=> b!84441 (= e!55061 (isDefined!92 (getValueByKey!140 (toList!734 lt!39219) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(assert (= (and d!21601 c!13610) b!84439))

(assert (= (and d!21601 (not c!13610)) b!84440))

(assert (= (and d!21601 (not res!43583)) b!84441))

(declare-fun m!88287 () Bool)

(assert (=> d!21601 m!88287))

(declare-fun m!88289 () Bool)

(assert (=> b!84439 m!88289))

(assert (=> b!84439 m!86451))

(assert (=> b!84439 m!86451))

(declare-fun m!88291 () Bool)

(assert (=> b!84439 m!88291))

(assert (=> b!84441 m!86451))

(assert (=> b!84441 m!86451))

(assert (=> b!84441 m!88291))

(assert (=> d!21019 d!21601))

(declare-fun b!84444 () Bool)

(declare-fun e!55063 () Option!146)

(assert (=> b!84444 (= e!55063 (getValueByKey!140 (t!5196 lt!39221) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun d!21603 () Bool)

(declare-fun c!13611 () Bool)

(assert (=> d!21603 (= c!13611 (and ((_ is Cons!1500) lt!39221) (= (_1!1102 (h!2090 lt!39221)) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(declare-fun e!55062 () Option!146)

(assert (=> d!21603 (= (getValueByKey!140 lt!39221 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))) e!55062)))

(declare-fun b!84442 () Bool)

(assert (=> b!84442 (= e!55062 (Some!145 (_2!1102 (h!2090 lt!39221))))))

(declare-fun b!84443 () Bool)

(assert (=> b!84443 (= e!55062 e!55063)))

(declare-fun c!13612 () Bool)

(assert (=> b!84443 (= c!13612 (and ((_ is Cons!1500) lt!39221) (not (= (_1!1102 (h!2090 lt!39221)) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))))

(declare-fun b!84445 () Bool)

(assert (=> b!84445 (= e!55063 None!144)))

(assert (= (and d!21603 c!13611) b!84442))

(assert (= (and d!21603 (not c!13611)) b!84443))

(assert (= (and b!84443 c!13612) b!84444))

(assert (= (and b!84443 (not c!13612)) b!84445))

(declare-fun m!88293 () Bool)

(assert (=> b!84444 m!88293))

(assert (=> d!21019 d!21603))

(declare-fun d!21605 () Bool)

(assert (=> d!21605 (= (getValueByKey!140 lt!39221 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))) (Some!145 (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun lt!39822 () Unit!2413)

(assert (=> d!21605 (= lt!39822 (choose!493 lt!39221 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun e!55064 () Bool)

(assert (=> d!21605 e!55064))

(declare-fun res!43584 () Bool)

(assert (=> d!21605 (=> (not res!43584) (not e!55064))))

(assert (=> d!21605 (= res!43584 (isStrictlySorted!284 lt!39221))))

(assert (=> d!21605 (= (lemmaContainsTupThenGetReturnValue!57 lt!39221 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))) lt!39822)))

(declare-fun b!84446 () Bool)

(declare-fun res!43585 () Bool)

(assert (=> b!84446 (=> (not res!43585) (not e!55064))))

(assert (=> b!84446 (= res!43585 (containsKey!143 lt!39221 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun b!84447 () Bool)

(assert (=> b!84447 (= e!55064 (contains!746 lt!39221 (tuple2!2183 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(assert (= (and d!21605 res!43584) b!84446))

(assert (= (and b!84446 res!43585) b!84447))

(assert (=> d!21605 m!86445))

(declare-fun m!88295 () Bool)

(assert (=> d!21605 m!88295))

(declare-fun m!88297 () Bool)

(assert (=> d!21605 m!88297))

(declare-fun m!88299 () Bool)

(assert (=> b!84446 m!88299))

(declare-fun m!88301 () Bool)

(assert (=> b!84447 m!88301))

(assert (=> d!21019 d!21605))

(declare-fun e!55065 () List!1504)

(declare-fun c!13616 () Bool)

(declare-fun c!13613 () Bool)

(declare-fun b!84449 () Bool)

(assert (=> b!84449 (= e!55065 (ite c!13616 (t!5196 (toList!734 call!7798)) (ite c!13613 (Cons!1500 (h!2090 (toList!734 call!7798)) (t!5196 (toList!734 call!7798))) Nil!1501)))))

(declare-fun bm!7948 () Bool)

(declare-fun call!7951 () List!1504)

(declare-fun c!13614 () Bool)

(assert (=> bm!7948 (= call!7951 ($colon$colon!70 e!55065 (ite c!13614 (h!2090 (toList!734 call!7798)) (tuple2!2183 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))))

(declare-fun c!13615 () Bool)

(assert (=> bm!7948 (= c!13615 c!13614)))

(declare-fun b!84450 () Bool)

(declare-fun e!55069 () List!1504)

(declare-fun call!7953 () List!1504)

(assert (=> b!84450 (= e!55069 call!7953)))

(declare-fun b!84451 () Bool)

(declare-fun e!55067 () List!1504)

(assert (=> b!84451 (= e!55067 call!7951)))

(declare-fun bm!7949 () Bool)

(assert (=> bm!7949 (= call!7953 call!7951)))

(declare-fun bm!7950 () Bool)

(declare-fun call!7952 () List!1504)

(assert (=> bm!7950 (= call!7952 call!7953)))

(declare-fun b!84452 () Bool)

(assert (=> b!84452 (= e!55065 (insertStrictlySorted!60 (t!5196 (toList!734 call!7798)) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun b!84453 () Bool)

(declare-fun e!55068 () List!1504)

(assert (=> b!84453 (= e!55068 call!7952)))

(declare-fun b!84454 () Bool)

(assert (=> b!84454 (= e!55067 e!55069)))

(assert (=> b!84454 (= c!13616 (and ((_ is Cons!1500) (toList!734 call!7798)) (= (_1!1102 (h!2090 (toList!734 call!7798))) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(declare-fun b!84455 () Bool)

(declare-fun e!55066 () Bool)

(declare-fun lt!39823 () List!1504)

(assert (=> b!84455 (= e!55066 (contains!746 lt!39823 (tuple2!2183 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(declare-fun b!84448 () Bool)

(declare-fun res!43587 () Bool)

(assert (=> b!84448 (=> (not res!43587) (not e!55066))))

(assert (=> b!84448 (= res!43587 (containsKey!143 lt!39823 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun d!21607 () Bool)

(assert (=> d!21607 e!55066))

(declare-fun res!43586 () Bool)

(assert (=> d!21607 (=> (not res!43586) (not e!55066))))

(assert (=> d!21607 (= res!43586 (isStrictlySorted!284 lt!39823))))

(assert (=> d!21607 (= lt!39823 e!55067)))

(assert (=> d!21607 (= c!13614 (and ((_ is Cons!1500) (toList!734 call!7798)) (bvslt (_1!1102 (h!2090 (toList!734 call!7798))) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(assert (=> d!21607 (isStrictlySorted!284 (toList!734 call!7798))))

(assert (=> d!21607 (= (insertStrictlySorted!60 (toList!734 call!7798) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))) lt!39823)))

(declare-fun b!84456 () Bool)

(assert (=> b!84456 (= e!55068 call!7952)))

(declare-fun b!84457 () Bool)

(assert (=> b!84457 (= c!13613 (and ((_ is Cons!1500) (toList!734 call!7798)) (bvsgt (_1!1102 (h!2090 (toList!734 call!7798))) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(assert (=> b!84457 (= e!55069 e!55068)))

(assert (= (and d!21607 c!13614) b!84451))

(assert (= (and d!21607 (not c!13614)) b!84454))

(assert (= (and b!84454 c!13616) b!84450))

(assert (= (and b!84454 (not c!13616)) b!84457))

(assert (= (and b!84457 c!13613) b!84453))

(assert (= (and b!84457 (not c!13613)) b!84456))

(assert (= (or b!84453 b!84456) bm!7950))

(assert (= (or b!84450 bm!7950) bm!7949))

(assert (= (or b!84451 bm!7949) bm!7948))

(assert (= (and bm!7948 c!13615) b!84452))

(assert (= (and bm!7948 (not c!13615)) b!84449))

(assert (= (and d!21607 res!43586) b!84448))

(assert (= (and b!84448 res!43587) b!84455))

(declare-fun m!88303 () Bool)

(assert (=> d!21607 m!88303))

(declare-fun m!88305 () Bool)

(assert (=> d!21607 m!88305))

(declare-fun m!88307 () Bool)

(assert (=> b!84452 m!88307))

(declare-fun m!88309 () Bool)

(assert (=> bm!7948 m!88309))

(declare-fun m!88311 () Bool)

(assert (=> b!84448 m!88311))

(declare-fun m!88313 () Bool)

(assert (=> b!84455 m!88313))

(assert (=> d!21019 d!21607))

(declare-fun d!21609 () Bool)

(assert (=> d!21609 (= (get!1201 (getValueByKey!140 (toList!734 (+!105 lt!39108 (tuple2!2183 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))) lt!39117)) (v!2638 (getValueByKey!140 (toList!734 (+!105 lt!39108 (tuple2!2183 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))) lt!39117)))))

(assert (=> d!21105 d!21609))

(declare-fun e!55071 () Option!146)

(declare-fun b!84460 () Bool)

(assert (=> b!84460 (= e!55071 (getValueByKey!140 (t!5196 (toList!734 (+!105 lt!39108 (tuple2!2183 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))) lt!39117))))

(declare-fun c!13617 () Bool)

(declare-fun d!21611 () Bool)

(assert (=> d!21611 (= c!13617 (and ((_ is Cons!1500) (toList!734 (+!105 lt!39108 (tuple2!2183 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))) (= (_1!1102 (h!2090 (toList!734 (+!105 lt!39108 (tuple2!2183 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))) lt!39117)))))

(declare-fun e!55070 () Option!146)

(assert (=> d!21611 (= (getValueByKey!140 (toList!734 (+!105 lt!39108 (tuple2!2183 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))) lt!39117) e!55070)))

(declare-fun b!84458 () Bool)

(assert (=> b!84458 (= e!55070 (Some!145 (_2!1102 (h!2090 (toList!734 (+!105 lt!39108 (tuple2!2183 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))))))))

(declare-fun b!84459 () Bool)

(assert (=> b!84459 (= e!55070 e!55071)))

(declare-fun c!13618 () Bool)

(assert (=> b!84459 (= c!13618 (and ((_ is Cons!1500) (toList!734 (+!105 lt!39108 (tuple2!2183 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))) (not (= (_1!1102 (h!2090 (toList!734 (+!105 lt!39108 (tuple2!2183 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))) lt!39117))))))

(declare-fun b!84461 () Bool)

(assert (=> b!84461 (= e!55071 None!144)))

(assert (= (and d!21611 c!13617) b!84458))

(assert (= (and d!21611 (not c!13617)) b!84459))

(assert (= (and b!84459 c!13618) b!84460))

(assert (= (and b!84459 (not c!13618)) b!84461))

(declare-fun m!88315 () Bool)

(assert (=> b!84460 m!88315))

(assert (=> d!21105 d!21611))

(declare-fun d!21613 () Bool)

(declare-fun e!55073 () Bool)

(assert (=> d!21613 e!55073))

(declare-fun res!43588 () Bool)

(assert (=> d!21613 (=> res!43588 e!55073)))

(declare-fun lt!39824 () Bool)

(assert (=> d!21613 (= res!43588 (not lt!39824))))

(declare-fun lt!39827 () Bool)

(assert (=> d!21613 (= lt!39824 lt!39827)))

(declare-fun lt!39826 () Unit!2413)

(declare-fun e!55072 () Unit!2413)

(assert (=> d!21613 (= lt!39826 e!55072)))

(declare-fun c!13619 () Bool)

(assert (=> d!21613 (= c!13619 lt!39827)))

(assert (=> d!21613 (= lt!39827 (containsKey!143 (toList!734 lt!39143) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!21613 (= (contains!744 lt!39143 #b0000000000000000000000000000000000000000000000000000000000000000) lt!39824)))

(declare-fun b!84462 () Bool)

(declare-fun lt!39825 () Unit!2413)

(assert (=> b!84462 (= e!55072 lt!39825)))

(assert (=> b!84462 (= lt!39825 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 lt!39143) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!84462 (isDefined!92 (getValueByKey!140 (toList!734 lt!39143) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!84463 () Bool)

(declare-fun Unit!2472 () Unit!2413)

(assert (=> b!84463 (= e!55072 Unit!2472)))

(declare-fun b!84464 () Bool)

(assert (=> b!84464 (= e!55073 (isDefined!92 (getValueByKey!140 (toList!734 lt!39143) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!21613 c!13619) b!84462))

(assert (= (and d!21613 (not c!13619)) b!84463))

(assert (= (and d!21613 (not res!43588)) b!84464))

(declare-fun m!88317 () Bool)

(assert (=> d!21613 m!88317))

(declare-fun m!88319 () Bool)

(assert (=> b!84462 m!88319))

(declare-fun m!88321 () Bool)

(assert (=> b!84462 m!88321))

(assert (=> b!84462 m!88321))

(declare-fun m!88323 () Bool)

(assert (=> b!84462 m!88323))

(assert (=> b!84464 m!88321))

(assert (=> b!84464 m!88321))

(assert (=> b!84464 m!88323))

(assert (=> bm!7800 d!21613))

(declare-fun b!84467 () Bool)

(declare-fun e!55075 () Option!146)

(assert (=> b!84467 (= e!55075 (getValueByKey!140 (t!5196 (toList!734 lt!39270)) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun d!21615 () Bool)

(declare-fun c!13620 () Bool)

(assert (=> d!21615 (= c!13620 (and ((_ is Cons!1500) (toList!734 lt!39270)) (= (_1!1102 (h!2090 (toList!734 lt!39270))) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!55074 () Option!146)

(assert (=> d!21615 (= (getValueByKey!140 (toList!734 lt!39270) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!55074)))

(declare-fun b!84465 () Bool)

(assert (=> b!84465 (= e!55074 (Some!145 (_2!1102 (h!2090 (toList!734 lt!39270)))))))

(declare-fun b!84466 () Bool)

(assert (=> b!84466 (= e!55074 e!55075)))

(declare-fun c!13621 () Bool)

(assert (=> b!84466 (= c!13621 (and ((_ is Cons!1500) (toList!734 lt!39270)) (not (= (_1!1102 (h!2090 (toList!734 lt!39270))) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!84468 () Bool)

(assert (=> b!84468 (= e!55075 None!144)))

(assert (= (and d!21615 c!13620) b!84465))

(assert (= (and d!21615 (not c!13620)) b!84466))

(assert (= (and b!84466 c!13621) b!84467))

(assert (= (and b!84466 (not c!13621)) b!84468))

(declare-fun m!88325 () Bool)

(assert (=> b!84467 m!88325))

(assert (=> b!83470 d!21615))

(declare-fun d!21617 () Bool)

(assert (=> d!21617 (= (apply!81 lt!39451 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1201 (getValueByKey!140 (toList!734 lt!39451) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3575 () Bool)

(assert (= bs!3575 d!21617))

(assert (=> bs!3575 m!87813))

(assert (=> bs!3575 m!87813))

(declare-fun m!88327 () Bool)

(assert (=> bs!3575 m!88327))

(assert (=> b!83662 d!21617))

(assert (=> d!21033 d!21267))

(declare-fun b!84471 () Bool)

(declare-fun e!55077 () Option!146)

(assert (=> b!84471 (= e!55077 (getValueByKey!140 (t!5196 (toList!734 lt!39190)) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(declare-fun c!13622 () Bool)

(declare-fun d!21619 () Bool)

(assert (=> d!21619 (= c!13622 (and ((_ is Cons!1500) (toList!734 lt!39190)) (= (_1!1102 (h!2090 (toList!734 lt!39190))) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))

(declare-fun e!55076 () Option!146)

(assert (=> d!21619 (= (getValueByKey!140 (toList!734 lt!39190) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))) e!55076)))

(declare-fun b!84469 () Bool)

(assert (=> b!84469 (= e!55076 (Some!145 (_2!1102 (h!2090 (toList!734 lt!39190)))))))

(declare-fun b!84470 () Bool)

(assert (=> b!84470 (= e!55076 e!55077)))

(declare-fun c!13623 () Bool)

(assert (=> b!84470 (= c!13623 (and ((_ is Cons!1500) (toList!734 lt!39190)) (not (= (_1!1102 (h!2090 (toList!734 lt!39190))) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))))

(declare-fun b!84472 () Bool)

(assert (=> b!84472 (= e!55077 None!144)))

(assert (= (and d!21619 c!13622) b!84469))

(assert (= (and d!21619 (not c!13622)) b!84470))

(assert (= (and b!84470 c!13623) b!84471))

(assert (= (and b!84470 (not c!13623)) b!84472))

(declare-fun m!88329 () Bool)

(assert (=> b!84471 m!88329))

(assert (=> b!83329 d!21619))

(assert (=> b!83586 d!21173))

(declare-fun d!21621 () Bool)

(assert (=> d!21621 (= (get!1201 (getValueByKey!140 (toList!734 (+!105 lt!39115 (tuple2!2183 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))) lt!39101)) (v!2638 (getValueByKey!140 (toList!734 (+!105 lt!39115 (tuple2!2183 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))) lt!39101)))))

(assert (=> d!21097 d!21621))

(declare-fun b!84475 () Bool)

(declare-fun e!55079 () Option!146)

(assert (=> b!84475 (= e!55079 (getValueByKey!140 (t!5196 (toList!734 (+!105 lt!39115 (tuple2!2183 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))) lt!39101))))

(declare-fun d!21623 () Bool)

(declare-fun c!13624 () Bool)

(assert (=> d!21623 (= c!13624 (and ((_ is Cons!1500) (toList!734 (+!105 lt!39115 (tuple2!2183 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))) (= (_1!1102 (h!2090 (toList!734 (+!105 lt!39115 (tuple2!2183 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))) lt!39101)))))

(declare-fun e!55078 () Option!146)

(assert (=> d!21623 (= (getValueByKey!140 (toList!734 (+!105 lt!39115 (tuple2!2183 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))) lt!39101) e!55078)))

(declare-fun b!84473 () Bool)

(assert (=> b!84473 (= e!55078 (Some!145 (_2!1102 (h!2090 (toList!734 (+!105 lt!39115 (tuple2!2183 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))))

(declare-fun b!84474 () Bool)

(assert (=> b!84474 (= e!55078 e!55079)))

(declare-fun c!13625 () Bool)

(assert (=> b!84474 (= c!13625 (and ((_ is Cons!1500) (toList!734 (+!105 lt!39115 (tuple2!2183 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))) (not (= (_1!1102 (h!2090 (toList!734 (+!105 lt!39115 (tuple2!2183 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))) lt!39101))))))

(declare-fun b!84476 () Bool)

(assert (=> b!84476 (= e!55079 None!144)))

(assert (= (and d!21623 c!13624) b!84473))

(assert (= (and d!21623 (not c!13624)) b!84474))

(assert (= (and b!84474 c!13625) b!84475))

(assert (= (and b!84474 (not c!13625)) b!84476))

(declare-fun m!88331 () Bool)

(assert (=> b!84475 m!88331))

(assert (=> d!21097 d!21623))

(declare-fun d!21625 () Bool)

(declare-fun e!55081 () Bool)

(assert (=> d!21625 e!55081))

(declare-fun res!43589 () Bool)

(assert (=> d!21625 (=> res!43589 e!55081)))

(declare-fun lt!39828 () Bool)

(assert (=> d!21625 (= res!43589 (not lt!39828))))

(declare-fun lt!39831 () Bool)

(assert (=> d!21625 (= lt!39828 lt!39831)))

(declare-fun lt!39830 () Unit!2413)

(declare-fun e!55080 () Unit!2413)

(assert (=> d!21625 (= lt!39830 e!55080)))

(declare-fun c!13626 () Bool)

(assert (=> d!21625 (= c!13626 lt!39831)))

(assert (=> d!21625 (= lt!39831 (containsKey!143 (toList!734 lt!39270) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!21625 (= (contains!744 lt!39270 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!39828)))

(declare-fun b!84477 () Bool)

(declare-fun lt!39829 () Unit!2413)

(assert (=> b!84477 (= e!55080 lt!39829)))

(assert (=> b!84477 (= lt!39829 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 lt!39270) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!84477 (isDefined!92 (getValueByKey!140 (toList!734 lt!39270) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!84478 () Bool)

(declare-fun Unit!2473 () Unit!2413)

(assert (=> b!84478 (= e!55080 Unit!2473)))

(declare-fun b!84479 () Bool)

(assert (=> b!84479 (= e!55081 (isDefined!92 (getValueByKey!140 (toList!734 lt!39270) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!21625 c!13626) b!84477))

(assert (= (and d!21625 (not c!13626)) b!84478))

(assert (= (and d!21625 (not res!43589)) b!84479))

(declare-fun m!88333 () Bool)

(assert (=> d!21625 m!88333))

(declare-fun m!88335 () Bool)

(assert (=> b!84477 m!88335))

(assert (=> b!84477 m!86597))

(assert (=> b!84477 m!86597))

(declare-fun m!88337 () Bool)

(assert (=> b!84477 m!88337))

(assert (=> b!84479 m!86597))

(assert (=> b!84479 m!86597))

(assert (=> b!84479 m!88337))

(assert (=> d!21047 d!21625))

(declare-fun b!84482 () Bool)

(declare-fun e!55083 () Option!146)

(assert (=> b!84482 (= e!55083 (getValueByKey!140 (t!5196 lt!39272) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun d!21627 () Bool)

(declare-fun c!13627 () Bool)

(assert (=> d!21627 (= c!13627 (and ((_ is Cons!1500) lt!39272) (= (_1!1102 (h!2090 lt!39272)) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!55082 () Option!146)

(assert (=> d!21627 (= (getValueByKey!140 lt!39272 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!55082)))

(declare-fun b!84480 () Bool)

(assert (=> b!84480 (= e!55082 (Some!145 (_2!1102 (h!2090 lt!39272))))))

(declare-fun b!84481 () Bool)

(assert (=> b!84481 (= e!55082 e!55083)))

(declare-fun c!13628 () Bool)

(assert (=> b!84481 (= c!13628 (and ((_ is Cons!1500) lt!39272) (not (= (_1!1102 (h!2090 lt!39272)) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!84483 () Bool)

(assert (=> b!84483 (= e!55083 None!144)))

(assert (= (and d!21627 c!13627) b!84480))

(assert (= (and d!21627 (not c!13627)) b!84481))

(assert (= (and b!84481 c!13628) b!84482))

(assert (= (and b!84481 (not c!13628)) b!84483))

(declare-fun m!88339 () Bool)

(assert (=> b!84482 m!88339))

(assert (=> d!21047 d!21627))

(declare-fun d!21629 () Bool)

(assert (=> d!21629 (= (getValueByKey!140 lt!39272 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!145 (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!39832 () Unit!2413)

(assert (=> d!21629 (= lt!39832 (choose!493 lt!39272 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!55084 () Bool)

(assert (=> d!21629 e!55084))

(declare-fun res!43590 () Bool)

(assert (=> d!21629 (=> (not res!43590) (not e!55084))))

(assert (=> d!21629 (= res!43590 (isStrictlySorted!284 lt!39272))))

(assert (=> d!21629 (= (lemmaContainsTupThenGetReturnValue!57 lt!39272 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!39832)))

(declare-fun b!84484 () Bool)

(declare-fun res!43591 () Bool)

(assert (=> b!84484 (=> (not res!43591) (not e!55084))))

(assert (=> b!84484 (= res!43591 (containsKey!143 lt!39272 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!84485 () Bool)

(assert (=> b!84485 (= e!55084 (contains!746 lt!39272 (tuple2!2183 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!21629 res!43590) b!84484))

(assert (= (and b!84484 res!43591) b!84485))

(assert (=> d!21629 m!86591))

(declare-fun m!88341 () Bool)

(assert (=> d!21629 m!88341))

(declare-fun m!88343 () Bool)

(assert (=> d!21629 m!88343))

(declare-fun m!88345 () Bool)

(assert (=> b!84484 m!88345))

(declare-fun m!88347 () Bool)

(assert (=> b!84485 m!88347))

(assert (=> d!21047 d!21629))

(declare-fun e!55085 () List!1504)

(declare-fun c!13632 () Bool)

(declare-fun b!84487 () Bool)

(declare-fun c!13629 () Bool)

(assert (=> b!84487 (= e!55085 (ite c!13632 (t!5196 (toList!734 call!7780)) (ite c!13629 (Cons!1500 (h!2090 (toList!734 call!7780)) (t!5196 (toList!734 call!7780))) Nil!1501)))))

(declare-fun call!7954 () List!1504)

(declare-fun bm!7951 () Bool)

(declare-fun c!13630 () Bool)

(assert (=> bm!7951 (= call!7954 ($colon$colon!70 e!55085 (ite c!13630 (h!2090 (toList!734 call!7780)) (tuple2!2183 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!13631 () Bool)

(assert (=> bm!7951 (= c!13631 c!13630)))

(declare-fun b!84488 () Bool)

(declare-fun e!55089 () List!1504)

(declare-fun call!7956 () List!1504)

(assert (=> b!84488 (= e!55089 call!7956)))

(declare-fun b!84489 () Bool)

(declare-fun e!55087 () List!1504)

(assert (=> b!84489 (= e!55087 call!7954)))

(declare-fun bm!7952 () Bool)

(assert (=> bm!7952 (= call!7956 call!7954)))

(declare-fun bm!7953 () Bool)

(declare-fun call!7955 () List!1504)

(assert (=> bm!7953 (= call!7955 call!7956)))

(declare-fun b!84490 () Bool)

(assert (=> b!84490 (= e!55085 (insertStrictlySorted!60 (t!5196 (toList!734 call!7780)) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!84491 () Bool)

(declare-fun e!55088 () List!1504)

(assert (=> b!84491 (= e!55088 call!7955)))

(declare-fun b!84492 () Bool)

(assert (=> b!84492 (= e!55087 e!55089)))

(assert (=> b!84492 (= c!13632 (and ((_ is Cons!1500) (toList!734 call!7780)) (= (_1!1102 (h!2090 (toList!734 call!7780))) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!55086 () Bool)

(declare-fun b!84493 () Bool)

(declare-fun lt!39833 () List!1504)

(assert (=> b!84493 (= e!55086 (contains!746 lt!39833 (tuple2!2183 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!84486 () Bool)

(declare-fun res!43593 () Bool)

(assert (=> b!84486 (=> (not res!43593) (not e!55086))))

(assert (=> b!84486 (= res!43593 (containsKey!143 lt!39833 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun d!21631 () Bool)

(assert (=> d!21631 e!55086))

(declare-fun res!43592 () Bool)

(assert (=> d!21631 (=> (not res!43592) (not e!55086))))

(assert (=> d!21631 (= res!43592 (isStrictlySorted!284 lt!39833))))

(assert (=> d!21631 (= lt!39833 e!55087)))

(assert (=> d!21631 (= c!13630 (and ((_ is Cons!1500) (toList!734 call!7780)) (bvslt (_1!1102 (h!2090 (toList!734 call!7780))) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!21631 (isStrictlySorted!284 (toList!734 call!7780))))

(assert (=> d!21631 (= (insertStrictlySorted!60 (toList!734 call!7780) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!39833)))

(declare-fun b!84494 () Bool)

(assert (=> b!84494 (= e!55088 call!7955)))

(declare-fun b!84495 () Bool)

(assert (=> b!84495 (= c!13629 (and ((_ is Cons!1500) (toList!734 call!7780)) (bvsgt (_1!1102 (h!2090 (toList!734 call!7780))) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!84495 (= e!55089 e!55088)))

(assert (= (and d!21631 c!13630) b!84489))

(assert (= (and d!21631 (not c!13630)) b!84492))

(assert (= (and b!84492 c!13632) b!84488))

(assert (= (and b!84492 (not c!13632)) b!84495))

(assert (= (and b!84495 c!13629) b!84491))

(assert (= (and b!84495 (not c!13629)) b!84494))

(assert (= (or b!84491 b!84494) bm!7953))

(assert (= (or b!84488 bm!7953) bm!7952))

(assert (= (or b!84489 bm!7952) bm!7951))

(assert (= (and bm!7951 c!13631) b!84490))

(assert (= (and bm!7951 (not c!13631)) b!84487))

(assert (= (and d!21631 res!43592) b!84486))

(assert (= (and b!84486 res!43593) b!84493))

(declare-fun m!88349 () Bool)

(assert (=> d!21631 m!88349))

(declare-fun m!88351 () Bool)

(assert (=> d!21631 m!88351))

(declare-fun m!88353 () Bool)

(assert (=> b!84490 m!88353))

(declare-fun m!88355 () Bool)

(assert (=> bm!7951 m!88355))

(declare-fun m!88357 () Bool)

(assert (=> b!84486 m!88357))

(declare-fun m!88359 () Bool)

(assert (=> b!84493 m!88359))

(assert (=> d!21047 d!21631))

(assert (=> d!21027 d!21025))

(declare-fun d!21633 () Bool)

(assert (=> d!21633 (= (getValueByKey!140 lt!39010 (_1!1102 lt!38775)) (Some!145 (_2!1102 lt!38775)))))

(assert (=> d!21633 true))

(declare-fun _$22!410 () Unit!2413)

(assert (=> d!21633 (= (choose!493 lt!39010 (_1!1102 lt!38775) (_2!1102 lt!38775)) _$22!410)))

(declare-fun bs!3576 () Bool)

(assert (= bs!3576 d!21633))

(assert (=> bs!3576 m!86015))

(assert (=> d!21027 d!21633))

(declare-fun d!21635 () Bool)

(declare-fun res!43594 () Bool)

(declare-fun e!55090 () Bool)

(assert (=> d!21635 (=> res!43594 e!55090)))

(assert (=> d!21635 (= res!43594 (or ((_ is Nil!1501) lt!39010) ((_ is Nil!1501) (t!5196 lt!39010))))))

(assert (=> d!21635 (= (isStrictlySorted!284 lt!39010) e!55090)))

(declare-fun b!84496 () Bool)

(declare-fun e!55091 () Bool)

(assert (=> b!84496 (= e!55090 e!55091)))

(declare-fun res!43595 () Bool)

(assert (=> b!84496 (=> (not res!43595) (not e!55091))))

(assert (=> b!84496 (= res!43595 (bvslt (_1!1102 (h!2090 lt!39010)) (_1!1102 (h!2090 (t!5196 lt!39010)))))))

(declare-fun b!84497 () Bool)

(assert (=> b!84497 (= e!55091 (isStrictlySorted!284 (t!5196 lt!39010)))))

(assert (= (and d!21635 (not res!43594)) b!84496))

(assert (= (and b!84496 res!43595) b!84497))

(declare-fun m!88361 () Bool)

(assert (=> b!84497 m!88361))

(assert (=> d!21027 d!21635))

(declare-fun d!21637 () Bool)

(declare-fun lt!39834 () Bool)

(assert (=> d!21637 (= lt!39834 (select (content!89 lt!39227) (tuple2!2183 (_1!1102 lt!38775) (_2!1102 lt!38775))))))

(declare-fun e!55092 () Bool)

(assert (=> d!21637 (= lt!39834 e!55092)))

(declare-fun res!43597 () Bool)

(assert (=> d!21637 (=> (not res!43597) (not e!55092))))

(assert (=> d!21637 (= res!43597 ((_ is Cons!1500) lt!39227))))

(assert (=> d!21637 (= (contains!746 lt!39227 (tuple2!2183 (_1!1102 lt!38775) (_2!1102 lt!38775))) lt!39834)))

(declare-fun b!84498 () Bool)

(declare-fun e!55093 () Bool)

(assert (=> b!84498 (= e!55092 e!55093)))

(declare-fun res!43596 () Bool)

(assert (=> b!84498 (=> res!43596 e!55093)))

(assert (=> b!84498 (= res!43596 (= (h!2090 lt!39227) (tuple2!2183 (_1!1102 lt!38775) (_2!1102 lt!38775))))))

(declare-fun b!84499 () Bool)

(assert (=> b!84499 (= e!55093 (contains!746 (t!5196 lt!39227) (tuple2!2183 (_1!1102 lt!38775) (_2!1102 lt!38775))))))

(assert (= (and d!21637 res!43597) b!84498))

(assert (= (and b!84498 (not res!43596)) b!84499))

(declare-fun m!88363 () Bool)

(assert (=> d!21637 m!88363))

(declare-fun m!88365 () Bool)

(assert (=> d!21637 m!88365))

(declare-fun m!88367 () Bool)

(assert (=> b!84499 m!88367))

(assert (=> b!83425 d!21637))

(declare-fun b!84502 () Bool)

(declare-fun e!55095 () Option!146)

(assert (=> b!84502 (= e!55095 (getValueByKey!140 (t!5196 (toList!734 lt!39475)) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun d!21639 () Bool)

(declare-fun c!13633 () Bool)

(assert (=> d!21639 (= c!13633 (and ((_ is Cons!1500) (toList!734 lt!39475)) (= (_1!1102 (h!2090 (toList!734 lt!39475))) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(declare-fun e!55094 () Option!146)

(assert (=> d!21639 (= (getValueByKey!140 (toList!734 lt!39475) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))) e!55094)))

(declare-fun b!84500 () Bool)

(assert (=> b!84500 (= e!55094 (Some!145 (_2!1102 (h!2090 (toList!734 lt!39475)))))))

(declare-fun b!84501 () Bool)

(assert (=> b!84501 (= e!55094 e!55095)))

(declare-fun c!13634 () Bool)

(assert (=> b!84501 (= c!13634 (and ((_ is Cons!1500) (toList!734 lt!39475)) (not (= (_1!1102 (h!2090 (toList!734 lt!39475))) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))))

(declare-fun b!84503 () Bool)

(assert (=> b!84503 (= e!55095 None!144)))

(assert (= (and d!21639 c!13633) b!84500))

(assert (= (and d!21639 (not c!13633)) b!84501))

(assert (= (and b!84501 c!13634) b!84502))

(assert (= (and b!84501 (not c!13634)) b!84503))

(declare-fun m!88369 () Bool)

(assert (=> b!84502 m!88369))

(assert (=> b!83687 d!21639))

(declare-fun b!84506 () Bool)

(declare-fun e!55097 () Option!146)

(assert (=> b!84506 (= e!55097 (getValueByKey!140 (t!5196 (t!5196 (toList!734 lt!39044))) (_1!1102 lt!38775)))))

(declare-fun d!21641 () Bool)

(declare-fun c!13635 () Bool)

(assert (=> d!21641 (= c!13635 (and ((_ is Cons!1500) (t!5196 (toList!734 lt!39044))) (= (_1!1102 (h!2090 (t!5196 (toList!734 lt!39044)))) (_1!1102 lt!38775))))))

(declare-fun e!55096 () Option!146)

(assert (=> d!21641 (= (getValueByKey!140 (t!5196 (toList!734 lt!39044)) (_1!1102 lt!38775)) e!55096)))

(declare-fun b!84504 () Bool)

(assert (=> b!84504 (= e!55096 (Some!145 (_2!1102 (h!2090 (t!5196 (toList!734 lt!39044))))))))

(declare-fun b!84505 () Bool)

(assert (=> b!84505 (= e!55096 e!55097)))

(declare-fun c!13636 () Bool)

(assert (=> b!84505 (= c!13636 (and ((_ is Cons!1500) (t!5196 (toList!734 lt!39044))) (not (= (_1!1102 (h!2090 (t!5196 (toList!734 lt!39044)))) (_1!1102 lt!38775)))))))

(declare-fun b!84507 () Bool)

(assert (=> b!84507 (= e!55097 None!144)))

(assert (= (and d!21641 c!13635) b!84504))

(assert (= (and d!21641 (not c!13635)) b!84505))

(assert (= (and b!84505 c!13636) b!84506))

(assert (= (and b!84505 (not c!13636)) b!84507))

(declare-fun m!88371 () Bool)

(assert (=> b!84506 m!88371))

(assert (=> b!83602 d!21641))

(declare-fun e!55099 () Option!146)

(declare-fun b!84510 () Bool)

(assert (=> b!84510 (= e!55099 (getValueByKey!140 (t!5196 (toList!734 lt!39500)) (_1!1102 (ite c!13224 (ite c!13215 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))

(declare-fun d!21643 () Bool)

(declare-fun c!13637 () Bool)

(assert (=> d!21643 (= c!13637 (and ((_ is Cons!1500) (toList!734 lt!39500)) (= (_1!1102 (h!2090 (toList!734 lt!39500))) (_1!1102 (ite c!13224 (ite c!13215 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))))

(declare-fun e!55098 () Option!146)

(assert (=> d!21643 (= (getValueByKey!140 (toList!734 lt!39500) (_1!1102 (ite c!13224 (ite c!13215 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))) e!55098)))

(declare-fun b!84508 () Bool)

(assert (=> b!84508 (= e!55098 (Some!145 (_2!1102 (h!2090 (toList!734 lt!39500)))))))

(declare-fun b!84509 () Bool)

(assert (=> b!84509 (= e!55098 e!55099)))

(declare-fun c!13638 () Bool)

(assert (=> b!84509 (= c!13638 (and ((_ is Cons!1500) (toList!734 lt!39500)) (not (= (_1!1102 (h!2090 (toList!734 lt!39500))) (_1!1102 (ite c!13224 (ite c!13215 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))))

(declare-fun b!84511 () Bool)

(assert (=> b!84511 (= e!55099 None!144)))

(assert (= (and d!21643 c!13637) b!84508))

(assert (= (and d!21643 (not c!13637)) b!84509))

(assert (= (and b!84509 c!13638) b!84510))

(assert (= (and b!84509 (not c!13638)) b!84511))

(declare-fun m!88373 () Bool)

(assert (=> b!84510 m!88373))

(assert (=> b!83726 d!21643))

(declare-fun d!21645 () Bool)

(assert (=> d!21645 (= (apply!81 lt!39241 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1201 (getValueByKey!140 (toList!734 lt!39241) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3577 () Bool)

(assert (= bs!3577 d!21645))

(declare-fun m!88375 () Bool)

(assert (=> bs!3577 m!88375))

(assert (=> bs!3577 m!88375))

(declare-fun m!88377 () Bool)

(assert (=> bs!3577 m!88377))

(assert (=> b!83440 d!21645))

(declare-fun d!21647 () Bool)

(declare-fun res!43598 () Bool)

(declare-fun e!55100 () Bool)

(assert (=> d!21647 (=> res!43598 e!55100)))

(assert (=> d!21647 (= res!43598 (and ((_ is Cons!1500) lt!39517) (= (_1!1102 (h!2090 lt!39517)) (_1!1102 lt!38779))))))

(assert (=> d!21647 (= (containsKey!143 lt!39517 (_1!1102 lt!38779)) e!55100)))

(declare-fun b!84512 () Bool)

(declare-fun e!55101 () Bool)

(assert (=> b!84512 (= e!55100 e!55101)))

(declare-fun res!43599 () Bool)

(assert (=> b!84512 (=> (not res!43599) (not e!55101))))

(assert (=> b!84512 (= res!43599 (and (or (not ((_ is Cons!1500) lt!39517)) (bvsle (_1!1102 (h!2090 lt!39517)) (_1!1102 lt!38779))) ((_ is Cons!1500) lt!39517) (bvslt (_1!1102 (h!2090 lt!39517)) (_1!1102 lt!38779))))))

(declare-fun b!84513 () Bool)

(assert (=> b!84513 (= e!55101 (containsKey!143 (t!5196 lt!39517) (_1!1102 lt!38779)))))

(assert (= (and d!21647 (not res!43598)) b!84512))

(assert (= (and b!84512 res!43599) b!84513))

(declare-fun m!88379 () Bool)

(assert (=> b!84513 m!88379))

(assert (=> b!83769 d!21647))

(declare-fun d!21649 () Bool)

(declare-fun lt!39835 () Bool)

(assert (=> d!21649 (= lt!39835 (select (content!89 lt!39051) (tuple2!2183 (_1!1102 lt!38772) (_2!1102 lt!38772))))))

(declare-fun e!55102 () Bool)

(assert (=> d!21649 (= lt!39835 e!55102)))

(declare-fun res!43601 () Bool)

(assert (=> d!21649 (=> (not res!43601) (not e!55102))))

(assert (=> d!21649 (= res!43601 ((_ is Cons!1500) lt!39051))))

(assert (=> d!21649 (= (contains!746 lt!39051 (tuple2!2183 (_1!1102 lt!38772) (_2!1102 lt!38772))) lt!39835)))

(declare-fun b!84514 () Bool)

(declare-fun e!55103 () Bool)

(assert (=> b!84514 (= e!55102 e!55103)))

(declare-fun res!43600 () Bool)

(assert (=> b!84514 (=> res!43600 e!55103)))

(assert (=> b!84514 (= res!43600 (= (h!2090 lt!39051) (tuple2!2183 (_1!1102 lt!38772) (_2!1102 lt!38772))))))

(declare-fun b!84515 () Bool)

(assert (=> b!84515 (= e!55103 (contains!746 (t!5196 lt!39051) (tuple2!2183 (_1!1102 lt!38772) (_2!1102 lt!38772))))))

(assert (= (and d!21649 res!43601) b!84514))

(assert (= (and b!84514 (not res!43600)) b!84515))

(declare-fun m!88381 () Bool)

(assert (=> d!21649 m!88381))

(declare-fun m!88383 () Bool)

(assert (=> d!21649 m!88383))

(declare-fun m!88385 () Bool)

(assert (=> b!84515 m!88385))

(assert (=> b!83504 d!21649))

(assert (=> d!20995 d!20993))

(declare-fun d!21651 () Bool)

(assert (=> d!21651 (= (getValueByKey!140 lt!39014 (_1!1102 lt!38772)) (Some!145 (_2!1102 lt!38772)))))

(assert (=> d!21651 true))

(declare-fun _$22!411 () Unit!2413)

(assert (=> d!21651 (= (choose!493 lt!39014 (_1!1102 lt!38772) (_2!1102 lt!38772)) _$22!411)))

(declare-fun bs!3578 () Bool)

(assert (= bs!3578 d!21651))

(assert (=> bs!3578 m!86027))

(assert (=> d!20995 d!21651))

(declare-fun d!21653 () Bool)

(declare-fun res!43602 () Bool)

(declare-fun e!55104 () Bool)

(assert (=> d!21653 (=> res!43602 e!55104)))

(assert (=> d!21653 (= res!43602 (or ((_ is Nil!1501) lt!39014) ((_ is Nil!1501) (t!5196 lt!39014))))))

(assert (=> d!21653 (= (isStrictlySorted!284 lt!39014) e!55104)))

(declare-fun b!84516 () Bool)

(declare-fun e!55105 () Bool)

(assert (=> b!84516 (= e!55104 e!55105)))

(declare-fun res!43603 () Bool)

(assert (=> b!84516 (=> (not res!43603) (not e!55105))))

(assert (=> b!84516 (= res!43603 (bvslt (_1!1102 (h!2090 lt!39014)) (_1!1102 (h!2090 (t!5196 lt!39014)))))))

(declare-fun b!84517 () Bool)

(assert (=> b!84517 (= e!55105 (isStrictlySorted!284 (t!5196 lt!39014)))))

(assert (= (and d!21653 (not res!43602)) b!84516))

(assert (= (and b!84516 res!43603) b!84517))

(declare-fun m!88387 () Bool)

(assert (=> b!84517 m!88387))

(assert (=> d!20995 d!21653))

(declare-fun e!55107 () Option!146)

(declare-fun b!84520 () Bool)

(assert (=> b!84520 (= e!55107 (getValueByKey!140 (t!5196 (toList!734 lt!39467)) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(declare-fun c!13639 () Bool)

(declare-fun d!21655 () Bool)

(assert (=> d!21655 (= c!13639 (and ((_ is Cons!1500) (toList!734 lt!39467)) (= (_1!1102 (h!2090 (toList!734 lt!39467))) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))

(declare-fun e!55106 () Option!146)

(assert (=> d!21655 (= (getValueByKey!140 (toList!734 lt!39467) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))) e!55106)))

(declare-fun b!84518 () Bool)

(assert (=> b!84518 (= e!55106 (Some!145 (_2!1102 (h!2090 (toList!734 lt!39467)))))))

(declare-fun b!84519 () Bool)

(assert (=> b!84519 (= e!55106 e!55107)))

(declare-fun c!13640 () Bool)

(assert (=> b!84519 (= c!13640 (and ((_ is Cons!1500) (toList!734 lt!39467)) (not (= (_1!1102 (h!2090 (toList!734 lt!39467))) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))))

(declare-fun b!84521 () Bool)

(assert (=> b!84521 (= e!55107 None!144)))

(assert (= (and d!21655 c!13639) b!84518))

(assert (= (and d!21655 (not c!13639)) b!84519))

(assert (= (and b!84519 c!13640) b!84520))

(assert (= (and b!84519 (not c!13640)) b!84521))

(declare-fun m!88389 () Bool)

(assert (=> b!84520 m!88389))

(assert (=> b!83683 d!21655))

(declare-fun d!21657 () Bool)

(declare-fun e!55109 () Bool)

(assert (=> d!21657 e!55109))

(declare-fun res!43604 () Bool)

(assert (=> d!21657 (=> res!43604 e!55109)))

(declare-fun lt!39836 () Bool)

(assert (=> d!21657 (= res!43604 (not lt!39836))))

(declare-fun lt!39839 () Bool)

(assert (=> d!21657 (= lt!39836 lt!39839)))

(declare-fun lt!39838 () Unit!2413)

(declare-fun e!55108 () Unit!2413)

(assert (=> d!21657 (= lt!39838 e!55108)))

(declare-fun c!13641 () Bool)

(assert (=> d!21657 (= c!13641 lt!39839)))

(assert (=> d!21657 (= lt!39839 (containsKey!143 (toList!734 lt!39500) (_1!1102 (ite c!13224 (ite c!13215 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))

(assert (=> d!21657 (= (contains!744 lt!39500 (_1!1102 (ite c!13224 (ite c!13215 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))) lt!39836)))

(declare-fun b!84522 () Bool)

(declare-fun lt!39837 () Unit!2413)

(assert (=> b!84522 (= e!55108 lt!39837)))

(assert (=> b!84522 (= lt!39837 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 lt!39500) (_1!1102 (ite c!13224 (ite c!13215 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))

(assert (=> b!84522 (isDefined!92 (getValueByKey!140 (toList!734 lt!39500) (_1!1102 (ite c!13224 (ite c!13215 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))

(declare-fun b!84523 () Bool)

(declare-fun Unit!2474 () Unit!2413)

(assert (=> b!84523 (= e!55108 Unit!2474)))

(declare-fun b!84524 () Bool)

(assert (=> b!84524 (= e!55109 (isDefined!92 (getValueByKey!140 (toList!734 lt!39500) (_1!1102 (ite c!13224 (ite c!13215 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))))

(assert (= (and d!21657 c!13641) b!84522))

(assert (= (and d!21657 (not c!13641)) b!84523))

(assert (= (and d!21657 (not res!43604)) b!84524))

(declare-fun m!88391 () Bool)

(assert (=> d!21657 m!88391))

(declare-fun m!88393 () Bool)

(assert (=> b!84522 m!88393))

(assert (=> b!84522 m!87093))

(assert (=> b!84522 m!87093))

(declare-fun m!88395 () Bool)

(assert (=> b!84522 m!88395))

(assert (=> b!84524 m!87093))

(assert (=> b!84524 m!87093))

(assert (=> b!84524 m!88395))

(assert (=> d!21175 d!21657))

(declare-fun b!84527 () Bool)

(declare-fun e!55111 () Option!146)

(assert (=> b!84527 (= e!55111 (getValueByKey!140 (t!5196 lt!39502) (_1!1102 (ite c!13224 (ite c!13215 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))

(declare-fun d!21659 () Bool)

(declare-fun c!13642 () Bool)

(assert (=> d!21659 (= c!13642 (and ((_ is Cons!1500) lt!39502) (= (_1!1102 (h!2090 lt!39502)) (_1!1102 (ite c!13224 (ite c!13215 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))))

(declare-fun e!55110 () Option!146)

(assert (=> d!21659 (= (getValueByKey!140 lt!39502 (_1!1102 (ite c!13224 (ite c!13215 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))) e!55110)))

(declare-fun b!84525 () Bool)

(assert (=> b!84525 (= e!55110 (Some!145 (_2!1102 (h!2090 lt!39502))))))

(declare-fun b!84526 () Bool)

(assert (=> b!84526 (= e!55110 e!55111)))

(declare-fun c!13643 () Bool)

(assert (=> b!84526 (= c!13643 (and ((_ is Cons!1500) lt!39502) (not (= (_1!1102 (h!2090 lt!39502)) (_1!1102 (ite c!13224 (ite c!13215 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))))

(declare-fun b!84528 () Bool)

(assert (=> b!84528 (= e!55111 None!144)))

(assert (= (and d!21659 c!13642) b!84525))

(assert (= (and d!21659 (not c!13642)) b!84526))

(assert (= (and b!84526 c!13643) b!84527))

(assert (= (and b!84526 (not c!13643)) b!84528))

(declare-fun m!88397 () Bool)

(assert (=> b!84527 m!88397))

(assert (=> d!21175 d!21659))

(declare-fun d!21661 () Bool)

(assert (=> d!21661 (= (getValueByKey!140 lt!39502 (_1!1102 (ite c!13224 (ite c!13215 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))) (Some!145 (_2!1102 (ite c!13224 (ite c!13215 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))

(declare-fun lt!39840 () Unit!2413)

(assert (=> d!21661 (= lt!39840 (choose!493 lt!39502 (_1!1102 (ite c!13224 (ite c!13215 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))) (_2!1102 (ite c!13224 (ite c!13215 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))

(declare-fun e!55112 () Bool)

(assert (=> d!21661 e!55112))

(declare-fun res!43605 () Bool)

(assert (=> d!21661 (=> (not res!43605) (not e!55112))))

(assert (=> d!21661 (= res!43605 (isStrictlySorted!284 lt!39502))))

(assert (=> d!21661 (= (lemmaContainsTupThenGetReturnValue!57 lt!39502 (_1!1102 (ite c!13224 (ite c!13215 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))) (_2!1102 (ite c!13224 (ite c!13215 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))) lt!39840)))

(declare-fun b!84529 () Bool)

(declare-fun res!43606 () Bool)

(assert (=> b!84529 (=> (not res!43606) (not e!55112))))

(assert (=> b!84529 (= res!43606 (containsKey!143 lt!39502 (_1!1102 (ite c!13224 (ite c!13215 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))

(declare-fun b!84530 () Bool)

(assert (=> b!84530 (= e!55112 (contains!746 lt!39502 (tuple2!2183 (_1!1102 (ite c!13224 (ite c!13215 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))) (_2!1102 (ite c!13224 (ite c!13215 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))))

(assert (= (and d!21661 res!43605) b!84529))

(assert (= (and b!84529 res!43606) b!84530))

(assert (=> d!21661 m!87087))

(declare-fun m!88399 () Bool)

(assert (=> d!21661 m!88399))

(declare-fun m!88401 () Bool)

(assert (=> d!21661 m!88401))

(declare-fun m!88403 () Bool)

(assert (=> b!84529 m!88403))

(declare-fun m!88405 () Bool)

(assert (=> b!84530 m!88405))

(assert (=> d!21175 d!21661))

(declare-fun b!84532 () Bool)

(declare-fun c!13647 () Bool)

(declare-fun c!13644 () Bool)

(declare-fun e!55113 () List!1504)

(assert (=> b!84532 (= e!55113 (ite c!13647 (t!5196 (toList!734 e!54229)) (ite c!13644 (Cons!1500 (h!2090 (toList!734 e!54229)) (t!5196 (toList!734 e!54229))) Nil!1501)))))

(declare-fun c!13645 () Bool)

(declare-fun bm!7954 () Bool)

(declare-fun call!7957 () List!1504)

(assert (=> bm!7954 (= call!7957 ($colon$colon!70 e!55113 (ite c!13645 (h!2090 (toList!734 e!54229)) (tuple2!2183 (_1!1102 (ite c!13224 (ite c!13215 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))) (_2!1102 (ite c!13224 (ite c!13215 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))))

(declare-fun c!13646 () Bool)

(assert (=> bm!7954 (= c!13646 c!13645)))

(declare-fun b!84533 () Bool)

(declare-fun e!55117 () List!1504)

(declare-fun call!7959 () List!1504)

(assert (=> b!84533 (= e!55117 call!7959)))

(declare-fun b!84534 () Bool)

(declare-fun e!55115 () List!1504)

(assert (=> b!84534 (= e!55115 call!7957)))

(declare-fun bm!7955 () Bool)

(assert (=> bm!7955 (= call!7959 call!7957)))

(declare-fun bm!7956 () Bool)

(declare-fun call!7958 () List!1504)

(assert (=> bm!7956 (= call!7958 call!7959)))

(declare-fun b!84535 () Bool)

(assert (=> b!84535 (= e!55113 (insertStrictlySorted!60 (t!5196 (toList!734 e!54229)) (_1!1102 (ite c!13224 (ite c!13215 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))) (_2!1102 (ite c!13224 (ite c!13215 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))

(declare-fun b!84536 () Bool)

(declare-fun e!55116 () List!1504)

(assert (=> b!84536 (= e!55116 call!7958)))

(declare-fun b!84537 () Bool)

(assert (=> b!84537 (= e!55115 e!55117)))

(assert (=> b!84537 (= c!13647 (and ((_ is Cons!1500) (toList!734 e!54229)) (= (_1!1102 (h!2090 (toList!734 e!54229))) (_1!1102 (ite c!13224 (ite c!13215 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))))

(declare-fun e!55114 () Bool)

(declare-fun lt!39841 () List!1504)

(declare-fun b!84538 () Bool)

(assert (=> b!84538 (= e!55114 (contains!746 lt!39841 (tuple2!2183 (_1!1102 (ite c!13224 (ite c!13215 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))) (_2!1102 (ite c!13224 (ite c!13215 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))))

(declare-fun b!84531 () Bool)

(declare-fun res!43608 () Bool)

(assert (=> b!84531 (=> (not res!43608) (not e!55114))))

(assert (=> b!84531 (= res!43608 (containsKey!143 lt!39841 (_1!1102 (ite c!13224 (ite c!13215 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))

(declare-fun d!21663 () Bool)

(assert (=> d!21663 e!55114))

(declare-fun res!43607 () Bool)

(assert (=> d!21663 (=> (not res!43607) (not e!55114))))

(assert (=> d!21663 (= res!43607 (isStrictlySorted!284 lt!39841))))

(assert (=> d!21663 (= lt!39841 e!55115)))

(assert (=> d!21663 (= c!13645 (and ((_ is Cons!1500) (toList!734 e!54229)) (bvslt (_1!1102 (h!2090 (toList!734 e!54229))) (_1!1102 (ite c!13224 (ite c!13215 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))))

(assert (=> d!21663 (isStrictlySorted!284 (toList!734 e!54229))))

(assert (=> d!21663 (= (insertStrictlySorted!60 (toList!734 e!54229) (_1!1102 (ite c!13224 (ite c!13215 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))) (_2!1102 (ite c!13224 (ite c!13215 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))) lt!39841)))

(declare-fun b!84539 () Bool)

(assert (=> b!84539 (= e!55116 call!7958)))

(declare-fun b!84540 () Bool)

(assert (=> b!84540 (= c!13644 (and ((_ is Cons!1500) (toList!734 e!54229)) (bvsgt (_1!1102 (h!2090 (toList!734 e!54229))) (_1!1102 (ite c!13224 (ite c!13215 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 lt!38784)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))))

(assert (=> b!84540 (= e!55117 e!55116)))

(assert (= (and d!21663 c!13645) b!84534))

(assert (= (and d!21663 (not c!13645)) b!84537))

(assert (= (and b!84537 c!13647) b!84533))

(assert (= (and b!84537 (not c!13647)) b!84540))

(assert (= (and b!84540 c!13644) b!84536))

(assert (= (and b!84540 (not c!13644)) b!84539))

(assert (= (or b!84536 b!84539) bm!7956))

(assert (= (or b!84533 bm!7956) bm!7955))

(assert (= (or b!84534 bm!7955) bm!7954))

(assert (= (and bm!7954 c!13646) b!84535))

(assert (= (and bm!7954 (not c!13646)) b!84532))

(assert (= (and d!21663 res!43607) b!84531))

(assert (= (and b!84531 res!43608) b!84538))

(declare-fun m!88407 () Bool)

(assert (=> d!21663 m!88407))

(declare-fun m!88409 () Bool)

(assert (=> d!21663 m!88409))

(declare-fun m!88411 () Bool)

(assert (=> b!84535 m!88411))

(declare-fun m!88413 () Bool)

(assert (=> bm!7954 m!88413))

(declare-fun m!88415 () Bool)

(assert (=> b!84531 m!88415))

(declare-fun m!88417 () Bool)

(assert (=> b!84538 m!88417))

(assert (=> d!21175 d!21663))

(declare-fun d!21665 () Bool)

(assert (=> d!21665 (isDefined!92 (getValueByKey!140 (toList!734 e!54228) (ite c!13217 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (select (arr!1904 (_keys!3984 newMap!16)) (index!3081 lt!38961)))))))

(declare-fun lt!39842 () Unit!2413)

(assert (=> d!21665 (= lt!39842 (choose!502 (toList!734 e!54228) (ite c!13217 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (select (arr!1904 (_keys!3984 newMap!16)) (index!3081 lt!38961)))))))

(declare-fun e!55118 () Bool)

(assert (=> d!21665 e!55118))

(declare-fun res!43609 () Bool)

(assert (=> d!21665 (=> (not res!43609) (not e!55118))))

(assert (=> d!21665 (= res!43609 (isStrictlySorted!284 (toList!734 e!54228)))))

(assert (=> d!21665 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 e!54228) (ite c!13217 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (select (arr!1904 (_keys!3984 newMap!16)) (index!3081 lt!38961)))) lt!39842)))

(declare-fun b!84541 () Bool)

(assert (=> b!84541 (= e!55118 (containsKey!143 (toList!734 e!54228) (ite c!13217 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (select (arr!1904 (_keys!3984 newMap!16)) (index!3081 lt!38961)))))))

(assert (= (and d!21665 res!43609) b!84541))

(assert (=> d!21665 m!86623))

(assert (=> d!21665 m!86623))

(assert (=> d!21665 m!86625))

(declare-fun m!88419 () Bool)

(assert (=> d!21665 m!88419))

(declare-fun m!88421 () Bool)

(assert (=> d!21665 m!88421))

(assert (=> b!84541 m!86619))

(assert (=> b!83476 d!21665))

(declare-fun d!21667 () Bool)

(assert (=> d!21667 (= (isDefined!92 (getValueByKey!140 (toList!734 e!54228) (ite c!13217 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (select (arr!1904 (_keys!3984 newMap!16)) (index!3081 lt!38961))))) (not (isEmpty!340 (getValueByKey!140 (toList!734 e!54228) (ite c!13217 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (select (arr!1904 (_keys!3984 newMap!16)) (index!3081 lt!38961)))))))))

(declare-fun bs!3579 () Bool)

(assert (= bs!3579 d!21667))

(assert (=> bs!3579 m!86623))

(declare-fun m!88423 () Bool)

(assert (=> bs!3579 m!88423))

(assert (=> b!83476 d!21667))

(declare-fun b!84544 () Bool)

(declare-fun e!55120 () Option!146)

(assert (=> b!84544 (= e!55120 (getValueByKey!140 (t!5196 (toList!734 e!54228)) (ite c!13217 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (select (arr!1904 (_keys!3984 newMap!16)) (index!3081 lt!38961)))))))

(declare-fun c!13648 () Bool)

(declare-fun d!21669 () Bool)

(assert (=> d!21669 (= c!13648 (and ((_ is Cons!1500) (toList!734 e!54228)) (= (_1!1102 (h!2090 (toList!734 e!54228))) (ite c!13217 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (select (arr!1904 (_keys!3984 newMap!16)) (index!3081 lt!38961))))))))

(declare-fun e!55119 () Option!146)

(assert (=> d!21669 (= (getValueByKey!140 (toList!734 e!54228) (ite c!13217 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (select (arr!1904 (_keys!3984 newMap!16)) (index!3081 lt!38961)))) e!55119)))

(declare-fun b!84542 () Bool)

(assert (=> b!84542 (= e!55119 (Some!145 (_2!1102 (h!2090 (toList!734 e!54228)))))))

(declare-fun b!84543 () Bool)

(assert (=> b!84543 (= e!55119 e!55120)))

(declare-fun c!13649 () Bool)

(assert (=> b!84543 (= c!13649 (and ((_ is Cons!1500) (toList!734 e!54228)) (not (= (_1!1102 (h!2090 (toList!734 e!54228))) (ite c!13217 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (select (arr!1904 (_keys!3984 newMap!16)) (index!3081 lt!38961)))))))))

(declare-fun b!84545 () Bool)

(assert (=> b!84545 (= e!55120 None!144)))

(assert (= (and d!21669 c!13648) b!84542))

(assert (= (and d!21669 (not c!13648)) b!84543))

(assert (= (and b!84543 c!13649) b!84544))

(assert (= (and b!84543 (not c!13649)) b!84545))

(declare-fun m!88425 () Bool)

(assert (=> b!84544 m!88425))

(assert (=> b!83476 d!21669))

(declare-fun d!21671 () Bool)

(declare-fun lt!39843 () Bool)

(assert (=> d!21671 (= lt!39843 (select (content!89 (toList!734 lt!39219)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))

(declare-fun e!55121 () Bool)

(assert (=> d!21671 (= lt!39843 e!55121)))

(declare-fun res!43611 () Bool)

(assert (=> d!21671 (=> (not res!43611) (not e!55121))))

(assert (=> d!21671 (= res!43611 ((_ is Cons!1500) (toList!734 lt!39219)))))

(assert (=> d!21671 (= (contains!746 (toList!734 lt!39219) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) lt!39843)))

(declare-fun b!84546 () Bool)

(declare-fun e!55122 () Bool)

(assert (=> b!84546 (= e!55121 e!55122)))

(declare-fun res!43610 () Bool)

(assert (=> b!84546 (=> res!43610 e!55122)))

(assert (=> b!84546 (= res!43610 (= (h!2090 (toList!734 lt!39219)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))

(declare-fun b!84547 () Bool)

(assert (=> b!84547 (= e!55122 (contains!746 (t!5196 (toList!734 lt!39219)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))

(assert (= (and d!21671 res!43611) b!84546))

(assert (= (and b!84546 (not res!43610)) b!84547))

(declare-fun m!88427 () Bool)

(assert (=> d!21671 m!88427))

(declare-fun m!88429 () Bool)

(assert (=> d!21671 m!88429))

(declare-fun m!88431 () Bool)

(assert (=> b!84547 m!88431))

(assert (=> b!83408 d!21671))

(declare-fun d!21673 () Bool)

(declare-fun res!43612 () Bool)

(declare-fun e!55123 () Bool)

(assert (=> d!21673 (=> res!43612 e!55123)))

(assert (=> d!21673 (= res!43612 (and ((_ is Cons!1500) lt!39465) (= (_1!1102 (h!2090 lt!39465)) (_1!1102 lt!38775))))))

(assert (=> d!21673 (= (containsKey!143 lt!39465 (_1!1102 lt!38775)) e!55123)))

(declare-fun b!84548 () Bool)

(declare-fun e!55124 () Bool)

(assert (=> b!84548 (= e!55123 e!55124)))

(declare-fun res!43613 () Bool)

(assert (=> b!84548 (=> (not res!43613) (not e!55124))))

(assert (=> b!84548 (= res!43613 (and (or (not ((_ is Cons!1500) lt!39465)) (bvsle (_1!1102 (h!2090 lt!39465)) (_1!1102 lt!38775))) ((_ is Cons!1500) lt!39465) (bvslt (_1!1102 (h!2090 lt!39465)) (_1!1102 lt!38775))))))

(declare-fun b!84549 () Bool)

(assert (=> b!84549 (= e!55124 (containsKey!143 (t!5196 lt!39465) (_1!1102 lt!38775)))))

(assert (= (and d!21673 (not res!43612)) b!84548))

(assert (= (and b!84548 res!43613) b!84549))

(declare-fun m!88433 () Bool)

(assert (=> b!84549 m!88433))

(assert (=> b!83673 d!21673))

(declare-fun d!21675 () Bool)

(declare-fun lt!39844 () Bool)

(assert (=> d!21675 (= lt!39844 (select (content!89 lt!39437) (tuple2!2183 (_1!1102 lt!38779) (_2!1102 lt!38779))))))

(declare-fun e!55125 () Bool)

(assert (=> d!21675 (= lt!39844 e!55125)))

(declare-fun res!43615 () Bool)

(assert (=> d!21675 (=> (not res!43615) (not e!55125))))

(assert (=> d!21675 (= res!43615 ((_ is Cons!1500) lt!39437))))

(assert (=> d!21675 (= (contains!746 lt!39437 (tuple2!2183 (_1!1102 lt!38779) (_2!1102 lt!38779))) lt!39844)))

(declare-fun b!84550 () Bool)

(declare-fun e!55126 () Bool)

(assert (=> b!84550 (= e!55125 e!55126)))

(declare-fun res!43614 () Bool)

(assert (=> b!84550 (=> res!43614 e!55126)))

(assert (=> b!84550 (= res!43614 (= (h!2090 lt!39437) (tuple2!2183 (_1!1102 lt!38779) (_2!1102 lt!38779))))))

(declare-fun b!84551 () Bool)

(assert (=> b!84551 (= e!55126 (contains!746 (t!5196 lt!39437) (tuple2!2183 (_1!1102 lt!38779) (_2!1102 lt!38779))))))

(assert (= (and d!21675 res!43615) b!84550))

(assert (= (and b!84550 (not res!43614)) b!84551))

(declare-fun m!88435 () Bool)

(assert (=> d!21675 m!88435))

(declare-fun m!88437 () Bool)

(assert (=> d!21675 m!88437))

(declare-fun m!88439 () Bool)

(assert (=> b!84551 m!88439))

(assert (=> b!83640 d!21675))

(assert (=> d!21137 d!21135))

(declare-fun d!21677 () Bool)

(assert (=> d!21677 (= (getValueByKey!140 lt!39006 (_1!1102 lt!38779)) (Some!145 (_2!1102 lt!38779)))))

(assert (=> d!21677 true))

(declare-fun _$22!412 () Unit!2413)

(assert (=> d!21677 (= (choose!493 lt!39006 (_1!1102 lt!38779) (_2!1102 lt!38779)) _$22!412)))

(declare-fun bs!3580 () Bool)

(assert (= bs!3580 d!21677))

(assert (=> bs!3580 m!86003))

(assert (=> d!21137 d!21677))

(declare-fun d!21679 () Bool)

(declare-fun res!43616 () Bool)

(declare-fun e!55127 () Bool)

(assert (=> d!21679 (=> res!43616 e!55127)))

(assert (=> d!21679 (= res!43616 (or ((_ is Nil!1501) lt!39006) ((_ is Nil!1501) (t!5196 lt!39006))))))

(assert (=> d!21679 (= (isStrictlySorted!284 lt!39006) e!55127)))

(declare-fun b!84552 () Bool)

(declare-fun e!55128 () Bool)

(assert (=> b!84552 (= e!55127 e!55128)))

(declare-fun res!43617 () Bool)

(assert (=> b!84552 (=> (not res!43617) (not e!55128))))

(assert (=> b!84552 (= res!43617 (bvslt (_1!1102 (h!2090 lt!39006)) (_1!1102 (h!2090 (t!5196 lt!39006)))))))

(declare-fun b!84553 () Bool)

(assert (=> b!84553 (= e!55128 (isStrictlySorted!284 (t!5196 lt!39006)))))

(assert (= (and d!21679 (not res!43616)) b!84552))

(assert (= (and b!84552 res!43617) b!84553))

(declare-fun m!88441 () Bool)

(assert (=> b!84553 m!88441))

(assert (=> d!21137 d!21679))

(declare-fun b!84554 () Bool)

(declare-fun e!55131 () Bool)

(declare-fun e!55129 () Bool)

(assert (=> b!84554 (= e!55131 e!55129)))

(declare-fun c!13650 () Bool)

(assert (=> b!84554 (= c!13650 (validKeyInArray!0 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun d!21681 () Bool)

(declare-fun res!43619 () Bool)

(assert (=> d!21681 (=> res!43619 e!55131)))

(assert (=> d!21681 (= res!43619 (bvsge #b00000000000000000000000000000000 (size!2147 (_keys!3984 (v!2632 (underlying!289 thiss!992))))))))

(assert (=> d!21681 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3984 (v!2632 (underlying!289 thiss!992))) (mask!6334 (v!2632 (underlying!289 thiss!992)))) e!55131)))

(declare-fun b!84555 () Bool)

(declare-fun e!55130 () Bool)

(declare-fun call!7960 () Bool)

(assert (=> b!84555 (= e!55130 call!7960)))

(declare-fun b!84556 () Bool)

(assert (=> b!84556 (= e!55129 call!7960)))

(declare-fun bm!7957 () Bool)

(assert (=> bm!7957 (= call!7960 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3984 (v!2632 (underlying!289 thiss!992))) (mask!6334 (v!2632 (underlying!289 thiss!992)))))))

(declare-fun b!84557 () Bool)

(assert (=> b!84557 (= e!55129 e!55130)))

(declare-fun lt!39847 () (_ BitVec 64))

(assert (=> b!84557 (= lt!39847 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!39845 () Unit!2413)

(assert (=> b!84557 (= lt!39845 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3984 (v!2632 (underlying!289 thiss!992))) lt!39847 #b00000000000000000000000000000000))))

(assert (=> b!84557 (arrayContainsKey!0 (_keys!3984 (v!2632 (underlying!289 thiss!992))) lt!39847 #b00000000000000000000000000000000)))

(declare-fun lt!39846 () Unit!2413)

(assert (=> b!84557 (= lt!39846 lt!39845)))

(declare-fun res!43618 () Bool)

(assert (=> b!84557 (= res!43618 (= (seekEntryOrOpen!0 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) #b00000000000000000000000000000000) (_keys!3984 (v!2632 (underlying!289 thiss!992))) (mask!6334 (v!2632 (underlying!289 thiss!992)))) (Found!236 #b00000000000000000000000000000000)))))

(assert (=> b!84557 (=> (not res!43618) (not e!55130))))

(assert (= (and d!21681 (not res!43619)) b!84554))

(assert (= (and b!84554 c!13650) b!84557))

(assert (= (and b!84554 (not c!13650)) b!84556))

(assert (= (and b!84557 res!43618) b!84555))

(assert (= (or b!84555 b!84556) bm!7957))

(assert (=> b!84554 m!87459))

(assert (=> b!84554 m!87459))

(assert (=> b!84554 m!87461))

(declare-fun m!88443 () Bool)

(assert (=> bm!7957 m!88443))

(assert (=> b!84557 m!87459))

(declare-fun m!88445 () Bool)

(assert (=> b!84557 m!88445))

(declare-fun m!88447 () Bool)

(assert (=> b!84557 m!88447))

(assert (=> b!84557 m!87459))

(declare-fun m!88449 () Bool)

(assert (=> b!84557 m!88449))

(assert (=> b!83622 d!21681))

(declare-fun b!84558 () Bool)

(declare-fun e!55139 () Unit!2413)

(declare-fun Unit!2475 () Unit!2413)

(assert (=> b!84558 (= e!55139 Unit!2475)))

(declare-fun b!84559 () Bool)

(declare-fun e!55144 () Bool)

(declare-fun e!55132 () Bool)

(assert (=> b!84559 (= e!55144 e!55132)))

(declare-fun c!13655 () Bool)

(assert (=> b!84559 (= c!13655 (not (= (bvand lt!38982 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun call!7962 () ListLongMap!1437)

(declare-fun call!7964 () ListLongMap!1437)

(declare-fun bm!7958 () Bool)

(declare-fun c!13651 () Bool)

(declare-fun call!7963 () ListLongMap!1437)

(declare-fun call!7967 () ListLongMap!1437)

(declare-fun c!13656 () Bool)

(assert (=> bm!7958 (= call!7964 (+!105 (ite c!13656 call!7967 (ite c!13651 call!7962 call!7963)) (ite (or c!13656 c!13651) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16)))))))

(declare-fun bm!7959 () Bool)

(declare-fun call!7966 () Bool)

(declare-fun lt!39861 () ListLongMap!1437)

(assert (=> bm!7959 (= call!7966 (contains!744 lt!39861 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!84560 () Bool)

(declare-fun e!55140 () Bool)

(assert (=> b!84560 (= e!55140 (= (apply!81 lt!39861 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)) (get!1198 (select (arr!1905 (_values!2299 newMap!16)) #b00000000000000000000000000000000) (dynLambda!343 (defaultEntry!2316 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!84560 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2148 (_values!2299 newMap!16))))))

(assert (=> b!84560 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))))))

(declare-fun b!84561 () Bool)

(declare-fun call!7965 () Bool)

(assert (=> b!84561 (= e!55132 (not call!7965))))

(declare-fun b!84562 () Bool)

(declare-fun e!55143 () Bool)

(assert (=> b!84562 (= e!55143 (validKeyInArray!0 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!7960 () Bool)

(assert (=> bm!7960 (= call!7965 (contains!744 lt!39861 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!84564 () Bool)

(declare-fun e!55133 () Bool)

(assert (=> b!84564 (= e!55133 (= (apply!81 lt!39861 #b0000000000000000000000000000000000000000000000000000000000000000) lt!38784))))

(declare-fun b!84565 () Bool)

(declare-fun res!43628 () Bool)

(assert (=> b!84565 (=> (not res!43628) (not e!55144))))

(declare-fun e!55141 () Bool)

(assert (=> b!84565 (= res!43628 e!55141)))

(declare-fun c!13652 () Bool)

(assert (=> b!84565 (= c!13652 (not (= (bvand lt!38982 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!7961 () Bool)

(declare-fun call!7961 () ListLongMap!1437)

(assert (=> bm!7961 (= call!7961 call!7964)))

(declare-fun b!84566 () Bool)

(assert (=> b!84566 (= e!55141 e!55133)))

(declare-fun res!43625 () Bool)

(assert (=> b!84566 (= res!43625 call!7966)))

(assert (=> b!84566 (=> (not res!43625) (not e!55133))))

(declare-fun b!84567 () Bool)

(declare-fun lt!39854 () Unit!2413)

(assert (=> b!84567 (= e!55139 lt!39854)))

(declare-fun lt!39857 () ListLongMap!1437)

(assert (=> b!84567 (= lt!39857 (getCurrentListMapNoExtraKeys!70 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) lt!38982 lt!38784 (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39850 () (_ BitVec 64))

(assert (=> b!84567 (= lt!39850 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39866 () (_ BitVec 64))

(assert (=> b!84567 (= lt!39866 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!39862 () Unit!2413)

(assert (=> b!84567 (= lt!39862 (addStillContains!57 lt!39857 lt!39850 lt!38784 lt!39866))))

(assert (=> b!84567 (contains!744 (+!105 lt!39857 (tuple2!2183 lt!39850 lt!38784)) lt!39866)))

(declare-fun lt!39852 () Unit!2413)

(assert (=> b!84567 (= lt!39852 lt!39862)))

(declare-fun lt!39869 () ListLongMap!1437)

(assert (=> b!84567 (= lt!39869 (getCurrentListMapNoExtraKeys!70 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) lt!38982 lt!38784 (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39851 () (_ BitVec 64))

(assert (=> b!84567 (= lt!39851 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39855 () (_ BitVec 64))

(assert (=> b!84567 (= lt!39855 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!39868 () Unit!2413)

(assert (=> b!84567 (= lt!39868 (addApplyDifferent!57 lt!39869 lt!39851 (minValue!2210 newMap!16) lt!39855))))

(assert (=> b!84567 (= (apply!81 (+!105 lt!39869 (tuple2!2183 lt!39851 (minValue!2210 newMap!16))) lt!39855) (apply!81 lt!39869 lt!39855))))

(declare-fun lt!39867 () Unit!2413)

(assert (=> b!84567 (= lt!39867 lt!39868)))

(declare-fun lt!39856 () ListLongMap!1437)

(assert (=> b!84567 (= lt!39856 (getCurrentListMapNoExtraKeys!70 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) lt!38982 lt!38784 (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39860 () (_ BitVec 64))

(assert (=> b!84567 (= lt!39860 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39865 () (_ BitVec 64))

(assert (=> b!84567 (= lt!39865 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!39859 () Unit!2413)

(assert (=> b!84567 (= lt!39859 (addApplyDifferent!57 lt!39856 lt!39860 lt!38784 lt!39865))))

(assert (=> b!84567 (= (apply!81 (+!105 lt!39856 (tuple2!2183 lt!39860 lt!38784)) lt!39865) (apply!81 lt!39856 lt!39865))))

(declare-fun lt!39858 () Unit!2413)

(assert (=> b!84567 (= lt!39858 lt!39859)))

(declare-fun lt!39863 () ListLongMap!1437)

(assert (=> b!84567 (= lt!39863 (getCurrentListMapNoExtraKeys!70 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) lt!38982 lt!38784 (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39853 () (_ BitVec 64))

(assert (=> b!84567 (= lt!39853 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39849 () (_ BitVec 64))

(assert (=> b!84567 (= lt!39849 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!84567 (= lt!39854 (addApplyDifferent!57 lt!39863 lt!39853 (minValue!2210 newMap!16) lt!39849))))

(assert (=> b!84567 (= (apply!81 (+!105 lt!39863 (tuple2!2183 lt!39853 (minValue!2210 newMap!16))) lt!39849) (apply!81 lt!39863 lt!39849))))

(declare-fun bm!7962 () Bool)

(assert (=> bm!7962 (= call!7967 (getCurrentListMapNoExtraKeys!70 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) lt!38982 lt!38784 (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun b!84568 () Bool)

(declare-fun e!55137 () ListLongMap!1437)

(assert (=> b!84568 (= e!55137 call!7961)))

(declare-fun bm!7963 () Bool)

(assert (=> bm!7963 (= call!7962 call!7967)))

(declare-fun d!21683 () Bool)

(assert (=> d!21683 e!55144))

(declare-fun res!43627 () Bool)

(assert (=> d!21683 (=> (not res!43627) (not e!55144))))

(assert (=> d!21683 (= res!43627 (or (bvsge #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))))))))

(declare-fun lt!39848 () ListLongMap!1437)

(assert (=> d!21683 (= lt!39861 lt!39848)))

(declare-fun lt!39864 () Unit!2413)

(assert (=> d!21683 (= lt!39864 e!55139)))

(declare-fun c!13653 () Bool)

(declare-fun e!55136 () Bool)

(assert (=> d!21683 (= c!13653 e!55136)))

(declare-fun res!43623 () Bool)

(assert (=> d!21683 (=> (not res!43623) (not e!55136))))

(assert (=> d!21683 (= res!43623 (bvslt #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))))))

(declare-fun e!55142 () ListLongMap!1437)

(assert (=> d!21683 (= lt!39848 e!55142)))

(assert (=> d!21683 (= c!13656 (and (not (= (bvand lt!38982 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!38982 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!21683 (validMask!0 (mask!6334 newMap!16))))

(assert (=> d!21683 (= (getCurrentListMap!429 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) lt!38982 lt!38784 (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) lt!39861)))

(declare-fun b!84563 () Bool)

(declare-fun c!13654 () Bool)

(assert (=> b!84563 (= c!13654 (and (not (= (bvand lt!38982 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!38982 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!55134 () ListLongMap!1437)

(assert (=> b!84563 (= e!55134 e!55137)))

(declare-fun b!84569 () Bool)

(declare-fun res!43626 () Bool)

(assert (=> b!84569 (=> (not res!43626) (not e!55144))))

(declare-fun e!55135 () Bool)

(assert (=> b!84569 (= res!43626 e!55135)))

(declare-fun res!43622 () Bool)

(assert (=> b!84569 (=> res!43622 e!55135)))

(assert (=> b!84569 (= res!43622 (not e!55143))))

(declare-fun res!43620 () Bool)

(assert (=> b!84569 (=> (not res!43620) (not e!55143))))

(assert (=> b!84569 (= res!43620 (bvslt #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))))))

(declare-fun bm!7964 () Bool)

(assert (=> bm!7964 (= call!7963 call!7962)))

(declare-fun b!84570 () Bool)

(assert (=> b!84570 (= e!55142 (+!105 call!7964 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16))))))

(declare-fun b!84571 () Bool)

(assert (=> b!84571 (= e!55134 call!7961)))

(declare-fun b!84572 () Bool)

(declare-fun e!55138 () Bool)

(assert (=> b!84572 (= e!55132 e!55138)))

(declare-fun res!43621 () Bool)

(assert (=> b!84572 (= res!43621 call!7965)))

(assert (=> b!84572 (=> (not res!43621) (not e!55138))))

(declare-fun b!84573 () Bool)

(assert (=> b!84573 (= e!55137 call!7963)))

(declare-fun b!84574 () Bool)

(assert (=> b!84574 (= e!55142 e!55134)))

(assert (=> b!84574 (= c!13651 (and (not (= (bvand lt!38982 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!38982 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!84575 () Bool)

(assert (=> b!84575 (= e!55135 e!55140)))

(declare-fun res!43624 () Bool)

(assert (=> b!84575 (=> (not res!43624) (not e!55140))))

(assert (=> b!84575 (= res!43624 (contains!744 lt!39861 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!84575 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))))))

(declare-fun b!84576 () Bool)

(assert (=> b!84576 (= e!55141 (not call!7966))))

(declare-fun b!84577 () Bool)

(assert (=> b!84577 (= e!55138 (= (apply!81 lt!39861 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2210 newMap!16)))))

(declare-fun b!84578 () Bool)

(assert (=> b!84578 (= e!55136 (validKeyInArray!0 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!21683 c!13656) b!84570))

(assert (= (and d!21683 (not c!13656)) b!84574))

(assert (= (and b!84574 c!13651) b!84571))

(assert (= (and b!84574 (not c!13651)) b!84563))

(assert (= (and b!84563 c!13654) b!84568))

(assert (= (and b!84563 (not c!13654)) b!84573))

(assert (= (or b!84568 b!84573) bm!7964))

(assert (= (or b!84571 bm!7964) bm!7963))

(assert (= (or b!84571 b!84568) bm!7961))

(assert (= (or b!84570 bm!7963) bm!7962))

(assert (= (or b!84570 bm!7961) bm!7958))

(assert (= (and d!21683 res!43623) b!84578))

(assert (= (and d!21683 c!13653) b!84567))

(assert (= (and d!21683 (not c!13653)) b!84558))

(assert (= (and d!21683 res!43627) b!84569))

(assert (= (and b!84569 res!43620) b!84562))

(assert (= (and b!84569 (not res!43622)) b!84575))

(assert (= (and b!84575 res!43624) b!84560))

(assert (= (and b!84569 res!43626) b!84565))

(assert (= (and b!84565 c!13652) b!84566))

(assert (= (and b!84565 (not c!13652)) b!84576))

(assert (= (and b!84566 res!43625) b!84564))

(assert (= (or b!84566 b!84576) bm!7959))

(assert (= (and b!84565 res!43628) b!84559))

(assert (= (and b!84559 c!13655) b!84572))

(assert (= (and b!84559 (not c!13655)) b!84561))

(assert (= (and b!84572 res!43621) b!84577))

(assert (= (or b!84572 b!84561) bm!7960))

(declare-fun b_lambda!3747 () Bool)

(assert (=> (not b_lambda!3747) (not b!84560)))

(assert (=> b!84560 t!5209))

(declare-fun b_and!5125 () Bool)

(assert (= b_and!5121 (and (=> t!5209 result!2895) b_and!5125)))

(assert (=> b!84560 t!5211))

(declare-fun b_and!5127 () Bool)

(assert (= b_and!5123 (and (=> t!5211 result!2897) b_and!5127)))

(assert (=> b!84578 m!86211))

(assert (=> b!84578 m!86211))

(assert (=> b!84578 m!86213))

(assert (=> b!84560 m!86215))

(assert (=> b!84560 m!86211))

(declare-fun m!88451 () Bool)

(assert (=> b!84560 m!88451))

(assert (=> b!84560 m!86211))

(assert (=> b!84560 m!86219))

(assert (=> b!84560 m!86215))

(assert (=> b!84560 m!86219))

(assert (=> b!84560 m!86221))

(assert (=> d!21683 m!86223))

(declare-fun m!88453 () Bool)

(assert (=> b!84577 m!88453))

(declare-fun m!88455 () Bool)

(assert (=> b!84567 m!88455))

(declare-fun m!88457 () Bool)

(assert (=> b!84567 m!88457))

(declare-fun m!88459 () Bool)

(assert (=> b!84567 m!88459))

(declare-fun m!88461 () Bool)

(assert (=> b!84567 m!88461))

(assert (=> b!84567 m!88457))

(declare-fun m!88463 () Bool)

(assert (=> b!84567 m!88463))

(declare-fun m!88465 () Bool)

(assert (=> b!84567 m!88465))

(declare-fun m!88467 () Bool)

(assert (=> b!84567 m!88467))

(declare-fun m!88469 () Bool)

(assert (=> b!84567 m!88469))

(declare-fun m!88471 () Bool)

(assert (=> b!84567 m!88471))

(declare-fun m!88473 () Bool)

(assert (=> b!84567 m!88473))

(declare-fun m!88475 () Bool)

(assert (=> b!84567 m!88475))

(assert (=> b!84567 m!86211))

(assert (=> b!84567 m!88471))

(assert (=> b!84567 m!88465))

(assert (=> b!84567 m!88459))

(declare-fun m!88477 () Bool)

(assert (=> b!84567 m!88477))

(declare-fun m!88479 () Bool)

(assert (=> b!84567 m!88479))

(declare-fun m!88481 () Bool)

(assert (=> b!84567 m!88481))

(declare-fun m!88483 () Bool)

(assert (=> b!84567 m!88483))

(declare-fun m!88485 () Bool)

(assert (=> b!84567 m!88485))

(declare-fun m!88487 () Bool)

(assert (=> b!84570 m!88487))

(declare-fun m!88489 () Bool)

(assert (=> bm!7958 m!88489))

(assert (=> b!84575 m!86211))

(assert (=> b!84575 m!86211))

(declare-fun m!88491 () Bool)

(assert (=> b!84575 m!88491))

(assert (=> bm!7962 m!88475))

(declare-fun m!88493 () Bool)

(assert (=> bm!7960 m!88493))

(assert (=> b!84562 m!86211))

(assert (=> b!84562 m!86211))

(assert (=> b!84562 m!86213))

(declare-fun m!88495 () Bool)

(assert (=> bm!7959 m!88495))

(declare-fun m!88497 () Bool)

(assert (=> b!84564 m!88497))

(assert (=> d!21037 d!21683))

(declare-fun d!21685 () Bool)

(declare-fun e!55145 () Bool)

(assert (=> d!21685 e!55145))

(declare-fun res!43630 () Bool)

(assert (=> d!21685 (=> (not res!43630) (not e!55145))))

(declare-fun lt!39871 () ListLongMap!1437)

(assert (=> d!21685 (= res!43630 (contains!744 lt!39871 (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784))))))

(declare-fun lt!39873 () List!1504)

(assert (=> d!21685 (= lt!39871 (ListLongMap!1438 lt!39873))))

(declare-fun lt!39870 () Unit!2413)

(declare-fun lt!39872 () Unit!2413)

(assert (=> d!21685 (= lt!39870 lt!39872)))

(assert (=> d!21685 (= (getValueByKey!140 lt!39873 (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784))) (Some!145 (_2!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784))))))

(assert (=> d!21685 (= lt!39872 (lemmaContainsTupThenGetReturnValue!57 lt!39873 (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784)) (_2!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784))))))

(assert (=> d!21685 (= lt!39873 (insertStrictlySorted!60 (toList!734 (getCurrentListMap!429 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16))) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784)) (_2!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784))))))

(assert (=> d!21685 (= (+!105 (getCurrentListMap!429 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784)) lt!39871)))

(declare-fun b!84579 () Bool)

(declare-fun res!43629 () Bool)

(assert (=> b!84579 (=> (not res!43629) (not e!55145))))

(assert (=> b!84579 (= res!43629 (= (getValueByKey!140 (toList!734 lt!39871) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784))) (Some!145 (_2!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784)))))))

(declare-fun b!84580 () Bool)

(assert (=> b!84580 (= e!55145 (contains!746 (toList!734 lt!39871) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784)))))

(assert (= (and d!21685 res!43630) b!84579))

(assert (= (and b!84579 res!43629) b!84580))

(declare-fun m!88499 () Bool)

(assert (=> d!21685 m!88499))

(declare-fun m!88501 () Bool)

(assert (=> d!21685 m!88501))

(declare-fun m!88503 () Bool)

(assert (=> d!21685 m!88503))

(declare-fun m!88505 () Bool)

(assert (=> d!21685 m!88505))

(declare-fun m!88507 () Bool)

(assert (=> b!84579 m!88507))

(declare-fun m!88509 () Bool)

(assert (=> b!84580 m!88509))

(assert (=> d!21037 d!21685))

(declare-fun d!21687 () Bool)

(assert (=> d!21687 (= (+!105 (getCurrentListMap!429 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 lt!38784)) (getCurrentListMap!429 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) lt!38982 lt!38784 (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(assert (=> d!21687 true))

(declare-fun _$7!71 () Unit!2413)

(assert (=> d!21687 (= (choose!494 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) lt!38982 (zeroValue!2210 newMap!16) lt!38784 (minValue!2210 newMap!16) (defaultEntry!2316 newMap!16)) _$7!71)))

(declare-fun bs!3581 () Bool)

(assert (= bs!3581 d!21687))

(assert (=> bs!3581 m!85945))

(assert (=> bs!3581 m!85945))

(assert (=> bs!3581 m!86551))

(assert (=> bs!3581 m!86555))

(assert (=> d!21037 d!21687))

(assert (=> d!21037 d!20959))

(assert (=> d!21037 d!21267))

(declare-fun d!21689 () Bool)

(declare-fun e!55147 () Bool)

(assert (=> d!21689 e!55147))

(declare-fun res!43631 () Bool)

(assert (=> d!21689 (=> res!43631 e!55147)))

(declare-fun lt!39874 () Bool)

(assert (=> d!21689 (= res!43631 (not lt!39874))))

(declare-fun lt!39877 () Bool)

(assert (=> d!21689 (= lt!39874 lt!39877)))

(declare-fun lt!39876 () Unit!2413)

(declare-fun e!55146 () Unit!2413)

(assert (=> d!21689 (= lt!39876 e!55146)))

(declare-fun c!13657 () Bool)

(assert (=> d!21689 (= c!13657 lt!39877)))

(assert (=> d!21689 (= lt!39877 (containsKey!143 (toList!734 lt!39123) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(assert (=> d!21689 (= (contains!744 lt!39123 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))) lt!39874)))

(declare-fun b!84581 () Bool)

(declare-fun lt!39875 () Unit!2413)

(assert (=> b!84581 (= e!55146 lt!39875)))

(assert (=> b!84581 (= lt!39875 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 lt!39123) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(assert (=> b!84581 (isDefined!92 (getValueByKey!140 (toList!734 lt!39123) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(declare-fun b!84582 () Bool)

(declare-fun Unit!2476 () Unit!2413)

(assert (=> b!84582 (= e!55146 Unit!2476)))

(declare-fun b!84583 () Bool)

(assert (=> b!84583 (= e!55147 (isDefined!92 (getValueByKey!140 (toList!734 lt!39123) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))

(assert (= (and d!21689 c!13657) b!84581))

(assert (= (and d!21689 (not c!13657)) b!84582))

(assert (= (and d!21689 (not res!43631)) b!84583))

(declare-fun m!88511 () Bool)

(assert (=> d!21689 m!88511))

(declare-fun m!88513 () Bool)

(assert (=> b!84581 m!88513))

(assert (=> b!84581 m!86197))

(assert (=> b!84581 m!86197))

(declare-fun m!88515 () Bool)

(assert (=> b!84581 m!88515))

(assert (=> b!84583 m!86197))

(assert (=> b!84583 m!86197))

(assert (=> b!84583 m!88515))

(assert (=> d!20953 d!21689))

(declare-fun e!55149 () Option!146)

(declare-fun b!84586 () Bool)

(assert (=> b!84586 (= e!55149 (getValueByKey!140 (t!5196 lt!39125) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(declare-fun c!13658 () Bool)

(declare-fun d!21691 () Bool)

(assert (=> d!21691 (= c!13658 (and ((_ is Cons!1500) lt!39125) (= (_1!1102 (h!2090 lt!39125)) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))

(declare-fun e!55148 () Option!146)

(assert (=> d!21691 (= (getValueByKey!140 lt!39125 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))) e!55148)))

(declare-fun b!84584 () Bool)

(assert (=> b!84584 (= e!55148 (Some!145 (_2!1102 (h!2090 lt!39125))))))

(declare-fun b!84585 () Bool)

(assert (=> b!84585 (= e!55148 e!55149)))

(declare-fun c!13659 () Bool)

(assert (=> b!84585 (= c!13659 (and ((_ is Cons!1500) lt!39125) (not (= (_1!1102 (h!2090 lt!39125)) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))))

(declare-fun b!84587 () Bool)

(assert (=> b!84587 (= e!55149 None!144)))

(assert (= (and d!21691 c!13658) b!84584))

(assert (= (and d!21691 (not c!13658)) b!84585))

(assert (= (and b!84585 c!13659) b!84586))

(assert (= (and b!84585 (not c!13659)) b!84587))

(declare-fun m!88517 () Bool)

(assert (=> b!84586 m!88517))

(assert (=> d!20953 d!21691))

(declare-fun d!21693 () Bool)

(assert (=> d!21693 (= (getValueByKey!140 lt!39125 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))) (Some!145 (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(declare-fun lt!39878 () Unit!2413)

(assert (=> d!21693 (= lt!39878 (choose!493 lt!39125 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(declare-fun e!55150 () Bool)

(assert (=> d!21693 e!55150))

(declare-fun res!43632 () Bool)

(assert (=> d!21693 (=> (not res!43632) (not e!55150))))

(assert (=> d!21693 (= res!43632 (isStrictlySorted!284 lt!39125))))

(assert (=> d!21693 (= (lemmaContainsTupThenGetReturnValue!57 lt!39125 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))) lt!39878)))

(declare-fun b!84588 () Bool)

(declare-fun res!43633 () Bool)

(assert (=> b!84588 (=> (not res!43633) (not e!55150))))

(assert (=> b!84588 (= res!43633 (containsKey!143 lt!39125 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(declare-fun b!84589 () Bool)

(assert (=> b!84589 (= e!55150 (contains!746 lt!39125 (tuple2!2183 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))

(assert (= (and d!21693 res!43632) b!84588))

(assert (= (and b!84588 res!43633) b!84589))

(assert (=> d!21693 m!86191))

(declare-fun m!88519 () Bool)

(assert (=> d!21693 m!88519))

(declare-fun m!88521 () Bool)

(assert (=> d!21693 m!88521))

(declare-fun m!88523 () Bool)

(assert (=> b!84588 m!88523))

(declare-fun m!88525 () Bool)

(assert (=> b!84589 m!88525))

(assert (=> d!20953 d!21693))

(declare-fun c!13663 () Bool)

(declare-fun b!84591 () Bool)

(declare-fun c!13660 () Bool)

(declare-fun e!55151 () List!1504)

(assert (=> b!84591 (= e!55151 (ite c!13663 (t!5196 (toList!734 call!7774)) (ite c!13660 (Cons!1500 (h!2090 (toList!734 call!7774)) (t!5196 (toList!734 call!7774))) Nil!1501)))))

(declare-fun call!7968 () List!1504)

(declare-fun c!13661 () Bool)

(declare-fun bm!7965 () Bool)

(assert (=> bm!7965 (= call!7968 ($colon$colon!70 e!55151 (ite c!13661 (h!2090 (toList!734 call!7774)) (tuple2!2183 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))))

(declare-fun c!13662 () Bool)

(assert (=> bm!7965 (= c!13662 c!13661)))

(declare-fun b!84592 () Bool)

(declare-fun e!55155 () List!1504)

(declare-fun call!7970 () List!1504)

(assert (=> b!84592 (= e!55155 call!7970)))

(declare-fun b!84593 () Bool)

(declare-fun e!55153 () List!1504)

(assert (=> b!84593 (= e!55153 call!7968)))

(declare-fun bm!7966 () Bool)

(assert (=> bm!7966 (= call!7970 call!7968)))

(declare-fun bm!7967 () Bool)

(declare-fun call!7969 () List!1504)

(assert (=> bm!7967 (= call!7969 call!7970)))

(declare-fun b!84594 () Bool)

(assert (=> b!84594 (= e!55151 (insertStrictlySorted!60 (t!5196 (toList!734 call!7774)) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(declare-fun b!84595 () Bool)

(declare-fun e!55154 () List!1504)

(assert (=> b!84595 (= e!55154 call!7969)))

(declare-fun b!84596 () Bool)

(assert (=> b!84596 (= e!55153 e!55155)))

(assert (=> b!84596 (= c!13663 (and ((_ is Cons!1500) (toList!734 call!7774)) (= (_1!1102 (h!2090 (toList!734 call!7774))) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))

(declare-fun e!55152 () Bool)

(declare-fun lt!39879 () List!1504)

(declare-fun b!84597 () Bool)

(assert (=> b!84597 (= e!55152 (contains!746 lt!39879 (tuple2!2183 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))

(declare-fun b!84590 () Bool)

(declare-fun res!43635 () Bool)

(assert (=> b!84590 (=> (not res!43635) (not e!55152))))

(assert (=> b!84590 (= res!43635 (containsKey!143 lt!39879 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(declare-fun d!21695 () Bool)

(assert (=> d!21695 e!55152))

(declare-fun res!43634 () Bool)

(assert (=> d!21695 (=> (not res!43634) (not e!55152))))

(assert (=> d!21695 (= res!43634 (isStrictlySorted!284 lt!39879))))

(assert (=> d!21695 (= lt!39879 e!55153)))

(assert (=> d!21695 (= c!13661 (and ((_ is Cons!1500) (toList!734 call!7774)) (bvslt (_1!1102 (h!2090 (toList!734 call!7774))) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))

(assert (=> d!21695 (isStrictlySorted!284 (toList!734 call!7774))))

(assert (=> d!21695 (= (insertStrictlySorted!60 (toList!734 call!7774) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))) lt!39879)))

(declare-fun b!84598 () Bool)

(assert (=> b!84598 (= e!55154 call!7969)))

(declare-fun b!84599 () Bool)

(assert (=> b!84599 (= c!13660 (and ((_ is Cons!1500) (toList!734 call!7774)) (bvsgt (_1!1102 (h!2090 (toList!734 call!7774))) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))

(assert (=> b!84599 (= e!55155 e!55154)))

(assert (= (and d!21695 c!13661) b!84593))

(assert (= (and d!21695 (not c!13661)) b!84596))

(assert (= (and b!84596 c!13663) b!84592))

(assert (= (and b!84596 (not c!13663)) b!84599))

(assert (= (and b!84599 c!13660) b!84595))

(assert (= (and b!84599 (not c!13660)) b!84598))

(assert (= (or b!84595 b!84598) bm!7967))

(assert (= (or b!84592 bm!7967) bm!7966))

(assert (= (or b!84593 bm!7966) bm!7965))

(assert (= (and bm!7965 c!13662) b!84594))

(assert (= (and bm!7965 (not c!13662)) b!84591))

(assert (= (and d!21695 res!43634) b!84590))

(assert (= (and b!84590 res!43635) b!84597))

(declare-fun m!88527 () Bool)

(assert (=> d!21695 m!88527))

(declare-fun m!88529 () Bool)

(assert (=> d!21695 m!88529))

(declare-fun m!88531 () Bool)

(assert (=> b!84594 m!88531))

(declare-fun m!88533 () Bool)

(assert (=> bm!7965 m!88533))

(declare-fun m!88535 () Bool)

(assert (=> b!84590 m!88535))

(declare-fun m!88537 () Bool)

(assert (=> b!84597 m!88537))

(assert (=> d!20953 d!21695))

(declare-fun d!21697 () Bool)

(assert (=> d!21697 (= (get!1200 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!83375 d!21697))

(declare-fun d!21699 () Bool)

(declare-fun lt!39880 () Bool)

(assert (=> d!21699 (= lt!39880 (select (content!89 (t!5196 (toList!734 lt!39012))) lt!38772))))

(declare-fun e!55156 () Bool)

(assert (=> d!21699 (= lt!39880 e!55156)))

(declare-fun res!43637 () Bool)

(assert (=> d!21699 (=> (not res!43637) (not e!55156))))

(assert (=> d!21699 (= res!43637 ((_ is Cons!1500) (t!5196 (toList!734 lt!39012))))))

(assert (=> d!21699 (= (contains!746 (t!5196 (toList!734 lt!39012)) lt!38772) lt!39880)))

(declare-fun b!84600 () Bool)

(declare-fun e!55157 () Bool)

(assert (=> b!84600 (= e!55156 e!55157)))

(declare-fun res!43636 () Bool)

(assert (=> b!84600 (=> res!43636 e!55157)))

(assert (=> b!84600 (= res!43636 (= (h!2090 (t!5196 (toList!734 lt!39012))) lt!38772))))

(declare-fun b!84601 () Bool)

(assert (=> b!84601 (= e!55157 (contains!746 (t!5196 (t!5196 (toList!734 lt!39012))) lt!38772))))

(assert (= (and d!21699 res!43637) b!84600))

(assert (= (and b!84600 (not res!43636)) b!84601))

(assert (=> d!21699 m!88225))

(declare-fun m!88539 () Bool)

(assert (=> d!21699 m!88539))

(declare-fun m!88541 () Bool)

(assert (=> b!84601 m!88541))

(assert (=> b!83516 d!21699))

(declare-fun d!21701 () Bool)

(assert (=> d!21701 (= (apply!81 lt!39241 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1201 (getValueByKey!140 (toList!734 lt!39241) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3582 () Bool)

(assert (= bs!3582 d!21701))

(assert (=> bs!3582 m!87345))

(assert (=> bs!3582 m!87345))

(declare-fun m!88543 () Bool)

(assert (=> bs!3582 m!88543))

(assert (=> b!83453 d!21701))

(assert (=> b!83663 d!21329))

(declare-fun d!21703 () Bool)

(declare-fun res!43638 () Bool)

(declare-fun e!55158 () Bool)

(assert (=> d!21703 (=> res!43638 e!55158)))

(assert (=> d!21703 (= res!43638 (= (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))

(assert (=> d!21703 (= (arrayContainsKey!0 (_keys!3984 (v!2632 (underlying!289 thiss!992))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!55158)))

(declare-fun b!84602 () Bool)

(declare-fun e!55159 () Bool)

(assert (=> b!84602 (= e!55158 e!55159)))

(declare-fun res!43639 () Bool)

(assert (=> b!84602 (=> (not res!43639) (not e!55159))))

(assert (=> b!84602 (= res!43639 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2147 (_keys!3984 (v!2632 (underlying!289 thiss!992))))))))

(declare-fun b!84603 () Bool)

(assert (=> b!84603 (= e!55159 (arrayContainsKey!0 (_keys!3984 (v!2632 (underlying!289 thiss!992))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!21703 (not res!43638)) b!84602))

(assert (= (and b!84602 res!43639) b!84603))

(assert (=> d!21703 m!88253))

(assert (=> b!84603 m!85721))

(declare-fun m!88545 () Bool)

(assert (=> b!84603 m!88545))

(assert (=> b!83268 d!21703))

(declare-fun d!21705 () Bool)

(declare-fun res!43640 () Bool)

(declare-fun e!55160 () Bool)

(assert (=> d!21705 (=> res!43640 e!55160)))

(assert (=> d!21705 (= res!43640 (and ((_ is Cons!1500) lt!39046) (= (_1!1102 (h!2090 lt!39046)) (_1!1102 lt!38775))))))

(assert (=> d!21705 (= (containsKey!143 lt!39046 (_1!1102 lt!38775)) e!55160)))

(declare-fun b!84604 () Bool)

(declare-fun e!55161 () Bool)

(assert (=> b!84604 (= e!55160 e!55161)))

(declare-fun res!43641 () Bool)

(assert (=> b!84604 (=> (not res!43641) (not e!55161))))

(assert (=> b!84604 (= res!43641 (and (or (not ((_ is Cons!1500) lt!39046)) (bvsle (_1!1102 (h!2090 lt!39046)) (_1!1102 lt!38775))) ((_ is Cons!1500) lt!39046) (bvslt (_1!1102 (h!2090 lt!39046)) (_1!1102 lt!38775))))))

(declare-fun b!84605 () Bool)

(assert (=> b!84605 (= e!55161 (containsKey!143 (t!5196 lt!39046) (_1!1102 lt!38775)))))

(assert (= (and d!21705 (not res!43640)) b!84604))

(assert (= (and b!84604 res!43641) b!84605))

(declare-fun m!88547 () Bool)

(assert (=> b!84605 m!88547))

(assert (=> b!83735 d!21705))

(assert (=> b!83459 d!21221))

(assert (=> b!83459 d!21223))

(assert (=> d!20971 d!21267))

(assert (=> b!83521 d!21247))

(assert (=> b!83521 d!21249))

(declare-fun d!21707 () Bool)

(declare-fun res!43642 () Bool)

(declare-fun e!55162 () Bool)

(assert (=> d!21707 (=> res!43642 e!55162)))

(assert (=> d!21707 (= res!43642 (= (select (arr!1904 (_keys!3984 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))

(assert (=> d!21707 (= (arrayContainsKey!0 (_keys!3984 newMap!16) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!55162)))

(declare-fun b!84606 () Bool)

(declare-fun e!55163 () Bool)

(assert (=> b!84606 (= e!55162 e!55163)))

(declare-fun res!43643 () Bool)

(assert (=> b!84606 (=> (not res!43643) (not e!55163))))

(assert (=> b!84606 (= res!43643 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2147 (_keys!3984 newMap!16))))))

(declare-fun b!84607 () Bool)

(assert (=> b!84607 (= e!55163 (arrayContainsKey!0 (_keys!3984 newMap!16) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!21707 (not res!43642)) b!84606))

(assert (= (and b!84606 res!43643) b!84607))

(declare-fun m!88549 () Bool)

(assert (=> d!21707 m!88549))

(assert (=> b!84607 m!85721))

(declare-fun m!88551 () Bool)

(assert (=> b!84607 m!88551))

(assert (=> b!83402 d!21707))

(declare-fun d!21709 () Bool)

(declare-fun e!55165 () Bool)

(assert (=> d!21709 e!55165))

(declare-fun res!43644 () Bool)

(assert (=> d!21709 (=> res!43644 e!55165)))

(declare-fun lt!39881 () Bool)

(assert (=> d!21709 (= res!43644 (not lt!39881))))

(declare-fun lt!39884 () Bool)

(assert (=> d!21709 (= lt!39881 lt!39884)))

(declare-fun lt!39883 () Unit!2413)

(declare-fun e!55164 () Unit!2413)

(assert (=> d!21709 (= lt!39883 e!55164)))

(declare-fun c!13664 () Bool)

(assert (=> d!21709 (= c!13664 lt!39884)))

(assert (=> d!21709 (= lt!39884 (containsKey!143 (toList!734 lt!39190) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(assert (=> d!21709 (= (contains!744 lt!39190 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))) lt!39881)))

(declare-fun b!84608 () Bool)

(declare-fun lt!39882 () Unit!2413)

(assert (=> b!84608 (= e!55164 lt!39882)))

(assert (=> b!84608 (= lt!39882 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 lt!39190) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(assert (=> b!84608 (isDefined!92 (getValueByKey!140 (toList!734 lt!39190) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(declare-fun b!84609 () Bool)

(declare-fun Unit!2477 () Unit!2413)

(assert (=> b!84609 (= e!55164 Unit!2477)))

(declare-fun b!84610 () Bool)

(assert (=> b!84610 (= e!55165 (isDefined!92 (getValueByKey!140 (toList!734 lt!39190) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))

(assert (= (and d!21709 c!13664) b!84608))

(assert (= (and d!21709 (not c!13664)) b!84609))

(assert (= (and d!21709 (not res!43644)) b!84610))

(declare-fun m!88553 () Bool)

(assert (=> d!21709 m!88553))

(declare-fun m!88555 () Bool)

(assert (=> b!84608 m!88555))

(assert (=> b!84608 m!86365))

(assert (=> b!84608 m!86365))

(declare-fun m!88557 () Bool)

(assert (=> b!84608 m!88557))

(assert (=> b!84610 m!86365))

(assert (=> b!84610 m!86365))

(assert (=> b!84610 m!88557))

(assert (=> d!20987 d!21709))

(declare-fun e!55167 () Option!146)

(declare-fun b!84613 () Bool)

(assert (=> b!84613 (= e!55167 (getValueByKey!140 (t!5196 lt!39192) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(declare-fun c!13665 () Bool)

(declare-fun d!21711 () Bool)

(assert (=> d!21711 (= c!13665 (and ((_ is Cons!1500) lt!39192) (= (_1!1102 (h!2090 lt!39192)) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))

(declare-fun e!55166 () Option!146)

(assert (=> d!21711 (= (getValueByKey!140 lt!39192 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))) e!55166)))

(declare-fun b!84611 () Bool)

(assert (=> b!84611 (= e!55166 (Some!145 (_2!1102 (h!2090 lt!39192))))))

(declare-fun b!84612 () Bool)

(assert (=> b!84612 (= e!55166 e!55167)))

(declare-fun c!13666 () Bool)

(assert (=> b!84612 (= c!13666 (and ((_ is Cons!1500) lt!39192) (not (= (_1!1102 (h!2090 lt!39192)) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))))

(declare-fun b!84614 () Bool)

(assert (=> b!84614 (= e!55167 None!144)))

(assert (= (and d!21711 c!13665) b!84611))

(assert (= (and d!21711 (not c!13665)) b!84612))

(assert (= (and b!84612 c!13666) b!84613))

(assert (= (and b!84612 (not c!13666)) b!84614))

(declare-fun m!88559 () Bool)

(assert (=> b!84613 m!88559))

(assert (=> d!20987 d!21711))

(declare-fun d!21713 () Bool)

(assert (=> d!21713 (= (getValueByKey!140 lt!39192 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))) (Some!145 (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(declare-fun lt!39885 () Unit!2413)

(assert (=> d!21713 (= lt!39885 (choose!493 lt!39192 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(declare-fun e!55168 () Bool)

(assert (=> d!21713 e!55168))

(declare-fun res!43645 () Bool)

(assert (=> d!21713 (=> (not res!43645) (not e!55168))))

(assert (=> d!21713 (= res!43645 (isStrictlySorted!284 lt!39192))))

(assert (=> d!21713 (= (lemmaContainsTupThenGetReturnValue!57 lt!39192 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))) lt!39885)))

(declare-fun b!84615 () Bool)

(declare-fun res!43646 () Bool)

(assert (=> b!84615 (=> (not res!43646) (not e!55168))))

(assert (=> b!84615 (= res!43646 (containsKey!143 lt!39192 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(declare-fun b!84616 () Bool)

(assert (=> b!84616 (= e!55168 (contains!746 lt!39192 (tuple2!2183 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))

(assert (= (and d!21713 res!43645) b!84615))

(assert (= (and b!84615 res!43646) b!84616))

(assert (=> d!21713 m!86359))

(declare-fun m!88561 () Bool)

(assert (=> d!21713 m!88561))

(declare-fun m!88563 () Bool)

(assert (=> d!21713 m!88563))

(declare-fun m!88565 () Bool)

(assert (=> b!84615 m!88565))

(declare-fun m!88567 () Bool)

(assert (=> b!84616 m!88567))

(assert (=> d!20987 d!21713))

(declare-fun e!55169 () List!1504)

(declare-fun c!13667 () Bool)

(declare-fun b!84618 () Bool)

(declare-fun c!13670 () Bool)

(assert (=> b!84618 (= e!55169 (ite c!13670 (t!5196 (toList!734 lt!38771)) (ite c!13667 (Cons!1500 (h!2090 (toList!734 lt!38771)) (t!5196 (toList!734 lt!38771))) Nil!1501)))))

(declare-fun bm!7968 () Bool)

(declare-fun call!7971 () List!1504)

(declare-fun c!13668 () Bool)

(assert (=> bm!7968 (= call!7971 ($colon$colon!70 e!55169 (ite c!13668 (h!2090 (toList!734 lt!38771)) (tuple2!2183 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))))

(declare-fun c!13669 () Bool)

(assert (=> bm!7968 (= c!13669 c!13668)))

(declare-fun b!84619 () Bool)

(declare-fun e!55173 () List!1504)

(declare-fun call!7973 () List!1504)

(assert (=> b!84619 (= e!55173 call!7973)))

(declare-fun b!84620 () Bool)

(declare-fun e!55171 () List!1504)

(assert (=> b!84620 (= e!55171 call!7971)))

(declare-fun bm!7969 () Bool)

(assert (=> bm!7969 (= call!7973 call!7971)))

(declare-fun bm!7970 () Bool)

(declare-fun call!7972 () List!1504)

(assert (=> bm!7970 (= call!7972 call!7973)))

(declare-fun b!84621 () Bool)

(assert (=> b!84621 (= e!55169 (insertStrictlySorted!60 (t!5196 (toList!734 lt!38771)) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(declare-fun b!84622 () Bool)

(declare-fun e!55172 () List!1504)

(assert (=> b!84622 (= e!55172 call!7972)))

(declare-fun b!84623 () Bool)

(assert (=> b!84623 (= e!55171 e!55173)))

(assert (=> b!84623 (= c!13670 (and ((_ is Cons!1500) (toList!734 lt!38771)) (= (_1!1102 (h!2090 (toList!734 lt!38771))) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))

(declare-fun lt!39886 () List!1504)

(declare-fun b!84624 () Bool)

(declare-fun e!55170 () Bool)

(assert (=> b!84624 (= e!55170 (contains!746 lt!39886 (tuple2!2183 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))

(declare-fun b!84617 () Bool)

(declare-fun res!43648 () Bool)

(assert (=> b!84617 (=> (not res!43648) (not e!55170))))

(assert (=> b!84617 (= res!43648 (containsKey!143 lt!39886 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(declare-fun d!21715 () Bool)

(assert (=> d!21715 e!55170))

(declare-fun res!43647 () Bool)

(assert (=> d!21715 (=> (not res!43647) (not e!55170))))

(assert (=> d!21715 (= res!43647 (isStrictlySorted!284 lt!39886))))

(assert (=> d!21715 (= lt!39886 e!55171)))

(assert (=> d!21715 (= c!13668 (and ((_ is Cons!1500) (toList!734 lt!38771)) (bvslt (_1!1102 (h!2090 (toList!734 lt!38771))) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))

(assert (=> d!21715 (isStrictlySorted!284 (toList!734 lt!38771))))

(assert (=> d!21715 (= (insertStrictlySorted!60 (toList!734 lt!38771) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))) lt!39886)))

(declare-fun b!84625 () Bool)

(assert (=> b!84625 (= e!55172 call!7972)))

(declare-fun b!84626 () Bool)

(assert (=> b!84626 (= c!13667 (and ((_ is Cons!1500) (toList!734 lt!38771)) (bvsgt (_1!1102 (h!2090 (toList!734 lt!38771))) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))

(assert (=> b!84626 (= e!55173 e!55172)))

(assert (= (and d!21715 c!13668) b!84620))

(assert (= (and d!21715 (not c!13668)) b!84623))

(assert (= (and b!84623 c!13670) b!84619))

(assert (= (and b!84623 (not c!13670)) b!84626))

(assert (= (and b!84626 c!13667) b!84622))

(assert (= (and b!84626 (not c!13667)) b!84625))

(assert (= (or b!84622 b!84625) bm!7970))

(assert (= (or b!84619 bm!7970) bm!7969))

(assert (= (or b!84620 bm!7969) bm!7968))

(assert (= (and bm!7968 c!13669) b!84621))

(assert (= (and bm!7968 (not c!13669)) b!84618))

(assert (= (and d!21715 res!43647) b!84617))

(assert (= (and b!84617 res!43648) b!84624))

(declare-fun m!88569 () Bool)

(assert (=> d!21715 m!88569))

(assert (=> d!21715 m!86387))

(declare-fun m!88571 () Bool)

(assert (=> b!84621 m!88571))

(declare-fun m!88573 () Bool)

(assert (=> bm!7968 m!88573))

(declare-fun m!88575 () Bool)

(assert (=> b!84617 m!88575))

(declare-fun m!88577 () Bool)

(assert (=> b!84624 m!88577))

(assert (=> d!20987 d!21715))

(declare-fun b!84627 () Bool)

(declare-fun e!55177 () Bool)

(declare-fun call!7974 () Bool)

(assert (=> b!84627 (= e!55177 call!7974)))

(declare-fun b!84628 () Bool)

(assert (=> b!84628 (= e!55177 call!7974)))

(declare-fun b!84629 () Bool)

(declare-fun e!55176 () Bool)

(declare-fun e!55175 () Bool)

(assert (=> b!84629 (= e!55176 e!55175)))

(declare-fun res!43650 () Bool)

(assert (=> b!84629 (=> (not res!43650) (not e!55175))))

(declare-fun e!55174 () Bool)

(assert (=> b!84629 (= res!43650 (not e!55174))))

(declare-fun res!43649 () Bool)

(assert (=> b!84629 (=> (not res!43649) (not e!55174))))

(assert (=> b!84629 (= res!43649 (validKeyInArray!0 (select (arr!1904 (_keys!3984 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun d!21717 () Bool)

(declare-fun res!43651 () Bool)

(assert (=> d!21717 (=> res!43651 e!55176)))

(assert (=> d!21717 (= res!43651 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2147 (_keys!3984 newMap!16))))))

(assert (=> d!21717 (= (arrayNoDuplicates!0 (_keys!3984 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!13328 (Cons!1501 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000) Nil!1502) Nil!1502)) e!55176)))

(declare-fun b!84630 () Bool)

(assert (=> b!84630 (= e!55174 (contains!745 (ite c!13328 (Cons!1501 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000) Nil!1502) Nil!1502) (select (arr!1904 (_keys!3984 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!84631 () Bool)

(assert (=> b!84631 (= e!55175 e!55177)))

(declare-fun c!13671 () Bool)

(assert (=> b!84631 (= c!13671 (validKeyInArray!0 (select (arr!1904 (_keys!3984 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun bm!7971 () Bool)

(assert (=> bm!7971 (= call!7974 (arrayNoDuplicates!0 (_keys!3984 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!13671 (Cons!1501 (select (arr!1904 (_keys!3984 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!13328 (Cons!1501 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000) Nil!1502) Nil!1502)) (ite c!13328 (Cons!1501 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000) Nil!1502) Nil!1502))))))

(assert (= (and d!21717 (not res!43651)) b!84629))

(assert (= (and b!84629 res!43649) b!84630))

(assert (= (and b!84629 res!43650) b!84631))

(assert (= (and b!84631 c!13671) b!84628))

(assert (= (and b!84631 (not c!13671)) b!84627))

(assert (= (or b!84628 b!84627) bm!7971))

(assert (=> b!84629 m!88549))

(assert (=> b!84629 m!88549))

(declare-fun m!88579 () Bool)

(assert (=> b!84629 m!88579))

(assert (=> b!84630 m!88549))

(assert (=> b!84630 m!88549))

(declare-fun m!88581 () Bool)

(assert (=> b!84630 m!88581))

(assert (=> b!84631 m!88549))

(assert (=> b!84631 m!88549))

(assert (=> b!84631 m!88579))

(assert (=> bm!7971 m!88549))

(declare-fun m!88583 () Bool)

(assert (=> bm!7971 m!88583))

(assert (=> bm!7829 d!21717))

(declare-fun e!55179 () Option!146)

(declare-fun b!84634 () Bool)

(assert (=> b!84634 (= e!55179 (getValueByKey!140 (t!5196 (toList!734 lt!39308)) (_1!1102 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun c!13672 () Bool)

(declare-fun d!21719 () Bool)

(assert (=> d!21719 (= c!13672 (and ((_ is Cons!1500) (toList!734 lt!39308)) (= (_1!1102 (h!2090 (toList!734 lt!39308))) (_1!1102 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(declare-fun e!55178 () Option!146)

(assert (=> d!21719 (= (getValueByKey!140 (toList!734 lt!39308) (_1!1102 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))) e!55178)))

(declare-fun b!84632 () Bool)

(assert (=> b!84632 (= e!55178 (Some!145 (_2!1102 (h!2090 (toList!734 lt!39308)))))))

(declare-fun b!84633 () Bool)

(assert (=> b!84633 (= e!55178 e!55179)))

(declare-fun c!13673 () Bool)

(assert (=> b!84633 (= c!13673 (and ((_ is Cons!1500) (toList!734 lt!39308)) (not (= (_1!1102 (h!2090 (toList!734 lt!39308))) (_1!1102 (tuple2!2183 lt!39102 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))))

(declare-fun b!84635 () Bool)

(assert (=> b!84635 (= e!55179 None!144)))

(assert (= (and d!21719 c!13672) b!84632))

(assert (= (and d!21719 (not c!13672)) b!84633))

(assert (= (and b!84633 c!13673) b!84634))

(assert (= (and b!84633 (not c!13673)) b!84635))

(declare-fun m!88585 () Bool)

(assert (=> b!84634 m!88585))

(assert (=> b!83522 d!21719))

(declare-fun d!21721 () Bool)

(assert (=> d!21721 (= ($colon$colon!70 e!54448 (ite c!13318 (h!2090 (toList!734 (+!105 lt!38773 lt!38779))) (tuple2!2183 (_1!1102 lt!38775) (_2!1102 lt!38775)))) (Cons!1500 (ite c!13318 (h!2090 (toList!734 (+!105 lt!38773 lt!38779))) (tuple2!2183 (_1!1102 lt!38775) (_2!1102 lt!38775))) e!54448))))

(assert (=> bm!7819 d!21721))

(declare-fun d!21723 () Bool)

(declare-fun e!55181 () Bool)

(assert (=> d!21723 e!55181))

(declare-fun res!43652 () Bool)

(assert (=> d!21723 (=> res!43652 e!55181)))

(declare-fun lt!39887 () Bool)

(assert (=> d!21723 (= res!43652 (not lt!39887))))

(declare-fun lt!39890 () Bool)

(assert (=> d!21723 (= lt!39887 lt!39890)))

(declare-fun lt!39889 () Unit!2413)

(declare-fun e!55180 () Unit!2413)

(assert (=> d!21723 (= lt!39889 e!55180)))

(declare-fun c!13674 () Bool)

(assert (=> d!21723 (= c!13674 lt!39890)))

(assert (=> d!21723 (= lt!39890 (containsKey!143 (toList!734 lt!39475) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(assert (=> d!21723 (= (contains!744 lt!39475 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))) lt!39887)))

(declare-fun b!84636 () Bool)

(declare-fun lt!39888 () Unit!2413)

(assert (=> b!84636 (= e!55180 lt!39888)))

(assert (=> b!84636 (= lt!39888 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 lt!39475) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(assert (=> b!84636 (isDefined!92 (getValueByKey!140 (toList!734 lt!39475) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun b!84637 () Bool)

(declare-fun Unit!2478 () Unit!2413)

(assert (=> b!84637 (= e!55180 Unit!2478)))

(declare-fun b!84638 () Bool)

(assert (=> b!84638 (= e!55181 (isDefined!92 (getValueByKey!140 (toList!734 lt!39475) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(assert (= (and d!21723 c!13674) b!84636))

(assert (= (and d!21723 (not c!13674)) b!84637))

(assert (= (and d!21723 (not res!43652)) b!84638))

(declare-fun m!88587 () Bool)

(assert (=> d!21723 m!88587))

(declare-fun m!88589 () Bool)

(assert (=> b!84636 m!88589))

(assert (=> b!84636 m!87037))

(assert (=> b!84636 m!87037))

(declare-fun m!88591 () Bool)

(assert (=> b!84636 m!88591))

(assert (=> b!84638 m!87037))

(assert (=> b!84638 m!87037))

(assert (=> b!84638 m!88591))

(assert (=> d!21161 d!21723))

(declare-fun b!84641 () Bool)

(declare-fun e!55183 () Option!146)

(assert (=> b!84641 (= e!55183 (getValueByKey!140 (t!5196 lt!39477) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun d!21725 () Bool)

(declare-fun c!13675 () Bool)

(assert (=> d!21725 (= c!13675 (and ((_ is Cons!1500) lt!39477) (= (_1!1102 (h!2090 lt!39477)) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(declare-fun e!55182 () Option!146)

(assert (=> d!21725 (= (getValueByKey!140 lt!39477 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))) e!55182)))

(declare-fun b!84639 () Bool)

(assert (=> b!84639 (= e!55182 (Some!145 (_2!1102 (h!2090 lt!39477))))))

(declare-fun b!84640 () Bool)

(assert (=> b!84640 (= e!55182 e!55183)))

(declare-fun c!13676 () Bool)

(assert (=> b!84640 (= c!13676 (and ((_ is Cons!1500) lt!39477) (not (= (_1!1102 (h!2090 lt!39477)) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))))

(declare-fun b!84642 () Bool)

(assert (=> b!84642 (= e!55183 None!144)))

(assert (= (and d!21725 c!13675) b!84639))

(assert (= (and d!21725 (not c!13675)) b!84640))

(assert (= (and b!84640 c!13676) b!84641))

(assert (= (and b!84640 (not c!13676)) b!84642))

(declare-fun m!88593 () Bool)

(assert (=> b!84641 m!88593))

(assert (=> d!21161 d!21725))

(declare-fun d!21727 () Bool)

(assert (=> d!21727 (= (getValueByKey!140 lt!39477 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))) (Some!145 (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun lt!39891 () Unit!2413)

(assert (=> d!21727 (= lt!39891 (choose!493 lt!39477 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun e!55184 () Bool)

(assert (=> d!21727 e!55184))

(declare-fun res!43653 () Bool)

(assert (=> d!21727 (=> (not res!43653) (not e!55184))))

(assert (=> d!21727 (= res!43653 (isStrictlySorted!284 lt!39477))))

(assert (=> d!21727 (= (lemmaContainsTupThenGetReturnValue!57 lt!39477 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))) lt!39891)))

(declare-fun b!84643 () Bool)

(declare-fun res!43654 () Bool)

(assert (=> b!84643 (=> (not res!43654) (not e!55184))))

(assert (=> b!84643 (= res!43654 (containsKey!143 lt!39477 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun b!84644 () Bool)

(assert (=> b!84644 (= e!55184 (contains!746 lt!39477 (tuple2!2183 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(assert (= (and d!21727 res!43653) b!84643))

(assert (= (and b!84643 res!43654) b!84644))

(assert (=> d!21727 m!87031))

(declare-fun m!88595 () Bool)

(assert (=> d!21727 m!88595))

(declare-fun m!88597 () Bool)

(assert (=> d!21727 m!88597))

(declare-fun m!88599 () Bool)

(assert (=> b!84643 m!88599))

(declare-fun m!88601 () Bool)

(assert (=> b!84644 m!88601))

(assert (=> d!21161 d!21727))

(declare-fun c!13677 () Bool)

(declare-fun c!13680 () Bool)

(declare-fun e!55185 () List!1504)

(declare-fun b!84646 () Bool)

(assert (=> b!84646 (= e!55185 (ite c!13680 (t!5196 (toList!734 (+!105 lt!38773 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))) (ite c!13677 (Cons!1500 (h!2090 (toList!734 (+!105 lt!38773 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))) (t!5196 (toList!734 (+!105 lt!38773 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))) Nil!1501)))))

(declare-fun call!7975 () List!1504)

(declare-fun c!13678 () Bool)

(declare-fun bm!7972 () Bool)

(assert (=> bm!7972 (= call!7975 ($colon$colon!70 e!55185 (ite c!13678 (h!2090 (toList!734 (+!105 lt!38773 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))) (tuple2!2183 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))))

(declare-fun c!13679 () Bool)

(assert (=> bm!7972 (= c!13679 c!13678)))

(declare-fun b!84647 () Bool)

(declare-fun e!55189 () List!1504)

(declare-fun call!7977 () List!1504)

(assert (=> b!84647 (= e!55189 call!7977)))

(declare-fun b!84648 () Bool)

(declare-fun e!55187 () List!1504)

(assert (=> b!84648 (= e!55187 call!7975)))

(declare-fun bm!7973 () Bool)

(assert (=> bm!7973 (= call!7977 call!7975)))

(declare-fun bm!7974 () Bool)

(declare-fun call!7976 () List!1504)

(assert (=> bm!7974 (= call!7976 call!7977)))

(declare-fun b!84649 () Bool)

(assert (=> b!84649 (= e!55185 (insertStrictlySorted!60 (t!5196 (toList!734 (+!105 lt!38773 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun b!84650 () Bool)

(declare-fun e!55188 () List!1504)

(assert (=> b!84650 (= e!55188 call!7976)))

(declare-fun b!84651 () Bool)

(assert (=> b!84651 (= e!55187 e!55189)))

(assert (=> b!84651 (= c!13680 (and ((_ is Cons!1500) (toList!734 (+!105 lt!38773 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))) (= (_1!1102 (h!2090 (toList!734 (+!105 lt!38773 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(declare-fun b!84652 () Bool)

(declare-fun e!55186 () Bool)

(declare-fun lt!39892 () List!1504)

(assert (=> b!84652 (= e!55186 (contains!746 lt!39892 (tuple2!2183 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(declare-fun b!84645 () Bool)

(declare-fun res!43656 () Bool)

(assert (=> b!84645 (=> (not res!43656) (not e!55186))))

(assert (=> b!84645 (= res!43656 (containsKey!143 lt!39892 (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun d!21729 () Bool)

(assert (=> d!21729 e!55186))

(declare-fun res!43655 () Bool)

(assert (=> d!21729 (=> (not res!43655) (not e!55186))))

(assert (=> d!21729 (= res!43655 (isStrictlySorted!284 lt!39892))))

(assert (=> d!21729 (= lt!39892 e!55187)))

(assert (=> d!21729 (= c!13678 (and ((_ is Cons!1500) (toList!734 (+!105 lt!38773 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))) (bvslt (_1!1102 (h!2090 (toList!734 (+!105 lt!38773 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(assert (=> d!21729 (isStrictlySorted!284 (toList!734 (+!105 lt!38773 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(assert (=> d!21729 (= (insertStrictlySorted!60 (toList!734 (+!105 lt!38773 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))) lt!39892)))

(declare-fun b!84653 () Bool)

(assert (=> b!84653 (= e!55188 call!7976)))

(declare-fun b!84654 () Bool)

(assert (=> b!84654 (= c!13677 (and ((_ is Cons!1500) (toList!734 (+!105 lt!38773 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))) (bvsgt (_1!1102 (h!2090 (toList!734 (+!105 lt!38773 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))) (_1!1102 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(assert (=> b!84654 (= e!55189 e!55188)))

(assert (= (and d!21729 c!13678) b!84648))

(assert (= (and d!21729 (not c!13678)) b!84651))

(assert (= (and b!84651 c!13680) b!84647))

(assert (= (and b!84651 (not c!13680)) b!84654))

(assert (= (and b!84654 c!13677) b!84650))

(assert (= (and b!84654 (not c!13677)) b!84653))

(assert (= (or b!84650 b!84653) bm!7974))

(assert (= (or b!84647 bm!7974) bm!7973))

(assert (= (or b!84648 bm!7973) bm!7972))

(assert (= (and bm!7972 c!13679) b!84649))

(assert (= (and bm!7972 (not c!13679)) b!84646))

(assert (= (and d!21729 res!43655) b!84645))

(assert (= (and b!84645 res!43656) b!84652))

(declare-fun m!88603 () Bool)

(assert (=> d!21729 m!88603))

(declare-fun m!88605 () Bool)

(assert (=> d!21729 m!88605))

(declare-fun m!88607 () Bool)

(assert (=> b!84649 m!88607))

(declare-fun m!88609 () Bool)

(assert (=> bm!7972 m!88609))

(declare-fun m!88611 () Bool)

(assert (=> b!84645 m!88611))

(declare-fun m!88613 () Bool)

(assert (=> b!84652 m!88613))

(assert (=> d!21161 d!21729))

(declare-fun lt!39893 () Bool)

(declare-fun d!21731 () Bool)

(assert (=> d!21731 (= lt!39893 (select (content!89 (toList!734 lt!39251)) (ite (or c!13263 c!13258) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun e!55190 () Bool)

(assert (=> d!21731 (= lt!39893 e!55190)))

(declare-fun res!43658 () Bool)

(assert (=> d!21731 (=> (not res!43658) (not e!55190))))

(assert (=> d!21731 (= res!43658 ((_ is Cons!1500) (toList!734 lt!39251)))))

(assert (=> d!21731 (= (contains!746 (toList!734 lt!39251) (ite (or c!13263 c!13258) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))) lt!39893)))

(declare-fun b!84655 () Bool)

(declare-fun e!55191 () Bool)

(assert (=> b!84655 (= e!55190 e!55191)))

(declare-fun res!43657 () Bool)

(assert (=> b!84655 (=> res!43657 e!55191)))

(assert (=> b!84655 (= res!43657 (= (h!2090 (toList!734 lt!39251)) (ite (or c!13263 c!13258) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun b!84656 () Bool)

(assert (=> b!84656 (= e!55191 (contains!746 (t!5196 (toList!734 lt!39251)) (ite (or c!13263 c!13258) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(assert (= (and d!21731 res!43658) b!84655))

(assert (= (and b!84655 (not res!43657)) b!84656))

(declare-fun m!88615 () Bool)

(assert (=> d!21731 m!88615))

(declare-fun m!88617 () Bool)

(assert (=> d!21731 m!88617))

(declare-fun m!88619 () Bool)

(assert (=> b!84656 m!88619))

(assert (=> b!83456 d!21731))

(declare-fun d!21733 () Bool)

(declare-fun res!43659 () Bool)

(declare-fun e!55192 () Bool)

(assert (=> d!21733 (=> res!43659 e!55192)))

(assert (=> d!21733 (= res!43659 (and ((_ is Cons!1500) (toList!734 lt!39012)) (= (_1!1102 (h!2090 (toList!734 lt!39012))) (_1!1102 lt!38772))))))

(assert (=> d!21733 (= (containsKey!143 (toList!734 lt!39012) (_1!1102 lt!38772)) e!55192)))

(declare-fun b!84657 () Bool)

(declare-fun e!55193 () Bool)

(assert (=> b!84657 (= e!55192 e!55193)))

(declare-fun res!43660 () Bool)

(assert (=> b!84657 (=> (not res!43660) (not e!55193))))

(assert (=> b!84657 (= res!43660 (and (or (not ((_ is Cons!1500) (toList!734 lt!39012))) (bvsle (_1!1102 (h!2090 (toList!734 lt!39012))) (_1!1102 lt!38772))) ((_ is Cons!1500) (toList!734 lt!39012)) (bvslt (_1!1102 (h!2090 (toList!734 lt!39012))) (_1!1102 lt!38772))))))

(declare-fun b!84658 () Bool)

(assert (=> b!84658 (= e!55193 (containsKey!143 (t!5196 (toList!734 lt!39012)) (_1!1102 lt!38772)))))

(assert (= (and d!21733 (not res!43659)) b!84657))

(assert (= (and b!84657 res!43660) b!84658))

(declare-fun m!88621 () Bool)

(assert (=> b!84658 m!88621))

(assert (=> d!20991 d!21733))

(declare-fun d!21735 () Bool)

(declare-fun res!43661 () Bool)

(declare-fun e!55194 () Bool)

(assert (=> d!21735 (=> res!43661 e!55194)))

(assert (=> d!21735 (= res!43661 (and ((_ is Cons!1500) (toList!734 lt!39004)) (= (_1!1102 (h!2090 (toList!734 lt!39004))) (_1!1102 lt!38779))))))

(assert (=> d!21735 (= (containsKey!143 (toList!734 lt!39004) (_1!1102 lt!38779)) e!55194)))

(declare-fun b!84659 () Bool)

(declare-fun e!55195 () Bool)

(assert (=> b!84659 (= e!55194 e!55195)))

(declare-fun res!43662 () Bool)

(assert (=> b!84659 (=> (not res!43662) (not e!55195))))

(assert (=> b!84659 (= res!43662 (and (or (not ((_ is Cons!1500) (toList!734 lt!39004))) (bvsle (_1!1102 (h!2090 (toList!734 lt!39004))) (_1!1102 lt!38779))) ((_ is Cons!1500) (toList!734 lt!39004)) (bvslt (_1!1102 (h!2090 (toList!734 lt!39004))) (_1!1102 lt!38779))))))

(declare-fun b!84660 () Bool)

(assert (=> b!84660 (= e!55195 (containsKey!143 (t!5196 (toList!734 lt!39004)) (_1!1102 lt!38779)))))

(assert (= (and d!21735 (not res!43661)) b!84659))

(assert (= (and b!84659 res!43662) b!84660))

(declare-fun m!88623 () Bool)

(assert (=> b!84660 m!88623))

(assert (=> d!21133 d!21735))

(declare-fun d!21737 () Bool)

(declare-fun res!43663 () Bool)

(declare-fun e!55196 () Bool)

(assert (=> d!21737 (=> (not res!43663) (not e!55196))))

(assert (=> d!21737 (= res!43663 (simpleValid!57 (_2!1101 lt!39413)))))

(assert (=> d!21737 (= (valid!334 (_2!1101 lt!39413)) e!55196)))

(declare-fun b!84661 () Bool)

(declare-fun res!43664 () Bool)

(assert (=> b!84661 (=> (not res!43664) (not e!55196))))

(assert (=> b!84661 (= res!43664 (= (arrayCountValidKeys!0 (_keys!3984 (_2!1101 lt!39413)) #b00000000000000000000000000000000 (size!2147 (_keys!3984 (_2!1101 lt!39413)))) (_size!423 (_2!1101 lt!39413))))))

(declare-fun b!84662 () Bool)

(declare-fun res!43665 () Bool)

(assert (=> b!84662 (=> (not res!43665) (not e!55196))))

(assert (=> b!84662 (= res!43665 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3984 (_2!1101 lt!39413)) (mask!6334 (_2!1101 lt!39413))))))

(declare-fun b!84663 () Bool)

(assert (=> b!84663 (= e!55196 (arrayNoDuplicates!0 (_keys!3984 (_2!1101 lt!39413)) #b00000000000000000000000000000000 Nil!1502))))

(assert (= (and d!21737 res!43663) b!84661))

(assert (= (and b!84661 res!43664) b!84662))

(assert (= (and b!84662 res!43665) b!84663))

(declare-fun m!88625 () Bool)

(assert (=> d!21737 m!88625))

(declare-fun m!88627 () Bool)

(assert (=> b!84661 m!88627))

(declare-fun m!88629 () Bool)

(assert (=> b!84662 m!88629))

(declare-fun m!88631 () Bool)

(assert (=> b!84663 m!88631))

(assert (=> b!83575 d!21737))

(declare-fun d!21739 () Bool)

(declare-fun lt!39894 () Bool)

(assert (=> d!21739 (= lt!39894 (select (content!88 (ite c!13230 (Cons!1501 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) Nil!1502) Nil!1502)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!55198 () Bool)

(assert (=> d!21739 (= lt!39894 e!55198)))

(declare-fun res!43667 () Bool)

(assert (=> d!21739 (=> (not res!43667) (not e!55198))))

(assert (=> d!21739 (= res!43667 ((_ is Cons!1501) (ite c!13230 (Cons!1501 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) Nil!1502) Nil!1502)))))

(assert (=> d!21739 (= (contains!745 (ite c!13230 (Cons!1501 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) Nil!1502) Nil!1502) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) lt!39894)))

(declare-fun b!84664 () Bool)

(declare-fun e!55197 () Bool)

(assert (=> b!84664 (= e!55198 e!55197)))

(declare-fun res!43666 () Bool)

(assert (=> b!84664 (=> res!43666 e!55197)))

(assert (=> b!84664 (= res!43666 (= (h!2091 (ite c!13230 (Cons!1501 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) Nil!1502) Nil!1502)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!84665 () Bool)

(assert (=> b!84665 (= e!55197 (contains!745 (t!5197 (ite c!13230 (Cons!1501 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) Nil!1502) Nil!1502)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!21739 res!43667) b!84664))

(assert (= (and b!84664 (not res!43666)) b!84665))

(declare-fun m!88633 () Bool)

(assert (=> d!21739 m!88633))

(assert (=> d!21739 m!86275))

(declare-fun m!88635 () Bool)

(assert (=> d!21739 m!88635))

(assert (=> b!84665 m!86275))

(declare-fun m!88637 () Bool)

(assert (=> b!84665 m!88637))

(assert (=> b!83272 d!21739))

(assert (=> b!83491 d!21375))

(declare-fun d!21741 () Bool)

(declare-fun lt!39895 () Bool)

(assert (=> d!21741 (= lt!39895 (select (content!89 lt!39202) (tuple2!2183 (_1!1102 lt!38772) (_2!1102 lt!38772))))))

(declare-fun e!55199 () Bool)

(assert (=> d!21741 (= lt!39895 e!55199)))

(declare-fun res!43669 () Bool)

(assert (=> d!21741 (=> (not res!43669) (not e!55199))))

(assert (=> d!21741 (= res!43669 ((_ is Cons!1500) lt!39202))))

(assert (=> d!21741 (= (contains!746 lt!39202 (tuple2!2183 (_1!1102 lt!38772) (_2!1102 lt!38772))) lt!39895)))

(declare-fun b!84666 () Bool)

(declare-fun e!55200 () Bool)

(assert (=> b!84666 (= e!55199 e!55200)))

(declare-fun res!43668 () Bool)

(assert (=> b!84666 (=> res!43668 e!55200)))

(assert (=> b!84666 (= res!43668 (= (h!2090 lt!39202) (tuple2!2183 (_1!1102 lt!38772) (_2!1102 lt!38772))))))

(declare-fun b!84667 () Bool)

(assert (=> b!84667 (= e!55200 (contains!746 (t!5196 lt!39202) (tuple2!2183 (_1!1102 lt!38772) (_2!1102 lt!38772))))))

(assert (= (and d!21741 res!43669) b!84666))

(assert (= (and b!84666 (not res!43668)) b!84667))

(declare-fun m!88639 () Bool)

(assert (=> d!21741 m!88639))

(declare-fun m!88641 () Bool)

(assert (=> d!21741 m!88641))

(declare-fun m!88643 () Bool)

(assert (=> b!84667 m!88643))

(assert (=> b!83371 d!21741))

(declare-fun d!21743 () Bool)

(assert (=> d!21743 (= (inRange!0 (index!3081 lt!39156) (mask!6334 newMap!16)) (and (bvsge (index!3081 lt!39156) #b00000000000000000000000000000000) (bvslt (index!3081 lt!39156) (bvadd (mask!6334 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!83278 d!21743))

(declare-fun d!21745 () Bool)

(assert (=> d!21745 (= (apply!81 lt!39451 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)) (get!1201 (getValueByKey!140 (toList!734 lt!39451) (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3583 () Bool)

(assert (= bs!3583 d!21745))

(assert (=> bs!3583 m!86211))

(assert (=> bs!3583 m!87645))

(assert (=> bs!3583 m!87645))

(declare-fun m!88645 () Bool)

(assert (=> bs!3583 m!88645))

(assert (=> b!83645 d!21745))

(declare-fun d!21747 () Bool)

(declare-fun c!13681 () Bool)

(assert (=> d!21747 (= c!13681 ((_ is ValueCellFull!920) (select (arr!1905 (ite (or c!13224 c!13217) (_values!2299 newMap!16) (array!4000 (store (arr!1905 (_values!2299 newMap!16)) (index!3081 lt!38961) (ValueCellFull!920 lt!38784)) (size!2148 (_values!2299 newMap!16))))) #b00000000000000000000000000000000)))))

(declare-fun e!55201 () V!3017)

(assert (=> d!21747 (= (get!1198 (select (arr!1905 (ite (or c!13224 c!13217) (_values!2299 newMap!16) (array!4000 (store (arr!1905 (_values!2299 newMap!16)) (index!3081 lt!38961) (ValueCellFull!920 lt!38784)) (size!2148 (_values!2299 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!343 (defaultEntry!2316 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!55201)))

(declare-fun b!84668 () Bool)

(assert (=> b!84668 (= e!55201 (get!1199 (select (arr!1905 (ite (or c!13224 c!13217) (_values!2299 newMap!16) (array!4000 (store (arr!1905 (_values!2299 newMap!16)) (index!3081 lt!38961) (ValueCellFull!920 lt!38784)) (size!2148 (_values!2299 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!343 (defaultEntry!2316 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!84669 () Bool)

(assert (=> b!84669 (= e!55201 (get!1200 (select (arr!1905 (ite (or c!13224 c!13217) (_values!2299 newMap!16) (array!4000 (store (arr!1905 (_values!2299 newMap!16)) (index!3081 lt!38961) (ValueCellFull!920 lt!38784)) (size!2148 (_values!2299 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!343 (defaultEntry!2316 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!21747 c!13681) b!84668))

(assert (= (and d!21747 (not c!13681)) b!84669))

(assert (=> b!84668 m!86923))

(assert (=> b!84668 m!86219))

(declare-fun m!88647 () Bool)

(assert (=> b!84668 m!88647))

(assert (=> b!84669 m!86923))

(assert (=> b!84669 m!86219))

(declare-fun m!88649 () Bool)

(assert (=> b!84669 m!88649))

(assert (=> b!83645 d!21747))

(declare-fun d!21749 () Bool)

(assert (=> d!21749 (= ($colon$colon!70 e!54417 (ite c!13298 (h!2090 (toList!734 lt!38771)) (tuple2!2183 (_1!1102 lt!38772) (_2!1102 lt!38772)))) (Cons!1500 (ite c!13298 (h!2090 (toList!734 lt!38771)) (tuple2!2183 (_1!1102 lt!38772) (_2!1102 lt!38772))) e!54417))))

(assert (=> bm!7816 d!21749))

(declare-fun d!21751 () Bool)

(declare-fun res!43670 () Bool)

(declare-fun e!55202 () Bool)

(assert (=> d!21751 (=> res!43670 e!55202)))

(assert (=> d!21751 (= res!43670 (or ((_ is Nil!1501) lt!39508) ((_ is Nil!1501) (t!5196 lt!39508))))))

(assert (=> d!21751 (= (isStrictlySorted!284 lt!39508) e!55202)))

(declare-fun b!84670 () Bool)

(declare-fun e!55203 () Bool)

(assert (=> b!84670 (= e!55202 e!55203)))

(declare-fun res!43671 () Bool)

(assert (=> b!84670 (=> (not res!43671) (not e!55203))))

(assert (=> b!84670 (= res!43671 (bvslt (_1!1102 (h!2090 lt!39508)) (_1!1102 (h!2090 (t!5196 lt!39508)))))))

(declare-fun b!84671 () Bool)

(assert (=> b!84671 (= e!55203 (isStrictlySorted!284 (t!5196 lt!39508)))))

(assert (= (and d!21751 (not res!43670)) b!84670))

(assert (= (and b!84670 res!43671) b!84671))

(declare-fun m!88651 () Bool)

(assert (=> b!84671 m!88651))

(assert (=> d!21183 d!21751))

(assert (=> d!21183 d!21597))

(declare-fun lt!39896 () Bool)

(declare-fun d!21753 () Bool)

(assert (=> d!21753 (= lt!39896 (select (content!89 (toList!734 lt!39186)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))

(declare-fun e!55204 () Bool)

(assert (=> d!21753 (= lt!39896 e!55204)))

(declare-fun res!43673 () Bool)

(assert (=> d!21753 (=> (not res!43673) (not e!55204))))

(assert (=> d!21753 (= res!43673 ((_ is Cons!1500) (toList!734 lt!39186)))))

(assert (=> d!21753 (= (contains!746 (toList!734 lt!39186) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) lt!39896)))

(declare-fun b!84672 () Bool)

(declare-fun e!55205 () Bool)

(assert (=> b!84672 (= e!55204 e!55205)))

(declare-fun res!43672 () Bool)

(assert (=> b!84672 (=> res!43672 e!55205)))

(assert (=> b!84672 (= res!43672 (= (h!2090 (toList!734 lt!39186)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))

(declare-fun b!84673 () Bool)

(assert (=> b!84673 (= e!55205 (contains!746 (t!5196 (toList!734 lt!39186)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))

(assert (= (and d!21753 res!43673) b!84672))

(assert (= (and b!84672 (not res!43672)) b!84673))

(declare-fun m!88653 () Bool)

(assert (=> d!21753 m!88653))

(declare-fun m!88655 () Bool)

(assert (=> d!21753 m!88655))

(declare-fun m!88657 () Bool)

(assert (=> b!84673 m!88657))

(assert (=> b!83328 d!21753))

(declare-fun b!84676 () Bool)

(declare-fun e!55207 () Option!146)

(assert (=> b!84676 (= e!55207 (getValueByKey!140 (t!5196 (t!5196 (toList!734 lt!39049))) (_1!1102 lt!38772)))))

(declare-fun d!21755 () Bool)

(declare-fun c!13682 () Bool)

(assert (=> d!21755 (= c!13682 (and ((_ is Cons!1500) (t!5196 (toList!734 lt!39049))) (= (_1!1102 (h!2090 (t!5196 (toList!734 lt!39049)))) (_1!1102 lt!38772))))))

(declare-fun e!55206 () Option!146)

(assert (=> d!21755 (= (getValueByKey!140 (t!5196 (toList!734 lt!39049)) (_1!1102 lt!38772)) e!55206)))

(declare-fun b!84674 () Bool)

(assert (=> b!84674 (= e!55206 (Some!145 (_2!1102 (h!2090 (t!5196 (toList!734 lt!39049))))))))

(declare-fun b!84675 () Bool)

(assert (=> b!84675 (= e!55206 e!55207)))

(declare-fun c!13683 () Bool)

(assert (=> b!84675 (= c!13683 (and ((_ is Cons!1500) (t!5196 (toList!734 lt!39049))) (not (= (_1!1102 (h!2090 (t!5196 (toList!734 lt!39049)))) (_1!1102 lt!38772)))))))

(declare-fun b!84677 () Bool)

(assert (=> b!84677 (= e!55207 None!144)))

(assert (= (and d!21755 c!13682) b!84674))

(assert (= (and d!21755 (not c!13682)) b!84675))

(assert (= (and b!84675 c!13683) b!84676))

(assert (= (and b!84675 (not c!13683)) b!84677))

(declare-fun m!88659 () Bool)

(assert (=> b!84676 m!88659))

(assert (=> b!83405 d!21755))

(declare-fun d!21757 () Bool)

(assert (=> d!21757 (isDefined!92 (getValueByKey!140 (toList!734 lt!39008) (_1!1102 lt!38775)))))

(declare-fun lt!39897 () Unit!2413)

(assert (=> d!21757 (= lt!39897 (choose!502 (toList!734 lt!39008) (_1!1102 lt!38775)))))

(declare-fun e!55208 () Bool)

(assert (=> d!21757 e!55208))

(declare-fun res!43674 () Bool)

(assert (=> d!21757 (=> (not res!43674) (not e!55208))))

(assert (=> d!21757 (= res!43674 (isStrictlySorted!284 (toList!734 lt!39008)))))

(assert (=> d!21757 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 lt!39008) (_1!1102 lt!38775)) lt!39897)))

(declare-fun b!84678 () Bool)

(assert (=> b!84678 (= e!55208 (containsKey!143 (toList!734 lt!39008) (_1!1102 lt!38775)))))

(assert (= (and d!21757 res!43674) b!84678))

(assert (=> d!21757 m!86021))

(assert (=> d!21757 m!86021))

(assert (=> d!21757 m!86461))

(declare-fun m!88661 () Bool)

(assert (=> d!21757 m!88661))

(declare-fun m!88663 () Bool)

(assert (=> d!21757 m!88663))

(assert (=> b!84678 m!86457))

(assert (=> b!83409 d!21757))

(declare-fun d!21759 () Bool)

(assert (=> d!21759 (= (isDefined!92 (getValueByKey!140 (toList!734 lt!39008) (_1!1102 lt!38775))) (not (isEmpty!340 (getValueByKey!140 (toList!734 lt!39008) (_1!1102 lt!38775)))))))

(declare-fun bs!3584 () Bool)

(assert (= bs!3584 d!21759))

(assert (=> bs!3584 m!86021))

(declare-fun m!88665 () Bool)

(assert (=> bs!3584 m!88665))

(assert (=> b!83409 d!21759))

(assert (=> b!83409 d!20951))

(declare-fun d!21761 () Bool)

(assert (=> d!21761 (arrayContainsKey!0 (_keys!3984 newMap!16) lt!39166 #b00000000000000000000000000000000)))

(declare-fun lt!39900 () Unit!2413)

(declare-fun choose!13 (array!3997 (_ BitVec 64) (_ BitVec 32)) Unit!2413)

(assert (=> d!21761 (= lt!39900 (choose!13 (_keys!3984 newMap!16) lt!39166 #b00000000000000000000000000000000))))

(assert (=> d!21761 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!21761 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3984 newMap!16) lt!39166 #b00000000000000000000000000000000) lt!39900)))

(declare-fun bs!3585 () Bool)

(assert (= bs!3585 d!21761))

(assert (=> bs!3585 m!86293))

(declare-fun m!88667 () Bool)

(assert (=> bs!3585 m!88667))

(assert (=> b!83291 d!21761))

(declare-fun d!21763 () Bool)

(declare-fun res!43675 () Bool)

(declare-fun e!55209 () Bool)

(assert (=> d!21763 (=> res!43675 e!55209)))

(assert (=> d!21763 (= res!43675 (= (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000) lt!39166))))

(assert (=> d!21763 (= (arrayContainsKey!0 (_keys!3984 newMap!16) lt!39166 #b00000000000000000000000000000000) e!55209)))

(declare-fun b!84679 () Bool)

(declare-fun e!55210 () Bool)

(assert (=> b!84679 (= e!55209 e!55210)))

(declare-fun res!43676 () Bool)

(assert (=> b!84679 (=> (not res!43676) (not e!55210))))

(assert (=> b!84679 (= res!43676 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2147 (_keys!3984 newMap!16))))))

(declare-fun b!84680 () Bool)

(assert (=> b!84680 (= e!55210 (arrayContainsKey!0 (_keys!3984 newMap!16) lt!39166 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!21763 (not res!43675)) b!84679))

(assert (= (and b!84679 res!43676) b!84680))

(assert (=> d!21763 m!86211))

(declare-fun m!88669 () Bool)

(assert (=> b!84680 m!88669))

(assert (=> b!83291 d!21763))

(declare-fun b!84681 () Bool)

(declare-fun e!55213 () SeekEntryResult!236)

(declare-fun lt!39901 () SeekEntryResult!236)

(assert (=> b!84681 (= e!55213 (MissingZero!236 (index!3082 lt!39901)))))

(declare-fun b!84682 () Bool)

(declare-fun c!13684 () Bool)

(declare-fun lt!39903 () (_ BitVec 64))

(assert (=> b!84682 (= c!13684 (= lt!39903 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!55211 () SeekEntryResult!236)

(assert (=> b!84682 (= e!55211 e!55213)))

(declare-fun b!84683 () Bool)

(assert (=> b!84683 (= e!55213 (seekKeyOrZeroReturnVacant!0 (x!11845 lt!39901) (index!3082 lt!39901) (index!3082 lt!39901) (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000) (_keys!3984 newMap!16) (mask!6334 newMap!16)))))

(declare-fun b!84685 () Bool)

(declare-fun e!55212 () SeekEntryResult!236)

(assert (=> b!84685 (= e!55212 e!55211)))

(assert (=> b!84685 (= lt!39903 (select (arr!1904 (_keys!3984 newMap!16)) (index!3082 lt!39901)))))

(declare-fun c!13686 () Bool)

(assert (=> b!84685 (= c!13686 (= lt!39903 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!84686 () Bool)

(assert (=> b!84686 (= e!55211 (Found!236 (index!3082 lt!39901)))))

(declare-fun d!21765 () Bool)

(declare-fun lt!39902 () SeekEntryResult!236)

(assert (=> d!21765 (and (or ((_ is Undefined!236) lt!39902) (not ((_ is Found!236) lt!39902)) (and (bvsge (index!3081 lt!39902) #b00000000000000000000000000000000) (bvslt (index!3081 lt!39902) (size!2147 (_keys!3984 newMap!16))))) (or ((_ is Undefined!236) lt!39902) ((_ is Found!236) lt!39902) (not ((_ is MissingZero!236) lt!39902)) (and (bvsge (index!3080 lt!39902) #b00000000000000000000000000000000) (bvslt (index!3080 lt!39902) (size!2147 (_keys!3984 newMap!16))))) (or ((_ is Undefined!236) lt!39902) ((_ is Found!236) lt!39902) ((_ is MissingZero!236) lt!39902) (not ((_ is MissingVacant!236) lt!39902)) (and (bvsge (index!3083 lt!39902) #b00000000000000000000000000000000) (bvslt (index!3083 lt!39902) (size!2147 (_keys!3984 newMap!16))))) (or ((_ is Undefined!236) lt!39902) (ite ((_ is Found!236) lt!39902) (= (select (arr!1904 (_keys!3984 newMap!16)) (index!3081 lt!39902)) (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!236) lt!39902) (= (select (arr!1904 (_keys!3984 newMap!16)) (index!3080 lt!39902)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!236) lt!39902) (= (select (arr!1904 (_keys!3984 newMap!16)) (index!3083 lt!39902)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!21765 (= lt!39902 e!55212)))

(declare-fun c!13685 () Bool)

(assert (=> d!21765 (= c!13685 (and ((_ is Intermediate!236) lt!39901) (undefined!1048 lt!39901)))))

(assert (=> d!21765 (= lt!39901 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000) (mask!6334 newMap!16)) (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000) (_keys!3984 newMap!16) (mask!6334 newMap!16)))))

(assert (=> d!21765 (validMask!0 (mask!6334 newMap!16))))

(assert (=> d!21765 (= (seekEntryOrOpen!0 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000) (_keys!3984 newMap!16) (mask!6334 newMap!16)) lt!39902)))

(declare-fun b!84684 () Bool)

(assert (=> b!84684 (= e!55212 Undefined!236)))

(assert (= (and d!21765 c!13685) b!84684))

(assert (= (and d!21765 (not c!13685)) b!84685))

(assert (= (and b!84685 c!13686) b!84686))

(assert (= (and b!84685 (not c!13686)) b!84682))

(assert (= (and b!84682 c!13684) b!84681))

(assert (= (and b!84682 (not c!13684)) b!84683))

(assert (=> b!84683 m!86211))

(declare-fun m!88671 () Bool)

(assert (=> b!84683 m!88671))

(declare-fun m!88673 () Bool)

(assert (=> b!84685 m!88673))

(declare-fun m!88675 () Bool)

(assert (=> d!21765 m!88675))

(declare-fun m!88677 () Bool)

(assert (=> d!21765 m!88677))

(assert (=> d!21765 m!86211))

(declare-fun m!88679 () Bool)

(assert (=> d!21765 m!88679))

(assert (=> d!21765 m!86223))

(declare-fun m!88681 () Bool)

(assert (=> d!21765 m!88681))

(assert (=> d!21765 m!88679))

(assert (=> d!21765 m!86211))

(declare-fun m!88683 () Bool)

(assert (=> d!21765 m!88683))

(assert (=> b!83291 d!21765))

(declare-fun d!21767 () Bool)

(declare-fun e!55214 () Bool)

(assert (=> d!21767 e!55214))

(declare-fun res!43677 () Bool)

(assert (=> d!21767 (=> (not res!43677) (not e!55214))))

(assert (=> d!21767 (= res!43677 (and (bvsge (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) #b00000000000000000000000000000000) (bvslt (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (size!2147 lt!39416))))))

(declare-fun lt!39904 () Unit!2413)

(assert (=> d!21767 (= lt!39904 (choose!499 lt!39416 lt!39395 (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (defaultEntry!2316 newMap!16)))))

(assert (=> d!21767 (validMask!0 (mask!6334 newMap!16))))

(assert (=> d!21767 (= (lemmaValidKeyInArrayIsInListMap!90 lt!39416 lt!39395 (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (defaultEntry!2316 newMap!16)) lt!39904)))

(declare-fun b!84687 () Bool)

(assert (=> b!84687 (= e!55214 (contains!744 (getCurrentListMap!429 lt!39416 lt!39395 (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) (select (arr!1904 lt!39416) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)))))))

(assert (= (and d!21767 res!43677) b!84687))

(declare-fun m!88685 () Bool)

(assert (=> d!21767 m!88685))

(assert (=> d!21767 m!86223))

(assert (=> b!84687 m!86819))

(declare-fun m!88687 () Bool)

(assert (=> b!84687 m!88687))

(assert (=> b!84687 m!86819))

(assert (=> b!84687 m!88687))

(declare-fun m!88689 () Bool)

(assert (=> b!84687 m!88689))

(assert (=> d!21111 d!21767))

(declare-fun b!84688 () Bool)

(declare-fun e!55215 () (_ BitVec 32))

(declare-fun call!7978 () (_ BitVec 32))

(assert (=> b!84688 (= e!55215 call!7978)))

(declare-fun b!84689 () Bool)

(declare-fun e!55216 () (_ BitVec 32))

(assert (=> b!84689 (= e!55216 #b00000000000000000000000000000000)))

(declare-fun b!84690 () Bool)

(assert (=> b!84690 (= e!55216 e!55215)))

(declare-fun c!13687 () Bool)

(assert (=> b!84690 (= c!13687 (validKeyInArray!0 (select (arr!1904 lt!39419) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)))))))

(declare-fun bm!7975 () Bool)

(assert (=> bm!7975 (= call!7978 (arrayCountValidKeys!0 lt!39419 (bvadd (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) #b00000000000000000000000000000001) (bvadd (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) #b00000000000000000000000000000001)))))

(declare-fun lt!39905 () (_ BitVec 32))

(declare-fun d!21769 () Bool)

(assert (=> d!21769 (and (bvsge lt!39905 #b00000000000000000000000000000000) (bvsle lt!39905 (bvsub (size!2147 lt!39419) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)))))))

(assert (=> d!21769 (= lt!39905 e!55216)))

(declare-fun c!13688 () Bool)

(assert (=> d!21769 (= c!13688 (bvsge (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (bvadd (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) #b00000000000000000000000000000001)))))

(assert (=> d!21769 (and (bvsle (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (bvadd (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) #b00000000000000000000000000000001)) (bvsge (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) #b00000000000000000000000000000001) (size!2147 lt!39419)))))

(assert (=> d!21769 (= (arrayCountValidKeys!0 lt!39419 (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (bvadd (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) #b00000000000000000000000000000001)) lt!39905)))

(declare-fun b!84691 () Bool)

(assert (=> b!84691 (= e!55215 (bvadd #b00000000000000000000000000000001 call!7978))))

(assert (= (and d!21769 c!13688) b!84689))

(assert (= (and d!21769 (not c!13688)) b!84690))

(assert (= (and b!84690 c!13687) b!84691))

(assert (= (and b!84690 (not c!13687)) b!84688))

(assert (= (or b!84691 b!84688) bm!7975))

(declare-fun m!88691 () Bool)

(assert (=> b!84690 m!88691))

(assert (=> b!84690 m!88691))

(declare-fun m!88693 () Bool)

(assert (=> b!84690 m!88693))

(declare-fun m!88695 () Bool)

(assert (=> bm!7975 m!88695))

(assert (=> d!21111 d!21769))

(declare-fun d!21771 () Bool)

(declare-fun e!55219 () Bool)

(assert (=> d!21771 e!55219))

(declare-fun res!43680 () Bool)

(assert (=> d!21771 (=> (not res!43680) (not e!55219))))

(assert (=> d!21771 (= res!43680 (and (bvsge (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) #b00000000000000000000000000000000) (bvslt (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (size!2147 (_keys!3984 newMap!16))) (bvslt (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (size!2148 (_values!2299 newMap!16)))))))

(declare-fun lt!39908 () Unit!2413)

(declare-fun choose!503 (array!3997 array!3999 (_ BitVec 32) (_ BitVec 32) V!3017 V!3017 (_ BitVec 32) (_ BitVec 64) V!3017 Int) Unit!2413)

(assert (=> d!21771 (= lt!39908 (choose!503 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784 (defaultEntry!2316 newMap!16)))))

(assert (=> d!21771 (validMask!0 (mask!6334 newMap!16))))

(assert (=> d!21771 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!18 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784 (defaultEntry!2316 newMap!16)) lt!39908)))

(declare-fun b!84694 () Bool)

(assert (=> b!84694 (= e!55219 (= (+!105 (getCurrentListMap!429 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) (getCurrentListMap!429 (array!3998 (store (arr!1904 (_keys!3984 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) (size!2147 (_keys!3984 newMap!16))) (array!4000 (store (arr!1905 (_values!2299 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (ValueCellFull!920 lt!38784)) (size!2148 (_values!2299 newMap!16))) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16))))))

(assert (= (and d!21771 res!43680) b!84694))

(assert (=> d!21771 m!85721))

(declare-fun m!88697 () Bool)

(assert (=> d!21771 m!88697))

(assert (=> d!21771 m!86223))

(assert (=> b!84694 m!85945))

(assert (=> b!84694 m!85945))

(assert (=> b!84694 m!86811))

(assert (=> b!84694 m!86841))

(assert (=> b!84694 m!86827))

(assert (=> b!84694 m!86817))

(assert (=> d!21111 d!21771))

(declare-fun d!21773 () Bool)

(assert (=> d!21773 (= (arrayCountValidKeys!0 lt!39419 (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (bvadd (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!39911 () Unit!2413)

(declare-fun choose!2 (array!3997 (_ BitVec 32)) Unit!2413)

(assert (=> d!21773 (= lt!39911 (choose!2 lt!39419 (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961))))))

(declare-fun e!55222 () Bool)

(assert (=> d!21773 e!55222))

(declare-fun res!43685 () Bool)

(assert (=> d!21773 (=> (not res!43685) (not e!55222))))

(assert (=> d!21773 (= res!43685 (and (bvsge (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) #b00000000000000000000000000000000) (bvslt (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (size!2147 lt!39419))))))

(assert (=> d!21773 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!39419 (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961))) lt!39911)))

(declare-fun b!84699 () Bool)

(declare-fun res!43686 () Bool)

(assert (=> b!84699 (=> (not res!43686) (not e!55222))))

(assert (=> b!84699 (= res!43686 (validKeyInArray!0 (select (arr!1904 lt!39419) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)))))))

(declare-fun b!84700 () Bool)

(assert (=> b!84700 (= e!55222 (bvslt (size!2147 lt!39419) #b01111111111111111111111111111111))))

(assert (= (and d!21773 res!43685) b!84699))

(assert (= (and b!84699 res!43686) b!84700))

(assert (=> d!21773 m!86845))

(declare-fun m!88699 () Bool)

(assert (=> d!21773 m!88699))

(assert (=> b!84699 m!88691))

(assert (=> b!84699 m!88691))

(assert (=> b!84699 m!88693))

(assert (=> d!21111 d!21773))

(assert (=> d!21111 d!20897))

(assert (=> d!21111 d!21113))

(declare-fun d!21775 () Bool)

(declare-fun e!55225 () Bool)

(assert (=> d!21775 e!55225))

(declare-fun res!43689 () Bool)

(assert (=> d!21775 (=> (not res!43689) (not e!55225))))

(assert (=> d!21775 (= res!43689 (and (bvsge (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) #b00000000000000000000000000000000) (bvslt (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (size!2147 (_keys!3984 newMap!16)))))))

(declare-fun lt!39914 () Unit!2413)

(declare-fun choose!41 (array!3997 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1505) Unit!2413)

(assert (=> d!21775 (= lt!39914 (choose!41 (_keys!3984 newMap!16) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) lt!39412 lt!39396))))

(assert (=> d!21775 (bvslt (size!2147 (_keys!3984 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!21775 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3984 newMap!16) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) lt!39412 lt!39396) lt!39914)))

(declare-fun b!84703 () Bool)

(assert (=> b!84703 (= e!55225 (arrayNoDuplicates!0 (array!3998 (store (arr!1904 (_keys!3984 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) (size!2147 (_keys!3984 newMap!16))) lt!39412 lt!39396))))

(assert (= (and d!21775 res!43689) b!84703))

(assert (=> d!21775 m!85721))

(declare-fun m!88701 () Bool)

(assert (=> d!21775 m!88701))

(assert (=> b!84703 m!86817))

(assert (=> b!84703 m!86839))

(assert (=> d!21111 d!21775))

(declare-fun d!21777 () Bool)

(declare-fun e!55228 () Bool)

(assert (=> d!21777 e!55228))

(declare-fun res!43692 () Bool)

(assert (=> d!21777 (=> (not res!43692) (not e!55228))))

(assert (=> d!21777 (= res!43692 (and (bvsge (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) #b00000000000000000000000000000000) (bvslt (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (size!2147 (_keys!3984 newMap!16)))))))

(declare-fun lt!39917 () Unit!2413)

(declare-fun choose!102 ((_ BitVec 64) array!3997 (_ BitVec 32) (_ BitVec 32)) Unit!2413)

(assert (=> d!21777 (= lt!39917 (choose!102 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (_keys!3984 newMap!16) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (mask!6334 newMap!16)))))

(assert (=> d!21777 (validMask!0 (mask!6334 newMap!16))))

(assert (=> d!21777 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (_keys!3984 newMap!16) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (mask!6334 newMap!16)) lt!39917)))

(declare-fun b!84706 () Bool)

(assert (=> b!84706 (= e!55228 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3998 (store (arr!1904 (_keys!3984 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) (size!2147 (_keys!3984 newMap!16))) (mask!6334 newMap!16)))))

(assert (= (and d!21777 res!43692) b!84706))

(assert (=> d!21777 m!85721))

(declare-fun m!88703 () Bool)

(assert (=> d!21777 m!88703))

(assert (=> d!21777 m!86223))

(assert (=> b!84706 m!86817))

(assert (=> b!84706 m!86835))

(assert (=> d!21111 d!21777))

(declare-fun b!84707 () Bool)

(declare-fun e!55232 () Bool)

(declare-fun call!7979 () Bool)

(assert (=> b!84707 (= e!55232 call!7979)))

(declare-fun b!84708 () Bool)

(assert (=> b!84708 (= e!55232 call!7979)))

(declare-fun b!84709 () Bool)

(declare-fun e!55231 () Bool)

(declare-fun e!55230 () Bool)

(assert (=> b!84709 (= e!55231 e!55230)))

(declare-fun res!43694 () Bool)

(assert (=> b!84709 (=> (not res!43694) (not e!55230))))

(declare-fun e!55229 () Bool)

(assert (=> b!84709 (= res!43694 (not e!55229))))

(declare-fun res!43693 () Bool)

(assert (=> b!84709 (=> (not res!43693) (not e!55229))))

(assert (=> b!84709 (= res!43693 (validKeyInArray!0 (select (arr!1904 (array!3998 (store (arr!1904 (_keys!3984 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) (size!2147 (_keys!3984 newMap!16)))) lt!39412)))))

(declare-fun d!21779 () Bool)

(declare-fun res!43695 () Bool)

(assert (=> d!21779 (=> res!43695 e!55231)))

(assert (=> d!21779 (= res!43695 (bvsge lt!39412 (size!2147 (array!3998 (store (arr!1904 (_keys!3984 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) (size!2147 (_keys!3984 newMap!16))))))))

(assert (=> d!21779 (= (arrayNoDuplicates!0 (array!3998 (store (arr!1904 (_keys!3984 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) (size!2147 (_keys!3984 newMap!16))) lt!39412 lt!39396) e!55231)))

(declare-fun b!84710 () Bool)

(assert (=> b!84710 (= e!55229 (contains!745 lt!39396 (select (arr!1904 (array!3998 (store (arr!1904 (_keys!3984 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) (size!2147 (_keys!3984 newMap!16)))) lt!39412)))))

(declare-fun b!84711 () Bool)

(assert (=> b!84711 (= e!55230 e!55232)))

(declare-fun c!13689 () Bool)

(assert (=> b!84711 (= c!13689 (validKeyInArray!0 (select (arr!1904 (array!3998 (store (arr!1904 (_keys!3984 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) (size!2147 (_keys!3984 newMap!16)))) lt!39412)))))

(declare-fun bm!7976 () Bool)

(assert (=> bm!7976 (= call!7979 (arrayNoDuplicates!0 (array!3998 (store (arr!1904 (_keys!3984 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) (size!2147 (_keys!3984 newMap!16))) (bvadd lt!39412 #b00000000000000000000000000000001) (ite c!13689 (Cons!1501 (select (arr!1904 (array!3998 (store (arr!1904 (_keys!3984 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) (size!2147 (_keys!3984 newMap!16)))) lt!39412) lt!39396) lt!39396)))))

(assert (= (and d!21779 (not res!43695)) b!84709))

(assert (= (and b!84709 res!43693) b!84710))

(assert (= (and b!84709 res!43694) b!84711))

(assert (= (and b!84711 c!13689) b!84708))

(assert (= (and b!84711 (not c!13689)) b!84707))

(assert (= (or b!84708 b!84707) bm!7976))

(declare-fun m!88705 () Bool)

(assert (=> b!84709 m!88705))

(assert (=> b!84709 m!88705))

(declare-fun m!88707 () Bool)

(assert (=> b!84709 m!88707))

(assert (=> b!84710 m!88705))

(assert (=> b!84710 m!88705))

(declare-fun m!88709 () Bool)

(assert (=> b!84710 m!88709))

(assert (=> b!84711 m!88705))

(assert (=> b!84711 m!88705))

(assert (=> b!84711 m!88707))

(assert (=> bm!7976 m!88705))

(declare-fun m!88711 () Bool)

(assert (=> bm!7976 m!88711))

(assert (=> d!21111 d!21779))

(declare-fun d!21781 () Bool)

(declare-fun e!55234 () Bool)

(assert (=> d!21781 e!55234))

(declare-fun res!43696 () Bool)

(assert (=> d!21781 (=> res!43696 e!55234)))

(declare-fun lt!39918 () Bool)

(assert (=> d!21781 (= res!43696 (not lt!39918))))

(declare-fun lt!39921 () Bool)

(assert (=> d!21781 (= lt!39918 lt!39921)))

(declare-fun lt!39920 () Unit!2413)

(declare-fun e!55233 () Unit!2413)

(assert (=> d!21781 (= lt!39920 e!55233)))

(declare-fun c!13690 () Bool)

(assert (=> d!21781 (= c!13690 lt!39921)))

(assert (=> d!21781 (= lt!39921 (containsKey!143 (toList!734 (getCurrentListMap!429 lt!39416 lt!39395 (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16))) (select (store (arr!1904 (_keys!3984 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)))))))

(assert (=> d!21781 (= (contains!744 (getCurrentListMap!429 lt!39416 lt!39395 (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) (select (store (arr!1904 (_keys!3984 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)))) lt!39918)))

(declare-fun b!84712 () Bool)

(declare-fun lt!39919 () Unit!2413)

(assert (=> b!84712 (= e!55233 lt!39919)))

(assert (=> b!84712 (= lt!39919 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 (getCurrentListMap!429 lt!39416 lt!39395 (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16))) (select (store (arr!1904 (_keys!3984 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)))))))

(assert (=> b!84712 (isDefined!92 (getValueByKey!140 (toList!734 (getCurrentListMap!429 lt!39416 lt!39395 (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16))) (select (store (arr!1904 (_keys!3984 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)))))))

(declare-fun b!84713 () Bool)

(declare-fun Unit!2479 () Unit!2413)

(assert (=> b!84713 (= e!55233 Unit!2479)))

(declare-fun b!84714 () Bool)

(assert (=> b!84714 (= e!55234 (isDefined!92 (getValueByKey!140 (toList!734 (getCurrentListMap!429 lt!39416 lt!39395 (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16))) (select (store (arr!1904 (_keys!3984 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961))))))))

(assert (= (and d!21781 c!13690) b!84712))

(assert (= (and d!21781 (not c!13690)) b!84713))

(assert (= (and d!21781 (not res!43696)) b!84714))

(assert (=> d!21781 m!86821))

(declare-fun m!88713 () Bool)

(assert (=> d!21781 m!88713))

(assert (=> b!84712 m!86821))

(declare-fun m!88715 () Bool)

(assert (=> b!84712 m!88715))

(assert (=> b!84712 m!86821))

(declare-fun m!88717 () Bool)

(assert (=> b!84712 m!88717))

(assert (=> b!84712 m!88717))

(declare-fun m!88719 () Bool)

(assert (=> b!84712 m!88719))

(assert (=> b!84714 m!86821))

(assert (=> b!84714 m!88717))

(assert (=> b!84714 m!88717))

(assert (=> b!84714 m!88719))

(assert (=> d!21111 d!21781))

(assert (=> d!21111 d!21297))

(declare-fun d!21783 () Bool)

(assert (=> d!21783 (arrayContainsKey!0 lt!39404 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!39922 () Unit!2413)

(assert (=> d!21783 (= lt!39922 (choose!13 lt!39404 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961))))))

(assert (=> d!21783 (bvsge (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) #b00000000000000000000000000000000)))

(assert (=> d!21783 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!39404 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961))) lt!39922)))

(declare-fun bs!3586 () Bool)

(assert (= bs!3586 d!21783))

(assert (=> bs!3586 m!85721))

(assert (=> bs!3586 m!86837))

(assert (=> bs!3586 m!85721))

(declare-fun m!88721 () Bool)

(assert (=> bs!3586 m!88721))

(assert (=> d!21111 d!21783))

(assert (=> d!21111 d!21171))

(declare-fun b!84715 () Bool)

(declare-fun e!55235 () (_ BitVec 32))

(declare-fun call!7980 () (_ BitVec 32))

(assert (=> b!84715 (= e!55235 call!7980)))

(declare-fun b!84716 () Bool)

(declare-fun e!55236 () (_ BitVec 32))

(assert (=> b!84716 (= e!55236 #b00000000000000000000000000000000)))

(declare-fun b!84717 () Bool)

(assert (=> b!84717 (= e!55236 e!55235)))

(declare-fun c!13691 () Bool)

(assert (=> b!84717 (= c!13691 (validKeyInArray!0 (select (arr!1904 (array!3998 (store (arr!1904 (_keys!3984 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) (size!2147 (_keys!3984 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun bm!7977 () Bool)

(assert (=> bm!7977 (= call!7980 (arrayCountValidKeys!0 (array!3998 (store (arr!1904 (_keys!3984 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) (size!2147 (_keys!3984 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2147 (_keys!3984 newMap!16))))))

(declare-fun lt!39923 () (_ BitVec 32))

(declare-fun d!21785 () Bool)

(assert (=> d!21785 (and (bvsge lt!39923 #b00000000000000000000000000000000) (bvsle lt!39923 (bvsub (size!2147 (array!3998 (store (arr!1904 (_keys!3984 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) (size!2147 (_keys!3984 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> d!21785 (= lt!39923 e!55236)))

(declare-fun c!13692 () Bool)

(assert (=> d!21785 (= c!13692 (bvsge #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))))))

(assert (=> d!21785 (and (bvsle #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2147 (_keys!3984 newMap!16)) (size!2147 (array!3998 (store (arr!1904 (_keys!3984 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) (size!2147 (_keys!3984 newMap!16))))))))

(assert (=> d!21785 (= (arrayCountValidKeys!0 (array!3998 (store (arr!1904 (_keys!3984 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) (size!2147 (_keys!3984 newMap!16))) #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))) lt!39923)))

(declare-fun b!84718 () Bool)

(assert (=> b!84718 (= e!55235 (bvadd #b00000000000000000000000000000001 call!7980))))

(assert (= (and d!21785 c!13692) b!84716))

(assert (= (and d!21785 (not c!13692)) b!84717))

(assert (= (and b!84717 c!13691) b!84718))

(assert (= (and b!84717 (not c!13691)) b!84715))

(assert (= (or b!84718 b!84715) bm!7977))

(declare-fun m!88723 () Bool)

(assert (=> b!84717 m!88723))

(assert (=> b!84717 m!88723))

(declare-fun m!88725 () Bool)

(assert (=> b!84717 m!88725))

(declare-fun m!88727 () Bool)

(assert (=> bm!7977 m!88727))

(assert (=> d!21111 d!21785))

(assert (=> d!21111 d!20959))

(declare-fun b!84719 () Bool)

(declare-fun e!55244 () Unit!2413)

(declare-fun Unit!2480 () Unit!2413)

(assert (=> b!84719 (= e!55244 Unit!2480)))

(declare-fun b!84720 () Bool)

(declare-fun e!55249 () Bool)

(declare-fun e!55237 () Bool)

(assert (=> b!84720 (= e!55249 e!55237)))

(declare-fun c!13697 () Bool)

(assert (=> b!84720 (= c!13697 (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun c!13693 () Bool)

(declare-fun call!7982 () ListLongMap!1437)

(declare-fun call!7983 () ListLongMap!1437)

(declare-fun c!13698 () Bool)

(declare-fun call!7987 () ListLongMap!1437)

(declare-fun bm!7978 () Bool)

(declare-fun call!7984 () ListLongMap!1437)

(assert (=> bm!7978 (= call!7984 (+!105 (ite c!13698 call!7987 (ite c!13693 call!7982 call!7983)) (ite (or c!13698 c!13693) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16)))))))

(declare-fun bm!7979 () Bool)

(declare-fun call!7986 () Bool)

(declare-fun lt!39937 () ListLongMap!1437)

(assert (=> bm!7979 (= call!7986 (contains!744 lt!39937 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!55245 () Bool)

(declare-fun b!84721 () Bool)

(assert (=> b!84721 (= e!55245 (= (apply!81 lt!39937 (select (arr!1904 lt!39416) #b00000000000000000000000000000000)) (get!1198 (select (arr!1905 lt!39395) #b00000000000000000000000000000000) (dynLambda!343 (defaultEntry!2316 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!84721 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2148 lt!39395)))))

(assert (=> b!84721 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2147 lt!39416)))))

(declare-fun b!84722 () Bool)

(declare-fun call!7985 () Bool)

(assert (=> b!84722 (= e!55237 (not call!7985))))

(declare-fun b!84723 () Bool)

(declare-fun e!55248 () Bool)

(assert (=> b!84723 (= e!55248 (validKeyInArray!0 (select (arr!1904 lt!39416) #b00000000000000000000000000000000)))))

(declare-fun bm!7980 () Bool)

(assert (=> bm!7980 (= call!7985 (contains!744 lt!39937 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!84725 () Bool)

(declare-fun e!55238 () Bool)

(assert (=> b!84725 (= e!55238 (= (apply!81 lt!39937 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2210 newMap!16)))))

(declare-fun b!84726 () Bool)

(declare-fun res!43705 () Bool)

(assert (=> b!84726 (=> (not res!43705) (not e!55249))))

(declare-fun e!55246 () Bool)

(assert (=> b!84726 (= res!43705 e!55246)))

(declare-fun c!13694 () Bool)

(assert (=> b!84726 (= c!13694 (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!7981 () Bool)

(declare-fun call!7981 () ListLongMap!1437)

(assert (=> bm!7981 (= call!7981 call!7984)))

(declare-fun b!84727 () Bool)

(assert (=> b!84727 (= e!55246 e!55238)))

(declare-fun res!43702 () Bool)

(assert (=> b!84727 (= res!43702 call!7986)))

(assert (=> b!84727 (=> (not res!43702) (not e!55238))))

(declare-fun b!84728 () Bool)

(declare-fun lt!39930 () Unit!2413)

(assert (=> b!84728 (= e!55244 lt!39930)))

(declare-fun lt!39933 () ListLongMap!1437)

(assert (=> b!84728 (= lt!39933 (getCurrentListMapNoExtraKeys!70 lt!39416 lt!39395 (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39926 () (_ BitVec 64))

(assert (=> b!84728 (= lt!39926 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39942 () (_ BitVec 64))

(assert (=> b!84728 (= lt!39942 (select (arr!1904 lt!39416) #b00000000000000000000000000000000))))

(declare-fun lt!39938 () Unit!2413)

(assert (=> b!84728 (= lt!39938 (addStillContains!57 lt!39933 lt!39926 (zeroValue!2210 newMap!16) lt!39942))))

(assert (=> b!84728 (contains!744 (+!105 lt!39933 (tuple2!2183 lt!39926 (zeroValue!2210 newMap!16))) lt!39942)))

(declare-fun lt!39928 () Unit!2413)

(assert (=> b!84728 (= lt!39928 lt!39938)))

(declare-fun lt!39945 () ListLongMap!1437)

(assert (=> b!84728 (= lt!39945 (getCurrentListMapNoExtraKeys!70 lt!39416 lt!39395 (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39927 () (_ BitVec 64))

(assert (=> b!84728 (= lt!39927 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39931 () (_ BitVec 64))

(assert (=> b!84728 (= lt!39931 (select (arr!1904 lt!39416) #b00000000000000000000000000000000))))

(declare-fun lt!39944 () Unit!2413)

(assert (=> b!84728 (= lt!39944 (addApplyDifferent!57 lt!39945 lt!39927 (minValue!2210 newMap!16) lt!39931))))

(assert (=> b!84728 (= (apply!81 (+!105 lt!39945 (tuple2!2183 lt!39927 (minValue!2210 newMap!16))) lt!39931) (apply!81 lt!39945 lt!39931))))

(declare-fun lt!39943 () Unit!2413)

(assert (=> b!84728 (= lt!39943 lt!39944)))

(declare-fun lt!39932 () ListLongMap!1437)

(assert (=> b!84728 (= lt!39932 (getCurrentListMapNoExtraKeys!70 lt!39416 lt!39395 (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39936 () (_ BitVec 64))

(assert (=> b!84728 (= lt!39936 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39941 () (_ BitVec 64))

(assert (=> b!84728 (= lt!39941 (select (arr!1904 lt!39416) #b00000000000000000000000000000000))))

(declare-fun lt!39935 () Unit!2413)

(assert (=> b!84728 (= lt!39935 (addApplyDifferent!57 lt!39932 lt!39936 (zeroValue!2210 newMap!16) lt!39941))))

(assert (=> b!84728 (= (apply!81 (+!105 lt!39932 (tuple2!2183 lt!39936 (zeroValue!2210 newMap!16))) lt!39941) (apply!81 lt!39932 lt!39941))))

(declare-fun lt!39934 () Unit!2413)

(assert (=> b!84728 (= lt!39934 lt!39935)))

(declare-fun lt!39939 () ListLongMap!1437)

(assert (=> b!84728 (= lt!39939 (getCurrentListMapNoExtraKeys!70 lt!39416 lt!39395 (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39929 () (_ BitVec 64))

(assert (=> b!84728 (= lt!39929 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39925 () (_ BitVec 64))

(assert (=> b!84728 (= lt!39925 (select (arr!1904 lt!39416) #b00000000000000000000000000000000))))

(assert (=> b!84728 (= lt!39930 (addApplyDifferent!57 lt!39939 lt!39929 (minValue!2210 newMap!16) lt!39925))))

(assert (=> b!84728 (= (apply!81 (+!105 lt!39939 (tuple2!2183 lt!39929 (minValue!2210 newMap!16))) lt!39925) (apply!81 lt!39939 lt!39925))))

(declare-fun bm!7982 () Bool)

(assert (=> bm!7982 (= call!7987 (getCurrentListMapNoExtraKeys!70 lt!39416 lt!39395 (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun b!84729 () Bool)

(declare-fun e!55242 () ListLongMap!1437)

(assert (=> b!84729 (= e!55242 call!7981)))

(declare-fun bm!7983 () Bool)

(assert (=> bm!7983 (= call!7982 call!7987)))

(declare-fun d!21787 () Bool)

(assert (=> d!21787 e!55249))

(declare-fun res!43704 () Bool)

(assert (=> d!21787 (=> (not res!43704) (not e!55249))))

(assert (=> d!21787 (= res!43704 (or (bvsge #b00000000000000000000000000000000 (size!2147 lt!39416)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2147 lt!39416)))))))

(declare-fun lt!39924 () ListLongMap!1437)

(assert (=> d!21787 (= lt!39937 lt!39924)))

(declare-fun lt!39940 () Unit!2413)

(assert (=> d!21787 (= lt!39940 e!55244)))

(declare-fun c!13695 () Bool)

(declare-fun e!55241 () Bool)

(assert (=> d!21787 (= c!13695 e!55241)))

(declare-fun res!43700 () Bool)

(assert (=> d!21787 (=> (not res!43700) (not e!55241))))

(assert (=> d!21787 (= res!43700 (bvslt #b00000000000000000000000000000000 (size!2147 lt!39416)))))

(declare-fun e!55247 () ListLongMap!1437)

(assert (=> d!21787 (= lt!39924 e!55247)))

(assert (=> d!21787 (= c!13698 (and (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!21787 (validMask!0 (mask!6334 newMap!16))))

(assert (=> d!21787 (= (getCurrentListMap!429 lt!39416 lt!39395 (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) lt!39937)))

(declare-fun b!84724 () Bool)

(declare-fun c!13696 () Bool)

(assert (=> b!84724 (= c!13696 (and (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!55239 () ListLongMap!1437)

(assert (=> b!84724 (= e!55239 e!55242)))

(declare-fun b!84730 () Bool)

(declare-fun res!43703 () Bool)

(assert (=> b!84730 (=> (not res!43703) (not e!55249))))

(declare-fun e!55240 () Bool)

(assert (=> b!84730 (= res!43703 e!55240)))

(declare-fun res!43699 () Bool)

(assert (=> b!84730 (=> res!43699 e!55240)))

(assert (=> b!84730 (= res!43699 (not e!55248))))

(declare-fun res!43697 () Bool)

(assert (=> b!84730 (=> (not res!43697) (not e!55248))))

(assert (=> b!84730 (= res!43697 (bvslt #b00000000000000000000000000000000 (size!2147 lt!39416)))))

(declare-fun bm!7984 () Bool)

(assert (=> bm!7984 (= call!7983 call!7982)))

(declare-fun b!84731 () Bool)

(assert (=> b!84731 (= e!55247 (+!105 call!7984 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16))))))

(declare-fun b!84732 () Bool)

(assert (=> b!84732 (= e!55239 call!7981)))

(declare-fun b!84733 () Bool)

(declare-fun e!55243 () Bool)

(assert (=> b!84733 (= e!55237 e!55243)))

(declare-fun res!43698 () Bool)

(assert (=> b!84733 (= res!43698 call!7985)))

(assert (=> b!84733 (=> (not res!43698) (not e!55243))))

(declare-fun b!84734 () Bool)

(assert (=> b!84734 (= e!55242 call!7983)))

(declare-fun b!84735 () Bool)

(assert (=> b!84735 (= e!55247 e!55239)))

(assert (=> b!84735 (= c!13693 (and (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!84736 () Bool)

(assert (=> b!84736 (= e!55240 e!55245)))

(declare-fun res!43701 () Bool)

(assert (=> b!84736 (=> (not res!43701) (not e!55245))))

(assert (=> b!84736 (= res!43701 (contains!744 lt!39937 (select (arr!1904 lt!39416) #b00000000000000000000000000000000)))))

(assert (=> b!84736 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2147 lt!39416)))))

(declare-fun b!84737 () Bool)

(assert (=> b!84737 (= e!55246 (not call!7986))))

(declare-fun b!84738 () Bool)

(assert (=> b!84738 (= e!55243 (= (apply!81 lt!39937 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2210 newMap!16)))))

(declare-fun b!84739 () Bool)

(assert (=> b!84739 (= e!55241 (validKeyInArray!0 (select (arr!1904 lt!39416) #b00000000000000000000000000000000)))))

(assert (= (and d!21787 c!13698) b!84731))

(assert (= (and d!21787 (not c!13698)) b!84735))

(assert (= (and b!84735 c!13693) b!84732))

(assert (= (and b!84735 (not c!13693)) b!84724))

(assert (= (and b!84724 c!13696) b!84729))

(assert (= (and b!84724 (not c!13696)) b!84734))

(assert (= (or b!84729 b!84734) bm!7984))

(assert (= (or b!84732 bm!7984) bm!7983))

(assert (= (or b!84732 b!84729) bm!7981))

(assert (= (or b!84731 bm!7983) bm!7982))

(assert (= (or b!84731 bm!7981) bm!7978))

(assert (= (and d!21787 res!43700) b!84739))

(assert (= (and d!21787 c!13695) b!84728))

(assert (= (and d!21787 (not c!13695)) b!84719))

(assert (= (and d!21787 res!43704) b!84730))

(assert (= (and b!84730 res!43697) b!84723))

(assert (= (and b!84730 (not res!43699)) b!84736))

(assert (= (and b!84736 res!43701) b!84721))

(assert (= (and b!84730 res!43703) b!84726))

(assert (= (and b!84726 c!13694) b!84727))

(assert (= (and b!84726 (not c!13694)) b!84737))

(assert (= (and b!84727 res!43702) b!84725))

(assert (= (or b!84727 b!84737) bm!7979))

(assert (= (and b!84726 res!43705) b!84720))

(assert (= (and b!84720 c!13697) b!84733))

(assert (= (and b!84720 (not c!13697)) b!84722))

(assert (= (and b!84733 res!43698) b!84738))

(assert (= (or b!84733 b!84722) bm!7980))

(declare-fun b_lambda!3749 () Bool)

(assert (=> (not b_lambda!3749) (not b!84721)))

(assert (=> b!84721 t!5209))

(declare-fun b_and!5129 () Bool)

(assert (= b_and!5125 (and (=> t!5209 result!2895) b_and!5129)))

(assert (=> b!84721 t!5211))

(declare-fun b_and!5131 () Bool)

(assert (= b_and!5127 (and (=> t!5211 result!2897) b_and!5131)))

(declare-fun m!88729 () Bool)

(assert (=> b!84739 m!88729))

(assert (=> b!84739 m!88729))

(declare-fun m!88731 () Bool)

(assert (=> b!84739 m!88731))

(declare-fun m!88733 () Bool)

(assert (=> b!84721 m!88733))

(assert (=> b!84721 m!88729))

(declare-fun m!88735 () Bool)

(assert (=> b!84721 m!88735))

(assert (=> b!84721 m!88729))

(assert (=> b!84721 m!86219))

(assert (=> b!84721 m!88733))

(assert (=> b!84721 m!86219))

(declare-fun m!88737 () Bool)

(assert (=> b!84721 m!88737))

(assert (=> d!21787 m!86223))

(declare-fun m!88739 () Bool)

(assert (=> b!84738 m!88739))

(declare-fun m!88741 () Bool)

(assert (=> b!84728 m!88741))

(declare-fun m!88743 () Bool)

(assert (=> b!84728 m!88743))

(declare-fun m!88745 () Bool)

(assert (=> b!84728 m!88745))

(declare-fun m!88747 () Bool)

(assert (=> b!84728 m!88747))

(assert (=> b!84728 m!88743))

(declare-fun m!88749 () Bool)

(assert (=> b!84728 m!88749))

(declare-fun m!88751 () Bool)

(assert (=> b!84728 m!88751))

(declare-fun m!88753 () Bool)

(assert (=> b!84728 m!88753))

(declare-fun m!88755 () Bool)

(assert (=> b!84728 m!88755))

(declare-fun m!88757 () Bool)

(assert (=> b!84728 m!88757))

(declare-fun m!88759 () Bool)

(assert (=> b!84728 m!88759))

(declare-fun m!88761 () Bool)

(assert (=> b!84728 m!88761))

(assert (=> b!84728 m!88729))

(assert (=> b!84728 m!88757))

(assert (=> b!84728 m!88751))

(assert (=> b!84728 m!88745))

(declare-fun m!88763 () Bool)

(assert (=> b!84728 m!88763))

(declare-fun m!88765 () Bool)

(assert (=> b!84728 m!88765))

(declare-fun m!88767 () Bool)

(assert (=> b!84728 m!88767))

(declare-fun m!88769 () Bool)

(assert (=> b!84728 m!88769))

(declare-fun m!88771 () Bool)

(assert (=> b!84728 m!88771))

(declare-fun m!88773 () Bool)

(assert (=> b!84731 m!88773))

(declare-fun m!88775 () Bool)

(assert (=> bm!7978 m!88775))

(assert (=> b!84736 m!88729))

(assert (=> b!84736 m!88729))

(declare-fun m!88777 () Bool)

(assert (=> b!84736 m!88777))

(assert (=> bm!7982 m!88761))

(declare-fun m!88779 () Bool)

(assert (=> bm!7980 m!88779))

(assert (=> b!84723 m!88729))

(assert (=> b!84723 m!88729))

(assert (=> b!84723 m!88731))

(declare-fun m!88781 () Bool)

(assert (=> bm!7979 m!88781))

(declare-fun m!88783 () Bool)

(assert (=> b!84725 m!88783))

(assert (=> d!21111 d!21787))

(assert (=> d!21111 d!21015))

(declare-fun b!84740 () Bool)

(declare-fun e!55252 () Bool)

(declare-fun e!55250 () Bool)

(assert (=> b!84740 (= e!55252 e!55250)))

(declare-fun c!13699 () Bool)

(assert (=> b!84740 (= c!13699 (validKeyInArray!0 (select (arr!1904 (array!3998 (store (arr!1904 (_keys!3984 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) (size!2147 (_keys!3984 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun d!21789 () Bool)

(declare-fun res!43707 () Bool)

(assert (=> d!21789 (=> res!43707 e!55252)))

(assert (=> d!21789 (= res!43707 (bvsge #b00000000000000000000000000000000 (size!2147 (array!3998 (store (arr!1904 (_keys!3984 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) (size!2147 (_keys!3984 newMap!16))))))))

(assert (=> d!21789 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3998 (store (arr!1904 (_keys!3984 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) (size!2147 (_keys!3984 newMap!16))) (mask!6334 newMap!16)) e!55252)))

(declare-fun b!84741 () Bool)

(declare-fun e!55251 () Bool)

(declare-fun call!7988 () Bool)

(assert (=> b!84741 (= e!55251 call!7988)))

(declare-fun b!84742 () Bool)

(assert (=> b!84742 (= e!55250 call!7988)))

(declare-fun bm!7985 () Bool)

(assert (=> bm!7985 (= call!7988 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!3998 (store (arr!1904 (_keys!3984 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) (size!2147 (_keys!3984 newMap!16))) (mask!6334 newMap!16)))))

(declare-fun b!84743 () Bool)

(assert (=> b!84743 (= e!55250 e!55251)))

(declare-fun lt!39948 () (_ BitVec 64))

(assert (=> b!84743 (= lt!39948 (select (arr!1904 (array!3998 (store (arr!1904 (_keys!3984 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) (size!2147 (_keys!3984 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!39946 () Unit!2413)

(assert (=> b!84743 (= lt!39946 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!3998 (store (arr!1904 (_keys!3984 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) (size!2147 (_keys!3984 newMap!16))) lt!39948 #b00000000000000000000000000000000))))

(assert (=> b!84743 (arrayContainsKey!0 (array!3998 (store (arr!1904 (_keys!3984 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) (size!2147 (_keys!3984 newMap!16))) lt!39948 #b00000000000000000000000000000000)))

(declare-fun lt!39947 () Unit!2413)

(assert (=> b!84743 (= lt!39947 lt!39946)))

(declare-fun res!43706 () Bool)

(assert (=> b!84743 (= res!43706 (= (seekEntryOrOpen!0 (select (arr!1904 (array!3998 (store (arr!1904 (_keys!3984 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) (size!2147 (_keys!3984 newMap!16)))) #b00000000000000000000000000000000) (array!3998 (store (arr!1904 (_keys!3984 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) (size!2147 (_keys!3984 newMap!16))) (mask!6334 newMap!16)) (Found!236 #b00000000000000000000000000000000)))))

(assert (=> b!84743 (=> (not res!43706) (not e!55251))))

(assert (= (and d!21789 (not res!43707)) b!84740))

(assert (= (and b!84740 c!13699) b!84743))

(assert (= (and b!84740 (not c!13699)) b!84742))

(assert (= (and b!84743 res!43706) b!84741))

(assert (= (or b!84741 b!84742) bm!7985))

(assert (=> b!84740 m!88723))

(assert (=> b!84740 m!88723))

(assert (=> b!84740 m!88725))

(declare-fun m!88785 () Bool)

(assert (=> bm!7985 m!88785))

(assert (=> b!84743 m!88723))

(declare-fun m!88787 () Bool)

(assert (=> b!84743 m!88787))

(declare-fun m!88789 () Bool)

(assert (=> b!84743 m!88789))

(assert (=> b!84743 m!88723))

(declare-fun m!88791 () Bool)

(assert (=> b!84743 m!88791))

(assert (=> d!21111 d!21789))

(declare-fun d!21791 () Bool)

(declare-fun e!55258 () Bool)

(assert (=> d!21791 e!55258))

(declare-fun res!43717 () Bool)

(assert (=> d!21791 (=> (not res!43717) (not e!55258))))

(assert (=> d!21791 (= res!43717 (and (bvsge (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) #b00000000000000000000000000000000) (bvslt (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (size!2147 (_keys!3984 newMap!16)))))))

(declare-fun lt!39951 () Unit!2413)

(declare-fun choose!1 (array!3997 (_ BitVec 32) (_ BitVec 64)) Unit!2413)

(assert (=> d!21791 (= lt!39951 (choose!1 (_keys!3984 newMap!16) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))

(declare-fun e!55257 () Bool)

(assert (=> d!21791 e!55257))

(declare-fun res!43716 () Bool)

(assert (=> d!21791 (=> (not res!43716) (not e!55257))))

(assert (=> d!21791 (= res!43716 (and (bvsge (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) #b00000000000000000000000000000000) (bvslt (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (size!2147 (_keys!3984 newMap!16)))))))

(assert (=> d!21791 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3984 newMap!16) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) lt!39951)))

(declare-fun b!84754 () Bool)

(assert (=> b!84754 (= e!55257 (bvslt (size!2147 (_keys!3984 newMap!16)) #b01111111111111111111111111111111))))

(declare-fun b!84753 () Bool)

(declare-fun res!43719 () Bool)

(assert (=> b!84753 (=> (not res!43719) (not e!55257))))

(assert (=> b!84753 (= res!43719 (validKeyInArray!0 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))

(declare-fun b!84755 () Bool)

(assert (=> b!84755 (= e!55258 (= (arrayCountValidKeys!0 (array!3998 (store (arr!1904 (_keys!3984 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) (size!2147 (_keys!3984 newMap!16))) #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!3984 newMap!16) #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))) #b00000000000000000000000000000001)))))

(declare-fun b!84752 () Bool)

(declare-fun res!43718 () Bool)

(assert (=> b!84752 (=> (not res!43718) (not e!55257))))

(assert (=> b!84752 (= res!43718 (not (validKeyInArray!0 (select (arr!1904 (_keys!3984 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961))))))))

(assert (= (and d!21791 res!43716) b!84752))

(assert (= (and b!84752 res!43718) b!84753))

(assert (= (and b!84753 res!43719) b!84754))

(assert (= (and d!21791 res!43717) b!84755))

(assert (=> d!21791 m!85721))

(declare-fun m!88793 () Bool)

(assert (=> d!21791 m!88793))

(assert (=> b!84753 m!85721))

(assert (=> b!84753 m!85995))

(assert (=> b!84755 m!86817))

(assert (=> b!84755 m!86843))

(assert (=> b!84755 m!85915))

(declare-fun m!88795 () Bool)

(assert (=> b!84752 m!88795))

(assert (=> b!84752 m!88795))

(declare-fun m!88797 () Bool)

(assert (=> b!84752 m!88797))

(assert (=> d!21111 d!21791))

(declare-fun d!21793 () Bool)

(declare-fun res!43720 () Bool)

(declare-fun e!55259 () Bool)

(assert (=> d!21793 (=> res!43720 e!55259)))

(assert (=> d!21793 (= res!43720 (= (select (arr!1904 lt!39404) #b00000000000000000000000000000000) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))

(assert (=> d!21793 (= (arrayContainsKey!0 lt!39404 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) #b00000000000000000000000000000000) e!55259)))

(declare-fun b!84756 () Bool)

(declare-fun e!55260 () Bool)

(assert (=> b!84756 (= e!55259 e!55260)))

(declare-fun res!43721 () Bool)

(assert (=> b!84756 (=> (not res!43721) (not e!55260))))

(assert (=> b!84756 (= res!43721 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2147 lt!39404)))))

(declare-fun b!84757 () Bool)

(assert (=> b!84757 (= e!55260 (arrayContainsKey!0 lt!39404 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!21793 (not res!43720)) b!84756))

(assert (= (and b!84756 res!43721) b!84757))

(declare-fun m!88799 () Bool)

(assert (=> d!21793 m!88799))

(assert (=> b!84757 m!85721))

(declare-fun m!88801 () Bool)

(assert (=> b!84757 m!88801))

(assert (=> d!21111 d!21793))

(declare-fun b!84758 () Bool)

(declare-fun e!55268 () Unit!2413)

(declare-fun Unit!2481 () Unit!2413)

(assert (=> b!84758 (= e!55268 Unit!2481)))

(declare-fun b!84759 () Bool)

(declare-fun e!55273 () Bool)

(declare-fun e!55261 () Bool)

(assert (=> b!84759 (= e!55273 e!55261)))

(declare-fun c!13704 () Bool)

(assert (=> b!84759 (= c!13704 (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun c!13700 () Bool)

(declare-fun call!7991 () ListLongMap!1437)

(declare-fun call!7992 () ListLongMap!1437)

(declare-fun c!13705 () Bool)

(declare-fun bm!7986 () Bool)

(declare-fun call!7995 () ListLongMap!1437)

(declare-fun call!7990 () ListLongMap!1437)

(assert (=> bm!7986 (= call!7992 (+!105 (ite c!13705 call!7995 (ite c!13700 call!7990 call!7991)) (ite (or c!13705 c!13700) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 newMap!16)) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16)))))))

(declare-fun bm!7987 () Bool)

(declare-fun call!7994 () Bool)

(declare-fun lt!39965 () ListLongMap!1437)

(assert (=> bm!7987 (= call!7994 (contains!744 lt!39965 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!84760 () Bool)

(declare-fun e!55269 () Bool)

(assert (=> b!84760 (= e!55269 (= (apply!81 lt!39965 (select (arr!1904 (array!3998 (store (arr!1904 (_keys!3984 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) (size!2147 (_keys!3984 newMap!16)))) #b00000000000000000000000000000000)) (get!1198 (select (arr!1905 (array!4000 (store (arr!1905 (_values!2299 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (ValueCellFull!920 lt!38784)) (size!2148 (_values!2299 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!343 (defaultEntry!2316 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!84760 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2148 (array!4000 (store (arr!1905 (_values!2299 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (ValueCellFull!920 lt!38784)) (size!2148 (_values!2299 newMap!16))))))))

(assert (=> b!84760 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2147 (array!3998 (store (arr!1904 (_keys!3984 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) (size!2147 (_keys!3984 newMap!16))))))))

(declare-fun b!84761 () Bool)

(declare-fun call!7993 () Bool)

(assert (=> b!84761 (= e!55261 (not call!7993))))

(declare-fun b!84762 () Bool)

(declare-fun e!55272 () Bool)

(assert (=> b!84762 (= e!55272 (validKeyInArray!0 (select (arr!1904 (array!3998 (store (arr!1904 (_keys!3984 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) (size!2147 (_keys!3984 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun bm!7988 () Bool)

(assert (=> bm!7988 (= call!7993 (contains!744 lt!39965 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!84764 () Bool)

(declare-fun e!55262 () Bool)

(assert (=> b!84764 (= e!55262 (= (apply!81 lt!39965 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2210 newMap!16)))))

(declare-fun b!84765 () Bool)

(declare-fun res!43730 () Bool)

(assert (=> b!84765 (=> (not res!43730) (not e!55273))))

(declare-fun e!55270 () Bool)

(assert (=> b!84765 (= res!43730 e!55270)))

(declare-fun c!13701 () Bool)

(assert (=> b!84765 (= c!13701 (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!7989 () Bool)

(declare-fun call!7989 () ListLongMap!1437)

(assert (=> bm!7989 (= call!7989 call!7992)))

(declare-fun b!84766 () Bool)

(assert (=> b!84766 (= e!55270 e!55262)))

(declare-fun res!43727 () Bool)

(assert (=> b!84766 (= res!43727 call!7994)))

(assert (=> b!84766 (=> (not res!43727) (not e!55262))))

(declare-fun b!84767 () Bool)

(declare-fun lt!39958 () Unit!2413)

(assert (=> b!84767 (= e!55268 lt!39958)))

(declare-fun lt!39961 () ListLongMap!1437)

(assert (=> b!84767 (= lt!39961 (getCurrentListMapNoExtraKeys!70 (array!3998 (store (arr!1904 (_keys!3984 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) (size!2147 (_keys!3984 newMap!16))) (array!4000 (store (arr!1905 (_values!2299 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (ValueCellFull!920 lt!38784)) (size!2148 (_values!2299 newMap!16))) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39954 () (_ BitVec 64))

(assert (=> b!84767 (= lt!39954 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39970 () (_ BitVec 64))

(assert (=> b!84767 (= lt!39970 (select (arr!1904 (array!3998 (store (arr!1904 (_keys!3984 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) (size!2147 (_keys!3984 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!39966 () Unit!2413)

(assert (=> b!84767 (= lt!39966 (addStillContains!57 lt!39961 lt!39954 (zeroValue!2210 newMap!16) lt!39970))))

(assert (=> b!84767 (contains!744 (+!105 lt!39961 (tuple2!2183 lt!39954 (zeroValue!2210 newMap!16))) lt!39970)))

(declare-fun lt!39956 () Unit!2413)

(assert (=> b!84767 (= lt!39956 lt!39966)))

(declare-fun lt!39973 () ListLongMap!1437)

(assert (=> b!84767 (= lt!39973 (getCurrentListMapNoExtraKeys!70 (array!3998 (store (arr!1904 (_keys!3984 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) (size!2147 (_keys!3984 newMap!16))) (array!4000 (store (arr!1905 (_values!2299 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (ValueCellFull!920 lt!38784)) (size!2148 (_values!2299 newMap!16))) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39955 () (_ BitVec 64))

(assert (=> b!84767 (= lt!39955 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39959 () (_ BitVec 64))

(assert (=> b!84767 (= lt!39959 (select (arr!1904 (array!3998 (store (arr!1904 (_keys!3984 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) (size!2147 (_keys!3984 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!39972 () Unit!2413)

(assert (=> b!84767 (= lt!39972 (addApplyDifferent!57 lt!39973 lt!39955 (minValue!2210 newMap!16) lt!39959))))

(assert (=> b!84767 (= (apply!81 (+!105 lt!39973 (tuple2!2183 lt!39955 (minValue!2210 newMap!16))) lt!39959) (apply!81 lt!39973 lt!39959))))

(declare-fun lt!39971 () Unit!2413)

(assert (=> b!84767 (= lt!39971 lt!39972)))

(declare-fun lt!39960 () ListLongMap!1437)

(assert (=> b!84767 (= lt!39960 (getCurrentListMapNoExtraKeys!70 (array!3998 (store (arr!1904 (_keys!3984 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) (size!2147 (_keys!3984 newMap!16))) (array!4000 (store (arr!1905 (_values!2299 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (ValueCellFull!920 lt!38784)) (size!2148 (_values!2299 newMap!16))) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39964 () (_ BitVec 64))

(assert (=> b!84767 (= lt!39964 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39969 () (_ BitVec 64))

(assert (=> b!84767 (= lt!39969 (select (arr!1904 (array!3998 (store (arr!1904 (_keys!3984 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) (size!2147 (_keys!3984 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!39963 () Unit!2413)

(assert (=> b!84767 (= lt!39963 (addApplyDifferent!57 lt!39960 lt!39964 (zeroValue!2210 newMap!16) lt!39969))))

(assert (=> b!84767 (= (apply!81 (+!105 lt!39960 (tuple2!2183 lt!39964 (zeroValue!2210 newMap!16))) lt!39969) (apply!81 lt!39960 lt!39969))))

(declare-fun lt!39962 () Unit!2413)

(assert (=> b!84767 (= lt!39962 lt!39963)))

(declare-fun lt!39967 () ListLongMap!1437)

(assert (=> b!84767 (= lt!39967 (getCurrentListMapNoExtraKeys!70 (array!3998 (store (arr!1904 (_keys!3984 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) (size!2147 (_keys!3984 newMap!16))) (array!4000 (store (arr!1905 (_values!2299 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (ValueCellFull!920 lt!38784)) (size!2148 (_values!2299 newMap!16))) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun lt!39957 () (_ BitVec 64))

(assert (=> b!84767 (= lt!39957 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!39953 () (_ BitVec 64))

(assert (=> b!84767 (= lt!39953 (select (arr!1904 (array!3998 (store (arr!1904 (_keys!3984 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) (size!2147 (_keys!3984 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!84767 (= lt!39958 (addApplyDifferent!57 lt!39967 lt!39957 (minValue!2210 newMap!16) lt!39953))))

(assert (=> b!84767 (= (apply!81 (+!105 lt!39967 (tuple2!2183 lt!39957 (minValue!2210 newMap!16))) lt!39953) (apply!81 lt!39967 lt!39953))))

(declare-fun bm!7990 () Bool)

(assert (=> bm!7990 (= call!7995 (getCurrentListMapNoExtraKeys!70 (array!3998 (store (arr!1904 (_keys!3984 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) (size!2147 (_keys!3984 newMap!16))) (array!4000 (store (arr!1905 (_values!2299 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (ValueCellFull!920 lt!38784)) (size!2148 (_values!2299 newMap!16))) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(declare-fun b!84768 () Bool)

(declare-fun e!55266 () ListLongMap!1437)

(assert (=> b!84768 (= e!55266 call!7989)))

(declare-fun bm!7991 () Bool)

(assert (=> bm!7991 (= call!7990 call!7995)))

(declare-fun d!21795 () Bool)

(assert (=> d!21795 e!55273))

(declare-fun res!43729 () Bool)

(assert (=> d!21795 (=> (not res!43729) (not e!55273))))

(assert (=> d!21795 (= res!43729 (or (bvsge #b00000000000000000000000000000000 (size!2147 (array!3998 (store (arr!1904 (_keys!3984 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) (size!2147 (_keys!3984 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2147 (array!3998 (store (arr!1904 (_keys!3984 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) (size!2147 (_keys!3984 newMap!16))))))))))

(declare-fun lt!39952 () ListLongMap!1437)

(assert (=> d!21795 (= lt!39965 lt!39952)))

(declare-fun lt!39968 () Unit!2413)

(assert (=> d!21795 (= lt!39968 e!55268)))

(declare-fun c!13702 () Bool)

(declare-fun e!55265 () Bool)

(assert (=> d!21795 (= c!13702 e!55265)))

(declare-fun res!43725 () Bool)

(assert (=> d!21795 (=> (not res!43725) (not e!55265))))

(assert (=> d!21795 (= res!43725 (bvslt #b00000000000000000000000000000000 (size!2147 (array!3998 (store (arr!1904 (_keys!3984 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) (size!2147 (_keys!3984 newMap!16))))))))

(declare-fun e!55271 () ListLongMap!1437)

(assert (=> d!21795 (= lt!39952 e!55271)))

(assert (=> d!21795 (= c!13705 (and (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!21795 (validMask!0 (mask!6334 newMap!16))))

(assert (=> d!21795 (= (getCurrentListMap!429 (array!3998 (store (arr!1904 (_keys!3984 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) (size!2147 (_keys!3984 newMap!16))) (array!4000 (store (arr!1905 (_values!2299 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (ValueCellFull!920 lt!38784)) (size!2148 (_values!2299 newMap!16))) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) lt!39965)))

(declare-fun b!84763 () Bool)

(declare-fun c!13703 () Bool)

(assert (=> b!84763 (= c!13703 (and (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!55263 () ListLongMap!1437)

(assert (=> b!84763 (= e!55263 e!55266)))

(declare-fun b!84769 () Bool)

(declare-fun res!43728 () Bool)

(assert (=> b!84769 (=> (not res!43728) (not e!55273))))

(declare-fun e!55264 () Bool)

(assert (=> b!84769 (= res!43728 e!55264)))

(declare-fun res!43724 () Bool)

(assert (=> b!84769 (=> res!43724 e!55264)))

(assert (=> b!84769 (= res!43724 (not e!55272))))

(declare-fun res!43722 () Bool)

(assert (=> b!84769 (=> (not res!43722) (not e!55272))))

(assert (=> b!84769 (= res!43722 (bvslt #b00000000000000000000000000000000 (size!2147 (array!3998 (store (arr!1904 (_keys!3984 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) (size!2147 (_keys!3984 newMap!16))))))))

(declare-fun bm!7992 () Bool)

(assert (=> bm!7992 (= call!7991 call!7990)))

(declare-fun b!84770 () Bool)

(assert (=> b!84770 (= e!55271 (+!105 call!7992 (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 newMap!16))))))

(declare-fun b!84771 () Bool)

(assert (=> b!84771 (= e!55263 call!7989)))

(declare-fun b!84772 () Bool)

(declare-fun e!55267 () Bool)

(assert (=> b!84772 (= e!55261 e!55267)))

(declare-fun res!43723 () Bool)

(assert (=> b!84772 (= res!43723 call!7993)))

(assert (=> b!84772 (=> (not res!43723) (not e!55267))))

(declare-fun b!84773 () Bool)

(assert (=> b!84773 (= e!55266 call!7991)))

(declare-fun b!84774 () Bool)

(assert (=> b!84774 (= e!55271 e!55263)))

(assert (=> b!84774 (= c!13700 (and (not (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2159 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!84775 () Bool)

(assert (=> b!84775 (= e!55264 e!55269)))

(declare-fun res!43726 () Bool)

(assert (=> b!84775 (=> (not res!43726) (not e!55269))))

(assert (=> b!84775 (= res!43726 (contains!744 lt!39965 (select (arr!1904 (array!3998 (store (arr!1904 (_keys!3984 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) (size!2147 (_keys!3984 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!84775 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2147 (array!3998 (store (arr!1904 (_keys!3984 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) (size!2147 (_keys!3984 newMap!16))))))))

(declare-fun b!84776 () Bool)

(assert (=> b!84776 (= e!55270 (not call!7994))))

(declare-fun b!84777 () Bool)

(assert (=> b!84777 (= e!55267 (= (apply!81 lt!39965 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2210 newMap!16)))))

(declare-fun b!84778 () Bool)

(assert (=> b!84778 (= e!55265 (validKeyInArray!0 (select (arr!1904 (array!3998 (store (arr!1904 (_keys!3984 newMap!16)) (ite c!13220 (index!3083 lt!38961) (index!3080 lt!38961)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) (size!2147 (_keys!3984 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (= (and d!21795 c!13705) b!84770))

(assert (= (and d!21795 (not c!13705)) b!84774))

(assert (= (and b!84774 c!13700) b!84771))

(assert (= (and b!84774 (not c!13700)) b!84763))

(assert (= (and b!84763 c!13703) b!84768))

(assert (= (and b!84763 (not c!13703)) b!84773))

(assert (= (or b!84768 b!84773) bm!7992))

(assert (= (or b!84771 bm!7992) bm!7991))

(assert (= (or b!84771 b!84768) bm!7989))

(assert (= (or b!84770 bm!7991) bm!7990))

(assert (= (or b!84770 bm!7989) bm!7986))

(assert (= (and d!21795 res!43725) b!84778))

(assert (= (and d!21795 c!13702) b!84767))

(assert (= (and d!21795 (not c!13702)) b!84758))

(assert (= (and d!21795 res!43729) b!84769))

(assert (= (and b!84769 res!43722) b!84762))

(assert (= (and b!84769 (not res!43724)) b!84775))

(assert (= (and b!84775 res!43726) b!84760))

(assert (= (and b!84769 res!43728) b!84765))

(assert (= (and b!84765 c!13701) b!84766))

(assert (= (and b!84765 (not c!13701)) b!84776))

(assert (= (and b!84766 res!43727) b!84764))

(assert (= (or b!84766 b!84776) bm!7987))

(assert (= (and b!84765 res!43730) b!84759))

(assert (= (and b!84759 c!13704) b!84772))

(assert (= (and b!84759 (not c!13704)) b!84761))

(assert (= (and b!84772 res!43723) b!84777))

(assert (= (or b!84772 b!84761) bm!7988))

(declare-fun b_lambda!3751 () Bool)

(assert (=> (not b_lambda!3751) (not b!84760)))

(assert (=> b!84760 t!5209))

(declare-fun b_and!5133 () Bool)

(assert (= b_and!5129 (and (=> t!5209 result!2895) b_and!5133)))

(assert (=> b!84760 t!5211))

(declare-fun b_and!5135 () Bool)

(assert (= b_and!5131 (and (=> t!5211 result!2897) b_and!5135)))

(assert (=> b!84778 m!88723))

(assert (=> b!84778 m!88723))

(assert (=> b!84778 m!88725))

(declare-fun m!88803 () Bool)

(assert (=> b!84760 m!88803))

(assert (=> b!84760 m!88723))

(declare-fun m!88805 () Bool)

(assert (=> b!84760 m!88805))

(assert (=> b!84760 m!88723))

(assert (=> b!84760 m!86219))

(assert (=> b!84760 m!88803))

(assert (=> b!84760 m!86219))

(declare-fun m!88807 () Bool)

(assert (=> b!84760 m!88807))

(assert (=> d!21795 m!86223))

(declare-fun m!88809 () Bool)

(assert (=> b!84777 m!88809))

(declare-fun m!88811 () Bool)

(assert (=> b!84767 m!88811))

(declare-fun m!88813 () Bool)

(assert (=> b!84767 m!88813))

(declare-fun m!88815 () Bool)

(assert (=> b!84767 m!88815))

(declare-fun m!88817 () Bool)

(assert (=> b!84767 m!88817))

(assert (=> b!84767 m!88813))

(declare-fun m!88819 () Bool)

(assert (=> b!84767 m!88819))

(declare-fun m!88821 () Bool)

(assert (=> b!84767 m!88821))

(declare-fun m!88823 () Bool)

(assert (=> b!84767 m!88823))

(declare-fun m!88825 () Bool)

(assert (=> b!84767 m!88825))

(declare-fun m!88827 () Bool)

(assert (=> b!84767 m!88827))

(declare-fun m!88829 () Bool)

(assert (=> b!84767 m!88829))

(declare-fun m!88831 () Bool)

(assert (=> b!84767 m!88831))

(assert (=> b!84767 m!88723))

(assert (=> b!84767 m!88827))

(assert (=> b!84767 m!88821))

(assert (=> b!84767 m!88815))

(declare-fun m!88833 () Bool)

(assert (=> b!84767 m!88833))

(declare-fun m!88835 () Bool)

(assert (=> b!84767 m!88835))

(declare-fun m!88837 () Bool)

(assert (=> b!84767 m!88837))

(declare-fun m!88839 () Bool)

(assert (=> b!84767 m!88839))

(declare-fun m!88841 () Bool)

(assert (=> b!84767 m!88841))

(declare-fun m!88843 () Bool)

(assert (=> b!84770 m!88843))

(declare-fun m!88845 () Bool)

(assert (=> bm!7986 m!88845))

(assert (=> b!84775 m!88723))

(assert (=> b!84775 m!88723))

(declare-fun m!88847 () Bool)

(assert (=> b!84775 m!88847))

(assert (=> bm!7990 m!88831))

(declare-fun m!88849 () Bool)

(assert (=> bm!7988 m!88849))

(assert (=> b!84762 m!88723))

(assert (=> b!84762 m!88723))

(assert (=> b!84762 m!88725))

(declare-fun m!88851 () Bool)

(assert (=> bm!7987 m!88851))

(declare-fun m!88853 () Bool)

(assert (=> b!84764 m!88853))

(assert (=> d!21111 d!21795))

(declare-fun d!21797 () Bool)

(declare-fun lt!39974 () Bool)

(assert (=> d!21797 (= lt!39974 (select (content!89 (t!5196 (toList!734 lt!39049))) lt!38772))))

(declare-fun e!55274 () Bool)

(assert (=> d!21797 (= lt!39974 e!55274)))

(declare-fun res!43732 () Bool)

(assert (=> d!21797 (=> (not res!43732) (not e!55274))))

(assert (=> d!21797 (= res!43732 ((_ is Cons!1500) (t!5196 (toList!734 lt!39049))))))

(assert (=> d!21797 (= (contains!746 (t!5196 (toList!734 lt!39049)) lt!38772) lt!39974)))

(declare-fun b!84779 () Bool)

(declare-fun e!55275 () Bool)

(assert (=> b!84779 (= e!55274 e!55275)))

(declare-fun res!43731 () Bool)

(assert (=> b!84779 (=> res!43731 e!55275)))

(assert (=> b!84779 (= res!43731 (= (h!2090 (t!5196 (toList!734 lt!39049))) lt!38772))))

(declare-fun b!84780 () Bool)

(assert (=> b!84780 (= e!55275 (contains!746 (t!5196 (t!5196 (toList!734 lt!39049))) lt!38772))))

(assert (= (and d!21797 res!43732) b!84779))

(assert (= (and b!84779 (not res!43731)) b!84780))

(declare-fun m!88855 () Bool)

(assert (=> d!21797 m!88855))

(declare-fun m!88857 () Bool)

(assert (=> d!21797 m!88857))

(declare-fun m!88859 () Bool)

(assert (=> b!84780 m!88859))

(assert (=> b!83692 d!21797))

(declare-fun d!21799 () Bool)

(assert (=> d!21799 (isDefined!92 (getValueByKey!140 (toList!734 lt!39012) (_1!1102 lt!38772)))))

(declare-fun lt!39975 () Unit!2413)

(assert (=> d!21799 (= lt!39975 (choose!502 (toList!734 lt!39012) (_1!1102 lt!38772)))))

(declare-fun e!55276 () Bool)

(assert (=> d!21799 e!55276))

(declare-fun res!43733 () Bool)

(assert (=> d!21799 (=> (not res!43733) (not e!55276))))

(assert (=> d!21799 (= res!43733 (isStrictlySorted!284 (toList!734 lt!39012)))))

(assert (=> d!21799 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 lt!39012) (_1!1102 lt!38772)) lt!39975)))

(declare-fun b!84781 () Bool)

(assert (=> b!84781 (= e!55276 (containsKey!143 (toList!734 lt!39012) (_1!1102 lt!38772)))))

(assert (= (and d!21799 res!43733) b!84781))

(assert (=> d!21799 m!86033))

(assert (=> d!21799 m!86033))

(assert (=> d!21799 m!86373))

(declare-fun m!88861 () Bool)

(assert (=> d!21799 m!88861))

(declare-fun m!88863 () Bool)

(assert (=> d!21799 m!88863))

(assert (=> b!84781 m!86369))

(assert (=> b!83331 d!21799))

(declare-fun d!21801 () Bool)

(assert (=> d!21801 (= (isDefined!92 (getValueByKey!140 (toList!734 lt!39012) (_1!1102 lt!38772))) (not (isEmpty!340 (getValueByKey!140 (toList!734 lt!39012) (_1!1102 lt!38772)))))))

(declare-fun bs!3587 () Bool)

(assert (= bs!3587 d!21801))

(assert (=> bs!3587 m!86033))

(declare-fun m!88865 () Bool)

(assert (=> bs!3587 m!88865))

(assert (=> b!83331 d!21801))

(assert (=> b!83331 d!20975))

(declare-fun d!21803 () Bool)

(assert (=> d!21803 (isDefined!92 (getValueByKey!140 (toList!734 lt!39004) (_1!1102 lt!38779)))))

(declare-fun lt!39976 () Unit!2413)

(assert (=> d!21803 (= lt!39976 (choose!502 (toList!734 lt!39004) (_1!1102 lt!38779)))))

(declare-fun e!55277 () Bool)

(assert (=> d!21803 e!55277))

(declare-fun res!43734 () Bool)

(assert (=> d!21803 (=> (not res!43734) (not e!55277))))

(assert (=> d!21803 (= res!43734 (isStrictlySorted!284 (toList!734 lt!39004)))))

(assert (=> d!21803 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 lt!39004) (_1!1102 lt!38779)) lt!39976)))

(declare-fun b!84782 () Bool)

(assert (=> b!84782 (= e!55277 (containsKey!143 (toList!734 lt!39004) (_1!1102 lt!38779)))))

(assert (= (and d!21803 res!43734) b!84782))

(assert (=> d!21803 m!86009))

(assert (=> d!21803 m!86009))

(assert (=> d!21803 m!86899))

(declare-fun m!88867 () Bool)

(assert (=> d!21803 m!88867))

(declare-fun m!88869 () Bool)

(assert (=> d!21803 m!88869))

(assert (=> b!84782 m!86895))

(assert (=> b!83624 d!21803))

(declare-fun d!21805 () Bool)

(assert (=> d!21805 (= (isDefined!92 (getValueByKey!140 (toList!734 lt!39004) (_1!1102 lt!38779))) (not (isEmpty!340 (getValueByKey!140 (toList!734 lt!39004) (_1!1102 lt!38779)))))))

(declare-fun bs!3588 () Bool)

(assert (= bs!3588 d!21805))

(assert (=> bs!3588 m!86009))

(declare-fun m!88871 () Bool)

(assert (=> bs!3588 m!88871))

(assert (=> b!83624 d!21805))

(assert (=> b!83624 d!20957))

(assert (=> d!20979 d!20911))

(declare-fun b!84785 () Bool)

(declare-fun e!55279 () Option!146)

(assert (=> b!84785 (= e!55279 (getValueByKey!140 (t!5196 (t!5196 lt!39010)) (_1!1102 lt!38775)))))

(declare-fun d!21807 () Bool)

(declare-fun c!13706 () Bool)

(assert (=> d!21807 (= c!13706 (and ((_ is Cons!1500) (t!5196 lt!39010)) (= (_1!1102 (h!2090 (t!5196 lt!39010))) (_1!1102 lt!38775))))))

(declare-fun e!55278 () Option!146)

(assert (=> d!21807 (= (getValueByKey!140 (t!5196 lt!39010) (_1!1102 lt!38775)) e!55278)))

(declare-fun b!84783 () Bool)

(assert (=> b!84783 (= e!55278 (Some!145 (_2!1102 (h!2090 (t!5196 lt!39010)))))))

(declare-fun b!84784 () Bool)

(assert (=> b!84784 (= e!55278 e!55279)))

(declare-fun c!13707 () Bool)

(assert (=> b!84784 (= c!13707 (and ((_ is Cons!1500) (t!5196 lt!39010)) (not (= (_1!1102 (h!2090 (t!5196 lt!39010))) (_1!1102 lt!38775)))))))

(declare-fun b!84786 () Bool)

(assert (=> b!84786 (= e!55279 None!144)))

(assert (= (and d!21807 c!13706) b!84783))

(assert (= (and d!21807 (not c!13706)) b!84784))

(assert (= (and b!84784 c!13707) b!84785))

(assert (= (and b!84784 (not c!13707)) b!84786))

(declare-fun m!88873 () Bool)

(assert (=> b!84785 m!88873))

(assert (=> b!83414 d!21807))

(declare-fun d!21809 () Bool)

(declare-fun e!55280 () Bool)

(assert (=> d!21809 e!55280))

(declare-fun res!43736 () Bool)

(assert (=> d!21809 (=> (not res!43736) (not e!55280))))

(declare-fun lt!39978 () ListLongMap!1437)

(assert (=> d!21809 (= res!43736 (contains!744 lt!39978 (_1!1102 (tuple2!2183 lt!39443 (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16))))))))

(declare-fun lt!39980 () List!1504)

(assert (=> d!21809 (= lt!39978 (ListLongMap!1438 lt!39980))))

(declare-fun lt!39977 () Unit!2413)

(declare-fun lt!39979 () Unit!2413)

(assert (=> d!21809 (= lt!39977 lt!39979)))

(assert (=> d!21809 (= (getValueByKey!140 lt!39980 (_1!1102 (tuple2!2183 lt!39443 (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16))))) (Some!145 (_2!1102 (tuple2!2183 lt!39443 (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16))))))))

(assert (=> d!21809 (= lt!39979 (lemmaContainsTupThenGetReturnValue!57 lt!39980 (_1!1102 (tuple2!2183 lt!39443 (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16)))) (_2!1102 (tuple2!2183 lt!39443 (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16))))))))

(assert (=> d!21809 (= lt!39980 (insertStrictlySorted!60 (toList!734 lt!39453) (_1!1102 (tuple2!2183 lt!39443 (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16)))) (_2!1102 (tuple2!2183 lt!39443 (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16))))))))

(assert (=> d!21809 (= (+!105 lt!39453 (tuple2!2183 lt!39443 (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16)))) lt!39978)))

(declare-fun b!84787 () Bool)

(declare-fun res!43735 () Bool)

(assert (=> b!84787 (=> (not res!43735) (not e!55280))))

(assert (=> b!84787 (= res!43735 (= (getValueByKey!140 (toList!734 lt!39978) (_1!1102 (tuple2!2183 lt!39443 (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16))))) (Some!145 (_2!1102 (tuple2!2183 lt!39443 (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16)))))))))

(declare-fun b!84788 () Bool)

(assert (=> b!84788 (= e!55280 (contains!746 (toList!734 lt!39978) (tuple2!2183 lt!39443 (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16)))))))

(assert (= (and d!21809 res!43736) b!84787))

(assert (= (and b!84787 res!43735) b!84788))

(declare-fun m!88875 () Bool)

(assert (=> d!21809 m!88875))

(declare-fun m!88877 () Bool)

(assert (=> d!21809 m!88877))

(declare-fun m!88879 () Bool)

(assert (=> d!21809 m!88879))

(declare-fun m!88881 () Bool)

(assert (=> d!21809 m!88881))

(declare-fun m!88883 () Bool)

(assert (=> b!84787 m!88883))

(declare-fun m!88885 () Bool)

(assert (=> b!84788 m!88885))

(assert (=> b!83652 d!21809))

(declare-fun d!21811 () Bool)

(assert (=> d!21811 (= (apply!81 (+!105 lt!39459 (tuple2!2183 lt!39441 (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16)))) lt!39445) (apply!81 lt!39459 lt!39445))))

(declare-fun lt!39981 () Unit!2413)

(assert (=> d!21811 (= lt!39981 (choose!498 lt!39459 lt!39441 (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16)) lt!39445))))

(declare-fun e!55281 () Bool)

(assert (=> d!21811 e!55281))

(declare-fun res!43737 () Bool)

(assert (=> d!21811 (=> (not res!43737) (not e!55281))))

(assert (=> d!21811 (= res!43737 (contains!744 lt!39459 lt!39445))))

(assert (=> d!21811 (= (addApplyDifferent!57 lt!39459 lt!39441 (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16)) lt!39445) lt!39981)))

(declare-fun b!84789 () Bool)

(assert (=> b!84789 (= e!55281 (not (= lt!39445 lt!39441)))))

(assert (= (and d!21811 res!43737) b!84789))

(assert (=> d!21811 m!86947))

(assert (=> d!21811 m!86947))

(assert (=> d!21811 m!86949))

(declare-fun m!88887 () Bool)

(assert (=> d!21811 m!88887))

(assert (=> d!21811 m!86961))

(declare-fun m!88889 () Bool)

(assert (=> d!21811 m!88889))

(assert (=> b!83652 d!21811))

(declare-fun d!21813 () Bool)

(assert (=> d!21813 (= (apply!81 (+!105 lt!39453 (tuple2!2183 lt!39443 (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16)))) lt!39439) (apply!81 lt!39453 lt!39439))))

(declare-fun lt!39982 () Unit!2413)

(assert (=> d!21813 (= lt!39982 (choose!498 lt!39453 lt!39443 (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16)) lt!39439))))

(declare-fun e!55282 () Bool)

(assert (=> d!21813 e!55282))

(declare-fun res!43738 () Bool)

(assert (=> d!21813 (=> (not res!43738) (not e!55282))))

(assert (=> d!21813 (= res!43738 (contains!744 lt!39453 lt!39439))))

(assert (=> d!21813 (= (addApplyDifferent!57 lt!39453 lt!39443 (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16)) lt!39439) lt!39982)))

(declare-fun b!84790 () Bool)

(assert (=> b!84790 (= e!55282 (not (= lt!39439 lt!39443)))))

(assert (= (and d!21813 res!43738) b!84790))

(assert (=> d!21813 m!86933))

(assert (=> d!21813 m!86933))

(assert (=> d!21813 m!86939))

(declare-fun m!88891 () Bool)

(assert (=> d!21813 m!88891))

(assert (=> d!21813 m!86955))

(declare-fun m!88893 () Bool)

(assert (=> d!21813 m!88893))

(assert (=> b!83652 d!21813))

(declare-fun d!21815 () Bool)

(assert (=> d!21815 (= (apply!81 (+!105 lt!39446 (tuple2!2183 lt!39450 (ite (and c!13224 c!13215) lt!38784 (zeroValue!2210 newMap!16)))) lt!39455) (apply!81 lt!39446 lt!39455))))

(declare-fun lt!39983 () Unit!2413)

(assert (=> d!21815 (= lt!39983 (choose!498 lt!39446 lt!39450 (ite (and c!13224 c!13215) lt!38784 (zeroValue!2210 newMap!16)) lt!39455))))

(declare-fun e!55283 () Bool)

(assert (=> d!21815 e!55283))

(declare-fun res!43739 () Bool)

(assert (=> d!21815 (=> (not res!43739) (not e!55283))))

(assert (=> d!21815 (= res!43739 (contains!744 lt!39446 lt!39455))))

(assert (=> d!21815 (= (addApplyDifferent!57 lt!39446 lt!39450 (ite (and c!13224 c!13215) lt!38784 (zeroValue!2210 newMap!16)) lt!39455) lt!39983)))

(declare-fun b!84791 () Bool)

(assert (=> b!84791 (= e!55283 (not (= lt!39455 lt!39450)))))

(assert (= (and d!21815 res!43739) b!84791))

(assert (=> d!21815 m!86935))

(assert (=> d!21815 m!86935))

(assert (=> d!21815 m!86953))

(declare-fun m!88895 () Bool)

(assert (=> d!21815 m!88895))

(assert (=> d!21815 m!86937))

(declare-fun m!88897 () Bool)

(assert (=> d!21815 m!88897))

(assert (=> b!83652 d!21815))

(declare-fun d!21817 () Bool)

(declare-fun e!55284 () Bool)

(assert (=> d!21817 e!55284))

(declare-fun res!43741 () Bool)

(assert (=> d!21817 (=> (not res!43741) (not e!55284))))

(declare-fun lt!39985 () ListLongMap!1437)

(assert (=> d!21817 (= res!43741 (contains!744 lt!39985 (_1!1102 (tuple2!2183 lt!39441 (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16))))))))

(declare-fun lt!39987 () List!1504)

(assert (=> d!21817 (= lt!39985 (ListLongMap!1438 lt!39987))))

(declare-fun lt!39984 () Unit!2413)

(declare-fun lt!39986 () Unit!2413)

(assert (=> d!21817 (= lt!39984 lt!39986)))

(assert (=> d!21817 (= (getValueByKey!140 lt!39987 (_1!1102 (tuple2!2183 lt!39441 (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16))))) (Some!145 (_2!1102 (tuple2!2183 lt!39441 (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16))))))))

(assert (=> d!21817 (= lt!39986 (lemmaContainsTupThenGetReturnValue!57 lt!39987 (_1!1102 (tuple2!2183 lt!39441 (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16)))) (_2!1102 (tuple2!2183 lt!39441 (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16))))))))

(assert (=> d!21817 (= lt!39987 (insertStrictlySorted!60 (toList!734 lt!39459) (_1!1102 (tuple2!2183 lt!39441 (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16)))) (_2!1102 (tuple2!2183 lt!39441 (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16))))))))

(assert (=> d!21817 (= (+!105 lt!39459 (tuple2!2183 lt!39441 (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16)))) lt!39985)))

(declare-fun b!84792 () Bool)

(declare-fun res!43740 () Bool)

(assert (=> b!84792 (=> (not res!43740) (not e!55284))))

(assert (=> b!84792 (= res!43740 (= (getValueByKey!140 (toList!734 lt!39985) (_1!1102 (tuple2!2183 lt!39441 (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16))))) (Some!145 (_2!1102 (tuple2!2183 lt!39441 (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16)))))))))

(declare-fun b!84793 () Bool)

(assert (=> b!84793 (= e!55284 (contains!746 (toList!734 lt!39985) (tuple2!2183 lt!39441 (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16)))))))

(assert (= (and d!21817 res!43741) b!84792))

(assert (= (and b!84792 res!43740) b!84793))

(declare-fun m!88899 () Bool)

(assert (=> d!21817 m!88899))

(declare-fun m!88901 () Bool)

(assert (=> d!21817 m!88901))

(declare-fun m!88903 () Bool)

(assert (=> d!21817 m!88903))

(declare-fun m!88905 () Bool)

(assert (=> d!21817 m!88905))

(declare-fun m!88907 () Bool)

(assert (=> b!84792 m!88907))

(declare-fun m!88909 () Bool)

(assert (=> b!84793 m!88909))

(assert (=> b!83652 d!21817))

(declare-fun b!84794 () Bool)

(declare-fun e!55288 () ListLongMap!1437)

(assert (=> b!84794 (= e!55288 (ListLongMap!1438 Nil!1501))))

(declare-fun b!84795 () Bool)

(declare-fun e!55291 () Bool)

(declare-fun e!55290 () Bool)

(assert (=> b!84795 (= e!55291 e!55290)))

(assert (=> b!84795 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))))))

(declare-fun res!43745 () Bool)

(declare-fun lt!39992 () ListLongMap!1437)

(assert (=> b!84795 (= res!43745 (contains!744 lt!39992 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!84795 (=> (not res!43745) (not e!55290))))

(declare-fun b!84796 () Bool)

(declare-fun e!55289 () Bool)

(assert (=> b!84796 (= e!55291 e!55289)))

(declare-fun c!13710 () Bool)

(assert (=> b!84796 (= c!13710 (bvslt #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))))))

(declare-fun b!84797 () Bool)

(declare-fun e!55286 () ListLongMap!1437)

(assert (=> b!84797 (= e!55288 e!55286)))

(declare-fun c!13711 () Bool)

(assert (=> b!84797 (= c!13711 (validKeyInArray!0 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!84798 () Bool)

(declare-fun call!7996 () ListLongMap!1437)

(assert (=> b!84798 (= e!55286 call!7996)))

(declare-fun bm!7993 () Bool)

(assert (=> bm!7993 (= call!7996 (getCurrentListMapNoExtraKeys!70 (_keys!3984 newMap!16) (ite (or c!13224 c!13217) (_values!2299 newMap!16) (array!4000 (store (arr!1905 (_values!2299 newMap!16)) (index!3081 lt!38961) (ValueCellFull!920 lt!38784)) (size!2148 (_values!2299 newMap!16)))) (mask!6334 newMap!16) (ite c!13224 (ite c!13215 lt!38982 lt!38985) (extraKeys!2159 newMap!16)) (ite (and c!13224 c!13215) lt!38784 (zeroValue!2210 newMap!16)) (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2316 newMap!16)))))

(declare-fun b!84799 () Bool)

(declare-fun res!43743 () Bool)

(declare-fun e!55285 () Bool)

(assert (=> b!84799 (=> (not res!43743) (not e!55285))))

(assert (=> b!84799 (= res!43743 (not (contains!744 lt!39992 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!84800 () Bool)

(declare-fun lt!39993 () Unit!2413)

(declare-fun lt!39994 () Unit!2413)

(assert (=> b!84800 (= lt!39993 lt!39994)))

(declare-fun lt!39988 () ListLongMap!1437)

(declare-fun lt!39990 () (_ BitVec 64))

(declare-fun lt!39991 () V!3017)

(declare-fun lt!39989 () (_ BitVec 64))

(assert (=> b!84800 (not (contains!744 (+!105 lt!39988 (tuple2!2183 lt!39989 lt!39991)) lt!39990))))

(assert (=> b!84800 (= lt!39994 (addStillNotContains!32 lt!39988 lt!39989 lt!39991 lt!39990))))

(assert (=> b!84800 (= lt!39990 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!84800 (= lt!39991 (get!1198 (select (arr!1905 (ite (or c!13224 c!13217) (_values!2299 newMap!16) (array!4000 (store (arr!1905 (_values!2299 newMap!16)) (index!3081 lt!38961) (ValueCellFull!920 lt!38784)) (size!2148 (_values!2299 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!343 (defaultEntry!2316 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!84800 (= lt!39989 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!84800 (= lt!39988 call!7996)))

(assert (=> b!84800 (= e!55286 (+!105 call!7996 (tuple2!2183 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000) (get!1198 (select (arr!1905 (ite (or c!13224 c!13217) (_values!2299 newMap!16) (array!4000 (store (arr!1905 (_values!2299 newMap!16)) (index!3081 lt!38961) (ValueCellFull!920 lt!38784)) (size!2148 (_values!2299 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!343 (defaultEntry!2316 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!84801 () Bool)

(declare-fun e!55287 () Bool)

(assert (=> b!84801 (= e!55287 (validKeyInArray!0 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!84801 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!84802 () Bool)

(assert (=> b!84802 (= e!55285 e!55291)))

(declare-fun c!13709 () Bool)

(assert (=> b!84802 (= c!13709 e!55287)))

(declare-fun res!43744 () Bool)

(assert (=> b!84802 (=> (not res!43744) (not e!55287))))

(assert (=> b!84802 (= res!43744 (bvslt #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))))))

(declare-fun b!84803 () Bool)

(assert (=> b!84803 (= e!55289 (= lt!39992 (getCurrentListMapNoExtraKeys!70 (_keys!3984 newMap!16) (ite (or c!13224 c!13217) (_values!2299 newMap!16) (array!4000 (store (arr!1905 (_values!2299 newMap!16)) (index!3081 lt!38961) (ValueCellFull!920 lt!38784)) (size!2148 (_values!2299 newMap!16)))) (mask!6334 newMap!16) (ite c!13224 (ite c!13215 lt!38982 lt!38985) (extraKeys!2159 newMap!16)) (ite (and c!13224 c!13215) lt!38784 (zeroValue!2210 newMap!16)) (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2316 newMap!16))))))

(declare-fun b!84804 () Bool)

(assert (=> b!84804 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))))))

(assert (=> b!84804 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2148 (ite (or c!13224 c!13217) (_values!2299 newMap!16) (array!4000 (store (arr!1905 (_values!2299 newMap!16)) (index!3081 lt!38961) (ValueCellFull!920 lt!38784)) (size!2148 (_values!2299 newMap!16)))))))))

(assert (=> b!84804 (= e!55290 (= (apply!81 lt!39992 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)) (get!1198 (select (arr!1905 (ite (or c!13224 c!13217) (_values!2299 newMap!16) (array!4000 (store (arr!1905 (_values!2299 newMap!16)) (index!3081 lt!38961) (ValueCellFull!920 lt!38784)) (size!2148 (_values!2299 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!343 (defaultEntry!2316 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!21819 () Bool)

(assert (=> d!21819 e!55285))

(declare-fun res!43742 () Bool)

(assert (=> d!21819 (=> (not res!43742) (not e!55285))))

(assert (=> d!21819 (= res!43742 (not (contains!744 lt!39992 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!21819 (= lt!39992 e!55288)))

(declare-fun c!13708 () Bool)

(assert (=> d!21819 (= c!13708 (bvsge #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))))))

(assert (=> d!21819 (validMask!0 (mask!6334 newMap!16))))

(assert (=> d!21819 (= (getCurrentListMapNoExtraKeys!70 (_keys!3984 newMap!16) (ite (or c!13224 c!13217) (_values!2299 newMap!16) (array!4000 (store (arr!1905 (_values!2299 newMap!16)) (index!3081 lt!38961) (ValueCellFull!920 lt!38784)) (size!2148 (_values!2299 newMap!16)))) (mask!6334 newMap!16) (ite c!13224 (ite c!13215 lt!38982 lt!38985) (extraKeys!2159 newMap!16)) (ite (and c!13224 c!13215) lt!38784 (zeroValue!2210 newMap!16)) (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) lt!39992)))

(declare-fun b!84805 () Bool)

(assert (=> b!84805 (= e!55289 (isEmpty!338 lt!39992))))

(assert (= (and d!21819 c!13708) b!84794))

(assert (= (and d!21819 (not c!13708)) b!84797))

(assert (= (and b!84797 c!13711) b!84800))

(assert (= (and b!84797 (not c!13711)) b!84798))

(assert (= (or b!84800 b!84798) bm!7993))

(assert (= (and d!21819 res!43742) b!84799))

(assert (= (and b!84799 res!43743) b!84802))

(assert (= (and b!84802 res!43744) b!84801))

(assert (= (and b!84802 c!13709) b!84795))

(assert (= (and b!84802 (not c!13709)) b!84796))

(assert (= (and b!84795 res!43745) b!84804))

(assert (= (and b!84796 c!13710) b!84803))

(assert (= (and b!84796 (not c!13710)) b!84805))

(declare-fun b_lambda!3753 () Bool)

(assert (=> (not b_lambda!3753) (not b!84800)))

(assert (=> b!84800 t!5209))

(declare-fun b_and!5137 () Bool)

(assert (= b_and!5133 (and (=> t!5209 result!2895) b_and!5137)))

(assert (=> b!84800 t!5211))

(declare-fun b_and!5139 () Bool)

(assert (= b_and!5135 (and (=> t!5211 result!2897) b_and!5139)))

(declare-fun b_lambda!3755 () Bool)

(assert (=> (not b_lambda!3755) (not b!84804)))

(assert (=> b!84804 t!5209))

(declare-fun b_and!5141 () Bool)

(assert (= b_and!5137 (and (=> t!5209 result!2895) b_and!5141)))

(assert (=> b!84804 t!5211))

(declare-fun b_and!5143 () Bool)

(assert (= b_and!5139 (and (=> t!5211 result!2897) b_and!5143)))

(assert (=> b!84795 m!86211))

(assert (=> b!84795 m!86211))

(declare-fun m!88911 () Bool)

(assert (=> b!84795 m!88911))

(declare-fun m!88913 () Bool)

(assert (=> b!84805 m!88913))

(declare-fun m!88915 () Bool)

(assert (=> b!84799 m!88915))

(declare-fun m!88917 () Bool)

(assert (=> bm!7993 m!88917))

(assert (=> b!84803 m!88917))

(declare-fun m!88919 () Bool)

(assert (=> d!21819 m!88919))

(assert (=> d!21819 m!86223))

(assert (=> b!84801 m!86211))

(assert (=> b!84801 m!86211))

(assert (=> b!84801 m!86213))

(assert (=> b!84804 m!86211))

(declare-fun m!88921 () Bool)

(assert (=> b!84804 m!88921))

(assert (=> b!84804 m!86211))

(assert (=> b!84804 m!86923))

(assert (=> b!84804 m!86219))

(assert (=> b!84804 m!86923))

(assert (=> b!84804 m!86219))

(assert (=> b!84804 m!86927))

(assert (=> b!84797 m!86211))

(assert (=> b!84797 m!86211))

(assert (=> b!84797 m!86213))

(declare-fun m!88923 () Bool)

(assert (=> b!84800 m!88923))

(assert (=> b!84800 m!88923))

(declare-fun m!88925 () Bool)

(assert (=> b!84800 m!88925))

(assert (=> b!84800 m!86211))

(declare-fun m!88927 () Bool)

(assert (=> b!84800 m!88927))

(assert (=> b!84800 m!86219))

(assert (=> b!84800 m!86923))

(assert (=> b!84800 m!86219))

(assert (=> b!84800 m!86927))

(declare-fun m!88929 () Bool)

(assert (=> b!84800 m!88929))

(assert (=> b!84800 m!86923))

(assert (=> b!83652 d!21819))

(declare-fun d!21821 () Bool)

(assert (=> d!21821 (= (apply!81 (+!105 lt!39453 (tuple2!2183 lt!39443 (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16)))) lt!39439) (get!1201 (getValueByKey!140 (toList!734 (+!105 lt!39453 (tuple2!2183 lt!39443 (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16))))) lt!39439)))))

(declare-fun bs!3589 () Bool)

(assert (= bs!3589 d!21821))

(declare-fun m!88931 () Bool)

(assert (=> bs!3589 m!88931))

(assert (=> bs!3589 m!88931))

(declare-fun m!88933 () Bool)

(assert (=> bs!3589 m!88933))

(assert (=> b!83652 d!21821))

(declare-fun d!21823 () Bool)

(assert (=> d!21823 (= (apply!81 (+!105 lt!39446 (tuple2!2183 lt!39450 (ite (and c!13224 c!13215) lt!38784 (zeroValue!2210 newMap!16)))) lt!39455) (get!1201 (getValueByKey!140 (toList!734 (+!105 lt!39446 (tuple2!2183 lt!39450 (ite (and c!13224 c!13215) lt!38784 (zeroValue!2210 newMap!16))))) lt!39455)))))

(declare-fun bs!3590 () Bool)

(assert (= bs!3590 d!21823))

(declare-fun m!88935 () Bool)

(assert (=> bs!3590 m!88935))

(assert (=> bs!3590 m!88935))

(declare-fun m!88937 () Bool)

(assert (=> bs!3590 m!88937))

(assert (=> b!83652 d!21823))

(declare-fun d!21825 () Bool)

(assert (=> d!21825 (contains!744 (+!105 lt!39447 (tuple2!2183 lt!39440 (ite (and c!13224 c!13215) lt!38784 (zeroValue!2210 newMap!16)))) lt!39456)))

(declare-fun lt!39995 () Unit!2413)

(assert (=> d!21825 (= lt!39995 (choose!497 lt!39447 lt!39440 (ite (and c!13224 c!13215) lt!38784 (zeroValue!2210 newMap!16)) lt!39456))))

(assert (=> d!21825 (contains!744 lt!39447 lt!39456)))

(assert (=> d!21825 (= (addStillContains!57 lt!39447 lt!39440 (ite (and c!13224 c!13215) lt!38784 (zeroValue!2210 newMap!16)) lt!39456) lt!39995)))

(declare-fun bs!3591 () Bool)

(assert (= bs!3591 d!21825))

(assert (=> bs!3591 m!86941))

(assert (=> bs!3591 m!86941))

(assert (=> bs!3591 m!86943))

(declare-fun m!88939 () Bool)

(assert (=> bs!3591 m!88939))

(declare-fun m!88941 () Bool)

(assert (=> bs!3591 m!88941))

(assert (=> b!83652 d!21825))

(declare-fun d!21827 () Bool)

(declare-fun e!55293 () Bool)

(assert (=> d!21827 e!55293))

(declare-fun res!43746 () Bool)

(assert (=> d!21827 (=> res!43746 e!55293)))

(declare-fun lt!39996 () Bool)

(assert (=> d!21827 (= res!43746 (not lt!39996))))

(declare-fun lt!39999 () Bool)

(assert (=> d!21827 (= lt!39996 lt!39999)))

(declare-fun lt!39998 () Unit!2413)

(declare-fun e!55292 () Unit!2413)

(assert (=> d!21827 (= lt!39998 e!55292)))

(declare-fun c!13712 () Bool)

(assert (=> d!21827 (= c!13712 lt!39999)))

(assert (=> d!21827 (= lt!39999 (containsKey!143 (toList!734 (+!105 lt!39447 (tuple2!2183 lt!39440 (ite (and c!13224 c!13215) lt!38784 (zeroValue!2210 newMap!16))))) lt!39456))))

(assert (=> d!21827 (= (contains!744 (+!105 lt!39447 (tuple2!2183 lt!39440 (ite (and c!13224 c!13215) lt!38784 (zeroValue!2210 newMap!16)))) lt!39456) lt!39996)))

(declare-fun b!84806 () Bool)

(declare-fun lt!39997 () Unit!2413)

(assert (=> b!84806 (= e!55292 lt!39997)))

(assert (=> b!84806 (= lt!39997 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 (+!105 lt!39447 (tuple2!2183 lt!39440 (ite (and c!13224 c!13215) lt!38784 (zeroValue!2210 newMap!16))))) lt!39456))))

(assert (=> b!84806 (isDefined!92 (getValueByKey!140 (toList!734 (+!105 lt!39447 (tuple2!2183 lt!39440 (ite (and c!13224 c!13215) lt!38784 (zeroValue!2210 newMap!16))))) lt!39456))))

(declare-fun b!84807 () Bool)

(declare-fun Unit!2482 () Unit!2413)

(assert (=> b!84807 (= e!55292 Unit!2482)))

(declare-fun b!84808 () Bool)

(assert (=> b!84808 (= e!55293 (isDefined!92 (getValueByKey!140 (toList!734 (+!105 lt!39447 (tuple2!2183 lt!39440 (ite (and c!13224 c!13215) lt!38784 (zeroValue!2210 newMap!16))))) lt!39456)))))

(assert (= (and d!21827 c!13712) b!84806))

(assert (= (and d!21827 (not c!13712)) b!84807))

(assert (= (and d!21827 (not res!43746)) b!84808))

(declare-fun m!88943 () Bool)

(assert (=> d!21827 m!88943))

(declare-fun m!88945 () Bool)

(assert (=> b!84806 m!88945))

(declare-fun m!88947 () Bool)

(assert (=> b!84806 m!88947))

(assert (=> b!84806 m!88947))

(declare-fun m!88949 () Bool)

(assert (=> b!84806 m!88949))

(assert (=> b!84808 m!88947))

(assert (=> b!84808 m!88947))

(assert (=> b!84808 m!88949))

(assert (=> b!83652 d!21827))

(declare-fun d!21829 () Bool)

(assert (=> d!21829 (= (apply!81 (+!105 lt!39459 (tuple2!2183 lt!39441 (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16)))) lt!39445) (get!1201 (getValueByKey!140 (toList!734 (+!105 lt!39459 (tuple2!2183 lt!39441 (ite c!13224 (ite c!13215 (minValue!2210 newMap!16) lt!38784) (minValue!2210 newMap!16))))) lt!39445)))))

(declare-fun bs!3592 () Bool)

(assert (= bs!3592 d!21829))

(declare-fun m!88951 () Bool)

(assert (=> bs!3592 m!88951))

(assert (=> bs!3592 m!88951))

(declare-fun m!88953 () Bool)

(assert (=> bs!3592 m!88953))

(assert (=> b!83652 d!21829))

(declare-fun d!21831 () Bool)

(assert (=> d!21831 (= (apply!81 lt!39459 lt!39445) (get!1201 (getValueByKey!140 (toList!734 lt!39459) lt!39445)))))

(declare-fun bs!3593 () Bool)

(assert (= bs!3593 d!21831))

(declare-fun m!88955 () Bool)

(assert (=> bs!3593 m!88955))

(assert (=> bs!3593 m!88955))

(declare-fun m!88957 () Bool)

(assert (=> bs!3593 m!88957))

(assert (=> b!83652 d!21831))

(declare-fun d!21833 () Bool)

(declare-fun e!55294 () Bool)

(assert (=> d!21833 e!55294))

(declare-fun res!43748 () Bool)

(assert (=> d!21833 (=> (not res!43748) (not e!55294))))

(declare-fun lt!40001 () ListLongMap!1437)

(assert (=> d!21833 (= res!43748 (contains!744 lt!40001 (_1!1102 (tuple2!2183 lt!39440 (ite (and c!13224 c!13215) lt!38784 (zeroValue!2210 newMap!16))))))))

(declare-fun lt!40003 () List!1504)

(assert (=> d!21833 (= lt!40001 (ListLongMap!1438 lt!40003))))

(declare-fun lt!40000 () Unit!2413)

(declare-fun lt!40002 () Unit!2413)

(assert (=> d!21833 (= lt!40000 lt!40002)))

(assert (=> d!21833 (= (getValueByKey!140 lt!40003 (_1!1102 (tuple2!2183 lt!39440 (ite (and c!13224 c!13215) lt!38784 (zeroValue!2210 newMap!16))))) (Some!145 (_2!1102 (tuple2!2183 lt!39440 (ite (and c!13224 c!13215) lt!38784 (zeroValue!2210 newMap!16))))))))

(assert (=> d!21833 (= lt!40002 (lemmaContainsTupThenGetReturnValue!57 lt!40003 (_1!1102 (tuple2!2183 lt!39440 (ite (and c!13224 c!13215) lt!38784 (zeroValue!2210 newMap!16)))) (_2!1102 (tuple2!2183 lt!39440 (ite (and c!13224 c!13215) lt!38784 (zeroValue!2210 newMap!16))))))))

(assert (=> d!21833 (= lt!40003 (insertStrictlySorted!60 (toList!734 lt!39447) (_1!1102 (tuple2!2183 lt!39440 (ite (and c!13224 c!13215) lt!38784 (zeroValue!2210 newMap!16)))) (_2!1102 (tuple2!2183 lt!39440 (ite (and c!13224 c!13215) lt!38784 (zeroValue!2210 newMap!16))))))))

(assert (=> d!21833 (= (+!105 lt!39447 (tuple2!2183 lt!39440 (ite (and c!13224 c!13215) lt!38784 (zeroValue!2210 newMap!16)))) lt!40001)))

(declare-fun b!84809 () Bool)

(declare-fun res!43747 () Bool)

(assert (=> b!84809 (=> (not res!43747) (not e!55294))))

(assert (=> b!84809 (= res!43747 (= (getValueByKey!140 (toList!734 lt!40001) (_1!1102 (tuple2!2183 lt!39440 (ite (and c!13224 c!13215) lt!38784 (zeroValue!2210 newMap!16))))) (Some!145 (_2!1102 (tuple2!2183 lt!39440 (ite (and c!13224 c!13215) lt!38784 (zeroValue!2210 newMap!16)))))))))

(declare-fun b!84810 () Bool)

(assert (=> b!84810 (= e!55294 (contains!746 (toList!734 lt!40001) (tuple2!2183 lt!39440 (ite (and c!13224 c!13215) lt!38784 (zeroValue!2210 newMap!16)))))))

(assert (= (and d!21833 res!43748) b!84809))

(assert (= (and b!84809 res!43747) b!84810))

(declare-fun m!88959 () Bool)

(assert (=> d!21833 m!88959))

(declare-fun m!88961 () Bool)

(assert (=> d!21833 m!88961))

(declare-fun m!88963 () Bool)

(assert (=> d!21833 m!88963))

(declare-fun m!88965 () Bool)

(assert (=> d!21833 m!88965))

(declare-fun m!88967 () Bool)

(assert (=> b!84809 m!88967))

(declare-fun m!88969 () Bool)

(assert (=> b!84810 m!88969))

(assert (=> b!83652 d!21833))

(declare-fun d!21835 () Bool)

(assert (=> d!21835 (= (apply!81 lt!39446 lt!39455) (get!1201 (getValueByKey!140 (toList!734 lt!39446) lt!39455)))))

(declare-fun bs!3594 () Bool)

(assert (= bs!3594 d!21835))

(declare-fun m!88971 () Bool)

(assert (=> bs!3594 m!88971))

(assert (=> bs!3594 m!88971))

(declare-fun m!88973 () Bool)

(assert (=> bs!3594 m!88973))

(assert (=> b!83652 d!21835))

(declare-fun d!21837 () Bool)

(declare-fun e!55295 () Bool)

(assert (=> d!21837 e!55295))

(declare-fun res!43750 () Bool)

(assert (=> d!21837 (=> (not res!43750) (not e!55295))))

(declare-fun lt!40005 () ListLongMap!1437)

(assert (=> d!21837 (= res!43750 (contains!744 lt!40005 (_1!1102 (tuple2!2183 lt!39450 (ite (and c!13224 c!13215) lt!38784 (zeroValue!2210 newMap!16))))))))

(declare-fun lt!40007 () List!1504)

(assert (=> d!21837 (= lt!40005 (ListLongMap!1438 lt!40007))))

(declare-fun lt!40004 () Unit!2413)

(declare-fun lt!40006 () Unit!2413)

(assert (=> d!21837 (= lt!40004 lt!40006)))

(assert (=> d!21837 (= (getValueByKey!140 lt!40007 (_1!1102 (tuple2!2183 lt!39450 (ite (and c!13224 c!13215) lt!38784 (zeroValue!2210 newMap!16))))) (Some!145 (_2!1102 (tuple2!2183 lt!39450 (ite (and c!13224 c!13215) lt!38784 (zeroValue!2210 newMap!16))))))))

(assert (=> d!21837 (= lt!40006 (lemmaContainsTupThenGetReturnValue!57 lt!40007 (_1!1102 (tuple2!2183 lt!39450 (ite (and c!13224 c!13215) lt!38784 (zeroValue!2210 newMap!16)))) (_2!1102 (tuple2!2183 lt!39450 (ite (and c!13224 c!13215) lt!38784 (zeroValue!2210 newMap!16))))))))

(assert (=> d!21837 (= lt!40007 (insertStrictlySorted!60 (toList!734 lt!39446) (_1!1102 (tuple2!2183 lt!39450 (ite (and c!13224 c!13215) lt!38784 (zeroValue!2210 newMap!16)))) (_2!1102 (tuple2!2183 lt!39450 (ite (and c!13224 c!13215) lt!38784 (zeroValue!2210 newMap!16))))))))

(assert (=> d!21837 (= (+!105 lt!39446 (tuple2!2183 lt!39450 (ite (and c!13224 c!13215) lt!38784 (zeroValue!2210 newMap!16)))) lt!40005)))

(declare-fun b!84811 () Bool)

(declare-fun res!43749 () Bool)

(assert (=> b!84811 (=> (not res!43749) (not e!55295))))

(assert (=> b!84811 (= res!43749 (= (getValueByKey!140 (toList!734 lt!40005) (_1!1102 (tuple2!2183 lt!39450 (ite (and c!13224 c!13215) lt!38784 (zeroValue!2210 newMap!16))))) (Some!145 (_2!1102 (tuple2!2183 lt!39450 (ite (and c!13224 c!13215) lt!38784 (zeroValue!2210 newMap!16)))))))))

(declare-fun b!84812 () Bool)

(assert (=> b!84812 (= e!55295 (contains!746 (toList!734 lt!40005) (tuple2!2183 lt!39450 (ite (and c!13224 c!13215) lt!38784 (zeroValue!2210 newMap!16)))))))

(assert (= (and d!21837 res!43750) b!84811))

(assert (= (and b!84811 res!43749) b!84812))

(declare-fun m!88975 () Bool)

(assert (=> d!21837 m!88975))

(declare-fun m!88977 () Bool)

(assert (=> d!21837 m!88977))

(declare-fun m!88979 () Bool)

(assert (=> d!21837 m!88979))

(declare-fun m!88981 () Bool)

(assert (=> d!21837 m!88981))

(declare-fun m!88983 () Bool)

(assert (=> b!84811 m!88983))

(declare-fun m!88985 () Bool)

(assert (=> b!84812 m!88985))

(assert (=> b!83652 d!21837))

(declare-fun d!21839 () Bool)

(assert (=> d!21839 (= (apply!81 lt!39453 lt!39439) (get!1201 (getValueByKey!140 (toList!734 lt!39453) lt!39439)))))

(declare-fun bs!3595 () Bool)

(assert (= bs!3595 d!21839))

(declare-fun m!88987 () Bool)

(assert (=> bs!3595 m!88987))

(assert (=> bs!3595 m!88987))

(declare-fun m!88989 () Bool)

(assert (=> bs!3595 m!88989))

(assert (=> b!83652 d!21839))

(declare-fun d!21841 () Bool)

(assert (=> d!21841 (= (size!2153 newMap!16) (bvadd (_size!423 newMap!16) (bvsdiv (bvadd (extraKeys!2159 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!83304 d!21841))

(declare-fun d!21843 () Bool)

(assert (=> d!21843 (= (apply!81 lt!39241 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)) (get!1201 (getValueByKey!140 (toList!734 lt!39241) (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3596 () Bool)

(assert (= bs!3596 d!21843))

(assert (=> bs!3596 m!86211))

(assert (=> bs!3596 m!87737))

(assert (=> bs!3596 m!87737))

(declare-fun m!88991 () Bool)

(assert (=> bs!3596 m!88991))

(assert (=> b!83436 d!21843))

(declare-fun d!21845 () Bool)

(declare-fun c!13713 () Bool)

(assert (=> d!21845 (= c!13713 ((_ is ValueCellFull!920) (select (arr!1905 (ite c!13224 (_values!2299 newMap!16) lt!38974)) #b00000000000000000000000000000000)))))

(declare-fun e!55296 () V!3017)

(assert (=> d!21845 (= (get!1198 (select (arr!1905 (ite c!13224 (_values!2299 newMap!16) lt!38974)) #b00000000000000000000000000000000) (dynLambda!343 (defaultEntry!2316 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!55296)))

(declare-fun b!84813 () Bool)

(assert (=> b!84813 (= e!55296 (get!1199 (select (arr!1905 (ite c!13224 (_values!2299 newMap!16) lt!38974)) #b00000000000000000000000000000000) (dynLambda!343 (defaultEntry!2316 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!84814 () Bool)

(assert (=> b!84814 (= e!55296 (get!1200 (select (arr!1905 (ite c!13224 (_values!2299 newMap!16) lt!38974)) #b00000000000000000000000000000000) (dynLambda!343 (defaultEntry!2316 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!21845 c!13713) b!84813))

(assert (= (and d!21845 (not c!13713)) b!84814))

(assert (=> b!84813 m!86487))

(assert (=> b!84813 m!86219))

(declare-fun m!88993 () Bool)

(assert (=> b!84813 m!88993))

(assert (=> b!84814 m!86487))

(assert (=> b!84814 m!86219))

(declare-fun m!88995 () Bool)

(assert (=> b!84814 m!88995))

(assert (=> b!83436 d!21845))

(assert (=> b!83598 d!21329))

(declare-fun b!84817 () Bool)

(declare-fun e!55298 () Option!146)

(assert (=> b!84817 (= e!55298 (getValueByKey!140 (t!5196 (t!5196 lt!39006)) (_1!1102 lt!38779)))))

(declare-fun d!21847 () Bool)

(declare-fun c!13714 () Bool)

(assert (=> d!21847 (= c!13714 (and ((_ is Cons!1500) (t!5196 lt!39006)) (= (_1!1102 (h!2090 (t!5196 lt!39006))) (_1!1102 lt!38779))))))

(declare-fun e!55297 () Option!146)

(assert (=> d!21847 (= (getValueByKey!140 (t!5196 lt!39006) (_1!1102 lt!38779)) e!55297)))

(declare-fun b!84815 () Bool)

(assert (=> b!84815 (= e!55297 (Some!145 (_2!1102 (h!2090 (t!5196 lt!39006)))))))

(declare-fun b!84816 () Bool)

(assert (=> b!84816 (= e!55297 e!55298)))

(declare-fun c!13715 () Bool)

(assert (=> b!84816 (= c!13715 (and ((_ is Cons!1500) (t!5196 lt!39006)) (not (= (_1!1102 (h!2090 (t!5196 lt!39006))) (_1!1102 lt!38779)))))))

(declare-fun b!84818 () Bool)

(assert (=> b!84818 (= e!55298 None!144)))

(assert (= (and d!21847 c!13714) b!84815))

(assert (= (and d!21847 (not c!13714)) b!84816))

(assert (= (and b!84816 c!13715) b!84817))

(assert (= (and b!84816 (not c!13715)) b!84818))

(declare-fun m!88997 () Bool)

(assert (=> b!84817 m!88997))

(assert (=> b!83629 d!21847))

(declare-fun b!84821 () Bool)

(declare-fun e!55300 () Option!146)

(assert (=> b!84821 (= e!55300 (getValueByKey!140 (t!5196 (t!5196 lt!39014)) (_1!1102 lt!38772)))))

(declare-fun d!21849 () Bool)

(declare-fun c!13716 () Bool)

(assert (=> d!21849 (= c!13716 (and ((_ is Cons!1500) (t!5196 lt!39014)) (= (_1!1102 (h!2090 (t!5196 lt!39014))) (_1!1102 lt!38772))))))

(declare-fun e!55299 () Option!146)

(assert (=> d!21849 (= (getValueByKey!140 (t!5196 lt!39014) (_1!1102 lt!38772)) e!55299)))

(declare-fun b!84819 () Bool)

(assert (=> b!84819 (= e!55299 (Some!145 (_2!1102 (h!2090 (t!5196 lt!39014)))))))

(declare-fun b!84820 () Bool)

(assert (=> b!84820 (= e!55299 e!55300)))

(declare-fun c!13717 () Bool)

(assert (=> b!84820 (= c!13717 (and ((_ is Cons!1500) (t!5196 lt!39014)) (not (= (_1!1102 (h!2090 (t!5196 lt!39014))) (_1!1102 lt!38772)))))))

(declare-fun b!84822 () Bool)

(assert (=> b!84822 (= e!55300 None!144)))

(assert (= (and d!21849 c!13716) b!84819))

(assert (= (and d!21849 (not c!13716)) b!84820))

(assert (= (and b!84820 c!13717) b!84821))

(assert (= (and b!84820 (not c!13717)) b!84822))

(declare-fun m!88999 () Bool)

(assert (=> b!84821 m!88999))

(assert (=> b!83336 d!21849))

(declare-fun b!84825 () Bool)

(declare-fun e!55302 () Option!146)

(assert (=> b!84825 (= e!55302 (getValueByKey!140 (t!5196 (t!5196 (toList!734 lt!39008))) (_1!1102 lt!38775)))))

(declare-fun d!21851 () Bool)

(declare-fun c!13718 () Bool)

(assert (=> d!21851 (= c!13718 (and ((_ is Cons!1500) (t!5196 (toList!734 lt!39008))) (= (_1!1102 (h!2090 (t!5196 (toList!734 lt!39008)))) (_1!1102 lt!38775))))))

(declare-fun e!55301 () Option!146)

(assert (=> d!21851 (= (getValueByKey!140 (t!5196 (toList!734 lt!39008)) (_1!1102 lt!38775)) e!55301)))

(declare-fun b!84823 () Bool)

(assert (=> b!84823 (= e!55301 (Some!145 (_2!1102 (h!2090 (t!5196 (toList!734 lt!39008))))))))

(declare-fun b!84824 () Bool)

(assert (=> b!84824 (= e!55301 e!55302)))

(declare-fun c!13719 () Bool)

(assert (=> b!84824 (= c!13719 (and ((_ is Cons!1500) (t!5196 (toList!734 lt!39008))) (not (= (_1!1102 (h!2090 (t!5196 (toList!734 lt!39008)))) (_1!1102 lt!38775)))))))

(declare-fun b!84826 () Bool)

(assert (=> b!84826 (= e!55302 None!144)))

(assert (= (and d!21851 c!13718) b!84823))

(assert (= (and d!21851 (not c!13718)) b!84824))

(assert (= (and b!84824 c!13719) b!84825))

(assert (= (and b!84824 (not c!13719)) b!84826))

(declare-fun m!89001 () Bool)

(assert (=> b!84825 m!89001))

(assert (=> b!83235 d!21851))

(declare-fun d!21853 () Bool)

(declare-fun lt!40008 () Bool)

(assert (=> d!21853 (= lt!40008 (select (content!89 lt!39465) (tuple2!2183 (_1!1102 lt!38775) (_2!1102 lt!38775))))))

(declare-fun e!55303 () Bool)

(assert (=> d!21853 (= lt!40008 e!55303)))

(declare-fun res!43752 () Bool)

(assert (=> d!21853 (=> (not res!43752) (not e!55303))))

(assert (=> d!21853 (= res!43752 ((_ is Cons!1500) lt!39465))))

(assert (=> d!21853 (= (contains!746 lt!39465 (tuple2!2183 (_1!1102 lt!38775) (_2!1102 lt!38775))) lt!40008)))

(declare-fun b!84827 () Bool)

(declare-fun e!55304 () Bool)

(assert (=> b!84827 (= e!55303 e!55304)))

(declare-fun res!43751 () Bool)

(assert (=> b!84827 (=> res!43751 e!55304)))

(assert (=> b!84827 (= res!43751 (= (h!2090 lt!39465) (tuple2!2183 (_1!1102 lt!38775) (_2!1102 lt!38775))))))

(declare-fun b!84828 () Bool)

(assert (=> b!84828 (= e!55304 (contains!746 (t!5196 lt!39465) (tuple2!2183 (_1!1102 lt!38775) (_2!1102 lt!38775))))))

(assert (= (and d!21853 res!43752) b!84827))

(assert (= (and b!84827 (not res!43751)) b!84828))

(declare-fun m!89003 () Bool)

(assert (=> d!21853 m!89003))

(declare-fun m!89005 () Bool)

(assert (=> d!21853 m!89005))

(declare-fun m!89007 () Bool)

(assert (=> b!84828 m!89007))

(assert (=> b!83680 d!21853))

(assert (=> d!21149 d!21147))

(declare-fun d!21855 () Bool)

(assert (=> d!21855 (= (getValueByKey!140 lt!39055 (_1!1102 lt!38775)) (Some!145 (_2!1102 lt!38775)))))

(assert (=> d!21855 true))

(declare-fun _$22!413 () Unit!2413)

(assert (=> d!21855 (= (choose!493 lt!39055 (_1!1102 lt!38775) (_2!1102 lt!38775)) _$22!413)))

(declare-fun bs!3597 () Bool)

(assert (= bs!3597 d!21855))

(assert (=> bs!3597 m!86121))

(assert (=> d!21149 d!21855))

(declare-fun d!21857 () Bool)

(declare-fun res!43753 () Bool)

(declare-fun e!55305 () Bool)

(assert (=> d!21857 (=> res!43753 e!55305)))

(assert (=> d!21857 (= res!43753 (or ((_ is Nil!1501) lt!39055) ((_ is Nil!1501) (t!5196 lt!39055))))))

(assert (=> d!21857 (= (isStrictlySorted!284 lt!39055) e!55305)))

(declare-fun b!84829 () Bool)

(declare-fun e!55306 () Bool)

(assert (=> b!84829 (= e!55305 e!55306)))

(declare-fun res!43754 () Bool)

(assert (=> b!84829 (=> (not res!43754) (not e!55306))))

(assert (=> b!84829 (= res!43754 (bvslt (_1!1102 (h!2090 lt!39055)) (_1!1102 (h!2090 (t!5196 lt!39055)))))))

(declare-fun b!84830 () Bool)

(assert (=> b!84830 (= e!55306 (isStrictlySorted!284 (t!5196 lt!39055)))))

(assert (= (and d!21857 (not res!43753)) b!84829))

(assert (= (and b!84829 res!43754) b!84830))

(declare-fun m!89009 () Bool)

(assert (=> b!84830 m!89009))

(assert (=> d!21149 d!21857))

(assert (=> d!21143 d!20915))

(declare-fun d!21859 () Bool)

(declare-fun c!13720 () Bool)

(assert (=> d!21859 (= c!13720 ((_ is ValueCellFull!920) (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun e!55307 () V!3017)

(assert (=> d!21859 (= (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!55307)))

(declare-fun b!84831 () Bool)

(assert (=> b!84831 (= e!55307 (get!1199 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!84832 () Bool)

(assert (=> b!84832 (= e!55307 (get!1200 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!21859 c!13720) b!84831))

(assert (= (and d!21859 (not c!13720)) b!84832))

(assert (=> b!84831 m!86653))

(assert (=> b!84831 m!85725))

(declare-fun m!89011 () Bool)

(assert (=> b!84831 m!89011))

(assert (=> b!84832 m!86653))

(assert (=> b!84832 m!85725))

(declare-fun m!89013 () Bool)

(assert (=> b!84832 m!89013))

(assert (=> b!83490 d!21859))

(declare-fun d!21861 () Bool)

(assert (=> d!21861 (not (contains!744 (+!105 lt!39288 (tuple2!2183 lt!39289 lt!39291)) lt!39290))))

(declare-fun lt!40009 () Unit!2413)

(assert (=> d!21861 (= lt!40009 (choose!495 lt!39288 lt!39289 lt!39291 lt!39290))))

(declare-fun e!55308 () Bool)

(assert (=> d!21861 e!55308))

(declare-fun res!43755 () Bool)

(assert (=> d!21861 (=> (not res!43755) (not e!55308))))

(assert (=> d!21861 (= res!43755 (not (contains!744 lt!39288 lt!39290)))))

(assert (=> d!21861 (= (addStillNotContains!32 lt!39288 lt!39289 lt!39291 lt!39290) lt!40009)))

(declare-fun b!84833 () Bool)

(assert (=> b!84833 (= e!55308 (not (= lt!39289 lt!39290)))))

(assert (= (and d!21861 res!43755) b!84833))

(assert (=> d!21861 m!86657))

(assert (=> d!21861 m!86657))

(assert (=> d!21861 m!86659))

(declare-fun m!89015 () Bool)

(assert (=> d!21861 m!89015))

(declare-fun m!89017 () Bool)

(assert (=> d!21861 m!89017))

(assert (=> b!83490 d!21861))

(declare-fun d!21863 () Bool)

(declare-fun e!55310 () Bool)

(assert (=> d!21863 e!55310))

(declare-fun res!43756 () Bool)

(assert (=> d!21863 (=> res!43756 e!55310)))

(declare-fun lt!40010 () Bool)

(assert (=> d!21863 (= res!43756 (not lt!40010))))

(declare-fun lt!40013 () Bool)

(assert (=> d!21863 (= lt!40010 lt!40013)))

(declare-fun lt!40012 () Unit!2413)

(declare-fun e!55309 () Unit!2413)

(assert (=> d!21863 (= lt!40012 e!55309)))

(declare-fun c!13721 () Bool)

(assert (=> d!21863 (= c!13721 lt!40013)))

(assert (=> d!21863 (= lt!40013 (containsKey!143 (toList!734 (+!105 lt!39288 (tuple2!2183 lt!39289 lt!39291))) lt!39290))))

(assert (=> d!21863 (= (contains!744 (+!105 lt!39288 (tuple2!2183 lt!39289 lt!39291)) lt!39290) lt!40010)))

(declare-fun b!84834 () Bool)

(declare-fun lt!40011 () Unit!2413)

(assert (=> b!84834 (= e!55309 lt!40011)))

(assert (=> b!84834 (= lt!40011 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 (+!105 lt!39288 (tuple2!2183 lt!39289 lt!39291))) lt!39290))))

(assert (=> b!84834 (isDefined!92 (getValueByKey!140 (toList!734 (+!105 lt!39288 (tuple2!2183 lt!39289 lt!39291))) lt!39290))))

(declare-fun b!84835 () Bool)

(declare-fun Unit!2483 () Unit!2413)

(assert (=> b!84835 (= e!55309 Unit!2483)))

(declare-fun b!84836 () Bool)

(assert (=> b!84836 (= e!55310 (isDefined!92 (getValueByKey!140 (toList!734 (+!105 lt!39288 (tuple2!2183 lt!39289 lt!39291))) lt!39290)))))

(assert (= (and d!21863 c!13721) b!84834))

(assert (= (and d!21863 (not c!13721)) b!84835))

(assert (= (and d!21863 (not res!43756)) b!84836))

(declare-fun m!89019 () Bool)

(assert (=> d!21863 m!89019))

(declare-fun m!89021 () Bool)

(assert (=> b!84834 m!89021))

(declare-fun m!89023 () Bool)

(assert (=> b!84834 m!89023))

(assert (=> b!84834 m!89023))

(declare-fun m!89025 () Bool)

(assert (=> b!84834 m!89025))

(assert (=> b!84836 m!89023))

(assert (=> b!84836 m!89023))

(assert (=> b!84836 m!89025))

(assert (=> b!83490 d!21863))

(declare-fun d!21865 () Bool)

(declare-fun e!55311 () Bool)

(assert (=> d!21865 e!55311))

(declare-fun res!43758 () Bool)

(assert (=> d!21865 (=> (not res!43758) (not e!55311))))

(declare-fun lt!40015 () ListLongMap!1437)

(assert (=> d!21865 (= res!43758 (contains!744 lt!40015 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!40017 () List!1504)

(assert (=> d!21865 (= lt!40015 (ListLongMap!1438 lt!40017))))

(declare-fun lt!40014 () Unit!2413)

(declare-fun lt!40016 () Unit!2413)

(assert (=> d!21865 (= lt!40014 lt!40016)))

(assert (=> d!21865 (= (getValueByKey!140 lt!40017 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!145 (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!21865 (= lt!40016 (lemmaContainsTupThenGetReturnValue!57 lt!40017 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!21865 (= lt!40017 (insertStrictlySorted!60 (toList!734 call!7833) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!21865 (= (+!105 call!7833 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!40015)))

(declare-fun b!84837 () Bool)

(declare-fun res!43757 () Bool)

(assert (=> b!84837 (=> (not res!43757) (not e!55311))))

(assert (=> b!84837 (= res!43757 (= (getValueByKey!140 (toList!734 lt!40015) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!145 (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!84838 () Bool)

(assert (=> b!84838 (= e!55311 (contains!746 (toList!734 lt!40015) (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1198 (select (arr!1905 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!343 (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!21865 res!43758) b!84837))

(assert (= (and b!84837 res!43757) b!84838))

(declare-fun m!89027 () Bool)

(assert (=> d!21865 m!89027))

(declare-fun m!89029 () Bool)

(assert (=> d!21865 m!89029))

(declare-fun m!89031 () Bool)

(assert (=> d!21865 m!89031))

(declare-fun m!89033 () Bool)

(assert (=> d!21865 m!89033))

(declare-fun m!89035 () Bool)

(assert (=> b!84837 m!89035))

(declare-fun m!89037 () Bool)

(assert (=> b!84838 m!89037))

(assert (=> b!83490 d!21865))

(declare-fun d!21867 () Bool)

(declare-fun e!55312 () Bool)

(assert (=> d!21867 e!55312))

(declare-fun res!43760 () Bool)

(assert (=> d!21867 (=> (not res!43760) (not e!55312))))

(declare-fun lt!40019 () ListLongMap!1437)

(assert (=> d!21867 (= res!43760 (contains!744 lt!40019 (_1!1102 (tuple2!2183 lt!39289 lt!39291))))))

(declare-fun lt!40021 () List!1504)

(assert (=> d!21867 (= lt!40019 (ListLongMap!1438 lt!40021))))

(declare-fun lt!40018 () Unit!2413)

(declare-fun lt!40020 () Unit!2413)

(assert (=> d!21867 (= lt!40018 lt!40020)))

(assert (=> d!21867 (= (getValueByKey!140 lt!40021 (_1!1102 (tuple2!2183 lt!39289 lt!39291))) (Some!145 (_2!1102 (tuple2!2183 lt!39289 lt!39291))))))

(assert (=> d!21867 (= lt!40020 (lemmaContainsTupThenGetReturnValue!57 lt!40021 (_1!1102 (tuple2!2183 lt!39289 lt!39291)) (_2!1102 (tuple2!2183 lt!39289 lt!39291))))))

(assert (=> d!21867 (= lt!40021 (insertStrictlySorted!60 (toList!734 lt!39288) (_1!1102 (tuple2!2183 lt!39289 lt!39291)) (_2!1102 (tuple2!2183 lt!39289 lt!39291))))))

(assert (=> d!21867 (= (+!105 lt!39288 (tuple2!2183 lt!39289 lt!39291)) lt!40019)))

(declare-fun b!84839 () Bool)

(declare-fun res!43759 () Bool)

(assert (=> b!84839 (=> (not res!43759) (not e!55312))))

(assert (=> b!84839 (= res!43759 (= (getValueByKey!140 (toList!734 lt!40019) (_1!1102 (tuple2!2183 lt!39289 lt!39291))) (Some!145 (_2!1102 (tuple2!2183 lt!39289 lt!39291)))))))

(declare-fun b!84840 () Bool)

(assert (=> b!84840 (= e!55312 (contains!746 (toList!734 lt!40019) (tuple2!2183 lt!39289 lt!39291)))))

(assert (= (and d!21867 res!43760) b!84839))

(assert (= (and b!84839 res!43759) b!84840))

(declare-fun m!89039 () Bool)

(assert (=> d!21867 m!89039))

(declare-fun m!89041 () Bool)

(assert (=> d!21867 m!89041))

(declare-fun m!89043 () Bool)

(assert (=> d!21867 m!89043))

(declare-fun m!89045 () Bool)

(assert (=> d!21867 m!89045))

(declare-fun m!89047 () Bool)

(assert (=> b!84839 m!89047))

(declare-fun m!89049 () Bool)

(assert (=> b!84840 m!89049))

(assert (=> b!83490 d!21867))

(declare-fun d!21869 () Bool)

(declare-fun e!55314 () Bool)

(assert (=> d!21869 e!55314))

(declare-fun res!43761 () Bool)

(assert (=> d!21869 (=> res!43761 e!55314)))

(declare-fun lt!40022 () Bool)

(assert (=> d!21869 (= res!43761 (not lt!40022))))

(declare-fun lt!40025 () Bool)

(assert (=> d!21869 (= lt!40022 lt!40025)))

(declare-fun lt!40024 () Unit!2413)

(declare-fun e!55313 () Unit!2413)

(assert (=> d!21869 (= lt!40024 e!55313)))

(declare-fun c!13722 () Bool)

(assert (=> d!21869 (= c!13722 lt!40025)))

(assert (=> d!21869 (= lt!40025 (containsKey!143 (toList!734 lt!39451) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!21869 (= (contains!744 lt!39451 #b0000000000000000000000000000000000000000000000000000000000000000) lt!40022)))

(declare-fun b!84841 () Bool)

(declare-fun lt!40023 () Unit!2413)

(assert (=> b!84841 (= e!55313 lt!40023)))

(assert (=> b!84841 (= lt!40023 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 lt!39451) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!84841 (isDefined!92 (getValueByKey!140 (toList!734 lt!39451) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!84842 () Bool)

(declare-fun Unit!2484 () Unit!2413)

(assert (=> b!84842 (= e!55313 Unit!2484)))

(declare-fun b!84843 () Bool)

(assert (=> b!84843 (= e!55314 (isDefined!92 (getValueByKey!140 (toList!734 lt!39451) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!21869 c!13722) b!84841))

(assert (= (and d!21869 (not c!13722)) b!84842))

(assert (= (and d!21869 (not res!43761)) b!84843))

(declare-fun m!89051 () Bool)

(assert (=> d!21869 m!89051))

(declare-fun m!89053 () Bool)

(assert (=> b!84841 m!89053))

(assert (=> b!84841 m!87573))

(assert (=> b!84841 m!87573))

(declare-fun m!89055 () Bool)

(assert (=> b!84841 m!89055))

(assert (=> b!84843 m!87573))

(assert (=> b!84843 m!87573))

(assert (=> b!84843 m!89055))

(assert (=> bm!7853 d!21869))

(declare-fun d!21871 () Bool)

(assert (=> d!21871 (= (validKeyInArray!0 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!83271 d!21871))

(declare-fun d!21873 () Bool)

(assert (=> d!21873 (= (get!1201 (getValueByKey!140 (toList!734 lt!39121) lt!39107)) (v!2638 (getValueByKey!140 (toList!734 lt!39121) lt!39107)))))

(assert (=> d!21083 d!21873))

(declare-fun b!84846 () Bool)

(declare-fun e!55316 () Option!146)

(assert (=> b!84846 (= e!55316 (getValueByKey!140 (t!5196 (toList!734 lt!39121)) lt!39107))))

(declare-fun d!21875 () Bool)

(declare-fun c!13723 () Bool)

(assert (=> d!21875 (= c!13723 (and ((_ is Cons!1500) (toList!734 lt!39121)) (= (_1!1102 (h!2090 (toList!734 lt!39121))) lt!39107)))))

(declare-fun e!55315 () Option!146)

(assert (=> d!21875 (= (getValueByKey!140 (toList!734 lt!39121) lt!39107) e!55315)))

(declare-fun b!84844 () Bool)

(assert (=> b!84844 (= e!55315 (Some!145 (_2!1102 (h!2090 (toList!734 lt!39121)))))))

(declare-fun b!84845 () Bool)

(assert (=> b!84845 (= e!55315 e!55316)))

(declare-fun c!13724 () Bool)

(assert (=> b!84845 (= c!13724 (and ((_ is Cons!1500) (toList!734 lt!39121)) (not (= (_1!1102 (h!2090 (toList!734 lt!39121))) lt!39107))))))

(declare-fun b!84847 () Bool)

(assert (=> b!84847 (= e!55316 None!144)))

(assert (= (and d!21875 c!13723) b!84844))

(assert (= (and d!21875 (not c!13723)) b!84845))

(assert (= (and b!84845 c!13724) b!84846))

(assert (= (and b!84845 (not c!13724)) b!84847))

(declare-fun m!89057 () Bool)

(assert (=> b!84846 m!89057))

(assert (=> d!21083 d!21875))

(declare-fun b!84848 () Bool)

(declare-fun e!55319 () Bool)

(declare-fun e!55317 () Bool)

(assert (=> b!84848 (= e!55319 e!55317)))

(declare-fun c!13725 () Bool)

(assert (=> b!84848 (= c!13725 (validKeyInArray!0 (select (arr!1904 (_keys!3984 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun d!21877 () Bool)

(declare-fun res!43763 () Bool)

(assert (=> d!21877 (=> res!43763 e!55319)))

(assert (=> d!21877 (= res!43763 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2147 (_keys!3984 newMap!16))))))

(assert (=> d!21877 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3984 newMap!16) (mask!6334 newMap!16)) e!55319)))

(declare-fun b!84849 () Bool)

(declare-fun e!55318 () Bool)

(declare-fun call!7997 () Bool)

(assert (=> b!84849 (= e!55318 call!7997)))

(declare-fun b!84850 () Bool)

(assert (=> b!84850 (= e!55317 call!7997)))

(declare-fun bm!7994 () Bool)

(assert (=> bm!7994 (= call!7997 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!3984 newMap!16) (mask!6334 newMap!16)))))

(declare-fun b!84851 () Bool)

(assert (=> b!84851 (= e!55317 e!55318)))

(declare-fun lt!40028 () (_ BitVec 64))

(assert (=> b!84851 (= lt!40028 (select (arr!1904 (_keys!3984 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!40026 () Unit!2413)

(assert (=> b!84851 (= lt!40026 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3984 newMap!16) lt!40028 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!84851 (arrayContainsKey!0 (_keys!3984 newMap!16) lt!40028 #b00000000000000000000000000000000)))

(declare-fun lt!40027 () Unit!2413)

(assert (=> b!84851 (= lt!40027 lt!40026)))

(declare-fun res!43762 () Bool)

(assert (=> b!84851 (= res!43762 (= (seekEntryOrOpen!0 (select (arr!1904 (_keys!3984 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!3984 newMap!16) (mask!6334 newMap!16)) (Found!236 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!84851 (=> (not res!43762) (not e!55318))))

(assert (= (and d!21877 (not res!43763)) b!84848))

(assert (= (and b!84848 c!13725) b!84851))

(assert (= (and b!84848 (not c!13725)) b!84850))

(assert (= (and b!84851 res!43762) b!84849))

(assert (= (or b!84849 b!84850) bm!7994))

(assert (=> b!84848 m!88549))

(assert (=> b!84848 m!88549))

(assert (=> b!84848 m!88579))

(declare-fun m!89059 () Bool)

(assert (=> bm!7994 m!89059))

(assert (=> b!84851 m!88549))

(declare-fun m!89061 () Bool)

(assert (=> b!84851 m!89061))

(declare-fun m!89063 () Bool)

(assert (=> b!84851 m!89063))

(assert (=> b!84851 m!88549))

(declare-fun m!89065 () Bool)

(assert (=> b!84851 m!89065))

(assert (=> bm!7809 d!21877))

(declare-fun d!21879 () Bool)

(assert (=> d!21879 (= (inRange!0 (ite c!13354 (index!3081 lt!39417) (ite c!13355 (index!3080 lt!39401) (index!3083 lt!39401))) (mask!6334 newMap!16)) (and (bvsge (ite c!13354 (index!3081 lt!39417) (ite c!13355 (index!3080 lt!39401) (index!3083 lt!39401))) #b00000000000000000000000000000000) (bvslt (ite c!13354 (index!3081 lt!39417) (ite c!13355 (index!3080 lt!39401) (index!3083 lt!39401))) (bvadd (mask!6334 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!7845 d!21879))

(declare-fun d!21881 () Bool)

(assert (=> d!21881 (= (get!1201 (getValueByKey!140 (toList!734 lt!39113) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2638 (getValueByKey!140 (toList!734 lt!39113) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!20999 d!21881))

(assert (=> d!20999 d!21271))

(declare-fun b!84854 () Bool)

(declare-fun e!55321 () Option!146)

(assert (=> b!84854 (= e!55321 (getValueByKey!140 (t!5196 (toList!734 lt!39251)) (_1!1102 (ite (or c!13263 c!13258) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(declare-fun d!21883 () Bool)

(declare-fun c!13726 () Bool)

(assert (=> d!21883 (= c!13726 (and ((_ is Cons!1500) (toList!734 lt!39251)) (= (_1!1102 (h!2090 (toList!734 lt!39251))) (_1!1102 (ite (or c!13263 c!13258) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))))

(declare-fun e!55320 () Option!146)

(assert (=> d!21883 (= (getValueByKey!140 (toList!734 lt!39251) (_1!1102 (ite (or c!13263 c!13258) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))) e!55320)))

(declare-fun b!84852 () Bool)

(assert (=> b!84852 (= e!55320 (Some!145 (_2!1102 (h!2090 (toList!734 lt!39251)))))))

(declare-fun b!84853 () Bool)

(assert (=> b!84853 (= e!55320 e!55321)))

(declare-fun c!13727 () Bool)

(assert (=> b!84853 (= c!13727 (and ((_ is Cons!1500) (toList!734 lt!39251)) (not (= (_1!1102 (h!2090 (toList!734 lt!39251))) (_1!1102 (ite (or c!13263 c!13258) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))))

(declare-fun b!84855 () Bool)

(assert (=> b!84855 (= e!55321 None!144)))

(assert (= (and d!21883 c!13726) b!84852))

(assert (= (and d!21883 (not c!13726)) b!84853))

(assert (= (and b!84853 c!13727) b!84854))

(assert (= (and b!84853 (not c!13727)) b!84855))

(declare-fun m!89067 () Bool)

(assert (=> b!84854 m!89067))

(assert (=> b!83455 d!21883))

(declare-fun d!21885 () Bool)

(assert (=> d!21885 (= ($colon$colon!70 e!54649 (ite c!13413 (h!2090 (toList!734 lt!38773)) (tuple2!2183 (_1!1102 lt!38779) (_2!1102 lt!38779)))) (Cons!1500 (ite c!13413 (h!2090 (toList!734 lt!38773)) (tuple2!2183 (_1!1102 lt!38779) (_2!1102 lt!38779))) e!54649))))

(assert (=> bm!7871 d!21885))

(declare-fun d!21887 () Bool)

(declare-fun res!43764 () Bool)

(declare-fun e!55322 () Bool)

(assert (=> d!21887 (=> res!43764 e!55322)))

(assert (=> d!21887 (= res!43764 (and ((_ is Cons!1500) lt!39508) (= (_1!1102 (h!2090 lt!39508)) (_1!1102 lt!38775))))))

(assert (=> d!21887 (= (containsKey!143 lt!39508 (_1!1102 lt!38775)) e!55322)))

(declare-fun b!84856 () Bool)

(declare-fun e!55323 () Bool)

(assert (=> b!84856 (= e!55322 e!55323)))

(declare-fun res!43765 () Bool)

(assert (=> b!84856 (=> (not res!43765) (not e!55323))))

(assert (=> b!84856 (= res!43765 (and (or (not ((_ is Cons!1500) lt!39508)) (bvsle (_1!1102 (h!2090 lt!39508)) (_1!1102 lt!38775))) ((_ is Cons!1500) lt!39508) (bvslt (_1!1102 (h!2090 lt!39508)) (_1!1102 lt!38775))))))

(declare-fun b!84857 () Bool)

(assert (=> b!84857 (= e!55323 (containsKey!143 (t!5196 lt!39508) (_1!1102 lt!38775)))))

(assert (= (and d!21887 (not res!43764)) b!84856))

(assert (= (and b!84856 res!43765) b!84857))

(declare-fun m!89069 () Bool)

(assert (=> b!84857 m!89069))

(assert (=> b!83737 d!21887))

(assert (=> b!83478 d!21667))

(assert (=> b!83478 d!21669))

(declare-fun d!21889 () Bool)

(declare-fun e!55325 () Bool)

(assert (=> d!21889 e!55325))

(declare-fun res!43766 () Bool)

(assert (=> d!21889 (=> res!43766 e!55325)))

(declare-fun lt!40029 () Bool)

(assert (=> d!21889 (= res!43766 (not lt!40029))))

(declare-fun lt!40032 () Bool)

(assert (=> d!21889 (= lt!40029 lt!40032)))

(declare-fun lt!40031 () Unit!2413)

(declare-fun e!55324 () Unit!2413)

(assert (=> d!21889 (= lt!40031 e!55324)))

(declare-fun c!13728 () Bool)

(assert (=> d!21889 (= c!13728 lt!40032)))

(assert (=> d!21889 (= lt!40032 (containsKey!143 (toList!734 lt!39251) (_1!1102 (ite (or c!13263 c!13258) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(assert (=> d!21889 (= (contains!744 lt!39251 (_1!1102 (ite (or c!13263 c!13258) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))) lt!40029)))

(declare-fun b!84858 () Bool)

(declare-fun lt!40030 () Unit!2413)

(assert (=> b!84858 (= e!55324 lt!40030)))

(assert (=> b!84858 (= lt!40030 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 lt!39251) (_1!1102 (ite (or c!13263 c!13258) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(assert (=> b!84858 (isDefined!92 (getValueByKey!140 (toList!734 lt!39251) (_1!1102 (ite (or c!13263 c!13258) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(declare-fun b!84859 () Bool)

(declare-fun Unit!2485 () Unit!2413)

(assert (=> b!84859 (= e!55324 Unit!2485)))

(declare-fun b!84860 () Bool)

(assert (=> b!84860 (= e!55325 (isDefined!92 (getValueByKey!140 (toList!734 lt!39251) (_1!1102 (ite (or c!13263 c!13258) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))))

(assert (= (and d!21889 c!13728) b!84858))

(assert (= (and d!21889 (not c!13728)) b!84859))

(assert (= (and d!21889 (not res!43766)) b!84860))

(declare-fun m!89071 () Bool)

(assert (=> d!21889 m!89071))

(declare-fun m!89073 () Bool)

(assert (=> b!84858 m!89073))

(assert (=> b!84858 m!86547))

(assert (=> b!84858 m!86547))

(declare-fun m!89075 () Bool)

(assert (=> b!84858 m!89075))

(assert (=> b!84860 m!86547))

(assert (=> b!84860 m!86547))

(assert (=> b!84860 m!89075))

(assert (=> d!21035 d!21889))

(declare-fun e!55327 () Option!146)

(declare-fun b!84863 () Bool)

(assert (=> b!84863 (= e!55327 (getValueByKey!140 (t!5196 lt!39253) (_1!1102 (ite (or c!13263 c!13258) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(declare-fun c!13729 () Bool)

(declare-fun d!21891 () Bool)

(assert (=> d!21891 (= c!13729 (and ((_ is Cons!1500) lt!39253) (= (_1!1102 (h!2090 lt!39253)) (_1!1102 (ite (or c!13263 c!13258) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))))

(declare-fun e!55326 () Option!146)

(assert (=> d!21891 (= (getValueByKey!140 lt!39253 (_1!1102 (ite (or c!13263 c!13258) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))) e!55326)))

(declare-fun b!84861 () Bool)

(assert (=> b!84861 (= e!55326 (Some!145 (_2!1102 (h!2090 lt!39253))))))

(declare-fun b!84862 () Bool)

(assert (=> b!84862 (= e!55326 e!55327)))

(declare-fun c!13730 () Bool)

(assert (=> b!84862 (= c!13730 (and ((_ is Cons!1500) lt!39253) (not (= (_1!1102 (h!2090 lt!39253)) (_1!1102 (ite (or c!13263 c!13258) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))))

(declare-fun b!84864 () Bool)

(assert (=> b!84864 (= e!55327 None!144)))

(assert (= (and d!21891 c!13729) b!84861))

(assert (= (and d!21891 (not c!13729)) b!84862))

(assert (= (and b!84862 c!13730) b!84863))

(assert (= (and b!84862 (not c!13730)) b!84864))

(declare-fun m!89077 () Bool)

(assert (=> b!84863 m!89077))

(assert (=> d!21035 d!21891))

(declare-fun d!21893 () Bool)

(assert (=> d!21893 (= (getValueByKey!140 lt!39253 (_1!1102 (ite (or c!13263 c!13258) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))) (Some!145 (_2!1102 (ite (or c!13263 c!13258) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(declare-fun lt!40033 () Unit!2413)

(assert (=> d!21893 (= lt!40033 (choose!493 lt!39253 (_1!1102 (ite (or c!13263 c!13258) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))) (_2!1102 (ite (or c!13263 c!13258) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(declare-fun e!55328 () Bool)

(assert (=> d!21893 e!55328))

(declare-fun res!43767 () Bool)

(assert (=> d!21893 (=> (not res!43767) (not e!55328))))

(assert (=> d!21893 (= res!43767 (isStrictlySorted!284 lt!39253))))

(assert (=> d!21893 (= (lemmaContainsTupThenGetReturnValue!57 lt!39253 (_1!1102 (ite (or c!13263 c!13258) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))) (_2!1102 (ite (or c!13263 c!13258) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))) lt!40033)))

(declare-fun b!84865 () Bool)

(declare-fun res!43768 () Bool)

(assert (=> b!84865 (=> (not res!43768) (not e!55328))))

(assert (=> b!84865 (= res!43768 (containsKey!143 lt!39253 (_1!1102 (ite (or c!13263 c!13258) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(declare-fun b!84866 () Bool)

(assert (=> b!84866 (= e!55328 (contains!746 lt!39253 (tuple2!2183 (_1!1102 (ite (or c!13263 c!13258) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))) (_2!1102 (ite (or c!13263 c!13258) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))))

(assert (= (and d!21893 res!43767) b!84865))

(assert (= (and b!84865 res!43768) b!84866))

(assert (=> d!21893 m!86541))

(declare-fun m!89079 () Bool)

(assert (=> d!21893 m!89079))

(declare-fun m!89081 () Bool)

(assert (=> d!21893 m!89081))

(declare-fun m!89083 () Bool)

(assert (=> b!84865 m!89083))

(declare-fun m!89085 () Bool)

(assert (=> b!84866 m!89085))

(assert (=> d!21035 d!21893))

(declare-fun b!84868 () Bool)

(declare-fun e!55329 () List!1504)

(declare-fun c!13731 () Bool)

(declare-fun c!13734 () Bool)

(assert (=> b!84868 (= e!55329 (ite c!13734 (t!5196 (toList!734 (ite c!13263 call!7801 (ite c!13258 call!7796 call!7797)))) (ite c!13731 (Cons!1500 (h!2090 (toList!734 (ite c!13263 call!7801 (ite c!13258 call!7796 call!7797)))) (t!5196 (toList!734 (ite c!13263 call!7801 (ite c!13258 call!7796 call!7797))))) Nil!1501)))))

(declare-fun c!13732 () Bool)

(declare-fun bm!7995 () Bool)

(declare-fun call!7998 () List!1504)

(assert (=> bm!7995 (= call!7998 ($colon$colon!70 e!55329 (ite c!13732 (h!2090 (toList!734 (ite c!13263 call!7801 (ite c!13258 call!7796 call!7797)))) (tuple2!2183 (_1!1102 (ite (or c!13263 c!13258) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))) (_2!1102 (ite (or c!13263 c!13258) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))))

(declare-fun c!13733 () Bool)

(assert (=> bm!7995 (= c!13733 c!13732)))

(declare-fun b!84869 () Bool)

(declare-fun e!55333 () List!1504)

(declare-fun call!8000 () List!1504)

(assert (=> b!84869 (= e!55333 call!8000)))

(declare-fun b!84870 () Bool)

(declare-fun e!55331 () List!1504)

(assert (=> b!84870 (= e!55331 call!7998)))

(declare-fun bm!7996 () Bool)

(assert (=> bm!7996 (= call!8000 call!7998)))

(declare-fun bm!7997 () Bool)

(declare-fun call!7999 () List!1504)

(assert (=> bm!7997 (= call!7999 call!8000)))

(declare-fun b!84871 () Bool)

(assert (=> b!84871 (= e!55329 (insertStrictlySorted!60 (t!5196 (toList!734 (ite c!13263 call!7801 (ite c!13258 call!7796 call!7797)))) (_1!1102 (ite (or c!13263 c!13258) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))) (_2!1102 (ite (or c!13263 c!13258) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(declare-fun b!84872 () Bool)

(declare-fun e!55332 () List!1504)

(assert (=> b!84872 (= e!55332 call!7999)))

(declare-fun b!84873 () Bool)

(assert (=> b!84873 (= e!55331 e!55333)))

(assert (=> b!84873 (= c!13734 (and ((_ is Cons!1500) (toList!734 (ite c!13263 call!7801 (ite c!13258 call!7796 call!7797)))) (= (_1!1102 (h!2090 (toList!734 (ite c!13263 call!7801 (ite c!13258 call!7796 call!7797))))) (_1!1102 (ite (or c!13263 c!13258) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))))

(declare-fun b!84874 () Bool)

(declare-fun e!55330 () Bool)

(declare-fun lt!40034 () List!1504)

(assert (=> b!84874 (= e!55330 (contains!746 lt!40034 (tuple2!2183 (_1!1102 (ite (or c!13263 c!13258) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))) (_2!1102 (ite (or c!13263 c!13258) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))))

(declare-fun b!84867 () Bool)

(declare-fun res!43770 () Bool)

(assert (=> b!84867 (=> (not res!43770) (not e!55330))))

(assert (=> b!84867 (= res!43770 (containsKey!143 lt!40034 (_1!1102 (ite (or c!13263 c!13258) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(declare-fun d!21895 () Bool)

(assert (=> d!21895 e!55330))

(declare-fun res!43769 () Bool)

(assert (=> d!21895 (=> (not res!43769) (not e!55330))))

(assert (=> d!21895 (= res!43769 (isStrictlySorted!284 lt!40034))))

(assert (=> d!21895 (= lt!40034 e!55331)))

(assert (=> d!21895 (= c!13732 (and ((_ is Cons!1500) (toList!734 (ite c!13263 call!7801 (ite c!13258 call!7796 call!7797)))) (bvslt (_1!1102 (h!2090 (toList!734 (ite c!13263 call!7801 (ite c!13258 call!7796 call!7797))))) (_1!1102 (ite (or c!13263 c!13258) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))))

(assert (=> d!21895 (isStrictlySorted!284 (toList!734 (ite c!13263 call!7801 (ite c!13258 call!7796 call!7797))))))

(assert (=> d!21895 (= (insertStrictlySorted!60 (toList!734 (ite c!13263 call!7801 (ite c!13258 call!7796 call!7797))) (_1!1102 (ite (or c!13263 c!13258) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))) (_2!1102 (ite (or c!13263 c!13258) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))) lt!40034)))

(declare-fun b!84875 () Bool)

(assert (=> b!84875 (= e!55332 call!7999)))

(declare-fun b!84876 () Bool)

(assert (=> b!84876 (= c!13731 (and ((_ is Cons!1500) (toList!734 (ite c!13263 call!7801 (ite c!13258 call!7796 call!7797)))) (bvsgt (_1!1102 (h!2090 (toList!734 (ite c!13263 call!7801 (ite c!13258 call!7796 call!7797))))) (_1!1102 (ite (or c!13263 c!13258) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))) (tuple2!2183 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))))

(assert (=> b!84876 (= e!55333 e!55332)))

(assert (= (and d!21895 c!13732) b!84870))

(assert (= (and d!21895 (not c!13732)) b!84873))

(assert (= (and b!84873 c!13734) b!84869))

(assert (= (and b!84873 (not c!13734)) b!84876))

(assert (= (and b!84876 c!13731) b!84872))

(assert (= (and b!84876 (not c!13731)) b!84875))

(assert (= (or b!84872 b!84875) bm!7997))

(assert (= (or b!84869 bm!7997) bm!7996))

(assert (= (or b!84870 bm!7996) bm!7995))

(assert (= (and bm!7995 c!13733) b!84871))

(assert (= (and bm!7995 (not c!13733)) b!84868))

(assert (= (and d!21895 res!43769) b!84867))

(assert (= (and b!84867 res!43770) b!84874))

(declare-fun m!89087 () Bool)

(assert (=> d!21895 m!89087))

(declare-fun m!89089 () Bool)

(assert (=> d!21895 m!89089))

(declare-fun m!89091 () Bool)

(assert (=> b!84871 m!89091))

(declare-fun m!89093 () Bool)

(assert (=> bm!7995 m!89093))

(declare-fun m!89095 () Bool)

(assert (=> b!84867 m!89095))

(declare-fun m!89097 () Bool)

(assert (=> b!84874 m!89097))

(assert (=> d!21035 d!21895))

(declare-fun d!21897 () Bool)

(assert (=> d!21897 (= ($colon$colon!70 e!54594 (ite c!13387 (h!2090 (toList!734 lt!38773)) (tuple2!2183 (_1!1102 lt!38775) (_2!1102 lt!38775)))) (Cons!1500 (ite c!13387 (h!2090 (toList!734 lt!38773)) (tuple2!2183 (_1!1102 lt!38775) (_2!1102 lt!38775))) e!54594))))

(assert (=> bm!7859 d!21897))

(assert (=> d!21073 d!21071))

(declare-fun d!21899 () Bool)

(assert (=> d!21899 (= (getValueByKey!140 lt!39051 (_1!1102 lt!38772)) (Some!145 (_2!1102 lt!38772)))))

(assert (=> d!21899 true))

(declare-fun _$22!414 () Unit!2413)

(assert (=> d!21899 (= (choose!493 lt!39051 (_1!1102 lt!38772) (_2!1102 lt!38772)) _$22!414)))

(declare-fun bs!3598 () Bool)

(assert (= bs!3598 d!21899))

(assert (=> bs!3598 m!86109))

(assert (=> d!21073 d!21899))

(declare-fun d!21901 () Bool)

(declare-fun res!43771 () Bool)

(declare-fun e!55334 () Bool)

(assert (=> d!21901 (=> res!43771 e!55334)))

(assert (=> d!21901 (= res!43771 (or ((_ is Nil!1501) lt!39051) ((_ is Nil!1501) (t!5196 lt!39051))))))

(assert (=> d!21901 (= (isStrictlySorted!284 lt!39051) e!55334)))

(declare-fun b!84877 () Bool)

(declare-fun e!55335 () Bool)

(assert (=> b!84877 (= e!55334 e!55335)))

(declare-fun res!43772 () Bool)

(assert (=> b!84877 (=> (not res!43772) (not e!55335))))

(assert (=> b!84877 (= res!43772 (bvslt (_1!1102 (h!2090 lt!39051)) (_1!1102 (h!2090 (t!5196 lt!39051)))))))

(declare-fun b!84878 () Bool)

(assert (=> b!84878 (= e!55335 (isStrictlySorted!284 (t!5196 lt!39051)))))

(assert (= (and d!21901 (not res!43771)) b!84877))

(assert (= (and b!84877 res!43772) b!84878))

(declare-fun m!89099 () Bool)

(assert (=> b!84878 m!89099))

(assert (=> d!21073 d!21901))

(assert (=> bm!7803 d!21553))

(declare-fun d!21903 () Bool)

(declare-fun lt!40035 () Bool)

(assert (=> d!21903 (= lt!40035 (select (content!89 lt!39300) (tuple2!2183 (_1!1102 lt!38772) (_2!1102 lt!38772))))))

(declare-fun e!55336 () Bool)

(assert (=> d!21903 (= lt!40035 e!55336)))

(declare-fun res!43774 () Bool)

(assert (=> d!21903 (=> (not res!43774) (not e!55336))))

(assert (=> d!21903 (= res!43774 ((_ is Cons!1500) lt!39300))))

(assert (=> d!21903 (= (contains!746 lt!39300 (tuple2!2183 (_1!1102 lt!38772) (_2!1102 lt!38772))) lt!40035)))

(declare-fun b!84879 () Bool)

(declare-fun e!55337 () Bool)

(assert (=> b!84879 (= e!55336 e!55337)))

(declare-fun res!43773 () Bool)

(assert (=> b!84879 (=> res!43773 e!55337)))

(assert (=> b!84879 (= res!43773 (= (h!2090 lt!39300) (tuple2!2183 (_1!1102 lt!38772) (_2!1102 lt!38772))))))

(declare-fun b!84880 () Bool)

(assert (=> b!84880 (= e!55337 (contains!746 (t!5196 lt!39300) (tuple2!2183 (_1!1102 lt!38772) (_2!1102 lt!38772))))))

(assert (= (and d!21903 res!43774) b!84879))

(assert (= (and b!84879 (not res!43773)) b!84880))

(declare-fun m!89101 () Bool)

(assert (=> d!21903 m!89101))

(declare-fun m!89103 () Bool)

(assert (=> d!21903 m!89103))

(declare-fun m!89105 () Bool)

(assert (=> b!84880 m!89105))

(assert (=> b!83512 d!21903))

(declare-fun d!21905 () Bool)

(declare-fun e!55339 () Bool)

(assert (=> d!21905 e!55339))

(declare-fun res!43775 () Bool)

(assert (=> d!21905 (=> res!43775 e!55339)))

(declare-fun lt!40036 () Bool)

(assert (=> d!21905 (= res!43775 (not lt!40036))))

(declare-fun lt!40039 () Bool)

(assert (=> d!21905 (= lt!40036 lt!40039)))

(declare-fun lt!40038 () Unit!2413)

(declare-fun e!55338 () Unit!2413)

(assert (=> d!21905 (= lt!40038 e!55338)))

(declare-fun c!13735 () Bool)

(assert (=> d!21905 (= c!13735 lt!40039)))

(assert (=> d!21905 (= lt!40039 (containsKey!143 (toList!734 lt!39241) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!21905 (= (contains!744 lt!39241 #b0000000000000000000000000000000000000000000000000000000000000000) lt!40036)))

(declare-fun b!84881 () Bool)

(declare-fun lt!40037 () Unit!2413)

(assert (=> b!84881 (= e!55338 lt!40037)))

(assert (=> b!84881 (= lt!40037 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 lt!39241) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!84881 (isDefined!92 (getValueByKey!140 (toList!734 lt!39241) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!84882 () Bool)

(declare-fun Unit!2486 () Unit!2413)

(assert (=> b!84882 (= e!55338 Unit!2486)))

(declare-fun b!84883 () Bool)

(assert (=> b!84883 (= e!55339 (isDefined!92 (getValueByKey!140 (toList!734 lt!39241) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!21905 c!13735) b!84881))

(assert (= (and d!21905 (not c!13735)) b!84882))

(assert (= (and d!21905 (not res!43775)) b!84883))

(declare-fun m!89107 () Bool)

(assert (=> d!21905 m!89107))

(declare-fun m!89109 () Bool)

(assert (=> b!84881 m!89109))

(assert (=> b!84881 m!88375))

(assert (=> b!84881 m!88375))

(declare-fun m!89111 () Bool)

(assert (=> b!84881 m!89111))

(assert (=> b!84883 m!88375))

(assert (=> b!84883 m!88375))

(assert (=> b!84883 m!89111))

(assert (=> bm!7823 d!21905))

(declare-fun b!84886 () Bool)

(declare-fun e!55341 () Option!146)

(assert (=> b!84886 (= e!55341 (getValueByKey!140 (t!5196 (t!5196 (toList!734 lt!38770))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))

(declare-fun c!13736 () Bool)

(declare-fun d!21907 () Bool)

(assert (=> d!21907 (= c!13736 (and ((_ is Cons!1500) (t!5196 (toList!734 lt!38770))) (= (_1!1102 (h!2090 (t!5196 (toList!734 lt!38770)))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355))))))

(declare-fun e!55340 () Option!146)

(assert (=> d!21907 (= (getValueByKey!140 (t!5196 (toList!734 lt!38770)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) e!55340)))

(declare-fun b!84884 () Bool)

(assert (=> b!84884 (= e!55340 (Some!145 (_2!1102 (h!2090 (t!5196 (toList!734 lt!38770))))))))

(declare-fun b!84885 () Bool)

(assert (=> b!84885 (= e!55340 e!55341)))

(declare-fun c!13737 () Bool)

(assert (=> b!84885 (= c!13737 (and ((_ is Cons!1500) (t!5196 (toList!734 lt!38770))) (not (= (_1!1102 (h!2090 (t!5196 (toList!734 lt!38770)))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))))

(declare-fun b!84887 () Bool)

(assert (=> b!84887 (= e!55341 None!144)))

(assert (= (and d!21907 c!13736) b!84884))

(assert (= (and d!21907 (not c!13736)) b!84885))

(assert (= (and b!84885 c!13737) b!84886))

(assert (= (and b!84885 (not c!13737)) b!84887))

(assert (=> b!84886 m!85721))

(declare-fun m!89113 () Bool)

(assert (=> b!84886 m!89113))

(assert (=> b!83755 d!21907))

(declare-fun e!55343 () Option!146)

(declare-fun b!84890 () Bool)

(assert (=> b!84890 (= e!55343 (getValueByKey!140 (t!5196 (toList!734 lt!39186)) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(declare-fun d!21909 () Bool)

(declare-fun c!13738 () Bool)

(assert (=> d!21909 (= c!13738 (and ((_ is Cons!1500) (toList!734 lt!39186)) (= (_1!1102 (h!2090 (toList!734 lt!39186))) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))

(declare-fun e!55342 () Option!146)

(assert (=> d!21909 (= (getValueByKey!140 (toList!734 lt!39186) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))) e!55342)))

(declare-fun b!84888 () Bool)

(assert (=> b!84888 (= e!55342 (Some!145 (_2!1102 (h!2090 (toList!734 lt!39186)))))))

(declare-fun b!84889 () Bool)

(assert (=> b!84889 (= e!55342 e!55343)))

(declare-fun c!13739 () Bool)

(assert (=> b!84889 (= c!13739 (and ((_ is Cons!1500) (toList!734 lt!39186)) (not (= (_1!1102 (h!2090 (toList!734 lt!39186))) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))))

(declare-fun b!84891 () Bool)

(assert (=> b!84891 (= e!55343 None!144)))

(assert (= (and d!21909 c!13738) b!84888))

(assert (= (and d!21909 (not c!13738)) b!84889))

(assert (= (and b!84889 c!13739) b!84890))

(assert (= (and b!84889 (not c!13739)) b!84891))

(declare-fun m!89115 () Bool)

(assert (=> b!84890 m!89115))

(assert (=> b!83327 d!21909))

(declare-fun d!21911 () Bool)

(assert (=> d!21911 (= (get!1201 (getValueByKey!140 (toList!734 lt!39113) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!2638 (getValueByKey!140 (toList!734 lt!39113) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!21125 d!21911))

(assert (=> d!21125 d!21237))

(assert (=> b!83250 d!21329))

(declare-fun d!21913 () Bool)

(assert (=> d!21913 (= (get!1201 (getValueByKey!140 (toList!734 lt!39036) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2638 (getValueByKey!140 (toList!734 lt!39036) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!21053 d!21913))

(assert (=> d!21053 d!21401))

(declare-fun d!21915 () Bool)

(assert (=> d!21915 (= ($colon$colon!70 e!54504 (ite c!13340 (h!2090 (toList!734 lt!38783)) (tuple2!2183 (_1!1102 lt!38772) (_2!1102 lt!38772)))) (Cons!1500 (ite c!13340 (h!2090 (toList!734 lt!38783)) (tuple2!2183 (_1!1102 lt!38772) (_2!1102 lt!38772))) e!54504))))

(assert (=> bm!7831 d!21915))

(declare-fun b!84893 () Bool)

(declare-fun res!43777 () Bool)

(declare-fun e!55344 () Bool)

(assert (=> b!84893 (=> (not res!43777) (not e!55344))))

(assert (=> b!84893 (= res!43777 (bvsge (size!2153 (v!2632 (underlying!289 thiss!992))) (_size!423 (v!2632 (underlying!289 thiss!992)))))))

(declare-fun b!84894 () Bool)

(declare-fun res!43779 () Bool)

(assert (=> b!84894 (=> (not res!43779) (not e!55344))))

(assert (=> b!84894 (= res!43779 (= (size!2153 (v!2632 (underlying!289 thiss!992))) (bvadd (_size!423 (v!2632 (underlying!289 thiss!992))) (bvsdiv (bvadd (extraKeys!2159 (v!2632 (underlying!289 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!84892 () Bool)

(declare-fun res!43776 () Bool)

(assert (=> b!84892 (=> (not res!43776) (not e!55344))))

(assert (=> b!84892 (= res!43776 (and (= (size!2148 (_values!2299 (v!2632 (underlying!289 thiss!992)))) (bvadd (mask!6334 (v!2632 (underlying!289 thiss!992))) #b00000000000000000000000000000001)) (= (size!2147 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (size!2148 (_values!2299 (v!2632 (underlying!289 thiss!992))))) (bvsge (_size!423 (v!2632 (underlying!289 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!423 (v!2632 (underlying!289 thiss!992))) (bvadd (mask!6334 (v!2632 (underlying!289 thiss!992))) #b00000000000000000000000000000001))))))

(declare-fun b!84895 () Bool)

(assert (=> b!84895 (= e!55344 (and (bvsge (extraKeys!2159 (v!2632 (underlying!289 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2159 (v!2632 (underlying!289 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!423 (v!2632 (underlying!289 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun d!21917 () Bool)

(declare-fun res!43778 () Bool)

(assert (=> d!21917 (=> (not res!43778) (not e!55344))))

(assert (=> d!21917 (= res!43778 (validMask!0 (mask!6334 (v!2632 (underlying!289 thiss!992)))))))

(assert (=> d!21917 (= (simpleValid!57 (v!2632 (underlying!289 thiss!992))) e!55344)))

(assert (= (and d!21917 res!43778) b!84892))

(assert (= (and b!84892 res!43776) b!84893))

(assert (= (and b!84893 res!43777) b!84894))

(assert (= (and b!84894 res!43779) b!84895))

(declare-fun m!89117 () Bool)

(assert (=> b!84893 m!89117))

(assert (=> b!84894 m!89117))

(assert (=> d!21917 m!85763))

(assert (=> d!21131 d!21917))

(declare-fun d!21919 () Bool)

(declare-fun e!55346 () Bool)

(assert (=> d!21919 e!55346))

(declare-fun res!43780 () Bool)

(assert (=> d!21919 (=> res!43780 e!55346)))

(declare-fun lt!40040 () Bool)

(assert (=> d!21919 (= res!43780 (not lt!40040))))

(declare-fun lt!40043 () Bool)

(assert (=> d!21919 (= lt!40040 lt!40043)))

(declare-fun lt!40042 () Unit!2413)

(declare-fun e!55345 () Unit!2413)

(assert (=> d!21919 (= lt!40042 e!55345)))

(declare-fun c!13740 () Bool)

(assert (=> d!21919 (= c!13740 lt!40043)))

(assert (=> d!21919 (= lt!40043 (containsKey!143 (toList!734 lt!39186) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(assert (=> d!21919 (= (contains!744 lt!39186 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))) lt!40040)))

(declare-fun b!84896 () Bool)

(declare-fun lt!40041 () Unit!2413)

(assert (=> b!84896 (= e!55345 lt!40041)))

(assert (=> b!84896 (= lt!40041 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 lt!39186) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(assert (=> b!84896 (isDefined!92 (getValueByKey!140 (toList!734 lt!39186) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(declare-fun b!84897 () Bool)

(declare-fun Unit!2487 () Unit!2413)

(assert (=> b!84897 (= e!55345 Unit!2487)))

(declare-fun b!84898 () Bool)

(assert (=> b!84898 (= e!55346 (isDefined!92 (getValueByKey!140 (toList!734 lt!39186) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))

(assert (= (and d!21919 c!13740) b!84896))

(assert (= (and d!21919 (not c!13740)) b!84897))

(assert (= (and d!21919 (not res!43780)) b!84898))

(declare-fun m!89119 () Bool)

(assert (=> d!21919 m!89119))

(declare-fun m!89121 () Bool)

(assert (=> b!84896 m!89121))

(assert (=> b!84896 m!86353))

(assert (=> b!84896 m!86353))

(declare-fun m!89123 () Bool)

(assert (=> b!84896 m!89123))

(assert (=> b!84898 m!86353))

(assert (=> b!84898 m!86353))

(assert (=> b!84898 m!89123))

(assert (=> d!20985 d!21919))

(declare-fun b!84901 () Bool)

(declare-fun e!55348 () Option!146)

(assert (=> b!84901 (= e!55348 (getValueByKey!140 (t!5196 lt!39188) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(declare-fun d!21921 () Bool)

(declare-fun c!13741 () Bool)

(assert (=> d!21921 (= c!13741 (and ((_ is Cons!1500) lt!39188) (= (_1!1102 (h!2090 lt!39188)) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))

(declare-fun e!55347 () Option!146)

(assert (=> d!21921 (= (getValueByKey!140 lt!39188 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))) e!55347)))

(declare-fun b!84899 () Bool)

(assert (=> b!84899 (= e!55347 (Some!145 (_2!1102 (h!2090 lt!39188))))))

(declare-fun b!84900 () Bool)

(assert (=> b!84900 (= e!55347 e!55348)))

(declare-fun c!13742 () Bool)

(assert (=> b!84900 (= c!13742 (and ((_ is Cons!1500) lt!39188) (not (= (_1!1102 (h!2090 lt!39188)) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))))

(declare-fun b!84902 () Bool)

(assert (=> b!84902 (= e!55348 None!144)))

(assert (= (and d!21921 c!13741) b!84899))

(assert (= (and d!21921 (not c!13741)) b!84900))

(assert (= (and b!84900 c!13742) b!84901))

(assert (= (and b!84900 (not c!13742)) b!84902))

(declare-fun m!89125 () Bool)

(assert (=> b!84901 m!89125))

(assert (=> d!20985 d!21921))

(declare-fun d!21923 () Bool)

(assert (=> d!21923 (= (getValueByKey!140 lt!39188 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))) (Some!145 (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(declare-fun lt!40044 () Unit!2413)

(assert (=> d!21923 (= lt!40044 (choose!493 lt!39188 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(declare-fun e!55349 () Bool)

(assert (=> d!21923 e!55349))

(declare-fun res!43781 () Bool)

(assert (=> d!21923 (=> (not res!43781) (not e!55349))))

(assert (=> d!21923 (= res!43781 (isStrictlySorted!284 lt!39188))))

(assert (=> d!21923 (= (lemmaContainsTupThenGetReturnValue!57 lt!39188 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))) lt!40044)))

(declare-fun b!84903 () Bool)

(declare-fun res!43782 () Bool)

(assert (=> b!84903 (=> (not res!43782) (not e!55349))))

(assert (=> b!84903 (= res!43782 (containsKey!143 lt!39188 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(declare-fun b!84904 () Bool)

(assert (=> b!84904 (= e!55349 (contains!746 lt!39188 (tuple2!2183 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))

(assert (= (and d!21923 res!43781) b!84903))

(assert (= (and b!84903 res!43782) b!84904))

(assert (=> d!21923 m!86347))

(declare-fun m!89127 () Bool)

(assert (=> d!21923 m!89127))

(declare-fun m!89129 () Bool)

(assert (=> d!21923 m!89129))

(declare-fun m!89131 () Bool)

(assert (=> b!84903 m!89131))

(declare-fun m!89133 () Bool)

(assert (=> b!84904 m!89133))

(assert (=> d!20985 d!21923))

(declare-fun b!84906 () Bool)

(declare-fun e!55350 () List!1504)

(declare-fun c!13743 () Bool)

(declare-fun c!13746 () Bool)

(assert (=> b!84906 (= e!55350 (ite c!13746 (t!5196 (toList!734 (+!105 lt!38771 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))) (ite c!13743 (Cons!1500 (h!2090 (toList!734 (+!105 lt!38771 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))) (t!5196 (toList!734 (+!105 lt!38771 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))) Nil!1501)))))

(declare-fun bm!7998 () Bool)

(declare-fun call!8001 () List!1504)

(declare-fun c!13744 () Bool)

(assert (=> bm!7998 (= call!8001 ($colon$colon!70 e!55350 (ite c!13744 (h!2090 (toList!734 (+!105 lt!38771 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))) (tuple2!2183 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))))

(declare-fun c!13745 () Bool)

(assert (=> bm!7998 (= c!13745 c!13744)))

(declare-fun b!84907 () Bool)

(declare-fun e!55354 () List!1504)

(declare-fun call!8003 () List!1504)

(assert (=> b!84907 (= e!55354 call!8003)))

(declare-fun b!84908 () Bool)

(declare-fun e!55352 () List!1504)

(assert (=> b!84908 (= e!55352 call!8001)))

(declare-fun bm!7999 () Bool)

(assert (=> bm!7999 (= call!8003 call!8001)))

(declare-fun bm!8000 () Bool)

(declare-fun call!8002 () List!1504)

(assert (=> bm!8000 (= call!8002 call!8003)))

(declare-fun b!84909 () Bool)

(assert (=> b!84909 (= e!55350 (insertStrictlySorted!60 (t!5196 (toList!734 (+!105 lt!38771 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(declare-fun b!84910 () Bool)

(declare-fun e!55353 () List!1504)

(assert (=> b!84910 (= e!55353 call!8002)))

(declare-fun b!84911 () Bool)

(assert (=> b!84911 (= e!55352 e!55354)))

(assert (=> b!84911 (= c!13746 (and ((_ is Cons!1500) (toList!734 (+!105 lt!38771 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))) (= (_1!1102 (h!2090 (toList!734 (+!105 lt!38771 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))

(declare-fun e!55351 () Bool)

(declare-fun b!84912 () Bool)

(declare-fun lt!40045 () List!1504)

(assert (=> b!84912 (= e!55351 (contains!746 lt!40045 (tuple2!2183 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))

(declare-fun b!84905 () Bool)

(declare-fun res!43784 () Bool)

(assert (=> b!84905 (=> (not res!43784) (not e!55351))))

(assert (=> b!84905 (= res!43784 (containsKey!143 lt!40045 (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(declare-fun d!21925 () Bool)

(assert (=> d!21925 e!55351))

(declare-fun res!43783 () Bool)

(assert (=> d!21925 (=> (not res!43783) (not e!55351))))

(assert (=> d!21925 (= res!43783 (isStrictlySorted!284 lt!40045))))

(assert (=> d!21925 (= lt!40045 e!55352)))

(assert (=> d!21925 (= c!13744 (and ((_ is Cons!1500) (toList!734 (+!105 lt!38771 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))) (bvslt (_1!1102 (h!2090 (toList!734 (+!105 lt!38771 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))

(assert (=> d!21925 (isStrictlySorted!284 (toList!734 (+!105 lt!38771 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(assert (=> d!21925 (= (insertStrictlySorted!60 (toList!734 (+!105 lt!38771 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)) (_2!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))) lt!40045)))

(declare-fun b!84913 () Bool)

(assert (=> b!84913 (= e!55353 call!8002)))

(declare-fun b!84914 () Bool)

(assert (=> b!84914 (= c!13743 (and ((_ is Cons!1500) (toList!734 (+!105 lt!38771 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))) (bvsgt (_1!1102 (h!2090 (toList!734 (+!105 lt!38771 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))) (_1!1102 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))))))

(assert (=> b!84914 (= e!55354 e!55353)))

(assert (= (and d!21925 c!13744) b!84908))

(assert (= (and d!21925 (not c!13744)) b!84911))

(assert (= (and b!84911 c!13746) b!84907))

(assert (= (and b!84911 (not c!13746)) b!84914))

(assert (= (and b!84914 c!13743) b!84910))

(assert (= (and b!84914 (not c!13743)) b!84913))

(assert (= (or b!84910 b!84913) bm!8000))

(assert (= (or b!84907 bm!8000) bm!7999))

(assert (= (or b!84908 bm!7999) bm!7998))

(assert (= (and bm!7998 c!13745) b!84909))

(assert (= (and bm!7998 (not c!13745)) b!84906))

(assert (= (and d!21925 res!43783) b!84905))

(assert (= (and b!84905 res!43784) b!84912))

(declare-fun m!89135 () Bool)

(assert (=> d!21925 m!89135))

(declare-fun m!89137 () Bool)

(assert (=> d!21925 m!89137))

(declare-fun m!89139 () Bool)

(assert (=> b!84909 m!89139))

(declare-fun m!89141 () Bool)

(assert (=> bm!7998 m!89141))

(declare-fun m!89143 () Bool)

(assert (=> b!84905 m!89143))

(declare-fun m!89145 () Bool)

(assert (=> b!84912 m!89145))

(assert (=> d!20985 d!21925))

(declare-fun d!21927 () Bool)

(assert (=> d!21927 (contains!744 (getCurrentListMap!429 (_keys!3984 newMap!16) lt!38974 (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) (select (arr!1904 (_keys!3984 newMap!16)) (index!3081 lt!38961)))))

(assert (=> d!21927 true))

(declare-fun _$16!105 () Unit!2413)

(assert (=> d!21927 (= (choose!499 (_keys!3984 newMap!16) lt!38974 (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (index!3081 lt!38961) (defaultEntry!2316 newMap!16)) _$16!105)))

(declare-fun bs!3599 () Bool)

(assert (= bs!3599 d!21927))

(assert (=> bs!3599 m!87061))

(assert (=> bs!3599 m!85951))

(assert (=> bs!3599 m!87061))

(assert (=> bs!3599 m!85951))

(assert (=> bs!3599 m!87063))

(assert (=> d!21167 d!21927))

(assert (=> d!21167 d!21267))

(assert (=> d!21093 d!21083))

(assert (=> d!21093 d!21091))

(declare-fun d!21929 () Bool)

(assert (=> d!21929 (= (apply!81 (+!105 lt!39121 (tuple2!2183 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) lt!39107) (apply!81 lt!39121 lt!39107))))

(assert (=> d!21929 true))

(declare-fun _$34!835 () Unit!2413)

(assert (=> d!21929 (= (choose!498 lt!39121 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992))) lt!39107) _$34!835)))

(declare-fun bs!3600 () Bool)

(assert (= bs!3600 d!21929))

(assert (=> bs!3600 m!86157))

(assert (=> bs!3600 m!86157))

(assert (=> bs!3600 m!86159))

(assert (=> bs!3600 m!86169))

(assert (=> d!21093 d!21929))

(assert (=> d!21093 d!21095))

(declare-fun d!21931 () Bool)

(declare-fun e!55356 () Bool)

(assert (=> d!21931 e!55356))

(declare-fun res!43785 () Bool)

(assert (=> d!21931 (=> res!43785 e!55356)))

(declare-fun lt!40046 () Bool)

(assert (=> d!21931 (= res!43785 (not lt!40046))))

(declare-fun lt!40049 () Bool)

(assert (=> d!21931 (= lt!40046 lt!40049)))

(declare-fun lt!40048 () Unit!2413)

(declare-fun e!55355 () Unit!2413)

(assert (=> d!21931 (= lt!40048 e!55355)))

(declare-fun c!13747 () Bool)

(assert (=> d!21931 (= c!13747 lt!40049)))

(assert (=> d!21931 (= lt!40049 (containsKey!143 (toList!734 lt!39121) lt!39107))))

(assert (=> d!21931 (= (contains!744 lt!39121 lt!39107) lt!40046)))

(declare-fun b!84915 () Bool)

(declare-fun lt!40047 () Unit!2413)

(assert (=> b!84915 (= e!55355 lt!40047)))

(assert (=> b!84915 (= lt!40047 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 lt!39121) lt!39107))))

(assert (=> b!84915 (isDefined!92 (getValueByKey!140 (toList!734 lt!39121) lt!39107))))

(declare-fun b!84916 () Bool)

(declare-fun Unit!2488 () Unit!2413)

(assert (=> b!84916 (= e!55355 Unit!2488)))

(declare-fun b!84917 () Bool)

(assert (=> b!84917 (= e!55356 (isDefined!92 (getValueByKey!140 (toList!734 lt!39121) lt!39107)))))

(assert (= (and d!21931 c!13747) b!84915))

(assert (= (and d!21931 (not c!13747)) b!84916))

(assert (= (and d!21931 (not res!43785)) b!84917))

(declare-fun m!89147 () Bool)

(assert (=> d!21931 m!89147))

(declare-fun m!89149 () Bool)

(assert (=> b!84915 m!89149))

(assert (=> b!84915 m!86713))

(assert (=> b!84915 m!86713))

(declare-fun m!89151 () Bool)

(assert (=> b!84915 m!89151))

(assert (=> b!84917 m!86713))

(assert (=> b!84917 m!86713))

(assert (=> b!84917 m!89151))

(assert (=> d!21093 d!21931))

(declare-fun d!21933 () Bool)

(declare-fun res!43786 () Bool)

(declare-fun e!55357 () Bool)

(assert (=> d!21933 (=> res!43786 e!55357)))

(assert (=> d!21933 (= res!43786 (and ((_ is Cons!1500) (toList!734 lt!39008)) (= (_1!1102 (h!2090 (toList!734 lt!39008))) (_1!1102 lt!38775))))))

(assert (=> d!21933 (= (containsKey!143 (toList!734 lt!39008) (_1!1102 lt!38775)) e!55357)))

(declare-fun b!84918 () Bool)

(declare-fun e!55358 () Bool)

(assert (=> b!84918 (= e!55357 e!55358)))

(declare-fun res!43787 () Bool)

(assert (=> b!84918 (=> (not res!43787) (not e!55358))))

(assert (=> b!84918 (= res!43787 (and (or (not ((_ is Cons!1500) (toList!734 lt!39008))) (bvsle (_1!1102 (h!2090 (toList!734 lt!39008))) (_1!1102 lt!38775))) ((_ is Cons!1500) (toList!734 lt!39008)) (bvslt (_1!1102 (h!2090 (toList!734 lt!39008))) (_1!1102 lt!38775))))))

(declare-fun b!84919 () Bool)

(assert (=> b!84919 (= e!55358 (containsKey!143 (t!5196 (toList!734 lt!39008)) (_1!1102 lt!38775)))))

(assert (= (and d!21933 (not res!43786)) b!84918))

(assert (= (and b!84918 res!43787) b!84919))

(declare-fun m!89153 () Bool)

(assert (=> b!84919 m!89153))

(assert (=> d!21023 d!21933))

(declare-fun d!21935 () Bool)

(assert (=> d!21935 (contains!744 (getCurrentListMap!429 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355))))

(declare-fun lt!40052 () Unit!2413)

(declare-fun choose!504 (array!3997 array!3999 (_ BitVec 32) (_ BitVec 32) V!3017 V!3017 (_ BitVec 64) (_ BitVec 32) Int) Unit!2413)

(assert (=> d!21935 (= lt!40052 (choose!504 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))

(assert (=> d!21935 (validMask!0 (mask!6334 newMap!16))))

(assert (=> d!21935 (= (lemmaArrayContainsKeyThenInListMap!18 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) lt!40052)))

(declare-fun bs!3601 () Bool)

(assert (= bs!3601 d!21935))

(assert (=> bs!3601 m!85945))

(assert (=> bs!3601 m!85945))

(assert (=> bs!3601 m!85721))

(assert (=> bs!3601 m!85949))

(assert (=> bs!3601 m!85721))

(declare-fun m!89155 () Bool)

(assert (=> bs!3601 m!89155))

(assert (=> bs!3601 m!86223))

(assert (=> b!83581 d!21935))

(assert (=> b!83581 d!21171))

(assert (=> b!83581 d!20959))

(declare-fun d!21937 () Bool)

(assert (=> d!21937 (isDefined!92 (getValueByKey!140 (toList!734 lt!39036) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!40053 () Unit!2413)

(assert (=> d!21937 (= lt!40053 (choose!502 (toList!734 lt!39036) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!55359 () Bool)

(assert (=> d!21937 e!55359))

(declare-fun res!43788 () Bool)

(assert (=> d!21937 (=> (not res!43788) (not e!55359))))

(assert (=> d!21937 (= res!43788 (isStrictlySorted!284 (toList!734 lt!39036)))))

(assert (=> d!21937 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 lt!39036) #b0000000000000000000000000000000000000000000000000000000000000000) lt!40053)))

(declare-fun b!84920 () Bool)

(assert (=> b!84920 (= e!55359 (containsKey!143 (toList!734 lt!39036) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!21937 res!43788) b!84920))

(assert (=> d!21937 m!86415))

(assert (=> d!21937 m!86415))

(assert (=> d!21937 m!86417))

(declare-fun m!89157 () Bool)

(assert (=> d!21937 m!89157))

(declare-fun m!89159 () Bool)

(assert (=> d!21937 m!89159))

(assert (=> b!84920 m!86411))

(assert (=> b!83378 d!21937))

(assert (=> b!83378 d!21241))

(assert (=> b!83378 d!21243))

(declare-fun d!21939 () Bool)

(assert (=> d!21939 (isDefined!92 (getValueByKey!140 (toList!734 lt!39053) (_1!1102 lt!38775)))))

(declare-fun lt!40054 () Unit!2413)

(assert (=> d!21939 (= lt!40054 (choose!502 (toList!734 lt!39053) (_1!1102 lt!38775)))))

(declare-fun e!55360 () Bool)

(assert (=> d!21939 e!55360))

(declare-fun res!43789 () Bool)

(assert (=> d!21939 (=> (not res!43789) (not e!55360))))

(assert (=> d!21939 (= res!43789 (isStrictlySorted!284 (toList!734 lt!39053)))))

(assert (=> d!21939 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 lt!39053) (_1!1102 lt!38775)) lt!40054)))

(declare-fun b!84921 () Bool)

(assert (=> b!84921 (= e!55360 (containsKey!143 (toList!734 lt!39053) (_1!1102 lt!38775)))))

(assert (= (and d!21939 res!43789) b!84921))

(assert (=> d!21939 m!86127))

(assert (=> d!21939 m!86127))

(assert (=> d!21939 m!86979))

(declare-fun m!89161 () Bool)

(assert (=> d!21939 m!89161))

(declare-fun m!89163 () Bool)

(assert (=> d!21939 m!89163))

(assert (=> b!84921 m!86975))

(assert (=> b!83664 d!21939))

(assert (=> b!83664 d!21209))

(assert (=> b!83664 d!21129))

(declare-fun d!21941 () Bool)

(declare-fun res!43790 () Bool)

(declare-fun e!55361 () Bool)

(assert (=> d!21941 (=> res!43790 e!55361)))

(assert (=> d!21941 (= res!43790 (and ((_ is Cons!1500) lt!39010) (= (_1!1102 (h!2090 lt!39010)) (_1!1102 lt!38775))))))

(assert (=> d!21941 (= (containsKey!143 lt!39010 (_1!1102 lt!38775)) e!55361)))

(declare-fun b!84922 () Bool)

(declare-fun e!55362 () Bool)

(assert (=> b!84922 (= e!55361 e!55362)))

(declare-fun res!43791 () Bool)

(assert (=> b!84922 (=> (not res!43791) (not e!55362))))

(assert (=> b!84922 (= res!43791 (and (or (not ((_ is Cons!1500) lt!39010)) (bvsle (_1!1102 (h!2090 lt!39010)) (_1!1102 lt!38775))) ((_ is Cons!1500) lt!39010) (bvslt (_1!1102 (h!2090 lt!39010)) (_1!1102 lt!38775))))))

(declare-fun b!84923 () Bool)

(assert (=> b!84923 (= e!55362 (containsKey!143 (t!5196 lt!39010) (_1!1102 lt!38775)))))

(assert (= (and d!21941 (not res!43790)) b!84922))

(assert (= (and b!84922 res!43791) b!84923))

(declare-fun m!89165 () Bool)

(assert (=> b!84923 m!89165))

(assert (=> b!83416 d!21941))

(declare-fun d!21943 () Bool)

(declare-fun res!43792 () Bool)

(declare-fun e!55363 () Bool)

(assert (=> d!21943 (=> res!43792 e!55363)))

(assert (=> d!21943 (= res!43792 (and ((_ is Cons!1500) (toList!734 lt!39113)) (= (_1!1102 (h!2090 (toList!734 lt!39113))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!21943 (= (containsKey!143 (toList!734 lt!39113) #b0000000000000000000000000000000000000000000000000000000000000000) e!55363)))

(declare-fun b!84924 () Bool)

(declare-fun e!55364 () Bool)

(assert (=> b!84924 (= e!55363 e!55364)))

(declare-fun res!43793 () Bool)

(assert (=> b!84924 (=> (not res!43793) (not e!55364))))

(assert (=> b!84924 (= res!43793 (and (or (not ((_ is Cons!1500) (toList!734 lt!39113))) (bvsle (_1!1102 (h!2090 (toList!734 lt!39113))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1500) (toList!734 lt!39113)) (bvslt (_1!1102 (h!2090 (toList!734 lt!39113))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!84925 () Bool)

(assert (=> b!84925 (= e!55364 (containsKey!143 (t!5196 (toList!734 lt!39113)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!21943 (not res!43792)) b!84924))

(assert (= (and b!84924 res!43793) b!84925))

(declare-fun m!89167 () Bool)

(assert (=> b!84925 m!89167))

(assert (=> d!21117 d!21943))

(declare-fun b!84926 () Bool)

(declare-fun e!55368 () ListLongMap!1437)

(assert (=> b!84926 (= e!55368 (ListLongMap!1438 Nil!1501))))

(declare-fun b!84927 () Bool)

(declare-fun e!55371 () Bool)

(declare-fun e!55370 () Bool)

(assert (=> b!84927 (= e!55371 e!55370)))

(assert (=> b!84927 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))))))

(declare-fun res!43797 () Bool)

(declare-fun lt!40059 () ListLongMap!1437)

(assert (=> b!84927 (= res!43797 (contains!744 lt!40059 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!84927 (=> (not res!43797) (not e!55370))))

(declare-fun b!84928 () Bool)

(declare-fun e!55369 () Bool)

(assert (=> b!84928 (= e!55371 e!55369)))

(declare-fun c!13750 () Bool)

(assert (=> b!84928 (= c!13750 (bvslt #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))))))

(declare-fun b!84929 () Bool)

(declare-fun e!55366 () ListLongMap!1437)

(assert (=> b!84929 (= e!55368 e!55366)))

(declare-fun c!13751 () Bool)

(assert (=> b!84929 (= c!13751 (validKeyInArray!0 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!84930 () Bool)

(declare-fun call!8004 () ListLongMap!1437)

(assert (=> b!84930 (= e!55366 call!8004)))

(declare-fun bm!8001 () Bool)

(assert (=> bm!8001 (= call!8004 (getCurrentListMapNoExtraKeys!70 (_keys!3984 newMap!16) (ite c!13224 (_values!2299 newMap!16) lt!38974) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2316 newMap!16)))))

(declare-fun b!84931 () Bool)

(declare-fun res!43795 () Bool)

(declare-fun e!55365 () Bool)

(assert (=> b!84931 (=> (not res!43795) (not e!55365))))

(assert (=> b!84931 (= res!43795 (not (contains!744 lt!40059 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!84932 () Bool)

(declare-fun lt!40060 () Unit!2413)

(declare-fun lt!40061 () Unit!2413)

(assert (=> b!84932 (= lt!40060 lt!40061)))

(declare-fun lt!40055 () ListLongMap!1437)

(declare-fun lt!40058 () V!3017)

(declare-fun lt!40056 () (_ BitVec 64))

(declare-fun lt!40057 () (_ BitVec 64))

(assert (=> b!84932 (not (contains!744 (+!105 lt!40055 (tuple2!2183 lt!40056 lt!40058)) lt!40057))))

(assert (=> b!84932 (= lt!40061 (addStillNotContains!32 lt!40055 lt!40056 lt!40058 lt!40057))))

(assert (=> b!84932 (= lt!40057 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!84932 (= lt!40058 (get!1198 (select (arr!1905 (ite c!13224 (_values!2299 newMap!16) lt!38974)) #b00000000000000000000000000000000) (dynLambda!343 (defaultEntry!2316 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!84932 (= lt!40056 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!84932 (= lt!40055 call!8004)))

(assert (=> b!84932 (= e!55366 (+!105 call!8004 (tuple2!2183 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000) (get!1198 (select (arr!1905 (ite c!13224 (_values!2299 newMap!16) lt!38974)) #b00000000000000000000000000000000) (dynLambda!343 (defaultEntry!2316 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!84933 () Bool)

(declare-fun e!55367 () Bool)

(assert (=> b!84933 (= e!55367 (validKeyInArray!0 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!84933 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!84934 () Bool)

(assert (=> b!84934 (= e!55365 e!55371)))

(declare-fun c!13749 () Bool)

(assert (=> b!84934 (= c!13749 e!55367)))

(declare-fun res!43796 () Bool)

(assert (=> b!84934 (=> (not res!43796) (not e!55367))))

(assert (=> b!84934 (= res!43796 (bvslt #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))))))

(declare-fun b!84935 () Bool)

(assert (=> b!84935 (= e!55369 (= lt!40059 (getCurrentListMapNoExtraKeys!70 (_keys!3984 newMap!16) (ite c!13224 (_values!2299 newMap!16) lt!38974) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2316 newMap!16))))))

(declare-fun b!84936 () Bool)

(assert (=> b!84936 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))))))

(assert (=> b!84936 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2148 (ite c!13224 (_values!2299 newMap!16) lt!38974))))))

(assert (=> b!84936 (= e!55370 (= (apply!81 lt!40059 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)) (get!1198 (select (arr!1905 (ite c!13224 (_values!2299 newMap!16) lt!38974)) #b00000000000000000000000000000000) (dynLambda!343 (defaultEntry!2316 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!21945 () Bool)

(assert (=> d!21945 e!55365))

(declare-fun res!43794 () Bool)

(assert (=> d!21945 (=> (not res!43794) (not e!55365))))

(assert (=> d!21945 (= res!43794 (not (contains!744 lt!40059 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!21945 (= lt!40059 e!55368)))

(declare-fun c!13748 () Bool)

(assert (=> d!21945 (= c!13748 (bvsge #b00000000000000000000000000000000 (size!2147 (_keys!3984 newMap!16))))))

(assert (=> d!21945 (validMask!0 (mask!6334 newMap!16))))

(assert (=> d!21945 (= (getCurrentListMapNoExtraKeys!70 (_keys!3984 newMap!16) (ite c!13224 (_values!2299 newMap!16) lt!38974) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)) lt!40059)))

(declare-fun b!84937 () Bool)

(assert (=> b!84937 (= e!55369 (isEmpty!338 lt!40059))))

(assert (= (and d!21945 c!13748) b!84926))

(assert (= (and d!21945 (not c!13748)) b!84929))

(assert (= (and b!84929 c!13751) b!84932))

(assert (= (and b!84929 (not c!13751)) b!84930))

(assert (= (or b!84932 b!84930) bm!8001))

(assert (= (and d!21945 res!43794) b!84931))

(assert (= (and b!84931 res!43795) b!84934))

(assert (= (and b!84934 res!43796) b!84933))

(assert (= (and b!84934 c!13749) b!84927))

(assert (= (and b!84934 (not c!13749)) b!84928))

(assert (= (and b!84927 res!43797) b!84936))

(assert (= (and b!84928 c!13750) b!84935))

(assert (= (and b!84928 (not c!13750)) b!84937))

(declare-fun b_lambda!3757 () Bool)

(assert (=> (not b_lambda!3757) (not b!84932)))

(assert (=> b!84932 t!5209))

(declare-fun b_and!5145 () Bool)

(assert (= b_and!5141 (and (=> t!5209 result!2895) b_and!5145)))

(assert (=> b!84932 t!5211))

(declare-fun b_and!5147 () Bool)

(assert (= b_and!5143 (and (=> t!5211 result!2897) b_and!5147)))

(declare-fun b_lambda!3759 () Bool)

(assert (=> (not b_lambda!3759) (not b!84936)))

(assert (=> b!84936 t!5209))

(declare-fun b_and!5149 () Bool)

(assert (= b_and!5145 (and (=> t!5209 result!2895) b_and!5149)))

(assert (=> b!84936 t!5211))

(declare-fun b_and!5151 () Bool)

(assert (= b_and!5147 (and (=> t!5211 result!2897) b_and!5151)))

(assert (=> b!84927 m!86211))

(assert (=> b!84927 m!86211))

(declare-fun m!89169 () Bool)

(assert (=> b!84927 m!89169))

(declare-fun m!89171 () Bool)

(assert (=> b!84937 m!89171))

(declare-fun m!89173 () Bool)

(assert (=> b!84931 m!89173))

(declare-fun m!89175 () Bool)

(assert (=> bm!8001 m!89175))

(assert (=> b!84935 m!89175))

(declare-fun m!89177 () Bool)

(assert (=> d!21945 m!89177))

(assert (=> d!21945 m!86223))

(assert (=> b!84933 m!86211))

(assert (=> b!84933 m!86211))

(assert (=> b!84933 m!86213))

(assert (=> b!84936 m!86211))

(declare-fun m!89179 () Bool)

(assert (=> b!84936 m!89179))

(assert (=> b!84936 m!86211))

(assert (=> b!84936 m!86487))

(assert (=> b!84936 m!86219))

(assert (=> b!84936 m!86487))

(assert (=> b!84936 m!86219))

(assert (=> b!84936 m!86491))

(assert (=> b!84929 m!86211))

(assert (=> b!84929 m!86211))

(assert (=> b!84929 m!86213))

(declare-fun m!89181 () Bool)

(assert (=> b!84932 m!89181))

(assert (=> b!84932 m!89181))

(declare-fun m!89183 () Bool)

(assert (=> b!84932 m!89183))

(assert (=> b!84932 m!86211))

(declare-fun m!89185 () Bool)

(assert (=> b!84932 m!89185))

(assert (=> b!84932 m!86219))

(assert (=> b!84932 m!86487))

(assert (=> b!84932 m!86219))

(assert (=> b!84932 m!86491))

(declare-fun m!89187 () Bool)

(assert (=> b!84932 m!89187))

(assert (=> b!84932 m!86487))

(assert (=> bm!7826 d!21945))

(declare-fun b!84940 () Bool)

(declare-fun e!55373 () Option!146)

(assert (=> b!84940 (= e!55373 (getValueByKey!140 (t!5196 (toList!734 lt!39328)) (_1!1102 (tuple2!2183 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun c!13752 () Bool)

(declare-fun d!21947 () Bool)

(assert (=> d!21947 (= c!13752 (and ((_ is Cons!1500) (toList!734 lt!39328)) (= (_1!1102 (h!2090 (toList!734 lt!39328))) (_1!1102 (tuple2!2183 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(declare-fun e!55372 () Option!146)

(assert (=> d!21947 (= (getValueByKey!140 (toList!734 lt!39328) (_1!1102 (tuple2!2183 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))) e!55372)))

(declare-fun b!84938 () Bool)

(assert (=> b!84938 (= e!55372 (Some!145 (_2!1102 (h!2090 (toList!734 lt!39328)))))))

(declare-fun b!84939 () Bool)

(assert (=> b!84939 (= e!55372 e!55373)))

(declare-fun c!13753 () Bool)

(assert (=> b!84939 (= c!13753 (and ((_ is Cons!1500) (toList!734 lt!39328)) (not (= (_1!1102 (h!2090 (toList!734 lt!39328))) (_1!1102 (tuple2!2183 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))))

(declare-fun b!84941 () Bool)

(assert (=> b!84941 (= e!55373 None!144)))

(assert (= (and d!21947 c!13752) b!84938))

(assert (= (and d!21947 (not c!13752)) b!84939))

(assert (= (and b!84939 c!13753) b!84940))

(assert (= (and b!84939 (not c!13753)) b!84941))

(declare-fun m!89189 () Bool)

(assert (=> b!84940 m!89189))

(assert (=> b!83535 d!21947))

(declare-fun b!84944 () Bool)

(declare-fun e!55375 () Option!146)

(assert (=> b!84944 (= e!55375 (getValueByKey!140 (t!5196 (t!5196 lt!39042)) (_1!1102 lt!38779)))))

(declare-fun d!21949 () Bool)

(declare-fun c!13754 () Bool)

(assert (=> d!21949 (= c!13754 (and ((_ is Cons!1500) (t!5196 lt!39042)) (= (_1!1102 (h!2090 (t!5196 lt!39042))) (_1!1102 lt!38779))))))

(declare-fun e!55374 () Option!146)

(assert (=> d!21949 (= (getValueByKey!140 (t!5196 lt!39042) (_1!1102 lt!38779)) e!55374)))

(declare-fun b!84942 () Bool)

(assert (=> b!84942 (= e!55374 (Some!145 (_2!1102 (h!2090 (t!5196 lt!39042)))))))

(declare-fun b!84943 () Bool)

(assert (=> b!84943 (= e!55374 e!55375)))

(declare-fun c!13755 () Bool)

(assert (=> b!84943 (= c!13755 (and ((_ is Cons!1500) (t!5196 lt!39042)) (not (= (_1!1102 (h!2090 (t!5196 lt!39042))) (_1!1102 lt!38779)))))))

(declare-fun b!84945 () Bool)

(assert (=> b!84945 (= e!55375 None!144)))

(assert (= (and d!21949 c!13754) b!84942))

(assert (= (and d!21949 (not c!13754)) b!84943))

(assert (= (and b!84943 c!13755) b!84944))

(assert (= (and b!84943 (not c!13755)) b!84945))

(declare-fun m!89191 () Bool)

(assert (=> b!84944 m!89191))

(assert (=> b!83765 d!21949))

(declare-fun d!21951 () Bool)

(declare-fun res!43798 () Bool)

(declare-fun e!55376 () Bool)

(assert (=> d!21951 (=> res!43798 e!55376)))

(assert (=> d!21951 (= res!43798 (and ((_ is Cons!1500) (toList!734 lt!39049)) (= (_1!1102 (h!2090 (toList!734 lt!39049))) (_1!1102 lt!38772))))))

(assert (=> d!21951 (= (containsKey!143 (toList!734 lt!39049) (_1!1102 lt!38772)) e!55376)))

(declare-fun b!84946 () Bool)

(declare-fun e!55377 () Bool)

(assert (=> b!84946 (= e!55376 e!55377)))

(declare-fun res!43799 () Bool)

(assert (=> b!84946 (=> (not res!43799) (not e!55377))))

(assert (=> b!84946 (= res!43799 (and (or (not ((_ is Cons!1500) (toList!734 lt!39049))) (bvsle (_1!1102 (h!2090 (toList!734 lt!39049))) (_1!1102 lt!38772))) ((_ is Cons!1500) (toList!734 lt!39049)) (bvslt (_1!1102 (h!2090 (toList!734 lt!39049))) (_1!1102 lt!38772))))))

(declare-fun b!84947 () Bool)

(assert (=> b!84947 (= e!55377 (containsKey!143 (t!5196 (toList!734 lt!39049)) (_1!1102 lt!38772)))))

(assert (= (and d!21951 (not res!43798)) b!84946))

(assert (= (and b!84946 res!43799) b!84947))

(declare-fun m!89193 () Bool)

(assert (=> b!84947 m!89193))

(assert (=> d!21069 d!21951))

(assert (=> d!21101 d!21105))

(declare-fun d!21953 () Bool)

(declare-fun e!55379 () Bool)

(assert (=> d!21953 e!55379))

(declare-fun res!43800 () Bool)

(assert (=> d!21953 (=> res!43800 e!55379)))

(declare-fun lt!40062 () Bool)

(assert (=> d!21953 (= res!43800 (not lt!40062))))

(declare-fun lt!40065 () Bool)

(assert (=> d!21953 (= lt!40062 lt!40065)))

(declare-fun lt!40064 () Unit!2413)

(declare-fun e!55378 () Unit!2413)

(assert (=> d!21953 (= lt!40064 e!55378)))

(declare-fun c!13756 () Bool)

(assert (=> d!21953 (= c!13756 lt!40065)))

(assert (=> d!21953 (= lt!40065 (containsKey!143 (toList!734 lt!39108) lt!39117))))

(assert (=> d!21953 (= (contains!744 lt!39108 lt!39117) lt!40062)))

(declare-fun b!84948 () Bool)

(declare-fun lt!40063 () Unit!2413)

(assert (=> b!84948 (= e!55378 lt!40063)))

(assert (=> b!84948 (= lt!40063 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 lt!39108) lt!39117))))

(assert (=> b!84948 (isDefined!92 (getValueByKey!140 (toList!734 lt!39108) lt!39117))))

(declare-fun b!84949 () Bool)

(declare-fun Unit!2489 () Unit!2413)

(assert (=> b!84949 (= e!55378 Unit!2489)))

(declare-fun b!84950 () Bool)

(assert (=> b!84950 (= e!55379 (isDefined!92 (getValueByKey!140 (toList!734 lt!39108) lt!39117)))))

(assert (= (and d!21953 c!13756) b!84948))

(assert (= (and d!21953 (not c!13756)) b!84949))

(assert (= (and d!21953 (not res!43800)) b!84950))

(declare-fun m!89195 () Bool)

(assert (=> d!21953 m!89195))

(declare-fun m!89197 () Bool)

(assert (=> b!84948 m!89197))

(assert (=> b!84948 m!86785))

(assert (=> b!84948 m!86785))

(declare-fun m!89199 () Bool)

(assert (=> b!84948 m!89199))

(assert (=> b!84950 m!86785))

(assert (=> b!84950 m!86785))

(assert (=> b!84950 m!89199))

(assert (=> d!21101 d!21953))

(assert (=> d!21101 d!21107))

(declare-fun d!21955 () Bool)

(assert (=> d!21955 (= (apply!81 (+!105 lt!39108 (tuple2!2183 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))) lt!39117) (apply!81 lt!39108 lt!39117))))

(assert (=> d!21955 true))

(declare-fun _$34!836 () Unit!2413)

(assert (=> d!21955 (= (choose!498 lt!39108 lt!39112 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))) lt!39117) _$34!836)))

(declare-fun bs!3602 () Bool)

(assert (= bs!3602 d!21955))

(assert (=> bs!3602 m!86145))

(assert (=> bs!3602 m!86145))

(assert (=> bs!3602 m!86161))

(assert (=> bs!3602 m!86147))

(assert (=> d!21101 d!21955))

(assert (=> d!21101 d!21099))

(declare-fun d!21957 () Bool)

(declare-fun lt!40066 () Bool)

(assert (=> d!21957 (= lt!40066 (select (content!89 (t!5196 (toList!734 lt!39053))) lt!38775))))

(declare-fun e!55380 () Bool)

(assert (=> d!21957 (= lt!40066 e!55380)))

(declare-fun res!43802 () Bool)

(assert (=> d!21957 (=> (not res!43802) (not e!55380))))

(assert (=> d!21957 (= res!43802 ((_ is Cons!1500) (t!5196 (toList!734 lt!39053))))))

(assert (=> d!21957 (= (contains!746 (t!5196 (toList!734 lt!39053)) lt!38775) lt!40066)))

(declare-fun b!84951 () Bool)

(declare-fun e!55381 () Bool)

(assert (=> b!84951 (= e!55380 e!55381)))

(declare-fun res!43801 () Bool)

(assert (=> b!84951 (=> res!43801 e!55381)))

(assert (=> b!84951 (= res!43801 (= (h!2090 (t!5196 (toList!734 lt!39053))) lt!38775))))

(declare-fun b!84952 () Bool)

(assert (=> b!84952 (= e!55381 (contains!746 (t!5196 (t!5196 (toList!734 lt!39053))) lt!38775))))

(assert (= (and d!21957 res!43802) b!84951))

(assert (= (and b!84951 (not res!43801)) b!84952))

(assert (=> d!21957 m!87683))

(declare-fun m!89201 () Bool)

(assert (=> d!21957 m!89201))

(declare-fun m!89203 () Bool)

(assert (=> b!84952 m!89203))

(assert (=> b!83377 d!21957))

(declare-fun d!21959 () Bool)

(declare-fun res!43803 () Bool)

(declare-fun e!55382 () Bool)

(assert (=> d!21959 (=> res!43803 e!55382)))

(assert (=> d!21959 (= res!43803 (and ((_ is Cons!1500) (toList!734 (getCurrentListMap!429 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))) (= (_1!1102 (h!2090 (toList!734 (getCurrentListMap!429 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16))))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355))))))

(assert (=> d!21959 (= (containsKey!143 (toList!734 (getCurrentListMap!429 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) e!55382)))

(declare-fun b!84953 () Bool)

(declare-fun e!55383 () Bool)

(assert (=> b!84953 (= e!55382 e!55383)))

(declare-fun res!43804 () Bool)

(assert (=> b!84953 (=> (not res!43804) (not e!55383))))

(assert (=> b!84953 (= res!43804 (and (or (not ((_ is Cons!1500) (toList!734 (getCurrentListMap!429 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16))))) (bvsle (_1!1102 (h!2090 (toList!734 (getCurrentListMap!429 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16))))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355))) ((_ is Cons!1500) (toList!734 (getCurrentListMap!429 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))) (bvslt (_1!1102 (h!2090 (toList!734 (getCurrentListMap!429 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16))))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355))))))

(declare-fun b!84954 () Bool)

(assert (=> b!84954 (= e!55383 (containsKey!143 (t!5196 (toList!734 (getCurrentListMap!429 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))

(assert (= (and d!21959 (not res!43803)) b!84953))

(assert (= (and b!84953 res!43804) b!84954))

(assert (=> b!84954 m!85721))

(declare-fun m!89205 () Bool)

(assert (=> b!84954 m!89205))

(assert (=> d!21171 d!21959))

(declare-fun b!84955 () Bool)

(declare-fun e!55386 () Bool)

(declare-fun e!55384 () Bool)

(assert (=> b!84955 (= e!55386 e!55384)))

(declare-fun c!13757 () Bool)

(assert (=> b!84955 (= c!13757 (validKeyInArray!0 (select (arr!1904 (_keys!3984 (_2!1101 lt!38973))) #b00000000000000000000000000000000)))))

(declare-fun d!21961 () Bool)

(declare-fun res!43806 () Bool)

(assert (=> d!21961 (=> res!43806 e!55386)))

(assert (=> d!21961 (= res!43806 (bvsge #b00000000000000000000000000000000 (size!2147 (_keys!3984 (_2!1101 lt!38973)))))))

(assert (=> d!21961 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3984 (_2!1101 lt!38973)) (mask!6334 (_2!1101 lt!38973))) e!55386)))

(declare-fun b!84956 () Bool)

(declare-fun e!55385 () Bool)

(declare-fun call!8005 () Bool)

(assert (=> b!84956 (= e!55385 call!8005)))

(declare-fun b!84957 () Bool)

(assert (=> b!84957 (= e!55384 call!8005)))

(declare-fun bm!8002 () Bool)

(assert (=> bm!8002 (= call!8005 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3984 (_2!1101 lt!38973)) (mask!6334 (_2!1101 lt!38973))))))

(declare-fun b!84958 () Bool)

(assert (=> b!84958 (= e!55384 e!55385)))

(declare-fun lt!40069 () (_ BitVec 64))

(assert (=> b!84958 (= lt!40069 (select (arr!1904 (_keys!3984 (_2!1101 lt!38973))) #b00000000000000000000000000000000))))

(declare-fun lt!40067 () Unit!2413)

(assert (=> b!84958 (= lt!40067 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3984 (_2!1101 lt!38973)) lt!40069 #b00000000000000000000000000000000))))

(assert (=> b!84958 (arrayContainsKey!0 (_keys!3984 (_2!1101 lt!38973)) lt!40069 #b00000000000000000000000000000000)))

(declare-fun lt!40068 () Unit!2413)

(assert (=> b!84958 (= lt!40068 lt!40067)))

(declare-fun res!43805 () Bool)

(assert (=> b!84958 (= res!43805 (= (seekEntryOrOpen!0 (select (arr!1904 (_keys!3984 (_2!1101 lt!38973))) #b00000000000000000000000000000000) (_keys!3984 (_2!1101 lt!38973)) (mask!6334 (_2!1101 lt!38973))) (Found!236 #b00000000000000000000000000000000)))))

(assert (=> b!84958 (=> (not res!43805) (not e!55385))))

(assert (= (and d!21961 (not res!43806)) b!84955))

(assert (= (and b!84955 c!13757) b!84958))

(assert (= (and b!84955 (not c!13757)) b!84957))

(assert (= (and b!84958 res!43805) b!84956))

(assert (= (or b!84956 b!84957) bm!8002))

(assert (=> b!84955 m!87583))

(assert (=> b!84955 m!87583))

(assert (=> b!84955 m!87585))

(declare-fun m!89207 () Bool)

(assert (=> bm!8002 m!89207))

(assert (=> b!84958 m!87583))

(declare-fun m!89209 () Bool)

(assert (=> b!84958 m!89209))

(declare-fun m!89211 () Bool)

(assert (=> b!84958 m!89211))

(assert (=> b!84958 m!87583))

(declare-fun m!89213 () Bool)

(assert (=> b!84958 m!89213))

(assert (=> b!83615 d!21961))

(declare-fun d!21963 () Bool)

(assert (=> d!21963 (isDefined!92 (getValueByKey!140 (toList!734 (+!105 lt!39032 (tuple2!2183 lt!39033 lt!39035))) lt!39034))))

(declare-fun lt!40070 () Unit!2413)

(assert (=> d!21963 (= lt!40070 (choose!502 (toList!734 (+!105 lt!39032 (tuple2!2183 lt!39033 lt!39035))) lt!39034))))

(declare-fun e!55387 () Bool)

(assert (=> d!21963 e!55387))

(declare-fun res!43807 () Bool)

(assert (=> d!21963 (=> (not res!43807) (not e!55387))))

(assert (=> d!21963 (= res!43807 (isStrictlySorted!284 (toList!734 (+!105 lt!39032 (tuple2!2183 lt!39033 lt!39035)))))))

(assert (=> d!21963 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 (+!105 lt!39032 (tuple2!2183 lt!39033 lt!39035))) lt!39034) lt!40070)))

(declare-fun b!84959 () Bool)

(assert (=> b!84959 (= e!55387 (containsKey!143 (toList!734 (+!105 lt!39032 (tuple2!2183 lt!39033 lt!39035))) lt!39034))))

(assert (= (and d!21963 res!43807) b!84959))

(assert (=> d!21963 m!86585))

(assert (=> d!21963 m!86585))

(assert (=> d!21963 m!86587))

(declare-fun m!89215 () Bool)

(assert (=> d!21963 m!89215))

(declare-fun m!89217 () Bool)

(assert (=> d!21963 m!89217))

(assert (=> b!84959 m!86581))

(assert (=> b!83467 d!21963))

(assert (=> b!83467 d!21429))

(assert (=> b!83467 d!21431))

(declare-fun d!21965 () Bool)

(assert (=> d!21965 (isDefined!92 (getValueByKey!140 (toList!734 lt!39036) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!40071 () Unit!2413)

(assert (=> d!21965 (= lt!40071 (choose!502 (toList!734 lt!39036) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!55388 () Bool)

(assert (=> d!21965 e!55388))

(declare-fun res!43808 () Bool)

(assert (=> d!21965 (=> (not res!43808) (not e!55388))))

(assert (=> d!21965 (= res!43808 (isStrictlySorted!284 (toList!734 lt!39036)))))

(assert (=> d!21965 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 lt!39036) #b1000000000000000000000000000000000000000000000000000000000000000) lt!40071)))

(declare-fun b!84960 () Bool)

(assert (=> b!84960 (= e!55388 (containsKey!143 (toList!734 lt!39036) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!21965 res!43808) b!84960))

(assert (=> d!21965 m!86301))

(assert (=> d!21965 m!86301))

(assert (=> d!21965 m!86303))

(declare-fun m!89219 () Bool)

(assert (=> d!21965 m!89219))

(assert (=> d!21965 m!89159))

(assert (=> b!84960 m!86297))

(assert (=> b!83292 d!21965))

(assert (=> b!83292 d!21281))

(assert (=> b!83292 d!21283))

(assert (=> b!83438 d!21329))

(declare-fun d!21967 () Bool)

(declare-fun res!43809 () Bool)

(declare-fun e!55389 () Bool)

(assert (=> d!21967 (=> res!43809 e!55389)))

(assert (=> d!21967 (= res!43809 (and ((_ is Cons!1500) lt!39006) (= (_1!1102 (h!2090 lt!39006)) (_1!1102 lt!38779))))))

(assert (=> d!21967 (= (containsKey!143 lt!39006 (_1!1102 lt!38779)) e!55389)))

(declare-fun b!84961 () Bool)

(declare-fun e!55390 () Bool)

(assert (=> b!84961 (= e!55389 e!55390)))

(declare-fun res!43810 () Bool)

(assert (=> b!84961 (=> (not res!43810) (not e!55390))))

(assert (=> b!84961 (= res!43810 (and (or (not ((_ is Cons!1500) lt!39006)) (bvsle (_1!1102 (h!2090 lt!39006)) (_1!1102 lt!38779))) ((_ is Cons!1500) lt!39006) (bvslt (_1!1102 (h!2090 lt!39006)) (_1!1102 lt!38779))))))

(declare-fun b!84962 () Bool)

(assert (=> b!84962 (= e!55390 (containsKey!143 (t!5196 lt!39006) (_1!1102 lt!38779)))))

(assert (= (and d!21967 (not res!43809)) b!84961))

(assert (= (and b!84961 res!43810) b!84962))

(declare-fun m!89221 () Bool)

(assert (=> b!84962 m!89221))

(assert (=> b!83631 d!21967))

(declare-fun d!21969 () Bool)

(declare-fun e!55392 () Bool)

(assert (=> d!21969 e!55392))

(declare-fun res!43811 () Bool)

(assert (=> d!21969 (=> res!43811 e!55392)))

(declare-fun lt!40072 () Bool)

(assert (=> d!21969 (= res!43811 (not lt!40072))))

(declare-fun lt!40075 () Bool)

(assert (=> d!21969 (= lt!40072 lt!40075)))

(declare-fun lt!40074 () Unit!2413)

(declare-fun e!55391 () Unit!2413)

(assert (=> d!21969 (= lt!40074 e!55391)))

(declare-fun c!13758 () Bool)

(assert (=> d!21969 (= c!13758 lt!40075)))

(assert (=> d!21969 (= lt!40075 (containsKey!143 (toList!734 lt!39328) (_1!1102 (tuple2!2183 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(assert (=> d!21969 (= (contains!744 lt!39328 (_1!1102 (tuple2!2183 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))) lt!40072)))

(declare-fun b!84963 () Bool)

(declare-fun lt!40073 () Unit!2413)

(assert (=> b!84963 (= e!55391 lt!40073)))

(assert (=> b!84963 (= lt!40073 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 lt!39328) (_1!1102 (tuple2!2183 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(assert (=> b!84963 (isDefined!92 (getValueByKey!140 (toList!734 lt!39328) (_1!1102 (tuple2!2183 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun b!84964 () Bool)

(declare-fun Unit!2490 () Unit!2413)

(assert (=> b!84964 (= e!55391 Unit!2490)))

(declare-fun b!84965 () Bool)

(assert (=> b!84965 (= e!55392 (isDefined!92 (getValueByKey!140 (toList!734 lt!39328) (_1!1102 (tuple2!2183 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(assert (= (and d!21969 c!13758) b!84963))

(assert (= (and d!21969 (not c!13758)) b!84964))

(assert (= (and d!21969 (not res!43811)) b!84965))

(declare-fun m!89223 () Bool)

(assert (=> d!21969 m!89223))

(declare-fun m!89225 () Bool)

(assert (=> b!84963 m!89225))

(assert (=> b!84963 m!86797))

(assert (=> b!84963 m!86797))

(declare-fun m!89227 () Bool)

(assert (=> b!84963 m!89227))

(assert (=> b!84965 m!86797))

(assert (=> b!84965 m!86797))

(assert (=> b!84965 m!89227))

(assert (=> d!21109 d!21969))

(declare-fun e!55394 () Option!146)

(declare-fun b!84968 () Bool)

(assert (=> b!84968 (= e!55394 (getValueByKey!140 (t!5196 lt!39330) (_1!1102 (tuple2!2183 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun d!21971 () Bool)

(declare-fun c!13759 () Bool)

(assert (=> d!21971 (= c!13759 (and ((_ is Cons!1500) lt!39330) (= (_1!1102 (h!2090 lt!39330)) (_1!1102 (tuple2!2183 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(declare-fun e!55393 () Option!146)

(assert (=> d!21971 (= (getValueByKey!140 lt!39330 (_1!1102 (tuple2!2183 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))) e!55393)))

(declare-fun b!84966 () Bool)

(assert (=> b!84966 (= e!55393 (Some!145 (_2!1102 (h!2090 lt!39330))))))

(declare-fun b!84967 () Bool)

(assert (=> b!84967 (= e!55393 e!55394)))

(declare-fun c!13760 () Bool)

(assert (=> b!84967 (= c!13760 (and ((_ is Cons!1500) lt!39330) (not (= (_1!1102 (h!2090 lt!39330)) (_1!1102 (tuple2!2183 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))))

(declare-fun b!84969 () Bool)

(assert (=> b!84969 (= e!55394 None!144)))

(assert (= (and d!21971 c!13759) b!84966))

(assert (= (and d!21971 (not c!13759)) b!84967))

(assert (= (and b!84967 c!13760) b!84968))

(assert (= (and b!84967 (not c!13760)) b!84969))

(declare-fun m!89229 () Bool)

(assert (=> b!84968 m!89229))

(assert (=> d!21109 d!21971))

(declare-fun d!21973 () Bool)

(assert (=> d!21973 (= (getValueByKey!140 lt!39330 (_1!1102 (tuple2!2183 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))) (Some!145 (_2!1102 (tuple2!2183 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun lt!40076 () Unit!2413)

(assert (=> d!21973 (= lt!40076 (choose!493 lt!39330 (_1!1102 (tuple2!2183 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun e!55395 () Bool)

(assert (=> d!21973 e!55395))

(declare-fun res!43812 () Bool)

(assert (=> d!21973 (=> (not res!43812) (not e!55395))))

(assert (=> d!21973 (= res!43812 (isStrictlySorted!284 lt!39330))))

(assert (=> d!21973 (= (lemmaContainsTupThenGetReturnValue!57 lt!39330 (_1!1102 (tuple2!2183 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))) lt!40076)))

(declare-fun b!84970 () Bool)

(declare-fun res!43813 () Bool)

(assert (=> b!84970 (=> (not res!43813) (not e!55395))))

(assert (=> b!84970 (= res!43813 (containsKey!143 lt!39330 (_1!1102 (tuple2!2183 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun b!84971 () Bool)

(assert (=> b!84971 (= e!55395 (contains!746 lt!39330 (tuple2!2183 (_1!1102 (tuple2!2183 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(assert (= (and d!21973 res!43812) b!84970))

(assert (= (and b!84970 res!43813) b!84971))

(assert (=> d!21973 m!86791))

(declare-fun m!89231 () Bool)

(assert (=> d!21973 m!89231))

(declare-fun m!89233 () Bool)

(assert (=> d!21973 m!89233))

(declare-fun m!89235 () Bool)

(assert (=> b!84970 m!89235))

(declare-fun m!89237 () Bool)

(assert (=> b!84971 m!89237))

(assert (=> d!21109 d!21973))

(declare-fun e!55396 () List!1504)

(declare-fun c!13761 () Bool)

(declare-fun c!13764 () Bool)

(declare-fun b!84973 () Bool)

(assert (=> b!84973 (= e!55396 (ite c!13764 (t!5196 (toList!734 lt!39115)) (ite c!13761 (Cons!1500 (h!2090 (toList!734 lt!39115)) (t!5196 (toList!734 lt!39115))) Nil!1501)))))

(declare-fun call!8006 () List!1504)

(declare-fun bm!8003 () Bool)

(declare-fun c!13762 () Bool)

(assert (=> bm!8003 (= call!8006 ($colon$colon!70 e!55396 (ite c!13762 (h!2090 (toList!734 lt!39115)) (tuple2!2183 (_1!1102 (tuple2!2183 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))))

(declare-fun c!13763 () Bool)

(assert (=> bm!8003 (= c!13763 c!13762)))

(declare-fun b!84974 () Bool)

(declare-fun e!55400 () List!1504)

(declare-fun call!8008 () List!1504)

(assert (=> b!84974 (= e!55400 call!8008)))

(declare-fun b!84975 () Bool)

(declare-fun e!55398 () List!1504)

(assert (=> b!84975 (= e!55398 call!8006)))

(declare-fun bm!8004 () Bool)

(assert (=> bm!8004 (= call!8008 call!8006)))

(declare-fun bm!8005 () Bool)

(declare-fun call!8007 () List!1504)

(assert (=> bm!8005 (= call!8007 call!8008)))

(declare-fun b!84976 () Bool)

(assert (=> b!84976 (= e!55396 (insertStrictlySorted!60 (t!5196 (toList!734 lt!39115)) (_1!1102 (tuple2!2183 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun b!84977 () Bool)

(declare-fun e!55399 () List!1504)

(assert (=> b!84977 (= e!55399 call!8007)))

(declare-fun b!84978 () Bool)

(assert (=> b!84978 (= e!55398 e!55400)))

(assert (=> b!84978 (= c!13764 (and ((_ is Cons!1500) (toList!734 lt!39115)) (= (_1!1102 (h!2090 (toList!734 lt!39115))) (_1!1102 (tuple2!2183 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(declare-fun e!55397 () Bool)

(declare-fun lt!40077 () List!1504)

(declare-fun b!84979 () Bool)

(assert (=> b!84979 (= e!55397 (contains!746 lt!40077 (tuple2!2183 (_1!1102 (tuple2!2183 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(declare-fun b!84972 () Bool)

(declare-fun res!43815 () Bool)

(assert (=> b!84972 (=> (not res!43815) (not e!55397))))

(assert (=> b!84972 (= res!43815 (containsKey!143 lt!40077 (_1!1102 (tuple2!2183 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun d!21975 () Bool)

(assert (=> d!21975 e!55397))

(declare-fun res!43814 () Bool)

(assert (=> d!21975 (=> (not res!43814) (not e!55397))))

(assert (=> d!21975 (= res!43814 (isStrictlySorted!284 lt!40077))))

(assert (=> d!21975 (= lt!40077 e!55398)))

(assert (=> d!21975 (= c!13762 (and ((_ is Cons!1500) (toList!734 lt!39115)) (bvslt (_1!1102 (h!2090 (toList!734 lt!39115))) (_1!1102 (tuple2!2183 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(assert (=> d!21975 (isStrictlySorted!284 (toList!734 lt!39115))))

(assert (=> d!21975 (= (insertStrictlySorted!60 (toList!734 lt!39115) (_1!1102 (tuple2!2183 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))) lt!40077)))

(declare-fun b!84980 () Bool)

(assert (=> b!84980 (= e!55399 call!8007)))

(declare-fun b!84981 () Bool)

(assert (=> b!84981 (= c!13761 (and ((_ is Cons!1500) (toList!734 lt!39115)) (bvsgt (_1!1102 (h!2090 (toList!734 lt!39115))) (_1!1102 (tuple2!2183 lt!39105 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(assert (=> b!84981 (= e!55400 e!55399)))

(assert (= (and d!21975 c!13762) b!84975))

(assert (= (and d!21975 (not c!13762)) b!84978))

(assert (= (and b!84978 c!13764) b!84974))

(assert (= (and b!84978 (not c!13764)) b!84981))

(assert (= (and b!84981 c!13761) b!84977))

(assert (= (and b!84981 (not c!13761)) b!84980))

(assert (= (or b!84977 b!84980) bm!8005))

(assert (= (or b!84974 bm!8005) bm!8004))

(assert (= (or b!84975 bm!8004) bm!8003))

(assert (= (and bm!8003 c!13763) b!84976))

(assert (= (and bm!8003 (not c!13763)) b!84973))

(assert (= (and d!21975 res!43814) b!84972))

(assert (= (and b!84972 res!43815) b!84979))

(declare-fun m!89239 () Bool)

(assert (=> d!21975 m!89239))

(declare-fun m!89241 () Bool)

(assert (=> d!21975 m!89241))

(declare-fun m!89243 () Bool)

(assert (=> b!84976 m!89243))

(declare-fun m!89245 () Bool)

(assert (=> bm!8003 m!89245))

(declare-fun m!89247 () Bool)

(assert (=> b!84972 m!89247))

(declare-fun m!89249 () Bool)

(assert (=> b!84979 m!89249))

(assert (=> d!21109 d!21975))

(declare-fun b!84984 () Bool)

(declare-fun e!55402 () Option!146)

(assert (=> b!84984 (= e!55402 (getValueByKey!140 (t!5196 (t!5196 lt!39055)) (_1!1102 lt!38775)))))

(declare-fun d!21977 () Bool)

(declare-fun c!13765 () Bool)

(assert (=> d!21977 (= c!13765 (and ((_ is Cons!1500) (t!5196 lt!39055)) (= (_1!1102 (h!2090 (t!5196 lt!39055))) (_1!1102 lt!38775))))))

(declare-fun e!55401 () Option!146)

(assert (=> d!21977 (= (getValueByKey!140 (t!5196 lt!39055) (_1!1102 lt!38775)) e!55401)))

(declare-fun b!84982 () Bool)

(assert (=> b!84982 (= e!55401 (Some!145 (_2!1102 (h!2090 (t!5196 lt!39055)))))))

(declare-fun b!84983 () Bool)

(assert (=> b!84983 (= e!55401 e!55402)))

(declare-fun c!13766 () Bool)

(assert (=> b!84983 (= c!13766 (and ((_ is Cons!1500) (t!5196 lt!39055)) (not (= (_1!1102 (h!2090 (t!5196 lt!39055))) (_1!1102 lt!38775)))))))

(declare-fun b!84985 () Bool)

(assert (=> b!84985 (= e!55402 None!144)))

(assert (= (and d!21977 c!13765) b!84982))

(assert (= (and d!21977 (not c!13765)) b!84983))

(assert (= (and b!84983 c!13766) b!84984))

(assert (= (and b!84983 (not c!13766)) b!84985))

(declare-fun m!89251 () Bool)

(assert (=> b!84984 m!89251))

(assert (=> b!83669 d!21977))

(declare-fun d!21979 () Bool)

(declare-fun c!13767 () Bool)

(assert (=> d!21979 (= c!13767 ((_ is Nil!1501) (toList!734 lt!39044)))))

(declare-fun e!55403 () (InoxSet tuple2!2182))

(assert (=> d!21979 (= (content!89 (toList!734 lt!39044)) e!55403)))

(declare-fun b!84986 () Bool)

(assert (=> b!84986 (= e!55403 ((as const (Array tuple2!2182 Bool)) false))))

(declare-fun b!84987 () Bool)

(assert (=> b!84987 (= e!55403 ((_ map or) (store ((as const (Array tuple2!2182 Bool)) false) (h!2090 (toList!734 lt!39044)) true) (content!89 (t!5196 (toList!734 lt!39044)))))))

(assert (= (and d!21979 c!13767) b!84986))

(assert (= (and d!21979 (not c!13767)) b!84987))

(declare-fun m!89253 () Bool)

(assert (=> b!84987 m!89253))

(declare-fun m!89255 () Bool)

(assert (=> b!84987 m!89255))

(assert (=> d!21009 d!21979))

(assert (=> b!83411 d!21759))

(assert (=> b!83411 d!20951))

(assert (=> bm!7867 d!21015))

(declare-fun d!21981 () Bool)

(assert (=> d!21981 (isDefined!92 (getValueByKey!140 (toList!734 lt!39113) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!40078 () Unit!2413)

(assert (=> d!21981 (= lt!40078 (choose!502 (toList!734 lt!39113) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!55404 () Bool)

(assert (=> d!21981 e!55404))

(declare-fun res!43816 () Bool)

(assert (=> d!21981 (=> (not res!43816) (not e!55404))))

(assert (=> d!21981 (= res!43816 (isStrictlySorted!284 (toList!734 lt!39113)))))

(assert (=> d!21981 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 lt!39113) #b0000000000000000000000000000000000000000000000000000000000000000) lt!40078)))

(declare-fun b!84988 () Bool)

(assert (=> b!84988 (= e!55404 (containsKey!143 (toList!734 lt!39113) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!21981 res!43816) b!84988))

(assert (=> d!21981 m!86615))

(assert (=> d!21981 m!86615))

(assert (=> d!21981 m!86865))

(declare-fun m!89257 () Bool)

(assert (=> d!21981 m!89257))

(assert (=> d!21981 m!87247))

(assert (=> b!84988 m!86861))

(assert (=> b!83604 d!21981))

(assert (=> b!83604 d!21317))

(assert (=> b!83604 d!21319))

(assert (=> b!83333 d!21801))

(assert (=> b!83333 d!20975))

(declare-fun d!21983 () Bool)

(declare-fun res!43817 () Bool)

(declare-fun e!55405 () Bool)

(assert (=> d!21983 (=> res!43817 e!55405)))

(assert (=> d!21983 (= res!43817 (and ((_ is Cons!1500) lt!39014) (= (_1!1102 (h!2090 lt!39014)) (_1!1102 lt!38772))))))

(assert (=> d!21983 (= (containsKey!143 lt!39014 (_1!1102 lt!38772)) e!55405)))

(declare-fun b!84989 () Bool)

(declare-fun e!55406 () Bool)

(assert (=> b!84989 (= e!55405 e!55406)))

(declare-fun res!43818 () Bool)

(assert (=> b!84989 (=> (not res!43818) (not e!55406))))

(assert (=> b!84989 (= res!43818 (and (or (not ((_ is Cons!1500) lt!39014)) (bvsle (_1!1102 (h!2090 lt!39014)) (_1!1102 lt!38772))) ((_ is Cons!1500) lt!39014) (bvslt (_1!1102 (h!2090 lt!39014)) (_1!1102 lt!38772))))))

(declare-fun b!84990 () Bool)

(assert (=> b!84990 (= e!55406 (containsKey!143 (t!5196 lt!39014) (_1!1102 lt!38772)))))

(assert (= (and d!21983 (not res!43817)) b!84989))

(assert (= (and b!84989 res!43818) b!84990))

(declare-fun m!89259 () Bool)

(assert (=> b!84990 m!89259))

(assert (=> b!83342 d!21983))

(assert (=> b!83583 d!20965))

(declare-fun d!21985 () Bool)

(declare-fun lt!40079 () Bool)

(assert (=> d!21985 (= lt!40079 (select (content!89 (toList!734 lt!39182)) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))))

(declare-fun e!55407 () Bool)

(assert (=> d!21985 (= lt!40079 e!55407)))

(declare-fun res!43820 () Bool)

(assert (=> d!21985 (=> (not res!43820) (not e!55407))))

(assert (=> d!21985 (= res!43820 ((_ is Cons!1500) (toList!734 lt!39182)))))

(assert (=> d!21985 (= (contains!746 (toList!734 lt!39182) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))) lt!40079)))

(declare-fun b!84991 () Bool)

(declare-fun e!55408 () Bool)

(assert (=> b!84991 (= e!55407 e!55408)))

(declare-fun res!43819 () Bool)

(assert (=> b!84991 (=> res!43819 e!55408)))

(assert (=> b!84991 (= res!43819 (= (h!2090 (toList!734 lt!39182)) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))))

(declare-fun b!84992 () Bool)

(assert (=> b!84992 (= e!55408 (contains!746 (t!5196 (toList!734 lt!39182)) (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))))

(assert (= (and d!21985 res!43820) b!84991))

(assert (= (and b!84991 (not res!43819)) b!84992))

(declare-fun m!89261 () Bool)

(assert (=> d!21985 m!89261))

(declare-fun m!89263 () Bool)

(assert (=> d!21985 m!89263))

(declare-fun m!89265 () Bool)

(assert (=> b!84992 m!89265))

(assert (=> b!83326 d!21985))

(declare-fun d!21987 () Bool)

(assert (=> d!21987 (isDefined!92 (getValueByKey!140 (toList!734 (getCurrentListMap!429 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))

(declare-fun lt!40080 () Unit!2413)

(assert (=> d!21987 (= lt!40080 (choose!502 (toList!734 (getCurrentListMap!429 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))

(declare-fun e!55409 () Bool)

(assert (=> d!21987 e!55409))

(declare-fun res!43821 () Bool)

(assert (=> d!21987 (=> (not res!43821) (not e!55409))))

(assert (=> d!21987 (= res!43821 (isStrictlySorted!284 (toList!734 (getCurrentListMap!429 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16)))))))

(assert (=> d!21987 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 (getCurrentListMap!429 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) lt!40080)))

(declare-fun b!84993 () Bool)

(assert (=> b!84993 (= e!55409 (containsKey!143 (toList!734 (getCurrentListMap!429 (_keys!3984 newMap!16) (_values!2299 newMap!16) (mask!6334 newMap!16) (extraKeys!2159 newMap!16) (zeroValue!2210 newMap!16) (minValue!2210 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2316 newMap!16))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))

(assert (= (and d!21987 res!43821) b!84993))

(assert (=> d!21987 m!85721))

(assert (=> d!21987 m!87073))

(assert (=> d!21987 m!87073))

(assert (=> d!21987 m!87075))

(assert (=> d!21987 m!85721))

(declare-fun m!89267 () Bool)

(assert (=> d!21987 m!89267))

(declare-fun m!89269 () Bool)

(assert (=> d!21987 m!89269))

(assert (=> b!84993 m!85721))

(assert (=> b!84993 m!87069))

(assert (=> b!83699 d!21987))

(assert (=> b!83699 d!21333))

(assert (=> b!83699 d!21335))

(declare-fun c!13771 () Bool)

(declare-fun c!13768 () Bool)

(declare-fun e!55410 () List!1504)

(declare-fun b!84995 () Bool)

(assert (=> b!84995 (= e!55410 (ite c!13771 (t!5196 (t!5196 (toList!734 (+!105 lt!38773 lt!38779)))) (ite c!13768 (Cons!1500 (h!2090 (t!5196 (toList!734 (+!105 lt!38773 lt!38779)))) (t!5196 (t!5196 (toList!734 (+!105 lt!38773 lt!38779))))) Nil!1501)))))

(declare-fun bm!8006 () Bool)

(declare-fun c!13769 () Bool)

(declare-fun call!8009 () List!1504)

(assert (=> bm!8006 (= call!8009 ($colon$colon!70 e!55410 (ite c!13769 (h!2090 (t!5196 (toList!734 (+!105 lt!38773 lt!38779)))) (tuple2!2183 (_1!1102 lt!38775) (_2!1102 lt!38775)))))))

(declare-fun c!13770 () Bool)

(assert (=> bm!8006 (= c!13770 c!13769)))

(declare-fun b!84996 () Bool)

(declare-fun e!55414 () List!1504)

(declare-fun call!8011 () List!1504)

(assert (=> b!84996 (= e!55414 call!8011)))

(declare-fun b!84997 () Bool)

(declare-fun e!55412 () List!1504)

(assert (=> b!84997 (= e!55412 call!8009)))

(declare-fun bm!8007 () Bool)

(assert (=> bm!8007 (= call!8011 call!8009)))

(declare-fun bm!8008 () Bool)

(declare-fun call!8010 () List!1504)

(assert (=> bm!8008 (= call!8010 call!8011)))

(declare-fun b!84998 () Bool)

(assert (=> b!84998 (= e!55410 (insertStrictlySorted!60 (t!5196 (t!5196 (toList!734 (+!105 lt!38773 lt!38779)))) (_1!1102 lt!38775) (_2!1102 lt!38775)))))

(declare-fun b!84999 () Bool)

(declare-fun e!55413 () List!1504)

(assert (=> b!84999 (= e!55413 call!8010)))

(declare-fun b!85000 () Bool)

(assert (=> b!85000 (= e!55412 e!55414)))

(assert (=> b!85000 (= c!13771 (and ((_ is Cons!1500) (t!5196 (toList!734 (+!105 lt!38773 lt!38779)))) (= (_1!1102 (h!2090 (t!5196 (toList!734 (+!105 lt!38773 lt!38779))))) (_1!1102 lt!38775))))))

(declare-fun b!85001 () Bool)

(declare-fun e!55411 () Bool)

(declare-fun lt!40081 () List!1504)

(assert (=> b!85001 (= e!55411 (contains!746 lt!40081 (tuple2!2183 (_1!1102 lt!38775) (_2!1102 lt!38775))))))

(declare-fun b!84994 () Bool)

(declare-fun res!43823 () Bool)

(assert (=> b!84994 (=> (not res!43823) (not e!55411))))

(assert (=> b!84994 (= res!43823 (containsKey!143 lt!40081 (_1!1102 lt!38775)))))

(declare-fun d!21989 () Bool)

(assert (=> d!21989 e!55411))

(declare-fun res!43822 () Bool)

(assert (=> d!21989 (=> (not res!43822) (not e!55411))))

(assert (=> d!21989 (= res!43822 (isStrictlySorted!284 lt!40081))))

(assert (=> d!21989 (= lt!40081 e!55412)))

(assert (=> d!21989 (= c!13769 (and ((_ is Cons!1500) (t!5196 (toList!734 (+!105 lt!38773 lt!38779)))) (bvslt (_1!1102 (h!2090 (t!5196 (toList!734 (+!105 lt!38773 lt!38779))))) (_1!1102 lt!38775))))))

(assert (=> d!21989 (isStrictlySorted!284 (t!5196 (toList!734 (+!105 lt!38773 lt!38779))))))

(assert (=> d!21989 (= (insertStrictlySorted!60 (t!5196 (toList!734 (+!105 lt!38773 lt!38779))) (_1!1102 lt!38775) (_2!1102 lt!38775)) lt!40081)))

(declare-fun b!85002 () Bool)

(assert (=> b!85002 (= e!55413 call!8010)))

(declare-fun b!85003 () Bool)

(assert (=> b!85003 (= c!13768 (and ((_ is Cons!1500) (t!5196 (toList!734 (+!105 lt!38773 lt!38779)))) (bvsgt (_1!1102 (h!2090 (t!5196 (toList!734 (+!105 lt!38773 lt!38779))))) (_1!1102 lt!38775))))))

(assert (=> b!85003 (= e!55414 e!55413)))

(assert (= (and d!21989 c!13769) b!84997))

(assert (= (and d!21989 (not c!13769)) b!85000))

(assert (= (and b!85000 c!13771) b!84996))

(assert (= (and b!85000 (not c!13771)) b!85003))

(assert (= (and b!85003 c!13768) b!84999))

(assert (= (and b!85003 (not c!13768)) b!85002))

(assert (= (or b!84999 b!85002) bm!8008))

(assert (= (or b!84996 bm!8008) bm!8007))

(assert (= (or b!84997 bm!8007) bm!8006))

(assert (= (and bm!8006 c!13770) b!84998))

(assert (= (and bm!8006 (not c!13770)) b!84995))

(assert (= (and d!21989 res!43822) b!84994))

(assert (= (and b!84994 res!43823) b!85001))

(declare-fun m!89271 () Bool)

(assert (=> d!21989 m!89271))

(assert (=> d!21989 m!87473))

(declare-fun m!89273 () Bool)

(assert (=> b!84998 m!89273))

(declare-fun m!89275 () Bool)

(assert (=> bm!8006 m!89275))

(declare-fun m!89277 () Bool)

(assert (=> b!84994 m!89277))

(declare-fun m!89279 () Bool)

(assert (=> b!85001 m!89279))

(assert (=> b!83422 d!21989))

(assert (=> b!83626 d!21805))

(assert (=> b!83626 d!20957))

(declare-fun d!21991 () Bool)

(assert (=> d!21991 (isDefined!92 (getValueByKey!140 (toList!734 lt!39049) (_1!1102 lt!38772)))))

(declare-fun lt!40082 () Unit!2413)

(assert (=> d!21991 (= lt!40082 (choose!502 (toList!734 lt!39049) (_1!1102 lt!38772)))))

(declare-fun e!55415 () Bool)

(assert (=> d!21991 e!55415))

(declare-fun res!43824 () Bool)

(assert (=> d!21991 (=> (not res!43824) (not e!55415))))

(assert (=> d!21991 (= res!43824 (isStrictlySorted!284 (toList!734 lt!39049)))))

(assert (=> d!21991 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 lt!39049) (_1!1102 lt!38772)) lt!40082)))

(declare-fun b!85004 () Bool)

(assert (=> b!85004 (= e!55415 (containsKey!143 (toList!734 lt!39049) (_1!1102 lt!38772)))))

(assert (= (and d!21991 res!43824) b!85004))

(assert (=> d!21991 m!86115))

(assert (=> d!21991 m!86115))

(assert (=> d!21991 m!86669))

(declare-fun m!89281 () Bool)

(assert (=> d!21991 m!89281))

(declare-fun m!89283 () Bool)

(assert (=> d!21991 m!89283))

(assert (=> b!85004 m!86665))

(assert (=> b!83496 d!21991))

(assert (=> b!83496 d!21331))

(assert (=> b!83496 d!21017))

(declare-fun d!21993 () Bool)

(assert (=> d!21993 (isDefined!92 (getValueByKey!140 (toList!734 lt!39113) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!40083 () Unit!2413)

(assert (=> d!21993 (= lt!40083 (choose!502 (toList!734 lt!39113) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!55416 () Bool)

(assert (=> d!21993 e!55416))

(declare-fun res!43825 () Bool)

(assert (=> d!21993 (=> (not res!43825) (not e!55416))))

(assert (=> d!21993 (= res!43825 (isStrictlySorted!284 (toList!734 lt!39113)))))

(assert (=> d!21993 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 lt!39113) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!40083)))

(declare-fun b!85005 () Bool)

(assert (=> b!85005 (= e!55416 (containsKey!143 (toList!734 lt!39113) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!21993 res!43825) b!85005))

(assert (=> d!21993 m!85989))

(assert (=> d!21993 m!86397))

(assert (=> d!21993 m!86397))

(assert (=> d!21993 m!86871))

(assert (=> d!21993 m!85989))

(declare-fun m!89285 () Bool)

(assert (=> d!21993 m!89285))

(assert (=> d!21993 m!87247))

(assert (=> b!85005 m!85989))

(assert (=> b!85005 m!86867))

(assert (=> b!83607 d!21993))

(assert (=> b!83607 d!21269))

(assert (=> b!83607 d!21271))

(declare-fun d!21995 () Bool)

(declare-fun lt!40084 () Bool)

(assert (=> d!21995 (= lt!40084 (select (content!89 (toList!734 lt!39315)) (tuple2!2183 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))

(declare-fun e!55417 () Bool)

(assert (=> d!21995 (= lt!40084 e!55417)))

(declare-fun res!43827 () Bool)

(assert (=> d!21995 (=> (not res!43827) (not e!55417))))

(assert (=> d!21995 (= res!43827 ((_ is Cons!1500) (toList!734 lt!39315)))))

(assert (=> d!21995 (= (contains!746 (toList!734 lt!39315) (tuple2!2183 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) lt!40084)))

(declare-fun b!85006 () Bool)

(declare-fun e!55418 () Bool)

(assert (=> b!85006 (= e!55417 e!55418)))

(declare-fun res!43826 () Bool)

(assert (=> b!85006 (=> res!43826 e!55418)))

(assert (=> b!85006 (= res!43826 (= (h!2090 (toList!734 lt!39315)) (tuple2!2183 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))

(declare-fun b!85007 () Bool)

(assert (=> b!85007 (= e!55418 (contains!746 (t!5196 (toList!734 lt!39315)) (tuple2!2183 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))

(assert (= (and d!21995 res!43827) b!85006))

(assert (= (and b!85006 (not res!43826)) b!85007))

(declare-fun m!89287 () Bool)

(assert (=> d!21995 m!89287))

(declare-fun m!89289 () Bool)

(assert (=> d!21995 m!89289))

(declare-fun m!89291 () Bool)

(assert (=> b!85007 m!89291))

(assert (=> b!83526 d!21995))

(assert (=> b!83462 d!21329))

(declare-fun d!21997 () Bool)

(assert (=> d!21997 (= (apply!81 lt!39292 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1201 (getValueByKey!140 (toList!734 lt!39292) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(declare-fun bs!3603 () Bool)

(assert (= bs!3603 d!21997))

(assert (=> bs!3603 m!86271))

(declare-fun m!89293 () Bool)

(assert (=> bs!3603 m!89293))

(assert (=> bs!3603 m!89293))

(declare-fun m!89295 () Bool)

(assert (=> bs!3603 m!89295))

(assert (=> b!83494 d!21997))

(assert (=> b!83494 d!21859))

(assert (=> d!20959 d!21267))

(declare-fun b!85008 () Bool)

(declare-fun e!55422 () Bool)

(declare-fun call!8012 () Bool)

(assert (=> b!85008 (= e!55422 call!8012)))

(declare-fun b!85009 () Bool)

(assert (=> b!85009 (= e!55422 call!8012)))

(declare-fun b!85010 () Bool)

(declare-fun e!55421 () Bool)

(declare-fun e!55420 () Bool)

(assert (=> b!85010 (= e!55421 e!55420)))

(declare-fun res!43829 () Bool)

(assert (=> b!85010 (=> (not res!43829) (not e!55420))))

(declare-fun e!55419 () Bool)

(assert (=> b!85010 (= res!43829 (not e!55419))))

(declare-fun res!43828 () Bool)

(assert (=> b!85010 (=> (not res!43828) (not e!55419))))

(assert (=> b!85010 (= res!43828 (validKeyInArray!0 (select (arr!1904 (_keys!3984 (_2!1101 lt!38973))) #b00000000000000000000000000000000)))))

(declare-fun d!21999 () Bool)

(declare-fun res!43830 () Bool)

(assert (=> d!21999 (=> res!43830 e!55421)))

(assert (=> d!21999 (= res!43830 (bvsge #b00000000000000000000000000000000 (size!2147 (_keys!3984 (_2!1101 lt!38973)))))))

(assert (=> d!21999 (= (arrayNoDuplicates!0 (_keys!3984 (_2!1101 lt!38973)) #b00000000000000000000000000000000 Nil!1502) e!55421)))

(declare-fun b!85011 () Bool)

(assert (=> b!85011 (= e!55419 (contains!745 Nil!1502 (select (arr!1904 (_keys!3984 (_2!1101 lt!38973))) #b00000000000000000000000000000000)))))

(declare-fun b!85012 () Bool)

(assert (=> b!85012 (= e!55420 e!55422)))

(declare-fun c!13772 () Bool)

(assert (=> b!85012 (= c!13772 (validKeyInArray!0 (select (arr!1904 (_keys!3984 (_2!1101 lt!38973))) #b00000000000000000000000000000000)))))

(declare-fun bm!8009 () Bool)

(assert (=> bm!8009 (= call!8012 (arrayNoDuplicates!0 (_keys!3984 (_2!1101 lt!38973)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!13772 (Cons!1501 (select (arr!1904 (_keys!3984 (_2!1101 lt!38973))) #b00000000000000000000000000000000) Nil!1502) Nil!1502)))))

(assert (= (and d!21999 (not res!43830)) b!85010))

(assert (= (and b!85010 res!43828) b!85011))

(assert (= (and b!85010 res!43829) b!85012))

(assert (= (and b!85012 c!13772) b!85009))

(assert (= (and b!85012 (not c!13772)) b!85008))

(assert (= (or b!85009 b!85008) bm!8009))

(assert (=> b!85010 m!87583))

(assert (=> b!85010 m!87583))

(assert (=> b!85010 m!87585))

(assert (=> b!85011 m!87583))

(assert (=> b!85011 m!87583))

(declare-fun m!89297 () Bool)

(assert (=> b!85011 m!89297))

(assert (=> b!85012 m!87583))

(assert (=> b!85012 m!87583))

(assert (=> b!85012 m!87585))

(assert (=> bm!8009 m!87583))

(declare-fun m!89299 () Bool)

(assert (=> bm!8009 m!89299))

(assert (=> b!83616 d!21999))

(declare-fun e!55423 () List!1504)

(declare-fun c!13776 () Bool)

(declare-fun c!13773 () Bool)

(declare-fun b!85014 () Bool)

(assert (=> b!85014 (= e!55423 (ite c!13776 (t!5196 (t!5196 (toList!734 lt!38768))) (ite c!13773 (Cons!1500 (h!2090 (t!5196 (toList!734 lt!38768))) (t!5196 (t!5196 (toList!734 lt!38768)))) Nil!1501)))))

(declare-fun call!8013 () List!1504)

(declare-fun bm!8010 () Bool)

(declare-fun c!13774 () Bool)

(assert (=> bm!8010 (= call!8013 ($colon$colon!70 e!55423 (ite c!13774 (h!2090 (t!5196 (toList!734 lt!38768))) (tuple2!2183 (_1!1102 lt!38779) (_2!1102 lt!38779)))))))

(declare-fun c!13775 () Bool)

(assert (=> bm!8010 (= c!13775 c!13774)))

(declare-fun b!85015 () Bool)

(declare-fun e!55427 () List!1504)

(declare-fun call!8015 () List!1504)

(assert (=> b!85015 (= e!55427 call!8015)))

(declare-fun b!85016 () Bool)

(declare-fun e!55425 () List!1504)

(assert (=> b!85016 (= e!55425 call!8013)))

(declare-fun bm!8011 () Bool)

(assert (=> bm!8011 (= call!8015 call!8013)))

(declare-fun bm!8012 () Bool)

(declare-fun call!8014 () List!1504)

(assert (=> bm!8012 (= call!8014 call!8015)))

(declare-fun b!85017 () Bool)

(assert (=> b!85017 (= e!55423 (insertStrictlySorted!60 (t!5196 (t!5196 (toList!734 lt!38768))) (_1!1102 lt!38779) (_2!1102 lt!38779)))))

(declare-fun b!85018 () Bool)

(declare-fun e!55426 () List!1504)

(assert (=> b!85018 (= e!55426 call!8014)))

(declare-fun b!85019 () Bool)

(assert (=> b!85019 (= e!55425 e!55427)))

(assert (=> b!85019 (= c!13776 (and ((_ is Cons!1500) (t!5196 (toList!734 lt!38768))) (= (_1!1102 (h!2090 (t!5196 (toList!734 lt!38768)))) (_1!1102 lt!38779))))))

(declare-fun b!85020 () Bool)

(declare-fun e!55424 () Bool)

(declare-fun lt!40085 () List!1504)

(assert (=> b!85020 (= e!55424 (contains!746 lt!40085 (tuple2!2183 (_1!1102 lt!38779) (_2!1102 lt!38779))))))

(declare-fun b!85013 () Bool)

(declare-fun res!43832 () Bool)

(assert (=> b!85013 (=> (not res!43832) (not e!55424))))

(assert (=> b!85013 (= res!43832 (containsKey!143 lt!40085 (_1!1102 lt!38779)))))

(declare-fun d!22001 () Bool)

(assert (=> d!22001 e!55424))

(declare-fun res!43831 () Bool)

(assert (=> d!22001 (=> (not res!43831) (not e!55424))))

(assert (=> d!22001 (= res!43831 (isStrictlySorted!284 lt!40085))))

(assert (=> d!22001 (= lt!40085 e!55425)))

(assert (=> d!22001 (= c!13774 (and ((_ is Cons!1500) (t!5196 (toList!734 lt!38768))) (bvslt (_1!1102 (h!2090 (t!5196 (toList!734 lt!38768)))) (_1!1102 lt!38779))))))

(assert (=> d!22001 (isStrictlySorted!284 (t!5196 (toList!734 lt!38768)))))

(assert (=> d!22001 (= (insertStrictlySorted!60 (t!5196 (toList!734 lt!38768)) (_1!1102 lt!38779) (_2!1102 lt!38779)) lt!40085)))

(declare-fun b!85021 () Bool)

(assert (=> b!85021 (= e!55426 call!8014)))

(declare-fun b!85022 () Bool)

(assert (=> b!85022 (= c!13773 (and ((_ is Cons!1500) (t!5196 (toList!734 lt!38768))) (bvsgt (_1!1102 (h!2090 (t!5196 (toList!734 lt!38768)))) (_1!1102 lt!38779))))))

(assert (=> b!85022 (= e!55427 e!55426)))

(assert (= (and d!22001 c!13774) b!85016))

(assert (= (and d!22001 (not c!13774)) b!85019))

(assert (= (and b!85019 c!13776) b!85015))

(assert (= (and b!85019 (not c!13776)) b!85022))

(assert (= (and b!85022 c!13773) b!85018))

(assert (= (and b!85022 (not c!13773)) b!85021))

(assert (= (or b!85018 b!85021) bm!8012))

(assert (= (or b!85015 bm!8012) bm!8011))

(assert (= (or b!85016 bm!8011) bm!8010))

(assert (= (and bm!8010 c!13775) b!85017))

(assert (= (and bm!8010 (not c!13775)) b!85014))

(assert (= (and d!22001 res!43831) b!85013))

(assert (= (and b!85013 res!43832) b!85020))

(declare-fun m!89301 () Bool)

(assert (=> d!22001 m!89301))

(assert (=> d!22001 m!87511))

(declare-fun m!89303 () Bool)

(assert (=> b!85017 m!89303))

(declare-fun m!89305 () Bool)

(assert (=> bm!8010 m!89305))

(declare-fun m!89307 () Bool)

(assert (=> b!85013 m!89307))

(declare-fun m!89309 () Bool)

(assert (=> b!85020 m!89309))

(assert (=> b!83637 d!22001))

(declare-fun d!22003 () Bool)

(assert (=> d!22003 (= (apply!81 lt!39143 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1201 (getValueByKey!140 (toList!734 lt!39143) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3604 () Bool)

(assert (= bs!3604 d!22003))

(assert (=> bs!3604 m!88321))

(assert (=> bs!3604 m!88321))

(declare-fun m!89311 () Bool)

(assert (=> bs!3604 m!89311))

(assert (=> b!83252 d!22003))

(declare-fun b!85025 () Bool)

(declare-fun e!55429 () Option!146)

(assert (=> b!85025 (= e!55429 (getValueByKey!140 (t!5196 (t!5196 lt!39051)) (_1!1102 lt!38772)))))

(declare-fun d!22005 () Bool)

(declare-fun c!13777 () Bool)

(assert (=> d!22005 (= c!13777 (and ((_ is Cons!1500) (t!5196 lt!39051)) (= (_1!1102 (h!2090 (t!5196 lt!39051))) (_1!1102 lt!38772))))))

(declare-fun e!55428 () Option!146)

(assert (=> d!22005 (= (getValueByKey!140 (t!5196 lt!39051) (_1!1102 lt!38772)) e!55428)))

(declare-fun b!85023 () Bool)

(assert (=> b!85023 (= e!55428 (Some!145 (_2!1102 (h!2090 (t!5196 lt!39051)))))))

(declare-fun b!85024 () Bool)

(assert (=> b!85024 (= e!55428 e!55429)))

(declare-fun c!13778 () Bool)

(assert (=> b!85024 (= c!13778 (and ((_ is Cons!1500) (t!5196 lt!39051)) (not (= (_1!1102 (h!2090 (t!5196 lt!39051))) (_1!1102 lt!38772)))))))

(declare-fun b!85026 () Bool)

(assert (=> b!85026 (= e!55429 None!144)))

(assert (= (and d!22005 c!13777) b!85023))

(assert (= (and d!22005 (not c!13777)) b!85024))

(assert (= (and b!85024 c!13778) b!85025))

(assert (= (and b!85024 (not c!13778)) b!85026))

(declare-fun m!89313 () Bool)

(assert (=> b!85025 m!89313))

(assert (=> b!83501 d!22005))

(declare-fun b!85029 () Bool)

(declare-fun e!55431 () Option!146)

(assert (=> b!85029 (= e!55431 (getValueByKey!140 (t!5196 (t!5196 (toList!734 lt!39040))) (_1!1102 lt!38779)))))

(declare-fun d!22007 () Bool)

(declare-fun c!13779 () Bool)

(assert (=> d!22007 (= c!13779 (and ((_ is Cons!1500) (t!5196 (toList!734 lt!39040))) (= (_1!1102 (h!2090 (t!5196 (toList!734 lt!39040)))) (_1!1102 lt!38779))))))

(declare-fun e!55430 () Option!146)

(assert (=> d!22007 (= (getValueByKey!140 (t!5196 (toList!734 lt!39040)) (_1!1102 lt!38779)) e!55430)))

(declare-fun b!85027 () Bool)

(assert (=> b!85027 (= e!55430 (Some!145 (_2!1102 (h!2090 (t!5196 (toList!734 lt!39040))))))))

(declare-fun b!85028 () Bool)

(assert (=> b!85028 (= e!55430 e!55431)))

(declare-fun c!13780 () Bool)

(assert (=> b!85028 (= c!13780 (and ((_ is Cons!1500) (t!5196 (toList!734 lt!39040))) (not (= (_1!1102 (h!2090 (t!5196 (toList!734 lt!39040)))) (_1!1102 lt!38779)))))))

(declare-fun b!85030 () Bool)

(assert (=> b!85030 (= e!55431 None!144)))

(assert (= (and d!22007 c!13779) b!85027))

(assert (= (and d!22007 (not c!13779)) b!85028))

(assert (= (and b!85028 c!13780) b!85029))

(assert (= (and b!85028 (not c!13780)) b!85030))

(declare-fun m!89315 () Bool)

(assert (=> b!85029 m!89315))

(assert (=> b!83612 d!22007))

(declare-fun d!22009 () Bool)

(declare-fun lt!40086 () Bool)

(assert (=> d!22009 (= lt!40086 (select (content!89 lt!39508) (tuple2!2183 (_1!1102 lt!38775) (_2!1102 lt!38775))))))

(declare-fun e!55432 () Bool)

(assert (=> d!22009 (= lt!40086 e!55432)))

(declare-fun res!43834 () Bool)

(assert (=> d!22009 (=> (not res!43834) (not e!55432))))

(assert (=> d!22009 (= res!43834 ((_ is Cons!1500) lt!39508))))

(assert (=> d!22009 (= (contains!746 lt!39508 (tuple2!2183 (_1!1102 lt!38775) (_2!1102 lt!38775))) lt!40086)))

(declare-fun b!85031 () Bool)

(declare-fun e!55433 () Bool)

(assert (=> b!85031 (= e!55432 e!55433)))

(declare-fun res!43833 () Bool)

(assert (=> b!85031 (=> res!43833 e!55433)))

(assert (=> b!85031 (= res!43833 (= (h!2090 lt!39508) (tuple2!2183 (_1!1102 lt!38775) (_2!1102 lt!38775))))))

(declare-fun b!85032 () Bool)

(assert (=> b!85032 (= e!55433 (contains!746 (t!5196 lt!39508) (tuple2!2183 (_1!1102 lt!38775) (_2!1102 lt!38775))))))

(assert (= (and d!22009 res!43834) b!85031))

(assert (= (and b!85031 (not res!43833)) b!85032))

(declare-fun m!89317 () Bool)

(assert (=> d!22009 m!89317))

(declare-fun m!89319 () Bool)

(assert (=> d!22009 m!89319))

(declare-fun m!89321 () Bool)

(assert (=> b!85032 m!89321))

(assert (=> b!83744 d!22009))

(assert (=> d!21181 d!21179))

(declare-fun d!22011 () Bool)

(assert (=> d!22011 (= (getValueByKey!140 lt!39046 (_1!1102 lt!38775)) (Some!145 (_2!1102 lt!38775)))))

(assert (=> d!22011 true))

(declare-fun _$22!415 () Unit!2413)

(assert (=> d!22011 (= (choose!493 lt!39046 (_1!1102 lt!38775) (_2!1102 lt!38775)) _$22!415)))

(declare-fun bs!3605 () Bool)

(assert (= bs!3605 d!22011))

(assert (=> bs!3605 m!86087))

(assert (=> d!21181 d!22011))

(declare-fun d!22013 () Bool)

(declare-fun res!43835 () Bool)

(declare-fun e!55434 () Bool)

(assert (=> d!22013 (=> res!43835 e!55434)))

(assert (=> d!22013 (= res!43835 (or ((_ is Nil!1501) lt!39046) ((_ is Nil!1501) (t!5196 lt!39046))))))

(assert (=> d!22013 (= (isStrictlySorted!284 lt!39046) e!55434)))

(declare-fun b!85033 () Bool)

(declare-fun e!55435 () Bool)

(assert (=> b!85033 (= e!55434 e!55435)))

(declare-fun res!43836 () Bool)

(assert (=> b!85033 (=> (not res!43836) (not e!55435))))

(assert (=> b!85033 (= res!43836 (bvslt (_1!1102 (h!2090 lt!39046)) (_1!1102 (h!2090 (t!5196 lt!39046)))))))

(declare-fun b!85034 () Bool)

(assert (=> b!85034 (= e!55435 (isStrictlySorted!284 (t!5196 lt!39046)))))

(assert (= (and d!22013 (not res!43835)) b!85033))

(assert (= (and b!85033 res!43836) b!85034))

(declare-fun m!89323 () Bool)

(assert (=> b!85034 m!89323))

(assert (=> d!21181 d!22013))

(declare-fun d!22015 () Bool)

(declare-fun e!55437 () Bool)

(assert (=> d!22015 e!55437))

(declare-fun res!43837 () Bool)

(assert (=> d!22015 (=> res!43837 e!55437)))

(declare-fun lt!40087 () Bool)

(assert (=> d!22015 (= res!43837 (not lt!40087))))

(declare-fun lt!40090 () Bool)

(assert (=> d!22015 (= lt!40087 lt!40090)))

(declare-fun lt!40089 () Unit!2413)

(declare-fun e!55436 () Unit!2413)

(assert (=> d!22015 (= lt!40089 e!55436)))

(declare-fun c!13781 () Bool)

(assert (=> d!22015 (= c!13781 lt!40090)))

(assert (=> d!22015 (= lt!40090 (containsKey!143 (toList!734 lt!39143) (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!22015 (= (contains!744 lt!39143 (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)) lt!40087)))

(declare-fun b!85035 () Bool)

(declare-fun lt!40088 () Unit!2413)

(assert (=> b!85035 (= e!55436 lt!40088)))

(assert (=> b!85035 (= lt!40088 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 lt!39143) (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!85035 (isDefined!92 (getValueByKey!140 (toList!734 lt!39143) (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!85036 () Bool)

(declare-fun Unit!2491 () Unit!2413)

(assert (=> b!85036 (= e!55436 Unit!2491)))

(declare-fun b!85037 () Bool)

(assert (=> b!85037 (= e!55437 (isDefined!92 (getValueByKey!140 (toList!734 lt!39143) (select (arr!1904 (_keys!3984 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!22015 c!13781) b!85035))

(assert (= (and d!22015 (not c!13781)) b!85036))

(assert (= (and d!22015 (not res!43837)) b!85037))

(assert (=> d!22015 m!86211))

(declare-fun m!89325 () Bool)

(assert (=> d!22015 m!89325))

(assert (=> b!85035 m!86211))

(declare-fun m!89327 () Bool)

(assert (=> b!85035 m!89327))

(assert (=> b!85035 m!86211))

(assert (=> b!85035 m!87877))

(assert (=> b!85035 m!87877))

(declare-fun m!89329 () Bool)

(assert (=> b!85035 m!89329))

(assert (=> b!85037 m!86211))

(assert (=> b!85037 m!87877))

(assert (=> b!85037 m!87877))

(assert (=> b!85037 m!89329))

(assert (=> b!83263 d!22015))

(declare-fun d!22017 () Bool)

(declare-fun e!55438 () Bool)

(assert (=> d!22017 e!55438))

(declare-fun res!43839 () Bool)

(assert (=> d!22017 (=> (not res!43839) (not e!55438))))

(declare-fun lt!40092 () ListLongMap!1437)

(assert (=> d!22017 (= res!43839 (contains!744 lt!40092 (_1!1102 (tuple2!2183 lt!39240 (zeroValue!2210 newMap!16)))))))

(declare-fun lt!40094 () List!1504)

(assert (=> d!22017 (= lt!40092 (ListLongMap!1438 lt!40094))))

(declare-fun lt!40091 () Unit!2413)

(declare-fun lt!40093 () Unit!2413)

(assert (=> d!22017 (= lt!40091 lt!40093)))

(assert (=> d!22017 (= (getValueByKey!140 lt!40094 (_1!1102 (tuple2!2183 lt!39240 (zeroValue!2210 newMap!16)))) (Some!145 (_2!1102 (tuple2!2183 lt!39240 (zeroValue!2210 newMap!16)))))))

(assert (=> d!22017 (= lt!40093 (lemmaContainsTupThenGetReturnValue!57 lt!40094 (_1!1102 (tuple2!2183 lt!39240 (zeroValue!2210 newMap!16))) (_2!1102 (tuple2!2183 lt!39240 (zeroValue!2210 newMap!16)))))))

(assert (=> d!22017 (= lt!40094 (insertStrictlySorted!60 (toList!734 lt!39236) (_1!1102 (tuple2!2183 lt!39240 (zeroValue!2210 newMap!16))) (_2!1102 (tuple2!2183 lt!39240 (zeroValue!2210 newMap!16)))))))

(assert (=> d!22017 (= (+!105 lt!39236 (tuple2!2183 lt!39240 (zeroValue!2210 newMap!16))) lt!40092)))

(declare-fun b!85038 () Bool)

(declare-fun res!43838 () Bool)

(assert (=> b!85038 (=> (not res!43838) (not e!55438))))

(assert (=> b!85038 (= res!43838 (= (getValueByKey!140 (toList!734 lt!40092) (_1!1102 (tuple2!2183 lt!39240 (zeroValue!2210 newMap!16)))) (Some!145 (_2!1102 (tuple2!2183 lt!39240 (zeroValue!2210 newMap!16))))))))

(declare-fun b!85039 () Bool)

(assert (=> b!85039 (= e!55438 (contains!746 (toList!734 lt!40092) (tuple2!2183 lt!39240 (zeroValue!2210 newMap!16))))))

(assert (= (and d!22017 res!43839) b!85038))

(assert (= (and b!85038 res!43838) b!85039))

(declare-fun m!89331 () Bool)

(assert (=> d!22017 m!89331))

(declare-fun m!89333 () Bool)

(assert (=> d!22017 m!89333))

(declare-fun m!89335 () Bool)

(assert (=> d!22017 m!89335))

(declare-fun m!89337 () Bool)

(assert (=> d!22017 m!89337))

(declare-fun m!89339 () Bool)

(assert (=> b!85038 m!89339))

(declare-fun m!89341 () Bool)

(assert (=> b!85039 m!89341))

(assert (=> b!83443 d!22017))

(declare-fun d!22019 () Bool)

(assert (=> d!22019 (= (apply!81 (+!105 lt!39249 (tuple2!2183 lt!39231 (minValue!2210 newMap!16))) lt!39235) (get!1201 (getValueByKey!140 (toList!734 (+!105 lt!39249 (tuple2!2183 lt!39231 (minValue!2210 newMap!16)))) lt!39235)))))

(declare-fun bs!3606 () Bool)

(assert (= bs!3606 d!22019))

(declare-fun m!89343 () Bool)

(assert (=> bs!3606 m!89343))

(assert (=> bs!3606 m!89343))

(declare-fun m!89345 () Bool)

(assert (=> bs!3606 m!89345))

(assert (=> b!83443 d!22019))

(declare-fun d!22021 () Bool)

(declare-fun e!55440 () Bool)

(assert (=> d!22021 e!55440))

(declare-fun res!43840 () Bool)

(assert (=> d!22021 (=> res!43840 e!55440)))

(declare-fun lt!40095 () Bool)

(assert (=> d!22021 (= res!43840 (not lt!40095))))

(declare-fun lt!40098 () Bool)

(assert (=> d!22021 (= lt!40095 lt!40098)))

(declare-fun lt!40097 () Unit!2413)

(declare-fun e!55439 () Unit!2413)

(assert (=> d!22021 (= lt!40097 e!55439)))

(declare-fun c!13782 () Bool)

(assert (=> d!22021 (= c!13782 lt!40098)))

(assert (=> d!22021 (= lt!40098 (containsKey!143 (toList!734 (+!105 lt!39237 (tuple2!2183 lt!39230 (zeroValue!2210 newMap!16)))) lt!39246))))

(assert (=> d!22021 (= (contains!744 (+!105 lt!39237 (tuple2!2183 lt!39230 (zeroValue!2210 newMap!16))) lt!39246) lt!40095)))

(declare-fun b!85040 () Bool)

(declare-fun lt!40096 () Unit!2413)

(assert (=> b!85040 (= e!55439 lt!40096)))

(assert (=> b!85040 (= lt!40096 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 (+!105 lt!39237 (tuple2!2183 lt!39230 (zeroValue!2210 newMap!16)))) lt!39246))))

(assert (=> b!85040 (isDefined!92 (getValueByKey!140 (toList!734 (+!105 lt!39237 (tuple2!2183 lt!39230 (zeroValue!2210 newMap!16)))) lt!39246))))

(declare-fun b!85041 () Bool)

(declare-fun Unit!2492 () Unit!2413)

(assert (=> b!85041 (= e!55439 Unit!2492)))

(declare-fun b!85042 () Bool)

(assert (=> b!85042 (= e!55440 (isDefined!92 (getValueByKey!140 (toList!734 (+!105 lt!39237 (tuple2!2183 lt!39230 (zeroValue!2210 newMap!16)))) lt!39246)))))

(assert (= (and d!22021 c!13782) b!85040))

(assert (= (and d!22021 (not c!13782)) b!85041))

(assert (= (and d!22021 (not res!43840)) b!85042))

(declare-fun m!89347 () Bool)

(assert (=> d!22021 m!89347))

(declare-fun m!89349 () Bool)

(assert (=> b!85040 m!89349))

(declare-fun m!89351 () Bool)

(assert (=> b!85040 m!89351))

(assert (=> b!85040 m!89351))

(declare-fun m!89353 () Bool)

(assert (=> b!85040 m!89353))

(assert (=> b!85042 m!89351))

(assert (=> b!85042 m!89351))

(assert (=> b!85042 m!89353))

(assert (=> b!83443 d!22021))

(declare-fun d!22023 () Bool)

(declare-fun e!55441 () Bool)

(assert (=> d!22023 e!55441))

(declare-fun res!43842 () Bool)

(assert (=> d!22023 (=> (not res!43842) (not e!55441))))

(declare-fun lt!40100 () ListLongMap!1437)

(assert (=> d!22023 (= res!43842 (contains!744 lt!40100 (_1!1102 (tuple2!2183 lt!39230 (zeroValue!2210 newMap!16)))))))

(declare-fun lt!40102 () List!1504)

(assert (=> d!22023 (= lt!40100 (ListLongMap!1438 lt!40102))))

(declare-fun lt!40099 () Unit!2413)

(declare-fun lt!40101 () Unit!2413)

(assert (=> d!22023 (= lt!40099 lt!40101)))

(assert (=> d!22023 (= (getValueByKey!140 lt!40102 (_1!1102 (tuple2!2183 lt!39230 (zeroValue!2210 newMap!16)))) (Some!145 (_2!1102 (tuple2!2183 lt!39230 (zeroValue!2210 newMap!16)))))))

(assert (=> d!22023 (= lt!40101 (lemmaContainsTupThenGetReturnValue!57 lt!40102 (_1!1102 (tuple2!2183 lt!39230 (zeroValue!2210 newMap!16))) (_2!1102 (tuple2!2183 lt!39230 (zeroValue!2210 newMap!16)))))))

(assert (=> d!22023 (= lt!40102 (insertStrictlySorted!60 (toList!734 lt!39237) (_1!1102 (tuple2!2183 lt!39230 (zeroValue!2210 newMap!16))) (_2!1102 (tuple2!2183 lt!39230 (zeroValue!2210 newMap!16)))))))

(assert (=> d!22023 (= (+!105 lt!39237 (tuple2!2183 lt!39230 (zeroValue!2210 newMap!16))) lt!40100)))

(declare-fun b!85043 () Bool)

(declare-fun res!43841 () Bool)

(assert (=> b!85043 (=> (not res!43841) (not e!55441))))

(assert (=> b!85043 (= res!43841 (= (getValueByKey!140 (toList!734 lt!40100) (_1!1102 (tuple2!2183 lt!39230 (zeroValue!2210 newMap!16)))) (Some!145 (_2!1102 (tuple2!2183 lt!39230 (zeroValue!2210 newMap!16))))))))

(declare-fun b!85044 () Bool)

(assert (=> b!85044 (= e!55441 (contains!746 (toList!734 lt!40100) (tuple2!2183 lt!39230 (zeroValue!2210 newMap!16))))))

(assert (= (and d!22023 res!43842) b!85043))

(assert (= (and b!85043 res!43841) b!85044))

(declare-fun m!89355 () Bool)

(assert (=> d!22023 m!89355))

(declare-fun m!89357 () Bool)

(assert (=> d!22023 m!89357))

(declare-fun m!89359 () Bool)

(assert (=> d!22023 m!89359))

(declare-fun m!89361 () Bool)

(assert (=> d!22023 m!89361))

(declare-fun m!89363 () Bool)

(assert (=> b!85043 m!89363))

(declare-fun m!89365 () Bool)

(assert (=> b!85044 m!89365))

(assert (=> b!83443 d!22023))

(declare-fun d!22025 () Bool)

(assert (=> d!22025 (= (apply!81 lt!39249 lt!39235) (get!1201 (getValueByKey!140 (toList!734 lt!39249) lt!39235)))))

(declare-fun bs!3607 () Bool)

(assert (= bs!3607 d!22025))

(declare-fun m!89367 () Bool)

(assert (=> bs!3607 m!89367))

(assert (=> bs!3607 m!89367))

(declare-fun m!89369 () Bool)

(assert (=> bs!3607 m!89369))

(assert (=> b!83443 d!22025))

(declare-fun d!22027 () Bool)

(assert (=> d!22027 (= (apply!81 lt!39243 lt!39229) (get!1201 (getValueByKey!140 (toList!734 lt!39243) lt!39229)))))

(declare-fun bs!3608 () Bool)

(assert (= bs!3608 d!22027))

(declare-fun m!89371 () Bool)

(assert (=> bs!3608 m!89371))

(assert (=> bs!3608 m!89371))

(declare-fun m!89373 () Bool)

(assert (=> bs!3608 m!89373))

(assert (=> b!83443 d!22027))

(declare-fun d!22029 () Bool)

(assert (=> d!22029 (= (apply!81 (+!105 lt!39236 (tuple2!2183 lt!39240 (zeroValue!2210 newMap!16))) lt!39245) (get!1201 (getValueByKey!140 (toList!734 (+!105 lt!39236 (tuple2!2183 lt!39240 (zeroValue!2210 newMap!16)))) lt!39245)))))

(declare-fun bs!3609 () Bool)

(assert (= bs!3609 d!22029))

(declare-fun m!89375 () Bool)

(assert (=> bs!3609 m!89375))

(assert (=> bs!3609 m!89375))

(declare-fun m!89377 () Bool)

(assert (=> bs!3609 m!89377))

(assert (=> b!83443 d!22029))

(declare-fun d!22031 () Bool)

(assert (=> d!22031 (= (apply!81 (+!105 lt!39243 (tuple2!2183 lt!39233 (minValue!2210 newMap!16))) lt!39229) (get!1201 (getValueByKey!140 (toList!734 (+!105 lt!39243 (tuple2!2183 lt!39233 (minValue!2210 newMap!16)))) lt!39229)))))

(declare-fun bs!3610 () Bool)

(assert (= bs!3610 d!22031))

(declare-fun m!89379 () Bool)

(assert (=> bs!3610 m!89379))

(assert (=> bs!3610 m!89379))

(declare-fun m!89381 () Bool)

(assert (=> bs!3610 m!89381))

(assert (=> b!83443 d!22031))

(declare-fun d!22033 () Bool)

(assert (=> d!22033 (= (apply!81 (+!105 lt!39236 (tuple2!2183 lt!39240 (zeroValue!2210 newMap!16))) lt!39245) (apply!81 lt!39236 lt!39245))))

(declare-fun lt!40103 () Unit!2413)

(assert (=> d!22033 (= lt!40103 (choose!498 lt!39236 lt!39240 (zeroValue!2210 newMap!16) lt!39245))))

(declare-fun e!55442 () Bool)

(assert (=> d!22033 e!55442))

(declare-fun res!43843 () Bool)

(assert (=> d!22033 (=> (not res!43843) (not e!55442))))

(assert (=> d!22033 (= res!43843 (contains!744 lt!39236 lt!39245))))

(assert (=> d!22033 (= (addApplyDifferent!57 lt!39236 lt!39240 (zeroValue!2210 newMap!16) lt!39245) lt!40103)))

(declare-fun b!85045 () Bool)

(assert (=> b!85045 (= e!55442 (not (= lt!39245 lt!39240)))))

(assert (= (and d!22033 res!43843) b!85045))

(assert (=> d!22033 m!86499))

(assert (=> d!22033 m!86499))

(assert (=> d!22033 m!86517))

(declare-fun m!89383 () Bool)

(assert (=> d!22033 m!89383))

(assert (=> d!22033 m!86501))

(declare-fun m!89385 () Bool)

(assert (=> d!22033 m!89385))

(assert (=> b!83443 d!22033))

(declare-fun d!22035 () Bool)

(assert (=> d!22035 (= (apply!81 (+!105 lt!39249 (tuple2!2183 lt!39231 (minValue!2210 newMap!16))) lt!39235) (apply!81 lt!39249 lt!39235))))

(declare-fun lt!40104 () Unit!2413)

(assert (=> d!22035 (= lt!40104 (choose!498 lt!39249 lt!39231 (minValue!2210 newMap!16) lt!39235))))

(declare-fun e!55443 () Bool)

(assert (=> d!22035 e!55443))

(declare-fun res!43844 () Bool)

(assert (=> d!22035 (=> (not res!43844) (not e!55443))))

(assert (=> d!22035 (= res!43844 (contains!744 lt!39249 lt!39235))))

(assert (=> d!22035 (= (addApplyDifferent!57 lt!39249 lt!39231 (minValue!2210 newMap!16) lt!39235) lt!40104)))

(declare-fun b!85046 () Bool)

(assert (=> b!85046 (= e!55443 (not (= lt!39235 lt!39231)))))

(assert (= (and d!22035 res!43844) b!85046))

(assert (=> d!22035 m!86511))

(assert (=> d!22035 m!86511))

(assert (=> d!22035 m!86513))

(declare-fun m!89387 () Bool)

(assert (=> d!22035 m!89387))

(assert (=> d!22035 m!86525))

(declare-fun m!89389 () Bool)

(assert (=> d!22035 m!89389))

(assert (=> b!83443 d!22035))

(assert (=> b!83443 d!21945))

(declare-fun d!22037 () Bool)

(declare-fun e!55444 () Bool)

(assert (=> d!22037 e!55444))

(declare-fun res!43846 () Bool)

(assert (=> d!22037 (=> (not res!43846) (not e!55444))))

(declare-fun lt!40106 () ListLongMap!1437)

(assert (=> d!22037 (= res!43846 (contains!744 lt!40106 (_1!1102 (tuple2!2183 lt!39231 (minValue!2210 newMap!16)))))))

(declare-fun lt!40108 () List!1504)

(assert (=> d!22037 (= lt!40106 (ListLongMap!1438 lt!40108))))

(declare-fun lt!40105 () Unit!2413)

(declare-fun lt!40107 () Unit!2413)

(assert (=> d!22037 (= lt!40105 lt!40107)))

(assert (=> d!22037 (= (getValueByKey!140 lt!40108 (_1!1102 (tuple2!2183 lt!39231 (minValue!2210 newMap!16)))) (Some!145 (_2!1102 (tuple2!2183 lt!39231 (minValue!2210 newMap!16)))))))

(assert (=> d!22037 (= lt!40107 (lemmaContainsTupThenGetReturnValue!57 lt!40108 (_1!1102 (tuple2!2183 lt!39231 (minValue!2210 newMap!16))) (_2!1102 (tuple2!2183 lt!39231 (minValue!2210 newMap!16)))))))

(assert (=> d!22037 (= lt!40108 (insertStrictlySorted!60 (toList!734 lt!39249) (_1!1102 (tuple2!2183 lt!39231 (minValue!2210 newMap!16))) (_2!1102 (tuple2!2183 lt!39231 (minValue!2210 newMap!16)))))))

(assert (=> d!22037 (= (+!105 lt!39249 (tuple2!2183 lt!39231 (minValue!2210 newMap!16))) lt!40106)))

(declare-fun b!85047 () Bool)

(declare-fun res!43845 () Bool)

(assert (=> b!85047 (=> (not res!43845) (not e!55444))))

(assert (=> b!85047 (= res!43845 (= (getValueByKey!140 (toList!734 lt!40106) (_1!1102 (tuple2!2183 lt!39231 (minValue!2210 newMap!16)))) (Some!145 (_2!1102 (tuple2!2183 lt!39231 (minValue!2210 newMap!16))))))))

(declare-fun b!85048 () Bool)

(assert (=> b!85048 (= e!55444 (contains!746 (toList!734 lt!40106) (tuple2!2183 lt!39231 (minValue!2210 newMap!16))))))

(assert (= (and d!22037 res!43846) b!85047))

(assert (= (and b!85047 res!43845) b!85048))

(declare-fun m!89391 () Bool)

(assert (=> d!22037 m!89391))

(declare-fun m!89393 () Bool)

(assert (=> d!22037 m!89393))

(declare-fun m!89395 () Bool)

(assert (=> d!22037 m!89395))

(declare-fun m!89397 () Bool)

(assert (=> d!22037 m!89397))

(declare-fun m!89399 () Bool)

(assert (=> b!85047 m!89399))

(declare-fun m!89401 () Bool)

(assert (=> b!85048 m!89401))

(assert (=> b!83443 d!22037))

(declare-fun d!22039 () Bool)

(assert (=> d!22039 (contains!744 (+!105 lt!39237 (tuple2!2183 lt!39230 (zeroValue!2210 newMap!16))) lt!39246)))

(declare-fun lt!40109 () Unit!2413)

(assert (=> d!22039 (= lt!40109 (choose!497 lt!39237 lt!39230 (zeroValue!2210 newMap!16) lt!39246))))

(assert (=> d!22039 (contains!744 lt!39237 lt!39246)))

(assert (=> d!22039 (= (addStillContains!57 lt!39237 lt!39230 (zeroValue!2210 newMap!16) lt!39246) lt!40109)))

(declare-fun bs!3611 () Bool)

(assert (= bs!3611 d!22039))

(assert (=> bs!3611 m!86505))

(assert (=> bs!3611 m!86505))

(assert (=> bs!3611 m!86507))

(declare-fun m!89403 () Bool)

(assert (=> bs!3611 m!89403))

(declare-fun m!89405 () Bool)

(assert (=> bs!3611 m!89405))

(assert (=> b!83443 d!22039))

(declare-fun d!22041 () Bool)

(declare-fun e!55445 () Bool)

(assert (=> d!22041 e!55445))

(declare-fun res!43848 () Bool)

(assert (=> d!22041 (=> (not res!43848) (not e!55445))))

(declare-fun lt!40111 () ListLongMap!1437)

(assert (=> d!22041 (= res!43848 (contains!744 lt!40111 (_1!1102 (tuple2!2183 lt!39233 (minValue!2210 newMap!16)))))))

(declare-fun lt!40113 () List!1504)

(assert (=> d!22041 (= lt!40111 (ListLongMap!1438 lt!40113))))

(declare-fun lt!40110 () Unit!2413)

(declare-fun lt!40112 () Unit!2413)

(assert (=> d!22041 (= lt!40110 lt!40112)))

(assert (=> d!22041 (= (getValueByKey!140 lt!40113 (_1!1102 (tuple2!2183 lt!39233 (minValue!2210 newMap!16)))) (Some!145 (_2!1102 (tuple2!2183 lt!39233 (minValue!2210 newMap!16)))))))

(assert (=> d!22041 (= lt!40112 (lemmaContainsTupThenGetReturnValue!57 lt!40113 (_1!1102 (tuple2!2183 lt!39233 (minValue!2210 newMap!16))) (_2!1102 (tuple2!2183 lt!39233 (minValue!2210 newMap!16)))))))

(assert (=> d!22041 (= lt!40113 (insertStrictlySorted!60 (toList!734 lt!39243) (_1!1102 (tuple2!2183 lt!39233 (minValue!2210 newMap!16))) (_2!1102 (tuple2!2183 lt!39233 (minValue!2210 newMap!16)))))))

(assert (=> d!22041 (= (+!105 lt!39243 (tuple2!2183 lt!39233 (minValue!2210 newMap!16))) lt!40111)))

(declare-fun b!85049 () Bool)

(declare-fun res!43847 () Bool)

(assert (=> b!85049 (=> (not res!43847) (not e!55445))))

(assert (=> b!85049 (= res!43847 (= (getValueByKey!140 (toList!734 lt!40111) (_1!1102 (tuple2!2183 lt!39233 (minValue!2210 newMap!16)))) (Some!145 (_2!1102 (tuple2!2183 lt!39233 (minValue!2210 newMap!16))))))))

(declare-fun b!85050 () Bool)

(assert (=> b!85050 (= e!55445 (contains!746 (toList!734 lt!40111) (tuple2!2183 lt!39233 (minValue!2210 newMap!16))))))

(assert (= (and d!22041 res!43848) b!85049))

(assert (= (and b!85049 res!43847) b!85050))

(declare-fun m!89407 () Bool)

(assert (=> d!22041 m!89407))

(declare-fun m!89409 () Bool)

(assert (=> d!22041 m!89409))

(declare-fun m!89411 () Bool)

(assert (=> d!22041 m!89411))

(declare-fun m!89413 () Bool)

(assert (=> d!22041 m!89413))

(declare-fun m!89415 () Bool)

(assert (=> b!85049 m!89415))

(declare-fun m!89417 () Bool)

(assert (=> b!85050 m!89417))

(assert (=> b!83443 d!22041))

(declare-fun d!22043 () Bool)

(assert (=> d!22043 (= (apply!81 lt!39236 lt!39245) (get!1201 (getValueByKey!140 (toList!734 lt!39236) lt!39245)))))

(declare-fun bs!3612 () Bool)

(assert (= bs!3612 d!22043))

(declare-fun m!89419 () Bool)

(assert (=> bs!3612 m!89419))

(assert (=> bs!3612 m!89419))

(declare-fun m!89421 () Bool)

(assert (=> bs!3612 m!89421))

(assert (=> b!83443 d!22043))

(declare-fun d!22045 () Bool)

(assert (=> d!22045 (= (apply!81 (+!105 lt!39243 (tuple2!2183 lt!39233 (minValue!2210 newMap!16))) lt!39229) (apply!81 lt!39243 lt!39229))))

(declare-fun lt!40114 () Unit!2413)

(assert (=> d!22045 (= lt!40114 (choose!498 lt!39243 lt!39233 (minValue!2210 newMap!16) lt!39229))))

(declare-fun e!55446 () Bool)

(assert (=> d!22045 e!55446))

(declare-fun res!43849 () Bool)

(assert (=> d!22045 (=> (not res!43849) (not e!55446))))

(assert (=> d!22045 (= res!43849 (contains!744 lt!39243 lt!39229))))

(assert (=> d!22045 (= (addApplyDifferent!57 lt!39243 lt!39233 (minValue!2210 newMap!16) lt!39229) lt!40114)))

(declare-fun b!85051 () Bool)

(assert (=> b!85051 (= e!55446 (not (= lt!39229 lt!39233)))))

(assert (= (and d!22045 res!43849) b!85051))

(assert (=> d!22045 m!86497))

(assert (=> d!22045 m!86497))

(assert (=> d!22045 m!86503))

(declare-fun m!89423 () Bool)

(assert (=> d!22045 m!89423))

(assert (=> d!22045 m!86519))

(declare-fun m!89425 () Bool)

(assert (=> d!22045 m!89425))

(assert (=> b!83443 d!22045))

(declare-fun d!22047 () Bool)

(declare-fun res!43850 () Bool)

(declare-fun e!55447 () Bool)

(assert (=> d!22047 (=> res!43850 e!55447)))

(assert (=> d!22047 (= res!43850 (and ((_ is Cons!1500) (toList!734 lt!39036)) (= (_1!1102 (h!2090 (toList!734 lt!39036))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!22047 (= (containsKey!143 (toList!734 lt!39036) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!55447)))

(declare-fun b!85052 () Bool)

(declare-fun e!55448 () Bool)

(assert (=> b!85052 (= e!55447 e!55448)))

(declare-fun res!43851 () Bool)

(assert (=> b!85052 (=> (not res!43851) (not e!55448))))

(assert (=> b!85052 (= res!43851 (and (or (not ((_ is Cons!1500) (toList!734 lt!39036))) (bvsle (_1!1102 (h!2090 (toList!734 lt!39036))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1500) (toList!734 lt!39036)) (bvslt (_1!1102 (h!2090 (toList!734 lt!39036))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!85053 () Bool)

(assert (=> b!85053 (= e!55448 (containsKey!143 (t!5196 (toList!734 lt!39036)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!22047 (not res!43850)) b!85052))

(assert (= (and b!85052 res!43851) b!85053))

(assert (=> b!85053 m!85989))

(declare-fun m!89427 () Bool)

(assert (=> b!85053 m!89427))

(assert (=> d!21063 d!22047))

(declare-fun d!22049 () Bool)

(declare-fun c!13783 () Bool)

(assert (=> d!22049 (= c!13783 ((_ is Nil!1501) (toList!734 lt!39040)))))

(declare-fun e!55449 () (InoxSet tuple2!2182))

(assert (=> d!22049 (= (content!89 (toList!734 lt!39040)) e!55449)))

(declare-fun b!85054 () Bool)

(assert (=> b!85054 (= e!55449 ((as const (Array tuple2!2182 Bool)) false))))

(declare-fun b!85055 () Bool)

(assert (=> b!85055 (= e!55449 ((_ map or) (store ((as const (Array tuple2!2182 Bool)) false) (h!2090 (toList!734 lt!39040)) true) (content!89 (t!5196 (toList!734 lt!39040)))))))

(assert (= (and d!22049 c!13783) b!85054))

(assert (= (and d!22049 (not c!13783)) b!85055))

(declare-fun m!89429 () Bool)

(assert (=> b!85055 m!89429))

(declare-fun m!89431 () Bool)

(assert (=> b!85055 m!89431))

(assert (=> d!20977 d!22049))

(declare-fun d!22051 () Bool)

(declare-fun lt!40115 () Bool)

(assert (=> d!22051 (= lt!40115 (select (content!89 (t!5196 (toList!734 lt!39044))) lt!38775))))

(declare-fun e!55450 () Bool)

(assert (=> d!22051 (= lt!40115 e!55450)))

(declare-fun res!43853 () Bool)

(assert (=> d!22051 (=> (not res!43853) (not e!55450))))

(assert (=> d!22051 (= res!43853 ((_ is Cons!1500) (t!5196 (toList!734 lt!39044))))))

(assert (=> d!22051 (= (contains!746 (t!5196 (toList!734 lt!39044)) lt!38775) lt!40115)))

(declare-fun b!85056 () Bool)

(declare-fun e!55451 () Bool)

(assert (=> b!85056 (= e!55450 e!55451)))

(declare-fun res!43852 () Bool)

(assert (=> b!85056 (=> res!43852 e!55451)))

(assert (=> b!85056 (= res!43852 (= (h!2090 (t!5196 (toList!734 lt!39044))) lt!38775))))

(declare-fun b!85057 () Bool)

(assert (=> b!85057 (= e!55451 (contains!746 (t!5196 (t!5196 (toList!734 lt!39044))) lt!38775))))

(assert (= (and d!22051 res!43853) b!85056))

(assert (= (and b!85056 (not res!43852)) b!85057))

(assert (=> d!22051 m!89255))

(declare-fun m!89433 () Bool)

(assert (=> d!22051 m!89433))

(declare-fun m!89435 () Bool)

(assert (=> b!85057 m!89435))

(assert (=> b!83382 d!22051))

(assert (=> bm!7842 d!21013))

(declare-fun d!22053 () Bool)

(declare-fun lt!40116 () Bool)

(assert (=> d!22053 (= lt!40116 (select (content!89 (t!5196 (toList!734 lt!39040))) lt!38779))))

(declare-fun e!55452 () Bool)

(assert (=> d!22053 (= lt!40116 e!55452)))

(declare-fun res!43855 () Bool)

(assert (=> d!22053 (=> (not res!43855) (not e!55452))))

(assert (=> d!22053 (= res!43855 ((_ is Cons!1500) (t!5196 (toList!734 lt!39040))))))

(assert (=> d!22053 (= (contains!746 (t!5196 (toList!734 lt!39040)) lt!38779) lt!40116)))

(declare-fun b!85058 () Bool)

(declare-fun e!55453 () Bool)

(assert (=> b!85058 (= e!55452 e!55453)))

(declare-fun res!43854 () Bool)

(assert (=> b!85058 (=> res!43854 e!55453)))

(assert (=> b!85058 (= res!43854 (= (h!2090 (t!5196 (toList!734 lt!39040))) lt!38779))))

(declare-fun b!85059 () Bool)

(assert (=> b!85059 (= e!55453 (contains!746 (t!5196 (t!5196 (toList!734 lt!39040))) lt!38779))))

(assert (= (and d!22053 res!43855) b!85058))

(assert (= (and b!85058 (not res!43854)) b!85059))

(assert (=> d!22053 m!89431))

(declare-fun m!89437 () Bool)

(assert (=> d!22053 m!89437))

(declare-fun m!89439 () Bool)

(assert (=> b!85059 m!89439))

(assert (=> b!83322 d!22053))

(assert (=> b!83273 d!21871))

(declare-fun b!85060 () Bool)

(declare-fun e!55454 () (_ BitVec 32))

(declare-fun call!8016 () (_ BitVec 32))

(assert (=> b!85060 (= e!55454 call!8016)))

(declare-fun b!85061 () Bool)

(declare-fun e!55455 () (_ BitVec 32))

(assert (=> b!85061 (= e!55455 #b00000000000000000000000000000000)))

(declare-fun b!85062 () Bool)

(assert (=> b!85062 (= e!55455 e!55454)))

(declare-fun c!13784 () Bool)

(assert (=> b!85062 (= c!13784 (validKeyInArray!0 (select (arr!1904 (_keys!3984 (_2!1101 lt!38973))) #b00000000000000000000000000000000)))))

(declare-fun bm!8013 () Bool)

(assert (=> bm!8013 (= call!8016 (arrayCountValidKeys!0 (_keys!3984 (_2!1101 lt!38973)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2147 (_keys!3984 (_2!1101 lt!38973)))))))

(declare-fun d!22055 () Bool)

(declare-fun lt!40117 () (_ BitVec 32))

(assert (=> d!22055 (and (bvsge lt!40117 #b00000000000000000000000000000000) (bvsle lt!40117 (bvsub (size!2147 (_keys!3984 (_2!1101 lt!38973))) #b00000000000000000000000000000000)))))

(assert (=> d!22055 (= lt!40117 e!55455)))

(declare-fun c!13785 () Bool)

(assert (=> d!22055 (= c!13785 (bvsge #b00000000000000000000000000000000 (size!2147 (_keys!3984 (_2!1101 lt!38973)))))))

(assert (=> d!22055 (and (bvsle #b00000000000000000000000000000000 (size!2147 (_keys!3984 (_2!1101 lt!38973)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2147 (_keys!3984 (_2!1101 lt!38973))) (size!2147 (_keys!3984 (_2!1101 lt!38973)))))))

(assert (=> d!22055 (= (arrayCountValidKeys!0 (_keys!3984 (_2!1101 lt!38973)) #b00000000000000000000000000000000 (size!2147 (_keys!3984 (_2!1101 lt!38973)))) lt!40117)))

(declare-fun b!85063 () Bool)

(assert (=> b!85063 (= e!55454 (bvadd #b00000000000000000000000000000001 call!8016))))

(assert (= (and d!22055 c!13785) b!85061))

(assert (= (and d!22055 (not c!13785)) b!85062))

(assert (= (and b!85062 c!13784) b!85063))

(assert (= (and b!85062 (not c!13784)) b!85060))

(assert (= (or b!85063 b!85060) bm!8013))

(assert (=> b!85062 m!87583))

(assert (=> b!85062 m!87583))

(assert (=> b!85062 m!87585))

(declare-fun m!89441 () Bool)

(assert (=> bm!8013 m!89441))

(assert (=> b!83614 d!22055))

(declare-fun d!22057 () Bool)

(declare-fun res!43856 () Bool)

(declare-fun e!55456 () Bool)

(assert (=> d!22057 (=> res!43856 e!55456)))

(assert (=> d!22057 (= res!43856 (and ((_ is Cons!1500) (toList!734 (+!105 lt!39032 (tuple2!2183 lt!39033 lt!39035)))) (= (_1!1102 (h!2090 (toList!734 (+!105 lt!39032 (tuple2!2183 lt!39033 lt!39035))))) lt!39034)))))

(assert (=> d!22057 (= (containsKey!143 (toList!734 (+!105 lt!39032 (tuple2!2183 lt!39033 lt!39035))) lt!39034) e!55456)))

(declare-fun b!85064 () Bool)

(declare-fun e!55457 () Bool)

(assert (=> b!85064 (= e!55456 e!55457)))

(declare-fun res!43857 () Bool)

(assert (=> b!85064 (=> (not res!43857) (not e!55457))))

(assert (=> b!85064 (= res!43857 (and (or (not ((_ is Cons!1500) (toList!734 (+!105 lt!39032 (tuple2!2183 lt!39033 lt!39035))))) (bvsle (_1!1102 (h!2090 (toList!734 (+!105 lt!39032 (tuple2!2183 lt!39033 lt!39035))))) lt!39034)) ((_ is Cons!1500) (toList!734 (+!105 lt!39032 (tuple2!2183 lt!39033 lt!39035)))) (bvslt (_1!1102 (h!2090 (toList!734 (+!105 lt!39032 (tuple2!2183 lt!39033 lt!39035))))) lt!39034)))))

(declare-fun b!85065 () Bool)

(assert (=> b!85065 (= e!55457 (containsKey!143 (t!5196 (toList!734 (+!105 lt!39032 (tuple2!2183 lt!39033 lt!39035)))) lt!39034))))

(assert (= (and d!22057 (not res!43856)) b!85064))

(assert (= (and b!85064 res!43857) b!85065))

(declare-fun m!89443 () Bool)

(assert (=> b!85065 m!89443))

(assert (=> d!21045 d!22057))

(declare-fun d!22059 () Bool)

(declare-fun e!55459 () Bool)

(assert (=> d!22059 e!55459))

(declare-fun res!43858 () Bool)

(assert (=> d!22059 (=> res!43858 e!55459)))

(declare-fun lt!40118 () Bool)

(assert (=> d!22059 (= res!43858 (not lt!40118))))

(declare-fun lt!40121 () Bool)

(assert (=> d!22059 (= lt!40118 lt!40121)))

(declare-fun lt!40120 () Unit!2413)

(declare-fun e!55458 () Unit!2413)

(assert (=> d!22059 (= lt!40120 e!55458)))

(declare-fun c!13786 () Bool)

(assert (=> d!22059 (= c!13786 lt!40121)))

(assert (=> d!22059 (= lt!40121 (containsKey!143 (toList!734 lt!39292) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> d!22059 (= (contains!744 lt!39292 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) lt!40118)))

(declare-fun b!85066 () Bool)

(declare-fun lt!40119 () Unit!2413)

(assert (=> b!85066 (= e!55458 lt!40119)))

(assert (=> b!85066 (= lt!40119 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 lt!39292) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!85066 (isDefined!92 (getValueByKey!140 (toList!734 lt!39292) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!85067 () Bool)

(declare-fun Unit!2493 () Unit!2413)

(assert (=> b!85067 (= e!55458 Unit!2493)))

(declare-fun b!85068 () Bool)

(assert (=> b!85068 (= e!55459 (isDefined!92 (getValueByKey!140 (toList!734 lt!39292) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(assert (= (and d!22059 c!13786) b!85066))

(assert (= (and d!22059 (not c!13786)) b!85067))

(assert (= (and d!22059 (not res!43858)) b!85068))

(assert (=> d!22059 m!86271))

(declare-fun m!89445 () Bool)

(assert (=> d!22059 m!89445))

(assert (=> b!85066 m!86271))

(declare-fun m!89447 () Bool)

(assert (=> b!85066 m!89447))

(assert (=> b!85066 m!86271))

(assert (=> b!85066 m!89293))

(assert (=> b!85066 m!89293))

(declare-fun m!89449 () Bool)

(assert (=> b!85066 m!89449))

(assert (=> b!85068 m!86271))

(assert (=> b!85068 m!89293))

(assert (=> b!85068 m!89293))

(assert (=> b!85068 m!89449))

(assert (=> b!83485 d!22059))

(declare-fun d!22061 () Bool)

(declare-fun res!43859 () Bool)

(declare-fun e!55460 () Bool)

(assert (=> d!22061 (=> res!43859 e!55460)))

(assert (=> d!22061 (= res!43859 (and ((_ is Cons!1500) (toList!734 lt!39040)) (= (_1!1102 (h!2090 (toList!734 lt!39040))) (_1!1102 lt!38779))))))

(assert (=> d!22061 (= (containsKey!143 (toList!734 lt!39040) (_1!1102 lt!38779)) e!55460)))

(declare-fun b!85069 () Bool)

(declare-fun e!55461 () Bool)

(assert (=> b!85069 (= e!55460 e!55461)))

(declare-fun res!43860 () Bool)

(assert (=> b!85069 (=> (not res!43860) (not e!55461))))

(assert (=> b!85069 (= res!43860 (and (or (not ((_ is Cons!1500) (toList!734 lt!39040))) (bvsle (_1!1102 (h!2090 (toList!734 lt!39040))) (_1!1102 lt!38779))) ((_ is Cons!1500) (toList!734 lt!39040)) (bvslt (_1!1102 (h!2090 (toList!734 lt!39040))) (_1!1102 lt!38779))))))

(declare-fun b!85070 () Bool)

(assert (=> b!85070 (= e!55461 (containsKey!143 (t!5196 (toList!734 lt!39040)) (_1!1102 lt!38779)))))

(assert (= (and d!22061 (not res!43859)) b!85069))

(assert (= (and b!85069 res!43860) b!85070))

(declare-fun m!89451 () Bool)

(assert (=> b!85070 m!89451))

(assert (=> d!21193 d!22061))

(declare-fun d!22063 () Bool)

(assert (=> d!22063 (= (isEmpty!340 (getValueByKey!140 (toList!734 lt!38770) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355))) (not ((_ is Some!145) (getValueByKey!140 (toList!734 lt!38770) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))))

(assert (=> d!21187 d!22063))

(declare-fun d!22065 () Bool)

(declare-fun res!43861 () Bool)

(declare-fun e!55462 () Bool)

(assert (=> d!22065 (=> res!43861 e!55462)))

(assert (=> d!22065 (= res!43861 (and ((_ is Cons!1500) (t!5196 (toList!734 lt!38770))) (= (_1!1102 (h!2090 (t!5196 (toList!734 lt!38770)))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355))))))

(assert (=> d!22065 (= (containsKey!143 (t!5196 (toList!734 lt!38770)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)) e!55462)))

(declare-fun b!85071 () Bool)

(declare-fun e!55463 () Bool)

(assert (=> b!85071 (= e!55462 e!55463)))

(declare-fun res!43862 () Bool)

(assert (=> b!85071 (=> (not res!43862) (not e!55463))))

(assert (=> b!85071 (= res!43862 (and (or (not ((_ is Cons!1500) (t!5196 (toList!734 lt!38770)))) (bvsle (_1!1102 (h!2090 (t!5196 (toList!734 lt!38770)))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355))) ((_ is Cons!1500) (t!5196 (toList!734 lt!38770))) (bvslt (_1!1102 (h!2090 (t!5196 (toList!734 lt!38770)))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355))))))

(declare-fun b!85072 () Bool)

(assert (=> b!85072 (= e!55463 (containsKey!143 (t!5196 (t!5196 (toList!734 lt!38770))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355)))))

(assert (= (and d!22065 (not res!43861)) b!85071))

(assert (= (and b!85071 res!43862) b!85072))

(assert (=> b!85072 m!85721))

(declare-fun m!89453 () Bool)

(assert (=> b!85072 m!89453))

(assert (=> b!83433 d!22065))

(declare-fun d!22067 () Bool)

(declare-fun res!43863 () Bool)

(declare-fun e!55464 () Bool)

(assert (=> d!22067 (=> res!43863 e!55464)))

(assert (=> d!22067 (= res!43863 (and ((_ is Cons!1500) (toList!734 lt!39036)) (= (_1!1102 (h!2090 (toList!734 lt!39036))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!22067 (= (containsKey!143 (toList!734 lt!39036) #b0000000000000000000000000000000000000000000000000000000000000000) e!55464)))

(declare-fun b!85073 () Bool)

(declare-fun e!55465 () Bool)

(assert (=> b!85073 (= e!55464 e!55465)))

(declare-fun res!43864 () Bool)

(assert (=> b!85073 (=> (not res!43864) (not e!55465))))

(assert (=> b!85073 (= res!43864 (and (or (not ((_ is Cons!1500) (toList!734 lt!39036))) (bvsle (_1!1102 (h!2090 (toList!734 lt!39036))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1500) (toList!734 lt!39036)) (bvslt (_1!1102 (h!2090 (toList!734 lt!39036))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!85074 () Bool)

(assert (=> b!85074 (= e!55465 (containsKey!143 (t!5196 (toList!734 lt!39036)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!22067 (not res!43863)) b!85073))

(assert (= (and b!85073 res!43864) b!85074))

(declare-fun m!89455 () Bool)

(assert (=> b!85074 m!89455))

(assert (=> d!21005 d!22067))

(declare-fun d!22069 () Bool)

(declare-fun res!43865 () Bool)

(declare-fun e!55466 () Bool)

(assert (=> d!22069 (=> res!43865 e!55466)))

(assert (=> d!22069 (= res!43865 (and ((_ is Cons!1500) (toList!734 lt!39053)) (= (_1!1102 (h!2090 (toList!734 lt!39053))) (_1!1102 lt!38775))))))

(assert (=> d!22069 (= (containsKey!143 (toList!734 lt!39053) (_1!1102 lt!38775)) e!55466)))

(declare-fun b!85075 () Bool)

(declare-fun e!55467 () Bool)

(assert (=> b!85075 (= e!55466 e!55467)))

(declare-fun res!43866 () Bool)

(assert (=> b!85075 (=> (not res!43866) (not e!55467))))

(assert (=> b!85075 (= res!43866 (and (or (not ((_ is Cons!1500) (toList!734 lt!39053))) (bvsle (_1!1102 (h!2090 (toList!734 lt!39053))) (_1!1102 lt!38775))) ((_ is Cons!1500) (toList!734 lt!39053)) (bvslt (_1!1102 (h!2090 (toList!734 lt!39053))) (_1!1102 lt!38775))))))

(declare-fun b!85076 () Bool)

(assert (=> b!85076 (= e!55467 (containsKey!143 (t!5196 (toList!734 lt!39053)) (_1!1102 lt!38775)))))

(assert (= (and d!22069 (not res!43865)) b!85075))

(assert (= (and b!85075 res!43866) b!85076))

(declare-fun m!89457 () Bool)

(assert (=> b!85076 m!89457))

(assert (=> d!21145 d!22069))

(declare-fun d!22071 () Bool)

(declare-fun e!55469 () Bool)

(assert (=> d!22071 e!55469))

(declare-fun res!43867 () Bool)

(assert (=> d!22071 (=> res!43867 e!55469)))

(declare-fun lt!40122 () Bool)

(assert (=> d!22071 (= res!43867 (not lt!40122))))

(declare-fun lt!40125 () Bool)

(assert (=> d!22071 (= lt!40122 lt!40125)))

(declare-fun lt!40124 () Unit!2413)

(declare-fun e!55468 () Unit!2413)

(assert (=> d!22071 (= lt!40124 e!55468)))

(declare-fun c!13787 () Bool)

(assert (=> d!22071 (= c!13787 lt!40125)))

(assert (=> d!22071 (= lt!40125 (containsKey!143 (toList!734 lt!39292) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!22071 (= (contains!744 lt!39292 #b0000000000000000000000000000000000000000000000000000000000000000) lt!40122)))

(declare-fun b!85077 () Bool)

(declare-fun lt!40123 () Unit!2413)

(assert (=> b!85077 (= e!55468 lt!40123)))

(assert (=> b!85077 (= lt!40123 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 lt!39292) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!85077 (isDefined!92 (getValueByKey!140 (toList!734 lt!39292) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!85078 () Bool)

(declare-fun Unit!2494 () Unit!2413)

(assert (=> b!85078 (= e!55468 Unit!2494)))

(declare-fun b!85079 () Bool)

(assert (=> b!85079 (= e!55469 (isDefined!92 (getValueByKey!140 (toList!734 lt!39292) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!22071 c!13787) b!85077))

(assert (= (and d!22071 (not c!13787)) b!85078))

(assert (= (and d!22071 (not res!43867)) b!85079))

(declare-fun m!89459 () Bool)

(assert (=> d!22071 m!89459))

(declare-fun m!89461 () Bool)

(assert (=> b!85077 m!89461))

(declare-fun m!89463 () Bool)

(assert (=> b!85077 m!89463))

(assert (=> b!85077 m!89463))

(declare-fun m!89465 () Bool)

(assert (=> b!85077 m!89465))

(assert (=> b!85079 m!89463))

(assert (=> b!85079 m!89463))

(assert (=> b!85079 m!89465))

(assert (=> d!21067 d!22071))

(assert (=> d!21067 d!20935))

(declare-fun d!22073 () Bool)

(declare-fun c!13788 () Bool)

(assert (=> d!22073 (= c!13788 ((_ is Nil!1501) (toList!734 lt!39049)))))

(declare-fun e!55470 () (InoxSet tuple2!2182))

(assert (=> d!22073 (= (content!89 (toList!734 lt!39049)) e!55470)))

(declare-fun b!85080 () Bool)

(assert (=> b!85080 (= e!55470 ((as const (Array tuple2!2182 Bool)) false))))

(declare-fun b!85081 () Bool)

(assert (=> b!85081 (= e!55470 ((_ map or) (store ((as const (Array tuple2!2182 Bool)) false) (h!2090 (toList!734 lt!39049)) true) (content!89 (t!5196 (toList!734 lt!39049)))))))

(assert (= (and d!22073 c!13788) b!85080))

(assert (= (and d!22073 (not c!13788)) b!85081))

(declare-fun m!89467 () Bool)

(assert (=> b!85081 m!89467))

(assert (=> b!85081 m!88855))

(assert (=> d!21165 d!22073))

(declare-fun e!55472 () Option!146)

(declare-fun b!85084 () Bool)

(assert (=> b!85084 (= e!55472 (getValueByKey!140 (t!5196 (toList!734 lt!39315)) (_1!1102 (tuple2!2183 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun c!13789 () Bool)

(declare-fun d!22075 () Bool)

(assert (=> d!22075 (= c!13789 (and ((_ is Cons!1500) (toList!734 lt!39315)) (= (_1!1102 (h!2090 (toList!734 lt!39315))) (_1!1102 (tuple2!2183 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(declare-fun e!55471 () Option!146)

(assert (=> d!22075 (= (getValueByKey!140 (toList!734 lt!39315) (_1!1102 (tuple2!2183 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))) e!55471)))

(declare-fun b!85082 () Bool)

(assert (=> b!85082 (= e!55471 (Some!145 (_2!1102 (h!2090 (toList!734 lt!39315)))))))

(declare-fun b!85083 () Bool)

(assert (=> b!85083 (= e!55471 e!55472)))

(declare-fun c!13790 () Bool)

(assert (=> b!85083 (= c!13790 (and ((_ is Cons!1500) (toList!734 lt!39315)) (not (= (_1!1102 (h!2090 (toList!734 lt!39315))) (_1!1102 (tuple2!2183 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))))

(declare-fun b!85085 () Bool)

(assert (=> b!85085 (= e!55472 None!144)))

(assert (= (and d!22075 c!13789) b!85082))

(assert (= (and d!22075 (not c!13789)) b!85083))

(assert (= (and b!85083 c!13790) b!85084))

(assert (= (and b!85083 (not c!13790)) b!85085))

(declare-fun m!89469 () Bool)

(assert (=> b!85084 m!89469))

(assert (=> b!83525 d!22075))

(declare-fun d!22077 () Bool)

(assert (=> d!22077 (= ($colon$colon!70 e!54631 (ite c!13401 (h!2090 (toList!734 lt!38771)) (tuple2!2183 (_1!1102 lt!38775) (_2!1102 lt!38775)))) (Cons!1500 (ite c!13401 (h!2090 (toList!734 lt!38771)) (tuple2!2183 (_1!1102 lt!38775) (_2!1102 lt!38775))) e!54631))))

(assert (=> bm!7868 d!22077))

(declare-fun b!85088 () Bool)

(declare-fun e!55474 () Option!146)

(assert (=> b!85088 (= e!55474 (getValueByKey!140 (t!5196 (toList!734 lt!39182)) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun d!22079 () Bool)

(declare-fun c!13791 () Bool)

(assert (=> d!22079 (= c!13791 (and ((_ is Cons!1500) (toList!734 lt!39182)) (= (_1!1102 (h!2090 (toList!734 lt!39182))) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(declare-fun e!55473 () Option!146)

(assert (=> d!22079 (= (getValueByKey!140 (toList!734 lt!39182) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))) e!55473)))

(declare-fun b!85086 () Bool)

(assert (=> b!85086 (= e!55473 (Some!145 (_2!1102 (h!2090 (toList!734 lt!39182)))))))

(declare-fun b!85087 () Bool)

(assert (=> b!85087 (= e!55473 e!55474)))

(declare-fun c!13792 () Bool)

(assert (=> b!85087 (= c!13792 (and ((_ is Cons!1500) (toList!734 lt!39182)) (not (= (_1!1102 (h!2090 (toList!734 lt!39182))) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))))

(declare-fun b!85089 () Bool)

(assert (=> b!85089 (= e!55474 None!144)))

(assert (= (and d!22079 c!13791) b!85086))

(assert (= (and d!22079 (not c!13791)) b!85087))

(assert (= (and b!85087 c!13792) b!85088))

(assert (= (and b!85087 (not c!13792)) b!85089))

(declare-fun m!89471 () Bool)

(assert (=> b!85088 m!89471))

(assert (=> b!83325 d!22079))

(assert (=> bm!7856 d!21819))

(assert (=> b!83305 d!21841))

(declare-fun d!22081 () Bool)

(declare-fun lt!40126 () Bool)

(assert (=> d!22081 (= lt!40126 (select (content!89 (t!5196 (toList!734 lt!39004))) lt!38779))))

(declare-fun e!55475 () Bool)

(assert (=> d!22081 (= lt!40126 e!55475)))

(declare-fun res!43869 () Bool)

(assert (=> d!22081 (=> (not res!43869) (not e!55475))))

(assert (=> d!22081 (= res!43869 ((_ is Cons!1500) (t!5196 (toList!734 lt!39004))))))

(assert (=> d!22081 (= (contains!746 (t!5196 (toList!734 lt!39004)) lt!38779) lt!40126)))

(declare-fun b!85090 () Bool)

(declare-fun e!55476 () Bool)

(assert (=> b!85090 (= e!55475 e!55476)))

(declare-fun res!43868 () Bool)

(assert (=> b!85090 (=> res!43868 e!55476)))

(assert (=> b!85090 (= res!43868 (= (h!2090 (t!5196 (toList!734 lt!39004))) lt!38779))))

(declare-fun b!85091 () Bool)

(assert (=> b!85091 (= e!55476 (contains!746 (t!5196 (t!5196 (toList!734 lt!39004))) lt!38779))))

(assert (= (and d!22081 res!43869) b!85090))

(assert (= (and b!85090 (not res!43868)) b!85091))

(assert (=> d!22081 m!87691))

(declare-fun m!89473 () Bool)

(assert (=> d!22081 m!89473))

(declare-fun m!89475 () Bool)

(assert (=> b!85091 m!89475))

(assert (=> b!83483 d!22081))

(declare-fun d!22083 () Bool)

(declare-fun res!43870 () Bool)

(declare-fun e!55477 () Bool)

(assert (=> d!22083 (=> res!43870 e!55477)))

(assert (=> d!22083 (= res!43870 (and ((_ is Cons!1500) (toList!734 lt!39113)) (= (_1!1102 (h!2090 (toList!734 lt!39113))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!22083 (= (containsKey!143 (toList!734 lt!39113) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!55477)))

(declare-fun b!85092 () Bool)

(declare-fun e!55478 () Bool)

(assert (=> b!85092 (= e!55477 e!55478)))

(declare-fun res!43871 () Bool)

(assert (=> b!85092 (=> (not res!43871) (not e!55478))))

(assert (=> b!85092 (= res!43871 (and (or (not ((_ is Cons!1500) (toList!734 lt!39113))) (bvsle (_1!1102 (h!2090 (toList!734 lt!39113))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1500) (toList!734 lt!39113)) (bvslt (_1!1102 (h!2090 (toList!734 lt!39113))) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!85093 () Bool)

(assert (=> b!85093 (= e!55478 (containsKey!143 (t!5196 (toList!734 lt!39113)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!22083 (not res!43870)) b!85092))

(assert (= (and b!85092 res!43871) b!85093))

(assert (=> b!85093 m!85989))

(declare-fun m!89477 () Bool)

(assert (=> b!85093 m!89477))

(assert (=> d!21121 d!22083))

(declare-fun b!85094 () Bool)

(declare-fun e!55482 () Bool)

(declare-fun call!8017 () Bool)

(assert (=> b!85094 (= e!55482 call!8017)))

(declare-fun b!85095 () Bool)

(assert (=> b!85095 (= e!55482 call!8017)))

(declare-fun b!85096 () Bool)

(declare-fun e!55481 () Bool)

(declare-fun e!55480 () Bool)

(assert (=> b!85096 (= e!55481 e!55480)))

(declare-fun res!43873 () Bool)

(assert (=> b!85096 (=> (not res!43873) (not e!55480))))

(declare-fun e!55479 () Bool)

(assert (=> b!85096 (= res!43873 (not e!55479))))

(declare-fun res!43872 () Bool)

(assert (=> b!85096 (=> (not res!43872) (not e!55479))))

(assert (=> b!85096 (= res!43872 (validKeyInArray!0 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun d!22085 () Bool)

(declare-fun res!43874 () Bool)

(assert (=> d!22085 (=> res!43874 e!55481)))

(assert (=> d!22085 (= res!43874 (bvsge (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2147 (_keys!3984 (v!2632 (underlying!289 thiss!992))))))))

(assert (=> d!22085 (= (arrayNoDuplicates!0 (_keys!3984 (v!2632 (underlying!289 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!13279 (Cons!1501 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!13230 (Cons!1501 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) Nil!1502) Nil!1502)) (ite c!13230 (Cons!1501 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) Nil!1502) Nil!1502))) e!55481)))

(declare-fun b!85097 () Bool)

(assert (=> b!85097 (= e!55479 (contains!745 (ite c!13279 (Cons!1501 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!13230 (Cons!1501 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) Nil!1502) Nil!1502)) (ite c!13230 (Cons!1501 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) Nil!1502) Nil!1502)) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!85098 () Bool)

(assert (=> b!85098 (= e!55480 e!55482)))

(declare-fun c!13793 () Bool)

(assert (=> b!85098 (= c!13793 (validKeyInArray!0 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun bm!8014 () Bool)

(assert (=> bm!8014 (= call!8017 (arrayNoDuplicates!0 (_keys!3984 (v!2632 (underlying!289 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!13793 (Cons!1501 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!13279 (Cons!1501 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!13230 (Cons!1501 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) Nil!1502) Nil!1502)) (ite c!13230 (Cons!1501 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) Nil!1502) Nil!1502))) (ite c!13279 (Cons!1501 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!13230 (Cons!1501 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) Nil!1502) Nil!1502)) (ite c!13230 (Cons!1501 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) Nil!1502) Nil!1502)))))))

(assert (= (and d!22085 (not res!43874)) b!85096))

(assert (= (and b!85096 res!43872) b!85097))

(assert (= (and b!85096 res!43873) b!85098))

(assert (= (and b!85098 c!13793) b!85095))

(assert (= (and b!85098 (not c!13793)) b!85094))

(assert (= (or b!85095 b!85094) bm!8014))

(declare-fun m!89479 () Bool)

(assert (=> b!85096 m!89479))

(assert (=> b!85096 m!89479))

(declare-fun m!89481 () Bool)

(assert (=> b!85096 m!89481))

(assert (=> b!85097 m!89479))

(assert (=> b!85097 m!89479))

(declare-fun m!89483 () Bool)

(assert (=> b!85097 m!89483))

(assert (=> b!85098 m!89479))

(assert (=> b!85098 m!89479))

(assert (=> b!85098 m!89481))

(assert (=> bm!8014 m!89479))

(declare-fun m!89485 () Bool)

(assert (=> bm!8014 m!89485))

(assert (=> bm!7806 d!22085))

(assert (=> b!83493 d!21591))

(assert (=> d!21159 d!21161))

(assert (=> d!21159 d!21163))

(assert (=> d!21159 d!21155))

(assert (=> d!21159 d!21157))

(declare-fun b!85099 () Bool)

(declare-fun e!55483 () (_ BitVec 32))

(declare-fun call!8018 () (_ BitVec 32))

(assert (=> b!85099 (= e!55483 call!8018)))

(declare-fun b!85100 () Bool)

(declare-fun e!55484 () (_ BitVec 32))

(assert (=> b!85100 (= e!55484 #b00000000000000000000000000000000)))

(declare-fun b!85101 () Bool)

(assert (=> b!85101 (= e!55484 e!55483)))

(declare-fun c!13794 () Bool)

(assert (=> b!85101 (= c!13794 (validKeyInArray!0 (select (arr!1904 (_keys!3984 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun bm!8015 () Bool)

(assert (=> bm!8015 (= call!8018 (arrayCountValidKeys!0 (_keys!3984 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2147 (_keys!3984 newMap!16))))))

(declare-fun d!22087 () Bool)

(declare-fun lt!40127 () (_ BitVec 32))

(assert (=> d!22087 (and (bvsge lt!40127 #b00000000000000000000000000000000) (bvsle lt!40127 (bvsub (size!2147 (_keys!3984 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!22087 (= lt!40127 e!55484)))

(declare-fun c!13795 () Bool)

(assert (=> d!22087 (= c!13795 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2147 (_keys!3984 newMap!16))))))

(assert (=> d!22087 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2147 (_keys!3984 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2147 (_keys!3984 newMap!16)) (size!2147 (_keys!3984 newMap!16))))))

(assert (=> d!22087 (= (arrayCountValidKeys!0 (_keys!3984 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2147 (_keys!3984 newMap!16))) lt!40127)))

(declare-fun b!85102 () Bool)

(assert (=> b!85102 (= e!55483 (bvadd #b00000000000000000000000000000001 call!8018))))

(assert (= (and d!22087 c!13795) b!85100))

(assert (= (and d!22087 (not c!13795)) b!85101))

(assert (= (and b!85101 c!13794) b!85102))

(assert (= (and b!85101 (not c!13794)) b!85099))

(assert (= (or b!85102 b!85099) bm!8015))

(assert (=> b!85101 m!88549))

(assert (=> b!85101 m!88549))

(assert (=> b!85101 m!88579))

(declare-fun m!89487 () Bool)

(assert (=> bm!8015 m!89487))

(assert (=> bm!7848 d!22087))

(declare-fun d!22089 () Bool)

(declare-fun e!55486 () Bool)

(assert (=> d!22089 e!55486))

(declare-fun res!43875 () Bool)

(assert (=> d!22089 (=> res!43875 e!55486)))

(declare-fun lt!40128 () Bool)

(assert (=> d!22089 (= res!43875 (not lt!40128))))

(declare-fun lt!40131 () Bool)

(assert (=> d!22089 (= lt!40128 lt!40131)))

(declare-fun lt!40130 () Unit!2413)

(declare-fun e!55485 () Unit!2413)

(assert (=> d!22089 (= lt!40130 e!55485)))

(declare-fun c!13796 () Bool)

(assert (=> d!22089 (= c!13796 lt!40131)))

(assert (=> d!22089 (= lt!40131 (containsKey!143 (toList!734 lt!39182) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(assert (=> d!22089 (= (contains!744 lt!39182 (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))) lt!40128)))

(declare-fun b!85103 () Bool)

(declare-fun lt!40129 () Unit!2413)

(assert (=> b!85103 (= e!55485 lt!40129)))

(assert (=> b!85103 (= lt!40129 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 lt!39182) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(assert (=> b!85103 (isDefined!92 (getValueByKey!140 (toList!734 lt!39182) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun b!85104 () Bool)

(declare-fun Unit!2495 () Unit!2413)

(assert (=> b!85104 (= e!55485 Unit!2495)))

(declare-fun b!85105 () Bool)

(assert (=> b!85105 (= e!55486 (isDefined!92 (getValueByKey!140 (toList!734 lt!39182) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(assert (= (and d!22089 c!13796) b!85103))

(assert (= (and d!22089 (not c!13796)) b!85104))

(assert (= (and d!22089 (not res!43875)) b!85105))

(declare-fun m!89489 () Bool)

(assert (=> d!22089 m!89489))

(declare-fun m!89491 () Bool)

(assert (=> b!85103 m!89491))

(assert (=> b!85103 m!86341))

(assert (=> b!85103 m!86341))

(declare-fun m!89493 () Bool)

(assert (=> b!85103 m!89493))

(assert (=> b!85105 m!86341))

(assert (=> b!85105 m!86341))

(assert (=> b!85105 m!89493))

(assert (=> d!20983 d!22089))

(declare-fun b!85108 () Bool)

(declare-fun e!55488 () Option!146)

(assert (=> b!85108 (= e!55488 (getValueByKey!140 (t!5196 lt!39184) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun d!22091 () Bool)

(declare-fun c!13797 () Bool)

(assert (=> d!22091 (= c!13797 (and ((_ is Cons!1500) lt!39184) (= (_1!1102 (h!2090 lt!39184)) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(declare-fun e!55487 () Option!146)

(assert (=> d!22091 (= (getValueByKey!140 lt!39184 (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))) e!55487)))

(declare-fun b!85106 () Bool)

(assert (=> b!85106 (= e!55487 (Some!145 (_2!1102 (h!2090 lt!39184))))))

(declare-fun b!85107 () Bool)

(assert (=> b!85107 (= e!55487 e!55488)))

(declare-fun c!13798 () Bool)

(assert (=> b!85107 (= c!13798 (and ((_ is Cons!1500) lt!39184) (not (= (_1!1102 (h!2090 lt!39184)) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))))

(declare-fun b!85109 () Bool)

(assert (=> b!85109 (= e!55488 None!144)))

(assert (= (and d!22091 c!13797) b!85106))

(assert (= (and d!22091 (not c!13797)) b!85107))

(assert (= (and b!85107 c!13798) b!85108))

(assert (= (and b!85107 (not c!13798)) b!85109))

(declare-fun m!89495 () Bool)

(assert (=> b!85108 m!89495))

(assert (=> d!20983 d!22091))

(declare-fun d!22093 () Bool)

(assert (=> d!22093 (= (getValueByKey!140 lt!39184 (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))) (Some!145 (_2!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun lt!40132 () Unit!2413)

(assert (=> d!22093 (= lt!40132 (choose!493 lt!39184 (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun e!55489 () Bool)

(assert (=> d!22093 e!55489))

(declare-fun res!43876 () Bool)

(assert (=> d!22093 (=> (not res!43876) (not e!55489))))

(assert (=> d!22093 (= res!43876 (isStrictlySorted!284 lt!39184))))

(assert (=> d!22093 (= (lemmaContainsTupThenGetReturnValue!57 lt!39184 (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))) lt!40132)))

(declare-fun b!85110 () Bool)

(declare-fun res!43877 () Bool)

(assert (=> b!85110 (=> (not res!43877) (not e!55489))))

(assert (=> b!85110 (= res!43877 (containsKey!143 lt!39184 (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun b!85111 () Bool)

(assert (=> b!85111 (= e!55489 (contains!746 lt!39184 (tuple2!2183 (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(assert (= (and d!22093 res!43876) b!85110))

(assert (= (and b!85110 res!43877) b!85111))

(assert (=> d!22093 m!86335))

(declare-fun m!89497 () Bool)

(assert (=> d!22093 m!89497))

(declare-fun m!89499 () Bool)

(assert (=> d!22093 m!89499))

(declare-fun m!89501 () Bool)

(assert (=> b!85110 m!89501))

(declare-fun m!89503 () Bool)

(assert (=> b!85111 m!89503))

(assert (=> d!20983 d!22093))

(declare-fun e!55490 () List!1504)

(declare-fun b!85113 () Bool)

(declare-fun c!13802 () Bool)

(declare-fun c!13799 () Bool)

(assert (=> b!85113 (= e!55490 (ite c!13802 (t!5196 (toList!734 (+!105 lt!38771 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))) (ite c!13799 (Cons!1500 (h!2090 (toList!734 (+!105 lt!38771 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))) (t!5196 (toList!734 (+!105 lt!38771 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))) Nil!1501)))))

(declare-fun bm!8016 () Bool)

(declare-fun c!13800 () Bool)

(declare-fun call!8019 () List!1504)

(assert (=> bm!8016 (= call!8019 ($colon$colon!70 e!55490 (ite c!13800 (h!2090 (toList!734 (+!105 lt!38771 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))) (tuple2!2183 (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))))

(declare-fun c!13801 () Bool)

(assert (=> bm!8016 (= c!13801 c!13800)))

(declare-fun b!85114 () Bool)

(declare-fun e!55494 () List!1504)

(declare-fun call!8021 () List!1504)

(assert (=> b!85114 (= e!55494 call!8021)))

(declare-fun b!85115 () Bool)

(declare-fun e!55492 () List!1504)

(assert (=> b!85115 (= e!55492 call!8019)))

(declare-fun bm!8017 () Bool)

(assert (=> bm!8017 (= call!8021 call!8019)))

(declare-fun bm!8018 () Bool)

(declare-fun call!8020 () List!1504)

(assert (=> bm!8018 (= call!8020 call!8021)))

(declare-fun b!85116 () Bool)

(assert (=> b!85116 (= e!55490 (insertStrictlySorted!60 (t!5196 (toList!734 (+!105 lt!38771 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun b!85117 () Bool)

(declare-fun e!55493 () List!1504)

(assert (=> b!85117 (= e!55493 call!8020)))

(declare-fun b!85118 () Bool)

(assert (=> b!85118 (= e!55492 e!55494)))

(assert (=> b!85118 (= c!13802 (and ((_ is Cons!1500) (toList!734 (+!105 lt!38771 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))) (= (_1!1102 (h!2090 (toList!734 (+!105 lt!38771 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(declare-fun b!85119 () Bool)

(declare-fun e!55491 () Bool)

(declare-fun lt!40133 () List!1504)

(assert (=> b!85119 (= e!55491 (contains!746 lt!40133 (tuple2!2183 (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(declare-fun b!85112 () Bool)

(declare-fun res!43879 () Bool)

(assert (=> b!85112 (=> (not res!43879) (not e!55491))))

(assert (=> b!85112 (= res!43879 (containsKey!143 lt!40133 (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun d!22095 () Bool)

(assert (=> d!22095 e!55491))

(declare-fun res!43878 () Bool)

(assert (=> d!22095 (=> (not res!43878) (not e!55491))))

(assert (=> d!22095 (= res!43878 (isStrictlySorted!284 lt!40133))))

(assert (=> d!22095 (= lt!40133 e!55492)))

(assert (=> d!22095 (= c!13800 (and ((_ is Cons!1500) (toList!734 (+!105 lt!38771 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))) (bvslt (_1!1102 (h!2090 (toList!734 (+!105 lt!38771 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(assert (=> d!22095 (isStrictlySorted!284 (toList!734 (+!105 lt!38771 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))))

(assert (=> d!22095 (= (insertStrictlySorted!60 (toList!734 (+!105 lt!38771 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992)))))) lt!40133)))

(declare-fun b!85120 () Bool)

(assert (=> b!85120 (= e!55493 call!8020)))

(declare-fun b!85121 () Bool)

(assert (=> b!85121 (= c!13799 (and ((_ is Cons!1500) (toList!734 (+!105 lt!38771 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784)))) (bvsgt (_1!1102 (h!2090 (toList!734 (+!105 lt!38771 (tuple2!2183 (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) from!355) lt!38784))))) (_1!1102 (tuple2!2183 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(assert (=> b!85121 (= e!55494 e!55493)))

(assert (= (and d!22095 c!13800) b!85115))

(assert (= (and d!22095 (not c!13800)) b!85118))

(assert (= (and b!85118 c!13802) b!85114))

(assert (= (and b!85118 (not c!13802)) b!85121))

(assert (= (and b!85121 c!13799) b!85117))

(assert (= (and b!85121 (not c!13799)) b!85120))

(assert (= (or b!85117 b!85120) bm!8018))

(assert (= (or b!85114 bm!8018) bm!8017))

(assert (= (or b!85115 bm!8017) bm!8016))

(assert (= (and bm!8016 c!13801) b!85116))

(assert (= (and bm!8016 (not c!13801)) b!85113))

(assert (= (and d!22095 res!43878) b!85112))

(assert (= (and b!85112 res!43879) b!85119))

(declare-fun m!89505 () Bool)

(assert (=> d!22095 m!89505))

(declare-fun m!89507 () Bool)

(assert (=> d!22095 m!89507))

(declare-fun m!89509 () Bool)

(assert (=> b!85116 m!89509))

(declare-fun m!89511 () Bool)

(assert (=> bm!8016 m!89511))

(declare-fun m!89513 () Bool)

(assert (=> b!85112 m!89513))

(declare-fun m!89515 () Bool)

(assert (=> b!85119 m!89515))

(assert (=> d!20983 d!22095))

(declare-fun d!22097 () Bool)

(declare-fun e!55496 () Bool)

(assert (=> d!22097 e!55496))

(declare-fun res!43880 () Bool)

(assert (=> d!22097 (=> res!43880 e!55496)))

(declare-fun lt!40134 () Bool)

(assert (=> d!22097 (= res!43880 (not lt!40134))))

(declare-fun lt!40137 () Bool)

(assert (=> d!22097 (= lt!40134 lt!40137)))

(declare-fun lt!40136 () Unit!2413)

(declare-fun e!55495 () Unit!2413)

(assert (=> d!22097 (= lt!40136 e!55495)))

(declare-fun c!13803 () Bool)

(assert (=> d!22097 (= c!13803 lt!40137)))

(assert (=> d!22097 (= lt!40137 (containsKey!143 (toList!734 lt!39315) (_1!1102 (tuple2!2183 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(assert (=> d!22097 (= (contains!744 lt!39315 (_1!1102 (tuple2!2183 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))) lt!40134)))

(declare-fun b!85122 () Bool)

(declare-fun lt!40135 () Unit!2413)

(assert (=> b!85122 (= e!55495 lt!40135)))

(assert (=> b!85122 (= lt!40135 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 lt!39315) (_1!1102 (tuple2!2183 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(assert (=> b!85122 (isDefined!92 (getValueByKey!140 (toList!734 lt!39315) (_1!1102 (tuple2!2183 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun b!85123 () Bool)

(declare-fun Unit!2496 () Unit!2413)

(assert (=> b!85123 (= e!55495 Unit!2496)))

(declare-fun b!85124 () Bool)

(assert (=> b!85124 (= e!55496 (isDefined!92 (getValueByKey!140 (toList!734 lt!39315) (_1!1102 (tuple2!2183 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(assert (= (and d!22097 c!13803) b!85122))

(assert (= (and d!22097 (not c!13803)) b!85123))

(assert (= (and d!22097 (not res!43880)) b!85124))

(declare-fun m!89517 () Bool)

(assert (=> d!22097 m!89517))

(declare-fun m!89519 () Bool)

(assert (=> b!85122 m!89519))

(assert (=> b!85122 m!86745))

(assert (=> b!85122 m!86745))

(declare-fun m!89521 () Bool)

(assert (=> b!85122 m!89521))

(assert (=> b!85124 m!86745))

(assert (=> b!85124 m!86745))

(assert (=> b!85124 m!89521))

(assert (=> d!21091 d!22097))

(declare-fun b!85127 () Bool)

(declare-fun e!55498 () Option!146)

(assert (=> b!85127 (= e!55498 (getValueByKey!140 (t!5196 lt!39317) (_1!1102 (tuple2!2183 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun c!13804 () Bool)

(declare-fun d!22099 () Bool)

(assert (=> d!22099 (= c!13804 (and ((_ is Cons!1500) lt!39317) (= (_1!1102 (h!2090 lt!39317)) (_1!1102 (tuple2!2183 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(declare-fun e!55497 () Option!146)

(assert (=> d!22099 (= (getValueByKey!140 lt!39317 (_1!1102 (tuple2!2183 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))) e!55497)))

(declare-fun b!85125 () Bool)

(assert (=> b!85125 (= e!55497 (Some!145 (_2!1102 (h!2090 lt!39317))))))

(declare-fun b!85126 () Bool)

(assert (=> b!85126 (= e!55497 e!55498)))

(declare-fun c!13805 () Bool)

(assert (=> b!85126 (= c!13805 (and ((_ is Cons!1500) lt!39317) (not (= (_1!1102 (h!2090 lt!39317)) (_1!1102 (tuple2!2183 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))))

(declare-fun b!85128 () Bool)

(assert (=> b!85128 (= e!55498 None!144)))

(assert (= (and d!22099 c!13804) b!85125))

(assert (= (and d!22099 (not c!13804)) b!85126))

(assert (= (and b!85126 c!13805) b!85127))

(assert (= (and b!85126 (not c!13805)) b!85128))

(declare-fun m!89523 () Bool)

(assert (=> b!85127 m!89523))

(assert (=> d!21091 d!22099))

(declare-fun d!22101 () Bool)

(assert (=> d!22101 (= (getValueByKey!140 lt!39317 (_1!1102 (tuple2!2183 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))) (Some!145 (_2!1102 (tuple2!2183 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun lt!40138 () Unit!2413)

(assert (=> d!22101 (= lt!40138 (choose!493 lt!39317 (_1!1102 (tuple2!2183 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun e!55499 () Bool)

(assert (=> d!22101 e!55499))

(declare-fun res!43881 () Bool)

(assert (=> d!22101 (=> (not res!43881) (not e!55499))))

(assert (=> d!22101 (= res!43881 (isStrictlySorted!284 lt!39317))))

(assert (=> d!22101 (= (lemmaContainsTupThenGetReturnValue!57 lt!39317 (_1!1102 (tuple2!2183 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))) lt!40138)))

(declare-fun b!85129 () Bool)

(declare-fun res!43882 () Bool)

(assert (=> b!85129 (=> (not res!43882) (not e!55499))))

(assert (=> b!85129 (= res!43882 (containsKey!143 lt!39317 (_1!1102 (tuple2!2183 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun b!85130 () Bool)

(assert (=> b!85130 (= e!55499 (contains!746 lt!39317 (tuple2!2183 (_1!1102 (tuple2!2183 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(assert (= (and d!22101 res!43881) b!85129))

(assert (= (and b!85129 res!43882) b!85130))

(assert (=> d!22101 m!86739))

(declare-fun m!89525 () Bool)

(assert (=> d!22101 m!89525))

(declare-fun m!89527 () Bool)

(assert (=> d!22101 m!89527))

(declare-fun m!89529 () Bool)

(assert (=> b!85129 m!89529))

(declare-fun m!89531 () Bool)

(assert (=> b!85130 m!89531))

(assert (=> d!21091 d!22101))

(declare-fun c!13806 () Bool)

(declare-fun b!85132 () Bool)

(declare-fun c!13809 () Bool)

(declare-fun e!55500 () List!1504)

(assert (=> b!85132 (= e!55500 (ite c!13809 (t!5196 (toList!734 lt!39121)) (ite c!13806 (Cons!1500 (h!2090 (toList!734 lt!39121)) (t!5196 (toList!734 lt!39121))) Nil!1501)))))

(declare-fun bm!8019 () Bool)

(declare-fun c!13807 () Bool)

(declare-fun call!8022 () List!1504)

(assert (=> bm!8019 (= call!8022 ($colon$colon!70 e!55500 (ite c!13807 (h!2090 (toList!734 lt!39121)) (tuple2!2183 (_1!1102 (tuple2!2183 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))))

(declare-fun c!13808 () Bool)

(assert (=> bm!8019 (= c!13808 c!13807)))

(declare-fun b!85133 () Bool)

(declare-fun e!55504 () List!1504)

(declare-fun call!8024 () List!1504)

(assert (=> b!85133 (= e!55504 call!8024)))

(declare-fun b!85134 () Bool)

(declare-fun e!55502 () List!1504)

(assert (=> b!85134 (= e!55502 call!8022)))

(declare-fun bm!8020 () Bool)

(assert (=> bm!8020 (= call!8024 call!8022)))

(declare-fun bm!8021 () Bool)

(declare-fun call!8023 () List!1504)

(assert (=> bm!8021 (= call!8023 call!8024)))

(declare-fun b!85135 () Bool)

(assert (=> b!85135 (= e!55500 (insertStrictlySorted!60 (t!5196 (toList!734 lt!39121)) (_1!1102 (tuple2!2183 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun b!85136 () Bool)

(declare-fun e!55503 () List!1504)

(assert (=> b!85136 (= e!55503 call!8023)))

(declare-fun b!85137 () Bool)

(assert (=> b!85137 (= e!55502 e!55504)))

(assert (=> b!85137 (= c!13809 (and ((_ is Cons!1500) (toList!734 lt!39121)) (= (_1!1102 (h!2090 (toList!734 lt!39121))) (_1!1102 (tuple2!2183 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(declare-fun b!85138 () Bool)

(declare-fun e!55501 () Bool)

(declare-fun lt!40139 () List!1504)

(assert (=> b!85138 (= e!55501 (contains!746 lt!40139 (tuple2!2183 (_1!1102 (tuple2!2183 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(declare-fun b!85131 () Bool)

(declare-fun res!43884 () Bool)

(assert (=> b!85131 (=> (not res!43884) (not e!55501))))

(assert (=> b!85131 (= res!43884 (containsKey!143 lt!40139 (_1!1102 (tuple2!2183 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))))))

(declare-fun d!22103 () Bool)

(assert (=> d!22103 e!55501))

(declare-fun res!43883 () Bool)

(assert (=> d!22103 (=> (not res!43883) (not e!55501))))

(assert (=> d!22103 (= res!43883 (isStrictlySorted!284 lt!40139))))

(assert (=> d!22103 (= lt!40139 e!55502)))

(assert (=> d!22103 (= c!13807 (and ((_ is Cons!1500) (toList!734 lt!39121)) (bvslt (_1!1102 (h!2090 (toList!734 lt!39121))) (_1!1102 (tuple2!2183 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(assert (=> d!22103 (isStrictlySorted!284 (toList!734 lt!39121))))

(assert (=> d!22103 (= (insertStrictlySorted!60 (toList!734 lt!39121) (_1!1102 (tuple2!2183 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992))))) (_2!1102 (tuple2!2183 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992)))))) lt!40139)))

(declare-fun b!85139 () Bool)

(assert (=> b!85139 (= e!55503 call!8023)))

(declare-fun b!85140 () Bool)

(assert (=> b!85140 (= c!13806 (and ((_ is Cons!1500) (toList!734 lt!39121)) (bvsgt (_1!1102 (h!2090 (toList!734 lt!39121))) (_1!1102 (tuple2!2183 lt!39103 (minValue!2210 (v!2632 (underlying!289 thiss!992))))))))))

(assert (=> b!85140 (= e!55504 e!55503)))

(assert (= (and d!22103 c!13807) b!85134))

(assert (= (and d!22103 (not c!13807)) b!85137))

(assert (= (and b!85137 c!13809) b!85133))

(assert (= (and b!85137 (not c!13809)) b!85140))

(assert (= (and b!85140 c!13806) b!85136))

(assert (= (and b!85140 (not c!13806)) b!85139))

(assert (= (or b!85136 b!85139) bm!8021))

(assert (= (or b!85133 bm!8021) bm!8020))

(assert (= (or b!85134 bm!8020) bm!8019))

(assert (= (and bm!8019 c!13808) b!85135))

(assert (= (and bm!8019 (not c!13808)) b!85132))

(assert (= (and d!22103 res!43883) b!85131))

(assert (= (and b!85131 res!43884) b!85138))

(declare-fun m!89533 () Bool)

(assert (=> d!22103 m!89533))

(declare-fun m!89535 () Bool)

(assert (=> d!22103 m!89535))

(declare-fun m!89537 () Bool)

(assert (=> b!85135 m!89537))

(declare-fun m!89539 () Bool)

(assert (=> bm!8019 m!89539))

(declare-fun m!89541 () Bool)

(assert (=> b!85131 m!89541))

(declare-fun m!89543 () Bool)

(assert (=> b!85138 m!89543))

(assert (=> d!21091 d!22103))

(assert (=> b!83647 d!21329))

(declare-fun d!22105 () Bool)

(declare-fun e!55506 () Bool)

(assert (=> d!22105 e!55506))

(declare-fun res!43885 () Bool)

(assert (=> d!22105 (=> res!43885 e!55506)))

(declare-fun lt!40140 () Bool)

(assert (=> d!22105 (= res!43885 (not lt!40140))))

(declare-fun lt!40143 () Bool)

(assert (=> d!22105 (= lt!40140 lt!40143)))

(declare-fun lt!40142 () Unit!2413)

(declare-fun e!55505 () Unit!2413)

(assert (=> d!22105 (= lt!40142 e!55505)))

(declare-fun c!13810 () Bool)

(assert (=> d!22105 (= c!13810 lt!40143)))

(assert (=> d!22105 (= lt!40143 (containsKey!143 (toList!734 lt!39143) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!22105 (= (contains!744 lt!39143 #b1000000000000000000000000000000000000000000000000000000000000000) lt!40140)))

(declare-fun b!85141 () Bool)

(declare-fun lt!40141 () Unit!2413)

(assert (=> b!85141 (= e!55505 lt!40141)))

(assert (=> b!85141 (= lt!40141 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 lt!39143) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!85141 (isDefined!92 (getValueByKey!140 (toList!734 lt!39143) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!85142 () Bool)

(declare-fun Unit!2497 () Unit!2413)

(assert (=> b!85142 (= e!55505 Unit!2497)))

(declare-fun b!85143 () Bool)

(assert (=> b!85143 (= e!55506 (isDefined!92 (getValueByKey!140 (toList!734 lt!39143) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!22105 c!13810) b!85141))

(assert (= (and d!22105 (not c!13810)) b!85142))

(assert (= (and d!22105 (not res!43885)) b!85143))

(declare-fun m!89545 () Bool)

(assert (=> d!22105 m!89545))

(declare-fun m!89547 () Bool)

(assert (=> b!85141 m!89547))

(assert (=> b!85141 m!87655))

(assert (=> b!85141 m!87655))

(declare-fun m!89549 () Bool)

(assert (=> b!85141 m!89549))

(assert (=> b!85143 m!87655))

(assert (=> b!85143 m!87655))

(assert (=> b!85143 m!89549))

(assert (=> bm!7801 d!22105))

(declare-fun d!22107 () Bool)

(assert (=> d!22107 (isDefined!92 (getValueByKey!140 (toList!734 lt!39040) (_1!1102 lt!38779)))))

(declare-fun lt!40144 () Unit!2413)

(assert (=> d!22107 (= lt!40144 (choose!502 (toList!734 lt!39040) (_1!1102 lt!38779)))))

(declare-fun e!55507 () Bool)

(assert (=> d!22107 e!55507))

(declare-fun res!43886 () Bool)

(assert (=> d!22107 (=> (not res!43886) (not e!55507))))

(assert (=> d!22107 (= res!43886 (isStrictlySorted!284 (toList!734 lt!39040)))))

(assert (=> d!22107 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 lt!39040) (_1!1102 lt!38779)) lt!40144)))

(declare-fun b!85144 () Bool)

(assert (=> b!85144 (= e!55507 (containsKey!143 (toList!734 lt!39040) (_1!1102 lt!38779)))))

(assert (= (and d!22107 res!43886) b!85144))

(assert (=> d!22107 m!86081))

(assert (=> d!22107 m!86081))

(assert (=> d!22107 m!87135))

(declare-fun m!89551 () Bool)

(assert (=> d!22107 m!89551))

(declare-fun m!89553 () Bool)

(assert (=> d!22107 m!89553))

(assert (=> b!85144 m!87131))

(assert (=> b!83760 d!22107))

(assert (=> b!83760 d!21445))

(assert (=> b!83760 d!21123))

(declare-fun d!22109 () Bool)

(declare-fun res!43887 () Bool)

(declare-fun e!55508 () Bool)

(assert (=> d!22109 (=> res!43887 e!55508)))

(assert (=> d!22109 (= res!43887 (and ((_ is Cons!1500) (toList!734 lt!39036)) (= (_1!1102 (h!2090 (toList!734 lt!39036))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!22109 (= (containsKey!143 (toList!734 lt!39036) #b1000000000000000000000000000000000000000000000000000000000000000) e!55508)))

(declare-fun b!85145 () Bool)

(declare-fun e!55509 () Bool)

(assert (=> b!85145 (= e!55508 e!55509)))

(declare-fun res!43888 () Bool)

(assert (=> b!85145 (=> (not res!43888) (not e!55509))))

(assert (=> b!85145 (= res!43888 (and (or (not ((_ is Cons!1500) (toList!734 lt!39036))) (bvsle (_1!1102 (h!2090 (toList!734 lt!39036))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1500) (toList!734 lt!39036)) (bvslt (_1!1102 (h!2090 (toList!734 lt!39036))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!85146 () Bool)

(assert (=> b!85146 (= e!55509 (containsKey!143 (t!5196 (toList!734 lt!39036)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!22109 (not res!43887)) b!85145))

(assert (= (and b!85145 res!43888) b!85146))

(declare-fun m!89555 () Bool)

(assert (=> b!85146 m!89555))

(assert (=> d!20969 d!22109))

(declare-fun d!22111 () Bool)

(assert (=> d!22111 (isDefined!92 (getValueByKey!140 (toList!734 lt!39036) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!40145 () Unit!2413)

(assert (=> d!22111 (= lt!40145 (choose!502 (toList!734 lt!39036) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!55510 () Bool)

(assert (=> d!22111 e!55510))

(declare-fun res!43889 () Bool)

(assert (=> d!22111 (=> (not res!43889) (not e!55510))))

(assert (=> d!22111 (= res!43889 (isStrictlySorted!284 (toList!734 lt!39036)))))

(assert (=> d!22111 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!734 lt!39036) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!40145)))

(declare-fun b!85147 () Bool)

(assert (=> b!85147 (= e!55510 (containsKey!143 (toList!734 lt!39036) (select (arr!1904 (_keys!3984 (v!2632 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!22111 res!43889) b!85147))

(assert (=> d!22111 m!85989))

(assert (=> d!22111 m!86605))

(assert (=> d!22111 m!86605))

(assert (=> d!22111 m!86631))

(assert (=> d!22111 m!85989))

(declare-fun m!89557 () Bool)

(assert (=> d!22111 m!89557))

(assert (=> d!22111 m!89159))

(assert (=> b!85147 m!85989))

(assert (=> b!85147 m!86627))

(assert (=> b!83479 d!22111))

(assert (=> b!83479 d!21399))

(assert (=> b!83479 d!21401))

(declare-fun b!85149 () Bool)

(declare-fun e!55511 () Bool)

(assert (=> b!85149 (= e!55511 tp_is_empty!2527)))

(declare-fun mapNonEmpty!3387 () Bool)

(declare-fun mapRes!3387 () Bool)

(declare-fun tp!8913 () Bool)

(declare-fun e!55512 () Bool)

(assert (=> mapNonEmpty!3387 (= mapRes!3387 (and tp!8913 e!55512))))

(declare-fun mapKey!3387 () (_ BitVec 32))

(declare-fun mapRest!3387 () (Array (_ BitVec 32) ValueCell!920))

(declare-fun mapValue!3387 () ValueCell!920)

(assert (=> mapNonEmpty!3387 (= mapRest!3386 (store mapRest!3387 mapKey!3387 mapValue!3387))))

(declare-fun mapIsEmpty!3387 () Bool)

(assert (=> mapIsEmpty!3387 mapRes!3387))

(declare-fun b!85148 () Bool)

(assert (=> b!85148 (= e!55512 tp_is_empty!2527)))

(declare-fun condMapEmpty!3387 () Bool)

(declare-fun mapDefault!3387 () ValueCell!920)

(assert (=> mapNonEmpty!3386 (= condMapEmpty!3387 (= mapRest!3386 ((as const (Array (_ BitVec 32) ValueCell!920)) mapDefault!3387)))))

(assert (=> mapNonEmpty!3386 (= tp!8912 (and e!55511 mapRes!3387))))

(assert (= (and mapNonEmpty!3386 condMapEmpty!3387) mapIsEmpty!3387))

(assert (= (and mapNonEmpty!3386 (not condMapEmpty!3387)) mapNonEmpty!3387))

(assert (= (and mapNonEmpty!3387 ((_ is ValueCellFull!920) mapValue!3387)) b!85148))

(assert (= (and mapNonEmpty!3386 ((_ is ValueCellFull!920) mapDefault!3387)) b!85149))

(declare-fun m!89559 () Bool)

(assert (=> mapNonEmpty!3387 m!89559))

(declare-fun b!85151 () Bool)

(declare-fun e!55513 () Bool)

(assert (=> b!85151 (= e!55513 tp_is_empty!2527)))

(declare-fun mapNonEmpty!3388 () Bool)

(declare-fun mapRes!3388 () Bool)

(declare-fun tp!8914 () Bool)

(declare-fun e!55514 () Bool)

(assert (=> mapNonEmpty!3388 (= mapRes!3388 (and tp!8914 e!55514))))

(declare-fun mapRest!3388 () (Array (_ BitVec 32) ValueCell!920))

(declare-fun mapValue!3388 () ValueCell!920)

(declare-fun mapKey!3388 () (_ BitVec 32))

(assert (=> mapNonEmpty!3388 (= mapRest!3385 (store mapRest!3388 mapKey!3388 mapValue!3388))))

(declare-fun mapIsEmpty!3388 () Bool)

(assert (=> mapIsEmpty!3388 mapRes!3388))

(declare-fun b!85150 () Bool)

(assert (=> b!85150 (= e!55514 tp_is_empty!2527)))

(declare-fun condMapEmpty!3388 () Bool)

(declare-fun mapDefault!3388 () ValueCell!920)

(assert (=> mapNonEmpty!3385 (= condMapEmpty!3388 (= mapRest!3385 ((as const (Array (_ BitVec 32) ValueCell!920)) mapDefault!3388)))))

(assert (=> mapNonEmpty!3385 (= tp!8911 (and e!55513 mapRes!3388))))

(assert (= (and mapNonEmpty!3385 condMapEmpty!3388) mapIsEmpty!3388))

(assert (= (and mapNonEmpty!3385 (not condMapEmpty!3388)) mapNonEmpty!3388))

(assert (= (and mapNonEmpty!3388 ((_ is ValueCellFull!920) mapValue!3388)) b!85150))

(assert (= (and mapNonEmpty!3385 ((_ is ValueCellFull!920) mapDefault!3388)) b!85151))

(declare-fun m!89561 () Bool)

(assert (=> mapNonEmpty!3388 m!89561))

(declare-fun b_lambda!3761 () Bool)

(assert (= b_lambda!3755 (or (and b!82790 b_free!2221 (= (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) (defaultEntry!2316 newMap!16))) (and b!82787 b_free!2223) b_lambda!3761)))

(declare-fun b_lambda!3763 () Bool)

(assert (= b_lambda!3743 (or (and b!82790 b_free!2221) (and b!82787 b_free!2223 (= (defaultEntry!2316 newMap!16) (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))))) b_lambda!3763)))

(declare-fun b_lambda!3765 () Bool)

(assert (= b_lambda!3751 (or (and b!82790 b_free!2221 (= (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) (defaultEntry!2316 newMap!16))) (and b!82787 b_free!2223) b_lambda!3765)))

(declare-fun b_lambda!3767 () Bool)

(assert (= b_lambda!3731 (or (and b!82790 b_free!2221 (= (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) (defaultEntry!2316 newMap!16))) (and b!82787 b_free!2223) b_lambda!3767)))

(declare-fun b_lambda!3769 () Bool)

(assert (= b_lambda!3759 (or (and b!82790 b_free!2221 (= (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) (defaultEntry!2316 newMap!16))) (and b!82787 b_free!2223) b_lambda!3769)))

(declare-fun b_lambda!3771 () Bool)

(assert (= b_lambda!3733 (or (and b!82790 b_free!2221 (= (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) (defaultEntry!2316 newMap!16))) (and b!82787 b_free!2223) b_lambda!3771)))

(declare-fun b_lambda!3773 () Bool)

(assert (= b_lambda!3757 (or (and b!82790 b_free!2221 (= (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) (defaultEntry!2316 newMap!16))) (and b!82787 b_free!2223) b_lambda!3773)))

(declare-fun b_lambda!3775 () Bool)

(assert (= b_lambda!3753 (or (and b!82790 b_free!2221 (= (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) (defaultEntry!2316 newMap!16))) (and b!82787 b_free!2223) b_lambda!3775)))

(declare-fun b_lambda!3777 () Bool)

(assert (= b_lambda!3741 (or (and b!82790 b_free!2221 (= (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) (defaultEntry!2316 newMap!16))) (and b!82787 b_free!2223) b_lambda!3777)))

(declare-fun b_lambda!3779 () Bool)

(assert (= b_lambda!3745 (or (and b!82790 b_free!2221) (and b!82787 b_free!2223 (= (defaultEntry!2316 newMap!16) (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))))) b_lambda!3779)))

(declare-fun b_lambda!3781 () Bool)

(assert (= b_lambda!3737 (or (and b!82790 b_free!2221 (= (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) (defaultEntry!2316 newMap!16))) (and b!82787 b_free!2223) b_lambda!3781)))

(declare-fun b_lambda!3783 () Bool)

(assert (= b_lambda!3739 (or (and b!82790 b_free!2221 (= (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) (defaultEntry!2316 newMap!16))) (and b!82787 b_free!2223) b_lambda!3783)))

(declare-fun b_lambda!3785 () Bool)

(assert (= b_lambda!3747 (or (and b!82790 b_free!2221 (= (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) (defaultEntry!2316 newMap!16))) (and b!82787 b_free!2223) b_lambda!3785)))

(declare-fun b_lambda!3787 () Bool)

(assert (= b_lambda!3749 (or (and b!82790 b_free!2221 (= (defaultEntry!2316 (v!2632 (underlying!289 thiss!992))) (defaultEntry!2316 newMap!16))) (and b!82787 b_free!2223) b_lambda!3787)))

(check-sat (not d!22025) (not b!83917) (not bm!7977) (not bm!7968) (not b!84553) (not b!84567) (not b!84386) (not d!21791) (not b_lambda!3779) (not b!84886) (not b!83787) (not d!21995) (not b!84909) (not d!21805) (not d!21865) (not b!83834) (not b!84060) (not b!84865) (not bm!7908) (not b!84279) (not b!84787) (not b!83851) (not b!83893) (not b!84334) (not b!84976) (not d!21677) (not b!84506) (not b!84806) (not b!84843) (not b!83986) (not b!85032) (not b!85057) (not d!21803) (not d!22071) (not b!84917) (not b!84139) (not d!22041) (not b!84353) (not d!21233) (not d!21337) (not d!21893) (not b!84597) (not b!84830) (not b!84522) (not b!84538) (not bm!7962) (not b!84676) (not b!85004) (not b!83980) (not b!83858) (not b!84890) (not b!84382) (not d!21923) (not d!22053) (not b!84903) (not d!21327) (not d!21981) (not d!21929) (not d!21781) (not bm!7931) (not bm!7971) (not b!84638) (not b!83978) (not d!21291) (not b!84586) (not b!84158) (not d!21261) (not b!84502) (not b!84471) (not bm!7990) (not bm!7886) (not d!21827) (not b!84434) (not b!84778) (not d!21523) (not d!21239) (not d!21861) (not d!21829) (not b!84673) (not b!84723) (not b!85096) (not b!84479) (not b!85034) (not b!85055) (not b_lambda!3727) (not b!84033) (not b!83882) (not d!21905) (not d!21713) (not b!84871) (not d!21515) (not d!21235) (not d!21369) (not b!84541) (not b!84665) (not b!84581) (not b!84797) (not d!21225) (not b!84936) (not b!83837) (not b!83968) (not b!84324) (not b!85066) (not b!84944) (not b!84836) (not b!84854) (not b!84970) (not b!84234) (not d!21501) (not b!84365) (not b!84621) (not b!85029) (not b!84515) (not d!21211) (not b!84683) (not d!21989) (not b!84706) (not bm!7909) (not d!21663) (not b!84438) (not b!84544) (not b!84230) (not d!21457) (not d!21631) (not b!84987) (not d!21695) (not b!83848) (not d!22045) (not b!83922) (not d!21637) (not b!84181) (not b!84645) (not d!21815) (not d!21957) (not b!84430) (not d!21425) (not mapNonEmpty!3388) (not bm!7947) (not d!22003) (not b!84188) (not d!21853) (not d!21767) (not b!84803) (not b!83993) (not b!84167) (not d!21325) (not b!83901) (not b!84805) (not b!84485) (not b!85070) (not b!84013) (not d!21399) (not b!84605) (not b!84535) (not b!84081) (not b!84529) (not d!21777) (not b!84348) (not bm!7902) (not b!84384) (not bm!7998) (not b!85116) (not b!84048) (not d!21699) (not d!22023) (not b!84249) (not b!84905) (not b!84021) (not b!85127) (not b!84114) (not b!84725) (not b!84603) (not b!84400) (not b!84344) (not b_lambda!3773) (not b!84894) (not d!21229) (not b!83812) (not b!83863) (not b!84383) (not b!84927) (not b!84781) (not b!83840) (not b!84932) (not b!84562) (not bm!8009) (not bm!7978) (not bm!7954) (not b!85077) (not bm!7891) (not b!83983) (not b!84793) (not b!84671) (not b!84608) (not bm!7982) (not d!21731) (not b!84110) (not bm!7985) (not b!84607) (not d!21331) (not b!84107) (not b!84959) (not d!22027) (not b!84588) (not b!84173) (not b!84935) (not b!84963) (not d!21823) (not b!84078) (not b!84740) (not bm!7958) (not b!84979) (not b!84972) (not b!84755) (not b!84163) (not bm!8013) (not b!84921) (not b!84052) (not d!22107) (not bm!7900) (not b!84096) (not d!21409) (not b!84144) (not d!21231) (not d!21389) (not b!83921) (not b!84813) (not b!84760) (not b!84378) (not b_lambda!3775) (not b!84000) (not b!84124) (not b!84165) (not b!83795) (not b!85050) (not b!83963) (not b!84439) (not b!84058) (not b!84328) (not b!84477) (not b!84663) (not b_lambda!3777) (not b!84825) (not d!22051) (not bm!7914) (not d!22093) (not b!83801) (not b!84767) (not b!84531) (not b!84832) (not b_lambda!3705) (not b!84994) (not bm!7975) (not b!84275) (not d!21649) (not d!21529) (not b!84179) (not b_lambda!3781) (not d!21521) (not d!21991) (not b!83944) (not b!84361) (not b!84224) (not b!85012) (not bm!7951) (not bm!8016) (not d!21263) (not b!84335) (not b!83886) (not b!83814) (not b!84851) (not bm!7993) (not b!84227) (not d!21513) (not b!84441) (not b!84475) (not b_lambda!3787) (not d!21919) (not d!21435) (not bm!7994) (not d!21553) (not b!85040) (not b!84644) (not b_lambda!3725) (not d!21209) (not b!84998) (not d!21953) (not b!85065) (not b!84896) (not d!21745) (not b!84960) (not b!85005) (not d!21801) (not b!84484) (not d!21395) (not d!22105) (not b!84460) (not d!22033) (not b!84014) (not d!21471) (not b!83916) (not b!84846) (not b!84192) (not b!84636) (not b!84396) (not d!22111) (not b!84881) (not b!84920) (not b!84046) (not d!21531) (not d!22021) (not b!84095) (not b!84238) (not bm!7901) (not b!84388) (not d!21393) (not bm!7890) (not b!84762) (not b!84436) (not b_lambda!3767) (not d!21799) (not b!84757) (not b!84971) (not d!22059) (not b!85111) (not b!84313) (not bm!7943) (not b_lambda!3761) (not b!84117) (not d!21917) (not b!84426) (not b!85053) (not d!21255) (not d!21701) (not d!22081) (not b!84530) (not b!84327) (not d!21545) (not bm!7904) (not b!84490) (not b!84583) (not b!84371) (not d!21925) (not d!21601) (not d!21771) (not d!21547) (not b!85146) (not b!84118) (not d!21867) (not b!84202) (not b!84145) (not d!21207) (not b!84589) (not d!21257) (not d!22037) (not b!85093) (not b!84320) (not d!22017) (not d!21837) (not b!84350) (not d!21551) (not b!84330) (not b!84039) (not d!21539) (not b!84499) (not b!83819) (not b!83788) (not d!21421) (not bm!7935) (not b!84398) (not b!85138) (not bm!8015) (not d!21415) (not b!84204) (not b!84134) (not bm!7948) (not b!83874) (not b!84955) (not b!84390) (not d!21963) (not b!84950) (not d!21295) (not d!22095) (not b!84777) (not b!84878) (not b!83955) (not bm!8019) (not b!84153) (not d!21965) (not b!84931) (not b!83807) (not b!84992) (not b!84029) (not d!21765) (not d!21689) (not b!84667) (not b!83941) (not d!21927) b_and!5149 (not bm!7986) (not b!84993) (not bm!8001) (not b!83988) (not d!21575) (not b!84753) (not b!84814) (not b!84368) (not d!21463) (not b!84590) (not b!84352) (not b!83970) (not b!85074) (not d!21363) (not b!84799) (not d!21899) (not b!84736) (not d!21333) (not b!84245) (not d!21605) (not b!84984) (not bm!7917) (not b!85043) (not b!85011) (not d!21427) (not b!84860) (not b!85088) (not d!21361) (not b!84549) (not d!21825) (not b!84319) (not b!84277) (not bm!8002) (not d!21795) (not b!85112) (not b!84003) (not b!84142) (not bm!7923) (not b!84728) (not bm!7936) (not b!84904) (not b!83966) (not d!21221) (not b!83933) (not b!84580) (not b!83845) (not b!85017) (not b!84137) (not b!85135) (not b!83898) (not d!22089) (not d!21309) (not b!84810) (not d!21757) (not b!84809) (not b!84425) (not b!84937) (not bm!8014) (not b!85013) (not b!84557) (not b!84804) (not d!22035) (not b!83947) (not d!21613) (not d!21773) (not b!84699) (not d!21895) (not d!21945) (not b!84669) (not b!84801) (not d!21783) (not b!84564) (not b!84363) (not d!21281) (not b!84940) (not b!84422) (not b!84901) (not d!21525) (not d!21505) (not b!84838) (not b!83797) (not bm!7932) (not b!85103) (not b!84358) (not b!84624) (not d!21969) (not b!83908) (not b!84915) (not b!84898) (not b!84087) (not b!85147) (not b_next!2221) (not b!85097) (not b!84858) (not b!84947) (not d!22001) (not d!21561) (not b_lambda!3697) (not d!21557) (not d!21549) (not b!84520) (not bm!7965) (not bm!7976) (not b!84467) (not d!21831) (not b!84161) (not b!84085) (not b!84447) (not d!22039) (not d!21985) (not d!21293) (not b!85001) (not d!21357) (not b!84630) (not d!21687) (not b!85119) (not b!84863) (not d!21931) (not b_lambda!3721) (not b!84341) (not bm!7957) (not b!84232) (not b!84782) (not d!21491) (not b_lambda!3735) (not bm!7940) (not b!84011) (not d!21569) (not d!21509) (not b!83793) (not d!22011) (not b!83951) (not b!84694) (not b!84025) (not b!83785) (not d!21775) (not d!21453) (not d!21739) (not b!83796) (not b!84517) (not b!84811) (not b!83943) (not b!85068) (not d!21269) (not d!21809) (not d!21473) (not d!21461) (not b!84629) (not b!84616) (not b!83820) (not d!21247) (not b!84795) (not b!84912) (not d!21863) (not b!84394) (not bm!8003) (not b!84578) (not d!21667) (not b!83825) (not bm!7938) (not d!21315) (not b!84278) (not b!84329) (not b!84743) (not d!21347) (not b!83855) (not b!84376) (not d!21811) (not d!21997) (not bm!7930) (not b!85049) (not d!21441) (not b!85059) (not b!84643) (not d!21203) (not b_lambda!3783) (not bm!7899) (not d!21493) (not d!22009) (not bm!7959) (not b!85130) (not d!21305) (not b!84493) (not b!84775) (not b!84721) (not b!84462) (not d!21503) (not b!84785) (not b!83866) (not b!84247) (not b!84006) (not bm!7920) (not b!84828) (not d!21429) (not d!21527) (not bm!7937) (not b!84764) (not b!84482) (not d!21537) (not b!84150) (not d!21511) (not b!84316) (not b!84068) (not b!83975) (not b!84146) (not b!84349) (not d!21477) (not b!84554) (not d!21559) (not d!21467) (not bm!7880) (not b!83890) (not d!21813) (not b!84617) (not d!22043) (not d!21935) (not b!83810) (not bm!7874) (not b!84680) (not b!85122) (not b!84452) (not d!21955) (not d!21519) (not b!83817) (not b!84610) (not b!83919) (not b!84837) (not b!84717) (not b!84527) (not b!84326) (not b!84710) (not d!21459) (not bm!7972) (not d!21279) (not d!21729) (not d!21903) (not b!83946) (not bm!7979) (not b!84206) (not b!83923) (not b!84510) (not b!83972) (not b!84056) (not b!85076) (not b!84883) (not bm!8010) (not b!84948) (not d!21817) (not b!84054) (not d!21787) (not d!21617) (not b!84195) (not b!84840) (not d!21833) (not b!84486) (not b!84340) (not b_next!2223) (not bm!7944) (not bm!7889) (not d!21821) (not b!85035) (not d!21993) (not b!84412) (not b!84186) (not b!83991) (not d!21607) (not b!84233) (not b!84524) (not b!84821) tp_is_empty!2527 (not b!84177) (not b!85141) (not b!85039) (not b!84649) (not b!84660) (not b!85108) (not d!21753) (not b!84925) (not b!84122) (not d!21651) (not b!84965) (not b!84641) (not d!21855) (not d!21889) (not b!85020) (not b!84738) (not d!21479) (not b!83928) (not d!21343) (not b!84050) (not b!84424) (not d!22031) (not b!84841) (not b!83936) (not d!21869) (not d!22029) (not b!84405) (not d!21411) (not b!85131) (not b!85084) (not b!84952) (not b!85144) (not b!84668) (not d!21285) (not d!21555) (not bm!7896) (not b_lambda!3785) (not b!84661) (not d!22103) (not b!84241) (not d!21939) (not b!84446) (not b!83869) (not bm!7877) b_and!5151 (not b!83821) (not b!84933) (not d!21355) (not b!85081) (not d!21535) (not b!84168) (not b!85105) (not b!83790) (not b!84448) (not b!84880) (not b!84513) (not d!21317) (not bm!7893) (not b!84857) (not b!84464) (not b!84417) (not b!85101) (not b!84420) (not b!84044) (not b!84547) (not d!21797) (not d!21761) (not b!83998) (not d!21299) (not b!85010) (not bm!7911) (not b!85124) (not b!84184) (not b!84687) (not d!21683) (not b!84678) (not b!84126) (not d!21737) (not b!84551) (not b!84579) (not b!84225) (not b!84714) (not d!21253) (not d!21937) (not bm!7995) (not b!84131) (not b!83996) (not b_lambda!3765) (not b!85091) (not b!84333) (not b!83850) (not b!85072) (not b!84831) (not d!21345) (not d!21661) (not d!21301) (not b!84346) (not d!21819) (not d!21587) (not b!84615) (not b!84309) (not d!21987) (not b!85129) (not b!84357) (not bm!7883) (not d!21201) (not mapNonEmpty!3387) (not b!84577) (not d!21665) (not d!21303) (not b!84739) (not d!21215) (not d!22019) (not b!84444) (not d!21541) (not b!84403) (not b!83804) (not b!84187) (not d!21465) (not d!21685) (not b!84089) (not d!21741) (not b!84031) (not d!21975) (not bm!7907) (not b!84203) (not b!84848) (not b_lambda!3707) (not b!84866) (not b!84432) (not b!84662) (not b!84497) (not d!21533) (not b!84332) (not b!84399) (not b!84017) (not b!84429) (not b!83930) (not b!84652) (not b!84752) (not d!22101) (not b_lambda!3723) (not b!84302) (not d!21709) (not b_lambda!3729) (not b!84205) (not d!21645) (not b!85007) (not b!85025) (not b!84103) (not d!21241) (not b!84428) (not b!84968) (not b!84570) (not b!84200) (not b!84770) (not d!21843) (not d!21265) (not b!84392) (not b!83958) (not b!84792) (not b!85062) (not b!83861) (not b!84379) (not b!84071) (not b!84893) (not d!21251) (not b!84874) (not d!22015) (not d!21445) (not b!84923) (not b_lambda!3771) (not b!84075) (not d!21625) (not b!84929) (not b!85098) (not b!84409) (not d!21657) (not bm!7988) (not d!21371) (not b!84601) (not b!84342) (not b!85079) (not b!85042) (not b!84834) (not b!84094) (not d!21367) (not b!84808) (not b!83877) (not b!84958) (not b!83786) (not b!84354) (not bm!7980) (not d!21591) (not b!84170) (not d!21835) (not b!85047) (not b!83868) (not b!84712) (not b!84988) (not b!83926) (not b!83990) (not b!85110) (not b!83894) (not b!83910) (not d!21693) (not d!21581) (not b!84709) (not d!21287) (not b!84954) (not b!84634) (not b!84594) (not d!21675) (not d!21973) (not b!83842) (not b!85048) (not d!21633) (not bm!8006) (not d!21839) (not b!84560) (not d!21217) (not b!83870) (not b!83831) (not b!84198) (not b!84812) (not b!84711) (not b!84867) (not b!84656) (not bm!7987) (not b!85044) (not b!83918) (not d!21759) (not b!84338) (not bm!7960) (not b!84322) (not b!84839) (not b!84092) (not d!21413) (not b!84356) (not b!84962) (not b!85038) (not d!22097) (not b!85037) (not d!21359) (not b!84062) (not b_lambda!3763) (not b!84281) (not b!84036) (not b!84455) (not d!21443) (not b!84047) (not d!21629) (not b!85143) (not d!21543) (not d!21439) (not b!84731) (not b_lambda!3709) (not b!84788) (not b!84780) (not b!83906) (not b!84631) (not b!83828) (not b!84136) (not b!84120) (not b!84817) (not d!21297) (not b!83783) (not d!21567) (not d!21219) (not b!84990) (not d!21715) (not b!84919) (not b!84658) (not d!21245) (not b!84100) (not d!21727) (not d!21407) (not b!84575) (not d!21723) (not b_lambda!3769) (not b!83950) (not b!84613) (not b!84703) (not d!21671) (not b!84690) (not b!84800))
(check-sat b_and!5149 b_and!5151 (not b_next!2221) (not b_next!2223))
